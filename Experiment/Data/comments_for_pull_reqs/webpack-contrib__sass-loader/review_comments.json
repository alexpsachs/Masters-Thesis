[
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/36619900",
        "pull_request_review_id": null,
        "id": 36619900,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE5OTAw",
        "diff_hunk": "@@ -237,7 +237,7 @@ module.exports = function (content) {\n             return result.css.toString();\n         } catch (err) {\n             formatSassError(err);\n-            err.file && this.dependency(err.file);\n+            err.file && addNormalizedDependency(err.file);",
        "path": "index.js",
        "position": 23,
        "original_position": 23,
        "commit_id": "a30f819668e7f68ea65298d485214fc1f363df11",
        "original_commit_id": "a30f819668e7f68ea65298d485214fc1f363df11",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't think that this is necessary. `formatSassError` [is already normalizing it](https://github.com/strayiker/sass-loader/blob/c51fff0c25d633b4df010e6ba3a95027d43c04ad/index.js#L55).\n",
        "created_at": "2015-08-10T10:57:08Z",
        "updated_at": "2015-08-10T10:57:08Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/141#discussion_r36619900",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/141",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/36619900"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/141#discussion_r36619900"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/141"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/36619930",
        "pull_request_review_id": null,
        "id": 36619930,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE5OTMw",
        "diff_hunk": "@@ -160,7 +160,7 @@ module.exports = function (content) {\n             }\n             // Add the resolvedFilename as dependency. Although we're also using stats.includedFiles, this might come\n             // in handy when an error occurs. In this case, we don't get stats.includedFiles from node-sass.\n-            self.dependency(resolvedFilename);\n+            addNormalizedDependency(resolvedFilename);",
        "path": "index.js",
        "position": 14,
        "original_position": 14,
        "commit_id": "a30f819668e7f68ea65298d485214fc1f363df11",
        "original_commit_id": "a30f819668e7f68ea65298d485214fc1f363df11",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "webpack returns normalized paths afaik\n",
        "created_at": "2015-08-10T10:57:40Z",
        "updated_at": "2015-08-10T10:57:40Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/141#discussion_r36619930",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/141",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/36619930"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/141#discussion_r36619930"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/141"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/41193338",
        "pull_request_review_id": null,
        "id": 41193338,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkzMzM4",
        "diff_hunk": "@@ -231,7 +231,18 @@ module.exports = function (content) {\n     // indentedSyntax is a boolean flag\n     opt.indentedSyntax = Boolean(opt.indentedSyntax);\n \n-    opt.importer = getWebpackImporter();\n+    // `node-sass`'s importer takes an array of functions. Since `parseQuery` doesn't allow functions,\n+    // `opt.importer` has to be a path or array of paths that, once `require`d, return importer functions.\n+    opt.importer = []\n+        .concat(opt.importer || [])",
        "path": "index.js",
        "position": null,
        "original_position": 8,
        "commit_id": "18ca85f2c56d86d5ff5cf402b7e04b625d6519cb",
        "original_commit_id": "d865bc1796ed0b969f26cd354c2d3c15a899271f",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This could easier been written like:\n\n``` javascript\nopt.importer = (opt.importer || [])\n    .concat(getWebpackImporter())\n```\n",
        "created_at": "2015-10-05T20:30:11Z",
        "updated_at": "2015-10-07T22:35:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/170#discussion_r41193338",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/170",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/41193338"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/170#discussion_r41193338"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/170"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/41193663",
        "pull_request_review_id": null,
        "id": 41193663,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkzNjYz",
        "diff_hunk": "@@ -231,7 +231,18 @@ module.exports = function (content) {\n     // indentedSyntax is a boolean flag\n     opt.indentedSyntax = Boolean(opt.indentedSyntax);\n \n-    opt.importer = getWebpackImporter();\n+    // `node-sass`'s importer takes an array of functions. Since `parseQuery` doesn't allow functions,\n+    // `opt.importer` has to be a path or array of paths that, once `require`d, return importer functions.\n+    opt.importer = []\n+        .concat(opt.importer || [])",
        "path": "index.js",
        "position": null,
        "original_position": 8,
        "commit_id": "18ca85f2c56d86d5ff5cf402b7e04b625d6519cb",
        "original_commit_id": "d865bc1796ed0b969f26cd354c2d3c15a899271f",
        "user": {
            "login": "pmowrer",
            "id": 356320,
            "node_id": "MDQ6VXNlcjM1NjMyMA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/356320?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmowrer",
            "html_url": "https://github.com/pmowrer",
            "followers_url": "https://api.github.com/users/pmowrer/followers",
            "following_url": "https://api.github.com/users/pmowrer/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmowrer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmowrer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmowrer/subscriptions",
            "organizations_url": "https://api.github.com/users/pmowrer/orgs",
            "repos_url": "https://api.github.com/users/pmowrer/repos",
            "events_url": "https://api.github.com/users/pmowrer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmowrer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`opt.importer` may be a string (to mirror `node-sass`s `importer` field which takes a function or array of functions).\n",
        "created_at": "2015-10-05T20:32:51Z",
        "updated_at": "2015-10-07T22:35:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/170#discussion_r41193663",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/170",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/41193663"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/170#discussion_r41193663"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/170"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/104744577",
        "pull_request_review_id": 25595020,
        "id": 104744577,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDc0NDU3Nw==",
        "diff_hunk": "@@ -43,6 +43,12 @@ function sassLoader(content) {\n         addNormalizedDependency\n     ));\n \n+    // Skip empty files, otherwise it will stop webpack, see issue #21\n+    if (options.data.trim() === \"\") {\n+        callback(null, \"\");",
        "path": "lib/loader.js",
        "position": 6,
        "original_position": 6,
        "commit_id": "462ae5f49cdf8048833f7c159f1f9bf62b022b14",
        "original_commit_id": "462ae5f49cdf8048833f7c159f1f9bf62b022b14",
        "user": {
            "login": "michael-ciniawsky",
            "id": 5419992,
            "node_id": "MDQ6VXNlcjU0MTk5OTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5419992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-ciniawsky",
            "html_url": "https://github.com/michael-ciniawsky",
            "followers_url": "https://api.github.com/users/michael-ciniawsky/followers",
            "following_url": "https://api.github.com/users/michael-ciniawsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/michael-ciniawsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michael-ciniawsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michael-ciniawsky/subscriptions",
            "organizations_url": "https://api.github.com/users/michael-ciniawsky/orgs",
            "repos_url": "https://api.github.com/users/michael-ciniawsky/repos",
            "events_url": "https://api.github.com/users/michael-ciniawsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michael-ciniawsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "```js\r\nif (options.data.trim() === \"\") return callback(null, \"\");\r\n```\r\n\r\n?  \ud83d\ude43 ",
        "created_at": "2017-03-07T18:40:59Z",
        "updated_at": "2017-03-07T18:40:59Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/398#discussion_r104744577",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/398",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/104744577"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/398#discussion_r104744577"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/398"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/104806463",
        "pull_request_review_id": 25659506,
        "id": 104806463,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDgwNjQ2Mw==",
        "diff_hunk": "@@ -43,6 +43,12 @@ function sassLoader(content) {\n         addNormalizedDependency\n     ));\n \n+    // Skip empty files, otherwise it will stop webpack, see issue #21\n+    if (options.data.trim() === \"\") {\n+        callback(null, \"\");",
        "path": "lib/loader.js",
        "position": 6,
        "original_position": 6,
        "commit_id": "462ae5f49cdf8048833f7c159f1f9bf62b022b14",
        "original_commit_id": "462ae5f49cdf8048833f7c159f1f9bf62b022b14",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Noooo, I don't like that style (and my global eslint complains about inconsistent return values) \ud83d\ude01 ",
        "created_at": "2017-03-07T23:19:45Z",
        "updated_at": "2017-03-07T23:19:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/398#discussion_r104806463",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/398",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/104806463"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/398#discussion_r104806463"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/398"
            }
        },
        "in_reply_to_id": 104744577
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/104809584",
        "pull_request_review_id": 25662773,
        "id": 104809584,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDgwOTU4NA==",
        "diff_hunk": "@@ -43,6 +43,12 @@ function sassLoader(content) {\n         addNormalizedDependency\n     ));\n \n+    // Skip empty files, otherwise it will stop webpack, see issue #21\n+    if (options.data.trim() === \"\") {\n+        callback(null, \"\");",
        "path": "lib/loader.js",
        "position": 6,
        "original_position": 6,
        "commit_id": "462ae5f49cdf8048833f7c159f1f9bf62b022b14",
        "original_commit_id": "462ae5f49cdf8048833f7c159f1f9bf62b022b14",
        "user": {
            "login": "michael-ciniawsky",
            "id": 5419992,
            "node_id": "MDQ6VXNlcjU0MTk5OTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5419992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-ciniawsky",
            "html_url": "https://github.com/michael-ciniawsky",
            "followers_url": "https://api.github.com/users/michael-ciniawsky/followers",
            "following_url": "https://api.github.com/users/michael-ciniawsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/michael-ciniawsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michael-ciniawsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michael-ciniawsky/subscriptions",
            "organizations_url": "https://api.github.com/users/michael-ciniawsky/orgs",
            "repos_url": "https://api.github.com/users/michael-ciniawsky/repos",
            "events_url": "https://api.github.com/users/michael-ciniawsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michael-ciniawsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\ud83d\ude22 ",
        "created_at": "2017-03-07T23:39:27Z",
        "updated_at": "2017-03-07T23:39:27Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/398#discussion_r104809584",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/398",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/104809584"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/398#discussion_r104809584"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/398"
            }
        },
        "in_reply_to_id": 104744577
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/122014259",
        "pull_request_review_id": 44092047,
        "id": 122014259,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjAxNDI1OQ==",
        "diff_hunk": "@@ -55,13 +44,24 @@\n     \"raw-loader\": \"^0.5.1\",\n     \"should\": \"^11.2.0\",\n     \"style-loader\": \"^0.18.2\",\n-    \"webpack\": \"^2.2.1\",\n     \"webpack-dev-server\": \"^2.4.1\",\n     \"webpack-merge\": \"^4.0.0\"\n   },\n-  \"files\": [\n-    \"lib\",\n-    \"README\",\n-    \"LICENSE\"\n-  ]\n+  \"engines\": {\n+    \"node\": \">= 4.3 < 5.0.0 || >= 5.10\"\n+  },\n+  \"peerDependencies\": {\n+    \"node-sass\": \"^4.0.0\",\n+    \"webpack\": \"^2.0.0 || >= 3.0.0-rc.0 || ^3.0.0\"\n+  },\n+  \"keywords\": [\n+    \"sass\",\n+    \"libsass\",\n+    \"webpack\",\n+    \"loader\"\n+  ],\n+  \"repository\": {\n+    \"type\": \"git\",\n+    \"url\": \"git://github.com/webpack-contrib/sass-loader.git\"\n+  }",
        "path": "package.json",
        "position": null,
        "original_position": 80,
        "commit_id": "a3dea517f3f9fe9bd2cc7a446be294d6370a0a65",
        "original_commit_id": "5dae8c5089c3c9d12ee82a0f514072c6a0d5dee3",
        "user": {
            "login": "michael-ciniawsky",
            "id": 5419992,
            "node_id": "MDQ6VXNlcjU0MTk5OTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5419992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-ciniawsky",
            "html_url": "https://github.com/michael-ciniawsky",
            "followers_url": "https://api.github.com/users/michael-ciniawsky/followers",
            "following_url": "https://api.github.com/users/michael-ciniawsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/michael-ciniawsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michael-ciniawsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michael-ciniawsky/subscriptions",
            "organizations_url": "https://api.github.com/users/michael-ciniawsky/orgs",
            "repos_url": "https://api.github.com/users/michael-ciniawsky/repos",
            "events_url": "https://api.github.com/users/michael-ciniawsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michael-ciniawsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "```\r\n\"bugs\": {\r\n  \"url\": \"https://github.com/webpack-contrib/sass-loader/issues\"\r\n },\r\n \"homepage\": \"https://github.com/webpack-contrib/sass-loader\",\r\n```",
        "created_at": "2017-06-14T17:34:50Z",
        "updated_at": "2017-06-14T17:39:25Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/475#discussion_r122014259",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/475",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/122014259"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/475#discussion_r122014259"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/475"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/122014855",
        "pull_request_review_id": 44092743,
        "id": 122014855,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjAxNDg1NQ==",
        "diff_hunk": "@@ -60,8 +60,8 @@\n     \"webpack\",\n     \"loader\"\n   ],\n-  \"repository\": {",
        "path": "package.json",
        "position": null,
        "original_position": 4,
        "commit_id": "a3dea517f3f9fe9bd2cc7a446be294d6370a0a65",
        "original_commit_id": "f409dea05b5b9e0a408d92067574ec101073e995",
        "user": {
            "login": "michael-ciniawsky",
            "id": 5419992,
            "node_id": "MDQ6VXNlcjU0MTk5OTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5419992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-ciniawsky",
            "html_url": "https://github.com/michael-ciniawsky",
            "followers_url": "https://api.github.com/users/michael-ciniawsky/followers",
            "following_url": "https://api.github.com/users/michael-ciniawsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/michael-ciniawsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michael-ciniawsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michael-ciniawsky/subscriptions",
            "organizations_url": "https://api.github.com/users/michael-ciniawsky/orgs",
            "repos_url": "https://api.github.com/users/michael-ciniawsky/repos",
            "events_url": "https://api.github.com/users/michael-ciniawsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michael-ciniawsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This can still stay :)",
        "created_at": "2017-06-14T17:37:18Z",
        "updated_at": "2017-06-14T17:39:25Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/475#discussion_r122014855",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/475",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/122014855"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/475#discussion_r122014855"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/475"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171140780",
        "pull_request_review_id": 99940803,
        "id": 171140780,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTE0MDc4MA==",
        "diff_hunk": "@@ -65,7 +65,7 @@ function normalizeOptions(loaderContext, content, webpackImporter) {\n     }\n \n     // Allow passing custom importers to `node-sass`. Accepts `Function` or an array of `Function`s.\n-    options.importer = options.importer ? proxyCustomImporters(options.importer, resourcePath) : [];\n+    options.importer = options.importer ? proxyCustomImporters(options.importer, resourcePath, loaderContext) : [];",
        "path": "lib/normalizeOptions.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "435ebfd8d656e1016fdeee9ff3042e937dfdb913",
        "original_commit_id": "435ebfd8d656e1016fdeee9ff3042e937dfdb913",
        "user": {
            "login": "michael-ciniawsky",
            "id": 5419992,
            "node_id": "MDQ6VXNlcjU0MTk5OTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5419992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-ciniawsky",
            "html_url": "https://github.com/michael-ciniawsky",
            "followers_url": "https://api.github.com/users/michael-ciniawsky/followers",
            "following_url": "https://api.github.com/users/michael-ciniawsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/michael-ciniawsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michael-ciniawsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michael-ciniawsky/subscriptions",
            "organizations_url": "https://api.github.com/users/michael-ciniawsky/orgs",
            "repos_url": "https://api.github.com/users/michael-ciniawsky/repos",
            "events_url": "https://api.github.com/users/michael-ciniawsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michael-ciniawsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "In case this is lands `resourcePath` && `loaderContext` should be merged here, since `resourcePath` is already on the `loaderContext` ",
        "created_at": "2018-02-28T04:27:41Z",
        "updated_at": "2018-02-28T04:28:24Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/513#discussion_r171140780",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/513",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171140780"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/513#discussion_r171140780"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/513"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171189883",
        "pull_request_review_id": 99997594,
        "id": 171189883,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTE4OTg4Mw==",
        "diff_hunk": "@@ -50,24 +50,19 @@\n     \"webpack-merge\": \"^4.0.0\"\n   },\n   \"engines\": {\n-    \"node\": \">= 4.3 < 5.0.0 || >= 5.10\"\n+    \"node\": \">= 4.8 < 5.0.0 || >= 5.10\"",
        "path": "package.json",
        "position": null,
        "original_position": 5,
        "commit_id": "8f93f1320a582cb2bbafadda3597d26e3e8774c9",
        "original_commit_id": "3c836c726721466821b8bc3a026168b158baea92",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Breaking change :disappointed: ",
        "created_at": "2018-02-28T09:48:33Z",
        "updated_at": "2018-03-01T22:38:13Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/541#discussion_r171189883",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/541",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171189883"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/541#discussion_r171189883"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/541"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171189983",
        "pull_request_review_id": 99997732,
        "id": 171189983,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTE4OTk4Mw==",
        "diff_hunk": "@@ -50,24 +50,19 @@\n     \"webpack-merge\": \"^4.0.0\"\n   },\n   \"engines\": {\n-    \"node\": \">= 4.3 < 5.0.0 || >= 5.10\"\n+    \"node\": \">= 4.8 < 5.0.0 || >= 5.10\"\n   },\n   \"peerDependencies\": {\n     \"node-sass\": \"^4.0.0\",\n-    \"webpack\": \"^2.0.0 || >= 3.0.0-rc.0 || ^3.0.0\"\n+    \"webpack\": \"^2.0.0 || ^3.0.0 || ^4.0.0\"",
        "path": "package.json",
        "position": 5,
        "original_position": 10,
        "commit_id": "8f93f1320a582cb2bbafadda3597d26e3e8774c9",
        "original_commit_id": "3c836c726721466821b8bc3a026168b158baea92",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Also breaking change :disappointed: Let's add just `^4.0.0`",
        "created_at": "2018-02-28T09:48:59Z",
        "updated_at": "2018-03-01T22:38:13Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/541#discussion_r171189983",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/541",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171189983"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/541#discussion_r171189983"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/541"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171417827",
        "pull_request_review_id": 100267491,
        "id": 171417827,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTQxNzgyNw==",
        "diff_hunk": "@@ -50,24 +50,19 @@\n     \"webpack-merge\": \"^4.0.0\"\n   },\n   \"engines\": {\n-    \"node\": \">= 4.3 < 5.0.0 || >= 5.10\"\n+    \"node\": \">= 4.8 < 5.0.0 || >= 5.10\"",
        "path": "package.json",
        "position": null,
        "original_position": 5,
        "commit_id": "8f93f1320a582cb2bbafadda3597d26e3e8774c9",
        "original_commit_id": "3c836c726721466821b8bc3a026168b158baea92",
        "user": {
            "login": "michael-ciniawsky",
            "id": 5419992,
            "node_id": "MDQ6VXNlcjU0MTk5OTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5419992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-ciniawsky",
            "html_url": "https://github.com/michael-ciniawsky",
            "followers_url": "https://api.github.com/users/michael-ciniawsky/followers",
            "following_url": "https://api.github.com/users/michael-ciniawsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/michael-ciniawsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michael-ciniawsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michael-ciniawsky/subscriptions",
            "organizations_url": "https://api.github.com/users/michael-ciniawsky/orgs",
            "repos_url": "https://api.github.com/users/michael-ciniawsky/repos",
            "events_url": "https://api.github.com/users/michael-ciniawsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michael-ciniawsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why is this a breaking change ? But I can revert it in this PR doesn't matter...",
        "created_at": "2018-02-28T23:17:02Z",
        "updated_at": "2018-03-01T22:38:13Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/541#discussion_r171417827",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/541",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171417827"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/541#discussion_r171417827"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/541"
            }
        },
        "in_reply_to_id": 171189883
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171418309",
        "pull_request_review_id": 100268054,
        "id": 171418309,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTQxODMwOQ==",
        "diff_hunk": "@@ -50,24 +50,19 @@\n     \"webpack-merge\": \"^4.0.0\"\n   },\n   \"engines\": {\n-    \"node\": \">= 4.3 < 5.0.0 || >= 5.10\"\n+    \"node\": \">= 4.8 < 5.0.0 || >= 5.10\"\n   },\n   \"peerDependencies\": {\n     \"node-sass\": \"^4.0.0\",\n-    \"webpack\": \"^2.0.0 || >= 3.0.0-rc.0 || ^3.0.0\"\n+    \"webpack\": \"^2.0.0 || ^3.0.0 || ^4.0.0\"",
        "path": "package.json",
        "position": 5,
        "original_position": 10,
        "commit_id": "8f93f1320a582cb2bbafadda3597d26e3e8774c9",
        "original_commit_id": "3c836c726721466821b8bc3a026168b158baea92",
        "user": {
            "login": "michael-ciniawsky",
            "id": 5419992,
            "node_id": "MDQ6VXNlcjU0MTk5OTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5419992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-ciniawsky",
            "html_url": "https://github.com/michael-ciniawsky",
            "followers_url": "https://api.github.com/users/michael-ciniawsky/followers",
            "following_url": "https://api.github.com/users/michael-ciniawsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/michael-ciniawsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michael-ciniawsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michael-ciniawsky/subscriptions",
            "organizations_url": "https://api.github.com/users/michael-ciniawsky/orgs",
            "repos_url": "https://api.github.com/users/michael-ciniawsky/repos",
            "events_url": "https://api.github.com/users/michael-ciniawsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michael-ciniawsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why is this a breaking change ? Polluting this prop with `alpha`, `beta`, `rc` versions is really not a good idea and most folks should have updated to the latest `webpack@3.0.0` by now I assumed.  ",
        "created_at": "2018-02-28T23:19:38Z",
        "updated_at": "2018-03-01T22:38:13Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/541#discussion_r171418309",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/541",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171418309"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/541#discussion_r171418309"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/541"
            }
        },
        "in_reply_to_id": 171189983
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171510639",
        "pull_request_review_id": 100372423,
        "id": 171510639,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTUxMDYzOQ==",
        "diff_hunk": "@@ -50,24 +50,19 @@\n     \"webpack-merge\": \"^4.0.0\"\n   },\n   \"engines\": {\n-    \"node\": \">= 4.3 < 5.0.0 || >= 5.10\"\n+    \"node\": \">= 4.8 < 5.0.0 || >= 5.10\"",
        "path": "package.json",
        "position": null,
        "original_position": 5,
        "commit_id": "8f93f1320a582cb2bbafadda3597d26e3e8774c9",
        "original_commit_id": "3c836c726721466821b8bc3a026168b158baea92",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@michael-ciniawsky let's do it in next major :+1: ",
        "created_at": "2018-03-01T10:02:22Z",
        "updated_at": "2018-03-01T22:38:13Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/541#discussion_r171510639",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/541",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171510639"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/541#discussion_r171510639"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/541"
            }
        },
        "in_reply_to_id": 171189883
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171510777",
        "pull_request_review_id": 100372583,
        "id": 171510777,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTUxMDc3Nw==",
        "diff_hunk": "@@ -50,24 +50,19 @@\n     \"webpack-merge\": \"^4.0.0\"\n   },\n   \"engines\": {\n-    \"node\": \">= 4.3 < 5.0.0 || >= 5.10\"\n+    \"node\": \">= 4.8 < 5.0.0 || >= 5.10\"\n   },\n   \"peerDependencies\": {\n     \"node-sass\": \"^4.0.0\",\n-    \"webpack\": \"^2.0.0 || >= 3.0.0-rc.0 || ^3.0.0\"\n+    \"webpack\": \"^2.0.0 || ^3.0.0 || ^4.0.0\"",
        "path": "package.json",
        "position": 5,
        "original_position": 10,
        "commit_id": "8f93f1320a582cb2bbafadda3597d26e3e8774c9",
        "original_commit_id": "3c836c726721466821b8bc3a026168b158baea92",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@michael-ciniawsky someone can use `rc.0` and it can break build, but i agree with you",
        "created_at": "2018-03-01T10:02:54Z",
        "updated_at": "2018-03-01T22:38:13Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/541#discussion_r171510777",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/541",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171510777"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/541#discussion_r171510777"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/541"
            }
        },
        "in_reply_to_id": 171189983
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171717111",
        "pull_request_review_id": 100621019,
        "id": 171717111,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTcxNzExMQ==",
        "diff_hunk": "@@ -50,24 +50,19 @@\n     \"webpack-merge\": \"^4.0.0\"\n   },\n   \"engines\": {\n-    \"node\": \">= 4.3 < 5.0.0 || >= 5.10\"\n+    \"node\": \">= 4.8 < 5.0.0 || >= 5.10\"",
        "path": "package.json",
        "position": null,
        "original_position": 5,
        "commit_id": "8f93f1320a582cb2bbafadda3597d26e3e8774c9",
        "original_commit_id": "3c836c726721466821b8bc3a026168b158baea92",
        "user": {
            "login": "michael-ciniawsky",
            "id": 5419992,
            "node_id": "MDQ6VXNlcjU0MTk5OTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5419992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-ciniawsky",
            "html_url": "https://github.com/michael-ciniawsky",
            "followers_url": "https://api.github.com/users/michael-ciniawsky/followers",
            "following_url": "https://api.github.com/users/michael-ciniawsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/michael-ciniawsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michael-ciniawsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michael-ciniawsky/subscriptions",
            "organizations_url": "https://api.github.com/users/michael-ciniawsky/orgs",
            "repos_url": "https://api.github.com/users/michael-ciniawsky/repos",
            "events_url": "https://api.github.com/users/michael-ciniawsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michael-ciniawsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "done",
        "created_at": "2018-03-01T22:39:33Z",
        "updated_at": "2018-03-01T22:39:34Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/541#discussion_r171717111",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/541",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171717111"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/541#discussion_r171717111"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/541"
            }
        },
        "in_reply_to_id": 171189883
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171717193",
        "pull_request_review_id": 100621116,
        "id": 171717193,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTcxNzE5Mw==",
        "diff_hunk": "@@ -50,24 +50,19 @@\n     \"webpack-merge\": \"^4.0.0\"\n   },\n   \"engines\": {\n-    \"node\": \">= 4.3 < 5.0.0 || >= 5.10\"\n+    \"node\": \">= 4.8 < 5.0.0 || >= 5.10\"\n   },\n   \"peerDependencies\": {\n     \"node-sass\": \"^4.0.0\",\n-    \"webpack\": \"^2.0.0 || >= 3.0.0-rc.0 || ^3.0.0\"\n+    \"webpack\": \"^2.0.0 || ^3.0.0 || ^4.0.0\"",
        "path": "package.json",
        "position": 5,
        "original_position": 10,
        "commit_id": "8f93f1320a582cb2bbafadda3597d26e3e8774c9",
        "original_commit_id": "3c836c726721466821b8bc3a026168b158baea92",
        "user": {
            "login": "michael-ciniawsky",
            "id": 5419992,
            "node_id": "MDQ6VXNlcjU0MTk5OTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5419992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-ciniawsky",
            "html_url": "https://github.com/michael-ciniawsky",
            "followers_url": "https://api.github.com/users/michael-ciniawsky/followers",
            "following_url": "https://api.github.com/users/michael-ciniawsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/michael-ciniawsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michael-ciniawsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michael-ciniawsky/subscriptions",
            "organizations_url": "https://api.github.com/users/michael-ciniawsky/orgs",
            "repos_url": "https://api.github.com/users/michael-ciniawsky/repos",
            "events_url": "https://api.github.com/users/michael-ciniawsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michael-ciniawsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Then it breaks :)",
        "created_at": "2018-03-01T22:39:58Z",
        "updated_at": "2018-03-01T22:39:58Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/541#discussion_r171717193",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/541",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171717193"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/541#discussion_r171717193"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/541"
            }
        },
        "in_reply_to_id": 171189983
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/169688064",
        "pull_request_review_id": 98254772,
        "id": 169688064,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2OTY4ODA2NA==",
        "diff_hunk": "@@ -47,7 +47,8 @@\n     \"standard-version\": \"^4.2.0\",\n     \"style-loader\": \"^0.18.2\",\n     \"webpack-dev-server\": \"^2.4.1\",\n-    \"webpack-merge\": \"^4.0.0\"\n+    \"webpack-merge\": \"^4.0.0\",\n+    \"webpack\": \"^3.11.0\"",
        "path": "package.json",
        "position": null,
        "original_position": 18,
        "commit_id": "a9a3a78ff447c0e9d1add3c30f135c772e49626d",
        "original_commit_id": "cc37c8b18d1e2d5d7995ff06d56bd6dc38ddf302",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why is there a dev dependency on `webpack`?",
        "created_at": "2018-02-21T16:07:47Z",
        "updated_at": "2018-03-02T11:05:25Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/538#discussion_r169688064",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/538",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/169688064"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/538#discussion_r169688064"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/538"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/169701708",
        "pull_request_review_id": 98271082,
        "id": 169701708,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2OTcwMTcwOA==",
        "diff_hunk": "@@ -47,7 +47,8 @@\n     \"standard-version\": \"^4.2.0\",\n     \"style-loader\": \"^0.18.2\",\n     \"webpack-dev-server\": \"^2.4.1\",\n-    \"webpack-merge\": \"^4.0.0\"\n+    \"webpack-merge\": \"^4.0.0\",\n+    \"webpack\": \"^3.11.0\"",
        "path": "package.json",
        "position": null,
        "original_position": 18,
        "commit_id": "a9a3a78ff447c0e9d1add3c30f135c772e49626d",
        "original_commit_id": "cc37c8b18d1e2d5d7995ff06d56bd6dc38ddf302",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@jhnns need for local tests, remove from PR?",
        "created_at": "2018-02-21T16:45:21Z",
        "updated_at": "2018-03-02T11:05:25Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/538#discussion_r169701708",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/538",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/169701708"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/538#discussion_r169701708"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/538"
            }
        },
        "in_reply_to_id": 169688064
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171140001",
        "pull_request_review_id": 99939974,
        "id": 171140001,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTE0MDAwMQ==",
        "diff_hunk": "@@ -47,7 +47,8 @@\n     \"standard-version\": \"^4.2.0\",\n     \"style-loader\": \"^0.18.2\",\n     \"webpack-dev-server\": \"^2.4.1\",\n-    \"webpack-merge\": \"^4.0.0\"\n+    \"webpack-merge\": \"^4.0.0\",\n+    \"webpack\": \"^3.11.0\"",
        "path": "package.json",
        "position": null,
        "original_position": 18,
        "commit_id": "a9a3a78ff447c0e9d1add3c30f135c772e49626d",
        "original_commit_id": "cc37c8b18d1e2d5d7995ff06d56bd6dc38ddf302",
        "user": {
            "login": "michael-ciniawsky",
            "id": 5419992,
            "node_id": "MDQ6VXNlcjU0MTk5OTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5419992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-ciniawsky",
            "html_url": "https://github.com/michael-ciniawsky",
            "followers_url": "https://api.github.com/users/michael-ciniawsky/followers",
            "following_url": "https://api.github.com/users/michael-ciniawsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/michael-ciniawsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michael-ciniawsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michael-ciniawsky/subscriptions",
            "organizations_url": "https://api.github.com/users/michael-ciniawsky/orgs",
            "repos_url": "https://api.github.com/users/michael-ciniawsky/repos",
            "events_url": "https://api.github.com/users/michael-ciniawsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michael-ciniawsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What's the status here ? :)",
        "created_at": "2018-02-28T04:20:15Z",
        "updated_at": "2018-03-02T11:05:25Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/538#discussion_r171140001",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/538",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171140001"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/538#discussion_r171140001"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/538"
            }
        },
        "in_reply_to_id": 169688064
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171717797",
        "pull_request_review_id": 100621848,
        "id": 171717797,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTcxNzc5Nw==",
        "diff_hunk": "@@ -47,7 +47,8 @@\n     \"standard-version\": \"^4.2.0\",\n     \"style-loader\": \"^0.18.2\",\n     \"webpack-dev-server\": \"^2.4.1\",\n-    \"webpack-merge\": \"^4.0.0\"\n+    \"webpack-merge\": \"^4.0.0\",\n+    \"webpack\": \"^3.11.0\"",
        "path": "package.json",
        "position": null,
        "original_position": 18,
        "commit_id": "a9a3a78ff447c0e9d1add3c30f135c772e49626d",
        "original_commit_id": "cc37c8b18d1e2d5d7995ff06d56bd6dc38ddf302",
        "user": {
            "login": "michael-ciniawsky",
            "id": 5419992,
            "node_id": "MDQ6VXNlcjU0MTk5OTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5419992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-ciniawsky",
            "html_url": "https://github.com/michael-ciniawsky",
            "followers_url": "https://api.github.com/users/michael-ciniawsky/followers",
            "following_url": "https://api.github.com/users/michael-ciniawsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/michael-ciniawsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michael-ciniawsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michael-ciniawsky/subscriptions",
            "organizations_url": "https://api.github.com/users/michael-ciniawsky/orgs",
            "repos_url": "https://api.github.com/users/michael-ciniawsky/repos",
            "events_url": "https://api.github.com/users/michael-ciniawsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michael-ciniawsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@evilebottnawi Can you remove it for now please ? :)",
        "created_at": "2018-03-01T22:42:34Z",
        "updated_at": "2018-03-02T11:05:25Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/538#discussion_r171717797",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/538",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171717797"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/538#discussion_r171717797"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/538"
            }
        },
        "in_reply_to_id": 169688064
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171799026",
        "pull_request_review_id": 100715936,
        "id": 171799026,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTc5OTAyNg==",
        "diff_hunk": "@@ -47,7 +47,8 @@\n     \"standard-version\": \"^4.2.0\",\n     \"style-loader\": \"^0.18.2\",\n     \"webpack-dev-server\": \"^2.4.1\",\n-    \"webpack-merge\": \"^4.0.0\"\n+    \"webpack-merge\": \"^4.0.0\",\n+    \"webpack\": \"^3.11.0\"",
        "path": "package.json",
        "position": null,
        "original_position": 18,
        "commit_id": "a9a3a78ff447c0e9d1add3c30f135c772e49626d",
        "original_commit_id": "cc37c8b18d1e2d5d7995ff06d56bd6dc38ddf302",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@michael-ciniawsky let's do it :+1: ",
        "created_at": "2018-03-02T09:28:43Z",
        "updated_at": "2018-03-02T11:05:25Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/538#discussion_r171799026",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/538",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/171799026"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/538#discussion_r171799026"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/538"
            }
        },
        "in_reply_to_id": 169688064
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161701455",
        "pull_request_review_id": 89031332,
        "id": 161701455,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTcwMTQ1NQ==",
        "diff_hunk": "@@ -12,7 +11,21 @@ const pify = require(\"pify\");\n // fs tasks when running the custom importer code.\n // This can be removed as soon as node-sass implements a fix for this.\n const threadPoolSize = process.env.UV_THREADPOOL_SIZE || 4;\n-const asyncSassJobQueue = async.queue(sass.render, threadPoolSize - 1);\n+let asyncSassJobQueue = null;\n+let loadingError = null;\n+\n+try {\n+    const sass = require(\"node-sass\");\n+    const sassVersion = require(\"node-sass/package.json\").version;\n+\n+    if (/^4[.]/.test(sassVersion)) {",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 19,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "dfa5cb887cdc819878e168a3d08e02987f54651e",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think better to check `>= 4`, maybe in future we can have `5`",
        "created_at": "2018-01-16T09:35:56Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161701455",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161701455"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161701455"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161705535",
        "pull_request_review_id": 89036198,
        "id": 161705535,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTcwNTUzNQ==",
        "diff_hunk": "@@ -12,7 +11,21 @@ const pify = require(\"pify\");\n // fs tasks when running the custom importer code.\n // This can be removed as soon as node-sass implements a fix for this.\n const threadPoolSize = process.env.UV_THREADPOOL_SIZE || 4;\n-const asyncSassJobQueue = async.queue(sass.render, threadPoolSize - 1);\n+let asyncSassJobQueue = null;\n+let loadingError = null;\n+\n+try {\n+    const sass = require(\"node-sass\");\n+    const sassVersion = require(\"node-sass/package.json\").version;\n+\n+    if (/^4[.]/.test(sassVersion)) {",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 19,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "dfa5cb887cdc819878e168a3d08e02987f54651e",
        "user": {
            "login": "michael-ciniawsky",
            "id": 5419992,
            "node_id": "MDQ6VXNlcjU0MTk5OTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5419992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-ciniawsky",
            "html_url": "https://github.com/michael-ciniawsky",
            "followers_url": "https://api.github.com/users/michael-ciniawsky/followers",
            "following_url": "https://api.github.com/users/michael-ciniawsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/michael-ciniawsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michael-ciniawsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michael-ciniawsky/subscriptions",
            "organizations_url": "https://api.github.com/users/michael-ciniawsky/orgs",
            "repos_url": "https://api.github.com/users/michael-ciniawsky/repos",
            "events_url": "https://api.github.com/users/michael-ciniawsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michael-ciniawsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yep, please check for greater than  \r\n\r\n```js\r\nif (Number(sassVersion[0]) >= 4) {}\r\n```",
        "created_at": "2018-01-16T09:52:17Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161705535",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161705535"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161705535"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        },
        "in_reply_to_id": 161701455
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161705858",
        "pull_request_review_id": 89036198,
        "id": 161705858,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTcwNTg1OA==",
        "diff_hunk": "@@ -12,7 +11,21 @@ const pify = require(\"pify\");\n // fs tasks when running the custom importer code.\n // This can be removed as soon as node-sass implements a fix for this.\n const threadPoolSize = process.env.UV_THREADPOOL_SIZE || 4;\n-const asyncSassJobQueue = async.queue(sass.render, threadPoolSize - 1);\n+let asyncSassJobQueue = null;\n+let loadingError = null;\n+\n+try {\n+    const sass = require(\"node-sass\");\n+    const sassVersion = require(\"node-sass/package.json\").version;\n+\n+    if (/^4[.]/.test(sassVersion)) {\n+        asyncSassJobQueue = async.queue(sass.render, threadPoolSize - 1);\n+    } else {\n+        loadingError = new Error(\"The installed version of \\`node-sass\\` is not compatible (expected: 4.x, actual: \" + sassVersion + \").\");",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 22,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "dfa5cb887cdc819878e168a3d08e02987f54651e",
        "user": {
            "login": "michael-ciniawsky",
            "id": 5419992,
            "node_id": "MDQ6VXNlcjU0MTk5OTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5419992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-ciniawsky",
            "html_url": "https://github.com/michael-ciniawsky",
            "followers_url": "https://api.github.com/users/michael-ciniawsky/followers",
            "following_url": "https://api.github.com/users/michael-ciniawsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/michael-ciniawsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michael-ciniawsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michael-ciniawsky/subscriptions",
            "organizations_url": "https://api.github.com/users/michael-ciniawsky/orgs",
            "repos_url": "https://api.github.com/users/michael-ciniawsky/repos",
            "events_url": "https://api.github.com/users/michael-ciniawsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michael-ciniawsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`throw` here and catch the `{Error}` in (L27+) instead of an assignment please",
        "created_at": "2018-01-16T09:53:20Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161705858",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161705858"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161705858"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161753202",
        "pull_request_review_id": 89091634,
        "id": 161753202,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTc1MzIwMg==",
        "diff_hunk": "@@ -12,7 +11,21 @@ const pify = require(\"pify\");\n // fs tasks when running the custom importer code.\n // This can be removed as soon as node-sass implements a fix for this.\n const threadPoolSize = process.env.UV_THREADPOOL_SIZE || 4;\n-const asyncSassJobQueue = async.queue(sass.render, threadPoolSize - 1);\n+let asyncSassJobQueue = null;\n+let loadingError = null;\n+\n+try {\n+    const sass = require(\"node-sass\");\n+    const sassVersion = require(\"node-sass/package.json\").version;\n+\n+    if (/^4[.]/.test(sassVersion)) {",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 19,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "dfa5cb887cdc819878e168a3d08e02987f54651e",
        "user": {
            "login": "Timer",
            "id": 616428,
            "node_id": "MDQ6VXNlcjYxNjQyOA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/616428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Timer",
            "html_url": "https://github.com/Timer",
            "followers_url": "https://api.github.com/users/Timer/followers",
            "following_url": "https://api.github.com/users/Timer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Timer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Timer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Timer/subscriptions",
            "organizations_url": "https://api.github.com/users/Timer/orgs",
            "repos_url": "https://api.github.com/users/Timer/repos",
            "events_url": "https://api.github.com/users/Timer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Timer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What if we're not compatible with the `node-sass` v5 API?",
        "created_at": "2018-01-16T13:18:25Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161753202",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161753202"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161753202"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        },
        "in_reply_to_id": 161701455
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161753638",
        "pull_request_review_id": 89092150,
        "id": 161753638,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTc1MzYzOA==",
        "diff_hunk": "@@ -12,7 +11,21 @@ const pify = require(\"pify\");\n // fs tasks when running the custom importer code.\n // This can be removed as soon as node-sass implements a fix for this.\n const threadPoolSize = process.env.UV_THREADPOOL_SIZE || 4;\n-const asyncSassJobQueue = async.queue(sass.render, threadPoolSize - 1);\n+let asyncSassJobQueue = null;\n+let loadingError = null;\n+\n+try {\n+    const sass = require(\"node-sass\");\n+    const sassVersion = require(\"node-sass/package.json\").version;\n+\n+    if (/^4[.]/.test(sassVersion)) {\n+        asyncSassJobQueue = async.queue(sass.render, threadPoolSize - 1);\n+    } else {\n+        loadingError = new Error(\"The installed version of \\`node-sass\\` is not compatible (expected: 4.x, actual: \" + sassVersion + \").\");",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 22,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "dfa5cb887cdc819878e168a3d08e02987f54651e",
        "user": {
            "login": "Timer",
            "id": 616428,
            "node_id": "MDQ6VXNlcjYxNjQyOA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/616428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Timer",
            "html_url": "https://github.com/Timer",
            "followers_url": "https://api.github.com/users/Timer/followers",
            "following_url": "https://api.github.com/users/Timer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Timer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Timer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Timer/subscriptions",
            "organizations_url": "https://api.github.com/users/Timer/orgs",
            "repos_url": "https://api.github.com/users/Timer/repos",
            "events_url": "https://api.github.com/users/Timer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Timer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good point. This will work better when we add support for things other than `node-sass` or something else bombs out.",
        "created_at": "2018-01-16T13:20:22Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161753638",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161753638"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161753638"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        },
        "in_reply_to_id": 161705858
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161757623",
        "pull_request_review_id": 89096777,
        "id": 161757623,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTc1NzYyMw==",
        "diff_hunk": "@@ -12,7 +11,21 @@ const pify = require(\"pify\");\n // fs tasks when running the custom importer code.\n // This can be removed as soon as node-sass implements a fix for this.\n const threadPoolSize = process.env.UV_THREADPOOL_SIZE || 4;",
        "path": "lib/loader.js",
        "position": 10,
        "original_position": 10,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "2cb3fa32ad9c2f02dbc82a3fbef1b0c9b8c92c3a",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Let move this variables before `asyncSassJobQueue = async.queue(sass.render, threadPoolSize - 1);`, it don't have sense in top of file",
        "created_at": "2018-01-16T13:36:37Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161757623",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161757623"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161757623"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161758403",
        "pull_request_review_id": 89097711,
        "id": 161758403,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTc1ODQwMw==",
        "diff_hunk": "@@ -12,7 +11,21 @@ const pify = require(\"pify\");\n // fs tasks when running the custom importer code.\n // This can be removed as soon as node-sass implements a fix for this.\n const threadPoolSize = process.env.UV_THREADPOOL_SIZE || 4;",
        "path": "lib/loader.js",
        "position": 10,
        "original_position": 10,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "2cb3fa32ad9c2f02dbc82a3fbef1b0c9b8c92c3a",
        "user": {
            "login": "Timer",
            "id": 616428,
            "node_id": "MDQ6VXNlcjYxNjQyOA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/616428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Timer",
            "html_url": "https://github.com/Timer",
            "followers_url": "https://api.github.com/users/Timer/followers",
            "following_url": "https://api.github.com/users/Timer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Timer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Timer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Timer/subscriptions",
            "organizations_url": "https://api.github.com/users/Timer/orgs",
            "repos_url": "https://api.github.com/users/Timer/repos",
            "events_url": "https://api.github.com/users/Timer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Timer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Makes sense. I should've thought of this. \ud83d\ude1d ",
        "created_at": "2018-01-16T13:39:39Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161758403",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161758403"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161758403"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        },
        "in_reply_to_id": 161757623
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161760939",
        "pull_request_review_id": 89100650,
        "id": 161760939,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTc2MDkzOQ==",
        "diff_hunk": "@@ -35,6 +49,15 @@ function sassLoader(content) {\n         throw new Error(\"Synchronous compilation is not supported anymore. See https://github.com/webpack-contrib/sass-loader/issues/333\");\n     }\n \n+    if (asyncSassJobQueue == null) {",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 43,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "dcf7388694f4ef05fcd5c247376d066e0494c557",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Last note :smile: Seems we can avoid this block, just throw error in `catch` instead `loadingError = e;`",
        "created_at": "2018-01-16T13:49:32Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161760939",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161760939"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161760939"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161763016",
        "pull_request_review_id": 89102832,
        "id": 161763016,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTc2MzAxNg==",
        "diff_hunk": "@@ -35,6 +49,15 @@ function sassLoader(content) {\n         throw new Error(\"Synchronous compilation is not supported anymore. See https://github.com/webpack-contrib/sass-loader/issues/333\");\n     }\n \n+    if (asyncSassJobQueue == null) {",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 43,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "dcf7388694f4ef05fcd5c247376d066e0494c557",
        "user": {
            "login": "Timer",
            "id": 616428,
            "node_id": "MDQ6VXNlcjYxNjQyOA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/616428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Timer",
            "html_url": "https://github.com/Timer",
            "followers_url": "https://api.github.com/users/Timer/followers",
            "following_url": "https://api.github.com/users/Timer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Timer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Timer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Timer/subscriptions",
            "organizations_url": "https://api.github.com/users/Timer/orgs",
            "repos_url": "https://api.github.com/users/Timer/repos",
            "events_url": "https://api.github.com/users/Timer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Timer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is it safe to throw an error at require-time? I figured you'd want them surfaced as webpack compiler errors -- I'm not sure how this works.",
        "created_at": "2018-01-16T13:56:44Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161763016",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161763016"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161763016"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        },
        "in_reply_to_id": 161760939
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161764252",
        "pull_request_review_id": 89104269,
        "id": 161764252,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTc2NDI1Mg==",
        "diff_hunk": "@@ -35,6 +49,15 @@ function sassLoader(content) {\n         throw new Error(\"Synchronous compilation is not supported anymore. See https://github.com/webpack-contrib/sass-loader/issues/333\");\n     }\n \n+    if (asyncSassJobQueue == null) {",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 43,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "dcf7388694f4ef05fcd5c247376d066e0494c557",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@Timer Yep, it is not compilation error. It does not make sense because all attempts to compile `sass/scss` return error in callback. I think better throw error as fast as possible. @michael-ciniawsky what do you think about this?\r\n",
        "created_at": "2018-01-16T14:01:07Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161764252",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161764252"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161764252"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        },
        "in_reply_to_id": 161760939
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161773080",
        "pull_request_review_id": 89114395,
        "id": 161773080,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTc3MzA4MA==",
        "diff_hunk": "@@ -35,6 +49,15 @@ function sassLoader(content) {\n         throw new Error(\"Synchronous compilation is not supported anymore. See https://github.com/webpack-contrib/sass-loader/issues/333\");\n     }\n \n+    if (asyncSassJobQueue == null) {",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 43,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "dcf7388694f4ef05fcd5c247376d066e0494c557",
        "user": {
            "login": "Timer",
            "id": 616428,
            "node_id": "MDQ6VXNlcjYxNjQyOA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/616428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Timer",
            "html_url": "https://github.com/Timer",
            "followers_url": "https://api.github.com/users/Timer/followers",
            "following_url": "https://api.github.com/users/Timer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Timer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Timer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Timer/subscriptions",
            "organizations_url": "https://api.github.com/users/Timer/orgs",
            "repos_url": "https://api.github.com/users/Timer/repos",
            "events_url": "https://api.github.com/users/Timer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Timer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Wouldn't webpack's `bail` option cause it to stop on the first? I'm no expert here, just asking questions.",
        "created_at": "2018-01-16T14:32:01Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161773080",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161773080"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161773080"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        },
        "in_reply_to_id": 161760939
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161835669",
        "pull_request_review_id": 89188397,
        "id": 161835669,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTgzNTY2OQ==",
        "diff_hunk": "@@ -35,6 +49,15 @@ function sassLoader(content) {\n         throw new Error(\"Synchronous compilation is not supported anymore. See https://github.com/webpack-contrib/sass-loader/issues/333\");\n     }\n \n+    if (asyncSassJobQueue == null) {",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 43,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "dcf7388694f4ef05fcd5c247376d066e0494c557",
        "user": {
            "login": "michael-ciniawsky",
            "id": 5419992,
            "node_id": "MDQ6VXNlcjU0MTk5OTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5419992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-ciniawsky",
            "html_url": "https://github.com/michael-ciniawsky",
            "followers_url": "https://api.github.com/users/michael-ciniawsky/followers",
            "following_url": "https://api.github.com/users/michael-ciniawsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/michael-ciniawsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michael-ciniawsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michael-ciniawsky/subscriptions",
            "organizations_url": "https://api.github.com/users/michael-ciniawsky/orgs",
            "repos_url": "https://api.github.com/users/michael-ciniawsky/repos",
            "events_url": "https://api.github.com/users/michael-ciniawsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michael-ciniawsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I also think this block is redundant with the `try/catch` (L13+) and version check, but not \ud83d\udcaf \ud83d\ude1b  \r\n\r\n```diff\r\n- let loadingError = null;\r\n\r\ntry {\r\n    const sass = require(\"node-sass\");\r\n    const sassVersion = require(\"node-sass/package.json\").version;\r\n\r\n    if (Number(sassVersion[0]) >= 4) {\r\n        // This queue makes sure node-sass leaves one thread available for executing\r\n        // fs tasks when running the custom importer code.\r\n        // This can be removed as soon as node-sass implements a fix for this.\r\n        const threadPoolSize = process.env.UV_THREADPOOL_SIZE || 4;\r\n\r\n        asyncSassJobQueue = async.queue(sass.render, threadPoolSize - 1);\r\n+       // Maybe not needed (see comment)       \r\n+       if (asyncSassJobQueue === null) {\r\n+           throw new Error(\"Please install `node-sass >= 4.x` to use `sass-loader`.\")\r\n+       }\r\n    } else {\r\n        throw new Error(\"The installed version of \\`node-sass\\` is not compatible (expected: >=4.x, actual: \" + sassVersion + \").\");\r\n    }\r\n} catch (err) {\r\n+  // Catches 'both' (first thrown) {Error} thrown in the try block \r\n+   callback(err);\r\n\r\n+   return;\r\n}\r\n\r\n...\r\n\r\n-    if (asyncSassJobQueue == null) {\r\n-        if (loadingError) {\r\n-            callback(loadingError);\r\n-            return;\r\n-        }\r\n-        callback(new Error(\"Please install `node-sass >=4.x` to use `sass-loader`.\"));\r\n-        return;\r\n-    }\r\n```\r\n\r\nBut what's the exact reason for `asyncQueue === null`, in case `node-sass < 4` ? And isn't this basically a redundant (the same check) as `if (Number(sassVersion[0]) >= 4)` again ? Please elaborate what could possibly fail when queueing `sass.render` for thread pooling, since I'm not that familiar with `node-sass` :)",
        "created_at": "2018-01-16T17:52:27Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161835669",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161835669"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161835669"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        },
        "in_reply_to_id": 161760939
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161854887",
        "pull_request_review_id": 89211212,
        "id": 161854887,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTg1NDg4Nw==",
        "diff_hunk": "@@ -35,6 +49,15 @@ function sassLoader(content) {\n         throw new Error(\"Synchronous compilation is not supported anymore. See https://github.com/webpack-contrib/sass-loader/issues/333\");\n     }\n \n+    if (asyncSassJobQueue == null) {",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 43,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "dcf7388694f4ef05fcd5c247376d066e0494c557",
        "user": {
            "login": "Timer",
            "id": 616428,
            "node_id": "MDQ6VXNlcjYxNjQyOA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/616428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Timer",
            "html_url": "https://github.com/Timer",
            "followers_url": "https://api.github.com/users/Timer/followers",
            "following_url": "https://api.github.com/users/Timer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Timer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Timer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Timer/subscriptions",
            "organizations_url": "https://api.github.com/users/Timer/orgs",
            "repos_url": "https://api.github.com/users/Timer/repos",
            "events_url": "https://api.github.com/users/Timer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Timer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Callback isn't available where you've added it, that's where the package itself is being evaluated.\r\n\r\nAFAIK, it's generally poor practice to make a require throw an exception, but this might be normal practice in the webpack world.\r\n\r\nThe `loadingError` is to store the error until the plugin is used at compile time.",
        "created_at": "2018-01-16T19:03:10Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161854887",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161854887"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161854887"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        },
        "in_reply_to_id": 161760939
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161991995",
        "pull_request_review_id": 89370151,
        "id": 161991995,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTk5MTk5NQ==",
        "diff_hunk": "@@ -35,6 +49,15 @@ function sassLoader(content) {\n         throw new Error(\"Synchronous compilation is not supported anymore. See https://github.com/webpack-contrib/sass-loader/issues/333\");\n     }\n \n+    if (asyncSassJobQueue == null) {",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 43,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "dcf7388694f4ef05fcd5c247376d066e0494c557",
        "user": {
            "login": "michael-ciniawsky",
            "id": 5419992,
            "node_id": "MDQ6VXNlcjU0MTk5OTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5419992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-ciniawsky",
            "html_url": "https://github.com/michael-ciniawsky",
            "followers_url": "https://api.github.com/users/michael-ciniawsky/followers",
            "following_url": "https://api.github.com/users/michael-ciniawsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/michael-ciniawsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michael-ciniawsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michael-ciniawsky/subscriptions",
            "organizations_url": "https://api.github.com/users/michael-ciniawsky/orgs",
            "repos_url": "https://api.github.com/users/michael-ciniawsky/repos",
            "events_url": "https://api.github.com/users/michael-ciniawsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michael-ciniawsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ooops... \ud83d\ude1byou're right. What alternatives do we have to make this less confusing and more compact ?",
        "created_at": "2018-01-17T09:17:12Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161991995",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/161991995"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r161991995"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        },
        "in_reply_to_id": 161760939
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/162046527",
        "pull_request_review_id": 89434859,
        "id": 162046527,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MjA0NjUyNw==",
        "diff_hunk": "@@ -35,6 +49,15 @@ function sassLoader(content) {\n         throw new Error(\"Synchronous compilation is not supported anymore. See https://github.com/webpack-contrib/sass-loader/issues/333\");\n     }\n \n+    if (asyncSassJobQueue == null) {",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 43,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "dcf7388694f4ef05fcd5c247376d066e0494c557",
        "user": {
            "login": "Timer",
            "id": 616428,
            "node_id": "MDQ6VXNlcjYxNjQyOA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/616428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Timer",
            "html_url": "https://github.com/Timer",
            "followers_url": "https://api.github.com/users/Timer/followers",
            "following_url": "https://api.github.com/users/Timer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Timer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Timer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Timer/subscriptions",
            "organizations_url": "https://api.github.com/users/Timer/orgs",
            "repos_url": "https://api.github.com/users/Timer/repos",
            "events_url": "https://api.github.com/users/Timer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Timer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'll come up with something.",
        "created_at": "2018-01-17T13:15:40Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r162046527",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/162046527"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r162046527"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        },
        "in_reply_to_id": 161760939
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/168923201",
        "pull_request_review_id": 97375649,
        "id": 168923201,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkyMzIwMQ==",
        "diff_hunk": "@@ -6,9 +6,9 @@\n     \"include\": [\n         \"lib/**/*.js\"\n     ],\n-    \"lines\": 97,\n+    \"lines\": 92,",
        "path": ".nycrc",
        "position": null,
        "original_position": 5,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "3f9270cdd28e47135c9e21a63685824783b27af9",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't think we should just decrease the coverage limit here \ud83d\ude01 \r\nThe new code should have tests :). Maybe we should add each supported compiler as dev dependency. Then requiring it in a test should be no problem.",
        "created_at": "2018-02-17T14:36:27Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r168923201",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/168923201"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r168923201"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/168923342",
        "pull_request_review_id": 97375649,
        "id": 168923342,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkyMzM0Mg==",
        "diff_hunk": "@@ -0,0 +1,39 @@\n+\"use strict\";\n+\n+const libsass = require(\"./libsass\");\n+\n+const compilers = [libsass];\n+\n+const SUGGESTED_COMPILER_MESSAGE = \"A Sass compiler is required by `sass-loader`, but none were found. Please install `node-sass` >= 4.\";\n+\n+function getCompilerQueue() {\n+    // Stores the first error encountered while loading a compiler (e.g. invalid version)\n+    // This error will be ignored if one of the compilers succeed (since we will eventually support multiple).\n+    let firstError;\n+\n+    for (const compiler of compilers) {\n+        try {\n+            const value = compiler.getCompilerQueue();\n+\n+            if (value == null) {",
        "path": "lib/compilers/index.js",
        "position": null,
        "original_position": 18,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "3f9270cdd28e47135c9e21a63685824783b27af9",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm not a fan of these `== null` checks (the V8 for instance has a hard time optimizing these since `document.all == null` evaluates to `true` \ud83d\ude01). Why not check on `=== null` instead? We know that the compiler queue should return `null`, so let's enforce a strict API.",
        "created_at": "2018-02-17T14:39:00Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r168923342",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/168923342"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r168923342"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/168923428",
        "pull_request_review_id": 97375649,
        "id": 168923428,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkyMzQyOA==",
        "diff_hunk": "@@ -0,0 +1,39 @@\n+\"use strict\";\n+\n+const libsass = require(\"./libsass\");\n+\n+const compilers = [libsass];\n+\n+const SUGGESTED_COMPILER_MESSAGE = \"A Sass compiler is required by `sass-loader`, but none were found. Please install `node-sass` >= 4.\";\n+\n+function getCompilerQueue() {\n+    // Stores the first error encountered while loading a compiler (e.g. invalid version)\n+    // This error will be ignored if one of the compilers succeed (since we will eventually support multiple).\n+    let firstError;\n+\n+    for (const compiler of compilers) {\n+        try {\n+            const value = compiler.getCompilerQueue();\n+\n+            if (value == null) {\n+                continue;\n+            }\n+            return { error: false, reason: null, value };\n+        } catch (e) {\n+            if (firstError == null) {\n+                firstError = e;\n+            }\n+        }\n+    }\n+    // Return the error encountered while loading a compiler, otherwise say\n+    // there was no compiler found.\n+    return {",
        "path": "lib/compilers/index.js",
        "position": null,
        "original_position": 30,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "3f9270cdd28e47135c9e21a63685824783b27af9",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why not just return the queue here or `throw` or log the error if none was available?",
        "created_at": "2018-02-17T14:42:51Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r168923428",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/168923428"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r168923428"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/168923445",
        "pull_request_review_id": 97375649,
        "id": 168923445,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkyMzQ0NQ==",
        "diff_hunk": "@@ -0,0 +1,27 @@\n+\"use strict\";",
        "path": "lib/compilers/libsass.js",
        "position": null,
        "original_position": 1,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "3f9270cdd28e47135c9e21a63685824783b27af9",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could you rename that file to `node-sass`. The sass-loader doesn't really know about `libsass`",
        "created_at": "2018-02-17T14:43:37Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r168923445",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/168923445"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r168923445"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/168924049",
        "pull_request_review_id": 97375649,
        "id": 168924049,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkyNDA0OQ==",
        "diff_hunk": "@@ -35,6 +30,13 @@ function sassLoader(content) {\n         throw new Error(\"Synchronous compilation is not supported anymore. See https://github.com/webpack-contrib/sass-loader/issues/333\");\n     }\n \n+    const compilerError = asyncJobQueue.error;\n+\n+    if (compilerError) {",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 27,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "3f9270cdd28e47135c9e21a63685824783b27af9",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No need to do that check. If the error was just thrown, webpack would report the loader error accordingly.",
        "created_at": "2018-02-17T15:06:49Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r168924049",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/168924049"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r168924049"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/176952781",
        "pull_request_review_id": 106742349,
        "id": 176952781,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1Mjc4MQ==",
        "diff_hunk": "@@ -0,0 +1,39 @@\n+\"use strict\";\n+\n+const libsass = require(\"./libsass\");\n+\n+const compilers = [libsass];\n+\n+const SUGGESTED_COMPILER_MESSAGE = \"A Sass compiler is required by `sass-loader`, but none were found. Please install `node-sass` >= 4.\";\n+\n+function getCompilerQueue() {\n+    // Stores the first error encountered while loading a compiler (e.g. invalid version)\n+    // This error will be ignored if one of the compilers succeed (since we will eventually support multiple).\n+    let firstError;\n+\n+    for (const compiler of compilers) {\n+        try {\n+            const value = compiler.getCompilerQueue();\n+\n+            if (value == null) {\n+                continue;\n+            }\n+            return { error: false, reason: null, value };\n+        } catch (e) {\n+            if (firstError == null) {\n+                firstError = e;\n+            }\n+        }\n+    }\n+    // Return the error encountered while loading a compiler, otherwise say\n+    // there was no compiler found.\n+    return {",
        "path": "lib/compilers/index.js",
        "position": null,
        "original_position": 30,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "3f9270cdd28e47135c9e21a63685824783b27af9",
        "user": {
            "login": "Timer",
            "id": 616428,
            "node_id": "MDQ6VXNlcjYxNjQyOA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/616428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Timer",
            "html_url": "https://github.com/Timer",
            "followers_url": "https://api.github.com/users/Timer/followers",
            "following_url": "https://api.github.com/users/Timer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Timer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Timer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Timer/subscriptions",
            "organizations_url": "https://api.github.com/users/Timer/orgs",
            "repos_url": "https://api.github.com/users/Timer/repos",
            "events_url": "https://api.github.com/users/Timer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Timer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "AFAIK throwing on `require` is being a bad neighbor, so we store the error until the loader is invoked (this function is called synchronously on package evaluation).",
        "created_at": "2018-03-25T20:25:20Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r176952781",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/176952781"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r176952781"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        },
        "in_reply_to_id": 168923428
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/176952791",
        "pull_request_review_id": 106742360,
        "id": 176952791,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1Mjc5MQ==",
        "diff_hunk": "@@ -0,0 +1,39 @@\n+\"use strict\";\n+\n+const libsass = require(\"./libsass\");\n+\n+const compilers = [libsass];\n+\n+const SUGGESTED_COMPILER_MESSAGE = \"A Sass compiler is required by `sass-loader`, but none were found. Please install `node-sass` >= 4.\";\n+\n+function getCompilerQueue() {\n+    // Stores the first error encountered while loading a compiler (e.g. invalid version)\n+    // This error will be ignored if one of the compilers succeed (since we will eventually support multiple).\n+    let firstError;\n+\n+    for (const compiler of compilers) {\n+        try {\n+            const value = compiler.getCompilerQueue();\n+\n+            if (value == null) {",
        "path": "lib/compilers/index.js",
        "position": null,
        "original_position": 18,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "3f9270cdd28e47135c9e21a63685824783b27af9",
        "user": {
            "login": "Timer",
            "id": 616428,
            "node_id": "MDQ6VXNlcjYxNjQyOA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/616428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Timer",
            "html_url": "https://github.com/Timer",
            "followers_url": "https://api.github.com/users/Timer/followers",
            "following_url": "https://api.github.com/users/Timer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Timer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Timer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Timer/subscriptions",
            "organizations_url": "https://api.github.com/users/Timer/orgs",
            "repos_url": "https://api.github.com/users/Timer/repos",
            "events_url": "https://api.github.com/users/Timer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Timer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fair enough.",
        "created_at": "2018-03-25T20:25:30Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r176952791",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/176952791"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r176952791"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        },
        "in_reply_to_id": 168923342
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/180551323",
        "pull_request_review_id": 110991221,
        "id": 180551323,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDU1MTMyMw==",
        "diff_hunk": "@@ -7,8 +7,8 @@\n         \"lib/**/*.js\"\n     ],\n     \"lines\": 97,\n-    \"statements\": 91,\n+    \"statements\": 97,\n     \"functions\": 100,\n-    \"branches\": 89,\n+    \"branches\": 91,",
        "path": ".nycrc",
        "position": 8,
        "original_position": 8,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "dd0d28b903b3697c73d8847875903ce03fd034d7",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can we return old values and add more tests?",
        "created_at": "2018-04-10T20:06:47Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r180551323",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/180551323"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r180551323"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/180551446",
        "pull_request_review_id": 110991379,
        "id": 180551446,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDU1MTQ0Ng==",
        "diff_hunk": "@@ -7,8 +7,8 @@\n         \"lib/**/*.js\"\n     ],\n     \"lines\": 97,\n-    \"statements\": 91,\n+    \"statements\": 97,\n     \"functions\": 100,\n-    \"branches\": 89,\n+    \"branches\": 91,",
        "path": ".nycrc",
        "position": 8,
        "original_position": 8,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "dd0d28b903b3697c73d8847875903ce03fd034d7",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "/cc @Timer ",
        "created_at": "2018-04-10T20:07:15Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r180551446",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/180551446"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r180551446"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        },
        "in_reply_to_id": 180551323
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/180945858",
        "pull_request_review_id": 111457788,
        "id": 180945858,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDk0NTg1OA==",
        "diff_hunk": "@@ -7,8 +7,8 @@\n         \"lib/**/*.js\"\n     ],\n     \"lines\": 97,\n-    \"statements\": 91,\n+    \"statements\": 97,\n     \"functions\": 100,\n-    \"branches\": 89,\n+    \"branches\": 91,",
        "path": ".nycrc",
        "position": 8,
        "original_position": 8,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "dd0d28b903b3697c73d8847875903ce03fd034d7",
        "user": {
            "login": "Timer",
            "id": 616428,
            "node_id": "MDQ6VXNlcjYxNjQyOA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/616428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Timer",
            "html_url": "https://github.com/Timer",
            "followers_url": "https://api.github.com/users/Timer/followers",
            "following_url": "https://api.github.com/users/Timer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Timer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Timer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Timer/subscriptions",
            "organizations_url": "https://api.github.com/users/Timer/orgs",
            "repos_url": "https://api.github.com/users/Timer/repos",
            "events_url": "https://api.github.com/users/Timer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Timer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Just to clarify, you want me to reduce target test coverage and add then add more tests?\r\n\r\nI increased the values here, I did not decrease them -- the tests I added provided more coverage than previously available.",
        "created_at": "2018-04-12T01:52:16Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r180945858",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/180945858"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r180945858"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        },
        "in_reply_to_id": 180551323
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/181122372",
        "pull_request_review_id": 111672095,
        "id": 181122372,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTEyMjM3Mg==",
        "diff_hunk": "@@ -7,8 +7,8 @@\n         \"lib/**/*.js\"\n     ],\n     \"lines\": 97,\n-    \"statements\": 91,\n+    \"statements\": 97,\n     \"functions\": 100,\n-    \"branches\": 89,\n+    \"branches\": 91,",
        "path": ".nycrc",
        "position": 8,
        "original_position": 8,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "dd0d28b903b3697c73d8847875903ce03fd034d7",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@Timer oh sorry, all looks good :+1: ",
        "created_at": "2018-04-12T15:24:25Z",
        "updated_at": "2018-04-12T21:49:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r181122372",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/181122372"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r181122372"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        },
        "in_reply_to_id": 180551323
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/124985831",
        "pull_request_review_id": 47330190,
        "id": 124985831,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDk4NTgzMQ==",
        "diff_hunk": "@@ -1,7 +1,7 @@\n // Special behavior of node-sass/libsass with CSS-files\n // 1. CSS-files are not included, but linked with @import url(path/to/css)\n-@import ../node_modules/css/some-css-module.css\n+@import ~css/some-css-module.css",
        "path": "test/sass/import-css.sass",
        "position": 4,
        "original_position": 4,
        "commit_id": "44f1d8cf704fc2125355f3313f9551c50e65d034",
        "original_commit_id": "d65020c63572079ecd1df272b750885742f3541e",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thanks for spotting this. Seems like it slipped through with some of the last commits...",
        "created_at": "2017-06-30T08:12:11Z",
        "updated_at": "2018-04-13T00:18:45Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/479#discussion_r124985831",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/479",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/124985831"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/479#discussion_r124985831"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/479"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/183700457",
        "pull_request_review_id": 114746423,
        "id": 183700457,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzcwMDQ1Nw==",
        "diff_hunk": "@@ -46,6 +46,9 @@ function webpackImporter(resourcePath, resolve, addNormalizedDependency) {\n             Promise.reject() :\n             resolve(dir, importsToResolve[0])\n                 .then(resolvedFile => {\n+                    if (!([\".sass\", \".scss\", \".css\"].includes(path.extname(resolvedFile)))) {\n+                        throw new Error(\"Alias should have 'sass', 'scss' or 'css' extension\");",
        "path": "lib/webpackImporter.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "265f3dbebcdf09ebc52147f721223248708e1b18",
        "original_commit_id": "265f3dbebcdf09ebc52147f721223248708e1b18",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This requirement is very arbitrary and I don't think that we should introduce that. Why do aliases have to have a `sass`, `scss` or `css` extension? Furthermore, it's not necessarily an alias that caused this condition, so the error message is also misleading.",
        "created_at": "2018-04-24T11:52:54Z",
        "updated_at": "2018-04-24T11:54:55Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/558#discussion_r183700457",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/558",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/183700457"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/558#discussion_r183700457"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/558"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/183702760",
        "pull_request_review_id": 114749213,
        "id": 183702760,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzcwMjc2MA==",
        "diff_hunk": "@@ -46,6 +46,9 @@ function webpackImporter(resourcePath, resolve, addNormalizedDependency) {\n             Promise.reject() :\n             resolve(dir, importsToResolve[0])\n                 .then(resolvedFile => {\n+                    if (!([\".sass\", \".scss\", \".css\"].includes(path.extname(resolvedFile)))) {\n+                        throw new Error(\"Alias should have 'sass', 'scss' or 'css' extension\");",
        "path": "lib/webpackImporter.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "265f3dbebcdf09ebc52147f721223248708e1b18",
        "original_commit_id": "265f3dbebcdf09ebc52147f721223248708e1b18",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@jhnns i know :disappointed: , it is very interesting. Found solution:\r\n1.  Add url + all paths from `includePaths` in https://github.com/webpack-contrib/sass-loader/blob/master/lib/importsToResolve.js#L56 (i.e. `includePath[0]/${url}`, `includePath[1]/${url}`, `url`)\r\n2. Node-sass should be try import first when we try import throw own implement (not sure it is possible)\r\n\r\nAny ideas how we can fix this?",
        "created_at": "2018-04-24T12:02:14Z",
        "updated_at": "2018-04-24T12:02:49Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/558#discussion_r183702760",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/558",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/183702760"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/558#discussion_r183702760"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/558"
            }
        },
        "in_reply_to_id": 183700457
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/184032024",
        "pull_request_review_id": 115143281,
        "id": 184032024,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDAzMjAyNA==",
        "diff_hunk": "@@ -46,6 +46,9 @@ function webpackImporter(resourcePath, resolve, addNormalizedDependency) {\n             Promise.reject() :\n             resolve(dir, importsToResolve[0])\n                 .then(resolvedFile => {\n+                    if (!([\".sass\", \".scss\", \".css\"].includes(path.extname(resolvedFile)))) {\n+                        throw new Error(\"Alias should have 'sass', 'scss' or 'css' extension\");",
        "path": "lib/webpackImporter.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "265f3dbebcdf09ebc52147f721223248708e1b18",
        "original_commit_id": "265f3dbebcdf09ebc52147f721223248708e1b18",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Currently not. I wish we could let node-sass handle the imports as default and then use webpack's resolver, but that's not possible with the current node-sass API.",
        "created_at": "2018-04-25T11:58:43Z",
        "updated_at": "2018-04-25T11:58:44Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/558#discussion_r184032024",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/558",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/184032024"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/558#discussion_r184032024"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/558"
            }
        },
        "in_reply_to_id": 183700457
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/184034132",
        "pull_request_review_id": 115145698,
        "id": 184034132,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDAzNDEzMg==",
        "diff_hunk": "@@ -46,6 +46,9 @@ function webpackImporter(resourcePath, resolve, addNormalizedDependency) {\n             Promise.reject() :\n             resolve(dir, importsToResolve[0])\n                 .then(resolvedFile => {\n+                    if (!([\".sass\", \".scss\", \".css\"].includes(path.extname(resolvedFile)))) {\n+                        throw new Error(\"Alias should have 'sass', 'scss' or 'css' extension\");",
        "path": "lib/webpackImporter.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "265f3dbebcdf09ebc52147f721223248708e1b18",
        "original_commit_id": "265f3dbebcdf09ebc52147f721223248708e1b18",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@jhnns :disappointed: I try to search solution todat, have some ideas.",
        "created_at": "2018-04-25T12:07:04Z",
        "updated_at": "2018-04-25T12:07:04Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/558#discussion_r184034132",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/558",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/184034132"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/558#discussion_r184034132"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/558"
            }
        },
        "in_reply_to_id": 183700457
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/186427131",
        "pull_request_review_id": 118001602,
        "id": 186427131,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjQyNzEzMQ==",
        "diff_hunk": "@@ -85,34 +83,31 @@ See [node-sass](https://github.com/andrew/node-sass) for all available Sass opti\n \n ### In production\n \n-Usually, it's recommended to extract the style sheets into a dedicated file in production using the [ExtractTextPlugin](https://github.com/webpack-contrib/extract-text-webpack-plugin). This way your styles are not dependent on JavaScript:\n+Usually, it's recommended to extract the style sheets into a dedicated file in production using the [MiniCssExtractPlugin](https://github.com/webpack-contrib/mini-css-extract-plugin). This way your styles are not dependent on JavaScript:\n \n ```js\n-const ExtractTextPlugin = require(\"extract-text-webpack-plugin\");\n-\n-const extractSass = new ExtractTextPlugin({\n-    filename: \"[name].[contenthash].css\",\n-    disable: process.env.NODE_ENV === \"development\"\n-});\n+const MiniCssExtractPlugin = require(\"mini-css-extract-plugin\");\n+const devMode = process.env.NODE_ENV !== 'production'; // used to fallback to style-loader in development\n \n module.exports = {\n \t...\n     module: {\n         rules: [{\n             test: /\\.scss$/,\n-            use: extractSass.extract({\n-                use: [{\n-                    loader: \"css-loader\"\n-                }, {\n-                    loader: \"sass-loader\"\n-                }],\n-                // use style-loader in development\n-                fallback: \"style-loader\"\n-            })\n+            use: [\n+              devMode ? 'style-loader' : MiniCssExtractPlugin.loader,",
        "path": "README.md",
        "position": null,
        "original_position": 60,
        "commit_id": "acf08a536f89c37a49c89ddec41c714ef0885eb1",
        "original_commit_id": "f949bf599bd4268b318d5f0576671dfeb01d6c9b",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Change `devMode` on `process.env.NODE_ENV`",
        "created_at": "2018-05-07T13:46:26Z",
        "updated_at": "2018-05-07T14:20:02Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/568#discussion_r186427131",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/568",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/186427131"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/568#discussion_r186427131"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/568"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/187617979",
        "pull_request_review_id": 119438430,
        "id": 187617979,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzYxNzk3OQ==",
        "diff_hunk": "@@ -63,7 +63,7 @@ function sassLoader(content) {\n     ));\n \n     // Skip empty files, otherwise it will stop webpack, see issue #21\n-    if (options.data.trim() === \"\") {\n+    if (typeof options.data !== \"string\" || options.data.trim() === \"\") {",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 5,
        "commit_id": "c9e8c4dde184cf90997509bad57270761b993dd0",
        "original_commit_id": "d7e33978bb37f074ed57869bdd884cd2ba67d3e0",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Let's add additional comment about why this and we can merge this :+1: (don't remove current comment just add new below)",
        "created_at": "2018-05-11T13:45:23Z",
        "updated_at": "2018-05-11T14:17:08Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/569#discussion_r187617979",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/569",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/187617979"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/569#discussion_r187617979"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/569"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/187626750",
        "pull_request_review_id": 119449222,
        "id": 187626750,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzYyNjc1MA==",
        "diff_hunk": "@@ -63,6 +63,7 @@ function sassLoader(content) {\n     ));\n \n     // Skip empty files, otherwise it will stop webpack, see issue #21\n+    // Guard against possibility of non-string data, see #569",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 4,
        "commit_id": "c9e8c4dde184cf90997509bad57270761b993dd0",
        "original_commit_id": "a3847c92a7c54a0bac28be9810e511e57a3f245e",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`see PR #569`",
        "created_at": "2018-05-11T14:14:17Z",
        "updated_at": "2018-05-11T14:17:08Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/569#discussion_r187626750",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/569",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/187626750"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/569#discussion_r187626750"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/569"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/192476490",
        "pull_request_review_id": 125268603,
        "id": 192476490,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjQ3NjQ5MA==",
        "diff_hunk": "@@ -3,7 +3,7 @@\n const path = require(\"path\");\n const utils = require(\"loader-utils\");\n \n-const matchModuleImport = /^~([^\\/]+|@[^\\/]+[\\/][^\\/]+)$/g;\n+const matchModuleImport = /^~([^\\/]+|@[^\\/]+[\\/][^\\/]+)$/;",
        "path": "lib/importsToResolve.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "f5a018e35561cf8f767191cca40a9541ddef76a0",
        "original_commit_id": "f5a018e35561cf8f767191cca40a9541ddef76a0",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "A lot of test lines around one characters :face_with_head_bandage: ",
        "created_at": "2018-06-01T18:17:12Z",
        "updated_at": "2018-06-01T18:17:17Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/577#discussion_r192476490",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/577",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/192476490"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/577#discussion_r192476490"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/577"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/192478229",
        "pull_request_review_id": 125270702,
        "id": 192478229,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjQ3ODIyOQ==",
        "diff_hunk": "@@ -3,7 +3,7 @@\n const path = require(\"path\");\n const utils = require(\"loader-utils\");\n \n-const matchModuleImport = /^~([^\\/]+|@[^\\/]+[\\/][^\\/]+)$/g;\n+const matchModuleImport = /^~([^\\/]+|@[^\\/]+[\\/][^\\/]+)$/;",
        "path": "lib/importsToResolve.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "f5a018e35561cf8f767191cca40a9541ddef76a0",
        "original_commit_id": "f5a018e35561cf8f767191cca40a9541ddef76a0",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Using `g` modify `matchModuleImport.lastIndex` and broke behavior as expected",
        "created_at": "2018-06-01T18:23:53Z",
        "updated_at": "2018-06-01T18:23:58Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/577#discussion_r192478229",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/577",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/192478229"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/577#discussion_r192478229"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/577"
            }
        },
        "in_reply_to_id": 192476490
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191177938",
        "pull_request_review_id": 123700313,
        "id": 191177938,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTE3NzkzOA==",
        "diff_hunk": "@@ -2,6 +2,38 @@\n \n All notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines.\n \n+<a name=\"8.0.0\"></a>\n+## [8.0.0](https://github.com/webpack-contrib/sass-loader/compare/v7.0.1...v8.0.0)\n+\n+### BREAKING CHANGE\n+\n+The loader no longer automatically requires [Node Sass][]. Instead, users may\n+choose between Node Sass and [Dart Sass][] by passing the `sass` option:\n+\n+[Node Sass]: https://github.com/sass/node-sass\n+[Dart Sass]: http://sass-lang.com/dart-sass\n+\n+```js\n+// webpack.config.js\n+module.exports = {\n+\t...\n+    module: {\n+        rules: [{\n+            test: /\\.scss$/,\n+            use: [\n+                \"style-loader\", // creates style nodes from JS strings\n+                \"css-loader\", // translates CSS into CommonJS\n+                {\n+                  loader: \"sass-loader\", // compiles Sass to CSS\n+                  // require(\"node-sass\") instead to use Node Sass\n+                  options: {sass: require(\"sass\")}\n+                }\n+            ]\n+        }]\n+    }\n+};\n+```",
        "path": "CHANGELOG.md",
        "position": null,
        "original_position": 34,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thanks for working docs, but please remove this, we can do this before release.",
        "created_at": "2018-05-28T10:59:33Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191177938",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191177938"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191177938"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191178067",
        "pull_request_review_id": 123700313,
        "id": 191178067,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTE3ODA2Nw==",
        "diff_hunk": "@@ -48,14 +54,18 @@ module.exports = {\n             use: [\n                 \"style-loader\", // creates style nodes from JS strings\n                 \"css-loader\", // translates CSS into CommonJS\n-                \"sass-loader\" // compiles Sass to CSS\n+                {\n+                  loader: \"sass-loader\", // compiles Sass to CSS\n+                  // require(\"node-sass\") instead to use Node Sass\n+                  options: {sass: require(\"sass\")}",
        "path": "README.md",
        "position": null,
        "original_position": 29,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should not be option. `sass-loader` should resolve `node-sass`, then try to resolve `dart-sass`, if not found nothing - throw error",
        "created_at": "2018-05-28T11:00:21Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191178067",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191178067"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191178067"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191178211",
        "pull_request_review_id": 123700313,
        "id": 191178211,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTE3ODIxMQ==",
        "diff_hunk": "@@ -79,7 +90,39 @@ module.exports = {\n };\n ```\n \n-See [node-sass](https://github.com/andrew/node-sass) for all available Sass options.\n+See [the Node Sass documentation](https://github.com/sass/node-sass/blob/master/README.md#options) for all available Sass options.\n+\n+Note that when using Dart Sass, **synchronous compilation is twice as fast as\n+asynchronous compilation** by default, due to the overhead of asynchronous\n+callbacks. To avoid this overhead, you can use the\n+[`fibers`](https://www.npmjs.com/package/fibers) package to call asynchronous\n+importers from the synchronous code path. To enable this, pass the `Fiber` class\n+to the `fiber` option:\n+\n+```js\n+// webpack.config.js\n+const Fiber = require('fibers');\n+\n+module.exports = {\n+\t...\n+    module: {\n+        rules: [{\n+            test: /\\.scss$/,\n+            use: [{\n+                loader: \"style-loader\"\n+            }, {\n+                loader: \"css-loader\"\n+            }, {\n+                loader: \"sass-loader\",\n+                options: {\n+                    sass: require(\"sass\"),\n+                    fiber: Fiber",
        "path": "README.md",
        "position": null,
        "original_position": 81,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Move this to internal behavior (no new options), please provide benchmark for this",
        "created_at": "2018-05-28T11:01:08Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191178211",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191178211"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191178211"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191178523",
        "pull_request_review_id": 123700313,
        "id": 191178523,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTE3ODUyMw==",
        "diff_hunk": "@@ -6,6 +6,7 @@ const path = require(\"path\");\n const webpack = require(\"webpack\");\n const fs = require(\"fs\");\n const merge = require(\"webpack-merge\");\n+const sass = require(\"node-sass\");",
        "path": "test/index.test.js",
        "position": null,
        "original_position": 4,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Tests should be running on `node-sass` an `dart-sass` together, we need change `test` script:\r\n1. Install `node-sass` and run tests\r\n2. Install `dart-sass` and run tests.",
        "created_at": "2018-05-28T11:03:05Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191178523",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191178523"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191178523"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191178680",
        "pull_request_review_id": 123700313,
        "id": 191178680,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTE3ODY4MA==",
        "diff_hunk": "@@ -1,6 +1,6 @@\n {\n   \"name\": \"sass-loader\",\n-  \"version\": \"7.0.1\",\n+  \"version\": \"8.0.0\",",
        "path": "package.json",
        "position": null,
        "original_position": 4,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Don't change this.",
        "created_at": "2018-05-28T11:04:03Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191178680",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191178680"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191178680"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191178779",
        "pull_request_review_id": 123700313,
        "id": 191178779,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTE3ODc3OQ==",
        "diff_hunk": "@@ -101,4 +89,40 @@ function sassLoader(content) {\n     });\n }\n \n+/**\n+ * Verifies that the implementation and version of Sass is supported by this loader.\n+ *\n+ * @param {string} info\n+ */\n+function validateSassVersion(info) {\n+    const parsed = /^([^\\t]+)\\t([^\\t]+)/.exec(info);\n+\n+    if (!parsed) {\n+        throw new Error(\"Unknown Sass implementation \\\"\" + info + \"\\\".\");\n+    }\n+\n+    const implementation = parsed[1];\n+    const version = parsed[2];\n+    const components = /^(\\d+)\\.(\\d+)/.exec(version);\n+\n+    if (!components) {\n+        throw new Error(\"Invalid Sass version \\\"\" + version + \"\\\".\");\n+    }\n+\n+    const major = Number(components[1]);\n+    const minor = Number(components[2]);\n+\n+    if (implementation === \"dart-sass\") {\n+        if (major < 1 || major > 1 || minor < 3) {\n+            throw new Error(\"Dart Sass version \" + version + \" is incompatible with ^1.3.0.\");\n+        }\n+    } else if (implementation === \"node-sass\") {\n+        if (major < 4 || major > 4) {",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 78,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can you provide information why `node-sass > 4` is not compatibility?",
        "created_at": "2018-05-28T11:04:47Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191178779",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191178779"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191178779"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191178835",
        "pull_request_review_id": 123700313,
        "id": 191178835,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTE3ODgzNQ==",
        "diff_hunk": "@@ -101,4 +89,40 @@ function sassLoader(content) {\n     });\n }\n \n+/**\n+ * Verifies that the implementation and version of Sass is supported by this loader.\n+ *\n+ * @param {string} info\n+ */\n+function validateSassVersion(info) {\n+    const parsed = /^([^\\t]+)\\t([^\\t]+)/.exec(info);\n+\n+    if (!parsed) {\n+        throw new Error(\"Unknown Sass implementation \\\"\" + info + \"\\\".\");\n+    }\n+\n+    const implementation = parsed[1];\n+    const version = parsed[2];\n+    const components = /^(\\d+)\\.(\\d+)/.exec(version);",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 64,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `semver` package for this",
        "created_at": "2018-05-28T11:05:07Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191178835",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191178835"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191178835"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191263226",
        "pull_request_review_id": 123800584,
        "id": 191263226,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2MzIyNg==",
        "diff_hunk": "@@ -2,6 +2,38 @@\n \n All notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines.\n \n+<a name=\"8.0.0\"></a>\n+## [8.0.0](https://github.com/webpack-contrib/sass-loader/compare/v7.0.1...v8.0.0)\n+\n+### BREAKING CHANGE\n+\n+The loader no longer automatically requires [Node Sass][]. Instead, users may\n+choose between Node Sass and [Dart Sass][] by passing the `sass` option:\n+\n+[Node Sass]: https://github.com/sass/node-sass\n+[Dart Sass]: http://sass-lang.com/dart-sass\n+\n+```js\n+// webpack.config.js\n+module.exports = {\n+\t...\n+    module: {\n+        rules: [{\n+            test: /\\.scss$/,\n+            use: [\n+                \"style-loader\", // creates style nodes from JS strings\n+                \"css-loader\", // translates CSS into CommonJS\n+                {\n+                  loader: \"sass-loader\", // compiles Sass to CSS\n+                  // require(\"node-sass\") instead to use Node Sass\n+                  options: {sass: require(\"sass\")}\n+                }\n+            ]\n+        }]\n+    }\n+};\n+```",
        "path": "CHANGELOG.md",
        "position": null,
        "original_position": 34,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.",
        "created_at": "2018-05-28T19:36:10Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191263226",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191263226"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191263226"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191177938
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191263280",
        "pull_request_review_id": 123800584,
        "id": 191263280,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2MzI4MA==",
        "diff_hunk": "@@ -48,14 +54,18 @@ module.exports = {\n             use: [\n                 \"style-loader\", // creates style nodes from JS strings\n                 \"css-loader\", // translates CSS into CommonJS\n-                \"sass-loader\" // compiles Sass to CSS\n+                {\n+                  loader: \"sass-loader\", // compiles Sass to CSS\n+                  // require(\"node-sass\") instead to use Node Sass\n+                  options: {sass: require(\"sass\")}",
        "path": "README.md",
        "position": null,
        "original_position": 29,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Are you sure? Not allowing users to explicitly control this will mean that if they (or one of their dependencies if they're using flat dependencies) requires Node Sass for some unrelated reason, they're forced to use Node Sass. This may even result in them unexpectedly switching to Node Sass down the line.\r\n\r\nIt seems like [several](https://github.com/webpack-contrib/sass-loader/issues/435#issuecomment-391853396) [users](https://github.com/webpack-contrib/sass-loader/issues/435#issuecomment-391855181) would prefer making this configuration explicit.",
        "created_at": "2018-05-28T19:36:44Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191263280",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191263280"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191263280"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191178067
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191263775",
        "pull_request_review_id": 123800584,
        "id": 191263775,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2Mzc3NQ==",
        "diff_hunk": "@@ -79,7 +90,39 @@ module.exports = {\n };\n ```\n \n-See [node-sass](https://github.com/andrew/node-sass) for all available Sass options.\n+See [the Node Sass documentation](https://github.com/sass/node-sass/blob/master/README.md#options) for all available Sass options.\n+\n+Note that when using Dart Sass, **synchronous compilation is twice as fast as\n+asynchronous compilation** by default, due to the overhead of asynchronous\n+callbacks. To avoid this overhead, you can use the\n+[`fibers`](https://www.npmjs.com/package/fibers) package to call asynchronous\n+importers from the synchronous code path. To enable this, pass the `Fiber` class\n+to the `fiber` option:\n+\n+```js\n+// webpack.config.js\n+const Fiber = require('fibers');\n+\n+module.exports = {\n+\t...\n+    module: {\n+        rules: [{\n+            test: /\\.scss$/,\n+            use: [{\n+                loader: \"style-loader\"\n+            }, {\n+                loader: \"css-loader\"\n+            }, {\n+                loader: \"sass-loader\",\n+                options: {\n+                    sass: require(\"sass\"),\n+                    fiber: Fiber",
        "path": "README.md",
        "position": null,
        "original_position": 81,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm not sure what you mean by \"move this to internal behavior\". Do you want `sass-loader` to depend on `fibers` itself? Be aware that `fibers` requires native compilation, and may be difficult to install on some systems.\r\n\r\nI'm not sure what kind of benchmarks you're looking for, but as the maintainer of Dart Sass, I can assure you that a 2x speed hit is what we measure pretty consistently when using the asynchronous code path.",
        "created_at": "2018-05-28T19:41:44Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191263775",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191263775"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191263775"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191178211
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191264567",
        "pull_request_review_id": 123800584,
        "id": 191264567,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2NDU2Nw==",
        "diff_hunk": "@@ -101,4 +89,40 @@ function sassLoader(content) {\n     });\n }\n \n+/**\n+ * Verifies that the implementation and version of Sass is supported by this loader.\n+ *\n+ * @param {string} info\n+ */\n+function validateSassVersion(info) {\n+    const parsed = /^([^\\t]+)\\t([^\\t]+)/.exec(info);\n+\n+    if (!parsed) {\n+        throw new Error(\"Unknown Sass implementation \\\"\" + info + \"\\\".\");\n+    }\n+\n+    const implementation = parsed[1];\n+    const version = parsed[2];\n+    const components = /^(\\d+)\\.(\\d+)/.exec(version);",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 64,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.",
        "created_at": "2018-05-28T19:48:50Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191264567",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191264567"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191264567"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191178835
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191264631",
        "pull_request_review_id": 123800584,
        "id": 191264631,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2NDYzMQ==",
        "diff_hunk": "@@ -101,4 +89,40 @@ function sassLoader(content) {\n     });\n }\n \n+/**\n+ * Verifies that the implementation and version of Sass is supported by this loader.\n+ *\n+ * @param {string} info\n+ */\n+function validateSassVersion(info) {\n+    const parsed = /^([^\\t]+)\\t([^\\t]+)/.exec(info);\n+\n+    if (!parsed) {\n+        throw new Error(\"Unknown Sass implementation \\\"\" + info + \"\\\".\");\n+    }\n+\n+    const implementation = parsed[1];\n+    const version = parsed[2];\n+    const components = /^(\\d+)\\.(\\d+)/.exec(version);\n+\n+    if (!components) {\n+        throw new Error(\"Invalid Sass version \\\"\" + version + \"\\\".\");\n+    }\n+\n+    const major = Number(components[1]);\n+    const minor = Number(components[2]);\n+\n+    if (implementation === \"dart-sass\") {\n+        if (major < 1 || major > 1 || minor < 3) {\n+            throw new Error(\"Dart Sass version \" + version + \" is incompatible with ^1.3.0.\");\n+        }\n+    } else if (implementation === \"node-sass\") {\n+        if (major < 4 || major > 4) {",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 78,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Node Sass 5 hasn't been released yet. According to semver, it may introduce arbitrary breaking changes, so it's not safe to eagerly declare compatibility with it.",
        "created_at": "2018-05-28T19:49:41Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191264631",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191264631"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191264631"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191178779
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191264782",
        "pull_request_review_id": 123800584,
        "id": 191264782,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2NDc4Mg==",
        "diff_hunk": "@@ -1,6 +1,6 @@\n {\n   \"name\": \"sass-loader\",\n-  \"version\": \"7.0.1\",\n+  \"version\": \"8.0.0\",",
        "path": "package.json",
        "position": null,
        "original_position": 4,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.",
        "created_at": "2018-05-28T19:51:13Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191264782",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191264782"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191264782"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191178680
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191264961",
        "pull_request_review_id": 123800584,
        "id": 191264961,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2NDk2MQ==",
        "diff_hunk": "@@ -6,6 +6,7 @@ const path = require(\"path\");\n const webpack = require(\"webpack\");\n const fs = require(\"fs\");\n const merge = require(\"webpack-merge\");\n+const sass = require(\"node-sass\");",
        "path": "test/index.test.js",
        "position": null,
        "original_position": 4,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm not sure how to do that gracefully, especially if the implementation isn't supplied as an option.",
        "created_at": "2018-05-28T19:52:32Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191264961",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191264961"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191264961"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191178523
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191266509",
        "pull_request_review_id": 123804411,
        "id": 191266509,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2NjUwOQ==",
        "diff_hunk": "@@ -6,6 +6,7 @@ const path = require(\"path\");\n const webpack = require(\"webpack\");\n const fs = require(\"fs\");\n const merge = require(\"webpack-merge\");\n+const sass = require(\"node-sass\");",
        "path": "test/index.test.js",
        "position": null,
        "original_position": 4,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@nex3 skip tests where `dart-sass` doesn't have options/features/etc and add comments about this. Why? After release all people starting upgrade and we will get a lot of issues like \"It is woks on `x.x.x` version, but after upgrade to `x.x.x` it is doesn't works. [A lot of angry words]\" (a lot of people don't read changelog and release pages). We should prepare to this.",
        "created_at": "2018-05-28T20:09:12Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191266509",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191266509"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191266509"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191178523
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191266604",
        "pull_request_review_id": 123804519,
        "id": 191266604,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2NjYwNA==",
        "diff_hunk": "@@ -62,6 +41,16 @@ function sassLoader(content) {\n         addNormalizedDependency\n     ));\n \n+    if (asyncSassJobQueue === null) {\n+        if (!options.sass) {",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 42,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "68315652ce4a84ec1c7759b5f0b936c5ddcfc5dd",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Better rename to `implementation`, `sass` is very misleading",
        "created_at": "2018-05-28T20:10:07Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191266604",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191266604"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191266604"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191266963",
        "pull_request_review_id": 123804781,
        "id": 191266963,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2Njk2Mw==",
        "diff_hunk": "@@ -48,14 +54,18 @@ module.exports = {\n             use: [\n                 \"style-loader\", // creates style nodes from JS strings\n                 \"css-loader\", // translates CSS into CommonJS\n-                \"sass-loader\" // compiles Sass to CSS\n+                {\n+                  loader: \"sass-loader\", // compiles Sass to CSS\n+                  // require(\"node-sass\") instead to use Node Sass\n+                  options: {sass: require(\"sass\")}",
        "path": "README.md",
        "position": null,
        "original_position": 29,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@nex3 Hm, yes you are right it can lead to problems, let's rename `sass` to `implementation` and load `node-sass` by default. It is allow to upgrade `loader` without break build and avoid unnecessary `major`.",
        "created_at": "2018-05-28T20:12:38Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191266963",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191266963"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191266963"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191178067
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191267112",
        "pull_request_review_id": 123804940,
        "id": 191267112,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2NzExMg==",
        "diff_hunk": "@@ -79,7 +90,39 @@ module.exports = {\n };\n ```\n \n-See [node-sass](https://github.com/andrew/node-sass) for all available Sass options.\n+See [the Node Sass documentation](https://github.com/sass/node-sass/blob/master/README.md#options) for all available Sass options.\n+\n+Note that when using Dart Sass, **synchronous compilation is twice as fast as\n+asynchronous compilation** by default, due to the overhead of asynchronous\n+callbacks. To avoid this overhead, you can use the\n+[`fibers`](https://www.npmjs.com/package/fibers) package to call asynchronous\n+importers from the synchronous code path. To enable this, pass the `Fiber` class\n+to the `fiber` option:\n+\n+```js\n+// webpack.config.js\n+const Fiber = require('fibers');\n+\n+module.exports = {\n+\t...\n+    module: {\n+        rules: [{\n+            test: /\\.scss$/,\n+            use: [{\n+                loader: \"style-loader\"\n+            }, {\n+                loader: \"css-loader\"\n+            }, {\n+                loader: \"sass-loader\",\n+                options: {\n+                    sass: require(\"sass\"),\n+                    fiber: Fiber",
        "path": "README.md",
        "position": null,
        "original_position": 81,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@nex3 okey, let's leave this as is",
        "created_at": "2018-05-28T20:14:09Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191267112",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191267112"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191267112"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191178211
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191267167",
        "pull_request_review_id": 123804999,
        "id": 191267167,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2NzE2Nw==",
        "diff_hunk": "@@ -62,6 +41,16 @@ function sassLoader(content) {\n         addNormalizedDependency\n     ));\n \n+    if (asyncSassJobQueue === null) {\n+        if (!options.sass) {",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 42,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "68315652ce4a84ec1c7759b5f0b936c5ddcfc5dd",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "And should be `node-sass` by default (comment above).",
        "created_at": "2018-05-28T20:14:43Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191267167",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191267167"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191267167"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191266604
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191267305",
        "pull_request_review_id": 123805162,
        "id": 191267305,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2NzMwNQ==",
        "diff_hunk": "@@ -101,4 +90,36 @@ function sassLoader(content) {\n     });\n }\n \n+/**\n+ * Verifies that the implementation and version of Sass is supported by this loader.\n+ *\n+ * @param {string} info\n+ */\n+function validateSassVersion(info) {\n+    const parsed = /^([^\\t]+)\\t([^\\t]+)/.exec(info);",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 64,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "68315652ce4a84ec1c7759b5f0b936c5ddcfc5dd",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Don't use regex here, please use `semver` for parsing `major` and `minor`",
        "created_at": "2018-05-28T20:15:58Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191267305",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191267305"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191267305"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191274058",
        "pull_request_review_id": 123812907,
        "id": 191274058,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI3NDA1OA==",
        "diff_hunk": "@@ -48,14 +54,18 @@ module.exports = {\n             use: [\n                 \"style-loader\", // creates style nodes from JS strings\n                 \"css-loader\", // translates CSS into CommonJS\n-                \"sass-loader\" // compiles Sass to CSS\n+                {\n+                  loader: \"sass-loader\", // compiles Sass to CSS\n+                  // require(\"node-sass\") instead to use Node Sass\n+                  options: {sass: require(\"sass\")}",
        "path": "README.md",
        "position": null,
        "original_position": 29,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done. It's worth noting though that the name `implementation`, in addition to being more of a pain to type, means that users can't just write\r\n\r\n```js\r\nconst sass = require(\"sass\");\r\n\r\n// ...\r\n    options: { sass }\r\n// ...\r\n```",
        "created_at": "2018-05-28T21:33:54Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191274058",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191274058"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191274058"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191178067
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191274142",
        "pull_request_review_id": 123812907,
        "id": 191274142,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI3NDE0Mg==",
        "diff_hunk": "@@ -101,4 +90,36 @@ function sassLoader(content) {\n     });\n }\n \n+/**\n+ * Verifies that the implementation and version of Sass is supported by this loader.\n+ *\n+ * @param {string} info\n+ */\n+function validateSassVersion(info) {\n+    const parsed = /^([^\\t]+)\\t([^\\t]+)/.exec(info);",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 64,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "68315652ce4a84ec1c7759b5f0b936c5ddcfc5dd",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.",
        "created_at": "2018-05-28T21:35:00Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191274142",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191274142"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191274142"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191267305
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191274195",
        "pull_request_review_id": 123812907,
        "id": 191274195,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI3NDE5NQ==",
        "diff_hunk": "@@ -6,6 +6,7 @@ const path = require(\"path\");\n const webpack = require(\"webpack\");\n const fs = require(\"fs\");\n const merge = require(\"webpack-merge\");\n+const sass = require(\"node-sass\");",
        "path": "test/index.test.js",
        "position": null,
        "original_position": 4,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Okay, but at a higher level I'm not sure how to run these tests with both versions of Sass or how to switch between those versions.",
        "created_at": "2018-05-28T21:35:42Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191274195",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191274195"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191274195"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191178523
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191293223",
        "pull_request_review_id": 123834915,
        "id": 191293223,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI5MzIyMw==",
        "diff_hunk": "@@ -48,14 +54,18 @@ module.exports = {\n             use: [\n                 \"style-loader\", // creates style nodes from JS strings\n                 \"css-loader\", // translates CSS into CommonJS\n-                \"sass-loader\" // compiles Sass to CSS\n+                {\n+                  loader: \"sass-loader\", // compiles Sass to CSS\n+                  // require(\"node-sass\") instead to use Node Sass\n+                  options: {implementation: require(\"sass\")}",
        "path": "README.md",
        "position": null,
        "original_position": 29,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "daa50c7d5b57feb6df2c284fead03ed96d5cc72e",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Let's left default example as is and improve section about `dart-sass`\r\nLike this:\r\n```\r\n<h2 align=\"center\">Examples</h2>\r\n### `node-sass` default\r\n// Description and example\r\n### `dart-sass`\r\n// Description and example\r\n```\r\n\r\n###",
        "created_at": "2018-05-29T02:36:47Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191293223",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191293223"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191293223"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191293364",
        "pull_request_review_id": 123835070,
        "id": 191293364,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI5MzM2NA==",
        "diff_hunk": "@@ -101,4 +90,36 @@ function sassLoader(content) {\n     });\n }\n \n+/**\n+ * Verifies that the implementation and version of Sass is supported by this loader.\n+ *\n+ * @param {string} info\n+ */\n+function validateSassVersion(info) {\n+    const parsed = /^([^\\t]+)\\t([^\\t]+)/.exec(info);",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 64,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "68315652ce4a84ec1c7759b5f0b936c5ddcfc5dd",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@nex3 looks we still use `/^([^\\t]+)\\t([^\\t]+)/.exec(info)`, better use `semver.major`, `semver.minor` and `semver.patch` functions",
        "created_at": "2018-05-29T02:38:21Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191293364",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191293364"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191293364"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191267305
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191293631",
        "pull_request_review_id": 123835334,
        "id": 191293631,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI5MzYzMQ==",
        "diff_hunk": "@@ -6,6 +6,7 @@ const path = require(\"path\");\n const webpack = require(\"webpack\");\n const fs = require(\"fs\");\n const merge = require(\"webpack-merge\");\n+const sass = require(\"node-sass\");",
        "path": "test/index.test.js",
        "position": null,
        "original_position": 4,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Just add additional look here https://github.com/webpack-contrib/sass-loader/blob/master/test/index.test.js#L35 with `node-sass` and `sass` values and we need some modify tests to allow using difference implementation",
        "created_at": "2018-05-29T02:41:08Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191293631",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191293631"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191293631"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191178523
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191960412",
        "pull_request_review_id": 124637649,
        "id": 191960412,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTk2MDQxMg==",
        "diff_hunk": "@@ -48,14 +54,18 @@ module.exports = {\n             use: [\n                 \"style-loader\", // creates style nodes from JS strings\n                 \"css-loader\", // translates CSS into CommonJS\n-                \"sass-loader\" // compiles Sass to CSS\n+                {\n+                  loader: \"sass-loader\", // compiles Sass to CSS\n+                  // require(\"node-sass\") instead to use Node Sass\n+                  options: {implementation: require(\"sass\")}",
        "path": "README.md",
        "position": null,
        "original_position": 29,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "daa50c7d5b57feb6df2c284fead03ed96d5cc72e",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I can do that if you want, but from the perspective of the Sass organization, I'd really like to present Dart Sass and Node Sass as equal options. Making Node Sass the default for backwards-compatibility makes sense, but in terms of end-user messaging I think it makes more sense to frame it as something each user should explicitly choose.\r\n\r\nAlso, from the perspective of end users, I think most people will find a lot of value in starting with Dart Sass because it's easy to install and moving to LibSass if and when they need a performance boost. Presenting the default documented workflow as LibSass first means you'll have some percentage of users whose first interaction with `sass-loader` is installation woes caused by native compilation.",
        "created_at": "2018-05-31T00:24:37Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191960412",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191960412"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191960412"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191293223
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191960554",
        "pull_request_review_id": 124637649,
        "id": 191960554,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTk2MDU1NA==",
        "diff_hunk": "@@ -101,4 +90,36 @@ function sassLoader(content) {\n     });\n }\n \n+/**\n+ * Verifies that the implementation and version of Sass is supported by this loader.\n+ *\n+ * @param {string} info\n+ */\n+function validateSassVersion(info) {\n+    const parsed = /^([^\\t]+)\\t([^\\t]+)/.exec(info);",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 64,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "68315652ce4a84ec1c7759b5f0b936c5ddcfc5dd",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This last regex isn't parsing the semver itself, it's parsing the implementation name and version number from the info string. I could also use `info.split(\"\\t\")` if you want to avoid any regexes.",
        "created_at": "2018-05-31T00:25:34Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191960554",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191960554"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191960554"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191267305
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191966379",
        "pull_request_review_id": 124637649,
        "id": 191966379,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTk2NjM3OQ==",
        "diff_hunk": "@@ -6,6 +6,7 @@ const path = require(\"path\");\n const webpack = require(\"webpack\");\n const fs = require(\"fs\");\n const merge = require(\"webpack-merge\");\n+const sass = require(\"node-sass\");",
        "path": "test/index.test.js",
        "position": null,
        "original_position": 4,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm still not sure I understand. Can you give me an example of what a test you're envisioning would look like?",
        "created_at": "2018-05-31T01:15:07Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191966379",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/191966379"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r191966379"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191178523
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/192382361",
        "pull_request_review_id": 125150395,
        "id": 192382361,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjM4MjM2MQ==",
        "diff_hunk": "@@ -48,14 +54,18 @@ module.exports = {\n             use: [\n                 \"style-loader\", // creates style nodes from JS strings\n                 \"css-loader\", // translates CSS into CommonJS\n-                \"sass-loader\" // compiles Sass to CSS\n+                {\n+                  loader: \"sass-loader\", // compiles Sass to CSS\n+                  // require(\"node-sass\") instead to use Node Sass\n+                  options: {implementation: require(\"sass\")}",
        "path": "README.md",
        "position": null,
        "original_position": 29,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "daa50c7d5b57feb6df2c284fead03ed96d5cc72e",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@nex3 please do this, we switch on dart sass in next major release. We should try dart sass in wild before release major.",
        "created_at": "2018-06-01T12:39:19Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r192382361",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/192382361"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r192382361"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191293223
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/192382535",
        "pull_request_review_id": 125150616,
        "id": 192382535,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjM4MjUzNQ==",
        "diff_hunk": "@@ -101,4 +90,36 @@ function sassLoader(content) {\n     });\n }\n \n+/**\n+ * Verifies that the implementation and version of Sass is supported by this loader.\n+ *\n+ * @param {string} info\n+ */\n+function validateSassVersion(info) {\n+    const parsed = /^([^\\t]+)\\t([^\\t]+)/.exec(info);",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 64,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "68315652ce4a84ec1c7759b5f0b936c5ddcfc5dd",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@nex3 maybe we can do this without regex?",
        "created_at": "2018-06-01T12:40:03Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r192382535",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/192382535"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r192382535"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191267305
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/192383114",
        "pull_request_review_id": 125151331,
        "id": 192383114,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjM4MzExNA==",
        "diff_hunk": "@@ -6,6 +6,7 @@ const path = require(\"path\");\n const webpack = require(\"webpack\");\n const fs = require(\"fs\");\n const merge = require(\"webpack-merge\");\n+const sass = require(\"node-sass\");",
        "path": "test/index.test.js",
        "position": null,
        "original_position": 4,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Like this (pseudo code):\r\n```js\r\nimplementations.forEach(implementation => {\r\n  syntaxStyles.forEach(ext => {\r\n    loaderOptions.implementation = implementation\r\n    // tests\r\n  });\r\n})\r\n```",
        "created_at": "2018-06-01T12:42:29Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r192383114",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/192383114"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r192383114"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191178523
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/192383456",
        "pull_request_review_id": 125151331,
        "id": 192383456,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjM4MzQ1Ng==",
        "diff_hunk": "@@ -6,6 +6,7 @@ const path = require(\"path\");\n const webpack = require(\"webpack\");\n const fs = require(\"fs\");\n const merge = require(\"webpack-merge\");\n+const sass = require(\"node-sass\");",
        "path": "test/index.test.js",
        "position": null,
        "original_position": 4,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Also add `implementations.forEach` here https://github.com/webpack-contrib/sass-loader/blob/master/test/index.test.js#L112",
        "created_at": "2018-06-01T12:43:42Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r192383456",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/192383456"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r192383456"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191178523
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/192540885",
        "pull_request_review_id": 125347120,
        "id": 192540885,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjU0MDg4NQ==",
        "diff_hunk": "@@ -48,14 +54,18 @@ module.exports = {\n             use: [\n                 \"style-loader\", // creates style nodes from JS strings\n                 \"css-loader\", // translates CSS into CommonJS\n-                \"sass-loader\" // compiles Sass to CSS\n+                {\n+                  loader: \"sass-loader\", // compiles Sass to CSS\n+                  // require(\"node-sass\") instead to use Node Sass\n+                  options: {implementation: require(\"sass\")}",
        "path": "README.md",
        "position": null,
        "original_position": 29,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "daa50c7d5b57feb6df2c284fead03ed96d5cc72e",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.",
        "created_at": "2018-06-02T00:21:04Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r192540885",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/192540885"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r192540885"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191293223
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/192540895",
        "pull_request_review_id": 125347120,
        "id": 192540895,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjU0MDg5NQ==",
        "diff_hunk": "@@ -101,4 +90,36 @@ function sassLoader(content) {\n     });\n }\n \n+/**\n+ * Verifies that the implementation and version of Sass is supported by this loader.\n+ *\n+ * @param {string} info\n+ */\n+function validateSassVersion(info) {\n+    const parsed = /^([^\\t]+)\\t([^\\t]+)/.exec(info);",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 64,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "68315652ce4a84ec1c7759b5f0b936c5ddcfc5dd",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.",
        "created_at": "2018-06-02T00:21:11Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r192540895",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/192540895"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r192540895"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191267305
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/192540980",
        "pull_request_review_id": 125347120,
        "id": 192540980,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjU0MDk4MA==",
        "diff_hunk": "@@ -6,6 +6,7 @@ const path = require(\"path\");\n const webpack = require(\"webpack\");\n const fs = require(\"fs\");\n const merge = require(\"webpack-merge\");\n+const sass = require(\"node-sass\");",
        "path": "test/index.test.js",
        "position": null,
        "original_position": 4,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "00ba1bd036d4ce873f6384f458caca97195b038e",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.",
        "created_at": "2018-06-02T00:22:19Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r192540980",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/192540980"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r192540980"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 191178523
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/199109203",
        "pull_request_review_id": 133163691,
        "id": 199109203,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTEwOTIwMw==",
        "diff_hunk": "@@ -1,7 +0,0 @@\n-// Special behavior of node-sass/libsass with CSS-files\n-// 1. CSS-files are not included, but linked with @import url(path/to/css)\n-@import ~css/some-css-module.css\n-// 2. It does not matter whether the CSS-file exists or not, the file is just linked\n-@import ./does/not/exist.css\n-// 3. When the .css extension is missing, the file is included just like scss\n-@import ~css/some-css-module",
        "path": "test/sass/import-css.sass",
        "position": null,
        "original_position": 7,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "3d240896b6b3266426b3c8a75e9f095c33d12ce8",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why some tests will be removed?",
        "created_at": "2018-06-29T09:45:35Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r199109203",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/199109203"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r199109203"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/199261845",
        "pull_request_review_id": 133354284,
        "id": 199261845,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTI2MTg0NQ==",
        "diff_hunk": "@@ -1,7 +0,0 @@\n-// Special behavior of node-sass/libsass with CSS-files\n-// 1. CSS-files are not included, but linked with @import url(path/to/css)\n-@import ~css/some-css-module.css\n-// 2. It does not matter whether the CSS-file exists or not, the file is just linked\n-@import ./does/not/exist.css\n-// 3. When the .css extension is missing, the file is included just like scss\n-@import ~css/some-css-module",
        "path": "test/sass/import-css.sass",
        "position": null,
        "original_position": 7,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "3d240896b6b3266426b3c8a75e9f095c33d12ce8",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "CSS imports are not currently supported by Dart Sass. CSS imports with the `.css` suffix are also slated for removal from LibSass.",
        "created_at": "2018-06-29T19:39:33Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r199261845",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/199261845"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r199261845"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 199109203
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/199264632",
        "pull_request_review_id": 133357934,
        "id": 199264632,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTI2NDYzMg==",
        "diff_hunk": "@@ -1,7 +0,0 @@\n-// Special behavior of node-sass/libsass with CSS-files\n-// 1. CSS-files are not included, but linked with @import url(path/to/css)\n-@import ~css/some-css-module.css\n-// 2. It does not matter whether the CSS-file exists or not, the file is just linked\n-@import ./does/not/exist.css\n-// 3. When the .css extension is missing, the file is included just like scss\n-@import ~css/some-css-module",
        "path": "test/sass/import-css.sass",
        "position": null,
        "original_position": 7,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "3d240896b6b3266426b3c8a75e9f095c33d12ce8",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@nex3 can we left css tests only for `node-sass`, we remove this after upgrade `node-sass` to 5.",
        "created_at": "2018-06-29T19:52:51Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r199264632",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/199264632"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r199264632"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 199109203
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/199267747",
        "pull_request_review_id": 133361888,
        "id": 199267747,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTI2Nzc0Nw==",
        "diff_hunk": "@@ -1,7 +0,0 @@\n-// Special behavior of node-sass/libsass with CSS-files\n-// 1. CSS-files are not included, but linked with @import url(path/to/css)\n-@import ~css/some-css-module.css\n-// 2. It does not matter whether the CSS-file exists or not, the file is just linked\n-@import ./does/not/exist.css\n-// 3. When the .css extension is missing, the file is included just like scss\n-@import ~css/some-css-module",
        "path": "test/sass/import-css.sass",
        "position": null,
        "original_position": 7,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "3d240896b6b3266426b3c8a75e9f095c33d12ce8",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't know how, since all these test files are shared between the two implementations.",
        "created_at": "2018-06-29T20:06:21Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r199267747",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/199267747"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r199267747"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 199109203
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/199269043",
        "pull_request_review_id": 133363538,
        "id": 199269043,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTI2OTA0Mw==",
        "diff_hunk": "@@ -1,7 +0,0 @@\n-// Special behavior of node-sass/libsass with CSS-files\n-// 1. CSS-files are not included, but linked with @import url(path/to/css)\n-@import ~css/some-css-module.css\n-// 2. It does not matter whether the CSS-file exists or not, the file is just linked\n-@import ./does/not/exist.css\n-// 3. When the .css extension is missing, the file is included just like scss\n-@import ~css/some-css-module",
        "path": "test/sass/import-css.sass",
        "position": null,
        "original_position": 7,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "3d240896b6b3266426b3c8a75e9f095c33d12ce8",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@nex3 need investigate, will be great if you do this, otherwise i can try this too",
        "created_at": "2018-06-29T20:12:29Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r199269043",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/199269043"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r199269043"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 199109203
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/199270602",
        "pull_request_review_id": 133365604,
        "id": 199270602,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTI3MDYwMg==",
        "diff_hunk": "@@ -1,7 +0,0 @@\n-// Special behavior of node-sass/libsass with CSS-files\n-// 1. CSS-files are not included, but linked with @import url(path/to/css)\n-@import ~css/some-css-module.css\n-// 2. It does not matter whether the CSS-file exists or not, the file is just linked\n-@import ./does/not/exist.css\n-// 3. When the .css extension is missing, the file is included just like scss\n-@import ~css/some-css-module",
        "path": "test/sass/import-css.sass",
        "position": null,
        "original_position": 7,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "3d240896b6b3266426b3c8a75e9f095c33d12ce8",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I definitely don't know how to do it without a huge refactor of how tests are run.",
        "created_at": "2018-06-29T20:19:54Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r199270602",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/199270602"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r199270602"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 199109203
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/200701317",
        "pull_request_review_id": 135073796,
        "id": 200701317,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDcwMTMxNw==",
        "diff_hunk": "@@ -1,7 +0,0 @@\n-// Special behavior of node-sass/libsass with CSS-files\n-// 1. CSS-files are not included, but linked with @import url(path/to/css)\n-@import ~css/some-css-module.css\n-// 2. It does not matter whether the CSS-file exists or not, the file is just linked\n-@import ./does/not/exist.css\n-// 3. When the .css extension is missing, the file is included just like scss\n-@import ~css/some-css-module",
        "path": "test/sass/import-css.sass",
        "position": null,
        "original_position": 7,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "3d240896b6b3266426b3c8a75e9f095c33d12ce8",
        "user": {
            "login": "TroyAlford",
            "id": 12262780,
            "node_id": "MDQ6VXNlcjEyMjYyNzgw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/12262780?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TroyAlford",
            "html_url": "https://github.com/TroyAlford",
            "followers_url": "https://api.github.com/users/TroyAlford/followers",
            "following_url": "https://api.github.com/users/TroyAlford/following{/other_user}",
            "gists_url": "https://api.github.com/users/TroyAlford/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TroyAlford/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TroyAlford/subscriptions",
            "organizations_url": "https://api.github.com/users/TroyAlford/orgs",
            "repos_url": "https://api.github.com/users/TroyAlford/repos",
            "events_url": "https://api.github.com/users/TroyAlford/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TroyAlford/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@evilebottnawi - do you have any ETA when you might be able to look at this? :) Or, is it possible to move forward without this, as the features being tested are soon to deprecate anyway?",
        "created_at": "2018-07-06T16:13:22Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r200701317",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/200701317"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r200701317"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 199109203
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/200703150",
        "pull_request_review_id": 135076089,
        "id": 200703150,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDcwMzE1MA==",
        "diff_hunk": "@@ -1,7 +0,0 @@\n-// Special behavior of node-sass/libsass with CSS-files\n-// 1. CSS-files are not included, but linked with @import url(path/to/css)\n-@import ~css/some-css-module.css\n-// 2. It does not matter whether the CSS-file exists or not, the file is just linked\n-@import ./does/not/exist.css\n-// 3. When the .css extension is missing, the file is included just like scss\n-@import ~css/some-css-module",
        "path": "test/sass/import-css.sass",
        "position": null,
        "original_position": 7,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "3d240896b6b3266426b3c8a75e9f095c33d12ce8",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@TroyAlford need @jhnns review",
        "created_at": "2018-07-06T16:20:55Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r200703150",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/200703150"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r200703150"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 199109203
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/200832341",
        "pull_request_review_id": 135224848,
        "id": 200832341,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgzMjM0MQ==",
        "diff_hunk": "@@ -24,11 +24,17 @@ Looking for the webpack 1 loader? Check out the [archive/webpack-1 branch](https\n <h2 align=\"center\">Install</h2>\n \n ```bash\n-npm install sass-loader node-sass webpack --save-dev\n+npm install sass-loader sass webpack --save-dev",
        "path": "README.md",
        "position": null,
        "original_position": 5,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "3d240896b6b3266426b3c8a75e9f095c33d12ce8",
        "user": {
            "login": "Gnuk",
            "id": 1397032,
            "node_id": "MDQ6VXNlcjEzOTcwMzI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1397032?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gnuk",
            "html_url": "https://github.com/Gnuk",
            "followers_url": "https://api.github.com/users/Gnuk/followers",
            "following_url": "https://api.github.com/users/Gnuk/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gnuk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gnuk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gnuk/subscriptions",
            "organizations_url": "https://api.github.com/users/Gnuk/orgs",
            "repos_url": "https://api.github.com/users/Gnuk/repos",
            "events_url": "https://api.github.com/users/Gnuk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gnuk/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why there is dart sass installation if node-sass is the default implementation?\r\n\r\n> `\"sass-loader\" // compiles Sass to CSS, using Node Sass by default` later in an example in this file.",
        "created_at": "2018-07-08T07:51:02Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r200832341",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/200832341"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r200832341"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201189861",
        "pull_request_review_id": 135642129,
        "id": 201189861,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTE4OTg2MQ==",
        "diff_hunk": "@@ -24,11 +24,17 @@ Looking for the webpack 1 loader? Check out the [archive/webpack-1 branch](https\n <h2 align=\"center\">Install</h2>\n \n ```bash\n-npm install sass-loader node-sass webpack --save-dev\n+npm install sass-loader sass webpack --save-dev",
        "path": "README.md",
        "position": null,
        "original_position": 5,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "3d240896b6b3266426b3c8a75e9f095c33d12ce8",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oops, I missed this. Changed back to `node-sass`.",
        "created_at": "2018-07-10T00:48:50Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201189861",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201189861"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201189861"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 200832341
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201715888",
        "pull_request_review_id": 136271396,
        "id": 201715888,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTcxNTg4OA==",
        "diff_hunk": "@@ -79,7 +85,54 @@ module.exports = {\n };\n ```\n \n-See [node-sass](https://github.com/andrew/node-sass) for all available Sass options.\n+See [the Node Sass documentation](https://github.com/sass/node-sass/blob/master/README.md#options) for all available Sass options.\n+\n+The special `implementation` option determines which implementation of Sass to\n+use. It takes either a [Node Sass][] or a [Dart Sass][] module. For example, to\n+use Dart Sass, you'd pass:\n+\n+```js\n+// ...\n+    {\n+        loader: \"sass-loader\",\n+        options: {\n+            implementation: require(\"sass\")\n+        }\n+    }\n+// ...\n+```\n+\n+Note that when using Dart Sass, **synchronous compilation is twice as fast as\n+asynchronous compilation** by default, due to the overhead of asynchronous\n+callbacks. To avoid this overhead, you can use the\n+[`fibers`](https://www.npmjs.com/package/fibers) package to call asynchronous\n+importers from the synchronous code path. To enable this, pass the `Fiber` class\n+to the `fiber` option:",
        "path": "README.md",
        "position": 61,
        "original_position": 61,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "05d20e6852df1a351347a4cce3fc3480bfd1955e",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Since webpack uses the asynchronous compilation, can we automate that process? So that we just `require(\"fiber\")`  and apply the option automatically from `normalizeOptions`? I guess that every dart-sass user would want to have that speedup. If `require(\"fiber\")` fails, we could instruct the user to install `fiber` and point a link to the dart-sass README.\r\n\r\nIn this README, I'd just mention something like \"be sure to have fibers installed in your project, see dart-sass README\" (with link).\r\n\r\nWhat do you think?\r\n\r\nWe'd need to add fibers as dev dependency then.",
        "created_at": "2018-07-11T14:39:44Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201715888",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201715888"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201715888"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201725985",
        "pull_request_review_id": 136271396,
        "id": 201725985,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTcyNTk4NQ==",
        "diff_hunk": "@@ -53,6 +41,13 @@ function sassLoader(content) {\n         addNormalizedDependency\n     ));\n \n+    if (asyncSassJobQueue === null) {\n+        const implementation = options.implementation || require(\"node-sass\");\n+\n+        validateSassVersion(implementation.info);\n+        asyncSassJobQueue = async.queue(implementation.render, threadPoolSize - 1);",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 36,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "05d20e6852df1a351347a4cce3fc3480bfd1955e",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The async job queue mitigates a problem of node-sass/libsass where the threadpool gets exhausted (see https://github.com/sass/node-sass/issues/857#issuecomment-93594360). Do you know if dart-sass suffers from the same problem? (I don't think so, unless you ask for a thread from libuv like node-sass does)\r\n\r\nIf not, we could get rid of the queue for dart-sass.",
        "created_at": "2018-07-11T15:03:59Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201725985",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201725985"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201725985"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201728363",
        "pull_request_review_id": 136271396,
        "id": 201728363,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTcyODM2Mw==",
        "diff_hunk": "@@ -92,4 +87,36 @@ function sassLoader(content) {\n     });\n }\n \n+/**\n+ * Verifies that the implementation and version of Sass is supported by this loader.\n+ *\n+ * @param {string} info\n+ */\n+function validateSassVersion(info) {\n+    const components = info.split(\"\\t\");\n+\n+    if (components.length < 2) {\n+        throw new Error(\"Unknown Sass implementation \\\"\" + info + \"\\\".\");\n+    }\n+\n+    const implementation = components[0];\n+    const version = components[1];\n+\n+    if (!semver.valid(version)) {\n+        throw new Error(\"Invalid Sass version \\\"\" + version + \"\\\".\");\n+    }\n+\n+    if (implementation === \"dart-sass\") {\n+        if (!semver.satisfies(version, \"^1.3.0\")) {\n+            throw new Error(\"Dart Sass version \" + version + \" is incompatible with ^1.3.0.\");\n+        }\n+    } else if (implementation === \"node-sass\") {\n+        if (!semver.satisfies(version, \"^4.0.0\")) {\n+            throw new Error(\"Node Sass version \" + version + \" is incompatible with ^4.0.0.\");\n+        }\n+    } else {\n+        throw new Error(\"Unknown implementation \\\"\" + implementation + \"\\\".\");\n+    }\n+}\n+",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 77,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "05d20e6852df1a351347a4cce3fc3480bfd1955e",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1:",
        "created_at": "2018-07-11T15:10:17Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201728363",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201728363"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201728363"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201729325",
        "pull_request_review_id": 136271396,
        "id": 201729325,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTcyOTMyNQ==",
        "diff_hunk": "@@ -32,299 +35,386 @@ Object.defineProperty(loaderContextMock, \"options\", {\n     }\n });\n \n-syntaxStyles.forEach(ext => {\n-    function execTest(testId, loaderOptions, webpackOptions) {\n-        return new Promise((resolve, reject) => {\n-            const baseConfig = merge({\n-                entry: path.join(__dirname, ext, testId + \".\" + ext),\n-                output: {\n-                    filename: \"bundle.\" + ext + \".js\"\n-                },\n-                module: {\n-                    rules: [{\n-                        test: new RegExp(`\\\\.${ ext }$`),\n-                        use: [\n-                            { loader: \"raw-loader\" },\n-                            { loader: pathToSassLoader, options: loaderOptions }\n-                        ]\n-                    }]\n-                }\n-            }, webpackOptions);\n+implementations.forEach(implementation => {\n+    const implementationName = implementation.info.split(\"\\t\")[0];\n+    describe(implementationName, () => {\n+        syntaxStyles.forEach(ext => {\n+            function execTest(testId, loaderOptions, webpackOptions) {\n+                const bundleName = \"bundle.\" + ext + \".\" + implementationName + \".js\";\n+                return new Promise((resolve, reject) => {\n+                    const baseConfig = merge({\n+                        entry: path.join(__dirname, ext, testId + \".\" + ext),\n+                        output: {\n+                            filename: bundleName\n+                        }\n+                    }, webpackOptions);\n \n-            runWebpack(baseConfig, (err) => err ? reject(err) : resolve());\n-        }).then(() => {\n-            const actualCss = readBundle(\"bundle.\" + ext + \".js\");\n-            const expectedCss = readCss(ext, testId);\n+                    runWebpack(baseConfig, loaderOptions, (err) => err ? reject(err) : resolve());\n+                }).then(() => {\n+                    const actualCss = readBundle(bundleName);\n+                    const expectedCss = readCss(ext, testId);\n \n-            // writing the actual css to output-dir for better debugging\n-            // fs.writeFileSync(path.join(__dirname, \"output\", `${ testId }.${ ext }.css`), actualCss, \"utf8\");\n-            actualCss.should.eql(expectedCss);\n-        });\n-    }\n+                    // writing the actual css to output-dir for better debugging\n+                    // fs.writeFileSync(path.join(__dirname, \"output\", `${ testId }.${ ext }.css`), actualCss, \"utf8\");\n+                    actualCss.should.eql(expectedCss);\n+                });\n+            }\n \n-    describe(`sass-loader (${ ext })`, () => {\n-        describe(\"basic\", () => {\n-            it(\"should compile simple sass without errors\", () => execTest(\"language\"));\n-        });\n-        describe(\"imports\", () => {\n-            it(\"should resolve imports correctly\", () => execTest(\"imports\"));\n-            // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/32\n-            it(\"should pass with multiple imports\", () => execTest(\"multiple-imports\"));\n-            // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/73\n-            it(\"should resolve imports from other language style correctly\", () => execTest(\"import-other-style\"));\n-            // Test for includePath imports\n-            it(\"should resolve imports from another directory declared by includePaths correctly\", () => execTest(\"import-include-paths\", {\n-                includePaths: [path.join(__dirname, ext, \"includePath\")]\n-            }));\n-            it(\"should not resolve CSS imports\", () => execTest(\"import-css\"));\n-            it(\"should compile bootstrap-sass without errors\", () => execTest(\"bootstrap-sass\"));\n-            it(\"should correctly import scoped npm packages\", () => execTest(\"import-from-npm-org-pkg\"));\n-            it(\"should resolve aliases\", () => execTest(\"import-alias\", {}, {\n-                resolve: {\n-                    alias: {\n-                        \"path-to-alias\": path.join(__dirname, ext, \"another\", \"alias.\" + ext)\n-                    }\n-                }\n-            }));\n-        });\n-        describe(\"custom importers\", () => {\n-            it(\"should use custom importer\", () => execTest(\"custom-importer\", {\n-                importer: customImporter\n-            }));\n-        });\n-        describe(\"custom functions\", () => {\n-            it(\"should expose custom functions\", () => execTest(\"custom-functions\", {\n-                functions: customFunctions\n-            }));\n-        });\n-        describe(\"prepending data\", () => {\n-            it(\"should extend the data-option if present\", () => execTest(\"prepending-data\", {\n-                data: \"$prepended-data: hotpink;\"\n-            }));\n-        });\n-        // See https://github.com/webpack-contrib/sass-loader/issues/21\n-        describe(\"empty files\", () => {\n-            it(\"should compile without errors\", () => execTest(\"empty\"));\n+            describe(`sass-loader (${ ext })`, () => {\n+                describe(\"basic\", () => {\n+                    it(\"should compile simple sass without errors\", () => execTest(\"language\"));\n+                });\n+                describe(\"imports\", () => {\n+                    it(\"should resolve imports correctly\", () => execTest(\"imports\"));\n+                    // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/32\n+                    it(\"should pass with multiple imports\", () => execTest(\"multiple-imports\"));\n+                    // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/73\n+                    it(\"should resolve imports from other language style correctly\", () => execTest(\"import-other-style\"));\n+                    // Test for includePath imports\n+                    it(\"should resolve imports from another directory declared by includePaths correctly\", () => execTest(\"import-include-paths\", {\n+                        includePaths: [path.join(__dirname, ext, \"includePath\")]\n+                    }));\n+                    it(\"should compile bootstrap-sass without errors\", () => execTest(\"bootstrap-sass\"));\n+                    it(\"should correctly import scoped npm packages\", () => execTest(\"import-from-npm-org-pkg\"));\n+                    it(\"should resolve aliases\", () => execTest(\"import-alias\", {}, {\n+                        resolve: {\n+                            alias: {\n+                                \"path-to-alias\": path.join(__dirname, ext, \"another\", \"alias.\" + ext)\n+                            }\n+                        }\n+                    }));\n+                });\n+                describe(\"custom importers\", () => {\n+                    it(\"should use custom importer\", () => execTest(\"custom-importer\", {\n+                        importer: customImporter\n+                    }));\n+                });\n+                describe(\"custom functions\", () => {\n+                    it(\"should expose custom functions\", () => execTest(\"custom-functions\", {\n+                        functions: customFunctions(implementation)\n+                    }));\n+                });\n+                describe(\"prepending data\", () => {\n+                    it(\"should extend the data-option if present\", () => execTest(\"prepending-data\", {\n+                        data: \"$prepended-data: hotpink\" + (ext == \"sass\" ? \"\\n\" : \";\")",
        "path": "test/index.test.js",
        "position": null,
        "original_position": 152,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "05d20e6852df1a351347a4cce3fc3480bfd1955e",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Nice catch \ud83d\udc4d ",
        "created_at": "2018-07-11T15:12:43Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201729325",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201729325"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201729325"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201730222",
        "pull_request_review_id": 136271396,
        "id": 201730222,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTczMDIyMg==",
        "diff_hunk": "@@ -32,299 +35,386 @@ Object.defineProperty(loaderContextMock, \"options\", {\n     }\n });\n \n-syntaxStyles.forEach(ext => {\n-    function execTest(testId, loaderOptions, webpackOptions) {\n-        return new Promise((resolve, reject) => {\n-            const baseConfig = merge({\n-                entry: path.join(__dirname, ext, testId + \".\" + ext),\n-                output: {\n-                    filename: \"bundle.\" + ext + \".js\"\n-                },\n-                module: {\n-                    rules: [{\n-                        test: new RegExp(`\\\\.${ ext }$`),\n-                        use: [\n-                            { loader: \"raw-loader\" },\n-                            { loader: pathToSassLoader, options: loaderOptions }\n-                        ]\n-                    }]\n-                }\n-            }, webpackOptions);\n+implementations.forEach(implementation => {\n+    const implementationName = implementation.info.split(\"\\t\")[0];\n+    describe(implementationName, () => {\n+        syntaxStyles.forEach(ext => {\n+            function execTest(testId, loaderOptions, webpackOptions) {\n+                const bundleName = \"bundle.\" + ext + \".\" + implementationName + \".js\";\n+                return new Promise((resolve, reject) => {\n+                    const baseConfig = merge({\n+                        entry: path.join(__dirname, ext, testId + \".\" + ext),\n+                        output: {\n+                            filename: bundleName\n+                        }\n+                    }, webpackOptions);\n \n-            runWebpack(baseConfig, (err) => err ? reject(err) : resolve());\n-        }).then(() => {\n-            const actualCss = readBundle(\"bundle.\" + ext + \".js\");\n-            const expectedCss = readCss(ext, testId);\n+                    runWebpack(baseConfig, loaderOptions, (err) => err ? reject(err) : resolve());\n+                }).then(() => {\n+                    const actualCss = readBundle(bundleName);\n+                    const expectedCss = readCss(ext, testId);\n \n-            // writing the actual css to output-dir for better debugging\n-            // fs.writeFileSync(path.join(__dirname, \"output\", `${ testId }.${ ext }.css`), actualCss, \"utf8\");\n-            actualCss.should.eql(expectedCss);\n-        });\n-    }\n+                    // writing the actual css to output-dir for better debugging\n+                    // fs.writeFileSync(path.join(__dirname, \"output\", `${ testId }.${ ext }.css`), actualCss, \"utf8\");\n+                    actualCss.should.eql(expectedCss);\n+                });\n+            }\n \n-    describe(`sass-loader (${ ext })`, () => {\n-        describe(\"basic\", () => {\n-            it(\"should compile simple sass without errors\", () => execTest(\"language\"));\n-        });\n-        describe(\"imports\", () => {\n-            it(\"should resolve imports correctly\", () => execTest(\"imports\"));\n-            // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/32\n-            it(\"should pass with multiple imports\", () => execTest(\"multiple-imports\"));\n-            // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/73\n-            it(\"should resolve imports from other language style correctly\", () => execTest(\"import-other-style\"));\n-            // Test for includePath imports\n-            it(\"should resolve imports from another directory declared by includePaths correctly\", () => execTest(\"import-include-paths\", {\n-                includePaths: [path.join(__dirname, ext, \"includePath\")]\n-            }));\n-            it(\"should not resolve CSS imports\", () => execTest(\"import-css\"));\n-            it(\"should compile bootstrap-sass without errors\", () => execTest(\"bootstrap-sass\"));\n-            it(\"should correctly import scoped npm packages\", () => execTest(\"import-from-npm-org-pkg\"));\n-            it(\"should resolve aliases\", () => execTest(\"import-alias\", {}, {\n-                resolve: {\n-                    alias: {\n-                        \"path-to-alias\": path.join(__dirname, ext, \"another\", \"alias.\" + ext)\n-                    }\n-                }\n-            }));\n-        });\n-        describe(\"custom importers\", () => {\n-            it(\"should use custom importer\", () => execTest(\"custom-importer\", {\n-                importer: customImporter\n-            }));\n-        });\n-        describe(\"custom functions\", () => {\n-            it(\"should expose custom functions\", () => execTest(\"custom-functions\", {\n-                functions: customFunctions\n-            }));\n-        });\n-        describe(\"prepending data\", () => {\n-            it(\"should extend the data-option if present\", () => execTest(\"prepending-data\", {\n-                data: \"$prepended-data: hotpink;\"\n-            }));\n-        });\n-        // See https://github.com/webpack-contrib/sass-loader/issues/21\n-        describe(\"empty files\", () => {\n-            it(\"should compile without errors\", () => execTest(\"empty\"));\n+            describe(`sass-loader (${ ext })`, () => {\n+                describe(\"basic\", () => {\n+                    it(\"should compile simple sass without errors\", () => execTest(\"language\"));\n+                });\n+                describe(\"imports\", () => {\n+                    it(\"should resolve imports correctly\", () => execTest(\"imports\"));\n+                    // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/32\n+                    it(\"should pass with multiple imports\", () => execTest(\"multiple-imports\"));\n+                    // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/73\n+                    it(\"should resolve imports from other language style correctly\", () => execTest(\"import-other-style\"));\n+                    // Test for includePath imports\n+                    it(\"should resolve imports from another directory declared by includePaths correctly\", () => execTest(\"import-include-paths\", {\n+                        includePaths: [path.join(__dirname, ext, \"includePath\")]\n+                    }));\n+                    it(\"should compile bootstrap-sass without errors\", () => execTest(\"bootstrap-sass\"));\n+                    it(\"should correctly import scoped npm packages\", () => execTest(\"import-from-npm-org-pkg\"));\n+                    it(\"should resolve aliases\", () => execTest(\"import-alias\", {}, {\n+                        resolve: {\n+                            alias: {\n+                                \"path-to-alias\": path.join(__dirname, ext, \"another\", \"alias.\" + ext)\n+                            }\n+                        }\n+                    }));\n+                });\n+                describe(\"custom importers\", () => {\n+                    it(\"should use custom importer\", () => execTest(\"custom-importer\", {\n+                        importer: customImporter\n+                    }));\n+                });\n+                describe(\"custom functions\", () => {\n+                    it(\"should expose custom functions\", () => execTest(\"custom-functions\", {\n+                        functions: customFunctions(implementation)\n+                    }));\n+                });\n+                describe(\"prepending data\", () => {\n+                    it(\"should extend the data-option if present\", () => execTest(\"prepending-data\", {\n+                        data: \"$prepended-data: hotpink\" + (ext == \"sass\" ? \"\\n\" : \";\")\n+                    }));\n+                });\n+                // See https://github.com/webpack-contrib/sass-loader/issues/21\n+                describe(\"empty files\", () => {\n+                    it(\"should compile without errors\", () => execTest(\"empty\"));\n+                });\n+            });\n         });\n-    });\n-});\n \n-describe(\"sass-loader\", () => {\n-    describe(\"multiple compilations\", () => {\n-        it(\"should not interfere with each other\", () =>\n-            new Promise((resolve, reject) => {\n-                runWebpack({\n-                    entry: {\n-                        b: path.join(__dirname, \"scss\", \"multipleCompilations\", \"b.scss\"),\n-                        c: path.join(__dirname, \"scss\", \"multipleCompilations\", \"c.scss\"),\n-                        a: path.join(__dirname, \"scss\", \"multipleCompilations\", \"a.scss\"),\n-                        d: path.join(__dirname, \"scss\", \"multipleCompilations\", \"d.scss\"),\n-                        e: path.join(__dirname, \"scss\", \"multipleCompilations\", \"e.scss\"),\n-                        f: path.join(__dirname, \"scss\", \"multipleCompilations\", \"f.scss\"),\n-                        g: path.join(__dirname, \"scss\", \"multipleCompilations\", \"g.scss\"),\n-                        h: path.join(__dirname, \"scss\", \"multipleCompilations\", \"h.scss\")\n-                    },\n-                    output: {\n-                        filename: \"bundle.multiple-compilations.[name].js\"\n-                    },\n-                    module: {\n-                        rules: [{\n-                            test: /\\.scss$/,\n-                            use: [\n-                                { loader: \"raw-loader\" },\n-                                // We're specifying an empty options object because otherwise, webpack creates a new object for every loader invocation\n-                                // Since we want to ensure that our loader is not tampering with the option object, we are triggering webpack to re-use the options object\n-                                // @see https://github.com/webpack-contrib/sass-loader/issues/368#issuecomment-278330164\n-                                { loader: pathToSassLoader, options: {} }\n-                            ]\n-                        }]",
        "path": "test/index.test.js",
        "position": 198,
        "original_position": 192,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "05d20e6852df1a351347a4cce3fc3480bfd1955e",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thanks for deduping that",
        "created_at": "2018-07-11T15:14:52Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201730222",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201730222"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201730222"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201730758",
        "pull_request_review_id": 136271396,
        "id": 201730758,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTczMDc1OA==",
        "diff_hunk": "@@ -32,299 +35,386 @@ Object.defineProperty(loaderContextMock, \"options\", {\n     }\n });\n \n-syntaxStyles.forEach(ext => {\n-    function execTest(testId, loaderOptions, webpackOptions) {\n-        return new Promise((resolve, reject) => {\n-            const baseConfig = merge({\n-                entry: path.join(__dirname, ext, testId + \".\" + ext),\n-                output: {\n-                    filename: \"bundle.\" + ext + \".js\"\n-                },\n-                module: {\n-                    rules: [{\n-                        test: new RegExp(`\\\\.${ ext }$`),\n-                        use: [\n-                            { loader: \"raw-loader\" },\n-                            { loader: pathToSassLoader, options: loaderOptions }\n-                        ]\n-                    }]\n-                }\n-            }, webpackOptions);\n+implementations.forEach(implementation => {\n+    const implementationName = implementation.info.split(\"\\t\")[0];\n+    describe(implementationName, () => {\n+        syntaxStyles.forEach(ext => {\n+            function execTest(testId, loaderOptions, webpackOptions) {\n+                const bundleName = \"bundle.\" + ext + \".\" + implementationName + \".js\";\n+                return new Promise((resolve, reject) => {\n+                    const baseConfig = merge({\n+                        entry: path.join(__dirname, ext, testId + \".\" + ext),\n+                        output: {\n+                            filename: bundleName\n+                        }\n+                    }, webpackOptions);\n \n-            runWebpack(baseConfig, (err) => err ? reject(err) : resolve());\n-        }).then(() => {\n-            const actualCss = readBundle(\"bundle.\" + ext + \".js\");\n-            const expectedCss = readCss(ext, testId);\n+                    runWebpack(baseConfig, loaderOptions, (err) => err ? reject(err) : resolve());\n+                }).then(() => {\n+                    const actualCss = readBundle(bundleName);\n+                    const expectedCss = readCss(ext, testId);\n \n-            // writing the actual css to output-dir for better debugging\n-            // fs.writeFileSync(path.join(__dirname, \"output\", `${ testId }.${ ext }.css`), actualCss, \"utf8\");\n-            actualCss.should.eql(expectedCss);\n-        });\n-    }\n+                    // writing the actual css to output-dir for better debugging\n+                    // fs.writeFileSync(path.join(__dirname, \"output\", `${ testId }.${ ext }.css`), actualCss, \"utf8\");\n+                    actualCss.should.eql(expectedCss);\n+                });\n+            }\n \n-    describe(`sass-loader (${ ext })`, () => {\n-        describe(\"basic\", () => {\n-            it(\"should compile simple sass without errors\", () => execTest(\"language\"));\n-        });\n-        describe(\"imports\", () => {\n-            it(\"should resolve imports correctly\", () => execTest(\"imports\"));\n-            // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/32\n-            it(\"should pass with multiple imports\", () => execTest(\"multiple-imports\"));\n-            // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/73\n-            it(\"should resolve imports from other language style correctly\", () => execTest(\"import-other-style\"));\n-            // Test for includePath imports\n-            it(\"should resolve imports from another directory declared by includePaths correctly\", () => execTest(\"import-include-paths\", {\n-                includePaths: [path.join(__dirname, ext, \"includePath\")]\n-            }));\n-            it(\"should not resolve CSS imports\", () => execTest(\"import-css\"));\n-            it(\"should compile bootstrap-sass without errors\", () => execTest(\"bootstrap-sass\"));\n-            it(\"should correctly import scoped npm packages\", () => execTest(\"import-from-npm-org-pkg\"));\n-            it(\"should resolve aliases\", () => execTest(\"import-alias\", {}, {\n-                resolve: {\n-                    alias: {\n-                        \"path-to-alias\": path.join(__dirname, ext, \"another\", \"alias.\" + ext)\n-                    }\n-                }\n-            }));\n-        });\n-        describe(\"custom importers\", () => {\n-            it(\"should use custom importer\", () => execTest(\"custom-importer\", {\n-                importer: customImporter\n-            }));\n-        });\n-        describe(\"custom functions\", () => {\n-            it(\"should expose custom functions\", () => execTest(\"custom-functions\", {\n-                functions: customFunctions\n-            }));\n-        });\n-        describe(\"prepending data\", () => {\n-            it(\"should extend the data-option if present\", () => execTest(\"prepending-data\", {\n-                data: \"$prepended-data: hotpink;\"\n-            }));\n-        });\n-        // See https://github.com/webpack-contrib/sass-loader/issues/21\n-        describe(\"empty files\", () => {\n-            it(\"should compile without errors\", () => execTest(\"empty\"));\n+            describe(`sass-loader (${ ext })`, () => {\n+                describe(\"basic\", () => {\n+                    it(\"should compile simple sass without errors\", () => execTest(\"language\"));\n+                });\n+                describe(\"imports\", () => {\n+                    it(\"should resolve imports correctly\", () => execTest(\"imports\"));\n+                    // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/32\n+                    it(\"should pass with multiple imports\", () => execTest(\"multiple-imports\"));\n+                    // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/73\n+                    it(\"should resolve imports from other language style correctly\", () => execTest(\"import-other-style\"));\n+                    // Test for includePath imports\n+                    it(\"should resolve imports from another directory declared by includePaths correctly\", () => execTest(\"import-include-paths\", {\n+                        includePaths: [path.join(__dirname, ext, \"includePath\")]\n+                    }));\n+                    it(\"should compile bootstrap-sass without errors\", () => execTest(\"bootstrap-sass\"));\n+                    it(\"should correctly import scoped npm packages\", () => execTest(\"import-from-npm-org-pkg\"));\n+                    it(\"should resolve aliases\", () => execTest(\"import-alias\", {}, {\n+                        resolve: {\n+                            alias: {\n+                                \"path-to-alias\": path.join(__dirname, ext, \"another\", \"alias.\" + ext)\n+                            }\n+                        }\n+                    }));\n+                });\n+                describe(\"custom importers\", () => {\n+                    it(\"should use custom importer\", () => execTest(\"custom-importer\", {\n+                        importer: customImporter\n+                    }));\n+                });\n+                describe(\"custom functions\", () => {\n+                    it(\"should expose custom functions\", () => execTest(\"custom-functions\", {\n+                        functions: customFunctions(implementation)\n+                    }));\n+                });\n+                describe(\"prepending data\", () => {\n+                    it(\"should extend the data-option if present\", () => execTest(\"prepending-data\", {\n+                        data: \"$prepended-data: hotpink\" + (ext == \"sass\" ? \"\\n\" : \";\")\n+                    }));\n+                });\n+                // See https://github.com/webpack-contrib/sass-loader/issues/21\n+                describe(\"empty files\", () => {\n+                    it(\"should compile without errors\", () => execTest(\"empty\"));\n+                });\n+            });\n         });\n-    });\n-});\n \n-describe(\"sass-loader\", () => {\n-    describe(\"multiple compilations\", () => {\n-        it(\"should not interfere with each other\", () =>\n-            new Promise((resolve, reject) => {\n-                runWebpack({\n-                    entry: {\n-                        b: path.join(__dirname, \"scss\", \"multipleCompilations\", \"b.scss\"),\n-                        c: path.join(__dirname, \"scss\", \"multipleCompilations\", \"c.scss\"),\n-                        a: path.join(__dirname, \"scss\", \"multipleCompilations\", \"a.scss\"),\n-                        d: path.join(__dirname, \"scss\", \"multipleCompilations\", \"d.scss\"),\n-                        e: path.join(__dirname, \"scss\", \"multipleCompilations\", \"e.scss\"),\n-                        f: path.join(__dirname, \"scss\", \"multipleCompilations\", \"f.scss\"),\n-                        g: path.join(__dirname, \"scss\", \"multipleCompilations\", \"g.scss\"),\n-                        h: path.join(__dirname, \"scss\", \"multipleCompilations\", \"h.scss\")\n-                    },\n-                    output: {\n-                        filename: \"bundle.multiple-compilations.[name].js\"\n-                    },\n-                    module: {\n-                        rules: [{\n-                            test: /\\.scss$/,\n-                            use: [\n-                                { loader: \"raw-loader\" },\n-                                // We're specifying an empty options object because otherwise, webpack creates a new object for every loader invocation\n-                                // Since we want to ensure that our loader is not tampering with the option object, we are triggering webpack to re-use the options object\n-                                // @see https://github.com/webpack-contrib/sass-loader/issues/368#issuecomment-278330164\n-                                { loader: pathToSassLoader, options: {} }\n-                            ]\n-                        }]\n-                    }\n-                }, err => err ? reject(err) : resolve());\n-            })\n-                .then(() => {\n-                    const expectedCss = readCss(\"scss\", \"imports\");\n-                    const a = readBundle(\"bundle.multiple-compilations.a.js\");\n-                    const b = readBundle(\"bundle.multiple-compilations.b.js\");\n-                    const c = readBundle(\"bundle.multiple-compilations.c.js\");\n-                    const d = readBundle(\"bundle.multiple-compilations.d.js\");\n-                    const e = readBundle(\"bundle.multiple-compilations.e.js\");\n-                    const f = readBundle(\"bundle.multiple-compilations.f.js\");\n-                    const g = readBundle(\"bundle.multiple-compilations.g.js\");\n-                    const h = readBundle(\"bundle.multiple-compilations.h.js\");\n+        describe(\"sass-loader\", () => {\n+            describe(\"multiple compilations\", () => {\n+                it(\"should not interfere with each other\", () =>\n+                    new Promise((resolve, reject) => {\n+                        runWebpack({\n+                            entry: {\n+                                b: path.join(__dirname, \"scss\", \"multipleCompilations\", \"b.scss\"),\n+                                c: path.join(__dirname, \"scss\", \"multipleCompilations\", \"c.scss\"),\n+                                a: path.join(__dirname, \"scss\", \"multipleCompilations\", \"a.scss\"),\n+                                d: path.join(__dirname, \"scss\", \"multipleCompilations\", \"d.scss\"),\n+                                e: path.join(__dirname, \"scss\", \"multipleCompilations\", \"e.scss\"),\n+                                f: path.join(__dirname, \"scss\", \"multipleCompilations\", \"f.scss\"),\n+                                g: path.join(__dirname, \"scss\", \"multipleCompilations\", \"g.scss\"),\n+                                h: path.join(__dirname, \"scss\", \"multipleCompilations\", \"h.scss\")\n+                            },\n+                            output: {\n+                                filename: \"bundle.multiple-compilations.[name].js\"\n+                            }\n+                        }, {}, err => err ? reject(err) : resolve());\n+                    })\n+                        .then(() => {\n+                            const expectedCss = readCss(\"scss\", \"imports\");\n+                            const a = readBundle(\"bundle.multiple-compilations.a.js\");\n+                            const b = readBundle(\"bundle.multiple-compilations.b.js\");\n+                            const c = readBundle(\"bundle.multiple-compilations.c.js\");\n+                            const d = readBundle(\"bundle.multiple-compilations.d.js\");\n+                            const e = readBundle(\"bundle.multiple-compilations.e.js\");\n+                            const f = readBundle(\"bundle.multiple-compilations.f.js\");\n+                            const g = readBundle(\"bundle.multiple-compilations.g.js\");\n+                            const h = readBundle(\"bundle.multiple-compilations.h.js\");\n \n-                    a.should.equal(expectedCss);\n-                    b.should.equal(expectedCss);\n-                    c.should.equal(expectedCss);\n-                    d.should.equal(expectedCss);\n-                    e.should.equal(expectedCss);\n-                    f.should.equal(expectedCss);\n-                    g.should.equal(expectedCss);\n-                    h.should.equal(expectedCss);\n-                })\n-        );\n-    });\n-    describe(\"source maps\", () => {\n-        function buildWithSourceMaps() {\n-            return new Promise((resolve, reject) => {\n-                runWebpack({\n-                    entry: path.join(__dirname, \"scss\", \"imports.scss\"),\n-                    output: {\n-                        filename: \"bundle.source-maps.js\"\n-                    },\n-                    devtool: \"source-map\",\n-                    module: {\n-                        rules: [{\n-                            test: /\\.scss$/,\n-                            use: [\n-                                { loader: testLoader.filename },\n-                                {\n-                                    loader: pathToSassLoader, options: {\n-                                        sourceMap: true\n-                                    }\n-                                }\n-                            ]\n-                        }]\n-                    }\n-                }, err => err ? reject(err) : resolve());\n+                            a.should.equal(expectedCss);\n+                            b.should.equal(expectedCss);\n+                            c.should.equal(expectedCss);\n+                            d.should.equal(expectedCss);\n+                            e.should.equal(expectedCss);\n+                            f.should.equal(expectedCss);\n+                            g.should.equal(expectedCss);\n+                            h.should.equal(expectedCss);\n+                        })\n+                );\n             });\n-        }\n+            describe(\"source maps\", () => {\n+                function buildWithSourceMaps() {\n+                    return new Promise((resolve, reject) => {\n+                        webpack({",
        "path": "test/index.test.js",
        "position": 292,
        "original_position": 286,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "05d20e6852df1a351347a4cce3fc3480bfd1955e",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why can't you re-use `runWebpack` here?",
        "created_at": "2018-07-11T15:16:11Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201730758",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201730758"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201730758"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201731189",
        "pull_request_review_id": 136271396,
        "id": 201731189,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTczMTE4OQ==",
        "diff_hunk": "@@ -32,299 +35,386 @@ Object.defineProperty(loaderContextMock, \"options\", {\n     }\n });\n \n-syntaxStyles.forEach(ext => {\n-    function execTest(testId, loaderOptions, webpackOptions) {\n-        return new Promise((resolve, reject) => {\n-            const baseConfig = merge({\n-                entry: path.join(__dirname, ext, testId + \".\" + ext),\n-                output: {\n-                    filename: \"bundle.\" + ext + \".js\"\n-                },\n-                module: {\n-                    rules: [{\n-                        test: new RegExp(`\\\\.${ ext }$`),\n-                        use: [\n-                            { loader: \"raw-loader\" },\n-                            { loader: pathToSassLoader, options: loaderOptions }\n-                        ]\n-                    }]\n-                }\n-            }, webpackOptions);\n+implementations.forEach(implementation => {\n+    const implementationName = implementation.info.split(\"\\t\")[0];\n+    describe(implementationName, () => {\n+        syntaxStyles.forEach(ext => {\n+            function execTest(testId, loaderOptions, webpackOptions) {\n+                const bundleName = \"bundle.\" + ext + \".\" + implementationName + \".js\";\n+                return new Promise((resolve, reject) => {\n+                    const baseConfig = merge({\n+                        entry: path.join(__dirname, ext, testId + \".\" + ext),\n+                        output: {\n+                            filename: bundleName\n+                        }\n+                    }, webpackOptions);\n \n-            runWebpack(baseConfig, (err) => err ? reject(err) : resolve());\n-        }).then(() => {\n-            const actualCss = readBundle(\"bundle.\" + ext + \".js\");\n-            const expectedCss = readCss(ext, testId);\n+                    runWebpack(baseConfig, loaderOptions, (err) => err ? reject(err) : resolve());\n+                }).then(() => {\n+                    const actualCss = readBundle(bundleName);\n+                    const expectedCss = readCss(ext, testId);\n \n-            // writing the actual css to output-dir for better debugging\n-            // fs.writeFileSync(path.join(__dirname, \"output\", `${ testId }.${ ext }.css`), actualCss, \"utf8\");\n-            actualCss.should.eql(expectedCss);\n-        });\n-    }\n+                    // writing the actual css to output-dir for better debugging\n+                    // fs.writeFileSync(path.join(__dirname, \"output\", `${ testId }.${ ext }.css`), actualCss, \"utf8\");\n+                    actualCss.should.eql(expectedCss);\n+                });\n+            }\n \n-    describe(`sass-loader (${ ext })`, () => {\n-        describe(\"basic\", () => {\n-            it(\"should compile simple sass without errors\", () => execTest(\"language\"));\n-        });\n-        describe(\"imports\", () => {\n-            it(\"should resolve imports correctly\", () => execTest(\"imports\"));\n-            // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/32\n-            it(\"should pass with multiple imports\", () => execTest(\"multiple-imports\"));\n-            // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/73\n-            it(\"should resolve imports from other language style correctly\", () => execTest(\"import-other-style\"));\n-            // Test for includePath imports\n-            it(\"should resolve imports from another directory declared by includePaths correctly\", () => execTest(\"import-include-paths\", {\n-                includePaths: [path.join(__dirname, ext, \"includePath\")]\n-            }));\n-            it(\"should not resolve CSS imports\", () => execTest(\"import-css\"));\n-            it(\"should compile bootstrap-sass without errors\", () => execTest(\"bootstrap-sass\"));\n-            it(\"should correctly import scoped npm packages\", () => execTest(\"import-from-npm-org-pkg\"));\n-            it(\"should resolve aliases\", () => execTest(\"import-alias\", {}, {\n-                resolve: {\n-                    alias: {\n-                        \"path-to-alias\": path.join(__dirname, ext, \"another\", \"alias.\" + ext)\n-                    }\n-                }\n-            }));\n-        });\n-        describe(\"custom importers\", () => {\n-            it(\"should use custom importer\", () => execTest(\"custom-importer\", {\n-                importer: customImporter\n-            }));\n-        });\n-        describe(\"custom functions\", () => {\n-            it(\"should expose custom functions\", () => execTest(\"custom-functions\", {\n-                functions: customFunctions\n-            }));\n-        });\n-        describe(\"prepending data\", () => {\n-            it(\"should extend the data-option if present\", () => execTest(\"prepending-data\", {\n-                data: \"$prepended-data: hotpink;\"\n-            }));\n-        });\n-        // See https://github.com/webpack-contrib/sass-loader/issues/21\n-        describe(\"empty files\", () => {\n-            it(\"should compile without errors\", () => execTest(\"empty\"));\n+            describe(`sass-loader (${ ext })`, () => {\n+                describe(\"basic\", () => {\n+                    it(\"should compile simple sass without errors\", () => execTest(\"language\"));\n+                });\n+                describe(\"imports\", () => {\n+                    it(\"should resolve imports correctly\", () => execTest(\"imports\"));\n+                    // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/32\n+                    it(\"should pass with multiple imports\", () => execTest(\"multiple-imports\"));\n+                    // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/73\n+                    it(\"should resolve imports from other language style correctly\", () => execTest(\"import-other-style\"));\n+                    // Test for includePath imports\n+                    it(\"should resolve imports from another directory declared by includePaths correctly\", () => execTest(\"import-include-paths\", {\n+                        includePaths: [path.join(__dirname, ext, \"includePath\")]\n+                    }));\n+                    it(\"should compile bootstrap-sass without errors\", () => execTest(\"bootstrap-sass\"));\n+                    it(\"should correctly import scoped npm packages\", () => execTest(\"import-from-npm-org-pkg\"));\n+                    it(\"should resolve aliases\", () => execTest(\"import-alias\", {}, {\n+                        resolve: {\n+                            alias: {\n+                                \"path-to-alias\": path.join(__dirname, ext, \"another\", \"alias.\" + ext)\n+                            }\n+                        }\n+                    }));\n+                });\n+                describe(\"custom importers\", () => {\n+                    it(\"should use custom importer\", () => execTest(\"custom-importer\", {\n+                        importer: customImporter\n+                    }));\n+                });\n+                describe(\"custom functions\", () => {\n+                    it(\"should expose custom functions\", () => execTest(\"custom-functions\", {\n+                        functions: customFunctions(implementation)\n+                    }));\n+                });\n+                describe(\"prepending data\", () => {\n+                    it(\"should extend the data-option if present\", () => execTest(\"prepending-data\", {\n+                        data: \"$prepended-data: hotpink\" + (ext == \"sass\" ? \"\\n\" : \";\")\n+                    }));\n+                });\n+                // See https://github.com/webpack-contrib/sass-loader/issues/21\n+                describe(\"empty files\", () => {\n+                    it(\"should compile without errors\", () => execTest(\"empty\"));\n+                });\n+            });\n         });\n-    });\n-});\n \n-describe(\"sass-loader\", () => {\n-    describe(\"multiple compilations\", () => {\n-        it(\"should not interfere with each other\", () =>\n-            new Promise((resolve, reject) => {\n-                runWebpack({\n-                    entry: {\n-                        b: path.join(__dirname, \"scss\", \"multipleCompilations\", \"b.scss\"),\n-                        c: path.join(__dirname, \"scss\", \"multipleCompilations\", \"c.scss\"),\n-                        a: path.join(__dirname, \"scss\", \"multipleCompilations\", \"a.scss\"),\n-                        d: path.join(__dirname, \"scss\", \"multipleCompilations\", \"d.scss\"),\n-                        e: path.join(__dirname, \"scss\", \"multipleCompilations\", \"e.scss\"),\n-                        f: path.join(__dirname, \"scss\", \"multipleCompilations\", \"f.scss\"),\n-                        g: path.join(__dirname, \"scss\", \"multipleCompilations\", \"g.scss\"),\n-                        h: path.join(__dirname, \"scss\", \"multipleCompilations\", \"h.scss\")\n-                    },\n-                    output: {\n-                        filename: \"bundle.multiple-compilations.[name].js\"\n-                    },\n-                    module: {\n-                        rules: [{\n-                            test: /\\.scss$/,\n-                            use: [\n-                                { loader: \"raw-loader\" },\n-                                // We're specifying an empty options object because otherwise, webpack creates a new object for every loader invocation\n-                                // Since we want to ensure that our loader is not tampering with the option object, we are triggering webpack to re-use the options object\n-                                // @see https://github.com/webpack-contrib/sass-loader/issues/368#issuecomment-278330164\n-                                { loader: pathToSassLoader, options: {} }\n-                            ]\n-                        }]\n-                    }\n-                }, err => err ? reject(err) : resolve());\n-            })\n-                .then(() => {\n-                    const expectedCss = readCss(\"scss\", \"imports\");\n-                    const a = readBundle(\"bundle.multiple-compilations.a.js\");\n-                    const b = readBundle(\"bundle.multiple-compilations.b.js\");\n-                    const c = readBundle(\"bundle.multiple-compilations.c.js\");\n-                    const d = readBundle(\"bundle.multiple-compilations.d.js\");\n-                    const e = readBundle(\"bundle.multiple-compilations.e.js\");\n-                    const f = readBundle(\"bundle.multiple-compilations.f.js\");\n-                    const g = readBundle(\"bundle.multiple-compilations.g.js\");\n-                    const h = readBundle(\"bundle.multiple-compilations.h.js\");\n+        describe(\"sass-loader\", () => {\n+            describe(\"multiple compilations\", () => {\n+                it(\"should not interfere with each other\", () =>\n+                    new Promise((resolve, reject) => {\n+                        runWebpack({\n+                            entry: {\n+                                b: path.join(__dirname, \"scss\", \"multipleCompilations\", \"b.scss\"),\n+                                c: path.join(__dirname, \"scss\", \"multipleCompilations\", \"c.scss\"),\n+                                a: path.join(__dirname, \"scss\", \"multipleCompilations\", \"a.scss\"),\n+                                d: path.join(__dirname, \"scss\", \"multipleCompilations\", \"d.scss\"),\n+                                e: path.join(__dirname, \"scss\", \"multipleCompilations\", \"e.scss\"),\n+                                f: path.join(__dirname, \"scss\", \"multipleCompilations\", \"f.scss\"),\n+                                g: path.join(__dirname, \"scss\", \"multipleCompilations\", \"g.scss\"),\n+                                h: path.join(__dirname, \"scss\", \"multipleCompilations\", \"h.scss\")\n+                            },\n+                            output: {\n+                                filename: \"bundle.multiple-compilations.[name].js\"\n+                            }\n+                        }, {}, err => err ? reject(err) : resolve());\n+                    })\n+                        .then(() => {\n+                            const expectedCss = readCss(\"scss\", \"imports\");\n+                            const a = readBundle(\"bundle.multiple-compilations.a.js\");\n+                            const b = readBundle(\"bundle.multiple-compilations.b.js\");\n+                            const c = readBundle(\"bundle.multiple-compilations.c.js\");\n+                            const d = readBundle(\"bundle.multiple-compilations.d.js\");\n+                            const e = readBundle(\"bundle.multiple-compilations.e.js\");\n+                            const f = readBundle(\"bundle.multiple-compilations.f.js\");\n+                            const g = readBundle(\"bundle.multiple-compilations.g.js\");\n+                            const h = readBundle(\"bundle.multiple-compilations.h.js\");\n \n-                    a.should.equal(expectedCss);\n-                    b.should.equal(expectedCss);\n-                    c.should.equal(expectedCss);\n-                    d.should.equal(expectedCss);\n-                    e.should.equal(expectedCss);\n-                    f.should.equal(expectedCss);\n-                    g.should.equal(expectedCss);\n-                    h.should.equal(expectedCss);\n-                })\n-        );\n-    });\n-    describe(\"source maps\", () => {\n-        function buildWithSourceMaps() {\n-            return new Promise((resolve, reject) => {\n-                runWebpack({\n-                    entry: path.join(__dirname, \"scss\", \"imports.scss\"),\n-                    output: {\n-                        filename: \"bundle.source-maps.js\"\n-                    },\n-                    devtool: \"source-map\",\n-                    module: {\n-                        rules: [{\n-                            test: /\\.scss$/,\n-                            use: [\n-                                { loader: testLoader.filename },\n-                                {\n-                                    loader: pathToSassLoader, options: {\n-                                        sourceMap: true\n-                                    }\n-                                }\n-                            ]\n-                        }]\n-                    }\n-                }, err => err ? reject(err) : resolve());\n+                            a.should.equal(expectedCss);\n+                            b.should.equal(expectedCss);\n+                            c.should.equal(expectedCss);\n+                            d.should.equal(expectedCss);\n+                            e.should.equal(expectedCss);\n+                            f.should.equal(expectedCss);\n+                            g.should.equal(expectedCss);\n+                            h.should.equal(expectedCss);\n+                        })\n+                );\n             });\n-        }\n+            describe(\"source maps\", () => {\n+                function buildWithSourceMaps() {\n+                    return new Promise((resolve, reject) => {\n+                        webpack({\n+                            entry: path.join(__dirname, \"scss\", \"imports.scss\"),\n+                            mode: \"development\",\n+                            output: {\n+                                path: path.join(__dirname, \"output\"),\n+                                filename: \"bundle.source-maps.js\",\n+                                libraryTarget: \"commonjs2\"\n+                            },\n+                            resolve: {\n+                                alias: {\n+                                    module: 'module.scss',\n+                                    'other-module': 'other-module.scss'\n+                                }\n+                            },\n+                            devtool: \"source-map\",\n+                            module: {\n+                                rules: [{\n+                                    test: /\\.scss$/,\n+                                    use: [\n+                                        { loader: testLoader.filename },\n+                                        {\n+                                            loader: pathToSassLoader, options: {\n+                                                implementation,\n+                                                sourceMap: true\n+                                            }\n+                                        }\n+                                    ]\n+                                }]\n+                            }\n+                        }, (webpackErr, stats) => {\n+                            const err = webpackErr ||\n+                                  (stats.hasErrors() && stats.compilation.errors[0]) ||\n+                                  (stats.hasWarnings() && stats.compilation.warnings[0]);\n+\n+                            if (err) {\n+                                reject(err);\n+                            } else {\n+                                resolve();\n+                            }\n+                        });\n+                    });\n+                }\n \n-        it(\"should compile without errors\", () => buildWithSourceMaps());\n-        it(\"should produce a valid source map\", () => {\n-            const cwdGetter = process.cwd;\n-            const fakeCwd = path.join(__dirname, \"scss\");\n+                it(\"should compile without errors\", () => buildWithSourceMaps());\n+                it(\"should produce a valid source map\", () => {\n+                    const cwdGetter = process.cwd;\n+                    const fakeCwd = path.join(__dirname, \"scss\");\n \n-            process.cwd = function () {\n-                return fakeCwd;\n-            };\n+                    process.cwd = function () {\n+                        return fakeCwd;\n+                    };\n \n-            return buildWithSourceMaps()\n-                .then(() => {\n-                    const sourceMap = testLoader.sourceMap;\n+                    return buildWithSourceMaps()\n+                        .then(() => {\n+                            const sourceMap = testLoader.sourceMap;\n \n-                    sourceMap.should.not.have.property(\"file\");\n-                    sourceMap.should.have.property(\"sourceRoot\", fakeCwd);\n-                    // This number needs to be updated if imports.scss or any dependency of that changes\n-                    sourceMap.sources.should.have.length(13);\n-                    sourceMap.sources.forEach(sourcePath =>\n-                        fs.existsSync(path.resolve(sourceMap.sourceRoot, sourcePath))\n-                    );\n+                            sourceMap.should.not.have.property(\"file\");\n+                            sourceMap.should.have.property(\"sourceRoot\", fakeCwd);\n+                            // This number needs to be updated if imports.scss or any dependency of that changes.\n+                            // Node Sass includes a duplicate entry, Dart Sass does not.\n+                            sourceMap.sources.should.have.length(implementation == nodeSass ? 12 : 11);",
        "path": "test/index.test.js",
        "position": null,
        "original_position": 363,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "05d20e6852df1a351347a4cce3fc3480bfd1955e",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We can get rid of the duplicated dependency. Makes this test easier. Which dependency is duplicated?",
        "created_at": "2018-07-11T15:17:20Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201731189",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201731189"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201731189"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201731606",
        "pull_request_review_id": 136271396,
        "id": 201731606,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTczMTYwNg==",
        "diff_hunk": "@@ -32,299 +35,386 @@ Object.defineProperty(loaderContextMock, \"options\", {\n     }\n });\n \n-syntaxStyles.forEach(ext => {\n-    function execTest(testId, loaderOptions, webpackOptions) {\n-        return new Promise((resolve, reject) => {\n-            const baseConfig = merge({\n-                entry: path.join(__dirname, ext, testId + \".\" + ext),\n-                output: {\n-                    filename: \"bundle.\" + ext + \".js\"\n-                },\n-                module: {\n-                    rules: [{\n-                        test: new RegExp(`\\\\.${ ext }$`),\n-                        use: [\n-                            { loader: \"raw-loader\" },\n-                            { loader: pathToSassLoader, options: loaderOptions }\n-                        ]\n-                    }]\n-                }\n-            }, webpackOptions);\n+implementations.forEach(implementation => {\n+    const implementationName = implementation.info.split(\"\\t\")[0];\n+    describe(implementationName, () => {\n+        syntaxStyles.forEach(ext => {\n+            function execTest(testId, loaderOptions, webpackOptions) {\n+                const bundleName = \"bundle.\" + ext + \".\" + implementationName + \".js\";\n+                return new Promise((resolve, reject) => {\n+                    const baseConfig = merge({\n+                        entry: path.join(__dirname, ext, testId + \".\" + ext),\n+                        output: {\n+                            filename: bundleName\n+                        }\n+                    }, webpackOptions);\n \n-            runWebpack(baseConfig, (err) => err ? reject(err) : resolve());\n-        }).then(() => {\n-            const actualCss = readBundle(\"bundle.\" + ext + \".js\");\n-            const expectedCss = readCss(ext, testId);\n+                    runWebpack(baseConfig, loaderOptions, (err) => err ? reject(err) : resolve());\n+                }).then(() => {\n+                    const actualCss = readBundle(bundleName);\n+                    const expectedCss = readCss(ext, testId);\n \n-            // writing the actual css to output-dir for better debugging\n-            // fs.writeFileSync(path.join(__dirname, \"output\", `${ testId }.${ ext }.css`), actualCss, \"utf8\");\n-            actualCss.should.eql(expectedCss);\n-        });\n-    }\n+                    // writing the actual css to output-dir for better debugging\n+                    // fs.writeFileSync(path.join(__dirname, \"output\", `${ testId }.${ ext }.css`), actualCss, \"utf8\");\n+                    actualCss.should.eql(expectedCss);\n+                });\n+            }\n \n-    describe(`sass-loader (${ ext })`, () => {\n-        describe(\"basic\", () => {\n-            it(\"should compile simple sass without errors\", () => execTest(\"language\"));\n-        });\n-        describe(\"imports\", () => {\n-            it(\"should resolve imports correctly\", () => execTest(\"imports\"));\n-            // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/32\n-            it(\"should pass with multiple imports\", () => execTest(\"multiple-imports\"));\n-            // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/73\n-            it(\"should resolve imports from other language style correctly\", () => execTest(\"import-other-style\"));\n-            // Test for includePath imports\n-            it(\"should resolve imports from another directory declared by includePaths correctly\", () => execTest(\"import-include-paths\", {\n-                includePaths: [path.join(__dirname, ext, \"includePath\")]\n-            }));\n-            it(\"should not resolve CSS imports\", () => execTest(\"import-css\"));\n-            it(\"should compile bootstrap-sass without errors\", () => execTest(\"bootstrap-sass\"));\n-            it(\"should correctly import scoped npm packages\", () => execTest(\"import-from-npm-org-pkg\"));\n-            it(\"should resolve aliases\", () => execTest(\"import-alias\", {}, {\n-                resolve: {\n-                    alias: {\n-                        \"path-to-alias\": path.join(__dirname, ext, \"another\", \"alias.\" + ext)\n-                    }\n-                }\n-            }));\n-        });\n-        describe(\"custom importers\", () => {\n-            it(\"should use custom importer\", () => execTest(\"custom-importer\", {\n-                importer: customImporter\n-            }));\n-        });\n-        describe(\"custom functions\", () => {\n-            it(\"should expose custom functions\", () => execTest(\"custom-functions\", {\n-                functions: customFunctions\n-            }));\n-        });\n-        describe(\"prepending data\", () => {\n-            it(\"should extend the data-option if present\", () => execTest(\"prepending-data\", {\n-                data: \"$prepended-data: hotpink;\"\n-            }));\n-        });\n-        // See https://github.com/webpack-contrib/sass-loader/issues/21\n-        describe(\"empty files\", () => {\n-            it(\"should compile without errors\", () => execTest(\"empty\"));\n+            describe(`sass-loader (${ ext })`, () => {\n+                describe(\"basic\", () => {\n+                    it(\"should compile simple sass without errors\", () => execTest(\"language\"));\n+                });\n+                describe(\"imports\", () => {\n+                    it(\"should resolve imports correctly\", () => execTest(\"imports\"));\n+                    // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/32\n+                    it(\"should pass with multiple imports\", () => execTest(\"multiple-imports\"));\n+                    // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/73\n+                    it(\"should resolve imports from other language style correctly\", () => execTest(\"import-other-style\"));\n+                    // Test for includePath imports\n+                    it(\"should resolve imports from another directory declared by includePaths correctly\", () => execTest(\"import-include-paths\", {\n+                        includePaths: [path.join(__dirname, ext, \"includePath\")]\n+                    }));\n+                    it(\"should compile bootstrap-sass without errors\", () => execTest(\"bootstrap-sass\"));\n+                    it(\"should correctly import scoped npm packages\", () => execTest(\"import-from-npm-org-pkg\"));\n+                    it(\"should resolve aliases\", () => execTest(\"import-alias\", {}, {\n+                        resolve: {\n+                            alias: {\n+                                \"path-to-alias\": path.join(__dirname, ext, \"another\", \"alias.\" + ext)\n+                            }\n+                        }\n+                    }));\n+                });\n+                describe(\"custom importers\", () => {\n+                    it(\"should use custom importer\", () => execTest(\"custom-importer\", {\n+                        importer: customImporter\n+                    }));\n+                });\n+                describe(\"custom functions\", () => {\n+                    it(\"should expose custom functions\", () => execTest(\"custom-functions\", {\n+                        functions: customFunctions(implementation)\n+                    }));\n+                });\n+                describe(\"prepending data\", () => {\n+                    it(\"should extend the data-option if present\", () => execTest(\"prepending-data\", {\n+                        data: \"$prepended-data: hotpink\" + (ext == \"sass\" ? \"\\n\" : \";\")\n+                    }));\n+                });\n+                // See https://github.com/webpack-contrib/sass-loader/issues/21\n+                describe(\"empty files\", () => {\n+                    it(\"should compile without errors\", () => execTest(\"empty\"));\n+                });\n+            });\n         });\n-    });\n-});\n \n-describe(\"sass-loader\", () => {\n-    describe(\"multiple compilations\", () => {\n-        it(\"should not interfere with each other\", () =>\n-            new Promise((resolve, reject) => {\n-                runWebpack({\n-                    entry: {\n-                        b: path.join(__dirname, \"scss\", \"multipleCompilations\", \"b.scss\"),\n-                        c: path.join(__dirname, \"scss\", \"multipleCompilations\", \"c.scss\"),\n-                        a: path.join(__dirname, \"scss\", \"multipleCompilations\", \"a.scss\"),\n-                        d: path.join(__dirname, \"scss\", \"multipleCompilations\", \"d.scss\"),\n-                        e: path.join(__dirname, \"scss\", \"multipleCompilations\", \"e.scss\"),\n-                        f: path.join(__dirname, \"scss\", \"multipleCompilations\", \"f.scss\"),\n-                        g: path.join(__dirname, \"scss\", \"multipleCompilations\", \"g.scss\"),\n-                        h: path.join(__dirname, \"scss\", \"multipleCompilations\", \"h.scss\")\n-                    },\n-                    output: {\n-                        filename: \"bundle.multiple-compilations.[name].js\"\n-                    },\n-                    module: {\n-                        rules: [{\n-                            test: /\\.scss$/,\n-                            use: [\n-                                { loader: \"raw-loader\" },\n-                                // We're specifying an empty options object because otherwise, webpack creates a new object for every loader invocation\n-                                // Since we want to ensure that our loader is not tampering with the option object, we are triggering webpack to re-use the options object\n-                                // @see https://github.com/webpack-contrib/sass-loader/issues/368#issuecomment-278330164\n-                                { loader: pathToSassLoader, options: {} }\n-                            ]\n-                        }]\n-                    }\n-                }, err => err ? reject(err) : resolve());\n-            })\n-                .then(() => {\n-                    const expectedCss = readCss(\"scss\", \"imports\");\n-                    const a = readBundle(\"bundle.multiple-compilations.a.js\");\n-                    const b = readBundle(\"bundle.multiple-compilations.b.js\");\n-                    const c = readBundle(\"bundle.multiple-compilations.c.js\");\n-                    const d = readBundle(\"bundle.multiple-compilations.d.js\");\n-                    const e = readBundle(\"bundle.multiple-compilations.e.js\");\n-                    const f = readBundle(\"bundle.multiple-compilations.f.js\");\n-                    const g = readBundle(\"bundle.multiple-compilations.g.js\");\n-                    const h = readBundle(\"bundle.multiple-compilations.h.js\");\n+        describe(\"sass-loader\", () => {\n+            describe(\"multiple compilations\", () => {\n+                it(\"should not interfere with each other\", () =>\n+                    new Promise((resolve, reject) => {\n+                        runWebpack({\n+                            entry: {\n+                                b: path.join(__dirname, \"scss\", \"multipleCompilations\", \"b.scss\"),\n+                                c: path.join(__dirname, \"scss\", \"multipleCompilations\", \"c.scss\"),\n+                                a: path.join(__dirname, \"scss\", \"multipleCompilations\", \"a.scss\"),\n+                                d: path.join(__dirname, \"scss\", \"multipleCompilations\", \"d.scss\"),\n+                                e: path.join(__dirname, \"scss\", \"multipleCompilations\", \"e.scss\"),\n+                                f: path.join(__dirname, \"scss\", \"multipleCompilations\", \"f.scss\"),\n+                                g: path.join(__dirname, \"scss\", \"multipleCompilations\", \"g.scss\"),\n+                                h: path.join(__dirname, \"scss\", \"multipleCompilations\", \"h.scss\")\n+                            },\n+                            output: {\n+                                filename: \"bundle.multiple-compilations.[name].js\"\n+                            }\n+                        }, {}, err => err ? reject(err) : resolve());\n+                    })\n+                        .then(() => {\n+                            const expectedCss = readCss(\"scss\", \"imports\");\n+                            const a = readBundle(\"bundle.multiple-compilations.a.js\");\n+                            const b = readBundle(\"bundle.multiple-compilations.b.js\");\n+                            const c = readBundle(\"bundle.multiple-compilations.c.js\");\n+                            const d = readBundle(\"bundle.multiple-compilations.d.js\");\n+                            const e = readBundle(\"bundle.multiple-compilations.e.js\");\n+                            const f = readBundle(\"bundle.multiple-compilations.f.js\");\n+                            const g = readBundle(\"bundle.multiple-compilations.g.js\");\n+                            const h = readBundle(\"bundle.multiple-compilations.h.js\");\n \n-                    a.should.equal(expectedCss);\n-                    b.should.equal(expectedCss);\n-                    c.should.equal(expectedCss);\n-                    d.should.equal(expectedCss);\n-                    e.should.equal(expectedCss);\n-                    f.should.equal(expectedCss);\n-                    g.should.equal(expectedCss);\n-                    h.should.equal(expectedCss);\n-                })\n-        );\n-    });\n-    describe(\"source maps\", () => {\n-        function buildWithSourceMaps() {\n-            return new Promise((resolve, reject) => {\n-                runWebpack({\n-                    entry: path.join(__dirname, \"scss\", \"imports.scss\"),\n-                    output: {\n-                        filename: \"bundle.source-maps.js\"\n-                    },\n-                    devtool: \"source-map\",\n-                    module: {\n-                        rules: [{\n-                            test: /\\.scss$/,\n-                            use: [\n-                                { loader: testLoader.filename },\n-                                {\n-                                    loader: pathToSassLoader, options: {\n-                                        sourceMap: true\n-                                    }\n-                                }\n-                            ]\n-                        }]\n-                    }\n-                }, err => err ? reject(err) : resolve());\n+                            a.should.equal(expectedCss);\n+                            b.should.equal(expectedCss);\n+                            c.should.equal(expectedCss);\n+                            d.should.equal(expectedCss);\n+                            e.should.equal(expectedCss);\n+                            f.should.equal(expectedCss);\n+                            g.should.equal(expectedCss);\n+                            h.should.equal(expectedCss);\n+                        })\n+                );\n             });\n-        }\n+            describe(\"source maps\", () => {\n+                function buildWithSourceMaps() {\n+                    return new Promise((resolve, reject) => {\n+                        webpack({\n+                            entry: path.join(__dirname, \"scss\", \"imports.scss\"),\n+                            mode: \"development\",\n+                            output: {\n+                                path: path.join(__dirname, \"output\"),\n+                                filename: \"bundle.source-maps.js\",\n+                                libraryTarget: \"commonjs2\"\n+                            },\n+                            resolve: {\n+                                alias: {\n+                                    module: 'module.scss',\n+                                    'other-module': 'other-module.scss'\n+                                }\n+                            },\n+                            devtool: \"source-map\",\n+                            module: {\n+                                rules: [{\n+                                    test: /\\.scss$/,\n+                                    use: [\n+                                        { loader: testLoader.filename },\n+                                        {\n+                                            loader: pathToSassLoader, options: {\n+                                                implementation,\n+                                                sourceMap: true\n+                                            }\n+                                        }\n+                                    ]\n+                                }]\n+                            }\n+                        }, (webpackErr, stats) => {\n+                            const err = webpackErr ||\n+                                  (stats.hasErrors() && stats.compilation.errors[0]) ||\n+                                  (stats.hasWarnings() && stats.compilation.warnings[0]);\n+\n+                            if (err) {\n+                                reject(err);\n+                            } else {\n+                                resolve();\n+                            }\n+                        });\n+                    });\n+                }\n \n-        it(\"should compile without errors\", () => buildWithSourceMaps());\n-        it(\"should produce a valid source map\", () => {\n-            const cwdGetter = process.cwd;\n-            const fakeCwd = path.join(__dirname, \"scss\");\n+                it(\"should compile without errors\", () => buildWithSourceMaps());\n+                it(\"should produce a valid source map\", () => {\n+                    const cwdGetter = process.cwd;\n+                    const fakeCwd = path.join(__dirname, \"scss\");\n \n-            process.cwd = function () {\n-                return fakeCwd;\n-            };\n+                    process.cwd = function () {\n+                        return fakeCwd;\n+                    };\n \n-            return buildWithSourceMaps()\n-                .then(() => {\n-                    const sourceMap = testLoader.sourceMap;\n+                    return buildWithSourceMaps()\n+                        .then(() => {\n+                            const sourceMap = testLoader.sourceMap;\n \n-                    sourceMap.should.not.have.property(\"file\");\n-                    sourceMap.should.have.property(\"sourceRoot\", fakeCwd);\n-                    // This number needs to be updated if imports.scss or any dependency of that changes\n-                    sourceMap.sources.should.have.length(13);\n-                    sourceMap.sources.forEach(sourcePath =>\n-                        fs.existsSync(path.resolve(sourceMap.sourceRoot, sourcePath))\n-                    );\n+                            sourceMap.should.not.have.property(\"file\");\n+                            sourceMap.should.have.property(\"sourceRoot\", fakeCwd);\n+                            // This number needs to be updated if imports.scss or any dependency of that changes.\n+                            // Node Sass includes a duplicate entry, Dart Sass does not.\n+                            sourceMap.sources.should.have.length(implementation == nodeSass ? 12 : 11);\n+                            sourceMap.sources.forEach(sourcePath =>\n+                                fs.existsSync(path.resolve(sourceMap.sourceRoot, sourcePath))\n+                            );\n \n-                    process.cwd = cwdGetter;\n+                            process.cwd = cwdGetter;\n+                        });\n                 });\n-        });\n-    });\n-    describe(\"errors\", () => {\n-        it(\"should throw an error in synchronous loader environments\", () => {\n-            try {\n-                sassLoader.call(Object.create(loaderContextMock), \"\");\n-            } catch (err) {\n-                // check for file excerpt\n-                err.message.should.equal(\"Synchronous compilation is not supported anymore. See https://github.com/webpack-contrib/sass-loader/issues/333\");\n-            }\n-        });\n-        it(\"should output understandable errors in entry files\", (done) => {\n-            runWebpack({\n-                entry: pathToSassLoader + \"!\" + pathToErrorFile\n-            }, (err) => {\n-                err.message.should.match(/Property \"some-value\" must be followed by a ':'/);\n-                err.message.should.match(/\\(line 2, column 5\\)/);\n-                err.message.indexOf(pathToErrorFile).should.not.equal(-1);\n-                done();\n             });\n-        });\n-        it(\"should output understandable errors of imported files\", (done) => {\n-            runWebpack({\n-                entry: pathToSassLoader + \"!\" + pathToErrorImport\n-            }, (err) => {\n-                // check for file excerpt\n-                err.message.should.match(/Property \"some-value\" must be followed by a ':'/);\n-                err.message.should.match(/\\(line 2, column 5\\)/);\n-                err.message.indexOf(pathToErrorFile).should.not.equal(-1);\n-                done();\n-            });\n-        });\n-        it(\"should output understandable errors when a file could not be found\", (done) => {\n-            runWebpack({\n-                entry: pathToSassLoader + \"!\" + pathToErrorFileNotFound\n-            }, (err) => {\n-                err.message.should.match(/@import \"does-not-exist\";/);\n-                err.message.should.match(/File to import not found or unreadable: does-not-exist/);\n-                err.message.should.match(/\\(line 1, column 1\\)/);\n-                err.message.indexOf(pathToErrorFileNotFound).should.not.equal(-1);\n-                done();\n-            });\n-        });\n-        it(\"should not auto-resolve imports with explicit file names\", (done) => {\n-            runWebpack({\n-                entry: pathToSassLoader + \"!\" + pathToErrorFileNotFound2\n-            }, (err) => {\n-                err.message.should.match(/@import \"\\.\\/another\\/_module\\.scss\";/);\n-                err.message.should.match(/File to import not found or unreadable: \\.\\/another\\/_module\\.scss/);\n-                err.message.should.match(/\\(line 1, column 1\\)/);\n-                err.message.indexOf(pathToErrorFileNotFound2).should.not.equal(-1);\n-                done();\n-            });\n-        });\n-        it(\"should not swallow errors when trying to load node-sass\", (done) => {\n-            mockRequire.reRequire(pathToSassLoader);\n-            const module = require(\"module\");\n-            const originalResolve = module._resolveFilename;\n+            describe(\"errors\", () => {\n+                it(\"should throw an error in synchronous loader environments\", () => {\n+                    try {\n+                        sassLoader.call(Object.create(loaderContextMock), \"\");\n+                    } catch (err) {\n+                        // check for file excerpt\n+                        err.message.should.equal(\"Synchronous compilation is not supported anymore. See https://github.com/webpack-contrib/sass-loader/issues/333\");\n+                    }\n+                });\n+                it(\"should output understandable errors in entry files\", (done) => {\n+                    runWebpack({\n+                        entry: pathToErrorFile\n+                    }, {}, (err) => {\n+                        if (implementation === nodeSass) {\n+                            err.message.should.match(/Property \"some-value\" must be followed by a ':'/);\n+                            err.message.should.match(/\\(line 2, column 5\\)/);\n+                        } else {\n+                            err.message.should.match(/Expected \"{\"./);\n+                            err.message.should.match(/\\(line 3, column 1\\)/);\n+                        }",
        "path": "test/index.test.js",
        "position": 449,
        "original_position": 449,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "05d20e6852df1a351347a4cce3fc3480bfd1955e",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "In the long run it would probably be better to compare these errors with errors that have been snapshotted during `createSpec`, but that's ok for now I guess.",
        "created_at": "2018-07-11T15:18:29Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201731606",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201731606"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201731606"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201731832",
        "pull_request_review_id": 136271396,
        "id": 201731832,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTczMTgzMg==",
        "diff_hunk": "@@ -32,299 +35,386 @@ Object.defineProperty(loaderContextMock, \"options\", {\n     }\n });\n \n-syntaxStyles.forEach(ext => {\n-    function execTest(testId, loaderOptions, webpackOptions) {\n-        return new Promise((resolve, reject) => {\n-            const baseConfig = merge({\n-                entry: path.join(__dirname, ext, testId + \".\" + ext),\n-                output: {\n-                    filename: \"bundle.\" + ext + \".js\"\n-                },\n-                module: {\n-                    rules: [{\n-                        test: new RegExp(`\\\\.${ ext }$`),\n-                        use: [\n-                            { loader: \"raw-loader\" },\n-                            { loader: pathToSassLoader, options: loaderOptions }\n-                        ]\n-                    }]\n-                }\n-            }, webpackOptions);\n+implementations.forEach(implementation => {\n+    const implementationName = implementation.info.split(\"\\t\")[0];\n+    describe(implementationName, () => {\n+        syntaxStyles.forEach(ext => {\n+            function execTest(testId, loaderOptions, webpackOptions) {\n+                const bundleName = \"bundle.\" + ext + \".\" + implementationName + \".js\";\n+                return new Promise((resolve, reject) => {\n+                    const baseConfig = merge({\n+                        entry: path.join(__dirname, ext, testId + \".\" + ext),\n+                        output: {\n+                            filename: bundleName\n+                        }\n+                    }, webpackOptions);\n \n-            runWebpack(baseConfig, (err) => err ? reject(err) : resolve());\n-        }).then(() => {\n-            const actualCss = readBundle(\"bundle.\" + ext + \".js\");\n-            const expectedCss = readCss(ext, testId);\n+                    runWebpack(baseConfig, loaderOptions, (err) => err ? reject(err) : resolve());\n+                }).then(() => {\n+                    const actualCss = readBundle(bundleName);\n+                    const expectedCss = readCss(ext, testId);\n \n-            // writing the actual css to output-dir for better debugging\n-            // fs.writeFileSync(path.join(__dirname, \"output\", `${ testId }.${ ext }.css`), actualCss, \"utf8\");\n-            actualCss.should.eql(expectedCss);\n-        });\n-    }\n+                    // writing the actual css to output-dir for better debugging\n+                    // fs.writeFileSync(path.join(__dirname, \"output\", `${ testId }.${ ext }.css`), actualCss, \"utf8\");\n+                    actualCss.should.eql(expectedCss);\n+                });\n+            }\n \n-    describe(`sass-loader (${ ext })`, () => {\n-        describe(\"basic\", () => {\n-            it(\"should compile simple sass without errors\", () => execTest(\"language\"));\n-        });\n-        describe(\"imports\", () => {\n-            it(\"should resolve imports correctly\", () => execTest(\"imports\"));\n-            // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/32\n-            it(\"should pass with multiple imports\", () => execTest(\"multiple-imports\"));\n-            // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/73\n-            it(\"should resolve imports from other language style correctly\", () => execTest(\"import-other-style\"));\n-            // Test for includePath imports\n-            it(\"should resolve imports from another directory declared by includePaths correctly\", () => execTest(\"import-include-paths\", {\n-                includePaths: [path.join(__dirname, ext, \"includePath\")]\n-            }));\n-            it(\"should not resolve CSS imports\", () => execTest(\"import-css\"));\n-            it(\"should compile bootstrap-sass without errors\", () => execTest(\"bootstrap-sass\"));\n-            it(\"should correctly import scoped npm packages\", () => execTest(\"import-from-npm-org-pkg\"));\n-            it(\"should resolve aliases\", () => execTest(\"import-alias\", {}, {\n-                resolve: {\n-                    alias: {\n-                        \"path-to-alias\": path.join(__dirname, ext, \"another\", \"alias.\" + ext)\n-                    }\n-                }\n-            }));\n-        });\n-        describe(\"custom importers\", () => {\n-            it(\"should use custom importer\", () => execTest(\"custom-importer\", {\n-                importer: customImporter\n-            }));\n-        });\n-        describe(\"custom functions\", () => {\n-            it(\"should expose custom functions\", () => execTest(\"custom-functions\", {\n-                functions: customFunctions\n-            }));\n-        });\n-        describe(\"prepending data\", () => {\n-            it(\"should extend the data-option if present\", () => execTest(\"prepending-data\", {\n-                data: \"$prepended-data: hotpink;\"\n-            }));\n-        });\n-        // See https://github.com/webpack-contrib/sass-loader/issues/21\n-        describe(\"empty files\", () => {\n-            it(\"should compile without errors\", () => execTest(\"empty\"));\n+            describe(`sass-loader (${ ext })`, () => {\n+                describe(\"basic\", () => {\n+                    it(\"should compile simple sass without errors\", () => execTest(\"language\"));\n+                });\n+                describe(\"imports\", () => {\n+                    it(\"should resolve imports correctly\", () => execTest(\"imports\"));\n+                    // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/32\n+                    it(\"should pass with multiple imports\", () => execTest(\"multiple-imports\"));\n+                    // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/73\n+                    it(\"should resolve imports from other language style correctly\", () => execTest(\"import-other-style\"));\n+                    // Test for includePath imports\n+                    it(\"should resolve imports from another directory declared by includePaths correctly\", () => execTest(\"import-include-paths\", {\n+                        includePaths: [path.join(__dirname, ext, \"includePath\")]\n+                    }));\n+                    it(\"should compile bootstrap-sass without errors\", () => execTest(\"bootstrap-sass\"));\n+                    it(\"should correctly import scoped npm packages\", () => execTest(\"import-from-npm-org-pkg\"));\n+                    it(\"should resolve aliases\", () => execTest(\"import-alias\", {}, {\n+                        resolve: {\n+                            alias: {\n+                                \"path-to-alias\": path.join(__dirname, ext, \"another\", \"alias.\" + ext)\n+                            }\n+                        }\n+                    }));\n+                });\n+                describe(\"custom importers\", () => {\n+                    it(\"should use custom importer\", () => execTest(\"custom-importer\", {\n+                        importer: customImporter\n+                    }));\n+                });\n+                describe(\"custom functions\", () => {\n+                    it(\"should expose custom functions\", () => execTest(\"custom-functions\", {\n+                        functions: customFunctions(implementation)\n+                    }));\n+                });\n+                describe(\"prepending data\", () => {\n+                    it(\"should extend the data-option if present\", () => execTest(\"prepending-data\", {\n+                        data: \"$prepended-data: hotpink\" + (ext == \"sass\" ? \"\\n\" : \";\")\n+                    }));\n+                });\n+                // See https://github.com/webpack-contrib/sass-loader/issues/21\n+                describe(\"empty files\", () => {\n+                    it(\"should compile without errors\", () => execTest(\"empty\"));\n+                });\n+            });\n         });\n-    });\n-});\n \n-describe(\"sass-loader\", () => {\n-    describe(\"multiple compilations\", () => {\n-        it(\"should not interfere with each other\", () =>\n-            new Promise((resolve, reject) => {\n-                runWebpack({\n-                    entry: {\n-                        b: path.join(__dirname, \"scss\", \"multipleCompilations\", \"b.scss\"),\n-                        c: path.join(__dirname, \"scss\", \"multipleCompilations\", \"c.scss\"),\n-                        a: path.join(__dirname, \"scss\", \"multipleCompilations\", \"a.scss\"),\n-                        d: path.join(__dirname, \"scss\", \"multipleCompilations\", \"d.scss\"),\n-                        e: path.join(__dirname, \"scss\", \"multipleCompilations\", \"e.scss\"),\n-                        f: path.join(__dirname, \"scss\", \"multipleCompilations\", \"f.scss\"),\n-                        g: path.join(__dirname, \"scss\", \"multipleCompilations\", \"g.scss\"),\n-                        h: path.join(__dirname, \"scss\", \"multipleCompilations\", \"h.scss\")\n-                    },\n-                    output: {\n-                        filename: \"bundle.multiple-compilations.[name].js\"\n-                    },\n-                    module: {\n-                        rules: [{\n-                            test: /\\.scss$/,\n-                            use: [\n-                                { loader: \"raw-loader\" },\n-                                // We're specifying an empty options object because otherwise, webpack creates a new object for every loader invocation\n-                                // Since we want to ensure that our loader is not tampering with the option object, we are triggering webpack to re-use the options object\n-                                // @see https://github.com/webpack-contrib/sass-loader/issues/368#issuecomment-278330164\n-                                { loader: pathToSassLoader, options: {} }\n-                            ]\n-                        }]\n-                    }\n-                }, err => err ? reject(err) : resolve());\n-            })\n-                .then(() => {\n-                    const expectedCss = readCss(\"scss\", \"imports\");\n-                    const a = readBundle(\"bundle.multiple-compilations.a.js\");\n-                    const b = readBundle(\"bundle.multiple-compilations.b.js\");\n-                    const c = readBundle(\"bundle.multiple-compilations.c.js\");\n-                    const d = readBundle(\"bundle.multiple-compilations.d.js\");\n-                    const e = readBundle(\"bundle.multiple-compilations.e.js\");\n-                    const f = readBundle(\"bundle.multiple-compilations.f.js\");\n-                    const g = readBundle(\"bundle.multiple-compilations.g.js\");\n-                    const h = readBundle(\"bundle.multiple-compilations.h.js\");\n+        describe(\"sass-loader\", () => {\n+            describe(\"multiple compilations\", () => {\n+                it(\"should not interfere with each other\", () =>\n+                    new Promise((resolve, reject) => {\n+                        runWebpack({\n+                            entry: {\n+                                b: path.join(__dirname, \"scss\", \"multipleCompilations\", \"b.scss\"),\n+                                c: path.join(__dirname, \"scss\", \"multipleCompilations\", \"c.scss\"),\n+                                a: path.join(__dirname, \"scss\", \"multipleCompilations\", \"a.scss\"),\n+                                d: path.join(__dirname, \"scss\", \"multipleCompilations\", \"d.scss\"),\n+                                e: path.join(__dirname, \"scss\", \"multipleCompilations\", \"e.scss\"),\n+                                f: path.join(__dirname, \"scss\", \"multipleCompilations\", \"f.scss\"),\n+                                g: path.join(__dirname, \"scss\", \"multipleCompilations\", \"g.scss\"),\n+                                h: path.join(__dirname, \"scss\", \"multipleCompilations\", \"h.scss\")\n+                            },\n+                            output: {\n+                                filename: \"bundle.multiple-compilations.[name].js\"\n+                            }\n+                        }, {}, err => err ? reject(err) : resolve());\n+                    })\n+                        .then(() => {\n+                            const expectedCss = readCss(\"scss\", \"imports\");\n+                            const a = readBundle(\"bundle.multiple-compilations.a.js\");\n+                            const b = readBundle(\"bundle.multiple-compilations.b.js\");\n+                            const c = readBundle(\"bundle.multiple-compilations.c.js\");\n+                            const d = readBundle(\"bundle.multiple-compilations.d.js\");\n+                            const e = readBundle(\"bundle.multiple-compilations.e.js\");\n+                            const f = readBundle(\"bundle.multiple-compilations.f.js\");\n+                            const g = readBundle(\"bundle.multiple-compilations.g.js\");\n+                            const h = readBundle(\"bundle.multiple-compilations.h.js\");\n \n-                    a.should.equal(expectedCss);\n-                    b.should.equal(expectedCss);\n-                    c.should.equal(expectedCss);\n-                    d.should.equal(expectedCss);\n-                    e.should.equal(expectedCss);\n-                    f.should.equal(expectedCss);\n-                    g.should.equal(expectedCss);\n-                    h.should.equal(expectedCss);\n-                })\n-        );\n-    });\n-    describe(\"source maps\", () => {\n-        function buildWithSourceMaps() {\n-            return new Promise((resolve, reject) => {\n-                runWebpack({\n-                    entry: path.join(__dirname, \"scss\", \"imports.scss\"),\n-                    output: {\n-                        filename: \"bundle.source-maps.js\"\n-                    },\n-                    devtool: \"source-map\",\n-                    module: {\n-                        rules: [{\n-                            test: /\\.scss$/,\n-                            use: [\n-                                { loader: testLoader.filename },\n-                                {\n-                                    loader: pathToSassLoader, options: {\n-                                        sourceMap: true\n-                                    }\n-                                }\n-                            ]\n-                        }]\n-                    }\n-                }, err => err ? reject(err) : resolve());\n+                            a.should.equal(expectedCss);\n+                            b.should.equal(expectedCss);\n+                            c.should.equal(expectedCss);\n+                            d.should.equal(expectedCss);\n+                            e.should.equal(expectedCss);\n+                            f.should.equal(expectedCss);\n+                            g.should.equal(expectedCss);\n+                            h.should.equal(expectedCss);\n+                        })\n+                );\n             });\n-        }\n+            describe(\"source maps\", () => {\n+                function buildWithSourceMaps() {\n+                    return new Promise((resolve, reject) => {\n+                        webpack({\n+                            entry: path.join(__dirname, \"scss\", \"imports.scss\"),\n+                            mode: \"development\",\n+                            output: {\n+                                path: path.join(__dirname, \"output\"),\n+                                filename: \"bundle.source-maps.js\",\n+                                libraryTarget: \"commonjs2\"\n+                            },\n+                            resolve: {\n+                                alias: {\n+                                    module: 'module.scss',\n+                                    'other-module': 'other-module.scss'\n+                                }\n+                            },\n+                            devtool: \"source-map\",\n+                            module: {\n+                                rules: [{\n+                                    test: /\\.scss$/,\n+                                    use: [\n+                                        { loader: testLoader.filename },\n+                                        {\n+                                            loader: pathToSassLoader, options: {\n+                                                implementation,\n+                                                sourceMap: true\n+                                            }\n+                                        }\n+                                    ]\n+                                }]\n+                            }\n+                        }, (webpackErr, stats) => {\n+                            const err = webpackErr ||\n+                                  (stats.hasErrors() && stats.compilation.errors[0]) ||\n+                                  (stats.hasWarnings() && stats.compilation.warnings[0]);\n+\n+                            if (err) {\n+                                reject(err);\n+                            } else {\n+                                resolve();\n+                            }\n+                        });\n+                    });\n+                }\n \n-        it(\"should compile without errors\", () => buildWithSourceMaps());\n-        it(\"should produce a valid source map\", () => {\n-            const cwdGetter = process.cwd;\n-            const fakeCwd = path.join(__dirname, \"scss\");\n+                it(\"should compile without errors\", () => buildWithSourceMaps());\n+                it(\"should produce a valid source map\", () => {\n+                    const cwdGetter = process.cwd;\n+                    const fakeCwd = path.join(__dirname, \"scss\");\n \n-            process.cwd = function () {\n-                return fakeCwd;\n-            };\n+                    process.cwd = function () {\n+                        return fakeCwd;\n+                    };\n \n-            return buildWithSourceMaps()\n-                .then(() => {\n-                    const sourceMap = testLoader.sourceMap;\n+                    return buildWithSourceMaps()\n+                        .then(() => {\n+                            const sourceMap = testLoader.sourceMap;\n \n-                    sourceMap.should.not.have.property(\"file\");\n-                    sourceMap.should.have.property(\"sourceRoot\", fakeCwd);\n-                    // This number needs to be updated if imports.scss or any dependency of that changes\n-                    sourceMap.sources.should.have.length(13);\n-                    sourceMap.sources.forEach(sourcePath =>\n-                        fs.existsSync(path.resolve(sourceMap.sourceRoot, sourcePath))\n-                    );\n+                            sourceMap.should.not.have.property(\"file\");\n+                            sourceMap.should.have.property(\"sourceRoot\", fakeCwd);\n+                            // This number needs to be updated if imports.scss or any dependency of that changes.\n+                            // Node Sass includes a duplicate entry, Dart Sass does not.\n+                            sourceMap.sources.should.have.length(implementation == nodeSass ? 12 : 11);\n+                            sourceMap.sources.forEach(sourcePath =>\n+                                fs.existsSync(path.resolve(sourceMap.sourceRoot, sourcePath))\n+                            );\n \n-                    process.cwd = cwdGetter;\n+                            process.cwd = cwdGetter;\n+                        });\n                 });\n-        });\n-    });\n-    describe(\"errors\", () => {\n-        it(\"should throw an error in synchronous loader environments\", () => {\n-            try {\n-                sassLoader.call(Object.create(loaderContextMock), \"\");\n-            } catch (err) {\n-                // check for file excerpt\n-                err.message.should.equal(\"Synchronous compilation is not supported anymore. See https://github.com/webpack-contrib/sass-loader/issues/333\");\n-            }\n-        });\n-        it(\"should output understandable errors in entry files\", (done) => {\n-            runWebpack({\n-                entry: pathToSassLoader + \"!\" + pathToErrorFile\n-            }, (err) => {\n-                err.message.should.match(/Property \"some-value\" must be followed by a ':'/);\n-                err.message.should.match(/\\(line 2, column 5\\)/);\n-                err.message.indexOf(pathToErrorFile).should.not.equal(-1);\n-                done();\n             });\n-        });\n-        it(\"should output understandable errors of imported files\", (done) => {\n-            runWebpack({\n-                entry: pathToSassLoader + \"!\" + pathToErrorImport\n-            }, (err) => {\n-                // check for file excerpt\n-                err.message.should.match(/Property \"some-value\" must be followed by a ':'/);\n-                err.message.should.match(/\\(line 2, column 5\\)/);\n-                err.message.indexOf(pathToErrorFile).should.not.equal(-1);\n-                done();\n-            });\n-        });\n-        it(\"should output understandable errors when a file could not be found\", (done) => {\n-            runWebpack({\n-                entry: pathToSassLoader + \"!\" + pathToErrorFileNotFound\n-            }, (err) => {\n-                err.message.should.match(/@import \"does-not-exist\";/);\n-                err.message.should.match(/File to import not found or unreadable: does-not-exist/);\n-                err.message.should.match(/\\(line 1, column 1\\)/);\n-                err.message.indexOf(pathToErrorFileNotFound).should.not.equal(-1);\n-                done();\n-            });\n-        });\n-        it(\"should not auto-resolve imports with explicit file names\", (done) => {\n-            runWebpack({\n-                entry: pathToSassLoader + \"!\" + pathToErrorFileNotFound2\n-            }, (err) => {\n-                err.message.should.match(/@import \"\\.\\/another\\/_module\\.scss\";/);\n-                err.message.should.match(/File to import not found or unreadable: \\.\\/another\\/_module\\.scss/);\n-                err.message.should.match(/\\(line 1, column 1\\)/);\n-                err.message.indexOf(pathToErrorFileNotFound2).should.not.equal(-1);\n-                done();\n-            });\n-        });\n-        it(\"should not swallow errors when trying to load node-sass\", (done) => {\n-            mockRequire.reRequire(pathToSassLoader);\n-            const module = require(\"module\");\n-            const originalResolve = module._resolveFilename;\n+            describe(\"errors\", () => {\n+                it(\"should throw an error in synchronous loader environments\", () => {\n+                    try {\n+                        sassLoader.call(Object.create(loaderContextMock), \"\");\n+                    } catch (err) {\n+                        // check for file excerpt\n+                        err.message.should.equal(\"Synchronous compilation is not supported anymore. See https://github.com/webpack-contrib/sass-loader/issues/333\");\n+                    }\n+                });\n+                it(\"should output understandable errors in entry files\", (done) => {\n+                    runWebpack({\n+                        entry: pathToErrorFile\n+                    }, {}, (err) => {\n+                        if (implementation === nodeSass) {\n+                            err.message.should.match(/Property \"some-value\" must be followed by a ':'/);\n+                            err.message.should.match(/\\(line 2, column 5\\)/);\n+                        } else {\n+                            err.message.should.match(/Expected \"{\"./);\n+                            err.message.should.match(/\\(line 3, column 1\\)/);\n+                        }\n+                        err.message.indexOf(pathToErrorFile).should.not.equal(-1);\n+                        done();\n+                    });\n+                });\n+                it(\"should output understandable errors of imported files\", (done) => {\n+                    runWebpack({\n+                        entry: pathToErrorImport\n+                    }, {}, (err) => {\n+                        // check for file excerpt\n+                        if (implementation == nodeSass) {\n+                            err.message.should.match(/Property \"some-value\" must be followed by a ':'/);\n+                            err.message.should.match(/\\(line 2, column 5\\)/);\n+                        } else {\n+                            err.message.should.match(/Expected \"{\"./);\n+                            err.message.should.match(/\\(line 3, column 1\\)/);\n+                        }\n+                        err.message.indexOf(pathToErrorFile).should.not.equal(-1);\n+                        done();\n+                    });\n+                });\n+                it(\"should output understandable errors when a file could not be found\", (done) => {\n+                    runWebpack({\n+                        entry: pathToErrorFileNotFound\n+                    }, {}, (err) => {\n+                        err.message.should.match(/@import \"does-not-exist\";/);\n+                        if (implementation == nodeSass) {\n+                            err.message.should.match(/File to import not found or unreadable: does-not-exist/);\n+                            err.message.should.match(/\\(line 1, column 1\\)/);\n+                        } else {\n+                            err.message.should.match(/Can't find stylesheet to import\\./);\n+                            err.message.should.match(/\\(line 1, column 9\\)/);\n+                        }\n+                        err.message.indexOf(pathToErrorFileNotFound).should.not.equal(-1);\n+                        done();\n+                    });\n+                });\n+                it(\"should not auto-resolve imports with explicit file names\", (done) => {\n+                    runWebpack({\n+                        entry: pathToErrorFileNotFound2\n+                    }, {}, (err) => {\n+                        err.message.should.match(/@import \"\\.\\/another\\/_module\\.scss\";/);\n+                        if (implementation == nodeSass) {\n+                            err.message.should.match(/File to import not found or unreadable: \\.\\/another\\/_module\\.scss/);\n+                            err.message.should.match(/\\(line 1, column 1\\)/);\n+                        } else {\n+                            err.message.should.match(/Can't find stylesheet to import\\./);\n+                            err.message.should.match(/\\(line 1, column 9\\)/);\n+                        }\n+                        err.message.indexOf(pathToErrorFileNotFound2).should.not.equal(-1);\n+                        done();\n+                    });\n+                });\n+                it(\"should not swallow errors when trying to load node-sass\", (done) => {\n+                    mockRequire.reRequire(pathToSassLoader);\n+                    const module = require(\"module\");\n+                    const originalResolve = module._resolveFilename;\n \n-            module._resolveFilename = function (filename) {\n-                if (!filename.match(/node-sass/)) {\n-                    return originalResolve.apply(this, arguments);\n-                }\n-                const err = new Error(\"Some error\");\n+                    module._resolveFilename = function (filename) {\n+                        if (!filename.match(/node-sass/)) {\n+                            return originalResolve.apply(this, arguments);\n+                        }\n+                        const err = new Error(\"Some error\");\n \n-                err.code = \"MODULE_NOT_FOUND\";\n-                throw err;\n-            };\n-            runWebpack({\n-                entry: pathToSassLoader + \"!\" + pathToErrorFile\n-            }, (err) => {\n-                module._resolveFilename = originalResolve;\n-                mockRequire.reRequire(\"node-sass\");\n-                err.message.should.match(/Some error/);\n-                done();\n-            });\n-        });\n-        it(\"should output a message when `node-sass` is an incompatible version\", (done) => {\n-            mockRequire.reRequire(pathToSassLoader);\n-            mockRequire(\"node-sass/package.json\", { version: \"3.0.0\" });\n-            runWebpack({\n-                entry: pathToSassLoader + \"!\" + pathToErrorFile\n-            }, (err) => {\n-                mockRequire.stop(\"node-sass\");\n-                err.message.should.match(/The installed version of `node-sass` is not compatible/);\n-                done();\n+                        err.code = \"MODULE_NOT_FOUND\";\n+                        throw err;\n+                    };\n+                    runWebpack({\n+                        entry: pathToSassLoader + \"!\" + pathToErrorFile\n+                    }, { implementation: null }, (err) => {\n+                        module._resolveFilename = originalResolve;\n+                        mockRequire.reRequire(\"node-sass\");\n+                        err.message.should.match(/Some error/);\n+                        done();\n+                    });\n+                });\n+                it(\"should output a message when the Sass info is unparseable\", (done) => {\n+                    mockRequire.reRequire(pathToSassLoader);\n+                    runWebpack({\n+                        entry: pathToErrorFile\n+                    }, {\n+                        implementation: merge(nodeSass, { info: \"asdfj\" })\n+                    }, (err) => {\n+                        err.message.should.match(/Unknown Sass implementation \"asdfj\"\\./);\n+                        done();\n+                    });\n+                });\n+                it(\"should output a message when the Sass version is unparseable\", (done) => {\n+                    mockRequire.reRequire(pathToSassLoader);\n+                    runWebpack({\n+                        entry: pathToErrorFile\n+                    }, {\n+                        implementation: merge(nodeSass, { info: \"node-sass\\t1\" })\n+                    }, (err) => {\n+                        err.message.should.match(/Invalid Sass version \"1\"\\./);\n+                        done();\n+                    });\n+                });\n+                it(\"should output a message when Node Sass is an incompatible version\", (done) => {\n+                    mockRequire.reRequire(pathToSassLoader);\n+                    runWebpack({\n+                        entry: pathToErrorFile\n+                    }, {\n+                        implementation: merge(nodeSass, { info: \"node-sass\\t3.0.0\" })\n+                    }, (err) => {\n+                        err.message.should.match(/Node Sass version 3\\.0\\.0 is incompatible with \\^4\\.0\\.0\\./);\n+                        done();\n+                    });\n+                });\n+                it(\"should output a message when Dart Sass is an incompatible version\", (done) => {\n+                    mockRequire.reRequire(pathToSassLoader);\n+                    runWebpack({\n+                        entry: pathToErrorFile\n+                    }, {\n+                        implementation: merge(nodeSass, { info: \"dart-sass\\t1.2.0\" })\n+                    }, (err) => {\n+                        err.message.should.match(/Dart Sass version 1\\.2\\.0 is incompatible with \\^1\\.3\\.0\\./);\n+                        done();\n+                    });\n+                });\n+                it(\"should output a message for an unknown implementation\", (done) => {\n+                    mockRequire.reRequire(pathToSassLoader);\n+                    runWebpack({\n+                        entry: pathToErrorFile\n+                    }, {\n+                        implementation: merge(nodeSass, { info: \"strange-sass\\t1.0.0\" })\n+                    }, (err) => {\n+                        err.message.should.match(/Unknown implementation \"strange-sass\"\\./);",
        "path": "test/index.test.js",
        "position": null,
        "original_position": 602,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "05d20e6852df1a351347a4cce3fc3480bfd1955e",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thanks for adding tests here \ud83d\udc4d ",
        "created_at": "2018-07-11T15:19:05Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201731832",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201731832"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201731832"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201742139",
        "pull_request_review_id": 136302997,
        "id": 201742139,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTc0MjEzOQ==",
        "diff_hunk": "@@ -79,7 +85,54 @@ module.exports = {\n };\n ```\n \n-See [node-sass](https://github.com/andrew/node-sass) for all available Sass options.\n+See [the Node Sass documentation](https://github.com/sass/node-sass/blob/master/README.md#options) for all available Sass options.\n+\n+The special `implementation` option determines which implementation of Sass to\n+use. It takes either a [Node Sass][] or a [Dart Sass][] module. For example, to\n+use Dart Sass, you'd pass:\n+\n+```js\n+// ...\n+    {\n+        loader: \"sass-loader\",\n+        options: {\n+            implementation: require(\"sass\")\n+        }\n+    }\n+// ...\n+```\n+\n+Note that when using Dart Sass, **synchronous compilation is twice as fast as\n+asynchronous compilation** by default, due to the overhead of asynchronous\n+callbacks. To avoid this overhead, you can use the\n+[`fibers`](https://www.npmjs.com/package/fibers) package to call asynchronous\n+importers from the synchronous code path. To enable this, pass the `Fiber` class\n+to the `fiber` option:",
        "path": "README.md",
        "position": 61,
        "original_position": 61,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "05d20e6852df1a351347a4cce3fc3480bfd1955e",
        "user": {
            "login": "just-boris",
            "id": 812240,
            "node_id": "MDQ6VXNlcjgxMjI0MA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/812240?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/just-boris",
            "html_url": "https://github.com/just-boris",
            "followers_url": "https://api.github.com/users/just-boris/followers",
            "following_url": "https://api.github.com/users/just-boris/following{/other_user}",
            "gists_url": "https://api.github.com/users/just-boris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/just-boris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/just-boris/subscriptions",
            "organizations_url": "https://api.github.com/users/just-boris/orgs",
            "repos_url": "https://api.github.com/users/just-boris/repos",
            "events_url": "https://api.github.com/users/just-boris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/just-boris/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fiber is a native package, so including this by default would defeat the value of this change - not having C++ code in dependencies, make SASS as easy to use as Less or Stylus.\r\n\r\nThe caveats of native packages was one of the reasons to not include SASS by default into create-react-app: https://github.com/facebook/create-react-app/issues/78#issuecomment-245727905\r\n\r\nThe current documentation seems fine. When users would ask \"compilation of my SASS is too slow, how can I speed this up?\", they will be able to find an answer. But making fibers strong recommendation or even mandatory would sound like \"You should buy Ferrari when you simply need a car\".",
        "created_at": "2018-07-11T15:41:57Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201742139",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201742139"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201742139"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 201715888
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201849986",
        "pull_request_review_id": 136434489,
        "id": 201849986,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTg0OTk4Ng==",
        "diff_hunk": "@@ -79,7 +85,54 @@ module.exports = {\n };\n ```\n \n-See [node-sass](https://github.com/andrew/node-sass) for all available Sass options.\n+See [the Node Sass documentation](https://github.com/sass/node-sass/blob/master/README.md#options) for all available Sass options.\n+\n+The special `implementation` option determines which implementation of Sass to\n+use. It takes either a [Node Sass][] or a [Dart Sass][] module. For example, to\n+use Dart Sass, you'd pass:\n+\n+```js\n+// ...\n+    {\n+        loader: \"sass-loader\",\n+        options: {\n+            implementation: require(\"sass\")\n+        }\n+    }\n+// ...\n+```\n+\n+Note that when using Dart Sass, **synchronous compilation is twice as fast as\n+asynchronous compilation** by default, due to the overhead of asynchronous\n+callbacks. To avoid this overhead, you can use the\n+[`fibers`](https://www.npmjs.com/package/fibers) package to call asynchronous\n+importers from the synchronous code path. To enable this, pass the `Fiber` class\n+to the `fiber` option:",
        "path": "README.md",
        "position": 61,
        "original_position": 61,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "05d20e6852df1a351347a4cce3fc3480bfd1955e",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I agree with @just-boris; there's a lot of value in providing an easy pure-JS set-up experience, and then letting performance-conscious users focus on that when they need it.\r\n\r\nSomething to consider, probably after this PR lands, would be adding an option to run Dart Sass in synchronous mode, which is efficient without the use of fibers (at the cost of not supporting async importers or custom functions).",
        "created_at": "2018-07-11T21:45:58Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201849986",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201849986"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201849986"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 201715888
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201850136",
        "pull_request_review_id": 136434489,
        "id": 201850136,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTg1MDEzNg==",
        "diff_hunk": "@@ -53,6 +41,13 @@ function sassLoader(content) {\n         addNormalizedDependency\n     ));\n \n+    if (asyncSassJobQueue === null) {\n+        const implementation = options.implementation || require(\"node-sass\");\n+\n+        validateSassVersion(implementation.info);\n+        asyncSassJobQueue = async.queue(implementation.render, threadPoolSize - 1);",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 36,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "05d20e6852df1a351347a4cce3fc3480bfd1955e",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't believe Dart Sass suffers from that problem, but I wanted to keep the code path as similar between the two implementations as possible.",
        "created_at": "2018-07-11T21:46:31Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201850136",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201850136"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201850136"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 201725985
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201850986",
        "pull_request_review_id": 136434489,
        "id": 201850986,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTg1MDk4Ng==",
        "diff_hunk": "@@ -32,299 +35,386 @@ Object.defineProperty(loaderContextMock, \"options\", {\n     }\n });\n \n-syntaxStyles.forEach(ext => {\n-    function execTest(testId, loaderOptions, webpackOptions) {\n-        return new Promise((resolve, reject) => {\n-            const baseConfig = merge({\n-                entry: path.join(__dirname, ext, testId + \".\" + ext),\n-                output: {\n-                    filename: \"bundle.\" + ext + \".js\"\n-                },\n-                module: {\n-                    rules: [{\n-                        test: new RegExp(`\\\\.${ ext }$`),\n-                        use: [\n-                            { loader: \"raw-loader\" },\n-                            { loader: pathToSassLoader, options: loaderOptions }\n-                        ]\n-                    }]\n-                }\n-            }, webpackOptions);\n+implementations.forEach(implementation => {\n+    const implementationName = implementation.info.split(\"\\t\")[0];\n+    describe(implementationName, () => {\n+        syntaxStyles.forEach(ext => {\n+            function execTest(testId, loaderOptions, webpackOptions) {\n+                const bundleName = \"bundle.\" + ext + \".\" + implementationName + \".js\";\n+                return new Promise((resolve, reject) => {\n+                    const baseConfig = merge({\n+                        entry: path.join(__dirname, ext, testId + \".\" + ext),\n+                        output: {\n+                            filename: bundleName\n+                        }\n+                    }, webpackOptions);\n \n-            runWebpack(baseConfig, (err) => err ? reject(err) : resolve());\n-        }).then(() => {\n-            const actualCss = readBundle(\"bundle.\" + ext + \".js\");\n-            const expectedCss = readCss(ext, testId);\n+                    runWebpack(baseConfig, loaderOptions, (err) => err ? reject(err) : resolve());\n+                }).then(() => {\n+                    const actualCss = readBundle(bundleName);\n+                    const expectedCss = readCss(ext, testId);\n \n-            // writing the actual css to output-dir for better debugging\n-            // fs.writeFileSync(path.join(__dirname, \"output\", `${ testId }.${ ext }.css`), actualCss, \"utf8\");\n-            actualCss.should.eql(expectedCss);\n-        });\n-    }\n+                    // writing the actual css to output-dir for better debugging\n+                    // fs.writeFileSync(path.join(__dirname, \"output\", `${ testId }.${ ext }.css`), actualCss, \"utf8\");\n+                    actualCss.should.eql(expectedCss);\n+                });\n+            }\n \n-    describe(`sass-loader (${ ext })`, () => {\n-        describe(\"basic\", () => {\n-            it(\"should compile simple sass without errors\", () => execTest(\"language\"));\n-        });\n-        describe(\"imports\", () => {\n-            it(\"should resolve imports correctly\", () => execTest(\"imports\"));\n-            // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/32\n-            it(\"should pass with multiple imports\", () => execTest(\"multiple-imports\"));\n-            // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/73\n-            it(\"should resolve imports from other language style correctly\", () => execTest(\"import-other-style\"));\n-            // Test for includePath imports\n-            it(\"should resolve imports from another directory declared by includePaths correctly\", () => execTest(\"import-include-paths\", {\n-                includePaths: [path.join(__dirname, ext, \"includePath\")]\n-            }));\n-            it(\"should not resolve CSS imports\", () => execTest(\"import-css\"));\n-            it(\"should compile bootstrap-sass without errors\", () => execTest(\"bootstrap-sass\"));\n-            it(\"should correctly import scoped npm packages\", () => execTest(\"import-from-npm-org-pkg\"));\n-            it(\"should resolve aliases\", () => execTest(\"import-alias\", {}, {\n-                resolve: {\n-                    alias: {\n-                        \"path-to-alias\": path.join(__dirname, ext, \"another\", \"alias.\" + ext)\n-                    }\n-                }\n-            }));\n-        });\n-        describe(\"custom importers\", () => {\n-            it(\"should use custom importer\", () => execTest(\"custom-importer\", {\n-                importer: customImporter\n-            }));\n-        });\n-        describe(\"custom functions\", () => {\n-            it(\"should expose custom functions\", () => execTest(\"custom-functions\", {\n-                functions: customFunctions\n-            }));\n-        });\n-        describe(\"prepending data\", () => {\n-            it(\"should extend the data-option if present\", () => execTest(\"prepending-data\", {\n-                data: \"$prepended-data: hotpink;\"\n-            }));\n-        });\n-        // See https://github.com/webpack-contrib/sass-loader/issues/21\n-        describe(\"empty files\", () => {\n-            it(\"should compile without errors\", () => execTest(\"empty\"));\n+            describe(`sass-loader (${ ext })`, () => {\n+                describe(\"basic\", () => {\n+                    it(\"should compile simple sass without errors\", () => execTest(\"language\"));\n+                });\n+                describe(\"imports\", () => {\n+                    it(\"should resolve imports correctly\", () => execTest(\"imports\"));\n+                    // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/32\n+                    it(\"should pass with multiple imports\", () => execTest(\"multiple-imports\"));\n+                    // Test for issue: https://github.com/webpack-contrib/sass-loader/issues/73\n+                    it(\"should resolve imports from other language style correctly\", () => execTest(\"import-other-style\"));\n+                    // Test for includePath imports\n+                    it(\"should resolve imports from another directory declared by includePaths correctly\", () => execTest(\"import-include-paths\", {\n+                        includePaths: [path.join(__dirname, ext, \"includePath\")]\n+                    }));\n+                    it(\"should compile bootstrap-sass without errors\", () => execTest(\"bootstrap-sass\"));\n+                    it(\"should correctly import scoped npm packages\", () => execTest(\"import-from-npm-org-pkg\"));\n+                    it(\"should resolve aliases\", () => execTest(\"import-alias\", {}, {\n+                        resolve: {\n+                            alias: {\n+                                \"path-to-alias\": path.join(__dirname, ext, \"another\", \"alias.\" + ext)\n+                            }\n+                        }\n+                    }));\n+                });\n+                describe(\"custom importers\", () => {\n+                    it(\"should use custom importer\", () => execTest(\"custom-importer\", {\n+                        importer: customImporter\n+                    }));\n+                });\n+                describe(\"custom functions\", () => {\n+                    it(\"should expose custom functions\", () => execTest(\"custom-functions\", {\n+                        functions: customFunctions(implementation)\n+                    }));\n+                });\n+                describe(\"prepending data\", () => {\n+                    it(\"should extend the data-option if present\", () => execTest(\"prepending-data\", {\n+                        data: \"$prepended-data: hotpink\" + (ext == \"sass\" ? \"\\n\" : \";\")\n+                    }));\n+                });\n+                // See https://github.com/webpack-contrib/sass-loader/issues/21\n+                describe(\"empty files\", () => {\n+                    it(\"should compile without errors\", () => execTest(\"empty\"));\n+                });\n+            });\n         });\n-    });\n-});\n \n-describe(\"sass-loader\", () => {\n-    describe(\"multiple compilations\", () => {\n-        it(\"should not interfere with each other\", () =>\n-            new Promise((resolve, reject) => {\n-                runWebpack({\n-                    entry: {\n-                        b: path.join(__dirname, \"scss\", \"multipleCompilations\", \"b.scss\"),\n-                        c: path.join(__dirname, \"scss\", \"multipleCompilations\", \"c.scss\"),\n-                        a: path.join(__dirname, \"scss\", \"multipleCompilations\", \"a.scss\"),\n-                        d: path.join(__dirname, \"scss\", \"multipleCompilations\", \"d.scss\"),\n-                        e: path.join(__dirname, \"scss\", \"multipleCompilations\", \"e.scss\"),\n-                        f: path.join(__dirname, \"scss\", \"multipleCompilations\", \"f.scss\"),\n-                        g: path.join(__dirname, \"scss\", \"multipleCompilations\", \"g.scss\"),\n-                        h: path.join(__dirname, \"scss\", \"multipleCompilations\", \"h.scss\")\n-                    },\n-                    output: {\n-                        filename: \"bundle.multiple-compilations.[name].js\"\n-                    },\n-                    module: {\n-                        rules: [{\n-                            test: /\\.scss$/,\n-                            use: [\n-                                { loader: \"raw-loader\" },\n-                                // We're specifying an empty options object because otherwise, webpack creates a new object for every loader invocation\n-                                // Since we want to ensure that our loader is not tampering with the option object, we are triggering webpack to re-use the options object\n-                                // @see https://github.com/webpack-contrib/sass-loader/issues/368#issuecomment-278330164\n-                                { loader: pathToSassLoader, options: {} }\n-                            ]\n-                        }]\n-                    }\n-                }, err => err ? reject(err) : resolve());\n-            })\n-                .then(() => {\n-                    const expectedCss = readCss(\"scss\", \"imports\");\n-                    const a = readBundle(\"bundle.multiple-compilations.a.js\");\n-                    const b = readBundle(\"bundle.multiple-compilations.b.js\");\n-                    const c = readBundle(\"bundle.multiple-compilations.c.js\");\n-                    const d = readBundle(\"bundle.multiple-compilations.d.js\");\n-                    const e = readBundle(\"bundle.multiple-compilations.e.js\");\n-                    const f = readBundle(\"bundle.multiple-compilations.f.js\");\n-                    const g = readBundle(\"bundle.multiple-compilations.g.js\");\n-                    const h = readBundle(\"bundle.multiple-compilations.h.js\");\n+        describe(\"sass-loader\", () => {\n+            describe(\"multiple compilations\", () => {\n+                it(\"should not interfere with each other\", () =>\n+                    new Promise((resolve, reject) => {\n+                        runWebpack({\n+                            entry: {\n+                                b: path.join(__dirname, \"scss\", \"multipleCompilations\", \"b.scss\"),\n+                                c: path.join(__dirname, \"scss\", \"multipleCompilations\", \"c.scss\"),\n+                                a: path.join(__dirname, \"scss\", \"multipleCompilations\", \"a.scss\"),\n+                                d: path.join(__dirname, \"scss\", \"multipleCompilations\", \"d.scss\"),\n+                                e: path.join(__dirname, \"scss\", \"multipleCompilations\", \"e.scss\"),\n+                                f: path.join(__dirname, \"scss\", \"multipleCompilations\", \"f.scss\"),\n+                                g: path.join(__dirname, \"scss\", \"multipleCompilations\", \"g.scss\"),\n+                                h: path.join(__dirname, \"scss\", \"multipleCompilations\", \"h.scss\")\n+                            },\n+                            output: {\n+                                filename: \"bundle.multiple-compilations.[name].js\"\n+                            }\n+                        }, {}, err => err ? reject(err) : resolve());\n+                    })\n+                        .then(() => {\n+                            const expectedCss = readCss(\"scss\", \"imports\");\n+                            const a = readBundle(\"bundle.multiple-compilations.a.js\");\n+                            const b = readBundle(\"bundle.multiple-compilations.b.js\");\n+                            const c = readBundle(\"bundle.multiple-compilations.c.js\");\n+                            const d = readBundle(\"bundle.multiple-compilations.d.js\");\n+                            const e = readBundle(\"bundle.multiple-compilations.e.js\");\n+                            const f = readBundle(\"bundle.multiple-compilations.f.js\");\n+                            const g = readBundle(\"bundle.multiple-compilations.g.js\");\n+                            const h = readBundle(\"bundle.multiple-compilations.h.js\");\n \n-                    a.should.equal(expectedCss);\n-                    b.should.equal(expectedCss);\n-                    c.should.equal(expectedCss);\n-                    d.should.equal(expectedCss);\n-                    e.should.equal(expectedCss);\n-                    f.should.equal(expectedCss);\n-                    g.should.equal(expectedCss);\n-                    h.should.equal(expectedCss);\n-                })\n-        );\n-    });\n-    describe(\"source maps\", () => {\n-        function buildWithSourceMaps() {\n-            return new Promise((resolve, reject) => {\n-                runWebpack({\n-                    entry: path.join(__dirname, \"scss\", \"imports.scss\"),\n-                    output: {\n-                        filename: \"bundle.source-maps.js\"\n-                    },\n-                    devtool: \"source-map\",\n-                    module: {\n-                        rules: [{\n-                            test: /\\.scss$/,\n-                            use: [\n-                                { loader: testLoader.filename },\n-                                {\n-                                    loader: pathToSassLoader, options: {\n-                                        sourceMap: true\n-                                    }\n-                                }\n-                            ]\n-                        }]\n-                    }\n-                }, err => err ? reject(err) : resolve());\n+                            a.should.equal(expectedCss);\n+                            b.should.equal(expectedCss);\n+                            c.should.equal(expectedCss);\n+                            d.should.equal(expectedCss);\n+                            e.should.equal(expectedCss);\n+                            f.should.equal(expectedCss);\n+                            g.should.equal(expectedCss);\n+                            h.should.equal(expectedCss);\n+                        })\n+                );\n             });\n-        }\n+            describe(\"source maps\", () => {\n+                function buildWithSourceMaps() {\n+                    return new Promise((resolve, reject) => {\n+                        webpack({",
        "path": "test/index.test.js",
        "position": 292,
        "original_position": 286,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "05d20e6852df1a351347a4cce3fc3480bfd1955e",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This uses different values for `module.rules`, which `webpack-merge` can't merge in (it would just try to add rules to the list rather than replacing it entirely).",
        "created_at": "2018-07-11T21:49:57Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201850986",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/201850986"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r201850986"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 201730758
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/206859277",
        "pull_request_review_id": 142352114,
        "id": 206859277,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjg1OTI3Nw==",
        "diff_hunk": "@@ -79,7 +85,54 @@ module.exports = {\n };\n ```\n \n-See [node-sass](https://github.com/andrew/node-sass) for all available Sass options.\n+See [the Node Sass documentation](https://github.com/sass/node-sass/blob/master/README.md#options) for all available Sass options.\n+\n+The special `implementation` option determines which implementation of Sass to\n+use. It takes either a [Node Sass][] or a [Dart Sass][] module. For example, to\n+use Dart Sass, you'd pass:\n+\n+```js\n+// ...\n+    {\n+        loader: \"sass-loader\",\n+        options: {\n+            implementation: require(\"sass\")\n+        }\n+    }\n+// ...\n+```\n+\n+Note that when using Dart Sass, **synchronous compilation is twice as fast as\n+asynchronous compilation** by default, due to the overhead of asynchronous\n+callbacks. To avoid this overhead, you can use the\n+[`fibers`](https://www.npmjs.com/package/fibers) package to call asynchronous\n+importers from the synchronous code path. To enable this, pass the `Fiber` class\n+to the `fiber` option:",
        "path": "README.md",
        "position": 61,
        "original_position": 61,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "05d20e6852df1a351347a4cce3fc3480bfd1955e",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> Fiber is a native package, so including this by default would defeat the value of this change - not having C++ code in dependencies, make SASS as easy to use as Less or Stylus.\r\n\r\nGood catch \ud83d\udc4d I totally agree.\r\n\r\n> Something to consider, probably after this PR lands, would be adding an option to run Dart Sass in synchronous mode, which is efficient without the use of fibers (at the cost of not supporting async importers or custom functions).\r\n\r\nYes, [I'm thinking about moving away from async importers](https://github.com/webpack-contrib/sass-loader/issues/296#issuecomment-404214133). This would be a good fit.",
        "created_at": "2018-08-01T12:30:33Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r206859277",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/206859277"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r206859277"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 201715888
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/206859976",
        "pull_request_review_id": 142352873,
        "id": 206859976,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjg1OTk3Ng==",
        "diff_hunk": "@@ -53,6 +41,13 @@ function sassLoader(content) {\n         addNormalizedDependency\n     ));\n \n+    if (asyncSassJobQueue === null) {\n+        const implementation = options.implementation || require(\"node-sass\");\n+\n+        validateSassVersion(implementation.info);\n+        asyncSassJobQueue = async.queue(implementation.render, threadPoolSize - 1);",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 36,
        "commit_id": "41b00792a1251539e12bb19185d7c1b5a7139511",
        "original_commit_id": "05d20e6852df1a351347a4cce3fc3480bfd1955e",
        "user": {
            "login": "jhnns",
            "id": 781746,
            "node_id": "MDQ6VXNlcjc4MTc0Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/781746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhnns",
            "html_url": "https://github.com/jhnns",
            "followers_url": "https://api.github.com/users/jhnns/followers",
            "following_url": "https://api.github.com/users/jhnns/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhnns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhnns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhnns/subscriptions",
            "organizations_url": "https://api.github.com/users/jhnns/orgs",
            "repos_url": "https://api.github.com/users/jhnns/repos",
            "events_url": "https://api.github.com/users/jhnns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhnns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Seems reasonable, but I suspect the queue to be one of the performance bottlenecks as discussed in #296. However, that's not a blocker for this PR.",
        "created_at": "2018-08-01T12:32:41Z",
        "updated_at": "2018-08-01T15:31:35Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r206859976",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/206859976"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/573#discussion_r206859976"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/573"
            }
        },
        "in_reply_to_id": 201725985
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/212388439",
        "pull_request_review_id": 149011043,
        "id": 212388439,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjM4ODQzOQ==",
        "diff_hunk": "@@ -143,7 +143,7 @@ Bundling CSS with webpack has some nice advantages like referencing images and f\n There are two possibilities to extract a style sheet from the bundle:\n \n - [extract-loader](https://github.com/peerigon/extract-loader) (simpler, but specialized on the css-loader's output)\n-- [extract-text-webpack-plugin](https://github.com/webpack-contrib/extract-text-webpack-plugin) (more complex, but works in all use-cases)\n+- [MiniCssExtractPlugin](https://github.com/webpack-contrib/mini-css-extract-plugin) (use this, when using webpack 4 configuration. Works in all use-cases)",
        "path": "README.md",
        "position": null,
        "original_position": 5,
        "commit_id": "bdf119c7317d780b62fb85a24b16a0e1288067e5",
        "original_commit_id": "4c610e2a56db811e24c6527e8d7496022f51de9a",
        "user": {
            "login": "michael-ciniawsky",
            "id": 5419992,
            "node_id": "MDQ6VXNlcjU0MTk5OTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5419992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-ciniawsky",
            "html_url": "https://github.com/michael-ciniawsky",
            "followers_url": "https://api.github.com/users/michael-ciniawsky/followers",
            "following_url": "https://api.github.com/users/michael-ciniawsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/michael-ciniawsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michael-ciniawsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michael-ciniawsky/subscriptions",
            "organizations_url": "https://api.github.com/users/michael-ciniawsky/orgs",
            "repos_url": "https://api.github.com/users/michael-ciniawsky/repos",
            "events_url": "https://api.github.com/users/michael-ciniawsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michael-ciniawsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "```\r\n[`mini-css-extract-plugin`]\r\n```",
        "created_at": "2018-08-23T17:15:02Z",
        "updated_at": "2018-08-25T17:30:36Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/597#discussion_r212388439",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/597",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/212388439"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/597#discussion_r212388439"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/597"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/212530577",
        "pull_request_review_id": 149185172,
        "id": 212530577,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjUzMDU3Nw==",
        "diff_hunk": "@@ -143,7 +143,7 @@ Bundling CSS with webpack has some nice advantages like referencing images and f\n There are two possibilities to extract a style sheet from the bundle:\n \n - [extract-loader](https://github.com/peerigon/extract-loader) (simpler, but specialized on the css-loader's output)\n-- [extract-text-webpack-plugin](https://github.com/webpack-contrib/extract-text-webpack-plugin) (more complex, but works in all use-cases)\n+- [MiniCssExtractPlugin](https://github.com/webpack-contrib/mini-css-extract-plugin) (use this, when using webpack 4 configuration. Works in all use-cases)",
        "path": "README.md",
        "position": null,
        "original_position": 5,
        "commit_id": "bdf119c7317d780b62fb85a24b16a0e1288067e5",
        "original_commit_id": "4c610e2a56db811e24c6527e8d7496022f51de9a",
        "user": {
            "login": "Vishal0203",
            "id": 8856973,
            "node_id": "MDQ6VXNlcjg4NTY5NzM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/8856973?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Vishal0203",
            "html_url": "https://github.com/Vishal0203",
            "followers_url": "https://api.github.com/users/Vishal0203/followers",
            "following_url": "https://api.github.com/users/Vishal0203/following{/other_user}",
            "gists_url": "https://api.github.com/users/Vishal0203/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Vishal0203/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Vishal0203/subscriptions",
            "organizations_url": "https://api.github.com/users/Vishal0203/orgs",
            "repos_url": "https://api.github.com/users/Vishal0203/repos",
            "events_url": "https://api.github.com/users/Vishal0203/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Vishal0203/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If we change it here, we'll need to update it everywhere else in the doc. Shall we proceed with that? ",
        "created_at": "2018-08-24T06:19:29Z",
        "updated_at": "2018-08-25T17:30:36Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/597#discussion_r212530577",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/597",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/212530577"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/597#discussion_r212530577"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/597"
            }
        },
        "in_reply_to_id": 212388439
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/212532011",
        "pull_request_review_id": 149186914,
        "id": 212532011,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjUzMjAxMQ==",
        "diff_hunk": "@@ -143,7 +143,7 @@ Bundling CSS with webpack has some nice advantages like referencing images and f\n There are two possibilities to extract a style sheet from the bundle:\n \n - [extract-loader](https://github.com/peerigon/extract-loader) (simpler, but specialized on the css-loader's output)\n-- [extract-text-webpack-plugin](https://github.com/webpack-contrib/extract-text-webpack-plugin) (more complex, but works in all use-cases)\n+- [MiniCssExtractPlugin](https://github.com/webpack-contrib/mini-css-extract-plugin) (use this, when using webpack 4 configuration. Works in all use-cases)",
        "path": "README.md",
        "position": null,
        "original_position": 5,
        "commit_id": "bdf119c7317d780b62fb85a24b16a0e1288067e5",
        "original_commit_id": "4c610e2a56db811e24c6527e8d7496022f51de9a",
        "user": {
            "login": "michael-ciniawsky",
            "id": 5419992,
            "node_id": "MDQ6VXNlcjU0MTk5OTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5419992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-ciniawsky",
            "html_url": "https://github.com/michael-ciniawsky",
            "followers_url": "https://api.github.com/users/michael-ciniawsky/followers",
            "following_url": "https://api.github.com/users/michael-ciniawsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/michael-ciniawsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michael-ciniawsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michael-ciniawsky/subscriptions",
            "organizations_url": "https://api.github.com/users/michael-ciniawsky/orgs",
            "repos_url": "https://api.github.com/users/michael-ciniawsky/repos",
            "events_url": "https://api.github.com/users/michael-ciniawsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michael-ciniawsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes please :) \ud83d\udc4d ",
        "created_at": "2018-08-24T06:28:23Z",
        "updated_at": "2018-08-25T17:30:36Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/597#discussion_r212532011",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/597",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/212532011"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/597#discussion_r212532011"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/597"
            }
        },
        "in_reply_to_id": 212388439
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/212804090",
        "pull_request_review_id": 149516286,
        "id": 212804090,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjgwNDA5MA==",
        "diff_hunk": "@@ -143,7 +143,7 @@ Bundling CSS with webpack has some nice advantages like referencing images and f\n There are two possibilities to extract a style sheet from the bundle:\n \n - [extract-loader](https://github.com/peerigon/extract-loader) (simpler, but specialized on the css-loader's output)\n-- [extract-text-webpack-plugin](https://github.com/webpack-contrib/extract-text-webpack-plugin) (more complex, but works in all use-cases)\n+- [MiniCssExtractPlugin](https://github.com/webpack-contrib/mini-css-extract-plugin) (use this, when using webpack 4 configuration. Works in all use-cases)",
        "path": "README.md",
        "position": null,
        "original_position": 5,
        "commit_id": "bdf119c7317d780b62fb85a24b16a0e1288067e5",
        "original_commit_id": "4c610e2a56db811e24c6527e8d7496022f51de9a",
        "user": {
            "login": "Vishal0203",
            "id": 8856973,
            "node_id": "MDQ6VXNlcjg4NTY5NzM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/8856973?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Vishal0203",
            "html_url": "https://github.com/Vishal0203",
            "followers_url": "https://api.github.com/users/Vishal0203/followers",
            "following_url": "https://api.github.com/users/Vishal0203/following{/other_user}",
            "gists_url": "https://api.github.com/users/Vishal0203/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Vishal0203/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Vishal0203/subscriptions",
            "organizations_url": "https://api.github.com/users/Vishal0203/orgs",
            "repos_url": "https://api.github.com/users/Vishal0203/repos",
            "events_url": "https://api.github.com/users/Vishal0203/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Vishal0203/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@michael-ciniawsky done!",
        "created_at": "2018-08-25T17:32:40Z",
        "updated_at": "2018-08-25T17:32:40Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/597#discussion_r212804090",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/597",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/212804090"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/597#discussion_r212804090"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/597"
            }
        },
        "in_reply_to_id": 212388439
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/218963248",
        "pull_request_review_id": 157021269,
        "id": 218963248,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODk2MzI0OA==",
        "diff_hunk": "@@ -54,7 +55,6 @@\n     \"node\": \">= 6.9.0 || >= 8.9.0\"\n   },\n   \"peerDependencies\": {\n-    \"node-sass\": \"^4.0.0\",",
        "path": "package.json",
        "position": 12,
        "original_position": 12,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "user": {
            "login": "track0x1",
            "id": 5631509,
            "node_id": "MDQ6VXNlcjU2MzE1MDk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5631509?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/track0x1",
            "html_url": "https://github.com/track0x1",
            "followers_url": "https://api.github.com/users/track0x1/followers",
            "following_url": "https://api.github.com/users/track0x1/following{/other_user}",
            "gists_url": "https://api.github.com/users/track0x1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/track0x1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/track0x1/subscriptions",
            "organizations_url": "https://api.github.com/users/track0x1/orgs",
            "repos_url": "https://api.github.com/users/track0x1/repos",
            "events_url": "https://api.github.com/users/track0x1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/track0x1/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why did you remove `node-sass` as a peerDependency when `sass-loader` explicitly requires a version?",
        "created_at": "2018-09-19T21:04:03Z",
        "updated_at": "2018-09-19T21:04:04Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r218963248",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/218963248"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r218963248"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/219015755",
        "pull_request_review_id": 157084864,
        "id": 219015755,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTAxNTc1NQ==",
        "diff_hunk": "@@ -54,7 +55,6 @@\n     \"node\": \">= 6.9.0 || >= 8.9.0\"\n   },\n   \"peerDependencies\": {\n-    \"node-sass\": \"^4.0.0\",",
        "path": "package.json",
        "position": 12,
        "original_position": 12,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "user": {
            "login": "nex3",
            "id": 188,
            "node_id": "MDQ6VXNlcjE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nex3",
            "html_url": "https://github.com/nex3",
            "followers_url": "https://api.github.com/users/nex3/followers",
            "following_url": "https://api.github.com/users/nex3/following{/other_user}",
            "gists_url": "https://api.github.com/users/nex3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nex3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nex3/subscriptions",
            "organizations_url": "https://api.github.com/users/nex3/orgs",
            "repos_url": "https://api.github.com/users/nex3/repos",
            "events_url": "https://api.github.com/users/nex3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nex3/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`sass-loader` requires *either* `node-sass` or `sass`.  There's no way to express that as a peer dependency without having npm complain about one or the other missing.",
        "created_at": "2018-09-20T02:06:38Z",
        "updated_at": "2018-09-20T02:06:38Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r219015755",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/219015755"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r219015755"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        },
        "in_reply_to_id": 218963248
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/219182636",
        "pull_request_review_id": 157296115,
        "id": 219182636,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTE4MjYzNg==",
        "diff_hunk": "@@ -54,7 +55,6 @@\n     \"node\": \">= 6.9.0 || >= 8.9.0\"\n   },\n   \"peerDependencies\": {\n-    \"node-sass\": \"^4.0.0\",",
        "path": "package.json",
        "position": 12,
        "original_position": 12,
        "commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "original_commit_id": "2cb77d92726dbc0da043e6cfa41dd12d2e196e28",
        "user": {
            "login": "track0x1",
            "id": 5631509,
            "node_id": "MDQ6VXNlcjU2MzE1MDk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5631509?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/track0x1",
            "html_url": "https://github.com/track0x1",
            "followers_url": "https://api.github.com/users/track0x1/followers",
            "following_url": "https://api.github.com/users/track0x1/following{/other_user}",
            "gists_url": "https://api.github.com/users/track0x1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/track0x1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/track0x1/subscriptions",
            "organizations_url": "https://api.github.com/users/track0x1/orgs",
            "repos_url": "https://api.github.com/users/track0x1/repos",
            "events_url": "https://api.github.com/users/track0x1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/track0x1/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah! Thank you. Didn't know you could use either.",
        "created_at": "2018-09-20T14:20:26Z",
        "updated_at": "2018-09-20T14:20:26Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r219182636",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/219182636"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/533#discussion_r219182636"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/533"
            }
        },
        "in_reply_to_id": 218963248
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/253369731",
        "pull_request_review_id": 199464567,
        "id": 253369731,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzM2OTczMQ==",
        "diff_hunk": "@@ -15,3 +15,10 @@\n @import ~animate.css/animate\n /* @import url(http://example.com/something/from/the/interwebs); */\n @import url(http://example.com/something/from/the/interwebs);\n+/* scoped import @import language */\n+.scoped-imporr",
        "path": "test/sass/imports.sass",
        "position": 5,
        "original_position": 5,
        "commit_id": "03e5f3ecb34403c5e873a5bb138c9a9ba40a9026",
        "original_commit_id": "03e5f3ecb34403c5e873a5bb138c9a9ba40a9026",
        "user": {
            "login": "Yiin",
            "id": 9081457,
            "node_id": "MDQ6VXNlcjkwODE0NTc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/9081457?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Yiin",
            "html_url": "https://github.com/Yiin",
            "followers_url": "https://api.github.com/users/Yiin/followers",
            "following_url": "https://api.github.com/users/Yiin/following{/other_user}",
            "gists_url": "https://api.github.com/users/Yiin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Yiin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Yiin/subscriptions",
            "organizations_url": "https://api.github.com/users/Yiin/orgs",
            "repos_url": "https://api.github.com/users/Yiin/repos",
            "events_url": "https://api.github.com/users/Yiin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Yiin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`imporr` typo?",
        "created_at": "2019-02-04T07:54:04Z",
        "updated_at": "2019-02-04T07:54:10Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/557#discussion_r253369731",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/557",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/253369731"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/557#discussion_r253369731"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/557"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/253423101",
        "pull_request_review_id": 199528332,
        "id": 253423101,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzQyMzEwMQ==",
        "diff_hunk": "@@ -15,3 +15,10 @@\n @import ~animate.css/animate\n /* @import url(http://example.com/something/from/the/interwebs); */\n @import url(http://example.com/something/from/the/interwebs);\n+/* scoped import @import language */\n+.scoped-imporr",
        "path": "test/sass/imports.sass",
        "position": 5,
        "original_position": 5,
        "commit_id": "03e5f3ecb34403c5e873a5bb138c9a9ba40a9026",
        "original_commit_id": "03e5f3ecb34403c5e873a5bb138c9a9ba40a9026",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@Yiin just class name",
        "created_at": "2019-02-04T10:54:53Z",
        "updated_at": "2019-02-04T10:54:53Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/557#discussion_r253423101",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/557",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/253423101"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/557#discussion_r253423101"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/557"
            }
        },
        "in_reply_to_id": 253369731
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/281730359",
        "pull_request_review_id": 234642125,
        "id": 281730359,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTczMDM1OQ==",
        "diff_hunk": "@@ -86,7 +86,14 @@ function sassLoader(content) {\n       // Since we specified options.sourceMap = path.join(process.cwd(), \"/sass.map\"); in normalizeOptions,\n       // we know that this path is relative to process.cwd(). This is how node-sass works.\n       // eslint-disable-next-line no-param-reassign\n-      result.map.sources[0] = path.relative(process.cwd(), resourcePath);\n+      let stdinIndex = result.map.sources.findIndex(\n+        (source) => source.indexOf('stdin') !== -1\n+      );\n+      stdinIndex = stdinIndex !== -1 ? stdinIndex : 0;\n+      result.map.sources[stdinIndex] = path.relative(\n+        process.cwd(),\n+        resourcePath\n+      );",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 12,
        "commit_id": "34f14b8e8e578703663424a6b4c24c66505b5276",
        "original_commit_id": "65943068e7b31ae589d16f751cf53000c8000053",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ok, thanks for investigation, maybe rewrite this like:\r\n```\r\nif (stdinIndex !== -1) {\r\n  result.map.sources[stdinIndex] = path.relative(\r\n        process.cwd(),\r\n        resourcePath\r\n      );\r\n}\r\n```\r\n\r\nThis allow to us protect code if stdin was excluded from sources in future",
        "created_at": "2019-05-07T17:00:38Z",
        "updated_at": "2019-05-07T17:36:15Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/681#discussion_r281730359",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/681",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/281730359"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/681#discussion_r281730359"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/681"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/281731153",
        "pull_request_review_id": 234643146,
        "id": 281731153,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTczMTE1Mw==",
        "diff_hunk": "@@ -86,7 +86,14 @@ function sassLoader(content) {\n       // Since we specified options.sourceMap = path.join(process.cwd(), \"/sass.map\"); in normalizeOptions,\n       // we know that this path is relative to process.cwd(). This is how node-sass works.\n       // eslint-disable-next-line no-param-reassign\n-      result.map.sources[0] = path.relative(process.cwd(), resourcePath);\n+      let stdinIndex = result.map.sources.findIndex(\n+        (source) => source.indexOf('stdin') !== -1\n+      );\n+      stdinIndex = stdinIndex !== -1 ? stdinIndex : 0;\n+      result.map.sources[stdinIndex] = path.relative(\n+        process.cwd(),\n+        resourcePath\n+      );",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 12,
        "commit_id": "34f14b8e8e578703663424a6b4c24c66505b5276",
        "original_commit_id": "65943068e7b31ae589d16f751cf53000c8000053",
        "user": {
            "login": "FractalBoy",
            "id": 2024233,
            "node_id": "MDQ6VXNlcjIwMjQyMzM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2024233?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FractalBoy",
            "html_url": "https://github.com/FractalBoy",
            "followers_url": "https://api.github.com/users/FractalBoy/followers",
            "following_url": "https://api.github.com/users/FractalBoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/FractalBoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FractalBoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FractalBoy/subscriptions",
            "organizations_url": "https://api.github.com/users/FractalBoy/orgs",
            "repos_url": "https://api.github.com/users/FractalBoy/repos",
            "events_url": "https://api.github.com/users/FractalBoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FractalBoy/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm not sure I understand the point - the way I've written it, `stdinIndex` will never be -1. If it is, it will be 0.",
        "created_at": "2019-05-07T17:02:35Z",
        "updated_at": "2019-05-07T17:36:15Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/681#discussion_r281731153",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/681",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/281731153"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/681#discussion_r281731153"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/681"
            }
        },
        "in_reply_to_id": 281730359
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/281736764",
        "pull_request_review_id": 234650310,
        "id": 281736764,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTczNjc2NA==",
        "diff_hunk": "@@ -86,7 +86,14 @@ function sassLoader(content) {\n       // Since we specified options.sourceMap = path.join(process.cwd(), \"/sass.map\"); in normalizeOptions,\n       // we know that this path is relative to process.cwd(). This is how node-sass works.\n       // eslint-disable-next-line no-param-reassign\n-      result.map.sources[0] = path.relative(process.cwd(), resourcePath);\n+      let stdinIndex = result.map.sources.findIndex(\n+        (source) => source.indexOf('stdin') !== -1\n+      );\n+      stdinIndex = stdinIndex !== -1 ? stdinIndex : 0;\n+      result.map.sources[stdinIndex] = path.relative(\n+        process.cwd(),\n+        resourcePath\n+      );",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 12,
        "commit_id": "34f14b8e8e578703663424a6b4c24c66505b5276",
        "original_commit_id": "65943068e7b31ae589d16f751cf53000c8000053",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@FractalBoy I am afraid what in future `node-sass`/`sass` can remove `stdin` from `result.map.sources` so better check `stdin` exists in `sources` and then modify",
        "created_at": "2019-05-07T17:16:58Z",
        "updated_at": "2019-05-07T17:36:15Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/681#discussion_r281736764",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/681",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/281736764"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/681#discussion_r281736764"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/681"
            }
        },
        "in_reply_to_id": 281730359
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/281737341",
        "pull_request_review_id": 234651021,
        "id": 281737341,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTczNzM0MQ==",
        "diff_hunk": "@@ -86,7 +86,14 @@ function sassLoader(content) {\n       // Since we specified options.sourceMap = path.join(process.cwd(), \"/sass.map\"); in normalizeOptions,\n       // we know that this path is relative to process.cwd(). This is how node-sass works.\n       // eslint-disable-next-line no-param-reassign\n-      result.map.sources[0] = path.relative(process.cwd(), resourcePath);\n+      let stdinIndex = result.map.sources.findIndex(\n+        (source) => source.indexOf('stdin') !== -1\n+      );\n+      stdinIndex = stdinIndex !== -1 ? stdinIndex : 0;\n+      result.map.sources[stdinIndex] = path.relative(\n+        process.cwd(),\n+        resourcePath\n+      );",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 12,
        "commit_id": "34f14b8e8e578703663424a6b4c24c66505b5276",
        "original_commit_id": "65943068e7b31ae589d16f751cf53000c8000053",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Now - If `stdin` not exists in `sources` we break source map, because on `0` index will be contain path to source",
        "created_at": "2019-05-07T17:18:16Z",
        "updated_at": "2019-05-07T17:36:15Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/681#discussion_r281737341",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/681",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/281737341"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/681#discussion_r281737341"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/681"
            }
        },
        "in_reply_to_id": 281730359
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/281740445",
        "pull_request_review_id": 234654928,
        "id": 281740445,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTc0MDQ0NQ==",
        "diff_hunk": "@@ -86,7 +86,14 @@ function sassLoader(content) {\n       // Since we specified options.sourceMap = path.join(process.cwd(), \"/sass.map\"); in normalizeOptions,\n       // we know that this path is relative to process.cwd(). This is how node-sass works.\n       // eslint-disable-next-line no-param-reassign\n-      result.map.sources[0] = path.relative(process.cwd(), resourcePath);\n+      let stdinIndex = result.map.sources.findIndex(\n+        (source) => source.indexOf('stdin') !== -1\n+      );\n+      stdinIndex = stdinIndex !== -1 ? stdinIndex : 0;\n+      result.map.sources[stdinIndex] = path.relative(\n+        process.cwd(),\n+        resourcePath\n+      );",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 12,
        "commit_id": "34f14b8e8e578703663424a6b4c24c66505b5276",
        "original_commit_id": "65943068e7b31ae589d16f751cf53000c8000053",
        "user": {
            "login": "FractalBoy",
            "id": 2024233,
            "node_id": "MDQ6VXNlcjIwMjQyMzM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2024233?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FractalBoy",
            "html_url": "https://github.com/FractalBoy",
            "followers_url": "https://api.github.com/users/FractalBoy/followers",
            "following_url": "https://api.github.com/users/FractalBoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/FractalBoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FractalBoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FractalBoy/subscriptions",
            "organizations_url": "https://api.github.com/users/FractalBoy/orgs",
            "repos_url": "https://api.github.com/users/FractalBoy/repos",
            "events_url": "https://api.github.com/users/FractalBoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FractalBoy/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I see. I'll make the change.",
        "created_at": "2019-05-07T17:26:08Z",
        "updated_at": "2019-05-07T17:36:15Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/681#discussion_r281740445",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/681",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/281740445"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/681#discussion_r281740445"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/681"
            }
        },
        "in_reply_to_id": 281730359
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/281749473",
        "pull_request_review_id": 234665999,
        "id": 281749473,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTc0OTQ3Mw==",
        "diff_hunk": "@@ -86,7 +86,14 @@ function sassLoader(content) {\n       // Since we specified options.sourceMap = path.join(process.cwd(), \"/sass.map\"); in normalizeOptions,\n       // we know that this path is relative to process.cwd(). This is how node-sass works.\n       // eslint-disable-next-line no-param-reassign\n-      result.map.sources[0] = path.relative(process.cwd(), resourcePath);\n+      let stdinIndex = result.map.sources.findIndex(\n+        (source) => source.indexOf('stdin') !== -1\n+      );\n+      stdinIndex = stdinIndex !== -1 ? stdinIndex : 0;\n+      result.map.sources[stdinIndex] = path.relative(\n+        process.cwd(),\n+        resourcePath\n+      );",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 12,
        "commit_id": "34f14b8e8e578703663424a6b4c24c66505b5276",
        "original_commit_id": "65943068e7b31ae589d16f751cf53000c8000053",
        "user": {
            "login": "FractalBoy",
            "id": 2024233,
            "node_id": "MDQ6VXNlcjIwMjQyMzM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2024233?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FractalBoy",
            "html_url": "https://github.com/FractalBoy",
            "followers_url": "https://api.github.com/users/FractalBoy/followers",
            "following_url": "https://api.github.com/users/FractalBoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/FractalBoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FractalBoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FractalBoy/subscriptions",
            "organizations_url": "https://api.github.com/users/FractalBoy/orgs",
            "repos_url": "https://api.github.com/users/FractalBoy/repos",
            "events_url": "https://api.github.com/users/FractalBoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FractalBoy/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe it would actually be better to remove stdin if it exists and then always add the path?\r\n```\r\n      const stdinIndex = result.map.sources.findIndex(\r\n        (source) => source.indexOf('stdin') !== -1\r\n      );\r\n\r\n      const relativeResourcePath = path.relative(\r\n        process.cwd(),\r\n        resourcePath\r\n      );\r\n\r\n      if (stdinIndex !== -1) {\r\n        result.map.sources[stdinIndex] = relativeResourcePath;\r\n      } else {\r\n        result.map.sources.push(relativeResourcePath);\r\n      }\r\n```",
        "created_at": "2019-05-07T17:47:27Z",
        "updated_at": "2019-05-07T17:47:27Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/681#discussion_r281749473",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/681",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/281749473"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/681#discussion_r281749473"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/681"
            }
        },
        "in_reply_to_id": 281730359
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/281751303",
        "pull_request_review_id": 234668326,
        "id": 281751303,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTc1MTMwMw==",
        "diff_hunk": "@@ -86,7 +86,14 @@ function sassLoader(content) {\n       // Since we specified options.sourceMap = path.join(process.cwd(), \"/sass.map\"); in normalizeOptions,\n       // we know that this path is relative to process.cwd(). This is how node-sass works.\n       // eslint-disable-next-line no-param-reassign\n-      result.map.sources[0] = path.relative(process.cwd(), resourcePath);\n+      let stdinIndex = result.map.sources.findIndex(\n+        (source) => source.indexOf('stdin') !== -1\n+      );\n+      stdinIndex = stdinIndex !== -1 ? stdinIndex : 0;\n+      result.map.sources[stdinIndex] = path.relative(\n+        process.cwd(),\n+        resourcePath\n+      );",
        "path": "lib/loader.js",
        "position": null,
        "original_position": 12,
        "commit_id": "34f14b8e8e578703663424a6b4c24c66505b5276",
        "original_commit_id": "65943068e7b31ae589d16f751cf53000c8000053",
        "user": {
            "login": "FractalBoy",
            "id": 2024233,
            "node_id": "MDQ6VXNlcjIwMjQyMzM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2024233?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FractalBoy",
            "html_url": "https://github.com/FractalBoy",
            "followers_url": "https://api.github.com/users/FractalBoy/followers",
            "following_url": "https://api.github.com/users/FractalBoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/FractalBoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FractalBoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FractalBoy/subscriptions",
            "organizations_url": "https://api.github.com/users/FractalBoy/orgs",
            "repos_url": "https://api.github.com/users/FractalBoy/repos",
            "events_url": "https://api.github.com/users/FractalBoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FractalBoy/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Actually, nevermind, that would probably screw up the source maps since it wouldn't line up correctly.",
        "created_at": "2019-05-07T17:52:02Z",
        "updated_at": "2019-05-07T17:52:02Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/681#discussion_r281751303",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/681",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/281751303"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/681#discussion_r281751303"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/681"
            }
        },
        "in_reply_to_id": 281730359
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/283277775",
        "pull_request_review_id": 236589817,
        "id": 283277775,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzI3Nzc3NQ==",
        "diff_hunk": "@@ -85,7 +85,17 @@ function normalizeOptions(loaderContext, content, webpackImporter) {\n   options.importer = options.importer\n     ? proxyCustomImporters(options.importer, resourcePath)\n     : [];\n-  options.importer.push(webpackImporter);\n+\n+  if (options.resolver === false) {\n+    // disable webpack resolved in favor built-in node-sass/sass resolver\n+  } else if (typeof options.resolver === 'function') {\n+    options.importer = options.importer.concat(\n+      proxyCustomImporters(options.resolver, resourcePath)\n+    );",
        "path": "lib/normalizeOptions.js",
        "position": 11,
        "original_position": 11,
        "commit_id": "6b27d26c3717abfe451c5bdc75bc123b5aff52c5",
        "original_commit_id": "6bcb70d1da480b0e0658f2672c4a2422540c61a3",
        "user": {
            "login": "evilebottnawi",
            "id": 4567934,
            "node_id": "MDQ6VXNlcjQ1Njc5MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4567934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evilebottnawi",
            "html_url": "https://github.com/evilebottnawi",
            "followers_url": "https://api.github.com/users/evilebottnawi/followers",
            "following_url": "https://api.github.com/users/evilebottnawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/evilebottnawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evilebottnawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evilebottnawi/subscriptions",
            "organizations_url": "https://api.github.com/users/evilebottnawi/orgs",
            "repos_url": "https://api.github.com/users/evilebottnawi/repos",
            "events_url": "https://api.github.com/users/evilebottnawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evilebottnawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think better don't add `webpackImporter` here. We can export our importer and developers decide whether he needs him or not",
        "created_at": "2019-05-13T10:17:40Z",
        "updated_at": "2019-05-14T00:23:39Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/682#discussion_r283277775",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/682",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/283277775"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/682#discussion_r283277775"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/682"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/283442606",
        "pull_request_review_id": 236801307,
        "id": 283442606,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzQ0MjYwNg==",
        "diff_hunk": "@@ -85,7 +85,17 @@ function normalizeOptions(loaderContext, content, webpackImporter) {\n   options.importer = options.importer\n     ? proxyCustomImporters(options.importer, resourcePath)\n     : [];\n-  options.importer.push(webpackImporter);\n+\n+  if (options.resolver === false) {\n+    // disable webpack resolved in favor built-in node-sass/sass resolver\n+  } else if (typeof options.resolver === 'function') {\n+    options.importer = options.importer.concat(\n+      proxyCustomImporters(options.resolver, resourcePath)\n+    );",
        "path": "lib/normalizeOptions.js",
        "position": 11,
        "original_position": 11,
        "commit_id": "6b27d26c3717abfe451c5bdc75bc123b5aff52c5",
        "original_commit_id": "6bcb70d1da480b0e0658f2672c4a2422540c61a3",
        "user": {
            "login": "hjhart",
            "id": 547981,
            "node_id": "MDQ6VXNlcjU0Nzk4MQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/547981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hjhart",
            "html_url": "https://github.com/hjhart",
            "followers_url": "https://api.github.com/users/hjhart/followers",
            "following_url": "https://api.github.com/users/hjhart/following{/other_user}",
            "gists_url": "https://api.github.com/users/hjhart/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hjhart/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hjhart/subscriptions",
            "organizations_url": "https://api.github.com/users/hjhart/orgs",
            "repos_url": "https://api.github.com/users/hjhart/repos",
            "events_url": "https://api.github.com/users/hjhart/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hjhart/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Okay, removed webpackImporter by default.",
        "created_at": "2019-05-13T16:59:16Z",
        "updated_at": "2019-05-14T00:23:39Z",
        "html_url": "https://github.com/webpack-contrib/sass-loader/pull/682#discussion_r283442606",
        "pull_request_url": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/682",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/comments/283442606"
            },
            "html": {
                "href": "https://github.com/webpack-contrib/sass-loader/pull/682#discussion_r283442606"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/webpack-contrib/sass-loader/pulls/682"
            }
        },
        "in_reply_to_id": 283277775
    }
]