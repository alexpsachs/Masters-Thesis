{
    "zackbloom": "Good point.  Each way of determining connectedness has its pluses and minuses, no one way is perfect.  Offline ships with two methods.  One makes a request for a tiny image hosted on my cloudfront account for the benevolence of all, the other makes an XHR request against the current domain, hoping to get back any sort of response (even a 404).\n\nYou can change the url of the image to be one you control, if you like:\n\n``` javascript\nOffline.options = {checks: {image: {url: 'my-image.gif'}}};\n```\n\nLoading an image was chosen (rather than a script file), because it limits the potential damage if a hostile party were to be in control of it.\n\nYou can also switch to the XHR method:\n\n``` javascript\nOffline.options = {checks: {active: 'xhr'}}\n```\n\nThe XHR method is not enabled by default because of a concern that some sites do a significant amount of processing to build their 404 page, so it's not something we want to send unnecessarily.  It's also possible that the page would respond with a redirect to a different domain, creating a CORS problem.  If you have control of the domain and can create an endpoint which just responds with a quick 204, that's the perfect solution.  You can set the endpoint in settings as well:\n\n``` javascript\nOffline.options = {checks: {xhr: {url: '/health-check'}}};\n```\n\nTomorrow I'll move most of this over to the README proper.\n. You'll also need to tell it to use the xhr check:\n\n``` javascript\nOffline.options = {\n  checks: {\n    xhr: {\n      url: '/health-check'\n    },\n    active: 'xhr'\n  }\n};\n```\n. @squallstar Thanks for letting me know, fixed in v0.4.3.\n. @sifarat \n\n``` javascript\n<script type=\"text/javascript\">\n    Offline.options = {\n        checks: {\n            image: {url: '../img/test.gif'},\n            active: 'image'\n        },\n\n        requests: false\n    }\n  </script>     \n```\n. Just out of curiosity, does it work when `requests` is not disabled?\n. Ah, great!\n. Sure, perhaps we should include a dummy file with the project.\n. This is actually tricky though, as the request in js is relative to the location of the web page, not of the script itself.  We could parse the script tag and try to make a request against the same directory though.  This is not so easy to determine if the script has been concatenated with others.  Maybe we should just re-request the first script on the page, and trust that we'll get a 304 back.\n. Makes sense to me, provided the web server in question supports HEAD nicely.\n. @adamschwartz I'm concerned that most web servers will not be able to handle a HEAD request any more efficiently than a GET request.  Making the question: What is more efficient, rendering the current page, or the 404 page?\n. Sure\n\n``` javascript\nOffline.options = {\n  requests: false\n}\n```\n. You can include it, just add an extra script tag for `js/snake.js`.  The second method you have is correct, how script tags with both src attributes and include js work varies from browser to browser, so it's best to avoid.  I'm going to make a test page with the snake game enabled just so people can get a look at it :).\n. I just fixed a bug with how snake was being initialized, so you should grab a new copy of snake.js.\n. Snake demo page: http://github.hubspot.com/offline/test/snake.html\n. Really? How odd.  Thanks for letting us know.\n. I just tested it on FF 24, looks fine to me.  Was there something specific which didn't work?\n. FYI, firefox doesn't provide an offline event, so we will only detect the browser going offline when a request fails.  If the page doesn't make any requests, it won't be detected.\n. That's not really going to help unfortunately, the init which happens in `Offline.init` will bind XHR, but not much else.\n. There wasn't much to do here.  PhoneGap fortunately uses the same events introduced by HTML5, so we already had compatibility.  I moved where they were bound to ensure compatibility, but I don't expect it to have changed much.  Is there anything specific you envisioned us doing with `connection.type`.\n. Did you actually run into this in practice?  Looking at the code, it looks to me that `i` should only be decremented when the handler matches.\n. Ah, I see what you were saying.  Fixed in v0.4.4.\n. I don't think that sync ajax is ever a good idea, it blocks the UI.  It is possible for the connection issue to result in very long extended hanging requests, not a situation we want to put the UI in. I think it might be a better idea to handle the failure of trying to do those actions gracefully, along with disabling them when the lack of connection has been confirmed.\n. Hmmm, interesting.  It's pretty complex to do though, as we'd have to reopen the socket after the connection is restored, and many servers are set up to do something when a connection is initiated, so it is not going to work perfectly out-of-the-box in every situation.\n. Is it a wrong assumption to assume a client is connecting when you get a client opening a connection?\n\nI'm happy to review a PR, if you'd like to make one @nilskp \n. Fair enough, sounds good to me.\n. I'm a little confused, the purpose of the check near line 166 is to force older browsers which don't support XMLHttpRequest2 to use `onreadystatechange`: https://github.com/HubSpot/offline/blob/master/js/offline.js#L171\n\nMeaning, it was checking specifically that it was undefined on IE9, and it was correctly avoiding a code path which wouldn't work.  Before making your change, what was happening in IE9.  Was it just not showing up?\n\nThe readyState is correctly 1 before sending the XHR (it's set by the browser, not jQuery).  It will then later be reset to 0 if there is a network issue.\n. IE9 does not support XMLHttpRequest2, but I believe it does support onload and onerror events on the `XDomainRequest` object, which is used for cross-origin requests.  In any case though, the onreadystatechange block should work.  `readyState` of 1 generally means that `open` was called, but `send` was not on the XMLHttpRequest object.\n. Please reopen if you still have this issue.\n. `active` needs to be inside the `checks` section.\n\nAlso, checking google.com is probably not going to work, as it's going to run into the CORS protections built into the browser.  You need to be checking a url on the same host and port as the page.\n. We don't actually render any strings in the js, you can override them in css alone.  My suggestion would be to attach a class to the body based on the language you would like to render, and override these css rules for each language: https://github.com/HubSpot/offline/blob/master/sass/_offline-theme-base.sass#L31.  If you'd like to PR those css files, we'd be happy to find a way to distribute them.\n. What localized formats do you need?\n. Are you able to include CSS and JS files?\n. Take a peek at issue #16 \n. Yea, it was originally not included because cache breaking in different methods might differ.  Nevertheless, jQuery does it using underscore, so it's a good idea.\n. @adamschwartz Thanks, I made the data attribute move, so as far as I can tell this works now.  There is one issue though, the width is off with the new copy, and I imagine it will be off from language to language:\n![screen shot 2013-11-22 at 2 39 29 pm](https://f.cloud.github.com/assets/55347/1603668/10f64a86-53ae-11e3-9e3d-3c36b95569b6.png)\n. Done, this is in the 0.6.0 release.\n. I just tested it in a simple angular app and I was not able to reproduce it.  Please let us know if you learn more.\n. I appreciate it, we want it to work for everybody.\n. Offline detects when your user doesn't have an internet connection, not when your server is down.  [Messenger](http://github.hubspot.com/messenger/) can help.\n. Offline doesn't care if your server is up or not, only if the user has an internet connection.  Wrapping your requests with messenger, as I suggested above, will allow you to easily show traditional error messages.\n. What browser?\n. @vinay-kotian Please be sure you're including both a theme and a language file: https://github.com/HubSpot/offline/tree/master/themes\n. Sure, we can check the readyState.\n. This is fixed by 09fd5421ecb2d960c7a54fe19dd6b2141e631a62\n\nThere still will be issues though, as offline depends on window.Offline being setup.  If you want to send a PR moving the files to UMD, I'd happily merge it.\n. I didn't know they looked at every endpoint, interesting.  From the docs:\n\nOffline ships with two methods for checking the connection.  One makes a request for a tiny image hosted on a\ncloudfront account for the benevolence of all, the other makes an XHR request against the current domain,\nhoping to get back any sort of response (even a 404).\n\nYou can change the url of the image to be one you control, if you like:\n\n``` javascript\nOffline.options = {checks: {image: {url: 'my-image.gif'}}};\n```\n\nLoading an image was chosen (rather than a script file), because it limits the potential damage if a\nhostile party were to be in control of it.\n\nYou can also switch to the XHR method:\n\n``` javascript\nOffline.options = {checks: {active: 'xhr'}}\n```\n\nThe XHR method is not enabled by default because of a concern that some sites do a significant amount of\nprocessing to build their 404 page, so it's not something we want to send unnecessarily.  It's also\npossible that the page would respond with a redirect to a different domain, creating a CORS problem.\nIf you have control of the domain and can create an endpoint which just responds with a quick 204,\nthat's the perfect solution.  You can set the endpoint in settings as well:\n\n``` javascript\nOffline.options = {checks: {xhr: {url: '/health-check'}}};\n```\n. This should be fixed in 0.4.6, please reopen if it persists.\n. Should be fixed in 0.4.6, thanks @underbyte \n. That was, in fact, the case; just released v0.4.5.  Thanks @beardfu.\n. I ended up shifting it to only initialize on 'complete', hopefully that will have the same effect.  Thanks @matthargett and @cjk, sorry it took us so long to make the change.\n\n55c8c84\n. Thanks for letting us know.  Is there some easy way we can see this happening?\n. Yep, I was also interested in fixing this.  I was actually able to fix it just in CSS, which is cool: 8dffa1c\n. Just FYI, this change was made in offline itself (https://github.com/HubSpot/offline/commit/8dffa1c), the message now shows for a full five seconds, you don't need to manually change anything if you upgrade to [0.4.7](https://github.com/HubSpot/offline/releases/tag/v0.4.7).\n. We intentionally only hang onto the last request with a given `(url, method)`, as the assumption is that a GET against a given endpoint will always return the same thing, and if you're making multiple POSTs, you only really want the last one to count.  I suppose there is a use case for all of the POSTs being replayed (particularly if the application uses PUT correctly).\n. localhost is going to resolve whether you have an internet connection or not.  It should work when it's actually hosted over the network.\n. Everything is modular, if you include offline.js and requests.js without ui.js, you won't get a UI.  If you take a peek at ui.js you should be able to get an idea of what events the UI listens to. Files: https://github.com/HubSpot/offline/tree/master/js\n. We don't actually support IE6 (IE8+ only), so that itself is not an issue.  Trying to load the file locally (and therefore getting the file:// protocol) is a good reason to use the method you have here.\n. This is no longer a factor, as we've changed how we do the actual connection testing.  Thanks for your help @JoeWagner.\n. Interesting.  Any idea which loop/array is causing the problem @leonzinger?\n. `querySelector` does exist in IE 8 (http://caniuse.com/queryselector), so this must be an issue with el not being what it should be.\n. I would always recommend including the appropriate meta tag to keep the browser out of Quirks mode.  It's designed to keep IE compatible with old websites, not for use with ones under active development.\n. Thanks!\n. I don't believe Safari has support for the offline events, meaning Offline will only show up when you try to make an XHR request and fail.  No request, no offline unfortunately. \n. Done in https://github.com/HubSpot/offline/commit/b30eccbb46078f28300224fb4591b4b9eb027a62. Based on our testing it seemed that the access denied response would be considered 'up'. Do you happen to know which version of offline you are using?\n. Just restored the file until we can get to the bottom of why the library is not responding in the way we expected. \n. Should be all set now.\n. FYI: This file is being removed at the end of March.  Please update to offline 0.7.0+ if you haven't already.\n. v0.7.0 now uses your favicon as the test image, assuming you have a /favicon.ico, you should see no problems.\n. Fixed, thanks.\n. Thanks for reporting @sgringwe, we're looking into the issues now. \n. There's a file there, are you still seeing 404s?\n\n> On Feb 25, 2014, at 3:02 PM, Agust\u00edn Maga\u00f1a notifications@github.com wrote:\n> \n> Could you restor the last depricated cloudfront hosted file (http://dqakt69vkj09v.cloudfront.net/are-we-online.gif) to avoid 404 errors to preserve previous version usage of the library?\n> \n> I know you recommend to update to the last version but the presence of the file helps a lot in the transition.\n> \n> Thanks.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Should be the exact same file now.\n\n## \n\nZack Bloom\n\nOn Tue, Feb 25, 2014 at 4:24 PM, Agust\u00edn Maga\u00f1a notifications@github.comwrote:\n\n> Sorry, I checked again and effectively I'm getting a 200. Nevertheless,\n> Offline.state is still 'down' when in fact I'm online. I'm using 0.4.7\n> version.\n> \n> This issue didn't exist 6 days ago.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/HubSpot/offline/issues/52#issuecomment-36059794\n> .\n. Seems to have been a caching issue, looks good now\n. Using the favicon is the solution we've been looking for.  This is now the default as of 0.7.0, thanks @Sjors!\n. If you update to the latest version, we now actually check the /favicon.ico, which most sites should have.\n. The short answer is that should work.  Are you sure you are setting `options` early enough in the loading process (e.g. it's not in a callback or anything).\n. I think I see the problem then.  You're waiting until `domReady` to set the options.  If an XHR request fails before `domReady` however, offline will run the check before you have a chance to set the options.  Try:\n\n``` html\n<html>\n<style>stuff</style>\n<script>custom library</script>\n<script>offline.min.js</script>\n<script>\nOffline.options = { ... }\nrequire([\"x\",\"y\",\"domReady!\"],function(x,y){\n     Offline.check();\n})\n</script>\n```\n. Hey @craigshoemaker.  I like the idea, but I'm not sure that having a UI for it is really required, and having to add and remove the script to get the functionality means that I'm afraid the vast majority of developers will never even realize that it's in the repo or what it's for.  This is my alternative: https://github.com/HubSpot/offline/blob/zbloom-simulator/coffee/offline.simulator.coffee\n\nIt doesn't allow you to toggle, but it does add the data attribute support, the ability to use a local storage var, and it adds two new checks `up` and `down`, which will always report being up and down respectively. \n. If you publish the UI in a separate repo, I'd be happy to link to it in the docs.\n. Thanks @craigshoemaker.  Two questions:\n- I don't actually see the checkbox on that page, am I missing it?\n- What is the form in the demo for?\n\nYou might also want to link to the github page for your project from the landing page.\n. Are you testing against a locally hosted page (hosted on your machine)?\n. Do you see it if you disconnect your internet on the demo page: http://github.hubspot.com/offline/docs/welcome/\n\nThat page uses the offline.min.js file in master.\n. Just to confirm @andygup, even when you make an XHR request and that request fails (while you're offline), you still don't see it?\n. I just confirmed that `Offline.state` has the correct values.  If you notice anything which seems to be more specifically wrong, please let us know.\n. I can double check this, but I believe that not all browsers support the\noffline events.  On those browsers, you have to try to make an AJAX request\n(which fails), before we know you're offline.\n\n## \n\nZack Bloom\n\nOn Tue, Apr 8, 2014 at 4:35 PM, Chris Ross notifications@github.com wrote:\n\n> Currently in Firefox (version 28 also tried in version 27.01) the offline\n> status doesn't update to show when the browser goes offline. You can see\n> this in your current implementation while running Firefox (\n> http://github.hubspot.com/offline/docs/welcome/), it does not update\n> statuses on the UI when you're offline. However, this behaves correctly in\n> Chrome and IE.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/HubSpot/offline/issues/65\n> .\n. If it supports the events, we certainly should be picking them up, I'll look into it further.\n. I just confirmed that the offline event does not fire in firefox when the system's internet connection is disconnected.  I believe that event only fires when the user explicitly puts their browser in 'offline mode'.  With that in mind, Offline is only going to notice the loss of connection when you try to make an XHR request and it fails, or if you explicitly call `Offline.check()`.\n\n@blackblood Do you see the issue on our [landing page](http://github.hubspot.com/offline/docs/welcome/)?\n. @eladxxx FYI, each component is modular, so you can just include the contents of the `offline.coffee` file without the reconnection, request retrying, ui or game.\n. Muchos gracis @macool\n. Do you happen to have a link to that page?  It shouldn't be checking after successful requests.\n. Thanks for writing this up, but putting it at the maximum allowed value prevents anyone from ever being able to override it, which, is not very nice to other people making weird and wonderful things.  If you'd like to choose a value greater than bootstrap (2000?), I'd be happy to merge.\n. Closed by 043fe58\n. Sorry for the delay in responding to this.  Firefox does not fire the `offline` and `online` events in the way that other browsers do.  You can test this by running this Fiddle with your console open and disconnecting your internet connection: http://jsfiddle.net/L507acnc/\n\nIn Firefox, we get no events, in Chrome, we get the events we need.  This means the only way of detecting actual network status in FF is for an actual HTTP request to fail.  On the Offline homepage, there are no requests, so this never happens.  You can manually run a check though by executing `Offline.check()` in the console, and you will see it correctly update.\n\nIf offline detection is very important to you, but you never make any requests (an odd combo), you could run `Offline.check` periodically:\n\n``` javascript\nsetInterval(function(){\n  Offline.check();\n}, 5000);\n```\n. Re the IE11 issue, please open another issue if it's reproducible.  Status 0 often means the browser couldn't make a connection for an internal reason, it's possible your network connection was not truly 'up' yet.\n. Sebastian, have you tried the fiddle I included in my response? If you see a technical difference between my example in that fiddle and what the MDN article instructs, please enumerate it. Does the fiddle work for you?\n. It does not work for me on Firefox 36 / OSX.  If the fiddle doesn't work for you, I would love to hear what you see as the difference between what we're doing in the fiddle, and what Mozilla is doing in their example.  In any case, neither seems to work on OSX, making it difficult for me to examine.\n. Thanks for working with me on this.  If you're interested, you can see it not working for me: https://vimeo.com/122614412.  It may take the video a bit to upload.\n\nI am using OS X 10.10 and Firefox 36.0.1.  Without being able to see the mozilla page work, it's difficult for me to understand what is going on.\n. Ah, I understand what you're saying.  This was never the intended functionality of Offline.  The biggest reason for this is A. It is unclear how many users actually know how to do this, as so few modern websites support it and B. Offline's method for retrying requests is probably too simplistic for an app which is intended to be used offline for an extended period.\n. There isn't an explicit build.  As Adam said though, you can just include\nwhichever files you are interested in the functionality of, and all the\nrest will work.\n\n## \n\nZack Bloom\n\nOn Tue, Jul 22, 2014 at 2:37 PM, Adam Schwartz notifications@github.com\nwrote:\n\n> In that event, I believe you can include only\n> https://github.com/HubSpot/offline/blob/master/coffee/offline.coffee and\n> that will do the trick. @zackbloom https://github.com/zackbloom did we\n> ever create a UI-less build for this?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/HubSpot/offline/issues/88#issuecomment-49781757.\n. You are very much encouraged to monitor the failure of requests you make, and inform the user accordingly.  In fact, we have a library which makes it a bit easier: http://github.hubspot.com/messenger/\n\nOffline is meant more for helping your user deal with losing their general internet connection.\n. It's now published as `offline-js`.  Thanks for the reminder!\n. You can try calling `Offline.markUp()`.\n. Hi @mycaule, Thanks! If you wouldn't mind making the changes to the .sass file instead, I can merge this straightaway.\n. Thanks for doing this, but we actually need it in the relevant .sass file.\n. Is there any way you could make a jsfiddle reproducing the issue? It would be much appreciated.\n. I believe this is common if the object changed from the time you logged it\nto when you opened it in the expanded view.  Are you logging the initial\nmessage before the request comes back?\n\nOn Sat, Jan 17, 2015 at 4:04 AM, heartdev notifications@github.com wrote:\n\n> Note the \"status\" in the in-line object (0), and the \"status\" in the\n> expanded object (200). Does anyone have any ideas? Thx in advance.\n> \n> [image: image]\n> https://cloud.githubusercontent.com/assets/4590504/5788345/a8f3b9a0-9de4-11e4-8f9e-e27198d3b313.png\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/HubSpot/offline/issues/121.\n. Your original error handler should run, as it would if the request errored immediately.\n. Thanks @brettjonesdev \n. `interceptRequests` specifically disables trying to remake requests when the connection is reestablished.  You also must switch to a different check style (other than `xhr`) to disable all XHR checking.  For example:\n\n``` javascript\nOffline.options.checks.active = 'image'\n```\n. I really don't think this is in-scope.  If you really want to you can certainly try triggering the `'down'` event:\n\n``` javascript\nOffline.trigger('down')\n```\n\nThat's really what the UI is listening to: https://github.com/HubSpot/offline/blob/master/coffee/ui.coffee#L79\n. In general, making requests with `async: false` is not really ever appropriate.  `async: false` blocks all javascript execution in the browser while the request is ongoing, making something like Offline impossible.  I can't speak to what will or won't work in Offline if you do this.\n. In general, every service which uses the underlying `XMLHttpRequest` (the only way to make AJAX requests), should be supported.  The one exception to this is if the service-in-question is brought into the page before Offline, and makes a references to `XMLHttpRequest` before we get a chance to alias it.  Any other failure should be considered a bug.\n. The `on` function is implemented in Offline, it is unrelated to the browser's API.  `onload` is bad because you can only bind one function that way, this is obviously not the case with our implementation.\n. Is binding to the `confirmed-up` event not an option? https://github.com/HubSpot/offline#properties\n. It seems like you could bind to both `confirmed-up` and `confirmed-down`, and then remove the bindings once one of the two is called.  How would that be different than a promise?\n. I'm thinking something along the lines of:\n\n``` javascript\nvar initialCheck = function(cb){\n  var upFunc = function(){\n    cb(true);\n    unbind();\n  }\n  var downFunc = function(){\n    cb(false);\n    unbind();\n  }\n  var unbind = function(){\n    Offline.off('confirmed-up', upFunc);\n    Offline.off('confirmed-down', downFunc);\n  }\n\n  Offline.on('confirmed-up', upFunc);\n  Offline.on('confirmed-down', downFunc);\n\n  Offline.check();\n}\n```\n. These are the files Eager includes: https://github.com/HubSpot/offline/blob/master/install.json#L5-L26\n\nPerhaps you're missing a theme or language file?\n. You could also write out the CSS you need using JavaScript.  For example:\n\n``` javascript\nvar style = document.createElement('style');\nstyle.innerHTML = \".offline-ui.offline-ui-up .offline-ui-content:before { content: '\"+gettext('Connected')+\"'; }\"\ndocument.head.appendChild(style);\n```\n\nUltimately the style block you construct would need to include all of these translations: https://github.com/HubSpot/offline/blob/master/themes/offline-language-english.css\n. The easiest way would probably be to try to make a request to your service, and then also try to make a connection to a neutral site like example.com.  If both fail, it's the client's internet connection, if example.com succeeds it's you.\n. You can connect to a URL with permissive CORS settings (`Access-Control-Allow-Origin: *`) or download an image or script from any domain (not restricted by CORS).  Another option would be to host a blank file on Amazon S3+CloudFront for this purpose, where you can control the CORS headers.\n. Any status code (other than 12xxx which is specific to old-IE) means the user's internet connection is working, and they are 'online'.  Offline is not intended to handle cases when your service is down, as, as you mention, it varies too much from one backend to another.  \n. I understand what you're saying, but philosophically, I think it's probably a better idea to handle your service failing by handling the failure case of the individual requests you are making.  Take a look at [Messenger](http://github.hubspot.com/messenger/docs/welcome/) for an example of what that looks like.  In most systems, it's very possible for your service to be degraded, but not universally down, making something like this challenging to do globally.\n\nThere is also a use-case for putting your service in a 'maintenance mode', but similarly, it's just not something which this library tries to support.\n. Done, sorry for the delay!\n. This is intentional.  Offline is meant to show the user when they are offline, _not_ when the web service is offline.  To show an offline state when your server 502s, we recommend you bind to the AJAX error event of your requests.\n. In general this is the intended behavior.  Offline only forwards one request per URL.  There is an option though which will have it also consider the body of the request: https://github.com/HubSpot/offline/blob/master/coffee/requests.coffee#L42\n. Good point.  Each way of determining connectedness has its pluses and minuses, no one way is perfect.  Offline ships with two methods.  One makes a request for a tiny image hosted on my cloudfront account for the benevolence of all, the other makes an XHR request against the current domain, hoping to get back any sort of response (even a 404).\n\nYou can change the url of the image to be one you control, if you like:\n\n``` javascript\nOffline.options = {checks: {image: {url: 'my-image.gif'}}};\n```\n\nLoading an image was chosen (rather than a script file), because it limits the potential damage if a hostile party were to be in control of it.\n\nYou can also switch to the XHR method:\n\n``` javascript\nOffline.options = {checks: {active: 'xhr'}}\n```\n\nThe XHR method is not enabled by default because of a concern that some sites do a significant amount of processing to build their 404 page, so it's not something we want to send unnecessarily.  It's also possible that the page would respond with a redirect to a different domain, creating a CORS problem.  If you have control of the domain and can create an endpoint which just responds with a quick 204, that's the perfect solution.  You can set the endpoint in settings as well:\n\n``` javascript\nOffline.options = {checks: {xhr: {url: '/health-check'}}};\n```\n\nTomorrow I'll move most of this over to the README proper.\n. You'll also need to tell it to use the xhr check:\n\n``` javascript\nOffline.options = {\n  checks: {\n    xhr: {\n      url: '/health-check'\n    },\n    active: 'xhr'\n  }\n};\n```\n. @squallstar Thanks for letting me know, fixed in v0.4.3.\n. @sifarat \n\n``` javascript\n<script type=\"text/javascript\">\n    Offline.options = {\n        checks: {\n            image: {url: '../img/test.gif'},\n            active: 'image'\n        },\n\n        requests: false\n    }\n  </script>     \n```\n. Just out of curiosity, does it work when `requests` is not disabled?\n. Ah, great!\n. Sure, perhaps we should include a dummy file with the project.\n. This is actually tricky though, as the request in js is relative to the location of the web page, not of the script itself.  We could parse the script tag and try to make a request against the same directory though.  This is not so easy to determine if the script has been concatenated with others.  Maybe we should just re-request the first script on the page, and trust that we'll get a 304 back.\n. Makes sense to me, provided the web server in question supports HEAD nicely.\n. @adamschwartz I'm concerned that most web servers will not be able to handle a HEAD request any more efficiently than a GET request.  Making the question: What is more efficient, rendering the current page, or the 404 page?\n. Sure\n\n``` javascript\nOffline.options = {\n  requests: false\n}\n```\n. You can include it, just add an extra script tag for `js/snake.js`.  The second method you have is correct, how script tags with both src attributes and include js work varies from browser to browser, so it's best to avoid.  I'm going to make a test page with the snake game enabled just so people can get a look at it :).\n. I just fixed a bug with how snake was being initialized, so you should grab a new copy of snake.js.\n. Snake demo page: http://github.hubspot.com/offline/test/snake.html\n. Really? How odd.  Thanks for letting us know.\n. I just tested it on FF 24, looks fine to me.  Was there something specific which didn't work?\n. FYI, firefox doesn't provide an offline event, so we will only detect the browser going offline when a request fails.  If the page doesn't make any requests, it won't be detected.\n. That's not really going to help unfortunately, the init which happens in `Offline.init` will bind XHR, but not much else.\n. There wasn't much to do here.  PhoneGap fortunately uses the same events introduced by HTML5, so we already had compatibility.  I moved where they were bound to ensure compatibility, but I don't expect it to have changed much.  Is there anything specific you envisioned us doing with `connection.type`.\n. Did you actually run into this in practice?  Looking at the code, it looks to me that `i` should only be decremented when the handler matches.\n. Ah, I see what you were saying.  Fixed in v0.4.4.\n. I don't think that sync ajax is ever a good idea, it blocks the UI.  It is possible for the connection issue to result in very long extended hanging requests, not a situation we want to put the UI in. I think it might be a better idea to handle the failure of trying to do those actions gracefully, along with disabling them when the lack of connection has been confirmed.\n. Hmmm, interesting.  It's pretty complex to do though, as we'd have to reopen the socket after the connection is restored, and many servers are set up to do something when a connection is initiated, so it is not going to work perfectly out-of-the-box in every situation.\n. Is it a wrong assumption to assume a client is connecting when you get a client opening a connection?\n\nI'm happy to review a PR, if you'd like to make one @nilskp \n. Fair enough, sounds good to me.\n. I'm a little confused, the purpose of the check near line 166 is to force older browsers which don't support XMLHttpRequest2 to use `onreadystatechange`: https://github.com/HubSpot/offline/blob/master/js/offline.js#L171\n\nMeaning, it was checking specifically that it was undefined on IE9, and it was correctly avoiding a code path which wouldn't work.  Before making your change, what was happening in IE9.  Was it just not showing up?\n\nThe readyState is correctly 1 before sending the XHR (it's set by the browser, not jQuery).  It will then later be reset to 0 if there is a network issue.\n. IE9 does not support XMLHttpRequest2, but I believe it does support onload and onerror events on the `XDomainRequest` object, which is used for cross-origin requests.  In any case though, the onreadystatechange block should work.  `readyState` of 1 generally means that `open` was called, but `send` was not on the XMLHttpRequest object.\n. Please reopen if you still have this issue.\n. `active` needs to be inside the `checks` section.\n\nAlso, checking google.com is probably not going to work, as it's going to run into the CORS protections built into the browser.  You need to be checking a url on the same host and port as the page.\n. We don't actually render any strings in the js, you can override them in css alone.  My suggestion would be to attach a class to the body based on the language you would like to render, and override these css rules for each language: https://github.com/HubSpot/offline/blob/master/sass/_offline-theme-base.sass#L31.  If you'd like to PR those css files, we'd be happy to find a way to distribute them.\n. What localized formats do you need?\n. Are you able to include CSS and JS files?\n. Take a peek at issue #16 \n. Yea, it was originally not included because cache breaking in different methods might differ.  Nevertheless, jQuery does it using underscore, so it's a good idea.\n. @adamschwartz Thanks, I made the data attribute move, so as far as I can tell this works now.  There is one issue though, the width is off with the new copy, and I imagine it will be off from language to language:\n![screen shot 2013-11-22 at 2 39 29 pm](https://f.cloud.github.com/assets/55347/1603668/10f64a86-53ae-11e3-9e3d-3c36b95569b6.png)\n. Done, this is in the 0.6.0 release.\n. I just tested it in a simple angular app and I was not able to reproduce it.  Please let us know if you learn more.\n. I appreciate it, we want it to work for everybody.\n. Offline detects when your user doesn't have an internet connection, not when your server is down.  [Messenger](http://github.hubspot.com/messenger/) can help.\n. Offline doesn't care if your server is up or not, only if the user has an internet connection.  Wrapping your requests with messenger, as I suggested above, will allow you to easily show traditional error messages.\n. What browser?\n. @vinay-kotian Please be sure you're including both a theme and a language file: https://github.com/HubSpot/offline/tree/master/themes\n. Sure, we can check the readyState.\n. This is fixed by 09fd5421ecb2d960c7a54fe19dd6b2141e631a62\n\nThere still will be issues though, as offline depends on window.Offline being setup.  If you want to send a PR moving the files to UMD, I'd happily merge it.\n. I didn't know they looked at every endpoint, interesting.  From the docs:\n\nOffline ships with two methods for checking the connection.  One makes a request for a tiny image hosted on a\ncloudfront account for the benevolence of all, the other makes an XHR request against the current domain,\nhoping to get back any sort of response (even a 404).\n\nYou can change the url of the image to be one you control, if you like:\n\n``` javascript\nOffline.options = {checks: {image: {url: 'my-image.gif'}}};\n```\n\nLoading an image was chosen (rather than a script file), because it limits the potential damage if a\nhostile party were to be in control of it.\n\nYou can also switch to the XHR method:\n\n``` javascript\nOffline.options = {checks: {active: 'xhr'}}\n```\n\nThe XHR method is not enabled by default because of a concern that some sites do a significant amount of\nprocessing to build their 404 page, so it's not something we want to send unnecessarily.  It's also\npossible that the page would respond with a redirect to a different domain, creating a CORS problem.\nIf you have control of the domain and can create an endpoint which just responds with a quick 204,\nthat's the perfect solution.  You can set the endpoint in settings as well:\n\n``` javascript\nOffline.options = {checks: {xhr: {url: '/health-check'}}};\n```\n. This should be fixed in 0.4.6, please reopen if it persists.\n. Should be fixed in 0.4.6, thanks @underbyte \n. That was, in fact, the case; just released v0.4.5.  Thanks @beardfu.\n. I ended up shifting it to only initialize on 'complete', hopefully that will have the same effect.  Thanks @matthargett and @cjk, sorry it took us so long to make the change.\n\n55c8c84\n. Thanks for letting us know.  Is there some easy way we can see this happening?\n. Yep, I was also interested in fixing this.  I was actually able to fix it just in CSS, which is cool: 8dffa1c\n. Just FYI, this change was made in offline itself (https://github.com/HubSpot/offline/commit/8dffa1c), the message now shows for a full five seconds, you don't need to manually change anything if you upgrade to [0.4.7](https://github.com/HubSpot/offline/releases/tag/v0.4.7).\n. We intentionally only hang onto the last request with a given `(url, method)`, as the assumption is that a GET against a given endpoint will always return the same thing, and if you're making multiple POSTs, you only really want the last one to count.  I suppose there is a use case for all of the POSTs being replayed (particularly if the application uses PUT correctly).\n. localhost is going to resolve whether you have an internet connection or not.  It should work when it's actually hosted over the network.\n. Everything is modular, if you include offline.js and requests.js without ui.js, you won't get a UI.  If you take a peek at ui.js you should be able to get an idea of what events the UI listens to. Files: https://github.com/HubSpot/offline/tree/master/js\n. We don't actually support IE6 (IE8+ only), so that itself is not an issue.  Trying to load the file locally (and therefore getting the file:// protocol) is a good reason to use the method you have here.\n. This is no longer a factor, as we've changed how we do the actual connection testing.  Thanks for your help @JoeWagner.\n. Interesting.  Any idea which loop/array is causing the problem @leonzinger?\n. `querySelector` does exist in IE 8 (http://caniuse.com/queryselector), so this must be an issue with el not being what it should be.\n. I would always recommend including the appropriate meta tag to keep the browser out of Quirks mode.  It's designed to keep IE compatible with old websites, not for use with ones under active development.\n. Thanks!\n. I don't believe Safari has support for the offline events, meaning Offline will only show up when you try to make an XHR request and fail.  No request, no offline unfortunately. \n. Done in https://github.com/HubSpot/offline/commit/b30eccbb46078f28300224fb4591b4b9eb027a62. Based on our testing it seemed that the access denied response would be considered 'up'. Do you happen to know which version of offline you are using?\n. Just restored the file until we can get to the bottom of why the library is not responding in the way we expected. \n. Should be all set now.\n. FYI: This file is being removed at the end of March.  Please update to offline 0.7.0+ if you haven't already.\n. v0.7.0 now uses your favicon as the test image, assuming you have a /favicon.ico, you should see no problems.\n. Fixed, thanks.\n. Thanks for reporting @sgringwe, we're looking into the issues now. \n. There's a file there, are you still seeing 404s?\n\n> On Feb 25, 2014, at 3:02 PM, Agust\u00edn Maga\u00f1a notifications@github.com wrote:\n> \n> Could you restor the last depricated cloudfront hosted file (http://dqakt69vkj09v.cloudfront.net/are-we-online.gif) to avoid 404 errors to preserve previous version usage of the library?\n> \n> I know you recommend to update to the last version but the presence of the file helps a lot in the transition.\n> \n> Thanks.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Should be the exact same file now.\n\n## \n\nZack Bloom\n\nOn Tue, Feb 25, 2014 at 4:24 PM, Agust\u00edn Maga\u00f1a notifications@github.comwrote:\n\n> Sorry, I checked again and effectively I'm getting a 200. Nevertheless,\n> Offline.state is still 'down' when in fact I'm online. I'm using 0.4.7\n> version.\n> \n> This issue didn't exist 6 days ago.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/HubSpot/offline/issues/52#issuecomment-36059794\n> .\n. Seems to have been a caching issue, looks good now\n. Using the favicon is the solution we've been looking for.  This is now the default as of 0.7.0, thanks @Sjors!\n. If you update to the latest version, we now actually check the /favicon.ico, which most sites should have.\n. The short answer is that should work.  Are you sure you are setting `options` early enough in the loading process (e.g. it's not in a callback or anything).\n. I think I see the problem then.  You're waiting until `domReady` to set the options.  If an XHR request fails before `domReady` however, offline will run the check before you have a chance to set the options.  Try:\n\n``` html\n<html>\n<style>stuff</style>\n<script>custom library</script>\n<script>offline.min.js</script>\n<script>\nOffline.options = { ... }\nrequire([\"x\",\"y\",\"domReady!\"],function(x,y){\n     Offline.check();\n})\n</script>\n```\n. Hey @craigshoemaker.  I like the idea, but I'm not sure that having a UI for it is really required, and having to add and remove the script to get the functionality means that I'm afraid the vast majority of developers will never even realize that it's in the repo or what it's for.  This is my alternative: https://github.com/HubSpot/offline/blob/zbloom-simulator/coffee/offline.simulator.coffee\n\nIt doesn't allow you to toggle, but it does add the data attribute support, the ability to use a local storage var, and it adds two new checks `up` and `down`, which will always report being up and down respectively. \n. If you publish the UI in a separate repo, I'd be happy to link to it in the docs.\n. Thanks @craigshoemaker.  Two questions:\n- I don't actually see the checkbox on that page, am I missing it?\n- What is the form in the demo for?\n\nYou might also want to link to the github page for your project from the landing page.\n. Are you testing against a locally hosted page (hosted on your machine)?\n. Do you see it if you disconnect your internet on the demo page: http://github.hubspot.com/offline/docs/welcome/\n\nThat page uses the offline.min.js file in master.\n. Just to confirm @andygup, even when you make an XHR request and that request fails (while you're offline), you still don't see it?\n. I just confirmed that `Offline.state` has the correct values.  If you notice anything which seems to be more specifically wrong, please let us know.\n. I can double check this, but I believe that not all browsers support the\noffline events.  On those browsers, you have to try to make an AJAX request\n(which fails), before we know you're offline.\n\n## \n\nZack Bloom\n\nOn Tue, Apr 8, 2014 at 4:35 PM, Chris Ross notifications@github.com wrote:\n\n> Currently in Firefox (version 28 also tried in version 27.01) the offline\n> status doesn't update to show when the browser goes offline. You can see\n> this in your current implementation while running Firefox (\n> http://github.hubspot.com/offline/docs/welcome/), it does not update\n> statuses on the UI when you're offline. However, this behaves correctly in\n> Chrome and IE.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/HubSpot/offline/issues/65\n> .\n. If it supports the events, we certainly should be picking them up, I'll look into it further.\n. I just confirmed that the offline event does not fire in firefox when the system's internet connection is disconnected.  I believe that event only fires when the user explicitly puts their browser in 'offline mode'.  With that in mind, Offline is only going to notice the loss of connection when you try to make an XHR request and it fails, or if you explicitly call `Offline.check()`.\n\n@blackblood Do you see the issue on our [landing page](http://github.hubspot.com/offline/docs/welcome/)?\n. @eladxxx FYI, each component is modular, so you can just include the contents of the `offline.coffee` file without the reconnection, request retrying, ui or game.\n. Muchos gracis @macool\n. Do you happen to have a link to that page?  It shouldn't be checking after successful requests.\n. Thanks for writing this up, but putting it at the maximum allowed value prevents anyone from ever being able to override it, which, is not very nice to other people making weird and wonderful things.  If you'd like to choose a value greater than bootstrap (2000?), I'd be happy to merge.\n. Closed by 043fe58\n. Sorry for the delay in responding to this.  Firefox does not fire the `offline` and `online` events in the way that other browsers do.  You can test this by running this Fiddle with your console open and disconnecting your internet connection: http://jsfiddle.net/L507acnc/\n\nIn Firefox, we get no events, in Chrome, we get the events we need.  This means the only way of detecting actual network status in FF is for an actual HTTP request to fail.  On the Offline homepage, there are no requests, so this never happens.  You can manually run a check though by executing `Offline.check()` in the console, and you will see it correctly update.\n\nIf offline detection is very important to you, but you never make any requests (an odd combo), you could run `Offline.check` periodically:\n\n``` javascript\nsetInterval(function(){\n  Offline.check();\n}, 5000);\n```\n. Re the IE11 issue, please open another issue if it's reproducible.  Status 0 often means the browser couldn't make a connection for an internal reason, it's possible your network connection was not truly 'up' yet.\n. Sebastian, have you tried the fiddle I included in my response? If you see a technical difference between my example in that fiddle and what the MDN article instructs, please enumerate it. Does the fiddle work for you?\n. It does not work for me on Firefox 36 / OSX.  If the fiddle doesn't work for you, I would love to hear what you see as the difference between what we're doing in the fiddle, and what Mozilla is doing in their example.  In any case, neither seems to work on OSX, making it difficult for me to examine.\n. Thanks for working with me on this.  If you're interested, you can see it not working for me: https://vimeo.com/122614412.  It may take the video a bit to upload.\n\nI am using OS X 10.10 and Firefox 36.0.1.  Without being able to see the mozilla page work, it's difficult for me to understand what is going on.\n. Ah, I understand what you're saying.  This was never the intended functionality of Offline.  The biggest reason for this is A. It is unclear how many users actually know how to do this, as so few modern websites support it and B. Offline's method for retrying requests is probably too simplistic for an app which is intended to be used offline for an extended period.\n. There isn't an explicit build.  As Adam said though, you can just include\nwhichever files you are interested in the functionality of, and all the\nrest will work.\n\n## \n\nZack Bloom\n\nOn Tue, Jul 22, 2014 at 2:37 PM, Adam Schwartz notifications@github.com\nwrote:\n\n> In that event, I believe you can include only\n> https://github.com/HubSpot/offline/blob/master/coffee/offline.coffee and\n> that will do the trick. @zackbloom https://github.com/zackbloom did we\n> ever create a UI-less build for this?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/HubSpot/offline/issues/88#issuecomment-49781757.\n. You are very much encouraged to monitor the failure of requests you make, and inform the user accordingly.  In fact, we have a library which makes it a bit easier: http://github.hubspot.com/messenger/\n\nOffline is meant more for helping your user deal with losing their general internet connection.\n. It's now published as `offline-js`.  Thanks for the reminder!\n. You can try calling `Offline.markUp()`.\n. Hi @mycaule, Thanks! If you wouldn't mind making the changes to the .sass file instead, I can merge this straightaway.\n. Thanks for doing this, but we actually need it in the relevant .sass file.\n. Is there any way you could make a jsfiddle reproducing the issue? It would be much appreciated.\n. I believe this is common if the object changed from the time you logged it\nto when you opened it in the expanded view.  Are you logging the initial\nmessage before the request comes back?\n\nOn Sat, Jan 17, 2015 at 4:04 AM, heartdev notifications@github.com wrote:\n\n> Note the \"status\" in the in-line object (0), and the \"status\" in the\n> expanded object (200). Does anyone have any ideas? Thx in advance.\n> \n> [image: image]\n> https://cloud.githubusercontent.com/assets/4590504/5788345/a8f3b9a0-9de4-11e4-8f9e-e27198d3b313.png\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/HubSpot/offline/issues/121.\n. Your original error handler should run, as it would if the request errored immediately.\n. Thanks @brettjonesdev \n. `interceptRequests` specifically disables trying to remake requests when the connection is reestablished.  You also must switch to a different check style (other than `xhr`) to disable all XHR checking.  For example:\n\n``` javascript\nOffline.options.checks.active = 'image'\n```\n. I really don't think this is in-scope.  If you really want to you can certainly try triggering the `'down'` event:\n\n``` javascript\nOffline.trigger('down')\n```\n\nThat's really what the UI is listening to: https://github.com/HubSpot/offline/blob/master/coffee/ui.coffee#L79\n. In general, making requests with `async: false` is not really ever appropriate.  `async: false` blocks all javascript execution in the browser while the request is ongoing, making something like Offline impossible.  I can't speak to what will or won't work in Offline if you do this.\n. In general, every service which uses the underlying `XMLHttpRequest` (the only way to make AJAX requests), should be supported.  The one exception to this is if the service-in-question is brought into the page before Offline, and makes a references to `XMLHttpRequest` before we get a chance to alias it.  Any other failure should be considered a bug.\n. The `on` function is implemented in Offline, it is unrelated to the browser's API.  `onload` is bad because you can only bind one function that way, this is obviously not the case with our implementation.\n. Is binding to the `confirmed-up` event not an option? https://github.com/HubSpot/offline#properties\n. It seems like you could bind to both `confirmed-up` and `confirmed-down`, and then remove the bindings once one of the two is called.  How would that be different than a promise?\n. I'm thinking something along the lines of:\n\n``` javascript\nvar initialCheck = function(cb){\n  var upFunc = function(){\n    cb(true);\n    unbind();\n  }\n  var downFunc = function(){\n    cb(false);\n    unbind();\n  }\n  var unbind = function(){\n    Offline.off('confirmed-up', upFunc);\n    Offline.off('confirmed-down', downFunc);\n  }\n\n  Offline.on('confirmed-up', upFunc);\n  Offline.on('confirmed-down', downFunc);\n\n  Offline.check();\n}\n```\n. These are the files Eager includes: https://github.com/HubSpot/offline/blob/master/install.json#L5-L26\n\nPerhaps you're missing a theme or language file?\n. You could also write out the CSS you need using JavaScript.  For example:\n\n``` javascript\nvar style = document.createElement('style');\nstyle.innerHTML = \".offline-ui.offline-ui-up .offline-ui-content:before { content: '\"+gettext('Connected')+\"'; }\"\ndocument.head.appendChild(style);\n```\n\nUltimately the style block you construct would need to include all of these translations: https://github.com/HubSpot/offline/blob/master/themes/offline-language-english.css\n. The easiest way would probably be to try to make a request to your service, and then also try to make a connection to a neutral site like example.com.  If both fail, it's the client's internet connection, if example.com succeeds it's you.\n. You can connect to a URL with permissive CORS settings (`Access-Control-Allow-Origin: *`) or download an image or script from any domain (not restricted by CORS).  Another option would be to host a blank file on Amazon S3+CloudFront for this purpose, where you can control the CORS headers.\n. Any status code (other than 12xxx which is specific to old-IE) means the user's internet connection is working, and they are 'online'.  Offline is not intended to handle cases when your service is down, as, as you mention, it varies too much from one backend to another.  \n. I understand what you're saying, but philosophically, I think it's probably a better idea to handle your service failing by handling the failure case of the individual requests you are making.  Take a look at [Messenger](http://github.hubspot.com/messenger/docs/welcome/) for an example of what that looks like.  In most systems, it's very possible for your service to be degraded, but not universally down, making something like this challenging to do globally.\n\nThere is also a use-case for putting your service in a 'maintenance mode', but similarly, it's just not something which this library tries to support.\n. Done, sorry for the delay!\n. This is intentional.  Offline is meant to show the user when they are offline, _not_ when the web service is offline.  To show an offline state when your server 502s, we recommend you bind to the AJAX error event of your requests.\n. In general this is the intended behavior.  Offline only forwards one request per URL.  There is an option though which will have it also consider the body of the request: https://github.com/HubSpot/offline/blob/master/coffee/requests.coffee#L42\n. ",
    "squallstar": "Hello and thanks for your nice offline plugin. I'm trying to use the xhr \"health check\" method but it seems that the plugin is still loading the cloudfround image, rather than the configured url.\n\nHere's the console.log on chrome\n\n![screen shot 2013-10-25 at 10 44 02](https://f.cloud.github.com/assets/574210/1406766/01e5676c-3d5a-11e3-98b4-f20afa5e5469.png)\n\nThanks for your help\n. thanks! :-)\n. I just tried and it seems that as soon as you are offline it stucks into a recursive loop, calling the xhr url thousands of times.\n. Hello and thanks for your nice offline plugin. I'm trying to use the xhr \"health check\" method but it seems that the plugin is still loading the cloudfround image, rather than the configured url.\n\nHere's the console.log on chrome\n\n![screen shot 2013-10-25 at 10 44 02](https://f.cloud.github.com/assets/574210/1406766/01e5676c-3d5a-11e3-98b4-f20afa5e5469.png)\n\nThanks for your help\n. thanks! :-)\n. I just tried and it seems that as soon as you are offline it stucks into a recursive loop, calling the xhr url thousands of times.\n. ",
    "ijafri": "Just wanted to confirm is below correct\n\n```\n<script type=\"text/javascript\">\n    Offline.options = {\n        checks: {\n            image: {url: '../img/test.gif'}\n        },\n\n        requests: false\n    }\n  </script>     \n```\n. that's strange. does not work. the offline message won't go away even after the connection is established.\n. the bug was ',' after the <code>image: {url: '../img/test.gif'},</code>. removing it fixes the issue :)\n. But now requests (false) not working. after I removed above comma\n. I have just replaced cloundfront file with my own in min.js for time being.\n. below isn't working\n\n```\n <script type=\"text/javascript\" src=\"../js/offline.min.js\">\n        Offline.options = {\n      game: true\n    }\n  </script>\n```\n\nnor after linking js\n\n```\n <script>\n        Offline.options = {\n      game: true\n    }\n  </script>\n```\n. aaaww just found snake isn't included but i would appreciate if you could indicate which of above method is correct :)\n. You are a one cool dude. May a lot of hot girls come your way :)\n. Just rechecked, it works on Firefox only after you press the submit button for a form.\n. Just wanted to confirm is below correct\n\n```\n<script type=\"text/javascript\">\n    Offline.options = {\n        checks: {\n            image: {url: '../img/test.gif'}\n        },\n\n        requests: false\n    }\n  </script>     \n```\n. that's strange. does not work. the offline message won't go away even after the connection is established.\n. the bug was ',' after the <code>image: {url: '../img/test.gif'},</code>. removing it fixes the issue :)\n. But now requests (false) not working. after I removed above comma\n. I have just replaced cloundfront file with my own in min.js for time being.\n. below isn't working\n\n```\n <script type=\"text/javascript\" src=\"../js/offline.min.js\">\n        Offline.options = {\n      game: true\n    }\n  </script>\n```\n\nnor after linking js\n\n```\n <script>\n        Offline.options = {\n      game: true\n    }\n  </script>\n```\n. aaaww just found snake isn't included but i would appreciate if you could indicate which of above method is correct :)\n. You are a one cool dude. May a lot of hot girls come your way :)\n. Just rechecked, it works on Firefox only after you press the submit button for a form.\n. ",
    "adamschwartz": "How about requesting `\"/\"`, like [`offline-events.js` shim](https://github.com/remy/polyfills/blob/57260e8540605b147c39b42a0d404e2e5453e97c/offline-events.js#L15) does?\n. @zackbloom perhaps we could simply expose `Offline.init` so that it can be initialized manually. @adisuryadi that would have solved your issue, correct?\n. @zackbloom @adisuryadi should we make that the default bower.json configuration?\n. lgtm\n. :boom: \n. Thanks!\n. @Alex-Sokolov to localize \"seconds\", [set the respective `$retryingSecondAfterValue...` sass variable](https://github.com/HubSpot/offline/blob/46b1ec1c8ea7ea9374036ba1b3cc55deea7278f8/sass/_english.sass#L33-L34) and so on for minutes and hours.\n. @zackbloom OK, should be all set on my end. (Or at least enough for now.)\n. I'll take a look next week.\n. @saadmalik, thanks for submitting this theme!\n\nAt a quick glance, it looks pretty similar to the [Default theme](https://github.com/HubSpot/offline/blob/master/sass/offline-theme-default.sass).\n\nHow do you see it being used? Do you think it might just be better to make these changes to that theme?\n. @saadmalik We switched `blue`s to `green`s so that the `default` and `slide` themes work with the default colors in bootstrap (and for the consistency with the use of green in the dark themes). However, we've decided to keep the current `red` and `yellow` since they're added saturation should help draw the eye during a connectivity issue. Thanks again for the PR!\n. At the time of this writing, [v0.4.4](https://github.com/HubSpot/offline/releases/tag/v0.4.4) is the latest release. While there may be bugs in any given release, we recommend people use the release builds because they move towards stable, whereas you can't be sure that master doesn't contain incremental fixes which temporarily make this worse. (Keep in mind we still haven't reached **v1.0.0** or greater.) It may be the case that we need to make a new release soon though. @zackbloom thoughts?\n. @zackbloom I remember you having a similar suggestion. Any specific suggestion here?\n. Great!\n. Basically, you need to augment your `.offline-ui-down` selector with `.offline-ui-down-5s`.\n\nSo if before you had this:\n\n``` css\n.offline-ui.offline-ui-down .offline-ui-content:before {\n  content: \"Your computer lost its internet connection. \";\n}\n\n@media (max-width: 1024px) {\n  .offline-ui.offline-ui-down .offline-ui-content:before {\n    content: \"Your device lost its internet connection. \";\n  }\n}\n\n@media (max-width: 568px) {\n  .offline-ui.offline-ui-down .offline-ui-content:before {\n    content: \"Your device isn't connected. \";\n  }\n}\n```\n\nNow you should have this:\n\n``` css\n.offline-ui.offline-ui-down.offline-ui-down-5s .offline-ui-content:before {\n  content: \"Your computer lost its internet connection. \";\n}\n\n@media (max-width: 1024px) {\n  .offline-ui.offline-ui-down.offline-ui-down-5s .offline-ui-content:before {\n    content: \"Your device lost its internet connection. \";\n  }\n}\n\n@media (max-width: 568px) {\n  .offline-ui.offline-ui-down.offline-ui-down-5s .offline-ui-content:before {\n    content: \"Your device isn't connected. \";\n  }\n}\n```\n\nAdditionally, you'll want to hide the retry button when in `.offline-ui-waiting`.\n\n``` css\n.offline-ui.offline-ui-down.offline-ui-down-5s.offline-ui-waiting .offline-ui-retry {\n  display: none;\n}\n```\n. @zackbloom can correct me if I'm wrong, but as long as the requests being made are succeeding, it doesn't matter whether they're internet or intranet resources. The catch here is that the default check URL is a resource on the internet. So if intranet resources are loading but the check URL isn't, I believe we'll report you as offline. So if you desire the behavior that an intranet-only connection appears as online, you'll want to configure the check url to be a resource on your intranet.\n. Hey @phani26, thanks for the report. Which Internet Explorer version?\n\n[Update: my mistake, seeing \"IE8\" in the title now.]\n. I just fixed https://github.com/HubSpot/offline/issues/50 which at least solves:\n\n> - No text message\n> - No retry button\n\nLooking into FF now.\n. Sorry for the delay. It works in FF but since the docs don't make any requests after the initial page load, the indicator won't show up (which is the correct behavior).\n. It seems slightly unintuitive (and possibly even confusing) to me to use the indicator as the switch (since it's original purpose was read-only), but otherwise, this looks great to me. Thanks for the script! @zackbloom thoughts?\n. Sounds great!\n\n(And yes, interoperability with all of the themes\u2014including the indicator themes\u2014would be ideal ;)\n. @craigshoemaker that looks awesome! Thanks for putting this together.\n\n@zackbloom\n- The checkbox is on the left edge of the page.\n- When you check the checkbox, the form switches to a message stating you must have internet connectivity to sign in.\n. :+1: \n. Awesome!!!\n. Something like this should work:\n\n```\nOffline.on('down', function(){\n    // Open Bootstrap 3 modal\n});\n```\n\nHope this helps!\n. This ought to do the trick!\n\n``` coffeescript\nreloadIfUp = ->\n    location.reload(true) if Offline.state is 'up'\n\nsetTimeout ->\n    reloadIfUp()\n    setInterval reloadIfUp, 10 * 1000\n, 45 * 1000\n```\n. Thanks so much! This will be a great addition.\n\nWould you mind doing this in a `_german.sass` file similar to the way the [`_french.sass`](https://github.com/HubSpot/offline/blob/master/sass/_french.sass) file was written?\n. Absolutely! Thanks :smile: \n. In that event, I believe you can include only https://github.com/HubSpot/offline/blob/master/coffee/offline.coffee and that will do the trick. @zackbloom did we ever create a UI-less build for this?\n. Offline.js provides an indication of network connectivity for the client, not the server.\n. Thanks!\n. Thanks @barryvdh!\n. Hey @cutesquirrel, thanks for letting us know. We\u2019ll take a look.\n. One option is you can use JS to conditionally load the appropriate language CSS file.\n. Thanks for sharing @dannycallaghan! That will be helpful for others looking to integrate with Angular. I agree. :)\n. @ymatuhin @geekjuice I think we\u2019ll want to move the padding stuff into a separate file which gets imported into https://github.com/ymatuhin/offline/blob/master/sass/offline-language-russian.sass rather than have the default `width`s change. Otherwise looks great though, thanks.\n. Thanks @mamadoo. Would you possibly be able to add a language file for all of the content strings? \n\nHere\u2019s French, e.g.: https://github.com/HubSpot/offline/blob/master/sass/_french.sass\n. Thanks!\n. :+1: \n. yes, please. that would be great, thanks.\n. Thanks!!! :+1: \n. How about requesting `\"/\"`, like [`offline-events.js` shim](https://github.com/remy/polyfills/blob/57260e8540605b147c39b42a0d404e2e5453e97c/offline-events.js#L15) does?\n. @zackbloom perhaps we could simply expose `Offline.init` so that it can be initialized manually. @adisuryadi that would have solved your issue, correct?\n. @zackbloom @adisuryadi should we make that the default bower.json configuration?\n. lgtm\n. :boom: \n. Thanks!\n. @Alex-Sokolov to localize \"seconds\", [set the respective `$retryingSecondAfterValue...` sass variable](https://github.com/HubSpot/offline/blob/46b1ec1c8ea7ea9374036ba1b3cc55deea7278f8/sass/_english.sass#L33-L34) and so on for minutes and hours.\n. @zackbloom OK, should be all set on my end. (Or at least enough for now.)\n. I'll take a look next week.\n. @saadmalik, thanks for submitting this theme!\n\nAt a quick glance, it looks pretty similar to the [Default theme](https://github.com/HubSpot/offline/blob/master/sass/offline-theme-default.sass).\n\nHow do you see it being used? Do you think it might just be better to make these changes to that theme?\n. @saadmalik We switched `blue`s to `green`s so that the `default` and `slide` themes work with the default colors in bootstrap (and for the consistency with the use of green in the dark themes). However, we've decided to keep the current `red` and `yellow` since they're added saturation should help draw the eye during a connectivity issue. Thanks again for the PR!\n. At the time of this writing, [v0.4.4](https://github.com/HubSpot/offline/releases/tag/v0.4.4) is the latest release. While there may be bugs in any given release, we recommend people use the release builds because they move towards stable, whereas you can't be sure that master doesn't contain incremental fixes which temporarily make this worse. (Keep in mind we still haven't reached **v1.0.0** or greater.) It may be the case that we need to make a new release soon though. @zackbloom thoughts?\n. @zackbloom I remember you having a similar suggestion. Any specific suggestion here?\n. Great!\n. Basically, you need to augment your `.offline-ui-down` selector with `.offline-ui-down-5s`.\n\nSo if before you had this:\n\n``` css\n.offline-ui.offline-ui-down .offline-ui-content:before {\n  content: \"Your computer lost its internet connection. \";\n}\n\n@media (max-width: 1024px) {\n  .offline-ui.offline-ui-down .offline-ui-content:before {\n    content: \"Your device lost its internet connection. \";\n  }\n}\n\n@media (max-width: 568px) {\n  .offline-ui.offline-ui-down .offline-ui-content:before {\n    content: \"Your device isn't connected. \";\n  }\n}\n```\n\nNow you should have this:\n\n``` css\n.offline-ui.offline-ui-down.offline-ui-down-5s .offline-ui-content:before {\n  content: \"Your computer lost its internet connection. \";\n}\n\n@media (max-width: 1024px) {\n  .offline-ui.offline-ui-down.offline-ui-down-5s .offline-ui-content:before {\n    content: \"Your device lost its internet connection. \";\n  }\n}\n\n@media (max-width: 568px) {\n  .offline-ui.offline-ui-down.offline-ui-down-5s .offline-ui-content:before {\n    content: \"Your device isn't connected. \";\n  }\n}\n```\n\nAdditionally, you'll want to hide the retry button when in `.offline-ui-waiting`.\n\n``` css\n.offline-ui.offline-ui-down.offline-ui-down-5s.offline-ui-waiting .offline-ui-retry {\n  display: none;\n}\n```\n. @zackbloom can correct me if I'm wrong, but as long as the requests being made are succeeding, it doesn't matter whether they're internet or intranet resources. The catch here is that the default check URL is a resource on the internet. So if intranet resources are loading but the check URL isn't, I believe we'll report you as offline. So if you desire the behavior that an intranet-only connection appears as online, you'll want to configure the check url to be a resource on your intranet.\n. Hey @phani26, thanks for the report. Which Internet Explorer version?\n\n[Update: my mistake, seeing \"IE8\" in the title now.]\n. I just fixed https://github.com/HubSpot/offline/issues/50 which at least solves:\n\n> - No text message\n> - No retry button\n\nLooking into FF now.\n. Sorry for the delay. It works in FF but since the docs don't make any requests after the initial page load, the indicator won't show up (which is the correct behavior).\n. It seems slightly unintuitive (and possibly even confusing) to me to use the indicator as the switch (since it's original purpose was read-only), but otherwise, this looks great to me. Thanks for the script! @zackbloom thoughts?\n. Sounds great!\n\n(And yes, interoperability with all of the themes\u2014including the indicator themes\u2014would be ideal ;)\n. @craigshoemaker that looks awesome! Thanks for putting this together.\n\n@zackbloom\n- The checkbox is on the left edge of the page.\n- When you check the checkbox, the form switches to a message stating you must have internet connectivity to sign in.\n. :+1: \n. Awesome!!!\n. Something like this should work:\n\n```\nOffline.on('down', function(){\n    // Open Bootstrap 3 modal\n});\n```\n\nHope this helps!\n. This ought to do the trick!\n\n``` coffeescript\nreloadIfUp = ->\n    location.reload(true) if Offline.state is 'up'\n\nsetTimeout ->\n    reloadIfUp()\n    setInterval reloadIfUp, 10 * 1000\n, 45 * 1000\n```\n. Thanks so much! This will be a great addition.\n\nWould you mind doing this in a `_german.sass` file similar to the way the [`_french.sass`](https://github.com/HubSpot/offline/blob/master/sass/_french.sass) file was written?\n. Absolutely! Thanks :smile: \n. In that event, I believe you can include only https://github.com/HubSpot/offline/blob/master/coffee/offline.coffee and that will do the trick. @zackbloom did we ever create a UI-less build for this?\n. Offline.js provides an indication of network connectivity for the client, not the server.\n. Thanks!\n. Thanks @barryvdh!\n. Hey @cutesquirrel, thanks for letting us know. We\u2019ll take a look.\n. One option is you can use JS to conditionally load the appropriate language CSS file.\n. Thanks for sharing @dannycallaghan! That will be helpful for others looking to integrate with Angular. I agree. :)\n. @ymatuhin @geekjuice I think we\u2019ll want to move the padding stuff into a separate file which gets imported into https://github.com/ymatuhin/offline/blob/master/sass/offline-language-russian.sass rather than have the default `width`s change. Otherwise looks great though, thanks.\n. Thanks @mamadoo. Would you possibly be able to add a language file for all of the content strings? \n\nHere\u2019s French, e.g.: https://github.com/HubSpot/offline/blob/master/sass/_french.sass\n. Thanks!\n. :+1: \n. yes, please. that would be great, thanks.\n. Thanks!!! :+1: \n. ",
    "nhunghin": "Thank\n. Thank\n. ",
    "rajan108": "ok i wil see\n. ok i wil see\n. ",
    "suneeltcs": "**Snake demo page also not working after disabling internet connection.**\n- _I have tried in mozilla and chrome browser_.\n- _Please let me know if anything else we need to do_.\n- _Any steps we need to follow to run snake game_.\n. **Snake demo page also not working after disabling internet connection.**\n- _I have tried in mozilla and chrome browser_.\n- _Please let me know if anything else we need to do_.\n- _Any steps we need to follow to run snake game_.\n. ",
    "lostinroom": "When connection is back, snake is not removed properly.\nIt throws and error.\nNotFoundError: Node was not found\nreturn document.removeChild(canvas);\n. When connection is back, snake is not removed properly.\nIt throws and error.\nNotFoundError: Node was not found\nreturn document.removeChild(canvas);\n. ",
    "adisuryadi": "You might be interested on viewing this lines of code:\nhttps://github.com/HubSpot/offline/blob/master/js/ui.js#L141\n\nI don't know how turbolinks actually works in details, but i also have issue with the rendering the UI and events because currently I'm injecting the script on-fly and the `DOMContentLoaded` off course not being triggered. \n. @adamschwartz for my problem I changed offline.js to be loaded via bower instead, so then brunch build it with other assets and run on init. Works like charm, i need to manually added the main prop on bower.json override though:\n\n```\n\"offline\": {\n   \"main\": [\n     \"offline.min.js\",\n     \"./themes/offline-theme-default.css\"\n   ]\n }\n```\n\nbecause brunch need it for picking the main files to build.\n. You might be interested on viewing this lines of code:\nhttps://github.com/HubSpot/offline/blob/master/js/ui.js#L141\n\nI don't know how turbolinks actually works in details, but i also have issue with the rendering the UI and events because currently I'm injecting the script on-fly and the `DOMContentLoaded` off course not being triggered. \n. @adamschwartz for my problem I changed offline.js to be loaded via bower instead, so then brunch build it with other assets and run on init. Works like charm, i need to manually added the main prop on bower.json override though:\n\n```\n\"offline\": {\n   \"main\": [\n     \"offline.min.js\",\n     \"./themes/offline-theme-default.css\"\n   ]\n }\n```\n\nbecause brunch need it for picking the main files to build.\n. ",
    "arndeash": "Anyone got this to work?\n. Anyone got this to work?\n. ",
    "jeffblake": "+1... it would be great to expose a method initialize Offline.js manually, so that it can be used with Turbolinks. Otherwise, turbolinks replaces the Offline.js dom elements on page change.\n. +1... it would be great to expose a method initialize Offline.js manually, so that it can be used with Turbolinks. Otherwise, turbolinks replaces the Offline.js dom elements on page change.\n. ",
    "tonywok": "That or allow users to allow init to bind to custom events. For example, with turbolinks, you'd want to bind to `turbolinks:load` instead of `DOMContentLoaded`. In the interim, you can make this change yourself.\n. That or allow users to allow init to bind to custom events. For example, with turbolinks, you'd want to bind to `turbolinks:load` instead of `DOMContentLoaded`. In the interim, you can make this change yourself.\n. ",
    "midudev": "+1!\n. +1!\n. ",
    "eamonnfaherty": "+1\n. +1\n. ",
    "nickwb": "No, nothing specific - it was more of a \"there if you need it\" kind of a thing.\n\nWhen I find a moment, I'll build one of the examples from the documentation and test in on a device.\n. No, nothing specific - it was more of a \"there if you need it\" kind of a thing.\n\nWhen I find a moment, I'll build one of the examples from the documentation and test in on a device.\n. ",
    "Dehalion": "sorry i didn't put more effort in understanding the coffeescript code, was in a hurry yesterday.\nthanks for the quick fix though.\n. the strange return value for `Offline.off()` is a side effects of CoffeScript and not intended to be useful, am I right?\n. sorry i didn't put more effort in understanding the coffeescript code, was in a hurry yesterday.\nthanks for the quick fix though.\n. the strange return value for `Offline.off()` is a side effects of CoffeScript and not intended to be useful, am I right?\n. ",
    "nilskp": "Server side making, wrong, assumptions about web socket connecting should not mean we don't get this functionality. \n. Well, it's wrong to assume that a WebSocket connection is so stable that a client is never dropped and thus never needs to reconnect. I don't know in which universe that would be a good assumption.\n. Server side making, wrong, assumptions about web socket connecting should not mean we don't get this functionality. \n. Well, it's wrong to assume that a WebSocket connection is so stable that a client is never dropped and thus never needs to reconnect. I don't know in which universe that would be a good assumption.\n. ",
    "mygzi": "@zackbloom @nilskp check out joewalnes/reconnecting-websocket#1, a model for general purpose WebSocket monitoring / recovery. \n. @zackbloom @nilskp check out joewalnes/reconnecting-websocket#1, a model for general purpose WebSocket monitoring / recovery. \n. ",
    "bellb7": "I was seeing xhr.onprogress == \"undefined\" (non-null), and so it was entering the onreadystatechange path in IE9.\n\nSo instead of this:   \n\n> > > > if (xhr.onprogress === null) {\n\nI changed to this:\n\n> > > > if (xhr.onprogress === null || xhr.onprogress === undefined) {\n\nAnd (strangely?) it works.  I see what you're saying though - in IE9 those events (error/timeout) shouldn't even be available.  Hm...I'm definitely running IE9.  \n\nWhen it was in the onreadystatechange block my readyState was always \"1\", and even after a failure it remained \"1\", so the disconnected functionality was never kicking in.  This might be due to how I was testing though:  I was just being lazy and stopping my local server before the request (causing it to fail).  I suspect if I tested _properly_ against a remote server and broke the connection I may see a different result..?\n\nThanks, and apologies for the confusion. :)  \n. Right.  I'm going to dig a bit deeper and see if I can nail down what's going on here.  I appreciate the quick replies!\n. I was seeing xhr.onprogress == \"undefined\" (non-null), and so it was entering the onreadystatechange path in IE9.\n\nSo instead of this:   \n\n> > > > if (xhr.onprogress === null) {\n\nI changed to this:\n\n> > > > if (xhr.onprogress === null || xhr.onprogress === undefined) {\n\nAnd (strangely?) it works.  I see what you're saying though - in IE9 those events (error/timeout) shouldn't even be available.  Hm...I'm definitely running IE9.  \n\nWhen it was in the onreadystatechange block my readyState was always \"1\", and even after a failure it remained \"1\", so the disconnected functionality was never kicking in.  This might be due to how I was testing though:  I was just being lazy and stopping my local server before the request (causing it to fail).  I suspect if I tested _properly_ against a remote server and broke the connection I may see a different result..?\n\nThanks, and apologies for the confusion. :)  \n. Right.  I'm going to dig a bit deeper and see if I can nail down what's going on here.  I appreciate the quick replies!\n. ",
    "Alex-Sokolov": "What about seconds/minutes/etc? They not in css\n. I need localize \"seconds\" to \"\u0441\u0435\u043a\u0443\u043d\u0434\", \"minutes\" to \"\u043c\u0438\u043d\u0443\u0442\" etc.\nAnd ability to disable adding `s`\nReally to move setting that to options?\n. Thanks!\n. What about seconds/minutes/etc? They not in css\n. I need localize \"seconds\" to \"\u0441\u0435\u043a\u0443\u043d\u0434\", \"minutes\" to \"\u043c\u0438\u043d\u0443\u0442\" etc.\nAnd ability to disable adding `s`\nReally to move setting that to options?\n. Thanks!\n. ",
    "UltraWalker": "My bad for creating a new issue, tnx\n. My bad for creating a new issue, tnx\n. ",
    "cristiano-belloni": "Looking at the code, the problem seems to be that the cachebreaker is only built in the default options:\n\n```\nreturn \"http://dqakt69vkj09v.cloudfront.net/are-we-online.gif?_=\" + (Math.floor(Math.random() * 1000000000));\n```\n\nThere should be a separate cachebreaker option also for all kind of urls, imho (default and custom).\n. Looking at the code, the problem seems to be that the cachebreaker is only built in the default options:\n\n```\nreturn \"http://dqakt69vkj09v.cloudfront.net/are-we-online.gif?_=\" + (Math.floor(Math.random() * 1000000000));\n```\n\nThere should be a separate cachebreaker option also for all kind of urls, imho (default and custom).\n. ",
    "theremon": "I had the same issue. Solved it by simply setting the url property to a function instead of a string:\nurl: function() { return \"image.gif?_=\" + (Math.floor(Math.random() \\* 1000000000)); }\n. Unfortunately I had to disable the script on my site for users with IE9 and I can't show you -right now-. I'll set up something and let you know...\n. Hello again,\n\nI'm terribly sorry for never replying to this thread. Should have done it quite some time ago.\nThe problem does not accur anymore. As I didn't check with every update (support for IE9 is more or less dropped on our apps), I can't say which version of Offline changed this behaviour (or maybe which revision to our code) but I cannot reproduce it anymore. Internet Explorer 9 currently works fine. I also upgraded to the latest version of Offline and confirmed again that the issue has been fixed.\n\nOnce again, sorry for leaving this open and thanks for still paying attention.\nConsider the issue closed.\n. I had the same issue. Solved it by simply setting the url property to a function instead of a string:\nurl: function() { return \"image.gif?_=\" + (Math.floor(Math.random() \\* 1000000000)); }\n. Unfortunately I had to disable the script on my site for users with IE9 and I can't show you -right now-. I'll set up something and let you know...\n. Hello again,\n\nI'm terribly sorry for never replying to this thread. Should have done it quite some time ago.\nThe problem does not accur anymore. As I didn't check with every update (support for IE9 is more or less dropped on our apps), I can't say which version of Offline changed this behaviour (or maybe which revision to our code) but I cannot reproduce it anymore. Internet Explorer 9 currently works fine. I also upgraded to the latest version of Offline and confirmed again that the issue has been fixed.\n\nOnce again, sorry for leaving this open and thanks for still paying attention.\nConsider the issue closed.\n. ",
    "urbany": "This is great, can someone update bower with these changes?\n. This is great, can someone update bower with these changes?\n. ",
    "Grigorius": "I'll try to reproduce it in a plunk during the weekend.\n\nOn Thu, Nov 7, 2013 at 7:46 PM, Zack Bloom notifications@github.com wrote:\n\n> I just tested it in a simple angular app and I was not able to reproduce\n> it. Please let us know if you learn more.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/HubSpot/offline/issues/22#issuecomment-27994209\n> .\n\n## \n\nL.P.\nDavid Klemenc\n. I'll try to reproduce it in a plunk during the weekend.\n\nOn Thu, Nov 7, 2013 at 7:46 PM, Zack Bloom notifications@github.com wrote:\n\n> I just tested it in a simple angular app and I was not able to reproduce\n> it. Please let us know if you learn more.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/HubSpot/offline/issues/22#issuecomment-27994209\n> .\n\n## \n\nL.P.\nDavid Klemenc\n. ",
    "gbin1": "what about i deploy the server to internet?  should it work again?\n. what about i deploy the server to internet?  should it work again?\n. ",
    "DilipRajkumar": "I dont have internet and I try to execute Offline.state I get 'up'  Also if I try Offline.check() it gives me some json output.  How to find if the internet is down?\n. I think I figured out the issue, I was doing offline mode in FF.  And I was trying in my local site.  I will move to web environment and try it.  Will keep you posted. Thanks for the quick response.\n. I dont have internet and I try to execute Offline.state I get 'up'  Also if I try Offline.check() it gives me some json output.  How to find if the internet is down?\n. I think I figured out the issue, I was doing offline mode in FF.  And I was trying in my local site.  I will move to web environment and try it.  Will keep you posted. Thanks for the quick response.\n. ",
    "lutfishah": "Hi Zack, Thanks for sharing your amazing work. Hope this could be a quick fix. I have made offline.js work on my computer. The only issue (or maybe I've got the wrong end of the stick) that when I disconnect the Internet, the indicator shows that the internet connection is lost. But at the same time if I refresh the page the indicator goes back to green whereas I'm not connected to internet. At the same time if the indicator is red and I switch the wireless on, the indicator does not get any signal maybe and stays red until I refresh the page. Could you please help. Many Thanks in advance.\n. Hi Zack, Thanks for sharing your amazing work. Hope this could be a quick fix. I have made offline.js work on my computer. The only issue (or maybe I've got the wrong end of the stick) that when I disconnect the Internet, the indicator shows that the internet connection is lost. But at the same time if I refresh the page the indicator goes back to green whereas I'm not connected to internet. At the same time if the indicator is red and I switch the wireless on, the indicator does not get any signal maybe and stays red until I refresh the page. Could you please help. Many Thanks in advance.\n. ",
    "vinay-kotian": "Hello,\n\nI am using offline.js in my web application. When the connection goes down or offline, the pop up does come up but I cannot see the text. I have tried my best to find what I am missing. Am I missing some js or css files which need to be included.\n. Hello,\n\nI am using offline.js in my web application. When the connection goes down or offline, the pop up does come up but I cannot see the text. I have tried my best to find what I am missing. Am I missing some js or css files which need to be included.\n. ",
    "mahanandajreddy": "```\nI am using Offline.js to show a message when internet is not there, its working fine but in sometimes Firefox 44.0 version when internet is not there than it will show alert \"Your device lost internet connection\" and \"Attempting to reconnect\" and than without internet also it will come third alert message as \"Your device is connected to the internet\" and alert will disappear.\n\ncan anyone suggest me how to fix this issue is Firefox and some times this issue will come in chrome also.\n```\n. where we to add this code, offline.js or \nvar checkInternetConnection = function(){\n          var req = new XMLHttpRequest();\n         req.open('GET', \"IMG_URL\", true);\n          req.send();\n        }\n        setInterval(checkInternetConnection, 5000);\n. ```\nI am using Offline.js to show a message when internet is not there, its working fine but in sometimes Firefox 44.0 version when internet is not there than it will show alert \"Your device lost internet connection\" and \"Attempting to reconnect\" and than without internet also it will come third alert message as \"Your device is connected to the internet\" and alert will disappear.\n\ncan anyone suggest me how to fix this issue is Firefox and some times this issue will come in chrome also.\n```\n. where we to add this code, offline.js or \nvar checkInternetConnection = function(){\n          var req = new XMLHttpRequest();\n         req.open('GET', \"IMG_URL\", true);\n          req.send();\n        }\n        setInterval(checkInternetConnection, 5000);\n. ",
    "robertop87": "Same issue here:\r\nWhen my whole computer and of course the app is offline, then the Offline.status is \"up\".\r\nBrowser: 60.0.3112.101 (Official Build) (64-bit)\r\nOfflineJS version: ^0.7.18. Same issue here:\r\nWhen my whole computer and of course the app is offline, then the Offline.status is \"up\".\r\nBrowser: 60.0.3112.101 (Official Build) (64-bit)\r\nOfflineJS version: ^0.7.18. ",
    "matthargett": "we have a bootstrap-themed application, and having the colors match with our other notifications would be nice. I personally don't care if it's a separate bootstrap theme, or if it replaces the default theme :)\n\nthanks for offline.js and for hopefully accepting the bootstrap-themed pull request!\n. we have a bootstrap-themed application, and having the colors match with our other notifications would be nice. I personally don't care if it's a separate bootstrap theme, or if it replaces the default theme :)\n\nthanks for offline.js and for hopefully accepting the bootstrap-themed pull request!\n. ",
    "saadmalik": "@adamschwartz Thanks, Adam. I agree that it looks similar to the Default theme \u2014 I just though it would serve as an extra form of convenience to have a Bootstrap theme (given its tremendous popularity) with the exact matching colors and text styles.\n. @adamschwartz Thanks, Adam. I agree that it looks similar to the Default theme \u2014 I just though it would serve as an extra form of convenience to have a Bootstrap theme (given its tremendous popularity) with the exact matching colors and text styles.\n. ",
    "underbyte": "#28 \n. #28 \n. ",
    "cjk": "I'm having the same problem in IE10. Anything I can do to help debug this?\n. I'm having the same problem in IE10. Anything I can do to help debug this?\n. ",
    "indolering": "Given the age of this ticket and the fact that IE8 and IE9 have about 3.5% of the market share, I move to close this unless the the author responds with more information.\n. It stores the requests in [requests.js](https://github.com/HubSpot/offline/blob/master/js/requests.js#L12).  You should be able to check an array of regexes before adding the request to the held array.\n. I've added functionality that checks every request against an array of regular expressions and strings: https://github.com/indolering/offline\n\nI need to write some documentation and run some more tests before I submit a PR.\n. Does this happen on all browsers?  Have you tried it with v0.7?\n. This ticket doesn't make much sense, the JS should be polling the resource over the same connection that fetched the page itself.  A virtual network interface at a much lower level of the network stack.  I vote to close and reopen if the original poster provides additional debugging information.\n. I think I might have actually run into this myself, the server is only available through my work's VPN.  If I disable the VPN, the checks simply don't work.  I haven't bothered to do any wireshark analysis and a manual entry in my hosts.txt file might be the culprit.\n. IE8 has 1.5% of global users and has 6 more months of security updates.  I move to close this ticket and update the README to specify IE9.\n. Please close.\n. Please close.\n. Please close.\n. It should include both.  I got an error when I tried to add a second Uglify task to the [gruntfile](https://github.com/HubSpot/offline/blob/master/Gruntfile.coffee) but it should be trivial for someone who is familiar with Grunt.\n. Are you using any Ajax abstractions (like jQuery) or are you making raw Ajax calls.  If you system has complex semantics, you should probably manually collect user input and create your own recovery function.\n\nAlso, are you really sure you want to allow guests to check-in offline?  What if they don't reconnect by the time they need to literally check in?\n. What check are you using?  There isn't a single definition for being \"offline\" and you need to create a test that offers a meaningful response.\n. While this only checks one aspect of the connection, adding it to the control flow would improve the UX.  For example, if your strategy consists of simply disabling editing, listening for this event would preemptively prevent edit attempts.  You could also improve the accuracy of the status indicator, alerting the user to a local connection issue and reducing the number of pointless \"connecting\" attempts.\n. Your event handler should probably include a time delay, rechecking `navigator.online` a few seconds later to allow for a portable to recover from temporary connection issues (like cycling sleep states or switching connections).\n. It appears as if the code already uses this (but using event handlers instead of check in the global variable), but the implementation is problematic ~as it trusts the \"offline\" signal entirely~.  No it doesn't, misread the code.  I still think 100ms is a bit too eager, I would wait a full second or so.\n\nI now disagree with preventing reconnection attempts based on the status of the global, there are probably edge cases where the offline event would not be reliable.\n. At any rate, please close this ticket.\n. Apparently this also sucked up commits related to blacklisting Ajax URLs.\n\nBefore being added to the held queue, a request is tested against every item in the blacklist array, if there is a match it is prevented from being added to the held array.  If the blacklist item is a string, the test is a simple search of the Ajax URL using indexOf.  If the blacklist item is a regex, it performs a regex.test(URL).\n. Yes, there is also a bug in my blacklist implementation.\n. What's wrong with `dedupeBody`?\n. Given the age of this ticket and the fact that IE8 and IE9 have about 3.5% of the market share, I move to close this unless the the author responds with more information.\n. It stores the requests in [requests.js](https://github.com/HubSpot/offline/blob/master/js/requests.js#L12).  You should be able to check an array of regexes before adding the request to the held array.\n. I've added functionality that checks every request against an array of regular expressions and strings: https://github.com/indolering/offline\n\nI need to write some documentation and run some more tests before I submit a PR.\n. Does this happen on all browsers?  Have you tried it with v0.7?\n. This ticket doesn't make much sense, the JS should be polling the resource over the same connection that fetched the page itself.  A virtual network interface at a much lower level of the network stack.  I vote to close and reopen if the original poster provides additional debugging information.\n. I think I might have actually run into this myself, the server is only available through my work's VPN.  If I disable the VPN, the checks simply don't work.  I haven't bothered to do any wireshark analysis and a manual entry in my hosts.txt file might be the culprit.\n. IE8 has 1.5% of global users and has 6 more months of security updates.  I move to close this ticket and update the README to specify IE9.\n. Please close.\n. Please close.\n. Please close.\n. It should include both.  I got an error when I tried to add a second Uglify task to the [gruntfile](https://github.com/HubSpot/offline/blob/master/Gruntfile.coffee) but it should be trivial for someone who is familiar with Grunt.\n. Are you using any Ajax abstractions (like jQuery) or are you making raw Ajax calls.  If you system has complex semantics, you should probably manually collect user input and create your own recovery function.\n\nAlso, are you really sure you want to allow guests to check-in offline?  What if they don't reconnect by the time they need to literally check in?\n. What check are you using?  There isn't a single definition for being \"offline\" and you need to create a test that offers a meaningful response.\n. While this only checks one aspect of the connection, adding it to the control flow would improve the UX.  For example, if your strategy consists of simply disabling editing, listening for this event would preemptively prevent edit attempts.  You could also improve the accuracy of the status indicator, alerting the user to a local connection issue and reducing the number of pointless \"connecting\" attempts.\n. Your event handler should probably include a time delay, rechecking `navigator.online` a few seconds later to allow for a portable to recover from temporary connection issues (like cycling sleep states or switching connections).\n. It appears as if the code already uses this (but using event handlers instead of check in the global variable), but the implementation is problematic ~as it trusts the \"offline\" signal entirely~.  No it doesn't, misread the code.  I still think 100ms is a bit too eager, I would wait a full second or so.\n\nI now disagree with preventing reconnection attempts based on the status of the global, there are probably edge cases where the offline event would not be reliable.\n. At any rate, please close this ticket.\n. Apparently this also sucked up commits related to blacklisting Ajax URLs.\n\nBefore being added to the held queue, a request is tested against every item in the blacklist array, if there is a match it is prevented from being added to the held array.  If the blacklist item is a string, the test is a simple search of the Ajax URL using indexOf.  If the blacklist item is a regex, it performs a regex.test(URL).\n. Yes, there is also a bug in my blacklist implementation.\n. What's wrong with `dedupeBody`?\n. ",
    "theirf": "For me and for anyone else reading this issue, what exactly is the change I\nneed to make to the css to get it lasting for the 5 seconds?\n\nIn plain CSS not SCSS.\nOn Dec 9, 2013 12:29 PM, \"Adam Schwartz\" notifications@github.com wrote:\n\n> Great!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/HubSpot/offline/issues/32#issuecomment-30152525\n> .\n. For me and for anyone else reading this issue, what exactly is the change I\nneed to make to the css to get it lasting for the 5 seconds?\n\nIn plain CSS not SCSS.\nOn Dec 9, 2013 12:29 PM, \"Adam Schwartz\" notifications@github.com wrote:\n\n> Great!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/HubSpot/offline/issues/32#issuecomment-30152525\n> .\n. ",
    "thomhines": "Thanks for the response. Your reasoning is completely understandable.\n\nIn my case, however, I'm using jQuery's .ajax() function to handle my ajax calls, which I use to send a variety of things to a single php file on my server. The various parameters I'm sending all get sent in the `body` of the `request` object, but the `url` is identical in each ajax call. So they all use the same url/key in the `held` array, and so each overwrites the value of the previous one.\n\nDoes that explanation make sense?\n\nMy goal is to allow my todo list web app to be usable even when the connection is down, which means that a user could possibly be requiring dozens of small ajax commands to run once the connection has been restored. Fortunately, it was a small adjustment to your code to allow this to happen.\n\nThanks again for taking the time to respond.\n. That is, as a matter of fact, exactly what I'm doing. In the course of a minute of being offline, I might make twenty changes to my list, and I want all of them to be saved and run when the network is restored. Fortunately with the changes I made to the script, it now does exactly what I want it to do and saves _all_ changes to my todo lists while offline. Trust me, it is very useful to be able to save all and run all POSTs, and I might even argue that it should be the default. It seems more likely that if a script is making multiple POSTs, there is a reason for each of them.\n. Unfortunately, it's much harder to modify minimifed (.min.js) code to get the results you are looking for. Instead, I used the uncompressed version by downloading and linking to each of the non-compressed javascript files, and then making the modifications to requests.js that I mentioned at the top of this thread.\n\nHowever, it might not be necessary any more... Any word on if this was addressed in the code base? Is this what the 'requests' setting does now? I'm still using an old version so I haven't verified if this feature accomplishes the same thing. \n. It's hard to tell based just on the documentation, and I've got a working version for now, so I don't need to update it for myself. To get a non-minified version, just download all of the .js files in the 'js' folder (excluding snake.js), and link to each page individually. Not ideal, but it works.\n\nIf the 'requests' feature isn't this piece of functionality, I would definitely vote to add it!\n\nGood luck!\n. Happy to help!\n. I haven't made any changes since the steps I laid out in my initial post (Dec. 2013), which may or may not work with the latest build of Offline. However, I just did a test with the most recent build and it seems like the author has built in this feature now and all posts while offline are sent instead of just the last one. \n\nCan someone confirm? If so, we can close this issue.\n\nOf course, it would still be nice to be able to disable the de-duping of posts in case we need to count how many posts were made.\n. Good call! I was considering doing the same thing with local storage, but just ended up using a confirm box to let the user know they'd be losing data if they navigated away from the page. My main concern was that if the user used my app on multiple computers, the data would be out of sync when they returned to the first computer. That said, I would love to have this feature if it's an option! If you end up forking this, let me know.\n\nStrange that you're getting all of the requests but the last one. When I ran my test the other day, it completed all requests just fine. But I only tested it for about 2-3 minutes without sending any real data. \n. Great! Best of luck! Looking forward to seeing more. And thanks to @zackbloom for bringing this feature!\n. Thanks for the response. Your reasoning is completely understandable.\n\nIn my case, however, I'm using jQuery's .ajax() function to handle my ajax calls, which I use to send a variety of things to a single php file on my server. The various parameters I'm sending all get sent in the `body` of the `request` object, but the `url` is identical in each ajax call. So they all use the same url/key in the `held` array, and so each overwrites the value of the previous one.\n\nDoes that explanation make sense?\n\nMy goal is to allow my todo list web app to be usable even when the connection is down, which means that a user could possibly be requiring dozens of small ajax commands to run once the connection has been restored. Fortunately, it was a small adjustment to your code to allow this to happen.\n\nThanks again for taking the time to respond.\n. That is, as a matter of fact, exactly what I'm doing. In the course of a minute of being offline, I might make twenty changes to my list, and I want all of them to be saved and run when the network is restored. Fortunately with the changes I made to the script, it now does exactly what I want it to do and saves _all_ changes to my todo lists while offline. Trust me, it is very useful to be able to save all and run all POSTs, and I might even argue that it should be the default. It seems more likely that if a script is making multiple POSTs, there is a reason for each of them.\n. Unfortunately, it's much harder to modify minimifed (.min.js) code to get the results you are looking for. Instead, I used the uncompressed version by downloading and linking to each of the non-compressed javascript files, and then making the modifications to requests.js that I mentioned at the top of this thread.\n\nHowever, it might not be necessary any more... Any word on if this was addressed in the code base? Is this what the 'requests' setting does now? I'm still using an old version so I haven't verified if this feature accomplishes the same thing. \n. It's hard to tell based just on the documentation, and I've got a working version for now, so I don't need to update it for myself. To get a non-minified version, just download all of the .js files in the 'js' folder (excluding snake.js), and link to each page individually. Not ideal, but it works.\n\nIf the 'requests' feature isn't this piece of functionality, I would definitely vote to add it!\n\nGood luck!\n. Happy to help!\n. I haven't made any changes since the steps I laid out in my initial post (Dec. 2013), which may or may not work with the latest build of Offline. However, I just did a test with the most recent build and it seems like the author has built in this feature now and all posts while offline are sent instead of just the last one. \n\nCan someone confirm? If so, we can close this issue.\n\nOf course, it would still be nice to be able to disable the de-duping of posts in case we need to count how many posts were made.\n. Good call! I was considering doing the same thing with local storage, but just ended up using a confirm box to let the user know they'd be losing data if they navigated away from the page. My main concern was that if the user used my app on multiple computers, the data would be out of sync when they returned to the first computer. That said, I would love to have this feature if it's an option! If you end up forking this, let me know.\n\nStrange that you're getting all of the requests but the last one. When I ran my test the other day, it completed all requests just fine. But I only tested it for about 2-3 minutes without sending any real data. \n. Great! Best of luck! Looking forward to seeing more. And thanks to @zackbloom for bringing this feature!\n. ",
    "martinthogersen": "+1\n\nIt should be possible to enable in the options.\n. +1\n\nIt should be possible to enable in the options.\n. ",
    "lsimoneau": "> if you're making multiple POSTs, you only really want the last one to count\n\nWait, what? I don't think that's right. Let's say I've got the standard to-do list app. I add three to-dos while the app is offline, which are all POST requests to `/todos` (say). Why would I only want to actually save one of them when the app comes back online?\n. > if you're making multiple POSTs, you only really want the last one to count\n\nWait, what? I don't think that's right. Let's say I've got the standard to-do list app. I add three to-dos while the app is offline, which are all POST requests to `/todos` (say). Why would I only want to actually save one of them when the app comes back online?\n. ",
    "heartdev": "@thomhines This is exactly what I want to do.\n\nMaybe I'm missing something, or the release has changed since June, but I cannot find requests.js.\n\nCurrently using the latest version of offline.min.js.\n\nCan someone enlighten me on how to store the POST request for future execution?\n\nThx in advance.\n. Thx Thom.\n\nAs near as I can tell, the 'requests' setting just enables/disables the auto-sending the last request when connected.\n\nI looked for an uncompressed version, but cannot find one now.\n\nI mean, I can brute force store/resend each request myself, but if there was a more elegant solution...\n. Sigh.  Right in front of me.  Thanks Thom!\n. Here is my code:\n\n`var status = Offline.check();`\n`console.log(\"Status of Offline.check()\", status);`\n\nI'm trying to determine whether the system is online or offline before I execute another function call.  What is the best way to do this? \n\nI've tried using Offline.state as well (and in combination with Offline.check()), but I haven't had any luck.  I can cut (or enable) the connection and the system still thinks it's online (or offline).\n. @thomhines This is exactly what I want to do.\n\nMaybe I'm missing something, or the release has changed since June, but I cannot find requests.js.\n\nCurrently using the latest version of offline.min.js.\n\nCan someone enlighten me on how to store the POST request for future execution?\n\nThx in advance.\n. Thx Thom.\n\nAs near as I can tell, the 'requests' setting just enables/disables the auto-sending the last request when connected.\n\nI looked for an uncompressed version, but cannot find one now.\n\nI mean, I can brute force store/resend each request myself, but if there was a more elegant solution...\n. Sigh.  Right in front of me.  Thanks Thom!\n. Here is my code:\n\n`var status = Offline.check();`\n`console.log(\"Status of Offline.check()\", status);`\n\nI'm trying to determine whether the system is online or offline before I execute another function call.  What is the best way to do this? \n\nI've tried using Offline.state as well (and in combination with Offline.check()), but I haven't had any luck.  I can cut (or enable) the connection and the system still thinks it's online (or offline).\n. ",
    "neilRGS": "@thomhines @heartdev  Hi guys.  Did anyone manage to get further on with this?  I have pretty much the same requirement, but for a timekeeping app.\nI am about to launch into an exercise to modify requests.js but if it has already been done by anyone, some hints would be hugely appreciated.\nMy own goal is to write the requests (or body, as the URL and method stay the same) into localStorage.  That way, should the user lose power to their device, or shut it off, localStorage can be used to regain state.  The worst-case is that the user may lose the very last task they were working on, but the other twenty that need uploading will effectively still be queued.\n\nHow did you all get on?\n. Hi Thom.\nIt does return all but the last item in the queue.  I have added 1 to the length check in the for loop on line 53, which solves that:\n  for (_i = 0, _len = itemsToSend.length+1; _i < _len; _i++) {\nI suppose this would also work:\n  for (_i = 0, _len = itemsToSend.length; _i <= _len; _i++) {\n\nAdditionally, in my implementation, I have added all items in the queue to localstorage.  My reason for that is that should the device power down or go to sleep, the memory may be cleared and the queue lost.\nTherefore, instead of the makeRequest() function, I take the data and send it to a separate ajax call instead.\n\nI will also be creating a CRC32 check so that my web service can send a response and I can compare the checks.  That will ensure that I can guarantee that there won't be any broken data sent back to my webservice.\n\nIt would be fantastic if a future version could include that functionality (at least, the localStorage part), as ensuring a robust resume from being offline and powered down is quite important IMHO.\n\nThanks! :-)\n. Hi Thom.\nYes, if I fork it, I'll let you know.  I have been using it for prototyping and a proof of concept project.  It has gone well, so I may be using this library more in the future.\n\nI think, as the main issue has been resolved, that this thread can probably be closed off now.\n\nHave a great weekend,\n\nNeil.\n. @thomhines @heartdev  Hi guys.  Did anyone manage to get further on with this?  I have pretty much the same requirement, but for a timekeeping app.\nI am about to launch into an exercise to modify requests.js but if it has already been done by anyone, some hints would be hugely appreciated.\nMy own goal is to write the requests (or body, as the URL and method stay the same) into localStorage.  That way, should the user lose power to their device, or shut it off, localStorage can be used to regain state.  The worst-case is that the user may lose the very last task they were working on, but the other twenty that need uploading will effectively still be queued.\n\nHow did you all get on?\n. Hi Thom.\nIt does return all but the last item in the queue.  I have added 1 to the length check in the for loop on line 53, which solves that:\n  for (_i = 0, _len = itemsToSend.length+1; _i < _len; _i++) {\nI suppose this would also work:\n  for (_i = 0, _len = itemsToSend.length; _i <= _len; _i++) {\n\nAdditionally, in my implementation, I have added all items in the queue to localstorage.  My reason for that is that should the device power down or go to sleep, the memory may be cleared and the queue lost.\nTherefore, instead of the makeRequest() function, I take the data and send it to a separate ajax call instead.\n\nI will also be creating a CRC32 check so that my web service can send a response and I can compare the checks.  That will ensure that I can guarantee that there won't be any broken data sent back to my webservice.\n\nIt would be fantastic if a future version could include that functionality (at least, the localStorage part), as ensuring a robust resume from being offline and powered down is quite important IMHO.\n\nThanks! :-)\n. Hi Thom.\nYes, if I fork it, I'll let you know.  I have been using it for prototyping and a proof of concept project.  It has gone well, so I may be using this library more in the future.\n\nI think, as the main issue has been resolved, that this thread can probably be closed off now.\n\nHave a great weekend,\n\nNeil.\n. ",
    "MBehtemam": "i try to set url and image to localhost but it say internet connection is correct even when i stop IIS.\n. i try to set url and image to localhost but it say internet connection is correct even when i stop IIS.\n. ",
    "evanjmg": "could you please add a fallback to navigator.onLine for Localhost? This is a huge pain for development. I have to develop on an assigned ip, it makes watching and reloading annoying. \r\n\r\nQUICK SOLUTION: Serve your port over your network - e.g http://192.168.10.113:8888 - on Mac, just type ifconfig and en0 should have your IP. Please put your comment in the readme @zackbloom. Thank you - I spent hours debugging this. . could you please add a fallback to navigator.onLine for Localhost? This is a huge pain for development. I have to develop on an assigned ip, it makes watching and reloading annoying. \r\n\r\nQUICK SOLUTION: Serve your port over your network - e.g http://192.168.10.113:8888 - on Mac, just type ifconfig and en0 should have your IP. Please put your comment in the readme @zackbloom. Thank you - I spent hours debugging this. . ",
    "joewagner": "For IE6, I read something that claimed certain security settings will stop protocol free URLs from working, although i haven't ever tried to reproduce it.  I think that's why Google analytics uses the ternary statement instead of `//`.\n\nFor the file system, its sometimes convenient for people working on html and css not to run a development server.\nI would be fine with either option, and I can update the pull request if the consensus agrees.  @adamschwartz or @zackbloom do you have any thoughts?\n. Anything I can do to get this merged?\n. For IE6, I read something that claimed certain security settings will stop protocol free URLs from working, although i haven't ever tried to reproduce it.  I think that's why Google analytics uses the ternary statement instead of `//`.\n\nFor the file system, its sometimes convenient for people working on html and css not to run a development server.\nI would be fine with either option, and I can update the pull request if the consensus agrees.  @adamschwartz or @zackbloom do you have any thoughts?\n. Anything I can do to get this merged?\n. ",
    "leonzinger": "Figured it out. Seems that because i have extended the Array with a method of my own it screwed up something in the library...\n. Figured it out. Seems that because i have extended the Array with a method of my own it screwed up something in the library...\n. ",
    "bordoni": "@DevDavido any explanation or elaboration on the task please?\n. @DevDavido Got it, thanks.\n. @DevDavido any explanation or elaboration on the task please?\n. @DevDavido Got it, thanks.\n. ",
    "DevDavido": "@bordoni On the end of the README.md is the browser support listed, so it would be great to know how good the support of mobile devices is.\n. @bordoni On the end of the README.md is the browser support listed, so it would be great to know how good the support of mobile devices is.\n. ",
    "JeremyGeros": "Can you not just set interceptRequests to false?\n. Can you not just set interceptRequests to false?\n. ",
    "phani26": "Hi zackbloom,\n\nThis is an issue with IE browser rendered in Quirks mode and this got resolved when i change it to Standard mode.\nThanks for the response.\nDo you have any idea in using alternative to the querySelector property and make it work in Quirks mode?\n. Hi zackbloom,\n\nThis is an issue with IE browser rendered in Quirks mode and this got resolved when i change it to Standard mode.\nThanks for the response.\nDo you have any idea in using alternative to the querySelector property and make it work in Quirks mode?\n. ",
    "juanpujol": "I just found an issue related to this subject. https://github.com/HubSpot/offline/pull/36\n. I just found an issue related to this subject. https://github.com/HubSpot/offline/pull/36\n. ",
    "ghost": "Never mind, it works; the delay was bad and I didn't not realize it!\n. I might be doing something wrong but I think the new version is somewhat broken. on version 0.4.7 all I needed to do is add JS and CSS from the page and it works. The only browser it didn't work was Firefox so I added this: \n   var run = function(){\n        if (Offline.state === 'up')\n            Offline.check();\n    };\n    setInterval(run, 3000);\nand it worked fine everywhere.\n\nOn new version 0.6.0 the code is a must and only works if i use xhr with errors. Image detection does not work anymore. If I put a wrong URL in the \"image: {  url:\" then it will display the notification even I am online but as long as I use older version CSS (new one does not even show up). The old CSS does not show the timer Reconnecting in anymore (instead shows ...).  If the image is correct when it will not show any 404 errors but when I disconnect Internet nothing happens. \n\nI'll try few more things but I am running out of ideas. It simply doesn't work anymore :/\n. Well your solution does work to me. Kinda strange way to do it :) Maybe there will be a better solution in the future. You might be able to add this functionality in the offline.min.js and only set option to chose what u want xhr or image? \n\nThanks for your help. At least temporarily it works now\n. I'll submit .sass file soon as possible.\n. :)\n. - Online\r\n- Loses Connection\r\n- Continues using app and sending requests (usually atomic operations like clock-in clock-out as an example)\r\n- Realizes connection is broken and instinctively refreshes the page\r\n- App may not reload until connection is back (depending on how well you crafted your application for caching etc) but data will be held in local storage and can be sent when connection returns.\r\n. Never mind, it works; the delay was bad and I didn't not realize it!\n. I might be doing something wrong but I think the new version is somewhat broken. on version 0.4.7 all I needed to do is add JS and CSS from the page and it works. The only browser it didn't work was Firefox so I added this: \n   var run = function(){\n        if (Offline.state === 'up')\n            Offline.check();\n    };\n    setInterval(run, 3000);\nand it worked fine everywhere.\n\nOn new version 0.6.0 the code is a must and only works if i use xhr with errors. Image detection does not work anymore. If I put a wrong URL in the \"image: {  url:\" then it will display the notification even I am online but as long as I use older version CSS (new one does not even show up). The old CSS does not show the timer Reconnecting in anymore (instead shows ...).  If the image is correct when it will not show any 404 errors but when I disconnect Internet nothing happens. \n\nI'll try few more things but I am running out of ideas. It simply doesn't work anymore :/\n. Well your solution does work to me. Kinda strange way to do it :) Maybe there will be a better solution in the future. You might be able to add this functionality in the offline.min.js and only set option to chose what u want xhr or image? \n\nThanks for your help. At least temporarily it works now\n. I'll submit .sass file soon as possible.\n. :)\n. - Online\r\n- Loses Connection\r\n- Continues using app and sending requests (usually atomic operations like clock-in clock-out as an example)\r\n- Realizes connection is broken and instinctively refreshes the page\r\n- App may not reload until connection is back (depending on how well you crafted your application for caching etc) but data will be held in local storage and can be sent when connection returns.\r\n. ",
    "rinogo": "@zackbloom - Can you please add this to the Readme?  It currently says that offline.js supports \"Modern Chrome, Firefox, Safari and IE8+\".  If Safari doesn't support offline events, this is only \"kind of\" true; it is definitely misleading.  It would be nice to know of this limitation up front.. Thanks!  And thanks for your work maintaining this library! :). @zackbloom - Can you please add this to the Readme?  It currently says that offline.js supports \"Modern Chrome, Firefox, Safari and IE8+\".  If Safari doesn't support offline events, this is only \"kind of\" true; it is definitely misleading.  It would be nice to know of this limitation up front.. Thanks!  And thanks for your work maintaining this library! :). ",
    "ssetem": "Ok i see you removed it in recent build, but many companies will have apps in production, and its not so quick to update your library through our pipeline. Would you mind allowing access to this cloudfront file for a little bit longer to give time for us to upgrade your library :) (thanks for the work on it btw)\n. thanks for bringing the file back up, we are using 0.4.7 and recieving a 401 response. We have upgraded to 0.6.0 in our dev evironment and it works with 404,401 codes etc \n. Hi, I am still getting 403 access denied response from cloudfront, were you able to restore the file? Thanks\n. Ok i see you removed it in recent build, but many companies will have apps in production, and its not so quick to update your library through our pipeline. Would you mind allowing access to this cloudfront file for a little bit longer to give time for us to upgrade your library :) (thanks for the work on it btw)\n. thanks for bringing the file back up, we are using 0.4.7 and recieving a 401 response. We have upgraded to 0.6.0 in our dev evironment and it works with 404,401 codes etc \n. Hi, I am still getting 403 access denied response from cloudfront, were you able to restore the file? Thanks\n. ",
    "luccastera": "+1 here for putting the file back online for people that have the app in production.\n. +1 here for putting the file back online for people that have the app in production.\n. ",
    "barryvdh": "I wasn't using this in production (yet) luckily, but it does seem a bit strange to break this functionality for all existing apps..\n. The default check is changed to xhr, and the default image/xhr don't exist. So you have to set the options.\n\n```\nchecks: {\n    image: {\n        url: 'my-tiny-image.gif'\n    },\n    active: 'image'\n}\n```\n\nor\n\n```\nchecks: {\n    xhr: {\n        url: 'my-xhr-request'\n    },\n    active: 'xhr'\n}\n```\n. I added this:\n\n```\nOffline.options = {\n    checks: {\n        image: {\n            url: function() {\n               return 'http://my-domain/img/tiny-image.gif?_=' + (Math.floor(Math.random() * 1000000000));\n            }\n        },\n        active: 'image'\n    }\n}\n```\n\nAnd placed the tiny-image.gif on my own domain. When just using a static filename, it only triggers the first check and then loads from cache (I suspect)\n. Yeah it changed with this commit: https://github.com/HubSpot/offline/commit/a8b97735e8ccf360f8415a8281dd5a5e43c8c718\nBut it isn't really clear from the readme that you have to set your own checks, because the default doesn't work anymore..\n. I wasn't using this in production (yet) luckily, but it does seem a bit strange to break this functionality for all existing apps..\n. The default check is changed to xhr, and the default image/xhr don't exist. So you have to set the options.\n\n```\nchecks: {\n    image: {\n        url: 'my-tiny-image.gif'\n    },\n    active: 'image'\n}\n```\n\nor\n\n```\nchecks: {\n    xhr: {\n        url: 'my-xhr-request'\n    },\n    active: 'xhr'\n}\n```\n. I added this:\n\n```\nOffline.options = {\n    checks: {\n        image: {\n            url: function() {\n               return 'http://my-domain/img/tiny-image.gif?_=' + (Math.floor(Math.random() * 1000000000));\n            }\n        },\n        active: 'image'\n    }\n}\n```\n\nAnd placed the tiny-image.gif on my own domain. When just using a static filename, it only triggers the first check and then loads from cache (I suspect)\n. Yeah it changed with this commit: https://github.com/HubSpot/offline/commit/a8b97735e8ccf360f8415a8281dd5a5e43c8c718\nBut it isn't really clear from the readme that you have to set your own checks, because the default doesn't work anymore..\n. ",
    "kcent-hg": "@barryvdh your fix worked for me, thank you! It would certainly be helpful for the docs to be updated to specify the new config requirements.\n\nThanks all!\n. @barryvdh your fix worked for me, thank you! It would certainly be helpful for the docs to be updated to specify the new config requirements.\n\nThanks all!\n. ",
    "gutyril": "This solution does not work for 3G connection, only with Wifi. Do you have any workaround?\n. Sorry, I checked again and effectively I'm getting a 200. Nevertheless, Offline.state is still 'down' when in fact I'm online. I'm using 0.4.7 version. \n\nThis issue didn't exist 6 days ago.\n. This solution does not work for 3G connection, only with Wifi. Do you have any workaround?\n. Sorry, I checked again and effectively I'm getting a 200. Nevertheless, Offline.state is still 'down' when in fact I'm online. I'm using 0.4.7 version. \n\nThis issue didn't exist 6 days ago.\n. ",
    "andygup": "The fix mentioned by @barryvdh also worked for me. We were using the old library are starting getting a ton of 403 errors out the blue. \n. Is there a way to override the checking for /favicon.ico for testing purposes? Otherwise you get something like this, or it finds the ico and the app thinks you are still online:\n\nGET http://web.local/favicon.ico?_=460195474 404 (Not Found) \n\nI'm using the pattern above and I would have thought it would use my URL rather than the default check for the favicon.ico.\n. Note: the error I mention only appears when I first load the app, it also does not seem to affect the overall usage of the offline detector. \n. I think so. Maybe I'm missing something. Here' s psuedo-code version of what I have. I'm using AMD, but I have tried setting the options before the AMD loader as well as after and I still see the favicon.ico called using both approaches.\n\n``` html\n<html>\n<style>stuff</style>\n<script>custom library</script>\n<script>offline.min.js</script>\n<script>\nrequire([\"x\",\"y\",\"domReady!\"],function(x,y){\n     Offline.options = { ... }\n     Offline.check();\n})\n</script>\n```\n. That worked! Thanks.\n. @zackbloom Can you consider reopening this issue? Offline detection is definitely not working for me  on the following using my own app as well as the demo page you mention above:\n\nWindows 7 with Chrome 35 and Safari 5.1.7. (also doesn't work after reloading via application cache while offline)\nGenymotion Android emulator running 4.4.2 on Mac specifically when app is reloaded using an application cache while offline\n\nNote, on my Mac running OSX 10.9.2, Chrome Canary and Safari 7.0.3 seem to work okay. \n\nThis is potentially a showstopper bug for using this library. \n. Yes on Windows.\n\nI'm still digging into what's going on with the Genymotion Android emulator. It appears that running the offline library from the application cache is affecting it somehow. Interestingly, the library's does seem to internally detect an offline condition and it starts trying to make HTTP requests (and they fail) however it doesn't seem to be passed on as an \"up\" or \"down\" event...\n. Quick update. The Windows issue still stands.\n\nI've fixed the Genymotion issue. That was a coding error on my end. The offline detection is working correctly on Android 4.4.2.\n. @zackbloom any chance of reopening this just so others are aware? \n. Yes, the library does. In readme file it says set the following in options:\n\n```\n  // Should we store and attempt to remake requests which fail while the connection is down.\n  requests: true\n\n```\n. The fix mentioned by @barryvdh also worked for me. We were using the old library are starting getting a ton of 403 errors out the blue. \n. Is there a way to override the checking for /favicon.ico for testing purposes? Otherwise you get something like this, or it finds the ico and the app thinks you are still online:\n\nGET http://web.local/favicon.ico?_=460195474 404 (Not Found) \n\nI'm using the pattern above and I would have thought it would use my URL rather than the default check for the favicon.ico.\n. Note: the error I mention only appears when I first load the app, it also does not seem to affect the overall usage of the offline detector. \n. I think so. Maybe I'm missing something. Here' s psuedo-code version of what I have. I'm using AMD, but I have tried setting the options before the AMD loader as well as after and I still see the favicon.ico called using both approaches.\n\n``` html\n<html>\n<style>stuff</style>\n<script>custom library</script>\n<script>offline.min.js</script>\n<script>\nrequire([\"x\",\"y\",\"domReady!\"],function(x,y){\n     Offline.options = { ... }\n     Offline.check();\n})\n</script>\n```\n. That worked! Thanks.\n. @zackbloom Can you consider reopening this issue? Offline detection is definitely not working for me  on the following using my own app as well as the demo page you mention above:\n\nWindows 7 with Chrome 35 and Safari 5.1.7. (also doesn't work after reloading via application cache while offline)\nGenymotion Android emulator running 4.4.2 on Mac specifically when app is reloaded using an application cache while offline\n\nNote, on my Mac running OSX 10.9.2, Chrome Canary and Safari 7.0.3 seem to work okay. \n\nThis is potentially a showstopper bug for using this library. \n. Yes on Windows.\n\nI'm still digging into what's going on with the Genymotion Android emulator. It appears that running the offline library from the application cache is affecting it somehow. Interestingly, the library's does seem to internally detect an offline condition and it starts trying to make HTTP requests (and they fail) however it doesn't seem to be passed on as an \"up\" or \"down\" event...\n. Quick update. The Windows issue still stands.\n\nI've fixed the Genymotion issue. That was a coding error on my end. The offline detection is working correctly on Android 4.4.2.\n. @zackbloom any chance of reopening this just so others are aware? \n. Yes, the library does. In readme file it says set the following in options:\n\n```\n  // Should we store and attempt to remake requests which fail while the connection is down.\n  requests: true\n\n```\n. ",
    "sgringwe": "This is great to see! Excited for completion.\n. This is great to see! Excited for completion.\n. ",
    "silvermanners": "\"The image http://dqakt69vkj09v.cloudfront.net/are-we-online.gif cannot be displayed because it contains errors\"\n. \"The image http://dqakt69vkj09v.cloudfront.net/are-we-online.gif cannot be displayed because it contains errors\"\n. ",
    "craigshoemaker": "I originally implemented the same functionality with a checkbox that rendered in the middle of the page. The nice thing about that was that it made it easy to use with indicators that slide up as well. I could submit another with this approach if you like ;)\n. I have updated the approach to use a [checkbox that renders on the left of the page](https://github.com/craigshoemaker/offline/commit/675d67d5a00805ec468cd109950b2d41b28ca4c2) which works well with all template types.\n\n![image](https://f.cloud.github.com/assets/127797/2442405/c7644a70-ae21-11e3-858f-7fa3832e58b6.png)\n\n![image](https://f.cloud.github.com/assets/127797/2442416/e66e10cc-ae21-11e3-8384-029c77d8b439.png)\n\nI normally wouldn't do this, but I have embedded the style rules in the script just so that developers don't have to add a separate style sheet (or add extra weight to the current ones) just to use this feature. Let me know what you think\n. You got it! Thanks for your consideration :)\n. @zackbloom Here's a link to the respository: http://craigshoemaker.github.io/offlinejs-simulate-ui/\n. thanks, @adamschwartz!\n. Good point. Done :)\n. I originally implemented the same functionality with a checkbox that rendered in the middle of the page. The nice thing about that was that it made it easy to use with indicators that slide up as well. I could submit another with this approach if you like ;)\n. I have updated the approach to use a [checkbox that renders on the left of the page](https://github.com/craigshoemaker/offline/commit/675d67d5a00805ec468cd109950b2d41b28ca4c2) which works well with all template types.\n\n![image](https://f.cloud.github.com/assets/127797/2442405/c7644a70-ae21-11e3-858f-7fa3832e58b6.png)\n\n![image](https://f.cloud.github.com/assets/127797/2442416/e66e10cc-ae21-11e3-8384-029c77d8b439.png)\n\nI normally wouldn't do this, but I have embedded the style rules in the script just so that developers don't have to add a separate style sheet (or add extra weight to the current ones) just to use this feature. Let me know what you think\n. You got it! Thanks for your consideration :)\n. @zackbloom Here's a link to the respository: http://craigshoemaker.github.io/offlinejs-simulate-ui/\n. thanks, @adamschwartz!\n. Good point. Done :)\n. ",
    "tenq": "Thanks, but when I saw that test, even if it is 'down' it does reload\n\n```\nfunction reloadIfUp(){\n    console.log(Offline.state);\n    if (Offline.state == 'up') {\n        console.log(\"up\");\n        location.reload(true);  \n    } else {\n        console.log(\"down\");\n    }\n}\nsetTimeout(function() {\n    console.log(Offline.state);\n        reloadIfUp();\n        setInterval(reloadIfUp, 10 * 1000);\n}, 45 * 1000);\n```\n. Thanks, but when I saw that test, even if it is 'down' it does reload\n\n```\nfunction reloadIfUp(){\n    console.log(Offline.state);\n    if (Offline.state == 'up') {\n        console.log(\"up\");\n        location.reload(true);  \n    } else {\n        console.log(\"down\");\n    }\n}\nsetTimeout(function() {\n    console.log(Offline.state);\n        reloadIfUp();\n        setInterval(reloadIfUp, 10 * 1000);\n}, 45 * 1000);\n```\n. ",
    "ckross01": "Documentation for Firefox offline, https://developer.mozilla.org/en-US/docs/Online_and_offline_events. Looks like they use navigator.onLine  and returns a bool value for its current status.\n\nI will go with the AJAX request approach though. \n. Documentation for Firefox offline, https://developer.mozilla.org/en-US/docs/Online_and_offline_events. Looks like they use navigator.onLine  and returns a bool value for its current status.\n\nI will go with the AJAX request approach though. \n. ",
    "HaoCHEN11": "Same issue. It works well on other browsers except Firefox.\n--It seems like I need to force it to check the connection (Offline.check()) once or twice.\n. Same issue. It works well on other browsers except Firefox.\n--It seems like I need to force it to check the connection (Offline.check()) once or twice.\n. ",
    "blackblood": "I'm getting this issue on chrome too. Anything I'm missing?\n. I'm getting this issue on chrome too. Anything I'm missing?\n. ",
    "elad": "I ran into this as well and see the issue on your landing page (Firefox on Mac). Because I don't need the themes and XHR interception (or snake ;), but I do need online/offline detection that works on Chrome/Firefox, I wrote a little plugin called [ENETDOWN](https://github.com/eladxxx/enetdown). Feel free to use and borrow code from it. (It's meant to be used as the low layer for something like offline.js.)\n. I ran into this as well and see the issue on your landing page (Firefox on Mac). Because I don't need the themes and XHR interception (or snake ;), but I do need online/offline detection that works on Chrome/Firefox, I wrote a little plugin called [ENETDOWN](https://github.com/eladxxx/enetdown). Feel free to use and borrow code from it. (It's meant to be used as the low layer for something like offline.js.)\n. ",
    "macool": "@zackbloom check http://bandango.shiriculapo.com. You can login with **admin** - **Admin123**\n. :+1: \n. @zackbloom check http://bandango.shiriculapo.com. You can login with **admin** - **Admin123**\n. :+1: \n. ",
    "alexanderjohn": "I am also having this same issue.  Even when specifying both:\ninterceptRequests : false,\nrequests : false,\n. I am also having this same issue.  Even when specifying both:\ninterceptRequests : false,\nrequests : false,\n. ",
    "ephillipe": "I'm too.\n. I'm too.\n. ",
    "MichaReiser": "I expect that the issue is on line 239. \n\nOffline.confirmUp = Offline.confirmDown = Offline.check;\n\nconfirmUp is bound to check. So when we know we are online, we check it anyway... I expect that it should work correctly if Offline.confirmUp is bound to Offline.markUp...\n. I expect that the issue is on line 239. \n\nOffline.confirmUp = Offline.confirmDown = Offline.check;\n\nconfirmUp is bound to check. So when we know we are online, we check it anyway... I expect that it should work correctly if Offline.confirmUp is bound to Offline.markUp...\n. ",
    "jabbett": "This thread would suggest that a fix was merged -- when will the next release occur?\n. Same issue here.\n. This thread would suggest that a fix was merged -- when will the next release occur?\n. Same issue here.\n. ",
    "brutalhonesty": "Thanks!\n. Thanks!\n. ",
    "dtognazzini": "I've ran into this issue as well. Seems pretty broken.\n. I've ran into this issue as well. Seems pretty broken.\n. ",
    "scp": "Yup, still broken in latest build.\n. Yup, still broken in latest build.\n. ",
    "rastographics": "I'm having this exact problem. Because of my app design, I have to send a call to persist all changes to server. When \"requests\" is enabled in OfflineJs, it causes all my changes to be duplicated. \nLife would be so much easier if this feature could really be disabled as it says is possible in the documentation.\n. I'm having this exact problem. Because of my app design, I have to send a call to persist all changes to server. When \"requests\" is enabled in OfflineJs, it causes all my changes to be duplicated. \nLife would be so much easier if this feature could really be disabled as it says is possible in the documentation.\n. ",
    "vivex": "Now it seems to be fixed, so close this issue :)\n. Adding this code worked fine for me,\n\nif (navigator.userAgent.indexOf(\"Firefox\") > 0) {\nconsole.log(\"Its FireFox\");\nsetInterval(function(){\n  Offline.check();\n}, 5000);\n}\n\nNow its working fine with firefox also.\n. Any reply or feedback?\n. Now it seems to be fixed, so close this issue :)\n. Adding this code worked fine for me,\n\nif (navigator.userAgent.indexOf(\"Firefox\") > 0) {\nconsole.log(\"Its FireFox\");\nsetInterval(function(){\n  Offline.check();\n}, 5000);\n}\n\nNow its working fine with firefox also.\n. Any reply or feedback?\n. ",
    "rawls238": "This was fixed here: https://github.com/HubSpot/offline/pull/163 so closing. Please comment if this is still an issue\n. can you rebase this off master so we can merge this in?\n. sorry but can you do it again, the transpiled javascript file is annoying. \n. yea looks good\n. I believe that https://github.com/HubSpot/offline/commit/252f54c50dc71f5e5d7b6e19828df3949ecd617c fixes this issue\n. did you manage to figure this out? can we close this issue?\n. german translations are now included in this project so closing this\n. Issue #99 seems to be closed so closing this PR. Regardless, I disagree that only a 502 should be the only HTTP status code that is treated as a down state.\n. can you please include the compiled css?\n. I've included these changes in this commit https://github.com/HubSpot/offline/commit/938749d899dcf5592c6bb763fcde8a9a6ff42187. Thanks for this.\n. thanks for doing this, but can you please check in the corresponding sass files?\n. added in https://github.com/HubSpot/offline/pull/154\n. added in https://github.com/HubSpot/offline/pull/154\n. Dutch translations now exist in the project\n. thank you for doing this\n. could you please also check in the corresponding sass files?\n. added in https://github.com/HubSpot/offline/pull/154. Thanks for the translations\n. https://github.com/HubSpot/offline/pull/148 should have fixed this issue\n. I'll take a look into this\n. can you please check in the changes to the coffeescript as well the minified js file?\n. this is a good change, but can you run grunt so that when this pull request is merged in it includes the updated transpiled js files as well?\n. https://github.com/HubSpot/offline/pull/75/files \n\nI think this PR should have done the trick? Let me know if there's anything else needed to close this.\n. the referenced issue is closed since this will only be a problem when a web page makes no network requests but for whatever reason needs offline detection. I think that if developers really want this they should have to add it in on their own and not have to rely on the library for it. Since @zackbloom is the one that mentioned this, I'll leave it to him to decide if this should be merged or closed.\n. I'd argue that any 5xx state should be considered down. A 500, 502, and 504 are all reasonable response codes to consider a server \"down\". The corresponding issue is closed so closing this PR\n. can you please add the blacklist change in a separate PR?\n. this looks good to me. @benurb do you think we should be adding any additional places where consumers can potentially store this kind of state?\n. lgtm\n. I think just shimming it if it doesn't exist is the best way to go, feel free to PR it\n. this looks good, can you rebase this and we can merge this in?\n. @icenine457 i'm going to put this on a separate branch\n. this should contain your fix, thanks for doing this: https://github.com/HubSpot/offline/pull/163\n. deDupBody is a bad name...let me know if anyone has any better ones\n. thank you for the translations @umutc. I've added the relevant sass files derived from the translation you posted last year and am going to merge this in.\n. @zackbloom can you do this? I would but I don't have permissions to publish to npm for this project\n. thanks for catching this, the v0.7.14 tag was created and the link should work now.\n. this seems good to me. Could you rebase off master and re-run grunt?\n. this seems good to me but could you also add the new minified file (unless it's the same or something?)?\n. This was fixed here: https://github.com/HubSpot/offline/pull/163 so closing. Please comment if this is still an issue\n. can you rebase this off master so we can merge this in?\n. sorry but can you do it again, the transpiled javascript file is annoying. \n. yea looks good\n. I believe that https://github.com/HubSpot/offline/commit/252f54c50dc71f5e5d7b6e19828df3949ecd617c fixes this issue\n. did you manage to figure this out? can we close this issue?\n. german translations are now included in this project so closing this\n. Issue #99 seems to be closed so closing this PR. Regardless, I disagree that only a 502 should be the only HTTP status code that is treated as a down state.\n. can you please include the compiled css?\n. I've included these changes in this commit https://github.com/HubSpot/offline/commit/938749d899dcf5592c6bb763fcde8a9a6ff42187. Thanks for this.\n. thanks for doing this, but can you please check in the corresponding sass files?\n. added in https://github.com/HubSpot/offline/pull/154\n. added in https://github.com/HubSpot/offline/pull/154\n. Dutch translations now exist in the project\n. thank you for doing this\n. could you please also check in the corresponding sass files?\n. added in https://github.com/HubSpot/offline/pull/154. Thanks for the translations\n. https://github.com/HubSpot/offline/pull/148 should have fixed this issue\n. I'll take a look into this\n. can you please check in the changes to the coffeescript as well the minified js file?\n. this is a good change, but can you run grunt so that when this pull request is merged in it includes the updated transpiled js files as well?\n. https://github.com/HubSpot/offline/pull/75/files \n\nI think this PR should have done the trick? Let me know if there's anything else needed to close this.\n. the referenced issue is closed since this will only be a problem when a web page makes no network requests but for whatever reason needs offline detection. I think that if developers really want this they should have to add it in on their own and not have to rely on the library for it. Since @zackbloom is the one that mentioned this, I'll leave it to him to decide if this should be merged or closed.\n. I'd argue that any 5xx state should be considered down. A 500, 502, and 504 are all reasonable response codes to consider a server \"down\". The corresponding issue is closed so closing this PR\n. can you please add the blacklist change in a separate PR?\n. this looks good to me. @benurb do you think we should be adding any additional places where consumers can potentially store this kind of state?\n. lgtm\n. I think just shimming it if it doesn't exist is the best way to go, feel free to PR it\n. this looks good, can you rebase this and we can merge this in?\n. @icenine457 i'm going to put this on a separate branch\n. this should contain your fix, thanks for doing this: https://github.com/HubSpot/offline/pull/163\n. deDupBody is a bad name...let me know if anyone has any better ones\n. thank you for the translations @umutc. I've added the relevant sass files derived from the translation you posted last year and am going to merge this in.\n. @zackbloom can you do this? I would but I don't have permissions to publish to npm for this project\n. thanks for catching this, the v0.7.14 tag was created and the link should work now.\n. this seems good to me. Could you rebase off master and re-run grunt?\n. this seems good to me but could you also add the new minified file (unless it's the same or something?)?\n. ",
    "matghaleb": "it should be ok\n. is it ok for you ?\n. it should be ok\n. is it ok for you ?\n. ",
    "dtanquary": "+1\nSpent a while spinning my wheels before I stumbled onto the language files. A note in the docs about requiring them would be great for future users.\n. +1\nSpent a while spinning my wheels before I stumbled onto the language files. A note in the docs about requiring them would be great for future users.\n. ",
    "sdemjanenko": "+1\n. +1\n. ",
    "roydejong": "Ok so I'm blind and just realised you use sass. Nevermind :)\n. Ok so I'm blind and just realised you use sass. Nevermind :)\n. ",
    "jtomaszewski": "+1. Working. Merge it, please ;p (and update offline.min.js)\n. Can we merge it finally, please? Or has it been fixed with https://github.com/HubSpot/offline/commit/252f54c50dc71f5e5d7b6e19828df3949ecd617c ?\n. +1. Working. Merge it, please ;p (and update offline.min.js)\n. Can we merge it finally, please? Or has it been fixed with https://github.com/HubSpot/offline/commit/252f54c50dc71f5e5d7b6e19828df3949ecd617c ?\n. ",
    "Elyx0": "+1. Merge would be appreciated !\n. +1. Merge would be appreciated !\n. ",
    "saadahmedkhan": "I am looking for the same thing. Seems there isn't any way to get our request completion code executed.\n. I am having the same issue. Thanks, ghosthoughts for further elaborating it.\n\nHow can we fire 'success' or 'done' callback whenever the internet connection is restored and cached requests are fired by Offline?\n. I am looking for the same thing. Seems there isn't any way to get our request completion code executed.\n. I am having the same issue. Thanks, ghosthoughts for further elaborating it.\n\nHow can we fire 'success' or 'done' callback whenever the internet connection is restored and cached requests are fired by Offline?\n. ",
    "apeniche": "Any luck?\n. Any luck?\n. ",
    "zachrybaker": "This kinda seems like a big deal.\n. Bummer, this kinda seems like a big deal.\n. This kinda seems like a big deal.\n. Bummer, this kinda seems like a big deal.\n. ",
    "maxpaynestory": "Also not working with Firefox 31.0 on Windows.\n. Also not working with Firefox 31.0 on Windows.\n. ",
    "yannyannyann": "I have issues too with  http://github.hubspot.com/offline/docs/welcome/\n- In Firefox 28:\n  I load the page, then I disconnect my PC and then I have no message displayed, no request done (Firebug Network tab shows no activity).\n- In Internet Explorer 11:\n  when I disconnect, then the message appears, and it does requests to find out if the connection is active again, so that's fine. \n  But after 4 trials, once I connect my computer to Internet again, then it just stays in the loop of reconnections...  and in the developer debug panel I see that the HEAD method returns 0, not 200. (see attached screenshot)\n\n![down](https://cloud.githubusercontent.com/assets/264631/3965398/51330000-2796-11e4-91a5-69f20b502442.JPG)\n. I have issues too with  http://github.hubspot.com/offline/docs/welcome/\n- In Firefox 28:\n  I load the page, then I disconnect my PC and then I have no message displayed, no request done (Firebug Network tab shows no activity).\n- In Internet Explorer 11:\n  when I disconnect, then the message appears, and it does requests to find out if the connection is active again, so that's fine. \n  But after 4 trials, once I connect my computer to Internet again, then it just stays in the loop of reconnections...  and in the developer debug panel I see that the HEAD method returns 0, not 200. (see attached screenshot)\n\n![down](https://cloud.githubusercontent.com/assets/264631/3965398/51330000-2796-11e4-91a5-69f20b502442.JPG)\n. ",
    "hablutzel1": "Where's the +1 button?\n. Where's the +1 button?\n. ",
    "nadeemja": "Still does not work with firefox. Using Firefox 36 and Offline 0.7.10.\n. Still does not work with firefox. Using Firefox 36 and Offline 0.7.10.\n. ",
    "sweh": "Doesn't work for me, too. Is this project dead?\n. Hi,\n\nwell, those events are working, at least on the Mozilla Developer Network. Just have a look at https://developer.mozilla.org/en-US/docs/Online_and_offline_events in the latest Firefox, there is a JS Test which works great when switching between Online and Offline mode. Could you update Offline.js to support the Firefox behavior?\n\nThanks a lot,\n  Sebastian\n. No, the Fiddle does not work for me. Does the MDN-\"Fiddle\" work for you?\n. And even JSFiddle recognizes going into Offline-Mode immediately and gives me a JS-Popup asking if I know what I'm doing.\n. Here is a working example: https://bug336359.bugzilla.mozilla.org/attachment.cgi?id=220609 I don't get it to work in JSFiddle, I assume JSFiddle is not the right place for those kind of tests. But this example is definitely working in FF36 and OS X (Yosemite).\n\nThe difference to me is, that the events are bind to document.body. Maybe they do no longer toggle to the window properly in firefox.\n. Oh, you are disabling your internet connection. This is not what I meant but what is meant in this ticket, sorry for that mess. To make the Mozzilla Demo work, in Firefox menu, go to \"File\" and select \"Work offline\" or \"Offline mode\" (I don't know the right english version, working with a german translation here). This puts the Browser in Offline mode, which is different to \"going really offline\" but in terms of Offline.js should do exactly the same: report that we are offline.\n. Doesn't work for me, too. Is this project dead?\n. Hi,\n\nwell, those events are working, at least on the Mozilla Developer Network. Just have a look at https://developer.mozilla.org/en-US/docs/Online_and_offline_events in the latest Firefox, there is a JS Test which works great when switching between Online and Offline mode. Could you update Offline.js to support the Firefox behavior?\n\nThanks a lot,\n  Sebastian\n. No, the Fiddle does not work for me. Does the MDN-\"Fiddle\" work for you?\n. And even JSFiddle recognizes going into Offline-Mode immediately and gives me a JS-Popup asking if I know what I'm doing.\n. Here is a working example: https://bug336359.bugzilla.mozilla.org/attachment.cgi?id=220609 I don't get it to work in JSFiddle, I assume JSFiddle is not the right place for those kind of tests. But this example is definitely working in FF36 and OS X (Yosemite).\n\nThe difference to me is, that the events are bind to document.body. Maybe they do no longer toggle to the window properly in firefox.\n. Oh, you are disabling your internet connection. This is not what I meant but what is meant in this ticket, sorry for that mess. To make the Mozzilla Demo work, in Firefox menu, go to \"File\" and select \"Work offline\" or \"Offline mode\" (I don't know the right english version, working with a german translation here). This puts the Browser in Offline mode, which is different to \"going really offline\" but in terms of Offline.js should do exactly the same: report that we are offline.\n. ",
    "mrothenbuecher": "done.\n. done.\n. ",
    "dhatch": ":+1:\n. :+1:\n. ",
    "benurb": "It would still be a good idea to have a withoutUI option, because even without the CSS files offline.js appends nodes to the DOM. Imho that's not a desired behavior if you only want the JS API. What do you think?\n. It would still be a good idea to have a withoutUI option, because even without the CSS files offline.js appends nodes to the DOM. Imho that's not a desired behavior if you only want the JS API. What do you think?\n. ",
    "ghplink": "I partially disagree. Users (that means client side) should be informed correctly about the accessibility of 'their' application server (meaning the server with the business logic). In the scenario described this is the tomcat server. I think, state of technical network connectivity is not enough, neither for software clients nor end users.\n. I partially disagree. Users (that means client side) should be informed correctly about the accessibility of 'their' application server (meaning the server with the business logic). In the scenario described this is the tomcat server. I think, state of technical network connectivity is not enough, neither for software clients nor end users.\n. ",
    "gustavomick": "sorry but i dont get it, why offlinejs cant provide both solutions (sever and client check)? \nwhat about adding response.status to result event like confirmed-up / confirmed-down or better create confirmed event with http status and let use it. \nnice lib thanks.\n. sorry but i dont get it, why offlinejs cant provide both solutions (sever and client check)? \nwhat about adding response.status to result event like confirmed-up / confirmed-down or better create confirmed event with http status and let use it. \nnice lib thanks.\n. ",
    "maurocolella": "Yeah, I have a similar problem with the latest build as well.\n. Actually, I spoke too early: I was trying to use Offline.js as a requirejs \"shim\" module. Which kind of looped over itself - Offline tried to hook into the ajax requests that requirejs was making to, well... initialize itself.\n\nI moved offline.js as the latest script on my page, before the closing body tag, and for me the issue is resolved.\n. Yeah, I have a similar problem with the latest build as well.\n. Actually, I spoke too early: I was trying to use Offline.js as a requirejs \"shim\" module. Which kind of looped over itself - Offline tried to hook into the ajax requests that requirejs was making to, well... initialize itself.\n\nI moved offline.js as the latest script on my page, before the closing body tag, and for me the issue is resolved.\n. ",
    "JobaDiniz": "That didn't resolve for me... I'm not using requirejs... my app is built on angularjs.\n\nOne other thing to notice, is that the releases are a bit confusing... the file name is 0.7.X and the contents of the file have a comment indicating the version like 0.7.Y.. I mean, the file and the content doesn't match.\n. +1\n. That didn't resolve for me... I'm not using requirejs... my app is built on angularjs.\n\nOne other thing to notice, is that the releases are a bit confusing... the file name is 0.7.X and the contents of the file have a comment indicating the version like 0.7.Y.. I mean, the file and the content doesn't match.\n. +1\n. ",
    "justin808": "Are there any instructions for using this with require.js?\n. Are there any instructions for using this with require.js?\n. ",
    "nealeu": "For nicer usage, Offline.js would benefit from refactoring to ES6 module style (that'd be a lovely pull request :)\n\nI found this article relating to using Offline.js: http://zen-and-art-of-programming.blogspot.co.uk/2014_04_01_archive.html, which uses offline via a shim.\n\nYou can also set it up via the init methods of the shim as below.\n\nNote: I'm disabling anything AJAX related as I want my application working without meddling of AJAX requests, but also, I'm still finding some issues in getting things going reliably.\n\nThis will get the indicator working, although I'm finding... not on every page load.  I suspect there's a timing issue I need to track down.\n\n```\nrequirejs.config({\n        baseUrl: \"your/base/\",\n        paths: {\n            \"offline-js\": \"lib/offline.min\",\n        },    \n        shim: {\n            \"offline-js\" : {\n                exports: \"Offline\",\n                init: function() {\n                    Offline.options = {\n                        interceptRequests: false,\n                        requests: false\n                    };\n                }\n            },\n            \"app/NetworkStuff\": [\"offline-js\"], // example module for when you want offline-js loaded\n        }\n    }\n```\n. For nicer usage, Offline.js would benefit from refactoring to ES6 module style (that'd be a lovely pull request :)\n\nI found this article relating to using Offline.js: http://zen-and-art-of-programming.blogspot.co.uk/2014_04_01_archive.html, which uses offline via a shim.\n\nYou can also set it up via the init methods of the shim as below.\n\nNote: I'm disabling anything AJAX related as I want my application working without meddling of AJAX requests, but also, I'm still finding some issues in getting things going reliably.\n\nThis will get the indicator working, although I'm finding... not on every page load.  I suspect there's a timing issue I need to track down.\n\n```\nrequirejs.config({\n        baseUrl: \"your/base/\",\n        paths: {\n            \"offline-js\": \"lib/offline.min\",\n        },    \n        shim: {\n            \"offline-js\" : {\n                exports: \"Offline\",\n                init: function() {\n                    Offline.options = {\n                        interceptRequests: false,\n                        requests: false\n                    };\n                }\n            },\n            \"app/NetworkStuff\": [\"offline-js\"], // example module for when you want offline-js loaded\n        }\n    }\n```\n. ",
    "geoffcallender": "Possibly addressed by https://github.com/HubSpot/offline/issues/209 .\n. If it's AMD loaded then it will probably run after DOMContentLoaded better - so this issue will have to be catered for: https://github.com/HubSpot/offline/issues/209 .\n. Possibly a consequence of https://github.com/HubSpot/offline/issues/209 ?\n. Possibly addressed by https://github.com/HubSpot/offline/issues/209 .\n. If it's AMD loaded then it will probably run after DOMContentLoaded better - so this issue will have to be catered for: https://github.com/HubSpot/offline/issues/209 .\n. Possibly a consequence of https://github.com/HubSpot/offline/issues/209 ?\n. ",
    "imrefazekas": "+1\nEven with shimming, it does not work...\n. +1\nEven with shimming, it does not work...\n. ",
    "slorber": "@zackbloom nice but maybe we could have a better integration for Browserify because the code does not seem to be exported and there is no `index.js`\n\nHowever it still works for me with:\n\n`require(\"offline-js/js/offline\");` and then accessing Offline as a global variable\n. @zackbloom nice but maybe we could have a better integration for Browserify because the code does not seem to be exported and there is no `index.js`\n\nHowever it still works for me with:\n\n`require(\"offline-js/js/offline\");` and then accessing Offline as a global variable\n. ",
    "megawac": "+1 mind adding the commonJS/AMD wrapper (https://github.com/umdjs/umd/blob/master/returnExports.js#L41-60)\n. +1 mind adding the commonJS/AMD wrapper (https://github.com/umdjs/umd/blob/master/returnExports.js#L41-60)\n. ",
    "jamuhl": "+1\n. +1\n. ",
    "anthonator": ":+1: \n. :+1: \n. :+1: \n. :+1: \n. ",
    "throrin19": "+1\n. +1 it's really bad because now many people create front code with browserify to have commonJS support or RequireJS for AMD support\n. With browserify, I use offline.js like this and it works (but it's too bad to pass by `window`) : \n\n``` javascript\nrequire('offline-js/js/offline');\n\nwindow.Offline.check();\n```\n. +1\n. +1 it's really bad because now many people create front code with browserify to have commonJS support or RequireJS for AMD support\n. With browserify, I use offline.js like this and it works (but it's too bad to pass by `window`) : \n\n``` javascript\nrequire('offline-js/js/offline');\n\nwindow.Offline.check();\n```\n. ",
    "randallm": "Looking into issues with using `width` instead of detecting `naturalWidth`. Closing this temporarily.\n. Looking into issues with using `width` instead of detecting `naturalWidth`. Closing this temporarily.\n. ",
    "khankuan": "Just to clarify, I had a situation where I would like to stop the app entirely, and so offline up or down should not be displayed anymore. As I have my own error message, the user will be confused reading my error message while Offline is displaying the reconnecting or connected prompt. \n\nCheers! ;)\n. Just to clarify, I had a situation where I would like to stop the app entirely, and so offline up or down should not be displayed anymore. As I have my own error message, the user will be confused reading my error message while Offline is displaying the reconnecting or connected prompt. \n\nCheers! ;)\n. ",
    "asabhaney": "+1\n. +1\n. ",
    "anoc": "I had no problems, but needed to remove the FALLBACK:\ntotally from the manifest file.\nHowever you will come to serious problems if you use this to save data and the browser closes before becoming online - data will lost\n. I had no problems, but needed to remove the FALLBACK:\ntotally from the manifest file.\nHowever you will come to serious problems if you use this to save data and the browser closes before becoming online - data will lost\n. ",
    "hhermsen": "You can do checks on any resources you would want, also resources in a local network (if available).\n. You can do checks on any resources you would want, also resources in a local network (if available).\n. ",
    "jeremyforan": "I have experienced the same behaviour \n. I have experienced the same behaviour \n. ",
    "Southpaw17": "I have witnessed this same issue.  Is there any resolution for it?\n. These properties work well when determining if the client has an active internet connection, but are not so good for determining if the user can actually talk to your server.  For example, if the user has an active network connection but our servers are offline for some reason, we would want the client-side application to behave as if it's offline.  This can only really be accomplished by poking the server to see if you can successfully communicate with it.\n. I have witnessed this same issue.  Is there any resolution for it?\n. These properties work well when determining if the client has an active internet connection, but are not so good for determining if the user can actually talk to your server.  For example, if the user has an active network connection but our servers are offline for some reason, we would want the client-side application to behave as if it's offline.  This can only really be accomplished by poking the server to see if you can successfully communicate with it.\n. ",
    "dough10": "also attempted to use this package in a chrome packaged app and had same results.\n. also attempted to use this package in a chrome packaged app and had same results.\n. ",
    "nonameolsson": "+1 \nI also get this error when loading a website in a WebView in an Android app\n. +1 \nI also get this error when loading a website in a WebView in an Android app\n. ",
    "Nibler9000": "Some details:\n\nWhen Google Translate is activated on a website. Go to http://rcbcontracts.webklik.nl/page/translate for an example.\n. Some details:\n\nWhen Google Translate is activated on a website. Go to http://rcbcontracts.webklik.nl/page/translate for an example.\n. ",
    "Hesesses": "Does anyone have any working solution for firing an event after successful ajax request after becoming online again?\n. Does anyone have any working solution for firing an event after successful ajax request after becoming online again?\n. ",
    "jayesh-bhoot": "I am facing a similar problem. My app has 2 chained ajax calls, in which the second call is fired in the success function of the first call.\nNow, offline.js re-executes a failed, first ajax call. However, while the server registers this re-execution, it seems that the success function is not being called.\n\nIs there something we are missing here?\n. Thanks for the quick response @zackbloom. Let me think of a way to provide you an example, but I forgot to include one important piece of information. I am using `jQuery`'s `$.ajax()` function to accomplish ajax calls. As you would know, `$.ajax()` provides several ways to handle server response, out of which the usage of `success: function()` and `statusCode: {}` usages failed.\n\nThis might be a crucial info for you, or not.\n. On inspecting the codebase of `requests.js`, I found that it does seem to store the callback function through `onreadystatechange`.\nHowever, I am not aware how `jQuery.ajax` processes an AJAX call. So, this might be a general question of using `offline.js` with `jQuery`.\n. OK. I have managed to write a jsfiddle that reproduces the issue: http://jsfiddle.net/gk2x0d54/20/\n1. You may test the script execution by clicking on 'Click Me' button. That will fetch the jsfiddle page itself using ajax request, and on success, prints 'success' in `span`, or prints 'error' on failure.\n2. After confirming the script runs sound, disable the internet connection and then click on 'Click me' button again. `Offline` detects the no-connection alright, and prints the message in `textarea`. Also, the request is 'cached' by `Offline`. Now, enabling internet again will make `Offline` print the appropriate message, and then executing the cached request. However, the request's `success` or `done` callback is not executed. So, the `span` is not updated with 'success' message.\n\nI hope this is all comprehensible, as I am in haste right now.\n. I am facing a similar problem. My app has 2 chained ajax calls, in which the second call is fired in the success function of the first call.\nNow, offline.js re-executes a failed, first ajax call. However, while the server registers this re-execution, it seems that the success function is not being called.\n\nIs there something we are missing here?\n. Thanks for the quick response @zackbloom. Let me think of a way to provide you an example, but I forgot to include one important piece of information. I am using `jQuery`'s `$.ajax()` function to accomplish ajax calls. As you would know, `$.ajax()` provides several ways to handle server response, out of which the usage of `success: function()` and `statusCode: {}` usages failed.\n\nThis might be a crucial info for you, or not.\n. On inspecting the codebase of `requests.js`, I found that it does seem to store the callback function through `onreadystatechange`.\nHowever, I am not aware how `jQuery.ajax` processes an AJAX call. So, this might be a general question of using `offline.js` with `jQuery`.\n. OK. I have managed to write a jsfiddle that reproduces the issue: http://jsfiddle.net/gk2x0d54/20/\n1. You may test the script execution by clicking on 'Click Me' button. That will fetch the jsfiddle page itself using ajax request, and on success, prints 'success' in `span`, or prints 'error' on failure.\n2. After confirming the script runs sound, disable the internet connection and then click on 'Click me' button again. `Offline` detects the no-connection alright, and prints the message in `textarea`. Also, the request is 'cached' by `Offline`. Now, enabling internet again will make `Offline` print the appropriate message, and then executing the cached request. However, the request's `success` or `done` callback is not executed. So, the `span` is not updated with 'success' message.\n\nI hope this is all comprehensible, as I am in haste right now.\n. ",
    "ametad": "+1\n. It is normal behavior that the promise 'done' of the AJAX call in jQuery code is fired once. That is intended. But it would be nice that somehow all attached functions on promises are copied with the cached failed AJAX calls. So that once called again the attached functions also works.\n. +1\n. It is normal behavior that the promise 'done' of the AJAX call in jQuery code is fired once. That is intended. But it would be nice that somehow all attached functions on promises are copied with the cached failed AJAX calls. So that once called again the attached functions also works.\n. ",
    "pthorson": "I think I have the same issue. I can see after coming back online, the request is sent and and the server returns with `<partial-response><changes><update id=\"form\"> ...` but the update is not made to the UI.\n. So my thought here is that the JS defining the functions that need to be called to refresh the UI are being loaded before the offline.js.. I am using primefaces which inserts its own js and jquery in the head, so I'll have to investigate how to get offline.js to be loaded first, but I thought I'd mention this in case that helps anyone else.\n. Not sure it was related but there was a pull request to change the remaining instances of addEventListener to on() syntax to support IE8.\n. I think I have the same issue. I can see after coming back online, the request is sent and and the server returns with `<partial-response><changes><update id=\"form\"> ...` but the update is not made to the UI.\n. So my thought here is that the JS defining the functions that need to be called to refresh the UI are being loaded before the offline.js.. I am using primefaces which inserts its own js and jquery in the head, so I'll have to investigate how to get offline.js to be loaded first, but I thought I'd mention this in case that helps anyone else.\n. Not sure it was related but there was a pull request to change the remaining instances of addEventListener to on() syntax to support IE8.\n. ",
    "jadus": "Any news about this ?\n. Any news about this ?\n. ",
    "moosicalbovine": "I see that this issue has been reported more than a year ago. Offline is a great library and we have found a workaround for this issue in our project - but it would be better, if this issue could be resolved.....\n. I see that this issue has been reported more than a year ago. Offline is a great library and we have found a workaround for this issue in our project - but it would be better, if this issue could be resolved.....\n. ",
    "sahil290791": "Is it that when we set the requests option to **true**, offline stores the request alone(like url with data) and not **success and error functions** which are suppose to run(handle the response given by the request) on completion of AJAX call ?\nIn web application frameworks like Ruby on Rails I can overcome this by adding success/error functions to a file in views, for e.g. in a file: **ajax_response.js.erb**, which handles the response part of the AJAX call made.\n. Is it that when we set the requests option to **true**, offline stores the request alone(like url with data) and not **success and error functions** which are suppose to run(handle the response given by the request) on completion of AJAX call ?\nIn web application frameworks like Ruby on Rails I can overcome this by adding success/error functions to a file in views, for e.g. in a file: **ajax_response.js.erb**, which handles the response part of the AJAX call made.\n. ",
    "nosretep": "+1\n. +1\n. ",
    "iskandar": "`Offline.check()` is not synchronous, so you'll probably want to wrap it into a promise. \n\nHere's a simple example. Note that `$q` is the angular promise library.\n\n``` javascript\nfunction check() {\n  var request = Offline.check();\n\n  var deferred = $q.defer();\n  request.onreadystatechange = function(e) {\n    if (request.readyState !== 4) {\n      return;\n    }\n    if ([200,304].indexOf(request.status) === -1) {\n      deferred.reject(new Error('Server responded with a status of ' + request.status));\n    } else {\n      deferred.resolve(request);\n    }\n  };\n  return deferred.promise;\n}\n\n```\n\nYou could then use the `check()` method like this:\n\n``` javascript\ncheck().then(function(request) {\n  console.debug(\"Connected, XHR is\", request);\n}, function(error) {\n  console.debug(\"NOT Connected, error is\", error);\n});\n```\n\nPromise-wrapper from https://gist.github.com/matthewp/3099268\n. `Offline.check()` is not synchronous, so you'll probably want to wrap it into a promise. \n\nHere's a simple example. Note that `$q` is the angular promise library.\n\n``` javascript\nfunction check() {\n  var request = Offline.check();\n\n  var deferred = $q.defer();\n  request.onreadystatechange = function(e) {\n    if (request.readyState !== 4) {\n      return;\n    }\n    if ([200,304].indexOf(request.status) === -1) {\n      deferred.reject(new Error('Server responded with a status of ' + request.status));\n    } else {\n      deferred.resolve(request);\n    }\n  };\n  return deferred.promise;\n}\n\n```\n\nYou could then use the `check()` method like this:\n\n``` javascript\ncheck().then(function(request) {\n  console.debug(\"Connected, XHR is\", request);\n}, function(error) {\n  console.debug(\"NOT Connected, error is\", error);\n});\n```\n\nPromise-wrapper from https://gist.github.com/matthewp/3099268\n. ",
    "cutesquirrel": "Hi,\nI saw that the main attribute exists in the master branch, could you create a git tag in order to be able to use it in a package.json please ?\n\nMany thanks \n. Hi,\nI saw that the main attribute exists in the master branch, could you create a git tag in order to be able to use it in a package.json please ?\n\nMany thanks \n. ",
    "viljami": "Sorry, missed that! Is all relevant included now? \n\nThe compilation script changed compiled css files marginally even though I didn't touched them. Therefore left them out.\n. Sorry, missed that! Is all relevant included now? \n\nThe compilation script changed compiled css files marginally even though I didn't touched them. Therefore left them out.\n. ",
    "jsmylnycky": "+1.  Would love to be able to use this with webpack easier.\n. If you're on Mac, you can also download the Network Link Conditioner, it's part of dev tools.  It lets you throttle your connection to a dropdown of different scenarios, including completely killing the internet connection, just by clicking a toggle.\n. My error tracker has also been picking up the error @darlanalves is seeing.\n. For the record, I have the exact same problem as the original post.\n\nI'm using Angular 1.4.8.  I included the offline JS and CSS files from a hosted CDN.  When I make requests through $http, they do get intercepted and passed through offline.min.js.  When I kill my internet connection, it never displays the popup saying I'm offline.  If I click something to trigger $http requests while I'm offline, I'll see them get queued up but they'll never continue on when the connection is restored.\n. I've noticed similar problems.  When I run the plugin in Firefox, and hook into the \"checking\" event, it ends up in my console every few seconds.  In chrome, I see nothing.\n. +1.  Would love to be able to use this with webpack easier.\n. If you're on Mac, you can also download the Network Link Conditioner, it's part of dev tools.  It lets you throttle your connection to a dropdown of different scenarios, including completely killing the internet connection, just by clicking a toggle.\n. My error tracker has also been picking up the error @darlanalves is seeing.\n. For the record, I have the exact same problem as the original post.\n\nI'm using Angular 1.4.8.  I included the offline JS and CSS files from a hosted CDN.  When I make requests through $http, they do get intercepted and passed through offline.min.js.  When I kill my internet connection, it never displays the popup saying I'm offline.  If I click something to trigger $http requests while I'm offline, I'll see them get queued up but they'll never continue on when the connection is restored.\n. I've noticed similar problems.  When I run the plugin in Firefox, and hook into the \"checking\" event, it ends up in my console every few seconds.  In chrome, I see nothing.\n. ",
    "fskinner": "+1\n. +1\n. ",
    "peacechen": "+1\n\nGlobal vars are for the birds\n. The issue is that the library sets window.Offline at the bottom of the code.  To properly support modules and avoid globals, the code should be wrapped in an IIFE and never reference window directly.  Here's an example that detects the environment it's being loaded in and exports either a module or a global --\n\nhttp://bob.yexley.net/umd-javascript-that-runs-anywhere/\n\nThat references a repo of template examples at\nhttps://github.com/umdjs/umd\n\nYou probably want to use returnExports.js so that it'll continue to work for existing global users.\n. +1\n\nGlobal vars are for the birds\n. The issue is that the library sets window.Offline at the bottom of the code.  To properly support modules and avoid globals, the code should be wrapped in an IIFE and never reference window directly.  Here's an example that detects the environment it's being loaded in and exports either a module or a global --\n\nhttp://bob.yexley.net/umd-javascript-that-runs-anywhere/\n\nThat references a repo of template examples at\nhttps://github.com/umdjs/umd\n\nYou probably want to use returnExports.js so that it'll continue to work for existing global users.\n. ",
    "joshuarh": "+1!\n. +1!\n. ",
    "nneal": "+1\n\nI was able to get this working through \n\n`const Offline = require('exports?Offline!offline-js/offline');` or `import Offline from 'exports?Offline!offline-js/offline';` at the top of my file and \n\n`\"exports-loader\": \"0.6.3\",` in my package.json\n\nhope that helps!\n. +1\n\nI was able to get this working through \n\n`const Offline = require('exports?Offline!offline-js/offline');` or `import Offline from 'exports?Offline!offline-js/offline';` at the top of my file and \n\n`\"exports-loader\": \"0.6.3\",` in my package.json\n\nhope that helps!\n. ",
    "FDiskas": ":factory: Uncaught ReferenceError: exports is not defined. works for me. :factory: Uncaught ReferenceError: exports is not defined. works for me. ",
    "Sinistralis": "You can manipulate some of the CSS with javascript to create your own goOffline() method, but I don't think there is a way built in. I had to make a workaround.\n\nhttps://gist.github.com/Sinistralis/fe37c183ce492b238d55\n\nIt's a bit of a hack but it works. The moment this library supports it though I will happily remove this.\n. You can manipulate some of the CSS with javascript to create your own goOffline() method, but I don't think there is a way built in. I had to make a workaround.\n\nhttps://gist.github.com/Sinistralis/fe37c183ce492b238d55\n\nIt's a bit of a hack but it works. The moment this library supports it though I will happily remove this.\n. ",
    "bennyn": "Yeah, you are totally right. Sorry. I misused \"Offline\" to check if the client is offline. :grinning: \n. Yeah, you are totally right. Sorry. I misused \"Offline\" to check if the client is offline. :grinning: \n. ",
    "geekjuice": "Refer to https://github.com/HubSpot/tether/pull/92\n. Refer to https://github.com/HubSpot/tether/pull/92\n. ",
    "kkirsche": "Also their maintainer says they probably won't ever use it: http://stackoverflow.com/questions/24844901/bowers-bower-json-file-version-property\n. Also their maintainer says they probably won't ever use it: http://stackoverflow.com/questions/24844901/bowers-bower-json-file-version-property\n. ",
    "icenine457": "+1, though I did find a ~~workaround~~:\n\n```\nOffline.on('up', function() {\n  Offline.requests.clear();\n})\n```\n\nIt does seem to be broken, though, as the events are properly being honored, but not the options.\nCorrection: That is _not_ actually a workaround. I'm trying a few other events to see if I can clear the request queue before it attempts to re-send.\n. +1, though I did find a ~~workaround~~:\n\n```\nOffline.on('up', function() {\n  Offline.requests.clear();\n})\n```\n\nIt does seem to be broken, though, as the events are properly being honored, but not the options.\nCorrection: That is _not_ actually a workaround. I'm trying a few other events to see if I can clear the request queue before it attempts to re-send.\n. ",
    "onyx1337": "it will be great if Offline.check() will return promise\n. So, any updates ?\nBecause right now we use timeout for this purpose\n\n```\n                    Offline.check();\n                    setTimeout(function() {\n                        if (Offline.state === 'up'){\n                              // do smth.\n                        }\n                    }, 500);\n```\n. In my case I think no, because this check need to be in middle of the code and I need to be totally sure in user status. So best solution is to get promise from Offline.check()  and then continue checking\n. oh , this looks good, thanks.\n. it will be great if Offline.check() will return promise\n. So, any updates ?\nBecause right now we use timeout for this purpose\n\n```\n                    Offline.check();\n                    setTimeout(function() {\n                        if (Offline.state === 'up'){\n                              // do smth.\n                        }\n                    }, 500);\n```\n. In my case I think no, because this check need to be in middle of the code and I need to be totally sure in user status. So best solution is to get promise from Offline.check()  and then continue checking\n. oh , this looks good, thanks.\n. ",
    "elemenofi": "I'd be glad to implement this feature with some guidance or pointers on where to look at.\n. I'd be glad to implement this feature with some guidance or pointers on where to look at.\n. ",
    "2braincells2go": "Thanks for tip @zackbloom!\n\nWill have to look at that. Just assumed that following manual instructions to place in a page would work without further coding.\n. I finally got a chance to check into this deeper.\n\nHave followed the instructions here (where I first learned of offline.js):\n\nhttps://www.gavick.com/blog/detect-offline-browser\n\nSo I am calling the offline.js and two css files in head tag along with the function to check connection every 5 seconds.\n\nDoes not work for me in Chrome or IE.\n\nCan use the Eager provided script in header and does work. So lost at what is wrong.\n\nThanks again for input.\n. Just discovered that if I use any css theme file besides offline-theme-chrome.css it works. Seems that one theme is not working for me.\n\nGreat little script and will come in real handy for classroom project!\n\nThanks for your input.\n. Thanks for tip @zackbloom!\n\nWill have to look at that. Just assumed that following manual instructions to place in a page would work without further coding.\n. I finally got a chance to check into this deeper.\n\nHave followed the instructions here (where I first learned of offline.js):\n\nhttps://www.gavick.com/blog/detect-offline-browser\n\nSo I am calling the offline.js and two css files in head tag along with the function to check connection every 5 seconds.\n\nDoes not work for me in Chrome or IE.\n\nCan use the Eager provided script in header and does work. So lost at what is wrong.\n\nThanks again for input.\n. Just discovered that if I use any css theme file besides offline-theme-chrome.css it works. Seems that one theme is not working for me.\n\nGreat little script and will come in real handy for classroom project!\n\nThanks for your input.\n. ",
    "action-this-day": "So I can't set content using js parameters? It's not an option to load/unload css files dynamically. I need to use a js version of php's gettext function, so I don't want to put any textual content in my css files\n. So I can't set content using js parameters? It's not an option to load/unload css files dynamically. I need to use a js version of php's gettext function, so I don't want to put any textual content in my css files\n. ",
    "pstevlingson": "I changed the code from\n\nOffline.on('up down', this._updateState.bind(this) );\n\nto separate calls for 'up' and 'down' and that seems to have resolved the problem so I am going to close the ticket.  \n\nOffline.on('up',lang.hitch(this,this._goOnline));\nOffline.on('down',lang.hitch(this,this._goOffline));\n. I changed the code from\n\nOffline.on('up down', this._updateState.bind(this) );\n\nto separate calls for 'up' and 'down' and that seems to have resolved the problem so I am going to close the ticket.  \n\nOffline.on('up',lang.hitch(this,this._goOnline));\nOffline.on('down',lang.hitch(this,this._goOffline));\n. ",
    "Thunderforge": "I didn't think that it was possible to connect to something like example.com, since the documentation clearly says \n\n> Make sure that the URL you check has the same origin as your page (the connection method, domain and port all must be the same), or you will run into CORS issues.\n\nExample.com is not the same origin.\n. @ymatuhin Will you be updating this? We are interested in having Russian language support and would hate to duplicate your effort.\n. Could you please provide a list of steps to reproduce the problem? Also, how are you confirming that the array of requests is growing?\n. I didn't think that it was possible to connect to something like example.com, since the documentation clearly says \n\n> Make sure that the URL you check has the same origin as your page (the connection method, domain and port all must be the same), or you will run into CORS issues.\n\nExample.com is not the same origin.\n. @ymatuhin Will you be updating this? We are interested in having Russian language support and would hate to duplicate your effort.\n. Could you please provide a list of steps to reproduce the problem? Also, how are you confirming that the array of requests is growing?\n. ",
    "RaviRamDhali": "@HadrienPierart Do you have code-snippet you can share using 'tick' ? \r\nI can not figure out a way to use it.. @HadrienPierart - here is my working code snippet on using TICK method\r\n\r\n\r\n```\r\n<script>\r\n    $(function(){\r\n\r\n        var \r\n            $online = $('.online'),\r\n            $offline = $('.offline');\r\n\r\n        Offline.on('confirmed-down', function () {\r\n            $online.fadeOut(function () {\r\n                $offline.fadeIn();\r\n                  console.log('Offline state: ',Offline.state);\r\n                  console.log('Offline remaining: ',Offline.reconnect.remaining);\r\n            });\r\n        });\r\n\r\n        Offline.on('confirmed-up', function () {\r\n            $offline.fadeOut(function () {\r\n                $online.fadeIn();\r\n                  console.log('Offline state: ',Offline.state);\r\n                  console.log('Offline remaining: ',Offline.reconnect.remaining);\r\n                  Offline.on('reconnect:tick', tick);\r\n            });\r\n        });\r\n\r\n        function tick(){\r\n            console.log('Offline remaining: ',Offline.reconnect.remaining);\r\n            console.log('Offline state: ',Offline.state);\r\n        }\r\n\r\n\r\n    });\r\n</script>\r\n```\r\n. @HadrienPierart Do you have code-snippet you can share using 'tick' ? \r\nI can not figure out a way to use it.. @HadrienPierart - here is my working code snippet on using TICK method\r\n\r\n\r\n```\r\n<script>\r\n    $(function(){\r\n\r\n        var \r\n            $online = $('.online'),\r\n            $offline = $('.offline');\r\n\r\n        Offline.on('confirmed-down', function () {\r\n            $online.fadeOut(function () {\r\n                $offline.fadeIn();\r\n                  console.log('Offline state: ',Offline.state);\r\n                  console.log('Offline remaining: ',Offline.reconnect.remaining);\r\n            });\r\n        });\r\n\r\n        Offline.on('confirmed-up', function () {\r\n            $offline.fadeOut(function () {\r\n                $online.fadeIn();\r\n                  console.log('Offline state: ',Offline.state);\r\n                  console.log('Offline remaining: ',Offline.reconnect.remaining);\r\n                  Offline.on('reconnect:tick', tick);\r\n            });\r\n        });\r\n\r\n        function tick(){\r\n            console.log('Offline remaining: ',Offline.reconnect.remaining);\r\n            console.log('Offline state: ',Offline.state);\r\n        }\r\n\r\n\r\n    });\r\n</script>\r\n```\r\n. ",
    "HadrienPierart": "Well, it's actually just a matter of listening to the various events. tick works the same : \r\n\r\n```\r\n      Offline.on('up', connectionUp);\r\n      Offline.on('down', connectionDown);\r\n      Offline.on('reconnect:tick', tick);\r\n```\r\nWhere the second param is a function handling the event.\r\nIf you are doing an angularjs application, do remember to unregister the event listener in the onDestroy and to manipulate your scope in a $apply or evalAsync when in an event handler !. Well, it's actually just a matter of listening to the various events. tick works the same : \r\n\r\n```\r\n      Offline.on('up', connectionUp);\r\n      Offline.on('down', connectionDown);\r\n      Offline.on('reconnect:tick', tick);\r\n```\r\nWhere the second param is a function handling the event.\r\nIf you are doing an angularjs application, do remember to unregister the event listener in the onDestroy and to manipulate your scope in a $apply or evalAsync when in an event handler !. ",
    "filipiz": "Thinking better, now, maybe it success configuration could be a function, where I could verify other stuff beyond the status code to decide if the system is online or not.\n. For sure @zackbloom. I understand and agree. But...\nMaybe I'm going too far for the purpose of the lib, but lets think on a\ngiven scenario...\n\nFor some reason I may want to do some kind of maintenance on my server, I\ncould make the my \"ping\" webservice respond something that the clients\nwould understand \"ok, I should work as offline for now\"... even if the\nserver is up.\n\nAnything that made easier to overwrite the method `checkStatus` (inside\n`checkXHR`) would do the trick.\n\nIn my case, I have the proxy problem. The proxy server is up, but the\nservice server is down. If I could overwrite the checkstatus, I could\nidentify the service is unavailable and keep the right workflow on the\nclient.\n\nI'll try to do some pull request to express the solution I'm thinking\nabout..\n\nFilipi Zimermann\nMobile: +55 48 8479-7900\nHttp://www.nextt.com.br\n\nOn Mon, Aug 24, 2015 at 12:34 PM, Zack Bloom notifications@github.com\nwrote:\n\n> Any status code (other than 12xxx which is specific to old-IE) means the\n> user's internet connection is working, and they are 'online'. Offline is\n> not intended to handle cases when your service is down, as, as you mention,\n> it varies too much from one backend to another.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/HubSpot/offline/issues/160#issuecomment-134253452.\n. Thinking better, now, maybe it success configuration could be a function, where I could verify other stuff beyond the status code to decide if the system is online or not.\n. For sure @zackbloom. I understand and agree. But...\nMaybe I'm going too far for the purpose of the lib, but lets think on a\ngiven scenario...\n\nFor some reason I may want to do some kind of maintenance on my server, I\ncould make the my \"ping\" webservice respond something that the clients\nwould understand \"ok, I should work as offline for now\"... even if the\nserver is up.\n\nAnything that made easier to overwrite the method `checkStatus` (inside\n`checkXHR`) would do the trick.\n\nIn my case, I have the proxy problem. The proxy server is up, but the\nservice server is down. If I could overwrite the checkstatus, I could\nidentify the service is unavailable and keep the right workflow on the\nclient.\n\nI'll try to do some pull request to express the solution I'm thinking\nabout..\n\nFilipi Zimermann\nMobile: +55 48 8479-7900\nHttp://www.nextt.com.br\n\nOn Mon, Aug 24, 2015 at 12:34 PM, Zack Bloom notifications@github.com\nwrote:\n\n> Any status code (other than 12xxx which is specific to old-IE) means the\n> user's internet connection is working, and they are 'online'. Offline is\n> not intended to handle cases when your service is down, as, as you mention,\n> it varies too much from one backend to another.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/HubSpot/offline/issues/160#issuecomment-134253452.\n. ",
    "benmarten": "+1\n. +1\n. ",
    "Climax777": "+0.5  because I actually just use it plug and play... but I can see the point for angular integration. Probably a separate project though\n. Fix done. Please check the pull request. I accidentally opened a pull to my own fork...\n. +0.5  because I actually just use it plug and play... but I can see the point for angular integration. Probably a separate project though\n. Fix done. Please check the pull request. I accidentally opened a pull to my own fork...\n. ",
    "dannycallaghan": "Agreed, totally plug and play.\n\n``` javascript\n// After bringing in angular and offline...\n\n(function () {\n\n  angular\n\n    .module('app')\n\n    .config(function ($provide) {\n\n      $provide.constant('Offline', window.Offline);  \n\n    })\n\n    .controller('MyController', function ($scope, Offline) {\n\n      $scope.youAreOnline = !!(Offline.state && Offline.state === 'up');\n\n      Offline.on('confirmed-down', function () {\n        $scope.youAreOnline = false;  \n      });\n\n      Offline.on('confirmed-up', function () {\n        $scope.youAreOnline = true; \n      });\n\n    });\n\n})();\n\n```\n\nDon't really see the point. \n. Agreed, totally plug and play.\n\n``` javascript\n// After bringing in angular and offline...\n\n(function () {\n\n  angular\n\n    .module('app')\n\n    .config(function ($provide) {\n\n      $provide.constant('Offline', window.Offline);  \n\n    })\n\n    .controller('MyController', function ($scope, Offline) {\n\n      $scope.youAreOnline = !!(Offline.state && Offline.state === 'up');\n\n      Offline.on('confirmed-down', function () {\n        $scope.youAreOnline = false;  \n      });\n\n      Offline.on('confirmed-up', function () {\n        $scope.youAreOnline = true; \n      });\n\n    });\n\n})();\n\n```\n\nDon't really see the point. \n. ",
    "lyonlai": "@rawls238 thanks for the quick response. \n. it's been quite some time? Anyone can help with this? \n. @rawls238 thanks for the quick response. \n. it's been quite some time? Anyone can help with this? \n. ",
    "netsgnut": "I was going to open another issue regarding not publishing the NPM and found this issue instead :(\n\nCurrently as a workaround I have specified the git tag at `package.json`, but I think it will be nice if in the long run each every minor/major versions get published on NPM too.\n. I was going to open another issue regarding not publishing the NPM and found this issue instead :(\n\nCurrently as a workaround I have specified the git tag at `package.json`, but I think it will be nice if in the long run each every minor/major versions get published on NPM too.\n. ",
    "arshadashrafi": ":+1: noticing the same\n. :+1: noticing the same\n. ",
    "rajlamo": "Facing same issue.\n. Facing same issue.\n. ",
    "mortonfox": "This isn't right either. I think tag v0.7.14 needs to be created.\n. This isn't right either. I think tag v0.7.14 needs to be created.\n. ",
    "r3wt": "@bzeng i will help if you can provide more details. if you did fix it, i would appreciate you provide detail how. not using ember but using jQuery\n. @bzeng i will help if you can provide more details. if you did fix it, i would appreciate you provide detail how. not using ember but using jQuery\n. ",
    "arm1n": "@bzeng @r3wt This is just an issue on localhost when you're running the server with `ember s`, cause it's delivering files - in this case `favicon.ico` - even if there's no connection. I think this ticket can be closed.\n. @bzeng @r3wt This is just an issue on localhost when you're running the server with `ember s`, cause it's delivering files - in this case `favicon.ico` - even if there's no connection. I think this ticket can be closed.\n. ",
    "davidgovea": "+1 on this. It's in the instructions, and the file should be available in the downloaded bower package.\n\nIn fact, we would like the entire `js/` folder to be included, in order to do a custom build without the included `ui` module.\n. +1 on this. It's in the instructions, and the file should be available in the downloaded bower package.\n\nIn fact, we would like the entire `js/` folder to be included, in order to do a custom build without the included `ui` module.\n. ",
    "giovannibonetti": "If you are testing in your local machine with NGINX, you should stop it to simulate the connection going down. In Mac OS X, for exemple, that could be done like this:\n\n``` shell\n~ sudo nginx -s stop\n```\n\nIn my machine I was getting a 502 Error when my app server was down, because NGINX was still up. Apparently this library accepts any status code as the response for the favicon.\n. If you are testing in your local machine with NGINX, you should stop it to simulate the connection going down. In Mac OS X, for exemple, that could be done like this:\n\n``` shell\n~ sudo nginx -s stop\n```\n\nIn my machine I was getting a 502 Error when my app server was down, because NGINX was still up. Apparently this library accepts any status code as the response for the favicon.\n. ",
    "artdias90": "thanks for both answers but im on windows. I dropped the usage of offline.js anyway, i guess we can close this. thanks\n. thanks for both answers but im on windows. I dropped the usage of offline.js anyway, i guess we can close this. thanks\n. ",
    "darlanalves": "I'm facing a weird error here too.\nI added the library to an AngularJS project and it detects the offline states well. However, when the connection is restored, this exception occurs inside the Angular $httpBackend implementation:\n\n`Uncaught TypeError: Cannot read property 'statusText' of null`\n\nAlso, adding an option `interceptRequests: false` to disable this is not working.\n\nHere's the portion inside Angular that's breaking:\n\n```\n      xhr.onload = function requestLoaded() {\n        var statusText = xhr.statusText || '';\n     //...\n```\n. I'm facing a weird error here too.\nI added the library to an AngularJS project and it detects the offline states well. However, when the connection is restored, this exception occurs inside the Angular $httpBackend implementation:\n\n`Uncaught TypeError: Cannot read property 'statusText' of null`\n\nAlso, adding an option `interceptRequests: false` to disable this is not working.\n\nHere's the portion inside Angular that's breaking:\n\n```\n      xhr.onload = function requestLoaded() {\n        var statusText = xhr.statusText || '';\n     //...\n```\n. ",
    "lfreneda": "Any updates?\n. Any updates?\n. ",
    "philippjbauer": "+1\n\nExperiencing the same problem that @darlanalves is having.\n\nI've added Offline through injection into my service and listen for the 'confirmed-up' event. I'm getting the following error output:\n\n``` javascript\nangular.js:11695 Uncaught TypeError: Cannot read property 'statusText' of null\nu.onload @ angular.js:11695\nxhr.onprogress.xhr.onload @ offline.js:86\n```\n\nAngular throws the error in the line darlanalves mentioned:\n\n``` javascript\nxhr.onload = function requestLoaded() {\n    var statusText = xhr.statusText || '';\n//...\n```\n\nThis is what the `_onload` variable on line 86 of the offline.js file spits out through console.log:\n\n``` javascript\nfunction (){var a=u.statusText||\"\",b=\"response\"in u?u.response:u.responseText,c=1223===u.status?204:u.status;0===c&&(c=b?200:\"file\"==ra(h).protocol?404:0);H(l,c,b,u.getAllResponseHeaders(),a)}\n```\n\nI guess that the variable `u` is undefined in `var a=u.statusText||\"\",` and following?\n\nAn update would be greatly appreciated!\n. +1\n\nExperiencing the same problem that @darlanalves is having.\n\nI've added Offline through injection into my service and listen for the 'confirmed-up' event. I'm getting the following error output:\n\n``` javascript\nangular.js:11695 Uncaught TypeError: Cannot read property 'statusText' of null\nu.onload @ angular.js:11695\nxhr.onprogress.xhr.onload @ offline.js:86\n```\n\nAngular throws the error in the line darlanalves mentioned:\n\n``` javascript\nxhr.onload = function requestLoaded() {\n    var statusText = xhr.statusText || '';\n//...\n```\n\nThis is what the `_onload` variable on line 86 of the offline.js file spits out through console.log:\n\n``` javascript\nfunction (){var a=u.statusText||\"\",b=\"response\"in u?u.response:u.responseText,c=1223===u.status?204:u.status;0===c&&(c=b?200:\"file\"==ra(h).protocol?404:0);H(l,c,b,u.getAllResponseHeaders(),a)}\n```\n\nI guess that the variable `u` is undefined in `var a=u.statusText||\"\",` and following?\n\nAn update would be greatly appreciated!\n. ",
    "TravisHiscock": "I too am having issues with Angular and Offine.  If I put a simple pair of div tags with class=online/offline above my div ng-app tag they respond correctly.  \n\nThe same div tags inside a 'stub' html fle loaded by Angular never respond at all.\n\nsnippet of index.html with working div tags:\n\n```\n</head>\n<body>\n    <div class=\"online\">Online</div>\n    <div class=\"offline\">Offline</div>\n    <div ng-app=\"personApp\">\n        <div ng-view>\n        </div>\n    </div>\n</body>\n</html>\n```\n\nsnippet of html 'section' inserted by Angular with failing div tags:\n\n```\n<legend>Return</legend>\n<div class=\"container\">\n    <div class=\"online\">Online</div>\n    <div class=\"offline\">Offline</div>\n```\n. Actually, just describing the issue gave me an idea for a workaround that works.  Just adding the script required to the html 'section' worked.\n\nSee updated snippet of 'section' html inserted by Angular:\n\n```\n<legend>Return</legend>\n<script src=\"js/offline.js\"></script>\n<div class=\"container\">\n    <div class=\"online\">Online</div>\n    <div class=\"offline\">Offline</div>\n```\n\nHope that helps somebody while a better solution is developed\n. I too am having issues with Angular and Offine.  If I put a simple pair of div tags with class=online/offline above my div ng-app tag they respond correctly.  \n\nThe same div tags inside a 'stub' html fle loaded by Angular never respond at all.\n\nsnippet of index.html with working div tags:\n\n```\n</head>\n<body>\n    <div class=\"online\">Online</div>\n    <div class=\"offline\">Offline</div>\n    <div ng-app=\"personApp\">\n        <div ng-view>\n        </div>\n    </div>\n</body>\n</html>\n```\n\nsnippet of html 'section' inserted by Angular with failing div tags:\n\n```\n<legend>Return</legend>\n<div class=\"container\">\n    <div class=\"online\">Online</div>\n    <div class=\"offline\">Offline</div>\n```\n. Actually, just describing the issue gave me an idea for a workaround that works.  Just adding the script required to the html 'section' worked.\n\nSee updated snippet of 'section' html inserted by Angular:\n\n```\n<legend>Return</legend>\n<script src=\"js/offline.js\"></script>\n<div class=\"container\">\n    <div class=\"online\">Online</div>\n    <div class=\"offline\">Offline</div>\n```\n\nHope that helps somebody while a better solution is developed\n. ",
    "Duskfall": "Same problem here with default configuration\r\n````\r\nCannot read property 'statusText' of null. same here\n. Same problem here with default configuration\r\n````\r\nCannot read property 'statusText' of null. same here\n. ",
    "chaudhryjunaid": "It was not triggering Offline JS on $http requests for me.\r\n\r\nI have written a module to trigger `Offline.check()` on $http requests: \r\nhttps://github.com/chaudhryjunaid/ng-offline-js\r\n\r\nHope it helps someone.. The exception mentioned above seems to not be happening for me. I am on Angular 1.5.. It was not triggering Offline JS on $http requests for me.\r\n\r\nI have written a module to trigger `Offline.check()` on $http requests: \r\nhttps://github.com/chaudhryjunaid/ng-offline-js\r\n\r\nHope it helps someone.. The exception mentioned above seems to not be happening for me. I am on Angular 1.5.. ",
    "Lordiuz": "Still have this issue, AngularJS v1.5.5. Great job, will try to use your fork!. Still have this issue, AngularJS v1.5.5. Great job, will try to use your fork!. ",
    "bripc": "I am using Angular 1.6.3. I too had the \"Cannot read property 'statusText' of null\" error. I spent a good amount of time debugging the issue. I discovered this when attempting to send POST requests while offline:\r\n\r\n1. Angular, as part of the $http implementation, will try to complete the request when the application is offline. The app is offline though, so Angular gracefully resolves the request with an error and cleans up, setting its xhr variable to null.\r\n2. Then OfflineJS runs, realizes the application is offline, and stores the request in a queue to be sent when connection is restored.\r\n3. Connection is restored and OfflineJS sends the items in its queue on its onload function.\r\n4. Angular's xhr.onload function is triggered (not sure why), but the xhr variable is null now, causing the \"Cannot read property...\" error.\r\n\r\nSo, in order to fix this, you can use an Angular interceptor workaround. Instead of using OfflineJS's queue to send requests, you can use Angular interceptors with `$q` to implement the requests queue instead, which both allows you more flexibility for handling requests and still lets you use the OfflineJS styles and connection test functionality.\r\n\r\nSet the [Offline options](https://github.com/HubSpot/offline). This means OfflineJS will no longer auto-send requests for you:\r\n```\r\nOffline.options = {\r\n    requests: false\r\n};\r\n```\r\n\r\nWrite an [interceptor](http://www.webdeveasy.com/interceptors-in-angularjs-and-useful-examples/) using [$q](https://docs.angularjs.org/api/ng/service/$q) to handle any offline requests. See [this GIST](https://gist.github.com/bripc/e6e8118028baf5465f7d688ae467251a) as an example.\r\n\r\nCheck out [my fork of the OfflineJS library](https://github.com/data-decisions-inc/offline) for this documentation and other bug fixes. Hope this was helpful for someone!. I am using Angular 1.6.3. I too had the \"Cannot read property 'statusText' of null\" error. I spent a good amount of time debugging the issue. I discovered this when attempting to send POST requests while offline:\r\n\r\n1. Angular, as part of the $http implementation, will try to complete the request when the application is offline. The app is offline though, so Angular gracefully resolves the request with an error and cleans up, setting its xhr variable to null.\r\n2. Then OfflineJS runs, realizes the application is offline, and stores the request in a queue to be sent when connection is restored.\r\n3. Connection is restored and OfflineJS sends the items in its queue on its onload function.\r\n4. Angular's xhr.onload function is triggered (not sure why), but the xhr variable is null now, causing the \"Cannot read property...\" error.\r\n\r\nSo, in order to fix this, you can use an Angular interceptor workaround. Instead of using OfflineJS's queue to send requests, you can use Angular interceptors with `$q` to implement the requests queue instead, which both allows you more flexibility for handling requests and still lets you use the OfflineJS styles and connection test functionality.\r\n\r\nSet the [Offline options](https://github.com/HubSpot/offline). This means OfflineJS will no longer auto-send requests for you:\r\n```\r\nOffline.options = {\r\n    requests: false\r\n};\r\n```\r\n\r\nWrite an [interceptor](http://www.webdeveasy.com/interceptors-in-angularjs-and-useful-examples/) using [$q](https://docs.angularjs.org/api/ng/service/$q) to handle any offline requests. See [this GIST](https://gist.github.com/bripc/e6e8118028baf5465f7d688ae467251a) as an example.\r\n\r\nCheck out [my fork of the OfflineJS library](https://github.com/data-decisions-inc/offline) for this documentation and other bug fixes. Hope this was helpful for someone!. ",
    "corinna000": "I found that calling Offline.check() at the start of my app seems to prime Offline for operation. Can you see if that works for you?\n. I found that calling Offline.check() at the start of my app seems to prime Offline for operation. Can you see if that works for you?\n. ",
    "yifeiwu": "Same issue, it's not checking.\n. ```\nsetTimeout(function a() {\n        Offline.check();\n        Offline.on('down', function() {\n             //connection went down\n        });\n        Offline.on('up', function() {\n             //connection is back!\n        });\n setTimeout(a, 10000);\n }, 10000);\n\n```\n\nI ended up doing it all manually, not sure if it's fixed yet but this will work.\n. Thanks! I is JS noob\n. Same issue, it's not checking.\n. ```\nsetTimeout(function a() {\n        Offline.check();\n        Offline.on('down', function() {\n             //connection went down\n        });\n        Offline.on('up', function() {\n             //connection is back!\n        });\n setTimeout(a, 10000);\n }, 10000);\n\n```\n\nI ended up doing it all manually, not sure if it's fixed yet but this will work.\n. Thanks! I is JS noob\n. ",
    "futonox": "Had the same issue. For my part I managed to solve it by removing the enclosing if ( navigator.userAgent.toLowerCase().indexOf(\"firefox\") != -1 ) placed to target some specific issue with Firefox. Don't know if you use the same line of code. If, it could be a solution - maybe.\n. Had the same issue. For my part I managed to solve it by removing the enclosing if ( navigator.userAgent.toLowerCase().indexOf(\"firefox\") != -1 ) placed to target some specific issue with Firefox. Don't know if you use the same line of code. If, it could be a solution - maybe.\n. ",
    "dsmeltz": "Just to add more info (this is in Chrome 50.0.2661.102 m using Offline 0.7.17):\nYou have to manually do a check() for the state to change from \"up\" to \"down\".  Offline seems to handle switching back to an \"up\" state when the connection is available again.  But, when the connection is lost, the state stays as \"up\" until you again do a manual check().\n\nSetting options like so: \n\n```\nwindow.Offline.options = {\n    checkOnLoad: true,\n    interceptRequests: false,\n    requests: false\n};\n```\n\nthen loading offline.min.js\n. Just to add more info (this is in Chrome 50.0.2661.102 m using Offline 0.7.17):\nYou have to manually do a check() for the state to change from \"up\" to \"down\".  Offline seems to handle switching back to an \"up\" state when the connection is available again.  But, when the connection is lost, the state stays as \"up\" until you again do a manual check().\n\nSetting options like so: \n\n```\nwindow.Offline.options = {\n    checkOnLoad: true,\n    interceptRequests: false,\n    requests: false\n};\n```\n\nthen loading offline.min.js\n. ",
    "almeidap": "Can confirm this as well with Offline 0.7.17 on Chrome 51.\n\nIn fact, I could not get this library working correctly in any browser (including Firefox 38 & IE11) as the `down` event is never triggered unless using the timeout workaround. Documentation of `Offline.options.reconnect` is pretty unclear about that... when/how should Offline detect down mode?\n\n@yifeiwu you shouldn't register your event listeners inside the timeout callback as it creates additional event listeners on every callback call. Instead:\n\n```\nvar delay = 1000;\n\nOffline.on('confirmed-down', function () {\n    console.log('down');\n});\n\nOffline.on('confirmed-up', function () {\n    console.log('up');\n});\n\nsetTimeout(function retry() {\n    Offline.check();\n    setTimeout(retry, delay);\n}, delay);\n```\n. Can confirm this as well with Offline 0.7.17 on Chrome 51.\n\nIn fact, I could not get this library working correctly in any browser (including Firefox 38 & IE11) as the `down` event is never triggered unless using the timeout workaround. Documentation of `Offline.options.reconnect` is pretty unclear about that... when/how should Offline detect down mode?\n\n@yifeiwu you shouldn't register your event listeners inside the timeout callback as it creates additional event listeners on every callback call. Instead:\n\n```\nvar delay = 1000;\n\nOffline.on('confirmed-down', function () {\n    console.log('down');\n});\n\nOffline.on('confirmed-up', function () {\n    console.log('up');\n});\n\nsetTimeout(function retry() {\n    Offline.check();\n    setTimeout(retry, delay);\n}, delay);\n```\n. ",
    "digital-flowers": "but sorry why you need a timer ?! isn't the plugin has a built in one ?\n. but sorry why you need a timer ?! isn't the plugin has a built in one ?\n. ",
    "rubencodes": "Hmmm... I have the same issue, but in my case, the `Offline.check()` in the timer seems to always result in the `confirmed-up` callback being triggered, even when it goes offline.\n\nAlso, instead of:\n\n```\nsetTimeout(function retry() {\n    Offline.check();\n    setTimeout(retry, delay);\n}, delay);\n```\n\nI'd use:\n\n```\nsetInterval(() => {\n    Offline.check();\n}, 1000);\n```\n. ^^^ This. The versions are always out of sync... The latest I'm able to find on the Cloudflare CDN is 0.7.17.\n. You all may find help in this thread: https://github.com/HubSpot/offline/issues/174 It didn't help me but others have reported differently.\n. Hmmm... I have the same issue, but in my case, the `Offline.check()` in the timer seems to always result in the `confirmed-up` callback being triggered, even when it goes offline.\n\nAlso, instead of:\n\n```\nsetTimeout(function retry() {\n    Offline.check();\n    setTimeout(retry, delay);\n}, delay);\n```\n\nI'd use:\n\n```\nsetInterval(() => {\n    Offline.check();\n}, 1000);\n```\n. ^^^ This. The versions are always out of sync... The latest I'm able to find on the Cloudflare CDN is 0.7.17.\n. You all may find help in this thread: https://github.com/HubSpot/offline/issues/174 It didn't help me but others have reported differently.\n. ",
    "bauna": "I have the same issue as @rubencodes. I also realized that I don't see the request network tab of chrome dev tools, I see the first when the app loads but never again.\n. I have the same issue as @rubencodes. I also realized that I don't see the request network tab of chrome dev tools, I see the first when the app loads but never again.\n. ",
    "vir-c": "Offlinejs does not trigger Offline.check() by itself (it does it once if checkOnLoad option is set to true).\n\nYou may call Offline.check() just before you make an ajax request to your server and check for connection.\nOr as pointed already, you can also do polling.\n\n```\nvar run = function(){ \n   // only check when state is up, if state is down, reconnect will take over \n    if(Offline.state==\"up\") \n            Offline.check();\n    };\nsetInterval(run, 20000); // check after 20sec\n\nOffline.on('down',function(){ /**code to handle network down*/ });\n```\n. Offlinejs does not trigger Offline.check() by itself (it does it once if checkOnLoad option is set to true).\n\nYou may call Offline.check() just before you make an ajax request to your server and check for connection.\nOr as pointed already, you can also do polling.\n\n```\nvar run = function(){ \n   // only check when state is up, if state is down, reconnect will take over \n    if(Offline.state==\"up\") \n            Offline.check();\n    };\nsetInterval(run, 20000); // check after 20sec\n\nOffline.on('down',function(){ /**code to handle network down*/ });\n```\n. ",
    "elvismercado": "@vir-c I have the same solution as you. Only I wasn't checking if the state is already up.\n\nAlso remember to read the \"Checking\" part inthe docs -> [http://github.hubspot.com/offline/](url). You could make sure that Offline is checking a reliable url like `Offline.options = {checks: {xhr: {url: 'https://www.google.com'}}};`\n. thank you for suggesting this method @arojunior it helps allot. @vir-c I have the same solution as you. Only I wasn't checking if the state is already up.\n\nAlso remember to read the \"Checking\" part inthe docs -> [http://github.hubspot.com/offline/](url). You could make sure that Offline is checking a reliable url like `Offline.options = {checks: {xhr: {url: 'https://www.google.com'}}};`\n. thank you for suggesting this method @arojunior it helps allot. ",
    "dannypenrose": "@elvismercado solution worked for me, thanks!. @elvismercado solution worked for me, thanks!. ",
    "cescoferraro": "```\r\nconst offlineCheck = () => {\r\n    const { Offline } = (window as any);\r\n    Offline.options = {\r\n        checkOnLoad: true,\r\n        checks: {\r\n            image: {\r\n                url: () => ('https://esri.github.io/offline-editor-js/tiny-image.png?_='\r\n                    + (Math.floor(Math.random() * 1000000000)))\r\n\r\n            },\r\n            active: 'image'\r\n        }\r\n    };\r\n    setInterval(() => {\r\n        console.log(Offline.state)\r\n        Offline.check();\r\n    }, 5000);\r\n    Offline.on(\"up\", upHandler);\r\n    Offline.on(\"down\", downHandler);\r\n}\r\n\r\n```. ```\r\nconst offlineCheck = () => {\r\n    const { Offline } = (window as any);\r\n    Offline.options = {\r\n        checkOnLoad: true,\r\n        checks: {\r\n            image: {\r\n                url: () => ('https://esri.github.io/offline-editor-js/tiny-image.png?_='\r\n                    + (Math.floor(Math.random() * 1000000000)))\r\n\r\n            },\r\n            active: 'image'\r\n        }\r\n    };\r\n    setInterval(() => {\r\n        console.log(Offline.state)\r\n        Offline.check();\r\n    }, 5000);\r\n    Offline.on(\"up\", upHandler);\r\n    Offline.on(\"down\", downHandler);\r\n}\r\n\r\n```. ",
    "tarasbredel": "did you manage to solve this?\r\nI'm using v0.7.19. did you manage to solve this?\r\nI'm using v0.7.19. ",
    "also": "Thanks for reporting!\n\nThis was fixed in `v0.7.13`.\n. Good catch. Thanks for reporting!\n. I've published 0.7.16 with these changes.\n\nThanks for the contribution!\n. I've published 0.7.17 with these changes.\n\nThanks for the fix!\n. Looks good, thanks!\n. Thanks!\n. `offline.min.js` is the [minified](https://en.wikipedia.org/wiki/Minification_(programming)) JavaScript. You'll find [`offline.js`](https://github.com/HubSpot/offline/blob/master/offline.js) much easier to read.. Done! https://github.com/HubSpot/offline/tree/v0.7.18\n. Hey @whmountains, offline is published to npm as [`offline-js`](https://www.npmjs.com/package/offline-js). The recent language updates haven't been published yet, and we'll get to that soon. Otherwise, the way we publish the package isn't going to change, as we aren't maintaining this project any more.. I've published [v0.7.19](https://github.com/HubSpot/offline/releases/tag/v0.7.19) to npm.\r\n\r\nhttps://www.npmjs.com/package/offline-js. Thanks for the fix!. Thanks for reporting!\n\nThis was fixed in `v0.7.13`.\n. Good catch. Thanks for reporting!\n. I've published 0.7.16 with these changes.\n\nThanks for the contribution!\n. I've published 0.7.17 with these changes.\n\nThanks for the fix!\n. Looks good, thanks!\n. Thanks!\n. `offline.min.js` is the [minified](https://en.wikipedia.org/wiki/Minification_(programming)) JavaScript. You'll find [`offline.js`](https://github.com/HubSpot/offline/blob/master/offline.js) much easier to read.. Done! https://github.com/HubSpot/offline/tree/v0.7.18\n. Hey @whmountains, offline is published to npm as [`offline-js`](https://www.npmjs.com/package/offline-js). The recent language updates haven't been published yet, and we'll get to that soon. Otherwise, the way we publish the package isn't going to change, as we aren't maintaining this project any more.. I've published [v0.7.19](https://github.com/HubSpot/offline/releases/tag/v0.7.19) to npm.\r\n\r\nhttps://www.npmjs.com/package/offline-js. Thanks for the fix!. ",
    "ymatuhin": "@adamschwartz @Thunderforge Hey, guys. I'm sorry for waiting, just have a lot of work and lost notification from github about my pull request.\n\nI have some improvements:\n1. Remove magic padding right for `.offline-ui` (for button)\n2. Remove absolute position for reconnect button\n3. Vertically align blocks in `.offline-ui`\n\nIt allows to use any languages without fear and customise special padding for long words in foreign language. I've tested dark, slide, chrome and default themes. Check it please. Good luck.\n. @adamschwartz @Thunderforge Hey, guys. I'm sorry for waiting, just have a lot of work and lost notification from github about my pull request.\n\nI have some improvements:\n1. Remove magic padding right for `.offline-ui` (for button)\n2. Remove absolute position for reconnect button\n3. Vertically align blocks in `.offline-ui`\n\nIt allows to use any languages without fear and customise special padding for long words in foreign language. I've tested dark, slide, chrome and default themes. Check it please. Good luck.\n. ",
    "mamadoo": "Thanks for your hint. _persian.sass added.\n. I should to add offline-language-persian.css too or don't need?\n. No problem.:+1:\n. Your Welcome.\n. Thanks for your hint. _persian.sass added.\n. I should to add offline-language-persian.css too or don't need?\n. No problem.:+1:\n. Your Welcome.\n. ",
    "timsuchanek": "Having the same issue here. Any idea how to fix that problem?\n<img width=\"604\" alt=\"screen shot 2016-06-14 at 2 04 17 pm\" src=\"https://cloud.githubusercontent.com/assets/1094804/16042036/ec1a3df0-3238-11e6-8234-18b59993b081.png\">\n. Is it really necessary to modify the `XMLHttpRequest` for a library that gives you an offline indicator?\n. Having the same issue here. Any idea how to fix that problem?\n<img width=\"604\" alt=\"screen shot 2016-06-14 at 2 04 17 pm\" src=\"https://cloud.githubusercontent.com/assets/1094804/16042036/ec1a3df0-3238-11e6-8234-18b59993b081.png\">\n. Is it really necessary to modify the `XMLHttpRequest` for a library that gives you an offline indicator?\n. ",
    "abhishekgahlot": "@timsuchanek We fixed this by checking the prototype using.\n\n```\nvar someVar = new XMLHttpRequest();\n(global.XMLHttpRequest && Object.getPrototypeOf(selector) == Object.getPrototypeOf(someVar))\n```\n\nin opentok library. Where initially it was checking instanceOf.\n. @timsuchanek We fixed this by checking the prototype using.\n\n```\nvar someVar = new XMLHttpRequest();\n(global.XMLHttpRequest && Object.getPrototypeOf(selector) == Object.getPrototypeOf(someVar))\n```\n\nin opentok library. Where initially it was checking instanceOf.\n. ",
    "Pchol": "Set Offline.options.interceptRequests = false and Offline.options.requests = false.. Set Offline.options.interceptRequests = false and Offline.options.requests = false.. ",
    "ryaneliseislalom": "Note - found in v0.7.11\n. Note - found in v0.7.11\n. Steps:\nModify the requests:capture event to also log the array object [c.push(a)] to the browser console\nRun a website locally (or elsewhere)\nTurn off the webserver and otherwise disconnect network connections\nPerform any website behaviors that normally make successfull AJAX calls\nNotice in the browser console that calls are captured while Offline.check() reports a 'down' status\n\nActual behavior:\nThe array to which these events are added grows, even when the option requests:false is set\n\nExpected behavior:\nWhen requests.false is set, these commands should not be stored/queued on the client\n. Note - found in v0.7.11\n. Note - found in v0.7.11\n. Steps:\nModify the requests:capture event to also log the array object [c.push(a)] to the browser console\nRun a website locally (or elsewhere)\nTurn off the webserver and otherwise disconnect network connections\nPerform any website behaviors that normally make successfull AJAX calls\nNotice in the browser console that calls are captured while Offline.check() reports a 'down' status\n\nActual behavior:\nThe array to which these events are added grows, even when the option requests:false is set\n\nExpected behavior:\nWhen requests.false is set, these commands should not be stored/queued on the client\n. ",
    "Harshit369": "+1\n\nthe requests are continuously being queued and they are made on each page refresh\n. +1\n\nthe requests are continuously being queued and they are made on each page refresh\n. ",
    "kenma9123": "up for this.. up for this.. ",
    "qroft": "Just an idea, but why don't you use the materializecss toast to show the status? Would be a neat solution imho.. Just an idea, but why don't you use the materializecss toast to show the status? Would be a neat solution imho.. ",
    "suspended": "I think this is due to caching in your browser since the image request does not have a cache buster, unlike the default option. \n. I think this is due to caching in your browser since the image request does not have a cache buster, unlike the default option. \n. ",
    "TrevorBurnham": "Good call. :+1: \n. Good call. :+1: \n. ",
    "FranDias": "hey thanks for your efforts! you actually need a few more things to add the translations see this PR as an example: https://github.com/HubSpot/offline/pull/154. just gonna fill in all the blanks with the translations. Not realistic to expect someone come back from a year old PR. thanks closing via: https://github.com/HubSpot/offline/pull/251. \u8c22\u8c22\uff01\r\n\r\nbuilds & some random translations sampled. seems legit.. Oh wow. I'm not super familiar with this project but I'll give it a look over and merge today or tomorrow (plus your other translation). just saw the other translations over a year old. Thanks for hanging with us. D\u011bkuji\r\n\r\nRenders files and I sampled some translations via google translate. seems legit.. @geekjuice Anything special with that?. \ud83d\udea2  . hey thanks for your efforts! you actually need a few more things to add the translations see this PR as an example: https://github.com/HubSpot/offline/pull/154. just gonna fill in all the blanks with the translations. Not realistic to expect someone come back from a year old PR. thanks closing via: https://github.com/HubSpot/offline/pull/251. \u8c22\u8c22\uff01\r\n\r\nbuilds & some random translations sampled. seems legit.. Oh wow. I'm not super familiar with this project but I'll give it a look over and merge today or tomorrow (plus your other translation). just saw the other translations over a year old. Thanks for hanging with us. D\u011bkuji\r\n\r\nRenders files and I sampled some translations via google translate. seems legit.. @geekjuice Anything special with that?. \ud83d\udea2  . ",
    "phra": "@HubSpot @TrevorBurnham @also \nany idea when this PR will be merged?\n\nthanks.\n. @HubSpot @TrevorBurnham @also \nany idea when this PR will be merged?\n\nthanks.\n. ",
    "NexZhu": "Will this get merged?\n. Will this get merged?\n. ",
    "bigrepository": "Since this was asked in https://github.com/HubSpot/offline/issues/81 2 years ago and not answered - i don't think there is a solution to this problem right now. AFAIK offline,js only saves the payload you are sending, nothing else. So the actual answer you might get from the Server is transmitted to the browser, but no one's home to catch it ... \n. It is. I'd suggest using offline.js just for checking the online/offline status und not for catching actual requests. As long as Service Workers aren't supported by all major browsers, the only viable solution seems to \n1. check if online with offline.js and if offline\n2. save the payload of the request via localStorage/indexedDB (or using something like localForage.js)\n3. wait until connection is restored and fire the stored requests one by one\n\nThis actually works quite well and is not that complicated. I use AppCache to store the page files at the moment, which is deprecated and should be replaced by Service Workers in the future.\n. Since this was asked in https://github.com/HubSpot/offline/issues/81 2 years ago and not answered - i don't think there is a solution to this problem right now. AFAIK offline,js only saves the payload you are sending, nothing else. So the actual answer you might get from the Server is transmitted to the browser, but no one's home to catch it ... \n. It is. I'd suggest using offline.js just for checking the online/offline status und not for catching actual requests. As long as Service Workers aren't supported by all major browsers, the only viable solution seems to \n1. check if online with offline.js and if offline\n2. save the payload of the request via localStorage/indexedDB (or using something like localForage.js)\n3. wait until connection is restored and fire the stored requests one by one\n\nThis actually works quite well and is not that complicated. I use AppCache to store the page files at the moment, which is deprecated and should be replaced by Service Workers in the future.\n. ",
    "RicardoRamirezR": "I have no coffee script clue!\n\nBut in the generated js I've changed it to this:\n\n``` diff\n-  }, render = function() {\n+  }, render = function(state) {\n    var button, handler;\n+    if (typeof(state)==='undefined') state = Offline.state;\n\n    return el = createFromHTML(TEMPLATE),\n        document.body.appendChild(el), null != Offline.reconnect && Offline.getOption(\"reconnect\") && (el.appendChild(createFromHTML(RETRY_TEMPLATE)),\n        button = el.querySelector(\".offline-ui-retry\"), handler = function(e) {\n            return e.preventDefault(), Offline.reconnect.tryNow();\n        }, null != button.addEventListener ? button.addEventListener(\"click\", handler, !1) :button.attachEvent(\"click\", handler)),\n-    addClass(\"offline-ui-\" + Offline.state), content = el.querySelector(\".offline-ui-content\");\n+    addClass(\"offline-ui-\" + state), content = el.querySelector(\".offline-ui-content\");\n  }, init = function() {\n-    return render(), Offline.on(\"up\", function() {\n+    return render('init'), Offline.on(\"up\", function() {\n```\n\nIn this way when the Offline is inited no messages are shown, only on states changes.\n\nHope this makes sense.\n. Yeah, the this patch works well even in the new version 0.7.18\n. @boettner-it I have none.\n. I think that the ui ignores `Offline.options = {checkOnLoad: false};`.\n. I have no coffee script clue!\n\nBut in the generated js I've changed it to this:\n\n``` diff\n-  }, render = function() {\n+  }, render = function(state) {\n    var button, handler;\n+    if (typeof(state)==='undefined') state = Offline.state;\n\n    return el = createFromHTML(TEMPLATE),\n        document.body.appendChild(el), null != Offline.reconnect && Offline.getOption(\"reconnect\") && (el.appendChild(createFromHTML(RETRY_TEMPLATE)),\n        button = el.querySelector(\".offline-ui-retry\"), handler = function(e) {\n            return e.preventDefault(), Offline.reconnect.tryNow();\n        }, null != button.addEventListener ? button.addEventListener(\"click\", handler, !1) :button.attachEvent(\"click\", handler)),\n-    addClass(\"offline-ui-\" + Offline.state), content = el.querySelector(\".offline-ui-content\");\n+    addClass(\"offline-ui-\" + state), content = el.querySelector(\".offline-ui-content\");\n  }, init = function() {\n-    return render(), Offline.on(\"up\", function() {\n+    return render('init'), Offline.on(\"up\", function() {\n```\n\nIn this way when the Offline is inited no messages are shown, only on states changes.\n\nHope this makes sense.\n. Yeah, the this patch works well even in the new version 0.7.18\n. @boettner-it I have none.\n. I think that the ui ignores `Offline.options = {checkOnLoad: false};`.\n. ",
    "boettner-it": "Hi Ricardo,\n\ncould you post your event handler binding? I suppose there may be the same error I encountered.\n\nI did sth like that on first try:\n`Offline.on('up', myOnOnlineHandler());`\n\nwhich of course calls the function upon binding.\n\nThis is the correct way:\n`Offline.on('up', myOnOnlineHandler);`\n. Hi Ricardo,\n\ncould you post your event handler binding? I suppose there may be the same error I encountered.\n\nI did sth like that on first try:\n`Offline.on('up', myOnOnlineHandler());`\n\nwhich of course calls the function upon binding.\n\nThis is the correct way:\n`Offline.on('up', myOnOnlineHandler);`\n. ",
    "DocTolly": "I've noticed the same thing. I thought 'requests:flush' would be a seperate event for each POST but its a one off thing that is always called on reconnect - I also can't find a way to run a function for each individual captured $.POST that is submitted when you are reconnected which I think is due to this issue.\n. I've noticed the same thing. I thought 'requests:flush' would be a seperate event for each POST but its a one off thing that is always called on reconnect - I also can't find a way to run a function for each individual captured $.POST that is submitted when you are reconnected which I think is due to this issue.\n. ",
    "lenamtl": "+1\n. +1\n. ",
    "arojunior": "But if you are offline, how can you refresh the page? How it will be loaded?. https://github.com/arojunior/handle-failed-requests-js. I had the same problem and found the solution reading the code. They changed the parameter from **requests** to **interceptRequests** but the documentation is not updated. So you need to use: \r\n\r\n`Offline.options = { interceptRequests : false } `\r\n\r\ninstead of \r\n\r\n`Offline.options = { requests : false }`. You should use like the original implementation, passing datetime with the image. So the image will always be different and it will not be cached.\r\n\r\n```\r\ndefaultOptions = {\r\n    checks: {\r\n      image: {\r\n        url: function() {\r\n          return \"/yourimage.jpg?_=\" + ((new Date()).getTime());\r\n        }\r\n  };\r\n```. Dude, I think your PR is not gonna be accepted because of #255 . But if you are offline, how can you refresh the page? How it will be loaded?. https://github.com/arojunior/handle-failed-requests-js. I had the same problem and found the solution reading the code. They changed the parameter from **requests** to **interceptRequests** but the documentation is not updated. So you need to use: \r\n\r\n`Offline.options = { interceptRequests : false } `\r\n\r\ninstead of \r\n\r\n`Offline.options = { requests : false }`. You should use like the original implementation, passing datetime with the image. So the image will always be different and it will not be cached.\r\n\r\n```\r\ndefaultOptions = {\r\n    checks: {\r\n      image: {\r\n        url: function() {\r\n          return \"/yourimage.jpg?_=\" + ((new Date()).getTime());\r\n        }\r\n  };\r\n```. Dude, I think your PR is not gonna be accepted because of #255 . ",
    "sommmen": "this library does not support IE < 9, as stated in the main readme.\n. this library does not support IE < 9, as stated in the main readme.\n. ",
    "themeaningofmeaning": "In my electron build, offline is able to detect when the connection is shut off but not on.  The status remains in an infinite loop if the connection is established (i.e. it does not detect 'online' again).. In my electron build, offline is able to detect when the connection is shut off but not on.  The status remains in an infinite loop if the connection is established (i.e. it does not detect 'online' again).. ",
    "benoror": "@themeaningofmeaning same for me... I had to implement my own solution, basically a `ping` service. @themeaningofmeaning same for me... I had to implement my own solution, basically a `ping` service. ",
    "wackawacka": "same here:\n1. I load the page: comes up as online\n2. in dev tools click network>check \"offline\" checkbox: comes up as offline\n3. now I start getting /connection-test.js?_=1473791015506 net::ERR_INTERNET_DISCONNECTED (this is good) every few seconds\n4. I uncheck offline: no change - stays offline - the checks every few seconds stop appearing!\n\nedit: sorry forgot version: offline-js 0.7.18\n. same here:\n1. I load the page: comes up as online\n2. in dev tools click network>check \"offline\" checkbox: comes up as offline\n3. now I start getting /connection-test.js?_=1473791015506 net::ERR_INTERNET_DISCONNECTED (this is good) every few seconds\n4. I uncheck offline: no change - stays offline - the checks every few seconds stop appearing!\n\nedit: sorry forgot version: offline-js 0.7.18\n. ",
    "stefankaifer": "same problem here with Chrome on Android: \n\n`\n    Offline.options = {\n        checkOnLoad: true,\n        checks: {\n            xhr: {\n                url: https://bla.com/favicon.ico\n            }\n        }\n    };\n    Offline.on('down', function() {\n        setOnlineStatus('offline');\n    });\n    Offline.on('up', function() {\n        setOnlineStatus('online');\n    });\n    console.log(Offline.state);  ==> up\n    console.log(Offline.check().offline); ==> false`\n\nWrong state and check, because, the device has no internet connection, expected \n\nOffline.state = down\nOffline.check().offline = true\n. same problem here with Chrome on Android: \n\n`\n    Offline.options = {\n        checkOnLoad: true,\n        checks: {\n            xhr: {\n                url: https://bla.com/favicon.ico\n            }\n        }\n    };\n    Offline.on('down', function() {\n        setOnlineStatus('offline');\n    });\n    Offline.on('up', function() {\n        setOnlineStatus('online');\n    });\n    console.log(Offline.state);  ==> up\n    console.log(Offline.check().offline); ==> false`\n\nWrong state and check, because, the device has no internet connection, expected \n\nOffline.state = down\nOffline.check().offline = true\n. ",
    "PeterDaveHello": "Thanks @also \n. Thanks @also \n. ",
    "duxthefux": "For me it's also not working.\r\n\r\nI digged a little into the code, and found, that a setTimeout with 0ms is used here:\r\n\r\n`setTimeout(function() {\r\n \r\n    return Offline.getOption(\"requests\") !== !1 ? (Offline.on(\"confirmed-up\", function() {\r\n      return waitingOnConfirm ? (waitingOnConfirm = !1, clear()) :void 0;\r\n    }), Offline.on(\"up\", flush), Offline.on(\"down\", function() {\r\n      return waitingOnConfirm = !1;\r\n    }), Offline.onXHR(function(request) {\r\n      var _onreadystatechange, _send, async, hold, xhr;\r\n      return xhr = request.xhr, async = request.async, xhr.offline !== !1 && (hold = function() {\r\n        return holdRequest(request);\r\n      }, _send = xhr.send, xhr.send = function(body) {\r\n        return request.body = body, _send.apply(xhr, arguments);\r\n      }, async) ? null === xhr.onprogress ? (xhr.addEventListener(\"error\", hold, !1),\r\n      xhr.addEventListener(\"timeout\", hold, !1)) :(_onreadystatechange = xhr.onreadystatechange,\r\n      xhr.onreadystatechange = function() {\r\n        return 0 === xhr.readyState ? hold() :4 === xhr.readyState && (0 === xhr.status || xhr.status >= 12e3) && hold(),\r\n        \"function\" == typeof _onreadystatechange ? _onreadystatechange.apply(null, arguments) :void 0;\r\n      }) :void 0;\r\n    }), Offline.requests = {\r\n      flush:flush,\r\n      clear:clear\r\n    }) :void 0;\r\n  }, 0);`\r\n\r\n\r\nWhen you put a `console.log(Offline.getOption(\"requests\"))` into the timeout closure it returns `undefined`\r\n\r\nProblem described here: http://stackoverflow.com/questions/12959006/javascript-variables-undefined-within-settimeout-function\r\n\r\nAs I really want request to be `false`I added \r\n`return void 0;` to the beginning of the closure in setTimeout() and commented out the rest.\r\n\r\nFinal result:\r\n\r\n```\r\nsetTimeout(function() {\r\nreturn void 0;\r\n},0);\r\n```. For me it's also not working.\r\n\r\nI digged a little into the code, and found, that a setTimeout with 0ms is used here:\r\n\r\n`setTimeout(function() {\r\n \r\n    return Offline.getOption(\"requests\") !== !1 ? (Offline.on(\"confirmed-up\", function() {\r\n      return waitingOnConfirm ? (waitingOnConfirm = !1, clear()) :void 0;\r\n    }), Offline.on(\"up\", flush), Offline.on(\"down\", function() {\r\n      return waitingOnConfirm = !1;\r\n    }), Offline.onXHR(function(request) {\r\n      var _onreadystatechange, _send, async, hold, xhr;\r\n      return xhr = request.xhr, async = request.async, xhr.offline !== !1 && (hold = function() {\r\n        return holdRequest(request);\r\n      }, _send = xhr.send, xhr.send = function(body) {\r\n        return request.body = body, _send.apply(xhr, arguments);\r\n      }, async) ? null === xhr.onprogress ? (xhr.addEventListener(\"error\", hold, !1),\r\n      xhr.addEventListener(\"timeout\", hold, !1)) :(_onreadystatechange = xhr.onreadystatechange,\r\n      xhr.onreadystatechange = function() {\r\n        return 0 === xhr.readyState ? hold() :4 === xhr.readyState && (0 === xhr.status || xhr.status >= 12e3) && hold(),\r\n        \"function\" == typeof _onreadystatechange ? _onreadystatechange.apply(null, arguments) :void 0;\r\n      }) :void 0;\r\n    }), Offline.requests = {\r\n      flush:flush,\r\n      clear:clear\r\n    }) :void 0;\r\n  }, 0);`\r\n\r\n\r\nWhen you put a `console.log(Offline.getOption(\"requests\"))` into the timeout closure it returns `undefined`\r\n\r\nProblem described here: http://stackoverflow.com/questions/12959006/javascript-variables-undefined-within-settimeout-function\r\n\r\nAs I really want request to be `false`I added \r\n`return void 0;` to the beginning of the closure in setTimeout() and commented out the rest.\r\n\r\nFinal result:\r\n\r\n```\r\nsetTimeout(function() {\r\nreturn void 0;\r\n},0);\r\n```. ",
    "citricacid-pl": "Reviewed the translations and there are few typos.\n. Reviewed the translations and there are few typos.\n. ",
    "mateuszgachowski": "@citricacid-pl typos fixed, thanks :)\n. Is is possible to merge this one?. Im not sure if anyone is looking at those PRs - I've added Polish language some time ago and its still not commented / merged. Maybe its worth to do a fork of this project for now to have all new great features merged.. Oh, so you are alive guys :)\r\nGood to see that - yeah, I thought the project is abandoned but what a nice surprise :). @citricacid-pl typos fixed, thanks :)\n. Is is possible to merge this one?. Im not sure if anyone is looking at those PRs - I've added Polish language some time ago and its still not commented / merged. Maybe its worth to do a fork of this project for now to have all new great features merged.. Oh, so you are alive guys :)\r\nGood to see that - yeah, I thought the project is abandoned but what a nice surprise :). ",
    "TaDDu": "Hi,\r\nYou need to include language css to your page.\r\nhttp://github.hubspot.com/offline/\r\nInclude the javascript, one of the themes, and one of the languages on your site. You're done!\r\nhttps://github.com/HubSpot/offline/tree/master/themes\r\n\r\nHope this helps.\r\n. Hi,\r\nYou need to include language css to your page.\r\nhttp://github.hubspot.com/offline/\r\nInclude the javascript, one of the themes, and one of the languages on your site. You're done!\r\nhttps://github.com/HubSpot/offline/tree/master/themes\r\n\r\nHope this helps.\r\n. ",
    "nikhilkumar13": "Yup,  I used the same trick. Yup,  I used the same trick. ",
    "Piskvor": "This is quite common with \"guest\" connections, e.g. in hotels or restaurants.\r\n\r\nThe issue with \"captive portals\" is that there is no standardized way to announce this redirect. What you could do is make a HTTPS request - if that fails, either the network is down, or the ISP is redirecting to their captive portal (and thus the encryption should fail).. This is quite common with \"guest\" connections, e.g. in hotels or restaurants.\r\n\r\nThe issue with \"captive portals\" is that there is no standardized way to announce this redirect. What you could do is make a HTTPS request - if that fails, either the network is down, or the ISP is redirecting to their captive portal (and thus the encryption should fail).. ",
    "staminna": "I was missing the /themes/language css file. thx. I was missing the /themes/language css file. thx. ",
    "Mattwmaster58": "Why not do this? \r\n```\r\nsetInterval(function(){\r\n    Offline.check();\r\n    if (Offline.state === 'up'){\r\n        if (confirm(\"Reload?\")){\r\n            location.reload();\r\n        }\r\n    }\r\n}, 240000). Why not do this? \r\n```\r\nsetInterval(function(){\r\n    Offline.check();\r\n    if (Offline.state === 'up'){\r\n        if (confirm(\"Reload?\")){\r\n            location.reload();\r\n        }\r\n    }\r\n}, 240000). ",
    "JasonBee": "Thank you!\r\n\r\nIt works like a charm. I made a small edit to skip the user intervention. \r\n```\r\nsetInterval(function(){\r\n     Offline.check();\r\n    if (Offline.state === 'up'){\r\n       {\r\n            location.reload();\r\n        }\r\n    }\r\n}, 240000)\r\n```. Thank you!\r\n\r\nIt works like a charm. I made a small edit to skip the user intervention. \r\n```\r\nsetInterval(function(){\r\n     Offline.check();\r\n    if (Offline.state === 'up'){\r\n       {\r\n            location.reload();\r\n        }\r\n    }\r\n}, 240000)\r\n```. ",
    "GeekDenCode": "I have this problem too. Why author doesnt support him project.... I have this problem too. Why author doesnt support him project.... ",
    "wolfmaster8": "Hello @IsaacHub AND @MerDenchik , just add this code on the head of the page:\r\n```CSS\r\n<link rel=\"stylesheet\" type=\"text/css\"  href=\"/themes/offline-theme-slide.css\">\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/themes/offline-language-spanish-indicator.css\">\r\n<script src=\"/offline.min.js\" type=\"text/javascript\" charset=\"utf-8\" ></script>\r\n```\r\n\r\n**Just remember to change the paths. You must put the css files into _themes_ folder.**\r\n\r\nCan you provide your test link? I've created a folder inside my Child theme in WP named offlineJS, added a index.html with the code I've provided above.. Hello @hiteshsomani , just add this code on the head of the specific page:\r\n```CSS\r\n<link rel=\"stylesheet\" type=\"text/css\"  href=\"/themes/offline-theme-slide.css\">\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/themes/offline-language-spanish-indicator.css\">\r\n<script src=\"/offline.min.js\" type=\"text/javascript\" charset=\"utf-8\" ></script>\r\n```\r\n\r\nJust remember to change the paths. You must put the css files into _themes_ folder.\r\n\r\nThis is the brute-force method. \r\n\r\nAlternatively you can use [Cloudflare ](https://www.cloudflare.com/) as a CDN service. When you've configured Cloudflare go to Apps search for _**Offline**_. In the top menu it says **Install on**, there you can select the specific pages.. Hello @IsaacHub AND @MerDenchik , just add this code on the head of the page:\r\n```CSS\r\n<link rel=\"stylesheet\" type=\"text/css\"  href=\"/themes/offline-theme-slide.css\">\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/themes/offline-language-spanish-indicator.css\">\r\n<script src=\"/offline.min.js\" type=\"text/javascript\" charset=\"utf-8\" ></script>\r\n```\r\n\r\n**Just remember to change the paths. You must put the css files into _themes_ folder.**\r\n\r\nCan you provide your test link? I've created a folder inside my Child theme in WP named offlineJS, added a index.html with the code I've provided above.. Hello @hiteshsomani , just add this code on the head of the specific page:\r\n```CSS\r\n<link rel=\"stylesheet\" type=\"text/css\"  href=\"/themes/offline-theme-slide.css\">\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/themes/offline-language-spanish-indicator.css\">\r\n<script src=\"/offline.min.js\" type=\"text/javascript\" charset=\"utf-8\" ></script>\r\n```\r\n\r\nJust remember to change the paths. You must put the css files into _themes_ folder.\r\n\r\nThis is the brute-force method. \r\n\r\nAlternatively you can use [Cloudflare ](https://www.cloudflare.com/) as a CDN service. When you've configured Cloudflare go to Apps search for _**Offline**_. In the top menu it says **Install on**, there you can select the specific pages.. ",
    "bogdan-calapod": "Integrate it with `npm install offline-js` and requiring it somewhere in the init section of your app. Seems to work mostly fine here.. Integrate it with `npm install offline-js` and requiring it somewhere in the init section of your app. Seems to work mostly fine here.. ",
    "saip92": "You have to include a language CSS file as well\r\n\r\nYou can get one from [here](https://github.com/HubSpot/offline/tree/master/themes)\r\n\r\nFor english, you [this](https://raw.githubusercontent.com/HubSpot/offline/master/themes/offline-language-english.css)\r\n. You have to include a language CSS file as well\r\n\r\nYou can get one from [here](https://github.com/HubSpot/offline/tree/master/themes)\r\n\r\nFor english, you [this](https://raw.githubusercontent.com/HubSpot/offline/master/themes/offline-language-english.css)\r\n. ",
    "whmountains": "Just add a `package.json` and then define module.exports if you detect a commonjs environment.. Here's an example of the type of logic that's required:\r\n\r\nhttps://github.com/kriskowal/q/blob/master/q.js\r\n\r\nThat particular library also supports quite a few other formats, but you only need commonjs to publish to npm.. I see that you're using Grunt for build automation.  In that case probably the easiest way to do it would be with https://github.com/bebraw/grunt-umd. Just add a `package.json` and then define module.exports if you detect a commonjs environment.. Here's an example of the type of logic that's required:\r\n\r\nhttps://github.com/kriskowal/q/blob/master/q.js\r\n\r\nThat particular library also supports quite a few other formats, but you only need commonjs to publish to npm.. I see that you're using Grunt for build automation.  In that case probably the easiest way to do it would be with https://github.com/bebraw/grunt-umd. ",
    "Phoenixmatrix": ":shipit:. :shipit:. ",
    "partakit": "i have the same problem. i have the same problem. "
}