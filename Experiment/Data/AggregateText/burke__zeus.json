{
    "burke": "Sorry, I did basically most of the same stuff on the plane. \n. I'm also totally rewriting 90% of the server right now. I'll ping you when I'm done. It should be tonight. Sorry, we suck at picking different things to work on.\n. Hrm, this does kind of suck. Ideally we'd not depend on anything at all, but certainly implementing FFI is not a good idea.\n\nMaybe it's worth investigating that new file-based API for FSEvents. It sounds like a better solution anyway, as it lets us monitor thousands of files without opening thousands of FDs.\n\nCrappy part: It's Objective-C and we'll have to shell out to it.\n\nThe Interface I was imagining was:\n\n```\nOpen3.popen3(\"fsevents-wrapper\") { |sdtin, stdout, _, _|\n   # every time we start monitoring a new file, write it on its own line to the program's input\n   # each line of stdout from the program is the full path of a changed file\n}\n```\n. Fixed! We're now using FSEvents.\n. Fixed!\n. Fixed in 0.3.0\n. I don't care anymore.\n. The lag seems to be pretty predictably 0.5 - 0.8 seconds\n. Fixed in 0.3.0\n. Fixed in 0.3.0\n. Changed my mind. Not going to happen yet.\n. Not that this is done or anything, but I'm junking this in favour of more specific goals...\n. I bet you haven't upgraded to Mountain Lion right? I fixed this in 0.2.6. I missed a compile flag an executable I have bundled, which breaks it on Lion. 99% sure it's fixed if you grab the new version; please re-open if it's not.\n. That's exactly as easy as I hoped it would be. Thanks!\n. Added in master\n. Eh, good enough for now.\n. Can you run `ruby -e 'puts require \"zeus/server/acceptor_error_state\"'` and paste the output? Thanks!\n\nEDIT: Also, if it just outputs the same LoadError, I'd like to see `file /Users/mgrosser/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.3.0/lib/zeus/server/acceptor_error_state.rb`\n. I get the same thing when using pow, but only when:\n1. Pow is enabled and has successfully booted the application\n2. There is an error loading one of zeus's stages\n3. I'm running zeus from the gem install directory, and not from my development copy. \n\nSuper weird. I'm digging into it some more. Thanks for the report.\n. I literally have no inkling of an idea what could cause that issue, but I was able to solve it by pulling `AcceptorErrorState` into a different file, which I was thinking about doing anyway.\n\n0.3.1 should now work with pow. \n\nI believe what will happen now is that zeus will start up one or more 'error-state' acceptors. When you connect to these (eg. `zeus console`), they'll print the error they failed with. This should be much more helpful than a LoadError. Zeus currently makes some pretty specific assumptions about your unit testing setup, in particular (we use an ancient version of Test::Unit at my workplace). I hope to improve/add support for other testing frameworks over the coming weeks.\n. > any reason not to load config/application.rb ?\n\nI'm kind of taking a bet that gems won't change very often, and that nearly-everyone includes the default bundle, so I require it before application. If this is not true for you, you can run `zeus init` in your project and edit the config file generated at `.zeus.rb` to remove the call the Bundler.require(:default).\n. @grosser: Totally agree on the config file. This is still really new code, but a friend and I are cooking up an idea for something better and more maintainable. Everything else just needs a little more time to solidify before I'm ready to commit to a replacement.\n\nAs for the GC patch stuff, I should re-word the README to indicate it's not actually a hard requirement, but it is a pretty strong one. Without the GC patches, zeus will use about 10 times as much memory as booting rails normally, which is completely obscene.\n. Okay, cool. Closing the issue. Please let me know if you have any other problems.\n. Hmm, right, that definitely wouldn't work at all at the moment. I wonder if I can just blindly overwrite all of ENV in a remote process... I will play with this. Thanks!\n. There's actually no sane way to deal with this, since the environment has been loaded long before this command is parsed. [I added a warning](https://github.com/burke/zeus/commit/866705fc52e1e3b067cef01b7d919f13f670541e). I may revisit this in the future, but this is the best I can do for now.\n. Remote debugging is something that conceptually doesn't make a ton of sense for zeus. The options here would be:\n\n1) Explicitly run that initializer in the `development_environment` stage\n\n2) Change `Debugger.start_remote` to `Debugger.start_remote unless defined?(Zeus)`\n\nThe behaviour of running the remote debugger with zeus would be somewhat unfriendly, I think. It would be probably more desirable to just disable it rails is booted via zeus.\n. This is because `$LOADED_FEATURES` doesn't include files loaded via `load` by rake. I'll hack around this in v0.4.0. Thanks for pointing this out.\n. Fixed with 1ef75a5\n. Fixed on master\n. Fixed on master. \n. Fixed on master.\n. Closing: created #30.\n. I don't really have a great handle on all the little interactions in this part of the codebase right now. I've got a big refactor of it planned for this evening, if I have time. I expect this to be working and 0.4.0 to be out tomorrow. \n. It's theoretically supposed to be able to intelligently reload everything, no matter what changed; it's just got a few bugs right now that are preventing it from picking up some changes. I'll update this issue when I figure them out. It'll hopefully be tonight or tomorrow. \n\nWhen it's working properly, there's nothing you can change that will get it out of sync.\n\nI'm glad you guys are liking it.\n. Yeah, zeus works around that problem by not reloading classes. It actually kills processes outright, and restarts them. It's sort of like this:\n\nAt a few points along the path of starting up the application, it forks a child process to continue loading. When a file changes, all of the processes that have loaded it are killed, and execution resumes in their nearest parent process, which forks off a new process to do exactly the same thing as last time, except loading the new code.\n\nIt's kind of hard to explain, but it's theoretically bulletproof when it's working properly, much unlike truly attempting to reload ruby code.\n. I just released 0.4.0 and I'm _pretty_ sure this is fixed now. Please let me know if you experience any more weirdness with not reloading automatically.\n\nThanks for the feedback, guys. Much appreciated.\n. I bet the file change wrapper is silently crashing then. It's sort of painful to hook into FSEvents from ruby. I'll add some more instrumentation around it so it's more obvious when that happens...\n\nCould you try this?\n1. Clone the repository\n2. run ext/fsevents-wrapper/fsevents-wrapper\n3. paste in the full path to some arbitrary file\n4. Change the file\n5. See if the file appeared as output from the wrapper script\n\nMy guess is that this script will just crash on your system. You're using Lion or higher, right?\n. Okay. I'm running out of brain for the night, I think, but I'll play around and see if I can replicate what you're talking about.\n. Yup, I've got the same thing. I should be able to fix it now. Thanks for pointing that out!\n. I've finally fixed this now (or at least, I reproduced the problem on 0.4.0, and fixed it for my own use case in 0.4.1, which I just released).\n. I've found the problem causing the config/routes issue, and I imagine @ScotterC's issue too. I'll have a new version out later today when I finish debugging.\n\nRuby has a lot of ways of loading files and it takes some work to hook into all of them.\n. I'm pretty sure this is related to an issue I'm in the middle of debugging. With any luck I'll have it solved tonight.\n. I suspect all of these issues will be fixed now if you upgrade to 0.4.2. Give it a try and let me know. Thanks :)\n. Fantastic. Thanks!\n. fixed on master, will be in 0.4.1.\n. Fixed on master.\n. Yeah, I'll be releasing a gem with proper rspec support either later today or tomorrow. Sorry about that.\n. Good point. I'll have 0.5.0 batch the file changes.\n. Output is now less verbose, and the behaviour alleviates this problem a little bit (but not entirely). Closing for now, may revisit similar issue in the future.\n. Which testing framework are you using (if any)? If it's rspec, the released gem doesn't support it (and assumes you are using Test::Unit/MiniTest), but 0.4.0, when it comes out tonight or tomorrow, does -- so I'll close this issue when it's released.\n. 0.4.0 is out, with rspec support. Please let me know if you have any other issues!\n. What rails version are you using? And what zeus version? Different versions of rails start generators in slightly different ways.\n. can you run `zeus --version`? I believe rails 3.2 generator support was added some time after zeus-0.3.0. If you're not using zeus-0.4.0, could you upgrade to that and let me know if it works?\n. Awesome, good to hear :D. Let me know if you run into any other issues or weirdnesses.\n. Cool, thanks.\n. actually, nothing by definition.\n. Ah, fantastic! Yes, please, write as many tests as you have the patience for :)\n\nI will start writing comprehensive tests for my code in another release or two (I guess 2-3 days at this rate). I'm still in SPIKE mode to a degree, and my brain really sucks at TDD-ing SPIKEs. Until then, I'll keep whatever tests you write passing.\n\nIncidentally, I've also been using https://github.com/burke/zeus-extended-testcases as a sort of high-level test. You might find it useful.\n. I think everything's working now.\n. Haha. Yup. Sorry, I'm working on refactoring and documentation next week, I think.\n. \"fixed\" on 0.11.0\n. Shouldn't be too hard. I can do that in the next couple of days.\n. Great, thanks. I took a shot at this a few days back and it wasn't immediately obvious how to go about it. This will help a lot. I'll try to get it in and a new version out today.\n. I'm revisiting a bunch of ruby library compat stuff this afternoon and/or this weekend. I hope to have cucumber support baked in to `Zeus::Rails` by Monday.\n. Added cucumber support with cc30e8fb50afc744fafdf5428ff9753e1463b26b\n. Yup. Sorry about that. Pushing a new version in a few minutes.\n. On the list for this weekend :)\n. Done on master. New release in a few days.\n. Hrm, io/console appears to be built in to 1.9.3. I'm really hesitant to add gem dependencies to zeus, since any dependency has the potential to conflict with whatever is defined in the Gemfile it loads. \n\nSince I'm technically targeting 1.9.3+, and 1.9.2 working is only incidental, I think, seeing as the fix is simple and fairly obvious, I am not going to add this as a dependency.\n\nI've wrapped that require in a block that will print a message describing the problem if it fails (1dd4e81). Thanks for the report :)\n. At the top of `app/models/payment_gateways/spreedly_gateway.rb`, could you put: `puts \"-\"*80 ; puts caller`, then `zeus start` again and paste me the output (censored if necessary)? Presumably there will be either two or three traces.\n. Well, for some reason:\n1. `test/factories.rb:71` causes `SpreedlyGateway` to load. This happens using `load`, so it is not added to `$LOADED_FEATURES`.\n2. `SpreedlyGateway < PaymentGateway`, so `PaymentGateway` is loaded, again, using `load`.\n3. `payment_gateway.rb:384` does something along the lines of `[..., 'spreedly_gateway', ...].each { |f| require f }` (confirm/deny?). Since this file has been loaded using `load`, it is not in `$LOADED_FEATURES` and is read and evaluated again.\n\nThe big question for me is why this doesn't happen when you boot up your app normally. Could you put that debug statement back on the top of that file again and run `RAILS_ENV=test bundle exec rails console` or something? I'd like to see those trace(s).\n. Closing this one too. No idea whether it's still relevant. I don't get these anymore. When I fix #115, whatever it turns out to be, I suspect this'll go away if it hasn't already\n. Sorry for the delay. I'm on a refactoring binge, and I'm going to revisit your two issues afterward. I really strongly suspect it has something do with the slightly unusual load order and/or short-circuiting eager loading.\n. Sorry I never got anywhere on this. I'm closing this issue because zeus has been basically rewritten since then and I'm not positive it's still relevant -- if it is, it's likely the same issue as #115.\n. Added, thank you.\n. Yup, that definitely should have been removed. Thanks!\n. Hey, problem solved. I won't bother fixing it for old versions. If someone really cares, I'll happily accept a pull request.\n. I can't use `listen` (as far as I can tell) because I need to be able to modify the list of files being watched as the application runs. \n\nI do have linux support planned for some point down the road, but as my company is 100% on OS X, it's not a top priority for me at the moment. It'll happen eventually.\n. Targeting 1.0.0 for linux support, which I expect to be out in about a month. Windows support will never happen though. `fork` is kind of the crux of the whole project.\n. That could work, though I'm a bit hesitant to do that, as I don't really want to force people to think about what's changed and whether they should restart. I'm going to take a crack at inotify this week. I think it'll be substantially easier than FSEvents.\n. In progress at https://github.com/burke/zeus/tree/inotify. Unsure when I'll finish.\n. Master now runs on linux. I'll have a new release out soon. Probably today.\n. There are actually a couple rules in the parent directory makefile that\ncopy required files into the gem. I'd bet that's what the issue is. I don't\nthink it's possible to build the gem without building the main project.\n\nSent from my iPhone\n\nOn 2012-09-08, at 3:30, Wojtek Majewski notifications@github.com wrote:\n\ncloned master branch, then:\n\ncd zeus/rubygem\ngem build zeus.gemspec\ngem install zeus-0.0.0.gem\n\nbut without luck, got:\n\nBuilding native extensions.  This could take a while...\nERROR:  Error installing zeus-0.0.0.gem:\n        ERROR: Failed to build gem native extension.\n\n```\n    /home/jumski/.rvm/rubies/ruby-1.9.3-p194-perf/bin/ruby extconf.rb\n```\n\nmake\nmake: **\\* No rule to make target `inotify-wrapper.o', needed by\n`inotify-wrapper'.  Stop.\n\ndo i met the requirements?\n\n laptop rubygem [master] $ dpkg -l _inotify_\nDesired=Unknown/Install/Remove/Purge/Hold\n| Status=Not/Inst/Conf-files/Unpacked/halF-conf/Half-inst/trig-aWait/Trig-pend\n|/ Err?=(none)/Reinst-required (Status,Err: uppercase=bad)\n||/ Name                         Version                      Description\n+++-============================-============================-========================================================================\nii  inotify-tools                3.13-3\ncommand-line programs providing a simple interface to inotify\nun  libinotifytools-dev          <none>                       (no\ndescription available)\nii  libinotifytools0             3.13-3                       utility\nwrapper around inotify\nii  libinotifytools0-dev         3.13-3\nDevelopment library and header files for libinotifytools0\n\n \u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/burke/zeus/issues/67#issuecomment-8385645.\n. Release 0.10 is out actually. Just gem install Zeus :)\n\nSent from my iPhone\n\nOn 2012-09-08, at 14:22, Wojtek Majewski notifications@github.com wrote:\n\nok ill wait for the release - dunno how to build it without xcode ;P\n\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/burke/zeus/issues/67#issuecomment-8396913.\n. Awesome :). Let me know if you have any issues.\n\nSent from my iPhone\n\nOn 2012-09-08, at 14:26, Wojtek Majewski notifications@github.com wrote:\n\nit rocks :) thanks\n\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/burke/zeus/issues/67#issuecomment-8396941.\n. No longer relevant to master\n. Much better, thank you!\n. Yeah, I added a separate commit to fix that :)\n\nRe: Travis: Whoops :P. I'll fix that this afternoon. It will definitely break on anything related to FSEvents right now.\n. I just tried this in my own application and it worked without issue. Could you provide more detail? How does it fail?\n. Very weird. Thanks, I'll look into it.\n. Fixed on master. Next release will probably be tomorrow.\n. This might be tricky. For whatever reason I've had to basically kill runner processes with SIGKILL for them to shut down properly. \n\nThat was a whole lot of programming by coincidence though, so maybe a fresh set of eyes or a new day will make it a bit more obvious. I've never habitually used the exit status of a test run, but I can see how that's an important use case that should be accommodated. I'll take a crack at it in the next few days if you don't figure it out right away.\n. Right. I keep forgetting :)\n\n(At least partially) fixed: f76f8907a2\n. Fixed :)\n. I'm a bit confused about where this error would be coming from Everything I specifically do with ActiveRecord is pretty guarded for this sort of thing. Could you post the full stack trace? Censored if necessary. I'd like to see where in my code it's coming from.\n. This is actually even easier now :)\n\nhttps://github.com/burke/zeus/blob/master/docs/ruby/modifying.md\n\nYou'll basically want to create a file, something like `lib/my_plan.rb`, with contents:\n\n``` ruby\nrequire 'zeus/rails'\nclass MyPlan < Zeus::Rails\n  def boot\n    require BOOT_PATH\n    require \"action_controller/railtie\"\n    require \"action_mailer/railtie\"\n    require \"active_resource/railtie\"\n    require \"rails/test_unit/railtie\"\n    require \"active_support/version\"\n  end\nend\nZeus.plan = MyPlan.new\n```\n\nand then change the command in `zeus.json` to `ruby -r./lib/my_plan -eZeus.go`\n. @janlimpens Could you describe the problem in more detail? What do you see when you run `zeus start`? Also, please make sure you're not running zeus 0.10.1. I pushed a broken version by accident, then yanked it and pushed 0.10.2 about an hour later.\n. Mongoid compat issue fixed with 5cfd9e26bbc4c5810327b042826c1daeebde48c9\n. Were you running zeus from the project directory? I ran into this sort of issue recently when I was doing that.\n. Oh jeez, I know what's happening.\n1. Require zeus. Some of zeus is loaded.\n2. Require bundler. Load path is obliterated\n3. Try to require more of zeus. Fail.\n\nThe solution here appears to be one of:\n- Mess with the load path to ensure zeus is always on it.\n- Require all of zeus upfront.\n\nI think I'm leaning toward the latter option.\n. Re-adding it to the load path actually ended up being not-too-bad: https://github.com/burke/zeus/commit/6280e3e695c9c0016de78165d8aca7c0ed26adcc -- fixed!\n\nI guess I should release a new version today as this one is clearly broken if you don't have zeus in your gemfile (I've been putting it in with require: nil just for the dependency management... \n. LGTM \n. That's weird. This should never happen. Can you reproduce it again or was it a one-off occurrence?\n. Almost certainly related to #79. Looking into it.\n. Not relevant with 0.10.0\n. Very weird. Does this problem go away for a while if you restart zeus?\n. Almost certainly related to #78. Looking into it.\n. Does this happen when you change a file and it's reloading, or when you run a command?\n. This will be fixed in 0.10.0 when I release it in a couple days.\n. Thanks very much. I've reset my branch to this -- I'll try it out myself and hopefully get it released in the next day or two. Much appreciated!\n. Could you let me know if this still happens with 0.10.x? I'm doing a big sweep of ruby compatibility issues this weekend, and will hopefully have time for VCR.\n. Sorry, I just realized it's the weekend and most people aren't workaholics. No pressure on that :P\n. Awesome. Thanks!\n. Zeus 0.10.0, which'll come out in a day or two, will fix these problems. Sorry for the delay.\n. This is fixed on master and will be in 0.11.0 in a couple days. Sorry for the delay.\n. Yeah, I've been experiencing this occasionally too. I'm in the middle of a rewrite of the zeus server. It should be solved within a week.\n\nThanks for reporting :)\n. 0.10.0, which will come out in a day or two, should solve this problem. Sorry for the delay.\n. Right. It's improved a bit, but I forgot to fix it fully.\n. This is finally fixed on master. The command process now polls the client process every second, and quits immediately if it's dead.\n. So I think I'm going to call 2.3 support out of scope for `burke/zeus`, but I'll add a section somewhere in the docs for a list of plans supporting alternative setups (ie. just tyler-smith/zeus-rails23 for now).\n. I hadn't noticed this myself, since my shell fixes my terminal for me, but the code to reset it was in the wrong place. I fixed it yesterday after watching a co-worker experience the same thing, but I didn't think to push a new version of the gem.\n\nCould you try with 0.10.0.pre2?\n. The problem here I guess is that rspec tries to figure out whether it's running in a TTY, but my code tricks it into thinking it always is. I think the real solution here is to pass along that \"Am I in a TTY?\" information from the client to the server so it can make that choice for itself. I'm going to take a crack at that tonight.\n\nThanks for pointing this out. It hadn't occurred to me.\n. Created #90 to solve this.\n. ![http://f.cl.ly/items/2M1U3k1o2J0I2y3b1W0a/Screen%20Shot%202012-09-08%20at%209.12.18%20PM.png](http://f.cl.ly/items/2M1U3k1o2J0I2y3b1W0a/Screen%20Shot%202012-09-08%20at%209.12.18%20PM.png)\n. Unfortunately, JRuby is not supported. Zeus needs the ability to use `fork(2)`, but the JVM, in an effort to be cross-platform, does not support it.\n\nI should probably print a banner error on launch if using jruby. Sorry.\n. Someone was complaining about it. I haven't had a chance to investigate for myself yet.\n. Closing this because it seems to work fine and I can't remember what the issue was.\n. I'll give it a shot with turn this weekend. Thanks for the report!\n. This seems to work in the new 0.11.0 release I'm pushing soon, just by requiring 'turn/autorun' in minitest_helper.rb. Let me know if it's still a no-go after the upgrade.\n. I had to implement terminal raw mode myself. You're on OS X, right @duff? I'll cross-check my implementation against ruby's in the next day or two.\n\nEDIT: Also, I _strongly_ suspect this is the same issue.\n. It seems to be that readline is doing something it shouldn't. I'm having trouble figuring out what the problem is here. I'll come back to it in a while.\n. Fixed: f87b97f.  New release soon.\n. This has been fixed on master for a few days, but I hadn't pushed a new gem.\n\nI just pushed zeus 0.10.1, which fixes this issue. \n. 0.10.1 is totally broken. I accidentally ran my tests with 0.10.0 before pushing 0.10.1. Please upgrade to 0.10.2, and your problem should be solved. My bad :(\n. I'll try to make the debugging output a little better when this happens...\nfor now, could you copy the command out of zeus.json (ie. probably \"ruby\n-rzeus/rails -eZeus.go\"), and try running that? It'll definitely error, but\nI'd like to see the error you guys get.\n. Oh, um. Actually, 0.10.1 was totally broken. Testing failure. Sorry. Uninstall and downgrade to 0.10.0.\n. Strange; I haven't been able to replicate this. Can you share more information about your setup?\n\nVersions of: Zeus, Rails, OS, Ruby.\n\nGemfile dump if possible.\n. Can you let me know whether this still happens in 0.11.2? I fixed some potentially-related stuff and haven't been able to reproduce this consistently. Thanks :)\n. I expect this will still be an issue, actually. (likely duplicate of #111). I'm going to dig into these tomorrow, as it seems to be the biggest outstanding bug at the moment.\n. I've been having trouble wrapping my head fully around this part of the code. I rewrote it to be much more clear (to me) over the last two days. Can you guys try with `gem install zeus --pre` (for 0.12.0.pre) and let me know if it's fixed? Thanks :)\n. Moving to #111.\n. Hrm.... yeah, that would be a problem. \n\nI think the only solution would be to run `sudo zeus start` from the beginning. I can't think of a reasonable way to make zeus accomodate the need for elevated permissions for a specific command, sorry.\n\nYou could forward port 80 to port 3000 locally by running the following in a terminal:\n\n`sudo ssh -L80:localhost:3000 localhost`. \n\nIf you're on OS X, you'd need to enable 'Remote Login' under Sharing in system prefs.\n. I have an open issue to fix this. Rake does some really asinine stuff to run tests. It's a pain to work around it, but I almost have something working.\n. Actually, I'm going to close this to try to keep the open issues easier for me to wrap my head around. You can follow #54 to be notified when this is fixed. It should be with the next release.\n. Glad it's working well for you :)\n\nIncidentally, this issue was happening because Rakefile was being loaded twice. It's fixed in 0.11.0.\n. Pretty strange. Every time zeus forks, which it actually does right before running specs, it does:\n\n``` ruby\nActiveRecord::Base.clear_all_connections! rescue nil\nActiveRecord::Base.establish_connection rescue nil\n```\n\n...so it should be properly re-establishing a database connection right before running specs. I will try an app with postgres and rspec this weekend and see if I can reproduce this.\n. I'm going to assume this was caused by spork funkiness. \n\nSee https://github.com/burke/zeus/wiki/Spork for possible resolution.\n\nIf that wasn't it and the problem persists in 0.13.0, please open a new issue.\n. This would be awesome. I'll dig into the pow source to see what I can find.\n. Leaving this here for my own reference. I'll probably have to hack nack to make this work. Maybe somewhere in the vicinity of:\n\nhttps://github.com/josh/nack/blob/master/lib/nack/server.rb\n. @stanislav -- are you on OS X or Linux? Can I see the output of `uname -a`? Thanks.\n\nThis sounds like it's probably an issue with some of the stupid code I've had to write to put a terminal into raw mode.\n. Is this still broken on 0.11.2? If so, I have some ideas about how to fix it, but would like to know whether you still have the issue as is.\n. Great! \n\nI don't really know how hard Rails 2.3 support will be. It could be pretty simple if everything 'just works' (or it could be not-so-much).\n\nBasically what you'll want to do is to find the entry point into rails' code for running a console or something, and more or less transcribe it into a Zeus Plan. I think it should pretty much work out just by filling out the same methods as exist in the Rails 3 one.\n\nDefinitely let me know how it goes!\n. That's really weird. I can't even imagine what would cause that to happen. I'll keep it in mind next time I'm in that code, but I wouldn't know where to look to start debugging. Thanks for the report. Let me know if it happens again and I'll try to troubleshoot it.\n. Could you paste the next paragraph of the trace? I need the file/line the error occurred in.\n. It's just autotest that's the issue, right? Not the rest of the ZenTest suite? (zentest, unit_diff, and multiruby). At a cursory glance it looks like zentest and unit_diff wouldn't require an env load, and multi_ruby is kind of irrelevant to zeus.\n\nI'm not 100% sure if I'll support autotest or not, but I am definitely going to investigate integration with some sort of auto-testing tool over the next few weeks (kicker, guard, autotest -- whichever seems to fit best). I'm going to close this issue. You can follow #51 for updates, or reopen if I've misunderstood.\n\nTL;DR: yes, soon :)\n. I was sure I had fixed this myself, but... apparently not! Thanks!\n. Zeus depends on the presence of either FSEvents (OS X only) or inotify. I'm under the impression inotify is linux-only, but if it can exist on FreeBSD too, I can start crosscompiling for that platform as well.\n\nBack at the start of this project, I had an implementation using KQueue, but the 1:1 watched files to file descriptors is gross, and not a good for for this application.\n\nI wouldn't be terribly opposed to anyone submitting a pull request with a suitable KQueue adapter, I suppose, though I'm unlikely to do it again myself.\n. Oh, neat.\n\nI'd also have to spend some time looking up what the proper values are for some of the TTY-related syscalls. I'll likely get around to this at some point, but I have lots of issues to sort out with the current implementation first. \n\nI'm going to close this for now. I've tagged it for revisiting in the future.\n. Off the top of my head:\n- inotify doesn't obviously work. kqueue isn't appropriate because it requires a fairly obscene number of file descriptors.\n- some of the TTY code would have to be updated with some IOCTL constants for FreeBSD in github.com/burke/pty or github.com/kr/pty, whichever we're using right now.\n\nI think there was something else along the lines of magic platform-specific constants too.\n\nNothing super difficult; just some time.\n. `zeus commands` was added in zeus 0.10.0. The new version is much better :)\n. Is the gem `rubygems-bundler` installed?\n. I've seen this a few times too :(\n\nI think my socket code is wrong. I'll dig into it at some point in the next few days when I have a chance.\n. I _think_ this will be fixed in the next release. I fixed some bugs in some socket-related code this afternoon.\n. Does this still happen on 0.11.2?\n. Too bad. I'll try to replicate it tomorrow.\n. I've been having trouble wrapping my head fully around this part of the code. I rewrote it to be much more clear (to me) over the last two days. Can you guys try with `gem install zeus --pre` (for 0.12.0.pre) and let me know if it's fixed? Thanks :)\n. Closing for now, open new issue if problem persists in OS X with 0.13.0+ or in linux with 0.14.0+.\n. You're right, I started refactoring out the `panic()`s a couple weeks ago, but forgot to finish. I'll switch them to more graceful shutdowns. Thanks :)\n. Fixed in e9b918e\n. Ugh, weird. Could you try with 0.11.1? I haven't been able to reproduce this on either version, but 0.11.1 changed some of the low-level terminal code back to how it was in 0.10.0.\n. Brutal. \n\nIf you're using pry-rails, the prompt is probably actually there. It just won't render until you hit enter, for whatever reason.\n\nOtherwise, something else is broken. This stuff is difficult :(. Let me know whether you're using pry-rails and I'll look into it in a couple days either way. Lots of people have been experiencing this and I want to sort it out asap.\n. I can't even explain how long this took me to figure out. Fixed. Finally: f87b97f\n. 0.11.2 is released, which should fix this problem.\n. Great! :)\n. I'd like to do either a gem-per-feature deal, or perhaps zeus-contrib for the more fringe-y features such as spinach. Will look into this in the next couple of days. Sorry for taking an eternity to get around to this.\n. Closing this issue; I don't think spinach support belongs in core. Should probably set up a contrib repo, but the wiki's got it.\n. /facepalm.\n\nSorry about that. Removed on master.\n. Here's what I think the problem is:\n\nNormally, the test environment uses eager loading, which means (to simplify) every constant in your load path is required all at once.\n\nZeus disables eager loading to make it faster.\n\nNow, let's say you had these two objects:\n\n1) `class Deployment`\n\n2) `module App::Deployment`\n\nWith eager loading (as normally happens), the App::Deployment module would be properly selected for inclusion.\n\nWithout eager loading... It should still find the right module, but it appears it is not, and it's instead attempting to include the top-level `Deployment` class.\n\nIs `App::Deployment` located in a discoverable path? Eg. Does its pathname end in `app/deployment.rb`? If it doesn't, it'll never really work with eager loading off.\n. https://github.com/burke/zeus/blob/master/rubygem/lib/zeus/rails.rb#L222-L227\n\nThis would have been added after 0.10.0. It fixed some issue, but I can't remember the details anymore.\n\nI'll try to dig into this at some point in the next few days.\n. Just pushed a commit to master that will properly report errors that happen in after_fork or other phases of zeus booting stuff up, which is what all these are about. I'm going to close this and release 0.13.0 this evening. If you still have issues that don't immediately become blindingly obvious, please open a new issue :)\n. Moving to #174.\n. Are you sure it didn't fail? There's no file at zeus/plan.rb, though\nperhaps there should be, now that I think about it.\n\nOn Mon, Sep 24, 2012 at 11:12 AM, Michael Grosser\nnotifications@github.comwrote:\n\n> tried require 'zeus/plan' which did not fail but also did not define zeus\n> or zeus::plan, kind of bad,\n> so maybe it should be removed or filled with the plan definition ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/120.\n. It's poorly documented and I plan to fix this but you can see the backtrack\nby attempting to run a command. Eg. If boot crashed you can see the trace\nby running 'Zeus c'.\n\nSent from my iPhone\n\nOn 2012-09-27, at 9:12, Sean Kirby notifications@github.com wrote:\n\nI would love to be able to see the crash logs when running zeus start\n\nI have a large rails app that zeus just crashes on when trying to load the\ndevelopment and test environments and I have no idea why.\n\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/burke/zeus/issues/121#issuecomment-8937350.\n. Moved to #174\n. This may be helpful/relevant: https://github.com/burke/zeus/wiki/Spork\n. I'm working on better diagnostics for when processes fail to connect or error out (#174 -- hopefully sorted out soon.)\n. Issue looks dead, closing. \n. Moved to #173. Working on it soon.\n. Okay, it looks like the problem here is that zeus is killing then re-establishing new connections each time it forks, but not setting the cached connections to the new objects.\n\nI've added a commit to master that sets the connection to `shared_connection` if it exists. For other locations your app specifies, you'll need to set up an [`after_fork`](https://github.com/burke/zeus/wiki/Spork) to reset them. \n\nAlternatively, if there's a gem you find that caches the connection, please let me know and I'll add code to account for it.\n\nSo this will probably be fixed in 0.13.1, which I expect will come out in the next couple days. Closing for now, please reopen if you still have issues in 0.13.1.\n. I don't plan to add support for this, though I will eventually add some way to pause reloading.\n\nHowever, you can disable it locally by changing the following:\n\n``` javascript\n// zeus.json\n{\n  \"command\": \"ruby -rubygems -rzeus/rails -r./lib/hack -eZeus.go\",\n  ...\n```\n\n``` ruby\n# lib/hack.rb\nclass << Zeus\n  def notify_features(*)\n  end\nend\n```\n. 0.13.1 fixed a lot of bugs that look kind of like this (and I haven't had this one happen to me). So I'm going to close this, but please re-open if it happens again on 0.13.1+\n. Moved to #173. Working on it soon.\n. Sorry for the huge delay in responding.\n\nI haven't put a ton of thought into it, but my though was that alternative plans could be distributed as gems called `zeus-____`, as you've done. \n\nThe gem would define a subclass of `Zeus::Plan` as you also have done. the tricky bit, as I'm sure you've realized, is providing instructions for crafting the zeus.json. I'm really not thrilled with how that part of the project as a whole is working yet, and it'll get revisited at some point if I manage to get around to it.\n\nBasically, whatever you can get to work is fair game as far as that goes.\n\nNice work on the plan :)\n. I can take a crack at this some point, but I'm not optimistic about the outcome. Code coverage in ruby is super hacky, and so is zeus. Ugly hacks don't often combine well with other ugly hacks.\n. Sorry I haven't had any time to fix the issues on this project lately. I\nshould be able to deal with this after Black Friday.\n\nSent from my iPhone\n\nOn 2012-11-05, at 9:29, Matt Rogish notifications@github.com wrote:\n\n+1\n\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/burke/zeus/issues/133#issuecomment-10074662.\n. Fixed in https://github.com/burke/zeus/commit/1890a6877f65f38659cec234749cca67e8c26f06, though I'm curious why your terminal doesn't support winsize. I suppose my ioctl code for linux is broken. I'll open a different issue for that.\n. Moving to #174\n. Closing. I just released 0.13.0 which will not make the crash output available. If the problem still exists, please open a new issue. Thanks, and sorry for the huge delay!\n. Moved to #173. Working on it soon.\n. Polling 1000 files each second or so on NFS is going to be a Bad Time\u2122. It's pretty sketchy even on a local FS. \n\nI'll consider adding it, but I don't think the UX is going to be very valuable.\n. The reason I'm a little hesitant to implement this is that it fills exactly a use case that I'm don't think would work well with polling:\n\n1) Platforms that don't have FSEvents or inotify are already excluded because I don't build binaries for them.\n\n2) There are no additional dependencies for these subsystems since I integrate directly with them rather than relying on, eg. `rb-fsevent`.\n\n3) FSEvents and inotify work on all local filesystems afaik, but fail on remote filesystems.\n\n4) Zeus watches every file loaded by rails. This is generally a pretty obscene number -- enough that I couldn't use kqueue because kqueue uses one FD per watched file, and I didn't want to force the user to up the rlimit for FDs.\n\n5) I don't know much about how NFS (or CIFS) are implemented, but I do not suspect polling 1000 files on a timely basis is going to be reasonable. (my application watches something like 4000, so 1000 isn't actually a high estimate)\n\nZeus' user experience to date has been less than stellar, but it's getting better, and I don't really want to commit to a feature that will perform like shit for anyone that stumbles into a situation where they actually need it.\n. Actually, I suppose it wouldn't necessarily be that horrible if the [`inotify-wrapper`](https://github.com/burke/zeus/blob/master/rubygem/ext/inotify-wrapper/inotify-wrapper.cpp) were able to detect when a file it's passed couldn't be observed via `inotify`, and add it to a second pool that's observed in a separate thread via polling. It's pretty unlikely anyone would have all their gems mounted via NFS (I hope?), so this should constrain the polled set at least to a reasonable size.\n. I actually don't think there's anything I can do about this. Output is 'consumed' instantly by the client process and forwarded to the slave*. I can't think of a way to selectively consume input only when the slave wants it.\n\nI agree it would be nice, but it's either really difficult or impossible. Closing for now. Sorry.\n\n---\n- the output that falls off of one command to the next is output that isn't consumed by the previous process.\n. I never actually finished that site (as you can obviously tell by the appearance!). I'll be launching a new one this weekend.\n. related to #130. Closing, and fixing #130 soon.\n. Added https://github.com/burke/zeus/blob/master/contributing.md. I hope to improve this a bit in the future, but it should have the basic instructions required to successfully build the gem now. Feedback appreciated if it doesn't work out.\n. Not yet, but will work on it once I fix some of the outstanding issues. Closing for now as it's on my todo list.\n. Moved to #173. Working on it soon.\n. Thank you. I will work with this to try to solve the zombie problem.\n\nYou are definitely correct in your assessment that the IPC is shoddy. I'm going to try to fix it up over the next days/weeks. Sorry for the long delay.\n. This works fine on OS X. It must be an issue with my inotify code.\n. I believe this is fixed on master. Please reopen if it's still an issue with 0.14.0, which will be released either this evening or tomorrow. I wasn't able to reproduce before or after, but several similar issues have been fixed.\n. Thanks!\n. I'm not opposed to adding FreeBSD support, but it's not as trivial or as low a maintenance burden as you might think.\n\nFilesystem polling is different. inotify works well on linux, but as I understand it's a pretty third-class citizen on FreeBSD. kqueue is fine, but requiring an FD per watched file as kqueue does is not really feasible for the large number of files watched in most rails apps.\n\nAdditionally, some of the syscalls in https://github.com/burke/pty and https://github.com/burke/ttyutils would have to be changed.\n\nClosing for now, as I have much higher priorities at the moment, but I hope to get around to this eventually. Pull requests accepted in the interim if you or someone else is feeling really ambitious :)\n. Closing for now, but I'd like to revisit this at some point in the future and make zeus do the actual _right_ thing, whatever that is. Thank you for the stopgap fix though :)\n. Yup, I made a really lazy gamble that users would only have one of {minitest, test-unit, rspec} in a project. This fix isn't totally perfect, since it relies on the `*_spec.rb` naming convention, but it's a lot better than what it is now. Thanks :D\n. I'll be resuming development on zeus next week, so hopefully this will make it into a release inside of a couple weeks.\n. It seems that when you run `screen zeus start`, it runs it in a totally different environment than your shell. I have no idea why this would happen, and I can't reproduce it on my machine.\n\nThe statuslogger message is because it can't obtain the window size of the terminal it's being started in (I think 0.13.0 has a minor improvement to handling this case). This kind of sounds like a screen issue more than anything. I don't think there's anything I can do about it. Sorry :/\n. Fixed in https://github.com/burke/zeus/commit/8904b2777b1fdd9899db6ee2d5c426a11b25df84\n. Cool, thanks. If the gist is yours, the description still reads p194.\n. Fixed on master :D\n. It'll be fixed when 0.14.0 comes out, probably later tonight, but https://github.com/burke/zeus/commit/856a4fe0c5e8d0d115acd3026a4ed8fa44cbaa7b#commitcomment-2274036\n. I ended up just releasing it as 0.13.1, and it's out now.\n. I believe this is fixed by the recently-merged https://github.com/burke/zeus/commit/d6deacf8c291fd3dcc60a5580126526e86f7cb16. Next release will work.\n. Running the command outside of the zeus master process will always produce that error message, because that fd only exists when the command was forked from the zeus master.\n\nClearly it's crashing somehow though. I'd be willing to bet it's a quirk of your setup that will be really apparent once I fix #174 (that's really the core issue here). Therefore, closing for now and working on #174 soon.\n. I believe the unresponsive terminal problem is fixed in the newly-released 0.13.0.\n\nZeus kind of expects to be able to successfully boot the application the first time it's launched, therefore if your bundle is out of date, you will have to `bundle` before you `zeus start`. Maybe I could have zeus run `bundle check || bundle` before starting the server? It seems kind of unnecessary.\n. Looks good. Thanks!\n. I'm unable to reproduce this with 0.13.0, but I don't think I did anything to fix it. Can anyone that had this problem try upgrading and let me know if it still happens? Thanks!\n. Super weird. I'll try to reproduce it.\n. @dalibor Are you on linux or OS X?\n. Ah, you mentioned gedit. \n\nThat would explain why I haven't been able to reproduce it on my machine, you guys are all using linux. I'll fire up a vm :)\n. @dalibor I think it's because vim triggers two filesystem events when it writes files, while gedit probably only does one.\n\nThen there's inotify, which seems to fire a crapload of events for every file changed. This doesn't surprise me all that much.\n. I'm pretty confident this is fixed on master, as a lot of related issues are fixed, but I was never able to reproduce this particular one.\n\nPlease re-open if the issue persists after 0.13.1, which I will release later today (or possibly tomorrow)\n. Closing. #162 looks like a reasonable solution so this issue is no longer necessary. Discussion moves there.\n. I really like the contribution, but I'm currently trying to figure out exactly what to do about this vendored version of `m` we seem to have going on. I'm considering trying to get the necessary changes merged back into qrush/m, but looking at what I've already done to it, they might be too substantial.\n\nI'll mull it over. I'll probably end up just merging this and committing to the maintenance burden of an internal `m` fork :P.\n. Thanks!\n. Probably the same issue as #115. Will try to fix. \n. I'm curious why you'd want to do this. With eager_loading enabled, a bunch of stuff is loaded earlier, forcing zeus to restart processes much more often in a normal development cycle. \n\nIf there's a reasonable rationale for this, I'll merge, but I just want to make sure it's not a workaround for some other bug I should be solving.\n. Closing for now. Feel free to reopen if you'd like to discuss further.\n. I finally have some time to work on zeus again soon. I'll be working on contributing instructions right away.\n. Yeah, this makes way more sense. Not sure how I thought that was a good idea. Thanks for the contribution :)\n. @gmile's got it. If you manually ran one test file, it would be the same behaviour. I want to preserve that to some degree.\n. Moved to #173. Working on it soon.\n. Unfortunately, it isn't really possible (or at least, is out of scope for the time being). Zeus has no capacity to reload files really, it can only detect which savepoint happened previous to loading a given file and restart from there. If you can cause those files to be initially loaded later in the boot process (perhaps by removing references to them in initializers or changing your application.rb), it should have the desired effect.\n. Ah, I see. I have a bunch of modules included in ActiveRecord::Base too, and they just cause zeus to restart most of my app, same as you.\n\nThe theory is that the stuff you work on most frequently doesn't cause as much reloading. In general, the hope is that people don't spend too much time working on stuff that's included into AR::B I guess.\n\nSorry I couldn't be more helpful in this case.\n. Works for me on all three supported platforms!\n. Fixed, or at least greatly-improved in the last few commits. New release tomorrow I think.\n. I've made several improvements to the error reporting. I'll be releasing a new version tomorrow hopefully.\n\nIf your problem still exists after the update, or if you find a new issue, please don't hesitate to re-open or create a new one.\n\n![a](http://cl.ly/image/133D2y272g3T/content)\n\n![b](http://cl.ly/image/17090t2m2k1o/content)\n. Thanks for the report!\n. Sorry, error in `contributing.md` -- you'll need `$GOPATH/src/github.com`, not `$GOPATH/github.com`. Closing issue, but please let me know if you have any other problems with this.\n. Please see #174 for updates on this. It's likely something simple in your case, but the root problem here is just that zeus is totally unhelpful when one of the slave processes dies.\n\nI hope to solve this tomorrow and release a new version by the end of the week. \n\nClosing this issue -- #174 will have updates when I've resolved this, then I can help you figure out the underlying issue if there still is one.\n\nAs a random shot in the dark, if your Gemfile.lock specifies method_source make sure zeus isn't loading a different version of method_source than the one your app does. In the currently-released version, that's a really easy way to get this error.\n. Ah, great. Just uninstall all versions of method_source, then run bundler in your app and everything will probably work\n. Perfect! The next version shouldn't have that problem...\n. Thanks. Hadn't thought about this.\n. Just realized that. Already editing :)\n. https://github.com/burke/zeus/commit/61e38e0833743a9824be3fdee60a1cb59669df23\n. Test frameworks do some really asinine hacks to autorun loaded test files. What version of rspec are you guys using? I'll try to figure this one out early next week.\n. Thanks. I'll play with it on monday.\n. Fixed in https://github.com/burke/zeus/commit/856a4fe0c5e8d0d115acd3026a4ed8fa44cbaa7b\n. Fixed on master.\n. Closing because #182 was fixed. Will reopen if I see it happen again.\n. Worked around this instead.\n. Looks like it does. I think it's a pretty sensible solution, and pretty much what I would have ended up doing had I dug into it more myself. Closing. Thanks for your contributions, @antifuchs!\n. Kind of cool thing about this architecture is that it could \"easily\" work for not just any framework, but actually any language that supports tracking loaded files. Of course, I haven't got around to doing that, but it's totally possible.\n. Sorry, I will start doing both of these.\n. Primarily, I don't think guard should be booting zeus. It made sense for spin, but zeus is larger in scope. The process should be:\n\n1) `zeus start`\n\n2) `guard` or `zeus guard`, depending on whether that's a win at all.\n\nI've probably used zeus-guard for 2 minutes combined so far, and guard for maybe 10. It's entirely possible the resolution of this issue will be \"burke plays with guard-zeus for another 20 minutes\".\n. No worries, thanks for the fix!\n. Thanks!\n. Cool, thanks!\n. Are you on linux or OS X?\n. Ok. I'll dig around tomorrow and see if I can figure out what's happening.\n. Zeus's internal process tracking stuff is all keyed by that identifier, so reusing them in multiple places will break things. Here's a fairly simple solution:\n\n1) Create a file at `lib/custom_plan.rb` (or called whatever you want; it doesn't matter):\n\n```\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n  alias_method :prerake_test, :prerake\n  alias_method :rake_test, :rake\nend\n\nZeus.plan = CustomPlan.new\n```\n\n2) Change the second `prerake` in your `zeus.json` to `prerake_test`.\n\n3) Change the command to `ruby -rubygems -r./lib/custom_plan -eZeus.go`\n. Going to fix it tomorrow. Gotta figure out how to build a good test harness for all the different shit zeus nominally supports. Thanks for the report.\n. Ah yes, this would not work. It's because we disconnect/reconnect from the database several times while booting the app in zeus. I'm not too sure how/if-possible to work around this. Simply not disconnecting might actually solve the problem. I guess we could test for whether the AR connection is an in-memory SQLite DB to determine whether to reconnect or not.\n. Created a new issue (#352) to aggregate these related issues. I'll try to fix soon.\n. Closing, see #201 for updates.\n. Yeah. I want to figure out a better way to launch that binary without loading ruby to do it, but I don't think it's possible with rubygems. I have a couple other ideas rolling around but nothing great yet.\n\nHere's an example series of events that happens when you use vroom:\n\n1) The file is changed on disk.\n\n2) Vroom triggers the spec command.\n\n3) Zeus instructs the \"test_helper\" slave to fork a new process to run the spec.\n\n4) inotify reports the changed file to zeus.\n\n5) Zeus kills the test_helper, which has already spawned the new test process.\n\nUnfortunately, inotify is not instantaneous. I'm not sure how to deal with this really. I'll think about it.\n. Not sure when exactly this was addressed, but it seems to have been fixed. Reopen if it's just me that it's working for. Sorry for the delay.\n. The executables aren't checked in -- if you want to run them from git rather than from the released versions, you have to set up a [sort of complex toolchain](https://github.com/burke/zeus/blob/master/contributing.md#hacking-on-zeus). It's not possible to specify a zeus dependency by git ref in a gemfile.\n. `after_fork` can accomplish this, but it will also run on the initial load. I'm sure there's a way to work around that if necessary. \n\nI'm not sure whether this addresses the problem. I can't think of a usecase that `after_fork` couldn't be used for, anyway. Sorry I didn't get back to this in anything resembling a reasonable timeframe. Closing the issue -- feel free to reopen if you still care and `after_fork` doesn't work out.\n. If it was fixed in sunspot, I'm pretty content with that as a resolution for this issue. Thanks :)\n\nI suppose what's happening is that zeus has opened a TTY with a specific mode (`r+` in this case) and it can't change it to `a`. There's probably a way to fix that, but I don't know how. This is the first issue I've heard of, and it was an easy upstream fix, so I'm just going to close.\n\nSorry for the delay :/\n. I've pushed a new version as 0.13.3.rc1. Thanks everyone :)\n. Sorry I never got around to this. It's likely fixed in newer releases and I can't reproduce, so I'm closing. Please reopen if it's still a thorn in your side.\n. Not sure when exactly this was fixed, but it's not happening on master. I'll push a new release soon.\n. I believe this has been fixed recently. Sorry I never got around to this issue.\n. Thanks to @sideshowcoder's PR, you can now set the `ZEUSSOCK` environment variable (make sure it's set for both `zeus start` and and client processes you run). Just set it to some location that isn't in an almost-filesystem :)\n. Thanks again @antifuchs. Assuming this solved the issue and closing.\n. I want to rework the output subsystem yet (I think I'd like the core to just generate a stream of events that a wrapper turns into a UI) -- but #260 definitely addresses this issue quite nicely.\n. Sorry, but this is out of scope for now. It's a rather difficult thing to decide (do we look in all recursively-nested subdirectories of all load path items? what about any tmp directories that happen to be there? It just gets unreasonable fast.\n. Sorry, not enough here to go on. If it's still a problem could you re-open with more information? See the template at https://github.com/burke/zeus/blob/master/contributing.md#reporting-issues maybe.\n. I think this does belong in a custom Plan. I don't want to overload the core with flags. There's a lot of good solutions here.\n. Zeus does clean up after itself if sent `SIGTERM` (Ctrl-C), but it's unable to clean up after itself if sent `SIGKILL` (`kill -9`). I can't remember whether it behaves nicely on `Ctrl-\\` or not. \n\nIn any case, zeus is already handling every signal possible. The remaining signals are unhandle-able.\n\nIf zeus is failing to clean up on `SIGTERM`, that's a bug. If it's still happening in `0.13.4.pre2`, please reopen a new issue.\n\n...and sorry for the huge delay :/\n. Fixed, I believe, thanks to @sideshowcoder!\n. Sorry for being completely MIA. I've been busy with work and haven't been able to get my head back into this project for a good long while. @antifuchs, I've added you to the collaborators for this project. Thanks all for dealing with my half-baked code :/. \n. It would be because your app is loading those really early in your app's startup for some reason. You could stick a `raise` in a factory to see what path leads to it being required and try to defer it to your spec/test_helper. This isn't really a problem we can deal with in zeus-land, I think.\n\n(Also, sorry for the crazy delay. I've been burnt out on this project for a while...)\n. It's conceivable that zeus is the straw that broke the camel's back in pushing your stack usage over the current limit.\n\nIt's also conceivable that there's some bug in either zeus's rails integration or your app (or both?) causing divergent recursion. \n\nTry upping the stack limit using `ulimit` and restarting zeus, maybe.\n. Created a new issue (#352) to aggregate these related issues. I'll try to fix soon.\n. Sorry, JRuby support is not planned. Lack of `fork` is a big roadblock. \n. Zeus should probably use this algorithm to find the socket:\n1. If socket path includes a '/', use that path exactly.\n2. If socket does not include a '/' (as by default in the form of \".zeus.sock\"):\n   1. Check for socket in current directory.\n   2. Does current directory contain a Gemfile or is it the filsystem root? If yes, fail. If no, go up a directory and go to step 2.1.\n. There's a LOT of UNIX-specific stuff going on in zeus's code. It may (or may not?) be theoretically possible, but it's not even just `fork` that's missing. This is a very UNIX-centric utility, unfortunately. Sorry.\n. Just added both you guys as collaborators. I don't have the energy to work on zeus lately, so do whatever you think makes sense :)\n. See https://github.com/burke/zeus/blob/master/docs/ruby/modifying.md for instructions on modifying Zeus's default plan. It shouldn't be too hard to make a production rake command.\n\nHowever, since production preloads most of your app, it will cause most of your app to reload every time you change a file. I didn't include this in the default plan for that reason.\n. Duplicate of #167. I'll try to take a look at this soon.\n. I wonder whether it would make more sense to inspect `boot.rb` for intent to boot from `*/dummy`, but this is fine. Merging and giving you a commit bit. Thanks, and sorry I took forever to get around to this :S\n. I need a backtrace to investigate this, but I'm inclined to suspect it's just an app incompatibility thing. There are a few differences that could make an app not boot, but I don't think zeus is relying on any of them.\n\nReopen with a backtrace if it's still an issue.\n. Yup, in this case, you'd just run any of the commands displayed in red, and it would show you whatever trace that ruby process failed with. Since `boot` failed in this case, all the commands would show you the same trace.\n. Done.\n. Sorry, that would cause badness if someone accidentally tried to start zeus while it was already running. The socket is the means by which zeus is able to detect that it's already running. I agree that having to remove it manually is a bit gross, but it's the best solution to the problem I can think of.\n. I think the state machine is too confusing. I couldn't figure this one out either (and then I got super burnt out, partially because of this...).\n\nI haven't noticed any of this sort of crash in the last few days. Do you figure you've solved this problem? Fantastic work in either case!\n\nI'm going to attempt to clean up some of my gross Go code over the next few weeks. Sorry for subjecting you to it in this state :P\n. Merged. Thanks for the contribution. You have a commit bit now.\n. @bezelga Works for me on the newly-pushed 0.13.4.pre2 (and master):\n\n![img](http://cl.ly/image/3U1T0n2k3U2d/content)\n. Wait, sorry, #67? Could you elaborate?\n. Ok. Are you positive the env var is set? could you try `ZEUSSOCK=/tmp/zeus-myproj.sock zeus start` and confirm that that is definitely broken too? (also, try `which zeus`. It's theoretically possible that even though you only have the one gem, you have some other copy of zeus installed elsewhere).\n. I'll try building on linux tomorrow. I've generally built zeus on my macbook, but it's supposed to work on linux.\n. I should really put the zeus version in the startup message. Does it work with `0.13.4.pre2`? There have been a lot of bugfixes since the last release. Sorry for the delay.\n. Does it work with 0.13.4.pre? Sorry for the delay. There have been a lot of contributions since 0.13.3.\n. Neat. I had a very, very hard time convincing myself not to introduce the zmq dependency to zeus.\n. I'm not able to pass them along for kind of subtle and complicated reasons. Passing the env var along is easy enough, but setting `RAILS_ENV` can have many effects early on in the boot process, invalidating certain assumptions that zeus has already made by the time this code is executed. \n\nI can explain it better when I've had some sleep if you're really interested, but suffice it to say I wish it could do that too, but it's a limitation of the way zeus works that this just isn't conceptually possible.\n. Leaving this here for my own future reference mostly:\n\nzeusclient can be called with either a TTY or a pipe as an input stream, but it doesn't pass that information along to zeusmaster. If a file or other stream is piped into zeusclient as is the case in this issue, a TTY is still used to communicate with the backing ruby process.\n\nIf zeusclient is called with a pipe, a pipe should be opened to communicate with the command process.\n. Looks like this is fixed now.\n. I remember having a reason for this but I can't remember what it is anymore. I'll mull that over; it's been bugging me a bit too.\n. My ultimate goal was to start zeus in a background-y way (vaguely like spring), but I didn't want to do that until it was stable enough. It's starting to get close.\n. Yup. I haven't bothered to pass the two streams independently yet. It's not high on my priority list, but if someone wants to take a crack at this, it might not be an insanely-complicated modification. I haven't thought about it much.\n. I don't remember why I wrote it the way I did, but if this fixes problems, great! I gave you a commit bit; do as you wish :)\n. I don't use guard, but I imagine @quark-zju's got it. To answer your question more literally, you could run `zeus start > /dev/null 2>&1` to silence the output.\n. You can [increase the available stack size with ulimit](https://www.google.ca/search?q=ulimit&oq=ulimit&aqs=chrome.0.57j5j0l2j62l2.1408j0&sourceid=chrome&ie=UTF-8#sclient=psy-ab&q=increasing+stack+size+with+ulimit&oq=increasing+stack+size+with+ulimit&gs_l=serp.3...1435.5882.0.6002.31.27.2.0.0.13.349.3010.15j11j0j1.27.0...0.0.0..1c.1.12.psy-ab.b-t0jgXHsDY&pbx=1&bav=on.2,or.r_cp.r_qf.&bvm=bv.47008514,d.aWM&fp=9a341d43af23ebf8&biw=1366&bih=670). You're probably pretty close to the limit already, and zeus adds several more frames to any trace.\n. Hm. I think this makes sense. It wastefully loads minitest if the user is using rspec, but it's a small library without side effects, so that should be totally fine. Go for it!\n. I'll push a full release in the next couple days. There is a 0.13.4.pre2 up with all the recent contributions except some of the refactoring I've done to the go source lately.\n. Thanks a bunch for your work on this @latortuga :)\n. I think I can solve this like so:\n1. Set `ISIG` in the client->user TTY.\n2. Upon receiving `SIGINT`, `SIGTSTP`, or `SIGQUIT` on STDIN, check whether the client->command TTY has `ISIG` set.\n3. If `ISIG` was set, send the signal. If unset, append the signal's code to the stream.\n4. Remove the input stream signal equivalent handling from zeusclient as it's no longer relevant.\n\nThis has one problem that immediately jumps to mind: If the client process is manually sent, say, `SIGINT`, there is a bit of information lost -- the slave could have different handling for `SIGINT` depending on whether it was received as a `^C` or as an actual signal, and the solution above makes an assumption based on the current setting of `ISIG` which would be preferred.\n. Except I can't do that because Termios flags are local to one side of the TTY, and that side is controlled by an external process (user's ruby app). Crap.\n. Two concerns:\n1. Default, cooked mode. `zeus server` for example. Does not respond to `SIGINT` if sent as ASCII 3. Does respond correctly to signal.\n2. Raw mode, used by readline (`zeus console`). Responds to `SIGINT` by terminating. Responds to ASCII 3 by unwinding input stack, cancelling running command, etc.\n\nIt is desirable to send ASCII 3 to raw mode TTYs, and to send SIGINT to cooked mode TTYs.\n\nHowever, this raw/cooked state is local to the command process, and can be changed at any time. The state is not propagated into the client, as it's stored in some kernel storage specifically for that process's side of that TTY.\n. Hey, this is great. Nice work!\n. I avoided doing this before because the Go side of zeus really makes almost no assumption about what the slave language is. I think adding a reference to 'Gemfile' here is the first thing anchoring it down to ruby. It would just be a matter of rewriting rubygem/lib/zeus.rb for python or whatnot to make it work in a completely different ecosystem.\n\n...however, clearly no one is doing that, so :+1:, looks good to me :). Good idea.\n. Sorry for the ridiculously long delay.\n\nIt is entirely possible if you compile in `inotify` support. KQueue is semi-feasible as an alternate implementation strategy, but it uses an FD per file watched, which, in zeus's case, is usually a number that would require modification of `RLIMIT_NOFILE`.\n\nAnyway, I don't use FreeBSD. I suspect it's more or less a matter of adding some targets [to the Makefile](https://github.com/burke/zeus/blob/master/Makefile#L48), tweaking [the inotify wrapper](https://github.com/burke/zeus/blob/master/rubygem/ext/inotify-wrapper/inotify-wrapper.cpp) a tiny bit, and writing docs for FreeBSD users (especially reminding to install inotify), but I won't likely find myself doing this in the near future. \n\nI am 110% open to pullrequests on this, but don't have the motivation to do it myself.\n. We have this class of problems a lot at my workplace. The best solution is usually to run zeus inside the VM and mount the code to your host using NFS (of course, if you use vim or emacs, you can just work inside the VM).\n\nIt would be quite possible to add a polling mode to zeus for this kind of situation, but it wouldn't really work well -- access times are so bad over shared folders that it would be a horrendous experience.\n\nThe unfortunate truth is that there _is_ no good solution. Network filesystems and shared folders both have performance problems, and neither, perplexingly, supports file-change notifications.\n. See #138 for future updates\n. Looks good, thanks!\n. I'll try to get it built tomorrow. I don't have the whole build toolchain installed anymore.\n. It's XCode complaining about the fsevents module. I'll probably never fully understand the black magic that is keeping XCode happy about SDK versions. I think all the rest is (loosely) documented at https://github.com/burke/zeus/blob/master/contributing.md#step-1-prerequisites\n. ...but yeah. If I figure it out and it's not just some stupid thing I've broken for myself, I'll add it to that file.\n. I upgraded to Mavericks yesterday and it turns out `make all` runs just fine now (I did have to change some code around command line argument parsing).\n\nIt's released as `0.14.0.rc1`, but it might be broken. I gave it a quick try on shopify, and while the master boots up correctly, the slaves never successfully launch. (stuck on zeusclient.go:88). If someone's changed that handshake recently, that's the problem. I don't have time to look at it today.\n\nI still released it because it's probably >50% odds that the failure is some bizarre quirk of our project.\n. Ok, I'll dig into it when I get a chance.\n. This is harder to fix than you might expect. I don't really want to special-case a specific file, and intercepting YAML loads is quite difficult.\n\nNot going to fix this for now, but I do hope that we come up with a solution eventually.\n. This is just how zeus works. The issue is that your models are loaded unfortunately early in the boot process of your app. Zeus can't fix it; the only solution if you want the reload process to be faster is to somehow defer loading those models to later in the process. Observers are big offenders for this.\n. Looks good to me, :shipit:\n. Just added you as an owner on rubygems, @latortuga. Thanks :)\n. Is it possible that you're running `rake>=10.1.0` outside of zeus (ie. not using `bundle exec`) but your bundled version is `rake<10.1.0`? That would explain the behaviour you're seeing, I think. Zeus will always use the bundled version.\n. You could probably make it `rake:test` by using `define_method`. `raket` is fine. I don't see any other way around this, unfortunately.\n. Yeah, it seems like zeusclient is crashing. When it connects to the master, it sets up a bunch of terminal settings, and resets them before it exits. If it exits non-gracefully, it doesn't get a chance to reset the terminal settings, resulting in the screwed up line breaks and stuff from the screenshot above.\n\n**You can fix your terminal by running `reset` or `stty sane`.**\n\nDefinitely sounds like a race condition crash of some sort. It almost certainly involves a bug in zeusclient somehow (ie. a bug completely on the master/slave side should be incapable of messing up the client terminal).\n\nIf I were going to dig into this, I'd `strace` the `zeus test ....` (ie. `strace -tt -T -f zeus test ...` or whatever) and see how far it gets. Maybe easier, given how much syscall chatter I'd expect to see, would be to just instrument the startup code in `cmd/zeus` and `zeusclient` with a bunch of `fmt.Println` calls, to see exactly how far along the binary makes it before crashing. Bugs in `zeusclient` would tend not to be nearly as crazy or nuanced as those in the master process. I'd think most of the debug process would be just figuring out what the chatter is between the client and the master, and what line it crashes on. The solution is probably easy given that.\n. Issue _should_ be fixed by 4a8086c5f6e68c3132313740ed135b5cf1661309. Really cool contribution!\n. Sure thing -- done.\n. I can probably publish a release early next week.\n. Whoops, forgot about this. Pushed 0.15.8 just now.\n. That build crashed on startup for most people, so I yanked it. Someone pushed 0.15.9 I think, but it had a similar issue. Not sure what the status is now.\n. Yep, I built 0.15.8 with go 1.6.2. Perhaps I should yank 0.15.8?\n. btw, I can give you rubygems push access if you want it.\n. LGTM.\n. I haven't built it in a while, I can add you as a rubygems contributor, let me know what email address you use there or link me to your profile.. Done :+1: Thanks!. I don't have time to review in depth today, but at a quick glance this looks sensible :+1:. I always felt like there was some legitimate reason that I didn't do this originally, but now that I think about it, it was probably just confusion or laziness. Looks good so far.. Makes sense to me. I see that github.com/zeus isn't available, but I have no objection to this if someone wants to go for it.. Sorry, I did basically most of the same stuff on the plane. \n. I'm also totally rewriting 90% of the server right now. I'll ping you when I'm done. It should be tonight. Sorry, we suck at picking different things to work on.\n. Hrm, this does kind of suck. Ideally we'd not depend on anything at all, but certainly implementing FFI is not a good idea.\n\nMaybe it's worth investigating that new file-based API for FSEvents. It sounds like a better solution anyway, as it lets us monitor thousands of files without opening thousands of FDs.\n\nCrappy part: It's Objective-C and we'll have to shell out to it.\n\nThe Interface I was imagining was:\n\n```\nOpen3.popen3(\"fsevents-wrapper\") { |sdtin, stdout, _, _|\n   # every time we start monitoring a new file, write it on its own line to the program's input\n   # each line of stdout from the program is the full path of a changed file\n}\n```\n. Fixed! We're now using FSEvents.\n. Fixed!\n. Fixed in 0.3.0\n. I don't care anymore.\n. The lag seems to be pretty predictably 0.5 - 0.8 seconds\n. Fixed in 0.3.0\n. Fixed in 0.3.0\n. Changed my mind. Not going to happen yet.\n. Not that this is done or anything, but I'm junking this in favour of more specific goals...\n. I bet you haven't upgraded to Mountain Lion right? I fixed this in 0.2.6. I missed a compile flag an executable I have bundled, which breaks it on Lion. 99% sure it's fixed if you grab the new version; please re-open if it's not.\n. That's exactly as easy as I hoped it would be. Thanks!\n. Added in master\n. Eh, good enough for now.\n. Can you run `ruby -e 'puts require \"zeus/server/acceptor_error_state\"'` and paste the output? Thanks!\n\nEDIT: Also, if it just outputs the same LoadError, I'd like to see `file /Users/mgrosser/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.3.0/lib/zeus/server/acceptor_error_state.rb`\n. I get the same thing when using pow, but only when:\n1. Pow is enabled and has successfully booted the application\n2. There is an error loading one of zeus's stages\n3. I'm running zeus from the gem install directory, and not from my development copy. \n\nSuper weird. I'm digging into it some more. Thanks for the report.\n. I literally have no inkling of an idea what could cause that issue, but I was able to solve it by pulling `AcceptorErrorState` into a different file, which I was thinking about doing anyway.\n\n0.3.1 should now work with pow. \n\nI believe what will happen now is that zeus will start up one or more 'error-state' acceptors. When you connect to these (eg. `zeus console`), they'll print the error they failed with. This should be much more helpful than a LoadError. Zeus currently makes some pretty specific assumptions about your unit testing setup, in particular (we use an ancient version of Test::Unit at my workplace). I hope to improve/add support for other testing frameworks over the coming weeks.\n. > any reason not to load config/application.rb ?\n\nI'm kind of taking a bet that gems won't change very often, and that nearly-everyone includes the default bundle, so I require it before application. If this is not true for you, you can run `zeus init` in your project and edit the config file generated at `.zeus.rb` to remove the call the Bundler.require(:default).\n. @grosser: Totally agree on the config file. This is still really new code, but a friend and I are cooking up an idea for something better and more maintainable. Everything else just needs a little more time to solidify before I'm ready to commit to a replacement.\n\nAs for the GC patch stuff, I should re-word the README to indicate it's not actually a hard requirement, but it is a pretty strong one. Without the GC patches, zeus will use about 10 times as much memory as booting rails normally, which is completely obscene.\n. Okay, cool. Closing the issue. Please let me know if you have any other problems.\n. Hmm, right, that definitely wouldn't work at all at the moment. I wonder if I can just blindly overwrite all of ENV in a remote process... I will play with this. Thanks!\n. There's actually no sane way to deal with this, since the environment has been loaded long before this command is parsed. [I added a warning](https://github.com/burke/zeus/commit/866705fc52e1e3b067cef01b7d919f13f670541e). I may revisit this in the future, but this is the best I can do for now.\n. Remote debugging is something that conceptually doesn't make a ton of sense for zeus. The options here would be:\n\n1) Explicitly run that initializer in the `development_environment` stage\n\n2) Change `Debugger.start_remote` to `Debugger.start_remote unless defined?(Zeus)`\n\nThe behaviour of running the remote debugger with zeus would be somewhat unfriendly, I think. It would be probably more desirable to just disable it rails is booted via zeus.\n. This is because `$LOADED_FEATURES` doesn't include files loaded via `load` by rake. I'll hack around this in v0.4.0. Thanks for pointing this out.\n. Fixed with 1ef75a5\n. Fixed on master\n. Fixed on master. \n. Fixed on master.\n. Closing: created #30.\n. I don't really have a great handle on all the little interactions in this part of the codebase right now. I've got a big refactor of it planned for this evening, if I have time. I expect this to be working and 0.4.0 to be out tomorrow. \n. It's theoretically supposed to be able to intelligently reload everything, no matter what changed; it's just got a few bugs right now that are preventing it from picking up some changes. I'll update this issue when I figure them out. It'll hopefully be tonight or tomorrow. \n\nWhen it's working properly, there's nothing you can change that will get it out of sync.\n\nI'm glad you guys are liking it.\n. Yeah, zeus works around that problem by not reloading classes. It actually kills processes outright, and restarts them. It's sort of like this:\n\nAt a few points along the path of starting up the application, it forks a child process to continue loading. When a file changes, all of the processes that have loaded it are killed, and execution resumes in their nearest parent process, which forks off a new process to do exactly the same thing as last time, except loading the new code.\n\nIt's kind of hard to explain, but it's theoretically bulletproof when it's working properly, much unlike truly attempting to reload ruby code.\n. I just released 0.4.0 and I'm _pretty_ sure this is fixed now. Please let me know if you experience any more weirdness with not reloading automatically.\n\nThanks for the feedback, guys. Much appreciated.\n. I bet the file change wrapper is silently crashing then. It's sort of painful to hook into FSEvents from ruby. I'll add some more instrumentation around it so it's more obvious when that happens...\n\nCould you try this?\n1. Clone the repository\n2. run ext/fsevents-wrapper/fsevents-wrapper\n3. paste in the full path to some arbitrary file\n4. Change the file\n5. See if the file appeared as output from the wrapper script\n\nMy guess is that this script will just crash on your system. You're using Lion or higher, right?\n. Okay. I'm running out of brain for the night, I think, but I'll play around and see if I can replicate what you're talking about.\n. Yup, I've got the same thing. I should be able to fix it now. Thanks for pointing that out!\n. I've finally fixed this now (or at least, I reproduced the problem on 0.4.0, and fixed it for my own use case in 0.4.1, which I just released).\n. I've found the problem causing the config/routes issue, and I imagine @ScotterC's issue too. I'll have a new version out later today when I finish debugging.\n\nRuby has a lot of ways of loading files and it takes some work to hook into all of them.\n. I'm pretty sure this is related to an issue I'm in the middle of debugging. With any luck I'll have it solved tonight.\n. I suspect all of these issues will be fixed now if you upgrade to 0.4.2. Give it a try and let me know. Thanks :)\n. Fantastic. Thanks!\n. fixed on master, will be in 0.4.1.\n. Fixed on master.\n. Yeah, I'll be releasing a gem with proper rspec support either later today or tomorrow. Sorry about that.\n. Good point. I'll have 0.5.0 batch the file changes.\n. Output is now less verbose, and the behaviour alleviates this problem a little bit (but not entirely). Closing for now, may revisit similar issue in the future.\n. Which testing framework are you using (if any)? If it's rspec, the released gem doesn't support it (and assumes you are using Test::Unit/MiniTest), but 0.4.0, when it comes out tonight or tomorrow, does -- so I'll close this issue when it's released.\n. 0.4.0 is out, with rspec support. Please let me know if you have any other issues!\n. What rails version are you using? And what zeus version? Different versions of rails start generators in slightly different ways.\n. can you run `zeus --version`? I believe rails 3.2 generator support was added some time after zeus-0.3.0. If you're not using zeus-0.4.0, could you upgrade to that and let me know if it works?\n. Awesome, good to hear :D. Let me know if you run into any other issues or weirdnesses.\n. Cool, thanks.\n. actually, nothing by definition.\n. Ah, fantastic! Yes, please, write as many tests as you have the patience for :)\n\nI will start writing comprehensive tests for my code in another release or two (I guess 2-3 days at this rate). I'm still in SPIKE mode to a degree, and my brain really sucks at TDD-ing SPIKEs. Until then, I'll keep whatever tests you write passing.\n\nIncidentally, I've also been using https://github.com/burke/zeus-extended-testcases as a sort of high-level test. You might find it useful.\n. I think everything's working now.\n. Haha. Yup. Sorry, I'm working on refactoring and documentation next week, I think.\n. \"fixed\" on 0.11.0\n. Shouldn't be too hard. I can do that in the next couple of days.\n. Great, thanks. I took a shot at this a few days back and it wasn't immediately obvious how to go about it. This will help a lot. I'll try to get it in and a new version out today.\n. I'm revisiting a bunch of ruby library compat stuff this afternoon and/or this weekend. I hope to have cucumber support baked in to `Zeus::Rails` by Monday.\n. Added cucumber support with cc30e8fb50afc744fafdf5428ff9753e1463b26b\n. Yup. Sorry about that. Pushing a new version in a few minutes.\n. On the list for this weekend :)\n. Done on master. New release in a few days.\n. Hrm, io/console appears to be built in to 1.9.3. I'm really hesitant to add gem dependencies to zeus, since any dependency has the potential to conflict with whatever is defined in the Gemfile it loads. \n\nSince I'm technically targeting 1.9.3+, and 1.9.2 working is only incidental, I think, seeing as the fix is simple and fairly obvious, I am not going to add this as a dependency.\n\nI've wrapped that require in a block that will print a message describing the problem if it fails (1dd4e81). Thanks for the report :)\n. At the top of `app/models/payment_gateways/spreedly_gateway.rb`, could you put: `puts \"-\"*80 ; puts caller`, then `zeus start` again and paste me the output (censored if necessary)? Presumably there will be either two or three traces.\n. Well, for some reason:\n1. `test/factories.rb:71` causes `SpreedlyGateway` to load. This happens using `load`, so it is not added to `$LOADED_FEATURES`.\n2. `SpreedlyGateway < PaymentGateway`, so `PaymentGateway` is loaded, again, using `load`.\n3. `payment_gateway.rb:384` does something along the lines of `[..., 'spreedly_gateway', ...].each { |f| require f }` (confirm/deny?). Since this file has been loaded using `load`, it is not in `$LOADED_FEATURES` and is read and evaluated again.\n\nThe big question for me is why this doesn't happen when you boot up your app normally. Could you put that debug statement back on the top of that file again and run `RAILS_ENV=test bundle exec rails console` or something? I'd like to see those trace(s).\n. Closing this one too. No idea whether it's still relevant. I don't get these anymore. When I fix #115, whatever it turns out to be, I suspect this'll go away if it hasn't already\n. Sorry for the delay. I'm on a refactoring binge, and I'm going to revisit your two issues afterward. I really strongly suspect it has something do with the slightly unusual load order and/or short-circuiting eager loading.\n. Sorry I never got anywhere on this. I'm closing this issue because zeus has been basically rewritten since then and I'm not positive it's still relevant -- if it is, it's likely the same issue as #115.\n. Added, thank you.\n. Yup, that definitely should have been removed. Thanks!\n. Hey, problem solved. I won't bother fixing it for old versions. If someone really cares, I'll happily accept a pull request.\n. I can't use `listen` (as far as I can tell) because I need to be able to modify the list of files being watched as the application runs. \n\nI do have linux support planned for some point down the road, but as my company is 100% on OS X, it's not a top priority for me at the moment. It'll happen eventually.\n. Targeting 1.0.0 for linux support, which I expect to be out in about a month. Windows support will never happen though. `fork` is kind of the crux of the whole project.\n. That could work, though I'm a bit hesitant to do that, as I don't really want to force people to think about what's changed and whether they should restart. I'm going to take a crack at inotify this week. I think it'll be substantially easier than FSEvents.\n. In progress at https://github.com/burke/zeus/tree/inotify. Unsure when I'll finish.\n. Master now runs on linux. I'll have a new release out soon. Probably today.\n. There are actually a couple rules in the parent directory makefile that\ncopy required files into the gem. I'd bet that's what the issue is. I don't\nthink it's possible to build the gem without building the main project.\n\nSent from my iPhone\n\nOn 2012-09-08, at 3:30, Wojtek Majewski notifications@github.com wrote:\n\ncloned master branch, then:\n\ncd zeus/rubygem\ngem build zeus.gemspec\ngem install zeus-0.0.0.gem\n\nbut without luck, got:\n\nBuilding native extensions.  This could take a while...\nERROR:  Error installing zeus-0.0.0.gem:\n        ERROR: Failed to build gem native extension.\n\n```\n    /home/jumski/.rvm/rubies/ruby-1.9.3-p194-perf/bin/ruby extconf.rb\n```\n\nmake\nmake: **\\* No rule to make target `inotify-wrapper.o', needed by\n`inotify-wrapper'.  Stop.\n\ndo i met the requirements?\n\n laptop rubygem [master] $ dpkg -l _inotify_\nDesired=Unknown/Install/Remove/Purge/Hold\n| Status=Not/Inst/Conf-files/Unpacked/halF-conf/Half-inst/trig-aWait/Trig-pend\n|/ Err?=(none)/Reinst-required (Status,Err: uppercase=bad)\n||/ Name                         Version                      Description\n+++-============================-============================-========================================================================\nii  inotify-tools                3.13-3\ncommand-line programs providing a simple interface to inotify\nun  libinotifytools-dev          <none>                       (no\ndescription available)\nii  libinotifytools0             3.13-3                       utility\nwrapper around inotify\nii  libinotifytools0-dev         3.13-3\nDevelopment library and header files for libinotifytools0\n\n \u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/burke/zeus/issues/67#issuecomment-8385645.\n. Release 0.10 is out actually. Just gem install Zeus :)\n\nSent from my iPhone\n\nOn 2012-09-08, at 14:22, Wojtek Majewski notifications@github.com wrote:\n\nok ill wait for the release - dunno how to build it without xcode ;P\n\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/burke/zeus/issues/67#issuecomment-8396913.\n. Awesome :). Let me know if you have any issues.\n\nSent from my iPhone\n\nOn 2012-09-08, at 14:26, Wojtek Majewski notifications@github.com wrote:\n\nit rocks :) thanks\n\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/burke/zeus/issues/67#issuecomment-8396941.\n. No longer relevant to master\n. Much better, thank you!\n. Yeah, I added a separate commit to fix that :)\n\nRe: Travis: Whoops :P. I'll fix that this afternoon. It will definitely break on anything related to FSEvents right now.\n. I just tried this in my own application and it worked without issue. Could you provide more detail? How does it fail?\n. Very weird. Thanks, I'll look into it.\n. Fixed on master. Next release will probably be tomorrow.\n. This might be tricky. For whatever reason I've had to basically kill runner processes with SIGKILL for them to shut down properly. \n\nThat was a whole lot of programming by coincidence though, so maybe a fresh set of eyes or a new day will make it a bit more obvious. I've never habitually used the exit status of a test run, but I can see how that's an important use case that should be accommodated. I'll take a crack at it in the next few days if you don't figure it out right away.\n. Right. I keep forgetting :)\n\n(At least partially) fixed: f76f8907a2\n. Fixed :)\n. I'm a bit confused about where this error would be coming from Everything I specifically do with ActiveRecord is pretty guarded for this sort of thing. Could you post the full stack trace? Censored if necessary. I'd like to see where in my code it's coming from.\n. This is actually even easier now :)\n\nhttps://github.com/burke/zeus/blob/master/docs/ruby/modifying.md\n\nYou'll basically want to create a file, something like `lib/my_plan.rb`, with contents:\n\n``` ruby\nrequire 'zeus/rails'\nclass MyPlan < Zeus::Rails\n  def boot\n    require BOOT_PATH\n    require \"action_controller/railtie\"\n    require \"action_mailer/railtie\"\n    require \"active_resource/railtie\"\n    require \"rails/test_unit/railtie\"\n    require \"active_support/version\"\n  end\nend\nZeus.plan = MyPlan.new\n```\n\nand then change the command in `zeus.json` to `ruby -r./lib/my_plan -eZeus.go`\n. @janlimpens Could you describe the problem in more detail? What do you see when you run `zeus start`? Also, please make sure you're not running zeus 0.10.1. I pushed a broken version by accident, then yanked it and pushed 0.10.2 about an hour later.\n. Mongoid compat issue fixed with 5cfd9e26bbc4c5810327b042826c1daeebde48c9\n. Were you running zeus from the project directory? I ran into this sort of issue recently when I was doing that.\n. Oh jeez, I know what's happening.\n1. Require zeus. Some of zeus is loaded.\n2. Require bundler. Load path is obliterated\n3. Try to require more of zeus. Fail.\n\nThe solution here appears to be one of:\n- Mess with the load path to ensure zeus is always on it.\n- Require all of zeus upfront.\n\nI think I'm leaning toward the latter option.\n. Re-adding it to the load path actually ended up being not-too-bad: https://github.com/burke/zeus/commit/6280e3e695c9c0016de78165d8aca7c0ed26adcc -- fixed!\n\nI guess I should release a new version today as this one is clearly broken if you don't have zeus in your gemfile (I've been putting it in with require: nil just for the dependency management... \n. LGTM \n. That's weird. This should never happen. Can you reproduce it again or was it a one-off occurrence?\n. Almost certainly related to #79. Looking into it.\n. Not relevant with 0.10.0\n. Very weird. Does this problem go away for a while if you restart zeus?\n. Almost certainly related to #78. Looking into it.\n. Does this happen when you change a file and it's reloading, or when you run a command?\n. This will be fixed in 0.10.0 when I release it in a couple days.\n. Thanks very much. I've reset my branch to this -- I'll try it out myself and hopefully get it released in the next day or two. Much appreciated!\n. Could you let me know if this still happens with 0.10.x? I'm doing a big sweep of ruby compatibility issues this weekend, and will hopefully have time for VCR.\n. Sorry, I just realized it's the weekend and most people aren't workaholics. No pressure on that :P\n. Awesome. Thanks!\n. Zeus 0.10.0, which'll come out in a day or two, will fix these problems. Sorry for the delay.\n. This is fixed on master and will be in 0.11.0 in a couple days. Sorry for the delay.\n. Yeah, I've been experiencing this occasionally too. I'm in the middle of a rewrite of the zeus server. It should be solved within a week.\n\nThanks for reporting :)\n. 0.10.0, which will come out in a day or two, should solve this problem. Sorry for the delay.\n. Right. It's improved a bit, but I forgot to fix it fully.\n. This is finally fixed on master. The command process now polls the client process every second, and quits immediately if it's dead.\n. So I think I'm going to call 2.3 support out of scope for `burke/zeus`, but I'll add a section somewhere in the docs for a list of plans supporting alternative setups (ie. just tyler-smith/zeus-rails23 for now).\n. I hadn't noticed this myself, since my shell fixes my terminal for me, but the code to reset it was in the wrong place. I fixed it yesterday after watching a co-worker experience the same thing, but I didn't think to push a new version of the gem.\n\nCould you try with 0.10.0.pre2?\n. The problem here I guess is that rspec tries to figure out whether it's running in a TTY, but my code tricks it into thinking it always is. I think the real solution here is to pass along that \"Am I in a TTY?\" information from the client to the server so it can make that choice for itself. I'm going to take a crack at that tonight.\n\nThanks for pointing this out. It hadn't occurred to me.\n. Created #90 to solve this.\n. ![http://f.cl.ly/items/2M1U3k1o2J0I2y3b1W0a/Screen%20Shot%202012-09-08%20at%209.12.18%20PM.png](http://f.cl.ly/items/2M1U3k1o2J0I2y3b1W0a/Screen%20Shot%202012-09-08%20at%209.12.18%20PM.png)\n. Unfortunately, JRuby is not supported. Zeus needs the ability to use `fork(2)`, but the JVM, in an effort to be cross-platform, does not support it.\n\nI should probably print a banner error on launch if using jruby. Sorry.\n. Someone was complaining about it. I haven't had a chance to investigate for myself yet.\n. Closing this because it seems to work fine and I can't remember what the issue was.\n. I'll give it a shot with turn this weekend. Thanks for the report!\n. This seems to work in the new 0.11.0 release I'm pushing soon, just by requiring 'turn/autorun' in minitest_helper.rb. Let me know if it's still a no-go after the upgrade.\n. I had to implement terminal raw mode myself. You're on OS X, right @duff? I'll cross-check my implementation against ruby's in the next day or two.\n\nEDIT: Also, I _strongly_ suspect this is the same issue.\n. It seems to be that readline is doing something it shouldn't. I'm having trouble figuring out what the problem is here. I'll come back to it in a while.\n. Fixed: f87b97f.  New release soon.\n. This has been fixed on master for a few days, but I hadn't pushed a new gem.\n\nI just pushed zeus 0.10.1, which fixes this issue. \n. 0.10.1 is totally broken. I accidentally ran my tests with 0.10.0 before pushing 0.10.1. Please upgrade to 0.10.2, and your problem should be solved. My bad :(\n. I'll try to make the debugging output a little better when this happens...\nfor now, could you copy the command out of zeus.json (ie. probably \"ruby\n-rzeus/rails -eZeus.go\"), and try running that? It'll definitely error, but\nI'd like to see the error you guys get.\n. Oh, um. Actually, 0.10.1 was totally broken. Testing failure. Sorry. Uninstall and downgrade to 0.10.0.\n. Strange; I haven't been able to replicate this. Can you share more information about your setup?\n\nVersions of: Zeus, Rails, OS, Ruby.\n\nGemfile dump if possible.\n. Can you let me know whether this still happens in 0.11.2? I fixed some potentially-related stuff and haven't been able to reproduce this consistently. Thanks :)\n. I expect this will still be an issue, actually. (likely duplicate of #111). I'm going to dig into these tomorrow, as it seems to be the biggest outstanding bug at the moment.\n. I've been having trouble wrapping my head fully around this part of the code. I rewrote it to be much more clear (to me) over the last two days. Can you guys try with `gem install zeus --pre` (for 0.12.0.pre) and let me know if it's fixed? Thanks :)\n. Moving to #111.\n. Hrm.... yeah, that would be a problem. \n\nI think the only solution would be to run `sudo zeus start` from the beginning. I can't think of a reasonable way to make zeus accomodate the need for elevated permissions for a specific command, sorry.\n\nYou could forward port 80 to port 3000 locally by running the following in a terminal:\n\n`sudo ssh -L80:localhost:3000 localhost`. \n\nIf you're on OS X, you'd need to enable 'Remote Login' under Sharing in system prefs.\n. I have an open issue to fix this. Rake does some really asinine stuff to run tests. It's a pain to work around it, but I almost have something working.\n. Actually, I'm going to close this to try to keep the open issues easier for me to wrap my head around. You can follow #54 to be notified when this is fixed. It should be with the next release.\n. Glad it's working well for you :)\n\nIncidentally, this issue was happening because Rakefile was being loaded twice. It's fixed in 0.11.0.\n. Pretty strange. Every time zeus forks, which it actually does right before running specs, it does:\n\n``` ruby\nActiveRecord::Base.clear_all_connections! rescue nil\nActiveRecord::Base.establish_connection rescue nil\n```\n\n...so it should be properly re-establishing a database connection right before running specs. I will try an app with postgres and rspec this weekend and see if I can reproduce this.\n. I'm going to assume this was caused by spork funkiness. \n\nSee https://github.com/burke/zeus/wiki/Spork for possible resolution.\n\nIf that wasn't it and the problem persists in 0.13.0, please open a new issue.\n. This would be awesome. I'll dig into the pow source to see what I can find.\n. Leaving this here for my own reference. I'll probably have to hack nack to make this work. Maybe somewhere in the vicinity of:\n\nhttps://github.com/josh/nack/blob/master/lib/nack/server.rb\n. @stanislav -- are you on OS X or Linux? Can I see the output of `uname -a`? Thanks.\n\nThis sounds like it's probably an issue with some of the stupid code I've had to write to put a terminal into raw mode.\n. Is this still broken on 0.11.2? If so, I have some ideas about how to fix it, but would like to know whether you still have the issue as is.\n. Great! \n\nI don't really know how hard Rails 2.3 support will be. It could be pretty simple if everything 'just works' (or it could be not-so-much).\n\nBasically what you'll want to do is to find the entry point into rails' code for running a console or something, and more or less transcribe it into a Zeus Plan. I think it should pretty much work out just by filling out the same methods as exist in the Rails 3 one.\n\nDefinitely let me know how it goes!\n. That's really weird. I can't even imagine what would cause that to happen. I'll keep it in mind next time I'm in that code, but I wouldn't know where to look to start debugging. Thanks for the report. Let me know if it happens again and I'll try to troubleshoot it.\n. Could you paste the next paragraph of the trace? I need the file/line the error occurred in.\n. It's just autotest that's the issue, right? Not the rest of the ZenTest suite? (zentest, unit_diff, and multiruby). At a cursory glance it looks like zentest and unit_diff wouldn't require an env load, and multi_ruby is kind of irrelevant to zeus.\n\nI'm not 100% sure if I'll support autotest or not, but I am definitely going to investigate integration with some sort of auto-testing tool over the next few weeks (kicker, guard, autotest -- whichever seems to fit best). I'm going to close this issue. You can follow #51 for updates, or reopen if I've misunderstood.\n\nTL;DR: yes, soon :)\n. I was sure I had fixed this myself, but... apparently not! Thanks!\n. Zeus depends on the presence of either FSEvents (OS X only) or inotify. I'm under the impression inotify is linux-only, but if it can exist on FreeBSD too, I can start crosscompiling for that platform as well.\n\nBack at the start of this project, I had an implementation using KQueue, but the 1:1 watched files to file descriptors is gross, and not a good for for this application.\n\nI wouldn't be terribly opposed to anyone submitting a pull request with a suitable KQueue adapter, I suppose, though I'm unlikely to do it again myself.\n. Oh, neat.\n\nI'd also have to spend some time looking up what the proper values are for some of the TTY-related syscalls. I'll likely get around to this at some point, but I have lots of issues to sort out with the current implementation first. \n\nI'm going to close this for now. I've tagged it for revisiting in the future.\n. Off the top of my head:\n- inotify doesn't obviously work. kqueue isn't appropriate because it requires a fairly obscene number of file descriptors.\n- some of the TTY code would have to be updated with some IOCTL constants for FreeBSD in github.com/burke/pty or github.com/kr/pty, whichever we're using right now.\n\nI think there was something else along the lines of magic platform-specific constants too.\n\nNothing super difficult; just some time.\n. `zeus commands` was added in zeus 0.10.0. The new version is much better :)\n. Is the gem `rubygems-bundler` installed?\n. I've seen this a few times too :(\n\nI think my socket code is wrong. I'll dig into it at some point in the next few days when I have a chance.\n. I _think_ this will be fixed in the next release. I fixed some bugs in some socket-related code this afternoon.\n. Does this still happen on 0.11.2?\n. Too bad. I'll try to replicate it tomorrow.\n. I've been having trouble wrapping my head fully around this part of the code. I rewrote it to be much more clear (to me) over the last two days. Can you guys try with `gem install zeus --pre` (for 0.12.0.pre) and let me know if it's fixed? Thanks :)\n. Closing for now, open new issue if problem persists in OS X with 0.13.0+ or in linux with 0.14.0+.\n. You're right, I started refactoring out the `panic()`s a couple weeks ago, but forgot to finish. I'll switch them to more graceful shutdowns. Thanks :)\n. Fixed in e9b918e\n. Ugh, weird. Could you try with 0.11.1? I haven't been able to reproduce this on either version, but 0.11.1 changed some of the low-level terminal code back to how it was in 0.10.0.\n. Brutal. \n\nIf you're using pry-rails, the prompt is probably actually there. It just won't render until you hit enter, for whatever reason.\n\nOtherwise, something else is broken. This stuff is difficult :(. Let me know whether you're using pry-rails and I'll look into it in a couple days either way. Lots of people have been experiencing this and I want to sort it out asap.\n. I can't even explain how long this took me to figure out. Fixed. Finally: f87b97f\n. 0.11.2 is released, which should fix this problem.\n. Great! :)\n. I'd like to do either a gem-per-feature deal, or perhaps zeus-contrib for the more fringe-y features such as spinach. Will look into this in the next couple of days. Sorry for taking an eternity to get around to this.\n. Closing this issue; I don't think spinach support belongs in core. Should probably set up a contrib repo, but the wiki's got it.\n. /facepalm.\n\nSorry about that. Removed on master.\n. Here's what I think the problem is:\n\nNormally, the test environment uses eager loading, which means (to simplify) every constant in your load path is required all at once.\n\nZeus disables eager loading to make it faster.\n\nNow, let's say you had these two objects:\n\n1) `class Deployment`\n\n2) `module App::Deployment`\n\nWith eager loading (as normally happens), the App::Deployment module would be properly selected for inclusion.\n\nWithout eager loading... It should still find the right module, but it appears it is not, and it's instead attempting to include the top-level `Deployment` class.\n\nIs `App::Deployment` located in a discoverable path? Eg. Does its pathname end in `app/deployment.rb`? If it doesn't, it'll never really work with eager loading off.\n. https://github.com/burke/zeus/blob/master/rubygem/lib/zeus/rails.rb#L222-L227\n\nThis would have been added after 0.10.0. It fixed some issue, but I can't remember the details anymore.\n\nI'll try to dig into this at some point in the next few days.\n. Just pushed a commit to master that will properly report errors that happen in after_fork or other phases of zeus booting stuff up, which is what all these are about. I'm going to close this and release 0.13.0 this evening. If you still have issues that don't immediately become blindingly obvious, please open a new issue :)\n. Moving to #174.\n. Are you sure it didn't fail? There's no file at zeus/plan.rb, though\nperhaps there should be, now that I think about it.\n\nOn Mon, Sep 24, 2012 at 11:12 AM, Michael Grosser\nnotifications@github.comwrote:\n\n> tried require 'zeus/plan' which did not fail but also did not define zeus\n> or zeus::plan, kind of bad,\n> so maybe it should be removed or filled with the plan definition ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/120.\n. It's poorly documented and I plan to fix this but you can see the backtrack\nby attempting to run a command. Eg. If boot crashed you can see the trace\nby running 'Zeus c'.\n\nSent from my iPhone\n\nOn 2012-09-27, at 9:12, Sean Kirby notifications@github.com wrote:\n\nI would love to be able to see the crash logs when running zeus start\n\nI have a large rails app that zeus just crashes on when trying to load the\ndevelopment and test environments and I have no idea why.\n\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/burke/zeus/issues/121#issuecomment-8937350.\n. Moved to #174\n. This may be helpful/relevant: https://github.com/burke/zeus/wiki/Spork\n. I'm working on better diagnostics for when processes fail to connect or error out (#174 -- hopefully sorted out soon.)\n. Issue looks dead, closing. \n. Moved to #173. Working on it soon.\n. Okay, it looks like the problem here is that zeus is killing then re-establishing new connections each time it forks, but not setting the cached connections to the new objects.\n\nI've added a commit to master that sets the connection to `shared_connection` if it exists. For other locations your app specifies, you'll need to set up an [`after_fork`](https://github.com/burke/zeus/wiki/Spork) to reset them. \n\nAlternatively, if there's a gem you find that caches the connection, please let me know and I'll add code to account for it.\n\nSo this will probably be fixed in 0.13.1, which I expect will come out in the next couple days. Closing for now, please reopen if you still have issues in 0.13.1.\n. I don't plan to add support for this, though I will eventually add some way to pause reloading.\n\nHowever, you can disable it locally by changing the following:\n\n``` javascript\n// zeus.json\n{\n  \"command\": \"ruby -rubygems -rzeus/rails -r./lib/hack -eZeus.go\",\n  ...\n```\n\n``` ruby\n# lib/hack.rb\nclass << Zeus\n  def notify_features(*)\n  end\nend\n```\n. 0.13.1 fixed a lot of bugs that look kind of like this (and I haven't had this one happen to me). So I'm going to close this, but please re-open if it happens again on 0.13.1+\n. Moved to #173. Working on it soon.\n. Sorry for the huge delay in responding.\n\nI haven't put a ton of thought into it, but my though was that alternative plans could be distributed as gems called `zeus-____`, as you've done. \n\nThe gem would define a subclass of `Zeus::Plan` as you also have done. the tricky bit, as I'm sure you've realized, is providing instructions for crafting the zeus.json. I'm really not thrilled with how that part of the project as a whole is working yet, and it'll get revisited at some point if I manage to get around to it.\n\nBasically, whatever you can get to work is fair game as far as that goes.\n\nNice work on the plan :)\n. I can take a crack at this some point, but I'm not optimistic about the outcome. Code coverage in ruby is super hacky, and so is zeus. Ugly hacks don't often combine well with other ugly hacks.\n. Sorry I haven't had any time to fix the issues on this project lately. I\nshould be able to deal with this after Black Friday.\n\nSent from my iPhone\n\nOn 2012-11-05, at 9:29, Matt Rogish notifications@github.com wrote:\n\n+1\n\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/burke/zeus/issues/133#issuecomment-10074662.\n. Fixed in https://github.com/burke/zeus/commit/1890a6877f65f38659cec234749cca67e8c26f06, though I'm curious why your terminal doesn't support winsize. I suppose my ioctl code for linux is broken. I'll open a different issue for that.\n. Moving to #174\n. Closing. I just released 0.13.0 which will not make the crash output available. If the problem still exists, please open a new issue. Thanks, and sorry for the huge delay!\n. Moved to #173. Working on it soon.\n. Polling 1000 files each second or so on NFS is going to be a Bad Time\u2122. It's pretty sketchy even on a local FS. \n\nI'll consider adding it, but I don't think the UX is going to be very valuable.\n. The reason I'm a little hesitant to implement this is that it fills exactly a use case that I'm don't think would work well with polling:\n\n1) Platforms that don't have FSEvents or inotify are already excluded because I don't build binaries for them.\n\n2) There are no additional dependencies for these subsystems since I integrate directly with them rather than relying on, eg. `rb-fsevent`.\n\n3) FSEvents and inotify work on all local filesystems afaik, but fail on remote filesystems.\n\n4) Zeus watches every file loaded by rails. This is generally a pretty obscene number -- enough that I couldn't use kqueue because kqueue uses one FD per watched file, and I didn't want to force the user to up the rlimit for FDs.\n\n5) I don't know much about how NFS (or CIFS) are implemented, but I do not suspect polling 1000 files on a timely basis is going to be reasonable. (my application watches something like 4000, so 1000 isn't actually a high estimate)\n\nZeus' user experience to date has been less than stellar, but it's getting better, and I don't really want to commit to a feature that will perform like shit for anyone that stumbles into a situation where they actually need it.\n. Actually, I suppose it wouldn't necessarily be that horrible if the [`inotify-wrapper`](https://github.com/burke/zeus/blob/master/rubygem/ext/inotify-wrapper/inotify-wrapper.cpp) were able to detect when a file it's passed couldn't be observed via `inotify`, and add it to a second pool that's observed in a separate thread via polling. It's pretty unlikely anyone would have all their gems mounted via NFS (I hope?), so this should constrain the polled set at least to a reasonable size.\n. I actually don't think there's anything I can do about this. Output is 'consumed' instantly by the client process and forwarded to the slave*. I can't think of a way to selectively consume input only when the slave wants it.\n\nI agree it would be nice, but it's either really difficult or impossible. Closing for now. Sorry.\n\n---\n- the output that falls off of one command to the next is output that isn't consumed by the previous process.\n. I never actually finished that site (as you can obviously tell by the appearance!). I'll be launching a new one this weekend.\n. related to #130. Closing, and fixing #130 soon.\n. Added https://github.com/burke/zeus/blob/master/contributing.md. I hope to improve this a bit in the future, but it should have the basic instructions required to successfully build the gem now. Feedback appreciated if it doesn't work out.\n. Not yet, but will work on it once I fix some of the outstanding issues. Closing for now as it's on my todo list.\n. Moved to #173. Working on it soon.\n. Thank you. I will work with this to try to solve the zombie problem.\n\nYou are definitely correct in your assessment that the IPC is shoddy. I'm going to try to fix it up over the next days/weeks. Sorry for the long delay.\n. This works fine on OS X. It must be an issue with my inotify code.\n. I believe this is fixed on master. Please reopen if it's still an issue with 0.14.0, which will be released either this evening or tomorrow. I wasn't able to reproduce before or after, but several similar issues have been fixed.\n. Thanks!\n. I'm not opposed to adding FreeBSD support, but it's not as trivial or as low a maintenance burden as you might think.\n\nFilesystem polling is different. inotify works well on linux, but as I understand it's a pretty third-class citizen on FreeBSD. kqueue is fine, but requiring an FD per watched file as kqueue does is not really feasible for the large number of files watched in most rails apps.\n\nAdditionally, some of the syscalls in https://github.com/burke/pty and https://github.com/burke/ttyutils would have to be changed.\n\nClosing for now, as I have much higher priorities at the moment, but I hope to get around to this eventually. Pull requests accepted in the interim if you or someone else is feeling really ambitious :)\n. Closing for now, but I'd like to revisit this at some point in the future and make zeus do the actual _right_ thing, whatever that is. Thank you for the stopgap fix though :)\n. Yup, I made a really lazy gamble that users would only have one of {minitest, test-unit, rspec} in a project. This fix isn't totally perfect, since it relies on the `*_spec.rb` naming convention, but it's a lot better than what it is now. Thanks :D\n. I'll be resuming development on zeus next week, so hopefully this will make it into a release inside of a couple weeks.\n. It seems that when you run `screen zeus start`, it runs it in a totally different environment than your shell. I have no idea why this would happen, and I can't reproduce it on my machine.\n\nThe statuslogger message is because it can't obtain the window size of the terminal it's being started in (I think 0.13.0 has a minor improvement to handling this case). This kind of sounds like a screen issue more than anything. I don't think there's anything I can do about it. Sorry :/\n. Fixed in https://github.com/burke/zeus/commit/8904b2777b1fdd9899db6ee2d5c426a11b25df84\n. Cool, thanks. If the gist is yours, the description still reads p194.\n. Fixed on master :D\n. It'll be fixed when 0.14.0 comes out, probably later tonight, but https://github.com/burke/zeus/commit/856a4fe0c5e8d0d115acd3026a4ed8fa44cbaa7b#commitcomment-2274036\n. I ended up just releasing it as 0.13.1, and it's out now.\n. I believe this is fixed by the recently-merged https://github.com/burke/zeus/commit/d6deacf8c291fd3dcc60a5580126526e86f7cb16. Next release will work.\n. Running the command outside of the zeus master process will always produce that error message, because that fd only exists when the command was forked from the zeus master.\n\nClearly it's crashing somehow though. I'd be willing to bet it's a quirk of your setup that will be really apparent once I fix #174 (that's really the core issue here). Therefore, closing for now and working on #174 soon.\n. I believe the unresponsive terminal problem is fixed in the newly-released 0.13.0.\n\nZeus kind of expects to be able to successfully boot the application the first time it's launched, therefore if your bundle is out of date, you will have to `bundle` before you `zeus start`. Maybe I could have zeus run `bundle check || bundle` before starting the server? It seems kind of unnecessary.\n. Looks good. Thanks!\n. I'm unable to reproduce this with 0.13.0, but I don't think I did anything to fix it. Can anyone that had this problem try upgrading and let me know if it still happens? Thanks!\n. Super weird. I'll try to reproduce it.\n. @dalibor Are you on linux or OS X?\n. Ah, you mentioned gedit. \n\nThat would explain why I haven't been able to reproduce it on my machine, you guys are all using linux. I'll fire up a vm :)\n. @dalibor I think it's because vim triggers two filesystem events when it writes files, while gedit probably only does one.\n\nThen there's inotify, which seems to fire a crapload of events for every file changed. This doesn't surprise me all that much.\n. I'm pretty confident this is fixed on master, as a lot of related issues are fixed, but I was never able to reproduce this particular one.\n\nPlease re-open if the issue persists after 0.13.1, which I will release later today (or possibly tomorrow)\n. Closing. #162 looks like a reasonable solution so this issue is no longer necessary. Discussion moves there.\n. I really like the contribution, but I'm currently trying to figure out exactly what to do about this vendored version of `m` we seem to have going on. I'm considering trying to get the necessary changes merged back into qrush/m, but looking at what I've already done to it, they might be too substantial.\n\nI'll mull it over. I'll probably end up just merging this and committing to the maintenance burden of an internal `m` fork :P.\n. Thanks!\n. Probably the same issue as #115. Will try to fix. \n. I'm curious why you'd want to do this. With eager_loading enabled, a bunch of stuff is loaded earlier, forcing zeus to restart processes much more often in a normal development cycle. \n\nIf there's a reasonable rationale for this, I'll merge, but I just want to make sure it's not a workaround for some other bug I should be solving.\n. Closing for now. Feel free to reopen if you'd like to discuss further.\n. I finally have some time to work on zeus again soon. I'll be working on contributing instructions right away.\n. Yeah, this makes way more sense. Not sure how I thought that was a good idea. Thanks for the contribution :)\n. @gmile's got it. If you manually ran one test file, it would be the same behaviour. I want to preserve that to some degree.\n. Moved to #173. Working on it soon.\n. Unfortunately, it isn't really possible (or at least, is out of scope for the time being). Zeus has no capacity to reload files really, it can only detect which savepoint happened previous to loading a given file and restart from there. If you can cause those files to be initially loaded later in the boot process (perhaps by removing references to them in initializers or changing your application.rb), it should have the desired effect.\n. Ah, I see. I have a bunch of modules included in ActiveRecord::Base too, and they just cause zeus to restart most of my app, same as you.\n\nThe theory is that the stuff you work on most frequently doesn't cause as much reloading. In general, the hope is that people don't spend too much time working on stuff that's included into AR::B I guess.\n\nSorry I couldn't be more helpful in this case.\n. Works for me on all three supported platforms!\n. Fixed, or at least greatly-improved in the last few commits. New release tomorrow I think.\n. I've made several improvements to the error reporting. I'll be releasing a new version tomorrow hopefully.\n\nIf your problem still exists after the update, or if you find a new issue, please don't hesitate to re-open or create a new one.\n\n![a](http://cl.ly/image/133D2y272g3T/content)\n\n![b](http://cl.ly/image/17090t2m2k1o/content)\n. Thanks for the report!\n. Sorry, error in `contributing.md` -- you'll need `$GOPATH/src/github.com`, not `$GOPATH/github.com`. Closing issue, but please let me know if you have any other problems with this.\n. Please see #174 for updates on this. It's likely something simple in your case, but the root problem here is just that zeus is totally unhelpful when one of the slave processes dies.\n\nI hope to solve this tomorrow and release a new version by the end of the week. \n\nClosing this issue -- #174 will have updates when I've resolved this, then I can help you figure out the underlying issue if there still is one.\n\nAs a random shot in the dark, if your Gemfile.lock specifies method_source make sure zeus isn't loading a different version of method_source than the one your app does. In the currently-released version, that's a really easy way to get this error.\n. Ah, great. Just uninstall all versions of method_source, then run bundler in your app and everything will probably work\n. Perfect! The next version shouldn't have that problem...\n. Thanks. Hadn't thought about this.\n. Just realized that. Already editing :)\n. https://github.com/burke/zeus/commit/61e38e0833743a9824be3fdee60a1cb59669df23\n. Test frameworks do some really asinine hacks to autorun loaded test files. What version of rspec are you guys using? I'll try to figure this one out early next week.\n. Thanks. I'll play with it on monday.\n. Fixed in https://github.com/burke/zeus/commit/856a4fe0c5e8d0d115acd3026a4ed8fa44cbaa7b\n. Fixed on master.\n. Closing because #182 was fixed. Will reopen if I see it happen again.\n. Worked around this instead.\n. Looks like it does. I think it's a pretty sensible solution, and pretty much what I would have ended up doing had I dug into it more myself. Closing. Thanks for your contributions, @antifuchs!\n. Kind of cool thing about this architecture is that it could \"easily\" work for not just any framework, but actually any language that supports tracking loaded files. Of course, I haven't got around to doing that, but it's totally possible.\n. Sorry, I will start doing both of these.\n. Primarily, I don't think guard should be booting zeus. It made sense for spin, but zeus is larger in scope. The process should be:\n\n1) `zeus start`\n\n2) `guard` or `zeus guard`, depending on whether that's a win at all.\n\nI've probably used zeus-guard for 2 minutes combined so far, and guard for maybe 10. It's entirely possible the resolution of this issue will be \"burke plays with guard-zeus for another 20 minutes\".\n. No worries, thanks for the fix!\n. Thanks!\n. Cool, thanks!\n. Are you on linux or OS X?\n. Ok. I'll dig around tomorrow and see if I can figure out what's happening.\n. Zeus's internal process tracking stuff is all keyed by that identifier, so reusing them in multiple places will break things. Here's a fairly simple solution:\n\n1) Create a file at `lib/custom_plan.rb` (or called whatever you want; it doesn't matter):\n\n```\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n  alias_method :prerake_test, :prerake\n  alias_method :rake_test, :rake\nend\n\nZeus.plan = CustomPlan.new\n```\n\n2) Change the second `prerake` in your `zeus.json` to `prerake_test`.\n\n3) Change the command to `ruby -rubygems -r./lib/custom_plan -eZeus.go`\n. Going to fix it tomorrow. Gotta figure out how to build a good test harness for all the different shit zeus nominally supports. Thanks for the report.\n. Ah yes, this would not work. It's because we disconnect/reconnect from the database several times while booting the app in zeus. I'm not too sure how/if-possible to work around this. Simply not disconnecting might actually solve the problem. I guess we could test for whether the AR connection is an in-memory SQLite DB to determine whether to reconnect or not.\n. Created a new issue (#352) to aggregate these related issues. I'll try to fix soon.\n. Closing, see #201 for updates.\n. Yeah. I want to figure out a better way to launch that binary without loading ruby to do it, but I don't think it's possible with rubygems. I have a couple other ideas rolling around but nothing great yet.\n\nHere's an example series of events that happens when you use vroom:\n\n1) The file is changed on disk.\n\n2) Vroom triggers the spec command.\n\n3) Zeus instructs the \"test_helper\" slave to fork a new process to run the spec.\n\n4) inotify reports the changed file to zeus.\n\n5) Zeus kills the test_helper, which has already spawned the new test process.\n\nUnfortunately, inotify is not instantaneous. I'm not sure how to deal with this really. I'll think about it.\n. Not sure when exactly this was addressed, but it seems to have been fixed. Reopen if it's just me that it's working for. Sorry for the delay.\n. The executables aren't checked in -- if you want to run them from git rather than from the released versions, you have to set up a [sort of complex toolchain](https://github.com/burke/zeus/blob/master/contributing.md#hacking-on-zeus). It's not possible to specify a zeus dependency by git ref in a gemfile.\n. `after_fork` can accomplish this, but it will also run on the initial load. I'm sure there's a way to work around that if necessary. \n\nI'm not sure whether this addresses the problem. I can't think of a usecase that `after_fork` couldn't be used for, anyway. Sorry I didn't get back to this in anything resembling a reasonable timeframe. Closing the issue -- feel free to reopen if you still care and `after_fork` doesn't work out.\n. If it was fixed in sunspot, I'm pretty content with that as a resolution for this issue. Thanks :)\n\nI suppose what's happening is that zeus has opened a TTY with a specific mode (`r+` in this case) and it can't change it to `a`. There's probably a way to fix that, but I don't know how. This is the first issue I've heard of, and it was an easy upstream fix, so I'm just going to close.\n\nSorry for the delay :/\n. I've pushed a new version as 0.13.3.rc1. Thanks everyone :)\n. Sorry I never got around to this. It's likely fixed in newer releases and I can't reproduce, so I'm closing. Please reopen if it's still a thorn in your side.\n. Not sure when exactly this was fixed, but it's not happening on master. I'll push a new release soon.\n. I believe this has been fixed recently. Sorry I never got around to this issue.\n. Thanks to @sideshowcoder's PR, you can now set the `ZEUSSOCK` environment variable (make sure it's set for both `zeus start` and and client processes you run). Just set it to some location that isn't in an almost-filesystem :)\n. Thanks again @antifuchs. Assuming this solved the issue and closing.\n. I want to rework the output subsystem yet (I think I'd like the core to just generate a stream of events that a wrapper turns into a UI) -- but #260 definitely addresses this issue quite nicely.\n. Sorry, but this is out of scope for now. It's a rather difficult thing to decide (do we look in all recursively-nested subdirectories of all load path items? what about any tmp directories that happen to be there? It just gets unreasonable fast.\n. Sorry, not enough here to go on. If it's still a problem could you re-open with more information? See the template at https://github.com/burke/zeus/blob/master/contributing.md#reporting-issues maybe.\n. I think this does belong in a custom Plan. I don't want to overload the core with flags. There's a lot of good solutions here.\n. Zeus does clean up after itself if sent `SIGTERM` (Ctrl-C), but it's unable to clean up after itself if sent `SIGKILL` (`kill -9`). I can't remember whether it behaves nicely on `Ctrl-\\` or not. \n\nIn any case, zeus is already handling every signal possible. The remaining signals are unhandle-able.\n\nIf zeus is failing to clean up on `SIGTERM`, that's a bug. If it's still happening in `0.13.4.pre2`, please reopen a new issue.\n\n...and sorry for the huge delay :/\n. Fixed, I believe, thanks to @sideshowcoder!\n. Sorry for being completely MIA. I've been busy with work and haven't been able to get my head back into this project for a good long while. @antifuchs, I've added you to the collaborators for this project. Thanks all for dealing with my half-baked code :/. \n. It would be because your app is loading those really early in your app's startup for some reason. You could stick a `raise` in a factory to see what path leads to it being required and try to defer it to your spec/test_helper. This isn't really a problem we can deal with in zeus-land, I think.\n\n(Also, sorry for the crazy delay. I've been burnt out on this project for a while...)\n. It's conceivable that zeus is the straw that broke the camel's back in pushing your stack usage over the current limit.\n\nIt's also conceivable that there's some bug in either zeus's rails integration or your app (or both?) causing divergent recursion. \n\nTry upping the stack limit using `ulimit` and restarting zeus, maybe.\n. Created a new issue (#352) to aggregate these related issues. I'll try to fix soon.\n. Sorry, JRuby support is not planned. Lack of `fork` is a big roadblock. \n. Zeus should probably use this algorithm to find the socket:\n1. If socket path includes a '/', use that path exactly.\n2. If socket does not include a '/' (as by default in the form of \".zeus.sock\"):\n   1. Check for socket in current directory.\n   2. Does current directory contain a Gemfile or is it the filsystem root? If yes, fail. If no, go up a directory and go to step 2.1.\n. There's a LOT of UNIX-specific stuff going on in zeus's code. It may (or may not?) be theoretically possible, but it's not even just `fork` that's missing. This is a very UNIX-centric utility, unfortunately. Sorry.\n. Just added both you guys as collaborators. I don't have the energy to work on zeus lately, so do whatever you think makes sense :)\n. See https://github.com/burke/zeus/blob/master/docs/ruby/modifying.md for instructions on modifying Zeus's default plan. It shouldn't be too hard to make a production rake command.\n\nHowever, since production preloads most of your app, it will cause most of your app to reload every time you change a file. I didn't include this in the default plan for that reason.\n. Duplicate of #167. I'll try to take a look at this soon.\n. I wonder whether it would make more sense to inspect `boot.rb` for intent to boot from `*/dummy`, but this is fine. Merging and giving you a commit bit. Thanks, and sorry I took forever to get around to this :S\n. I need a backtrace to investigate this, but I'm inclined to suspect it's just an app incompatibility thing. There are a few differences that could make an app not boot, but I don't think zeus is relying on any of them.\n\nReopen with a backtrace if it's still an issue.\n. Yup, in this case, you'd just run any of the commands displayed in red, and it would show you whatever trace that ruby process failed with. Since `boot` failed in this case, all the commands would show you the same trace.\n. Done.\n. Sorry, that would cause badness if someone accidentally tried to start zeus while it was already running. The socket is the means by which zeus is able to detect that it's already running. I agree that having to remove it manually is a bit gross, but it's the best solution to the problem I can think of.\n. I think the state machine is too confusing. I couldn't figure this one out either (and then I got super burnt out, partially because of this...).\n\nI haven't noticed any of this sort of crash in the last few days. Do you figure you've solved this problem? Fantastic work in either case!\n\nI'm going to attempt to clean up some of my gross Go code over the next few weeks. Sorry for subjecting you to it in this state :P\n. Merged. Thanks for the contribution. You have a commit bit now.\n. @bezelga Works for me on the newly-pushed 0.13.4.pre2 (and master):\n\n![img](http://cl.ly/image/3U1T0n2k3U2d/content)\n. Wait, sorry, #67? Could you elaborate?\n. Ok. Are you positive the env var is set? could you try `ZEUSSOCK=/tmp/zeus-myproj.sock zeus start` and confirm that that is definitely broken too? (also, try `which zeus`. It's theoretically possible that even though you only have the one gem, you have some other copy of zeus installed elsewhere).\n. I'll try building on linux tomorrow. I've generally built zeus on my macbook, but it's supposed to work on linux.\n. I should really put the zeus version in the startup message. Does it work with `0.13.4.pre2`? There have been a lot of bugfixes since the last release. Sorry for the delay.\n. Does it work with 0.13.4.pre? Sorry for the delay. There have been a lot of contributions since 0.13.3.\n. Neat. I had a very, very hard time convincing myself not to introduce the zmq dependency to zeus.\n. I'm not able to pass them along for kind of subtle and complicated reasons. Passing the env var along is easy enough, but setting `RAILS_ENV` can have many effects early on in the boot process, invalidating certain assumptions that zeus has already made by the time this code is executed. \n\nI can explain it better when I've had some sleep if you're really interested, but suffice it to say I wish it could do that too, but it's a limitation of the way zeus works that this just isn't conceptually possible.\n. Leaving this here for my own future reference mostly:\n\nzeusclient can be called with either a TTY or a pipe as an input stream, but it doesn't pass that information along to zeusmaster. If a file or other stream is piped into zeusclient as is the case in this issue, a TTY is still used to communicate with the backing ruby process.\n\nIf zeusclient is called with a pipe, a pipe should be opened to communicate with the command process.\n. Looks like this is fixed now.\n. I remember having a reason for this but I can't remember what it is anymore. I'll mull that over; it's been bugging me a bit too.\n. My ultimate goal was to start zeus in a background-y way (vaguely like spring), but I didn't want to do that until it was stable enough. It's starting to get close.\n. Yup. I haven't bothered to pass the two streams independently yet. It's not high on my priority list, but if someone wants to take a crack at this, it might not be an insanely-complicated modification. I haven't thought about it much.\n. I don't remember why I wrote it the way I did, but if this fixes problems, great! I gave you a commit bit; do as you wish :)\n. I don't use guard, but I imagine @quark-zju's got it. To answer your question more literally, you could run `zeus start > /dev/null 2>&1` to silence the output.\n. You can [increase the available stack size with ulimit](https://www.google.ca/search?q=ulimit&oq=ulimit&aqs=chrome.0.57j5j0l2j62l2.1408j0&sourceid=chrome&ie=UTF-8#sclient=psy-ab&q=increasing+stack+size+with+ulimit&oq=increasing+stack+size+with+ulimit&gs_l=serp.3...1435.5882.0.6002.31.27.2.0.0.13.349.3010.15j11j0j1.27.0...0.0.0..1c.1.12.psy-ab.b-t0jgXHsDY&pbx=1&bav=on.2,or.r_cp.r_qf.&bvm=bv.47008514,d.aWM&fp=9a341d43af23ebf8&biw=1366&bih=670). You're probably pretty close to the limit already, and zeus adds several more frames to any trace.\n. Hm. I think this makes sense. It wastefully loads minitest if the user is using rspec, but it's a small library without side effects, so that should be totally fine. Go for it!\n. I'll push a full release in the next couple days. There is a 0.13.4.pre2 up with all the recent contributions except some of the refactoring I've done to the go source lately.\n. Thanks a bunch for your work on this @latortuga :)\n. I think I can solve this like so:\n1. Set `ISIG` in the client->user TTY.\n2. Upon receiving `SIGINT`, `SIGTSTP`, or `SIGQUIT` on STDIN, check whether the client->command TTY has `ISIG` set.\n3. If `ISIG` was set, send the signal. If unset, append the signal's code to the stream.\n4. Remove the input stream signal equivalent handling from zeusclient as it's no longer relevant.\n\nThis has one problem that immediately jumps to mind: If the client process is manually sent, say, `SIGINT`, there is a bit of information lost -- the slave could have different handling for `SIGINT` depending on whether it was received as a `^C` or as an actual signal, and the solution above makes an assumption based on the current setting of `ISIG` which would be preferred.\n. Except I can't do that because Termios flags are local to one side of the TTY, and that side is controlled by an external process (user's ruby app). Crap.\n. Two concerns:\n1. Default, cooked mode. `zeus server` for example. Does not respond to `SIGINT` if sent as ASCII 3. Does respond correctly to signal.\n2. Raw mode, used by readline (`zeus console`). Responds to `SIGINT` by terminating. Responds to ASCII 3 by unwinding input stack, cancelling running command, etc.\n\nIt is desirable to send ASCII 3 to raw mode TTYs, and to send SIGINT to cooked mode TTYs.\n\nHowever, this raw/cooked state is local to the command process, and can be changed at any time. The state is not propagated into the client, as it's stored in some kernel storage specifically for that process's side of that TTY.\n. Hey, this is great. Nice work!\n. I avoided doing this before because the Go side of zeus really makes almost no assumption about what the slave language is. I think adding a reference to 'Gemfile' here is the first thing anchoring it down to ruby. It would just be a matter of rewriting rubygem/lib/zeus.rb for python or whatnot to make it work in a completely different ecosystem.\n\n...however, clearly no one is doing that, so :+1:, looks good to me :). Good idea.\n. Sorry for the ridiculously long delay.\n\nIt is entirely possible if you compile in `inotify` support. KQueue is semi-feasible as an alternate implementation strategy, but it uses an FD per file watched, which, in zeus's case, is usually a number that would require modification of `RLIMIT_NOFILE`.\n\nAnyway, I don't use FreeBSD. I suspect it's more or less a matter of adding some targets [to the Makefile](https://github.com/burke/zeus/blob/master/Makefile#L48), tweaking [the inotify wrapper](https://github.com/burke/zeus/blob/master/rubygem/ext/inotify-wrapper/inotify-wrapper.cpp) a tiny bit, and writing docs for FreeBSD users (especially reminding to install inotify), but I won't likely find myself doing this in the near future. \n\nI am 110% open to pullrequests on this, but don't have the motivation to do it myself.\n. We have this class of problems a lot at my workplace. The best solution is usually to run zeus inside the VM and mount the code to your host using NFS (of course, if you use vim or emacs, you can just work inside the VM).\n\nIt would be quite possible to add a polling mode to zeus for this kind of situation, but it wouldn't really work well -- access times are so bad over shared folders that it would be a horrendous experience.\n\nThe unfortunate truth is that there _is_ no good solution. Network filesystems and shared folders both have performance problems, and neither, perplexingly, supports file-change notifications.\n. See #138 for future updates\n. Looks good, thanks!\n. I'll try to get it built tomorrow. I don't have the whole build toolchain installed anymore.\n. It's XCode complaining about the fsevents module. I'll probably never fully understand the black magic that is keeping XCode happy about SDK versions. I think all the rest is (loosely) documented at https://github.com/burke/zeus/blob/master/contributing.md#step-1-prerequisites\n. ...but yeah. If I figure it out and it's not just some stupid thing I've broken for myself, I'll add it to that file.\n. I upgraded to Mavericks yesterday and it turns out `make all` runs just fine now (I did have to change some code around command line argument parsing).\n\nIt's released as `0.14.0.rc1`, but it might be broken. I gave it a quick try on shopify, and while the master boots up correctly, the slaves never successfully launch. (stuck on zeusclient.go:88). If someone's changed that handshake recently, that's the problem. I don't have time to look at it today.\n\nI still released it because it's probably >50% odds that the failure is some bizarre quirk of our project.\n. Ok, I'll dig into it when I get a chance.\n. This is harder to fix than you might expect. I don't really want to special-case a specific file, and intercepting YAML loads is quite difficult.\n\nNot going to fix this for now, but I do hope that we come up with a solution eventually.\n. This is just how zeus works. The issue is that your models are loaded unfortunately early in the boot process of your app. Zeus can't fix it; the only solution if you want the reload process to be faster is to somehow defer loading those models to later in the process. Observers are big offenders for this.\n. Looks good to me, :shipit:\n. Just added you as an owner on rubygems, @latortuga. Thanks :)\n. Is it possible that you're running `rake>=10.1.0` outside of zeus (ie. not using `bundle exec`) but your bundled version is `rake<10.1.0`? That would explain the behaviour you're seeing, I think. Zeus will always use the bundled version.\n. You could probably make it `rake:test` by using `define_method`. `raket` is fine. I don't see any other way around this, unfortunately.\n. Yeah, it seems like zeusclient is crashing. When it connects to the master, it sets up a bunch of terminal settings, and resets them before it exits. If it exits non-gracefully, it doesn't get a chance to reset the terminal settings, resulting in the screwed up line breaks and stuff from the screenshot above.\n\n**You can fix your terminal by running `reset` or `stty sane`.**\n\nDefinitely sounds like a race condition crash of some sort. It almost certainly involves a bug in zeusclient somehow (ie. a bug completely on the master/slave side should be incapable of messing up the client terminal).\n\nIf I were going to dig into this, I'd `strace` the `zeus test ....` (ie. `strace -tt -T -f zeus test ...` or whatever) and see how far it gets. Maybe easier, given how much syscall chatter I'd expect to see, would be to just instrument the startup code in `cmd/zeus` and `zeusclient` with a bunch of `fmt.Println` calls, to see exactly how far along the binary makes it before crashing. Bugs in `zeusclient` would tend not to be nearly as crazy or nuanced as those in the master process. I'd think most of the debug process would be just figuring out what the chatter is between the client and the master, and what line it crashes on. The solution is probably easy given that.\n. Issue _should_ be fixed by 4a8086c5f6e68c3132313740ed135b5cf1661309. Really cool contribution!\n. Sure thing -- done.\n. I can probably publish a release early next week.\n. Whoops, forgot about this. Pushed 0.15.8 just now.\n. That build crashed on startup for most people, so I yanked it. Someone pushed 0.15.9 I think, but it had a similar issue. Not sure what the status is now.\n. Yep, I built 0.15.8 with go 1.6.2. Perhaps I should yank 0.15.8?\n. btw, I can give you rubygems push access if you want it.\n. LGTM.\n. I haven't built it in a while, I can add you as a rubygems contributor, let me know what email address you use there or link me to your profile.. Done :+1: Thanks!. I don't have time to review in depth today, but at a quick glance this looks sensible :+1:. I always felt like there was some legitimate reason that I didn't do this originally, but now that I think about it, it was probably just confusion or laziness. Looks good so far.. Makes sense to me. I see that github.com/zeus isn't available, but I have no objection to this if someone wants to go for it.. ",
    "stefanpenner": "no worries, gave me a chance to get used to the project.\n. yay +1\n. Ya I can confirm random kills of my rails server :P. I will investigate this more in depth later.\n. no worries, gave me a chance to get used to the project.\n. yay +1\n. Ya I can confirm random kills of my rails server :P. I will investigate this more in depth later.\n. ",
    "jvatic": "Yes, I'm still on Lion. 0.2.6 fixed this issue.\n. Yes, I'm still on Lion. 0.2.6 fixed this issue.\n. ",
    "knoopx": "This works for me, just run `zeus init` and replace the `test_environment` block in your `.zeus.rb` with this:\n\n```\nstage :test_environment do\n  action do\n    Bundler.require(:test)\n\n    Rails.env = ENV['RAILS_ENV'] = 'test'\n    require APP_PATH\n\n    $rails_rake_task = 'yup' # lie to skip eager loading\n    Rails.application.require_environment!\n    $rails_rake_task = nil\n\n    spec_path = File.join(ROOT_PATH, 'spec')\n    $LOAD_PATH.unshift(spec_path) unless $LOAD_PATH.include?(spec_path)\n    $LOAD_PATH.unshift(ROOT_PATH) unless $LOAD_PATH.include?(ROOT_PATH)\n  end\n\n  stage :spec_helper do\n    action { require 'spec_helper' }\n    command :rspec do\n      exit RSpec::Core::Runner.run(ARGV)\n    end\n  end\nend\n```\n\nTo execute specs simply run `zeus rspec spec/whatvever_spec.rb`\n. Experiencing the same problem here, I just reinstalled rvm/ruby/zeus and the problem still appears.\n. same happens to me, however I am not using guard. zeus boots fine but commands are not invoked.\n. This works for me, just run `zeus init` and replace the `test_environment` block in your `.zeus.rb` with this:\n\n```\nstage :test_environment do\n  action do\n    Bundler.require(:test)\n\n    Rails.env = ENV['RAILS_ENV'] = 'test'\n    require APP_PATH\n\n    $rails_rake_task = 'yup' # lie to skip eager loading\n    Rails.application.require_environment!\n    $rails_rake_task = nil\n\n    spec_path = File.join(ROOT_PATH, 'spec')\n    $LOAD_PATH.unshift(spec_path) unless $LOAD_PATH.include?(spec_path)\n    $LOAD_PATH.unshift(ROOT_PATH) unless $LOAD_PATH.include?(ROOT_PATH)\n  end\n\n  stage :spec_helper do\n    action { require 'spec_helper' }\n    command :rspec do\n      exit RSpec::Core::Runner.run(ARGV)\n    end\n  end\nend\n```\n\nTo execute specs simply run `zeus rspec spec/whatvever_spec.rb`\n. Experiencing the same problem here, I just reinstalled rvm/ruby/zeus and the problem still appears.\n. same happens to me, however I am not using guard. zeus boots fine but commands are not invoked.\n. ",
    "rstacruz": "Hey guys, rspec support still isn't working for me, at least not as how I expected it to. Let me put my details in here for anyone else ending up here via a web search.\n\n### Environment:\n\nI ran `zeus init` in a Rails 3.2.8 application that uses the `rspec-rails` gem.\n\n### Symptoms:\n\nInvoking `zeus rspec` will show \"No examples found\", while `zeus rspec spec/models/hello_spec.rb` will return errors as if the test database is empty. In contrast, that spec will work when invoked outside of zeus (that is, `rspec spec/models/hello_spec.rb`).\n\nInvoking `zeus rake spec` is slow, because all it does is invoke another Ruby process.\n\n### Fix:\n\nYou'll need to set up your test database before invoking Zeus. Ensure that Zeus isn't running, then do this:\n\n```\n$ bundle exec rake db:drop db:setup RAILS_ENV=test\n```\n\nUsually, `rake spec` takes care of this for you, but if you're going to invoke `rspec` outside of `rake`, you'll need to do it yourself.\n\nAfter that, simply invoke the Zeus server again:\n\n```\n$ zeus start\n```\n\nNow you'll need to invoke each of the tests manually. Again, usually `rake spec` does this for you, but we'll need to do it on our own:\n\n```\n$ zeus test spec\n```\n\n...It'd be nice to have this made convenient somewhere.\n. Hey guys, it seems it doesn't reload code properly. To illustrate:\n- Run `zeus start`\n- Run your tests and watch them pass\n- Ruin a file like `app/models/user.rb` and make it ridiculously error-prone (go and remove methods or validations or something)\n- Run your tests, expecting them to fail, and see them still passing\n. Hey guys, rspec support still isn't working for me, at least not as how I expected it to. Let me put my details in here for anyone else ending up here via a web search.\n\n### Environment:\n\nI ran `zeus init` in a Rails 3.2.8 application that uses the `rspec-rails` gem.\n\n### Symptoms:\n\nInvoking `zeus rspec` will show \"No examples found\", while `zeus rspec spec/models/hello_spec.rb` will return errors as if the test database is empty. In contrast, that spec will work when invoked outside of zeus (that is, `rspec spec/models/hello_spec.rb`).\n\nInvoking `zeus rake spec` is slow, because all it does is invoke another Ruby process.\n\n### Fix:\n\nYou'll need to set up your test database before invoking Zeus. Ensure that Zeus isn't running, then do this:\n\n```\n$ bundle exec rake db:drop db:setup RAILS_ENV=test\n```\n\nUsually, `rake spec` takes care of this for you, but if you're going to invoke `rspec` outside of `rake`, you'll need to do it yourself.\n\nAfter that, simply invoke the Zeus server again:\n\n```\n$ zeus start\n```\n\nNow you'll need to invoke each of the tests manually. Again, usually `rake spec` does this for you, but we'll need to do it on our own:\n\n```\n$ zeus test spec\n```\n\n...It'd be nice to have this made convenient somewhere.\n. Hey guys, it seems it doesn't reload code properly. To illustrate:\n- Run `zeus start`\n- Run your tests and watch them pass\n- Ruin a file like `app/models/user.rb` and make it ridiculously error-prone (go and remove methods or validations or something)\n- Run your tests, expecting them to fail, and see them still passing\n. ",
    "thenickcox": "I wasn't able to find an answer to this anywhere, but rspec support only works for me in specific files. That is, \n\n```\nzeus test spec/controllers/application_controller_spec.rb\n```\n\nworks like a dream, but \n\n```\nzeus test spec/controllers\n```\n\nreturns\n\n```\n00000010:gc nickcox$ zeus test spec/models\nRun options: --seed 37890\n\n# Running tests:\n\n\n\nFinished tests in 0.002135s, 0.0000 tests/s, 0.0000 assertions/s.\n\n0 tests, 0 assertions, 0 failures, 0 errors, 0 skips\n```\n\nBut \n\n```\nbundle exec rspec --drb spec/controllers\n```\n\nruns all tests in spec/controllers, as expected. Anyone else have this problem?\n. I wasn't able to find an answer to this anywhere, but rspec support only works for me in specific files. That is, \n\n```\nzeus test spec/controllers/application_controller_spec.rb\n```\n\nworks like a dream, but \n\n```\nzeus test spec/controllers\n```\n\nreturns\n\n```\n00000010:gc nickcox$ zeus test spec/models\nRun options: --seed 37890\n\n# Running tests:\n\n\n\nFinished tests in 0.002135s, 0.0000 tests/s, 0.0000 assertions/s.\n\n0 tests, 0 assertions, 0 failures, 0 errors, 0 skips\n```\n\nBut \n\n```\nbundle exec rspec --drb spec/controllers\n```\n\nruns all tests in spec/controllers, as expected. Anyone else have this problem?\n. ",
    "nozim": "I have the situation opposite yours, my zeus rspec spec/controllers/clients_controller_spec.rb does not find the spec but works when I run zeus spec/controllers  \n. I have the situation opposite yours, my zeus rspec spec/controllers/clients_controller_spec.rb does not find the spec but works when I run zeus spec/controllers  \n. ",
    "steveluscher": "Are you using Pow as your web server, @grosser? I received the same error, but only when Pow was up.\n\nIncidentally, I can't seem to serve the app through Pow when Zeus is running, and I can't start Zeus when Pow is up.\n. `2)` will work nicely. Thanks!\n. Are you using Pow as your web server, @grosser? I received the same error, but only when Pow was up.\n\nIncidentally, I can't seem to serve the app through Pow when Zeus is running, and I can't start Zeus when Pow is up.\n. `2)` will work nicely. Thanks!\n. ",
    "grosser": "Got past this error, next problem:\nour app does not require the default group by default (yes I know it's\nsilly :D )\nany reason not to load config/application.rb ?\n\nOn Tue, Aug 7, 2012 at 10:34 PM, Burke Libbey notifications@github.comwrote:\n\n> I literally have no inkling of an idea what could cause that issue, but I\n> was able to solve it by pulling AcceptorErrorState into a different file,\n> which I was thinking about doing anyway.\n> \n> 0.3.1 should now work with pow.\n> \n> I believe what will happen now is that zeus will start up one or more\n> 'error-state' acceptors. When you connect to these (eg. zeus console),\n> they'll print the error they failed with. This should be much more helpful\n> than a LoadError. Zeus currently makes some pretty specific assumptions\n> about your unit testing setup, in particular (we use an ancient version of\n> Test::Unit at my workplace). I hope to improve/add support for other\n> testing frameworks over the coming weeks.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/21#issuecomment-7575426.\n. hmm having a .zeus.rb is nice for monkey-hacks, but having everything\ncommented out / only overwrite the things I need\ncould make it easier to maintain / possibly reduce strange issue reports of\npeople with an outdated .zeus.rb\n\nstating that this needs some crazy gc patches is really scary to most\npeople i've shown this to,\nbut aparently it works just fine without, maybe you can change this to \"xyz\nis better if you have crazy gc patches enabled\"\n\nOn Wed, Aug 8, 2012 at 8:11 AM, Burke Libbey notifications@github.comwrote:\n\n>  any reason not to load config/application.rb ?\n> \n> I'm kind of taking a bet that gems won't change very often, and that\n> nearly-everyone includes the default bundle, so I require it before\n> application. If this is not true for you, you can run zeus init in your\n> project and edit the config file generated at .zeus.rb to remove the call\n> the Bundler.require(:default).\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/21#issuecomment-7586589.\n. Sounds good, I circumvented the issue by killing everything but testrb wich\nis my 98% usecase :)\n\n``` Ruby\nZeus::Server.define! do\n  stage :testrb do\n    action do\n      ENV['RAILS_ENV'] = 'test'\n      require File.expand_path(\"config/environment\")\n      require File.expand_path(\"test/helpers/test_helper\")\n    end\n\n    command :testrb do\n      ActiveRecord::Base.clear_all_connections!\n      (r = Test::Unit::AutoRunner.new(true)).process_args(ARGV) or\n        abort r.options.banner + \" tests...\"\n      exit r.run\n    end\n  end\nend\n```\n\nOn Wed, Aug 8, 2012 at 9:34 AM, Burke Libbey notifications@github.comwrote:\n\n> @grosser https://github.com/grosser: Totally agree on the config file.\n> This is still really new code, but a friend and I are cooking up an idea\n> for something better and more maintainable. Everything else just needs a\n> little more time to solidify before I'm ready to commit to a replacement.\n> \n> As for the GC patch stuff, I should re-word the README to indicate it's\n> not actually a hard requirement, but it is a pretty strong one. Without the\n> GC patches, zeus will use about 10 times as much memory as booting rails\n> normally, which is completely obscene.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/21#issuecomment-7589270.\n. simply not doing watchin on linux might be a nice solution for now (+ updating the readme to say \"only watches for changes if you are on osx\")\n. travis bot does not seem to be running the right tests... fails locally...\n. Damn travis does not work, the build script (rake) always returns 0...\nhttp://travis-ci.org/#!/burke/zeus/jobs/2115024\n\nThese tests only work on machines where the current home is /Users/mgrosser/ :D\n. maybe make it `not_on_travis do ... it \"bla\" ... end`\n. travis is still lying btw :)\n. Yeah :D\n. Interestingly the LOAD_PATH does not contain zeus, and a require 'zeus/server/command_runner' also does not help\n\nthe file is required by a different process then the process that tries to run the line\n\nputting the require ontop of the file solves it\n. Just put `require 'zeus/server/command_runner'` into our .zeus.rb, solves it for now...\n. nope pure 0.4.5 from rubygems\n. constant :)\n\ncurrent solution:\n\n``` Ruby\nZeus::Server::FileMonitor::FSEvent.class_eval do\n  def handle_changed_files\n  end\nend\n```\n. https://github.com/burke/zeus/blob/master/rubygem/lib/zeus/plan.rb\n. :+1: @burke is this easy to fix ?\n. Thanks, please release to rubygems, I want it to work out of the box :)\n\nOn Thu, Oct 24, 2013 at 8:42 PM, Burke Libbey notifications@github.comwrote:\n\n> Looks good, thanks!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/pull/416#issuecomment-27057434\n> .\n. Maybe document / automate the install in case someone else want's to do it\n/ you forget how to do it :)\n\nOn Thu, Oct 24, 2013 at 9:21 PM, Burke Libbey notifications@github.comwrote:\n\n> I'll try to get it built tomorrow. I don't have the whole build toolchain\n> installed anymore.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/pull/416#issuecomment-27060330\n> .\n. seems to not be working, zeus start boots up normally but then zeus testrb just hangs\n. @burke \n. fyi @arturopie who wrote the initial support\n. on 0.15.1\n\n```\n# shows existing names\nzeus test test/unit/car_test.rb -n '/the truth\\?/'\nNo test name matches '/the\\ truth\\\\\\?/'. Valid tests to run:\ntest_the_truth\\?: zeus test test/unit/car_test.rb:\n\n# double escapes '?'\nzeus test test/unit/car_test.rb -n '/the_truth\\?/'\nRun options: -n /the_truth\\\\\\?/ --seed 20494\n0 tests, 0 assertions, 0 failures, 0 errors, 0 skips\n\n# incorrectly escapes '?'\nzeus test test/unit/car_test.rb -n '/the_trut?/'\nRun options: -n /the_trut\\?/ --seed 7250\n0 tests, 0 assertions, 0 failures, 0 errors, 0 skips\n\n# works when by accident escpaed regexp also matches\nzeus test test/unit/car_test.rb -n '/the_truth?/'\nRun options: -n /the_truth\\?/ --seed 15090\n1 tests, 1 assertions, 0 failures, 0 errors, 0 skips\n\n# works fine with just ruby\nruby test/unit/car_test.rb -n '/the_truth\\?/'\nRun options: -n /the_truth\\?/\n1 tests, 1 assertions, 0 failures, 0 errors, 0 skips\n\n# does not work with name\nzeus test test/unit/car_test.rb -n 'test_the_truth?'\nRun options: -n test_the_truth\\? --seed 44215\n0 tests, 0 assertions, 0 failures, 0 errors, 0 skips\n\n# works fine with just ruby\nruby test/unit/car_test.rb -n 'test_the_truth?'\nRun options: -n test_the_truth?\n1 tests, 1 assertions, 0 failures, 0 errors, 0 skips\n```\n. aehm ... so you'll just leave a bug that breaks every require of zeus ... ?\n. can you elaborate why you think the current state is better ?\n. Got past this error, next problem:\nour app does not require the default group by default (yes I know it's\nsilly :D )\nany reason not to load config/application.rb ?\n\nOn Tue, Aug 7, 2012 at 10:34 PM, Burke Libbey notifications@github.comwrote:\n\n> I literally have no inkling of an idea what could cause that issue, but I\n> was able to solve it by pulling AcceptorErrorState into a different file,\n> which I was thinking about doing anyway.\n> \n> 0.3.1 should now work with pow.\n> \n> I believe what will happen now is that zeus will start up one or more\n> 'error-state' acceptors. When you connect to these (eg. zeus console),\n> they'll print the error they failed with. This should be much more helpful\n> than a LoadError. Zeus currently makes some pretty specific assumptions\n> about your unit testing setup, in particular (we use an ancient version of\n> Test::Unit at my workplace). I hope to improve/add support for other\n> testing frameworks over the coming weeks.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/21#issuecomment-7575426.\n. hmm having a .zeus.rb is nice for monkey-hacks, but having everything\ncommented out / only overwrite the things I need\ncould make it easier to maintain / possibly reduce strange issue reports of\npeople with an outdated .zeus.rb\n\nstating that this needs some crazy gc patches is really scary to most\npeople i've shown this to,\nbut aparently it works just fine without, maybe you can change this to \"xyz\nis better if you have crazy gc patches enabled\"\n\nOn Wed, Aug 8, 2012 at 8:11 AM, Burke Libbey notifications@github.comwrote:\n\n>  any reason not to load config/application.rb ?\n> \n> I'm kind of taking a bet that gems won't change very often, and that\n> nearly-everyone includes the default bundle, so I require it before\n> application. If this is not true for you, you can run zeus init in your\n> project and edit the config file generated at .zeus.rb to remove the call\n> the Bundler.require(:default).\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/21#issuecomment-7586589.\n. Sounds good, I circumvented the issue by killing everything but testrb wich\nis my 98% usecase :)\n\n``` Ruby\nZeus::Server.define! do\n  stage :testrb do\n    action do\n      ENV['RAILS_ENV'] = 'test'\n      require File.expand_path(\"config/environment\")\n      require File.expand_path(\"test/helpers/test_helper\")\n    end\n\n    command :testrb do\n      ActiveRecord::Base.clear_all_connections!\n      (r = Test::Unit::AutoRunner.new(true)).process_args(ARGV) or\n        abort r.options.banner + \" tests...\"\n      exit r.run\n    end\n  end\nend\n```\n\nOn Wed, Aug 8, 2012 at 9:34 AM, Burke Libbey notifications@github.comwrote:\n\n> @grosser https://github.com/grosser: Totally agree on the config file.\n> This is still really new code, but a friend and I are cooking up an idea\n> for something better and more maintainable. Everything else just needs a\n> little more time to solidify before I'm ready to commit to a replacement.\n> \n> As for the GC patch stuff, I should re-word the README to indicate it's\n> not actually a hard requirement, but it is a pretty strong one. Without the\n> GC patches, zeus will use about 10 times as much memory as booting rails\n> normally, which is completely obscene.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/21#issuecomment-7589270.\n. simply not doing watchin on linux might be a nice solution for now (+ updating the readme to say \"only watches for changes if you are on osx\")\n. travis bot does not seem to be running the right tests... fails locally...\n. Damn travis does not work, the build script (rake) always returns 0...\nhttp://travis-ci.org/#!/burke/zeus/jobs/2115024\n\nThese tests only work on machines where the current home is /Users/mgrosser/ :D\n. maybe make it `not_on_travis do ... it \"bla\" ... end`\n. travis is still lying btw :)\n. Yeah :D\n. Interestingly the LOAD_PATH does not contain zeus, and a require 'zeus/server/command_runner' also does not help\n\nthe file is required by a different process then the process that tries to run the line\n\nputting the require ontop of the file solves it\n. Just put `require 'zeus/server/command_runner'` into our .zeus.rb, solves it for now...\n. nope pure 0.4.5 from rubygems\n. constant :)\n\ncurrent solution:\n\n``` Ruby\nZeus::Server::FileMonitor::FSEvent.class_eval do\n  def handle_changed_files\n  end\nend\n```\n. https://github.com/burke/zeus/blob/master/rubygem/lib/zeus/plan.rb\n. :+1: @burke is this easy to fix ?\n. Thanks, please release to rubygems, I want it to work out of the box :)\n\nOn Thu, Oct 24, 2013 at 8:42 PM, Burke Libbey notifications@github.comwrote:\n\n> Looks good, thanks!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/pull/416#issuecomment-27057434\n> .\n. Maybe document / automate the install in case someone else want's to do it\n/ you forget how to do it :)\n\nOn Thu, Oct 24, 2013 at 9:21 PM, Burke Libbey notifications@github.comwrote:\n\n> I'll try to get it built tomorrow. I don't have the whole build toolchain\n> installed anymore.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/pull/416#issuecomment-27060330\n> .\n. seems to not be working, zeus start boots up normally but then zeus testrb just hangs\n. @burke \n. fyi @arturopie who wrote the initial support\n. on 0.15.1\n\n```\n# shows existing names\nzeus test test/unit/car_test.rb -n '/the truth\\?/'\nNo test name matches '/the\\ truth\\\\\\?/'. Valid tests to run:\ntest_the_truth\\?: zeus test test/unit/car_test.rb:\n\n# double escapes '?'\nzeus test test/unit/car_test.rb -n '/the_truth\\?/'\nRun options: -n /the_truth\\\\\\?/ --seed 20494\n0 tests, 0 assertions, 0 failures, 0 errors, 0 skips\n\n# incorrectly escapes '?'\nzeus test test/unit/car_test.rb -n '/the_trut?/'\nRun options: -n /the_trut\\?/ --seed 7250\n0 tests, 0 assertions, 0 failures, 0 errors, 0 skips\n\n# works when by accident escpaed regexp also matches\nzeus test test/unit/car_test.rb -n '/the_truth?/'\nRun options: -n /the_truth\\?/ --seed 15090\n1 tests, 1 assertions, 0 failures, 0 errors, 0 skips\n\n# works fine with just ruby\nruby test/unit/car_test.rb -n '/the_truth\\?/'\nRun options: -n /the_truth\\?/\n1 tests, 1 assertions, 0 failures, 0 errors, 0 skips\n\n# does not work with name\nzeus test test/unit/car_test.rb -n 'test_the_truth?'\nRun options: -n test_the_truth\\? --seed 44215\n0 tests, 0 assertions, 0 failures, 0 errors, 0 skips\n\n# works fine with just ruby\nruby test/unit/car_test.rb -n 'test_the_truth?'\nRun options: -n test_the_truth?\n1 tests, 1 assertions, 0 failures, 0 errors, 0 skips\n```\n. aehm ... so you'll just leave a bug that breaks every require of zeus ... ?\n. can you elaborate why you think the current state is better ?\n. ",
    "morganchristiansson": "Perhaps another slave could be added for running rake in test environment?\n. I think this should be an error and not a warning since it will be running the command in the wrong rails environment, also it might be missing parameters. Trying to run it anyway is not the right thing to do.\n. +1\n\nThis is a common source of manual restarts for me.\n. This is fixed in 0.13.3.rc1 per pull request above that's been merged.\n. Can you please push a new release to rubygems.org so we can gem this improvement using gem install?\n. Perhaps another slave could be added for running rake in test environment?\n. I think this should be an error and not a warning since it will be running the command in the wrong rails environment, also it might be missing parameters. Trying to run it anyway is not the right thing to do.\n. +1\n\nThis is a common source of manual restarts for me.\n. This is fixed in 0.13.3.rc1 per pull request above that's been merged.\n. Can you please push a new release to rubygems.org so we can gem this improvement using gem install?\n. ",
    "turadg": "@morganchristiansson agreed. if the ENVs don't match, it should abort instead of just warn.\n. Until a contrib repo is set up, please contribute plans here: https://github.com/burke/zeus/wiki/Contributed-Plans\n\n(I added the Spinach above already)\n. Is this still a problem in 0.13.2? redis_reconnect now fails silently: 4009bf3c917ce35a2881ba33c78c6819617d430d\n. @ao140505 can you document the work-around on the wiki?\n\nI'd like to leave this open until there's a clear work-around in the docs.\n. Excellent!\n. @freewizard try `master` which has #216 \n. I don't know whether this works or not, but I'm sure `bundle exec` can be remove. Zeus is already running in the bundle env. Prefixing that just repeats that work and costs you time.\n. In summary:\n_With `rspec/autorun`_\ndirectories run once\nfiles run twice\nrunning lines in tests works\n\n_Without `rspec/autorun`_\ndirectories never run (0 tests)\nfiles run once (correctly)\nrunning lines in tests doesn't work (not found, perhaps because 0 tests on the directory?)\n\n(zeus master, rspec 2.12.0)\n\nfwiw, when rspec runs twice, the second time my specs are failing due to database leftovers.\n\n@burke any ideas on how to fix all this?\n. I believe it is fixed in `0.13.2`. Updating my comment earlier:\n\n_Without rspec/autorun_\ndirectories run correctly (e.g. `zeus rspec spec`)\nfiles run correctly (e.g. `zeus rspec spec/models/user_spec.rb`)\nlocations in tests run correctly (e.g. `zeus rspec spec/models/user_spec.rb:23`)\n\n(`zeus 0.13.2`, `rspec 2.12.1`)\n. Btw, `master` is behind `0.13.2` at the moment: #236 \n. @antifuchs this is kind of off topic, but I'm curious: how did Stripe choose between using Zeus and Spring? Do you think one will become dominant eventually or are there different niches that one serves that the other wouldn't?\n. Fixing #198 would be a good start. That would fix [the problem with guard-rspec](https://github.com/guard/guard-rspec/issues/134).\n. Sorry for the duplicate issues. I filed this then realized the fix was easy and submitted pull request #193.\n. @burke do you want any help maintaining this gem? The released gem is currently broken for `zeus console`. A second patch attempt has been submitted: #216 \n\n`zeus test spec` is also failing for current gem release.\n\nAny volunteers to write specs so these don't break on the future? :)\n. @bbozo thanks for the stopgap!\n\nalso :heart:  this project. `rake routes` is actually usable now and I'm happy to ditch the complications of Spork for testing.\n. I should have checked the gem version before I posted because [0.13.2](http://rubygems.org/gems/zeus/versions/0.13.2) was just pushed and incorporates this.\n. :+1:\n\nProblem persists in `zeus 0.13.2` and [makes Guard report successful tests as failing](https://github.com/guard/guard-rspec/issues/134) (as @aaronjensen points out above.)\n. This was fixed by @antifuchs in #272 and is part of the `0.13.3.rc2` release.\n. @rmoriz zeus `0.13.2.\n. thanks\n. Excellent, thanks.\n. @mocoso thanks. There's still the spec problem in #220, but maybe Travis being configured will motivate the fix.\n. Thanks for the note.\n. Yep, that's a bug. I don't know what it'll take to fix.\n. Can someone having this problem confirm that @airpollak's [patch](https://github.com/aripollak/zeus/commit/patch-1) fixes it? I'd like to merge but I don't use Test/Unit and the Zeus specs are broken.\n. I can merge this but I don't use Redis and don't know whether this is an improvement. Can other Redis users weigh in?\n\nIs this still necessary since 4009bf3c917ce35a2881ba33c78c6819617d430d ?\n. Since this isn't specific to Zeus, I'm going to close the issue. You're welcome to keep discussing here, but you might have better luck looking over discussions and docs for Spork.\n. If you were to use /tmp, you'd have to make the filename somehow unique to the path of the Zeus folder. Otherwise multiple Zeuses could conflict.\n. What version? I'm running `zeus 0.13.2` and `/newrelic` shows New Relic developer mode.\n. What rails? I'm on `3.2.11`.\n. Closing as can't reproduce. \n. I think this is the same issue as in #242. I describe a work-around there. Let me know here if that work-around doesn't solve the OP.\n. Thanks for raising this issue. @burke just merged 90907f7df6c97820ea2b2e8995a8839fd253edfc\n. Sounds like this is fixed by removing an old `zeus.json`, so I'll close this.\n. Is everyone still having this problem with [v0.13.3.rc2](https://rubygems.org/gems/zeus/versions/0.13.3.rc2) (try `gem install zeus -v 0.13.3.rc2 --pre`).\n. Thanks for the correction; I just revised my comment above.\n\nFor debugging, unfortunately Zeus doesn't yet log any output or indicate why it hangs or crashes.\n\nCan you describe a minimal test case that I could try to replicate locally?\n. @jeffremer Maybe better to start from minimal and build up? Does Zeus work for you on a fresh app?\n\nFor debugging, you could start with `zeus.rb` and put a puts at the entry of each method to trace the execution.\n. Can't hurt! ;)\n. @Govinda-Fichtner, no negative side-effects. See #180. \n. This is because Zeus tries to handle both Metal (Test:Unit) and Rspec in the same command method (`Zeus::Rails.text`):\n\n``` rb\n    def test\n      if spec_file?(ARGV) && defined?(RSpec)\n        RSpec::Core::Runner.disable_autorun!\n        exit RSpec::Core::Runner.run(ARGV)\n      else\n        Zeus::M.run(ARGV)\n      end\n    end\n```\n\nIt switches based on parsing the ARGV to detect an Rspec file, but that's not reliable. I may split that into a separate `rspec` command but I want check first with @burke to understand why the earlier `rspec` command was deprecated.\n\nIn the meantime, you can set up a pure Rspec command in your custom plan:\n\n``` rb\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n\n    def rspec\n      RSpec::Core::Runner.disable_autorun!\n      exit RSpec::Core::Runner.run(ARGV)\n    end\nend\n\nZeus.plan = CustomPlan.new\n```\n\nThen this in your `zeus.json`:\n\n``` javascript\n          \"test_helper\": {\"test\": [\"testrb\"], \"spec\": []}\n```\n\nThen in the shell you can run:\n\n``` sh\nzeus spec ANYTHING-YOUD-PASS-RSPEC\n```\n. Can you elaborate? The issue reporting template in https://github.com/burke/zeus/blob/master/contributing.md may help.\n. Thanks for the update. I'll call this closed.\n. You can with custom plans. See https://github.com/burke/zeus/blob/master/docs/ruby/modifying.md\n\nIf you write a new plan, please share it on https://github.com/burke/zeus/wiki/Contributed-Plans\n. @andyl, that's right, and why I'm hoping @burke can take a look into it.\nFew Ruby devs know Go.\n\nThat fact is one reason [Spring](https://github.com/jonleighton/spring) may\nbe a better long-term solution.\n\nOn Sat, Feb 16, 2013 at 5:55 PM, andyl notifications@github.com wrote:\n\n> Seems like the exit-status is generated by 'zeus/build/zeus-linux-386',\n> which is a binary file (a go executable?). So I don't think its possible to\n> fix this problem in the field. (without getting hands-on with go...)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/252#issuecomment-13678449.\n. For the record, @jonleightonfixed fixed that 5 days after you reported it in the Spring repo.\n. @antifuchs looks like you've succeeded at fixing this!\n\nIt's exiting correctly for me now, and I didn't even have to `require 'set'`. I want to release a `0.13.3.rc2` but for some reason whenever I change the VERSION, the resulting gem produces a broken Zeus (crashes on start). I haven't been able to figure it out. Any ideas?\n. @antifuchs, good idea to run from `build/`. The problem is before the Gem making. I'm trying to isolate it:\n\n```\ncd $GOPATH/src/github.com/burke/\nrm -rf zeus\ngit clone git@github.com:burke/zeus.git\ncd zeus\nmake darwin manpages\n\ncd somerailsproject\n$GOPATH/src/github.com/burke/zeus/build/zeus-darwin-amd64 init\n$GOPATH/src/github.com/burke/zeus/build/zeus-darwin-amd64 start\n```\n\nThat starts Zeus but the bottom of the terminal briefly says \"exit status 1\" in white. Then it refreshes, to clear that but all forks stay yellow (waiting) except for boot which stays magenta (connecting).\n\nThat's with ruby 1.9.3p374 (via rbenv) and same go1.0.3. Xcode 4.6 with latest command line tools. At least now the problem appears whether I'm changing the VERSION or not, which was weird.\n\nI'd like to get this the new gem into people's hands. If you build a 0.13.3.rc2 and send it to me, I'll push it. Or maybe @burke will build and push it, or grant you access to push.\n. Looks innocuous enough. Thanks!\n. @techthumb thanks. Any chance you could write a spec to accompany this? This one seems at risk for unknown side-effects.\n. Nope, they don't pass for me either. Can you write a separate test? We\ndon't need the whole suite to pass.\n\nOn Fri, Feb 15, 2013 at 8:45 PM, Kunal Parikh notifications@github.comwrote:\n\n> I did have a go at writing tests before submitting the PR, but tests were\n> already failing.\n> \n> Failures:\n> \n>   1) Zeus::M::Runner no option is given runs the test without giving any option\n>      Failure/Error: lambda { Runner.new(argv).run }.should exit_with_code(0)\n>        expected block to call exit(0) but exit not called\n>      # ./spec/m_spec.rb:17:in `block (3 levels) in <top (required)>'\n> \n>   2) Zeus::M::Runner given a line number runs the test if the correct line number is given\n>      Failure/Error: lambda { Runner.new(argv).run }.should exit_with_code(0)\n>        expected block to call exit(0) but exit not called\n>      # ./spec/m_spec.rb:36:in `block (3 levels) in <top (required)>'\n> \n>   3) Zeus::M::Runner specifying test name runs the specified tests when using a pattern in --name option\n>      Failure/Error: lambda { Runner.new(argv).run }.should exit_with_code(0)\n>        expected block to call exit(0) but exit not called\n>      # ./spec/m_spec.rb:46:in `block (3 levels) in <top (required)>'\n> \n>   4) Zeus::M::Runner specifying test name runs the specified tests when using a pattern in -n option\n>      Failure/Error: lambda { Runner.new(argv).run }.should exit_with_code(0)\n>        expected block to call exit(0) but exit not called\n>      # ./spec/m_spec.rb:54:in `block (3 levels) in <top (required)>'\n> \n>   5) Zeus::M::Runner specifying test name runs the specified tests when using a name (no pattern)\n>      Failure/Error: lambda { Runner.new(argv).run }.should exit_with_code(0)\n>        expected block to call exit(0) but exit not called\n>      # ./spec/m_spec.rb:71:in `block (3 levels) in <top (required)>'\n> \n> Do these pass for you?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/pull/257#issuecomment-13642204.\n. @antifuchs Thanks! I'm grateful that someone is working on the Go code. :)\n. Good debugging, thanks!\n. Thanks!\n. @beilabs do you mean that this problem is due to a bug in Ruby's Minitest?\n. Thanks!\n. Does version 0.13.3 help?\n. You say \"possible\". Does it work or not?\n\nIt does appear that this would make the command always return a 0 exit code, which could make other tools in the chain think that Cucumber passed when it didn't.\n. What does `execute!` return if Cucumber failed?\n. The exit code has to be >0 when the tests fail. `exit true` produces the exit code 0.\n\nThanks for debugging this. I just made a tighter fix in cba9008386a8f1d22ea0a5067cefa39cb3ed4f40.\n. @antifuchs I just tested this locally (unfortunately after merging the request) and `zeus start` doesn't work for me anymore. It puts all commands into the [crash] state and says to see their backtraces, but each command runs fine without Zeus.\n\nDoes the current master branch work for you?\n. I'll have to check later on my laptop, but building now on my desktop it all worked flawlessly. I just released [0.13.3.rc2](https://github.com/burke/zeus/tree/v0.13.3.rc2).\n. `unicorn_rails` is a shell script. Your use of the backticks around it tells Ruby to spawn a separate system process that runs that script, so it's off on its own when you're hitting Ctrl-C.\n\nTo run Unicorn in the same Ruby process, look at the contents of the script to see what Ruby it runs.\n\nBut my best advice is to not bother running Zeus for your server. How often do you start a server? It reloads classes automatically while you're developing. Also, if you're using Heroku you're best off running your server through `foreman` locally, to match the dyno setup.\n\nI'll close this since it isn't a Zeus issue, but feel free to follow up in case anyone else has more help to give.\n. @antifuchs I'm trying to reproduce this but failing. Should the following sequence cause a problem?\n1. In term1 `zeus start`\n2. In term2 `zeus console`\n3. In term2 `reload!`\n4. In term2 `^D`\n5. Repeat steps 2-4\n\n(btw I updated the issue text to clarify the PID and fix the list markup)\n. Another great patch. Would you be up for joining the AUTHORs on the gem? These are some critical fixes. (It's not my place to decide, but first asking if you're willing.)\n. LGTM, thanks!\n. I believe not, for the same reason.\n\nFor other things being considered, a roadmap is in the wiki: https://github.com/burke/zeus/wiki/Roadmap\n. @lastobelus `./lib` makes sense to include for Rails. I don't know a better way to make Zeus care about it than your #316 (just merged).\n. @morganchristiansson agreed. if the ENVs don't match, it should abort instead of just warn.\n. Until a contrib repo is set up, please contribute plans here: https://github.com/burke/zeus/wiki/Contributed-Plans\n\n(I added the Spinach above already)\n. Is this still a problem in 0.13.2? redis_reconnect now fails silently: 4009bf3c917ce35a2881ba33c78c6819617d430d\n. @ao140505 can you document the work-around on the wiki?\n\nI'd like to leave this open until there's a clear work-around in the docs.\n. Excellent!\n. @freewizard try `master` which has #216 \n. I don't know whether this works or not, but I'm sure `bundle exec` can be remove. Zeus is already running in the bundle env. Prefixing that just repeats that work and costs you time.\n. In summary:\n_With `rspec/autorun`_\ndirectories run once\nfiles run twice\nrunning lines in tests works\n\n_Without `rspec/autorun`_\ndirectories never run (0 tests)\nfiles run once (correctly)\nrunning lines in tests doesn't work (not found, perhaps because 0 tests on the directory?)\n\n(zeus master, rspec 2.12.0)\n\nfwiw, when rspec runs twice, the second time my specs are failing due to database leftovers.\n\n@burke any ideas on how to fix all this?\n. I believe it is fixed in `0.13.2`. Updating my comment earlier:\n\n_Without rspec/autorun_\ndirectories run correctly (e.g. `zeus rspec spec`)\nfiles run correctly (e.g. `zeus rspec spec/models/user_spec.rb`)\nlocations in tests run correctly (e.g. `zeus rspec spec/models/user_spec.rb:23`)\n\n(`zeus 0.13.2`, `rspec 2.12.1`)\n. Btw, `master` is behind `0.13.2` at the moment: #236 \n. @antifuchs this is kind of off topic, but I'm curious: how did Stripe choose between using Zeus and Spring? Do you think one will become dominant eventually or are there different niches that one serves that the other wouldn't?\n. Fixing #198 would be a good start. That would fix [the problem with guard-rspec](https://github.com/guard/guard-rspec/issues/134).\n. Sorry for the duplicate issues. I filed this then realized the fix was easy and submitted pull request #193.\n. @burke do you want any help maintaining this gem? The released gem is currently broken for `zeus console`. A second patch attempt has been submitted: #216 \n\n`zeus test spec` is also failing for current gem release.\n\nAny volunteers to write specs so these don't break on the future? :)\n. @bbozo thanks for the stopgap!\n\nalso :heart:  this project. `rake routes` is actually usable now and I'm happy to ditch the complications of Spork for testing.\n. I should have checked the gem version before I posted because [0.13.2](http://rubygems.org/gems/zeus/versions/0.13.2) was just pushed and incorporates this.\n. :+1:\n\nProblem persists in `zeus 0.13.2` and [makes Guard report successful tests as failing](https://github.com/guard/guard-rspec/issues/134) (as @aaronjensen points out above.)\n. This was fixed by @antifuchs in #272 and is part of the `0.13.3.rc2` release.\n. @rmoriz zeus `0.13.2.\n. thanks\n. Excellent, thanks.\n. @mocoso thanks. There's still the spec problem in #220, but maybe Travis being configured will motivate the fix.\n. Thanks for the note.\n. Yep, that's a bug. I don't know what it'll take to fix.\n. Can someone having this problem confirm that @airpollak's [patch](https://github.com/aripollak/zeus/commit/patch-1) fixes it? I'd like to merge but I don't use Test/Unit and the Zeus specs are broken.\n. I can merge this but I don't use Redis and don't know whether this is an improvement. Can other Redis users weigh in?\n\nIs this still necessary since 4009bf3c917ce35a2881ba33c78c6819617d430d ?\n. Since this isn't specific to Zeus, I'm going to close the issue. You're welcome to keep discussing here, but you might have better luck looking over discussions and docs for Spork.\n. If you were to use /tmp, you'd have to make the filename somehow unique to the path of the Zeus folder. Otherwise multiple Zeuses could conflict.\n. What version? I'm running `zeus 0.13.2` and `/newrelic` shows New Relic developer mode.\n. What rails? I'm on `3.2.11`.\n. Closing as can't reproduce. \n. I think this is the same issue as in #242. I describe a work-around there. Let me know here if that work-around doesn't solve the OP.\n. Thanks for raising this issue. @burke just merged 90907f7df6c97820ea2b2e8995a8839fd253edfc\n. Sounds like this is fixed by removing an old `zeus.json`, so I'll close this.\n. Is everyone still having this problem with [v0.13.3.rc2](https://rubygems.org/gems/zeus/versions/0.13.3.rc2) (try `gem install zeus -v 0.13.3.rc2 --pre`).\n. Thanks for the correction; I just revised my comment above.\n\nFor debugging, unfortunately Zeus doesn't yet log any output or indicate why it hangs or crashes.\n\nCan you describe a minimal test case that I could try to replicate locally?\n. @jeffremer Maybe better to start from minimal and build up? Does Zeus work for you on a fresh app?\n\nFor debugging, you could start with `zeus.rb` and put a puts at the entry of each method to trace the execution.\n. Can't hurt! ;)\n. @Govinda-Fichtner, no negative side-effects. See #180. \n. This is because Zeus tries to handle both Metal (Test:Unit) and Rspec in the same command method (`Zeus::Rails.text`):\n\n``` rb\n    def test\n      if spec_file?(ARGV) && defined?(RSpec)\n        RSpec::Core::Runner.disable_autorun!\n        exit RSpec::Core::Runner.run(ARGV)\n      else\n        Zeus::M.run(ARGV)\n      end\n    end\n```\n\nIt switches based on parsing the ARGV to detect an Rspec file, but that's not reliable. I may split that into a separate `rspec` command but I want check first with @burke to understand why the earlier `rspec` command was deprecated.\n\nIn the meantime, you can set up a pure Rspec command in your custom plan:\n\n``` rb\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n\n    def rspec\n      RSpec::Core::Runner.disable_autorun!\n      exit RSpec::Core::Runner.run(ARGV)\n    end\nend\n\nZeus.plan = CustomPlan.new\n```\n\nThen this in your `zeus.json`:\n\n``` javascript\n          \"test_helper\": {\"test\": [\"testrb\"], \"spec\": []}\n```\n\nThen in the shell you can run:\n\n``` sh\nzeus spec ANYTHING-YOUD-PASS-RSPEC\n```\n. Can you elaborate? The issue reporting template in https://github.com/burke/zeus/blob/master/contributing.md may help.\n. Thanks for the update. I'll call this closed.\n. You can with custom plans. See https://github.com/burke/zeus/blob/master/docs/ruby/modifying.md\n\nIf you write a new plan, please share it on https://github.com/burke/zeus/wiki/Contributed-Plans\n. @andyl, that's right, and why I'm hoping @burke can take a look into it.\nFew Ruby devs know Go.\n\nThat fact is one reason [Spring](https://github.com/jonleighton/spring) may\nbe a better long-term solution.\n\nOn Sat, Feb 16, 2013 at 5:55 PM, andyl notifications@github.com wrote:\n\n> Seems like the exit-status is generated by 'zeus/build/zeus-linux-386',\n> which is a binary file (a go executable?). So I don't think its possible to\n> fix this problem in the field. (without getting hands-on with go...)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/252#issuecomment-13678449.\n. For the record, @jonleightonfixed fixed that 5 days after you reported it in the Spring repo.\n. @antifuchs looks like you've succeeded at fixing this!\n\nIt's exiting correctly for me now, and I didn't even have to `require 'set'`. I want to release a `0.13.3.rc2` but for some reason whenever I change the VERSION, the resulting gem produces a broken Zeus (crashes on start). I haven't been able to figure it out. Any ideas?\n. @antifuchs, good idea to run from `build/`. The problem is before the Gem making. I'm trying to isolate it:\n\n```\ncd $GOPATH/src/github.com/burke/\nrm -rf zeus\ngit clone git@github.com:burke/zeus.git\ncd zeus\nmake darwin manpages\n\ncd somerailsproject\n$GOPATH/src/github.com/burke/zeus/build/zeus-darwin-amd64 init\n$GOPATH/src/github.com/burke/zeus/build/zeus-darwin-amd64 start\n```\n\nThat starts Zeus but the bottom of the terminal briefly says \"exit status 1\" in white. Then it refreshes, to clear that but all forks stay yellow (waiting) except for boot which stays magenta (connecting).\n\nThat's with ruby 1.9.3p374 (via rbenv) and same go1.0.3. Xcode 4.6 with latest command line tools. At least now the problem appears whether I'm changing the VERSION or not, which was weird.\n\nI'd like to get this the new gem into people's hands. If you build a 0.13.3.rc2 and send it to me, I'll push it. Or maybe @burke will build and push it, or grant you access to push.\n. Looks innocuous enough. Thanks!\n. @techthumb thanks. Any chance you could write a spec to accompany this? This one seems at risk for unknown side-effects.\n. Nope, they don't pass for me either. Can you write a separate test? We\ndon't need the whole suite to pass.\n\nOn Fri, Feb 15, 2013 at 8:45 PM, Kunal Parikh notifications@github.comwrote:\n\n> I did have a go at writing tests before submitting the PR, but tests were\n> already failing.\n> \n> Failures:\n> \n>   1) Zeus::M::Runner no option is given runs the test without giving any option\n>      Failure/Error: lambda { Runner.new(argv).run }.should exit_with_code(0)\n>        expected block to call exit(0) but exit not called\n>      # ./spec/m_spec.rb:17:in `block (3 levels) in <top (required)>'\n> \n>   2) Zeus::M::Runner given a line number runs the test if the correct line number is given\n>      Failure/Error: lambda { Runner.new(argv).run }.should exit_with_code(0)\n>        expected block to call exit(0) but exit not called\n>      # ./spec/m_spec.rb:36:in `block (3 levels) in <top (required)>'\n> \n>   3) Zeus::M::Runner specifying test name runs the specified tests when using a pattern in --name option\n>      Failure/Error: lambda { Runner.new(argv).run }.should exit_with_code(0)\n>        expected block to call exit(0) but exit not called\n>      # ./spec/m_spec.rb:46:in `block (3 levels) in <top (required)>'\n> \n>   4) Zeus::M::Runner specifying test name runs the specified tests when using a pattern in -n option\n>      Failure/Error: lambda { Runner.new(argv).run }.should exit_with_code(0)\n>        expected block to call exit(0) but exit not called\n>      # ./spec/m_spec.rb:54:in `block (3 levels) in <top (required)>'\n> \n>   5) Zeus::M::Runner specifying test name runs the specified tests when using a name (no pattern)\n>      Failure/Error: lambda { Runner.new(argv).run }.should exit_with_code(0)\n>        expected block to call exit(0) but exit not called\n>      # ./spec/m_spec.rb:71:in `block (3 levels) in <top (required)>'\n> \n> Do these pass for you?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/pull/257#issuecomment-13642204.\n. @antifuchs Thanks! I'm grateful that someone is working on the Go code. :)\n. Good debugging, thanks!\n. Thanks!\n. @beilabs do you mean that this problem is due to a bug in Ruby's Minitest?\n. Thanks!\n. Does version 0.13.3 help?\n. You say \"possible\". Does it work or not?\n\nIt does appear that this would make the command always return a 0 exit code, which could make other tools in the chain think that Cucumber passed when it didn't.\n. What does `execute!` return if Cucumber failed?\n. The exit code has to be >0 when the tests fail. `exit true` produces the exit code 0.\n\nThanks for debugging this. I just made a tighter fix in cba9008386a8f1d22ea0a5067cefa39cb3ed4f40.\n. @antifuchs I just tested this locally (unfortunately after merging the request) and `zeus start` doesn't work for me anymore. It puts all commands into the [crash] state and says to see their backtraces, but each command runs fine without Zeus.\n\nDoes the current master branch work for you?\n. I'll have to check later on my laptop, but building now on my desktop it all worked flawlessly. I just released [0.13.3.rc2](https://github.com/burke/zeus/tree/v0.13.3.rc2).\n. `unicorn_rails` is a shell script. Your use of the backticks around it tells Ruby to spawn a separate system process that runs that script, so it's off on its own when you're hitting Ctrl-C.\n\nTo run Unicorn in the same Ruby process, look at the contents of the script to see what Ruby it runs.\n\nBut my best advice is to not bother running Zeus for your server. How often do you start a server? It reloads classes automatically while you're developing. Also, if you're using Heroku you're best off running your server through `foreman` locally, to match the dyno setup.\n\nI'll close this since it isn't a Zeus issue, but feel free to follow up in case anyone else has more help to give.\n. @antifuchs I'm trying to reproduce this but failing. Should the following sequence cause a problem?\n1. In term1 `zeus start`\n2. In term2 `zeus console`\n3. In term2 `reload!`\n4. In term2 `^D`\n5. Repeat steps 2-4\n\n(btw I updated the issue text to clarify the PID and fix the list markup)\n. Another great patch. Would you be up for joining the AUTHORs on the gem? These are some critical fixes. (It's not my place to decide, but first asking if you're willing.)\n. LGTM, thanks!\n. I believe not, for the same reason.\n\nFor other things being considered, a roadmap is in the wiki: https://github.com/burke/zeus/wiki/Roadmap\n. @lastobelus `./lib` makes sense to include for Rails. I don't know a better way to make Zeus care about it than your #316 (just merged).\n. ",
    "focused": "It really tries to drop development database as described above.\n. You declared only test task, what about other tasks like `zeus g` or `zeus rake` or `zeus parallel_rspec`? They throw an exception `cannot load such file -- /Users/dmitrynovikov/Gems/eon-sketch/config/application (LoadError)`. How can I patch the file **rails_engine_plan.rb** to make them work?\n. Thank you, I put file's contents into rails_engine_plan.rb and it works. Your improvements should be merged to zeus.\n. I'm running zeus in Ruby 2.0.0 without problems too. Just run `zeus rake` and it will show you where you have errors. I believe it's not the zeus issue.\n. It really tries to drop development database as described above.\n. You declared only test task, what about other tasks like `zeus g` or `zeus rake` or `zeus parallel_rspec`? They throw an exception `cannot load such file -- /Users/dmitrynovikov/Gems/eon-sketch/config/application (LoadError)`. How can I patch the file **rails_engine_plan.rb** to make them work?\n. Thank you, I put file's contents into rails_engine_plan.rb and it works. Your improvements should be merged to zeus.\n. I'm running zeus in Ruby 2.0.0 without problems too. Just run `zeus rake` and it will show you where you have errors. I believe it's not the zeus issue.\n. ",
    "ssoroka": "discovered this only happens when I add the debugger statement after starting zeus.  if I start zeus after adding the debugger line, it works.\n. discovered this only happens when I add the debugger statement after starting zeus.  if I start zeus after adding the debugger line, it works.\n. ",
    "aiwilliams": "I've got a case where I have a module which utilizes `extend ActiveSupport::Concern`, and even though zeus reports dependency change on the file, it isn't actually getting the changes. Specifically, I changed the name of a method. Then I tried changing the implementation. Same issue - the change does not cause the spec to fail. Once I restart zeus, I get the `NoMethodError`.\n. Well, if I may take the opportunity in this thread, I must express my joy at having had @duff point me at zeus today. The performance is absolutely incredible compared to everything I've tried. Thank you.\n. Hey @burke, thanks for the hard work. I regret to report that it's still not working for me. In fact, it no longer reports a dependency change when I modify the files in app/models.\n. I tried this:\n\n``` bash\n~/github/burke/zeus master -> ./ext/fsevents-wrapper/fsevents-wrapper /Users/aiwilliams/github/aiwilliams/tilde/setup.sh\n```\n\nThat started and blocked the shell. In another shell, I tried:\n\n``` bash\ncd /Users/aiwilliams/github/aiwilliams && touch setup.sh\n```\n\nNothing appeared as output from the wrapper script. Then I tried `vim setup.sh`, made a change, and `:w`. Still nothing.\n\nI am on Mountain Lion, yes.\n. @burke Perhaps I did this wrong. I just followed the steps more carefully:\n\n``` bash\n~/github/burke/zeus master -> ./ext/fsevents-wrapper/fsevents-wrapper\n```\n\nThen when that blocked, pasted in:\n\n``` bash\n/Users/aiwilliams/github/aiwilliams/tilde/setup.sh\n```\n\nNow when I touch or change setup.sh, it outputs the full path to that file!\n. Oh, boy. That exercise had me go back and try my code, and now it's detecting the dependency change, though I still cannot get it to raise `NoMethodError` by changing a method name. I also deleted the complete content of the file under test, the dependency change was detected, but the tests still pass. I'll stop bothering you tonight, and hopefully @duff can confirm tomorrow.\n. I am happy and thankful to report that my failure scenario has been resolved!! Thank you @burke!\n. Ready for another one? I am using factory_girl. The factories in spec/factories/*.rb do not get reloaded. Is there something I can do to resolve that one?\n. Oh, man, now factory reloading works, too! This is glorious. Thanks again @burke - you are officially my open source hero of the day. I cannot think of another pain so acutely felt that has been so effectively salved as the one of waiting for any part of the Rails tool chain when practicing TDD.\n. I've got an edge case on this, I think... I have some Grape endpoints that I am loading in the Rails routes file, using something like this:\n\n``` ruby\nmatch '*path', :to => GDApi::App, :constraints => {:subdomain => 'api'}\n```\n\nWhen I modify the `app/api/gd_api.rb` file, it is not triggering whatever is necessary to cause zeus to do it's magic. However, when I touch the `routes.rb` file, it does well.\n\nIs there something I can do to help zeus know that when files in `app/api/**/*` are modified, it should do what it does for `routes.rb`?\n. Yes! All is well for me on this issue. Thanks @duff !\n. Yes, I'll do my best to get to trying it in the morning!\n\nSent from my iPhone\n\nOn Sep 14, 2012, at 10:15 PM, Burke Libbey notifications@github.com wrote:\n\nCould you let me know if this still happens with 0.10.x? I'm doing a big\nsweep of ruby compatibility issues this weekend, and will hopefully have\ntime for VCR.\n\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/burke/zeus/issues/84#issuecomment-8581019.\n. @burke Okay, 0.10.2 works just fine. What an overhaul. Thanks man!\n. Count me in. Just updated to 0.11.1.\n. Zeus 0.11.1, Mac OS X 10.8.1, ruby 1.9.3p194 (2012-04-20 revision 35410) [x86_64-darwin11.4.2].\n\nWhen I run `zeus start`, then run my spec, it's fine. However, when I changed a file it crashed like this:\n\n``` bash\n$ zeus start\nStarting Zeus server\nready   : boot\nready   : default_bundle\nready   : development_environment\nready   : prerake\nready   : test_environment\nready   : cucumber_environment\nready   : test_helper\nDependency change at /Users/aiwilliams/github/project/event_management.rb\nkilled  : test_helper\ndied    : test_helper\nEOF\nWrong message type! Expected ActionResponseMessage, got: \nready   : test_helper\ndied    : test_helper\n```\n\nI didn't realize it had crashed until I tried to rerun `zeus rspec spec/event_management_spec.rb`, which did not return. `CTRL-C` would not bring this shell back, so I went to the zeus shell. `CTRL-C` was helpful there, leading to this back in the `zeus rspec` shell:\n\n``` bash\n$ zeus rspec spec/event_management_spec.rb \npanic: EOF\n\ngoroutine 1 [running]:\ngithub.com/burke/zeus/go/zeusclient.doRun(0x7261747300000001, 0x1000000000, 0x23ff, 0x7fff5fbff901)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusclient/zeusclient.go:81 +0x5dc\ngithub.com/burke/zeus/go/zeusclient.Run(0x7fff5fbff901, 0xf800000005)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusclient/zeusclient.go:25 +0x23\nmain.main()\n    /Users/burke/go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:46 +0x3ff\n\ngoroutine 2 [syscall]:\ncreated by runtime.main\n    /private/tmp/bindist454984655/go/src/pkg/runtime/proc.c:221\n\ngoroutine 3 [syscall]:\nos/signal.loop()\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:20 +0x1c\ncreated by os/signal.init\u00b71\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:26 +0x2f\n\ngoroutine 4 [syscall]:\nsyscall.Syscall6()\n    /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\nsyscall.kevent(0x9, 0x0, 0x0, 0xf84006a188, 0xa, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:199 +0x88\nsyscall.Kevent(0xf800000009, 0x0, 0x0, 0xf84006a188, 0xa0000000a, ...)\n    /usr/local/go/src/pkg/syscall/syscall_bsd.go:538 +0xa4\nnet.(*pollster).WaitFD(0xf84006a180, 0xf840088040, 0x0, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/net/fd_darwin.go:96 +0x185\nnet.(*pollServer).Run(0xf840088040, 0x0)\n    /usr/local/go/src/pkg/net/fd.go:236 +0xe4\ncreated by net.newPollServer\n    /usr/local/go/src/pkg/net/newpollserver.go:35 +0x382\n\ngoroutine 5 [finalizer wait]:\ncreated by runtime.gc\n    /private/tmp/bindist454984655/go/src/pkg/runtime/mgc0.c:882\n```\n. I've just tried 0.12.0 and the problem is gone for me.\n. I've got a case where I have a module which utilizes `extend ActiveSupport::Concern`, and even though zeus reports dependency change on the file, it isn't actually getting the changes. Specifically, I changed the name of a method. Then I tried changing the implementation. Same issue - the change does not cause the spec to fail. Once I restart zeus, I get the `NoMethodError`.\n. Well, if I may take the opportunity in this thread, I must express my joy at having had @duff point me at zeus today. The performance is absolutely incredible compared to everything I've tried. Thank you.\n. Hey @burke, thanks for the hard work. I regret to report that it's still not working for me. In fact, it no longer reports a dependency change when I modify the files in app/models.\n. I tried this:\n\n``` bash\n~/github/burke/zeus master -> ./ext/fsevents-wrapper/fsevents-wrapper /Users/aiwilliams/github/aiwilliams/tilde/setup.sh\n```\n\nThat started and blocked the shell. In another shell, I tried:\n\n``` bash\ncd /Users/aiwilliams/github/aiwilliams && touch setup.sh\n```\n\nNothing appeared as output from the wrapper script. Then I tried `vim setup.sh`, made a change, and `:w`. Still nothing.\n\nI am on Mountain Lion, yes.\n. @burke Perhaps I did this wrong. I just followed the steps more carefully:\n\n``` bash\n~/github/burke/zeus master -> ./ext/fsevents-wrapper/fsevents-wrapper\n```\n\nThen when that blocked, pasted in:\n\n``` bash\n/Users/aiwilliams/github/aiwilliams/tilde/setup.sh\n```\n\nNow when I touch or change setup.sh, it outputs the full path to that file!\n. Oh, boy. That exercise had me go back and try my code, and now it's detecting the dependency change, though I still cannot get it to raise `NoMethodError` by changing a method name. I also deleted the complete content of the file under test, the dependency change was detected, but the tests still pass. I'll stop bothering you tonight, and hopefully @duff can confirm tomorrow.\n. I am happy and thankful to report that my failure scenario has been resolved!! Thank you @burke!\n. Ready for another one? I am using factory_girl. The factories in spec/factories/*.rb do not get reloaded. Is there something I can do to resolve that one?\n. Oh, man, now factory reloading works, too! This is glorious. Thanks again @burke - you are officially my open source hero of the day. I cannot think of another pain so acutely felt that has been so effectively salved as the one of waiting for any part of the Rails tool chain when practicing TDD.\n. I've got an edge case on this, I think... I have some Grape endpoints that I am loading in the Rails routes file, using something like this:\n\n``` ruby\nmatch '*path', :to => GDApi::App, :constraints => {:subdomain => 'api'}\n```\n\nWhen I modify the `app/api/gd_api.rb` file, it is not triggering whatever is necessary to cause zeus to do it's magic. However, when I touch the `routes.rb` file, it does well.\n\nIs there something I can do to help zeus know that when files in `app/api/**/*` are modified, it should do what it does for `routes.rb`?\n. Yes! All is well for me on this issue. Thanks @duff !\n. Yes, I'll do my best to get to trying it in the morning!\n\nSent from my iPhone\n\nOn Sep 14, 2012, at 10:15 PM, Burke Libbey notifications@github.com wrote:\n\nCould you let me know if this still happens with 0.10.x? I'm doing a big\nsweep of ruby compatibility issues this weekend, and will hopefully have\ntime for VCR.\n\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/burke/zeus/issues/84#issuecomment-8581019.\n. @burke Okay, 0.10.2 works just fine. What an overhaul. Thanks man!\n. Count me in. Just updated to 0.11.1.\n. Zeus 0.11.1, Mac OS X 10.8.1, ruby 1.9.3p194 (2012-04-20 revision 35410) [x86_64-darwin11.4.2].\n\nWhen I run `zeus start`, then run my spec, it's fine. However, when I changed a file it crashed like this:\n\n``` bash\n$ zeus start\nStarting Zeus server\nready   : boot\nready   : default_bundle\nready   : development_environment\nready   : prerake\nready   : test_environment\nready   : cucumber_environment\nready   : test_helper\nDependency change at /Users/aiwilliams/github/project/event_management.rb\nkilled  : test_helper\ndied    : test_helper\nEOF\nWrong message type! Expected ActionResponseMessage, got: \nready   : test_helper\ndied    : test_helper\n```\n\nI didn't realize it had crashed until I tried to rerun `zeus rspec spec/event_management_spec.rb`, which did not return. `CTRL-C` would not bring this shell back, so I went to the zeus shell. `CTRL-C` was helpful there, leading to this back in the `zeus rspec` shell:\n\n``` bash\n$ zeus rspec spec/event_management_spec.rb \npanic: EOF\n\ngoroutine 1 [running]:\ngithub.com/burke/zeus/go/zeusclient.doRun(0x7261747300000001, 0x1000000000, 0x23ff, 0x7fff5fbff901)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusclient/zeusclient.go:81 +0x5dc\ngithub.com/burke/zeus/go/zeusclient.Run(0x7fff5fbff901, 0xf800000005)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusclient/zeusclient.go:25 +0x23\nmain.main()\n    /Users/burke/go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:46 +0x3ff\n\ngoroutine 2 [syscall]:\ncreated by runtime.main\n    /private/tmp/bindist454984655/go/src/pkg/runtime/proc.c:221\n\ngoroutine 3 [syscall]:\nos/signal.loop()\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:20 +0x1c\ncreated by os/signal.init\u00b71\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:26 +0x2f\n\ngoroutine 4 [syscall]:\nsyscall.Syscall6()\n    /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\nsyscall.kevent(0x9, 0x0, 0x0, 0xf84006a188, 0xa, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:199 +0x88\nsyscall.Kevent(0xf800000009, 0x0, 0x0, 0xf84006a188, 0xa0000000a, ...)\n    /usr/local/go/src/pkg/syscall/syscall_bsd.go:538 +0xa4\nnet.(*pollster).WaitFD(0xf84006a180, 0xf840088040, 0x0, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/net/fd_darwin.go:96 +0x185\nnet.(*pollServer).Run(0xf840088040, 0x0)\n    /usr/local/go/src/pkg/net/fd.go:236 +0xe4\ncreated by net.newPollServer\n    /usr/local/go/src/pkg/net/newpollserver.go:35 +0x382\n\ngoroutine 5 [finalizer wait]:\ncreated by runtime.gc\n    /private/tmp/bindist454984655/go/src/pkg/runtime/mgc0.c:882\n```\n. I've just tried 0.12.0 and the problem is gone for me.\n. ",
    "duff": "I've seen a few times this morning where things were behaving differently after zeus was restarted.  \n\nI've tried to use Spork for years and it seems to save a bunch of time when running things.  However, just a time or two when you don't realize the issue is that Spork needs to be restarted seems to give back all of the time savings.\n\nThe one thing I like about Spin is that it doesn't seem to ever have a reload issue.  The problem there though is that it takes a good deal longer to run each thing.\n\nZeus seems considerably faster than both Spork and Spin.  I wonder if there's a way to get these incredible gains without having to think about whether it needs to be restarted whenever a test fails or something doesn't behave as expected.\n. \"Class reloading is the Vietnam of Ruby\"\n- @ntalbott \n\nI'm in the hopeful camp. :)\n. Fascinating!  Thanks for sharing those details.  \n. NICE!  Can't wait to try it out tomorrow.  Your project has the potential to save developers SO MUCH TIME.  Thanks for all of your work on it!\n. Yay!  Everything's wonderful here as well.  I'm still surprised how FAST things are.\n. That's strange @ScotterC.  I'm using rspec on a project here and it seems to be picking up model, view, and controller changes wonderfully.  Do you have something up in the parent app/ directory?\n\nI did notice one little thing - it didn't seem to pick up a route change when running an rspec test (although `zeus rake routes` shows the change perfectly).\n. The routes issue I mentioned is fixed!  This project is a marvel.  Really - it's great work.\n. I saw this issue too.  When I updated to the latest pry-rails gem (0.2.1), zeus started using pry.  Happy pandas!\n. Sounds good to me.  Hopefully Adam will see the same thing.\n. We're using Riak in a few apps.  In Zeus 0.4.6, I could generate a .zeus.rb file and then replace the `require 'rails/all'` with the things we were using:\n\n```\n  require \"action_controller/railtie\"\n  require \"action_mailer/railtie\"\n  require \"active_resource/railtie\"\n  require \"rails/test_unit/railtie\"\n  require \"active_support/version\"\n```\n\nIn the latest Zeus (0.10.0), I'm not sure if using a .zeus.rb file is the recommended approach for this type of customization.  I see there's now a json file to customize some things.\n\nI'm not sure what the best way might be to allow folks writing Rails apps without _all_ of the rails stuff to customize the require list to exclude things like Active Record.  It is pretty handy to have a ruby .zeus.rb file to tweak things.  Still mulling on the options...\n. Yay!  Excited to try it out.  Thanks!\n. Works perfectly!  So nice that I'll now get updates as Zeus::Rails improves and that I only need to override part of it.\n\nIt is beautiful.\n. I'm not sure if I'm having the same issue or something different.  I'm using pry-rails as well.  I wonder if anyone is seeing the same thing I'm seeing or if I'm just having personal issues.  Here's what I see:\n\nhttps://img.skitch.com/20120914-e682jb4x9jh5mkhutu944b889k.jpg\n\nWhen I type at that cursor and hit enter, it seems to refresh and show me this:\n\nhttps://img.skitch.com/20120914-k8gqx3wi1u4xgbgeqj4w2pwj6q.jpg\n\nSeems like some type of readline issue?  I only seem to see the issue from zeus 0.10.0 and later.  The versions before that don't show the issue.\n. Wow.  Those skitch-captured images from the retina display are awe-inspiring in their magnitude.\n. Yup - on OS X using iTerm.  And ruby 1.9.3p125 (2012-02-16 revision 34643) [x86_64-darwin12.0.0] from rbenv.\n\nPsyched that you'll take a look and that it may not just be my personal issue.  It's certainly not a showstopper since I can just use the default rails console.  Thanks!\n. Nice!  This is good to hear.  And @burke's suspicion was correct!\n. Works wonderfully.  Sounds like the TTY readline stuff was less than pleasant!\n\nI'm amazed by the work you're doing on this gem @burke.  This thing is ridiculously helpful to Rails devs.\n. In case it helps, I'll add that I'm sometimes getting the same behavior @aiwilliams mentioned.\n. Thought I'd also mention that this project used to work in versions older than 0.12.0, in case that might shed some light.\n\nI'd love to try debugging it, but I'm not sure where to start.\n. I thought I'd mention this in case anyone else runs into the same issue.  It appears at this point that I'm the only one. :)\n\nI just tried the project in question using the latest Zeus (0.13.1).  It's giving me more information now, which is excellent.  I'm not sure what the next step might be to debug it though.  Very similar behavior as before; I can run `zeus console`, `zeus generate`, `zeus rake`, and `zeus server` without issue.  For some reason though, when I run\n\n```\nzeus rspec spec/models/transactions/add_payment_method_spec.rb\n```\n\nI get the following message:\n\nclienthandler.go:100: read unixgram : connection reset by peer\n\n![Screenshot 12:11:12 3:30 PM](https://f.cloud.github.com/assets/2437/6717/98262b0e-43d1-11e2-9a6b-322bce0cfcc6.jpeg)\n. Something changed in Zeus in the last few weeks.  It's now working!  Whooo hoooo!  Back in business!\n![Screenshot_1_29_13_10_06_AM](https://f.cloud.github.com/assets/2437/107291/92a250e8-6a25-11e2-83ea-24f2ed252a67.jpg)\n. Looks to me like removing your .zeus.sock file could do the trick.\n. I've seen a few times this morning where things were behaving differently after zeus was restarted.  \n\nI've tried to use Spork for years and it seems to save a bunch of time when running things.  However, just a time or two when you don't realize the issue is that Spork needs to be restarted seems to give back all of the time savings.\n\nThe one thing I like about Spin is that it doesn't seem to ever have a reload issue.  The problem there though is that it takes a good deal longer to run each thing.\n\nZeus seems considerably faster than both Spork and Spin.  I wonder if there's a way to get these incredible gains without having to think about whether it needs to be restarted whenever a test fails or something doesn't behave as expected.\n. \"Class reloading is the Vietnam of Ruby\"\n- @ntalbott \n\nI'm in the hopeful camp. :)\n. Fascinating!  Thanks for sharing those details.  \n. NICE!  Can't wait to try it out tomorrow.  Your project has the potential to save developers SO MUCH TIME.  Thanks for all of your work on it!\n. Yay!  Everything's wonderful here as well.  I'm still surprised how FAST things are.\n. That's strange @ScotterC.  I'm using rspec on a project here and it seems to be picking up model, view, and controller changes wonderfully.  Do you have something up in the parent app/ directory?\n\nI did notice one little thing - it didn't seem to pick up a route change when running an rspec test (although `zeus rake routes` shows the change perfectly).\n. The routes issue I mentioned is fixed!  This project is a marvel.  Really - it's great work.\n. I saw this issue too.  When I updated to the latest pry-rails gem (0.2.1), zeus started using pry.  Happy pandas!\n. Sounds good to me.  Hopefully Adam will see the same thing.\n. We're using Riak in a few apps.  In Zeus 0.4.6, I could generate a .zeus.rb file and then replace the `require 'rails/all'` with the things we were using:\n\n```\n  require \"action_controller/railtie\"\n  require \"action_mailer/railtie\"\n  require \"active_resource/railtie\"\n  require \"rails/test_unit/railtie\"\n  require \"active_support/version\"\n```\n\nIn the latest Zeus (0.10.0), I'm not sure if using a .zeus.rb file is the recommended approach for this type of customization.  I see there's now a json file to customize some things.\n\nI'm not sure what the best way might be to allow folks writing Rails apps without _all_ of the rails stuff to customize the require list to exclude things like Active Record.  It is pretty handy to have a ruby .zeus.rb file to tweak things.  Still mulling on the options...\n. Yay!  Excited to try it out.  Thanks!\n. Works perfectly!  So nice that I'll now get updates as Zeus::Rails improves and that I only need to override part of it.\n\nIt is beautiful.\n. I'm not sure if I'm having the same issue or something different.  I'm using pry-rails as well.  I wonder if anyone is seeing the same thing I'm seeing or if I'm just having personal issues.  Here's what I see:\n\nhttps://img.skitch.com/20120914-e682jb4x9jh5mkhutu944b889k.jpg\n\nWhen I type at that cursor and hit enter, it seems to refresh and show me this:\n\nhttps://img.skitch.com/20120914-k8gqx3wi1u4xgbgeqj4w2pwj6q.jpg\n\nSeems like some type of readline issue?  I only seem to see the issue from zeus 0.10.0 and later.  The versions before that don't show the issue.\n. Wow.  Those skitch-captured images from the retina display are awe-inspiring in their magnitude.\n. Yup - on OS X using iTerm.  And ruby 1.9.3p125 (2012-02-16 revision 34643) [x86_64-darwin12.0.0] from rbenv.\n\nPsyched that you'll take a look and that it may not just be my personal issue.  It's certainly not a showstopper since I can just use the default rails console.  Thanks!\n. Nice!  This is good to hear.  And @burke's suspicion was correct!\n. Works wonderfully.  Sounds like the TTY readline stuff was less than pleasant!\n\nI'm amazed by the work you're doing on this gem @burke.  This thing is ridiculously helpful to Rails devs.\n. In case it helps, I'll add that I'm sometimes getting the same behavior @aiwilliams mentioned.\n. Thought I'd also mention that this project used to work in versions older than 0.12.0, in case that might shed some light.\n\nI'd love to try debugging it, but I'm not sure where to start.\n. I thought I'd mention this in case anyone else runs into the same issue.  It appears at this point that I'm the only one. :)\n\nI just tried the project in question using the latest Zeus (0.13.1).  It's giving me more information now, which is excellent.  I'm not sure what the next step might be to debug it though.  Very similar behavior as before; I can run `zeus console`, `zeus generate`, `zeus rake`, and `zeus server` without issue.  For some reason though, when I run\n\n```\nzeus rspec spec/models/transactions/add_payment_method_spec.rb\n```\n\nI get the following message:\n\nclienthandler.go:100: read unixgram : connection reset by peer\n\n![Screenshot 12:11:12 3:30 PM](https://f.cloud.github.com/assets/2437/6717/98262b0e-43d1-11e2-9a6b-322bce0cfcc6.jpeg)\n. Something changed in Zeus in the last few weeks.  It's now working!  Whooo hoooo!  Back in business!\n![Screenshot_1_29_13_10_06_AM](https://f.cloud.github.com/assets/2437/107291/92a250e8-6a25-11e2-83ea-24f2ed252a67.jpg)\n. Looks to me like removing your .zeus.sock file could do the trick.\n. ",
    "ScotterC": "It's working for me normally now but I have a somewhat edge case.\n\nWhen running zeus rspec spec/ it's not picking up on changes made in app/ directory.  This seems specific to rspec.\n\nI cloned zeus and ran the fsevents like you @aiwilliams do and that's working properly.\n\nOS Lion, rails 3.2.8, zeus 0.4.1 \n. I happened to be testing resque workers and I thought for a moment that it hadn't picked up on the 'worker' directory but that's not the case.  I tested it with a controller and zeus does fine at picking up changes in the spec file itself but not in the controller's file that it's testing.  Restarting zeus sees the change of course.  \n. rails 3.2.6\nruby 1.9.3p194-perf with falcon and debug patch\n\nWhere should I start looking?\n. I was on 0.3.1.  Hadn't noticed you released a new version today.\n\nUpgrading to 0.4.0  works!  Thanks.\n\nI'm very psyched about this project.  I hope to pitch in when I have some time.  Keep it up\n. Great. Thanks\n. It's working for me normally now but I have a somewhat edge case.\n\nWhen running zeus rspec spec/ it's not picking up on changes made in app/ directory.  This seems specific to rspec.\n\nI cloned zeus and ran the fsevents like you @aiwilliams do and that's working properly.\n\nOS Lion, rails 3.2.8, zeus 0.4.1 \n. I happened to be testing resque workers and I thought for a moment that it hadn't picked up on the 'worker' directory but that's not the case.  I tested it with a controller and zeus does fine at picking up changes in the spec file itself but not in the controller's file that it's testing.  Restarting zeus sees the change of course.  \n. rails 3.2.6\nruby 1.9.3p194-perf with falcon and debug patch\n\nWhere should I start looking?\n. I was on 0.3.1.  Hadn't noticed you released a new version today.\n\nUpgrading to 0.4.0  works!  Thanks.\n\nI'm very psyched about this project.  I hope to pitch in when I have some time.  Keep it up\n. Great. Thanks\n. ",
    "cvincent": "@burke I'm not seeing any reloading. Would that be because I'm on Snow Leopard? I'm pretty sure FSEvents is present on 10.6. If it's impossible to get reloading working, maybe I'll _finally_ upgrade my OS (I've refused to this point because they killed Spaces).\n. @burke I'm not seeing any reloading. Would that be because I'm on Snow Leopard? I'm pretty sure FSEvents is present on 10.6. If it's impossible to get reloading working, maybe I'll _finally_ upgrade my OS (I've refused to this point because they killed Spaces).\n. ",
    "ramontayag": "@aiwilliams have you found a solution to the grape issues?\n. @aiwilliams have you found a solution to the grape issues?\n. ",
    "zephyr-dev": "Guessing this is fixed by https://github.com/burke/zeus/commit/a61bd96af179d51c8ee1b25cdfcfab2c85b4bbd3 but hasn't been included in the latest gem?\n. Actually this fixes it too: https://github.com/burke/zeus/issues/19\n\nDidn't know about `zeus init` to generate the .zeus.rb file\n. Guessing this is fixed by https://github.com/burke/zeus/commit/a61bd96af179d51c8ee1b25cdfcfab2c85b4bbd3 but hasn't been included in the latest gem?\n. Actually this fixes it too: https://github.com/burke/zeus/issues/19\n\nDidn't know about `zeus init` to generate the .zeus.rb file\n. ",
    "joseluistorres": "Oh ok, yeah we use rspec, thanks for your response, it really helps.\n\nJL\n. @burke excellent, downloaded, the error is gone too, thanks.\n\nRegards\n\nJL\n. Sure here is with --trace\n\n```\nzeus rake assets:precompile --trace\n** Invoke assets:precompile (first_time)\n** Execute assets:precompile\n/Users/supinchecompilla/.rvm/rubies/ruby-1.9.3-p194/bin/ruby zeus runner: rake assets:precompile:all RAILS_ENV=development RAILS_GROUPS=assets --trace\n/Users/supinchecompilla/.rvm/rubies/ruby-1.9.3-p194/bin/ruby: No such file or directory -- zeus runner: rake (LoadError)\nrake aborted!\nCommand failed with status (1): [/Users/supinchecompilla/.rvm/rubies/ruby-1...]\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/file_utils.rb:53:in `block in create_shell_runner'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/file_utils.rb:45:in `call'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/file_utils.rb:45:in `sh'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/file_utils_ext.rb:39:in `sh'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/file_utils.rb:80:in `ruby'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/file_utils_ext.rb:39:in `ruby'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.1.1/lib/sprockets/assets.rake:9:in `ruby_rake_task'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.1.1/lib/sprockets/assets.rake:17:in `invoke_or_reboot_rake_task'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.1.1/lib/sprockets/assets.rake:25:in `block (2 levels) in <top (required)>'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/task.rb:205:in `call'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/task.rb:205:in `block in execute'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/task.rb:200:in `each'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/task.rb:200:in `execute'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/task.rb:158:in `block in invoke_with_call_chain'\n/Users/supinchecompilla/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/monitor.rb:211:in `mon_synchronize'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/task.rb:151:in `invoke_with_call_chain'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/task.rb:144:in `invoke'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:116:in `invoke_task'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:94:in `block (2 levels) in top_level'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:94:in `each'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:94:in `block in top_level'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:133:in `standard_exception_handling'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:88:in `top_level'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:66:in `block in run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:133:in `standard_exception_handling'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:63:in `run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/templates/rails.rb:60:in `block (6 levels) in <top (required)>'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/acceptor.rb:39:in `call'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/acceptor.rb:39:in `__RUNNER__run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/acceptor.rb:22:in `block (2 levels) in runloop!'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/acceptor.rb:22:in `fork'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/acceptor.rb:22:in `block in runloop!'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/acceptor.rb:19:in `loop'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/acceptor.rb:19:in `runloop!'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:85:in `block in run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:78:in `fork'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:78:in `run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:22:in `block in after_setup'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:21:in `each'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:21:in `after_setup'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:84:in `block in run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:78:in `fork'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:78:in `run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:22:in `block in after_setup'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:21:in `each'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:21:in `after_setup'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:84:in `block in run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:78:in `fork'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:78:in `run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:22:in `block in after_setup'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:21:in `each'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:21:in `after_setup'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:84:in `block in run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:78:in `fork'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:78:in `run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:22:in `block in after_setup'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:21:in `each'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:21:in `after_setup'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:84:in `block in run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:78:in `fork'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:78:in `run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server.rb:53:in `run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/cli.rb:45:in `start'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/thrud.rb:94:in `start'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/bin/zeus:4:in `<top (required)>'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/bin/zeus:19:in `load'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/bin/zeus:19:in `<main>'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/bin/ruby_noexec_wrapper:14:in `eval'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/bin/ruby_noexec_wrapper:14:in `<main>'\nTasks: TOP => assets:precompile\n```\n. I know thanks to you, any other rake runs perfectly for me.\n. I understand. But it was hard to me to realize a simple syntax error when I was running zeus. Perhaps is out of zeus scope but some error message will be awesome, it would have save me some mins to see what was wrong. Is there a way to catch this? \n. Thanks for your comment @sideshowcoder I'll take a look and see if I can do something. I don't know \"go\" but I guess it is a good chance to learn.\n. Oh ok, yeah we use rspec, thanks for your response, it really helps.\n\nJL\n. @burke excellent, downloaded, the error is gone too, thanks.\n\nRegards\n\nJL\n. Sure here is with --trace\n\n```\nzeus rake assets:precompile --trace\n** Invoke assets:precompile (first_time)\n** Execute assets:precompile\n/Users/supinchecompilla/.rvm/rubies/ruby-1.9.3-p194/bin/ruby zeus runner: rake assets:precompile:all RAILS_ENV=development RAILS_GROUPS=assets --trace\n/Users/supinchecompilla/.rvm/rubies/ruby-1.9.3-p194/bin/ruby: No such file or directory -- zeus runner: rake (LoadError)\nrake aborted!\nCommand failed with status (1): [/Users/supinchecompilla/.rvm/rubies/ruby-1...]\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/file_utils.rb:53:in `block in create_shell_runner'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/file_utils.rb:45:in `call'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/file_utils.rb:45:in `sh'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/file_utils_ext.rb:39:in `sh'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/file_utils.rb:80:in `ruby'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/file_utils_ext.rb:39:in `ruby'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.1.1/lib/sprockets/assets.rake:9:in `ruby_rake_task'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.1.1/lib/sprockets/assets.rake:17:in `invoke_or_reboot_rake_task'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.1.1/lib/sprockets/assets.rake:25:in `block (2 levels) in <top (required)>'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/task.rb:205:in `call'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/task.rb:205:in `block in execute'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/task.rb:200:in `each'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/task.rb:200:in `execute'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/task.rb:158:in `block in invoke_with_call_chain'\n/Users/supinchecompilla/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/monitor.rb:211:in `mon_synchronize'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/task.rb:151:in `invoke_with_call_chain'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/task.rb:144:in `invoke'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:116:in `invoke_task'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:94:in `block (2 levels) in top_level'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:94:in `each'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:94:in `block in top_level'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:133:in `standard_exception_handling'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:88:in `top_level'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:66:in `block in run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:133:in `standard_exception_handling'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:63:in `run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/templates/rails.rb:60:in `block (6 levels) in <top (required)>'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/acceptor.rb:39:in `call'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/acceptor.rb:39:in `__RUNNER__run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/acceptor.rb:22:in `block (2 levels) in runloop!'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/acceptor.rb:22:in `fork'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/acceptor.rb:22:in `block in runloop!'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/acceptor.rb:19:in `loop'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/acceptor.rb:19:in `runloop!'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:85:in `block in run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:78:in `fork'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:78:in `run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:22:in `block in after_setup'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:21:in `each'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:21:in `after_setup'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:84:in `block in run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:78:in `fork'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:78:in `run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:22:in `block in after_setup'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:21:in `each'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:21:in `after_setup'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:84:in `block in run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:78:in `fork'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:78:in `run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:22:in `block in after_setup'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:21:in `each'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:21:in `after_setup'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:84:in `block in run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:78:in `fork'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:78:in `run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:22:in `block in after_setup'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:21:in `each'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/stage.rb:21:in `after_setup'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:84:in `block in run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:78:in `fork'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server/forked_process.rb:78:in `run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/server.rb:53:in `run'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/zeus/cli.rb:45:in `start'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/lib/thrud.rb:94:in `start'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/gems/zeus-0.4.0/bin/zeus:4:in `<top (required)>'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/bin/zeus:19:in `load'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/bin/zeus:19:in `<main>'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/bin/ruby_noexec_wrapper:14:in `eval'\n/Users/supinchecompilla/.rvm/gems/ruby-1.9.3-p194/bin/ruby_noexec_wrapper:14:in `<main>'\nTasks: TOP => assets:precompile\n```\n. I know thanks to you, any other rake runs perfectly for me.\n. I understand. But it was hard to me to realize a simple syntax error when I was running zeus. Perhaps is out of zeus scope but some error message will be awesome, it would have save me some mins to see what was wrong. Is there a way to catch this? \n. Thanks for your comment @sideshowcoder I'll take a look and see if I can do something. I don't know \"go\" but I guess it is a good chance to learn.\n. ",
    "ryansch": "Please try: https://github.com/aceofsales/guard-zeus-client\n\nIt's a bit rough but works with rspec at the moment.\n. I just got this for the first time on Friday.\n\nEDIT: I don't run zeus with foreman but I do have the foreman gem installed.\n. Please try: https://github.com/aceofsales/guard-zeus-client\n\nIt's a bit rough but works with rspec at the moment.\n. If you use rspec, I would recommend guard with guard-rspec now.  They've added support for zeus in 2.1.0.\n. Do you have `config.include Paperclip::Shoulda::Matchers` defined in your spec_helper?\n. Wow, I read through that way too fast.  Sorry for the useless question.\n. rake db:test:prepare might help.\n\nAre you expecting this from the `rake spec` behavior?\n. Please try: https://github.com/aceofsales/guard-zeus-client\n\nIt's a bit rough but works with rspec at the moment.\n. I just got this for the first time on Friday.\n\nEDIT: I don't run zeus with foreman but I do have the foreman gem installed.\n. Please try: https://github.com/aceofsales/guard-zeus-client\n\nIt's a bit rough but works with rspec at the moment.\n. If you use rspec, I would recommend guard with guard-rspec now.  They've added support for zeus in 2.1.0.\n. Do you have `config.include Paperclip::Shoulda::Matchers` defined in your spec_helper?\n. Wow, I read through that way too fast.  Sorry for the useless question.\n. rake db:test:prepare might help.\n\nAre you expecting this from the `rake spec` behavior?\n. ",
    "rexikan": "Guard-rspec now supports zeus! https://github.com/guard/guard-rspec \n. Guard-rspec now supports zeus! https://github.com/guard/guard-rspec \n. ",
    "curious-attempt-bunny": "+1 for autotest-like behaviour (I'm not using rspec).\n. I just started having this problem with 0.13.2 and have upgraded to 0.13.3. I've bundle installed but I'm still getting the same failure. The first few lines of the failure are:\n\nslavenode.go:202: EOF\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0x73cda]\n\nI'll follow up here if I resolve the problem.\n\nEdit: I had a gem that was causing a segmentation fault. Resolving that resolved my zeus problem.\n. +1 for autotest-like behaviour (I'm not using rspec).\n. I just started having this problem with 0.13.2 and have upgraded to 0.13.3. I've bundle installed but I'm still getting the same failure. The first few lines of the failure are:\n\nslavenode.go:202: EOF\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0x73cda]\n\nI'll follow up here if I resolve the problem.\n\nEdit: I had a gem that was causing a segmentation fault. Resolving that resolved my zeus problem.\n. ",
    "kbaum": "+1  Love zeus so far for rspec but most of our tests are in cucumber.\n. I gave it a shot myself and seems to be working locally:\n\nhttps://gist.github.com/3416017\n\nOnly issue is that when i run with capybara-webkit driver i have to ctrl-c to exit out of my runner.\n. Awesome!  Thx!\n. I upgraded to 0.13.2 today and it seems to be working again!\n. Also getting this with rails 3.2.12 and cucumber-rails 1.3.0.\n. I was able to get this working by setting require:false on cucumber-rails within my Gemfile.  Just a stab in the dark.\n. +1  Love zeus so far for rspec but most of our tests are in cucumber.\n. I gave it a shot myself and seems to be working locally:\n\nhttps://gist.github.com/3416017\n\nOnly issue is that when i run with capybara-webkit driver i have to ctrl-c to exit out of my runner.\n. Awesome!  Thx!\n. I upgraded to 0.13.2 today and it seems to be working again!\n. Also getting this with rails 3.2.12 and cucumber-rails 1.3.0.\n. I was able to get this working by setting require:false on cucumber-rails within my Gemfile.  Just a stab in the dark.\n. ",
    "Govinda-Fichtner": "+1 Zeus seems really great compared to spork... would love to change zeus for spork... if cucumber is supported this would be possilbe... \n. Tried it right away and got the following cucumber runtime error:\n\nhttps://gist.github.com/3736141\n\nUsing ruby 1,9.3p194, Rails 3.2.2 , Cucumber 1.2.1, cucumber-rails 1.2.0 ...\n\nAnybody any ideas?\n. That's my guess, too...\n. @jastix, it fixed the problem for me... thanks. I wonder if removing this line can have any negative side effects... \nbut `guard-rspec` runs now without a problem and I can still run `rspec` and all seems fine. \n. +1 Zeus seems really great compared to spork... would love to change zeus for spork... if cucumber is supported this would be possilbe... \n. Tried it right away and got the following cucumber runtime error:\n\nhttps://gist.github.com/3736141\n\nUsing ruby 1,9.3p194, Rails 3.2.2 , Cucumber 1.2.1, cucumber-rails 1.2.0 ...\n\nAnybody any ideas?\n. That's my guess, too...\n. @jastix, it fixed the problem for me... thanks. I wonder if removing this line can have any negative side effects... \nbut `guard-rspec` runs now without a problem and I can still run `rspec` and all seems fine. \n. ",
    "b4mboo": "Same here. Cucumber support is necessary for us to use zeus on a daily basis.\n\nUnfortunately, @kbaum's hack doesn't seem to work anymore. Or am I missing something? Seems to me like the major refactoring to use Go on the server side of zeus made that Gist obsolete.\n. That's awesome news. Gonna start working with Zeus first thing tomorrow morning.\n. @Govinda-Fichtner: Just look at my pull request. https://github.com/burke/zeus/pull/105\n. Just to let you know, there are more people interested in seeing that feature being implemented: +1\nZeus is already pretty promising. Minitest support would be a big plus. Thanks!\n. Wow, that was fast. Thank you so much!\n. Some more output to help debugging:\n\n```\nrails new foo\n      create  \n      create  README.rdoc\n      create  Rakefile\n      create  config.ru\n      create  .gitignore\n      create  Gemfile\n      create  app\n      create  app/assets/images/rails.png\n      create  app/assets/javascripts/application.js\n      create  app/assets/stylesheets/application.css\n      create  app/controllers/application_controller.rb\n      create  app/helpers/application_helper.rb\n      create  app/mailers\n      create  app/models\n      create  app/views/layouts/application.html.erb\n      create  app/mailers/.gitkeep\n      create  app/models/.gitkeep\n      create  config\n      create  config/routes.rb\n      create  config/application.rb\n      create  config/environment.rb\n      create  config/environments\n      create  config/environments/development.rb\n      create  config/environments/production.rb\n      create  config/environments/test.rb\n      create  config/initializers\n      create  config/initializers/backtrace_silencers.rb\n      create  config/initializers/inflections.rb\n      create  config/initializers/mime_types.rb\n      create  config/initializers/secret_token.rb\n      create  config/initializers/session_store.rb\n      create  config/initializers/wrap_parameters.rb\n      create  config/locales\n      create  config/locales/en.yml\n      create  config/boot.rb\n      create  config/database.yml\n      create  db\n      create  db/seeds.rb\n      create  doc\n      create  doc/README_FOR_APP\n      create  lib\n      create  lib/tasks\n      create  lib/tasks/.gitkeep\n      create  lib/assets\n      create  lib/assets/.gitkeep\n      create  log\n      create  log/.gitkeep\n      create  public\n      create  public/404.html\n      create  public/422.html\n      create  public/500.html\n      create  public/favicon.ico\n      create  public/index.html\n      create  public/robots.txt\n      create  script\n      create  script/rails\n      create  test/fixtures\n      create  test/fixtures/.gitkeep\n      create  test/functional\n      create  test/functional/.gitkeep\n      create  test/integration\n      create  test/integration/.gitkeep\n      create  test/unit\n      create  test/unit/.gitkeep\n      create  test/performance/browsing_test.rb\n      create  test/test_helper.rb\n      create  tmp/cache\n      create  tmp/cache/assets\n      create  vendor/assets/javascripts\n      create  vendor/assets/javascripts/.gitkeep\n      create  vendor/assets/stylesheets\n      create  vendor/assets/stylesheets/.gitkeep\n      create  vendor/plugins\n      create  vendor/plugins/.gitkeep\n         run  bundle install\nFetching gem metadata from https://rubygems.org/.........\nUsing rake (0.9.2.2) \nUsing i18n (0.6.1) \nUsing multi_json (1.3.6) \nUsing activesupport (3.2.8) \nUsing builder (3.0.3) \nUsing activemodel (3.2.8) \nUsing erubis (2.7.0) \nUsing journey (1.0.4) \nUsing rack (1.4.1) \nUsing rack-cache (1.2) \nUsing rack-test (0.6.1) \nUsing hike (1.2.1) \nUsing tilt (1.3.3) \nUsing sprockets (2.1.3) \nUsing actionpack (3.2.8) \nUsing mime-types (1.19) \nUsing polyglot (0.3.3) \nUsing treetop (1.4.10) \nUsing mail (2.4.4) \nUsing actionmailer (3.2.8) \nUsing arel (3.0.2) \nUsing tzinfo (0.3.33) \nUsing activerecord (3.2.8) \nUsing activeresource (3.2.8) \nUsing bundler (1.1.3) \nUsing coffee-script-source (1.3.3) \nUsing execjs (1.4.0) \nUsing coffee-script (2.2.0) \nUsing rack-ssl (1.3.2) \nUsing json (1.7.5) \nUsing rdoc (3.12) \nUsing thor (0.16.0) \nUsing railties (3.2.8) \nUsing coffee-rails (3.2.2) \nUsing jquery-rails (2.1.2) \nUsing libv8 (3.3.10.4) \nUsing rails (3.2.8) \nUsing sass (3.2.1) \nUsing sass-rails (3.2.5) \nUsing sqlite3 (1.3.6) \nUsing therubyracer (0.10.2) \nUsing uglifier (1.3.0) \nYour bundle is complete! Use `bundle show [gemname]` to see where a bundled gem is installed.\n```\n. Once more: THANKS for all your effort and good work. I will spread the word about Zeus.\n. Same here. Cucumber support is necessary for us to use zeus on a daily basis.\n\nUnfortunately, @kbaum's hack doesn't seem to work anymore. Or am I missing something? Seems to me like the major refactoring to use Go on the server side of zeus made that Gist obsolete.\n. That's awesome news. Gonna start working with Zeus first thing tomorrow morning.\n. @Govinda-Fichtner: Just look at my pull request. https://github.com/burke/zeus/pull/105\n. Just to let you know, there are more people interested in seeing that feature being implemented: +1\nZeus is already pretty promising. Minitest support would be a big plus. Thanks!\n. Wow, that was fast. Thank you so much!\n. Some more output to help debugging:\n\n```\nrails new foo\n      create  \n      create  README.rdoc\n      create  Rakefile\n      create  config.ru\n      create  .gitignore\n      create  Gemfile\n      create  app\n      create  app/assets/images/rails.png\n      create  app/assets/javascripts/application.js\n      create  app/assets/stylesheets/application.css\n      create  app/controllers/application_controller.rb\n      create  app/helpers/application_helper.rb\n      create  app/mailers\n      create  app/models\n      create  app/views/layouts/application.html.erb\n      create  app/mailers/.gitkeep\n      create  app/models/.gitkeep\n      create  config\n      create  config/routes.rb\n      create  config/application.rb\n      create  config/environment.rb\n      create  config/environments\n      create  config/environments/development.rb\n      create  config/environments/production.rb\n      create  config/environments/test.rb\n      create  config/initializers\n      create  config/initializers/backtrace_silencers.rb\n      create  config/initializers/inflections.rb\n      create  config/initializers/mime_types.rb\n      create  config/initializers/secret_token.rb\n      create  config/initializers/session_store.rb\n      create  config/initializers/wrap_parameters.rb\n      create  config/locales\n      create  config/locales/en.yml\n      create  config/boot.rb\n      create  config/database.yml\n      create  db\n      create  db/seeds.rb\n      create  doc\n      create  doc/README_FOR_APP\n      create  lib\n      create  lib/tasks\n      create  lib/tasks/.gitkeep\n      create  lib/assets\n      create  lib/assets/.gitkeep\n      create  log\n      create  log/.gitkeep\n      create  public\n      create  public/404.html\n      create  public/422.html\n      create  public/500.html\n      create  public/favicon.ico\n      create  public/index.html\n      create  public/robots.txt\n      create  script\n      create  script/rails\n      create  test/fixtures\n      create  test/fixtures/.gitkeep\n      create  test/functional\n      create  test/functional/.gitkeep\n      create  test/integration\n      create  test/integration/.gitkeep\n      create  test/unit\n      create  test/unit/.gitkeep\n      create  test/performance/browsing_test.rb\n      create  test/test_helper.rb\n      create  tmp/cache\n      create  tmp/cache/assets\n      create  vendor/assets/javascripts\n      create  vendor/assets/javascripts/.gitkeep\n      create  vendor/assets/stylesheets\n      create  vendor/assets/stylesheets/.gitkeep\n      create  vendor/plugins\n      create  vendor/plugins/.gitkeep\n         run  bundle install\nFetching gem metadata from https://rubygems.org/.........\nUsing rake (0.9.2.2) \nUsing i18n (0.6.1) \nUsing multi_json (1.3.6) \nUsing activesupport (3.2.8) \nUsing builder (3.0.3) \nUsing activemodel (3.2.8) \nUsing erubis (2.7.0) \nUsing journey (1.0.4) \nUsing rack (1.4.1) \nUsing rack-cache (1.2) \nUsing rack-test (0.6.1) \nUsing hike (1.2.1) \nUsing tilt (1.3.3) \nUsing sprockets (2.1.3) \nUsing actionpack (3.2.8) \nUsing mime-types (1.19) \nUsing polyglot (0.3.3) \nUsing treetop (1.4.10) \nUsing mail (2.4.4) \nUsing actionmailer (3.2.8) \nUsing arel (3.0.2) \nUsing tzinfo (0.3.33) \nUsing activerecord (3.2.8) \nUsing activeresource (3.2.8) \nUsing bundler (1.1.3) \nUsing coffee-script-source (1.3.3) \nUsing execjs (1.4.0) \nUsing coffee-script (2.2.0) \nUsing rack-ssl (1.3.2) \nUsing json (1.7.5) \nUsing rdoc (3.12) \nUsing thor (0.16.0) \nUsing railties (3.2.8) \nUsing coffee-rails (3.2.2) \nUsing jquery-rails (2.1.2) \nUsing libv8 (3.3.10.4) \nUsing rails (3.2.8) \nUsing sass (3.2.1) \nUsing sass-rails (3.2.5) \nUsing sqlite3 (1.3.6) \nUsing therubyracer (0.10.2) \nUsing uglifier (1.3.0) \nYour bundle is complete! Use `bundle show [gemname]` to see where a bundled gem is installed.\n```\n. Once more: THANKS for all your effort and good work. I will spread the word about Zeus.\n. ",
    "razum2um": "Would like to see it since 4 month https://github.com/burke/zeus/issues/143\nCan you point out, how can I help you to achieve this (no experience in go, proficient in ruby)\n. Would like to see it since 4 month https://github.com/burke/zeus/issues/143\nCan you point out, how can I help you to achieve this (no experience in go, proficient in ruby)\n. ",
    "andyw8": "+1\n\nI'd really love to use Zeus with Minitest.\n. Ah yes, that would explain it.\n. I've had this problem too (Mountain Lion).\n. @lcx and @squiter85 - can you share your full Gemfile in a gist please\n. @RedaBenh are you trying to run Zeus in both environments at the same time? That won't work.\n. `.zeus.sock` lives in root of your Rails project. It exists to prevent you from running multiple Zeus instances at once. If Zeus crashes then it can sometimes stick around \u2013 just delete it manually.\n. Why are you running as sudo?\n\nAlso, make sure you are actually in your app's directory when you run `zeus start`\n. Isn't this going to use massive amount of memory? As you're going to end up with one instance of your app for every spec file.\n. Also, this appears to be a dupe of #254 \n. Sorry, I misread the command.\n. +1\n\nI'd really love to use Zeus with Minitest.\n. Ah yes, that would explain it.\n. I've had this problem too (Mountain Lion).\n. @lcx and @squiter85 - can you share your full Gemfile in a gist please\n. @RedaBenh are you trying to run Zeus in both environments at the same time? That won't work.\n. `.zeus.sock` lives in root of your Rails project. It exists to prevent you from running multiple Zeus instances at once. If Zeus crashes then it can sometimes stick around \u2013 just delete it manually.\n. Why are you running as sudo?\n\nAlso, make sure you are actually in your app's directory when you run `zeus start`\n. Isn't this going to use massive amount of memory? As you're going to end up with one instance of your app for every spec file.\n. Also, this appears to be a dupe of #254 \n. Sorry, I misread the command.\n. ",
    "camertron": "Great, thanks for the more descriptive error message.  I wasn't suggesting adding io-console as a hard dependency, just something to mention in the readme.\n. Great, thanks for the more descriptive error message.  I wasn't suggesting adding io-console as a hard dependency, just something to mention in the readme.\n. ",
    "travisbot": "This pull request [passes](http://travis-ci.org/burke/zeus/builds/2101516) (merged d1b5e111 into 1dd4e811).\n. This pull request [passes](http://travis-ci.org/burke/zeus/builds/2114787) (merged 4404982b into 0ee55739).\n. This pull request [passes](http://travis-ci.org/burke/zeus/builds/2115023) (merged b499fc95 into 0ee55739).\n. This pull request [passes](http://travis-ci.org/burke/zeus/builds/2148624) (merged 4b048d1e into 86b73c5e).\n. This pull request [fails](http://travis-ci.org/burke/zeus/builds/2157773) (merged eca46022 into a3339aa6).\n. This pull request [fails](http://travis-ci.org/burke/zeus/builds/2208062) (merged fbeb6b02 into 9591b901).\n. This pull request [fails](http://travis-ci.org/burke/zeus/builds/2208070) (merged a3912dd3 into 9591b901).\n. This pull request [fails](http://travis-ci.org/burke/zeus/builds/2210863) (merged 92022c9f into 9591b901).\n. This pull request [passes](http://travis-ci.org/burke/zeus/builds/2101516) (merged d1b5e111 into 1dd4e811).\n. This pull request [passes](http://travis-ci.org/burke/zeus/builds/2114787) (merged 4404982b into 0ee55739).\n. This pull request [passes](http://travis-ci.org/burke/zeus/builds/2115023) (merged b499fc95 into 0ee55739).\n. This pull request [passes](http://travis-ci.org/burke/zeus/builds/2148624) (merged 4b048d1e into 86b73c5e).\n. This pull request [fails](http://travis-ci.org/burke/zeus/builds/2157773) (merged eca46022 into a3339aa6).\n. This pull request [fails](http://travis-ci.org/burke/zeus/builds/2208062) (merged fbeb6b02 into 9591b901).\n. This pull request [fails](http://travis-ci.org/burke/zeus/builds/2208070) (merged a3912dd3 into 9591b901).\n. This pull request [fails](http://travis-ci.org/burke/zeus/builds/2210863) (merged 92022c9f into 9591b901).\n. ",
    "ntalbott": "Here you go:\n\n```\nntalbott@joshua:~/git/spreedly/subscriptions$ zeus start\nstarting spawner `boot`\nstarting spawner `default_bundle`\nstarting spawner `development_environment`\nstarting spawner `test_environment`\n--------------------------------------------------------------------------------\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:460:in `block in load_file'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:599:in `new_constants_in'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:459:in `load_file'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:346:in `require_or_load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:493:in `load_missing_constant'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:183:in `block in const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/test/factories.rb:71:in `block (3 levels) in <top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:22:in `instance_eval'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:22:in `factory'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:28:in `block in factory'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:26:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:26:in `factory'\n/Users/ntalbott/git/spreedly/subscriptions/test/factories.rb:56:in `block in <top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:16:in `instance_eval'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:16:in `run'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:7:in `define'\n/Users/ntalbott/git/spreedly/subscriptions/test/factories.rb:3:in `<top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:36:in `load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:235:in `block in load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `block in load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:599:in `new_constants_in'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:235:in `load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/find_definitions.rb:16:in `block in find_definitions'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/find_definitions.rb:15:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/find_definitions.rb:15:in `find_definitions'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl_rails-1.6.0/lib/factory_girl_rails/railtie.rb:26:in `block in <class:Railtie>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:34:in `call'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:34:in `execute_hook'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:43:in `block in run_load_hooks'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:42:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:42:in `run_load_hooks'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application/finisher.rb:46:in `block in <module:Finisher>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:25:in `instance_exec'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:25:in `run'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:50:in `block in run_initializers'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:49:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:49:in `run_initializers'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:134:in `initialize!'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:77:in `method_missing'\n/Users/ntalbott/git/spreedly/subscriptions/config/environment.rb:3:in `<top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `block in require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `block in load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:599:in `new_constants_in'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:240:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:103:in `require_environment!'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/templates/rails.rb:25:in `block (5 levels) in <top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:15:in `call'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:15:in `each'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:15:in `after_setup'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:92:in `block in run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `fork'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:24:in `block in after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `each'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:95:in `block in run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `fork'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:24:in `block in after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `each'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:95:in `block in run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `fork'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server.rb:53:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/cli.rb:45:in `start'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/thrud.rb:94:in `start'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/bin/zeus:4:in `<top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/bin/zeus:19:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/bin/zeus:19:in `<main>'\n--------------------------------------------------------------------------------\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `block in require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `block in load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:599:in `new_constants_in'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:240:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateway.rb:384:in `block in <top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateway.rb:384:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateway.rb:384:in `<top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:460:in `block in load_file'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:599:in `new_constants_in'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:459:in `load_file'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:346:in `require_or_load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:493:in `load_missing_constant'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:183:in `block in const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateways/spreedly_gateway.rb:3:in `<top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:460:in `block in load_file'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:599:in `new_constants_in'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:459:in `load_file'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:346:in `require_or_load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:493:in `load_missing_constant'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:183:in `block in const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/test/factories.rb:71:in `block (3 levels) in <top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:22:in `instance_eval'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:22:in `factory'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:28:in `block in factory'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:26:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:26:in `factory'\n/Users/ntalbott/git/spreedly/subscriptions/test/factories.rb:56:in `block in <top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:16:in `instance_eval'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:16:in `run'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:7:in `define'\n/Users/ntalbott/git/spreedly/subscriptions/test/factories.rb:3:in `<top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:36:in `load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:235:in `block in load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `block in load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:599:in `new_constants_in'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:235:in `load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/find_definitions.rb:16:in `block in find_definitions'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/find_definitions.rb:15:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/find_definitions.rb:15:in `find_definitions'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl_rails-1.6.0/lib/factory_girl_rails/railtie.rb:26:in `block in <class:Railtie>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:34:in `call'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:34:in `execute_hook'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:43:in `block in run_load_hooks'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:42:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:42:in `run_load_hooks'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application/finisher.rb:46:in `block in <module:Finisher>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:25:in `instance_exec'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:25:in `run'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:50:in `block in run_initializers'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:49:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:49:in `run_initializers'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:134:in `initialize!'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:77:in `method_missing'\n/Users/ntalbott/git/spreedly/subscriptions/config/environment.rb:3:in `<top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `block in require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `block in load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:599:in `new_constants_in'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:240:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:103:in `require_environment!'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/templates/rails.rb:25:in `block (5 levels) in <top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:15:in `call'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:15:in `each'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:15:in `after_setup'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:92:in `block in run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `fork'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:24:in `block in after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `each'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:95:in `block in run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `fork'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:24:in `block in after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `each'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:95:in `block in run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `fork'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server.rb:53:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/cli.rb:45:in `start'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/thrud.rb:94:in `start'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/bin/zeus:4:in `<top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/bin/zeus:19:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/bin/zeus:19:in `<main>'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateways/spreedly_gateway.rb:4: warning: already initialized constant VALID_VISA\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateways/spreedly_gateway.rb:5: warning: already initialized constant VALID_MASTERCARD\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateways/spreedly_gateway.rb:6: warning: already initialized constant GATEWAY_NOT_RESPONDING_VISA\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateways/spreedly_gateway.rb:7: warning: already initialized constant ERROR_VISA\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateways/spreedly_gateway.rb:8: warning: already initialized constant CHARGE_NOT_AUTHORIZED_VISA\nstarting acceptor `generate`\nstarting acceptor `runner`\nstarting acceptor `server`\nstarting acceptor `console`\nstarting spawner `prerake`\n--------------------------------------------------------------------------------\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `block in require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:227:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:240:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:352:in `require_or_load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:493:in `load_missing_constant'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:183:in `block in const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/test/factories.rb:71:in `block (3 levels) in <top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:22:in `instance_eval'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:22:in `factory'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:28:in `block in factory'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:26:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:26:in `factory'\n/Users/ntalbott/git/spreedly/subscriptions/test/factories.rb:56:in `block in <top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:16:in `instance_eval'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:16:in `run'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:7:in `define'\n/Users/ntalbott/git/spreedly/subscriptions/test/factories.rb:3:in `<top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:36:in `load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:235:in `block in load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:227:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:235:in `load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/find_definitions.rb:16:in `block in find_definitions'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/find_definitions.rb:15:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/find_definitions.rb:15:in `find_definitions'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl_rails-1.6.0/lib/factory_girl_rails/railtie.rb:26:in `block in <class:Railtie>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:34:in `call'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:34:in `execute_hook'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:43:in `block in run_load_hooks'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:42:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:42:in `run_load_hooks'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application/finisher.rb:46:in `block in <module:Finisher>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:25:in `instance_exec'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:25:in `run'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:50:in `block in run_initializers'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:49:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:49:in `run_initializers'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:134:in `initialize!'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:77:in `method_missing'\n/Users/ntalbott/git/spreedly/subscriptions/config/environment.rb:3:in `<top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `block in require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `block in load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:599:in `new_constants_in'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:240:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:103:in `require_environment!'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/templates/rails.rb:74:in `block (5 levels) in <top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:15:in `call'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:15:in `each'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:15:in `after_setup'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:92:in `block in run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `fork'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:24:in `block in after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `each'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:95:in `block in run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `fork'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:24:in `block in after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `each'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:95:in `block in run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `fork'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server.rb:53:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/cli.rb:45:in `start'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/thrud.rb:94:in `start'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/bin/zeus:4:in `<top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/bin/zeus:19:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/bin/zeus:19:in `<main>'\nstarting acceptor `rake`\nstarting spawner `test_helper`\nstarting acceptor `testrb`\n```\n. Sure thing:\n\n```\nntalbott@joshua:~/git/spreedly/subscriptions$ RAILS_ENV=test bundle exec rails console\n--------------------------------------------------------------------------------\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `block in require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:227:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:240:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateway.rb:384:in `block in <top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateway.rb:384:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateway.rb:384:in `<top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `block in require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:227:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:240:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/subscriber.rb:451:in `<class:Subscriber>'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/subscriber.rb:3:in `<top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `block in require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:227:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:240:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:352:in `require_or_load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:493:in `load_missing_constant'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:183:in `block in const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:505:in `load_missing_constant'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:183:in `block in const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/invoice.rb:3:in `<class:Invoice>'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/invoice.rb:1:in `<top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `block in require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:227:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:240:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:352:in `require_or_load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:306:in `depend_on'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:216:in `require_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/engine.rb:138:in `block (2 levels) in eager_load!'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/engine.rb:137:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/engine.rb:137:in `block in eager_load!'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/engine.rb:135:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/engine.rb:135:in `eager_load!'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:108:in `eager_load!'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application/finisher.rb:41:in `block in <module:Finisher>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:25:in `instance_exec'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:25:in `run'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:50:in `block in run_initializers'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:49:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:49:in `run_initializers'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:134:in `initialize!'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:77:in `method_missing'\n/Users/ntalbott/git/spreedly/subscriptions/config/environment.rb:3:in `<top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `block in require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `block in load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:599:in `new_constants_in'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:240:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:103:in `require_environment!'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/commands.rb:22:in `<top (required)>'\nscript/rails:6:in `require'\nscript/rails:6:in `<main>'\nLoading test environment (Rails 3.0.10)\nirb(main):001:0> \n```\n. Just read back through this, and wanted to confirm your #3 question/statement above: payment_gateway.rb does do a load on spreedly_gateway.rb.\n. Here you go:\n\n```\nntalbott@joshua:~/git/spreedly/subscriptions$ zeus start\nstarting spawner `boot`\nstarting spawner `default_bundle`\nstarting spawner `development_environment`\nstarting spawner `test_environment`\n--------------------------------------------------------------------------------\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:460:in `block in load_file'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:599:in `new_constants_in'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:459:in `load_file'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:346:in `require_or_load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:493:in `load_missing_constant'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:183:in `block in const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/test/factories.rb:71:in `block (3 levels) in <top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:22:in `instance_eval'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:22:in `factory'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:28:in `block in factory'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:26:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:26:in `factory'\n/Users/ntalbott/git/spreedly/subscriptions/test/factories.rb:56:in `block in <top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:16:in `instance_eval'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:16:in `run'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:7:in `define'\n/Users/ntalbott/git/spreedly/subscriptions/test/factories.rb:3:in `<top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:36:in `load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:235:in `block in load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `block in load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:599:in `new_constants_in'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:235:in `load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/find_definitions.rb:16:in `block in find_definitions'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/find_definitions.rb:15:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/find_definitions.rb:15:in `find_definitions'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl_rails-1.6.0/lib/factory_girl_rails/railtie.rb:26:in `block in <class:Railtie>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:34:in `call'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:34:in `execute_hook'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:43:in `block in run_load_hooks'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:42:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:42:in `run_load_hooks'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application/finisher.rb:46:in `block in <module:Finisher>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:25:in `instance_exec'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:25:in `run'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:50:in `block in run_initializers'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:49:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:49:in `run_initializers'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:134:in `initialize!'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:77:in `method_missing'\n/Users/ntalbott/git/spreedly/subscriptions/config/environment.rb:3:in `<top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `block in require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `block in load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:599:in `new_constants_in'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:240:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:103:in `require_environment!'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/templates/rails.rb:25:in `block (5 levels) in <top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:15:in `call'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:15:in `each'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:15:in `after_setup'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:92:in `block in run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `fork'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:24:in `block in after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `each'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:95:in `block in run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `fork'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:24:in `block in after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `each'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:95:in `block in run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `fork'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server.rb:53:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/cli.rb:45:in `start'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/thrud.rb:94:in `start'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/bin/zeus:4:in `<top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/bin/zeus:19:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/bin/zeus:19:in `<main>'\n--------------------------------------------------------------------------------\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `block in require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `block in load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:599:in `new_constants_in'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:240:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateway.rb:384:in `block in <top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateway.rb:384:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateway.rb:384:in `<top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:460:in `block in load_file'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:599:in `new_constants_in'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:459:in `load_file'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:346:in `require_or_load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:493:in `load_missing_constant'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:183:in `block in const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateways/spreedly_gateway.rb:3:in `<top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:460:in `block in load_file'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:599:in `new_constants_in'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:459:in `load_file'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:346:in `require_or_load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:493:in `load_missing_constant'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:183:in `block in const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/test/factories.rb:71:in `block (3 levels) in <top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:22:in `instance_eval'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:22:in `factory'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:28:in `block in factory'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:26:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:26:in `factory'\n/Users/ntalbott/git/spreedly/subscriptions/test/factories.rb:56:in `block in <top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:16:in `instance_eval'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:16:in `run'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:7:in `define'\n/Users/ntalbott/git/spreedly/subscriptions/test/factories.rb:3:in `<top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:36:in `load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:235:in `block in load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `block in load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:599:in `new_constants_in'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:235:in `load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/find_definitions.rb:16:in `block in find_definitions'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/find_definitions.rb:15:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/find_definitions.rb:15:in `find_definitions'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl_rails-1.6.0/lib/factory_girl_rails/railtie.rb:26:in `block in <class:Railtie>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:34:in `call'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:34:in `execute_hook'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:43:in `block in run_load_hooks'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:42:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:42:in `run_load_hooks'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application/finisher.rb:46:in `block in <module:Finisher>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:25:in `instance_exec'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:25:in `run'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:50:in `block in run_initializers'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:49:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:49:in `run_initializers'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:134:in `initialize!'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:77:in `method_missing'\n/Users/ntalbott/git/spreedly/subscriptions/config/environment.rb:3:in `<top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `block in require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `block in load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:599:in `new_constants_in'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:240:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:103:in `require_environment!'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/templates/rails.rb:25:in `block (5 levels) in <top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:15:in `call'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:15:in `each'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:15:in `after_setup'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:92:in `block in run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `fork'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:24:in `block in after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `each'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:95:in `block in run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `fork'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:24:in `block in after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `each'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:95:in `block in run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `fork'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server.rb:53:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/cli.rb:45:in `start'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/thrud.rb:94:in `start'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/bin/zeus:4:in `<top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/bin/zeus:19:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/bin/zeus:19:in `<main>'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateways/spreedly_gateway.rb:4: warning: already initialized constant VALID_VISA\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateways/spreedly_gateway.rb:5: warning: already initialized constant VALID_MASTERCARD\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateways/spreedly_gateway.rb:6: warning: already initialized constant GATEWAY_NOT_RESPONDING_VISA\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateways/spreedly_gateway.rb:7: warning: already initialized constant ERROR_VISA\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateways/spreedly_gateway.rb:8: warning: already initialized constant CHARGE_NOT_AUTHORIZED_VISA\nstarting acceptor `generate`\nstarting acceptor `runner`\nstarting acceptor `server`\nstarting acceptor `console`\nstarting spawner `prerake`\n--------------------------------------------------------------------------------\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `block in require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:227:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:240:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:352:in `require_or_load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:493:in `load_missing_constant'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:183:in `block in const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/test/factories.rb:71:in `block (3 levels) in <top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:22:in `instance_eval'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:22:in `factory'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:28:in `block in factory'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:26:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:26:in `factory'\n/Users/ntalbott/git/spreedly/subscriptions/test/factories.rb:56:in `block in <top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:16:in `instance_eval'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:16:in `run'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/syntax/default.rb:7:in `define'\n/Users/ntalbott/git/spreedly/subscriptions/test/factories.rb:3:in `<top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:45:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/load_tracking.rb:36:in `load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:235:in `block in load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:227:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:235:in `load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/find_definitions.rb:16:in `block in find_definitions'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/find_definitions.rb:15:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl-2.5.1/lib/factory_girl/find_definitions.rb:15:in `find_definitions'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/factory_girl_rails-1.6.0/lib/factory_girl_rails/railtie.rb:26:in `block in <class:Railtie>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:34:in `call'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:34:in `execute_hook'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:43:in `block in run_load_hooks'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:42:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/lazy_load_hooks.rb:42:in `run_load_hooks'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application/finisher.rb:46:in `block in <module:Finisher>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:25:in `instance_exec'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:25:in `run'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:50:in `block in run_initializers'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:49:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:49:in `run_initializers'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:134:in `initialize!'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:77:in `method_missing'\n/Users/ntalbott/git/spreedly/subscriptions/config/environment.rb:3:in `<top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `block in require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `block in load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:599:in `new_constants_in'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:240:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:103:in `require_environment!'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/templates/rails.rb:74:in `block (5 levels) in <top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:15:in `call'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:15:in `each'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:15:in `after_setup'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:92:in `block in run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `fork'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:24:in `block in after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `each'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:95:in `block in run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `fork'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:24:in `block in after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `each'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/stage.rb:23:in `after_notify'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:95:in `block in run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `fork'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server/forked_process.rb:86:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/server.rb:53:in `run'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/zeus/cli.rb:45:in `start'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/lib/thrud.rb:94:in `start'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/lib/ruby/gems/1.9.1/gems/zeus-0.4.4/bin/zeus:4:in `<top (required)>'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/bin/zeus:19:in `load'\n/Users/ntalbott/.rbenv/versions/1.9.3-p125/bin/zeus:19:in `<main>'\nstarting acceptor `rake`\nstarting spawner `test_helper`\nstarting acceptor `testrb`\n```\n. Sure thing:\n\n```\nntalbott@joshua:~/git/spreedly/subscriptions$ RAILS_ENV=test bundle exec rails console\n--------------------------------------------------------------------------------\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `block in require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:227:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:240:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateway.rb:384:in `block in <top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateway.rb:384:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/payment_gateway.rb:384:in `<top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `block in require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:227:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:240:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/subscriber.rb:451:in `<class:Subscriber>'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/subscriber.rb:3:in `<top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `block in require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:227:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:240:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:352:in `require_or_load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:493:in `load_missing_constant'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:183:in `block in const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:505:in `load_missing_constant'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:183:in `block in const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:181:in `const_missing'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/invoice.rb:3:in `<class:Invoice>'\n/Users/ntalbott/git/spreedly/subscriptions/app/models/invoice.rb:1:in `<top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `block in require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:227:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:240:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:352:in `require_or_load'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:306:in `depend_on'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:216:in `require_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/engine.rb:138:in `block (2 levels) in eager_load!'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/engine.rb:137:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/engine.rb:137:in `block in eager_load!'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/engine.rb:135:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/engine.rb:135:in `eager_load!'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:108:in `eager_load!'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application/finisher.rb:41:in `block in <module:Finisher>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:25:in `instance_exec'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:25:in `run'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:50:in `block in run_initializers'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:49:in `each'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/initializable.rb:49:in `run_initializers'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:134:in `initialize!'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:77:in `method_missing'\n/Users/ntalbott/git/spreedly/subscriptions/config/environment.rb:3:in `<top (required)>'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:244:in `block in require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `block in load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:599:in `new_constants_in'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:225:in `load_dependency'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/activesupport-3.0.10/lib/active_support/dependencies.rb:240:in `require'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/application.rb:103:in `require_environment!'\n/Users/ntalbott/git/spreedly/subscriptions/vendor/ruby/1.9.1/gems/railties-3.0.10/lib/rails/commands.rb:22:in `<top (required)>'\nscript/rails:6:in `require'\nscript/rails:6:in `<main>'\nLoading test environment (Rails 3.0.10)\nirb(main):001:0> \n```\n. Just read back through this, and wanted to confirm your #3 question/statement above: payment_gateway.rb does do a load on spreedly_gateway.rb.\n. ",
    "felixbuenemann": "+1\n. +1\n. ",
    "davidcpell": "Just ran into this issue. I'm using a later version of `pry-rails` (0.3.4) and getting the original problem described.\n. Just ran into this issue. I'm using a later version of `pry-rails` (0.3.4) and getting the original problem described.\n. ",
    "jumski": "+1 on this!\n. cloned master branch, then:\n\n``` bash\ncd zeus/rubygem\ngem build zeus.gemspec\ngem install zeus-0.0.0.gem\n```\n\nbut without luck, got:\n\n```\n\nBuilding native extensions.  This could take a while...\nERROR:  Error installing zeus-0.0.0.gem:\n        ERROR: Failed to build gem native extension.\n\n        /home/jumski/.rvm/rubies/ruby-1.9.3-p194-perf/bin/ruby extconf.rb\n\nmake\nmake: *** No rule to make target `inotify-wrapper.o', needed by `inotify-wrapper'.  Stop.\n```\n\ndo i met the requirements?\n\n```\n laptop rubygem [master] $ dpkg -l *inotify*\nDesired=Unknown/Install/Remove/Purge/Hold\n| Status=Not/Inst/Conf-files/Unpacked/halF-conf/Half-inst/trig-aWait/Trig-pend\n|/ Err?=(none)/Reinst-required (Status,Err: uppercase=bad)\n||/ Name                         Version                      Description\n+++-============================-============================-========================================================================\nii  inotify-tools                3.13-3                       command-line programs providing a simple interface to inotify\nun  libinotifytools-dev          <none>                       (no description available)\nii  libinotifytools0             3.13-3                       utility wrapper around inotify\nii  libinotifytools0-dev         3.13-3                       Development library and header files for libinotifytools0\n```\n. ok ill wait for the release - dunno how to build it without xcode ;P\n. fast reply burke :p\nill go check it right away\n. it rocks :) thanks\n. I started testing on 0.13.1 and havve problems, so i upgraded to 0.13.2. I can only run specs with `relative_path:line` combo :-(\n. +1 on this!\n. cloned master branch, then:\n\n``` bash\ncd zeus/rubygem\ngem build zeus.gemspec\ngem install zeus-0.0.0.gem\n```\n\nbut without luck, got:\n\n```\n\nBuilding native extensions.  This could take a while...\nERROR:  Error installing zeus-0.0.0.gem:\n        ERROR: Failed to build gem native extension.\n\n        /home/jumski/.rvm/rubies/ruby-1.9.3-p194-perf/bin/ruby extconf.rb\n\nmake\nmake: *** No rule to make target `inotify-wrapper.o', needed by `inotify-wrapper'.  Stop.\n```\n\ndo i met the requirements?\n\n```\n laptop rubygem [master] $ dpkg -l *inotify*\nDesired=Unknown/Install/Remove/Purge/Hold\n| Status=Not/Inst/Conf-files/Unpacked/halF-conf/Half-inst/trig-aWait/Trig-pend\n|/ Err?=(none)/Reinst-required (Status,Err: uppercase=bad)\n||/ Name                         Version                      Description\n+++-============================-============================-========================================================================\nii  inotify-tools                3.13-3                       command-line programs providing a simple interface to inotify\nun  libinotifytools-dev          <none>                       (no description available)\nii  libinotifytools0             3.13-3                       utility wrapper around inotify\nii  libinotifytools0-dev         3.13-3                       Development library and header files for libinotifytools0\n```\n. ok ill wait for the release - dunno how to build it without xcode ;P\n. fast reply burke :p\nill go check it right away\n. it rocks :) thanks\n. I started testing on 0.13.1 and havve problems, so i upgraded to 0.13.2. I can only run specs with `relative_path:line` combo :-(\n. ",
    "rogercampos": "+1 for this too\n. Great news!\n. I'm also experiencing random crashes of zeus, a copy of the dump:\n\n```\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x4 pc=0x80cb3cd]\n\ngoroutine 9480 [running]:\nsync/atomic.CompareAndSwapUint32(0x4, 0x0, 0x1, 0xb748ef3b, 0xb748ef48, ...)\n    /usr/local/go/src/pkg/sync/atomic/asm_386.s:13 +0xc\nsync.(*Mutex).Lock(0x4, 0x807120b)\n    /usr/local/go/src/pkg/sync/mutex.go:40 +0x39\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadMessage(0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:121 +0x3d\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).handleMessages(0x18730d00, 0x12)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:343 +0x2e\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x95\n\ngoroutine 1 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster.Run(0xbfa74501, 0x5)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:51 +0x311\nmain.main()\n    /Users/burke/go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:37 +0x25e\n\ngoroutine 2 [syscall]:\ncreated by runtime.main\n    /usr/local/go/src/pkg/runtime/proc.c:221\n\ngoroutine 3 [syscall]:\nos/signal.loop()\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:20 +0x1f\ncreated by os/signal.init\u00b71\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:26 +0x32\n\ngoroutine 4 [select]:\ngithub.com/burke/zeus/go/zeusmaster.StartSlaveMonitor(0x1872a540, 0x1872de10, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:48 +0x26f\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:32 +0x167\n\ngoroutine 5 [select]:\ngithub.com/burke/zeus/go/zeusmaster.StartClientHandler(0x1872a540, 0x1872dde0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:42 +0x1e3\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:33 +0x188\n\ngoroutine 6 [select]:\ngithub.com/burke/zeus/go/zeusmaster.StartFileMonitor(0x1872a540, 0x1872ddb0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:37 +0x19d\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:34 +0x1a9\n\ngoroutine 7 [runnable]:\nsyscall.Syscall()\n    /usr/local/go/src/pkg/syscall/asm_linux_386.s:33 +0x57\ngithub.com/burke/ttyutils.ioctl(0x1, 0x5413, 0x18812f48, 0x20, 0x64, ...)\n    /Users/burke/go/src/github.com/burke/ttyutils/ttyutils_linux.go:47 +0x41\ngithub.com/burke/ttyutils.Winsize(0x18700080, 0x20, 0x0)\n    /Users/burke/go/src/github.com/burke/ttyutils/ttyutils_linux.go:24 +0x63\ngithub.com/burke/zeus/go/zeusmaster.(*StatusChart).lengthOfOutput(0x1872d360, 0x1, 0x1)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:123 +0x2b\ngithub.com/burke/zeus/go/zeusmaster.(*StatusChart).draw(0x1872d360, 0x18729fc0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:104 +0x6b\ngithub.com/burke/zeus/go/zeusmaster.StartStatusChart(0x1872a540, 0x1872dd80, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:70 +0x3d5\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:35 +0x1ca\n\ngoroutine 8 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster._func_005(0x18700380, 0x18700358, 0x18700360, 0x18700368, 0x18700370, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:42 +0x33\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:44 +0x2c4\n\ngoroutine 9 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster._func_006(0x18700358, 0x18700360, 0x18700368, 0x18700370, 0x18700378, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:47 +0x33\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:49 +0x2f9\n\ngoroutine 10 [finalizer wait]:\ncreated by runtime.gc\n    /usr/local/go/src/pkg/runtime/mgc0.c:882\n\ngoroutine 11 [syscall]:\ncreated by addtimer\n    /usr/local/go/src/pkg/runtime/ztime_386.c:72\n\ngoroutine 12 [syscall]:\nsyscall.Syscall6()\n    /usr/local/go/src/pkg/syscall/asm_linux_386.s:46 +0x27\nsyscall.EpollWait(0xf, 0x1879e008, 0xa, 0xa, 0xffffffff, ...)\n    /usr/local/go/src/pkg/syscall/zerrors_linux_386.go:1780 +0x7d\nnet.(*pollster).WaitFD(0x1879e000, 0x1872cbd0, 0x0, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/net/fd_linux.go:146 +0x12b\nnet.(*pollServer).Run(0x1872cbd0, 0x0)\n    /usr/local/go/src/pkg/net/fd.go:236 +0xdf\ncreated by net.newPollServer\n    /usr/local/go/src/pkg/net/newpollserver.go:35 +0x308\n\ngoroutine 13 [chan receive]:\nnet.(*pollServer).WaitRead(0x1872cbd0, 0x1879c230, 0x1872a4e0, 0xb)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x75\nnet.(*netFD).ReadMsg(0x1879c230, 0x188f2800, 0x400, 0x400, 0x18a4ca60, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x20a\nnet.(*UnixConn).ReadMsgUnix(0x18700568, 0x188f2800, 0x400, 0x400, 0x18a4ca60, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0xe7\ngithub.com/burke/zeus/go/unixsocket.(*Usock).readFromSocket(0x1879f870, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xd2\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadFD(0x1879f870, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:109 +0x90\ngithub.com/burke/zeus/go/zeusmaster._func_004(0x187003a8, 0x18700570, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:35 +0x2b\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:41 +0x13f\n\ngoroutine 14 [runnable]:\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState(0x18730d80, 0x1, 0x811e71c)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x218\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0x18730d80, 0x187003a0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:129 +0x1a1\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x197\n\ngoroutine 15 [semacquire]:\nsync.runtime_Semacquire(0x18700320, 0x18700320)\n    /usr/local/go/src/pkg/runtime/zsema_386.c:146 +0x29\nsync.(*Cond).Wait(0x1872a7e0, 0x1)\n    /usr/local/go/src/pkg/sync/cond.go:67 +0xa8\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).WaitUntilReadyOrCrashed(0x18730b80, 0x807203a)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:64 +0x103\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doWaitingState(0x18730b00, 0x1, 0x811e890)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:148 +0x4e\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0x18730b00, 0x187003a0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:121 +0x249\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x197\n\ngoroutine 16 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doUnbootedState(0x18730d00, 0x187003a0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:169 +0x2b9\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0x18730d00, 0x187003a0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:123 +0x1f5\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x197\n\ngoroutine 17 [select]:\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState(0x18730e00, 0x1, 0x811e71c)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x218\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0x18730e00, 0x187003a0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:129 +0x1a1\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x197\n\ngoroutine 18 [chan receive]:\nnet.(*pollServer).WaitRead(0x1872cbd0, 0x1895a7e0, 0x1872a4e0, 0xb)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x75\nnet.(*netFD).ReadMsg(0x1895a7e0, 0x1897c800, 0x400, 0x400, 0x1887c0a0, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x20a\nnet.(*UnixConn).ReadMsgUnix(0x187005c8, 0x1897c800, 0x400, 0x400, 0x1887c0a0, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0xe7\ngithub.com/burke/zeus/go/unixsocket.(*Usock).readFromSocket(0x18991c00, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xd2\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadMessage(0x18991c00, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xaf\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doBootingState(0x18730b80, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:185 +0x36\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0x18730b80, 0x187003a0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:125 +0xcf\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x197\n\ngoroutine 19 [semacquire]:\nsync.runtime_Semacquire(0x187000a0, 0x187000a0)\n    /usr/local/go/src/pkg/runtime/zsema_386.c:146 +0x29\nsync.(*Cond).Wait(0x1872a760, 0x1)\n    /usr/local/go/src/pkg/sync/cond.go:67 +0xa8\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).WaitUntilReadyOrCrashed(0x18730d00, 0x807203a)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:64 +0x103\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doWaitingState(0x18730c80, 0x1, 0x811e890)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:148 +0x4e\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0x18730c80, 0x187003a0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:121 +0x249\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x197\n\ngoroutine 20 [chan receive]:\nnet.(*pollServer).WaitRead(0x1872cbd0, 0x1873ee70, 0x1872a4e0, 0xb)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x75\nnet.(*netFD).accept(0x1873ee70, 0x80adb6c, 0x0, 0x1872a0e0, 0x18700170, ...)\n    /usr/local/go/src/pkg/net/fd.go:622 +0x199\nnet.(*UnixListener).AcceptUnix(0x1872e520, 0x1879fc60, 0x189a8c60)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:350 +0x46\ngithub.com/burke/zeus/go/zeusmaster._func_001(0x187003f0, 0x18700428, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:32 +0x2b\ncreated by github.com/burke/zeus/go/zeusmaster.StartClientHandler\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:39 +0x129\n\ngoroutine 21 [syscall]:\nsyscall.Syscall6()\n    /usr/local/go/src/pkg/syscall/asm_linux_386.s:46 +0x27\nsyscall.wait4(0x3a05, 0x18700730, 0x0, 0x187b2320, 0x1, ...)\n    /usr/local/go/src/pkg/syscall/zerrors_linux_386.go:1598 +0x63\nsyscall.Wait4(0x3a05, 0xb7763e18, 0x0, 0x187b2320, 0x187b1090, ...)\n    /usr/local/go/src/pkg/syscall/syscall_linux.go:178 +0x5b\nos.(*Process).wait(0x1872e830, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec_unix.go:22 +0xae\nos.(*Process).Wait(0x1872e830, 0x4, 0x81db040)\n    /usr/local/go/src/pkg/os/doc.go:43 +0x29\nos/exec.(*Cmd).Wait(0x187af000, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:302 +0x130\nos/exec.(*Cmd).Run(0x187af000, 0x81066a8, 0x187a4480)\n    /usr/local/go/src/pkg/os/exec/exec.go:226 +0x67\nos/exec.(*Cmd).CombinedOutput(0x187af000, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:346 +0x1a8\ngithub.com/burke/zeus/go/zeusmaster.babysitRootProcess(0x187af000, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:328 +0x29\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doUnbootedState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:164 +0x288\n\ngoroutine 22 [syscall]:\nsyscall.Syscall()\n    /usr/local/go/src/pkg/syscall/asm_linux_386.s:20 +0x1f\nsyscall.Read(0xb, 0x187b6000, 0x800, 0x800, 0x1, ...)\n    /usr/local/go/src/pkg/syscall/zerrors_linux_386.go:2136 +0x61\nos.(*File).read(0x187004d0, 0x187b6000, 0x800, 0x800, 0x1, ...)\n    /usr/local/go/src/pkg/os/file_unix.go:163 +0x44\nos.(*File).Read(0x187004d0, 0x187b6000, 0x800, 0x800, 0x18700740, ...)\n    /usr/local/go/src/pkg/os/file.go:95 +0x67\ngithub.com/burke/zeus/go/zeusmaster._func_002()\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:80 +0x7a\ncreated by github.com/burke/zeus/go/zeusmaster.startWrapper\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:90 +0x196\n\ngoroutine 23 [syscall]:\nsyscall.Syscall6()\n    /usr/local/go/src/pkg/syscall/asm_linux_386.s:46 +0x27\nsyscall.wait4(0x3a03, 0x187005e8, 0x0, 0x1872bd70, 0x1, ...)\n    /usr/local/go/src/pkg/syscall/zerrors_linux_386.go:1598 +0x63\nsyscall.Wait4(0x3a03, 0xb7634ef8, 0x0, 0x1872bd70, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/syscall_linux.go:178 +0x5b\nos.(*Process).wait(0x1872e0c0, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec_unix.go:22 +0xae\nos.(*Process).Wait(0x1872e0c0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/doc.go:43 +0x29\nos/exec.(*Cmd).Wait(0x18778000, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:302 +0x130\ngithub.com/burke/zeus/go/zeusmaster._func_003(0x187003e8, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:93 +0x2b\ncreated by github.com/burke/zeus/go/zeusmaster.startWrapper\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:95 +0x1ab\n\ngoroutine 24 [syscall]:\nsyscall.Syscall()\n    /usr/local/go/src/pkg/syscall/asm_linux_386.s:20 +0x1f\nsyscall.Read(0x11, 0x18a7064a, 0x7b6, 0x7b6, 0xa1, ...)\n    /usr/local/go/src/pkg/syscall/zerrors_linux_386.go:2136 +0x61\nos.(*File).read(0x187006d0, 0x18a7064a, 0x7b6, 0x7b6, 0xa1, ...)\n    /usr/local/go/src/pkg/os/file_unix.go:163 +0x44\nos.(*File).Read(0x187006d0, 0x18a7064a, 0x7b6, 0x7b6, 0xa1, ...)\n    /usr/local/go/src/pkg/os/file.go:95 +0x67\nbytes.(*Buffer).ReadFrom(0x187a4480, 0x1872a460, 0x187006d0, 0x64a, 0x0, ...)\n    /usr/local/go/src/pkg/bytes/buffer.go:153 +0x1d1\nio.Copy(0x1872a960, 0x187a4480, 0x1872a460, 0x187006d0, 0x0, ...)\n    /usr/local/go/src/pkg/io/io.go:340 +0x86\nos/exec._func_003(0x187005d0, 0x187005d8, 0x80cae0b, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/os/exec/exec.go:201 +0x57\nos/exec._func_004(0x18700418, 0x187b1060, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:268 +0x23\ncreated by os/exec.(*Cmd).Start\n    /usr/local/go/src/pkg/os/exec/exec.go:269 +0x588\n\ngoroutine 26 [chan receive]:\nnet.(*pollServer).WaitRead(0x1872cbd0, 0x187e60e0, 0x1872a4e0, 0xb)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x75\nnet.(*netFD).ReadMsg(0x187e60e0, 0x187fb400, 0x400, 0x400, 0x187cf6c0, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x20a\nnet.(*UnixConn).ReadMsgUnix(0x18700910, 0x187fb400, 0x400, 0x400, 0x187cf6c0, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0xe7\ngithub.com/burke/zeus/go/unixsocket.(*Usock).readFromSocket(0x187d8600, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xd2\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadMessage(0x187d8600, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xaf\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).handleMessages(0x18730e00, 0x3)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:343 +0x2e\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x95\n\ngoroutine 415 [chan receive]:\nnet.(*pollServer).WaitRead(0x1872cbd0, 0x1882b620, 0x1872a4e0, 0xb)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x75\nnet.(*netFD).ReadMsg(0x1882b620, 0x187d5c00, 0x400, 0x400, 0x187d36a0, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x20a\nnet.(*UnixConn).ReadMsgUnix(0x18700e10, 0x187d5c00, 0x400, 0x400, 0x187d36a0, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0xe7\ngithub.com/burke/zeus/go/unixsocket.(*Usock).readFromSocket(0x187d8300, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xd2\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadMessage(0x187d8300, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xaf\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).handleMessages(0x18730d80, 0x3)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:343 +0x2e\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x95\n```\n. +1 for this too\n. Great news!\n. I'm also experiencing random crashes of zeus, a copy of the dump:\n\n```\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x4 pc=0x80cb3cd]\n\ngoroutine 9480 [running]:\nsync/atomic.CompareAndSwapUint32(0x4, 0x0, 0x1, 0xb748ef3b, 0xb748ef48, ...)\n    /usr/local/go/src/pkg/sync/atomic/asm_386.s:13 +0xc\nsync.(*Mutex).Lock(0x4, 0x807120b)\n    /usr/local/go/src/pkg/sync/mutex.go:40 +0x39\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadMessage(0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:121 +0x3d\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).handleMessages(0x18730d00, 0x12)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:343 +0x2e\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x95\n\ngoroutine 1 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster.Run(0xbfa74501, 0x5)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:51 +0x311\nmain.main()\n    /Users/burke/go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:37 +0x25e\n\ngoroutine 2 [syscall]:\ncreated by runtime.main\n    /usr/local/go/src/pkg/runtime/proc.c:221\n\ngoroutine 3 [syscall]:\nos/signal.loop()\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:20 +0x1f\ncreated by os/signal.init\u00b71\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:26 +0x32\n\ngoroutine 4 [select]:\ngithub.com/burke/zeus/go/zeusmaster.StartSlaveMonitor(0x1872a540, 0x1872de10, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:48 +0x26f\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:32 +0x167\n\ngoroutine 5 [select]:\ngithub.com/burke/zeus/go/zeusmaster.StartClientHandler(0x1872a540, 0x1872dde0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:42 +0x1e3\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:33 +0x188\n\ngoroutine 6 [select]:\ngithub.com/burke/zeus/go/zeusmaster.StartFileMonitor(0x1872a540, 0x1872ddb0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:37 +0x19d\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:34 +0x1a9\n\ngoroutine 7 [runnable]:\nsyscall.Syscall()\n    /usr/local/go/src/pkg/syscall/asm_linux_386.s:33 +0x57\ngithub.com/burke/ttyutils.ioctl(0x1, 0x5413, 0x18812f48, 0x20, 0x64, ...)\n    /Users/burke/go/src/github.com/burke/ttyutils/ttyutils_linux.go:47 +0x41\ngithub.com/burke/ttyutils.Winsize(0x18700080, 0x20, 0x0)\n    /Users/burke/go/src/github.com/burke/ttyutils/ttyutils_linux.go:24 +0x63\ngithub.com/burke/zeus/go/zeusmaster.(*StatusChart).lengthOfOutput(0x1872d360, 0x1, 0x1)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:123 +0x2b\ngithub.com/burke/zeus/go/zeusmaster.(*StatusChart).draw(0x1872d360, 0x18729fc0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:104 +0x6b\ngithub.com/burke/zeus/go/zeusmaster.StartStatusChart(0x1872a540, 0x1872dd80, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:70 +0x3d5\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:35 +0x1ca\n\ngoroutine 8 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster._func_005(0x18700380, 0x18700358, 0x18700360, 0x18700368, 0x18700370, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:42 +0x33\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:44 +0x2c4\n\ngoroutine 9 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster._func_006(0x18700358, 0x18700360, 0x18700368, 0x18700370, 0x18700378, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:47 +0x33\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:49 +0x2f9\n\ngoroutine 10 [finalizer wait]:\ncreated by runtime.gc\n    /usr/local/go/src/pkg/runtime/mgc0.c:882\n\ngoroutine 11 [syscall]:\ncreated by addtimer\n    /usr/local/go/src/pkg/runtime/ztime_386.c:72\n\ngoroutine 12 [syscall]:\nsyscall.Syscall6()\n    /usr/local/go/src/pkg/syscall/asm_linux_386.s:46 +0x27\nsyscall.EpollWait(0xf, 0x1879e008, 0xa, 0xa, 0xffffffff, ...)\n    /usr/local/go/src/pkg/syscall/zerrors_linux_386.go:1780 +0x7d\nnet.(*pollster).WaitFD(0x1879e000, 0x1872cbd0, 0x0, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/net/fd_linux.go:146 +0x12b\nnet.(*pollServer).Run(0x1872cbd0, 0x0)\n    /usr/local/go/src/pkg/net/fd.go:236 +0xdf\ncreated by net.newPollServer\n    /usr/local/go/src/pkg/net/newpollserver.go:35 +0x308\n\ngoroutine 13 [chan receive]:\nnet.(*pollServer).WaitRead(0x1872cbd0, 0x1879c230, 0x1872a4e0, 0xb)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x75\nnet.(*netFD).ReadMsg(0x1879c230, 0x188f2800, 0x400, 0x400, 0x18a4ca60, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x20a\nnet.(*UnixConn).ReadMsgUnix(0x18700568, 0x188f2800, 0x400, 0x400, 0x18a4ca60, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0xe7\ngithub.com/burke/zeus/go/unixsocket.(*Usock).readFromSocket(0x1879f870, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xd2\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadFD(0x1879f870, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:109 +0x90\ngithub.com/burke/zeus/go/zeusmaster._func_004(0x187003a8, 0x18700570, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:35 +0x2b\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:41 +0x13f\n\ngoroutine 14 [runnable]:\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState(0x18730d80, 0x1, 0x811e71c)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x218\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0x18730d80, 0x187003a0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:129 +0x1a1\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x197\n\ngoroutine 15 [semacquire]:\nsync.runtime_Semacquire(0x18700320, 0x18700320)\n    /usr/local/go/src/pkg/runtime/zsema_386.c:146 +0x29\nsync.(*Cond).Wait(0x1872a7e0, 0x1)\n    /usr/local/go/src/pkg/sync/cond.go:67 +0xa8\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).WaitUntilReadyOrCrashed(0x18730b80, 0x807203a)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:64 +0x103\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doWaitingState(0x18730b00, 0x1, 0x811e890)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:148 +0x4e\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0x18730b00, 0x187003a0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:121 +0x249\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x197\n\ngoroutine 16 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doUnbootedState(0x18730d00, 0x187003a0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:169 +0x2b9\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0x18730d00, 0x187003a0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:123 +0x1f5\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x197\n\ngoroutine 17 [select]:\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState(0x18730e00, 0x1, 0x811e71c)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x218\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0x18730e00, 0x187003a0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:129 +0x1a1\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x197\n\ngoroutine 18 [chan receive]:\nnet.(*pollServer).WaitRead(0x1872cbd0, 0x1895a7e0, 0x1872a4e0, 0xb)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x75\nnet.(*netFD).ReadMsg(0x1895a7e0, 0x1897c800, 0x400, 0x400, 0x1887c0a0, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x20a\nnet.(*UnixConn).ReadMsgUnix(0x187005c8, 0x1897c800, 0x400, 0x400, 0x1887c0a0, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0xe7\ngithub.com/burke/zeus/go/unixsocket.(*Usock).readFromSocket(0x18991c00, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xd2\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadMessage(0x18991c00, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xaf\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doBootingState(0x18730b80, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:185 +0x36\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0x18730b80, 0x187003a0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:125 +0xcf\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x197\n\ngoroutine 19 [semacquire]:\nsync.runtime_Semacquire(0x187000a0, 0x187000a0)\n    /usr/local/go/src/pkg/runtime/zsema_386.c:146 +0x29\nsync.(*Cond).Wait(0x1872a760, 0x1)\n    /usr/local/go/src/pkg/sync/cond.go:67 +0xa8\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).WaitUntilReadyOrCrashed(0x18730d00, 0x807203a)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:64 +0x103\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doWaitingState(0x18730c80, 0x1, 0x811e890)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:148 +0x4e\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0x18730c80, 0x187003a0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:121 +0x249\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x197\n\ngoroutine 20 [chan receive]:\nnet.(*pollServer).WaitRead(0x1872cbd0, 0x1873ee70, 0x1872a4e0, 0xb)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x75\nnet.(*netFD).accept(0x1873ee70, 0x80adb6c, 0x0, 0x1872a0e0, 0x18700170, ...)\n    /usr/local/go/src/pkg/net/fd.go:622 +0x199\nnet.(*UnixListener).AcceptUnix(0x1872e520, 0x1879fc60, 0x189a8c60)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:350 +0x46\ngithub.com/burke/zeus/go/zeusmaster._func_001(0x187003f0, 0x18700428, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:32 +0x2b\ncreated by github.com/burke/zeus/go/zeusmaster.StartClientHandler\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:39 +0x129\n\ngoroutine 21 [syscall]:\nsyscall.Syscall6()\n    /usr/local/go/src/pkg/syscall/asm_linux_386.s:46 +0x27\nsyscall.wait4(0x3a05, 0x18700730, 0x0, 0x187b2320, 0x1, ...)\n    /usr/local/go/src/pkg/syscall/zerrors_linux_386.go:1598 +0x63\nsyscall.Wait4(0x3a05, 0xb7763e18, 0x0, 0x187b2320, 0x187b1090, ...)\n    /usr/local/go/src/pkg/syscall/syscall_linux.go:178 +0x5b\nos.(*Process).wait(0x1872e830, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec_unix.go:22 +0xae\nos.(*Process).Wait(0x1872e830, 0x4, 0x81db040)\n    /usr/local/go/src/pkg/os/doc.go:43 +0x29\nos/exec.(*Cmd).Wait(0x187af000, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:302 +0x130\nos/exec.(*Cmd).Run(0x187af000, 0x81066a8, 0x187a4480)\n    /usr/local/go/src/pkg/os/exec/exec.go:226 +0x67\nos/exec.(*Cmd).CombinedOutput(0x187af000, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:346 +0x1a8\ngithub.com/burke/zeus/go/zeusmaster.babysitRootProcess(0x187af000, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:328 +0x29\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doUnbootedState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:164 +0x288\n\ngoroutine 22 [syscall]:\nsyscall.Syscall()\n    /usr/local/go/src/pkg/syscall/asm_linux_386.s:20 +0x1f\nsyscall.Read(0xb, 0x187b6000, 0x800, 0x800, 0x1, ...)\n    /usr/local/go/src/pkg/syscall/zerrors_linux_386.go:2136 +0x61\nos.(*File).read(0x187004d0, 0x187b6000, 0x800, 0x800, 0x1, ...)\n    /usr/local/go/src/pkg/os/file_unix.go:163 +0x44\nos.(*File).Read(0x187004d0, 0x187b6000, 0x800, 0x800, 0x18700740, ...)\n    /usr/local/go/src/pkg/os/file.go:95 +0x67\ngithub.com/burke/zeus/go/zeusmaster._func_002()\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:80 +0x7a\ncreated by github.com/burke/zeus/go/zeusmaster.startWrapper\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:90 +0x196\n\ngoroutine 23 [syscall]:\nsyscall.Syscall6()\n    /usr/local/go/src/pkg/syscall/asm_linux_386.s:46 +0x27\nsyscall.wait4(0x3a03, 0x187005e8, 0x0, 0x1872bd70, 0x1, ...)\n    /usr/local/go/src/pkg/syscall/zerrors_linux_386.go:1598 +0x63\nsyscall.Wait4(0x3a03, 0xb7634ef8, 0x0, 0x1872bd70, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/syscall_linux.go:178 +0x5b\nos.(*Process).wait(0x1872e0c0, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec_unix.go:22 +0xae\nos.(*Process).Wait(0x1872e0c0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/doc.go:43 +0x29\nos/exec.(*Cmd).Wait(0x18778000, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:302 +0x130\ngithub.com/burke/zeus/go/zeusmaster._func_003(0x187003e8, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:93 +0x2b\ncreated by github.com/burke/zeus/go/zeusmaster.startWrapper\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:95 +0x1ab\n\ngoroutine 24 [syscall]:\nsyscall.Syscall()\n    /usr/local/go/src/pkg/syscall/asm_linux_386.s:20 +0x1f\nsyscall.Read(0x11, 0x18a7064a, 0x7b6, 0x7b6, 0xa1, ...)\n    /usr/local/go/src/pkg/syscall/zerrors_linux_386.go:2136 +0x61\nos.(*File).read(0x187006d0, 0x18a7064a, 0x7b6, 0x7b6, 0xa1, ...)\n    /usr/local/go/src/pkg/os/file_unix.go:163 +0x44\nos.(*File).Read(0x187006d0, 0x18a7064a, 0x7b6, 0x7b6, 0xa1, ...)\n    /usr/local/go/src/pkg/os/file.go:95 +0x67\nbytes.(*Buffer).ReadFrom(0x187a4480, 0x1872a460, 0x187006d0, 0x64a, 0x0, ...)\n    /usr/local/go/src/pkg/bytes/buffer.go:153 +0x1d1\nio.Copy(0x1872a960, 0x187a4480, 0x1872a460, 0x187006d0, 0x0, ...)\n    /usr/local/go/src/pkg/io/io.go:340 +0x86\nos/exec._func_003(0x187005d0, 0x187005d8, 0x80cae0b, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/os/exec/exec.go:201 +0x57\nos/exec._func_004(0x18700418, 0x187b1060, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:268 +0x23\ncreated by os/exec.(*Cmd).Start\n    /usr/local/go/src/pkg/os/exec/exec.go:269 +0x588\n\ngoroutine 26 [chan receive]:\nnet.(*pollServer).WaitRead(0x1872cbd0, 0x187e60e0, 0x1872a4e0, 0xb)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x75\nnet.(*netFD).ReadMsg(0x187e60e0, 0x187fb400, 0x400, 0x400, 0x187cf6c0, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x20a\nnet.(*UnixConn).ReadMsgUnix(0x18700910, 0x187fb400, 0x400, 0x400, 0x187cf6c0, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0xe7\ngithub.com/burke/zeus/go/unixsocket.(*Usock).readFromSocket(0x187d8600, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xd2\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadMessage(0x187d8600, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xaf\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).handleMessages(0x18730e00, 0x3)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:343 +0x2e\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x95\n\ngoroutine 415 [chan receive]:\nnet.(*pollServer).WaitRead(0x1872cbd0, 0x1882b620, 0x1872a4e0, 0xb)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x75\nnet.(*netFD).ReadMsg(0x1882b620, 0x187d5c00, 0x400, 0x400, 0x187d36a0, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x20a\nnet.(*UnixConn).ReadMsgUnix(0x18700e10, 0x187d5c00, 0x400, 0x400, 0x187d36a0, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0xe7\ngithub.com/burke/zeus/go/unixsocket.(*Usock).readFromSocket(0x187d8300, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xd2\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadMessage(0x187d8300, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xaf\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).handleMessages(0x18730d80, 0x3)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:343 +0x2e\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x95\n```\n. ",
    "xamut": "Awesome app! +1 for linux support :neckbeard:\n. Awesome app! +1 for linux support :neckbeard:\n. ",
    "lda": "+1\n. +1\n. ",
    "gshilin": "+1\n. +1\n. ",
    "knewter": "+2 ?\n. Awesome :)  Thanks\n. +2 ?\n. Awesome :)  Thanks\n. ",
    "designium": "I don't know if this is still an issue, but I had a pre-compilation issue by having the_rubyracer, execjs gems in my Gemfile.\n\nIf you already have node.js in your server running, you don't need rubyracer. With rubyracer in your gemfile, sprocket will not be able to compile.\n\nJust try removing the javascript gems, bundle update and cap deploy.\n. I don't know if this is still an issue, but I had a pre-compilation issue by having the_rubyracer, execjs gems in my Gemfile.\n\nIf you already have node.js in your server running, you don't need rubyracer. With rubyracer in your gemfile, sprocket will not be able to compile.\n\nJust try removing the javascript gems, bundle update and cap deploy.\n. ",
    "Jamedjo": "I had the same issue, but it was fine with `zeus rake assets:precompile:all`. Without the `all` it added `RAILS_ENV` and `RAILS_GROUP` which might have been part of the problem.\n\n```\nzeus rake assets:precompile --trace\n** Invoke assets:precompile (first_time)\n** Execute assets:precompile\n/home/james/.rvm/rubies/ruby-1.9.3-p385-perf/bin/ruby zeus command: rake assets:precompile:all RAILS_ENV=development RAILS_GROUPS=assets --trace\n/home/james/.rvm/rubies/ruby-1.9.3-p385-perf/bin/ruby: No such file or directory -- zeus command: rake (LoadError)\nrake aborted!\nCommand failed with status (1): [/home/james/.rvm/rubies/ruby-1.9.3-p385-pe...]\n/home/myname/.rvm/rubies/ruby-1.9.3-p385-perf/lib/ruby/1.9.1/rake/file_utils.rb:53:in `block in create_shell_runner'\n```\n\nodd that it mentions ruby 1.9.1 which isn't installed.\n. Fixed with custom task to add `Bundler.require(:assets)` and `ENV['RAILS_GROUPS'] = \"assets\"`\nhttps://gist.github.com/Jamedjo/5242420\n. I had the same issue, but it was fine with `zeus rake assets:precompile:all`. Without the `all` it added `RAILS_ENV` and `RAILS_GROUP` which might have been part of the problem.\n\n```\nzeus rake assets:precompile --trace\n** Invoke assets:precompile (first_time)\n** Execute assets:precompile\n/home/james/.rvm/rubies/ruby-1.9.3-p385-perf/bin/ruby zeus command: rake assets:precompile:all RAILS_ENV=development RAILS_GROUPS=assets --trace\n/home/james/.rvm/rubies/ruby-1.9.3-p385-perf/bin/ruby: No such file or directory -- zeus command: rake (LoadError)\nrake aborted!\nCommand failed with status (1): [/home/james/.rvm/rubies/ruby-1.9.3-p385-pe...]\n/home/myname/.rvm/rubies/ruby-1.9.3-p385-perf/lib/ruby/1.9.1/rake/file_utils.rb:53:in `block in create_shell_runner'\n```\n\nodd that it mentions ruby 1.9.1 which isn't installed.\n. Fixed with custom task to add `Bundler.require(:assets)` and `ENV['RAILS_GROUPS'] = \"assets\"`\nhttps://gist.github.com/Jamedjo/5242420\n. ",
    "apotonick": "I have the same issue with zeus-0.15.1 + Rails 3.1 when running `zeus rake assets:precompile`.\n\nThanks so much for zeus, it really takes the pain out of testing and maintaining old, horrible, slow and monolithic Rails apps! :heart: \n. I have the same issue with zeus-0.15.1 + Rails 3.1 when running `zeus rake assets:precompile`.\n\nThanks so much for zeus, it really takes the pain out of testing and maintaining old, horrible, slow and monolithic Rails apps! :heart: \n. ",
    "sideshowcoder": "Mh just tried this again on 0.15.10 and it seems to work fine, not sure if this is still relevant, if it is feel free to reopen.. Is this still valid? I was trying to reproduce but wasn't able to @burke did you fix that?\n. Yep definitely I thought I caught some problems with the last release but apparently not all still :(. Ok I think this is resolved so I'm gonna close it.. Is this still valid? wasn't able to reproduce this issue.\n. I tried reproducing this issue but wasn't able to, and there seem to be no issues about this otherwise so I am gonna close this for now. Happy to reopen if we get a test for it so :). \n. I guess we can close this. \n\nThis should work now by putting the socket file somewhere like /tmp/zeus.sock via \n\n``` shell\nexport ZEUSSOCK=/tmp/zeus.sock\n```\n\nAlso see [Using with vagrant](https://github.com/burke/zeus/wiki/Using-with-vagrant)\n. Where are you running zeus? which vm are you using? Just to be clear: zeus client and server need to run on the same box inside the vm since access to the socket can not be shared via network access. I am confused about the Windows 7 that's why I am asking.\n. Ok could you tell me which version of zeus you are running? I would like to investigate the issue further. \n. Could you try the newest version? 0.13.4.pre2\n. In the current release you can specify the location of the socket file via an env variable, so if you just put it somewhere known you can export the variable and zeus will know where to look no matter where you are inside the directory structure.\n. fixes #287 and #231 \n. In my tests it works fine, the specs seem to be broken even without the change for me. If this is merged I will update the README as well.\n. cool thanks!\n. You need to set the env var in case you need the Zeus sock to be located anywhere other than the current directory. In case you do both the Zeus client as well as the server need the env var. I wrote a wiki page on how to run this under Using with vagrant.\u00a0\n\nWas this the question?\n\nOn Wed, May 22, 2013 at 4:23 AM, bezelga notifications@github.com wrote:\n\n> the env var should is blank, when shold the env var be set?\n> Running `ZEUSSOCK=/tmp/zeus-myproj.sock zeus start` changed the error:\n> ![screen shot 2013-05-21 at 11 13 44 pm](https://f.cloud.github.com/assets/22406/546189/43897c4e-c285-11e2-91a8-0bb294ef9187.png)\n> \n> ```\n> $ zeus server\n> Can't connect to master. Run zeus start first.\n> ```\n> \n> About the version, I think it is OK. I've uninstalled, executed `rbenv rehash` to remove the shims then installed again and executed `rbenv rehash`.\n> \n> ## `which zeus: /home/vagrant/.rbenv/shims/zeus`\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/burke/zeus/pull/322#issuecomment-18253810\n. seems to work fine for me just trying it out. Any more infos about your setup, so I can try to reproduce this?\n. I'll give it a shot seems like a nice task to get more into the inner workings of zeus.\n. Long time since I've been using zeus but finally been using it again and this annoyed me enough so here we go #615 needs some cleanup but works locally for me to start out with.. I guess this is solved? feel free to reopen if this is still a thing.. You could add it to whatever stage you want in a custom plan for example\n\n``` ruby\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n\n  def test_helper\n    require_relative './lib/my_lib_file'\n    super\n  end\n\nend\n\nZeus.plan = CustomPlan.new\n```\n\nThis would cause zeus to listen to the file changes, same thing can be done at any other stage like default_bundle, or alike. Since lib is not autoloaded by rails anymore zeus does not know about it.\n. sorry didn't mean to close... does this work for you?\n. I am gonna close this now.\n. based on the fix by @YasuOza handle issue #269\n. Thanks for the feedback, I wasn't perfectly happy with it either but it works for now. I will see if there is a way around this with minitest-rails\n. I created a repository trying to reproduce this but I haven't run in the error, yet. @jeffdeville or @johngallagher could you look at the code and tell me what I am doing different and maybe clone and try it on your system? Would be awesome thanks :) \n\nhttps://github.com/sideshowcoder/zeus-issue-350\n. It is probably a combination of those, but hard to figure out who is breaking who. Maybe we can get an app which is having trouble by one of you guys integrating their gemfile in my example app.\n. This might be related to #269 which was solved by #348, maybe rails 4 installs the exit hook somewhere inside the the test framework itself? You might wanna try something like \n\n``` ruby\nMiniTest::Unit.class_variable_set(\"@@installed_at_exit\", true)\n```\n\nIsn't minitest the default test framework for rails 4 now?\n. Ok I will check this out, seems to be some weirdness with Rails 4, it's works when loading minitest-rails which really just adds the spec DSL, so wired.\n. I just setup a plain rails 4.rc1 test app with the current master version of zeus and am not able to reproduce this issue (so the same as  https://github.com/PryFlack/zeus_rails4_test_bug). Rails 4 uses minitest now, so if you don't have the newest version of zeus installed yet, you can just put this at the top of your test_helper.rb file in a vanilla rail 4 project \n\n``` ruby\nENV[\"RAILS_ENV\"] = \"test\"\nrequire File.expand_path('../../config/environment', __FILE__)\n\n# just for zeus this will prevent the test from running via rake test!\nrequire 'minitest/unit'\nMiniTest::Unit.class_variable_set('@@installed_at_exit', true)\n\nrequire 'rails/test_help'\n```\n\nSeems to me like you guys are using a version of zeus which does not handle the _@@installed_at_exit_, yet\n. You could add it to the custom_plan.rb like\n\n``` ruby\nclass CustomPlan < Zeus::Rails\n  def test_helper\n    require 'minitest/unit'\n    MiniTest::Unit.class_variable_set('@@installed_at_exit', true)\n    super\n  end\nend\n```\n\nthis is what zeus is doing internally now since 0.13.4pre2 \n. Code looks good to me. :+1: should merge this.\n. The problem is there is no difference between not being able to open a socket for writing because it is already used by another process or because there is just a stale file present. If we just delete the file in this case an already running installation of zeus will have it's socket deleted, which is not a great solution. \n\nAs a workaround for your situation I would suggest adding shutting down all zeus cleanly in a pre-suspend script. Like so\n\n``` shell\nps ax | awk '/zeus.*start/ { print $1} ' | tail -r | tail +2 | tail -r | xargs kill\n```\n. Thats true from the connecting side of things, even though it is not perfect to check a socket this way it works most of the time. \n\nThe problem is when creating a domain socket and it fails there is no way of knowing if there is still a instance running using this socket. Well, no way isn't technically true but you would have to jump a lot of hoops to get there, since listing all processes will not tell you unless you are running as root, and the zeus socket for any server can be created anywhere on the filesystem. Cleaning up after yourself seems like the common way to go.\n\nSo if you like to implement this I'll be happy to help you get going! And maybe there is a way to check this quickly I am not an socket wizard either, so I'll be glad to be proven wrong on this one. \n. Which version of zeus are you using? It works for me with 0.13.4.pre2 under ruby 2.0.0-p195.\n\nI tried to reproduce it like so \n\n``` shell\nzeus rspec ./spec/models1 ./spec/models2 ./spec/models3 ./spec/models4 ./spec/models5 ./spec/models6 ./spec/models7 ./spec/models8 ./spec/models9 ./spec/models10 ./spec/models11 ./spec/models12 ./spec/models13 ./spec/models14 ./spec/models15 ./spec/models16 ./spec/models17 ./spec/models18 ./spec/models19 ./spec/models20 ./spec/models21 ./spec/models22 ./spec/models23 ./spec/models24 ./spec/models25 ./spec/models26 ./spec/models27 ./spec/models28 ./spec/models29 ./spec/models30 ./spec/models31 ./spec/models32 ./spec/models33 ./spec/models34 ./spec/models35 ./spec/models36 ./spec/models37 ./spec/models38 ./spec/models39 ./spec/models40 ./spec/models41 ./spec/models42 ./spec/models43 ./spec/models44 ./spec/models45 ./spec/models46 ./spec/models47 ./spec/models48 ./spec/models49 ./spec/models50 ./spec/models51 ./spec/models52 ./spec/models53 ./spec/models54 ./spec/models55 ./spec/models56 ./spec/models57 ./spec/models58 ./spec/models59 ./spec/models60 ./spec/models61 ./spec/models62 ./spec/models63 ./spec/models64 ./spec/models65 ./spec/models66 ./spec/models67 ./spec/models68 ./spec/models69 ./spec/models70 ./spec/models71 ./spec/models72 ./spec/models73 ./spec/models74 ./spec/models75 ./spec/models76 ./spec/models77 ./spec/models78 ./spec/models79 ./spec/models80 ./spec/models81 ./spec/models82 ./spec/models83 ./spec/models84 ./spec/models85 ./spec/models86 ./spec/models87 ./spec/models88 ./spec/models89 ./spec/models90 ./spec/models91 ./spec/models92 ./spec/models93 ./spec/models94 ./spec/models95 ./spec/models96 ./spec/models97 ./spec/models98 ./spec/models99 ./spec/models100 ./spec/models101 ./spec/models102 ./spec/models103 ./spec/models104 ./spec/models105 ./spec/models106 ./spec/models107 ./spec/models108 ./spec/models109 ./spec/models110 ./spec/models111 ./spec/models112 ./spec/models113 ./spec/models114 ./spec/models115 ./spec/models116 ./spec/models117 ./spec/models118 ./spec/models119 ./spec/models120 ./spec/models121 ./spec/models122 ./spec/models123 ./spec/models124 ./spec/models125 ./spec/models126 ./spec/models127 ./spec/models128 ./spec/models129 ./spec/models130 ./spec/models131 ./spec/models132 ./spec/models133 ./spec/models134 ./spec/models135 ./spec/models136 ./spec/models137 ./spec/models138 ./spec/models139 ./spec/models140 ./spec/models141 ./spec/models142 ./spec/models143 ./spec/models144 ./spec/models145 ./spec/models146 ./spec/models147 ./spec/models148 ./spec/models149 ./spec/models150 ./spec/models151 ./spec/models152 ./spec/models153 ./spec/models154 ./spec/models155 ./spec/models156 ./spec/models157 ./spec/models158 ./spec/models159 ./spec/models160 ./spec/models161 ./spec/models162 ./spec/models163 ./spec/models164 ./spec/models165 ./spec/models166 ./spec/models167 ./spec/models168 ./spec/models169 ./spec/models170 ./spec/models171 ./spec/models172 ./spec/models173 ./spec/models174 ./spec/models175 ./spec/models176 ./spec/models177 ./spec/models178 ./spec/models179 ./spec/models180 ./spec/models181 ./spec/models182 ./spec/models183 ./spec/models184 ./spec/models185 ./spec/models186 ./spec/models187 ./spec/models188 ./spec/models189 ./spec/models190 ./spec/models191 ./spec/models192 ./spec/models193 ./spec/models194 ./spec/models195 ./spec/models196 ./spec/models197 ./spec/models198 ./spec/models199 ./spec/models200 ./spec/models201 ./spec/models202 ./spec/models203 ./spec/models204 ./spec/models205 ./spec/models206 ./spec/models207 ./spec/models208 ./spec/models209 ./spec/models210 ./spec/models211 ./spec/models212 ./spec/models213 ./spec/models214 ./spec/models215 ./spec/models216 ./spec/models217 ./spec/models218 ./spec/models219 ./spec/models220 ./spec/models221 ./spec/models222 ./spec/models223 ./spec/models224 ./spec/models225 ./spec/models226 ./spec/models227 ./spec/models228 ./spec/models229 ./spec/models230 ./spec/models231 ./spec/models232 ./spec/models233 ./spec/models234 ./spec/models235 ./spec/models236 ./spec/models237 ./spec/models238 ./spec/models239 ./spec/models240 ./spec/models241 ./spec/models242 ./spec/models243 ./spec/models244 ./spec/models245 ./spec/models246 ./spec/models247 ./spec/models248 ./spec/models249 ./spec/models250 ./spec/models251 ./spec/models252 ./spec/models253 ./spec/models254 ./spec/models255 ./spec/models256 ./spec/models257 ./spec/models258 ./spec/models259 ./spec/models260 ./spec/models261 ./spec/models262 ./spec/models263 ./spec/models264 ./spec/models265 ./spec/models266 ./spec/models267 ./spec/models268 ./spec/models269 ./spec/models270 ./spec/models271 ./spec/models272 ./spec/models273 ./spec/models274 ./spec/models275 ./spec/models276 ./spec/models277 ./spec/models278 ./spec/models279 ./spec/models280 ./spec/models281 ./spec/models282 ./spec/models283 ./spec/models284 ./spec/models285 ./spec/models286 ./spec/models287 ./spec/models288 ./spec/models289 ./spec/models290\n```\n\nbut didn't get any errors so far. \n. Ok seems to be an issue on `ruby < 2.0.0-p0` will look into it, thanks!\n. Ok this was fixed by 695a2d5 see #294. Works with master but not with `0.13.4.pre2` yet, guess it's time for a new release ;)\n. like @latortuga pointed out you can in case of a crash run any command like `zeus test` to get the backtrace you need. Dumping it directly only works if a single command is crashing or you would get extensive backtraces when dumping all. \n\nMaybe we could figure something out to dump only backtraces for parent commands, but it's not currently implemented, and I think its high on the prio list yet. So maybe you want to try?\n. Seeing this happening on master. Reproducing simply by `zeus start` (master) in any project and kill it via `Ctrl-C`, will leave behing a `zeus slave: boot`.\n. could you maybe provide a example app or maybe `Gemfile.lock` and `Gemfile`\n. Could you paste the warning maybe? And maybe a pointer to the file where it is defined? Thanks.\n. Could you check against zeus `0.13.4.pre2`? Besides this which Rails and Ruby version are you using? Could you maybe create small example app so I can reproduce it more easily? Thanks for your time!\n\nThis might be related to #115 \n. Might the same problem as #134 make sure the gems are in the same group \n\n``` ruby\ngroup :test do\n  gem 'rspec-rails'\n  gem 'shoulda-matchers'\nend\n```\n\nalso make sure to not require autorun\n\nHope this helps, shoulda has been the source of some issues so far.\n. I would love to have a zeus emacs mode, currently zeus does some fancy things with the terminal output I wonder if a \"simple\" mode which just prints line by line what is going on would be helpful.. @gnufied #625 what do you think?. I merged #625 this includes a quick version of a emacs mode for zeus. . Since this is quite old and I can't reproduce anymore I'm gonna close this, feel free to reopen if needed.. With the changes made recently to allow more easily embedding zeus running with #625 simple output and redirecting to a file should work here, potentially wrapping with [nohup](https://en.wikipedia.org/wiki/Nohup) should do the trick.. Should be fixed with #622 . I'm not really sure what to make of this @thedrow any chance you could elaborate?. Mh.. @thedrow is this reproducible for you? I tried on both mac an linux but can't see it happening, what would potentially help is:\r\n\r\n- what version of zeus are you using\r\n- what os are you using and what version (I assume Mac due to directory structure, but not sure which version)\r\n- anything else that might help?\r\n\r\nThanks for your help!. So I guess the way to fix this is to check the RSpec version first and then do the right thing according to https://github.com/burke/zeus/pull/514/commits/954894af8c1d69af958860ea7f2bd2333283b91f . Should be fixed now :). I wonder if a quick fix for that would be to monitor directory instead of files on osx, it seems to work everywhere except osx. I ran into it today as well but only on a larger rails app trying to figure out the limit now.. This seems to be related to the number of monitored files as I have 2 apps 1 causes the issue (the bigger) and a smaller which does not experience it, this is on the same machine with the same version of zeus. \r\n\r\nTo resolve this the way to go seems to be to monitor the directory instead of the files for changes and then filter in the filemonitor for events we are interested in (based on the file). I took a look at the code in filemonitor_darwin and it seems to be reasonable enough to change it here without the need to touch much else. First step so is to add a test as I wonder what the amount of files needed is. I'm gonna give this a shot when I have a Mac available (aka work).. @siannopollo sadly the commit is not a fix yet, but just a failing test and a description of the fix I'm working towards, any help is greatly appricieated and I'm happy to merge as soon as it is ready \ud83d\udc4d . @siannopollo if you fancy testing a local built, #620 now includes a potential fix for the problem, I have to do some more local testing before merging but it seems like it fixes the issue. . Please check version 0.15.13.pre and see if it fixes the problem it seems to work for my setup.. I'd consider this a fix then, seem to have the same success on other machines as I can see locally here \ud83d\udc4d . See the linked PR which restores the 0.15.4 behaviour. As I'm not an avid rspec user I'm not sure this is what we really want @J-ad @nathantech2005 I guess this basically copies what `bundle exec rspec` would do so right?. I think this is superseeded by #618 am I correct on this?. I'm gonna close this as I'm fairly sure #618 fixes this, if I'm wrong please reopen and tell me I'm wrong \ud83d\ude04 . This error gets thrown when trying to trigger during restart of a worker at a certain point (not sure when exactly) I have seen this as well. Basically what seems to be happening\r\n\r\n1. A file is changed\r\n2. Immediatly run a command with zeus\r\n3. zeus restarts the worker to run the command\r\n4. error\r\n\r\nThere seems to be a race between 2 and 3 as far as I can see. Not sure where exactly so.. Sorry for the confusion I was referring to zeus restarting the process it internally dispatches to when a command is issued from the client, and before this internal process is ready to receive command again the command should wait. It normally does wait but it seems like in certain situations (aka race) the command does not get blocked to wait but issued at a process which is either not ready to receive it or is in the process of shutting down. . Interesting issue, is this happening on just discourse or on multiple apps for you? It looks like there is an issue with the order of requires but this seems to be reasonably deep in the rails stack which seems odd as this seems solid in the apps I have touched so far. Would you be able to try again with the newest Zeus and discourse version just to check if this is still an issue?. I can't reproduce this so I'm closing it for now maybe it got fixed in a recent version? Feel free to reopen if you are still experiencing this. Thank you :). Sorry for the late comments I've just started looking at zeus again, and its great to have the instructions :+1: just thought some comments from my own usage might be useful what do you think?. Thanks for updating this! I'll take a closer look ASAP but looks good so far.. I'm running a setup very close to yours (mocha 1.1.0, rails 4.2.1, minitest 5.1) and it seems to work for me so I'm a little baffled how to reproduce this :crying_cat_face: maybe take a look at this app https://github.com/sideshowcoder/pressevent where it seems to work and let me know if there is anyway else I can help, feel free to reopen if the issue persists.. I wonder if this might get fixed by #615 as there might have been some setup issues with the outputs. I'll get a build ready asap for you to try out.. #615 has been merged into master so potentially try a local built, I will also try to release a dev built to check.. There is a new release 0.15.13.pre please try it out \ud83d\ude04 . Thanks for the comment let's continue debugging then :) was worth a try I guess. Just to make sure is this on the latest (aka 0.15.10) version of zeus?. It seems to work fine on my work machine (local one is linux and works fine as well) as 0.15.10 seems to fix this issue I'm gonna close this, feel free to reopen when need be.. Not sure the 2nd part is really a zeus issue, shouldn't `require 'rails/all'` be what you do? Sorry if I'm confused here but at least this is what I have in my apps, unless I explicitly require only parts of rails. \r\n\r\nFor the first part, this is really not nice, but I think the best way to fix this is some documentation for now, I find it awkward how rspec generates the helper in a way which makes it dependent on the `Rspec` being defined before the helper is loaded, but I guess it is how it is, as there is already issue #474 to keep track of this I would close this for now, feel free to reopen if you think there is a difference to #474 . That would be really nice, according to rubygems @burke @metcalf @turadg @antifuchs and @latortuga have access to release a new version I would like to get #614 and #615 in if at all possible. I have push commit bit but not rubygems access.. That would be awesome @burke my rubygems profile is https://rubygems.org/profiles/sideshowcoder I'm using zeus quite a lot at work so happy to try to look after it a little :+1: . Just so I don't mess this up, the build needs to be done on OSX to include all the binaries I suppose, otherwise only the linux binary are included in the release. Just realised this, as I took a look at the Makefile, will build at work on my Mac now for the release :+1: \r\n\r\n- [ ] document build process. Version 0.15.11 has just been released, I'm gonna close this now. Seems like something went wrong with the build, it didn't include the MacVersion even so I built on a mac... odd, I'm gonna yank it and try again sorry about that.. ok released again as 0.15.12... this time the build seems to have done fine, not sure what was going on here, the first build failed to include the binaries for linux and mac. I yanked it and released 0.15.12. Hope all is well now, I tested a local install and it seems fine.. This is related to #336 currently there is only one stream for stderr and stdout. Something I wanted to tackle some time ago, got distracted, forgot and now annoys me again.... Oh yes I missunderstood what you ment sorry about this, I created a quick PR #614  to fix this and I'm wondering if there are more errors which should be logged to stderr now created by zeus. . @latortuga @andrew-stripe not sure who would be good to have a look at this I haven't touched zeus in some time, but this was annoying so I thought I take a look. Would be awesome if one of you could have a look at my (probably pretty rusty) go.. @burke in case you want to take a look here as well.. No worries, seems like a minor change so I think its good.. Ok the code has been cleaned up, this now needs some more testing as the coverage is not ideal. I tried to localise the cases where things need to be reset as well via defer so maybe this resolves some of the issue where zeus seems to messup the shell as well.. Might be a dependency interaction, I had the same some time ago with an earlier version.. Ugh thats not good have you tried removing and reinstalling the zeus gem? . Sorry for that I would really like to know what is going on but can't think of a way to debug... Thanks for your quick feedback.. Yeah I think it's one of the cases for #555 to be honest, it should be clearer in what is actually going wrong.... @blimmer have you tried to run the command without zeus?. @blimmer yeah I've been looking into this as well, one option would maybe be to try using a debugger, maybe https://github.com/derekparker/delve/ would do the trick. Sadly / luckily I don't have a project which experiences this, but I would really hope to be able to improve the error messages as well. . Oh that sounds like its gonna be fun to debug... But yes delve should be able to help there see https://github.com/derekparker/delve/blob/master/Documentation/usage/dlv_attach.md for attaching to a running process. @seyonv those messages look fine to me actually they are the trace log right?. Cool sorry for the confusion :+1: yes this seems to help and I've seen it before as well, I got no idea why so :panda_face: . @tanmayforgit how did you resolve it?. Interesting @dmcinnes have you uninstalled all versions before installing `0.15.14`?\r\n. That would be great @mvalipour . Makes a lot of sense to me. Not that well versed in RSpec but I'm wondering if there is a way to test this so we can avoid regression? Maybe have 2 Gemfiles one with RSpec 2 and one with RSpec 3 and run both on Travis?\r\n\r\nThanks for the work! I'm happy to merge this, would be even happier if we had a test \ud83d\udc4d . Sounds reasonable, happy to try to help let me know how it goes.. fixes #588 . Well I think if it is to heavy weight I'm fine with just leaving it as is to be honest. :) Thanks for taking a looks so! . This has been released as 0.15.13.pre . Here we go :) https://rubygems.org/gems/zeus. Mh yeah `github.com/zeus` would have been nice how about `zeus-preloader`? Doesn't roll of the tongue but described pretty well what it does. I don't really mind where the repo lives to be hones but feel like would be nice to be able to admin the repo for hooks and stuff. I'll take a look what would be needed to move and come back. . I've seen this with 0.15.x (versions before 13) as well, and thought I caught the cases but apparently I didn't :( thanks for reporting! As a quick fix if you want to avoid restarting your terminal there is the shell `reset` command which will fix this issue. . I shipped `0.15.14.pre` which should fix this issue finally if people could test that that would be great.. You can pass `--log somelogfile.log` and read in there likely some gem version require messup I suspect, at least that is what I run into most. Hope that helps @ylansegal. Added a first hacky version of an emacs mode\r\n\r\n![zeus-emacs-mode](https://cloud.githubusercontent.com/assets/108488/23681156/c25a9ed2-0385-11e7-9eff-2a3d12719fa8.gif)\r\n. Yes this is quite annoying and sadly has been a longer standing problem #555 and #617 are related to this. Any help is highly welcome! . Well the problem in this case is actually that the error is thrown way earlier when the gems are loaded, zeus breaks up the boot process in a tree like structure (the one you see on the console) so what is happening here is that the `default_env` fails to boot due to missing / incorrect gems, this means we never actually get to a point where we then fork an environment where we run commands agains (aka test or development). It would be valuable so to catch those kind of boot errors and surface them to the developer.. You can actually see those errors when passing `--log mylogfile.txt` this should probably be surfaced easier.. Interesting I have not seen this so far so I wonder what makes your setup different from mine, as I have this quite often actually this way. normally the pry pager uses q<enter> to cancel. Can you reproduce this just in a big app or will a small script do it for you as well? Try for example https://github.com/sideshowcoder/zeus-without-rails for testing if it helps. . interesting... does that happen on a new rails app as well? wonder if any gem causes this, or any pry setting... would you be able to create a demo app for me to reproduce?. Perfect thanks, lets see what is going on here \ud83d\ude22 . so something in here broke it https://github.com/burke/zeus/compare/v0.15.12...v0.15.13 \r\n@Crunch09 as you wanted to take a look FYI, I assume it has something todo with how terminal is handled, or the input is directed ... The odd thing is it works in emacs using inf-ruby and `inf-ruby-switch-from-compilation` . Thanks @Crunch09. Ok so I got a little further with that the issue seems to be related to how the terminal state is restored, it is stored in a defer of a go func, where it should be restored at the end of the main func.. One way to work around this is to disable the pager in pry `Pry.config.pager = false` this is obviously not ideal but at least means not needing to kill zeus everytime pry decides to page.. Interesting, could you share something to reproduce? Could you try reinstalling zeus at the latest version. @benjamin-thomas \r\n. No actually I don't use docker but If you are able to provide a sample repro where the error occurs I can probably take a look @benjamin-thomas \r\n. \ud83d\udc4d . Thanks had not noticed that \ud83d\udc4d . As dupe of #598 going to close that.. This is a know issue and I'm currently investigating what is going on see #627 and #633 . I just merged a change to deactivate paging in pry for now, the problem seems to be that pry and zeus don't forward stdin / stderr correctly to an external pager for some reason. I\u1e3f building a new version now.. Released as version `0.15.14.pre` ... if everything is fine will make this `0.15.14`. Yep pretty sure those existed before thanks for testing @typeoneerror. Happy to get this fixed no need to tip but thought is much appreciated :). Interesting I'm using it with rails 5 at the moment, and it seems to work fine, can you generate a small sample app which experiences this?. Nice thanks so much @staycreativedesign that makes it much easier, I was actually working on a rails 5.0 app I realise. So thanks for that. Related #569 . @server-monitor that helps a lot actually, I think this is very close to getting this fixed, sorry for the late response. Thanks so much for your investigation, if you like I'm very happy to accept a PR to fix that, I'm going to look into it as soon as I have some time to do so.. See the PR for a rather quick and dirty fix, if somebody likes to try it out that would be great I will built a package to try as soon as I have a Mac handy to build.. I pushed version `0.15.15.pre` to be installable via `gem install --pre zeus`, make sure to first uninstall versions already on the system via `gem uninstall zeus` and uninstall all versions including binaries to make sure there is no trouble around that. Would love if someone could try it out.. Yeah for some reason I don't fully understand linux seems to normally be fine without uninstalling while MacOS seems to have trouble with 2 parallel versions of zeus being installed (sometimes). I see the same between my work mac and home ubuntu box. But great that it works @falonofthetower I will release as soon as I get more feedback than \ud83d\udc4d . This is related to #624 a fix is in the PR #633 which is not merged yet.. Please check `0.15.14.pre` released, please check if it improves things.. Thanks @arizz96 :). Thanks for writing this up I've been very bad at maintaining the changes file, I will pull your commit in the next release. \ud83d\udc4d . I pulled the commit across without the merge commit so I'm going to close this PR this way. Thanks so much for your contribution! version 0.15.14 is out now, enjoy.. Currently not compatible with Rails 5.1, yet. I'm going to close this as it is a duplicate for #569 thanks for reporting so \ud83d\udc4d . Oh yeah me can't type \ud83d\udc4d thanks for taking a look. When you have a chance to try it out to see if it works as expected I'd clean it up and would release a new version with the fix in the next days. Currently released as pre so yeah use it! :D. What probably is the cause here is that the new version of zeus does require some gems which are incompatible with the gems currently installed and since it likely is installed outside bundler the require fails. Take a look at what `--log=~/zeus.log` includes and try unsinstalling previous versions and reinstalling the latest version. bundleing with the recent gem versions.. Indention is hard, any ideas welcome.. Mh just tried this again on 0.15.10 and it seems to work fine, not sure if this is still relevant, if it is feel free to reopen.. Is this still valid? I was trying to reproduce but wasn't able to @burke did you fix that?\n. Yep definitely I thought I caught some problems with the last release but apparently not all still :(. Ok I think this is resolved so I'm gonna close it.. Is this still valid? wasn't able to reproduce this issue.\n. I tried reproducing this issue but wasn't able to, and there seem to be no issues about this otherwise so I am gonna close this for now. Happy to reopen if we get a test for it so :). \n. I guess we can close this. \n\nThis should work now by putting the socket file somewhere like /tmp/zeus.sock via \n\n``` shell\nexport ZEUSSOCK=/tmp/zeus.sock\n```\n\nAlso see [Using with vagrant](https://github.com/burke/zeus/wiki/Using-with-vagrant)\n. Where are you running zeus? which vm are you using? Just to be clear: zeus client and server need to run on the same box inside the vm since access to the socket can not be shared via network access. I am confused about the Windows 7 that's why I am asking.\n. Ok could you tell me which version of zeus you are running? I would like to investigate the issue further. \n. Could you try the newest version? 0.13.4.pre2\n. In the current release you can specify the location of the socket file via an env variable, so if you just put it somewhere known you can export the variable and zeus will know where to look no matter where you are inside the directory structure.\n. fixes #287 and #231 \n. In my tests it works fine, the specs seem to be broken even without the change for me. If this is merged I will update the README as well.\n. cool thanks!\n. You need to set the env var in case you need the Zeus sock to be located anywhere other than the current directory. In case you do both the Zeus client as well as the server need the env var. I wrote a wiki page on how to run this under Using with vagrant.\u00a0\n\nWas this the question?\n\nOn Wed, May 22, 2013 at 4:23 AM, bezelga notifications@github.com wrote:\n\n> the env var should is blank, when shold the env var be set?\n> Running `ZEUSSOCK=/tmp/zeus-myproj.sock zeus start` changed the error:\n> ![screen shot 2013-05-21 at 11 13 44 pm](https://f.cloud.github.com/assets/22406/546189/43897c4e-c285-11e2-91a8-0bb294ef9187.png)\n> \n> ```\n> $ zeus server\n> Can't connect to master. Run zeus start first.\n> ```\n> \n> About the version, I think it is OK. I've uninstalled, executed `rbenv rehash` to remove the shims then installed again and executed `rbenv rehash`.\n> \n> ## `which zeus: /home/vagrant/.rbenv/shims/zeus`\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/burke/zeus/pull/322#issuecomment-18253810\n. seems to work fine for me just trying it out. Any more infos about your setup, so I can try to reproduce this?\n. I'll give it a shot seems like a nice task to get more into the inner workings of zeus.\n. Long time since I've been using zeus but finally been using it again and this annoyed me enough so here we go #615 needs some cleanup but works locally for me to start out with.. I guess this is solved? feel free to reopen if this is still a thing.. You could add it to whatever stage you want in a custom plan for example\n\n``` ruby\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n\n  def test_helper\n    require_relative './lib/my_lib_file'\n    super\n  end\n\nend\n\nZeus.plan = CustomPlan.new\n```\n\nThis would cause zeus to listen to the file changes, same thing can be done at any other stage like default_bundle, or alike. Since lib is not autoloaded by rails anymore zeus does not know about it.\n. sorry didn't mean to close... does this work for you?\n. I am gonna close this now.\n. based on the fix by @YasuOza handle issue #269\n. Thanks for the feedback, I wasn't perfectly happy with it either but it works for now. I will see if there is a way around this with minitest-rails\n. I created a repository trying to reproduce this but I haven't run in the error, yet. @jeffdeville or @johngallagher could you look at the code and tell me what I am doing different and maybe clone and try it on your system? Would be awesome thanks :) \n\nhttps://github.com/sideshowcoder/zeus-issue-350\n. It is probably a combination of those, but hard to figure out who is breaking who. Maybe we can get an app which is having trouble by one of you guys integrating their gemfile in my example app.\n. This might be related to #269 which was solved by #348, maybe rails 4 installs the exit hook somewhere inside the the test framework itself? You might wanna try something like \n\n``` ruby\nMiniTest::Unit.class_variable_set(\"@@installed_at_exit\", true)\n```\n\nIsn't minitest the default test framework for rails 4 now?\n. Ok I will check this out, seems to be some weirdness with Rails 4, it's works when loading minitest-rails which really just adds the spec DSL, so wired.\n. I just setup a plain rails 4.rc1 test app with the current master version of zeus and am not able to reproduce this issue (so the same as  https://github.com/PryFlack/zeus_rails4_test_bug). Rails 4 uses minitest now, so if you don't have the newest version of zeus installed yet, you can just put this at the top of your test_helper.rb file in a vanilla rail 4 project \n\n``` ruby\nENV[\"RAILS_ENV\"] = \"test\"\nrequire File.expand_path('../../config/environment', __FILE__)\n\n# just for zeus this will prevent the test from running via rake test!\nrequire 'minitest/unit'\nMiniTest::Unit.class_variable_set('@@installed_at_exit', true)\n\nrequire 'rails/test_help'\n```\n\nSeems to me like you guys are using a version of zeus which does not handle the _@@installed_at_exit_, yet\n. You could add it to the custom_plan.rb like\n\n``` ruby\nclass CustomPlan < Zeus::Rails\n  def test_helper\n    require 'minitest/unit'\n    MiniTest::Unit.class_variable_set('@@installed_at_exit', true)\n    super\n  end\nend\n```\n\nthis is what zeus is doing internally now since 0.13.4pre2 \n. Code looks good to me. :+1: should merge this.\n. The problem is there is no difference between not being able to open a socket for writing because it is already used by another process or because there is just a stale file present. If we just delete the file in this case an already running installation of zeus will have it's socket deleted, which is not a great solution. \n\nAs a workaround for your situation I would suggest adding shutting down all zeus cleanly in a pre-suspend script. Like so\n\n``` shell\nps ax | awk '/zeus.*start/ { print $1} ' | tail -r | tail +2 | tail -r | xargs kill\n```\n. Thats true from the connecting side of things, even though it is not perfect to check a socket this way it works most of the time. \n\nThe problem is when creating a domain socket and it fails there is no way of knowing if there is still a instance running using this socket. Well, no way isn't technically true but you would have to jump a lot of hoops to get there, since listing all processes will not tell you unless you are running as root, and the zeus socket for any server can be created anywhere on the filesystem. Cleaning up after yourself seems like the common way to go.\n\nSo if you like to implement this I'll be happy to help you get going! And maybe there is a way to check this quickly I am not an socket wizard either, so I'll be glad to be proven wrong on this one. \n. Which version of zeus are you using? It works for me with 0.13.4.pre2 under ruby 2.0.0-p195.\n\nI tried to reproduce it like so \n\n``` shell\nzeus rspec ./spec/models1 ./spec/models2 ./spec/models3 ./spec/models4 ./spec/models5 ./spec/models6 ./spec/models7 ./spec/models8 ./spec/models9 ./spec/models10 ./spec/models11 ./spec/models12 ./spec/models13 ./spec/models14 ./spec/models15 ./spec/models16 ./spec/models17 ./spec/models18 ./spec/models19 ./spec/models20 ./spec/models21 ./spec/models22 ./spec/models23 ./spec/models24 ./spec/models25 ./spec/models26 ./spec/models27 ./spec/models28 ./spec/models29 ./spec/models30 ./spec/models31 ./spec/models32 ./spec/models33 ./spec/models34 ./spec/models35 ./spec/models36 ./spec/models37 ./spec/models38 ./spec/models39 ./spec/models40 ./spec/models41 ./spec/models42 ./spec/models43 ./spec/models44 ./spec/models45 ./spec/models46 ./spec/models47 ./spec/models48 ./spec/models49 ./spec/models50 ./spec/models51 ./spec/models52 ./spec/models53 ./spec/models54 ./spec/models55 ./spec/models56 ./spec/models57 ./spec/models58 ./spec/models59 ./spec/models60 ./spec/models61 ./spec/models62 ./spec/models63 ./spec/models64 ./spec/models65 ./spec/models66 ./spec/models67 ./spec/models68 ./spec/models69 ./spec/models70 ./spec/models71 ./spec/models72 ./spec/models73 ./spec/models74 ./spec/models75 ./spec/models76 ./spec/models77 ./spec/models78 ./spec/models79 ./spec/models80 ./spec/models81 ./spec/models82 ./spec/models83 ./spec/models84 ./spec/models85 ./spec/models86 ./spec/models87 ./spec/models88 ./spec/models89 ./spec/models90 ./spec/models91 ./spec/models92 ./spec/models93 ./spec/models94 ./spec/models95 ./spec/models96 ./spec/models97 ./spec/models98 ./spec/models99 ./spec/models100 ./spec/models101 ./spec/models102 ./spec/models103 ./spec/models104 ./spec/models105 ./spec/models106 ./spec/models107 ./spec/models108 ./spec/models109 ./spec/models110 ./spec/models111 ./spec/models112 ./spec/models113 ./spec/models114 ./spec/models115 ./spec/models116 ./spec/models117 ./spec/models118 ./spec/models119 ./spec/models120 ./spec/models121 ./spec/models122 ./spec/models123 ./spec/models124 ./spec/models125 ./spec/models126 ./spec/models127 ./spec/models128 ./spec/models129 ./spec/models130 ./spec/models131 ./spec/models132 ./spec/models133 ./spec/models134 ./spec/models135 ./spec/models136 ./spec/models137 ./spec/models138 ./spec/models139 ./spec/models140 ./spec/models141 ./spec/models142 ./spec/models143 ./spec/models144 ./spec/models145 ./spec/models146 ./spec/models147 ./spec/models148 ./spec/models149 ./spec/models150 ./spec/models151 ./spec/models152 ./spec/models153 ./spec/models154 ./spec/models155 ./spec/models156 ./spec/models157 ./spec/models158 ./spec/models159 ./spec/models160 ./spec/models161 ./spec/models162 ./spec/models163 ./spec/models164 ./spec/models165 ./spec/models166 ./spec/models167 ./spec/models168 ./spec/models169 ./spec/models170 ./spec/models171 ./spec/models172 ./spec/models173 ./spec/models174 ./spec/models175 ./spec/models176 ./spec/models177 ./spec/models178 ./spec/models179 ./spec/models180 ./spec/models181 ./spec/models182 ./spec/models183 ./spec/models184 ./spec/models185 ./spec/models186 ./spec/models187 ./spec/models188 ./spec/models189 ./spec/models190 ./spec/models191 ./spec/models192 ./spec/models193 ./spec/models194 ./spec/models195 ./spec/models196 ./spec/models197 ./spec/models198 ./spec/models199 ./spec/models200 ./spec/models201 ./spec/models202 ./spec/models203 ./spec/models204 ./spec/models205 ./spec/models206 ./spec/models207 ./spec/models208 ./spec/models209 ./spec/models210 ./spec/models211 ./spec/models212 ./spec/models213 ./spec/models214 ./spec/models215 ./spec/models216 ./spec/models217 ./spec/models218 ./spec/models219 ./spec/models220 ./spec/models221 ./spec/models222 ./spec/models223 ./spec/models224 ./spec/models225 ./spec/models226 ./spec/models227 ./spec/models228 ./spec/models229 ./spec/models230 ./spec/models231 ./spec/models232 ./spec/models233 ./spec/models234 ./spec/models235 ./spec/models236 ./spec/models237 ./spec/models238 ./spec/models239 ./spec/models240 ./spec/models241 ./spec/models242 ./spec/models243 ./spec/models244 ./spec/models245 ./spec/models246 ./spec/models247 ./spec/models248 ./spec/models249 ./spec/models250 ./spec/models251 ./spec/models252 ./spec/models253 ./spec/models254 ./spec/models255 ./spec/models256 ./spec/models257 ./spec/models258 ./spec/models259 ./spec/models260 ./spec/models261 ./spec/models262 ./spec/models263 ./spec/models264 ./spec/models265 ./spec/models266 ./spec/models267 ./spec/models268 ./spec/models269 ./spec/models270 ./spec/models271 ./spec/models272 ./spec/models273 ./spec/models274 ./spec/models275 ./spec/models276 ./spec/models277 ./spec/models278 ./spec/models279 ./spec/models280 ./spec/models281 ./spec/models282 ./spec/models283 ./spec/models284 ./spec/models285 ./spec/models286 ./spec/models287 ./spec/models288 ./spec/models289 ./spec/models290\n```\n\nbut didn't get any errors so far. \n. Ok seems to be an issue on `ruby < 2.0.0-p0` will look into it, thanks!\n. Ok this was fixed by 695a2d5 see #294. Works with master but not with `0.13.4.pre2` yet, guess it's time for a new release ;)\n. like @latortuga pointed out you can in case of a crash run any command like `zeus test` to get the backtrace you need. Dumping it directly only works if a single command is crashing or you would get extensive backtraces when dumping all. \n\nMaybe we could figure something out to dump only backtraces for parent commands, but it's not currently implemented, and I think its high on the prio list yet. So maybe you want to try?\n. Seeing this happening on master. Reproducing simply by `zeus start` (master) in any project and kill it via `Ctrl-C`, will leave behing a `zeus slave: boot`.\n. could you maybe provide a example app or maybe `Gemfile.lock` and `Gemfile`\n. Could you paste the warning maybe? And maybe a pointer to the file where it is defined? Thanks.\n. Could you check against zeus `0.13.4.pre2`? Besides this which Rails and Ruby version are you using? Could you maybe create small example app so I can reproduce it more easily? Thanks for your time!\n\nThis might be related to #115 \n. Might the same problem as #134 make sure the gems are in the same group \n\n``` ruby\ngroup :test do\n  gem 'rspec-rails'\n  gem 'shoulda-matchers'\nend\n```\n\nalso make sure to not require autorun\n\nHope this helps, shoulda has been the source of some issues so far.\n. I would love to have a zeus emacs mode, currently zeus does some fancy things with the terminal output I wonder if a \"simple\" mode which just prints line by line what is going on would be helpful.. @gnufied #625 what do you think?. I merged #625 this includes a quick version of a emacs mode for zeus. . Since this is quite old and I can't reproduce anymore I'm gonna close this, feel free to reopen if needed.. With the changes made recently to allow more easily embedding zeus running with #625 simple output and redirecting to a file should work here, potentially wrapping with [nohup](https://en.wikipedia.org/wiki/Nohup) should do the trick.. Should be fixed with #622 . I'm not really sure what to make of this @thedrow any chance you could elaborate?. Mh.. @thedrow is this reproducible for you? I tried on both mac an linux but can't see it happening, what would potentially help is:\r\n\r\n- what version of zeus are you using\r\n- what os are you using and what version (I assume Mac due to directory structure, but not sure which version)\r\n- anything else that might help?\r\n\r\nThanks for your help!. So I guess the way to fix this is to check the RSpec version first and then do the right thing according to https://github.com/burke/zeus/pull/514/commits/954894af8c1d69af958860ea7f2bd2333283b91f . Should be fixed now :). I wonder if a quick fix for that would be to monitor directory instead of files on osx, it seems to work everywhere except osx. I ran into it today as well but only on a larger rails app trying to figure out the limit now.. This seems to be related to the number of monitored files as I have 2 apps 1 causes the issue (the bigger) and a smaller which does not experience it, this is on the same machine with the same version of zeus. \r\n\r\nTo resolve this the way to go seems to be to monitor the directory instead of the files for changes and then filter in the filemonitor for events we are interested in (based on the file). I took a look at the code in filemonitor_darwin and it seems to be reasonable enough to change it here without the need to touch much else. First step so is to add a test as I wonder what the amount of files needed is. I'm gonna give this a shot when I have a Mac available (aka work).. @siannopollo sadly the commit is not a fix yet, but just a failing test and a description of the fix I'm working towards, any help is greatly appricieated and I'm happy to merge as soon as it is ready \ud83d\udc4d . @siannopollo if you fancy testing a local built, #620 now includes a potential fix for the problem, I have to do some more local testing before merging but it seems like it fixes the issue. . Please check version 0.15.13.pre and see if it fixes the problem it seems to work for my setup.. I'd consider this a fix then, seem to have the same success on other machines as I can see locally here \ud83d\udc4d . See the linked PR which restores the 0.15.4 behaviour. As I'm not an avid rspec user I'm not sure this is what we really want @J-ad @nathantech2005 I guess this basically copies what `bundle exec rspec` would do so right?. I think this is superseeded by #618 am I correct on this?. I'm gonna close this as I'm fairly sure #618 fixes this, if I'm wrong please reopen and tell me I'm wrong \ud83d\ude04 . This error gets thrown when trying to trigger during restart of a worker at a certain point (not sure when exactly) I have seen this as well. Basically what seems to be happening\r\n\r\n1. A file is changed\r\n2. Immediatly run a command with zeus\r\n3. zeus restarts the worker to run the command\r\n4. error\r\n\r\nThere seems to be a race between 2 and 3 as far as I can see. Not sure where exactly so.. Sorry for the confusion I was referring to zeus restarting the process it internally dispatches to when a command is issued from the client, and before this internal process is ready to receive command again the command should wait. It normally does wait but it seems like in certain situations (aka race) the command does not get blocked to wait but issued at a process which is either not ready to receive it or is in the process of shutting down. . Interesting issue, is this happening on just discourse or on multiple apps for you? It looks like there is an issue with the order of requires but this seems to be reasonably deep in the rails stack which seems odd as this seems solid in the apps I have touched so far. Would you be able to try again with the newest Zeus and discourse version just to check if this is still an issue?. I can't reproduce this so I'm closing it for now maybe it got fixed in a recent version? Feel free to reopen if you are still experiencing this. Thank you :). Sorry for the late comments I've just started looking at zeus again, and its great to have the instructions :+1: just thought some comments from my own usage might be useful what do you think?. Thanks for updating this! I'll take a closer look ASAP but looks good so far.. I'm running a setup very close to yours (mocha 1.1.0, rails 4.2.1, minitest 5.1) and it seems to work for me so I'm a little baffled how to reproduce this :crying_cat_face: maybe take a look at this app https://github.com/sideshowcoder/pressevent where it seems to work and let me know if there is anyway else I can help, feel free to reopen if the issue persists.. I wonder if this might get fixed by #615 as there might have been some setup issues with the outputs. I'll get a build ready asap for you to try out.. #615 has been merged into master so potentially try a local built, I will also try to release a dev built to check.. There is a new release 0.15.13.pre please try it out \ud83d\ude04 . Thanks for the comment let's continue debugging then :) was worth a try I guess. Just to make sure is this on the latest (aka 0.15.10) version of zeus?. It seems to work fine on my work machine (local one is linux and works fine as well) as 0.15.10 seems to fix this issue I'm gonna close this, feel free to reopen when need be.. Not sure the 2nd part is really a zeus issue, shouldn't `require 'rails/all'` be what you do? Sorry if I'm confused here but at least this is what I have in my apps, unless I explicitly require only parts of rails. \r\n\r\nFor the first part, this is really not nice, but I think the best way to fix this is some documentation for now, I find it awkward how rspec generates the helper in a way which makes it dependent on the `Rspec` being defined before the helper is loaded, but I guess it is how it is, as there is already issue #474 to keep track of this I would close this for now, feel free to reopen if you think there is a difference to #474 . That would be really nice, according to rubygems @burke @metcalf @turadg @antifuchs and @latortuga have access to release a new version I would like to get #614 and #615 in if at all possible. I have push commit bit but not rubygems access.. That would be awesome @burke my rubygems profile is https://rubygems.org/profiles/sideshowcoder I'm using zeus quite a lot at work so happy to try to look after it a little :+1: . Just so I don't mess this up, the build needs to be done on OSX to include all the binaries I suppose, otherwise only the linux binary are included in the release. Just realised this, as I took a look at the Makefile, will build at work on my Mac now for the release :+1: \r\n\r\n- [ ] document build process. Version 0.15.11 has just been released, I'm gonna close this now. Seems like something went wrong with the build, it didn't include the MacVersion even so I built on a mac... odd, I'm gonna yank it and try again sorry about that.. ok released again as 0.15.12... this time the build seems to have done fine, not sure what was going on here, the first build failed to include the binaries for linux and mac. I yanked it and released 0.15.12. Hope all is well now, I tested a local install and it seems fine.. This is related to #336 currently there is only one stream for stderr and stdout. Something I wanted to tackle some time ago, got distracted, forgot and now annoys me again.... Oh yes I missunderstood what you ment sorry about this, I created a quick PR #614  to fix this and I'm wondering if there are more errors which should be logged to stderr now created by zeus. . @latortuga @andrew-stripe not sure who would be good to have a look at this I haven't touched zeus in some time, but this was annoying so I thought I take a look. Would be awesome if one of you could have a look at my (probably pretty rusty) go.. @burke in case you want to take a look here as well.. No worries, seems like a minor change so I think its good.. Ok the code has been cleaned up, this now needs some more testing as the coverage is not ideal. I tried to localise the cases where things need to be reset as well via defer so maybe this resolves some of the issue where zeus seems to messup the shell as well.. Might be a dependency interaction, I had the same some time ago with an earlier version.. Ugh thats not good have you tried removing and reinstalling the zeus gem? . Sorry for that I would really like to know what is going on but can't think of a way to debug... Thanks for your quick feedback.. Yeah I think it's one of the cases for #555 to be honest, it should be clearer in what is actually going wrong.... @blimmer have you tried to run the command without zeus?. @blimmer yeah I've been looking into this as well, one option would maybe be to try using a debugger, maybe https://github.com/derekparker/delve/ would do the trick. Sadly / luckily I don't have a project which experiences this, but I would really hope to be able to improve the error messages as well. . Oh that sounds like its gonna be fun to debug... But yes delve should be able to help there see https://github.com/derekparker/delve/blob/master/Documentation/usage/dlv_attach.md for attaching to a running process. @seyonv those messages look fine to me actually they are the trace log right?. Cool sorry for the confusion :+1: yes this seems to help and I've seen it before as well, I got no idea why so :panda_face: . @tanmayforgit how did you resolve it?. Interesting @dmcinnes have you uninstalled all versions before installing `0.15.14`?\r\n. That would be great @mvalipour . Makes a lot of sense to me. Not that well versed in RSpec but I'm wondering if there is a way to test this so we can avoid regression? Maybe have 2 Gemfiles one with RSpec 2 and one with RSpec 3 and run both on Travis?\r\n\r\nThanks for the work! I'm happy to merge this, would be even happier if we had a test \ud83d\udc4d . Sounds reasonable, happy to try to help let me know how it goes.. fixes #588 . Well I think if it is to heavy weight I'm fine with just leaving it as is to be honest. :) Thanks for taking a looks so! . This has been released as 0.15.13.pre . Here we go :) https://rubygems.org/gems/zeus. Mh yeah `github.com/zeus` would have been nice how about `zeus-preloader`? Doesn't roll of the tongue but described pretty well what it does. I don't really mind where the repo lives to be hones but feel like would be nice to be able to admin the repo for hooks and stuff. I'll take a look what would be needed to move and come back. . I've seen this with 0.15.x (versions before 13) as well, and thought I caught the cases but apparently I didn't :( thanks for reporting! As a quick fix if you want to avoid restarting your terminal there is the shell `reset` command which will fix this issue. . I shipped `0.15.14.pre` which should fix this issue finally if people could test that that would be great.. You can pass `--log somelogfile.log` and read in there likely some gem version require messup I suspect, at least that is what I run into most. Hope that helps @ylansegal. Added a first hacky version of an emacs mode\r\n\r\n![zeus-emacs-mode](https://cloud.githubusercontent.com/assets/108488/23681156/c25a9ed2-0385-11e7-9eff-2a3d12719fa8.gif)\r\n. Yes this is quite annoying and sadly has been a longer standing problem #555 and #617 are related to this. Any help is highly welcome! . Well the problem in this case is actually that the error is thrown way earlier when the gems are loaded, zeus breaks up the boot process in a tree like structure (the one you see on the console) so what is happening here is that the `default_env` fails to boot due to missing / incorrect gems, this means we never actually get to a point where we then fork an environment where we run commands agains (aka test or development). It would be valuable so to catch those kind of boot errors and surface them to the developer.. You can actually see those errors when passing `--log mylogfile.txt` this should probably be surfaced easier.. Interesting I have not seen this so far so I wonder what makes your setup different from mine, as I have this quite often actually this way. normally the pry pager uses q<enter> to cancel. Can you reproduce this just in a big app or will a small script do it for you as well? Try for example https://github.com/sideshowcoder/zeus-without-rails for testing if it helps. . interesting... does that happen on a new rails app as well? wonder if any gem causes this, or any pry setting... would you be able to create a demo app for me to reproduce?. Perfect thanks, lets see what is going on here \ud83d\ude22 . so something in here broke it https://github.com/burke/zeus/compare/v0.15.12...v0.15.13 \r\n@Crunch09 as you wanted to take a look FYI, I assume it has something todo with how terminal is handled, or the input is directed ... The odd thing is it works in emacs using inf-ruby and `inf-ruby-switch-from-compilation` . Thanks @Crunch09. Ok so I got a little further with that the issue seems to be related to how the terminal state is restored, it is stored in a defer of a go func, where it should be restored at the end of the main func.. One way to work around this is to disable the pager in pry `Pry.config.pager = false` this is obviously not ideal but at least means not needing to kill zeus everytime pry decides to page.. Interesting, could you share something to reproduce? Could you try reinstalling zeus at the latest version. @benjamin-thomas \r\n. No actually I don't use docker but If you are able to provide a sample repro where the error occurs I can probably take a look @benjamin-thomas \r\n. \ud83d\udc4d . Thanks had not noticed that \ud83d\udc4d . As dupe of #598 going to close that.. This is a know issue and I'm currently investigating what is going on see #627 and #633 . I just merged a change to deactivate paging in pry for now, the problem seems to be that pry and zeus don't forward stdin / stderr correctly to an external pager for some reason. I\u1e3f building a new version now.. Released as version `0.15.14.pre` ... if everything is fine will make this `0.15.14`. Yep pretty sure those existed before thanks for testing @typeoneerror. Happy to get this fixed no need to tip but thought is much appreciated :). Interesting I'm using it with rails 5 at the moment, and it seems to work fine, can you generate a small sample app which experiences this?. Nice thanks so much @staycreativedesign that makes it much easier, I was actually working on a rails 5.0 app I realise. So thanks for that. Related #569 . @server-monitor that helps a lot actually, I think this is very close to getting this fixed, sorry for the late response. Thanks so much for your investigation, if you like I'm very happy to accept a PR to fix that, I'm going to look into it as soon as I have some time to do so.. See the PR for a rather quick and dirty fix, if somebody likes to try it out that would be great I will built a package to try as soon as I have a Mac handy to build.. I pushed version `0.15.15.pre` to be installable via `gem install --pre zeus`, make sure to first uninstall versions already on the system via `gem uninstall zeus` and uninstall all versions including binaries to make sure there is no trouble around that. Would love if someone could try it out.. Yeah for some reason I don't fully understand linux seems to normally be fine without uninstalling while MacOS seems to have trouble with 2 parallel versions of zeus being installed (sometimes). I see the same between my work mac and home ubuntu box. But great that it works @falonofthetower I will release as soon as I get more feedback than \ud83d\udc4d . This is related to #624 a fix is in the PR #633 which is not merged yet.. Please check `0.15.14.pre` released, please check if it improves things.. Thanks @arizz96 :). Thanks for writing this up I've been very bad at maintaining the changes file, I will pull your commit in the next release. \ud83d\udc4d . I pulled the commit across without the merge commit so I'm going to close this PR this way. Thanks so much for your contribution! version 0.15.14 is out now, enjoy.. Currently not compatible with Rails 5.1, yet. I'm going to close this as it is a duplicate for #569 thanks for reporting so \ud83d\udc4d . Oh yeah me can't type \ud83d\udc4d thanks for taking a look. When you have a chance to try it out to see if it works as expected I'd clean it up and would release a new version with the fix in the next days. Currently released as pre so yeah use it! :D. What probably is the cause here is that the new version of zeus does require some gems which are incompatible with the gems currently installed and since it likely is installed outside bundler the require fails. Take a look at what `--log=~/zeus.log` includes and try unsinstalling previous versions and reinstalling the latest version. bundleing with the recent gem versions.. Indention is hard, any ideas welcome.. ",
    "chtrinh": "Thanks :)\n. Thanks :)\n. ",
    "lucascaton": "https://gist.github.com/3389270\n. https://gist.github.com/3389270\n. ",
    "christospappas": "I'm also getting this with mongoid\n. I'm also getting this with mongoid\n. ",
    "wulffeld": "It's due to **require 'rails/all'**. This will cause AR to eventually want to load database.yml. In non-AR apps you'd modify application.rb to something like this:\n\n```\nrequire \"active_record\"\nrequire \"action_controller/railtie\"\nrequire \"action_mailer/railtie\"\nrequire \"active_resource/railtie\"\nrequire \"sprockets/railtie\"\n```\n\nto avoid having the database.yml file.\n\nI just quickly tried modifying lib/zeus/rails.rb#boot method to:\n\n```\n    def boot\n      require BOOT_PATH\n      require \"active_record\"\n      require \"action_controller/railtie\"\n      require \"action_mailer/railtie\"\n      require \"active_resource/railtie\"\n    end\n```\n\nand I can start a console now. No idea if this will break some other functionality.\n. It's due to **require 'rails/all'**. This will cause AR to eventually want to load database.yml. In non-AR apps you'd modify application.rb to something like this:\n\n```\nrequire \"active_record\"\nrequire \"action_controller/railtie\"\nrequire \"action_mailer/railtie\"\nrequire \"active_resource/railtie\"\nrequire \"sprockets/railtie\"\n```\n\nto avoid having the database.yml file.\n\nI just quickly tried modifying lib/zeus/rails.rb#boot method to:\n\n```\n    def boot\n      require BOOT_PATH\n      require \"active_record\"\n      require \"action_controller/railtie\"\n      require \"action_mailer/railtie\"\n      require \"active_resource/railtie\"\n    end\n```\n\nand I can start a console now. No idea if this will break some other functionality.\n. ",
    "janlimpens": "Not working here. Seems to get stuck with fs_events\u2026\n. Not working here. Seems to get stuck with fs_events\u2026\n. ",
    "adarsh": "What was the solution for this? I have a similar issue.\n. Full backtrace of a sample error here: https://gist.github.com/4105603\n. What was the solution for this? I have a similar issue.\n. Full backtrace of a sample error here: https://gist.github.com/4105603\n. ",
    "gauravmc": "It did go away after restarting. But it was still loading everything very slowly (like waiting a lot of time for each test run), so had to restart Terminal.\n. While changing a file as far as I remember. I was making changes in routes.rb for quite some time.  \n\n## \n\nGaurav Chande\n\nSent from my iPhone\n\nOn Tuesday, 21 August 2012 at 1:23, Burke Libbey wrote:\n\n> Does this happen when you change a file and it's reloading, or when you run a command?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/burke/zeus/issues/79#issuecomment-7881236).  \n. It did go away after restarting. But it was still loading everything very slowly (like waiting a lot of time for each test run), so had to restart Terminal.\n. While changing a file as far as I remember. I was making changes in routes.rb for quite some time.  \n\n## \n\nGaurav Chande\n\nSent from my iPhone\n\nOn Tuesday, 21 August 2012 at 1:23, Burke Libbey wrote:\n\n> Does this happen when you change a file and it's reloading, or when you run a command?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/burke/zeus/issues/79#issuecomment-7881236).  \n. ",
    "xavierRiley": "I'm still getting this with 0.10.0\n. I'm still getting this with 0.10.0\n. ",
    "StanBright": "Yes, it would be awesome :)\n. I'm not sure I really understand.\n\nI've already opened Zeus in one console and started \"zeus c\" in a second. However I can't use the \"up arrow\" when typing in the second/new console. \n\nPlease, let me know if I'm doing something wrong.\n\nThanks again!\n. @burke I'm on OS X - Darwin Stan-MacBook 12.0.0 Darwin Kernel Version 12.0.0: Sun Jun 24 23:00:16 PDT 2012; root:xnu-2050.7.9~1/RELEASE_X86_64 x86_64\n\n@benbruscella I had this issue with v0.10 and still have it with 0.11 \n. Perfect! It works perfectly now. Thanks for the support!\n\nI would be happy to help and invest time in adding support for Rails 2.3.x . Do you think it will be difficult?\n. Yes, it would be awesome :)\n. I'm not sure I really understand.\n\nI've already opened Zeus in one console and started \"zeus c\" in a second. However I can't use the \"up arrow\" when typing in the second/new console. \n\nPlease, let me know if I'm doing something wrong.\n\nThanks again!\n. @burke I'm on OS X - Darwin Stan-MacBook 12.0.0 Darwin Kernel Version 12.0.0: Sun Jun 24 23:00:16 PDT 2012; root:xnu-2050.7.9~1/RELEASE_X86_64 x86_64\n\n@benbruscella I had this issue with v0.10 and still have it with 0.11 \n. Perfect! It works perfectly now. Thanks for the support!\n\nI would be happy to help and invest time in adding support for Rails 2.3.x . Do you think it will be difficult?\n. ",
    "tyler-smith": "Big WIP, but: https://github.com/tyler-smith/zeus-rails23\n\nServer and Rake are working, which alone are totally worth using.  Feel free to make PRs!\n. Big WIP, but: https://github.com/tyler-smith/zeus-rails23\n\nServer and Rake are working, which alone are totally worth using.  Feel free to make PRs!\n. ",
    "gja": "This no longer is broken in 0.10.0.pre3. Thanks for the fantastic software.\n\nBTW: I'm using the following script to ensure that zeus rspec does not try to print in color and screw up sublime. I'm not sure if some of this should be in zeus itself.\n\n``` bash\n#! /bin/bash\n\nif [ -t 1 ]; then\n  # We are in a terminal\n  true\nelse\n  RSPEC_OPTS=\"--no-color $RSPEC_OPTS\"\nfi\n\nif [ -S .zeus.sock ]; then\n  exec zeus rspec --no-drb $RSPEC_OPTS \"$@\"\nelse\n  exec rspec --drb $RSPEC_OPTS \"$@\"\nfi\n```\n. I'd be happy to submit a patch if you think it makes sense to run rspec in --no-drb --no-color mode (the latter if there is no terminal).\n. Nice. Thank you :-)\n. I actually thought of a minimally invasive way of doing thiis. I'll add a Zeus tcp command, which will create a listener. I'll listen on some tcp port, and whatever requests come in, I'll folk out to Zeus, and map stdout to the socket.\n\nIll be working on this today. Hopefully will have some code soon. Plus i get a chance to learn go.\n. However, what you'll need to ork on is a way to change the socket location so things still start on vagrant\n. Tell me if you need me to reopen this issue as a pull request (i'm not sure if you can just pull from here).\n\nI've opened zeus tcp (which maybe should be correctly called as zeus tcp-shell or something).\n\nAfter running zeus tcp, you can do the following to send commands to zeus via the excellent (default available on mac) utility netcat.\n\n  echo zeus rake middleware | nc localhost 3333\n\nIf you give me a way to change the zeus.sock path, then that would be the last step to get zeus to work with vagrant :-).\n\nSome context if you are unfamiliar with vagrant:\n- Vagrant creates a VM for your rails app\n- Your rails app is automounted into /vagrant. Because of this, files there show up as a network mount\n- Thus you cannot create a socket file over there\n- You can, however, create socket files in (say) ~/.zeus.sock\n. And yes, I know that this entire pull request is equivalent to:\n\n  (while nc.traditional -lp 3000 -e /bin/bash; do true; done) &\n\nHowever, nc.traditional is not available on all linux distros (or mac OS), and its nice to have this as part of zeus itself\n. This no longer is broken in 0.10.0.pre3. Thanks for the fantastic software.\n\nBTW: I'm using the following script to ensure that zeus rspec does not try to print in color and screw up sublime. I'm not sure if some of this should be in zeus itself.\n\n``` bash\n#! /bin/bash\n\nif [ -t 1 ]; then\n  # We are in a terminal\n  true\nelse\n  RSPEC_OPTS=\"--no-color $RSPEC_OPTS\"\nfi\n\nif [ -S .zeus.sock ]; then\n  exec zeus rspec --no-drb $RSPEC_OPTS \"$@\"\nelse\n  exec rspec --drb $RSPEC_OPTS \"$@\"\nfi\n```\n. I'd be happy to submit a patch if you think it makes sense to run rspec in --no-drb --no-color mode (the latter if there is no terminal).\n. Nice. Thank you :-)\n. I actually thought of a minimally invasive way of doing thiis. I'll add a Zeus tcp command, which will create a listener. I'll listen on some tcp port, and whatever requests come in, I'll folk out to Zeus, and map stdout to the socket.\n\nIll be working on this today. Hopefully will have some code soon. Plus i get a chance to learn go.\n. However, what you'll need to ork on is a way to change the socket location so things still start on vagrant\n. Tell me if you need me to reopen this issue as a pull request (i'm not sure if you can just pull from here).\n\nI've opened zeus tcp (which maybe should be correctly called as zeus tcp-shell or something).\n\nAfter running zeus tcp, you can do the following to send commands to zeus via the excellent (default available on mac) utility netcat.\n\n  echo zeus rake middleware | nc localhost 3333\n\nIf you give me a way to change the zeus.sock path, then that would be the last step to get zeus to work with vagrant :-).\n\nSome context if you are unfamiliar with vagrant:\n- Vagrant creates a VM for your rails app\n- Your rails app is automounted into /vagrant. Because of this, files there show up as a network mount\n- Thus you cannot create a socket file over there\n- You can, however, create socket files in (say) ~/.zeus.sock\n. And yes, I know that this entire pull request is equivalent to:\n\n  (while nc.traditional -lp 3000 -e /bin/bash; do true; done) &\n\nHowever, nc.traditional is not available on all linux distros (or mac OS), and its nice to have this as part of zeus itself\n. ",
    "chrisledet": "It seems to fine work with foreman. What's missing?\n. It seems to fine work with foreman. What's missing?\n. ",
    "cmer": "I'm also having an issue. I added \"zeus start\" to my Procfile and here's what I get:\n\n```\n20:41:23 zeus.1          | started with pid 6377\n20:41:23 zeus.1          | Starting Zeus server\n20:41:23 zeus.1          | [ready] [crashed] [running] [connecting] [waiting]\n20:41:23 zeus.1          | boot\n20:41:23 zeus.1          | \u2514\u2500\u2500 default_bundle\n20:41:23 zeus.1          |     \u251c\u2500\u2500 test_environment\n20:41:23 zeus.1          |     \u2502\u00a0  \u2514\u2500\u2500 test_helper\n20:41:23 zeus.1          |     \u2514\u2500\u2500 development_environment\n20:41:23 zeus.1          |         \u2514\u2500\u2500 prerake\n20:41:23 zeus.1          | \n20:41:23 zeus.1          | Available Commands: [waiting] [crashed] [ready]\n20:41:23 zeus.1          | zeus test (alias: rspec, testrb)\n20:41:23 zeus.1          | zeus rake\n20:41:23 zeus.1          | zeus runner (alias: r)\n20:41:23 zeus.1          | zeus server (alias: s)\n20:41:23 zeus.1          | zeus console (alias: c)\n20:41:23 zeus.1          | zeus generate (alias: g)\n20:41:23 zeus.1          | zeus dbconsole\n20:41:23 zeus.1          | statuslogger.go:49: inappropriate ioctl for device\n20:41:23 zeus.1          | panic: runtime error: integer divide by zero\n20:41:23 zeus.1          | [signal 0x8 code=0x7 addr=0x320d7 pc=0x320d7]\n20:41:23 zeus.1          | goroutine 7 [running]:\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*StatusChart).lengthOfOutput(0xf8400c3000, 0x3f, 0x0, 0xf84006bc00)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:133 +0x11e\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*StatusChart).draw(0xf8400c3000, 0xf84006bc00)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:104 +0x6f\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.StartStatusChart(0xf8400431e0, 0xf840001fa0, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:70 +0x4c5\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.Run\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:35 +0x1e7\n20:41:23 zeus.1          | goroutine 1 [chan receive]:\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.Run(0x7fff5fbff401, 0x100000005)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:51 +0x372\n20:41:23 zeus.1          | main.main()\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:37 +0x2a1\n20:41:23 zeus.1          | goroutine 2 [syscall]:\n20:41:23 zeus.1          | created by runtime.main\n20:41:23 zeus.1          |  /private/tmp/bindist454984655/go/src/pkg/runtime/proc.c:221\n20:41:23 zeus.1          | goroutine 3 [syscall]:\n20:41:23 zeus.1          | os/signal.loop()\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/os/signal/signal_unix.go:20 +0x1c\n20:41:23 zeus.1          | created by os/signal.init\u00b71\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/os/signal/signal_unix.go:26 +0x2f\n20:41:23 zeus.1          | goroutine 4 [select]:\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor(0xf8400431e0, 0xf840001eb0, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:48 +0x2fb\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.Run\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:32 +0x17b\n20:41:23 zeus.1          | goroutine 5 [syscall]:\n20:41:23 zeus.1          | syscall.Syscall()\n20:41:23 zeus.1          |  /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:14 +0x5\n20:41:23 zeus.1          | syscall.fcntl(0x200000009, 0x1, 0x9, 0x0, 0x0, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:246 +0x5c\n20:41:23 zeus.1          | syscall.CloseOnExec(0x100000009, 0x0)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/syscall/exec_unix.go:77 +0x33\n20:41:23 zeus.1          | net.socket(0x11773c, 0x4, 0x100000001, 0x0, 0xf840043540, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/net/sock.go:27 +0xe8\n20:41:23 zeus.1          | net.unixSocket(0x11773c, 0xf800000004, 0xf840044920, 0x0, 0x115bdc, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/net/unixsock_posix.go:62 +0x2a5\n20:41:23 zeus.1          | net.ListenUnix(0x11773c, 0x78696e7500000004, 0xf840044920, 0x39, 0xf840044900, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/net/unixsock_posix.go:332 +0xe5\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.StartClientHandler(0xf8400431e0, 0xf840001f00, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:24 +0xcd\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.Run\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:33 +0x19f\n20:41:23 zeus.1          | goroutine 6 [semacquire]:\n20:41:23 zeus.1          | sync.runtime_Semacquire(0x1cc478, 0xf800000001)\n20:41:23 zeus.1          |  /private/tmp/bindist454984655/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\n20:41:23 zeus.1          | sync.(*RWMutex).Lock(0x1cc470, 0x3000000030)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/sync/rwmutex.go:60 +0x83\n20:41:23 zeus.1          | syscall.forkExec(0xf8400005b0, 0xf800000067, 0xf8400515e0, 0x100000001, 0xf84008e540, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/syscall/exec_unix.go:151 +0x206\n20:41:23 zeus.1          | syscall.StartProcess(0xf8400005b0, 0xf800000067, 0xf8400515e0, 0x100000001, 0xf84008e540, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/syscall/exec_unix.go:212 +0x76\n20:41:23 zeus.1          | os.startProcess(0xf8400005b0, 0x67, 0xf8400515e0, 0x100000001, 0xf84008e500, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/os/exec_posix.go:36 +0x307\n20:41:23 zeus.1          | os.StartProcess(0xf8400005b0, 0x67, 0xf8400515e0, 0x100000001, 0xf84008e500, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/os/doc.go:24 +0x59\n20:41:23 zeus.1          | os/exec.(*Cmd).Start(0xf840085000, 0xf840046450, 0xf840059320, 0x0)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/os/exec/exec.go:256 +0x4d2\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.startWrapper(0xa5330, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:75 +0x1fb\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.StartFileMonitor(0xf8400431e0, 0xf840001f50, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:34 +0x85\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.Run\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:34 +0x1c3\n20:41:23 zeus.1          | goroutine 8 [chan receive]:\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster._func_005(0xf8400591c0, 0xf840059198, 0xf8400591a0, 0xf8400591a8, 0xf8400591b0, ...)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:42 +0x31\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.Run\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:44 +0x314\n20:41:23 zeus.1          | goroutine 9 [chan receive]:\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster._func_006(0xf840059198, 0xf8400591a0, 0xf8400591a8, 0xf8400591b0, 0xf8400591b8, ...)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:47 +0x31\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.Run\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:49 +0x356\n20:41:23 zeus.1          | goroutine 10 [finalizer wait]:\n20:41:23 zeus.1          | created by runtime.gc\n20:41:23 zeus.1          |  /private/tmp/bindist454984655/go/src/pkg/runtime/mgc0.c:882\n20:41:23 zeus.1          | goroutine 11 [syscall]:\n20:41:23 zeus.1          | created by addtimer\n20:41:23 zeus.1          |  /private/tmp/bindist454984655/go/src/pkg/runtime/ztime_amd64.c:72\n20:41:23 zeus.1          | goroutine 12 [syscall]:\n20:41:23 zeus.1          | syscall.Syscall6()\n20:41:23 zeus.1          |  /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\n20:41:23 zeus.1          | syscall.kevent(0xf, 0x0, 0x0, 0xf8400d9008, 0xa, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:199 +0x88\n20:41:23 zeus.1          | syscall.Kevent(0xf80000000f, 0x0, 0x0, 0xf8400d9008, 0xa0000000a, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/syscall/syscall_bsd.go:538 +0xa4\n20:41:23 zeus.1          | net.(*pollster).WaitFD(0xf8400d9000, 0xf84008e140, 0x0, 0x0, 0x0, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/net/fd_darwin.go:96 +0x185\n20:41:23 zeus.1          | net.(*pollServer).Run(0xf84008e140, 0x0)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/net/fd.go:236 +0xe4\n20:41:23 zeus.1          | created by net.newPollServer\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/net/newpollserver.go:35 +0x382\n20:41:23 zeus.1          | goroutine 13 [chan receive]:\n20:41:23 zeus.1          | net.(*pollServer).WaitRead(0xf84008e140, 0xf840066480, 0xf840043120, 0x23, 0x1, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/net/fd.go:268 +0x73\n20:41:23 zeus.1          | net.(*netFD).ReadMsg(0xf840066480, 0xf8400e8000, 0x40000000400, 0xf8400446a0, 0x2000000020, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\n20:41:23 zeus.1          | net.(*UnixConn).ReadMsgUnix(0xf840059370, 0xf8400e8000, 0x40000000400, 0xf8400446a0, 0x2000000020, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\n20:41:23 zeus.1          | github.com/burke/zeus/go/unixsocket.(*Usock).readFromSocket(0xf840042c80, 0x0, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\n20:41:23 zeus.1          | github.com/burke/zeus/go/unixsocket.(*Usock).ReadFD(0xf840042c80, 0x0, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:109 +0xaa\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster._func_004(0xf8400591e0, 0xf840059378, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:35 +0x28\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:41 +0x195\n20:41:23 zeus.1          | goroutine 14 [chan receive]:\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doUnbootedState(0xf84006c000, 0xf8400514d0, 0x0, 0x5500000000, 0x0, ...)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:169 +0x3c7\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf84006c000, 0xf8400514d0, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:123 +0x271\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n20:41:23 zeus.1          | goroutine 15 [semacquire]:\n20:41:23 zeus.1          | sync.runtime_Semacquire(0xf840059230, 0xf840059230)\n20:41:23 zeus.1          |  /private/tmp/bindist454984655/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\n20:41:23 zeus.1          | sync.(*Cond).Wait(0xf84008e040, 0xf800000001)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).WaitUntilReadyOrCrashed(0xf84006c300, 0x301b1)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:64 +0x133\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doWaitingState(0xf84006c3c0, 0x1, 0x10eb44, 0x5700000001)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:148 +0x51\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf84006c3c0, 0xf8400514d0, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:121 +0x2cf\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n20:41:23 zeus.1          | goroutine 16 [semacquire]:\n20:41:23 zeus.1          | sync.runtime_Semacquire(0xf840059220, 0x192fa)\n20:41:23 zeus.1          |  /private/tmp/bindist454984655/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\n20:41:23 zeus.1          | sync.(*Cond).Wait(0xf840042780, 0xf800000001)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).WaitUntilReadyOrCrashed(0xf84006c0c0, 0x301b1)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:64 +0x133\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doWaitingState(0xf84006c180, 0x1, 0x10eb44, 0x5700000001)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:148 +0x51\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf84006c180, 0xf8400514d0, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:121 +0x2cf\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n20:41:23 zeus.1          | goroutine 17 [semacquire]:\n20:41:23 zeus.1          | sync.runtime_Semacquire(0xf840059210, 0xf840059210)\n20:41:23 zeus.1          |  /private/tmp/bindist454984655/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\n20:41:23 zeus.1          | sync.(*Cond).Wait(0xf840042040, 0xf800000001)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).WaitUntilReadyOrCrashed(0xf84006c000, 0x301b1)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:64 +0x133\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doWaitingState(0xf84006c0c0, 0x1, 0x10eb44, 0x5700000001)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:148 +0x51\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf84006c0c0, 0xf8400514d0, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:121 +0x2cf\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n20:41:23 zeus.1          | goroutine 18 [semacquire]:\n20:41:23 zeus.1          | exited with code 2\n20:41:23 zeus.1          | sync.runtime_Semacquire(0xf840059218, 0xf840059218)\n20:41:23 system          | sending SIGTERM to all processes\nSIGTERM received\n```\n. This is still broken. Issue should be reopened IMO.\n. +1\n. I'm also having an issue. I added \"zeus start\" to my Procfile and here's what I get:\n\n```\n20:41:23 zeus.1          | started with pid 6377\n20:41:23 zeus.1          | Starting Zeus server\n20:41:23 zeus.1          | [ready] [crashed] [running] [connecting] [waiting]\n20:41:23 zeus.1          | boot\n20:41:23 zeus.1          | \u2514\u2500\u2500 default_bundle\n20:41:23 zeus.1          |     \u251c\u2500\u2500 test_environment\n20:41:23 zeus.1          |     \u2502\u00a0  \u2514\u2500\u2500 test_helper\n20:41:23 zeus.1          |     \u2514\u2500\u2500 development_environment\n20:41:23 zeus.1          |         \u2514\u2500\u2500 prerake\n20:41:23 zeus.1          | \n20:41:23 zeus.1          | Available Commands: [waiting] [crashed] [ready]\n20:41:23 zeus.1          | zeus test (alias: rspec, testrb)\n20:41:23 zeus.1          | zeus rake\n20:41:23 zeus.1          | zeus runner (alias: r)\n20:41:23 zeus.1          | zeus server (alias: s)\n20:41:23 zeus.1          | zeus console (alias: c)\n20:41:23 zeus.1          | zeus generate (alias: g)\n20:41:23 zeus.1          | zeus dbconsole\n20:41:23 zeus.1          | statuslogger.go:49: inappropriate ioctl for device\n20:41:23 zeus.1          | panic: runtime error: integer divide by zero\n20:41:23 zeus.1          | [signal 0x8 code=0x7 addr=0x320d7 pc=0x320d7]\n20:41:23 zeus.1          | goroutine 7 [running]:\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*StatusChart).lengthOfOutput(0xf8400c3000, 0x3f, 0x0, 0xf84006bc00)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:133 +0x11e\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*StatusChart).draw(0xf8400c3000, 0xf84006bc00)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:104 +0x6f\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.StartStatusChart(0xf8400431e0, 0xf840001fa0, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:70 +0x4c5\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.Run\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:35 +0x1e7\n20:41:23 zeus.1          | goroutine 1 [chan receive]:\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.Run(0x7fff5fbff401, 0x100000005)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:51 +0x372\n20:41:23 zeus.1          | main.main()\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:37 +0x2a1\n20:41:23 zeus.1          | goroutine 2 [syscall]:\n20:41:23 zeus.1          | created by runtime.main\n20:41:23 zeus.1          |  /private/tmp/bindist454984655/go/src/pkg/runtime/proc.c:221\n20:41:23 zeus.1          | goroutine 3 [syscall]:\n20:41:23 zeus.1          | os/signal.loop()\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/os/signal/signal_unix.go:20 +0x1c\n20:41:23 zeus.1          | created by os/signal.init\u00b71\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/os/signal/signal_unix.go:26 +0x2f\n20:41:23 zeus.1          | goroutine 4 [select]:\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor(0xf8400431e0, 0xf840001eb0, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:48 +0x2fb\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.Run\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:32 +0x17b\n20:41:23 zeus.1          | goroutine 5 [syscall]:\n20:41:23 zeus.1          | syscall.Syscall()\n20:41:23 zeus.1          |  /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:14 +0x5\n20:41:23 zeus.1          | syscall.fcntl(0x200000009, 0x1, 0x9, 0x0, 0x0, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:246 +0x5c\n20:41:23 zeus.1          | syscall.CloseOnExec(0x100000009, 0x0)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/syscall/exec_unix.go:77 +0x33\n20:41:23 zeus.1          | net.socket(0x11773c, 0x4, 0x100000001, 0x0, 0xf840043540, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/net/sock.go:27 +0xe8\n20:41:23 zeus.1          | net.unixSocket(0x11773c, 0xf800000004, 0xf840044920, 0x0, 0x115bdc, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/net/unixsock_posix.go:62 +0x2a5\n20:41:23 zeus.1          | net.ListenUnix(0x11773c, 0x78696e7500000004, 0xf840044920, 0x39, 0xf840044900, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/net/unixsock_posix.go:332 +0xe5\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.StartClientHandler(0xf8400431e0, 0xf840001f00, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:24 +0xcd\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.Run\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:33 +0x19f\n20:41:23 zeus.1          | goroutine 6 [semacquire]:\n20:41:23 zeus.1          | sync.runtime_Semacquire(0x1cc478, 0xf800000001)\n20:41:23 zeus.1          |  /private/tmp/bindist454984655/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\n20:41:23 zeus.1          | sync.(*RWMutex).Lock(0x1cc470, 0x3000000030)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/sync/rwmutex.go:60 +0x83\n20:41:23 zeus.1          | syscall.forkExec(0xf8400005b0, 0xf800000067, 0xf8400515e0, 0x100000001, 0xf84008e540, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/syscall/exec_unix.go:151 +0x206\n20:41:23 zeus.1          | syscall.StartProcess(0xf8400005b0, 0xf800000067, 0xf8400515e0, 0x100000001, 0xf84008e540, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/syscall/exec_unix.go:212 +0x76\n20:41:23 zeus.1          | os.startProcess(0xf8400005b0, 0x67, 0xf8400515e0, 0x100000001, 0xf84008e500, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/os/exec_posix.go:36 +0x307\n20:41:23 zeus.1          | os.StartProcess(0xf8400005b0, 0x67, 0xf8400515e0, 0x100000001, 0xf84008e500, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/os/doc.go:24 +0x59\n20:41:23 zeus.1          | os/exec.(*Cmd).Start(0xf840085000, 0xf840046450, 0xf840059320, 0x0)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/os/exec/exec.go:256 +0x4d2\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.startWrapper(0xa5330, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:75 +0x1fb\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.StartFileMonitor(0xf8400431e0, 0xf840001f50, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:34 +0x85\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.Run\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:34 +0x1c3\n20:41:23 zeus.1          | goroutine 8 [chan receive]:\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster._func_005(0xf8400591c0, 0xf840059198, 0xf8400591a0, 0xf8400591a8, 0xf8400591b0, ...)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:42 +0x31\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.Run\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:44 +0x314\n20:41:23 zeus.1          | goroutine 9 [chan receive]:\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster._func_006(0xf840059198, 0xf8400591a0, 0xf8400591a8, 0xf8400591b0, 0xf8400591b8, ...)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:47 +0x31\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.Run\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:49 +0x356\n20:41:23 zeus.1          | goroutine 10 [finalizer wait]:\n20:41:23 zeus.1          | created by runtime.gc\n20:41:23 zeus.1          |  /private/tmp/bindist454984655/go/src/pkg/runtime/mgc0.c:882\n20:41:23 zeus.1          | goroutine 11 [syscall]:\n20:41:23 zeus.1          | created by addtimer\n20:41:23 zeus.1          |  /private/tmp/bindist454984655/go/src/pkg/runtime/ztime_amd64.c:72\n20:41:23 zeus.1          | goroutine 12 [syscall]:\n20:41:23 zeus.1          | syscall.Syscall6()\n20:41:23 zeus.1          |  /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\n20:41:23 zeus.1          | syscall.kevent(0xf, 0x0, 0x0, 0xf8400d9008, 0xa, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:199 +0x88\n20:41:23 zeus.1          | syscall.Kevent(0xf80000000f, 0x0, 0x0, 0xf8400d9008, 0xa0000000a, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/syscall/syscall_bsd.go:538 +0xa4\n20:41:23 zeus.1          | net.(*pollster).WaitFD(0xf8400d9000, 0xf84008e140, 0x0, 0x0, 0x0, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/net/fd_darwin.go:96 +0x185\n20:41:23 zeus.1          | net.(*pollServer).Run(0xf84008e140, 0x0)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/net/fd.go:236 +0xe4\n20:41:23 zeus.1          | created by net.newPollServer\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/net/newpollserver.go:35 +0x382\n20:41:23 zeus.1          | goroutine 13 [chan receive]:\n20:41:23 zeus.1          | net.(*pollServer).WaitRead(0xf84008e140, 0xf840066480, 0xf840043120, 0x23, 0x1, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/net/fd.go:268 +0x73\n20:41:23 zeus.1          | net.(*netFD).ReadMsg(0xf840066480, 0xf8400e8000, 0x40000000400, 0xf8400446a0, 0x2000000020, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\n20:41:23 zeus.1          | net.(*UnixConn).ReadMsgUnix(0xf840059370, 0xf8400e8000, 0x40000000400, 0xf8400446a0, 0x2000000020, ...)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\n20:41:23 zeus.1          | github.com/burke/zeus/go/unixsocket.(*Usock).readFromSocket(0xf840042c80, 0x0, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\n20:41:23 zeus.1          | github.com/burke/zeus/go/unixsocket.(*Usock).ReadFD(0xf840042c80, 0x0, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:109 +0xaa\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster._func_004(0xf8400591e0, 0xf840059378, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:35 +0x28\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:41 +0x195\n20:41:23 zeus.1          | goroutine 14 [chan receive]:\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doUnbootedState(0xf84006c000, 0xf8400514d0, 0x0, 0x5500000000, 0x0, ...)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:169 +0x3c7\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf84006c000, 0xf8400514d0, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:123 +0x271\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n20:41:23 zeus.1          | goroutine 15 [semacquire]:\n20:41:23 zeus.1          | sync.runtime_Semacquire(0xf840059230, 0xf840059230)\n20:41:23 zeus.1          |  /private/tmp/bindist454984655/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\n20:41:23 zeus.1          | sync.(*Cond).Wait(0xf84008e040, 0xf800000001)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).WaitUntilReadyOrCrashed(0xf84006c300, 0x301b1)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:64 +0x133\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doWaitingState(0xf84006c3c0, 0x1, 0x10eb44, 0x5700000001)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:148 +0x51\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf84006c3c0, 0xf8400514d0, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:121 +0x2cf\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n20:41:23 zeus.1          | goroutine 16 [semacquire]:\n20:41:23 zeus.1          | sync.runtime_Semacquire(0xf840059220, 0x192fa)\n20:41:23 zeus.1          |  /private/tmp/bindist454984655/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\n20:41:23 zeus.1          | sync.(*Cond).Wait(0xf840042780, 0xf800000001)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).WaitUntilReadyOrCrashed(0xf84006c0c0, 0x301b1)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:64 +0x133\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doWaitingState(0xf84006c180, 0x1, 0x10eb44, 0x5700000001)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:148 +0x51\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf84006c180, 0xf8400514d0, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:121 +0x2cf\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n20:41:23 zeus.1          | goroutine 17 [semacquire]:\n20:41:23 zeus.1          | sync.runtime_Semacquire(0xf840059210, 0xf840059210)\n20:41:23 zeus.1          |  /private/tmp/bindist454984655/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\n20:41:23 zeus.1          | sync.(*Cond).Wait(0xf840042040, 0xf800000001)\n20:41:23 zeus.1          |  /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).WaitUntilReadyOrCrashed(0xf84006c000, 0x301b1)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:64 +0x133\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doWaitingState(0xf84006c0c0, 0x1, 0x10eb44, 0x5700000001)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:148 +0x51\n20:41:23 zeus.1          | github.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf84006c0c0, 0xf8400514d0, 0x0, 0x0)\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:121 +0x2cf\n20:41:23 zeus.1          | created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n20:41:23 zeus.1          |  /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n20:41:23 zeus.1          | goroutine 18 [semacquire]:\n20:41:23 zeus.1          | exited with code 2\n20:41:23 zeus.1          | sync.runtime_Semacquire(0xf840059218, 0xf840059218)\n20:41:23 system          | sending SIGTERM to all processes\nSIGTERM received\n```\n. This is still broken. Issue should be reopened IMO.\n. +1\n. ",
    "assembler": "+1\n. +1\n. this may solve (temporary) some issues for guard-rspec: https://github.com/guard/guard-rspec/issues/145\n\nbut it also introduced some more problems, so i decided to downgrade to 0.12\n. it was acting weird with rspec-guard.. it was running tests twice in a row when it boots. I didn't have much time to diagnose it.. hope i can do it over weekend and give you some proper feedback\n. with zeus 0.13.2 and rspec 2.12 it now works!\nthe only thing i had to do was to remove \"rspec/autorun\" requirement in spec_helper (which caused double specs with failures)\n. +1\n. +1\n. this may solve (temporary) some issues for guard-rspec: https://github.com/guard/guard-rspec/issues/145\n\nbut it also introduced some more problems, so i decided to downgrade to 0.12\n. it was acting weird with rspec-guard.. it was running tests twice in a row when it boots. I didn't have much time to diagnose it.. hope i can do it over weekend and give you some proper feedback\n. with zeus 0.13.2 and rspec 2.12 it now works!\nthe only thing i had to do was to remove \"rspec/autorun\" requirement in spec_helper (which caused double specs with failures)\n. ",
    "barttenbrinke": "+1\n. I get this when I run zeus through foreman under Mountain Lion (see https://github.com/burke/zeus/issues/92)\n. +1\n. I get this when I run zeus through foreman under Mountain Lion (see https://github.com/burke/zeus/issues/92)\n. ",
    "vjrabanelly": "+1 Same error for me, Running Zeus 0.12.0 on OSX Mountain Lion with Foreman 0.60.2\n. +1 Same error for me, Running Zeus 0.12.0 on OSX Mountain Lion with Foreman 0.60.2\n. ",
    "MattRogish": "+1\n. I'm on zeus 0.13.1 on OSX 10.8.x and I've noticed now (after upgrading from zeus 0.12.0) I get occasional hangs waiting on test_helper that didn't happen on 0.12.0. I have to restart zeus to run specs again.\n. +1\n. I get this as well when running Zeus under foreman on Mountain Lion.\n. Removing zeus.json fixed it for me, too. 0.13.3.pre2\n. +1\n. I'm on zeus 0.13.1 on OSX 10.8.x and I've noticed now (after upgrading from zeus 0.12.0) I get occasional hangs waiting on test_helper that didn't happen on 0.12.0. I have to restart zeus to run specs again.\n. +1\n. I get this as well when running Zeus under foreman on Mountain Lion.\n. Removing zeus.json fixed it for me, too. 0.13.3.pre2\n. ",
    "kossnocorp": "Have same problem.\n. Have same problem.\n. ",
    "bluestrike2": "Ran into the same issue. Fine if in another process. Not sure if it'll make a difference, but if there are other declarations in the Procfile zeus doesn't get to the boot stage like the above backtrace.\n. @croaky You can always consider using an an additional Procfile (i.e. `Procfile.dev`): `foreman start -f Procfile.dev`. That way I can take care of starting up the server, guard, and tail various logs. Right now I have to start zeus as a separate process, but for the time being, it works decently enough.\n. Random thought but for the time being Pow's port proxying feature will get you through things with the best of both worlds (pow's convenience + zeus performance) by sidestepping the issue of having to reload pow. From your app directory:\n\n```\necho 3000 > ~/.pow/`basename $PWD`\n```\n\nThen pull up your app as you normally would with pow `htttp://awesom-o.dev`. Thoughtbot had a short [post](http://robots.thoughtbot.com/post/40110176152/foreman-as-process-manager-pow-as-dns-server-and-http) on the idea w/ Foreman.\n. When you get a chance, care to elaborate? Curious what's jumping out at you.\n. Ran into the same issue. Fine if in another process. Not sure if it'll make a difference, but if there are other declarations in the Procfile zeus doesn't get to the boot stage like the above backtrace.\n. @croaky You can always consider using an an additional Procfile (i.e. `Procfile.dev`): `foreman start -f Procfile.dev`. That way I can take care of starting up the server, guard, and tail various logs. Right now I have to start zeus as a separate process, but for the time being, it works decently enough.\n. Random thought but for the time being Pow's port proxying feature will get you through things with the best of both worlds (pow's convenience + zeus performance) by sidestepping the issue of having to reload pow. From your app directory:\n\n```\necho 3000 > ~/.pow/`basename $PWD`\n```\n\nThen pull up your app as you normally would with pow `htttp://awesom-o.dev`. Thoughtbot had a short [post](http://robots.thoughtbot.com/post/40110176152/foreman-as-process-manager-pow-as-dns-server-and-http) on the idea w/ Foreman.\n. When you get a chance, care to elaborate? Curious what's jumping out at you.\n. ",
    "croaky": "I would like to use Zeus with Foreman (which is [our standard protocol for running Rails apps in development](https://github.com/thoughtbot/guides/tree/master/protocol)), but I'm unclear how to set it up.\n\nI don't think I want to add Zeus to the `Procfile`:  I want the Procfile to define the processes as they'll run in all environments.\n\nAnother solution I can think of is to `alias rails=\"zeus rails\"`. Seems a little crazy, though.\n. Worked for me, too. Thanks!\n. I would like to use Zeus with Foreman (which is [our standard protocol for running Rails apps in development](https://github.com/thoughtbot/guides/tree/master/protocol)), but I'm unclear how to set it up.\n\nI don't think I want to add Zeus to the `Procfile`:  I want the Procfile to define the processes as they'll run in all environments.\n\nAnother solution I can think of is to `alias rails=\"zeus rails\"`. Seems a little crazy, though.\n. Worked for me, too. Thanks!\n. ",
    "erotte": "+1\n. +1\n. ",
    "pencilcheck": "It worked for me. I write\n\nzeus: zeus start\nweb: zeus server -p $PORT -e $RACK_ENV\n\nThe only issue I had is the display of zeus command is all expanded and does not look pretty from foreman. \n. @IanVaughan that's true as foreman starts workers in random order so I might have to rerun the foreman multiple times before the web workers run after zeus worker.\n\nI have been looking for ways to specify orders for workers unfortunately it seems like there is no interests from the author to support this. Or if someone could prove me wrong.\n. same, `zeus rspec spec` worked\n. However, after upgrading to 0.13.4.pre2, when I run `zeus rspec` nothing happens, no tests are run and the program exits. Is there anything I missed?\n. Of course I run zeus start first. And the alias is green\n. I thought this patch fixed so that we don't have to type out the path...\n. It worked for me. I write\n\nzeus: zeus start\nweb: zeus server -p $PORT -e $RACK_ENV\n\nThe only issue I had is the display of zeus command is all expanded and does not look pretty from foreman. \n. @IanVaughan that's true as foreman starts workers in random order so I might have to rerun the foreman multiple times before the web workers run after zeus worker.\n\nI have been looking for ways to specify orders for workers unfortunately it seems like there is no interests from the author to support this. Or if someone could prove me wrong.\n. same, `zeus rspec spec` worked\n. However, after upgrading to 0.13.4.pre2, when I run `zeus rspec` nothing happens, no tests are run and the program exits. Is there anything I missed?\n. Of course I run zeus start first. And the alias is green\n. I thought this patch fixed so that we don't have to type out the path...\n. ",
    "IanVaughan": "as @pencilcheck says, the way zeus wants to reposition the cursor means its output within foreman is not pretty, but it does work, for me in any case.\nBut for me, I found that the time between foreman running between starting zeus and starting the web components was too fast, thus the server failed to boot as zeus was not ready.\n. as @pencilcheck says, the way zeus wants to reposition the cursor means its output within foreman is not pretty, but it does work, for me in any case.\nBut for me, I found that the time between foreman running between starting zeus and starting the web components was too fast, thus the server failed to boot as zeus was not ready.\n. ",
    "dgdosen": "I notice foreman is really slow with zeus (and guard and karma) anyone else have this issue? \n. I notice foreman is really slow with zeus (and guard and karma) anyone else have this issue? \n. ",
    "jongold": "Running into problems with my dev Procfile loading items in a random order too.\n\n```\nzeus: zeus start\nweb: zeus server -p 1313 -e development\n```\n\n-> `Can't connect to master. Run zeus start first.`\n\nI could remove `zeus` from the Procfile but then if you forget to do `zeus start` the thing won't run. Any ideas?\n. Running into problems with my dev Procfile loading items in a random order too.\n\n```\nzeus: zeus start\nweb: zeus server -p 1313 -e development\n```\n\n-> `Can't connect to master. Run zeus start first.`\n\nI could remove `zeus` from the Procfile but then if you forget to do `zeus start` the thing won't run. Any ideas?\n. ",
    "Blue-Dog-Archolite": "+1 for zeus and Foreman, compatibility with unicorn would also be great. \n. bump here as well. \n. test_helper.rb\n\n```\nENV[\"RAILS_ENV\"] = \"test\"\n\nrequire File.expand_path('../../config/environment', __FILE__)\n\nrequire \"rails/test_help\"\nrequire \"minitest/rails\"\n\nrequire \"minitest/rails/capybara\"\nrequire 'resque_unit_scheduler'\nrequire 'resque_unit'\nrequire 'action_controller/test_case'\nrequire 'machinist'\nrequire 'machinist/active_record'\nrequire 'mocha/setup'\nrequire 'turn'\nrequire 'vcr'\n\nbegin\n  require 'pry-rescue/minitest'\nrescue LoadError => e\nend\n\nload_schema_from_file = lambda {\n  load \"#{Rails.root.to_s}/db/schema.rb\" # use db agnostic schema by default\n}\nsilence_stream(STDOUT, &load_schema_from_file)\n```\n\ninside of my test_helper.rb sorted out this error for me.\n\nIf you are using Machinist, make sure the silence_streams call is before your \n\n```\nDir[\"#{File.expand_path(File.dirname(__FILE__))}/blueprints/*.rb\"].each { |f| require f }\n```\n. +1 for zeus and Foreman, compatibility with unicorn would also be great. \n. bump here as well. \n. test_helper.rb\n\n```\nENV[\"RAILS_ENV\"] = \"test\"\n\nrequire File.expand_path('../../config/environment', __FILE__)\n\nrequire \"rails/test_help\"\nrequire \"minitest/rails\"\n\nrequire \"minitest/rails/capybara\"\nrequire 'resque_unit_scheduler'\nrequire 'resque_unit'\nrequire 'action_controller/test_case'\nrequire 'machinist'\nrequire 'machinist/active_record'\nrequire 'mocha/setup'\nrequire 'turn'\nrequire 'vcr'\n\nbegin\n  require 'pry-rescue/minitest'\nrescue LoadError => e\nend\n\nload_schema_from_file = lambda {\n  load \"#{Rails.root.to_s}/db/schema.rb\" # use db agnostic schema by default\n}\nsilence_stream(STDOUT, &load_schema_from_file)\n```\n\ninside of my test_helper.rb sorted out this error for me.\n\nIf you are using Machinist, make sure the silence_streams call is before your \n\n```\nDir[\"#{File.expand_path(File.dirname(__FILE__))}/blueprints/*.rb\"].each { |f| require f }\n```\n. ",
    "MadRabbit": "fore the future reference here's how you can run stuff with zeus and foreman and avoid the `Run zeus start first` issue\n\nhttps://gist.github.com/MadRabbit/8447712\n. same thing, moving from 1.8.0 -> 1.8.1  + `bundle exec` fixes it\n. fore the future reference here's how you can run stuff with zeus and foreman and avoid the `Run zeus start first` issue\n\nhttps://gist.github.com/MadRabbit/8447712\n. same thing, moving from 1.8.0 -> 1.8.1  + `bundle exec` fixes it\n. ",
    "ljfc": "No problem. Cheers!\n. Thanks, this is working perfectly with 0.11.0.\n. No problem. Cheers!\n. Thanks, this is working perfectly with 0.11.0.\n. ",
    "ghost": "Wow, it actually works if I type something... Yeah it seems it's the same issue. Thanks for pointing out.\n. It seems to be related to database connections in the testing environment.\n\nThe original reporter is using `database_cleaner`, and I'm getting the same error when adding these lines to my `spec_helper.rb` in order to test using Selenium or PhantomJS:\n\n```\nclass ActiveRecord::Base\n  mattr_accessor :shared_connection\n  @@shared_connection = nil\n\n  def self.connection\n    @@shared_connection || retrieve_connection\n  end\nend\nActiveRecord::Base.shared_connection = ActiveRecord::Base.connection\n```\n. @sushil10018 Killer. Just saved me an hour\n. I just ran into this. What's bizarre is that I have another app that I was just working on yesterday that also uses zeus/guard/capybara/rspec-given and this simply does not happen. Wonder if it's some other gem in my stack that somehow triggers the issue.\n. Actually I think I might have figured it out\n\nspec_helper.rb\n\n```\nrequire 'rspec/autorun'\n```\n\nCommented that out and now the error is gone.\n. https://github.com/burke/zeus#important\n\nAlthough I believe it was just something I tried at random and only looked up after the fact.\n. @randoum Yes, it works with the exact same command.\n\nI haven't renamed the class, it is still named `CustomPlan`, though the contributor for this issue could do so.\n. Wow, it actually works if I type something... Yeah it seems it's the same issue. Thanks for pointing out.\n. It seems to be related to database connections in the testing environment.\n\nThe original reporter is using `database_cleaner`, and I'm getting the same error when adding these lines to my `spec_helper.rb` in order to test using Selenium or PhantomJS:\n\n```\nclass ActiveRecord::Base\n  mattr_accessor :shared_connection\n  @@shared_connection = nil\n\n  def self.connection\n    @@shared_connection || retrieve_connection\n  end\nend\nActiveRecord::Base.shared_connection = ActiveRecord::Base.connection\n```\n. @sushil10018 Killer. Just saved me an hour\n. I just ran into this. What's bizarre is that I have another app that I was just working on yesterday that also uses zeus/guard/capybara/rspec-given and this simply does not happen. Wonder if it's some other gem in my stack that somehow triggers the issue.\n. Actually I think I might have figured it out\n\nspec_helper.rb\n\n```\nrequire 'rspec/autorun'\n```\n\nCommented that out and now the error is gone.\n. https://github.com/burke/zeus#important\n\nAlthough I believe it was just something I tried at random and only looked up after the fact.\n. @randoum Yes, it works with the exact same command.\n\nI haven't renamed the class, it is still named `CustomPlan`, though the contributor for this issue could do so.\n. ",
    "benjamintanweihao": "You guys aren't the only one. Same thing is happening to me too.\n. EDITED! \n\nDoes `rails server` work for you in the first place? I got tripped a few times because of this.\n. Have you patched your ruby using falcon and the backported GC?\n\nOn Fri, Sep 28, 2012 at 9:50 AM, Jeweller-Tsai notifications@github.comwrote:\n\n> I've got the same trouble. I'm using ruby 1.9.3p194, rails 3.0.17 on OS X\n> 10.8.2, it's stuck and can't ran other zeus commands\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/118#issuecomment-8961069.\n. Oh yes. Zeus needs a patched ruby in order to work its magic. The\nrequirements state: _Ruby 1.9.3+ with backported GC from Ruby 2.0 OR_\n Rubinius.\\* The instructions on how to get up and running are on this\ngist: https://gist.github.com/1688857\n\nOn Fri, Sep 28, 2012 at 10:58 AM, Peter Ragone notifications@github.comwrote:\n\n> have i done what with the who now? I haven't touched my ruby - is there\n> something I should've done?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/118#issuecomment-8962226.\n. What OS are you on? If you're Mac OSX, you probably need XCode 4.3 or gcc-osx-installer. \n. rails server starts ok ?\n. You guys aren't the only one. Same thing is happening to me too.\n. EDITED! \n\nDoes `rails server` work for you in the first place? I got tripped a few times because of this.\n. Have you patched your ruby using falcon and the backported GC?\n\nOn Fri, Sep 28, 2012 at 9:50 AM, Jeweller-Tsai notifications@github.comwrote:\n\n> I've got the same trouble. I'm using ruby 1.9.3p194, rails 3.0.17 on OS X\n> 10.8.2, it's stuck and can't ran other zeus commands\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/118#issuecomment-8961069.\n. Oh yes. Zeus needs a patched ruby in order to work its magic. The\nrequirements state: _Ruby 1.9.3+ with backported GC from Ruby 2.0 OR_\n Rubinius.\\* The instructions on how to get up and running are on this\ngist: https://gist.github.com/1688857\n\nOn Fri, Sep 28, 2012 at 10:58 AM, Peter Ragone notifications@github.comwrote:\n\n> have i done what with the who now? I haven't touched my ruby - is there\n> something I should've done?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/118#issuecomment-8962226.\n. What OS are you on? If you're Mac OSX, you probably need XCode 4.3 or gcc-osx-installer. \n. rails server starts ok ?\n. ",
    "kvirani": "I was having this issue in 0.11.1 and updating to the most recent 0.12.0 fixed it for me. Thank you :)\n. I was having this issue in 0.11.1 and updating to the most recent 0.12.0 fixed it for me. Thank you :)\n. ",
    "apraditya": "I am having this issue even though I'm on 0.13.2. Thank you\n. I am having this issue even though I'm on 0.13.2. Thank you\n. ",
    "apolzon": "Great, thanks.  Upgrade my gem, but the zeus server never gets past \"Starting Zeus server\".  If I let it try to boot for several minutes, it will eventually ouput `EOF`\n\n  Is there a logfile somewhere I can look at to see whats happening? (Or a different upgrade process needed other than installing v 0.10.1, and uninstalling 0.10.0?)\n\nEDIT:\nIf I try to run a command while the server is booting, and then kill the server, I can get a backtrace.  The backtrace includes paths that look to be from your local system:\n\n``` bash\ngoroutine 1 [running]:\ngithub.com/burke/zeus/go/zeusclient.doRun(0x1, 0x1000000000, 0x23ff, 0x7fff5fbff601)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusclient/zeusclient.go:81 +0x5dc\ngithub.com/burke/zeus/go/zeusclient.Run(0x7fff5fbff601, 0xf800000006)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusclient/zeusclient.go:25 +0x23\n```\n. Great, thanks.  Upgrade my gem, but the zeus server never gets past \"Starting Zeus server\".  If I let it try to boot for several minutes, it will eventually ouput `EOF`\n\n  Is there a logfile somewhere I can look at to see whats happening? (Or a different upgrade process needed other than installing v 0.10.1, and uninstalling 0.10.0?)\n\nEDIT:\nIf I try to run a command while the server is booting, and then kill the server, I can get a backtrace.  The backtrace includes paths that look to be from your local system:\n\n``` bash\ngoroutine 1 [running]:\ngithub.com/burke/zeus/go/zeusclient.doRun(0x1, 0x1000000000, 0x23ff, 0x7fff5fbff601)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusclient/zeusclient.go:81 +0x5dc\ngithub.com/burke/zeus/go/zeusclient.Run(0x7fff5fbff601, 0xf800000006)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusclient/zeusclient.go:25 +0x23\n```\n. ",
    "vadviktor": "This is the very same thing happening to me too. I am using the current Ubuntu LTS 64bit in a Vmware client (if this info helps) Everything compiled fine, but zeus refuse to throw his bolts of thunder :(\n. Thank you, that solved the problem!\n. This is the very same thing happening to me too. I am using the current Ubuntu LTS 64bit in a Vmware client (if this info helps) Everything compiled fine, but zeus refuse to throw his bolts of thunder :(\n. Thank you, that solved the problem!\n. ",
    "scottmessinger": "I'm still seeing this error message on zeus 0.12.0.\n\nI tried entering the line from the zeus.json file and this is what happened:\n\n``` shell\n$ ruby -rzeus/rails -eZeus.go\n/Users/ScottMessinger/.rvm/gems/ruby-1.9.3-p286-perf@common_curriculum_topsoil/gems/zeus-0.12.0/lib/zeus.rb:36:in `for_fd': not a socket file descriptor (ArgumentError)\n    from /Users/ScottMessinger/.rvm/gems/ruby-1.9.3-p286-perf@common_curriculum_topsoil/gems/zeus-0.12.0/lib/zeus.rb:36:in `setup_master_socket!'\n    from /Users/ScottMessinger/.rvm/gems/ruby-1.9.3-p286-perf@common_curriculum_topsoil/gems/zeus-0.12.0/lib/zeus.rb:43:in `go'\n    from -e:1:in `<main>'\n```\n. I'm still seeing this error message on zeus 0.12.0.\n\nI tried entering the line from the zeus.json file and this is what happened:\n\n``` shell\n$ ruby -rzeus/rails -eZeus.go\n/Users/ScottMessinger/.rvm/gems/ruby-1.9.3-p286-perf@common_curriculum_topsoil/gems/zeus-0.12.0/lib/zeus.rb:36:in `for_fd': not a socket file descriptor (ArgumentError)\n    from /Users/ScottMessinger/.rvm/gems/ruby-1.9.3-p286-perf@common_curriculum_topsoil/gems/zeus-0.12.0/lib/zeus.rb:36:in `setup_master_socket!'\n    from /Users/ScottMessinger/.rvm/gems/ruby-1.9.3-p286-perf@common_curriculum_topsoil/gems/zeus-0.12.0/lib/zeus.rb:43:in `go'\n    from -e:1:in `<main>'\n```\n. ",
    "klebervirgilio": "Getting this error: It looks like Zeus is already running. If not, remove .zeus.sock and try again.\n\nAt CentOS release 5.9 (Final) - Linux 2.6.18-348.1.1.el5 # x86_64 GNU/Linux using ruby 1.9.3p194 (2012-04-20 revision 35410) [x86_64-linux]\n. Getting this error: It looks like Zeus is already running. If not, remove .zeus.sock and try again.\n\nAt CentOS release 5.9 (Final) - Linux 2.6.18-348.1.1.el5 # x86_64 GNU/Linux using ruby 1.9.3p194 (2012-04-20 revision 35410) [x86_64-linux]\n. ",
    "rafaelparra": "I also have a similar issue. I moved the location of the rails application. zeus was running in the previous location. I killed all the zeus processes but still getting:\nStarting Zeus server\nUnable to accept socket connection.\nIt looks like Zeus is already running. If not, remove .zeus.sock and try again.\nusing osx here.\n. I also have a similar issue. I moved the location of the rails application. zeus was running in the previous location. I killed all the zeus processes but still getting:\nStarting Zeus server\nUnable to accept socket connection.\nIt looks like Zeus is already running. If not, remove .zeus.sock and try again.\nusing osx here.\n. ",
    "vitobotta": "I also am having the same problem, and can confirm that saving a model twice \"fixes\" it. Weird.\nProblem is, when I forget to do that I have to kill zeus, remove the sock file and start it again. BTW thanks! I really like the idea and the approach\n. Sure:\n\nZeus version 0.10.2\nRails 3.2.8\nOS X Mountain Lion\n\nsource 'http://rubygems.org'\n\ngem 'rails', '3.2.8'\ngem 'haml'\ngem \"simple_form\"\ngem \"mysql2\"\ngem \"devise\"\ngem \"cancan\"\ngem \"vitobotta-brb\"\ngem \"rufus-scheduler\"\ngem \"eventmachine\"\ngem \"redis\", \"~> 2.2.0\"\ngem \"ipaddress\"\ngem \"rest-client\"\ngem \"nokogiri\"\ngem \"slowweb\"\ngem 'kaminari'\ngem 'squeel'\ngem 'spectator-validates_email', require: 'validates_email'\ngem \"maxmind\", git: \"https://github.com/adam12/maxmind.git\"\ngem 'aflexi', git: 'git@codebasehq.com:onapp/onappcdn/aflexi.git'\ngem 'oauth'\ngem 'json'\ngem 'httpclient'\ngem 'validate_url'\ngem 'tableless_model', git: \"git://github.com/vitobotta/tableless_model.git\", branch: \"development\"\ngem 'gravatar_image_tag'\ngem \"rcov\"\ngem 'hpricot' \ngem 'ruby_parser' \ngem \"faker\"\ngem 'socky-client-rails'\ngem \"unicorn\"\ngem \"daemons\", require: false \ngem 'resque', require: \"resque/server\"\ngem \"pony\"\ngem \"resque-pool\"\ngem 'ubersmith', git: 'git@codebasehq.com:onapp/onapp/ubersmith-api-wrapper.git', tag: '0.1.8'\ngem 'iso_country_codes'\ngem 'country-select', git: \"git://github.com/jamesds/country-select.git\"\ngem 'onapp-enc-sign', git: 'git@codebasehq.com:onapp/onapp/onapp-enc-sign.git', tag: '0.1.0'\ngem 'gpgme'\ngem 'paper_trail', '~> 2'\ngem 'prawn_rails'\ngem \"private_pub\", git: \"https://github.com/ryanb/private_pub.git\"\ngem 'newrelic_rpm'\ngem \"newrelic-redis\"\ngem 'rpm_contrib'\ngem 'php_serialize'\ngem 'resque-loner'\ngem 'resque-scheduler', :require => 'resque_scheduler'\n\ngroup :assets do\n  gem 'sass-rails', \"  ~> 3.2.3\"\n  gem 'coffee-rails', \"~> 3.2.1\"\n  gem 'uglifier', '>=1.0.3'\n  gem 'compass-rails'\n  gem 'compass-h5bp'\n  gem \"select2-rails\"\nend\n\ngem 'haml-rails' # Optional - to generate haml\n\ngem 'jquery-rails'\ngem 'html5-rails'\ngem 'rails-dev-tweaks', '~> 0.6.1'\n\ngroup :development do\n  gem \"activerecord-import\", require: false \n  gem \"rspec-rails\"\n  gem \"factory_girl_rails\"\n  gem 'jasmine' \n  gem \"thin\"\n  gem \"letter_opener\"\n  gem \"genspec\", git: \"git://github.com/vitobotta/genspec.git\"\nend\n\ngroup :test do\n  gem \"rspec-rails\"\n  gem \"factory_girl_rails\"\n  gem 'jasmine'\n  gem 'spork'\n  gem \"launchy\"\n  gem \"cucumber\", git: \"git://github.com/cucumber/cucumber.git\"\n  gem \"cucumber-rails\"\n  gem \"pickle\"\n  gem \"database_cleaner\", git: \"git://github.com/stanislaw/database_cleaner.git\"\n  gem \"capybara\"\n  gem \"timecop\"\n  gem \"vcr\"\n  gem \"webmock\"\n  gem \"email_spec\"\n  gem \"em-spec\"\n  gem \"genspec\", git: \"git://github.com/vitobotta/genspec.git\"\n  gem \"acts_as_fu\"\n  # gem 'simplecov', require: false\n  gem 'akephalos2', git: 'git://github.com/Nerian/akephalos2.git'\n  # gem \"poltergeist\"\n  # gem \"selenium-webdriver\"\n  # gem \"capybara-webkit\"\n  gem 'pry'\n  gem 'rspec-spy'\nend\n\nOn 15 Sep 2012, at 16:23, Burke Libbey notifications@github.com wrote:\n\n> Strange; I haven't been able to replicate this. Can you share more information about your setup?\n> \n> Versions of: Zeus, Rails, OS, Ruby.\n> \n> Gemfile dump if possible.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Same here :)\n. I also am having the same problem, and can confirm that saving a model twice \"fixes\" it. Weird.\nProblem is, when I forget to do that I have to kill zeus, remove the sock file and start it again. BTW thanks! I really like the idea and the approach\n. Sure:\n\nZeus version 0.10.2\nRails 3.2.8\nOS X Mountain Lion\n\nsource 'http://rubygems.org'\n\ngem 'rails', '3.2.8'\ngem 'haml'\ngem \"simple_form\"\ngem \"mysql2\"\ngem \"devise\"\ngem \"cancan\"\ngem \"vitobotta-brb\"\ngem \"rufus-scheduler\"\ngem \"eventmachine\"\ngem \"redis\", \"~> 2.2.0\"\ngem \"ipaddress\"\ngem \"rest-client\"\ngem \"nokogiri\"\ngem \"slowweb\"\ngem 'kaminari'\ngem 'squeel'\ngem 'spectator-validates_email', require: 'validates_email'\ngem \"maxmind\", git: \"https://github.com/adam12/maxmind.git\"\ngem 'aflexi', git: 'git@codebasehq.com:onapp/onappcdn/aflexi.git'\ngem 'oauth'\ngem 'json'\ngem 'httpclient'\ngem 'validate_url'\ngem 'tableless_model', git: \"git://github.com/vitobotta/tableless_model.git\", branch: \"development\"\ngem 'gravatar_image_tag'\ngem \"rcov\"\ngem 'hpricot' \ngem 'ruby_parser' \ngem \"faker\"\ngem 'socky-client-rails'\ngem \"unicorn\"\ngem \"daemons\", require: false \ngem 'resque', require: \"resque/server\"\ngem \"pony\"\ngem \"resque-pool\"\ngem 'ubersmith', git: 'git@codebasehq.com:onapp/onapp/ubersmith-api-wrapper.git', tag: '0.1.8'\ngem 'iso_country_codes'\ngem 'country-select', git: \"git://github.com/jamesds/country-select.git\"\ngem 'onapp-enc-sign', git: 'git@codebasehq.com:onapp/onapp/onapp-enc-sign.git', tag: '0.1.0'\ngem 'gpgme'\ngem 'paper_trail', '~> 2'\ngem 'prawn_rails'\ngem \"private_pub\", git: \"https://github.com/ryanb/private_pub.git\"\ngem 'newrelic_rpm'\ngem \"newrelic-redis\"\ngem 'rpm_contrib'\ngem 'php_serialize'\ngem 'resque-loner'\ngem 'resque-scheduler', :require => 'resque_scheduler'\n\ngroup :assets do\n  gem 'sass-rails', \"  ~> 3.2.3\"\n  gem 'coffee-rails', \"~> 3.2.1\"\n  gem 'uglifier', '>=1.0.3'\n  gem 'compass-rails'\n  gem 'compass-h5bp'\n  gem \"select2-rails\"\nend\n\ngem 'haml-rails' # Optional - to generate haml\n\ngem 'jquery-rails'\ngem 'html5-rails'\ngem 'rails-dev-tweaks', '~> 0.6.1'\n\ngroup :development do\n  gem \"activerecord-import\", require: false \n  gem \"rspec-rails\"\n  gem \"factory_girl_rails\"\n  gem 'jasmine' \n  gem \"thin\"\n  gem \"letter_opener\"\n  gem \"genspec\", git: \"git://github.com/vitobotta/genspec.git\"\nend\n\ngroup :test do\n  gem \"rspec-rails\"\n  gem \"factory_girl_rails\"\n  gem 'jasmine'\n  gem 'spork'\n  gem \"launchy\"\n  gem \"cucumber\", git: \"git://github.com/cucumber/cucumber.git\"\n  gem \"cucumber-rails\"\n  gem \"pickle\"\n  gem \"database_cleaner\", git: \"git://github.com/stanislaw/database_cleaner.git\"\n  gem \"capybara\"\n  gem \"timecop\"\n  gem \"vcr\"\n  gem \"webmock\"\n  gem \"email_spec\"\n  gem \"em-spec\"\n  gem \"genspec\", git: \"git://github.com/vitobotta/genspec.git\"\n  gem \"acts_as_fu\"\n  # gem 'simplecov', require: false\n  gem 'akephalos2', git: 'git://github.com/Nerian/akephalos2.git'\n  # gem \"poltergeist\"\n  # gem \"selenium-webdriver\"\n  # gem \"capybara-webkit\"\n  gem 'pry'\n  gem 'rspec-spy'\nend\n\nOn 15 Sep 2012, at 16:23, Burke Libbey notifications@github.com wrote:\n\n> Strange; I haven't been able to replicate this. Can you share more information about your setup?\n> \n> Versions of: Zeus, Rails, OS, Ruby.\n> \n> Gemfile dump if possible.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Same here :)\n. ",
    "jhilden": "This might also help:  https://coderwall.com/p/plejka\n. Also gettting similar crashes on Ubuntu 12.10 64-bit with Ruby 1.9.3-perf p194\n\nhttps://gist.github.com/4808a7e20a139fd92c9f\n. This might also help:  https://coderwall.com/p/plejka\n. Also gettting similar crashes on Ubuntu 12.10 64-bit with Ruby 1.9.3-perf p194\n\nhttps://gist.github.com/4808a7e20a139fd92c9f\n. ",
    "andres-arana": "I noticed the same behaviour with `zeus rake spec`, `zeus rake cucumber` and any of its variants (`zeus rake spec:models`, etc.). Strangely, other utilities like `zeus rake db:migrate` and such work correctly.\n\nHowever, I believe that running `zeus rake spec` (or `zeus rake test` for that matter) instead of `zeus rspec spec/**` will miss the test preinitialization entirely and only run in an environment where the bare rake is preforked. So it doesn't make much sense to run it that way, am I right?\n. I noticed the same behaviour with `zeus rake spec`, `zeus rake cucumber` and any of its variants (`zeus rake spec:models`, etc.). Strangely, other utilities like `zeus rake db:migrate` and such work correctly.\n\nHowever, I believe that running `zeus rake spec` (or `zeus rake test` for that matter) instead of `zeus rspec spec/**` will miss the test preinitialization entirely and only run in an environment where the bare rake is preforked. So it doesn't make much sense to run it that way, am I right?\n. ",
    "ashrafuzzaman": "For me it passes but runs twice,\n\n``` console\nzeus test spec/models/rate_spec.rb\n```\n. Forget what I said. It is fixed by removing  `require rspec/autorun`\n. For me it passes but runs twice,\n\n``` console\nzeus test spec/models/rate_spec.rb\n```\n. Forget what I said. It is fixed by removing  `require rspec/autorun`\n. ",
    "douglascamata": "I had the same issue. Running zeus 0.11.1, activerecord 3.2.3, and rails 3.2.3. \n\nFigured out that my spec_helper.rb had some Spork configuration code. Removed it and everything worked fine.\n. I had the same issue. Running zeus 0.11.1, activerecord 3.2.3, and rails 3.2.3. \n\nFigured out that my spec_helper.rb had some Spork configuration code. Removed it and everything worked fine.\n. ",
    "xiplias": "+1\n. +1\n. ",
    "ziazek": "+1\n. +1\n. ",
    "ollym": "+1\n. +1\n. ",
    "terlar": ":+1: \n. No, but I am not using paperclip though. I am using (https://github.com/thoughtbot/shoulda-matchers).\n\nDon't use it for any models, only use it for my controllers at this moment. And again, works without `zeus`.\n. I will close this issue, `zeus` was just more sensitive to the order I loaded the gems. Fixed the order and put them in the same group to make it less error prone.\n\nSetup that was failing:\n\n``` ruby\ngroup :test do\n  gem 'shoulda-matchers'\nend\n\ngroup :development, :test do\n  gem 'rspec-rails'\nend\n```\n\nSetup that is working:\n\n``` ruby\ngroup :test do\n  gem 'rspec-rails'\n  gem 'shoulda-matchers'\nend\n```\n. @squiter85 Did you try to move them to the same group as that seemed to be the problem for me.\n. :+1: \n. No, but I am not using paperclip though. I am using (https://github.com/thoughtbot/shoulda-matchers).\n\nDon't use it for any models, only use it for my controllers at this moment. And again, works without `zeus`.\n. I will close this issue, `zeus` was just more sensitive to the order I loaded the gems. Fixed the order and put them in the same group to make it less error prone.\n\nSetup that was failing:\n\n``` ruby\ngroup :test do\n  gem 'shoulda-matchers'\nend\n\ngroup :development, :test do\n  gem 'rspec-rails'\nend\n```\n\nSetup that is working:\n\n``` ruby\ngroup :test do\n  gem 'rspec-rails'\n  gem 'shoulda-matchers'\nend\n```\n. @squiter85 Did you try to move them to the same group as that seemed to be the problem for me.\n. ",
    "sbusso": ":+1: \n. :+1: \n. ",
    "matthieua": "@burke Any luck?\n. @burke Any luck?\n. ",
    "atipugin": ":+1: \n. :+1: \n. ",
    "Domon": ":+1: \n. :+1: \n. ",
    "quellhorst": ":+1: \n. :+1: \n. ",
    "aaronjensen": "+:100:\n. agree w/ @bluestrike2. Also, if you're using guard, you can combine with https://github.com/aaronjensen/guard-zeus_server to get automatic restarts as needed.\n. :+1: \n. I'm on OS X\n. I tried forcing guard to polling and guard dies right away when it tries to poll .zeus.sock\n\n```\n[1] guard(main)> /Users/aaronjensen/.rvm/rubies/ruby-1.9.3-p327/lib/ruby/1.9.1/digest.rb:44:in `initialize': Operation not supported on socket - /code/.zeus.sock (Errno::EOPNOTSUPP)\n```\n. ok, so I added to my Guardfile :\n\n``` ruby\nignore /\\.zeus\\.sock/\n```\n\nIt now seems to be picking up changes just fine even without forcing polling.\n\nMaybe this should go in the readme or a wiki or something? what do you think @burke ?\n. That worked, thanks!\n. this seems to be true of other commands as well, like `zeus test`. This breaks things like guard-rspec notifications:  https://github.com/guard/guard-rspec/issues/134\n. this seems fixed now\n. Hmm, after further testing, it seems like the file i'm changing is actually triggering a zeus reload of the test environment. Which means that it's likely just that the test is running before that happens. That's a tricky one...\n. hmm. regarding the binary thing, what about distributing packages? brew, apt, yum, etc? Does the gem actually need to be in the gem path? It probably does huh... so that'd mean you'd need the package _and_ the gem. meh.\n\nAbout inotify, yeah that's too bad. It's just something to be aware of I guess. \n. I think that most of the performance issue I was having was `rubygems-bundler`. Even with zeus in the `.noexec.yml` it still took precious time to start zeus. After uninstalling `rubygems-bundler` and switching to `bundle install --standalone --binstubs` with zeus installed normally via `gem install zeus` things are incredibly snappy.\n. Regarding vroom, what if zeus took an additional parameter that was a proxy for inotify. In other words, if I used vroom to save `foo.rb` (and run `foo_spec.rb`), vroom would call `zeus --notify foo.rb rspec foo_spec.rb`. The client would tell the server to trigger anything it needed to trigger as a result of `foo.rb` changing and then it would run the rspec command.\n. this is the failing line: \n\n``` ruby\n           STDOUT.reopen('/dev/null', 'a')\n```\n. I got it to respond to ^Z, it won't respond to ^Z while in guard (probably unrelated)\n. I've actually started running server _in_ zeus. It's wild and crazy but it works incredibly well.\n\n``` ruby\nrequire 'zeus/rails'\n\nclass ZeusPlan < Zeus::Rails\n  def server\n    Thread.new { super }\n  end\nend\nZeus.plan = ZeusPlan.new\n```\n. ah, sorry, I should have linked to this: https://github.com/burke/zeus/blob/master/rubygem/lib/zeus.rb#L80\n\nIt's actually used in `Zeus#boot_steps`, so while, yes, it does work if I put it in my custom plan, the point is that it actually needs to be in _every_ plan, it just happens to work right now because most plans require set at some point in their bundler load.\n. @burke what would an equivalent be for osx? probably dtruss, but when I try `dtruss zeus test spec/lib/time_spec.rb` I don't see rspec's output, so I don't really have any way of knowing if it crashed\n. Arguably even better:\n\n``` bash\nzeus () { ARGS=$@; command zeus \"$@\"; ZE_EC=$?; stty sane; if [ $ZE_EC = 2 ]; then zeus \"$ARGS\"; fi }\n```\n\nThat way you can still say `zeus` and it'll work w/ things like vim-vroom out of the box (as long as your functions are loaded)\n. This still looks to be the case. That said, it fixes it if you add this to the top of `custom_plan.rb`:\r\n\r\n```ruby\r\nENGINE_ROOT = File.expand_path(\"..\", __FILE__)\r\nENGINE_PATH = File.expand_path(\"../lib/engine_name/engine\", __FILE__)\r\nAPP_PATH = File.expand_path(\"../spec/dummy/config/application\", __FILE__)\r\n```. +:100:\n. agree w/ @bluestrike2. Also, if you're using guard, you can combine with https://github.com/aaronjensen/guard-zeus_server to get automatic restarts as needed.\n. :+1: \n. I'm on OS X\n. I tried forcing guard to polling and guard dies right away when it tries to poll .zeus.sock\n\n```\n[1] guard(main)> /Users/aaronjensen/.rvm/rubies/ruby-1.9.3-p327/lib/ruby/1.9.1/digest.rb:44:in `initialize': Operation not supported on socket - /code/.zeus.sock (Errno::EOPNOTSUPP)\n```\n. ok, so I added to my Guardfile :\n\n``` ruby\nignore /\\.zeus\\.sock/\n```\n\nIt now seems to be picking up changes just fine even without forcing polling.\n\nMaybe this should go in the readme or a wiki or something? what do you think @burke ?\n. That worked, thanks!\n. this seems to be true of other commands as well, like `zeus test`. This breaks things like guard-rspec notifications:  https://github.com/guard/guard-rspec/issues/134\n. this seems fixed now\n. Hmm, after further testing, it seems like the file i'm changing is actually triggering a zeus reload of the test environment. Which means that it's likely just that the test is running before that happens. That's a tricky one...\n. hmm. regarding the binary thing, what about distributing packages? brew, apt, yum, etc? Does the gem actually need to be in the gem path? It probably does huh... so that'd mean you'd need the package _and_ the gem. meh.\n\nAbout inotify, yeah that's too bad. It's just something to be aware of I guess. \n. I think that most of the performance issue I was having was `rubygems-bundler`. Even with zeus in the `.noexec.yml` it still took precious time to start zeus. After uninstalling `rubygems-bundler` and switching to `bundle install --standalone --binstubs` with zeus installed normally via `gem install zeus` things are incredibly snappy.\n. Regarding vroom, what if zeus took an additional parameter that was a proxy for inotify. In other words, if I used vroom to save `foo.rb` (and run `foo_spec.rb`), vroom would call `zeus --notify foo.rb rspec foo_spec.rb`. The client would tell the server to trigger anything it needed to trigger as a result of `foo.rb` changing and then it would run the rspec command.\n. this is the failing line: \n\n``` ruby\n           STDOUT.reopen('/dev/null', 'a')\n```\n. I got it to respond to ^Z, it won't respond to ^Z while in guard (probably unrelated)\n. I've actually started running server _in_ zeus. It's wild and crazy but it works incredibly well.\n\n``` ruby\nrequire 'zeus/rails'\n\nclass ZeusPlan < Zeus::Rails\n  def server\n    Thread.new { super }\n  end\nend\nZeus.plan = ZeusPlan.new\n```\n. ah, sorry, I should have linked to this: https://github.com/burke/zeus/blob/master/rubygem/lib/zeus.rb#L80\n\nIt's actually used in `Zeus#boot_steps`, so while, yes, it does work if I put it in my custom plan, the point is that it actually needs to be in _every_ plan, it just happens to work right now because most plans require set at some point in their bundler load.\n. @burke what would an equivalent be for osx? probably dtruss, but when I try `dtruss zeus test spec/lib/time_spec.rb` I don't see rspec's output, so I don't really have any way of knowing if it crashed\n. Arguably even better:\n\n``` bash\nzeus () { ARGS=$@; command zeus \"$@\"; ZE_EC=$?; stty sane; if [ $ZE_EC = 2 ]; then zeus \"$ARGS\"; fi }\n```\n\nThat way you can still say `zeus` and it'll work w/ things like vim-vroom out of the box (as long as your functions are loaded)\n. This still looks to be the case. That said, it fixes it if you add this to the top of `custom_plan.rb`:\r\n\r\n```ruby\r\nENGINE_ROOT = File.expand_path(\"..\", __FILE__)\r\nENGINE_PATH = File.expand_path(\"../lib/engine_name/engine\", __FILE__)\r\nAPP_PATH = File.expand_path(\"../spec/dummy/config/application\", __FILE__)\r\n```. ",
    "iloveitaly": ":+1: \n. :+1: \n. ",
    "darthdeus": ":+1:\n. I'm not sure if this is related, but some of my applications experience the same thing with RSpec\n. I'm using both 2.11 and having the issue exactly the same, twice when running a single spec, but only once when running all the specs.\n. I have to confirm this, but it only helps running the whole spec file.\n\nIf I try to run a specific line, I will get an error `No tests found on line 69. Valid tests to run:`, whereas with the autorun enabled I am able to run a single spec, but not the whole file.\n. While removing the `rspec/autorun` helps, it is still just treating the symptoms, not the root cause.\n. Is there any hope for getting this fixed? :( I'd love to help, but not really sure how.\n. @latortuga Uninstalling the other version is hardly a solution when you're working on multiple projects.\n. :+1:\n. I'm not sure if this is related, but some of my applications experience the same thing with RSpec\n. I'm using both 2.11 and having the issue exactly the same, twice when running a single spec, but only once when running all the specs.\n. I have to confirm this, but it only helps running the whole spec file.\n\nIf I try to run a specific line, I will get an error `No tests found on line 69. Valid tests to run:`, whereas with the autorun enabled I am able to run a single spec, but not the whole file.\n. While removing the `rspec/autorun` helps, it is still just treating the symptoms, not the root cause.\n. Is there any hope for getting this fixed? :( I'd love to help, but not really sure how.\n. @latortuga Uninstalling the other version is hardly a solution when you're working on multiple projects.\n. ",
    "digerata": "+1\n. +1\n. ",
    "baldrailers": "+1\n. +1\n. ",
    "JustinAiken": "+:100: for native pow support\n. +:100: for native pow support\n. ",
    "kieranklaassen": "+1\n. +1\n. ",
    "aceofspades": "+1\n. @jamesconant As of rsync-rails 2.14.0 it is still there\n\nhttps://github.com/rspec/rspec-rails/blob/2-14-maintenance/lib/generators/rspec/install/templates/spec/spec_helper.rb.tt#L5\n\nI'm also curious what the side-effects of removing this are.\n. +1\n. @jamesconant As of rsync-rails 2.14.0 it is still there\n\nhttps://github.com/rspec/rspec-rails/blob/2-14-maintenance/lib/generators/rspec/install/templates/spec/spec_helper.rb.tt#L5\n\nI'm also curious what the side-effects of removing this are.\n. ",
    "Undistraction": "+1\n. +1\n. ",
    "chanko": "+1\n. +1\n. ",
    "vocino": "+1\n. +1\n. ",
    "andrewmartin": "+1\n. +1\n. ",
    "stationkeeping": "+1\n. +1\n. ",
    "alexanderritola": "+1\n. +1\n. ",
    "jcxia43": "+1\n. +1\n. ",
    "halilim": "+1 :)\n. @hayeah, your fix gives the error:\n\n```\n.../rack-1.6.4/lib/rack/builder.rb:146:in `to_app': missing run or map statement (RuntimeError)\n```\n. +1 :)\n. @hayeah, your fix gives the error:\n\n```\n.../rack-1.6.4/lib/rack/builder.rb:146:in `to_app': missing run or map statement (RuntimeError)\n```\n. ",
    "baberthal": "It's not a perfect solution (you will have to start the zeus server manually), but you can easily proxy pow .dev domains to any port by doing:\n\n``` shell\n$ echo $PORT > ~/.pow/$BASE_DOMAIN\n```\n\nwhere `$PORT` is the port your zeus server is running (typically 3000) and `$BASE_DOMAIN` is the base domain you wish to access the site from.\n\nFor example:\n\n``` shell\n$ echo 3000 > ~/.pow/my_app \n```\n\nHope this helps someone!\n\nEDIT:\nDepending on the rails server you use, it may complain about being proxied to. To fix this, just make sure to start it up with `-b 0.0.0.0`\n. It's not a perfect solution (you will have to start the zeus server manually), but you can easily proxy pow .dev domains to any port by doing:\n\n``` shell\n$ echo $PORT > ~/.pow/$BASE_DOMAIN\n```\n\nwhere `$PORT` is the port your zeus server is running (typically 3000) and `$BASE_DOMAIN` is the base domain you wish to access the site from.\n\nFor example:\n\n``` shell\n$ echo 3000 > ~/.pow/my_app \n```\n\nHope this helps someone!\n\nEDIT:\nDepending on the rails server you use, it may complain about being proxied to. To fix this, just make sure to start it up with `-b 0.0.0.0`\n. ",
    "rspeicher": "You can't run another command (or even view one) because Zeus is actively running in the foreground. You need to open a new console or use something like tmux or screen to run Zeus in the background.\n. Sorry, then I misunderstood.\n\nOn Sunday, September 16, 2012, Stan Bright wrote:\n\n> I'm not sure I really understand.\n> \n> I've already opened Zeus in one console and started \"zeus c\" in a second.\n> However I can't use the \"up arrow\" when typing in the second/new console.\n> \n> Please, let me know if I'm doing something wrong.\n> \n> Thanks again!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/102#issuecomment-8599665.\n. Magically fixed itself. I think it was after several branch changes. I'll leave this open in case there's something you can do to prevent it/warn people, but otherwise feel free to close.\n. While trying to get around #113 I encountered this as well. I went to a different Rails project that hadn't yet used zeus, ran `zeus init` and `zeus start`:\n\n```\n$ zeus start\nStarting Zeus server\nEOF\nWrong message type! Expected ActionResponseMessage, got: \nready   : boot\ndied    : boot\n```\n\nEdit: Just remembered that that project is only Rails 3.1.6, so maybe that's related.\n. I've noticed the same issue. It just never gets to the input prompt.\n\nruby 1.9.3p194 (2012-04-20 revision 35410) [x86_64-darwin12.1.0]\nzeus (0.11.0)\nRails 3.2.8\n. No joy.\n\n```\n$ zeus start\nStarting Zeus server\nready   : boot\nready   : default_bundle\nready   : development_environment\nready   : prerake\nready   : test_environment\nready   : cucumber_environment\ndied    : cucumber_environment\nready   : test_helper\n```\n\n```\n$ zeus c\nLoading development environment (Rails 3.2.8)\n```\n\nLet me know if there's anything I can do to help you debug and/or reproduce it.\n. The project I'm having the problem with is [gitlab](https://github.com/gitlabhq/gitlabhq). They're using rspec, and while pry is in the Gemfile, pry-rails is not.\n\nI created a brand new rails app, ran zeus init, zeus start, zeus c and the console came right up. Same version of Rails in both the new app and the problem app. Weird.\n\nObviously since the new app is, well, new, it didn't have stuff like rspec or cucumber enabled, so I wonder if a certain gem is causing a problem (beyond pry-rails).\n. Nice, appreciate it.\n. This custom plan worked for me in the meantime.\n\n``` ruby\nrequire 'zeus/rails'\n\nclass Popeye < Zeus::Rails\n  def spinach_environment\n    require 'spinach'\n  end\n\n  def spinach\n    spinach_main = Spinach::Cli.new(ARGV.dup)\n    spinach_main.init_reporter\n    exit spinach_main.run\n  end\nend\n\nZeus.plan = Popeye.new\n```\n. No worries, I know how that goes.\n. Yes! Thank you, I wasn't sure what exactly this was or how to work around it; I always ended up closing that terminal tab and restarting - kind of annoying.\n\nIt seems to happen when Zeus crashes and/or when my `zeus [command]` fails to connect to the server.\n\nAlso running in zsh on OSX, but with standard 10.8 Terminal.\n. You can't run another command (or even view one) because Zeus is actively running in the foreground. You need to open a new console or use something like tmux or screen to run Zeus in the background.\n. Sorry, then I misunderstood.\n\nOn Sunday, September 16, 2012, Stan Bright wrote:\n\n> I'm not sure I really understand.\n> \n> I've already opened Zeus in one console and started \"zeus c\" in a second.\n> However I can't use the \"up arrow\" when typing in the second/new console.\n> \n> Please, let me know if I'm doing something wrong.\n> \n> Thanks again!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/102#issuecomment-8599665.\n. Magically fixed itself. I think it was after several branch changes. I'll leave this open in case there's something you can do to prevent it/warn people, but otherwise feel free to close.\n. While trying to get around #113 I encountered this as well. I went to a different Rails project that hadn't yet used zeus, ran `zeus init` and `zeus start`:\n\n```\n$ zeus start\nStarting Zeus server\nEOF\nWrong message type! Expected ActionResponseMessage, got: \nready   : boot\ndied    : boot\n```\n\nEdit: Just remembered that that project is only Rails 3.1.6, so maybe that's related.\n. I've noticed the same issue. It just never gets to the input prompt.\n\nruby 1.9.3p194 (2012-04-20 revision 35410) [x86_64-darwin12.1.0]\nzeus (0.11.0)\nRails 3.2.8\n. No joy.\n\n```\n$ zeus start\nStarting Zeus server\nready   : boot\nready   : default_bundle\nready   : development_environment\nready   : prerake\nready   : test_environment\nready   : cucumber_environment\ndied    : cucumber_environment\nready   : test_helper\n```\n\n```\n$ zeus c\nLoading development environment (Rails 3.2.8)\n```\n\nLet me know if there's anything I can do to help you debug and/or reproduce it.\n. The project I'm having the problem with is [gitlab](https://github.com/gitlabhq/gitlabhq). They're using rspec, and while pry is in the Gemfile, pry-rails is not.\n\nI created a brand new rails app, ran zeus init, zeus start, zeus c and the console came right up. Same version of Rails in both the new app and the problem app. Weird.\n\nObviously since the new app is, well, new, it didn't have stuff like rspec or cucumber enabled, so I wonder if a certain gem is causing a problem (beyond pry-rails).\n. Nice, appreciate it.\n. This custom plan worked for me in the meantime.\n\n``` ruby\nrequire 'zeus/rails'\n\nclass Popeye < Zeus::Rails\n  def spinach_environment\n    require 'spinach'\n  end\n\n  def spinach\n    spinach_main = Spinach::Cli.new(ARGV.dup)\n    spinach_main.init_reporter\n    exit spinach_main.run\n  end\nend\n\nZeus.plan = Popeye.new\n```\n. No worries, I know how that goes.\n. Yes! Thank you, I wasn't sure what exactly this was or how to work around it; I always ended up closing that terminal tab and restarting - kind of annoying.\n\nIt seems to happen when Zeus crashes and/or when my `zeus [command]` fails to connect to the server.\n\nAlso running in zsh on OSX, but with standard 10.8 Terminal.\n. ",
    "benbruscella": "I also noticed this with the debugger after upgrading to 0.11.0\n. @burke fwiw I see a huge improvement using 0.12.0.pre. However, just got this:\n\n```\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0x723b5]\n\ngoroutine 15 [running]:\ngithub.com/burke/zeus/go/unixsocket.(*Usock).WriteMessage(0x0, 0xf840058e80, 0x3a4300000006, 0xf8400580d0, 0xf800000004, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:81 +0xba\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).bootCommand(0xf840061540, 0xf8401c2180, 0xf8401c2180, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:272 +0x9c\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).bootQueuedCommandsAndSlaves(0xf840061540, 0x1)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:292 +0x7d\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState(0xf840061540, 0x1, 0x10b90c, 0x4300000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:225 +0xc1\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf840061540, 0xf840052500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:127 +0x161\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 1 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster.Run(0x7fff5fbff801, 0x100000005)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:49 +0x2e8\nmain.main()\n    /Users/burke/go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:37 +0x2a1\n\ngoroutine 2 [syscall]:\ncreated by runtime.main\n    /private/tmp/bindist454984655/go/src/pkg/runtime/proc.c:221\n\ngoroutine 3 [syscall]:\nos/signal.loop()\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:20 +0x1c\ncreated by os/signal.init\u00b71\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:26 +0x2f\n\ngoroutine 4 [select]:\ngithub.com/burke/zeus/go/zeusmaster.StartSlaveMonitor(0xf840043180, 0xf840001f50, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:48 +0x2fb\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:31 +0x12f\n\ngoroutine 5 [select]:\ngithub.com/burke/zeus/go/zeusmaster.StartClientHandler(0xf840043180, 0xf840001fa0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:42 +0x232\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:32 +0x153\n\ngoroutine 6 [select]:\ngithub.com/burke/zeus/go/zeusmaster.StartFileMonitor(0xf840043180, 0xf84008ba00, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:37 +0x1bf\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:33 +0x177\n\ngoroutine 7 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster._func_005(0xf8400581c8, 0xf8400581a8, 0xf8400581b0, 0xf8400581b8, 0xf8400581c0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:40 +0x31\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:42 +0x297\n\ngoroutine 8 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster._func_006(0xf8400581a8, 0xf8400581b0, 0xf8400581b8, 0xf8400581c0, 0x0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:45 +0x31\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:47 +0x2cc\n\ngoroutine 9 [finalizer wait]:\ncreated by runtime.gc\n    /private/tmp/bindist454984655/go/src/pkg/runtime/mgc0.c:882\n\ngoroutine 10 [syscall]:\nsyscall.Syscall6()\n    /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\nsyscall.kevent(0xd, 0x0, 0x0, 0xf84007fd88, 0xa, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:199 +0x88\nsyscall.Kevent(0xf80000000d, 0x0, 0x0, 0xf84007fd88, 0xa0000000a, ...)\n    /usr/local/go/src/pkg/syscall/syscall_bsd.go:538 +0xa4\nnet.(*pollster).WaitFD(0xf84007fd80, 0xf840042b40, 0x0, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/net/fd_darwin.go:96 +0x185\nnet.(*pollServer).Run(0xf840042b40, 0x0)\n    /usr/local/go/src/pkg/net/fd.go:236 +0xe4\ncreated by net.newPollServer\n    /usr/local/go/src/pkg/net/newpollserver.go:35 +0x382\n\ngoroutine 11 [chan receive]:\nnet.(*pollServer).WaitRead(0xf840042b40, 0xf8400e9000, 0xf8400430f0, 0x23, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(*netFD).ReadMsg(0xf8400e9000, 0xf840124800, 0x40000000400, 0xf840103080, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\nnet.(*UnixConn).ReadMsgUnix(0xf840058450, 0xf840124800, 0x40000000400, 0xf840103080, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(*Usock).readFromSocket(0xf84009ecc0, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadFD(0xf84009ecc0, 0xf800000000, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:109 +0xaa\ngithub.com/burke/zeus/go/zeusmaster._func_004(0xf8400581e8, 0xf840058448, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:35 +0x28\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:41 +0x195\n\ngoroutine 12 [select]:\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState(0xf840061300, 0x1, 0x10b90c, 0x4300000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x274\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf840061300, 0xf840052500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:127 +0x161\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 13 [select]:\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState(0xf840061180, 0x1, 0x10be7c, 0x5200000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x274\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf840061180, 0xf840052500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:129 +0x208\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 14 [select]:\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState(0xf8400610c0, 0x1, 0x10be7c, 0x5200000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x274\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf8400610c0, 0xf840052500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:129 +0x208\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 16 [select]:\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState(0xf840061480, 0x1, 0x10b90c, 0x4300000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x274\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf840061480, 0xf840052500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:127 +0x161\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 17 [select]:\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState(0xf8400613c0, 0x1, 0x10b90c, 0x4300000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x274\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf8400613c0, 0xf840052500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:127 +0x161\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 18 [select]:\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState(0xf840061240, 0x1, 0x10b90c, 0x4300000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x274\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf840061240, 0xf840052500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:127 +0x161\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 19 [chan receive]:\nnet.(*pollServer).WaitRead(0xf840042b40, 0xf840079120, 0xf8400430f0, 0x23, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(*netFD).accept(0xf840079120, 0x6ace5, 0x0, 0xf840045b40, 0xf840058040, ...)\n    /usr/local/go/src/pkg/net/fd.go:622 +0x20d\nnet.(*UnixListener).AcceptUnix(0xf840044f20, 0xf840053410, 0xf84009eac0, 0x0)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:350 +0x4d\ngithub.com/burke/zeus/go/zeusmaster._func_001(0xf840058358, 0xf840058468, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:32 +0x28\ncreated by github.com/burke/zeus/go/zeusmaster.StartClientHandler\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:39 +0x15a\n\ngoroutine 20 [syscall]:\nsyscall.Syscall()\n    /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:14 +0x5\nsyscall.Read(0x230000000b, 0xf8400f2000, 0x80000000800, 0x100000001, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:810 +0x78\nos.(*File).read(0xf8400582c8, 0xf8400f2000, 0x80000000800, 0x80000000800, 0x0, ...)\n    /usr/local/go/src/pkg/os/file_unix.go:163 +0x58\nos.(*File).Read(0xf8400582c8, 0xf8400f2000, 0x80000000800, 0xf8400f2000, 0x0, ...)\n    /usr/local/go/src/pkg/os/file.go:95 +0x83\ngithub.com/burke/zeus/go/zeusmaster._func_002()\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:80 +0x84\ncreated by github.com/burke/zeus/go/zeusmaster.startWrapper\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:90 +0x207\n\ngoroutine 21 [syscall]:\nsyscall.Syscall6()\n    /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\nsyscall.wait4(0xdc31, 0xf840058310, 0x0, 0xf8400f1090, 0x1, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:32 +0x81\nsyscall.Wait4(0xdc31, 0x2286e64, 0x0, 0xf8400f1090, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/syscall_bsd.go:136 +0x6a\nos.(*Process).wait(0xf840044540, 0x0, 0x0, 0x0, 0x881fc, ...)\n    /usr/local/go/src/pkg/os/exec_unix.go:22 +0xe1\nos.(*Process).Wait(0xf840044540, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/doc.go:43 +0x25\nos/exec.(*Cmd).Wait(0xf8400ab000, 0x0, 0x0, 0x108dd)\n    /usr/local/go/src/pkg/os/exec/exec.go:302 +0x1b7\ngithub.com/burke/zeus/go/zeusmaster._func_003(0xf8400582a8, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:93 +0x29\ncreated by github.com/burke/zeus/go/zeusmaster.startWrapper\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:95 +0x21e\n\ngoroutine 22 [syscall]:\nsyscall.Syscall6()\n    /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\nsyscall.wait4(0xdc32, 0xf8400585c8, 0x0, 0xf8400ff120, 0x1, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:32 +0x81\nsyscall.Wait4(0xdc32, 0x22a5d8c, 0x0, 0xf8400ff120, 0x87f5a, ...)\n    /usr/local/go/src/pkg/syscall/syscall_bsd.go:136 +0x6a\nos.(*Process).wait(0xf8400f0700, 0xf840058588, 0x0, 0x0, 0x881fc, ...)\n    /usr/local/go/src/pkg/os/exec_unix.go:22 +0xe1\nos.(*Process).Wait(0xf8400f0700, 0x0, 0x0, 0x22a5e60)\n    /usr/local/go/src/pkg/os/doc.go:43 +0x25\nos/exec.(*Cmd).Wait(0xf840101000, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:302 +0x1b7\nos/exec.(*Cmd).Run(0xf840101000, 0xe0db8, 0xf8400eac00, 0xf8400ed1b0)\n    /usr/local/go/src/pkg/os/exec/exec.go:226 +0x6d\nos/exec.(*Cmd).CombinedOutput(0xf840101000, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:346 +0x246\ngithub.com/burke/zeus/go/zeusmaster.babysitRootProcess(0xf840101000, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:329 +0x25\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doUnbootedState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:164 +0x38b\n\ngoroutine 23 [syscall]:\nsyscall.Syscall()\n    /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:14 +0x5\nsyscall.Read(0xc, 0xf840115000, 0x20000000200, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:810 +0x78\nos.(*File).read(0xf840058580, 0xf840115000, 0x20000000200, 0xa3088, 0x0, ...)\n    /usr/local/go/src/pkg/os/file_unix.go:163 +0x58\nos.(*File).Read(0xf840058580, 0xf840115000, 0x20000000200, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/os/file.go:95 +0x83\nbytes.(*Buffer).ReadFrom(0xf8400eac00, 0xf840043120, 0xf840058580, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/bytes/buffer.go:153 +0x199\nio.Copy(0xf8400ed1b0, 0xf8400eac00, 0xf840043120, 0xf840058580, 0x0, ...)\n    /usr/local/go/src/pkg/io/io.go:340 +0xc2\nos/exec._func_003(0xf840052e90, 0xf840058660, 0x89fb9, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/os/exec/exec.go:201 +0x5a\nos/exec._func_004(0xf840058568, 0xf8400fe140, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:268 +0x1e\ncreated by os/exec.(*Cmd).Start\n    /usr/local/go/src/pkg/os/exec/exec.go:269 +0x65c\n\ngoroutine 25 [chan receive]:\nnet.(*pollServer).WaitRead(0xf840042b40, 0xf840120000, 0xf8400430f0, 0x23, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(*netFD).ReadMsg(0xf840120000, 0xf8401d0000, 0x40000000400, 0xf8401c2c00, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\nnet.(*UnixConn).ReadMsgUnix(0xf840058770, 0xf8401d0000, 0x40000000400, 0xf8401c2c00, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(*Usock).readFromSocket(0xf8400fe800, 0x0, 0x0, 0xf8401b9bd2)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadMessage(0xf8400fe800, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xc5\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).handleMessages(0xf8400610c0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:344 +0x29\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x9b\n\ngoroutine 406 [chan receive]:\nnet.(*pollServer).WaitRead(0xf840042b40, 0xf84017d630, 0xf8400430f0, 0x23, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(*netFD).ReadMsg(0xf84017d630, 0xf840183400, 0x40000000400, 0xf840103ec0, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\nnet.(*UnixConn).ReadMsgUnix(0xf840058088, 0xf840183400, 0x40000000400, 0xf840103ec0, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(*Usock).readFromSocket(0xf84009efc0, 0x0, 0x0, 0xf840253312)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadMessage(0xf84009efc0, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xc5\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).handleMessages(0xf840061180, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:344 +0x29\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x9b\n\ngoroutine 405 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster.bootNewCommand(0xf840061540, 0xf8400580d0, 0x4, 0x0, 0x0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:208 +0xc6\ngithub.com/burke/zeus/go/zeusmaster.handleClientConnection(0xf840043180, 0xf84009eac0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:76 +0x260\ncreated by github.com/burke/zeus/go/zeusmaster.StartClientHandler\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:48 +0x21d\n```\n. @burke you're right, the console is up and works if you start typing, just no prompts.\n\nThis is not pry-rails, just the normal debugger-1.2.0 gem.\n\n```\nzeus c \nLoading development environment (Rails 3.2.8)\na=1\n => 1 \n```\n. @burke, 0.11.2 fixed it for me cheers!\n. +1\n. I also noticed this with the debugger after upgrading to 0.11.0\n. @burke fwiw I see a huge improvement using 0.12.0.pre. However, just got this:\n\n```\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0x723b5]\n\ngoroutine 15 [running]:\ngithub.com/burke/zeus/go/unixsocket.(*Usock).WriteMessage(0x0, 0xf840058e80, 0x3a4300000006, 0xf8400580d0, 0xf800000004, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:81 +0xba\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).bootCommand(0xf840061540, 0xf8401c2180, 0xf8401c2180, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:272 +0x9c\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).bootQueuedCommandsAndSlaves(0xf840061540, 0x1)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:292 +0x7d\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState(0xf840061540, 0x1, 0x10b90c, 0x4300000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:225 +0xc1\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf840061540, 0xf840052500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:127 +0x161\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 1 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster.Run(0x7fff5fbff801, 0x100000005)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:49 +0x2e8\nmain.main()\n    /Users/burke/go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:37 +0x2a1\n\ngoroutine 2 [syscall]:\ncreated by runtime.main\n    /private/tmp/bindist454984655/go/src/pkg/runtime/proc.c:221\n\ngoroutine 3 [syscall]:\nos/signal.loop()\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:20 +0x1c\ncreated by os/signal.init\u00b71\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:26 +0x2f\n\ngoroutine 4 [select]:\ngithub.com/burke/zeus/go/zeusmaster.StartSlaveMonitor(0xf840043180, 0xf840001f50, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:48 +0x2fb\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:31 +0x12f\n\ngoroutine 5 [select]:\ngithub.com/burke/zeus/go/zeusmaster.StartClientHandler(0xf840043180, 0xf840001fa0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:42 +0x232\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:32 +0x153\n\ngoroutine 6 [select]:\ngithub.com/burke/zeus/go/zeusmaster.StartFileMonitor(0xf840043180, 0xf84008ba00, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:37 +0x1bf\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:33 +0x177\n\ngoroutine 7 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster._func_005(0xf8400581c8, 0xf8400581a8, 0xf8400581b0, 0xf8400581b8, 0xf8400581c0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:40 +0x31\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:42 +0x297\n\ngoroutine 8 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster._func_006(0xf8400581a8, 0xf8400581b0, 0xf8400581b8, 0xf8400581c0, 0x0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:45 +0x31\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:47 +0x2cc\n\ngoroutine 9 [finalizer wait]:\ncreated by runtime.gc\n    /private/tmp/bindist454984655/go/src/pkg/runtime/mgc0.c:882\n\ngoroutine 10 [syscall]:\nsyscall.Syscall6()\n    /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\nsyscall.kevent(0xd, 0x0, 0x0, 0xf84007fd88, 0xa, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:199 +0x88\nsyscall.Kevent(0xf80000000d, 0x0, 0x0, 0xf84007fd88, 0xa0000000a, ...)\n    /usr/local/go/src/pkg/syscall/syscall_bsd.go:538 +0xa4\nnet.(*pollster).WaitFD(0xf84007fd80, 0xf840042b40, 0x0, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/net/fd_darwin.go:96 +0x185\nnet.(*pollServer).Run(0xf840042b40, 0x0)\n    /usr/local/go/src/pkg/net/fd.go:236 +0xe4\ncreated by net.newPollServer\n    /usr/local/go/src/pkg/net/newpollserver.go:35 +0x382\n\ngoroutine 11 [chan receive]:\nnet.(*pollServer).WaitRead(0xf840042b40, 0xf8400e9000, 0xf8400430f0, 0x23, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(*netFD).ReadMsg(0xf8400e9000, 0xf840124800, 0x40000000400, 0xf840103080, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\nnet.(*UnixConn).ReadMsgUnix(0xf840058450, 0xf840124800, 0x40000000400, 0xf840103080, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(*Usock).readFromSocket(0xf84009ecc0, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadFD(0xf84009ecc0, 0xf800000000, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:109 +0xaa\ngithub.com/burke/zeus/go/zeusmaster._func_004(0xf8400581e8, 0xf840058448, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:35 +0x28\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:41 +0x195\n\ngoroutine 12 [select]:\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState(0xf840061300, 0x1, 0x10b90c, 0x4300000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x274\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf840061300, 0xf840052500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:127 +0x161\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 13 [select]:\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState(0xf840061180, 0x1, 0x10be7c, 0x5200000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x274\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf840061180, 0xf840052500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:129 +0x208\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 14 [select]:\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState(0xf8400610c0, 0x1, 0x10be7c, 0x5200000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x274\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf8400610c0, 0xf840052500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:129 +0x208\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 16 [select]:\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState(0xf840061480, 0x1, 0x10b90c, 0x4300000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x274\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf840061480, 0xf840052500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:127 +0x161\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 17 [select]:\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState(0xf8400613c0, 0x1, 0x10b90c, 0x4300000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x274\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf8400613c0, 0xf840052500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:127 +0x161\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 18 [select]:\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState(0xf840061240, 0x1, 0x10b90c, 0x4300000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x274\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf840061240, 0xf840052500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:127 +0x161\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 19 [chan receive]:\nnet.(*pollServer).WaitRead(0xf840042b40, 0xf840079120, 0xf8400430f0, 0x23, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(*netFD).accept(0xf840079120, 0x6ace5, 0x0, 0xf840045b40, 0xf840058040, ...)\n    /usr/local/go/src/pkg/net/fd.go:622 +0x20d\nnet.(*UnixListener).AcceptUnix(0xf840044f20, 0xf840053410, 0xf84009eac0, 0x0)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:350 +0x4d\ngithub.com/burke/zeus/go/zeusmaster._func_001(0xf840058358, 0xf840058468, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:32 +0x28\ncreated by github.com/burke/zeus/go/zeusmaster.StartClientHandler\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:39 +0x15a\n\ngoroutine 20 [syscall]:\nsyscall.Syscall()\n    /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:14 +0x5\nsyscall.Read(0x230000000b, 0xf8400f2000, 0x80000000800, 0x100000001, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:810 +0x78\nos.(*File).read(0xf8400582c8, 0xf8400f2000, 0x80000000800, 0x80000000800, 0x0, ...)\n    /usr/local/go/src/pkg/os/file_unix.go:163 +0x58\nos.(*File).Read(0xf8400582c8, 0xf8400f2000, 0x80000000800, 0xf8400f2000, 0x0, ...)\n    /usr/local/go/src/pkg/os/file.go:95 +0x83\ngithub.com/burke/zeus/go/zeusmaster._func_002()\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:80 +0x84\ncreated by github.com/burke/zeus/go/zeusmaster.startWrapper\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:90 +0x207\n\ngoroutine 21 [syscall]:\nsyscall.Syscall6()\n    /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\nsyscall.wait4(0xdc31, 0xf840058310, 0x0, 0xf8400f1090, 0x1, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:32 +0x81\nsyscall.Wait4(0xdc31, 0x2286e64, 0x0, 0xf8400f1090, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/syscall_bsd.go:136 +0x6a\nos.(*Process).wait(0xf840044540, 0x0, 0x0, 0x0, 0x881fc, ...)\n    /usr/local/go/src/pkg/os/exec_unix.go:22 +0xe1\nos.(*Process).Wait(0xf840044540, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/doc.go:43 +0x25\nos/exec.(*Cmd).Wait(0xf8400ab000, 0x0, 0x0, 0x108dd)\n    /usr/local/go/src/pkg/os/exec/exec.go:302 +0x1b7\ngithub.com/burke/zeus/go/zeusmaster._func_003(0xf8400582a8, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:93 +0x29\ncreated by github.com/burke/zeus/go/zeusmaster.startWrapper\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:95 +0x21e\n\ngoroutine 22 [syscall]:\nsyscall.Syscall6()\n    /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\nsyscall.wait4(0xdc32, 0xf8400585c8, 0x0, 0xf8400ff120, 0x1, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:32 +0x81\nsyscall.Wait4(0xdc32, 0x22a5d8c, 0x0, 0xf8400ff120, 0x87f5a, ...)\n    /usr/local/go/src/pkg/syscall/syscall_bsd.go:136 +0x6a\nos.(*Process).wait(0xf8400f0700, 0xf840058588, 0x0, 0x0, 0x881fc, ...)\n    /usr/local/go/src/pkg/os/exec_unix.go:22 +0xe1\nos.(*Process).Wait(0xf8400f0700, 0x0, 0x0, 0x22a5e60)\n    /usr/local/go/src/pkg/os/doc.go:43 +0x25\nos/exec.(*Cmd).Wait(0xf840101000, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:302 +0x1b7\nos/exec.(*Cmd).Run(0xf840101000, 0xe0db8, 0xf8400eac00, 0xf8400ed1b0)\n    /usr/local/go/src/pkg/os/exec/exec.go:226 +0x6d\nos/exec.(*Cmd).CombinedOutput(0xf840101000, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:346 +0x246\ngithub.com/burke/zeus/go/zeusmaster.babysitRootProcess(0xf840101000, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:329 +0x25\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doUnbootedState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:164 +0x38b\n\ngoroutine 23 [syscall]:\nsyscall.Syscall()\n    /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:14 +0x5\nsyscall.Read(0xc, 0xf840115000, 0x20000000200, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:810 +0x78\nos.(*File).read(0xf840058580, 0xf840115000, 0x20000000200, 0xa3088, 0x0, ...)\n    /usr/local/go/src/pkg/os/file_unix.go:163 +0x58\nos.(*File).Read(0xf840058580, 0xf840115000, 0x20000000200, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/os/file.go:95 +0x83\nbytes.(*Buffer).ReadFrom(0xf8400eac00, 0xf840043120, 0xf840058580, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/bytes/buffer.go:153 +0x199\nio.Copy(0xf8400ed1b0, 0xf8400eac00, 0xf840043120, 0xf840058580, 0x0, ...)\n    /usr/local/go/src/pkg/io/io.go:340 +0xc2\nos/exec._func_003(0xf840052e90, 0xf840058660, 0x89fb9, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/os/exec/exec.go:201 +0x5a\nos/exec._func_004(0xf840058568, 0xf8400fe140, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:268 +0x1e\ncreated by os/exec.(*Cmd).Start\n    /usr/local/go/src/pkg/os/exec/exec.go:269 +0x65c\n\ngoroutine 25 [chan receive]:\nnet.(*pollServer).WaitRead(0xf840042b40, 0xf840120000, 0xf8400430f0, 0x23, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(*netFD).ReadMsg(0xf840120000, 0xf8401d0000, 0x40000000400, 0xf8401c2c00, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\nnet.(*UnixConn).ReadMsgUnix(0xf840058770, 0xf8401d0000, 0x40000000400, 0xf8401c2c00, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(*Usock).readFromSocket(0xf8400fe800, 0x0, 0x0, 0xf8401b9bd2)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadMessage(0xf8400fe800, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xc5\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).handleMessages(0xf8400610c0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:344 +0x29\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x9b\n\ngoroutine 406 [chan receive]:\nnet.(*pollServer).WaitRead(0xf840042b40, 0xf84017d630, 0xf8400430f0, 0x23, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(*netFD).ReadMsg(0xf84017d630, 0xf840183400, 0x40000000400, 0xf840103ec0, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\nnet.(*UnixConn).ReadMsgUnix(0xf840058088, 0xf840183400, 0x40000000400, 0xf840103ec0, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(*Usock).readFromSocket(0xf84009efc0, 0x0, 0x0, 0xf840253312)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadMessage(0xf84009efc0, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xc5\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).handleMessages(0xf840061180, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:344 +0x29\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x9b\n\ngoroutine 405 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster.bootNewCommand(0xf840061540, 0xf8400580d0, 0x4, 0x0, 0x0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:208 +0xc6\ngithub.com/burke/zeus/go/zeusmaster.handleClientConnection(0xf840043180, 0xf84009eac0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:76 +0x260\ncreated by github.com/burke/zeus/go/zeusmaster.StartClientHandler\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:48 +0x21d\n```\n. @burke you're right, the console is up and works if you start typing, just no prompts.\n\nThis is not pry-rails, just the normal debugger-1.2.0 gem.\n\n```\nzeus c \nLoading development environment (Rails 3.2.8)\na=1\n => 1 \n```\n. @burke, 0.11.2 fixed it for me cheers!\n. +1\n. ",
    "pic": "I experienced the same. After a while I figured out that I forgot to \"bundle install\" the application.\nSo, to recap:\n- add new gem to Gemfile\n- zeus start -> panic: runtime error: invalid memory address or nil pointer dereference in goroutine, permanently\n\nProblem solved after \"bundle install\"\n. I experienced the same. After a while I figured out that I forgot to \"bundle install\" the application.\nSo, to recap:\n- add new gem to Gemfile\n- zeus start -> panic: runtime error: invalid memory address or nil pointer dereference in goroutine, permanently\n\nProblem solved after \"bundle install\"\n. ",
    "agrouselle": "Same for me, running `bundle` and installing missing gems fixed the issue. Hope it helps.\n. Same for me, running `bundle` and installing missing gems fixed the issue. Hope it helps.\n. ",
    "kurko": "I'm experiencing this on 0.13.3.rc2 (for some reason, it's actually 0.13.3, but --version returns rc2). I used this for almost a year flawlessly, never saw that error.\n\n`bundle` fixed it. I'd suggest a friendlier message about it. What do you guys think?\n. +1 about removing `rspec/autorun`.\n. Just to help people coming from the future, I had this very problem when I updated to OS X Mavericks. I just reinstalled the gem and it worked.\n. I'm experiencing this on 0.13.3.rc2 (for some reason, it's actually 0.13.3, but --version returns rc2). I used this for almost a year flawlessly, never saw that error.\n\n`bundle` fixed it. I'd suggest a friendlier message about it. What do you guys think?\n. +1 about removing `rspec/autorun`.\n. Just to help people coming from the future, I had this very problem when I updated to OS X Mavericks. I just reinstalled the gem and it worked.\n. ",
    "mattfordham": "I am randoming getting this message too. I initially thought it was related to adding stuff to the Gemfile while Zeus was running, but I've now had it randomly while simply writing/running RSpec tests. \n\n`panic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0x73d27]`\n\nUsing Zeus version 0.13.3.rc2\n. Dang it, I _just_ clear my console. When it happens again, I'll post ASAP. Also of note is that when this happens I typically end up with a handful of zombie 'Ruby' processes that I need to kill via Activity Monitor prior to being able to successfully start Zeus again (I also need to `rm .zeus.sock`)\n. Seems like it is only happening with certain models. I'm trying to track down the difference between them\n. So, removing ActiveAdmin.routes(self) from my routes.rb file fixed the issue. ActiveAdmin no longer works, obviously. Haven't found a workaround yet.\n. I am randoming getting this message too. I initially thought it was related to adding stuff to the Gemfile while Zeus was running, but I've now had it randomly while simply writing/running RSpec tests. \n\n`panic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0x73d27]`\n\nUsing Zeus version 0.13.3.rc2\n. Dang it, I _just_ clear my console. When it happens again, I'll post ASAP. Also of note is that when this happens I typically end up with a handful of zombie 'Ruby' processes that I need to kill via Activity Monitor prior to being able to successfully start Zeus again (I also need to `rm .zeus.sock`)\n. Seems like it is only happening with certain models. I'm trying to track down the difference between them\n. So, removing ActiveAdmin.routes(self) from my routes.rb file fixed the issue. ActiveAdmin no longer works, obviously. Haven't found a workaround yet.\n. ",
    "gregory": "have also a crash ... \n\nStarting Zeus server\nexit status 1hed] [running] [connecting] [waiting]\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u251c\u2500\u2500 cucumber_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus server (alias: s)\nzeus dbconsole\nzeus runner (alias: r)\nzeus destroy (alias: d)\nzeus rake\nzeus generate (alias: g)\nzeus console (alias: c)\nzeus cucumber\nzeus test (alias: rspec, testrb)\nslavenode.go:202: EOF\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0x73cda]\n\ngoroutine 15 [running]:\ngithub.com/burke/zeus/go/unixsocket.(_Usock).WriteMessage(0x0, 0xf84012fc40, 0x3a5300000010, 0xf84005e420, 0xe, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:81 +0xba\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).bootSlave(0xf8400880d0, 0xf8400881a0, 0x0, 0x5200000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:274 +0x10e\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).doCrashedOrReadyState(0xf8400880d0, 0xf800000001, 0x10cf6c, 0x4300000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:247 +0x142\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).Run(0xf8400880d0, 0xf84005e3f0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142 +0x184\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 1 [select]:\ngithub.com/burke/zeus/go/zeusmaster.doRun(0x0, 0x229c)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:46 +0x377\ngithub.com/burke/zeus/go/zeusmaster.Run()\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:21 +0x1c\nmain.main()\n    /Users/burke/go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:40 +0x29c\n\ngoroutine 2 [syscall]:\ncreated by runtime.main\n    /usr/local/go/src/pkg/runtime/proc.c:221\n\ngoroutine 3 [syscall]:\nos/signal.loop()\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:20 +0x1c\ncreated by os/signal.init\u00b71\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:26 +0x2f\n\ngoroutine 4 [select]:\ngithub.com/burke/zeus/go/filemonitor.start(0xf840099000, 0xf840092280, 0xf8400922d0, 0x0, 0x0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:51 +0x148\ncreated by github.com/burke/zeus/go/filemonitor.Start\n    /Users/burke/go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:21 +0x7e\n\ngoroutine 5 [select]:\ngithub.com/burke/zeus/go/processtree._func_001(0xf84005f250, 0xf84005f260, 0xf84005f258, 0x0, 0x0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:56 +0x314\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:65 +0xb6\n\ngoroutine 6 [select]:\ngithub.com/burke/zeus/go/clienthandler._func_001(0xf84005f278, 0xf84005f270, 0xf84005f268, 0x0, 0x0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:47 +0x23c\ncreated by github.com/burke/zeus/go/clienthandler.Start\n    /Users/burke/go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:56 +0xb6\n\ngoroutine 7 [runnable]:\nsyscall.Syscall()\n    /usr/local/go/src/pkg/syscall/asm_darwin_amd64.s:34 +0x61\nsyscall.Write(0x1, 0xf840109d40, 0x4000000022, 0xf800000000, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:1114 +0x78\nos.(_File).write(0xf84005f008, 0xf840109d40, 0x4000000022, 0xf800000000, 0x0, ...)\n    /usr/local/go/src/pkg/os/file_unix.go:177 +0x69\nos.(_File).Write(0xf84005f008, 0xf840109d40, 0x4000000022, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/os/file.go:139 +0x83\nfmt.Fprintf(0xf840045660, 0xf84005f008, 0xf840139f60, 0xf800000022, 0x0, ...)\n    /usr/local/go/src/pkg/fmt/print.go:214 +0xa4\nfmt.Printf(0xf840139f60, 0x22, 0x0, 0x0, 0x112a54, ...)\n    /usr/local/go/src/pkg/fmt/print.go:222 +0x97\ngithub.com/burke/zeus/go/statuschart.(*StatusChart).draw(0xf840001d70, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/statuschart/statuschart.go:123 +0x1f5\ngithub.com/burke/zeus/go/statuschart._func_001(0xf84005f280, 0xf84005f290, 0xf84005f288, 0x0, 0x0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/statuschart/statuschart.go:72 +0x497\ncreated by github.com/burke/zeus/go/statuschart.Start\n    /Users/burke/go/src/github.com/burke/zeus/go/statuschart/statuschart.go:79 +0xb6\n\ngoroutine 8 [finalizer wait]:\ncreated by runtime.gc\n    /usr/local/go/src/pkg/runtime/mgc0.c:882\n\ngoroutine 9 [syscall]:\ncreated by addtimer\n    /usr/local/go/src/pkg/runtime/ztime_amd64.c:72\n\ngoroutine 10 [syscall]:\nsyscall.Syscall6()\n    /usr/local/go/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\nsyscall.kevent(0x17, 0x0, 0x0, 0xf84006bd88, 0xa, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:199 +0x88\nsyscall.Kevent(0xf800000017, 0x0, 0x0, 0xf84006bd88, 0xa0000000a, ...)\n    /usr/local/go/src/pkg/syscall/syscall_bsd.go:538 +0xa4\nnet.(_pollster).WaitFD(0xf84006bd80, 0xf840042b40, 0x0, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/net/fd_darwin.go:96 +0x185\nnet.(_pollServer).Run(0xf840042b40, 0x0)\n    /usr/local/go/src/pkg/net/fd.go:236 +0xe4\ncreated by net.newPollServer\n    /usr/local/go/src/pkg/net/newpollserver.go:35 +0x382\n\ngoroutine 11 [chan receive]:\nnet.(_pollServer).WaitRead(0xf840042b40, 0xf840089090, 0xf840043d50, 0x23, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(_netFD).ReadMsg(0xf840089090, 0xf840102400, 0x40000000400, 0xf84012f060, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\nnet.(_UnixConn).ReadMsgUnix(0xf84005f428, 0xf840102400, 0x40000000400, 0xf84012f060, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf840097280, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadFD(0xf840097280, 0xf800000000, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:109 +0xaa\ngithub.com/burke/zeus/go/processtree._func_002(0xf84005f0e0, 0xf84005f420, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:43 +0x28\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:49 +0x1a7\n\ngoroutine 12 [semacquire]:\nsync.runtime_Semacquire(0xf84005f3f0, 0xf84005f3f0)\n    /usr/local/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\nsync.(_Cond).Wait(0xf840042fc0, 0x1)\n    /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).WaitUntilReadyOrCrashed(0xf840088410, 0x51028)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:75 +0x133\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).doWaitingState(0xf8400885b0, 0xf800000001, 0x10d6bc, 0x5700000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:163 +0x51\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).Run(0xf8400885b0, 0xf84005e3f0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:136 +0x2f2\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 13 [semacquire]:\nsync.runtime_Semacquire(0xf84005f790, 0xf84005f790)\n    /usr/local/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\nsync.(_Cond).Wait(0xf840042e80, 0x1)\n    /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).WaitUntilReadyOrCrashed(0xf8400881a0, 0x51028)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:75 +0x133\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).doWaitingState(0xf840088270, 0xf800000001, 0x10d6bc, 0x5700000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:163 +0x51\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).Run(0xf840088270, 0xf84005e3f0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:136 +0x2f2\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 14 [semacquire]:\nsync.runtime_Semacquire(0xf84005f3f0, 0x19215)\n    /usr/local/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\nsync.(_Cond).Wait(0xf840042fc0, 0x1)\n    /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).WaitUntilReadyOrCrashed(0xf840088410, 0x51028)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:75 +0x133\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).doWaitingState(0xf8400884e0, 0xf800000001, 0x10d6bc, 0x5700000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:163 +0x51\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).Run(0xf8400884e0, 0xf84005e3f0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:136 +0x2f2\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 16 [semacquire]:\nsync.runtime_Semacquire(0xf84005f130, 0xf84005f130)\n    /usr/local/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\nsync.(_Cond).Wait(0xf840042ec0, 0x1)\n    /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).WaitUntilReadyOrCrashed(0xf840088270, 0x51028)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:75 +0x133\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).doWaitingState(0xf840088340, 0xf800000001, 0x10d6bc, 0x5700000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:163 +0x51\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).Run(0xf840088340, 0xf84005e3f0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:136 +0x2f2\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 17 [semacquire]:\nsync.runtime_Semacquire(0xf84005f790, 0x19215)\n    /usr/local/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\nsync.(_Cond).Wait(0xf840042e80, 0x1)\n    /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).WaitUntilReadyOrCrashed(0xf8400881a0, 0x51028)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:75 +0x133\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).doWaitingState(0xf840088410, 0xf800000001, 0x10d6bc, 0x5700000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:163 +0x51\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).Run(0xf840088410, 0xf84005e3f0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:136 +0x2f2\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 18 [chan receive]:\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).doUnbootedState(0xf8400881a0, 0xf84005e3f0, 0x0, 0x5500000000, 0x0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:184 +0x3d4\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).Run(0xf8400881a0, 0xf84005e3f0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:138 +0x294\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 19 [chan receive]:\nnet.(_pollServer).WaitRead(0xf840042b40, 0xf840089000, 0xf840043d50, 0x23, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(_netFD).accept(0xf840089000, 0x63b12, 0x0, 0xf8400458a0, 0xf84005f040, ...)\n    /usr/local/go/src/pkg/net/fd.go:622 +0x20d\nnet.(*UnixListener).AcceptUnix(0xf840044940, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:350 +0x4d\ngithub.com/burke/zeus/go/clienthandler._func_002(0xf84005f298, 0xf84005f120, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:37 +0x28\ncreated by github.com/burke/zeus/go/clienthandler._func_001\n    /Users/burke/go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:44 +0x15a\n\ngoroutine 21 [syscall]:\nsyscall.Syscall()\n    /usr/local/go/src/pkg/syscall/asm_darwin_amd64.s:14 +0x5\nsyscall.Read(0x2300000013, 0xf84010b000, 0x80000000800, 0x100000001, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:810 +0x78\nos.(_File).read(0xf84005f328, 0xf84010b000, 0x80000000800, 0x80000000800, 0x0, ...)\n    /usr/local/go/src/pkg/os/file_unix.go:163 +0x58\nos.(_File).Read(0xf84005f328, 0xf84010b000, 0x80000000800, 0xf84010b000, 0x0, ...)\n    /usr/local/go/src/pkg/os/file.go:95 +0x83\ngithub.com/burke/zeus/go/filemonitor._func_001(0xf84005f358, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:92 +0x87\ncreated by github.com/burke/zeus/go/filemonitor.startWrapper\n    /Users/burke/go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:103 +0x22f\n\ngoroutine 22 [syscall]:\nsyscall.Syscall6()\n    /usr/local/go/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\nsyscall.wait4(0x92f7, 0xf84005f050, 0x0, 0xf8400656c0, 0x1, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:32 +0x81\nsyscall.Wait4(0x92f7, 0x2661e34, 0x0, 0xf8400656c0, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/syscall_bsd.go:136 +0x6a\nos.(_Process).wait(0xf840101940, 0x0, 0x0, 0x0, 0x9dd8a, ...)\n    /usr/local/go/src/pkg/os/exec_unix.go:22 +0xe1\nos.(_Process).Wait(0xf840101940, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/doc.go:43 +0x25\nos/exec.(*Cmd).Wait(0xf8400a2000, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:302 +0x1b7\ngithub.com/burke/zeus/go/filemonitor._func_002(0xf84005f360, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:106 +0x29\ncreated by github.com/burke/zeus/go/filemonitor.startWrapper\n    /Users/burke/go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:111 +0x246\n. same issue here ... :(\n. Get the same issue.\n\"/Users/turadg/Code/Go/src/github.com/burke/zeus/...\" doesn't look right to me... \n. have also a crash ... \n\nStarting Zeus server\nexit status 1hed] [running] [connecting] [waiting]\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u251c\u2500\u2500 cucumber_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus server (alias: s)\nzeus dbconsole\nzeus runner (alias: r)\nzeus destroy (alias: d)\nzeus rake\nzeus generate (alias: g)\nzeus console (alias: c)\nzeus cucumber\nzeus test (alias: rspec, testrb)\nslavenode.go:202: EOF\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0x73cda]\n\ngoroutine 15 [running]:\ngithub.com/burke/zeus/go/unixsocket.(_Usock).WriteMessage(0x0, 0xf84012fc40, 0x3a5300000010, 0xf84005e420, 0xe, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:81 +0xba\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).bootSlave(0xf8400880d0, 0xf8400881a0, 0x0, 0x5200000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:274 +0x10e\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).doCrashedOrReadyState(0xf8400880d0, 0xf800000001, 0x10cf6c, 0x4300000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:247 +0x142\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).Run(0xf8400880d0, 0xf84005e3f0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142 +0x184\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 1 [select]:\ngithub.com/burke/zeus/go/zeusmaster.doRun(0x0, 0x229c)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:46 +0x377\ngithub.com/burke/zeus/go/zeusmaster.Run()\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:21 +0x1c\nmain.main()\n    /Users/burke/go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:40 +0x29c\n\ngoroutine 2 [syscall]:\ncreated by runtime.main\n    /usr/local/go/src/pkg/runtime/proc.c:221\n\ngoroutine 3 [syscall]:\nos/signal.loop()\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:20 +0x1c\ncreated by os/signal.init\u00b71\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:26 +0x2f\n\ngoroutine 4 [select]:\ngithub.com/burke/zeus/go/filemonitor.start(0xf840099000, 0xf840092280, 0xf8400922d0, 0x0, 0x0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:51 +0x148\ncreated by github.com/burke/zeus/go/filemonitor.Start\n    /Users/burke/go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:21 +0x7e\n\ngoroutine 5 [select]:\ngithub.com/burke/zeus/go/processtree._func_001(0xf84005f250, 0xf84005f260, 0xf84005f258, 0x0, 0x0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:56 +0x314\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:65 +0xb6\n\ngoroutine 6 [select]:\ngithub.com/burke/zeus/go/clienthandler._func_001(0xf84005f278, 0xf84005f270, 0xf84005f268, 0x0, 0x0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:47 +0x23c\ncreated by github.com/burke/zeus/go/clienthandler.Start\n    /Users/burke/go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:56 +0xb6\n\ngoroutine 7 [runnable]:\nsyscall.Syscall()\n    /usr/local/go/src/pkg/syscall/asm_darwin_amd64.s:34 +0x61\nsyscall.Write(0x1, 0xf840109d40, 0x4000000022, 0xf800000000, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:1114 +0x78\nos.(_File).write(0xf84005f008, 0xf840109d40, 0x4000000022, 0xf800000000, 0x0, ...)\n    /usr/local/go/src/pkg/os/file_unix.go:177 +0x69\nos.(_File).Write(0xf84005f008, 0xf840109d40, 0x4000000022, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/os/file.go:139 +0x83\nfmt.Fprintf(0xf840045660, 0xf84005f008, 0xf840139f60, 0xf800000022, 0x0, ...)\n    /usr/local/go/src/pkg/fmt/print.go:214 +0xa4\nfmt.Printf(0xf840139f60, 0x22, 0x0, 0x0, 0x112a54, ...)\n    /usr/local/go/src/pkg/fmt/print.go:222 +0x97\ngithub.com/burke/zeus/go/statuschart.(*StatusChart).draw(0xf840001d70, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/statuschart/statuschart.go:123 +0x1f5\ngithub.com/burke/zeus/go/statuschart._func_001(0xf84005f280, 0xf84005f290, 0xf84005f288, 0x0, 0x0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/statuschart/statuschart.go:72 +0x497\ncreated by github.com/burke/zeus/go/statuschart.Start\n    /Users/burke/go/src/github.com/burke/zeus/go/statuschart/statuschart.go:79 +0xb6\n\ngoroutine 8 [finalizer wait]:\ncreated by runtime.gc\n    /usr/local/go/src/pkg/runtime/mgc0.c:882\n\ngoroutine 9 [syscall]:\ncreated by addtimer\n    /usr/local/go/src/pkg/runtime/ztime_amd64.c:72\n\ngoroutine 10 [syscall]:\nsyscall.Syscall6()\n    /usr/local/go/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\nsyscall.kevent(0x17, 0x0, 0x0, 0xf84006bd88, 0xa, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:199 +0x88\nsyscall.Kevent(0xf800000017, 0x0, 0x0, 0xf84006bd88, 0xa0000000a, ...)\n    /usr/local/go/src/pkg/syscall/syscall_bsd.go:538 +0xa4\nnet.(_pollster).WaitFD(0xf84006bd80, 0xf840042b40, 0x0, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/net/fd_darwin.go:96 +0x185\nnet.(_pollServer).Run(0xf840042b40, 0x0)\n    /usr/local/go/src/pkg/net/fd.go:236 +0xe4\ncreated by net.newPollServer\n    /usr/local/go/src/pkg/net/newpollserver.go:35 +0x382\n\ngoroutine 11 [chan receive]:\nnet.(_pollServer).WaitRead(0xf840042b40, 0xf840089090, 0xf840043d50, 0x23, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(_netFD).ReadMsg(0xf840089090, 0xf840102400, 0x40000000400, 0xf84012f060, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\nnet.(_UnixConn).ReadMsgUnix(0xf84005f428, 0xf840102400, 0x40000000400, 0xf84012f060, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf840097280, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadFD(0xf840097280, 0xf800000000, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:109 +0xaa\ngithub.com/burke/zeus/go/processtree._func_002(0xf84005f0e0, 0xf84005f420, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:43 +0x28\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:49 +0x1a7\n\ngoroutine 12 [semacquire]:\nsync.runtime_Semacquire(0xf84005f3f0, 0xf84005f3f0)\n    /usr/local/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\nsync.(_Cond).Wait(0xf840042fc0, 0x1)\n    /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).WaitUntilReadyOrCrashed(0xf840088410, 0x51028)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:75 +0x133\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).doWaitingState(0xf8400885b0, 0xf800000001, 0x10d6bc, 0x5700000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:163 +0x51\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).Run(0xf8400885b0, 0xf84005e3f0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:136 +0x2f2\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 13 [semacquire]:\nsync.runtime_Semacquire(0xf84005f790, 0xf84005f790)\n    /usr/local/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\nsync.(_Cond).Wait(0xf840042e80, 0x1)\n    /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).WaitUntilReadyOrCrashed(0xf8400881a0, 0x51028)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:75 +0x133\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).doWaitingState(0xf840088270, 0xf800000001, 0x10d6bc, 0x5700000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:163 +0x51\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).Run(0xf840088270, 0xf84005e3f0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:136 +0x2f2\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 14 [semacquire]:\nsync.runtime_Semacquire(0xf84005f3f0, 0x19215)\n    /usr/local/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\nsync.(_Cond).Wait(0xf840042fc0, 0x1)\n    /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).WaitUntilReadyOrCrashed(0xf840088410, 0x51028)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:75 +0x133\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).doWaitingState(0xf8400884e0, 0xf800000001, 0x10d6bc, 0x5700000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:163 +0x51\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).Run(0xf8400884e0, 0xf84005e3f0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:136 +0x2f2\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 16 [semacquire]:\nsync.runtime_Semacquire(0xf84005f130, 0xf84005f130)\n    /usr/local/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\nsync.(_Cond).Wait(0xf840042ec0, 0x1)\n    /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).WaitUntilReadyOrCrashed(0xf840088270, 0x51028)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:75 +0x133\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).doWaitingState(0xf840088340, 0xf800000001, 0x10d6bc, 0x5700000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:163 +0x51\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).Run(0xf840088340, 0xf84005e3f0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:136 +0x2f2\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 17 [semacquire]:\nsync.runtime_Semacquire(0xf84005f790, 0x19215)\n    /usr/local/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\nsync.(_Cond).Wait(0xf840042e80, 0x1)\n    /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).WaitUntilReadyOrCrashed(0xf8400881a0, 0x51028)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:75 +0x133\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).doWaitingState(0xf840088410, 0xf800000001, 0x10d6bc, 0x5700000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:163 +0x51\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).Run(0xf840088410, 0xf84005e3f0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:136 +0x2f2\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 18 [chan receive]:\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).doUnbootedState(0xf8400881a0, 0xf84005e3f0, 0x0, 0x5500000000, 0x0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:184 +0x3d4\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).Run(0xf8400881a0, 0xf84005e3f0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavenode.go:138 +0x294\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/burke/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 19 [chan receive]:\nnet.(_pollServer).WaitRead(0xf840042b40, 0xf840089000, 0xf840043d50, 0x23, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(_netFD).accept(0xf840089000, 0x63b12, 0x0, 0xf8400458a0, 0xf84005f040, ...)\n    /usr/local/go/src/pkg/net/fd.go:622 +0x20d\nnet.(*UnixListener).AcceptUnix(0xf840044940, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:350 +0x4d\ngithub.com/burke/zeus/go/clienthandler._func_002(0xf84005f298, 0xf84005f120, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:37 +0x28\ncreated by github.com/burke/zeus/go/clienthandler._func_001\n    /Users/burke/go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:44 +0x15a\n\ngoroutine 21 [syscall]:\nsyscall.Syscall()\n    /usr/local/go/src/pkg/syscall/asm_darwin_amd64.s:14 +0x5\nsyscall.Read(0x2300000013, 0xf84010b000, 0x80000000800, 0x100000001, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:810 +0x78\nos.(_File).read(0xf84005f328, 0xf84010b000, 0x80000000800, 0x80000000800, 0x0, ...)\n    /usr/local/go/src/pkg/os/file_unix.go:163 +0x58\nos.(_File).Read(0xf84005f328, 0xf84010b000, 0x80000000800, 0xf84010b000, 0x0, ...)\n    /usr/local/go/src/pkg/os/file.go:95 +0x83\ngithub.com/burke/zeus/go/filemonitor._func_001(0xf84005f358, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:92 +0x87\ncreated by github.com/burke/zeus/go/filemonitor.startWrapper\n    /Users/burke/go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:103 +0x22f\n\ngoroutine 22 [syscall]:\nsyscall.Syscall6()\n    /usr/local/go/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\nsyscall.wait4(0x92f7, 0xf84005f050, 0x0, 0xf8400656c0, 0x1, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:32 +0x81\nsyscall.Wait4(0x92f7, 0x2661e34, 0x0, 0xf8400656c0, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/syscall_bsd.go:136 +0x6a\nos.(_Process).wait(0xf840101940, 0x0, 0x0, 0x0, 0x9dd8a, ...)\n    /usr/local/go/src/pkg/os/exec_unix.go:22 +0xe1\nos.(_Process).Wait(0xf840101940, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/doc.go:43 +0x25\nos/exec.(*Cmd).Wait(0xf8400a2000, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:302 +0x1b7\ngithub.com/burke/zeus/go/filemonitor._func_002(0xf84005f360, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:106 +0x29\ncreated by github.com/burke/zeus/go/filemonitor.startWrapper\n    /Users/burke/go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:111 +0x246\n. same issue here ... :(\n. Get the same issue.\n\"/Users/turadg/Code/Go/src/github.com/burke/zeus/...\" doesn't look right to me... \n. ",
    "bauersman": "Zeus reproducibly crashes for me whenever I produce a syntax error in a class definition (any error that causes ruby -c to complain). Pasting first two paragraphs of the stacktrace, can post the complete trace if needed.\n\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0x73d27]\n\ngoroutine 15 [running]:\ngithub.com/burke/zeus/go/unixsocket.(_Usock).WriteMessage(0x0, 0xf84005fb98, 0x3a4300000006, 0xf84005f1b8, 0x4, ...)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:81 +0xba\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).bootCommand(0xf840088340, 0xf8404d2d40, 0xf8404d2d40, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:288 +0x9c\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).bootQueuedCommandsAndSlaves(0xf840088340, 0x1)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:308 +0x7d\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).doCrashedOrReadyState(0xf840088340, 0xf800000001, 0x10dadc, 0x4300000001)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:241 +0xd1\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xf840088340, 0xf84005e3e0, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:142 +0x184\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n. Zeus reproducibly crashes for me whenever I produce a syntax error in a class definition (any error that causes ruby -c to complain). Pasting first two paragraphs of the stacktrace, can post the complete trace if needed.\n\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0x73d27]\n\ngoroutine 15 [running]:\ngithub.com/burke/zeus/go/unixsocket.(_Usock).WriteMessage(0x0, 0xf84005fb98, 0x3a4300000006, 0xf84005f1b8, 0x4, ...)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:81 +0xba\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).bootCommand(0xf840088340, 0xf8404d2d40, 0xf8404d2d40, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:288 +0x9c\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).bootQueuedCommandsAndSlaves(0xf840088340, 0x1)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:308 +0x7d\ngithub.com/burke/zeus/go/processtree.(_SlaveNode).doCrashedOrReadyState(0xf840088340, 0xf800000001, 0x10dadc, 0x4300000001)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:241 +0xd1\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xf840088340, 0xf84005e3e0, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:142 +0x184\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n. ",
    "mariusbutuc": "a fresh cup of `bundle` fixed it for me.\n. a fresh cup of `bundle` fixed it for me.\n. ",
    "toxaq": "I'm getting the same with any syntax error. It makes the console go invisible, which I can reset but I'm left with zeus processes still running. If I kill them then in a short period of time, guard will lock up and the only thing I can do is a hard reset of my entire machine. It won't actually turn off, I have to hold the off button down.\n\nI've tried bundle update to no avail. Here's the dump on crash:\n\n```\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0x73d27]\n\u2514\u2500\u2500 default_bundle\ngoroutine 13 [running]:ironment\ngithub.com/burke/zeus/go/unixsocket.(*Usock).WriteMessage(0x0, 0xf8400607d8, 0x3a4300000006, 0xf8400601b8, 0x4, ...)\n    \u2514\u2500\u2500 /Users/turadg/Code/Go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:81 +0xba\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).bootCommand(0xf8400894e0, 0xf8403525e0, 0xf8403525e0, 0x0)\n        /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:288 +0x9c\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).bootQueuedCommandsAndSlaves(0xf8400894e0, 0x1)\nAvailabl/Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:308 +0x7d\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doCrashedOrReadyState(0xf8400894e0, 0xf800000001, 0x10dadc, 0x4300000001)\nzeus des/Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:241 +0xd1\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xf8400894e0, 0xf84005f3e0, 0x0, 0x0)\nzeus con/Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:142 +0x184\ncreated by github.com/burke/zeus/go/processtree._func_001\nzeus run/Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\nzeus generate (alias: g)\ngoroutine 1 [select]:ec, testrb)\ngithub.com/burke/zeus/go/zeusmaster.doRun(0x0, 0x229c)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:47 +0x377\ngithub.com/burke/zeus/go/zeusmaster.Run()\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:22 +0x1c\nmain.main()\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:40 +0x29c\n\ngoroutine 2 [syscall]:\ncreated by runtime.main\n    /usr/local/Cellar/go/1.0.3/src/pkg/runtime/proc.c:221\n\ngoroutine 3 [syscall]:\nos/signal.loop()\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/signal/signal_unix.go:20 +0x1c\ncreated by os/signal.init\u00b71\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/signal/signal_unix.go:26 +0x2f\n\ngoroutine 4 [select]:\ngithub.com/burke/zeus/go/filemonitor.start(0xf84009a000, 0xf840082500, 0xf840082550, 0x0, 0x0, ...)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:51 +0x148\ncreated by github.com/burke/zeus/go/filemonitor.Start\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:21 +0x7e\n\ngoroutine 5 [select]:\ngithub.com/burke/zeus/go/processtree._func_001(0xf840060250, 0xf840060260, 0xf840060258, 0x0, 0x0, ...)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:56 +0x314\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:65 +0xb6\n\ngoroutine 6 [select]:\ngithub.com/burke/zeus/go/clienthandler._func_001(0xf840060278, 0xf840060270, 0xf840060268, 0x0, 0x0, ...)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:47 +0x23c\ncreated by github.com/burke/zeus/go/clienthandler.Start\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:56 +0xb6\n\ngoroutine 7 [runnable]:\nsyscall.Syscall()\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/asm_darwin_amd64.s:34 +0x61\nsyscall.Write(0x1, 0xf8400604f0, 0x800000005, 0xf800000000, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/zsyscall_darwin_amd64.go:1279 +0x78\nos.(*File).write(0xf840060008, 0xf8400604f0, 0x800000005, 0xf800000000, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/file_unix.go:188 +0x69\nos.(*File).Write(0xf840060008, 0xf8400604f0, 0x800000005, 0x226bea8, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/file.go:139 +0x83\nfmt.Fprintf(0xf840043a80, 0xf840060008, 0x113534, 0xf800000005, 0x226bea8, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/fmt/print.go:214 +0xa4\nfmt.Printf(0x113534, 0x64255b1b00000005, 0x226bea8, 0x100000001, 0x1, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/fmt/print.go:222 +0x97\ngithub.com/burke/zeus/go/statuschart.(*StatusChart).draw(0xf840047c00, 0xf840047060)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/statuschart/statuschart.go:115 +0x123\ngithub.com/burke/zeus/go/statuschart._func_001(0xf840060280, 0xf840060290, 0xf840060288, 0x0, 0x0, ...)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/statuschart/statuschart.go:78 +0x4ed\ncreated by github.com/burke/zeus/go/statuschart.Start\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/statuschart/statuschart.go:83 +0xb6\n\ngoroutine 8 [finalizer wait]:\ncreated by runtime.gc\n    /usr/local/Cellar/go/1.0.3/src/pkg/runtime/mgc0.c:882\n\ngoroutine 9 [syscall]:\ncreated by addtimer\n    /usr/local/Cellar/go/1.0.3/src/pkg/runtime/ztime_amd64.c:72\n\ngoroutine 10 [syscall]:\nsyscall.Syscall6()\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\nsyscall.kevent(0x10, 0x0, 0x0, 0xf84006cd88, 0xa, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/zsyscall_darwin_amd64.go:199 +0x88\nsyscall.Kevent(0xf800000010, 0x0, 0x0, 0xf84006cd88, 0xa0000000a, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/syscall_bsd.go:546 +0xa4\nnet.(*pollster).WaitFD(0xf84006cd80, 0xf840046600, 0x0, 0x0, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/net/fd_darwin.go:96 +0x185\nnet.(*pollServer).Run(0xf840046600, 0x0)\n    /usr/local/Cellar/go/1.0.3/src/pkg/net/fd.go:236 +0xe4\ncreated by net.newPollServer\n    /usr/local/Cellar/go/1.0.3/src/pkg/net/newpollserver.go:35 +0x382\n\ngoroutine 11 [chan receive]:\nnet.(*pollServer).WaitRead(0xf840046600, 0xf84008a090, 0xf840043ed0, 0x23, 0x1, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/net/fd.go:268 +0x73\nnet.(*netFD).ReadMsg(0xf84008a090, 0xf840270000, 0x40000000400, 0xf8403d77c0, 0x2000000020, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/net/fd.go:486 +0x2d5\nnet.(*UnixConn).ReadMsgUnix(0xf840060590, 0xf840270000, 0x40000000400, 0xf8403d77c0, 0x2000000020, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(*Usock).readFromSocket(0xf840081b00, 0x0, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadFD(0xf840081b00, 0xf800000000, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:109 +0xaa\ngithub.com/burke/zeus/go/processtree._func_002(0xf8400600f0, 0xf840060598, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:43 +0x28\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:49 +0x1a7\n\ngoroutine 12 [select]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doCrashedOrReadyState(0xf8400890d0, 0xf800000001, 0x10e03c, 0x5200000001)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:244 +0x288\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xf8400890d0, 0xf84005f3e0, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:144 +0x22b\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 14 [select]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doCrashedOrReadyState(0xf840089410, 0xf800000001, 0x10dadc, 0x4300000001)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:244 +0x288\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xf840089410, 0xf84005f3e0, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:142 +0x184\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 15 [chan receive]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doUnbootedState(0xf8400895b0, 0xf84005f3e0, 0x0, 0x5500000000, 0x0, ...)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:184 +0x3d4\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xf8400895b0, 0xf84005f3e0, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:138 +0x294\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 16 [select]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doCrashedOrReadyState(0xf840089270, 0xf800000001, 0x10e03c, 0x5200000001)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:244 +0x288\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xf840089270, 0xf84005f3e0, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:144 +0x22b\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 17 [select]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doCrashedOrReadyState(0xf8400891a0, 0xf800000001, 0x10e03c, 0x5200000001)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:244 +0x288\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xf8400891a0, 0xf84005f3e0, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:144 +0x22b\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 18 [select]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doCrashedOrReadyState(0xf840089340, 0xf800000001, 0x10e03c, 0x5200000001)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:244 +0x288\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xf840089340, 0xf84005f3e0, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:144 +0x22b\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 19 [chan receive]:\nnet.(*pollServer).WaitRead(0xf840046600, 0xf84008a000, 0xf840043ed0, 0x23, 0x1, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/net/fd.go:268 +0x73\nnet.(*netFD).accept(0xf84008a000, 0x641a5, 0x0, 0xf840043480, 0xf840060040, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/net/fd.go:622 +0x20d\nnet.(*UnixListener).AcceptUnix(0xf840045c60, 0xf840088a50, 0xf840329900, 0x0)\n    /usr/local/Cellar/go/1.0.3/src/pkg/net/unixsock_posix.go:350 +0x4d\ngithub.com/burke/zeus/go/clienthandler._func_002(0xf840060048, 0xf840060208, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:37 +0x28\ncreated by github.com/burke/zeus/go/clienthandler._func_001\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:44 +0x15a\n\ngoroutine 20 [syscall]:\nsyscall.Syscall6()\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\nsyscall.wait4(0x2ce4, 0xf8400606e8, 0x0, 0xf840110000, 0x1, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/zsyscall_darwin_amd64.go:32 +0x81\nsyscall.Wait4(0x2ce4, 0x22b1d84, 0x0, 0xf840110000, 0x9e2af, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/syscall_bsd.go:136 +0x6a\nos.(*Process).wait(0xf8401066a0, 0xf8400606a8, 0x0, 0x0, 0x9e551, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/exec_unix.go:22 +0xe1\nos.(*Process).Wait(0xf8401066a0, 0x0, 0x0, 0x22b1e58)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/doc.go:43 +0x25\nos/exec.(*Cmd).Wait(0xf840055f00, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/exec/exec.go:308 +0x1b7\nos/exec.(*Cmd).Run(0xf840055f00, 0xe3080, 0xf8400ed660, 0xf840084c90)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/exec/exec.go:232 +0x6d\nos/exec.(*Cmd).CombinedOutput(0xf840055f00, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/exec/exec.go:352 +0x246\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).babysitRootProcess(0xf8400890d0, 0xf840055f00, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:344 +0x25\ncreated by github.com/burke/zeus/go/processtree.(*SlaveNode).doUnbootedState\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:179 +0x398\n\ngoroutine 21 [syscall]:\nsyscall.Syscall()\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/asm_darwin_amd64.s:14 +0x5\nsyscall.Read(0x8, 0xf8400fc000, 0x80000000800, 0xf84004a000, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/zsyscall_darwin_amd64.go:905 +0x78\nos.(*File).read(0xf840060110, 0xf8400fc000, 0x80000000800, 0xa5368, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/file_unix.go:174 +0x58\nos.(*File).Read(0xf840060110, 0xf8400fc000, 0x80000000800, 0xa00000041, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/file.go:95 +0x83\ngithub.com/burke/zeus/go/filemonitor._func_001(0xf840060298, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:92 +0x87\ncreated by github.com/burke/zeus/go/filemonitor.startWrapper\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:103 +0x22f\n\ngoroutine 22 [syscall]:\nsyscall.Syscall6()\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\nsyscall.wait4(0x2ce3, 0xf8400605e0, 0x0, 0xf84008a480, 0x1, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/zsyscall_darwin_amd64.go:32 +0x81\nsyscall.Wait4(0x2ce3, 0x22cae34, 0x0, 0xf84008a480, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/syscall_bsd.go:136 +0x6a\nos.(*Process).wait(0xf840045c80, 0x0, 0x0, 0x0, 0x9e551, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/exec_unix.go:22 +0xe1\nos.(*Process).Wait(0xf840045c80, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/doc.go:43 +0x25\nos/exec.(*Cmd).Wait(0xf840055000, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/exec/exec.go:308 +0x1b7\ngithub.com/burke/zeus/go/filemonitor._func_002(0xf8400602a0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:106 +0x29\ncreated by github.com/burke/zeus/go/filemonitor.startWrapper\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:111 +0x246\n\ngoroutine 23 [syscall]:\nsyscall.Syscall()\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/asm_darwin_amd64.s:14 +0x5\nsyscall.Read(0x9, 0xf8403bb9d2, 0x42e0000042e, 0x202, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/zsyscall_darwin_amd64.go:905 +0x78\nos.(*File).read(0xf8400606a0, 0xf8403bb9d2, 0x42e0000042e, 0x202, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/file_unix.go:174 +0x58\nos.(*File).Read(0xf8400606a0, 0xf8403bb9d2, 0x42e0000042e, 0xe0000000202, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/file.go:95 +0x83\nbytes.(*Buffer).ReadFrom(0xf8400ed660, 0xf840043f90, 0xf8400606a0, 0x19d2, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/bytes/buffer.go:153 +0x199\nio.Copy(0xf840084c90, 0xf8400ed660, 0xf840043f90, 0xf8400606a0, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/io/io.go:352 +0xc2\nos/exec._func_003(0xf84005fb90, 0xf840060698, 0xa030e, 0x0, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/exec/exec.go:207 +0x5a\nos/exec._func_004(0xf8400605d0, 0xf8400f3800, 0x0, 0x0)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/exec/exec.go:274 +0x1e\ncreated by os/exec.(*Cmd).Start\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/exec/exec.go:275 +0x65c\n\ngoroutine 25 [syscall]:\nsyscall.Syscall()\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/asm_darwin_amd64.s:14 +0x5\nsyscall.Read(0xf, 0xf840132000, 0x100000001000, 0x2720d01, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/zsyscall_darwin_amd64.go:905 +0x78\nos.(*File).read(0xf8400607f8, 0xf840132000, 0x100000001000, 0x60, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/file_unix.go:174 +0x58\nos.(*File).Read(0xf8400607f8, 0xf840132000, 0x100000001000, 0xfac00000000, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/file.go:95 +0x83\nbufio.(*Reader).fill(0xf84010ef00, 0xfac00000000)\n    /usr/local/Cellar/go/1.0.3/src/pkg/bufio/bufio.go:77 +0xf0\nbufio.(*Reader).ReadSlice(0xf84010ef00, 0xa, 0x0, 0x0, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/bufio/bufio.go:257 +0x1b6\nbufio.(*Reader).ReadBytes(0xf84010ef00, 0xf84012cf0a, 0x0, 0x0, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/bufio/bufio.go:335 +0xb8\nbufio.(*Reader).ReadString(0xf84010ef00, 0xf84017c00a, 0x0, 0xa00000000, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/bufio/bufio.go:374 +0x50\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).handleMessages(0xf8400890d0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:364 +0x6a\ncreated by github.com/burke/zeus/go/processtree.(*SlaveNode).doCrashedOrReadyState\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:237 +0xab\n\ngoroutine 293 [syscall]:\nsyscall.Syscall()\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/asm_darwin_amd64.s:14 +0x5\nsyscall.Read(0x13, 0xf840197000, 0x100000001000, 0x275ed88, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/zsyscall_darwin_amd64.go:905 +0x78\nos.(*File).read(0xf8400609b0, 0xf840197000, 0x100000001000, 0x16ed5, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/file_unix.go:174 +0x58\nos.(*File).Read(0xf8400609b0, 0xf840197000, 0x100000001000, 0x5c400000000, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/file.go:95 +0x83\nbufio.(*Reader).fill(0xf84017a880, 0x5c400000000)\n    /usr/local/Cellar/go/1.0.3/src/pkg/bufio/bufio.go:77 +0xf0\nbufio.(*Reader).ReadSlice(0xf84017a880, 0x50000000a, 0x0, 0x0, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/bufio/bufio.go:257 +0x1b6\nbufio.(*Reader).ReadBytes(0xf84017a880, 0xf84029590a, 0x0, 0x0, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/bufio/bufio.go:335 +0xb8\nbufio.(*Reader).ReadString(0xf84017a880, 0xf840147a0a, 0x0, 0xa00000000, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/bufio/bufio.go:374 +0x50\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).handleMessages(0xf8400891a0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:364 +0x6a\ncreated by github.com/burke/zeus/go/processtree.(*SlaveNode).doCrashedOrReadyState\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:237 +0xab\n\ngoroutine 29093 [chan receive]:\n```\n\nAnd these are the processes left running after the crash:\n\n```\ngrep [z]eus\nwat          11495   0.0  0.4  2629428 143360 s002  S     1:05pm   0:04.87 zeus slave: development_environment   rvm_bin_path=/Users/wat/.rvm/bin\nwat          11493   0.0  0.3  2574008 112240 s002  S     1:05pm   0:04.26 zeus slave: default_bundle   \nwat          11492   0.0  0.1  2487012  32740 s002  S     1:05pm   0:00.70 zeus slave: boot   \nwat          11491   0.0  0.0  2469012   6348 s002  S     1:05pm   0:03.48 /Users/wat/.rvm/gems/ruby-1.9.3-p448@example/gems/zeus-0.13.3/build/fsevents-wrapper\nwat           2668   0.0  0.1  2494704  34916 s002  S    Thu02pm   0:00.71 zeus slave: boot   \nwat          11503   0.0  0.2  2631232  54676 s002  S     1:05pm   0:00.06 zeus slave: prerake  \n```\n\nThis pretty much will happen at least once a day which unfortunately is nullifying all the time I had been saving(!)\n. @jastix Perfect, thanks for this solution.\n. Yeah, I hit continue and it took me to a suggestion about installing Xquartz (I think) http://xquartz.macosforge.org/landing/ I did that and it started working. Still no idea why zues would need this but I didn't have time to argue.\n. I'm getting the same with any syntax error. It makes the console go invisible, which I can reset but I'm left with zeus processes still running. If I kill them then in a short period of time, guard will lock up and the only thing I can do is a hard reset of my entire machine. It won't actually turn off, I have to hold the off button down.\n\nI've tried bundle update to no avail. Here's the dump on crash:\n\n```\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0x73d27]\n\u2514\u2500\u2500 default_bundle\ngoroutine 13 [running]:ironment\ngithub.com/burke/zeus/go/unixsocket.(*Usock).WriteMessage(0x0, 0xf8400607d8, 0x3a4300000006, 0xf8400601b8, 0x4, ...)\n    \u2514\u2500\u2500 /Users/turadg/Code/Go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:81 +0xba\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).bootCommand(0xf8400894e0, 0xf8403525e0, 0xf8403525e0, 0x0)\n        /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:288 +0x9c\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).bootQueuedCommandsAndSlaves(0xf8400894e0, 0x1)\nAvailabl/Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:308 +0x7d\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doCrashedOrReadyState(0xf8400894e0, 0xf800000001, 0x10dadc, 0x4300000001)\nzeus des/Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:241 +0xd1\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xf8400894e0, 0xf84005f3e0, 0x0, 0x0)\nzeus con/Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:142 +0x184\ncreated by github.com/burke/zeus/go/processtree._func_001\nzeus run/Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\nzeus generate (alias: g)\ngoroutine 1 [select]:ec, testrb)\ngithub.com/burke/zeus/go/zeusmaster.doRun(0x0, 0x229c)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:47 +0x377\ngithub.com/burke/zeus/go/zeusmaster.Run()\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:22 +0x1c\nmain.main()\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:40 +0x29c\n\ngoroutine 2 [syscall]:\ncreated by runtime.main\n    /usr/local/Cellar/go/1.0.3/src/pkg/runtime/proc.c:221\n\ngoroutine 3 [syscall]:\nos/signal.loop()\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/signal/signal_unix.go:20 +0x1c\ncreated by os/signal.init\u00b71\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/signal/signal_unix.go:26 +0x2f\n\ngoroutine 4 [select]:\ngithub.com/burke/zeus/go/filemonitor.start(0xf84009a000, 0xf840082500, 0xf840082550, 0x0, 0x0, ...)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:51 +0x148\ncreated by github.com/burke/zeus/go/filemonitor.Start\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:21 +0x7e\n\ngoroutine 5 [select]:\ngithub.com/burke/zeus/go/processtree._func_001(0xf840060250, 0xf840060260, 0xf840060258, 0x0, 0x0, ...)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:56 +0x314\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:65 +0xb6\n\ngoroutine 6 [select]:\ngithub.com/burke/zeus/go/clienthandler._func_001(0xf840060278, 0xf840060270, 0xf840060268, 0x0, 0x0, ...)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:47 +0x23c\ncreated by github.com/burke/zeus/go/clienthandler.Start\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:56 +0xb6\n\ngoroutine 7 [runnable]:\nsyscall.Syscall()\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/asm_darwin_amd64.s:34 +0x61\nsyscall.Write(0x1, 0xf8400604f0, 0x800000005, 0xf800000000, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/zsyscall_darwin_amd64.go:1279 +0x78\nos.(*File).write(0xf840060008, 0xf8400604f0, 0x800000005, 0xf800000000, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/file_unix.go:188 +0x69\nos.(*File).Write(0xf840060008, 0xf8400604f0, 0x800000005, 0x226bea8, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/file.go:139 +0x83\nfmt.Fprintf(0xf840043a80, 0xf840060008, 0x113534, 0xf800000005, 0x226bea8, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/fmt/print.go:214 +0xa4\nfmt.Printf(0x113534, 0x64255b1b00000005, 0x226bea8, 0x100000001, 0x1, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/fmt/print.go:222 +0x97\ngithub.com/burke/zeus/go/statuschart.(*StatusChart).draw(0xf840047c00, 0xf840047060)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/statuschart/statuschart.go:115 +0x123\ngithub.com/burke/zeus/go/statuschart._func_001(0xf840060280, 0xf840060290, 0xf840060288, 0x0, 0x0, ...)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/statuschart/statuschart.go:78 +0x4ed\ncreated by github.com/burke/zeus/go/statuschart.Start\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/statuschart/statuschart.go:83 +0xb6\n\ngoroutine 8 [finalizer wait]:\ncreated by runtime.gc\n    /usr/local/Cellar/go/1.0.3/src/pkg/runtime/mgc0.c:882\n\ngoroutine 9 [syscall]:\ncreated by addtimer\n    /usr/local/Cellar/go/1.0.3/src/pkg/runtime/ztime_amd64.c:72\n\ngoroutine 10 [syscall]:\nsyscall.Syscall6()\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\nsyscall.kevent(0x10, 0x0, 0x0, 0xf84006cd88, 0xa, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/zsyscall_darwin_amd64.go:199 +0x88\nsyscall.Kevent(0xf800000010, 0x0, 0x0, 0xf84006cd88, 0xa0000000a, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/syscall_bsd.go:546 +0xa4\nnet.(*pollster).WaitFD(0xf84006cd80, 0xf840046600, 0x0, 0x0, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/net/fd_darwin.go:96 +0x185\nnet.(*pollServer).Run(0xf840046600, 0x0)\n    /usr/local/Cellar/go/1.0.3/src/pkg/net/fd.go:236 +0xe4\ncreated by net.newPollServer\n    /usr/local/Cellar/go/1.0.3/src/pkg/net/newpollserver.go:35 +0x382\n\ngoroutine 11 [chan receive]:\nnet.(*pollServer).WaitRead(0xf840046600, 0xf84008a090, 0xf840043ed0, 0x23, 0x1, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/net/fd.go:268 +0x73\nnet.(*netFD).ReadMsg(0xf84008a090, 0xf840270000, 0x40000000400, 0xf8403d77c0, 0x2000000020, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/net/fd.go:486 +0x2d5\nnet.(*UnixConn).ReadMsgUnix(0xf840060590, 0xf840270000, 0x40000000400, 0xf8403d77c0, 0x2000000020, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(*Usock).readFromSocket(0xf840081b00, 0x0, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadFD(0xf840081b00, 0xf800000000, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:109 +0xaa\ngithub.com/burke/zeus/go/processtree._func_002(0xf8400600f0, 0xf840060598, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:43 +0x28\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:49 +0x1a7\n\ngoroutine 12 [select]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doCrashedOrReadyState(0xf8400890d0, 0xf800000001, 0x10e03c, 0x5200000001)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:244 +0x288\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xf8400890d0, 0xf84005f3e0, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:144 +0x22b\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 14 [select]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doCrashedOrReadyState(0xf840089410, 0xf800000001, 0x10dadc, 0x4300000001)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:244 +0x288\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xf840089410, 0xf84005f3e0, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:142 +0x184\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 15 [chan receive]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doUnbootedState(0xf8400895b0, 0xf84005f3e0, 0x0, 0x5500000000, 0x0, ...)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:184 +0x3d4\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xf8400895b0, 0xf84005f3e0, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:138 +0x294\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 16 [select]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doCrashedOrReadyState(0xf840089270, 0xf800000001, 0x10e03c, 0x5200000001)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:244 +0x288\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xf840089270, 0xf84005f3e0, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:144 +0x22b\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 17 [select]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doCrashedOrReadyState(0xf8400891a0, 0xf800000001, 0x10e03c, 0x5200000001)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:244 +0x288\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xf8400891a0, 0xf84005f3e0, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:144 +0x22b\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 18 [select]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doCrashedOrReadyState(0xf840089340, 0xf800000001, 0x10e03c, 0x5200000001)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:244 +0x288\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xf840089340, 0xf84005f3e0, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:144 +0x22b\ncreated by github.com/burke/zeus/go/processtree._func_001\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 19 [chan receive]:\nnet.(*pollServer).WaitRead(0xf840046600, 0xf84008a000, 0xf840043ed0, 0x23, 0x1, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/net/fd.go:268 +0x73\nnet.(*netFD).accept(0xf84008a000, 0x641a5, 0x0, 0xf840043480, 0xf840060040, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/net/fd.go:622 +0x20d\nnet.(*UnixListener).AcceptUnix(0xf840045c60, 0xf840088a50, 0xf840329900, 0x0)\n    /usr/local/Cellar/go/1.0.3/src/pkg/net/unixsock_posix.go:350 +0x4d\ngithub.com/burke/zeus/go/clienthandler._func_002(0xf840060048, 0xf840060208, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:37 +0x28\ncreated by github.com/burke/zeus/go/clienthandler._func_001\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:44 +0x15a\n\ngoroutine 20 [syscall]:\nsyscall.Syscall6()\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\nsyscall.wait4(0x2ce4, 0xf8400606e8, 0x0, 0xf840110000, 0x1, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/zsyscall_darwin_amd64.go:32 +0x81\nsyscall.Wait4(0x2ce4, 0x22b1d84, 0x0, 0xf840110000, 0x9e2af, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/syscall_bsd.go:136 +0x6a\nos.(*Process).wait(0xf8401066a0, 0xf8400606a8, 0x0, 0x0, 0x9e551, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/exec_unix.go:22 +0xe1\nos.(*Process).Wait(0xf8401066a0, 0x0, 0x0, 0x22b1e58)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/doc.go:43 +0x25\nos/exec.(*Cmd).Wait(0xf840055f00, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/exec/exec.go:308 +0x1b7\nos/exec.(*Cmd).Run(0xf840055f00, 0xe3080, 0xf8400ed660, 0xf840084c90)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/exec/exec.go:232 +0x6d\nos/exec.(*Cmd).CombinedOutput(0xf840055f00, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/exec/exec.go:352 +0x246\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).babysitRootProcess(0xf8400890d0, 0xf840055f00, 0x0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:344 +0x25\ncreated by github.com/burke/zeus/go/processtree.(*SlaveNode).doUnbootedState\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:179 +0x398\n\ngoroutine 21 [syscall]:\nsyscall.Syscall()\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/asm_darwin_amd64.s:14 +0x5\nsyscall.Read(0x8, 0xf8400fc000, 0x80000000800, 0xf84004a000, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/zsyscall_darwin_amd64.go:905 +0x78\nos.(*File).read(0xf840060110, 0xf8400fc000, 0x80000000800, 0xa5368, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/file_unix.go:174 +0x58\nos.(*File).Read(0xf840060110, 0xf8400fc000, 0x80000000800, 0xa00000041, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/file.go:95 +0x83\ngithub.com/burke/zeus/go/filemonitor._func_001(0xf840060298, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:92 +0x87\ncreated by github.com/burke/zeus/go/filemonitor.startWrapper\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:103 +0x22f\n\ngoroutine 22 [syscall]:\nsyscall.Syscall6()\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\nsyscall.wait4(0x2ce3, 0xf8400605e0, 0x0, 0xf84008a480, 0x1, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/zsyscall_darwin_amd64.go:32 +0x81\nsyscall.Wait4(0x2ce3, 0x22cae34, 0x0, 0xf84008a480, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/syscall_bsd.go:136 +0x6a\nos.(*Process).wait(0xf840045c80, 0x0, 0x0, 0x0, 0x9e551, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/exec_unix.go:22 +0xe1\nos.(*Process).Wait(0xf840045c80, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/doc.go:43 +0x25\nos/exec.(*Cmd).Wait(0xf840055000, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/exec/exec.go:308 +0x1b7\ngithub.com/burke/zeus/go/filemonitor._func_002(0xf8400602a0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:106 +0x29\ncreated by github.com/burke/zeus/go/filemonitor.startWrapper\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/filemonitor/filemonitor.go:111 +0x246\n\ngoroutine 23 [syscall]:\nsyscall.Syscall()\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/asm_darwin_amd64.s:14 +0x5\nsyscall.Read(0x9, 0xf8403bb9d2, 0x42e0000042e, 0x202, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/zsyscall_darwin_amd64.go:905 +0x78\nos.(*File).read(0xf8400606a0, 0xf8403bb9d2, 0x42e0000042e, 0x202, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/file_unix.go:174 +0x58\nos.(*File).Read(0xf8400606a0, 0xf8403bb9d2, 0x42e0000042e, 0xe0000000202, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/file.go:95 +0x83\nbytes.(*Buffer).ReadFrom(0xf8400ed660, 0xf840043f90, 0xf8400606a0, 0x19d2, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/bytes/buffer.go:153 +0x199\nio.Copy(0xf840084c90, 0xf8400ed660, 0xf840043f90, 0xf8400606a0, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/io/io.go:352 +0xc2\nos/exec._func_003(0xf84005fb90, 0xf840060698, 0xa030e, 0x0, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/exec/exec.go:207 +0x5a\nos/exec._func_004(0xf8400605d0, 0xf8400f3800, 0x0, 0x0)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/exec/exec.go:274 +0x1e\ncreated by os/exec.(*Cmd).Start\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/exec/exec.go:275 +0x65c\n\ngoroutine 25 [syscall]:\nsyscall.Syscall()\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/asm_darwin_amd64.s:14 +0x5\nsyscall.Read(0xf, 0xf840132000, 0x100000001000, 0x2720d01, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/zsyscall_darwin_amd64.go:905 +0x78\nos.(*File).read(0xf8400607f8, 0xf840132000, 0x100000001000, 0x60, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/file_unix.go:174 +0x58\nos.(*File).Read(0xf8400607f8, 0xf840132000, 0x100000001000, 0xfac00000000, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/file.go:95 +0x83\nbufio.(*Reader).fill(0xf84010ef00, 0xfac00000000)\n    /usr/local/Cellar/go/1.0.3/src/pkg/bufio/bufio.go:77 +0xf0\nbufio.(*Reader).ReadSlice(0xf84010ef00, 0xa, 0x0, 0x0, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/bufio/bufio.go:257 +0x1b6\nbufio.(*Reader).ReadBytes(0xf84010ef00, 0xf84012cf0a, 0x0, 0x0, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/bufio/bufio.go:335 +0xb8\nbufio.(*Reader).ReadString(0xf84010ef00, 0xf84017c00a, 0x0, 0xa00000000, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/bufio/bufio.go:374 +0x50\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).handleMessages(0xf8400890d0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:364 +0x6a\ncreated by github.com/burke/zeus/go/processtree.(*SlaveNode).doCrashedOrReadyState\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:237 +0xab\n\ngoroutine 293 [syscall]:\nsyscall.Syscall()\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/asm_darwin_amd64.s:14 +0x5\nsyscall.Read(0x13, 0xf840197000, 0x100000001000, 0x275ed88, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/syscall/zsyscall_darwin_amd64.go:905 +0x78\nos.(*File).read(0xf8400609b0, 0xf840197000, 0x100000001000, 0x16ed5, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/file_unix.go:174 +0x58\nos.(*File).Read(0xf8400609b0, 0xf840197000, 0x100000001000, 0x5c400000000, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/os/file.go:95 +0x83\nbufio.(*Reader).fill(0xf84017a880, 0x5c400000000)\n    /usr/local/Cellar/go/1.0.3/src/pkg/bufio/bufio.go:77 +0xf0\nbufio.(*Reader).ReadSlice(0xf84017a880, 0x50000000a, 0x0, 0x0, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/bufio/bufio.go:257 +0x1b6\nbufio.(*Reader).ReadBytes(0xf84017a880, 0xf84029590a, 0x0, 0x0, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/bufio/bufio.go:335 +0xb8\nbufio.(*Reader).ReadString(0xf84017a880, 0xf840147a0a, 0x0, 0xa00000000, 0x0, ...)\n    /usr/local/Cellar/go/1.0.3/src/pkg/bufio/bufio.go:374 +0x50\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).handleMessages(0xf8400891a0, 0x0)\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:364 +0x6a\ncreated by github.com/burke/zeus/go/processtree.(*SlaveNode).doCrashedOrReadyState\n    /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:237 +0xab\n\ngoroutine 29093 [chan receive]:\n```\n\nAnd these are the processes left running after the crash:\n\n```\ngrep [z]eus\nwat          11495   0.0  0.4  2629428 143360 s002  S     1:05pm   0:04.87 zeus slave: development_environment   rvm_bin_path=/Users/wat/.rvm/bin\nwat          11493   0.0  0.3  2574008 112240 s002  S     1:05pm   0:04.26 zeus slave: default_bundle   \nwat          11492   0.0  0.1  2487012  32740 s002  S     1:05pm   0:00.70 zeus slave: boot   \nwat          11491   0.0  0.0  2469012   6348 s002  S     1:05pm   0:03.48 /Users/wat/.rvm/gems/ruby-1.9.3-p448@example/gems/zeus-0.13.3/build/fsevents-wrapper\nwat           2668   0.0  0.1  2494704  34916 s002  S    Thu02pm   0:00.71 zeus slave: boot   \nwat          11503   0.0  0.2  2631232  54676 s002  S     1:05pm   0:00.06 zeus slave: prerake  \n```\n\nThis pretty much will happen at least once a day which unfortunately is nullifying all the time I had been saving(!)\n. @jastix Perfect, thanks for this solution.\n. Yeah, I hit continue and it took me to a suggestion about installing Xquartz (I think) http://xquartz.macosforge.org/landing/ I did that and it started working. Still no idea why zues would need this but I didn't have time to argue.\n. ",
    "nicolasgarnil": "zeus is evil\n(bundle install fixed it)\n. zeus is evil\n(bundle install fixed it)\n. ",
    "ndyakov": "I'm getting the same error here:\n\ngo version go1.0.2\nUbuntu 13.04\nLinux 3.8.0-35-generic x86_64 \nZeus version 0.13.3.rc2\nruby-1.9.3-p448-perf (installed via rbenv)\nrbenv 0.4.0\n\n```\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0x4735a5]\n\ngoroutine 14 [running]:\ngithub.com/burke/zeus/go/unixsocket.(*Usock).WriteMessage(0x0, 0xf84005ef80, 0x3a5300000009, 0xf84005f160, 0x7, ...)\n /Users/turadg/Code/Go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:81 +0xba\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).bootSlave(0xf84008d410, 0xf84008d4e0, 0x0, 0x5200000001)\n        /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:274 +0x10e\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doCrashedOrReadyState(0xf84008d410, 0xf800000001, 0x50d7d4, 0x4300000001)\n/Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:247 +0x142\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xf84008d410, 0xf84005e3e0, 0x0, 0x0)\n/Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:142 +0x184\ncreated by github.com/burke/zeus/go/processtree._func_001\n/Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 1 [select]:\ngithub.com/burke/zeus/go/zeusmaster.doRun(0x7fc900000000, 0x400e9c)\n        /Users/turadg/Code/Go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:47 +0x377\ngithub.com/burke/zeus/go/zeusmaster.Run()\n        /Users/turadg/Code/Go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:22 +0x1c\nmain.main()\n        /Users/turadg/Code/Go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:40 +0x29c\n\ngoroutine 2 [syscall]:\ncreated by runtime.main\n        /usr/local/Cellar/go/1.0.3/src/pkg/runtime/proc.c:221\n....\n```\n\nAlso , zeus is left running, so here is an strace:\n\n```\nread(0, \"\", 4096)                       = 0\nselect(4, [0 3], NULL, NULL, NULL)      = 1 (in [0])\nread(0, \"\", 4096)                       = 0\nselect(4, [0 3], NULL, NULL, NULL)      = 1 (in [0])\n....\n```\n\n#### `bundle install` didn't help.\n. I'm getting the same error here:\n\ngo version go1.0.2\nUbuntu 13.04\nLinux 3.8.0-35-generic x86_64 \nZeus version 0.13.3.rc2\nruby-1.9.3-p448-perf (installed via rbenv)\nrbenv 0.4.0\n\n```\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0x4735a5]\n\ngoroutine 14 [running]:\ngithub.com/burke/zeus/go/unixsocket.(*Usock).WriteMessage(0x0, 0xf84005ef80, 0x3a5300000009, 0xf84005f160, 0x7, ...)\n /Users/turadg/Code/Go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:81 +0xba\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).bootSlave(0xf84008d410, 0xf84008d4e0, 0x0, 0x5200000001)\n        /Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:274 +0x10e\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doCrashedOrReadyState(0xf84008d410, 0xf800000001, 0x50d7d4, 0x4300000001)\n/Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:247 +0x142\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xf84008d410, 0xf84005e3e0, 0x0, 0x0)\n/Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavenode.go:142 +0x184\ncreated by github.com/burke/zeus/go/processtree._func_001\n/Users/turadg/Code/Go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:52 +0x215\n\ngoroutine 1 [select]:\ngithub.com/burke/zeus/go/zeusmaster.doRun(0x7fc900000000, 0x400e9c)\n        /Users/turadg/Code/Go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:47 +0x377\ngithub.com/burke/zeus/go/zeusmaster.Run()\n        /Users/turadg/Code/Go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:22 +0x1c\nmain.main()\n        /Users/turadg/Code/Go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:40 +0x29c\n\ngoroutine 2 [syscall]:\ncreated by runtime.main\n        /usr/local/Cellar/go/1.0.3/src/pkg/runtime/proc.c:221\n....\n```\n\nAlso , zeus is left running, so here is an strace:\n\n```\nread(0, \"\", 4096)                       = 0\nselect(4, [0 3], NULL, NULL, NULL)      = 1 (in [0])\nread(0, \"\", 4096)                       = 0\nselect(4, [0 3], NULL, NULL, NULL)      = 1 (in [0])\n....\n```\n\n#### `bundle install` didn't help.\n. ",
    "nulty": "This happened due to a syntax error in my code. Maybe that will help someone reading this\n. This happened due to a syntax error in my code. Maybe that will help someone reading this\n. ",
    "neocoin": "Thank you for feedback. You understand exactly. \n\nI agree to support anyone during all methods (kicker, guide, autotest etc..) for very fast testing feedback. I guess all methods supporting is very hard. So I recommend your favorite tool supporting first or only one tool. :\n\nJust as a matter of my rails development information for fast feedback, \n\nconsole -> pry\ntesting -> rspec + autotest(ZenTest)\n\nI'm always ready for changing to any convenient environment for fast feedback.\n\nAt this time, thank you for fast boot rails server. :) \n. Oh.. thank you. \n\nBut I'm sorry. I don't send feed back now. \n\nBecause my zeus has not worked from 3 days ago. \nI don't know why my zeus server show error during development environment loading until now. \n(Also, I review my git history and remove all 'go' runtime in my system and reinstall ruby runtime with rbenv. )\n\nSo sorry, I will not spend time for more testing because of my job. Maybe I'll have time at next Friday.\n\nNow, I paste my runtime error logs. \n\n> (0:4:1)$ zeus start\n> Starting Zeus server\n> [ready] [crashed] [running] [connecting] [waiting]\n> panic: runtime error: invalid memory address or nil pointer dereference\n> [signal 0xb code=0x1 addr=0x0 pc=0x739d0]\n>    \u251c\u2500\u2500 development_environment\n> goroutine 15 [running]:\n> github.com/burke/zeus/go/unixsocket.(_Usock).WriteMessage(0x0, 0xf840051dd0, 0x3a530000000d, 0xf840051430, 0xb, ...)\n>        /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:81 +0xba\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).bootSlave(0xf84006b300, 0xf84006b480, 0x0, 0x5200000001)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:258 +0x10e\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).doCrashedOrReadyState(0xf84006b300, 0x1, 0x10e3e4, 0x4300000001)\n> zeus rak/Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:231 +0x132\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf84006b300, 0xf840051500, 0x0, 0x0)\n> zeus con/Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:127 +0x161\n> created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n> zeus ser/Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n> zeus dbconsole\n> goroutine 1 [chan receive]:\n> github.com/burke/zeus/go/zeusmaster.Run(0x7fff5fbff501, 0x100000005)\n> slavenod/Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:51 +0x372\n> main.main()\n>   /Users/burke/go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:37 +0x2a1\n> \n> goroutine 2 [syscall]:\n> created by runtime.main\n>   /private/tmp/bindist454984655/go/src/pkg/runtime/proc.c:221\n> \n> goroutine 3 [syscall]:\n> os/signal.loop()\n>   /usr/local/go/src/pkg/os/signal/signal_unix.go:20 +0x1c\n> created by os/signal.init\u00b71\n>   /usr/local/go/src/pkg/os/signal/signal_unix.go:26 +0x2f\n> \n> goroutine 4 [select]:\n> github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor(0xf8400431e0, 0xf840001f50, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:48 +0x2fb\n> created by github.com/burke/zeus/go/zeusmaster.Run\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:32 +0x17b\n> \n> goroutine 5 [select]:\n> github.com/burke/zeus/go/zeusmaster.StartClientHandler(0xf8400431e0, 0xf840001fa0, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:42 +0x232\n> created by github.com/burke/zeus/go/zeusmaster.Run\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:33 +0x19f\n> \n> goroutine 6 [select]:\n> github.com/burke/zeus/go/zeusmaster.StartFileMonitor(0xf8400431e0, 0xf84007aa00, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:37 +0x1bf\n> created by github.com/burke/zeus/go/zeusmaster.Run\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:34 +0x1c3\n> \n> goroutine 7 [runnable]:\n> syscall.Syscall()\n>   /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:34 +0x61\n> syscall.Write(0x1, 0xf8400e80b0, 0xac00000057, 0x17070, 0x0, ...)\n>   /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:1114 +0x78\n> os.(_File).write(0xf840058008, 0xf8400e80b0, 0xac00000057, 0x0, 0x0, ...)\n>   /usr/local/go/src/pkg/os/file_unix.go:177 +0x69\n> os.(_File).Write(0xf840058008, 0xf8400e80b0, 0xac00000057, 0xf8401260c0, 0x0, ...)\n>   /usr/local/go/src/pkg/os/file.go:139 +0x83\n> log.(_Logger).Output(0xf84009a098, 0xf800000003, 0xf8401260c0, 0x5200000056, 0x0, ...)\n>   /usr/local/go/src/pkg/log/log.go:153 +0x2e6\n> github.com/burke/zeus/go/shinylog.(_ShinyLogger).colorized(0xf84009a090, 0x3, 0x13ffd4, 0x5c, 0x0, ...)\n>   /Users/burke/go/src/github.com/burke/zeus/go/shinylog/shinylog.go:136 +0x174\n> github.com/burke/zeus/go/shinylog.(_ShinyLogger).Colorized(0xf84009a090, 0x13ffd4, 0x6d345b1b0000005c, 0x100000001, 0x5, ...)\n>   /Users/burke/go/src/github.com/burke/zeus/go/shinylog/shinylog.go:63 +0x48\n> github.com/burke/zeus/go/zeusmaster.(_StatusChart).draw(0xf8400c2000, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:113 +0x12c\n> github.com/burke/zeus/go/zeusmaster.StartStatusChart(0xf8400431e0, 0xf84007aa50, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:68 +0x483\n> created by github.com/burke/zeus/go/zeusmaster.Run\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:35 +0x1e7\n> \n> goroutine 8 [chan receive]:\n> github.com/burke/zeus/go/zeusmaster._func_005(0xf8400581d0, 0xf8400581a8, 0xf8400581b0, 0xf8400581b8, 0xf8400581c0, ...)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:42 +0x31\n> created by github.com/burke/zeus/go/zeusmaster.Run\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:44 +0x314\n> \n> goroutine 9 [chan receive]:\n> github.com/burke/zeus/go/zeusmaster._func_006(0xf8400581a8, 0xf8400581b0, 0xf8400581b8, 0xf8400581c0, 0xf8400581c8, ...)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:47 +0x31\n> created by github.com/burke/zeus/go/zeusmaster.Run\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:49 +0x356\n> \n> goroutine 10 [finalizer wait]:\n> created by runtime.gc\n>   /private/tmp/bindist454984655/go/src/pkg/runtime/mgc0.c:882\n> \n> goroutine 11 [syscall]:\n> created by addtimer\n>   /private/tmp/bindist454984655/go/src/pkg/runtime/ztime_amd64.c:72\n> \n> goroutine 12 [syscall]:\n> syscall.Syscall6()\n>   /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\n> syscall.kevent(0x11, 0x0, 0x0, 0xf84006cd88, 0xa, ...)\n>   /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:199 +0x88\n> syscall.Kevent(0xf800000011, 0x0, 0x0, 0xf84006cd88, 0xa0000000a, ...)\n>   /usr/local/go/src/pkg/syscall/syscall_bsd.go:538 +0xa4\n> net.(_pollster).WaitFD(0xf84006cd80, 0xf840042b40, 0x0, 0x0, 0x0, ...)\n>   /usr/local/go/src/pkg/net/fd_darwin.go:96 +0x185\n> net.(_pollServer).Run(0xf840042b40, 0x0)\n>   /usr/local/go/src/pkg/net/fd.go:236 +0xe4\n> created by net.newPollServer\n>   /usr/local/go/src/pkg/net/newpollserver.go:35 +0x382\n> \n> goroutine 13 [chan receive]:\n> net.(_pollServer).WaitRead(0xf840042b40, 0xf8400655a0, 0xf840043120, 0x23, 0x1, ...)\n>   /usr/local/go/src/pkg/net/fd.go:268 +0x73\n> net.(_netFD).ReadMsg(0xf8400655a0, 0xf84021f400, 0x40000000400, 0xf840222140, 0x2000000020, ...)\n>   /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\n> net.(_UnixConn).ReadMsgUnix(0xf840058468, 0xf84021f400, 0x40000000400, 0xf840222140, 0x2000000020, ...)\n>   /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\n> github.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf84008dc00, 0x0, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\n> github.com/burke/zeus/go/unixsocket.(*Usock).ReadFD(0xf84008dc00, 0xf800000000, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:109 +0xaa\n> github.com/burke/zeus/go/zeusmaster._func_004(0xf8400581f0, 0xf840058470, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:35 +0x28\n> created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:41 +0x195\n> \n> goroutine 14 [select]:\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).doCrashedOrReadyState(0xf84006b0c0, 0x1, 0x10e954, 0x5200000001)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x274\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf84006b0c0, 0xf840051500, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:129 +0x208\n> created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n> \n> goroutine 16 [chan receive]:\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).doUnbootedState(0xf84006b480, 0xf840051500, 0x0, 0x5500000000, 0x0, ...)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:169 +0x3c7\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf84006b480, 0xf840051500, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:123 +0x271\n> created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n> \n> goroutine 17 [chan receive]:\n> net.(_pollServer).WaitRead(0xf840042b40, 0xf840143bd0, 0xf840043120, 0x23, 0x1, ...)\n>   /usr/local/go/src/pkg/net/fd.go:268 +0x73\n> net.(_netFD).ReadMsg(0xf840143bd0, 0xf840220800, 0x40000000400, 0xf8401da380, 0x2000000020, ...)\n>   /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\n> net.(_UnixConn).ReadMsgUnix(0xf840058630, 0xf840220800, 0x40000000400, 0xf8401da380, 0x2000000020, ...)\n>   /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\n> github.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf8401ebe40, 0x0, 0x0, 0x10eb4)\n>   /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\n> github.com/burke/zeus/go/unixsocket.(_Usock).ReadMessage(0xf8401ebe40, 0x0, 0xf800000000, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xc5\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).doBootingState(0xf84006b180, 0x0, 0x0, 0x4200000001)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:185 +0x43\n> github.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf84006b180, 0xf840051500, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:125 +0x10b\n> created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n> \n> goroutine 18 [select]:\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).doCrashedOrReadyState(0xf84006b000, 0x1, 0x10e954, 0x5200000001)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x274\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf84006b000, 0xf840051500, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:129 +0x208\n> created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n> \n> goroutine 19 [semacquire]:\n> sync.runtime_Semacquire(0xf840058cd8, 0xf840058cd8)\n>   /private/tmp/bindist454984655/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\n> sync.(_Cond).Wait(0xf840042800, 0xf800000001)\n>   /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).WaitUntilReadyOrCrashed(0xf84006b180, 0x301b1)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:64 +0x133\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).doWaitingState(0xf84006b240, 0x1, 0x10eb44, 0x5700000001)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:148 +0x51\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf84006b240, 0xf840051500, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:121 +0x2cf\n> created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n> \n> goroutine 20 [chan receive]:\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).doUnbootedState(0xf84006b3c0, 0xf840051500, 0x0, 0x5500000000, 0x0, ...)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:169 +0x3c7\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf84006b3c0, 0xf840051500, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:123 +0x271\n> created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n> \n> goroutine 21 [chan receive]:\n> net.(_pollServer).WaitRead(0xf840042b40, 0xf840065630, 0xf840043120, 0x23, 0x1, ...)\n>   /usr/local/go/src/pkg/net/fd.go:268 +0x73\n> net.(_netFD).accept(0xf840065630, 0x6c0c6, 0x0, 0xf840045b40, 0xf840058040, ...)\n>   /usr/local/go/src/pkg/net/fd.go:622 +0x20d\n> net.(*UnixListener).AcceptUnix(0xf840044e00, 0x0, 0x0, 0x0)\n>   /usr/local/go/src/pkg/net/unixsock_posix.go:350 +0x4d\n> github.com/burke/zeus/go/zeusmaster._func_001(0xf840058050, 0xf840058570, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:32 +0x28\n> created by github.com/burke/zeus/go/zeusmaster.StartClientHandler\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:39 +0x15a\n> \n> goroutine 22 [syscall]:\n> syscall.Syscall6()\n>   /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\n> syscall.wait4(0x11441, 0xf840058598, 0x0, 0xf84009af30, 0x1, ...)\n>   /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:32 +0x81\n> syscall.Wait4(0x11441, 0x228cd8c, 0x0, 0xf84009af30, 0x89735, ...)\n>   /usr/local/go/src/pkg/syscall/syscall_bsd.go:136 +0x6a\n> os.(_Process).wait(0xf840044e60, 0xf840058160, 0x0, 0x0, 0x899d7, ...)\n>   /usr/local/go/src/pkg/os/exec_unix.go:22 +0xe1\n> os.(_Process).Wait(0xf840044e60, 0x0, 0x0, 0x228ce60)\n>   /usr/local/go/src/pkg/os/doc.go:43 +0x25\n> os/exec.(_Cmd).Wait(0xf840084f00, 0x0, 0x0, 0x0)\n>   /usr/local/go/src/pkg/os/exec/exec.go:302 +0x1b7\n> os/exec.(_Cmd).Run(0xf840084f00, 0xe2e70, 0xf8400ef300, 0xf840046f90)\n>   /usr/local/go/src/pkg/os/exec/exec.go:226 +0x6d\n> os/exec.(_Cmd).CombinedOutput(0xf840084f00, 0x0, 0x0, 0x0)\n>   /usr/local/go/src/pkg/os/exec/exec.go:346 +0x246\n> github.com/burke/zeus/go/zeusmaster.babysitRootProcess(0xf840084f00, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:328 +0x25\n> created by github.com/burke/zeus/go/zeusmaster.(_SlaveNode).doUnbootedState\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:164 +0x38b\n> \n> goroutine 23 [syscall]:\n> syscall.Syscall()\n>   /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:14 +0x5\n> syscall.Read(0x230000000b, 0xf8400f3000, 0x80000000800, 0x100000001, 0x0, ...)\n>   /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:810 +0x78\n> os.(_File).read(0xf8400583a0, 0xf8400f3000, 0x80000000800, 0x80000000800, 0x0, ...)\n>   /usr/local/go/src/pkg/os/file_unix.go:163 +0x58\n> os.(_File).Read(0xf8400583a0, 0xf8400f3000, 0x80000000800, 0xf8400f3000, 0x0, ...)\n>   /usr/local/go/src/pkg/os/file.go:95 +0x83\n> github.com/burke/zeus/go/zeusmaster._func_002()\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:80 +0x84\n> created by github.com/burke/zeus/go/zeusmaster.startWrapper\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:90 +0x207\n> \n> goroutine 24 [syscall]:\n> syscall.Syscall6()\n>   /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\n> syscall.wait4(0x11440, 0xf8400584d0, 0x0, 0xf840065750, 0x1, ...)\n>   /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:32 +0x81\n> syscall.Wait4(0x11440, 0x226ce64, 0x0, 0xf840065750, 0x0, ...)\n>   /usr/local/go/src/pkg/syscall/syscall_bsd.go:136 +0x6a\n> os.(_Process).wait(0xf8400e9020, 0x0, 0x0, 0x0, 0x899d7, ...)\n>   /usr/local/go/src/pkg/os/exec_unix.go:22 +0xe1\n> os.(_Process).Wait(0xf8400e9020, 0x0, 0x0, 0x0)\n>   /usr/local/go/src/pkg/os/doc.go:43 +0x25\n> os/exec.(*Cmd).Wait(0xf840084000, 0x0, 0x0, 0x108dd)\n>   /usr/local/go/src/pkg/os/exec/exec.go:302 +0x1b7\n> github.com/burke/zeus/go/zeusmaster._func_003(0xf840058208, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:93 +0x29\n> created by github.com/burke/zeus/go/zeusmaster.startWrapper\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:95 +0x21e\n> \n> goroutine 25 [syscall]:\n> syscall.Syscall()\n>   /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:14 +0x5\n> syscall.Read(0x7, 0xf840363582, 0xf87e0000f87e, 0xa6, 0x0, ...)\n>   /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:810 +0x78\n> os.(_File).read(0xf840058170, 0xf840363582, 0xf87e0000f87e, 0xa6, 0x0, ...)\n>   /usr/local/go/src/pkg/os/file_unix.go:163 +0x58\n> os.(_File).Read(0xf840058170, 0xf840363582, 0xf87e0000f87e, 0x3fe00000000a6, 0x0, ...)\n>   /usr/local/go/src/pkg/os/file.go:95 +0x83\n> bytes.(_Buffer).ReadFrom(0xf8400ef300, 0xf840043150, 0xf840058170, 0x70582, 0x0, ...)\n>   /usr/local/go/src/pkg/bytes/buffer.go:153 +0x199\n> io.Copy(0xf840046f90, 0xf8400ef300, 0xf840043150, 0xf840058170, 0x0, ...)\n>   /usr/local/go/src/pkg/io/io.go:340 +0xc2\n> os/exec._func_003(0xf8400516c0, 0xf8400584c8, 0x8b794, 0x0, 0x0, ...)\n>   /usr/local/go/src/pkg/os/exec/exec.go:201 +0x5a\n> os/exec._func_004(0xf8400584a8, 0xf840042b80, 0x0, 0x0)\n>   /usr/local/go/src/pkg/os/exec/exec.go:268 +0x1e\n> created by os/exec.(_Cmd).Start\n>   /usr/local/go/src/pkg/os/exec/exec.go:269 +0x65c\n> \n> goroutine 27 [chan receive]:\n> net.(_pollServer).WaitRead(0xf840042b40, 0xf840121000, 0xf840043120, 0x23, 0x1, ...)\n>   /usr/local/go/src/pkg/net/fd.go:268 +0x73\n> net.(_netFD).ReadMsg(0xf840121000, 0xf84010f400, 0x40000000400, 0xf840112fc0, 0x2000000020, ...)\n>   /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\n> net.(_UnixConn).ReadMsgUnix(0xf840058780, 0xf84010f400, 0x40000000400, 0xf840112fc0, 0x2000000020, ...)\n>   /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\n> github.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf840123000, 0x0, 0x0, 0xf840111070)\n>   /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\n> github.com/burke/zeus/go/unixsocket.(_Usock).ReadMessage(0xf840123000, 0x0, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xc5\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).handleMessages(0xf84006b000, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:343 +0x29\n> created by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x9b\n> \n> goroutine 410 [chan receive]:\n> net.(_pollServer).WaitRead(0xf840042b40, 0xf84017cea0, 0xf840043120, 0x23, 0x1, ...)\n>   /usr/local/go/src/pkg/net/fd.go:268 +0x73\n> net.(_netFD).ReadMsg(0xf84017cea0, 0xf840191000, 0x40000000400, 0xf84020dd80, 0x2000000020, ...)\n>   /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\n> net.(_UnixConn).ReadMsgUnix(0xf840058248, 0xf840191000, 0x40000000400, 0xf84020dd80, 0x2000000020, ...)\n>   /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\n> github.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf840123e00, 0x0, 0x0, 0xf8401e55db)\n>   /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\n> github.com/burke/zeus/go/unixsocket.(_Usock).ReadMessage(0xf840123e00, 0x0, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xc5\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).handleMessages(0xf84006b0c0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:343 +0x29\n> created by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x9b\n. Thank you for feedback. You understand exactly. \n\nI agree to support anyone during all methods (kicker, guide, autotest etc..) for very fast testing feedback. I guess all methods supporting is very hard. So I recommend your favorite tool supporting first or only one tool. :\n\nJust as a matter of my rails development information for fast feedback, \n\nconsole -> pry\ntesting -> rspec + autotest(ZenTest)\n\nI'm always ready for changing to any convenient environment for fast feedback.\n\nAt this time, thank you for fast boot rails server. :) \n. Oh.. thank you. \n\nBut I'm sorry. I don't send feed back now. \n\nBecause my zeus has not worked from 3 days ago. \nI don't know why my zeus server show error during development environment loading until now. \n(Also, I review my git history and remove all 'go' runtime in my system and reinstall ruby runtime with rbenv. )\n\nSo sorry, I will not spend time for more testing because of my job. Maybe I'll have time at next Friday.\n\nNow, I paste my runtime error logs. \n\n> (0:4:1)$ zeus start\n> Starting Zeus server\n> [ready] [crashed] [running] [connecting] [waiting]\n> panic: runtime error: invalid memory address or nil pointer dereference\n> [signal 0xb code=0x1 addr=0x0 pc=0x739d0]\n>    \u251c\u2500\u2500 development_environment\n> goroutine 15 [running]:\n> github.com/burke/zeus/go/unixsocket.(_Usock).WriteMessage(0x0, 0xf840051dd0, 0x3a530000000d, 0xf840051430, 0xb, ...)\n>        /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:81 +0xba\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).bootSlave(0xf84006b300, 0xf84006b480, 0x0, 0x5200000001)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:258 +0x10e\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).doCrashedOrReadyState(0xf84006b300, 0x1, 0x10e3e4, 0x4300000001)\n> zeus rak/Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:231 +0x132\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf84006b300, 0xf840051500, 0x0, 0x0)\n> zeus con/Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:127 +0x161\n> created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n> zeus ser/Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n> zeus dbconsole\n> goroutine 1 [chan receive]:\n> github.com/burke/zeus/go/zeusmaster.Run(0x7fff5fbff501, 0x100000005)\n> slavenod/Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:51 +0x372\n> main.main()\n>   /Users/burke/go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:37 +0x2a1\n> \n> goroutine 2 [syscall]:\n> created by runtime.main\n>   /private/tmp/bindist454984655/go/src/pkg/runtime/proc.c:221\n> \n> goroutine 3 [syscall]:\n> os/signal.loop()\n>   /usr/local/go/src/pkg/os/signal/signal_unix.go:20 +0x1c\n> created by os/signal.init\u00b71\n>   /usr/local/go/src/pkg/os/signal/signal_unix.go:26 +0x2f\n> \n> goroutine 4 [select]:\n> github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor(0xf8400431e0, 0xf840001f50, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:48 +0x2fb\n> created by github.com/burke/zeus/go/zeusmaster.Run\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:32 +0x17b\n> \n> goroutine 5 [select]:\n> github.com/burke/zeus/go/zeusmaster.StartClientHandler(0xf8400431e0, 0xf840001fa0, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:42 +0x232\n> created by github.com/burke/zeus/go/zeusmaster.Run\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:33 +0x19f\n> \n> goroutine 6 [select]:\n> github.com/burke/zeus/go/zeusmaster.StartFileMonitor(0xf8400431e0, 0xf84007aa00, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:37 +0x1bf\n> created by github.com/burke/zeus/go/zeusmaster.Run\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:34 +0x1c3\n> \n> goroutine 7 [runnable]:\n> syscall.Syscall()\n>   /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:34 +0x61\n> syscall.Write(0x1, 0xf8400e80b0, 0xac00000057, 0x17070, 0x0, ...)\n>   /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:1114 +0x78\n> os.(_File).write(0xf840058008, 0xf8400e80b0, 0xac00000057, 0x0, 0x0, ...)\n>   /usr/local/go/src/pkg/os/file_unix.go:177 +0x69\n> os.(_File).Write(0xf840058008, 0xf8400e80b0, 0xac00000057, 0xf8401260c0, 0x0, ...)\n>   /usr/local/go/src/pkg/os/file.go:139 +0x83\n> log.(_Logger).Output(0xf84009a098, 0xf800000003, 0xf8401260c0, 0x5200000056, 0x0, ...)\n>   /usr/local/go/src/pkg/log/log.go:153 +0x2e6\n> github.com/burke/zeus/go/shinylog.(_ShinyLogger).colorized(0xf84009a090, 0x3, 0x13ffd4, 0x5c, 0x0, ...)\n>   /Users/burke/go/src/github.com/burke/zeus/go/shinylog/shinylog.go:136 +0x174\n> github.com/burke/zeus/go/shinylog.(_ShinyLogger).Colorized(0xf84009a090, 0x13ffd4, 0x6d345b1b0000005c, 0x100000001, 0x5, ...)\n>   /Users/burke/go/src/github.com/burke/zeus/go/shinylog/shinylog.go:63 +0x48\n> github.com/burke/zeus/go/zeusmaster.(_StatusChart).draw(0xf8400c2000, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:113 +0x12c\n> github.com/burke/zeus/go/zeusmaster.StartStatusChart(0xf8400431e0, 0xf84007aa50, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:68 +0x483\n> created by github.com/burke/zeus/go/zeusmaster.Run\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:35 +0x1e7\n> \n> goroutine 8 [chan receive]:\n> github.com/burke/zeus/go/zeusmaster._func_005(0xf8400581d0, 0xf8400581a8, 0xf8400581b0, 0xf8400581b8, 0xf8400581c0, ...)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:42 +0x31\n> created by github.com/burke/zeus/go/zeusmaster.Run\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:44 +0x314\n> \n> goroutine 9 [chan receive]:\n> github.com/burke/zeus/go/zeusmaster._func_006(0xf8400581a8, 0xf8400581b0, 0xf8400581b8, 0xf8400581c0, 0xf8400581c8, ...)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:47 +0x31\n> created by github.com/burke/zeus/go/zeusmaster.Run\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:49 +0x356\n> \n> goroutine 10 [finalizer wait]:\n> created by runtime.gc\n>   /private/tmp/bindist454984655/go/src/pkg/runtime/mgc0.c:882\n> \n> goroutine 11 [syscall]:\n> created by addtimer\n>   /private/tmp/bindist454984655/go/src/pkg/runtime/ztime_amd64.c:72\n> \n> goroutine 12 [syscall]:\n> syscall.Syscall6()\n>   /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\n> syscall.kevent(0x11, 0x0, 0x0, 0xf84006cd88, 0xa, ...)\n>   /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:199 +0x88\n> syscall.Kevent(0xf800000011, 0x0, 0x0, 0xf84006cd88, 0xa0000000a, ...)\n>   /usr/local/go/src/pkg/syscall/syscall_bsd.go:538 +0xa4\n> net.(_pollster).WaitFD(0xf84006cd80, 0xf840042b40, 0x0, 0x0, 0x0, ...)\n>   /usr/local/go/src/pkg/net/fd_darwin.go:96 +0x185\n> net.(_pollServer).Run(0xf840042b40, 0x0)\n>   /usr/local/go/src/pkg/net/fd.go:236 +0xe4\n> created by net.newPollServer\n>   /usr/local/go/src/pkg/net/newpollserver.go:35 +0x382\n> \n> goroutine 13 [chan receive]:\n> net.(_pollServer).WaitRead(0xf840042b40, 0xf8400655a0, 0xf840043120, 0x23, 0x1, ...)\n>   /usr/local/go/src/pkg/net/fd.go:268 +0x73\n> net.(_netFD).ReadMsg(0xf8400655a0, 0xf84021f400, 0x40000000400, 0xf840222140, 0x2000000020, ...)\n>   /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\n> net.(_UnixConn).ReadMsgUnix(0xf840058468, 0xf84021f400, 0x40000000400, 0xf840222140, 0x2000000020, ...)\n>   /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\n> github.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf84008dc00, 0x0, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\n> github.com/burke/zeus/go/unixsocket.(*Usock).ReadFD(0xf84008dc00, 0xf800000000, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:109 +0xaa\n> github.com/burke/zeus/go/zeusmaster._func_004(0xf8400581f0, 0xf840058470, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:35 +0x28\n> created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:41 +0x195\n> \n> goroutine 14 [select]:\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).doCrashedOrReadyState(0xf84006b0c0, 0x1, 0x10e954, 0x5200000001)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x274\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf84006b0c0, 0xf840051500, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:129 +0x208\n> created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n> \n> goroutine 16 [chan receive]:\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).doUnbootedState(0xf84006b480, 0xf840051500, 0x0, 0x5500000000, 0x0, ...)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:169 +0x3c7\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf84006b480, 0xf840051500, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:123 +0x271\n> created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n> \n> goroutine 17 [chan receive]:\n> net.(_pollServer).WaitRead(0xf840042b40, 0xf840143bd0, 0xf840043120, 0x23, 0x1, ...)\n>   /usr/local/go/src/pkg/net/fd.go:268 +0x73\n> net.(_netFD).ReadMsg(0xf840143bd0, 0xf840220800, 0x40000000400, 0xf8401da380, 0x2000000020, ...)\n>   /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\n> net.(_UnixConn).ReadMsgUnix(0xf840058630, 0xf840220800, 0x40000000400, 0xf8401da380, 0x2000000020, ...)\n>   /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\n> github.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf8401ebe40, 0x0, 0x0, 0x10eb4)\n>   /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\n> github.com/burke/zeus/go/unixsocket.(_Usock).ReadMessage(0xf8401ebe40, 0x0, 0xf800000000, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xc5\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).doBootingState(0xf84006b180, 0x0, 0x0, 0x4200000001)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:185 +0x43\n> github.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf84006b180, 0xf840051500, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:125 +0x10b\n> created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n> \n> goroutine 18 [select]:\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).doCrashedOrReadyState(0xf84006b000, 0x1, 0x10e954, 0x5200000001)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x274\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf84006b000, 0xf840051500, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:129 +0x208\n> created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n> \n> goroutine 19 [semacquire]:\n> sync.runtime_Semacquire(0xf840058cd8, 0xf840058cd8)\n>   /private/tmp/bindist454984655/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\n> sync.(_Cond).Wait(0xf840042800, 0xf800000001)\n>   /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).WaitUntilReadyOrCrashed(0xf84006b180, 0x301b1)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:64 +0x133\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).doWaitingState(0xf84006b240, 0x1, 0x10eb44, 0x5700000001)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:148 +0x51\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf84006b240, 0xf840051500, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:121 +0x2cf\n> created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n> \n> goroutine 20 [chan receive]:\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).doUnbootedState(0xf84006b3c0, 0xf840051500, 0x0, 0x5500000000, 0x0, ...)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:169 +0x3c7\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf84006b3c0, 0xf840051500, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:123 +0x271\n> created by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n> \n> goroutine 21 [chan receive]:\n> net.(_pollServer).WaitRead(0xf840042b40, 0xf840065630, 0xf840043120, 0x23, 0x1, ...)\n>   /usr/local/go/src/pkg/net/fd.go:268 +0x73\n> net.(_netFD).accept(0xf840065630, 0x6c0c6, 0x0, 0xf840045b40, 0xf840058040, ...)\n>   /usr/local/go/src/pkg/net/fd.go:622 +0x20d\n> net.(*UnixListener).AcceptUnix(0xf840044e00, 0x0, 0x0, 0x0)\n>   /usr/local/go/src/pkg/net/unixsock_posix.go:350 +0x4d\n> github.com/burke/zeus/go/zeusmaster._func_001(0xf840058050, 0xf840058570, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:32 +0x28\n> created by github.com/burke/zeus/go/zeusmaster.StartClientHandler\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:39 +0x15a\n> \n> goroutine 22 [syscall]:\n> syscall.Syscall6()\n>   /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\n> syscall.wait4(0x11441, 0xf840058598, 0x0, 0xf84009af30, 0x1, ...)\n>   /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:32 +0x81\n> syscall.Wait4(0x11441, 0x228cd8c, 0x0, 0xf84009af30, 0x89735, ...)\n>   /usr/local/go/src/pkg/syscall/syscall_bsd.go:136 +0x6a\n> os.(_Process).wait(0xf840044e60, 0xf840058160, 0x0, 0x0, 0x899d7, ...)\n>   /usr/local/go/src/pkg/os/exec_unix.go:22 +0xe1\n> os.(_Process).Wait(0xf840044e60, 0x0, 0x0, 0x228ce60)\n>   /usr/local/go/src/pkg/os/doc.go:43 +0x25\n> os/exec.(_Cmd).Wait(0xf840084f00, 0x0, 0x0, 0x0)\n>   /usr/local/go/src/pkg/os/exec/exec.go:302 +0x1b7\n> os/exec.(_Cmd).Run(0xf840084f00, 0xe2e70, 0xf8400ef300, 0xf840046f90)\n>   /usr/local/go/src/pkg/os/exec/exec.go:226 +0x6d\n> os/exec.(_Cmd).CombinedOutput(0xf840084f00, 0x0, 0x0, 0x0)\n>   /usr/local/go/src/pkg/os/exec/exec.go:346 +0x246\n> github.com/burke/zeus/go/zeusmaster.babysitRootProcess(0xf840084f00, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:328 +0x25\n> created by github.com/burke/zeus/go/zeusmaster.(_SlaveNode).doUnbootedState\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:164 +0x38b\n> \n> goroutine 23 [syscall]:\n> syscall.Syscall()\n>   /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:14 +0x5\n> syscall.Read(0x230000000b, 0xf8400f3000, 0x80000000800, 0x100000001, 0x0, ...)\n>   /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:810 +0x78\n> os.(_File).read(0xf8400583a0, 0xf8400f3000, 0x80000000800, 0x80000000800, 0x0, ...)\n>   /usr/local/go/src/pkg/os/file_unix.go:163 +0x58\n> os.(_File).Read(0xf8400583a0, 0xf8400f3000, 0x80000000800, 0xf8400f3000, 0x0, ...)\n>   /usr/local/go/src/pkg/os/file.go:95 +0x83\n> github.com/burke/zeus/go/zeusmaster._func_002()\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:80 +0x84\n> created by github.com/burke/zeus/go/zeusmaster.startWrapper\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:90 +0x207\n> \n> goroutine 24 [syscall]:\n> syscall.Syscall6()\n>   /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:38 +0x5\n> syscall.wait4(0x11440, 0xf8400584d0, 0x0, 0xf840065750, 0x1, ...)\n>   /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:32 +0x81\n> syscall.Wait4(0x11440, 0x226ce64, 0x0, 0xf840065750, 0x0, ...)\n>   /usr/local/go/src/pkg/syscall/syscall_bsd.go:136 +0x6a\n> os.(_Process).wait(0xf8400e9020, 0x0, 0x0, 0x0, 0x899d7, ...)\n>   /usr/local/go/src/pkg/os/exec_unix.go:22 +0xe1\n> os.(_Process).Wait(0xf8400e9020, 0x0, 0x0, 0x0)\n>   /usr/local/go/src/pkg/os/doc.go:43 +0x25\n> os/exec.(*Cmd).Wait(0xf840084000, 0x0, 0x0, 0x108dd)\n>   /usr/local/go/src/pkg/os/exec/exec.go:302 +0x1b7\n> github.com/burke/zeus/go/zeusmaster._func_003(0xf840058208, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:93 +0x29\n> created by github.com/burke/zeus/go/zeusmaster.startWrapper\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:95 +0x21e\n> \n> goroutine 25 [syscall]:\n> syscall.Syscall()\n>   /private/tmp/bindist454984655/go/src/pkg/syscall/asm_darwin_amd64.s:14 +0x5\n> syscall.Read(0x7, 0xf840363582, 0xf87e0000f87e, 0xa6, 0x0, ...)\n>   /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:810 +0x78\n> os.(_File).read(0xf840058170, 0xf840363582, 0xf87e0000f87e, 0xa6, 0x0, ...)\n>   /usr/local/go/src/pkg/os/file_unix.go:163 +0x58\n> os.(_File).Read(0xf840058170, 0xf840363582, 0xf87e0000f87e, 0x3fe00000000a6, 0x0, ...)\n>   /usr/local/go/src/pkg/os/file.go:95 +0x83\n> bytes.(_Buffer).ReadFrom(0xf8400ef300, 0xf840043150, 0xf840058170, 0x70582, 0x0, ...)\n>   /usr/local/go/src/pkg/bytes/buffer.go:153 +0x199\n> io.Copy(0xf840046f90, 0xf8400ef300, 0xf840043150, 0xf840058170, 0x0, ...)\n>   /usr/local/go/src/pkg/io/io.go:340 +0xc2\n> os/exec._func_003(0xf8400516c0, 0xf8400584c8, 0x8b794, 0x0, 0x0, ...)\n>   /usr/local/go/src/pkg/os/exec/exec.go:201 +0x5a\n> os/exec._func_004(0xf8400584a8, 0xf840042b80, 0x0, 0x0)\n>   /usr/local/go/src/pkg/os/exec/exec.go:268 +0x1e\n> created by os/exec.(_Cmd).Start\n>   /usr/local/go/src/pkg/os/exec/exec.go:269 +0x65c\n> \n> goroutine 27 [chan receive]:\n> net.(_pollServer).WaitRead(0xf840042b40, 0xf840121000, 0xf840043120, 0x23, 0x1, ...)\n>   /usr/local/go/src/pkg/net/fd.go:268 +0x73\n> net.(_netFD).ReadMsg(0xf840121000, 0xf84010f400, 0x40000000400, 0xf840112fc0, 0x2000000020, ...)\n>   /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\n> net.(_UnixConn).ReadMsgUnix(0xf840058780, 0xf84010f400, 0x40000000400, 0xf840112fc0, 0x2000000020, ...)\n>   /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\n> github.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf840123000, 0x0, 0x0, 0xf840111070)\n>   /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\n> github.com/burke/zeus/go/unixsocket.(_Usock).ReadMessage(0xf840123000, 0x0, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xc5\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).handleMessages(0xf84006b000, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:343 +0x29\n> created by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x9b\n> \n> goroutine 410 [chan receive]:\n> net.(_pollServer).WaitRead(0xf840042b40, 0xf84017cea0, 0xf840043120, 0x23, 0x1, ...)\n>   /usr/local/go/src/pkg/net/fd.go:268 +0x73\n> net.(_netFD).ReadMsg(0xf84017cea0, 0xf840191000, 0x40000000400, 0xf84020dd80, 0x2000000020, ...)\n>   /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\n> net.(_UnixConn).ReadMsgUnix(0xf840058248, 0xf840191000, 0x40000000400, 0xf84020dd80, 0x2000000020, ...)\n>   /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\n> github.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf840123e00, 0x0, 0x0, 0xf8401e55db)\n>   /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\n> github.com/burke/zeus/go/unixsocket.(_Usock).ReadMessage(0xf840123e00, 0x0, 0x0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xc5\n> github.com/burke/zeus/go/zeusmaster.(_SlaveNode).handleMessages(0xf84006b0c0, 0x0)\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:343 +0x29\n> created by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState\n>   /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x9b\n. ",
    "blowmage": ":+1: for supporting autotest.\n. [minitest-rails](https://github.com/blowmage/minitest-rails) requires \"minitest/autorun\". Would it help if we remove the require?\n. Does [this commit](https://github.com/blowmage/minitest-rails/commit/cc52a6d28073d81466d32d313c15ec3dd6de0ccb) help at all?\n. Where are you seeing Rails require minitest/autorun? That loads the spec DSL and Rails has been very careful not to do that. \n. Gotcha. This seems like a decent compromise. Interested to know what @zenspider thinks.\n. :+1: for supporting autotest.\n. [minitest-rails](https://github.com/blowmage/minitest-rails) requires \"minitest/autorun\". Would it help if we remove the require?\n. Does [this commit](https://github.com/blowmage/minitest-rails/commit/cc52a6d28073d81466d32d313c15ec3dd6de0ccb) help at all?\n. Where are you seeing Rails require minitest/autorun? That loads the spec DSL and Rails has been very careful not to do that. \n. Gotcha. This seems like a decent compromise. Interested to know what @zenspider thinks.\n. ",
    "jcf": "For those who having problems with this now, I've added working cucumber methods to my subclass of `Zeus::Rails`.\n\n``` ruby\nrequire 'zeus/rails'\n\nclass ExtendedZeusPlan < Zeus::Rails\n  def dbconsole\n    require 'rails/commands/dbconsole'\n\n    meth = Rails::DBConsole.method(:start)\n\n    # `Rails::DBConsole.start` has been changed to load faster in \n    # https://github.com/rails/rails/commit/346bb018499cde6699fcce6c68dd7e9be45c75e1\n    #\n    # This will work with both versions.\n    if meth.arity.zero?\n      Rails::DBConsole.start\n    else\n      Rails::DBConsole.start(Rails.application)\n    end\n  end\n\n  def cucumber_environment\n    require 'cucumber/rspec/disable_option_parser'\n    require 'cucumber/cli/main'\n    @cucumber_runtime = Cucumber::Runtime.new\n  end\n\n  def cucumber\n    cucumber_main = Cucumber::Cli::Main.new(ARGV.dup)\n    exit cucumber_main.execute!(@cucumber_runtime)\n  end\nend\n\nZeus.plan = ExtendedZeusPlan.new\n```\n. This is a dupe of #105 which was submitted about half an hour before this PR. :smile:\n. For those who having problems with this now, I've added working cucumber methods to my subclass of `Zeus::Rails`.\n\n``` ruby\nrequire 'zeus/rails'\n\nclass ExtendedZeusPlan < Zeus::Rails\n  def dbconsole\n    require 'rails/commands/dbconsole'\n\n    meth = Rails::DBConsole.method(:start)\n\n    # `Rails::DBConsole.start` has been changed to load faster in \n    # https://github.com/rails/rails/commit/346bb018499cde6699fcce6c68dd7e9be45c75e1\n    #\n    # This will work with both versions.\n    if meth.arity.zero?\n      Rails::DBConsole.start\n    else\n      Rails::DBConsole.start(Rails.application)\n    end\n  end\n\n  def cucumber_environment\n    require 'cucumber/rspec/disable_option_parser'\n    require 'cucumber/cli/main'\n    @cucumber_runtime = Cucumber::Runtime.new\n  end\n\n  def cucumber\n    cucumber_main = Cucumber::Cli::Main.new(ARGV.dup)\n    exit cucumber_main.execute!(@cucumber_runtime)\n  end\nend\n\nZeus.plan = ExtendedZeusPlan.new\n```\n. This is a dupe of #105 which was submitted about half an hour before this PR. :smile:\n. ",
    "grzlus": "I think, that FreeBSD has inotify - http://tinyurl.com/9umhvf9\n\nI'm 99% sure that source could be compiled without any modification.\n. I think, that FreeBSD has inotify - http://tinyurl.com/9umhvf9\n\nI'm 99% sure that source could be compiled without any modification.\n. ",
    "graudeejs": "Perhaps http://www.freshports.org/devel/libinotify/ would work.\nLast commit says it's broken on FreeBSD 10 (which is under development) though\n. BTW. when I \n\n```\ngem install zeus\n```\n\n it says\n\nZeus is not supported on your platform.\nIt's not likely to ever be possible on Windows.\n. Perhaps http://www.freshports.org/devel/libinotify/ would work.\nLast commit says it's broken on FreeBSD 10 (which is under development) though\n. BTW. when I \n\n```\ngem install zeus\n```\n\n it says\n\nZeus is not supported on your platform.\nIt's not likely to ever be possible on Windows.\n. ",
    "p": "Can you give some pointers for what is needed for freebsd to work?\n. Can you give some pointers for what is needed for freebsd to work?\n. ",
    "restebanez": "Cool!, thanks @burke \n. unfortunately it still does:\n\n```\n[medistrano] zeus start                 12:44:09  \u2601  feature/consume-kraken \u2602 \u272d\nStarting Zeus server\nready   : boot\nready   : default_bundle\nready   : development_environment\nready   : prerake\nEOF\nWrong message type! Expected ActionResponseMessage, got: \nready   : test_environment\ndied    : test_environment\n^C%                                                                             \n[medistrano] zeus --version             12:44:53  \u2601  feature/consume-kraken \u2602 \u272d\nZeus version 0.11.2\n[medistrano] ruby -v                    12:45:02  \u2601  feature/consume-kraken \u2602 \u272d\nruby 1.9.3p194 (2012-04-20 revision 35410) [x86_64-darwin11.4.0]\n```\n. wow, big changes! however I get the same error as before\n\n```\n\n[medistrano] zeus init            22:48:04  \u2601  feature/rds-parameter-groups \u2602 \u272d\nWrote zeus.json\n[medistrano] zeus start           22:48:12  \u2601  feature/rds-parameter-groups \u2602 \u272d\nStarting Zeus server\n[waiting]    test_environment\n[waiting]    prerake\n[waiting]    cucumber_environment\n[waiting]    boot\n[waiting]    default_bundle\n[waiting]    development_environment\n[waiting]    test_helper\n[running]    boot\n[ready]      boot\n[running]    default_bundle\n[ready]      default_bundle\n[running]    test_environment\n[running]    development_environment\n[ready]      development_environment\n[running]    prerake\n[ready]      prerake\nslavenode.go:187: EOF\nslavenode.go:195: [test_environment] Wrong message type! Expected ActionResponseMessage, got: \n[crashed]    test_environment\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0x723b5]\n\ngoroutine 12 [running]:\ngithub.com/burke/zeus/go/unixsocket.(*Usock).WriteMessage(0x0, 0xf8402565a0, 0x3a5300000016, 0xf840044120, 0x14, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:81 +0xba\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).bootSlave(0xf84006d240, 0xf84006d300, 0x0, 0x5200000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:258 +0x10e\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState(0xf84006d240, 0x1, 0x10b90c, 0x4300000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:231 +0x132\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf84006d240, 0xf840052500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:127 +0x161\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 1 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster.Run(0x7fff5fbff601, 0x100000005)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:49 +0x2e8\n```\n. Cool!, thanks @burke \n. unfortunately it still does:\n\n```\n[medistrano] zeus start                 12:44:09  \u2601  feature/consume-kraken \u2602 \u272d\nStarting Zeus server\nready   : boot\nready   : default_bundle\nready   : development_environment\nready   : prerake\nEOF\nWrong message type! Expected ActionResponseMessage, got: \nready   : test_environment\ndied    : test_environment\n^C%                                                                             \n[medistrano] zeus --version             12:44:53  \u2601  feature/consume-kraken \u2602 \u272d\nZeus version 0.11.2\n[medistrano] ruby -v                    12:45:02  \u2601  feature/consume-kraken \u2602 \u272d\nruby 1.9.3p194 (2012-04-20 revision 35410) [x86_64-darwin11.4.0]\n```\n. wow, big changes! however I get the same error as before\n\n```\n\n[medistrano] zeus init            22:48:04  \u2601  feature/rds-parameter-groups \u2602 \u272d\nWrote zeus.json\n[medistrano] zeus start           22:48:12  \u2601  feature/rds-parameter-groups \u2602 \u272d\nStarting Zeus server\n[waiting]    test_environment\n[waiting]    prerake\n[waiting]    cucumber_environment\n[waiting]    boot\n[waiting]    default_bundle\n[waiting]    development_environment\n[waiting]    test_helper\n[running]    boot\n[ready]      boot\n[running]    default_bundle\n[ready]      default_bundle\n[running]    test_environment\n[running]    development_environment\n[ready]      development_environment\n[running]    prerake\n[ready]      prerake\nslavenode.go:187: EOF\nslavenode.go:195: [test_environment] Wrong message type! Expected ActionResponseMessage, got: \n[crashed]    test_environment\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0x723b5]\n\ngoroutine 12 [running]:\ngithub.com/burke/zeus/go/unixsocket.(*Usock).WriteMessage(0x0, 0xf8402565a0, 0x3a5300000016, 0xf840044120, 0x14, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:81 +0xba\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).bootSlave(0xf84006d240, 0xf84006d300, 0x0, 0x5200000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:258 +0x10e\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState(0xf84006d240, 0x1, 0x10b90c, 0x4300000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:231 +0x132\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf84006d240, 0xf840052500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:127 +0x161\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 1 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster.Run(0x7fff5fbff601, 0x100000005)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:49 +0x2e8\n```\n. ",
    "andreierdoss": "I am running 0.13.3 and I'm still getting this error on OS X. \n\n```\npanic: runtime error: invalid memory address or nil pointer dereference\n```\n. I am running 0.13.3 and I'm still getting this error on OS X. \n\n```\npanic: runtime error: invalid memory address or nil pointer dereference\n```\n. ",
    "aalong": "I ran into this briefly today on Ubuntu with Zeus 0.13.3\n\nTo anyone else encountering this: the problem cropped up for me after I introduced an error into my Fixture Builder code, and went away once I'd resolved my bug. Hopefully this means that whatever is left of this issue can be easily avoided.\n. I ran into this briefly today on Ubuntu with Zeus 0.13.3\n\nTo anyone else encountering this: the problem cropped up for me after I introduced an error into my Fixture Builder code, and went away once I'd resolved my bug. Hopefully this means that whatever is left of this issue can be easily avoided.\n. ",
    "International": "still happens on Zeus version 0.15.1\n. still happens on Zeus version 0.15.1\n. ",
    "somebody32": "Pending `bundle install` caused this error for me today on 0.15.1\n. Pending `bundle install` caused this error for me today on 0.15.1\n. ",
    "sgerrand": "I'm also encountering this issue on v0.15.1.\n\n```\nzeus --log log/zeus.log start\nStarting Zeus server v0.15.1\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus rake\nzeus runner (alias: r)\nzeus console (alias: c)\nzeus server (alias: s)\nzeus generate (alias: g)\nzeus destroy (alias: d)\nzeus dbconsole\nzeus test (alias: rspec, testrb) [run to see backtrace]\nslavenode.go:215: EOF\nslavenode.go:223: [test_helper] Wrong message type! Expected ActionResponseMessage, got:\n```\n. Here's the relevant log entries in a [gist](https://gist.githubusercontent.com/sgerrand/8f315f9eb7cd5b00d1a5/raw/zeus-debug.log).\n\nInteresting that the log output uses the development location. :smiley_cat: \n. I also have encountered this issue intermittently.\n. Facing the same issue. Uninstalling v0.15.14 and using v0.15.13 also works for me.\r\n\r\nSeems like this project could do with adding further unit, perhaps even some integration, tests to catch this kind of regression.. I'm also encountering this issue on v0.15.1.\n\n```\nzeus --log log/zeus.log start\nStarting Zeus server v0.15.1\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus rake\nzeus runner (alias: r)\nzeus console (alias: c)\nzeus server (alias: s)\nzeus generate (alias: g)\nzeus destroy (alias: d)\nzeus dbconsole\nzeus test (alias: rspec, testrb) [run to see backtrace]\nslavenode.go:215: EOF\nslavenode.go:223: [test_helper] Wrong message type! Expected ActionResponseMessage, got:\n```\n. Here's the relevant log entries in a [gist](https://gist.githubusercontent.com/sgerrand/8f315f9eb7cd5b00d1a5/raw/zeus-debug.log).\n\nInteresting that the log output uses the development location. :smiley_cat: \n. I also have encountered this issue intermittently.\n. Facing the same issue. Uninstalling v0.15.14 and using v0.15.13 also works for me.\r\n\r\nSeems like this project could do with adding further unit, perhaps even some integration, tests to catch this kind of regression.. ",
    "jsilland": "I am experiencing this as well \u2013 I tried updating to 0.15.1 but this didn't fix the issue:\n\n```\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0xcd9b4]\nslavenode.go:215: EOF\ngoroutine 11 [running]:] Wrong message type! Expected ActionResponseMessage, got: \nruntime.panic(0x136240, 0x2e88b9)\n    /usr/local/go/src/pkg/runtime/panic.c:266 +0xb6\ngithub.com/burke/zeus/go/unixsocket.(*Usock).WriteMessage(0x0, 0xc2100d7040, 0x10, 0x0, 0x0, ...)\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/unixsocket/usock.go:67 +0x1f4\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).bootSlave(0xc21005b000, 0xc21005b0f0)\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:299 +0x12e\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doCrashedOrReadyState(0xc21005b000, 0x1, 0x15d280)\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:278 +0x3d6\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xc21005b000, 0xc210038650)\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:150 +0x1d1\ncreated by github.com/burke/zeus/go/processtree.func\u00b7002\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavemonitor.go:53 +0x20d\n```\n. I am experiencing this as well \u2013 I tried updating to 0.15.1 but this didn't fix the issue:\n\n```\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0xcd9b4]\nslavenode.go:215: EOF\ngoroutine 11 [running]:] Wrong message type! Expected ActionResponseMessage, got: \nruntime.panic(0x136240, 0x2e88b9)\n    /usr/local/go/src/pkg/runtime/panic.c:266 +0xb6\ngithub.com/burke/zeus/go/unixsocket.(*Usock).WriteMessage(0x0, 0xc2100d7040, 0x10, 0x0, 0x0, ...)\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/unixsocket/usock.go:67 +0x1f4\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).bootSlave(0xc21005b000, 0xc21005b0f0)\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:299 +0x12e\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doCrashedOrReadyState(0xc21005b000, 0x1, 0x15d280)\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:278 +0x3d6\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xc21005b000, 0xc210038650)\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:150 +0x1d1\ncreated by github.com/burke/zeus/go/processtree.func\u00b7002\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavemonitor.go:53 +0x20d\n```\n. ",
    "chanks": "I'm getting this too, with Zeus 0.15.3. It came about when I upgraded from Ruby 2.0 to 2.2.\n. I'm getting this too, with Zeus 0.15.3. It came about when I upgraded from Ruby 2.0 to 2.2.\n. ",
    "vlad-shatskyi": "I had the same issue. It turned out to be caused by not installed gems from my Gemfile. After `bundle` it started working again.\n. I had the same issue. It turned out to be caused by not installed gems from my Gemfile. After `bundle` it started working again.\n. ",
    "misha-slyusarev": "I also get into this issue with Zeus 0.15.1. And this is weird because I was doing nothing with the environment. Just restarted Zeus and got this _Wrong message type!_.\n\nApparently the reason was in updating Gemfile by another guy. When I pulled down the update and restarted Zeus it broke. So I did **bundle install** and it worked.\n. I also get into this issue with Zeus 0.15.1. And this is weird because I was doing nothing with the environment. Just restarted Zeus and got this _Wrong message type!_.\n\nApparently the reason was in updating Gemfile by another guy. When I pulled down the update and restarted Zeus it broke. So I did **bundle install** and it worked.\n. ",
    "mhuggins": "Thanks @somebody32!  I didn't realize I had new gems that needed to be installed via `bundle install`, which cleared up the issue for me.\n. Thanks @somebody32!  I didn't realize I had new gems that needed to be installed via `bundle install`, which cleared up the issue for me.\n. ",
    "mcmoyer": "any word on zeus-contrib...was hoping to find a custom plan for Puma\n. I get the same error on an Ubuntu VM running on VMWare Fusion on OSX.  If I copy the contents of that directory to the vm's local drive, it runs great.\n. thanks saimonmoore, I changed to an NFS share and was able to run it fine also.  \n. @terrellt, have you tried sharing via CIFS?  Might be worth a shot.  It didn't work with SSHFS, but who knows what it will work with.\n. I've tested 0.13.4.pre2 and it works regardless of the json version.  Thanks\n\nOn May 29, 2013, at 12:30 AM, Artur Roszczyk notifications@github.com wrote:\n\n> Try new version 0.13.4.pre2. AFAIK it does not rely on json anymore \n> \n> Wys\u0142ane z iPhone'a \n> \n> Dnia 28.05.2013 o godz. 21:33 mcmoyer notifications@github.com napisa\u0142(a): \n> \n> > After a recent bundle update, zeus started instantly crashing upon issuing the 'zeus start' command. I narrowed it down to the json gem version 1.8.0 -- version 1.7.7 works fine. I'm lost when it comes to figuring out how to get good debugging information on what zeus is trying to do with the json gem though. Any pointers on where I should look? The app works without issue otherwise. I just can't use zeus on it right now without backing that gem down to the previous version. \n> > \n> > \u2014 \n> > Reply to this email directly or view it on GitHub.\n> > \u2014\n> > Reply to this email directly or view it on GitHub.\n. any word on zeus-contrib...was hoping to find a custom plan for Puma\n. I get the same error on an Ubuntu VM running on VMWare Fusion on OSX.  If I copy the contents of that directory to the vm's local drive, it runs great.\n. thanks saimonmoore, I changed to an NFS share and was able to run it fine also.  \n. @terrellt, have you tried sharing via CIFS?  Might be worth a shot.  It didn't work with SSHFS, but who knows what it will work with.\n. I've tested 0.13.4.pre2 and it works regardless of the json version.  Thanks\n\nOn May 29, 2013, at 12:30 AM, Artur Roszczyk notifications@github.com wrote:\n\n> Try new version 0.13.4.pre2. AFAIK it does not rely on json anymore \n> \n> Wys\u0142ane z iPhone'a \n> \n> Dnia 28.05.2013 o godz. 21:33 mcmoyer notifications@github.com napisa\u0142(a): \n> \n> > After a recent bundle update, zeus started instantly crashing upon issuing the 'zeus start' command. I narrowed it down to the json gem version 1.8.0 -- version 1.7.7 works fine. I'm lost when it comes to figuring out how to get good debugging information on what zeus is trying to do with the json gem though. Any pointers on where I should look? The app works without issue otherwise. I just can't use zeus on it right now without backing that gem down to the previous version. \n> > \n> > \u2014 \n> > Reply to this email directly or view it on GitHub.\n> > \u2014\n> > Reply to this email directly or view it on GitHub.\n. ",
    "arnewauters": "I changed the snippet accordingly since the init_reporter method is no longer defined...\n\n``` ruby\nrequire 'zeus/rails'\n\nclass Popeye < Zeus::Rails\n  def spinach_environment\n    require 'spinach'\n  end\n\n  def spinach\n    cli = Spinach::Cli.new(ARGV.dup)\n    exit cli.run\n  end\nend\n\nZeus.plan = Popeye.new\n```\n. I changed the snippet accordingly since the init_reporter method is no longer defined...\n\n``` ruby\nrequire 'zeus/rails'\n\nclass Popeye < Zeus::Rails\n  def spinach_environment\n    require 'spinach'\n  end\n\n  def spinach\n    cli = Spinach::Cli.new(ARGV.dup)\n    exit cli.run\n  end\nend\n\nZeus.plan = Popeye.new\n```\n. ",
    "christhekeele": "+1 Pretty big PITA w/out my initializers.\n. Here's what I ended up adding to my zeus plan:\n\n```\ndef test(argv=ARGV)\n  super\n  # Recalc random\n  `touch spec/spec_helper.rb`\nend\ndef after_fork\n  # Seed random\n  srand\n  super\nend\n```\n. +1\n. +1\n. +1 Pretty big PITA w/out my initializers.\n. Here's what I ended up adding to my zeus plan:\n\n```\ndef test(argv=ARGV)\n  super\n  # Recalc random\n  `touch spec/spec_helper.rb`\nend\ndef after_fork\n  # Seed random\n  srand\n  super\nend\n```\n. +1\n. +1\n. ",
    "XORwell": "+1\n. +1\n. ",
    "estsauver": "I'm getting an issue using Thoughtbot#clearance's testing middleware. They have a Clearance::Backdoor middleware that enables you to visit a path as a given user. I get different results running zeus rake from running regular rake. \n\nI'll put together a test app tonight that demonstrates. \n. I'm getting an issue using Thoughtbot#clearance's testing middleware. They have a Clearance::Backdoor middleware that enables you to visit a path as a given user. I get different results running zeus rake from running regular rake. \n\nI'll put together a test app tonight that demonstrates. \n. ",
    "sabcio": "`module App::Deployment` is at `app/models/app/deployment.rb`\n\n`class Deployment` at `app/models/deployment.rb`\n\n@burke any ideas? I'd love to use zeus in my everyday development.\n. `module App::Deployment` is at `app/models/app/deployment.rb`\n\n`class Deployment` at `app/models/deployment.rb`\n\n@burke any ideas? I'd love to use zeus in my everyday development.\n. ",
    "EllieRagone": "Yup!  I've defaulted back to just running that since I can't get the zeus backend up and running\n. Nope - I haven't touched my ruby - is there something I should've done?\n. Ah.  Excellent.  I did not notice that - it just worked until a few days ago.  I shall try that - thanks!\n. Going through those instructions left me with an autoreconf error, which, after a little investigation, is due to `autoreconf -f` failing with:\n`configure.in:425: warning: underquoted definition of RUBY_TRY_CFLAGS`\nAny thoughts on this one?\n. Ok... let me reinstall it.  I've already built several packages with those; we'll see what happens here...\n. No dice.  Reinstalling & rebooting, same error\n. I am now stuck on a different problem.  I have zeus running just find with one project, but on a similar project zeus start simply marks everything as crashed and doesn't work.  No errors, no logs.  Just crashed.\n. Ended up having multiple `rails server` issues.  All good now.\n. would love a version bump so i can start using zeus again as well!\n. any comment on this?  it's still an issue for me\n. Solves my main complaint; to be perfect, I'd also ask how to hide that last line, `# -e:1:in```<main>'`:\n\n```\n  1) Agency should belong to coordinator\n     Failure/Error: it { should belong_to(:coordinator) }\n       Expected Agency to have a belongs_to association called coordinator (Agency does not have a coordinator_id foreign key.)\n     # ./spec/models/agency_spec.rb:6:in `block (2 levels) in <top (required)>'\n     # -e:1:in `<main>'\n```\n. Looks like that can be solved with:\n\n```\nconfig.backtrace_exclusion_patterns = (config.backtrace_exclusion_patterns << /\\-e\\:1\\:in \\`\\<main\\>\\'/)\n```\n\nAny ideas/plans to not require this \"hack\" in the future?\n. Not as clean as I'd like, but this works:\n\n```\nzeus start > zeus.log &\ntail -f zeus.log\n```\n. ```\n$ps aux | grep zeus\npragone         64598   0.0  0.9  2663928 145936   ??  S     7:37PM   0:00.49 zeus slave: test_helper\npragone         64597   0.0  0.5  2628952  77276   ??  S     7:37PM   0:00.12 zeus slave: prerake\npragone         64173   0.0  0.8  2635232 142564   ??  S     7:37PM   0:02.57 zeus slave: test_environment\npragone         64172   0.0  0.8  2627916 138192   ??  S     7:37PM   0:02.73 zeus slave: development_environment\npragone         32043   0.0  0.8  2607264 129180   ??  S     6:01PM   0:03.05 zeus slave: default_bundle\npragone         31646   0.0  0.3  2500716  48116   ??  S     6:01PM   0:01.71 zeus slave: boot\npragone         31645   0.0  0.0  2470388   6796   ??  S     6:01PM   0:13.69 /Users/pragone/.rvm/gems/ruby-2.1.5@remoonline/gems/zeus-0.15.3/build/fsevents-wrapper\npragone         31643   0.0  0.1 145193400  14232   ??  S     6:01PM   0:01.82 /Users/pragone/.rvm/gems/ruby-2.1.5@remoonline/gems/zeus-0.15.3/build/zeus-darwin-amd64 start\npragone          7129   0.0  1.2  2697096 208508   ??  S     5:58PM   0:02.05 zeus command: test [in pry-rescue @ /Users/pragone/projects/remoonline]\npragone          7124   0.0  0.0  2658436   2752   ??  Ss    5:58PM   0:04.54 zeus runner: test\n\n$ killall zeus\nNo matching processes belonging to you were found\n```\n. For those interested, this is my killzeus script to handle this problem for now:\n`$PROJECTNAME` helps to only kill zeus for a particular project, rather than across the board\n\n```\n#!/bin/bash --login\npid=`ps aux | grep \"zeus-darwin-amd64 start\" | grep $PROJECTNAME | awk '{print $2}'`\nif [ $pid ]; then\n  echo 'Killing zeus'\n  kill $pid\nelse\n  echo 'Zeus not running'\nfi\npid=`ps aux | grep \"zeus slave: boot\" | grep $PROJECTNAME | awk '{print $2}'`\nif [ $pid ]; then\n  echo 'Killing zeus'\n  kill $pid\nelse\n  echo 'Zeus not running'\nfi\nrm ./.zeus.sock > /dev/null 2> /dev/null\n```\n. I launch it into the background.  I don't remember why anymore...  `zeus start > log/zeus.log &`\n. Yup!  I've defaulted back to just running that since I can't get the zeus backend up and running\n. Nope - I haven't touched my ruby - is there something I should've done?\n. Ah.  Excellent.  I did not notice that - it just worked until a few days ago.  I shall try that - thanks!\n. Going through those instructions left me with an autoreconf error, which, after a little investigation, is due to `autoreconf -f` failing with:\n`configure.in:425: warning: underquoted definition of RUBY_TRY_CFLAGS`\nAny thoughts on this one?\n. Ok... let me reinstall it.  I've already built several packages with those; we'll see what happens here...\n. No dice.  Reinstalling & rebooting, same error\n. I am now stuck on a different problem.  I have zeus running just find with one project, but on a similar project zeus start simply marks everything as crashed and doesn't work.  No errors, no logs.  Just crashed.\n. Ended up having multiple `rails server` issues.  All good now.\n. would love a version bump so i can start using zeus again as well!\n. any comment on this?  it's still an issue for me\n. Solves my main complaint; to be perfect, I'd also ask how to hide that last line, `# -e:1:in```<main>'`:\n\n```\n  1) Agency should belong to coordinator\n     Failure/Error: it { should belong_to(:coordinator) }\n       Expected Agency to have a belongs_to association called coordinator (Agency does not have a coordinator_id foreign key.)\n     # ./spec/models/agency_spec.rb:6:in `block (2 levels) in <top (required)>'\n     # -e:1:in `<main>'\n```\n. Looks like that can be solved with:\n\n```\nconfig.backtrace_exclusion_patterns = (config.backtrace_exclusion_patterns << /\\-e\\:1\\:in \\`\\<main\\>\\'/)\n```\n\nAny ideas/plans to not require this \"hack\" in the future?\n. Not as clean as I'd like, but this works:\n\n```\nzeus start > zeus.log &\ntail -f zeus.log\n```\n. ```\n$ps aux | grep zeus\npragone         64598   0.0  0.9  2663928 145936   ??  S     7:37PM   0:00.49 zeus slave: test_helper\npragone         64597   0.0  0.5  2628952  77276   ??  S     7:37PM   0:00.12 zeus slave: prerake\npragone         64173   0.0  0.8  2635232 142564   ??  S     7:37PM   0:02.57 zeus slave: test_environment\npragone         64172   0.0  0.8  2627916 138192   ??  S     7:37PM   0:02.73 zeus slave: development_environment\npragone         32043   0.0  0.8  2607264 129180   ??  S     6:01PM   0:03.05 zeus slave: default_bundle\npragone         31646   0.0  0.3  2500716  48116   ??  S     6:01PM   0:01.71 zeus slave: boot\npragone         31645   0.0  0.0  2470388   6796   ??  S     6:01PM   0:13.69 /Users/pragone/.rvm/gems/ruby-2.1.5@remoonline/gems/zeus-0.15.3/build/fsevents-wrapper\npragone         31643   0.0  0.1 145193400  14232   ??  S     6:01PM   0:01.82 /Users/pragone/.rvm/gems/ruby-2.1.5@remoonline/gems/zeus-0.15.3/build/zeus-darwin-amd64 start\npragone          7129   0.0  1.2  2697096 208508   ??  S     5:58PM   0:02.05 zeus command: test [in pry-rescue @ /Users/pragone/projects/remoonline]\npragone          7124   0.0  0.0  2658436   2752   ??  Ss    5:58PM   0:04.54 zeus runner: test\n\n$ killall zeus\nNo matching processes belonging to you were found\n```\n. For those interested, this is my killzeus script to handle this problem for now:\n`$PROJECTNAME` helps to only kill zeus for a particular project, rather than across the board\n\n```\n#!/bin/bash --login\npid=`ps aux | grep \"zeus-darwin-amd64 start\" | grep $PROJECTNAME | awk '{print $2}'`\nif [ $pid ]; then\n  echo 'Killing zeus'\n  kill $pid\nelse\n  echo 'Zeus not running'\nfi\npid=`ps aux | grep \"zeus slave: boot\" | grep $PROJECTNAME | awk '{print $2}'`\nif [ $pid ]; then\n  echo 'Killing zeus'\n  kill $pid\nelse\n  echo 'Zeus not running'\nfi\nrm ./.zeus.sock > /dev/null 2> /dev/null\n```\n. I launch it into the background.  I don't remember why anymore...  `zeus start > log/zeus.log &`\n. ",
    "Jeweller-Tsai": "I've got the same trouble. I'm using ruby 1.9.3p194, rails 3.0.17 on OS X 10.8.2, it's stuck and can't ran other zeus commands\n. zeus-0.10.2 works for me :-)\n\nOS X 10.8.2\n1.9.3p194 perf\nrails 3.0.17\n\n2012/11/7 lukaso notifications@github.com\n\n> OK, for me, it was my config/inititializers/sidekiq.rb which was setting\n> redis even when redis wasn't running. Now commented out (well, ifed out)\n> and all works.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/118#issuecomment-10142973.\n. same as [#118](https://github.com/burke/zeus/issues/118#issuecomment-8961069)\n. I've got the same trouble. I'm using ruby 1.9.3p194, rails 3.0.17 on OS X 10.8.2, it's stuck and can't ran other zeus commands\n. zeus-0.10.2 works for me :-)\n\nOS X 10.8.2\n1.9.3p194 perf\nrails 3.0.17\n\n2012/11/7 lukaso notifications@github.com\n\n> OK, for me, it was my config/inititializers/sidekiq.rb which was setting\n> redis even when redis wasn't running. Now commented out (well, ifed out)\n> and all works.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/118#issuecomment-10142973.\n. same as [#118](https://github.com/burke/zeus/issues/118#issuecomment-8961069)\n. ",
    "dogweather": "Same issue, but I'm using the patched ruby. rvm list gives:\n\n`ruby-1.9.3-p194-perf [ x86_64 ]`\n\nWould it be possible for zeus to give a message to the effect that the ruby interp doesn't have the right facilities, if this is the case? Would make debugging this easier.\n. FYI, I'm having much better luck on Ubuntu 12.10 than 12.04 LTS. Works pretty well - I was able to use it for the first time; I can understand the enthusiasm now. For some reason 12.04 doesn't agree with it. My development environment (rvm, ruby, code, etc.) is the same, but the underlying system obviously has different libraries.\n. Ditto. \"reset\" worked for me in OS X terminal.\n. Same issue, but I'm using the patched ruby. rvm list gives:\n\n`ruby-1.9.3-p194-perf [ x86_64 ]`\n\nWould it be possible for zeus to give a message to the effect that the ruby interp doesn't have the right facilities, if this is the case? Would make debugging this easier.\n. FYI, I'm having much better luck on Ubuntu 12.10 than 12.04 LTS. Works pretty well - I was able to use it for the first time; I can understand the enthusiasm now. For some reason 12.04 doesn't agree with it. My development environment (rvm, ruby, code, etc.) is the same, but the underlying system obviously has different libraries.\n. Ditto. \"reset\" worked for me in OS X terminal.\n. ",
    "driv3r": "I was having the same issue, it hanged on `boot` and you can't load anything. I found that running zeus with bundle exec solves the problem. \n\nosx 10.8.2, rbenv with patched ruby 1.9.3-p194 \n. I was having the same issue, it hanged on `boot` and you can't load anything. I found that running zeus with bundle exec solves the problem. \n\nosx 10.8.2, rbenv with patched ruby 1.9.3-p194 \n. ",
    "lukaso": "Same problem. I have the patched ruby and waiting on `test` and `rake` with `zeus` with and without `bundle exec`. I've deleted the `cucumber` and `testrb` entries from `zeus.json`\n. OK, for me, it was my `config/inititializers/sidekiq.rb` which was setting redis even when redis wasn't running. Now commented out (well, ifed out) and all works.\n. Same problem. I have the patched ruby and waiting on `test` and `rake` with `zeus` with and without `bundle exec`. I've deleted the `cucumber` and `testrb` entries from `zeus.json`\n. OK, for me, it was my `config/inititializers/sidekiq.rb` which was setting redis even when redis wasn't running. Now commented out (well, ifed out) and all works.\n. ",
    "gphil": "I'm on Ruby 1.9.3p194-perf, Rails 3.2.8 on Mac OS X 10.7.5 and I'm seeing the same issue as the others above. However, if I downgrade to zeus 0.4.6, everything works fine. So, it's something that was added between then and now that is causing this issue (at least for me.)\n. @micho: Thanks for chiming in, it helped me track down the the issue. I too was able to use the latest version with a vanilla rails project, so I went into our main project and started pulling out gems. \n\nDuring this process, I found that the mere inclusion of the gems was not the issue, but rather whether or not the following initializer for Resque ran:\n\n``` ruby\nrails_root = Rails.root || File.dirname(__FILE__) + '/../..'\nrails_env = Rails.env || 'development'\n\nresque_config = YAML.load_file(rails_root.to_s + '/config/resque.yml')\nResque.redis = resque_config[rails_env]\n```\n\nWhen I commented the above out, zeus worked fine. So, I figured it must have to do with setting up the connection to Redis. Normally in development I am not running a Redis server, so I tried uncommenting the code and firing up Redis and sure enough zeus worked perfectly after that. So,  for me the issue was that when Resque couldn't connect to Redis, it caused zeus client connections to hang. I don't have to time to debug it any more at the moment, but I will probably come back to it and open a new issue specific to this when I have more information about what's going on.\n. I'm on Ruby 1.9.3p194-perf, Rails 3.2.8 on Mac OS X 10.7.5 and I'm seeing the same issue as the others above. However, if I downgrade to zeus 0.4.6, everything works fine. So, it's something that was added between then and now that is causing this issue (at least for me.)\n. @micho: Thanks for chiming in, it helped me track down the the issue. I too was able to use the latest version with a vanilla rails project, so I went into our main project and started pulling out gems. \n\nDuring this process, I found that the mere inclusion of the gems was not the issue, but rather whether or not the following initializer for Resque ran:\n\n``` ruby\nrails_root = Rails.root || File.dirname(__FILE__) + '/../..'\nrails_env = Rails.env || 'development'\n\nresque_config = YAML.load_file(rails_root.to_s + '/config/resque.yml')\nResque.redis = resque_config[rails_env]\n```\n\nWhen I commented the above out, zeus worked fine. So, I figured it must have to do with setting up the connection to Redis. Normally in development I am not running a Redis server, so I tried uncommenting the code and firing up Redis and sure enough zeus worked perfectly after that. So,  for me the issue was that when Resque couldn't connect to Redis, it caused zeus client connections to hang. I don't have to time to debug it any more at the moment, but I will probably come back to it and open a new issue specific to this when I have more information about what's going on.\n. ",
    "micho": "@gphil I have the same problem! My full problem description:\n\n---\n\n**Vanilla rails project working**\n\n**zeus-0.12 working**: I start a new vanilla rails project, init zeus and everything works normally. Here every command works. \n\n---\n\n**My larger project, crashing**\n\n**zeus-0.12 crashing**: I set up my large project with dozens of gems with `zeus init` and `zeus start`. Zeus starts normally, but then when doing `zeus console` or _any_ other command it locks the terminal. No input, no response. No logs that I could find (any idea of where to find them?).\n\nNow if I try with zeus 0.4.6, doing `gem uninstall zeus` and `gem install zeus -v=0.4.6`, it works for the same project where it was crashing. Start bisect...\n\n**zeus-0.4.6 working**. Everything works perfectly.\n\n**zeus-0.10 working**. Terminal input [doesn't display the prompt](http://cl.ly/image/310T2f1z3C3Z), but works otherwise.\n\n**zeus-0.11 crashing**. Completely [freezes](http://cl.ly/image/0k0n052V3s0S) console.\n\n**zeus-0.10.2 working**. Terminal input [doesn't display the prompt](http://cl.ly/image/310T2f1z3C3Z), but works otherwise.\n. So last working version for me is zeus-0.10.2. Running ruby-1.9.3-p286-perf, Rails 3.1.6, OSX 10.8.2.\n. Ah! That's the cause of the problem! :beers:\n\nI was starting up my project (which uses Resque) with Redis turned off.. which made it crash, and crashed zeus.\n**Turning on Redis fixed the bug** for me.\n. The question remains: why did zeus start crashing on it, when it didn't for version 0.10?\n. Jessie, does it work if you boot redis before starting zeus?\n\nOn Monday, 3 de December de 2012 at 20:50, Jessie A. Young wrote:\n\n> @gphil (https://github.com/gphil) @micho (https://github.com/micho) I think that I am experiencing the same problem with a Rails app using Redis. I've pinpointed the exact line in config/initializers/redis.rb that causes Zeus to hang, but when commented out all of my specs fail.  \n> Any updates on the source of this issue?  \n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/burke/zeus/issues/118#issuecomment-10968453).  \n. Confirmed for zeus 0.4.6.\n. Yay! Thanks for closing this one\n. Following your instructions, I get:\n\n```\n~/code/zeus[master]: go get github.com/burke/zeus/go/zeusversion\ncan't load package: package github.com/burke/zeus/go/zeusversion: no Go source files in /usr/local/Cellar/go/1.0.3/src/pkg/github.com/burke/zeus/go/zeusversion\n```\n\nLast commit is 139ef32.\n\nI'm trying to fix https://github.com/burke/zeus/issues/118, bisecting the repo and finding the exact problem. Any help would be appreciated!\n. We are seeing this too in our specs, but weirdly _it's not a Zeus-specific issue for us_. It fails for both with and without, and @brandonhilkert's snippet fixes both cases.\n. @gphil I have the same problem! My full problem description:\n\n---\n\n**Vanilla rails project working**\n\n**zeus-0.12 working**: I start a new vanilla rails project, init zeus and everything works normally. Here every command works. \n\n---\n\n**My larger project, crashing**\n\n**zeus-0.12 crashing**: I set up my large project with dozens of gems with `zeus init` and `zeus start`. Zeus starts normally, but then when doing `zeus console` or _any_ other command it locks the terminal. No input, no response. No logs that I could find (any idea of where to find them?).\n\nNow if I try with zeus 0.4.6, doing `gem uninstall zeus` and `gem install zeus -v=0.4.6`, it works for the same project where it was crashing. Start bisect...\n\n**zeus-0.4.6 working**. Everything works perfectly.\n\n**zeus-0.10 working**. Terminal input [doesn't display the prompt](http://cl.ly/image/310T2f1z3C3Z), but works otherwise.\n\n**zeus-0.11 crashing**. Completely [freezes](http://cl.ly/image/0k0n052V3s0S) console.\n\n**zeus-0.10.2 working**. Terminal input [doesn't display the prompt](http://cl.ly/image/310T2f1z3C3Z), but works otherwise.\n. So last working version for me is zeus-0.10.2. Running ruby-1.9.3-p286-perf, Rails 3.1.6, OSX 10.8.2.\n. Ah! That's the cause of the problem! :beers:\n\nI was starting up my project (which uses Resque) with Redis turned off.. which made it crash, and crashed zeus.\n**Turning on Redis fixed the bug** for me.\n. The question remains: why did zeus start crashing on it, when it didn't for version 0.10?\n. Jessie, does it work if you boot redis before starting zeus?\n\nOn Monday, 3 de December de 2012 at 20:50, Jessie A. Young wrote:\n\n> @gphil (https://github.com/gphil) @micho (https://github.com/micho) I think that I am experiencing the same problem with a Rails app using Redis. I've pinpointed the exact line in config/initializers/redis.rb that causes Zeus to hang, but when commented out all of my specs fail.  \n> Any updates on the source of this issue?  \n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/burke/zeus/issues/118#issuecomment-10968453).  \n. Confirmed for zeus 0.4.6.\n. Yay! Thanks for closing this one\n. Following your instructions, I get:\n\n```\n~/code/zeus[master]: go get github.com/burke/zeus/go/zeusversion\ncan't load package: package github.com/burke/zeus/go/zeusversion: no Go source files in /usr/local/Cellar/go/1.0.3/src/pkg/github.com/burke/zeus/go/zeusversion\n```\n\nLast commit is 139ef32.\n\nI'm trying to fix https://github.com/burke/zeus/issues/118, bisecting the repo and finding the exact problem. Any help would be appreciated!\n. We are seeing this too in our specs, but weirdly _it's not a Zeus-specific issue for us_. It fails for both with and without, and @brandonhilkert's snippet fixes both cases.\n. ",
    "jessieay": "@gphil @micho I think that I am experiencing the same problem with a Rails app using Redis. I've pinpointed the exact line in `config/initializers/redis.rb` that causes Zeus to hang, but when commented out all of my specs fail. \n\nAny updates on the source of this issue? \n. I have Redis running. \n\nI've tried uninstalling and re-installing Zeus many times but no luck. (v 0.12.0, but I've also tried other versions). \n\nOn `zeus start` everything is green except for `test_helper` (pink/connecting) and `zeus test` (yellow/waiting).\n\nThe line I comment out in `config/initializers/redis.rb` to make everything green is the line that instantiates my last Redis silo. But, even with all zeus commands green, 90% of of my specs fail when running `zeus rake`\n\nThanks for your help, @micho !! And for Zeus' awesomeness, @burke !\n. @gphil @micho I think that I am experiencing the same problem with a Rails app using Redis. I've pinpointed the exact line in `config/initializers/redis.rb` that causes Zeus to hang, but when commented out all of my specs fail. \n\nAny updates on the source of this issue? \n. I have Redis running. \n\nI've tried uninstalling and re-installing Zeus many times but no luck. (v 0.12.0, but I've also tried other versions). \n\nOn `zeus start` everything is green except for `test_helper` (pink/connecting) and `zeus test` (yellow/waiting).\n\nThe line I comment out in `config/initializers/redis.rb` to make everything green is the line that instantiates my last Redis silo. But, even with all zeus commands green, 90% of of my specs fail when running `zeus rake`\n\nThanks for your help, @micho !! And for Zeus' awesomeness, @burke !\n. ",
    "rajesh38": "@benjamintanweihao correct, for me it was a need of bundle install.\nYou can check the error that is shown when startin rails server. Solve the error and you are good to go.\n. @benjamintanweihao correct, for me it was a need of bundle install.\nYou can check the error that is shown when startin rails server. Solve the error and you are good to go.\n. ",
    "sskirby": "I would love to be able to see the crash logs when running `zeus start`\n\nI have a large rails app that zeus just crashes on when trying to load the development and test environments and I have no idea why.\n. I would love to be able to see the crash logs when running `zeus start`\n\nI have a large rails app that zeus just crashes on when trying to load the development and test environments and I have no idea why.\n. ",
    "eric-sal": "I'm seeing the same issue. I've installed the GC patch, and the only differences are that I'm using rvm and Rails 3.0.5.\n\nThe Zeus gem version is 0.12.0.\n. @hoelmer Thanks for the suggestion. I also gave it a shot, but to no avail.\n\n@simeonwillbanks if you remove the prerake and development sections from the zeus.json file, does it work for you?\n\nI did this and generate, dbconsole, console, runner, and server all show green, but when I try `zeus s` or `zeus c`, nothing happens.\n. I'm seeing the same issue. I've installed the GC patch, and the only differences are that I'm using rvm and Rails 3.0.5.\n\nThe Zeus gem version is 0.12.0.\n. @hoelmer Thanks for the suggestion. I also gave it a shot, but to no avail.\n\n@simeonwillbanks if you remove the prerake and development sections from the zeus.json file, does it work for you?\n\nI did this and generate, dbconsole, console, runner, and server all show green, but when I try `zeus s` or `zeus c`, nothing happens.\n. ",
    "hoelmer": "I experienced the same problem a few days ago. If you are using homebrew try upgrading all packages and then try reinstalling the Zeus gem again. My guess is that something in my build environment was not up to date.\n. I experienced the same problem a few days ago. If you are using homebrew try upgrading all packages and then try reinstalling the Zeus gem again. My guess is that something in my build environment was not up to date.\n. ",
    "simeonwillbanks": "@hoelmer I uninstalled zeus then ran `brew doctor`. I followed the suggestions such as `brew update` and `brew install x y and z`. After reinstalling zeus, I get the same output as the original screen capture. :cry:\n. @whtt-eric I really want to use zeus for speeding up TDD; removing `prerake` and `test_environment` wouldn't make any sense. That said, thanks for the suggestion.\n. @richardjohansson Why'd you choose 0.4.4? There are a lot of releases between 0.12.0 and 0.4.4. \n\nhttps://rubygems.org/gems/zeus/versions\n. @richardjohansson Got it. I'll try 0.4.4. Thanks!\n. Now we're cooking with gas. :fire: :rocket:\n\n```\n$ zeus console\nLoading development environment (Rails 3.2.8)\n[1] pry(main)>\n\n$ zeus rspec spec/models/user_spec.rb\nFinished in 0.14386 seconds\n24 examples, 24 failures\n```\n\n@richardjohansson you rock!  :triumph:\n. Well, console is working fine, and rspec was working, but now I'm getting this error.\n\n```\n     Failure/Error: Unable to find matching line from backtrace\n     NoMethodError:\n       undefined method `query_options' for nil:NilClass\n     # ./.zeus.rb:107:in `block (6 levels) in <top (required)>'\n```\n. Looks like my failing specs were always failing. : embarrassed:\n\nHere is where the `NoMethodError` exception is thrown:\n\n```\nsimeon at greenwood in ~/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems (master)\n$ ack --ruby query_options\n\nactiverecord-3.2.8/lib/active_record/connection_adapters/mysql2_adapter.rb\n209:        @connection.query_options[:database_timezone] = ActiveRecord::Base.default_timezone\n255:        @connection.query_options.merge!(:as => :array)\n```\n\nMySQL connection? Huh.  Wait a minute, its [spork](https://github.com/sporkrb/spork) causing the exception!  This was in my `spec_helper.rb`:\n\n``` ruby\nSpork.each_run do\n  FactoryGirl.reload\n  # Force Rails and Capybara launched web browser to use the same database connection\n  # @see https://groups.google.com/forum/#!msg/ruby-capybara/JI6JrirL9gM/R6YiXj4gi_UJ\n  # @see http://stackoverflow.com/a/8540668/177524\n  # @see above in Spork.prefork block\n  ActiveRecord::Base.shared_connection = ActiveRecord::Base.connection\nend\n```\n\nI removed spork, and I'm all green.\n\n```\n$ zeus rspec spec/models/user_spec.rb\nFinished in 0.16323 seconds\n24 examples, 0 failures\n```\n. I've upgraded to 0.13.1, and these are still crashing.\n\n```\nzeus test (alias: rspec, testrb) [run to see backtrace]\nzeus cucumber [run to see backtrace]\n```\n\nLooks like Redis is the culprit. \n\n```\n$ zeus rspec spec/models/user_spec.rb                                         \n/Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/redis-2.2.2/lib/redis/client.rb:236:in `rescue in establish_connection': Connection refused - Unable to connect to Redis on localhost:6380 (Errno::ECONNREFUSED)\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/redis-2.2.2/lib/redis/client.rb:222:in `establish_connection'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/redis-2.2.2/lib/redis/client.rb:23:in `connect'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/rails.rb:238:in `block in reconnect_redis'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/rails.rb:237:in `each_object'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/rails.rb:237:in `reconnect_redis'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/rails.rb:32:in `after_fork'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:151:in `run_action'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:54:in `block in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/load_tracking.rb:7:in `features_loaded_by'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:53:in `go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `fork'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `each'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `block in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `loop'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `fork'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `each'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `block in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `loop'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `fork'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `each'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `block in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `loop'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `go'\n    from -e:1:in `<main>'\n```\n\nMy specs do not depend on Redis.  Actually, I am using [MockRedis](https://github.com/causes/mock_redis).  \n\nI don't understand how Zeus is trying to connect with `localhost:6380`.  When I connect to Redis in the development environment, I am using the default of `localhost:6379`.  Staging and production environments are using `localhost:6380`. \n\nI started a Redis server on port 6380:\n\n```\n$ redis-server /etc/redis.conf \n[51082] 12 Dec 19:34:53 * Server started, Redis version 2.2.12\n[51082] 12 Dec 19:34:53 * The server is now ready to accept connections on port 6380\n```\n\nI still get these crashes:\n\n```\nzeus test (alias: rspec, testrb) [run to see backtrace]\nzeus cucumber [run to see backtrace]\n```\n\n```\n$ zeus rspec spec/models/user_spec.rb                                         \n/Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/redis-2.2.2/lib/redis/client.rb:236:in `rescue in establish_connection': Connection refused - Unable to connect to Redis on localhost:6379 (Errno::ECONNREFUSED)\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/redis-2.2.2/lib/redis/client.rb:222:in `establish_connection'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/redis-2.2.2/lib/redis/client.rb:23:in `connect'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/rails.rb:238:in `block in reconnect_redis'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/rails.rb:237:in `each_object'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/rails.rb:237:in `reconnect_redis'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/rails.rb:32:in `after_fork'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:151:in `run_action'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:54:in `block in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/load_tracking.rb:7:in `features_loaded_by'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:53:in `go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `fork'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `each'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `block in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `loop'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `fork'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `each'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `block in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `loop'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `fork'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `each'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `block in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `loop'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `go'\n    from -e:1:in `<main>'\n```\n\n`localhost:6379`? OK.  I started a second Redis server on port 6379. Looks like zeus test is ready.\n\n```\nzeus cucumber [run to see backtrace]\nzeus test (alias: rspec, testrb)\n```\n\n```\n$ zeus rspec spec/models/user_spec.rb\n...\nFinished in 2.64 seconds\n30 examples, 0 failures\n```\n\nWoot!  \n\nThis app doesn't have any features, so I didn't try cucumber.\n\n@burke  Hope this helps.  If you have any questions, please let me know.  I'll go back to using 0.4.4.  Thanks so much for this gem; its awesome!\n. More info for debugging:\n\n```\n$ bundle exec rails console test\nLoading test environment (Rails 3.2.8)\n[1] pry(main)> ObjectSpace.each_object(Redis::Client).each {|r| puts r.inspect}\n#<Redis::Client:0x007fedf60456a0 @path=nil, @host=\"localhost\", @port=6379, @db=1, @timeout=5.0, @password=nil, @logger=nil, @reconnect=true, @connection=#<Redis::Connection::Ruby:0x007fedf6045510 @sock=nil>>\n#<Redis::Client:0x007fedf6053480 @path=nil, @host=\"localhost\", @port=6380, @db=0, @timeout=5.0, @password=nil, @logger=nil, @reconnect=true, @connection=#<Redis::Connection::Ruby:0x007fedf6053430 @sock=nil>>\n#<Redis::Client:0x007fedf60d5bb0 @path=nil, @host=\"localhost\", @port=6379, @db=8, @timeout=5.0, @password=nil, @logger=nil, @reconnect=true, @connection=#<Redis::Connection::Ruby:0x007fedf60d5b38 @sock=nil>>\n=> 3\n```\n\n```\n$ bundle exec rails console\nLoading development environment (Rails 3.2.8)\n[1] pry(main)> ObjectSpace.each_object(Redis::Client).each {|r| puts r.inspect}\n#<Redis::Client:0x007fe2107b30a0 @path=nil, @host=\"localhost\", @port=6379, @db=1, @timeout=5.0, @password=nil, @logger=nil, @reconnect=true, @connection=#<Redis::Connection::Ruby:0x007fe2107b2e98 @sock=nil>>\n#<Redis::Client:0x007fe210d636d0 @path=nil, @host=\"localhost\", @port=6379, @db=8, @timeout=5.0, @password=nil, @logger=nil, @reconnect=true, @connection=#<Redis::Connection::Ruby:0x007fe210d63608 @sock=nil>>\n#<Redis::Client:0x007fe210e31c88 @path=nil, @host=\"localhost\", @port=6379, @db=0, @timeout=5.0, @password=nil, @logger=nil, @reconnect=true, @connection=#<Redis::Connection::Ruby:0x007fe210e31be8 @sock=nil>>\n#<Redis::Client:0x007fe210e56790 @path=nil, @host=\"localhost\", @port=6379, @db=1, @timeout=5.0, @password=nil, @logger=nil, @reconnect=true, @connection=#<Redis::Connection::Ruby:0x007fe210e56150 @sock=nil>>\n=> 4\n```\n\nI think the answer is to ensure `Redis::Client` is not defined when it is not needed.  Thoughts?\n. @hoelmer I uninstalled zeus then ran `brew doctor`. I followed the suggestions such as `brew update` and `brew install x y and z`. After reinstalling zeus, I get the same output as the original screen capture. :cry:\n. @whtt-eric I really want to use zeus for speeding up TDD; removing `prerake` and `test_environment` wouldn't make any sense. That said, thanks for the suggestion.\n. @richardjohansson Why'd you choose 0.4.4? There are a lot of releases between 0.12.0 and 0.4.4. \n\nhttps://rubygems.org/gems/zeus/versions\n. @richardjohansson Got it. I'll try 0.4.4. Thanks!\n. Now we're cooking with gas. :fire: :rocket:\n\n```\n$ zeus console\nLoading development environment (Rails 3.2.8)\n[1] pry(main)>\n\n$ zeus rspec spec/models/user_spec.rb\nFinished in 0.14386 seconds\n24 examples, 24 failures\n```\n\n@richardjohansson you rock!  :triumph:\n. Well, console is working fine, and rspec was working, but now I'm getting this error.\n\n```\n     Failure/Error: Unable to find matching line from backtrace\n     NoMethodError:\n       undefined method `query_options' for nil:NilClass\n     # ./.zeus.rb:107:in `block (6 levels) in <top (required)>'\n```\n. Looks like my failing specs were always failing. : embarrassed:\n\nHere is where the `NoMethodError` exception is thrown:\n\n```\nsimeon at greenwood in ~/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems (master)\n$ ack --ruby query_options\n\nactiverecord-3.2.8/lib/active_record/connection_adapters/mysql2_adapter.rb\n209:        @connection.query_options[:database_timezone] = ActiveRecord::Base.default_timezone\n255:        @connection.query_options.merge!(:as => :array)\n```\n\nMySQL connection? Huh.  Wait a minute, its [spork](https://github.com/sporkrb/spork) causing the exception!  This was in my `spec_helper.rb`:\n\n``` ruby\nSpork.each_run do\n  FactoryGirl.reload\n  # Force Rails and Capybara launched web browser to use the same database connection\n  # @see https://groups.google.com/forum/#!msg/ruby-capybara/JI6JrirL9gM/R6YiXj4gi_UJ\n  # @see http://stackoverflow.com/a/8540668/177524\n  # @see above in Spork.prefork block\n  ActiveRecord::Base.shared_connection = ActiveRecord::Base.connection\nend\n```\n\nI removed spork, and I'm all green.\n\n```\n$ zeus rspec spec/models/user_spec.rb\nFinished in 0.16323 seconds\n24 examples, 0 failures\n```\n. I've upgraded to 0.13.1, and these are still crashing.\n\n```\nzeus test (alias: rspec, testrb) [run to see backtrace]\nzeus cucumber [run to see backtrace]\n```\n\nLooks like Redis is the culprit. \n\n```\n$ zeus rspec spec/models/user_spec.rb                                         \n/Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/redis-2.2.2/lib/redis/client.rb:236:in `rescue in establish_connection': Connection refused - Unable to connect to Redis on localhost:6380 (Errno::ECONNREFUSED)\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/redis-2.2.2/lib/redis/client.rb:222:in `establish_connection'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/redis-2.2.2/lib/redis/client.rb:23:in `connect'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/rails.rb:238:in `block in reconnect_redis'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/rails.rb:237:in `each_object'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/rails.rb:237:in `reconnect_redis'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/rails.rb:32:in `after_fork'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:151:in `run_action'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:54:in `block in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/load_tracking.rb:7:in `features_loaded_by'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:53:in `go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `fork'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `each'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `block in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `loop'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `fork'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `each'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `block in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `loop'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `fork'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `each'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `block in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `loop'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `go'\n    from -e:1:in `<main>'\n```\n\nMy specs do not depend on Redis.  Actually, I am using [MockRedis](https://github.com/causes/mock_redis).  \n\nI don't understand how Zeus is trying to connect with `localhost:6380`.  When I connect to Redis in the development environment, I am using the default of `localhost:6379`.  Staging and production environments are using `localhost:6380`. \n\nI started a Redis server on port 6380:\n\n```\n$ redis-server /etc/redis.conf \n[51082] 12 Dec 19:34:53 * Server started, Redis version 2.2.12\n[51082] 12 Dec 19:34:53 * The server is now ready to accept connections on port 6380\n```\n\nI still get these crashes:\n\n```\nzeus test (alias: rspec, testrb) [run to see backtrace]\nzeus cucumber [run to see backtrace]\n```\n\n```\n$ zeus rspec spec/models/user_spec.rb                                         \n/Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/redis-2.2.2/lib/redis/client.rb:236:in `rescue in establish_connection': Connection refused - Unable to connect to Redis on localhost:6379 (Errno::ECONNREFUSED)\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/redis-2.2.2/lib/redis/client.rb:222:in `establish_connection'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/redis-2.2.2/lib/redis/client.rb:23:in `connect'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/rails.rb:238:in `block in reconnect_redis'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/rails.rb:237:in `each_object'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/rails.rb:237:in `reconnect_redis'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/rails.rb:32:in `after_fork'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:151:in `run_action'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:54:in `block in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/load_tracking.rb:7:in `features_loaded_by'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:53:in `go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `fork'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `each'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `block in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `loop'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `fork'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `each'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `block in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `loop'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `fork'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `each'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:63:in `block in go'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `loop'\n    from /Users/simeon/.rbenv/versions/1.9.3-p194-perf/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus.rb:61:in `go'\n    from -e:1:in `<main>'\n```\n\n`localhost:6379`? OK.  I started a second Redis server on port 6379. Looks like zeus test is ready.\n\n```\nzeus cucumber [run to see backtrace]\nzeus test (alias: rspec, testrb)\n```\n\n```\n$ zeus rspec spec/models/user_spec.rb\n...\nFinished in 2.64 seconds\n30 examples, 0 failures\n```\n\nWoot!  \n\nThis app doesn't have any features, so I didn't try cucumber.\n\n@burke  Hope this helps.  If you have any questions, please let me know.  I'll go back to using 0.4.4.  Thanks so much for this gem; its awesome!\n. More info for debugging:\n\n```\n$ bundle exec rails console test\nLoading test environment (Rails 3.2.8)\n[1] pry(main)> ObjectSpace.each_object(Redis::Client).each {|r| puts r.inspect}\n#<Redis::Client:0x007fedf60456a0 @path=nil, @host=\"localhost\", @port=6379, @db=1, @timeout=5.0, @password=nil, @logger=nil, @reconnect=true, @connection=#<Redis::Connection::Ruby:0x007fedf6045510 @sock=nil>>\n#<Redis::Client:0x007fedf6053480 @path=nil, @host=\"localhost\", @port=6380, @db=0, @timeout=5.0, @password=nil, @logger=nil, @reconnect=true, @connection=#<Redis::Connection::Ruby:0x007fedf6053430 @sock=nil>>\n#<Redis::Client:0x007fedf60d5bb0 @path=nil, @host=\"localhost\", @port=6379, @db=8, @timeout=5.0, @password=nil, @logger=nil, @reconnect=true, @connection=#<Redis::Connection::Ruby:0x007fedf60d5b38 @sock=nil>>\n=> 3\n```\n\n```\n$ bundle exec rails console\nLoading development environment (Rails 3.2.8)\n[1] pry(main)> ObjectSpace.each_object(Redis::Client).each {|r| puts r.inspect}\n#<Redis::Client:0x007fe2107b30a0 @path=nil, @host=\"localhost\", @port=6379, @db=1, @timeout=5.0, @password=nil, @logger=nil, @reconnect=true, @connection=#<Redis::Connection::Ruby:0x007fe2107b2e98 @sock=nil>>\n#<Redis::Client:0x007fe210d636d0 @path=nil, @host=\"localhost\", @port=6379, @db=8, @timeout=5.0, @password=nil, @logger=nil, @reconnect=true, @connection=#<Redis::Connection::Ruby:0x007fe210d63608 @sock=nil>>\n#<Redis::Client:0x007fe210e31c88 @path=nil, @host=\"localhost\", @port=6379, @db=0, @timeout=5.0, @password=nil, @logger=nil, @reconnect=true, @connection=#<Redis::Connection::Ruby:0x007fe210e31be8 @sock=nil>>\n#<Redis::Client:0x007fe210e56790 @path=nil, @host=\"localhost\", @port=6379, @db=1, @timeout=5.0, @password=nil, @logger=nil, @reconnect=true, @connection=#<Redis::Connection::Ruby:0x007fe210e56150 @sock=nil>>\n=> 4\n```\n\nI think the answer is to ensure `Redis::Client` is not defined when it is not needed.  Thoughts?\n. ",
    "hajee": "I have the same issue. I'm using rails 3.2.7 and rvm 1.16.6. \n\nDid anybody made any progress?? I really miss zeus.\n. I have the same issue. I'm using rails 3.2.7 and rvm 1.16.6. \n\nDid anybody made any progress?? I really miss zeus.\n. ",
    "fatum": "I have the same issue too.\n\n## System\n\nProductName:    Mac OS X\nProductVersion: 10.7.4\nBuildVersion:   11E53\n\nRails 3.2.6\n. I have the same issue too.\n\n## System\n\nProductName:    Mac OS X\nProductVersion: 10.7.4\nBuildVersion:   11E53\n\nRails 3.2.6\n. ",
    "ottbot": "Seeing this on Linux, with rubies:\n\nruby-1.9.3-p194 [ x86_64 ]\nruby-1.9.3-p194-perf [ x86_64 ]\n. Seeing this on Linux, with rubies:\n\nruby-1.9.3-p194 [ x86_64 ]\nruby-1.9.3-p194-perf [ x86_64 ]\n. ",
    "richardjohansson": "I'm having these issues, but now simply running zeus version 0.4.4 and it works like a charm. I'm not sure what features I'm missing out on thought. :)\n. @simeonwillbanks Well it just works. :) I tried a few other releases but had the same problem. Would not spend more time debugging this since 0.4.4 does the job, for what I use it for. (rspec, console, rake)\n. I'm having these issues, but now simply running zeus version 0.4.4 and it works like a charm. I'm not sure what features I'm missing out on thought. :)\n. @simeonwillbanks Well it just works. :) I tried a few other releases but had the same problem. Would not spend more time debugging this since 0.4.4 does the job, for what I use it for. (rspec, console, rake)\n. ",
    "sporto": "Same issue here\n\nMac 10.8.2\nRVM 1.16\nruby-1.9.3-p327-perf\nrails 3.2.9\nzeus 0.12.0\n. Version 0.13 fixed this for me\n. Same issue here\n\nMac 10.8.2\nRVM 1.16\nruby-1.9.3-p327-perf\nrails 3.2.9\nzeus 0.12.0\n. Version 0.13 fixed this for me\n. ",
    "parndt": "Yup 10.8.2\n. Yup 10.8.2\n. ",
    "jasoncodes": "You can run `reset` to clean up your terminal and make it usable again. It would be nice if Zeus reset the terminal state automatically after crashing.\n. It looks like `stty sane` is even nicer. I am now employing a workaround based on what was mentioned in #137:\n\n``` sh\nzeus() {\n  \"$(which zeus)\" \"$@\"\n  RETVAL=$?\n  stty sane\n  return $RETVAL\n}\n```\n. You can run `reset` to clean up your terminal and make it usable again. It would be nice if Zeus reset the terminal state automatically after crashing.\n. It looks like `stty sane` is even nicer. I am now employing a workaround based on what was mentioned in #137:\n\n``` sh\nzeus() {\n  \"$(which zeus)\" \"$@\"\n  RETVAL=$?\n  stty sane\n  return $RETVAL\n}\n```\n. ",
    "andreychernih": "+1 for fixing this issue, pretty annoying\n. +1 for fixing this issue, pretty annoying\n. ",
    "gotva": "The same problem for rspec\n\nInstall the gem\nPerform init and start\n\nzeus rspec spec/models/social_profile_spec.rb\nand I get the number of errors\n\n```\n Failure/Error: social_profile = stub_model(SocialProfile, :is_token_valid? => true, :provider => \"vkontakte\")\n NoMethodError:\n   undefined method `query_options' for nil:NilClass\n # ./spec/models/social_profile_spec.rb:240:in `block (4 levels) in <top (required)>'\n # -e:1:in `<main>'\n```\n. You are right - changing the code above on database_cleaner helps to start tests.\nI got some other problems but it is other story (I think database_cleaner should be setup properly)\nThank you.\n. The same problem for rspec\n\nInstall the gem\nPerform init and start\n\nzeus rspec spec/models/social_profile_spec.rb\nand I get the number of errors\n\n```\n Failure/Error: social_profile = stub_model(SocialProfile, :is_token_valid? => true, :provider => \"vkontakte\")\n NoMethodError:\n   undefined method `query_options' for nil:NilClass\n # ./spec/models/social_profile_spec.rb:240:in `block (4 levels) in <top (required)>'\n # -e:1:in `<main>'\n```\n. You are right - changing the code above on database_cleaner helps to start tests.\nI got some other problems but it is other story (I think database_cleaner should be setup properly)\nThank you.\n. ",
    "ArnisL": "Got similar issue. Don`t know how to reproduce it though:\nhttps://gist.github.com/3793896\n. Got similar issue. Don`t know how to reproduce it though:\nhttps://gist.github.com/3793896\n. ",
    "swebb": "I'm getting something similar:\n\nuname -a\nLinux steve-imac 3.0.0-26-generic #42-Ubuntu SMP Wed Sep 5 08:37:08 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux\n\nruby -v\nruby 1.9.3p0 (2011-10-30 revision 33570) [x86_64-linux]\n\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x8 pc=0x48b1cd]\n\ngoroutine 3334 [running]:\nsync/atomic.CompareAndSwapUint32(0x8, 0x100000000, 0x200000002, 0xf8400514f0, 0x4735b0, ...)\n    /usr/local/go/src/pkg/sync/atomic/asm_amd64.s:12 +0xd\nsync.(_Mutex).Lock(0x8, 0xf840041870)\n    /usr/local/go/src/pkg/sync/mutex.go:40 +0x35\ngithub.com/burke/zeus/go/unixsocket.(_Usock).ReadMessage(0x0, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:121 +0x50\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).handleMessages(0xf840069180, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:343 +0x29\ncreated by github.com/burke/zeus/go/zeusmaster.(_SlaveNode).doCrashedOrReadyState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x9b\n\ngoroutine 1 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster.Run(0x7fff6a940101, 0x100000005)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:51 +0x372\nmain.main()\n    /Users/burke/go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:37 +0x2a1\n\ngoroutine 2 [syscall]:\ncreated by runtime.main\n    /usr/local/go/src/pkg/runtime/proc.c:221\n\ngoroutine 3 [syscall]:\nos/signal.loop()\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:20 +0x1c\ncreated by os/signal.init\u00b71\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:26 +0x2f\n\ngoroutine 4 [select]:\ngithub.com/burke/zeus/go/zeusmaster.StartSlaveMonitor(0xf840041870, 0xf840001af0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:48 +0x2fb\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:32 +0x17b\n\ngoroutine 5 [select]:\ngithub.com/burke/zeus/go/zeusmaster.StartClientHandler(0xf840041870, 0xf840001b40, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:42 +0x232\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:33 +0x19f\n\ngoroutine 6 [select]:\ngithub.com/burke/zeus/go/zeusmaster.StartFileMonitor(0xf840041870, 0xf840001b90, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:37 +0x1bf\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:34 +0x1c3\n\ngoroutine 7 [runnable]:\nsyscall.Syscall()\n    /usr/local/go/src/pkg/syscall/asm_linux_amd64.s:36 +0x64\ngithub.com/burke/ttyutils.ioctl(0x1, 0x5413, 0xf84005e7d0, 0x7fafa23846f8, 0x4004047f8, ...)\n    /Users/burke/go/src/github.com/burke/ttyutils/ttyutils_linux.go:47 +0x4b\ngithub.com/burke/ttyutils.Winsize(0xf84005e008, 0x7fafa2362de0, 0x411002, 0xf840233598)\n    /Users/burke/go/src/github.com/burke/ttyutils/ttyutils_linux.go:24 +0x69\ngithub.com/burke/zeus/go/zeusmaster.(_StatusChart).lengthOfOutput(0xf840001eb0, 0x0, 0x0, 0xf840068ba0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:123 +0x28\ngithub.com/burke/zeus/go/zeusmaster.(_StatusChart).draw(0xf840001eb0, 0xf840068ba0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:104 +0x6f\ngithub.com/burke/zeus/go/zeusmaster.StartStatusChart(0xf840041870, 0xf840001be0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:70 +0x4c5\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:35 +0x1e7\n\ngoroutine 8 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster._func_005(0xf84005e1c8, 0xf84005e1a0, 0xf84005e1a8, 0xf84005e1b0, 0xf84005e1b8, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:42 +0x31\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:44 +0x314\n\ngoroutine 9 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster._func_006(0xf84005e1a0, 0xf84005e1a8, 0xf84005e1b0, 0xf84005e1b8, 0xf84005e1c0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:47 +0x31\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:49 +0x356\n\ngoroutine 10 [finalizer wait]:\ncreated by runtime.gc\n    /usr/local/go/src/pkg/runtime/mgc0.c:882\n\ngoroutine 11 [syscall]:\ncreated by addtimer\n    /usr/local/go/src/pkg/runtime/ztime_amd64.c:72\n\ngoroutine 12 [syscall]:\nsyscall.Syscall6()\n    /usr/local/go/src/pkg/syscall/asm_linux_amd64.s:40 +0x5\nsyscall.EpollWait(0xf80000000f, 0xf8400e0010, 0xa0000000a, 0xffffffff, 0xc, ...)\n    /usr/local/go/src/pkg/syscall/zerrors_linux_amd64.go:1781 +0xa1\nnet.(_pollster).WaitFD(0xf8400e0000, 0xf840040c40, 0x0, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/net/fd_linux.go:146 +0x110\nnet.(_pollServer).Run(0xf840040c40, 0x0)\n    /usr/local/go/src/pkg/net/fd.go:236 +0xe4\ncreated by net.newPollServer\n    /usr/local/go/src/pkg/net/newpollserver.go:35 +0x382\n\ngoroutine 13 [chan receive]:\nnet.(_pollServer).WaitRead(0xf840040c40, 0xf840063510, 0xf840041150, 0xb, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(_netFD).ReadMsg(0xf840063510, 0xf840134400, 0x40000000400, 0xf84025c380, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\nnet.(_UnixConn).ReadMsgUnix(0xf84005e2d0, 0xf840134400, 0x40000000400, 0xf84025c380, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf840040640, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadFD(0xf840040640, 0xf800000000, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:109 +0xaa\ngithub.com/burke/zeus/go/zeusmaster._func_004(0xf84005e1e8, 0xf84005e2c8, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:35 +0x28\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:41 +0x195\n\ngoroutine 14 [semacquire]:\nsync.runtime_Semacquire(0xf84005e848, 0xf84005e848)\n    /usr/local/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\nsync.(_Cond).Wait(0xf8400402c0, 0xf800000001)\n    /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).WaitUntilReadyOrCrashed(0xf840069180, 0x42e770)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:64 +0x133\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).doWaitingState(0xf840069240, 0x1, 0x50f454, 0x5700000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:148 +0x51\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf840069240, 0xf840051500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:121 +0x2cf\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 15 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).doUnbootedState(0xf840069180, 0xf840051500, 0x0, 0x5500000000, 0x0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:169 +0x3c7\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf840069180, 0xf840051500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:123 +0x271\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 16 [semacquire]:\nsync.runtime_Semacquire(0xf84005e760, 0x417c00)\n    /usr/local/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\nsync.(_Cond).Wait(0xf840040040, 0xf800000001)\n    /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).WaitUntilReadyOrCrashed(0xf840069300, 0x42e770)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:64 +0x133\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).doWaitingState(0xf840069480, 0x1, 0x50f454, 0x5700000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:148 +0x51\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf840069480, 0xf840051500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:121 +0x2cf\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 17 [select]:\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).doCrashedOrReadyState(0xf840069000, 0x1, 0x50f264, 0x5200000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x274\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf840069000, 0xf840051500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:129 +0x208\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 18 [chan receive]:\nnet.(_pollServer).WaitRead(0xf840040c40, 0xf8401e6bd0, 0xf840041150, 0xb, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(_netFD).ReadMsg(0xf8401e6bd0, 0xf840260000, 0x40000000400, 0xf840265600, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\nnet.(_UnixConn).ReadMsgUnix(0xf84005e738, 0xf840260000, 0x40000000400, 0xf840265600, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf840353a80, 0x0, 0x0, 0x40fa47)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(_Usock).ReadMessage(0xf840353a80, 0x0, 0xf800000000, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xc5\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).doBootingState(0xf840069300, 0x0, 0x0, 0x4200000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:185 +0x43\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf840069300, 0xf840051500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:125 +0x10b\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 19 [semacquire]:\nsync.runtime_Semacquire(0xf84005e760, 0xf84005e760)\n    /usr/local/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\nsync.(_Cond).Wait(0xf840040040, 0xf800000001)\n    /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).WaitUntilReadyOrCrashed(0xf840069300, 0x42e770)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:64 +0x133\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).doWaitingState(0xf8400693c0, 0x1, 0x50f454, 0x5700000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:148 +0x51\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf8400693c0, 0xf840051500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:121 +0x2cf\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 20 [runnable]:\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).doCrashedOrReadyState(0xf8400690c0, 0x1, 0x50f264, 0x5200000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x274\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf8400690c0, 0xf840051500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:129 +0x208\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 21 [chan receive]:\nnet.(_pollServer).WaitRead(0xf840040c40, 0xf8400f1000, 0xf840041150, 0xb, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(_netFD).accept(0xf8400f1000, 0x46b623, 0x0, 0xf8400439f0, 0xf84005e040, ...)\n    /usr/local/go/src/pkg/net/fd.go:622 +0x20d\nnet.(*UnixListener).AcceptUnix(0xf8400ef420, 0xf8400f4000, 0xf840286bc0, 0x0)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:350 +0x4d\ngithub.com/burke/zeus/go/zeusmaster._func_001(0xf84005e038, 0xf84005e3b0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:32 +0x28\ncreated by github.com/burke/zeus/go/zeusmaster.StartClientHandler\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:39 +0x15a\n\ngoroutine 22 [syscall]:\nsyscall.Syscall6()\n    /usr/local/go/src/pkg/syscall/asm_linux_amd64.s:40 +0x5\nsyscall.wait4(0x4a28, 0xf84005e3c8, 0x0, 0xf8400f1120, 0x1, ...)\n    /usr/local/go/src/pkg/syscall/zerrors_linux_amd64.go:1599 +0x81\nsyscall.Wait4(0x4a28, 0x7fafa205ed8c, 0x0, 0xf8400f1120, 0x488bd7, ...)\n    /usr/local/go/src/pkg/syscall/syscall_linux.go:178 +0x6a\nos.(_Process).wait(0xf8400ef440, 0xf84005e4a0, 0x0, 0x0, 0x488e79, ...)\n    /usr/local/go/src/pkg/os/exec_unix.go:22 +0xe1\nos.(_Process).Wait(0xf8400ef440, 0x0, 0x0, 0x7fafa205ee60)\n    /usr/local/go/src/pkg/os/doc.go:43 +0x25\nos/exec.(_Cmd).Wait(0xf84010f000, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:302 +0x1b7\nos/exec.(_Cmd).Run(0xf84010f000, 0x4e2e40, 0xf8400e1000, 0xf840057d20)\n    /usr/local/go/src/pkg/os/exec/exec.go:226 +0x6d\nos/exec.(_Cmd).CombinedOutput(0xf84010f000, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:346 +0x246\ngithub.com/burke/zeus/go/zeusmaster.babysitRootProcess(0xf84010f000, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:328 +0x25\ncreated by github.com/burke/zeus/go/zeusmaster.(_SlaveNode).doUnbootedState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:164 +0x38b\n\ngoroutine 23 [syscall]:\nsyscall.Syscall()\n    /usr/local/go/src/pkg/syscall/asm_linux_amd64.s:15 +0x5\nsyscall.Read(0x7faf0000000b, 0xf840123000, 0x80000000800, 0xf840048700, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/zerrors_linux_amd64.go:2137 +0x78\nos.(_File).read(0xf84005e340, 0xf840123000, 0x80000000800, 0x4a4298, 0x0, ...)\n    /usr/local/go/src/pkg/os/file_unix.go:163 +0x58\nos.(_File).Read(0xf84005e340, 0xf840123000, 0x80000000800, 0xa0000003d, 0x0, ...)\n    /usr/local/go/src/pkg/os/file.go:95 +0x83\ngithub.com/burke/zeus/go/zeusmaster._func_002()\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:80 +0x84\ncreated by github.com/burke/zeus/go/zeusmaster.startWrapper\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:90 +0x207\n\ngoroutine 24 [syscall]:\nsyscall.Syscall6()\n    /usr/local/go/src/pkg/syscall/asm_linux_amd64.s:40 +0x5\nsyscall.wait4(0x4a25, 0xf84005e4e0, 0x0, 0xf840124000, 0x1, ...)\n    /usr/local/go/src/pkg/syscall/zerrors_linux_amd64.go:1599 +0x81\nsyscall.Wait4(0x4a25, 0x7fafa203fe64, 0x0, 0xf840124000, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/syscall_linux.go:178 +0x6a\nos.(_Process).wait(0xf8400efc40, 0x0, 0x0, 0x0, 0x488e79, ...)\n    /usr/local/go/src/pkg/os/exec_unix.go:22 +0xe1\nos.(_Process).Wait(0xf8400efc40, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/doc.go:43 +0x25\nos/exec.(*Cmd).Wait(0xf84009d000, 0x0, 0x0, 0x40f470)\n    /usr/local/go/src/pkg/os/exec/exec.go:302 +0x1b7\ngithub.com/burke/zeus/go/zeusmaster._func_003(0xf84005e048, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:93 +0x29\ncreated by github.com/burke/zeus/go/zeusmaster.startWrapper\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:95 +0x21e\n\ngoroutine 25 [syscall]:\nsyscall.Syscall()\n    /usr/local/go/src/pkg/syscall/asm_linux_amd64.s:15 +0x5\nsyscall.Read(0xc, 0xf8402666a6, 0x75a0000075a, 0x63, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/zerrors_linux_amd64.go:2137 +0x78\nos.(_File).read(0xf84005e498, 0xf8402666a6, 0x75a0000075a, 0x63, 0x0, ...)\n    /usr/local/go/src/pkg/os/file_unix.go:163 +0x58\nos.(_File).Read(0xf84005e498, 0xf8402666a6, 0x75a0000075a, 0x60000000063, 0x0, ...)\n    /usr/local/go/src/pkg/os/file.go:95 +0x83\nbytes.(_Buffer).ReadFrom(0xf8400e1000, 0xf840043f60, 0xf84005e498, 0x6a6, 0x0, ...)\n    /usr/local/go/src/pkg/bytes/buffer.go:153 +0x199\nio.Copy(0xf840057d20, 0xf8400e1000, 0xf840043f60, 0xf84005e498, 0x0, ...)\n    /usr/local/go/src/pkg/io/io.go:340 +0xc2\nos/exec._func_003(0xf8400518e0, 0xf84005e368, 0x48ac36, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/os/exec/exec.go:201 +0x5a\nos/exec._func_004(0xf84005e488, 0xf840110040, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:268 +0x1e\ncreated by os/exec.(_Cmd).Start\n    /usr/local/go/src/pkg/os/exec/exec.go:269 +0x65c\n\ngoroutine 27 [chan receive]:\nnet.(_pollServer).WaitRead(0xf840040c40, 0xf840159000, 0xf840041150, 0xb, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(_netFD).ReadMsg(0xf840159000, 0xf840113c00, 0x40000000400, 0xf8400ef340, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\nnet.(_UnixConn).ReadMsgUnix(0xf84005e6c0, 0xf840113c00, 0x40000000400, 0xf8400ef340, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf84015a000, 0x0, 0x0, 0xf84016c29b)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(_Usock).ReadMessage(0xf84015a000, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xc5\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).handleMessages(0xf840069000, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:343 +0x29\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x9b\n\ngoroutine 414 [chan receive]:\nnet.(_pollServer).WaitRead(0xf840040c40, 0xf8400f13f0, 0xf840041150, 0xb, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(_netFD).ReadMsg(0xf8400f13f0, 0xf84015ec00, 0x40000000400, 0xf8401be4e0, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\nnet.(_UnixConn).ReadMsgUnix(0xf84005e2f0, 0xf84015ec00, 0x40000000400, 0xf8401be4e0, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf840186740, 0x0, 0x0, 0xf8401c1066)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(_Usock).ReadMessage(0xf840186740, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xc5\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).handleMessages(0xf8400690c0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:343 +0x29\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x9b\n\ngoroutine 2237 [chan receive]:\nnet.(_pollServer).WaitRead(0xf840040c40, 0xf8401e6480, 0xf840041150, 0xb, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(_netFD).ReadMsg(0xf8401e6480, 0xf84021ac00, 0x40000000400, 0xf8400efe20, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\nnet.(_UnixConn).ReadMsgUnix(0xf84005e458, 0xf84021ac00, 0x40000000400, 0xf8400efe20, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf84021b5c0, 0x0, 0x0, 0xf84033a113)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(_Usock).ReadMessage(0xf84021b5c0, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xc5\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).handleMessages(0xf840069300, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:343 +0x29\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x9b\n\ngoroutine 3329 [chan receive]:\nnet.(_pollServer).WaitRead(0xf840040c40, 0xf840341b40, 0xf840041150, 0xb, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(_netFD).ReadMsg(0xf840341b40, 0xf840113000, 0x40000000400, 0xf840265b40, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\nnet.(_UnixConn).ReadMsgUnix(0xf84005e550, 0xf840113000, 0x40000000400, 0xf840265b40, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf840286c00, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadMessage(0xf840286c00, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xc5\ngithub.com/burke/zeus/go/zeusmaster.receiveExitStatus(0xf840286c00, 0x0, 0x0, 0x0, 0x0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:159 +0x65\ngithub.com/burke/zeus/go/zeusmaster.handleClientConnection(0xf840041870, 0xf840286bc0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:87 +0x3e3\ncreated by github.com/burke/zeus/go/zeusmaster.StartClientHandler\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:48 +0x21d\n. I'm getting something similar:\n\nuname -a\nLinux steve-imac 3.0.0-26-generic #42-Ubuntu SMP Wed Sep 5 08:37:08 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux\n\nruby -v\nruby 1.9.3p0 (2011-10-30 revision 33570) [x86_64-linux]\n\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x8 pc=0x48b1cd]\n\ngoroutine 3334 [running]:\nsync/atomic.CompareAndSwapUint32(0x8, 0x100000000, 0x200000002, 0xf8400514f0, 0x4735b0, ...)\n    /usr/local/go/src/pkg/sync/atomic/asm_amd64.s:12 +0xd\nsync.(_Mutex).Lock(0x8, 0xf840041870)\n    /usr/local/go/src/pkg/sync/mutex.go:40 +0x35\ngithub.com/burke/zeus/go/unixsocket.(_Usock).ReadMessage(0x0, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:121 +0x50\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).handleMessages(0xf840069180, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:343 +0x29\ncreated by github.com/burke/zeus/go/zeusmaster.(_SlaveNode).doCrashedOrReadyState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x9b\n\ngoroutine 1 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster.Run(0x7fff6a940101, 0x100000005)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:51 +0x372\nmain.main()\n    /Users/burke/go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:37 +0x2a1\n\ngoroutine 2 [syscall]:\ncreated by runtime.main\n    /usr/local/go/src/pkg/runtime/proc.c:221\n\ngoroutine 3 [syscall]:\nos/signal.loop()\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:20 +0x1c\ncreated by os/signal.init\u00b71\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:26 +0x2f\n\ngoroutine 4 [select]:\ngithub.com/burke/zeus/go/zeusmaster.StartSlaveMonitor(0xf840041870, 0xf840001af0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:48 +0x2fb\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:32 +0x17b\n\ngoroutine 5 [select]:\ngithub.com/burke/zeus/go/zeusmaster.StartClientHandler(0xf840041870, 0xf840001b40, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:42 +0x232\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:33 +0x19f\n\ngoroutine 6 [select]:\ngithub.com/burke/zeus/go/zeusmaster.StartFileMonitor(0xf840041870, 0xf840001b90, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:37 +0x1bf\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:34 +0x1c3\n\ngoroutine 7 [runnable]:\nsyscall.Syscall()\n    /usr/local/go/src/pkg/syscall/asm_linux_amd64.s:36 +0x64\ngithub.com/burke/ttyutils.ioctl(0x1, 0x5413, 0xf84005e7d0, 0x7fafa23846f8, 0x4004047f8, ...)\n    /Users/burke/go/src/github.com/burke/ttyutils/ttyutils_linux.go:47 +0x4b\ngithub.com/burke/ttyutils.Winsize(0xf84005e008, 0x7fafa2362de0, 0x411002, 0xf840233598)\n    /Users/burke/go/src/github.com/burke/ttyutils/ttyutils_linux.go:24 +0x69\ngithub.com/burke/zeus/go/zeusmaster.(_StatusChart).lengthOfOutput(0xf840001eb0, 0x0, 0x0, 0xf840068ba0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:123 +0x28\ngithub.com/burke/zeus/go/zeusmaster.(_StatusChart).draw(0xf840001eb0, 0xf840068ba0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:104 +0x6f\ngithub.com/burke/zeus/go/zeusmaster.StartStatusChart(0xf840041870, 0xf840001be0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:70 +0x4c5\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:35 +0x1e7\n\ngoroutine 8 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster._func_005(0xf84005e1c8, 0xf84005e1a0, 0xf84005e1a8, 0xf84005e1b0, 0xf84005e1b8, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:42 +0x31\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:44 +0x314\n\ngoroutine 9 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster._func_006(0xf84005e1a0, 0xf84005e1a8, 0xf84005e1b0, 0xf84005e1b8, 0xf84005e1c0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:47 +0x31\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:49 +0x356\n\ngoroutine 10 [finalizer wait]:\ncreated by runtime.gc\n    /usr/local/go/src/pkg/runtime/mgc0.c:882\n\ngoroutine 11 [syscall]:\ncreated by addtimer\n    /usr/local/go/src/pkg/runtime/ztime_amd64.c:72\n\ngoroutine 12 [syscall]:\nsyscall.Syscall6()\n    /usr/local/go/src/pkg/syscall/asm_linux_amd64.s:40 +0x5\nsyscall.EpollWait(0xf80000000f, 0xf8400e0010, 0xa0000000a, 0xffffffff, 0xc, ...)\n    /usr/local/go/src/pkg/syscall/zerrors_linux_amd64.go:1781 +0xa1\nnet.(_pollster).WaitFD(0xf8400e0000, 0xf840040c40, 0x0, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/net/fd_linux.go:146 +0x110\nnet.(_pollServer).Run(0xf840040c40, 0x0)\n    /usr/local/go/src/pkg/net/fd.go:236 +0xe4\ncreated by net.newPollServer\n    /usr/local/go/src/pkg/net/newpollserver.go:35 +0x382\n\ngoroutine 13 [chan receive]:\nnet.(_pollServer).WaitRead(0xf840040c40, 0xf840063510, 0xf840041150, 0xb, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(_netFD).ReadMsg(0xf840063510, 0xf840134400, 0x40000000400, 0xf84025c380, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\nnet.(_UnixConn).ReadMsgUnix(0xf84005e2d0, 0xf840134400, 0x40000000400, 0xf84025c380, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf840040640, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadFD(0xf840040640, 0xf800000000, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:109 +0xaa\ngithub.com/burke/zeus/go/zeusmaster._func_004(0xf84005e1e8, 0xf84005e2c8, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:35 +0x28\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:41 +0x195\n\ngoroutine 14 [semacquire]:\nsync.runtime_Semacquire(0xf84005e848, 0xf84005e848)\n    /usr/local/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\nsync.(_Cond).Wait(0xf8400402c0, 0xf800000001)\n    /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).WaitUntilReadyOrCrashed(0xf840069180, 0x42e770)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:64 +0x133\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).doWaitingState(0xf840069240, 0x1, 0x50f454, 0x5700000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:148 +0x51\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf840069240, 0xf840051500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:121 +0x2cf\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 15 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).doUnbootedState(0xf840069180, 0xf840051500, 0x0, 0x5500000000, 0x0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:169 +0x3c7\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf840069180, 0xf840051500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:123 +0x271\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 16 [semacquire]:\nsync.runtime_Semacquire(0xf84005e760, 0x417c00)\n    /usr/local/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\nsync.(_Cond).Wait(0xf840040040, 0xf800000001)\n    /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).WaitUntilReadyOrCrashed(0xf840069300, 0x42e770)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:64 +0x133\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).doWaitingState(0xf840069480, 0x1, 0x50f454, 0x5700000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:148 +0x51\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf840069480, 0xf840051500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:121 +0x2cf\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 17 [select]:\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).doCrashedOrReadyState(0xf840069000, 0x1, 0x50f264, 0x5200000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x274\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf840069000, 0xf840051500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:129 +0x208\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 18 [chan receive]:\nnet.(_pollServer).WaitRead(0xf840040c40, 0xf8401e6bd0, 0xf840041150, 0xb, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(_netFD).ReadMsg(0xf8401e6bd0, 0xf840260000, 0x40000000400, 0xf840265600, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\nnet.(_UnixConn).ReadMsgUnix(0xf84005e738, 0xf840260000, 0x40000000400, 0xf840265600, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf840353a80, 0x0, 0x0, 0x40fa47)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(_Usock).ReadMessage(0xf840353a80, 0x0, 0xf800000000, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xc5\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).doBootingState(0xf840069300, 0x0, 0x0, 0x4200000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:185 +0x43\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).Run(0xf840069300, 0xf840051500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:125 +0x10b\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 19 [semacquire]:\nsync.runtime_Semacquire(0xf84005e760, 0xf84005e760)\n    /usr/local/go/src/pkg/runtime/zsema_amd64.c:146 +0x25\nsync.(_Cond).Wait(0xf840040040, 0xf800000001)\n    /usr/local/go/src/pkg/sync/cond.go:67 +0xaa\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).WaitUntilReadyOrCrashed(0xf840069300, 0x42e770)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:64 +0x133\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).doWaitingState(0xf8400693c0, 0x1, 0x50f454, 0x5700000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:148 +0x51\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf8400693c0, 0xf840051500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:121 +0x2cf\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 20 [runnable]:\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).doCrashedOrReadyState(0xf8400690c0, 0x1, 0x50f264, 0x5200000001)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:228 +0x274\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).Run(0xf8400690c0, 0xf840051500, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:129 +0x208\ncreated by github.com/burke/zeus/go/zeusmaster.StartSlaveMonitor\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:44 +0x203\n\ngoroutine 21 [chan receive]:\nnet.(_pollServer).WaitRead(0xf840040c40, 0xf8400f1000, 0xf840041150, 0xb, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(_netFD).accept(0xf8400f1000, 0x46b623, 0x0, 0xf8400439f0, 0xf84005e040, ...)\n    /usr/local/go/src/pkg/net/fd.go:622 +0x20d\nnet.(*UnixListener).AcceptUnix(0xf8400ef420, 0xf8400f4000, 0xf840286bc0, 0x0)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:350 +0x4d\ngithub.com/burke/zeus/go/zeusmaster._func_001(0xf84005e038, 0xf84005e3b0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:32 +0x28\ncreated by github.com/burke/zeus/go/zeusmaster.StartClientHandler\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:39 +0x15a\n\ngoroutine 22 [syscall]:\nsyscall.Syscall6()\n    /usr/local/go/src/pkg/syscall/asm_linux_amd64.s:40 +0x5\nsyscall.wait4(0x4a28, 0xf84005e3c8, 0x0, 0xf8400f1120, 0x1, ...)\n    /usr/local/go/src/pkg/syscall/zerrors_linux_amd64.go:1599 +0x81\nsyscall.Wait4(0x4a28, 0x7fafa205ed8c, 0x0, 0xf8400f1120, 0x488bd7, ...)\n    /usr/local/go/src/pkg/syscall/syscall_linux.go:178 +0x6a\nos.(_Process).wait(0xf8400ef440, 0xf84005e4a0, 0x0, 0x0, 0x488e79, ...)\n    /usr/local/go/src/pkg/os/exec_unix.go:22 +0xe1\nos.(_Process).Wait(0xf8400ef440, 0x0, 0x0, 0x7fafa205ee60)\n    /usr/local/go/src/pkg/os/doc.go:43 +0x25\nos/exec.(_Cmd).Wait(0xf84010f000, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:302 +0x1b7\nos/exec.(_Cmd).Run(0xf84010f000, 0x4e2e40, 0xf8400e1000, 0xf840057d20)\n    /usr/local/go/src/pkg/os/exec/exec.go:226 +0x6d\nos/exec.(_Cmd).CombinedOutput(0xf84010f000, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:346 +0x246\ngithub.com/burke/zeus/go/zeusmaster.babysitRootProcess(0xf84010f000, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:328 +0x25\ncreated by github.com/burke/zeus/go/zeusmaster.(_SlaveNode).doUnbootedState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:164 +0x38b\n\ngoroutine 23 [syscall]:\nsyscall.Syscall()\n    /usr/local/go/src/pkg/syscall/asm_linux_amd64.s:15 +0x5\nsyscall.Read(0x7faf0000000b, 0xf840123000, 0x80000000800, 0xf840048700, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/zerrors_linux_amd64.go:2137 +0x78\nos.(_File).read(0xf84005e340, 0xf840123000, 0x80000000800, 0x4a4298, 0x0, ...)\n    /usr/local/go/src/pkg/os/file_unix.go:163 +0x58\nos.(_File).Read(0xf84005e340, 0xf840123000, 0x80000000800, 0xa0000003d, 0x0, ...)\n    /usr/local/go/src/pkg/os/file.go:95 +0x83\ngithub.com/burke/zeus/go/zeusmaster._func_002()\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:80 +0x84\ncreated by github.com/burke/zeus/go/zeusmaster.startWrapper\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:90 +0x207\n\ngoroutine 24 [syscall]:\nsyscall.Syscall6()\n    /usr/local/go/src/pkg/syscall/asm_linux_amd64.s:40 +0x5\nsyscall.wait4(0x4a25, 0xf84005e4e0, 0x0, 0xf840124000, 0x1, ...)\n    /usr/local/go/src/pkg/syscall/zerrors_linux_amd64.go:1599 +0x81\nsyscall.Wait4(0x4a25, 0x7fafa203fe64, 0x0, 0xf840124000, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/syscall_linux.go:178 +0x6a\nos.(_Process).wait(0xf8400efc40, 0x0, 0x0, 0x0, 0x488e79, ...)\n    /usr/local/go/src/pkg/os/exec_unix.go:22 +0xe1\nos.(_Process).Wait(0xf8400efc40, 0x0, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/doc.go:43 +0x25\nos/exec.(*Cmd).Wait(0xf84009d000, 0x0, 0x0, 0x40f470)\n    /usr/local/go/src/pkg/os/exec/exec.go:302 +0x1b7\ngithub.com/burke/zeus/go/zeusmaster._func_003(0xf84005e048, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:93 +0x29\ncreated by github.com/burke/zeus/go/zeusmaster.startWrapper\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/filemonitor.go:95 +0x21e\n\ngoroutine 25 [syscall]:\nsyscall.Syscall()\n    /usr/local/go/src/pkg/syscall/asm_linux_amd64.s:15 +0x5\nsyscall.Read(0xc, 0xf8402666a6, 0x75a0000075a, 0x63, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/zerrors_linux_amd64.go:2137 +0x78\nos.(_File).read(0xf84005e498, 0xf8402666a6, 0x75a0000075a, 0x63, 0x0, ...)\n    /usr/local/go/src/pkg/os/file_unix.go:163 +0x58\nos.(_File).Read(0xf84005e498, 0xf8402666a6, 0x75a0000075a, 0x60000000063, 0x0, ...)\n    /usr/local/go/src/pkg/os/file.go:95 +0x83\nbytes.(_Buffer).ReadFrom(0xf8400e1000, 0xf840043f60, 0xf84005e498, 0x6a6, 0x0, ...)\n    /usr/local/go/src/pkg/bytes/buffer.go:153 +0x199\nio.Copy(0xf840057d20, 0xf8400e1000, 0xf840043f60, 0xf84005e498, 0x0, ...)\n    /usr/local/go/src/pkg/io/io.go:340 +0xc2\nos/exec._func_003(0xf8400518e0, 0xf84005e368, 0x48ac36, 0x0, 0x0, ...)\n    /usr/local/go/src/pkg/os/exec/exec.go:201 +0x5a\nos/exec._func_004(0xf84005e488, 0xf840110040, 0x0, 0x0)\n    /usr/local/go/src/pkg/os/exec/exec.go:268 +0x1e\ncreated by os/exec.(_Cmd).Start\n    /usr/local/go/src/pkg/os/exec/exec.go:269 +0x65c\n\ngoroutine 27 [chan receive]:\nnet.(_pollServer).WaitRead(0xf840040c40, 0xf840159000, 0xf840041150, 0xb, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(_netFD).ReadMsg(0xf840159000, 0xf840113c00, 0x40000000400, 0xf8400ef340, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\nnet.(_UnixConn).ReadMsgUnix(0xf84005e6c0, 0xf840113c00, 0x40000000400, 0xf8400ef340, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf84015a000, 0x0, 0x0, 0xf84016c29b)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(_Usock).ReadMessage(0xf84015a000, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xc5\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).handleMessages(0xf840069000, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:343 +0x29\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x9b\n\ngoroutine 414 [chan receive]:\nnet.(_pollServer).WaitRead(0xf840040c40, 0xf8400f13f0, 0xf840041150, 0xb, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(_netFD).ReadMsg(0xf8400f13f0, 0xf84015ec00, 0x40000000400, 0xf8401be4e0, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\nnet.(_UnixConn).ReadMsgUnix(0xf84005e2f0, 0xf84015ec00, 0x40000000400, 0xf8401be4e0, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf840186740, 0x0, 0x0, 0xf8401c1066)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(_Usock).ReadMessage(0xf840186740, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xc5\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).handleMessages(0xf8400690c0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:343 +0x29\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x9b\n\ngoroutine 2237 [chan receive]:\nnet.(_pollServer).WaitRead(0xf840040c40, 0xf8401e6480, 0xf840041150, 0xb, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(_netFD).ReadMsg(0xf8401e6480, 0xf84021ac00, 0x40000000400, 0xf8400efe20, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\nnet.(_UnixConn).ReadMsgUnix(0xf84005e458, 0xf84021ac00, 0x40000000400, 0xf8400efe20, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf84021b5c0, 0x0, 0x0, 0xf84033a113)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(_Usock).ReadMessage(0xf84021b5c0, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xc5\ngithub.com/burke/zeus/go/zeusmaster.(_SlaveNode).handleMessages(0xf840069300, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:343 +0x29\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyState\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221 +0x9b\n\ngoroutine 3329 [chan receive]:\nnet.(_pollServer).WaitRead(0xf840040c40, 0xf840341b40, 0xf840041150, 0xb, 0x1, ...)\n    /usr/local/go/src/pkg/net/fd.go:268 +0x73\nnet.(_netFD).ReadMsg(0xf840341b40, 0xf840113000, 0x40000000400, 0xf840265b40, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/fd.go:486 +0x2d5\nnet.(_UnixConn).ReadMsgUnix(0xf84005e550, 0xf840113000, 0x40000000400, 0xf840265b40, 0x2000000020, ...)\n    /usr/local/go/src/pkg/net/unixsock_posix.go:274 +0x144\ngithub.com/burke/zeus/go/unixsocket.(_Usock).readFromSocket(0xf840286c00, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:186 +0xf4\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadMessage(0xf840286c00, 0x0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:128 +0xc5\ngithub.com/burke/zeus/go/zeusmaster.receiveExitStatus(0xf840286c00, 0x0, 0x0, 0x0, 0x0, ...)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:159 +0x65\ngithub.com/burke/zeus/go/zeusmaster.handleClientConnection(0xf840041870, 0xf840286bc0, 0x0, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:87 +0x3e3\ncreated by github.com/burke/zeus/go/zeusmaster.StartClientHandler\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/clienthandler.go:48 +0x21d\n. ",
    "gmile": "@benhoskings @burke I confirm this\n. @mantas I suggest that you always run:\n\n``` ruby\nzeus rspec spec\n```\n\nI believe it ts not a responsibility for zeus to do rails/rake related tasks.\n. @benhoskings @burke I confirm this\n. @mantas I suggest that you always run:\n\n``` ruby\nzeus rspec spec\n```\n\nI believe it ts not a responsibility for zeus to do rails/rake related tasks.\n. ",
    "marksim": "Noticed this as well.  Looks like the coverage is run, but somehow a nearly empty coverage report appears.. ideas?\n. What can I provide or look for to help narrow the problem?  \n. I'm seeing this as well... any progress?\n. I actually figured out that using the guard-zeus gem was causing the problems because it was depending on an older version of zeus, which was what was loading when I typed zeus start\n\nRemoved that and zeus start worked again\n\nOn Jan 21, 2013, at 12:06 PM, Ed Woodcock notifications@github.com wrote:\n\n> For my own needs, running it through bundle exec on the latest version of zeus works... however that's against the recommendation of the Zeus documentation.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Noticed this as well.  Looks like the coverage is run, but somehow a nearly empty coverage report appears.. ideas?\n. What can I provide or look for to help narrow the problem?  \n. I'm seeing this as well... any progress?\n. I actually figured out that using the guard-zeus gem was causing the problems because it was depending on an older version of zeus, which was what was loading when I typed zeus start\n\nRemoved that and zeus start worked again\n\nOn Jan 21, 2013, at 12:06 PM, Ed Woodcock notifications@github.com wrote:\n\n> For my own needs, running it through bundle exec on the latest version of zeus works... however that's against the recommendation of the Zeus documentation.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ",
    "cousine": "Any luck with that? it seems to run fine if using \n\n```\nzeus rake spec\n```\n\nalso cucumber generates coverage correctly so I am guessing it has something to do with the RSpec Runner\n. Any luck with that? it seems to run fine if using \n\n```\nzeus rake spec\n```\n\nalso cucumber generates coverage correctly so I am guessing it has something to do with the RSpec Runner\n. ",
    "aokolish": "This is a bit over my head but I did some debugging and found that simplecov-html is trying to write to the coverage file here: https://github.com/colszowka/simplecov-html/blob/master/lib/simplecov-html.rb#L19\n\nWith zeus, it just truncates the file without writing the new content. I set a breakpoint and was only able to `file.puts` something if I hit the breakpoint without using zeus.\n\nI thought it might be a permissions problem, but it seems not. The output of File#stat seems to be the same with and without zeus.\n\nWith `zeus rspec spec`:\n\n``` ruby\n> file.stat\n=> #<File::Stat\n dev=0x1000002,\n ino=16607021,\n mode=0100644 (file rw-r--r--),\n nlink=1,\n uid=501 (username),\n gid=20 (staff),\n rdev=0x0 (0, 0),\n size=0,\n blksize=4096,\n blocks=0,\n atime=2013-02-18 01:33:26 -0800 (1361180006),\n mtime=2013-02-18 01:33:24 -0800 (1361180004),\n ctime=2013-02-18 01:33:24 -0800 (1361180004)>\n```\n\nWith `bundle exec rspec spec`:\n\n``` ruby\n> file.stat\n=> #<File::Stat\n dev=0x1000002,\n ino=16607021,\n mode=0100644 (file rw-r--r--),\n nlink=1,\n uid=501 (username),\n gid=20 (staff),\n rdev=0x0 (0, 0),\n size=0,\n blksize=4096,\n blocks=0,\n atime=2013-02-18 01:34:24 -0800 (1361180064),\n mtime=2013-02-18 01:34:22 -0800 (1361180062),\n ctime=2013-02-18 01:34:22 -0800 (1361180062)>\n```\n. Sorry, I confused myself.\n\n> it just truncates the file without writing the new content\n\nThat's only true if I set a breakpoint with pry and continue execution.\n\nIf I don't set any breakpoints, it writes the file with a coverage % of 0. I'll see if I can come up with something more helpful.\n. I don't think there is a way for zeus to fix this. I posted a gist of how I got this working: https://gist.github.com/ao140505/4982244\n\nIt's not perfect, but it mostly works :confused:. Basically, the key is to not `SimpleCov.start` within your spec helper when running specs with zeus.\n\nI would close this as a non-issue.\n. @turadg sure thing\n\n[https://github.com/burke/zeus/wiki/SimpleCov](https://github.com/burke/zeus/wiki/SimpleCov)\n\nFeel free to modify that if you think anything is unclear or incorrect. Thanks\n. This is a bit over my head but I did some debugging and found that simplecov-html is trying to write to the coverage file here: https://github.com/colszowka/simplecov-html/blob/master/lib/simplecov-html.rb#L19\n\nWith zeus, it just truncates the file without writing the new content. I set a breakpoint and was only able to `file.puts` something if I hit the breakpoint without using zeus.\n\nI thought it might be a permissions problem, but it seems not. The output of File#stat seems to be the same with and without zeus.\n\nWith `zeus rspec spec`:\n\n``` ruby\n> file.stat\n=> #<File::Stat\n dev=0x1000002,\n ino=16607021,\n mode=0100644 (file rw-r--r--),\n nlink=1,\n uid=501 (username),\n gid=20 (staff),\n rdev=0x0 (0, 0),\n size=0,\n blksize=4096,\n blocks=0,\n atime=2013-02-18 01:33:26 -0800 (1361180006),\n mtime=2013-02-18 01:33:24 -0800 (1361180004),\n ctime=2013-02-18 01:33:24 -0800 (1361180004)>\n```\n\nWith `bundle exec rspec spec`:\n\n``` ruby\n> file.stat\n=> #<File::Stat\n dev=0x1000002,\n ino=16607021,\n mode=0100644 (file rw-r--r--),\n nlink=1,\n uid=501 (username),\n gid=20 (staff),\n rdev=0x0 (0, 0),\n size=0,\n blksize=4096,\n blocks=0,\n atime=2013-02-18 01:34:24 -0800 (1361180064),\n mtime=2013-02-18 01:34:22 -0800 (1361180062),\n ctime=2013-02-18 01:34:22 -0800 (1361180062)>\n```\n. Sorry, I confused myself.\n\n> it just truncates the file without writing the new content\n\nThat's only true if I set a breakpoint with pry and continue execution.\n\nIf I don't set any breakpoints, it writes the file with a coverage % of 0. I'll see if I can come up with something more helpful.\n. I don't think there is a way for zeus to fix this. I posted a gist of how I got this working: https://gist.github.com/ao140505/4982244\n\nIt's not perfect, but it mostly works :confused:. Basically, the key is to not `SimpleCov.start` within your spec helper when running specs with zeus.\n\nI would close this as a non-issue.\n. @turadg sure thing\n\n[https://github.com/burke/zeus/wiki/SimpleCov](https://github.com/burke/zeus/wiki/SimpleCov)\n\nFeel free to modify that if you think anything is unclear or incorrect. Thanks\n. ",
    "tisba": "Thanks for the \"fix\" :)\n\nThe only remaining issue for me is now that I get some \"already initialized constant\" warnings every time I let zeus run the tests (via guard in my case, but this doesn't matter).\n\nAn example constant definition:\n\n``` ruby\nclass Foo\n  # ...\n  SOME_CONSTANT = \"foo\"\n  # ...\nend\n```\n\n--> `\"warning: already initialized constant Foo::SOME_CONSTANT\"`\n\nAny idea how to solve this without suffixing every single constant definition with `const_defined?`.\n\n/cc @turadg @aokolish\n. @latortuga not sure what you mean. I followed https://github.com/burke/zeus/wiki/SimpleCov and modified my `spec_helper.rb` and created a `custom_plan.rb`. When running `zeus rspec spec` I get the already initialized constant warnings.\n. @latortuga https://gist.github.com/tisba/b0023262f65b7b088b83 is one of the sources throwing the following warnings (there are a couple of more, but this is one example I can show without modification):\n\n```\n/Users/basti/Documents/work/freelancing/project/webapp/app/validators/file_size_validator.rb:2: warning: already initialized constant FileSizeValidator::MESSAGES\n/Users/basti/Documents/work/freelancing/project/webapp/app/validators/file_size_validator.rb:2: warning: previous definition of MESSAGES was here\n/Users/basti/Documents/work/freelancing/project/webapp/app/validators/file_size_validator.rb:3: warning: already initialized constant FileSizeValidator::CHECKS\n/Users/basti/Documents/work/freelancing/project/webapp/app/validators/file_size_validator.rb:3: warning: previous definition of CHECKS was here\n/Users/basti/Documents/work/freelancing/project/webapp/app/validators/file_size_validator.rb:5: warning: already initialized constant FileSizeValidator::DEFAULT_TOKENIZER\n/Users/basti/Documents/work/freelancing/project/webapp/app/validators/file_size_validator.rb:5: warning: previous definition of DEFAULT_TOKENIZER was here\n/Users/basti/Documents/work/freelancing/project/webapp/app/validators/file_size_validator.rb:6: warning: already initialized constant FileSizeValidator::RESERVED_OPTIONS\n/Users/basti/Documents/work/freelancing/project/webapp/app/validators/file_size_validator.rb:6: warning: previous definition of RESERVED_OPTIONS was here\n```\n. Thanks for the \"fix\" :)\n\nThe only remaining issue for me is now that I get some \"already initialized constant\" warnings every time I let zeus run the tests (via guard in my case, but this doesn't matter).\n\nAn example constant definition:\n\n``` ruby\nclass Foo\n  # ...\n  SOME_CONSTANT = \"foo\"\n  # ...\nend\n```\n\n--> `\"warning: already initialized constant Foo::SOME_CONSTANT\"`\n\nAny idea how to solve this without suffixing every single constant definition with `const_defined?`.\n\n/cc @turadg @aokolish\n. @latortuga not sure what you mean. I followed https://github.com/burke/zeus/wiki/SimpleCov and modified my `spec_helper.rb` and created a `custom_plan.rb`. When running `zeus rspec spec` I get the already initialized constant warnings.\n. @latortuga https://gist.github.com/tisba/b0023262f65b7b088b83 is one of the sources throwing the following warnings (there are a couple of more, but this is one example I can show without modification):\n\n```\n/Users/basti/Documents/work/freelancing/project/webapp/app/validators/file_size_validator.rb:2: warning: already initialized constant FileSizeValidator::MESSAGES\n/Users/basti/Documents/work/freelancing/project/webapp/app/validators/file_size_validator.rb:2: warning: previous definition of MESSAGES was here\n/Users/basti/Documents/work/freelancing/project/webapp/app/validators/file_size_validator.rb:3: warning: already initialized constant FileSizeValidator::CHECKS\n/Users/basti/Documents/work/freelancing/project/webapp/app/validators/file_size_validator.rb:3: warning: previous definition of CHECKS was here\n/Users/basti/Documents/work/freelancing/project/webapp/app/validators/file_size_validator.rb:5: warning: already initialized constant FileSizeValidator::DEFAULT_TOKENIZER\n/Users/basti/Documents/work/freelancing/project/webapp/app/validators/file_size_validator.rb:5: warning: previous definition of DEFAULT_TOKENIZER was here\n/Users/basti/Documents/work/freelancing/project/webapp/app/validators/file_size_validator.rb:6: warning: already initialized constant FileSizeValidator::RESERVED_OPTIONS\n/Users/basti/Documents/work/freelancing/project/webapp/app/validators/file_size_validator.rb:6: warning: previous definition of RESERVED_OPTIONS was here\n```\n. ",
    "latortuga": "@tisba can you show the actual code that is generating the warning?\n. > not sure what you mean\n\nI mean: what is the **actual** warning, what is the **actual** line of code that is generating the warning, what is the **actual** code context around the line generating the warning?\n\nNote: I did not ask \"what is an example of the warning\". From lots of time spent on IRC, I have found that people post bad examples of their code and the issue often is very obvious when the actual code that is causing an issue is shown.\n. @maxcal @rwjblue thanks for the sample code and confirmation that it works, I'll see if I can't get that integrated into the default plan...\n. This will go out in the next release, thanks @sshao \n. Fixed by #338!\n. This seems to be working for me on the newest zeus. If you're still having this issue and have upgraded to the newest zeus, please open a new issue.\n. @rusterholz I understand your frustration but zeus is volunteer-run. We all have jobs that we do in addition to working on this. Pull requests are welcome. Vitriol is not.\n. I always install it globally in every new ruby I install. I don't think there's really a problem either way.\n. @techthumb if you rebase your branch on master, the spec failures are now fixed. If you can take another go at writing a spec for this, it can get merged in! :heart:\n. I can replicate a very similar issue to this on Rails 3.2.12, minitest 4.7.3, and zeus 0.13.3.rc2 if I put my test_helper require statements in the wrong order:\n\n``` ruby\n# Works great!\nrequire 'rails/test_help'\nrequire 'minitest/rails'\n\n# Double test runs\nrequire 'minitest/rails'\nrequire 'rails/test_help'\n```\n\nNote that this is most likely a PEBKAC-type issue - the minitest-rails wiki advises the former ordering in their [upgrading minitest-rails wiki entry](https://github.com/blowmage/minitest-rails/wiki/Upgrading-to-0.9).\n. Thanks @JESii for the README note on this.\n. :+1: this fixed the specs for me too.\n. For future reference, this fixes an issue I opened with Minitest here: https://github.com/seattlerb/minitest/issues/290\n. @blowmage thank you for that! :heart: :heartbeat: :+1:\n. If you're still having json issues, please try the newest version of zeus (you can get it with gem install `zeus --pre`). It includes [this fix](https://github.com/burke/zeus/commit/548fdc670db73cea05bdf526d06bbc3f0100471c) which should load the version of the json gem specified in your Gemfile.\n. v0.15.0 is now released with this fix.\n. I did a little digging into the rspec-core source for this. The `BacktraceCleaner` class was introduced into rspec-core since version 2.13.1 so as a first attempt, you could upgrade to 2.14.0.rc1 and see if it fixes your problem. The logic for which lines are cleaned from a backtrace has changed slightly (they now use a combination whitelist and blacklist) though I'm not sure if it will change your results.\n\nThe only thing I could think of is that rspec is being invoked from a different working directory from zeus than you would normally invoke rspec. That would explain why it isn't excluding directories the way it normally would. I'm interested to know if upgrading rspec works for you - if not, then perhaps it's an issue with the way zeus invokes rspec.\n. Seeing as how 0.13.4.pre2 includes a fix, I'm closing this. Please open a new issue if you've upgraded to the most recent version of zeus and are still seeing this issue. Thanks for reporting it! :+1:\n. As mentioned elsewhere in the github issues and now in the README, tests running twice is often the result of having 'minitest/autorun' or 'rspec/autorun' in your test helper file. I created a new rails 4 app, created a model, and ran the tests and they only run once for me through zeus. If you can submit a sample application along with, preferably, a zeus.json that you're using that exhibits the behavior, I will reopen.\n. What version of zeus are you running? I cloned your example app and ran the test through zeus and it only runs once for me. However, I'm using my own built version of the most recent master because of some fixes that haven't landed in a release yet - is it possible for you to try a newer version of zeus?\n\n@burke could you tag a new release with the most recent fixes or is there still some unfinished work with JSON parsing? I don't have a build environment to build the OSX version unfortunately :(\n. @justin808 your version of zeus is out of date by more than a year and a half. Please update, try again, and open a **new issue** if you're having problems.\n. Very cool! :+1:\n. @burke This seems like a big win and if you think the change looks good (sorry I'm a bit of a noob to Go) I think it should be merged.\n\nWe could use a new tagged version too if you have a sec, the pre-release seems stable enough and there are even a few fixes that aren't in a build yet.\n. I don't think this is a Zeus issue, but I'm open minded and willing to be\nshown wrong. You can indicate that a symbol should be resolved to global\nscope by prepending a double colon like this - ::A::A_CONST\nOn Jun 11, 2013 4:18 AM, \"indyarocks\" notifications@github.com wrote:\n\n> Hi,\n> \n> I'm using zeus for my local development. Amazing tool. But I found one\n> issue while resolving the namespace.\n> Suppose I have defined a constant in model a.rb:\n> A_CONS = {:a => 1}\n> \n> Now if I try to refer this constant from model b.rb:\n> x = B.create(:a => A::A_CONST)\n> \n> Then creation of x fails with error:\n> NameError (uninitialized constant B::A::A_CONST):\n> ....\n> ....\n> \n> The same code is succeeding when I run it using \"rails s\".\n> ruby 1.9.3p429 (2013-05-15 revision 40747)\n> Rails 3.0.5\n> \n> Is it issue with 'zeus' or I'm missing something here?\n> \n> Thanks,\n> Chandan\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/363\n> .\n. Please reopen if this is still causing you issues.\n. Can you please try with the latest pre-release?\n\n``` bash\ngem install zeus --pre\n```\n. Please see #355 and reopen if that fix doesn't help you.\n. Do you have a custom plan? Can you push an example app?\n. As mentioned elsewhere in the issues, double test runs often stem from requiring `rspec/autorun`. Can you confirm that you don't have that in your spec_helper?\n. You're comparing 1 minute 26 seconds to 1 minute 28 seconds. That's essentially a rounding error.\n\nWhat kind of failures are you seeing by switching between zeus/no zeus?\n. No problem, glad to help.\n. You need to give us more information or we can't help you. Please see the [contribution guide](https://github.com/burke/zeus/blob/master/contributing.md) for more information. Also helpful information: versions of gems, version of rails, version of zeus, plan.rb, operating system, example app that exhibits the issue.\n. If it works, I'd say it's the right way! The custom plan is intended for atypical project structures. :+1:\n. Zeus can only load your code the way you wrote it, if you have a syntax error then you need to correct it before your app can run. Notice that it indicates that you should run the individual command to see the backtrace.\n. If someone is more familiar with bundler than I, that person could take a crack at trying to discern if the bundle is ready to go before starting up the zeus processes. Otherwise I'm not sure how to handle this, feedback and pull requests welcome :)\n. You can build the gem for just your platform, that is what I do on Ubuntu.\nPop open the makefile and find the make command for your arch and try that.\nOn Aug 6, 2013 8:18 AM, \"Iazel\" notifications@github.com wrote:\n\n> I'm trying to install the last version of zeus on Ubuntu 12.04.\n> I've read contributions.md, installed golang, the gems needed and also\n> run dev-bootstrap.sh as sudo, but when I run \"make all\", after compiling\n> all the go source, exit with this error:\n> \n> make[1]: xcodebuild: Command not found\n> make[1]: **\\* [default] Error 127\n> make: **\\* [fsevents] Error 2\n> \n> For what I know, xcodebuild is only for mac and not really an error, but\n> I don't understand the others two.\n> \n> The full output:\n> \n> go fmt ./go/restarter/restarter.go\n> go fmt ./go/filemonitor/filemonitor_test.go\n> go fmt ./go/filemonitor/filemonitor.go\n> go fmt ./go/zeusversion/zeusversion.go\n> go fmt ./go/processtree/slavemonitor.go\n> go fmt ./go/processtree/slavenode.go\n> go fmt ./go/processtree/processtree.go\n> go fmt ./go/unixsocket/oobreader.go\n> go fmt ./go/unixsocket/unixsocket_test.go\n> go fmt ./go/unixsocket/unixsocket.go\n> go fmt ./go/unixsocket/usock.go\n> go fmt ./go/statuschart/stdout.go\n> go fmt ./go/statuschart/tty.go\n> go fmt ./go/statuschart/statuschart.go\n> go fmt ./go/zeusclient/zeusclient.go\n> go fmt ./go/clienthandler/clienthandler.go\n> go fmt ./go/zerror/zerror.go\n> go fmt ./go/shinylog/shinylog.go\n> go fmt ./go/zeusmaster/zeusmaster.go\n> go fmt ./go/config/config.go\n> go fmt ./go/cmd/zeus/zeus.go\n> go fmt ./go/messages/messages.go\n> make[1]: xcodebuild: Command not found\n> make[1]: **\\* [default] Error 127\n> make: **\\* [fsevents] Error 2\n> \n> If you need other info, let me know. Thank you in advance and compliment\n> for this great gem! :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/384\n> .\n. I believe I did something like the following:\n- `cd rubygem`\n- increment the `version.rb` file version (I used something like 0.13.4.pre1)\n- `rake`\n\nAt that point it should dump the gem into the pkg directory from which you can gem install. Obviously the gem you build will not be cross-platform compatible but for just yourself it should work fine. I've been using a custom build of zeus for a few months now without incident.\n\nAs you've discovered, the current build process is heavily slanted toward an OSX build environment which makes it a pain to build only the linux version. At this point it's the price we pay for a tool as awesome as zeus.\n. Can you use the standard vagrant shared volume and host the code on your machine instead of the VM?\n. Hello, @methyl, thanks for the PR! Can you write a test or two for this? I think you should be able to do something like `if defined?(Rspec)` as a proxy for \"was rspec required\". If you can provide a test or two I will merge it post-haste! Thanks again for taking the time to contribute.\n. Double test runs are addressed in the README. If removing `rspec/autorun` from your spec_helper does not fix your issue, please reopen.\n. Thanks @dgilperez!\n. Hey @antifuchs I honestly have no idea. I merged the commit because it let me easily build on my system but unfortunately I don't have a mac to test on. Do you think #405 is a fix for this issue as well?\n. @antifuchs if you need any assistance testing on Linux, I'm more than willing to lend a hand. Thanks so much for working on this!\n. @NobbZ if there's a gem in the global gemset, you can remove it thusly:\n\n``` sh\nrvm use 2.0.0@global\ngem uninstall gemname\n```\n\nEvery rvm ruby has a global gemset like that. Sometimes handy, sometimes insidious :)\n. Pulled in your changes, made the gem on ubuntu x64 and it seems to work fine, although on my `zeus start` tmux pane I see the following after running a few zeus commands:\n\n``` log\nslavenode.go:130: Unexpected process for slave `boot` was killed\nslavenode.go:130: Unexpected process for slave `boot` was killed\nslavenode.go:130: Unexpected process for slave `boot` was killed\n```\n\nI think you mentioned elsewhere about this. Do you think it's harmful? Is there a way we can suppress the message if it doesn't mean anything? My gut instinct is that it does mean something and we should hunt it down.\n. I've now been using a build from master including this commit for a week and it has been working great on Linux.\n. Building an updated version now, I'll keep you posted how it works over the next few days.\n. Smoke test is A-OK, :+1: so far - everything seems to be working. I tested on 3 different projects, Ruby 2.0 and 1.9.3. I say we merge it and cut a new version - can you build and publish the gem to rubygems? I was unsuccessful getting the full golang cross-compile toolchain installed a few months back.\n. The `m` that you see there is a customized version of the [m gem](https://github.com/qrush/m). It's a very small convenience library for invoking tests by line number.\n. If you are seeing a different version of `rspec` used by `bundle exec rspec` and that of your `Gemfile.lock`, you should re-bundle or double-check your current environment as that should not happen. Zeus does not modify which version of rspec is in your bundle.\n. Zeus version?\n. This line:\n\n``` sh\nruby -rubygems -r./custom_plan -eZeus.go\n```\n\nRequires the `custom_plan.rb` file. If it doesn't exist, there's not much we can do. This is not a zeus issue but a Ruby issue.\n. Please try the updated version of zeus and open a new issue if this persists.\n. Please update to the newest version and open a new ticket if this issue persists.\n. I think this was probably an issue of not running `make clean` before cutting the gem for release. I suppose we could fix the makefile to prevent this...\n. This also happens to me from time to time but I haven't been able to isolate any behavior that reliably causes it. Restarting zeus works for me every time - does that work for you? Does this happen often to you? Have you noticed it happening in any specific circumstances (editing specific files, running specific tasks, etc)?\n. The `carrierwave-mongoid` version you're having issues with is so old that they don't even have a tag for it on Github. Can you try with an updated version of the gem?\n. The fix for tests running multiple times is well-documented elsewhere in the issue tracker and in the README.\n. In order to build the gem you need a Go toolchain. The requirements are detailed [here](https://github.com/burke/zeus/blob/master/contributing.md#hacking-on-zeus) and are pretty straightforward on OS X and linux. I can roll a new release however I think I'll need to grab someone to build the OSX version as I don't have access to a mac.\n. Thanks for doing this @joffotron. Pushing a new gem is on my todo list and I'll get it up next week.\n. @joffotron can I have you rebuild off of the tip of master? I got my cross-compile tools working great but I unfortunately can't build the darwin binary due to the XCode requirement.\n. Please note that we're publishing it as 0.15.0, not 0.14.0rc1 as indicated by this issue's title :)\n. v0.15.0 is now out!\n. This does not appear to be an issue with zeus, but rather with you making a web connection after stubbing web connections. Check the documentation for fakeweb for more information on how to use it.\n. Not currently, pull requests welcome!\n. If, after the process crashes, you try calling `zeus server` or any of the other commands, do you get a stack trace?\n. Some other issues have mentioned that updating the `method_source` gem may help. The Pry gem depends on `method_source` so that could explain why updating pry also helped. I tried yesterday on a Rails 4.1 app with Ruby 2.1.1 and the newest version of zeus seems to be working. Relevant versions:\n\nruby 2.1.1\nrails 4.1.0\njson 1.8.1\nzeus 0.15.0\nmethod_source 0.8.2\n\nIf you're still having trouble with this, please try upgrading zeus, method_source, and pry and see if the problem persists.\n. As noted elsewhere in the thread, you can name this file anything you want. `custom_plan.rb` is simply the example. Now renaming the example to be more zeus-specific, I can see the appeal. PRs accepted!\n. This error probably means that you have multiple versions of rake installed. You can include zeus in your Gemfile but you shouldn't need to - simply uninstall the version of rake you aren't using.\n. @burke while you're here, could you add someone else as a gemcutter as well? :smile:\n\nAlso, :+1: to this, make it so!\n. Looks good, can you add a test for this?\n. Looks great, thank you!\n. I also like the idea of this PR - letting the computer do more of the work is always the best answer. Currently, when you run `zeus init` in a directory, [`zeus s` becomes the default to invoke `rails server`](https://github.com/burke/zeus/blob/master/examples/custom_plan/zeus.json). So, I think this could be confusing and would break backwards compatibility. One thing you might try (and what I do) is to set up bash aliases for your oft-used commands. For example, I have simply `z` mapped to `zeus` so I can run all my commands with things like `z t` for testing or `z c` for a new console.\n\nAnother thing to try would be to have a script bootstrap your dev environment. My preference for this is [tmuxinator](https://github.com/tmuxinator/tmuxinator). I don't often actually run the zeus start command due to tmuxinator taking care of starting up my various tabs for me.\n. Thanks for contributing!\n. I believe you can instruct Ruby to read your file with a specific encoding by placing the encoding at the top of the file. In this case, I think it's better to allow files to specify the encoding than to have the gem force the encoding. Here's an example of how you do it:\n\n``` ruby\n# encoding: UTF-8\n\nrequire File.expand_path('../boot', __FILE__)\nrequire 'rails/all'\n...\n```\n\nLet me know if this doesn't work for you.\n. The idea is to put it in the file that has the UTF-8 characters: your `application.rb`.\n. Zeus gives that message when the .zeus.sock file exists (`ls -a`). Remove the socket file and you can start it.\n. Love it :heart: :yellow_heart: :purple_heart: thank you!\n. Does it work to put this in your custom plan instead? Or in your `application.rb`? Where is this being used that we need to require it here?\n. Brilliant, thank you very much for pointing that out and fixing it!\n. @ijcd I'm definitely interested to see a patch and we can roll a beta for folks to test for stability.\n. I think we should be able to cover this with a custom plan but it might be a good idea to integrate it with the default plan. Looking into this...\n. Alright I got it working but it requires a new command. @burke any thoughts about using the same command name in two different environments?\n\n``` js\n// zeus.json - If you have an existing file, make sure you change the command\n// to match your custom_plan and the prerake_test line. If you don't have a\n// zeus.json file,  copy this into a new one.\n{\n  \"command\": \"ruby -rubygems -r./custom_plan -eZeus.go\",\n\n  \"plan\": {\n    \"boot\": {\n      \"default_bundle\": {\n        \"development_environment\": {\n          \"prerake\": {\"rake\": []},\n          \"runner\": [\"r\"],\n          \"console\": [\"c\"],\n          \"server\": [\"s\"],\n          \"generate\": [\"g\"],\n          \"destroy\": [\"d\"],\n          \"dbconsole\": []\n        },\n        \"test_environment\": {\n          \"prerake_test\": {\"raket\": []},\n          \"test_helper\": {\"test\": [\"rspec\", \"testrb\"]}\n        }\n      }\n    }\n  }\n}\n```\n\n``` ruby\n# custom_plan.rb - Create this file or add the two methods to your existing custom plan.\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n  def prerake_test\n    require 'rake'\n  end\n\n  def raket\n    Rake.application.run\n  end\nend\n\nZeus.plan = CustomPlan.new\n```\n\nTo run commands in the test environment:\n`zeus raket`\n\nTo migrate your test db:\n`zeus raket db:migrate`\n. I've [added a new file](https://github.com/burke/zeus/blob/master/examples/custom_plan/cucumber_plan.rb) to the examples directory showing how to get cucumber working in your project using a custom_plan file.\n. When you run your tests, how do you run them? Do any other zeus commands exhibit this behavior?\n. I've just pushed v0.15.1 to rubygems which has a fix for this issue, also mentioned in #216 and #155. v0.15.1 effectively reverts the changes in #155 due to that issue only coming up because of a hack that I decided we shouldn't support. Standard rails console and Pry installations should work with the newest version.\n. Unfortunately this is a current limitation of zeus, as documented in the [README](https://github.com/burke/zeus#limitations).\n. Can you try this with 0.15.0 and tell me if it still happens?\n. I was initially worried that it might be related to JRuby because I saw you were (maybe?) running that. However, I downloaded your app and it shows the same behavior. Looking into it a bit...\n. Please open a new issue if this isn't resolved as indicated by @sshao - thanks!\n. This is a pry issue, not a zeus issue. There are many different ways to solve this but googling about pry and reload will get you there.\n. > Actually, it works when i use raw console: rails c\n\nYes, as I mentioned, this is a pry issue (pry console vs irb console), not a zeus issue.\n. @Hates pull requests accepted. Note that I won't accept code that tries to patch over the IRB constant and `zeus console` needs to not break for normal `rails c` as well. I don't have time to work on this issue because it works fine for me to simply add some code to my pryrc. Here's mine:\n\n``` ruby\n# vim: set ft=ruby:\nPry.config.editor = 'vim'\n\nif Kernel.const_defined?(:Rails) && Rails.env\n  require File.join(Rails.root,\"config\",\"environment\")\n  require 'rails/console/app'\n  require 'rails/console/helpers'\n\n  extend Rails::ConsoleMethods\nend\n```\n. Is there some file you can explicitly require to get that method to be available?\n. Additionally, it's unclear to me which `routes` call is generating the error. Can you put your call to `MyEngine::Engine.routes` on a different line so we can see if it's an issue with rspec or an issue with loading your code?\n. > I'm not sure - It would be an RSpec file so I'm totally lost as to what file to actually include. Regardless, I don't think I should be adding lines of code to each spec just to avoid a Zeus error, as it would be frustrating to other team members.\n\nI meant your source file, e.g. `require 'myengine/engine/routes'`.\n\n> The tests run - The error is thrown after the tests finish running. I\n\nIf the tests are trying to run twice, do you have `require 'rspec/autorun'` somewhere in your spec helper? Try removing that and see how we do.\n. I like this idea and would definitely accept a PR! :shipit: :+1: \n. @burke any thoughts on this? I'm not super familiar with go or the internal workings of the go portion of zeus. The issue description strikes me as a race condition.\n. It's a file, not a folder. Remove the file and zeus will start. It simply means zeus did not gracefully shutdown the last time you used it.\n. I'm not sure if it works with unicorn. Why not give it a try and report back with your results?\n. Thanks for your contribution! :+1:\n. You're calling `Rspec.configure` before requiring `rspec/rails`.\n. It's running through the rspec executable, it makes sense to me that `Rspec` is going to be defined.The error message is pretty clear about the issue, I'm not sure what else you want me to say. Did you try rearranging the load order of your `require`s?\n. The error message says that you're calling `configure` on a nonexistent module, `Rspec`. That means that your first call to `Rspec.configure` is coming before you're loading rspec. If you use the executable, something in the executable loads rspec for you so you don't have to worry about it. Without the rspec executable, you have to make sure to load it yourself, as you are with `require 'rspec/rails'`. You just have to make sure you require rspec before you start configuring it. If this is at all unclear to you, you should read up on how `require` works in Ruby - you can't use classes/modules that you have not yet required.\n\nThe error message is quite clear, we don't need any more documentation than this issue and the #308 duplicate.\n. The whole point of using zeus is so that you don't have to worry about loading the entire rails stack, it pre-loads it for you. I don't see the issue with requiring `rspec/rails` for your rails tests. Note that you don't have to require rspec/rails inside your spec_helper, you can simply require it before you require your spec_helper in a different file. The only stipulation is that Rspec has to be required before you use it - the same with any other gem, class, or module in Ruby.\n\n@dreki your criticism is neither constructive nor welcome. There is nothing arcane about \"You're using a module before you've required it\".  If you have suggestions for how you would fix this, I'm willing to listen as well as look at pull requests.\n. My mistake, I didn't realize this issue was about changed behavior in rspec.\n\n@daino3 mentioned the desire to switch the zeus-auto-require to require `rails_helper`. Would it be an agreeable fix to do this for rspec 3.1+? @maxcal @PaBLoX-CL thoughts?\n\nWe do have the environment variable `RAILS_TEST_HELPER` so that could be used to fix this as well but it would be nice to work out of the box with new rspec.\n. @maxcal Avoiding explicit version checks does seem like the sanest fix to me too.\n. @maxcal @PaBLoX-CL I've pushed 0.15.3 to rubygems with a fix for this. Let me know if it doesn't fix your issue!\n. Thanks for the report @johvet \n. A fix provided by @rcook is in master and will be released in the next version of zeus!\n. Thanks so much for the PR! I am on vacation atm but I will take a look and\nmerge it asap once I'm back at home!\nOn Jul 24, 2014 2:31 AM, \"Ian MacLeod\" notifications@github.com wrote:\n\n> ---\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/nevir/zeus specified-config\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/burke/zeus/pull/476\n> Commit Summary\n> - Add a --config option to point to config files in custom locations.\n> \n> File Changes\n> - _M_ go/cmd/zeus/zeus.go\n>   https://github.com/burke/zeus/pull/476/files#diff-0 (10)\n> - _M_ go/config/config.go\n>   https://github.com/burke/zeus/pull/476/files#diff-1 (4)\n> - _M_ man/src/zeus.ronn\n>   https://github.com/burke/zeus/pull/476/files#diff-2 (5)\n> \n> Patch Links:\n> - https://github.com/burke/zeus/pull/476.patch\n> - https://github.com/burke/zeus/pull/476.diff\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/burke/zeus/pull/476.\n. Overall I like it and want to merge it. I don't know a ton about how much this part of zeus is tested but if there are tests for the config options, I'd appreciate a new test for the new option. Also, if there aren't any, I'd absolutely love it if you added a new test for the config parsing!\n. I think you posted this issue to the wrong project, this is zeus, not byebug.\n. You need to give us more information on how to reproduce this issue, otherwise there is nothing we can do. Thanks!\n. I'm not looking for a general description, I'm looking for a specific bug report - I did this, I expected this, I actually got this. I can't debug code I don't see.\n. I'm hesitant to merge this because I added the question mark test specifically for a bug I found with not escaping question marks. Have you tested a build with the updated logic on a test method with a question mark in the name?\n. This is now merged into master and will be released in v0.15.2. Thanks for your contribution!\n. Thanks for your contribution. For now we're going to leave it as-is. There are many open issues in the issues list so if you'd like to contribute more, we'd greatly appreciate it.\n. This is probably a syntax error from your actual spec file.\n. @rcook thanks for the PR! Travis is reporting test failures due to the changes you made, can you take a look and fix?\n\nAlso, it may be useful to know that MiniTest pre-5.0 had an alias for `MiniTest`, `Minitest`. Checking for the constant `Minitest` therefore isn't enough to detect 5.0. You might try checking version numbers?\n. Thanks so much! \n. @jetsgit line 309 of m.rb is an `end`. I have not published a build with this fix in it yet - did you build it yourself?\n. @jetsgit yes, give me a day or two, I want to try getting in a few other items and testing them.\n. @jetsgit you can already do that:\n\n```\nzeus test test/controllers/my_controller.rb:28\n```\n. @jetsgit just released zeus v0.15.2 this morning. Give it a try!\n\nAs far as golang, just follow the instructions on their site. It's pretty straightforward nowadays.\n. Thank you!\n. Hi @penland365, thanks for the interest!\n\nFirst off, I did not write this portion of zeus but having watched the issue tracker and going through my memory a bit, I think the holdup was an inotify-esque implementation on *BSD systems. On OSX, we use Apple's FSEvents API and on Linux, we use inotify watches. When zeus was written, there was no equivalent for BSD.\n\nHowever, I just did a quick Google and the results turned up more positive than the last time I investigated this. If you're interested, I'd take inspiration from the current implementation of inotify (/rubygems/ext) and check out [this blog post](http://thegreyblog.blogspot.com/2014/02/fsw-file-system-event-notifier-for-mac.html) from earlier this year.\n\nShort answer: feel free to give it a try and patches are always welcome.\n. Closing this issue - if you want to work on it, please do! Just open a PR with your work at any point - even half working is better than our current situation for FreeBSD.\n. You have to give us more information or there's nothing we can do to help.\n. You have to give us more detail to be able to reproduce the issue.\n. [This](https://github.com/burke/zeus/blob/master/go/clienthandler/clienthandler.go#L22-L30) is the relevant snippet of code. It looks to me like we create a unix socket, we resolve it to to an absolute file path and then we try to listen on it. Usually we can't do that if the file already exists. I wonder if docker prevents you from doing things like creating sockets or making specific syscalls?\n. I appreciate your analysis here and sympathize. It has been suggested before that we include better debugging than `exit status 1` and I agree with it wholeheartedly. I am 100% open to pull requests of that nature and haven't had a lot of time to dedicate to zeus of late. To make things simple to start, a flag sent to `zeus start` that displays a backtrace on error would be a fantastic addition and would allow us to cut down on the number of vague/ambiguous issues that get opened.\n\nThis is potentially a golang change which requires getting an environment setup. Are you up to it @kgrz?\n. I sympathize with this request because I myself have done this before but I think it's worth taking another look at what you're trying to do. By design, the test environment tears down and rebuilds the database on every run - you'll end up nuking whatever is in your database on every run if you aren't careful.\n\nIf you really do want to proceed doing this, I recommend you setup a custom `zeus.json` for your project and add a new command that relies on the `development_environment` but runs tests like in the test commands. Here's a rough example of how you'd do that:\n\n``` js\n// zeus.json\n{\n  \"command\": \"ruby -rubygems -rzeus/rails -eZeus.go\",\n\n  \"plan\": {\n    \"boot\": {\n      \"default_bundle\": {\n        \"development_environment\": {\n          \"prerake\": {\"rake\": []},\n          \"runner\": [\"r\"],\n          \"console\": [\"c\"],\n          \"server\": [\"s\"],\n          \"generate\": [\"g\"],\n          \"destroy\": [\"d\"],\n          \"dbconsole\": [],\n          \"test_helper\": {\"test\": [\"devrspec\"]} // <- new line\n        },\n        \"test_environment\": {\n          \"test_helper\": {\"test\": [\"rspec\", \"testrb\"]}\n        }\n      }\n    }\n  }\n}\n```\n\n``` sh\nzeus devrspec <args..to..rspec>\n```\n\nPlease note that I have not tested this and I'm not sure it will work but it does sidestep the `RAILS_ENV` issue you're seeing so I imagine it might work. I don't see us adding this functionality into default zeus but let me know if this works for you!\n. Toss this in your `spec_helper` and tell me if it still happens.\n\n``` ruby\nRSpec.configure do |config|\n  config.filter_gems_from_backtrace 'zeus'\nend\n```\n. Gems used to be part of the default exclusion list of rspec and [no longer are](https://github.com/rspec/rspec-core/blob/master/Changelog.md#310--2014-09-04). Unfortunately that change causes zeus to be included in the backtrace as well which, as you indicated (albeit with a bit of an impolite tone), is not exactly disireable.\n\nI upgraded my sole rspec-using project from rspec 2.x to 3.1 and here's the difference in behavior for me:\n\n``` sh\n  1) User without reseller role reseller? should be true\n     Failure/Error: its(:reseller?) { should be_true }\n       expected: true value\n            got: false\n     # ./spec/models/user_spec.rb:133:in `block (3 levels) in <top (required)>'\n     # -e:1:in `<main>'\n```\n\nAfter:\n\n``` sh\n  1) User without reseller role is not a reseller\n     Failure/Error: expect(subject.reseller?).to eq(true)\n\n       expected: true\n            got: false\n\n       (compared using ==)\n     # ./spec/models/user_spec.rb:137:in `block (3 levels) in <top (required)>'\n     # /home/drew/.rvm/gems/ruby-2.1.5/gems/zeus-0.15.3/lib/zeus/rails.rb:212:in `test'\n     # /home/drew/.rvm/gems/ruby-2.1.5/gems/zeus-0.15.3/lib/zeus.rb:148:in `block in command'\n     # /home/drew/.rvm/gems/ruby-2.1.5/gems/zeus-0.15.3/lib/zeus.rb:135:in `fork'\n     # /home/drew/.rvm/gems/ruby-2.1.5/gems/zeus-0.15.3/lib/zeus.rb:135:in `command'\n     # /home/drew/.rvm/gems/ruby-2.1.5/gems/zeus-0.15.3/lib/zeus.rb:50:in `go'\n     # -e:1:in `<main>'\n```\n\nLooks to me like that `-e:1:in \\`<main>'` was there for both versions - I think it is caused by the fact that zeus is run via a command to ruby that executes code inline. From the default plan:\n\n``` json\n{\n  \"command\": \"ruby -rubygems -rzeus/rails -eZeus.go\",\n}\n```\n\nWe could try to do version detection for RSpec 3.1+ and add the config to exclude zeus and potentially for that extra \"main\" line (per your submitted config above). I'm on the fence about how much we should bend over to support various versions of different gems. It's probably simplest to add the config to your app for now. I would accept a pull request if you'd like to write this feature.\n\nIn any case, thank you for reporting this and testing the fix!\n. My first reaction is that either 1) we need to not create a db connection during setup of test_environment or 2) we need to tear it down when killing that slave. I think (1) is incorrect though, we want it to have a db connection so that we can run commands quickly. So perhaps we need to integrate some kind of teardown where we disconnect from the db.\n. Thanks!! :heart: :purple_heart: :green_heart: \n. Thank you for this!!! Sorry I haven't gotten it merged before today! :heart: :purple_heart: :yellow_heart: :blue_heart: :+1: :+1: \n. @sshao thanks for all your contributions!\n. You could add a new config and pass it in to `statuschart.Start()`, line 44 of `zeusmaster.go` and then allow it to supersede the check for `ttyutils.IsTerminal()` around lines 39-45 of `statuschart.go`. Feel free to take a whack at it if you're feeling brave :smile: \n. > it can't be run from Pry\n\nI'm not sure what you mean by this. Can you give an example of what you are trying to do that isn't working - gems, versions, commands, expected output, actual output? I use pry with zeus every day of the week.\n. Thanks for the contribution!\n. Also, @e2, do you have any suggestions for the Travis failure, other than not testing on Ruby < 2.0?\n. I'll try to get a release out this week. Maybe tomorrow if I have some\nextra time.\nOn Jan 20, 2015 5:21 PM, \"Cezary Baginski\" notifications@github.com wrote:\n\n> @latortuga https://github.com/latortuga, @burke\n> https://github.com/burke, @antifuchs https://github.com/antifuchs,\n> @turadg https://github.com/turadg - could you release a gem with this\n> patch?\n> \n> It's just that I have to manually rebuild the gem and install it manually\n> in every gemset I use (because the project layout doesn't let Bundler use a\n> github/branch source, even if I patched the Makefiles).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/burke/zeus/pull/502#issuecomment-70755269.\n. New release built and pushed to rubygems, v0.15.4!\n. :+1: :heart: :purple_heart: :blue_heart: :green_heart: :yellow_heart: \n. Well that's unexpected. Thanks for the bug report!\n. Definitely open to this. If you're interested, take a crack at it :smile: \n\nUnfortunately building the gem like this requires a go toolchain which perhaps makes it out of scope for most users but it would definitely make testing specific branches easier.\n. That error you posted looks to me like you need to reinstall your pg gem for the new ruby version.\n. Does your app run without zeus?\n. I know it's misleading, perhaps there's something we can do to fix this, but the output from `zeus test -h` is actually the output for the `m` library. Confirm this yourself by running `m -h` if you have the m gem installed. zeus includes a copy of the gem's essential functionality and uses it for running tests by name. Hence, you don't need to use the `-n` flag, you can just run tests by name with no flags:\n\n`zeus test test/models/location_test.rb`\n\nOr by line number:\n\n`zeus test test/models/location_test.rb:15`\n. Thanks for the report, this is a duplicate of #469 and there is a workaround provided there for the time being.\n. I sympathize with you but this is a RubyMine issue, not a zeus issue. If you can customize the command somewhere you can add something like `unset RAILS_ENV`.\n. Is `RAILS_ENV` set in your `.profile` or similar (`.bash_profile`, `.zsh_profile`, etc)? It is obviously set otherwise you wouldn't be getting the message, the question is simply where it is set. Unset it and you'll be good to go.\n. If you run `echo $RAILS_ENV` from the command line where the zeus call is failing, what do you see?\n. Probably because RubyMine sets a RAILS_ENV for its commands. If you can customize the actual command itself, you can add an `unset RAILS_ENV` to it. I'm not familiar enough with RubyMine to know if that's possible or not.\n. Thanks! :+1:\n. My mistake, `Minitest.autorun` is called explicitly.\n\nhttps://github.com/rails/rails/blob/master/railties/lib/rails/test_help.rb#L6 => https://github.com/rails/rails/blob/master/activesupport/lib/active_support/testing/autorun.rb\n. This does not happen for me. What version of zeus are you on?\n. Unfortunately this doesn't happen for me. If you provide an example app that this happens reliably for I can investigate further.\n. Unfortunately I develop on Ubuntu where SIGINFO is not supported so it will be difficult for me to resolve this one. I could make an RC build to see if my changes fix it for OS X...\n. Did you try putting your simplecov init into your test helper?\n. This is a known issue with a fix that will be in the next release. You can try looking through your `spec_helper.rb` file for `require 'rspec/autorun'` and removing it.\n. Thanks for the kind words!\n\nAs for the linked blog post,`instance_eval` ick! Seems like the simple solution would be to use `require`:\n\n``` ruby\nYourApplication::Application.routes.draw do\n  root to: \"home#index\"\n  get \"/about\n  get \"/login\" => \"application#login\" \nend\n\nADDITIONAL_ROUTES = [:messages, :orders, :api, :admin]\nADDITIONAL_ROUTES.each do |route_file|\n  require \"#{Rails.root}/config/routes/#{route_file}\"\nend\n```\n\nThis way you can load them at whatever point you actually need them, before, in the middle, after, etc. As far as I know, there's no problem calling `Application.routes.draw` multiple times.\n\nIn fact, I tested this exact approach just now on a Rails 4.1 app and it worked flawlessly, reloading zeus automatically on changes to routes or `config/routes/*.rb` files.\n. Zeus is designed to be a tool for development, not production. If you want something to keep your processes alive in production, check out init or god or any number of other process management tools.\n. You want a long-running process outside your server process. The usual tool for this job is to run a job worker like Resque, Delayed Job, or Sidekiq. Cron obviously works well but you do have the problem that you have to load the app every time the cron job runs.\n\nThe kernel is probably killing the processes because they mostly just sit there idle. Zeus is just not designed for this use case, sorry.\n. First, thanks so much for this ambitious contribution! :+1: x :100: \n\nSeeing as how I haven't cut a release in months, I'm going to merge this and go live with it. If we find any issues we can always fix em up later. I've bumped zeus support to ruby 2.0+ as 1.9.3 isn't even officially supported anymore.\n. @doy unfortunately, I'm having issues getting zeus to build on master now. Any chance you can get a golang environment setup and try to troubleshoot a bit?\n. To be more precise, I'm having issue with the built gem, zeus crashes on start. Here's my rc build:\n\nhttps://www.dropbox.com/s/ityddamsevucna9/zeus-0.15.5.rc1.gem?dl=0\n. Gem built on mac, testing on mac. Haven't tested on linux yet.\n. Same result on Ubuntu, immediate panic on startup. Not sure if my golang-fu is good enough to track this down. Here's a gist of the panic output: https://gist.github.com/latortuga/0814bf8f64317986f982\n. Seems there's a race somewhere. @burke any chance you could try to take a look at this? I tried to look into this issue a month or so back and I found that I just don't know enough about golang tools or panic traces to be able to debug efficiently.\n. Zeus does not do anything magical as far as\n\n> pulling in all the Rails dependencies\n\nZeus pre-loads your application by [requiring `application.rb`](https://github.com/burke/zeus/blob/master/rubygem/lib/zeus/rails.rb#L104) just the same way that booting up a rails server/console/rake task would. There's no way for me to debug this issue without seeing an app that reproduces it.\n\nI suspect the root of your issues is that your spec helper is not loading the full Rails env.\n. I'm sorry but I can't debug code I can't see. Trying to make a simple example app that exhibits the problem may lead you to a solution.\n. I like this approach quite a bit, will give it a try locally and see how it works out!\n. I'm happy enough with issues surrounding json and rake being mitigated by this to merge it.\n. The project Makefile has tasks to generate the version files. There are actually multiple tasks for this:\n\n``` sh\nmake go/zeusversion/zeusversion.go\nmake rubygem/lib/zeus/version.rb\nmake vagrant/lib/vagrant-zeus/version.rb\n```\n\nGenerally when I'm testing a build, I populate the VERSION file with a testing build number (e.g. 0.15.5.rc1) and then generate the version files.\n. Once I've got the issues ironed out with the Vagrant plugin, I'll be happy to merge your PRs, @kgrz :smile: :+1: \n. Option 1: Remove pry from your Gemfile.\nOption 2: Add `require: false` to pry in your Gemfile.\n. @doy sounds good, I'll merge this now and you can submit your PR and I'll build/test it once it's all ready to roll!\n. Merged this branch and built it and I'm still getting a panic on start up: https://gist.github.com/latortuga/0216f3c0cf2e11b4ec8b\n. It does not build currently.\n. @burke can you give @metcalf commit access?\n. Provided everything builds nicely I can do builds as I do have rubygems\naccess! I haven't setup my go tool chain for building which is what has\nheld up builds in the recent past. Are there release notes for the release\nas well?\nOn May 18, 2016 5:51 PM, \"Andrew Metcalf\" notifications@github.com wrote:\n\n> Bumps version to 0.15.6. Since I don't have access to Rubygems, I can't\n> actually release this but bumping the version allows us to deploy it via\n> our internal gem server.\n> \n> @burke https://github.com/burke: any objections to me bumping the\n> version as we land changes even if we have no way to release in lock-step?\n> As a consequence, releases on rubygems would have gaps in the version\n> \n> ## sequence but I don't think that's a problem in practice.\n> \n> You can view, comment on, or merge this pull request online at:\n> \n>   https://github.com/burke/zeus/pull/551\n> Commit Summary\n> - Bump version for release\n> \n> File Changes\n> - _M_ VERSION https://github.com/burke/zeus/pull/551/files#diff-0\n>   (2)\n> \n> Patch Links:\n> - https://github.com/burke/zeus/pull/551.patch\n> - https://github.com/burke/zeus/pull/551.diff\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly or view it on GitHub\n> https://github.com/burke/zeus/pull/551\n. No problem, I'll try to get the intermediate versions built. I have to do it when I'm on my laptop (Mac) which I don't use nearly as much as my linux box these days.\n. Yeah this is 100% the right choice. I have definitely hit this before. LGTM.\n. Anything to make the build process more reliable and consistent is fine with me. I've had issues in the past where I've tried to build after some time has passed and the golang dependencies have changed. I'd characterize myself as a novice golang programmer so the best practices here are really not something I know much about.\n\nTLDR: :shipit: \n. @metcalf just installed this myself and I get an immediate exit status 1 on linux whereas, no other changes, 0.15.4 works fine. Troubleshooting tips?\n\n```\n$ zeus start\nStarting Zeus server v0.15.9\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus destroy (alias: d)\nzeus dbconsole\nzeus rake\nzeus runner (alias: r)\nzeus console (alias: c)\nzeus server (alias: s)\nzeus generate (alias: g)\nzeus test (alias: rspec, testrb)\nexit status 1\n\n$ gem uninstall zeus -v 0.15.9\nSuccessfully uninstalled zeus-0.15.9\n$ zeus start                                                                                                                                                                                          \nStarting Zeus server v0.15.4\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus rake\nzeus runner (alias: r)\nzeus console (alias: c)\nzeus server (alias: s)\nzeus generate (alias: g)\nzeus destroy (alias: d)\nzeus dbconsole\nzeus test (alias: rspec, testrb)\n```\n. ```\n2016/06/30 17:05:15.487917 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:384] boot/(no PID) root process exited with an error before it could boot: exit status 1; output was: /home/drew/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/zeus-0.15.9/lib/zeus/rails.rb:17:in `require': cannot load such file -- zeus (LoadError)\n        from /home/drew/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/zeus-0.15.9/lib/zeus/rails.rb:17:in `<top (required)>'\n        from /home/drew/.rbenv/versions/2.3.0/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:127:in `require'\n        from /home/drew/.rbenv/versions/2.3.0/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:127:in `rescue in require'\n        from /home/drew/.rbenv/versions/2.3.0/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:40:in `require'\n```\n. I have been using zeus with Rails 5 beta and rc releases for months, should be fine.\n. sigh yeah it probably is from that change. It really cleaned some things up. I wonder, if we were to add `require 'rspec/autorun'` like the minitest version, would that clean it up? hmm....\n. ``` sh\n~/go-workspace/src/github.com/burke/zeus$ make\ngo get github.com/kardianos/govendor\nZEUS_TEST_GEMPATH=/home/drew/go-workspace/src/github.com/burke/zeus/rubygem GO15VENDOREXPERIMENT=1 govendor test +local\ngo/filemonitor/filemonitor_fsnotify.go:8:2: cannot find package \"github.com/fsnotify/fsnotify\" in any of:\n    /home/drew/go/src/pkg/github.com/fsnotify/fsnotify (from $GOROOT)\n    /home/drew/go-workspace/src/github.com/fsnotify/fsnotify (from $GOPATH)\nError: exit status 1\nmake: *** [test-go] Error 2\n```\n\nI may be running an older version of golang at this point...\n\n``` sh\n~/go-workspace/src/github.com/burke/zeus$ go version\ngo version go1.2.1 linux/amd64\n```\n. Tried to resolve this a bit myself:\n\n``` sh\n~/go-workspace/src/github.com/burke/zeus$ go get github.com/fsnotify/fsnotify\n# golang.org/x/sys/unix\n../../../golang.org/x/sys/unix/syscall_solaris.go:38: clen redeclared in this block\n    previous declaration at ../../../golang.org/x/sys/unix/syscall_linux.go:817\n../../../golang.org/x/sys/unix/syscall_solaris.go:51: ParseDirent redeclared in this block\n    previous declaration at ../../../golang.org/x/sys/unix/syscall_linux.go:830\n../../../golang.org/x/sys/unix/syscall_solaris.go:77: Pipe redeclared in this block\n    previous declaration at ../../../golang.org/x/sys/unix/syscall_linux_amd64.go:110\n../../../golang.org/x/sys/unix/syscall_solaris.go:91: (*SockaddrInet4).sockaddr redeclared in this block\n    previous declaration at ../../../golang.org/x/sys/unix/syscall_linux.go:311\n../../../golang.org/x/sys/unix/syscall_solaris.go:105: (*SockaddrInet6).sockaddr redeclared in this block\n    previous declaration at ../../../golang.org/x/sys/unix/syscall_linux.go:325\n../../../golang.org/x/sys/unix/syscall_solaris.go:120: (*SockaddrUnix).sockaddr redeclared in this block\n    previous declaration at ../../../golang.org/x/sys/unix/syscall_linux.go:340\n../../../golang.org/x/sys/unix/syscall_solaris.go:146: Getsockname redeclared in this block\n    previous declaration at ../../../golang.org/x/sys/unix/syscall_linux.go:525\n../../../golang.org/x/sys/unix/syscall_solaris.go:155: ImplementsGetwd redeclared in this block\n    previous declaration at ../../../golang.org/x/sys/unix/syscall_linux.go:184\n../../../golang.org/x/sys/unix/syscall_solaris.go:159: Getwd redeclared in this block\n    previous declaration at ../../../golang.org/x/sys/unix/syscall_linux.go:188\n../../../golang.org/x/sys/unix/syscall_solaris.go:180: Getgroups redeclared in this block\n    previous declaration at ../../../golang.org/x/sys/unix/syscall_linux.go:201\n../../../golang.org/x/sys/unix/syscall_solaris.go:180: too many errors\n```\n\n:cry: \n. Tried a little more after installing golang 1.7.1\n\n``` sh\n~/go-workspace/src/github.com/burke/zeus$ go version\ngo version go1.7.1 linux/amd64\n\n~/go-workspace/src/github.com/burke/zeus$ make\ngo get github.com/kardianos/govendor\n# github.com/kardianos/govendor/cliprompt\n../../kardianos/govendor/cliprompt/cliPrompt.go:13: import /home/drew/go-workspace/pkg/linux_amd64/github.com/kardianos/govendor/prompt.a: not a package file\n# github.com/kardianos/govendor/context\n../../kardianos/govendor/context/context.go:18: import /home/drew/go-workspace/pkg/linux_amd64/github.com/kardianos/govendor/internal/pathos.a: not a package file\nmake: *** [govendor] Error 2\n\n~/go-workspace/src/github.com/burke/zeus$ make clean\nrm -rf vagrant/ext/fsevents/build man/build go/zeusversion\nrm -rf rubygem/{man,build,pkg,examples,lib/zeus/version.rb,MANIFEST}\nrm -rf vagrant/{build,pkg,lib/vagrant-zeus/version.rb,MANIFEST}\n\n~/go-workspace/src/github.com/burke/zeus$ make\nmkdir -p go/zeusversion\ngo get github.com/kardianos/govendor\n# github.com/kardianos/govendor/cliprompt\n../../kardianos/govendor/cliprompt/cliPrompt.go:13: import /home/drew/go-workspace/pkg/linux_amd64/github.com/kardianos/govendor/prompt.a: not a package file\n# github.com/kardianos/govendor/context\n../../kardianos/govendor/context/context.go:18: import /home/drew/go-workspace/pkg/linux_amd64/github.com/kardianos/govendor/internal/pathos.a: not a package file\nmake: *** [govendor] Error 2\n```\n. @tisba can you show the actual code that is generating the warning?\n. > not sure what you mean\n\nI mean: what is the **actual** warning, what is the **actual** line of code that is generating the warning, what is the **actual** code context around the line generating the warning?\n\nNote: I did not ask \"what is an example of the warning\". From lots of time spent on IRC, I have found that people post bad examples of their code and the issue often is very obvious when the actual code that is causing an issue is shown.\n. @maxcal @rwjblue thanks for the sample code and confirmation that it works, I'll see if I can't get that integrated into the default plan...\n. This will go out in the next release, thanks @sshao \n. Fixed by #338!\n. This seems to be working for me on the newest zeus. If you're still having this issue and have upgraded to the newest zeus, please open a new issue.\n. @rusterholz I understand your frustration but zeus is volunteer-run. We all have jobs that we do in addition to working on this. Pull requests are welcome. Vitriol is not.\n. I always install it globally in every new ruby I install. I don't think there's really a problem either way.\n. @techthumb if you rebase your branch on master, the spec failures are now fixed. If you can take another go at writing a spec for this, it can get merged in! :heart:\n. I can replicate a very similar issue to this on Rails 3.2.12, minitest 4.7.3, and zeus 0.13.3.rc2 if I put my test_helper require statements in the wrong order:\n\n``` ruby\n# Works great!\nrequire 'rails/test_help'\nrequire 'minitest/rails'\n\n# Double test runs\nrequire 'minitest/rails'\nrequire 'rails/test_help'\n```\n\nNote that this is most likely a PEBKAC-type issue - the minitest-rails wiki advises the former ordering in their [upgrading minitest-rails wiki entry](https://github.com/blowmage/minitest-rails/wiki/Upgrading-to-0.9).\n. Thanks @JESii for the README note on this.\n. :+1: this fixed the specs for me too.\n. For future reference, this fixes an issue I opened with Minitest here: https://github.com/seattlerb/minitest/issues/290\n. @blowmage thank you for that! :heart: :heartbeat: :+1:\n. If you're still having json issues, please try the newest version of zeus (you can get it with gem install `zeus --pre`). It includes [this fix](https://github.com/burke/zeus/commit/548fdc670db73cea05bdf526d06bbc3f0100471c) which should load the version of the json gem specified in your Gemfile.\n. v0.15.0 is now released with this fix.\n. I did a little digging into the rspec-core source for this. The `BacktraceCleaner` class was introduced into rspec-core since version 2.13.1 so as a first attempt, you could upgrade to 2.14.0.rc1 and see if it fixes your problem. The logic for which lines are cleaned from a backtrace has changed slightly (they now use a combination whitelist and blacklist) though I'm not sure if it will change your results.\n\nThe only thing I could think of is that rspec is being invoked from a different working directory from zeus than you would normally invoke rspec. That would explain why it isn't excluding directories the way it normally would. I'm interested to know if upgrading rspec works for you - if not, then perhaps it's an issue with the way zeus invokes rspec.\n. Seeing as how 0.13.4.pre2 includes a fix, I'm closing this. Please open a new issue if you've upgraded to the most recent version of zeus and are still seeing this issue. Thanks for reporting it! :+1:\n. As mentioned elsewhere in the github issues and now in the README, tests running twice is often the result of having 'minitest/autorun' or 'rspec/autorun' in your test helper file. I created a new rails 4 app, created a model, and ran the tests and they only run once for me through zeus. If you can submit a sample application along with, preferably, a zeus.json that you're using that exhibits the behavior, I will reopen.\n. What version of zeus are you running? I cloned your example app and ran the test through zeus and it only runs once for me. However, I'm using my own built version of the most recent master because of some fixes that haven't landed in a release yet - is it possible for you to try a newer version of zeus?\n\n@burke could you tag a new release with the most recent fixes or is there still some unfinished work with JSON parsing? I don't have a build environment to build the OSX version unfortunately :(\n. @justin808 your version of zeus is out of date by more than a year and a half. Please update, try again, and open a **new issue** if you're having problems.\n. Very cool! :+1:\n. @burke This seems like a big win and if you think the change looks good (sorry I'm a bit of a noob to Go) I think it should be merged.\n\nWe could use a new tagged version too if you have a sec, the pre-release seems stable enough and there are even a few fixes that aren't in a build yet.\n. I don't think this is a Zeus issue, but I'm open minded and willing to be\nshown wrong. You can indicate that a symbol should be resolved to global\nscope by prepending a double colon like this - ::A::A_CONST\nOn Jun 11, 2013 4:18 AM, \"indyarocks\" notifications@github.com wrote:\n\n> Hi,\n> \n> I'm using zeus for my local development. Amazing tool. But I found one\n> issue while resolving the namespace.\n> Suppose I have defined a constant in model a.rb:\n> A_CONS = {:a => 1}\n> \n> Now if I try to refer this constant from model b.rb:\n> x = B.create(:a => A::A_CONST)\n> \n> Then creation of x fails with error:\n> NameError (uninitialized constant B::A::A_CONST):\n> ....\n> ....\n> \n> The same code is succeeding when I run it using \"rails s\".\n> ruby 1.9.3p429 (2013-05-15 revision 40747)\n> Rails 3.0.5\n> \n> Is it issue with 'zeus' or I'm missing something here?\n> \n> Thanks,\n> Chandan\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/363\n> .\n. Please reopen if this is still causing you issues.\n. Can you please try with the latest pre-release?\n\n``` bash\ngem install zeus --pre\n```\n. Please see #355 and reopen if that fix doesn't help you.\n. Do you have a custom plan? Can you push an example app?\n. As mentioned elsewhere in the issues, double test runs often stem from requiring `rspec/autorun`. Can you confirm that you don't have that in your spec_helper?\n. You're comparing 1 minute 26 seconds to 1 minute 28 seconds. That's essentially a rounding error.\n\nWhat kind of failures are you seeing by switching between zeus/no zeus?\n. No problem, glad to help.\n. You need to give us more information or we can't help you. Please see the [contribution guide](https://github.com/burke/zeus/blob/master/contributing.md) for more information. Also helpful information: versions of gems, version of rails, version of zeus, plan.rb, operating system, example app that exhibits the issue.\n. If it works, I'd say it's the right way! The custom plan is intended for atypical project structures. :+1:\n. Zeus can only load your code the way you wrote it, if you have a syntax error then you need to correct it before your app can run. Notice that it indicates that you should run the individual command to see the backtrace.\n. If someone is more familiar with bundler than I, that person could take a crack at trying to discern if the bundle is ready to go before starting up the zeus processes. Otherwise I'm not sure how to handle this, feedback and pull requests welcome :)\n. You can build the gem for just your platform, that is what I do on Ubuntu.\nPop open the makefile and find the make command for your arch and try that.\nOn Aug 6, 2013 8:18 AM, \"Iazel\" notifications@github.com wrote:\n\n> I'm trying to install the last version of zeus on Ubuntu 12.04.\n> I've read contributions.md, installed golang, the gems needed and also\n> run dev-bootstrap.sh as sudo, but when I run \"make all\", after compiling\n> all the go source, exit with this error:\n> \n> make[1]: xcodebuild: Command not found\n> make[1]: **\\* [default] Error 127\n> make: **\\* [fsevents] Error 2\n> \n> For what I know, xcodebuild is only for mac and not really an error, but\n> I don't understand the others two.\n> \n> The full output:\n> \n> go fmt ./go/restarter/restarter.go\n> go fmt ./go/filemonitor/filemonitor_test.go\n> go fmt ./go/filemonitor/filemonitor.go\n> go fmt ./go/zeusversion/zeusversion.go\n> go fmt ./go/processtree/slavemonitor.go\n> go fmt ./go/processtree/slavenode.go\n> go fmt ./go/processtree/processtree.go\n> go fmt ./go/unixsocket/oobreader.go\n> go fmt ./go/unixsocket/unixsocket_test.go\n> go fmt ./go/unixsocket/unixsocket.go\n> go fmt ./go/unixsocket/usock.go\n> go fmt ./go/statuschart/stdout.go\n> go fmt ./go/statuschart/tty.go\n> go fmt ./go/statuschart/statuschart.go\n> go fmt ./go/zeusclient/zeusclient.go\n> go fmt ./go/clienthandler/clienthandler.go\n> go fmt ./go/zerror/zerror.go\n> go fmt ./go/shinylog/shinylog.go\n> go fmt ./go/zeusmaster/zeusmaster.go\n> go fmt ./go/config/config.go\n> go fmt ./go/cmd/zeus/zeus.go\n> go fmt ./go/messages/messages.go\n> make[1]: xcodebuild: Command not found\n> make[1]: **\\* [default] Error 127\n> make: **\\* [fsevents] Error 2\n> \n> If you need other info, let me know. Thank you in advance and compliment\n> for this great gem! :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/384\n> .\n. I believe I did something like the following:\n- `cd rubygem`\n- increment the `version.rb` file version (I used something like 0.13.4.pre1)\n- `rake`\n\nAt that point it should dump the gem into the pkg directory from which you can gem install. Obviously the gem you build will not be cross-platform compatible but for just yourself it should work fine. I've been using a custom build of zeus for a few months now without incident.\n\nAs you've discovered, the current build process is heavily slanted toward an OSX build environment which makes it a pain to build only the linux version. At this point it's the price we pay for a tool as awesome as zeus.\n. Can you use the standard vagrant shared volume and host the code on your machine instead of the VM?\n. Hello, @methyl, thanks for the PR! Can you write a test or two for this? I think you should be able to do something like `if defined?(Rspec)` as a proxy for \"was rspec required\". If you can provide a test or two I will merge it post-haste! Thanks again for taking the time to contribute.\n. Double test runs are addressed in the README. If removing `rspec/autorun` from your spec_helper does not fix your issue, please reopen.\n. Thanks @dgilperez!\n. Hey @antifuchs I honestly have no idea. I merged the commit because it let me easily build on my system but unfortunately I don't have a mac to test on. Do you think #405 is a fix for this issue as well?\n. @antifuchs if you need any assistance testing on Linux, I'm more than willing to lend a hand. Thanks so much for working on this!\n. @NobbZ if there's a gem in the global gemset, you can remove it thusly:\n\n``` sh\nrvm use 2.0.0@global\ngem uninstall gemname\n```\n\nEvery rvm ruby has a global gemset like that. Sometimes handy, sometimes insidious :)\n. Pulled in your changes, made the gem on ubuntu x64 and it seems to work fine, although on my `zeus start` tmux pane I see the following after running a few zeus commands:\n\n``` log\nslavenode.go:130: Unexpected process for slave `boot` was killed\nslavenode.go:130: Unexpected process for slave `boot` was killed\nslavenode.go:130: Unexpected process for slave `boot` was killed\n```\n\nI think you mentioned elsewhere about this. Do you think it's harmful? Is there a way we can suppress the message if it doesn't mean anything? My gut instinct is that it does mean something and we should hunt it down.\n. I've now been using a build from master including this commit for a week and it has been working great on Linux.\n. Building an updated version now, I'll keep you posted how it works over the next few days.\n. Smoke test is A-OK, :+1: so far - everything seems to be working. I tested on 3 different projects, Ruby 2.0 and 1.9.3. I say we merge it and cut a new version - can you build and publish the gem to rubygems? I was unsuccessful getting the full golang cross-compile toolchain installed a few months back.\n. The `m` that you see there is a customized version of the [m gem](https://github.com/qrush/m). It's a very small convenience library for invoking tests by line number.\n. If you are seeing a different version of `rspec` used by `bundle exec rspec` and that of your `Gemfile.lock`, you should re-bundle or double-check your current environment as that should not happen. Zeus does not modify which version of rspec is in your bundle.\n. Zeus version?\n. This line:\n\n``` sh\nruby -rubygems -r./custom_plan -eZeus.go\n```\n\nRequires the `custom_plan.rb` file. If it doesn't exist, there's not much we can do. This is not a zeus issue but a Ruby issue.\n. Please try the updated version of zeus and open a new issue if this persists.\n. Please update to the newest version and open a new ticket if this issue persists.\n. I think this was probably an issue of not running `make clean` before cutting the gem for release. I suppose we could fix the makefile to prevent this...\n. This also happens to me from time to time but I haven't been able to isolate any behavior that reliably causes it. Restarting zeus works for me every time - does that work for you? Does this happen often to you? Have you noticed it happening in any specific circumstances (editing specific files, running specific tasks, etc)?\n. The `carrierwave-mongoid` version you're having issues with is so old that they don't even have a tag for it on Github. Can you try with an updated version of the gem?\n. The fix for tests running multiple times is well-documented elsewhere in the issue tracker and in the README.\n. In order to build the gem you need a Go toolchain. The requirements are detailed [here](https://github.com/burke/zeus/blob/master/contributing.md#hacking-on-zeus) and are pretty straightforward on OS X and linux. I can roll a new release however I think I'll need to grab someone to build the OSX version as I don't have access to a mac.\n. Thanks for doing this @joffotron. Pushing a new gem is on my todo list and I'll get it up next week.\n. @joffotron can I have you rebuild off of the tip of master? I got my cross-compile tools working great but I unfortunately can't build the darwin binary due to the XCode requirement.\n. Please note that we're publishing it as 0.15.0, not 0.14.0rc1 as indicated by this issue's title :)\n. v0.15.0 is now out!\n. This does not appear to be an issue with zeus, but rather with you making a web connection after stubbing web connections. Check the documentation for fakeweb for more information on how to use it.\n. Not currently, pull requests welcome!\n. If, after the process crashes, you try calling `zeus server` or any of the other commands, do you get a stack trace?\n. Some other issues have mentioned that updating the `method_source` gem may help. The Pry gem depends on `method_source` so that could explain why updating pry also helped. I tried yesterday on a Rails 4.1 app with Ruby 2.1.1 and the newest version of zeus seems to be working. Relevant versions:\n\nruby 2.1.1\nrails 4.1.0\njson 1.8.1\nzeus 0.15.0\nmethod_source 0.8.2\n\nIf you're still having trouble with this, please try upgrading zeus, method_source, and pry and see if the problem persists.\n. As noted elsewhere in the thread, you can name this file anything you want. `custom_plan.rb` is simply the example. Now renaming the example to be more zeus-specific, I can see the appeal. PRs accepted!\n. This error probably means that you have multiple versions of rake installed. You can include zeus in your Gemfile but you shouldn't need to - simply uninstall the version of rake you aren't using.\n. @burke while you're here, could you add someone else as a gemcutter as well? :smile:\n\nAlso, :+1: to this, make it so!\n. Looks good, can you add a test for this?\n. Looks great, thank you!\n. I also like the idea of this PR - letting the computer do more of the work is always the best answer. Currently, when you run `zeus init` in a directory, [`zeus s` becomes the default to invoke `rails server`](https://github.com/burke/zeus/blob/master/examples/custom_plan/zeus.json). So, I think this could be confusing and would break backwards compatibility. One thing you might try (and what I do) is to set up bash aliases for your oft-used commands. For example, I have simply `z` mapped to `zeus` so I can run all my commands with things like `z t` for testing or `z c` for a new console.\n\nAnother thing to try would be to have a script bootstrap your dev environment. My preference for this is [tmuxinator](https://github.com/tmuxinator/tmuxinator). I don't often actually run the zeus start command due to tmuxinator taking care of starting up my various tabs for me.\n. Thanks for contributing!\n. I believe you can instruct Ruby to read your file with a specific encoding by placing the encoding at the top of the file. In this case, I think it's better to allow files to specify the encoding than to have the gem force the encoding. Here's an example of how you do it:\n\n``` ruby\n# encoding: UTF-8\n\nrequire File.expand_path('../boot', __FILE__)\nrequire 'rails/all'\n...\n```\n\nLet me know if this doesn't work for you.\n. The idea is to put it in the file that has the UTF-8 characters: your `application.rb`.\n. Zeus gives that message when the .zeus.sock file exists (`ls -a`). Remove the socket file and you can start it.\n. Love it :heart: :yellow_heart: :purple_heart: thank you!\n. Does it work to put this in your custom plan instead? Or in your `application.rb`? Where is this being used that we need to require it here?\n. Brilliant, thank you very much for pointing that out and fixing it!\n. @ijcd I'm definitely interested to see a patch and we can roll a beta for folks to test for stability.\n. I think we should be able to cover this with a custom plan but it might be a good idea to integrate it with the default plan. Looking into this...\n. Alright I got it working but it requires a new command. @burke any thoughts about using the same command name in two different environments?\n\n``` js\n// zeus.json - If you have an existing file, make sure you change the command\n// to match your custom_plan and the prerake_test line. If you don't have a\n// zeus.json file,  copy this into a new one.\n{\n  \"command\": \"ruby -rubygems -r./custom_plan -eZeus.go\",\n\n  \"plan\": {\n    \"boot\": {\n      \"default_bundle\": {\n        \"development_environment\": {\n          \"prerake\": {\"rake\": []},\n          \"runner\": [\"r\"],\n          \"console\": [\"c\"],\n          \"server\": [\"s\"],\n          \"generate\": [\"g\"],\n          \"destroy\": [\"d\"],\n          \"dbconsole\": []\n        },\n        \"test_environment\": {\n          \"prerake_test\": {\"raket\": []},\n          \"test_helper\": {\"test\": [\"rspec\", \"testrb\"]}\n        }\n      }\n    }\n  }\n}\n```\n\n``` ruby\n# custom_plan.rb - Create this file or add the two methods to your existing custom plan.\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n  def prerake_test\n    require 'rake'\n  end\n\n  def raket\n    Rake.application.run\n  end\nend\n\nZeus.plan = CustomPlan.new\n```\n\nTo run commands in the test environment:\n`zeus raket`\n\nTo migrate your test db:\n`zeus raket db:migrate`\n. I've [added a new file](https://github.com/burke/zeus/blob/master/examples/custom_plan/cucumber_plan.rb) to the examples directory showing how to get cucumber working in your project using a custom_plan file.\n. When you run your tests, how do you run them? Do any other zeus commands exhibit this behavior?\n. I've just pushed v0.15.1 to rubygems which has a fix for this issue, also mentioned in #216 and #155. v0.15.1 effectively reverts the changes in #155 due to that issue only coming up because of a hack that I decided we shouldn't support. Standard rails console and Pry installations should work with the newest version.\n. Unfortunately this is a current limitation of zeus, as documented in the [README](https://github.com/burke/zeus#limitations).\n. Can you try this with 0.15.0 and tell me if it still happens?\n. I was initially worried that it might be related to JRuby because I saw you were (maybe?) running that. However, I downloaded your app and it shows the same behavior. Looking into it a bit...\n. Please open a new issue if this isn't resolved as indicated by @sshao - thanks!\n. This is a pry issue, not a zeus issue. There are many different ways to solve this but googling about pry and reload will get you there.\n. > Actually, it works when i use raw console: rails c\n\nYes, as I mentioned, this is a pry issue (pry console vs irb console), not a zeus issue.\n. @Hates pull requests accepted. Note that I won't accept code that tries to patch over the IRB constant and `zeus console` needs to not break for normal `rails c` as well. I don't have time to work on this issue because it works fine for me to simply add some code to my pryrc. Here's mine:\n\n``` ruby\n# vim: set ft=ruby:\nPry.config.editor = 'vim'\n\nif Kernel.const_defined?(:Rails) && Rails.env\n  require File.join(Rails.root,\"config\",\"environment\")\n  require 'rails/console/app'\n  require 'rails/console/helpers'\n\n  extend Rails::ConsoleMethods\nend\n```\n. Is there some file you can explicitly require to get that method to be available?\n. Additionally, it's unclear to me which `routes` call is generating the error. Can you put your call to `MyEngine::Engine.routes` on a different line so we can see if it's an issue with rspec or an issue with loading your code?\n. > I'm not sure - It would be an RSpec file so I'm totally lost as to what file to actually include. Regardless, I don't think I should be adding lines of code to each spec just to avoid a Zeus error, as it would be frustrating to other team members.\n\nI meant your source file, e.g. `require 'myengine/engine/routes'`.\n\n> The tests run - The error is thrown after the tests finish running. I\n\nIf the tests are trying to run twice, do you have `require 'rspec/autorun'` somewhere in your spec helper? Try removing that and see how we do.\n. I like this idea and would definitely accept a PR! :shipit: :+1: \n. @burke any thoughts on this? I'm not super familiar with go or the internal workings of the go portion of zeus. The issue description strikes me as a race condition.\n. It's a file, not a folder. Remove the file and zeus will start. It simply means zeus did not gracefully shutdown the last time you used it.\n. I'm not sure if it works with unicorn. Why not give it a try and report back with your results?\n. Thanks for your contribution! :+1:\n. You're calling `Rspec.configure` before requiring `rspec/rails`.\n. It's running through the rspec executable, it makes sense to me that `Rspec` is going to be defined.The error message is pretty clear about the issue, I'm not sure what else you want me to say. Did you try rearranging the load order of your `require`s?\n. The error message says that you're calling `configure` on a nonexistent module, `Rspec`. That means that your first call to `Rspec.configure` is coming before you're loading rspec. If you use the executable, something in the executable loads rspec for you so you don't have to worry about it. Without the rspec executable, you have to make sure to load it yourself, as you are with `require 'rspec/rails'`. You just have to make sure you require rspec before you start configuring it. If this is at all unclear to you, you should read up on how `require` works in Ruby - you can't use classes/modules that you have not yet required.\n\nThe error message is quite clear, we don't need any more documentation than this issue and the #308 duplicate.\n. The whole point of using zeus is so that you don't have to worry about loading the entire rails stack, it pre-loads it for you. I don't see the issue with requiring `rspec/rails` for your rails tests. Note that you don't have to require rspec/rails inside your spec_helper, you can simply require it before you require your spec_helper in a different file. The only stipulation is that Rspec has to be required before you use it - the same with any other gem, class, or module in Ruby.\n\n@dreki your criticism is neither constructive nor welcome. There is nothing arcane about \"You're using a module before you've required it\".  If you have suggestions for how you would fix this, I'm willing to listen as well as look at pull requests.\n. My mistake, I didn't realize this issue was about changed behavior in rspec.\n\n@daino3 mentioned the desire to switch the zeus-auto-require to require `rails_helper`. Would it be an agreeable fix to do this for rspec 3.1+? @maxcal @PaBLoX-CL thoughts?\n\nWe do have the environment variable `RAILS_TEST_HELPER` so that could be used to fix this as well but it would be nice to work out of the box with new rspec.\n. @maxcal Avoiding explicit version checks does seem like the sanest fix to me too.\n. @maxcal @PaBLoX-CL I've pushed 0.15.3 to rubygems with a fix for this. Let me know if it doesn't fix your issue!\n. Thanks for the report @johvet \n. A fix provided by @rcook is in master and will be released in the next version of zeus!\n. Thanks so much for the PR! I am on vacation atm but I will take a look and\nmerge it asap once I'm back at home!\nOn Jul 24, 2014 2:31 AM, \"Ian MacLeod\" notifications@github.com wrote:\n\n> ---\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/nevir/zeus specified-config\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/burke/zeus/pull/476\n> Commit Summary\n> - Add a --config option to point to config files in custom locations.\n> \n> File Changes\n> - _M_ go/cmd/zeus/zeus.go\n>   https://github.com/burke/zeus/pull/476/files#diff-0 (10)\n> - _M_ go/config/config.go\n>   https://github.com/burke/zeus/pull/476/files#diff-1 (4)\n> - _M_ man/src/zeus.ronn\n>   https://github.com/burke/zeus/pull/476/files#diff-2 (5)\n> \n> Patch Links:\n> - https://github.com/burke/zeus/pull/476.patch\n> - https://github.com/burke/zeus/pull/476.diff\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/burke/zeus/pull/476.\n. Overall I like it and want to merge it. I don't know a ton about how much this part of zeus is tested but if there are tests for the config options, I'd appreciate a new test for the new option. Also, if there aren't any, I'd absolutely love it if you added a new test for the config parsing!\n. I think you posted this issue to the wrong project, this is zeus, not byebug.\n. You need to give us more information on how to reproduce this issue, otherwise there is nothing we can do. Thanks!\n. I'm not looking for a general description, I'm looking for a specific bug report - I did this, I expected this, I actually got this. I can't debug code I don't see.\n. I'm hesitant to merge this because I added the question mark test specifically for a bug I found with not escaping question marks. Have you tested a build with the updated logic on a test method with a question mark in the name?\n. This is now merged into master and will be released in v0.15.2. Thanks for your contribution!\n. Thanks for your contribution. For now we're going to leave it as-is. There are many open issues in the issues list so if you'd like to contribute more, we'd greatly appreciate it.\n. This is probably a syntax error from your actual spec file.\n. @rcook thanks for the PR! Travis is reporting test failures due to the changes you made, can you take a look and fix?\n\nAlso, it may be useful to know that MiniTest pre-5.0 had an alias for `MiniTest`, `Minitest`. Checking for the constant `Minitest` therefore isn't enough to detect 5.0. You might try checking version numbers?\n. Thanks so much! \n. @jetsgit line 309 of m.rb is an `end`. I have not published a build with this fix in it yet - did you build it yourself?\n. @jetsgit yes, give me a day or two, I want to try getting in a few other items and testing them.\n. @jetsgit you can already do that:\n\n```\nzeus test test/controllers/my_controller.rb:28\n```\n. @jetsgit just released zeus v0.15.2 this morning. Give it a try!\n\nAs far as golang, just follow the instructions on their site. It's pretty straightforward nowadays.\n. Thank you!\n. Hi @penland365, thanks for the interest!\n\nFirst off, I did not write this portion of zeus but having watched the issue tracker and going through my memory a bit, I think the holdup was an inotify-esque implementation on *BSD systems. On OSX, we use Apple's FSEvents API and on Linux, we use inotify watches. When zeus was written, there was no equivalent for BSD.\n\nHowever, I just did a quick Google and the results turned up more positive than the last time I investigated this. If you're interested, I'd take inspiration from the current implementation of inotify (/rubygems/ext) and check out [this blog post](http://thegreyblog.blogspot.com/2014/02/fsw-file-system-event-notifier-for-mac.html) from earlier this year.\n\nShort answer: feel free to give it a try and patches are always welcome.\n. Closing this issue - if you want to work on it, please do! Just open a PR with your work at any point - even half working is better than our current situation for FreeBSD.\n. You have to give us more information or there's nothing we can do to help.\n. You have to give us more detail to be able to reproduce the issue.\n. [This](https://github.com/burke/zeus/blob/master/go/clienthandler/clienthandler.go#L22-L30) is the relevant snippet of code. It looks to me like we create a unix socket, we resolve it to to an absolute file path and then we try to listen on it. Usually we can't do that if the file already exists. I wonder if docker prevents you from doing things like creating sockets or making specific syscalls?\n. I appreciate your analysis here and sympathize. It has been suggested before that we include better debugging than `exit status 1` and I agree with it wholeheartedly. I am 100% open to pull requests of that nature and haven't had a lot of time to dedicate to zeus of late. To make things simple to start, a flag sent to `zeus start` that displays a backtrace on error would be a fantastic addition and would allow us to cut down on the number of vague/ambiguous issues that get opened.\n\nThis is potentially a golang change which requires getting an environment setup. Are you up to it @kgrz?\n. I sympathize with this request because I myself have done this before but I think it's worth taking another look at what you're trying to do. By design, the test environment tears down and rebuilds the database on every run - you'll end up nuking whatever is in your database on every run if you aren't careful.\n\nIf you really do want to proceed doing this, I recommend you setup a custom `zeus.json` for your project and add a new command that relies on the `development_environment` but runs tests like in the test commands. Here's a rough example of how you'd do that:\n\n``` js\n// zeus.json\n{\n  \"command\": \"ruby -rubygems -rzeus/rails -eZeus.go\",\n\n  \"plan\": {\n    \"boot\": {\n      \"default_bundle\": {\n        \"development_environment\": {\n          \"prerake\": {\"rake\": []},\n          \"runner\": [\"r\"],\n          \"console\": [\"c\"],\n          \"server\": [\"s\"],\n          \"generate\": [\"g\"],\n          \"destroy\": [\"d\"],\n          \"dbconsole\": [],\n          \"test_helper\": {\"test\": [\"devrspec\"]} // <- new line\n        },\n        \"test_environment\": {\n          \"test_helper\": {\"test\": [\"rspec\", \"testrb\"]}\n        }\n      }\n    }\n  }\n}\n```\n\n``` sh\nzeus devrspec <args..to..rspec>\n```\n\nPlease note that I have not tested this and I'm not sure it will work but it does sidestep the `RAILS_ENV` issue you're seeing so I imagine it might work. I don't see us adding this functionality into default zeus but let me know if this works for you!\n. Toss this in your `spec_helper` and tell me if it still happens.\n\n``` ruby\nRSpec.configure do |config|\n  config.filter_gems_from_backtrace 'zeus'\nend\n```\n. Gems used to be part of the default exclusion list of rspec and [no longer are](https://github.com/rspec/rspec-core/blob/master/Changelog.md#310--2014-09-04). Unfortunately that change causes zeus to be included in the backtrace as well which, as you indicated (albeit with a bit of an impolite tone), is not exactly disireable.\n\nI upgraded my sole rspec-using project from rspec 2.x to 3.1 and here's the difference in behavior for me:\n\n``` sh\n  1) User without reseller role reseller? should be true\n     Failure/Error: its(:reseller?) { should be_true }\n       expected: true value\n            got: false\n     # ./spec/models/user_spec.rb:133:in `block (3 levels) in <top (required)>'\n     # -e:1:in `<main>'\n```\n\nAfter:\n\n``` sh\n  1) User without reseller role is not a reseller\n     Failure/Error: expect(subject.reseller?).to eq(true)\n\n       expected: true\n            got: false\n\n       (compared using ==)\n     # ./spec/models/user_spec.rb:137:in `block (3 levels) in <top (required)>'\n     # /home/drew/.rvm/gems/ruby-2.1.5/gems/zeus-0.15.3/lib/zeus/rails.rb:212:in `test'\n     # /home/drew/.rvm/gems/ruby-2.1.5/gems/zeus-0.15.3/lib/zeus.rb:148:in `block in command'\n     # /home/drew/.rvm/gems/ruby-2.1.5/gems/zeus-0.15.3/lib/zeus.rb:135:in `fork'\n     # /home/drew/.rvm/gems/ruby-2.1.5/gems/zeus-0.15.3/lib/zeus.rb:135:in `command'\n     # /home/drew/.rvm/gems/ruby-2.1.5/gems/zeus-0.15.3/lib/zeus.rb:50:in `go'\n     # -e:1:in `<main>'\n```\n\nLooks to me like that `-e:1:in \\`<main>'` was there for both versions - I think it is caused by the fact that zeus is run via a command to ruby that executes code inline. From the default plan:\n\n``` json\n{\n  \"command\": \"ruby -rubygems -rzeus/rails -eZeus.go\",\n}\n```\n\nWe could try to do version detection for RSpec 3.1+ and add the config to exclude zeus and potentially for that extra \"main\" line (per your submitted config above). I'm on the fence about how much we should bend over to support various versions of different gems. It's probably simplest to add the config to your app for now. I would accept a pull request if you'd like to write this feature.\n\nIn any case, thank you for reporting this and testing the fix!\n. My first reaction is that either 1) we need to not create a db connection during setup of test_environment or 2) we need to tear it down when killing that slave. I think (1) is incorrect though, we want it to have a db connection so that we can run commands quickly. So perhaps we need to integrate some kind of teardown where we disconnect from the db.\n. Thanks!! :heart: :purple_heart: :green_heart: \n. Thank you for this!!! Sorry I haven't gotten it merged before today! :heart: :purple_heart: :yellow_heart: :blue_heart: :+1: :+1: \n. @sshao thanks for all your contributions!\n. You could add a new config and pass it in to `statuschart.Start()`, line 44 of `zeusmaster.go` and then allow it to supersede the check for `ttyutils.IsTerminal()` around lines 39-45 of `statuschart.go`. Feel free to take a whack at it if you're feeling brave :smile: \n. > it can't be run from Pry\n\nI'm not sure what you mean by this. Can you give an example of what you are trying to do that isn't working - gems, versions, commands, expected output, actual output? I use pry with zeus every day of the week.\n. Thanks for the contribution!\n. Also, @e2, do you have any suggestions for the Travis failure, other than not testing on Ruby < 2.0?\n. I'll try to get a release out this week. Maybe tomorrow if I have some\nextra time.\nOn Jan 20, 2015 5:21 PM, \"Cezary Baginski\" notifications@github.com wrote:\n\n> @latortuga https://github.com/latortuga, @burke\n> https://github.com/burke, @antifuchs https://github.com/antifuchs,\n> @turadg https://github.com/turadg - could you release a gem with this\n> patch?\n> \n> It's just that I have to manually rebuild the gem and install it manually\n> in every gemset I use (because the project layout doesn't let Bundler use a\n> github/branch source, even if I patched the Makefiles).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/burke/zeus/pull/502#issuecomment-70755269.\n. New release built and pushed to rubygems, v0.15.4!\n. :+1: :heart: :purple_heart: :blue_heart: :green_heart: :yellow_heart: \n. Well that's unexpected. Thanks for the bug report!\n. Definitely open to this. If you're interested, take a crack at it :smile: \n\nUnfortunately building the gem like this requires a go toolchain which perhaps makes it out of scope for most users but it would definitely make testing specific branches easier.\n. That error you posted looks to me like you need to reinstall your pg gem for the new ruby version.\n. Does your app run without zeus?\n. I know it's misleading, perhaps there's something we can do to fix this, but the output from `zeus test -h` is actually the output for the `m` library. Confirm this yourself by running `m -h` if you have the m gem installed. zeus includes a copy of the gem's essential functionality and uses it for running tests by name. Hence, you don't need to use the `-n` flag, you can just run tests by name with no flags:\n\n`zeus test test/models/location_test.rb`\n\nOr by line number:\n\n`zeus test test/models/location_test.rb:15`\n. Thanks for the report, this is a duplicate of #469 and there is a workaround provided there for the time being.\n. I sympathize with you but this is a RubyMine issue, not a zeus issue. If you can customize the command somewhere you can add something like `unset RAILS_ENV`.\n. Is `RAILS_ENV` set in your `.profile` or similar (`.bash_profile`, `.zsh_profile`, etc)? It is obviously set otherwise you wouldn't be getting the message, the question is simply where it is set. Unset it and you'll be good to go.\n. If you run `echo $RAILS_ENV` from the command line where the zeus call is failing, what do you see?\n. Probably because RubyMine sets a RAILS_ENV for its commands. If you can customize the actual command itself, you can add an `unset RAILS_ENV` to it. I'm not familiar enough with RubyMine to know if that's possible or not.\n. Thanks! :+1:\n. My mistake, `Minitest.autorun` is called explicitly.\n\nhttps://github.com/rails/rails/blob/master/railties/lib/rails/test_help.rb#L6 => https://github.com/rails/rails/blob/master/activesupport/lib/active_support/testing/autorun.rb\n. This does not happen for me. What version of zeus are you on?\n. Unfortunately this doesn't happen for me. If you provide an example app that this happens reliably for I can investigate further.\n. Unfortunately I develop on Ubuntu where SIGINFO is not supported so it will be difficult for me to resolve this one. I could make an RC build to see if my changes fix it for OS X...\n. Did you try putting your simplecov init into your test helper?\n. This is a known issue with a fix that will be in the next release. You can try looking through your `spec_helper.rb` file for `require 'rspec/autorun'` and removing it.\n. Thanks for the kind words!\n\nAs for the linked blog post,`instance_eval` ick! Seems like the simple solution would be to use `require`:\n\n``` ruby\nYourApplication::Application.routes.draw do\n  root to: \"home#index\"\n  get \"/about\n  get \"/login\" => \"application#login\" \nend\n\nADDITIONAL_ROUTES = [:messages, :orders, :api, :admin]\nADDITIONAL_ROUTES.each do |route_file|\n  require \"#{Rails.root}/config/routes/#{route_file}\"\nend\n```\n\nThis way you can load them at whatever point you actually need them, before, in the middle, after, etc. As far as I know, there's no problem calling `Application.routes.draw` multiple times.\n\nIn fact, I tested this exact approach just now on a Rails 4.1 app and it worked flawlessly, reloading zeus automatically on changes to routes or `config/routes/*.rb` files.\n. Zeus is designed to be a tool for development, not production. If you want something to keep your processes alive in production, check out init or god or any number of other process management tools.\n. You want a long-running process outside your server process. The usual tool for this job is to run a job worker like Resque, Delayed Job, or Sidekiq. Cron obviously works well but you do have the problem that you have to load the app every time the cron job runs.\n\nThe kernel is probably killing the processes because they mostly just sit there idle. Zeus is just not designed for this use case, sorry.\n. First, thanks so much for this ambitious contribution! :+1: x :100: \n\nSeeing as how I haven't cut a release in months, I'm going to merge this and go live with it. If we find any issues we can always fix em up later. I've bumped zeus support to ruby 2.0+ as 1.9.3 isn't even officially supported anymore.\n. @doy unfortunately, I'm having issues getting zeus to build on master now. Any chance you can get a golang environment setup and try to troubleshoot a bit?\n. To be more precise, I'm having issue with the built gem, zeus crashes on start. Here's my rc build:\n\nhttps://www.dropbox.com/s/ityddamsevucna9/zeus-0.15.5.rc1.gem?dl=0\n. Gem built on mac, testing on mac. Haven't tested on linux yet.\n. Same result on Ubuntu, immediate panic on startup. Not sure if my golang-fu is good enough to track this down. Here's a gist of the panic output: https://gist.github.com/latortuga/0814bf8f64317986f982\n. Seems there's a race somewhere. @burke any chance you could try to take a look at this? I tried to look into this issue a month or so back and I found that I just don't know enough about golang tools or panic traces to be able to debug efficiently.\n. Zeus does not do anything magical as far as\n\n> pulling in all the Rails dependencies\n\nZeus pre-loads your application by [requiring `application.rb`](https://github.com/burke/zeus/blob/master/rubygem/lib/zeus/rails.rb#L104) just the same way that booting up a rails server/console/rake task would. There's no way for me to debug this issue without seeing an app that reproduces it.\n\nI suspect the root of your issues is that your spec helper is not loading the full Rails env.\n. I'm sorry but I can't debug code I can't see. Trying to make a simple example app that exhibits the problem may lead you to a solution.\n. I like this approach quite a bit, will give it a try locally and see how it works out!\n. I'm happy enough with issues surrounding json and rake being mitigated by this to merge it.\n. The project Makefile has tasks to generate the version files. There are actually multiple tasks for this:\n\n``` sh\nmake go/zeusversion/zeusversion.go\nmake rubygem/lib/zeus/version.rb\nmake vagrant/lib/vagrant-zeus/version.rb\n```\n\nGenerally when I'm testing a build, I populate the VERSION file with a testing build number (e.g. 0.15.5.rc1) and then generate the version files.\n. Once I've got the issues ironed out with the Vagrant plugin, I'll be happy to merge your PRs, @kgrz :smile: :+1: \n. Option 1: Remove pry from your Gemfile.\nOption 2: Add `require: false` to pry in your Gemfile.\n. @doy sounds good, I'll merge this now and you can submit your PR and I'll build/test it once it's all ready to roll!\n. Merged this branch and built it and I'm still getting a panic on start up: https://gist.github.com/latortuga/0216f3c0cf2e11b4ec8b\n. It does not build currently.\n. @burke can you give @metcalf commit access?\n. Provided everything builds nicely I can do builds as I do have rubygems\naccess! I haven't setup my go tool chain for building which is what has\nheld up builds in the recent past. Are there release notes for the release\nas well?\nOn May 18, 2016 5:51 PM, \"Andrew Metcalf\" notifications@github.com wrote:\n\n> Bumps version to 0.15.6. Since I don't have access to Rubygems, I can't\n> actually release this but bumping the version allows us to deploy it via\n> our internal gem server.\n> \n> @burke https://github.com/burke: any objections to me bumping the\n> version as we land changes even if we have no way to release in lock-step?\n> As a consequence, releases on rubygems would have gaps in the version\n> \n> ## sequence but I don't think that's a problem in practice.\n> \n> You can view, comment on, or merge this pull request online at:\n> \n>   https://github.com/burke/zeus/pull/551\n> Commit Summary\n> - Bump version for release\n> \n> File Changes\n> - _M_ VERSION https://github.com/burke/zeus/pull/551/files#diff-0\n>   (2)\n> \n> Patch Links:\n> - https://github.com/burke/zeus/pull/551.patch\n> - https://github.com/burke/zeus/pull/551.diff\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly or view it on GitHub\n> https://github.com/burke/zeus/pull/551\n. No problem, I'll try to get the intermediate versions built. I have to do it when I'm on my laptop (Mac) which I don't use nearly as much as my linux box these days.\n. Yeah this is 100% the right choice. I have definitely hit this before. LGTM.\n. Anything to make the build process more reliable and consistent is fine with me. I've had issues in the past where I've tried to build after some time has passed and the golang dependencies have changed. I'd characterize myself as a novice golang programmer so the best practices here are really not something I know much about.\n\nTLDR: :shipit: \n. @metcalf just installed this myself and I get an immediate exit status 1 on linux whereas, no other changes, 0.15.4 works fine. Troubleshooting tips?\n\n```\n$ zeus start\nStarting Zeus server v0.15.9\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus destroy (alias: d)\nzeus dbconsole\nzeus rake\nzeus runner (alias: r)\nzeus console (alias: c)\nzeus server (alias: s)\nzeus generate (alias: g)\nzeus test (alias: rspec, testrb)\nexit status 1\n\n$ gem uninstall zeus -v 0.15.9\nSuccessfully uninstalled zeus-0.15.9\n$ zeus start                                                                                                                                                                                          \nStarting Zeus server v0.15.4\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus rake\nzeus runner (alias: r)\nzeus console (alias: c)\nzeus server (alias: s)\nzeus generate (alias: g)\nzeus destroy (alias: d)\nzeus dbconsole\nzeus test (alias: rspec, testrb)\n```\n. ```\n2016/06/30 17:05:15.487917 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:384] boot/(no PID) root process exited with an error before it could boot: exit status 1; output was: /home/drew/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/zeus-0.15.9/lib/zeus/rails.rb:17:in `require': cannot load such file -- zeus (LoadError)\n        from /home/drew/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/zeus-0.15.9/lib/zeus/rails.rb:17:in `<top (required)>'\n        from /home/drew/.rbenv/versions/2.3.0/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:127:in `require'\n        from /home/drew/.rbenv/versions/2.3.0/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:127:in `rescue in require'\n        from /home/drew/.rbenv/versions/2.3.0/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:40:in `require'\n```\n. I have been using zeus with Rails 5 beta and rc releases for months, should be fine.\n. sigh yeah it probably is from that change. It really cleaned some things up. I wonder, if we were to add `require 'rspec/autorun'` like the minitest version, would that clean it up? hmm....\n. ``` sh\n~/go-workspace/src/github.com/burke/zeus$ make\ngo get github.com/kardianos/govendor\nZEUS_TEST_GEMPATH=/home/drew/go-workspace/src/github.com/burke/zeus/rubygem GO15VENDOREXPERIMENT=1 govendor test +local\ngo/filemonitor/filemonitor_fsnotify.go:8:2: cannot find package \"github.com/fsnotify/fsnotify\" in any of:\n    /home/drew/go/src/pkg/github.com/fsnotify/fsnotify (from $GOROOT)\n    /home/drew/go-workspace/src/github.com/fsnotify/fsnotify (from $GOPATH)\nError: exit status 1\nmake: *** [test-go] Error 2\n```\n\nI may be running an older version of golang at this point...\n\n``` sh\n~/go-workspace/src/github.com/burke/zeus$ go version\ngo version go1.2.1 linux/amd64\n```\n. Tried to resolve this a bit myself:\n\n``` sh\n~/go-workspace/src/github.com/burke/zeus$ go get github.com/fsnotify/fsnotify\n# golang.org/x/sys/unix\n../../../golang.org/x/sys/unix/syscall_solaris.go:38: clen redeclared in this block\n    previous declaration at ../../../golang.org/x/sys/unix/syscall_linux.go:817\n../../../golang.org/x/sys/unix/syscall_solaris.go:51: ParseDirent redeclared in this block\n    previous declaration at ../../../golang.org/x/sys/unix/syscall_linux.go:830\n../../../golang.org/x/sys/unix/syscall_solaris.go:77: Pipe redeclared in this block\n    previous declaration at ../../../golang.org/x/sys/unix/syscall_linux_amd64.go:110\n../../../golang.org/x/sys/unix/syscall_solaris.go:91: (*SockaddrInet4).sockaddr redeclared in this block\n    previous declaration at ../../../golang.org/x/sys/unix/syscall_linux.go:311\n../../../golang.org/x/sys/unix/syscall_solaris.go:105: (*SockaddrInet6).sockaddr redeclared in this block\n    previous declaration at ../../../golang.org/x/sys/unix/syscall_linux.go:325\n../../../golang.org/x/sys/unix/syscall_solaris.go:120: (*SockaddrUnix).sockaddr redeclared in this block\n    previous declaration at ../../../golang.org/x/sys/unix/syscall_linux.go:340\n../../../golang.org/x/sys/unix/syscall_solaris.go:146: Getsockname redeclared in this block\n    previous declaration at ../../../golang.org/x/sys/unix/syscall_linux.go:525\n../../../golang.org/x/sys/unix/syscall_solaris.go:155: ImplementsGetwd redeclared in this block\n    previous declaration at ../../../golang.org/x/sys/unix/syscall_linux.go:184\n../../../golang.org/x/sys/unix/syscall_solaris.go:159: Getwd redeclared in this block\n    previous declaration at ../../../golang.org/x/sys/unix/syscall_linux.go:188\n../../../golang.org/x/sys/unix/syscall_solaris.go:180: Getgroups redeclared in this block\n    previous declaration at ../../../golang.org/x/sys/unix/syscall_linux.go:201\n../../../golang.org/x/sys/unix/syscall_solaris.go:180: too many errors\n```\n\n:cry: \n. Tried a little more after installing golang 1.7.1\n\n``` sh\n~/go-workspace/src/github.com/burke/zeus$ go version\ngo version go1.7.1 linux/amd64\n\n~/go-workspace/src/github.com/burke/zeus$ make\ngo get github.com/kardianos/govendor\n# github.com/kardianos/govendor/cliprompt\n../../kardianos/govendor/cliprompt/cliPrompt.go:13: import /home/drew/go-workspace/pkg/linux_amd64/github.com/kardianos/govendor/prompt.a: not a package file\n# github.com/kardianos/govendor/context\n../../kardianos/govendor/context/context.go:18: import /home/drew/go-workspace/pkg/linux_amd64/github.com/kardianos/govendor/internal/pathos.a: not a package file\nmake: *** [govendor] Error 2\n\n~/go-workspace/src/github.com/burke/zeus$ make clean\nrm -rf vagrant/ext/fsevents/build man/build go/zeusversion\nrm -rf rubygem/{man,build,pkg,examples,lib/zeus/version.rb,MANIFEST}\nrm -rf vagrant/{build,pkg,lib/vagrant-zeus/version.rb,MANIFEST}\n\n~/go-workspace/src/github.com/burke/zeus$ make\nmkdir -p go/zeusversion\ngo get github.com/kardianos/govendor\n# github.com/kardianos/govendor/cliprompt\n../../kardianos/govendor/cliprompt/cliPrompt.go:13: import /home/drew/go-workspace/pkg/linux_amd64/github.com/kardianos/govendor/prompt.a: not a package file\n# github.com/kardianos/govendor/context\n../../kardianos/govendor/context/context.go:18: import /home/drew/go-workspace/pkg/linux_amd64/github.com/kardianos/govendor/internal/pathos.a: not a package file\nmake: *** [govendor] Error 2\n```\n. ",
    "robwil": "@tisba @aokolish Following the exact instructions at the https://github.com/burke/zeus/wiki/SimpleCov wiki page, I am seeing the Constant redefinition warnings as well. I'm happy to ignore those.\n\nHowever, I think what's actually happening is that my models are being loaded twice. This is showing up because some of my tests in the format of `expect(post).to have(1).errors_on(:contents)` are failing because they have 2 errors. Debugging shows that my validation error messages contain duplicate errors, e.g. `[\"can't be blank\", \"can't be blank\"]`.\n. @tisba @aokolish Following the exact instructions at the https://github.com/burke/zeus/wiki/SimpleCov wiki page, I am seeing the Constant redefinition warnings as well. I'm happy to ignore those.\n\nHowever, I think what's actually happening is that my models are being loaded twice. This is showing up because some of my tests in the format of `expect(post).to have(1).errors_on(:contents)` are failing because they have 2 errors. Debugging shows that my validation error messages contain duplicate errors, e.g. `[\"can't be blank\", \"can't be blank\"]`.\n. ",
    "johaned": "Hi, sorry my english is not the best around, i'm working on Rails 4 and i have some \"concerns\" associated with my controllers, the proposed solution about simplecov-zeus does not work for me, the problem is about ActiveSupport::Concern::MultipleIncludedBlocks there is a duplication process in the loading process, A solution to this problem was found with the skipping of \"concern\" directories, because it seems like the modules are being loaded twice (due to the loading sequence), I don't know if this solution is well \n\n``` ruby\nDir[\"#{Rails.root}/app/**/*.rb\"].reject{ |f| f[%r{/app/controllers/concerns/}] || f[%r{/app/models/concerns/}]  }.each { |f| load f }\n```\n. hey @guapolo \nsure, no problem :+1: \n. Hi, sorry my english is not the best around, i'm working on Rails 4 and i have some \"concerns\" associated with my controllers, the proposed solution about simplecov-zeus does not work for me, the problem is about ActiveSupport::Concern::MultipleIncludedBlocks there is a duplication process in the loading process, A solution to this problem was found with the skipping of \"concern\" directories, because it seems like the modules are being loaded twice (due to the loading sequence), I don't know if this solution is well \n\n``` ruby\nDir[\"#{Rails.root}/app/**/*.rb\"].reject{ |f| f[%r{/app/controllers/concerns/}] || f[%r{/app/models/concerns/}]  }.each { |f| load f }\n```\n. hey @guapolo \nsure, no problem :+1: \n. ",
    "guapolo": "@Johaned suggestion worked form me using Rails 4, Zeus 0.15.4, ruby 2.2.\n\nIs it ok if I edit the Wiki page to reflect this solution when using Rails >= 4?\n. @xero88 that's a Rails enum thing. You defined two enums on your model with an element named `:admin`. You can't repeat enum element names on the same model.. Thanks guys.\n. @Johaned suggestion worked form me using Rails 4, Zeus 0.15.4, ruby 2.2.\n\nIs it ok if I edit the Wiki page to reflect this solution when using Rails >= 4?\n. @xero88 that's a Rails enum thing. You defined two enums on your model with an element named `:admin`. You can't repeat enum element names on the same model.. Thanks guys.\n. ",
    "xero88": "This is not working for me. \r\n\r\nI get : \r\n\r\n> You tried to define an enum named \"available_roles\" on the model \"User\", but this will generate a instance method \"admin?\", which is already defined by another enum. (ArgumentError)\r\n. Did you resolved ?\r\nTry this to ignore concerns : \r\n\r\n`Dir[\"#{Rails.root}/app/**/*.rb\"].reject{ |f| f[%r{/app/controllers/concerns/}] || f[%r{/app/models/concerns/}]  }.each { |f| load f }`. This is not working for me. \r\n\r\nI get : \r\n\r\n> You tried to define an enum named \"available_roles\" on the model \"User\", but this will generate a instance method \"admin?\", which is already defined by another enum. (ArgumentError)\r\n. Did you resolved ?\r\nTry this to ignore concerns : \r\n\r\n`Dir[\"#{Rails.root}/app/**/*.rb\"].reject{ |f| f[%r{/app/controllers/concerns/}] || f[%r{/app/models/concerns/}]  }.each { |f| load f }`. ",
    "jpablobr": "Nop :( I also tried that. Basically the same, but without the following error:\n\n``` sh\nIt looks like Zeus is already running. If not, remove .zeus.sock and try again.\n```\n\nThis is what happen in a clean app:\n\n``` sh\njpablobr$ zeus start\nStarting Zeus server\nRequired config file zeus.json not found in the current directory.\njpablobr$ zeus init\nWrote zeus.json\njpablobr$ zeus start\nStarting Zeus server\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u251c\u2500\u2500 test_helper\n        \u2514\u2500\u2500 cucumber_environment\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus dbconsole\nzeus rake\nzeus console (alias: c)\nzeus server (alias: s)\nzeus runner (alias: r)\nzeus generate (alias: g)\nzeus test (alias: rspec, testrb)\nzeus cucumber\npanic: runtime error: integer divide by zero\n[signal 0x8 code=0x1 addr=0x80739dc pc=0x80739dc]\n\ngoroutine 7 [running]:\ngithub.com/burke/zeus/go/zeusmaster.(*StatusChart).lengthOfOutput(0x1872d360, 0x1, 0x1)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:133 +0x142\ngithub.com/burke/zeus/go/zeusmaster.(*StatusChart).draw(0x1872d360, 0x18729fc0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:104 +0x6b\ngithub.com/burke/zeus/go/zeusmaster.StartStatusChart(0x1872a540, 0x1872dd80, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:70 +0x3d5\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:35 +0x1ca\n...\n```\n. Nop :( I also tried that. Basically the same, but without the following error:\n\n``` sh\nIt looks like Zeus is already running. If not, remove .zeus.sock and try again.\n```\n\nThis is what happen in a clean app:\n\n``` sh\njpablobr$ zeus start\nStarting Zeus server\nRequired config file zeus.json not found in the current directory.\njpablobr$ zeus init\nWrote zeus.json\njpablobr$ zeus start\nStarting Zeus server\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u251c\u2500\u2500 test_helper\n        \u2514\u2500\u2500 cucumber_environment\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus dbconsole\nzeus rake\nzeus console (alias: c)\nzeus server (alias: s)\nzeus runner (alias: r)\nzeus generate (alias: g)\nzeus test (alias: rspec, testrb)\nzeus cucumber\npanic: runtime error: integer divide by zero\n[signal 0x8 code=0x1 addr=0x80739dc pc=0x80739dc]\n\ngoroutine 7 [running]:\ngithub.com/burke/zeus/go/zeusmaster.(*StatusChart).lengthOfOutput(0x1872d360, 0x1, 0x1)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:133 +0x142\ngithub.com/burke/zeus/go/zeusmaster.(*StatusChart).draw(0x1872d360, 0x18729fc0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:104 +0x6b\ngithub.com/burke/zeus/go/zeusmaster.StartStatusChart(0x1872a540, 0x1872dd80, 0x0)\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/statuslogger.go:70 +0x3d5\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n    /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:35 +0x1ca\n...\n```\n. ",
    "pivotal-medici": "I'm getting the same problem with 0.12.0 on OS X Lion. \n\nI think this line is key\n\n```\nstatuslogger.go:49: inappropriate ioctl for device\n```\n. I'm getting the same problem with 0.12.0 on OS X Lion. \n\nI think this line is key\n\n```\nstatuslogger.go:49: inappropriate ioctl for device\n```\n. ",
    "mattheworiordan": "Thanks @terlar, I had the same issue, moved `rspec-rails` and `should-matchers` to the top of my `group :test` and it worked.  Very odd.  Although another test is failing with zeus and working with normal rspec, I'll investigate now.\n. I just removed require 'rspec/autorun' and everything worked both with RSpec with/without Zeus.\n. Removing `rspec/autorun` fixed the problem and still ensured tests run fine without Zeus\n. Thanks @terlar, I had the same issue, moved `rspec-rails` and `should-matchers` to the top of my `group :test` and it worked.  Very odd.  Although another test is failing with zeus and working with normal rspec, I'll investigate now.\n. I just removed require 'rspec/autorun' and everything worked both with RSpec with/without Zeus.\n. Removing `rspec/autorun` fixed the problem and still ensured tests run fine without Zeus\n. ",
    "lcx": "unfortunately it didn't work for me. very odd, since I have a different project, same order but other versions for shoulda an rspec-rails, and there it works. \n. https://gist.github.com/lcx/5419536\n\nFunny thing is, I have a similar Gemfile in a different project where I have no problems. \nI tried downgrading zeus to the same version as used in the other project but still have the same issue. \nHere is the Gemfile of the other project where I don't have these issues: https://gist.github.com/lcx/5419573\n. @squiter85 could you please share your new gemfile? Didn't work for me so I'm curious where the difference is.\n. nope, no matter how I change it, won't work for me. Any other hints except to remove shoulda? \n. I just found this solution to be working:\n\nRemove require 'rspec/autotest' from spec_helper.rb\n\nfrom: http://stackoverflow.com/questions/14030561/zeus-rspec-fails-include-required-files-but-rspec-alone-does-fine\n. unfortunately it didn't work for me. very odd, since I have a different project, same order but other versions for shoulda an rspec-rails, and there it works. \n. https://gist.github.com/lcx/5419536\n\nFunny thing is, I have a similar Gemfile in a different project where I have no problems. \nI tried downgrading zeus to the same version as used in the other project but still have the same issue. \nHere is the Gemfile of the other project where I don't have these issues: https://gist.github.com/lcx/5419573\n. @squiter85 could you please share your new gemfile? Didn't work for me so I'm curious where the difference is.\n. nope, no matter how I change it, won't work for me. Any other hints except to remove shoulda? \n. I just found this solution to be working:\n\nRemove require 'rspec/autotest' from spec_helper.rb\n\nfrom: http://stackoverflow.com/questions/14030561/zeus-rspec-fails-include-required-files-but-rspec-alone-does-fine\n. ",
    "squiter": "unfortunately it didn't work for me too.\n. Here it goes @andyw8 https://gist.github.com/squiter85/5416077 :)\nI already tried to change the order of groups and order of gems but still not work.\n\nhmm I'm use 'shoulda', not 'shoulda-matcher', but I think the error is the same, my specs that don't use it runs fine.\n. @terlar I was tried to change order of gems, but not tried put all in the same group, and when I made it all works fine!\n\nThank you guys! :+1: \n. Here @lcx https://gist.github.com/squiter85/5420557\n\nI'm justo move 'gem \"shoulda\"' to the same group of 'rspec-rails' ;)\n. unfortunately it didn't work for me too.\n. Here it goes @andyw8 https://gist.github.com/squiter85/5416077 :)\nI already tried to change the order of groups and order of gems but still not work.\n\nhmm I'm use 'shoulda', not 'shoulda-matcher', but I think the error is the same, my specs that don't use it runs fine.\n. @terlar I was tried to change order of gems, but not tried put all in the same group, and when I made it all works fine!\n\nThank you guys! :+1: \n. Here @lcx https://gist.github.com/squiter85/5420557\n\nI'm justo move 'gem \"shoulda\"' to the same group of 'rspec-rails' ;)\n. ",
    "SeriousM": "> I just found this solution to be working:\n> Remove require 'rspec/autotest' from spec_helper.rb\n\nthat worked for me too! thank you so much,was wasting so much time finding out the issue.\n. But it has spawn. Could that be a replacement?\nhttp://en.m.wikipedia.org/wiki/Spawn_(computing)\n. > I just found this solution to be working:\n> Remove require 'rspec/autotest' from spec_helper.rb\n\nthat worked for me too! thank you so much,was wasting so much time finding out the issue.\n. But it has spawn. Could that be a replacement?\nhttp://en.m.wikipedia.org/wiki/Spawn_(computing)\n. ",
    "alex-zige": "yeah. make sure remove/comment out # require 'rspec/autorun'. it helps <3\n. this doesn't like a zeus related problem, whats your migration script looks like?\n. yeah. make sure remove/comment out # require 'rspec/autorun'. it helps <3\n. this doesn't like a zeus related problem, whats your migration script looks like?\n. ",
    "HangingClowns": "+50! Spent like all morning and part of the afternoon. Please someone put this on the README ASAP!\n. @pencilcheck Did you see the prompt that comes up after you start zeus? It says you can run zeus test and it's an alias for the others: `zeus test (alias: rspec, testrb)`\n. +50! Spent like all morning and part of the afternoon. Please someone put this on the README ASAP!\n. @pencilcheck Did you see the prompt that comes up after you start zeus? It says you can run zeus test and it's an alias for the others: `zeus test (alias: rspec, testrb)`\n. ",
    "szymon-jez": "How to not require it only when run via zeus?\nThe only idea I now have came up with is this `require 'rspec/autorun' unless ENV['ZEUS']` bu then this is not DRY (I have to repeat something that could be set somehow OOTB by Zeus while run).\nAny ideas?\n. How to not require it only when run via zeus?\nThe only idea I now have came up with is this `require 'rspec/autorun' unless ENV['ZEUS']` bu then this is not DRY (I have to repeat something that could be set somehow OOTB by Zeus while run).\nAny ideas?\n. ",
    "michaelglass": "also: see https://github.com/thoughtbot/shoulda-matchers/issues/384, this rebroke when I moved from shoulda-matchers 2.5 -> 2.6\n. also: ensure `require:false`\n\n``` ruby\ngem 'shoulda-matchers', require: false\n```\n\nand then require 'shoulda/matchers' in `spec_helper.rb`\nas documented in the shoulda [readme](https://github.com/thoughtbot/shoulda-matchers/blob/master/README.md)\n. just leaving my :+1: here.  supporting polling would be a solution to fix #388.  In the mean time, I have my editor ssh in and touch files on save, which is pretty janky.\n. @jcarley zeus really only needs to reload when you change files that load at boot.  e.g. changing spec_helper.rb or config/*\n. p.s. I'm now using this guardfile to use guard's polling to touch files on remote file systems when tests run:\n\nhttps://gist.github.com/michaelglass/8985140\n. My experience using polling has been mostly fine.  Certainly worse than having notifications but still usable.  Fwiw, I do run zeus on the VM and mount the code using NFS.\n. clearly better, also introduced a different minor regression: previously, some pages would allow internal scrolling (e.g. like with `less`). I don't know the mechanism there but it no longer works.. also: see https://github.com/thoughtbot/shoulda-matchers/issues/384, this rebroke when I moved from shoulda-matchers 2.5 -> 2.6\n. also: ensure `require:false`\n\n``` ruby\ngem 'shoulda-matchers', require: false\n```\n\nand then require 'shoulda/matchers' in `spec_helper.rb`\nas documented in the shoulda [readme](https://github.com/thoughtbot/shoulda-matchers/blob/master/README.md)\n. just leaving my :+1: here.  supporting polling would be a solution to fix #388.  In the mean time, I have my editor ssh in and touch files on save, which is pretty janky.\n. @jcarley zeus really only needs to reload when you change files that load at boot.  e.g. changing spec_helper.rb or config/*\n. p.s. I'm now using this guardfile to use guard's polling to touch files on remote file systems when tests run:\n\nhttps://gist.github.com/michaelglass/8985140\n. My experience using polling has been mostly fine.  Certainly worse than having notifications but still usable.  Fwiw, I do run zeus on the VM and mount the code using NFS.\n. clearly better, also introduced a different minor regression: previously, some pages would allow internal scrolling (e.g. like with `less`). I don't know the mechanism there but it no longer works.. ",
    "edipofederle": "Someone with this issue when running tests usign guard ?\n. Someone with this issue when running tests usign guard ?\n. ",
    "lukerollans": "Moving `rspec-rails` next to `shoulda-matchers` in my `:test` group did not work, however @michaelglass's solution did indeed work for me (require false in gemfile and manually requiring in `spec_helper.rb`\n. Moving `rspec-rails` next to `shoulda-matchers` in my `:test` group did not work, however @michaelglass's solution did indeed work for me (require false in gemfile and manually requiring in `spec_helper.rb`\n. ",
    "gmonfort": "+1 to @michaelglass solution\n. +1 to @michaelglass solution\n. ",
    "Andrelton": "Another +1 to the @michaelglass solution, thank you!\n. Another +1 to the @michaelglass solution, thank you!\n. ",
    "AlejandroFernandesAntunes": "it started working for me when adding the following to rails_helper:\r\n```\r\n\r\nShoulda::Matchers.configure do |config|\r\n  config.integrate do |with|\r\n    with.test_framework :rspec\r\n    with.library :rails\r\n  end\r\nend\r\n\r\n```\r\nwhich was in the readme file. it started working for me when adding the following to rails_helper:\r\n```\r\n\r\nShoulda::Matchers.configure do |config|\r\n  config.integrate do |with|\r\n    with.test_framework :rspec\r\n    with.library :rails\r\n  end\r\nend\r\n\r\n```\r\nwhich was in the readme file. ",
    "jasonm": "Ah yes, @tsigo you're right - this happens reproducibly when running a zeus command without the server; I get `Can't connect to master. Run zeus start first.` and then the terminal wonkiness.\n. A temporary workaround shell function: `z() { zeus $*; stty sane }`\n. Awesome - @burke thanks for all the movement on issues lately!\n. Ah yes, @tsigo you're right - this happens reproducibly when running a zeus command without the server; I get `Can't connect to master. Run zeus start first.` and then the terminal wonkiness.\n. A temporary workaround shell function: `z() { zeus $*; stty sane }`\n. Awesome - @burke thanks for all the movement on issues lately!\n. ",
    "mocoso": "It seems reasonable not to support this if there are serious performance issues.\n\nIf the `inotify-wrapper` were able to to detect when a file it's passed couldn't be observed via `inotify` then as a first pass some sort of warning that file changes would not be detected could be passed to the user - perhaps as an extra line in the server output.\n\nWith this in place at least users who did try to use this in an environment which did not support inotify then this would at least tell them why Zeus would not work as expected.\n. On further investigation it turns out that this problem was due to the rails project in question's Gemfile.lock containing method_source v0.8.0 and this error appears to be a result of an attempt to load multiple versions (v0.8.1 and v0.8.0) of the method_source gem.\n. This failure occurred with\n- ruby 1.9.3p194 (2012-04-20 revision 35410) [x86_64-darwin12.2.0]\n- bundler version 1.2.3\n. @burke @turadg Having this failure is a real problem for the project because it discourages anyone from writing tests, for example see comments in pull request #257 \n\nHaving not used m am I a little unclear whether the change introduced  in 3681382 or the spec is at failure. If you can clarify this then perhaps I can make a pull request to fix it. Alternatively the test should simply be deleted.\n\nIf we can sort out this spec failure then I would be tempted to make a pull request which added some integrations specs.\n. As noted in #221 these specs are failing on travis too, see https://travis-ci.org/burke/zeus\n. It seems reasonable not to support this if there are serious performance issues.\n\nIf the `inotify-wrapper` were able to to detect when a file it's passed couldn't be observed via `inotify` then as a first pass some sort of warning that file changes would not be detected could be passed to the user - perhaps as an extra line in the server output.\n\nWith this in place at least users who did try to use this in an environment which did not support inotify then this would at least tell them why Zeus would not work as expected.\n. On further investigation it turns out that this problem was due to the rails project in question's Gemfile.lock containing method_source v0.8.0 and this error appears to be a result of an attempt to load multiple versions (v0.8.1 and v0.8.0) of the method_source gem.\n. This failure occurred with\n- ruby 1.9.3p194 (2012-04-20 revision 35410) [x86_64-darwin12.2.0]\n- bundler version 1.2.3\n. @burke @turadg Having this failure is a real problem for the project because it discourages anyone from writing tests, for example see comments in pull request #257 \n\nHaving not used m am I a little unclear whether the change introduced  in 3681382 or the spec is at failure. If you can clarify this then perhaps I can make a pull request to fix it. Alternatively the test should simply be deleted.\n\nIf we can sort out this spec failure then I would be tempted to make a pull request which added some integrations specs.\n. As noted in #221 these specs are failing on travis too, see https://travis-ci.org/burke/zeus\n. ",
    "sevos": "https://github.cosevos/zeus-parallel_tests\n. works for me\n. try 0.13.4.pre2\n. Don't you have `minitest/autorun` required anywhere?\n. I copied Rails plan and made it working for rails engines https://gist.github.com/sevos/5223069\n\nI tested it only with rspec\n. I updated my gist, you need to place both files in root directory of gem. This is ugly monkeypatch, during next week I will prepare pullrequest for zeus\n. @focused please take a look into #307 and rails.rb file in there. You basically have two options. Either build own gem from my branch or save [this file](https://raw.github.com/sevos/zeus/68430d49f8f06f8508d9d6e29952e09498da41a9/rubygem/lib/zeus/rails.rb) as your rails_engine_plan.rb\n. you need to `export ZEUSSOCK=/tmp/zeus.sock` either in console which is running `zeus start` and `zeus server`\n\nyou can drop `gem \"zeus\", \">= 0.13.4.pre2\"` into your Gemfile and do `bundle update zeus`\n. @neil477: do you use custom plan?\n. > Isn't this going to use massive amount of memory? As you're going to end up with one instance of your app for every spec file.\n\n@andyw8 no, why? it's just list to specs to be run by ONE rspec worker :) but the list itself might be long, what is not problem\n. I think that this will never happen. Windows is missing unix kernel functionality: [fork()](http://en.wikipedia.org/wiki/Fork_(operating_system\\))\n. +1\n. Any chance for new gem release?\n. I like option with `zeus status`\n\nBut in the beginning a silencing flag for `zeus start` would be good enough.\n. The desired way to run rspec via zeus is `zeus rspec ...`. Actually running it via rake saves you no time, because rake under the hood executes following:\n\n```\n/home/jseidel/.rvm/rubies/ruby-1.9.3-p194/bin/ruby -S rspec ./spec/integration/manage_todos_spec.rb ./spec/integration/sign_in_spec.rb ./spec/integration/view_homepage_spec.rb\n```\n\nwhich is of course loading environment outside of zeus\n\nplease additionaly test following:\n\n```\nzeus rake db:test:prepare && zeus rspec --seed 26515 ./spec/integration/manage_todos_spec.rb ./spec/integration/sign_in_spec.rb ./spec/integration/view_homepage_spec.rb\n```\n\nand also try outside of zeus:\n\n```\nrake db:test:prepare && rspec --seed 26515 ./spec/integration/manage_todos_spec.rb ./spec/integration/sign_in_spec.rb ./spec/integration/view_homepage_spec.rb\n```\n\nActually, why do you use rake task? ;)\n. Cool\n. Try new version 0.13.4.pre2. AFAIK it does not rely on json anymore\n\nWys\u0142ane z iPhone'a\n\nDnia 28.05.2013 o godz. 21:33 mcmoyer notifications@github.com napisa\u0142(a):\n\n> After a recent bundle update, zeus started instantly crashing upon issuing the 'zeus start' command. I narrowed it down to the json gem version 1.8.0 -- version 1.7.7 works fine. I'm lost when it comes to figuring out how to get good debugging information on what zeus is trying to do with the json gem though. Any pointers on where I should look? The app works without issue otherwise. I just can't use zeus on it right now without backing that gem down to the previous version.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Support for rails engines has been merged with #275. I wonder whether this already made to a 0.13.4. When do we release stable 0.13.4?\n. https://github.cosevos/zeus-parallel_tests\n. works for me\n. try 0.13.4.pre2\n. Don't you have `minitest/autorun` required anywhere?\n. I copied Rails plan and made it working for rails engines https://gist.github.com/sevos/5223069\n\nI tested it only with rspec\n. I updated my gist, you need to place both files in root directory of gem. This is ugly monkeypatch, during next week I will prepare pullrequest for zeus\n. @focused please take a look into #307 and rails.rb file in there. You basically have two options. Either build own gem from my branch or save [this file](https://raw.github.com/sevos/zeus/68430d49f8f06f8508d9d6e29952e09498da41a9/rubygem/lib/zeus/rails.rb) as your rails_engine_plan.rb\n. you need to `export ZEUSSOCK=/tmp/zeus.sock` either in console which is running `zeus start` and `zeus server`\n\nyou can drop `gem \"zeus\", \">= 0.13.4.pre2\"` into your Gemfile and do `bundle update zeus`\n. @neil477: do you use custom plan?\n. > Isn't this going to use massive amount of memory? As you're going to end up with one instance of your app for every spec file.\n\n@andyw8 no, why? it's just list to specs to be run by ONE rspec worker :) but the list itself might be long, what is not problem\n. I think that this will never happen. Windows is missing unix kernel functionality: [fork()](http://en.wikipedia.org/wiki/Fork_(operating_system\\))\n. +1\n. Any chance for new gem release?\n. I like option with `zeus status`\n\nBut in the beginning a silencing flag for `zeus start` would be good enough.\n. The desired way to run rspec via zeus is `zeus rspec ...`. Actually running it via rake saves you no time, because rake under the hood executes following:\n\n```\n/home/jseidel/.rvm/rubies/ruby-1.9.3-p194/bin/ruby -S rspec ./spec/integration/manage_todos_spec.rb ./spec/integration/sign_in_spec.rb ./spec/integration/view_homepage_spec.rb\n```\n\nwhich is of course loading environment outside of zeus\n\nplease additionaly test following:\n\n```\nzeus rake db:test:prepare && zeus rspec --seed 26515 ./spec/integration/manage_todos_spec.rb ./spec/integration/sign_in_spec.rb ./spec/integration/view_homepage_spec.rb\n```\n\nand also try outside of zeus:\n\n```\nrake db:test:prepare && rspec --seed 26515 ./spec/integration/manage_todos_spec.rb ./spec/integration/sign_in_spec.rb ./spec/integration/view_homepage_spec.rb\n```\n\nActually, why do you use rake task? ;)\n. Cool\n. Try new version 0.13.4.pre2. AFAIK it does not rely on json anymore\n\nWys\u0142ane z iPhone'a\n\nDnia 28.05.2013 o godz. 21:33 mcmoyer notifications@github.com napisa\u0142(a):\n\n> After a recent bundle update, zeus started instantly crashing upon issuing the 'zeus start' command. I narrowed it down to the json gem version 1.8.0 -- version 1.7.7 works fine. I'm lost when it comes to figuring out how to get good debugging information on what zeus is trying to do with the json gem though. Any pointers on where I should look? The app works without issue otherwise. I just can't use zeus on it right now without backing that gem down to the previous version.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Support for rails engines has been merged with #275. I wonder whether this already made to a 0.13.4. When do we release stable 0.13.4?\n. ",
    "saurabhnanda": "Just checking to see if Zeus now supports any parallel testing tool/gem.\n. Just checking to see if Zeus now supports any parallel testing tool/gem.\n. ",
    "chris-baynes": "I had this problem too. Fix is just to do a blind `reset` in the terminal.\nMy guess at the cause would be the trailing \\r rather than \\n here: https://github.com/burke/zeus/blob/master/go/zeusclient/errors.go#L9\nI was not able to verify this though as have similar issues building the gem as #142\n. I had this problem too. Fix is just to do a blind `reset` in the terminal.\nMy guess at the cause would be the trailing \\r rather than \\n here: https://github.com/burke/zeus/blob/master/go/zeusclient/errors.go#L9\nI was not able to verify this though as have similar issues building the gem as #142\n. ",
    "billbillington": "I have been experiencing this too. \n\nOn my machine after running the command, I can type run commands on the terminal but everything I type is invisible. Running `reset` does let me work around the issue but this is something of an annoyance\n. I have been experiencing this too. \n\nOn my machine after running the command, I can type run commands on the terminal but everything I type is invisible. Running `reset` does let me work around the issue but this is something of an annoyance\n. ",
    "twe4ked": "Similar: #124.\n. Similar: #124.\n. ",
    "ErinCall": "I am seeing this error when running `zeus rake test:integration` with zeus version 0.13.4.pre2. Should I expect the fix to be in that zeus version?\n. I am seeing this error when running `zeus rake test:integration` with zeus version 0.13.4.pre2. Should I expect the fix to be in that zeus version?\n. ",
    "arturopie": "Your welcome. A work around is to use different environments and commands for running rspec and Test::Unit. \n. Even simpler:\n\n`touch config/initializers/ruby_extensions.rb; sleep 0.1; touch config/initializers/ruby_extensions.rb`\n. :+1:\nI tried to fix this issue but I couldn't config properly my dev environment  in Ubuntu. Some instructions on how to do it will help to keep this project alive. No open source project will survive if the community can't contribute to it.\n. Awesome!!!! Thanks!!!\n\nIs this fix in 0.13.0 ? What commit did fix it?\n. :+1: \n. thx! \n. Your welcome. A work around is to use different environments and commands for running rspec and Test::Unit. \n. Even simpler:\n\n`touch config/initializers/ruby_extensions.rb; sleep 0.1; touch config/initializers/ruby_extensions.rb`\n. :+1:\nI tried to fix this issue but I couldn't config properly my dev environment  in Ubuntu. Some instructions on how to do it will help to keep this project alive. No open source project will survive if the community can't contribute to it.\n. Awesome!!!! Thanks!!!\n\nIs this fix in 0.13.0 ? What commit did fix it?\n. :+1: \n. thx! \n. ",
    "evanwalsh": "+1 would really appreciate this. Right now, zeus is unusable for me.\n. +1 would really appreciate this. Right now, zeus is unusable for me.\n. ",
    "exupero": "This would be nice, but the workaround is simple: `zeus test spec`.\n. `rails console` and `zeus console` give the same result for the configuration order:\n\n``` ruby\nrequire './spec/spec_helper'\n=> true\nRSpec.configuration.order\n=> \"random\"\n```\n\nBut they give different results for the seed:\n\n``` ruby\nRSpec.configuration.seed\n```\n\n`rails console` gives a non-zero number, while `zeus console` gives 0.\n. Do you get the same behavior if you don't quote the filepath?\n. This would be nice, but the workaround is simple: `zeus test spec`.\n. `rails console` and `zeus console` give the same result for the configuration order:\n\n``` ruby\nrequire './spec/spec_helper'\n=> true\nRSpec.configuration.order\n=> \"random\"\n```\n\nBut they give different results for the seed:\n\n``` ruby\nRSpec.configuration.seed\n```\n\n`rails console` gives a non-zero number, while `zeus console` gives 0.\n. Do you get the same behavior if you don't quote the filepath?\n. ",
    "7even": "No, it's not. I'm trying to launch a `Test::Unit` test but Zeus thinks it's a spec file:\n\n``` sh\n$ zeus test test/unit/post_test.rb \nNo examples found.\n\nFinished in 0.00634 seconds\n0 examples, 0 failures\n\nRandomized with seed 0\n```\n. :+1:\n. No, it's not. I'm trying to launch a `Test::Unit` test but Zeus thinks it's a spec file:\n\n``` sh\n$ zeus test test/unit/post_test.rb \nNo examples found.\n\nFinished in 0.00634 seconds\n0 examples, 0 failures\n\nRandomized with seed 0\n```\n. :+1:\n. ",
    "regedor": "this feature is not released yet, i think it is really needed even if the solution  is not the best.\n. this feature is not released yet, i think it is really needed even if the solution  is not the best.\n. ",
    "c0": "You can get the option back if you modify your `.rspec` file:\n\n```\n--format progress\n```\n. You can get the option back if you modify your `.rspec` file:\n\n```\n--format progress\n```\n. ",
    "steveyken": "c0, you just saved me thousands of minutes too. Thanks!!! :)\n. c0, you just saved me thousands of minutes too. Thanks!!! :)\n. ",
    "dnagir": "Zeus also doesn't want to play well (outputting nothing) when dynamically setting the formatter:\n\n``` ruby\nRSpec.configure do |c|\n  if ENV[\"CI\"]\n    c.formatter = :progress\n  else\n    require \"fuubar\"\n    c.formatter = \"Fuubar\"\n  end\nend\n```\n\nThe output is blank when running with zeus, but works correctly otherwise.\n. Zeus also doesn't want to play well (outputting nothing) when dynamically setting the formatter:\n\n``` ruby\nRSpec.configure do |c|\n  if ENV[\"CI\"]\n    c.formatter = :progress\n  else\n    require \"fuubar\"\n    c.formatter = \"Fuubar\"\n  end\nend\n```\n\nThe output is blank when running with zeus, but works correctly otherwise.\n. ",
    "rickmzp": "+1 on this\n. I have this same problem with 0.13.4.pre2. I am not using a custom plan. I use [rbenv](https://github.com/sstephenson/rbenv) and [rbenv-bundler](https://github.com/carsomyr/rbenv-bundler).\n\nHere's the [stacktrace](https://gist.github.com/rickmzp/5a667f4b755ddd025ff1). thanks!\n. +1 on this\n. I have this same problem with 0.13.4.pre2. I am not using a custom plan. I use [rbenv](https://github.com/sstephenson/rbenv) and [rbenv-bundler](https://github.com/carsomyr/rbenv-bundler).\n\nHere's the [stacktrace](https://gist.github.com/rickmzp/5a667f4b755ddd025ff1). thanks!\n. ",
    "charlesdeb": "+1 on this\n. +1 on this\n. ",
    "davidjrice": "Not mine! few comments in there asking him so. Guess you could always fork again and update the description if you wanted.\n\nCan confirm it works though.\n. Not mine! few comments in there asking him so. Guess you could always fork again and update the description if you wanted.\n\nCan confirm it works though.\n. ",
    "bbozo": "It seems I got this as well, here's the exception trace and the script that makes it happen: https://gist.github.com/4071215\n\nSo far the script consistently caused Zeus server to crash\n\nI'm using unpatched MRI ruby 1.9.2p180 (2011-02-18 revision 30909) [x86_64-linux] on Ubuntu 11 and zeus (0.12.0)\n. Easily reproducible with \n\n``` bash\nwhile true; do touch config/initializers/ruby_extensions.rb; done\n```\n. @burke,\n\nproblem seems to be here https://github.com/burke/zeus/blob/master/go/zeusmaster/slavenode.go#L343\n\nFixing this would probably fix this issue as well #154.\n\nI'd love to have a go at this as I checked the go source and I believe I've got a pretty clear picture(s) what might have gone wrong and how to go about fixing it, but I've currently got no clue on how to run the zeus server for dev purposes and not having written more then a hello world in go doesn't help me :)\n\nIt would be great help, however, if you could write a little something helpful in https://github.com/burke/zeus/blob/master/docs/contributing.md so people can play :)\n. :+1: \n. Hm, this should happen every time you generate a scaffold, been doing that a lot for the past few days and didn't get this on Ubuntu 11, rails 3.2.8 iirc, unpatched ruby 1.9.2 p180\n\nSwitching branches could kick off this issue https://github.com/burke/zeus/issues/154 though\n. Tried editing with vim (vanilla ubuntu vim), no crash\n. awesome :+1:  \n\n@burke, could you please bump a version for this fix?\n. I worked around this in a bit of knee-jerk way by doing a local fork, but you can probably work around the problem by making a custom plan in the lines of\n\n``` ruby\n# custom_plan.rb\nrequire 'zeus/rails'\nclass CustomPlan < Zeus::Rails\n  def console\n    require 'irb'\n    super\n  end\nend\nZeus.plan = CustomPlan.new\n```\n\nas explained here: https://github.com/burke/zeus/blob/master/docs/ruby/modifying.md\n\nand continue using the current rubygems version until @burke comes around to dedicate some more time to this project or assigns good people to help him out (love the bug fixes in last version, much less crashing and no more \"stty sane\" aliases!)\n\n<3 awesome project\n. I'm pretty sure you can do this with a custom plan...\n. Hm, works for me under unpatched ruby 1.9.3p327 (2012-11-10 revision 37606) [i686-linux]\n\n```\nbbozo@xubuntu-VirtualBox:~/dev_local/test_rails_mri$ zeus c\nLoading development environment (Rails 3.2.9)\n1.9.3-p327 :001 > Random.rand 3\n => 1 \n1.9.3-p327 :002 > Zeus::VERSION\n => \"0.13.2\" \n```\n\nI do have funny segfaults when ctrl+cing in when using zeus & pry-rails on my dev box, can't replicate it on my xubuntu virtual machine though\n. Don't have this, and I use this feature all the time,\n\nruby 1.9.3p286 (2012-10-12 revision 37165) [x86_64-linux]\n\nRails 3.2.11\n\nminitest (4.5.0)\nminitest-rails (0.5.1)\nzeus (0.13.2)\n. @beilabs,\n\nI see you linked test:units as a relevant dependency, funny thing about Zeus is that it seems to practically switch your test framework to minitest, try running tests with minitest and when they work try to do it under Zeus\n. It seems I got this as well, here's the exception trace and the script that makes it happen: https://gist.github.com/4071215\n\nSo far the script consistently caused Zeus server to crash\n\nI'm using unpatched MRI ruby 1.9.2p180 (2011-02-18 revision 30909) [x86_64-linux] on Ubuntu 11 and zeus (0.12.0)\n. Easily reproducible with \n\n``` bash\nwhile true; do touch config/initializers/ruby_extensions.rb; done\n```\n. @burke,\n\nproblem seems to be here https://github.com/burke/zeus/blob/master/go/zeusmaster/slavenode.go#L343\n\nFixing this would probably fix this issue as well #154.\n\nI'd love to have a go at this as I checked the go source and I believe I've got a pretty clear picture(s) what might have gone wrong and how to go about fixing it, but I've currently got no clue on how to run the zeus server for dev purposes and not having written more then a hello world in go doesn't help me :)\n\nIt would be great help, however, if you could write a little something helpful in https://github.com/burke/zeus/blob/master/docs/contributing.md so people can play :)\n. :+1: \n. Hm, this should happen every time you generate a scaffold, been doing that a lot for the past few days and didn't get this on Ubuntu 11, rails 3.2.8 iirc, unpatched ruby 1.9.2 p180\n\nSwitching branches could kick off this issue https://github.com/burke/zeus/issues/154 though\n. Tried editing with vim (vanilla ubuntu vim), no crash\n. awesome :+1:  \n\n@burke, could you please bump a version for this fix?\n. I worked around this in a bit of knee-jerk way by doing a local fork, but you can probably work around the problem by making a custom plan in the lines of\n\n``` ruby\n# custom_plan.rb\nrequire 'zeus/rails'\nclass CustomPlan < Zeus::Rails\n  def console\n    require 'irb'\n    super\n  end\nend\nZeus.plan = CustomPlan.new\n```\n\nas explained here: https://github.com/burke/zeus/blob/master/docs/ruby/modifying.md\n\nand continue using the current rubygems version until @burke comes around to dedicate some more time to this project or assigns good people to help him out (love the bug fixes in last version, much less crashing and no more \"stty sane\" aliases!)\n\n<3 awesome project\n. I'm pretty sure you can do this with a custom plan...\n. Hm, works for me under unpatched ruby 1.9.3p327 (2012-11-10 revision 37606) [i686-linux]\n\n```\nbbozo@xubuntu-VirtualBox:~/dev_local/test_rails_mri$ zeus c\nLoading development environment (Rails 3.2.9)\n1.9.3-p327 :001 > Random.rand 3\n => 1 \n1.9.3-p327 :002 > Zeus::VERSION\n => \"0.13.2\" \n```\n\nI do have funny segfaults when ctrl+cing in when using zeus & pry-rails on my dev box, can't replicate it on my xubuntu virtual machine though\n. Don't have this, and I use this feature all the time,\n\nruby 1.9.3p286 (2012-10-12 revision 37165) [x86_64-linux]\n\nRails 3.2.11\n\nminitest (4.5.0)\nminitest-rails (0.5.1)\nzeus (0.13.2)\n. @beilabs,\n\nI see you linked test:units as a relevant dependency, funny thing about Zeus is that it seems to practically switch your test framework to minitest, try running tests with minitest and when they work try to do it under Zeus\n. ",
    "psychocandy": "This happens to me as well with rbenv as well. It might be related.\n. @theirishpenguin Are you using pry/pry-rails? It seems to be related. When I comment it out of the Gemfile and run `bundle install` it seems to be working, so I think it's related.\n. @theirishpenguin That's a good idea. Also, since everything else works perfectly, until this is solved you can just use good ol' `rails c`. I do wonder what might be the problem though, guess I'll try digging into that later.\n. This happens to me as well with rbenv as well. It might be related.\n. @theirishpenguin Are you using pry/pry-rails? It seems to be related. When I comment it out of the Gemfile and run `bundle install` it seems to be working, so I think it's related.\n. @theirishpenguin That's a good idea. Also, since everything else works perfectly, until this is solved you can just use good ol' `rails c`. I do wonder what might be the problem though, guess I'll try digging into that later.\n. ",
    "theirishpenguin": "@psychocandy Cheers. Yes, I am. I'll try out your suggestion and see if it helps. Hmmm...Must be some weird ordering issue. If it works I might just set :require => false for those gems and require them manually whenever I need them.\n. @haarts solution above ( https://github.com/burke/zeus/issues/155#issuecomment-16430481 ) worked for me. Thanks @haarts ! Would it be possible to get this into the released gem. I'm sure a fix for 'zeus console' would be welcomed by all :)\n. Can this be fixed without a reboot? That would be great!\n. @psychocandy Cheers. Yes, I am. I'll try out your suggestion and see if it helps. Hmmm...Must be some weird ordering issue. If it works I might just set :require => false for those gems and require them manually whenever I need them.\n. @haarts solution above ( https://github.com/burke/zeus/issues/155#issuecomment-16430481 ) worked for me. Thanks @haarts ! Would it be possible to get this into the released gem. I'm sure a fix for 'zeus console' would be welcomed by all :)\n. Can this be fixed without a reboot? That would be great!\n. ",
    "freewizard": "It's not fixed. \nstill same error when run \"zeus c\" with pry (0.9.11.4) + zeus (0.13.2)\nit will only work if I comment out the _require 'irb'_ around rails.rb:128:\n\n```\n    def console\n      #require 'irb'\n      if defined?(Pry) && IRB == Pry\n```\n. It's not fixed. \nstill same error when run \"zeus c\" with pry (0.9.11.4) + zeus (0.13.2)\nit will only work if I comment out the _require 'irb'_ around rails.rb:128:\n\n```\n    def console\n      #require 'irb'\n      if defined?(Pry) && IRB == Pry\n```\n. ",
    "jrichardlai": "I have the same issue with pry (0.9.12) and zeus ( 0.13.3 ) it contains #216.\n. I have the same issue with pry (0.9.12) and zeus ( 0.13.3 ) it contains #216.\n. ",
    "nguyenchiencong": "+1 Not fixed yet. pry (0.9.12) and zeus ( 0.13.3 )\n. +1 Not fixed yet. pry (0.9.12) and zeus ( 0.13.3 )\n. ",
    "haarts": "Well this is a nasty little bugger. I, too, have this error. I suspect it has something to do with initializer reassigning IRB to Pry:\n\n```\nMyApp::Application.configure do\n  # Use Pry instead of IRB\n  silence_warnings do\n    begin\n      require 'pry'\n      IRB = Pry # <===== Nasty\n    rescue LoadError\n    end\n  end\nend\n```\n\nIn #216 the `require 'rails/commands/console'` happily tries to load IRB in a namespace were the IRB constant is assigned to the Pry constant. Weirdness abound. \n\nIn my particular case it helped by moving the require inside the else clause. I have _no_ idea what this will break or which functionality is missing now. But `zeus c` seems to work.\n. But of course (original [here](https://github.com/burke/zeus/blob/master/rubygem/lib/zeus/rails.rb)):\n\n```\n    def console\n      if defined?(Pry) && IRB == Pry                                                                                                                                                                                                                                            \n        require \"pry\"\n        Pry.start\n      else\n        require 'rails/commands/console' # <==== moved this line\n        ::Rails::Console.start(::Rails.application)\n      end \n    end \n```\n. What is the message you see when you are unable to start? I frequently run into this issue and I just need to throw away the `.zeus.sock` file. \n. Well this is a nasty little bugger. I, too, have this error. I suspect it has something to do with initializer reassigning IRB to Pry:\n\n```\nMyApp::Application.configure do\n  # Use Pry instead of IRB\n  silence_warnings do\n    begin\n      require 'pry'\n      IRB = Pry # <===== Nasty\n    rescue LoadError\n    end\n  end\nend\n```\n\nIn #216 the `require 'rails/commands/console'` happily tries to load IRB in a namespace were the IRB constant is assigned to the Pry constant. Weirdness abound. \n\nIn my particular case it helped by moving the require inside the else clause. I have _no_ idea what this will break or which functionality is missing now. But `zeus c` seems to work.\n. But of course (original [here](https://github.com/burke/zeus/blob/master/rubygem/lib/zeus/rails.rb)):\n\n```\n    def console\n      if defined?(Pry) && IRB == Pry                                                                                                                                                                                                                                            \n        require \"pry\"\n        Pry.start\n      else\n        require 'rails/commands/console' # <==== moved this line\n        ::Rails::Console.start(::Rails.application)\n      end \n    end \n```\n. What is the message you see when you are unable to start? I frequently run into this issue and I just need to throw away the `.zeus.sock` file. \n. ",
    "stabenfeldt": "@haarts, I can't find any else clause.\nWould you care to share your updated code here?\n. @haarts, I can't find any else clause.\nWould you care to share your updated code here?\n. ",
    "nrodriguez": "I'm still receiving this issue with the latest Pry(0.9.10) and Zeus(13.3)\n. I tried his fix but I couldn't get it to work. Perhaps I'm doing something wrong? An official release would be heaven sent.\n. I'm still receiving this issue with the latest Pry(0.9.10) and Zeus(13.3)\n. I tried his fix but I couldn't get it to work. Perhaps I'm doing something wrong? An official release would be heaven sent.\n. ",
    "hardipe": "@nrodriguez \n\nEven if you add config/initializers/use_pry_in_console.rb ?\n\n``` ruby\nsilence_warnings do\n  require 'pry'\n  IRB = Pry\nend\n\nclass Zeus::Rails\n  def console\n    Pry.start\n  end \nend\n```\n. @nrodriguez \n\nEven if you add config/initializers/use_pry_in_console.rb ?\n\n``` ruby\nsilence_warnings do\n  require 'pry'\n  IRB = Pry\nend\n\nclass Zeus::Rails\n  def console\n    Pry.start\n  end \nend\n```\n. ",
    "nnc": "Both @haarts and @hardipe solutions work for me with rbenv, Pry 0.9.12 and Zeus 0.13.4.pre2.\n\nIt would be great to get @haarts solution released soon.\n. Both @haarts and @hardipe solutions work for me with rbenv, Pry 0.9.12 and Zeus 0.13.4.pre2.\n\nIt would be great to get @haarts solution released soon.\n. ",
    "ajsharp": "Thanks @hardipe for the code!\n. I agree with some of the previous comments here. Currently, zeus doesn't work with a stock rails 4+/5 setup and rspec setup -- `rails_helper.rb` must be modified for zeus to function at all. Being that this is the case, either:\r\n\r\na. zeus should be changed to support the default rails behavior\r\nb. The zeus documentation should clearly lay out these required changes to `rails_helper.rb`.. Thanks @hardipe for the code!\n. I agree with some of the previous comments here. Currently, zeus doesn't work with a stock rails 4+/5 setup and rspec setup -- `rails_helper.rb` must be modified for zeus to function at all. Being that this is the case, either:\r\n\r\na. zeus should be changed to support the default rails behavior\r\nb. The zeus documentation should clearly lay out these required changes to `rails_helper.rb`.. ",
    "adamkleingit": "+1 @hardipe for the code!\n. +1 @hardipe for the code!\n. ",
    "davidlee": "+1 that's a fix for me too\n. +1 that's a fix for me too\n. ",
    "bendilley": "@haarts :+1: your solution worked so well I was surprised nobody had opened a pull request!\n. @haarts :+1: your solution worked so well I was surprised nobody had opened a pull request!\n. ",
    "karzac": "It has something to do with the ruby version. I got the same error with ruby 1.9.3-p327, but it works fine with 1.9.3-p194.\n. It has something to do with the ruby version. I got the same error with ruby 1.9.3-p327, but it works fine with 1.9.3-p194.\n. ",
    "TigerWolf": "I can confirm this. The output that is returned in the console is all over the place too and I need to close the terminal window before I can continue ( as terminal becomes unresponsive)\n. Confirmed. Thanks for those that fixed this issue.\n. I can confirm this. The output that is returned in the console is all over the place too and I need to close the terminal window before I can continue ( as terminal becomes unresponsive)\n. Confirmed. Thanks for those that fixed this issue.\n. ",
    "mlyubarskyy": "unresponsive terminal is most annoying problem. Facing it each time zeus crashes\n. unresponsive terminal is most annoying problem. Facing it each time zeus crashes\n. ",
    "d11wtq": "You need to run the \"reset\" command in your terminal to get it back to normal. It's just that zeus overrides some terminal settings (like turning echo off and raw on). You won't see anything as you type \"reset\", but just trust it.\n\nIt would be nice if zeus had a \"stop\" command to do a clean exit, then we could use some git hooks to restart zeus when switching branches. I'm considering using `ps' to find the master process and sending it a SIGINT to stop it in a hook myself.\n. You need to run the \"reset\" command in your terminal to get it back to normal. It's just that zeus overrides some terminal settings (like turning echo off and raw on). You won't see anything as you type \"reset\", but just trust it.\n\nIt would be nice if zeus had a \"stop\" command to do a clean exit, then we could use some git hooks to restart zeus when switching branches. I'm considering using `ps' to find the master process and sending it a SIGINT to stop it in a hook myself.\n. ",
    "rschmukler": "+1\n. +1\n. ",
    "lmars": "Similar error here:\n\n```\n$ zeus --version\nZeus version 0.12.0\n\n$ uname -smr\nLinux 3.5.0-17-generic x86_64\n\n$ lsb_release -a\nDistributor ID: Ubuntu\nDescription:    Ubuntu 12.10\nRelease:        12.10\nCodename:       quantal\n```\n\nHead of backtrace:\n\n```\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x8 pc=0x48b1cd]\n\ngoroutine 13907 [running]:\nsync/atomic.CompareAndSwapUint32(0x8, 0x100000000, 0x200000002, 0xf84004f500, 0x\n4735b0, ...)\n        /usr/local/go/src/pkg/sync/atomic/asm_amd64.s:12 +0xd\nsync.(*Mutex).Lock(0x8, 0xf840041870)\n        /usr/local/go/src/pkg/sync/mutex.go:40 +0x35\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadMessage(0x0, 0x0, 0x0, 0x0)\n        /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:12\n1 +0x50\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).handleMessages(0xf84006a180, 0x\n0)\n        /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:343\n +0x29\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyStat\ne\n        /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221\n +0x9b\n\ngoroutine 1 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster.Run(0x7fff00205701, 0x100000005)\n        /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:51\n +0x372\nmain.main()\n        /Users/burke/go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:37 +0x2a1\n\ngoroutine 2 [syscall]:\ncreated by runtime.main\n        /usr/local/go/src/pkg/runtime/proc.c:221\n\ngoroutine 3 [syscall]:\nos/signal.loop()\n        /usr/local/go/src/pkg/os/signal/signal_unix.go:20 +0x1c\ncreated by os/signal.init\u00b71\n        /usr/local/go/src/pkg/os/signal/signal_unix.go:26 +0x2f\n\ngoroutine 4 [select]:\ngithub.com/burke/zeus/go/zeusmaster.StartSlaveMonitor(0xf840041870, 0xf840001af0\n, 0x0, 0x0)\n        /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:\n48 +0x2fb\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n        /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:32\n +0x17b\n```\n\nNot really sure of the cause, possibly switching git branches?\n. FYI I use both vim and nerdtree, run Rails 3.1.8, Ruby 1.9.3-p194\n. I can confirm this is no longer an issue for me after upgrading to 0.13.1.\n\nThanks @burke, keep up the good work!\n. Similar error here:\n\n```\n$ zeus --version\nZeus version 0.12.0\n\n$ uname -smr\nLinux 3.5.0-17-generic x86_64\n\n$ lsb_release -a\nDistributor ID: Ubuntu\nDescription:    Ubuntu 12.10\nRelease:        12.10\nCodename:       quantal\n```\n\nHead of backtrace:\n\n```\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x8 pc=0x48b1cd]\n\ngoroutine 13907 [running]:\nsync/atomic.CompareAndSwapUint32(0x8, 0x100000000, 0x200000002, 0xf84004f500, 0x\n4735b0, ...)\n        /usr/local/go/src/pkg/sync/atomic/asm_amd64.s:12 +0xd\nsync.(*Mutex).Lock(0x8, 0xf840041870)\n        /usr/local/go/src/pkg/sync/mutex.go:40 +0x35\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadMessage(0x0, 0x0, 0x0, 0x0)\n        /Users/burke/go/src/github.com/burke/zeus/go/unixsocket/unixsocket.go:12\n1 +0x50\ngithub.com/burke/zeus/go/zeusmaster.(*SlaveNode).handleMessages(0xf84006a180, 0x\n0)\n        /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:343\n +0x29\ncreated by github.com/burke/zeus/go/zeusmaster.(*SlaveNode).doCrashedOrReadyStat\ne\n        /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavenode.go:221\n +0x9b\n\ngoroutine 1 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster.Run(0x7fff00205701, 0x100000005)\n        /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:51\n +0x372\nmain.main()\n        /Users/burke/go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:37 +0x2a1\n\ngoroutine 2 [syscall]:\ncreated by runtime.main\n        /usr/local/go/src/pkg/runtime/proc.c:221\n\ngoroutine 3 [syscall]:\nos/signal.loop()\n        /usr/local/go/src/pkg/os/signal/signal_unix.go:20 +0x1c\ncreated by os/signal.init\u00b71\n        /usr/local/go/src/pkg/os/signal/signal_unix.go:26 +0x2f\n\ngoroutine 4 [select]:\ngithub.com/burke/zeus/go/zeusmaster.StartSlaveMonitor(0xf840041870, 0xf840001af0\n, 0x0, 0x0)\n        /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/slavemonitor.go:\n48 +0x2fb\ncreated by github.com/burke/zeus/go/zeusmaster.Run\n        /Users/burke/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:32\n +0x17b\n```\n\nNot really sure of the cause, possibly switching git branches?\n. FYI I use both vim and nerdtree, run Rails 3.1.8, Ruby 1.9.3-p194\n. I can confirm this is no longer an issue for me after upgrading to 0.13.1.\n\nThanks @burke, keep up the good work!\n. ",
    "dalibor": "For me it happens when changing config/routes.rb file in a Rails application.\n. New insight: this issue is happening when using vim editor to edit the routes file. It does not happen when editing the routes file in gedit for example. Also, I'm having another zeus-vim issue that is reported in [nerdtree issues](https://github.com/scrooloose/nerdtree/issues/139) that nerdtree cannot refresh FIFO files when zeus server is started.\n. @burke 0.13.0 crashes again when editing the routes file. Last good version that worked for me was 0.11.1 and after that the visual display in terminal was changed (changing the colors to indicate that zeus has loaded rails snvironemnt) so I suspect that might be the problem?\n. @burke: I'm on Ubuntu 12.04. It's weird that this issue is happening when editing the file from Vim, while it works when editing the file from gedit.\n. For me it happens when changing config/routes.rb file in a Rails application.\n. New insight: this issue is happening when using vim editor to edit the routes file. It does not happen when editing the routes file in gedit for example. Also, I'm having another zeus-vim issue that is reported in [nerdtree issues](https://github.com/scrooloose/nerdtree/issues/139) that nerdtree cannot refresh FIFO files when zeus server is started.\n. @burke 0.13.0 crashes again when editing the routes file. Last good version that worked for me was 0.11.1 and after that the visual display in terminal was changed (changing the colors to indicate that zeus has loaded rails snvironemnt) so I suspect that might be the problem?\n. @burke: I'm on Ubuntu 12.04. It's weird that this issue is happening when editing the file from Vim, while it works when editing the file from gedit.\n. ",
    "Vortex": "Crashes here too (Ubuntu 12.10 + vim + NERDTree) when I change the route.rb file. The stack trace is almost identical to Dalibor's. \n. The same happens too, Rails 3.2.12, Zeus 0.13.2 and cucumber-rails 1.3.0\n. Crashes here too (Ubuntu 12.10 + vim + NERDTree) when I change the route.rb file. The stack trace is almost identical to Dalibor's. \n. The same happens too, Rails 3.2.12, Zeus 0.13.2 and cucumber-rails 1.3.0\n. ",
    "heathd": "+1 for this!\n. +1 for this!\n. ",
    "moll": "Btw, I got the same error for plain ActiveRecord code and its cause was that Zeus was loading a different version of JSON (#201). Maybe that's the case with your issue as well.\n. It's not the most stable workaround, but at least it gets the boat rowing. Prepend the following to your zeus.rb:\n`gem \"json\", \">= 1.7\"`\n. (Quoting myself from #201. :):\nIt's not the most stable workaround, but at least it gets the boat rowing. Prepend the following to your zeus.rb:\n`gem \"json\", \">= 1.7\"`\n. Btw, I got the same error for plain ActiveRecord code and its cause was that Zeus was loading a different version of JSON (#201). Maybe that's the case with your issue as well.\n. It's not the most stable workaround, but at least it gets the boat rowing. Prepend the following to your zeus.rb:\n`gem \"json\", \">= 1.7\"`\n. (Quoting myself from #201. :):\nIt's not the most stable workaround, but at least it gets the boat rowing. Prepend the following to your zeus.rb:\n`gem \"json\", \">= 1.7\"`\n. ",
    "morgoth": "@moll That should be exactly the same problem here\n. @moll That should be exactly the same problem here\n. ",
    "jredburn": "Anyone have a solution for this?\n. Anyone have a solution for this?\n. ",
    "pomnikita": "Hi, override after_fork method in your CustomPlan class:\n\n``` ruby\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n\n  def after_fork\n    srand\n    super\n  end\n\nend\n\nZeus.plan = CustomPlan.new\n```\n\nTo make seed number differrent in each spec run, insert in your ~/.zshrc or ~/.bashrc something like this:\n\n``` bash\nalias zspec = touch spec/spec_helper.rb; bundle exec zeus rspec\n```\n\nHope it'll help\n. it doesnt matter in that case\n. Hi, override after_fork method in your CustomPlan class:\n\n``` ruby\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n\n  def after_fork\n    srand\n    super\n  end\n\nend\n\nZeus.plan = CustomPlan.new\n```\n\nTo make seed number differrent in each spec run, insert in your ~/.zshrc or ~/.bashrc something like this:\n\n``` bash\nalias zspec = touch spec/spec_helper.rb; bundle exec zeus rspec\n```\n\nHope it'll help\n. it doesnt matter in that case\n. ",
    "dnch": "I've also found the following to be effective:\n\n`alias zspec=\"zeus rspec --order rand:$RANDOM\"`\n. I've also found the following to be effective:\n\n`alias zspec=\"zeus rspec --order rand:$RANDOM\"`\n. ",
    "perldork": " pomnikita's solution works nicely and seems pretty clean to me :+1: \n. It's failing because zeus isn't finding config/boot.rb\n\n```\n[...]/lib/zeus/rails.rb:80:in `require': cannot load such file --[...]/perldork/zeus/blog/config/boot (LoadError)\n```\n. The output of the latest zeus pointed me towards running a zeus task to see the backtrace:\n\n```\n (alias: d) [run to see backtrace]\nzeus server (alias: s) [run to see backtrace]\nzeus runner (alias: r) [run to see backtrace]\nzeus dbconsole [run to see backtrace]\nzeus rake [run to see backtrace]\nzeus console (alias: c) [run to see backtrace]\nzeus generate (alias: g) [run to see backtrace]\nzeus cucumber [run to see backtrace]\n\n```\n\nSo it looks like you'd have to generate a blank app in which you could mount your mountable app in order to provide zeus the env it needs - or patch it so that if it detects the app is mountable some skeleton app code is generated to satisfy the missing env needs ..\n\nRails console isn't available for mountable apps either BTW .. so even Rails itself recognizes that a mountable app can't be run standalone.\n\n```\nbin/rails c\nError: Command not recognized\nUsage: rails COMMAND [ARGS]\n\nThe common rails commands available for engines are:\n generate    Generate new code (short-cut alias: \"g\")\n destroy     Undo code generated with \"generate\" (short-cut alias: \"d\")\n```\n. This is interesting ... if I change the test method in zeus/rails.rb to this:\n\n```\n184    def test\n185       if spec_file?(ARGV) && defined?(RSpec)\n186         # disable autorun in case the user left it in spec_helper.rb\n187         # RSpec::Core::Runner.disable_autorun!\n188         status = RSpec::Core::Runner.autorun\n189         exit status.nil? ? 0 : status\n190         # exit RSpec::Core::Runner.run(ARGV)\n191       else\n192         Zeus::M.run(ARGV)\n193       end\n194     end\n```\n\nThen tests that use the alternate describe and it function names work fine.\n. If you are using rspec, you can customize the rspec output via options in\nan .rspec file in the base directory of your project.\n\nOn Mon, May 27, 2013 at 7:55 PM, Jeremy Rowe notifications@github.comwrote:\n\n> This is more of a question than a defect. Is it possible to suppress\n> backtraces when running tests, the backtrace output is lengthy and hides\n> the test failures.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/354\n> .\n.  pomnikita's solution works nicely and seems pretty clean to me :+1: \n. It's failing because zeus isn't finding config/boot.rb\n\n```\n[...]/lib/zeus/rails.rb:80:in `require': cannot load such file --[...]/perldork/zeus/blog/config/boot (LoadError)\n```\n. The output of the latest zeus pointed me towards running a zeus task to see the backtrace:\n\n```\n (alias: d) [run to see backtrace]\nzeus server (alias: s) [run to see backtrace]\nzeus runner (alias: r) [run to see backtrace]\nzeus dbconsole [run to see backtrace]\nzeus rake [run to see backtrace]\nzeus console (alias: c) [run to see backtrace]\nzeus generate (alias: g) [run to see backtrace]\nzeus cucumber [run to see backtrace]\n\n```\n\nSo it looks like you'd have to generate a blank app in which you could mount your mountable app in order to provide zeus the env it needs - or patch it so that if it detects the app is mountable some skeleton app code is generated to satisfy the missing env needs ..\n\nRails console isn't available for mountable apps either BTW .. so even Rails itself recognizes that a mountable app can't be run standalone.\n\n```\nbin/rails c\nError: Command not recognized\nUsage: rails COMMAND [ARGS]\n\nThe common rails commands available for engines are:\n generate    Generate new code (short-cut alias: \"g\")\n destroy     Undo code generated with \"generate\" (short-cut alias: \"d\")\n```\n. This is interesting ... if I change the test method in zeus/rails.rb to this:\n\n```\n184    def test\n185       if spec_file?(ARGV) && defined?(RSpec)\n186         # disable autorun in case the user left it in spec_helper.rb\n187         # RSpec::Core::Runner.disable_autorun!\n188         status = RSpec::Core::Runner.autorun\n189         exit status.nil? ? 0 : status\n190         # exit RSpec::Core::Runner.run(ARGV)\n191       else\n192         Zeus::M.run(ARGV)\n193       end\n194     end\n```\n\nThen tests that use the alternate describe and it function names work fine.\n. If you are using rspec, you can customize the rspec output via options in\nan .rspec file in the base directory of your project.\n\nOn Mon, May 27, 2013 at 7:55 PM, Jeremy Rowe notifications@github.comwrote:\n\n> This is more of a question than a defect. Is it possible to suppress\n> backtraces when running tests, the backtrace output is lengthy and hides\n> the test failures.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/354\n> .\n. ",
    "deiga": "There's nothing clean about having to make an alias, can't the json or the custom_plan include some kind of code that would run on each call of zeus?\n. I have the same issue with Rails 3.2.12, Rspec 2.13, zeus 0.13.3.\n\nOnly difference that `zeus test spec` ends in a weird error \nhttps://gist.github.com/deiga/5349820\n\nIt also doesn't use a random seed.\n\n`zeus rake spec` works normally.\n\nI started investigating this when guard-rspec ran all tests double (because of zeus) when I modified files \n. I'm running zeus in Ruby 2.0.0 without any problems. Maybe you should do as zeus suggests (run any of those commands for a backtrace of the problem)\n. There's nothing clean about having to make an alias, can't the json or the custom_plan include some kind of code that would run on each call of zeus?\n. I have the same issue with Rails 3.2.12, Rspec 2.13, zeus 0.13.3.\n\nOnly difference that `zeus test spec` ends in a weird error \nhttps://gist.github.com/deiga/5349820\n\nIt also doesn't use a random seed.\n\n`zeus rake spec` works normally.\n\nI started investigating this when guard-rspec ran all tests double (because of zeus) when I modified files \n. I'm running zeus in Ruby 2.0.0 without any problems. Maybe you should do as zeus suggests (run any of those commands for a backtrace of the problem)\n. ",
    "23tux": "I can reproduce this issue too\n. I found this issue https://github.com/burke/zeus/issues/488 which solved my problem.\n\nThe key was to set the `ZEUSSOCK` to a path which is NOT mounted through Virtual Box. My `docker-compose.override.yml` looks now like this:\n\n```\nmy_app:\n  environment:\n    ZEUSSOCK: /zeus/.zeus.sock\n```\n\nnote: You have to create `/zeus` by hand.\n. I can reproduce this issue too\n. I found this issue https://github.com/burke/zeus/issues/488 which solved my problem.\n\nThe key was to set the `ZEUSSOCK` to a path which is NOT mounted through Virtual Box. My `docker-compose.override.yml` looks now like this:\n\n```\nmy_app:\n  environment:\n    ZEUSSOCK: /zeus/.zeus.sock\n```\n\nnote: You have to create `/zeus` by hand.\n. ",
    "Iazel": "I've found what I think is a better work around (inspired by @pomnikita solution :+1: )\n\n``` ruby\n# ./custom_plan.rb\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n  def test\n    RSpec.configuration.seed = rand 1..10_000 if defined? RSpec\n    super  \n  end\nend\n```\n\nHowever, I prefer keep rspec on his own command, so this my solution.\nFirst, I've added the rspec command to zeus.json\n\n``` json\n        \"test_environment\": {\n          \"cucumber_environment\": {\"cucumber\": []},\n          \"test_helper\": {\"test\": [\"testrb\"], \"rspec\":[\"rs\"]}\n        }\n```\n\nThen I defined it\n\n``` ruby\n# ./custom_plan.rb\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n  def rspec\n    RSpec.configuration.seed = rand 1..10_000\n    exit RSpec::Core::Runner.run(ARGV)            # This line run RSpec; it's the same as Zeus::Rails#test\n  end\nend\n\nZeus.plan = CustomPlan.new\n```\n. Zeus doesn't interfere with rspec configuration, but with `srand`. I don't really know why, but on the first call of any client (?) it's always return `0`; on the other hand, `rand` correctly returns pseudo-random numbers.\n. Thank you latortuga, now I've successfully make the binary, but didn't I need the gem also? For example, if I want to setting a custom plan, maybe for FactoryGirl, can I do it with only the binary?\n\nRunning `make gem` give the usual error; I'm pretty sure the problem is in `make fsevents`, because its `make` use `xcodebuild`. Can you give me any other advice? :)\n. Thank you so much! Now I've installed the gem also :) However, before `rake` in the `rubygem` dir, the `man` should be generated (`make man`) and its result `man/build` directory that have to be moved into `rubygem/man/build`. Done that, the gem is correctly created and installed! :+1: \n. I've found what I think is a better work around (inspired by @pomnikita solution :+1: )\n\n``` ruby\n# ./custom_plan.rb\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n  def test\n    RSpec.configuration.seed = rand 1..10_000 if defined? RSpec\n    super  \n  end\nend\n```\n\nHowever, I prefer keep rspec on his own command, so this my solution.\nFirst, I've added the rspec command to zeus.json\n\n``` json\n        \"test_environment\": {\n          \"cucumber_environment\": {\"cucumber\": []},\n          \"test_helper\": {\"test\": [\"testrb\"], \"rspec\":[\"rs\"]}\n        }\n```\n\nThen I defined it\n\n``` ruby\n# ./custom_plan.rb\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n  def rspec\n    RSpec.configuration.seed = rand 1..10_000\n    exit RSpec::Core::Runner.run(ARGV)            # This line run RSpec; it's the same as Zeus::Rails#test\n  end\nend\n\nZeus.plan = CustomPlan.new\n```\n. Zeus doesn't interfere with rspec configuration, but with `srand`. I don't really know why, but on the first call of any client (?) it's always return `0`; on the other hand, `rand` correctly returns pseudo-random numbers.\n. Thank you latortuga, now I've successfully make the binary, but didn't I need the gem also? For example, if I want to setting a custom plan, maybe for FactoryGirl, can I do it with only the binary?\n\nRunning `make gem` give the usual error; I'm pretty sure the problem is in `make fsevents`, because its `make` use `xcodebuild`. Can you give me any other advice? :)\n. Thank you so much! Now I've installed the gem also :) However, before `rake` in the `rubygem` dir, the `man` should be generated (`make man`) and its result `man/build` directory that have to be moved into `rubygem/man/build`. Done that, the gem is correctly created and installed! :+1: \n. ",
    "anlek": "All these solutions seem like a workaround, shouldn't zeus not interfere with rspec configuration of the seed to begin with?\n. All these solutions seem like a workaround, shouldn't zeus not interfere with rspec configuration of the seed to begin with?\n. ",
    "NathanielWroblewski": "I used  @DanCheail's solution by changing my Guardfile:\n\n``` rb\nguard 'rspec', zeus: true, cli: '--color --order rand:$RANDOM' do\n  ...\nend\n```\n. I used  @DanCheail's solution by changing my Guardfile:\n\n``` rb\nguard 'rspec', zeus: true, cli: '--color --order rand:$RANDOM' do\n  ...\nend\n```\n. ",
    "mantas": "Thanks, rake db:test:prepare does exactly what I was looking for. I'll try to make a custom rake task to run db:test:prepare and then run tests.\n. Thanks, rake db:test:prepare does exactly what I was looking for. I'll try to make a custom rake task to run db:test:prepare and then run tests.\n. ",
    "bhavinkamani": "Thanks Burke... I do understand your point. \n\nI am still struggling to figure out how to remove the reference to them in initializer and still include those modules to ActiveRecord::Base? Googling haven't helped me much in this area...\n. No Problem.. Thanks Burke once again for this very useful gem. \n. Thanks Burke... I do understand your point. \n\nI am still struggling to figure out how to remove the reference to them in initializer and still include those modules to ActiveRecord::Base? Googling haven't helped me much in this area...\n. No Problem.. Thanks Burke once again for this very useful gem. \n. ",
    "aspiers": "Something is still BADLY wrong here as reported in #288.\n. #198 is fixed now.\n. This looks like great info but really it belongs in the [wiki](https://github.com/burke/zeus/wiki) - please could some kind soul put it there?\n. Please submit a [proper bug report](http://www.chiark.greenend.org.uk/~sgtatham/bugs.html).\n. Actually zeus doesn't have permissions to `SIGQUIT` the X server so I have no idea what happened here.  Maybe it killed the desktop session manager or something.\n. Something is still BADLY wrong here as reported in #288.\n. #198 is fixed now.\n. This looks like great info but really it belongs in the [wiki](https://github.com/burke/zeus/wiki) - please could some kind soul put it there?\n. Please submit a [proper bug report](http://www.chiark.greenend.org.uk/~sgtatham/bugs.html).\n. Actually zeus doesn't have permissions to `SIGQUIT` the X server so I have no idea what happened here.  Maybe it killed the desktop session manager or something.\n. ",
    "gerrywastaken": "@burke #137 was apparently moved here, but I'm still having the issue with new lines being ignored (as described in 137).\n. @longkt90 Yeah it seems I was using 2.3.0 back when I posted that. Great to hear about the fix and work around. Thanks. :)\n. @burke #137 was apparently moved here, but I'm still having the issue with new lines being ignored (as described in 137).\n. @longkt90 Yeah it seems I was using 2.3.0 back when I posted that. Great to hear about the fix and work around. Thanks. :)\n. ",
    "longkt90": "@gerrywastaken Seems like it only happens on some version of ruby, mine working fine on 2.3.1 but this issue happen on 2.3.0. I end up add the readline lib and it works fine. https://github.com/guard/guard/wiki/Add-Readline-support-to-Ruby-on-Mac-OS-X \n\nThe simplest way is just add  `gem 'rb-readline'` to your development Gemfile\n. I have exactly same issue with version 0.15.4. Rails 4.2.6 and ruby 2.3.0p0 (2015-12-25 revision 53290) [x86_64-darwin15]\n. Do you know why the version doesn;t  appear in https://rubygems.org/gems/zeus/ ? The latest is still 0.15.4 from January 21, 2015.\n\nOnly have a lot of hidden versions here https://rubygems.org/gems/zeus/versions And I cannot install zeus through `gem install zeus -v '1.13.0.preview1' --source http://rubygems.org`\n\nMaybe you should double check about publishing it?\n. Close as duplicated with https://github.com/burke/zeus/issues/589\n. @gerrywastaken Seems like it only happens on some version of ruby, mine working fine on 2.3.1 but this issue happen on 2.3.0. I end up add the readline lib and it works fine. https://github.com/guard/guard/wiki/Add-Readline-support-to-Ruby-on-Mac-OS-X \n\nThe simplest way is just add  `gem 'rb-readline'` to your development Gemfile\n. I have exactly same issue with version 0.15.4. Rails 4.2.6 and ruby 2.3.0p0 (2015-12-25 revision 53290) [x86_64-darwin15]\n. Do you know why the version doesn;t  appear in https://rubygems.org/gems/zeus/ ? The latest is still 0.15.4 from January 21, 2015.\n\nOnly have a lot of hidden versions here https://rubygems.org/gems/zeus/versions And I cannot install zeus through `gem install zeus -v '1.13.0.preview1' --source http://rubygems.org`\n\nMaybe you should double check about publishing it?\n. Close as duplicated with https://github.com/burke/zeus/issues/589\n. ",
    "paulbhartzog": "As of March 2017 this issue still exists (OS X Yosemite).  Zeus returns to terminal but the output is all botched.\r\n\r\n`gem install rb-readline` seems to be a valid workaround, but it would be nice to see this fixed in zeus internally.  Thx. :-). As of March 2017 this issue still exists (OS X Yosemite).  Zeus returns to terminal but the output is all botched.\r\n\r\n`gem install rb-readline` seems to be a valid workaround, but it would be nice to see this fixed in zeus internally.  Thx. :-). ",
    "TheZoq2": "`gem instal rb-readline` makes the zeus output correct but any other commands run after it have incorrect output.. Is there an update on this?\r\nIt seems to still happen and unlike things said previously, it doesn't only happen when it exits with non-zero status.\r\n\r\nThe workarounds work but as far as I can tell, it doesn't work when you want to pipe the output to something like grep or something similar.. `gem instal rb-readline` makes the zeus output correct but any other commands run after it have incorrect output.. Is there an update on this?\r\nIt seems to still happen and unlike things said previously, it doesn't only happen when it exits with non-zero status.\r\n\r\nThe workarounds work but as far as I can tell, it doesn't work when you want to pipe the output to something like grep or something similar.. ",
    "mprokopov": "It seems to be the same issue like here described http://stackoverflow.com/questions/14030561/zeus-rspec-fails-include-required-files-but-rspec-alone-does-fine\n. :+1:  for this feature.\n\nI was happy to notifications from rspec+spork+guard, but rspec with zeus every run returns error even on successful builds :(\n. It seems to be the same issue like here described http://stackoverflow.com/questions/14030561/zeus-rspec-fails-include-required-files-but-rspec-alone-does-fine\n. :+1:  for this feature.\n\nI was happy to notifications from rspec+spork+guard, but rspec with zeus every run returns error even on successful builds :(\n. ",
    "thewatts": "Hmmm... I'm actually still having this issue. \n\nzeus rake test runs the tests twice.\n. Hmmm... I'm actually still having this issue. \n\nzeus rake test runs the tests twice.\n. ",
    "andrewroth": "Ok, sounds good.  Here is where method_source appears in my Gemfile.lock:\n\n```\nmethod_source (0.8.1)\n```\n\nthen later..\n\n```\npry (0.9.10)\n  coderay (~> 1.0.5)\n  method_source (~> 0.8)\n  slop (~> 3.3.1)\n```\n\nHow can I check/specify which version of method_source zeus is loading?\n. Yes!  It took some cleanup of gems (it showed up in gem list, but gem uninstall would say it wasn't installed.. I had to remove all traces of method_source manually from the gem directories), but it works now!  Thanks!\n. Ok, sounds good.  Here is where method_source appears in my Gemfile.lock:\n\n```\nmethod_source (0.8.1)\n```\n\nthen later..\n\n```\npry (0.9.10)\n  coderay (~> 1.0.5)\n  method_source (~> 0.8)\n  slop (~> 3.3.1)\n```\n\nHow can I check/specify which version of method_source zeus is loading?\n. Yes!  It took some cleanup of gems (it showed up in gem list, but gem uninstall would say it wasn't installed.. I had to remove all traces of method_source manually from the gem directories), but it works now!  Thanks!\n. ",
    "davebrace": "I'm having the same issue... Specs run twice when trying to run an individual spec file, but only run once when passing in a directory to the test command. This is with with the 13.1 gem.\n. I'm using rspec 2.12.1.\n. Interestingly... I tested this on two projects, both using rspec 2.12.1 and both using zeus 0.13.1. In one project the specs run twice, and all fail the second time (it's like rspec's rails helpers aren't loaded during the second run). In the second project, everything works fine. I'm at a loss for what could be causing the issue.\n. Interestingly, in the one project I have where Zeus (0.13.1) works perfectly with rspec (runs directories / single file, single file with line number), I am including \"rspec/autorun\" in my spec_helper.\n\nIn the project where I am experiencing problems with specs running twice, removing 'rspec/autorun' allows me to correctly run individual files and individual files with line numbers, but directories run no tests.\n. As of 0.13.2, removing rspec/autorun solved this problem in all my projects!\n. I'm having the same issue... Specs run twice when trying to run an individual spec file, but only run once when passing in a directory to the test command. This is with with the 13.1 gem.\n. I'm using rspec 2.12.1.\n. Interestingly... I tested this on two projects, both using rspec 2.12.1 and both using zeus 0.13.1. In one project the specs run twice, and all fail the second time (it's like rspec's rails helpers aren't loaded during the second run). In the second project, everything works fine. I'm at a loss for what could be causing the issue.\n. Interestingly, in the one project I have where Zeus (0.13.1) works perfectly with rspec (runs directories / single file, single file with line number), I am including \"rspec/autorun\" in my spec_helper.\n\nIn the project where I am experiencing problems with specs running twice, removing 'rspec/autorun' allows me to correctly run individual files and individual files with line numbers, but directories run no tests.\n. As of 0.13.2, removing rspec/autorun solved this problem in all my projects!\n. ",
    "antage": "> In one project the specs run twice, and all fail the second time (it's like rspec's rails helpers aren't loaded during the second run)\n\nI have same problem too.\n\nzeus 0.13.1, rspec 2.12.0\n. > In one project the specs run twice, and all fail the second time (it's like rspec's rails helpers aren't loaded during the second run)\n\nI have same problem too.\n\nzeus 0.13.1, rspec 2.12.0\n. ",
    "Soliah": "It's running once for me when running against a directory, but twice when run against a single spec file.\n\nOn zeus 0.13.1, rspec 2.12.2.\n. Removing `require 'rails/autorun'` from my `spec_helper.rb` stops these errors from happening to me.\n\nIncluding my `spec_helper.rb` for brevity. Note that this is basically from a fresh application, but I just did the same to an older app running rspec 2.8.0 and it seems to have worked.\n\n``` ruby\nrequire 'simplecov'\n\nSimpleCov.start 'rails' do\n  add_filter '/test/'\n  add_filter '/config/'\n  add_filter '/vendor/'\n  add_filter '/spec/'\n\n  add_group 'Controllers', 'app/controllers'\n  add_group 'Models', 'app/models'\n  add_group 'Helpers', 'app/helpers'\n  add_group 'Decorators', 'app/decorators'\n  add_group 'Libraries', 'lib'\n\n  use_merging true\nend\n\nENV[\"RAILS_ENV\"] ||= 'test'\nrequire File.expand_path(\"../../config/environment\", __FILE__)\nrequire 'rspec/rails'\n# require 'rspec/autorun'\n\nDir[Rails.root.join(\"spec/support/**/*.rb\")].each {|f| require f}\n\nRSpec.configure do |config|\n  config.fixture_path = \"#{::Rails.root}/spec/fixtures\"\n  config.use_transactional_fixtures = true\n  config.infer_base_class_for_anonymous_controllers = false\n  config.order = \"random\"\nend\n```\n. It's running once for me when running against a directory, but twice when run against a single spec file.\n\nOn zeus 0.13.1, rspec 2.12.2.\n. Removing `require 'rails/autorun'` from my `spec_helper.rb` stops these errors from happening to me.\n\nIncluding my `spec_helper.rb` for brevity. Note that this is basically from a fresh application, but I just did the same to an older app running rspec 2.8.0 and it seems to have worked.\n\n``` ruby\nrequire 'simplecov'\n\nSimpleCov.start 'rails' do\n  add_filter '/test/'\n  add_filter '/config/'\n  add_filter '/vendor/'\n  add_filter '/spec/'\n\n  add_group 'Controllers', 'app/controllers'\n  add_group 'Models', 'app/models'\n  add_group 'Helpers', 'app/helpers'\n  add_group 'Decorators', 'app/decorators'\n  add_group 'Libraries', 'lib'\n\n  use_merging true\nend\n\nENV[\"RAILS_ENV\"] ||= 'test'\nrequire File.expand_path(\"../../config/environment\", __FILE__)\nrequire 'rspec/rails'\n# require 'rspec/autorun'\n\nDir[Rails.root.join(\"spec/support/**/*.rb\")].each {|f| require f}\n\nRSpec.configure do |config|\n  config.fixture_path = \"#{::Rails.root}/spec/fixtures\"\n  config.use_transactional_fixtures = true\n  config.infer_base_class_for_anonymous_controllers = false\n  config.order = \"random\"\nend\n```\n. ",
    "codepodu": "@Soliah 's fix works for me. I removed `require 'rspec/autorun'` from spec_helper. It was a remnant from the Spork days.\n. @Soliah 's fix works for me. I removed `require 'rspec/autorun'` from spec_helper. It was a remnant from the Spork days.\n. ",
    "brandonhilkert": "+1 for @Soliah \n\nMine worked as expected for both directories and files. Removing `rspec/autorun` from `spec_helper.rb` causes everything to run just once as expected.\n. I removed database_cleaner, and replaced with the following lines, which avoid the accumulation of data.\n\n``` Ruby\nRspec.configure do |config|\n\n  config.use_transactional_fixtures = false\n\n  config.around do |example|\n    # For examples using capybara-webkit for example.\n    # Remove this if you don't use it or anything similar\n    if example.metadata[:js]\n      example.run\n\n      ActiveRecord::Base.connection.execute(\"TRUNCATE #{ActiveRecord::Base.connection.tables.join(',')} RESTART IDENTITY\")\n    else\n      ActiveRecord::Base.transaction do\n        example.run\n        raise ActiveRecord::Rollback\n      end\n    end\n  end\n\nend\n```\n\nI'm guessing database_cleaner is used a good amount, so it would probably be worthwhile knowing how to avoid this when using the gem.\n. +1 for @Soliah \n\nMine worked as expected for both directories and files. Removing `rspec/autorun` from `spec_helper.rb` causes everything to run just once as expected.\n. I removed database_cleaner, and replaced with the following lines, which avoid the accumulation of data.\n\n``` Ruby\nRspec.configure do |config|\n\n  config.use_transactional_fixtures = false\n\n  config.around do |example|\n    # For examples using capybara-webkit for example.\n    # Remove this if you don't use it or anything similar\n    if example.metadata[:js]\n      example.run\n\n      ActiveRecord::Base.connection.execute(\"TRUNCATE #{ActiveRecord::Base.connection.tables.join(',')} RESTART IDENTITY\")\n    else\n      ActiveRecord::Base.transaction do\n        example.run\n        raise ActiveRecord::Rollback\n      end\n    end\n  end\n\nend\n```\n\nI'm guessing database_cleaner is used a good amount, so it would probably be worthwhile knowing how to avoid this when using the gem.\n. ",
    "julioprotzek": "Removing `rspec/autorun` from `spec_helper.rb` worked for me.\n. Removing `rspec/autorun` from `spec_helper.rb` worked for me.\n. ",
    "skyeagle": "Confirm that removing rspec/autorun solves the issue.\n. +1. Zeus vendered as github master in Gemfile.\n. Confirm that removing rspec/autorun solves the issue.\n. +1. Zeus vendered as github master in Gemfile.\n. ",
    "antifuchs": "I'm running into this too - will attempt to fix soon.\n. As far as I can tell, the PR above fixes that issue. I would love some input on my worries about this not being the best solution, @burke.\n. Thanks for making me a contributor! I'm very glad to help out (even if my working knowledge of go can use some huge improvements still)! Zeus is working very well for us at Stripe so far (-:\n. @turadg mostly, I chose zeus because spring's rails ties (and its code reloader) seemed prohibitive on our non-rails project. Zeus's flexibility for supporting non-rais projects via a zeus.json file & a simple ruby file were just a perfect match there. I think I got a very quick prototype running within 2 hours of browsing code & trying stuff. I'm happy to elaborate in email - asf@stripe.com (-:\n. I can confirm that I'm seeing that same thing on a non-rails app. I think this is a non-ruby problem, and instead rooted somewhere in the go code. The easiest way I've found to reproduce this is to perform these steps:\n1. Start the zeus server: `zeus start`\n2. Start a long-running process, e.g. `zeus console`\n3. Kill the \"zeus console\" client process.\n\n=> `clienthandler.go:103: write unix @: broken pipe`, zeus server and all its children are dead.\n\nLooks like the server should grow some resilience against clients going away from the unix socket. I'll try and code dive a little more.\n. OK, some code diving, head scratching and cursing later, I think I know what the problem is: Killing the client causes a SIGPIPE to get sent to the zeus server, which is a `terminatingSignal` (in [go/zeusmaster/zeusmaster.go](https://github.com/burke/zeus/blob/master/go/zeusmaster/zeusmaster.go#L18)), and causes the Zeus server to exit cleanly.\n\nBy default, go installs a handler that handles SIGPIPE more sensibly than this; removing the signal from that list makes my test case work, and I suspect it will fix all your cases as well. I'll submit a pull request.\n. PR #260 should handle this more gracefully. @leehambley, if you can test / confirm that it works, I'd appreciate it (-:\n. I traced zeusclient.go a bit, and this appears to happen because it's getting a TERM signal.\n\nRight now, I believe this is actually a ruby issue - [rubygem/lib/zeus.rb has an at_exit line](https://github.com/burke/zeus/blob/master/rubygem/lib/zeus.rb#L110) that kills the client with TERM when the command terminates. My hypothesis right now is that this causes a race condition where zeusclient can't read the exit code from the socket fast enough, and ends up receiving the async signal before it can itself exit with the right exit code.\n\nRemoving that at_exit line seems safe, but might be useful to have a safeguard in there to prevent the go client from hanging (though in my experience, that is the least breakage-happy part (-:). I'll read some more code and try to figure out the right way to proceed.\n. @turadg that's weird - I built the (patched) gem that we use at work by following these steps:\n- I edited ./VERSION to say \"0.13.2.2\" \n- I ran \"make clean darwin\", \n- then built the linux zeus on a linux box with the i386/x86_64 go toolchain installed, copied that into build/, \n- then ran \"make gem\".\n\nThe resulting gem does work for me without crashing... to make things a bit easier (no need to install the gem), you should be able to run just the zeus binary out of the build/ dir - what error messages are you getting and what are the relevant versions of tools you're using? I'm on go1.0.3, ruby 1.9.3p362 (via rbenv).\n. @turadg I opened #274 for this - guess we should discuss there. I'll be a bit busy with admin stuff today, but will try to get something built that you can test. (:\n. Hah - I'm glad I could help (even if my go skills are close to nonexistent)! (-:\n. The process structure looks different when you run tests under zeus (also, the environment variables such as $DISPLAY): The process running the tests is a child of the Zeus server. `zeus rspec` is just a program getting console output from that child and displaying it on the console. \n\nYou might have to start the zeus server with xvfb-run: `xvfb-run zeus start`. That should ensure that the processes are running in the right environment. You could also check out the `headless` gem, which you could integrate in a custom zeus step. I'll leave that to you (-:\n. I just tested current master, and it works for me without any problems. Argh, I think I know what the real problem is. Try inserting\n\n```\nrequire 'set'\n```\n\non top of your zeus.rb - I suspect your code base doesn't load that file early enough (and I forgot to add that require). Sorry sorry sorry.\n. @lastobelus when you figure out how to (more or less reliably) trigger this, can you send me steps to reproduce this on an empty rails app? I don't see that behavior in my (non-rails) app, and don't know what to do to trigger it in a rails one. )-:\n. @lastobelus I've seen this happen on our own project a couple of times too, and mostly in connection with many files changing, especially files changing while a reload is happening - most steps will get stuck in \"connecting\" state and then just go incommunicado until you kill Zeus.\n\nI believe there might be some race condition here where zeus tries to restart a process it hasn't been able to properly set up yet. This might not be related to this pull request, but I'll debug it further this week.\n. @lastobelus - are you referring to zombies as processes that exited but haven't been reaped by their parent yet? If so, I can't really make sense of that problem description. )-:\n\nWhat does pstree show you?\n. Thanks for that, I was really confused about which zombies you meant there for a while. (-:\n\nOne other thing that might be interesting would be to check what killing each of the \"zeus\" processes does - the zeus master process should exit cleanly when killed; I'm less sure about the \"zeus slave\" and \"zeus client\" processes though (they're ruby). Killing them with signal 9 should definitely clean them up, though. When this happens to you next time, can you try a `pkill -9 -f zeus` as well?\n\nAlso, I am currently testing a fix for #320, which probably will affect your experience re. any hung processes. I'll ping you when I submit it for review.\n. I'll try to build current master into an RC gem - in the meantime, can you try to build 0.13.2 and see if that also fails for you? Maybe we can bisect the problem!\n. Awesome! Glad it worked at least on that machine (-:\n. @turadg - one thing of note is that when I (and my colleague) are running the rc2 gem that you built, it crashes after the first of these \"broken pipe\" messages.\n\n(Unrelatedly, I locally patched the error reporter to output the PID of the zeus master, sorry for the nonstandard error format above)\n. Yep, I'm not able to reproduce with greater amounts of debugging right now, either )-:\n\nAdding a debug statement that outputs what unix socket the error happened on causes the reload to happen without any errors - seems like a weird timing-related thing (once more!)\n\nI guess we can disregard this until we have a clearer idea how to reliably reproduce it.\n. Hah, this was caused my own stupidity: The way I had our tools auto-restarted services killed the command twice (once via ^C, once via SIGTERM), and the latter caused the command client to terminate before the zeus server could send the exit status across, leading to that error. I have not got a single clue why this caused these messages to multiply like that (and haven't managed to reproduce it since), so I'm happily closing this.\n. Right now, Zeus itself doesn't daemonize - but you should be able to run the latest git revision under, say, daemontools (or upstart, start-stop-daemon, or any number of other daemonization tools), have it log to a file, and get the same result.\n\nI'll close this for now as zeus as I understand it is meant to run mostly interactively (for local development and such), but feel free to reopen if this doesn't help.\n. Hah, yes, the state machine started out pretty confusing, but by now I think I have a decent grip on how it works (-:\n\nI think the fix in #323 has put us into a pretty happy state. There have been way fewer reports of wedgedness in the last two weeks on my end, so I'd say we can declare victory!\n\nOne thing that I'd love to have is a test suite for the state machine. Given the many external things that are going on in it, I don't know if it's possible at all (but I guess a really really simple plan & fake inotify wrapper might work. Hm!\n. Forgot to mention, this is relevant to #320 and #272.\n. @lastobelus you can download it (for the next few days at least) from http://static.boinkor.net/ruby/zeus-0.13.3.0.3.gem - this is a linux-amd64 and darwin build of the current branch head (sorry, I don't have a way to build 32-bit linux at the moment, but could figure it out given time)\n. @lastobelus thanks for trying it out! I don't know of a better way (our app doesn't use rails, so I'm running with a custom plan file); if I were to guess, you probably could extend the regular rails plan in your app to add that dir.\n\nDon't really know if the `./lib` dir is a thing that's commonly needed in rails. If so, I'd be in favor of adding it in. @turadg - do you have an opinion on that? (:\n. This latest change should make it harder to get the boot process wedged (in \"unbooted\"). This is good enough to let my org work on our app without hangs / problems (has been for at least 1h now); I'm going to let this steep for a little while as we gather more data, but I'm relatively pleased with it now.\n\n@lastobelus - feel free to try this version from http://static.boinkor.net/ruby/zeus-0.13.3.0.6.gem (Also, how did your test with the previous rev go?)\n. Great to hear! I've not seen zeus with these patches crash yet either, so I'll merge this now (-:\n. Awesome - glad you all like it. Thanks for the reviews, folks! I'll merge (-:\n. Merging now - I hope this works on older Xcodes, but if not, I guess the solution is \"upgrade\" (-:\n. No, sadly, that's the other build error I needed to fix for newer Darwins.\n\nThanks for weighing in - I'll try and come up with a different way to phrase the Makefile sections (-:\n. I have traced this, and managed to determine the following symptoms:\n- The clienthandler code hangs when receiving the spawned command's PID [here](https://github.com/burke/zeus/blob/master/go/clienthandler/clienthandler.go#L93).\n- It looks like this really only happens on Linux - OS X is completely unaffected.\n- Command spawning on Linux doesn't seem to hang when issuing the command before its parent slave is completely booted (e.g. shown in blue). Subsequent command invocations hang, though.\n\nThere's another issue that I noticed on OS X, though. After a command exits, zeus prints \"slavenode.go:130: Unexpected process for slave `boot` was killed\". This might or might not be related. I guess it really is time to start bisecting now! Pressing on...\n. Bisecting (using a pretty janky method) says that 1ed167e80984a6dee4ca0e85be7b7ea55a70119c is the first bad commit. I believe it, for the moment (and will operate on the assumption that it /is/ bad), but can't quite see how that would affect things on linux, but not on OS X.\n. Thanks, @latortuga - I've got the workflow mostly covered! If you want, feel free to test the current HEAD on linux, with 1ed167e reverted - `git revert -n 1ed167e` should do it. This seems to work for me on linux (even if it spews \"slavenode.go:130: Unexpected process for slave `boot` was killed\", but that seems to be unrelated).\n. OK, I seem to have been wrong about where the interaction hangs - the go client handler seems to fail to pass the PTY's FD to the ruby command process. Then the ruby command process waits forever to receive the PTY FD, and never sends its PID, while the go client handler waits for it to do just that.\n\nI'm not sure exactly what causes this to happen on STREAM sockets, but it seems DGRAM unix domain sockets do work fine, so I'd be inclined to use them instead of STREAM ones.\n\nHilariously enough, googling around for this turns up http://stackoverflow.com/a/1126583/93405 - basically the same question, with only vague hypotheses. Ouch. Any help by an actual UNIX domain socket expert appreciated (-:\n. In summary (and reading up some more), I think DGRAM sockets may in fact the correct choice for the command socket: We have clearly delimited messages, and the failure modes of STREAM sockets don't sound particularly enticing, so I'm going to submit a PR that reverts 1ed167e (-:\n. Running this locally, I the SO_SNDBUF change doesn't seem correct - on OS X, it causes hangs when spawning commands. Argh.\n. Yep, this works on Linux, but on OS X, it seems like the dgram Unix socket has a hidden send buffer limit that can't be reset with SetWriteBuffer (I suspect that limit is somewhere below 32kB, but I haven't yet bothered finding out how large exactly).\n\nA colleague came up with a pretty good strategy (that would involve altering the client setup ritual somewhat): Send a pipe's FD through the client socket, then send the arguments down that (streaming) pipe. I think this sounds reasonable (despite the obvious \"portals inside portals\" [joke setup](http://static.giantbomb.com/uploads/scale_super/6/66388/1372800-750px_portal_infinity.jpg)), and will implement.\n. OK! The passing-a-pipe approach seems to work (and I'll run some more involved tests now)! It's definitely the first time I see a zeus command processing an arbitrary number of args on both Linux and OS X (-:\n. Awesome! Super glad it appears to work for you (:\n\nI have a build setup on OS X, with a vagrant linux VM - it's a bit janky, but I can build a gem with darwin and linux-amd64 zeuses. So far I haven't had any luck with the i386 build (mostly for lack of a VM that works for me). But even with that, I believe only @burke and @turadg have upload access to the zeus rubygem repo.\n\nHappy to merge, though! Doing that now... (-:\n. Thanks for the ping, @metcalf! I'll review this next week & hopefully get it merged later. \n\nI don't have much advice on tests, sadly - if you have one, that would be lovely. I suspect that it'll involve being able to stub the commands used to run nodes.\n. Looks great to me, thanks for working on this!\n\n\ud83d\udc4d \n. I really like this - hope it does succeed reliably. If not, I think we should do the three-phase socket interaction [suggested above](https://github.com/burke/zeus/pull/549#discussion_r63390447).\n\n:+1: from me!\n. Thank you! I love tests (:\n. I've been researching this (since it's a blocker for our upgrade to macOS Sierra), and it seems something changed in Sierra to cause zeus's fsevents program to not work correctly anymore - the advice at https://github.com/facebook/react-native/issues/9309#issuecomment-238966924 says to bump kernel file limits (they were very low in 10.11, and I wonder if they got bumped even lower in 10.12). \n\nThe other piece of advice is to upgrade to watchman 4.6 (we don't use watchman in Zeus, but bear with me). It includes a bunch of fsevents-related changes over 4.5, mostly in stream setup, and the handling of the `UserDropped` attribute. I'm installing a Sierra VM right now, to attempt to repro this too, so maybe I can dig up something more substantial.\n. Oh, interesting, I thought zeus still ships its own objc fsevents wrapper! Disregard all I said, then (:\n. I'm running into this too - will attempt to fix soon.\n. As far as I can tell, the PR above fixes that issue. I would love some input on my worries about this not being the best solution, @burke.\n. Thanks for making me a contributor! I'm very glad to help out (even if my working knowledge of go can use some huge improvements still)! Zeus is working very well for us at Stripe so far (-:\n. @turadg mostly, I chose zeus because spring's rails ties (and its code reloader) seemed prohibitive on our non-rails project. Zeus's flexibility for supporting non-rais projects via a zeus.json file & a simple ruby file were just a perfect match there. I think I got a very quick prototype running within 2 hours of browsing code & trying stuff. I'm happy to elaborate in email - asf@stripe.com (-:\n. I can confirm that I'm seeing that same thing on a non-rails app. I think this is a non-ruby problem, and instead rooted somewhere in the go code. The easiest way I've found to reproduce this is to perform these steps:\n1. Start the zeus server: `zeus start`\n2. Start a long-running process, e.g. `zeus console`\n3. Kill the \"zeus console\" client process.\n\n=> `clienthandler.go:103: write unix @: broken pipe`, zeus server and all its children are dead.\n\nLooks like the server should grow some resilience against clients going away from the unix socket. I'll try and code dive a little more.\n. OK, some code diving, head scratching and cursing later, I think I know what the problem is: Killing the client causes a SIGPIPE to get sent to the zeus server, which is a `terminatingSignal` (in [go/zeusmaster/zeusmaster.go](https://github.com/burke/zeus/blob/master/go/zeusmaster/zeusmaster.go#L18)), and causes the Zeus server to exit cleanly.\n\nBy default, go installs a handler that handles SIGPIPE more sensibly than this; removing the signal from that list makes my test case work, and I suspect it will fix all your cases as well. I'll submit a pull request.\n. PR #260 should handle this more gracefully. @leehambley, if you can test / confirm that it works, I'd appreciate it (-:\n. I traced zeusclient.go a bit, and this appears to happen because it's getting a TERM signal.\n\nRight now, I believe this is actually a ruby issue - [rubygem/lib/zeus.rb has an at_exit line](https://github.com/burke/zeus/blob/master/rubygem/lib/zeus.rb#L110) that kills the client with TERM when the command terminates. My hypothesis right now is that this causes a race condition where zeusclient can't read the exit code from the socket fast enough, and ends up receiving the async signal before it can itself exit with the right exit code.\n\nRemoving that at_exit line seems safe, but might be useful to have a safeguard in there to prevent the go client from hanging (though in my experience, that is the least breakage-happy part (-:). I'll read some more code and try to figure out the right way to proceed.\n. @turadg that's weird - I built the (patched) gem that we use at work by following these steps:\n- I edited ./VERSION to say \"0.13.2.2\" \n- I ran \"make clean darwin\", \n- then built the linux zeus on a linux box with the i386/x86_64 go toolchain installed, copied that into build/, \n- then ran \"make gem\".\n\nThe resulting gem does work for me without crashing... to make things a bit easier (no need to install the gem), you should be able to run just the zeus binary out of the build/ dir - what error messages are you getting and what are the relevant versions of tools you're using? I'm on go1.0.3, ruby 1.9.3p362 (via rbenv).\n. @turadg I opened #274 for this - guess we should discuss there. I'll be a bit busy with admin stuff today, but will try to get something built that you can test. (:\n. Hah - I'm glad I could help (even if my go skills are close to nonexistent)! (-:\n. The process structure looks different when you run tests under zeus (also, the environment variables such as $DISPLAY): The process running the tests is a child of the Zeus server. `zeus rspec` is just a program getting console output from that child and displaying it on the console. \n\nYou might have to start the zeus server with xvfb-run: `xvfb-run zeus start`. That should ensure that the processes are running in the right environment. You could also check out the `headless` gem, which you could integrate in a custom zeus step. I'll leave that to you (-:\n. I just tested current master, and it works for me without any problems. Argh, I think I know what the real problem is. Try inserting\n\n```\nrequire 'set'\n```\n\non top of your zeus.rb - I suspect your code base doesn't load that file early enough (and I forgot to add that require). Sorry sorry sorry.\n. @lastobelus when you figure out how to (more or less reliably) trigger this, can you send me steps to reproduce this on an empty rails app? I don't see that behavior in my (non-rails) app, and don't know what to do to trigger it in a rails one. )-:\n. @lastobelus I've seen this happen on our own project a couple of times too, and mostly in connection with many files changing, especially files changing while a reload is happening - most steps will get stuck in \"connecting\" state and then just go incommunicado until you kill Zeus.\n\nI believe there might be some race condition here where zeus tries to restart a process it hasn't been able to properly set up yet. This might not be related to this pull request, but I'll debug it further this week.\n. @lastobelus - are you referring to zombies as processes that exited but haven't been reaped by their parent yet? If so, I can't really make sense of that problem description. )-:\n\nWhat does pstree show you?\n. Thanks for that, I was really confused about which zombies you meant there for a while. (-:\n\nOne other thing that might be interesting would be to check what killing each of the \"zeus\" processes does - the zeus master process should exit cleanly when killed; I'm less sure about the \"zeus slave\" and \"zeus client\" processes though (they're ruby). Killing them with signal 9 should definitely clean them up, though. When this happens to you next time, can you try a `pkill -9 -f zeus` as well?\n\nAlso, I am currently testing a fix for #320, which probably will affect your experience re. any hung processes. I'll ping you when I submit it for review.\n. I'll try to build current master into an RC gem - in the meantime, can you try to build 0.13.2 and see if that also fails for you? Maybe we can bisect the problem!\n. Awesome! Glad it worked at least on that machine (-:\n. @turadg - one thing of note is that when I (and my colleague) are running the rc2 gem that you built, it crashes after the first of these \"broken pipe\" messages.\n\n(Unrelatedly, I locally patched the error reporter to output the PID of the zeus master, sorry for the nonstandard error format above)\n. Yep, I'm not able to reproduce with greater amounts of debugging right now, either )-:\n\nAdding a debug statement that outputs what unix socket the error happened on causes the reload to happen without any errors - seems like a weird timing-related thing (once more!)\n\nI guess we can disregard this until we have a clearer idea how to reliably reproduce it.\n. Hah, this was caused my own stupidity: The way I had our tools auto-restarted services killed the command twice (once via ^C, once via SIGTERM), and the latter caused the command client to terminate before the zeus server could send the exit status across, leading to that error. I have not got a single clue why this caused these messages to multiply like that (and haven't managed to reproduce it since), so I'm happily closing this.\n. Right now, Zeus itself doesn't daemonize - but you should be able to run the latest git revision under, say, daemontools (or upstart, start-stop-daemon, or any number of other daemonization tools), have it log to a file, and get the same result.\n\nI'll close this for now as zeus as I understand it is meant to run mostly interactively (for local development and such), but feel free to reopen if this doesn't help.\n. Hah, yes, the state machine started out pretty confusing, but by now I think I have a decent grip on how it works (-:\n\nI think the fix in #323 has put us into a pretty happy state. There have been way fewer reports of wedgedness in the last two weeks on my end, so I'd say we can declare victory!\n\nOne thing that I'd love to have is a test suite for the state machine. Given the many external things that are going on in it, I don't know if it's possible at all (but I guess a really really simple plan & fake inotify wrapper might work. Hm!\n. Forgot to mention, this is relevant to #320 and #272.\n. @lastobelus you can download it (for the next few days at least) from http://static.boinkor.net/ruby/zeus-0.13.3.0.3.gem - this is a linux-amd64 and darwin build of the current branch head (sorry, I don't have a way to build 32-bit linux at the moment, but could figure it out given time)\n. @lastobelus thanks for trying it out! I don't know of a better way (our app doesn't use rails, so I'm running with a custom plan file); if I were to guess, you probably could extend the regular rails plan in your app to add that dir.\n\nDon't really know if the `./lib` dir is a thing that's commonly needed in rails. If so, I'd be in favor of adding it in. @turadg - do you have an opinion on that? (:\n. This latest change should make it harder to get the boot process wedged (in \"unbooted\"). This is good enough to let my org work on our app without hangs / problems (has been for at least 1h now); I'm going to let this steep for a little while as we gather more data, but I'm relatively pleased with it now.\n\n@lastobelus - feel free to try this version from http://static.boinkor.net/ruby/zeus-0.13.3.0.6.gem (Also, how did your test with the previous rev go?)\n. Great to hear! I've not seen zeus with these patches crash yet either, so I'll merge this now (-:\n. Awesome - glad you all like it. Thanks for the reviews, folks! I'll merge (-:\n. Merging now - I hope this works on older Xcodes, but if not, I guess the solution is \"upgrade\" (-:\n. No, sadly, that's the other build error I needed to fix for newer Darwins.\n\nThanks for weighing in - I'll try and come up with a different way to phrase the Makefile sections (-:\n. I have traced this, and managed to determine the following symptoms:\n- The clienthandler code hangs when receiving the spawned command's PID [here](https://github.com/burke/zeus/blob/master/go/clienthandler/clienthandler.go#L93).\n- It looks like this really only happens on Linux - OS X is completely unaffected.\n- Command spawning on Linux doesn't seem to hang when issuing the command before its parent slave is completely booted (e.g. shown in blue). Subsequent command invocations hang, though.\n\nThere's another issue that I noticed on OS X, though. After a command exits, zeus prints \"slavenode.go:130: Unexpected process for slave `boot` was killed\". This might or might not be related. I guess it really is time to start bisecting now! Pressing on...\n. Bisecting (using a pretty janky method) says that 1ed167e80984a6dee4ca0e85be7b7ea55a70119c is the first bad commit. I believe it, for the moment (and will operate on the assumption that it /is/ bad), but can't quite see how that would affect things on linux, but not on OS X.\n. Thanks, @latortuga - I've got the workflow mostly covered! If you want, feel free to test the current HEAD on linux, with 1ed167e reverted - `git revert -n 1ed167e` should do it. This seems to work for me on linux (even if it spews \"slavenode.go:130: Unexpected process for slave `boot` was killed\", but that seems to be unrelated).\n. OK, I seem to have been wrong about where the interaction hangs - the go client handler seems to fail to pass the PTY's FD to the ruby command process. Then the ruby command process waits forever to receive the PTY FD, and never sends its PID, while the go client handler waits for it to do just that.\n\nI'm not sure exactly what causes this to happen on STREAM sockets, but it seems DGRAM unix domain sockets do work fine, so I'd be inclined to use them instead of STREAM ones.\n\nHilariously enough, googling around for this turns up http://stackoverflow.com/a/1126583/93405 - basically the same question, with only vague hypotheses. Ouch. Any help by an actual UNIX domain socket expert appreciated (-:\n. In summary (and reading up some more), I think DGRAM sockets may in fact the correct choice for the command socket: We have clearly delimited messages, and the failure modes of STREAM sockets don't sound particularly enticing, so I'm going to submit a PR that reverts 1ed167e (-:\n. Running this locally, I the SO_SNDBUF change doesn't seem correct - on OS X, it causes hangs when spawning commands. Argh.\n. Yep, this works on Linux, but on OS X, it seems like the dgram Unix socket has a hidden send buffer limit that can't be reset with SetWriteBuffer (I suspect that limit is somewhere below 32kB, but I haven't yet bothered finding out how large exactly).\n\nA colleague came up with a pretty good strategy (that would involve altering the client setup ritual somewhat): Send a pipe's FD through the client socket, then send the arguments down that (streaming) pipe. I think this sounds reasonable (despite the obvious \"portals inside portals\" [joke setup](http://static.giantbomb.com/uploads/scale_super/6/66388/1372800-750px_portal_infinity.jpg)), and will implement.\n. OK! The passing-a-pipe approach seems to work (and I'll run some more involved tests now)! It's definitely the first time I see a zeus command processing an arbitrary number of args on both Linux and OS X (-:\n. Awesome! Super glad it appears to work for you (:\n\nI have a build setup on OS X, with a vagrant linux VM - it's a bit janky, but I can build a gem with darwin and linux-amd64 zeuses. So far I haven't had any luck with the i386 build (mostly for lack of a VM that works for me). But even with that, I believe only @burke and @turadg have upload access to the zeus rubygem repo.\n\nHappy to merge, though! Doing that now... (-:\n. Thanks for the ping, @metcalf! I'll review this next week & hopefully get it merged later. \n\nI don't have much advice on tests, sadly - if you have one, that would be lovely. I suspect that it'll involve being able to stub the commands used to run nodes.\n. Looks great to me, thanks for working on this!\n\n\ud83d\udc4d \n. I really like this - hope it does succeed reliably. If not, I think we should do the three-phase socket interaction [suggested above](https://github.com/burke/zeus/pull/549#discussion_r63390447).\n\n:+1: from me!\n. Thank you! I love tests (:\n. I've been researching this (since it's a blocker for our upgrade to macOS Sierra), and it seems something changed in Sierra to cause zeus's fsevents program to not work correctly anymore - the advice at https://github.com/facebook/react-native/issues/9309#issuecomment-238966924 says to bump kernel file limits (they were very low in 10.11, and I wonder if they got bumped even lower in 10.12). \n\nThe other piece of advice is to upgrade to watchman 4.6 (we don't use watchman in Zeus, but bear with me). It includes a bunch of fsevents-related changes over 4.5, mostly in stream setup, and the handling of the `UserDropped` attribute. I'm installing a Sierra VM right now, to attempt to repro this too, so maybe I can dig up something more substantial.\n. Oh, interesting, I thought zeus still ships its own objc fsevents wrapper! Disregard all I said, then (:\n. ",
    "sampierson": "Thanks for being open to this, and for creating this awesome piece of technology!\n. Thanks for being open to this, and for creating this awesome piece of technology!\n. ",
    "ericboehs": "Having this issue too. :+1: for gem version bump.\n. I'm on ruby 2.0 as well and it's failing me on a Rails 3.2 app. A Rails 4 app with similar gems (not exactly the same) works fine, as does a fresh Rails 4 app. I'll report back if I get the rails 3.2 project working.\n. I added zeus to my Gemfile (development) and it runs fine through binstubs or `bundle exec`. I timed it vs my other project that it works fine w/o it in the Gemfile and it's 300-400ms slower. Which is better than not working at all.\n\nIf anyone else is still having problems, give this a shot.\n. Well I ran into this on another project (that was previously working). I tracked it down to method_source 0.8.2 (required by zeus as well as a few other big gems: pry, guard).\n\nI diffed method_source 0.8.1 vs 0.8.2 and came up with [exactly this](https://github.com/banister/method_source/compare/f300a4f3...1b1f832). I tried copying in all of the code from v0.8.1 but for some reason it was STILL broken.\n\nI tried removing all of 0.8.2 and replacing it with 0.8.1 but no luck.\n\nFinally I just uninstalled the gem from my machine:\n\n```\ngem uninstall --all --force method_source\ngem install method_source\n```\n\nAnd even though it installed 0.8.2, it seemed to fix it.\n\nOn my other project, I no longer need to `bundle exec zeus start` and can remove zeus from my Gemfile again.\n\nIf this doesn't work for you and you've tried all of the above, try nuking your project's bundle/gemset (e.g. `rm -rf vendor/bundle`)\n. This doesn't seem to be working with https://github.com/metaskills/minitest-spec-rails as he uses a railtie and it gets included on `::Rails.application.require_environment!`. The fix I got to work (after farrr too long) was identical to [sideshowcoder's](https://github.com/burke/zeus/issues/356#issuecomment-19098914) except I did `def test_environment` rather than `def test_helper`.\n. Having this issue too. :+1: for gem version bump.\n. I'm on ruby 2.0 as well and it's failing me on a Rails 3.2 app. A Rails 4 app with similar gems (not exactly the same) works fine, as does a fresh Rails 4 app. I'll report back if I get the rails 3.2 project working.\n. I added zeus to my Gemfile (development) and it runs fine through binstubs or `bundle exec`. I timed it vs my other project that it works fine w/o it in the Gemfile and it's 300-400ms slower. Which is better than not working at all.\n\nIf anyone else is still having problems, give this a shot.\n. Well I ran into this on another project (that was previously working). I tracked it down to method_source 0.8.2 (required by zeus as well as a few other big gems: pry, guard).\n\nI diffed method_source 0.8.1 vs 0.8.2 and came up with [exactly this](https://github.com/banister/method_source/compare/f300a4f3...1b1f832). I tried copying in all of the code from v0.8.1 but for some reason it was STILL broken.\n\nI tried removing all of 0.8.2 and replacing it with 0.8.1 but no luck.\n\nFinally I just uninstalled the gem from my machine:\n\n```\ngem uninstall --all --force method_source\ngem install method_source\n```\n\nAnd even though it installed 0.8.2, it seemed to fix it.\n\nOn my other project, I no longer need to `bundle exec zeus start` and can remove zeus from my Gemfile again.\n\nIf this doesn't work for you and you've tried all of the above, try nuking your project's bundle/gemset (e.g. `rm -rf vendor/bundle`)\n. This doesn't seem to be working with https://github.com/metaskills/minitest-spec-rails as he uses a railtie and it gets included on `::Rails.application.require_environment!`. The fix I got to work (after farrr too long) was identical to [sideshowcoder's](https://github.com/burke/zeus/issues/356#issuecomment-19098914) except I did `def test_environment` rather than `def test_helper`.\n. ",
    "bostonaholic": "As of `0.13.2` this is fixed for me. Was failing on `0.13.1`.\n. As of `0.13.2` this is fixed for me. Was failing on `0.13.1`.\n. ",
    "jamezilla": "Seeing this problem on 0.15.0.\n\nRails 4.0.3\nRuby 2.0.0p353\nOS X 10.9\n\n```\n/Users/james/.rvm/gems/ruby-2.0.0-p353@ltt/gems/zeus-0.15.0/lib/zeus/rails.rb:131:in `console': uninitialized constant Zeus::Rails::IRB (NameError)\n    from /Users/james/.rvm/gems/ruby-2.0.0-p353@ltt/gems/zeus-0.15.0/lib/zeus.rb:148:in `block in command'\n    from /Users/james/.rvm/gems/ruby-2.0.0-p353@ltt/gems/zeus-0.15.0/lib/zeus.rb:135:in `fork'\n    from /Users/james/.rvm/gems/ruby-2.0.0-p353@ltt/gems/zeus-0.15.0/lib/zeus.rb:135:in `command'\n    from /Users/james/.rvm/gems/ruby-2.0.0-p353@ltt/gems/zeus-0.15.0/lib/zeus.rb:50:in `go'\n```\n\nThe custom plan patch suggested by @bbozo works.\n. +1\nSeeing this too.\n. Seeing this problem on 0.15.0.\n\nRails 4.0.3\nRuby 2.0.0p353\nOS X 10.9\n\n```\n/Users/james/.rvm/gems/ruby-2.0.0-p353@ltt/gems/zeus-0.15.0/lib/zeus/rails.rb:131:in `console': uninitialized constant Zeus::Rails::IRB (NameError)\n    from /Users/james/.rvm/gems/ruby-2.0.0-p353@ltt/gems/zeus-0.15.0/lib/zeus.rb:148:in `block in command'\n    from /Users/james/.rvm/gems/ruby-2.0.0-p353@ltt/gems/zeus-0.15.0/lib/zeus.rb:135:in `fork'\n    from /Users/james/.rvm/gems/ruby-2.0.0-p353@ltt/gems/zeus-0.15.0/lib/zeus.rb:135:in `command'\n    from /Users/james/.rvm/gems/ruby-2.0.0-p353@ltt/gems/zeus-0.15.0/lib/zeus.rb:50:in `go'\n```\n\nThe custom plan patch suggested by @bbozo works.\n. +1\nSeeing this too.\n. ",
    "phuongnd08": "It's probably os issue that prevent application from being notified when file change if socket file (.zeus.sock) is present. Perhaps you can try Guard polling or move Guard to a sub folder of Rails project (given it's possible).\n. Even `zeus rspec spec` won't run. What a useless update!\n. Here is what I got:\n\n```\n$ zeus rspec spec/\nRun options: --seed 65414\n\n# Running tests:\n\n\n\nFinished tests in 0.002583s, 0.0000 tests/s, 0.0000 assertions/s.\n\n0 tests, 0 assertions, 0 failures, 0 errors, 0 skips\nphuongnd08:Giasu phuongnd08$ zeus test spec/\nRun options: --seed 56302\n\n# Running tests:\n\n\n\nFinished tests in 0.002607s, 0.0000 tests/s, 0.0000 assertions/s.\n\n0 tests, 0 assertions, 0 failures, 0 errors, 0 skips\n```\n. Any update on this?\n. 0.13.3 works fine now. Thanks for the fix :)\n. It's probably os issue that prevent application from being notified when file change if socket file (.zeus.sock) is present. Perhaps you can try Guard polling or move Guard to a sub folder of Rails project (given it's possible).\n. Even `zeus rspec spec` won't run. What a useless update!\n. Here is what I got:\n\n```\n$ zeus rspec spec/\nRun options: --seed 65414\n\n# Running tests:\n\n\n\nFinished tests in 0.002583s, 0.0000 tests/s, 0.0000 assertions/s.\n\n0 tests, 0 assertions, 0 failures, 0 errors, 0 skips\nphuongnd08:Giasu phuongnd08$ zeus test spec/\nRun options: --seed 56302\n\n# Running tests:\n\n\n\nFinished tests in 0.002607s, 0.0000 tests/s, 0.0000 assertions/s.\n\n0 tests, 0 assertions, 0 failures, 0 errors, 0 skips\n```\n. Any update on this?\n. 0.13.3 works fine now. Thanks for the fix :)\n. ",
    "benlovell": "This is burning me at the moment too.\n. This is burning me at the moment too.\n. ",
    "mehowte": ":+1:\n. :+1:\n. ",
    "bradleybuda": "+1. It's not enough to specifically fix this for guard, the incorrect exit status reporting also breaks things like `git bisect`\n. +1. It's not enough to specifically fix this for guard, the incorrect exit status reporting also breaks things like `git bisect`\n. ",
    "theo-bittencourt": "+1\n. For me too.\n\nOn 09/03/2013, at 21:59, Antonio Santos notifications@github.com wrote:\n\n> It doesn't fix it for me, can someone confirm?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Works fine now! Thanks!\n\nI just had to reorder the Gemfile groups to keep rspec-rails generators.\n\nBefore:\n\n``` ruby\ngroup :test do\n  gem 'shoulda-matchers'\nend\n\ngroup :development, :test do\n  gem 'rspec-rails'\nend\n```\n\nAfter:\n\n``` ruby\ngroup :development, :test do\n  gem 'rspec-rails'\nend\n\ngroup :test do\n  gem 'shoulda-matchers'\nend\n```\n. +1\n. For me too.\n\nOn 09/03/2013, at 21:59, Antonio Santos notifications@github.com wrote:\n\n> It doesn't fix it for me, can someone confirm?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Works fine now! Thanks!\n\nI just had to reorder the Gemfile groups to keep rspec-rails generators.\n\nBefore:\n\n``` ruby\ngroup :test do\n  gem 'shoulda-matchers'\nend\n\ngroup :development, :test do\n  gem 'rspec-rails'\nend\n```\n\nAfter:\n\n``` ruby\ngroup :development, :test do\n  gem 'rspec-rails'\nend\n\ngroup :test do\n  gem 'shoulda-matchers'\nend\n```\n. ",
    "antonio": "Sorry for the confusion I created :/\n\n@theo-bittencourt I deleted the comment because it was meant to be published in the guard/guard-rspec project, which was linking here.\n\nzeus latest version does return 0 for me\n. I would also be very interested in knowing the answer to this, thanks in advance.\n. Sorry for the confusion I created :/\n\n@theo-bittencourt I deleted the comment because it was meant to be published in the guard/guard-rspec project, which was linking here.\n\nzeus latest version does return 0 for me\n. I would also be very interested in knowing the answer to this, thanks in advance.\n. ",
    "cromulus": "bump. Having the same issue here.\n. bump. Having the same issue here.\n. ",
    "RajRoR": "+1 same issue\n. +1 same issue\n. ",
    "murbanski": "Similar issue here: https://github.com/burke/zeus/issues/202\n. Similar issue here: https://github.com/burke/zeus/issues/202\n. ",
    "Bertg": "+1 this is causing us issues. \nWe are using JSON as an ActiveRecord serializer, and the versions are creating a difference.\n\nThe older version of JSON will not accept empty strings; while the new one does in the load method.\n. My 2 cents. Although adding zeus to the gem file MIGHT solve it; it is not a guarantee. The zeus binaries ARE binaries and could do whatever they desire. \n\nIt would be cleaner for zeus to detect a gemfile and bundler in a project and resolve gems via the bundler mechanism if available.\n. +1 this is causing us issues. \nWe are using JSON as an ActiveRecord serializer, and the versions are creating a difference.\n\nThe older version of JSON will not accept empty strings; while the new one does in the load method.\n. +1 this is causing us issues. \nWe are using JSON as an ActiveRecord serializer, and the versions are creating a difference.\n\nThe older version of JSON will not accept empty strings; while the new one does in the load method.\n. My 2 cents. Although adding zeus to the gem file MIGHT solve it; it is not a guarantee. The zeus binaries ARE binaries and could do whatever they desire. \n\nIt would be cleaner for zeus to detect a gemfile and bundler in a project and resolve gems via the bundler mechanism if available.\n. +1 this is causing us issues. \nWe are using JSON as an ActiveRecord serializer, and the versions are creating a difference.\n\nThe older version of JSON will not accept empty strings; while the new one does in the load method.\n. ",
    "szimek": "There's also new related issue #292\n. The issue is that JSON library is in Ruby core. The Ruby version I'm using (1.9.3p392) has JSON library in version 1.5.5. If you run `zeus start`, it calls `require 'json'` at the very top of `zeus.rb` file, which is loading JSON library from the core. You could change it to load JSON library from the gem by adding `gem \"json\", \">= 1.7\"` before the require call (as suggested by @moll ), but it's still possible that zeus will load some other gem in a different version than specified in your app's `Gemfile.lock` file.\n\nFor some strange reason even after adding zeus to Gemfile and starting it via `bundle exec zeus start` and `bundle exec zeus console` it still loads JSON from the core.\n. There's also new related issue #292\n. The issue is that JSON library is in Ruby core. The Ruby version I'm using (1.9.3p392) has JSON library in version 1.5.5. If you run `zeus start`, it calls `require 'json'` at the very top of `zeus.rb` file, which is loading JSON library from the core. You could change it to load JSON library from the gem by adding `gem \"json\", \">= 1.7\"` before the require call (as suggested by @moll ), but it's still possible that zeus will load some other gem in a different version than specified in your app's `Gemfile.lock` file.\n\nFor some strange reason even after adding zeus to Gemfile and starting it via `bundle exec zeus start` and `bundle exec zeus console` it still loads JSON from the core.\n. ",
    "borisrorsvort": "+1\n. +1\n. ",
    "map7": "If I upgrade rspec to 2.6.0 it works\n. I'm also getting this error but under Linux:\n\n% uname -a\nLinux 3.4.0-030400-generic\n\n% ruby -v\nruby 1.9.2p290 (2011-07-09 revision 32553) [x86_64-linux]\n\nRunning zeus 0.13.1\n. If I upgrade rspec to 2.6.0 it works\n. I'm also getting this error but under Linux:\n\n% uname -a\nLinux 3.4.0-030400-generic\n\n% ruby -v\nruby 1.9.2p290 (2011-07-09 revision 32553) [x86_64-linux]\n\nRunning zeus 0.13.1\n. ",
    "Ivor": "Same experience for me. Ruby 1.9.2p180\n. Same experience for me. Ruby 1.9.2p180\n. ",
    "JeanMertz": "I've been having the same issue, also related to rspec options (specifically, `--color`)\n. @assembler What are _some more problems_ that it caused? Does it in fact not send any of the other options to rspec? Or what other issues are you talking about?\n. I've been messing with Zeus/Guard as well. The problem you described has been discussed before (here, or on the guard issues page). I think it was related to rspec loading `rspec/autoload`, but removing that line caused other issues as well.\n\nConclusion: I stopped looking into it for now, it didn't seem to work that great together.\n. I've been having the same issue, also related to rspec options (specifically, `--color`)\n. @assembler What are _some more problems_ that it caused? Does it in fact not send any of the other options to rspec? Or what other issues are you talking about?\n. I've been messing with Zeus/Guard as well. The problem you described has been discussed before (here, or on the guard issues page). I think it was related to rspec loading `rspec/autoload`, but removing that line caused other issues as well.\n\nConclusion: I stopped looking into it for now, it didn't seem to work that great together.\n. ",
    "rmoriz": "same issue here with guard-rspec:\n\n``` shell\n9:59:08 - DEBUG - Command execution: zeus rspec -f progress -r /Users/x/.rbenv/versions/1.9.3-p327/lib/ruby/gems/1.9.1/gems/guard-rspec-2.3.1/lib/guard/rspec/formatter.rb -f Guard::RSpec::Formatter --out /dev/null --failure-exit-code 2 spec \n/Users/x/.rbenv/versions/1.9.3-p327/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/m.rb:188:in `block in parse_options!': invalid option: -f (OptionParser::InvalidOption)\n```\n. same problem, commenting out 'rspec/autoran' doesn't help.\n\nzeus 0.13.1, Rails 3.2.9, rspec-rails only (no Test::Unit)\n. same issue here with guard-rspec:\n\n``` shell\n9:59:08 - DEBUG - Command execution: zeus rspec -f progress -r /Users/x/.rbenv/versions/1.9.3-p327/lib/ruby/gems/1.9.1/gems/guard-rspec-2.3.1/lib/guard/rspec/formatter.rb -f Guard::RSpec::Formatter --out /dev/null --failure-exit-code 2 spec \n/Users/x/.rbenv/versions/1.9.3-p327/lib/ruby/gems/1.9.1/gems/zeus-0.13.1/lib/zeus/m.rb:188:in `block in parse_options!': invalid option: -f (OptionParser::InvalidOption)\n```\n. same problem, commenting out 'rspec/autoran' doesn't help.\n\nzeus 0.13.1, Rails 3.2.9, rspec-rails only (no Test::Unit)\n. ",
    "iRonin": "For me adding `--tty` to options fixed it (eg. `zeus rspec --color --tty spec/\u2026`).\n. Same here.\n. Whenever I get this error it's down to some gem conflicts or other Rails app errors.\nTry to start rails server manually and see if it works.\n. For me adding `--tty` to options fixed it (eg. `zeus rspec --color --tty spec/\u2026`).\n. Same here.\n. Whenever I get this error it's down to some gem conflicts or other Rails app errors.\nTry to start rails server manually and see if it works.\n. ",
    "IAmFledge": "For my own needs, running it through bundle exec on the latest version of zeus works... however that's against the recommendation of the Zeus documentation.\n. For my own needs, running it through bundle exec on the latest version of zeus works... however that's against the recommendation of the Zeus documentation.\n. ",
    "ismaelga": "Damn! I don't know how I've created 2 issues. But it's resolved here https://github.com/burke/zeus/issues/210\n. Ok, it seems my team fellow just added a gem so I needed to run `bundle`. Though I think zeus should tell about what's wrong right?\n\nAnyway, zeus is awesome! :+1: Saves me a lot of time. Thanks! \n. Damn! I don't know how I've created 2 issues. But it's resolved here https://github.com/burke/zeus/issues/210\n. Ok, it seems my team fellow just added a gem so I needed to run `bundle`. Though I think zeus should tell about what's wrong right?\n\nAnyway, zeus is awesome! :+1: Saves me a lot of time. Thanks! \n. ",
    "nberger": "+1\n\nWould be great to have this merged! I'll try and add some tests.\n. Added a basic test in https://github.com/nberger/zeus/commit/51c29c55ab30b641852c6e0f5798cc109846398f\n. I ended using a custom plan, something like:\n\n```\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n\n  def default_bundle\n    super\n\n    # Track changes to Gemfile.lock\n    Zeus::LoadTracking.add_feature('./Gemfile.lock')\n  end\n\nend\n\nZeus.plan = CustomPlan.new\n```\n\nIt seems that's the philosophy as explained in the docs: https://github.com/burke/zeus/blob/master/docs/ruby/modifying.md\n. +1\n\nWould be great to have this merged! I'll try and add some tests.\n. Added a basic test in https://github.com/nberger/zeus/commit/51c29c55ab30b641852c6e0f5798cc109846398f\n. I ended using a custom plan, something like:\n\n```\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n\n  def default_bundle\n    super\n\n    # Track changes to Gemfile.lock\n    Zeus::LoadTracking.add_feature('./Gemfile.lock')\n  end\n\nend\n\nZeus.plan = CustomPlan.new\n```\n\nIt seems that's the philosophy as explained in the docs: https://github.com/burke/zeus/blob/master/docs/ruby/modifying.md\n. ",
    "alanhogan": "We were just saying Zeus should watch gemfile and do _something_ if it changes, instead of chugging along while missing important gems that (say) a teammate added to the project!\n\nThis will be great.\n. We were just saying Zeus should watch gemfile and do _something_ if it changes, instead of chugging along while missing important gems that (say) a teammate added to the project!\n\nThis will be great.\n. ",
    "fny": "+1\n. I've realized I've been requiring the files twice, once in my spec helper and a second time in custom plan.  Removing one of the two resolved the issue.\n. +1\n. I've realized I've been requiring the files twice, once in my spec helper and a second time in custom plan.  Removing one of the two resolved the issue.\n. ",
    "yossi-shasho": "unfortunately the only thing that solved it for me was to revert back to version 0.12\n. Thanks! unfortunately I'm using Guard, so this doesn't help me as much. Still had to downgrade to 0.12, which is less stable\n. unfortunately the only thing that solved it for me was to revert back to version 0.12\n. Thanks! unfortunately I'm using Guard, so this doesn't help me as much. Still had to downgrade to 0.12, which is less stable\n. ",
    "rwjblue": "I am having the same issue.  Looks like running zeus rspec spec works properly.  \n\nThis may be related to changes introduced in #149 (commit 85c42d52c0a) then later changed in #187 (commit d5a2302ff1).\n\nI am only using rspec in my app so I just hardcoded to avoid the issue:\n\n``` ruby\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n  def test\n    exit RSpec::Core::Runner.run(ARGV)\n  end\nend\n\nZeus.plan = CustomPlan.new\n\n```\n. Try commenting out the following line in your spec_helper.rb as recommended in #180:\n\n``` ruby\n\nrequire 'rspec/autorun'\n\n```\n\nThat resolved my issue from within guard as well.\n. I am having the same issue.  Looks like running zeus rspec spec works properly.  \n\nThis may be related to changes introduced in #149 (commit 85c42d52c0a) then later changed in #187 (commit d5a2302ff1).\n\nI am only using rspec in my app so I just hardcoded to avoid the issue:\n\n``` ruby\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n  def test\n    exit RSpec::Core::Runner.run(ARGV)\n  end\nend\n\nZeus.plan = CustomPlan.new\n\n```\n. Try commenting out the following line in your spec_helper.rb as recommended in #180:\n\n``` ruby\n\nrequire 'rspec/autorun'\n\n```\n\nThat resolved my issue from within guard as well.\n. ",
    "karellm": "Same problem: zeus 0.13.4.pre2, Rails 3.2.13, rspec 2.13\n. +1\n. Same problem: zeus 0.13.4.pre2, Rails 3.2.13, rspec 2.13\n. +1\n. ",
    "joevandyk": "Same problem on zeus from latest master. Didn't have this problem on earlier versions.\n\n```\n/Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/rake-0.9.2.2/lib/rake/task_manager.rb:49:in `[]': Don't know how to build task 'test' (RuntimeError)\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/rake-0.9.2.2/lib/rake/task.rb:298:in `[]'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus/m.rb:131:in `parse'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus/m.rb:120:in `run'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus/m.rb:106:in `run'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus/rails.rb:208:in `test'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:121:in `block in command'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:108:in `fork'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:108:in `command'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:81:in `block (3 levels) in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:81:in `fork'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:81:in `block (2 levels) in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:74:in `each'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:74:in `block in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:63:in `loop'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:63:in `go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:79:in `block (3 levels) in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:79:in `fork'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:79:in `block (2 levels) in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:74:in `each'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:74:in `block in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:63:in `loop'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:63:in `go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:79:in `block (3 levels) in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:79:in `fork'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:79:in `block (2 levels) in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:74:in `each'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:74:in `block in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:63:in `loop'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:63:in `go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:79:in `block (3 levels) in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:79:in `fork'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:79:in `block (2 levels) in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:74:in `each'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:74:in `block in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:63:in `loop'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:63:in `go'\n    from -e:1:in `<main>'\n```\n. Hm, running `zeus rspec spec` does work though.\n. Any chance you could push out a new release with this in it?\n. Same problem on zeus from latest master. Didn't have this problem on earlier versions.\n\n```\n/Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/rake-0.9.2.2/lib/rake/task_manager.rb:49:in `[]': Don't know how to build task 'test' (RuntimeError)\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/rake-0.9.2.2/lib/rake/task.rb:298:in `[]'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus/m.rb:131:in `parse'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus/m.rb:120:in `run'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus/m.rb:106:in `run'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus/rails.rb:208:in `test'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:121:in `block in command'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:108:in `fork'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:108:in `command'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:81:in `block (3 levels) in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:81:in `fork'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:81:in `block (2 levels) in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:74:in `each'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:74:in `block in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:63:in `loop'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:63:in `go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:79:in `block (3 levels) in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:79:in `fork'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:79:in `block (2 levels) in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:74:in `each'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:74:in `block in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:63:in `loop'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:63:in `go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:79:in `block (3 levels) in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:79:in `fork'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:79:in `block (2 levels) in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:74:in `each'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:74:in `block in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:63:in `loop'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:63:in `go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:79:in `block (3 levels) in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:79:in `fork'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:79:in `block (2 levels) in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:74:in `each'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:74:in `block in go'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:63:in `loop'\n    from /Users/joe/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/zeus-0.13.4.pre2/lib/zeus.rb:63:in `go'\n    from -e:1:in `<main>'\n```\n. Hm, running `zeus rspec spec` does work though.\n. Any chance you could push out a new release with this in it?\n. ",
    "sickill": "Same here, rails 3.2.13, zeus 0.3.14.pre2. Neither `zeus test` nor `zeus rspec` work. `zeus rspec spec` works though.\n. +1\n. Same here, rails 3.2.13, zeus 0.3.14.pre2. Neither `zeus test` nor `zeus rspec` work. `zeus rspec spec` works though.\n. +1\n. ",
    "arturhoo": "Same problems here. `zeus rspec` gives me `Don't know how to build task 'test' (RuntimeError)` and `zeus rspec spec` runs no tests at all.\n. Same problems here. `zeus rspec` gives me `Don't know how to build task 'test' (RuntimeError)` and `zeus rspec spec` runs no tests at all.\n. ",
    "joel": "Thanks @joevandyk these work for me:  \n\n```\nzeus test spec\n```\n\nwith zeus.json\n\n```\n{\n  \"command\": \"ruby -rubygems -rzeus/rails -eZeus.go\",\n\n  \"plan\": {\n    \"boot\": {\n      \"default_bundle\": {\n        \"development_environment\": {\n          \"prerake\": {\"rake\": []},\n          \"runner\": [\"r\"],\n          \"console\": [\"c\"],\n          \"server\": [\"s\"],\n          \"generate\": [\"g\"],\n          \"dbconsole\": []\n        },\n        \"test_environment\": {\n          \"test_helper\": {\"test\": [\"rspec\"]}\n        }\n      }\n    }\n  }\n}\n```\n\nBut `bundle exec guard` doesn't work anymore :/\n\n```\n#! ruby\n\nguard 'rspec',\n  cmd: 'zeus test spec',\n  spec_paths: ['spec'],\n  failed_mode: :keep,\n  all_after_pass: true,\n  all_on_start: true,\n  notification: true,\n  run_all: { cmd: 'zeus rspec spec', message: 'running all specs' }  do\n\n...\nend\n```\n\nHave this output \n\n```\n12:29:20 - INFO - Guard is using TerminalTitle to send notifications.\n12:29:20 - INFO - Guard::RSpec is running\n12:29:20 - INFO - running all specs\nzeusclient.go:85: EOF\n```\n. Thanks @joevandyk these work for me:  \n\n```\nzeus test spec\n```\n\nwith zeus.json\n\n```\n{\n  \"command\": \"ruby -rubygems -rzeus/rails -eZeus.go\",\n\n  \"plan\": {\n    \"boot\": {\n      \"default_bundle\": {\n        \"development_environment\": {\n          \"prerake\": {\"rake\": []},\n          \"runner\": [\"r\"],\n          \"console\": [\"c\"],\n          \"server\": [\"s\"],\n          \"generate\": [\"g\"],\n          \"dbconsole\": []\n        },\n        \"test_environment\": {\n          \"test_helper\": {\"test\": [\"rspec\"]}\n        }\n      }\n    }\n  }\n}\n```\n\nBut `bundle exec guard` doesn't work anymore :/\n\n```\n#! ruby\n\nguard 'rspec',\n  cmd: 'zeus test spec',\n  spec_paths: ['spec'],\n  failed_mode: :keep,\n  all_after_pass: true,\n  all_on_start: true,\n  notification: true,\n  run_all: { cmd: 'zeus rspec spec', message: 'running all specs' }  do\n\n...\nend\n```\n\nHave this output \n\n```\n12:29:20 - INFO - Guard is using TerminalTitle to send notifications.\n12:29:20 - INFO - Guard::RSpec is running\n12:29:20 - INFO - running all specs\nzeusclient.go:85: EOF\n```\n. ",
    "reicheltd": "same issue here using `rbenv ruby 2.0.0p353 (2013-11-22 revision 43784) [x86_64-darwin11.4.2]` and `zeus-0.13.4.pre2` `rails 4.0.3`. `zeus-0.12` works.\n. @corysimmons lol `gem uninstall psych` worked for me too!\n. same issue here using `rbenv ruby 2.0.0p353 (2013-11-22 revision 43784) [x86_64-darwin11.4.2]` and `zeus-0.13.4.pre2` `rails 4.0.3`. `zeus-0.12` works.\n. @corysimmons lol `gem uninstall psych` worked for me too!\n. ",
    "stefanlance": "Same here, with the following:\n`rvm 1.25.28 (stable)`\n`ruby 1.9.3p484 (2013-11-22 revision 43786) [x86_64-linux]`\n`zeus (0.15.1)`\n`rails (4.1.5)`\n`rspec (3.0.0)`\n\nRunning `zeus rspec spec` works, but it would be great if `zeus rspec` worked.\n. Same here, with the following:\n`rvm 1.25.28 (stable)`\n`ruby 1.9.3p484 (2013-11-22 revision 43786) [x86_64-linux]`\n`zeus (0.15.1)`\n`rails (4.1.5)`\n`rspec (3.0.0)`\n\nRunning `zeus rspec spec` works, but it would be great if `zeus rspec` worked.\n. ",
    "maxcal": "Ran into this issue with:\n\n`ruby-2.1.1`\n`rails (= 4.1.6)`\n`zeus (0.15.3)`\n`rspec (3.1.0)`\n\nI used @rwjblue's solution to get `zeus test` working: \n\n``` RUBY\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n  def test\n    exit RSpec::Core::Runner.run(ARGV)\n  end\nend\n\nZeus.plan = CustomPlan.new\n```\n\nAnd then in my Guardfile I use the `cmd` option:\n\n``` RUBY\nguard :rspec, cmd: 'zeus test' do\n   # ...\nend\n```\n. I encountered this issue as well and solved it by putting this in the top of `spec_helper`: \n\n``` RUBY\n # Zeus does not preload RSpec, but running `rspec spec` does\n require 'rspec/core' unless defined? RSpec.configure\n```\n\nI believe this keeps the vanilla rspec runner from loading the whole rails stack for non-rails specs. I could be wrong however.\n. I know and respect that you have closed the issue @latortuga but some authoritative documentation about how to use Zeus and RSpec 3 together would be helpful - maybe in the the wiki? \n\nI have a [stackoverflow question](http://stackoverflow.com/questions/26073898/rspec-3-1-with-zeus-should-i-require-rspec-rails-in-spec-helper) on this topic if anyone wants rep.\n. I\u00b4m not quite sure, although RSpec has touted the new approach I can see a lot of devs viewing `rails_helper` as a solution looking for a problem.\n\nI think maybe it would be wise to check for a `rails_helper` file and fall back to the previous behaviour of loading `spec_helper` if its not there. If possible.\n. Ran into this issue with:\n\n`ruby-2.1.1`\n`rails (= 4.1.6)`\n`zeus (0.15.3)`\n`rspec (3.1.0)`\n\nI used @rwjblue's solution to get `zeus test` working: \n\n``` RUBY\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n  def test\n    exit RSpec::Core::Runner.run(ARGV)\n  end\nend\n\nZeus.plan = CustomPlan.new\n```\n\nAnd then in my Guardfile I use the `cmd` option:\n\n``` RUBY\nguard :rspec, cmd: 'zeus test' do\n   # ...\nend\n```\n. I encountered this issue as well and solved it by putting this in the top of `spec_helper`: \n\n``` RUBY\n # Zeus does not preload RSpec, but running `rspec spec` does\n require 'rspec/core' unless defined? RSpec.configure\n```\n\nI believe this keeps the vanilla rspec runner from loading the whole rails stack for non-rails specs. I could be wrong however.\n. I know and respect that you have closed the issue @latortuga but some authoritative documentation about how to use Zeus and RSpec 3 together would be helpful - maybe in the the wiki? \n\nI have a [stackoverflow question](http://stackoverflow.com/questions/26073898/rspec-3-1-with-zeus-should-i-require-rspec-rails-in-spec-helper) on this topic if anyone wants rep.\n. I\u00b4m not quite sure, although RSpec has touted the new approach I can see a lot of devs viewing `rails_helper` as a solution looking for a problem.\n\nI think maybe it would be wise to check for a `rails_helper` file and fall back to the previous behaviour of loading `spec_helper` if its not there. If possible.\n. ",
    "sshao": "This should be fixed by burke/zeus#497 now\n. This is likely a dup of #414. Should work on rbx-head now; see rubinius/rubinius#2889.\n. This is likely a dup of #414. Should work on rbx-head now; see rubinius/rubinius#2889.\n. Just added fe5659e to try and avoid shelling out to `rake test` on `zeus test (w/o arguments)`, as `rake test` seems to run slower.\n\nThis assumes that tests are located in a directory named `test/` -- an assumption that has been made [elsewhere in zeus](https://github.com/burke/zeus/blob/d6123d99b98d764a30cca1f19e104300a06ce6f3/rubygem/lib/zeus/rails.rb#L173) as well.\n. This should be fixed by burke/zeus#497 now\n. This is likely a dup of #414. Should work on rbx-head now; see rubinius/rubinius#2889.\n. This is likely a dup of #414. Should work on rbx-head now; see rubinius/rubinius#2889.\n. Just added fe5659e to try and avoid shelling out to `rake test` on `zeus test (w/o arguments)`, as `rake test` seems to run slower.\n\nThis assumes that tests are located in a directory named `test/` -- an assumption that has been made [elsewhere in zeus](https://github.com/burke/zeus/blob/d6123d99b98d764a30cca1f19e104300a06ce6f3/rubygem/lib/zeus/rails.rb#L173) as well.\n. ",
    "naquad": "I've tried, but I couldn't do it :( Seems there is no event or method\ncalled when slave node is reloaded.\n\n2012/12/21 bbozo notifications@github.com\n\n> I'm pretty sure you can do this with a custom plan...\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/214#issuecomment-11594127.\n. I've tried, but I couldn't do it :( Seems there is no event or method\ncalled when slave node is reloaded.\n\n2012/12/21 bbozo notifications@github.com\n\n> I'm pretty sure you can do this with a custom plan...\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/214#issuecomment-11594127.\n. ",
    "rodrigues": ":+1: \n. :+1: \n. ",
    "reducm": "this issue come up again in v0.15.0\n. this issue come up again in v0.15.0\n. ",
    "zoltan-nz": "Yes, I can confirm also, this issue is exist on v0.15.0. If you use pry, use v0.13.3\n. Yes, I can confirm also, this issue is exist on v0.15.0. If you use pry, use v0.13.3\n. ",
    "johnsyweb": "I see this is fixed in [v2.0.0](https://github.com/sunspot/sunspot/tree/v2.0.0): https://github.com/sunspot/sunspot/commit/1838eec\nThanks @aaronjensen!\n. I see this is fixed in [v2.0.0](https://github.com/sunspot/sunspot/tree/v2.0.0): https://github.com/sunspot/sunspot/commit/1838eec\nThanks @aaronjensen!\n. ",
    "chip-miller": "`bundle update sunspot_solr`\n. `bundle update sunspot_solr`\n. ",
    "brandonc": "I have the same issue with 1.9.3-p194, Zeus version 0.13.3.rc2\n. I have the same issue with 1.9.3-p194, Zeus version 0.13.3.rc2\n. ",
    "alexandru-calinoiu": "does not work with the newly released rubinus 2.0.0 also\n. does not work with the newly released rubinus 2.0.0 also\n. ",
    "andyl": "Zeus does not work with Rubinius 2.1.0 on Ubuntu 12.04 \n. I have this problem also.  I run zeus from a test shell.  The incorrect status codes break the shell alerting function.\n. Seems like the exit-status is generated by 'zeus/build/zeus-linux-386', which is a binary file (a go executable?).  So I don't think its possible to fix this problem in the field.  (without getting hands-on with go...)\n. Spring looks nice!  Thanks for that reference.\n\nBut Spring also ignores the exit status.  (https://github.com/jonleighton/spring/issues/57)\n\nI prefer the zeus style of pre-loading.  Come on @burke - we need your Go skills!\n. Here's some more elaboration on this issue - this is from the RubyMine bug tracker at http://youtrack.jetbrains.com/issue/RUBY-12277\n\nHey Colin, I found that the names of all the spec files in my project together lead to a longer string than the zeus server expects to read from its clients, so that it was chopping off some of the names of the files. I hacked my zeus gem at this line - https://github.com/burke/zeus/blob/master/rubygem/lib/zeus.rb#L86 - to change the number of bytes read (currently 1024) to a bigger value (2**16 worked for me), and that fixed it for me. I've been meaning to put an issue in with burke about it on Github. \n. Still broken for me, using Zeus 0.13.3.  Have to manually patch after every install.  \n. @sevos - that did it - at last.  0.13.4.pre2 worked w/o patching.    thank you!  \n. I also ran into this problem with zeus 0.13.3, and made the same local fix as @rtlong.  Everything has been running fine for the past few days on 1.9.3.  Sorry I didn't send a PR earlier - thanks to @rtlong for posting this...\n. Zeus does not work with Rubinius 2.1.0 on Ubuntu 12.04 \n. I have this problem also.  I run zeus from a test shell.  The incorrect status codes break the shell alerting function.\n. Seems like the exit-status is generated by 'zeus/build/zeus-linux-386', which is a binary file (a go executable?).  So I don't think its possible to fix this problem in the field.  (without getting hands-on with go...)\n. Spring looks nice!  Thanks for that reference.\n\nBut Spring also ignores the exit status.  (https://github.com/jonleighton/spring/issues/57)\n\nI prefer the zeus style of pre-loading.  Come on @burke - we need your Go skills!\n. Here's some more elaboration on this issue - this is from the RubyMine bug tracker at http://youtrack.jetbrains.com/issue/RUBY-12277\n\nHey Colin, I found that the names of all the spec files in my project together lead to a longer string than the zeus server expects to read from its clients, so that it was chopping off some of the names of the files. I hacked my zeus gem at this line - https://github.com/burke/zeus/blob/master/rubygem/lib/zeus.rb#L86 - to change the number of bytes read (currently 1024) to a bigger value (2**16 worked for me), and that fixed it for me. I've been meaning to put an issue in with burke about it on Github. \n. Still broken for me, using Zeus 0.13.3.  Have to manually patch after every install.  \n. @sevos - that did it - at last.  0.13.4.pre2 worked w/o patching.    thank you!  \n. I also ran into this problem with zeus 0.13.3, and made the same local fix as @rtlong.  Everything has been running fine for the past few days on 1.9.3.  Sorry I didn't send a PR earlier - thanks to @rtlong for posting this...\n. ",
    "alex88": "Any update? I still get all processes in waiting\n. I've json 1.8.1, method_source 0.8.2, tried to install gem within Gemfile and use `bundle exec`, no luck, still exits with error 1 using rubinius 2.2.3 :cry: \n. Using rubinius 2.2.3, I get the same `exit code 1` but while the first process after the exit code is still running, `zeus server` just hangs there (I think waiting)\n. Just seen that ctrl-c on `zeus server` nothing happens, ctrl-c on `zeus start` while server waiting gives in the server window:\n\n```\nzeusclient.go:85: EOF\n```\n. Any update? I still get all processes in waiting\n. I've json 1.8.1, method_source 0.8.2, tried to install gem within Gemfile and use `bundle exec`, no luck, still exits with error 1 using rubinius 2.2.3 :cry: \n. Using rubinius 2.2.3, I get the same `exit code 1` but while the first process after the exit code is still running, `zeus server` just hangs there (I think waiting)\n. Just seen that ctrl-c on `zeus server` nothing happens, ctrl-c on `zeus start` while server waiting gives in the server window:\n\n```\nzeusclient.go:85: EOF\n```\n. ",
    "exocode": "I got:\n\n```\nexit status 1\n```\n\non a \n\n```\nDarwin Jans-MacBook-Pro 13.1.0 Darwin Kernel Version 13.1.0: Wed Apr  2 23:52:02 PDT 2014; root:xnu-2422.92.1~2/RELEASE_X86_64 x86_64\n```\n\nzeus version\n\n```\nZeus version 0.15.1\n```\n. I got:\n\n```\nexit status 1\n```\n\non a \n\n```\nDarwin Jans-MacBook-Pro 13.1.0 Darwin Kernel Version 13.1.0: Wed Apr  2 23:52:02 PDT 2014; root:xnu-2422.92.1~2/RELEASE_X86_64 x86_64\n```\n\nzeus version\n\n```\nZeus version 0.15.1\n```\n. ",
    "enovajuan": ":+1: \n. So I was just getting this issue, using zeus .15.3 (latest), tried fixing it via the removing json from gem, didn't work, tried removing zeus.json file also didn't work. Eventually what did work was trying to run `rails s` from console, which actually showed me that I had some custom gems, with custom gem source URL's which had not been installed. Ran bundle install, and success.\n. either go isn't installed, or the user that runs zeus doesn't have permissions to create .zeus.sock. `maybe?`\n. :+1: \n. :+1: \n. So I was just getting this issue, using zeus .15.3 (latest), tried fixing it via the removing json from gem, didn't work, tried removing zeus.json file also didn't work. Eventually what did work was trying to run `rails s` from console, which actually showed me that I had some custom gems, with custom gem source URL's which had not been installed. Ran bundle install, and success.\n. either go isn't installed, or the user that runs zeus doesn't have permissions to create .zeus.sock. `maybe?`\n. :+1: \n. ",
    "rrooding": "This seems to be fixed in the current version (maybe due to new ruby or rails):\n\n```\n\u279c  app $  zeus c                                       \nLoading development environment (Rails 4.0.0)\n2.0.0p247 :001 > ^C\n2.0.0p247 :001 >\n```\n. This seems to be fixed in the current version (maybe due to new ruby or rails):\n\n```\n\u279c  app $  zeus c                                       \nLoading development environment (Rails 4.0.0)\n2.0.0p247 :001 > ^C\n2.0.0p247 :001 >\n```\n. ",
    "nicholasrq": "Same bug here. Any progress on this issue?\n\n```\nRails 4.0.1\nruby 2.0.0p247 (2013-06-27 revision 41674) [x86_64-darwin13.0.0]\nZeus version 0.13.3.rc2\n```\n. Same bug here. Any progress on this issue?\n\n```\nRails 4.0.1\nruby 2.0.0p247 (2013-06-27 revision 41674) [x86_64-darwin13.0.0]\nZeus version 0.13.3.rc2\n```\n. ",
    "rosenfeld": "Try `zeus test test`. I have the same issue and I use RSpec instead of Test::Unit. In my case I have to type `zeus test spec` (or `zeus rspec spec`). You have to pass-in the directory or file you want to test. That is the same behavior for the Spork gem. I never bothered trying to understand why this is needed as long as it works for me ;) But I confess I'm curious about it :)\n. This is insteresting, but `zeus rake` will run my specs but lots of them will fail with things like `uninitialized constant FactoryGirl`, `Failed to connect to a master node at mongodb:27018` among others... But `zeus rspec spec` works! Go figure it out...\n. @gamov I've just created a fresh Rails app to give it a try:\n\n```\nrails new zeustest; cd zeustest; rails g scaffold book; rake db:migrate; gem install zeus\nrake # tests run successfully\nzeus start\nzeus rake # tests run successfully as well\nzeus test # doesn't work\nzeus test test # doesn't work either\nzeus test test/functional # worked this time\n```\n\nBut for some reason I experienced some `broken pipe` errors sometimes. I'm testing this from my wife's notebook, which was installed with Debian 32bits long ago and I didn't bothered to reinstall using amd64 yet, so I'm not sure if the broken pipe issue is related to the different arch or to the Test::Unit tests...\n. Interesting... I've just tried with a similar app than above, but using RSpec instead of Test::Unit. For this app (differently from my actual app) `zeus rake` actually work and all tests pass. On the other hand weird things happen if I run with `zeus test spec`. All specs will pass but then the specs are re-run and this time all of them fail... Go figure it out... My specs don't run twice in my actual application but I'm not using latest RSpec in my actual app either. Also, I don't use AR, but Sequel in my actual app, so I'm not sure if that changes anything with regards to my specs and Zeus behavior...\n. It stopped running the second time with RSpec when I removed the 'rspec/autorun' require as suggested in #180.\n. Try `zeus test test`. I have the same issue and I use RSpec instead of Test::Unit. In my case I have to type `zeus test spec` (or `zeus rspec spec`). You have to pass-in the directory or file you want to test. That is the same behavior for the Spork gem. I never bothered trying to understand why this is needed as long as it works for me ;) But I confess I'm curious about it :)\n. This is insteresting, but `zeus rake` will run my specs but lots of them will fail with things like `uninitialized constant FactoryGirl`, `Failed to connect to a master node at mongodb:27018` among others... But `zeus rspec spec` works! Go figure it out...\n. @gamov I've just created a fresh Rails app to give it a try:\n\n```\nrails new zeustest; cd zeustest; rails g scaffold book; rake db:migrate; gem install zeus\nrake # tests run successfully\nzeus start\nzeus rake # tests run successfully as well\nzeus test # doesn't work\nzeus test test # doesn't work either\nzeus test test/functional # worked this time\n```\n\nBut for some reason I experienced some `broken pipe` errors sometimes. I'm testing this from my wife's notebook, which was installed with Debian 32bits long ago and I didn't bothered to reinstall using amd64 yet, so I'm not sure if the broken pipe issue is related to the different arch or to the Test::Unit tests...\n. Interesting... I've just tried with a similar app than above, but using RSpec instead of Test::Unit. For this app (differently from my actual app) `zeus rake` actually work and all tests pass. On the other hand weird things happen if I run with `zeus test spec`. All specs will pass but then the specs are re-run and this time all of them fail... Go figure it out... My specs don't run twice in my actual application but I'm not using latest RSpec in my actual app either. Also, I don't use AR, but Sequel in my actual app, so I'm not sure if that changes anything with regards to my specs and Zeus behavior...\n. It stopped running the second time with RSpec when I removed the 'rspec/autorun' require as suggested in #180.\n. ",
    "dwbutler": ":+1: This is pretty confusing. I expected `zeus rspec` to simply run rspec against the spec folder, and `zeus rake` to run the default rake task.\n. :+1: This is pretty confusing. I expected `zeus rspec` to simply run rspec against the spec folder, and `zeus rake` to run the default rake task.\n. ",
    "gamov": "mmmm, @rosenfeld I tried `zeus test test`, now zeus is trying to use minitest instead of test::unit:\n\n```\n/Users/gamov/.rvm/gems/ruby-1.9.3-p327@ector/gems/activesupport-3.0.17/lib/active_support/whiny_nil.rb:48:in `method_missing': undefined method `>' for nil:NilClass (NoMethodError)\n    from /Users/gamov/.rvm/gems/ruby-1.9.3-p327@ector/gems/minitest-2.12.1/lib/minitest/unit.rb:965:in `_run'\n    from /Users/gamov/.rvm/gems/ruby-1.9.3-p327@ector/gems/minitest-2.12.1/lib/minitest/unit.rb:949:in `run'\n    from /Users/gamov/.rvm/gems/ruby-1.9.3-p327@ector/gems/zeus-0.13.2/lib/zeus/m.rb:203:in `execute'\n```\n\nIt looks like zeus really hates test::unit ! :)\n. Tried zeus 0.13.3 with same error (zeus test test)  :o(\n. still no no for me (unit:test) but I've switched to minitest and everything works fine.\n. @pawlik Note that I load minitest via reporters so RubyMine can embed tests. Note that it works with Zeus outside RubyMine too.\nI remember that order in the Gemfile is important indeed. I only have \" gem 'minitest-reporters'\" defined.\nNo, I didn't have to define anything.\n\nMy test_helper is quite vanilla:\n\n``` ruby\n##Activate minitest for Rubymine\nrequire 'minitest/reporters' #requires minitest\nMiniTest::Reporters.use!\n\n\nENV[\"RAILS_ENV\"] = \"test\"\nrequire File.expand_path('../../config/environment', __FILE__)\nrequire 'rails/test_help'\n\n#begin\n#  require 'turn/autorun';\n#  Turn.config.format = :outline\n#rescue LoadError; end\n\nclass ActiveSupport::TestCase\n   fixtures :all\n    ...\nend\n```\n. mmmm, @rosenfeld I tried `zeus test test`, now zeus is trying to use minitest instead of test::unit:\n\n```\n/Users/gamov/.rvm/gems/ruby-1.9.3-p327@ector/gems/activesupport-3.0.17/lib/active_support/whiny_nil.rb:48:in `method_missing': undefined method `>' for nil:NilClass (NoMethodError)\n    from /Users/gamov/.rvm/gems/ruby-1.9.3-p327@ector/gems/minitest-2.12.1/lib/minitest/unit.rb:965:in `_run'\n    from /Users/gamov/.rvm/gems/ruby-1.9.3-p327@ector/gems/minitest-2.12.1/lib/minitest/unit.rb:949:in `run'\n    from /Users/gamov/.rvm/gems/ruby-1.9.3-p327@ector/gems/zeus-0.13.2/lib/zeus/m.rb:203:in `execute'\n```\n\nIt looks like zeus really hates test::unit ! :)\n. Tried zeus 0.13.3 with same error (zeus test test)  :o(\n. still no no for me (unit:test) but I've switched to minitest and everything works fine.\n. @pawlik Note that I load minitest via reporters so RubyMine can embed tests. Note that it works with Zeus outside RubyMine too.\nI remember that order in the Gemfile is important indeed. I only have \" gem 'minitest-reporters'\" defined.\nNo, I didn't have to define anything.\n\nMy test_helper is quite vanilla:\n\n``` ruby\n##Activate minitest for Rubymine\nrequire 'minitest/reporters' #requires minitest\nMiniTest::Reporters.use!\n\n\nENV[\"RAILS_ENV\"] = \"test\"\nrequire File.expand_path('../../config/environment', __FILE__)\nrequire 'rails/test_help'\n\n#begin\n#  require 'turn/autorun';\n#  Turn.config.format = :outline\n#rescue LoadError; end\n\nclass ActiveSupport::TestCase\n   fixtures :all\n    ...\nend\n```\n. ",
    "amree": "I'm using:\n- Rails 3.2.9\n- zeus 0.13.2\n\nSeems to be not working for me:\n\n```\n$ zeus rake\nzeus test \"test/unit/**/*_test.rb\"\nRun options: --seed 9268\n\n# Running tests:\n\n............................................................................\n\nFinished tests in 1.953454s, 38.9054 tests/s, 40.9531 assertions/s.\n\n76 tests, 80 assertions, 0 failures, 0 errors, 0 skips\nzeus test \"test/functional/**/*_test.rb\"\nRun options: --seed 63416\n\n# Running tests:\n\n.........................................................\n\nFinished tests in 3.236595s, 17.6111 tests/s, 31.5146 assertions/s.\n\n57 tests, 102 assertions, 0 failures, 0 errors, 0 skips\nzeus test \"test/integration/**/*_test.rb\"\nCouldn't find test file 'test/integration/**/*_test.rb'!\n$ zeus test test\nRun options: --seed 27737\n\n# Running tests:\n\n.....................................................................................................................................\n\nFinished tests in 4.359570s, 30.5076 tests/s, 41.7472 assertions/s.\n\n133 tests, 182 assertions, 0 failures, 0 errors, 0 skips\n$ zeus test\n/Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus/rails.rb:210:in `spec_file?': undefined method `match' for nil:NilClass (NoMethodError)\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus/rails.rb:185:in `test'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:105:in `block in command'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:92:in `fork'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:92:in `command'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:69:in `block (3 levels) in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:69:in `fork'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:69:in `block (2 levels) in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:63:in `each'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:63:in `block in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:61:in `loop'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:61:in `go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:67:in `fork'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:63:in `each'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:63:in `block in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:61:in `loop'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:61:in `go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:67:in `fork'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:63:in `each'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:63:in `block in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:61:in `loop'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:61:in `go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:67:in `fork'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:63:in `each'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:63:in `block in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:61:in `loop'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:61:in `go'\n    from -e:1:in `<main>'\n\n```\n. I'm using:\n- Rails 3.2.9\n- zeus 0.13.2\n\nSeems to be not working for me:\n\n```\n$ zeus rake\nzeus test \"test/unit/**/*_test.rb\"\nRun options: --seed 9268\n\n# Running tests:\n\n............................................................................\n\nFinished tests in 1.953454s, 38.9054 tests/s, 40.9531 assertions/s.\n\n76 tests, 80 assertions, 0 failures, 0 errors, 0 skips\nzeus test \"test/functional/**/*_test.rb\"\nRun options: --seed 63416\n\n# Running tests:\n\n.........................................................\n\nFinished tests in 3.236595s, 17.6111 tests/s, 31.5146 assertions/s.\n\n57 tests, 102 assertions, 0 failures, 0 errors, 0 skips\nzeus test \"test/integration/**/*_test.rb\"\nCouldn't find test file 'test/integration/**/*_test.rb'!\n$ zeus test test\nRun options: --seed 27737\n\n# Running tests:\n\n.....................................................................................................................................\n\nFinished tests in 4.359570s, 30.5076 tests/s, 41.7472 assertions/s.\n\n133 tests, 182 assertions, 0 failures, 0 errors, 0 skips\n$ zeus test\n/Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus/rails.rb:210:in `spec_file?': undefined method `match' for nil:NilClass (NoMethodError)\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus/rails.rb:185:in `test'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:105:in `block in command'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:92:in `fork'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:92:in `command'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:69:in `block (3 levels) in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:69:in `fork'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:69:in `block (2 levels) in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:63:in `each'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:63:in `block in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:61:in `loop'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:61:in `go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:67:in `fork'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:63:in `each'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:63:in `block in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:61:in `loop'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:61:in `go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:67:in `fork'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:63:in `each'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:63:in `block in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:61:in `loop'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:61:in `go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:67:in `fork'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:63:in `each'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:63:in `block in go'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:61:in `loop'\n    from /Users/amree/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/zeus-0.13.2/lib/zeus.rb:61:in `go'\n    from -e:1:in `<main>'\n\n```\n. ",
    "Emerson": "Just to chime in here - I am also using plain old Test::Unit and having issues with tests failing. Running `rake test` complains with:\n\n```\nzeus-0.13.2/lib/zeus/rails.rb:210:in `spec_file?': undefined method `match' for nil:NilClass (NoMethodError)`\n```\n\nI'm not using any specs.\n\nRunning `zeus rake` runs my tests, but fails on some of my functionals. A few examples of these failing tests:\n\n```\ntest_get_index(Admin::CompaniesControllerTest):\nNoMethodError: undefined method `request=' for #<Admin::CompaniesController:0x007fd72731fc58>\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/actionpack-3.2.11/lib/action_controller/test_case.rb:490:in `setup_controller_request_and_response'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:418:in `_run__3268524071855835964__setup__3932835591712007662__callbacks'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:405:in `__run_callback'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:385:in `_run_setup_callbacks'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:81:in `run_callbacks'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/testing/setup_and_teardown.rb:35:in `run'\n\n\ntest_ban(Admin::UsersControllerTest):\nNoMethodError: undefined method `before_filter' for Admin::UsersController:Class\n    /Users/Emerson/Rails/omx/app/controllers/admin/users_controller.rb:2:in `<class:UsersController>'\n    /Users/Emerson/Rails/omx/app/controllers/admin/users_controller.rb:1:in `<top (required)>'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:251:in `require'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:251:in `block in require'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:236:in `load_dependency'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:251:in `require'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:359:in `require_or_load'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:502:in `load_missing_constant'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:192:in `block in const_missing'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:190:in `each'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:190:in `const_missing'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/inflector/methods.rb:230:in `block in constantize'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/inflector/methods.rb:229:in `each'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/inflector/methods.rb:229:in `constantize'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/inflector/methods.rb:260:in `safe_constantize'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/core_ext/string/inflections.rb:66:in `safe_constantize'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/actionpack-3.2.11/lib/action_controller/test_case.rb:379:in `determine_default_controller_class'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/actionpack-3.2.11/lib/action_controller/test_case.rb:374:in `controller_class'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/actionpack-3.2.11/lib/action_controller/test_case.rb:483:in `setup_controller_request_and_response'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:418:in `_run__690472650567597172__setup__3932835591712007662__callbacks'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:405:in `__run_callback'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:385:in `_run_setup_callbacks'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:81:in `run_callbacks'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/testing/setup_and_teardown.rb:35:in `run'\n\n```\n. Tried to test this out by installing zeus again on a current project, but I've been unable to get things working (just the standard zeus gem, not this particular patch). Maybe someone else will have better luck?\n. Just to chime in here - I am also using plain old Test::Unit and having issues with tests failing. Running `rake test` complains with:\n\n```\nzeus-0.13.2/lib/zeus/rails.rb:210:in `spec_file?': undefined method `match' for nil:NilClass (NoMethodError)`\n```\n\nI'm not using any specs.\n\nRunning `zeus rake` runs my tests, but fails on some of my functionals. A few examples of these failing tests:\n\n```\ntest_get_index(Admin::CompaniesControllerTest):\nNoMethodError: undefined method `request=' for #<Admin::CompaniesController:0x007fd72731fc58>\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/actionpack-3.2.11/lib/action_controller/test_case.rb:490:in `setup_controller_request_and_response'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:418:in `_run__3268524071855835964__setup__3932835591712007662__callbacks'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:405:in `__run_callback'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:385:in `_run_setup_callbacks'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:81:in `run_callbacks'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/testing/setup_and_teardown.rb:35:in `run'\n\n\ntest_ban(Admin::UsersControllerTest):\nNoMethodError: undefined method `before_filter' for Admin::UsersController:Class\n    /Users/Emerson/Rails/omx/app/controllers/admin/users_controller.rb:2:in `<class:UsersController>'\n    /Users/Emerson/Rails/omx/app/controllers/admin/users_controller.rb:1:in `<top (required)>'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:251:in `require'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:251:in `block in require'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:236:in `load_dependency'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:251:in `require'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:359:in `require_or_load'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:502:in `load_missing_constant'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:192:in `block in const_missing'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:190:in `each'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:190:in `const_missing'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/inflector/methods.rb:230:in `block in constantize'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/inflector/methods.rb:229:in `each'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/inflector/methods.rb:229:in `constantize'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/inflector/methods.rb:260:in `safe_constantize'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/core_ext/string/inflections.rb:66:in `safe_constantize'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/actionpack-3.2.11/lib/action_controller/test_case.rb:379:in `determine_default_controller_class'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/actionpack-3.2.11/lib/action_controller/test_case.rb:374:in `controller_class'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/actionpack-3.2.11/lib/action_controller/test_case.rb:483:in `setup_controller_request_and_response'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:418:in `_run__690472650567597172__setup__3932835591712007662__callbacks'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:405:in `__run_callback'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:385:in `_run_setup_callbacks'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:81:in `run_callbacks'\n    /Users/Emerson/.rvm/gems/ruby-1.9.3-p362@omx/gems/activesupport-3.2.11/lib/active_support/testing/setup_and_teardown.rb:35:in `run'\n\n```\n. Tried to test this out by installing zeus again on a current project, but I've been unable to get things working (just the standard zeus gem, not this particular patch). Maybe someone else will have better luck?\n. ",
    "i8ramin": "FYI, running `zeus rspec spec` worked for me.\n. FYI, running `zeus rspec spec` worked for me.\n. ",
    "pawlik": "@gamov did you have to define assert_false for MiniTest::Assertions? I have problem with this after switching to minitest. And it seems like a strange issue... mayme I'm loading in in a wrong order? Could you provide test_helper.rb wich is working for you?\n. @gamov thank you. I have also shoulda and mocha required in that test and I have a feeling that one of those is in a wrong place. But can't figure out which one. But just reimplementing assert_false did the trick for me (I'll add it for anyone having same problem)\n\n```\nmodule MiniTest::Assertions\n  include ActiveSupport::Deprecation\n  alias_method :assert_false, :refute\n  deprecate :assert_false => 'monkeypatch to use Mintest suite, use refute instead of assert_false'\nend\n```\n. @gamov did you have to define assert_false for MiniTest::Assertions? I have problem with this after switching to minitest. And it seems like a strange issue... mayme I'm loading in in a wrong order? Could you provide test_helper.rb wich is working for you?\n. @gamov thank you. I have also shoulda and mocha required in that test and I have a feeling that one of those is in a wrong place. But can't figure out which one. But just reimplementing assert_false did the trick for me (I'll add it for anyone having same problem)\n\n```\nmodule MiniTest::Assertions\n  include ActiveSupport::Deprecation\n  alias_method :assert_false, :refute\n  deprecate :assert_false => 'monkeypatch to use Mintest suite, use refute instead of assert_false'\nend\n```\n. ",
    "elado": "I just had it now again.\n\n![screen shot 2013-05-24 at 4 34 35 pm](https://f.cloud.github.com/assets/51488/563286/d892b516-c4ca-11e2-8c3f-e157e8c8a0f6.png)\n\nZeus version 0.13.3.rc2\n\nzeus.json:\n\n``` json\n{\n  \"command\": \"ruby -rubygems -r./custom_plan -eZeus.go\",\n\n  \"plan\": {\n    \"boot\": {\n      \"default_bundle\": {\n        \"development_environment\": {\n          \"prerake\": {\"rake\": []},\n          \"runner\": [\"r\"],\n          \"console\": [\"c\"],\n          \"server\": [\"s\"],\n          \"generate\": [\"g\"],\n          \"destroy\": [\"d\"],\n          \"dbconsole\": []\n        },\n        \"test_environment\": {\n          \"test_helper\": {\"test\": [\"rspec\"]}\n        }\n      }\n    }\n  }\n}\n```\n. I just had it now again.\n\n![screen shot 2013-05-24 at 4 34 35 pm](https://f.cloud.github.com/assets/51488/563286/d892b516-c4ca-11e2-8c3f-e157e8c8a0f6.png)\n\nZeus version 0.13.3.rc2\n\nzeus.json:\n\n``` json\n{\n  \"command\": \"ruby -rubygems -r./custom_plan -eZeus.go\",\n\n  \"plan\": {\n    \"boot\": {\n      \"default_bundle\": {\n        \"development_environment\": {\n          \"prerake\": {\"rake\": []},\n          \"runner\": [\"r\"],\n          \"console\": [\"c\"],\n          \"server\": [\"s\"],\n          \"generate\": [\"g\"],\n          \"destroy\": [\"d\"],\n          \"dbconsole\": []\n        },\n        \"test_environment\": {\n          \"test_helper\": {\"test\": [\"rspec\"]}\n        }\n      }\n    }\n  }\n}\n```\n. ",
    "dpickett": "I'm normally not a fan of catch all exceptions, but 4009bf3 solves the problem I was having. I'm going to close this ticket, thanks!\n. I'm normally not a fan of catch all exceptions, but 4009bf3 solves the problem I was having. I'm going to close this ticket, thanks!\n. ",
    "DanielWright": "+1 \n\nThis definitely had me stumped. Only my finely-honed \"check the GH Issues\" sense saved me more than a few minutes of confusion.\n. +1 \n\nThis definitely had me stumped. Only my finely-honed \"check the GH Issues\" sense saved me more than a few minutes of confusion.\n. ",
    "mdarby": "I am seeing this as well. Same setup with vanilla RSpec. Rails 3.2.10\n. I am seeing this as well. Same setup with vanilla RSpec. Rails 3.2.10\n. ",
    "w-A-L-L-e": "We got the same issue. Will try your fix.\n. We got the same issue. Will try your fix.\n. ",
    "luxflux": "Any news on this? Just ran into this as well...\n. Any news on this? Just ran into this as well...\n. ",
    "btelles": "FWIW, I've also encountered this problem as soon as I tried using Zeus. With plain ole' Rspec, the tests run fine.\n\nAs soon as I removed `require 'rspec/autorun'` from `spec/spec_helper.rb` the tests began running once, and cleanly on each run. Problem solved.\n. FWIW, I've also encountered this problem as soon as I tried using Zeus. With plain ole' Rspec, the tests run fine.\n\nAs soon as I removed `require 'rspec/autorun'` from `spec/spec_helper.rb` the tests began running once, and cleanly on each run. Problem solved.\n. ",
    "andresclari": "Just run into this issue, and @btelles solution solves the issue for me too.\n. Just run into this issue, and @btelles solution solves the issue for me too.\n. ",
    "gdelfino": "Thank you @btelles, that solved my problem too.\n. Thank you @btelles, that solved my problem too.\n. ",
    "aake": "I get exact same error on a CentOS VM starting up Zeus from a VMware shared folder on OSX. \n. I get exact same error on a CentOS VM starting up Zeus from a VMware shared folder on OSX. \n. ",
    "semmons99": "~~I'm experiencing the same issue with vagrant on OSX, but not using a shared folder.~~\n\nFixed by fixing my `custom_plan.rb`\n. ~~I'm experiencing the same issue with vagrant on OSX, but not using a shared folder.~~\n\nFixed by fixing my `custom_plan.rb`\n. ",
    "lekima": "I get the same error on Ubuntu Lucid32 using Vagrant.\n. I have the same issue using RSpec 2.13.1 and Capybara 2.1.0 beta1.\n\nAny solution on this yet?\n. I get the same error on Ubuntu Lucid32 using Vagrant.\n. I have the same issue using RSpec 2.13.1 and Capybara 2.1.0 beta1.\n\nAny solution on this yet?\n. ",
    "avit": "The problem might be that it's unable to create its socket file under a shared folder.\n\nUsing jonleighton/spring instead of zeus, I was able to edit the tmp_path from \"tmp/spring\" to \"/tmp/spring\" and that allowed the socket file to be created. Could be a similar problem here?\n. @saimonmoore, @mcmoyer, thank you. I was actually sharing to `/srv/project/current` via `nfs: true`, but then I was trying to launch zeus from the default `/vagrant`. I am a :frog:.\n. Also, NFS doesn't seem to be as immediate with synching file changes into the VM. Even without Zeus, I can re-run a rails test from scratch and it will see old file contents. Wait a few seconds, and it sees the new file contents...\n. The problem might be that it's unable to create its socket file under a shared folder.\n\nUsing jonleighton/spring instead of zeus, I was able to edit the tmp_path from \"tmp/spring\" to \"/tmp/spring\" and that allowed the socket file to be created. Could be a similar problem here?\n. @saimonmoore, @mcmoyer, thank you. I was actually sharing to `/srv/project/current` via `nfs: true`, but then I was trying to launch zeus from the default `/vagrant`. I am a :frog:.\n. Also, NFS doesn't seem to be as immediate with synching file changes into the VM. Even without Zeus, I can re-run a rails test from scratch and it will see old file contents. Wait a few seconds, and it sees the new file contents...\n. ",
    "saimonmoore": "FYI: I use zeus in an nfs share in VirtualBox vm (vagrant) and works fine there.\n. FYI: I use zeus in an nfs share in VirtualBox vm (vagrant) and works fine there.\n. ",
    "tpendragon": "That's a neat workaround, but unfortunately I can't use nfs shares from a windows host. I like the idea of changing the directory where the socket file is created, though.\n. @mcmoyer, No I haven't, but that's a lot of trouble to share a folder, so even if it works I wouldn't go that route.\n. That's a neat workaround, but unfortunately I can't use nfs shares from a windows host. I like the idea of changing the directory where the socket file is created, though.\n. @mcmoyer, No I haven't, but that's a lot of trouble to share a folder, so even if it works I wouldn't go that route.\n. ",
    "wojtha": "I have the same issue, running the VBox guest inside the Win7 host. I've tried to hack Zeus and replace `.zeus.sock` with `/tmp/.zeus.sock` as suggested by @avit (he was able to trick Spring in a similar way). After hours of exploring how to compile Zeus on Xubuntu properly I finally run the `zeus start` but he crashed immidiatelly with \n\n```\nThe FS watcher process crashed: exec: not started\nThe FS watcher process crashed: exec: not started\npanic: runtime error: invalid memory address or nil pointer dereference\n```\n\nMy changes:\n\n**clienthandler.go**\n\n``` go\nconst zeusSockName string = \"/tmp/.zeus.sock\"\n```\n\n**zeusclient.go**\n\n``` go\n    zeusSockName = \"/tmp/.zeus.sock\"\n```\n\nIt would be nice if zeusSockName could be confirugable. But I have no experience with Go... (except this one)\n. As a workaround I've moved the apps folder outside the shared folder and tried to do a syncing it. First I tried to do some automated syncing using inotify and rsync, as described eg. here: http://senko.net/en/linux-auto-rsync/. However this do not work, because Virtualbox [doesn't support tools such inotify](https://www.virtualbox.org/ticket/10660).\n\nI ended up using [WinSCP](http://winscp.net/eng/index.php) which has nice auto-syncing feature. So now I'm syncing to the VirtualBox via SFTP, completely avoiding the shared folder. Not nice, but at least something!\n. Woohoo! :clap: \n. This seems to be fixed, Zeus is restartig \"test\" environment when detects change in factories.\n. Yeah, I went to this too.\n\nHaving `gem 'json', '~> 1.8.0'` in the Gemfile:\n\n```\n$ zeus c\nLoading development environment (Rails 3.2.13)\n[1] pry(main)> JSON::VERSION\n=> \"1.5.4\"\n$ bundle exec rails c\nLoading development environment (Rails 3.2.13)\n[1] pry(main)> JSON::VERSION\n=> \"1.8.0\"\n$ bundle exec zeus start\n$ bundle exec zeus c\nLoading development environment (Rails 3.2.13)\n[1] pry(main)> JSON::VERSION\n=> \"1.5.4\"\n```\n\nSee https://github.com/intridea/multi_json/issues/116#issuecomment-18674043 for more details.\n. I'm having similar issue with 'json_spec' and 'json_expressions' gems. They work when running the specs under pure RSpec, but they don't work when running as _zeus test spec_, getting unitialized constant error as well.\n\nThere might be some relation to #411 \n. I'm actually getting also weird behavior (loading gems by using require in spec_helper.rb works with plain RSpec but doesn't work with Zeus), that might be the root of the my issue!?\n\n```\n~/www/portal (development)$ zeus --version\nZeus version 0.13.3.rc2\n~/www/portal (development)$ zeus rspec --v\nm 1.2.1\n~/www/portal (development)$ bundle exec rspec --v\n2.14.5\n```\n. I have the same issue, running the VBox guest inside the Win7 host. I've tried to hack Zeus and replace `.zeus.sock` with `/tmp/.zeus.sock` as suggested by @avit (he was able to trick Spring in a similar way). After hours of exploring how to compile Zeus on Xubuntu properly I finally run the `zeus start` but he crashed immidiatelly with \n\n```\nThe FS watcher process crashed: exec: not started\nThe FS watcher process crashed: exec: not started\npanic: runtime error: invalid memory address or nil pointer dereference\n```\n\nMy changes:\n\n**clienthandler.go**\n\n``` go\nconst zeusSockName string = \"/tmp/.zeus.sock\"\n```\n\n**zeusclient.go**\n\n``` go\n    zeusSockName = \"/tmp/.zeus.sock\"\n```\n\nIt would be nice if zeusSockName could be confirugable. But I have no experience with Go... (except this one)\n. As a workaround I've moved the apps folder outside the shared folder and tried to do a syncing it. First I tried to do some automated syncing using inotify and rsync, as described eg. here: http://senko.net/en/linux-auto-rsync/. However this do not work, because Virtualbox [doesn't support tools such inotify](https://www.virtualbox.org/ticket/10660).\n\nI ended up using [WinSCP](http://winscp.net/eng/index.php) which has nice auto-syncing feature. So now I'm syncing to the VirtualBox via SFTP, completely avoiding the shared folder. Not nice, but at least something!\n. Woohoo! :clap: \n. This seems to be fixed, Zeus is restartig \"test\" environment when detects change in factories.\n. Yeah, I went to this too.\n\nHaving `gem 'json', '~> 1.8.0'` in the Gemfile:\n\n```\n$ zeus c\nLoading development environment (Rails 3.2.13)\n[1] pry(main)> JSON::VERSION\n=> \"1.5.4\"\n$ bundle exec rails c\nLoading development environment (Rails 3.2.13)\n[1] pry(main)> JSON::VERSION\n=> \"1.8.0\"\n$ bundle exec zeus start\n$ bundle exec zeus c\nLoading development environment (Rails 3.2.13)\n[1] pry(main)> JSON::VERSION\n=> \"1.5.4\"\n```\n\nSee https://github.com/intridea/multi_json/issues/116#issuecomment-18674043 for more details.\n. I'm having similar issue with 'json_spec' and 'json_expressions' gems. They work when running the specs under pure RSpec, but they don't work when running as _zeus test spec_, getting unitialized constant error as well.\n\nThere might be some relation to #411 \n. I'm actually getting also weird behavior (loading gems by using require in spec_helper.rb works with plain RSpec but doesn't work with Zeus), that might be the root of the my issue!?\n\n```\n~/www/portal (development)$ zeus --version\nZeus version 0.13.3.rc2\n~/www/portal (development)$ zeus rspec --v\nm 1.2.1\n~/www/portal (development)$ bundle exec rspec --v\n2.14.5\n```\n. ",
    "inkstak": "Got the same problem.\n. I also tried with `0.13.2`, with or without `bundle exec`.\n. Got the same problem.\n. I also tried with `0.13.2`, with or without `bundle exec`.\n. ",
    "wakiki": "I'm having the same problem and I'm using Rails 3.2.13 and Zeus 0.13.3\n. I'm having the same problem and I'm using Rails 3.2.13 and Zeus 0.13.3\n. ",
    "nathany": "Same problem, using Zeus 0.13.3 with Rails 4.0.5 and newrelic_rpm (3.8.1.221).\n\nZeus Parallel Tests is holding us at an older version of Zeus: https://rubygems.org/gems/zeus-parallel_tests\n. Upgrading from zeus 0.13.3 to 0.15.1 results in a hang for me:\n\nwith `exit status 1`\n\nhow to debug?\n. We're not using any VMs or ssh here, just running on OS X 10.9.3. There may be some relation to using parallel_tests: https://github.com/sevos/zeus-parallel_tests/issues/23\n. From our side, we stopped using zeus-parallel_tests. Zeus is working fine by itself, at least for us.\n. Same problem, using Zeus 0.13.3 with Rails 4.0.5 and newrelic_rpm (3.8.1.221).\n\nZeus Parallel Tests is holding us at an older version of Zeus: https://rubygems.org/gems/zeus-parallel_tests\n. Upgrading from zeus 0.13.3 to 0.15.1 results in a hang for me:\n\nwith `exit status 1`\n\nhow to debug?\n. We're not using any VMs or ssh here, just running on OS X 10.9.3. There may be some relation to using parallel_tests: https://github.com/sevos/zeus-parallel_tests/issues/23\n. From our side, we stopped using zeus-parallel_tests. Zeus is working fine by itself, at least for us.\n. ",
    "jamiew": "What version of the gem are you using? This failed for me in 0.13.1, but works fine in 0.13.2\n. What version of the gem are you using? This failed for me in 0.13.1, but works fine in 0.13.2\n. ",
    "damrbaby": "I have the same problem.  rspec 2.12.0 and zeus 0.13.2\n\nUsing the -l option always results in:\n\n```\nzeus rspec spec/models/user_spec.rb -l14\nNo tests found on line 14. Valid tests to run:\n```\n\nWhereas this works fine:\n\n```\nzeus rspec spec/models/user_spec.rb:14\nRun options: include {:locations=>{\"./spec/models/user_spec.rb\"=>[14]}}\n.\n\nFinished in 0.10181 seconds\n1 example, 0 failures\n```\n. I have the same problem.  rspec 2.12.0 and zeus 0.13.2\n\nUsing the -l option always results in:\n\n```\nzeus rspec spec/models/user_spec.rb -l14\nNo tests found on line 14. Valid tests to run:\n```\n\nWhereas this works fine:\n\n```\nzeus rspec spec/models/user_spec.rb:14\nRun options: include {:locations=>{\"./spec/models/user_spec.rb\"=>[14]}}\n.\n\nFinished in 0.10181 seconds\n1 example, 0 failures\n```\n. ",
    "kainosnoema": "@turadg left a comment on commit [d5a2302](https://github.com/burke/zeus/commit/d5a2302ff1bfd0c70cc99f0971d5831942197d69#commitcomment-2492759) about a possible problem area in the code.\n\nIt looks like the colon notation was fixed with 0.13.2, but the `--line` option is broken now instead. \n0.13.1:\n\n```\n$ zeus rspec spec/models/account_spec.rb --line 25\nRun filtered including {:line_number=>25}\n.\n\nFinished in 0.52805 seconds\n1 example, 0 failures\n```\n\n```\n$ zeus rspec spec/models/account_spec.rb:25\nNo tests found on line 25. Valid tests to run:\n```\n\n0.13.2:\n\n```\n$ zeus rspec spec/models/account_spec.rb:25\nRun filtered including {:line_number=>25}\n.\n\nFinished in 0.52805 seconds\n1 example, 0 failures\n```\n\n```\n$ zeus rspec spec/models/account_spec.rb --line 25\nNo tests found on line 25. Valid tests to run:\n```\n. @turadg left a comment on commit [d5a2302](https://github.com/burke/zeus/commit/d5a2302ff1bfd0c70cc99f0971d5831942197d69#commitcomment-2492759) about a possible problem area in the code.\n\nIt looks like the colon notation was fixed with 0.13.2, but the `--line` option is broken now instead. \n0.13.1:\n\n```\n$ zeus rspec spec/models/account_spec.rb --line 25\nRun filtered including {:line_number=>25}\n.\n\nFinished in 0.52805 seconds\n1 example, 0 failures\n```\n\n```\n$ zeus rspec spec/models/account_spec.rb:25\nNo tests found on line 25. Valid tests to run:\n```\n\n0.13.2:\n\n```\n$ zeus rspec spec/models/account_spec.rb:25\nRun filtered including {:line_number=>25}\n.\n\nFinished in 0.52805 seconds\n1 example, 0 failures\n```\n\n```\n$ zeus rspec spec/models/account_spec.rb --line 25\nNo tests found on line 25. Valid tests to run:\n```\n. ",
    "linojon": "same here.\n\n$ zeus rspec spec -t ~slow -t ~long\n/Users/jlinowes/.rvm/gems/ruby-1.9.3-p125/gems/zeus-0.13.1/lib/zeus/m.rb:188:in `block in parse_options!': invalid option: -t (OptionParser::InvalidOption)\n. same here.\n\n$ zeus rspec spec -t ~slow -t ~long\n/Users/jlinowes/.rvm/gems/ruby-1.9.3-p125/gems/zeus-0.13.1/lib/zeus/m.rb:188:in `block in parse_options!': invalid option: -t (OptionParser::InvalidOption)\n. ",
    "mwean": "I'm getting the same invalid option error for -f and --format. I'm using guard, and when the specs are run a second time, I get the error. It seems like the options that are meant for rspec are being caught by zeus instead.\n. I think I understand why this is happening. I can't be sure, because I can't get the gem to build locally, but it looks like it's caused by the logic for whether or not to use RSpec. In ``rubygem/lib/zeus/rails.rb:206`:\n\n``` ruby\nSPEC_DIR_REGEXP = /^spec/\nSPEC_FILE_REGEXP = /.+_spec\\.rb$/\ndef spec_file? argv\n  last_arg = argv[-1]\n  last_arg.match (Regexp.union(SPEC_DIR_REGEXP, SPEC_FILE_REGEXP))\nend\n```\n\nIn the case of passing tags and other options, the last arg won't match the regexs. It also doesn't work if you run a spec with a line number and a full path `zeus rspec some/dir/spec/some_spec.rb:30` I'm not sure about all the edge cases, but I think this could be fixed by replacing the `#spec_file?` method with `argv.any? { |arg| arg == 'rspec' }` If there are times where you'd want rspec without actually using the rspec command, I can think of something more advanced.\n\nI think these other issues are related to this too: #234 &  #242\n. I'm getting the same invalid option error for -f and --format. I'm using guard, and when the specs are run a second time, I get the error. It seems like the options that are meant for rspec are being caught by zeus instead.\n. I think I understand why this is happening. I can't be sure, because I can't get the gem to build locally, but it looks like it's caused by the logic for whether or not to use RSpec. In ``rubygem/lib/zeus/rails.rb:206`:\n\n``` ruby\nSPEC_DIR_REGEXP = /^spec/\nSPEC_FILE_REGEXP = /.+_spec\\.rb$/\ndef spec_file? argv\n  last_arg = argv[-1]\n  last_arg.match (Regexp.union(SPEC_DIR_REGEXP, SPEC_FILE_REGEXP))\nend\n```\n\nIn the case of passing tags and other options, the last arg won't match the regexs. It also doesn't work if you run a spec with a line number and a full path `zeus rspec some/dir/spec/some_spec.rb:30` I'm not sure about all the edge cases, but I think this could be fixed by replacing the `#spec_file?` method with `argv.any? { |arg| arg == 'rspec' }` If there are times where you'd want rspec without actually using the rspec command, I can think of something more advanced.\n\nI think these other issues are related to this too: #234 &  #242\n. ",
    "calebwoods": "I am also seeing the same exception (OptionParser::InvalidOption) when adding the example option as follows.\n\n``` bash\nzeus rspec spec/my_spec_file_spec.rb --example \"specific example name\"\n```\n\nHowever when formatted like the following it works\n\n``` bash\nzeus rspec --example \"specific example name\" spec/my_spec_file_spec.rb \n```\n\nTested on version 0.13.2.  My first example still works fine in 0.12.0.\n\nThe most robust solution would seem to be running the Regex on all args such as the following\n\n``` ruby\nSPEC_DIR_REGEXP = /^spec/\nSPEC_FILE_REGEXP = /.+_spec\\.rb$/\ndef spec_file? argv\n  matches = argv.select do |arg|\n    arg.match (Regexp.union(SPEC_DIR_REGEXP, SPEC_FILE_REGEXP))\n  end\n  matches.size > 0\nend\n```\n\nThis would allow the use of the zeus test method like\n\n``` bash\nzeus test -spec/my_spec_file_spec.rb -example \"specific example name\" \n```\n. I am also seeing the same exception (OptionParser::InvalidOption) when adding the example option as follows.\n\n``` bash\nzeus rspec spec/my_spec_file_spec.rb --example \"specific example name\"\n```\n\nHowever when formatted like the following it works\n\n``` bash\nzeus rspec --example \"specific example name\" spec/my_spec_file_spec.rb \n```\n\nTested on version 0.13.2.  My first example still works fine in 0.12.0.\n\nThe most robust solution would seem to be running the Regex on all args such as the following\n\n``` ruby\nSPEC_DIR_REGEXP = /^spec/\nSPEC_FILE_REGEXP = /.+_spec\\.rb$/\ndef spec_file? argv\n  matches = argv.select do |arg|\n    arg.match (Regexp.union(SPEC_DIR_REGEXP, SPEC_FILE_REGEXP))\n  end\n  matches.size > 0\nend\n```\n\nThis would allow the use of the zeus test method like\n\n``` bash\nzeus test -spec/my_spec_file_spec.rb -example \"specific example name\" \n```\n. ",
    "jaywengrow": "+1 - I'm also having the same exact issue.\n. +1 - I'm also having the same exact issue.\n. ",
    "mattgoldman": "+1 same issue\n. Was able to get past this by moving the tag in front of \"spec\" like so:\n\n```\nzeus rspec --tag current spec\n```\n. +1 same issue\n. Was able to get past this by moving the tag in front of \"spec\" like so:\n\n```\nzeus rspec --tag current spec\n```\n. ",
    "priyakanth024": "@mattgoldman's solution works. Thank you @mattgoldman \n. @mattgoldman's solution works. Thank you @mattgoldman \n. ",
    "TylerRick": "Same problem here: Expected to be able to pass the same options to zeus rspec as I'm used to passing to rspec, such as -e (--example), but ran into this error.\n\nFound this ticket and used @mattgoldman's ~~solution~~workaround but would still love to see this fixed...\n. I started getting this (same except for version number) error too after upgrading to Ruby 2.1.0:\n\n```\nYou have already activated json 1.8.1, but your Gemfile requires json 1.7.7. Prepending `bundle exec` to your command may solve this. (Gem::LoadError)\n```\n\nI wasn't able to just `bundle update json` (without a lot of work) because I have older gems that list <= 1.7.7 as a dependency.\n\nThe only thing that worked for me was to uninstall the newer 1.8.1 version.  Unfortunately even that was made difficult by the fact that it is considered a \"default\" gem.  Blah.\n\n```\ngem list -d json\n*** LOCAL GEMS ***\n\njson (1.8.1, 1.7.7)\n    Author: \n    Installed at (1.8.1, default): /home/...\n                 (1.7.7): /home/...\n\n    This json is bundled with Ruby\n```\n\nFinally was able to get it to not be loaded by deleting this file:\n\n```\nrm ~/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/specifications/default/json-1.8.1.gemspec\n```\n\nHopefully that won't break anything else for me...\n. When I try it again, I sometimes get this error message instead:\n\n```\nThe FS watcher process crashed: signal: aborted (core dumped)\nThe FS watcher process crashed: signal: aborted (core dumped)\n```\n\nI then notice that some zeus processes are still running so I kill them with\n`psgrep  zeus | awk '{ print $2 }' | xargs kill`\nand try again and get the original error again.\n. I've tried uninstalling the zeus gem and then re-installing each older version back to 0.13.4.pre2 and it still gives the same error (`runtime error: invalid memory address or nil pointer dereference`) so it appears that the zeus version doesn't make a difference.  The only variable that should have changed, then, is the Ruby version, from 2.1 to 2.2.\n. Update: Since upgrading to Ruby 2.2, I can't even start the app with a regular `rails c`.  I guess I shouldn't expect `zeus start` to work if I can't even start the app without zeus.  I will update this issue if the zeus issue still exists after resolving these other dependency issues...\n\n(Current error is:\n`/home/tyler/.rvm/rubies/ruby-2.2.0/bin/ruby: symbol lookup error: .../extensions/x86_64-linux/2.2.0/pg-0.14.1/pg_ext.so: undefined symbol: rb_thread_select`)\n. Yep, re-installing pg gem solved that error, and I finally got the app to start using `rails s` and `rails c`.  So back to zeus...  \n\nStill giving this error when I try to start it:\n\n```\nThe FS watcher process crashed: signal: aborted (core dumped)\nThe FS watcher process crashed: signal: aborted (core dumped)\n```\n\nI guess I should try replicating the issue in a brand-new rails project to completely rule out my app/dependencies being the problem...\n. Same problem here: Expected to be able to pass the same options to zeus rspec as I'm used to passing to rspec, such as -e (--example), but ran into this error.\n\nFound this ticket and used @mattgoldman's ~~solution~~workaround but would still love to see this fixed...\n. I started getting this (same except for version number) error too after upgrading to Ruby 2.1.0:\n\n```\nYou have already activated json 1.8.1, but your Gemfile requires json 1.7.7. Prepending `bundle exec` to your command may solve this. (Gem::LoadError)\n```\n\nI wasn't able to just `bundle update json` (without a lot of work) because I have older gems that list <= 1.7.7 as a dependency.\n\nThe only thing that worked for me was to uninstall the newer 1.8.1 version.  Unfortunately even that was made difficult by the fact that it is considered a \"default\" gem.  Blah.\n\n```\ngem list -d json\n*** LOCAL GEMS ***\n\njson (1.8.1, 1.7.7)\n    Author: \n    Installed at (1.8.1, default): /home/...\n                 (1.7.7): /home/...\n\n    This json is bundled with Ruby\n```\n\nFinally was able to get it to not be loaded by deleting this file:\n\n```\nrm ~/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/specifications/default/json-1.8.1.gemspec\n```\n\nHopefully that won't break anything else for me...\n. When I try it again, I sometimes get this error message instead:\n\n```\nThe FS watcher process crashed: signal: aborted (core dumped)\nThe FS watcher process crashed: signal: aborted (core dumped)\n```\n\nI then notice that some zeus processes are still running so I kill them with\n`psgrep  zeus | awk '{ print $2 }' | xargs kill`\nand try again and get the original error again.\n. I've tried uninstalling the zeus gem and then re-installing each older version back to 0.13.4.pre2 and it still gives the same error (`runtime error: invalid memory address or nil pointer dereference`) so it appears that the zeus version doesn't make a difference.  The only variable that should have changed, then, is the Ruby version, from 2.1 to 2.2.\n. Update: Since upgrading to Ruby 2.2, I can't even start the app with a regular `rails c`.  I guess I shouldn't expect `zeus start` to work if I can't even start the app without zeus.  I will update this issue if the zeus issue still exists after resolving these other dependency issues...\n\n(Current error is:\n`/home/tyler/.rvm/rubies/ruby-2.2.0/bin/ruby: symbol lookup error: .../extensions/x86_64-linux/2.2.0/pg-0.14.1/pg_ext.so: undefined symbol: rb_thread_select`)\n. Yep, re-installing pg gem solved that error, and I finally got the app to start using `rails s` and `rails c`.  So back to zeus...  \n\nStill giving this error when I try to start it:\n\n```\nThe FS watcher process crashed: signal: aborted (core dumped)\nThe FS watcher process crashed: signal: aborted (core dumped)\n```\n\nI guess I should try replicating the issue in a brand-new rails project to completely rule out my app/dependencies being the problem...\n. ",
    "andyvb": "+1 on addressing this, would save for time for others like me who only got it working after finding this ticket.\n. +1 on addressing this, would save for time for others like me who only got it working after finding this ticket.\n. ",
    "filiptepper": "Same happens here whenever I have `zeus.json` file present.\n. I've managed to fix this on machine.\n\nI'm running homebrew but had no `go` installed. After brewing `go` works like a charm.\n\n``` bash\n$ brew update\n$ brew install go\n\n$ go version\ngo version go1.0.3\n```\n. I don't have custom plan file, here's my `zeus.json`:\n\n``` javascript\n{\n  \"command\": \"ruby -rubygems -rzeus/rails -eZeus.go\",\n\n  \"plan\": {\n    \"boot\": {\n      \"default_bundle\": {\n        \"development_environment\": {\n          \"prerake\": {\"rake\": []},\n          \"console\": [\"c\"],\n          \"generate\": [\"g\"]\n        },\n        \"test_environment\": {\n          \"test_helper\": {\"test\": [\"rspec\"]}\n        }\n      }\n    }\n  }\n}\n```\n. Pretty much the same setup, except I'm running Mountain Lion.\n. Same happens here whenever I have `zeus.json` file present.\n. I've managed to fix this on machine.\n\nI'm running homebrew but had no `go` installed. After brewing `go` works like a charm.\n\n``` bash\n$ brew update\n$ brew install go\n\n$ go version\ngo version go1.0.3\n```\n. I don't have custom plan file, here's my `zeus.json`:\n\n``` javascript\n{\n  \"command\": \"ruby -rubygems -rzeus/rails -eZeus.go\",\n\n  \"plan\": {\n    \"boot\": {\n      \"default_bundle\": {\n        \"development_environment\": {\n          \"prerake\": {\"rake\": []},\n          \"console\": [\"c\"],\n          \"generate\": [\"g\"]\n        },\n        \"test_environment\": {\n          \"test_helper\": {\"test\": [\"rspec\"]}\n        }\n      }\n    }\n  }\n}\n```\n. Pretty much the same setup, except I'm running Mountain Lion.\n. ",
    "jeffremer": "Same issue, but I have no `zeus.json` file.\n- Ruby 1.9.3-p362 (RBenv)\n- OSX 10.8.2\n- Rails 3.1.10\n- Zeus 0.13.2\n\nI'd be happy to help dig in, not sure where to start. Is there something else I can provide?\n. I also did not have `go`, but installing `go` didn't help, same symptoms as before.\n. Likewise, I don't have a `zeus.json` file and still get the same issue. I'm happy help to troubleshoot, any idea where to start looking?\n. @turadg, `gem update zeus` doesn't give me any updates from 0.13.2, but `gem install zeus --version=0.13.3.rc2` installs however it doesn't seem to solve the problem.\n\nIn a fresh rails app zeus appears to boot up OK. In our app this problem persists, even though `rails s` works just fine.\n\nAny ideas where I can start debugging this? Zeus has worked great for me in the past so I'd love to keep using it and I am more than happy to help out.\n. I'm trying to narrow down the cause of the issue by slowly removing initialization code and dependencies from our app, unfortunately it's a huge project and this is taking a while.\n\nIf I forked zeus myself in order to add some logging, do you have any pointers on a place to start for adding some debugging output?\n. Yeah, I tried that. Zeus works for me on a fresh rails app, then after copying over our Gemfile and running bundler, and it still works after slowly starting to add more and more of our app into a fresh app. Didn't really get anywhere with that.\n\nI'll give stepping through zeus.rb a try. Thanks.\n. Not sure what changed, but now using `0.13.3.rc2` I can start Zeus up just fine.\n. Same issue, but I have no `zeus.json` file.\n- Ruby 1.9.3-p362 (RBenv)\n- OSX 10.8.2\n- Rails 3.1.10\n- Zeus 0.13.2\n\nI'd be happy to help dig in, not sure where to start. Is there something else I can provide?\n. I also did not have `go`, but installing `go` didn't help, same symptoms as before.\n. Likewise, I don't have a `zeus.json` file and still get the same issue. I'm happy help to troubleshoot, any idea where to start looking?\n. @turadg, `gem update zeus` doesn't give me any updates from 0.13.2, but `gem install zeus --version=0.13.3.rc2` installs however it doesn't seem to solve the problem.\n\nIn a fresh rails app zeus appears to boot up OK. In our app this problem persists, even though `rails s` works just fine.\n\nAny ideas where I can start debugging this? Zeus has worked great for me in the past so I'd love to keep using it and I am more than happy to help out.\n. I'm trying to narrow down the cause of the issue by slowly removing initialization code and dependencies from our app, unfortunately it's a huge project and this is taking a while.\n\nIf I forked zeus myself in order to add some logging, do you have any pointers on a place to start for adding some debugging output?\n. Yeah, I tried that. Zeus works for me on a fresh rails app, then after copying over our Gemfile and running bundler, and it still works after slowly starting to add more and more of our app into a fresh app. Didn't really get anywhere with that.\n\nI'll give stepping through zeus.rb a try. Thanks.\n. Not sure what changed, but now using `0.13.3.rc2` I can start Zeus up just fine.\n. ",
    "rubysolo": "It crashes for me with and without a `zeus.json` file, and I do have `go` v 1.0.3 installed.\n. Removing a zeus.json doesn't fix it for me, as I don't have one.\n. Thanks.  Does anyone have suggestions for further troubleshooting steps?\n. FWIW, gave this another shot with zeus 0.13.3 installed in system gems (as the README recommends) and ruby 2.0.0p353 after upgrading my app to rails 4.0.2.  Now I get the \"[run to see backtrace]\" message right away, and the backtrace shows that it's not using bundler (\"already activated v.x of rake\").\n\nIf I add zeus to the Gemfile, it looks like it launches the server successfully, but I get `undefined method 'match' for nil:NilClass` on `zeus/rails.rb:214`.\n\nI'll go ahead and close this, because that's probably a different issue.\n. It crashes for me with and without a `zeus.json` file, and I do have `go` v 1.0.3 installed.\n. Removing a zeus.json doesn't fix it for me, as I don't have one.\n. Thanks.  Does anyone have suggestions for further troubleshooting steps?\n. FWIW, gave this another shot with zeus 0.13.3 installed in system gems (as the README recommends) and ruby 2.0.0p353 after upgrading my app to rails 4.0.2.  Now I get the \"[run to see backtrace]\" message right away, and the backtrace shows that it's not using bundler (\"already activated v.x of rake\").\n\nIf I add zeus to the Gemfile, it looks like it launches the server successfully, but I get `undefined method 'match' for nil:NilClass` on `zeus/rails.rb:214`.\n\nI'll go ahead and close this, because that's probably a different issue.\n. ",
    "rchampourlier": "Same thing here. Worked for some time, now I get the very same thing.\n\nOS X 10.8.2\nruby 1.9.3p327-perf\nrails 3.2.11\nzeus 0.13.2\nWith a `zeus.json` file\n. Starting the rails server was ok, but the `zeus.json` file was making it fail. Removed and it works again.\n. Same thing here. Worked for some time, now I get the very same thing.\n\nOS X 10.8.2\nruby 1.9.3p327-perf\nrails 3.2.11\nzeus 0.13.2\nWith a `zeus.json` file\n. Starting the rails server was ok, but the `zeus.json` file was making it fail. Removed and it works again.\n. ",
    "froderik": "OSX 10.8.2\nruby 1.9.3-p392\nrails 3.2.12\nzeus 0.13.2\nRemoved zeus.json and now it works. Which is awesome!\n. OSX 10.8.2\nruby 1.9.3-p392\nrails 3.2.12\nzeus 0.13.2\nRemoved zeus.json and now it works. Which is awesome!\n. ",
    "marktran": "Same deal here with p327-perf and no zeus.json and go1.0.3. Interestingly, it works fine for my coworker on the same project.\n. Same deal here with p327-perf and no zeus.json and go1.0.3. Interestingly, it works fine for my coworker on the same project.\n. ",
    "alce": "I had this problem too. Solved it by removing zeus from my Gemfile.\n. I had this problem too. Solved it by removing zeus from my Gemfile.\n. ",
    "keithpitt": "I had this problem as well, it seems that I had accidentally removed my `custom_plan.rb` file in a bad merge. Doing a `zeus init` again worked for me.\n. I had this problem as well, it seems that I had accidentally removed my `custom_plan.rb` file in a bad merge. Doing a `zeus init` again worked for me.\n. ",
    "martinstreicher": "I removed the zeus gem from my Gemfile and it started working again. The Gemfile had zeus in it since I started using the zeus utility. Not sure what changed. \n. I removed the zeus gem from my Gemfile and it started working again. The Gemfile had zeus in it since I started using the zeus utility. Not sure what changed. \n. ",
    "adstage-david": "This just happened to me as well. I removed my custom_plan and the `-r./custom_plan.rb` reference in zeus.json because I didn't see a need for them, but it appears zeus needs the reference to the \n\n```\nrequire 'zeus/rails'\n```\n\nLine at the top of the custom_plan.rb. Changing `-r./custom_plan.rb` to `-rzeus/rails` allowed me to remove the custom_plan.rb file.\n. This just happened to me as well. I removed my custom_plan and the `-r./custom_plan.rb` reference in zeus.json because I didn't see a need for them, but it appears zeus needs the reference to the \n\n```\nrequire 'zeus/rails'\n```\n\nLine at the top of the custom_plan.rb. Changing `-r./custom_plan.rb` to `-rzeus/rails` allowed me to remove the custom_plan.rb file.\n. ",
    "Goltergaul": "it stopped working for me too. this morning everything was fine, now i get the problem others describe here. Had some os update screwing with my gems, had to reinstall everything. Now rails s etc is working but not zeus :(\n. i just tried older versions to see if it came from an update and this what i got with 0.13.1:\n\ngaul@gaul:~/workspaces/atalanda$ zeus start\nStarting Zeus server\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u251c\u2500\u2500 test_helper\n        \u2514\u2500\u2500 cucumber_environment\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus dbconsole\nzeus console (alias: c)\nzeus generate (alias: g)\nzeus runner (alias: r)\nzeus server (alias: s)\nzeus destroy (alias: d)\nzeus rake\nzeus test (alias: rspec, testrb)\nzeus cucumber\nFailed to initialize application from zeus.json.\nThe json file is valid, but the command could not be started:\nruby: no such file to load -- ubygems (LoadError)\n\ngaul@gaul:~/workspaces/atalanda$ rubygems\nrubygems: command not found\n\nany ideas? btw. i do not have a zeus.json. and \"ubygems\" looks like a typo. the command rubygems does not exist on my system. do i need it?\n. i would like a command line option for zeus start to specifiy the environment variable :) but thanks for the configs, going to check it out\n. it stopped working for me too. this morning everything was fine, now i get the problem others describe here. Had some os update screwing with my gems, had to reinstall everything. Now rails s etc is working but not zeus :(\n. i just tried older versions to see if it came from an update and this what i got with 0.13.1:\n\ngaul@gaul:~/workspaces/atalanda$ zeus start\nStarting Zeus server\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u251c\u2500\u2500 test_helper\n        \u2514\u2500\u2500 cucumber_environment\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus dbconsole\nzeus console (alias: c)\nzeus generate (alias: g)\nzeus runner (alias: r)\nzeus server (alias: s)\nzeus destroy (alias: d)\nzeus rake\nzeus test (alias: rspec, testrb)\nzeus cucumber\nFailed to initialize application from zeus.json.\nThe json file is valid, but the command could not be started:\nruby: no such file to load -- ubygems (LoadError)\n\ngaul@gaul:~/workspaces/atalanda$ rubygems\nrubygems: command not found\n\nany ideas? btw. i do not have a zeus.json. and \"ubygems\" looks like a typo. the command rubygems does not exist on my system. do i need it?\n. i would like a command line option for zeus start to specifiy the environment variable :) but thanks for the configs, going to check it out\n. ",
    "chetan": "I'm having this problem when running zeus under ruby-2.0.0-p195 but not under ruby-1.9.3-p392. Removing zeus from my Gemfile seems to have solved the issue. \n. I'm having this problem when running zeus under ruby-2.0.0-p195 but not under ruby-1.9.3-p392. Removing zeus from my Gemfile seems to have solved the issue. \n. ",
    "jwg2s": "I had this issue because my system had json 1.8.0 installed.  When I uninstalled json 1.8.0 zeus started working again.  We have json locked to 1.7.7 in our Gemfile, but even that caused zeus to fail.  json 1.8.0 had to be completely uninstalled.\n. Can we backport this fix?  I think the gap between releases justifies a hotfix of some sort for these older versions?  Still dealing with this every time I get json 1.8.0 installed by accident.\n. Interesting, I'm on Ruby 2.0 and still facing the issue so not sure Ruby Version is the main variable here.\n. That does fix it.  Any disadvantages of removing it?\n. Yeah I noticed that was one of the disadvantages listed on RSpecs website.  Seems like you'd have to be somewhat insane to boot up a spec like that.  This solves it for me!\n. I actually can't run any rake tasks with zeus at all I've discovered.  Don't know if it's zeus related or what since regular rake works fine.  I'll post more details when I get the chance, just wanted to add this here in case anyone else is seeing similar issues.\n. Upping the stack didn't seem to have an effect.  I've switched to Ruby 2.0 for our project and still producing the same results.\n\n```\nzeus rake db:migrate --trace\n** Invoke db:migrate (first_time)\n** Invoke environment (first_time)\n** Execute environment\n** Invoke db:load_config (first_time)\n** Execute db:load_config\n** Execute db:migrate\nrake aborted!\nstack level too deep\n/usr/local/rvm/gems/ruby-2.0.0-p0@global/gems/rake-10.0.4/lib/rake/task.rb:188\nTasks: TOP => db:migrate\n```\n\nAny other suggestions on things to try?\n. This was originally caused by us using actual classes instead of strings in Rails relationships.\n\ne.g.\n\n``` ruby\nhas_many :users, class_name: User\n```\n\ninstead of\n\n``` ruby\nhas_many :users, class_name: 'User'\n```\n\nending up being a class loading/ordering issue.  Worth checking out as a possibility but this was so long ago I can't quite remember if that was the cause.\n. I've also experienced this.  Removing json 1.8.0 from my system fixed the issue.  Our project has json 1.7.7 locked in.\n. :thumbsup: , having this same issue, appears to be the same issue with json v1.8.1 (which I believe is now required with ruby 2.1?)\n. I had this issue because my system had json 1.8.0 installed.  When I uninstalled json 1.8.0 zeus started working again.  We have json locked to 1.7.7 in our Gemfile, but even that caused zeus to fail.  json 1.8.0 had to be completely uninstalled.\n. Can we backport this fix?  I think the gap between releases justifies a hotfix of some sort for these older versions?  Still dealing with this every time I get json 1.8.0 installed by accident.\n. Interesting, I'm on Ruby 2.0 and still facing the issue so not sure Ruby Version is the main variable here.\n. That does fix it.  Any disadvantages of removing it?\n. Yeah I noticed that was one of the disadvantages listed on RSpecs website.  Seems like you'd have to be somewhat insane to boot up a spec like that.  This solves it for me!\n. I actually can't run any rake tasks with zeus at all I've discovered.  Don't know if it's zeus related or what since regular rake works fine.  I'll post more details when I get the chance, just wanted to add this here in case anyone else is seeing similar issues.\n. Upping the stack didn't seem to have an effect.  I've switched to Ruby 2.0 for our project and still producing the same results.\n\n```\nzeus rake db:migrate --trace\n** Invoke db:migrate (first_time)\n** Invoke environment (first_time)\n** Execute environment\n** Invoke db:load_config (first_time)\n** Execute db:load_config\n** Execute db:migrate\nrake aborted!\nstack level too deep\n/usr/local/rvm/gems/ruby-2.0.0-p0@global/gems/rake-10.0.4/lib/rake/task.rb:188\nTasks: TOP => db:migrate\n```\n\nAny other suggestions on things to try?\n. This was originally caused by us using actual classes instead of strings in Rails relationships.\n\ne.g.\n\n``` ruby\nhas_many :users, class_name: User\n```\n\ninstead of\n\n``` ruby\nhas_many :users, class_name: 'User'\n```\n\nending up being a class loading/ordering issue.  Worth checking out as a possibility but this was so long ago I can't quite remember if that was the cause.\n. I've also experienced this.  Removing json 1.8.0 from my system fixed the issue.  Our project has json 1.7.7 locked in.\n. :thumbsup: , having this same issue, appears to be the same issue with json v1.8.1 (which I believe is now required with ruby 2.1?)\n. ",
    "sulphur": "removing json 1.8.0 fixed the issuse  \n. i have the same issue. I don't use vagrat however.  I had it before it was some conflict with json 1.8 gem and downgrading to json 1.7.7 solved the issue. however now it repeats agian ....\n. any news ? \n. i thought i was using the latex one ... but in fact bundle installs by default 0.1.0 version ... \ni had to add this 2 lines to get it working in case someone has the same problem.\n\n```\ngem 'mongoid-grid_fs', github: 'ahoward/mongoid-grid_fs'\ngem 'carrierwave-mongoid', \"~> 0.6.0\", :require => 'carrierwave/mongoid'\n```\n\nthanks for your help ! \n. removing json 1.8.0 fixed the issuse  \n. i have the same issue. I don't use vagrat however.  I had it before it was some conflict with json 1.8 gem and downgrading to json 1.7.7 solved the issue. however now it repeats agian ....\n. any news ? \n. i thought i was using the latex one ... but in fact bundle installs by default 0.1.0 version ... \ni had to add this 2 lines to get it working in case someone has the same problem.\n\n```\ngem 'mongoid-grid_fs', github: 'ahoward/mongoid-grid_fs'\ngem 'carrierwave-mongoid', \"~> 0.6.0\", :require => 'carrierwave/mongoid'\n```\n\nthanks for your help ! \n. ",
    "jwoertink": "I was getting this issues too. Just removed json 1.8.0, and that fixed it. This is running on zeus `0.13.3.rc2`\n. I was getting this issues too. Just removed json 1.8.0, and that fixed it. This is running on zeus `0.13.3.rc2`\n. ",
    "emaxi": "I was getting this issues until I migrate from ruby-1.9.3-p392 to 1.9.3-p429. And having installed json 1.8.0 no problem at all.\n. I was getting this issues until I migrate from ruby-1.9.3-p392 to 1.9.3-p429. And having installed json 1.8.0 no problem at all.\n. ",
    "jesseditson": "I'm seeing this problem on a very large codebase - I recently moved to a new machine, and reinstalled, which appears to have caused this issue (only broken on the new machine).\n\nI'm running ruby v1.9.3p327 (via rvm), rails v3.2.13 - I've tried everything mentioned in this thread (my json gem is 1.5.4, reinstalled all gems multiple times, including specifically removing method_source, all combinations of zeus.json and custom_plan existing and not existing, using the rc2 version of zeus, plus lots of other things).\n\nRunning `rails s` works fine, so it's not just a normal failure, it just hangs on boot with the brief exit code 1 error.\n\nAlso adding zeus to my Gemfile isn't an option on this project, so the only thing I didn't try was to `bundle exec zeus start`, but as it sort of defeats the purpose of my use for zeus anyway, it's not something I'm interested in exploring.\n\nGiven the wide variety of issues on this thread, I think the fundamental issue here is that there is no zeus verbose mode allowing us to check out what the actual failure is. Any chance we can get a -v with some logging? I don't mind troubleshooting as long as I'm not troubleshooting a black box...\n. This sounds like it's the same thing as #237 - I'll bet if you look closely you'll see an exit status of 1 when booting. Unfortunately the assortment of \"fixes\" for this didn't work for me, not sure what it is in your case either.\n. I'm seeing this problem on a very large codebase - I recently moved to a new machine, and reinstalled, which appears to have caused this issue (only broken on the new machine).\n\nI'm running ruby v1.9.3p327 (via rvm), rails v3.2.13 - I've tried everything mentioned in this thread (my json gem is 1.5.4, reinstalled all gems multiple times, including specifically removing method_source, all combinations of zeus.json and custom_plan existing and not existing, using the rc2 version of zeus, plus lots of other things).\n\nRunning `rails s` works fine, so it's not just a normal failure, it just hangs on boot with the brief exit code 1 error.\n\nAlso adding zeus to my Gemfile isn't an option on this project, so the only thing I didn't try was to `bundle exec zeus start`, but as it sort of defeats the purpose of my use for zeus anyway, it's not something I'm interested in exploring.\n\nGiven the wide variety of issues on this thread, I think the fundamental issue here is that there is no zeus verbose mode allowing us to check out what the actual failure is. Any chance we can get a -v with some logging? I don't mind troubleshooting as long as I'm not troubleshooting a black box...\n. This sounds like it's the same thing as #237 - I'll bet if you look closely you'll see an exit status of 1 when booting. Unfortunately the assortment of \"fixes\" for this didn't work for me, not sure what it is in your case either.\n. ",
    "MichaelXavier": ":thumbsup: for the logging. I think having a verbose logging option is critical for zeus. Most people who use zeus and have problems with it are running apps big enough that zeus is required, so it is very difficult to set up a reproducible case for you. It would be much easier to get some manner of output when something goes wrong so there's some clue beyond \"exit status 1\".\n\nI'm running into this same issue and trying to debug it with `strace` which is always a bad sign :(\n. :thumbsup: for the logging. I think having a verbose logging option is critical for zeus. Most people who use zeus and have problems with it are running apps big enough that zeus is required, so it is very difficult to set up a reproducible case for you. It would be much easier to get some manner of output when something goes wrong so there's some clue beyond \"exit status 1\".\n\nI'm running into this same issue and trying to debug it with `strace` which is always a bad sign :(\n. ",
    "GregSilcox": "I'm setting up an new virtual machine with a large app cloned from my github repository. I had this same issue as everyone else. \n\nI followed KeithPitts advise above, removing custom_plan.rb and zeus.json, then running zeus init and everything just started working.\n. @latortuga I really appreciate your time, thought and effort that you've put into zeus. It's awesome. I do have some projects that I can't get it to work in, but for those that work, it's so much faster than nothing and even much faster than the new rails default of spring. I especially like it with guard, rspec and parallel_tests. I get results back from small test suites in under a second! And this combination took one huge suite from 15 minutes to under 3 minutes with no loss of coverage. It makes the rails console more attractive, rake routes a pleasure and dbconsole is awesome too. Thanks!\n. I'm setting up an new virtual machine with a large app cloned from my github repository. I had this same issue as everyone else. \n\nI followed KeithPitts advise above, removing custom_plan.rb and zeus.json, then running zeus init and everything just started working.\n. @latortuga I really appreciate your time, thought and effort that you've put into zeus. It's awesome. I do have some projects that I can't get it to work in, but for those that work, it's so much faster than nothing and even much faster than the new rails default of spring. I especially like it with guard, rspec and parallel_tests. I get results back from small test suites in under a second! And this combination took one huge suite from 15 minutes to under 3 minutes with no loss of coverage. It makes the rails console more attractive, rake routes a pleasure and dbconsole is awesome too. Thanks!\n. ",
    "theodorton": "Experienced the same issue when upgrading to Ruby 2.0.0-p247.\n\n```\n$ zeus version\nZeus version 0.13.3.rc2\n```\n\nThe following did the trick for me:\n\n```\n$ gem uninstall json\nSelect gem to uninstall:\n 1. json-1.6.6\n 2. json-1.8.0\n 3. All versions\n> 2\nSuccessfully uninstalled json-1.8.0\n\n$ gem install json --version '1.7.7'\nBuilding native extensions.  This could take a while...\nSuccessfully installed json-1.7.7\n1 gem installed\n```\n\nAny reasons for why it's incompatible with 1.8.0?\n\nUpgrading to zeus-0.13.4.pre2 made the error come back.\n. Experienced the same issue when upgrading to Ruby 2.0.0-p247.\n\n```\n$ zeus version\nZeus version 0.13.3.rc2\n```\n\nThe following did the trick for me:\n\n```\n$ gem uninstall json\nSelect gem to uninstall:\n 1. json-1.6.6\n 2. json-1.8.0\n 3. All versions\n> 2\nSuccessfully uninstalled json-1.8.0\n\n$ gem install json --version '1.7.7'\nBuilding native extensions.  This could take a while...\nSuccessfully installed json-1.7.7\n1 gem installed\n```\n\nAny reasons for why it's incompatible with 1.8.0?\n\nUpgrading to zeus-0.13.4.pre2 made the error come back.\n. ",
    "gellmr": "I did a bundle install (manually) and then 'zeus start' and everything is fine.\n. I did a bundle install (manually) and then 'zeus start' and everything is fine.\n. ",
    "qnm": "In my case, removing `zeus` from my Gemfile and re-bundling fixed this issue.\n. In my case, removing `zeus` from my Gemfile and re-bundling fixed this issue.\n. ",
    "toothrot": "Just fixed by `bundle update json`, moving json from 1.8.0 to 1.8.1, and running zeus with `bundle exec zeus start`\n. Just fixed by `bundle update json`, moving json from 1.8.0 to 1.8.1, and running zeus with `bundle exec zeus start`\n. ",
    "sziep": "Nothing of the above worked for me. But I had multiple versions of zeus installed and removing the latest one fixed it for me. \n. Nothing of the above worked for me. But I had multiple versions of zeus installed and removing the latest one fixed it for me. \n. ",
    "ClayShentrup": "I downgraded from method_source 0.8.2 to 0.8.1 and that fixed my problem.\n. I don't put Zeus in my gemfile. I just ran \"bundle --binstubs\".\n. I downgraded from method_source 0.8.2 to 0.8.1 and that fixed my problem.\n. I don't put Zeus in my gemfile. I just ran \"bundle --binstubs\".\n. ",
    "localredhead": "I ran into this.\n\nTo fix it:\n1. Uninstall json.\n2. Install json 1.8.0\n3. remove method_source \n4. Install method_source 0.8.2\n5. Put Zeus in gemfile  (using rbenv bundler complains if Zeus is not in gemfile)\n6. Bundle install \n7 now works.\n. This happens to me too.\n\nWhat I'm more concerned about is why zeus is crashing...\n. If this wasn't happening - wouldn't the console issue go away?  For me this is the blocking issue:\n     `slavenode.go:202: EOF\n        panic: runtime error: invalid memory address or nil pointer dereference\n        [signal 0xb code=0x1 addr=0x0 pc=0x73d27]`\n. I have this behavior as well.\n. I ran into this.\n\nTo fix it:\n1. Uninstall json.\n2. Install json 1.8.0\n3. remove method_source \n4. Install method_source 0.8.2\n5. Put Zeus in gemfile  (using rbenv bundler complains if Zeus is not in gemfile)\n6. Bundle install \n7 now works.\n. This happens to me too.\n\nWhat I'm more concerned about is why zeus is crashing...\n. If this wasn't happening - wouldn't the console issue go away?  For me this is the blocking issue:\n     `slavenode.go:202: EOF\n        panic: runtime error: invalid memory address or nil pointer dereference\n        [signal 0xb code=0x1 addr=0x0 pc=0x73d27]`\n. I have this behavior as well.\n. ",
    "chadmckenna": "Had the same issue, zeus worked on some branches but not others, was using json 1.8.1, didn't have zeus in my gemfile so I didn't need `bundle exec`. Turned out I had two versions of zeus installed on my machine, I removed `zeus-0.13.4.pre2` and reverted to `zeus-0.13.3` and zeus started up with no issue.\n. Had the same issue, zeus worked on some branches but not others, was using json 1.8.1, didn't have zeus in my gemfile so I didn't need `bundle exec`. Turned out I had two versions of zeus installed on my machine, I removed `zeus-0.13.4.pre2` and reverted to `zeus-0.13.3` and zeus started up with no issue.\n. ",
    "Zelnox": "On ruby 1.9.3-p545, json 1.8.1 + method_source 0.8.2 + zeus 0.13.3 works for me. I had problems when method_source was still 0.8.1.\n. It happens to me too. Rails 3.1.11 + zeus 0.13.3 + minitest 4.6.2\n. On ruby 1.9.3-p545, json 1.8.1 + method_source 0.8.2 + zeus 0.13.3 works for me. I had problems when method_source was still 0.8.1.\n. It happens to me too. Rails 3.1.11 + zeus 0.13.3 + minitest 4.6.2\n. ",
    "jerefrer": "I just had the same issue with ruby 2.0.0-p451 and a fresh Rails 4.0.4 app.\n\nDoing what @ericboehs suggested fixed the problem:\n\n```\ngem uninstall --all --force method_source\ngem install method_source\n```\n\nIn my case I uninstalled 0.8.1 and reinstalled 0.8.2\n. I just had the same issue with ruby 2.0.0-p451 and a fresh Rails 4.0.4 app.\n\nDoing what @ericboehs suggested fixed the problem:\n\n```\ngem uninstall --all --force method_source\ngem install method_source\n```\n\nIn my case I uninstalled 0.8.1 and reinstalled 0.8.2\n. ",
    "rusterholz": "Ruby 1.9.3, Rails 3.2.16.\n\nI've done every troubleshooting step in this thread, uninstalled / reinstalled json and method_source, tried it with `bundle exec`, tried deleting zeus.json and custom_plan.rb, tried recreating them, everything. Nothing works. And, naturally, the authors haven't been able to bring themselves to add any kind of logging or more helpful error message during the year that this issue has been open.\n\nGoodbye, zeus. I won't be wasting any more of my time on you.\n. Ruby 1.9.3, Rails 3.2.16.\n\nI've done every troubleshooting step in this thread, uninstalled / reinstalled json and method_source, tried it with `bundle exec`, tried deleting zeus.json and custom_plan.rb, tried recreating them, everything. Nothing works. And, naturally, the authors haven't been able to bring themselves to add any kind of logging or more helpful error message during the year that this issue has been open.\n\nGoodbye, zeus. I won't be wasting any more of my time on you.\n. ",
    "ricktessner": "What worked for me:\n\n```\n1. rm zeus.json custom_plan.rb # assuming you have them in git or backed up elsewhere\n2. zeus init\n3. zeus start # all good\n```\n\nThere's some combination of options defined in the zeus.json that are either incompatible or require that a custom_plan.rb exist. Haven't narrowed it down, but thought I'd put this here in the hopes that it may help someone else.\n. What worked for me:\n\n```\n1. rm zeus.json custom_plan.rb # assuming you have them in git or backed up elsewhere\n2. zeus init\n3. zeus start # all good\n```\n\nThere's some combination of options defined in the zeus.json that are either incompatible or require that a custom_plan.rb exist. Haven't narrowed it down, but thought I'd put this here in the hopes that it may help someone else.\n. ",
    "rqbukhari": "I ran into the same issue. I tried the fix provided by @localredhead but it didn't work.\nThis is how I fixed.\n\n```\ngem uninstall zeus      \nSelect gem to uninstall:\n 1. zeus-0.13.3\n 2. zeus-0.15.1\n 3. All versions\n```\n\nI removed 0.15.1 and now it works :)\n. I ran into the same issue. I tried the fix provided by @localredhead but it didn't work.\nThis is how I fixed.\n\n```\ngem uninstall zeus      \nSelect gem to uninstall:\n 1. zeus-0.13.3\n 2. zeus-0.15.1\n 3. All versions\n```\n\nI removed 0.15.1 and now it works :)\n. ",
    "straydogstudio": "Removing zeus-0.15.1 worked for me. \n. Removing zeus-0.15.1 worked for me. \n. ",
    "joshbedo": "I removed `zeus` from the gemfile and it started working but crashed on cucumber. I then added it back in the gemfile and removed the .zeus.sock and started it back up again and now its working fine minus crashing on cucumber.\n. I removed `zeus` from the gemfile and it started working but crashed on cucumber. I then added it back in the gemfile and removed the .zeus.sock and started it back up again and now its working fine minus crashing on cucumber.\n. ",
    "jponc": "Downgrading to `0.13.3.rc2` worked for me\n. If you still encounter this error you can just downgrade your zeus to version `0.13.3.rc2`\n\nFollow this:\n1. `gem uninstall zeus`\n2. `gem install zeus -v '0.13.3.rc2'`\n. Downgrading to `0.13.3.rc2` worked for me\n. If you still encounter this error you can just downgrade your zeus to version `0.13.3.rc2`\n\nFollow this:\n1. `gem uninstall zeus`\n2. `gem install zeus -v '0.13.3.rc2'`\n. ",
    "jogaco": "Upgraded to 0.15.2 and started having\n\n```\nexit status 1\n```\n\nI uninstalled 0.15.2 and stayed with 0.15.1, working again\n. Upgraded to 0.15.2 and started having\n\n```\nexit status 1\n```\n\nI uninstalled 0.15.2 and stayed with 0.15.1, working again\n. ",
    "dreki": "> Whenever I get this error it's down to some gem conflicts or other Rails app errors.\n> Try to start rails server manually and see if it works. -- @iRonin \n\nDoing the above showed me an error with a missing directory. I still got an error, so I ran `bundle clean --force`, and then `bundle install`, and then zeus started up correctly.\n\nFor context, yesterday I had been trying to get a VM working, and that machine used the same files, so I'm pretty sure that's what originally screwed things up. I also did a decent amount of git branch switching yesterday.\n. @PaBLoX-CL's suggestion worked for me, but this is a bug. Zeus should work out of the box; nobody should have to unravel arcane dependencies in order to use it. Zeus has enough of a perception problem as it is.\n. @latortuga You've been biased against this and rude from the start. Ignoring users is a huge mistake, but apparently your choice. \n. > Whenever I get this error it's down to some gem conflicts or other Rails app errors.\n> Try to start rails server manually and see if it works. -- @iRonin \n\nDoing the above showed me an error with a missing directory. I still got an error, so I ran `bundle clean --force`, and then `bundle install`, and then zeus started up correctly.\n\nFor context, yesterday I had been trying to get a VM working, and that machine used the same files, so I'm pretty sure that's what originally screwed things up. I also did a decent amount of git branch switching yesterday.\n. @PaBLoX-CL's suggestion worked for me, but this is a bug. Zeus should work out of the box; nobody should have to unravel arcane dependencies in order to use it. Zeus has enough of a perception problem as it is.\n. @latortuga You've been biased against this and rude from the start. Ignoring users is a huge mistake, but apparently your choice. \n. ",
    "boom": "For anyone else potentially having this problem, I am using `Zeus version 0.15.3` with `ruby 2.1.2p95` and ran into this issue with receive `exit status 1` immediate on `zeus start`. \n\nI fixed this by doing `gem uninstall method_source` and `gem install method_source --version '0.8.1'`. Appears to be an issue with my previously install method source 0.8.2.\n. For anyone else potentially having this problem, I am using `Zeus version 0.15.3` with `ruby 2.1.2p95` and ran into this issue with receive `exit status 1` immediate on `zeus start`. \n\nI fixed this by doing `gem uninstall method_source` and `gem install method_source --version '0.8.1'`. Appears to be an issue with my previously install method source 0.8.2.\n. ",
    "marcpursals": "Same issue here. For me worked:\n1. removing zeus from gemfile\n2. bundle install\n3. adding zeus to gemfile\n4. bundle install\n\ndone.\n. Same issue here. For me worked:\n1. removing zeus from gemfile\n2. bundle install\n3. adding zeus to gemfile\n4. bundle install\n\ndone.\n. ",
    "hraynaud": "@marcpursals \nThanks for the advice.  This worked for me.\n@latortuga  \nIs there any downside to install zeus in the Gemfile vs globally?\nThanks\n. @halostatue 's code works for me as well. Would love to have this resolved with having to patch the .pryrc\n. Hey @latortuga  thanks for the speedy repsponse. I'm on 2.0.14.\n\nThis is probably something wacky with this code base and it's configurations as quite a few of the tweaks that have been made are unconventional. \n\nAll of my other projects work perfectly fine with zeus so It's almost certainly not zeus itself.\n\nOpening the issue was more of long-shot to see if you'd every seen this or similar behavior before. I'm closing unless you think there is something else you might suggest\n\nThanks\n. This worked for me as well. Going back to 0.15.3 resolved the problem. . @marcpursals \nThanks for the advice.  This worked for me.\n@latortuga  \nIs there any downside to install zeus in the Gemfile vs globally?\nThanks\n. @halostatue 's code works for me as well. Would love to have this resolved with having to patch the .pryrc\n. Hey @latortuga  thanks for the speedy repsponse. I'm on 2.0.14.\n\nThis is probably something wacky with this code base and it's configurations as quite a few of the tweaks that have been made are unconventional. \n\nAll of my other projects work perfectly fine with zeus so It's almost certainly not zeus itself.\n\nOpening the issue was more of long-shot to see if you'd every seen this or similar behavior before. I'm closing unless you think there is something else you might suggest\n\nThanks\n. This worked for me as well. Going back to 0.15.3 resolved the problem. . ",
    "rguerrettaz": "Tried literally everything stated above except adding zeus to my Gemfile. Gave in, added it, works now... \n. Tried literally everything stated above except adding zeus to my Gemfile. Gave in, added it, works now... \n. ",
    "averyga": "Bundle install helped.\n. Bundle install helped.\n. ",
    "shevaun": "ruby 2.1.6p336\nzeus v0.15.4\n\n@theodorton's advice fixed it for me:\n\n```\n$ gem uninstall json\n\nSelect gem to uninstall:\n 1. json-1.8.1\n 2. json-1.8.2\n 3. All versions\n> 3\nSuccessfully uninstalled json-1.8.1\nSuccessfully uninstalled json-1.8.2\n\n$  gem install json -v 1.7.7\nFetching: json-1.7.7.gem (100%)\nBuilding native extensions.  This could take a while...\nSuccessfully installed json-1.7.7\n1 gem installed\n```\n\nnow that I think about it, is it because running zeus outside of bundle was using a different version of the json gem than my bundle was, and the fix is just making them use the same version?\n. Thanks @TylerRick that was the only thing that worked for me too\n. ruby 2.1.6p336\nzeus v0.15.4\n\n@theodorton's advice fixed it for me:\n\n```\n$ gem uninstall json\n\nSelect gem to uninstall:\n 1. json-1.8.1\n 2. json-1.8.2\n 3. All versions\n> 3\nSuccessfully uninstalled json-1.8.1\nSuccessfully uninstalled json-1.8.2\n\n$  gem install json -v 1.7.7\nFetching: json-1.7.7.gem (100%)\nBuilding native extensions.  This could take a while...\nSuccessfully installed json-1.7.7\n1 gem installed\n```\n\nnow that I think about it, is it because running zeus outside of bundle was using a different version of the json gem than my bundle was, and the fix is just making them use the same version?\n. Thanks @TylerRick that was the only thing that worked for me too\n. ",
    "rahilsondhi": "`bundle update guard-zeus` fixed it for me\n. `bundle update guard-zeus` fixed it for me\n. ",
    "ssoroka-se": "There's a lot of \"try this\" in here, but no actual debugging steps. Here's how you can find the actual issue:\n\n`zeus --log ZEUS.LOG start` then `cat ZEUS.LOG`\n. There's a lot of \"try this\" in here, but no actual debugging steps. Here's how you can find the actual issue:\n\n`zeus --log ZEUS.LOG start` then `cat ZEUS.LOG`\n. ",
    "markalfred": "@ssoroka-se :+1: :+1: :+1: :+1: :exclamation: \n. :+1: to this. It seems to have started recently, but downgrading zeus' version doesn't seem to fix the problem for me.\n. @ssoroka-se :+1: :+1: :+1: :+1: :exclamation: \n. :+1: to this. It seems to have started recently, but downgrading zeus' version doesn't seem to fix the problem for me.\n. ",
    "shelkem": "@marcpursals \nThanks for the advice. This worked for me.\n. @marcpursals \nThanks for the advice. This worked for me.\n. ",
    "MaximilianoFelice": "Still getting this error after trying every possible combination of answers in this issue.\n\nDoes anyone have an idea of where this bug is comming from? It's been more than two years from the original post and it doesn't seem to be any official solution.\n. Still getting this error after trying every possible combination of answers in this issue.\n\nDoes anyone have an idea of where this bug is comming from? It's been more than two years from the original post and it doesn't seem to be any official solution.\n. ",
    "ntdb": "@marcpursals this worked for me as well. Thanks!\n. @marcpursals this worked for me as well. Thanks!\n. ",
    "aeberlin": "I had this issue with `zeus-parallel_tests` but none of the steps above resolved it. After checking my logs, `load_file` wasn't being found in `load_tracking.rb`, with a custom plan. I fixed it by running `bundle update psych` and adding `require 'yaml'` to the top of my custom plan. \n. I had this issue with `zeus-parallel_tests` but none of the steps above resolved it. After checking my logs, `load_file` wasn't being found in `load_tracking.rb`, with a custom plan. I fixed it by running `bundle update psych` and adding `require 'yaml'` to the top of my custom plan. \n. ",
    "radar": "I just got this today. Following @ssoroka-se's advice, I see this:\n\n```\n2015/11/21 10:21:58.583514 [/Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:184] boot/(no PID) in unbooted state\n2015/11/21 10:21:58.584299 [/Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:372] boot/(no PID) running the root command now\n2015/11/21 10:21:58.739034 [/Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:383] boot/(no PID) root process exited with an error before it could boot: exit status 1; output was: /Users/ryanbigg/.gem/ruby/2.2.3/gems/zeus-0.15.4/lib/zeus/load_tracking.rb:58:in `alias_method': undefined method `load_file' for class `Module' (NameError)\n        from /Users/ryanbigg/.gem/ruby/2.2.3/gems/zeus-0.15.4/lib/zeus/load_tracking.rb:58:in `singleton class'\n        from /Users/ryanbigg/.gem/ruby/2.2.3/gems/zeus-0.15.4/lib/zeus/load_tracking.rb:57:in `<module:YAML>'\n        from /Users/ryanbigg/.gem/ruby/2.2.3/gems/zeus-0.15.4/lib/zeus/load_tracking.rb:56:in `<top (required)>'\n        from /Users/ryanbigg/.rubies/ruby-2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:69:in `require'\n        from /Users/ryanbigg/.rubies/ruby-2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:69:in `require'\n        from /Users/ryanbigg/.gem/ruby/2.2.3/gems/zeus-0.15.4/lib/zeus.rb:13:in `<top (required)>'\n        from /Users/ryanbigg/.rubies/ruby-2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:69:in `require'\n        from /Users/ryanbigg/.rubies/ruby-2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:69:in `require'\n        from /Users/ryanbigg/.gem/ruby/2.2.3/gems/zeus-0.15.4/lib/zeus/rails.rb:12:in `<top (required)>'\n        from /Users/ryanbigg/.rubies/ruby-2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:128:in `require'\n        from /Users/ryanbigg/.rubies/ruby-2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:128:in `rescue in require'\n        from /Users/ryanbigg/.rubies/ruby-2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:39:in `require'\n```\n. Removing method_source 0.8.2 and using method_source 0.8.1 fixed this issue for me.\n. I just got this today. Following @ssoroka-se's advice, I see this:\n\n```\n2015/11/21 10:21:58.583514 [/Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:184] boot/(no PID) in unbooted state\n2015/11/21 10:21:58.584299 [/Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:372] boot/(no PID) running the root command now\n2015/11/21 10:21:58.739034 [/Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:383] boot/(no PID) root process exited with an error before it could boot: exit status 1; output was: /Users/ryanbigg/.gem/ruby/2.2.3/gems/zeus-0.15.4/lib/zeus/load_tracking.rb:58:in `alias_method': undefined method `load_file' for class `Module' (NameError)\n        from /Users/ryanbigg/.gem/ruby/2.2.3/gems/zeus-0.15.4/lib/zeus/load_tracking.rb:58:in `singleton class'\n        from /Users/ryanbigg/.gem/ruby/2.2.3/gems/zeus-0.15.4/lib/zeus/load_tracking.rb:57:in `<module:YAML>'\n        from /Users/ryanbigg/.gem/ruby/2.2.3/gems/zeus-0.15.4/lib/zeus/load_tracking.rb:56:in `<top (required)>'\n        from /Users/ryanbigg/.rubies/ruby-2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:69:in `require'\n        from /Users/ryanbigg/.rubies/ruby-2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:69:in `require'\n        from /Users/ryanbigg/.gem/ruby/2.2.3/gems/zeus-0.15.4/lib/zeus.rb:13:in `<top (required)>'\n        from /Users/ryanbigg/.rubies/ruby-2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:69:in `require'\n        from /Users/ryanbigg/.rubies/ruby-2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:69:in `require'\n        from /Users/ryanbigg/.gem/ruby/2.2.3/gems/zeus-0.15.4/lib/zeus/rails.rb:12:in `<top (required)>'\n        from /Users/ryanbigg/.rubies/ruby-2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:128:in `require'\n        from /Users/ryanbigg/.rubies/ruby-2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:128:in `rescue in require'\n        from /Users/ryanbigg/.rubies/ruby-2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:39:in `require'\n```\n. Removing method_source 0.8.2 and using method_source 0.8.1 fixed this issue for me.\n. ",
    "pietdaniel": "Im still receiving this error, I have a `zeus.json` which when I remove the error is resolved. I can also empty and reinstall my gemset which revolves the issue but this can be rather cumbersome. Here is the output from the zeus log:\n\n```\n2016/01/04 10:13:39.934241 [/Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:184] boot/(no PID) in unbooted state\n2016/01/04 10:13:39.934709 [/Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:372] boot/(no PID) running the root command now\n2016/01/04 10:13:40.705920 [/Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:383] boot/(no PID) root process exited with an error before it could boot: exit status 1; output was: /Users/piet/.rvm/gems/ruby-2.2.3@global/gems/bundler-1.10.6/lib/bundler/runtime.rb:34:in `block in setup': You have already activated faraday 0.9.2, but your Gemfile requires faraday 0.9.1. Prepending `bundle exec` to your command may solve this. (Gem::LoadError)\n        from /Users/piet/.rvm/gems/ruby-2.2.3@global/gems/bundler-1.10.6/lib/bundler/runtime.rb:19:in `setup'\n        from /Users/piet/.rvm/gems/ruby-2.2.3@global/gems/bundler-1.10.6/lib/bundler.rb:127:in `setup'\n        from /Users/piet/.rvm/gems/ruby-2.2.3@global/gems/bundler-1.10.6/lib/bundler/setup.rb:18:in `<top (required)>'\n        from /Users/piet/.rvm/rubies/ruby-2.2.3/lib/ruby/site_ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in `require'\n        from /Users/piet/.rvm/rubies/ruby-2.2.3/lib/ruby/site_ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in `require'\n```\n. I was on sierra with 0.15.4 and was not experiencing this \n\n``` go\n2016-10-11 15:56 zeus-darwin-amd64[86241] (FSEvents.framework) FSEventStreamStart: register_with_server: ERROR: f2d_register_rpc() => (null) (-22)\n```\n\nAfter upgrading to 0.15.10 the warning comes up.\n. Im still receiving this error, I have a `zeus.json` which when I remove the error is resolved. I can also empty and reinstall my gemset which revolves the issue but this can be rather cumbersome. Here is the output from the zeus log:\n\n```\n2016/01/04 10:13:39.934241 [/Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:184] boot/(no PID) in unbooted state\n2016/01/04 10:13:39.934709 [/Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:372] boot/(no PID) running the root command now\n2016/01/04 10:13:40.705920 [/Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:383] boot/(no PID) root process exited with an error before it could boot: exit status 1; output was: /Users/piet/.rvm/gems/ruby-2.2.3@global/gems/bundler-1.10.6/lib/bundler/runtime.rb:34:in `block in setup': You have already activated faraday 0.9.2, but your Gemfile requires faraday 0.9.1. Prepending `bundle exec` to your command may solve this. (Gem::LoadError)\n        from /Users/piet/.rvm/gems/ruby-2.2.3@global/gems/bundler-1.10.6/lib/bundler/runtime.rb:19:in `setup'\n        from /Users/piet/.rvm/gems/ruby-2.2.3@global/gems/bundler-1.10.6/lib/bundler.rb:127:in `setup'\n        from /Users/piet/.rvm/gems/ruby-2.2.3@global/gems/bundler-1.10.6/lib/bundler/setup.rb:18:in `<top (required)>'\n        from /Users/piet/.rvm/rubies/ruby-2.2.3/lib/ruby/site_ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in `require'\n        from /Users/piet/.rvm/rubies/ruby-2.2.3/lib/ruby/site_ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in `require'\n```\n. I was on sierra with 0.15.4 and was not experiencing this \n\n``` go\n2016-10-11 15:56 zeus-darwin-amd64[86241] (FSEvents.framework) FSEventStreamStart: register_with_server: ERROR: f2d_register_rpc() => (null) (-22)\n```\n\nAfter upgrading to 0.15.10 the warning comes up.\n. ",
    "richkettle": "I have found that this can occur when switching gemsets but not exiting the current dir.. +1\n. I have found that this can occur when switching gemsets but not exiting the current dir.. +1\n. ",
    "bf4": "For me, the issue was the json gem.  I have zeus installed outside of my app and not in the gemfile.\r\n\r\n```\r\nzeus --log ZEUS.LOG start\r\n```\r\n\r\n then `cat ZEUS.LOG` showed\r\n\r\n\r\n```\r\n~/.rvm/rubies/ruby-2.2.5/lib/ruby/site_ruby/2.2.0/rubygems/dependency.rb:315:in `to_specs': \r\nCould not find 'json' (= 1.8.6) - did find: [json-1.8.3,json-1.8.1] (Gem::LoadError)\r\n```\r\n\r\nthen `gem install json -v '1.8.6'` and I could start zeus again! \r\n\r\nOn CRuby 2.2.5.\r\n\r\nMy Gemfile has the json gem locked to 1.8.6, which I guess matters because of some breaking changes in that version. For me, the issue was the json gem.  I have zeus installed outside of my app and not in the gemfile.\r\n\r\n```\r\nzeus --log ZEUS.LOG start\r\n```\r\n\r\n then `cat ZEUS.LOG` showed\r\n\r\n\r\n```\r\n~/.rvm/rubies/ruby-2.2.5/lib/ruby/site_ruby/2.2.0/rubygems/dependency.rb:315:in `to_specs': \r\nCould not find 'json' (= 1.8.6) - did find: [json-1.8.3,json-1.8.1] (Gem::LoadError)\r\n```\r\n\r\nthen `gem install json -v '1.8.6'` and I could start zeus again! \r\n\r\nOn CRuby 2.2.5.\r\n\r\nMy Gemfile has the json gem locked to 1.8.6, which I guess matters because of some breaking changes in that version. ",
    "Catharz": "@bf4's solution resolved for me in a round-about way.\r\n\r\nThe logs pointed to having multiple versions of pry installed. The Gemfile one was earlier than the system Ruby version. Uninstalling the system Ruby version of pry resolved the issue.. @bf4's solution resolved for me in a round-about way.\r\n\r\nThe logs pointed to having multiple versions of pry installed. The Gemfile one was earlier than the system Ruby version. Uninstalling the system Ruby version of pry resolved the issue.. ",
    "mooreds": "So, I ran into this same issue, again with versions of gems (pry in particular, but I only went part way down the path of tracking the exact gems) being different in the system and in the Gemfile.lock.  I'd previously done a 'bundle update' and even when I re checked out the Gemfile.lock and did a bundle install, the newer versions were being picked up by zeus.\r\n\r\nFor future reference, I solved this by re-installing rvm to clean up my entire path, and then running bundle install.. So, I ran into this same issue, again with versions of gems (pry in particular, but I only went part way down the path of tracking the exact gems) being different in the system and in the Gemfile.lock.  I'd previously done a 'bundle update' and even when I re checked out the Gemfile.lock and did a bundle install, the newer versions were being picked up by zeus.\r\n\r\nFor future reference, I solved this by re-installing rvm to clean up my entire path, and then running bundle install.. ",
    "AnwarShah": "For me, the problem was I had coderay 1.12 and 1.11 installed, one for rails5 and another for rails4. I've installed both gems on default gemset and zeus was trying to use coderay 1.12 which caused problem. I found that by running `zeus --log /dev/stderr start` command.\r\n\r\nThen I've created another gemset for rails4 only and installed the gems again. Now, it's starting just fine, since I'm using this gemset.\r\n\r\nI used this guide to create the gemset. It's quite easy https://rvm.io/gemsets/creating. I experienced the same problem on Fedora 26 today. Though it was working on my Ubuntu. I just removed the Gemfile.lock file and used `bundle install`. It fixed the problem. For me, the problem was I had coderay 1.12 and 1.11 installed, one for rails5 and another for rails4. I've installed both gems on default gemset and zeus was trying to use coderay 1.12 which caused problem. I found that by running `zeus --log /dev/stderr start` command.\r\n\r\nThen I've created another gemset for rails4 only and installed the gems again. Now, it's starting just fine, since I'm using this gemset.\r\n\r\nI used this guide to create the gemset. It's quite easy https://rvm.io/gemsets/creating. I experienced the same problem on Fedora 26 today. Though it was working on my Ubuntu. I just removed the Gemfile.lock file and used `bundle install`. It fixed the problem. ",
    "markglenn": "I'm getting the same error on occasion, but not as common as @zelig.\n\nMac OS X 10.8.2, zeus 0.13.2, ruby 1.9.3p327, rails 3.2.11.  I'm not using Spork or the debugger.  I can get this to happen every time by running zelig's command, but killing it mid way with Ctrl-C.  This seems to always cause zeus to crash.\n. I'm getting the same error on occasion, but not as common as @zelig.\n\nMac OS X 10.8.2, zeus 0.13.2, ruby 1.9.3p327, rails 3.2.11.  I'm not using Spork or the debugger.  I can get this to happen every time by running zelig's command, but killing it mid way with Ctrl-C.  This seems to always cause zeus to crash.\n. ",
    "damien-roche": "I have it randomly appear (console, rake tasks, etc.)\n\nruby 1.9.3p286 (2012-10-12 revision 37165) [i686-linux]\nZeus 0.13.2\n\nThis, too, seems to happen when a command errors out.\n. Same `undefined method 'visit'` error as above. Zeus 0.13.3.rc2, rspec 2.13.1.\n. I have it randomly appear (console, rake tasks, etc.)\n\nruby 1.9.3p286 (2012-10-12 revision 37165) [i686-linux]\nZeus 0.13.2\n\nThis, too, seems to happen when a command errors out.\n. Same `undefined method 'visit'` error as above. Zeus 0.13.3.rc2, rspec 2.13.1.\n. ",
    "jmondo": "I'm having the same issue with 1.9.3 and latest zeus. Running via rubytest in sublime. \n\nIt is happening consistently when I run a test, and then run another test before the first finishes. Generally this kills the first and starts another, but with zeus enabled, I get \"clienthandler.go:103: write unix : broken pipe\"\n\nI'm using test/unit, not rspec.\n. I'm having the same issue with 1.9.3 and latest zeus. Running via rubytest in sublime. \n\nIt is happening consistently when I run a test, and then run another test before the first finishes. Generally this kills the first and starts another, but with zeus enabled, I get \"clienthandler.go:103: write unix : broken pipe\"\n\nI'm using test/unit, not rspec.\n. ",
    "alexandrule": "I installed again this gem and now works.\n. I installed again this gem and now works.\n. ",
    "jnv": "I have a similar problem with RSpec and shared examples. Tests run fine (even the return code is 0), it just outputs the stack trace at the end:\n\n```\n[\u2026]/lib/ruby/gems/1.9.1/gems/rspec-core-2.12.2/lib/rspec/core/example_group.rb:166:in `find_and_eval_shared': Could not find shared examples \"authorized controller\" (ArgumentError)\n    from [\u2026]/lib/ruby/gems/1.9.1/gems/rspec-core-2.12.2/lib/rspec/core/example_group.rb:118:in `block in it_behaves_like'\n    from [\u2026]/lib/ruby/gems/1.9.1/gems/rspec-core-2.12.2/lib/rspec/core/example_group.rb:244:in `module_eval'\n    from [\u2026]/lib/ruby/gems/1.9.1/gems/rspec-core-2.12.2/lib/rspec/core/example_group.rb:244:in `subclass'\n    from [\u2026]/lib/ruby/gems/1.9.1/gems/rspec-core-2.12.2/lib/rspec/core/example_group.rb:230:in `describe'\n    from [\u2026]/lib/ruby/gems/1.9.1/gems/rspec-core-2.12.2/lib/rspec/core/example_group.rb:117:in `it_behaves_like'\n    from [\u2026]/spec/controllers/events_controller_spec.rb:62:in `block (2 levels) in <top (required)>'\n\u2026\n```\n\nThis happens even when I `require` the shared examples file explicitly in the spec file. The funny thing is, that the shared examples run just fine, so it's just that ugly, long stack trace which bothers me.\n\nMaybe the problem has something to do with file loading?\n. I have a similar problem with RSpec and shared examples. Tests run fine (even the return code is 0), it just outputs the stack trace at the end:\n\n```\n[\u2026]/lib/ruby/gems/1.9.1/gems/rspec-core-2.12.2/lib/rspec/core/example_group.rb:166:in `find_and_eval_shared': Could not find shared examples \"authorized controller\" (ArgumentError)\n    from [\u2026]/lib/ruby/gems/1.9.1/gems/rspec-core-2.12.2/lib/rspec/core/example_group.rb:118:in `block in it_behaves_like'\n    from [\u2026]/lib/ruby/gems/1.9.1/gems/rspec-core-2.12.2/lib/rspec/core/example_group.rb:244:in `module_eval'\n    from [\u2026]/lib/ruby/gems/1.9.1/gems/rspec-core-2.12.2/lib/rspec/core/example_group.rb:244:in `subclass'\n    from [\u2026]/lib/ruby/gems/1.9.1/gems/rspec-core-2.12.2/lib/rspec/core/example_group.rb:230:in `describe'\n    from [\u2026]/lib/ruby/gems/1.9.1/gems/rspec-core-2.12.2/lib/rspec/core/example_group.rb:117:in `it_behaves_like'\n    from [\u2026]/spec/controllers/events_controller_spec.rb:62:in `block (2 levels) in <top (required)>'\n\u2026\n```\n\nThis happens even when I `require` the shared examples file explicitly in the spec file. The funny thing is, that the shared examples run just fine, so it's just that ugly, long stack trace which bothers me.\n\nMaybe the problem has something to do with file loading?\n. ",
    "chinigo": "I have this problem as well. Return code is 0, all tests pass, but I get a backtrace about Capybara methods being undefined.\n\n```\n$ zeus rspec spec/acceptance/feature_spec.rb \n.......\n\nFinished in 10.04 seconds\n7 examples, 0 failures\n/Users/chinigo/workspace/project/spec/acceptance/feature_spec.rb:8:in `block in <top (required)>': undefined method `background' for #<Class:0x007fc9cd226b10> (NoMethodError)\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/rspec-core-2.11.1/lib/rspec/core/example_group.rb:238:in `module_eval'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/rspec-core-2.11.1/lib/rspec/core/example_group.rb:238:in `subclass'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/rspec-core-2.11.1/lib/rspec/core/example_group.rb:224:in `describe'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/rspec-core-2.11.1/lib/rspec/core/dsl.rb:18:in `describe'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/capybara-1.1.4/lib/capybara/rspec/features.rb:19:in `feature'\n    from /Users/chinigo/workspace/project/spec/acceptance/feature_spec.rb:3:in `<top (required)>'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus/load_tracking.rb:50:in `load'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus/load_tracking.rb:50:in `load'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus/load_tracking.rb:43:in `load'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:245:in `block in load'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:236:in `load_dependency'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:245:in `load'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/rspec-core-2.11.1/lib/rspec/core/configuration.rb:780:in `block in load_spec_files'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/rspec-core-2.11.1/lib/rspec/core/configuration.rb:780:in `map'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/rspec-core-2.11.1/lib/rspec/core/configuration.rb:780:in `load_spec_files'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/rspec-core-2.11.1/lib/rspec/core/command_line.rb:22:in `run'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/rspec-core-2.11.1/lib/rspec/core/runner.rb:69:in `run'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/rspec-core-2.11.1/lib/rspec/core/runner.rb:8:in `block in autorun'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:92:in `fork'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:92:in `command'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:69:in `block (3 levels) in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:69:in `fork'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:69:in `block (2 levels) in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:63:in `each'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:63:in `block in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:61:in `loop'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:61:in `go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:67:in `fork'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:63:in `each'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:63:in `block in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:61:in `loop'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:61:in `go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:67:in `fork'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:63:in `each'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:63:in `block in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:61:in `loop'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:61:in `go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:67:in `fork'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:63:in `each'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:63:in `block in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:61:in `loop'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:61:in `go'\n    from -e:1:in `<main>'\n```\n. I have this problem as well. Return code is 0, all tests pass, but I get a backtrace about Capybara methods being undefined.\n\n```\n$ zeus rspec spec/acceptance/feature_spec.rb \n.......\n\nFinished in 10.04 seconds\n7 examples, 0 failures\n/Users/chinigo/workspace/project/spec/acceptance/feature_spec.rb:8:in `block in <top (required)>': undefined method `background' for #<Class:0x007fc9cd226b10> (NoMethodError)\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/rspec-core-2.11.1/lib/rspec/core/example_group.rb:238:in `module_eval'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/rspec-core-2.11.1/lib/rspec/core/example_group.rb:238:in `subclass'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/rspec-core-2.11.1/lib/rspec/core/example_group.rb:224:in `describe'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/rspec-core-2.11.1/lib/rspec/core/dsl.rb:18:in `describe'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/capybara-1.1.4/lib/capybara/rspec/features.rb:19:in `feature'\n    from /Users/chinigo/workspace/project/spec/acceptance/feature_spec.rb:3:in `<top (required)>'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus/load_tracking.rb:50:in `load'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus/load_tracking.rb:50:in `load'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus/load_tracking.rb:43:in `load'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:245:in `block in load'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:236:in `load_dependency'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/activesupport-3.2.11/lib/active_support/dependencies.rb:245:in `load'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/rspec-core-2.11.1/lib/rspec/core/configuration.rb:780:in `block in load_spec_files'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/rspec-core-2.11.1/lib/rspec/core/configuration.rb:780:in `map'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/rspec-core-2.11.1/lib/rspec/core/configuration.rb:780:in `load_spec_files'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/rspec-core-2.11.1/lib/rspec/core/command_line.rb:22:in `run'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/rspec-core-2.11.1/lib/rspec/core/runner.rb:69:in `run'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/rspec-core-2.11.1/lib/rspec/core/runner.rb:8:in `block in autorun'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:92:in `fork'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:92:in `command'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:69:in `block (3 levels) in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:69:in `fork'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:69:in `block (2 levels) in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:63:in `each'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:63:in `block in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:61:in `loop'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:61:in `go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:67:in `fork'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:63:in `each'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:63:in `block in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:61:in `loop'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:61:in `go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:67:in `fork'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:63:in `each'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:63:in `block in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:61:in `loop'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:61:in `go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (3 levels) in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:67:in `fork'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:67:in `block (2 levels) in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:63:in `each'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:63:in `block in go'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:61:in `loop'\n    from /Users/chinigo/.rvm/gems/ruby-1.9.3-p194@client/gems/zeus-0.13.2/lib/zeus.rb:61:in `go'\n    from -e:1:in `<main>'\n```\n. ",
    "jastix": "@Govinda-Fichtner, try to remove/comment line \n\n``` ruby\nrequire 'rspec/autorun'\n```\n\nin spec_helper.rb.\nI just had the same issue and it helped me.\n. @Govinda-Fichtner, try to remove/comment line \n\n``` ruby\nrequire 'rspec/autorun'\n```\n\nin spec_helper.rb.\nI just had the same issue and it helped me.\n. ",
    "freemanoid": ":+1: \n. :+1: \n. ",
    "hSATAC": "The config in `zeus.json` should be\n\n``` ruby\n\"test_helper\": {\"test\": [\"testrb\"], \"rspec\": []}\n```\n. The config in `zeus.json` should be\n\n``` ruby\n\"test_helper\": {\"test\": [\"testrb\"], \"rspec\": []}\n```\n. ",
    "garymh": "Is there a workaround for the opposite direction (using minitest, not rspec)? I'm experiencing issue #234 using minitest.\n. Is there a workaround for the opposite direction (using minitest, not rspec)? I'm experiencing issue #234 using minitest.\n. ",
    "nicholasjhenry": "I updated the issue -- I had transposed version numbers. I stated 2.3.11, should have been 3.2.11.\n. I've revisited this with the following versions on a new app:\n\nzeus (0.13.3.rc2)\nrails (3.2.12)\ncucumber-rails (1.3.0)\ncucumber (1.2.3)\n\nAnd `zeus cucumber` executes successfully.\n. Yay, I think this was the cause of the issue I originally posted. The cucumber-rails README states that required: false to be set:\n\nhttps://github.com/cucumber/cucumber-rails\n\n```\ngroup :test do\n  gem 'cucumber-rails', :require => false\n  # database_cleaner is not required, but highly recommended\n  gem 'database_cleaner'\nend\n```\n. I updated the issue -- I had transposed version numbers. I stated 2.3.11, should have been 3.2.11.\n. I've revisited this with the following versions on a new app:\n\nzeus (0.13.3.rc2)\nrails (3.2.12)\ncucumber-rails (1.3.0)\ncucumber (1.2.3)\n\nAnd `zeus cucumber` executes successfully.\n. Yay, I think this was the cause of the issue I originally posted. The cucumber-rails README states that required: false to be set:\n\nhttps://github.com/cucumber/cucumber-rails\n\n```\ngroup :test do\n  gem 'cucumber-rails', :require => false\n  # database_cleaner is not required, but highly recommended\n  gem 'database_cleaner'\nend\n```\n. ",
    "ayork": "In case anyone else runs into this issue, @kbaum's simple fix worked for me.\n\nzeus (0.13.3)\ncucumber (1.3.1)\ncucumber-rails (1.3.1)\n. In case anyone else runs into this issue, @kbaum's simple fix worked for me.\n\nzeus (0.13.3)\ncucumber (1.3.1)\ncucumber-rails (1.3.1)\n. ",
    "zombor": "I'm getting this issue as well. It doesn't look like the rails app is loaded when the `features/support` files are loaded. I get an error like: `undefined method 'prepend_before_filter' for ApplicationController:Class (NoMethodError)`.\n\nI'm running zeus-0.13.4-pre2 (since I'm running in a VM, I need the `ZEUSSOCK` stuff). Other relevant gems:\n\ncucumber (1.3.1)\ncucumber-rails (1.3.1)\nrails (3.2.12)\n\nI also have `gem 'cucumber-rails', :require => false` in my gemfile.\n\nI think the problem is in `lib/zeus/load_tracking.rb#50`\n. I'm getting this issue as well. It doesn't look like the rails app is loaded when the `features/support` files are loaded. I get an error like: `undefined method 'prepend_before_filter' for ApplicationController:Class (NoMethodError)`.\n\nI'm running zeus-0.13.4-pre2 (since I'm running in a VM, I need the `ZEUSSOCK` stuff). Other relevant gems:\n\ncucumber (1.3.1)\ncucumber-rails (1.3.1)\nrails (3.2.12)\n\nI also have `gem 'cucumber-rails', :require => false` in my gemfile.\n\nI think the problem is in `lib/zeus/load_tracking.rb#50`\n. ",
    "jayroh": "This is a big issue here as well.  There are several things that need to happen in my test suite depending on environment and when things can/will only run as development it poses a bit of a problem.\n. @robotpistol and @ranmocy both of your comments helped me get things situated - so thank you _very_ much. For the sake of sharing, this is what worked for me (for this project, for now, I'm still using cucumber so I adjusted as needed: \n\n`zeus.json`:\n\n``` json\n{\n  \"command\": \"ruby -rubygems -r./custom_plan -eZeus.go\",\n\n  \"plan\": {\n    \"boot\": {\n      \"default_bundle\": {\n        \"development_environment\": {\n          \"prerake\": {\"rake\": []},\n          \"runner\": [\"r\"],\n          \"console\": [\"c\"],\n          \"server\": [\"s\"],\n          \"generate\": [\"g\"],\n          \"destroy\": [\"d\"],\n          \"dbconsole\": []\n        }\n      },\n      \"default_bundle_with_test_env\": {\n        \"test_environment\": {\n          \"cucumber_environment\": {\"cucumber\": []},\n          \"test_helper\": {\"test\": [\"rspec\", \"testrb\"]},\n          \"test_rake\":   [\"tr\"]\n        }\n      }\n    }\n  }\n}\n```\n\n`custom_plan.rb`:\n\n``` ruby\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n  def default_bundle_with_test_env\n    ::Rails.env = 'test'\n    ENV['RAILS_ENV'] = 'test'\n    default_bundle\n  end\n\n  def test_rake\n    prerake\n    rake\n  end\nend\n\nZeus.plan = CustomPlan.new\n```\n. This is a big issue here as well.  There are several things that need to happen in my test suite depending on environment and when things can/will only run as development it poses a bit of a problem.\n. @robotpistol and @ranmocy both of your comments helped me get things situated - so thank you _very_ much. For the sake of sharing, this is what worked for me (for this project, for now, I'm still using cucumber so I adjusted as needed: \n\n`zeus.json`:\n\n``` json\n{\n  \"command\": \"ruby -rubygems -r./custom_plan -eZeus.go\",\n\n  \"plan\": {\n    \"boot\": {\n      \"default_bundle\": {\n        \"development_environment\": {\n          \"prerake\": {\"rake\": []},\n          \"runner\": [\"r\"],\n          \"console\": [\"c\"],\n          \"server\": [\"s\"],\n          \"generate\": [\"g\"],\n          \"destroy\": [\"d\"],\n          \"dbconsole\": []\n        }\n      },\n      \"default_bundle_with_test_env\": {\n        \"test_environment\": {\n          \"cucumber_environment\": {\"cucumber\": []},\n          \"test_helper\": {\"test\": [\"rspec\", \"testrb\"]},\n          \"test_rake\":   [\"tr\"]\n        }\n      }\n    }\n  }\n}\n```\n\n`custom_plan.rb`:\n\n``` ruby\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n  def default_bundle_with_test_env\n    ::Rails.env = 'test'\n    ENV['RAILS_ENV'] = 'test'\n    default_bundle\n  end\n\n  def test_rake\n    prerake\n    rake\n  end\nend\n\nZeus.plan = CustomPlan.new\n```\n. ",
    "robotpistol": "I moved my test tasks stuff under a variant of default_bundle task that sets the RAILS_ENV first.  so far it seems to be helping quite a bit.  Otherwise your gems will be loaded under the \"development\" Rails environment and then changed to \"test\" right before the environment is loaded.\n. Add this snippet to your custom_plan.rb and modify your zeus.json moving the test stuff under this rather than the \"default_bundle\" step.\n\n``` ruby\ndef default_bundle_with_test_env\n    # Zeus by default loads the initial bundles with the development env.\n    # This seems to break a lot of tests, so set the environment to test sooner.\n\n    # Set the environment to test before we load the default bundle\n    ::Rails.env = ENV['RAILS_ENV'] = 'test'\n\n    # Mehtod built into Zeus::Rails\n    default_bundle\n  end\n```\n. My zeus.json looks like. I removed the cucumber stuff, since I'm not using it at the moment.\n\n``` json\n{\n  \"command\": \"ruby -rubygems -r./custom_plan -eZeus.go\",\n\n  \"plan\": {\n    \"boot\": {\n      \"default_bundle\": {\n        \"development_environment\": {\n          \"prerake\": {\"rake\": []},\n          \"runner\": [\"r\"],\n          \"console\": [\"c\"],\n          \"server\": [\"s\"],\n          \"generate\": [\"g\"],\n          \"destroy\": [\"d\"],\n          \"dbconsole\": []\n        }\n      },\n      \"default_bundle_with_test_env\": {\n        \"test_environment\": {\n          \"test_helper\": {\"test\": [\"rspec\", \"testrb\"]}\n        }\n      }\n    }\n  }\n}\n```\n. I'm having the same issue.  We tried using a vagrant shared directory, but it makes everything absurdly slow.\n. I moved my test tasks stuff under a variant of default_bundle task that sets the RAILS_ENV first.  so far it seems to be helping quite a bit.  Otherwise your gems will be loaded under the \"development\" Rails environment and then changed to \"test\" right before the environment is loaded.\n. Add this snippet to your custom_plan.rb and modify your zeus.json moving the test stuff under this rather than the \"default_bundle\" step.\n\n``` ruby\ndef default_bundle_with_test_env\n    # Zeus by default loads the initial bundles with the development env.\n    # This seems to break a lot of tests, so set the environment to test sooner.\n\n    # Set the environment to test before we load the default bundle\n    ::Rails.env = ENV['RAILS_ENV'] = 'test'\n\n    # Mehtod built into Zeus::Rails\n    default_bundle\n  end\n```\n. My zeus.json looks like. I removed the cucumber stuff, since I'm not using it at the moment.\n\n``` json\n{\n  \"command\": \"ruby -rubygems -r./custom_plan -eZeus.go\",\n\n  \"plan\": {\n    \"boot\": {\n      \"default_bundle\": {\n        \"development_environment\": {\n          \"prerake\": {\"rake\": []},\n          \"runner\": [\"r\"],\n          \"console\": [\"c\"],\n          \"server\": [\"s\"],\n          \"generate\": [\"g\"],\n          \"destroy\": [\"d\"],\n          \"dbconsole\": []\n        }\n      },\n      \"default_bundle_with_test_env\": {\n        \"test_environment\": {\n          \"test_helper\": {\"test\": [\"rspec\", \"testrb\"]}\n        }\n      }\n    }\n  }\n}\n```\n. I'm having the same issue.  We tried using a vagrant shared directory, but it makes everything absurdly slow.\n. ",
    "mbhnyc": "+1\n. @robotpistol can you post your code for this config?\n. Thanks for the configs guys!  Long story short though, there's no good way for me to use an environment that isn't named \"developlent\"?\n. So here's what i'm trying to do :\n\n```\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n\n  def local_bundle #this appears to not be taking effect\n    ::Rails.env = 'local'\n    ENV['RAILS_ENV'] = 'local'\n    default_bundle\n  end\n\n  def local_environment\n    development_environment\n  end\n\n# test stuff below\n```\n\n```\n{\n  \"command\": \"ruby -rubygems -r./custom_plan -eZeus.go\",\n  \"plan\": {\n    \"boot\": {\n      \"local_bundle\": {\n        \"local_environment\": {\n          \"prerake\": {\"rake\": []},\n          \"console\": [\"c\"],\n          \"generate\": [\"g\"],\n          \"server\": [\"s\"]\n        }\n      },\n      \"test_bundle\": {\n        \"minitest_environment\": { \"minitest\": [] }\n      }\n    }\n  }\n}\n```\n\nBut the error I get: \n\n```\n/Users/mhensrud/.rvm/gems/ruby-1.9.3-p0/gems/activerecord-3.2.12/lib/active_record/connection_adapters/abstract/connection_specification.rb:47:in resolve_hash_connection: database configuration does not specify adapter (ActiveRecord::AdapterNotSpecified)\n```\n\nsuggests the bundle is attempting to load under Rails.env.development, (which doesn't exist in database.yml).  \n. I'm having a basically identical issue.\n. Glad I'm not the only one!\n. Not I!\n. extra +1 - no one's found a definitive cause for this yet? it's rather urgh inducing.  :dash: \n. FIXED!\n\nI was updating minitest-rails and looking for ways to make my tests more efficient, and fixed up my custom_plan ... looking closely I noticed:\n\n```\ndef test_environment bundler_group, load_path\n    Bundler.require :test, bundler_group\n    require APP_PATH\n    $rails_rake_task = 'yup' # lie to skip eager loading\n    ::Rails.application.require_environment!\n    $rails_rake_task = nil \n    $LOAD_PATH.unshift \".\", \"./lib\", load_path\n  end\n\n  def minitest_environment\n    test_environment :test, \"./test\"\n    require 'minitest_helper'\n  end\n```\n\nWhich surely was copied and pasted from somewhere.\n\nAnyway, the key is here: `Bundler.require :test, bundler_group` which was basically requiring my environment twice.  Switching to `Bundler.require :test` fixed this completely\n\nMy New shiny custom_plan:\n\n```\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n\n  def test_bundle\n    ::Rails.env = ENV['RAILS_ENV'] = 'test'\n    default_bundle\n  end\n\n  def test_environment\n    Bundler.require :test\n    require APP_PATH\n    $rails_rake_task = 'yup' # lie to skip eager loading\n    ::Rails.application.require_environment!\n    $rails_rake_task = nil\n    $LOAD_PATH.unshift \".\", \"./lib\", \"./test\"\n    require 'test_helper'\n  end\n\nend\n\nZeus.plan = CustomPlan.new\n```\n. +1\n. @robotpistol can you post your code for this config?\n. Thanks for the configs guys!  Long story short though, there's no good way for me to use an environment that isn't named \"developlent\"?\n. So here's what i'm trying to do :\n\n```\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n\n  def local_bundle #this appears to not be taking effect\n    ::Rails.env = 'local'\n    ENV['RAILS_ENV'] = 'local'\n    default_bundle\n  end\n\n  def local_environment\n    development_environment\n  end\n\n# test stuff below\n```\n\n```\n{\n  \"command\": \"ruby -rubygems -r./custom_plan -eZeus.go\",\n  \"plan\": {\n    \"boot\": {\n      \"local_bundle\": {\n        \"local_environment\": {\n          \"prerake\": {\"rake\": []},\n          \"console\": [\"c\"],\n          \"generate\": [\"g\"],\n          \"server\": [\"s\"]\n        }\n      },\n      \"test_bundle\": {\n        \"minitest_environment\": { \"minitest\": [] }\n      }\n    }\n  }\n}\n```\n\nBut the error I get: \n\n```\n/Users/mhensrud/.rvm/gems/ruby-1.9.3-p0/gems/activerecord-3.2.12/lib/active_record/connection_adapters/abstract/connection_specification.rb:47:in resolve_hash_connection: database configuration does not specify adapter (ActiveRecord::AdapterNotSpecified)\n```\n\nsuggests the bundle is attempting to load under Rails.env.development, (which doesn't exist in database.yml).  \n. I'm having a basically identical issue.\n. Glad I'm not the only one!\n. Not I!\n. extra +1 - no one's found a definitive cause for this yet? it's rather urgh inducing.  :dash: \n. FIXED!\n\nI was updating minitest-rails and looking for ways to make my tests more efficient, and fixed up my custom_plan ... looking closely I noticed:\n\n```\ndef test_environment bundler_group, load_path\n    Bundler.require :test, bundler_group\n    require APP_PATH\n    $rails_rake_task = 'yup' # lie to skip eager loading\n    ::Rails.application.require_environment!\n    $rails_rake_task = nil \n    $LOAD_PATH.unshift \".\", \"./lib\", load_path\n  end\n\n  def minitest_environment\n    test_environment :test, \"./test\"\n    require 'minitest_helper'\n  end\n```\n\nWhich surely was copied and pasted from somewhere.\n\nAnyway, the key is here: `Bundler.require :test, bundler_group` which was basically requiring my environment twice.  Switching to `Bundler.require :test` fixed this completely\n\nMy New shiny custom_plan:\n\n```\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n\n  def test_bundle\n    ::Rails.env = ENV['RAILS_ENV'] = 'test'\n    default_bundle\n  end\n\n  def test_environment\n    Bundler.require :test\n    require APP_PATH\n    $rails_rake_task = 'yup' # lie to skip eager loading\n    ::Rails.application.require_environment!\n    $rails_rake_task = nil\n    $LOAD_PATH.unshift \".\", \"./lib\", \"./test\"\n    require 'test_helper'\n  end\n\nend\n\nZeus.plan = CustomPlan.new\n```\n. ",
    "ranmocy": "@robotpistol I extend your code, for rails server and rake in test environment.\nWorks as my test.\n\nWondering whether they can be default plans in Zeus, so that my Guard-rails gem can adapt to it.\n\n``` ruby\nclass CustomPlan < Zeus::Rails\n\n  def default_bundle_with_test_env\n    # Zeus by default loads the initial bundles with the development env.\n    # This seems to break a lot of tests, so set the environment to test sooner.\n\n    # Set the environment to test before we load the default bundle\n    ::Rails.env = ENV['RAILS_ENV'] = 'test'\n\n    # Mehtod built into Zeus::Rails\n    default_bundle\n  end\n\n  def test_server\n    server\n  end\n\n  def test_rake\n    prerake\n    rake\n  end\nend\n```\n\n``` json\n{\n  \"command\": \"ruby -rubygems -r./custom_plan -eZeus.go\",\n\n  \"plan\": {\n    \"boot\": {\n      \"default_bundle\": {\n        \"development_environment\": {\n          \"prerake\": {\"rake\": []},\n          \"runner\": [\"r\"],\n          \"console\": [\"c\"],\n          \"server\": [\"s\"],\n          \"generate\": [\"g\"],\n          \"destroy\": [\"d\"],\n          \"dbconsole\": []\n        }\n      },\n      \"default_bundle_with_test_env\": {\n        \"test_environment\": {\n          \"test_helper\": {\"test\": [\"rspec\", \"testrb\"]},\n          \"test_server\": [\"ts\"],\n          \"test_rake\":   [\"tr\"]\n        }\n      }\n    }\n  }\n}\n```\n. @mbhnyc Try to overwrite the plans in CustomPlan. Easy to hack.\n. @mbhnyc I guess development_environment specify the RAILS_ENV inside of it.\nSo maybe you should copy the code inside of `development_environment` and hack it instead of just call it in `local_environment`.\n. @robotpistol I extend your code, for rails server and rake in test environment.\nWorks as my test.\n\nWondering whether they can be default plans in Zeus, so that my Guard-rails gem can adapt to it.\n\n``` ruby\nclass CustomPlan < Zeus::Rails\n\n  def default_bundle_with_test_env\n    # Zeus by default loads the initial bundles with the development env.\n    # This seems to break a lot of tests, so set the environment to test sooner.\n\n    # Set the environment to test before we load the default bundle\n    ::Rails.env = ENV['RAILS_ENV'] = 'test'\n\n    # Mehtod built into Zeus::Rails\n    default_bundle\n  end\n\n  def test_server\n    server\n  end\n\n  def test_rake\n    prerake\n    rake\n  end\nend\n```\n\n``` json\n{\n  \"command\": \"ruby -rubygems -r./custom_plan -eZeus.go\",\n\n  \"plan\": {\n    \"boot\": {\n      \"default_bundle\": {\n        \"development_environment\": {\n          \"prerake\": {\"rake\": []},\n          \"runner\": [\"r\"],\n          \"console\": [\"c\"],\n          \"server\": [\"s\"],\n          \"generate\": [\"g\"],\n          \"destroy\": [\"d\"],\n          \"dbconsole\": []\n        }\n      },\n      \"default_bundle_with_test_env\": {\n        \"test_environment\": {\n          \"test_helper\": {\"test\": [\"rspec\", \"testrb\"]},\n          \"test_server\": [\"ts\"],\n          \"test_rake\":   [\"tr\"]\n        }\n      }\n    }\n  }\n}\n```\n. @mbhnyc Try to overwrite the plans in CustomPlan. Easy to hack.\n. @mbhnyc I guess development_environment specify the RAILS_ENV inside of it.\nSo maybe you should copy the code inside of `development_environment` and hack it instead of just call it in `local_environment`.\n. ",
    "inestyne": "Here's a custom plan i use to run zeus under a different development environment\n\n``` ruby\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n\n  def development_environment\n    Bundler.require(:development)\n    ::Rails.env = ENV['RAILS_ENV'] = \"alpha\"\n    require APP_PATH\n    ::Rails.application.require_environment!\n  end\n\nend\n\nZeus.plan = CustomPlan.new\n```\n. Here's a custom plan i use to run zeus under a different development environment\n\n``` ruby\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n\n  def development_environment\n    Bundler.require(:development)\n    ::Rails.env = ENV['RAILS_ENV'] = \"alpha\"\n    require APP_PATH\n    ::Rails.application.require_environment!\n  end\n\nend\n\nZeus.plan = CustomPlan.new\n```\n. ",
    "jc00ke": "As I was shutting down my terminal windows I saw that `tail` could not use `inotify` because there were too many files.\n\n```\ntail: inotify cannot be used, reverting to polling: Too many open files\n```\n\nSo I ran\n\n```\n$> find . -type f | wc -l\n12513\n```\n\nAfter some more digging I found a proverbial butt-load of files in `public/uploads` and `tmp/`.\n![platform-disk-usage-analyzer](https://f.cloud.github.com/assets/18191/105386/239797d6-69ac-11e2-8d0d-0409670e2739.png)\n\nI thought removing all these files would help but it did not. I still get the `FS watcher process crashed: signal 6 (core dumped)` error message.\n. It doesn't reload when touching every `AR` model, only some.\n. As I was shutting down my terminal windows I saw that `tail` could not use `inotify` because there were too many files.\n\n```\ntail: inotify cannot be used, reverting to polling: Too many open files\n```\n\nSo I ran\n\n```\n$> find . -type f | wc -l\n12513\n```\n\nAfter some more digging I found a proverbial butt-load of files in `public/uploads` and `tmp/`.\n![platform-disk-usage-analyzer](https://f.cloud.github.com/assets/18191/105386/239797d6-69ac-11e2-8d0d-0409670e2739.png)\n\nI thought removing all these files would help but it did not. I still get the `FS watcher process crashed: signal 6 (core dumped)` error message.\n. It doesn't reload when touching every `AR` model, only some.\n. ",
    "martinklepsch": "Having the same problem here. Identic Stacktrace. Restarting now :smile: \n. Having the same problem here. Identic Stacktrace. Restarting now :smile: \n. ",
    "metcalf": "Fixed in https://github.com/burke/zeus/pull/550\n. Unfortunately `fork` is pretty fundamental to what Zeus does today so JRuby support isn't planned (per #297). Sorry!\n. @doy: it looks like we still need to land this before killing off our fork right? If so, is this up to date and ready for a re-review?\n. @latortuga: that panic looks unrelated to the changes in this diff. This is rebased on upstream and the new integration tests exercise the code that paniced for you.\n\n@doy: This lgtm and matches what we've been running successfully at Stripe for months so I'm pretty confident in it.\n. I'm going to close this for now since it has a merge conflict and we're no longer using this plugin internally. Feel free to re-open if you want to rebase and fix the comment for merging.\n. @csquared: I've now vendored `M` so that we can apply stripe-specific patches. I think given that `--reporter` is specific to Minitest and this library is trying to be general across multiple test frameworks, we should close this out. \n\nFeel free to reopen if you think this is valuable to get into upstream for non-Stripe users!\n. cc @antifuchs \n. I haven't tried this out locally since I didn't have a good process for building it. I would not merge as-is until one of us has had a chance to give it a smoke test.\n. Rebased on master to pick up integration tests and ready for review @antifuchs!\n. cc @antifuchs \n. Thanks! All the more incentive to get a local test environment set up so I\ncan confidently land some of these.\nOn May 6, 2016 3:26 PM, \"Burke Libbey\" notifications@github.com wrote:\n\n> Sure thing -- done.\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/burke/zeus/pull/547#issuecomment-217578643\n. I'm going to close this one for now -- I think there are far more important race conditions in this bit of the state transition to deal with (e.g. it takes some time for the OS to set up file monitoring and we're not currently blocking on that).\n. Happy to merge! Can you confirm that you were able to run Zeus with this code?\n. @russelldavis: I just landed an integration test on master that should give us at least some confidence in new code. Can you rebase on master so that this PR will run tests?\n. r? @antifuchs \n. OK, I'll push amended commits a few times to ensure we can get a nice long string of passes. If that doesn't work, I'll look into the STREAM approach.\n. I wasn't able to get the test to pass reliably when changing two files. I reduced it to only changing a single `.rb` file and it nows seems to pass reliably. I'm going to land this and aim to improve things from there.\n. r? @ptarjan\n. Happy to add them! For a bit of extra context, I'm in the process of getting us off of our fork at https://github.com/stripe/zeus. As soon as I confirm that current HEAD works for us, I'll ping you with some release notes. \n. @latortuga: I believe this is ready for release.\n. For a bit more context, I want to land this which will get Stripe off our private fork and into mainline. If that goes smoothly, I'll land the bevy of other PRs I have out and cut a release for that. I want to separate the two releases to identify any problems with switching to upstream -- hearing from internal users will probably be my best feedback channel for bugs.\n. I released this internally and it has been going well. I'm blocking on incrementing the version again for landing a bunch more code. I'm going to go ahead and land this, followed by a series of other PRs and another bump to 0.15.7. \n\n@latortuga: whenever you get a chance you can publish as many of the minor versions as you feel appropriate. If you don't like me incrementing the version number out-of-sync with publishing then I'm going to have to do separately versioned internal releases \ud83d\ude22 .\n. @latortuga would love to get your take on this since it's a meaningful change to how zeus is built.\n. Going to go ahead and land this since I've discussed it with @antifuchs and I'm waiting on it for another PR. Happy to discuss further if you have concerns!\n. @ptarjan, up for reviewing this? You figured out our `require` monkey patch in the first place.\n. It looks like the Travis failure was some kind of hiccup on their end. AFAICT, SVG is the recommended thing these days.\n. r? @ptarjan\n. r? @ptarjan\ncc @jeremydhoon\n. I have a proposed fix in https://github.com/burke/zeus/issues/570 and am awaiting some feedback. Sorry for the delay in getting something out!\n. Released 0.15.10 with a fix for #570. Please report any fresh issues!\n. r? @ptarjan\n. Yeaa.... all those magic numbers were micro-optimizations that made tests run 1 second faster. Totally not worth the potential for confusion. I brought back the public `DefaultFileChangeDelay` and use that consistently.\n. Having gone and written this, I now think the right approach would be to have a single \"command\" goroutine managing the booting/killing of all child processes. Separate SlaveNode goroutines would exist only to wait on sockets and publish messages onto a channel for the command goroutine. Given that this diff seems to solve and immediate problem we're having, I'm still inclined to land it and save the larger refactor for another day (month?).\n. r? @ptarjan\n\nThe meat is in  3ad3817. The last two commits (7d7504b and b9afd75) are somewhat optional, tell me if you think they should stay in.\n. After testing this for about a week with a few developers at Stripe, this appears to be much more stable. I'm going to land this, cut an internal release and distribute to the whole company. I'll follow shortly with a public release when we resolve https://github.com/burke/zeus/issues/570.\n. Ah @burke I think this is https://github.com/burke/ttyutils/pull/1. My best guess is that you built 0.15.4 with a version of Go that had a different struct memory layout that didn't trigger this latent bug. When you built 0.15.8, you had probably updated Golang on your machine and thus built a binary that includes this bug.\n. Sure! I'm `ametcalf` on rubygems. I'll have a PR incoming to update ttyutils and bump the version.\n. @benjie: published 0.15.9, please tell me if you still encounter problems!\n. @burke: can you do the output from `zeus --log /dev/stderr start`? I want to make sure we're seeing the same things.\n. review @burke? I'm going to roll this out at work quickly before merging to make sure everything works nicely.\n. I've yanked 0.15.9 from rubygems so that others don't suffer the same thing while we debug. This may be the same as https://github.com/burke/zeus/issues/567#issuecomment-229802574\n\nCan you paste the full output of `zeus --log /dev/stderr start`?\n. We use Zeus pretty heavily at Stripe but have built a bunch of tooling on top of it. For example, we didn't encounter a critical bug in 0.15.8 because we pipe the output into other tools such that it doesn't use the TTY rendering mode you're seeing.\n\nThe biggest difference is probably that we're not a Rails shop so we're using Zeus exclusively as a Ruby runner.\n. I have to go meet my wife in a few minutes so I don't think I'll be able to get to this tonight. Can you roll back to 0.15.4 to get yourself unblocked in the meanwhile?\n. I suspect switching things to use `require_relative` would fix whatever is going on here:\nhttps://github.com/burke/zeus/pull/571\n\nI haven't been able to repro the issue locally yet so I'm not sure if this is actually a fix.\n. @latortuga: if you build and install #571, does it fix this issue for you?\n. @keithpitty @latortuga: can one of you provide a minimal repro for this? The latest version runs just fine for me with rails:\n\n```\ncd $GOPATH/src/github.com/burke/zeus\nmake clean && make\n\ncd /tmp\nrails new zeustest\ncd zeustest\necho \"gem 'zeus', '= 0.15.9'\" >> Gemfile\necho \"2.2\" >> .ruby_version\ncp $GOPATH/github.com/burke/zeus/examples/zeus.json .\ngem install $GOPATH/src/github.com/burke/zeus/rubygem/pkg/*.gem\nbundle install\nzeus --log /dev/stderr start\n```\n. (or @benjie on the minimal repro since you're following along too)\n. @keithpitty: try `make dev_bootstrap`\n. Git paths won't work with zeus unfortunately because the gem packages in the zeus binary. The `gem install` command (when it works) should convince bundler to use the local copy of 0.15.9 even though it can't find it on Rubygems. Is there anything in `ls $GOPATH/src/github.com/burke/zeus/rubygem/pkg/`? The `make clean && make` step should spit out a `.gem` file in there...\n. I'm headed out of town for the holiday weekend and won't have my laptop but I'll help debug as possible here.\n. Ahh, ok, I suspect it came out of this:\nhttps://github.com/burke/zeus/pull/530/files\n\nI think that PR seems reasonable but that the README needs to be updated to suggest using bundler. That might qualify as a backwards-incompatible change though. @kgrz @latortuga any thoughts here?\n. ping @kgrz @latortuga on the proposed resolution, getting more pings to get a new version cut in: https://github.com/burke/zeus/issues/563\n. OK, I've released 0.15.10 reverting #530 to fix this. Please reopen if it's still an issue!\n. Yea, I don't think this is the right solution.\n. r? @ptarjan\n. review? @latortuga @kgrz \n. ping @latortuga @kgrz! I'd love to get at least a bit of feedback on this and it's blocking cutting a new release.\n. r? @russelldavis (I feel like you asked me if this was possible at one point and I said it wasn't...)\n. This doesn't actually work as implemented because the processes are grandchildren, not children of the zeus process.\n. r? @ptarjan\n. cc @kgrz\n. r? @ptarjan\n. @ptarjan: have a sec to look at this and talk through the two possible implementations? We're going to need to support this for our current work but I'm always a bit cautious when we're talking about expanding interfaces.\n. Closing in favor of #584.\n. r? @russelldavis \n. @typeoneerror: what version of Zeus were you using before you observed this problem?\n\nThis seems like a plausible candidate for the regression: https://github.com/burke/zeus/pull/497/files\ncc @sshao \n. Ah, that makes sense. We don't use rspec (nor the Zeus test runner code at all) so I'm not sure what standard practice is. Mind investigating the autorunner for your use case?\n\nRegardless of whether it's standard, I don't love that this introduced a regression so I think we should leave this issue open for the moment in case others encounter it. \n\ncc @latortuga from https://github.com/burke/zeus/pull/514\n. r? @russelldavis \n. Ugh, Travis tests are incredibly slow and flaky right now. I'll land this when I can get CI passing reliably.\n. @russelldavis: after some tedious debugging of Travis tests I managed (I think) to make them more reliable but also caught a real error. Apparently the latency parameter to FSEvents on OS X implements throttling, not debouncing. That actually let me refactor the code a bit such that all of the file monitoring composes from the same base. Do you want to take another look?\n. r? @ptarjan\n\nThis is an alternative to the implementation in https://github.com/burke/zeus/pull/580. I haven't waited for tests to pass since Travis has been painfully slow today but tests did pass locally.\n. cc @ngroman since we were all talking about this earlier. Also happy to have you review if you prefer since you mentioned wanting to get a better feel for Zeus. \n. OK @ptarjan: tests seem to be passing now and this is ready for review\n. I'm not going to wait for OS X tests to pass again since they take forever in the queue. Tests are passing locally.\n. @latortuga: It looks like this was a result of your change https://github.com/burke/zeus/pull/514/commits/954894af8c1d69af958860ea7f2bd2333283b91f in https://github.com/burke/zeus/pull/514. Can you investigate?\n. I wonder if something in https://github.com/fsnotify/fsevents/blob/master/fsevents.go needs to be changed to support Sierra? Sadly that project has no tests so it's hard to isolate :-/. Zeus' test should catch this but I'd need a VM running Sierra, I'll see if I can spin one up.\n. @pavel-d: I got Zeus running inside a Sierra VM and can't reproduce this issue. What version of the Sierra preview are you running? Can you try creating a new, clean project with Zeus in it and see if the same issue occurs?\n. @pavel-d: I upgraded my VM to the latest GM release of Sierra and still can't reproduce this. It'd be helpful to know if this repros for you on the latest Sierra release and with a new, clean project.\n. I just uncovered a slew of other bugs and edge cases in Zeus' file monitoring code (e.g. if you replace a watched file by moving another on top of it, it's no longer watched because the underlying inode changed). The work required to handle all these edge cases is great enough that I'm looking into ways to use [Facebook's watchman](https://facebook.github.io/watchman/) in place of the current file monitoring code. I'm not sure when I'll be able to land that (or if it will work) so it'd still be great to have a repro of the Sierra issues, but if you can't repro then hopefully a solution is in the works!\n. Closing for now, given the major issues with Zeus' current file monitoring system I'm going to have to rethink a bit.\n. @zenazn: I've added documentation to the public interface of the new processtree/process package. This should be ready for review but please tell me if there are things you'd like me to do to make it more reviewable. \n\nIf this lands, I'll have two other pieces that follow up almost immediately. The first will wrap communication with command processes in a `CommandProcess` type akin to `NodeProcess` so that nothing passes sockets around. The second will refactor `ProcessTree` and `SlaveNode` to expose a cleaner, narrower interface to the rest of Zeus.\n. The Travis failures are happening on all branches. I'm going to investigate separately.\n. Closing for now, given the major issues with Zeus' current file monitoring system I'm going to have to rethink a bit.\n. Minor comment but otherwise thanks for the corrections! I'm going to look at why Travis is sad today.\n. Test failures should be fixed by https://github.com/burke/zeus/pull/593\n. r? @doy \n. I'm going to land this since other things are blocking on getting the CI suite working and the vagrant gem is something of an undocumented feature. @doy happy to take post-merge discussion.\n. r? @russelldavis \n. @latortuga: It seems plausible that this is related to #588 which in turn appears to stem from your #514. Mind checking if any work you do on #588 also resolves this?\n. @latortuga: what error do you get when you run `make` on Linux? I thought I'd fixed up the Makefile such that it should be possible to compile on Linux (it just won't create the OS X binaries).\n\nIt also appears that requiring `rspec/autorun` isn't playing nicely with the test suite itself.\n. Happy to try to build something for you if that's helpful but before I shuffle binaries around I figured it'd be worth trying to help make your `make` happy.\n. r? @nuance-stripe\ncc @russelldavis on fun Ruby bugs :)\n. r? @nuance-stripe\n. Fixed in https://github.com/burke/zeus/pull/550\n. Unfortunately `fork` is pretty fundamental to what Zeus does today so JRuby support isn't planned (per #297). Sorry!\n. @doy: it looks like we still need to land this before killing off our fork right? If so, is this up to date and ready for a re-review?\n. @latortuga: that panic looks unrelated to the changes in this diff. This is rebased on upstream and the new integration tests exercise the code that paniced for you.\n\n@doy: This lgtm and matches what we've been running successfully at Stripe for months so I'm pretty confident in it.\n. I'm going to close this for now since it has a merge conflict and we're no longer using this plugin internally. Feel free to re-open if you want to rebase and fix the comment for merging.\n. @csquared: I've now vendored `M` so that we can apply stripe-specific patches. I think given that `--reporter` is specific to Minitest and this library is trying to be general across multiple test frameworks, we should close this out. \n\nFeel free to reopen if you think this is valuable to get into upstream for non-Stripe users!\n. cc @antifuchs \n. I haven't tried this out locally since I didn't have a good process for building it. I would not merge as-is until one of us has had a chance to give it a smoke test.\n. Rebased on master to pick up integration tests and ready for review @antifuchs!\n. cc @antifuchs \n. Thanks! All the more incentive to get a local test environment set up so I\ncan confidently land some of these.\nOn May 6, 2016 3:26 PM, \"Burke Libbey\" notifications@github.com wrote:\n\n> Sure thing -- done.\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/burke/zeus/pull/547#issuecomment-217578643\n. I'm going to close this one for now -- I think there are far more important race conditions in this bit of the state transition to deal with (e.g. it takes some time for the OS to set up file monitoring and we're not currently blocking on that).\n. Happy to merge! Can you confirm that you were able to run Zeus with this code?\n. @russelldavis: I just landed an integration test on master that should give us at least some confidence in new code. Can you rebase on master so that this PR will run tests?\n. r? @antifuchs \n. OK, I'll push amended commits a few times to ensure we can get a nice long string of passes. If that doesn't work, I'll look into the STREAM approach.\n. I wasn't able to get the test to pass reliably when changing two files. I reduced it to only changing a single `.rb` file and it nows seems to pass reliably. I'm going to land this and aim to improve things from there.\n. r? @ptarjan\n. Happy to add them! For a bit of extra context, I'm in the process of getting us off of our fork at https://github.com/stripe/zeus. As soon as I confirm that current HEAD works for us, I'll ping you with some release notes. \n. @latortuga: I believe this is ready for release.\n. For a bit more context, I want to land this which will get Stripe off our private fork and into mainline. If that goes smoothly, I'll land the bevy of other PRs I have out and cut a release for that. I want to separate the two releases to identify any problems with switching to upstream -- hearing from internal users will probably be my best feedback channel for bugs.\n. I released this internally and it has been going well. I'm blocking on incrementing the version again for landing a bunch more code. I'm going to go ahead and land this, followed by a series of other PRs and another bump to 0.15.7. \n\n@latortuga: whenever you get a chance you can publish as many of the minor versions as you feel appropriate. If you don't like me incrementing the version number out-of-sync with publishing then I'm going to have to do separately versioned internal releases \ud83d\ude22 .\n. @latortuga would love to get your take on this since it's a meaningful change to how zeus is built.\n. Going to go ahead and land this since I've discussed it with @antifuchs and I'm waiting on it for another PR. Happy to discuss further if you have concerns!\n. @ptarjan, up for reviewing this? You figured out our `require` monkey patch in the first place.\n. It looks like the Travis failure was some kind of hiccup on their end. AFAICT, SVG is the recommended thing these days.\n. r? @ptarjan\n. r? @ptarjan\ncc @jeremydhoon\n. I have a proposed fix in https://github.com/burke/zeus/issues/570 and am awaiting some feedback. Sorry for the delay in getting something out!\n. Released 0.15.10 with a fix for #570. Please report any fresh issues!\n. r? @ptarjan\n. Yeaa.... all those magic numbers were micro-optimizations that made tests run 1 second faster. Totally not worth the potential for confusion. I brought back the public `DefaultFileChangeDelay` and use that consistently.\n. Having gone and written this, I now think the right approach would be to have a single \"command\" goroutine managing the booting/killing of all child processes. Separate SlaveNode goroutines would exist only to wait on sockets and publish messages onto a channel for the command goroutine. Given that this diff seems to solve and immediate problem we're having, I'm still inclined to land it and save the larger refactor for another day (month?).\n. r? @ptarjan\n\nThe meat is in  3ad3817. The last two commits (7d7504b and b9afd75) are somewhat optional, tell me if you think they should stay in.\n. After testing this for about a week with a few developers at Stripe, this appears to be much more stable. I'm going to land this, cut an internal release and distribute to the whole company. I'll follow shortly with a public release when we resolve https://github.com/burke/zeus/issues/570.\n. Ah @burke I think this is https://github.com/burke/ttyutils/pull/1. My best guess is that you built 0.15.4 with a version of Go that had a different struct memory layout that didn't trigger this latent bug. When you built 0.15.8, you had probably updated Golang on your machine and thus built a binary that includes this bug.\n. Sure! I'm `ametcalf` on rubygems. I'll have a PR incoming to update ttyutils and bump the version.\n. @benjie: published 0.15.9, please tell me if you still encounter problems!\n. @burke: can you do the output from `zeus --log /dev/stderr start`? I want to make sure we're seeing the same things.\n. review @burke? I'm going to roll this out at work quickly before merging to make sure everything works nicely.\n. I've yanked 0.15.9 from rubygems so that others don't suffer the same thing while we debug. This may be the same as https://github.com/burke/zeus/issues/567#issuecomment-229802574\n\nCan you paste the full output of `zeus --log /dev/stderr start`?\n. We use Zeus pretty heavily at Stripe but have built a bunch of tooling on top of it. For example, we didn't encounter a critical bug in 0.15.8 because we pipe the output into other tools such that it doesn't use the TTY rendering mode you're seeing.\n\nThe biggest difference is probably that we're not a Rails shop so we're using Zeus exclusively as a Ruby runner.\n. I have to go meet my wife in a few minutes so I don't think I'll be able to get to this tonight. Can you roll back to 0.15.4 to get yourself unblocked in the meanwhile?\n. I suspect switching things to use `require_relative` would fix whatever is going on here:\nhttps://github.com/burke/zeus/pull/571\n\nI haven't been able to repro the issue locally yet so I'm not sure if this is actually a fix.\n. @latortuga: if you build and install #571, does it fix this issue for you?\n. @keithpitty @latortuga: can one of you provide a minimal repro for this? The latest version runs just fine for me with rails:\n\n```\ncd $GOPATH/src/github.com/burke/zeus\nmake clean && make\n\ncd /tmp\nrails new zeustest\ncd zeustest\necho \"gem 'zeus', '= 0.15.9'\" >> Gemfile\necho \"2.2\" >> .ruby_version\ncp $GOPATH/github.com/burke/zeus/examples/zeus.json .\ngem install $GOPATH/src/github.com/burke/zeus/rubygem/pkg/*.gem\nbundle install\nzeus --log /dev/stderr start\n```\n. (or @benjie on the minimal repro since you're following along too)\n. @keithpitty: try `make dev_bootstrap`\n. Git paths won't work with zeus unfortunately because the gem packages in the zeus binary. The `gem install` command (when it works) should convince bundler to use the local copy of 0.15.9 even though it can't find it on Rubygems. Is there anything in `ls $GOPATH/src/github.com/burke/zeus/rubygem/pkg/`? The `make clean && make` step should spit out a `.gem` file in there...\n. I'm headed out of town for the holiday weekend and won't have my laptop but I'll help debug as possible here.\n. Ahh, ok, I suspect it came out of this:\nhttps://github.com/burke/zeus/pull/530/files\n\nI think that PR seems reasonable but that the README needs to be updated to suggest using bundler. That might qualify as a backwards-incompatible change though. @kgrz @latortuga any thoughts here?\n. ping @kgrz @latortuga on the proposed resolution, getting more pings to get a new version cut in: https://github.com/burke/zeus/issues/563\n. OK, I've released 0.15.10 reverting #530 to fix this. Please reopen if it's still an issue!\n. Yea, I don't think this is the right solution.\n. r? @ptarjan\n. review? @latortuga @kgrz \n. ping @latortuga @kgrz! I'd love to get at least a bit of feedback on this and it's blocking cutting a new release.\n. r? @russelldavis (I feel like you asked me if this was possible at one point and I said it wasn't...)\n. This doesn't actually work as implemented because the processes are grandchildren, not children of the zeus process.\n. r? @ptarjan\n. cc @kgrz\n. r? @ptarjan\n. @ptarjan: have a sec to look at this and talk through the two possible implementations? We're going to need to support this for our current work but I'm always a bit cautious when we're talking about expanding interfaces.\n. Closing in favor of #584.\n. r? @russelldavis \n. @typeoneerror: what version of Zeus were you using before you observed this problem?\n\nThis seems like a plausible candidate for the regression: https://github.com/burke/zeus/pull/497/files\ncc @sshao \n. Ah, that makes sense. We don't use rspec (nor the Zeus test runner code at all) so I'm not sure what standard practice is. Mind investigating the autorunner for your use case?\n\nRegardless of whether it's standard, I don't love that this introduced a regression so I think we should leave this issue open for the moment in case others encounter it. \n\ncc @latortuga from https://github.com/burke/zeus/pull/514\n. r? @russelldavis \n. Ugh, Travis tests are incredibly slow and flaky right now. I'll land this when I can get CI passing reliably.\n. @russelldavis: after some tedious debugging of Travis tests I managed (I think) to make them more reliable but also caught a real error. Apparently the latency parameter to FSEvents on OS X implements throttling, not debouncing. That actually let me refactor the code a bit such that all of the file monitoring composes from the same base. Do you want to take another look?\n. r? @ptarjan\n\nThis is an alternative to the implementation in https://github.com/burke/zeus/pull/580. I haven't waited for tests to pass since Travis has been painfully slow today but tests did pass locally.\n. cc @ngroman since we were all talking about this earlier. Also happy to have you review if you prefer since you mentioned wanting to get a better feel for Zeus. \n. OK @ptarjan: tests seem to be passing now and this is ready for review\n. I'm not going to wait for OS X tests to pass again since they take forever in the queue. Tests are passing locally.\n. @latortuga: It looks like this was a result of your change https://github.com/burke/zeus/pull/514/commits/954894af8c1d69af958860ea7f2bd2333283b91f in https://github.com/burke/zeus/pull/514. Can you investigate?\n. I wonder if something in https://github.com/fsnotify/fsevents/blob/master/fsevents.go needs to be changed to support Sierra? Sadly that project has no tests so it's hard to isolate :-/. Zeus' test should catch this but I'd need a VM running Sierra, I'll see if I can spin one up.\n. @pavel-d: I got Zeus running inside a Sierra VM and can't reproduce this issue. What version of the Sierra preview are you running? Can you try creating a new, clean project with Zeus in it and see if the same issue occurs?\n. @pavel-d: I upgraded my VM to the latest GM release of Sierra and still can't reproduce this. It'd be helpful to know if this repros for you on the latest Sierra release and with a new, clean project.\n. I just uncovered a slew of other bugs and edge cases in Zeus' file monitoring code (e.g. if you replace a watched file by moving another on top of it, it's no longer watched because the underlying inode changed). The work required to handle all these edge cases is great enough that I'm looking into ways to use [Facebook's watchman](https://facebook.github.io/watchman/) in place of the current file monitoring code. I'm not sure when I'll be able to land that (or if it will work) so it'd still be great to have a repro of the Sierra issues, but if you can't repro then hopefully a solution is in the works!\n. Closing for now, given the major issues with Zeus' current file monitoring system I'm going to have to rethink a bit.\n. @zenazn: I've added documentation to the public interface of the new processtree/process package. This should be ready for review but please tell me if there are things you'd like me to do to make it more reviewable. \n\nIf this lands, I'll have two other pieces that follow up almost immediately. The first will wrap communication with command processes in a `CommandProcess` type akin to `NodeProcess` so that nothing passes sockets around. The second will refactor `ProcessTree` and `SlaveNode` to expose a cleaner, narrower interface to the rest of Zeus.\n. The Travis failures are happening on all branches. I'm going to investigate separately.\n. Closing for now, given the major issues with Zeus' current file monitoring system I'm going to have to rethink a bit.\n. Minor comment but otherwise thanks for the corrections! I'm going to look at why Travis is sad today.\n. Test failures should be fixed by https://github.com/burke/zeus/pull/593\n. r? @doy \n. I'm going to land this since other things are blocking on getting the CI suite working and the vagrant gem is something of an undocumented feature. @doy happy to take post-merge discussion.\n. r? @russelldavis \n. @latortuga: It seems plausible that this is related to #588 which in turn appears to stem from your #514. Mind checking if any work you do on #588 also resolves this?\n. @latortuga: what error do you get when you run `make` on Linux? I thought I'd fixed up the Makefile such that it should be possible to compile on Linux (it just won't create the OS X binaries).\n\nIt also appears that requiring `rspec/autorun` isn't playing nicely with the test suite itself.\n. Happy to try to build something for you if that's helpful but before I shuffle binaries around I figured it'd be worth trying to help make your `make` happy.\n. r? @nuance-stripe\ncc @russelldavis on fun Ruby bugs :)\n. r? @nuance-stripe\n. ",
    "sinisterchipmunk": "I ran into this just a moment ago with:\n- `uname -a` : Linux ubuntu 3.2.0-36-generic #57-Ubuntu SMP Tue Jan 8 21:44:52 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux\n- `ruby -v` : ruby 1.9.3p362 (2012-12-25 revision 38607) [x86_64-linux]\n\n...but rebooting the machine solved the issue.\n. I ran into this just a moment ago with:\n- `uname -a` : Linux ubuntu 3.2.0-36-generic #57-Ubuntu SMP Tue Jan 8 21:44:52 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux\n- `ruby -v` : ruby 1.9.3p362 (2012-12-25 revision 38607) [x86_64-linux]\n\n...but rebooting the machine solved the issue.\n. ",
    "auxbuss": "I can confirm that zeus is now starting in the above environment.\n. I can confirm that zeus is now starting in the above environment.\n. ",
    "rafael": "I'm having this issue as well. Zeus is returning 1 when it should return 0.\n. +1 \n. I'm having this issue as well. Zeus is returning 1 when it should return 0.\n. +1 \n. ",
    "aripollak": "Ah sorry, this doesn't actually fix the problem. I had been testing some other stuff which did actually work around the problem correctly. I'll try to come up with another patch.\n. Ah sorry, this doesn't actually fix the problem. I had been testing some other stuff which did actually work around the problem correctly. I'll try to come up with another patch.\n. ",
    "joakimk": "Just ran into this issue. Seems it was fixed 3 months ago but the gem was not updated?\n\nAdded this script to one of our projects as a workaround in case anyone needs something similar:\n\nscript/install_zeus:\n\n``` bash\n#!/bin/bash\nset -e\ngem install zeus -v 0.13.3\n\n# This has been patched upstream but not released\nprintf \"Patching zeus to make it possible to run the entire test suite with zeus... \"\ncat ~/.gem/gems/zeus-0.13.3/lib/zeus.rb | ruby -e 'puts STDIN.readlines.map { |line| line.include?(\"pid_and_arguments = local.recv(1024)\") ? line.sub(\"1024\", \"2**16\") : line }' > /tmp/a && mv /tmp/a ~/.gem/gems/zeus-0.13.3/lib/zeus.rb\necho \"done\"\n```\n. Just ran into this issue. Seems it was fixed 3 months ago but the gem was not updated?\n\nAdded this script to one of our projects as a workaround in case anyone needs something similar:\n\nscript/install_zeus:\n\n``` bash\n#!/bin/bash\nset -e\ngem install zeus -v 0.13.3\n\n# This has been patched upstream but not released\nprintf \"Patching zeus to make it possible to run the entire test suite with zeus... \"\ncat ~/.gem/gems/zeus-0.13.3/lib/zeus.rb | ruby -e 'puts STDIN.readlines.map { |line| line.include?(\"pid_and_arguments = local.recv(1024)\") ? line.sub(\"1024\", \"2**16\") : line }' > /tmp/a && mv /tmp/a ~/.gem/gems/zeus-0.13.3/lib/zeus.rb\necho \"done\"\n```\n. ",
    "pmarreck": "Is this fix in the darn gem yet? I just bundle updated and it still breaks on a glob pattern that incorporates the test files in our test suite... :)\n. after installing pre2, I still get \"clienthandler.go:102: write unixgram : message too long\" when giving zeus the command\n\n``` bash\nzeus test test/**/api/v2/{**,}/*_test.rb\n```\n\nwhich matches about 60 test files in our suite\n\n``` ruby\n>> Dir.glob(\"test/**/api/v2/{**,}/*_test.rb\").length\n#=> 60\n```\n\nI've worked around it in the meantime by just creating a new Rake task with this pattern match.\n. Is this fix in the darn gem yet? I just bundle updated and it still breaks on a glob pattern that incorporates the test files in our test suite... :)\n. after installing pre2, I still get \"clienthandler.go:102: write unixgram : message too long\" when giving zeus the command\n\n``` bash\nzeus test test/**/api/v2/{**,}/*_test.rb\n```\n\nwhich matches about 60 test files in our suite\n\n``` ruby\n>> Dir.glob(\"test/**/api/v2/{**,}/*_test.rb\").length\n#=> 60\n```\n\nI've worked around it in the meantime by just creating a new Rake task with this pattern match.\n. ",
    "techthumb": "I did have a go at writing tests before submitting the PR, but tests were already failing.\n\n```\nFailures:\n\n  1) Zeus::M::Runner no option is given runs the test without giving any option\n     Failure/Error: lambda { Runner.new(argv).run }.should exit_with_code(0)\n       expected block to call exit(0) but exit not called\n     # ./spec/m_spec.rb:17:in `block (3 levels) in <top (required)>'\n\n  2) Zeus::M::Runner given a line number runs the test if the correct line number is given\n     Failure/Error: lambda { Runner.new(argv).run }.should exit_with_code(0)\n       expected block to call exit(0) but exit not called\n     # ./spec/m_spec.rb:36:in `block (3 levels) in <top (required)>'\n\n  3) Zeus::M::Runner specifying test name runs the specified tests when using a pattern in --name option\n     Failure/Error: lambda { Runner.new(argv).run }.should exit_with_code(0)\n       expected block to call exit(0) but exit not called\n     # ./spec/m_spec.rb:46:in `block (3 levels) in <top (required)>'\n\n  4) Zeus::M::Runner specifying test name runs the specified tests when using a pattern in -n option\n     Failure/Error: lambda { Runner.new(argv).run }.should exit_with_code(0)\n       expected block to call exit(0) but exit not called\n     # ./spec/m_spec.rb:54:in `block (3 levels) in <top (required)>'\n\n  5) Zeus::M::Runner specifying test name runs the specified tests when using a name (no pattern)\n     Failure/Error: lambda { Runner.new(argv).run }.should exit_with_code(0)\n       expected block to call exit(0) but exit not called\n     # ./spec/m_spec.rb:71:in `block (3 levels) in <top (required)>'\n```\n\nDo these pass for you?\n. I did have a go at writing tests before submitting the PR, but tests were already failing.\n\n```\nFailures:\n\n  1) Zeus::M::Runner no option is given runs the test without giving any option\n     Failure/Error: lambda { Runner.new(argv).run }.should exit_with_code(0)\n       expected block to call exit(0) but exit not called\n     # ./spec/m_spec.rb:17:in `block (3 levels) in <top (required)>'\n\n  2) Zeus::M::Runner given a line number runs the test if the correct line number is given\n     Failure/Error: lambda { Runner.new(argv).run }.should exit_with_code(0)\n       expected block to call exit(0) but exit not called\n     # ./spec/m_spec.rb:36:in `block (3 levels) in <top (required)>'\n\n  3) Zeus::M::Runner specifying test name runs the specified tests when using a pattern in --name option\n     Failure/Error: lambda { Runner.new(argv).run }.should exit_with_code(0)\n       expected block to call exit(0) but exit not called\n     # ./spec/m_spec.rb:46:in `block (3 levels) in <top (required)>'\n\n  4) Zeus::M::Runner specifying test name runs the specified tests when using a pattern in -n option\n     Failure/Error: lambda { Runner.new(argv).run }.should exit_with_code(0)\n       expected block to call exit(0) but exit not called\n     # ./spec/m_spec.rb:54:in `block (3 levels) in <top (required)>'\n\n  5) Zeus::M::Runner specifying test name runs the specified tests when using a name (no pattern)\n     Failure/Error: lambda { Runner.new(argv).run }.should exit_with_code(0)\n       expected block to call exit(0) but exit not called\n     # ./spec/m_spec.rb:71:in `block (3 levels) in <top (required)>'\n```\n\nDo these pass for you?\n. ",
    "mbixby": "This doesn't help in some cases. I'm not sure if there were any messages, I'd probably have included them in the issue description \u2013 that's why I asked how to get the backtrace. Maybe it changed in the newer versions, I'll look into it.\n. This doesn't help in some cases. I'm not sure if there were any messages, I'd probably have included them in the issue description \u2013 that's why I asked how to get the backtrace. Maybe it changed in the newer versions, I'll look into it.\n. ",
    "Jell": "Btw, this used to work with zeus 0.12.0 and appears to be broken on 0.13.2, I can do some bisecting to find the first failing version.\n. So the problem already appeared in 0.13.0 and is not resolved in 0.13.3.rc1\n. I think I found the problem:\n\n``` ruby\n#rubygem/lib/zeus/rails.rb\n\n    def test\n      if spec_file?(ARGV) && defined?(RSpec)\n        # disable autorun in case the user left it in spec_helper.rb\n        RSpec::Core::Runner.disable_autorun!\n        exit RSpec::Core::Runner.run(ARGV)\n      else\n        Zeus::M.run(ARGV)\n      end\n    end\n\n...\n\n    SPEC_DIR_REGEXP = /^spec/\n    SPEC_FILE_REGEXP = /.+_spec\\.rb$/\n    def spec_file? argv\n      last_arg = argv[-1]\n      last_arg.match (Regexp.union(SPEC_DIR_REGEXP, SPEC_FILE_REGEXP))\n    end\n```\n\nit seems to me that the regexp is too much strict, I should be able to give the full path to the spec directory.\n\n``` ruby\nSPEC_DIR_REGEXP = /^spec/\n```\n\nShould probably be:\n\n``` ruby\nSPEC_DIR_REGEXP = %r\"(^|/)spec\"\n```\n. Ah well I failed my pull request. See Issue: #263.\n. I'm also running  `0.13.4.pre2` on ruby `1.9.3-p194`.\n. And I get the same error with your test.\n. Btw, this used to work with zeus 0.12.0 and appears to be broken on 0.13.2, I can do some bisecting to find the first failing version.\n. So the problem already appeared in 0.13.0 and is not resolved in 0.13.3.rc1\n. I think I found the problem:\n\n``` ruby\n#rubygem/lib/zeus/rails.rb\n\n    def test\n      if spec_file?(ARGV) && defined?(RSpec)\n        # disable autorun in case the user left it in spec_helper.rb\n        RSpec::Core::Runner.disable_autorun!\n        exit RSpec::Core::Runner.run(ARGV)\n      else\n        Zeus::M.run(ARGV)\n      end\n    end\n\n...\n\n    SPEC_DIR_REGEXP = /^spec/\n    SPEC_FILE_REGEXP = /.+_spec\\.rb$/\n    def spec_file? argv\n      last_arg = argv[-1]\n      last_arg.match (Regexp.union(SPEC_DIR_REGEXP, SPEC_FILE_REGEXP))\n    end\n```\n\nit seems to me that the regexp is too much strict, I should be able to give the full path to the spec directory.\n\n``` ruby\nSPEC_DIR_REGEXP = /^spec/\n```\n\nShould probably be:\n\n``` ruby\nSPEC_DIR_REGEXP = %r\"(^|/)spec\"\n```\n. Ah well I failed my pull request. See Issue: #263.\n. I'm also running  `0.13.4.pre2` on ruby `1.9.3-p194`.\n. And I get the same error with your test.\n. ",
    "swapab": "Results same for me too\n\n```\nusr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/minitest/unit.rb:900:in `_run': undefined method `>' for nil:NilClass (NoMethodError)\n```\n\nunable to run test cases tried following \n`zeus rake test`\n`zeus test test`\n\nAnyone with a patch or workaround ?\n. Results same for me too\n\n```\nusr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/minitest/unit.rb:900:in `_run': undefined method `>' for nil:NilClass (NoMethodError)\n```\n\nunable to run test cases tried following \n`zeus rake test`\n`zeus test test`\n\nAnyone with a patch or workaround ?\n. ",
    "jonathanclarke": "I ended up patching\n/Users/jonathan/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/1.9.1/minitest/unit.rb\ndirectly; set line 900 to:\n\n```\n  return failures + errors\n  #if @test_count > 0 # or return nil...\n```\n\nSeemed that @test_count was nil for some strange reason.\n\nOn Mon, Feb 25, 2013 at 7:35 PM, Swapnil Abnave notifications@github.comwrote:\n\n> Results same for me too\n> \n> usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/minitest/unit.rb:900:in `_run': undefined method`>' for nil:NilClass (NoMethodError)\n> \n> unable to run test cases tried following\n> zeus rake test\n> zeus test test\n> \n> Anyone with a patch or workaround ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/265#issuecomment-14030533.\n. I ended up patching\n/Users/jonathan/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/1.9.1/minitest/unit.rb\ndirectly; set line 900 to:\n\n```\n  return failures + errors\n  #if @test_count > 0 # or return nil...\n```\n\nSeemed that @test_count was nil for some strange reason.\n\nOn Mon, Feb 25, 2013 at 7:35 PM, Swapnil Abnave notifications@github.comwrote:\n\n> Results same for me too\n> \n> usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/minitest/unit.rb:900:in `_run': undefined method`>' for nil:NilClass (NoMethodError)\n> \n> unable to run test cases tried following\n> zeus rake test\n> zeus test test\n> \n> Anyone with a patch or workaround ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/burke/zeus/issues/265#issuecomment-14030533.\n. ",
    "ikataitsev": ":heart: \n. :heart: \n. ",
    "madhermit": "Ah, that worked perfectly. Thanks!\n. Ah, that worked perfectly. Thanks!\n. ",
    "ishe-ua": "i have the same issue. i use rails 3.2.12, minitest-rails and last version of zeus. maybe the problem is in minitest.\n. yes, 0.13.3\n. my output is:\n\n``` bash\nishe@fuji:~/code/tag-communities$ zeus test test/models/member_test.rb \nRun options: --seed 51413\n\n# Running tests:\n\n....................\n\nFabulous tests in 2.431165s, 8.2265 tests/s, 9.4605 assertions/s.\n\n20 tests, 23 assertions, 0 failures, 0 errors, 0 skips\nRun options: --seed 61954\n\n# Running tests:\n\n....................\n\nFabulous tests in 1.473757s, 13.5708 tests/s, 15.6064 assertions/s.\n\n20 tests, 23 assertions, 0 failures, 0 errors, 0 skips\n```\n. i have the same issue. i use rails 3.2.12, minitest-rails and last version of zeus. maybe the problem is in minitest.\n. yes, 0.13.3\n. my output is:\n\n``` bash\nishe@fuji:~/code/tag-communities$ zeus test test/models/member_test.rb \nRun options: --seed 51413\n\n# Running tests:\n\n....................\n\nFabulous tests in 2.431165s, 8.2265 tests/s, 9.4605 assertions/s.\n\n20 tests, 23 assertions, 0 failures, 0 errors, 0 skips\nRun options: --seed 61954\n\n# Running tests:\n\n....................\n\nFabulous tests in 1.473757s, 13.5708 tests/s, 15.6064 assertions/s.\n\n20 tests, 23 assertions, 0 failures, 0 errors, 0 skips\n```\n. ",
    "murdoch": "It's very strange, but for some inexplicable reason the issue stopped occurring sometime last week. I can't replicate it using the latest gem (zeus (0.13.3)) either. Dunno what made it go away, will keep my eyes peeled though.\n. Thanks latortuga, it fixed the specs running twice bug. They're still slow. And now instead of passing on the first run, many fail. None fail when I run bundle exec rake spec however. \n\nI will just use zeus for cucumber, and run rspec manually, that seems to solve the problem. \n. My point is not that it take two seconds longer, but that it's no longer 50% quicker.\n\nAs for the failures, I'm going to investigate, I doubt it's anything to do with zeus to be honest. Probably something else on my side.\n. It's very strange, but for some inexplicable reason the issue stopped occurring sometime last week. I can't replicate it using the latest gem (zeus (0.13.3)) either. Dunno what made it go away, will keep my eyes peeled though.\n. Thanks latortuga, it fixed the specs running twice bug. They're still slow. And now instead of passing on the first run, many fail. None fail when I run bundle exec rake spec however. \n\nI will just use zeus for cucumber, and run rspec manually, that seems to solve the problem. \n. My point is not that it take two seconds longer, but that it's no longer 50% quicker.\n\nAs for the failures, I'm going to investigate, I doubt it's anything to do with zeus to be honest. Probably something else on my side.\n. ",
    "fivetwentysix": "I'm getting this issue too. I've got 3 rails apps running outofthebox MiniTest on Rails 4 in Ruby2.0.0-p0\n\n  1) Error:\nUsersControllerTest#test_creating_account:\nActionController::UrlGenerationError: No route matches {:code=>\"4/BMnDVTNYx67SIgI7LIygjPfKCyOF.IuiJcRQeFy8YgrKXntQAax2iHtnaegI\", :redirect_uri=>\"http://localhost:3000/oauth/callback/google\", :controller=>\"users\", :action=>\"create\"}\n    test/controllers/users_controller_test.rb:9:in `block (2 levels) in <class:UsersControllerTest>'\n    test/controllers/users_controller_test.rb:8:in`block in class:UsersControllerTest'\n\n1 tests, 0 assertions, 0 failures, 1 errors, 0 skips\nRun options: --seed 38397\n\n# Running tests:\n\nE\n\nFinished tests in 0.004902s, 203.9984 tests/s, 0.0000 assertions/s.\n\n  1) Error:\nUsersControllerTest#test_creating_account:\nActionController::UrlGenerationError: No route matches {:code=>\"4/BMnDVTNYx67SIgI7LIygjPfKCyOF.IuiJcRQeFy8YgrKXntQAax2iHtnaegI\", :redirect_uri=>\"http://localhost:3000/oauth/callback/google\", :controller=>\"users\", :action=>\"create\"}\n    test/controllers/users_controller_test.rb:9:in `block (2 levels) in <class:UsersControllerTest>'\n    test/controllers/users_controller_test.rb:8:in`block in class:UsersControllerTest'\n\n  2) Error:\nUsersControllerTest#test_creating_account:\nActionController::UrlGenerationError: No route matches {:code=>\"4/BMnDVTNYx67SIgI7LIygjPfKCyOF.IuiJcRQeFy8YgrKXntQAax2iHtnaegI\", :redirect_uri=>\"http://localhost:3000/oauth/callback/google\", :controller=>\"users\", :action=>\"create\"}\n    test/controllers/users_controller_test.rb:9:in `block (2 levels) in <class:UsersControllerTest>'\n    test/controllers/users_controller_test.rb:8:in`block in class:UsersControllerTest'\n\n1 tests, 0 assertions, 0 failures, 2 errors, 0 skips\n. I'm getting this issue too. I've got 3 rails apps running outofthebox MiniTest on Rails 4 in Ruby2.0.0-p0\n\n  1) Error:\nUsersControllerTest#test_creating_account:\nActionController::UrlGenerationError: No route matches {:code=>\"4/BMnDVTNYx67SIgI7LIygjPfKCyOF.IuiJcRQeFy8YgrKXntQAax2iHtnaegI\", :redirect_uri=>\"http://localhost:3000/oauth/callback/google\", :controller=>\"users\", :action=>\"create\"}\n    test/controllers/users_controller_test.rb:9:in `block (2 levels) in <class:UsersControllerTest>'\n    test/controllers/users_controller_test.rb:8:in`block in class:UsersControllerTest'\n\n1 tests, 0 assertions, 0 failures, 1 errors, 0 skips\nRun options: --seed 38397\n\n# Running tests:\n\nE\n\nFinished tests in 0.004902s, 203.9984 tests/s, 0.0000 assertions/s.\n\n  1) Error:\nUsersControllerTest#test_creating_account:\nActionController::UrlGenerationError: No route matches {:code=>\"4/BMnDVTNYx67SIgI7LIygjPfKCyOF.IuiJcRQeFy8YgrKXntQAax2iHtnaegI\", :redirect_uri=>\"http://localhost:3000/oauth/callback/google\", :controller=>\"users\", :action=>\"create\"}\n    test/controllers/users_controller_test.rb:9:in `block (2 levels) in <class:UsersControllerTest>'\n    test/controllers/users_controller_test.rb:8:in`block in class:UsersControllerTest'\n\n  2) Error:\nUsersControllerTest#test_creating_account:\nActionController::UrlGenerationError: No route matches {:code=>\"4/BMnDVTNYx67SIgI7LIygjPfKCyOF.IuiJcRQeFy8YgrKXntQAax2iHtnaegI\", :redirect_uri=>\"http://localhost:3000/oauth/callback/google\", :controller=>\"users\", :action=>\"create\"}\n    test/controllers/users_controller_test.rb:9:in `block (2 levels) in <class:UsersControllerTest>'\n    test/controllers/users_controller_test.rb:8:in`block in class:UsersControllerTest'\n\n1 tests, 0 assertions, 0 failures, 2 errors, 0 skips\n. ",
    "DavertMik": "+1 for this issue\nrails 3.2.12, zeus 0.13.3, minitest 4.7.0\n. +1 for this issue\nrails 3.2.12, zeus 0.13.3, minitest 4.7.0\n. ",
    "RedaBenh": "+1 for this issue\n. My app is runnung well on mac, but when i run it on vagrant (windows7); i have this error:\n\nvagrant@lucid32:/vagrant$ zeus start\nStarting Zeus server\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u00e2\u00e2\u00e2 default_bundle\n    \u00e2\u00e2\u00e2 development_environment\n    \u00e2\u00c2\u00a0  \u00e2\u00e2\u00e2 prerake\n    \u00e2\u00e2\u00e2 test_environment\n        \u00e2\u00e2\u00e2 test_helper\n        \u00e2\u00e2\u00e2 cucumber_environment\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus generate (alias: g)\nzeus rake\nzeus server (alias: s)\nzeus dbconsole\nzeus console (alias: c)\nzeus destroy (alias: d)\nzeus runner (alias: r)\nzeus test (alias: rspec, testrb)\nzeus cucumber\nUnable to accept socket connection.\nIt looks like Zeus is already running. If not, remove .zeus.sock and try again.\n\nany solution for this ?\n\nthanks\n. @andyw8 , thank you for your quick answer.\n\nNo i just want to run it on vagrant.\nI get this error message : \n\n```\nUnable to accept socket connection.\nIt looks like Zeus is already running. If not, remove .zeus.sock and try again.\n\n```\n\nwhere is the default location of  .zeus.sock ?\n\nthanks\n. `.zeus.sock` was never created on my root of Rails project.\nI delete `zeus.json` and `custom_plan.rb`\ni run zeus init \n\n```\nvagrant@lucid32:/vagrant$ sudo zeus init\n    create  zeus.json\n    create  custom_plan.rb\n```\n\nand i try to start zeus \n\n```\nvagrant@lucid32:/vagrant$ sudo zeus start\nStarting Zeus server\n[ready] [crashed] [running] [connecting] [waiting]\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u00e2\u00e2\u00e2 default_bundle\n    \u00e2\u00e2\u00e2 development_environment\n    \u00e2\u00c2\u00a0  \u00e2\u00e2\u00e2 prerake\n    \u00e2\u00e2\u00e2 test_environment\n        \u00e2\u00e2\u00e2 cucumber_environment\n        \u00e2\u00e2\u00e2 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus generate (alias: g)\nzeus server (alias: s)\nzeus destroy (alias: d)\nzeus runner (alias: r)\nzeus rake\nzeus console (alias: c)\nzeus dbconsole\nzeus cucumber\nzeus test (alias: rspec, testrb)\nIt looks like Zeus is already running. If not, remove .zeus.sock and try again.\n```\n\nthat not change anything, i got the same error.\n. hi @andyw8 ,\nwith or without sudo i get the same result.\ni run ''zeus start'' on my project path.\n\ni also try different ruby version, here is some information of my vagrant environment :\n\n```\n\nvagrant@lucid32:/vagrant$ ls\napp             db        Gemfile.lock  public       script    tmp\nconfig          doc       Guardfile     Rakefile     setup.sh  Vagrantfile\nconfig.ru       features  lib           README.md    spec      vendor\ncustom_plan.rb  Gemfile   log           README.rdoc  test      zeus.json\n\nvagrant@lucid32:/vagrant$ rbenv versions\n* 1.9.2-p320 (set by /vagrant/.rbenv-version)\n  1.9.3-p125\n  1.9.3-p194\n\nvagrant@lucid32:/vagrant$ rails --version\nRails 3.2.8\n```\n\ni get another error when i run : ruby -rubygems -rzeus/rails -eZeus.go\n\n```\nvagrant@lucid32:/vagrant$ ruby -rubygems -rzeus/rails -eZeus.go\n/home/vagrant/.rbenv/versions/1.9.2-p320/lib/ruby/gems/1.9.1/gems/zeus-0.13.3/lib/zeus.rb:34:in `for_fd': not a socket file descriptor (ArgumentError)\n        from /home/vagrant/.rbenv/versions/1.9.2-p320/lib/ruby/gems/1.9.1/gems/zeus-0.13.3/lib/zeus.rb:34:in `setup_master_socket!'\n        from /home/vagrant/.rbenv/versions/1.9.2-p320/lib/ruby/gems/1.9.1/gems/zeus-0.13.3/lib/zeus.rb:41:in `go'\n        from -e:1:in `<main>'\n```\n\nis this error related to the issue #156 ?\n\nHas anyone tried runing zeus with vagrant ?\n. +1 for this issue\n. My app is runnung well on mac, but when i run it on vagrant (windows7); i have this error:\n\nvagrant@lucid32:/vagrant$ zeus start\nStarting Zeus server\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u00e2\u00e2\u00e2 default_bundle\n    \u00e2\u00e2\u00e2 development_environment\n    \u00e2\u00c2\u00a0  \u00e2\u00e2\u00e2 prerake\n    \u00e2\u00e2\u00e2 test_environment\n        \u00e2\u00e2\u00e2 test_helper\n        \u00e2\u00e2\u00e2 cucumber_environment\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus generate (alias: g)\nzeus rake\nzeus server (alias: s)\nzeus dbconsole\nzeus console (alias: c)\nzeus destroy (alias: d)\nzeus runner (alias: r)\nzeus test (alias: rspec, testrb)\nzeus cucumber\nUnable to accept socket connection.\nIt looks like Zeus is already running. If not, remove .zeus.sock and try again.\n\nany solution for this ?\n\nthanks\n. @andyw8 , thank you for your quick answer.\n\nNo i just want to run it on vagrant.\nI get this error message : \n\n```\nUnable to accept socket connection.\nIt looks like Zeus is already running. If not, remove .zeus.sock and try again.\n\n```\n\nwhere is the default location of  .zeus.sock ?\n\nthanks\n. `.zeus.sock` was never created on my root of Rails project.\nI delete `zeus.json` and `custom_plan.rb`\ni run zeus init \n\n```\nvagrant@lucid32:/vagrant$ sudo zeus init\n    create  zeus.json\n    create  custom_plan.rb\n```\n\nand i try to start zeus \n\n```\nvagrant@lucid32:/vagrant$ sudo zeus start\nStarting Zeus server\n[ready] [crashed] [running] [connecting] [waiting]\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u00e2\u00e2\u00e2 default_bundle\n    \u00e2\u00e2\u00e2 development_environment\n    \u00e2\u00c2\u00a0  \u00e2\u00e2\u00e2 prerake\n    \u00e2\u00e2\u00e2 test_environment\n        \u00e2\u00e2\u00e2 cucumber_environment\n        \u00e2\u00e2\u00e2 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus generate (alias: g)\nzeus server (alias: s)\nzeus destroy (alias: d)\nzeus runner (alias: r)\nzeus rake\nzeus console (alias: c)\nzeus dbconsole\nzeus cucumber\nzeus test (alias: rspec, testrb)\nIt looks like Zeus is already running. If not, remove .zeus.sock and try again.\n```\n\nthat not change anything, i got the same error.\n. hi @andyw8 ,\nwith or without sudo i get the same result.\ni run ''zeus start'' on my project path.\n\ni also try different ruby version, here is some information of my vagrant environment :\n\n```\n\nvagrant@lucid32:/vagrant$ ls\napp             db        Gemfile.lock  public       script    tmp\nconfig          doc       Guardfile     Rakefile     setup.sh  Vagrantfile\nconfig.ru       features  lib           README.md    spec      vendor\ncustom_plan.rb  Gemfile   log           README.rdoc  test      zeus.json\n\nvagrant@lucid32:/vagrant$ rbenv versions\n* 1.9.2-p320 (set by /vagrant/.rbenv-version)\n  1.9.3-p125\n  1.9.3-p194\n\nvagrant@lucid32:/vagrant$ rails --version\nRails 3.2.8\n```\n\ni get another error when i run : ruby -rubygems -rzeus/rails -eZeus.go\n\n```\nvagrant@lucid32:/vagrant$ ruby -rubygems -rzeus/rails -eZeus.go\n/home/vagrant/.rbenv/versions/1.9.2-p320/lib/ruby/gems/1.9.1/gems/zeus-0.13.3/lib/zeus.rb:34:in `for_fd': not a socket file descriptor (ArgumentError)\n        from /home/vagrant/.rbenv/versions/1.9.2-p320/lib/ruby/gems/1.9.1/gems/zeus-0.13.3/lib/zeus.rb:34:in `setup_master_socket!'\n        from /home/vagrant/.rbenv/versions/1.9.2-p320/lib/ruby/gems/1.9.1/gems/zeus-0.13.3/lib/zeus.rb:41:in `go'\n        from -e:1:in `<main>'\n```\n\nis this error related to the issue #156 ?\n\nHas anyone tried runing zeus with vagrant ?\n. ",
    "soffes": "Same here. Using minitest.\n\nLooked into a similar issue with the m gem. Basically loading the tests will run them and then `minitest/autorun` will run them before it quits. Never found a good solution to this problem for m.\n. Same here. Using minitest.\n\nLooked into a similar issue with the m gem. Basically loading the tests will run them and then `minitest/autorun` will run them before it quits. Never found a good solution to this problem for m.\n. ",
    "nerde": "+1. Same issue here, Rails 3.2.13, Rspec 2.13, Zeus 0.13.\n. I think I found the solution. I'm using Rspec. Removing either of these lines from my spec_helper solved the problem for me.\n\n``` ruby\n    require 'rspec/autorun'\n    require 'rspec/autotest'\n```\n\nI found it [here](http://stackoverflow.com/questions/15380775/zeus-factorygirlsyntaxmethods-undefined-method-create).\n. Same problem here :+1: \n. +1. Same issue here, Rails 3.2.13, Rspec 2.13, Zeus 0.13.\n. I think I found the solution. I'm using Rspec. Removing either of these lines from my spec_helper solved the problem for me.\n\n``` ruby\n    require 'rspec/autorun'\n    require 'rspec/autotest'\n```\n\nI found it [here](http://stackoverflow.com/questions/15380775/zeus-factorygirlsyntaxmethods-undefined-method-create).\n. Same problem here :+1: \n. ",
    "yasuoza": "+1. Same issue, rails 4.0.0rc1, zeus 0.13.3, with default rails test framework.\n\nIt seems `zeus test test` runs all tests first and `MiniTest::Unit.autorun` defined in active_support/testing/autorun.rb runs all tests again.\n. Temporary solution for rails default test framework.\n\nUsing zeus custom plan: \n\n``` ruby\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n\n  def test_helper\n    require 'minitest/unit'\n    MiniTest::Unit.class_variable_set(\"@@installed_at_exit\", true)\n    super\n  end\n\nend\n\nZeus.plan = CustomPlan.new\n```\n\nUsing only test_helper.rb:\n\n``` ruby\nENV[\"RAILS_ENV\"] ||= \"test\"\nrequire File.expand_path('../../config/environment', __FILE__)\nif ENV.keys.grep(/ZEUS/).any?\n  require 'minitest/unit'\n  MiniTest::Unit.class_variable_set(\"@@installed_at_exit\", true)\nend\nrequire 'rails/test_help'\n\nclass ActiveSupport::TestCase\n  ActiveRecord::Migration.check_pending!\n\n  # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.\n  #\n  # Note: You'll currently still have to declare fixtures explicitly in integration tests\n  # -- they do not yet inherit this setting\n  fixtures :all\n\n  # Add more helper methods to be used by all tests here...\nend\n```\n. :+1: \n. +1. Same issue, rails 4.0.0rc1, zeus 0.13.3, with default rails test framework.\n\nIt seems `zeus test test` runs all tests first and `MiniTest::Unit.autorun` defined in active_support/testing/autorun.rb runs all tests again.\n. Temporary solution for rails default test framework.\n\nUsing zeus custom plan: \n\n``` ruby\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n\n  def test_helper\n    require 'minitest/unit'\n    MiniTest::Unit.class_variable_set(\"@@installed_at_exit\", true)\n    super\n  end\n\nend\n\nZeus.plan = CustomPlan.new\n```\n\nUsing only test_helper.rb:\n\n``` ruby\nENV[\"RAILS_ENV\"] ||= \"test\"\nrequire File.expand_path('../../config/environment', __FILE__)\nif ENV.keys.grep(/ZEUS/).any?\n  require 'minitest/unit'\n  MiniTest::Unit.class_variable_set(\"@@installed_at_exit\", true)\nend\nrequire 'rails/test_help'\n\nclass ActiveSupport::TestCase\n  ActiveRecord::Migration.check_pending!\n\n  # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.\n  #\n  # Note: You'll currently still have to declare fixtures explicitly in integration tests\n  # -- they do not yet inherit this setting\n  fixtures :all\n\n  # Add more helper methods to be used by all tests here...\nend\n```\n. :+1: \n. ",
    "dfl": "rails (4.0.0), minitest (4.7.5), zeus (0.13.3)\n\nyasuoza's CustomPlan solution, nor solely his test_helper solution, did not work for me.\nThis is the only thing I could get to only run the tests once:\n\n``` ruby\nif ENV.keys.grep(/ZEUS/).any?\n  require 'minitest/unit'\n  MiniTest::Unit.class_variable_set(\"@@installed_at_exit\", true)\nend\nrequire \"minitest/rails\"\nrequire \"rails/test_help\"\n```\n\nnote both the ZEUS env block, and the fact that rails/test_help is required after minitest.\n. rails (4.0.0), minitest (4.7.5), zeus (0.13.3)\n\nyasuoza's CustomPlan solution, nor solely his test_helper solution, did not work for me.\nThis is the only thing I could get to only run the tests once:\n\n``` ruby\nif ENV.keys.grep(/ZEUS/).any?\n  require 'minitest/unit'\n  MiniTest::Unit.class_variable_set(\"@@installed_at_exit\", true)\nend\nrequire \"minitest/rails\"\nrequire \"rails/test_help\"\n```\n\nnote both the ZEUS env block, and the fact that rails/test_help is required after minitest.\n. ",
    "lscott3": "@dfl your solution worked for me. Thanks.\n. @dfl your solution worked for me. Thanks.\n. ",
    "rscarvalho": "@dfl thanks for the workaround, that worked for me as well.\n. @dfl thanks for the workaround, that worked for me as well.\n. ",
    "Darkside73": "It works if cucumber passed. I\u2018ll check what happens if tests fail\n. I've explore that \"execute!\" method returns nil if Cucumber passed . So in this case exit called with 0 code\n. ``` ruby\ntrue\n```\n. Glad to know that I'm not alone with it)\nBTW: changing controllers, routes.rb has same issue\n. In my case:\n- changing controllers or model triggers zeus to reload test environment\n- changing routes.rb or any factory girl file triggers to reload zeus completely\n\nMaybe its by design?\n. I've experienced this issue too after upgrading to ruby 2.0.0-p353. No problem with ruby 2.0.0-p247 at the same time\n. Having same issue after upgrade ruby. I think we should migrate to spring. Rails 4.1 beta support it out of the box https://github.com/rails/rails/commit/6f72a6b53afda51a73af69194ed0060ea5048fa9\n. It works if cucumber passed. I\u2018ll check what happens if tests fail\n. I've explore that \"execute!\" method returns nil if Cucumber passed . So in this case exit called with 0 code\n. ``` ruby\ntrue\n```\n. Glad to know that I'm not alone with it)\nBTW: changing controllers, routes.rb has same issue\n. In my case:\n- changing controllers or model triggers zeus to reload test environment\n- changing routes.rb or any factory girl file triggers to reload zeus completely\n\nMaybe its by design?\n. I've experienced this issue too after upgrading to ruby 2.0.0-p353. No problem with ruby 2.0.0-p247 at the same time\n. Having same issue after upgrade ruby. I think we should migrate to spring. Rails 4.1 beta support it out of the box https://github.com/rails/rails/commit/6f72a6b53afda51a73af69194ed0060ea5048fa9\n. ",
    "lastobelus": "It is worse for me after the change. Before, I would generally get in a day or two before zeus zombied a test runner and I would have to hard reset my mac before being able to run guard and/or rspec again.\n\nNow it happens within a few minutes.\n\nIs there any way to recover and be able to run rspec again without hard reseting my machine? So far everything I've tried ends up with zombies owned by launchd, which don't reap if I send launchd a HUP, and running rspec (or guard) by itself hangs and creates another zombie. The only way to recover is hard reset of machine, a normal restart hangs with a spinner on the gray shutdown screen, presumably because os x can't clean up the zombies either.\n. I haven't been able to associate it with any particular trigger or action of mine so far.\n. I THINK it has only happened after a git pull, i.e. it probably is related to changing several files in a short period of time. \n. Now I don't think it is associated with anything in particular, just happens randomly\n. when it happens to you, does it leave permanent zombies? I can't even do a machine restart -- os x hangs after logging out, on the gray screen, because it can't kill the zeus zombie and I have to do a hard reset.\n. maybe zombie isn't the right word, I'm not much of a systems guy. This happens in conjunction with guard, and either zeus or both zeus & guard become unkillable and unreachable, so unkillable that os x hangs on a restart. Next time it happens I'll capture the output of pstree.\n. I tried building zeus and wasn't able to (quickly) get it to build so I would appreciate a binary.\n\nAll my machines also have SSD's, it never occurred to me that might be a differentiating factor!\n. @antifuchs installed and working. my work for the next few days is on a project where I wasn't using zeus/guard, but now is a good time to add them. I'll let you know how it goes.\n\nBTW I still needed this patch: https://github.com/lastobelus/zeus/commit/2b9cbab4ec4beb0fc70a7908d129e9e97c11a88f\nis there a better way to to make zeus care about Rails's lib dir?\n. I didn't have any crashes; however I wasn't using it that heavily. Was on a non rails project for the last week.\n\nI'm running the newest one now, and have a bunch of rails work for the next several days.\n. I have changed branches and merged branches several times with zeus/guard running without problems.\n. I've used zeus heavily for the last week, with lots of git pulls going back and forth from laptop to desktop, and the only issue I've had was having to delete a .zeus.sock after my laptop battery died.\n. It is worse for me after the change. Before, I would generally get in a day or two before zeus zombied a test runner and I would have to hard reset my mac before being able to run guard and/or rspec again.\n\nNow it happens within a few minutes.\n\nIs there any way to recover and be able to run rspec again without hard reseting my machine? So far everything I've tried ends up with zombies owned by launchd, which don't reap if I send launchd a HUP, and running rspec (or guard) by itself hangs and creates another zombie. The only way to recover is hard reset of machine, a normal restart hangs with a spinner on the gray shutdown screen, presumably because os x can't clean up the zombies either.\n. I haven't been able to associate it with any particular trigger or action of mine so far.\n. I THINK it has only happened after a git pull, i.e. it probably is related to changing several files in a short period of time. \n. Now I don't think it is associated with anything in particular, just happens randomly\n. when it happens to you, does it leave permanent zombies? I can't even do a machine restart -- os x hangs after logging out, on the gray screen, because it can't kill the zeus zombie and I have to do a hard reset.\n. maybe zombie isn't the right word, I'm not much of a systems guy. This happens in conjunction with guard, and either zeus or both zeus & guard become unkillable and unreachable, so unkillable that os x hangs on a restart. Next time it happens I'll capture the output of pstree.\n. I tried building zeus and wasn't able to (quickly) get it to build so I would appreciate a binary.\n\nAll my machines also have SSD's, it never occurred to me that might be a differentiating factor!\n. @antifuchs installed and working. my work for the next few days is on a project where I wasn't using zeus/guard, but now is a good time to add them. I'll let you know how it goes.\n\nBTW I still needed this patch: https://github.com/lastobelus/zeus/commit/2b9cbab4ec4beb0fc70a7908d129e9e97c11a88f\nis there a better way to to make zeus care about Rails's lib dir?\n. I didn't have any crashes; however I wasn't using it that heavily. Was on a non rails project for the last week.\n\nI'm running the newest one now, and have a bunch of rails work for the next several days.\n. I have changed branches and merged branches several times with zeus/guard running without problems.\n. I've used zeus heavily for the last week, with lots of git pulls going back and forth from laptop to desktop, and the only issue I've had was having to delete a .zeus.sock after my laptop battery died.\n. ",
    "shanemcd": "I am experiencing the same issue. Has anyone gotten the chance to look into this?\n. I am experiencing the same issue. Has anyone gotten the chance to look into this?\n. ",
    "simonmorley": "Mine's gone the same way too this evening. Can't figure it out.\n. Mine's gone the same way too this evening. Can't figure it out.\n. ",
    "mattcl": "I have just started to experience this as well. I have shut down Guard and have noticed that changing a model file still triggers zeus to reload the entire application (with most of the time spent waiting on the test and development environments. Changing other things, like controllers and test files do not produce the same reloading. It would seem that this is not an issue with Guard, though it was working fine for me earlier. I do not know what has changed.\n. I've noticed that this seems to only happen to models that I'm using with devise (User, Admin, whatnot), but I haven't had the time to dig much deeper.\n. I have just started to experience this as well. I have shut down Guard and have noticed that changing a model file still triggers zeus to reload the entire application (with most of the time spent waiting on the test and development environments. Changing other things, like controllers and test files do not produce the same reloading. It would seem that this is not an issue with Guard, though it was working fine for me earlier. I do not know what has changed.\n. I've noticed that this seems to only happen to models that I'm using with devise (User, Admin, whatnot), but I haven't had the time to dig much deeper.\n. ",
    "dkubb": "I'm seeing the same thing too. When I change a spec, it is executed immediately, but when I change a model zeus reloads the test environment and guard-rspec waits until environment is ready before it can begin running the specs.\n\nI'm guessing this is by design since the way zeus is doing it is fairly safe, but I wonder if there's more that can be done by relying more on rails' own code reloading?\n. I'm seeing the same thing too. When I change a spec, it is executed immediately, but when I change a model zeus reloads the test environment and guard-rspec waits until environment is ready before it can begin running the specs.\n\nI'm guessing this is by design since the way zeus is doing it is fairly safe, but I wonder if there's more that can be done by relying more on rails' own code reloading?\n. ",
    "s-andringa": "I'm experiencing the same problem. When I change a model the test environment, and sometimes also the development environment is reloaded. Changing routes.rb also reloads both environments. Controllers are okay. Also without Guard running. Same results for Zeus versions 0.13.2 and 0.13.3.rc2. It worked fine before, no clue what change could have caused this behavior.\n. I'm experiencing the same problem. When I change a model the test environment, and sometimes also the development environment is reloaded. Changing routes.rb also reloads both environments. Controllers are okay. Also without Guard running. Same results for Zeus versions 0.13.2 and 0.13.3.rc2. It worked fine before, no clue what change could have caused this behavior.\n. ",
    "doredesign": "+1\n. +1\n. ",
    "williamhc": "+1\n. +1\n. ",
    "zoopyserg": "same thing.\n. ok, thx\n. same thing.\n. ok, thx\n. ",
    "jmgarnier": "@sevos Can you add some description about how to start Zeus with your custom rails engine plan please?\n. @sevos Thank you:)\n. It works well with cucumber by the way\n. I had the same problem with ruby `2.4.1` on a Rails `4.2.9` app with zeus `0.15.14`.\r\n```\r\nslavenode.go:226: [boot] read unix ->: EOF\r\nexit status 1\r\n```\r\nRunning `zeus --log ./zeus.log start` and then `cat zeus.log`, I found out the cause:\r\n\r\n```\r\nYou have already activated byebug `9.1.0`, but your Gemfile requires byebug `9.0.6`\r\n```\r\n\r\nFull Stacktrace:\r\n\r\n<details>\r\n\r\n```\r\n2017/09/11 14:56:13.643652 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:402] boot/(63200) root process exited with an error before it could boot: exit status 1; output was: .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/bundler-1.15.4/lib/bundler/runtime.rb:317:in `check_for_activated_spec!': You have already activated byebug 9.1.0, but your Gemfile requires byebug 9.0.6. Prepending `bundle exec` to your command may solve this. (Gem::LoadError)\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/bundler-1.15.4/lib/bundler/runtime.rb:32:in `block in setup'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/2.4.0/forwardable.rb:229:in `each'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/2.4.0/forwardable.rb:229:in `each'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/bundler-1.15.4/lib/bundler/runtime.rb:27:in `map'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/bundler-1.15.4/lib/bundler/runtime.rb:27:in `setup'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/bundler-1.15.4/lib/bundler.rb:101:in `setup'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/bundler-1.15.4/lib/bundler/setup.rb:9:in `<top (required)>'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/2.4.0/rubygems/core_ext/kernel_require.rb:133:in `require'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/2.4.0/rubygems/core_ext/kernel_require.rb:133:in `rescue in require'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/2.4.0/rubygems/core_ext/kernel_require.rb:40:in `require'\r\n\tfrom src/nedap/dossier/config/boot.rb:8:in `<top (required)>'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/2.4.0/rubygems/core_ext/kernel_require.rb:55:in `require'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/2.4.0/rubygems/core_ext/kernel_require.rb:55:in `require'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/zeus-0.15.14/lib/zeus/rails.rb:82:in `boot'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/zeus-0.15.14/lib/zeus.rb:204:in `block in run_action'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/zeus-0.15.14/lib/zeus/load_tracking.rb:18:in `track_features_loaded_by'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/zeus-0.15.14/lib/zeus.rb:202:in `run_action'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/zeus-0.15.14/lib/zeus.rb:75:in `block in boot_steps'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/zeus-0.15.14/lib/zeus.rb:57:in `catch'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/zeus-0.15.14/lib/zeus.rb:57:in `boot_steps'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/zeus-0.15.14/lib/zeus.rb:49:in `go'\r\n\tfrom -e:1:in `<main>'\r\n```\r\n\r\n</details>\r\n\r\nUpgrading `byebug` to `9.1.0` solved the problem. I am thinking to coming back to rvm gemsets to prevent that kind of problem in the future.\r\n\r\nPristine all your gems sounds like a temporary fix.. @kigster What was your workflow to trace SEGV crashes? With `zeus --log` ?. @sevos Can you add some description about how to start Zeus with your custom rails engine plan please?\n. @sevos Thank you:)\n. It works well with cucumber by the way\n. I had the same problem with ruby `2.4.1` on a Rails `4.2.9` app with zeus `0.15.14`.\r\n```\r\nslavenode.go:226: [boot] read unix ->: EOF\r\nexit status 1\r\n```\r\nRunning `zeus --log ./zeus.log start` and then `cat zeus.log`, I found out the cause:\r\n\r\n```\r\nYou have already activated byebug `9.1.0`, but your Gemfile requires byebug `9.0.6`\r\n```\r\n\r\nFull Stacktrace:\r\n\r\n<details>\r\n\r\n```\r\n2017/09/11 14:56:13.643652 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:402] boot/(63200) root process exited with an error before it could boot: exit status 1; output was: .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/bundler-1.15.4/lib/bundler/runtime.rb:317:in `check_for_activated_spec!': You have already activated byebug 9.1.0, but your Gemfile requires byebug 9.0.6. Prepending `bundle exec` to your command may solve this. (Gem::LoadError)\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/bundler-1.15.4/lib/bundler/runtime.rb:32:in `block in setup'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/2.4.0/forwardable.rb:229:in `each'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/2.4.0/forwardable.rb:229:in `each'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/bundler-1.15.4/lib/bundler/runtime.rb:27:in `map'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/bundler-1.15.4/lib/bundler/runtime.rb:27:in `setup'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/bundler-1.15.4/lib/bundler.rb:101:in `setup'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/bundler-1.15.4/lib/bundler/setup.rb:9:in `<top (required)>'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/2.4.0/rubygems/core_ext/kernel_require.rb:133:in `require'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/2.4.0/rubygems/core_ext/kernel_require.rb:133:in `rescue in require'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/2.4.0/rubygems/core_ext/kernel_require.rb:40:in `require'\r\n\tfrom src/nedap/dossier/config/boot.rb:8:in `<top (required)>'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/2.4.0/rubygems/core_ext/kernel_require.rb:55:in `require'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/2.4.0/rubygems/core_ext/kernel_require.rb:55:in `require'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/zeus-0.15.14/lib/zeus/rails.rb:82:in `boot'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/zeus-0.15.14/lib/zeus.rb:204:in `block in run_action'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/zeus-0.15.14/lib/zeus/load_tracking.rb:18:in `track_features_loaded_by'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/zeus-0.15.14/lib/zeus.rb:202:in `run_action'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/zeus-0.15.14/lib/zeus.rb:75:in `block in boot_steps'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/zeus-0.15.14/lib/zeus.rb:57:in `catch'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/zeus-0.15.14/lib/zeus.rb:57:in `boot_steps'\r\n\tfrom .rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/zeus-0.15.14/lib/zeus.rb:49:in `go'\r\n\tfrom -e:1:in `<main>'\r\n```\r\n\r\n</details>\r\n\r\nUpgrading `byebug` to `9.1.0` solved the problem. I am thinking to coming back to rvm gemsets to prevent that kind of problem in the future.\r\n\r\nPristine all your gems sounds like a temporary fix.. @kigster What was your workflow to trace SEGV crashes? With `zeus --log` ?. ",
    "rubemz": "looking forward for that Pull Request :+1:\n. looking forward for that Pull Request :+1:\n. ",
    "snarlysodboxer": "@turadg You're right, it's not frequently needed to restart the web server, (although maybe more for me than for most since I'm a bit towards a beginner and I'm working with initializers for multiple reasons.)\n\nI was looking around to find what ruby code unicorn runs and I ran across the following link which solved my problem perfectly by changing the default 'rails server' functionality to use unicorn: https://github.com/samuelkadolph/unicorn-rails\n\nNow unicorn runs through zeus very smoothly.\n\nThanks for your time and help!\n. @turadg You're right, it's not frequently needed to restart the web server, (although maybe more for me than for most since I'm a bit towards a beginner and I'm working with initializers for multiple reasons.)\n\nI was looking around to find what ruby code unicorn runs and I ran across the following link which solved my problem perfectly by changing the default 'rails server' functionality to use unicorn: https://github.com/samuelkadolph/unicorn-rails\n\nNow unicorn runs through zeus very smoothly.\n\nThanks for your time and help!\n. ",
    "abacha": "@aspiers sorry about that\n. wherever I define a const I got this warning:\n\n```\n/home/duke/projects/simplific/bigbang/app/models/daily_share.rb:2: warning: already initialized constant DailyShare::FUNDS_FOR_DAILY_SHARES\n/home/duke/projects/simplific/bigbang/app/models/daily_share.rb:2: warning: previous definition of FUNDS_FOR_DAILY_SHARES was here\n```\n\napp/models/daily_share.rb\n\n```\nclass DailyShare < ActiveRecord::Base\n  FUNDS_FOR_DAILY_SHARES = [702, 705, 701]\n```\n\nzeus v0.13.3\n. I'm using:\nruby 2.0.0-p247\nrails 3.2.13\nzeus 0.13.3\n\nI've tried to create a sample app but I couldn't manage to get this error there\nI'll try 0.13.4\n. same with 0.13.4.pre2\n. I've found it!\nI was requiring every model on spec_helper and also on custom_plan\nthanks for your time anyway\n. @aspiers sorry about that\n. wherever I define a const I got this warning:\n\n```\n/home/duke/projects/simplific/bigbang/app/models/daily_share.rb:2: warning: already initialized constant DailyShare::FUNDS_FOR_DAILY_SHARES\n/home/duke/projects/simplific/bigbang/app/models/daily_share.rb:2: warning: previous definition of FUNDS_FOR_DAILY_SHARES was here\n```\n\napp/models/daily_share.rb\n\n```\nclass DailyShare < ActiveRecord::Base\n  FUNDS_FOR_DAILY_SHARES = [702, 705, 701]\n```\n\nzeus v0.13.3\n. I'm using:\nruby 2.0.0-p247\nrails 3.2.13\nzeus 0.13.3\n\nI've tried to create a sample app but I couldn't manage to get this error there\nI'll try 0.13.4\n. same with 0.13.4.pre2\n. I've found it!\nI was requiring every model on spec_helper and also on custom_plan\nthanks for your time anyway\n. ",
    "cmaitchison": "Probably the same issue...\n\nZeus against rspec v2.13.0 will not recognise other base Capybara methods such as visit\n\n```\n NoMethodError:\n   undefined method `visit' for #<RSpec::Core::ExampleGroup::Nested_2:0x007fcaed9bd150>\n```\n\nIt also doesn't recognise route helper methods such as admin_path or widget_path, etc...\n\nSpecs with these methods work fine when not run with zeus.\n\nSpecs with these methods work fine when run with Zeus but with Capybara v2.12.0\n. Probably the same issue...\n\nZeus against rspec v2.13.0 will not recognise other base Capybara methods such as visit\n\n```\n NoMethodError:\n   undefined method `visit' for #<RSpec::Core::ExampleGroup::Nested_2:0x007fcaed9bd150>\n```\n\nIt also doesn't recognise route helper methods such as admin_path or widget_path, etc...\n\nSpecs with these methods work fine when not run with zeus.\n\nSpecs with these methods work fine when run with Zeus but with Capybara v2.12.0\n. ",
    "jmedding": "Found a solution here: https://groups.google.com/forum/#!topic/ruby-capybara/Kx_lpVAPiRg\n\n\"I have commented require 'rspec/autorun' in my spec_helper and everything works great now.\"\n\nThis worked for me using Zeus, Guard, Rspec, Capybara\n. Adding the /spec worked for me, but I had to remove  _require 'rails/autorun'_ from my spec_helper.rb \n. Found a solution here: https://groups.google.com/forum/#!topic/ruby-capybara/Kx_lpVAPiRg\n\n\"I have commented require 'rspec/autorun' in my spec_helper and everything works great now.\"\n\nThis worked for me using Zeus, Guard, Rspec, Capybara\n. Adding the /spec worked for me, but I had to remove  _require 'rails/autorun'_ from my spec_helper.rb \n. ",
    "Milan9x": "@jmedding you are rite. works perfectly after commenting out 'rspec/autorun' in my spec_helper.rb\n. @jmedding you are rite. works perfectly after commenting out 'rspec/autorun' in my spec_helper.rb\n. ",
    "jamesconant": "In RSpec 2.13.1 that line is not actually contained in spec_helper.rb anymore. It appears that it is in the `rspec` command's executable script.\n\n```\n#!/usr/bin/env ruby\n\nbegin\n  require 'rspec/autorun'\nrescue LoadError\n  $stderr.puts <<-EOS\n#{'*'*50}\n  Could not find 'rspec/autorun'\n\n  This may happen if you're using rubygems as your package manager, but it is not\n  being required through some mechanism before executing the rspec command.\n\n  You may need to do one of the following in your shell:\n\n    # for bash/zsh\n    export RUBYOPT=rubygems\n\n    # for csh, etc.\n    set RUBYOPT=rubygems\n\n  For background, please see http://gist.github.com/54177.\n#{'*'*50}\n  EOS\n  exit(1)\nend\n```\n\nIs it safe to comment this out? I am curious what the reason for moving it form spec_helper.rb into the exec script if it is so frequently recommended to be commented out to get other libraries to function properly with it.\n. In RSpec 2.13.1 that line is not actually contained in spec_helper.rb anymore. It appears that it is in the `rspec` command's executable script.\n\n```\n#!/usr/bin/env ruby\n\nbegin\n  require 'rspec/autorun'\nrescue LoadError\n  $stderr.puts <<-EOS\n#{'*'*50}\n  Could not find 'rspec/autorun'\n\n  This may happen if you're using rubygems as your package manager, but it is not\n  being required through some mechanism before executing the rspec command.\n\n  You may need to do one of the following in your shell:\n\n    # for bash/zsh\n    export RUBYOPT=rubygems\n\n    # for csh, etc.\n    set RUBYOPT=rubygems\n\n  For background, please see http://gist.github.com/54177.\n#{'*'*50}\n  EOS\n  exit(1)\nend\n```\n\nIs it safe to comment this out? I am curious what the reason for moving it form spec_helper.rb into the exec script if it is so frequently recommended to be commented out to get other libraries to function properly with it.\n. ",
    "tomasv": "Do you have `require 'rspec/autorun'` in your spec_helper.rb?\nIf yes, does removing it solve your problem?\n. The only I can think of is that you won't be able to run your specs in this manner:\n\n```\nruby -Ispec spec/models/user_spec.rb\n```\n\nAnd I don't think anyone does that, I've had the line removed for a month in a project and it didn't cause any problems for me.\n. Do you have `require 'rspec/autorun'` in your spec_helper.rb?\nIf yes, does removing it solve your problem?\n. The only I can think of is that you won't be able to run your specs in this manner:\n\n```\nruby -Ispec spec/models/user_spec.rb\n```\n\nAnd I don't think anyone does that, I've had the line removed for a month in a project and it didn't cause any problems for me.\n. ",
    "mntdamania": "+1..  Nice to have detach option\n. Well I wanted to detach the `zeus start` command.. Thanks for the response \n. +1..  Nice to have detach option\n. Well I wanted to detach the `zeus start` command.. Thanks for the response \n. ",
    "dpritchett": "+1 here on Ruby 2.1.2, Rails 4.0, Ubuntu 13.10.  No amount of `ulimit` tweaking has allowed me to run a single rake task.  Zeus works great for Rails server, console, and test though.\n. Thanks John.  I just audited my code and all of my class_name directives\nwere using strings.  I'll keep looking!\n\nOn Mon, Jun 30, 2014 at 3:20 PM, John Gerhardt notifications@github.com\nwrote:\n\n> This was originally caused by us using actual classes instead of strings\n> in Rails relationships.\n> \n> e.g.\n> \n> has_many :users, class_name: User\n> \n> instead of\n> \n> has_many :users, class_name: 'User'\n> \n> ending up being a class loading/ordering issue. Worth checking out as a\n> possibility but this was so long ago I can't quite remember if that was the\n> cause.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/burke/zeus/issues/286#issuecomment-47581508.\n. +1 here on Ruby 2.1.2, Rails 4.0, Ubuntu 13.10.  No amount of `ulimit` tweaking has allowed me to run a single rake task.  Zeus works great for Rails server, console, and test though.\n. Thanks John.  I just audited my code and all of my class_name directives\nwere using strings.  I'll keep looking!\n\nOn Mon, Jun 30, 2014 at 3:20 PM, John Gerhardt notifications@github.com\nwrote:\n\n> This was originally caused by us using actual classes instead of strings\n> in Rails relationships.\n> \n> e.g.\n> \n> has_many :users, class_name: User\n> \n> instead of\n> \n> has_many :users, class_name: 'User'\n> \n> ending up being a class loading/ordering issue. Worth checking out as a\n> possibility but this was so long ago I can't quite remember if that was the\n> cause.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/burke/zeus/issues/286#issuecomment-47581508.\n. ",
    "dmfrancisco": "@RedaBenh: In [this similar project](https://github.com/jonleighton/spring/issues/26), @avit says:\n\n> When running in an environment like Vagrant, the project folder is shared into the VM. This means it's not possible to create a socket file under this directory.\n\nMaybe this happens because your app is in a shared folder and you're trying to start `zeus` on the vagrant machine.\nIt may be the same issue as #231. Hope this helps!\n. @RedaBenh: In [this similar project](https://github.com/jonleighton/spring/issues/26), @avit says:\n\n> When running in an environment like Vagrant, the project folder is shared into the VM. This means it's not possible to create a socket file under this directory.\n\nMaybe this happens because your app is in a shared folder and you're trying to start `zeus` on the vagrant machine.\nIt may be the same issue as #231. Hope this helps!\n. ",
    "axsuul": "The way around this is to use a configurable path for the socket file. springs references the environment variable `SPRING_TMP_PATH`. I think zeus needs something like this.\n. Anyone know of a good way to have zeus detect file changes? I have to restart zeus everytime I change routes.rb or  initializer stuff.\n. The way around this is to use a configurable path for the socket file. springs references the environment variable `SPRING_TMP_PATH`. I think zeus needs something like this.\n. Anyone know of a good way to have zeus detect file changes? I have to restart zeus everytime I change routes.rb or  initializer stuff.\n. ",
    "vinh0604": "`export ZEUSSOCK=/tmp/zeus.sock` does not work for me on my Windows 7 machine. I still got the same error as noted above:\n\n```\nStarting Zeus server\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u00e2\u201d\u201d\u00e2\u201d\u20ac\u00e2\u201d\u20ac default_bundle\n     \u00e2\u201d\u0153\u00e2\u201d\u20ac\u00e2\u201d\u20ac development_environment\n     \u00e2\u201d\u201a\u00c2\u00a0  \u00e2\u201d\u201d\u00e2\u201d\u20ac\u00e2\u201d\u20ac prerake\n     \u00e2\u201d\u201d\u00e2\u201d\u20ac\u00e2\u201d\u20ac test_environment\n         \u00e2\u201d\u0153\u00e2\u201d\u20ac\u00e2\u201d\u20ac cucumber_environment\n         \u00e2\u201d\u201d\u00e2\u201d\u20ac\u00e2\u201d\u20ac test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus destroy (alias: d)\nzeus console (alias: c)\nzeus generate (alias: g)\nzeus runner (alias: r)\nzeus rake\nzeus server (alias: s)\nzeus dbconsole\nzeus cucumber\nzeus test (alias: rspec, testrb)\nUnable to accept socket connection.\nIt looks like Zeus is already running. If not, remove .zeus.sock and try again.\n```\n. I start zeus from the terminal of my vagrant box, which is a Ubuntu vm, windows 7 is the OS of my computer.\n. I'm using version 0.13.3.rc2, ruby 2.0.0p195\n. I tried the version 0.13.4.pre2, after running `zeus start`, the zeus.sock file was created in the /tmp directory. However, when I tried to run `zeus server`, it still returned:\n\n```\nCan't connect to master. Run zeus start first.\n```\n\nFurthermore, my rails app is using the guard-zeus gem, whenever I run `bundle install`, it will re-install the version 0.13.3 and the previous error occur again.\n. It works now. Thank you all.\n. `export ZEUSSOCK=/tmp/zeus.sock` does not work for me on my Windows 7 machine. I still got the same error as noted above:\n\n```\nStarting Zeus server\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u00e2\u201d\u201d\u00e2\u201d\u20ac\u00e2\u201d\u20ac default_bundle\n     \u00e2\u201d\u0153\u00e2\u201d\u20ac\u00e2\u201d\u20ac development_environment\n     \u00e2\u201d\u201a\u00c2\u00a0  \u00e2\u201d\u201d\u00e2\u201d\u20ac\u00e2\u201d\u20ac prerake\n     \u00e2\u201d\u201d\u00e2\u201d\u20ac\u00e2\u201d\u20ac test_environment\n         \u00e2\u201d\u0153\u00e2\u201d\u20ac\u00e2\u201d\u20ac cucumber_environment\n         \u00e2\u201d\u201d\u00e2\u201d\u20ac\u00e2\u201d\u20ac test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus destroy (alias: d)\nzeus console (alias: c)\nzeus generate (alias: g)\nzeus runner (alias: r)\nzeus rake\nzeus server (alias: s)\nzeus dbconsole\nzeus cucumber\nzeus test (alias: rspec, testrb)\nUnable to accept socket connection.\nIt looks like Zeus is already running. If not, remove .zeus.sock and try again.\n```\n. I start zeus from the terminal of my vagrant box, which is a Ubuntu vm, windows 7 is the OS of my computer.\n. I'm using version 0.13.3.rc2, ruby 2.0.0p195\n. I tried the version 0.13.4.pre2, after running `zeus start`, the zeus.sock file was created in the /tmp directory. However, when I tried to run `zeus server`, it still returned:\n\n```\nCan't connect to master. Run zeus start first.\n```\n\nFurthermore, my rails app is using the guard-zeus gem, whenever I run `bundle install`, it will re-install the version 0.13.3 and the previous error occur again.\n. It works now. Thank you all.\n. ",
    "neil477": "For me after doing what @sevos said, Zeus just hangs on waiting \ni.e.\n![screen shot 2013-06-07 at 11 46 58 am](https://f.cloud.github.com/assets/617728/624610/8e4d1ff4-cf89-11e2-8298-d9540a8ffd05.png)\n. Created a new issue for this #362 .\n. For me after doing what @sevos said, Zeus just hangs on waiting \ni.e.\n![screen shot 2013-06-07 at 11 46 58 am](https://f.cloud.github.com/assets/617728/624610/8e4d1ff4-cf89-11e2-8298-d9540a8ffd05.png)\n. Created a new issue for this #362 .\n. ",
    "hale": "Just commenting to note that this issue is also present when running zeus in a project in a FUSE volume - for example if you encrypt your projects with ENCFS.  Setting the ZEUSSOCK to somewhere else fixed the problem.  Thanks.\n. Just commenting to note that this issue is also present when running zeus in a project in a FUSE volume - for example if you encrypt your projects with ENCFS.  Setting the ZEUSSOCK to somewhere else fixed the problem.  Thanks.\n. ",
    "house9": "Wondering if anyone is experiencing issues with Vagrant/zeus where spec files DO get reloaded but NOT source files?\n\nHost Machine: Mac OSX Mavericks\n\nVagrant 1.6.3\nVirtualBox 4.3.12\n\nVagrant Box: ubuntu 12.04\n\n```\n  ruby 1.9.3p484 (2013-11-22 revision 43786) [x86_64-linux] \n  zeus (0.15.1)\n\n  # vagrant config for NFS\n  config.vm.synced_folder \".\", \"/vagrant\", type: \"nfs\"  \n\n  env ZEUSSOCK=/tmp/zeus.sock zeus start\n  env ZEUSSOCK=/tmp/zeus.sock zeus rspec spec/models/example_spec.rb\n\n  # in all cases zeus will see changes to files in the spec directory \n  # but does not see changes in app directory\n\n  # touching the file while on the vagrant box works\n  touch app/models/example.rb && env ZEUSSOCK=/tmp/zeus.sock zeus rspec spec/models/example_spec.rb  \n```\n\nThis occurs using both sublime and vim from the host machine; using vim from within the vagrant box works fine as expected\n. Wondering if anyone is experiencing issues with Vagrant/zeus where spec files DO get reloaded but NOT source files?\n\nHost Machine: Mac OSX Mavericks\n\nVagrant 1.6.3\nVirtualBox 4.3.12\n\nVagrant Box: ubuntu 12.04\n\n```\n  ruby 1.9.3p484 (2013-11-22 revision 43786) [x86_64-linux] \n  zeus (0.15.1)\n\n  # vagrant config for NFS\n  config.vm.synced_folder \".\", \"/vagrant\", type: \"nfs\"  \n\n  env ZEUSSOCK=/tmp/zeus.sock zeus start\n  env ZEUSSOCK=/tmp/zeus.sock zeus rspec spec/models/example_spec.rb\n\n  # in all cases zeus will see changes to files in the spec directory \n  # but does not see changes in app directory\n\n  # touching the file while on the vagrant box works\n  touch app/models/example.rb && env ZEUSSOCK=/tmp/zeus.sock zeus rspec spec/models/example_spec.rb  \n```\n\nThis occurs using both sublime and vim from the host machine; using vim from within the vagrant box works fine as expected\n. ",
    "moxley": "I'm experiencing the same thing as @house9.\n\nHost: OS X 10.9.4\nVirtualBox: 4.3.14\nVM: Debian 3.2.60\nZeus: 0.15.1\nRuby: 2.1.2p95\n\nSetting ZEUSSOCK doesn't make any difference for me. The result is the same: the _spec.rb file reloads every time it is saved. The file under test never reloads. Using Atom on the host machine.\n. I'm experiencing the same thing as @house9.\n\nHost: OS X 10.9.4\nVirtualBox: 4.3.14\nVM: Debian 3.2.60\nZeus: 0.15.1\nRuby: 2.1.2p95\n\nSetting ZEUSSOCK doesn't make any difference for me. The result is the same: the _spec.rb file reloads every time it is saved. The file under test never reloads. Using Atom on the host machine.\n. ",
    "wyaeld": "Does it still happen if you add to autoload paths?  i.e.\n\n```\nconfig.autoload_paths += [\"#{config.root}/app/serializers\"]\n```\n. Does it still happen if you add to autoload paths?  i.e.\n\n```\nconfig.autoload_paths += [\"#{config.root}/app/serializers\"]\n```\n. ",
    "strika": "Yes. Adding `app/serializers` to the `autoload_paths` doesn't help.\n\nI noticed now that this problem doesn't happen with every Zeus run. Sometimes it works fine and it picks up changes in app/serializers (zeus/test reloads). But sometimes when I load Zeus, it doesn't. I wasn't able to find any rule - it looks random. I tried to run tests while Zeus is still loading and after it's fully loaded and it looks like this didn't affect the problem.\n. Yes. Adding `app/serializers` to the `autoload_paths` doesn't help.\n\nI noticed now that this problem doesn't happen with every Zeus run. Sometimes it works fine and it picks up changes in app/serializers (zeus/test reloads). But sometimes when I load Zeus, it doesn't. I wasn't able to find any rule - it looks random. I tried to run tests while Zeus is still loading and after it's fully loaded and it looks like this didn't affect the problem.\n. ",
    "conzett": "Having this issue with TestUnit via [guard-test](https://github.com/guard/guard-test) as well. Same error:\n\n```\n12:09:28 - INFO - Using zeus to run the tests\nzeusclient.go:86: EOF\n```\n\nIn the zeus console:\n\n```\nclienthandler.go:103: write unixgram : message too long\n```\n. Having this issue with TestUnit via [guard-test](https://github.com/guard/guard-test) as well. Same error:\n\n```\n12:09:28 - INFO - Using zeus to run the tests\nzeusclient.go:86: EOF\n```\n\nIn the zeus console:\n\n```\nclienthandler.go:103: write unixgram : message too long\n```\n. ",
    "tashian": "+1\n. +1\n. ",
    "mcmire": "Yes please, this would be nice.\n. Yes please, this would be nice.\n. ",
    "johnmetta": "This has been bugging me for a while, actually. I thought it was Rails. Using Ruby 1.9.3 and Rails 3.1.12, but same on any combination of ruby 1.9.3/2.1.0 and Rails 3.1.11/3.1.12\n\n```\n$ zeus --version\nZeus version 0.13.3.rc2\n\n$ uname -a\nDarwin wisdom.local 13.0.2 Darwin Kernel Version 13.0.2: Sun Sep 29 19:38:57 PDT 2013; root:xnu-2422.75.4~1/RELEASE_X86_64 x86_64\n\n$ ruby -v\nruby 1.9.3p448 (2013-06-27 revision 41675) [x86_64-darwin13.0.2]\n\n$ bash --version\nGNU bash, version 4.2.45(2)-release (i386-apple-darwin13.0.2)\n```\n. This has been bugging me for a while, actually. I thought it was Rails. Using Ruby 1.9.3 and Rails 3.1.12, but same on any combination of ruby 1.9.3/2.1.0 and Rails 3.1.11/3.1.12\n\n```\n$ zeus --version\nZeus version 0.13.3.rc2\n\n$ uname -a\nDarwin wisdom.local 13.0.2 Darwin Kernel Version 13.0.2: Sun Sep 29 19:38:57 PDT 2013; root:xnu-2422.75.4~1/RELEASE_X86_64 x86_64\n\n$ ruby -v\nruby 1.9.3p448 (2013-06-27 revision 41675) [x86_64-darwin13.0.2]\n\n$ bash --version\nGNU bash, version 4.2.45(2)-release (i386-apple-darwin13.0.2)\n```\n. ",
    "BartlomiejSkwira": "I second the JRuby support, hope in some time you'll get back to this idea\n. Tried it, but my integration tests are failing https://github.com/mrbrdo/theine/issues/3\n. I second the JRuby support, hope in some time you'll get back to this idea\n. Tried it, but my integration tests are failing https://github.com/mrbrdo/theine/issues/3\n. ",
    "jtblin": "+1\n. +1\n. ",
    "mrbrdo": "You can check out https://github.com/mrbrdo/theine - it is designed for JRuby. It is not possible to simply use threads as changes to class hierarchy propagate to all threads.\n. You guys can help out with https://github.com/mrbrdo/theine/issues/3 if you have an extra hour of time. Or try it with your project.\nAs was stated there aren't any plans for zeus to support JRuby any time soon.\n. You can check out https://github.com/mrbrdo/theine - it is designed for JRuby. It is not possible to simply use threads as changes to class hierarchy propagate to all threads.\n. You guys can help out with https://github.com/mrbrdo/theine/issues/3 if you have an extra hour of time. Or try it with your project.\nAs was stated there aren't any plans for zeus to support JRuby any time soon.\n. ",
    "hammady": "+1\n. I second you. I didn't even realize that was the problem of \"can't connect to master\" until I read your issue.\n. Great addition! You'd rather put this script in a gist and link to it here :)\n. +1\n. I second you. I didn't even realize that was the problem of \"can't connect to master\" until I read your issue.\n. Great addition! You'd rather put this script in a gist and link to it here :)\n. ",
    "dpisarewski": "+1\n. +1\n. ",
    "alan-andrade": "I don't think this is a zeus problem. It seems you have a controller named `api_controller.rb` somewhere. Are you inheriting from it in the contacts_controller ?\n\nA pastie would help. \n. Hi, I was having a very similar problem.\n\nI was testing anonymous controllers, more info here: https://www.relishapp.com/rspec/rspec-rails/v/2-9/docs/controller-specs/anonymous-controller\n\nThe spec was running correctly, but after the suite finished, I got the following stacktrace:\n\n```\n/Users/alan/dev/merchant-portal/spec/lib/authenticable_spec.rb:53:in `block in <top (required)>': undefined method `controller' for #<Class:0x007fce5c553908> (NoMethodError)\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/rspec-core-2.14.5/lib/rspec/core/example_group.rb:246:in `module_eval'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/rspec-core-2.14.5/lib/rspec/core/example_group.rb:246:in `subclass'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/rspec-core-2.14.5/lib/rspec/core/example_group.rb:232:in `describe'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/rspec-core-2.14.5/lib/rspec/core/dsl.rb:18:in `describe'\n    from /Users/alan/dev/merchant-portal/spec/lib/authenticable_spec.rb:47:in `<top (required)>'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus/load_tracking.rb:50:in `load'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus/load_tracking.rb:50:in `load'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus/load_tracking.rb:43:in `load'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/activesupport-4.0.0/lib/active_support/dependencies.rb:222:in `block in load'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/activesupport-4.0.0/lib/active_support/dependencies.rb:213:in `load_dependency'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/activesupport-4.0.0/lib/active_support/dependencies.rb:222:in `load'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/rspec-core-2.14.5/lib/rspec/core/configuration.rb:896:in `block in load_spec_files'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/rspec-core-2.14.5/lib/rspec/core/configuration.rb:896:in `each'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/rspec-core-2.14.5/lib/rspec/core/configuration.rb:896:in `load_spec_files'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/rspec-core-2.14.5/lib/rspec/core/command_line.rb:22:in `run'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/rspec-core-2.14.5/lib/rspec/core/runner.rb:80:in `run'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/rspec-core-2.14.5/lib/rspec/core/runner.rb:17:in `block in autorun'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:103:in `fork'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:103:in `command'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:80:in `block (3 levels) in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:80:in `fork'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:80:in `block (2 levels) in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:73:in `each'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:73:in `block in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:62:in `loop'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:62:in `go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (3 levels) in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:78:in `fork'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (2 levels) in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:73:in `each'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:73:in `block in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:62:in `loop'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:62:in `go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (3 levels) in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:78:in `fork'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (2 levels) in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:73:in `each'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:73:in `block in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:62:in `loop'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:62:in `go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (3 levels) in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:78:in `fork'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (2 levels) in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:73:in `each'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:73:in `block in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:62:in `loop'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:62:in `go'\n    from -e:1:in `<main>'\n```\n\nCommenting out 'spec/autorun' solved it.\n\nI wonder how did you get the answer @Eleo ???\n\nCheers.\n. I normally do `reset` and then `rm .zeus.lock`\n. I don't think this is a zeus problem. It seems you have a controller named `api_controller.rb` somewhere. Are you inheriting from it in the contacts_controller ?\n\nA pastie would help. \n. Hi, I was having a very similar problem.\n\nI was testing anonymous controllers, more info here: https://www.relishapp.com/rspec/rspec-rails/v/2-9/docs/controller-specs/anonymous-controller\n\nThe spec was running correctly, but after the suite finished, I got the following stacktrace:\n\n```\n/Users/alan/dev/merchant-portal/spec/lib/authenticable_spec.rb:53:in `block in <top (required)>': undefined method `controller' for #<Class:0x007fce5c553908> (NoMethodError)\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/rspec-core-2.14.5/lib/rspec/core/example_group.rb:246:in `module_eval'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/rspec-core-2.14.5/lib/rspec/core/example_group.rb:246:in `subclass'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/rspec-core-2.14.5/lib/rspec/core/example_group.rb:232:in `describe'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/rspec-core-2.14.5/lib/rspec/core/dsl.rb:18:in `describe'\n    from /Users/alan/dev/merchant-portal/spec/lib/authenticable_spec.rb:47:in `<top (required)>'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus/load_tracking.rb:50:in `load'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus/load_tracking.rb:50:in `load'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus/load_tracking.rb:43:in `load'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/activesupport-4.0.0/lib/active_support/dependencies.rb:222:in `block in load'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/activesupport-4.0.0/lib/active_support/dependencies.rb:213:in `load_dependency'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/activesupport-4.0.0/lib/active_support/dependencies.rb:222:in `load'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/rspec-core-2.14.5/lib/rspec/core/configuration.rb:896:in `block in load_spec_files'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/rspec-core-2.14.5/lib/rspec/core/configuration.rb:896:in `each'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/rspec-core-2.14.5/lib/rspec/core/configuration.rb:896:in `load_spec_files'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/rspec-core-2.14.5/lib/rspec/core/command_line.rb:22:in `run'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/rspec-core-2.14.5/lib/rspec/core/runner.rb:80:in `run'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/rspec-core-2.14.5/lib/rspec/core/runner.rb:17:in `block in autorun'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:103:in `fork'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:103:in `command'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:80:in `block (3 levels) in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:80:in `fork'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:80:in `block (2 levels) in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:73:in `each'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:73:in `block in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:62:in `loop'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:62:in `go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (3 levels) in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:78:in `fork'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (2 levels) in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:73:in `each'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:73:in `block in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:62:in `loop'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:62:in `go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (3 levels) in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:78:in `fork'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (2 levels) in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:73:in `each'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:73:in `block in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:62:in `loop'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:62:in `go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (3 levels) in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:78:in `fork'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (2 levels) in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:73:in `each'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:73:in `block in go'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:62:in `loop'\n    from /Users/alan/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus.rb:62:in `go'\n    from -e:1:in `<main>'\n```\n\nCommenting out 'spec/autorun' solved it.\n\nI wonder how did you get the answer @Eleo ???\n\nCheers.\n. I normally do `reset` and then `rm .zeus.lock`\n. ",
    "phallstrom": "@hammady I ended up writing a bash function 'z' that will crawl up directories until it finds \"rails root\" or until it hits my top level directory containing all my projects, then execute zeus.\n\n```\nfunction z {\n  cwd=$PWD\n  while [[ ! -f \"$cwd/Rakefile\" && ! -f \"$cwd/Gemfile\" && ! -d \"$cwd/app\" && ! -d \"$cwd/config\" && ! -d \"$cwd/db\" && \"$cwd\" != \"/Users/philip/Work\" ]]\n  do\n    cwd=${cwd%\\/*}\n  done\n  (cd $cwd && zeus $*)\n}\n```\n\nWorks pretty well so far.  Especially since I can never type zeus correctly, z is much easier :-)\n. @hammady I ended up writing a bash function 'z' that will crawl up directories until it finds \"rails root\" or until it hits my top level directory containing all my projects, then execute zeus.\n\n```\nfunction z {\n  cwd=$PWD\n  while [[ ! -f \"$cwd/Rakefile\" && ! -f \"$cwd/Gemfile\" && ! -d \"$cwd/app\" && ! -d \"$cwd/config\" && ! -d \"$cwd/db\" && \"$cwd\" != \"/Users/philip/Work\" ]]\n  do\n    cwd=${cwd%\\/*}\n  done\n  (cd $cwd && zeus $*)\n}\n```\n\nWorks pretty well so far.  Especially since I can never type zeus correctly, z is much easier :-)\n. ",
    "ATripathy1": "I am trying to run zeus within the vagrant and I have tried many options the zeus sever starts up but. I get the following error when I run the test.\n\n$ zeus test spec/models/llooker_spec.rb \nCan't connect to master. Run zeus start first.\n\nvagrant 4495 3739 0 21:34 pts/0 00:00:01 /home/vagrant/.rvm/gems/ruby-2.1.5@homestars/gems/zeus-0.15.4/build/zeus-linux-amd64 start master\nvagrant 4509 4495 0 21:34 pts/0 00:00:00 /home/vagrant/.rvm/gems/ruby-2.1.5@homestars/gems/zeus-0.15.4/ext/inotify-wrapper/inotify-wrapper\nvagrant 4512 4495 0 21:34 pts/0 00:00:02 zeus slave: boot\n\nvagrant 4526 4512 2 21:34 pts/0 00:00:06 zeus slave: default_bundle\n\nvagrant 4531 4526 10 21:34 pts/0 00:00:29 zeus slave: development_environment\n\nvagrant 4534 4526 10 21:34 pts/0 00:00:27 zeus slave: test_environment\n\nvagrant 4572 4534 8 21:35 pts/0 00:00:19 zeus slave: test_helper\n\nvagrant 4576 4531 0 21:35 pts/0 00:00:00 zeus slave: prerake\n\nvagrant 4636 4239 0 21:39 pts/2 00:00:00 grep --color=auto zeus\n\nI need some help. I have tried using ZEUSSOCK = /tmp/zeus.sock zeus start master...still the above errors show up...there is got to be a solution to this?\n. I am trying to run zeus within the vagrant and I have tried many options the zeus sever starts up but. I get the following error when I run the test.\n\n$ zeus test spec/models/llooker_spec.rb \nCan't connect to master. Run zeus start first.\n\nvagrant   4495  3739  0 21:34 pts/0    00:00:01 /home/vagrant/.rvm/gems/ruby-2.1.5@homestars/gems/zeus-0.15.4/build/zeus-linux-amd64 start master\nvagrant   4509  4495  0 21:34 pts/0    00:00:00 /home/vagrant/.rvm/gems/ruby-2.1.5@homestars/gems/zeus-0.15.4/ext/inotify-wrapper/inotify-wrapper\nvagrant   4512  4495  0 21:34 pts/0    00:00:02 zeus slave: boot  \nvagrant   4526  4512  2 21:34 pts/0    00:00:06 zeus slave: default_bundle  \nvagrant   4531  4526 10 21:34 pts/0    00:00:29 zeus slave: development_environment  \nvagrant   4534  4526 10 21:34 pts/0    00:00:27 zeus slave: test_environment  \nvagrant   4572  4534  8 21:35 pts/0    00:00:19 zeus slave: test_helper  \nvagrant   4576  4531  0 21:35 pts/0    00:00:00 zeus slave: prerake  \nvagrant   4636  4239  0 21:39 pts/2    00:00:00 grep --color=auto zeus\n\nI need some help. I have tried using ZEUSSOCK = /tmp/zeus.sock zeus start master...still the above errors show up...there is got to be a solution to this?\n. I am trying to run zeus within the vagrant and I have tried many options the zeus sever starts up but. I get the following error when I run the test.\n\n$ zeus test spec/models/llooker_spec.rb \nCan't connect to master. Run zeus start first.\n\nvagrant 4495 3739 0 21:34 pts/0 00:00:01 /home/vagrant/.rvm/gems/ruby-2.1.5@homestars/gems/zeus-0.15.4/build/zeus-linux-amd64 start master\nvagrant 4509 4495 0 21:34 pts/0 00:00:00 /home/vagrant/.rvm/gems/ruby-2.1.5@homestars/gems/zeus-0.15.4/ext/inotify-wrapper/inotify-wrapper\nvagrant 4512 4495 0 21:34 pts/0 00:00:02 zeus slave: boot\n\nvagrant 4526 4512 2 21:34 pts/0 00:00:06 zeus slave: default_bundle\n\nvagrant 4531 4526 10 21:34 pts/0 00:00:29 zeus slave: development_environment\n\nvagrant 4534 4526 10 21:34 pts/0 00:00:27 zeus slave: test_environment\n\nvagrant 4572 4534 8 21:35 pts/0 00:00:19 zeus slave: test_helper\n\nvagrant 4576 4531 0 21:35 pts/0 00:00:00 zeus slave: prerake\n\nvagrant 4636 4239 0 21:39 pts/2 00:00:00 grep --color=auto zeus\n\nI need some help. I have tried using ZEUSSOCK = /tmp/zeus.sock zeus start master...still the above errors show up...there is got to be a solution to this?\n. I am trying to run zeus within the vagrant and I have tried many options the zeus sever starts up but. I get the following error when I run the test.\n\n$ zeus test spec/models/llooker_spec.rb \nCan't connect to master. Run zeus start first.\n\nvagrant   4495  3739  0 21:34 pts/0    00:00:01 /home/vagrant/.rvm/gems/ruby-2.1.5@homestars/gems/zeus-0.15.4/build/zeus-linux-amd64 start master\nvagrant   4509  4495  0 21:34 pts/0    00:00:00 /home/vagrant/.rvm/gems/ruby-2.1.5@homestars/gems/zeus-0.15.4/ext/inotify-wrapper/inotify-wrapper\nvagrant   4512  4495  0 21:34 pts/0    00:00:02 zeus slave: boot  \nvagrant   4526  4512  2 21:34 pts/0    00:00:06 zeus slave: default_bundle  \nvagrant   4531  4526 10 21:34 pts/0    00:00:29 zeus slave: development_environment  \nvagrant   4534  4526 10 21:34 pts/0    00:00:27 zeus slave: test_environment  \nvagrant   4572  4534  8 21:35 pts/0    00:00:19 zeus slave: test_helper  \nvagrant   4576  4531  0 21:35 pts/0    00:00:00 zeus slave: prerake  \nvagrant   4636  4239  0 21:39 pts/2    00:00:00 grep --color=auto zeus\n\nI need some help. I have tried using ZEUSSOCK = /tmp/zeus.sock zeus start master...still the above errors show up...there is got to be a solution to this?\n. ",
    "solojavier": "same here\n. same here\n. ",
    "Phazz": "got the same issue with a slightly different message:\n\n```\n/Users/pierre/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus/rails.rb:4: warning: already initialized constant APP_PATH\nbin/rails:2: warning: previous definition of APP_PATH was here\n```\n. @burke Do you think the proposal of @veloper should make its way to the codebase?\nThanks\n. :+1: @veloper. Looks good to me.\n. got the same issue with a slightly different message:\n\n```\n/Users/pierre/.rvm/gems/ruby-2.0.0-p247/gems/zeus-0.13.3/lib/zeus/rails.rb:4: warning: already initialized constant APP_PATH\nbin/rails:2: warning: previous definition of APP_PATH was here\n```\n. @burke Do you think the proposal of @veloper should make its way to the codebase?\nThanks\n. :+1: @veloper. Looks good to me.\n. ",
    "veloper": "Getting this on use of `rails console` and `rails server` ...\n- The error/warning \"wine\" is occurring here... \n  - https://github.com/burke/zeus/blob/v0.13.0/rubygem/lib/zeus/rails.rb#L4\n- ... because it conflicts with the `rails` command... \n  - `script/rails`\n    - `APP_PATH = File.expand_path('../../config/application',  __FILE__)` \n- ... this could be solved by changing zeus to check for the constant like the code below ...\n  - `APP_PATH  = File.expand_path('config/application',  ROOT_PATH) unless defined? APP_PATH`\n. @burke - Pull request issued; Would you like to take it from here?\n. Issued fixed in #447 PR\n. @ike-bloomfire - I threw this Bash Script together over this weekend and I think it might be close to what you're looking for: https://github.com/veloper/Wait-For-Zeus\n. - I like the intent of this pull request. \n  - The 'shorthand' approach definitely has precedent in many other gems.\n- Can anyone else speak to the correct placement of the Go code?\n- Should an update to the `zeus --help` manual-page also included be in this PR?\n. Getting this on use of `rails console` and `rails server` ...\n- The error/warning \"wine\" is occurring here... \n  - https://github.com/burke/zeus/blob/v0.13.0/rubygem/lib/zeus/rails.rb#L4\n- ... because it conflicts with the `rails` command... \n  - `script/rails`\n    - `APP_PATH = File.expand_path('../../config/application',  __FILE__)` \n- ... this could be solved by changing zeus to check for the constant like the code below ...\n  - `APP_PATH  = File.expand_path('config/application',  ROOT_PATH) unless defined? APP_PATH`\n. @burke - Pull request issued; Would you like to take it from here?\n. Issued fixed in #447 PR\n. @ike-bloomfire - I threw this Bash Script together over this weekend and I think it might be close to what you're looking for: https://github.com/veloper/Wait-For-Zeus\n. - I like the intent of this pull request. \n  - The 'shorthand' approach definitely has precedent in many other gems.\n- Can anyone else speak to the correct placement of the Go code?\n- Should an update to the `zeus --help` manual-page also included be in this PR?\n. ",
    "vladiim": "All your `require` statements should go above `RSpec.configure do |config|` \n\ni.e. your file should look like:\n\n``` ruby\nENV['RAILS_ENV'] = 'test'\nrequire File.expand_path(\"../../config/environment\", __FILE__)\nrequire 'rspec/rails'\nrequire 'fabrication'\nrequire 'faker'\nrequire 'database_cleaner'\nrequire 'capybara/poltergeist'\n\nRSpec.configure do |config|\n  ### config stuff here\n```\n. All your `require` statements should go above `RSpec.configure do |config|` \n\ni.e. your file should look like:\n\n``` ruby\nENV['RAILS_ENV'] = 'test'\nrequire File.expand_path(\"../../config/environment\", __FILE__)\nrequire 'rspec/rails'\nrequire 'fabrication'\nrequire 'faker'\nrequire 'database_cleaner'\nrequire 'capybara/poltergeist'\n\nRSpec.configure do |config|\n  ### config stuff here\n```\n. ",
    "xcopy": "The same problem\n\n```\n$ zeus rspec \n/home/.../spec/spec_helper.rb:17:in `<top (required)>': undefined method `configure' for RSpec:Module (NoMethodError)\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/activesupport-4.0.5/lib/active_support/dependencies.rb:229:in `require'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/activesupport-4.0.5/lib/active_support/dependencies.rb:229:in `block in require'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/activesupport-4.0.5/lib/active_support/dependencies.rb:214:in `load_dependency'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/activesupport-4.0.5/lib/active_support/dependencies.rb:229:in `require'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/zeus-0.15.1/lib/zeus/rails.rb:189:in `test_helper'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/zeus-0.15.1/lib/zeus.rb:200:in `run_action'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/zeus-0.15.1/lib/zeus.rb:74:in `block (2 levels) in boot_steps'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/zeus-0.15.1/lib/zeus/load_tracking.rb:7:in `features_loaded_by'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/zeus-0.15.1/lib/zeus.rb:73:in `block in boot_steps'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/zeus-0.15.1/lib/zeus.rb:56:in `catch'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/zeus-0.15.1/lib/zeus.rb:56:in `boot_steps'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/zeus-0.15.1/lib/zeus.rb:48:in `go'\n    from -e:1:in `<main>'\n```\n\nGemfile\n\n```\ngroup :test do\n  gem 'capybara'\n  gem 'factory_girl_rails'\n  gem 'database_cleaner'\nend\n\ngroup :development, :test do\n  gem 'rspec-rails', '~> 3.0.1'\nend\n```\n\nrvm 1.25.27\nruby 1.9.3p547\nRails 4.0.5\n\nWhat is wrong? :(\n\nPS. `$ rspec` command (without `zeus`) works fine.\n. @sushil10018, thanks a lot!\n. The same problem\n\n```\n$ zeus rspec \n/home/.../spec/spec_helper.rb:17:in `<top (required)>': undefined method `configure' for RSpec:Module (NoMethodError)\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/activesupport-4.0.5/lib/active_support/dependencies.rb:229:in `require'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/activesupport-4.0.5/lib/active_support/dependencies.rb:229:in `block in require'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/activesupport-4.0.5/lib/active_support/dependencies.rb:214:in `load_dependency'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/activesupport-4.0.5/lib/active_support/dependencies.rb:229:in `require'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/zeus-0.15.1/lib/zeus/rails.rb:189:in `test_helper'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/zeus-0.15.1/lib/zeus.rb:200:in `run_action'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/zeus-0.15.1/lib/zeus.rb:74:in `block (2 levels) in boot_steps'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/zeus-0.15.1/lib/zeus/load_tracking.rb:7:in `features_loaded_by'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/zeus-0.15.1/lib/zeus.rb:73:in `block in boot_steps'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/zeus-0.15.1/lib/zeus.rb:56:in `catch'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/zeus-0.15.1/lib/zeus.rb:56:in `boot_steps'\n    from /home/kairat/.rvm/gems/ruby-1.9.3-p547/gems/zeus-0.15.1/lib/zeus.rb:48:in `go'\n    from -e:1:in `<main>'\n```\n\nGemfile\n\n```\ngroup :test do\n  gem 'capybara'\n  gem 'factory_girl_rails'\n  gem 'database_cleaner'\nend\n\ngroup :development, :test do\n  gem 'rspec-rails', '~> 3.0.1'\nend\n```\n\nrvm 1.25.27\nruby 1.9.3p547\nRails 4.0.5\n\nWhat is wrong? :(\n\nPS. `$ rspec` command (without `zeus`) works fine.\n. @sushil10018, thanks a lot!\n. ",
    "sushil10018": "The error is occurred from spec/spec_helper.rb, RSpec module is used here but 'rspec/rails' is not included. Adding the following code to the top of spec/spec_helper.rb fixed the issue in my case\n\n```\nrequire 'rspec/rails'\n```\n\nThough this could successfully run the rspec through zeus, it gave the following error without zeus\n\n```\n/Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/actionpack-4.0.4/lib/action_view/template.rb:8:in `<class:Template>': uninitialized constant ActiveSupport::Autoload (NameError)\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/actionpack-4.0.4/lib/action_view/template.rb:7:in `<module:ActionView>'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/actionpack-4.0.4/lib/action_view/template.rb:5:in `<top (required)>'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/actionpack-4.0.4/lib/action_view/template/resolver.rb:4:in `require'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/actionpack-4.0.4/lib/action_view/template/resolver.rb:4:in `<top (required)>'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/actionpack-4.0.4/lib/action_view/testing/resolvers.rb:1:in `require'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/actionpack-4.0.4/lib/action_view/testing/resolvers.rb:1:in `<top (required)>'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-rails-3.0.1/lib/rspec/rails/view_rendering.rb:1:in `require'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-rails-3.0.1/lib/rspec/rails/view_rendering.rb:1:in `<top (required)>'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-rails-3.0.1/lib/rspec/rails.rb:4:in `require'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-rails-3.0.1/lib/rspec/rails.rb:4:in `<top (required)>'\n    from /Users/brijesh/projects/lux/spec/spec_helper.rb:1:in `require'\n    from /Users/brijesh/projects/lux/spec/spec_helper.rb:1:in `<top (required)>'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/configuration.rb:1018:in `require'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/configuration.rb:1018:in `block in requires='\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/configuration.rb:1018:in `each'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/configuration.rb:1018:in `requires='\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/configuration_options.rb:101:in `block in process_options_into'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/configuration_options.rb:100:in `each'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/configuration_options.rb:100:in `process_options_into'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/configuration_options.rb:22:in `configure'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/runner.rb:96:in `setup'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/runner.rb:85:in `run'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/runner.rb:70:in `run'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/runner.rb:38:in `invoke'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/exe/rspec:4:in `<top (required)>'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/bin/rspec:23:in `load'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/bin/rspec:23:in `<main>'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/bin/ruby_executable_hooks:15:in `eval'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/bin/ruby_executable_hooks:15:in `<main>'\n```\n\nYou may use this solution deciding whether to use zues or not.\nBut adding the following code to the top of spec/spec_helper.rb resulted rspec to run both with or without zeus\n\n```\nENV[\"RAILS_ENV\"] ||= 'test'\nrequire File.expand_path(\"../../config/environment\", __FILE__)\nrequire 'rspec/rails'\n```\n\nNow you may successfully run:\n\n```\n$ rspec spec\nOR\n$ zeus rspec spec\n```\n\nI'm not quite sure if it is the correct solution or not but anyway it does work for sure! :)\nAlso, with this implemented you may remove the ENV and require File expand from spec/rails_helper.rb and just require spec_helper.rb as following the DRY principle.\n. Thanks @CDainMiller ! :)\n. The error is occurred from spec/spec_helper.rb, RSpec module is used here but 'rspec/rails' is not included. Adding the following code to the top of spec/spec_helper.rb fixed the issue in my case\n\n```\nrequire 'rspec/rails'\n```\n\nThough this could successfully run the rspec through zeus, it gave the following error without zeus\n\n```\n/Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/actionpack-4.0.4/lib/action_view/template.rb:8:in `<class:Template>': uninitialized constant ActiveSupport::Autoload (NameError)\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/actionpack-4.0.4/lib/action_view/template.rb:7:in `<module:ActionView>'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/actionpack-4.0.4/lib/action_view/template.rb:5:in `<top (required)>'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/actionpack-4.0.4/lib/action_view/template/resolver.rb:4:in `require'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/actionpack-4.0.4/lib/action_view/template/resolver.rb:4:in `<top (required)>'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/actionpack-4.0.4/lib/action_view/testing/resolvers.rb:1:in `require'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/actionpack-4.0.4/lib/action_view/testing/resolvers.rb:1:in `<top (required)>'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-rails-3.0.1/lib/rspec/rails/view_rendering.rb:1:in `require'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-rails-3.0.1/lib/rspec/rails/view_rendering.rb:1:in `<top (required)>'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-rails-3.0.1/lib/rspec/rails.rb:4:in `require'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-rails-3.0.1/lib/rspec/rails.rb:4:in `<top (required)>'\n    from /Users/brijesh/projects/lux/spec/spec_helper.rb:1:in `require'\n    from /Users/brijesh/projects/lux/spec/spec_helper.rb:1:in `<top (required)>'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/configuration.rb:1018:in `require'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/configuration.rb:1018:in `block in requires='\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/configuration.rb:1018:in `each'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/configuration.rb:1018:in `requires='\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/configuration_options.rb:101:in `block in process_options_into'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/configuration_options.rb:100:in `each'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/configuration_options.rb:100:in `process_options_into'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/configuration_options.rb:22:in `configure'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/runner.rb:96:in `setup'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/runner.rb:85:in `run'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/runner.rb:70:in `run'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/lib/rspec/core/runner.rb:38:in `invoke'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/gems/rspec-core-3.0.1/exe/rspec:4:in `<top (required)>'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/bin/rspec:23:in `load'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/bin/rspec:23:in `<main>'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/bin/ruby_executable_hooks:15:in `eval'\n    from /Users/brijesh/.rvm/gems/ruby-2.0.0-p353/bin/ruby_executable_hooks:15:in `<main>'\n```\n\nYou may use this solution deciding whether to use zues or not.\nBut adding the following code to the top of spec/spec_helper.rb resulted rspec to run both with or without zeus\n\n```\nENV[\"RAILS_ENV\"] ||= 'test'\nrequire File.expand_path(\"../../config/environment\", __FILE__)\nrequire 'rspec/rails'\n```\n\nNow you may successfully run:\n\n```\n$ rspec spec\nOR\n$ zeus rspec spec\n```\n\nI'm not quite sure if it is the correct solution or not but anyway it does work for sure! :)\nAlso, with this implemented you may remove the ENV and require File expand from spec/rails_helper.rb and just require spec_helper.rb as following the DRY principle.\n. Thanks @CDainMiller ! :)\n. ",
    "hqt": "@sushil10018  thanks. it works. Just a little note here, for someone else like me trusting in your solution :\"P . @sushil10018  thanks. it works. Just a little note here, for someone else like me trusting in your solution :\"P . ",
    "quark-zju": "I found real multi-line environment variable can not be set from shell. Shell always escape environment variables.\n\nClosing this issue because it's not zeus's problem.\n. I think it is reasonable to prevent user from massing up the output by pressing some keys in the terminal. Programs with progress bars like `wget`, `pv` also face the same problem.\n\nPersonally, I'd like zeus master to (optionally) be silent. User use `zeus status` to see the status, `watch zeus status` to see (nearly) realtime status. Or behave like `dd`, only print status when master process receives `SIGUSR1`.\n. Guard supports zeus. Add `zeus: true` in `Guardfile`:\n\n``` ruby\n# Guardfile\nguard 'rspec', zeus: true, bundler: false do\n  # ...\nend\n```\n\nThen run guard separately, in another terminal:\n\n```\nbundle exec guard\n```\n\nThe output will not be messed up.\n. I found real multi-line environment variable can not be set from shell. Shell always escape environment variables.\n\nClosing this issue because it's not zeus's problem.\n. I think it is reasonable to prevent user from massing up the output by pressing some keys in the terminal. Programs with progress bars like `wget`, `pv` also face the same problem.\n\nPersonally, I'd like zeus master to (optionally) be silent. User use `zeus status` to see the status, `watch zeus status` to see (nearly) realtime status. Or behave like `dd`, only print status when master process receives `SIGUSR1`.\n. Guard supports zeus. Add `zeus: true` in `Guardfile`:\n\n``` ruby\n# Guardfile\nguard 'rspec', zeus: true, bundler: false do\n  # ...\nend\n```\n\nThen run guard separately, in another terminal:\n\n```\nbundle exec guard\n```\n\nThe output will not be messed up.\n. ",
    "pgaertig": "I thought that conflict with RSpec was the problem, but not. I confirm that above happens also with clean Rails 3.2.13 project, Ruby 2.0.0-p0, Zeus 0.13.3 and test-unit 2.5.4. No guard. To reproduce do following:\n\nAppend to `Gemfile`:\n\n```\ngem 'test-unit'\ngem 'zeus'\n```\n\nRun `bundle install`.\n\nCreate file `test/unit/demo_test.rb`:\n\n```\nrequire 'test_helper'\nclass DemoTest < ActiveSupport::TestCase\n  test \"for_sure_false\" do\n    assert false\n  end\nend\n```\n\nRun Zeus, `zeus start`.\n\nRun test, `zeus test test/unit/demo_test.rb`.\n\nCommand finishes without any output.\n. I couldn't fix zeus and because this issue was a blocker so finally I switched to spring (alternative preloader) and added it's support to https://github.com/guard/guard-test/commit/1a83e214a8f02e1abe47c4b98a51a8566e49790c recently.\n. I thought that conflict with RSpec was the problem, but not. I confirm that above happens also with clean Rails 3.2.13 project, Ruby 2.0.0-p0, Zeus 0.13.3 and test-unit 2.5.4. No guard. To reproduce do following:\n\nAppend to `Gemfile`:\n\n```\ngem 'test-unit'\ngem 'zeus'\n```\n\nRun `bundle install`.\n\nCreate file `test/unit/demo_test.rb`:\n\n```\nrequire 'test_helper'\nclass DemoTest < ActiveSupport::TestCase\n  test \"for_sure_false\" do\n    assert false\n  end\nend\n```\n\nRun Zeus, `zeus start`.\n\nRun test, `zeus test test/unit/demo_test.rb`.\n\nCommand finishes without any output.\n. I couldn't fix zeus and because this issue was a blocker so finally I switched to spring (alternative preloader) and added it's support to https://github.com/guard/guard-test/commit/1a83e214a8f02e1abe47c4b98a51a8566e49790c recently.\n. ",
    "itkin": "+1\n. +1\n. ",
    "Randuin": "I'm running into this as well\n. I'm also seeing this on my projects\n. I'm running into this as well\n. I'm also seeing this on my projects\n. ",
    "dy-dx": "+1\n. +1 please!!\n. I was able to work around this by putting `config.reset` at the top of the `RSpec.configure` block in my spec_helper.rb.\n. I still believe this is a bug in zeus -- `config.reset` produces undesirable side effects.\n. I run tests with `$ zeus test [filename.rb]`. No other zeus commands exhibit this behavior. I have tested this with zeus 0.13 and 0.15.\n. If it helps, I got the `config.reset` idea from http://stackoverflow.com/questions/22239382/how-can-i-configure-rspec-to-show-output-with-spork, where someone had the same issue with Spork.\n. +1\n. +1 please!!\n. I was able to work around this by putting `config.reset` at the top of the `RSpec.configure` block in my spec_helper.rb.\n. I still believe this is a bug in zeus -- `config.reset` produces undesirable side effects.\n. I run tests with `$ zeus test [filename.rb]`. No other zeus commands exhibit this behavior. I have tested this with zeus 0.13 and 0.15.\n. If it helps, I got the `config.reset` idea from http://stackoverflow.com/questions/22239382/how-can-i-configure-rspec-to-show-output-with-spork, where someone had the same issue with Spork.\n. ",
    "matthuhiggins": "This isn't zeus's fault.. factories are preloaded on initialization.\n. This isn't zeus's fault.. factories are preloaded on initialization.\n. ",
    "oma": "That helped but this keeps biting me and is a reason for several of my co-workers not using zeus (that their code changes aren't always reflected. ) I'd love to see a guide on how to auto-restart upon changing files in initializers.\n. That helped but this keeps biting me and is a reason for several of my co-workers not using zeus (that their code changes aren't always reflected. ) I'd love to see a guide on how to auto-restart upon changing files in initializers.\n. ",
    "kiela": "On rails 4.0.0.beta1 empty project it works fine for me too \n\n```\n$ ruby -v\nruby 2.0.0p0 (2013-02-24 revision 39474) [x86_64-linux]\n$ rails -v\nRails 4.0.0.beta1\n$ zeus --version\nZeus version 0.13.3.rc2\n```\n. On rails 4.0.0.beta1 empty project it works fine for me too \n\n```\n$ ruby -v\nruby 2.0.0p0 (2013-02-24 revision 39474) [x86_64-linux]\n$ rails -v\nRails 4.0.0.beta1\n$ zeus --version\nZeus version 0.13.3.rc2\n```\n. ",
    "PriteshJain": ":+1:  \n\nI updated the gem few days ago its started properly but stopped working after some time after a crash\n\n$ ruby -v\nruby 2.0.0p195 (2013-05-14 revision 40734) [x86_64-linux]\n\n$ rails -v\nRails 3.2.13\n\n$ zeus --version\nZeus version 0.13.3.rc\n. @burke can you help on how to take backtrace for zeus \n. :+1:  \n\nI updated the gem few days ago its started properly but stopped working after some time after a crash\n\n$ ruby -v\nruby 2.0.0p195 (2013-05-14 revision 40734) [x86_64-linux]\n\n$ rails -v\nRails 3.2.13\n\n$ zeus --version\nZeus version 0.13.3.rc\n. @burke can you help on how to take backtrace for zeus \n. ",
    "child": "I have the same problem (everything finished as crashed) in Ruby 2.0.0p195 and Rails 3.2.13. I can't create a backtrace the way you suggested, because I get this:\n\n```\n$ zeus rake\nCan't connect to master. Run zeus start first.\n```\n\nOf course this happens after I ran \"zeus start\", which failed.\n. It turns out it was a typical PEBKAC - I had to leave \"zeus start\" running (even if it was showing \"crashed\" on everything) and run \"zeus rake\" from another terminal. After that I finally got the backtrace and it turned out it was some app-specific problem (some versions of rake clashing).\n. I have the same problem (everything finished as crashed) in Ruby 2.0.0p195 and Rails 3.2.13. I can't create a backtrace the way you suggested, because I get this:\n\n```\n$ zeus rake\nCan't connect to master. Run zeus start first.\n```\n\nOf course this happens after I ran \"zeus start\", which failed.\n. It turns out it was a typical PEBKAC - I had to leave \"zeus start\" running (even if it was showing \"crashed\" on everything) and run \"zeus rake\" from another terminal. After that I finally got the backtrace and it turned out it was some app-specific problem (some versions of rake clashing).\n. ",
    "Hungor": "Having the same problem\n. Fixed by following commands from the repository.\n\n```\ngem install zeus\nzeus init\nzeus start\n```\n. Having the same problem\n. Fixed by following commands from the repository.\n\n```\ngem install zeus\nzeus init\nzeus start\n```\n. ",
    "scottvrosenthal": "Seems you just need to do:\n\nzeus rake assets:clean:all\n\nClosing.\n. Seems you just need to do:\n\nzeus rake assets:clean:all\n\nClosing.\n. ",
    "weiser": "I'm seeing the same thing.  However, when i run `which zeus`, it appears that is is running from ruby 1.8.7.\n\nAfter making sure that I'm using ruby 1.9.3, `zeus start` works and i can run tests\n. I'm seeing the same thing.  However, when i run `which zeus`, it appears that is is running from ruby 1.8.7.\n\nAfter making sure that I'm using ruby 1.9.3, `zeus start` works and i can run tests\n. ",
    "bogdan": "Sorry, it was due to 1.8.7.\n\nZeus should exits loudly when launched on 1.8.7.\n. Maybe this is not related as the problem here occurs in zeus code but not in the environment made by zeus for ruby.. Sorry, it was due to 1.8.7.\n\nZeus should exits loudly when launched on 1.8.7.\n. Maybe this is not related as the problem here occurs in zeus code but not in the environment made by zeus for ruby.. ",
    "bezelga": "@sideshowcoder is this already working fine?\n. @burke in which version is this going to be released? I've tried to build from master but had the same problem of https://github.com/burke/zeus/issues/67.\n. I've tried with 0.13.4.pre2 but did not work:\n\n```\ngem list | grep zeus\nzeus (0.13.4.pre2)\n\nzeus start\nStarting Zeus server\nUnable to accept socket connection.\nIt looks like Zeus is already running. If not, remove .zeus.sock and try again.\n```\n\nI am running vagrant with Ubuntu 13.04.\n\nAbout the #67 I made a confusion, sorry, it is just about one comment from that issue, trying to build the gem from master I've received this error:\n\n```\ngem install zeus-0.0.0.gem\nBuilding native extensions.  This could take a while...\nERROR:  Error installing zeus-0.0.0.gem:\n    ERROR: Failed to build gem native extension.\n\n    /home/vagrant/.rbenv/versions/2.0.0-p0/bin/ruby extconf.rb\n\nmake\nmake: *** No rule to make target `inotify-wrapper.o', needed by `inotify-wrapper'.  Stop.\n```\n\nSeems to be some kind of dependency to build/install it. Any tips?\n. the env var should was blank, when should it be set?\n\nRunning `ZEUSSOCK=/tmp/zeus-myproj.sock zeus start` changed the error:\n\n![screen shot 2013-05-21 at 11 13 44 pm](https://f.cloud.github.com/assets/22406/546189/43897c4e-c285-11e2-91a8-0bb294ef9187.png)\n\n```\n$ zeus server\nCan't connect to master. Run zeus start first.\n```\n\nAbout the version, I think it is OK. I've uninstalled, executed `rbenv rehash` to remove the shims then installed again and executed `rbenv rehash`.\n\n`which zeus: /home/vagrant/.rbenv/shims/zeus`\n. come on @burke, merge it! \\o/ :rocket: \n. @sideshowcoder is this already working fine?\n. @burke in which version is this going to be released? I've tried to build from master but had the same problem of https://github.com/burke/zeus/issues/67.\n. I've tried with 0.13.4.pre2 but did not work:\n\n```\ngem list | grep zeus\nzeus (0.13.4.pre2)\n\nzeus start\nStarting Zeus server\nUnable to accept socket connection.\nIt looks like Zeus is already running. If not, remove .zeus.sock and try again.\n```\n\nI am running vagrant with Ubuntu 13.04.\n\nAbout the #67 I made a confusion, sorry, it is just about one comment from that issue, trying to build the gem from master I've received this error:\n\n```\ngem install zeus-0.0.0.gem\nBuilding native extensions.  This could take a while...\nERROR:  Error installing zeus-0.0.0.gem:\n    ERROR: Failed to build gem native extension.\n\n    /home/vagrant/.rbenv/versions/2.0.0-p0/bin/ruby extconf.rb\n\nmake\nmake: *** No rule to make target `inotify-wrapper.o', needed by `inotify-wrapper'.  Stop.\n```\n\nSeems to be some kind of dependency to build/install it. Any tips?\n. the env var should was blank, when should it be set?\n\nRunning `ZEUSSOCK=/tmp/zeus-myproj.sock zeus start` changed the error:\n\n![screen shot 2013-05-21 at 11 13 44 pm](https://f.cloud.github.com/assets/22406/546189/43897c4e-c285-11e2-91a8-0bb294ef9187.png)\n\n```\n$ zeus server\nCan't connect to master. Run zeus start first.\n```\n\nAbout the version, I think it is OK. I've uninstalled, executed `rbenv rehash` to remove the shims then installed again and executed `rbenv rehash`.\n\n`which zeus: /home/vagrant/.rbenv/shims/zeus`\n. come on @burke, merge it! \\o/ :rocket: \n. ",
    "panthomakos": "It would be great to get this merged to master so that zeus works with vagrant. I fixed the specs in #338 .\n. It would be great to get this merged to master so that zeus works with vagrant. I fixed the specs in #338 .\n. ",
    "lynaghk": "Zeus was installed globally in both cases, and ruby 1.9.3p392 run with rbenv.\nSince it happened on both a Mac OS X and a Linux box, I'd be very surprised if it were an environmental thing, but if it works for you I'm out of ideas =/\n. I'm not in a position to test at the moment, but since I opened this issue I hand-rolled a ZeroMQ based solution to the problem I was considering using Zeus for.\nI'll close this now, and if others have issues they can reopen.\n. Sure thing.\nI'm not surprised, env vars are a mess and they soil everything they touch---which is why you need them so often =P\n\nThanks anyway!\n. Zeus was installed globally in both cases, and ruby 1.9.3p392 run with rbenv.\nSince it happened on both a Mac OS X and a Linux box, I'd be very surprised if it were an environmental thing, but if it works for you I'm out of ideas =/\n. I'm not in a position to test at the moment, but since I opened this issue I hand-rolled a ZeroMQ based solution to the problem I was considering using Zeus for.\nI'll close this now, and if others have issues they can reopen.\n. Sure thing.\nI'm not surprised, env vars are a mess and they soil everything they touch---which is why you need them so often =P\n\nThanks anyway!\n. ",
    "joostlubach": "I have exactly this issue, and it still happens with 0.13.4.pre. Also, if I have a `zeus.json` like this:\n\n``` javascript\n{\n  \"command\": \"ruby -rubygems -r./zeus_plan -eZeus.go\",\n\n  \"plan\": {\n    \"boot\": {\n      \"puts_test\": []\n    }\n  }\n}\n```\n\nAnd a `zeus_plan.rb` like this:\n\n``` ruby\nrequire 'zeus'\n\nclass CustomPlan < Zeus::Plan\n\n  def boot\n  end\n\n  def puts_test\n    puts \"test\"\n  end\n\nend\n\nZeus.plan = CustomPlan.new\n```\n\nI get the following:\n\n``` bash\n> zeus start\nStarting Zeus server\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus puts_test\n```\n\nThen when I run `zeus puts_test`, it freezes, and the zeus server outputs:\n\n``` bash\nslavenode.go:312: write unix : broken pipe\n```\n\nWhen I kill the Zeus server, I get `zeusclient.go:85: EOF` in the other terminal window, where I ran the command `zeus puts_test`.\n. I have exactly this issue, and it still happens with 0.13.4.pre. Also, if I have a `zeus.json` like this:\n\n``` javascript\n{\n  \"command\": \"ruby -rubygems -r./zeus_plan -eZeus.go\",\n\n  \"plan\": {\n    \"boot\": {\n      \"puts_test\": []\n    }\n  }\n}\n```\n\nAnd a `zeus_plan.rb` like this:\n\n``` ruby\nrequire 'zeus'\n\nclass CustomPlan < Zeus::Plan\n\n  def boot\n  end\n\n  def puts_test\n    puts \"test\"\n  end\n\nend\n\nZeus.plan = CustomPlan.new\n```\n\nI get the following:\n\n``` bash\n> zeus start\nStarting Zeus server\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus puts_test\n```\n\nThen when I run `zeus puts_test`, it freezes, and the zeus server outputs:\n\n``` bash\nslavenode.go:312: write unix : broken pipe\n```\n\nWhen I kill the Zeus server, I get `zeusclient.go:85: EOF` in the other terminal window, where I ran the command `zeus puts_test`.\n. ",
    "jaredbeck": "I'm still seeing this with Zeus version 0.13.3.rc2\n. I'm still seeing this with Zeus version 0.13.3.rc2\n. ",
    "markburns": "+1\n. +1\n. ",
    "wpp": "```\nzeus test test/unit\n```\n\nor in Rails 4\n\n```\nzeus test test/models\n```\n\nalso works with controllers and integration.\n. ```\nzeus test test/unit\n```\n\nor in Rails 4\n\n```\nzeus test test/models\n```\n\nalso works with controllers and integration.\n. ",
    "valscion": "Any news on this matter? I just stumbled upon this when I was writing a script. Now I have to use `rails runner` to run my script in order for me to quickly see some warning conditions from a script generating CSV output directly to stdout :disappointed: \n. Any news on this matter? I just stumbled upon this when I was writing a script. Now I have to use `rails runner` to run my script in order for me to quickly see some warning conditions from a script generating CSV output directly to stdout :disappointed: \n. ",
    "gjaldon": "Just tried running `rails s` and the server gets  stuck when trying to run `mongod`. This is not a Zeus issue.\n. Just tried running `rails s` and the server gets  stuck when trying to run `mongod`. This is not a Zeus issue.\n. ",
    "JESii": "FYI: I have 8Gigs of RAM on this machine and also rebooted, yet the problem persists.\n. Also, note that\n\n``` shell\nzeus rspec spec\n```\n\ngives the expected result of no errors.\n. Both give the same results now, although I've finished up with that set of development -- \n\nThe reason I would use rake is to just do `zeus rake` to run all tests... and I started running standalone rake because a test failed that I expected to pass.\n\nI'm guessing it was some temporary abnormality (maybe not getting updated because of initialization changes?)\n\n## Thanks for the help...jon\n\nJon Seidel, CMC\u00ae\nEffective Decisions... Priceless\n\nThe desired way to run rspec via zeus is `zeus rspec ...`. Actually running it via rake saves you no time, because rake under the hood executes following:\n\n```\n/home/jseidel/.rvm/rubies/ruby-1.9.3-p194/bin/ruby -S rspec ./spec/integration/manage_todos_spec.rb ./spec/integration/sign_in_spec.rb ./spec/integration/view_homepage_spec.rb\n```\n\nwhich is of course loading environment outside of zeus\n\nplease additionaly test following:\n\n```\nzeus rake db:test:prepare && zeus rspec --seed 26515 ./spec/integration/manage_todos_spec.rb ./spec/integration/sign_in_spec.rb ./spec/integration/view_homepage_spec.rb\n```\n\nand also try outside of zeus:\n\n```\nrake db:test:prepare && rspec --seed 26515 ./spec/integration/manage_todos_spec.rb ./spec/integration/sign_in_spec.rb ./spec/integration/view_homepage_spec.rb\n```\n\nActually, why do you use rake task? ;)\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/burke/zeus/issues/339#issuecomment-18257981\n. FYI: I have 8Gigs of RAM on this machine and also rebooted, yet the problem persists.\n. Also, note that\n\n``` shell\nzeus rspec spec\n```\n\ngives the expected result of no errors.\n. Both give the same results now, although I've finished up with that set of development -- \n\nThe reason I would use rake is to just do `zeus rake` to run all tests... and I started running standalone rake because a test failed that I expected to pass.\n\nI'm guessing it was some temporary abnormality (maybe not getting updated because of initialization changes?)\n\n## Thanks for the help...jon\n\nJon Seidel, CMC\u00ae\nEffective Decisions... Priceless\n\nThe desired way to run rspec via zeus is `zeus rspec ...`. Actually running it via rake saves you no time, because rake under the hood executes following:\n\n```\n/home/jseidel/.rvm/rubies/ruby-1.9.3-p194/bin/ruby -S rspec ./spec/integration/manage_todos_spec.rb ./spec/integration/sign_in_spec.rb ./spec/integration/view_homepage_spec.rb\n```\n\nwhich is of course loading environment outside of zeus\n\nplease additionaly test following:\n\n```\nzeus rake db:test:prepare && zeus rspec --seed 26515 ./spec/integration/manage_todos_spec.rb ./spec/integration/sign_in_spec.rb ./spec/integration/view_homepage_spec.rb\n```\n\nand also try outside of zeus:\n\n```\nrake db:test:prepare && rspec --seed 26515 ./spec/integration/manage_todos_spec.rb ./spec/integration/sign_in_spec.rb ./spec/integration/view_homepage_spec.rb\n```\n\nActually, why do you use rake task? ;)\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/burke/zeus/issues/339#issuecomment-18257981\n. ",
    "zenspider": "Ignore me. I think I need more coffee.\n. On Sep 28, 2013, at 13:00 , blowmage notifications@github.com wrote:\n\n> minitest-rails requires \"minitest/autorun\". Would it help if we remove the require?\n\nor:\n\nrequire \"minitest/autorun\" unless defined?(Minitest) or defined?(MiniTest)\n. Ignore me. I think I need more coffee.\n. On Sep 28, 2013, at 13:00 , blowmage notifications@github.com wrote:\n\n> minitest-rails requires \"minitest/autorun\". Would it help if we remove the require?\n\nor:\n\nrequire \"minitest/autorun\" unless defined?(Minitest) or defined?(MiniTest)\n. ",
    "rafamoreira": "Ctrl+c should do the job.\n. Ctrl+c should do the job.\n. ",
    "johnantoni": "awesome\n. awesome\n. ",
    "reinh": "Would it be possible to allow consumers to choose more explicitly with `require 'minitest/noautorun'`?\n. Would it be possible to allow consumers to choose more explicitly with `require 'minitest/noautorun'`?\n. ",
    "molfar": "Have the same problem, Using rspec, capybara and zeus. Running test suit without zeus does not have this error.\n. Have the same problem, Using rspec, capybara and zeus. Running test suit without zeus does not have this error.\n. ",
    "johngallagher": "I'm also having the same issue with rspec and zeus. \n\n```\n/Users/John/Drop Box/Dropbox/Projects/Programming Projects/Current Projects/lapsus/spec/lib/trainer_spec.rb:4:in `block in <top (required)>': undefined method `Given' for #<Class:0x007fc1e02a81a0> (NoMethodError)\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/rspec-core-2.13.1/lib/rspec/core/example_group.rb:242:in `module_eval'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/rspec-core-2.13.1/lib/rspec/core/example_group.rb:242:in `subclass'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/rspec-core-2.13.1/lib/rspec/core/example_group.rb:228:in `describe'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/rspec-core-2.13.1/lib/rspec/core/dsl.rb:18:in `describe'\n  from /Users/John/Drop Box/Dropbox/Projects/Programming Projects/Current Projects/lapsus/spec/lib/trainer_spec.rb:3:in `<top (required)>'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus/load_tracking.rb:50:in `load'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus/load_tracking.rb:50:in `load'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus/load_tracking.rb:43:in `load'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/activesupport-3.2.13/lib/active_support/dependencies.rb:245:in `block in load'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/activesupport-3.2.13/lib/active_support/dependencies.rb:236:in `load_dependency'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/activesupport-3.2.13/lib/active_support/dependencies.rb:245:in `load'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/rspec-core-2.13.1/lib/rspec/core/configuration.rb:819:in `block in load_spec_files'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/rspec-core-2.13.1/lib/rspec/core/configuration.rb:819:in `each'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/rspec-core-2.13.1/lib/rspec/core/configuration.rb:819:in `load_spec_files'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/rspec-core-2.13.1/lib/rspec/core/command_line.rb:22:in `run'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/rspec-core-2.13.1/lib/rspec/core/runner.rb:80:in `run'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/rspec-core-2.13.1/lib/rspec/core/runner.rb:17:in `block in autorun'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:103:in `fork'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:103:in `command'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:80:in `block (3 levels) in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:80:in `fork'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:80:in `block (2 levels) in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:73:in `each'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:73:in `block in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:62:in `loop'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:62:in `go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (3 levels) in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:78:in `fork'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (2 levels) in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:73:in `each'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:73:in `block in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:62:in `loop'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:62:in `go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (3 levels) in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:78:in `fork'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (2 levels) in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:73:in `each'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:73:in `block in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:62:in `loop'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:62:in `go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (3 levels) in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:78:in `fork'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (2 levels) in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:73:in `each'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:73:in `block in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:62:in `loop'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:62:in `go'\n  from -e:1:in `<main>'\n```\n. I'm also having the same issue with rspec and zeus. \n\n```\n/Users/John/Drop Box/Dropbox/Projects/Programming Projects/Current Projects/lapsus/spec/lib/trainer_spec.rb:4:in `block in <top (required)>': undefined method `Given' for #<Class:0x007fc1e02a81a0> (NoMethodError)\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/rspec-core-2.13.1/lib/rspec/core/example_group.rb:242:in `module_eval'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/rspec-core-2.13.1/lib/rspec/core/example_group.rb:242:in `subclass'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/rspec-core-2.13.1/lib/rspec/core/example_group.rb:228:in `describe'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/rspec-core-2.13.1/lib/rspec/core/dsl.rb:18:in `describe'\n  from /Users/John/Drop Box/Dropbox/Projects/Programming Projects/Current Projects/lapsus/spec/lib/trainer_spec.rb:3:in `<top (required)>'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus/load_tracking.rb:50:in `load'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus/load_tracking.rb:50:in `load'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus/load_tracking.rb:43:in `load'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/activesupport-3.2.13/lib/active_support/dependencies.rb:245:in `block in load'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/activesupport-3.2.13/lib/active_support/dependencies.rb:236:in `load_dependency'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/activesupport-3.2.13/lib/active_support/dependencies.rb:245:in `load'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/rspec-core-2.13.1/lib/rspec/core/configuration.rb:819:in `block in load_spec_files'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/rspec-core-2.13.1/lib/rspec/core/configuration.rb:819:in `each'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/rspec-core-2.13.1/lib/rspec/core/configuration.rb:819:in `load_spec_files'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/rspec-core-2.13.1/lib/rspec/core/command_line.rb:22:in `run'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/rspec-core-2.13.1/lib/rspec/core/runner.rb:80:in `run'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/rspec-core-2.13.1/lib/rspec/core/runner.rb:17:in `block in autorun'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:103:in `fork'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:103:in `command'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:80:in `block (3 levels) in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:80:in `fork'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:80:in `block (2 levels) in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:73:in `each'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:73:in `block in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:62:in `loop'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:62:in `go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (3 levels) in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:78:in `fork'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (2 levels) in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:73:in `each'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:73:in `block in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:62:in `loop'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:62:in `go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (3 levels) in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:78:in `fork'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (2 levels) in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:73:in `each'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:73:in `block in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:62:in `loop'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:62:in `go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (3 levels) in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:78:in `fork'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:78:in `block (2 levels) in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:73:in `each'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:73:in `block in go'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:62:in `loop'\n  from /Users/John/.rvm/gems/ruby-1.9.3-p448/gems/zeus-0.13.3/lib/zeus.rb:62:in `go'\n  from -e:1:in `<main>'\n```\n. ",
    "george": "I'm seeing \"already initialized constant\" warnings with rspec\n\n```\n\u2234 z rspec spec/models/payment_service_spec.rb\n/<path to app>/app/models/license_key.rb:2: warning: already initialized constant LICENSE_KEY_ALERT_THRESHOLD\n```\n\nAny idea what's causing this?\n. I'm seeing \"already initialized constant\" warnings with rspec\n\n```\n\u2234 z rspec spec/models/payment_service_spec.rb\n/<path to app>/app/models/license_key.rb:2: warning: already initialized constant LICENSE_KEY_ALERT_THRESHOLD\n```\n\nAny idea what's causing this?\n. ",
    "cristi-badila": "Shouldn't this issue be reopened? I just encountered the same exact problem referenced in #201 while working on a project which uses json to serialze/deserialize a field to/from the database using ActiveRecord\n. Shouldn't this issue be reopened? I just encountered the same exact problem referenced in #201 while working on a project which uses json to serialze/deserialize a field to/from the database using ActiveRecord\n. ",
    "alex-ut": "This is still an issue [for me].\n\n```\n% zeus --version\nZeus version 0.13.3.rc2\n% zeus console\nLoading development environment (Rails 3.2.17)\n1.9.3p374 :001 > JSON::VERSION\n => \"1.5.4\" \n1.9.3p374 :002 > JSON.load \"20\"\nJSON::ParserError: 743: unexpected token at '20'\n        from /home/ut/.rvm/rubies/ruby-1.9.3-p374/lib/ruby/1.9.1/json/common.rb:148:in `parse'\n        from /home/ut/.rvm/rubies/ruby-1.9.3-p374/lib/ruby/1.9.1/json/common.rb:148:in `parse'\n        from /home/ut/.rvm/rubies/ruby-1.9.3-p374/lib/ruby/1.9.1/json/common.rb:302:in `load'\n        from (irb):2\n```\n\n```\n % be rails console\nLoading development environment (Rails 3.2.17)\n1.9.3-p374 :001 > JSON::VERSION\n => \"1.8.1\" \n1.9.3-p374 :002 > JSON.load \"20\"\n => 20 \n```\n. I'll add, though, that the workaround of adding the gem line to the zeus.rb file seems to work for me.\n. If the fix is in new code (after 0.13.3), can it be released already?  Or is there something else holding up a new release?\n. @latortuga : When I try with `--pre`, it does not install 0.14, and the bug remains:\n\n```\n% gem install zeus --pre\nFetching: zeus-0.13.4.pre2.gem (100%)\nBuilding native extensions.  This could take a while...\nSuccessfully installed zeus-0.13.4.pre2\n\n% zeus console\nLoading development environment (Rails 3.2.17)\n1.9.3p374 :001 > JSON::VERSION\n => \"1.5.4\" \n```\n. Yes, all fixed in my case.  Thanks.\n. This is still an issue [for me].\n\n```\n% zeus --version\nZeus version 0.13.3.rc2\n% zeus console\nLoading development environment (Rails 3.2.17)\n1.9.3p374 :001 > JSON::VERSION\n => \"1.5.4\" \n1.9.3p374 :002 > JSON.load \"20\"\nJSON::ParserError: 743: unexpected token at '20'\n        from /home/ut/.rvm/rubies/ruby-1.9.3-p374/lib/ruby/1.9.1/json/common.rb:148:in `parse'\n        from /home/ut/.rvm/rubies/ruby-1.9.3-p374/lib/ruby/1.9.1/json/common.rb:148:in `parse'\n        from /home/ut/.rvm/rubies/ruby-1.9.3-p374/lib/ruby/1.9.1/json/common.rb:302:in `load'\n        from (irb):2\n```\n\n```\n % be rails console\nLoading development environment (Rails 3.2.17)\n1.9.3-p374 :001 > JSON::VERSION\n => \"1.8.1\" \n1.9.3-p374 :002 > JSON.load \"20\"\n => 20 \n```\n. I'll add, though, that the workaround of adding the gem line to the zeus.rb file seems to work for me.\n. If the fix is in new code (after 0.13.3), can it be released already?  Or is there something else holding up a new release?\n. @latortuga : When I try with `--pre`, it does not install 0.14, and the bug remains:\n\n```\n% gem install zeus --pre\nFetching: zeus-0.13.4.pre2.gem (100%)\nBuilding native extensions.  This could take a while...\nSuccessfully installed zeus-0.13.4.pre2\n\n% zeus console\nLoading development environment (Rails 3.2.17)\n1.9.3p374 :001 > JSON::VERSION\n => \"1.5.4\" \n```\n. Yes, all fixed in my case.  Thanks.\n. ",
    "jeremywrowe": "Let me provide an example of what I am talking about\n\nWith zeus:\n\n```\nFailures:\n\n  1) fail\n     Failure/Error: it { fail \"boom\" }\n     RuntimeError:\n       boom\n     # ./spec/fail.rb:2:in `block (2 levels) in <top (required)>'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/example.rb:114:in `instance_eval'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/example.rb:114:in `block in run'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/example.rb:254:in `with_around_each_hooks'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/example.rb:111:in `run'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/example_group.rb:390:in `block in run_examples'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/example_group.rb:386:in `map'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/example_group.rb:386:in `run_examples'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/example_group.rb:371:in `run'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/command_line.rb:28:in `block (2 levels) in run'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/command_line.rb:28:in `map'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/command_line.rb:28:in `block in run'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/reporter.rb:34:in `report'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/command_line.rb:25:in `run'\n....\n```\n\nwithout zeus:\n\n```\nchargify/chargify [fix_jasmine] \u00bb rspec spec/fail.rb\nF\n\nFailures:\n\n  1) fail\n     Failure/Error: it { fail \"boom\" }\n     RuntimeError:\n       boom\n     # ./spec/fail.rb:2:in `block (2 levels) in <top (required)>'\n\nFinished in 0.00031 seconds\n1 example, 1 failure\n\nFailed examples:\n\nrspec ./spec/fail.rb:2 # fail\n```\n. the top example is shortened to keep the example brief :)\n. @latortuga Thanks for digging into this for me, I will try the upgrade as suggested and see if there is any change. Just for completeness I am seeing the same thing when using test/unit.  I wonder if other people are seeing the same thing?  This normally wouldn't be a problem, but it is very annoying in a tmux session :)\n. I am seeing the same behavior\n. Let me provide an example of what I am talking about\n\nWith zeus:\n\n```\nFailures:\n\n  1) fail\n     Failure/Error: it { fail \"boom\" }\n     RuntimeError:\n       boom\n     # ./spec/fail.rb:2:in `block (2 levels) in <top (required)>'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/example.rb:114:in `instance_eval'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/example.rb:114:in `block in run'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/example.rb:254:in `with_around_each_hooks'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/example.rb:111:in `run'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/example_group.rb:390:in `block in run_examples'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/example_group.rb:386:in `map'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/example_group.rb:386:in `run_examples'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/example_group.rb:371:in `run'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/command_line.rb:28:in `block (2 levels) in run'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/command_line.rb:28:in `map'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/command_line.rb:28:in `block in run'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/reporter.rb:34:in `report'\n     # /Users/jrowe/.rbenv/versions/1.9.3-p327-perf/lib/ruby/gems/1.9.1/gems/rspec-core-2.13.1/lib/rspec/core/command_line.rb:25:in `run'\n....\n```\n\nwithout zeus:\n\n```\nchargify/chargify [fix_jasmine] \u00bb rspec spec/fail.rb\nF\n\nFailures:\n\n  1) fail\n     Failure/Error: it { fail \"boom\" }\n     RuntimeError:\n       boom\n     # ./spec/fail.rb:2:in `block (2 levels) in <top (required)>'\n\nFinished in 0.00031 seconds\n1 example, 1 failure\n\nFailed examples:\n\nrspec ./spec/fail.rb:2 # fail\n```\n. the top example is shortened to keep the example brief :)\n. @latortuga Thanks for digging into this for me, I will try the upgrade as suggested and see if there is any change. Just for completeness I am seeing the same thing when using test/unit.  I wonder if other people are seeing the same thing?  This normally wouldn't be a problem, but it is very annoying in a tmux session :)\n. I am seeing the same behavior\n. ",
    "minimul": "+1 Same issue. I tried a bunch of stuff too. Not able to suppress the long backtrace.\n. +1 Same issue. I tried a bunch of stuff too. Not able to suppress the long backtrace.\n. ",
    "benjamin-thomas": "Sure. Please see https://github.com/PryFlack/zeus_rails4_test_bug\n\nI'm using neither rspec nor minitest (explicitly), just plain stock rails4. So I am not requiring those files.\n\nI'm not sure the solution I found is the right one at all. Let me know if you need more data. \n\nFor info I'm developing on a Debian Squeeze box. Also the command I used to launch the tests is\n`zeus test ./test/model/user_test.br`.\n. @sideshowcoder I'm not sure if rails4 uses minitest under the hood, that's what I thought but testing feels different in rails. I can't require `minitest/autorun`, I don't have access to rspec style syntax and the `it ...` method, etc. \n\n@latortuga I was running 0.13.3. I updated zeus with `gem update --pre zeus`. Since there's no `-v` or `--version` switch available I removed any prior versions with `gem uninstall` just in case. The tests still get called twice though.\n\nI looked at the pull request solving issue #348 and the version at the time seems to be 0.13.4.pre2.\n\nThis is the version that I downloaded but I don't know if what I've pulled from rubygems relates to before or after this pull request. I presume it would be before ?\n. I forgot to mention that I also tried inserting `MiniTest::Unit.class_variable_set(\"@@installed_at_exit\", true)` into  my test_helper but tests still run twice.\n. I didn't realize requiring `'minitest/unit'` was necessary for this to work. Everything working perfectly now. Thanks !!\n. Hello,\r\n\r\nI'm encountering that same pager bug in v0.15.14\r\n\r\nVersion 0.15.12 does not have that behavior indeed. Sure, I'll see what I can do.\r\n\r\nI'm developing in a (fairly complicated) docker environment so it should be reproducible.\r\n\r\nSame problem with `v0.15.15.pre`\r\n\r\nDo you have a docker environment setup ?. Hello @sideshowcoder \r\n\r\nCould you have a look at this repo? https://github.com/benjamin-thomas/zeus-pager-bug\r\n\r\nI manage to isolate this bug pretty minimally I think.\r\n\r\nBased on sqlite so should be pretty trivial to setup.\r\n\r\nI've based it on rails 4 since there seems to be a library loading issue with rails 5, so would make it more difficult to revert zeus versions.\r\n\r\nLet me know if you need anything else.. Sure. Please see https://github.com/PryFlack/zeus_rails4_test_bug\n\nI'm using neither rspec nor minitest (explicitly), just plain stock rails4. So I am not requiring those files.\n\nI'm not sure the solution I found is the right one at all. Let me know if you need more data. \n\nFor info I'm developing on a Debian Squeeze box. Also the command I used to launch the tests is\n`zeus test ./test/model/user_test.br`.\n. @sideshowcoder I'm not sure if rails4 uses minitest under the hood, that's what I thought but testing feels different in rails. I can't require `minitest/autorun`, I don't have access to rspec style syntax and the `it ...` method, etc. \n\n@latortuga I was running 0.13.3. I updated zeus with `gem update --pre zeus`. Since there's no `-v` or `--version` switch available I removed any prior versions with `gem uninstall` just in case. The tests still get called twice though.\n\nI looked at the pull request solving issue #348 and the version at the time seems to be 0.13.4.pre2.\n\nThis is the version that I downloaded but I don't know if what I've pulled from rubygems relates to before or after this pull request. I presume it would be before ?\n. I forgot to mention that I also tried inserting `MiniTest::Unit.class_variable_set(\"@@installed_at_exit\", true)` into  my test_helper but tests still run twice.\n. I didn't realize requiring `'minitest/unit'` was necessary for this to work. Everything working perfectly now. Thanks !!\n. Hello,\r\n\r\nI'm encountering that same pager bug in v0.15.14\r\n\r\nVersion 0.15.12 does not have that behavior indeed. Sure, I'll see what I can do.\r\n\r\nI'm developing in a (fairly complicated) docker environment so it should be reproducible.\r\n\r\nSame problem with `v0.15.15.pre`\r\n\r\nDo you have a docker environment setup ?. Hello @sideshowcoder \r\n\r\nCould you have a look at this repo? https://github.com/benjamin-thomas/zeus-pager-bug\r\n\r\nI manage to isolate this bug pretty minimally I think.\r\n\r\nBased on sqlite so should be pretty trivial to setup.\r\n\r\nI've based it on rails 4 since there seems to be a library loading issue with rails 5, so would make it more difficult to revert zeus versions.\r\n\r\nLet me know if you need anything else.. ",
    "jopotts": "I'm getting the same issue on a vanilla rails4 rc1 test suite. No rspec or minitest.\n. The fix worked. Thank you. :) That wasn't obvious.\n\nHowever now I've got one issue when `installed_at_exit` is set; a standard `rake test` (not using zeus) won't pick up the tests, there's simply no response, so I have to comment out that line to get them to run. Is it a simple setting I'm missing somewhere?\n\nI'm on Zeus 0.13.3.rc2\n. Thanks for the quick reply. I've been trying other things since the last post and ended up with this:\n\n```\nMiniTest::Unit.class_variable_set('@@installed_at_exit', true) if defined? Zeus\nrequire 'rails/test_help'\n```\n\nAnd it all now works nicely. It seems I don't need to have `require 'minitest/unit'` after all, but the `if defined? Zeus` is needed to get a normal `rake test` to run.\n\nAnd worth restating for any one else reading this: the ordering is important - the class var set has to come before the require test help line.\n\nThanks for the help sideshowcoder.\n\n_rails 4.0.0.rc1, zeus 0.13.3.rc2_\n. I'm getting the same issue on a vanilla rails4 rc1 test suite. No rspec or minitest.\n. The fix worked. Thank you. :) That wasn't obvious.\n\nHowever now I've got one issue when `installed_at_exit` is set; a standard `rake test` (not using zeus) won't pick up the tests, there's simply no response, so I have to comment out that line to get them to run. Is it a simple setting I'm missing somewhere?\n\nI'm on Zeus 0.13.3.rc2\n. Thanks for the quick reply. I've been trying other things since the last post and ended up with this:\n\n```\nMiniTest::Unit.class_variable_set('@@installed_at_exit', true) if defined? Zeus\nrequire 'rails/test_help'\n```\n\nAnd it all now works nicely. It seems I don't need to have `require 'minitest/unit'` after all, but the `if defined? Zeus` is needed to get a normal `rake test` to run.\n\nAnd worth restating for any one else reading this: the ordering is important - the class var set has to come before the require test help line.\n\nThanks for the help sideshowcoder.\n\n_rails 4.0.0.rc1, zeus 0.13.3.rc2_\n. ",
    "schadenfred": "@ericboehs solution worked for me.  Thanks!\n. @ericboehs solution worked for me.  Thanks!\n. ",
    "awilliams": "@ericboehs thanks! your solution worked for me. I'm using the `minitest-rails` gems\n. @ericboehs thanks! your solution worked for me. I'm using the `minitest-rails` gems\n. ",
    "joonty": "This is a problem with the latest gem version (0.13.3.rc2), but it has been fixed in the master branch. The specific error was fixed in the commit 69b41fb2. I've now managed to get past that error by updating my own source code but have run into another relating to a JSON parse - hopefully the next release will sort this too.\n. In fact, this is fixed in the prerelease version 0.13.4.pre2. Just install that and it should be working.\n. Think this needs a bump, as it's still an issue and still closed.\n. This is a problem with the latest gem version (0.13.3.rc2), but it has been fixed in the master branch. The specific error was fixed in the commit 69b41fb2. I've now managed to get past that error by updating my own source code but have run into another relating to a JSON parse - hopefully the next release will sort this too.\n. In fact, this is fixed in the prerelease version 0.13.4.pre2. Just install that and it should be working.\n. Think this needs a bump, as it's still an issue and still closed.\n. ",
    "belgoros": "OK, thanks a lot for the feed back. I'll take a try.\n\nCheers\n\nOn 07 Jun 2013, at 16:21, Jonathan Cairns notifications@github.com wrote:\n\n> In fact, this is fixed in the prerelease version 0.13.4.pre2. Just install that and it should be working.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Thank you. It's done.\n. OK, thanks a lot for the feed back. I'll take a try.\n\nCheers\n\nOn 07 Jun 2013, at 16:21, Jonathan Cairns notifications@github.com wrote:\n\n> In fact, this is fixed in the prerelease version 0.13.4.pre2. Just install that and it should be working.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Thank you. It's done.\n. ",
    "kuroda": "@Javix I encountered the same problem as yours and the version 0.13.4.pre2 soloved it for me.\n\nI think you can close this issue.\n. @pencilcheck \n\nAdd `spec/` like `zeus rspec spec/`.\n. @pencilcheck  That is another thing. I don't know if it is an issue or not. I always type out the path.\n. @Javix I encountered the same problem as yours and the version 0.13.4.pre2 soloved it for me.\n\nI think you can close this issue.\n. @pencilcheck \n\nAdd `spec/` like `zeus rspec spec/`.\n. @pencilcheck  That is another thing. I don't know if it is an issue or not. I always type out the path.\n. ",
    "matthewrossanderson": "It works when I explicitly state the path `zeus rspec spec/` but not when just use `zeus rspec`\nIs this expected? I would think that the path should be optional in this case.\n. It works when I explicitly state the path `zeus rspec spec/` but not when just use `zeus rspec`\nIs this expected? I would think that the path should be optional in this case.\n. ",
    "gilest": "I've created a bash alias as a temporary solution. Put something like this:\n\n``` bash\n# for quick access to specs when apps are running zeus\n# eg. for all specs:\n# $ r spec\n\n# for a specific spec:\n# r spec/models/model_spec.rb\n\nalias r=\"zeus rspec\"\n```\n\n in your `~/.bash_profile`\n. I've created a bash alias as a temporary solution. Put something like this:\n\n``` bash\n# for quick access to specs when apps are running zeus\n# eg. for all specs:\n# $ r spec\n\n# for a specific spec:\n# r spec/models/model_spec.rb\n\nalias r=\"zeus rspec\"\n```\n\n in your `~/.bash_profile`\n. ",
    "justin808": "I'm getting this message after upgrading to Yosemite:\n\n```\nzeus rspec                                                                                                                                                                                                       [7:19:03]\n/Users/justin/.rvm/gems/ruby-2.1.3@bpos/gems/zeus-0.13.3/lib/zeus/rails.rb:214:in `spec_file?': undefined method `match' for nil:NilClass (NoMethodError)\n```\n. Hi @latortuga, I'll try that. I was stuck in the old version b/c of https://github.com/sevos/zeus-parallel_tests.\n\nI think workaround is to:\n1. Upgrade zeus to current\n2. Run Parallel rspec without zeus: `parallel_rspec -n 6 spec` \n\nI actually wrote an article on how there's no big difference when running with parallel tests:\n[Fast Tests: Comparing Zeus With Spring on Rails 4.1 and RSpec 3](http://www.railsonmaui.com//blog/2014/09/09/fast-tests-comparing-zeus-with-spring-on-rails-4-dot-1/)\n. I am getting the same issue. I'm working on screencast for JetBrains to introduce this integration of RubyMine with Zeus, and, unfortunately, we're stuck right now. I'm using Mac OSX 10.8, and I ran this command to install zeus:\n\n```\ngem install zeus -v 0.14.0.rc1\n```\n\nAnd I'm sure my current gemset doesn't have the old version of zeus.\n\nI have no issues with 0.13.x.\n. @halostatue is the code you posted above supposed to go in one's .pryrc? I'm experiencing the same issue.\n. I'm getting this message after upgrading to Yosemite:\n\n```\nzeus rspec                                                                                                                                                                                                       [7:19:03]\n/Users/justin/.rvm/gems/ruby-2.1.3@bpos/gems/zeus-0.13.3/lib/zeus/rails.rb:214:in `spec_file?': undefined method `match' for nil:NilClass (NoMethodError)\n```\n. Hi @latortuga, I'll try that. I was stuck in the old version b/c of https://github.com/sevos/zeus-parallel_tests.\n\nI think workaround is to:\n1. Upgrade zeus to current\n2. Run Parallel rspec without zeus: `parallel_rspec -n 6 spec` \n\nI actually wrote an article on how there's no big difference when running with parallel tests:\n[Fast Tests: Comparing Zeus With Spring on Rails 4.1 and RSpec 3](http://www.railsonmaui.com//blog/2014/09/09/fast-tests-comparing-zeus-with-spring-on-rails-4-dot-1/)\n. I am getting the same issue. I'm working on screencast for JetBrains to introduce this integration of RubyMine with Zeus, and, unfortunately, we're stuck right now. I'm using Mac OSX 10.8, and I ran this command to install zeus:\n\n```\ngem install zeus -v 0.14.0.rc1\n```\n\nAnd I'm sure my current gemset doesn't have the old version of zeus.\n\nI have no issues with 0.13.x.\n. @halostatue is the code you posted above supposed to go in one's .pryrc? I'm experiencing the same issue.\n. ",
    "AndrewVos": "Getting the same issue.\n. Getting the same issue.\n. ",
    "keaaw": "Turns out it was the Gemfile in fact, updating to latest version of zeus fixed it.\n. Turns out it was the Gemfile in fact, updating to latest version of zeus fixed it.\n. ",
    "wgc-bf": "I found that deleting the zeus.json file worked for me\n\nusing: \nruby2.0.0p195\nrails 3.2.13\nOS X 10.7.5\n. I found that deleting the zeus.json file worked for me\n\nusing: \nruby2.0.0p195\nrails 3.2.13\nOS X 10.7.5\n. ",
    "dplummer": "I just started having this problem on my Archlinux laptop. ruby-2.0.0-p247, rails 4. It appears to be a conflict with a gem, since a different project (also rails 4) runs zeus fine.\n. Upgrading json to 1.8.0 fixed the problem.\n. I just started having this problem on my Archlinux laptop. ruby-2.0.0-p247, rails 4. It appears to be a conflict with a gem, since a different project (also rails 4) runs zeus fine.\n. Upgrading json to 1.8.0 fixed the problem.\n. ",
    "newspeedway": "I'm running into a similar problem - not sure if it is exactly related. \nZeus is not reloading gems after a bundle install \n\nOS 10.8\nRuby 2.0.0p0 (2013-02-24 revision 39474)\nZeus 0.13.4.pre2\n\nNot sure if this is actually the same problem\n. I'm running into a similar problem - not sure if it is exactly related. \nZeus is not reloading gems after a bundle install \n\nOS 10.8\nRuby 2.0.0p0 (2013-02-24 revision 39474)\nZeus 0.13.4.pre2\n\nNot sure if this is actually the same problem\n. ",
    "kryachkov": "Same issue\n. Same issue\n. ",
    "Averethel": "same here\n. same here\n. ",
    "huerlisi": "Sorry to bother again:-)\n\nI'm no expert in sockets, but shouldn't it be possible to trying to connect to see if the socket file is in use. I think about something like here: https://github.com/keis/uzbl/commit/9810f6c3c056a6c7360d8cd88d16550dc8e1206c\n\nJust ignore if I misunderstand how sockets work...\n\nThanks\nSimon\n. Maybe I'm na\u00efve, or don't understand, but the following should work in my view:\n- check if .zeus.sock exists\n- false -> normal start...\n- true ->\n- \\* try to open the socket (like \"UNIXSocket.open('.zeus.sock')\" in Ruby)\n- \\* if 'ECONNREFUSED' exception\n- \\* true -> remove .zeus.sock and start normal\n- \\* false -> exit and tell user that socket is in use\n\nThis way if a .zeus.sock file is detected, we would act as a client to see if (another) server is running.\n. Sorry to bother again:-)\n\nI'm no expert in sockets, but shouldn't it be possible to trying to connect to see if the socket file is in use. I think about something like here: https://github.com/keis/uzbl/commit/9810f6c3c056a6c7360d8cd88d16550dc8e1206c\n\nJust ignore if I misunderstand how sockets work...\n\nThanks\nSimon\n. Maybe I'm na\u00efve, or don't understand, but the following should work in my view:\n- check if .zeus.sock exists\n- false -> normal start...\n- true ->\n- \\* try to open the socket (like \"UNIXSocket.open('.zeus.sock')\" in Ruby)\n- \\* if 'ECONNREFUSED' exception\n- \\* true -> remove .zeus.sock and start normal\n- \\* false -> exit and tell user that socket is in use\n\nThis way if a .zeus.sock file is detected, we would act as a client to see if (another) server is running.\n. ",
    "Adam0964": "I upgraded to the latest version and then zeus crashed. I uninstalled the previous version and installed the latest, again, but that didn't seem to help\n\nAnd just out of curiosity, I added the 'gem \"zeus\", \"~> 0.13.4.pre2\"' to the Gemfile and bundled, but zeus never made it beyond the 'waiting' point.\n. Drew,\n\nWe have an application we're working on, but it's not ready to be pushed anywhere yet. We have been experimenting with zeus and we like it. However, if we can't currently use it, that doesn't hamper the development in any way, and I am pretty sure that I will find a workaround the issue and as soon as I do, I will post it on Github. \n\nThanks for trying to get to the bottom of this.\n\nAdam.\n. I upgraded to the latest version and then zeus crashed. I uninstalled the previous version and installed the latest, again, but that didn't seem to help\n\nAnd just out of curiosity, I added the 'gem \"zeus\", \"~> 0.13.4.pre2\"' to the Gemfile and bundled, but zeus never made it beyond the 'waiting' point.\n. Drew,\n\nWe have an application we're working on, but it's not ready to be pushed anywhere yet. We have been experimenting with zeus and we like it. However, if we can't currently use it, that doesn't hamper the development in any way, and I am pretty sure that I will find a workaround the issue and as soon as I do, I will post it on Github. \n\nThanks for trying to get to the bottom of this.\n\nAdam.\n. ",
    "ecl1pse": "Found this: https://gist.github.com/sevos/5223069 I put it in root directory and worked. Is this the right way?\n. Found this: https://gist.github.com/sevos/5223069 I put it in root directory and worked. Is this the right way?\n. ",
    "djiang": "There were some lingering processes after it blew up.\n- I killed all process after running `ps auwx | grep zeus`\n- Removed the `.zeus.sock` directory: `rm -Rf .zeus.sock`\n- `bundle install`\n- `zeus start`\n\nThat seemed to have gotten things back up for me.\n. There were some lingering processes after it blew up.\n- I killed all process after running `ps auwx | grep zeus`\n- Removed the `.zeus.sock` directory: `rm -Rf .zeus.sock`\n- `bundle install`\n- `zeus start`\n\nThat seemed to have gotten things back up for me.\n. ",
    "karanr": "+1 same issue here. @sideshowcoder,  @jamezilla any pointers on how to get it running again? \nHave tried  ps ax | grep zeus and have killed slave: boot with sudo kill pid, however i can seem to kill s+ can am still getting the same error message. Any help would be appreciated.\n\nGot it working with env ZEUSSOCK=/tmp/zeus.sock zeus start instead of just zeus start\n. +1 same issue here. @sideshowcoder,  @jamezilla any pointers on how to get it running again? \nHave tried  ps ax | grep zeus and have killed slave: boot with sudo kill pid, however i can seem to kill s+ can am still getting the same error message. Any help would be appreciated.\n\nGot it working with env ZEUSSOCK=/tmp/zeus.sock zeus start instead of just zeus start\n. ",
    "levbrie": "same here, Gemfile.lock is as follows (but in any case the error seems to be caused json 1.8.0):\n\n```\nGEM\n  remote: https://rubygems.org/\n  specs:\n    actionmailer (4.0.0)\n      actionpack (= 4.0.0)\n      mail (~> 2.5.3)\n    actionpack (4.0.0)\n      activesupport (= 4.0.0)\n      builder (~> 3.1.0)\n      erubis (~> 2.7.0)\n      rack (~> 1.5.2)\n      rack-test (~> 0.6.2)\n    activemodel (4.0.0)\n      activesupport (= 4.0.0)\n      builder (~> 3.1.0)\n    activerecord (4.0.0)\n      activemodel (= 4.0.0)\n      activerecord-deprecated_finders (~> 1.0.2)\n      activesupport (= 4.0.0)\n      arel (~> 4.0.0)\n    activerecord-deprecated_finders (1.0.3)\n    activesupport (4.0.0)\n      i18n (~> 0.6, >= 0.6.4)\n      minitest (~> 4.2)\n      multi_json (~> 1.3)\n      thread_safe (~> 0.1)\n      tzinfo (~> 0.3.37)\n    addressable (2.3.5)\n    annotate (2.5.0)\n      rake\n    arel (4.0.0)\n    atomic (1.1.10)\n    aws-sdk (1.11.1)\n      json (~> 1.4)\n      nokogiri (>= 1.4.4)\n      uuidtools (~> 2.1)\n    bcrypt-ruby (3.1.1)\n    better_errors (0.9.0)\n      coderay (>= 1.0.0)\n      erubis (>= 2.6.6)\n    binding_of_caller (0.7.2)\n      debug_inspector (>= 0.0.1)\n    builder (3.1.4)\n    callsite (0.0.11)\n    cancan (1.6.10)\n    capybara (2.1.0)\n      mime-types (>= 1.16)\n      nokogiri (>= 1.3.3)\n      rack (>= 1.0.0)\n      rack-test (>= 0.5.4)\n      xpath (~> 2.0)\n    childprocess (0.3.9)\n      ffi (~> 1.0, >= 1.0.11)\n    ckeditor (4.0.4)\n      mime-types\n      orm_adapter\n    climate_control (0.0.3)\n      activesupport (>= 3.0)\n    cocaine (0.5.1)\n      climate_control (>= 0.0.3, < 1.0)\n    coderay (1.0.9)\n    coffee-rails (4.0.0)\n      coffee-script (>= 2.2.0)\n      railties (>= 4.0.0.beta, < 5.0)\n    coffee-script (2.2.0)\n      coffee-script-source\n      execjs\n    coffee-script-source (1.6.3)\n    commonjs (0.2.6)\n    database_cleaner (1.0.1)\n    debug_inspector (0.0.2)\n    devise (3.0.0)\n      bcrypt-ruby (~> 3.0)\n      orm_adapter (~> 0.1)\n      railties (>= 3.2.6, < 5)\n      warden (~> 1.2.3)\n    diff-lcs (1.2.4)\n    em-websocket (0.5.0)\n      eventmachine (>= 0.12.9)\n      http_parser.rb (~> 0.5.3)\n    email_spec (1.5.0)\n      launchy (~> 2.1)\n      mail (~> 2.2)\n    erubis (2.7.0)\n    eventmachine (1.0.3)\n    excon (0.16.10)\n    execjs (1.4.0)\n      multi_json (~> 1.0)\n    factory_girl (4.2.0)\n      activesupport (>= 3.0.0)\n    factory_girl_rails (4.2.1)\n      factory_girl (~> 4.2.0)\n      railties (>= 3.0.0)\n    faker (1.2.0)\n      i18n (~> 0.5)\n    ffi (1.9.0)\n    figaro (0.7.0)\n      bundler (~> 1.0)\n      rails (>= 3, < 5)\n    formatador (0.2.4)\n    growl (1.0.3)\n    guard (1.8.1)\n      formatador (>= 0.2.4)\n      listen (>= 1.0.0)\n      lumberjack (>= 1.0.2)\n      pry (>= 0.9.10)\n      thor (>= 0.14.6)\n    guard-livereload (1.4.0)\n      em-websocket (>= 0.5.0)\n      guard (>= 1.8.0)\n      multi_json (~> 1.7)\n    guard-rspec (3.0.2)\n      guard (>= 1.8)\n      rspec (~> 2.13)\n    guard-spork (1.5.1)\n      childprocess (>= 0.2.3)\n      guard (>= 1.1)\n      spork (>= 0.8.4)\n    haml (4.0.3)\n      tilt\n    haml-rails (0.4)\n      actionpack (>= 3.1, < 4.1)\n      activesupport (>= 3.1, < 4.1)\n      haml (>= 3.1, < 4.1)\n      railties (>= 3.1, < 4.1)\n    hike (1.2.3)\n    http_parser.rb (0.5.3)\n    i18n (0.6.4)\n    jbuilder (1.5.0)\n      activesupport (>= 3.0.0)\n      multi_json (>= 1.2.0)\n    jquery-fileupload-rails (0.4.1)\n      actionpack (>= 3.1)\n      railties (>= 3.1)\n    jquery-rails (3.0.4)\n      railties (>= 3.0, < 5.0)\n      thor (>= 0.14, < 2.0)\n    jquery-ui-rails (4.0.4)\n      jquery-rails\n      railties (>= 3.1.0)\n    json (1.7.7)\n    launchy (2.3.0)\n      addressable (~> 2.3)\n    less (2.3.2)\n      commonjs (~> 0.2.6)\n    less-rails (2.3.3)\n      actionpack (>= 3.1)\n      less (~> 2.3.1)\n    letter_opener (1.1.2)\n      launchy (~> 2.2)\n    libv8 (3.11.8.17)\n    listen (1.2.2)\n      rb-fsevent (>= 0.9.3)\n      rb-inotify (>= 0.9)\n      rb-kqueue (>= 0.2)\n    lumberjack (1.0.4)\n    mail (2.5.4)\n      mime-types (~> 1.16)\n      treetop (~> 1.4.8)\n    mandrill-api (1.0.38)\n      excon (~> 0.16.0)\n      json (~> 1.7.7)\n    meta_request (0.2.7)\n      callsite\n      rack-contrib\n      railties\n    method_source (0.8.2)\n    mime-types (1.23)\n    mini_portile (0.5.1)\n    minitest (4.7.5)\n    multi_json (1.7.7)\n    nokogiri (1.6.0)\n      mini_portile (~> 0.5.0)\n    orm_adapter (0.4.0)\n    paperclip (3.5.0)\n      activemodel (>= 3.0.0)\n      activesupport (>= 3.0.0)\n      cocaine (~> 0.5.0)\n      mime-types\n    pg (0.16.0)\n    polyglot (0.3.3)\n    pry (0.9.12.2)\n      coderay (~> 1.0.5)\n      method_source (~> 0.8)\n      slop (~> 3.4)\n    rack (1.5.2)\n    rack-contrib (1.1.0)\n      rack (>= 0.9.1)\n    rack-test (0.6.2)\n      rack (>= 1.0)\n    railroady (1.1.0)\n    rails (4.0.0)\n      actionmailer (= 4.0.0)\n      actionpack (= 4.0.0)\n      activerecord (= 4.0.0)\n      activesupport (= 4.0.0)\n      bundler (>= 1.3.0, < 2.0)\n      railties (= 4.0.0)\n      sprockets-rails (~> 2.0.0)\n    rails_12factor (0.0.2)\n      rails_serve_static_assets\n      rails_stdout_logging\n    rails_serve_static_assets (0.0.1)\n    rails_stdout_logging (0.0.1)\n    railties (4.0.0)\n      actionpack (= 4.0.0)\n      activesupport (= 4.0.0)\n      rake (>= 0.8.7)\n      thor (>= 0.18.1, < 2.0)\n    rake (10.1.0)\n    rb-fsevent (0.9.3)\n    rb-inotify (0.9.0)\n      ffi (>= 0.5.0)\n    rb-kqueue (0.2.0)\n      ffi (>= 0.5.0)\n    rdoc (3.12.2)\n      json (~> 1.4)\n    ref (1.0.5)\n    rolify (3.2.0)\n    rspec (2.14.1)\n      rspec-core (~> 2.14.0)\n      rspec-expectations (~> 2.14.0)\n      rspec-mocks (~> 2.14.0)\n    rspec-core (2.14.4)\n    rspec-expectations (2.14.0)\n      diff-lcs (>= 1.1.3, < 2.0)\n    rspec-mocks (2.14.2)\n    rspec-rails (2.14.0)\n      actionpack (>= 3.0)\n      activesupport (>= 3.0)\n      railties (>= 3.0)\n      rspec-core (~> 2.14.0)\n      rspec-expectations (~> 2.14.0)\n      rspec-mocks (~> 2.14.0)\n    sass (3.2.10)\n    sass-rails (4.0.0)\n      railties (>= 4.0.0.beta, < 5.0)\n      sass (>= 3.1.10)\n      sprockets-rails (~> 2.0.0)\n    sdoc (0.3.20)\n      json (>= 1.1.3)\n      rdoc (~> 3.10)\n    simple_form (1.4.1)\n    skrollr-rails (0.6.9)\n      rails (>= 3.1.0)\n    slop (3.4.6)\n    spork (0.9.2)\n    sprockets (2.10.0)\n      hike (~> 1.2)\n      multi_json (~> 1.0)\n      rack (~> 1.0)\n      tilt (~> 1.1, != 1.3.0)\n    sprockets-rails (2.0.0)\n      actionpack (>= 3.0)\n      activesupport (>= 3.0)\n      sprockets (~> 2.8)\n    therubyracer (0.11.4)\n      libv8 (~> 3.11.8.12)\n      ref\n    thor (0.18.1)\n    thread_safe (0.1.2)\n      atomic\n    tilt (1.4.1)\n    treetop (1.4.14)\n      polyglot\n      polyglot (>= 0.3.1)\n    twitter-bootstrap-rails (2.2.7)\n      actionpack (>= 3.1)\n      execjs\n      rails (>= 3.1)\n      railties (>= 3.1)\n    tzinfo (0.3.37)\n    uglifier (2.1.2)\n      execjs (>= 0.3.0)\n      multi_json (~> 1.0, >= 1.0.2)\n    uuidtools (2.1.4)\n    warden (1.2.3)\n      rack (>= 1.0)\n    xpath (2.0.0)\n      nokogiri (~> 1.3)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  annotate\n  aws-sdk\n  bcrypt-ruby\n  better_errors\n  binding_of_caller\n  cancan\n  capybara\n  ckeditor\n  cocaine\n  coffee-rails (~> 4.0.0)\n  database_cleaner\n  devise\n  email_spec\n  factory_girl_rails\n  faker\n  figaro\n  growl\n  guard\n  guard-livereload\n  guard-rspec\n  guard-spork\n  haml\n  haml-rails\n  jbuilder (~> 1.2)\n  jquery-fileupload-rails\n  jquery-rails\n  jquery-ui-rails\n  launchy\n  less-rails\n  letter_opener\n  mandrill-api\n  meta_request\n  paperclip\n  pg\n  railroady\n  rails (= 4.0.0)\n  rails_12factor\n  rb-fsevent\n  rolify\n  rspec-rails\n  sass-rails (~> 4.0.0)\n  sdoc\n  simple_form\n  skrollr-rails\n  spork\n  therubyracer\n  twitter-bootstrap-rails\n  uglifier (>= 1.3.0)\n```\n. Amazing, I had tried installing the latest using --pre and that didn't work but this worked perfectly. Thanks!\n. same here, Gemfile.lock is as follows (but in any case the error seems to be caused json 1.8.0):\n\n```\nGEM\n  remote: https://rubygems.org/\n  specs:\n    actionmailer (4.0.0)\n      actionpack (= 4.0.0)\n      mail (~> 2.5.3)\n    actionpack (4.0.0)\n      activesupport (= 4.0.0)\n      builder (~> 3.1.0)\n      erubis (~> 2.7.0)\n      rack (~> 1.5.2)\n      rack-test (~> 0.6.2)\n    activemodel (4.0.0)\n      activesupport (= 4.0.0)\n      builder (~> 3.1.0)\n    activerecord (4.0.0)\n      activemodel (= 4.0.0)\n      activerecord-deprecated_finders (~> 1.0.2)\n      activesupport (= 4.0.0)\n      arel (~> 4.0.0)\n    activerecord-deprecated_finders (1.0.3)\n    activesupport (4.0.0)\n      i18n (~> 0.6, >= 0.6.4)\n      minitest (~> 4.2)\n      multi_json (~> 1.3)\n      thread_safe (~> 0.1)\n      tzinfo (~> 0.3.37)\n    addressable (2.3.5)\n    annotate (2.5.0)\n      rake\n    arel (4.0.0)\n    atomic (1.1.10)\n    aws-sdk (1.11.1)\n      json (~> 1.4)\n      nokogiri (>= 1.4.4)\n      uuidtools (~> 2.1)\n    bcrypt-ruby (3.1.1)\n    better_errors (0.9.0)\n      coderay (>= 1.0.0)\n      erubis (>= 2.6.6)\n    binding_of_caller (0.7.2)\n      debug_inspector (>= 0.0.1)\n    builder (3.1.4)\n    callsite (0.0.11)\n    cancan (1.6.10)\n    capybara (2.1.0)\n      mime-types (>= 1.16)\n      nokogiri (>= 1.3.3)\n      rack (>= 1.0.0)\n      rack-test (>= 0.5.4)\n      xpath (~> 2.0)\n    childprocess (0.3.9)\n      ffi (~> 1.0, >= 1.0.11)\n    ckeditor (4.0.4)\n      mime-types\n      orm_adapter\n    climate_control (0.0.3)\n      activesupport (>= 3.0)\n    cocaine (0.5.1)\n      climate_control (>= 0.0.3, < 1.0)\n    coderay (1.0.9)\n    coffee-rails (4.0.0)\n      coffee-script (>= 2.2.0)\n      railties (>= 4.0.0.beta, < 5.0)\n    coffee-script (2.2.0)\n      coffee-script-source\n      execjs\n    coffee-script-source (1.6.3)\n    commonjs (0.2.6)\n    database_cleaner (1.0.1)\n    debug_inspector (0.0.2)\n    devise (3.0.0)\n      bcrypt-ruby (~> 3.0)\n      orm_adapter (~> 0.1)\n      railties (>= 3.2.6, < 5)\n      warden (~> 1.2.3)\n    diff-lcs (1.2.4)\n    em-websocket (0.5.0)\n      eventmachine (>= 0.12.9)\n      http_parser.rb (~> 0.5.3)\n    email_spec (1.5.0)\n      launchy (~> 2.1)\n      mail (~> 2.2)\n    erubis (2.7.0)\n    eventmachine (1.0.3)\n    excon (0.16.10)\n    execjs (1.4.0)\n      multi_json (~> 1.0)\n    factory_girl (4.2.0)\n      activesupport (>= 3.0.0)\n    factory_girl_rails (4.2.1)\n      factory_girl (~> 4.2.0)\n      railties (>= 3.0.0)\n    faker (1.2.0)\n      i18n (~> 0.5)\n    ffi (1.9.0)\n    figaro (0.7.0)\n      bundler (~> 1.0)\n      rails (>= 3, < 5)\n    formatador (0.2.4)\n    growl (1.0.3)\n    guard (1.8.1)\n      formatador (>= 0.2.4)\n      listen (>= 1.0.0)\n      lumberjack (>= 1.0.2)\n      pry (>= 0.9.10)\n      thor (>= 0.14.6)\n    guard-livereload (1.4.0)\n      em-websocket (>= 0.5.0)\n      guard (>= 1.8.0)\n      multi_json (~> 1.7)\n    guard-rspec (3.0.2)\n      guard (>= 1.8)\n      rspec (~> 2.13)\n    guard-spork (1.5.1)\n      childprocess (>= 0.2.3)\n      guard (>= 1.1)\n      spork (>= 0.8.4)\n    haml (4.0.3)\n      tilt\n    haml-rails (0.4)\n      actionpack (>= 3.1, < 4.1)\n      activesupport (>= 3.1, < 4.1)\n      haml (>= 3.1, < 4.1)\n      railties (>= 3.1, < 4.1)\n    hike (1.2.3)\n    http_parser.rb (0.5.3)\n    i18n (0.6.4)\n    jbuilder (1.5.0)\n      activesupport (>= 3.0.0)\n      multi_json (>= 1.2.0)\n    jquery-fileupload-rails (0.4.1)\n      actionpack (>= 3.1)\n      railties (>= 3.1)\n    jquery-rails (3.0.4)\n      railties (>= 3.0, < 5.0)\n      thor (>= 0.14, < 2.0)\n    jquery-ui-rails (4.0.4)\n      jquery-rails\n      railties (>= 3.1.0)\n    json (1.7.7)\n    launchy (2.3.0)\n      addressable (~> 2.3)\n    less (2.3.2)\n      commonjs (~> 0.2.6)\n    less-rails (2.3.3)\n      actionpack (>= 3.1)\n      less (~> 2.3.1)\n    letter_opener (1.1.2)\n      launchy (~> 2.2)\n    libv8 (3.11.8.17)\n    listen (1.2.2)\n      rb-fsevent (>= 0.9.3)\n      rb-inotify (>= 0.9)\n      rb-kqueue (>= 0.2)\n    lumberjack (1.0.4)\n    mail (2.5.4)\n      mime-types (~> 1.16)\n      treetop (~> 1.4.8)\n    mandrill-api (1.0.38)\n      excon (~> 0.16.0)\n      json (~> 1.7.7)\n    meta_request (0.2.7)\n      callsite\n      rack-contrib\n      railties\n    method_source (0.8.2)\n    mime-types (1.23)\n    mini_portile (0.5.1)\n    minitest (4.7.5)\n    multi_json (1.7.7)\n    nokogiri (1.6.0)\n      mini_portile (~> 0.5.0)\n    orm_adapter (0.4.0)\n    paperclip (3.5.0)\n      activemodel (>= 3.0.0)\n      activesupport (>= 3.0.0)\n      cocaine (~> 0.5.0)\n      mime-types\n    pg (0.16.0)\n    polyglot (0.3.3)\n    pry (0.9.12.2)\n      coderay (~> 1.0.5)\n      method_source (~> 0.8)\n      slop (~> 3.4)\n    rack (1.5.2)\n    rack-contrib (1.1.0)\n      rack (>= 0.9.1)\n    rack-test (0.6.2)\n      rack (>= 1.0)\n    railroady (1.1.0)\n    rails (4.0.0)\n      actionmailer (= 4.0.0)\n      actionpack (= 4.0.0)\n      activerecord (= 4.0.0)\n      activesupport (= 4.0.0)\n      bundler (>= 1.3.0, < 2.0)\n      railties (= 4.0.0)\n      sprockets-rails (~> 2.0.0)\n    rails_12factor (0.0.2)\n      rails_serve_static_assets\n      rails_stdout_logging\n    rails_serve_static_assets (0.0.1)\n    rails_stdout_logging (0.0.1)\n    railties (4.0.0)\n      actionpack (= 4.0.0)\n      activesupport (= 4.0.0)\n      rake (>= 0.8.7)\n      thor (>= 0.18.1, < 2.0)\n    rake (10.1.0)\n    rb-fsevent (0.9.3)\n    rb-inotify (0.9.0)\n      ffi (>= 0.5.0)\n    rb-kqueue (0.2.0)\n      ffi (>= 0.5.0)\n    rdoc (3.12.2)\n      json (~> 1.4)\n    ref (1.0.5)\n    rolify (3.2.0)\n    rspec (2.14.1)\n      rspec-core (~> 2.14.0)\n      rspec-expectations (~> 2.14.0)\n      rspec-mocks (~> 2.14.0)\n    rspec-core (2.14.4)\n    rspec-expectations (2.14.0)\n      diff-lcs (>= 1.1.3, < 2.0)\n    rspec-mocks (2.14.2)\n    rspec-rails (2.14.0)\n      actionpack (>= 3.0)\n      activesupport (>= 3.0)\n      railties (>= 3.0)\n      rspec-core (~> 2.14.0)\n      rspec-expectations (~> 2.14.0)\n      rspec-mocks (~> 2.14.0)\n    sass (3.2.10)\n    sass-rails (4.0.0)\n      railties (>= 4.0.0.beta, < 5.0)\n      sass (>= 3.1.10)\n      sprockets-rails (~> 2.0.0)\n    sdoc (0.3.20)\n      json (>= 1.1.3)\n      rdoc (~> 3.10)\n    simple_form (1.4.1)\n    skrollr-rails (0.6.9)\n      rails (>= 3.1.0)\n    slop (3.4.6)\n    spork (0.9.2)\n    sprockets (2.10.0)\n      hike (~> 1.2)\n      multi_json (~> 1.0)\n      rack (~> 1.0)\n      tilt (~> 1.1, != 1.3.0)\n    sprockets-rails (2.0.0)\n      actionpack (>= 3.0)\n      activesupport (>= 3.0)\n      sprockets (~> 2.8)\n    therubyracer (0.11.4)\n      libv8 (~> 3.11.8.12)\n      ref\n    thor (0.18.1)\n    thread_safe (0.1.2)\n      atomic\n    tilt (1.4.1)\n    treetop (1.4.14)\n      polyglot\n      polyglot (>= 0.3.1)\n    twitter-bootstrap-rails (2.2.7)\n      actionpack (>= 3.1)\n      execjs\n      rails (>= 3.1)\n      railties (>= 3.1)\n    tzinfo (0.3.37)\n    uglifier (2.1.2)\n      execjs (>= 0.3.0)\n      multi_json (~> 1.0, >= 1.0.2)\n    uuidtools (2.1.4)\n    warden (1.2.3)\n      rack (>= 1.0)\n    xpath (2.0.0)\n      nokogiri (~> 1.3)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  annotate\n  aws-sdk\n  bcrypt-ruby\n  better_errors\n  binding_of_caller\n  cancan\n  capybara\n  ckeditor\n  cocaine\n  coffee-rails (~> 4.0.0)\n  database_cleaner\n  devise\n  email_spec\n  factory_girl_rails\n  faker\n  figaro\n  growl\n  guard\n  guard-livereload\n  guard-rspec\n  guard-spork\n  haml\n  haml-rails\n  jbuilder (~> 1.2)\n  jquery-fileupload-rails\n  jquery-rails\n  jquery-ui-rails\n  launchy\n  less-rails\n  letter_opener\n  mandrill-api\n  meta_request\n  paperclip\n  pg\n  railroady\n  rails (= 4.0.0)\n  rails_12factor\n  rb-fsevent\n  rolify\n  rspec-rails\n  sass-rails (~> 4.0.0)\n  sdoc\n  simple_form\n  skrollr-rails\n  spork\n  therubyracer\n  twitter-bootstrap-rails\n  uglifier (>= 1.3.0)\n```\n. Amazing, I had tried installing the latest using --pre and that didn't work but this worked perfectly. Thanks!\n. ",
    "panozzaj": "FYI: I ran into this issue yesterday, and installed 0.13.3.rc2 and regenerated my Zeus config with `zeus init` and it works for me now on my project.\n. FYI: I ran into this issue yesterday, and installed 0.13.3.rc2 and regenerated my Zeus config with `zeus init` and it works for me now on my project.\n. ",
    "chibicode": "I'm seeing the same issue with `0.13.4.pre2` and `zeus init` didn't help...\n\n```\n~/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/bundler-1.3.5/lib/bundler/runtime.rb:33:in `block in setup':\nYou have already activated json 1.8.0, but your Gemfile requires json 1.7.7.\nUsing bundle exec may solve this. (Gem::LoadError)\n```\n. I'm seeing the same issue with `0.13.4.pre2` and `zeus init` didn't help...\n\n```\n~/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/bundler-1.3.5/lib/bundler/runtime.rb:33:in `block in setup':\nYou have already activated json 1.8.0, but your Gemfile requires json 1.7.7.\nUsing bundle exec may solve this. (Gem::LoadError)\n```\n. ",
    "phudgins": "I have the same issue. I am _also_ using rbenv and rbenv-bundler.\n\nHere is my [stacktrace](http://git.io/m_mCmw).\n\nI can provide Gemfile.lock on request\n. I have the same issue. I am _also_ using rbenv and rbenv-bundler.\n\nHere is my [stacktrace](http://git.io/m_mCmw).\n\nI can provide Gemfile.lock on request\n. ",
    "rebyn": "I tried uninstalling json 1.8 and keep older versions of this gem, then `bundle update` and it (zeus) works fine.\n. I tried uninstalling json 1.8 and keep older versions of this gem, then `bundle update` and it (zeus) works fine.\n. ",
    "jithugopal": "Yup, uninstalling the old version for json gem worked for me as well. But before you do `bundle update` be sure that you gem versions are locked properly in Gemfile. You can use the [lockness_monster](https://github.com/nilenso/lock_ness_monster) for this.\n. Yup, uninstalling the old version for json gem worked for me as well. But before you do `bundle update` be sure that you gem versions are locked properly in Gemfile. You can use the [lockness_monster](https://github.com/nilenso/lock_ness_monster) for this.\n. ",
    "mraaroncruz": "I would recommend just a `bundle update json` so you don't stomp all of your versions. This is such an obvious solution that I totally missed... Thanks @rebyn \n. I would recommend just a `bundle update json` so you don't stomp all of your versions. This is such an obvious solution that I totally missed... Thanks @rebyn \n. ",
    "artemave": "`bundle update json` fixed it for me. Thanks @rebyn \n. `bundle update json` fixed it for me. Thanks @rebyn \n. ",
    "daniellboy": "Works for me too @TylerRick . Works for me too @TylerRick . ",
    "bguest": "This is what my custom plan looks like\n\n``` ruby\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n\n  def test\n    require 'simplecov'      # Run SimpleCov\n    SimpleCov.start 'rails'\n\n    # require all ruby files\n    Dir[\"#{Rails.root}/app/**/*.rb\"].each { |f| load f }\n\n    # run the tests\n    super\n  end\nend\n\nZeus.plan = CustomPlan.new\n```\n\nIf I leave the `Dir[\"#{Rails.root}/app/**/*.rb\"].each { |f| load f }` there I get the previously mentioned warnings, If I remove that line, I don't get the warnings, but I also don't get any simplecov coverage results....\n. This is what my custom plan looks like\n\n``` ruby\nrequire 'zeus/rails'\n\nclass CustomPlan < Zeus::Rails\n\n  def test\n    require 'simplecov'      # Run SimpleCov\n    SimpleCov.start 'rails'\n\n    # require all ruby files\n    Dir[\"#{Rails.root}/app/**/*.rb\"].each { |f| load f }\n\n    # run the tests\n    super\n  end\nend\n\nZeus.plan = CustomPlan.new\n```\n\nIf I leave the `Dir[\"#{Rails.root}/app/**/*.rb\"].each { |f| load f }` there I get the previously mentioned warnings, If I remove that line, I don't get the warnings, but I also don't get any simplecov coverage results....\n. ",
    "emerson-h": "I'm also having this issue.\n. I'm also having this issue.\n. ",
    "seuros": "try with `zeus rspec spec` where spec is your test folder\n. try with `zeus rspec spec` where spec is your test folder\n. ",
    "jrdioko": "It seems to be working now. I must have been accidentally using an old session.\n. It seems to be working now. I must have been accidentally using an old session.\n. ",
    "rposborne": "Issue was Meta Request Gem for Rails Panel. Closing\n. +1.  Rails 4.0.1, Ruby 2-p247 OSX 10.9   I get the EOF on line 88 when i kill it. \n. Issue was Meta Request Gem for Rails Panel. Closing\n. +1.  Rails 4.0.1, Ruby 2-p247 OSX 10.9   I get the EOF on line 88 when i kill it. \n. ",
    "jcarley": "I have this exact setup working for me.\n\nUsing vim on host (Mac) to edit source files.\nRails 4 app source code is on my Mac\nVagrant runs Ubuntu 12.04 (provisioned with puppet)\nRails App is shared with an nfs share\n\nI run Zeus on the vm, not on my Mac.  I use tmux so having multiple terminals open is no big deal.  I vagrant ssh into multiple terminal sessions.  One of the terminals is running zeus.  The others is where I execute my rspec tests.  I also added zeus to my Gemfile (I know its recommend not to).  I've been working on trying to get it to reload other folders under app, for example app/api, but with no luck.  The standard rails folders under app work just fine.\n\nI had to setup some custom zeus stuff, but it works.  If you want to take a look at my project files, which has the Vagrantfile, puppet, and zeus files its located at:\n\nRepo:  https://github.com/jcarley/carleyfamily\nBranch:  develop\n\nHave a look at:\n- Vagrantfile\n- custom_plan.rb\n- zeus.json\n\nUpdate: I do have reload working for other directories under app.  For example, app/commands.  I think the issue I'm running into with app/api is because I'm using Grape to build an api.  When a new action is added to the API, essentially the routes are being update.  I don't think zeus reloads routes.\n. I have this exact setup working for me.\n\nUsing vim on host (Mac) to edit source files.\nRails 4 app source code is on my Mac\nVagrant runs Ubuntu 12.04 (provisioned with puppet)\nRails App is shared with an nfs share\n\nI run Zeus on the vm, not on my Mac.  I use tmux so having multiple terminals open is no big deal.  I vagrant ssh into multiple terminal sessions.  One of the terminals is running zeus.  The others is where I execute my rspec tests.  I also added zeus to my Gemfile (I know its recommend not to).  I've been working on trying to get it to reload other folders under app, for example app/api, but with no luck.  The standard rails folders under app work just fine.\n\nI had to setup some custom zeus stuff, but it works.  If you want to take a look at my project files, which has the Vagrantfile, puppet, and zeus files its located at:\n\nRepo:  https://github.com/jcarley/carleyfamily\nBranch:  develop\n\nHave a look at:\n- Vagrantfile\n- custom_plan.rb\n- zeus.json\n\nUpdate: I do have reload working for other directories under app.  For example, app/commands.  I think the issue I'm running into with app/api is because I'm using Grape to build an api.  When a new action is added to the API, essentially the routes are being update.  I don't think zeus reloads routes.\n. ",
    "kennyngston": "Found workaround: https://github.com/burke/zeus/pull/194#commitcomment-2492759\n\n```\n$ zeus rspec spec/requests/static_pages_spec.rb:12\nRun options: include {:locations=>{\"./spec/requests/static_pages_spec.rb\"=>[12]}}\n.\n\nFinished in 0.11577 seconds\n1 example, 0 failures\n\nRandomized with seed 0\n```\n. Found workaround: https://github.com/burke/zeus/pull/194#commitcomment-2492759\n\n```\n$ zeus rspec spec/requests/static_pages_spec.rb:12\nRun options: include {:locations=>{\"./spec/requests/static_pages_spec.rb\"=>[12]}}\n.\n\nFinished in 0.11577 seconds\n1 example, 0 failures\n\nRandomized with seed 0\n```\n. ",
    "vireshas": "I am facing a similar issue.\n. I am facing a similar issue.\n. ",
    "rutikasb": "+1\n. +1\n. ",
    "jessecurry": "I'm having a similar issue, was there a resolution for this?\n. I found a resolution!\n\nI added the following lines to `config/environments/test.rb`\n\n``` ruby\nconfig.threadsafe!\nconfig.dependency_loading = true\n```\n\nNow `zeus rspec` seems to be working correctly. I was tipped off when I had a `NameError` during a migration on Heroku.\n\nI'm not sure if the `config.threadsafe!` is needed, but I don't think that it hurts to have it in there.\n. I'm having a similar issue, was there a resolution for this?\n. I found a resolution!\n\nI added the following lines to `config/environments/test.rb`\n\n``` ruby\nconfig.threadsafe!\nconfig.dependency_loading = true\n```\n\nNow `zeus rspec` seems to be working correctly. I was tipped off when I had a `NameError` during a migration on Heroku.\n\nI'm not sure if the `config.threadsafe!` is needed, but I don't think that it hurts to have it in there.\n. ",
    "rajofchennai": "@jessecurry there was no resolution for this. I still face the issue. \n. @jessecurry  Even this does not work.. zeus rspec does not work\n\nbut if I run \n\n```\nzeus rspec spec/models/ spec/controllers/ spec/routing/  spec/helpers/ spec/lib/\n```\n\nThis runs all the tests. So I am using this as a work around for now.\n. @jessecurry there was no resolution for this. I still face the issue. \n. @jessecurry  Even this does not work.. zeus rspec does not work\n\nbut if I run \n\n```\nzeus rspec spec/models/ spec/controllers/ spec/routing/  spec/helpers/ spec/lib/\n```\n\nThis runs all the tests. So I am using this as a work around for now.\n. ",
    "nocache": "in Zeus version 0.15.4 (at least)\n`RAILS_ENV=test zeus rake db:migrate`\nproduces this:\n`Warning: Specifying a Rails environment via RAILS_ENV has no effect for commands run with zeus.\nAs a safety precaution to protect you from nuking your development database,\nZeus will now cowardly refuse to proceed. Please unset RAILS_ENV and try again.`\n. in Zeus version 0.15.4 (at least)\n`RAILS_ENV=test zeus rake db:migrate`\nproduces this:\n`Warning: Specifying a Rails environment via RAILS_ENV has no effect for commands run with zeus.\nAs a safety precaution to protect you from nuking your development database,\nZeus will now cowardly refuse to proceed. Please unset RAILS_ENV and try again.`\n. ",
    "sos4nt": ":+1:\nAs a workaround you can edit the configuration file in `<path-to-zeus-gem>/example/zeus.json`\n. :+1:\nAs a workaround you can edit the configuration file in `<path-to-zeus-gem>/example/zeus.json`\n. ",
    "methyl": "To be honest, I have no idea how the test for it should look like :pensive:\n. To be honest, I have no idea how the test for it should look like :pensive:\n. ",
    "richardkall": "Seems to work after upgrading cucumber-rails to 1.4.0. \n. Seems to work after upgrading cucumber-rails to 1.4.0. \n. ",
    "waiting-for-dev": "You are right, that fixed it. You see I hadn\u2019t read very carefully the README :) Thank you!!\n. You are right, that fixed it. You see I hadn\u2019t read very carefully the README :) Thank you!!\n. ",
    "svyatov": ":+1: \n. :+1: \n. ",
    "dgilperez": "Hey! Check the wiki: https://github.com/burke/zeus/wiki/Reload-RSpec-support-files\n. Hey! Check the wiki: https://github.com/burke/zeus/wiki/Reload-RSpec-support-files\n. ",
    "johnjohndoe": "I rewrote the `spec_helper.rb` as follows:\n\n```\ndef zeus_running?\n  File.exists? '.zeus.sock'\nend\n\nif !zeus_running?\n  Dir[Rails.root.join(\"spec/support/**/*.rb\")].each { |f| require f }\nend\n\nRSpec.configure do |config|\n  config.include ResponseHelper, type: :request\nend\n```\n\nand I created a `custom_plan.rb`. However, `zeus test` fails with the following error message:\n\n> .../spec/spec_helper.rb:25:in `block in <top (required)>': uninitialized constant ResponseHelper (NameError)\n. I rewrote the `spec_helper.rb` as follows:\n\n```\ndef zeus_running?\n  File.exists? '.zeus.sock'\nend\n\nif !zeus_running?\n  Dir[Rails.root.join(\"spec/support/**/*.rb\")].each { |f| require f }\nend\n\nRSpec.configure do |config|\n  config.include ResponseHelper, type: :request\nend\n```\n\nand I created a `custom_plan.rb`. However, `zeus test` fails with the following error message:\n\n> .../spec/spec_helper.rb:25:in `block in <top (required)>': uninitialized constant ResponseHelper (NameError)\n. ",
    "carstengehling": "The usual practice is actually to do:\n\n```\nrake db:migrate\n```\n\nand then just before running your tests first time after the migration:\n\n```\nrake db:test:prepare\n```\n\nYou could just combine these yourself as:\n\n```\nzeus rake db:migrate && zeus rake db:test:prepare\n```\n\nHTH\n. The usual practice is actually to do:\n\n```\nrake db:migrate\n```\n\nand then just before running your tests first time after the migration:\n\n```\nrake db:test:prepare\n```\n\nYou could just combine these yourself as:\n\n```\nzeus rake db:migrate && zeus rake db:test:prepare\n```\n\nHTH\n. ",
    "schlamory": "I've just experienced the same problem. Coffeescript compiles and loads fine with rails s, but not with zeus s. \n\nOutside of this, I'm liking zeus **a lot**.\n. I've just experienced the same problem. Coffeescript compiles and loads fine with rails s, but not with zeus s. \n\nOutside of this, I'm liking zeus **a lot**.\n. ",
    "SebastianVomMeer": "I think this was an execjs issue: https://github.com/intridea/multi_json/issues/133\n\nAfter updating execjs it seems to work for me now:\n\n```\nbundle update execjs\n```\n. I think this was an execjs issue: https://github.com/intridea/multi_json/issues/133\n\nAfter updating execjs it seems to work for me now:\n\n```\nbundle update execjs\n```\n. ",
    "jeffshantz": "You can also type `stty sane`\n. You can also type `stty sane`\n. ",
    "ismell": "I just got the some thing. It turns out that my Gemfile.lock was out of date so the process was crashing. It just never showed the error. So maybe zeus should be updated to handle the case when the command crashes and shows the stdout.\n. I just got the some thing. It turns out that my Gemfile.lock was out of date so the process was crashing. It just never showed the error. So maybe zeus should be updated to handle the case when the command crashes and shows the stdout.\n. ",
    "jgarber": ":+1: \n![screenshot 2013-12-23 12 28 22](https://f.cloud.github.com/assets/8061/1802119/ac070356-6bf7-11e3-9f00-95505e72b9d8.png)\n. :+1: \n![screenshot 2013-12-23 12 28 22](https://f.cloud.github.com/assets/8061/1802119/ac070356-6bf7-11e3-9f00-95505e72b9d8.png)\n. ",
    "thedrow": "Same here.\n. Yes I started Zeus and then typed Ctrl+C in order to stop it.. I no longer have access to that machine but I did see it happening from time to time. \r\nI was using the latest Zeus version and OS X Sierra. . We're experiencing it too on some of our development machines although I'm not sure what the problem is. Restarting zeus resolves the issue.\n. Seems like this isn't working. No idea why though.. Same here.\n. Yes I started Zeus and then typed Ctrl+C in order to stop it.. I no longer have access to that machine but I did see it happening from time to time. \r\nI was using the latest Zeus version and OS X Sierra. . We're experiencing it too on some of our development machines although I'm not sure what the problem is. Restarting zeus resolves the issue.\n. Seems like this isn't working. No idea why though.. ",
    "NobbZ": "For future reference:\n\nBesides the std-lib `psych` there was also a gem `psych` installed, but in rvms global gemset, not in the gemset I was using for the project, this way it didn't show up in my `gem list` but it was there and some magic tried to load it over the std-lib psych!\n\nTo get rid of the problem and the `psych`-gem I had to do the following:\n\n``` bash\n$ gem uninstall -i /full/path/to/rvm/gems/ruby-2.0.0-p247@global psych\n```\n\nNow everything seems to work.\n. I am using that syntax every day for my different project depending gemsets, but didn't realize I could use it for global\u2026\n\nMy shame\u2026 anyway, that gem in global was used but NOT listed, thats the even bigger problem but has nothing to do with zeus.\n. @corysimmons, please read again\u2026\nThat did not work for my case in RVM because psych was NOT in the active gemset but in global and you can't remove gems from global with that simple command. You have to do a \"qualified\" remove or to switch over to global first. And exactly that was my original problem that a simple `gem uninstall psych` did NOT work out of this reason.\n. For future reference:\n\nBesides the std-lib `psych` there was also a gem `psych` installed, but in rvms global gemset, not in the gemset I was using for the project, this way it didn't show up in my `gem list` but it was there and some magic tried to load it over the std-lib psych!\n\nTo get rid of the problem and the `psych`-gem I had to do the following:\n\n``` bash\n$ gem uninstall -i /full/path/to/rvm/gems/ruby-2.0.0-p247@global psych\n```\n\nNow everything seems to work.\n. I am using that syntax every day for my different project depending gemsets, but didn't realize I could use it for global\u2026\n\nMy shame\u2026 anyway, that gem in global was used but NOT listed, thats the even bigger problem but has nothing to do with zeus.\n. @corysimmons, please read again\u2026\nThat did not work for my case in RVM because psych was NOT in the active gemset but in global and you can't remove gems from global with that simple command. You have to do a \"qualified\" remove or to switch over to global first. And exactly that was my original problem that a simple `gem uninstall psych` did NOT work out of this reason.\n. ",
    "corysimmons": ":+1:\n\n`gem uninstall psych` worked for me\n. Sorry, I should've specified I did target my global Ruby with that uninstall.\n. :+1:\n\n`gem uninstall psych` worked for me\n. Sorry, I should've specified I did target my global Ruby with that uninstall.\n. ",
    "dipth": "Ah yes, makes perfect sense now - although a bit confusing if you're not familiar with the m-gem\n. Ah yes, makes perfect sense now - although a bit confusing if you're not familiar with the m-gem\n. ",
    "stefanvermaas": "Zeus version 0.13.3.rc2\n. For me it doesn't make a difference which shell I use.. Tried system reboot and an other clean install of Zeus, but that didn't work too.\n. Can confirm @loed20 's solution is fixed the problem. \n. Zeus version 0.13.3.rc2\n. For me it doesn't make a difference which shell I use.. Tried system reboot and an other clean install of Zeus, but that didn't work too.\n. Can confirm @loed20 's solution is fixed the problem. \n. ",
    "davidcelis": "I'm seeing zeus immediately crash on my rails app but, for some reason, only under fish-shell. If I temporarily switch to zsh, zeus boots correctly.\n. I've been having this same problem for a long time now. Haven't been able to use Zeus in months.\n. I'm seeing zeus immediately crash on my rails app but, for some reason, only under fish-shell. If I temporarily switch to zsh, zeus boots correctly.\n. I've been having this same problem for a long time now. Haven't been able to use Zeus in months.\n. ",
    "loed-idzinga": "I'm working with Stefan on the same project. Could backtrace it to the gem 'Faker' in combination with the default gem 'Psych'. \n\n#### Steps I get it working again:\n- Unset Faker in Gemfile. ( otherwise there is no zeus error message )\n- Bundle\n- Uninstalled the latest version (2.0.1) of Psych via prompt\n- Set Faker in Gemfile\n- Bundle\n\nI'm using the same versions of ruby as Stefan, are there known problems with Zeus + Psych + Faker?\n\n#### Update\n\nIt's definitly a problem with Psych. Updated to Rails 4.0.1 and zeus fails again. This is the error:\n\n```\n    `<module:Psych>': superclass mismatch for class SyntaxError (TypeError)\n```\n. ## Solution\n\nFound a solution to this problem, adding gem 'psych' to the gemfile, everything works as it should. \n. I'm working with Stefan on the same project. Could backtrace it to the gem 'Faker' in combination with the default gem 'Psych'. \n\n#### Steps I get it working again:\n- Unset Faker in Gemfile. ( otherwise there is no zeus error message )\n- Bundle\n- Uninstalled the latest version (2.0.1) of Psych via prompt\n- Set Faker in Gemfile\n- Bundle\n\nI'm using the same versions of ruby as Stefan, are there known problems with Zeus + Psych + Faker?\n\n#### Update\n\nIt's definitly a problem with Psych. Updated to Rails 4.0.1 and zeus fails again. This is the error:\n\n```\n    `<module:Psych>': superclass mismatch for class SyntaxError (TypeError)\n```\n. ## Solution\n\nFound a solution to this problem, adding gem 'psych' to the gemfile, everything works as it should. \n. ",
    "hunterboerner": "Same problem. Mac 10.9\n. Same problem. Mac 10.9\n. ",
    "edsinclair": ":+1: \n. :+1: \n. ",
    "samu": "i have the same problem. Occurs with 0.14.0.rc1, works fine with 0.13.4.pre2.\n\ni use linux and vagrant. Rails version is 3.2.13.\n. i have the same problem. Occurs with 0.14.0.rc1, works fine with 0.13.4.pre2.\n\ni use linux and vagrant. Rails version is 3.2.13.\n. ",
    "singjsong": "Same for me as well, but only for 0.13.4.pre2...yet the pre version is the one I prefer since it worked fine with RubyMine's EAPs but ever since they upgraded to 132.1053, commands on the CL from zeus in RubyMine just hang. My particular instance could be a problem with them though.\n. Same for me as well, but only for 0.13.4.pre2...yet the pre version is the one I prefer since it worked fine with RubyMine's EAPs but ever since they upgraded to 132.1053, commands on the CL from zeus in RubyMine just hang. My particular instance could be a problem with them though.\n. ",
    "arzatskis": "Had the same issue with ruby 2.0 on OSX Mavericks. After switching back to 1.9.3 problem was gone\n. Had the same issue with ruby 2.0 on OSX Mavericks. After switching back to 1.9.3 problem was gone\n. ",
    "poggs": "I'm affected by this problem too, but on 2.0.0-p247 on Ubuntu.  1.9.3 works fine.\n. I'm affected by this problem too, but on 2.0.0-p247 on Ubuntu.  1.9.3 works fine.\n. ",
    "redross": "Just installed Ubuntu 13.10 - same problem as @poggs . Though before I definitely used ruby 2.0.0 with zeus (not sure about exact version). \n. Might be relevant, I'm using RVM.\n. Just installed Ubuntu 13.10 - same problem as @poggs . Though before I definitely used ruby 2.0.0 with zeus (not sure about exact version). \n. Might be relevant, I'm using RVM.\n. ",
    "mmozuras": "Don't have this problem on OSX Mavericks with:\n`ruby 2.0.0p247 (2013-06-27 revision 41674) [x86_64-darwin12.4.0]`\nNot sure if relevant: using rbenv instead rvm.\n. Don't have this problem on OSX Mavericks with:\n`ruby 2.0.0p247 (2013-06-27 revision 41674) [x86_64-darwin12.4.0]`\nNot sure if relevant: using rbenv instead rvm.\n. ",
    "biggless": "Uninstall all gems, then put zeus info Gemfile and make bundle install - works fine.\nAfter 'gem update' - this error. Will try ruby 1.9.3.\n. Uninstall all gems, then put zeus info Gemfile and make bundle install - works fine.\nAfter 'gem update' - this error. Will try ruby 1.9.3.\n. ",
    "allenlsy": "I used RVM ruby 2.0.0-p247. Rails 4.0. \nI cannot do `zeus start` after `gem install zeus`\n\nBut if I add `zeus` to Gemfile, and `bundle install`, then I can run `zeus start` like before.\n. I used RVM ruby 2.0.0-p247. Rails 4.0. \nI cannot do `zeus start` after `gem install zeus`\n\nBut if I add `zeus` to Gemfile, and `bundle install`, then I can run `zeus start` like before.\n. ",
    "jdrucza": "I had a similar issue after upgrading to Mavericks and then I found separately that I had a version conflict with the json gem. A 'bundle update' fixed it.\n. I had a similar issue after upgrading to Mavericks and then I found separately that I had a version conflict with the json gem. A 'bundle update' fixed it.\n. ",
    "silasjmatson": "@jdrucza's advice to `bundle update` fixed the issue for me.\n. @jdrucza's advice to `bundle update` fixed the issue for me.\n. ",
    "gwintrob": "+1 I am having the same issue.  Were you able to make any progress?\n. Yes, that fixed my problem as well.  Thanks for the tip.\n. +1 I am having the same issue.  Were you able to make any progress?\n. Yes, that fixed my problem as well.  Thanks for the tip.\n. ",
    "prodigerati": "I get the same error with ruby 2.0.0p247, and zeus (0.13.3).\n\nUPDATE: I added `gem 'zeus'` to my Gemfile and now zeus start runs normally.\n. I get the same error with ruby 2.0.0p247, and zeus (0.13.3).\n\nUPDATE: I added `gem 'zeus'` to my Gemfile and now zeus start runs normally.\n. ",
    "rounders": "just confirming that adding 'zeus' to my gemfile works. Thanks @prodigerati \n. just confirming that adding 'zeus' to my gemfile works. Thanks @prodigerati \n. ",
    "dannyvanhoof": "how do you start zeus when it's added to the gemfile? or - put differently - how do I get access to the latest zeus version, so that rspec works fine? if I install zeus, it by default takes 0.13.3...\n. how do you start zeus when it's added to the gemfile? or - put differently - how do I get access to the latest zeus version, so that rspec works fine? if I install zeus, it by default takes 0.13.3...\n. ",
    "timminkov": "I'm having this issue as well, though I'm using OSX/Iterm/ZSH.\n. Restarting Zeus works for me. This only happens to me when I run zeus test (I rarely run Zeus server). No other noticeable repeat behavior, but it seems to happen about 30-40 minutes after starting Zeus.\n. > Is there some file you can explicitly require to get that method to be available?\n\nI'm not sure - It would be an RSpec file so I'm totally lost as to what file to actually include. Regardless, I don't think I should be adding lines of code to each spec just to avoid a Zeus error, as it would be frustrating to other team members.\n\n> Additionally, it's unclear to me which routes call is generating the error. Can you put your call to MyEngine::Engine.routes on a different line so we can see if it's an issue with rspec or an issue with loading your code?\n\nThe tests run - The error is thrown after the tests finish running. I\n. > If the tests are trying to run twice, do you have require 'rspec/autorun' somewhere in your spec helper? Try removing that and see how we do.\n\nThat fixed it! Thanks much.\n. I'm having this issue as well, though I'm using OSX/Iterm/ZSH.\n. Restarting Zeus works for me. This only happens to me when I run zeus test (I rarely run Zeus server). No other noticeable repeat behavior, but it seems to happen about 30-40 minutes after starting Zeus.\n. > Is there some file you can explicitly require to get that method to be available?\n\nI'm not sure - It would be an RSpec file so I'm totally lost as to what file to actually include. Regardless, I don't think I should be adding lines of code to each spec just to avoid a Zeus error, as it would be frustrating to other team members.\n\n> Additionally, it's unclear to me which routes call is generating the error. Can you put your call to MyEngine::Engine.routes on a different line so we can see if it's an issue with rspec or an issue with loading your code?\n\nThe tests run - The error is thrown after the tests finish running. I\n. > If the tests are trying to run twice, do you have require 'rspec/autorun' somewhere in your spec helper? Try removing that and see how we do.\n\nThat fixed it! Thanks much.\n. ",
    "courtenay": "this is still a problem in p481, so assuming 247 is the last valid ruby it works on, the change must be somewhere in here: http://svn.ruby-lang.org/repos/ruby/tags/v2_0_0_353/ChangeLog (247 starts at \"Thu Jun 27 20:10:56 2013\") :/\n. I can get it to break my terminal (even re-running bash doesn't fix it) if there's an error in my test code, by running `zeus test test/unit/whatever.rb` - but if i have no errors, it doesn't break things. \n\nedit: this may be a different issue, sorry\n. this is still a problem in p481, so assuming 247 is the last valid ruby it works on, the change must be somewhere in here: http://svn.ruby-lang.org/repos/ruby/tags/v2_0_0_353/ChangeLog (247 starts at \"Thu Jun 27 20:10:56 2013\") :/\n. I can get it to break my terminal (even re-running bash doesn't fix it) if there's an error in my test code, by running `zeus test test/unit/whatever.rb` - but if i have no errors, it doesn't break things. \n\nedit: this may be a different issue, sorry\n. ",
    "jgandt": "Super sad on this one. I understand the challenges, but this is quickly becoming a deal breaker for me.\n\nHow can we help to solve this?\n. Super sad on this one. I understand the challenges, but this is quickly becoming a deal breaker for me.\n\nHow can we help to solve this?\n. ",
    "joaomilho": "+1\n. +1\n. ",
    "rainux": "I also have this issue with Rails 3.1.12 and zeus 0.13.3.\n. I also have this issue with Rails 3.1.12 and zeus 0.13.3.\n. ",
    "sarmiena": "+1 anyone track down why this is happening?\n. I'm using rails-observers gem in our project & it appears that touching any model used by my observers is causing the issue. If I remove rails-observers gem, the problem goes away.\n. +1 anyone track down why this is happening?\n. I'm using rails-observers gem in our project & it appears that touching any model used by my observers is causing the issue. If I remove rails-observers gem, the problem goes away.\n. ",
    "lluis": "I also have this issue, but I'm not using rails-observer gem\nI found that zeus is restarted after changing models that are required by initializers or by other models that also trigger the zeus restart.\n. I also have this issue, but I'm not using rails-observer gem\nI found that zeus is restarted after changing models that are required by initializers or by other models that also trigger the zeus restart.\n. ",
    "ijcd": "I have a partial fix/workaround described in #458 \n. Spork is able to fix this by deferring route loading using Spork.trap_method. Can zeus do something similar?\n\nhttps://github.com/gregbell/active_admin/wiki/Use-spork\n. This works to prevent early-loaded models caused by route loading, for example. ActiveAdmin triggers this problem.\n\n  https://gist.github.com/ijcd/cfbc559c09a0443d888a\n\nI can work up something like trap_method and Zeus.each_run if the patch would be accepted. In general, some kind of before/after method hooks in the custom plans would be helpful for better hooking into the methods.\n. Ok. I'll work something up. I know better understand the zeus.json -> custom_plan.rb mapping better. I updated the gist to be more general.\n\nWhat would be great is a hook to run things only after certain forks. The after_fork seems to run for all actions. Being able to scope it to just certain things might be all that's needed for now.\n. I have a partial fix/workaround described in #458 \n. Spork is able to fix this by deferring route loading using Spork.trap_method. Can zeus do something similar?\n\nhttps://github.com/gregbell/active_admin/wiki/Use-spork\n. This works to prevent early-loaded models caused by route loading, for example. ActiveAdmin triggers this problem.\n\n  https://gist.github.com/ijcd/cfbc559c09a0443d888a\n\nI can work up something like trap_method and Zeus.each_run if the patch would be accepted. In general, some kind of before/after method hooks in the custom plans would be helpful for better hooking into the methods.\n. Ok. I'll work something up. I know better understand the zeus.json -> custom_plan.rb mapping better. I updated the gist to be more general.\n\nWhat would be great is a hook to run things only after certain forks. The after_fork seems to run for all actions. Being able to scope it to just certain things might be all that's needed for now.\n. ",
    "kazmin": "Installed the newest gem:\n\ngem 'zeus', \">= 0.13.4.pre2\"\n\nand it fixed it.\n. Installed the newest gem:\n\ngem 'zeus', \">= 0.13.4.pre2\"\n\nand it fixed it.\n. ",
    "Draiken": "Running the specs through `zeus rake` works as expected :/\n. Running the specs through `zeus rake` works as expected :/\n. ",
    "joffotron": "Yes please! \nUnless anyone has a built version available somewhere? Using bundler with this repo with the 'git:' parameter doesn't build the binaries\n. I think I've managed to get a working build finally, built on OSX Lion, using the Go cross-compile tools, so it should include:\n\nbuild/zeus-darwin-amd64\nbuild/zeus-linux-386\nbuild/zeus-linux-amd64\n\nI've put it here: https://dl.dropboxusercontent.com/u/9049675/zeus-0.14.0.rc1.gem\nPerhaps someone can verify I haven't screwed something up badly? ;)\n. Bump? \n. Fantastic :-) Confirmed working on OSX Lion\n. Yes please! \nUnless anyone has a built version available somewhere? Using bundler with this repo with the 'git:' parameter doesn't build the binaries\n. I think I've managed to get a working build finally, built on OSX Lion, using the Go cross-compile tools, so it should include:\n\nbuild/zeus-darwin-amd64\nbuild/zeus-linux-386\nbuild/zeus-linux-amd64\n\nI've put it here: https://dl.dropboxusercontent.com/u/9049675/zeus-0.14.0.rc1.gem\nPerhaps someone can verify I haven't screwed something up badly? ;)\n. Bump? \n. Fantastic :-) Confirmed working on OSX Lion\n. ",
    "jcowhigjr": "removing the meta_request gem fixes the issue.  Which gem code or configuration would allow them both to co-exist?\nduplicate issue here:\nhttps://github.com/burke/zeus/issues/383\n\nhttps://github.com/dejan/rails_panel/issues/70\n. removing the meta_request gem fixes the issue.  Which gem code or configuration would allow them both to co-exist?\nduplicate issue here:\nhttps://github.com/burke/zeus/issues/383\n\nhttps://github.com/dejan/rails_panel/issues/70\n. ",
    "knightq": "Me too\n. Me too\n. ",
    "dudeman": ":+1: \n. Good find. Works for me as well (ruby 2.1.1)\n. I didn't do a bundle update, I only did a bundle clean. \nI'm on rake 10.1.1 and bundle clean removed 10.1.0 as well as zeus 0.13.4.pre2 (which I had tried briefly).\nHope that helps.\n. :+1: \n. Good find. Works for me as well (ruby 2.1.1)\n. I didn't do a bundle update, I only did a bundle clean. \nI'm on rake 10.1.1 and bundle clean removed 10.1.0 as well as zeus 0.13.4.pre2 (which I had tried briefly).\nHope that helps.\n. ",
    "epylinkn": ":+1:\n. :+1:\n. ",
    "bryanrite": ":+1: \n. :+1: \n. ",
    "iwiznia": ":+1:\n. I just installed the [spring gem](https://github.com/rails/spring) which does basically the same as zeus. It works with ruby 2.1 and is included by default on rails 4.1\n. After a week of use, I have to say zeus works much better than spring... any news on solving this issue?\n. :+1:\n. I just installed the [spring gem](https://github.com/rails/spring) which does basically the same as zeus. It works with ruby 2.1 and is included by default on rails 4.1\n. After a week of use, I have to say zeus works much better than spring... any news on solving this issue?\n. ",
    "arsduo": ":+1: \n. The problem also occurs under Ruby 2.1.1 on my system -- it hangs in the boot step trying to connect, and any command I run just hangs without output.\n\n![screen shot 2014-02-24 at 11 00 57](https://f.cloud.github.com/assets/48325/2248076/497b7744-9d75-11e3-9acd-31bf1e6b2a55.png)\n. Unfortunately, that doesn't seem to work for me -- I've made sure rake is the same version in the project gemset and the global gemset, run `bundle update` then `bundle clean`, but no luck :(\n\n@nilcolor, @dudeman, can you say what gems were updated when you ran bundle update? Perhaps there's some common gem that's blocking Zeus under 2.1.0. (Which version of Rake are you using, 10.1.1?)\n\nI've been hanging back from upgrading to 2.1.1 so far because spring doesn't really meet our needs and I've been hoping this issue would get fixed. It's fine if it doesn't (it's open source, and the maintainers have to take care of day jobs, other priorities, etc.), but it would be useful to hear from the maintainers if this is something that probably won't get fixed soon, or that they can't reproduce, or anything else. I'm not at all familiar with Go or I'd try my hand at it myself.\n\nThanks, all!\n. :+1: \n. The problem also occurs under Ruby 2.1.1 on my system -- it hangs in the boot step trying to connect, and any command I run just hangs without output.\n\n![screen shot 2014-02-24 at 11 00 57](https://f.cloud.github.com/assets/48325/2248076/497b7744-9d75-11e3-9acd-31bf1e6b2a55.png)\n. Unfortunately, that doesn't seem to work for me -- I've made sure rake is the same version in the project gemset and the global gemset, run `bundle update` then `bundle clean`, but no luck :(\n\n@nilcolor, @dudeman, can you say what gems were updated when you ran bundle update? Perhaps there's some common gem that's blocking Zeus under 2.1.0. (Which version of Rake are you using, 10.1.1?)\n\nI've been hanging back from upgrading to 2.1.1 so far because spring doesn't really meet our needs and I've been hoping this issue would get fixed. It's fine if it doesn't (it's open source, and the maintainers have to take care of day jobs, other priorities, etc.), but it would be useful to hear from the maintainers if this is something that probably won't get fixed soon, or that they can't reproduce, or anything else. I'm not at all familiar with Go or I'd try my hand at it myself.\n\nThanks, all!\n. ",
    "nilcolor": "ruby 2.1.1. Start zeus - it crashes. Now if I run something like `zeus s` I've got this:\n\n```\n~/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/bundler-1.5.3/lib/bundler/setup.rb:14:in `exit': exit (SystemExit)\n  from ~/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/bundler-1.5.3/lib/bundler/setup.rb:14:in `rescue in <top (required)>'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/bundler-1.5.3/lib/bundler/setup.rb:6:in `<top (required)>'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/2.1.0/rubygems/core_ext/kernel_require.rb:135:in `require'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/2.1.0/rubygems/core_ext/kernel_require.rb:135:in `rescue in require'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/2.1.0/rubygems/core_ext/kernel_require.rb:144:in `require'\n  from ~/code/autohub/config/boot.rb:4:in `<top (required)>'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/2.1.0/rubygems/core_ext/kernel_require.rb:55:in `require'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/2.1.0/rubygems/core_ext/kernel_require.rb:55:in `require'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.13.3/lib/zeus/rails.rb:80:in `boot'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.13.3/lib/zeus.rb:166:in `run_action'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.13.3/lib/zeus.rb:54:in `block in go'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.13.3/lib/zeus/load_tracking.rb:7:in `features_loaded_by'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.13.3/lib/zeus.rb:53:in `go'\n  from -e:1:in `<main>'\n```\n. After couple of `bundle update`/`bundle clean` zeus start working again... No special things - just updates some gems, make global `rake` version to match my project's rake version, `bundle clean` - and all is up-n-running again.\n. After upgrade ruby to 2.1.1 I have to upgrade `pry`-related gems. Also I make my global rake to match my project rake which is 10.1.0.\n`bundle clean` cleans some old gems including rake 10.1.1 and old pry. That is all.\n. ruby 2.1.1. Start zeus - it crashes. Now if I run something like `zeus s` I've got this:\n\n```\n~/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/bundler-1.5.3/lib/bundler/setup.rb:14:in `exit': exit (SystemExit)\n  from ~/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/bundler-1.5.3/lib/bundler/setup.rb:14:in `rescue in <top (required)>'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/bundler-1.5.3/lib/bundler/setup.rb:6:in `<top (required)>'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/2.1.0/rubygems/core_ext/kernel_require.rb:135:in `require'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/2.1.0/rubygems/core_ext/kernel_require.rb:135:in `rescue in require'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/2.1.0/rubygems/core_ext/kernel_require.rb:144:in `require'\n  from ~/code/autohub/config/boot.rb:4:in `<top (required)>'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/2.1.0/rubygems/core_ext/kernel_require.rb:55:in `require'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/2.1.0/rubygems/core_ext/kernel_require.rb:55:in `require'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.13.3/lib/zeus/rails.rb:80:in `boot'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.13.3/lib/zeus.rb:166:in `run_action'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.13.3/lib/zeus.rb:54:in `block in go'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.13.3/lib/zeus/load_tracking.rb:7:in `features_loaded_by'\n  from ~/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.13.3/lib/zeus.rb:53:in `go'\n  from -e:1:in `<main>'\n```\n. After couple of `bundle update`/`bundle clean` zeus start working again... No special things - just updates some gems, make global `rake` version to match my project's rake version, `bundle clean` - and all is up-n-running again.\n. After upgrade ruby to 2.1.1 I have to upgrade `pry`-related gems. Also I make my global rake to match my project rake which is 10.1.0.\n`bundle clean` cleans some old gems including rake 10.1.1 and old pry. That is all.\n. ",
    "randoum": "If you rename your file `custom_plan.rb` to `zeus_custom_plan.rb`\n\nThen in `zeus.json` you update this name change in the `command` line\n`\"command\": \"ruby -rubygems -r./zeus_custom_plan -eZeus.go\",`\n\nIs it working?\n\nMaybe you'll have to rename you `CustomPlan` class name to `ZeusCustomPlan` also\n. If you rename your file `custom_plan.rb` to `zeus_custom_plan.rb`\n\nThen in `zeus.json` you update this name change in the `command` line\n`\"command\": \"ruby -rubygems -r./zeus_custom_plan -eZeus.go\",`\n\nIs it working?\n\nMaybe you'll have to rename you `CustomPlan` class name to `ZeusCustomPlan` also\n. ",
    "dfang": "@latortuga that's true, so i buy a faster rmbp and don't use zeus now :)\n. @latortuga that's true, so i buy a faster rmbp and don't use zeus now :)\n. ",
    "mull": "Happens here as well suddenly.\n\n```\nuname -a\nDarwin Emils-MacBook-Pro.local 13.0.0 Darwin Kernel Version 13.0.0: Thu Sep 19 22:22:27 PDT 2013; root:xnu-2422.1.72~6/RELEASE_X86_64 x86_64\n```\n\n```\nruby -v\nruby 2.0.0p353 (2013-11-22 revision 43784) [x86_64-darwin13.0.0]\n```\n\nI'm seeing a `exit status 1` right as I write `zeus start` - after that it seems to be doing nothing. `rails s` and similar commands still work. Anything I can do to help debugging?\n. Update: At some point our version changed from `0.3.12` to `0.3.12.rc2` which is what caused these problems. Upgraded to `0.3.13` and all is good again.\n. Happens here as well suddenly.\n\n```\nuname -a\nDarwin Emils-MacBook-Pro.local 13.0.0 Darwin Kernel Version 13.0.0: Thu Sep 19 22:22:27 PDT 2013; root:xnu-2422.1.72~6/RELEASE_X86_64 x86_64\n```\n\n```\nruby -v\nruby 2.0.0p353 (2013-11-22 revision 43784) [x86_64-darwin13.0.0]\n```\n\nI'm seeing a `exit status 1` right as I write `zeus start` - after that it seems to be doing nothing. `rails s` and similar commands still work. Anything I can do to help debugging?\n. Update: At some point our version changed from `0.3.12` to `0.3.12.rc2` which is what caused these problems. Upgraded to `0.3.13` and all is good again.\n. ",
    "motymichaely": "I see right after the '\\zeus start' command a \"Signal 9\" and that's it.\n. It happens for me even with 0.13.3 (and even with 0.13.4.pre2)\n\nHow can I debug this?\n. Guys, any news on this one? Can't use zeus, which is a bummer ..\n. @hiromipaw - it doesn't work with Ruby 1.9.3 as well. \n\nI am totally aware of the fact it's an open source (and free) software. I wish I could contribute but what I am seeking is a way to make zeus output the root cause in a way. I would be happy to contribute for sure.\n\n10x!\n. Same here.\n\n`ruby 2.0.0p195 (2013-05-14 revision 40734) [x86_64-darwin13.0.0]`\n`Rails 3.2.16`\n. I see right after the '\\zeus start' command a \"Signal 9\" and that's it.\n. It happens for me even with 0.13.3 (and even with 0.13.4.pre2)\n\nHow can I debug this?\n. Guys, any news on this one? Can't use zeus, which is a bummer ..\n. @hiromipaw - it doesn't work with Ruby 1.9.3 as well. \n\nI am totally aware of the fact it's an open source (and free) software. I wish I could contribute but what I am seeking is a way to make zeus output the root cause in a way. I would be happy to contribute for sure.\n\n10x!\n. Same here.\n\n`ruby 2.0.0p195 (2013-05-14 revision 40734) [x86_64-darwin13.0.0]`\n`Rails 3.2.16`\n. ",
    "hiromipaw": "I have this issue on ruby-2.0.0-p353 but not on ruby-1.9.3-p484.\n. Have you tried on ruby 1.9.3? BTW zeus is free software, hence it is not guarantee the developers might get on the bug and fix it right away. If it is so important to you, you should actually contribute to it... \n. I have this issue on ruby-2.0.0-p353 but not on ruby-1.9.3-p484.\n. Have you tried on ruby 1.9.3? BTW zeus is free software, hence it is not guarantee the developers might get on the bug and fix it right away. If it is so important to you, you should actually contribute to it... \n. ",
    "danlaffan": "After \"zeus start\" crashes for me, in another terminal window, I ran \"zeus console\" and was presented with this response:\n\n```\n/Users/danlaffan/.rvm/gems/ruby-2.0.0-p353/gems/zeus-0.13.3/lib/zeus/rails.rb:86:in `scan': invalid byte sequence in US-ASCII (ArgumentError)\n        from /Users/danlaffan/.rvm/gems/ruby-2.0.0-p353/gems/zeus-0.13.3/lib/zeus/rails.rb:86:in `boot'\n        from /Users/danlaffan/.rvm/gems/ruby-2.0.0-p353/gems/zeus-0.13.3/lib/zeus.rb:166:in `run_action'\n        from /Users/danlaffan/.rvm/gems/ruby-2.0.0-p353/gems/zeus-0.13.3/lib/zeus.rb:54:in `block in go'\n        from /Users/danlaffan/.rvm/gems/ruby-2.0.0-p353/gems/zeus-0.13.3/lib/zeus/load_tracking.rb:7:in `features_loaded_by'\n        from /Users/danlaffan/.rvm/gems/ruby-2.0.0-p353/gems/zeus-0.13.3/lib/zeus.rb:53:in `go'\n        from -e:1:in `<main>'\n```\n\nRunning Ruby 2.0.0p353 and Rails 3.2.16.\n. I've managed to generate a work-around for this bug myself.  In the file \n\n```\ngems/zeus-0.13.3/lib/zeus/rails.rb\n```\n\nI added five lines of code starting at rescue => e in the method shown below, and it made the crash go away:\n\n``` ruby\n    def boot\n      _monkeypatch_rake\n\n      require BOOT_PATH\n      # config/application.rb normally requires 'rails/all'.\n      # Some 'alternative' ORMs such as Mongoid give instructions to switch this require\n      # out for a list of railties, not including ActiveRecord.\n      # We grep config/application.rb for all requires of rails/all or railties, and require them.\n      rails_components = File.read(APP_PATH + \".rb\").\n        scan(/^\\s*require\\s*['\"](.*railtie.*|rails\\/all)['\"]/).flatten\n\n      rails_components = [\"rails/all\"] if rails_components == []\n      rails_components.each do |component|\n        require component\n      end\n    rescue => e\n      rails_components = [\"rails/all\"]\n      rails_components.each do |component|\n        require component\n      end\n    end\n```\n. After \"zeus start\" crashes for me, in another terminal window, I ran \"zeus console\" and was presented with this response:\n\n```\n/Users/danlaffan/.rvm/gems/ruby-2.0.0-p353/gems/zeus-0.13.3/lib/zeus/rails.rb:86:in `scan': invalid byte sequence in US-ASCII (ArgumentError)\n        from /Users/danlaffan/.rvm/gems/ruby-2.0.0-p353/gems/zeus-0.13.3/lib/zeus/rails.rb:86:in `boot'\n        from /Users/danlaffan/.rvm/gems/ruby-2.0.0-p353/gems/zeus-0.13.3/lib/zeus.rb:166:in `run_action'\n        from /Users/danlaffan/.rvm/gems/ruby-2.0.0-p353/gems/zeus-0.13.3/lib/zeus.rb:54:in `block in go'\n        from /Users/danlaffan/.rvm/gems/ruby-2.0.0-p353/gems/zeus-0.13.3/lib/zeus/load_tracking.rb:7:in `features_loaded_by'\n        from /Users/danlaffan/.rvm/gems/ruby-2.0.0-p353/gems/zeus-0.13.3/lib/zeus.rb:53:in `go'\n        from -e:1:in `<main>'\n```\n\nRunning Ruby 2.0.0p353 and Rails 3.2.16.\n. I've managed to generate a work-around for this bug myself.  In the file \n\n```\ngems/zeus-0.13.3/lib/zeus/rails.rb\n```\n\nI added five lines of code starting at rescue => e in the method shown below, and it made the crash go away:\n\n``` ruby\n    def boot\n      _monkeypatch_rake\n\n      require BOOT_PATH\n      # config/application.rb normally requires 'rails/all'.\n      # Some 'alternative' ORMs such as Mongoid give instructions to switch this require\n      # out for a list of railties, not including ActiveRecord.\n      # We grep config/application.rb for all requires of rails/all or railties, and require them.\n      rails_components = File.read(APP_PATH + \".rb\").\n        scan(/^\\s*require\\s*['\"](.*railtie.*|rails\\/all)['\"]/).flatten\n\n      rails_components = [\"rails/all\"] if rails_components == []\n      rails_components.each do |component|\n        require component\n      end\n    rescue => e\n      rails_components = [\"rails/all\"]\n      rails_components.each do |component|\n        require component\n      end\n    end\n```\n. ",
    "gordonbisnor": "+1 was working great, stopped working. Gem dependency? Not sure, no output visible. Just that exit status 1.\n. +1 was working great, stopped working. Gem dependency? Not sure, no output visible. Just that exit status 1.\n. ",
    "gdomingu": "Happened to me when I did a bundle update. Like @mull, gem uninstalling the new version and installing 0.13.3 fixed it for me. \n. Happened to me when I did a bundle update. Like @mull, gem uninstalling the new version and installing 0.13.3 fixed it for me. \n. ",
    "bpourriahi": "This was driving me crazy, especially since I no one else on the team had this issue and our VMs are configured the same. It turns out the problem was due to my ssh settings on my VM. Disabling the AcceptEnv parameter in /etc/ssh/sshd_config fixed the issue for me.\n. This was driving me crazy, especially since I no one else on the team had this issue and our VMs are configured the same. It turns out the problem was due to my ssh settings on my VM. Disabling the AcceptEnv parameter in /etc/ssh/sshd_config fixed the issue for me.\n. ",
    "snuggs": "Any update to this?\n. Any update to this?\n. ",
    "santopuppy": "Looking at the error, `invalid byte sequence in US-ASCII (ArgumentError)` seems to point that there is a problem with character encoding. I have come across this same issue and fixed it by setting `LC_ALL=en_US.UTF-8` fixed this for me. I am in an ubuntu 14.04 vbox running with vagrant.\n\nI simply put the above line in my `~/.bashrc` file.\n\nI hope this helps.\n. Looking at the error, `invalid byte sequence in US-ASCII (ArgumentError)` seems to point that there is a problem with character encoding. I have come across this same issue and fixed it by setting `LC_ALL=en_US.UTF-8` fixed this for me. I am in an ubuntu 14.04 vbox running with vagrant.\n\nI simply put the above line in my `~/.bashrc` file.\n\nI hope this helps.\n. ",
    "lahiruj": "Uninstalling the current version and running,\n\n```\n$ gem install zeus -v 0.15.4\n```\n\nsolved it for me.\n. Uninstalling the current version and running,\n\n```\n$ gem install zeus -v 0.15.4\n```\n\nsolved it for me.\n. ",
    "ryanq-jackrabbitsystems": "Our team is using `Zeus version 0.13.3.rc2`.  The reason i was getting `exit status 1` is I was missing a version of json (1.8.2) in my global gem set. So in my home directory, running `gem install json -v 1.8.2` brought my global gemset for json to `json (1.8.3, 1.8.2, 1.7.7)`. That fixed the issue for me somehow...\n. Our team is using `Zeus version 0.13.3.rc2`.  The reason i was getting `exit status 1` is I was missing a version of json (1.8.2) in my global gem set. So in my home directory, running `gem install json -v 1.8.2` brought my global gemset for json to `json (1.8.3, 1.8.2, 1.7.7)`. That fixed the issue for me somehow...\n. ",
    "FelixFortis": "This might help with debugging:\n`zeus --log ZEUS.LOG start`\n`cat ZEUS.LOG`\n. This might help with debugging:\n`zeus --log ZEUS.LOG start`\n`cat ZEUS.LOG`\n. ",
    "stasl": "added test\n. added test\n. ",
    "chrisjeon": "Oh, I didn't know zeus s invokes the rails server.  I think for now I'll go with setting up bash aliases.  Thanks for that suggestion!\n. Oh, I didn't know zeus s invokes the rails server.  I think for now I'll go with setting up bash aliases.  Thanks for that suggestion!\n. ",
    "rap1ds": "Adding `# encoding: UTF-8` at the beginning of the `rails.rb` was what I tried first, but it didn't solve the issue. Got the same error.\n. Right, well, my `application.rb` has already the `# encoding: UTF-8`.\n. Adding `# encoding: UTF-8` at the beginning of the `rails.rb` was what I tried first, but it didn't solve the issue. Got the same error.\n. Right, well, my `application.rb` has already the `# encoding: UTF-8`.\n. ",
    "BiggerNoise": "That does not appear to be the cause of the issue.  Let me see if I can put together a test case that demonstrates the issue.\n\n## With Zeus\n\n```\n$zeus rake insight:kpi:set_arguments[general,over_threshold_member_cost,threshold:85000]\n\nSetting Arguments: []\nMeasure over_threshold_member_cost arguments, name: current_value (default value)\n    threshold: 75000.0 (75000)\n```\n\n## Bundle Exec\n\n```\n$bundle exec rake insight:kpi:set_arguments[general,over_threshold_member_cost,threshold:85000]\n\nSetting Arguments: [[\"threshold\", 85000.0]]\nMeasure over_threshold_member_cost arguments, name: current_value (default value)\n    threshold: 85000.0 (75000)\n```\n\nEdited so that the current value and the attempted set value are different\n. That does not appear to be the cause of the issue.  Let me see if I can put together a test case that demonstrates the issue.\n\n## With Zeus\n\n```\n$zeus rake insight:kpi:set_arguments[general,over_threshold_member_cost,threshold:85000]\n\nSetting Arguments: []\nMeasure over_threshold_member_cost arguments, name: current_value (default value)\n    threshold: 75000.0 (75000)\n```\n\n## Bundle Exec\n\n```\n$bundle exec rake insight:kpi:set_arguments[general,over_threshold_member_cost,threshold:85000]\n\nSetting Arguments: [[\"threshold\", 85000.0]]\nMeasure over_threshold_member_cost arguments, name: current_value (default value)\n    threshold: 85000.0 (75000)\n```\n\nEdited so that the current value and the attempted set value are different\n. ",
    "taboularasa": "I'm experiencing the same problem exactly  \n. @bwicklund that fixed it for me too. awesome, thanks. \n. I'm experiencing the same problem exactly  \n. @bwicklund that fixed it for me too. awesome, thanks. \n. ",
    "bwicklund": "I was experiencing the same issue with Rails 4.0.4 and Ruby 2.1.0, when I removed the `meta_request` gem everything was fine. \n. I was experiencing the same issue with Rails 4.0.4 and Ruby 2.1.0, when I removed the `meta_request` gem everything was fine. \n. ",
    "camol": "I'm having exactly same issue. Zeus starts properly but all commands like rspec or console run very very slow, liked there was nothing preloaded by the initial start of zeus. The problem is somehow probably connected with my system, because other people working on the same project run the latest zeus 0.15.4 without any issues. I'm on Mac system version 10.9.5. The same really small tests take even about 2-3 seconds longer than normally runned by rspec.\n\nThe zeus is installed globally not from the project Gemfile. I'm using latest stable RVM 1.26.11 with ruby 2.2.2p95 (2015-04-13 revision 50295) [x86_64-darwin13]. I tried many ruby versions (every time reinstalling the zeus) and no result. Strange thing is that the zeus 0.4.4 works properly :confused:.\n\nAny thoughts?\n. I'm having exactly same issue. Zeus starts properly but all commands like rspec or console run very very slow, liked there was nothing preloaded by the initial start of zeus. The problem is somehow probably connected with my system, because other people working on the same project run the latest zeus 0.15.4 without any issues. I'm on Mac system version 10.9.5. The same really small tests take even about 2-3 seconds longer than normally runned by rspec.\n\nThe zeus is installed globally not from the project Gemfile. I'm using latest stable RVM 1.26.11 with ruby 2.2.2p95 (2015-04-13 revision 50295) [x86_64-darwin13]. I tried many ruby versions (every time reinstalling the zeus) and no result. Strange thing is that the zeus 0.4.4 works properly :confused:.\n\nAny thoughts?\n. ",
    "jesseclark": "I'm having the same problem but I don't have ActiveAdmin installed. Any time I touch a model Zeus reloads the whole app. Pretty unusable like this...\n\nFresh install of zeus (0.15.1)\nruby 1.9.3p547 (2014-05-14 revision 45962) [x86_64-darwin12.5.0]\nRails 3.2.13\nMongoid 3.1.6\n. I'm having the same problem but I don't have ActiveAdmin installed. Any time I touch a model Zeus reloads the whole app. Pretty unusable like this...\n\nFresh install of zeus (0.15.1)\nruby 1.9.3p547 (2014-05-14 revision 45962) [x86_64-darwin12.5.0]\nRails 3.2.13\nMongoid 3.1.6\n. ",
    "caifara": "I guess this is a double of #433. In that case this is expected (and utterly annoying) behaviour.\n. I guess this is a double of #433. In that case this is expected (and utterly annoying) behaviour.\n. ",
    "mrnugget": "I know this is an old issue, but I just wanted to let you know that the gist by @ijcd works for me. After days of investigating what caused our huge app to fully reload on every change (which makes fast test-feedback nearly impossible) I broke it down to `config.eager_load` being set to `true` in development/test and the files I changed being models that have routes defined for them.\n\nSo, to make Zeus work without fully reloading the application on nearly every change, I did the following:\n\n1.) Set `config.eager_load` to `false` in `config/environments/development.rb` and `config/environments/test.rb`\n2.) Remove all routes defined in `config/routes.rb` **OR** use @ijcd's patch in my `custom_plan.rb`.\n\nI don't have any experience regarding stability of this patch yet, since I just tried it out. But I was so excited I thought I had to share this...\n. I know this is an old issue, but I just wanted to let you know that the gist by @ijcd works for me. After days of investigating what caused our huge app to fully reload on every change (which makes fast test-feedback nearly impossible) I broke it down to `config.eager_load` being set to `true` in development/test and the files I changed being models that have routes defined for them.\n\nSo, to make Zeus work without fully reloading the application on nearly every change, I did the following:\n\n1.) Set `config.eager_load` to `false` in `config/environments/development.rb` and `config/environments/test.rb`\n2.) Remove all routes defined in `config/routes.rb` **OR** use @ijcd's patch in my `custom_plan.rb`.\n\nI don't have any experience regarding stability of this patch yet, since I just tried it out. But I was so excited I thought I had to share this...\n. ",
    "kisakov": "@latortuga Now it's error\nWARNING: You have set Rails' config.cache_classes to false (most likely in config/environments/cucumber.rb). This setting is known to cause problems with database transactions. Set config.cache_classes to true if you want to use transactions. For more information see https://rspec.lighthouseapp.com/projects/16211/tickets/165.\nuninitialized constant EmailSpec (NameError)\n. Now it's working ok! Thank you!\n. @latortuga thank you! It's work.\n. @latortuga Now it's error\nWARNING: You have set Rails' config.cache_classes to false (most likely in config/environments/cucumber.rb). This setting is known to cause problems with database transactions. Set config.cache_classes to true if you want to use transactions. For more information see https://rspec.lighthouseapp.com/projects/16211/tickets/165.\nuninitialized constant EmailSpec (NameError)\n. Now it's working ok! Thank you!\n. @latortuga thank you! It's work.\n. ",
    "lukaszx0": "I was having this issue as well on `0.15.1` version. @dy-dx's tip with config reset helped.\n. I was having this issue as well on `0.15.1` version. @dy-dx's tip with config reset helped.\n. ",
    "samotarnik": "am getting the same error w/ zeus 0.15.1 sometimes after changing source files in the project (folder). i am using a custom plan though--see the [gist](https://gist.github.com/samotarnik/59ca2f203112edf90b62). my ruby version is `ruby 1.9.3p545 (2014-02-24 revision 45159) [x86_64-linux]`. i am starting zeus via `OMA_ENV=test zeus start`\n. am getting the same error w/ zeus 0.15.1 sometimes after changing source files in the project (folder). i am using a custom plan though--see the [gist](https://gist.github.com/samotarnik/59ca2f203112edf90b62). my ruby version is `ruby 1.9.3p545 (2014-02-24 revision 45159) [x86_64-linux]`. i am starting zeus via `OMA_ENV=test zeus start`\n. ",
    "nunommc": "I'm getting the same error.\n. I'm getting the same error.\n. ",
    "teanoon": "Actually, it works when i use raw console: rails c\n. when i run rails c, it invokes pry console as i installed pry-rails gem.\nafter run that, pry is activated, and reload! is available.\n. Actually, it works when i use raw console: rails c\n. when i run rails c, it invokes pry console as i installed pry-rails gem.\nafter run that, pry is activated, and reload! is available.\n. ",
    "Hates": "Has anyone found a fix? rails + pry works for me, but not through zeus.\n. @latortuga I'm still certain this is a Zeus issue. Switching to Spring with the same pry setup has no problem running the `reload!` command.\n. Has anyone found a fix? rails + pry works for me, but not through zeus.\n. @latortuga I'm still certain this is a Zeus issue. Switching to Spring with the same pry setup has no problem running the `reload!` command.\n. ",
    "halostatue": "Something is causing the `pry-rails` railtie not to be executed properly; it has a: `console do; \u2026; end` block, which only run when initialized under the console. I'm not _quite_ sure why this is the case, because I don't know enough about how `zeus console` gets started, but what I've put below should work better as a `.pryrc` in the directory than what you provided, @latortuga. It basically conditionally reexecutes the railtie initialization in a fairly safe way (your `.pryrc` may do undesirable things in the case of running `rails console` directly).\n\nI recently upgraded from `0.13.2` to `0.15.1` and that's when things started breaking. Again, not being familiar with the code, I'm not really sure what happened here\u2014but it may have been related to the change at 9bc8bcf\u2014it's the only change that I can see which would theoretically affect `pry` in a quick scan of the changes from `v0.13.2` to `master`. There may be something else going on, but I'm honestly not sure what and haven't the time to dig deeper right now.\n\nFrankly, this _is_ a `zeus` problem, not a `pry` problem, and having to reimplement the `pry-rails` railtie `console` block is nonsense.\n\n``` ruby\n# vim: set ft=ruby:\n\nif defined?(::Rails) && Rails.env\n  if Rails::VERSION::MAJOR == 3\n    verbose, $VERBOSE = $VERBOSE, nil\n    Rails::Console::IRB = ::Pry unless Rails::Console::IRB == ::Pry\n    $VERBOSE = verbose\n\n    unless defined? ::Pry::ExtendCommandBundle\n      ::Pry::ExtendCommandBundle = Module.new\n    end\n  end\n\n  if Rails::VERSION::MAJOR == 4\n    unless Rails.application.config.console == ::Pry\n      Rails.application.config.console = ::Pry\n    end\n  end\n\n  if ((Rails::VERSION::MAJOR == 3 && Rails::VERSION::MINOR >= 2) ||\n      Rails::VERSION::MAJOR == 4)\n    unless defined? ::Rails::ConsoleMethods\n      require 'rails/console/app'\n      require 'rails/console/helpers'\n\n      TOPLEVEL_BINDING.eval('self').extend ::Rails::ConsoleMethods\n    end\n  end\nend\n```\n. Yes. If you use that code in the rails-project-local .pryrc, pry will work again.\n. Something is causing the `pry-rails` railtie not to be executed properly; it has a: `console do; \u2026; end` block, which only run when initialized under the console. I'm not _quite_ sure why this is the case, because I don't know enough about how `zeus console` gets started, but what I've put below should work better as a `.pryrc` in the directory than what you provided, @latortuga. It basically conditionally reexecutes the railtie initialization in a fairly safe way (your `.pryrc` may do undesirable things in the case of running `rails console` directly).\n\nI recently upgraded from `0.13.2` to `0.15.1` and that's when things started breaking. Again, not being familiar with the code, I'm not really sure what happened here\u2014but it may have been related to the change at 9bc8bcf\u2014it's the only change that I can see which would theoretically affect `pry` in a quick scan of the changes from `v0.13.2` to `master`. There may be something else going on, but I'm honestly not sure what and haven't the time to dig deeper right now.\n\nFrankly, this _is_ a `zeus` problem, not a `pry` problem, and having to reimplement the `pry-rails` railtie `console` block is nonsense.\n\n``` ruby\n# vim: set ft=ruby:\n\nif defined?(::Rails) && Rails.env\n  if Rails::VERSION::MAJOR == 3\n    verbose, $VERBOSE = $VERBOSE, nil\n    Rails::Console::IRB = ::Pry unless Rails::Console::IRB == ::Pry\n    $VERBOSE = verbose\n\n    unless defined? ::Pry::ExtendCommandBundle\n      ::Pry::ExtendCommandBundle = Module.new\n    end\n  end\n\n  if Rails::VERSION::MAJOR == 4\n    unless Rails.application.config.console == ::Pry\n      Rails.application.config.console = ::Pry\n    end\n  end\n\n  if ((Rails::VERSION::MAJOR == 3 && Rails::VERSION::MINOR >= 2) ||\n      Rails::VERSION::MAJOR == 4)\n    unless defined? ::Rails::ConsoleMethods\n      require 'rails/console/app'\n      require 'rails/console/helpers'\n\n      TOPLEVEL_BINDING.eval('self').extend ::Rails::ConsoleMethods\n    end\n  end\nend\n```\n. Yes. If you use that code in the rails-project-local .pryrc, pry will work again.\n. ",
    "icortex": "The code by @halostatue worked for me. Thanks!\n. The code by @halostatue worked for me. Thanks!\n. ",
    "lazywei": "Why this is still closed? As @halostatue said, this workaround is not making sense to me. I feel zeus should handle this, shouldn't it?\n. Just confirmed that I still have this issue in Rails 4.2.0.rc1 / Rspec 3.2.0 / Zeus 0.15.4 . @maxcal 's trick fixes the issue.\n. Why this is still closed? As @halostatue said, this workaround is not making sense to me. I feel zeus should handle this, shouldn't it?\n. Just confirmed that I still have this issue in Rails 4.2.0.rc1 / Rspec 3.2.0 / Zeus 0.15.4 . @maxcal 's trick fixes the issue.\n. ",
    "eyaleizenberg": "Thanks @halostatue !\n. Thanks @halostatue !\n. ",
    "ccmcbeck": "So glad to have found this workaround.  So I'll perturb this thread.\n. So glad to have found this workaround.  So I'll perturb this thread.\n. ",
    "ryankc33": "@halostatue's workaround worked for me. \n\nreload! was working fine with vanilla rails c and pry, but ran into the NoMethodError with zeus 0.15.5\n. @halostatue's workaround worked for me. \n\nreload! was working fine with vanilla rails c and pry, but ran into the NoMethodError with zeus 0.15.5\n. ",
    "posgarou": "This would be really handy.  :+1: \n. Makes sense. Thanks!\nOn Mar 24, 2015 1:44 PM, \"Drew Ulmer\" notifications@github.com wrote:\n\n> Closed #509 https://github.com/burke/zeus/issues/509.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/burke/zeus/issues/509#event-263805158.\n. I've noticed the same problem using Zeus 0.15.4, iTerm 2.0.0.20141103, and (if it's relevant) zsh 5.0.5.\n\nIt also seems to only affect some iTerm tabs and not others: one will get messed up formatting like @petebrooks described, while the other tabs will stay just fine.\n. This would be really handy.  :+1: \n. Makes sense. Thanks!\nOn Mar 24, 2015 1:44 PM, \"Drew Ulmer\" notifications@github.com wrote:\n\n> Closed #509 https://github.com/burke/zeus/issues/509.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/burke/zeus/issues/509#event-263805158.\n. I've noticed the same problem using Zeus 0.15.4, iTerm 2.0.0.20141103, and (if it's relevant) zsh 5.0.5.\n\nIt also seems to only affect some iTerm tabs and not others: one will get messed up formatting like @petebrooks described, while the other tabs will stay just fine.\n. ",
    "RunsFor": ":+1: \n. :+1: \n. ",
    "tonekk": "Also observing this.\nPlus after exiting with code 2, the whole shell output is screwed.\nNewlines look like tabs or something and I have to reopen the shell to look normal again:\n\n![screen shot 2014-11-25 at 10 32 34](https://cloud.githubusercontent.com/assets/3327396/5180670/802981dc-748e-11e4-88bc-572959dedc62.png)\n. My workaround right now is to put\n`ze () { zeus $@; stty sane }`\nin my `.zshrc` (or `.bashrc`), then use **ze** command instead of **zeus**.\n\nThat prevents the terminal fuckup at least\n\n## Edit:\n\nFound an even better solution that restarts zeus until it works:\n\n`ze () { ARGS=$@; zeus $@; ZE_EC=$?; stty sane; if [ $ZE_EC = 2 ]; then ze $ARGS; fi }`\n\nFinally, now `zeus` is usable for me again :+1: Thanks @burke for your awesome work!\n. Also observing this.\nPlus after exiting with code 2, the whole shell output is screwed.\nNewlines look like tabs or something and I have to reopen the shell to look normal again:\n\n![screen shot 2014-11-25 at 10 32 34](https://cloud.githubusercontent.com/assets/3327396/5180670/802981dc-748e-11e4-88bc-572959dedc62.png)\n. My workaround right now is to put\n`ze () { zeus $@; stty sane }`\nin my `.zshrc` (or `.bashrc`), then use **ze** command instead of **zeus**.\n\nThat prevents the terminal fuckup at least\n\n## Edit:\n\nFound an even better solution that restarts zeus until it works:\n\n`ze () { ARGS=$@; zeus $@; ZE_EC=$?; stty sane; if [ $ZE_EC = 2 ]; then ze $ARGS; fi }`\n\nFinally, now `zeus` is usable for me again :+1: Thanks @burke for your awesome work!\n. ",
    "bhaak": "@tonekk zeus puts the terminal into a different mode.\n\nYou can reset the settings and make the terminal usable again without closing it by issuing \"stty sane\".\n. @tonekk zeus puts the terminal into a different mode.\n\nYou can reset the settings and make the terminal usable again without closing it by issuing \"stty sane\".\n. ",
    "emilsoman": "I've also been hitting exits with status 2 for a long time now. I can confirm that `stty sane` fixes the screwed up terminal output.\n. I had to modify @aaronjensen 's function a bit to get it working for me in zsh, when passing multiple arguments like `zeus rspec spec/models/user_spec.rb` : \n\n```\nzeus () {\n  ARGS=$@;\n  command zeus \"$@\";\n  ZE_EC=$?;\n  if [ $ZE_EC = 2 ]; then\n    stty sane;\n    zeus ${=ARGS};\n  fi\n}\n```\n. I've also been hitting exits with status 2 for a long time now. I can confirm that `stty sane` fixes the screwed up terminal output.\n. I had to modify @aaronjensen 's function a bit to get it working for me in zsh, when passing multiple arguments like `zeus rspec spec/models/user_spec.rb` : \n\n```\nzeus () {\n  ARGS=$@;\n  command zeus \"$@\";\n  ZE_EC=$?;\n  if [ $ZE_EC = 2 ]; then\n    stty sane;\n    zeus ${=ARGS};\n  fi\n}\n```\n. ",
    "mtoneil": "This bug is really frustrating and is making zeus practically unusable for my team.\n. This bug is really frustrating and is making zeus practically unusable for my team.\n. ",
    "tfrey7": "My team also frequently encounters this bug.\n. My team also frequently encounters this bug.\n. ",
    "Adam262": "I encounter this bug very frequently when in selenium / capybara testing.  I usually need to run a `zeus rspec` test two or three times, even if I wait a few seconds after manually saving.  \n. I encounter this bug very frequently when in selenium / capybara testing.  I usually need to run a `zeus rspec` test two or three times, even if I wait a few seconds after manually saving.  \n. ",
    "jooshbzm": "I too am running into this issue\n. I too am running into this issue\n. ",
    "brandur": "A slightly modified version of @tonekk's script above that also works for Zeus commands with multiple parameters like `zeus rspec spec/endpoints` (note the added quotes around `zeus` and `ze` invocations):\n\n``` sh\nze () { ARGS=$@; zeus \"$@\"; ZE_EC=$?; stty sane; if [ $ZE_EC = 2 ]; then ze \"$ARGS\"; fi }\n```\n\nThanks for the nice solution! I'm glad I googled this because this problem was the one thing driving me nuts on an otherwise perfect piece of software.\n. A slightly modified version of @tonekk's script above that also works for Zeus commands with multiple parameters like `zeus rspec spec/endpoints` (note the added quotes around `zeus` and `ze` invocations):\n\n``` sh\nze () { ARGS=$@; zeus \"$@\"; ZE_EC=$?; stty sane; if [ $ZE_EC = 2 ]; then ze \"$ARGS\"; fi }\n```\n\nThanks for the nice solution! I'm glad I googled this because this problem was the one thing driving me nuts on an otherwise perfect piece of software.\n. ",
    "smit1625": "For any friends who use [Fish Shell](http://fishshell.com/):\n\n```\nfunction zeus; set ARGS $argv; command zeus $argv; set ZE_EC $status; stty sane; if [ $ZE_EC = 2 ]; zeus $ARGS; end; end\n```\n\nThis is based on the solution provided by @aaronjensen.\n. For any friends who use [Fish Shell](http://fishshell.com/):\n\n```\nfunction zeus; set ARGS $argv; command zeus $argv; set ZE_EC $status; stty sane; if [ $ZE_EC = 2 ]; zeus $ARGS; end; end\n```\n\nThis is based on the solution provided by @aaronjensen.\n. ",
    "DevAVIJIT7": "run ls -al , if find .zeus.sock remove it using command rm .zeus.sock.\n. run ls -al , if find .zeus.sock remove it using command rm .zeus.sock.\n. ",
    "weichenghsu": "+1 \r\n![inline](https://i.imgur.com/xvniocy.png=300x \"Title\"). +1 \r\n![inline](https://i.imgur.com/xvniocy.png=300x \"Title\"). ",
    "lukekhamilton": "With the help of the gem 'rack-handlers' unicorn started without issue when using the 'zeus server' command. \n. With the help of the gem 'rack-handlers' unicorn started without issue when using the 'zeus server' command. \n. ",
    "omniless": "Using Ruby 2.1.2 and Rails 4.1.2\n. @andefred I had opened another issue here: https://github.com/guard/guard/issues/608 and I found my particular problem, maybe you have the same.\n\nIn your `custom_plan.rb` comment out the line `Dir[\"#{Rails.root}/app/**/*.rb\"].each { |f| load f }` if you have one. It causes to load the concerns twice when using zeus.\n. Using Ruby 2.1.2 and Rails 4.1.2\n. @andefred I had opened another issue here: https://github.com/guard/guard/issues/608 and I found my particular problem, maybe you have the same.\n\nIn your `custom_plan.rb` comment out the line `Dir[\"#{Rails.root}/app/**/*.rb\"].each { |f| load f }` if you have one. It causes to load the concerns twice when using zeus.\n. ",
    "andefred": "I get the same thing. Any status on this?\n. Thanks! That was indeed the problem.\n. I get the same thing. Any status on this?\n. Thanks! That was indeed the problem.\n. ",
    "pablox-cl": "No, it's fine. If I ran `rspec spec`, the specs ran fine. Besides, those are the default files that are created with rspec... I only get those issues when running them through zeus.\n\n```\n\u276f\u276f\u276f rspec spec\nRun options: include {:focus=>true}\n\nAll examples were filtered out; ignoring {:focus=>true}\n.\n\nFinished in 0.0258 seconds (files took 2.3 seconds to load)\n1 example, 0 failures\n\nTop 1 slowest examples (0.01591 seconds, 61.7% of total time):\n  HomeController GET 'index' returns http success\n    0.01591 seconds ./spec/controllers/home_controller_spec.rb:6\n\u276f\u276f\u276f zeus start\nStarting Zeus server v0.15.1\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus rake (alias: r)\nzeus runner (alias: rn)\nzeus console (alias: c)\nzeus server (alias: s)\nzeus generate (alias: g)\nzeus destroy (alias: d)\nzeus dbconsole\nzeus test (alias: rspec) [run to see backtrace]\nzeus test_console (alias: tc)\n# open a new terminal\n\u276f\u276f\u276f zeus test\n/home/pablo/code/rails/pescve/spec/spec_helper.rb:18:in `<top (required)>': undefined method `configure' for RSpec:Module (NoMethodError)\n    from /home/pablo/code/rails/pescve/vendor/bundle/gems/activesupport-4.1.2/lib/active_support/dependencies.rb:247:in `require'\n    from /home/pablo/code/rails/pescve/vendor/bundle/gems/activesupport-4.1.2/lib/active_support/dependencies.rb:247:in `block in require'\n    from /home/pablo/code/rails/pescve/vendor/bundle/gems/activesupport-4.1.2/lib/active_support/dependencies.rb:232:in `load_dependency'\n    from /home/pablo/code/rails/pescve/vendor/bundle/gems/activesupport-4.1.2/lib/active_support/dependencies.rb:247:in `require'\n    from /home/pablo/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.15.1/lib/zeus/rails.rb:189:in `test_helper'\n    from /home/pablo/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.15.1/lib/zeus.rb:200:in `run_action'\n    from /home/pablo/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.15.1/lib/zeus.rb:74:in `block (2 levels) in boot_steps'\n    from /home/pablo/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.15.1/lib/zeus/load_tracking.rb:7:in `features_loaded_by'\n    from /home/pablo/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.15.1/lib/zeus.rb:73:in `block in boot_steps'\n    from /home/pablo/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.15.1/lib/zeus.rb:56:in `catch'\n    from /home/pablo/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.15.1/lib/zeus.rb:56:in `boot_steps'\n    from /home/pablo/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.15.1/lib/zeus.rb:48:in `go'\n```\n\nWhat dazzles me though, is that for some reason if I run it directly through rspec, the file still requires `spec_helper` first, I don't understand why it doesn't fail then.\n. Hm, okay... I thought this was unrelated to #308, but it seems it's the same... adding:\n\n``` ruby\n# spec/spec_helper.rb\nrequire File.expand_path(\"../../config/environment\", __FILE__)\nrequire 'rspec/rails'\n```\n\nMakes both commands work... I don't understand why in the world I would need that.\n\nI fixed it with this:\n\n``` ruby\n# spec/rails_helper.rb\nrequire 'spec_helper'\n```\n\n``` ruby\n# spec/spec_helper.rb\nrequire File.expand_path(\"../../config/environment\", __FILE__)\nrequire 'rspec/rails'\n```\n\n===== post data\nYou are right, RSpec it's likely defined by them. Anyway, as I said by default with my rails app, the problem doesn't exist. When I used zeus started to fail (which imho it's not what you expect). If you think it's make sense, I can add that \"gotcha\" to the documentation, since it's a new \"issue\" when starting a new app with rspec 3.0 (I think upgrading will not result in any problem).\n. Ok, then. Thanks :).\n. No, it's fine. If I ran `rspec spec`, the specs ran fine. Besides, those are the default files that are created with rspec... I only get those issues when running them through zeus.\n\n```\n\u276f\u276f\u276f rspec spec\nRun options: include {:focus=>true}\n\nAll examples were filtered out; ignoring {:focus=>true}\n.\n\nFinished in 0.0258 seconds (files took 2.3 seconds to load)\n1 example, 0 failures\n\nTop 1 slowest examples (0.01591 seconds, 61.7% of total time):\n  HomeController GET 'index' returns http success\n    0.01591 seconds ./spec/controllers/home_controller_spec.rb:6\n\u276f\u276f\u276f zeus start\nStarting Zeus server v0.15.1\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus rake (alias: r)\nzeus runner (alias: rn)\nzeus console (alias: c)\nzeus server (alias: s)\nzeus generate (alias: g)\nzeus destroy (alias: d)\nzeus dbconsole\nzeus test (alias: rspec) [run to see backtrace]\nzeus test_console (alias: tc)\n# open a new terminal\n\u276f\u276f\u276f zeus test\n/home/pablo/code/rails/pescve/spec/spec_helper.rb:18:in `<top (required)>': undefined method `configure' for RSpec:Module (NoMethodError)\n    from /home/pablo/code/rails/pescve/vendor/bundle/gems/activesupport-4.1.2/lib/active_support/dependencies.rb:247:in `require'\n    from /home/pablo/code/rails/pescve/vendor/bundle/gems/activesupport-4.1.2/lib/active_support/dependencies.rb:247:in `block in require'\n    from /home/pablo/code/rails/pescve/vendor/bundle/gems/activesupport-4.1.2/lib/active_support/dependencies.rb:232:in `load_dependency'\n    from /home/pablo/code/rails/pescve/vendor/bundle/gems/activesupport-4.1.2/lib/active_support/dependencies.rb:247:in `require'\n    from /home/pablo/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.15.1/lib/zeus/rails.rb:189:in `test_helper'\n    from /home/pablo/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.15.1/lib/zeus.rb:200:in `run_action'\n    from /home/pablo/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.15.1/lib/zeus.rb:74:in `block (2 levels) in boot_steps'\n    from /home/pablo/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.15.1/lib/zeus/load_tracking.rb:7:in `features_loaded_by'\n    from /home/pablo/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.15.1/lib/zeus.rb:73:in `block in boot_steps'\n    from /home/pablo/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.15.1/lib/zeus.rb:56:in `catch'\n    from /home/pablo/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.15.1/lib/zeus.rb:56:in `boot_steps'\n    from /home/pablo/.rbenv/versions/2.1.1/lib/ruby/gems/2.1.0/gems/zeus-0.15.1/lib/zeus.rb:48:in `go'\n```\n\nWhat dazzles me though, is that for some reason if I run it directly through rspec, the file still requires `spec_helper` first, I don't understand why it doesn't fail then.\n. Hm, okay... I thought this was unrelated to #308, but it seems it's the same... adding:\n\n``` ruby\n# spec/spec_helper.rb\nrequire File.expand_path(\"../../config/environment\", __FILE__)\nrequire 'rspec/rails'\n```\n\nMakes both commands work... I don't understand why in the world I would need that.\n\nI fixed it with this:\n\n``` ruby\n# spec/rails_helper.rb\nrequire 'spec_helper'\n```\n\n``` ruby\n# spec/spec_helper.rb\nrequire File.expand_path(\"../../config/environment\", __FILE__)\nrequire 'rspec/rails'\n```\n\n===== post data\nYou are right, RSpec it's likely defined by them. Anyway, as I said by default with my rails app, the problem doesn't exist. When I used zeus started to fail (which imho it's not what you expect). If you think it's make sense, I can add that \"gotcha\" to the documentation, since it's a new \"issue\" when starting a new app with rspec 3.0 (I think upgrading will not result in any problem).\n. Ok, then. Thanks :).\n. ",
    "daino3": "Running into this same issue. However, when I add \"require 'rspec/rails'\" to spec_helper (which I believe is for running specs outside of rails) my rspec specs without zeus fail with:\n\n\"/lib/action_view/template.rb:8:in `class:Template': uninitialized constant ActiveSupport::Autoload (NameError)\". \n\nSo ideally, I'd like zeus to run / load rails_helper and not spec_helper. How would I do this?\n. Running into this same issue. However, when I add \"require 'rspec/rails'\" to spec_helper (which I believe is for running specs outside of rails) my rspec specs without zeus fail with:\n\n\"/lib/action_view/template.rb:8:in `class:Template': uninitialized constant ActiveSupport::Autoload (NameError)\". \n\nSo ideally, I'd like zeus to run / load rails_helper and not spec_helper. How would I do this?\n. ",
    "chilcutt": "FWIW, I encountered this same issue this morning creating a new Rails 4.1.5 project using Rspec 3.0.4 and Zeus 0.15.1.\n\nInitially, I hit the error by running zeus with a new installation in [rails.rb](https://github.com/burke/zeus/blob/6bd34a31c1046a14e0242c34931fc485d59f1bca/rubygem/lib/zeus/rails.rb#L188-189).  The rspec-rails gem for rspec 3 split out spec_helper.rb from rails_helper.rb for specs not requiring the rails environment to be loaded.\n\nA fix for executing rspec with the rails environment when not running zeus is to add `--require rails_helper` to the .rspec file.\n\nI fixed my installation by running `$ export RAILS_TEST_HELPER=rails_helper` to set up the ENV['RAILS_TEST_HELPER'] variable to load the right file and then I had to reorder my rails_helper.rb file to require spec_helper after requiring the rspec/rails:\n\n```\n # This file is copied to spec/ when you run 'rails generate rspec:install'\n ENV[\"RAILS_ENV\"] ||= 'test'\n-require 'spec_helper'\n require File.expand_path(\"../../config/environment\", __FILE__)\n require 'rspec/rails'\n+require 'spec_helper'\n```\n. FWIW, I encountered this same issue this morning creating a new Rails 4.1.5 project using Rspec 3.0.4 and Zeus 0.15.1.\n\nInitially, I hit the error by running zeus with a new installation in [rails.rb](https://github.com/burke/zeus/blob/6bd34a31c1046a14e0242c34931fc485d59f1bca/rubygem/lib/zeus/rails.rb#L188-189).  The rspec-rails gem for rspec 3 split out spec_helper.rb from rails_helper.rb for specs not requiring the rails environment to be loaded.\n\nA fix for executing rspec with the rails environment when not running zeus is to add `--require rails_helper` to the .rspec file.\n\nI fixed my installation by running `$ export RAILS_TEST_HELPER=rails_helper` to set up the ENV['RAILS_TEST_HELPER'] variable to load the right file and then I had to reorder my rails_helper.rb file to require spec_helper after requiring the rspec/rails:\n\n```\n # This file is copied to spec/ when you run 'rails generate rspec:install'\n ENV[\"RAILS_ENV\"] ||= 'test'\n-require 'spec_helper'\n require File.expand_path(\"../../config/environment\", __FILE__)\n require 'rspec/rails'\n+require 'spec_helper'\n```\n. ",
    "johvet": "I just ran into the same issue. Fresh Rails 4.2.0.rc3, RSpec 3.1.7 with Zeus 0.15.3 and it still refused to load the tests with the same message (spec/spec_helper.rb:17:in `<top (required)>': undefined method`configure' for RSpec:Module (NoMethodError)\n\nBut according to that last commit (d126abf) it should properly load rails_helper instead of just spec_helper. Well, after fiddling a bit with it, it turns out that my generated rails_helper.rb looks like this:\n\n```\n# This file is copied to spec/ when you run 'rails generate rspec:install'\nENV[\"RAILS_ENV\"] ||= 'test'\nrequire 'spec_helper'\nrequire File.expand_path(\"../../config/environment\", __FILE__)\nrequire 'rspec/rails'\n# Add additional requires below this line. Rails is not loaded until this point!\n```\n\nHm, and looking at the very last comment in that snippet it seemed obvious. I have to require `rspec/rails` before `spec_helper` since the former one requires 'rspec-core' which in turn defines the RSpec module. \n\nSo with reordering my the first few lines in my `spec/rails_helper.rb` to zeus starts right and using zeus test works like a charm again.\n\n```\nENV[\"RAILS_ENV\"] ||= 'test'\nrequire File.expand_path(\"../../config/environment\", __FILE__)\nrequire 'rspec/rails'\n# Add additional requires below this line. Rails is not loaded until this point!\nrequire 'spec_helper'\n```\n. I just ran into the same issue. Fresh Rails 4.2.0.rc3, RSpec 3.1.7 with Zeus 0.15.3 and it still refused to load the tests with the same message (spec/spec_helper.rb:17:in `<top (required)>': undefined method`configure' for RSpec:Module (NoMethodError)\n\nBut according to that last commit (d126abf) it should properly load rails_helper instead of just spec_helper. Well, after fiddling a bit with it, it turns out that my generated rails_helper.rb looks like this:\n\n```\n# This file is copied to spec/ when you run 'rails generate rspec:install'\nENV[\"RAILS_ENV\"] ||= 'test'\nrequire 'spec_helper'\nrequire File.expand_path(\"../../config/environment\", __FILE__)\nrequire 'rspec/rails'\n# Add additional requires below this line. Rails is not loaded until this point!\n```\n\nHm, and looking at the very last comment in that snippet it seemed obvious. I have to require `rspec/rails` before `spec_helper` since the former one requires 'rspec-core' which in turn defines the RSpec module. \n\nSo with reordering my the first few lines in my `spec/rails_helper.rb` to zeus starts right and using zeus test works like a charm again.\n\n```\nENV[\"RAILS_ENV\"] ||= 'test'\nrequire File.expand_path(\"../../config/environment\", __FILE__)\nrequire 'rspec/rails'\n# Add additional requires below this line. Rails is not loaded until this point!\nrequire 'spec_helper'\n```\n. ",
    "ineu": "Shouldn't it be fixed on rspec side by requiring 'rspec/core' at the beginning of spec_helper.rb?\n. Shouldn't it be fixed on rspec side by requiring 'rspec/core' at the beginning of spec_helper.rb?\n. ",
    "xiy": "Easily solved, in your Gemfile:\n\n`gem \"rspec-rails\", require: \"rspec/rails\"`\n\n:dancer: \n. Easily solved, in your Gemfile:\n\n`gem \"rspec-rails\", require: \"rspec/rails\"`\n\n:dancer: \n. ",
    "rickypai": ":dancer: :dancer: :dancer:\n. :dancer: :dancer: :dancer:\n. ",
    "hayeah": "@halilim no idea. I followed https://github.com/burke/zeus/issues/474#issuecomment-89336625 and it worked in our case.\n. @halilim no idea. I followed https://github.com/burke/zeus/issues/474#issuecomment-89336625 and it worked in our case.\n. ",
    "eladg": "@halilim, experienced the same error here... although I'm not using Zeus (just got here though google).\n. @halilim, experienced the same error here... although I'm not using Zeus (just got here though google).\n. ",
    "przbadu": "Yep adding `require 'rspec/core'` before requiring `spec_helper` in `rails_helper.rb` solved the problem.\n\n`rails_helper.rb`\n\n``` ruby\nrequire 'rspec/core'\nrequire 'spec_helper'\n```\n. Yep adding `require 'rspec/core'` before requiring `spec_helper` in `rails_helper.rb` solved the problem.\n\n`rails_helper.rb`\n\n``` ruby\nrequire 'rspec/core'\nrequire 'spec_helper'\n```\n. ",
    "Gaolz": "I met the same problem, Also adding `require 'rspec/rails` before requring `spec_helper` in `rails_helper.rb` solved the problem.\n\n```\n# rails_helper.rb\n\nrequire \"rspec/rails\"\nrequire \"spec_helper\"\n```\n. I met the same problem, Also adding `require 'rspec/rails` before requring `spec_helper` in `rails_helper.rb` solved the problem.\n\n```\n# rails_helper.rb\n\nrequire \"rspec/rails\"\nrequire \"spec_helper\"\n```\n. ",
    "jawa": "Happy times! Thanks for fixing this :+1: \n. Happy times! Thanks for fixing this :+1: \n. ",
    "nevir": "Thanks :) and enjoy your vacation!\n. Thanks :) and enjoy your vacation!\n. ",
    "schreifels": ":+1: We have this same issue.\n. :+1: We have this same issue.\n. ",
    "code-R": "Hi @latortuga, we can customize rails console or irb by defining a file like ~/.irbrc ..we can add  custom code snipets which will be executed on rails console..for example we can set sql logger like  ActiveRecord::Base.logger = Logger.new(STDOUT) in irbrc and this command will be executed when we startup rails console...but zeus in general loads up our rails environment but it wont check irbrc which is defined.. Hope I have explained properly.. Please let me know if you want more details...This is more like a feature than a defect.\n. @latortuga please have a look at this - http://stackoverflow.com/questions/4774847/rails-console-tips-tricks-and-customizations\n. Hi @latortuga, we can customize rails console or irb by defining a file like ~/.irbrc ..we can add  custom code snipets which will be executed on rails console..for example we can set sql logger like  ActiveRecord::Base.logger = Logger.new(STDOUT) in irbrc and this command will be executed when we startup rails console...but zeus in general loads up our rails environment but it wont check irbrc which is defined.. Hope I have explained properly.. Please let me know if you want more details...This is more like a feature than a defect.\n. @latortuga please have a look at this - http://stackoverflow.com/questions/4774847/rails-console-tips-tricks-and-customizations\n. ",
    "Marko-L": "Sorry I missed to preview to see how the post will look like hence upper and lower cases. Hope that does  not confuse anyone.\n. This can be closed yes I did find the problem in the spec file and sorted it out the same day I created this case. \n. Sorry I missed to preview to see how the post will look like hence upper and lower cases. Hope that does  not confuse anyone.\n. This can be closed yes I did find the problem in the spec file and sorted it out the same day I created this case. \n. ",
    "rcook": "Pushed fixes into PR. Fingers crossed!\n. Pushed fixes into PR. Fingers crossed!\n. ",
    "jetsgit": "@rcook Waiting with baited breath :)\n. Great!\n. zeus rake works fine, still error msg when targeting single file:\n\n```\nzeus test test/controllers/my_controller.rb\n```\n\n...generates error:\n\nzeus-0.15.1/lib/zeus/m.rb:309:in `suites': undefined method`test_suites' for Minitest::Unit::TestCase:Class (NoMethodError)\n\nFor some strange reason,\n\n```\n   zeus test test/controllers/my_controller.rb\n```\n\ndid work fine earlier today!\n. Oh, @latortuga ...guess I jumped the gun, will you publish this soon?\n. @latortuga, that would be great. So is the line-targeted parameter on your TODO list?\n\n```\n  zeus test test/controllers/my_controller.rb -l 28\n```\n\nthat is a GOOD THING!\n\nCheers!\n  jet\n. @latortuga Actually, I can't do that as zeus is broken for Rails 4.1, Minitest 5 :)\n  (Not the current master which has been fixed, but what is published at rubygems.)\n                     Working with zeus rake.\n                     Not Working with zeus  test test/models/my_model.rb\n                     Not Working for rake test test/models/my_model.rb:15\n\n  Does work perfectly with Rails 4.02 and MiniTest 4.7.5\n\nTried to build golang v.1.3, and ended up in recursive build loop.\n\nTried golang  v.1.0.2, but could not find distro for wheezy with header files,\nso I am stuck on being able to build zeus compatible with minitest5.\n\nSo, @latortuga  , you be building and releasing gem soon to rubygems?\nOr any pointers on getting a functional golang?\n. @latortuga Thanks! Yes, works perfect.\n. @rcook Waiting with baited breath :)\n. Great!\n. zeus rake works fine, still error msg when targeting single file:\n\n```\nzeus test test/controllers/my_controller.rb\n```\n\n...generates error:\n\nzeus-0.15.1/lib/zeus/m.rb:309:in `suites': undefined method`test_suites' for Minitest::Unit::TestCase:Class (NoMethodError)\n\nFor some strange reason,\n\n```\n   zeus test test/controllers/my_controller.rb\n```\n\ndid work fine earlier today!\n. Oh, @latortuga ...guess I jumped the gun, will you publish this soon?\n. @latortuga, that would be great. So is the line-targeted parameter on your TODO list?\n\n```\n  zeus test test/controllers/my_controller.rb -l 28\n```\n\nthat is a GOOD THING!\n\nCheers!\n  jet\n. @latortuga Actually, I can't do that as zeus is broken for Rails 4.1, Minitest 5 :)\n  (Not the current master which has been fixed, but what is published at rubygems.)\n                     Working with zeus rake.\n                     Not Working with zeus  test test/models/my_model.rb\n                     Not Working for rake test test/models/my_model.rb:15\n\n  Does work perfectly with Rails 4.02 and MiniTest 4.7.5\n\nTried to build golang v.1.3, and ended up in recursive build loop.\n\nTried golang  v.1.0.2, but could not find distro for wheezy with header files,\nso I am stuck on being able to build zeus compatible with minitest5.\n\nSo, @latortuga  , you be building and releasing gem soon to rubygems?\nOr any pointers on getting a functional golang?\n. @latortuga Thanks! Yes, works perfect.\n. ",
    "marcgg": "For info it seems that the issue was coming from combinaison of using the gem `parallel_tests`, even when this gem was not used (not running the tests).  Removing it from the project fixed the issue, so I guess it might have been patching the zeus gem or something of the sort.\n. For info it seems that the issue was coming from combinaison of using the gem `parallel_tests`, even when this gem was not used (not running the tests).  Removing it from the project fixed the issue, so I guess it might have been patching the zeus gem or something of the sort.\n. ",
    "joelvh": "@exocode you can get it to work with a custom plan, and don't specify the port as an argument to `puma`, but rather pass it in to foreman or set the environment variable.\r\n\r\n```ruby\r\nrequire 'zeus/rails'\r\n\r\nclass ZeusPlan < Zeus::Rails\r\n  def puma_environment\r\n    require 'puma/cli'\r\n  end\r\n\r\n  def puma(argv=ARGV)\r\n    Puma::CLI.new(argv.dup).run\r\n  end\r\nend\r\n\r\nZeus.plan = ZeusPlan.new\r\n```\r\n\r\n```javascript\r\n{\r\n  \"command\": \"ruby -rubygems -r./zeus_plan -eZeus.go\",\r\n\r\n  \"plan\": {\r\n    \"boot\": {\r\n      \"default_bundle\": {\r\n        \"development_environment\": {\r\n          \"server\": [\"s\"],\r\n          \"console\": [\"c\"],\r\n          \"dbconsole\": [],\r\n          \"rake\": []\r\n        },\r\n        \"puma_environment\": {\r\n          \"puma\": []\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nAnd then `zeus puma -C config/puma.rb`\r\n\r\nOr setup a `foreman` `Procfile` with the following:\r\n\r\n```bash\r\nzeus: echo \"Spawining Zeus...\" && zeus start\r\nweb: sleep 2 && zeus puma -C config/puma.rb\r\n```. Zeus has been great, and I saw a note somewhere that we shouldn't prefix the commands with `bundle exec`. This issue seems to stem from not isolating the gems the command can load. Any reason this can't be updated to utilize `bundle exec`?. @exocode you can get it to work with a custom plan, and don't specify the port as an argument to `puma`, but rather pass it in to foreman or set the environment variable.\r\n\r\n```ruby\r\nrequire 'zeus/rails'\r\n\r\nclass ZeusPlan < Zeus::Rails\r\n  def puma_environment\r\n    require 'puma/cli'\r\n  end\r\n\r\n  def puma(argv=ARGV)\r\n    Puma::CLI.new(argv.dup).run\r\n  end\r\nend\r\n\r\nZeus.plan = ZeusPlan.new\r\n```\r\n\r\n```javascript\r\n{\r\n  \"command\": \"ruby -rubygems -r./zeus_plan -eZeus.go\",\r\n\r\n  \"plan\": {\r\n    \"boot\": {\r\n      \"default_bundle\": {\r\n        \"development_environment\": {\r\n          \"server\": [\"s\"],\r\n          \"console\": [\"c\"],\r\n          \"dbconsole\": [],\r\n          \"rake\": []\r\n        },\r\n        \"puma_environment\": {\r\n          \"puma\": []\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nAnd then `zeus puma -C config/puma.rb`\r\n\r\nOr setup a `foreman` `Procfile` with the following:\r\n\r\n```bash\r\nzeus: echo \"Spawining Zeus...\" && zeus start\r\nweb: sleep 2 && zeus puma -C config/puma.rb\r\n```. Zeus has been great, and I saw a note somewhere that we shouldn't prefix the commands with `bundle exec`. This issue seems to stem from not isolating the gems the command can load. Any reason this can't be updated to utilize `bundle exec`?. ",
    "teodor-pripoae": "Hi,\n\nThis is happening for me too. I have similar setup, docker 1.3, fig and rails 4.1.2. My zeus version is 0.15.2.\n\n```\nubuntu@1332c6680a54:/code$ zeus start\nStarting Zeus server v0.15.2\nUnable to accept socket connection.\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus rake\nzeus runner (alias: r)\nzeus console (alias: c)\nzeus server (alias: s)\nzeus generate (alias: g)\nzeus destroy (alias: d)\nzeus dbconsole\nzeus test (alias: rspec, testrb)\nIt looks like Zeus is already running. If not, remove .zeus.sock and try again.\n```\n\nI did a `ls -la` and .zeus.sock is not present.\n. ```\nubuntu@06660d588b61:/code$ go version\ngo version go1.1.2 linux/amd64\nubuntu@06660d588b61:/code$ touch .zeus.sock\nubuntu@06660d588b61:/code$ ls -la | grep .zeus.sock\n-rw-r--r--   1 ubuntu staff     0 Dec  2 09:48 .zeus.sock\nubuntu@06660d588b61:/code$ rm .zeus.sock\nubuntu@06660d588b61:/code$ zeus start\nStarting Zeus server v0.15.2\nUnable to accept socket connection.\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus rake\nzeus runner (alias: r)\nzeus console (alias: c)\nzeus server (alias: s)\nzeus generate (alias: g)\nzeus destroy (alias: d)\nzeus dbconsole\nzeus test (alias: rspec, testrb)\nIt looks like Zeus is already running. If not, remove .zeus.sock and try again.\n```\n\nIs it possible to be a problem if I'm mounting the directory as a docker volume ?\n. My filesystem inside the docker container is like this:\n\n```\nubuntu@06660d588b61:/code$ df -T\nFilesystem     Type   1K-blocks      Used Available Use% Mounted on\nrootfs         rootfs  19049892  16941576   1117592  94% /\nnone           aufs    19049892  16941576   1117592  94% /\ntmpfs          tmpfs    1768960         0   1768960   0% /dev\nshm            tmpfs      65536         0     65536   0% /dev/shm\n/dev/sda1      ext4    19049892  16941576   1117592  94% /etc/resolv.conf\n/dev/sda1      ext4    19049892  16941576   1117592  94% /etc/hostname\n/dev/sda1      ext4    19049892  16941576   1117592  94% /etc/hosts\nnone           vboxsf 233591456 190096064  43495392  82% /code\nnone           vboxsf 233591456 190096064  43495392  82% /code/public\ntmpfs          tmpfs    1768960         0   1768960   0% /proc/kcore\n```\n\nI'm running the project from /code which is a mounted folder from OS X -> boot2docker vm -> docker.\n. I can confirm this is happening becouse /code is vboxsf filesystem type. I ran the container with another volume mounted from boot2docker vm to /newcode which mounted as tmpfs and zeus is working inside it.\n\n```\nubuntu@1ce8c4e86e18:/newcode$ df -T\nFilesystem     Type   1K-blocks      Used Available Use% Mounted on\nrootfs         rootfs  19049892  17904592    154576 100% /\nnone           aufs    19049892  17904592    154576 100% /\ntmpfs          tmpfs    1768960         0   1768960   0% /dev\nshm            tmpfs      65536         0     65536   0% /dev/shm\n/dev/sda1      ext4    19049892  17904592    154576 100% /etc/resolv.conf\n/dev/sda1      ext4    19049892  17904592    154576 100% /etc/hostname\n/dev/sda1      ext4    19049892  17904592    154576 100% /etc/hosts\nnone           vboxsf 233591456 195937652  37653804  84% /code\nnone           vboxsf 233591456 195937652  37653804  84% /code/public\ntmpfs          tmpfs    3184128    216192   2967936   7% /newcode\ntmpfs          tmpfs    1768960         0   1768960   0% /proc/kcore\n```\n\n``` bash\n$ cd /newcode\n$ sudo cp /code/* . -r\n$ sudo chown ubuntu:ubuntu . -R\n$ zeus start\n```\n\nSo the problem is why zeus can't create socket on a vboxfs filesystem. Is there any way I can set the socket location ?\n\nA quick fix be like this:\n- mount another volume linked from boot2docker vm, which will be of type tmpfs\n- start zeus and tell to create socket on the mounted volume\n- from another container linked with the same volume run zeus commands using the socket in the new tmpfs volume\n\nSo, if we can add an argument to zeus command like (--socket=), then I can alias zeus=\"zeus --socket=/tmp/zeus.sock\" and the problem is solved.\n\nLE: Actually I can see that there is a ZEUSSOCK environment variable which tells zeus where to create socket. I just pointed to the mounted volume and it works.\n\nLE2: @andreijs My setup works like this:\n\n``` yml\nweb:\n  build: .\n  ports:\n    - \"3000:3000\"\n  volumes:\n    - .:/code\n    - /var/docker/zeus:/zeus\n  environment:\n    ZEUSSOCK: /zeus/.zeus.sock\n```\n\nThen run zeus using `fig run web zeus start`. And when running commands I start a new console using `fig run web /bin/bash` and then run my commands as usual.\n. Hi,\n\nThis is happening for me too. I have similar setup, docker 1.3, fig and rails 4.1.2. My zeus version is 0.15.2.\n\n```\nubuntu@1332c6680a54:/code$ zeus start\nStarting Zeus server v0.15.2\nUnable to accept socket connection.\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus rake\nzeus runner (alias: r)\nzeus console (alias: c)\nzeus server (alias: s)\nzeus generate (alias: g)\nzeus destroy (alias: d)\nzeus dbconsole\nzeus test (alias: rspec, testrb)\nIt looks like Zeus is already running. If not, remove .zeus.sock and try again.\n```\n\nI did a `ls -la` and .zeus.sock is not present.\n. ```\nubuntu@06660d588b61:/code$ go version\ngo version go1.1.2 linux/amd64\nubuntu@06660d588b61:/code$ touch .zeus.sock\nubuntu@06660d588b61:/code$ ls -la | grep .zeus.sock\n-rw-r--r--   1 ubuntu staff     0 Dec  2 09:48 .zeus.sock\nubuntu@06660d588b61:/code$ rm .zeus.sock\nubuntu@06660d588b61:/code$ zeus start\nStarting Zeus server v0.15.2\nUnable to accept socket connection.\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus rake\nzeus runner (alias: r)\nzeus console (alias: c)\nzeus server (alias: s)\nzeus generate (alias: g)\nzeus destroy (alias: d)\nzeus dbconsole\nzeus test (alias: rspec, testrb)\nIt looks like Zeus is already running. If not, remove .zeus.sock and try again.\n```\n\nIs it possible to be a problem if I'm mounting the directory as a docker volume ?\n. My filesystem inside the docker container is like this:\n\n```\nubuntu@06660d588b61:/code$ df -T\nFilesystem     Type   1K-blocks      Used Available Use% Mounted on\nrootfs         rootfs  19049892  16941576   1117592  94% /\nnone           aufs    19049892  16941576   1117592  94% /\ntmpfs          tmpfs    1768960         0   1768960   0% /dev\nshm            tmpfs      65536         0     65536   0% /dev/shm\n/dev/sda1      ext4    19049892  16941576   1117592  94% /etc/resolv.conf\n/dev/sda1      ext4    19049892  16941576   1117592  94% /etc/hostname\n/dev/sda1      ext4    19049892  16941576   1117592  94% /etc/hosts\nnone           vboxsf 233591456 190096064  43495392  82% /code\nnone           vboxsf 233591456 190096064  43495392  82% /code/public\ntmpfs          tmpfs    1768960         0   1768960   0% /proc/kcore\n```\n\nI'm running the project from /code which is a mounted folder from OS X -> boot2docker vm -> docker.\n. I can confirm this is happening becouse /code is vboxsf filesystem type. I ran the container with another volume mounted from boot2docker vm to /newcode which mounted as tmpfs and zeus is working inside it.\n\n```\nubuntu@1ce8c4e86e18:/newcode$ df -T\nFilesystem     Type   1K-blocks      Used Available Use% Mounted on\nrootfs         rootfs  19049892  17904592    154576 100% /\nnone           aufs    19049892  17904592    154576 100% /\ntmpfs          tmpfs    1768960         0   1768960   0% /dev\nshm            tmpfs      65536         0     65536   0% /dev/shm\n/dev/sda1      ext4    19049892  17904592    154576 100% /etc/resolv.conf\n/dev/sda1      ext4    19049892  17904592    154576 100% /etc/hostname\n/dev/sda1      ext4    19049892  17904592    154576 100% /etc/hosts\nnone           vboxsf 233591456 195937652  37653804  84% /code\nnone           vboxsf 233591456 195937652  37653804  84% /code/public\ntmpfs          tmpfs    3184128    216192   2967936   7% /newcode\ntmpfs          tmpfs    1768960         0   1768960   0% /proc/kcore\n```\n\n``` bash\n$ cd /newcode\n$ sudo cp /code/* . -r\n$ sudo chown ubuntu:ubuntu . -R\n$ zeus start\n```\n\nSo the problem is why zeus can't create socket on a vboxfs filesystem. Is there any way I can set the socket location ?\n\nA quick fix be like this:\n- mount another volume linked from boot2docker vm, which will be of type tmpfs\n- start zeus and tell to create socket on the mounted volume\n- from another container linked with the same volume run zeus commands using the socket in the new tmpfs volume\n\nSo, if we can add an argument to zeus command like (--socket=), then I can alias zeus=\"zeus --socket=/tmp/zeus.sock\" and the problem is solved.\n\nLE: Actually I can see that there is a ZEUSSOCK environment variable which tells zeus where to create socket. I just pointed to the mounted volume and it works.\n\nLE2: @andreijs My setup works like this:\n\n``` yml\nweb:\n  build: .\n  ports:\n    - \"3000:3000\"\n  volumes:\n    - .:/code\n    - /var/docker/zeus:/zeus\n  environment:\n    ZEUSSOCK: /zeus/.zeus.sock\n```\n\nThen run zeus using `fig run web zeus start`. And when running commands I start a new console using `fig run web /bin/bash` and then run my commands as usual.\n. ",
    "andreijs": "What I also tried was setting the .zeus.sock path in the ENV var they recommended, still no success I think it might be a socket issue something that docker is doing inside the container and you are not able to bind to that sock\n. I do think the issue should be reopened \n. What I also tried was setting the .zeus.sock path in the ENV var they recommended, still no success I think it might be a socket issue something that docker is doing inside the container and you are not able to bind to that sock\n. I do think the issue should be reopened \n. ",
    "zedtux": "+1\n. +1\n. ",
    "kgrz": "Thanks for considering this. I'm not really familiar with Go, but I can learn :)\n. https://github.com/burke/zeus/issues/446#issuecomment-208882129 is kind of what I had in mind when I opened this issue.\n\n> This might help with debugging:\n> zeus --log ZEUS.LOG start\n> cat ZEUS.LOG\n. @aesnyder This is a year late, but is this still a problem? can you provide a simpler reproduction setup?\n. Can you post the Gemfile and Gemfile.lock for the rails project?\n. @matiasanaya Yes, should be fixed with that PR. Does this still happen with zeus 0.15.5?\n. @dalizard One way to do this is to use tools like `strace` (Linux) and `dtruss`(OSX specific). On a mac, you'd run `sudo dtruss -n zeus` in a terminal window, and `zeus start` in another window. \n. Intended to somewhat mitigate issues like #237 #489 \n. Any pointers on how can this be tested are appreciated. I couldn't really figure that part out. (assuming this even works in general)\n. This is one of the failure situations:\n\nA project's Gemfile specifies method_source `0.8.2`; When zeus gets installed using `gem install zeus`, the `method_source` gem version in zeus' `Gemfile.lock` is `0.8.2`. I have just the version`0.8` in my global gem list for that ruby version. In this case, the `exit status 1` issue crops up. But even this change doesn't seem to fix it, although I specifically remember it being solved for a particular setup when I made this commit :/\n\nI tried to add some print statements inside the `Bundler.setup` method inside the bundle gem in my ruby gem list and I can see that the things mentioned above are happening; the correct Gemfile is being picked up (the project one, not the zeus' own Gemfile) but I no clue why method source `0.8` is getting activated. This happens even if I remove all the calls to `require 'method_source'` from all zeus' files.\n\n```\nRuby version: 2.1.5\nBundler version: 1.10.6\nZeus version: 0.15.4\n```\n. _Update_\n\n**TL;DR**\n\nEven if `bundler/setup` is used, there is a high chance that the loading of gems will fail because of the `runtime_dependency` on `method_source`. The other often seen problems with `rake` and `json` can potentially be fixed by using `require 'bundler/setup'`.\n\n---\n\n**The longer version**\n\nThe two things I had to do to _really_ make it work:\n1. Remove dependency on `method_source`. The rubygem's `gemspec` has a `runtime_dependency` on `method_source >= 0.6.7`.\n2. Change the file requires like `require 'zeus/m'` to use `File.expand_path` just to preserve relative path loading functionality. Here's a patch for that: https://gist.github.com/5ce3247a1b7291e1d612 I will open a separate PR if this looks okay.\n\nTo test, this is what I did:\n- The project I use has `rake` `v. 10.4.2`, `method_source` `v. 0.8.2`, `json` `v 1.8.2` in it's Gemfile. (These are usually the gems that result in the breakage.\n- I removed these version of the gems from my global gem list and installed one version previous gems. That is, `rake` `v.10.1.0`, `method_source` `v. 0.8`. \n- I then ran `zeus start` in the project repo, and it worked.\n\nNow, removing the `method_source` dependency is probably not going to go well, so the workaround needs to be figured out. (Since I had `method_source` getting included thanks to `pry` in my Gemfile, the tests ran fine)\n\nTo figure out the issue, this is what I did:\n\nModified `bundler` code (`bundler/runtime.rb`) to just log some of the functions that are there inside the `def setup` method which is what gets called when we include `require 'bundler/setup'`. At [this](https://github.com/bundler/bundler/blob/master/lib/bundler/runtime.rb#L17) stage, if I check the output of `Bundler.rubygems.loaded_specs('method_source').version`, the output is `0.8` instead of `0.8.2` which should've been loaded from Gemfile. However, bundler won't do this, and will throw an error. So I think since zeus has a runtime dependency on `method_source`, it will load the library that exists in the global gem directory for that ruby, and this makes it fail when `bundler/setup` is called.\n. @latortuga Thanks for checking this out!\n. Just a hunch, but can you check what YAML versions zeus and the rails app are loading? You can check the version used by Rails by running `rails console` (without zeus) and checking `puts YAML::VERSION`. The global ruby version of YAML can be obtained by checking `gem list psych` using the same ruby version that was used to install/run zeus.\n. \ud83c\udf89\n. This should be fixed by https://github.com/burke/zeus/pull/530/files\n. @sathibabu-nyros Do you mean you're trying to run zeus in production environment?\n. I think the reason you don't see an error immediately is that zeus simply starts a daemon. It doesn't run any command after running the reloader process. In the case of `rails s`, you are actually calling the \"start the server\" command. The equivalent procedure in case of zeus would be a 2-step process: \"start zeus; run zeus server\". You would've seen the same error if you had run `zeus server` or any other command.\n\nSo the error messages in this case are accurate, just that they are not explicit with zeus daemon process.\n. Oops :( My bad in assuming that bundler is a prerequisite. I didn't think of a case where a rails app would be started without bundler. If this issue can be solved by reverting those commits, I'm all for it \ud83d\udc4d And as you mentioned, that change can go into the next major version once it's planned\n\nI'm unable to recall the `Gem` api call that would load a particular gem without our code calling `gem 'name'`. I can check that tomorrow.\n. LGTM \ud83d\udc4d other than those two minor comments\n. > The current code searches for the file in the $LOAD_PATH, which contains a list of directories so no Ruby filename will match.\n\nhashtag facepalm\n\nLGTM \ud83d\udc4d \n. Thanks for considering this. I'm not really familiar with Go, but I can learn :)\n. https://github.com/burke/zeus/issues/446#issuecomment-208882129 is kind of what I had in mind when I opened this issue.\n\n> This might help with debugging:\n> zeus --log ZEUS.LOG start\n> cat ZEUS.LOG\n. @aesnyder This is a year late, but is this still a problem? can you provide a simpler reproduction setup?\n. Can you post the Gemfile and Gemfile.lock for the rails project?\n. @matiasanaya Yes, should be fixed with that PR. Does this still happen with zeus 0.15.5?\n. @dalizard One way to do this is to use tools like `strace` (Linux) and `dtruss`(OSX specific). On a mac, you'd run `sudo dtruss -n zeus` in a terminal window, and `zeus start` in another window. \n. Intended to somewhat mitigate issues like #237 #489 \n. Any pointers on how can this be tested are appreciated. I couldn't really figure that part out. (assuming this even works in general)\n. This is one of the failure situations:\n\nA project's Gemfile specifies method_source `0.8.2`; When zeus gets installed using `gem install zeus`, the `method_source` gem version in zeus' `Gemfile.lock` is `0.8.2`. I have just the version`0.8` in my global gem list for that ruby version. In this case, the `exit status 1` issue crops up. But even this change doesn't seem to fix it, although I specifically remember it being solved for a particular setup when I made this commit :/\n\nI tried to add some print statements inside the `Bundler.setup` method inside the bundle gem in my ruby gem list and I can see that the things mentioned above are happening; the correct Gemfile is being picked up (the project one, not the zeus' own Gemfile) but I no clue why method source `0.8` is getting activated. This happens even if I remove all the calls to `require 'method_source'` from all zeus' files.\n\n```\nRuby version: 2.1.5\nBundler version: 1.10.6\nZeus version: 0.15.4\n```\n. _Update_\n\n**TL;DR**\n\nEven if `bundler/setup` is used, there is a high chance that the loading of gems will fail because of the `runtime_dependency` on `method_source`. The other often seen problems with `rake` and `json` can potentially be fixed by using `require 'bundler/setup'`.\n\n---\n\n**The longer version**\n\nThe two things I had to do to _really_ make it work:\n1. Remove dependency on `method_source`. The rubygem's `gemspec` has a `runtime_dependency` on `method_source >= 0.6.7`.\n2. Change the file requires like `require 'zeus/m'` to use `File.expand_path` just to preserve relative path loading functionality. Here's a patch for that: https://gist.github.com/5ce3247a1b7291e1d612 I will open a separate PR if this looks okay.\n\nTo test, this is what I did:\n- The project I use has `rake` `v. 10.4.2`, `method_source` `v. 0.8.2`, `json` `v 1.8.2` in it's Gemfile. (These are usually the gems that result in the breakage.\n- I removed these version of the gems from my global gem list and installed one version previous gems. That is, `rake` `v.10.1.0`, `method_source` `v. 0.8`. \n- I then ran `zeus start` in the project repo, and it worked.\n\nNow, removing the `method_source` dependency is probably not going to go well, so the workaround needs to be figured out. (Since I had `method_source` getting included thanks to `pry` in my Gemfile, the tests ran fine)\n\nTo figure out the issue, this is what I did:\n\nModified `bundler` code (`bundler/runtime.rb`) to just log some of the functions that are there inside the `def setup` method which is what gets called when we include `require 'bundler/setup'`. At [this](https://github.com/bundler/bundler/blob/master/lib/bundler/runtime.rb#L17) stage, if I check the output of `Bundler.rubygems.loaded_specs('method_source').version`, the output is `0.8` instead of `0.8.2` which should've been loaded from Gemfile. However, bundler won't do this, and will throw an error. So I think since zeus has a runtime dependency on `method_source`, it will load the library that exists in the global gem directory for that ruby, and this makes it fail when `bundler/setup` is called.\n. @latortuga Thanks for checking this out!\n. Just a hunch, but can you check what YAML versions zeus and the rails app are loading? You can check the version used by Rails by running `rails console` (without zeus) and checking `puts YAML::VERSION`. The global ruby version of YAML can be obtained by checking `gem list psych` using the same ruby version that was used to install/run zeus.\n. \ud83c\udf89\n. This should be fixed by https://github.com/burke/zeus/pull/530/files\n. @sathibabu-nyros Do you mean you're trying to run zeus in production environment?\n. I think the reason you don't see an error immediately is that zeus simply starts a daemon. It doesn't run any command after running the reloader process. In the case of `rails s`, you are actually calling the \"start the server\" command. The equivalent procedure in case of zeus would be a 2-step process: \"start zeus; run zeus server\". You would've seen the same error if you had run `zeus server` or any other command.\n\nSo the error messages in this case are accurate, just that they are not explicit with zeus daemon process.\n. Oops :( My bad in assuming that bundler is a prerequisite. I didn't think of a case where a rails app would be started without bundler. If this issue can be solved by reverting those commits, I'm all for it \ud83d\udc4d And as you mentioned, that change can go into the next major version once it's planned\n\nI'm unable to recall the `Gem` api call that would load a particular gem without our code calling `gem 'name'`. I can check that tomorrow.\n. LGTM \ud83d\udc4d other than those two minor comments\n. > The current code searches for the file in the $LOAD_PATH, which contains a list of directories so no Ruby filename will match.\n\nhashtag facepalm\n\nLGTM \ud83d\udc4d \n. ",
    "lifeiscontent": "Sorry, older version of zeus.\n. Sorry, older version of zeus.\n. ",
    "e2": "This helps: http://stackoverflow.com/a/15729460/1190046\n. I migrate just the test database if I can - and only migrate the dev database if I need to test the app manually. \n\nI think that's how I avoid dropping the test database (since I migrate it manually after adding migrations, it's always up to date - and I migrate the dev only if the test db gets properly migrated, so I'm also testing the migrations themselves).\n\nI also have a custom DatabaseCleaner setup for Capybara - though I never create db objects directly in capybara specs (always through the browser, because Capybara uses a separate db transaction).\n\nI also run tests using the `:zeus` guard instead of `:rspec` - not ideal, but usually good enough for my needs.\n\nSummary: the connection shouldn't matter, as long as transactions or truncation are properly set up (DatabaseCleaner) - dropping the test db makes no sense, since it never should have any \"stray\" data left (unless you change seed data, etc.).\n\nHope that helps people work this out.\n. @latortuga - see links above (likely depends on Readline version).\n. Fixed in above PR.\n\nHow to reproduce easily:\n\n``` bash\n./inotify-wrapper < /etc/fstab\n```\n\nResult: infinite tight loop\n\nThe fix: checking for EOF and exiting.\n. Travis failed on 1.9.3 because of:\n\n```\nGem::InstallError: mustache requires Ruby version ~> 2.0.\nInstalling hpricot 0.8.6\nAn error occurred while installing mustache (1.0.0), and Bundler cannot\n```\n. Fixed here: https://github.com/burke/zeus/pull/503\n. @latortuga, @burke, @antifuchs, @turadg  - could you release a gem with this patch? \n\nIt's just that I have to manually rebuild the gem and install it manually in every gemset I use (because the project layout doesn't let Bundler use a `github`/branch source, even if I patched the Makefiles).\n. Thank you sooo much! :smiley: \n. This helps: http://stackoverflow.com/a/15729460/1190046\n. I migrate just the test database if I can - and only migrate the dev database if I need to test the app manually. \n\nI think that's how I avoid dropping the test database (since I migrate it manually after adding migrations, it's always up to date - and I migrate the dev only if the test db gets properly migrated, so I'm also testing the migrations themselves).\n\nI also have a custom DatabaseCleaner setup for Capybara - though I never create db objects directly in capybara specs (always through the browser, because Capybara uses a separate db transaction).\n\nI also run tests using the `:zeus` guard instead of `:rspec` - not ideal, but usually good enough for my needs.\n\nSummary: the connection shouldn't matter, as long as transactions or truncation are properly set up (DatabaseCleaner) - dropping the test db makes no sense, since it never should have any \"stray\" data left (unless you change seed data, etc.).\n\nHope that helps people work this out.\n. @latortuga - see links above (likely depends on Readline version).\n. Fixed in above PR.\n\nHow to reproduce easily:\n\n``` bash\n./inotify-wrapper < /etc/fstab\n```\n\nResult: infinite tight loop\n\nThe fix: checking for EOF and exiting.\n. Travis failed on 1.9.3 because of:\n\n```\nGem::InstallError: mustache requires Ruby version ~> 2.0.\nInstalling hpricot 0.8.6\nAn error occurred while installing mustache (1.0.0), and Bundler cannot\n```\n. Fixed here: https://github.com/burke/zeus/pull/503\n. @latortuga, @burke, @antifuchs, @turadg  - could you release a gem with this patch? \n\nIt's just that I have to manually rebuild the gem and install it manually in every gemset I use (because the project layout doesn't let Bundler use a `github`/branch source, even if I patched the Makefiles).\n. Thank you sooo much! :smiley: \n. ",
    "kenbier": ":+1: saw this as well. removing the sock file fixed the issue. \n. :+1: saw this as well. removing the sock file fixed the issue. \n. ",
    "brentdodell": ":+1: Any idea the cause of this? Lately it has been happening quite frequently for me, and when it does, my buffer in iTerm gets messed up. I can't see anything I type without quitting and reopening iTerm.\n. :+1: Any idea the cause of this? Lately it has been happening quite frequently for me, and when it does, my buffer in iTerm gets messed up. I can't see anything I type without quitting and reopening iTerm.\n. ",
    "saihgal": "It happens intermittently for me too. And the root cause seems to be when mysql goes down behind the scenes. After I execute `mysql.server stop; mysql.server start` and remove `.zeus.sock` file, things fall back to normal. . It happens intermittently for me too. And the root cause seems to be when mysql goes down behind the scenes. After I execute `mysql.server stop; mysql.server start` and remove `.zeus.sock` file, things fall back to normal. . ",
    "poc7667": "sorry, it seems the zeus version in my Gemfile and the rbenv's default  zeus version are mismatch. pleas\ne help me close this issue thanks\n. +1. sorry, it seems the zeus version in my Gemfile and the rbenv's default  zeus version are mismatch. pleas\ne help me close this issue thanks\n. +1. ",
    "ldrbrandon": "I'm actually getting this one now. I simply gem installed zeus and everything worked fine. but everytime I run zeus start, it gets the signal: killed error. This is the first line of the error:\n\n```\n.rvm/gems/ruby-1.9.3-p551/gems/bundler-1.11.2/lib/bundler/setup.rb:15:in `exit': exit (SystemExit)\n```\n\nI don't have it in my gemfile or anything, I just use it locally to test faster\n. I'm actually getting this one now. I simply gem installed zeus and everything worked fine. but everytime I run zeus start, it gets the signal: killed error. This is the first line of the error:\n\n```\n.rvm/gems/ruby-1.9.3-p551/gems/bundler-1.11.2/lib/bundler/setup.rb:15:in `exit': exit (SystemExit)\n```\n\nI don't have it in my gemfile or anything, I just use it locally to test faster\n. ",
    "adeeb1": "I just had this issue, and it was because I had to install pending gems in my bundle. Make sure you can run `rails s` successfully first.\n. I just had this issue, and it was because I had to install pending gems in my bundle. Make sure you can run `rails s` successfully first.\n. ",
    "yjaspar": "Hi, I'm actually getting the same error but I don't have any problem running my app in local.\nActually some of my coworkers use zeus on the same app, but for some reason I get signal killed at all time.\n\nPlease let me know if you need any information.\nThank you!\n. Hi, I'm actually getting the same error but I don't have any problem running my app in local.\nActually some of my coworkers use zeus on the same app, but for some reason I get signal killed at all time.\n\nPlease let me know if you need any information.\nThank you!\n. ",
    "SergeyBukhman": "Hey, thanks for answering. I searched through and through and couldn't find RAILS_ENV set in any of those file (or others). I found some settings for rspec, but that's unrelated. Where else could it be? Besides, why do you think rake tasks work fine but generators do not?\n. This only happens when I use the RubyMine built in generate command Tools > Run Rails Generator. Weirdly enough, when I manually type the command `zeus generate migration foo` in terminal it works fine. Which leads me to think this might not be a zeus issue.\n\nStill any clue as to why this happens when using the RubyMine shortcut? It's pretty convenient (Cmd+Alt+G).\n. Hey, thanks for answering. I searched through and through and couldn't find RAILS_ENV set in any of those file (or others). I found some settings for rspec, but that's unrelated. Where else could it be? Besides, why do you think rake tasks work fine but generators do not?\n. This only happens when I use the RubyMine built in generate command Tools > Run Rails Generator. Weirdly enough, when I manually type the command `zeus generate migration foo` in terminal it works fine. Which leads me to think this might not be a zeus issue.\n\nStill any clue as to why this happens when using the RubyMine shortcut? It's pretty convenient (Cmd+Alt+G).\n. ",
    "prakashmurthy": "Thanks @latortuga for responding. I will try to debug further later on. Since I am able to run the full suite with `rake test` and specific tests with `zeus test test/...`, this is not a blocking issue for me right now. \n. Thanks @latortuga for responding. I will try to debug further later on. Since I am able to run the full suite with `rake test` and specific tests with `zeus test test/...`, this is not a blocking issue for me right now. \n. ",
    "tuxayo": "`killall zeus` ?\n. Indeed, not as simple as I thought.\n\nHow do you launch zeus? If it's by using `zeus start` then doing ctrl-c in the terminal will stop it.\n. `killall zeus` ?\n. Indeed, not as simple as I thought.\n\nHow do you launch zeus? If it's by using `zeus start` then doing ctrl-c in the terminal will stop it.\n. ",
    "russelldavis": "Thanks, if you're up for it, I'd be more than happy to test out an RC build.\n. @metcalf done (I've been running into issues building zeus locally, perhaps we can pair on that quickly tomorrow)\n. woo \ud83d\udc4d \n. \ud83d\udc4d \n. \ud83d\udc4d \n. lg!\n. Looks like CI is not happy, otherwise \ud83d\udc4d \n. \ud83d\udc4d \n. Thanks, if you're up for it, I'd be more than happy to test out an RC build.\n. @metcalf done (I've been running into issues building zeus locally, perhaps we can pair on that quickly tomorrow)\n. woo \ud83d\udc4d \n. \ud83d\udc4d \n. \ud83d\udc4d \n. lg!\n. Looks like CI is not happy, otherwise \ud83d\udc4d \n. \ud83d\udc4d \n. ",
    "adibsaad": "If i put my simplecov init in the spec_helper.rb, no files are picked up.\n. If i put my simplecov init in the spec_helper.rb, no files are picked up.\n. ",
    "krisleech": "or `require_relative 'routes/admin'`\n. or `require_relative 'routes/admin'`\n. ",
    "dominch": "I don't need monitoring, rather something to preload ruby and rails. Loading ruby every minute will dump memory of VM :( \nZeus works here with redmine, except that message after some time. \nAnything else like zeus that can be used in production? \n. Also Spring is not designed to run on production, but both zeus and spring are top results in google when You looking for rails preloader. \nEventually I found ruby cron-like solution that is running background process and keeps in memory whatever it needs, I needed to add code from rake to it but now it's working. \nThanks for Your support :) \n. I don't need monitoring, rather something to preload ruby and rails. Loading ruby every minute will dump memory of VM :( \nZeus works here with redmine, except that message after some time. \nAnything else like zeus that can be used in production? \n. Also Spring is not designed to run on production, but both zeus and spring are top results in google when You looking for rails preloader. \nEventually I found ruby cron-like solution that is running background process and keeps in memory whatever it needs, I needed to add code from rake to it but now it's working. \nThanks for Your support :) \n. ",
    "aesnyder": ":/ not sure... I'm not sure which app I was even trying to use this with. I'll let you know if I come across it again, feel free to close.\n. :/ not sure... I'm not sure which app I was even trying to use this with. I'll let you know if I come across it again, feel free to close.\n. ",
    "matiasanaya": "```\n# Gemfile\nsource 'https://rubygems.org'\n\n\n# Bundle edge Rails instead: gem 'rails', github: 'rails/rails'\ngem 'rails', '4.2.4'\n# Use sqlite3 as the database for Active Record\ngem 'sqlite3'\n# Use SCSS for stylesheets\ngem 'sass-rails', '~> 5.0'\n# Use Uglifier as compressor for JavaScript assets\ngem 'uglifier', '>= 1.3.0'\n# Use CoffeeScript for .coffee assets and views\ngem 'coffee-rails', '~> 4.1.0'\n# See https://github.com/rails/execjs#readme for more supported runtimes\n# gem 'therubyracer', platforms: :ruby\n\n# Use jquery as the JavaScript library\ngem 'jquery-rails'\n# Turbolinks makes following links in your web application faster. Read more: https://github.com/rails/turbolinks\ngem 'turbolinks'\n# Build JSON APIs with ease. Read more: https://github.com/rails/jbuilder\ngem 'jbuilder', '~> 2.0'\n# bundle exec rake doc:rails generates the API under doc/api.\ngem 'sdoc', '~> 0.4.0', group: :doc\n\n# Use ActiveModel has_secure_password\n# gem 'bcrypt', '~> 3.1.7'\n\n# Use Unicorn as the app server\n# gem 'unicorn'\n\n# Use Capistrano for deployment\n# gem 'capistrano-rails', group: :development\n\ngroup :development, :test do\n  # Call 'byebug' anywhere in the code to stop execution and get a debugger console\n  gem 'byebug'\nend\n\ngroup :development do\n  # Access an IRB console on exception pages or by using <%= console %> in views\n  gem 'web-console', '~> 2.0'\n\n  # Spring speeds up development by keeping your application running in the background. Read more: https://github.com/rails/spring\n  gem 'spring'\nend\n```\n\n```\n# Gemfile.lock\nGEM\n  remote: https://rubygems.org/\n  specs:\n    actionmailer (4.2.4)\n      actionpack (= 4.2.4)\n      actionview (= 4.2.4)\n      activejob (= 4.2.4)\n      mail (~> 2.5, >= 2.5.4)\n      rails-dom-testing (~> 1.0, >= 1.0.5)\n    actionpack (4.2.4)\n      actionview (= 4.2.4)\n      activesupport (= 4.2.4)\n      rack (~> 1.6)\n      rack-test (~> 0.6.2)\n      rails-dom-testing (~> 1.0, >= 1.0.5)\n      rails-html-sanitizer (~> 1.0, >= 1.0.2)\n    actionview (4.2.4)\n      activesupport (= 4.2.4)\n      builder (~> 3.1)\n      erubis (~> 2.7.0)\n      rails-dom-testing (~> 1.0, >= 1.0.5)\n      rails-html-sanitizer (~> 1.0, >= 1.0.2)\n    activejob (4.2.4)\n      activesupport (= 4.2.4)\n      globalid (>= 0.3.0)\n    activemodel (4.2.4)\n      activesupport (= 4.2.4)\n      builder (~> 3.1)\n    activerecord (4.2.4)\n      activemodel (= 4.2.4)\n      activesupport (= 4.2.4)\n      arel (~> 6.0)\n    activesupport (4.2.4)\n      i18n (~> 0.7)\n      json (~> 1.7, >= 1.7.7)\n      minitest (~> 5.1)\n      thread_safe (~> 0.3, >= 0.3.4)\n      tzinfo (~> 1.1)\n    arel (6.0.3)\n    binding_of_caller (0.7.2)\n      debug_inspector (>= 0.0.1)\n    builder (3.2.2)\n    byebug (6.0.2)\n    coffee-rails (4.1.0)\n      coffee-script (>= 2.2.0)\n      railties (>= 4.0.0, < 5.0)\n    coffee-script (2.4.1)\n      coffee-script-source\n      execjs\n    coffee-script-source (1.9.1.1)\n    debug_inspector (0.0.2)\n    erubis (2.7.0)\n    execjs (2.6.0)\n    globalid (0.3.6)\n      activesupport (>= 4.1.0)\n    i18n (0.7.0)\n    jbuilder (2.3.2)\n      activesupport (>= 3.0.0, < 5)\n      multi_json (~> 1.2)\n    jquery-rails (4.0.5)\n      rails-dom-testing (~> 1.0)\n      railties (>= 4.2.0)\n      thor (>= 0.14, < 2.0)\n    json (1.8.3)\n    loofah (2.0.3)\n      nokogiri (>= 1.5.9)\n    mail (2.6.3)\n      mime-types (>= 1.16, < 3)\n    mime-types (2.6.2)\n    mini_portile (0.6.2)\n    minitest (5.8.2)\n    multi_json (1.11.2)\n    nokogiri (1.6.6.2)\n      mini_portile (~> 0.6.0)\n    rack (1.6.4)\n    rack-test (0.6.3)\n      rack (>= 1.0)\n    rails (4.2.4)\n      actionmailer (= 4.2.4)\n      actionpack (= 4.2.4)\n      actionview (= 4.2.4)\n      activejob (= 4.2.4)\n      activemodel (= 4.2.4)\n      activerecord (= 4.2.4)\n      activesupport (= 4.2.4)\n      bundler (>= 1.3.0, < 2.0)\n      railties (= 4.2.4)\n      sprockets-rails\n    rails-deprecated_sanitizer (1.0.3)\n      activesupport (>= 4.2.0.alpha)\n    rails-dom-testing (1.0.7)\n      activesupport (>= 4.2.0.beta, < 5.0)\n      nokogiri (~> 1.6.0)\n      rails-deprecated_sanitizer (>= 1.0.1)\n    rails-html-sanitizer (1.0.2)\n      loofah (~> 2.0)\n    railties (4.2.4)\n      actionpack (= 4.2.4)\n      activesupport (= 4.2.4)\n      rake (>= 0.8.7)\n      thor (>= 0.18.1, < 2.0)\n    rake (10.4.2)\n    rdoc (4.2.0)\n    sass (3.4.19)\n    sass-rails (5.0.4)\n      railties (>= 4.0.0, < 5.0)\n      sass (~> 3.1)\n      sprockets (>= 2.8, < 4.0)\n      sprockets-rails (>= 2.0, < 4.0)\n      tilt (>= 1.1, < 3)\n    sdoc (0.4.1)\n      json (~> 1.7, >= 1.7.7)\n      rdoc (~> 4.0)\n    spring (1.4.0)\n    sprockets (3.4.0)\n      rack (> 1, < 3)\n    sprockets-rails (2.3.3)\n      actionpack (>= 3.0)\n      activesupport (>= 3.0)\n      sprockets (>= 2.8, < 4.0)\n    sqlite3 (1.3.11)\n    thor (0.19.1)\n    thread_safe (0.3.5)\n    tilt (2.0.1)\n    turbolinks (2.5.3)\n      coffee-rails\n    tzinfo (1.2.2)\n      thread_safe (~> 0.1)\n    uglifier (2.7.2)\n      execjs (>= 0.3.0)\n      json (>= 1.8.0)\n    web-console (2.2.1)\n      activemodel (>= 4.0)\n      binding_of_caller (>= 0.7.2)\n      railties (>= 4.0)\n      sprockets-rails (>= 2.0, < 4.0)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  byebug\n  coffee-rails (~> 4.1.0)\n  jbuilder (~> 2.0)\n  jquery-rails\n  rails (= 4.2.4)\n  sass-rails (~> 5.0)\n  sdoc (~> 0.4.0)\n  spring\n  sqlite3\n  turbolinks\n  uglifier (>= 1.3.0)\n  web-console (~> 2.0)\n\nBUNDLED WITH\n   1.10.6\n```\n. Gemfile and Gemfile.lock were created by running `rails new new_app`\n. Error:\n\n```\n2015/11/02 13:44:30.047485 [/Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:184] boot/(no PID) in unbooted state\n2015/11/02 13:44:30.048367 [/Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:372] boot/(no PID) running the root command now\n2015/11/02 13:44:30.092866 [/Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:383] boot/(no PID) root process exited with an error before it could boot: exit status 1; output was: /Users/matias.anaya/.rbenv/versions/2.2.2/lib/ruby/site_ruby/2.2.0/rubygems/dependency.rb:315:in `to_specs': Could not find 'json' (= 1.8.3) - did find: [json-1.8.1] (Gem::LoadError)\n```\n\nI have `bundle config --global path vendor/bundle` set which might be causing this.\n. This might duplicate [#237](https://github.com/burke/zeus/issues/237) which can be resolved by [#530](https://github.com/burke/zeus/pull/530)?\n. ```\n# Gemfile\nsource 'https://rubygems.org'\n\n\n# Bundle edge Rails instead: gem 'rails', github: 'rails/rails'\ngem 'rails', '4.2.4'\n# Use sqlite3 as the database for Active Record\ngem 'sqlite3'\n# Use SCSS for stylesheets\ngem 'sass-rails', '~> 5.0'\n# Use Uglifier as compressor for JavaScript assets\ngem 'uglifier', '>= 1.3.0'\n# Use CoffeeScript for .coffee assets and views\ngem 'coffee-rails', '~> 4.1.0'\n# See https://github.com/rails/execjs#readme for more supported runtimes\n# gem 'therubyracer', platforms: :ruby\n\n# Use jquery as the JavaScript library\ngem 'jquery-rails'\n# Turbolinks makes following links in your web application faster. Read more: https://github.com/rails/turbolinks\ngem 'turbolinks'\n# Build JSON APIs with ease. Read more: https://github.com/rails/jbuilder\ngem 'jbuilder', '~> 2.0'\n# bundle exec rake doc:rails generates the API under doc/api.\ngem 'sdoc', '~> 0.4.0', group: :doc\n\n# Use ActiveModel has_secure_password\n# gem 'bcrypt', '~> 3.1.7'\n\n# Use Unicorn as the app server\n# gem 'unicorn'\n\n# Use Capistrano for deployment\n# gem 'capistrano-rails', group: :development\n\ngroup :development, :test do\n  # Call 'byebug' anywhere in the code to stop execution and get a debugger console\n  gem 'byebug'\nend\n\ngroup :development do\n  # Access an IRB console on exception pages or by using <%= console %> in views\n  gem 'web-console', '~> 2.0'\n\n  # Spring speeds up development by keeping your application running in the background. Read more: https://github.com/rails/spring\n  gem 'spring'\nend\n```\n\n```\n# Gemfile.lock\nGEM\n  remote: https://rubygems.org/\n  specs:\n    actionmailer (4.2.4)\n      actionpack (= 4.2.4)\n      actionview (= 4.2.4)\n      activejob (= 4.2.4)\n      mail (~> 2.5, >= 2.5.4)\n      rails-dom-testing (~> 1.0, >= 1.0.5)\n    actionpack (4.2.4)\n      actionview (= 4.2.4)\n      activesupport (= 4.2.4)\n      rack (~> 1.6)\n      rack-test (~> 0.6.2)\n      rails-dom-testing (~> 1.0, >= 1.0.5)\n      rails-html-sanitizer (~> 1.0, >= 1.0.2)\n    actionview (4.2.4)\n      activesupport (= 4.2.4)\n      builder (~> 3.1)\n      erubis (~> 2.7.0)\n      rails-dom-testing (~> 1.0, >= 1.0.5)\n      rails-html-sanitizer (~> 1.0, >= 1.0.2)\n    activejob (4.2.4)\n      activesupport (= 4.2.4)\n      globalid (>= 0.3.0)\n    activemodel (4.2.4)\n      activesupport (= 4.2.4)\n      builder (~> 3.1)\n    activerecord (4.2.4)\n      activemodel (= 4.2.4)\n      activesupport (= 4.2.4)\n      arel (~> 6.0)\n    activesupport (4.2.4)\n      i18n (~> 0.7)\n      json (~> 1.7, >= 1.7.7)\n      minitest (~> 5.1)\n      thread_safe (~> 0.3, >= 0.3.4)\n      tzinfo (~> 1.1)\n    arel (6.0.3)\n    binding_of_caller (0.7.2)\n      debug_inspector (>= 0.0.1)\n    builder (3.2.2)\n    byebug (6.0.2)\n    coffee-rails (4.1.0)\n      coffee-script (>= 2.2.0)\n      railties (>= 4.0.0, < 5.0)\n    coffee-script (2.4.1)\n      coffee-script-source\n      execjs\n    coffee-script-source (1.9.1.1)\n    debug_inspector (0.0.2)\n    erubis (2.7.0)\n    execjs (2.6.0)\n    globalid (0.3.6)\n      activesupport (>= 4.1.0)\n    i18n (0.7.0)\n    jbuilder (2.3.2)\n      activesupport (>= 3.0.0, < 5)\n      multi_json (~> 1.2)\n    jquery-rails (4.0.5)\n      rails-dom-testing (~> 1.0)\n      railties (>= 4.2.0)\n      thor (>= 0.14, < 2.0)\n    json (1.8.3)\n    loofah (2.0.3)\n      nokogiri (>= 1.5.9)\n    mail (2.6.3)\n      mime-types (>= 1.16, < 3)\n    mime-types (2.6.2)\n    mini_portile (0.6.2)\n    minitest (5.8.2)\n    multi_json (1.11.2)\n    nokogiri (1.6.6.2)\n      mini_portile (~> 0.6.0)\n    rack (1.6.4)\n    rack-test (0.6.3)\n      rack (>= 1.0)\n    rails (4.2.4)\n      actionmailer (= 4.2.4)\n      actionpack (= 4.2.4)\n      actionview (= 4.2.4)\n      activejob (= 4.2.4)\n      activemodel (= 4.2.4)\n      activerecord (= 4.2.4)\n      activesupport (= 4.2.4)\n      bundler (>= 1.3.0, < 2.0)\n      railties (= 4.2.4)\n      sprockets-rails\n    rails-deprecated_sanitizer (1.0.3)\n      activesupport (>= 4.2.0.alpha)\n    rails-dom-testing (1.0.7)\n      activesupport (>= 4.2.0.beta, < 5.0)\n      nokogiri (~> 1.6.0)\n      rails-deprecated_sanitizer (>= 1.0.1)\n    rails-html-sanitizer (1.0.2)\n      loofah (~> 2.0)\n    railties (4.2.4)\n      actionpack (= 4.2.4)\n      activesupport (= 4.2.4)\n      rake (>= 0.8.7)\n      thor (>= 0.18.1, < 2.0)\n    rake (10.4.2)\n    rdoc (4.2.0)\n    sass (3.4.19)\n    sass-rails (5.0.4)\n      railties (>= 4.0.0, < 5.0)\n      sass (~> 3.1)\n      sprockets (>= 2.8, < 4.0)\n      sprockets-rails (>= 2.0, < 4.0)\n      tilt (>= 1.1, < 3)\n    sdoc (0.4.1)\n      json (~> 1.7, >= 1.7.7)\n      rdoc (~> 4.0)\n    spring (1.4.0)\n    sprockets (3.4.0)\n      rack (> 1, < 3)\n    sprockets-rails (2.3.3)\n      actionpack (>= 3.0)\n      activesupport (>= 3.0)\n      sprockets (>= 2.8, < 4.0)\n    sqlite3 (1.3.11)\n    thor (0.19.1)\n    thread_safe (0.3.5)\n    tilt (2.0.1)\n    turbolinks (2.5.3)\n      coffee-rails\n    tzinfo (1.2.2)\n      thread_safe (~> 0.1)\n    uglifier (2.7.2)\n      execjs (>= 0.3.0)\n      json (>= 1.8.0)\n    web-console (2.2.1)\n      activemodel (>= 4.0)\n      binding_of_caller (>= 0.7.2)\n      railties (>= 4.0)\n      sprockets-rails (>= 2.0, < 4.0)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  byebug\n  coffee-rails (~> 4.1.0)\n  jbuilder (~> 2.0)\n  jquery-rails\n  rails (= 4.2.4)\n  sass-rails (~> 5.0)\n  sdoc (~> 0.4.0)\n  spring\n  sqlite3\n  turbolinks\n  uglifier (>= 1.3.0)\n  web-console (~> 2.0)\n\nBUNDLED WITH\n   1.10.6\n```\n. Gemfile and Gemfile.lock were created by running `rails new new_app`\n. Error:\n\n```\n2015/11/02 13:44:30.047485 [/Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:184] boot/(no PID) in unbooted state\n2015/11/02 13:44:30.048367 [/Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:372] boot/(no PID) running the root command now\n2015/11/02 13:44:30.092866 [/Users/nick/Work/gopath/src/github.com/burke/zeus/go/processtree/slavenode.go:383] boot/(no PID) root process exited with an error before it could boot: exit status 1; output was: /Users/matias.anaya/.rbenv/versions/2.2.2/lib/ruby/site_ruby/2.2.0/rubygems/dependency.rb:315:in `to_specs': Could not find 'json' (= 1.8.3) - did find: [json-1.8.1] (Gem::LoadError)\n```\n\nI have `bundle config --global path vendor/bundle` set which might be causing this.\n. This might duplicate [#237](https://github.com/burke/zeus/issues/237) which can be resolved by [#530](https://github.com/burke/zeus/pull/530)?\n. ",
    "doy": "What kinds of issues are you running into? You might need to do a `make clean` or `git clean` or something, since I shuffled things around in the build process a bit, but it's building fine for me locally.\n. Hey, sorry I haven't gotten back to you yet! Some things came up at work, and I've been pretty busy for the past few weeks. I did some digging today, and as far as I can tell, it isn't related to any of the code I wrote. It looks like a race condition in the terminal drawing code for tty mode, although it's unclear exactly where. In my testing it seems to crash or not pretty arbitrarily depending on the version of go I used to build it, where I add `println`s, etc. I didn't notice it during my initial development due to a combination of our main app explicitly disabling tty mode due to earlier issues like this and just random luck about how it happened to build. I'll keep poking at it for a bit, but I'm not sure how far I'll be able to get - I'm pretty new at go too.\n. For instance: http://paste.tozt.net/2015-11-30ddaBAxCy-zeus-0.15.5.broken.99.gem is a gem built from 6c782e58 (latest master, after my branch was reverted) with go 1.4.1 and ruby 2.1.5p273, which segfaults for me in the exact same way that yours did in your gist. http://paste.tozt.net/2015-11-30HDezkm2i-zeus-0.15.5.working.99.gem is a working version, built entirely identically, except that I added `println(\"foo\")` to line 27 of `ttyutils_linux.go` in the burke/ttyutils dependency. I'm not sure where exactly to go from here - I'm really not familiar with either go or this codebase at all.\n. I am pretty interested in getting this code merged though, so do let me know if there's anything specific I can help with.\n. There are a couple fixes to this that I'd like to get in before a release (bugs that came up while doing testing internally) - I'll make another pull request once this gets merged.\n. Any updates on this?\n. cc/ @burke ?\n. Any updates on this?\n. I feel like this was necessary for... something, but I don't remember what (it's been almost a year). Given that we're no longer using Vagrant, I don't really see myself spending time working on this, so I'm fine with whatever you need to do.\n. What kinds of issues are you running into? You might need to do a `make clean` or `git clean` or something, since I shuffled things around in the build process a bit, but it's building fine for me locally.\n. Hey, sorry I haven't gotten back to you yet! Some things came up at work, and I've been pretty busy for the past few weeks. I did some digging today, and as far as I can tell, it isn't related to any of the code I wrote. It looks like a race condition in the terminal drawing code for tty mode, although it's unclear exactly where. In my testing it seems to crash or not pretty arbitrarily depending on the version of go I used to build it, where I add `println`s, etc. I didn't notice it during my initial development due to a combination of our main app explicitly disabling tty mode due to earlier issues like this and just random luck about how it happened to build. I'll keep poking at it for a bit, but I'm not sure how far I'll be able to get - I'm pretty new at go too.\n. For instance: http://paste.tozt.net/2015-11-30ddaBAxCy-zeus-0.15.5.broken.99.gem is a gem built from 6c782e58 (latest master, after my branch was reverted) with go 1.4.1 and ruby 2.1.5p273, which segfaults for me in the exact same way that yours did in your gist. http://paste.tozt.net/2015-11-30HDezkm2i-zeus-0.15.5.working.99.gem is a working version, built entirely identically, except that I added `println(\"foo\")` to line 27 of `ttyutils_linux.go` in the burke/ttyutils dependency. I'm not sure where exactly to go from here - I'm really not familiar with either go or this codebase at all.\n. I am pretty interested in getting this code merged though, so do let me know if there's anything specific I can help with.\n. There are a couple fixes to this that I'd like to get in before a release (bugs that came up while doing testing internally) - I'll make another pull request once this gets merged.\n. Any updates on this?\n. cc/ @burke ?\n. Any updates on this?\n. I feel like this was necessary for... something, but I don't remember what (it's been almost a year). Given that we're no longer using Vagrant, I don't really see myself spending time working on this, so I'm fine with whatever you need to do.\n. ",
    "mecampbellsoup": "OK thank you @latortuga, I will check if full Rails environment gets loaded in `spec_helper.rb` and report back. Thanks again :smile: \n. @latortuga you were right! Turns out, we have a `spec/support/stubs.rb` file which was stubbing out `User`. Now to figure out why this breaks with Zeus behind the wheel but not with the normal `rspec` executable...\n\nHere's what our stub is doing (it's really just open classing `User` so the superclass shouldn't change as I verified in [this Gist](https://gist.github.com/mecampbellsoup/e5c0037bf1637e31c95d)):\n\n``` ruby\nclass User\n  def push_notifications\n    @@push_notifications ||= {}\n    @@push_notifications[id] ||= []\n  end\n\n  def push_notification(*args)\n    push_notifications << args\n  end\n\n  #dont use bcrypt in the specs\n  def encrypt_password\n    self.crypted_password = password\n  end\n\n  def check_password\n    @check_password ||= crypted_password\n  end\nend\n```\n\nI think when I run through Zeus, it's actually reading the `stubs.rb` file **first**, so from there on out the superclass of `User` is just `Object` (as is standard when you don't specify the superclass in Ruby).\n\nThoughts?\n. OK thank you @latortuga, I will check if full Rails environment gets loaded in `spec_helper.rb` and report back. Thanks again :smile: \n. @latortuga you were right! Turns out, we have a `spec/support/stubs.rb` file which was stubbing out `User`. Now to figure out why this breaks with Zeus behind the wheel but not with the normal `rspec` executable...\n\nHere's what our stub is doing (it's really just open classing `User` so the superclass shouldn't change as I verified in [this Gist](https://gist.github.com/mecampbellsoup/e5c0037bf1637e31c95d)):\n\n``` ruby\nclass User\n  def push_notifications\n    @@push_notifications ||= {}\n    @@push_notifications[id] ||= []\n  end\n\n  def push_notification(*args)\n    push_notifications << args\n  end\n\n  #dont use bcrypt in the specs\n  def encrypt_password\n    self.crypted_password = password\n  end\n\n  def check_password\n    @check_password ||= crypted_password\n  end\nend\n```\n\nI think when I run through Zeus, it's actually reading the `stubs.rb` file **first**, so from there on out the superclass of `User` is just `Object` (as is standard when you don't specify the superclass in Ruby).\n\nThoughts?\n. ",
    "dalizard": "@kgrz Thank you -- I've fixed the problem. However, I think it would be helpful if we got some verbose output in case of a failure.\n. @kgrz Thank you -- I've fixed the problem. However, I think it would be helpful if we got some verbose output in case of a failure.\n. ",
    "dnasseri": "@kgrz the version used by rails is 2.0.8\n\nRunning `gem list psych` in the same directory lists two versions. Here is the output: \n\n**\\* LOCAL GEMS ***\n\npsych (2.0.15, 2.0.8)\n. uninstalling psych 2.0.15 did the trick! Thanks @kgrz !\n. @kgrz the version used by rails is 2.0.8\n\nRunning `gem list psych` in the same directory lists two versions. Here is the output: \n\n**\\* LOCAL GEMS ***\n\npsych (2.0.15, 2.0.8)\n. uninstalling psych 2.0.15 did the trick! Thanks @kgrz !\n. ",
    "mark-stephenson-": "I'm getting the same issue, but I only have one version installed.  I have the latest version of Zeus installed and the latest version of Psych\n. I'm getting the same issue, but I only have one version installed.  I have the latest version of Zeus installed and the latest version of Psych\n. ",
    "headius": "Oh, I just saw #297 :-(\n\nWhere is fork used? Wouldn't it be possible to just launch a new process?\n. Ok, I see...it's very similar to how Spring uses fork, no?\n\nSee https://github.com/rails/spring/pull/449 where @mrbrdo has introduced a pooled subprocess model when fork is not available.\n. Oh, I just saw #297 :-(\n\nWhere is fork used? Wouldn't it be possible to just launch a new process?\n. Ok, I see...it's very similar to how Spring uses fork, no?\n\nSee https://github.com/rails/spring/pull/449 where @mrbrdo has introduced a pooled subprocess model when fork is not available.\n. ",
    "saghaulor": "@latortuga I figured there was a reason it wasn't pushed. Thanks for the info.\n. @latortuga I figured there was a reason it wasn't pushed. Thanks for the info.\n. ",
    "sethkrasnianski": "Closing. Was caused by an outdated local gem \ud83d\ude1e .\n. Closing. Was caused by an outdated local gem \ud83d\ude1e .\n. ",
    "nfriend21": "@sethkrasnianski do you by any chance remember which local gem it was?  Been stuck here all day.   Just got a new mac and doing a new install.  cant get zeus working, getting the same error as above.. @sethkrasnianski do you by any chance remember which local gem it was?  Been stuck here all day.   Just got a new mac and doing a new install.  cant get zeus working, getting the same error as above.. ",
    "speckins": "Yes, this was because of minitest-spec-rails checking `Rails.env.test?` when conditionally defining initializers.\n\nUsing the following fixes my issue:\n\n``` ruby\n# custom_plan.rb\nclass CustomPlan < Zeus::Rails\n  def test_environment\n    ::Rails.env = ENV['RAILS_ENV'] = 'test'\n    super\n  end\nend\n\nZeus.plan = CustomPlan.new\n```\n\n`Rails.env.test?` needs to be true before calling `Bundler.require(:test)`.  I'm not sure why they're enforcing initialization only when the Rails environment is \"test\".  It seems like that should be handled by putting the gem in the `:test` group in the Gemfile.\n\nWould it be appropriate to move the RAILS_ENV line before the Bundler.require line in both test_enviroment and development_environment in zeus?  If so, I can generate a patch.\n. Yes, this was because of minitest-spec-rails checking `Rails.env.test?` when conditionally defining initializers.\n\nUsing the following fixes my issue:\n\n``` ruby\n# custom_plan.rb\nclass CustomPlan < Zeus::Rails\n  def test_environment\n    ::Rails.env = ENV['RAILS_ENV'] = 'test'\n    super\n  end\nend\n\nZeus.plan = CustomPlan.new\n```\n\n`Rails.env.test?` needs to be true before calling `Bundler.require(:test)`.  I'm not sure why they're enforcing initialization only when the Rails environment is \"test\".  It seems like that should be handled by putting the gem in the `:test` group in the Gemfile.\n\nWould it be appropriate to move the RAILS_ENV line before the Bundler.require line in both test_enviroment and development_environment in zeus?  If so, I can generate a patch.\n. ",
    "ptarjan": "Looks great. I don't have credentials apparently. /cc @metcalf \n. lgtm\n\nMy go isn't stellar but it looked all reasonable. The locking was a little hairy but seemed right.\n. LGTM\n. lgtm\n. goodcatch\nlgtm\n. lgtm\n. lgtm\nYes, you should keep the optional parts, they make it better.\n. lgtm\n. lol! good find\nlgtm\n. lgtm\n. lgtm\n. lgtm\n. yay thanks\nlgtm\n. Looks great. I don't have credentials apparently. /cc @metcalf \n. lgtm\n\nMy go isn't stellar but it looked all reasonable. The locking was a little hairy but seemed right.\n. LGTM\n. lgtm\n. goodcatch\nlgtm\n. lgtm\n. lgtm\nYes, you should keep the optional parts, they make it better.\n. lgtm\n. lol! good find\nlgtm\n. lgtm\n. lgtm\n. lgtm\n. yay thanks\nlgtm\n. ",
    "wallclockbuilder": "Thanks for your response. I appreciate the effort you put in to explain.\n\nI run `zeus server` and got notified that zeus wasn't running. So I run zeus start and got the cryptic error message. Perhaps we `signal: killed.`\nHow can we make zeus give a much more helpful error message like rails did?\n. Thanks for your response. I appreciate the effort you put in to explain.\n\nI run `zeus server` and got notified that zeus wasn't running. So I run zeus start and got the cryptic error message. Perhaps we `signal: killed.`\nHow can we make zeus give a much more helpful error message like rails did?\n. ",
    "lacco": "It took me 1 hour to figure this out, this should get merged into master!\n. It took me 1 hour to figure this out, this should get merged into master!\n. ",
    "lonre": "\ud83d\udc4d \n. \ud83d\udc4d \n. ",
    "benjie": "(I see you've pulled 0.15.9 due to similar issues)\n. Here's what I did to get zeus installed on OSX:\n\n``` bash\nbrew install golang\necho 'export GOPATH=\"~/go\"' >> ~/.profile_common\necho 'export PATH=\"$PATH:/usr/local/opt/go/libexec/bin\"' >> ~/.profile_common\necho 'export PATH=\"$PATH:$GOPATH/bin\"' >> ~/.profile_common\n. ~/.profile_common\nmkdir -p ~/go/src/github.com/burke\ncd !$\ngit clone git@github.com/burke/zeus.git\ncd zeus\nrbenv install\nmake dev_bootstrap\nmake\ncd ~/Documents/zeustest\nrails new bob\ncd bob\ngem install $GOPATH/src/github.com/burke/zeus/rubygem/pkg/*.gem\n```\n\n---\n\nRunning `zeus --log /dev/stderr start` (under ruby 2.2.3) in a clean rails 5.0 produces:\n\n```\nzeus --log /dev/stderr start\nStarting Zeus server v0.15.9\n2016/07/02 12:04:06.587488 [/Users/benjiegillam/go/src/github.com/burke/zeus/go/processtree/slavenode.go:193] boot/(no PID) in unbooted state\n2016/07/02 12:04:06.587659 [/Users/benjiegillam/go/src/github.com/burke/zeus/go/processtree/slavenode.go:373] boot/(no PID) running the root command now\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus destroy (alias: d)\nzeus dbconsole\nzeus rake\nzeus runner (alias: r)\nzeus console (alias: c)\nzeus server (alias: s)\nzeus generate (alias: g)\nzeus test (alias: rspec, testrb)\n2016/07/02 12:04:06.884675 [/Users/benjiegillam/go/src/github.com/burke/zeus/go/processtree/slavenode.go:384] boot/(no PID) root process exited with an error before it could boot: exit status 1; output was: /Users/benjiegillam/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/zeus-0.15.9/lib/zeus/rails.rb:17:in `require': cannot load such file -- zeus (LoadError)\n        from /Users/benjiegillam/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/zeus-0.15.9/lib/zeus/rails.rb:17:in `<top (required)>'\n        from /Users/benjiegillam/.rbenv/versions/2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:128:in `require'\n        from /Users/benjiegillam/.rbenv/versions/2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:128:in `rescue in require'\n        from /Users/benjiegillam/.rbenv/versions/2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:39:in `require'\nexit status 1\n```\n\nI had to actually Control-C to get back to the command prompt; pressing enter did nothing.\n. Weird; when I follow @metcalf's instructions (which seems the same as what I did) it does actually run.\n\n```\n\u279c /tmp  rails new zeustest\n      create\n      create  README.rdoc\n      create  Rakefile\n      create  config.ru\n      create  .gitignore\n      create  Gemfile\n      create  app\n      create  app/assets/images/rails.png\n      create  app/assets/javascripts/application.js\n      create  app/assets/stylesheets/application.css\n      create  app/controllers/application_controller.rb\n      create  app/helpers/application_helper.rb\n      create  app/mailers\n      create  app/models\n      create  app/views/layouts/application.html.erb\n      create  app/mailers/.gitkeep\n      create  app/models/.gitkeep\n      create  config\n      create  config/routes.rb\n      create  config/application.rb\n      create  config/environment.rb\n      create  config/environments\n      create  config/environments/development.rb\n      create  config/environments/production.rb\n      create  config/environments/test.rb\n      create  config/initializers\n      create  config/initializers/backtrace_silencers.rb\n      create  config/initializers/inflections.rb\n      create  config/initializers/mime_types.rb\n      create  config/initializers/secret_token.rb\n      create  config/initializers/session_store.rb\n      create  config/initializers/wrap_parameters.rb\n      create  config/locales\n      create  config/locales/en.yml\n      create  config/boot.rb\n      create  config/database.yml\n      create  db\n      create  db/seeds.rb\n      create  doc\n      create  doc/README_FOR_APP\n      create  lib\n      create  lib/tasks\n      create  lib/tasks/.gitkeep\n      create  lib/assets\n      create  lib/assets/.gitkeep\n      create  log\n      create  log/.gitkeep\n      create  public\n      create  public/404.html\n      create  public/422.html\n      create  public/500.html\n      create  public/favicon.ico\n      create  public/index.html\n      create  public/robots.txt\n      create  script\n      create  script/rails\n      create  test/fixtures\n      create  test/fixtures/.gitkeep\n      create  test/functional\n      create  test/functional/.gitkeep\n      create  test/integration\n      create  test/integration/.gitkeep\n      create  test/unit\n      create  test/unit/.gitkeep\n      create  test/performance/browsing_test.rb\n      create  test/test_helper.rb\n      create  tmp/cache\n      create  tmp/cache/assets\n      create  vendor/assets/javascripts\n      create  vendor/assets/javascripts/.gitkeep\n      create  vendor/assets/stylesheets\n      create  vendor/assets/stylesheets/.gitkeep\n      create  vendor/plugins\n      create  vendor/plugins/.gitkeep\n         run  bundle install\nFetching gem metadata from https://rubygems.org/...........\nFetching version metadata from https://rubygems.org/...\nFetching dependency metadata from https://rubygems.org/..\nResolving dependencies..............\nUsing rake 11.2.2\nUsing i18n 0.7.0\nUsing multi_json 1.12.1\nUsing builder 3.0.4\nUsing erubis 2.7.0\nUsing journey 1.0.4\nUsing rack 1.4.7\nUsing hike 1.2.3\nUsing tilt 1.4.1\nUsing mime-types 1.25.1\nUsing polyglot 0.3.5\nUsing arel 3.0.3\nUsing tzinfo 0.3.50\nUsing bundler 1.11.2\nUsing coffee-script-source 1.10.0\nUsing execjs 2.7.0\nUsing json 1.8.3\nUsing thor 0.19.1\nUsing sass 3.4.22\nUsing sqlite3 1.3.11\nUsing activesupport 3.2.22.2\nUsing rack-cache 1.6.1\nUsing rack-test 0.6.3\nUsing rack-ssl 1.3.4\nUsing sprockets 2.2.3\nUsing treetop 1.4.15\nUsing coffee-script 2.4.1\nUsing uglifier 3.0.0\nUsing rdoc 3.12.2\nUsing activemodel 3.2.22.2\nUsing mail 2.5.4\nUsing actionpack 3.2.22.2\nUsing activerecord 3.2.22.2\nUsing activeresource 3.2.22.2\nUsing actionmailer 3.2.22.2\nUsing railties 3.2.22.2\nUsing coffee-rails 3.2.2\nUsing jquery-rails 3.1.4\nUsing rails 3.2.22.2\nUsing sass-rails 3.2.6\nBundle complete! 6 Gemfile dependencies, 40 gems now installed.\nUse `bundle show [gemname]` to see where a bundled gem is installed.\n\u279c /tmp  cd zeustest\n\u279c /tmp/zeustest  echo \"gem 'zeus', '= 0.15.9'\" >> Gemfile\n\u279c /tmp/zeustest  echo \"2.2\" >> .ruby_version\n\u279c /tmp/zeustest  cp $GOPATH/src/github.com/burke/zeus/examples/zeus.json .\n\u279c /tmp/zeustest  gem install $GOPATH/src/github.com/burke/zeus/rubygem/pkg/*.gem\nSuccessfully installed zeus-0.15.9\nParsing documentation for zeus-0.15.9\nDone installing documentation for zeus after 0 seconds\n1 gem installed\n\u279c /tmp/zeustest  bundle install\nResolving dependencies...\nUsing rake 11.2.2\nUsing i18n 0.7.0\nUsing multi_json 1.12.1\nUsing builder 3.0.4\nUsing erubis 2.7.0\nUsing journey 1.0.4\nUsing rack 1.4.7\nUsing hike 1.2.3\nUsing tilt 1.4.1\nUsing mime-types 1.25.1\nUsing polyglot 0.3.5\nUsing arel 3.0.3\nUsing tzinfo 0.3.50\nUsing bundler 1.11.2\nUsing coffee-script-source 1.10.0\nUsing execjs 2.7.0\nUsing json 1.8.3\nUsing thor 0.19.1\nUsing method_source 0.8.2\nUsing sass 3.4.22\nUsing sqlite3 1.3.11\nUsing activesupport 3.2.22.2\nUsing rack-cache 1.6.1\nUsing rack-test 0.6.3\nUsing rack-ssl 1.3.4\nUsing sprockets 2.2.3\nUsing treetop 1.4.15\nUsing coffee-script 2.4.1\nUsing uglifier 3.0.0\nUsing rdoc 3.12.2\nUsing zeus 0.15.9\nUsing activemodel 3.2.22.2\nUsing mail 2.5.4\nUsing actionpack 3.2.22.2\nUsing activerecord 3.2.22.2\nUsing activeresource 3.2.22.2\nUsing actionmailer 3.2.22.2\nUsing railties 3.2.22.2\nUsing coffee-rails 3.2.2\nUsing jquery-rails 3.1.4\nUsing rails 3.2.22.2\nUsing sass-rails 3.2.6\nBundle complete! 7 Gemfile dependencies, 42 gems now installed.\nUse `bundle show [gemname]` to see where a bundled gem is installed.\n\u279c /tmp/zeustest  zeus --log /dev/stderr start\nStarting Zeus server v0.15.9\n2016/07/02 12:07:55.267265 [/Users/benjiegillam/go/src/github.com/burke/zeus/go/processtree/slavenode.go:193] boot/(no PID) in unbooted state\n2016/07/02 12:07:55.267426 [/Users/benjiegillam/go/src/github.com/burke/zeus/go/processtree/slavenode.go:373] boot/(no PID) running the root command now\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus generate (alias: g)\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus generate (alias: g)\nzeus destroy (alias: d)\nzeus dbconsole\nzeus rake\nzeus runner (alias: r)\nzeus console (alias: c)\nzeus server (alias: s)\nzeus test (alias: rspec, testrb)\n```\n. The difference was that I hadn't added zeus to my clean rails project's Gemfile. The moment I run `echo \"gem 'zeus', '= 0.15.9'\" >> Gemfile`, zeus now works.\n. \ud83d\udc4d  zeus 0.15.9 now running against my large rails project just fine; initial impressions are it seems a lot more stable than 0.15.4 - excellent work!\n. (I see you've pulled 0.15.9 due to similar issues)\n. Here's what I did to get zeus installed on OSX:\n\n``` bash\nbrew install golang\necho 'export GOPATH=\"~/go\"' >> ~/.profile_common\necho 'export PATH=\"$PATH:/usr/local/opt/go/libexec/bin\"' >> ~/.profile_common\necho 'export PATH=\"$PATH:$GOPATH/bin\"' >> ~/.profile_common\n. ~/.profile_common\nmkdir -p ~/go/src/github.com/burke\ncd !$\ngit clone git@github.com/burke/zeus.git\ncd zeus\nrbenv install\nmake dev_bootstrap\nmake\ncd ~/Documents/zeustest\nrails new bob\ncd bob\ngem install $GOPATH/src/github.com/burke/zeus/rubygem/pkg/*.gem\n```\n\n---\n\nRunning `zeus --log /dev/stderr start` (under ruby 2.2.3) in a clean rails 5.0 produces:\n\n```\nzeus --log /dev/stderr start\nStarting Zeus server v0.15.9\n2016/07/02 12:04:06.587488 [/Users/benjiegillam/go/src/github.com/burke/zeus/go/processtree/slavenode.go:193] boot/(no PID) in unbooted state\n2016/07/02 12:04:06.587659 [/Users/benjiegillam/go/src/github.com/burke/zeus/go/processtree/slavenode.go:373] boot/(no PID) running the root command now\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus destroy (alias: d)\nzeus dbconsole\nzeus rake\nzeus runner (alias: r)\nzeus console (alias: c)\nzeus server (alias: s)\nzeus generate (alias: g)\nzeus test (alias: rspec, testrb)\n2016/07/02 12:04:06.884675 [/Users/benjiegillam/go/src/github.com/burke/zeus/go/processtree/slavenode.go:384] boot/(no PID) root process exited with an error before it could boot: exit status 1; output was: /Users/benjiegillam/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/zeus-0.15.9/lib/zeus/rails.rb:17:in `require': cannot load such file -- zeus (LoadError)\n        from /Users/benjiegillam/.rbenv/versions/2.2.3/lib/ruby/gems/2.2.0/gems/zeus-0.15.9/lib/zeus/rails.rb:17:in `<top (required)>'\n        from /Users/benjiegillam/.rbenv/versions/2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:128:in `require'\n        from /Users/benjiegillam/.rbenv/versions/2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:128:in `rescue in require'\n        from /Users/benjiegillam/.rbenv/versions/2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:39:in `require'\nexit status 1\n```\n\nI had to actually Control-C to get back to the command prompt; pressing enter did nothing.\n. Weird; when I follow @metcalf's instructions (which seems the same as what I did) it does actually run.\n\n```\n\u279c /tmp  rails new zeustest\n      create\n      create  README.rdoc\n      create  Rakefile\n      create  config.ru\n      create  .gitignore\n      create  Gemfile\n      create  app\n      create  app/assets/images/rails.png\n      create  app/assets/javascripts/application.js\n      create  app/assets/stylesheets/application.css\n      create  app/controllers/application_controller.rb\n      create  app/helpers/application_helper.rb\n      create  app/mailers\n      create  app/models\n      create  app/views/layouts/application.html.erb\n      create  app/mailers/.gitkeep\n      create  app/models/.gitkeep\n      create  config\n      create  config/routes.rb\n      create  config/application.rb\n      create  config/environment.rb\n      create  config/environments\n      create  config/environments/development.rb\n      create  config/environments/production.rb\n      create  config/environments/test.rb\n      create  config/initializers\n      create  config/initializers/backtrace_silencers.rb\n      create  config/initializers/inflections.rb\n      create  config/initializers/mime_types.rb\n      create  config/initializers/secret_token.rb\n      create  config/initializers/session_store.rb\n      create  config/initializers/wrap_parameters.rb\n      create  config/locales\n      create  config/locales/en.yml\n      create  config/boot.rb\n      create  config/database.yml\n      create  db\n      create  db/seeds.rb\n      create  doc\n      create  doc/README_FOR_APP\n      create  lib\n      create  lib/tasks\n      create  lib/tasks/.gitkeep\n      create  lib/assets\n      create  lib/assets/.gitkeep\n      create  log\n      create  log/.gitkeep\n      create  public\n      create  public/404.html\n      create  public/422.html\n      create  public/500.html\n      create  public/favicon.ico\n      create  public/index.html\n      create  public/robots.txt\n      create  script\n      create  script/rails\n      create  test/fixtures\n      create  test/fixtures/.gitkeep\n      create  test/functional\n      create  test/functional/.gitkeep\n      create  test/integration\n      create  test/integration/.gitkeep\n      create  test/unit\n      create  test/unit/.gitkeep\n      create  test/performance/browsing_test.rb\n      create  test/test_helper.rb\n      create  tmp/cache\n      create  tmp/cache/assets\n      create  vendor/assets/javascripts\n      create  vendor/assets/javascripts/.gitkeep\n      create  vendor/assets/stylesheets\n      create  vendor/assets/stylesheets/.gitkeep\n      create  vendor/plugins\n      create  vendor/plugins/.gitkeep\n         run  bundle install\nFetching gem metadata from https://rubygems.org/...........\nFetching version metadata from https://rubygems.org/...\nFetching dependency metadata from https://rubygems.org/..\nResolving dependencies..............\nUsing rake 11.2.2\nUsing i18n 0.7.0\nUsing multi_json 1.12.1\nUsing builder 3.0.4\nUsing erubis 2.7.0\nUsing journey 1.0.4\nUsing rack 1.4.7\nUsing hike 1.2.3\nUsing tilt 1.4.1\nUsing mime-types 1.25.1\nUsing polyglot 0.3.5\nUsing arel 3.0.3\nUsing tzinfo 0.3.50\nUsing bundler 1.11.2\nUsing coffee-script-source 1.10.0\nUsing execjs 2.7.0\nUsing json 1.8.3\nUsing thor 0.19.1\nUsing sass 3.4.22\nUsing sqlite3 1.3.11\nUsing activesupport 3.2.22.2\nUsing rack-cache 1.6.1\nUsing rack-test 0.6.3\nUsing rack-ssl 1.3.4\nUsing sprockets 2.2.3\nUsing treetop 1.4.15\nUsing coffee-script 2.4.1\nUsing uglifier 3.0.0\nUsing rdoc 3.12.2\nUsing activemodel 3.2.22.2\nUsing mail 2.5.4\nUsing actionpack 3.2.22.2\nUsing activerecord 3.2.22.2\nUsing activeresource 3.2.22.2\nUsing actionmailer 3.2.22.2\nUsing railties 3.2.22.2\nUsing coffee-rails 3.2.2\nUsing jquery-rails 3.1.4\nUsing rails 3.2.22.2\nUsing sass-rails 3.2.6\nBundle complete! 6 Gemfile dependencies, 40 gems now installed.\nUse `bundle show [gemname]` to see where a bundled gem is installed.\n\u279c /tmp  cd zeustest\n\u279c /tmp/zeustest  echo \"gem 'zeus', '= 0.15.9'\" >> Gemfile\n\u279c /tmp/zeustest  echo \"2.2\" >> .ruby_version\n\u279c /tmp/zeustest  cp $GOPATH/src/github.com/burke/zeus/examples/zeus.json .\n\u279c /tmp/zeustest  gem install $GOPATH/src/github.com/burke/zeus/rubygem/pkg/*.gem\nSuccessfully installed zeus-0.15.9\nParsing documentation for zeus-0.15.9\nDone installing documentation for zeus after 0 seconds\n1 gem installed\n\u279c /tmp/zeustest  bundle install\nResolving dependencies...\nUsing rake 11.2.2\nUsing i18n 0.7.0\nUsing multi_json 1.12.1\nUsing builder 3.0.4\nUsing erubis 2.7.0\nUsing journey 1.0.4\nUsing rack 1.4.7\nUsing hike 1.2.3\nUsing tilt 1.4.1\nUsing mime-types 1.25.1\nUsing polyglot 0.3.5\nUsing arel 3.0.3\nUsing tzinfo 0.3.50\nUsing bundler 1.11.2\nUsing coffee-script-source 1.10.0\nUsing execjs 2.7.0\nUsing json 1.8.3\nUsing thor 0.19.1\nUsing method_source 0.8.2\nUsing sass 3.4.22\nUsing sqlite3 1.3.11\nUsing activesupport 3.2.22.2\nUsing rack-cache 1.6.1\nUsing rack-test 0.6.3\nUsing rack-ssl 1.3.4\nUsing sprockets 2.2.3\nUsing treetop 1.4.15\nUsing coffee-script 2.4.1\nUsing uglifier 3.0.0\nUsing rdoc 3.12.2\nUsing zeus 0.15.9\nUsing activemodel 3.2.22.2\nUsing mail 2.5.4\nUsing actionpack 3.2.22.2\nUsing activerecord 3.2.22.2\nUsing activeresource 3.2.22.2\nUsing actionmailer 3.2.22.2\nUsing railties 3.2.22.2\nUsing coffee-rails 3.2.2\nUsing jquery-rails 3.1.4\nUsing rails 3.2.22.2\nUsing sass-rails 3.2.6\nBundle complete! 7 Gemfile dependencies, 42 gems now installed.\nUse `bundle show [gemname]` to see where a bundled gem is installed.\n\u279c /tmp/zeustest  zeus --log /dev/stderr start\nStarting Zeus server v0.15.9\n2016/07/02 12:07:55.267265 [/Users/benjiegillam/go/src/github.com/burke/zeus/go/processtree/slavenode.go:193] boot/(no PID) in unbooted state\n2016/07/02 12:07:55.267426 [/Users/benjiegillam/go/src/github.com/burke/zeus/go/processtree/slavenode.go:373] boot/(no PID) running the root command now\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus generate (alias: g)\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus generate (alias: g)\nzeus destroy (alias: d)\nzeus dbconsole\nzeus rake\nzeus runner (alias: r)\nzeus console (alias: c)\nzeus server (alias: s)\nzeus test (alias: rspec, testrb)\n```\n. The difference was that I hadn't added zeus to my clean rails project's Gemfile. The moment I run `echo \"gem 'zeus', '= 0.15.9'\" >> Gemfile`, zeus now works.\n. \ud83d\udc4d  zeus 0.15.9 now running against my large rails project just fine; initial impressions are it seems a lot more stable than 0.15.4 - excellent work!\n. ",
    "staycreativedesign": "I have a the same problem now 0.15.10. I am experiencing the same thing as well !! I try to run zeus generate and it gives that exact same error!\r\n**Rails 5.1.0**\r\n**ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-darwin15]**. Here is a link to a virgin project hehe :)\r\nhttps://github.com/staycreativedesign/zeus-error\r\n. Works in version 5.02 but not 5.1.0 . I have a the same problem now 0.15.10. I am experiencing the same thing as well !! I try to run zeus generate and it gives that exact same error!\r\n**Rails 5.1.0**\r\n**ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-darwin15]**. Here is a link to a virgin project hehe :)\r\nhttps://github.com/staycreativedesign/zeus-error\r\n. Works in version 5.02 but not 5.1.0 . ",
    "TangMonk": "rails 5.1.1 not works, seems rails 5.1.1 change the hot reload mechanism. same problem at rails 5.1.1. rails 5.1.1 not works, seems rails 5.1.1 change the hot reload mechanism. same problem at rails 5.1.1. ",
    "keithpitty": "@metcalf I see you've been working on zeus lately. Thanks for that. Can you confirm that version 0.15.9 works for you? If so, I wonder what the critical difference is between our environments.\n. ```\ncockatoo6 ~/tc/tc master[*] $ zeus --log /dev/stderr start\nStarting Zeus server v0.15.9\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 test_environment\n    \u2502\u00a0  \u2514\u2500\u2500 test_helper\n    \u2514\u2500\u2500 development_environment\n        \u2514\u2500\u2500 prerake\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus test (alias: rspec, testrb)\nzeus generate (alias: g)\nzeus destroy (alias: d)\nzeus dbconsole\nzeus rake\nzeus runner (alias: r)\nzeus console (alias: c)\nzeus server (alias: s)\n2016/07/01 10:44:10.580253 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:193] boot/(no PID) in unbooted state\n2016/07/01 10:44:10.583261 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:373] boot/(no PID) running the root command now\n2016/07/01 10:44:11.536564 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:384] boot/(no PID) root process exited with an error before it could boot: exit status 1; output was: /Users/keithpitty/.gem/ruby/2.3.1/gems/zeus-0.15.9/lib/zeus/rails.rb:17:in `require': cannot load such file -- zeus (LoadError)\n    from /Users/keithpitty/.gem/ruby/2.3.1/gems/zeus-0.15.9/lib/zeus/rails.rb:17:in `<top (required)>'\n    from /Users/keithpitty/.rubies/ruby-2.3.1/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:127:in `require'\n    from /Users/keithpitty/.rubies/ruby-2.3.1/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:127:in `rescue in require'\n    from /Users/keithpitty/.rubies/ruby-2.3.1/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:40:in `require'\n    from /Users/keithpitty/tc/tc/custom_plan.rb:1:in `<top (required)>'\n    from /Users/keithpitty/.rubies/ruby-2.3.1/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in `require'\n    from /Users/keithpitty/.rubies/ruby-2.3.1/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in `require'\nexit status 1\n```\n. @metcalf thanks for responding so quickly!\n. Thanks for explaining. I use Zeus for Rails projects, ideally in conjunction with RSpec but also to allow fast startup of a Rails server, console etc. I'm keen to get it working again, so if there's anything I can do to help, please let me know.\n. Sure. And thanks again for your prompt response. I'll let you know if I discover anything.\n. @metcalf I will do once I have my Go environment set up properly. Currently when I run `make` I get an error:\n\n```\ngovendor fmt +local\nmake: govendor: No such file or directory\nmake: *** [fmt] Error 1\n```\n. @metcalf having made a few changes to your suggested command list, e.g. specifying the git source for zeus because 0.15.9 has been yanked, when I got as far as:\n\n```\ngem install $GOPATH/src/github.com/burke/zeus/rubygem/pkg/*.gem\n```\n\nI got the following error:\n\n```\nERROR:  Could not find a valid gem '/Users/keithpitty/src/github.com/burke/zeus/rubygem/pkg/*.gem' (>= 0) in any repository\n```\n\nI now have to go out for the rest of the day but will check again in the evening.\n. Isn't zeus supposed to be run without being specified in the `Gemfile`?\n. @metcalf if you remove `\"gem 'zeus', '= 0.15.9'\"` from your `Gemfile` do you see the error?\n. @metcalf I've been trying to test this branch but haven't had much time or success in recent days.\n\nHere's the error I'm getting:\n\n```\nockatoo6 /tmp/zeustest/kp  $ zeus --log /dev/stderr start\nStarting Zeus server v0.15.9\n2016/07/06 00:32:00.530277 [/Users/keithpitty/src/github.com/burke/zeus/go/processtree/slavenode.go:193] boot/(no PID) in unbooted state\n2016/07/06 00:32:00.530493 [/Users/keithpitty/src/github.com/burke/zeus/go/processtree/slavenode.go:373] boot/(no PID) running the root command now\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus rake\nzeus runner (alias: r)\nzeus console (alias: c)\nzeus server (alias: s)\nzeus generate (alias: g)\nzeus destroy (alias: d)\nzeus dbconsole\nzeus test (alias: rspec, testrb)\n2016/07/06 00:32:00.847429 [/Users/keithpitty/src/github.com/burke/zeus/go/processtree/slavenode.go:384] boot/(no PID) root process exited with an error before it could boot: exit status 1; output was: /Users/keithpitty/.gem/ruby/2.2.3/gems/zeus-0.15.9/lib/zeus/rails.rb:19:in `require': cannot load such file -- zeus/m (LoadError)\n    from /Users/keithpitty/.gem/ruby/2.2.3/gems/zeus-0.15.9/lib/zeus/rails.rb:19:in `<top (required)>'\n    from /Users/keithpitty/.rubies/ruby-2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:128:in `require'\n    from /Users/keithpitty/.rubies/ruby-2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:128:in `rescue in require'\n    from /Users/keithpitty/.rubies/ruby-2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:39:in `require'\nexit status 1\n```\n. @metcalf I see you've been working on zeus lately. Thanks for that. Can you confirm that version 0.15.9 works for you? If so, I wonder what the critical difference is between our environments.\n. ```\ncockatoo6 ~/tc/tc master[*] $ zeus --log /dev/stderr start\nStarting Zeus server v0.15.9\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 test_environment\n    \u2502\u00a0  \u2514\u2500\u2500 test_helper\n    \u2514\u2500\u2500 development_environment\n        \u2514\u2500\u2500 prerake\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus test (alias: rspec, testrb)\nzeus generate (alias: g)\nzeus destroy (alias: d)\nzeus dbconsole\nzeus rake\nzeus runner (alias: r)\nzeus console (alias: c)\nzeus server (alias: s)\n2016/07/01 10:44:10.580253 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:193] boot/(no PID) in unbooted state\n2016/07/01 10:44:10.583261 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:373] boot/(no PID) running the root command now\n2016/07/01 10:44:11.536564 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:384] boot/(no PID) root process exited with an error before it could boot: exit status 1; output was: /Users/keithpitty/.gem/ruby/2.3.1/gems/zeus-0.15.9/lib/zeus/rails.rb:17:in `require': cannot load such file -- zeus (LoadError)\n    from /Users/keithpitty/.gem/ruby/2.3.1/gems/zeus-0.15.9/lib/zeus/rails.rb:17:in `<top (required)>'\n    from /Users/keithpitty/.rubies/ruby-2.3.1/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:127:in `require'\n    from /Users/keithpitty/.rubies/ruby-2.3.1/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:127:in `rescue in require'\n    from /Users/keithpitty/.rubies/ruby-2.3.1/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:40:in `require'\n    from /Users/keithpitty/tc/tc/custom_plan.rb:1:in `<top (required)>'\n    from /Users/keithpitty/.rubies/ruby-2.3.1/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in `require'\n    from /Users/keithpitty/.rubies/ruby-2.3.1/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in `require'\nexit status 1\n```\n. @metcalf thanks for responding so quickly!\n. Thanks for explaining. I use Zeus for Rails projects, ideally in conjunction with RSpec but also to allow fast startup of a Rails server, console etc. I'm keen to get it working again, so if there's anything I can do to help, please let me know.\n. Sure. And thanks again for your prompt response. I'll let you know if I discover anything.\n. @metcalf I will do once I have my Go environment set up properly. Currently when I run `make` I get an error:\n\n```\ngovendor fmt +local\nmake: govendor: No such file or directory\nmake: *** [fmt] Error 1\n```\n. @metcalf having made a few changes to your suggested command list, e.g. specifying the git source for zeus because 0.15.9 has been yanked, when I got as far as:\n\n```\ngem install $GOPATH/src/github.com/burke/zeus/rubygem/pkg/*.gem\n```\n\nI got the following error:\n\n```\nERROR:  Could not find a valid gem '/Users/keithpitty/src/github.com/burke/zeus/rubygem/pkg/*.gem' (>= 0) in any repository\n```\n\nI now have to go out for the rest of the day but will check again in the evening.\n. Isn't zeus supposed to be run without being specified in the `Gemfile`?\n. @metcalf if you remove `\"gem 'zeus', '= 0.15.9'\"` from your `Gemfile` do you see the error?\n. @metcalf I've been trying to test this branch but haven't had much time or success in recent days.\n\nHere's the error I'm getting:\n\n```\nockatoo6 /tmp/zeustest/kp  $ zeus --log /dev/stderr start\nStarting Zeus server v0.15.9\n2016/07/06 00:32:00.530277 [/Users/keithpitty/src/github.com/burke/zeus/go/processtree/slavenode.go:193] boot/(no PID) in unbooted state\n2016/07/06 00:32:00.530493 [/Users/keithpitty/src/github.com/burke/zeus/go/processtree/slavenode.go:373] boot/(no PID) running the root command now\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus rake\nzeus runner (alias: r)\nzeus console (alias: c)\nzeus server (alias: s)\nzeus generate (alias: g)\nzeus destroy (alias: d)\nzeus dbconsole\nzeus test (alias: rspec, testrb)\n2016/07/06 00:32:00.847429 [/Users/keithpitty/src/github.com/burke/zeus/go/processtree/slavenode.go:384] boot/(no PID) root process exited with an error before it could boot: exit status 1; output was: /Users/keithpitty/.gem/ruby/2.2.3/gems/zeus-0.15.9/lib/zeus/rails.rb:19:in `require': cannot load such file -- zeus/m (LoadError)\n    from /Users/keithpitty/.gem/ruby/2.2.3/gems/zeus-0.15.9/lib/zeus/rails.rb:19:in `<top (required)>'\n    from /Users/keithpitty/.rubies/ruby-2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:128:in `require'\n    from /Users/keithpitty/.rubies/ruby-2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:128:in `rescue in require'\n    from /Users/keithpitty/.rubies/ruby-2.2.3/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:39:in `require'\nexit status 1\n```\n. ",
    "typeoneerror": "@metcalf unsure which version I was using, but from the looks of it, I'm guessing my issue is originating from this change:\n\nhttps://github.com/burke/zeus/commit/954894af8c1d69af958860ea7f2bd2333283b91f\n\nLooks like this removed the addition of \"spec\" as path if it didn't exist. Perhaps I should look into the RSpec \"autorunner\" referenced in the commit to use that instead?\n. Went ahead and blasted my gemset and reinstalled all gems and seems to work now. Must've been a temporary fail.. @kigster awesome detective work! of all your SEGV xp's, I have `faker`, so I'll see if your fix works.   It appears faker was aware of the issue; looks like a ruby bug... https://github.com/stympy/faker/issues/982#issuecomment-328192861. Can confirm I've seen this since 0.15.12. `reset` is super handy, thanks @sideshowcoder!\r\n\r\nCurrently I end in a \"dirty\" state every 2-3 times running rspec. Reset is great, but it definitely seems to get worse as you work.. I switched back to 0.15.10 which gives me the \"Terminated\" error but doesn't force me to `reset` the console every 2-3 times I run `rspec`. I did notice an actual stack trace in the window that I did `zeus start` though and _that_ window messed up the buffer too. I'll see if I can grab that stack trace next time it happens.. Ah, I see what happened. I only set $GOPATH and neglected to add $GOPATH/bin to my $PATH.. @sideshowcoder \ud83d\ude0d where can we send you a tip? . Been using it most of the day. No blanks so far!\r\n\r\nOne `Terminated: 15`\r\n\r\nand One:\r\n\r\n```\r\nslavenode.go:226: [development_environment] read unix ->: EOF\r\nslavenode.go:226: [test_environment] read unix ->: EOF\r\n```\r\n\r\nBut I believe those are existing issues.. @metcalf unsure which version I was using, but from the looks of it, I'm guessing my issue is originating from this change:\n\nhttps://github.com/burke/zeus/commit/954894af8c1d69af958860ea7f2bd2333283b91f\n\nLooks like this removed the addition of \"spec\" as path if it didn't exist. Perhaps I should look into the RSpec \"autorunner\" referenced in the commit to use that instead?\n. Went ahead and blasted my gemset and reinstalled all gems and seems to work now. Must've been a temporary fail.. @kigster awesome detective work! of all your SEGV xp's, I have `faker`, so I'll see if your fix works.   It appears faker was aware of the issue; looks like a ruby bug... https://github.com/stympy/faker/issues/982#issuecomment-328192861. Can confirm I've seen this since 0.15.12. `reset` is super handy, thanks @sideshowcoder!\r\n\r\nCurrently I end in a \"dirty\" state every 2-3 times running rspec. Reset is great, but it definitely seems to get worse as you work.. I switched back to 0.15.10 which gives me the \"Terminated\" error but doesn't force me to `reset` the console every 2-3 times I run `rspec`. I did notice an actual stack trace in the window that I did `zeus start` though and _that_ window messed up the buffer too. I'll see if I can grab that stack trace next time it happens.. Ah, I see what happened. I only set $GOPATH and neglected to add $GOPATH/bin to my $PATH.. @sideshowcoder \ud83d\ude0d where can we send you a tip? . Been using it most of the day. No blanks so far!\r\n\r\nOne `Terminated: 15`\r\n\r\nand One:\r\n\r\n```\r\nslavenode.go:226: [development_environment] read unix ->: EOF\r\nslavenode.go:226: [test_environment] read unix ->: EOF\r\n```\r\n\r\nBut I believe those are existing issues.. ",
    "chip": "I had a similar issue, but was running different versions:\n\n```\n$ rbenv local\n2.2.5\n ...Macintosh HD 2/code/art-steps \ue0b0 \ue0a0 master \u2718 \u2739 \u271a \ue0b0\n$ bundle list|egrep \"\\* (rails|rake)\"\n  * rails (3.2.13)\n  * rails_12factor (0.0.3)\n  * rails_serve_static_assets (0.0.5)\n  * rails_stdout_logging (0.0.5)\n  * rake (11.2.2)\n ...Macintosh HD 2/code/art-steps \ue0b0 \ue0a0 master \u2718 \u2739 \u271a \ue0b0\n$ bundle list|grep rspec             \n  * guard-rspec (4.7.3)\n  * rspec (2.99.0)\n  * rspec-collection_matchers (1.1.2)\n  * rspec-core (2.99.2)\n  * rspec-expectations (2.99.2)\n  * rspec-mocks (2.99.4)\n  * rspec-rails (2.99.0)\n ...Macintosh HD 2/code/art-steps \ue0b0 \ue0a0 master \u2718 \u2739 \u271a \ue0b0\n$ zeus --version        \nZeus version 0.15.3\n```\n\nDowngrading to 0.15.3 worked for me.\n. I had a similar issue, but was running different versions:\n\n```\n$ rbenv local\n2.2.5\n ...Macintosh HD 2/code/art-steps \ue0b0 \ue0a0 master \u2718 \u2739 \u271a \ue0b0\n$ bundle list|egrep \"\\* (rails|rake)\"\n  * rails (3.2.13)\n  * rails_12factor (0.0.3)\n  * rails_serve_static_assets (0.0.5)\n  * rails_stdout_logging (0.0.5)\n  * rake (11.2.2)\n ...Macintosh HD 2/code/art-steps \ue0b0 \ue0a0 master \u2718 \u2739 \u271a \ue0b0\n$ bundle list|grep rspec             \n  * guard-rspec (4.7.3)\n  * rspec (2.99.0)\n  * rspec-collection_matchers (1.1.2)\n  * rspec-core (2.99.2)\n  * rspec-expectations (2.99.2)\n  * rspec-mocks (2.99.4)\n  * rspec-rails (2.99.0)\n ...Macintosh HD 2/code/art-steps \ue0b0 \ue0a0 master \u2718 \u2739 \u271a \ue0b0\n$ zeus --version        \nZeus version 0.15.3\n```\n\nDowngrading to 0.15.3 worked for me.\n. ",
    "pavel-d": "+1\n. @metcalf, seems so, I've recompiled the gem locally using go1.7.1 darwin/amd64, but the error is still there and the code reloading doesn't work :(\n. @metcalf, thanks! Sure, I'll dig a bit later this week\n. +1\n. @metcalf, seems so, I've recompiled the gem locally using go1.7.1 darwin/amd64, but the error is still there and the code reloading doesn't work :(\n. @metcalf, thanks! Sure, I'll dig a bit later this week\n. ",
    "bingxie": "+1\n. +1\n. ",
    "ianforsyth": "+1\n. +1\n. ",
    "thuanbuitinypulse": "+1\n. +1\n. ",
    "tw5475": "+3\n. +3\n. ",
    "alexpinsky": "+1. +1. ",
    "excalq": "Any update on this? I'm seeing it with zeus-0.15.10 running Rspec 2.14.8, with a Rails 3.2 app, running Ruby 2.1.5 (rbenv).. Any update on this? I'm seeing it with zeus-0.15.10 running Rspec 2.14.8, with a Rails 3.2 app, running Ruby 2.1.5 (rbenv).. ",
    "dmahlow": "It looks like the 'invoke' class method called in https://github.com/burke/zeus/pull/514/commits/954894af8c1d69af958860ea7f2bd2333283b91f is only available in rspec from version 3.0.0 forward: https://github.com/rspec/rspec-core/commit/0728973744e6463dd9701e0dfd2627f3c37d8367\r\n\r\nSo if you don't want to downgrade zeus, you can also try to upgrade rspec to ~> 3.0.0 . This still seems to be an issue with 0.15.12.. Confirmed working in 0.15.13.pre. Thanks!. It looks like the 'invoke' class method called in https://github.com/burke/zeus/pull/514/commits/954894af8c1d69af958860ea7f2bd2333283b91f is only available in rspec from version 3.0.0 forward: https://github.com/rspec/rspec-core/commit/0728973744e6463dd9701e0dfd2627f3c37d8367\r\n\r\nSo if you don't want to downgrade zeus, you can also try to upgrade rspec to ~> 3.0.0 . This still seems to be an issue with 0.15.12.. Confirmed working in 0.15.13.pre. Thanks!. ",
    "salamagd": "Hmm, having the same problem with an existing project in Sierra, will see if I can reproduce it on a new project too.\n. Hmm, having the same problem with an existing project in Sierra, will see if I can reproduce it on a new project too.\n. ",
    "metalelf0": "I'm having the same exact issues as @pavel-d, Sierra 10.12 and zeus 0.15.10. Being stuck on Rails 3 never felt so bad. :(\n. I'm having the same exact issues as @pavel-d, Sierra 10.12 and zeus 0.15.10. Being stuck on Rails 3 never felt so bad. :(\n. ",
    "kyleholzinger": "Is this still open? It seems like it's more of an issue with fsevents\n. Right, was just wondering since this seems like an issue with cgo, not zeus @zubin\n. @antifuchs it's not zeus' fsevents specifically, it's cgo-- [this is the line](https://github.com/fsnotify/fsevents/blob/master/fsevents.go#L265) that it's breaking on, which is an external call\n\nBut either way, a switch off of fsevents would fix the issue \ud83d\ude02 \n. @antifuchs I'm not 100% positive but I think it [uses the go one](https://github.com/burke/zeus/blob/d51e0f188dd8d8135a177ed1f312befe201281b5/vendor/github.com/fsnotify/fsevents/fsevents.go)\n. Interesting, I wonder if they moved from native fsevents/self-packaged to cgo fsevents @pietdaniel \n. @andrew-stripe running now \n. @andrew-stripe @metcalf  just got this:\n\n```\nError: Package \"/Users/Kyle/workspace/zeus\" not a go package or not in GOPATH\n```\n\nI tried both adding it to `$GOPATH` as well as moving it inside of my go directory, neither worked\n. I feel like from now on if this fixed anyones issue just respond with a reaction to one of the other messages haha. Plz no more emails \u2764\ufe0f . Is this still open? It seems like it's more of an issue with fsevents\n. Right, was just wondering since this seems like an issue with cgo, not zeus @zubin\n. @antifuchs it's not zeus' fsevents specifically, it's cgo-- [this is the line](https://github.com/fsnotify/fsevents/blob/master/fsevents.go#L265) that it's breaking on, which is an external call\n\nBut either way, a switch off of fsevents would fix the issue \ud83d\ude02 \n. @antifuchs I'm not 100% positive but I think it [uses the go one](https://github.com/burke/zeus/blob/d51e0f188dd8d8135a177ed1f312befe201281b5/vendor/github.com/fsnotify/fsevents/fsevents.go)\n. Interesting, I wonder if they moved from native fsevents/self-packaged to cgo fsevents @pietdaniel \n. @andrew-stripe running now \n. @andrew-stripe @metcalf  just got this:\n\n```\nError: Package \"/Users/Kyle/workspace/zeus\" not a go package or not in GOPATH\n```\n\nI tried both adding it to `$GOPATH` as well as moving it inside of my go directory, neither worked\n. I feel like from now on if this fixed anyones issue just respond with a reaction to one of the other messages haha. Plz no more emails \u2764\ufe0f . ",
    "mix86": "I'm having the same issue too. Sierra 10.12 (16A323), ruby 2.1.6p336, zeus 0.15.10.\nAfter start i see \n\n```\n2016-10-03 19:46 zeus-darwin-amd64[27141] (FSEvents.framework) FSEventStreamStart: register_with_server: ERROR: f2d_register_rpc() => (null) (-22)\n```\n\nand zeus does not reload code\n\n```\nuname -a\nDarwin mixael-osx.local 16.0.0 Darwin Kernel Version 16.0.0: Mon Aug 29 17:56:20 PDT 2016; root:xnu-3789.1.32~3/RELEASE_X86_64 x86_64\n```\n. I'm having the same issue too. Sierra 10.12 (16A323), ruby 2.1.6p336, zeus 0.15.10.\nAfter start i see \n\n```\n2016-10-03 19:46 zeus-darwin-amd64[27141] (FSEvents.framework) FSEventStreamStart: register_with_server: ERROR: f2d_register_rpc() => (null) (-22)\n```\n\nand zeus does not reload code\n\n```\nuname -a\nDarwin mixael-osx.local 16.0.0 Darwin Kernel Version 16.0.0: Mon Aug 29 17:56:20 PDT 2016; root:xnu-3789.1.32~3/RELEASE_X86_64 x86_64\n```\n. ",
    "zubin": "@kyleholzinger Yes it's still open. The \"closed\" above your comment refers to the PR on the left which mentions this PR. \n. @kyleholzinger Yes it's still open. The \"closed\" above your comment refers to the PR on the left which mentions this PR. \n. ",
    "dsounded": "+1\n. +1\n. ",
    "artforlife": "Was anyone able to resolve this? I come from React-native side and following their steps didnt help to resolve it. \n. I was able to resolve it as follows: https://github.com/facebook/react-native/issues/9309#issuecomment-238966924\n. Was anyone able to resolve this? I come from React-native side and following their steps didnt help to resolve it. \n. I was able to resolve it as follows: https://github.com/facebook/react-native/issues/9309#issuecomment-238966924\n. ",
    "mikz": "Changing max files as suggested does not fix it for me.\n. Changing max files as suggested does not fix it for me.\n. ",
    "pariser": "@metcalf need a computer running Sierra to test? Wanna swing by one of these days?! I'm also experiencing this error and would be happy to help :-p\n. I'm not seeing any reloading behavior in v0.15.4 or v0.15.10. (Nor am I seeing any error messages in v0.15.4).\n. @metcalf need a computer running Sierra to test? Wanna swing by one of these days?! I'm also experiencing this error and would be happy to help :-p\n. I'm not seeing any reloading behavior in v0.15.4 or v0.15.10. (Nor am I seeing any error messages in v0.15.4).\n. ",
    "andrew-stripe": "@pariser (or anyone else) any chance you have a Go environment set up and can try running `make test` under Sierra? I'm really hoping we can repro this in tests, add a test to https://github.com/fsnotify/fsevents that also repros the problem and fix it there.\n. (err, sorry @andrew-stripe == @metcalf, I'm signed in from my work account)\n. @kyleholzinger: Go likes a [very particular directory structure](https://golang.org/doc/code.html#Organization). You need to set a `GOPATH` environment variable and place Zeus in `$GOPATH/src/github.com/burke/zeus`.\n. That snippet of output only refers to the Ruby tests, I'd have expected to see failures (if any) in the Go tests. Those look like:\n\n```\nZEUS_TEST_GEMPATH=\"/Users/andrew/code/go/src/github.com/burke/zeus/rubygem\" GO15VENDOREXPERIMENT=1 govendor test +local\n?       github.com/burke/zeus/go/clienthandler  [no test files]\n?       github.com/burke/zeus/go/cmd/zeus   [no test files]\n?       github.com/burke/zeus/go/config [no test files]\nok      github.com/burke/zeus/go/filemonitor    1.391s\n?       github.com/burke/zeus/go/messages   [no test files]\n?       github.com/burke/zeus/go/processtree    [no test files]\n?       github.com/burke/zeus/go/shinylog   [no test files]\n?       github.com/burke/zeus/go/statuschart    [no test files]\nok      github.com/burke/zeus/go/unixsocket 0.008s\n?       github.com/burke/zeus/go/zerror [no test files]\n?       github.com/burke/zeus/go/zeusclient [no test files]\nok      github.com/burke/zeus/go/zeusmaster 1.954s\n?       github.com/burke/zeus/go/zeusversion    [no test files]\n```\n. Hmm, doesn't fail tests, that makes life more difficult. That would be consistent with the explanation that it has to do with max file limits since the tests watch very few files. Recent versions of Watchman encourage you to watch an entire project directory which may help avoid this.\n\nI'm not sure whether errors from the file watching code were surfaced in the same way in 0.15.4. It may have the same issue and is just swallowing the error message. Can anyone confirm whether they observe reloading on file changes on Sierra in 0.15.4 and not 0.15.10 (regardless of any error messages)?\n. Sounds like this was always broken and the old file monitor just swallowed the error messages. That's not surprising given how it worked.\n\nMy barely-informed guess is that this has to do with Zeus tracking each individual file instead of setting up a watch on the project directory. The test suite doesn't track enough files to hit any kind of limit and raising the maxfiles limit works for some projects. Assuming this is correct, the fix could be local to the filemonitor package but it wouldn't be trivial. It's also possible that something in https://github.com/fsnotify/fsevents/blob/master/fsevents.go is broken for Sierra.\n\nWe've decided to move away from Zeus in favor of our own code loader with [Watchman](https://github.com/facebook/watchman) for file monitoring. I'm happy to help review changes and answer questions but I don't expect to be investing much more in Zeus.\n. Unfortunately nothing off the shelf. We're building internal tooling that's\nsomewhat specific to our codebase. I'm hoping to open source the work\nsomeday, but given that we're only about to go into internal beta that\ncould be quite awhile.\n\nOn Thu, Nov 10, 2016 at 5:41 AM, Alexey Kuznetsov notifications@github.com\nwrote:\n\n> @andrew-stripe https://github.com/andrew-stripe Do you have some\n> examples of replacing zeus with watchman?\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/burke/zeus/issues/589#issuecomment-259692295, or mute\n> the thread\n> https://github.com/notifications/unsubscribe-auth/AWAzbFsp6MkIAjVlON2K0z-8lGP6KcCYks5q8x7ugaJpZM4J5EKO\n> .\n. @pariser (or anyone else) any chance you have a Go environment set up and can try running `make test` under Sierra? I'm really hoping we can repro this in tests, add a test to https://github.com/fsnotify/fsevents that also repros the problem and fix it there.\n. (err, sorry @andrew-stripe == @metcalf, I'm signed in from my work account)\n. @kyleholzinger: Go likes a [very particular directory structure](https://golang.org/doc/code.html#Organization). You need to set a `GOPATH` environment variable and place Zeus in `$GOPATH/src/github.com/burke/zeus`.\n. That snippet of output only refers to the Ruby tests, I'd have expected to see failures (if any) in the Go tests. Those look like:\n\n```\nZEUS_TEST_GEMPATH=\"/Users/andrew/code/go/src/github.com/burke/zeus/rubygem\" GO15VENDOREXPERIMENT=1 govendor test +local\n?       github.com/burke/zeus/go/clienthandler  [no test files]\n?       github.com/burke/zeus/go/cmd/zeus   [no test files]\n?       github.com/burke/zeus/go/config [no test files]\nok      github.com/burke/zeus/go/filemonitor    1.391s\n?       github.com/burke/zeus/go/messages   [no test files]\n?       github.com/burke/zeus/go/processtree    [no test files]\n?       github.com/burke/zeus/go/shinylog   [no test files]\n?       github.com/burke/zeus/go/statuschart    [no test files]\nok      github.com/burke/zeus/go/unixsocket 0.008s\n?       github.com/burke/zeus/go/zerror [no test files]\n?       github.com/burke/zeus/go/zeusclient [no test files]\nok      github.com/burke/zeus/go/zeusmaster 1.954s\n?       github.com/burke/zeus/go/zeusversion    [no test files]\n```\n. Hmm, doesn't fail tests, that makes life more difficult. That would be consistent with the explanation that it has to do with max file limits since the tests watch very few files. Recent versions of Watchman encourage you to watch an entire project directory which may help avoid this.\n\nI'm not sure whether errors from the file watching code were surfaced in the same way in 0.15.4. It may have the same issue and is just swallowing the error message. Can anyone confirm whether they observe reloading on file changes on Sierra in 0.15.4 and not 0.15.10 (regardless of any error messages)?\n. Sounds like this was always broken and the old file monitor just swallowed the error messages. That's not surprising given how it worked.\n\nMy barely-informed guess is that this has to do with Zeus tracking each individual file instead of setting up a watch on the project directory. The test suite doesn't track enough files to hit any kind of limit and raising the maxfiles limit works for some projects. Assuming this is correct, the fix could be local to the filemonitor package but it wouldn't be trivial. It's also possible that something in https://github.com/fsnotify/fsevents/blob/master/fsevents.go is broken for Sierra.\n\nWe've decided to move away from Zeus in favor of our own code loader with [Watchman](https://github.com/facebook/watchman) for file monitoring. I'm happy to help review changes and answer questions but I don't expect to be investing much more in Zeus.\n. Unfortunately nothing off the shelf. We're building internal tooling that's\nsomewhat specific to our codebase. I'm hoping to open source the work\nsomeday, but given that we're only about to go into internal beta that\ncould be quite awhile.\n\nOn Thu, Nov 10, 2016 at 5:41 AM, Alexey Kuznetsov notifications@github.com\nwrote:\n\n> @andrew-stripe https://github.com/andrew-stripe Do you have some\n> examples of replacing zeus with watchman?\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/burke/zeus/issues/589#issuecomment-259692295, or mute\n> the thread\n> https://github.com/notifications/unsubscribe-auth/AWAzbFsp6MkIAjVlON2K0z-8lGP6KcCYks5q8x7ugaJpZM4J5EKO\n> .\n. ",
    "mcolyer": "@andrew-stripe I just had a clean run on eb88f0816fd with `go version go1.7.3 darwin/amd64` on `10.12.1`.\n\n```\ncd rubygem && bin/rspec\n.............................\n\nFinished in 0.02885 seconds (files took 0.09957 seconds to load)\n29 examples, 0 failures\n\n```\n. Sorry about that, here's the output I have:\n\n```\nZEUS_TEST_GEMPATH=\"/Users/mcolyer/gopath/src/github.com/burke/zeus/rubygem\" GO15VENDOREXPERIMENT=1 govendor test +local\n?       github.com/burke/zeus/go/clienthandler  [no test files]\n?       github.com/burke/zeus/go/cmd/zeus       [no test files]\n?       github.com/burke/zeus/go/config [no test files]\nok      github.com/burke/zeus/go/filemonitor    1.256s\n?       github.com/burke/zeus/go/messages       [no test files]\n?       github.com/burke/zeus/go/processtree    [no test files]\n?       github.com/burke/zeus/go/shinylog       [no test files]\n?       github.com/burke/zeus/go/statuschart    [no test files]\nok      github.com/burke/zeus/go/unixsocket     0.008s\n?       github.com/burke/zeus/go/zerror [no test files]\n?       github.com/burke/zeus/go/zeusclient     [no test files]\nok      github.com/burke/zeus/go/zeusmaster     1.683s\n?       github.com/burke/zeus/go/zeusversion    [no test files]\n```\n. @andrew-stripe I just had a clean run on eb88f0816fd with `go version go1.7.3 darwin/amd64` on `10.12.1`.\n\n```\ncd rubygem && bin/rspec\n.............................\n\nFinished in 0.02885 seconds (files took 0.09957 seconds to load)\n29 examples, 0 failures\n\n```\n. Sorry about that, here's the output I have:\n\n```\nZEUS_TEST_GEMPATH=\"/Users/mcolyer/gopath/src/github.com/burke/zeus/rubygem\" GO15VENDOREXPERIMENT=1 govendor test +local\n?       github.com/burke/zeus/go/clienthandler  [no test files]\n?       github.com/burke/zeus/go/cmd/zeus       [no test files]\n?       github.com/burke/zeus/go/config [no test files]\nok      github.com/burke/zeus/go/filemonitor    1.256s\n?       github.com/burke/zeus/go/messages       [no test files]\n?       github.com/burke/zeus/go/processtree    [no test files]\n?       github.com/burke/zeus/go/shinylog       [no test files]\n?       github.com/burke/zeus/go/statuschart    [no test files]\nok      github.com/burke/zeus/go/unixsocket     0.008s\n?       github.com/burke/zeus/go/zerror [no test files]\n?       github.com/burke/zeus/go/zeusclient     [no test files]\nok      github.com/burke/zeus/go/zeusmaster     1.683s\n?       github.com/burke/zeus/go/zeusversion    [no test files]\n```\n. ",
    "semenovDL": "@andrew-stripe Do you have some examples of replacing zeus with watchman?\n. This issue related to https://github.com/burke/zeus/issues/589\n. @andrew-stripe Do you have some examples of replacing zeus with watchman?\n. This issue related to https://github.com/burke/zeus/issues/589\n. ",
    "yellow-beard": "I've switched to using [spring](https://github.com/rails/spring), seems it still works with the latest OSX sierra.\n. I've switched to using [spring](https://github.com/rails/spring), seems it still works with the latest OSX sierra.\n. ",
    "kenn": "From what I read in https://github.com/facebook/react-native/issues/9309 , it looks like it's a permission issue?. `0.15.13.pre` fixed the error for me! \ud83d\udc4d  Thank you @sideshowcoder !. I'm also seeing this, some time after upgraded to `0.15.13.pre`:\r\n\r\n```\r\nslavenode.go:215: [test_environment] read unix ->: EOF\r\nslavenode.go:215: [development_environment] read unix ->: EOF\r\n```\r\n\r\nand remove / reinstall gem does not help, so I'm kinda stuck here. Oddly enough, zeus still works for another project, so there seems to be project-specific persistent state somewhere.. Oops sorry, it occurred when there's an error in an initializer where ERB evaluation fails due to a stupid syntax error in a yml file.\r\n\r\n```\r\n# config.yml\r\nkey: <%= key: value %> # <= syntax error\r\n\r\n# syntax error, unexpected tLABEL (SyntaxError)\r\nERB.new(config.read).result\r\n```\r\n\r\nSorry for confusion.. @blimmer run without zeus, and confirm the issue is not related to zeus. Problems vary, but that's a start \ud83d\ude09 . From what I read in https://github.com/facebook/react-native/issues/9309 , it looks like it's a permission issue?. `0.15.13.pre` fixed the error for me! \ud83d\udc4d  Thank you @sideshowcoder !. I'm also seeing this, some time after upgraded to `0.15.13.pre`:\r\n\r\n```\r\nslavenode.go:215: [test_environment] read unix ->: EOF\r\nslavenode.go:215: [development_environment] read unix ->: EOF\r\n```\r\n\r\nand remove / reinstall gem does not help, so I'm kinda stuck here. Oddly enough, zeus still works for another project, so there seems to be project-specific persistent state somewhere.. Oops sorry, it occurred when there's an error in an initializer where ERB evaluation fails due to a stupid syntax error in a yml file.\r\n\r\n```\r\n# config.yml\r\nkey: <%= key: value %> # <= syntax error\r\n\r\n# syntax error, unexpected tLABEL (SyntaxError)\r\nERB.new(config.read).result\r\n```\r\n\r\nSorry for confusion.. @blimmer run without zeus, and confirm the issue is not related to zeus. Problems vary, but that's a start \ud83d\ude09 . ",
    "siannopollo": "It would be nice to see that commit by @sideshowcoder merged into master and a new gem released. Having to constantly restart zeus is kind of antithetical to its existence.. `0.15.13.pre` also fixed this issue for me. Thanks @sideshowcoder. @kyleholzinger Don't you find it ironic that in order to voice that opinion, you had to leave a comment that would send emails to everyone on this thread? I mean, Github provides a Subscribe/Unsubscribe button at the top of each issue if you don't want to be notified any more... \u00af\\_(\u30c4)_/\u00af. @kyleholzinger But you have no control over the actions of others. So instead of trying to dictate how others should behave to suit your preferences, why don't you use the tools that Github provides to achieve the experience you desire?. @kyleholzinger Is classifying a seemingly civil discourse as \"meaningless babel\" also proper GitHub etiquette? Since this has devolved to name-calling, _I'll_ unsubscribe from this thread now.. It would be nice to see that commit by @sideshowcoder merged into master and a new gem released. Having to constantly restart zeus is kind of antithetical to its existence.. `0.15.13.pre` also fixed this issue for me. Thanks @sideshowcoder. @kyleholzinger Don't you find it ironic that in order to voice that opinion, you had to leave a comment that would send emails to everyone on this thread? I mean, Github provides a Subscribe/Unsubscribe button at the top of each issue if you don't want to be notified any more... \u00af\\_(\u30c4)_/\u00af. @kyleholzinger But you have no control over the actions of others. So instead of trying to dictate how others should behave to suit your preferences, why don't you use the tools that Github provides to achieve the experience you desire?. @kyleholzinger Is classifying a seemingly civil discourse as \"meaningless babel\" also proper GitHub etiquette? Since this has devolved to name-calling, _I'll_ unsubscribe from this thread now.. ",
    "heshamsalman": "\ud83c\udfad . \ud83c\udfad . ",
    "NateGreat8": "I worked around it by adding the dir spec to the command\n\nzeus test spec\n\nZeus invokes Rspec\nRSpec::Core::Runner.invoke\n\nAnd Rspec expects ARGV to contain the dir path to run.\nstatus = run(ARGV, $stderr, $stdout).to_i\n\nwhich calls\n\nline 64: rspec-core-3.5.4/lib/rspec/core/runner.rb\ndef self.run(args, err=$stderr, out=$stdout)\n\nand configures what dir to run for tests.\n\nSo Rspec expects the test dir to be explicitly set in the arguments when being invoked.\n. I worked around it by adding the dir spec to the command\n\nzeus test spec\n\nZeus invokes Rspec\nRSpec::Core::Runner.invoke\n\nAnd Rspec expects ARGV to contain the dir path to run.\nstatus = run(ARGV, $stderr, $stdout).to_i\n\nwhich calls\n\nline 64: rspec-core-3.5.4/lib/rspec/core/runner.rb\ndef self.run(args, err=$stderr, out=$stdout)\n\nand configures what dir to run for tests.\n\nSo Rspec expects the test dir to be explicitly set in the arguments when being invoked.\n. ",
    "gltarsa": "I would add to @sideshowcoder's comment that testarting Zeus is not necessary; retrying the command will eventually succeed.  This supports the idea of a race condition of some kind.\r\n. I can concur that the downgrade alleviates the immediate pain. Thanks, @maestromac!\r\n\r\nrails (4.2.7.1)\r\npry (0.10.4)\r\npry-byebug (3.4.0)\r\n\r\nOSX Sierra\r\n. I would add to @sideshowcoder's comment that testarting Zeus is not necessary; retrying the command will eventually succeed.  This supports the idea of a race condition of some kind.\r\n. I can concur that the downgrade alleviates the immediate pain. Thanks, @maestromac!\r\n\r\nrails (4.2.7.1)\r\npry (0.10.4)\r\npry-byebug (3.4.0)\r\n\r\nOSX Sierra\r\n. ",
    "brunzino": "Closing to merge updated passing Travis CI tests. Will create new PR. \n. @sideshowcoder - Thanks for the comments. I've made changes, but at this point am a little unsure how to proceed. Should I close this Pull Request and create another with the changes? . Ahh, I see since I pushed the latest commit with the updates, the Travis CI build is re-assessing. . Closing to merge updated passing Travis CI tests. Will create new PR. \n. @sideshowcoder - Thanks for the comments. I've made changes, but at this point am a little unsure how to proceed. Should I close this Pull Request and create another with the changes? . Ahh, I see since I pushed the latest commit with the updates, the Travis CI build is re-assessing. . ",
    "nisavid": "I'm still seeing this with 0.15.13.pre.  Happens with `zeus rake`, `zeus rspec`, and perhaps others.  When this happens, the exit code is usually/always 143.. I'm still seeing this with 0.15.13.pre.  Happens with `zeus rake`, `zeus rspec`, and perhaps others.  When this happens, the exit code is usually/always 143.. ",
    "seanpcoyle": "I'm seeing the same thing on Sierra:\n\n```\nfailed MSpanList_Insert 0x3a9790 0x22527c9c1e1e1 0x0\n\nfatal error: MSpanList_Insert\n\ngoroutine 5 [running]:\nruntime.throw(0x2e7b4c)\n    /usr/local/go/src/pkg/runtime/panic.c:464 +0x69 fp=0x67bca8\nruntime.MSpanList_Insert(0x3002a0, 0x3a9790)\n    /usr/local/go/src/pkg/runtime/mheap.c:544 +0x8a fp=0x67bcd0\nMHeap_FreeLocked(0x2fd3e0, 0x3a9790)\n    /usr/local/go/src/pkg/runtime/mheap.c:377 +0x12a fp=0x67bd18\nMHeap_AllocLocked(0x2fd3e0, 0x1, 0x1d)\n    /usr/local/go/src/pkg/runtime/mheap.c:178 +0x228 fp=0x67bd58\nruntime.MHeap_Alloc(0x2fd3e0, 0x1, 0x1d, 0x1)\n    /usr/local/go/src/pkg/runtime/mheap.c:95 +0x7b fp=0x67bd80\nMCentral_Grow(0x305e20)\n    /usr/local/go/src/pkg/runtime/mcentral.c:180 +0x8c fp=0x67bde0\nruntime.MCentral_AllocList(0x305e20, 0x3a41e0)\n    /usr/local/go/src/pkg/runtime/mcentral.c:46 +0x4f fp=0x67be08\nruntime.MCache_Refill(0x3a4000, 0x1d)\n    /usr/local/go/src/pkg/runtime/mcache.c:22 +0x7c fp=0x67be28\nruntime.mallocgc(0x400, 0x103261, 0x1)\n    /private/var/folders/00/0sdwh000h01000cxqpysvccm0035qk/T/makerelease260794574/go/src/pkg/runtime/malloc.goc:71 +0xff fp=0x67be98\ncnew(0x103260, 0x400, 0xc200000001)\n    /private/var/folders/00/0sdwh000h01000cxqpysvccm0035qk/T/makerelease260794574/go/src/pkg/runtime/malloc.goc:718 +0xc1 fp=0x67beb8\nruntime.cnewarray(0x103260, 0x400)\n    /private/var/folders/00/0sdwh000h01000cxqpysvccm0035qk/T/makerelease260794574/go/src/pkg/runtime/malloc.goc:731 +0x3a fp=0x67bed8\nmakeslice1(0xfb1e0, 0x400, 0x400, 0x67bf38)\n    /usr/local/go/src/pkg/runtime/slice.c:57 +0x4d fp=0x67bef0\nruntime.makeslice(0xfb1e0, 0x400, 0x400, 0x400, 0x400, ...)\n    /usr/local/go/src/pkg/runtime/slice.c:38 +0x98 fp=0x67bf20\ngithub.com/burke/zeus/go/zeusclient.func\u00b7003()\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/zeusclient/zeusclient.go:146 +0x4a fp=0x67bfa0\nruntime.goexit()\n    /usr/local/go/src/pkg/runtime/proc.c:1394 fp=0x67bfa8\ncreated by github.com/burke/zeus/go/zeusclient.doRun\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/zeusclient/zeusclient.go:154 +0xb5d\n\ngoroutine 1 [chan receive]:\ngithub.com/burke/zeus/go/zeusclient.doRun(0x0)\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/zeusclient/zeusclient.go:181 +0xbc1\ngithub.com/burke/zeus/go/zeusclient.Run()\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/zeusclient/zeusclient.go:27 +0x1e\nmain.main()\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:86 +0x713\n\ngoroutine 3 [syscall]:\nos/signal.loop()\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:21 +0x1e\ncreated by os/signal.init\u00b71\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:27 +0x31\n\ngoroutine 6 [syscall]:\nsyscall.Syscall(0x3, 0x0, 0xc210073000, 0x2000, 0x21349, ...)\n    /usr/local/go/src/pkg/syscall/asm_darwin_amd64.s:17 +0x5\nsyscall.read(0x0, 0xc210073000, 0x2000, 0x2000, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:900 +0x72\nsyscall.Read(0x0, 0xc210073000, 0x2000, 0x2000, 0x1, ...)\n    /usr/local/go/src/pkg/syscall/syscall_unix.go:135 +0x5c\nos.(*File).read(0xc210000000, 0xc210073000, 0x2000, 0x2000, 0x1e6f8, ...)\n    /usr/local/go/src/pkg/os/file_unix.go:180 +0x62\nos.(*File).Read(0xc210000000, 0xc210073000, 0x2000, 0x2000, 0x2000, ...)\n    /usr/local/go/src/pkg/os/file.go:95 +0x98\n\ngithub.com/burke/zeus/go/zeusclient.func\u00b7004()\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/zeusclient/zeusclient.go:159 +0xb1\ncreated by github.com/burke/zeus/go/zeusclient.doRun\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/zeusclient/zeusclient.go:179 +0xba5\n\ngoroutine 7 [finalizer wait]:\nruntime.park(0xd7c0, 0x2eaf98, 0x2e9de8)\n    /usr/local/go/src/pkg/runtime/proc.c:1342 +0x66\nrunfinq()\n    /usr/local/go/src/pkg/runtime/mgc0.c:2279 +0x84\nruntime.goexit()\n    /usr/local/go/src/pkg/runtime/proc.c:1394\n```\n. I'm seeing the same thing on Sierra:\n\n```\nfailed MSpanList_Insert 0x3a9790 0x22527c9c1e1e1 0x0\n\nfatal error: MSpanList_Insert\n\ngoroutine 5 [running]:\nruntime.throw(0x2e7b4c)\n    /usr/local/go/src/pkg/runtime/panic.c:464 +0x69 fp=0x67bca8\nruntime.MSpanList_Insert(0x3002a0, 0x3a9790)\n    /usr/local/go/src/pkg/runtime/mheap.c:544 +0x8a fp=0x67bcd0\nMHeap_FreeLocked(0x2fd3e0, 0x3a9790)\n    /usr/local/go/src/pkg/runtime/mheap.c:377 +0x12a fp=0x67bd18\nMHeap_AllocLocked(0x2fd3e0, 0x1, 0x1d)\n    /usr/local/go/src/pkg/runtime/mheap.c:178 +0x228 fp=0x67bd58\nruntime.MHeap_Alloc(0x2fd3e0, 0x1, 0x1d, 0x1)\n    /usr/local/go/src/pkg/runtime/mheap.c:95 +0x7b fp=0x67bd80\nMCentral_Grow(0x305e20)\n    /usr/local/go/src/pkg/runtime/mcentral.c:180 +0x8c fp=0x67bde0\nruntime.MCentral_AllocList(0x305e20, 0x3a41e0)\n    /usr/local/go/src/pkg/runtime/mcentral.c:46 +0x4f fp=0x67be08\nruntime.MCache_Refill(0x3a4000, 0x1d)\n    /usr/local/go/src/pkg/runtime/mcache.c:22 +0x7c fp=0x67be28\nruntime.mallocgc(0x400, 0x103261, 0x1)\n    /private/var/folders/00/0sdwh000h01000cxqpysvccm0035qk/T/makerelease260794574/go/src/pkg/runtime/malloc.goc:71 +0xff fp=0x67be98\ncnew(0x103260, 0x400, 0xc200000001)\n    /private/var/folders/00/0sdwh000h01000cxqpysvccm0035qk/T/makerelease260794574/go/src/pkg/runtime/malloc.goc:718 +0xc1 fp=0x67beb8\nruntime.cnewarray(0x103260, 0x400)\n    /private/var/folders/00/0sdwh000h01000cxqpysvccm0035qk/T/makerelease260794574/go/src/pkg/runtime/malloc.goc:731 +0x3a fp=0x67bed8\nmakeslice1(0xfb1e0, 0x400, 0x400, 0x67bf38)\n    /usr/local/go/src/pkg/runtime/slice.c:57 +0x4d fp=0x67bef0\nruntime.makeslice(0xfb1e0, 0x400, 0x400, 0x400, 0x400, ...)\n    /usr/local/go/src/pkg/runtime/slice.c:38 +0x98 fp=0x67bf20\ngithub.com/burke/zeus/go/zeusclient.func\u00b7003()\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/zeusclient/zeusclient.go:146 +0x4a fp=0x67bfa0\nruntime.goexit()\n    /usr/local/go/src/pkg/runtime/proc.c:1394 fp=0x67bfa8\ncreated by github.com/burke/zeus/go/zeusclient.doRun\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/zeusclient/zeusclient.go:154 +0xb5d\n\ngoroutine 1 [chan receive]:\ngithub.com/burke/zeus/go/zeusclient.doRun(0x0)\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/zeusclient/zeusclient.go:181 +0xbc1\ngithub.com/burke/zeus/go/zeusclient.Run()\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/zeusclient/zeusclient.go:27 +0x1e\nmain.main()\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:86 +0x713\n\ngoroutine 3 [syscall]:\nos/signal.loop()\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:21 +0x1e\ncreated by os/signal.init\u00b71\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:27 +0x31\n\ngoroutine 6 [syscall]:\nsyscall.Syscall(0x3, 0x0, 0xc210073000, 0x2000, 0x21349, ...)\n    /usr/local/go/src/pkg/syscall/asm_darwin_amd64.s:17 +0x5\nsyscall.read(0x0, 0xc210073000, 0x2000, 0x2000, 0x0, ...)\n    /usr/local/go/src/pkg/syscall/zsyscall_darwin_amd64.go:900 +0x72\nsyscall.Read(0x0, 0xc210073000, 0x2000, 0x2000, 0x1, ...)\n    /usr/local/go/src/pkg/syscall/syscall_unix.go:135 +0x5c\nos.(*File).read(0xc210000000, 0xc210073000, 0x2000, 0x2000, 0x1e6f8, ...)\n    /usr/local/go/src/pkg/os/file_unix.go:180 +0x62\nos.(*File).Read(0xc210000000, 0xc210073000, 0x2000, 0x2000, 0x2000, ...)\n    /usr/local/go/src/pkg/os/file.go:95 +0x98\n\ngithub.com/burke/zeus/go/zeusclient.func\u00b7004()\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/zeusclient/zeusclient.go:159 +0xb1\ncreated by github.com/burke/zeus/go/zeusclient.doRun\n    /Users/nick/Work/gopath/src/github.com/burke/zeus/go/zeusclient/zeusclient.go:179 +0xba5\n\ngoroutine 7 [finalizer wait]:\nruntime.park(0xd7c0, 0x2eaf98, 0x2e9de8)\n    /usr/local/go/src/pkg/runtime/proc.c:1342 +0x66\nrunfinq()\n    /usr/local/go/src/pkg/runtime/mgc0.c:2279 +0x84\nruntime.goexit()\n    /usr/local/go/src/pkg/runtime/proc.c:1394\n```\n. ",
    "ahs8w": "+1\n. +1\n. ",
    "smtlaissezfaire": "same here. FYI I'm running zeus-0.15.4, I'll try upgrading to the latest.. same here. FYI I'm running zeus-0.15.4, I'll try upgrading to the latest.. ",
    "Ninigi": "I was running into the same problem, updating to version 0.15.10 seems to have solved the issue. Since I saw a similar issue in various github repos, it seems to be a problem with the golang version? Anyways, updating the version got rid of the  issue for me.. I was running into the same problem, updating to version 0.15.10 seems to have solved the issue. Since I saw a similar issue in various github repos, it seems to be a problem with the golang version? Anyways, updating the version got rid of the  issue for me.. ",
    "Ommy": "I ran the update of Sierra to 10.12.1 and running again I get the following:\n\n```\n$ uname -a\nDarwin fasih.local 16.1.0 Darwin Kernel Version 16.1.0: Thu Oct 13 21:26:57 PDT 2016; root:xnu-3789.21.3~60/RELEASE_X86_64 x86_64\n$ zeus --log /dev/stderr start\nStarting Zeus server v0.15.10\n2016/11/15 21:01:57.306950 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:139] test_helper/(no PID) entering state SUnbooted\n2016/11/15 21:01:57.306975 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:139] prerake/(no PID) entering state SUnbooted\n2016/11/15 21:01:57.306993 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:139] test_environment/(no PID) entering state SUnbooted\n2016/11/15 21:01:57.307048 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:139] development_environment/(no PID) entering state SUnbooted\n2016/11/15 21:01:57.307052 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:139] boot/(no PID) entering state SUnbooted\n2016/11/15 21:01:57.307201 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:373] boot/(no PID) running the root command now\n2016/11/15 21:01:57.307064 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:139] default_bundle/(no PID) entering state SUnbooted\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus rake\nzeus runner (alias: r)\nzeus console (alias: c)\nzeus server (alias: s)\nzeus generate (alias: g)\nzeus destroy (alias: d)\nzeus dbconsole\nzeus test (alias: rspec, testrb)\n1969/12/31 16:00:00.000000 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:211] boot/(3341) received action message\nslavenode.go:209: read unix ->: EOF\nfatal error: unexpected signal during runtime execution\nfatal error: unexpected signal during runtime execution\nfatal error: unexpected signal during runtime execution\n[signal 0xb code=0x1 addr=0x22b949a4d4 pc=0x40d64f0]\n\ngoroutine 19 [running]:\nruntime.throw(0x4227b00, 0x2a)\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/panic.go:547 +0x90 fp=0xc82012ac78 sp=0xc82012ac60\nruntime.sigpanic()\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/sigpanic_unix.go:12 +0x5a fp=0xc82012acc8 sp=0xc82012ac78\nsync.(*Pool).Get(0x42e5390, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/sync/pool.go:102 +0x40 fp=0xc82012ad18 sp=0xc82012acc8\nfmt.newPrinter(0x10)\n    /usr/local/Cellar/go/1.6.2/libexec/src/fmt/print.go:133 +0x27 fp=0xc82012ad58 sp=0xc82012ad18\nfmt.Sprintf(0x420aac0, 0x13, 0xc82012aea0, 0x3, 0x3, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/fmt/print.go:202 +0x2b fp=0xc82012ada8 sp=0xc82012ad58\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).trace(0xc8200aa000, 0x420cc60, 0x17, 0x0, 0x0, 0x0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:430 +0x800 fp=0xc82012af18 sp=0xc82012ada8\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xc8200aa000, 0xc820108000)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:148 +0x26f fp=0xc82012afa0 sp=0xc82012af18\nruntime.goexit()\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/asm_amd64.s:1998 +0x1 fp=0xc82012afa8 sp=0xc82012afa0\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor.func1\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:53 +0x27f\n\ngoroutine 1 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster.Run(0x41f2e90, 0x9, 0x11e1a300, 0x0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:54 +0x35a\nmain.main()\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:78 +0x5e5\n\ngoroutine 17 [syscall, locked to thread]:\nruntime.goexit()\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/asm_amd64.s:1998 +0x1\n\ngoroutine 5 [syscall]:\nos/signal.signal_recv(0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/sigqueue.go:116 +0x132\nos/signal.loop()\n    /usr/local/Cellar/go/1.6.2/libexec/src/os/signal/signal_unix.go:22 +0x18\ncreated by os/signal.init.1\n    /usr/local/Cellar/go/1.6.2/libexec/src/os/signal/signal_unix.go:28 +0x37\n\ngoroutine 6 [chan receive]:\ngithub.com/burke/zeus/go/filemonitor.(*fsEventsMonitor).handleAdd(0xc82000a800)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/filemonitor/filemonitor_darwin.go:86 +0x110\ncreated by github.com/burke/zeus/go/filemonitor.NewFileMonitor\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/filemonitor/filemonitor_darwin.go:34 +0x1e8\n\ngoroutine 7 [select]:\ngithub.com/burke/zeus/go/processtree.StartSlaveMonitor.func1(0xc82000a880, 0xc820018d20, 0xc820018c60, 0xc820018cc0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:57 +0x455\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:67 +0x71\n\ngoroutine 8 [select]:\ngithub.com/burke/zeus/go/clienthandler.Start.func1(0xc820018d80, 0xc820018c60, 0xc82000a880)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:45 +0x286\ncreated by github.com/burke/zeus/go/clienthandler.Start\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:54 +0x67\n\ngoroutine 9 [running]:\n    goroutine running on other thread; stack unavailable\ncreated by github.com/burke/zeus/go/statuschart.ttyStart\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/statuschart/tty.go:50 +0x3f\n\ngoroutine 10 [select]:\ngithub.com/burke/zeus/go/statuschart.(*StatusChart).watchUpdates(0xc8200b2080, 0xc82005a150)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/statuschart/statuschart.go:62 +0x14a\ncreated by github.com/burke/zeus/go/statuschart.Start\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/statuschart/statuschart.go:51 +0x43b\n\ngoroutine 11 [select, locked to thread]:\nruntime.gopark(0x423aab0, 0xc820026f28, 0x41ea5b8, 0x6, 0x18, 0x2)\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/proc.go:262 +0x163\nruntime.selectgoImpl(0xc820026f28, 0x0, 0x18)\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/select.go:392 +0xa67\nruntime.selectgo(0xc820026f28)\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/select.go:215 +0x12\nruntime.ensureSigM.func1()\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/signal1_unix.go:279 +0x32c\nruntime.goexit()\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/asm_amd64.s:1998 +0x1\n\ngoroutine 18 [IO wait]:\nnet.runtime_pollWait(0x5140f30, 0x72, 0xc8200f5ac4)\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc820112060, 0x72, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc820112060, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).readMsg(0xc820112000, 0xc8200f5e88, 0x0, 0x0, 0xc820106080, 0x20, 0x20, 0xffffffffffffffff, 0x0, 0x0, ...)\n    /usr/local/Cellar/go/1.6.2/libexec/src/net/fd_unix.go:304 +0x33d\nnet.(*UnixConn).ReadMsgUnix(0xc8200f8010, 0xc8200f5e88, 0x0, 0x0, 0xc820106080, 0x20, 0x20, 0x1, 0x10, 0x0, ...)\n    /usr/local/Cellar/go/1.6.2/libexec/src/net/unixsock_posix.go:150 +0x15f\ngithub.com/burke/zeus/go/unixsocket.(*oobReader).Read(0xc82010a0c0, 0xc8200f5e88, 0x0, 0x0, 0x40091a3, 0x0, 0x0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/unixsocket/oobreader.go:39 +0x8b\ngithub.com/burke/zeus/go/unixsocket.(*oobReader).ReadFD(0xc82010a0c0, 0x423ab50, 0x0, 0x0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/unixsocket/oobreader.go:24 +0x188\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadFD(0xc8201060a0, 0x0, 0x0, 0x0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/unixsocket/usock.go:79 +0x90\ngithub.com/burke/zeus/go/processtree.StartSlaveMonitor.func1.1(0xc8201060a0, 0xc820110100)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:44 +0x21\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor.func1\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:50 +0x1ea\n\ngoroutine 20 [chan receive]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doUnbootedState(0xc8200aa0e0, 0xc820108000, 0x0, 0x0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:190 +0x444\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xc8200aa0e0, 0xc820108000)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:140 +0x42b\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor.func1\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:53 +0x27f\n\ngoroutine 21 [chan receive]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doUnbootedState(0xc8200aa1c0, 0xc820108000, 0x0, 0x0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:190 +0x444\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xc8200aa1c0, 0xc820108000)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:140 +0x42b\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor.func1\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:53 +0x27f\n\ngoroutine 22 [chan receive]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doUnbootedState(0xc8200aa2a0, 0xc820108000, 0x0, 0x0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:190 +0x444\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xc8200aa2a0, 0xc820108000)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:140 +0x42b\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor.func1\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:53 +0x27f\n\ngoroutine 23 [chan receive]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doUnbootedState(0xc8200aa380, 0xc820108000, 0x0, 0x0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:190 +0x444\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xc8200aa380, 0xc820108000)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:140 +0x42b\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor.func1\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:53 +0x27f\n\ngoroutine 24 [chan receive]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doUnbootedState(0xc8200aa460, 0xc820108000, 0x0, 0x0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:190 +0x444\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xc8200aa460, 0xc820108000)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:140 +0x42b\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor.func1\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:53 +0x27f\n\ngoroutine 34 [IO wait]:\nnet.runtime_pollWait(0x5140e70, 0x72, 0x4650050)\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc82010c060, 0x72, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc82010c060, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).accept(0xc82010c000, 0x0, 0x5100070, 0xc820102060)\n    /usr/local/Cellar/go/1.6.2/libexec/src/net/fd_unix.go:426 +0x27c\nnet.(*UnixListener).AcceptUnix(0xc820102040, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/net/unixsock_posix.go:305 +0x53\ngithub.com/burke/zeus/go/clienthandler.Start.func1.1(0xc820102040, 0xc820124000)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:35 +0x33\ncreated by github.com/burke/zeus/go/clienthandler.Start.func1\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:42 +0x160\n\ngoroutine 25 [running]:\n    goroutine running on other thread; stack unavailable\ncreated by github.com/burke/zeus/go/processtree.(*SlaveNode).doUnbootedState\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:184 +0x3f3\n[signal 0xb code=0x1 addr=0x22b949a374 pc=0x40d64f0]\n\ngoroutine 25 [running]:\nruntime.throw(0x4227b00, 0x2a)\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/panic.go:547 +0x90 fp=0xc8200f1b58 sp=0xc8200f1b40\nruntime.sigpanic()\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/sigpanic_unix.go:12 +0x5a fp=0xc8200f1ba8 sp=0xc8200f1b58\nsync.(*Pool).Get(0x42e5390, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/sync/pool.go:102 +0x40 fp=0xc8200f1bf8 sp=0xc8200f1ba8\nfmt.newPrinter(0x10)\n    /usr/local/Cellar/go/1.6.2/libexec/src/fmt/print.go:133 +0x27 fp=0xc8200f1c38 sp=0xc8200f1bf8\nfmt.Sprintf(0x420aac0, 0x13, 0xc8200f1d80, 0x3, 0x3, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/fmt/print.go:202 +0x2b fp=0xc8200f1c88 sp=0xc8200f1c38\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).trace(0xc8200aa000, 0x422e300, 0x4a, 0xc8200f1f48, 0x2, 0x2)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:430 +0x800 fp=0xc8200f1df8 sp=0xc8200f1c88\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).babysitRootProcess(0xc8200aa000, 0xc82016c140)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:384 +0x42c fp=0xc8200f1fa0 sp=0xc8200f1df8\nruntime.goexit()\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/asm_amd64.s:1998 +0x1 fp=0xc8200f1fa8 sp=0xc8200f1fa0\ncreated by github.com/burke/zeus/go/processtree.(*SlaveNode).doUnbootedState\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:184 +0x3f3\n[signal 0xb code=0x1 addr=0x22b949a424 pc=0x40d64f0]\n\ngoroutine 9 [running]:\nruntime.throw(0x4227b00, 0x2a)\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/panic.go:547 +0x90 fp=0xc8200f4a98 sp=0xc8200f4a80\nruntime.sigpanic()\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/sigpanic_unix.go:12 +0x5a fp=0xc8200f4ae8 sp=0xc8200f4a98\nsync.(*Pool).Get(0x42e5390, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/sync/pool.go:102 +0x40 fp=0xc8200f4b38 sp=0xc8200f4ae8\nfmt.newPrinter(0xc820170360)\n    /usr/local/Cellar/go/1.6.2/libexec/src/fmt/print.go:133 +0x27 fp=0xc8200f4b78 sp=0xc8200f4b38\nfmt.Fprintf(0x4654308, 0xc82002e010, 0x41e9020, 0x5, 0xc8200f4ca0, 0x1, 0x1, 0x401169e, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/fmt/print.go:187 +0x30 fp=0xc8200f4bc0 sp=0xc8200f4b78\nfmt.Printf(0x41e9020, 0x5, 0xc8200f4ca0, 0x1, 0x1, 0x2d, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/fmt/print.go:197 +0x94 fp=0xc8200f4c28 sp=0xc8200f4bc0\ngithub.com/burke/zeus/go/statuschart.(*StatusChart).draw(0xc8200b2080)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/statuschart/tty.go:60 +0x19b fp=0xc8200f4cd0 sp=0xc8200f4c28\ngithub.com/burke/zeus/go/statuschart.ttyStart.func1(0xc820018de0, 0xc820018c60)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/statuschart/tty.go:45 +0x58f fp=0xc8200f4fa0 sp=0xc8200f4cd0\nruntime.goexit()\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/asm_amd64.s:1998 +0x1 fp=0xc8200f4fa8 sp=0xc8200f4fa0\ncreated by github.com/burke/zeus/go/statuschart.ttyStart\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/statuschart/tty.go:50 +0x3f\n```\n. I was able to resolve this issue by running a `gem pristine --all`. \n. I ran the update of Sierra to 10.12.1 and running again I get the following:\n\n```\n$ uname -a\nDarwin fasih.local 16.1.0 Darwin Kernel Version 16.1.0: Thu Oct 13 21:26:57 PDT 2016; root:xnu-3789.21.3~60/RELEASE_X86_64 x86_64\n$ zeus --log /dev/stderr start\nStarting Zeus server v0.15.10\n2016/11/15 21:01:57.306950 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:139] test_helper/(no PID) entering state SUnbooted\n2016/11/15 21:01:57.306975 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:139] prerake/(no PID) entering state SUnbooted\n2016/11/15 21:01:57.306993 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:139] test_environment/(no PID) entering state SUnbooted\n2016/11/15 21:01:57.307048 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:139] development_environment/(no PID) entering state SUnbooted\n2016/11/15 21:01:57.307052 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:139] boot/(no PID) entering state SUnbooted\n2016/11/15 21:01:57.307201 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:373] boot/(no PID) running the root command now\n2016/11/15 21:01:57.307064 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:139] default_bundle/(no PID) entering state SUnbooted\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n[ready] [crashed] [running] [connecting] [waiting]\nboot\n\u2514\u2500\u2500 default_bundle\n    \u251c\u2500\u2500 development_environment\n    \u2502\u00a0  \u2514\u2500\u2500 prerake\n    \u2514\u2500\u2500 test_environment\n        \u2514\u2500\u2500 test_helper\n\nAvailable Commands: [waiting] [crashed] [ready]\nzeus rake\nzeus runner (alias: r)\nzeus console (alias: c)\nzeus server (alias: s)\nzeus generate (alias: g)\nzeus destroy (alias: d)\nzeus dbconsole\nzeus test (alias: rspec, testrb)\n1969/12/31 16:00:00.000000 [/Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:211] boot/(3341) received action message\nslavenode.go:209: read unix ->: EOF\nfatal error: unexpected signal during runtime execution\nfatal error: unexpected signal during runtime execution\nfatal error: unexpected signal during runtime execution\n[signal 0xb code=0x1 addr=0x22b949a4d4 pc=0x40d64f0]\n\ngoroutine 19 [running]:\nruntime.throw(0x4227b00, 0x2a)\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/panic.go:547 +0x90 fp=0xc82012ac78 sp=0xc82012ac60\nruntime.sigpanic()\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/sigpanic_unix.go:12 +0x5a fp=0xc82012acc8 sp=0xc82012ac78\nsync.(*Pool).Get(0x42e5390, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/sync/pool.go:102 +0x40 fp=0xc82012ad18 sp=0xc82012acc8\nfmt.newPrinter(0x10)\n    /usr/local/Cellar/go/1.6.2/libexec/src/fmt/print.go:133 +0x27 fp=0xc82012ad58 sp=0xc82012ad18\nfmt.Sprintf(0x420aac0, 0x13, 0xc82012aea0, 0x3, 0x3, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/fmt/print.go:202 +0x2b fp=0xc82012ada8 sp=0xc82012ad58\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).trace(0xc8200aa000, 0x420cc60, 0x17, 0x0, 0x0, 0x0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:430 +0x800 fp=0xc82012af18 sp=0xc82012ada8\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xc8200aa000, 0xc820108000)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:148 +0x26f fp=0xc82012afa0 sp=0xc82012af18\nruntime.goexit()\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/asm_amd64.s:1998 +0x1 fp=0xc82012afa8 sp=0xc82012afa0\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor.func1\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:53 +0x27f\n\ngoroutine 1 [chan receive]:\ngithub.com/burke/zeus/go/zeusmaster.Run(0x41f2e90, 0x9, 0x11e1a300, 0x0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/zeusmaster/zeusmaster.go:54 +0x35a\nmain.main()\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/cmd/zeus/zeus.go:78 +0x5e5\n\ngoroutine 17 [syscall, locked to thread]:\nruntime.goexit()\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/asm_amd64.s:1998 +0x1\n\ngoroutine 5 [syscall]:\nos/signal.signal_recv(0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/sigqueue.go:116 +0x132\nos/signal.loop()\n    /usr/local/Cellar/go/1.6.2/libexec/src/os/signal/signal_unix.go:22 +0x18\ncreated by os/signal.init.1\n    /usr/local/Cellar/go/1.6.2/libexec/src/os/signal/signal_unix.go:28 +0x37\n\ngoroutine 6 [chan receive]:\ngithub.com/burke/zeus/go/filemonitor.(*fsEventsMonitor).handleAdd(0xc82000a800)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/filemonitor/filemonitor_darwin.go:86 +0x110\ncreated by github.com/burke/zeus/go/filemonitor.NewFileMonitor\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/filemonitor/filemonitor_darwin.go:34 +0x1e8\n\ngoroutine 7 [select]:\ngithub.com/burke/zeus/go/processtree.StartSlaveMonitor.func1(0xc82000a880, 0xc820018d20, 0xc820018c60, 0xc820018cc0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:57 +0x455\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:67 +0x71\n\ngoroutine 8 [select]:\ngithub.com/burke/zeus/go/clienthandler.Start.func1(0xc820018d80, 0xc820018c60, 0xc82000a880)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:45 +0x286\ncreated by github.com/burke/zeus/go/clienthandler.Start\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:54 +0x67\n\ngoroutine 9 [running]:\n    goroutine running on other thread; stack unavailable\ncreated by github.com/burke/zeus/go/statuschart.ttyStart\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/statuschart/tty.go:50 +0x3f\n\ngoroutine 10 [select]:\ngithub.com/burke/zeus/go/statuschart.(*StatusChart).watchUpdates(0xc8200b2080, 0xc82005a150)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/statuschart/statuschart.go:62 +0x14a\ncreated by github.com/burke/zeus/go/statuschart.Start\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/statuschart/statuschart.go:51 +0x43b\n\ngoroutine 11 [select, locked to thread]:\nruntime.gopark(0x423aab0, 0xc820026f28, 0x41ea5b8, 0x6, 0x18, 0x2)\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/proc.go:262 +0x163\nruntime.selectgoImpl(0xc820026f28, 0x0, 0x18)\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/select.go:392 +0xa67\nruntime.selectgo(0xc820026f28)\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/select.go:215 +0x12\nruntime.ensureSigM.func1()\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/signal1_unix.go:279 +0x32c\nruntime.goexit()\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/asm_amd64.s:1998 +0x1\n\ngoroutine 18 [IO wait]:\nnet.runtime_pollWait(0x5140f30, 0x72, 0xc8200f5ac4)\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc820112060, 0x72, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc820112060, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).readMsg(0xc820112000, 0xc8200f5e88, 0x0, 0x0, 0xc820106080, 0x20, 0x20, 0xffffffffffffffff, 0x0, 0x0, ...)\n    /usr/local/Cellar/go/1.6.2/libexec/src/net/fd_unix.go:304 +0x33d\nnet.(*UnixConn).ReadMsgUnix(0xc8200f8010, 0xc8200f5e88, 0x0, 0x0, 0xc820106080, 0x20, 0x20, 0x1, 0x10, 0x0, ...)\n    /usr/local/Cellar/go/1.6.2/libexec/src/net/unixsock_posix.go:150 +0x15f\ngithub.com/burke/zeus/go/unixsocket.(*oobReader).Read(0xc82010a0c0, 0xc8200f5e88, 0x0, 0x0, 0x40091a3, 0x0, 0x0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/unixsocket/oobreader.go:39 +0x8b\ngithub.com/burke/zeus/go/unixsocket.(*oobReader).ReadFD(0xc82010a0c0, 0x423ab50, 0x0, 0x0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/unixsocket/oobreader.go:24 +0x188\ngithub.com/burke/zeus/go/unixsocket.(*Usock).ReadFD(0xc8201060a0, 0x0, 0x0, 0x0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/unixsocket/usock.go:79 +0x90\ngithub.com/burke/zeus/go/processtree.StartSlaveMonitor.func1.1(0xc8201060a0, 0xc820110100)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:44 +0x21\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor.func1\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:50 +0x1ea\n\ngoroutine 20 [chan receive]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doUnbootedState(0xc8200aa0e0, 0xc820108000, 0x0, 0x0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:190 +0x444\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xc8200aa0e0, 0xc820108000)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:140 +0x42b\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor.func1\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:53 +0x27f\n\ngoroutine 21 [chan receive]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doUnbootedState(0xc8200aa1c0, 0xc820108000, 0x0, 0x0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:190 +0x444\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xc8200aa1c0, 0xc820108000)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:140 +0x42b\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor.func1\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:53 +0x27f\n\ngoroutine 22 [chan receive]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doUnbootedState(0xc8200aa2a0, 0xc820108000, 0x0, 0x0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:190 +0x444\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xc8200aa2a0, 0xc820108000)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:140 +0x42b\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor.func1\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:53 +0x27f\n\ngoroutine 23 [chan receive]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doUnbootedState(0xc8200aa380, 0xc820108000, 0x0, 0x0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:190 +0x444\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xc8200aa380, 0xc820108000)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:140 +0x42b\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor.func1\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:53 +0x27f\n\ngoroutine 24 [chan receive]:\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doUnbootedState(0xc8200aa460, 0xc820108000, 0x0, 0x0)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:190 +0x444\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xc8200aa460, 0xc820108000)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:140 +0x42b\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor.func1\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavemonitor.go:53 +0x27f\n\ngoroutine 34 [IO wait]:\nnet.runtime_pollWait(0x5140e70, 0x72, 0x4650050)\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/netpoll.go:160 +0x60\nnet.(*pollDesc).Wait(0xc82010c060, 0x72, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/net/fd_poll_runtime.go:73 +0x3a\nnet.(*pollDesc).WaitRead(0xc82010c060, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/net/fd_poll_runtime.go:78 +0x36\nnet.(*netFD).accept(0xc82010c000, 0x0, 0x5100070, 0xc820102060)\n    /usr/local/Cellar/go/1.6.2/libexec/src/net/fd_unix.go:426 +0x27c\nnet.(*UnixListener).AcceptUnix(0xc820102040, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/net/unixsock_posix.go:305 +0x53\ngithub.com/burke/zeus/go/clienthandler.Start.func1.1(0xc820102040, 0xc820124000)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:35 +0x33\ncreated by github.com/burke/zeus/go/clienthandler.Start.func1\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/clienthandler/clienthandler.go:42 +0x160\n\ngoroutine 25 [running]:\n    goroutine running on other thread; stack unavailable\ncreated by github.com/burke/zeus/go/processtree.(*SlaveNode).doUnbootedState\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:184 +0x3f3\n[signal 0xb code=0x1 addr=0x22b949a374 pc=0x40d64f0]\n\ngoroutine 25 [running]:\nruntime.throw(0x4227b00, 0x2a)\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/panic.go:547 +0x90 fp=0xc8200f1b58 sp=0xc8200f1b40\nruntime.sigpanic()\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/sigpanic_unix.go:12 +0x5a fp=0xc8200f1ba8 sp=0xc8200f1b58\nsync.(*Pool).Get(0x42e5390, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/sync/pool.go:102 +0x40 fp=0xc8200f1bf8 sp=0xc8200f1ba8\nfmt.newPrinter(0x10)\n    /usr/local/Cellar/go/1.6.2/libexec/src/fmt/print.go:133 +0x27 fp=0xc8200f1c38 sp=0xc8200f1bf8\nfmt.Sprintf(0x420aac0, 0x13, 0xc8200f1d80, 0x3, 0x3, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/fmt/print.go:202 +0x2b fp=0xc8200f1c88 sp=0xc8200f1c38\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).trace(0xc8200aa000, 0x422e300, 0x4a, 0xc8200f1f48, 0x2, 0x2)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:430 +0x800 fp=0xc8200f1df8 sp=0xc8200f1c88\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).babysitRootProcess(0xc8200aa000, 0xc82016c140)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:384 +0x42c fp=0xc8200f1fa0 sp=0xc8200f1df8\nruntime.goexit()\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/asm_amd64.s:1998 +0x1 fp=0xc8200f1fa8 sp=0xc8200f1fa0\ncreated by github.com/burke/zeus/go/processtree.(*SlaveNode).doUnbootedState\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/processtree/slavenode.go:184 +0x3f3\n[signal 0xb code=0x1 addr=0x22b949a424 pc=0x40d64f0]\n\ngoroutine 9 [running]:\nruntime.throw(0x4227b00, 0x2a)\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/panic.go:547 +0x90 fp=0xc8200f4a98 sp=0xc8200f4a80\nruntime.sigpanic()\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/sigpanic_unix.go:12 +0x5a fp=0xc8200f4ae8 sp=0xc8200f4a98\nsync.(*Pool).Get(0x42e5390, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/sync/pool.go:102 +0x40 fp=0xc8200f4b38 sp=0xc8200f4ae8\nfmt.newPrinter(0xc820170360)\n    /usr/local/Cellar/go/1.6.2/libexec/src/fmt/print.go:133 +0x27 fp=0xc8200f4b78 sp=0xc8200f4b38\nfmt.Fprintf(0x4654308, 0xc82002e010, 0x41e9020, 0x5, 0xc8200f4ca0, 0x1, 0x1, 0x401169e, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/fmt/print.go:187 +0x30 fp=0xc8200f4bc0 sp=0xc8200f4b78\nfmt.Printf(0x41e9020, 0x5, 0xc8200f4ca0, 0x1, 0x1, 0x2d, 0x0, 0x0)\n    /usr/local/Cellar/go/1.6.2/libexec/src/fmt/print.go:197 +0x94 fp=0xc8200f4c28 sp=0xc8200f4bc0\ngithub.com/burke/zeus/go/statuschart.(*StatusChart).draw(0xc8200b2080)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/statuschart/tty.go:60 +0x19b fp=0xc8200f4cd0 sp=0xc8200f4c28\ngithub.com/burke/zeus/go/statuschart.ttyStart.func1(0xc820018de0, 0xc820018c60)\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/statuschart/tty.go:45 +0x58f fp=0xc8200f4fa0 sp=0xc8200f4cd0\nruntime.goexit()\n    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/asm_amd64.s:1998 +0x1 fp=0xc8200f4fa8 sp=0xc8200f4fa0\ncreated by github.com/burke/zeus/go/statuschart.ttyStart\n    /Users/andrew/code/go/src/github.com/burke/zeus/go/statuschart/tty.go:50 +0x3f\n```\n. I was able to resolve this issue by running a `gem pristine --all`. \n. ",
    "mmcnl": "I'm still experiencing this issue, on both ruby-2.3.3 and 2.4.0.. Hmm, I could have sworn I tried that but indeed `gem uninstall zeus` followed by a reinstall has allowed it to work. The previous issue had occurred in multiple ruby envs as well as with the previous version of zeus (I tried installing this in case the current issue was due to a recent regression). I'll let you know if it shows up again. Thanks for the help!. I'm still experiencing this issue, on both ruby-2.3.3 and 2.4.0.. Hmm, I could have sworn I tried that but indeed `gem uninstall zeus` followed by a reinstall has allowed it to work. The previous issue had occurred in multiple ruby envs as well as with the previous version of zeus (I tried installing this in case the current issue was due to a recent regression). I'll let you know if it shows up again. Thanks for the help!. ",
    "blimmer": "@kenn how did you identify what file was the problem? I'm getting this same error message but don't know what's wrong. I can run `bundle exec rspec` and just `rspec` and my test suite runs with no problems. This issue only occurs when I try to run it with zeus.\r\n\r\n```\r\nzeus test (alias: rspec) [run to see backtrace]\r\nslavenode.go:215: [test_helper] read unix ->: EOF\r\n```\r\n\r\nWhen I run `zeus test` in another tab it still just gives me the `read unix ->: EOF` message.. Does anyone know how to get more information about this error? cc @sideshowcoder \r\n\r\nI've finally figured out how to clone this, build the app, but it seems like Go only exposes the `err.Error()` string, so I can't figure out how to get more information (like a stacktrace) from the error.\r\n\r\nI was hoping that a `panic` could help, but no dice:\r\n```\r\npanic: read unix ->: EOF\r\n\r\ngoroutine 22 [running]:\r\npanic(0x412f380, 0xc4204b2050)\r\n        /usr/local/Cellar/go/1.7.5/libexec/src/runtime/panic.go:500 +0x1a1\r\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doBootingState(0xc420010380, 0x0, 0x0)\r\n        /usr/local/golang/src/github.com/burke/zeus/go/processtree/slavenode.go:215 +0x413\r\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xc420010380, 0xc420114000)\r\n        /usr/local/golang/src/github.com/burke/zeus/go/processtree/slavenode.go:146 +0x26e\r\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor.func1\r\n        /usr/local/golang/src/github.com/burke/zeus/go/processtree/slavemonitor.go:53 +0x1cc\r\n```\r\n\r\nIt really seems like there has to be a way to get even just a little more information about this issue, but I don't really know any golang \ud83d\ude1e \r\n\r\nalso, this is the log I get if I ask zeus to give me more info:\r\n\r\n```\r\n2017/02/24 15:34:41.478296 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] test_helper/(no PID) entering state SUnbooted\r\n2017/02/24 15:34:41.478566 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] default_bundle/(no PID) entering state SUnbooted\r\n2017/02/24 15:34:41.478620 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] boot/(no PID) entering state SUnbooted\r\n2017/02/24 15:34:41.478635 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] development_environment/(no PID) entering state SUnbooted\r\n2017/02/24 15:34:41.478664 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] prerake/(no PID) entering state SUnbooted\r\n2017/02/24 15:34:41.478717 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] test_environment/(no PID) entering state SUnbooted\r\n2017/02/24 15:34:41.479335 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:380] boot/(no PID) running the root command now\r\n2017/02/24 15:34:41.623468 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:128] boot/(77840) initialized slave boot with pid 77840 from parent 0\r\n2017/02/24 15:34:41.623496 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:145] boot/(77840) entering state SBooting\r\n2017/02/24 15:34:44.422590 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:220] boot/(77840) received action message\r\n2017/02/24 15:34:44.422616 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:148] boot/(77840) entering state SReady\r\n2017/02/24 15:34:44.422631 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:328] boot/(77840) now sending slave boot request for default_bundle\r\n2017/02/24 15:34:44.425115 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:128] default_bundle/(77842) initialized slave default_bundle with pid 77842 from parent 77840\r\n2017/02/24 15:34:44.425162 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:145] default_bundle/(77842) entering state SBooting\r\n2017/02/24 15:34:51.099618 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:220] default_bundle/(77842) received action message\r\n2017/02/24 15:34:51.099713 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:148] default_bundle/(77842) entering state SReady\r\n2017/02/24 15:34:51.099730 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:328] default_bundle/(77842) now sending slave boot request for development_environment\r\n2017/02/24 15:34:51.099748 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:328] default_bundle/(77842) now sending slave boot request for test_environment\r\n2017/02/24 15:34:51.103224 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:128] test_environment/(77850) initialized slave test_environment with pid 77850 from parent 77842\r\n2017/02/24 15:34:51.103226 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:128] development_environment/(77849) initialized slave development_environment with pid 77849 from parent 77842\r\n2017/02/24 15:34:51.103271 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:145] development_environment/(77849) entering state SBooting\r\n2017/02/24 15:34:51.103318 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:145] test_environment/(77850) entering state SBooting\r\n2017/02/24 15:35:05.378814 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:220] test_environment/(77850) received action message\r\n2017/02/24 15:35:05.378847 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:148] test_environment/(77850) entering state SReady\r\n2017/02/24 15:35:05.378857 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:328] test_environment/(77850) now sending slave boot request for test_helper\r\n2017/02/24 15:35:05.383167 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:128] test_helper/(77856) initialized slave test_helper with pid 77856 from parent 77850\r\n2017/02/24 15:35:05.383190 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:145] test_helper/(77856) entering state SBooting\r\n2017/02/24 15:35:06.103102 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:220] development_environment/(77849) received action message\r\n2017/02/24 15:35:06.103127 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:148] development_environment/(77849) entering state SReady\r\n2017/02/24 15:35:06.103138 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:328] development_environment/(77849) now sending slave boot request for prerake\r\n2017/02/24 15:35:06.108546 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:128] prerake/(77857) initialized slave prerake with pid 77857 from parent 77849\r\n2017/02/24 15:35:06.108579 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:145] prerake/(77857) entering state SBooting\r\n2017/02/24 15:35:06.298363 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:220] prerake/(77857) received action message\r\n2017/02/24 15:35:06.298390 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:148] prerake/(77857) entering state SReady\r\n2017/02/24 15:35:06.367293 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:151] test_helper/(77856) entering state SCrashed\r\n```\r\n. My current process for testing this out to is clone the repo, run `make && make install` and then test in my repo - would something like delve work with this workflow?\r\n\r\nThe other crazy part about all of this is that the issue only exhibits itself (on the exact same codebase / macOS latest / etc) for some people on my team, not everyone.. I \"fixed\" this on my machine by running `gem pristine --all`. It's definitely weird and I don't know exactly what upstream gem caused the problem.. @kenn how did you identify what file was the problem? I'm getting this same error message but don't know what's wrong. I can run `bundle exec rspec` and just `rspec` and my test suite runs with no problems. This issue only occurs when I try to run it with zeus.\r\n\r\n```\r\nzeus test (alias: rspec) [run to see backtrace]\r\nslavenode.go:215: [test_helper] read unix ->: EOF\r\n```\r\n\r\nWhen I run `zeus test` in another tab it still just gives me the `read unix ->: EOF` message.. Does anyone know how to get more information about this error? cc @sideshowcoder \r\n\r\nI've finally figured out how to clone this, build the app, but it seems like Go only exposes the `err.Error()` string, so I can't figure out how to get more information (like a stacktrace) from the error.\r\n\r\nI was hoping that a `panic` could help, but no dice:\r\n```\r\npanic: read unix ->: EOF\r\n\r\ngoroutine 22 [running]:\r\npanic(0x412f380, 0xc4204b2050)\r\n        /usr/local/Cellar/go/1.7.5/libexec/src/runtime/panic.go:500 +0x1a1\r\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).doBootingState(0xc420010380, 0x0, 0x0)\r\n        /usr/local/golang/src/github.com/burke/zeus/go/processtree/slavenode.go:215 +0x413\r\ngithub.com/burke/zeus/go/processtree.(*SlaveNode).Run(0xc420010380, 0xc420114000)\r\n        /usr/local/golang/src/github.com/burke/zeus/go/processtree/slavenode.go:146 +0x26e\r\ncreated by github.com/burke/zeus/go/processtree.StartSlaveMonitor.func1\r\n        /usr/local/golang/src/github.com/burke/zeus/go/processtree/slavemonitor.go:53 +0x1cc\r\n```\r\n\r\nIt really seems like there has to be a way to get even just a little more information about this issue, but I don't really know any golang \ud83d\ude1e \r\n\r\nalso, this is the log I get if I ask zeus to give me more info:\r\n\r\n```\r\n2017/02/24 15:34:41.478296 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] test_helper/(no PID) entering state SUnbooted\r\n2017/02/24 15:34:41.478566 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] default_bundle/(no PID) entering state SUnbooted\r\n2017/02/24 15:34:41.478620 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] boot/(no PID) entering state SUnbooted\r\n2017/02/24 15:34:41.478635 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] development_environment/(no PID) entering state SUnbooted\r\n2017/02/24 15:34:41.478664 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] prerake/(no PID) entering state SUnbooted\r\n2017/02/24 15:34:41.478717 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] test_environment/(no PID) entering state SUnbooted\r\n2017/02/24 15:34:41.479335 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:380] boot/(no PID) running the root command now\r\n2017/02/24 15:34:41.623468 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:128] boot/(77840) initialized slave boot with pid 77840 from parent 0\r\n2017/02/24 15:34:41.623496 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:145] boot/(77840) entering state SBooting\r\n2017/02/24 15:34:44.422590 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:220] boot/(77840) received action message\r\n2017/02/24 15:34:44.422616 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:148] boot/(77840) entering state SReady\r\n2017/02/24 15:34:44.422631 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:328] boot/(77840) now sending slave boot request for default_bundle\r\n2017/02/24 15:34:44.425115 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:128] default_bundle/(77842) initialized slave default_bundle with pid 77842 from parent 77840\r\n2017/02/24 15:34:44.425162 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:145] default_bundle/(77842) entering state SBooting\r\n2017/02/24 15:34:51.099618 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:220] default_bundle/(77842) received action message\r\n2017/02/24 15:34:51.099713 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:148] default_bundle/(77842) entering state SReady\r\n2017/02/24 15:34:51.099730 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:328] default_bundle/(77842) now sending slave boot request for development_environment\r\n2017/02/24 15:34:51.099748 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:328] default_bundle/(77842) now sending slave boot request for test_environment\r\n2017/02/24 15:34:51.103224 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:128] test_environment/(77850) initialized slave test_environment with pid 77850 from parent 77842\r\n2017/02/24 15:34:51.103226 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:128] development_environment/(77849) initialized slave development_environment with pid 77849 from parent 77842\r\n2017/02/24 15:34:51.103271 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:145] development_environment/(77849) entering state SBooting\r\n2017/02/24 15:34:51.103318 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:145] test_environment/(77850) entering state SBooting\r\n2017/02/24 15:35:05.378814 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:220] test_environment/(77850) received action message\r\n2017/02/24 15:35:05.378847 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:148] test_environment/(77850) entering state SReady\r\n2017/02/24 15:35:05.378857 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:328] test_environment/(77850) now sending slave boot request for test_helper\r\n2017/02/24 15:35:05.383167 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:128] test_helper/(77856) initialized slave test_helper with pid 77856 from parent 77850\r\n2017/02/24 15:35:05.383190 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:145] test_helper/(77856) entering state SBooting\r\n2017/02/24 15:35:06.103102 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:220] development_environment/(77849) received action message\r\n2017/02/24 15:35:06.103127 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:148] development_environment/(77849) entering state SReady\r\n2017/02/24 15:35:06.103138 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:328] development_environment/(77849) now sending slave boot request for prerake\r\n2017/02/24 15:35:06.108546 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:128] prerake/(77857) initialized slave prerake with pid 77857 from parent 77849\r\n2017/02/24 15:35:06.108579 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:145] prerake/(77857) entering state SBooting\r\n2017/02/24 15:35:06.298363 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:220] prerake/(77857) received action message\r\n2017/02/24 15:35:06.298390 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:148] prerake/(77857) entering state SReady\r\n2017/02/24 15:35:06.367293 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:151] test_helper/(77856) entering state SCrashed\r\n```\r\n. My current process for testing this out to is clone the repo, run `make && make install` and then test in my repo - would something like delve work with this workflow?\r\n\r\nThe other crazy part about all of this is that the issue only exhibits itself (on the exact same codebase / macOS latest / etc) for some people on my team, not everyone.. I \"fixed\" this on my machine by running `gem pristine --all`. It's definitely weird and I don't know exactly what upstream gem caused the problem.. ",
    "seyonv": "@blimmer I was having problems with this too but got it working . Gem uninstalls and reinstalls ended up making it work. It does not work when running `$bundle exec  zeus start`, but it does work when running `$zeus start.`\r\n\r\nSomething to note is that when I run\r\n\r\n` $zeus --log/dev/stderr start\r\n`\r\nit still gives\r\nthe following messages\r\n```\r\n2017/03/07 11:18:04.055498 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] test_helper/(no PID) entering state SUnbooted\r\n2017/03/07 11:18:04.055511 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] default_bundle/(no PID) entering state SUnbooted\r\n2017/03/07 11:18:04.055513 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] boot/(no PID) entering state SUnbooted\r\n2017/03/07 11:18:04.055514 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] test_environment/(no PID) entering state SUnbooted\r\n2017/03/07 11:18:04.055517 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] development_environment/(no PID) entering state SUnbooted\r\n2017/03/07 11:18:04.056168 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:380] boot/(no PID) running the root command now\r\n2017/03/07 11:18:04.055521 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] prerake/(no PID) entering state SUnbooted\r\n\r\n```\r\n. Yeah they're fine, shouldn't have mentioned them. Broader point is bundler causing failure and uninstalling, reinstalling different gems helped. As mentioned elsewhere, I believe the wrong versions of method_source and json were causing problems. . @blimmer I was having problems with this too but got it working . Gem uninstalls and reinstalls ended up making it work. It does not work when running `$bundle exec  zeus start`, but it does work when running `$zeus start.`\r\n\r\nSomething to note is that when I run\r\n\r\n` $zeus --log/dev/stderr start\r\n`\r\nit still gives\r\nthe following messages\r\n```\r\n2017/03/07 11:18:04.055498 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] test_helper/(no PID) entering state SUnbooted\r\n2017/03/07 11:18:04.055511 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] default_bundle/(no PID) entering state SUnbooted\r\n2017/03/07 11:18:04.055513 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] boot/(no PID) entering state SUnbooted\r\n2017/03/07 11:18:04.055514 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] test_environment/(no PID) entering state SUnbooted\r\n2017/03/07 11:18:04.055517 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] development_environment/(no PID) entering state SUnbooted\r\n2017/03/07 11:18:04.056168 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:380] boot/(no PID) running the root command now\r\n2017/03/07 11:18:04.055521 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:142] prerake/(no PID) entering state SUnbooted\r\n\r\n```\r\n. Yeah they're fine, shouldn't have mentioned them. Broader point is bundler causing failure and uninstalling, reinstalling different gems helped. As mentioned elsewhere, I believe the wrong versions of method_source and json were causing problems. . ",
    "tanmayforgit": "In my case it was caused by these two lines in spec_helper\r\n\r\nrequire 'database_cleaner'\r\nrequire 'capybara/poltergeist'\r\n\r\nI am using ruby 2.4 with Rails 5.0.1\r\n\r\n. In my case it was caused by these two lines in spec_helper\r\n\r\nrequire 'database_cleaner'\r\nrequire 'capybara/poltergeist'\r\n\r\nI am using ruby 2.4 with Rails 5.0.1\r\n\r\n. ",
    "kriskhaira": "Had a similar error today while running zeus start.\r\n\r\n```\r\nslavenode.go:215: [boot] read unix ->: EOF\r\n```\r\n\r\n**Updating zeus from 0.15.10 to 0.15.13 fixes it**. Not sure if it was the upgrade or simply a reinstall that fixed it. Could've been a conflict with a gem or Go library added to my system recently.\r\n\r\n## Environment\r\n\r\n- macOS Sierra 10.12.4 (16E195)\r\n- ruby 2.3.0p0 (2015-12-25 revision 53290) [x86_64-darwin15]\r\n- Rails 4.2.7.1\r\n- Bundler version 1.13.7\r\n- go version go1.7.5 darwin/amd64\r\n- Homebrew 1.1.12 (used to install Go)\r\n\r\n<img width=\"374\" alt=\"screen shot 2017-04-19 at 12 09 30 pm\" src=\"https://cloud.githubusercontent.com/assets/80577/25162942/19118896-24f9-11e7-8a7a-2747df34fe3b.png\">\r\n. Had a similar error today while running zeus start.\r\n\r\n```\r\nslavenode.go:215: [boot] read unix ->: EOF\r\n```\r\n\r\n**Updating zeus from 0.15.10 to 0.15.13 fixes it**. Not sure if it was the upgrade or simply a reinstall that fixed it. Could've been a conflict with a gem or Go library added to my system recently.\r\n\r\n## Environment\r\n\r\n- macOS Sierra 10.12.4 (16E195)\r\n- ruby 2.3.0p0 (2015-12-25 revision 53290) [x86_64-darwin15]\r\n- Rails 4.2.7.1\r\n- Bundler version 1.13.7\r\n- go version go1.7.5 darwin/amd64\r\n- Homebrew 1.1.12 (used to install Go)\r\n\r\n<img width=\"374\" alt=\"screen shot 2017-04-19 at 12 09 30 pm\" src=\"https://cloud.githubusercontent.com/assets/80577/25162942/19118896-24f9-11e7-8a7a-2747df34fe3b.png\">\r\n. ",
    "AlanRuijia": "In my case, updating bundler from 1.13.7 to 1.14.6 helps. . In my case, updating bundler from 1.13.7 to 1.14.6 helps. . ",
    "em77": "Running `gem pristine --all` worked for me.. Running `gem pristine --all` worked for me.. ",
    "dmcinnes": "I ran into this issue as well though my error message is on a different line number, and the \"boot\" step was green:\r\n```\r\nslavenode.go:226: [bundler] read unix ->: EOF\r\n```\r\nUninstalling/reinstalling didn't work, neither did `gem pristine --all`.\r\n\r\nWhat _did_ work was installing the previous version `0.15.13`, so seems like the issue was experiencing was introduced with `0.15.14` (at least what I'm experiencing).\r\n\r\nI'm running Ruby `2.4.1p111`, if that helps.. I believe it was the only version I had since I was on a new Ruby install through rbenv.\r\nIt's the only one I have now in any case:\r\n```\r\n$ gem list zeus --all\r\n\r\n*** LOCAL GEMS ***\r\n\r\nzeus (0.15.13)\r\n```. I'm now getting failures on `0.15.13` as well \ud83d\ude1e  and I'm not sure what changed.\r\n`slavenode.go:215: [bundler] read unix ->: EOF` on `0.15.13` and \r\n`slavenode.go:226: [bundler] read unix ->: EOF` on `v0.15.14`.\r\n\r\nWe're now on Ruby 2.4.2 for over a month (still on rbenv) and Bundler version 1.15.4.. Possibly related change: I'm on OS X Sierra and yesterday I had updated Xcode and command line tools to Version 9.0.1 and 9.0 respectively.... Also posted to this [closed issue](https://github.com/burke/zeus/issues/617#issuecomment-338062447).\r\n\r\nI'm now getting failures on `0.15.13` as well \ud83d\ude1e  and I'm not sure what changed.\r\n`slavenode.go:215: [bundler] read unix ->: EOF` on `0.15.13` and \r\n`slavenode.go:226: [bundler] read unix ->: EOF` on `v0.15.14`.\r\n\r\nWe're now on Ruby 2.4.2 for over a month (still on rbenv) and Bundler version 1.15.4.\r\n\r\nPossibly related change: I'm on OS X Sierra and yesterday I had updated Xcode and command line tools to Version 9.0.1 and 9.0 respectively.... Here's the log output on 0.15.14 -- seems to crash when it tries to start Bundler:\r\n```\r\n2017/10/26 13:59:46.709504 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:149] bundler/(no PID) entering state SUnbooted\r\n2017/10/26 13:59:46.709504 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:149] spec_helper/(no PID) entering state SUnbooted\r\n2017/10/26 13:59:46.709509 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:149] boot/(no PID) entering state SUnbooted\r\n2017/10/26 13:59:46.709514 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:149] bundler_test/(no PID) entering state SUnbooted\r\n2017/10/26 13:59:46.709570 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:149] main/(no PID) entering state SUnbooted\r\n2017/10/26 13:59:46.709660 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:391] boot/(no PID) running the root command now\r\n2017/10/26 13:59:46.986839 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:135] boot/(20873) initialized slave boot with pid 20873 from parent 0\r\n2017/10/26 13:59:46.986861 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:152] boot/(20873) entering state SBooting\r\n2017/10/26 13:59:46.987228 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:231] boot/(20873) received action message\r\n2017/10/26 13:59:46.987240 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:155] boot/(20873) entering state SReady\r\n2017/10/26 13:59:46.987265 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:339] boot/(20873) now sending slave boot request for bundler\r\n2017/10/26 13:59:46.989174 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:135] bundler/(20875) initialized slave bundler with pid 20875 from parent 20873\r\n2017/10/26 13:59:46.989188 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:152] bundler/(20875) entering state SBooting\r\n2017/10/26 13:59:47.548070 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:158] bundler/(20875) entering state SCrashed\r\n2017/10/26 13:59:47.548103 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:158] main/(no PID) entering state SCrashed\r\n2017/10/26 13:59:47.548118 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:158] bundler_test/(no PID) entering state SCrashed\r\n2017/10/26 13:59:47.548131 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:158] spec_helper/(no PID) entering state SCrashed\r\n```\r\n\r\nI've tracked this down to possibly the [ffi gem](https://github.com/ffi/ffi) being required during the bundler step (it was added recently).\r\nIn any case if I remove `Bundler.require` from the step and leave `require \"bundler/setup\"` it starts working again. I don't need _everything_ loaded to run one test after all \ud83d\ude04 . I ran into this issue as well though my error message is on a different line number, and the \"boot\" step was green:\r\n```\r\nslavenode.go:226: [bundler] read unix ->: EOF\r\n```\r\nUninstalling/reinstalling didn't work, neither did `gem pristine --all`.\r\n\r\nWhat _did_ work was installing the previous version `0.15.13`, so seems like the issue was experiencing was introduced with `0.15.14` (at least what I'm experiencing).\r\n\r\nI'm running Ruby `2.4.1p111`, if that helps.. I believe it was the only version I had since I was on a new Ruby install through rbenv.\r\nIt's the only one I have now in any case:\r\n```\r\n$ gem list zeus --all\r\n\r\n*** LOCAL GEMS ***\r\n\r\nzeus (0.15.13)\r\n```. I'm now getting failures on `0.15.13` as well \ud83d\ude1e  and I'm not sure what changed.\r\n`slavenode.go:215: [bundler] read unix ->: EOF` on `0.15.13` and \r\n`slavenode.go:226: [bundler] read unix ->: EOF` on `v0.15.14`.\r\n\r\nWe're now on Ruby 2.4.2 for over a month (still on rbenv) and Bundler version 1.15.4.. Possibly related change: I'm on OS X Sierra and yesterday I had updated Xcode and command line tools to Version 9.0.1 and 9.0 respectively.... Also posted to this [closed issue](https://github.com/burke/zeus/issues/617#issuecomment-338062447).\r\n\r\nI'm now getting failures on `0.15.13` as well \ud83d\ude1e  and I'm not sure what changed.\r\n`slavenode.go:215: [bundler] read unix ->: EOF` on `0.15.13` and \r\n`slavenode.go:226: [bundler] read unix ->: EOF` on `v0.15.14`.\r\n\r\nWe're now on Ruby 2.4.2 for over a month (still on rbenv) and Bundler version 1.15.4.\r\n\r\nPossibly related change: I'm on OS X Sierra and yesterday I had updated Xcode and command line tools to Version 9.0.1 and 9.0 respectively.... Here's the log output on 0.15.14 -- seems to crash when it tries to start Bundler:\r\n```\r\n2017/10/26 13:59:46.709504 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:149] bundler/(no PID) entering state SUnbooted\r\n2017/10/26 13:59:46.709504 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:149] spec_helper/(no PID) entering state SUnbooted\r\n2017/10/26 13:59:46.709509 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:149] boot/(no PID) entering state SUnbooted\r\n2017/10/26 13:59:46.709514 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:149] bundler_test/(no PID) entering state SUnbooted\r\n2017/10/26 13:59:46.709570 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:149] main/(no PID) entering state SUnbooted\r\n2017/10/26 13:59:46.709660 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:391] boot/(no PID) running the root command now\r\n2017/10/26 13:59:46.986839 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:135] boot/(20873) initialized slave boot with pid 20873 from parent 0\r\n2017/10/26 13:59:46.986861 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:152] boot/(20873) entering state SBooting\r\n2017/10/26 13:59:46.987228 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:231] boot/(20873) received action message\r\n2017/10/26 13:59:46.987240 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:155] boot/(20873) entering state SReady\r\n2017/10/26 13:59:46.987265 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:339] boot/(20873) now sending slave boot request for bundler\r\n2017/10/26 13:59:46.989174 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:135] bundler/(20875) initialized slave bundler with pid 20875 from parent 20873\r\n2017/10/26 13:59:46.989188 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:152] bundler/(20875) entering state SBooting\r\n2017/10/26 13:59:47.548070 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:158] bundler/(20875) entering state SCrashed\r\n2017/10/26 13:59:47.548103 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:158] main/(no PID) entering state SCrashed\r\n2017/10/26 13:59:47.548118 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:158] bundler_test/(no PID) entering state SCrashed\r\n2017/10/26 13:59:47.548131 [/Users/phil/Source/go/src/github.com/burke/zeus/go/processtree/slavenode.go:158] spec_helper/(no PID) entering state SCrashed\r\n```\r\n\r\nI've tracked this down to possibly the [ffi gem](https://github.com/ffi/ffi) being required during the bundler step (it was added recently).\r\nIn any case if I remove `Bundler.require` from the step and leave `require \"bundler/setup\"` it starts working again. I don't need _everything_ loaded to run one test after all \ud83d\ude04 . ",
    "leods92": "Had the same experience @dmcinnes had:\r\n\r\n> Uninstalling/reinstalling didn't work, neither did gem pristine --all.\r\n\r\n> What did work was installing the previous version 0.15.13, so seems like the issue was experiencing was introduced with 0.15.14 (at least what I'm experiencing).. Had the same experience @dmcinnes had:\r\n\r\n> Uninstalling/reinstalling didn't work, neither did gem pristine --all.\r\n\r\n> What did work was installing the previous version 0.15.13, so seems like the issue was experiencing was introduced with 0.15.14 (at least what I'm experiencing).. ",
    "mvalipour": "I had this issue in several occasions and it when I tried to run a standard `bundle exec` I noticed I need to do a `bundle install`. After doing so `zeus start` is back to normal. \r\n\r\n@sideshowcoder should zeus have a friendly error asking for `bundle install` to avoid confusion?. I had this issue in several occasions and it when I tried to run a standard `bundle exec` I noticed I need to do a `bundle install`. After doing so `zeus start` is back to normal. \r\n\r\n@sideshowcoder should zeus have a friendly error asking for `bundle install` to avoid confusion?. ",
    "gitconfig": "bundle update zeus (to 0.15.14) had introduced the problem. \r\n \r\nSo,\r\n\r\n```\r\ngem uninstall zeus\r\n\r\nSelect gem to uninstall:\r\n 1. zeus-0.15.13\r\n 2. zeus-0.15.14\r\n 3. All versions\r\n> 2\r\nSuccessfully uninstalled zeus-0.15.14\r\n\r\n```\r\nAnd it works now.\r\n. bundle update zeus (to 0.15.14) had introduced the problem. \r\n \r\nSo,\r\n\r\n```\r\ngem uninstall zeus\r\n\r\nSelect gem to uninstall:\r\n 1. zeus-0.15.13\r\n 2. zeus-0.15.14\r\n 3. All versions\r\n> 2\r\nSuccessfully uninstalled zeus-0.15.14\r\n\r\n```\r\nAnd it works now.\r\n. ",
    "kigster": "Confirming the same issue/solution worked for me on Ruby 2.2.3.. Hey, guys \u2014 I have spent a few days setting up Zeus in our dev environment, and I ended up learning a lot about what to expect when various weird things happen. The good news is that I think I've been able to resolve majority of our initial issues with Zeus, so let me walk through some use cases and what I've found, perhaps it will be helpful to somebody.\r\n\r\n> NOTE that Zeus 0.15.14 started to work on High Sierra, but was broken on Sierra.\r\n\r\n### My setup: \r\n\r\n  * Mac OSX High Sierra \r\n  * Ruby 2.2.7\r\n  * Zeus 0.15.14 (my [fork](https://github.com/kigster/zeus) that prints commands in alphabetical order instead of the random \u2014 [PR pending](https://github.com/burke/zeus/pull/644))\r\n  * Bundler 1.15.4\r\n\r\nSince Zeus is not supposed to be in your `Gemfile`, you are expected to install it separately. In the environments that Zeus boots, Bundler is initialized and used to load all bundled dependencies. A problem arises when Zeus code (or custom commands) use `require` and load some gems before bundler setup. In particular, if you have a version mismatch between what's installed as \"gem install\" and what's in your `Gemfile.lock.`\r\n\r\n### Crashes\r\n\r\nWe also experienced a bunch of SEGV crashes, that I was able to trace to the following gems. Each was exploding in a different place.\r\n\r\n * `sqlite3` (removing it fixed the problem)\r\n * `dalli` (removing IPV6 alias for `localhost` fixed the problem)\r\n * `faker` gem (setting ` Faker::Config.random = Random.new` in `config/environment` fixed it )\r\n *  presence of the `spring-commands-rspec` gem in the `Gemfile` has been causing problems\r\n\r\nWith these cleaned up, Zeus appears very stable.\r\n\r\nHope this helps!. My workflow with SEGV is rather simple:\r\n\r\nLook at the 5-7K lines of a stacktrace (make sure to set iterm2 screen history to unlimited), and find the first 100 or so lines. It the top of this stack will invariably be one of the gems I listed. If I see a new stack with no listed gems, I\u2019d try to see the last few stacks: typically it\u2019s a gem doing something via a native extension C callback.\r\n\r\nHowever, segv is a good problem to have: you know when you have one. But I\u2019ve also seen Zeus not start and almost nothing in any logs.\r\n\r\nIn that case I would try to run by hand a non-Zeus command, for example \u201crails console\u201d instead of \u201cZeus console\u201d: most of the time it explodes somewhere until fixed. When ruby VM that Zeus boots up throws parsing errors, there will be very little info why Zeus fails to start. So just manually start a new vm and hopefully you will see some errors.\r\n\r\nHTH \r\n\r\n. I found one additional issue that was happening to me. In my environment I use `rbenv` some of the time, but do not use it when I switch to `chefdk` ruby. So I changed the line in `zeus.json` that loads custom plan to the following:\r\n\r\n```json\r\n{\r\n  \"command\": \"rbenv exec ruby -rubygems -r./lib/zeus/custom_plan.rb -eZeus.go\",\r\n}\r\n```\r\n\r\nNotice the `rbenv exec ruby` instead of just ruby.  Maybe this will help someone else too.. We had issues with the following dependencies:\r\n\r\n * sqlite3 (SEGV in Ruby 2.2.7 when run via Zues)\r\n * Dalli gem (removing IPV6 alias for localhost fixed the problem)\r\n. @burke any chance You could review this PR?. Confirming the same issue/solution worked for me on Ruby 2.2.3.. Hey, guys \u2014 I have spent a few days setting up Zeus in our dev environment, and I ended up learning a lot about what to expect when various weird things happen. The good news is that I think I've been able to resolve majority of our initial issues with Zeus, so let me walk through some use cases and what I've found, perhaps it will be helpful to somebody.\r\n\r\n> NOTE that Zeus 0.15.14 started to work on High Sierra, but was broken on Sierra.\r\n\r\n### My setup: \r\n\r\n  * Mac OSX High Sierra \r\n  * Ruby 2.2.7\r\n  * Zeus 0.15.14 (my [fork](https://github.com/kigster/zeus) that prints commands in alphabetical order instead of the random \u2014 [PR pending](https://github.com/burke/zeus/pull/644))\r\n  * Bundler 1.15.4\r\n\r\nSince Zeus is not supposed to be in your `Gemfile`, you are expected to install it separately. In the environments that Zeus boots, Bundler is initialized and used to load all bundled dependencies. A problem arises when Zeus code (or custom commands) use `require` and load some gems before bundler setup. In particular, if you have a version mismatch between what's installed as \"gem install\" and what's in your `Gemfile.lock.`\r\n\r\n### Crashes\r\n\r\nWe also experienced a bunch of SEGV crashes, that I was able to trace to the following gems. Each was exploding in a different place.\r\n\r\n * `sqlite3` (removing it fixed the problem)\r\n * `dalli` (removing IPV6 alias for `localhost` fixed the problem)\r\n * `faker` gem (setting ` Faker::Config.random = Random.new` in `config/environment` fixed it )\r\n *  presence of the `spring-commands-rspec` gem in the `Gemfile` has been causing problems\r\n\r\nWith these cleaned up, Zeus appears very stable.\r\n\r\nHope this helps!. My workflow with SEGV is rather simple:\r\n\r\nLook at the 5-7K lines of a stacktrace (make sure to set iterm2 screen history to unlimited), and find the first 100 or so lines. It the top of this stack will invariably be one of the gems I listed. If I see a new stack with no listed gems, I\u2019d try to see the last few stacks: typically it\u2019s a gem doing something via a native extension C callback.\r\n\r\nHowever, segv is a good problem to have: you know when you have one. But I\u2019ve also seen Zeus not start and almost nothing in any logs.\r\n\r\nIn that case I would try to run by hand a non-Zeus command, for example \u201crails console\u201d instead of \u201cZeus console\u201d: most of the time it explodes somewhere until fixed. When ruby VM that Zeus boots up throws parsing errors, there will be very little info why Zeus fails to start. So just manually start a new vm and hopefully you will see some errors.\r\n\r\nHTH \r\n\r\n. I found one additional issue that was happening to me. In my environment I use `rbenv` some of the time, but do not use it when I switch to `chefdk` ruby. So I changed the line in `zeus.json` that loads custom plan to the following:\r\n\r\n```json\r\n{\r\n  \"command\": \"rbenv exec ruby -rubygems -r./lib/zeus/custom_plan.rb -eZeus.go\",\r\n}\r\n```\r\n\r\nNotice the `rbenv exec ruby` instead of just ruby.  Maybe this will help someone else too.. We had issues with the following dependencies:\r\n\r\n * sqlite3 (SEGV in Ruby 2.2.7 when run via Zues)\r\n * Dalli gem (removing IPV6 alias for localhost fixed the problem)\r\n. @burke any chance You could review this PR?. ",
    "sfahlberg": "yeah, this is really annoying. Would be nice if zeus could have this fixed internally so everybody doesn't have to pristine the gems. Didn't work for me though. Still having trouble. yeah, this is really annoying. Would be nice if zeus could have this fixed internally so everybody doesn't have to pristine the gems. Didn't work for me though. Still having trouble. ",
    "kliffy": "Also getting the same exact problem as @dmcinnes. Had to reformat the other day. None of these solutions seem to apply to me in getting zeus to work.\r\n\r\nOn High Sierra with ruby 2.1.1. Also getting the same exact problem as @dmcinnes. Had to reformat the other day. None of these solutions seem to apply to me in getting zeus to work.\r\n\r\nOn High Sierra with ruby 2.1.1. ",
    "strickinato": "I was getting `slavenode.go:226: [bundler] read unix ->: EOF`\r\n\r\nAnwarShahs solution worked for me.\r\n\r\n> I just removed the Gemfile.lock file and used bundle install. It fixed the problem. I was getting `slavenode.go:226: [bundler] read unix ->: EOF`\r\n\r\nAnwarShahs solution worked for me.\r\n\r\n> I just removed the Gemfile.lock file and used bundle install. It fixed the problem. ",
    "alsutton": "You can set `OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES` as an environment variable as a workaround.. You can set `OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES` as an environment variable as a workaround.. ",
    "skytos": "I'll look into a way to test it. Maybe something like\nhttps://github.com/thoughtbot/appraisal can help?\nOn Jan 12, 2017 6:59 AM, \"Philipp Fehre\" <notifications@github.com> wrote:\n\n> Makes a lot of sense to me. Not that well versed in RSpec but I'm\n> wondering if there is a way to test this so we can avoid regression? Maybe\n> have 2 Gemfiles one with RSpec 2 and one with RSpec 3 and run both on\n> Travis?\n>\n> Thanks for the work! I'm happy to merge this, would be even happier if we\n> had a test \ud83d\udc4d\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/burke/zeus/pull/618#issuecomment-272184753>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AFMa3-ZFhmpTH0fpFZcjoWYw8Q6Ec_0Kks5rRj_CgaJpZM4LhN4O>\n> .\n>\n. I'm not coming up with any great ways to test this other than having a couple dummy apps that require zeus and different versions of rspec.  I don't see how to integrate that with the current test setup since the tests are rspec tests themselves and they don't work with rspec2 syntax.  I could add a new make task that test-rubygem depends upon but it seems pretty heavy weight. @sideshowcoder does that seem like a path worth pursuing or did you have another idea?. I'll look into a way to test it. Maybe something like\nhttps://github.com/thoughtbot/appraisal can help?\nOn Jan 12, 2017 6:59 AM, \"Philipp Fehre\" <notifications@github.com> wrote:\n\n> Makes a lot of sense to me. Not that well versed in RSpec but I'm\n> wondering if there is a way to test this so we can avoid regression? Maybe\n> have 2 Gemfiles one with RSpec 2 and one with RSpec 3 and run both on\n> Travis?\n>\n> Thanks for the work! I'm happy to merge this, would be even happier if we\n> had a test \ud83d\udc4d\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/burke/zeus/pull/618#issuecomment-272184753>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AFMa3-ZFhmpTH0fpFZcjoWYw8Q6Ec_0Kks5rRj_CgaJpZM4LhN4O>\n> .\n>\n. I'm not coming up with any great ways to test this other than having a couple dummy apps that require zeus and different versions of rspec.  I don't see how to integrate that with the current test setup since the tests are rspec tests themselves and they don't work with rspec2 syntax.  I could add a new make task that test-rubygem depends upon but it seems pretty heavy weight. @sideshowcoder does that seem like a path worth pursuing or did you have another idea?. ",
    "gjtorikian": "Thank you so much, @sideshowcoder!. Thank you so much, @sideshowcoder!. ",
    "pboling": "~`zeus-rails`~ actually \ud83d\udc4d  for `zeus-preloader` or `zeus-loader`. ~`zeus-rails`~ actually \ud83d\udc4d  for `zeus-preloader` or `zeus-loader`. ",
    "mkllnk": "Thank you, I didn't know about `reset`. 0.15.4 works quite well for me. Sticking to that for a while. Awesome software by the way.. Thank you, I didn't know about `reset`. 0.15.4 works quite well for me. Sticking to that for a while. Awesome software by the way.. ",
    "ylansegal": "Instead of `reset`, I have also been using `stty sane`. It executes a bit faster then reset. Of course, it's still annoying that it's happening in the first place.. I installed `0.15.14.pre` but it doesn't work for me: My app doesn't even boot correctly. `zeus start` results in all the processes shown in red and then:\r\n\r\n```\r\nslavenode.go:226: [boot] read unix ->: EOF\r\nexit status 1\r\n```\r\n\r\nI can't get more detail on what is happening. Running a console or specs results in:\r\n\r\n```\r\nzeus rspec\r\nread unix ->: EOF%\r\n```\r\n\r\nIs there a way to print more debugging information?. @sideshowcoder, thanks for the tip. It was indeed a gem activation issue. \r\n\r\nMy initial testing of `0.15.14.pre`: Seems like the terminal issues have been resolved. I'll have more time to explore tomorrow during my regular-day usage. I'll report back. . After a bit more testing, I can report the issue is solved for me. \r\n\r\n. Instead of `reset`, I have also been using `stty sane`. It executes a bit faster then reset. Of course, it's still annoying that it's happening in the first place.. I installed `0.15.14.pre` but it doesn't work for me: My app doesn't even boot correctly. `zeus start` results in all the processes shown in red and then:\r\n\r\n```\r\nslavenode.go:226: [boot] read unix ->: EOF\r\nexit status 1\r\n```\r\n\r\nI can't get more detail on what is happening. Running a console or specs results in:\r\n\r\n```\r\nzeus rspec\r\nread unix ->: EOF%\r\n```\r\n\r\nIs there a way to print more debugging information?. @sideshowcoder, thanks for the tip. It was indeed a gem activation issue. \r\n\r\nMy initial testing of `0.15.14.pre`: Seems like the terminal issues have been resolved. I'll have more time to explore tomorrow during my regular-day usage. I'll report back. . After a bit more testing, I can report the issue is solved for me. \r\n\r\n. ",
    "laughinghan": "I'm having a similar issue with Zeus v0.15.13 that's very easy to reliably reproduce, simply do:\r\n\r\n```sh\r\n$ (sleep 1; echo lol; echo wut) & zeus s\r\n=> Booting WEBrick\r\n=> Rails 4.2.3 application starting in development on http://0.0.0.0:3000\r\n=> Run `rails server -h` for more startup options\r\n=> Ctrl-C to shutdown server\r\nlol\r\n   wut\r\n```\r\n\r\nNotice the odd position of `wut`. By contrast:\r\n```sh\r\n$ (sleep 1; echo lol; echo wut) & rails s\r\n=> Booting WEBrick\r\n=> Rails 4.2.3 application starting in development on http://0.0.0.0:3000\r\n=> Run `rails server -h` for more startup options\r\n=> Ctrl-C to shutdown server\r\nlol\r\nwut\r\n```\r\n\r\nThis is extremely easy to fix, I don't even need to `reset`, I can just Ctrl-Z and then `fg` and it's fixed, but I'd love to not have to do that in the first place. (I realize that `zeus start` takes control of the terminal cursor so anything running in the background that logs to stdout is no-go; but `zeus s` is supposed to be just like `rails s` and in particular has line output right, there's no reason you shouldn't run anything in the background that logs to stdout is there?)\r\n\r\n(edit: actually `zeus start` doesn't take control of the entire terminal, but it does take control of the terminal cursor). Dupe of https://github.com/burke/zeus/issues/598. I'm having a similar issue with Zeus v0.15.13 that's very easy to reliably reproduce, simply do:\r\n\r\n```sh\r\n$ (sleep 1; echo lol; echo wut) & zeus s\r\n=> Booting WEBrick\r\n=> Rails 4.2.3 application starting in development on http://0.0.0.0:3000\r\n=> Run `rails server -h` for more startup options\r\n=> Ctrl-C to shutdown server\r\nlol\r\n   wut\r\n```\r\n\r\nNotice the odd position of `wut`. By contrast:\r\n```sh\r\n$ (sleep 1; echo lol; echo wut) & rails s\r\n=> Booting WEBrick\r\n=> Rails 4.2.3 application starting in development on http://0.0.0.0:3000\r\n=> Run `rails server -h` for more startup options\r\n=> Ctrl-C to shutdown server\r\nlol\r\nwut\r\n```\r\n\r\nThis is extremely easy to fix, I don't even need to `reset`, I can just Ctrl-Z and then `fg` and it's fixed, but I'd love to not have to do that in the first place. (I realize that `zeus start` takes control of the terminal cursor so anything running in the background that logs to stdout is no-go; but `zeus s` is supposed to be just like `rails s` and in particular has line output right, there's no reason you shouldn't run anything in the background that logs to stdout is there?)\r\n\r\n(edit: actually `zeus start` doesn't take control of the entire terminal, but it does take control of the terminal cursor). Dupe of https://github.com/burke/zeus/issues/598. ",
    "siassaj": "+1. +1. ",
    "prpetten": "My fix didn't work, so I removed it.. My fix didn't work, so I removed it.. ",
    "yld": "Problem vanished. Thank you.. Problem vanished. Thank you.. ",
    "jgeiger": "Thanks for fixing this.. Thanks for fixing this.. ",
    "artemgurzhii": "@sideshowcoder As I understand there is no way to redirect errors from `rails s` as you not using it, so the only way is to actually throw same errors as `rails s` would?. @sideshowcoder As I understand there is no way to redirect errors from `rails s` as you not using it, so the only way is to actually throw same errors as `rails s` would?. ",
    "toshi1973814": "same for me. same for me. ",
    "mipearson": "This is hitting us as well, but in the rails console using `pry-rails`: no binding.pry required. Anything that triggers the pager causes it.\r\n\r\nProcess looks like this when it needs to be kill -9'd:\r\n```\r\nmp              43629   0.0  0.0 556624768   3996 s005  U+    1:44pm   0:00.08 /Users/mp/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/zeus-0.15.13/build/zeus-darwin-amd64 c```\r\n```\r\n(note the very very high mem allocation)\r\n\r\nThere is a delay between the kill -9 and the process actually exiting.\r\n\r\nThis issue does not appear in the versions of zeus 0.15.4 to 0.15.12 - only in .13.. This is hitting us as well, but in the rails console using `pry-rails`: no binding.pry required. Anything that triggers the pager causes it.\r\n\r\nProcess looks like this when it needs to be kill -9'd:\r\n```\r\nmp              43629   0.0  0.0 556624768   3996 s005  U+    1:44pm   0:00.08 /Users/mp/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/zeus-0.15.13/build/zeus-darwin-amd64 c```\r\n```\r\n(note the very very high mem allocation)\r\n\r\nThere is a delay between the kill -9 and the process actually exiting.\r\n\r\nThis issue does not appear in the versions of zeus 0.15.4 to 0.15.12 - only in .13.. ",
    "maestromac": "This is happening to me as well. Downgrading to 0.15.12 solved it.\r\n\r\nrails (4.2.5.1)\r\npry (0.10.4)\r\npry-rails (0.3.6). This is happening to me as well. Downgrading to 0.15.12 solved it.\r\n\r\nrails (4.2.5.1)\r\npry (0.10.4)\r\npry-rails (0.3.6). ",
    "bjeanes": "I'm also experiencing this. _Sometimes_, I can `^C` out of the pager and drop back into pry. However, I then cannot quit the main process. I too have had quite a few `^Z` then `kill %1` iterations in the last few weeks, though. This also usually corrupts the tty and I have to run `stty sane` to get a functioning shell again.\r\n\r\n<img width=\"586\" alt=\"2017-04-07 at 2 10 pm\" src=\"https://cloud.githubusercontent.com/assets/2560/24785301/1c371cea-1b9c-11e7-952a-c85d2849232e.png\">\r\n. Confirmed downgrading from `0.15.13` to `0.15.12` also resolved the issue for me.. I'm also experiencing this. _Sometimes_, I can `^C` out of the pager and drop back into pry. However, I then cannot quit the main process. I too have had quite a few `^Z` then `kill %1` iterations in the last few weeks, though. This also usually corrupts the tty and I have to run `stty sane` to get a functioning shell again.\r\n\r\n<img width=\"586\" alt=\"2017-04-07 at 2 10 pm\" src=\"https://cloud.githubusercontent.com/assets/2560/24785301/1c371cea-1b9c-11e7-952a-c85d2849232e.png\">\r\n. Confirmed downgrading from `0.15.13` to `0.15.12` also resolved the issue for me.. ",
    "Crunch09": "With the help of `git bisect` and manually testing the commit i could determine that the culprit is https://github.com/burke/zeus/commit/0916d0f4746995913a91c50979ab0bace8e8137f . cc: @sideshowcoder . With the help of `git bisect` and manually testing the commit i could determine that the culprit is https://github.com/burke/zeus/commit/0916d0f4746995913a91c50979ab0bace8e8137f . cc: @sideshowcoder . ",
    "chenxi-vmware": "Cool.. Cool.. ",
    "jeremiahlukus": "\r\nthe quickest and probably least invasive fix is to move\r\n\r\nrequire 'rpsec/rails'\r\nabove\r\n\r\nrequire 'spec_helper'\r\nin the rails_helper.rb file\r\n\r\nso that it looks like the following:\r\n\r\nrequire 'rpsec/rails'\r\nrequire 'spec_helper'\r\n\r\n\r\nhttp://stackoverflow.com/questions/26073898/rspec-3-1-with-zeus-should-i-require-rspec-rails-in-spec-helper. re-installed works now. \r\nthe quickest and probably least invasive fix is to move\r\n\r\nrequire 'rpsec/rails'\r\nabove\r\n\r\nrequire 'spec_helper'\r\nin the rails_helper.rb file\r\n\r\nso that it looks like the following:\r\n\r\nrequire 'rpsec/rails'\r\nrequire 'spec_helper'\r\n\r\n\r\nhttp://stackoverflow.com/questions/26073898/rspec-3-1-with-zeus-should-i-require-rspec-rails-in-spec-helper. re-installed works now. ",
    "brancusi": "I will try to create one. Thank you. I will try to create one. Thank you. ",
    "server-monitor": "I ran into a similar problem. Instead of `console` I was trying to run `server`. I did some digging and here's what I found:\r\n\r\nThe problem happens in `https://github.com/burke/zeus/blob/master/rubygem/lib/zeus/rails.rb` at this method:\r\n\r\n    def server\r\n      require 'rails/commands/server'\r\n      server = ::Rails::Server.new\r\n      Dir.chdir(::Rails.application.root)\r\n      server.start\r\n    end\r\n\r\nThe Rails authors changed the commands directory structure (`https://github.com/rails/rails/tree/master/railties/lib/rails/commands`). The path for the required file `rails/commands/server` has been changed to `rails/commands/server/server_command`.\r\n\r\nI edited the method above to reflect this path change:\r\n\r\nFrom: `require 'rails/commands/server'`\r\n\r\nTo: `require 'rails/commands/server/server_command'`\r\n\r\nI ran Zeus and a new error appeared: `uninitialized constant Rails::Command::Base`. I looked around and found the definition of this constant in `rails/command`. So I inserted `require 'rails/command'` at the beginning of the method.\r\n\r\nI reran Zeus and a new error appeared; ``rack-2.0.3/lib/rack/server.rb:315:in `exist?': no implicit conversion of nil into String (TypeError)``.\r\n\r\nI have no idea. It seems it has something to do with the injection of options and somehow the Rake task is not receiving those options. And it seems there has been a change in how the Rails server (and possibly the other tasks as well) are setup and invoked.\r\n\r\nHowever, I found a way to make it work from the Rails initialization doc at `http://guides.rubyonrails.org/initialization.html`.\r\n\r\n    def server\r\n      require 'rails/command'\r\n      ::Rails::Command.invoke 'server', ARGV\r\n    end\r\n\r\nI don't know if this is the right way to fix it. It's different from the original pattern. If you want to make the other commands work, you'll have to change the file path to the correct file path (among other things). For example, the method for the `console` command will have to be changed to something like:\r\n\r\n    def console\r\n      require 'rails/command'\r\n      require 'rails/commands/console/console_command'    \r\n\r\n\r\nI hope this helps.. That's awesome. I didn't even think about putting in logic to decide between versions > and < 5.1. There's one small typo though on the `run_rails_5_1_or_higer_command` method name. I think you meant `run_rails_5_1_or_higher_command`.. @iGEL It's already released. I tested it a few days ago.. I ran into a similar problem. Instead of `console` I was trying to run `server`. I did some digging and here's what I found:\r\n\r\nThe problem happens in `https://github.com/burke/zeus/blob/master/rubygem/lib/zeus/rails.rb` at this method:\r\n\r\n    def server\r\n      require 'rails/commands/server'\r\n      server = ::Rails::Server.new\r\n      Dir.chdir(::Rails.application.root)\r\n      server.start\r\n    end\r\n\r\nThe Rails authors changed the commands directory structure (`https://github.com/rails/rails/tree/master/railties/lib/rails/commands`). The path for the required file `rails/commands/server` has been changed to `rails/commands/server/server_command`.\r\n\r\nI edited the method above to reflect this path change:\r\n\r\nFrom: `require 'rails/commands/server'`\r\n\r\nTo: `require 'rails/commands/server/server_command'`\r\n\r\nI ran Zeus and a new error appeared: `uninitialized constant Rails::Command::Base`. I looked around and found the definition of this constant in `rails/command`. So I inserted `require 'rails/command'` at the beginning of the method.\r\n\r\nI reran Zeus and a new error appeared; ``rack-2.0.3/lib/rack/server.rb:315:in `exist?': no implicit conversion of nil into String (TypeError)``.\r\n\r\nI have no idea. It seems it has something to do with the injection of options and somehow the Rake task is not receiving those options. And it seems there has been a change in how the Rails server (and possibly the other tasks as well) are setup and invoked.\r\n\r\nHowever, I found a way to make it work from the Rails initialization doc at `http://guides.rubyonrails.org/initialization.html`.\r\n\r\n    def server\r\n      require 'rails/command'\r\n      ::Rails::Command.invoke 'server', ARGV\r\n    end\r\n\r\nI don't know if this is the right way to fix it. It's different from the original pattern. If you want to make the other commands work, you'll have to change the file path to the correct file path (among other things). For example, the method for the `console` command will have to be changed to something like:\r\n\r\n    def console\r\n      require 'rails/command'\r\n      require 'rails/commands/console/console_command'    \r\n\r\n\r\nI hope this helps.. That's awesome. I didn't even think about putting in logic to decide between versions > and < 5.1. There's one small typo though on the `run_rails_5_1_or_higer_command` method name. I think you meant `run_rails_5_1_or_higher_command`.. @iGEL It's already released. I tested it a few days ago.. ",
    "falonofthetower": "@sideshowcoder Worked like a charm. I didn't even have to uninstall. \r\n```\r\nruby 2.4.1-p111\r\nRails 5.1.1\r\nzeus 0.15.15.pre\r\nfedora 25\r\n```. @sideshowcoder Worked like a charm. I didn't even have to uninstall. \r\n```\r\nruby 2.4.1-p111\r\nRails 5.1.1\r\nzeus 0.15.15.pre\r\nfedora 25\r\n```. ",
    "jeremyjs": "I ran into the same issue using the latest release of zeus with Rails 5.1 and the pre version of zeus is working great for me. Thanks!. I ran into the same issue using the latest release of zeus with Rails 5.1 and the pre version of zeus is working great for me. Thanks!. ",
    "arizz96": "https://github.com/burke/zeus/pull/638\r\n\ud83d\ude09 . @AndrzejJantos check out this\r\nhttps://github.com/burke/zeus/issues/617#issuecomment-346040927\r\n\r\nFor me, with this ENV, Zeus works. https://github.com/burke/zeus/pull/638\r\n\ud83d\ude09 . @AndrzejJantos check out this\r\nhttps://github.com/burke/zeus/issues/617#issuecomment-346040927\r\n\r\nFor me, with this ENV, Zeus works. ",
    "iGEL": "@sideshowcoder Thank you very much for this. Any chance for a new release soon? It's our only blocker for the Rails 5.1 update.. @sideshowcoder Thank you very much for this. Any chance for a new release soon? It's our only blocker for the Rails 5.1 update.. ",
    "joejuzl": "I have the same issue when I have byebug version `9.x.x` on my machine. Only having `8.x.x` seems to fix it.... I have the same issue when I have byebug version `9.x.x` on my machine. Only having `8.x.x` seems to fix it.... ",
    "saveriomiroddi": "Fails for me as well. The behavior is erratic. I've tried uninstall/reinstall, upgrade/downgrade byebug.\r\n\r\nThe first successful attempt was when I installed v0.15.3. After that, I've tried reinstalling (after several previous attempts) v0.15.4, and now it's working.. Fails for me as well. The behavior is erratic. I've tried uninstall/reinstall, upgrade/downgrade byebug.\r\n\r\nThe first successful attempt was when I installed v0.15.3. After that, I've tried reinstalling (after several previous attempts) v0.15.4, and now it's working.. ",
    "microspino": "+1 same problem here. +1 same problem here. ",
    "devonestes": "Also seeing the same issue. Is there any chance it's related to this issue with forking processes in High Sierra? https://blog.phusion.nl/2017/10/13/why-ruby-app-servers-break-on-macos-high-sierra-and-what-can-be-done-about-it/\r\n\r\nIt seems to have begun reliably only after I upgraded to High Sierra, and if memory serves me right Zeus uses forking pretty heavily.. Also seeing the same issue. Is there any chance it's related to this issue with forking processes in High Sierra? https://blog.phusion.nl/2017/10/13/why-ruby-app-servers-break-on-macos-high-sierra-and-what-can-be-done-about-it/\r\n\r\nIt seems to have begun reliably only after I upgraded to High Sierra, and if memory serves me right Zeus uses forking pretty heavily.. ",
    "gaddism77": "I'm still seeing the same problem. Is there any progress on it?. I'm still seeing the same problem. Is there any progress on it?. ",
    "AndrzejJantos": "any news about this?. Nope, it didn't help.\r\n\r\nZeus is not working on latest mac update + gem 'pg'.. any news about this?. Nope, it didn't help.\r\n\r\nZeus is not working on latest mac update + gem 'pg'.. "
}