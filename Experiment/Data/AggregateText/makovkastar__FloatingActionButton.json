{
    "makovkastar": "Hi @vangivang! Thanks for the good find. I have already pushed a fix for this bug: e074c32078097a8e961523e5534e0e3a57adf484\n\nNow the list view scroll Y is not calculated if an adapter is not set or empty.\n\nPlease update and let me know if it resolved your problem.\n. @vangivang you are completely right regarding these two issues. I pushed a fix for the second one.\n\nRegarding the first problem - I don't know if it's correct to rely on the constant size of each list item. But inflating and measuring views in a loop is also a very bad idea. I'll think how to fix this problem.\n\nAnyway, thanks a lot for your contribution. And I'm quite new in writing custom views.\n. @vangivang I inspected some another libraries that operate with list view children heights and decided to rely on the same height of all items in a list.\n\nAs a result I completely removed `computeListViewScrollY` method and now only use `getListViewScrollY` for calculating a scroll position:\n\n``` java\nprivate int getListViewScrollY() {\n    View topChild = mListView.getChildAt(0);\n    return topChild == null ? 0 : mListView.getFirstVisiblePosition() * topChild.getHeight() -\n            topChild.getTop();\n}\n```\n\nIt allowed to remove `mListViewItemOffsetY[]` and `isScrollComputed` class members together with necessity to re-calculate the scroll offsets on each data set change.\n. @vangivang yes, that's it. Furthermore I added a small optimization: just don't send messages to the handler if a button is already in the correct state. E.g. no need to show/hide if it's already visible/hidden:\n\n``` java\nif (newScrollY > mScrollY && mVisible) {\n    // Scrolling up\n    mVisible = false;\n    mScrollSettleHandler.onScroll(getTop());\n} else if (newScrollY < mScrollY && !mVisible) {\n    // Scrolling down\n    mVisible = true;\n    mScrollSettleHandler.onScroll(0);\n}\n```\n. @vangivang why can't you attach it earlier? For example in `onCreate(...)` of an Activity or `onViewCreated(...)` of a Fragment?\n. Thanks! Merged.\n. Hi @StephaneBg! Thanks a lot for your PR, but actually I'm sure the time has come to set `minSdk=14`.\n. Please update your fork before submitting a PR. Now merging becomes not easy.\nAlso please do not submit so many unrelated changes in one PR.\n. Could you post your layout file? And how did you include the button to your project?\n. Yes, the rendering problem exists. But the button must be visible when you launch your program on the phone or emulator. As I see you've copied source code to your project. Have you also copied `attrs.xml` and  `dimens.xml`? \n\nI'd suggest not to copy manually but just add a gradle dependency to your `build.gradle`:\n`compile 'com.melnykov:floatingactionbutton:1.0.0'`\n. You have just rewritten the library from scratch :) With this PR it becomes like an almost full clone of the https://github.com/FaizMalkani/FloatingActionButton. Why do we need this?\nAnd I doubt if we need a `codesample` module. Integration is simple enough not to have extra sample modules.\n. @StephaneBg yes, thanks a lof for your understanding and I very appreciate your help.\n\nAnd anyway I'll take some fixes from this PR.\n. Hi!\n\nI have added two methods: `show()` and `hide()` to explicitly manipulate the button state.\n\nSee commit 570232a18402ac5031d1bdcaaa09f06c107368eb.\n\nI have already pushed an update to the Maven Central. It'll be available during a few hours.\n. Hi @thiagolocatelli! Thanks for your contribution, I'll be able to take a look on it little bit later.\n. I have implemented a fully working version without lags, but it requires an extra class such as [ObservableScrollView](https://code.google.com/p/romannurik-code/source/browse/misc/scrolltricks/src/com/example/android/scrolltricks/ObservableScrollView.java?r=87d727550384ed29bc6eda7181ce7cdee8a2bb9f). A user has to use it instead of a standard ScrollView. For now I don't want to introduce custom classes.\nAnyway, thanks for your proposition.\n. Thanks for the report! Commit 38c5a36f5cd44a34c7a310b79fb7fe96f33e81dc fixes this bug.\n. No, sorry, for now it's only possible to attach the `FloatingActionButton` to a `ListView`.\n. Hi @ernes87lp! Thanks for you feedback. But actually I think it's time to set `minSdk=14`. If you need to use this library on lower APIs, please fork the repository, make required changes and include the library as a project dependency.\n. 1. \u041a \u0441\u043e\u0436\u0430\u043b\u0435\u043d\u0438\u044e, \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435\u043b\u044c\u0437\u044f \u0441 \u044d\u0442\u0438\u043c \u0441\u0434\u0435\u043b\u0430\u0442\u044c, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0441\u043b\u0443\u0448\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u0441\u043b\u0443\u0448\u0430\u0442\u044c \u0441\u043e\u0431\u044b\u0442\u0438\u044f `AbsListView`. \n2. \u0415\u0441\u043b\u0438 \u043d\u0435 \u0441\u043b\u043e\u0436\u043d\u043e, \u043e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 Pull Request, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0431\u0443\u0434\u0443\u0442 \u043d\u0443\u0436\u043d\u044b\u0435 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u044b \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u0438 \u044f \u0434\u043e\u0431\u0430\u0432\u043b\u044e \u0438\u0445 \u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443. \u0418\u043b\u0438 \u0436\u0435 \u043d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043a \u043a\u0430\u043a\u0438\u043c \u043f\u043e\u043b\u044f\u043c \u0438 \u043c\u0435\u0442\u043e\u0434\u0430\u043c \u043d\u0443\u0436\u0435\u043d \u0434\u043e\u0441\u0442\u0443\u043f \u0432 \u043d\u0430\u0441\u043b\u0435\u0434\u043d\u0438\u043a\u0430\u0445 \u0438 \u044f \u0441\u0434\u0435\u043b\u0430\u044e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0441\u0430\u043c.\n. Hi @ilmetu! Thanks for you feedback. There were already a few requests for it. But actually I think it's time to set minSdk=14. If you need to use this library on lower APIs, please fork the repository, make required changes and include the library as a project dependency.\n. Merged. Thanks.\n. Hi @Stoyicker! Cool, thanks for your contribution. But there are a lof of code duplication. The only different thing is a source of scroll events.Can we somehow extract common code to a superclass and create two subclasses for the `AbsListView` and the `RecyclerView`?\n. Or we can even go further an not create additional classes. Just add a new method `attachToRecyclerView` and a new class member called `mRecyclerView` that will hold a reference to the attached `RecyclerView`. Then in the `getListViewScrollY` we just check what class member(`mListView` or `mRecyclerView`) is not null and access it. It will be much simpler I guess. What do you think?\n. 1. For the sake of compatibility we cannot rename the `FloatingActionButton` class. And for me it would be strange if I have to use the `FloatingActionButton` class for the list views and `RecyclerViewFloatingActionButton`  for the recycler views. In this case I would assume that they are called `ListViewFloatingActionButton` and `RecyclerViewFloatingActionButton` respectively. It will be much simpler and easier to use the same class but different methods.\n2. In case of additional classes documentation will grow, complexity will grow, but we don't want that, right?\n3. \"like, what if for some reason there's a need for a third or even fourth attribute?\" - let's not assume too far what can happen. As you know it may never happen ;)\n\nSo yes, please use 2 class members and will see how it will go.\n. Only in case of `getOnScrollListener`. Leave  the `attachToListView` as it is and add a new `attachToRecyclerView` method.\n. You can check if the FAB is already attached to another source and throw an exception. For example: \"IllegalStateException(\"Already listening to a ListView\")\".\n. We don't replace the `attachToListView` we just add an additional method. But we replace the `getOnScrollListener`. So yes, only the `getOnScrollListener` has to be marked with @Deprecated.\n. The final result:\n\n@Deprecated getOnScrollListener \ngetAbsListViewOnScrollListener\ngetRecyclerViewOnScrollListener\n. Hi @Stoyicker!\nSorry for delay, I was on vacation for a week. Currently I'm busy, but will merge this ASAP.\n\nP.S. Did you test it on the real `RecyclerView`? As far as I know currently in order to use it you have to use`minSdkVersion 'L'`, don't you?\n. But it's not possible to use `minSdkVersion 'L'`. In this case all library consumers have to set this also for their main projects. Let's wait until a full support library will be released. \n. @alexey-rabets have you updated the library dependency to the version 1.0.4? I tested it on the list with different height items and an animation was smooth.\n. Please, it will help.\n. Thanks, I'll check.\n. @sreichholf  Thanks! Could you send a pull request? I'll review and merge it.\n. @alexey-rabets The issue seems finally to be resolved. I'll push an update to the Maven Central soon. For now could you check with the latest code base from the repo if the FAB works now with list with different items height?\n. Fine, I'll close the issue.\n. If you use Gradle or Maven you can add it as a dependency to your build.gradle/pom.xml(you can find a dependency info in the README file). But you will not be able to use this library if you use Ant with Eclipse.\n. Could you attach a screenshot for this bug?\n. Thanks, I'll take a look on it.\n. Thanks for your PR! I'll take a look on it ASAP.\n. Looks very good to me. Yes, an abstract `ScrollDirectionListener` is a good idea, please add it and let's merge.\n. Merged. Thanks a lot for your work.\n. With the Android Studio 0.8.14 and API 21 selected for the preview the FAB is rendered correctly now:\n\n![image 7](https://cloud.githubusercontent.com/assets/1076309/5229088/9c2779fe-771b-11e4-9303-d348bfe82bc8.png)\n. @peterjiz It seems it's a bug in the Android Studio UI Preview. It shouldn't have any impact in the runtime.\n. PR #26 deletes saving state and inner `SavedState` class because it's obsolete. So hopefully after merging it this bug will be resolved too.\n. Should be fixed in the version 1.4. If not - please reopen the issue.\n. Actually yes. Why not? Did you try to call `FloatingActionButton.show(true) / FloatingActionButton.hide(true)` to show/hide the FAB with animation?\n. Hi @airk000! Thanks for you feedback. There were already a few requests for it. But actually I think it's time to set `minSdk=14`. If you need to use this library on lower APIs, please fork the repository, make required changes and include the library as a project dependency.\n. Why don't just try to apply changes you see in this PR?\n. @PaulMaddox Nice job, thanks! Merged.\n. @ViliusKraujutis I'll merge the PR(#34) with the `RecyclerView` support soon and then publish a new version to the Maven Central.\n. Since #34 was closed in order for better PR(#35) and a new one requires some check, I'll publish existing version with new shadow today.\n. Done. The new version will be available in a few hours.\n. Hi @PaulMaddox, could you also provide a shadow image for the `xxxhdpi`?\n. @ViliusKraujutis as I saw on screenshots [here](http://www.google.com/design/spec/components/snackbars-and-toasts.html#snackbars-and-toasts-specs) the FAB should move up. Any ideas how to implement it? Do you think it's a responsibility of the FAB itself and not of a developer to do that?\n. @nwalters512 Actually I also think so. If we include solution for every case, the API will explode very fast. For now I'll close this issue.\n. @afollestad thanks! I'll review and merge it soon.\n. That's awesome! Thanks, will take a look on it a bit later.\n. @Symbianx no, I just need some time to review and merge it.\n. With these PR I cannot compile the sample not from the IDE nor from the command line:\n\n![image 4](https://cloud.githubusercontent.com/assets/1076309/4796955/b8f39c34-5e07-11e4-9d04-a044423d1c11.png)\n\nIt seems some problem with resources -http://stackoverflow.com/a/20549266/1552622. Will try to figure out what exactly.\n. @afollestad yes, very odd. Updating build tools version to `21.0.2` has resolved this issue.\nP.S. I also use Android Studio of the latest version.\n. @afollestad Could you please squash all commits into the one? It'd be much easier to check and merge.\n. @afollestad usually I do it in [this](http://stackoverflow.com/a/5190323/1552622) way.\n. @afollestad Okay, no problem. I'll try to do something about it.\n. @afollestad Merged. Thanks! My further plans:\n- Update a sample to demonstrate the FAB on the RecyclerView;\n- Add support for the ripple drawable on early versions.\n. @afollestad Yes, the demo gif is now updated. You can check in the README.\n. Actually material design [specs](http://www.google.com/design/spec/patterns/promoted-actions.html#promoted-actions-floating-action-button) say that floating action buttons must be only positive actions like Create, Favorite, Share, Navigate, and Explore. And it's even specified in the anti-pattern examples that text must not be placed inside the FAB:\n\n![patterns-promotedactions-qualitiesfab18_large_mdpi](https://cloud.githubusercontent.com/assets/1076309/4808104/b8daa5d6-5e9c-11e4-9222-adbfc2fa40bd.png)\n. You are right, thanks for the find. I'll update the sample with correctly sized icons today.\n. Fixed with 35dab4260b97455cc4568737799908e7954439a2.\n. @waylaidwanderer @afollestad in the version 1.0.5 (PR #32) shadow was updated to more accurately match the material design spec. Did you miss it?\n. Hi guys! Please try this code to show the FAB with circular reveal from the center:\n\n```\nFloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);\n\n// Get the center for the clipping circle\nint cx = fab.getWidth() / 2;\nint cy = fab.getHeight() / 2;\n\n// Get the final radius for the clipping circle\nint finalRadius = fab.getWidth() / 2;\n\n// Create the animator for the FAB (the start radius is zero)\nAnimator reveal = ViewAnimationUtils.createCircularReveal(fab, cx, cy, 0, finalRadius);\nreveal.setDuration(500);\nreveal.start();\n```\n\nLet me know if it works.\n. Since I've got no replies from participants, I'm going to close this issue. \n. Hi, from my point of view it's better not to change an access level of the internal variable and not to set an anonymous class as a scroll direction listener in constructors but implement `ScrollDirectionListener` for `FabOnScrollListener` and `FabRecyclerOnViewScrollListener` classes. In this case subclasses may override `onScrollDown` and `onScrollUp` callbacks where they call super and then custom code goes.\n\n``` java\npublic static class FabRecyclerOnViewScrollListener extends ScrollDirectionRecyclerViewDetector implements ScrollDirectionListener {\n        private FloatingActionButton mFloatingActionButton;\n\n        public FabRecyclerOnViewScrollListener() {\n            setScrollDirectionListener(this);\n        }\n\n        public void setFloatingActionButton(FloatingActionButton floatingActionButton) {\n            mFloatingActionButton = floatingActionButton;\n        }\n\n        @Override\n        public void onScrollDown() {\n            mFloatingActionButton.show();\n        }\n\n        @Override\n        public void onScrollUp() {\n            mFloatingActionButton.hide();\n        }\n    }\n```\n\n``` java\nclass MyScrollListener extends FloatingActionButton.FabRecyclerOnViewScrollListener {\n\n       @Override\n        public void onScrollDown() {\n            super.onScrollDown();\n           // Custom code\n        }\n\n        @Override\n        public void onScrollUp() {\n            super.onScrollUp();\n            // Custom code\n        }\n}\n```\n\n@ViliusKraujutis What do you think about it?\n. I've implemented above solution in the 5754dc2e4af69f3b7a2ea7ac8c0ba783ecf40cf9. But I don't know if it's worth releasing the new version to the Maven Central.\n. I've asked @PaulMaddox to provide a shadow image for `xxxhdpi`. Regarding weird two circles I'll take a look.\n. Added shadow image for `xxxhdpi` in 1e1b8d78d602c235f739ac5f0518627412b65bd.\n. It seems nobody knows what causes this bug. I posted a question http://stackoverflow.com/questions/26960939/elevation-transparency-bug-on-android-lollipop but got no answers.\n\nCan it be an Android bug?\n. @Iggy82 No, still no solution...\n. @easycheese You are right, it definitely must be specified in the README. I'll update it.\n. Merged. Thanks a lot.\n. Hi @alexblack! There were already a few requests for supporting lower versions. But actually I think it's time to set `minSdk=14`. If you need to use this library on lower APIs, please take a look on the PR #30. It uses NineOldAndroids library for back compatibility.\n. Fixed with 1e1b8d78d602c235f739ac5f0518627412b65bd7.\n\n![device-2014-11-08-203234](https://cloud.githubusercontent.com/assets/1076309/4965114/6dc22036-6786-11e4-9b18-2fbfb8d3e573.png)\n. The FAB has `show()` and `hide()` methods. So you may track swipe motions by yourself and then hide and show the FAB manually.\n\nDo you know how does the FAB behave in other apps (for example by Google) when a list is not scrollable?\n. I think the best way to fix this issue is to add a bottom padding for your content in the list. This is how it's currently done in the dialer app in Lollipop:\n\n![device-2014-11-21-181718](https://cloud.githubusercontent.com/assets/1076309/5145352/aed3ef0e-71aa-11e4-83ed-7af6f79a7d84.png)\n. Let's stick for now with how this Google does. Will revise in future if some approach will widespread.\n. It's even not a padding itself but a scrollable empty footer. So when a user scrolls a list, it's also being scrolled.\nI've recorded a short sample to demonstrate this behavior:\n![efemg](https://cloud.githubusercontent.com/assets/1076309/5145764/6dce2ed0-71ae-11e4-8bac-bf40733d1ec7.gif)\n. @nadavfima Does it have sense to disable/enable scrolling after attaching to a ListView? Why do simply not attach the FAB to the ListView if you don't want scrolling?\n. @nmrainho @nwalters512 @adrianblp hey guys! Actually I think Google doesn't strictly forbid using 2 FABs on the same screen but just doesn't recommend. That's how I understand a phrase: \"Try to use only one floating action button per screen...\".\n\nThe list (AbsListView or RecyclerView) can have only one scroll listener. So when you attach the first FAB and then the second - the second listener replaces the first. In order to attach 2 FABs to the same list you need to use a custom listener:\n\n``` java\nFloatingActionButton fab1 = (FloatingActionButton) root.findViewById(R.id.fab1);\nfinal FloatingActionButton fab2 = (FloatingActionButton) root.findViewById(R.id.fab2);\nfab1.attachToListView(list, new FloatingActionButton.FabOnScrollListener() {\n    @Override\n    public void onScrollDown() {\n        super.onScrollDown();\n        fab2.show();\n    }\n\n    @Override\n    public void onScrollUp() {\n        super.onScrollUp();\n        fab2.hide();\n     }\n});\n```\n\nIt works pretty well.\n. Added support for the ScrollView in the 05f49141ef6a481e56615c8f83d9816f21ba3522. Will be available in the version `1.0.8` soon.\n. Fixed 325c8d7afeb6e994ab2c1b9a5bd83d6a7aad052f.\n. Yo @adrianblp. I've added this getter in the ac770dead1e3b56fde9df7f87f448fe163d66ce5.\n. Hi @srcreigh! No, no extra configuration is required.\n. Thanks! I'll review and merge it soon.\n. Merged, thanks a lot!\n\nI refactored code a bit because I didn't like an idea of modifying class members in methods that check something (e.g. setting `mLastScrollY` in the `isSignificantDelta`, etc.).\n. Good idea but in what way do you think it's better to support it?\n. Actually you can find all material design icons here: https://github.com/google/material-design-icons.\nPreview: http://google.github.io/material-design-icons.\n\nI'm not sure if it's a good idea to put some icons to the lib's resources. It's not a big deal to download exactly what you need and set it to the FAB.\n\nSo for now I'll close this issue. If you have some another ideas, please reopen it.\n\nCheers!\n. Hi @MrBrightside29. Yes, it's definitely a bug. Could you fork this library and modify a sample to show this behavior? Currently I cannot reproduce this bug (I simply remove all items on the FAB click but the FAB itself is not hidden after that).\n. Maybe the third library causes this issue. That's fine that you found a workaround, so I'll close the issue for now. If someone else will have the same bug I'll reopen.\n. The library already supports ripple effect. You can set a ripple color with `fab:fab_colorRipple` attribute. Please check a sample: https://github.com/makovkastar/FloatingActionButton/blob/master/sample/src/main/res/layout/fragment_listview.xml#L23.\n. Nope. Just use Gradle or Maven.\n. Hi, there were already a few issues and pull requests with the same request. Please check why I don't accept them:\n\nhttps://github.com/makovkastar/FloatingActionButton/issues/13\nhttps://github.com/makovkastar/FloatingActionButton/issues/44\nhttps://github.com/makovkastar/FloatingActionButton/pull/4\nhttps://github.com/makovkastar/FloatingActionButton/pull/30\n. Hi! Do you mean Android version 2.+? If yes - the library supports Android 4.+.\n. Please take a look on https://github.com/makovkastar/FloatingActionButton/pull/30. If you need to use this library on lower APIs, please fork the repository, apply changes from the specified PR and include the library as a project dependency.\n. Thanks, but with this PR I can't compile the library. I'm getting the next error:\n\n```\nFailed to set up Android modules in project 'FloatingActionButton': Unsupported method: SourceProvider.getJniDirectories().\n         The version of Gradle you connect to does not support that method.\n         To resolve the problem you can change/upgrade the target version of Gradle you connect to.\n         Alternatively, you can ignore this exception and read other information from the model.\n```\n\nI have the latest Android Studio 0.8.14 installed.\nIt [seems](http://stackoverflow.com/questions/26680972/unsupportedmethodexception-android-studio-0-8-9) upgrading to 0.9.0 resolves this problem but it's only available in the canary channel.\n. @acappelli For now could you just leave code that's connected to supporting older API (remove all gradle staff) and also set minSdk to 7? And I'll merge it.\n. Thanks for your contribution. I already added support for API 7 in the 58d19f1eec92f769016b1584e427f91893001aeb.\n. Thanks, you are right. I fixed it with 17b5268237e5e6647d125eb152e46683a2dbbb78.\n. With this PR I can't compile the library. I'm getting the next error:\n\n```\n Failed to set up Android modules in project 'FloatingActionButton': Unsupported method: SourceProvider.getJniDirectories().\n         The version of Gradle you connect to does not support that method.\n         To resolve the problem you can change/upgrade the target version of Gradle you connect to.\n         Alternatively, you can ignore this exception and read other information from the model.\n```\n\nI have the latest Android Studio 0.8.14 installed.\nIt [seems](http://stackoverflow.com/questions/26680972/unsupportedmethodexception-android-studio-0-8-9) upgrading to 0.9.0 resolves this problem but it's only available in the canary channel.\n\nWill wait until the newest version of the Android Studio will be released.\n. Thanks! Now with Android Stuido 1.0 RC 3 it works.\n. There were already a lot requests to support lower API versions. I'll think about reducing minSdk.\n. 58d19f1eec92f769016b1584e427f91893001aeb\n\nVersion 1.0.9 will be released to the Maven Central soon.\n. In case you need such data you should not use the FAB as a detector of scroll events. The library was created to support simple cases when a user just needs the FAB that shows/hides when a list is scrolled and simple callbacks such as `onScrollUp/onScrollDown`.\n\nIn your case you need some external observable view that will just hide/show the FAB when scrolling events occur (you don't need to call `attach*` on the FAB).\n\nP.S. You may use this library: https://github.com/ksoichiro/Android-ObservableScrollView. But I didn't test it.\n. With the latest updates I simplified usage of custom listeners a lot. A new version will be available today and for now you can check already updated sample. I added showing/hiding an ActionBar with tabs for the ListView. \n. But actually you should not use the FAB as a detector of scroll events. The library was created to support simple cases when a user just needs the FAB that shows/hides when a list is scrolled and simple callbacks such as onScrollUp/onScrollDown.\n\nIn your case you have to observe scroll events by yourself and just hide/show the FAB and an ActionBar when scrolling occurs (you don't need to call attach\\* on the FAB).\n. Maybe [this](https://github.com/ksoichiro/Android-ObservableScrollView) library may help you. It has samples for hiding/showing an ActionBar. But I didn't test it.\n. @MeanderingCode You are right, it's not possible to control FAB's behavior from a callback. If you need such things you should not attach the FAB to the target and use external scroll observer (such as library I pointed above).\n. Hi, I just tested it on the sample project and don't get any compile errors. It seems your build didn't complete successfully for some another reason.\n. Layout example?\n. Could you also attach a screenshot and describe what you expect?\n. As I see from screenshots the FAB is translated but not hidden fully because of your transparent navigation bar. You should increase the bottom margin of the button by the navigation bar height. I don't know how reliable the `getNavBarHeight()` method works (I found it on the StackOverflow) but I tested the following code on my Nexus 5 and everything works as expected:\n\n```\nFloatingActionButton fab = (FloatingActionButton) root.findViewById(R.id.fab);\nFrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) fab.getLayoutParams();\nlayoutParams.setMargins(layoutParams.leftMargin, layoutParams.topMargin, layoutParams.rightMargin, layoutParams.bottomMargin + getNavBarHeight());\n\nprivate int getNavBarHeight() {\n    int resourceId = getResources().getIdentifier(\"navigation_bar_height\", \"dimen\", \"android\");\n    if (resourceId > 0) {\n        return getResources().getDimensionPixelSize(resourceId);\n     }\n     return 0;\n }\n```\n. \u0414\u0430, \u0433\u043e\u0432\u043e\u0440\u044e :) \u042f \u0432 \u0442\u0432\u043e\u0435\u043c xml \u043d\u0435 \u0432\u0438\u0436\u0443 \u0432\u043e\u043e\u0431\u0449\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 FloatingActionButton.\n. \u0423 \u043c\u0435\u043d\u044f \u043d\u0438\u043a\u0430\u043a \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0441\u0442\u0438 \u0442\u0430\u043a\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 (\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b \u043a\u043e\u0434 \u0438\u0437 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 sample \u0438 \u0441\u0434\u0435\u043b\u0430\u043b \u0435\u0433\u043e \u043f\u043e\u0445\u043e\u0436\u0438\u043c \u043d\u0430 \u0442\u0432\u043e\u0439). \u0415\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c - \u0441\u043a\u0438\u043d\u044c \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u043f\u0440\u043e\u0435\u043a\u0442, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u044f \u043c\u043e\u0433\u0443 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435. \u0415\u0441\u043b\u0438 \u043d\u0435\u0442, \u0442\u043e \u0437\u0430\u0434\u0430\u0439 \u0432\u043e\u043f\u0440\u043e\u0441 \u043d\u0430 StackOverflow, \u044f \u0434\u0443\u043c\u0430\u044e, \u0447\u0442\u043e \u0441\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0441 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u043e\u0439, \u0430 \u0441 \u0442\u0432\u043e\u0438\u043c \u043b\u0435\u0439\u0430\u0443\u0442\u043e\u043c.\n. \u0418 \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439 \u043d\u0435 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c `attachToScrollView`. \u0415\u0441\u043b\u0438 \u044d\u0442\u043e \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442, \u0442\u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 100% \u0432 \u0442\u0432\u043e\u0435\u0439 \u0440\u0430\u0437\u043c\u0435\u0442\u043a\u0435. \u0412\u0435\u0434\u044c FAB - \u044d\u0442\u043e \u043e\u0431\u044b\u0447\u043d\u044b\u0439 ImageButton.\n. \u041c\u043d\u0435 \u043d\u0443\u0436\u0435\u043d \u043f\u0440\u043e\u0435\u043a\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u044f \u0441\u043c\u043e\u0433\u0443 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043a\u043e\u0434. APK-\u0444\u0430\u0439\u043b \u043d\u0435 \u043f\u043e\u043c\u043e\u0436\u0435\u0442. \n\nP.S. \u043d\u0435 \u043c\u043e\u0433\u0443 \u0432\u043e\u0439\u0442\u0438, \u043f\u0438\u0448\u0435\u0442 \"\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438\".\n. \u041d\u0443 \u0447\u0442\u043e, \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u0441\u043f\u0440\u0430\u0432\u0438\u0442\u044c?\n. Hi, thanks for feedback. I fixed this bug with 5853dbfaf167063b5fbca395f03de9dbbf8a8488. I'll push an update to the Maven Central today.\n. Thanks for your PR but I think the API can explode very quickly if I add new and new features. I wanted to keep this library small and one goal oriented: just hide and show the FAB on list scroll. If you need to have more complex functionality feel free to fork this repo and make changes.\n. How about just setting the FAB not clickable if it's not visible?\n\n``` java\nsetClickable(visible);\n```\n. @AndroidDeveloperLB I tried setting visibility on animation start/end but the FAB stays clickable even when it becomes invisible. This is code I used:\n\n``` java\nif (!hasHoneycombApi()) {\n    animator.setListener(new AnimatorListenerAdapter() {\n        @Override\n        public void onAnimationStart(Animator animation) {\n            if (visible) {\n                setVisibility(View.VISIBLE);\n            }\n        }\n\n        @Override\n        public void onAnimationEnd(Animator animation) {\n            if (!visible) {\n                setVisibility(View.GONE);\n            }\n        }\n    });\n}\n```\n\nI found a [post](http://stackoverflow.com/a/7760401/1552622) on SO with a similar problem but when I tried to clear animation, the FAB started blinking. So maybe simply setting it not clickable is better solution.\n. Not yet. Will try and comment soon.\n. `setClickable(visible);` looks more compact. And for me your code still causes blinks on the 2.3.7 Genymotion emulator.\nFrom my point the concrete NineOldAndroids library doesn't look as much overhead. So for now I'm going to leave it.\n\nAnyway, thanks for the bug report, I'll release a fix to the Maven Central soon.\n. b630801587d9bfc7ca98869c4b9e09939921f1aa\n. You may try to play with custom listeners using such as `attachToListView(AbsListView listView, ScrollDirectionListener listener)` -https://github.com/makovkastar/FloatingActionButton/blob/master/library/src/main/java/com/melnykov/fab/FloatingActionButton.java#L344.\n\nOr don't call attachToListView and implement external scroll observer that will call show/hide on the FAB.\n. Fixed 99cac6ae11bbe4d4821993b8a1b488e29073bc84.\nThanks!\n. Please take a look on #46.\n. What does \"got confused\" mean?\n. How can I reproduce it? I tried clearing a list adapter and calling `notifyDataSetChanged` in the runtime but button stayed on place. Or maybe you can fork the repo and modify it to show this wrong behavior?\n. What does your PR do? I didn't get your idea.\n. Could you post yout layout and icon image that you use for the FAB?\n. Hi! Did you fix this issue?\n. But in your posted xml layout you didn't use my library but already this one as I see by the package name (`com.getbase.floatingactionbutton`): https://github.com/futuresimple/android-floating-action-button. Did you post wrong layout?\n. Hi! You can set elevation level only on API >= 21. For pre-Lollipop shadow is used as a graphical asset so cannot be changed.\n. @mufumbo What do you mean? Shadow on pre-Lollipop is implemented using shipped with the library shadow image of the exact size. How can it be fixed?\n. I tried two different layouts with the SwipeRefreshLayout  and both work:\n\n```\n<FrameLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:fab=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <android.support.v4.widget.SwipeRefreshLayout\n        android:id=\"@+id/refresh\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n        <ListView\n            android:id=\"@android:id/list\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:cacheColorHint=\"@android:color/transparent\"\n            android:headerDividersEnabled=\"false\"/>\n    </android.support.v4.widget.SwipeRefreshLayout>\n\n    <com.melnykov.fab.FloatingActionButton\n        android:id=\"@+id/fab\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"bottom|right\"\n        android:layout_margin=\"16dp\"\n        android:src=\"@drawable/ic_add_white_24dp\"\n        fab:fab_colorNormal=\"@color/accent\"\n        fab:fab_colorPressed=\"@color/accent_pressed\"\n        fab:fab_colorRipple=\"@color/ripple\"/>\n</FrameLayout>\n```\n\n```\n<android.support.v4.widget.SwipeRefreshLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:fab=\"http://schemas.android.com/apk/res-auto\"\n    android:id=\"@+id/refresh\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <FrameLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n        <ListView\n            android:id=\"@android:id/list\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:cacheColorHint=\"@android:color/transparent\"\n            android:headerDividersEnabled=\"false\"/>\n\n        <com.melnykov.fab.FloatingActionButton\n            android:id=\"@+id/fab\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"bottom|right\"\n            android:layout_margin=\"16dp\"\n            android:src=\"@drawable/ic_add_white_24dp\"\n            fab:fab_colorNormal=\"@color/accent\"\n            fab:fab_colorPressed=\"@color/accent_pressed\"\n            fab:fab_colorRipple=\"@color/ripple\"/>\n    </FrameLayout>\n</android.support.v4.widget.SwipeRefreshLayout>\n```\n. Merged! Thanks a lot. \n\nP.S. I changed the default color for the disabled state to darker gray.\n. Initially minSdk was set to 14. Then I've got a lot of requests to support lower Android versions so it was added. Now I cannot cut support of lower versions.\nRegarding the `allProjects` section I didn't get your idea. What is the benefit of defining the additional repositories in lib build file?\n. Could you separate code for `repositories` section? I will merge it.\n. Currently it's not implemented for the FAB. It must be implemented by yourself. Please check https://github.com/makovkastar/FloatingActionButton/issues/33 for details.\n. Merged. Thanks!\n. You may use `attachXXX` methods with the second argument of type `ScrollDirectionListener`. `ScrollDirectionListener` has `onScrollDown` and `onScrollUp` callbacks to track the state of the FAB. Or do you need to know when the animation exactly starts and stops?\n. @AkshayChordiya thanks, you're right.\n. Did you try `setOnClickListener`? It should work.\n. @AkshayChordiya  @tbremer19 Yes, it definitely works.\n. Hi! I checked it by using a background color for list in the sample. Shadow looks good:\n![device-2015-01-05-171053](https://cloud.githubusercontent.com/assets/1076309/5614074/b9ae9d0c-94f5-11e4-8bcb-f3db25cc863c.png)\n. Could you try to switch shadow off and check? It seems the method `setMarginsWithoutShadow` causes this movement.\n. I don't know for now. Currently FAB's margin is changed in the runtime on pre-Lollipop because shadow  mustn't be taken into account when margins are set. \n. Thanks a lot. I will release a new version soon. And sorry for a long delay.\n. Please switch to the Android Studio and you will not have any problems with importing this library. Thanks.\n. Hi, nice idea, could you send me a PR?\n. @rcastill did you succeed with importing the library using answer from @RaymondBakkerMoonlightMultimedia?\n. No answer. Closing...\n. The FAB library is packaged as an AAR archive so there is no JAR file. Please try the following dependency and let me know if it works:\n\n``` xml\n<dependency>\n    <groupId>com.melnykov</groupId>\n    <artifactId>floatingactionbutton</artifactId>\n    <version>1.2.0</version>\n    <type>aar</type>\n</dependency>\n```\n. Thanks! I will review and merge it soon.\n. I'm trying to merge it but Git says that my repo is up-to-date with you. It seems your fork doesn't have this commits already. Did you undone them?\n. I have splitted these commits to 6ba6935b77974019d65e6c4591b21c8b2a67f400, 75c10ee8612e985154b47de3e05011f51da42bf7 and ef4023577860d70d0311c4e0ab6dc021d8f9a859. Thanks a lot for your contribution.\n. It's a good idea but do you have any thoughts how to dsitribute this library in case of 2 product flavors?\n. Hi, thanks for reporting the issue. But it seems it's a bug in the Android Studio UI Preview. With API 21 selected for the preview the FAB is rendered correctly.\n\nHere is a link to the issue thread: https://code.google.com/p/android/issues/detail?id=75204.\n. Shadow is a static image asset (you can find it in the drawable resources folder.). It's not generated in the runtime. \n. This is how it looks with a custom FAB size set to 42dp on the pre-Lollipop device:\n\n![device-2015-03-14-133625](https://cloud.githubusercontent.com/assets/1076309/6651523/41b63294-ca4f-11e4-93e4-31234fff4905.png)\n\nThe white outline exists around the button because shadow is used as an image asset of a constant size. I had to adapt this shadow image to fully match two standard sizes but it's not stretched to custom size.\n\nSo as long as we use shadow as an image, it's not possible to set a custom FAB size (with shadow). But I assume we can somehow generate a shadow in the runtime. I will invesigate this possibility.\n. Hi, I don't see any mentions of the `FloatingActionButton` class in your stack trace. I think not this library causes your issue.\n\nMaybe this answer will help you: http://stackoverflow.com/a/28205143/1552622. Please try it and let me know it it fixed your issue.\n. No response, closing this issue.\n. Hi, I'm glad that the problem is resolved though it was a bit tricky.\n. Thanks a lot for your contribution but decided to keep this library simple and focused (without floation action menus but only the FAB itself).\n. Merged. Thanks.\n. If it's a device specific bug, I'm going to close this issue. Thanks for investigation.\n. How about disabling the shadow for the FAB itself (`fab:fab_shadow=\"false\"`) and wrapping the FAB with a view group that provides a shadow for it. For example I have found this library that might be used: https://github.com/dmytrodanylyk/shadow-layout.\n\nI'm not sure if it's a good idea to separate the FloatingActionButton class to two views.\n. Hi, thanks for reporting an issue. Could you send me a PR?\n. Fixed by 95d549fd733d44e55763011c73beeb2fca854a96.\n. @IlyaEremin is right. Closing this issue.\n. I add a new application to the list only if a developer asks me for that.\n. Now it looks good for me. What do you guys think?\n![image-2015-03-24-at-8 22](https://cloud.githubusercontent.com/assets/1076309/6993145/cd84ed60-daf3-11e4-8426-8f9ea89e65c9.png)\n. Fixed with 95d549fd733d44e55763011c73beeb2fca854a96.\n. Yes, I'm going to release the version 1.3 with this fix soon.\n. Merged. Thanks!\n. Merged. Thanks a lot for your frequent contributions!\n. Please take a look on the custom attrbute `fab:fab_colorRipple`.\n\n```\n <com.melnykov.fab.FloatingActionButton\n        android:id=\"@+id/fab\"\n        ...\n        fab:fab_colorRipple=\"@color/ripple\"/>\n```\n. The FAB extends the standard `ImageButton` class and doesn't override `setOnClickListener`. So please double-check, what you do should work.\n. Updated. Thanks!\n. Hi, could you attach a screenshot?\n. Hi, thanks a lot for your contribution! I made some minor changes and merged your code to the master branch.\n. Hi, it seems you posted the issue to the wrong repo. There is no FABMenuButton in this library.\n. I'm canceling this PR to keep the commit history clean. But I've added your app to the list by myself.\n. @iceteahh is right, you should use the `ObservableScrollView` from the library (https://github.com/makovkastar/FloatingActionButton/blob/master/library/src/main/java/com/melnykov/fab/ObservableScrollView.java).\n. Hi @vangivang! Thanks for the good find. I have already pushed a fix for this bug: e074c32078097a8e961523e5534e0e3a57adf484\n\nNow the list view scroll Y is not calculated if an adapter is not set or empty.\n\nPlease update and let me know if it resolved your problem.\n. @vangivang you are completely right regarding these two issues. I pushed a fix for the second one.\n\nRegarding the first problem - I don't know if it's correct to rely on the constant size of each list item. But inflating and measuring views in a loop is also a very bad idea. I'll think how to fix this problem.\n\nAnyway, thanks a lot for your contribution. And I'm quite new in writing custom views.\n. @vangivang I inspected some another libraries that operate with list view children heights and decided to rely on the same height of all items in a list.\n\nAs a result I completely removed `computeListViewScrollY` method and now only use `getListViewScrollY` for calculating a scroll position:\n\n``` java\nprivate int getListViewScrollY() {\n    View topChild = mListView.getChildAt(0);\n    return topChild == null ? 0 : mListView.getFirstVisiblePosition() * topChild.getHeight() -\n            topChild.getTop();\n}\n```\n\nIt allowed to remove `mListViewItemOffsetY[]` and `isScrollComputed` class members together with necessity to re-calculate the scroll offsets on each data set change.\n. @vangivang yes, that's it. Furthermore I added a small optimization: just don't send messages to the handler if a button is already in the correct state. E.g. no need to show/hide if it's already visible/hidden:\n\n``` java\nif (newScrollY > mScrollY && mVisible) {\n    // Scrolling up\n    mVisible = false;\n    mScrollSettleHandler.onScroll(getTop());\n} else if (newScrollY < mScrollY && !mVisible) {\n    // Scrolling down\n    mVisible = true;\n    mScrollSettleHandler.onScroll(0);\n}\n```\n. @vangivang why can't you attach it earlier? For example in `onCreate(...)` of an Activity or `onViewCreated(...)` of a Fragment?\n. Thanks! Merged.\n. Hi @StephaneBg! Thanks a lot for your PR, but actually I'm sure the time has come to set `minSdk=14`.\n. Please update your fork before submitting a PR. Now merging becomes not easy.\nAlso please do not submit so many unrelated changes in one PR.\n. Could you post your layout file? And how did you include the button to your project?\n. Yes, the rendering problem exists. But the button must be visible when you launch your program on the phone or emulator. As I see you've copied source code to your project. Have you also copied `attrs.xml` and  `dimens.xml`? \n\nI'd suggest not to copy manually but just add a gradle dependency to your `build.gradle`:\n`compile 'com.melnykov:floatingactionbutton:1.0.0'`\n. You have just rewritten the library from scratch :) With this PR it becomes like an almost full clone of the https://github.com/FaizMalkani/FloatingActionButton. Why do we need this?\nAnd I doubt if we need a `codesample` module. Integration is simple enough not to have extra sample modules.\n. @StephaneBg yes, thanks a lof for your understanding and I very appreciate your help.\n\nAnd anyway I'll take some fixes from this PR.\n. Hi!\n\nI have added two methods: `show()` and `hide()` to explicitly manipulate the button state.\n\nSee commit 570232a18402ac5031d1bdcaaa09f06c107368eb.\n\nI have already pushed an update to the Maven Central. It'll be available during a few hours.\n. Hi @thiagolocatelli! Thanks for your contribution, I'll be able to take a look on it little bit later.\n. I have implemented a fully working version without lags, but it requires an extra class such as [ObservableScrollView](https://code.google.com/p/romannurik-code/source/browse/misc/scrolltricks/src/com/example/android/scrolltricks/ObservableScrollView.java?r=87d727550384ed29bc6eda7181ce7cdee8a2bb9f). A user has to use it instead of a standard ScrollView. For now I don't want to introduce custom classes.\nAnyway, thanks for your proposition.\n. Thanks for the report! Commit 38c5a36f5cd44a34c7a310b79fb7fe96f33e81dc fixes this bug.\n. No, sorry, for now it's only possible to attach the `FloatingActionButton` to a `ListView`.\n. Hi @ernes87lp! Thanks for you feedback. But actually I think it's time to set `minSdk=14`. If you need to use this library on lower APIs, please fork the repository, make required changes and include the library as a project dependency.\n. 1. \u041a \u0441\u043e\u0436\u0430\u043b\u0435\u043d\u0438\u044e, \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435\u043b\u044c\u0437\u044f \u0441 \u044d\u0442\u0438\u043c \u0441\u0434\u0435\u043b\u0430\u0442\u044c, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0441\u043b\u0443\u0448\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u0441\u043b\u0443\u0448\u0430\u0442\u044c \u0441\u043e\u0431\u044b\u0442\u0438\u044f `AbsListView`. \n2. \u0415\u0441\u043b\u0438 \u043d\u0435 \u0441\u043b\u043e\u0436\u043d\u043e, \u043e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 Pull Request, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0431\u0443\u0434\u0443\u0442 \u043d\u0443\u0436\u043d\u044b\u0435 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u044b \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u0438 \u044f \u0434\u043e\u0431\u0430\u0432\u043b\u044e \u0438\u0445 \u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443. \u0418\u043b\u0438 \u0436\u0435 \u043d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043a \u043a\u0430\u043a\u0438\u043c \u043f\u043e\u043b\u044f\u043c \u0438 \u043c\u0435\u0442\u043e\u0434\u0430\u043c \u043d\u0443\u0436\u0435\u043d \u0434\u043e\u0441\u0442\u0443\u043f \u0432 \u043d\u0430\u0441\u043b\u0435\u0434\u043d\u0438\u043a\u0430\u0445 \u0438 \u044f \u0441\u0434\u0435\u043b\u0430\u044e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0441\u0430\u043c.\n. Hi @ilmetu! Thanks for you feedback. There were already a few requests for it. But actually I think it's time to set minSdk=14. If you need to use this library on lower APIs, please fork the repository, make required changes and include the library as a project dependency.\n. Merged. Thanks.\n. Hi @Stoyicker! Cool, thanks for your contribution. But there are a lof of code duplication. The only different thing is a source of scroll events.Can we somehow extract common code to a superclass and create two subclasses for the `AbsListView` and the `RecyclerView`?\n. Or we can even go further an not create additional classes. Just add a new method `attachToRecyclerView` and a new class member called `mRecyclerView` that will hold a reference to the attached `RecyclerView`. Then in the `getListViewScrollY` we just check what class member(`mListView` or `mRecyclerView`) is not null and access it. It will be much simpler I guess. What do you think?\n. 1. For the sake of compatibility we cannot rename the `FloatingActionButton` class. And for me it would be strange if I have to use the `FloatingActionButton` class for the list views and `RecyclerViewFloatingActionButton`  for the recycler views. In this case I would assume that they are called `ListViewFloatingActionButton` and `RecyclerViewFloatingActionButton` respectively. It will be much simpler and easier to use the same class but different methods.\n2. In case of additional classes documentation will grow, complexity will grow, but we don't want that, right?\n3. \"like, what if for some reason there's a need for a third or even fourth attribute?\" - let's not assume too far what can happen. As you know it may never happen ;)\n\nSo yes, please use 2 class members and will see how it will go.\n. Only in case of `getOnScrollListener`. Leave  the `attachToListView` as it is and add a new `attachToRecyclerView` method.\n. You can check if the FAB is already attached to another source and throw an exception. For example: \"IllegalStateException(\"Already listening to a ListView\")\".\n. We don't replace the `attachToListView` we just add an additional method. But we replace the `getOnScrollListener`. So yes, only the `getOnScrollListener` has to be marked with @Deprecated.\n. The final result:\n\n@Deprecated getOnScrollListener \ngetAbsListViewOnScrollListener\ngetRecyclerViewOnScrollListener\n. Hi @Stoyicker!\nSorry for delay, I was on vacation for a week. Currently I'm busy, but will merge this ASAP.\n\nP.S. Did you test it on the real `RecyclerView`? As far as I know currently in order to use it you have to use`minSdkVersion 'L'`, don't you?\n. But it's not possible to use `minSdkVersion 'L'`. In this case all library consumers have to set this also for their main projects. Let's wait until a full support library will be released. \n. @alexey-rabets have you updated the library dependency to the version 1.0.4? I tested it on the list with different height items and an animation was smooth.\n. Please, it will help.\n. Thanks, I'll check.\n. @sreichholf  Thanks! Could you send a pull request? I'll review and merge it.\n. @alexey-rabets The issue seems finally to be resolved. I'll push an update to the Maven Central soon. For now could you check with the latest code base from the repo if the FAB works now with list with different items height?\n. Fine, I'll close the issue.\n. If you use Gradle or Maven you can add it as a dependency to your build.gradle/pom.xml(you can find a dependency info in the README file). But you will not be able to use this library if you use Ant with Eclipse.\n. Could you attach a screenshot for this bug?\n. Thanks, I'll take a look on it.\n. Thanks for your PR! I'll take a look on it ASAP.\n. Looks very good to me. Yes, an abstract `ScrollDirectionListener` is a good idea, please add it and let's merge.\n. Merged. Thanks a lot for your work.\n. With the Android Studio 0.8.14 and API 21 selected for the preview the FAB is rendered correctly now:\n\n![image 7](https://cloud.githubusercontent.com/assets/1076309/5229088/9c2779fe-771b-11e4-9303-d348bfe82bc8.png)\n. @peterjiz It seems it's a bug in the Android Studio UI Preview. It shouldn't have any impact in the runtime.\n. PR #26 deletes saving state and inner `SavedState` class because it's obsolete. So hopefully after merging it this bug will be resolved too.\n. Should be fixed in the version 1.4. If not - please reopen the issue.\n. Actually yes. Why not? Did you try to call `FloatingActionButton.show(true) / FloatingActionButton.hide(true)` to show/hide the FAB with animation?\n. Hi @airk000! Thanks for you feedback. There were already a few requests for it. But actually I think it's time to set `minSdk=14`. If you need to use this library on lower APIs, please fork the repository, make required changes and include the library as a project dependency.\n. Why don't just try to apply changes you see in this PR?\n. @PaulMaddox Nice job, thanks! Merged.\n. @ViliusKraujutis I'll merge the PR(#34) with the `RecyclerView` support soon and then publish a new version to the Maven Central.\n. Since #34 was closed in order for better PR(#35) and a new one requires some check, I'll publish existing version with new shadow today.\n. Done. The new version will be available in a few hours.\n. Hi @PaulMaddox, could you also provide a shadow image for the `xxxhdpi`?\n. @ViliusKraujutis as I saw on screenshots [here](http://www.google.com/design/spec/components/snackbars-and-toasts.html#snackbars-and-toasts-specs) the FAB should move up. Any ideas how to implement it? Do you think it's a responsibility of the FAB itself and not of a developer to do that?\n. @nwalters512 Actually I also think so. If we include solution for every case, the API will explode very fast. For now I'll close this issue.\n. @afollestad thanks! I'll review and merge it soon.\n. That's awesome! Thanks, will take a look on it a bit later.\n. @Symbianx no, I just need some time to review and merge it.\n. With these PR I cannot compile the sample not from the IDE nor from the command line:\n\n![image 4](https://cloud.githubusercontent.com/assets/1076309/4796955/b8f39c34-5e07-11e4-9d04-a044423d1c11.png)\n\nIt seems some problem with resources -http://stackoverflow.com/a/20549266/1552622. Will try to figure out what exactly.\n. @afollestad yes, very odd. Updating build tools version to `21.0.2` has resolved this issue.\nP.S. I also use Android Studio of the latest version.\n. @afollestad Could you please squash all commits into the one? It'd be much easier to check and merge.\n. @afollestad usually I do it in [this](http://stackoverflow.com/a/5190323/1552622) way.\n. @afollestad Okay, no problem. I'll try to do something about it.\n. @afollestad Merged. Thanks! My further plans:\n- Update a sample to demonstrate the FAB on the RecyclerView;\n- Add support for the ripple drawable on early versions.\n. @afollestad Yes, the demo gif is now updated. You can check in the README.\n. Actually material design [specs](http://www.google.com/design/spec/patterns/promoted-actions.html#promoted-actions-floating-action-button) say that floating action buttons must be only positive actions like Create, Favorite, Share, Navigate, and Explore. And it's even specified in the anti-pattern examples that text must not be placed inside the FAB:\n\n![patterns-promotedactions-qualitiesfab18_large_mdpi](https://cloud.githubusercontent.com/assets/1076309/4808104/b8daa5d6-5e9c-11e4-9222-adbfc2fa40bd.png)\n. You are right, thanks for the find. I'll update the sample with correctly sized icons today.\n. Fixed with 35dab4260b97455cc4568737799908e7954439a2.\n. @waylaidwanderer @afollestad in the version 1.0.5 (PR #32) shadow was updated to more accurately match the material design spec. Did you miss it?\n. Hi guys! Please try this code to show the FAB with circular reveal from the center:\n\n```\nFloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);\n\n// Get the center for the clipping circle\nint cx = fab.getWidth() / 2;\nint cy = fab.getHeight() / 2;\n\n// Get the final radius for the clipping circle\nint finalRadius = fab.getWidth() / 2;\n\n// Create the animator for the FAB (the start radius is zero)\nAnimator reveal = ViewAnimationUtils.createCircularReveal(fab, cx, cy, 0, finalRadius);\nreveal.setDuration(500);\nreveal.start();\n```\n\nLet me know if it works.\n. Since I've got no replies from participants, I'm going to close this issue. \n. Hi, from my point of view it's better not to change an access level of the internal variable and not to set an anonymous class as a scroll direction listener in constructors but implement `ScrollDirectionListener` for `FabOnScrollListener` and `FabRecyclerOnViewScrollListener` classes. In this case subclasses may override `onScrollDown` and `onScrollUp` callbacks where they call super and then custom code goes.\n\n``` java\npublic static class FabRecyclerOnViewScrollListener extends ScrollDirectionRecyclerViewDetector implements ScrollDirectionListener {\n        private FloatingActionButton mFloatingActionButton;\n\n        public FabRecyclerOnViewScrollListener() {\n            setScrollDirectionListener(this);\n        }\n\n        public void setFloatingActionButton(FloatingActionButton floatingActionButton) {\n            mFloatingActionButton = floatingActionButton;\n        }\n\n        @Override\n        public void onScrollDown() {\n            mFloatingActionButton.show();\n        }\n\n        @Override\n        public void onScrollUp() {\n            mFloatingActionButton.hide();\n        }\n    }\n```\n\n``` java\nclass MyScrollListener extends FloatingActionButton.FabRecyclerOnViewScrollListener {\n\n       @Override\n        public void onScrollDown() {\n            super.onScrollDown();\n           // Custom code\n        }\n\n        @Override\n        public void onScrollUp() {\n            super.onScrollUp();\n            // Custom code\n        }\n}\n```\n\n@ViliusKraujutis What do you think about it?\n. I've implemented above solution in the 5754dc2e4af69f3b7a2ea7ac8c0ba783ecf40cf9. But I don't know if it's worth releasing the new version to the Maven Central.\n. I've asked @PaulMaddox to provide a shadow image for `xxxhdpi`. Regarding weird two circles I'll take a look.\n. Added shadow image for `xxxhdpi` in 1e1b8d78d602c235f739ac5f0518627412b65bd.\n. It seems nobody knows what causes this bug. I posted a question http://stackoverflow.com/questions/26960939/elevation-transparency-bug-on-android-lollipop but got no answers.\n\nCan it be an Android bug?\n. @Iggy82 No, still no solution...\n. @easycheese You are right, it definitely must be specified in the README. I'll update it.\n. Merged. Thanks a lot.\n. Hi @alexblack! There were already a few requests for supporting lower versions. But actually I think it's time to set `minSdk=14`. If you need to use this library on lower APIs, please take a look on the PR #30. It uses NineOldAndroids library for back compatibility.\n. Fixed with 1e1b8d78d602c235f739ac5f0518627412b65bd7.\n\n![device-2014-11-08-203234](https://cloud.githubusercontent.com/assets/1076309/4965114/6dc22036-6786-11e4-9b18-2fbfb8d3e573.png)\n. The FAB has `show()` and `hide()` methods. So you may track swipe motions by yourself and then hide and show the FAB manually.\n\nDo you know how does the FAB behave in other apps (for example by Google) when a list is not scrollable?\n. I think the best way to fix this issue is to add a bottom padding for your content in the list. This is how it's currently done in the dialer app in Lollipop:\n\n![device-2014-11-21-181718](https://cloud.githubusercontent.com/assets/1076309/5145352/aed3ef0e-71aa-11e4-83ed-7af6f79a7d84.png)\n. Let's stick for now with how this Google does. Will revise in future if some approach will widespread.\n. It's even not a padding itself but a scrollable empty footer. So when a user scrolls a list, it's also being scrolled.\nI've recorded a short sample to demonstrate this behavior:\n![efemg](https://cloud.githubusercontent.com/assets/1076309/5145764/6dce2ed0-71ae-11e4-8bac-bf40733d1ec7.gif)\n. @nadavfima Does it have sense to disable/enable scrolling after attaching to a ListView? Why do simply not attach the FAB to the ListView if you don't want scrolling?\n. @nmrainho @nwalters512 @adrianblp hey guys! Actually I think Google doesn't strictly forbid using 2 FABs on the same screen but just doesn't recommend. That's how I understand a phrase: \"Try to use only one floating action button per screen...\".\n\nThe list (AbsListView or RecyclerView) can have only one scroll listener. So when you attach the first FAB and then the second - the second listener replaces the first. In order to attach 2 FABs to the same list you need to use a custom listener:\n\n``` java\nFloatingActionButton fab1 = (FloatingActionButton) root.findViewById(R.id.fab1);\nfinal FloatingActionButton fab2 = (FloatingActionButton) root.findViewById(R.id.fab2);\nfab1.attachToListView(list, new FloatingActionButton.FabOnScrollListener() {\n    @Override\n    public void onScrollDown() {\n        super.onScrollDown();\n        fab2.show();\n    }\n\n    @Override\n    public void onScrollUp() {\n        super.onScrollUp();\n        fab2.hide();\n     }\n});\n```\n\nIt works pretty well.\n. Added support for the ScrollView in the 05f49141ef6a481e56615c8f83d9816f21ba3522. Will be available in the version `1.0.8` soon.\n. Fixed 325c8d7afeb6e994ab2c1b9a5bd83d6a7aad052f.\n. Yo @adrianblp. I've added this getter in the ac770dead1e3b56fde9df7f87f448fe163d66ce5.\n. Hi @srcreigh! No, no extra configuration is required.\n. Thanks! I'll review and merge it soon.\n. Merged, thanks a lot!\n\nI refactored code a bit because I didn't like an idea of modifying class members in methods that check something (e.g. setting `mLastScrollY` in the `isSignificantDelta`, etc.).\n. Good idea but in what way do you think it's better to support it?\n. Actually you can find all material design icons here: https://github.com/google/material-design-icons.\nPreview: http://google.github.io/material-design-icons.\n\nI'm not sure if it's a good idea to put some icons to the lib's resources. It's not a big deal to download exactly what you need and set it to the FAB.\n\nSo for now I'll close this issue. If you have some another ideas, please reopen it.\n\nCheers!\n. Hi @MrBrightside29. Yes, it's definitely a bug. Could you fork this library and modify a sample to show this behavior? Currently I cannot reproduce this bug (I simply remove all items on the FAB click but the FAB itself is not hidden after that).\n. Maybe the third library causes this issue. That's fine that you found a workaround, so I'll close the issue for now. If someone else will have the same bug I'll reopen.\n. The library already supports ripple effect. You can set a ripple color with `fab:fab_colorRipple` attribute. Please check a sample: https://github.com/makovkastar/FloatingActionButton/blob/master/sample/src/main/res/layout/fragment_listview.xml#L23.\n. Nope. Just use Gradle or Maven.\n. Hi, there were already a few issues and pull requests with the same request. Please check why I don't accept them:\n\nhttps://github.com/makovkastar/FloatingActionButton/issues/13\nhttps://github.com/makovkastar/FloatingActionButton/issues/44\nhttps://github.com/makovkastar/FloatingActionButton/pull/4\nhttps://github.com/makovkastar/FloatingActionButton/pull/30\n. Hi! Do you mean Android version 2.+? If yes - the library supports Android 4.+.\n. Please take a look on https://github.com/makovkastar/FloatingActionButton/pull/30. If you need to use this library on lower APIs, please fork the repository, apply changes from the specified PR and include the library as a project dependency.\n. Thanks, but with this PR I can't compile the library. I'm getting the next error:\n\n```\nFailed to set up Android modules in project 'FloatingActionButton': Unsupported method: SourceProvider.getJniDirectories().\n         The version of Gradle you connect to does not support that method.\n         To resolve the problem you can change/upgrade the target version of Gradle you connect to.\n         Alternatively, you can ignore this exception and read other information from the model.\n```\n\nI have the latest Android Studio 0.8.14 installed.\nIt [seems](http://stackoverflow.com/questions/26680972/unsupportedmethodexception-android-studio-0-8-9) upgrading to 0.9.0 resolves this problem but it's only available in the canary channel.\n. @acappelli For now could you just leave code that's connected to supporting older API (remove all gradle staff) and also set minSdk to 7? And I'll merge it.\n. Thanks for your contribution. I already added support for API 7 in the 58d19f1eec92f769016b1584e427f91893001aeb.\n. Thanks, you are right. I fixed it with 17b5268237e5e6647d125eb152e46683a2dbbb78.\n. With this PR I can't compile the library. I'm getting the next error:\n\n```\n Failed to set up Android modules in project 'FloatingActionButton': Unsupported method: SourceProvider.getJniDirectories().\n         The version of Gradle you connect to does not support that method.\n         To resolve the problem you can change/upgrade the target version of Gradle you connect to.\n         Alternatively, you can ignore this exception and read other information from the model.\n```\n\nI have the latest Android Studio 0.8.14 installed.\nIt [seems](http://stackoverflow.com/questions/26680972/unsupportedmethodexception-android-studio-0-8-9) upgrading to 0.9.0 resolves this problem but it's only available in the canary channel.\n\nWill wait until the newest version of the Android Studio will be released.\n. Thanks! Now with Android Stuido 1.0 RC 3 it works.\n. There were already a lot requests to support lower API versions. I'll think about reducing minSdk.\n. 58d19f1eec92f769016b1584e427f91893001aeb\n\nVersion 1.0.9 will be released to the Maven Central soon.\n. In case you need such data you should not use the FAB as a detector of scroll events. The library was created to support simple cases when a user just needs the FAB that shows/hides when a list is scrolled and simple callbacks such as `onScrollUp/onScrollDown`.\n\nIn your case you need some external observable view that will just hide/show the FAB when scrolling events occur (you don't need to call `attach*` on the FAB).\n\nP.S. You may use this library: https://github.com/ksoichiro/Android-ObservableScrollView. But I didn't test it.\n. With the latest updates I simplified usage of custom listeners a lot. A new version will be available today and for now you can check already updated sample. I added showing/hiding an ActionBar with tabs for the ListView. \n. But actually you should not use the FAB as a detector of scroll events. The library was created to support simple cases when a user just needs the FAB that shows/hides when a list is scrolled and simple callbacks such as onScrollUp/onScrollDown.\n\nIn your case you have to observe scroll events by yourself and just hide/show the FAB and an ActionBar when scrolling occurs (you don't need to call attach\\* on the FAB).\n. Maybe [this](https://github.com/ksoichiro/Android-ObservableScrollView) library may help you. It has samples for hiding/showing an ActionBar. But I didn't test it.\n. @MeanderingCode You are right, it's not possible to control FAB's behavior from a callback. If you need such things you should not attach the FAB to the target and use external scroll observer (such as library I pointed above).\n. Hi, I just tested it on the sample project and don't get any compile errors. It seems your build didn't complete successfully for some another reason.\n. Layout example?\n. Could you also attach a screenshot and describe what you expect?\n. As I see from screenshots the FAB is translated but not hidden fully because of your transparent navigation bar. You should increase the bottom margin of the button by the navigation bar height. I don't know how reliable the `getNavBarHeight()` method works (I found it on the StackOverflow) but I tested the following code on my Nexus 5 and everything works as expected:\n\n```\nFloatingActionButton fab = (FloatingActionButton) root.findViewById(R.id.fab);\nFrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) fab.getLayoutParams();\nlayoutParams.setMargins(layoutParams.leftMargin, layoutParams.topMargin, layoutParams.rightMargin, layoutParams.bottomMargin + getNavBarHeight());\n\nprivate int getNavBarHeight() {\n    int resourceId = getResources().getIdentifier(\"navigation_bar_height\", \"dimen\", \"android\");\n    if (resourceId > 0) {\n        return getResources().getDimensionPixelSize(resourceId);\n     }\n     return 0;\n }\n```\n. \u0414\u0430, \u0433\u043e\u0432\u043e\u0440\u044e :) \u042f \u0432 \u0442\u0432\u043e\u0435\u043c xml \u043d\u0435 \u0432\u0438\u0436\u0443 \u0432\u043e\u043e\u0431\u0449\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 FloatingActionButton.\n. \u0423 \u043c\u0435\u043d\u044f \u043d\u0438\u043a\u0430\u043a \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0441\u0442\u0438 \u0442\u0430\u043a\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 (\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b \u043a\u043e\u0434 \u0438\u0437 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 sample \u0438 \u0441\u0434\u0435\u043b\u0430\u043b \u0435\u0433\u043e \u043f\u043e\u0445\u043e\u0436\u0438\u043c \u043d\u0430 \u0442\u0432\u043e\u0439). \u0415\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c - \u0441\u043a\u0438\u043d\u044c \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u043f\u0440\u043e\u0435\u043a\u0442, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u044f \u043c\u043e\u0433\u0443 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435. \u0415\u0441\u043b\u0438 \u043d\u0435\u0442, \u0442\u043e \u0437\u0430\u0434\u0430\u0439 \u0432\u043e\u043f\u0440\u043e\u0441 \u043d\u0430 StackOverflow, \u044f \u0434\u0443\u043c\u0430\u044e, \u0447\u0442\u043e \u0441\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0441 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u043e\u0439, \u0430 \u0441 \u0442\u0432\u043e\u0438\u043c \u043b\u0435\u0439\u0430\u0443\u0442\u043e\u043c.\n. \u0418 \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439 \u043d\u0435 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c `attachToScrollView`. \u0415\u0441\u043b\u0438 \u044d\u0442\u043e \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442, \u0442\u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 100% \u0432 \u0442\u0432\u043e\u0435\u0439 \u0440\u0430\u0437\u043c\u0435\u0442\u043a\u0435. \u0412\u0435\u0434\u044c FAB - \u044d\u0442\u043e \u043e\u0431\u044b\u0447\u043d\u044b\u0439 ImageButton.\n. \u041c\u043d\u0435 \u043d\u0443\u0436\u0435\u043d \u043f\u0440\u043e\u0435\u043a\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u044f \u0441\u043c\u043e\u0433\u0443 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043a\u043e\u0434. APK-\u0444\u0430\u0439\u043b \u043d\u0435 \u043f\u043e\u043c\u043e\u0436\u0435\u0442. \n\nP.S. \u043d\u0435 \u043c\u043e\u0433\u0443 \u0432\u043e\u0439\u0442\u0438, \u043f\u0438\u0448\u0435\u0442 \"\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438\".\n. \u041d\u0443 \u0447\u0442\u043e, \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u0441\u043f\u0440\u0430\u0432\u0438\u0442\u044c?\n. Hi, thanks for feedback. I fixed this bug with 5853dbfaf167063b5fbca395f03de9dbbf8a8488. I'll push an update to the Maven Central today.\n. Thanks for your PR but I think the API can explode very quickly if I add new and new features. I wanted to keep this library small and one goal oriented: just hide and show the FAB on list scroll. If you need to have more complex functionality feel free to fork this repo and make changes.\n. How about just setting the FAB not clickable if it's not visible?\n\n``` java\nsetClickable(visible);\n```\n. @AndroidDeveloperLB I tried setting visibility on animation start/end but the FAB stays clickable even when it becomes invisible. This is code I used:\n\n``` java\nif (!hasHoneycombApi()) {\n    animator.setListener(new AnimatorListenerAdapter() {\n        @Override\n        public void onAnimationStart(Animator animation) {\n            if (visible) {\n                setVisibility(View.VISIBLE);\n            }\n        }\n\n        @Override\n        public void onAnimationEnd(Animator animation) {\n            if (!visible) {\n                setVisibility(View.GONE);\n            }\n        }\n    });\n}\n```\n\nI found a [post](http://stackoverflow.com/a/7760401/1552622) on SO with a similar problem but when I tried to clear animation, the FAB started blinking. So maybe simply setting it not clickable is better solution.\n. Not yet. Will try and comment soon.\n. `setClickable(visible);` looks more compact. And for me your code still causes blinks on the 2.3.7 Genymotion emulator.\nFrom my point the concrete NineOldAndroids library doesn't look as much overhead. So for now I'm going to leave it.\n\nAnyway, thanks for the bug report, I'll release a fix to the Maven Central soon.\n. b630801587d9bfc7ca98869c4b9e09939921f1aa\n. You may try to play with custom listeners using such as `attachToListView(AbsListView listView, ScrollDirectionListener listener)` -https://github.com/makovkastar/FloatingActionButton/blob/master/library/src/main/java/com/melnykov/fab/FloatingActionButton.java#L344.\n\nOr don't call attachToListView and implement external scroll observer that will call show/hide on the FAB.\n. Fixed 99cac6ae11bbe4d4821993b8a1b488e29073bc84.\nThanks!\n. Please take a look on #46.\n. What does \"got confused\" mean?\n. How can I reproduce it? I tried clearing a list adapter and calling `notifyDataSetChanged` in the runtime but button stayed on place. Or maybe you can fork the repo and modify it to show this wrong behavior?\n. What does your PR do? I didn't get your idea.\n. Could you post yout layout and icon image that you use for the FAB?\n. Hi! Did you fix this issue?\n. But in your posted xml layout you didn't use my library but already this one as I see by the package name (`com.getbase.floatingactionbutton`): https://github.com/futuresimple/android-floating-action-button. Did you post wrong layout?\n. Hi! You can set elevation level only on API >= 21. For pre-Lollipop shadow is used as a graphical asset so cannot be changed.\n. @mufumbo What do you mean? Shadow on pre-Lollipop is implemented using shipped with the library shadow image of the exact size. How can it be fixed?\n. I tried two different layouts with the SwipeRefreshLayout  and both work:\n\n```\n<FrameLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:fab=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <android.support.v4.widget.SwipeRefreshLayout\n        android:id=\"@+id/refresh\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n        <ListView\n            android:id=\"@android:id/list\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:cacheColorHint=\"@android:color/transparent\"\n            android:headerDividersEnabled=\"false\"/>\n    </android.support.v4.widget.SwipeRefreshLayout>\n\n    <com.melnykov.fab.FloatingActionButton\n        android:id=\"@+id/fab\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"bottom|right\"\n        android:layout_margin=\"16dp\"\n        android:src=\"@drawable/ic_add_white_24dp\"\n        fab:fab_colorNormal=\"@color/accent\"\n        fab:fab_colorPressed=\"@color/accent_pressed\"\n        fab:fab_colorRipple=\"@color/ripple\"/>\n</FrameLayout>\n```\n\n```\n<android.support.v4.widget.SwipeRefreshLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:fab=\"http://schemas.android.com/apk/res-auto\"\n    android:id=\"@+id/refresh\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <FrameLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n        <ListView\n            android:id=\"@android:id/list\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:cacheColorHint=\"@android:color/transparent\"\n            android:headerDividersEnabled=\"false\"/>\n\n        <com.melnykov.fab.FloatingActionButton\n            android:id=\"@+id/fab\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"bottom|right\"\n            android:layout_margin=\"16dp\"\n            android:src=\"@drawable/ic_add_white_24dp\"\n            fab:fab_colorNormal=\"@color/accent\"\n            fab:fab_colorPressed=\"@color/accent_pressed\"\n            fab:fab_colorRipple=\"@color/ripple\"/>\n    </FrameLayout>\n</android.support.v4.widget.SwipeRefreshLayout>\n```\n. Merged! Thanks a lot. \n\nP.S. I changed the default color for the disabled state to darker gray.\n. Initially minSdk was set to 14. Then I've got a lot of requests to support lower Android versions so it was added. Now I cannot cut support of lower versions.\nRegarding the `allProjects` section I didn't get your idea. What is the benefit of defining the additional repositories in lib build file?\n. Could you separate code for `repositories` section? I will merge it.\n. Currently it's not implemented for the FAB. It must be implemented by yourself. Please check https://github.com/makovkastar/FloatingActionButton/issues/33 for details.\n. Merged. Thanks!\n. You may use `attachXXX` methods with the second argument of type `ScrollDirectionListener`. `ScrollDirectionListener` has `onScrollDown` and `onScrollUp` callbacks to track the state of the FAB. Or do you need to know when the animation exactly starts and stops?\n. @AkshayChordiya thanks, you're right.\n. Did you try `setOnClickListener`? It should work.\n. @AkshayChordiya  @tbremer19 Yes, it definitely works.\n. Hi! I checked it by using a background color for list in the sample. Shadow looks good:\n![device-2015-01-05-171053](https://cloud.githubusercontent.com/assets/1076309/5614074/b9ae9d0c-94f5-11e4-8bcb-f3db25cc863c.png)\n. Could you try to switch shadow off and check? It seems the method `setMarginsWithoutShadow` causes this movement.\n. I don't know for now. Currently FAB's margin is changed in the runtime on pre-Lollipop because shadow  mustn't be taken into account when margins are set. \n. Thanks a lot. I will release a new version soon. And sorry for a long delay.\n. Please switch to the Android Studio and you will not have any problems with importing this library. Thanks.\n. Hi, nice idea, could you send me a PR?\n. @rcastill did you succeed with importing the library using answer from @RaymondBakkerMoonlightMultimedia?\n. No answer. Closing...\n. The FAB library is packaged as an AAR archive so there is no JAR file. Please try the following dependency and let me know if it works:\n\n``` xml\n<dependency>\n    <groupId>com.melnykov</groupId>\n    <artifactId>floatingactionbutton</artifactId>\n    <version>1.2.0</version>\n    <type>aar</type>\n</dependency>\n```\n. Thanks! I will review and merge it soon.\n. I'm trying to merge it but Git says that my repo is up-to-date with you. It seems your fork doesn't have this commits already. Did you undone them?\n. I have splitted these commits to 6ba6935b77974019d65e6c4591b21c8b2a67f400, 75c10ee8612e985154b47de3e05011f51da42bf7 and ef4023577860d70d0311c4e0ab6dc021d8f9a859. Thanks a lot for your contribution.\n. It's a good idea but do you have any thoughts how to dsitribute this library in case of 2 product flavors?\n. Hi, thanks for reporting the issue. But it seems it's a bug in the Android Studio UI Preview. With API 21 selected for the preview the FAB is rendered correctly.\n\nHere is a link to the issue thread: https://code.google.com/p/android/issues/detail?id=75204.\n. Shadow is a static image asset (you can find it in the drawable resources folder.). It's not generated in the runtime. \n. This is how it looks with a custom FAB size set to 42dp on the pre-Lollipop device:\n\n![device-2015-03-14-133625](https://cloud.githubusercontent.com/assets/1076309/6651523/41b63294-ca4f-11e4-93e4-31234fff4905.png)\n\nThe white outline exists around the button because shadow is used as an image asset of a constant size. I had to adapt this shadow image to fully match two standard sizes but it's not stretched to custom size.\n\nSo as long as we use shadow as an image, it's not possible to set a custom FAB size (with shadow). But I assume we can somehow generate a shadow in the runtime. I will invesigate this possibility.\n. Hi, I don't see any mentions of the `FloatingActionButton` class in your stack trace. I think not this library causes your issue.\n\nMaybe this answer will help you: http://stackoverflow.com/a/28205143/1552622. Please try it and let me know it it fixed your issue.\n. No response, closing this issue.\n. Hi, I'm glad that the problem is resolved though it was a bit tricky.\n. Thanks a lot for your contribution but decided to keep this library simple and focused (without floation action menus but only the FAB itself).\n. Merged. Thanks.\n. If it's a device specific bug, I'm going to close this issue. Thanks for investigation.\n. How about disabling the shadow for the FAB itself (`fab:fab_shadow=\"false\"`) and wrapping the FAB with a view group that provides a shadow for it. For example I have found this library that might be used: https://github.com/dmytrodanylyk/shadow-layout.\n\nI'm not sure if it's a good idea to separate the FloatingActionButton class to two views.\n. Hi, thanks for reporting an issue. Could you send me a PR?\n. Fixed by 95d549fd733d44e55763011c73beeb2fca854a96.\n. @IlyaEremin is right. Closing this issue.\n. I add a new application to the list only if a developer asks me for that.\n. Now it looks good for me. What do you guys think?\n![image-2015-03-24-at-8 22](https://cloud.githubusercontent.com/assets/1076309/6993145/cd84ed60-daf3-11e4-8426-8f9ea89e65c9.png)\n. Fixed with 95d549fd733d44e55763011c73beeb2fca854a96.\n. Yes, I'm going to release the version 1.3 with this fix soon.\n. Merged. Thanks!\n. Merged. Thanks a lot for your frequent contributions!\n. Please take a look on the custom attrbute `fab:fab_colorRipple`.\n\n```\n <com.melnykov.fab.FloatingActionButton\n        android:id=\"@+id/fab\"\n        ...\n        fab:fab_colorRipple=\"@color/ripple\"/>\n```\n. The FAB extends the standard `ImageButton` class and doesn't override `setOnClickListener`. So please double-check, what you do should work.\n. Updated. Thanks!\n. Hi, could you attach a screenshot?\n. Hi, thanks a lot for your contribution! I made some minor changes and merged your code to the master branch.\n. Hi, it seems you posted the issue to the wrong repo. There is no FABMenuButton in this library.\n. I'm canceling this PR to keep the commit history clean. But I've added your app to the list by myself.\n. @iceteahh is right, you should use the `ObservableScrollView` from the library (https://github.com/makovkastar/FloatingActionButton/blob/master/library/src/main/java/com/melnykov/fab/ObservableScrollView.java).\n. ",
    "vangivang": "Excellent! @makovkastar  :)\nSeems to have solved the problem.\n\nA couple of more small issues I encountered...\n- If there is A LOT of data to populate in the list, the FOR loop that calculates the height of each row (or grid cell) takes a lot of time to finish. The UI thread is also non responsive during that time.\n  Most of the time, each row will be the same size as the next so I moved the view.measure calls outside the loop in order to calculate a single row's height and then I just populate mListViewItemOffsetY[i] with that size added to the last.\n- Also, in the case of my app, I can add new data to my DB (i.e another new row to the list), which will cause another calculation of scroll Y. I noticed that at that point there is a mismatch between the adapter count in the FloatButton class and the adapter that was just updated in my fragment.\n  This again causes an index out of bound exception. So I removed the if statement in computeListViewScrollY() that checks if mListViewItemOffsetY is null, and simply init a new mListViewItemOffsetY with the new adapter.getCount() to match the sizes.\n  Basically forcing a new array size each time I calculate scroll Y. \n\nI admit I'm not yet entirely sure how all of this works... I'm quite new to Android dev.... But these fixed the issues I encountered.\nAt any rate, thank you once again. This FloatActionButton class helped me immensely! :) \n. @makovkastar \nExcellent! Works great here!! :)\nI still need to attach the FAB to the list in onLoadFinished() but I think that's not a problem.\n\nSo just to understand better what is happening now, you basically calculate whether the new Y position is above or below the old Y position to determine if we're scrolling up or down. Then you call the handler which waits 100 ms for the scroll to settle and then it does the view animation? \n. Hmmm... Not entirely sure. When I do that (attach it in onViewCreated() or onCreateView() in my fragment), scroll seems to have no effect. The view is simply visible (and clickable) but does not animate. \nIn a separate project, it does work as expected tough. So it's probably something specific to my project.\nI'll investigate this further.\n. Excellent! @makovkastar  :)\nSeems to have solved the problem.\n\nA couple of more small issues I encountered...\n- If there is A LOT of data to populate in the list, the FOR loop that calculates the height of each row (or grid cell) takes a lot of time to finish. The UI thread is also non responsive during that time.\n  Most of the time, each row will be the same size as the next so I moved the view.measure calls outside the loop in order to calculate a single row's height and then I just populate mListViewItemOffsetY[i] with that size added to the last.\n- Also, in the case of my app, I can add new data to my DB (i.e another new row to the list), which will cause another calculation of scroll Y. I noticed that at that point there is a mismatch between the adapter count in the FloatButton class and the adapter that was just updated in my fragment.\n  This again causes an index out of bound exception. So I removed the if statement in computeListViewScrollY() that checks if mListViewItemOffsetY is null, and simply init a new mListViewItemOffsetY with the new adapter.getCount() to match the sizes.\n  Basically forcing a new array size each time I calculate scroll Y. \n\nI admit I'm not yet entirely sure how all of this works... I'm quite new to Android dev.... But these fixed the issues I encountered.\nAt any rate, thank you once again. This FloatActionButton class helped me immensely! :) \n. @makovkastar \nExcellent! Works great here!! :)\nI still need to attach the FAB to the list in onLoadFinished() but I think that's not a problem.\n\nSo just to understand better what is happening now, you basically calculate whether the new Y position is above or below the old Y position to determine if we're scrolling up or down. Then you call the handler which waits 100 ms for the scroll to settle and then it does the view animation? \n. Hmmm... Not entirely sure. When I do that (attach it in onViewCreated() or onCreateView() in my fragment), scroll seems to have no effect. The view is simply visible (and clickable) but does not animate. \nIn a separate project, it does work as expected tough. So it's probably something specific to my project.\nI'll investigate this further.\n. ",
    "StephaneBg": "You are right. I reverted it.\n. I agree with you for the extra sample. I added it to show you that there is\nno need such a lot of code for the constructors that can be simplified. It\nis not needed.\nIt is not a full clone, I picked some idea to have a customizable shadow.\nYour implementation is much better.\nI'll understand if you reject this PR. I use this library in a project of\nmine and I can use it locally.\nRegards\nLe 2 ao\u00fbt 2014 09:35, \"Melnykov Oleksandr\" notifications@github.com a\n\u00e9crit :\n\n> You have just rewritten the library from scratch :) With this PR it\n> becomes like an almost full clone of the\n> https://github.com/FaizMalkani/FloatingActionButton. Why do we need this?\n> And I doubt if we need a codesample module. Integration is simple enough\n> not to have extra sample modules.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/makovkastar/FloatingActionButton/pull/7#issuecomment-50956629\n> .\n. I have Android Studio 1.0 RC1 but from the canary channel.\nI updated the build tools because I wasn't able to compile with your\ncurrent configuration.\nLe Wed Nov 26 2014 at 09:48:26, Melnykov Oleksandr notifications@github.com\na \u00e9crit :\n\n> With this PR I can't compile the library. I'm getting the next error:\n> \n>  Failed to set up Android modules in project 'FloatingActionButton': Unsupported method: SourceProvider.getJniDirectories().\n>          The version of Gradle you connect to does not support that method.\n>          To resolve the problem you can change/upgrade the target version of Gradle you connect to.\n>          Alternatively, you can ignore this exception and read other information from the model.\n> \n> I have the latest Android Studio 0.8.14 installed.\n> It seems\n> http://stackoverflow.com/questions/26680972/unsupportedmethodexception-android-studio-0-8-9\n> upgrading to 0.9.0 resolves this porblem but it's only available in the\n> canary channel.\n> \n> Will wait until the newest version of the Android Studio will be released.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/makovkastar/FloatingActionButton/pull/65#issuecomment-64531429\n> .\n. You are right. I reverted it.\n. I agree with you for the extra sample. I added it to show you that there is\nno need such a lot of code for the constructors that can be simplified. It\nis not needed.\nIt is not a full clone, I picked some idea to have a customizable shadow.\nYour implementation is much better.\nI'll understand if you reject this PR. I use this library in a project of\nmine and I can use it locally.\nRegards\nLe 2 ao\u00fbt 2014 09:35, \"Melnykov Oleksandr\" notifications@github.com a\n\u00e9crit :\n\n> You have just rewritten the library from scratch :) With this PR it\n> becomes like an almost full clone of the\n> https://github.com/FaizMalkani/FloatingActionButton. Why do we need this?\n> And I doubt if we need a codesample module. Integration is simple enough\n> not to have extra sample modules.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/makovkastar/FloatingActionButton/pull/7#issuecomment-50956629\n> .\n. I have Android Studio 1.0 RC1 but from the canary channel.\nI updated the build tools because I wasn't able to compile with your\ncurrent configuration.\nLe Wed Nov 26 2014 at 09:48:26, Melnykov Oleksandr notifications@github.com\na \u00e9crit :\n\n> With this PR I can't compile the library. I'm getting the next error:\n> \n>  Failed to set up Android modules in project 'FloatingActionButton': Unsupported method: SourceProvider.getJniDirectories().\n>          The version of Gradle you connect to does not support that method.\n>          To resolve the problem you can change/upgrade the target version of Gradle you connect to.\n>          Alternatively, you can ignore this exception and read other information from the model.\n> \n> I have the latest Android Studio 0.8.14 installed.\n> It seems\n> http://stackoverflow.com/questions/26680972/unsupportedmethodexception-android-studio-0-8-9\n> upgrading to 0.9.0 resolves this porblem but it's only available in the\n> canary channel.\n> \n> Will wait until the newest version of the Android Studio will be released.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/makovkastar/FloatingActionButton/pull/65#issuecomment-64531429\n> .\n. ",
    "tariksapmaz": "I try this again\n. okey i did add my project your library and used your library delete my folder and path etc.. But still same error ,but i ran in my phone i can use floatingbutton very correctly ,in the future is there have a problem for me ?\n. I try this again\n. okey i did add my project your library and used your library delete my folder and path etc.. But still same error ,but i ran in my phone i can use floatingbutton very correctly ,in the future is there have a problem for me ?\n. ",
    "robertotucci": "Thanks man!!!!! :) you're great!\n. Thanks man!!!!! :) you're great!\n. ",
    "Zeliret": "\u0414\u0430, \u044f \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u044e \u0441\u0435\u0433\u043e\u0434\u043d\u044f \u043f\u0443\u043b \u0440\u0435\u043a\u0432\u0435\u0441\u0442, \u0441\u043f\u0430\u0441\u0438\u0431\u043e.\n. \u0414\u0430, \u044f \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u044e \u0441\u0435\u0433\u043e\u0434\u043d\u044f \u043f\u0443\u043b \u0440\u0435\u043a\u0432\u0435\u0441\u0442, \u0441\u043f\u0430\u0441\u0438\u0431\u043e.\n. ",
    "stoyicker": "Sure, I'll fix it tomorrow.\n. I don't think it's the best idea. To me, the mListView/mRecyclerView attribute has to be non-null for the button to get one of the features that make it match the Material Design principles, which is the whole point of the library I guess. Therefore, having one of them being null...it's not that it's confusing, but it doesn't seem too clean nor maintainable (like, what if for some reason there's a need for a third or even fourth attribute? Hanging so many unused references would indeed be quite dirty). By creating a hierarchy with two different FABButton classes, there's no room for clarity nor maintainability issues, and it's not like we're including thousands of additional lines of code, so I think the trade-off is acceptable. Plus, ProGuard will make sure that whenever this is used in an application the non-used code from the library is thrown away, but the \"dead\", extra reference for each button is going to be there no matter what, even if its impact is close to none.\nIn summary, and although I don't think the decision has a huge impact, I would go for the hierarchy, but I don't mind to go for the double-attribute if you prefer so.\n. Sure you made a point. I'll go for the double attribute then.\n. @makovkastar Redesign implemented.\n. So, keep the old method as deprecated and point towards using the new one. Confirm?\n. But if left as it is, it'll be possible to first attach the FAB to a RecyclerView and then to an AbsListView, both at the same time. Wouldn't it be preferrable to update the attachToListView, without changing its signature, so that it deattaches (if any) the attached RecyclerView, while at the same time preserving backwards compatibility? \n. I've implemented it, but have to go bed now, so I'm leaving testing for tomorrow. Just one more question: are you sure you want me to mark the AbsListView version of getOnScrollListener as deprecated but not the attachToListView? Doesn't make much sense to me - they should either be both deprecated or both non.\n. getOnScrollListener can't be replaced. The return type is different depending on the type of view attached, which lets us with getOnScrollListener for the AbsListView and something else, like getRecyclerViewOnScrollListener, for the case the attachment is a RecyclerView. doesn't it?\n. I have just pushed it. I can't say I agree however, because if we're marking the old OSL getter as deprecated and providing a new one, we should mark as deprecated the attacher method as well, and either have two attachers depending on the type of view, or one which can infer the type of view and act accordingly, but I think this is what you wanted.\n. Done.\n@makovkastar hello?\n. Plus the `targetSdkVersion` as well since it can't be lower than `minSdkVersion`. `compileSdkVersion` must be `'android-L'` and I use `buildToolsVersion` `\"20.0.0\"` although I'm not sure if this is strictly required.\n\nI did test it on the `RecyclerView`, yes.\n. Currently no. As you could easily have seen by yourself, this library only supports AbsListView, which is  not an implementation nor extension of ScrollView. \n. Sure, I'll fix it tomorrow.\n. I don't think it's the best idea. To me, the mListView/mRecyclerView attribute has to be non-null for the button to get one of the features that make it match the Material Design principles, which is the whole point of the library I guess. Therefore, having one of them being null...it's not that it's confusing, but it doesn't seem too clean nor maintainable (like, what if for some reason there's a need for a third or even fourth attribute? Hanging so many unused references would indeed be quite dirty). By creating a hierarchy with two different FABButton classes, there's no room for clarity nor maintainability issues, and it's not like we're including thousands of additional lines of code, so I think the trade-off is acceptable. Plus, ProGuard will make sure that whenever this is used in an application the non-used code from the library is thrown away, but the \"dead\", extra reference for each button is going to be there no matter what, even if its impact is close to none.\nIn summary, and although I don't think the decision has a huge impact, I would go for the hierarchy, but I don't mind to go for the double-attribute if you prefer so.\n. Sure you made a point. I'll go for the double attribute then.\n. @makovkastar Redesign implemented.\n. So, keep the old method as deprecated and point towards using the new one. Confirm?\n. But if left as it is, it'll be possible to first attach the FAB to a RecyclerView and then to an AbsListView, both at the same time. Wouldn't it be preferrable to update the attachToListView, without changing its signature, so that it deattaches (if any) the attached RecyclerView, while at the same time preserving backwards compatibility? \n. I've implemented it, but have to go bed now, so I'm leaving testing for tomorrow. Just one more question: are you sure you want me to mark the AbsListView version of getOnScrollListener as deprecated but not the attachToListView? Doesn't make much sense to me - they should either be both deprecated or both non.\n. getOnScrollListener can't be replaced. The return type is different depending on the type of view attached, which lets us with getOnScrollListener for the AbsListView and something else, like getRecyclerViewOnScrollListener, for the case the attachment is a RecyclerView. doesn't it?\n. I have just pushed it. I can't say I agree however, because if we're marking the old OSL getter as deprecated and providing a new one, we should mark as deprecated the attacher method as well, and either have two attachers depending on the type of view, or one which can infer the type of view and act accordingly, but I think this is what you wanted.\n. Done.\n@makovkastar hello?\n. Plus the `targetSdkVersion` as well since it can't be lower than `minSdkVersion`. `compileSdkVersion` must be `'android-L'` and I use `buildToolsVersion` `\"20.0.0\"` although I'm not sure if this is strictly required.\n\nI did test it on the `RecyclerView`, yes.\n. Currently no. As you could easily have seen by yourself, this library only supports AbsListView, which is  not an implementation nor extension of ScrollView. \n. ",
    "rciovati": "Is there something that prevents this to be merged? :-)\n. Is there something that prevents this to be merged? :-)\n. ",
    "goonerDroid": "Okay sorry my mistake!!\n. Okay sorry my mistake!!\n. ",
    "OmarBizreh": "Never mind my issue. it turned out this lib uses a drawable called shadow while the drawable in my responsible for showing the style in the second image is also called shadow. I renamed my file and everything wen back to normal. \nSorry for the trouble.\n. Never mind my issue. it turned out this lib uses a drawable called shadow while the drawable in my responsible for showing the style in the second image is also called shadow. I renamed my file and everything wen back to normal. \nSorry for the trouble.\n. ",
    "ViliusKraujutis": "True... I've fixed this in my project. Will try to contribute changes here this evening.\n. I had this issue too. Extracted `FabOnScrollListener`, which is responsible for showing/hiding FAB. Will try to contribute my changes this evening.\n. My pleasure! How was it, @jpshelley ?\n. Ok! Also I was thinking maybe to extract abstract `ScrollDirectionListener` from `FabOnScrollListener` class.\n\nSo it could have two abstract methods `onScrollUp` and `onScrollDown`. What do you think?\n. Hi, @makovkastar! I've added a new commit! Now I've simplified those unclear code places a lot. Please review it again. As discussed I've extracted abstract `ScrollDirectionDetector` and `ScrollDirectionListener`.\n. Now it should not break other apps.\n. No problem! It was a pleasure to contribute back to Android Community! :)\n. Apparently it relates to #6 so I assume this should be looked at again.\n. Looks like related AOSP issue: https://code.google.com/p/android/issues/detail?id=75204\n. Full stack:\n\n```\njava.lang.ClassNotFoundException: android.graphics.drawable.shapes.OvalShape\n    at org.jetbrains.android.uipreview.ProjectClassLoader.load(ProjectClassLoader.java:111)\n    at com.android.tools.idea.rendering.RenderClassLoader.findClass(RenderClassLoader.java:56)\n    at org.jetbrains.android.uipreview.ProjectClassLoader.findClass(ProjectClassLoader.java:73)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:306)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:247)\n    at com.melnykov.fab.FloatingActionButton.createDrawable(FloatingActionButton.java:136)\n    at com.melnykov.fab.FloatingActionButton.updateBackground(FloatingActionButton.java:130)\n    at com.melnykov.fab.FloatingActionButton.init(FloatingActionButton.java:109)\n    at com.melnykov.fab.FloatingActionButton.<init>(FloatingActionButton.java:80)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:513)\n    at org.jetbrains.android.uipreview.ViewLoader.createNewInstance(ViewLoader.java:379)\n    at org.jetbrains.android.uipreview.ViewLoader.loadView(ViewLoader.java:99)\n    at com.android.tools.idea.rendering.LayoutlibCallback.loadView(LayoutlibCallback.java:172)\n    at android.view.BridgeInflater.loadCustomView(BridgeInflater.java:206)\n    at android.view.BridgeInflater.createViewFromTag(BridgeInflater.java:131)\n    at android.view.LayoutInflater.inflate(LayoutInflater.java:469)\n    at android.view.LayoutInflater.inflate(LayoutInflater.java:373)\n    at com.android.layoutlib.bridge.impl.RenderSessionImpl.inflate(RenderSessionImpl.java:391)\n    at com.android.layoutlib.bridge.Bridge.createSession(Bridge.java:337)\n    at com.android.ide.common.rendering.LayoutLibrary.createSession(LayoutLibrary.java:333)\n    at com.android.tools.idea.rendering.RenderService$5.compute(RenderService.java:674)\n    at com.android.tools.idea.rendering.RenderService$5.compute(RenderService.java:663)\n    at com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(ApplicationImpl.java:932)\n    at com.android.tools.idea.rendering.RenderService.createRenderSession(RenderService.java:663)\n    at com.android.tools.idea.rendering.RenderService.render(RenderService.java:790)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager.doRender(AndroidLayoutPreviewToolWindowManager.java:611)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager.access$1900(AndroidLayoutPreviewToolWindowManager.java:81)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager$7$1.run(AndroidLayoutPreviewToolWindowManager.java:553)\n    at com.intellij.openapi.progress.impl.ProgressManagerImpl$2.run(ProgressManagerImpl.java:178)\n    at com.intellij.openapi.progress.ProgressManager.executeProcessUnderProgress(ProgressManager.java:209)\n    at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:212)\n    at com.intellij.openapi.progress.impl.ProgressManagerImpl.runProcess(ProgressManagerImpl.java:171)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager$7.run(AndroidLayoutPreviewToolWindowManager.java:548)\n    at com.intellij.util.ui.update.MergingUpdateQueue.execute(MergingUpdateQueue.java:320)\n    at com.intellij.util.ui.update.MergingUpdateQueue.execute(MergingUpdateQueue.java:310)\n    at com.intellij.util.ui.update.MergingUpdateQueue$2.run(MergingUpdateQueue.java:254)\n    at com.intellij.util.ui.update.MergingUpdateQueue.flush(MergingUpdateQueue.java:269)\n    at com.intellij.util.ui.update.MergingUpdateQueue.flush(MergingUpdateQueue.java:227)\n    at com.intellij.util.ui.update.MergingUpdateQueue.run(MergingUpdateQueue.java:217)\n    at com.intellij.util.concurrency.QueueProcessor.runSafely(QueueProcessor.java:238)\n    at com.intellij.util.Alarm$Request$1.run(Alarm.java:327)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)\n    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:138)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)\n    at java.lang.Thread.run(Thread.java:695)\n```\n. Niiice! :+1: \n. :+1: \n. I think, here should be some kind of observer implementation. FAB should observe for new snackbar and move up once snackbar is added.\n. `animateUp(int)` (or translateUp) and `animateBack()` after snackbar is dismissed.\n. True... I've fixed this in my project. Will try to contribute changes here this evening.\n. I had this issue too. Extracted `FabOnScrollListener`, which is responsible for showing/hiding FAB. Will try to contribute my changes this evening.\n. My pleasure! How was it, @jpshelley ?\n. Ok! Also I was thinking maybe to extract abstract `ScrollDirectionListener` from `FabOnScrollListener` class.\n\nSo it could have two abstract methods `onScrollUp` and `onScrollDown`. What do you think?\n. Hi, @makovkastar! I've added a new commit! Now I've simplified those unclear code places a lot. Please review it again. As discussed I've extracted abstract `ScrollDirectionDetector` and `ScrollDirectionListener`.\n. Now it should not break other apps.\n. No problem! It was a pleasure to contribute back to Android Community! :)\n. Apparently it relates to #6 so I assume this should be looked at again.\n. Looks like related AOSP issue: https://code.google.com/p/android/issues/detail?id=75204\n. Full stack:\n\n```\njava.lang.ClassNotFoundException: android.graphics.drawable.shapes.OvalShape\n    at org.jetbrains.android.uipreview.ProjectClassLoader.load(ProjectClassLoader.java:111)\n    at com.android.tools.idea.rendering.RenderClassLoader.findClass(RenderClassLoader.java:56)\n    at org.jetbrains.android.uipreview.ProjectClassLoader.findClass(ProjectClassLoader.java:73)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:306)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:247)\n    at com.melnykov.fab.FloatingActionButton.createDrawable(FloatingActionButton.java:136)\n    at com.melnykov.fab.FloatingActionButton.updateBackground(FloatingActionButton.java:130)\n    at com.melnykov.fab.FloatingActionButton.init(FloatingActionButton.java:109)\n    at com.melnykov.fab.FloatingActionButton.<init>(FloatingActionButton.java:80)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:513)\n    at org.jetbrains.android.uipreview.ViewLoader.createNewInstance(ViewLoader.java:379)\n    at org.jetbrains.android.uipreview.ViewLoader.loadView(ViewLoader.java:99)\n    at com.android.tools.idea.rendering.LayoutlibCallback.loadView(LayoutlibCallback.java:172)\n    at android.view.BridgeInflater.loadCustomView(BridgeInflater.java:206)\n    at android.view.BridgeInflater.createViewFromTag(BridgeInflater.java:131)\n    at android.view.LayoutInflater.inflate(LayoutInflater.java:469)\n    at android.view.LayoutInflater.inflate(LayoutInflater.java:373)\n    at com.android.layoutlib.bridge.impl.RenderSessionImpl.inflate(RenderSessionImpl.java:391)\n    at com.android.layoutlib.bridge.Bridge.createSession(Bridge.java:337)\n    at com.android.ide.common.rendering.LayoutLibrary.createSession(LayoutLibrary.java:333)\n    at com.android.tools.idea.rendering.RenderService$5.compute(RenderService.java:674)\n    at com.android.tools.idea.rendering.RenderService$5.compute(RenderService.java:663)\n    at com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(ApplicationImpl.java:932)\n    at com.android.tools.idea.rendering.RenderService.createRenderSession(RenderService.java:663)\n    at com.android.tools.idea.rendering.RenderService.render(RenderService.java:790)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager.doRender(AndroidLayoutPreviewToolWindowManager.java:611)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager.access$1900(AndroidLayoutPreviewToolWindowManager.java:81)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager$7$1.run(AndroidLayoutPreviewToolWindowManager.java:553)\n    at com.intellij.openapi.progress.impl.ProgressManagerImpl$2.run(ProgressManagerImpl.java:178)\n    at com.intellij.openapi.progress.ProgressManager.executeProcessUnderProgress(ProgressManager.java:209)\n    at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:212)\n    at com.intellij.openapi.progress.impl.ProgressManagerImpl.runProcess(ProgressManagerImpl.java:171)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager$7.run(AndroidLayoutPreviewToolWindowManager.java:548)\n    at com.intellij.util.ui.update.MergingUpdateQueue.execute(MergingUpdateQueue.java:320)\n    at com.intellij.util.ui.update.MergingUpdateQueue.execute(MergingUpdateQueue.java:310)\n    at com.intellij.util.ui.update.MergingUpdateQueue$2.run(MergingUpdateQueue.java:254)\n    at com.intellij.util.ui.update.MergingUpdateQueue.flush(MergingUpdateQueue.java:269)\n    at com.intellij.util.ui.update.MergingUpdateQueue.flush(MergingUpdateQueue.java:227)\n    at com.intellij.util.ui.update.MergingUpdateQueue.run(MergingUpdateQueue.java:217)\n    at com.intellij.util.concurrency.QueueProcessor.runSafely(QueueProcessor.java:238)\n    at com.intellij.util.Alarm$Request$1.run(Alarm.java:327)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)\n    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:138)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)\n    at java.lang.Thread.run(Thread.java:695)\n```\n. Niiice! :+1: \n. :+1: \n. I think, here should be some kind of observer implementation. FAB should observe for new snackbar and move up once snackbar is added.\n. `animateUp(int)` (or translateUp) and `animateBack()` after snackbar is dismissed.\n. ",
    "alexey-rabets": "Sorry, but I still have not smooth animation when showing/hiding FAB on scrolling a list view of items with diferent height. I think this issue should be reopened.\n. Yes, I've updated to 1.0.4. I can create and share a demo which reproduces the issue.\n. I have modified your sample to demonstrate the issue:\nhttps://github.com/alexey-rabets/FloatingActionButton.git\n. Yes, it works now. Thanks!\n. Sorry, but I still have not smooth animation when showing/hiding FAB on scrolling a list view of items with diferent height. I think this issue should be reopened.\n. Yes, I've updated to 1.0.4. I can create and share a demo which reproduces the issue.\n. I have modified your sample to demonstrate the issue:\nhttps://github.com/alexey-rabets/FloatingActionButton.git\n. Yes, it works now. Thanks!\n. ",
    "sreichholf": "Hi,\n\nthe current approach is (fully) broken for lists with items of different heights.\nI myself do have a list with headers that are about 1/8th of the size of a normal list item (wonder what happens to the height calculation).\nThe only proper approach i know of is where you check two conditions:\n1. Did the first visibile change? Yes -> The index change show the direction, reset all \"y pixels scrolled\" values to firstVisibleitem's getTop() value.\n2. No -> check how much firstVisibleItem.getTop() has changed and in which direction.\n\nThe downside is, raising the scroll events purely based on the minimum significant scroll value is not possible this way. But I honestly think that's worth the gain in reliability.\n\nI couldn't finish that approach yesterday evening but i may find some time this weekend.\n. here's my version of a (as far as I've tested) reliable ScrollDirectionDetector which I am using with my slightly customized FloatingActionButton:\n\nhttps://gist.github.com/anonymous/b3c82c1854da45b6ae57\n. :)\n. Hi,\n\nthe current approach is (fully) broken for lists with items of different heights.\nI myself do have a list with headers that are about 1/8th of the size of a normal list item (wonder what happens to the height calculation).\nThe only proper approach i know of is where you check two conditions:\n1. Did the first visibile change? Yes -> The index change show the direction, reset all \"y pixels scrolled\" values to firstVisibleitem's getTop() value.\n2. No -> check how much firstVisibleItem.getTop() has changed and in which direction.\n\nThe downside is, raising the scroll events purely based on the minimum significant scroll value is not possible this way. But I honestly think that's worth the gain in reliability.\n\nI couldn't finish that approach yesterday evening but i may find some time this weekend.\n. here's my version of a (as far as I've tested) reliable ScrollDirectionDetector which I am using with my slightly customized FloatingActionButton:\n\nhttps://gist.github.com/anonymous/b3c82c1854da45b6ae57\n. :)\n. ",
    "jpshelley": "My suggestion is to make the FAB contain an interface for this part: \nhttps://github.com/makovkastar/FloatingActionButton/blob/master/library/src/main/java/com/melnykov/fab/FloatingActionButton.java#L49\nand make the implementations of it have to override it. \n(Then potentially remove the code currently in the method and make it a util method that the user can add to it if they want. Then if they don't override it then it stays like its suppose too.)\n\nThoughts?\n. Great work. Will try it out later tomorrow and let you know my findings. @ViliusKraujutis \n. For those still looking for a clean progress bar too:\nhttps://github.com/ckurtm/FabButton\n. My suggestion is to make the FAB contain an interface for this part: \nhttps://github.com/makovkastar/FloatingActionButton/blob/master/library/src/main/java/com/melnykov/fab/FloatingActionButton.java#L49\nand make the implementations of it have to override it. \n(Then potentially remove the code currently in the method and make it a util method that the user can add to it if they want. Then if they don't override it then it stays like its suppose too.)\n\nThoughts?\n. Great work. Will try it out later tomorrow and let you know my findings. @ViliusKraujutis \n. For those still looking for a clean progress bar too:\nhttps://github.com/ckurtm/FabButton\n. ",
    "erpragatisingh": "i want to use in eclipse.please guide.\\\nThanks.\n. from initial most user available for eclipse.Thanks.\n. i want to use in eclipse.please guide.\\\nThanks.\n. from initial most user available for eclipse.Thanks.\n. ",
    "rahatarmanahmed": "+1\n. Forgive me for plugging my own library but I think it is more accurate to\nthe examples given in the Material design guide:\nhttps://github.com/rahatarmanahmed/CircularProgressView\n\nThe only problem I can think of with compositing a FAB and a progress wheel\nis that the shadow would need to be larger.\n\nI've also had trouble with drawing views on top of a FAB, not sure how to\nfix that either.\nOn Nov 29, 2014 6:39 AM, \"ChrisMCMine\" notifications@github.com wrote:\n\n> you could try to achieve this effect using this library\n> https://github.com/pnikosis/materialish-progress and in the layout\n> something like this:\n> (Pseudo code)\n> \n> <FrameLayout>\n>     <com.melnykov.fab.FloatingActionButton\n>               android:layout_width=\"56dp\"\n>               android:layout_height=\"56dp\" />\n>     <com.pnikosis.materialishprogress.ProgressWheel\n>               android:layout_width=\"56dp\"\n>               android:layout_height=\"56dp\"\n>               android:visibility=\"gone\" />\n> </FrameLayout>\n> \n> And when you want to display the ProgressWheel simply make it visible (\n> setVisibility) I haven't tried that out so I've no idea how this will\n> look like (Maybe the ProgressWheel has to be ~2dp bigger so that it\n> doesn't lay directly on the FAB)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/makovkastar/FloatingActionButton/issues/24#issuecomment-64950537\n> .\n. I would prefer it if you used my library as a dependency, and any changes you need be made as pull requests. But otherwise, I don't have any objections.\n. I've figured out why you can't draw anything on top of the FAB. This only happens in Lollipop because it uses elevation on Lollipop. Anything on a higher elevation has a higher z-order. Easy fix, set elevation to be the same as the FAB. Here's what I use to put my CircularProgressView on my FAB to be used as a loading animation (note this is within a relativelayout with some other stuff I didn't include):\n\n```\n<FrameLayout\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_alignTop=\"@id/player_bottom_bar\"\n    android:layout_alignParentRight=\"true\"\n    android:layout_marginRight=\"16dp\"\n    android:layout_marginTop=\"-28dp\"\n    android:clipChildren=\"false\"\n    >\n    <com.melnykov.fab.FloatingActionButton\n        xmlns:fab=\"http://schemas.android.com/apk/res-auto\"\n        android:id=\"@+id/playPauseButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center\"\n        android:src=\"@drawable/ic_action_play_light\"\n        fab:fab_colorNormal=\"@color/colorPrimary\"\n        fab:fab_colorPressed=\"@color/colorPrimaryDark\"\n        />\n    <com.github.rahatarmanahmed.cpv.CircularProgressView\n        xmlns:cpv=\"http://schemas.android.com/apk/res-auto\"\n        android:id=\"@+id/loading_anim\"\n        android:layout_width=\"24dp\"\n        android:layout_height=\"24dp\"\n        android:layout_gravity=\"center\"\n        android:elevation=\"@dimen/fab_elevation_lollipop\"\n        cpv:cpv_color=\"#FFF\"\n        cpv:cpv_indeterminate=\"true\"\n        cpv:cpv_thickness=\"3dp\"\n        />\n</FrameLayout>\n```\n. Oh @nwalters512 I forgot to mention to solve the clipping issue, I had to put clipChildren on both the surrounding FrameLayout as you see, AND the parent RelativeLayout. No clue why but that fixed it.\n. +1\n. Forgive me for plugging my own library but I think it is more accurate to\nthe examples given in the Material design guide:\nhttps://github.com/rahatarmanahmed/CircularProgressView\n\nThe only problem I can think of with compositing a FAB and a progress wheel\nis that the shadow would need to be larger.\n\nI've also had trouble with drawing views on top of a FAB, not sure how to\nfix that either.\nOn Nov 29, 2014 6:39 AM, \"ChrisMCMine\" notifications@github.com wrote:\n\n> you could try to achieve this effect using this library\n> https://github.com/pnikosis/materialish-progress and in the layout\n> something like this:\n> (Pseudo code)\n> \n> <FrameLayout>\n>     <com.melnykov.fab.FloatingActionButton\n>               android:layout_width=\"56dp\"\n>               android:layout_height=\"56dp\" />\n>     <com.pnikosis.materialishprogress.ProgressWheel\n>               android:layout_width=\"56dp\"\n>               android:layout_height=\"56dp\"\n>               android:visibility=\"gone\" />\n> </FrameLayout>\n> \n> And when you want to display the ProgressWheel simply make it visible (\n> setVisibility) I haven't tried that out so I've no idea how this will\n> look like (Maybe the ProgressWheel has to be ~2dp bigger so that it\n> doesn't lay directly on the FAB)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/makovkastar/FloatingActionButton/issues/24#issuecomment-64950537\n> .\n. I would prefer it if you used my library as a dependency, and any changes you need be made as pull requests. But otherwise, I don't have any objections.\n. I've figured out why you can't draw anything on top of the FAB. This only happens in Lollipop because it uses elevation on Lollipop. Anything on a higher elevation has a higher z-order. Easy fix, set elevation to be the same as the FAB. Here's what I use to put my CircularProgressView on my FAB to be used as a loading animation (note this is within a relativelayout with some other stuff I didn't include):\n\n```\n<FrameLayout\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_alignTop=\"@id/player_bottom_bar\"\n    android:layout_alignParentRight=\"true\"\n    android:layout_marginRight=\"16dp\"\n    android:layout_marginTop=\"-28dp\"\n    android:clipChildren=\"false\"\n    >\n    <com.melnykov.fab.FloatingActionButton\n        xmlns:fab=\"http://schemas.android.com/apk/res-auto\"\n        android:id=\"@+id/playPauseButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center\"\n        android:src=\"@drawable/ic_action_play_light\"\n        fab:fab_colorNormal=\"@color/colorPrimary\"\n        fab:fab_colorPressed=\"@color/colorPrimaryDark\"\n        />\n    <com.github.rahatarmanahmed.cpv.CircularProgressView\n        xmlns:cpv=\"http://schemas.android.com/apk/res-auto\"\n        android:id=\"@+id/loading_anim\"\n        android:layout_width=\"24dp\"\n        android:layout_height=\"24dp\"\n        android:layout_gravity=\"center\"\n        android:elevation=\"@dimen/fab_elevation_lollipop\"\n        cpv:cpv_color=\"#FFF\"\n        cpv:cpv_indeterminate=\"true\"\n        cpv:cpv_thickness=\"3dp\"\n        />\n</FrameLayout>\n```\n. Oh @nwalters512 I forgot to mention to solve the clipping issue, I had to put clipChildren on both the surrounding FrameLayout as you see, AND the parent RelativeLayout. No clue why but that fixed it.\n. ",
    "nwalters512": "+1\n. Rahat, do you have any opposition to me trying to integrate your code directly into this library?\n. @rahatarmanahmed @makovkastar I foked the FAB library and I've started work here: https://github.com/nwalters512/FloatingActionButton. The best way I could think to do this is by adding a FAB and circular progress indicator to a single relative layout and creating a new custom view based on that. Because the FAB itself is an `ImageButton`, there was no way for me to add the progress indicator while keeping it a dependency. The issues I've had so far are that a) I can't make the circular progress view display above the FAB in the z-order, and b) putting the FAB in a relative layout seems to clip the shadow. I've tried several things and nothing's worked to solve either of the issues. Any help would be appreciated.\n. I really think this should be the responsibility of the individual developer to implement. The many, many ways that one could implement a Snackbar are so varied that it would be hard to design a one-size-fits-all solution.\n. If needed, I can make a simple test app to demonstrate this bug.\n. I can confirm that @davidjrichardson's solution of wrapping the FAB in a `FrameLayout` and then performing the reveal on the `FrameLayout` causes this to work correctly.\n. You shouldn't be using two FABs in the same activity anyway.\n. @andrianblp As NavDrawerGate has shown, just because Google does something, doesn't mean it's right. The material spec _specifically_ says not to use two FABs.\n. Have you tried this with a regualr drawable instead of a mipmap? AFAIK mipmap support was only added in 4.3.\n. +1\n. Rahat, do you have any opposition to me trying to integrate your code directly into this library?\n. @rahatarmanahmed @makovkastar I foked the FAB library and I've started work here: https://github.com/nwalters512/FloatingActionButton. The best way I could think to do this is by adding a FAB and circular progress indicator to a single relative layout and creating a new custom view based on that. Because the FAB itself is an `ImageButton`, there was no way for me to add the progress indicator while keeping it a dependency. The issues I've had so far are that a) I can't make the circular progress view display above the FAB in the z-order, and b) putting the FAB in a relative layout seems to clip the shadow. I've tried several things and nothing's worked to solve either of the issues. Any help would be appreciated.\n. I really think this should be the responsibility of the individual developer to implement. The many, many ways that one could implement a Snackbar are so varied that it would be hard to design a one-size-fits-all solution.\n. If needed, I can make a simple test app to demonstrate this bug.\n. I can confirm that @davidjrichardson's solution of wrapping the FAB in a `FrameLayout` and then performing the reveal on the `FrameLayout` causes this to work correctly.\n. You shouldn't be using two FABs in the same activity anyway.\n. @andrianblp As NavDrawerGate has shown, just because Google does something, doesn't mean it's right. The material spec _specifically_ says not to use two FABs.\n. Have you tried this with a regualr drawable instead of a mipmap? AFAIK mipmap support was only added in 4.3.\n. ",
    "AkshayChordiya": "This would be beautiful @makovkastar \n. You can try this library : https://github.com/ksoichiro/Android-ObservableScrollView/\n\nAnd handle showing & hiding in : \n\n```\n@Override\n    public void onUpOrCancelMotionEvent(ScrollState scrollState) {\n        if (scrollState == ScrollState.UP) {\n            if (fab.isShowing()) {\n                fab.hide();\n            }\n        } else if (scrollState == ScrollState.DOWN) {\n            if (!fab.isShowing()) {\n                fab.show();\n            }\n        }\n    }\n```\n\nThe above method comes with the library.\n. @IRMobydick \nThe FAB class extends `ImageButton` & hence you can set `android:src` dynamically as you set to an `ImageButton` or `ImageView`\n\nThere are various methods to set image to FAB dynamically.\n\nCheck this link for it : http://developer.android.com/reference/android/widget/ImageView.html#setImageBitmap(android.graphics.Bitmap)\n. @tbremer19 \nI haven't tested out by using the `onClick` attribute. It should work most probably.\nBut you can try the code below : \n\n```\nmYourFab.setOnClickListener(new View.OnClickListener() {\n                public void onClick(View v) {\n                    // Perform action on click\n                }\n            });\n```\n. @AfzalivE \nYeah I meant it only. Thanks. \nThe video covers animation to hide, I want animation for showing also.\n. @AfzalivE \nOhhkay, any help in implementing it?\n. This would be beautiful @makovkastar \n. You can try this library : https://github.com/ksoichiro/Android-ObservableScrollView/\n\nAnd handle showing & hiding in : \n\n```\n@Override\n    public void onUpOrCancelMotionEvent(ScrollState scrollState) {\n        if (scrollState == ScrollState.UP) {\n            if (fab.isShowing()) {\n                fab.hide();\n            }\n        } else if (scrollState == ScrollState.DOWN) {\n            if (!fab.isShowing()) {\n                fab.show();\n            }\n        }\n    }\n```\n\nThe above method comes with the library.\n. @IRMobydick \nThe FAB class extends `ImageButton` & hence you can set `android:src` dynamically as you set to an `ImageButton` or `ImageView`\n\nThere are various methods to set image to FAB dynamically.\n\nCheck this link for it : http://developer.android.com/reference/android/widget/ImageView.html#setImageBitmap(android.graphics.Bitmap)\n. @tbremer19 \nI haven't tested out by using the `onClick` attribute. It should work most probably.\nBut you can try the code below : \n\n```\nmYourFab.setOnClickListener(new View.OnClickListener() {\n                public void onClick(View v) {\n                    // Perform action on click\n                }\n            });\n```\n. @AfzalivE \nYeah I meant it only. Thanks. \nThe video covers animation to hide, I want animation for showing also.\n. @AfzalivE \nOhhkay, any help in implementing it?\n. ",
    "outadoc": "I've been looking for this for quite a while now, and this would really be a great addition.\n. I've been looking for this for quite a while now, and this would really be a great addition.\n. ",
    "ChrisMCMine": "you could try to achieve this effect using this library https://github.com/pnikosis/materialish-progress and in the layout something like this:\n(Pseudo code)\n\n```\n<FrameLayout>\n    <com.melnykov.fab.FloatingActionButton\n              android:layout_width=\"56dp\"\n              android:layout_height=\"56dp\" />\n    <com.pnikosis.materialishprogress.ProgressWheel\n              android:layout_width=\"56dp\"\n              android:layout_height=\"56dp\"\n              android:visibility=\"gone\" />\n</FrameLayout>\n```\n\nAnd when you want to display the `ProgressWheel` simply make it visible (`setVisibility`) I haven't tried that out so I've no idea how this will look like (Maybe the `ProgressWheel` has to be ~2dp bigger so that it doesn't lay directly on the FAB)\n. you could try to achieve this effect using this library https://github.com/pnikosis/materialish-progress and in the layout something like this:\n(Pseudo code)\n\n```\n<FrameLayout>\n    <com.melnykov.fab.FloatingActionButton\n              android:layout_width=\"56dp\"\n              android:layout_height=\"56dp\" />\n    <com.pnikosis.materialishprogress.ProgressWheel\n              android:layout_width=\"56dp\"\n              android:layout_height=\"56dp\"\n              android:visibility=\"gone\" />\n</FrameLayout>\n```\n\nAnd when you want to display the `ProgressWheel` simply make it visible (`setVisibility`) I haven't tried that out so I've no idea how this will look like (Maybe the `ProgressWheel` has to be ~2dp bigger so that it doesn't lay directly on the FAB)\n. ",
    "sailorseashell": ":+1: \nI would also love to see this feature!\n. :+1: \nI would also love to see this feature!\n. ",
    "nekdenis": "+1\n. +1\n. ",
    "TpRadebe": "+1\n. +1\n. +1\n. +1\n. ",
    "githubdoramon": "+1\n. +1\n. ",
    "Fitzpasd": "![capture](https://cloud.githubusercontent.com/assets/1279954/4544326/375042ac-4e32-11e4-947f-014a73e56291.PNG)\n. ![capture](https://cloud.githubusercontent.com/assets/1279954/4544326/375042ac-4e32-11e4-947f-014a73e56291.PNG)\n. ",
    "chetan221b": "is the bug fixed..?? \n. is the bug fixed..?? \n. ",
    "peterjiz": "@makovkastar yeah figured (ignore my previous comment)! Thanks!\n. @makovkastar yeah figured (ignore my previous comment)! Thanks!\n. ",
    "airk000": "OK, got it.\n. OK, got it.\n. ",
    "Iggy82": "Hello @airk000 \nHave you already got it to work? Can you post the necessary changes?\nThanks in advance.\n. Sorry, I didn't see that. I will have a look at it. Thank you.\n. @makovkastar Is there still no solution for this problem? This could be a big problem on Android 5 devices as I'm also using a transparent background. I hope you will find a solution. Thank you.\n. Hi,\nThanks for your answer. Yes, is it possible to include it at a min Android version level 7?\nI saw another request where was written that it already works on Android API level 9. But I did not get it working. I have a complete Material Design also on Android 2 devices but only the Floating Action Button does not work :(\nCan you have a look at it?\nThank you very much!\n. Thank you @makovkastar \nUnfortunately, there are still a lot of Android 2 devices running. If I would set API level to 14 many thousands users wouldn't get any update anymore and they will write a bad review via the Google Play website. Of couse, I would like to live in a world where everyone has an actual smartphone but it's still not the time to set the min api level to 14. When I make a new app, I will do it but I cannot risk thousand bad reviews because of Android 2 users :(\nI hope you can understand this and think about integrating it?\nThank you very much.\n. @makovkastar Reducing minSDK to 7 would be great :)\n. Hello @airk000 \nHave you already got it to work? Can you post the necessary changes?\nThanks in advance.\n. Sorry, I didn't see that. I will have a look at it. Thank you.\n. @makovkastar Is there still no solution for this problem? This could be a big problem on Android 5 devices as I'm also using a transparent background. I hope you will find a solution. Thank you.\n. Hi,\nThanks for your answer. Yes, is it possible to include it at a min Android version level 7?\nI saw another request where was written that it already works on Android API level 9. But I did not get it working. I have a complete Material Design also on Android 2 devices but only the Floating Action Button does not work :(\nCan you have a look at it?\nThank you very much!\n. Thank you @makovkastar \nUnfortunately, there are still a lot of Android 2 devices running. If I would set API level to 14 many thousands users wouldn't get any update anymore and they will write a bad review via the Google Play website. Of couse, I would like to live in a world where everyone has an actual smartphone but it's still not the time to set the min api level to 14. When I make a new app, I will do it but I cannot risk thousand bad reviews because of Android 2 users :(\nI hope you can understand this and think about integrating it?\nThank you very much.\n. @makovkastar Reducing minSDK to 7 would be great :)\n. ",
    "octohub": "Came here to say this. That would be awesome.\n. Came here to say this. That would be awesome.\n. ",
    "alexenderjohanson": "make this a reality please\n. make this a reality please\n. ",
    "afollestad": "Did it myself, made a pull request; I haven't tested it yet but it should work. Just use the RecyclerView equivalent methods instead of the old ones, it requires a reference to your LayoutManager too so it can get the first visible item.\n\nhttps://github.com/makovkastar/FloatingActionButton/pull/34\n. My new pull request replaces that previous one https://github.com/makovkastar/FloatingActionButton/pull/35\n. This issue has lead to me implementing quite a bit of other small features. On API 21 (Lollipop), the FAB will have a ripple selector and it will use the elevation API instead of the shadow drawable. I added an XML attribute that can be used to customize the ripple color, along with a equivalent getter/setter method.\n. I think the simplest solution, especially since Snackbars don't have an official API (just developer implementations), would be to modify the margin or move the FAB when a Snackbar view is shown.\n\nIt would be kinda cool if the FAB had an `animateUp(int)` method that would move the FAB up a certain amount (e.g. the height of the snackbar plus a margin) with an animation.\n. Note that this will initially only work with the LinearLayoutManager and GridLayoutManager. Support for more can be easily added, but the method used to get the first visible item position isn't abstract, it appears to be specific to each layout manager.\n. @makovkastar oh yeah, you're right, I added a commit to the pull request\n. I'm moving this to a different, and better pull request.\n. @makovkastar odd, I've never seen that issue before. Not sure if it makes a difference that I use Android Studio rather than Eclipse.\n. @makovkastar woops didn't mean to do that. Attempting to figure out what other merge conflicts are there now.\n. @makovkastar what's the easiest way to do that? Rebasing doesn't seem to be working too well\n. @makovkastar I keep trying but it doesn't work. The console based text editor doesn't list any commits, just the phrase \"noop\".\n. @makovkastar wait I found a way to get to work, one sec\n. @makovkastar got it down to two commits, had to fix merge conflicts after squashing the rest. How's that? Haha\n. @makovkastar did the demo gif get replaced? The one I had was running on Lollipop with the colored status bar and everything\n. @makovkastar awesome!\n\nAnd oh weird, it was showing the old one for a while, must've been cached.\n. If you use the library on API 21 (Lollipop), the library will use the elevation API instead of the shadow drawable, so it will be correct on L. But for anything below L, yeah I agree.\n. @waylaidwanderer I'd recommend using a + symbol rather than a version number, it'll automatically use the latest version \n. This should be closed, this is invalid.\n. To add to the description, the sample project looks like this on Lollipop:\n\n![rsz_device-2015-02-03-144223](https://cloud.githubusercontent.com/assets/1820165/6028976/fcf3aade-abb2-11e4-8811-373d1a8d808f.png)\n. @makovkastar uh oh, it looks like some files I was experimenting with got caught in this pull request\n. Undid a commit in my own repo, fixed and down to six file changes.\n. No problem, thanks for the great library!\n. Did it myself, made a pull request; I haven't tested it yet but it should work. Just use the RecyclerView equivalent methods instead of the old ones, it requires a reference to your LayoutManager too so it can get the first visible item.\n\nhttps://github.com/makovkastar/FloatingActionButton/pull/34\n. My new pull request replaces that previous one https://github.com/makovkastar/FloatingActionButton/pull/35\n. This issue has lead to me implementing quite a bit of other small features. On API 21 (Lollipop), the FAB will have a ripple selector and it will use the elevation API instead of the shadow drawable. I added an XML attribute that can be used to customize the ripple color, along with a equivalent getter/setter method.\n. I think the simplest solution, especially since Snackbars don't have an official API (just developer implementations), would be to modify the margin or move the FAB when a Snackbar view is shown.\n\nIt would be kinda cool if the FAB had an `animateUp(int)` method that would move the FAB up a certain amount (e.g. the height of the snackbar plus a margin) with an animation.\n. Note that this will initially only work with the LinearLayoutManager and GridLayoutManager. Support for more can be easily added, but the method used to get the first visible item position isn't abstract, it appears to be specific to each layout manager.\n. @makovkastar oh yeah, you're right, I added a commit to the pull request\n. I'm moving this to a different, and better pull request.\n. @makovkastar odd, I've never seen that issue before. Not sure if it makes a difference that I use Android Studio rather than Eclipse.\n. @makovkastar woops didn't mean to do that. Attempting to figure out what other merge conflicts are there now.\n. @makovkastar what's the easiest way to do that? Rebasing doesn't seem to be working too well\n. @makovkastar I keep trying but it doesn't work. The console based text editor doesn't list any commits, just the phrase \"noop\".\n. @makovkastar wait I found a way to get to work, one sec\n. @makovkastar got it down to two commits, had to fix merge conflicts after squashing the rest. How's that? Haha\n. @makovkastar did the demo gif get replaced? The one I had was running on Lollipop with the colored status bar and everything\n. @makovkastar awesome!\n\nAnd oh weird, it was showing the old one for a while, must've been cached.\n. If you use the library on API 21 (Lollipop), the library will use the elevation API instead of the shadow drawable, so it will be correct on L. But for anything below L, yeah I agree.\n. @waylaidwanderer I'd recommend using a + symbol rather than a version number, it'll automatically use the latest version \n. This should be closed, this is invalid.\n. To add to the description, the sample project looks like this on Lollipop:\n\n![rsz_device-2015-02-03-144223](https://cloud.githubusercontent.com/assets/1820165/6028976/fcf3aade-abb2-11e4-8811-373d1a8d808f.png)\n. @makovkastar uh oh, it looks like some files I was experimenting with got caught in this pull request\n. Undid a commit in my own repo, fixed and down to six file changes.\n. No problem, thanks for the great library!\n. ",
    "PaulMaddox": "Probably easier if I just give you the file, so you can do any future modifications yourself.\nI did it in Pixelmator on a mac, but have also exported it to photoshop format (although I don't have photoshop to test the export process myself).\n\nPull request incoming\n. Probably easier if I just give you the file, so you can do any future modifications yourself.\nI did it in Pixelmator on a mac, but have also exported it to photoshop format (although I don't have photoshop to test the export process myself).\n\nPull request incoming\n. ",
    "jymdman": "Made an implementation that worked for me:\n\nWhen showing snackbar in my app I called: fab.showWithSnackHeight(200);\nAnd when hiding snackabar again: fab.showWithSnackHeight(0); // (or just fab.show();) \n\ndiff --git a/library/src/main/java/com/melnykov/fab/FloatingActionButton.java b/library/src/main/java/com/melnykov/fab/FloatingActionButton.java\nindex 4fd5ff8..af5f376 100644\n--- a/library/src/main/java/com/melnykov/fab/FloatingActionButton.java\n+++ b/library/src/main/java/com/melnykov/fab/FloatingActionButton.java\n@@ -270,6 +270,10 @@ public class FloatingActionButton extends ImageButton {\n         return mRecyclerViewOnScrollListener;\n     }\n-    public void showWithSnackHeight(int snackHeight) {\n-        toggle(true, true, true, snackHeight);\n-    }\n  +\n   public void show() {\n       show(true);\n   }\n  @@ -279,14 +283,14 @@ public class FloatingActionButton extends ImageButton {\n   }\n  \n   public void show(boolean animate) {\n-        toggle(true, animate, false);\n- ```\n     toggle(true, animate, false, 0);\n  ```\n  \n   }\n  \n   public void hide(boolean animate) {\n-        toggle(false, animate, false);\n- ```\n     toggle(false, animate, false, 0);\n  ```\n  \n   }\n-    private void toggle(final boolean visible, final boolean animate, boolean force) {\n-    private void toggle(final boolean visible, final boolean animate, boolean force, final int snackHeight) {\n       if (mVisible != visible || force) {\n           mVisible = visible;\n           int height = getHeight();\n  @@ -300,14 +304,14 @@ public class FloatingActionButton extends ImageButton {\n                           if (currentVto.isAlive()) {\n                               currentVto.removeOnPreDrawListener(this);\n                           }\n-                            toggle(visible, animate, true);\n-                            toggle(visible, animate, true, snackHeight);\n                           return true;\n                       }\n                   });\n                   return;\n               }\n           }\n-            int translationY = visible ? 0 : height + getMarginBottom();\n-            int translationY = visible ? 0 - snackHeight : height + getMarginBottom();\n           if (animate) {\n               animate().setInterpolator(mInterpolator)\n                       .setDuration(TRANSLATE_DURATION_MILLIS)\n. Ok, that diff didn't show upp well... \n\nAdded a new method:\n\n```\npublic void showWithSnackHeight(int snackHeight) {\n    toggle(true, true, true, snackHeight);\n}\n```\n\nmodified toggle:\n\n```\nprivate void toggle(final boolean visible, final boolean animate, boolean force, final int snackHeight) {\n    if (mVisible != visible || force) {\n        mVisible = visible;\n        int height = getHeight();\n        if (height == 0 && !force) {\n            ViewTreeObserver vto = getViewTreeObserver();\n            if (vto.isAlive()) {\n                vto.addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener() {\n                    @Override\n                    public boolean onPreDraw() {\n                        ViewTreeObserver currentVto = getViewTreeObserver();\n                        if (currentVto.isAlive()) {\n                            currentVto.removeOnPreDrawListener(this);\n                        }\n                        toggle(visible, animate, true, snackHeight);\n                        return true;\n                    }\n                });\n                return;\n            }\n        }\n        int translationY = visible ? 0 - snackHeight : height + getMarginBottom();\n        if (animate) {\n            animate().setInterpolator(mInterpolator)\n                    .setDuration(TRANSLATE_DURATION_MILLIS)\n                    .translationY(translationY);\n        } else {\n            setTranslationY(translationY);\n        }\n    }\n}\n```\n. Made an implementation that worked for me:\n\nWhen showing snackbar in my app I called: fab.showWithSnackHeight(200);\nAnd when hiding snackabar again: fab.showWithSnackHeight(0); // (or just fab.show();) \n\ndiff --git a/library/src/main/java/com/melnykov/fab/FloatingActionButton.java b/library/src/main/java/com/melnykov/fab/FloatingActionButton.java\nindex 4fd5ff8..af5f376 100644\n--- a/library/src/main/java/com/melnykov/fab/FloatingActionButton.java\n+++ b/library/src/main/java/com/melnykov/fab/FloatingActionButton.java\n@@ -270,6 +270,10 @@ public class FloatingActionButton extends ImageButton {\n         return mRecyclerViewOnScrollListener;\n     }\n-    public void showWithSnackHeight(int snackHeight) {\n-        toggle(true, true, true, snackHeight);\n-    }\n  +\n   public void show() {\n       show(true);\n   }\n  @@ -279,14 +283,14 @@ public class FloatingActionButton extends ImageButton {\n   }\n  \n   public void show(boolean animate) {\n-        toggle(true, animate, false);\n- ```\n     toggle(true, animate, false, 0);\n  ```\n  \n   }\n  \n   public void hide(boolean animate) {\n-        toggle(false, animate, false);\n- ```\n     toggle(false, animate, false, 0);\n  ```\n  \n   }\n-    private void toggle(final boolean visible, final boolean animate, boolean force) {\n-    private void toggle(final boolean visible, final boolean animate, boolean force, final int snackHeight) {\n       if (mVisible != visible || force) {\n           mVisible = visible;\n           int height = getHeight();\n  @@ -300,14 +304,14 @@ public class FloatingActionButton extends ImageButton {\n                           if (currentVto.isAlive()) {\n                               currentVto.removeOnPreDrawListener(this);\n                           }\n-                            toggle(visible, animate, true);\n-                            toggle(visible, animate, true, snackHeight);\n                           return true;\n                       }\n                   });\n                   return;\n               }\n           }\n-            int translationY = visible ? 0 : height + getMarginBottom();\n-            int translationY = visible ? 0 - snackHeight : height + getMarginBottom();\n           if (animate) {\n               animate().setInterpolator(mInterpolator)\n                       .setDuration(TRANSLATE_DURATION_MILLIS)\n. Ok, that diff didn't show upp well... \n\nAdded a new method:\n\n```\npublic void showWithSnackHeight(int snackHeight) {\n    toggle(true, true, true, snackHeight);\n}\n```\n\nmodified toggle:\n\n```\nprivate void toggle(final boolean visible, final boolean animate, boolean force, final int snackHeight) {\n    if (mVisible != visible || force) {\n        mVisible = visible;\n        int height = getHeight();\n        if (height == 0 && !force) {\n            ViewTreeObserver vto = getViewTreeObserver();\n            if (vto.isAlive()) {\n                vto.addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener() {\n                    @Override\n                    public boolean onPreDraw() {\n                        ViewTreeObserver currentVto = getViewTreeObserver();\n                        if (currentVto.isAlive()) {\n                            currentVto.removeOnPreDrawListener(this);\n                        }\n                        toggle(visible, animate, true, snackHeight);\n                        return true;\n                    }\n                });\n                return;\n            }\n        }\n        int translationY = visible ? 0 - snackHeight : height + getMarginBottom();\n        if (animate) {\n            animate().setInterpolator(mInterpolator)\n                    .setDuration(TRANSLATE_DURATION_MILLIS)\n                    .translationY(translationY);\n        } else {\n            setTranslationY(translationY);\n        }\n    }\n}\n```\n. ",
    "Symbianx": "Is still something needing fix in this pull request?\nWould love to have the RecyclerView support.\n. Is still something needing fix in this pull request?\nWould love to have the RecyclerView support.\n. ",
    "broakenmedia": "Went with this for now:\n\n```\n       Paint paint = new Paint();\n        paint.setTextAlign(Paint.Align.CENTER);\n        int xPos = (canvas.getWidth() / 2);\n        Rect r = new Rect();\n        paint.getTextBounds( mText, 0, mText.length(), r);\n        int yPos = (int) ((canvas.getHeight() / 2) - ((paint.descent() + paint.ascent()) / 2)) + r.height()/2 ;\n        paint.setColor(Color.WHITE);\n        paint.setTextSize(convertSpToPixel(14, con));\n        canvas.drawText(mText,xPos,yPos, paint);\n```\n. Went with this for now:\n\n```\n       Paint paint = new Paint();\n        paint.setTextAlign(Paint.Align.CENTER);\n        int xPos = (canvas.getWidth() / 2);\n        Rect r = new Rect();\n        paint.getTextBounds( mText, 0, mText.length(), r);\n        int yPos = (int) ((canvas.getHeight() / 2) - ((paint.descent() + paint.ascent()) / 2)) + r.height()/2 ;\n        paint.setColor(Color.WHITE);\n        paint.setTextSize(convertSpToPixel(14, con));\n        canvas.drawText(mText,xPos,yPos, paint);\n```\n. ",
    "waylaidwanderer": "@makovkastar I followed the instructions in the readme on Friday, but looks like you updated the readme to change the instructions to `compile 'com.melnykov:floatingactionbutton:1.0.5'` just two days ago (on the next day). It was 1.0.4 before that. Thanks though!\n. @makovkastar I followed the instructions in the readme on Friday, but looks like you updated the readme to change the instructions to `compile 'com.melnykov:floatingactionbutton:1.0.5'` just two days ago (on the next day). It was 1.0.4 before that. Thanks though!\n. ",
    "davidjrichardson": "I too have this problem. With the latest version (1.0.6) I did find that you can get a reveal to work if you wrap the FAB in a parent view (FrameLayout, etc) and then performing the reveal on the FAB (not its parent). This doesn't stop the issue of disappearing instantly when the animation is finished, however.\n. I too have this problem. With the latest version (1.0.6) I did find that you can get a reveal to work if you wrap the FAB in a parent view (FrameLayout, etc) and then performing the reveal on the FAB (not its parent). This doesn't stop the issue of disappearing instantly when the animation is finished, however.\n. ",
    "rob151515": "Tried your code and not working for me... Also tried wrapping in a FrameLayout as suggested and performing the reveal on the FrameLayout and that didn't work either.\n. Tried your code and not working for me... Also tried wrapping in a FrameLayout as suggested and performing the reveal on the FrameLayout and that didn't work either.\n. ",
    "k-kagurazaka": "@makovkastar \nI love your idea. I think the new ScrollListener class makes it possible to customize the scroll events more easily.\n. Thanks @makovkastar .\nI will use the library by pulled git repository until it is released that the new version including this solution on the Maven Central.\n. @makovkastar \nI love your idea. I think the new ScrollListener class makes it possible to customize the scroll events more easily.\n. Thanks @makovkastar .\nI will use the library by pulled git repository until it is released that the new version including this solution on the Maven Central.\n. ",
    "lordcodes": "https://code.google.com/p/android/issues/detail?id=78248\n\nAndroid bug seems to mention elevation not working correctly with translucent background. It might be related?\n. #80 refers to the same request and there is more discussion there.\n. This will be because the shadow is performed by Android on Lollipop using elevation, but with an image file on the FAB for pre-Lollipop.\n\nThis could be fixed, by having a way to rotate the icon rather than the whole FAB.\n. https://code.google.com/p/android/issues/detail?id=78248\n\nAndroid bug seems to mention elevation not working correctly with translucent background. It might be related?\n. #80 refers to the same request and there is more discussion there.\n. This will be because the shadow is performed by Android on Lollipop using elevation, but with an image file on the FAB for pre-Lollipop.\n\nThis could be fixed, by having a way to rotate the icon rather than the whole FAB.\n. ",
    "Alvtag2": "Hi, been running into this problem this morning. as far as I can tell, android draws a flat shadow gradient \"border\", then lays out content to straddle that gradient. looks great for solid color content, but transparencies allow you to see through that content and see the entire shadow gradient. i think a custom asset as `makovkastar commented on Nov 8, 2014` is the only way to use transparent content with pseudo elevation.\n. Hi, been running into this problem this morning. as far as I can tell, android draws a flat shadow gradient \"border\", then lays out content to straddle that gradient. looks great for solid color content, but transparencies allow you to see through that content and see the entire shadow gradient. i think a custom asset as `makovkastar commented on Nov 8, 2014` is the only way to use transparent content with pseudo elevation.\n. ",
    "alexblack": "I hacked it to get it to compile, and run.  So far in my testing, it works except for the animation on the listview scroll.\n\n```\n11-03 03:21:08.872      998-998/com.getinvoicesimple.invoicesimple E/AndroidRuntime\ufe55 FATAL EXCEPTION: main\n    java.lang.NoSuchMethodError: com.melnykov.fab.FloatingActionButton.animate\n            at com.melnykov.fab.FloatingActionButton.toggle(FloatingActionButton.java:269)\n            at com.melnykov.fab.FloatingActionButton.hide(FloatingActionButton.java:243)\n            at com.melnykov.fab.FloatingActionButton.hide(FloatingActionButton.java:235)\n```\n. Hi @makovkastar, thanks for the response!  Ok, gotcha.\n\nIn case anyone else stumbles upon this, I've used the hack described here: https://github.com/googlemaps/android-maps-utils/issues/60 in the interim because I'm too lazy to build my own JAR :)\n. I've had this problem too, the FAB obscures the last item in the list with no way to fix it\n. What I love about the fab is it doesn't take up space.  If we reserve it\nthat much white space then there is no point using it.\n\nHere's another solution:\n- the fab could be hidden by the user attempting (but failing) to scroll\n  the listview.\n\nOn Fri, Nov 21, 2014 at 8:18 AM, Melnykov Oleksandr <\nnotifications@github.com> wrote:\n\n> I think the best way to fix this issue is to add a bottom padding for your\n> content in the list. This is how it's currently done in the dialer app in\n> Lollipop:\n> \n> [image: device-2014-11-21-181718]\n> https://cloud.githubusercontent.com/assets/1076309/5145352/aed3ef0e-71aa-11e4-83ed-7af6f79a7d84.png\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/makovkastar/FloatingActionButton/issues/46#issuecomment-63993731\n> .\n. I'm just realising I don't totally get this solution.\n\nWhat does that screen/app look like if one more item is added to the list?\nOn 21 Nov 2014 08:30, \"Melnykov Oleksandr\" notifications@github.com wrote:\n\n> Let's stick for now with how this Google does. Will revise in future if\n> some approach will widespread.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/makovkastar/FloatingActionButton/issues/46#issuecomment-63995805\n> .\n. Cool, thanks for sharing that.\n\nI just looked at gmail, and noticed two things:\n1. It doesn't hide the fab, even when scrolling\n1. It looks like it uses the same padding option\n2. We've been discussing the edge case where the list items fill the screen\n   exactly, but the same issue happens to the last item in the list.\n\nI like the solution you observed!\nOn 21 Nov 2014 08:48, \"leo-k\" notifications@github.com wrote:\n\n> Perfect. Now this sounds like a viable solution. Thank you.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/makovkastar/FloatingActionButton/issues/46#issuecomment-63999759\n> .\n. Do either of you have any tips on how to implement something like this?\n\nI'm somewhat new to android... I tried adding bottom padding (and later margin) to my listview, but it didn't achieve the result shown above.\n. I hacked it to get it to compile, and run.  So far in my testing, it works except for the animation on the listview scroll.\n\n```\n11-03 03:21:08.872      998-998/com.getinvoicesimple.invoicesimple E/AndroidRuntime\ufe55 FATAL EXCEPTION: main\n    java.lang.NoSuchMethodError: com.melnykov.fab.FloatingActionButton.animate\n            at com.melnykov.fab.FloatingActionButton.toggle(FloatingActionButton.java:269)\n            at com.melnykov.fab.FloatingActionButton.hide(FloatingActionButton.java:243)\n            at com.melnykov.fab.FloatingActionButton.hide(FloatingActionButton.java:235)\n```\n. Hi @makovkastar, thanks for the response!  Ok, gotcha.\n\nIn case anyone else stumbles upon this, I've used the hack described here: https://github.com/googlemaps/android-maps-utils/issues/60 in the interim because I'm too lazy to build my own JAR :)\n. I've had this problem too, the FAB obscures the last item in the list with no way to fix it\n. What I love about the fab is it doesn't take up space.  If we reserve it\nthat much white space then there is no point using it.\n\nHere's another solution:\n- the fab could be hidden by the user attempting (but failing) to scroll\n  the listview.\n\nOn Fri, Nov 21, 2014 at 8:18 AM, Melnykov Oleksandr <\nnotifications@github.com> wrote:\n\n> I think the best way to fix this issue is to add a bottom padding for your\n> content in the list. This is how it's currently done in the dialer app in\n> Lollipop:\n> \n> [image: device-2014-11-21-181718]\n> https://cloud.githubusercontent.com/assets/1076309/5145352/aed3ef0e-71aa-11e4-83ed-7af6f79a7d84.png\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/makovkastar/FloatingActionButton/issues/46#issuecomment-63993731\n> .\n. I'm just realising I don't totally get this solution.\n\nWhat does that screen/app look like if one more item is added to the list?\nOn 21 Nov 2014 08:30, \"Melnykov Oleksandr\" notifications@github.com wrote:\n\n> Let's stick for now with how this Google does. Will revise in future if\n> some approach will widespread.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/makovkastar/FloatingActionButton/issues/46#issuecomment-63995805\n> .\n. Cool, thanks for sharing that.\n\nI just looked at gmail, and noticed two things:\n1. It doesn't hide the fab, even when scrolling\n1. It looks like it uses the same padding option\n2. We've been discussing the edge case where the list items fill the screen\n   exactly, but the same issue happens to the last item in the list.\n\nI like the solution you observed!\nOn 21 Nov 2014 08:48, \"leo-k\" notifications@github.com wrote:\n\n> Perfect. Now this sounds like a viable solution. Thank you.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/makovkastar/FloatingActionButton/issues/46#issuecomment-63999759\n> .\n. Do either of you have any tips on how to implement something like this?\n\nI'm somewhat new to android... I tried adding bottom padding (and later margin) to my listview, but it didn't achieve the result shown above.\n. ",
    "leo-k": "In Google apps that currently use FAB (not too many yet) I haven't found a situation where the list fits within one screen. I'd be interested to see how Google deals with this situation. Of course it's possible to implement something like you describe with show()/hide(), I just thought that in an implementation of FAB that already takes care of getting FAB out of the way in the general case, that it should also handle this corner case...\n. Perfect. Now this sounds like a viable solution. Thank you.\n. In the above example it looks to me like they are using a listview footer (i.e. View full call history)... and probably adding a bottom padding to the footer layout element the size of the FAB...\n. In Google apps that currently use FAB (not too many yet) I haven't found a situation where the list fits within one screen. I'd be interested to see how Google deals with this situation. Of course it's possible to implement something like you describe with show()/hide(), I just thought that in an implementation of FAB that already takes care of getting FAB out of the way in the general case, that it should also handle this corner case...\n. Perfect. Now this sounds like a viable solution. Thank you.\n. In the above example it looks to me like they are using a listview footer (i.e. View full call history)... and probably adding a bottom padding to the footer layout element the size of the FAB...\n. ",
    "johnsintal": "I had an issue where the list changes and the user cannot scroll up to make the FAB reappear. It'd be nice to have the FAB remain static.\n. I had an issue where the list changes and the user cannot scroll up to make the FAB reappear. It'd be nice to have the FAB remain static.\n. ",
    "adrianblp": "I'm having the same problem, I've stacked two FABs on top of eachother and when I scroll the upper FAB scrolls down into the lower, but the lower doesn't move at all. Any way to fix this would be awesome\n\n@nwalters512 Google uses two FABs in a lot of their views for Maps\nhttp://static.androidnext.de/2014/11/google-maps-9-1.png\n. I'm having the same problem, I've stacked two FABs on top of eachother and when I scroll the upper FAB scrolls down into the lower, but the lower doesn't move at all. Any way to fix this would be awesome\n\n@nwalters512 Google uses two FABs in a lot of their views for Maps\nhttp://static.androidnext.de/2014/11/google-maps-9-1.png\n. ",
    "vyscond": "Sorry for the necrobump but i cant find the **FabOnScrollListener** as you described.\n. Better late than never! Thanks @GillesC \n. Sorry for the necrobump but i cant find the **FabOnScrollListener** as you described.\n. Better late than never! Thanks @GillesC \n. ",
    "GillesC": "@vyscond In the new version you have to use new ScrollDirectionListener() instead of FabOnScrollListener()\n. @vyscond In the new version you have to use new ScrollDirectionListener() instead of FabOnScrollListener()\n. ",
    "rajasharan": "nevermind - I realized there are lot of L specific features being used. Will work in API 21+\n. nevermind - I realized there are lot of L specific features being used. Will work in API 21+\n. ",
    "hamen": "+1\n. +1\n. ",
    "yarian": "Thanks! Cheers.\n. Thanks! Cheers.\n. ",
    "yusufsaber": "I was actually hoping the Android tools team would put this in the R.drawable directory with the other standard icons, or even on their website somewhere...ridiculous!\n\nMaybe just throw them into the drawables folder in the library, not sure.\n\nEither way, great library, thanks!\n. Awesome! Thanks, I was hoping a link like the one you posted existed!\n. I was actually hoping the Android tools team would put this in the R.drawable directory with the other standard icons, or even on their website somewhere...ridiculous!\n\nMaybe just throw them into the drawables folder in the library, not sure.\n\nEither way, great library, thanks!\n. Awesome! Thanks, I was hoping a link like the one you posted existed!\n. ",
    "MrBrightside29": "Hey @makovkastar! Thanks for your fast reply. I've just found a workaround, by simply extending FloatingActionButton.FabOnScrollListener and checking onScrollUp method if the adapter is empty to show the FAB.\n\n```\nfab.attachToListView(listView, new FloatingActionButton.FabOnScrollListener() {\n            @Override\n            public void onScrollDown() {\n                super.onScrollDown();\n                fab.show();\n            }\n\n            @Override\n            public void onScrollUp() {\n                super.onScrollUp();\n                if (mArrayAdapter.isEmpty())\n                    fab.show();\n                else\n                    fab.hide();\n            }\n        });\n```\n\nI've forgot to say that I'm using this library along with  Nhaarman's ListViewAnimations library https://github.com/nhaarman/ListViewAnimations\n. It seems that this issue is not resolved for Android 4.0, api level 15.\n. +1\n. +1\n. Hey @makovkastar! Thanks for your fast reply. I've just found a workaround, by simply extending FloatingActionButton.FabOnScrollListener and checking onScrollUp method if the adapter is empty to show the FAB.\n\n```\nfab.attachToListView(listView, new FloatingActionButton.FabOnScrollListener() {\n            @Override\n            public void onScrollDown() {\n                super.onScrollDown();\n                fab.show();\n            }\n\n            @Override\n            public void onScrollUp() {\n                super.onScrollUp();\n                if (mArrayAdapter.isEmpty())\n                    fab.show();\n                else\n                    fab.hide();\n            }\n        });\n```\n\nI've forgot to say that I'm using this library along with  Nhaarman's ListViewAnimations library https://github.com/nhaarman/ListViewAnimations\n. It seems that this issue is not resolved for Android 4.0, api level 15.\n. +1\n. +1\n. ",
    "acappelli": "http://tools.android.com/download/studio/canary/latest\nAndroid studio in RC2, I think in the next week google should release the final version.\nWhat do you tink?\n. http://tools.android.com/download/studio/canary/latest\nAndroid studio in RC2, I think in the next week google should release the final version.\nWhat do you tink?\n. ",
    "Laur3nt1u": "here is my quick fix \n\nmodify in FloatingActionButton class\n\n```\n @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n        int size = getDimension(\n            mType == TYPE_NORMAL ? R.dimen.fab_size_normal : R.dimen.fab_size_mini);\n        if (mShadow && !hasLollipopApi()) {\n            int shadowSize = getDimension(R.dimen.fab_shadow_size);\n            size += shadowSize * 2;\n            setMargins();\n        }\n        setMeasuredDimension(size, size);\n    }\n    private boolean marginSet=false;\n    public void setMargins () {\n        if(!marginSet){\n            ViewGroup.MarginLayoutParams layoutParams = (ViewGroup.MarginLayoutParams) getLayoutParams();\n            if (layoutParams instanceof ViewGroup.MarginLayoutParams) {\n               layoutParams.setMargins(\n                       ((ViewGroup.MarginLayoutParams) layoutParams).leftMargin-getDimension(mType == TYPE_NORMAL ? R.dimen.fab_shadow_size : R.dimen.fab_mini_shadow_size)\n                       ,((ViewGroup.MarginLayoutParams) layoutParams).topMargin-getDimension(mType == TYPE_NORMAL ? R.dimen.fab_shadow_size : R.dimen.fab_mini_shadow_size)\n                       ,((ViewGroup.MarginLayoutParams) layoutParams).rightMargin-getDimension(mType == TYPE_NORMAL ? R.dimen.fab_shadow_size : R.dimen.fab_mini_shadow_size)\n                       ,((ViewGroup.MarginLayoutParams) layoutParams).bottomMargin-getDimension(mType == TYPE_NORMAL ? R.dimen.fab_shadow_size : R.dimen.fab_mini_shadow_size));\n               requestLayout();\n              marginSet=true;\n            }\n        }\n    }\n```\n. here is my quick fix \n\nmodify in FloatingActionButton class\n\n```\n @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n        int size = getDimension(\n            mType == TYPE_NORMAL ? R.dimen.fab_size_normal : R.dimen.fab_size_mini);\n        if (mShadow && !hasLollipopApi()) {\n            int shadowSize = getDimension(R.dimen.fab_shadow_size);\n            size += shadowSize * 2;\n            setMargins();\n        }\n        setMeasuredDimension(size, size);\n    }\n    private boolean marginSet=false;\n    public void setMargins () {\n        if(!marginSet){\n            ViewGroup.MarginLayoutParams layoutParams = (ViewGroup.MarginLayoutParams) getLayoutParams();\n            if (layoutParams instanceof ViewGroup.MarginLayoutParams) {\n               layoutParams.setMargins(\n                       ((ViewGroup.MarginLayoutParams) layoutParams).leftMargin-getDimension(mType == TYPE_NORMAL ? R.dimen.fab_shadow_size : R.dimen.fab_mini_shadow_size)\n                       ,((ViewGroup.MarginLayoutParams) layoutParams).topMargin-getDimension(mType == TYPE_NORMAL ? R.dimen.fab_shadow_size : R.dimen.fab_mini_shadow_size)\n                       ,((ViewGroup.MarginLayoutParams) layoutParams).rightMargin-getDimension(mType == TYPE_NORMAL ? R.dimen.fab_shadow_size : R.dimen.fab_mini_shadow_size)\n                       ,((ViewGroup.MarginLayoutParams) layoutParams).bottomMargin-getDimension(mType == TYPE_NORMAL ? R.dimen.fab_shadow_size : R.dimen.fab_mini_shadow_size));\n               requestLayout();\n              marginSet=true;\n            }\n        }\n    }\n```\n. ",
    "jrgonzalezg": "This is not the version of the gradle plugin that should be used with Android Studio 1.0RC... It is already at 1.0.0-rc4 ;). But i have updated my pull request to fix the conflicts due to this merge :)\n. For using with snackbar, the process would be to use setMovementY(-snackbarHeight) when the snackbar is showed and then setMovementY(0) when the snackbar is dismissed.\n. I am closing this pull request since it has been ignored and the author has no intention to fix this issue as stated in https://github.com/makovkastar/FloatingActionButton/issues/33 and https://github.com/makovkastar/FloatingActionButton/issues/90 I recommend using instead https://github.com/nispok/snackbar/ for displaying the snackbars and the more flexible https://github.com/futuresimple/android-floating-action-button/ for the action button. You will have to separately implement the quick return pattern if you use it. But you will avoid the fact that the current internal implementation of this FAB library causes conflicts with moving the FAB with any other criteria.\n. That does not work well because this library also changes the translationY value for things like appearing and disappearing when attached to AbsListView, RecyclerView or ScrollView. This causes animation artifacts since the external and internal changes to translationY conflict.\n. translationYBy() is just a shortcut method that is also applied to the translationY property in the end. The documentation at http://developer.android.com/reference/android/view/ViewPropertyAnimator.html states \"This method will cause the View's translationY property to be animated by the specified value. Animations already running on the property will be canceled.\". So it certainly can cause conflicts with the FAB animation.\n\nI tested this plus several other approaches and i always got problems on some api level or another and the only thing that \"somehow worked\" was to modify this library as i did on #76 . I can not give more details on the issues i got using translationYBy() since it has been a while and i have since switched to https://github.com/futuresimple/android-floating-action-button/ and https://github.com/nispok/snackbar/ where it is really easy to make the FAB and the snackbars have proper and matching animations.\n. Great!, i am glad you got it working. And sorry for reviving this so late, but it was not until a few days ago that i remembered my pending pull request here. Material libraries are still quite new and it has required quite a lot of work and contributing to other projects to get things working in our apps. I am happy that i helped with some of the changes in nispok's snackbar that allowed the FAB integration and animations to work so smoothly with the futuresimple FABs :)\n. If i remember correctly it only supports swiping it horizontally. I personally don't use this feature, but i think it could be done by modifying https://github.com/nispok/snackbar/blob/master/lib/src/main/java/com/nispok/snackbar/listeners/SwipeDismissTouchListener.java and just change the X logic to the Y axis and viceversa. It may also require some logic to forbid dismissing the snackbar by going up instead of down. It would be good to check if the material design guidelines say something about which direction should be used to dismiss snackbars. If the recommendation is to swipe them down as you suggest you could even try to open an issue or a pull request in nispok project so it becomes the default.\n. This is not the version of the gradle plugin that should be used with Android Studio 1.0RC... It is already at 1.0.0-rc4 ;). But i have updated my pull request to fix the conflicts due to this merge :)\n. For using with snackbar, the process would be to use setMovementY(-snackbarHeight) when the snackbar is showed and then setMovementY(0) when the snackbar is dismissed.\n. I am closing this pull request since it has been ignored and the author has no intention to fix this issue as stated in https://github.com/makovkastar/FloatingActionButton/issues/33 and https://github.com/makovkastar/FloatingActionButton/issues/90 I recommend using instead https://github.com/nispok/snackbar/ for displaying the snackbars and the more flexible https://github.com/futuresimple/android-floating-action-button/ for the action button. You will have to separately implement the quick return pattern if you use it. But you will avoid the fact that the current internal implementation of this FAB library causes conflicts with moving the FAB with any other criteria.\n. That does not work well because this library also changes the translationY value for things like appearing and disappearing when attached to AbsListView, RecyclerView or ScrollView. This causes animation artifacts since the external and internal changes to translationY conflict.\n. translationYBy() is just a shortcut method that is also applied to the translationY property in the end. The documentation at http://developer.android.com/reference/android/view/ViewPropertyAnimator.html states \"This method will cause the View's translationY property to be animated by the specified value. Animations already running on the property will be canceled.\". So it certainly can cause conflicts with the FAB animation.\n\nI tested this plus several other approaches and i always got problems on some api level or another and the only thing that \"somehow worked\" was to modify this library as i did on #76 . I can not give more details on the issues i got using translationYBy() since it has been a while and i have since switched to https://github.com/futuresimple/android-floating-action-button/ and https://github.com/nispok/snackbar/ where it is really easy to make the FAB and the snackbars have proper and matching animations.\n. Great!, i am glad you got it working. And sorry for reviving this so late, but it was not until a few days ago that i remembered my pending pull request here. Material libraries are still quite new and it has required quite a lot of work and contributing to other projects to get things working in our apps. I am happy that i helped with some of the changes in nispok's snackbar that allowed the FAB integration and animations to work so smoothly with the futuresimple FABs :)\n. If i remember correctly it only supports swiping it horizontally. I personally don't use this feature, but i think it could be done by modifying https://github.com/nispok/snackbar/blob/master/lib/src/main/java/com/nispok/snackbar/listeners/SwipeDismissTouchListener.java and just change the X logic to the Y axis and viceversa. It may also require some logic to forbid dismissing the snackbar by going up instead of down. It would be good to check if the material design guidelines say something about which direction should be used to dismiss snackbars. If the recommendation is to swipe them down as you suggest you could even try to open an issue or a pull request in nispok project so it becomes the default.\n. ",
    "eiabea": "quick fix is not to call attachToListView on Gingerbread, but maybe you implement the check in the next release\n. quick fix is not to call attachToListView on Gingerbread, but maybe you implement the check in the next release\n. ",
    "AlexanderKrutov": "That's because animation is not supported on 2.3. Add following checks in FloatingActionButton.java:\n\n```\nif (animate) \n{\n    if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.HONEYCOMB_MR1)\n    {\n        animate().setInterpolator(mInterpolator)\n            .setDuration(TRANSLATE_DURATION_MILLIS)\n            .translationY(translationY);\n    }\n} \nelse \n{\n    if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.HONEYCOMB)\n    {\n        setTranslationY(translationY);\n    }\n}\n```\n. That's because animation is not supported on 2.3. Add following checks in FloatingActionButton.java:\n\n```\nif (animate) \n{\n    if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.HONEYCOMB_MR1)\n    {\n        animate().setInterpolator(mInterpolator)\n            .setDuration(TRANSLATE_DURATION_MILLIS)\n            .translationY(translationY);\n    }\n} \nelse \n{\n    if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.HONEYCOMB)\n    {\n        setTranslationY(translationY);\n    }\n}\n```\n. ",
    "stleusc": "minSDK of 9 would be great.... Of course 7 would match googles support-lib...\n. minSDK of 9 would be great.... Of course 7 would match googles support-lib...\n. ",
    "RichardLindhout": "Thanks for helping me out, I didn't think of not attaching the FAB will try it! \n. That looks indeed very helpfull, thanks!\n. Thanks for helping me out, I didn't think of not attaching the FAB will try it! \n. That looks indeed very helpfull, thanks!\n. ",
    "MeanderingCode": "Just to confirm: the recent updates of the `ScrollDirectionListener()` does not provide for \"skipping\" the action (i.e. not calling `show()` if some condition is true)\n\nIf true, this means I cannot `attachToListView()` and must manually call `hide()` and `show()` in scroll listeners on my lists, where i can check conditions before doing so.\n\nDo you think this will adversly effect performance?\n\nEDIT: Note that I do not currenly implement a scroll listener (outside of your library and another) for the AbsListView in question, so I will have to do so and calculate direction.\n\nA better method might be to provide a method to temporarily disable responding to scroll, e.g. `pause()`\n. Just to confirm: the recent updates of the `ScrollDirectionListener()` does not provide for \"skipping\" the action (i.e. not calling `show()` if some condition is true)\n\nIf true, this means I cannot `attachToListView()` and must manually call `hide()` and `show()` in scroll listeners on my lists, where i can check conditions before doing so.\n\nDo you think this will adversly effect performance?\n\nEDIT: Note that I do not currenly implement a scroll listener (outside of your library and another) for the AbsListView in question, so I will have to do so and calculate direction.\n\nA better method might be to provide a method to temporarily disable responding to scroll, e.g. `pause()`\n. ",
    "TomasValenta": "I have changed in build.gradle from com.melnykov:floatingactionbutton:+ to com.melnykov:floatingactionbutton:1.0.8 and now its working fine, sorry dude ;) \n. @Wolftein Thank you, it's very good trick :thumbsup:\n. I have changed in build.gradle from com.melnykov:floatingactionbutton:+ to com.melnykov:floatingactionbutton:1.0.8 and now its working fine, sorry dude ;) \n. @Wolftein Thank you, it's very good trick :thumbsup:\n. ",
    "tsuharesu": "Yes, that's the problem. The shadow don't go outside the Relative Layout so it gets cut... Any advice on a better way to do this?\n. It worked putting everything inside a FrameLayout\n. Yes, that's the problem. The shadow don't go outside the Relative Layout so it gets cut... Any advice on a better way to do this?\n. It worked putting everything inside a FrameLayout\n. ",
    "antoxa2584x": "Here is it \n\n < FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    xmlns:card=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:fab=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".MainActivity\"\n    android:id=\"@+id/main_frame\">\n\n```\n<com.melnykov.fab.ObservableScrollView\n    android:id=\"@+id/mainLayout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"#eeeeee\"\n    android:fillViewport=\"false\">\n\n    <LinearLayout\n        android:id=\"@+id/mainlayout1\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:background=\"#eeeeee\"\n        android:focusableInTouchMode=\"false\"\n        android:orientation=\"vertical\"\n        android:visibility=\"gone\">\n\n        <RelativeLayout\n            android:id=\"@+id/RelativeLayout_first\"\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"fill_parent\"\n            android:layout_marginRight=\"8dp\"\n            android:layout_marginTop=\"8dp\">\n\n            <TextView\n                android:id=\"@+id/weekinf\"\n                style=\"@style/card.native.header_simple_title\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_centerHorizontal=\"true\"\n                android:layout_centerVertical=\"true\"\n                android:layout_gravity=\"center_horizontal\"\n                android:clickable=\"true\"\n                android:text=\"@string/first_week\"\n                android:layout_marginLeft=\"8dp\"\n                android:layout_marginRight=\"8dp\"\n                android:textAppearance=\"?android:attr/textAppearanceLarge\"\n                android:textColor=\"#42000000\" />\n\n            <RelativeLayout\n                android:id=\"@+id/relativeLayout2\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_alignParentLeft=\"true\"\n                android:layout_alignParentStart=\"true\"\n                android:layout_centerVertical=\"true\">\n\n                <ImageView\n                    android:id=\"@+id/refresh\"\n                    android:layout_width=\"32dp\"\n                    android:layout_height=\"32dp\"\n                    android:layout_alignParentEnd=\"false\"\n                    android:layout_alignParentLeft=\"false\"\n                    android:layout_alignParentRight=\"false\"\n                    android:layout_alignParentStart=\"false\"\n                    android:layout_centerVertical=\"true\"\n                    android:layout_marginLeft=\"8dp\"\n                    android:background=\"@drawable/ic_action_navigation_refresh_no_actionbar\"\n                    android:visibility=\"visible\" />\n\n                <ProgressBar\n                    android:id=\"@+id/progressBar\"\n                    android:layout_width=\"32dp\"\n                    android:layout_height=\"32dp\"\n                    android:layout_marginLeft=\"8dp\"\n                    android:visibility=\"gone\" />\n            </RelativeLayout>\n\n            <TableRow\n                android:id=\"@+id/tableRow2\"\n                android:layout_width=\"fill_parent\"\n                android:layout_height=\"1px\"\n                android:layout_centerVertical=\"true\"\n                android:layout_marginLeft=\"8dp\"\n                android:layout_toEndOf=\"@+id/relativeLayout2\"\n                android:layout_toLeftOf=\"@+id/weekinf\"\n                android:layout_toRightOf=\"@+id/relativeLayout2\"\n                android:background=\"#42000000\"/>\n\n            <TableRow\n                android:id=\"@+id/tableRow\"\n                android:layout_width=\"fill_parent\"\n                android:layout_height=\"1px\"\n                android:layout_centerVertical=\"true\"\n                android:layout_toRightOf=\"@+id/weekinf\"\n                android:background=\"#42000000\" />\n\n        </RelativeLayout>\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo0\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\" />\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo1\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\" />\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo2\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\"/>\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo3\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\"/>\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo4\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\"\n            />\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo5\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\"/>\n\n        <RelativeLayout\n            android:id=\"@+id/RelativeLayout_second\"\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"fill_parent\"\n            android:layout_marginTop=\"10dp\"\n            android:layout_marginBottom=\"8dp\"\n            android:layout_marginRight=\"8dp\"\n            android:layout_marginLeft=\"8dp\">\n\n            <TableRow\n                android:id=\"@+id/tableRow3\"\n                android:layout_width=\"fill_parent\"\n                android:layout_height=\"1px\"\n                android:layout_alignParentLeft=\"true\"\n                android:layout_alignParentStart=\"true\"\n                android:layout_centerVertical=\"true\"\n                android:layout_toLeftOf=\"@+id/weekinf2\"\n                android:background=\"#42000000\" />\n\n            <TableRow\n                android:id=\"@+id/tableRow4\"\n                android:layout_width=\"fill_parent\"\n                android:layout_height=\"1px\"\n                android:layout_centerVertical=\"true\"\n                android:layout_toRightOf=\"@+id/weekinf2\"\n                android:background=\"#42000000\" />\n\n            <TextView\n                android:id=\"@+id/weekinf2\"\n                style=\"@style/card.native.header_simple_title\"\n                android:layout_marginLeft=\"8dp\"\n                android:layout_marginRight=\"8dp\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_centerHorizontal=\"true\"\n                android:layout_centerVertical=\"true\"\n                android:layout_gravity=\"center_horizontal\"\n                android:clickable=\"true\"\n                android:text=\"@string/second_week\"\n                android:textAppearance=\"?android:attr/textAppearanceLarge\"\n                android:textColor=\"#42000000\" />\n        </RelativeLayout>\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo6\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\"/>\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo7\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"8dp\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\"/>\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo8\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\"/>\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo9\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\"/>\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo10\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\"/>\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo11\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\"/>\n\n        <RelativeLayout\n            android:id=\"@+id/blank_navbar\"\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"wrap_content\"\n            android:background=\"#eeeeee\"\n            android:visibility=\"visible\">\n\n            <TableRow\n                android:layout_width=\"fill_parent\"\n                android:layout_height=\"48dp\"></TableRow>\n        </RelativeLayout>\n    </LinearLayout>\n</com.melnykov.fab.ObservableScrollView>\n```\n\n</FrameLayout>\n. Here is what i expect ot see\n![image](https://cloud.githubusercontent.com/assets/8998205/5228849/b9818922-7720-11e4-9bdc-80c409ec807f.png)\n\nAnd this I get. Fab not hides or shows. It is just on the end.\n![image](https://cloud.githubusercontent.com/assets/8998205/5228868/ee29dcec-7720-11e4-82ee-4cd029fb19ba.png)\n![image](https://cloud.githubusercontent.com/assets/8998205/5228870/f3a456de-7720-11e4-8efd-8ed53f58b27b.png)\n. \u0422\u044b \u0432\u0435\u0434\u044c \u043f\u043e \u0440\u0443\u0441\u0441\u043a\u0438 \u0433\u043e\u0432\u043e\u0440\u0438\u0448\u044c?)\n. As I say before, it is NOT hide or shows. It is just stay there, in bottom of scroll view content(not display bottom) as standart view\n. \u042f \u0435\u0433\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044e \u043f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u0430\u043a\u0442\u0438\u0432\u0438\u0442\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u0442 \u0432\u0441\u0435 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0438.\n. ```\n    private void addFloatingButton() {\n    float d = activity.getResources().getDisplayMetrics().density;\n\n    FrameLayout frameLayout = (FrameLayout)activity.findViewById(R.id.main_frame);\n\n    FloatingActionButton floatingActionButton = new FloatingActionButton(activity.getApplicationContext());\n\n    FrameLayout.LayoutParams layoutParams = new FrameLayout.LayoutParams(FrameLayout.LayoutParams.WRAP_CONTENT,FrameLayout.LayoutParams.WRAP_CONTENT);\n    layoutParams.setMargins((int)(16 * d),(int)(16 * d),(int)(16 * d),(int)(16 * d));\n    layoutParams.setLayoutDirection(Gravity.BOTTOM | Gravity.RIGHT);\n    layoutParams.gravity = (Gravity.BOTTOM | Gravity.RIGHT);\n\n    floatingActionButton.setColorNormal(Color.parseColor(\"#03A9F4\"));\n    floatingActionButton.setColorPressed(Color.parseColor(\"#1E88E5\"));\n    floatingActionButton.setColorRipple(Color.parseColor(\"#E3F2FD\"));\n    floatingActionButton.setImageDrawable(activity.getResources().getDrawable(R.drawable.ic_refresh));\n\n    frameLayout.addView(floatingActionButton,layoutParams);\n\n    com.melnykov.fab.ObservableScrollView os = (com.melnykov.fab.ObservableScrollView)activity.findViewById(R.id.mainLayout);\n    floatingActionButton.attachToScrollView(os);\n}\n```\n. \u0414\u0435\u0440\u0436\u0438 \u043f\u0440\u043e\u0433\u0443\nhttps://dl.dropboxusercontent.com/u/27865855/folder/app-release.apk\n. \u0432\u0432\u0435\u0434\u0438 \u0433\u0440\u0443\u043f\u043f\u0443, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u043b\u0434-11\n. \u0417\u0430\u0440\u0430\u0437\u0430, \u0441\u0435\u0440\u0432\u0430\u043a \u043b\u0435\u0436\u0438\u0442(\n\n\u041e\u043e\u0443\u0443, \u043f\u0440\u043e\u0435\u043a\u0442 \u043a\u0438\u043d\u0443\u0442\u044c \u043d\u0435 \u0432\u044b\u0439\u0434\u0435\u0442.. \u0427\u0442\u043e\u0436, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u044e \u0441\u0430\u043c \u043f\u043e \u044d\u043a\u0441\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u0438\u0442\u0440\u043e\u0432\u0442\u044c\n. \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439 \u0435\u0449\u0435 \u0440\u0430\u0437. \u0421\u0435\u0440\u0432\u0430\u043a \u0432\u0441\u0442\u0430\u043b.\n\n\u0421\u0434\u0435\u043b\u0430\u043b \u043b\u0435\u0439\u0430\u0443\u0442 \u0442\u0430\u043a\u0438\u043c \u0436\u0435 \u043a\u0430\u043a \u0432 \u0442\u0432\u043e\u0435\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435, \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0442\u043e\u0442 \u0436\u0435\n. \u041d\u0435\u0430. \u0414\u0443\u043c\u0430\u044e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435 FadingActionBar.\n\u0416\u0430\u043a\u043e \u043a\u043e\u043d\u0435\u0447\u043d\u043e(\n. Here is it \n\n < FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    xmlns:card=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:fab=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".MainActivity\"\n    android:id=\"@+id/main_frame\">\n\n```\n<com.melnykov.fab.ObservableScrollView\n    android:id=\"@+id/mainLayout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"#eeeeee\"\n    android:fillViewport=\"false\">\n\n    <LinearLayout\n        android:id=\"@+id/mainlayout1\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:background=\"#eeeeee\"\n        android:focusableInTouchMode=\"false\"\n        android:orientation=\"vertical\"\n        android:visibility=\"gone\">\n\n        <RelativeLayout\n            android:id=\"@+id/RelativeLayout_first\"\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"fill_parent\"\n            android:layout_marginRight=\"8dp\"\n            android:layout_marginTop=\"8dp\">\n\n            <TextView\n                android:id=\"@+id/weekinf\"\n                style=\"@style/card.native.header_simple_title\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_centerHorizontal=\"true\"\n                android:layout_centerVertical=\"true\"\n                android:layout_gravity=\"center_horizontal\"\n                android:clickable=\"true\"\n                android:text=\"@string/first_week\"\n                android:layout_marginLeft=\"8dp\"\n                android:layout_marginRight=\"8dp\"\n                android:textAppearance=\"?android:attr/textAppearanceLarge\"\n                android:textColor=\"#42000000\" />\n\n            <RelativeLayout\n                android:id=\"@+id/relativeLayout2\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_alignParentLeft=\"true\"\n                android:layout_alignParentStart=\"true\"\n                android:layout_centerVertical=\"true\">\n\n                <ImageView\n                    android:id=\"@+id/refresh\"\n                    android:layout_width=\"32dp\"\n                    android:layout_height=\"32dp\"\n                    android:layout_alignParentEnd=\"false\"\n                    android:layout_alignParentLeft=\"false\"\n                    android:layout_alignParentRight=\"false\"\n                    android:layout_alignParentStart=\"false\"\n                    android:layout_centerVertical=\"true\"\n                    android:layout_marginLeft=\"8dp\"\n                    android:background=\"@drawable/ic_action_navigation_refresh_no_actionbar\"\n                    android:visibility=\"visible\" />\n\n                <ProgressBar\n                    android:id=\"@+id/progressBar\"\n                    android:layout_width=\"32dp\"\n                    android:layout_height=\"32dp\"\n                    android:layout_marginLeft=\"8dp\"\n                    android:visibility=\"gone\" />\n            </RelativeLayout>\n\n            <TableRow\n                android:id=\"@+id/tableRow2\"\n                android:layout_width=\"fill_parent\"\n                android:layout_height=\"1px\"\n                android:layout_centerVertical=\"true\"\n                android:layout_marginLeft=\"8dp\"\n                android:layout_toEndOf=\"@+id/relativeLayout2\"\n                android:layout_toLeftOf=\"@+id/weekinf\"\n                android:layout_toRightOf=\"@+id/relativeLayout2\"\n                android:background=\"#42000000\"/>\n\n            <TableRow\n                android:id=\"@+id/tableRow\"\n                android:layout_width=\"fill_parent\"\n                android:layout_height=\"1px\"\n                android:layout_centerVertical=\"true\"\n                android:layout_toRightOf=\"@+id/weekinf\"\n                android:background=\"#42000000\" />\n\n        </RelativeLayout>\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo0\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\" />\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo1\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\" />\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo2\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\"/>\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo3\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\"/>\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo4\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\"\n            />\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo5\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\"/>\n\n        <RelativeLayout\n            android:id=\"@+id/RelativeLayout_second\"\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"fill_parent\"\n            android:layout_marginTop=\"10dp\"\n            android:layout_marginBottom=\"8dp\"\n            android:layout_marginRight=\"8dp\"\n            android:layout_marginLeft=\"8dp\">\n\n            <TableRow\n                android:id=\"@+id/tableRow3\"\n                android:layout_width=\"fill_parent\"\n                android:layout_height=\"1px\"\n                android:layout_alignParentLeft=\"true\"\n                android:layout_alignParentStart=\"true\"\n                android:layout_centerVertical=\"true\"\n                android:layout_toLeftOf=\"@+id/weekinf2\"\n                android:background=\"#42000000\" />\n\n            <TableRow\n                android:id=\"@+id/tableRow4\"\n                android:layout_width=\"fill_parent\"\n                android:layout_height=\"1px\"\n                android:layout_centerVertical=\"true\"\n                android:layout_toRightOf=\"@+id/weekinf2\"\n                android:background=\"#42000000\" />\n\n            <TextView\n                android:id=\"@+id/weekinf2\"\n                style=\"@style/card.native.header_simple_title\"\n                android:layout_marginLeft=\"8dp\"\n                android:layout_marginRight=\"8dp\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_centerHorizontal=\"true\"\n                android:layout_centerVertical=\"true\"\n                android:layout_gravity=\"center_horizontal\"\n                android:clickable=\"true\"\n                android:text=\"@string/second_week\"\n                android:textAppearance=\"?android:attr/textAppearanceLarge\"\n                android:textColor=\"#42000000\" />\n        </RelativeLayout>\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo6\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\"/>\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo7\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"8dp\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\"/>\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo8\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\"/>\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo9\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\"/>\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo10\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\"/>\n\n        <it.gmariotti.cardslib.library.view.CardViewNative\n            android:id=\"@+id/carddemo11\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:visibility=\"visible\"\n            style=\"@style/card_external\"\n\n            card:card_layout_resourceID=\"@layout/native_cardwithlist_layout\"\n            card:card_header_layout_resourceID=\"@layout/native_base_header_layout\"/>\n\n        <RelativeLayout\n            android:id=\"@+id/blank_navbar\"\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"wrap_content\"\n            android:background=\"#eeeeee\"\n            android:visibility=\"visible\">\n\n            <TableRow\n                android:layout_width=\"fill_parent\"\n                android:layout_height=\"48dp\"></TableRow>\n        </RelativeLayout>\n    </LinearLayout>\n</com.melnykov.fab.ObservableScrollView>\n```\n\n</FrameLayout>\n. Here is what i expect ot see\n![image](https://cloud.githubusercontent.com/assets/8998205/5228849/b9818922-7720-11e4-9bdc-80c409ec807f.png)\n\nAnd this I get. Fab not hides or shows. It is just on the end.\n![image](https://cloud.githubusercontent.com/assets/8998205/5228868/ee29dcec-7720-11e4-82ee-4cd029fb19ba.png)\n![image](https://cloud.githubusercontent.com/assets/8998205/5228870/f3a456de-7720-11e4-8efd-8ed53f58b27b.png)\n. \u0422\u044b \u0432\u0435\u0434\u044c \u043f\u043e \u0440\u0443\u0441\u0441\u043a\u0438 \u0433\u043e\u0432\u043e\u0440\u0438\u0448\u044c?)\n. As I say before, it is NOT hide or shows. It is just stay there, in bottom of scroll view content(not display bottom) as standart view\n. \u042f \u0435\u0433\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044e \u043f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u0430\u043a\u0442\u0438\u0432\u0438\u0442\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u0442 \u0432\u0441\u0435 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0438.\n. ```\n    private void addFloatingButton() {\n    float d = activity.getResources().getDisplayMetrics().density;\n\n    FrameLayout frameLayout = (FrameLayout)activity.findViewById(R.id.main_frame);\n\n    FloatingActionButton floatingActionButton = new FloatingActionButton(activity.getApplicationContext());\n\n    FrameLayout.LayoutParams layoutParams = new FrameLayout.LayoutParams(FrameLayout.LayoutParams.WRAP_CONTENT,FrameLayout.LayoutParams.WRAP_CONTENT);\n    layoutParams.setMargins((int)(16 * d),(int)(16 * d),(int)(16 * d),(int)(16 * d));\n    layoutParams.setLayoutDirection(Gravity.BOTTOM | Gravity.RIGHT);\n    layoutParams.gravity = (Gravity.BOTTOM | Gravity.RIGHT);\n\n    floatingActionButton.setColorNormal(Color.parseColor(\"#03A9F4\"));\n    floatingActionButton.setColorPressed(Color.parseColor(\"#1E88E5\"));\n    floatingActionButton.setColorRipple(Color.parseColor(\"#E3F2FD\"));\n    floatingActionButton.setImageDrawable(activity.getResources().getDrawable(R.drawable.ic_refresh));\n\n    frameLayout.addView(floatingActionButton,layoutParams);\n\n    com.melnykov.fab.ObservableScrollView os = (com.melnykov.fab.ObservableScrollView)activity.findViewById(R.id.mainLayout);\n    floatingActionButton.attachToScrollView(os);\n}\n```\n. \u0414\u0435\u0440\u0436\u0438 \u043f\u0440\u043e\u0433\u0443\nhttps://dl.dropboxusercontent.com/u/27865855/folder/app-release.apk\n. \u0432\u0432\u0435\u0434\u0438 \u0433\u0440\u0443\u043f\u043f\u0443, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u043b\u0434-11\n. \u0417\u0430\u0440\u0430\u0437\u0430, \u0441\u0435\u0440\u0432\u0430\u043a \u043b\u0435\u0436\u0438\u0442(\n\n\u041e\u043e\u0443\u0443, \u043f\u0440\u043e\u0435\u043a\u0442 \u043a\u0438\u043d\u0443\u0442\u044c \u043d\u0435 \u0432\u044b\u0439\u0434\u0435\u0442.. \u0427\u0442\u043e\u0436, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u044e \u0441\u0430\u043c \u043f\u043e \u044d\u043a\u0441\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u0438\u0442\u0440\u043e\u0432\u0442\u044c\n. \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439 \u0435\u0449\u0435 \u0440\u0430\u0437. \u0421\u0435\u0440\u0432\u0430\u043a \u0432\u0441\u0442\u0430\u043b.\n\n\u0421\u0434\u0435\u043b\u0430\u043b \u043b\u0435\u0439\u0430\u0443\u0442 \u0442\u0430\u043a\u0438\u043c \u0436\u0435 \u043a\u0430\u043a \u0432 \u0442\u0432\u043e\u0435\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435, \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0442\u043e\u0442 \u0436\u0435\n. \u041d\u0435\u0430. \u0414\u0443\u043c\u0430\u044e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435 FadingActionBar.\n\u0416\u0430\u043a\u043e \u043a\u043e\u043d\u0435\u0447\u043d\u043e(\n. ",
    "Tywholland": "@makovkastar We would also like to use functionality like this to give us the ability to do extra things during onScroll. Can this get merged soon?\n. @makovkastar We would also like to use functionality like this to give us the ability to do extra things during onScroll. Can this get merged soon?\n. ",
    "Mygod": "+1\n. +1\n. Workaround: `app:fab_shadow=\"false\" android:stateListAnimator=\"@anim/button_elevation\"`.\n. +1\n. +1\n. +1\n. Workaround: `app:fab_shadow=\"false\" android:stateListAnimator=\"@anim/button_elevation\"`.\n. +1\n. ",
    "AndroidDeveloperLB": "@makovkastar Seems to work on GB.\nHowever, I think that since the animation is very simple and doesn't have any special abilities, you can use the normal TranslateAnimation instead of a whole library for it.\nSince you wish to call this when the view is becoming invisible, you already agree that it doesn't help using the new animation API (using the library) as this is actually the old one being used.\nDon't you agree?\nIt's not that much longer than what is already written...\n\nI think setting the visibility also makes it a bit better in terms of performance (it doesn't need to check which parts of it should be shown), but I'm not sure.\n. Have you also tried using TranslateAnimation instead ?\n. Well, for me the SO solution actually worked:\n\n```\n    final ViewPropertyAnimator viewPropertyAnimator=ViewPropertyAnimator.animate(this);\n    viewPropertyAnimator.setListener(new AnimatorListener()\n      {\n        @Override\n        public void onAnimationStart(final Animator animation)\n          {}\n\n        @Override\n        public void onAnimationRepeat(final Animator animation)\n          {}\n\n        @Override\n        public void onAnimationEnd(final Animator animation)\n          {\n          Toast.makeText(getContext(),\"AA\",Toast.LENGTH_SHORT).show();\n          clearAnimation();\n          setVisibility(View.GONE);\n          }\n\n        @Override\n        public void onAnimationCancel(final Animator animation)\n          {}\n      });\n    viewPropertyAnimator.setInterpolator(mInterpolator).setDuration(TRANSLATE_DURATION_MILLIS).translationY(translationY);\n```\n\nThis needs more work for handling GONE->VISIBLE switching.\n\nIn any case, I think avoiding the usage of the library is better. You use a very small part of it anyway...\n. But the official emulator shows better of how the devices work, no? I didn't see blinks.\nPlease reconsider.\n. Here's how I've succeeded using it all without the NOA library.\nI think something is missing here, to protect from extra animations. It has some weird issues on Kitkat.\n\n```\nprivate void toggle(final boolean visible,final boolean animate,final boolean force)\n  {\n  if(mVisible!=visible||force)\n    {\n    mVisible=visible;\n    final int height=getHeight();\n    if(height==0&&!force)\n      {\n      final ViewTreeObserver vto=getViewTreeObserver();\n      if(vto.isAlive())\n        {\n        vto.addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener()\n          {\n            @Override\n            public boolean onPreDraw()\n              {\n              final ViewTreeObserver currentVto=getViewTreeObserver();\n              if(currentVto.isAlive())\n                currentVto.removeOnPreDrawListener(this);\n              toggle(visible,animate,true);\n              return true;\n              }\n          });\n        return;\n        }\n      }\n    final int translationY=visible ? 0 : height+getMarginBottom();\n    if(animate)\n      setTranslationYUsingAnimation(translationY,true);\n    else setTranslationYUsingAnimation(translationY,false);\n    }\n  }\n\nprivate void setTranslationYUsingAnimation(final int translationY,final boolean animate)\n  {\n  clearAnimation();\n  setVisibility(View.VISIBLE);\n  final TranslateAnimation animation;\n  if(translationY!=0)\n    animation=new TranslateAnimation(//\n        Animation.RELATIVE_TO_SELF,0,// fromX\n        Animation.RELATIVE_TO_SELF,0,// toX\n        Animation.ABSOLUTE,0,// fromY\n        Animation.ABSOLUTE,translationY);// toY\n  else animation=new TranslateAnimation(//\n      Animation.RELATIVE_TO_SELF,0,// fromX\n      Animation.RELATIVE_TO_SELF,0,// toX\n      Animation.RELATIVE_TO_SELF,1f,// fromY\n      Animation.ABSOLUTE,0);// toY\n  animation.setDuration(animate ? TRANSLATE_DURATION_MILLIS : 0);\n  animation.setAnimationListener(new AnimationListener()\n    {\n      @Override\n      public void onAnimationStart(final Animation animation)\n        {}\n\n      @Override\n      public void onAnimationRepeat(final Animation animation)\n        {}\n\n      @Override\n      public void onAnimationEnd(final Animation animation)\n        {\n        clearAnimation();\n        if(translationY!=0)\n          setVisibility(View.GONE);\n        }\n    });\n  animation.setFillAfter(true);\n  startAnimation(animation);\n  }\n```\n. I also think that the size should include the shadow, to avoid confusion of why it gets truncated.\n. @makovkastar Seems to work on GB.\nHowever, I think that since the animation is very simple and doesn't have any special abilities, you can use the normal TranslateAnimation instead of a whole library for it.\nSince you wish to call this when the view is becoming invisible, you already agree that it doesn't help using the new animation API (using the library) as this is actually the old one being used.\nDon't you agree?\nIt's not that much longer than what is already written...\n\nI think setting the visibility also makes it a bit better in terms of performance (it doesn't need to check which parts of it should be shown), but I'm not sure.\n. Have you also tried using TranslateAnimation instead ?\n. Well, for me the SO solution actually worked:\n\n```\n    final ViewPropertyAnimator viewPropertyAnimator=ViewPropertyAnimator.animate(this);\n    viewPropertyAnimator.setListener(new AnimatorListener()\n      {\n        @Override\n        public void onAnimationStart(final Animator animation)\n          {}\n\n        @Override\n        public void onAnimationRepeat(final Animator animation)\n          {}\n\n        @Override\n        public void onAnimationEnd(final Animator animation)\n          {\n          Toast.makeText(getContext(),\"AA\",Toast.LENGTH_SHORT).show();\n          clearAnimation();\n          setVisibility(View.GONE);\n          }\n\n        @Override\n        public void onAnimationCancel(final Animator animation)\n          {}\n      });\n    viewPropertyAnimator.setInterpolator(mInterpolator).setDuration(TRANSLATE_DURATION_MILLIS).translationY(translationY);\n```\n\nThis needs more work for handling GONE->VISIBLE switching.\n\nIn any case, I think avoiding the usage of the library is better. You use a very small part of it anyway...\n. But the official emulator shows better of how the devices work, no? I didn't see blinks.\nPlease reconsider.\n. Here's how I've succeeded using it all without the NOA library.\nI think something is missing here, to protect from extra animations. It has some weird issues on Kitkat.\n\n```\nprivate void toggle(final boolean visible,final boolean animate,final boolean force)\n  {\n  if(mVisible!=visible||force)\n    {\n    mVisible=visible;\n    final int height=getHeight();\n    if(height==0&&!force)\n      {\n      final ViewTreeObserver vto=getViewTreeObserver();\n      if(vto.isAlive())\n        {\n        vto.addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener()\n          {\n            @Override\n            public boolean onPreDraw()\n              {\n              final ViewTreeObserver currentVto=getViewTreeObserver();\n              if(currentVto.isAlive())\n                currentVto.removeOnPreDrawListener(this);\n              toggle(visible,animate,true);\n              return true;\n              }\n          });\n        return;\n        }\n      }\n    final int translationY=visible ? 0 : height+getMarginBottom();\n    if(animate)\n      setTranslationYUsingAnimation(translationY,true);\n    else setTranslationYUsingAnimation(translationY,false);\n    }\n  }\n\nprivate void setTranslationYUsingAnimation(final int translationY,final boolean animate)\n  {\n  clearAnimation();\n  setVisibility(View.VISIBLE);\n  final TranslateAnimation animation;\n  if(translationY!=0)\n    animation=new TranslateAnimation(//\n        Animation.RELATIVE_TO_SELF,0,// fromX\n        Animation.RELATIVE_TO_SELF,0,// toX\n        Animation.ABSOLUTE,0,// fromY\n        Animation.ABSOLUTE,translationY);// toY\n  else animation=new TranslateAnimation(//\n      Animation.RELATIVE_TO_SELF,0,// fromX\n      Animation.RELATIVE_TO_SELF,0,// toX\n      Animation.RELATIVE_TO_SELF,1f,// fromY\n      Animation.ABSOLUTE,0);// toY\n  animation.setDuration(animate ? TRANSLATE_DURATION_MILLIS : 0);\n  animation.setAnimationListener(new AnimationListener()\n    {\n      @Override\n      public void onAnimationStart(final Animation animation)\n        {}\n\n      @Override\n      public void onAnimationRepeat(final Animation animation)\n        {}\n\n      @Override\n      public void onAnimationEnd(final Animation animation)\n        {\n        clearAnimation();\n        if(translationY!=0)\n          setVisibility(View.GONE);\n        }\n    });\n  animation.setFillAfter(true);\n  startAnimation(animation);\n  }\n```\n. I also think that the size should include the shadow, to avoid confusion of why it gets truncated.\n. ",
    "Va-doubles": "When I use RecyclerView,I have the same problem.I can't realize load more function.\n. When I use RecyclerView,I have the same problem.I can't realize load more function.\n. ",
    "dirkam": "+1\n. I ran into the same issue.\nIf FAB is attached to the RecyclerView then onScrolled doesn't even get called. What I ended up using is the following workaround:\n\nDo not attach FAB to the RecyclerView.\nUse the following code in onScrolled:\n\n```\n    mRecyclerView.setOnScrollListener(new RecyclerView.OnScrollListener() {\n\n        @Override\n        public void onScrolled(RecyclerView recyclerView, int dx, int dy) {\n            if (mLayoutManager.findFirstVisibleItemPosition() > lastKnownFirst) {\n                mFab.hide(true);\n            } else if (mLayoutManager.findFirstVisibleItemPosition() < lastKnownFirst) {\n                mFab.show(true);\n            }\n            lastKnownFirst = mLayoutManager.findFirstVisibleItemPosition();\n        }\n    });\n```\n. This seems to be similar to #99. Check that issue, I've provided a workaround that might be useful for you (require some work as you use ListView).\n. +1 (although the size it's stated in the guidelines, it would be useful for in some cases)\n. This seems to be the same as #99. Check that issue for a workaround that might be useful for you.\n. +1\n. I ran into the same issue.\nIf FAB is attached to the RecyclerView then onScrolled doesn't even get called. What I ended up using is the following workaround:\n\nDo not attach FAB to the RecyclerView.\nUse the following code in onScrolled:\n\n```\n    mRecyclerView.setOnScrollListener(new RecyclerView.OnScrollListener() {\n\n        @Override\n        public void onScrolled(RecyclerView recyclerView, int dx, int dy) {\n            if (mLayoutManager.findFirstVisibleItemPosition() > lastKnownFirst) {\n                mFab.hide(true);\n            } else if (mLayoutManager.findFirstVisibleItemPosition() < lastKnownFirst) {\n                mFab.show(true);\n            }\n            lastKnownFirst = mLayoutManager.findFirstVisibleItemPosition();\n        }\n    });\n```\n. This seems to be similar to #99. Check that issue, I've provided a workaround that might be useful for you (require some work as you use ListView).\n. +1 (although the size it's stated in the guidelines, it would be useful for in some cases)\n. This seems to be the same as #99. Check that issue for a workaround that might be useful for you.\n. ",
    "jonathanlmarsh": "+1\n. +1\n. ",
    "dgngulcan": "+1\n. +1\n. ",
    "rahuliyer95": "Hey, i implemented [this](https://github.com/rahuliyer95/FABMenu). Hope it helps!!\n. bump!! any issues please tell\n. @tudorsirbu you have to use 24dp drawables, at least that's what fixed the issue in my case\n. Hey, i implemented [this](https://github.com/rahuliyer95/FABMenu). Hope it helps!!\n. bump!! any issues please tell\n. @tudorsirbu you have to use 24dp drawables, at least that's what fixed the issue in my case\n. ",
    "brunoskonrad": "+1\n. +1\n. ",
    "marcoAppIT": "Hi,\nis it possible to have an example on how to create a menu like showed here https://github.com/futuresimple/android-floating-action-button/raw/master/screenshots/menu.gif ?\n\nThanks and Kind Regards\n. Hi,\nis it possible to have an example on how to create a menu like showed here https://github.com/futuresimple/android-floating-action-button/raw/master/screenshots/menu.gif ?\n\nThanks and Kind Regards\n. ",
    "orrc": "This question would be better suited to a question & answer site like UX Stack Exchange, since it doesn't relate to any specific code implementation of the FAB.\n\nThe [Material Design spec](http://www.google.com/design/spec/components/buttons.html#buttons-floating-action-button) addresses this:\n\n> If floating action button is placed at the base of a list, the content should have enough padding at the bottom so the button does not block content in last row.\n\nSee apps like Gmail, where there's always a \"Compose\" FAB, but if you scroll to the bottom of the list, there's enough padding such that the last mail isnt blocked.\n. It's probably worth noting that this change only works if the FAB's parent is a `FrameLayout`, which won't be the case for everybody.\n. This question would be better suited to a question & answer site like UX Stack Exchange, since it doesn't relate to any specific code implementation of the FAB.\n\nThe [Material Design spec](http://www.google.com/design/spec/components/buttons.html#buttons-floating-action-button) addresses this:\n\n> If floating action button is placed at the base of a list, the content should have enough padding at the bottom so the button does not block content in last row.\n\nSee apps like Gmail, where there's always a \"Compose\" FAB, but if you scroll to the bottom of the list, there's enough padding such that the last mail isnt blocked.\n. It's probably worth noting that this change only works if the FAB's parent is a `FrameLayout`, which won't be the case for everybody.\n. ",
    "wdullaer": "The button disappeared as if scrolling down.\n. I was using a cursoradapter and sqlite database.\nThe listview had an empty view with an animation in it as well.\nIt felt very much like a race condition: when I programmatically asked the FAB to show in the loader callback it would still vanish from time to time.\nI'll see if I can extend the example to reproduce the bug, but I don't know when I'll actually get around to it.\n. You can try something like \n\n``` java\nfab.animate().translationYBy(snackbarheight)\n```\n\nin the show callback from your snackbar library (Nispok Snackbar is what I use).\nThe animation probably won't be exactly the same, but it gets the job done.\n. If you set translationY then that is very well possible, but I'm using relative values with translationYBy and I haven't encountered any artifacts so far. Maybe I'm just lucky.\n. The button disappeared as if scrolling down.\n. I was using a cursoradapter and sqlite database.\nThe listview had an empty view with an animation in it as well.\nIt felt very much like a race condition: when I programmatically asked the FAB to show in the loader callback it would still vanish from time to time.\nI'll see if I can extend the example to reproduce the bug, but I don't know when I'll actually get around to it.\n. You can try something like \n\n``` java\nfab.animate().translationYBy(snackbarheight)\n```\n\nin the show callback from your snackbar library (Nispok Snackbar is what I use).\nThe animation probably won't be exactly the same, but it gets the job done.\n. If you set translationY then that is very well possible, but I'm using relative values with translationYBy and I haven't encountered any artifacts so far. Maybe I'm just lucky.\n. ",
    "www40": "if you use transparent colors it goes from this:\n![blobb](https://cloud.githubusercontent.com/assets/3441948/5514504/5ebf5ba6-883a-11e4-99fd-52d8b7002f42.png)\nto this:\n![no_blobb](https://cloud.githubusercontent.com/assets/3441948/5514505/682ad5c6-883a-11e4-9ee2-0218416d5f8b.png)\n. if you use transparent colors it goes from this:\n![blobb](https://cloud.githubusercontent.com/assets/3441948/5514504/5ebf5ba6-883a-11e4-99fd-52d8b7002f42.png)\nto this:\n![no_blobb](https://cloud.githubusercontent.com/assets/3441948/5514505/682ad5c6-883a-11e4-9ee2-0218416d5f8b.png)\n. ",
    "rubengees": "Maybe your Icon has a white background and not an alpha background? \n. Maybe your Icon has a white background and not an alpha background? \n. ",
    "bearprada": "icon is : ![ic_nav_create_n](https://cloud.githubusercontent.com/assets/1080103/5395381/43be6e40-8183-11e4-8b0e-9c4ea246a6f0.png)\n\nand layout will looks like \n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.v4.widget.SwipeRefreshLayout   \n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:id=\"@+id/ptr_layout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n    <RelativeLayout\n        android:id=\"@+id/explorer_feeds_root\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\" >\n\n        <com.google.samples.apps.iosched.ui.widget.SlidingTabLayout\n            android:id=\"@+id/explore_feeds_indicator\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:background=\"?attr/colorPrimary\"\n            android:elevation=\"2dp\" />\n\n        <android.support.v4.view.ViewPager\n            android:id=\"@+id/explore_feeds_viewpager\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"fill_parent\"\n            android:layout_below=\"@id/explore_feeds_indicator\" />\n\n        <com.getbase.floatingactionbutton.FloatingActionButton\n            android:id=\"@+id/fab_create\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_alignParentRight=\"true\"\n            android:layout_alignParentBottom=\"true\"\n            android:layout_margin=\"16dp\"\n            android:src=\"@drawable/selector_bn_act_create\"\n            app:fab_colorNormal=\"@color/blue\"\n            app:fab_colorPressed=\"@color/blue\"\n            app:fab_colorRipple=\"@color/blue\" />\n    </RelativeLayout>\n</android.support.v4.widget.SwipeRefreshLayout>\n```\n. no ~ but i use another library https://github.com/futuresimple/android-floating-action-button (it's reference on your implementation. but it's work)\n. icon is : ![ic_nav_create_n](https://cloud.githubusercontent.com/assets/1080103/5395381/43be6e40-8183-11e4-8b0e-9c4ea246a6f0.png)\n\nand layout will looks like \n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.v4.widget.SwipeRefreshLayout   \n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:id=\"@+id/ptr_layout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n    <RelativeLayout\n        android:id=\"@+id/explorer_feeds_root\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\" >\n\n        <com.google.samples.apps.iosched.ui.widget.SlidingTabLayout\n            android:id=\"@+id/explore_feeds_indicator\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:background=\"?attr/colorPrimary\"\n            android:elevation=\"2dp\" />\n\n        <android.support.v4.view.ViewPager\n            android:id=\"@+id/explore_feeds_viewpager\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"fill_parent\"\n            android:layout_below=\"@id/explore_feeds_indicator\" />\n\n        <com.getbase.floatingactionbutton.FloatingActionButton\n            android:id=\"@+id/fab_create\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_alignParentRight=\"true\"\n            android:layout_alignParentBottom=\"true\"\n            android:layout_margin=\"16dp\"\n            android:src=\"@drawable/selector_bn_act_create\"\n            app:fab_colorNormal=\"@color/blue\"\n            app:fab_colorPressed=\"@color/blue\"\n            app:fab_colorRipple=\"@color/blue\" />\n    </RelativeLayout>\n</android.support.v4.widget.SwipeRefreshLayout>\n```\n. no ~ but i use another library https://github.com/futuresimple/android-floating-action-button (it's reference on your implementation. but it's work)\n. ",
    "shakmak": "Facing exactly same issues. I am using icon from your sample so it doesn't have any boundary. \nI copied your activity and layout file to my project and still facing same issues though your sample runs file. \n. Facing exactly same issues. I am using icon from your sample so it doesn't have any boundary. \nI copied your activity and layout file to my project and still facing same issues though your sample runs file. \n. ",
    "mufumbo": "@makovkastar the graphical asset cannot be fixed?\n. @makovkastar the graphical asset cannot be fixed?\n. ",
    "heinrichreimer": "In this case the FAB should probably simple be hidden\n. In this case the FAB should probably simple be hidden\n. ",
    "almozavr": "In many cases not, 'cause hidden ui (and this could be even app first launch) doesn't give user sense of action. In our case, button is used for calling to translater. Imagine this screen without action button..\n![](http://monosnap.com/image/iGWcdotSUgWSjC49d5GovCn7azt3V0.png)\n. Let me clear things: if you won't define which repository to use for your project, dependencies won't be satisfied. I suppose, you assume a developer to define `allProjects` section to propagate `repositories` to all sub-projects. But this is not a good technique for `gradle` as it creates coupled projects (linked with your root project maybe), and increases build time. See for details: https://plus.google.com/108967384991768947849/posts/ECrb9VQW9XP\n. In many cases not, 'cause hidden ui (and this could be even app first launch) doesn't give user sense of action. In our case, button is used for calling to translater. Imagine this screen without action button..\n![](http://monosnap.com/image/iGWcdotSUgWSjC49d5GovCn7azt3V0.png)\n. Let me clear things: if you won't define which repository to use for your project, dependencies won't be satisfied. I suppose, you assume a developer to define `allProjects` section to propagate `repositories` to all sub-projects. But this is not a good technique for `gradle` as it creates coupled projects (linked with your root project maybe), and increases build time. See for details: https://plus.google.com/108967384991768947849/posts/ECrb9VQW9XP\n. ",
    "tatocaster": "agree with @almozavr \n. agree with @almozavr \n. ",
    "JonathanMerritt": "I actually switched to futuresimple FABs and nispoks SBars. Spent the day yesterday and it was an absolute breeze getting it right, even got my SysUI interaction solved.\n\nThanks a lot guys. You revived this issue out of no where and it fixed 3 things in my app I was right in the middle of doing at the time. Really crazy timing. But worked out great. So thank you.\n. Without contribs I'd be no where. I pretty much learned all I know from libs and repos.\n\nSide question, feels odd asking on this lib. But do you know a way to dismiss nispoks snackbar with a swipe down? Can't seem to figure it out.\n. I may ask if it could be made default. I'd guess its been asked.\n\nI want it like Gmail has basically. Swipe down or button click to dismiss.\n\nI think its meant to be like that. If the SB comes up it should be dismissed by pulling down. Idk for sure though. They change them so much.\n\nThank you all the same.\n. I actually switched to futuresimple FABs and nispoks SBars. Spent the day yesterday and it was an absolute breeze getting it right, even got my SysUI interaction solved.\n\nThanks a lot guys. You revived this issue out of no where and it fixed 3 things in my app I was right in the middle of doing at the time. Really crazy timing. But worked out great. So thank you.\n. Without contribs I'd be no where. I pretty much learned all I know from libs and repos.\n\nSide question, feels odd asking on this lib. But do you know a way to dismiss nispoks snackbar with a swipe down? Can't seem to figure it out.\n. I may ask if it could be made default. I'd guess its been asked.\n\nI want it like Gmail has basically. Swipe down or button click to dismiss.\n\nI think its meant to be like that. If the SB comes up it should be dismissed by pulling down. Idk for sure though. They change them so much.\n\nThank you all the same.\n. ",
    "elincognito": "calling setImageBitmap doesn't appear to scale the image properly (FAB goes from being a circle to the ratio of the bitmap square/rectangle), \non Samsung Galaxy S5\n\nTried with \nandroid:scaleType=\"centerCrop\" also and the effect was the same\n\nIssue seems related to pre Lollipop versions\n. calling setImageBitmap doesn't appear to scale the image properly (FAB goes from being a circle to the ratio of the bitmap square/rectangle), \non Samsung Galaxy S5\n\nTried with \nandroid:scaleType=\"centerCrop\" also and the effect was the same\n\nIssue seems related to pre Lollipop versions\n. ",
    "davidwu0709": "@forcewill , firstly, you need to setPadding(-1, -1, -1, -1, then crop circular area from bitmap and set it to FAB with setImageBitmap function. \n. @forcewill , firstly, you need to setPadding(-1, -1, -1, -1, then crop circular area from bitmap and set it to FAB with setImageBitmap function. \n. ",
    "AfzalivE": "perhaps you mean this:\n\nhttp://material-design.storage.googleapis.com/publish/material_v_3/material_ext_publish/0B6Okdz75tqQsM1Q5YUVTTXVvc2s/components-buttons-fab-behavior_01_xhdpi_011.webm\n. The video has both actually :)\n. perhaps you mean this:\n\nhttp://material-design.storage.googleapis.com/publish/material_v_3/material_ext_publish/0B6Okdz75tqQsM1Q5YUVTTXVvc2s/components-buttons-fab-behavior_01_xhdpi_011.webm\n. The video has both actually :)\n. ",
    "ido567": "Works fine without shadow, how can I implement it with the shadow?\n. I didn't find a way to implement the shadow without the bug :\\\n. Sounds good, I'll check it out\nThank\n. Works fine without shadow, how can I implement it with the shadow?\n. I didn't find a way to implement the shadow without the bug :\\\n. Sounds good, I'll check it out\nThank\n. ",
    "naoyamakino": "@makovkastar @ido567 I am experiencing the exact same issue. is there any way around to have a shadow and this not getting this behaviour?\n. @ido567 what I ended up doing was I `hide(false)` in `onViewCreate` and do `show()` in `onResume`. this will avoid showing jitter move. I know it is not an ideal but IMO okay workaround.\n. @makovkastar @ido567 I am experiencing the exact same issue. is there any way around to have a shadow and this not getting this behaviour?\n. @ido567 what I ended up doing was I `hide(false)` in `onViewCreate` and do `show()` in `onResume`. this will avoid showing jitter move. I know it is not an ideal but IMO okay workaround.\n. ",
    "tek": "that doesn't help when using a transition with the button\u2026would be nice if this were fixed.\n. that doesn't help when using a transition with the button\u2026would be nice if this were fixed.\n. ",
    "JSONValidator": "When I set attr in XML:\n\n```\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n              xmlns:fab=\"http://schemas.android.com/apk/res-auto\"\n              android:orientation=\"vertical\"\n              android:layout_width=\"match_parent\"\n              android:layout_height=\"match_parent\">\n...\n<com.melnykov.fab.FloatingActionButton\n                    android:id=\"@+id/fab\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_gravity=\"bottom|right\"\n                    android:layout_margin=\"16dp\"\n                    android:src=\"@drawable/ic_favorite_grey600_48dp\"\n                    fab:fab_colorNormal=\"@color/primary\"\n                    fab:fab_colorPressed=\"@color/primary_pressed\"\n                    fab:fab_colorRipple=\"@color/ripple\"/>\n...\n```\n\nerror:\n\n```\nError:(137, -1) android-apt-compiler: [myapp] /Users/fedor/IdeaProjects/myapp/res/layout/video.xml:137: error: No resource identifier found for attribute 'fab_colorNormal' in package 'com.example.myapp'\nError:(137, -1) android-apt-compiler: [myapp] /Users/fedor/IdeaProjects/myapp/res/layout/video.xml:137: error: No resource identifier found for attribute 'fab_colorPressed' in package 'com.example.myapp'\nError:(137, -1) android-apt-compiler: [myapp] /Users/fedor/IdeaProjects/myapp/res/layout/video.xml:137: error: No resource identifier found for attribute 'fab_colorRipple' in package 'com.example.myapp'\n```\n\nbut I imported the library\n. I started using android studio with gradle and the problem solved itself\n. When I set attr in XML:\n\n```\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n              xmlns:fab=\"http://schemas.android.com/apk/res-auto\"\n              android:orientation=\"vertical\"\n              android:layout_width=\"match_parent\"\n              android:layout_height=\"match_parent\">\n...\n<com.melnykov.fab.FloatingActionButton\n                    android:id=\"@+id/fab\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_gravity=\"bottom|right\"\n                    android:layout_margin=\"16dp\"\n                    android:src=\"@drawable/ic_favorite_grey600_48dp\"\n                    fab:fab_colorNormal=\"@color/primary\"\n                    fab:fab_colorPressed=\"@color/primary_pressed\"\n                    fab:fab_colorRipple=\"@color/ripple\"/>\n...\n```\n\nerror:\n\n```\nError:(137, -1) android-apt-compiler: [myapp] /Users/fedor/IdeaProjects/myapp/res/layout/video.xml:137: error: No resource identifier found for attribute 'fab_colorNormal' in package 'com.example.myapp'\nError:(137, -1) android-apt-compiler: [myapp] /Users/fedor/IdeaProjects/myapp/res/layout/video.xml:137: error: No resource identifier found for attribute 'fab_colorPressed' in package 'com.example.myapp'\nError:(137, -1) android-apt-compiler: [myapp] /Users/fedor/IdeaProjects/myapp/res/layout/video.xml:137: error: No resource identifier found for attribute 'fab_colorRipple' in package 'com.example.myapp'\n```\n\nbut I imported the library\n. I started using android studio with gradle and the problem solved itself\n. ",
    "rzeh4n": "Issue closed so how did you solve that then?\n. Issue closed so how did you solve that then?\n. ",
    "HamidZandi": "i use android studio and gladle too, but i have that errors !\n. i update android studio and errors goes away, tnx :)\n. i use android studio and gladle too, but i have that errors !\n. i update android studio and errors goes away, tnx :)\n. ",
    "evoxmusic": "I got exactly the same issue.\n. I got exactly the same issue.\n. ",
    "Jawnnypoo": "+1, I am in the same boat. Mine is on a Nexus 4 with 5.0.1. Tested the same xml layout with a Button instead of the FAB and the marginBottom worked as intended. Is the view eating up marginBottom to get animations to work or something?\n. +1, I am in the same boat. Mine is on a Nexus 4 with 5.0.1. Tested the same xml layout with a Button instead of the FAB and the marginBottom worked as intended. Is the view eating up marginBottom to get animations to work or something?\n. ",
    "dkostyrev": "I had this issue too, FAB only overrides bottom margin when used on pre - lolipop device with shadow enabled (to accomodate shadow drawable). This issue looks like some kind of RelativeLayout \\ FrameLayout bug. I use this FAB inside fragment, and had exactly same issue, but when I changed fragment container from FrameLayout to RelativeLayout this issue gone.\n. I had this issue too, FAB only overrides bottom margin when used on pre - lolipop device with shadow enabled (to accomodate shadow drawable). This issue looks like some kind of RelativeLayout \\ FrameLayout bug. I use this FAB inside fragment, and had exactly same issue, but when I changed fragment container from FrameLayout to RelativeLayout this issue gone.\n. ",
    "mecid": "@makovkastar can u accept this pull request and rollout new version?\n. @makovkastar can u accept this pull request and rollout new version?\n. ",
    "IlyaEremin": "@dirkam yeap, it's exactly the same case and it is ok for temporary workaround. Thank a lot for link!\nBut It looks like hack, we need more elegant solution :smiling_imp: \n. ObservableScrollView extends ScrollView. You can cast from ObservableScrollView to ScrollView, but not vise versa. See about casting objects at http://docs.oracle.com/javase/tutorial/java/IandI/subclasses.html \n. @dirkam yeap, it's exactly the same case and it is ok for temporary workaround. Thank a lot for link!\nBut It looks like hack, we need more elegant solution :smiling_imp: \n. ObservableScrollView extends ScrollView. You can cast from ObservableScrollView to ScrollView, but not vise versa. See about casting objects at http://docs.oracle.com/javase/tutorial/java/IandI/subclasses.html \n. ",
    "PaulWoitaschek": "Totally my fault, didnt extend from Widget.ImageButton.\n. Totally my fault, didnt extend from Widget.ImageButton.\n. ",
    "Effe76": "1) Import it as a project into Eclipse, File -> Import.. (check copy into workspace, and rename it as Fab library) \n\n2) Right-click in the project's name, go to Properties and under \"Android\" check \"Is library\".\n\n3) Right click Your project -> Android -> Add... and check the Fab library\n\n4) Do the same right clicking the Fab library project and including Nineoldandroids lib and support v7 libs.\n\nTry and let me know\n. I forgot the  FrameLayout!! I put the FAB in the FrameLayout having width&height = match_parent and everything worked fine. :)\n. 1) Import it as a project into Eclipse, File -> Import.. (check copy into workspace, and rename it as Fab library) \n\n2) Right-click in the project's name, go to Properties and under \"Android\" check \"Is library\".\n\n3) Right click Your project -> Android -> Add... and check the Fab library\n\n4) Do the same right clicking the Fab library project and including Nineoldandroids lib and support v7 libs.\n\nTry and let me know\n. I forgot the  FrameLayout!! I put the FAB in the FrameLayout having width&height = match_parent and everything worked fine. :)\n. ",
    "sfunke": "Just opened a pull request from my fork, where I implemented this feature out of own needs:\nhttps://github.com/makovkastar/FloatingActionButton/pull/127\n\nFingers crossed that it gets pulled in ;-)\n\nIn the meantime, feel free to take my branch at\nhttps://github.com/sfunke/FloatingActionButton/tree/feature/free-size\n\nJust add a fab_size attribute to the xml where you include the button in layout, and give it a dimension value.\n. Aha, yes you are right, I think I tested it but may have missed to test it with sizes smaller than default.\n\nWhat do you think about constraining the size not to be smaller than the smallest default size? (48dp, I guess?) I think there may be the requirement for larger buttons, but not so much for smaller ones.\n\nRegarding generating runtime shadows, I did some experiments for custom dropshadows in another projects, basically black-painting the object, blur it, and draw it underneath the object. So this could work as well, although potential affections on performance should be considered.\n\nIf you don't mind I'll have a look into it as soon as I have time.\n\nThanks for the hint!\n. @MGaetan89 Yes, I just added a fix on my fork, hopefully it gets pulled in. It's true that it's a bit whacky on pre-Lollipop devices to get the shadow straight. The current workaround is that the fixed size shadow drawable gets stretched accordingly (depending on the size), **plus** taking the shadow margin into account.\n\nAlso I decided, that when `fab_type=\"mini\"` is explicitly set, I ignore the `fab_size` property (so that FAB is shown in normal \"mini\" appearance, and it just gets it's \"mini\"-shadow applied.)\n\nIt's been tested on Lollipop & pre-Lollipop, as well with larger & smaller FAB-sizes, and on different resolutions.\n\n@makovkastar What do you think?\n. Just opened a pull request from my fork, where I implemented this feature out of own needs:\nhttps://github.com/makovkastar/FloatingActionButton/pull/127\n\nFingers crossed that it gets pulled in ;-)\n\nIn the meantime, feel free to take my branch at\nhttps://github.com/sfunke/FloatingActionButton/tree/feature/free-size\n\nJust add a fab_size attribute to the xml where you include the button in layout, and give it a dimension value.\n. Aha, yes you are right, I think I tested it but may have missed to test it with sizes smaller than default.\n\nWhat do you think about constraining the size not to be smaller than the smallest default size? (48dp, I guess?) I think there may be the requirement for larger buttons, but not so much for smaller ones.\n\nRegarding generating runtime shadows, I did some experiments for custom dropshadows in another projects, basically black-painting the object, blur it, and draw it underneath the object. So this could work as well, although potential affections on performance should be considered.\n\nIf you don't mind I'll have a look into it as soon as I have time.\n\nThanks for the hint!\n. @MGaetan89 Yes, I just added a fix on my fork, hopefully it gets pulled in. It's true that it's a bit whacky on pre-Lollipop devices to get the shadow straight. The current workaround is that the fixed size shadow drawable gets stretched accordingly (depending on the size), **plus** taking the shadow margin into account.\n\nAlso I decided, that when `fab_type=\"mini\"` is explicitly set, I ignore the `fab_size` property (so that FAB is shown in normal \"mini\" appearance, and it just gets it's \"mini\"-shadow applied.)\n\nIt's been tested on Lollipop & pre-Lollipop, as well with larger & smaller FAB-sizes, and on different resolutions.\n\n@makovkastar What do you think?\n. ",
    "MGaetan89": "Until this is integrated in the library, I just scale the button as follow:\n\n``` java\nfab.setScaleX(0.75f);\nfab.setScaleY(0.75f);\n```\n\nDidn't test it with shadow enable though.\n. @sfunke Did you have time to look into this again?\n. Just don't attach your button to a list, there is no need to add an extra property.\n. No, it's the other way around: http://developer.android.com/reference/android/support/v7/widget/RecyclerView.html#setOnScrollListener(android.support.v7.widget.RecyclerView.OnScrollListener)\n\nThe current version is correct.\n. Until this is integrated in the library, I just scale the button as follow:\n\n``` java\nfab.setScaleX(0.75f);\nfab.setScaleY(0.75f);\n```\n\nDidn't test it with shadow enable though.\n. @sfunke Did you have time to look into this again?\n. Just don't attach your button to a list, there is no need to add an extra property.\n. No, it's the other way around: http://developer.android.com/reference/android/support/v7/widget/RecyclerView.html#setOnScrollListener(android.support.v7.widget.RecyclerView.OnScrollListener)\n\nThe current version is correct.\n. ",
    "mustafaberkaymutlu": "You can also override R.dimen.fab_size_normal or R.dimen.fab_size_mini to anything you want by adding the same dimensions into your dimens.xml:\r\n\r\n```\r\n<dimen name=\"fab_size_mini\">40dp</dimen>\r\n<dimen name=\"fab_size_normal\">56dp</dimen>\r\n```\r\n\r\nTheir default values are 40dp and 56dp.\r\n\r\n[dimens.xml in the library](https://github.com/makovkastar/FloatingActionButton/blob/master/library/src/main/res/values/dimens.xml)\r\n[Answer source](https://stackoverflow.com/a/40242736/2708768)\r\n. You can also override R.dimen.fab_size_normal or R.dimen.fab_size_mini to anything you want by adding the same dimensions into your dimens.xml:\r\n\r\n```\r\n<dimen name=\"fab_size_mini\">40dp</dimen>\r\n<dimen name=\"fab_size_normal\">56dp</dimen>\r\n```\r\n\r\nTheir default values are 40dp and 56dp.\r\n\r\n[dimens.xml in the library](https://github.com/makovkastar/FloatingActionButton/blob/master/library/src/main/res/values/dimens.xml)\r\n[Answer source](https://stackoverflow.com/a/40242736/2708768)\r\n. ",
    "4gus71n": "Thanks!, I tried to find an issue similar, but I didn't find it. Sorry that I bring back something old :/.\n. Thanks!, I tried to find an issue similar, but I didn't find it. Sorry that I bring back something old :/.\n. ",
    "bdonahue": "I fixed this over here: https://github.com/makovkastar/FloatingActionButton/pull/101\nStill waiting for it to get merged.\n. This should fix it:\n\nDelete this line: mGrid.setOnScrollListener(this); // add to the first list view\n\nChange this line \nfrom: fab.attachToListView(mGrid);\nto: fab.attachToListView(mGrid, null, this);\n. I fixed this over here: https://github.com/makovkastar/FloatingActionButton/pull/101\nStill waiting for it to get merged.\n. This should fix it:\n\nDelete this line: mGrid.setOnScrollListener(this); // add to the first list view\n\nChange this line \nfrom: fab.attachToListView(mGrid);\nto: fab.attachToListView(mGrid, null, this);\n. ",
    "Wolftein": "Calling show() after the items are removed will do the trick.\n. +1\n. Calling show() after the items are removed will do the trick.\n. +1\n. ",
    "RyanSimon": "@Wolftein :+1: \n\nI ran into the same issue. It would be great if we had something like ListView's getLastVisiblePosition. This would allow us to code something up that can detect if there's enough items in a RecyclerView for scrolling to work.\n\n[Check out this post on stackoverflow](http://stackoverflow.com/questions/20450765/android-detect-if-a-listview-has-the-scrollbar-after-setting-new-data?lq=1) explaining how to solve for this with a ListView.\n. @Wolftein :+1: \n\nI ran into the same issue. It would be great if we had something like ListView's getLastVisiblePosition. This would allow us to code something up that can detect if there's enough items in a RecyclerView for scrolling to work.\n\n[Check out this post on stackoverflow](http://stackoverflow.com/questions/20450765/android-detect-if-a-listview-has-the-scrollbar-after-setting-new-data?lq=1) explaining how to solve for this with a ListView.\n. ",
    "perqin": "I notice this issue just now and thanks a lot for the trick!\n. I notice this issue just now and thanks a lot for the trick!\n. ",
    "tajchert": "My mistake it is there already. :(\n. My mistake it is there already. :(\n. ",
    "MoonlightMultimedia": "~~Same issue here, considering utilizing another library instead.~~\nGot it working by manually importing and adding dependencies on AppCompat-v7, NineOldAndroids and AppCompat-Recyclerview.\n. ~~Same issue here, considering utilizing another library instead.~~\nGot it working by manually importing and adding dependencies on AppCompat-v7, NineOldAndroids and AppCompat-Recyclerview.\n. ",
    "pkhivesara": "So why does the FAB search on maven central yield this: \n\n``` xml\n<dependency>\n    <groupId>com.melnykov</groupId>\n    <artifactId>floatingactionbutton</artifactId>\n    <version>1.2.0</version>\n</dependency>\n\n```\n\nThe `<type>` seems to be missing from the dependency. Does this need to be updated or did i miss something from maven central? I shall try using the aar and put an updated comment soon.\n\nThanks!\n. Ok using the aar tag did work fine! Thanks!\n. So why does the FAB search on maven central yield this: \n\n``` xml\n<dependency>\n    <groupId>com.melnykov</groupId>\n    <artifactId>floatingactionbutton</artifactId>\n    <version>1.2.0</version>\n</dependency>\n\n```\n\nThe `<type>` seems to be missing from the dependency. Does this need to be updated or did i miss something from maven central? I shall try using the aar and put an updated comment soon.\n\nThanks!\n. Ok using the aar tag did work fine! Thanks!\n. ",
    "mithunm93": "I figured it out, for some reason, my XML had this line:\n\n``` XML\nxmlns:fab=\"http://schemas.android.com/tools\"\n```\n\n as you can see above, instead of this line:\n\n``` XML\nxmlns:fab=\"http://schemas.android.com/apk/res-auto\"\n```\n\nnot sure how that came to be, I used the auto-import. I only figured it out when I added the FAB to another Activity, and it showed up correctly (strangely enough I used the auto-import for this activity too, but it retrieved the different URL shown above). \n. I figured it out, for some reason, my XML had this line:\n\n``` XML\nxmlns:fab=\"http://schemas.android.com/tools\"\n```\n\n as you can see above, instead of this line:\n\n``` XML\nxmlns:fab=\"http://schemas.android.com/apk/res-auto\"\n```\n\nnot sure how that came to be, I used the auto-import. I only figured it out when I added the FAB to another Activity, and it showed up correctly (strangely enough I used the auto-import for this activity too, but it retrieved the different URL shown above). \n. ",
    "jd-alexander": "Same thing just happened with me. Good thing I stumbled upon this.\n. Same thing just happened with me. Good thing I stumbled upon this.\n. ",
    "nishantmendiratta": "Found a solution - fab:fab_colorNormal=\"@android:color/black\"\n. Found a solution - fab:fab_colorNormal=\"@android:color/black\"\n. ",
    "sujanakal": "Even I had the same issue. Thank you so much... Even I had the same issue. Thank you so much... ",
    "robertmathew": "+1\n. +1\n. ",
    "jdzuri": "+1\n. Hi, \n\nI experimented the same issue. FloatingActionButton isn't positioned correctly inside a `RelativeLayout`.\n\nTry to change the `RelativeLayout` that contains the FloatingActionButton by `FrameLayout`.\n. +1\n. Hi, \n\nI experimented the same issue. FloatingActionButton isn't positioned correctly inside a `RelativeLayout`.\n\nTry to change the `RelativeLayout` that contains the FloatingActionButton by `FrameLayout`.\n. ",
    "varyoo": "+1\n. +1\n. ",
    "swapps": "+1\n. +1\n. ",
    "Kennyc1012": "When compiling the library, it should output two different aars for both api7 and api14. Any upload scripts should upload both accordingly. I have done it for a [library](https://github.com/Kennyc1012/SnackBar) I have written and the upload script uploads both to the repository. \n. When compiling the library, it should output two different aars for both api7 and api14. Any upload scripts should upload both accordingly. I have done it for a [library](https://github.com/Kennyc1012/SnackBar) I have written and the upload script uploads both to the repository. \n. ",
    "jjhesk": "I have confirmed that this is working now! Thank you, you are great @bdonahue \n. me too.. mine is on 4.4.4\n\n``` xml\n <com.melnykov.fab.FloatingActionButton\n        android:id=\"@+id/full_menu\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentBottom=\"true\"\n        android:layout_alignParentRight=\"true\"\n        android:layout_marginBottom=\"16dp\"\n        android:layout_marginRight=\"16dp\"\n        android:src=\"@drawable/car\"\n        fab:fab_colorNormal=\"@color/yellow_400\"\n        fab:fab_colorPressed=\"@color/indigo_300\"\n        fab:fab_colorRipple=\"@color/indigo_200\"\n        fab:fab_type=\"normal\" />\n```\n. ok I got this. \nThis component is a ImageButton form the soruce. So you need to add this in order to make the size right \n\n``` xml\n\n  android:scaleType=\"centerInside\"\n\n```\n. I have confirmed that this is working now! Thank you, you are great @bdonahue \n. me too.. mine is on 4.4.4\n\n``` xml\n <com.melnykov.fab.FloatingActionButton\n        android:id=\"@+id/full_menu\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentBottom=\"true\"\n        android:layout_alignParentRight=\"true\"\n        android:layout_marginBottom=\"16dp\"\n        android:layout_marginRight=\"16dp\"\n        android:src=\"@drawable/car\"\n        fab:fab_colorNormal=\"@color/yellow_400\"\n        fab:fab_colorPressed=\"@color/indigo_300\"\n        fab:fab_colorRipple=\"@color/indigo_200\"\n        fab:fab_type=\"normal\" />\n```\n. ok I got this. \nThis component is a ImageButton form the soruce. So you need to add this in order to make the size right \n\n``` xml\n\n  android:scaleType=\"centerInside\"\n\n```\n. ",
    "clocksmith": "Thanks. I see the static image asset. My question is \"How can I duplicate this resource on my own\" Example: Open photoshop, create circle, apply drop shadow, etc.\n\nI would like to know so that I can create consistent shadows that look the same as the one provided in this FAB. Android 5.0 z value and elevation does no suffice since I need to target pre 5.0. Thanks\n. Thanks. I see the static image asset. My question is \"How can I duplicate this resource on my own\" Example: Open photoshop, create circle, apply drop shadow, etc.\n\nI would like to know so that I can create consistent shadows that look the same as the one provided in this FAB. Android 5.0 z value and elevation does no suffice since I need to target pre 5.0. Thanks\n. ",
    "jaydp17": "+1\n. +1\n. ",
    "zhangns": "+1\nIt is much faster than the speed in many Lollipop apps such as Clock and Phone.\n. +1\nIt is much faster than the speed in many Lollipop apps such as Clock and Phone.\n. ",
    "sp574": "Yep, I noticed that too. This hasn't been fixed, right?\n. Yep, I noticed that too. This hasn't been fixed, right?\n. ",
    "leinardi": "Same here. Any news or workaround?\n. Same here. Any news or workaround?\n. ",
    "cyroxis": "Has anybody found a workaround for this issue? I ran into it myself and am willing to create a PR to fix but I am uncertain how to detect if all items are visible in the recycler view.\n. Has anybody found a workaround for this issue? I ran into it myself and am willing to create a PR to fix but I am uncertain how to detect if all items are visible in the recycler view.\n. ",
    "ascorbin33": "The problem was that the `FloatingActionButton` class makes use of a drawable called `shadow.9.png` for the shadow. I also had a `shadow.9.png` in my drawables and the library class obviously picked up the wrong one (mine). \nRenaming my drawable solved the problem. \n. The problem was that the `FloatingActionButton` class makes use of a drawable called `shadow.9.png` for the shadow. I also had a `shadow.9.png` in my drawables and the library class obviously picked up the wrong one (mine). \nRenaming my drawable solved the problem. \n. ",
    "Nivl": "Nice job, maybe you should update the README too, to let people know how it works.\n\nI hope it get merged soon!\n. Nice job, maybe you should update the README too, to let people know how it works.\n\nI hope it get merged soon!\n. ",
    "LeopoldPodmolik": "I think, that will be good add auto hide menus when is FAB binding to listview ... \n\npublic void onScrollUp() {\n        if (isMenuShowing) { triggerMenu(90); } // Add to hide menus\n. I try it on API 10 and I dont know if is problem with combination ListView and SwipeRefreshLayout but cant click on menus \n. I think, that will be good add auto hide menus when is FAB binding to listview ... \n\npublic void onScrollUp() {\n        if (isMenuShowing) { triggerMenu(90); } // Add to hide menus\n. I try it on API 10 and I dont know if is problem with combination ListView and SwipeRefreshLayout but cant click on menus \n. ",
    "tudorsirbu": "that didn't fix it for me. :( still a big square. \n. that didn't fix it for me. :( still a big square. \n. ",
    "MahendraRaj": "@tudorsirbu Using setBackgroundColor() made my fab to turn to a square button. it might be fixed if you use the other methods to set the background.\r\n. @tudorsirbu Using setBackgroundColor() made my fab to turn to a square button. it might be fixed if you use the other methods to set the background.\r\n. ",
    "ZsoltSafrany": "It works when API level is set to 21 in the Preview Tool Window. Below that the IDE spits out exceptions like the one on the screenshot in my previous comment.\n. It works when API level is set to 21 in the Preview Tool Window. Below that the IDE spits out exceptions like the one on the screenshot in my previous comment.\n. ",
    "igor-kalyatkin": "Doesn't work if i set API level 22 in AA Preview window:\n\n<code>java.lang.IllegalArgumentException: Width (8) and height (0) cannot be <= 0\n    at java.awt.image.DirectColorModel.createCompatibleWritableRaster(DirectColorModel.java:999)\n    at java.awt.image.BufferedImage.<init>(BufferedImage.java:326)\n    at android.graphics.LinearGradient_Delegate$LinearGradientPaint$LinearGradientPaintContext.getRaster(LinearGradient_Delegate.java:175)\n    at apple.awt.OSXSurfaceData.setupPaint(OSXSurfaceData.java:752)\n    at apple.awt.OSXSurfaceData.setupGraphicsState(OSXSurfaceData.java:1038)\n    at apple.awt.OSXSurfaceData.setupGraphicsState(OSXSurfaceData.java:1004)\n    at apple.awt.OSXSurfaceData.doRect(OSXSurfaceData.java:1239)\n    at apple.awt.CRenderer.fillRect(CRenderer.java:157)\n    at apple.awt.CRenderer.fillRect(CRenderer.java:145)\n    at sun.java2d.pipe.ValidatePipe.fillRect(ValidatePipe.java:58)\n    at sun.java2d.SunGraphics2D.fillRect(SunGraphics2D.java:2505)\n    at android.graphics.Canvas_Delegate$4.draw(Canvas_Delegate.java:582)\n    at com.android.layoutlib.bridge.impl.GcSnapshot.drawOnGraphics(GcSnapshot.java:654)\n    at com.android.layoutlib.bridge.impl.GcSnapshot.drawInLayer(GcSnapshot.java:614)\n    at com.android.layoutlib.bridge.impl.GcSnapshot.draw(GcSnapshot.java:582)\n    at android.graphics.Canvas_Delegate.draw(Canvas_Delegate.java:937)\n    at android.graphics.Canvas_Delegate.native_drawRect(Canvas_Delegate.java:573)\n    at android.graphics.Canvas.native_drawRect(Canvas.java)\n    at android.graphics.Canvas.drawRect(Canvas.java:1119)\n    at android.view.RectShadowPainter.sideShadow(RectShadowPainter.java:131)\n    at android.view.RectShadowPainter.paintShadow(RectShadowPainter.java:79)\n    at android.view.ViewGroup_Delegate.drawShadow(ViewGroup_Delegate.java:72)\n    at android.view.ViewGroup_Delegate.drawChild(ViewGroup_Delegate.java:61)\n    at android.view.ViewGroup.drawChild(ViewGroup.java:3405)\n    at android.view.ViewGroup.dispatchDraw(ViewGroup.java:3198)\n    at android.view.View.draw(View.java:15138)\n    at android.view.ViewGroup.drawChild_Original(ViewGroup.java:3405)\n    at android.view.ViewGroup_Delegate.drawChild(ViewGroup_Delegate.java:65)\n    at android.view.ViewGroup.drawChild(ViewGroup.java:3405)\n    at android.view.ViewGroup.dispatchDraw(ViewGroup.java:3198)\n    at android.view.View.draw(View.java:15138)\n    at android.view.ViewGroup.drawChild_Original(ViewGroup.java:3405)\n    at android.view.ViewGroup_Delegate.drawChild(ViewGroup_Delegate.java:65)\n    at android.view.ViewGroup.drawChild(ViewGroup.java:3405)\n    at android.view.ViewGroup.dispatchDraw(ViewGroup.java:3198)\n    at android.view.View.draw(View.java:15234)\n    at android.view.View.draw(View.java:15140)\n    at android.view.ViewGroup.drawChild_Original(ViewGroup.java:3405)\n    at android.view.ViewGroup_Delegate.drawChild(ViewGroup_Delegate.java:65)\n    at android.view.ViewGroup.drawChild(ViewGroup.java:3405)\n    at android.view.ViewGroup.dispatchDraw(ViewGroup.java:3198)\n    at android.view.View.draw(View.java:15234)\n    at com.android.layoutlib.bridge.impl.RenderSessionImpl.render(RenderSessionImpl.java:601)\n    at com.android.layoutlib.bridge.Bridge.createSession(Bridge.java:323)\n    at com.android.ide.common.rendering.LayoutLibrary.createSession(LayoutLibrary.java:350)\n    at com.android.tools.idea.rendering.RenderService$5.compute(RenderService.java:708)\n    at com.android.tools.idea.rendering.RenderService$5.compute(RenderService.java:697)\n    at com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(ApplicationImpl.java:932)\n    at com.android.tools.idea.rendering.RenderService.createRenderSession(RenderService.java:697)\n    at com.android.tools.idea.rendering.RenderService.render(RenderService.java:816)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager.doRender(AndroidLayoutPreviewToolWindowManager.java:646)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager.access$1700(AndroidLayoutPreviewToolWindowManager.java:82)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager$7$1.run(AndroidLayoutPreviewToolWindowManager.java:589)\n    at com.intellij.openapi.progress.impl.ProgressManagerImpl$2.run(ProgressManagerImpl.java:178)\n    at com.intellij.openapi.progress.ProgressManager.executeProcessUnderProgress(ProgressManager.java:209)\n    at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:212)\n    at com.intellij.openapi.progress.impl.ProgressManagerImpl.runProcess(ProgressManagerImpl.java:171)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager$7.run(AndroidLayoutPreviewToolWindowManager.java:584)\n    at com.intellij.util.ui.update.MergingUpdateQueue.execute(MergingUpdateQueue.java:320)\n    at com.intellij.util.ui.update.MergingUpdateQueue.execute(MergingUpdateQueue.java:310)\n    at com.intellij.util.ui.update.MergingUpdateQueue$2.run(MergingUpdateQueue.java:254)\n    at com.intellij.util.ui.update.MergingUpdateQueue.flush(MergingUpdateQueue.java:269)\n    at com.intellij.util.ui.update.MergingUpdateQueue.flush(MergingUpdateQueue.java:227)\n    at com.intellij.util.ui.update.MergingUpdateQueue.run(MergingUpdateQueue.java:217)\n    at com.intellij.util.concurrency.QueueProcessor.runSafely(QueueProcessor.java:238)\n    at com.intellij.util.Alarm$Request$1.run(Alarm.java:327)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)\n    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:138)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)\n    at java.lang.Thread.run(Thread.java:695)\n</code>\n. Doesn't work if i set API level 22 in AA Preview window:\n\n<code>java.lang.IllegalArgumentException: Width (8) and height (0) cannot be <= 0\n    at java.awt.image.DirectColorModel.createCompatibleWritableRaster(DirectColorModel.java:999)\n    at java.awt.image.BufferedImage.<init>(BufferedImage.java:326)\n    at android.graphics.LinearGradient_Delegate$LinearGradientPaint$LinearGradientPaintContext.getRaster(LinearGradient_Delegate.java:175)\n    at apple.awt.OSXSurfaceData.setupPaint(OSXSurfaceData.java:752)\n    at apple.awt.OSXSurfaceData.setupGraphicsState(OSXSurfaceData.java:1038)\n    at apple.awt.OSXSurfaceData.setupGraphicsState(OSXSurfaceData.java:1004)\n    at apple.awt.OSXSurfaceData.doRect(OSXSurfaceData.java:1239)\n    at apple.awt.CRenderer.fillRect(CRenderer.java:157)\n    at apple.awt.CRenderer.fillRect(CRenderer.java:145)\n    at sun.java2d.pipe.ValidatePipe.fillRect(ValidatePipe.java:58)\n    at sun.java2d.SunGraphics2D.fillRect(SunGraphics2D.java:2505)\n    at android.graphics.Canvas_Delegate$4.draw(Canvas_Delegate.java:582)\n    at com.android.layoutlib.bridge.impl.GcSnapshot.drawOnGraphics(GcSnapshot.java:654)\n    at com.android.layoutlib.bridge.impl.GcSnapshot.drawInLayer(GcSnapshot.java:614)\n    at com.android.layoutlib.bridge.impl.GcSnapshot.draw(GcSnapshot.java:582)\n    at android.graphics.Canvas_Delegate.draw(Canvas_Delegate.java:937)\n    at android.graphics.Canvas_Delegate.native_drawRect(Canvas_Delegate.java:573)\n    at android.graphics.Canvas.native_drawRect(Canvas.java)\n    at android.graphics.Canvas.drawRect(Canvas.java:1119)\n    at android.view.RectShadowPainter.sideShadow(RectShadowPainter.java:131)\n    at android.view.RectShadowPainter.paintShadow(RectShadowPainter.java:79)\n    at android.view.ViewGroup_Delegate.drawShadow(ViewGroup_Delegate.java:72)\n    at android.view.ViewGroup_Delegate.drawChild(ViewGroup_Delegate.java:61)\n    at android.view.ViewGroup.drawChild(ViewGroup.java:3405)\n    at android.view.ViewGroup.dispatchDraw(ViewGroup.java:3198)\n    at android.view.View.draw(View.java:15138)\n    at android.view.ViewGroup.drawChild_Original(ViewGroup.java:3405)\n    at android.view.ViewGroup_Delegate.drawChild(ViewGroup_Delegate.java:65)\n    at android.view.ViewGroup.drawChild(ViewGroup.java:3405)\n    at android.view.ViewGroup.dispatchDraw(ViewGroup.java:3198)\n    at android.view.View.draw(View.java:15138)\n    at android.view.ViewGroup.drawChild_Original(ViewGroup.java:3405)\n    at android.view.ViewGroup_Delegate.drawChild(ViewGroup_Delegate.java:65)\n    at android.view.ViewGroup.drawChild(ViewGroup.java:3405)\n    at android.view.ViewGroup.dispatchDraw(ViewGroup.java:3198)\n    at android.view.View.draw(View.java:15234)\n    at android.view.View.draw(View.java:15140)\n    at android.view.ViewGroup.drawChild_Original(ViewGroup.java:3405)\n    at android.view.ViewGroup_Delegate.drawChild(ViewGroup_Delegate.java:65)\n    at android.view.ViewGroup.drawChild(ViewGroup.java:3405)\n    at android.view.ViewGroup.dispatchDraw(ViewGroup.java:3198)\n    at android.view.View.draw(View.java:15234)\n    at com.android.layoutlib.bridge.impl.RenderSessionImpl.render(RenderSessionImpl.java:601)\n    at com.android.layoutlib.bridge.Bridge.createSession(Bridge.java:323)\n    at com.android.ide.common.rendering.LayoutLibrary.createSession(LayoutLibrary.java:350)\n    at com.android.tools.idea.rendering.RenderService$5.compute(RenderService.java:708)\n    at com.android.tools.idea.rendering.RenderService$5.compute(RenderService.java:697)\n    at com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(ApplicationImpl.java:932)\n    at com.android.tools.idea.rendering.RenderService.createRenderSession(RenderService.java:697)\n    at com.android.tools.idea.rendering.RenderService.render(RenderService.java:816)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager.doRender(AndroidLayoutPreviewToolWindowManager.java:646)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager.access$1700(AndroidLayoutPreviewToolWindowManager.java:82)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager$7$1.run(AndroidLayoutPreviewToolWindowManager.java:589)\n    at com.intellij.openapi.progress.impl.ProgressManagerImpl$2.run(ProgressManagerImpl.java:178)\n    at com.intellij.openapi.progress.ProgressManager.executeProcessUnderProgress(ProgressManager.java:209)\n    at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:212)\n    at com.intellij.openapi.progress.impl.ProgressManagerImpl.runProcess(ProgressManagerImpl.java:171)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager$7.run(AndroidLayoutPreviewToolWindowManager.java:584)\n    at com.intellij.util.ui.update.MergingUpdateQueue.execute(MergingUpdateQueue.java:320)\n    at com.intellij.util.ui.update.MergingUpdateQueue.execute(MergingUpdateQueue.java:310)\n    at com.intellij.util.ui.update.MergingUpdateQueue$2.run(MergingUpdateQueue.java:254)\n    at com.intellij.util.ui.update.MergingUpdateQueue.flush(MergingUpdateQueue.java:269)\n    at com.intellij.util.ui.update.MergingUpdateQueue.flush(MergingUpdateQueue.java:227)\n    at com.intellij.util.ui.update.MergingUpdateQueue.run(MergingUpdateQueue.java:217)\n    at com.intellij.util.concurrency.QueueProcessor.runSafely(QueueProcessor.java:238)\n    at com.intellij.util.Alarm$Request$1.run(Alarm.java:327)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)\n    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:138)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)\n    at java.lang.Thread.run(Thread.java:695)\n</code>\n. ",
    "richardaum": "Agree!\n. Agree!\n. ",
    "guo314159": "it only appears on Android 4.1\n. No, I found it also appears on 5.0.1, it not depends on android version\n. it is a System bug. \nhttp://stackoverflow.com/questions/25964129/inflator-throws-numberformatexception-invalid-int-20-0dip-on-samsung-galaxy-ta\n. it only appears on Android 4.1\n. No, I found it also appears on 5.0.1, it not depends on android version\n. it is a System bug. \nhttp://stackoverflow.com/questions/25964129/inflator-throws-numberformatexception-invalid-int-20-0dip-on-samsung-galaxy-ta\n. ",
    "geecko86": "From what I've seen, animations apply to views and the icon is not a view: it's the drawable used as background for the FAB. In my opinion a good fix would be to separate the shadow and the FAB as 2 separate views and to automatically transfer all animations to the FAB. I could take care of that but I'd rather have the author's opinion.\n. I ended up doing something like that, yes. The problem is that if we need to implement a shadow manually, then we also need to hide and show it manually. It feels more like a hack.\n\nThis is cicumvents the problem but it doesn't solve it.\n. From what I've seen, animations apply to views and the icon is not a view: it's the drawable used as background for the FAB. In my opinion a good fix would be to separate the shadow and the FAB as 2 separate views and to automatically transfer all animations to the FAB. I could take care of that but I'd rather have the author's opinion.\n. I ended up doing something like that, yes. The problem is that if we need to implement a shadow manually, then we also need to hide and show it manually. It feels more like a hack.\n\nThis is cicumvents the problem but it doesn't solve it.\n. ",
    "ekzee": "I have same problem (Im attaching FAB to RecyclerView), using last version (1.3.0)\n. I have same problem (Im attaching FAB to RecyclerView), using last version (1.3.0)\n. ",
    "gabrieljuan": "Sorry, I wrote the wrong ID in mButtonAddStory. Much sorry\n. Sorry, I wrote the wrong ID in mButtonAddStory. Much sorry\n. ",
    "Rolf-Smit": "This should be fixed as soon as possible, it's quit annoying!\n. Looks good! Will this be in version 1.3?\n\nBtw: I'm using the library in the app Tinycore (30.000 downloads, https://play.google.com/store/apps/details?id=org.neotech.app.tinycore)\n. This should be fixed as soon as possible, it's quit annoying!\n. Looks good! Will this be in version 1.3?\n\nBtw: I'm using the library in the app Tinycore (30.000 downloads, https://play.google.com/store/apps/details?id=org.neotech.app.tinycore)\n. ",
    "georgeci": "Was the need to dynamically pin button and then release.\n. Was the need to dynamically pin button and then release.\n. ",
    "jaredsburrows": "It's time to upgrade to Intellij or Android Studio anyways for Android Development or at least use Maven or Gradle for the dependencies.\n. Why import as a module? Are you trying to edit the library?\n. Post your `build.gradle`.\n. @zoomonarak Are you have this same issue as well?\n. It's time to upgrade to Intellij or Android Studio anyways for Android Development or at least use Maven or Gradle for the dependencies.\n. Why import as a module? Are you trying to edit the library?\n. Post your `build.gradle`.\n. @zoomonarak Are you have this same issue as well?\n. ",
    "YoungjaeKim": "I think it's good to close the issue. Eclipse is officially out of support by google also.\n. I think it's good to close the issue. Eclipse is officially out of support by google also.\n. ",
    "MagnifierSun": "obviously,eclipse is outdated(#\uff9f\u0414\uff9f)\n\n\u5728 2015-07-20 13:34:41\uff0cYoungjaeKim notifications@github.com \u5199\u9053\uff1a\n\nI think it's good to close the issue. Eclipse is officially out of support by google also.\n\n\u2014\nReply to this email directly or view it on GitHub.\n. obviously,eclipse is outdated(#\uff9f\u0414\uff9f)\n\n\u5728 2015-07-20 13:34:41\uff0cYoungjaeKim notifications@github.com \u5199\u9053\uff1a\n\nI think it's good to close the issue. Eclipse is officially out of support by google also.\n\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "easycheese": "To be specific, the FAB is there but it doesn't disappear on scrolling events.\n. To be specific, the FAB is there but it doesn't disappear on scrolling events.\n. ",
    "achuinard": "I'm getting this error as well. Maybe it's Mac-specific?\n. I noticed that if I add 'fab_shadow' as false, the button can render.\n. I'm getting this error as well. Maybe it's Mac-specific?\n. I noticed that if I add 'fab_shadow' as false, the button can render.\n. ",
    "AndreasBackx": "@achuinard yes, but it isn't how you would want it to look on my end.\n\n![Screenshot](https://i.imgur.com/p22PHfb.png)\n. @achuinard yes, but it isn't how you would want it to look on my end.\n\n![Screenshot](https://i.imgur.com/p22PHfb.png)\n. ",
    "JoniDS": "That's because dy is the amount of scroll and not the currentScroll position.\nYou should keep a global variable:\nprivate currentScrollY=0;\n\nand then update it:\n\n> @Override\n>             public void onScrolled(RecyclerView recyclerView, int dx, int dy) {\n>                 super.onScrolled(recyclerView, dx, dy);\n>                 currentScrollY+=dy;\n>                if (currentScrollY > 70) {\n>                     scrollDown = true;\n>                 } else if (currentScrollY < -5) {\n>                     scrollDown = false;\n>                 }\n>             }\n. That's because dy is the amount of scroll and not the currentScroll position.\nYou should keep a global variable:\nprivate currentScrollY=0;\n\nand then update it:\n\n> @Override\n>             public void onScrolled(RecyclerView recyclerView, int dx, int dy) {\n>                 super.onScrolled(recyclerView, dx, dy);\n>                 currentScrollY+=dy;\n>                if (currentScrollY > 70) {\n>                     scrollDown = true;\n>                 } else if (currentScrollY < -5) {\n>                     scrollDown = false;\n>                 }\n>             }\n. ",
    "dushan135": "what is \"toolbarHandler\"???????????\n. what is \"toolbarHandler\"???????????\n. ",
    "dosantosdp": "**this is correct answer :**\n\n```\nrecyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {\n            @Override\n            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {\n                super.onScrolled(recyclerView, dx, dy);\n\n                if (dy >0) {\n                    // Scroll Down\n                    if (fab.isShown()) {\n                        fab.hide();\n                    }\n                } else if (dy <0) {\n                    // Scroll Up\n                    if (!fab.isShown()) {\n                        fab.show();\n                    }\n                }\n            }\n        });\n```\n. **this is correct answer :**\n\n```\nrecyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {\n            @Override\n            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {\n                super.onScrolled(recyclerView, dx, dy);\n\n                if (dy >0) {\n                    // Scroll Down\n                    if (fab.isShown()) {\n                        fab.hide();\n                    }\n                } else if (dy <0) {\n                    // Scroll Up\n                    if (!fab.isShown()) {\n                        fab.show();\n                    }\n                }\n            }\n        });\n```\n. ",
    "Igetin": "Yeah, a scaling animation should be implemented!\n. Yeah, a scaling animation should be implemented!\n. ",
    "clopeziiia": "Same problem here :( Any solution?\n. Ok, it's because this library is importing  (with gradle):\n\n compile 'com.android.support:support-annotations:21.0.3'\n    compile 'com.android.support:recyclerview-v7:21.0.3'\n    compile 'com.nineoldandroids:library:2.4.0'\n\nIf you are importing any of this libraries on your own, you should remove the import.\n\nSource: http://stackoverflow.com/questions/24527323/unexpected-top-level-exception-multiple-dex-files-define\n. Same problem here :( Any solution?\n. Ok, it's because this library is importing  (with gradle):\n\n compile 'com.android.support:support-annotations:21.0.3'\n    compile 'com.android.support:recyclerview-v7:21.0.3'\n    compile 'com.nineoldandroids:library:2.4.0'\n\nIf you are importing any of this libraries on your own, you should remove the import.\n\nSource: http://stackoverflow.com/questions/24527323/unexpected-top-level-exception-multiple-dex-files-define\n. ",
    "usmaanz": "I get the exact same issue. Has anyone got an idea to fix this issue?\n\nThis can be replicated by _simply_ having the following code:\n\n```\n<com.melnykov.fab.FloatingActionButton\n    android:layout_width=\"50dp\"\n    android:layout_height=\"50dp\"/>\n```\n. I get the exact same issue. Has anyone got an idea to fix this issue?\n\nThis can be replicated by _simply_ having the following code:\n\n```\n<com.melnykov.fab.FloatingActionButton\n    android:layout_width=\"50dp\"\n    android:layout_height=\"50dp\"/>\n```\n. ",
    "mroczis": "Solved it with\n\nfab.getDrawable().setColorFilter(getVibrantDarkColor(), PorterDuff.Mode.SRC_ATOP);\n\nSorry for senseless issue.\n. Solved it with\n\nfab.getDrawable().setColorFilter(getVibrantDarkColor(), PorterDuff.Mode.SRC_ATOP);\n\nSorry for senseless issue.\n. ",
    "RaylanXL": "so do I. so do I. so do I. so do I. ",
    "Programming4life": "My guess is surround all your main views in a FrameLayout so FrameLayout would be the top-level view or root view. \n. My guess is surround all your main views in a FrameLayout so FrameLayout would be the top-level view or root view. \n. ",
    "zoomonarak": "I'm sorry I don't know \ud83d\ude22\n.  Sorry if I do something not good \nBecause I don't know what that means I not understand English to much but my phone show I need to get it in my phone I only give it\n. I'm sorry I don't know \ud83d\ude22\n.  Sorry if I do something not good \nBecause I don't know what that means I not understand English to much but my phone show I need to get it in my phone I only give it\n. ",
    "Nxt3": "I imported it as a module, but then changed those values above to be correct values--and it worked fine.\n. I imported it as a module, but then changed those values above to be correct values--and it worked fine.\n. ",
    "xavipedrals": "Sorry, it was my fault.\n. Sorry, it was my fault.\n. ",
    "vickychijwani": "The code comes from [here](http://developer.android.com/training/material/animations.html#ViewState). The recommended value for elevation change (6 dp) is taken from the [I/O 2014 app](https://github.com/google/iosched/blob/master/android/src/main/res/values/dimens.xml#L122) and is also shown [in the documentation](http://developer.android.com/training/material/shadows-clipping.html#Elevation).\n. Great, thanks for merging!\n. The code comes from [here](http://developer.android.com/training/material/animations.html#ViewState). The recommended value for elevation change (6 dp) is taken from the [I/O 2014 app](https://github.com/google/iosched/blob/master/android/src/main/res/values/dimens.xml#L122) and is also shown [in the documentation](http://developer.android.com/training/material/shadows-clipping.html#Elevation).\n. Great, thanks for merging!\n. ",
    "jianglin612": "I winded up doing that already, it solved the issue (although required another layer) Thanks! \n. I winded up doing that already, it solved the issue (although required another layer) Thanks! \n. ",
    "Ruben2112": "@jdzuri thanks, that fixed it for me as well!\n. @jdzuri thanks, that fixed it for me as well!\n. ",
    "AleanHeart": "hey use size 24dp... you can generate it with Android Asset Studio. http://romannurik.github.io/AndroidAssetStudio/icons-generic.html#source.space.trim=1&source.space.pad=0&size=24&padding=8&color=33b5e5%2C100&name=ic_example\n. hey use size 24dp... you can generate it with Android Asset Studio. http://romannurik.github.io/AndroidAssetStudio/icons-generic.html#source.space.trim=1&source.space.pad=0&size=24&padding=8&color=33b5e5%2C100&name=ic_example\n. ",
    "raguirre": "Nevermind, I figured out what the issue was.\n\nIf anyone else out there is having this same issue, here's how I fixed it:\n\nThe reason why a square drawable works fine is because it has no transparent edges. The drawable that was causing these issues was the fab icon, since it's basically a transparent square with the icon in the center. What I needed was a drawable that was fully circular and non transparent.\nI had already defined a circle drawable in my project used for avatars so I used that one and tinted it with the fab's colorNormal and set that as the fab's imageDrawable.\n\nHere's the code:\n\n``` xml\n<!--circle_drawable.xml-->\n<layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item>\n        <shape android:shape=\"oval\">\n            <solid android:color=\"@color/white\"/>\n            <size\n                android:width=\"56dp\"\n                android:height=\"56dp\"/>\n        </shape>\n    </item>\n</layer-list>\n```\n\n``` java\n//Setting the fab drawable\nDrawable d = context.getResources().getDrawable(R.drawable.circle_drawable);\nd.mutate().setColorFilter(fab.getColorNormal(), PorterDuff.Mode.MULTIPLY);\nfab.setImageDrawable(d);\n```\n. Nevermind, I figured out what the issue was.\n\nIf anyone else out there is having this same issue, here's how I fixed it:\n\nThe reason why a square drawable works fine is because it has no transparent edges. The drawable that was causing these issues was the fab icon, since it's basically a transparent square with the icon in the center. What I needed was a drawable that was fully circular and non transparent.\nI had already defined a circle drawable in my project used for avatars so I used that one and tinted it with the fab's colorNormal and set that as the fab's imageDrawable.\n\nHere's the code:\n\n``` xml\n<!--circle_drawable.xml-->\n<layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item>\n        <shape android:shape=\"oval\">\n            <solid android:color=\"@color/white\"/>\n            <size\n                android:width=\"56dp\"\n                android:height=\"56dp\"/>\n        </shape>\n    </item>\n</layer-list>\n```\n\n``` java\n//Setting the fab drawable\nDrawable d = context.getResources().getDrawable(R.drawable.circle_drawable);\nd.mutate().setColorFilter(fab.getColorNormal(), PorterDuff.Mode.MULTIPLY);\nfab.setImageDrawable(d);\n```\n. ",
    "baolongnt": "Looks like the shadow is truncated. Try moving your button up to see what's going on. You may have a view below the FAB overdrawing the shadow. Enabling the  \"Show layout bounds\" developer setting should help too.\n. It turns out to be a bug in my layout code. I assumed that the size of the button would always be 56dp (normal) or 40dp. However, in Kitkat, the actual size is bigger because of the shadow added when implementing the elevation. \n. Looks like the shadow is truncated. Try moving your button up to see what's going on. You may have a view below the FAB overdrawing the shadow. Enabling the  \"Show layout bounds\" developer setting should help too.\n. It turns out to be a bug in my layout code. I assumed that the size of the button would always be 56dp (normal) or 40dp. However, in Kitkat, the actual size is bigger because of the shadow added when implementing the elevation. \n. ",
    "aminecmi": "So I executed `gradle debug --info`, and I have these errors:\n\n```\nResource missing. [HTTP GET: https://jitpack.io/com/melnykov/floatingactionbutton/maven-metadata.xml]\nResource missing. [HTTP GET: https://jitpack.io/com/melnykov/floatingactionbutton/]\nResource missing. [HTTP GET: https://maven.fabric.io/public/com/melnykov/floatingactionbutton/maven-metadata.xml]\n\n* What went wrong:\nA problem occurred configuring project ':app'.\n> Could not resolve all dependencies for configuration ':app:_debugCompile'.\n   > Could not resolve com.melnykov:floatingactionbutton:+.\n     Required by:\n         Notes:app:unspecified\n      > Failed to list versions for com.melnykov:floatingactionbutton.\n         > Unable to load Maven meta-data from https://jcenter.bintray.com/com/melnykov/floatingactionbutton/maven-metadata.xml.\n            > Could not GET 'https://jcenter.bintray.com/com/melnykov/floatingactionbutton/maven-metadata.xml'.\n               > peer not authenticated\n      > Failed to list versions for com.melnykov:floatingactionbutton.\n         > Unable to load Maven meta-data from https://jcenter.bintray.com/com/melnykov/floatingactionbutton/maven-metadata.xml.\n            > Could not GET 'https://jcenter.bintray.com/com/melnykov/floatingactionbutton/maven-metadata.xml'.\n               > peer not authenticated\n\n```\n\nHope it helps.\n. It appears to be related to [this](http://seclists.org/nanog/2015/Jun/588)\n. So I executed `gradle debug --info`, and I have these errors:\n\n```\nResource missing. [HTTP GET: https://jitpack.io/com/melnykov/floatingactionbutton/maven-metadata.xml]\nResource missing. [HTTP GET: https://jitpack.io/com/melnykov/floatingactionbutton/]\nResource missing. [HTTP GET: https://maven.fabric.io/public/com/melnykov/floatingactionbutton/maven-metadata.xml]\n\n* What went wrong:\nA problem occurred configuring project ':app'.\n> Could not resolve all dependencies for configuration ':app:_debugCompile'.\n   > Could not resolve com.melnykov:floatingactionbutton:+.\n     Required by:\n         Notes:app:unspecified\n      > Failed to list versions for com.melnykov:floatingactionbutton.\n         > Unable to load Maven meta-data from https://jcenter.bintray.com/com/melnykov/floatingactionbutton/maven-metadata.xml.\n            > Could not GET 'https://jcenter.bintray.com/com/melnykov/floatingactionbutton/maven-metadata.xml'.\n               > peer not authenticated\n      > Failed to list versions for com.melnykov:floatingactionbutton.\n         > Unable to load Maven meta-data from https://jcenter.bintray.com/com/melnykov/floatingactionbutton/maven-metadata.xml.\n            > Could not GET 'https://jcenter.bintray.com/com/melnykov/floatingactionbutton/maven-metadata.xml'.\n               > peer not authenticated\n\n```\n\nHope it helps.\n. It appears to be related to [this](http://seclists.org/nanog/2015/Jun/588)\n. ",
    "dekaru": "You could always use fab.show() method to restore the button's visibility after a finished swippe.\n. You could always use fab.show() method to restore the button's visibility after a finished swippe.\n. ",
    "randhika": "Still waiting for answer..\nI am get same task.\n. Still waiting for answer..\nI am get same task.\n. ",
    "fennifith": "Sorry, I fixed this issue a while ago and forgot to close it here. Moving the fab to the bottom of the layout file fixed the issue. I am kind of curious why, but it works, so the issue is closed.\n. Sorry, I fixed this issue a while ago and forgot to close it here. Moving the fab to the bottom of the layout file fixed the issue. I am kind of curious why, but it works, so the issue is closed.\n. ",
    "enriqif": "hey @Radzhab!!  could you resolve this? I cannot import the library.. \n\nRendering problems:\n       -     the following classes could not be instantiated com.melnykov.fab.FloatingActionButton\n. hey @Radzhab!!  could you resolve this? I cannot import the library.. \n\nRendering problems:\n       -     the following classes could not be instantiated com.melnykov.fab.FloatingActionButton\n. ",
    "Yichou": "listener the webview's scroll event\nwhen scroll up just call fab.hide();\nand calll fab.show(); when down\n. listener the webview's scroll event\nwhen scroll up just call fab.hide();\nand calll fab.show(); when down\n. ",
    "mhhonline": "the question how can i listen to the webview event ? \n. the question how can i listen to the webview event ? \n. ",
    "sorge13248": "Try this: http://stackoverflow.com/questions/14752523/how-to-make-a-scroll-listener-for-webview-in-android.\nIt should works.\n. Try this: http://stackoverflow.com/questions/14752523/how-to-make-a-scroll-listener-for-webview-in-android.\nIt should works.\n. ",
    "iceteahh": "Use `ObservableScrollView` instead `ScrollView`\n. Use `ObservableScrollView` instead `ScrollView`\n. ",
    "beraldofilippo": "In the meantime check this out https://lab.getbase.com/introduction-to-coordinator-layout-on-android/\n\nWould be cool anyway to have it implemented natively inside the library!\n. In the meantime check this out https://lab.getbase.com/introduction-to-coordinator-layout-on-android/\n\nWould be cool anyway to have it implemented natively inside the library!\n. ",
    "flaff": "I'm missing that one too :)\nThe original fab from appcompat doesn't hide on scroll and loses background on older andies(GB)\n. make sure you are editing\nfab:fab_colorNormal\nin your xml layout.\n. I'm missing that one too :)\nThe original fab from appcompat doesn't hide on scroll and loses background on older andies(GB)\n. make sure you are editing\nfab:fab_colorNormal\nin your xml layout.\n. ",
    "MohammadAbbasKhan": "found an answer use this\n\nfab.setColorNormalResId(R.color.fab_colorNormal);\n\nand set color for pressed and ripple similarly\n. found an answer use this\n\nfab.setColorNormalResId(R.color.fab_colorNormal);\n\nand set color for pressed and ripple similarly\n. ",
    "JackLauu": "Yes, the color only could be changed by code,  can't get it from xml. How to solve it ?\n. Yes, the color only could be changed by code,  can't get it from xml. How to solve it ?\n. ",
    "iamtodor": "@JackLauu `fab:fab_colorNormal=\"@color/fab_background\"` this works for me. Don't know how to change item's color inside, for example: I use android:src=\"@android:drawable/ic_input_add\" I want to change + color..\n. @JackLauu `fab:fab_colorNormal=\"@color/fab_background\"` this works for me. Don't know how to change item's color inside, for example: I use android:src=\"@android:drawable/ic_input_add\" I want to change + color..\n. ",
    "xtonousou": "To change color guys you should declare namespace\n`xmlns:fab=\"http://schemas.android.com/apk/res-auto\"`\nand not\n`xmlns:fab=\"http://schemas.android.com/tools\"`\n\nAfter you do that, you can change the color programmatically or with xml.\n. To change color guys you should declare namespace\n`xmlns:fab=\"http://schemas.android.com/apk/res-auto\"`\nand not\n`xmlns:fab=\"http://schemas.android.com/tools\"`\n\nAfter you do that, you can change the color programmatically or with xml.\n. ",
    "vassilisimon": "https://github.com/makovkastar/FloatingActionButton/issues/54\n. https://github.com/makovkastar/FloatingActionButton/issues/54\n. ",
    "dmkf1024": "![image](https://cloud.githubusercontent.com/assets/12218174/20167186/c14247c6-a754-11e6-8125-44a6a8973dc5.png)\n\nYour can try changing the value of **mScrollThreshold**, the default value is belowing:\n![image](https://cloud.githubusercontent.com/assets/12218174/20167220/ffd7e324-a754-11e6-850d-ed6e8896c686.png)\n. I've solve the problem. \n\n```\napp:fab_colorNormal=\"@android:color/transparent\"\n```\n. ![image](https://cloud.githubusercontent.com/assets/12218174/20167186/c14247c6-a754-11e6-8125-44a6a8973dc5.png)\n\nYour can try changing the value of **mScrollThreshold**, the default value is belowing:\n![image](https://cloud.githubusercontent.com/assets/12218174/20167220/ffd7e324-a754-11e6-850d-ed6e8896c686.png)\n. I've solve the problem. \n\n```\napp:fab_colorNormal=\"@android:color/transparent\"\n```\n. "
}