{
    "omab": "@RonnyPfannschmidt, at first glance it doesn't, but that's what allows you to do `from social.apps.flask_app.models import UserSocialAuth` in your project (after `init_social()` was called of course).\n. @RonnyPfannschmidt, `FlaskStorage` is needed to be on some import path since it's used by the strategy, you can see how the default value is used https://github.com/omab/python-social-auth/blob/master/social/apps/flask_app/utils.py#L10, there's no need to have the others classes since they are accessible through `FlaskStorage`, I'm willing to remove those from `globals()`.\n\nI'm not comfortable with this solution, having that `init_social()` looks awful IMO and I really like to get rid of that.\n. Code was improved, seems that this can be closed now.\n. Thanks!\n. @maxcountryman, this application was derived from [django-social-auth](https://github.com/omab/django-social-auth), which got [this issue](https://github.com/omab/django-social-auth/issues/520) raised some time ago. By the time I got a chance to work on it I've checked the available options around and rauth was very promising with a clean API, but the lack of Python 3 support ruled it out.\n\nRight now I'm happy with the result with using oauthlib and requests-oauthlib, so I'm not planing on changing it right now, but I'm not discarding it just now since it provides a clean API that could be useful for users using this app too.\n\nBTW, the comment on HN was mine.\n. I don't see a point on doing this migration right now, maybe in the future I can work on it, but so far `request_oauthlib` has been working very well.\n. Have you tried running `python manage.py syncdb` in the sample app? There's a manager command defined for that, I've just tried it with sqlite and postgresql and it worked as expected.\n. pip package differs (I'm waiting to finish the tests to make a new release), don't run `python manage.py migrate run`, use `python manage.py syncdb`.\n. I've released v0.1.1 to pypi, could you try again?\n. No problem, I'm closing the issue, reopen if needed.\n. Thanks!\n. I've merged this manually since github couldn't do it, thanks @uruz!\n. @gsakkis, `get_user_details()` should be defined on the backend that works with django-auth mechanism, while `user_data()` belongs to the authentication class used by DSA. In your case `user_data()` should call that service and retrieve the needed user information, then on `get_user_details()` you should transform that data into the expected format for DSA which is:\n\n```\n{\n    'username': <username if any>,\n    'email': <user email if any>,\n    'fullname': <user full name if any>,\n    'first_name': <user first name if any>,\n    'last_name': <user last name if any>\n}\n```\n. @gsakkis, when I wrote my previous reply I thought I was on django-social-auth project, not python-social-auth, it still applies (kinda), so let me rewrite it.\n\n`user_data()` should call the service that provide the extra user information, then `get_user_details()` must transform it to into the format that PSA expect, which is:\n\n```\n{\n    'username': <username if any>,\n    'email': <user email if any>,\n    'fullname': <user full name if any>,\n    'first_name': <user first name if any>,\n    'last_name': <user last name if any>\n}\n```\n. I think we can close this one.\n. Thanks!\n. Thanks for porting this backend, there are a few I need to port back from DSA, I've left a comment on the diff, if you make that small change I'll merge it immediately. \n. Thanks!\n. Thanks for the fix, DSA already has a solution for this issue which I didn't had time to sit and port to PSA.\n. Thanks!\n\n@san-mate, a change I want to implement is to avoid the mandatory `response` parameter in that auth process, unless you want to take the task?\n. Thanks!\n. Thanks\n. Could you detail the error? A traceback maybe?\n. @rday, no hurries, thanks. I'll close this one.\n. This should be fixed already.\n. It shouldn't be passed since the parameter is defined by name in the function prototype, how's the definition of the URL to that view?\n. Thanks, I've merged the change but updated it a little, check it here https://github.com/omab/python-social-auth/blob/master/social/strategies/flask_strategy.py#L58\n. Fixed https://github.com/omab/python-social-auth/commit/a51a6ac47d882015876ed45572e161f4d65ed43f, thanks!\n. Thanks!\n. @kennethkoontz, it's supported, here's the backend https://github.com/omab/django-social-auth/blob/master/social_auth/backends/contrib/linkedin.py#L60 and the URL should be `/login/linkedin-oauth2/`\n. According to Google, the `refresh_token` is only sent once (the first time), if you want it again the user must revoke your application access and then re-auth with it.\n. The re-auth is required by google, you talk about another issue which is already solved in python-social-auth.\n. Could you paste the value for redirect URI defined on Instagram and the value being passed by the application?\n. @mikepurvis, I've just tested it and worked as expected (last code revision), any chance the error happens on a custom pipeline?\n. No problem, thanks for the update and closing this.\n. @ondrowan, I'll check the steamid issue, it's odd since the [code](https://github.com/omab/python-social-auth/blob/master/social/backends/steam.py#L37) returns the match, otherwise an exception is raised.\n\nThis lib will replace django-social-auth, in fact I'm about to merge this [branch](https://github.com/omab/django-social-auth/tree/psa2) to make the migration step easier.\n. @ondrowan, which python version are you using? I've tried the backend and worked as expected, any other detail to try to mimic your setup?\n. @ondrowan, I've dropped the regex search on steam backend, could you give it another try?\n. Thanks!\n. @systemizer, thanks for the contribution, I've left a comment in the first changeset, please check.\n. Awesome, merged. Thanks!\n. Do you have an example where quoted chars don't work? Or some doc?\n. The problem with this PR is that it breaks the `redirect_state` parameter that's added to the `redirect_uri` value if the class has `REDIRECT_STATE = True`, this parameter is not part of the standard of course and it was added to implement an extra layer of protection, it work like the `state` parameter but and it's validated on the server side when the provider redirects back to the site. This is possible because many providers redirect back to the value of `redirect_uri` instead of using the value registered in the application (which shouldn't work that way but OAuth2 is broken on many services).\n. @romanalexander, I agree with that small change and was thinking that it was the only way to fix this while not breaking the other backends.\n. Thanks!\n. @ceelian, I've added pyramid support to the library, the docs are available here http://psa.matiasaguirre.net/docs/configuration/pyramid.html and also added an example application here https://github.com/omab/python-social-auth/tree/master/examples/pyramid_example.\n\nI'm sure that some things can be done better since this is my first time playing with the pyramid framework, any feedback is well welcome.\n. @jswain, issues fixed. Thanks!\n. @bjunix, I've fixed the docs and also updated other settings that weren't correct, the docs were originally from `django-social-auth` so a few names weren't correct.\n\nThanks!\n. Thanks!\n. Thank!\n. Thanks!\n. @antisvin, changed, please test. Thanks!\n. @dblado, try with this setting:\n\n``` python\nSOCIAL_AUTH_LINKEDIN_OAUTH2_EXTRA_DATA = [\n    ('id', 'id'),\n    ('first-name', 'firstName'),\n    ('last-name', 'lastName'),\n    ('summary', 'summary'),\n    ('email-address', 'emailAddress'),\n    ('headline', 'headline'),\n    ('positions', 'positions'),\n    ('industry', 'industry'),\n    ('educations', 'educations')\n]\n```\n. @dblado, sorry, typed too quickly, this is the correct value for that setting:\n\n``` python\nSOCIAL_AUTH_LINKEDIN_OAUTH2_EXTRA_DATA = [\n    ('id', 'id'),\n    ('firstName', 'first_name'),\n    ('lastName', 'last_name'),\n    ('summary', 'summary'),\n    ('emailAddress', 'email_address'),\n    ('headline', 'headline'),\n    ('positions', 'positions'),\n    ('industry', 'industry'),\n    ('educations', 'educations')\n]\n```\n\nThe settings will be under `s.extra_data['first_name']`, `s.extra_data['last_name']`, `s.extra_data['email_address']`\n. Cool, I'm closing the issue.\n. I cannot reproduce it:\n\n```\n$ pip freeze | grep Django\nDjango==1.5.4\n$ python manage.py syncdb --noinput\nCreating tables ...\nCreating table auth_permission\nCreating table auth_group_permissions\nCreating table auth_group\nCreating table auth_user_groups\nCreating table auth_user_user_permissions\nCreating table auth_user\nCreating table django_admin_log\nCreating table django_content_type\nCreating table django_session\nCreating table django_site\nCreating table social_auth_usersocialauth\nCreating table social_auth_nonce\nCreating table social_auth_association\nInstalling custom SQL ...\nInstalling indexes ...\nInstalled 0 object(s) from 0 fixture(s)\n```\n\nSome more details? Maybe something related with another installed app?\n. Any chance you have the full traceback?\n. @ArmyZRdz, the change above fixes the incompatibility with django-evolution.\n. `/complete/facebook/` is called to complete the auth process, if sucessful you will get redirected to `/` after that. Do you have a custom pipeline? Is this a partial pipeline?\n. Seems like the values being saved in the session during partial-pipeline operations should be cleaned up a bit in order to avoid this issues. Previously this wasn't an issue because the default serialization method was pickle, but that's going to change shortly in Django 1.6.\n. The changes above take care of the serialization problem.\n. Which version of mongoengine? What happens when you try this on a django-shell:\n\n``` python\nfrom mongoengine.django.auth import User\n```\n\nor:\n\n``` python\nfrom social.utils import module_member\nprint module_member('mongoengine.django.auth.User')\n```\n. Was trying this my self and seems that the default value for `AUTH_USER_MODEL` is causing errors, the default value is `auth.User` which refs to `django.contrib.auth.models.User`. But defining it to `mongoengine.django.auth.User` django complains about the format not being `app_name.ModelName`, defining `SOCIAL_AUTH_USER_MODEL = 'mongoengine.django.auth.User'` solves the issue.\n. According to your settings on SO you have `'social.apps.django_app.default'` in your installed apps, remove that one.\n. No problem.\n. Could you list the content-types in registered in your app? I think that the CT for `UserSocialAuth` changed since the app name change on PSA.\n. Add these entries to the top of you pipeline setting:\n\n``` python\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n```\n\nSo, it should look like:\n\n``` python\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.social_auth.associate_by_email',\n    'social.pipeline.user.get_username',\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details',\n    'accounts.social_auth_pipeline.get_profile_data', # custom\n    'accounts.social_auth_pipeline.get_profile_avatar', # custom\n)\n```\n. @nmundar, user will be an `AnonynousUser` before this line https://github.com/omab/python-social-auth/blob/master/social/actions.py#L56 (actually a little above, before any `user = ...` line). And the `strategy.authenticate` will always have `kwargs['user']` equal to `None` unless this is an association with an already created account. Does your custom pipeline entries return anything? Does the process work if you comment those two?\n. @nmundar, any luck with this? I don't see any problem with your settings or pipeline methods.\n. So far I wasn't able to reproduce this issue. @jasonwaters could you set a `try-except` block around these lines https://github.com/omab/python-social-auth/blob/master/social/backends/base.py#L72-L83 and check if there's any exception raised there?\n. Could you determine the two arguments passed?\n. @jasonwaters, from the last screenshot `social_details()` is getting arguments from `**kwargs`. How did you install `python-social-auth`, pip or cloning the repository?\n. @jasonwaters, I was able to reproduce your case and I'm working on a fix\n. @jasonwaters, I've released `v0.1.15`, could you give it a try?\n. Wrong handling of arguments passed to the pipeline.\n. I've fixed the error processing, please try again.\n. Thanks for the report\n. @suntzuII, disconnect doesn't mean logout, it will just disconnect the social reference to the user account. If you need to also logout the user that's apt to your project requirements and depends on you. You can do it easily by logout out the user in a pipeline method in the disconnect pipeline.\n. Changed, thanks!\n. I've updated the docs, thanks!\n. Thanks!\n. Thanks!\n. Yeah, your settings are wrong, they should be `SOCIAL_AUTH_AMAZOM_KEY` and `SOCIAL_AUTH_AMAZOM_SECRET`.\n. Cool, good to know, I was testing it right now and worked as expected. The same with Linkedin (OAuth1 and OAuth2 versions).\n. `/login/linkedin` is for OAuth1, `/login/linkedin-oauth2` is for OAuth2. The same keys work for both backends but they don't share the setting names, `SOCIAL_AUTH_LINKEDIN_KEY` and `SOCIAL_AUTH_LINKEDIN_SECRET` for OAuth1 backend, and `SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY` and `SOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET` for OAuth2 backend.\n. You mean a TODO list with pending features to implement?\n. There's no official TODO list, the main sections needed improvements are:\n- Documentation\n- Example application\n- Tests (framework related tests)\n- Support for more frameworks\n- More backends\n. The URL in the link says `http://` but your error message says `https://`, so what's the correct value? Is your local service running over SSL? Is your value in amazon settings set to `https`?\n. I guess that you are behind Nginx but not passing all the needed headers to tell the python framework that's running over SSL, try defining this setting:\n\n``` python\nSOCIAL_AUTH_AMAZON_REDIRECT_IS_HTTPS = True\n```\n. Could you share the proxy definition?\n. The error doesn't help because it happens on Amazon, but it's clearly that the issue is the `http://` redirect url. I'm interested in the headers being passed to the backend from nginx (specially the `proxy_set_header` calls.\n. And who's setting `X-Forwarded-SSL` to `on`?\n. So, you have an Nginx proxy in front of Apache, that nginx instance sets that header, Apache sets the `HTTPS` value to `1` if the header was defined, questions:\n1. Do you see the value for `X-Forwarded-SSL` in your app?\n2. Do you see the value for `HTTPS=1` in your app?\n3. What happens if you define this setting `SECURE_PROXY_SSL_HEADER = ('HTTPS', '1')`? \n. Well, the header name is `HTTP_HTTPS`, so try with this value instead: `SECURE_PROXY_SSL_HEADER = ('HTTP_HTTPS', 'on')`\n. I can't think of any other setting that manages the SSL protocol in URIs, setting `SECURE_PROXY_SSL_HEADER` to `('HTTP_X_FORWARDED_PROTO', 'https')` or `('HTTP_HTTPS', 'on')` should do the trick for Django to check if SSL is active in the current request. Also setting `SOCIAL_AUTH_AMAZON_REDIRECT_IS_HTTPS = True` which is a major override in the application to enforce `https://` (check here https://github.com/omab/python-social-auth/blob/master/social/strategies/base.py#L113-L117 to see how it's used), check that the app is being restarted/reloaded properly, those settings should do the trick.\n. You can set that value too but the `setting` method being invoked will check for the following names (and return the first one that's present): `SOCIAL_AUTH_AMAZON_REDIRECT_IS_HTTPS`, `SOCIAL_AUTH_REDIRECT_IS_HTTPS`, `REDIRECT_IS_HTTPS`.\n. My bad, the setting is used at the strategy level and not the backend leve, so the backend name in the setting makes nothing, only `SOCIAL_AUTH_REDIRECT_IS_HTTPS` and `REDIRECT_IS_HTTPS` are taken into account.\n. There's no logging mechanism for that, but you can write a middleware that takes those cases into account and act accordingly.\n. Thanks!\n. Any extra data defined on by `*_EXTRA_DATA` setting is stored in the `extra_data` attribute of the social model which can be accessible like this:\n\n``` python\n# Assuming Facebook as social account\nsocial = user.social_auth.filter(provider='facebok')[0]\nsocial.extra_data['gender']\n```\n. Probably, depends on your project, if it's used on a single view, then just do it in the view, otherwise write a templatetag.\n. Thanks!\n. using `load_strategy()` at `social.apps.django_app.utils`.\n. I see your code but not an error explanation, what happens when you run that code? What do you mean with \"There is no SOCIAL_AUTH_GOOGLE_OAUTH2_KEY\"? That's a needed setting to enable google-oauth2 backend.\n. @kakky, I've checked the process, the problem was the parameters being passed to the request, since Google OAuth2 uses `POST` the parameters should be passed in the `data` argument instead of `params`. This is fixed now, could you test and close the ticket if looks OK?\n. No problem!\n. They should be different, `done` view is reached after a redirect, so the request is completely different. What happens when you reach that view?\n. Since this change https://github.com/django/django/commit/dc43fbc2f21c12e34e309d0e8a121020391aa03a Django enforces authentication backends to be defined on `AUTHENTICATION_BACKENDS` setting, but this app uses a wrapper in order to get access to the Strategy which is unknown to backends and app-dependent, but the wrapper is not defined in `AUTHENTICATION_BACKENDS`, adding it makes it work again and until some decoupling is done in the project I don't see any other fix, so I'll recommend this setting until I find a better solution.\n. @gitmiette, check docs here http://psa.matiasaguirre.net/docs/configuration/django.html#django-1-6\n. This change solved that the same day the fix was introduced:\n\nhttps://github.com/omab/python-social-auth/commit/ebaa4b564485a1ebc2e485d7229628b6deb65911\n\nExcerpts from Yu Yang's message of 2013-10-11 08:26:46 -0200:\n\n> @omab this change breaks normal login. for example when I login in admin page, it gives an AttributeError:\n> \n> ```\n> 'BackendWrapper' object has no attribute 'authenticate'\n> ```\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> \n> ## https://github.com/omab/python-social-auth/issues/53#issuecomment-26127698\n> \n> Mat\u00edas Aguirre (matiasaguirre@gmail.com)\n. Done https://github.com/python-social-auth. Check this comment https://github.com/omab/python-social-auth/issues/34#issuecomment-24828967, you are using OAuth1, but try those names anyway (see that attributes names follow camel-case format).\n. Actually switching the settings and the backend name should be enough, unless LinkedIn decided to break that migration option. Any luck on your end?\n. @dblado, thanks for the clarification, I've added a reference in the docs regarding that.\n. Awesome, thanks!\n. I've pushed the fixed tag, thanks!\n. Thanks!\n. @vargi, link the user to `/login/<backend name>`. The same URL works for logged out and logged in users.\n. Like on `django-social-auth` user association by email is disabled by default, in order to enable it you need to override the pipeline setting with this value:\n\n``` python\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'social.pipeline.social_auth.associate_by_email',  # <-- this one does the trick\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details'\n)\n```\n\nUser association by username was never a feature of `django-social-auth` or `python-social-auth`, doing that would be too easy to take over another user account.\n. I don't think it's related, I've tried the tests with your fix and they pass without troubles. Thanks!\n. @hannseman, Travis-CI issue was related to recent changes to `python3-openid`, not with your changes.\n. Thanks!\n. @myers, go ahead, all contributions are welcome.\n. Thanks!\n. Any error? This snipped proved to work:\n\n``` python\nfrom social.apps.django_app.utils import strategy\n\n@strategy()\ndef register_by_access_token(request, backend):\n    backend = request.strategy.backend\n    user = request.user\n    user = backend.do_auth(\n        access_token=request.GET.get('access_token'),\n        user=user.is_authenticated() and user or None\n    )\n    ...\n```\n\nAlso an URL with this format is needed:\n\n``` python\nurl(r'^register/(?P<backend>[^/]+)/', register_by_access_token)\n```\n. @simonluijk, instead of calling `login(request, user)` try with `_do_login(strategy, user)` which can be imported with `from social.apps.django_app.views import _do_login`.\n. @nwilson5, which version of `python-social-auth` are you using? `_do_login()` in last codebase was simplified a lot removing a workaround for django auth mechanism.\n. @nwilson5, tt's set here https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/__init__.py#L18\n. @julienaubert, a new parameter was added to `_do_login`, I know it breaks compatibility but `_do_login` should be considered an internal function. The new parameter is the `social_user` which I'm sure you have available in your view.\n\nAs you pointed the usual Django `login` should work also.\n. @antitoxic, check the prototype https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/views.py#L33\n. I wasn't able to reproduce your error so far. Why are you defining `AUTH_USER_MODEL` to be different than the others?\n. Looks like a mongoengine issue to me than PSA. Reopen if needed.\n. Thanks!\n. Which framework? Do you have the requests details?\n. @josseph, found the bug, will push a fix shortly.\n. @josseph, I don't get it, success or not? From your traceback it looks like the same issue from the beginning. How did you install python-social-auth?\n. Thanks!\n. Awesome, thanks!\n. Merged, thanks for your work and sorry about the delay.\n. @kdazzle, it was a bug introduced by 5fbdfe8a108bdb136963efd896be96fcf4ef1b5f\n. Thanks!\n. @kbussell, thanks!\n. Thanks!\n. @Salma7amed, try with a code like this\n\n``` python\nfrom requests import request, HTTPError\n\nfrom django.core.files.base import ContentFile\n\n\ndef save_profile_picture(strategy, user, response, details, is_new=False,\n                         *args, **kwargs):\n    # Save Facebook profile photo into a user profile, assuming a profile model\n    # with a profile_photo file-type attribute\n    if is_new and strategy.backend.name == 'facebook':\n        url = 'http://graph.facebook.com/{0}/picture'.format(response['id'])\n\n        try:\n            response = request('GET', url, params={'type': 'large'})\n            response.raise_for_status()\n        except HTTPError:\n            pass\n        else:\n            profile = user.get_profile()\n            profile.profile_photo.save('{0}_social.jpg'.format(user.username),\n                                       ContentFile(response.content))\n            profile.save()\n```\n\nPut that into the pipeline and it should do the trick. The code wasn't tested, but should help to get you started).\n. I don't see any social login there, just a `UserSocialAuth` instance being saved that's not used at all.\n\nThe problem with testing social authentication is the dependency with the third-parties that provider that auth for you, that's slow, prone to error and any user looking to run the tests need to register an application and define keys/secret for the desired backends. That's why tests on PSA are written using `HTTPPretty` to mock the server responses and focus on functionality testing instead.\n. I wasn't able to reproduce this, the user details endpoint is working properly here. Maybe some trouble with your API Key?\n. Thanks! I'll introduce a new exception type to flag the backend error and catch that one instead of `ValueError`.\n. @vargi, move `associate_by_email` above `create_user`.\n. @aroraprince, yes, that will work if the user has the same email address.\n. @aroraprince, which OAuth backend? Is email being sent by that backend?\n. Are you testing with a clean db?\n. @aroraprince, not sure if I follow, it's working fine now?\n. I was asking about the DB because sometimes users left the account created by python-social-auth in place, so second attempts are actually getting that account again.\n. Setting names should be `SOCIAL_AUTH_WEIBO_KEY` and `SOCIAL_AUTH_WEIBO_SECRET`.\n. Thanks!\n. Thanks!\n. Thanks!\n. @cgreinke, please check the fix. Thanks!\n. Awesome, thanks!\n. Can't use `u'...'` because of Python 3, need to check further.\n. Thanks!\n. The change introduced simplifications to the code that should keep the feature working, do you see anything wrong in the change?\n. Thanks!\n. BTW, docs updated at http://psa.matiasaguirre.net\n. @devangmundhra, no, you need the `@strategy` decorator now (`from social.apps.django_app.utils import strategy`)\n. @devangmundhra, there's no tables rename, but you might need to run a `syncdb` and delete the `social_auth` content type from the content-types table.\n\nPipelines are now stored on `social.pipeline`, there are a few extra ones, but the names are mostly the same, check the default setting here http://psa.matiasaguirre.net/docs/pipeline.html#authentication-pipeline. If you happen to have custom pipelines, the parameters are the same, plus the `strategy` in case you need it. Partial pipelines still work but the `save_status_to_session` is located at `social.pipeline.partial` now, there's also a decorator `@partial` in that same module that can be used instead of `save_status_to_session`, it's cleaner that way.\n\nSetting names must be prefixed with `SOCIAL_AUTH_`, some backends were renamed a little (not the popular ones like Google, Facebook and Twitter).\n. @mikek, that change should get rid of the issue.\n\nThanks for the report!\n. Thanks!\n. Docs updated.\n. Solution merged, thanks!\n. @russian-master, now you can do:\n\n``` python\nfrom social.pipeline import DEFAULT_AUTH_PIPELINE\n\nSOCIAL_AUTH_PIPELINE = DEFAULT_AUTH_PIPELINE + ('myproject.models.user_profile_data',)\n```\n. Thanks!\n. Could you share the full traceback?\n. Try expanding the context near the exception line, that should list the current variables, my guess is that a parameter used in the OAuth1 request is `None`, but it could be many things, from custom scopes or custom auth parameters, to wrong names in the key / secret settings.\n. @Sourabh87, this is unrelated to `python-social-auth`, you should ask in https://github.com/tweepy/tweepy instead.\n. Try with this:\n\n``` python\nfrom social.strategies.utils import get_current_strategy\n\n# given a user instance (could be from request.user)\nsocial = user.social_auth.get(provider='vk')\nstrategy = get_current_strategy()\nbackend = social.get_backend(strategy)\n```\n. @maikhoepfel, thanks for the report, it was already raised by the same user here too and a fix was already introduced https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/utils.py#L34-L44.\n. @maikhoepfel, no problem, thanks for the report anyway!\n. Thanks!\n. @valeriansaliou, the setting in python-social-auth is named `SOCIAL_AUTH_FACEBOOK_SCOPE = ['email', ...]`\n. Do you know the value name that was set to `None`? This issue looks similar to #101\n. @javieraxiacore, the intention of the original code is to properly set the username field defined by `USERNAME_FIELD` using `username` which is used internally by `python-social-auth` to identify the value that will be used as the final username. Basically `username` is for internal use, which is later translated to `USERNAME_FIELD`.\n. Thanks!\n. It shouldn't be passed since the parameter is defined by name in the function prototype, how's the definition of the URL to that view?\n. ```\n File \u201c../apps/accounts/api.py\", line 78, in obj_create\n    user = register_by_access_token(bundle.request, \"facebook\", [], **info)\n```\n\nWhat's the content of `info` in that line?\n. @simonluijk, after checking Linkedin docs, it looks like your approach is correct. It looks like their JSAPI token exchange resembles a lot to OAuth 1.0a unauthorized-token exchange. The change above should simplify your overrides needed to get this working.\n. There's no way in the app and the way to do it is by the pipeline.\n. This breaks db syncing:\n\n``` shell\n[psa] mintaka \u00b1 python-social-auth VShell-patch-1 ~/s/p/examples/django_example\n$ python manage.py syncdb --noinput\nCreating tables ...\nCreating table auth_permission\nCreating table auth_group_permissions\nCreating table auth_group\nCreating table auth_user_groups\nCreating table auth_user_user_permissions\nCreating table auth_user\nCreating table django_admin_log\nCreating table django_content_type\nCreating table django_session\nCreating table django_site\nInstalling custom SQL ...\nInstalling indexes ...\nInstalled 0 object(s) from 0 fixture(s)\n```\n. Try with this:\n\n``` python\nfrom social.apps.django_app.utils import load_strategy\n\nstrategy = load_strategy(backend='MyOAuth')\nsocial = request.user.social_auth.get(provider='MyOAuth')\nbackend = social.get_backend(strategy)\nbackend.oauth_request(...)\n```\n. That last change (not released to pypi yet) introduced a helper to get the backend instance, it should be enough to do:\n\n``` python\nsocial = request.user.social_auth.get(provider='MyOAuth')\nbackend = social.get_backend_instance()\n```\n. My bad, the first snippet returns a backend class, you need to create an instance with `backend = backend(strategy=strategy)` before calling `oauth_request(...)`.\n. The URL should be encoded https://github.com/omab/python-social-auth/blob/master/social/backends/oauth.py#L262-L265, `auth_params()` returns the `redirect_uri` value.\n. Closing by inactivity, reopen if needed.\n. Thanks!\n. If users signup in your site with Facebook, then `user.username` should be the Facebook username, but you can define: `SOCIAL_AUTH_FACEBOOK_EXTRA_DATA = ['username']` and it will be stored in `social.extra_data` `dict` under the key `username`.\n. @YAmikep my `local_settings.py` is only used to define application keys and secrets and email server credentials (only needed when email confirmation pipeline is enabled) and that's all.\n\nHow does your `/signup-email/` view work? Is it related to `python-social-auth` in some way? If it only creates a `User` instance, then it won't work with `python-social-auth`.\n. Closing by inactivity, reopen if needed.\n. I've merged your pull-request. Thanks!\n. Thanks!\n. Thanks!\n. Fixed, thanks for the report.\n. UTF-8 not supported?\n. Thanks!\n. I don't see anything broken with python-requests 2.1.0, any details on what breaks?\n. Cool, thanks!\n. @roberto-robles, the change above should fix your issue. Thanks for the report!\n. Awesome, thanks!\n. Thanks Kevin! How's it going?\n. `social.apps.django_app.utils.BackendWrapper` is not needed anymore, you can remove that from `AUTHENTICATION_BACKENDS`.\n. @Diolor, then that could be caused by previous session value, if you clean the session it should be back to normal, this is not ideal since it could imply clearing many user valid sessions, I can restore the backend if needed.\n. @Salma7amed, clear you sessions table in the db.\n. @Salma7amed, do you have `social.apps.django_app.utils.BackendWrapper` in `AUTHENTICATION_BACKENDS`? If that's the case remove it.\n. @Salma7amed, there's any traceback? Maybe it's not the same issue.\n. Which is your session backend? Following the code it's clearly caused by a bad value in the user session.\n. @Salma7amed, actually I'm asking about your session storage, how's the session data being saved, it's on the database? it's fully cookie based?\n. I've restored `BackendWrapper` to avoid these session issues.\n. Thanks!\n. Thanks!\n. `BACKENDS` is defined as `settings.AUTHENTICATION_BACKENDS` which imported from `django.conf`, the usual way. Which is the value in a django shell?\n. Maybe something is different in your settings loading in your setup?\n. @aneumeier, any progress on your end?\n. Closing, reopen if needed.\n. I'm not planing to do so, usually a website enables a few backends and won't iterate over a long backends list, so you will write links in the form `<a href=\"{% url 'social:begin' 'google-oauth2' %}\">Google</a>`. It might be even simple to create a custom filter in your project that does:\n\n``` python\ndef backend_friendly_name(backend):\n    return {\n        GoogleOAuth2: 'Google',\n        TwitterOAuth: 'Twitter',\n        FacebookOAuth2: 'Facebook',\n        ...\n    }[backend]\n```\n. Thanks!\n. Thanks!\n. Thanks!\n. Docstrings were wrong, which is the issue with tumblr?\n. @empty, please review the fix and close the ticket if that's OK. Thanks for the report!\n. @empty, actually using `response` there is the correct value since `details` is a refined value from response with basic user data to create the instance later, `ID_KEY` is not expected on that value. Could you share the `response` value for tumblr?\n. @empty, with 9d45d50 looks better?\n. Looks fixed, I'll close the issue, reopen if needed.\n. I think you are looking for \"?next=...\" query string parameter.\n. @geekan, let's clarify a little, your user is at a page, clicks login and after login he should be back to the original page, is that what you are looking for? If that's the case, build your login URLs to have the current path in a next parameter, like:\n\n``` django\n<a href=\"{% url 'social:begin' 'google-oauth2' %}?next={{ request.path }}\">Login with Google</a>\n```\n. @geekan, as usual, always escape querystring parameters.\n. Docs here http://psa.matiasaguirre.net/docs/use_cases.html#return-the-user-to-the-original-page\n. Could you share your pipelines?\n. @lorddaedra, could you try again with the last reviesion on master?\n. Cool, I'm gonna release it. Thanks!\n. @vzima, dependencies are also listed in `requirements.txt`\n. Thanks!\n. Thanks!\n. @jcouyang, I've applied some PEP8, there were some `django-social-auth` bits still around, any chance to get some simple docs regarding how to setup the backend added to the docs section?\n\nThanks!\n. `SOCIAL_AUTH_USER_MODEL` follows the same convention than `AUTH_USER_MODEL` (check https://docs.djangoproject.com/en/dev/topics/auth/customizing/#auth-custom-user) which is `appname.modelname`. In your case I guess it should be `custom_auth.User`.\n. Thanks!\n. @roberto-robles, the PR looks good but I've left a comment on it, thanks for spotting the issue, if you do that little change I'll merge it.\n. PR merged, thanks!\n. Thanks!\n. Awesome, thanks!\n. Any traceback in the log? Which is the key?\n. Do you have the full URL that's triggering that error? The missing `code` parameter means that something is going wrong in the auth process.\n. I've tried to login with Facebook on your site and it worked OK, I was wondering if you have the exact URL that triggered the traceback, like `http://order.saludable.me/complete/facebook/?...`\n. @Salma7amed, @tklovett, python social auth checks the case of hitting the `Cancel` button and raises `AuthCanceled` exception, which can be handled easily with the exceptions middleware at `social.apps.django_app.middleware.SocialAuthExceptionMiddleware` (add it to the middlewares setting), and also define `SOCIAL_AUTH_LOGIN_ERROR_URL` or if you prefer `SOCIAL_AUTH_FACEBOOK_LOGIN_ERROR_URL`. In that page you can show the users a nicer error page, the URL will get a couple of querystring parameters `message` and `backend` which are the exception message and the backend name.\n. So, hitting the Cancel button is not the way to reproduce the original report, right?\n. @Salma7amed, so, which is the full URL that triggers that error?\n. @Salma7amed, I'm looking for the full URL, I want to see the parameters being sent by Facebook to your site.\n. @Salma7amed, could you forward me that email or does it have any sensible data? What about your server logs? At some point the traceback should appear there with a full URL above that triggered the bug.\n. @Salma7amed matiasaguirre@gmail.com\n. @Salma7amed, I've checked your email, where's `?ref=search&fb_source=search` appended to the complete URL? It's something from your code? Or something defined in the Facebook app? There's any chance these clients request come from some indexed data or bots hitting your service?\n. @Salma7amed, any chance that this is being caused by a mobile client? So far I see the wrong parameters being sent to `/complete/facebook/`, how is that happening I don't know, could be a bug on Facebook or the URL is being triggered by hand.\n\nI've added a change to catch the missing parameter and raise a social exception that can be processed with the middleware.\n. @Salma7amed, I've just released `v0.1.19` which carries the fix. This won't help on finding the root of the issue but will give you control over the 500 error. So far my understanding of the problem is that at some point something is following the URL `/complete/facebook/`, the extra parameters look suspicious to me. I would recommend to check the server log and check the auth process before that error, also check the referrer for the one that triggers the error.\n. Yes, that's expected since there are missing parameters to continue the process. As mentioned in my previous comment,  I would check the server log and check the auth process before that error, also check the referrer for the request that triggers the error.\n. @Salma7amed, any progress on your end? Can I close this issue?\n. Closing by inactivity.\n. The [pipeline code](https://github.com/omab/python-social-auth/blob/master/social/backends/base.py#L97) doesn't catch exceptions, so the \"non-dictionary resposes will be taken as HTTP\" doesn't apply here, the issue resides on another section of the code.\n. Closing by inactivity.\n. @vzima, the app raises `AuthFailed` on `ConnectionError`.\n. Thanks!\n. Thanks for the change. Moving it to `BaseAuth` doesn't make sense since not all the approaches support a revoke option in their standard definition.\n. Thanks!\n. Thanks!\n. Try with:\n\n``` python\nSOCIAL_AUTH_LINKEDIN_EXTRA_DATA = [\n    ('id', 'id'),\n    ('firstName', 'first_name'),\n    ('lastName', 'last_name'),\n    ('emailAddress', 'email_address'),\n    ('pictureUrl', 'picture_url'),\n    ('publicProfileUrl', 'profile_url'),\n]\n```\n. @stianpr, that's great, looking forward to that PR.\n. @stianpr, I've made the change to the docs, they were fair simple, thanks for catching that.\n. Docs should be updated now.\n. Why would you expect them there? Docs are online, they aren't really useful on a cryptic location. And examples aren't of any use installed in the local workstation.\n. @misli, thanks for the recommendation, still I think (and it's usually expected from python packages) to just carry the application and tests.\n\nThanks for your work on adding it to Fedora.\n. Second setting at http://psa.matiasaguirre.net/docs/configuration/settings.html#processing-redirects-and-urlopen, without further details I cannot say what could be going on. Any traceback?\n. @sgxiao, I've added a setting to control this behavior keeping the `name` as the default value for backward compatibility. If you want to define the domain as the source of username it enough to define the setting `SOCIAL_AUTH_WEIBO_DOMAIN_AS_USERNAME = True`. Docs at http://psa.matiasaguirre.net/docs/backends/weibo.html\n. Thanks!\n. Couldn't reproduce following your steps, you have cookies enabled?\n. And what about the session values in that session?\n. @xen, did you managed to fix this? I got into the same issue some hours ago and found that the problem was by a wrong secret key, once I've updated it, it started to work.\n. @a1exs, I recall removing that setting too, maybe that did the trick, if that's the case this issue seems relevant https://github.com/maxcountryman/flask-login/issues/137\n. Awesome, @xen, could you check if that works for you?\n. Thanks! Closing...\n. Thanks, I've updated the `md5()` calls around!\n. @lukos, awesome, thanks. There's any chance to get some docs about how to setup it (like the rest of the backends)?\n. @lukos, no need for a new one, just update your master and this one will be updated, whatever you prefer is OK.\n. Great, thanks!\n. Thanks!\n. @EugeneLiang, any chance you also installed `python-social-auth` using `pip`? To me it looks like an python path issue where you have the app installed with `pip` (older version without tornado support).\n. @EugeneLiang, try with `pip install --upgrade python-social-auth`. Taobao backend should be supported in the Tornado app, it's just not linked there at the moment (it's easy to loose the links sync between apps).\n. @EugeneLiang, create a `local_settings.py` in `tornado_example` directory. All the examples follow the same `local_settings` concept where your keys and secrets are defined to keep them out of the repository on a mistaken push (`local_settings.py` is ignored by `.gitignore`).\n. Change `'social.backends.taobao.TaobaoOAuth2'` to `'social.backends.taobao.TAOBAOAuth'`.\n. OK, closing this issue.\n. Which Django version?\n. @tobiasbartel, not the same issue, yours look like #173 which is solved.\n. @mionch, try installing it using `pip install -e git+git@github.com:omab/python-social-auth.git@711b892c94efabf2784157107b7ae5e122b21b12#egg=python_social_auth-master`\n. @tklovett, I've released `v0.1.21`.\n. @empty, could you try master with the change pushed above?\n. Cool, closing.\n. Wouldn't be easier to extend the user model in your project and override the `username` field? That also has the benefit of forms validation working OK.\n. Actually this is not hardcoded and it's dynamically loaded from your model definition, the correct solution is to make your model reflect your domain properly.\n. `BackendWrapper` was removed since it was a hackish solution to workaround Django backend loading, but Django puts the backend name in the sessions, so any older user that's trying to access your site with an old session (previous to your upgrade) is probably triggering this issue, the quick fix is to clean the session entry for those users.\n. @dblado, right, this is a duplication of #128\n. Thanks!\n. Could somebody point me to a good and simple tutorial on how to setup python + pip on Windows, or put some simple steps here so I can try to reproduce it? I lack the windows experience for this.\n. The fix above will get rid of this problem.\n. I don't have the needed experience to provide a solution got any luck on your end?\n. @georgewhewell, thanks for commenting about the bug in urllib3.\n. @synth3tk, I don't have experience with Google App Engine, I'm gonna try to setup an instance to test it.\n. Implemented, thanks!\n. My bad, I should have noted that, it's fixed now.\n. @vargi, OAuth1 tokens are in the form of querystrings, and OAuth1 backends expect it as a `dict` in  `do_auth()` (I should normalize that parameter at some point), meanwhile try doing::\n\n``` python\nfrom social.utils import parse_qs\n\nif backend.name == 'twitter':\n    access_token = parse_qs(access_token)\nuser = social_auth.do_auth(access_token=access_token, user=None)\n```\n. @vargi, I've added the needed code to parse an access token string to the expected `dict`, so it will work if you are using the master branch.\n. So, it works if you set `ACCESS_TOKEN_METHOD = 'GET'` in the backend?\n. @dblado could you try with this linkedin backend instead?\n\n``` python\nfrom social.backends.linkedin import LinkedinOAuth2\n\n\nclass CustomLinkedinOAuth2(LinkedinOAuth2):\n    def request_access_token(self, *args, **kwargs):\n        kwargs['params'] = kwargs.pop('data')\n        return super(LinkedinOAuth2, self).request_access_token(\n            *args, **kwargs\n        )\n```\n. @dblado, I've pushed the fix to master\n. @hassek, I've left a comment on your change, the `EXTRA_DATA` change looks good, but the override to `extra_data` doesn't look good, it shouldn't be needed since `get_user_details` already does that.\n. Awesome, thanks for the update!\n. Great, thanks!\n. `SOCIAL_AUTH_*_SCOPE` setting **must** be a list, not a string, if it's a single scope, then define it as a single item list.\n. `SCOPE` shouldn't be a string, it's documented that it should be a list.\n. Thanks!\n. I've fixed a couple details and added python 3 support. Thanks!\n. Do you have a custom pipeline?\n. What does the last pipeline?\n. I've introduced a change that might fix the issue, @mohitranka and @devangmundhra could you give it a try?\n. @CrazyPilot, have you tried my fix at https://github.com/omab/python-social-auth/commit/dec6d30ab758280cec6562c3c6aa9edc975bf56c ?\n. @sledopit, I've pushed another potential fix, could you give it a try?\n. @sledopit, I'm not able to reproduce this issue, that's why it's so hard for me to fix it, could you trace back why `social_user` is `None`?\n. @sledopit, @devangmundhra, I've tried a custom user model (it's in the example app) and it worked without issues, if any of you can build a simple app that reproduces the issue that I can clone and try here, please do.\n. @htch, version?\n. @htch, that version has my possible fixes to the issue, so they aren't working, are you able to create a simple small project that recreates the issue?\n. @skozan, I've fixed the issue, thanks for the report.\n. @krtek4, `v0.1.23` released.\n. Thanks!\n. I don't recall any change to that behavior lately, inactive users should go to the URL defined by `SOCIAL_AUTH_INACTIVE_USER_URL`, if that setting is not defined it will default to `LOGIN_ERROR_URL`.\n. I'm not aware of any intent of integration, but I guess it's possible to do it once you have the user data/tokens from `python-social-auth`, not sure what `Django-facebook` needs but it looks like if you are capable of filling the models, probably in a pipeline function, then it looks like you will be capable of using that app.\n\nI'm gonna close this issue since it's not a bug, we can continue the discuss in the mailing list or IRC channel.\n. If using Django you need this http://psa.matiasaguirre.net/docs/configuration/django.html#exceptions-middleware\n. No reason at all, where should that be changed (I don't use mongoengine)?\n. I think `mongoengine` does't have a `_meta.get_field(...)`, are you able to patch your copy of `python-social-auth` and test this code instead (or your code too)?\n\n``` python\n    @classmethod\n    def username_max_length(cls):\n        username_field = cls.username_field()\n        field = getattr(UserSocialAuth.user_model(), username_field)\n        return field.max_length\n```\n. I've pushed the change to master. Thanks!\n. @w0rm, @gglentini could you try the fix above?\n. Thanks, closing the issue.\n. @elgreg, I've added `user` to default scope list, kept `balance` there for backward compatibility. Thanks for the report.\n. I've pushed a fix for this, thanks for the report.\n. @gglentini the fix linked above should fix that.\n. Great, closing the issue.\n. The apps don't need that setting unless you are defining your own strategy.\n. Thanks!\n. Looks like you are in the correct path there, could you send a PR?\n. Thanks!\n. Sadly the library is quite tied to the usual framework structure but it should be possible to make it work as a library, and I can contribute to improve it to make that possible, it's an interesting idea.\n\nThe core that brings multiple framework support is the strategy class, it's the glue between python-social-auth and the framework of choice, if done well the framework idea can go away. The docs regarding strategy implementation is at http://psa.matiasaguirre.net/docs/strategies.html#implementing-a-new-strategy.\n\nStorage classes are responsible on how the data is stored, it could be a plain text file in your filesystem if the implementation is done right.\n\nThe code in `actions.py` is tied to requests and responses and beside calling the strategy methods (`complete`, `start`) and dealing with partial pipeline continuation in the end they are reduced to redirects decision and user login state.\n. The recent [split into smaller components](https://github.com/python-social-auth) should make the support for this more straightforward and clean, I'm sure it's not 100% ready to do so, but in it should be possible.. Could you paste the full traceback? I wan't to see the calls chain.\n. Thanks, one last value, try getting the URL that's trying to open (it should start with `https://graph.facebook.com/oauth/access_token`), you should be able to get it by checking the vars values in one of those last calls in the traceback. This will allow me to identify the values being sent and the probably cause of that 400 error, which usually is caused by a empty secret key or another missing parameter required by facebook.\n. It did and looks like the server request is OK, I'm still trying to figure out were it's breaking.\n. @psych0der, I'm still unable to reproduce the issue, I've created a new Facebook application from scratch, filled all the values and it worked, in the process I've noticed that Facebook doesn't allow `localhost` as `App Domains` anymore. Also tried my usual app (which is quite old) and it works as expected too.\n\nI'm gonna keep looking but could you try with a new application and provide some example code to reproduce the issue?\n. @psych0der, there were the details I needed to fill:\n1. `Display Name` and `Category` (popup when clicking `Create a New App` from the menu)\n2. In `Settings -> Basic` fiilled\n   - `App Domains`: `myapp.com`\n   - Clicked `Add Platform` and selected `Website`\n     - Set `Site URL` to `http://myapp.com:8000/`\n3. In `Settings -> Advanced`\n   - Ensured that `Client OAuth Login` is on\n   - Ensured that `Native or desktop app?` is off\n\nFinally copied `App ID` (filled `SOCIAL_AUTH_FACEBOOK_KEY`) and `App Secret` (filled `SOCIAL_AUTH_FACEBOOK_SECRET`).\n. I've changed the docs at http://psa.matiasaguirre.net/docs/backends/facebook.html\n\nThanks!\n. The user is logged in? Which is your pipeline setting value? Do you have `'social.pipeline.social_auth.associate_by_email'` in it? \n. Then `'social.pipeline.social_auth.associate_by_email'` should do the work, that pipeline will check if there's a user with the same email address and associate the social account to that user instead of creating one, check here for the correct position for this function https://github.com/omab/python-social-auth/blob/master/social/pipeline/__init__.py#L8\n. @ctrl-alt-delete, the problem is that PSA doesn't know how to merge the accounts and that's something for your project to control, not PSA. In this case you should add a pipeline function that determines that this is going to cause a collision and proceed accordingly. \n. That was the proper way.\n. Thanks!\n. Do you happen to know since when it works?\n. I've updated the code to use messages app by default. Thanks!\n. Thanks!\n. Changed, thanks.\n. Some import conflict? Full traceback? Maybe another app named `social`? Is your pipeline inside a `social` module?\n. Don't name a module the same of a dependency (which is a good policy always), or use `absolute_import` (check https://www.python.org/dev/peps/pep-0328/).\n. If your `social` app is inside your project directory (the one with the `settings.py`), then you can use `project.social` in `INSTALLED_APPS`.\n\nIf `social` is too common, then you can rename your own version of it, or you can ask to the many python projects around to rename their apps because they are too common too.\n. Yeah, that works too.\n. @BeOleg start looking here http://psa.matiasaguirre.net/docs/configuration/porting_from_dsa.html\n. Thanks!\n. Thanks!\n. Merged, thanks!\n. And the one being sent is?\n. I've enabled the `Enhanced security redirection` setting in my testing application and everything worked as expected once I've fixed my redirect value put there.\n. The thing with sessions, is that they are usually cleared when the user is logged in, that's why you can't access the `is_new` value after auth finished, the unique method right now is to define `NEW_USER_REDIRECT_URL` and send the user to a different page where you can set any value if needed.\n. Fixed, thanks!\n. You should store the password in the session when you get it the first time, then retrieve it and set it once the user was created, so you need a new pipeline function after `create_user` that will get that password from the session and set it in the newly created instance.\n. Yeah, that's possible, the user could easily clean the cookies, but it's just an example on how you can manipulate the pipeline, other options could be:\n- ask for the password after the email validation was complete (partial pipeline)\n- store the initial password in a new table in your server, or in another storage like redis or memcached (beware of memcached restarts)\n- create the user when the data in available but set it as `inactive` and remove the flag once the email is validated (that way the user can't login unless the email is validated)\n. Dropbox OAuth2 URL should be `/login/dropbox-oauth2` since `/login/dropbox` is for OAuth1\n. I cannot reproduce it here, could you paste the server log?\n. In the console where you ran the command.\n. OK, try to copy and paste them when you have them available, there should be a `404` in there.\n. OK, which is the URL on github?\n. `client_id` is `None` in that URL, check your `SOCIAL_AUTH_GITHUB_KEY` setting.\n. Yeah, `SOCIAL_AUTH_*_KEY` and `SOCIAL_AUTH_*_SECRET` settings aren't set in the example app since those values should keep secure.\n. If you try to open the same URL in a python shell, does it work?\n. `associate_by_email` with associate accounts with the same email address, so if they are different that won't work. Account merging is tricky and `python-social-auth` won't support it usually is project dependent, there's a lot to take into account like what happens any data that the user could be generated with both accounts, etc.\n\nThe exception can be catched by adding this [middleware](https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/middleware.py#L13), you can easily extend it to add your behavior, like merging accounts or tell the user to get in touch with some support team, etc. There's some doc about the middleware here http://psa.matiasaguirre.net/docs/configuration/django.html#exceptions-middleware.\n. @hroncok, the mailing list or IRC channel is a better place to put questions and answer them.\n. Thanks!\n. Merged, Thanks!\n. The fix for this was released yesterday, #191 was raised for that. Reopen the ticket if needed.\n. I see what you are doing there, but I don't think that's something that should stop the signup in a website, the user data could be populated by other means.\n. @pekoslaw, I've merged your code but added some changes to make the exception optional, so in order to archive your output you need to defined `SOCIAL_AUTH_BITBUCKET_VERIFIED_EMAILS_ONLY = True`. Also added tests and docs at http://psa.matiasaguirre.net/docs/backends/bitbucket.html#settings\n. I've pushed a fix for the issue, there's a workaround that you can use while this is not released, define this setting to restore the previous serialization mechanism in Django:\n\n``` python\nSESSION_SERIALIZER = 'django.contrib.sessions.serializers.PickleSerializer'\n```\n\nUse this as a temporary workaround since Pickle serialization is not very secure compared to JSON serialization (the new default value).\n\nYou can also install `python-social-auth` directly from the git repository with:\n\n```\npip install -e git+git@github.com:omab/python-social-auth.git@8593e0c0d7b8cdf048cf3da5739040993d0b681e#egg=python_social_auth-master\n```\n\nor add this line to your `requirements.txt`:\n\n```\n-e git+git@github.com:omab/python-social-auth.git@8593e0c0d7b8cdf048cf3da5739040993d0b681e#egg=python_social_auth-master\n```\n. Merged, did some refactoring.\n\nThanks!\n. Try doing `request.strategy.backend.do_auth(access_token)`.\n. Cool, thanks for closing the issue.\n. @ranjeetsghrix, you can pass it as a `dict` or as a `querystring` (the usual format of OAuth1 access-tokens). Like this:\n\n``` python\nbackend.do_auth({'oauth_token': '...', 'oauth_token_secret': '...'})\n```\n\nor\n\n``` python\nbackend.do_auth('oauth_token=...&oauth_token_secret=...')\n```\n. @ranjeetsghrix, do you have a traceback?\n. @avonil, what's the code you are trying? How do you get the `backend`?\n. @avonil, that snippet looks good, how are you calling that view (what's the URL)?\n. @cdeblois, thanks!\n\nIs the change really needed? It breaks the auth process? If it does I'll disable the custom state parameter.\n. Yes, it's not unusual, I'll switch it off, Medeley changed their API recently, so that might be involved.\n. Done, thanks for pointing it.\n. Thanks!\n. Thanks!\n. Thanks!\n. @ranjeetsghrix, do you have a traceback for the twitter error?\n. @ranjeetsghrix, I didn't tested twitter yet, there's any chance there's an `oauth_verifier` parameter accessible in your `register_by_access_token` view (or that your client can pass to it)?\n. I'm closing this issue in favor of #272, check my comment https://github.com/omab/python-social-auth/issues/272#issuecomment-43428162\n. Thanks!\n. @stunaz, that setting was removed a long time ago.\n. Thanks!\n. Defining `SOCIAL_AUTH_FACEBOOK_AUTH_EXTRA_ARGUMENTS = {'auth_type': 'reauthenticate'}` works fine for me.\n\nClosing, reopen if needed.\n. Thanks! With docs and tests, that's awesome.\n. Thanks!\n. I don't see anything wrong in your settings, but that redirect looks like the process is doing an error, it's been a few days since you reported this, have you solved the issue?\n. Closing, reopen if needed.\n. Could you provide a full traceback? the `request` method is used by many different places.\n. Thanks for the update, closing.\n. Thanks for the PR but I wonder, why is the full `auth_url()` override needed when you can set the `%20` escape in the `get_scope_argument()` method? Also, is `doseq=0` really needed?\n. @MrYoda, I've made the change but I'm not sure that will make the backend work since I don't a reference to where that cookie was being set, the same happens in the original version in `django-social-auth`.\n. Closing, reopen if needed.\n. You get the key if you fire up a shell and import the settings with `from django.conf import settings` and then print `settings.SOCIAL_AUTH_FACEBOOK_KEY`?\n. Could you show me an example where `_meta` doesn't work? `_meta` is populated by Django ORM when the model class is defined, you can't do `getattr(User, 'username')`, that will drop an attribute error since the model class doesn't have that attribute.\n. Closing, reopen if needed.\n. The size depends a lot of the type using, so 191 is in your case.\n. Thanks!\n. `python-social-auth` doesn't suffer of this, it's up to the project to ensure that the user instance is valid.\n. @fletchowns with the change linked above you can define this setting to override the default AX attributes:\n\n``` python\nSOCIAL_AUTH_GOOGLE_AX_SCHEMA_ATTRS = [\n    ('http://axschema.org/contact/email', 'email'),\n]\n```\n. @fletchowns I had to introduce a setting to allow that, define `SOCIAL_AUTH_GOOGLE_OAUTH2_IGNORE_DEFAULT_SCOPE = True` and that should do the trick (the setting support is not release to pypi yet).\n\nAlso added some docs in the process http://psa.matiasaguirre.net/docs/configuration/settings.html#extra-arguments-on-auth-processes.\n\nA similar setting was added for openid backends but keeping backward compatibility in the process. \n. Oh, I didn't realized the scopes were deprecated, I need to work on them.\n. Looks like Strava provider doesn't like extra parameters in the Redirect URI and instead of checking for them forces the append of `?code=xxx&state=xxx`. Since Strava sets the `state` already, it should be safe to disable the `redirect_state` support in the backend, but this looks like a bug in Strava service.\n. @jasonwaters the change above fixes the issue. \n. @sherzberg, the issue mentioned in the docs is fixed right now, I'm removing that from the docs.\n. Docs at http://psa.matiasaguirre.net/docs/backends/amazon.html update.\n. The code looks good except for the failing test, looks like the docs doesn't specify this return format https://github.com/momamene/python-social-auth/blob/9caf545ccb23955d9a2e26c20ac05923aae7a1ba/social/tests/backends/test_kakao.py#L13-L25, instead it should be:\n\n``` python\n    user_data_body = json.dumps({\n        'id': '101010101',\n        'properties': {\n            'nickname': 'foobar',\n            'thumbnail_image': 'http://mud-kage.kakao.co.kr/14/dn/btqbh1AKmRf/ujlHpQhxtMSbhKrBisrxe1/o.jpg',\n            'profile_image': 'http://mud-kage.kakao.co.kr/14/dn/btqbjCnl06Q/wbMJSVAUZB7lzSImgGdsoK/o.jpg'\n        }\n    })\n```\n\nRight? That's what the backend is expecting too. I'm not 100% sure since I can't read the site :)\n. Great, merged!\n. @grepme I've merged your code, thanks! But I've also implemented some changes, you can see my changes here 51e3a088ba0fa559e17a5d1e47cd62672ed38896.\n\nBasically I've removed the template from the code, it's preferable that the templates are defined by the users instead and the application will make use of it automatically, if the JS in the template needs some changes, users can make them instead of depend on a new release of `python-social-auth`.\n\nAlso I've changes some methods overrides to simplify some code there.\n\nPlease take a look to it.\n. @Nabu-thinker-ru try defining `SOCIAL_AUTH_VK_OAUTH2_EXTRA_DATA`.\n. Thanks\n. Thanks!\n. @Raihanveer, you should check the docs at http://psa.matiasaguirre.net/docs/, specially the configuration section http://psa.matiasaguirre.net/docs/configuration/settings.html. Basically you are trying to run the example app without the basic configuration (keys and secrets, etc).\n. Tornado follows the same convention that any other app, put the settings mentioned in that doc in a `.py` that's imported at some point when initializing the app. Check the example app, the `app.py` file is in charge of initializing the Tornado app, at the very beginning it does `import settings` (here https://github.com/omab/python-social-auth/blob/master/examples/tornado_example/app.py#L17), the `settings.py` contains some basic configuration for `python-social-auth` (https://github.com/omab/python-social-auth/blob/master/examples/tornado_example/settings.py) and at the end it does `from local_settings import *`, the local settings contains any settings that shouldn't be public or available in a repository, like public/secret keys given by providers like Facebook, Google, etc when you register an application on their dev dashboards.\n\nTo identify the settings needed for each backend, just check the docs for them at http://psa.matiasaguirre.net/docs/backends/index.html#social-backends.\n\nThere's not tornado specific configuration.\n. Thanks!\n. At which point is `Invalid token` returned? Which backend are you using?\n. This might be the way to do it http://stackoverflow.com/questions/6025764/how-do-you-call-a-json-web-service-that-requires-basic-authentication-using-jq\n. Closing, reopen if needed.\n. @ariovistus, the issue is caused by an import ordering problem, in your example code you call `urlresolvers.reverse` which will load `example/urls.py`, which will trigger an `admin.autodiscover()` call, which will load `social/apps/django_app/default/admin.py`, which will try to load your custom user model which will fail to load your user model.\n\nI've included a setting to avoid this issue (not released yet), you can define `SOCIAL_AUTH_ADMIN_USER_SEARCH_FIELDS = ['first_name', 'last_name', 'email', 'username']` (the setting value is a list of fields of your custom user), this will avoid the import order problem.\n. Thanks!\n. @maryokhin, there's any chance there's an `oauth_verifier` parameter around? If that's the case, try passing it also.\n. @maryokhin, right now it expects the `oauth_verifier` as part of the request, so it's being accessed as `self.data['oauth_verifier']` (`self.data` is the request POST/GET data). You know if it's available like that in the request?\n. @maryokhin try defining this strategy in some place\n\n``` python\nclass DjangoRESTFrameworkStrategy(DjangoStrategy):\n    def request_data(self, merge=True):\n        if not self.request:\n            return {}\n        if merge:\n            data = self.request.REQUEST\n        elif self.request.method == 'POST':\n            data = self.request.POST\n        else:\n            data = self.request.GET\n        if data.get('_content'):\n            data = data.copy()\n            data.update(data.pop('_content'))\n        return data\n```\n\nThen define this setting pointing to it: \n\n``` python\nSOCIAL_AUTH_STRATEGY = 'path.to.your.strategy.DjangoRESTFrameworkStrategy'\n```\n.  `request_data` should return a `dict`, but looks like it failed since `self.request.DATA` looks like the final value I was looking to get tested.\n\nEven with the `.copy()` you get an error whit `update()` and `pop()`?\n\nLooks like I need to review this process for OAuth1 backends.\n. @maryokhin, @omritoptix, @Zoneur \n\nI've tried using AJAX to authenticate an user in the django example app (no Django REST Framework, but that shouldn't matter), and everything worked OK (I've tried Facebook, Google OAuth2 and Twitter), Twitter didn't needed the `oauth_verifier` parameter, just `access_token` and `access_token_secret`.\n\nI've extended the example app with a simpler form to select a backend and input the `access_token` and `access_token_secret` (for OAuth1), on submit a JS handler will submit the auth by AJAX and then update the form with the user id and username, then the page will reload (after a few seconds) and that will show that the user was logged in. \n. @maryokhin, using `load_strategy` should be OK, but you need to pass the `redirect_uri` too, it should be the URL you defined in the application (in the provider), usually the value of  `urlresolvers.reverse('social:complete')`. Call `load_strategy` like this: `load_strategy(request=request, backend=backend, redirect_uri=...)`\n. The `access_token` will be converted to a `dict` if it's an string https://github.com/omab/python-social-auth/blob/master/social/backends/oauth.py#L124-L125, so passing the `dict` should also work. I could add a `do_auth()` that takes a request and it takes the needed values from the request.\n. @maryokhin, are you settings defined properly? `SOCIAL_AUTH_TWITTER_KEY` and `SOCIAL_AUTH_TWITTER_SECRET`?\n. @maryokhin, not sure what you meant with `include the keys on the API side`.\n\nAbout Django REST Frameworks support as a built-in app, that would be great to have.\n. Cool, I'm gonna close this issue since it's finally solved, thanks!\n. I'm already working on this and only fixing the tests is the pending bit.\n. I don't think the application should take care of that, it should be open enough for devs to include such option (and it's already), but not be tied to any particular encryption mechanism. That being said, I'd be happy to include the needed documentation recommending this protection.\n\nEncryption of `extra_data` can be implemented by:\n- Define a custom storage implementation\n\n``` python\n# storage.py\n\nfrom social.apps.django_app.default.models import UserSocialAuth, Nonce, Association, Code, DjangoStorage\n\nclass EncryptedUserSocialAuth(UserSocialAuth):\n    extra_data = EncryptedJSONField()\n\nclass EncryptedDjangoStorage(DjangoStorage):\n    user = EncryptedUserSocialAuth\n    nonce = Nonce\n    association = Association\n    code = Code\n\n\n# in settings.py\nSOCIAL_AUTH_STORAGE = 'path.to.storage'\n```\n- Extending the pipeline (add it after `'social.pipeline.social_auth.load_extra_data'`)\n\n``` python\ndef encrypt_extra_data(strategy, details, response, uid, user, social, *args, **kwargs):\n    extra_data = encrypt_values(social.extra_data)\n    social.set_extra_data(extra_data)\n```\n. Thanks!\n. `SOCIAL_AUTH_NEW_USER_REDIRECT_URL` was being ignored if `?next=...` was present, I've switched the ordering there since I think it's the correct behavior for new users.\n. Yeah, that one is not released and the docs don't details that at the moment, I'll release `v0.1.24` soon.\n. Nice PR, and with tests! Merged, thanks!\n. The error means that the `state` value is not being stored/persisted in your application session, could you verify if it works?\n. Thanks!\n. `python-social-auth` is Python 3 compatible already, the [setup.py](https://github.com/omab/python-social-auth/blob/master/setup.py#L49-L54) will install [python3-openid](https://github.com/necaris/python3-openid) instead of `python-openid` if Python3 is detected. The dependency is also listed in the `requirements-python3.txt` file for those installing manually.\n. Merged, I've applied PEP8 and cleaned some debug lines.\n\nThanks!\n. @ipmb, the current recommended way is to use `GooglePlusAuth` backend, which it's pretty much OAuth2 version but with support for client side auth with their SDK and continuation in the backend too.\n\n`GoogleOpenIdConnect` is the same as OAuth2 but with a forced `openid` scope and different endpoint to retrieve the user details.\n. @ipmb, the new scopes introduced by Google allows for users without a Google+ Account to also use that auth mechanism AFAIK. You are right that the users need to reconnect with that backend once the take down is complete, but, there might be ways to circumvent that:\n1. Change the value for `provider` in the table `social_auth_usersocialauth` from `google` to `google-plus`.\n2. Add a custom backend that inherits from `GooglePlusAuth` and changes the name from `google-plus` to `google` (or whatever you are using right now).\n. @fabioz, users shouldn't lose their accounts, the user id (in google) is still the same.\n. Google OAuth2?\n. Google is deprecating the old scopes, dropping support starting from Sept 1, 2014, check the table at https://developers.google.com/+/api/auth-migration#timetable.\n\nI wasn't aware that the new scopes requires the `Google+ API` to be enabled in the dashboard, I've already had it enabled.\n\nI've added documents regarding the scopes deprecation and workaround for those looking to keep the old  scopes at http://psa.matiasaguirre.net/docs/backends/google.html#scopes-deprecation\n. I've released `v0.1.26` which fixes the scopes issue by restoring the previous values but the new values are used by default, in order to re-enable the old (deprecated) scopes you need set any of this settings:\n\n``` python\nSOCIAL_AUTH_GOOGLE_OAUTH2_USE_DEPRECATED_API = True\nSOCIAL_AUTH_GOOGLE_PLUS_USE_DEPRECATED_API = True\n```\n\nAlso added support for `Goggle+ Sign In` server-side flow.\n. Yesterday I've updated the Google+ Sign-In docs and fixed some issues in the backend, take a look to the docs here http://psa.matiasaguirre.net/docs/backends/google.html?_=123#google-sign-in it might help.\n. @godshall, setting `request=None` should do the trick.\n. @godshall, I've merged your code and made `request` and optional parameter, it works fine in Django 1.6 and below.\n. Thanks!\n. Define a url `/complete/<backend>` that points to your custom view.. @nijel, I've introduced a fix for the issue, could you give it a try?\n. I've released `v0.1.25` to support the old API/Scopes while the API is being deprecated. In order to support the old values you need to define any of this settings:\n\n``` python\nSOCIAL_AUTH_GOOGLE_OAUTH2_USE_DEPRECATED_API = True\nSOCIAL_AUTH_GOOGLE_PLUS_USE_DEPRECATED_API = True\n```\n. Looks good. Merged. Thanks!\n. What are you trying to modify? Could you show me the API endpoints you are using?\n. Are you trying to post in behalf of the user or the page?\n. `SOCIAL_AUTH_SCOPE` is a supported setting but shouldn't be used (and I would remove such option in the future). `FACEBOOK_EXTENDED_PERMISSIONS` is a context name passed to a template defined when using the `FacebookAppOAuth2` backend, **it's not a setting**, but it will contain the value of `SOCIAL_AUTH_FACEBOOK_APP_SCOPE`.\n\nIn order to defined scopes, backend-related settings should be used, like `SOCIAL_AUTH_FACEBOOK_SCOPE`.\n. @tleewu, the docs about Facebook Scopes can be found here https://developers.facebook.com/docs/facebook-login/permissions/v2.0, there's a lot to dig in there and all depends on what you need for your project.\n. @steven-mercatante, are you using `python-social-auth` from `pip` or directly from this repository?\n. @steven-mercatante, the change for that import is not released yet, it should be `from social.apps.django_app.utils import strategy` instead.\n. I've pushed a fix but won't release it to pip yet since there are backward incompatible changes in the repo since the last version, it will take a couple weeks to get that released.\n\nMeanwhile you can add your own version of the Instagram backend to your project with the fix and use that instead of the builtin one.\n. Closing, too old now (sorry).\n. Thanks!\n. Thanks!\n. You are right, it's not supported yet.\n. I have no idea, wasn't aware of this stuff until you pointed that, it's probably not very hard to implement, just need time to review and plan the work.\n. Checking the protocol definition and the the basic client implementation, it's really similar to OAuth2 backends but with the forced `openid` scope set, so I wonder if that's pretty much what we need to make it work.\n\nGoogle already implements this protocol AFAIK, so this will be useful to test it:\n\n``` python\nSOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = ['openid']\nSOCIAL_AUTH_GOOGLE_OAUTH2_EXTRA_DATA = ['id_token', 'refresh_token']\n```\n. I don't have a date yet, I need to work in the docs and update and comment about the backward incompatible changes.\n. Fix already merged.. It's already like that, you can define `SOCIAL_AUTH_FACEBOOK_LOGIN_REDIRECT_URL`\n. @cambridgemike, you can set the `next` value in the session, like this:\n\n``` python\nstrategy.session.set('next', '/your/url')\n```\n\nBut this is a workaround.\n. Right, my suggestion to change it in the pipeline won't work at all. What are you trying to accomplish? Maybe there's another way.\n. @cambridgemike, yes, that's all you need, just add `next=/my/url` to the login/signup URL. Docs about that is located here http://psa.matiasaguirre.net/docs/use_cases.html?highlight=next#return-the-user-to-the-original-page.\n. Set `SOCIAL_AUTH_SANITIZE_REDIRECTS = False`\n. `SOCIAL_AUTH_USER_FIELDS` can be used to override the default fields used to create the user instance, there's also `SOCIAL_AUTH_USERNAME_IS_FULL_EMAIL` to accomplish an email-as-username setup.. You can easily implement that behavior by subclassing the built-in middleware here https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/middleware.py\n. There's no reason for `do_auth` not handle `HTTPError`, the code is just missing and I'll add it soon.\n. `SOCIAL_AUTH_GOOGLE_PLUS_AUTH_EXTRA_ARGUMENTS` is the correct way to do it, I agree the docs needs some works detailing this stuff.\n. Yes, that's `django-social-auth` backend, the paths and names changed in `python-social-auth`.\n. @avibrazil, the code looks good but I had a question, are the `grant_type` arguments needed in the `ACCESS_TOKEN_URL` and `REFRESH_TOKEN_URL`? The arguments are already passed by default in the base OAuth2 backend, if those can be removed I think you can remove the `REFRESH_TOKEN_URL` attribute and the `refresh_token` method.\n. I've merged the code and implemented some simplifications to the code.\n\nThanks.\n. Thanks!\n. @synotna, you can use the `get_user()` method in the storage. For example:\n\n``` python\nstrategy.storage.user.get_user(username='...')\n```\n. That should be the case, could you paste the full traceback? Also, what happens if you try this in a django shell:\n\n``` python\nfrom social.apps.django_app.default.models import DjangoStorage\n```\n. Social association to logged in users is totally possible and `/login/facebook/` (`social:begin` URL) is the way to do it, but the error you get is because something else, you have `AUTH_USER_MODEL` or `SOCIAL_AUTH_USER_MODEL` defined? Is it pointing to a `User` model or a `UserProfile` model?\n. Thanks!\n. Thanks!\n. Is this change still needed? What was the main purpose for it? Also, why the `exacttarget_` prefix?\n. Merged, I've applied PEP8 before the merge. Thanks!\n. The problem here is that the auth mechanism is done by the Google SDK and loggin out of your application, doesn't mean logging out of your Google account, which is then verified by the SDK when the page is reloaded, and the user is authenticated again.\n\nThis https://developers.google.com/+/web/signin/sign-out seems to be the fix to the problem.\n. @epetxepe, disconnect will remove the association between the google account and the user in your db, you will need `association by email` to reconnect that account later.\n. @Menda, maybe it's broken for `localhost`, but what happens if you setup an entry `/etc/hosts` to point to your local IP?\n. @epetxepe, @Menda, I've updated the docs (http://psa.matiasaguirre.net/docs/backends/google.html#google-sign-in) and the example application (https://github.com/omab/python-social-auth/blob/master/examples/django_example/example/templates/home.html#L331-L376) to an up-to-date SDK usage.\n. @epetxepe, there's an explicit logout example in the docs now, maybe you see a cached version of the page? The changes to the docs are in the repo, this is the particular commit https://github.com/omab/python-social-auth/commit/a4918af20e09642b8ee47724a023899ef93fd22b\n. There's no `code` anymore for this authentication mechanism and a change was introduced to take that into account properly in the backend, you need to pull the changes from the repository since it's not released yet.\n. @davidhubbard, I've changed the code a bit to make it available for all backends.\n\nThanks for your work on it!\n. Thanks!\n\nRegarding South migrations, they should be added to `south_migration` folder as suggested IMO.\n. Thanks!\n. @tomgruner, thanks for writing that script, I've added a similar version in the docs here http://psa.matiasaguirre.net/docs/configuration/porting_from_dsa.html#session and also linked to your original version.\n. @Harz-FEAR, that's probably because of my inexperience with the framework, what do you think is needed in order to support them?\n. Issue ported to https://github.com/python-social-auth/social-app-pyramid/issues/1 . Fixed, thanks!\n. Any more details? Like framework, pipeline details? Errors?\n. The values are needed in the session to continue any type of partial pipeline, sending a mail validation is a partial pipeline too.\n. I've added code to invalidate the pipeline when a new login/signup process is started, I can't do any cleanup on a pipeline, because at the time it's called data was already loaded and the whole process might be wrong.\n. Thanks!\n. I've merged the PR, thanks!\n. Thanks!\n. @ffurrer, I've added an extra github backend, similar to the github-for-organizations backend, but that checks by team instead, the code was so similar that I've added a class to deal with the common code.\n\nThanks\n. What's this?\n. There are migrations for django and south in the app.\n. @yetanotherape, I don't see anything wrong with it, and frankly I don't remember if there was a reason for the original code. I like that you added tests to it.\n\nMerged, thanks!\n. @rosscdh,\n\n> 1. You seem to have created the migrations usiing django 1.7RC\n\nYou are right, but there's a pending PR to restore South migrations\n\n> 1. the django app is called \"default\" which will (and in my case) does conflict with pre-existing app names; should try to maintain some sort of namespace (dare I say it) \"sa_default\" would be appropriate or \"social_default\" or something along those lines.\n\nI agree, the app name shouldn't be `default`, that's too generic, I didn't notice it, once the South migrations PR is merged I'll work on a migration to rename the app to `social_auth`. \n. Thanks!\n. Thanks!\n. Thanks!\n. @dexter1691, I'm experiencing the same symptom here, my guess is that it's related to the application state (production / development), but I can't confirm it. I've tried searching a lot without much luck, and after re-checking Dropbox OAuth2 docs it seems that the backend definition is fine and sending the expected arguments.\n\nThe closest Dropbox Dev Forum post I found, was this one https://forums.dropbox.com/topic.php?id=117913#post-619087\n. @gorillamania, the `state` was implemented only on OAuth2 backends because it's part of that spec, not from OAuth1. It's true that you can workaround (and it's done in OAuth2 backends too for those that don't support it), but not all of the providers support that and will mark the auth process as invalid because the redirect URL doesn't match with the one registered.\n\nI will try to make the `redirect url state` parameter available on OAuth1 backends too, and test that it works with Twitter and enable it by default.\n. @gorillamania, I've made the needed changes to support `redirect_state` parameter in OAuth1 backends and enabled it by default on Twitter.\n. @gorillamania, thanks fir the tip, I'll grab a very cold one to celebrate.\n. A few notes:\n1. South shouldn't be defined in the `requirements.txt` file, that will get South installed into everybody environment.\n2. The South migration enforces `auth.User` model, which is not correct when using custom users\n. `django-social-auth` solved this by forcing a freeze, take a look to the initial migration here https://github.com/omab/django-social-auth/blob/master/social_auth/migrations/0001_initial.py, it might help.\n. @mhluongo, not at all, go ahead.\n. Merged, thanks!\n. @jacksonofalltrades, the usual way is to provide a page with the different association options to a logged in user, once they associate the account, they can login with any of them.\n. @Karmak23, that's a perfect example, thanks.\n\nClosing this issue, reopen if needed.\n. Thanks!\n. @guruganesh26, I've push a fix for that user table sync. Try again.\n. @LeonardoGentile, there's a setting for that, `SOCIAL_AUTH_STORAGE`. The trick is not just defining your user class, you also need to override the `Storage` class which is just a class that the application uses to get the references to the current models. So, once you have your user model defined, define a custom storage  like this:\n\n``` python\nfrom social.apps.django_app.default.models import DjangoStorage\n\n\nclass CustomStorage(DjangoStorage):\n    user = YourUserModelHere\n```\n\nThen define the setting `SOCIAL_AUTH_STORAGE = 'import.path.to.CustomStorage'`.\n. @LeonardoGentile, that shouldn't be necessary, the base backend takes care of that for you https://github.com/omab/python-social-auth/blob/master/social/backends/oauth.py#L182-L186\n\nI confirm that `access_token` is stored in `extra_data` when using the default flow.\n. @duoduo369, the `redirect_uri` shouldn't be `http://192.168.9.191:9444/`, it should be `http://yourdomain.com/complete/weibo` and the value you define in Weibo should have the same format.\n\nAlso, if you try to look for a setting that sets that forces that domain in the value, there's not such thing, but you can trick the application by adding `127.0.0.1  www.abc.com` in your `/etc/hosts`.\n. @guruganesh26, try cleaning your cookies.\n. I've pushed the changes recommended in #445, could you give it a try?\n. Thanks\n. I've applied PEP8 and fixed the tests case.\n\nThanks for your contribution!\n. The record defines Python3 support since it was implemented https://pypi.python.org/pypi/python-social-auth/0.1.26\n. I've fixed the reference, thanks!\n. Merged, thanks!\n. @ashishnitinpatil, did you check the application tests https://github.com/omab/python-social-auth/tree/master/social/tests? It has code that tests the pipeline and also extends it with custom functions that can be tested too. \n. @clintonb, this is a duplicate of #339 which is already being worked to make it support custom user models (also not supported on your changes at the moment). I'm closing this one for now.\n\nThanks! \n. @gameguy43, I think that your request is reasonable and should be applied, I'm look forward that PR.\n\nThanks!\n. @eyscode, the change is not released at the moment, `v0.2.0` introduced some backward incompatibles changes and it won't be released until I work on a doc explaining the changes.\n. This is released now.\n. Merged, thanks!\n. Thanks!\n. Thanks!\n. Comments added (https://github.com/omab/python-social-auth/blob/1b56357c5a8365310507e89385457b1d3df9781b/social/pipeline/__init__.py) and also in docs http://psa.matiasaguirre.net/docs/pipeline.html.\n. The lib avoids username collisions by appending a hash if one is detected. It's possible to \"slugify\" usernames to remove spaces (and other characters), just set `SOCIAL_AUTH_SLUGIFY_USERNAMES = True`.\n. Thanks!\n. It's been a while and this didn't happened again, I'm closing he issue, reopen if needed.\n. The state was wrongly checking on error responses, masking the real error as an state missing one. Fixed by https://github.com/python-social-auth/social-core/commit/4d2903c1a26cc433731dcc103fd211a7a4716b96. You can add an alias URL in your conf:\n\n``` python\nurlpatterns = patterns('social.apps.django_app.views',\n    # authentication / association\n    url(r'^signup/(?P<backend>[^/]+)/$', 'auth',\n        name='signup'),\n)\n```\n\nAnd use it in your templates for email signup.\n. I've enabled the `state` parameters in the mentioned backend. It's hard to track all the APIs changes for a single dev :-/\n. `Shopify` settings are `SOCIAL_AUTH_SHOPIFY_KEY` and `SOCIAL_AUTH_SHOPIFY_SECRET`, also `SOCIAL_AUTH_SHOPIFY_SCOPE`. Check here http://psa.matiasaguirre.net/docs/backends/shopify.html\n. `request.backend` is OK when using the `psa` in the dev version, this is a change since `v0.1.26`.\n. Thanks!\n. Thanks!\n. Those fixes are invalid.\n1. `strategy` decorator was replaced with `psa` on version `2.0.0-dev`.\n2. `MovesOAuth2` and `GoogleOpenIdConnect` are valid backends.\n\nThe example app is kept up to date with the project development, it doesn't track the last stable release, for that you need to get check the last stable tag and grab the version of the app at that point.\n. @wadewilliams, this happens all the time?\n. Ha, didn't knew that, so it seems that if your app forces the email address requirement, then you should check if one was returned, and ask for one if it's missing.\n. @Jefffrey, you need to define a template when using `facebook-app` backend, check the docs http://psa.matiasaguirre.net/docs/backends/facebook.html#canvas-application\n. I've introduced a fix, didn't merged the PR #378 because that change ignores the scope defined in the settings (if any). The fix also applies to all the backends, not just Google.\n. I'm closing the PR, the proposed change was ignoring the value in the settings (if there was any), I've pushed a fix for the issue reported in #377 (https://github.com/omab/python-social-auth/commit/f138221b12df275a4ddcece83f212998c30428dc) to avoid updating the scope setting.\n\nThanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Closing, reopen if needed.\n. Merged, thanks!\n. No plans so far, but I'll keep this open to track it.\n. Thanks!\n. I've pushed the fix to the `psa()` and `load_strategy()` calls.\n\n@amilstead, I'm not sure what you mean.\n. I've pushed the `flush()` change to that line, it seem to work fine now, do you mind taking a look?\n. @jeromelefeuvre, I've pushed another fix. I was able to reproduce the issue with a fresh db (thanks), the last fix seems to do the trick, could you test again please?\n. Removing the sessions value should be enough to logout the user, but that second user with the extra hash, means that it's failing to detect the already created user in the previous login. Let me check it.\n. Sorry?\n. That's becuase Google JS API triggers back the login and doesn't remember that the user requested to be logged out or disconnected. Upon disconnect you need to call this https://developers.google.com/+/web/signin/sign-out.\n. Thanks!\n. Merged (applied some PEP8 to it), thanks!\n. Thanks!\n. @Jefffrey, I've pushed an small change to allow the customization of URL namespace. Setting `SOCIAL_AUTH_URL_NAMESPACE = 'nested_app'`.\n\nThis is not released yet, but you can use it if you install `python-social-auth` from github.\n. The backend seems to be working OK, now regarding `ntp`, it's not mandatory to install it, but you need a way to ensure that your server clock is on time, otherwise Twitter will discard the request because the time differs (the OAuth1 request sends the time).\n. Closing (too old), reopen if needed.\n. Thanks! Merged.\n. @dzerrenner, I have the feeling that Blizzard request was kinda stupid, why assume that something is official support if it doesn't say on any place? Anyway, it doesn't do any harm, I've converted it into a comment instead of a docstring before merging.\n\nThanks!\n. Thanks!\n. This PR is not correct, the function expects an `association id` as that parameter (which is the `UserSocialAuth.id`), not an `uid` which is the identifier of the user in the auth provider.\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Merged and fixed TravisCI build plus Tox and tests (dropped `sugar` since it doesn't work on `pypy`).\n\nThanks!\n. Merged and added docs, thanks!\n. I've introduced a change to give github primary emails priority.\n. @Jefffrey, have you checked the tests included in the lib? They test the pipeline functionality, it even adds custom pipelines functions to it.\n. @BraisGabin thanks, @coriolinus if this is still a relevant issue, please open an issue in the corresponding component at [python-social-auth](https://github.com/python-social-auth).. Thanks!\n. Thanks!\n. You can store it on so many places, custom models, caches (memcached, redis), user session, cookies, etc, just pick the one that fits your problem. (This question is not actually related to the lib).\n. The request is available at `strategy.request` when using the Django framework. \n. Entries added. Thanks!\n. Thanks!\n. There's no such import in the app, probably something you copied from some other place?\n\nClosing, reopen if needed.\n. You have any link to the docs?\n. PSA won't be affected by this change since it doesn't use any scope that requires mandatory review by Facebook staff, but any developer that's using any of those scopes need to put their app to review.\n. Not a design decision, I've added the decorator to the views here https://github.com/omab/python-social-auth/commit/eaa3f567c08469f0b441467662a8e323c364808f\n\nThanks!\n. Thanks!\n. Thanks!\n. Change implemented, thanks!\n. The settings should be:\n\n``` python\nSOCIAL_AUTH_GOOGLE_OAUTH2_AUTH_EXTRA_ARGUMENTS = {\n    'access_type': 'offline'\n}\n```\n. Thanks!\n. This was solved? I see that the paste was removed.\n\nReopen if needed.\n. This should fix that `https://github.com/omab/python-social-auth/commit/15e366f4531dac74b8fb35718f1dd13a316915c3`, still, you need to check the prototype of your `create_user()` method, check #435 since it's a similar situation.\n. Sadly not because Django eats the `TypeErrors` generated by any auth backend. In your case the issue is that your `create_user()` method requires a `password` parameter which `python-social-auth` doesn't generate or sends to your method.\n\nYou have two options:\n1. Make it optional (which should be OK since that's a benefit of social-authentication, no passwords to remember but one)\n2. Add a pipeline function that fills the password into the `details` `dict` before the user is created.\n. The call wasn't broken, I've updated the docs to reflect the change.\n. Use a middleware, check the docs http://psa.matiasaguirre.net/docs/configuration/django.html#exceptions-middleware\n. 1. You can put your code in a pipeline, for example a view is served with a form that `POST`s back to `/disconnect/<backend>` and your functionality is ran there (in the pipeline)\n2. You can override the disconnect view to allow `GET` requests (not recommended since anybody on any other website can create an img like this `<img src=\"http://your-domain.com/disconnect/facebook\">`, and this connect any user that falls in that page)\n. How did you install it? Which version of `openid` is installed? It's `python-openid` or `python3-openid`?\n. `python-social-auth` is fully compatible with Python 3.4, as you can see in this log, the correct dependencies were installed\n\n``` shell\n$ pip3 install python-social-auth\nDownloading/unpacking python-social-auth\n  Downloading python-social-auth-0.2.1.tar.gz (110kB): 110kB downloaded\n  Running setup.py (path:/home/omab/.virtualenvs/foo2/build/python-social-auth/setup.py) egg_info for package python-social-auth\n\nDownloading/unpacking requests>=1.1.0 (from python-social-auth)\n  Downloading requests-2.4.3-py2.py3-none-any.whl (459kB): 459kB downloaded\nDownloading/unpacking oauthlib>=0.3.8 (from python-social-auth)\n  Downloading oauthlib-0.7.2.tar.gz (106kB): 106kB downloaded\n  Running setup.py (path:/home/omab/.virtualenvs/foo2/build/oauthlib/setup.py) egg_info for package oauthlib\n\nDownloading/unpacking six>=1.2.0 (from python-social-auth)\n  Downloading six-1.8.0-py2.py3-none-any.whl\nDownloading/unpacking PyJWT>=0.2.1 (from python-social-auth)\n  Downloading PyJWT-0.3.0-py2.py3-none-any.whl\nDownloading/unpacking python3-openid>=3.0.1 (from python-social-auth)\n  Downloading python3-openid-3.0.5.tar.gz (300kB): 300kB downloaded\n  Running setup.py (path:/home/omab/.virtualenvs/foo2/build/python3-openid/setup.py) egg_info for package python3-openid\n\n    warning: no files found matching 'NOTICE'\n    warning: no files found matching 'CHANGELOG'\n    warning: no files found matching 'README.md' under directory 'examples'\n    warning: no files found matching '*.css' under directory 'doc'\n    warning: no files found matching '*.html' under directory 'doc'\nDownloading/unpacking requests-oauthlib>=0.3.0,<0.3.2 (from python-social-auth)\n  Downloading requests-oauthlib-0.3.1.tar.gz\n  Running setup.py (path:/home/omab/.virtualenvs/foo2/build/requests-oauthlib/setup.py) egg_info for package requests-oauthlib\n\nDownloading/unpacking defusedxml (from python3-openid>=3.0.1->python-social-auth)\n  Downloading defusedxml-0.4.1.tar.gz (48kB): 48kB downloaded\n  Running setup.py (path:/home/omab/.virtualenvs/foo2/build/defusedxml/setup.py) egg_info for package defusedxml\n\nInstalling collected packages: python-social-auth, requests, oauthlib, six, PyJWT, python3-openid, requests-oauthlib, defusedxml\n  Running setup.py install for python-social-auth\n\n  Running setup.py install for oauthlib\n\n  Running setup.py install for python3-openid\n\n    warning: no files found matching 'NOTICE'\n    warning: no files found matching 'CHANGELOG'\n    warning: no files found matching 'README.md' under directory 'examples'\n    warning: no files found matching '*.css' under directory 'doc'\n    warning: no files found matching '*.html' under directory 'doc'\n  Running setup.py install for requests-oauthlib\n\n  Running setup.py install for defusedxml\n\nSuccessfully installed python-social-auth requests oauthlib six PyJWT python3-openid requests-oauthlib defusedxml\nCleaning up...\n```\n. Closing, too old, and not a problem at the moment. Reopen if needed.\n. `GithubBackend`? Maybe something left from a migration from `django-social-auth` to `python-social-auth`?\n. `registration/login.html` is the default template used by `django.contrib.auth` application when hitting the `/login/` URL. If you are looking to trigger the login with Facebook view, then you should use `/login/facebook/` instead. For more details about the Django view, check the docs at https://docs.djangoproject.com/en/1.7/topics/auth/default/#django.contrib.auth.views.login\n. @raphaelcuba, I don't think I follow, those two images are for Django errors (different errors), are you talking about the page format itself? Like, you don't want that kind of error to be displayed to users (like when setting `DEBUG = False` in your settings)?\n. OK, I think I follow you now, you get redirected to `/login/` URL? Any chance that the redirect happens because the view you hit has the `@login_required` decorator? Do you have the server log for this failed attempts?\n. The error says `global name slugify is not defined`, do you use `slugify` in your project?\n. OK, I've lost you again, I don't know what's your real error is.\n. I've pushed the changes, could you give it a try?\n. Merged, thanks for adding tests to it too! I've added some quick docs.\n. Merged, thanks!\n. Looks great, thanks!\n. I think that the removal is the correct step, thanks!\n. Thanks!\n. Thanks!\n. There's not such context process in python-social-auth.\n. Docs here http://psa.matiasaguirre.net/docs/configuration/django.html#exceptions-middleware\n. Docs updated, http://psa.matiasaguirre.net/docs/configuration/settings.html#miscellaneous-settings\n. The example app was corrected on on how to get the user instance, the library doesn't support lazy-like objects internally and a real user instance must be provided to it.. Yahoo OAuth2 was implemented a while back http://psa.matiasaguirre.net/docs/backends/yahoo.html#yahoo-oauth2\n. What's the error raised?\n. Using PSA isolated from a framework is not 100% supported (yet), the recent [split into smaller modules](https://github.com/python-social-auth) should make that possible in the future. . That's because the setting name is `SOCIAL_AUTH_LINKEDIN_OAUTH2_FIELD_SELECTORS`.\n. This is python-social-auth, django-social-auth was deprecated and I'm not dedicating time to support it anymore.\n. Sorry about the delay, it's finally merged (with an small check added).\n\nThanks!\n. Thanks!\n. You can hit `http://graph.facebook.com/USER-ID`, it will return a JSON response with a `link` key with the profile URL. Also you can hit `http://www.facebook.com/USER-ID` and catch the redirect Location.\n. Thanks!\n. Thanks!\n. Thanks!\n. Fixed, thanks!\n. Thanks!\n. The related PRs to properly fix Google OpenId Connect were merged or ported to [social-core](https://github.com/python-social-auth/social-core).. What's the value for domain and redirect uri facebook developers dashboard for your app?\n. Thanks!\n. Sorry about the delay, I've updated it to `v2.3` (which changed the message response from querystring to json).\n. Not sure if this is the one you are looking for http://psa.matiasaguirre.net/docs/backends/qq.html, if that's not it, I won't be able to create a backend for a Chinese site (language barrier).\n. Thanks!\n. Closed by #563\n. Revoke methods moved to the base class.\n. It should be invoked like this:\n\n``` python\nfrom social.apps.django_app.utils import load_strategy\n\nuser = User.objects.get(pk=...)\nsocial = user.social_auth.get(provider='google-oauth2')\nsocial.refresh_token(load_strategy())\n```\n. There was an error on how the state validation was done previous to error checking which masked the original error as an state-missing one. Fixed by https://github.com/python-social-auth/social-core/commit/4d2903c1a26cc433731dcc103fd211a7a4716b96. Closed by #491\n. Thanks!\n. This only works for Django framework but the function is defined in the main `utils.py`, this kind of framework-related feature should be defined in the corresponding strategy.\n. Cool, thanks for also including the docs and comments.\n. Thanks!\n. Thanks!\n. Thanks!\n\nFixes #501\n. Thanks!\n. The app was created a long time ago when things where different, I don't see the need to change it, but if a pull-request is presented I'll merge it.\n\n@DavidJFelix, thanks for that extensive description! \n. I've flagged the trailing slashes to be optional for Django apps.\n\nFYI, you can drop the built-in URLs and use your own version pointing to the same views, just don't include the built-in `urls.py`.\n. @nicksnell, I've pushed a change for that, now the trailing slash is controlled by a setting `SOCIAL_AUTH_TRAILING_SLASH`, set it to `True` (have trailing slashes in URLs) or `False` (don't have them). It defaults to `True` to keep it backward compatible.\n. Recently facebook introduced an approval mechanism for scopes, the only ones that don't require approval are `public_profile`, `email` and `user_friends`, anything else will require Facebook to review your app (you need to submit a request to review it).\n\nAlso, many of the scopes don't mean that the data will be available during the auth process automatically, you need to call the Facebook APIs to retrieve it (python-social-auth will only care about the basic data needed to authenticate the user and nothing else).\n. Thanks!\n. Thanks!\n. Thanks.\n\nFixes #508 \n. Thanks!\n. Python social auth supports loging by email/username, docs are here http://psa.matiasaguirre.net/docs/backends/email.html\n. Merged, thanks!\n. You know this is a python application, right?\n. Actually it was my fault, I rushed to check the code and quickly saw the usage of `hmac_sha256` but didn't saw it's definition above, also I've noted the `;` after that function call, plus the failing Python3 tests (which are caused by encoding while calling the hashing lib).\n\nI'll reopen it and fix the issues in a branch before merging the work.\n. It's merged now.\n. Thanks for tracking this and posting a pull-request.\n. Thanks!\n. Thanks!\n. Thanks!\n. Closing, very broken tests.\n. @clintonb, I'll do it shortly\n. Hi, `v0.2.2` was just released to pypi.\n. Thanks!\n. I don't follow your request.\n\nClosing (reopen if needed).\n. This was fixed once merged #550\n. This doesn't seem to be a problem with python-social-auth but just something with your setup, right?\n. Thanks!\n. It seems that behance dropped OAuth2 support recently(?) in what looks like an API restructuring, their [blog post](http://blog.behance.net/dev/introducing-the-behance-api) from Sept 2014 says that OAuth2 would be introduced \"soon\" but so far it seems still broken.\n\nI've created a request on their help desk https://help.behance.net/requests/143083 (not sure if that's public).\n\nMeanwhile I've added a deprecated/broken notice in the docs http://psa.matiasaguirre.net/docs/backends/behance.html.\n\nI hope they solve this silly change soon.\n. Sadly behance is doing a (poorly planed) transition from OAuth2 to Adobe Identity, so OAuth2 is no longer to be supported, I'll remove the backend soon.\n. Fixed, thanks.\n. Already fixed.\n. Merged, I've also added a couple simplifications.\n. Thanks!\n. There was an error that made `state` getting validated on error responses from the provider that masked the real error as an state-missing problem, this got fixed by https://github.com/python-social-auth/social-core/commit/4d2903c1a26cc433731dcc103fd211a7a4716b96. Frankly I don't know, Tornado support was an experiment wrote in a night when preparing for a talk for PyCon Uruguay, it's worth checking tho.\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. I've merged the work, in the process I've updated `EXTRA_DATA` to hold the values from the doc. \n\nThanks!\n. This change will force the setting to everybody using the lib, instead there's a setting to accomplish that:\n\n``` python\nSOCIAL_AUTH_FACEBOOK_AUTH_EXTRA_ARGUMENTS = {'auth_type': 'rerequest'}\n```\n. Thanks!\n. Thanks!\n. Take a look to the tests suite, it uses [HTTPretty](https://github.com/gabrielfalcao/HTTPretty) to mock the auth flow, you can define a similar setup in your site to mimic the authentication process.\n. Thanks!\n. Thanks!\n. I've introduced the mentioned fixes and merged the work.\n\nThanks!\n. The code looks good and I like it, but I have some concerns about backward compatibility, maybe we can keep the code in the `__init__.py` with a version check to keep it compatible?\n. I've implemented the mentioned change and merged the work. Thanks!\n. @sohamnavadiya did you install the package `social-auth-django`?. @shepilov-vladislav, check the migration file https://github.com/omab/python-social-auth/blob/master/MIGRATING_TO_SOCIAL.md#django. @sohamnavadiya no problem, do you mind posting the solution, I know that transitions aren't always smooths and could be useful to somebody else experiencing the same problem.. Fixed by #550.\n. You don't need to monkey patch the backends, it's enough to define your own `storage` (you can inherit from the [built-in one](https://github.com/omab/python-social-auth/blob/183a57a33c1111bb9b19bfaac884cf82ae542073/social/storage/django_orm.py)), and override the [get_user](https://github.com/omab/python-social-auth/blob/183a57a33c1111bb9b19bfaac884cf82ae542073/social/storage/django_orm.py#L62-L69) method to take the current `site_id` into account, you might need to override other user related methods too.\n\nThe storage is defined in the [utils.py](https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/utils.py#L18-L19) module, and it can be overridden with the `SOCIAL_AUTH_STORAGE` setting. \n. Yeah, the trick is not going to be as simple as you thought, but you are in the correct path. What you need now is:\n1. Define your own `UserSocialAuth` model, make it inherit from your custom mixin\n2. Use that model in the configuration for `SocialAuthStorageOverride`\n\n``` python\n\nfrom django.db import models\nfrom social.apps.django_app.default.models import Nonce, Association, Code, DjangoStorage\n\n\nclass UserSocialAuth(models.Model, SocialAuthUserMixinOverride):\n    class Meta:\n        db_table = 'social_auth_usersocialauth'\n\n\nclass SocialAuthStorageOverride(DjangoStorage):\n    user = UserSocialAuth\n```\n\nYou can avoid the mixin and directly define the overridden methods in the custom `UserSocialAuth` class.\n. The steam username is used as a base to the user username, if it's duplicated, then a extra hash will be added (so they are never repeated), also, if the user changes his username in steam, it won't change the username in your site (username is defined only once).\n\nYou are getting that error because you have two steam accounts associated to a single user, python-social-auth doesn't put any constraint to that, you can have several accounts from the same provider associated to a given user.\n\nYou should do `user.social_auth.filter(provider='steam')[0]` (or select one of them).\n. Thanks!\n. Looks great, merged.\n\nThanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Closing since it's not needed. Also adding a pipline that gets users by username is a security risk, many sites allow users to define their own username, this can be used to take over other user account with a similar username on a site using python-social-auth. \n. I've added rednose to python 3 dependencies too (that fixed the tests).\n\nThanks!\n. Thanks!\n. I need more details to debug this one, what social site are you using? Could you define steps to reproduce?\n. Thanks!\n. You need to escape your next parameter, it should look like `?next=%2Fmy%2Fredirect%2Fpath%3Fcode%3Dabcd`.\n\nBTW, you can quote it with `urllib.quote_plus('...')`.\n. This is probably by the lack of the certificates in your server, try installing the `ca-certificates` package on it (if it's a debian derivative just run `sudo apt-get install ca-certificates`), also ensure that your server date is properly defined (use `ntpdate` or similar).\n. Where in the docs says that the id shouldn't be taken as the user identifier? In fact, you can change your username in Github Settings.\n. An `id` that can change, is not a valid way to identify a unique user `id`. Anybody that changes his username won't be able to logging back to their account in your site.\n\nYou can retrieve the username using the `/user` API (https://developer.github.com/v3/users/#get-the-authenticated-user). Also, you can store it `extra_data` when defining the setting `SOCIAL_AUTH_GITHUB_EXTRA_DATA = [('login', 'login')]` (I've added that entry to the default value, so you won't need the setting actually). Then you can access it by doing `user.social_auth.get(provider='github').extra_data['login']`.\n. Docs added, check here http://psa.matiasaguirre.net/docs/logging_out.html\n. Thanks!\n. That's an odd implementation, but works, for me, thanks!\n. Version 0.2.3 released.\n. No problem!\n. I've added a condition import also updated the docs to mention the [transaction](https://pypi.python.org/pypi/transaction) package.\n. Thanks!\n. Do you have the complete traceback?\n. That change should get rid of the issue and raise a more simpler exception.\n. Twitter doesn't disclose email address, so you won't be getting one when using that backend. About `username`, that's because the user creation is calling your user manager `create_user()` method, by default it will pass the `username` parameter, but you can avoid that by defining `SOCIAL_AUTH_USER_FIELDS = ['email']` (set any parameter name that your `create_user()` method expects).\n. Hi Dima. I've updated the mongoengine example using the other example as base, in this new version the missing email is taken into account by a pipeline function and it's requested as part of the process.\n. What's the vague exception?\n. If that's the error, it won't only fail the validation because email is \"missing\", it will also break the whole authentication process since the pipeline information is empty, the whole authentication process will fail.\n. @maxsocl, @craig-hacklaunch, I see the problem now, and even if I think that this could be solved with a re-write of the email validation pipeline, this affects all the pipeline functions that use the partial mechanism, so, I'm already working on a restructure of the pipeline serialization functionality that will improve this behavior. Basically the pipeline data will be dumped to a DB table and a hash code will be used to identify the processes which can be stopped and continue later, removing the dependency of the session.\n. File added. Thanks!\n. Thanks!\n. These are already solved by #550\n. The change is not released into pypi yet.\n. I do releases mostly by demand or when I feel the amount of changes are worthy a release. I've released `v0.2.4` a few minutes ago.\n. `SOCIAL_AUTH_EXTRA_DATA` should be a list, not a boolean field, check the docs at http://psa.matiasaguirre.net/docs/backends/oauth.html. I see a lot of old settings (like `django-social-auth` old) there:\n- `SOCIAL_AUTH_ENABLED_BACKENDS`\n- `SOCIAL_AUTH_CHANGE_SIGNAL_ONLY`\n- `GITHUB_API_SECRET`\n- `GITHUB_APP_ID`\n- `GITHUB_PASSWORD`\n- `SOCIAL_AUTH_COMPLETE_URL_NAME`\n- `SOCIAL_AUTH_ASSOCIATE_URL_NAME`\n. Awesome, thanks!\n. Thanks!\n. Fixed by #550\n. Cannot be removed (in fact it could be added by others), I've added a not saying it's deprecated.\n. What version of psa are you using?\n. I've released `v0.2.4` a few minutes ago, that should fix your issue.\n. That's already fixed (was released a couple days ago).\n. You need to set `SOCIAL_AUTH_PROTECTED_USER_FIELDS = ['email']` to avoid that value overwrite.\n. The setting is documented here http://psa.matiasaguirre.net/docs/configuration/settings.html?highlight=protected#miscellaneous-settings. Anyway, I've added `email` as a protected field by default a few minutes ago (and released `v0.2.5` too) because it's been asked quite often recently.\n. I've released `v0.2.5` which solves this issue, the problem was caused by the recently introduced wheel support, but the packages built was broken (Python 2 dependencies defined in the a single universal wheel), I've fixed it b building version-dependent wheels now.\n. The `302` response is not an error, that's OK, clicking that link again raises an error because it's trying to get a value from the session that's not there anymore (because the URL was already visited during the complete process).\n\nNo, regarding the problem in your server, do you have the full traceback? Also check if you have access to Twitter API from your server (try wget or similar tools to hit it). It looks like your server is experiencing issues accessing the twitter API (maybe because it's over `https`, which is not the first time something similar is reported).\n\nHow's the server datetime defined? Do you have `ntpd` or similar installed (highly recommended)?\n. What I meant is that your server (the machine that you are using where the app is deployed, the one with Apache), might have some limitations accessing third-party sites or protocols or ports, so you need to check if that serve is killing your connection to twitter, try this in that machine `wget https://api.twitter.com/oauth/request_token`, it should drop a 400 bad request (because it lacks some parameters).\n. I think you are not following me, I didn't meant that your server should be running over SSL, I meant that it looks like your server doesn't have a correct access to SSL APIs. Do you have `nptd` running on that machine?\n. Could you try installing `python-social-auth` from github and try again? You can install it with pip like this:\n\n``` shell\n$ pip install -e \"git+https://github.com/omab/python-social-auth.git#egg=python-social-auth\"\n```\n. `v0.2.6` (just released) includes the requirements files.\n. Thanks!\n. That's odd, it's working just fine for me, I've changed that method recently to use `get_json()` since the docs specify that with API `v2.3` the response to `/oauth/access_token` is of JSON nature (https://developers.facebook.com/docs/facebook-login/manually-build-a-login-flow/#confirm).\n\nMaybe you need to enable `v2.3`?\n. Python 3.4.2 and Django 1.8 here too.\n. That change should get rid of the issue, please test and reopen the ticket if needed.\n. I think that 254 chars is probably enough.\n\nThanks!\n. Fixed, thanks!\n. Merged, thanks!\n. What version are you using? There was a fix related to access token storage when using AJAX authentication a few days ago.\n. This approach resembles the default server-side OAuth2 implementation, the user clicks the login button, get's redirected to the provider where it accepts, get's redirected back to the site with a `code` parameter, that's then exchanged for an `access_token`.\n\nIn theory (this is not tested), you can call `request.backend.auth_complete()` in your view implementation.\n. Do you have the complete traceback?\n. It seems that you are using the `default` application (which uses Django ORM) and the Mongoengine one, that's not compatible, and in this case the mongoengine application is overriding the models definition and failing when trying to connect to MongoDB.\n. What? Do you have any traceback? Any info?\n. It looks like your python setup is broken and lacks some modules, check that you have the SSL dependencies when installing it.\n. The problem is not with `python-social-auth` or `requests`, it's withing your Python installation which lacks SSL support (needed to connect to any SSL-based service), you need to recompile Python with SSL support, or reinstall a version with it.\n. I've never tried it, but AFAIK it works.\n. Merged. Thanks!\n\nI've also made an small change, replaced the `json.loads(urlopen(...))` with the `get_json()` helper method that simplifies the task.\n. No description?\n. `AppConfig` is defined here https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/default/config.py.\n\nThere's no need for a rename of an app that's over 2 years old, in active development and used by many developers that never complained about that.\n. The `user` instance passed in the pipeline is from `django.contrib.auth.models.User` unless the user model was overridden by `AUTH_USER_MODEL` setting (https://docs.djangoproject.com/en/1.8/topics/auth/customizing/#substituting-a-custom-user-model).\n\nAbout `roles`, it depends on how your application manages them, if you are referring to `Groups` (https://docs.djangoproject.com/en/1.8/topics/auth/default/#topic-authorization), then follow the Django docs about it.\n. I've added TLSv1 support to Amazon backend. Now, regarding `django-social-auth`, that lib is deprecated and support for this won't be added to it.\n. How do you track that? Different buttons? If that's the case, then check this solution to a similar problem https://groups.google.com/d/msg/python-social-auth/4U6eaeaPtEc/ErS3NT_CsR4J\n. Thanks!\n. I don't see an reference to a migration named `0002_auto_20141123_1349` in the whole repository history, are you sure that that migration wasn't generated in your project?\n. `v0.2.9` released to pypi.\n. This can be accomplished with an intermediate page to do the final redirect, or even the final page can access the stored values in the session.\n. A Changelog is properly maintained now in the new library components at [python-social-auth](https;//github.com/python-social-auth).. This is a great PR, I'll take a look to it shortly. Many thanks!\n. @bradenmacdonald, I've checked the code and it looks good, thanks for working on it. I think that leaving `python-saml` out of the default dependencies is the best choice. I have a few questions tho:\n1. There's any chance to get some docs about how to use it?\n2. What's the status of the pending pull requests on `python-saml`?\n\nThanks\n. Thanks for those docs, I've merged the work, thanks!\n. Sounds great.\n. @bradenmacdonald, `v0.2.11` released.\n\n@pitbulk thanks for taking a look to it!\n. I've bumped the depedencies versions for Python 2 and 3, that should get rid of this issue, python 3 dependencies where behind python 2.\n. VK ID_KEY was updated to `id`.. Merged, thanks!\n. The examples were properly updated recently, they are located at [social-examples](https://github.com/python-social-auth/social-examples).. Merged, thanks!\n. @hwkns, `v0.2.13` released to pypi.\n. Thanks!\n. Merged, thanks!\n. Currently there's no implemented way, but with the recent split into smaller modules, it should be easier to accomplish this since the [core component](https://github.com/python-social-auth/social-core) doesn't depend on any framework.. Is this related to #632 on any way?\n. Merged, sorry it took so long.\n. The `state` is automatically sent by the auth provider, it's used as a security measure like if it was a CSRF token.. @nemesisdesign, version on pypi updated\n. Recent changes to OpenIdConnect porting it to use `jwkest` lib, properly take care of the signing algorithm.. The related PRs were merged or ported to the new lib [social-core](https://github.com/python-social-auth/social-core).. I've added a note regarding the OAuth1 access_token format in the docs https://github.com/python-social-auth/social-docs/commit/b816470b35c69e3fd304948a34023f5b9178a4cf.. Thanks!\n. This should be supported by now, check any of the example apps at [social-examples](https://github.com/python-social-auth/social-examples).. Changes merged with the small change to keep some degree of backward compatibility with the username-as-id behavior.\n\nThanks\n. Merged, thanks!\n. Set `SOCIAL_AUTH_AZUREAD_OAUTH2_SCOPE = [...]` and `SOCIAL_AUTH_AZUREAD_OAUTH2_IGNORE_DEFAULT_SCOPE = True`.. Damn, I need to fix the way I generate the changelog.\n\nThanks!\n. Great, thanks!\n. Thanks!\n. PSA wil automatically associate new social-account to the current logged in user, if there's no logged-in user, then a new one is created. The URLs are the same for create and associate.. Per-backend PIPELINE setting was added some time ago, per-backend USER_FIELDS was added here https://github.com/python-social-auth/social-core/commit/1690dd66aeb361f8fc0265c5e45035215f28d2d2.. Merged, with a slightly change to the API endpoints generation.\n\nThanks!\n. If a PR is proposed I would be willing to review and approve it in, but I don't have any plan to implement a custom strategy to improve the integration with django-rest-framework.\r\n\r\nI'm closing the issue, reopen in [social-app-django](https://github.com/python-social-auth/social-app-django) module if still relevant.. Fixed by https://github.com/python-social-auth/social-core/commit/4e33457813c63f6b1d7979cf2bdc30c5095c0ddf. Thanks!\n. A fix for this was already merged.. I've raised https://github.com/python-social-auth/social-core/issues/8 to properly track this issue in the new components.. PR merged.. Fixed by #672\n. Thanks\n. Thanks!\n. Thanks!\n. Facebook API is already updated, currently version is 2.8.. Thanks!\n. Thanks!\n. The new examples at [social-examples](https://github.com/python-social-auth/social-examples) properly corrected this issue.. Thanks!\n. Merged, I've applied some PEP8 related changes and linked the docs to the backends index.\n\nThanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. PR was merged and issue is fixed.. Thanks!\n. Thanks!\n. Yes, I would accept such PR, the documentation location is now at [social-docs](https://github.com/python-social-auth/social-docs).\r\n\r\nThanks.. `redirect_url` is an option in OAuth2 providers when creating the application on their end, it's meant to be used to send the user to that location once approved the access, when configuring PSA, the value usually has the form `http://yousite.com/complete/qq`.. Thanks!\n. This got addressed.. Good idea, thanks!\n. This is really great, many thanks. You can find the docs here http://psa.matiasaguirre.net/docs/developer_intro.html\n. Currently there's no easy way to resume a pipeline from another browser since it heavily depends on the session which also usually depends on the browser cookies. I've created https://github.com/python-social-auth/social-core/issues/7 to start working on a solution to this common problem.. Thanks!\n. Thanks!\n. Thanks\n. When the user cancels the auth, the project needs to properly deal with the exception and render/return/etc a proper notification since PSA only deals with the flow, doesn't do rendering or integrates with the project styles, when using Django, there's a [middleware](http://psa.matiasaguirre.net/docs/configuration/django.html#exceptions-middleware) to ease the process.\r\n\r\nIt's quite common for the APIs to drop errors when not configured properly, on many cases the errors are treated as `AuthCanceled`, on some cases probably wrongly.. Thanks!\n. Thanks!\n. Why?\n. Personally I don't like trailing commas in `tuples` or `dicts`, but this PR is harmless, so I'll accept it.\n\nThanks!\n. Since the error is in a `print` statement, I would assume that the server stdout is closed, thus producing an IO error when trying to write to it.. Thanks!\n. This should suffix as an example https://github.com/python-social-auth/social-core/blob/master/social_core/backends/open_id.py#L338-L356. Thanks!\n. The button was removed since it wasn't used anymore.. Check the name in your `AUTHENTICATION_BACKENDS` setting, it should read `social.backends.facebook.FacebookOAuth2` (note the uppercase A in the OAuth2 part in the name).\n. Thanks!\n. Facebook API is now at 2.8 and the lib was updated to support it.. Thanks!\n. Thanks!\n. The example apps were updated recently, they now reside in [social-examples](https://github.com/python-social-auth/social-examples).. Updated https://github.com/python-social-auth/social-docs/commit/551123cc61a545ef79b683592a0931f1a313cca5.. Thanks!\n. The bytes type is properly treated now.. Thanks!\n. That's odd, this PR should be closed by the manual merge I did.\n. Thanks!\n. Thanks!\n. Closing since #772 got merged.\n. https://github.com/omab/python-social-auth/blob/master/CHANGELOG.md#v0213-2015-09-25. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/25ca1f51b1e2e22521fdee33ac542ce2bcfb4da0).\r\n\r\nThanks!. Thanks!\n. Thanks!\n. Took a couple months, but it's finally merged. Thanks!\n. There's no support for it yet, issue was created [here](https://github.com/python-social-auth/social-core/issues/6) to work on it.. Support added at [social-core](https://github.com/python-social-auth/social-core/commit/b20feb4ffef6dfcb2c171b9d04cfa65f405d1578).. Thanks!\n. This got solved.. This got fixed.. Thanks!\n. Thanks!\n. The new app [social-app-django](https://github.com/python-social-auth/social-app-django) should be ready for Django 1.10.\r\n\r\nThanks!. Thanks!\n. The pipeline was updated to a more generic version that will fetch the needed fields to create a user from the setting `SOCIAL_AUTH_USER_FIELDS`, defaults to `['username', 'email']`.. Thanks!\n. Thanks!\n. PSA focus on social athentication/authorization, it also has support for \"legacy\" backends (email and username), you could extend any of those with the desired behavior. Check the docs for them here http://psa.matiasaguirre.net/docs/backends/index.html#non-social-backends. Docs updated https://github.com/python-social-auth/social-docs/commit/628d7aa9c664cc3d51f6f87fc01d7bc6721db5a5. Thanks!\n. Thanks!\n. Closing since this is already in the codebase https://github.com/python-social-auth/social-app-django/blob/master/social_django/storage.py#L112.\r\n\r\nThanks!. The fix was merged.. Thanks!\n. A similar change was already introduced a while ago, it also forms part of the new app [social-app-django](https://github.com/python-social-auth/social-app-django).\r\n\r\nThanks!. Merged, thanks!\n. Closing since this was fixed a long time ago.. Backends list can be found here http://psa.matiasaguirre.net/docs/backends/index.html, there might be some cases where the documentation file is missing, but if a backend is defined [here](https://github.com/python-social-auth/social-core/tree/master/social_core/backends), the it's officially supported.. Fixed by https://github.com/python-social-auth/social-core/commit/4d2903c1a26cc433731dcc103fd211a7a4716b96.. Doesn't look like this is needed anymore (https://github.com/python-social-auth/social-core/blob/master/social_core/backends/reddit.py#L45-L47).\r\n\r\nThanks!. Sorry for the delay.\n\nThanks!\n. Thanks!\n. Closing since #941 got merged.\n. Merged, thanks!\n. Version updated https://github.com/python-social-auth/social-core/commit/54e245c58366d513d3b02e0b5ea18146be04ea16.. There was an incorrect check for the state value on error responses hiding the real error happening. Fixed by https://github.com/python-social-auth/social-core/commit/4d2903c1a26cc433731dcc103fd211a7a4716b96. Thanks!\n. I'm closing this since it's very outdated by now.\r\n\r\nThanks!. @matthowland could you update `AUTHORIZATION_URL` too?\n. Fixed by #797 \n. PR already fixed.. API version was recently changed to 2.7.\n. Thanks!\n. Thanks!\n. Warnings already fixed.. `v0.2.14` released with this fix.\n. Thanks @tkajtoch for that investigation, this looks clearly like a server outdated ca certificates. Reopen in [social-core](https://github.com/python-social-auth/social-core) if this still relevant.. Will take a look asap.\n. Thanks @yprez, merged.\n\n@gustavi it's not just \"code review\", and it also takes time.\n. Thanks!\n. Thanks!\n. Thanks!\n. Fix already merged.. Fix already merged.. Sorry about the delay, I'm very busy but slowly catching up with all the PRs proposed.\n\nThanks!\n. Thanks!\n. Thanks!\n. Support added https://github.com/python-social-auth/social-core/commit/4e832808f9db9fa94d228a159f8af960bd7a10ae. Merged, thanks!\n. Thanks!\n. I've ported this PR into [social-app-django](https://github.com/python-social-auth/social-app-django/commit/e9820bdb610b57f5ec397db0faa1987c2d851759).\r\n\r\nThanks!. Thanks!\n. Fix already merged, thanks!. Thanks!\n. An earlier change included the `include_email` flag in the request, I've manually merged this PR to resolve the conflicts, but did mostly to preserve part of the docs and the new test case.\n\nThanks!\n. I've created this issue https://github.com/python-social-auth/social-core/issues/7 to track the work needed to support this scenario.. With the usage of `resolve_url` this should be fixed (https://github.com/python-social-auth/social-app-django/blob/master/social_django/strategy.py#L49).. Thanks!\n. There are a few options to override the default behavior:\r\n\r\n1. Add a custom pipeline after `social_details` that will alter the value in the `details` parameter\r\n2. Extend the Yahoo backend and override the `get_user_details()` method, then replace the line in `AUTHENTICATION_BACKENDS` to point to your version of the backend. . Thanks!\n. PSA setting should be named `SOCIAL_AUTH_PIPELINE`, the lib will attempt the following names in this order when trying to fetch the setting:\r\n\r\n1. SOCIAL_AUTH_<BACKEND NAME>_PIPELINE\r\n2. SOCIAL_AUTH_PIPELINE\r\n3. PIPELINE\r\n\r\nFirst one to match is returned.. The settings name in your settings should be `SOCIAL_AUTH_STEAM_API_KEY`, check the docs [here](http://psa.matiasaguirre.net/docs/backends/steam.html).\n. Implement a backend for your custom provider, point it to the internal URLs for it and add the backend to `AUTHENTICATION_BACKENDS` setting.. I've ported this PR into [social-app-django](https://github.com/python-social-auth/social-app-django/commit/7c88d23b43f1fb41215ad1af8efe0405d02f894a).\r\n\r\nThanks!. `UserSocialAuth` instances have a `expiration_datetime()` method that will return a `timedelta()` with how many seconds will remain the validity of the access token, this depends on the value of `expires` in `extra_data`, which is not stored by default for every backend, just a few define the needed value in the `EXTRA_DATA` dict. Also, there are some cases where the provider will return a seconds-to-live instead of a timestamp, and this case is not very well supported yet since there's no created-at time to track it against of, but that can be easily workarounded with a custom pipeline that stores such time in the `extra_data` attribute.. Thansk!\n. Dependency updated and enabled Python 3 integration in [social-core](https://github.com/python-social-auth/social-core/commit/4c9623dbf13bafeca506f4434ad8ec5f8347bd6c).. Thanks!\n. Manually merged to apply PEP8.\n\nThanks!\n. Google OAuth2 backend is accessible at `/login/google-oauth2`.. Closing since this pulls in too many dependencies (probably from your own project requirements).\r\n\r\nThanks!. Thanks!\n. I've merged this manually and moved the querystring parameter in the URL to the `params` option in `get_json`.\n\nThanks!\n. Thanks!\n. Example apps were revamped as part of the split [social-examples](https://github.com/python-social-auth/social-examples/blob/master).. PR merged.. This is already fixed in the new app [social-app-django](https://github.com/python-social-auth/social-app-django/blob/master/social_django/fields.py).\r\n\r\nThanks!. Thanks!\n. Fixed by https://github.com/python-social-auth/social-core/commit/dd9897c62cf36aab74eb97a1730d28cadee314a9. Thanks!\n. The strategies are the responsible for defining the needed methods to access the current framework session capabilities (https://github.com/python-social-auth/social-core/blob/b78159cbd45ff1c281e92d7756ab03c22f7ded8f/social_core/strategy.py#L182-L192), if that's what you are looking for, then you need to define you custom strategy (you can inherit from the already implemented one for the framework you use), and define those three methods with your desired mechanism. Then set the setting `SOCIAL_AUTH_STRATEGY` to be an import path to your custom class.. Fixed by https://github.com/python-social-auth/social-core/commit/b78159cbd45ff1c281e92d7756ab03c22f7ded8f.. Docs added https://github.com/python-social-auth/social-docs/commit/c733a4f12c7e691a520b49643703725883a09080. Closing since the psa-way to do this, is to properly differentiate the backends by provider, if the code is the same, then that can be implemented in a base class, but the backends are required since their name is used to retrieve the corresponding settings.\r\n\r\nThanks!. Fixed at https://github.com/python-social-auth/social-app-django/commit/d79d8bde9f4b49a1406683f0731bf1719987695d.. This got addressed in the last changes to the JSONField in `social-app-django`.. Actually the value should be `POCKET_KEY` as it's documented [here](http://psa.matiasaguirre.net/docs/backends/pocket.html), but the code wasn't reflecting that value properly.\n. I can't reproduce this, `appsecret_proof` seems to be generated accordingly the rules in [facebook docs](https://developers.facebook.com/docs/graph-api/securing-requests), maybe this got fixed in the recent update to the backend.\r\n\r\nI'm closing it, if still relevant, please open a ticket in [social-core](https://github.com/python-social-auth/social-core) component.\r\n\r\nThanks. I've created https://github.com/python-social-auth/social-app-django/issues/6 to track the needed work.. Good idea, thanks!\n. Looks good, the change can be extended to other classes if needed, but right now this is enough.\n\nThanks!\n. Thanks!\n. Can't do at the moment due to a bug on their app, will update that once they fix https://github.com/pydanny/djangopackages/issues/392. `python-social-auth` will try several setting names in the following order:\n- `SOCIAL_AUTH_<BACKEND_NAME>_PIPELINE`\n- `SOCIAL_AUTH_PIPELINE`\n- `PIPELINE`\n\nThe utility `setting_name` in `utils.py` adds the setting prefix `SOCIAL_AUTH_` to the names.\n. Thanks!\n. I'll try to get the new release out today, probably try to merge a few simple PRs before cutting it.\n. `v0.2.16` released to pypi.\n. I've opened a new ticket in https://github.com/python-social-auth/social-core/issues/6 to track this request.. Thanks!\n. Thanks!\n. I've manually merged the changes since they had conflicts.\n\nThanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. There's no `loading` reference in the application, that has to be something else in the project. `django_app` is not the right app to include, it should be `social.apps.django_app.default`.. I'll close this since the split to https://github.com/python-social-auth a solution that's framework independent seems like a more suitable solution.\r\n\r\nThanks!. Thanks!\n. I've ported this PR into [social-app-django](https://github.com/python-social-auth/social-app-django/commit/da662ca57c22e0b24a6e3c2374c74dafdfab18e4).\r\n\r\nThanks!. Fixed at [social-exampes](https://github.com/python-social-auth/social-examples/commit/e95eaa1cae1c179d1351f97aa2c9ccff5bba0ebe).. Thanks!\n. Thanks!\n. @clintonb, `v0.2.19` released\n. I've created https://github.com/python-social-auth/social-app-django/issues/5 to properly track this work.. Worth pointing that `django-jsonfield` is looking for a new maintainer for a while https://github.com/bradjasper/django-jsonfield/issues/146.\n. I'm closing this since pulling a third-party that didn't got a maintainer for a while will make things complicated.\r\n\r\nThanks!. Merged, thanks!\n. @clintonb thanks for this PR, I've merged it but ran PEP8 on it first.\n. If this is still relevant, please reopen on the corresponding component at [python-social-auth](https://github.com/python-social-auth).. Thanks!\n. I've improved the regular expressions used in [social-core](https://github.com/python-social-auth/social-core/commit/315aef3c42caa1d4be508411c48ec4e6cf054d90), also added an option to override the default behavior by defining a setting pointing to a function that will be invoked to do the cleanup.. This seems to be a problem with Steam since the common name for their certificate for `steamcommunity.com` points to `store.steampowered.com`.. Thanks!\n. That's correct, PSA just focus on authentication and basic user details retrieval, if the picture is already part of the VK data exchange, then it an be fetched by adding a custom pipeline to process it, if not, then a new request must be done to their API by using the access token stored in the DB.. ```python\r\nfrom social_django.models import AbstractUserSocialAuth, DjangoStorage\r\n\r\nclass CustomUserSocialAuth(AbstractUserSocialAUth):\r\n    custom_field = models.CharField(...)\r\n\r\nclass CustomDjangoStorage(DjangoStorage):\r\n    user = CustomUserSocialAuth\r\n```\r\n\r\nThen define the setting `SOCIAL_AUTH_STORAGE` with the import path to the `CustomDjangoStorage` class.. Thanks!\n. I've created https://github.com/python-social-auth/social-app-django/issues/7 to track the needed work to fix this (second issue, `cls.DoesNotExists` is already fixed).. The override should also override the user field and the corresponding related name to avoid the clash, I've removed the usage of `.social_auth` related field from the examples and the lib since it should't depend on such property due to overridable nature of it, `Storage.user.get_social_auth_for_user(...)` can be used for such means too, where `Storage` is the custom storage solution that overrides the built-in one.. I've added support for it in [social-core](https://github.com/python-social-auth/social-core/commit/35c267fbf84757bc4ec64b278a0edac040bb3309), and documented in [social-docs](https://github.com/python-social-auth/social-docs/commit/7d06053182e5ae4ae4f68e390c9af47889c138bb).. The answers given are correct.. Thanks!\n. I can't reproduce this, the backend is working as expected once the settings are properly set, ensure to have `SOCIAL_AUTH_OPENSTREETMAP_KEY` and `SOCIAL_AUTH_OPENSTREETMAP_SECRET` defined.. Hi @alexpantyukhin , I need to dedicate some time to review this change, thanks!\n. Finally merged it. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Closing as duplicate of #936.\n. Your settings are for `linkedin` backend, but your code is expecting `linkedin-oauth2`, your settings should be named like `SOCIAL_AUTH_LINKEDIN_OAUTH2_*`.\r\n\r\nPlease format properly the snippets when submitting a ticket.. Thanks!\n. Like this https://github.com/python-social-auth/social-examples/blob/master/example-common/templates/home.html#L39.. Assuming LinkedIn OAuth2 and Django, the access token is stored in the `UserSocialAuth` instance corresponding to `linkedin-oauth2`, to get it you can do:\r\n\r\n```python\r\naccess_token = user.social_auth.filter(provider='linkedin-oauth2')[0].access_token\r\n```\r\n\r\nWith that token you can call any of the LinkedIn APIs that the scope allows you to do.. Thanks!\n. Thanks!\n. I've updated the Slack backend in the [social-core](https://github.com/python-social-auth/social-core/commit/5ab8ec51245eae134a07749169ad5b246dba08d0) module.. Thanks!\n. This is hard to debug with little details, error tracebacks are very useful to help with this. Steam seems to work fine, I guess the problem was related with the key/secret settings.\r\n\r\nI'm closing it, please reopen in the [social-core](https://github.com/python-social-auth/social-core) component if this is still relevant.. PR already merged.. Thanks!\n. `login_redirect` can't ignore the `request` is a required parameter, if doesn't fit your current setup, that means that you need a custom function for that particular environment.. Fixed by https://github.com/python-social-auth/social-app-django/issues/2. @dvdhpkns, did you try the steps on https://github.com/omab/python-social-auth/blob/master/MIGRATING_TO_SOCIAL.md#migrations ?. Do anybody have detailed steps to reproduce the situation? So far I wasn't able to do it on my end.. That seems to be the right way, thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. As per the downtime, handling that is out of the scope of a simple lib, in fact the possible solutions mention in the stackoverflow question are mostly architectural. Still, thanks for the notice.\n\nAbout the nounces, I agree that they shouldn't reside in the DB and I've been planning on removing that table for a while, probably just use the framework of choise session mechanism.\n. Thanks!\n. @rlucioni, `v0.2.20` released to pypi.\n. Should be fixed by now.. Thanks!\n. Thanks!\n. A fix for this was already merged into [social-app-django](https://github.com/python-social-auth/social-app-django/blob/master/social_django/admin.py#L28).. Technically that's doable by overriding the strategy `get_setting` method.. The Django `request` can be accessed at `strategy.request`.. I've created https://github.com/python-social-auth/social-app-django/issues/6 to track the needed work for this.. Closing since #968 got merged.\n\nThanks!\n. Try with `strategy.session_get('password')` in your pipeline.. Thanks!\n. You need to override the backend in use, let's assume `Facebook OAuth2`, the following override should be what you are looking for:\r\n\r\n```python\r\n\r\nfrom social_core.backends.facebook import FacebookOAuth2\r\n\r\nclass FacebookOAuth2Token(FacebookOAuth2):\r\n  name = 'facebook-token'\r\n  RESPONSE_TYPE = 'token'\r\n```\r\n\r\nAdd that backend to the `AUTHENTICATION_BACKENDS` setting and use the url `/login/facebook-token`.. Can't help with this little details, `app_session` seems to be defined in Pyramid or Tornado frameworks.\r\n\r\nI'm closing it, please reopen in the corresponding component in the [splitted social auth](https://github.com/python-social-auth) if still relevant.. Thanks!\n. [Docs updated](https://github.com/python-social-auth/social-docs/blob/master/docs/developer_intro.rst#L131). [Done](https://github.com/python-social-auth/social-docs/commit/29985ce439d35cbd71457b0799fef41bae68ff8a).\r\n\r\nThanks. AFAIK there's no way yet.\r\n\r\nClosing, reopen in [social-core](https://github.com/python-social-auth/social-core) if still relevant.. Thanks!\n. @rlucioni , `v0.2.21` released\n. Thanks!\n. Thanks!\n. @clintonb, `v0.2.21` released\n. Django 1.5.5 is too old, this lib won't be supporting anything older than the last Django LTS (currently 1.8), but if you need the request, you can access it by doing `strategy.request`.. The parameters change is not strictly needed since the `backend` can be retrieved from the `kwargs`, but it's harmless and I like the exception change too.\n\nThanks!\n. The fix for this issue got merged into the [social-app-django](https://github.com/python-social-auth/social-app-django) component.. Your guess is correct, you just need to present the form to the user, no need to go to `/login/email` first, that form needs to `POST` to `/complete/email` and a custom pipeline function will be responsible of taking the form data and storing it were needed.. This falls out of the this library responsibilities.. Yeah, you need your own pipeline method that does such flag setting and avoids the pausing of the auth pipeline.. Depends on your needs, but if you need email-validation you need to implement such feature at some point. PSA doesn't do much on this matter, it just sends an email with a link to complete the authentication in a way that we can trust that the user validated the address.. I've updated the endpoint in [social-core](https://github.com/python-social-auth/social-core/commit/4912fe1523e52a88dddc8fa1004ad8ccee62737b).. You can override the [complete](https://github.com/python-social-auth/social-app-django/blob/master/social_django/views.py#L25) view and with that determine the login behavior by setting your custom login function.. Closing, please reopen in [social-app-django](https://github.com/python-social-auth/social-app-django) if still relevant.. @tsouvarev, the PR looks good, but I'm in the middle of splitting the application in smaller pieces (core, django, flask, etc), I'll port any PR to the corresponding place once I've finish the split/migration\n. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/78da4eb201dd22fd2d8a4e38a1d17a73beabad24).\r\n\r\nThanks!. Can't debug without a proper traceback and the data involved. Closing, please reopen in [social-app-django](https://github.com/python-social-auth/social-app-django) if still relevant.. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/7183357baec18ae8a7cd34b234b7a9d940ccc397).\r\n\r\nThanks!. I've ported this PR into [social-app-django](https://github.com/python-social-auth/social-app-django/commit/6384c13fc1d4431db7f218fa78a3aaf8e034b566).\r\n\r\nThanks!. I'm closing this since the newer implementation at https://github.com/python-social-auth/social-app-django/blob/master/social_django/models.py#L30 already fixed these references.\r\n\r\nThanks!. Your problem looks more like that the `create_user(*args, **kwargs)` call is passing all the parameters you sent to it, that will cause you trouble with Django ORM, that's why the default pipeline limits the data passed to just the needed fields. You shouldn't be passing attributes that aren't part of the model to that method.. Under the `feature` label is fine.. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/f461abe3612dade058840e0595dde1d0aa0d90bd) and [social-docs](https://github.com/python-social-auth/social-docs/commit/415dc3d78af88ddc06b6a5cf2570b427a83cb8cc).\r\n\r\nThanks!. Fix for this got merged in the new split components [python-social-auth](https://github.com/python-social-auth).\r\n. Fix for this got merged in the new split components [python-social-auth](https://github.com/python-social-auth).\r\n. I've ported this PR into [social-app-django](https://github.com/python-social-auth/social-app-django/commit/fcd91c68f363ccbb9facd050d2a38e299acaabdd).\r\n\r\nThanks!. This got merged.. I've added a fix for this on [social-core](https://github.com/python-social-auth/social-core/commit/f1a66542b4972486ee8c0130efb8365534d9a7af). Only `None` values will be ignored.. I've ported this PR into [social-docs](https://github.com/python-social-auth/social-docs/commit/b9fa0e52f2dfdf14b4fe77a538c0be8ed3e8dec1) and [social-core](https://github.com/python-social-auth/social-core/commit/3761eae3e8dad6a61afcce3fd8fbca6ebaf792b8).\r\n\r\nThanks!. @keattang, sorry for the delays but I'm in the middle of transitioning `python-social-auth` to a more modular approach (almost done http://github.com/python-social-auth), next pending tasks involve migrating this repo to that organization, port PRs and Issues.\n. I've ported this PR into [social-docs](https://github.com/python-social-auth/social-docs/commit/14a2467fe93589954114709aacecfc3c4eb8003d) and [social-core](https://github.com/python-social-auth/social-core/commit/0930a7d7d314c8256c446777222e3a6fda714203).\r\n\r\nThanks!. The pipeline is backend agnostic, doesn't differentiate between OAuth2, OAuth1, OpenId or legacy, the same rules are applied to all.. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/4954b112d3e11e808c4a9cad80af47083f5f96ad).\r\n\r\nThanks!. I've created https://github.com/python-social-auth/social-app-django/issues/6 to track the needed work.. This got fixed in the new [examples component](https://github.com/python-social-auth/social-examples/blob/master/example-flask-peewee).. I'm closing this since the current README doesn't have any badge at all.\r\n\r\nThanks!. I've ported this change into [social-app-django-mongoengine](https://github.com/python-social-auth/social-app-django-mongoengine/commit/5afa9295c89024cc125b0520f7125745d76e10d7).\r\n\r\nThanks!. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/239a7bf01730ee961ed6dd4034f69813291f5245).\r\n\r\nThanks!. TODO: port the merged #1031 \n. Thank you all, the migration is going well, migrating PRs is going to be the more tedious part, but luckily many are straightforward and don't spread across components.\n. Small update, as you might noted, things keeps moving, I've updated this lib to depend on the new split packages, tests are all green. Now I'll start on migrating the different PRs/Issues to the new organization.. All relevant PRs got ported to their corresponding components.. Migration complete! :tada: . The new app [social-app-django](https://github.com/python-social-auth/social-app-django/blob/master/social_django) and the [new example](https://github.com/python-social-auth/social-examples/blob/master/example-django) should be up to date already.\r\n\r\nThanks!. @macolo, the reason is that I'm in the middle of migrating the project to http://github.com/python-social-auth, I need to port the PRs there first.\n. @jschneier, sure, we can do it\n. @tdruez, I'm porting the app to https://github.com/python-social-auth, I suggest using the git reference in the requirements.txt to get this fix since I don't plan any release on `python-social-auth` until I fully port it to depend on the new packages.\n. The app works fine with Django 1.10, the new split of the app ensured that the warnings were placated.. The fix for this problems got ported to the [social-core](https://github.com/python-social-auth/social-core) component.. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/155f77dc99d48cafff86c31a46de77bd9c55c4d1).\r\n\r\nThanks!. I've ported this PR into [social-app-django](https://github.com/python-social-auth/social-app-django/commit/eda0642b22a04d5989254fa4cb8dde1bd2f88a4a).\r\n\r\nThanks!. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/541ddbb6ec695cb6d78de452a6d56886546d28ae) and [social-docs](https://github.com/python-social-auth/social-docs/commit/48a4640f7906f5ce0cd17bd479246b5889618b53).\r\n\r\nThanks!. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/2b8e06a385b3c4ddbabe3a4bdedccc798439f081) and [social-docs](https://github.com/python-social-auth/social-docs/commit/1c24b7e6cab018d7a73b0691c41912ac2a9a857a).\r\n\r\nThanks!. I've merged this work into https://github.com/python-social-auth/social-docs.\r\n\r\nThanks!. I've ported this PR into [social-app-flask-sqlalchemy](https://github.com/python-social-auth/social-app-flask-sqlalchemy/commit/160bf47f74a6e9af8196f9fcc0af620f1816e4d7), [social-app-pyramid](https://github.com/python-social-auth/social-app-pyramid/commit/1869d6febbe4d22dec64e73a10e18c568632f0ff), [social-app-tornado](https://github.com/python-social-auth/social-app-tornado/commit/50bbc3750bce61bcc9ce8e0d7e860e3c806d4d56) and [social-app-webpy](https://github.com/python-social-auth/social-app-webpy/commit/bc63b1478e77a8d72914010a5e1e55bc8e99a226).\r\n\r\nThanks!. By itself, the app won't support that schema, but you can override it simply by defining your own Facebook backend that overrides the `get_key_and_secret()` method:\n\n``` python\nfrom social.backends.facebook import FacebookOAuth2\n\nclass CustomFacebook(FacebookOAuth2):\n    def get_key_and_secret(self):\n        key = get_facebook_app_key_based_on_some_rule()\n        secret = get_facebook_app_secret_based_on_some_rule()\n        return key, secret\n```\n\nThen use that backend by replacing `social.backends.facebook.FacebookOAuth2` in the `AUTHENTICATION_BACKENDS` setting with the import path to your `CustomFacebook` one.\n. Depends on your application, you can do it by:\n1. Overriding the python-social-auth views in order to specify the needed option\n2. Adding a parameter to the links querystring (which can then be retrieved in the backends by doing `self.strategy.request_data()`)\n3. Adding a parameter to the session (which can be accessed in the backends with `this.strategy.session`\n. I prefer not to maintain tests on a simple example application, if the tests are actually needed they should be integrated with the django app.\r\n\r\nThanks!. That doesn't seem correct, `tokeninfo` just returns information about the token (app, granted scopes, user id, lifetime), but no user details like `people/me`.. Since the port to [python-social-auth](https://github.com/python-social-auth), the section in the readme got removed, the backends are listed just in the documentation files.. This got ported to [python-social-auth](https://github.com/python-social-auth). Thanks!. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/027fe5c7bfc3eb346bf17fe8c5109bb9762471f9) and [social-docs](https://github.com/python-social-auth/social-docs/commit/7bfc870a41fddcaafafb50a1fe8164f458d9a17a).\r\n\r\nThanks!. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/dd4740775578526f3c6eaa946549f4c23076dd10).\r\n\r\nThanks!. I'm closing this since the new examples https://github.com/python-social-auth/social-examples/tree/master/example-flask-peewee corrected this issue.\r\n\r\nThanks!. I've ported this into [social-docs](https://github.com/python-social-auth/social-docs/commit/1c24b7e6cab018d7a73b0691c41912ac2a9a857a).\r\n\r\nThanks!. This requires more details in order to debug it, a traceback at least. If this is still relevant, please reopen on the corresponding component at [python-social-auth](https://github.com/python-social-auth).. This app is intended to be used with a web framework, the recent split into [python-social-auth](https://github.com/python-social-auth) might help to reach this goal, but as is, there's no support for it yet.. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/a842f5df9d9e8d42476f34db97d107b09316fa19) and [social-docs](https://github.com/python-social-auth/social-docs/commit/603c95d846a0adf85ff2918c5b463a29a8e91920).\r\n\r\nThanks!. Those are PostgresSQL fields only.. This got fixed already.. I don't see the need for this change, people shouldn't just copy-and-paste code.\r\n\r\nThanks!. I've ported this into [social-docs](https://github.com/python-social-auth/social-docs/commit/c5bcdc5fd3d2b8b322856fd7ac0d44a3f4c7e136).\r\n\r\nThanks!. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/0de0e7d1fbcd5ffbe06ff1e109919bb6e80df21e)\r\n\r\nThanks!. The only way I see this possible right is by doing:\r\n\r\n1. Define a custom `complete` view that mimics the code from the original (it's hard to reuse it at the moment), and returns the redirect with the needed token for the user\r\n2. Define a custom view that your app calls after a success login to retrieve the needed token.\r\n\r\nI'm closing this, please reopen in [social-app-django](https://github.com/python-social-auth/social-app-django) if still relevant.. I'm closing this since the new example at https://github.com/python-social-auth/social-examples/tree/master/example-django doesn't need this fix.\r\n\r\nThanks!. Hi @eronaeon, Facebook and Google can be consideres as having email verified, I assume it's a `@gmail.com` address or google-app address (since you are using Google), and the same address is in Facebook, for google is already \"validated\", since it's the source of the address, and Facebook validates the email addresses as part of the signup process.. @ranvijay-zymr this is not enough information to debug the problem, requests and responses bodies would be very helpful.. 1. What version of python-social-auth are you using? (the references in your traceback look outdated)\r\n2. What's the value for `LOGIN_ERROR_URL` in your settings?. You need to define `LOGIN_ERROR_URL`, that's the reason for the traceback, that doesn't mean that it will solve the error with your backend, it will just fix the traceback posted above.. Yeah, that wil do the trick, you can also temporarily set `LOGIN_ERROR_URL = '/'` to pass through the exception and continue debugging the OpenId problem. . @browniebroke, is this ready to get merged or do you want to hold the merge for a while?. Gotcha, I'll investigate that other issue, meanwhile I will merge this and then update the file with a note about that other problem.\r\n\r\nThanks!. Thanks!. You need to install `social-auth-app-django` too. Check the details in the [migration file](https://github.com/omab/python-social-auth/blob/master/MIGRATING_TO_SOCIAL.md#django).. Sorry?. @coleclayman, no, because somebody using `Flask` will end with a lot of dependencies related to `Django` that's undesired, so I've opted to document the needed dependency instead.. @sis, I can explore that option.. @sis, I've added the `extras` in [setup.py](https://github.com/omab/python-social-auth/blob/master/setup.py#L85-L95) also documented them in the [migration doc](https://github.com/omab/python-social-auth/blob/master/MIGRATING_TO_SOCIAL.md).. `v0.3.1` published into pypi.. I'm not accepting PRs on this project anymore, please reopen one in one of the components at [python-social-auth](https://github.com/python-social-auth). Looks like this one should be in [social-docs](https://github.com/python-social-auth/social-docs).\r\n\r\nThanks!. Somebody on #550 experienced the same troubles.. @fendyh what's your django version? Is django installed in your env (virtual or not)? What happens if you run `from django.template import engines` in a python shell within it?. @fendyh, PSA is dropping support for `Django <= 1.7`, I do recommend updating at least to 1.8, or stick with PSA version `0.2.21`. @fendyh I do not recomment going back to django-social-out, that codebase was abandoned years ago and it's very outdated at the memoment. If you stick to `python-social-auth==0.2.21`, you will have Django 1.7 support.. Try with `python manage.py migrate --fake`.. @tytarenko you don't, you can stick with `0.2.21` or migrate to the new version that depends on the new packages, the library is now split in smaller modules, and anything `>=0.3.0` will depend on the new packages.. Check the [migration doc](https://github.com/omab/python-social-auth/blob/master/MIGRATING_TO_SOCIAL.md#flask).. I've published `0.3.3` with the proper fix.. Roll back to python-social-auth `0.2.21`, anything `>= 0.3.0` is not compatible with Django 1.7.. Thanks!. Thanks!. Thanks!. Ensure that the `user` is indeed a user instance and not a queryset.. How do you check if somebody has access to that page? Also, why is the `next` value different for form-login and social-login?. Please move this ticket to https://github.com/python-social-auth/social-app-django. Fixed by https://github.com/python-social-auth/social-core/commit/feeb27c5d2bdf94428d09f289342cd64a679df62.. `python-social-auth` doesn't support Django 2.0 yet. The proper place to open a ticket related to Django would be in the https://github.com/python-social-auth/social-app-django project.. @Pomax, @cadecairos, `python-social-auth` uses Django [build_absolute_uri](https://github.com/django/django/blob/f87256b15e375c6c57fe425c33ae23e116da3e84/django/http/request.py#L158) helper that's in the HTTP Request class, looking at the code, you can see that it uses [get_host()](https://github.com/django/django/blob/f87256b15e375c6c57fe425c33ae23e116da3e84/django/http/request.py#L174) method defined [a few lines above](https://github.com/django/django/blob/f87256b15e375c6c57fe425c33ae23e116da3e84/django/http/request.py#L87), this one uses [_get_raw_host()](https://github.com/django/django/blob/f87256b15e375c6c57fe425c33ae23e116da3e84/django/http/request.py#L68), which will attempt to determine the host based on settings and/or request headers.\r\n\r\nThe common use case is to make the front server, load-balancer, proxy, etc, set the `X-Forwarded-Host` header with the domain, but to make it work with Django, ensure that the setting `USE_X_FORWARDED_HOST` is set to `True`.\r\n\r\nMore details on thins can be found in [Django docs](https://docs.djangoproject.com/en/1.11/ref/settings/#std:setting-USE_X_FORWARDED_HOST).. @RonnyPfannschmidt, at first glance it doesn't, but that's what allows you to do `from social.apps.flask_app.models import UserSocialAuth` in your project (after `init_social()` was called of course).\n. @RonnyPfannschmidt, `FlaskStorage` is needed to be on some import path since it's used by the strategy, you can see how the default value is used https://github.com/omab/python-social-auth/blob/master/social/apps/flask_app/utils.py#L10, there's no need to have the others classes since they are accessible through `FlaskStorage`, I'm willing to remove those from `globals()`.\n\nI'm not comfortable with this solution, having that `init_social()` looks awful IMO and I really like to get rid of that.\n. Code was improved, seems that this can be closed now.\n. Thanks!\n. @maxcountryman, this application was derived from [django-social-auth](https://github.com/omab/django-social-auth), which got [this issue](https://github.com/omab/django-social-auth/issues/520) raised some time ago. By the time I got a chance to work on it I've checked the available options around and rauth was very promising with a clean API, but the lack of Python 3 support ruled it out.\n\nRight now I'm happy with the result with using oauthlib and requests-oauthlib, so I'm not planing on changing it right now, but I'm not discarding it just now since it provides a clean API that could be useful for users using this app too.\n\nBTW, the comment on HN was mine.\n. I don't see a point on doing this migration right now, maybe in the future I can work on it, but so far `request_oauthlib` has been working very well.\n. Have you tried running `python manage.py syncdb` in the sample app? There's a manager command defined for that, I've just tried it with sqlite and postgresql and it worked as expected.\n. pip package differs (I'm waiting to finish the tests to make a new release), don't run `python manage.py migrate run`, use `python manage.py syncdb`.\n. I've released v0.1.1 to pypi, could you try again?\n. No problem, I'm closing the issue, reopen if needed.\n. Thanks!\n. I've merged this manually since github couldn't do it, thanks @uruz!\n. @gsakkis, `get_user_details()` should be defined on the backend that works with django-auth mechanism, while `user_data()` belongs to the authentication class used by DSA. In your case `user_data()` should call that service and retrieve the needed user information, then on `get_user_details()` you should transform that data into the expected format for DSA which is:\n\n```\n{\n    'username': <username if any>,\n    'email': <user email if any>,\n    'fullname': <user full name if any>,\n    'first_name': <user first name if any>,\n    'last_name': <user last name if any>\n}\n```\n. @gsakkis, when I wrote my previous reply I thought I was on django-social-auth project, not python-social-auth, it still applies (kinda), so let me rewrite it.\n\n`user_data()` should call the service that provide the extra user information, then `get_user_details()` must transform it to into the format that PSA expect, which is:\n\n```\n{\n    'username': <username if any>,\n    'email': <user email if any>,\n    'fullname': <user full name if any>,\n    'first_name': <user first name if any>,\n    'last_name': <user last name if any>\n}\n```\n. I think we can close this one.\n. Thanks!\n. Thanks for porting this backend, there are a few I need to port back from DSA, I've left a comment on the diff, if you make that small change I'll merge it immediately. \n. Thanks!\n. Thanks for the fix, DSA already has a solution for this issue which I didn't had time to sit and port to PSA.\n. Thanks!\n\n@san-mate, a change I want to implement is to avoid the mandatory `response` parameter in that auth process, unless you want to take the task?\n. Thanks!\n. Thanks\n. Could you detail the error? A traceback maybe?\n. @rday, no hurries, thanks. I'll close this one.\n. This should be fixed already.\n. It shouldn't be passed since the parameter is defined by name in the function prototype, how's the definition of the URL to that view?\n. Thanks, I've merged the change but updated it a little, check it here https://github.com/omab/python-social-auth/blob/master/social/strategies/flask_strategy.py#L58\n. Fixed https://github.com/omab/python-social-auth/commit/a51a6ac47d882015876ed45572e161f4d65ed43f, thanks!\n. Thanks!\n. @kennethkoontz, it's supported, here's the backend https://github.com/omab/django-social-auth/blob/master/social_auth/backends/contrib/linkedin.py#L60 and the URL should be `/login/linkedin-oauth2/`\n. According to Google, the `refresh_token` is only sent once (the first time), if you want it again the user must revoke your application access and then re-auth with it.\n. The re-auth is required by google, you talk about another issue which is already solved in python-social-auth.\n. Could you paste the value for redirect URI defined on Instagram and the value being passed by the application?\n. @mikepurvis, I've just tested it and worked as expected (last code revision), any chance the error happens on a custom pipeline?\n. No problem, thanks for the update and closing this.\n. @ondrowan, I'll check the steamid issue, it's odd since the [code](https://github.com/omab/python-social-auth/blob/master/social/backends/steam.py#L37) returns the match, otherwise an exception is raised.\n\nThis lib will replace django-social-auth, in fact I'm about to merge this [branch](https://github.com/omab/django-social-auth/tree/psa2) to make the migration step easier.\n. @ondrowan, which python version are you using? I've tried the backend and worked as expected, any other detail to try to mimic your setup?\n. @ondrowan, I've dropped the regex search on steam backend, could you give it another try?\n. Thanks!\n. @systemizer, thanks for the contribution, I've left a comment in the first changeset, please check.\n. Awesome, merged. Thanks!\n. Do you have an example where quoted chars don't work? Or some doc?\n. The problem with this PR is that it breaks the `redirect_state` parameter that's added to the `redirect_uri` value if the class has `REDIRECT_STATE = True`, this parameter is not part of the standard of course and it was added to implement an extra layer of protection, it work like the `state` parameter but and it's validated on the server side when the provider redirects back to the site. This is possible because many providers redirect back to the value of `redirect_uri` instead of using the value registered in the application (which shouldn't work that way but OAuth2 is broken on many services).\n. @romanalexander, I agree with that small change and was thinking that it was the only way to fix this while not breaking the other backends.\n. Thanks!\n. @ceelian, I've added pyramid support to the library, the docs are available here http://psa.matiasaguirre.net/docs/configuration/pyramid.html and also added an example application here https://github.com/omab/python-social-auth/tree/master/examples/pyramid_example.\n\nI'm sure that some things can be done better since this is my first time playing with the pyramid framework, any feedback is well welcome.\n. @jswain, issues fixed. Thanks!\n. @bjunix, I've fixed the docs and also updated other settings that weren't correct, the docs were originally from `django-social-auth` so a few names weren't correct.\n\nThanks!\n. Thanks!\n. Thank!\n. Thanks!\n. @antisvin, changed, please test. Thanks!\n. @dblado, try with this setting:\n\n``` python\nSOCIAL_AUTH_LINKEDIN_OAUTH2_EXTRA_DATA = [\n    ('id', 'id'),\n    ('first-name', 'firstName'),\n    ('last-name', 'lastName'),\n    ('summary', 'summary'),\n    ('email-address', 'emailAddress'),\n    ('headline', 'headline'),\n    ('positions', 'positions'),\n    ('industry', 'industry'),\n    ('educations', 'educations')\n]\n```\n. @dblado, sorry, typed too quickly, this is the correct value for that setting:\n\n``` python\nSOCIAL_AUTH_LINKEDIN_OAUTH2_EXTRA_DATA = [\n    ('id', 'id'),\n    ('firstName', 'first_name'),\n    ('lastName', 'last_name'),\n    ('summary', 'summary'),\n    ('emailAddress', 'email_address'),\n    ('headline', 'headline'),\n    ('positions', 'positions'),\n    ('industry', 'industry'),\n    ('educations', 'educations')\n]\n```\n\nThe settings will be under `s.extra_data['first_name']`, `s.extra_data['last_name']`, `s.extra_data['email_address']`\n. Cool, I'm closing the issue.\n. I cannot reproduce it:\n\n```\n$ pip freeze | grep Django\nDjango==1.5.4\n$ python manage.py syncdb --noinput\nCreating tables ...\nCreating table auth_permission\nCreating table auth_group_permissions\nCreating table auth_group\nCreating table auth_user_groups\nCreating table auth_user_user_permissions\nCreating table auth_user\nCreating table django_admin_log\nCreating table django_content_type\nCreating table django_session\nCreating table django_site\nCreating table social_auth_usersocialauth\nCreating table social_auth_nonce\nCreating table social_auth_association\nInstalling custom SQL ...\nInstalling indexes ...\nInstalled 0 object(s) from 0 fixture(s)\n```\n\nSome more details? Maybe something related with another installed app?\n. Any chance you have the full traceback?\n. @ArmyZRdz, the change above fixes the incompatibility with django-evolution.\n. `/complete/facebook/` is called to complete the auth process, if sucessful you will get redirected to `/` after that. Do you have a custom pipeline? Is this a partial pipeline?\n. Seems like the values being saved in the session during partial-pipeline operations should be cleaned up a bit in order to avoid this issues. Previously this wasn't an issue because the default serialization method was pickle, but that's going to change shortly in Django 1.6.\n. The changes above take care of the serialization problem.\n. Which version of mongoengine? What happens when you try this on a django-shell:\n\n``` python\nfrom mongoengine.django.auth import User\n```\n\nor:\n\n``` python\nfrom social.utils import module_member\nprint module_member('mongoengine.django.auth.User')\n```\n. Was trying this my self and seems that the default value for `AUTH_USER_MODEL` is causing errors, the default value is `auth.User` which refs to `django.contrib.auth.models.User`. But defining it to `mongoengine.django.auth.User` django complains about the format not being `app_name.ModelName`, defining `SOCIAL_AUTH_USER_MODEL = 'mongoengine.django.auth.User'` solves the issue.\n. According to your settings on SO you have `'social.apps.django_app.default'` in your installed apps, remove that one.\n. No problem.\n. Could you list the content-types in registered in your app? I think that the CT for `UserSocialAuth` changed since the app name change on PSA.\n. Add these entries to the top of you pipeline setting:\n\n``` python\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n```\n\nSo, it should look like:\n\n``` python\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.social_auth.associate_by_email',\n    'social.pipeline.user.get_username',\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details',\n    'accounts.social_auth_pipeline.get_profile_data', # custom\n    'accounts.social_auth_pipeline.get_profile_avatar', # custom\n)\n```\n. @nmundar, user will be an `AnonynousUser` before this line https://github.com/omab/python-social-auth/blob/master/social/actions.py#L56 (actually a little above, before any `user = ...` line). And the `strategy.authenticate` will always have `kwargs['user']` equal to `None` unless this is an association with an already created account. Does your custom pipeline entries return anything? Does the process work if you comment those two?\n. @nmundar, any luck with this? I don't see any problem with your settings or pipeline methods.\n. So far I wasn't able to reproduce this issue. @jasonwaters could you set a `try-except` block around these lines https://github.com/omab/python-social-auth/blob/master/social/backends/base.py#L72-L83 and check if there's any exception raised there?\n. Could you determine the two arguments passed?\n. @jasonwaters, from the last screenshot `social_details()` is getting arguments from `**kwargs`. How did you install `python-social-auth`, pip or cloning the repository?\n. @jasonwaters, I was able to reproduce your case and I'm working on a fix\n. @jasonwaters, I've released `v0.1.15`, could you give it a try?\n. Wrong handling of arguments passed to the pipeline.\n. I've fixed the error processing, please try again.\n. Thanks for the report\n. @suntzuII, disconnect doesn't mean logout, it will just disconnect the social reference to the user account. If you need to also logout the user that's apt to your project requirements and depends on you. You can do it easily by logout out the user in a pipeline method in the disconnect pipeline.\n. Changed, thanks!\n. I've updated the docs, thanks!\n. Thanks!\n. Thanks!\n. Yeah, your settings are wrong, they should be `SOCIAL_AUTH_AMAZOM_KEY` and `SOCIAL_AUTH_AMAZOM_SECRET`.\n. Cool, good to know, I was testing it right now and worked as expected. The same with Linkedin (OAuth1 and OAuth2 versions).\n. `/login/linkedin` is for OAuth1, `/login/linkedin-oauth2` is for OAuth2. The same keys work for both backends but they don't share the setting names, `SOCIAL_AUTH_LINKEDIN_KEY` and `SOCIAL_AUTH_LINKEDIN_SECRET` for OAuth1 backend, and `SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY` and `SOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET` for OAuth2 backend.\n. You mean a TODO list with pending features to implement?\n. There's no official TODO list, the main sections needed improvements are:\n- Documentation\n- Example application\n- Tests (framework related tests)\n- Support for more frameworks\n- More backends\n. The URL in the link says `http://` but your error message says `https://`, so what's the correct value? Is your local service running over SSL? Is your value in amazon settings set to `https`?\n. I guess that you are behind Nginx but not passing all the needed headers to tell the python framework that's running over SSL, try defining this setting:\n\n``` python\nSOCIAL_AUTH_AMAZON_REDIRECT_IS_HTTPS = True\n```\n. Could you share the proxy definition?\n. The error doesn't help because it happens on Amazon, but it's clearly that the issue is the `http://` redirect url. I'm interested in the headers being passed to the backend from nginx (specially the `proxy_set_header` calls.\n. And who's setting `X-Forwarded-SSL` to `on`?\n. So, you have an Nginx proxy in front of Apache, that nginx instance sets that header, Apache sets the `HTTPS` value to `1` if the header was defined, questions:\n1. Do you see the value for `X-Forwarded-SSL` in your app?\n2. Do you see the value for `HTTPS=1` in your app?\n3. What happens if you define this setting `SECURE_PROXY_SSL_HEADER = ('HTTPS', '1')`? \n. Well, the header name is `HTTP_HTTPS`, so try with this value instead: `SECURE_PROXY_SSL_HEADER = ('HTTP_HTTPS', 'on')`\n. I can't think of any other setting that manages the SSL protocol in URIs, setting `SECURE_PROXY_SSL_HEADER` to `('HTTP_X_FORWARDED_PROTO', 'https')` or `('HTTP_HTTPS', 'on')` should do the trick for Django to check if SSL is active in the current request. Also setting `SOCIAL_AUTH_AMAZON_REDIRECT_IS_HTTPS = True` which is a major override in the application to enforce `https://` (check here https://github.com/omab/python-social-auth/blob/master/social/strategies/base.py#L113-L117 to see how it's used), check that the app is being restarted/reloaded properly, those settings should do the trick.\n. You can set that value too but the `setting` method being invoked will check for the following names (and return the first one that's present): `SOCIAL_AUTH_AMAZON_REDIRECT_IS_HTTPS`, `SOCIAL_AUTH_REDIRECT_IS_HTTPS`, `REDIRECT_IS_HTTPS`.\n. My bad, the setting is used at the strategy level and not the backend leve, so the backend name in the setting makes nothing, only `SOCIAL_AUTH_REDIRECT_IS_HTTPS` and `REDIRECT_IS_HTTPS` are taken into account.\n. There's no logging mechanism for that, but you can write a middleware that takes those cases into account and act accordingly.\n. Thanks!\n. Any extra data defined on by `*_EXTRA_DATA` setting is stored in the `extra_data` attribute of the social model which can be accessible like this:\n\n``` python\n# Assuming Facebook as social account\nsocial = user.social_auth.filter(provider='facebok')[0]\nsocial.extra_data['gender']\n```\n. Probably, depends on your project, if it's used on a single view, then just do it in the view, otherwise write a templatetag.\n. Thanks!\n. using `load_strategy()` at `social.apps.django_app.utils`.\n. I see your code but not an error explanation, what happens when you run that code? What do you mean with \"There is no SOCIAL_AUTH_GOOGLE_OAUTH2_KEY\"? That's a needed setting to enable google-oauth2 backend.\n. @kakky, I've checked the process, the problem was the parameters being passed to the request, since Google OAuth2 uses `POST` the parameters should be passed in the `data` argument instead of `params`. This is fixed now, could you test and close the ticket if looks OK?\n. No problem!\n. They should be different, `done` view is reached after a redirect, so the request is completely different. What happens when you reach that view?\n. Since this change https://github.com/django/django/commit/dc43fbc2f21c12e34e309d0e8a121020391aa03a Django enforces authentication backends to be defined on `AUTHENTICATION_BACKENDS` setting, but this app uses a wrapper in order to get access to the Strategy which is unknown to backends and app-dependent, but the wrapper is not defined in `AUTHENTICATION_BACKENDS`, adding it makes it work again and until some decoupling is done in the project I don't see any other fix, so I'll recommend this setting until I find a better solution.\n. @gitmiette, check docs here http://psa.matiasaguirre.net/docs/configuration/django.html#django-1-6\n. This change solved that the same day the fix was introduced:\n\nhttps://github.com/omab/python-social-auth/commit/ebaa4b564485a1ebc2e485d7229628b6deb65911\n\nExcerpts from Yu Yang's message of 2013-10-11 08:26:46 -0200:\n\n> @omab this change breaks normal login. for example when I login in admin page, it gives an AttributeError:\n> \n> ```\n> 'BackendWrapper' object has no attribute 'authenticate'\n> ```\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> \n> ## https://github.com/omab/python-social-auth/issues/53#issuecomment-26127698\n> \n> Mat\u00edas Aguirre (matiasaguirre@gmail.com)\n. Done https://github.com/python-social-auth. Check this comment https://github.com/omab/python-social-auth/issues/34#issuecomment-24828967, you are using OAuth1, but try those names anyway (see that attributes names follow camel-case format).\n. Actually switching the settings and the backend name should be enough, unless LinkedIn decided to break that migration option. Any luck on your end?\n. @dblado, thanks for the clarification, I've added a reference in the docs regarding that.\n. Awesome, thanks!\n. I've pushed the fixed tag, thanks!\n. Thanks!\n. @vargi, link the user to `/login/<backend name>`. The same URL works for logged out and logged in users.\n. Like on `django-social-auth` user association by email is disabled by default, in order to enable it you need to override the pipeline setting with this value:\n\n``` python\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'social.pipeline.social_auth.associate_by_email',  # <-- this one does the trick\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details'\n)\n```\n\nUser association by username was never a feature of `django-social-auth` or `python-social-auth`, doing that would be too easy to take over another user account.\n. I don't think it's related, I've tried the tests with your fix and they pass without troubles. Thanks!\n. @hannseman, Travis-CI issue was related to recent changes to `python3-openid`, not with your changes.\n. Thanks!\n. @myers, go ahead, all contributions are welcome.\n. Thanks!\n. Any error? This snipped proved to work:\n\n``` python\nfrom social.apps.django_app.utils import strategy\n\n@strategy()\ndef register_by_access_token(request, backend):\n    backend = request.strategy.backend\n    user = request.user\n    user = backend.do_auth(\n        access_token=request.GET.get('access_token'),\n        user=user.is_authenticated() and user or None\n    )\n    ...\n```\n\nAlso an URL with this format is needed:\n\n``` python\nurl(r'^register/(?P<backend>[^/]+)/', register_by_access_token)\n```\n. @simonluijk, instead of calling `login(request, user)` try with `_do_login(strategy, user)` which can be imported with `from social.apps.django_app.views import _do_login`.\n. @nwilson5, which version of `python-social-auth` are you using? `_do_login()` in last codebase was simplified a lot removing a workaround for django auth mechanism.\n. @nwilson5, tt's set here https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/__init__.py#L18\n. @julienaubert, a new parameter was added to `_do_login`, I know it breaks compatibility but `_do_login` should be considered an internal function. The new parameter is the `social_user` which I'm sure you have available in your view.\n\nAs you pointed the usual Django `login` should work also.\n. @antitoxic, check the prototype https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/views.py#L33\n. I wasn't able to reproduce your error so far. Why are you defining `AUTH_USER_MODEL` to be different than the others?\n. Looks like a mongoengine issue to me than PSA. Reopen if needed.\n. Thanks!\n. Which framework? Do you have the requests details?\n. @josseph, found the bug, will push a fix shortly.\n. @josseph, I don't get it, success or not? From your traceback it looks like the same issue from the beginning. How did you install python-social-auth?\n. Thanks!\n. Awesome, thanks!\n. Merged, thanks for your work and sorry about the delay.\n. @kdazzle, it was a bug introduced by 5fbdfe8a108bdb136963efd896be96fcf4ef1b5f\n. Thanks!\n. @kbussell, thanks!\n. Thanks!\n. @Salma7amed, try with a code like this\n\n``` python\nfrom requests import request, HTTPError\n\nfrom django.core.files.base import ContentFile\n\n\ndef save_profile_picture(strategy, user, response, details, is_new=False,\n                         *args, **kwargs):\n    # Save Facebook profile photo into a user profile, assuming a profile model\n    # with a profile_photo file-type attribute\n    if is_new and strategy.backend.name == 'facebook':\n        url = 'http://graph.facebook.com/{0}/picture'.format(response['id'])\n\n        try:\n            response = request('GET', url, params={'type': 'large'})\n            response.raise_for_status()\n        except HTTPError:\n            pass\n        else:\n            profile = user.get_profile()\n            profile.profile_photo.save('{0}_social.jpg'.format(user.username),\n                                       ContentFile(response.content))\n            profile.save()\n```\n\nPut that into the pipeline and it should do the trick. The code wasn't tested, but should help to get you started).\n. I don't see any social login there, just a `UserSocialAuth` instance being saved that's not used at all.\n\nThe problem with testing social authentication is the dependency with the third-parties that provider that auth for you, that's slow, prone to error and any user looking to run the tests need to register an application and define keys/secret for the desired backends. That's why tests on PSA are written using `HTTPPretty` to mock the server responses and focus on functionality testing instead.\n. I wasn't able to reproduce this, the user details endpoint is working properly here. Maybe some trouble with your API Key?\n. Thanks! I'll introduce a new exception type to flag the backend error and catch that one instead of `ValueError`.\n. @vargi, move `associate_by_email` above `create_user`.\n. @aroraprince, yes, that will work if the user has the same email address.\n. @aroraprince, which OAuth backend? Is email being sent by that backend?\n. Are you testing with a clean db?\n. @aroraprince, not sure if I follow, it's working fine now?\n. I was asking about the DB because sometimes users left the account created by python-social-auth in place, so second attempts are actually getting that account again.\n. Setting names should be `SOCIAL_AUTH_WEIBO_KEY` and `SOCIAL_AUTH_WEIBO_SECRET`.\n. Thanks!\n. Thanks!\n. Thanks!\n. @cgreinke, please check the fix. Thanks!\n. Awesome, thanks!\n. Can't use `u'...'` because of Python 3, need to check further.\n. Thanks!\n. The change introduced simplifications to the code that should keep the feature working, do you see anything wrong in the change?\n. Thanks!\n. BTW, docs updated at http://psa.matiasaguirre.net\n. @devangmundhra, no, you need the `@strategy` decorator now (`from social.apps.django_app.utils import strategy`)\n. @devangmundhra, there's no tables rename, but you might need to run a `syncdb` and delete the `social_auth` content type from the content-types table.\n\nPipelines are now stored on `social.pipeline`, there are a few extra ones, but the names are mostly the same, check the default setting here http://psa.matiasaguirre.net/docs/pipeline.html#authentication-pipeline. If you happen to have custom pipelines, the parameters are the same, plus the `strategy` in case you need it. Partial pipelines still work but the `save_status_to_session` is located at `social.pipeline.partial` now, there's also a decorator `@partial` in that same module that can be used instead of `save_status_to_session`, it's cleaner that way.\n\nSetting names must be prefixed with `SOCIAL_AUTH_`, some backends were renamed a little (not the popular ones like Google, Facebook and Twitter).\n. @mikek, that change should get rid of the issue.\n\nThanks for the report!\n. Thanks!\n. Docs updated.\n. Solution merged, thanks!\n. @russian-master, now you can do:\n\n``` python\nfrom social.pipeline import DEFAULT_AUTH_PIPELINE\n\nSOCIAL_AUTH_PIPELINE = DEFAULT_AUTH_PIPELINE + ('myproject.models.user_profile_data',)\n```\n. Thanks!\n. Could you share the full traceback?\n. Try expanding the context near the exception line, that should list the current variables, my guess is that a parameter used in the OAuth1 request is `None`, but it could be many things, from custom scopes or custom auth parameters, to wrong names in the key / secret settings.\n. @Sourabh87, this is unrelated to `python-social-auth`, you should ask in https://github.com/tweepy/tweepy instead.\n. Try with this:\n\n``` python\nfrom social.strategies.utils import get_current_strategy\n\n# given a user instance (could be from request.user)\nsocial = user.social_auth.get(provider='vk')\nstrategy = get_current_strategy()\nbackend = social.get_backend(strategy)\n```\n. @maikhoepfel, thanks for the report, it was already raised by the same user here too and a fix was already introduced https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/utils.py#L34-L44.\n. @maikhoepfel, no problem, thanks for the report anyway!\n. Thanks!\n. @valeriansaliou, the setting in python-social-auth is named `SOCIAL_AUTH_FACEBOOK_SCOPE = ['email', ...]`\n. Do you know the value name that was set to `None`? This issue looks similar to #101\n. @javieraxiacore, the intention of the original code is to properly set the username field defined by `USERNAME_FIELD` using `username` which is used internally by `python-social-auth` to identify the value that will be used as the final username. Basically `username` is for internal use, which is later translated to `USERNAME_FIELD`.\n. Thanks!\n. It shouldn't be passed since the parameter is defined by name in the function prototype, how's the definition of the URL to that view?\n. ```\n File \u201c../apps/accounts/api.py\", line 78, in obj_create\n    user = register_by_access_token(bundle.request, \"facebook\", [], **info)\n```\n\nWhat's the content of `info` in that line?\n. @simonluijk, after checking Linkedin docs, it looks like your approach is correct. It looks like their JSAPI token exchange resembles a lot to OAuth 1.0a unauthorized-token exchange. The change above should simplify your overrides needed to get this working.\n. There's no way in the app and the way to do it is by the pipeline.\n. This breaks db syncing:\n\n``` shell\n[psa] mintaka \u00b1 python-social-auth VShell-patch-1 ~/s/p/examples/django_example\n$ python manage.py syncdb --noinput\nCreating tables ...\nCreating table auth_permission\nCreating table auth_group_permissions\nCreating table auth_group\nCreating table auth_user_groups\nCreating table auth_user_user_permissions\nCreating table auth_user\nCreating table django_admin_log\nCreating table django_content_type\nCreating table django_session\nCreating table django_site\nInstalling custom SQL ...\nInstalling indexes ...\nInstalled 0 object(s) from 0 fixture(s)\n```\n. Try with this:\n\n``` python\nfrom social.apps.django_app.utils import load_strategy\n\nstrategy = load_strategy(backend='MyOAuth')\nsocial = request.user.social_auth.get(provider='MyOAuth')\nbackend = social.get_backend(strategy)\nbackend.oauth_request(...)\n```\n. That last change (not released to pypi yet) introduced a helper to get the backend instance, it should be enough to do:\n\n``` python\nsocial = request.user.social_auth.get(provider='MyOAuth')\nbackend = social.get_backend_instance()\n```\n. My bad, the first snippet returns a backend class, you need to create an instance with `backend = backend(strategy=strategy)` before calling `oauth_request(...)`.\n. The URL should be encoded https://github.com/omab/python-social-auth/blob/master/social/backends/oauth.py#L262-L265, `auth_params()` returns the `redirect_uri` value.\n. Closing by inactivity, reopen if needed.\n. Thanks!\n. If users signup in your site with Facebook, then `user.username` should be the Facebook username, but you can define: `SOCIAL_AUTH_FACEBOOK_EXTRA_DATA = ['username']` and it will be stored in `social.extra_data` `dict` under the key `username`.\n. @YAmikep my `local_settings.py` is only used to define application keys and secrets and email server credentials (only needed when email confirmation pipeline is enabled) and that's all.\n\nHow does your `/signup-email/` view work? Is it related to `python-social-auth` in some way? If it only creates a `User` instance, then it won't work with `python-social-auth`.\n. Closing by inactivity, reopen if needed.\n. I've merged your pull-request. Thanks!\n. Thanks!\n. Thanks!\n. Fixed, thanks for the report.\n. UTF-8 not supported?\n. Thanks!\n. I don't see anything broken with python-requests 2.1.0, any details on what breaks?\n. Cool, thanks!\n. @roberto-robles, the change above should fix your issue. Thanks for the report!\n. Awesome, thanks!\n. Thanks Kevin! How's it going?\n. `social.apps.django_app.utils.BackendWrapper` is not needed anymore, you can remove that from `AUTHENTICATION_BACKENDS`.\n. @Diolor, then that could be caused by previous session value, if you clean the session it should be back to normal, this is not ideal since it could imply clearing many user valid sessions, I can restore the backend if needed.\n. @Salma7amed, clear you sessions table in the db.\n. @Salma7amed, do you have `social.apps.django_app.utils.BackendWrapper` in `AUTHENTICATION_BACKENDS`? If that's the case remove it.\n. @Salma7amed, there's any traceback? Maybe it's not the same issue.\n. Which is your session backend? Following the code it's clearly caused by a bad value in the user session.\n. @Salma7amed, actually I'm asking about your session storage, how's the session data being saved, it's on the database? it's fully cookie based?\n. I've restored `BackendWrapper` to avoid these session issues.\n. Thanks!\n. Thanks!\n. `BACKENDS` is defined as `settings.AUTHENTICATION_BACKENDS` which imported from `django.conf`, the usual way. Which is the value in a django shell?\n. Maybe something is different in your settings loading in your setup?\n. @aneumeier, any progress on your end?\n. Closing, reopen if needed.\n. I'm not planing to do so, usually a website enables a few backends and won't iterate over a long backends list, so you will write links in the form `<a href=\"{% url 'social:begin' 'google-oauth2' %}\">Google</a>`. It might be even simple to create a custom filter in your project that does:\n\n``` python\ndef backend_friendly_name(backend):\n    return {\n        GoogleOAuth2: 'Google',\n        TwitterOAuth: 'Twitter',\n        FacebookOAuth2: 'Facebook',\n        ...\n    }[backend]\n```\n. Thanks!\n. Thanks!\n. Thanks!\n. Docstrings were wrong, which is the issue with tumblr?\n. @empty, please review the fix and close the ticket if that's OK. Thanks for the report!\n. @empty, actually using `response` there is the correct value since `details` is a refined value from response with basic user data to create the instance later, `ID_KEY` is not expected on that value. Could you share the `response` value for tumblr?\n. @empty, with 9d45d50 looks better?\n. Looks fixed, I'll close the issue, reopen if needed.\n. I think you are looking for \"?next=...\" query string parameter.\n. @geekan, let's clarify a little, your user is at a page, clicks login and after login he should be back to the original page, is that what you are looking for? If that's the case, build your login URLs to have the current path in a next parameter, like:\n\n``` django\n<a href=\"{% url 'social:begin' 'google-oauth2' %}?next={{ request.path }}\">Login with Google</a>\n```\n. @geekan, as usual, always escape querystring parameters.\n. Docs here http://psa.matiasaguirre.net/docs/use_cases.html#return-the-user-to-the-original-page\n. Could you share your pipelines?\n. @lorddaedra, could you try again with the last reviesion on master?\n. Cool, I'm gonna release it. Thanks!\n. @vzima, dependencies are also listed in `requirements.txt`\n. Thanks!\n. Thanks!\n. @jcouyang, I've applied some PEP8, there were some `django-social-auth` bits still around, any chance to get some simple docs regarding how to setup the backend added to the docs section?\n\nThanks!\n. `SOCIAL_AUTH_USER_MODEL` follows the same convention than `AUTH_USER_MODEL` (check https://docs.djangoproject.com/en/dev/topics/auth/customizing/#auth-custom-user) which is `appname.modelname`. In your case I guess it should be `custom_auth.User`.\n. Thanks!\n. @roberto-robles, the PR looks good but I've left a comment on it, thanks for spotting the issue, if you do that little change I'll merge it.\n. PR merged, thanks!\n. Thanks!\n. Awesome, thanks!\n. Any traceback in the log? Which is the key?\n. Do you have the full URL that's triggering that error? The missing `code` parameter means that something is going wrong in the auth process.\n. I've tried to login with Facebook on your site and it worked OK, I was wondering if you have the exact URL that triggered the traceback, like `http://order.saludable.me/complete/facebook/?...`\n. @Salma7amed, @tklovett, python social auth checks the case of hitting the `Cancel` button and raises `AuthCanceled` exception, which can be handled easily with the exceptions middleware at `social.apps.django_app.middleware.SocialAuthExceptionMiddleware` (add it to the middlewares setting), and also define `SOCIAL_AUTH_LOGIN_ERROR_URL` or if you prefer `SOCIAL_AUTH_FACEBOOK_LOGIN_ERROR_URL`. In that page you can show the users a nicer error page, the URL will get a couple of querystring parameters `message` and `backend` which are the exception message and the backend name.\n. So, hitting the Cancel button is not the way to reproduce the original report, right?\n. @Salma7amed, so, which is the full URL that triggers that error?\n. @Salma7amed, I'm looking for the full URL, I want to see the parameters being sent by Facebook to your site.\n. @Salma7amed, could you forward me that email or does it have any sensible data? What about your server logs? At some point the traceback should appear there with a full URL above that triggered the bug.\n. @Salma7amed matiasaguirre@gmail.com\n. @Salma7amed, I've checked your email, where's `?ref=search&fb_source=search` appended to the complete URL? It's something from your code? Or something defined in the Facebook app? There's any chance these clients request come from some indexed data or bots hitting your service?\n. @Salma7amed, any chance that this is being caused by a mobile client? So far I see the wrong parameters being sent to `/complete/facebook/`, how is that happening I don't know, could be a bug on Facebook or the URL is being triggered by hand.\n\nI've added a change to catch the missing parameter and raise a social exception that can be processed with the middleware.\n. @Salma7amed, I've just released `v0.1.19` which carries the fix. This won't help on finding the root of the issue but will give you control over the 500 error. So far my understanding of the problem is that at some point something is following the URL `/complete/facebook/`, the extra parameters look suspicious to me. I would recommend to check the server log and check the auth process before that error, also check the referrer for the one that triggers the error.\n. Yes, that's expected since there are missing parameters to continue the process. As mentioned in my previous comment,  I would check the server log and check the auth process before that error, also check the referrer for the request that triggers the error.\n. @Salma7amed, any progress on your end? Can I close this issue?\n. Closing by inactivity.\n. The [pipeline code](https://github.com/omab/python-social-auth/blob/master/social/backends/base.py#L97) doesn't catch exceptions, so the \"non-dictionary resposes will be taken as HTTP\" doesn't apply here, the issue resides on another section of the code.\n. Closing by inactivity.\n. @vzima, the app raises `AuthFailed` on `ConnectionError`.\n. Thanks!\n. Thanks for the change. Moving it to `BaseAuth` doesn't make sense since not all the approaches support a revoke option in their standard definition.\n. Thanks!\n. Thanks!\n. Try with:\n\n``` python\nSOCIAL_AUTH_LINKEDIN_EXTRA_DATA = [\n    ('id', 'id'),\n    ('firstName', 'first_name'),\n    ('lastName', 'last_name'),\n    ('emailAddress', 'email_address'),\n    ('pictureUrl', 'picture_url'),\n    ('publicProfileUrl', 'profile_url'),\n]\n```\n. @stianpr, that's great, looking forward to that PR.\n. @stianpr, I've made the change to the docs, they were fair simple, thanks for catching that.\n. Docs should be updated now.\n. Why would you expect them there? Docs are online, they aren't really useful on a cryptic location. And examples aren't of any use installed in the local workstation.\n. @misli, thanks for the recommendation, still I think (and it's usually expected from python packages) to just carry the application and tests.\n\nThanks for your work on adding it to Fedora.\n. Second setting at http://psa.matiasaguirre.net/docs/configuration/settings.html#processing-redirects-and-urlopen, without further details I cannot say what could be going on. Any traceback?\n. @sgxiao, I've added a setting to control this behavior keeping the `name` as the default value for backward compatibility. If you want to define the domain as the source of username it enough to define the setting `SOCIAL_AUTH_WEIBO_DOMAIN_AS_USERNAME = True`. Docs at http://psa.matiasaguirre.net/docs/backends/weibo.html\n. Thanks!\n. Couldn't reproduce following your steps, you have cookies enabled?\n. And what about the session values in that session?\n. @xen, did you managed to fix this? I got into the same issue some hours ago and found that the problem was by a wrong secret key, once I've updated it, it started to work.\n. @a1exs, I recall removing that setting too, maybe that did the trick, if that's the case this issue seems relevant https://github.com/maxcountryman/flask-login/issues/137\n. Awesome, @xen, could you check if that works for you?\n. Thanks! Closing...\n. Thanks, I've updated the `md5()` calls around!\n. @lukos, awesome, thanks. There's any chance to get some docs about how to setup it (like the rest of the backends)?\n. @lukos, no need for a new one, just update your master and this one will be updated, whatever you prefer is OK.\n. Great, thanks!\n. Thanks!\n. @EugeneLiang, any chance you also installed `python-social-auth` using `pip`? To me it looks like an python path issue where you have the app installed with `pip` (older version without tornado support).\n. @EugeneLiang, try with `pip install --upgrade python-social-auth`. Taobao backend should be supported in the Tornado app, it's just not linked there at the moment (it's easy to loose the links sync between apps).\n. @EugeneLiang, create a `local_settings.py` in `tornado_example` directory. All the examples follow the same `local_settings` concept where your keys and secrets are defined to keep them out of the repository on a mistaken push (`local_settings.py` is ignored by `.gitignore`).\n. Change `'social.backends.taobao.TaobaoOAuth2'` to `'social.backends.taobao.TAOBAOAuth'`.\n. OK, closing this issue.\n. Which Django version?\n. @tobiasbartel, not the same issue, yours look like #173 which is solved.\n. @mionch, try installing it using `pip install -e git+git@github.com:omab/python-social-auth.git@711b892c94efabf2784157107b7ae5e122b21b12#egg=python_social_auth-master`\n. @tklovett, I've released `v0.1.21`.\n. @empty, could you try master with the change pushed above?\n. Cool, closing.\n. Wouldn't be easier to extend the user model in your project and override the `username` field? That also has the benefit of forms validation working OK.\n. Actually this is not hardcoded and it's dynamically loaded from your model definition, the correct solution is to make your model reflect your domain properly.\n. `BackendWrapper` was removed since it was a hackish solution to workaround Django backend loading, but Django puts the backend name in the sessions, so any older user that's trying to access your site with an old session (previous to your upgrade) is probably triggering this issue, the quick fix is to clean the session entry for those users.\n. @dblado, right, this is a duplication of #128\n. Thanks!\n. Could somebody point me to a good and simple tutorial on how to setup python + pip on Windows, or put some simple steps here so I can try to reproduce it? I lack the windows experience for this.\n. The fix above will get rid of this problem.\n. I don't have the needed experience to provide a solution got any luck on your end?\n. @georgewhewell, thanks for commenting about the bug in urllib3.\n. @synth3tk, I don't have experience with Google App Engine, I'm gonna try to setup an instance to test it.\n. Implemented, thanks!\n. My bad, I should have noted that, it's fixed now.\n. @vargi, OAuth1 tokens are in the form of querystrings, and OAuth1 backends expect it as a `dict` in  `do_auth()` (I should normalize that parameter at some point), meanwhile try doing::\n\n``` python\nfrom social.utils import parse_qs\n\nif backend.name == 'twitter':\n    access_token = parse_qs(access_token)\nuser = social_auth.do_auth(access_token=access_token, user=None)\n```\n. @vargi, I've added the needed code to parse an access token string to the expected `dict`, so it will work if you are using the master branch.\n. So, it works if you set `ACCESS_TOKEN_METHOD = 'GET'` in the backend?\n. @dblado could you try with this linkedin backend instead?\n\n``` python\nfrom social.backends.linkedin import LinkedinOAuth2\n\n\nclass CustomLinkedinOAuth2(LinkedinOAuth2):\n    def request_access_token(self, *args, **kwargs):\n        kwargs['params'] = kwargs.pop('data')\n        return super(LinkedinOAuth2, self).request_access_token(\n            *args, **kwargs\n        )\n```\n. @dblado, I've pushed the fix to master\n. @hassek, I've left a comment on your change, the `EXTRA_DATA` change looks good, but the override to `extra_data` doesn't look good, it shouldn't be needed since `get_user_details` already does that.\n. Awesome, thanks for the update!\n. Great, thanks!\n. `SOCIAL_AUTH_*_SCOPE` setting **must** be a list, not a string, if it's a single scope, then define it as a single item list.\n. `SCOPE` shouldn't be a string, it's documented that it should be a list.\n. Thanks!\n. I've fixed a couple details and added python 3 support. Thanks!\n. Do you have a custom pipeline?\n. What does the last pipeline?\n. I've introduced a change that might fix the issue, @mohitranka and @devangmundhra could you give it a try?\n. @CrazyPilot, have you tried my fix at https://github.com/omab/python-social-auth/commit/dec6d30ab758280cec6562c3c6aa9edc975bf56c ?\n. @sledopit, I've pushed another potential fix, could you give it a try?\n. @sledopit, I'm not able to reproduce this issue, that's why it's so hard for me to fix it, could you trace back why `social_user` is `None`?\n. @sledopit, @devangmundhra, I've tried a custom user model (it's in the example app) and it worked without issues, if any of you can build a simple app that reproduces the issue that I can clone and try here, please do.\n. @htch, version?\n. @htch, that version has my possible fixes to the issue, so they aren't working, are you able to create a simple small project that recreates the issue?\n. @skozan, I've fixed the issue, thanks for the report.\n. @krtek4, `v0.1.23` released.\n. Thanks!\n. I don't recall any change to that behavior lately, inactive users should go to the URL defined by `SOCIAL_AUTH_INACTIVE_USER_URL`, if that setting is not defined it will default to `LOGIN_ERROR_URL`.\n. I'm not aware of any intent of integration, but I guess it's possible to do it once you have the user data/tokens from `python-social-auth`, not sure what `Django-facebook` needs but it looks like if you are capable of filling the models, probably in a pipeline function, then it looks like you will be capable of using that app.\n\nI'm gonna close this issue since it's not a bug, we can continue the discuss in the mailing list or IRC channel.\n. If using Django you need this http://psa.matiasaguirre.net/docs/configuration/django.html#exceptions-middleware\n. No reason at all, where should that be changed (I don't use mongoengine)?\n. I think `mongoengine` does't have a `_meta.get_field(...)`, are you able to patch your copy of `python-social-auth` and test this code instead (or your code too)?\n\n``` python\n    @classmethod\n    def username_max_length(cls):\n        username_field = cls.username_field()\n        field = getattr(UserSocialAuth.user_model(), username_field)\n        return field.max_length\n```\n. I've pushed the change to master. Thanks!\n. @w0rm, @gglentini could you try the fix above?\n. Thanks, closing the issue.\n. @elgreg, I've added `user` to default scope list, kept `balance` there for backward compatibility. Thanks for the report.\n. I've pushed a fix for this, thanks for the report.\n. @gglentini the fix linked above should fix that.\n. Great, closing the issue.\n. The apps don't need that setting unless you are defining your own strategy.\n. Thanks!\n. Looks like you are in the correct path there, could you send a PR?\n. Thanks!\n. Sadly the library is quite tied to the usual framework structure but it should be possible to make it work as a library, and I can contribute to improve it to make that possible, it's an interesting idea.\n\nThe core that brings multiple framework support is the strategy class, it's the glue between python-social-auth and the framework of choice, if done well the framework idea can go away. The docs regarding strategy implementation is at http://psa.matiasaguirre.net/docs/strategies.html#implementing-a-new-strategy.\n\nStorage classes are responsible on how the data is stored, it could be a plain text file in your filesystem if the implementation is done right.\n\nThe code in `actions.py` is tied to requests and responses and beside calling the strategy methods (`complete`, `start`) and dealing with partial pipeline continuation in the end they are reduced to redirects decision and user login state.\n. The recent [split into smaller components](https://github.com/python-social-auth) should make the support for this more straightforward and clean, I'm sure it's not 100% ready to do so, but in it should be possible.. Could you paste the full traceback? I wan't to see the calls chain.\n. Thanks, one last value, try getting the URL that's trying to open (it should start with `https://graph.facebook.com/oauth/access_token`), you should be able to get it by checking the vars values in one of those last calls in the traceback. This will allow me to identify the values being sent and the probably cause of that 400 error, which usually is caused by a empty secret key or another missing parameter required by facebook.\n. It did and looks like the server request is OK, I'm still trying to figure out were it's breaking.\n. @psych0der, I'm still unable to reproduce the issue, I've created a new Facebook application from scratch, filled all the values and it worked, in the process I've noticed that Facebook doesn't allow `localhost` as `App Domains` anymore. Also tried my usual app (which is quite old) and it works as expected too.\n\nI'm gonna keep looking but could you try with a new application and provide some example code to reproduce the issue?\n. @psych0der, there were the details I needed to fill:\n1. `Display Name` and `Category` (popup when clicking `Create a New App` from the menu)\n2. In `Settings -> Basic` fiilled\n   - `App Domains`: `myapp.com`\n   - Clicked `Add Platform` and selected `Website`\n     - Set `Site URL` to `http://myapp.com:8000/`\n3. In `Settings -> Advanced`\n   - Ensured that `Client OAuth Login` is on\n   - Ensured that `Native or desktop app?` is off\n\nFinally copied `App ID` (filled `SOCIAL_AUTH_FACEBOOK_KEY`) and `App Secret` (filled `SOCIAL_AUTH_FACEBOOK_SECRET`).\n. I've changed the docs at http://psa.matiasaguirre.net/docs/backends/facebook.html\n\nThanks!\n. The user is logged in? Which is your pipeline setting value? Do you have `'social.pipeline.social_auth.associate_by_email'` in it? \n. Then `'social.pipeline.social_auth.associate_by_email'` should do the work, that pipeline will check if there's a user with the same email address and associate the social account to that user instead of creating one, check here for the correct position for this function https://github.com/omab/python-social-auth/blob/master/social/pipeline/__init__.py#L8\n. @ctrl-alt-delete, the problem is that PSA doesn't know how to merge the accounts and that's something for your project to control, not PSA. In this case you should add a pipeline function that determines that this is going to cause a collision and proceed accordingly. \n. That was the proper way.\n. Thanks!\n. Do you happen to know since when it works?\n. I've updated the code to use messages app by default. Thanks!\n. Thanks!\n. Changed, thanks.\n. Some import conflict? Full traceback? Maybe another app named `social`? Is your pipeline inside a `social` module?\n. Don't name a module the same of a dependency (which is a good policy always), or use `absolute_import` (check https://www.python.org/dev/peps/pep-0328/).\n. If your `social` app is inside your project directory (the one with the `settings.py`), then you can use `project.social` in `INSTALLED_APPS`.\n\nIf `social` is too common, then you can rename your own version of it, or you can ask to the many python projects around to rename their apps because they are too common too.\n. Yeah, that works too.\n. @BeOleg start looking here http://psa.matiasaguirre.net/docs/configuration/porting_from_dsa.html\n. Thanks!\n. Thanks!\n. Merged, thanks!\n. And the one being sent is?\n. I've enabled the `Enhanced security redirection` setting in my testing application and everything worked as expected once I've fixed my redirect value put there.\n. The thing with sessions, is that they are usually cleared when the user is logged in, that's why you can't access the `is_new` value after auth finished, the unique method right now is to define `NEW_USER_REDIRECT_URL` and send the user to a different page where you can set any value if needed.\n. Fixed, thanks!\n. You should store the password in the session when you get it the first time, then retrieve it and set it once the user was created, so you need a new pipeline function after `create_user` that will get that password from the session and set it in the newly created instance.\n. Yeah, that's possible, the user could easily clean the cookies, but it's just an example on how you can manipulate the pipeline, other options could be:\n- ask for the password after the email validation was complete (partial pipeline)\n- store the initial password in a new table in your server, or in another storage like redis or memcached (beware of memcached restarts)\n- create the user when the data in available but set it as `inactive` and remove the flag once the email is validated (that way the user can't login unless the email is validated)\n. Dropbox OAuth2 URL should be `/login/dropbox-oauth2` since `/login/dropbox` is for OAuth1\n. I cannot reproduce it here, could you paste the server log?\n. In the console where you ran the command.\n. OK, try to copy and paste them when you have them available, there should be a `404` in there.\n. OK, which is the URL on github?\n. `client_id` is `None` in that URL, check your `SOCIAL_AUTH_GITHUB_KEY` setting.\n. Yeah, `SOCIAL_AUTH_*_KEY` and `SOCIAL_AUTH_*_SECRET` settings aren't set in the example app since those values should keep secure.\n. If you try to open the same URL in a python shell, does it work?\n. `associate_by_email` with associate accounts with the same email address, so if they are different that won't work. Account merging is tricky and `python-social-auth` won't support it usually is project dependent, there's a lot to take into account like what happens any data that the user could be generated with both accounts, etc.\n\nThe exception can be catched by adding this [middleware](https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/middleware.py#L13), you can easily extend it to add your behavior, like merging accounts or tell the user to get in touch with some support team, etc. There's some doc about the middleware here http://psa.matiasaguirre.net/docs/configuration/django.html#exceptions-middleware.\n. @hroncok, the mailing list or IRC channel is a better place to put questions and answer them.\n. Thanks!\n. Merged, Thanks!\n. The fix for this was released yesterday, #191 was raised for that. Reopen the ticket if needed.\n. I see what you are doing there, but I don't think that's something that should stop the signup in a website, the user data could be populated by other means.\n. @pekoslaw, I've merged your code but added some changes to make the exception optional, so in order to archive your output you need to defined `SOCIAL_AUTH_BITBUCKET_VERIFIED_EMAILS_ONLY = True`. Also added tests and docs at http://psa.matiasaguirre.net/docs/backends/bitbucket.html#settings\n. I've pushed a fix for the issue, there's a workaround that you can use while this is not released, define this setting to restore the previous serialization mechanism in Django:\n\n``` python\nSESSION_SERIALIZER = 'django.contrib.sessions.serializers.PickleSerializer'\n```\n\nUse this as a temporary workaround since Pickle serialization is not very secure compared to JSON serialization (the new default value).\n\nYou can also install `python-social-auth` directly from the git repository with:\n\n```\npip install -e git+git@github.com:omab/python-social-auth.git@8593e0c0d7b8cdf048cf3da5739040993d0b681e#egg=python_social_auth-master\n```\n\nor add this line to your `requirements.txt`:\n\n```\n-e git+git@github.com:omab/python-social-auth.git@8593e0c0d7b8cdf048cf3da5739040993d0b681e#egg=python_social_auth-master\n```\n. Merged, did some refactoring.\n\nThanks!\n. Try doing `request.strategy.backend.do_auth(access_token)`.\n. Cool, thanks for closing the issue.\n. @ranjeetsghrix, you can pass it as a `dict` or as a `querystring` (the usual format of OAuth1 access-tokens). Like this:\n\n``` python\nbackend.do_auth({'oauth_token': '...', 'oauth_token_secret': '...'})\n```\n\nor\n\n``` python\nbackend.do_auth('oauth_token=...&oauth_token_secret=...')\n```\n. @ranjeetsghrix, do you have a traceback?\n. @avonil, what's the code you are trying? How do you get the `backend`?\n. @avonil, that snippet looks good, how are you calling that view (what's the URL)?\n. @cdeblois, thanks!\n\nIs the change really needed? It breaks the auth process? If it does I'll disable the custom state parameter.\n. Yes, it's not unusual, I'll switch it off, Medeley changed their API recently, so that might be involved.\n. Done, thanks for pointing it.\n. Thanks!\n. Thanks!\n. Thanks!\n. @ranjeetsghrix, do you have a traceback for the twitter error?\n. @ranjeetsghrix, I didn't tested twitter yet, there's any chance there's an `oauth_verifier` parameter accessible in your `register_by_access_token` view (or that your client can pass to it)?\n. I'm closing this issue in favor of #272, check my comment https://github.com/omab/python-social-auth/issues/272#issuecomment-43428162\n. Thanks!\n. @stunaz, that setting was removed a long time ago.\n. Thanks!\n. Defining `SOCIAL_AUTH_FACEBOOK_AUTH_EXTRA_ARGUMENTS = {'auth_type': 'reauthenticate'}` works fine for me.\n\nClosing, reopen if needed.\n. Thanks! With docs and tests, that's awesome.\n. Thanks!\n. I don't see anything wrong in your settings, but that redirect looks like the process is doing an error, it's been a few days since you reported this, have you solved the issue?\n. Closing, reopen if needed.\n. Could you provide a full traceback? the `request` method is used by many different places.\n. Thanks for the update, closing.\n. Thanks for the PR but I wonder, why is the full `auth_url()` override needed when you can set the `%20` escape in the `get_scope_argument()` method? Also, is `doseq=0` really needed?\n. @MrYoda, I've made the change but I'm not sure that will make the backend work since I don't a reference to where that cookie was being set, the same happens in the original version in `django-social-auth`.\n. Closing, reopen if needed.\n. You get the key if you fire up a shell and import the settings with `from django.conf import settings` and then print `settings.SOCIAL_AUTH_FACEBOOK_KEY`?\n. Could you show me an example where `_meta` doesn't work? `_meta` is populated by Django ORM when the model class is defined, you can't do `getattr(User, 'username')`, that will drop an attribute error since the model class doesn't have that attribute.\n. Closing, reopen if needed.\n. The size depends a lot of the type using, so 191 is in your case.\n. Thanks!\n. `python-social-auth` doesn't suffer of this, it's up to the project to ensure that the user instance is valid.\n. @fletchowns with the change linked above you can define this setting to override the default AX attributes:\n\n``` python\nSOCIAL_AUTH_GOOGLE_AX_SCHEMA_ATTRS = [\n    ('http://axschema.org/contact/email', 'email'),\n]\n```\n. @fletchowns I had to introduce a setting to allow that, define `SOCIAL_AUTH_GOOGLE_OAUTH2_IGNORE_DEFAULT_SCOPE = True` and that should do the trick (the setting support is not release to pypi yet).\n\nAlso added some docs in the process http://psa.matiasaguirre.net/docs/configuration/settings.html#extra-arguments-on-auth-processes.\n\nA similar setting was added for openid backends but keeping backward compatibility in the process. \n. Oh, I didn't realized the scopes were deprecated, I need to work on them.\n. Looks like Strava provider doesn't like extra parameters in the Redirect URI and instead of checking for them forces the append of `?code=xxx&state=xxx`. Since Strava sets the `state` already, it should be safe to disable the `redirect_state` support in the backend, but this looks like a bug in Strava service.\n. @jasonwaters the change above fixes the issue. \n. @sherzberg, the issue mentioned in the docs is fixed right now, I'm removing that from the docs.\n. Docs at http://psa.matiasaguirre.net/docs/backends/amazon.html update.\n. The code looks good except for the failing test, looks like the docs doesn't specify this return format https://github.com/momamene/python-social-auth/blob/9caf545ccb23955d9a2e26c20ac05923aae7a1ba/social/tests/backends/test_kakao.py#L13-L25, instead it should be:\n\n``` python\n    user_data_body = json.dumps({\n        'id': '101010101',\n        'properties': {\n            'nickname': 'foobar',\n            'thumbnail_image': 'http://mud-kage.kakao.co.kr/14/dn/btqbh1AKmRf/ujlHpQhxtMSbhKrBisrxe1/o.jpg',\n            'profile_image': 'http://mud-kage.kakao.co.kr/14/dn/btqbjCnl06Q/wbMJSVAUZB7lzSImgGdsoK/o.jpg'\n        }\n    })\n```\n\nRight? That's what the backend is expecting too. I'm not 100% sure since I can't read the site :)\n. Great, merged!\n. @grepme I've merged your code, thanks! But I've also implemented some changes, you can see my changes here 51e3a088ba0fa559e17a5d1e47cd62672ed38896.\n\nBasically I've removed the template from the code, it's preferable that the templates are defined by the users instead and the application will make use of it automatically, if the JS in the template needs some changes, users can make them instead of depend on a new release of `python-social-auth`.\n\nAlso I've changes some methods overrides to simplify some code there.\n\nPlease take a look to it.\n. @Nabu-thinker-ru try defining `SOCIAL_AUTH_VK_OAUTH2_EXTRA_DATA`.\n. Thanks\n. Thanks!\n. @Raihanveer, you should check the docs at http://psa.matiasaguirre.net/docs/, specially the configuration section http://psa.matiasaguirre.net/docs/configuration/settings.html. Basically you are trying to run the example app without the basic configuration (keys and secrets, etc).\n. Tornado follows the same convention that any other app, put the settings mentioned in that doc in a `.py` that's imported at some point when initializing the app. Check the example app, the `app.py` file is in charge of initializing the Tornado app, at the very beginning it does `import settings` (here https://github.com/omab/python-social-auth/blob/master/examples/tornado_example/app.py#L17), the `settings.py` contains some basic configuration for `python-social-auth` (https://github.com/omab/python-social-auth/blob/master/examples/tornado_example/settings.py) and at the end it does `from local_settings import *`, the local settings contains any settings that shouldn't be public or available in a repository, like public/secret keys given by providers like Facebook, Google, etc when you register an application on their dev dashboards.\n\nTo identify the settings needed for each backend, just check the docs for them at http://psa.matiasaguirre.net/docs/backends/index.html#social-backends.\n\nThere's not tornado specific configuration.\n. Thanks!\n. At which point is `Invalid token` returned? Which backend are you using?\n. This might be the way to do it http://stackoverflow.com/questions/6025764/how-do-you-call-a-json-web-service-that-requires-basic-authentication-using-jq\n. Closing, reopen if needed.\n. @ariovistus, the issue is caused by an import ordering problem, in your example code you call `urlresolvers.reverse` which will load `example/urls.py`, which will trigger an `admin.autodiscover()` call, which will load `social/apps/django_app/default/admin.py`, which will try to load your custom user model which will fail to load your user model.\n\nI've included a setting to avoid this issue (not released yet), you can define `SOCIAL_AUTH_ADMIN_USER_SEARCH_FIELDS = ['first_name', 'last_name', 'email', 'username']` (the setting value is a list of fields of your custom user), this will avoid the import order problem.\n. Thanks!\n. @maryokhin, there's any chance there's an `oauth_verifier` parameter around? If that's the case, try passing it also.\n. @maryokhin, right now it expects the `oauth_verifier` as part of the request, so it's being accessed as `self.data['oauth_verifier']` (`self.data` is the request POST/GET data). You know if it's available like that in the request?\n. @maryokhin try defining this strategy in some place\n\n``` python\nclass DjangoRESTFrameworkStrategy(DjangoStrategy):\n    def request_data(self, merge=True):\n        if not self.request:\n            return {}\n        if merge:\n            data = self.request.REQUEST\n        elif self.request.method == 'POST':\n            data = self.request.POST\n        else:\n            data = self.request.GET\n        if data.get('_content'):\n            data = data.copy()\n            data.update(data.pop('_content'))\n        return data\n```\n\nThen define this setting pointing to it: \n\n``` python\nSOCIAL_AUTH_STRATEGY = 'path.to.your.strategy.DjangoRESTFrameworkStrategy'\n```\n.  `request_data` should return a `dict`, but looks like it failed since `self.request.DATA` looks like the final value I was looking to get tested.\n\nEven with the `.copy()` you get an error whit `update()` and `pop()`?\n\nLooks like I need to review this process for OAuth1 backends.\n. @maryokhin, @omritoptix, @Zoneur \n\nI've tried using AJAX to authenticate an user in the django example app (no Django REST Framework, but that shouldn't matter), and everything worked OK (I've tried Facebook, Google OAuth2 and Twitter), Twitter didn't needed the `oauth_verifier` parameter, just `access_token` and `access_token_secret`.\n\nI've extended the example app with a simpler form to select a backend and input the `access_token` and `access_token_secret` (for OAuth1), on submit a JS handler will submit the auth by AJAX and then update the form with the user id and username, then the page will reload (after a few seconds) and that will show that the user was logged in. \n. @maryokhin, using `load_strategy` should be OK, but you need to pass the `redirect_uri` too, it should be the URL you defined in the application (in the provider), usually the value of  `urlresolvers.reverse('social:complete')`. Call `load_strategy` like this: `load_strategy(request=request, backend=backend, redirect_uri=...)`\n. The `access_token` will be converted to a `dict` if it's an string https://github.com/omab/python-social-auth/blob/master/social/backends/oauth.py#L124-L125, so passing the `dict` should also work. I could add a `do_auth()` that takes a request and it takes the needed values from the request.\n. @maryokhin, are you settings defined properly? `SOCIAL_AUTH_TWITTER_KEY` and `SOCIAL_AUTH_TWITTER_SECRET`?\n. @maryokhin, not sure what you meant with `include the keys on the API side`.\n\nAbout Django REST Frameworks support as a built-in app, that would be great to have.\n. Cool, I'm gonna close this issue since it's finally solved, thanks!\n. I'm already working on this and only fixing the tests is the pending bit.\n. I don't think the application should take care of that, it should be open enough for devs to include such option (and it's already), but not be tied to any particular encryption mechanism. That being said, I'd be happy to include the needed documentation recommending this protection.\n\nEncryption of `extra_data` can be implemented by:\n- Define a custom storage implementation\n\n``` python\n# storage.py\n\nfrom social.apps.django_app.default.models import UserSocialAuth, Nonce, Association, Code, DjangoStorage\n\nclass EncryptedUserSocialAuth(UserSocialAuth):\n    extra_data = EncryptedJSONField()\n\nclass EncryptedDjangoStorage(DjangoStorage):\n    user = EncryptedUserSocialAuth\n    nonce = Nonce\n    association = Association\n    code = Code\n\n\n# in settings.py\nSOCIAL_AUTH_STORAGE = 'path.to.storage'\n```\n- Extending the pipeline (add it after `'social.pipeline.social_auth.load_extra_data'`)\n\n``` python\ndef encrypt_extra_data(strategy, details, response, uid, user, social, *args, **kwargs):\n    extra_data = encrypt_values(social.extra_data)\n    social.set_extra_data(extra_data)\n```\n. Thanks!\n. `SOCIAL_AUTH_NEW_USER_REDIRECT_URL` was being ignored if `?next=...` was present, I've switched the ordering there since I think it's the correct behavior for new users.\n. Yeah, that one is not released and the docs don't details that at the moment, I'll release `v0.1.24` soon.\n. Nice PR, and with tests! Merged, thanks!\n. The error means that the `state` value is not being stored/persisted in your application session, could you verify if it works?\n. Thanks!\n. `python-social-auth` is Python 3 compatible already, the [setup.py](https://github.com/omab/python-social-auth/blob/master/setup.py#L49-L54) will install [python3-openid](https://github.com/necaris/python3-openid) instead of `python-openid` if Python3 is detected. The dependency is also listed in the `requirements-python3.txt` file for those installing manually.\n. Merged, I've applied PEP8 and cleaned some debug lines.\n\nThanks!\n. @ipmb, the current recommended way is to use `GooglePlusAuth` backend, which it's pretty much OAuth2 version but with support for client side auth with their SDK and continuation in the backend too.\n\n`GoogleOpenIdConnect` is the same as OAuth2 but with a forced `openid` scope and different endpoint to retrieve the user details.\n. @ipmb, the new scopes introduced by Google allows for users without a Google+ Account to also use that auth mechanism AFAIK. You are right that the users need to reconnect with that backend once the take down is complete, but, there might be ways to circumvent that:\n1. Change the value for `provider` in the table `social_auth_usersocialauth` from `google` to `google-plus`.\n2. Add a custom backend that inherits from `GooglePlusAuth` and changes the name from `google-plus` to `google` (or whatever you are using right now).\n. @fabioz, users shouldn't lose their accounts, the user id (in google) is still the same.\n. Google OAuth2?\n. Google is deprecating the old scopes, dropping support starting from Sept 1, 2014, check the table at https://developers.google.com/+/api/auth-migration#timetable.\n\nI wasn't aware that the new scopes requires the `Google+ API` to be enabled in the dashboard, I've already had it enabled.\n\nI've added documents regarding the scopes deprecation and workaround for those looking to keep the old  scopes at http://psa.matiasaguirre.net/docs/backends/google.html#scopes-deprecation\n. I've released `v0.1.26` which fixes the scopes issue by restoring the previous values but the new values are used by default, in order to re-enable the old (deprecated) scopes you need set any of this settings:\n\n``` python\nSOCIAL_AUTH_GOOGLE_OAUTH2_USE_DEPRECATED_API = True\nSOCIAL_AUTH_GOOGLE_PLUS_USE_DEPRECATED_API = True\n```\n\nAlso added support for `Goggle+ Sign In` server-side flow.\n. Yesterday I've updated the Google+ Sign-In docs and fixed some issues in the backend, take a look to the docs here http://psa.matiasaguirre.net/docs/backends/google.html?_=123#google-sign-in it might help.\n. @godshall, setting `request=None` should do the trick.\n. @godshall, I've merged your code and made `request` and optional parameter, it works fine in Django 1.6 and below.\n. Thanks!\n. Define a url `/complete/<backend>` that points to your custom view.. @nijel, I've introduced a fix for the issue, could you give it a try?\n. I've released `v0.1.25` to support the old API/Scopes while the API is being deprecated. In order to support the old values you need to define any of this settings:\n\n``` python\nSOCIAL_AUTH_GOOGLE_OAUTH2_USE_DEPRECATED_API = True\nSOCIAL_AUTH_GOOGLE_PLUS_USE_DEPRECATED_API = True\n```\n. Looks good. Merged. Thanks!\n. What are you trying to modify? Could you show me the API endpoints you are using?\n. Are you trying to post in behalf of the user or the page?\n. `SOCIAL_AUTH_SCOPE` is a supported setting but shouldn't be used (and I would remove such option in the future). `FACEBOOK_EXTENDED_PERMISSIONS` is a context name passed to a template defined when using the `FacebookAppOAuth2` backend, **it's not a setting**, but it will contain the value of `SOCIAL_AUTH_FACEBOOK_APP_SCOPE`.\n\nIn order to defined scopes, backend-related settings should be used, like `SOCIAL_AUTH_FACEBOOK_SCOPE`.\n. @tleewu, the docs about Facebook Scopes can be found here https://developers.facebook.com/docs/facebook-login/permissions/v2.0, there's a lot to dig in there and all depends on what you need for your project.\n. @steven-mercatante, are you using `python-social-auth` from `pip` or directly from this repository?\n. @steven-mercatante, the change for that import is not released yet, it should be `from social.apps.django_app.utils import strategy` instead.\n. I've pushed a fix but won't release it to pip yet since there are backward incompatible changes in the repo since the last version, it will take a couple weeks to get that released.\n\nMeanwhile you can add your own version of the Instagram backend to your project with the fix and use that instead of the builtin one.\n. Closing, too old now (sorry).\n. Thanks!\n. Thanks!\n. You are right, it's not supported yet.\n. I have no idea, wasn't aware of this stuff until you pointed that, it's probably not very hard to implement, just need time to review and plan the work.\n. Checking the protocol definition and the the basic client implementation, it's really similar to OAuth2 backends but with the forced `openid` scope set, so I wonder if that's pretty much what we need to make it work.\n\nGoogle already implements this protocol AFAIK, so this will be useful to test it:\n\n``` python\nSOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = ['openid']\nSOCIAL_AUTH_GOOGLE_OAUTH2_EXTRA_DATA = ['id_token', 'refresh_token']\n```\n. I don't have a date yet, I need to work in the docs and update and comment about the backward incompatible changes.\n. Fix already merged.. It's already like that, you can define `SOCIAL_AUTH_FACEBOOK_LOGIN_REDIRECT_URL`\n. @cambridgemike, you can set the `next` value in the session, like this:\n\n``` python\nstrategy.session.set('next', '/your/url')\n```\n\nBut this is a workaround.\n. Right, my suggestion to change it in the pipeline won't work at all. What are you trying to accomplish? Maybe there's another way.\n. @cambridgemike, yes, that's all you need, just add `next=/my/url` to the login/signup URL. Docs about that is located here http://psa.matiasaguirre.net/docs/use_cases.html?highlight=next#return-the-user-to-the-original-page.\n. Set `SOCIAL_AUTH_SANITIZE_REDIRECTS = False`\n. `SOCIAL_AUTH_USER_FIELDS` can be used to override the default fields used to create the user instance, there's also `SOCIAL_AUTH_USERNAME_IS_FULL_EMAIL` to accomplish an email-as-username setup.. You can easily implement that behavior by subclassing the built-in middleware here https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/middleware.py\n. There's no reason for `do_auth` not handle `HTTPError`, the code is just missing and I'll add it soon.\n. `SOCIAL_AUTH_GOOGLE_PLUS_AUTH_EXTRA_ARGUMENTS` is the correct way to do it, I agree the docs needs some works detailing this stuff.\n. Yes, that's `django-social-auth` backend, the paths and names changed in `python-social-auth`.\n. @avibrazil, the code looks good but I had a question, are the `grant_type` arguments needed in the `ACCESS_TOKEN_URL` and `REFRESH_TOKEN_URL`? The arguments are already passed by default in the base OAuth2 backend, if those can be removed I think you can remove the `REFRESH_TOKEN_URL` attribute and the `refresh_token` method.\n. I've merged the code and implemented some simplifications to the code.\n\nThanks.\n. Thanks!\n. @synotna, you can use the `get_user()` method in the storage. For example:\n\n``` python\nstrategy.storage.user.get_user(username='...')\n```\n. That should be the case, could you paste the full traceback? Also, what happens if you try this in a django shell:\n\n``` python\nfrom social.apps.django_app.default.models import DjangoStorage\n```\n. Social association to logged in users is totally possible and `/login/facebook/` (`social:begin` URL) is the way to do it, but the error you get is because something else, you have `AUTH_USER_MODEL` or `SOCIAL_AUTH_USER_MODEL` defined? Is it pointing to a `User` model or a `UserProfile` model?\n. Thanks!\n. Thanks!\n. Is this change still needed? What was the main purpose for it? Also, why the `exacttarget_` prefix?\n. Merged, I've applied PEP8 before the merge. Thanks!\n. The problem here is that the auth mechanism is done by the Google SDK and loggin out of your application, doesn't mean logging out of your Google account, which is then verified by the SDK when the page is reloaded, and the user is authenticated again.\n\nThis https://developers.google.com/+/web/signin/sign-out seems to be the fix to the problem.\n. @epetxepe, disconnect will remove the association between the google account and the user in your db, you will need `association by email` to reconnect that account later.\n. @Menda, maybe it's broken for `localhost`, but what happens if you setup an entry `/etc/hosts` to point to your local IP?\n. @epetxepe, @Menda, I've updated the docs (http://psa.matiasaguirre.net/docs/backends/google.html#google-sign-in) and the example application (https://github.com/omab/python-social-auth/blob/master/examples/django_example/example/templates/home.html#L331-L376) to an up-to-date SDK usage.\n. @epetxepe, there's an explicit logout example in the docs now, maybe you see a cached version of the page? The changes to the docs are in the repo, this is the particular commit https://github.com/omab/python-social-auth/commit/a4918af20e09642b8ee47724a023899ef93fd22b\n. There's no `code` anymore for this authentication mechanism and a change was introduced to take that into account properly in the backend, you need to pull the changes from the repository since it's not released yet.\n. @davidhubbard, I've changed the code a bit to make it available for all backends.\n\nThanks for your work on it!\n. Thanks!\n\nRegarding South migrations, they should be added to `south_migration` folder as suggested IMO.\n. Thanks!\n. @tomgruner, thanks for writing that script, I've added a similar version in the docs here http://psa.matiasaguirre.net/docs/configuration/porting_from_dsa.html#session and also linked to your original version.\n. @Harz-FEAR, that's probably because of my inexperience with the framework, what do you think is needed in order to support them?\n. Issue ported to https://github.com/python-social-auth/social-app-pyramid/issues/1 . Fixed, thanks!\n. Any more details? Like framework, pipeline details? Errors?\n. The values are needed in the session to continue any type of partial pipeline, sending a mail validation is a partial pipeline too.\n. I've added code to invalidate the pipeline when a new login/signup process is started, I can't do any cleanup on a pipeline, because at the time it's called data was already loaded and the whole process might be wrong.\n. Thanks!\n. I've merged the PR, thanks!\n. Thanks!\n. @ffurrer, I've added an extra github backend, similar to the github-for-organizations backend, but that checks by team instead, the code was so similar that I've added a class to deal with the common code.\n\nThanks\n. What's this?\n. There are migrations for django and south in the app.\n. @yetanotherape, I don't see anything wrong with it, and frankly I don't remember if there was a reason for the original code. I like that you added tests to it.\n\nMerged, thanks!\n. @rosscdh,\n\n> 1. You seem to have created the migrations usiing django 1.7RC\n\nYou are right, but there's a pending PR to restore South migrations\n\n> 1. the django app is called \"default\" which will (and in my case) does conflict with pre-existing app names; should try to maintain some sort of namespace (dare I say it) \"sa_default\" would be appropriate or \"social_default\" or something along those lines.\n\nI agree, the app name shouldn't be `default`, that's too generic, I didn't notice it, once the South migrations PR is merged I'll work on a migration to rename the app to `social_auth`. \n. Thanks!\n. Thanks!\n. Thanks!\n. @dexter1691, I'm experiencing the same symptom here, my guess is that it's related to the application state (production / development), but I can't confirm it. I've tried searching a lot without much luck, and after re-checking Dropbox OAuth2 docs it seems that the backend definition is fine and sending the expected arguments.\n\nThe closest Dropbox Dev Forum post I found, was this one https://forums.dropbox.com/topic.php?id=117913#post-619087\n. @gorillamania, the `state` was implemented only on OAuth2 backends because it's part of that spec, not from OAuth1. It's true that you can workaround (and it's done in OAuth2 backends too for those that don't support it), but not all of the providers support that and will mark the auth process as invalid because the redirect URL doesn't match with the one registered.\n\nI will try to make the `redirect url state` parameter available on OAuth1 backends too, and test that it works with Twitter and enable it by default.\n. @gorillamania, I've made the needed changes to support `redirect_state` parameter in OAuth1 backends and enabled it by default on Twitter.\n. @gorillamania, thanks fir the tip, I'll grab a very cold one to celebrate.\n. A few notes:\n1. South shouldn't be defined in the `requirements.txt` file, that will get South installed into everybody environment.\n2. The South migration enforces `auth.User` model, which is not correct when using custom users\n. `django-social-auth` solved this by forcing a freeze, take a look to the initial migration here https://github.com/omab/django-social-auth/blob/master/social_auth/migrations/0001_initial.py, it might help.\n. @mhluongo, not at all, go ahead.\n. Merged, thanks!\n. @jacksonofalltrades, the usual way is to provide a page with the different association options to a logged in user, once they associate the account, they can login with any of them.\n. @Karmak23, that's a perfect example, thanks.\n\nClosing this issue, reopen if needed.\n. Thanks!\n. @guruganesh26, I've push a fix for that user table sync. Try again.\n. @LeonardoGentile, there's a setting for that, `SOCIAL_AUTH_STORAGE`. The trick is not just defining your user class, you also need to override the `Storage` class which is just a class that the application uses to get the references to the current models. So, once you have your user model defined, define a custom storage  like this:\n\n``` python\nfrom social.apps.django_app.default.models import DjangoStorage\n\n\nclass CustomStorage(DjangoStorage):\n    user = YourUserModelHere\n```\n\nThen define the setting `SOCIAL_AUTH_STORAGE = 'import.path.to.CustomStorage'`.\n. @LeonardoGentile, that shouldn't be necessary, the base backend takes care of that for you https://github.com/omab/python-social-auth/blob/master/social/backends/oauth.py#L182-L186\n\nI confirm that `access_token` is stored in `extra_data` when using the default flow.\n. @duoduo369, the `redirect_uri` shouldn't be `http://192.168.9.191:9444/`, it should be `http://yourdomain.com/complete/weibo` and the value you define in Weibo should have the same format.\n\nAlso, if you try to look for a setting that sets that forces that domain in the value, there's not such thing, but you can trick the application by adding `127.0.0.1  www.abc.com` in your `/etc/hosts`.\n. @guruganesh26, try cleaning your cookies.\n. I've pushed the changes recommended in #445, could you give it a try?\n. Thanks\n. I've applied PEP8 and fixed the tests case.\n\nThanks for your contribution!\n. The record defines Python3 support since it was implemented https://pypi.python.org/pypi/python-social-auth/0.1.26\n. I've fixed the reference, thanks!\n. Merged, thanks!\n. @ashishnitinpatil, did you check the application tests https://github.com/omab/python-social-auth/tree/master/social/tests? It has code that tests the pipeline and also extends it with custom functions that can be tested too. \n. @clintonb, this is a duplicate of #339 which is already being worked to make it support custom user models (also not supported on your changes at the moment). I'm closing this one for now.\n\nThanks! \n. @gameguy43, I think that your request is reasonable and should be applied, I'm look forward that PR.\n\nThanks!\n. @eyscode, the change is not released at the moment, `v0.2.0` introduced some backward incompatibles changes and it won't be released until I work on a doc explaining the changes.\n. This is released now.\n. Merged, thanks!\n. Thanks!\n. Thanks!\n. Comments added (https://github.com/omab/python-social-auth/blob/1b56357c5a8365310507e89385457b1d3df9781b/social/pipeline/__init__.py) and also in docs http://psa.matiasaguirre.net/docs/pipeline.html.\n. The lib avoids username collisions by appending a hash if one is detected. It's possible to \"slugify\" usernames to remove spaces (and other characters), just set `SOCIAL_AUTH_SLUGIFY_USERNAMES = True`.\n. Thanks!\n. It's been a while and this didn't happened again, I'm closing he issue, reopen if needed.\n. The state was wrongly checking on error responses, masking the real error as an state missing one. Fixed by https://github.com/python-social-auth/social-core/commit/4d2903c1a26cc433731dcc103fd211a7a4716b96. You can add an alias URL in your conf:\n\n``` python\nurlpatterns = patterns('social.apps.django_app.views',\n    # authentication / association\n    url(r'^signup/(?P<backend>[^/]+)/$', 'auth',\n        name='signup'),\n)\n```\n\nAnd use it in your templates for email signup.\n. I've enabled the `state` parameters in the mentioned backend. It's hard to track all the APIs changes for a single dev :-/\n. `Shopify` settings are `SOCIAL_AUTH_SHOPIFY_KEY` and `SOCIAL_AUTH_SHOPIFY_SECRET`, also `SOCIAL_AUTH_SHOPIFY_SCOPE`. Check here http://psa.matiasaguirre.net/docs/backends/shopify.html\n. `request.backend` is OK when using the `psa` in the dev version, this is a change since `v0.1.26`.\n. Thanks!\n. Thanks!\n. Those fixes are invalid.\n1. `strategy` decorator was replaced with `psa` on version `2.0.0-dev`.\n2. `MovesOAuth2` and `GoogleOpenIdConnect` are valid backends.\n\nThe example app is kept up to date with the project development, it doesn't track the last stable release, for that you need to get check the last stable tag and grab the version of the app at that point.\n. @wadewilliams, this happens all the time?\n. Ha, didn't knew that, so it seems that if your app forces the email address requirement, then you should check if one was returned, and ask for one if it's missing.\n. @Jefffrey, you need to define a template when using `facebook-app` backend, check the docs http://psa.matiasaguirre.net/docs/backends/facebook.html#canvas-application\n. I've introduced a fix, didn't merged the PR #378 because that change ignores the scope defined in the settings (if any). The fix also applies to all the backends, not just Google.\n. I'm closing the PR, the proposed change was ignoring the value in the settings (if there was any), I've pushed a fix for the issue reported in #377 (https://github.com/omab/python-social-auth/commit/f138221b12df275a4ddcece83f212998c30428dc) to avoid updating the scope setting.\n\nThanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Closing, reopen if needed.\n. Merged, thanks!\n. No plans so far, but I'll keep this open to track it.\n. Thanks!\n. I've pushed the fix to the `psa()` and `load_strategy()` calls.\n\n@amilstead, I'm not sure what you mean.\n. I've pushed the `flush()` change to that line, it seem to work fine now, do you mind taking a look?\n. @jeromelefeuvre, I've pushed another fix. I was able to reproduce the issue with a fresh db (thanks), the last fix seems to do the trick, could you test again please?\n. Removing the sessions value should be enough to logout the user, but that second user with the extra hash, means that it's failing to detect the already created user in the previous login. Let me check it.\n. Sorry?\n. That's becuase Google JS API triggers back the login and doesn't remember that the user requested to be logged out or disconnected. Upon disconnect you need to call this https://developers.google.com/+/web/signin/sign-out.\n. Thanks!\n. Merged (applied some PEP8 to it), thanks!\n. Thanks!\n. @Jefffrey, I've pushed an small change to allow the customization of URL namespace. Setting `SOCIAL_AUTH_URL_NAMESPACE = 'nested_app'`.\n\nThis is not released yet, but you can use it if you install `python-social-auth` from github.\n. The backend seems to be working OK, now regarding `ntp`, it's not mandatory to install it, but you need a way to ensure that your server clock is on time, otherwise Twitter will discard the request because the time differs (the OAuth1 request sends the time).\n. Closing (too old), reopen if needed.\n. Thanks! Merged.\n. @dzerrenner, I have the feeling that Blizzard request was kinda stupid, why assume that something is official support if it doesn't say on any place? Anyway, it doesn't do any harm, I've converted it into a comment instead of a docstring before merging.\n\nThanks!\n. Thanks!\n. This PR is not correct, the function expects an `association id` as that parameter (which is the `UserSocialAuth.id`), not an `uid` which is the identifier of the user in the auth provider.\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Merged and fixed TravisCI build plus Tox and tests (dropped `sugar` since it doesn't work on `pypy`).\n\nThanks!\n. Merged and added docs, thanks!\n. I've introduced a change to give github primary emails priority.\n. @Jefffrey, have you checked the tests included in the lib? They test the pipeline functionality, it even adds custom pipelines functions to it.\n. @BraisGabin thanks, @coriolinus if this is still a relevant issue, please open an issue in the corresponding component at [python-social-auth](https://github.com/python-social-auth).. Thanks!\n. Thanks!\n. You can store it on so many places, custom models, caches (memcached, redis), user session, cookies, etc, just pick the one that fits your problem. (This question is not actually related to the lib).\n. The request is available at `strategy.request` when using the Django framework. \n. Entries added. Thanks!\n. Thanks!\n. There's no such import in the app, probably something you copied from some other place?\n\nClosing, reopen if needed.\n. You have any link to the docs?\n. PSA won't be affected by this change since it doesn't use any scope that requires mandatory review by Facebook staff, but any developer that's using any of those scopes need to put their app to review.\n. Not a design decision, I've added the decorator to the views here https://github.com/omab/python-social-auth/commit/eaa3f567c08469f0b441467662a8e323c364808f\n\nThanks!\n. Thanks!\n. Thanks!\n. Change implemented, thanks!\n. The settings should be:\n\n``` python\nSOCIAL_AUTH_GOOGLE_OAUTH2_AUTH_EXTRA_ARGUMENTS = {\n    'access_type': 'offline'\n}\n```\n. Thanks!\n. This was solved? I see that the paste was removed.\n\nReopen if needed.\n. This should fix that `https://github.com/omab/python-social-auth/commit/15e366f4531dac74b8fb35718f1dd13a316915c3`, still, you need to check the prototype of your `create_user()` method, check #435 since it's a similar situation.\n. Sadly not because Django eats the `TypeErrors` generated by any auth backend. In your case the issue is that your `create_user()` method requires a `password` parameter which `python-social-auth` doesn't generate or sends to your method.\n\nYou have two options:\n1. Make it optional (which should be OK since that's a benefit of social-authentication, no passwords to remember but one)\n2. Add a pipeline function that fills the password into the `details` `dict` before the user is created.\n. The call wasn't broken, I've updated the docs to reflect the change.\n. Use a middleware, check the docs http://psa.matiasaguirre.net/docs/configuration/django.html#exceptions-middleware\n. 1. You can put your code in a pipeline, for example a view is served with a form that `POST`s back to `/disconnect/<backend>` and your functionality is ran there (in the pipeline)\n2. You can override the disconnect view to allow `GET` requests (not recommended since anybody on any other website can create an img like this `<img src=\"http://your-domain.com/disconnect/facebook\">`, and this connect any user that falls in that page)\n. How did you install it? Which version of `openid` is installed? It's `python-openid` or `python3-openid`?\n. `python-social-auth` is fully compatible with Python 3.4, as you can see in this log, the correct dependencies were installed\n\n``` shell\n$ pip3 install python-social-auth\nDownloading/unpacking python-social-auth\n  Downloading python-social-auth-0.2.1.tar.gz (110kB): 110kB downloaded\n  Running setup.py (path:/home/omab/.virtualenvs/foo2/build/python-social-auth/setup.py) egg_info for package python-social-auth\n\nDownloading/unpacking requests>=1.1.0 (from python-social-auth)\n  Downloading requests-2.4.3-py2.py3-none-any.whl (459kB): 459kB downloaded\nDownloading/unpacking oauthlib>=0.3.8 (from python-social-auth)\n  Downloading oauthlib-0.7.2.tar.gz (106kB): 106kB downloaded\n  Running setup.py (path:/home/omab/.virtualenvs/foo2/build/oauthlib/setup.py) egg_info for package oauthlib\n\nDownloading/unpacking six>=1.2.0 (from python-social-auth)\n  Downloading six-1.8.0-py2.py3-none-any.whl\nDownloading/unpacking PyJWT>=0.2.1 (from python-social-auth)\n  Downloading PyJWT-0.3.0-py2.py3-none-any.whl\nDownloading/unpacking python3-openid>=3.0.1 (from python-social-auth)\n  Downloading python3-openid-3.0.5.tar.gz (300kB): 300kB downloaded\n  Running setup.py (path:/home/omab/.virtualenvs/foo2/build/python3-openid/setup.py) egg_info for package python3-openid\n\n    warning: no files found matching 'NOTICE'\n    warning: no files found matching 'CHANGELOG'\n    warning: no files found matching 'README.md' under directory 'examples'\n    warning: no files found matching '*.css' under directory 'doc'\n    warning: no files found matching '*.html' under directory 'doc'\nDownloading/unpacking requests-oauthlib>=0.3.0,<0.3.2 (from python-social-auth)\n  Downloading requests-oauthlib-0.3.1.tar.gz\n  Running setup.py (path:/home/omab/.virtualenvs/foo2/build/requests-oauthlib/setup.py) egg_info for package requests-oauthlib\n\nDownloading/unpacking defusedxml (from python3-openid>=3.0.1->python-social-auth)\n  Downloading defusedxml-0.4.1.tar.gz (48kB): 48kB downloaded\n  Running setup.py (path:/home/omab/.virtualenvs/foo2/build/defusedxml/setup.py) egg_info for package defusedxml\n\nInstalling collected packages: python-social-auth, requests, oauthlib, six, PyJWT, python3-openid, requests-oauthlib, defusedxml\n  Running setup.py install for python-social-auth\n\n  Running setup.py install for oauthlib\n\n  Running setup.py install for python3-openid\n\n    warning: no files found matching 'NOTICE'\n    warning: no files found matching 'CHANGELOG'\n    warning: no files found matching 'README.md' under directory 'examples'\n    warning: no files found matching '*.css' under directory 'doc'\n    warning: no files found matching '*.html' under directory 'doc'\n  Running setup.py install for requests-oauthlib\n\n  Running setup.py install for defusedxml\n\nSuccessfully installed python-social-auth requests oauthlib six PyJWT python3-openid requests-oauthlib defusedxml\nCleaning up...\n```\n. Closing, too old, and not a problem at the moment. Reopen if needed.\n. `GithubBackend`? Maybe something left from a migration from `django-social-auth` to `python-social-auth`?\n. `registration/login.html` is the default template used by `django.contrib.auth` application when hitting the `/login/` URL. If you are looking to trigger the login with Facebook view, then you should use `/login/facebook/` instead. For more details about the Django view, check the docs at https://docs.djangoproject.com/en/1.7/topics/auth/default/#django.contrib.auth.views.login\n. @raphaelcuba, I don't think I follow, those two images are for Django errors (different errors), are you talking about the page format itself? Like, you don't want that kind of error to be displayed to users (like when setting `DEBUG = False` in your settings)?\n. OK, I think I follow you now, you get redirected to `/login/` URL? Any chance that the redirect happens because the view you hit has the `@login_required` decorator? Do you have the server log for this failed attempts?\n. The error says `global name slugify is not defined`, do you use `slugify` in your project?\n. OK, I've lost you again, I don't know what's your real error is.\n. I've pushed the changes, could you give it a try?\n. Merged, thanks for adding tests to it too! I've added some quick docs.\n. Merged, thanks!\n. Looks great, thanks!\n. I think that the removal is the correct step, thanks!\n. Thanks!\n. Thanks!\n. There's not such context process in python-social-auth.\n. Docs here http://psa.matiasaguirre.net/docs/configuration/django.html#exceptions-middleware\n. Docs updated, http://psa.matiasaguirre.net/docs/configuration/settings.html#miscellaneous-settings\n. The example app was corrected on on how to get the user instance, the library doesn't support lazy-like objects internally and a real user instance must be provided to it.. Yahoo OAuth2 was implemented a while back http://psa.matiasaguirre.net/docs/backends/yahoo.html#yahoo-oauth2\n. What's the error raised?\n. Using PSA isolated from a framework is not 100% supported (yet), the recent [split into smaller modules](https://github.com/python-social-auth) should make that possible in the future. . That's because the setting name is `SOCIAL_AUTH_LINKEDIN_OAUTH2_FIELD_SELECTORS`.\n. This is python-social-auth, django-social-auth was deprecated and I'm not dedicating time to support it anymore.\n. Sorry about the delay, it's finally merged (with an small check added).\n\nThanks!\n. Thanks!\n. You can hit `http://graph.facebook.com/USER-ID`, it will return a JSON response with a `link` key with the profile URL. Also you can hit `http://www.facebook.com/USER-ID` and catch the redirect Location.\n. Thanks!\n. Thanks!\n. Thanks!\n. Fixed, thanks!\n. Thanks!\n. The related PRs to properly fix Google OpenId Connect were merged or ported to [social-core](https://github.com/python-social-auth/social-core).. What's the value for domain and redirect uri facebook developers dashboard for your app?\n. Thanks!\n. Sorry about the delay, I've updated it to `v2.3` (which changed the message response from querystring to json).\n. Not sure if this is the one you are looking for http://psa.matiasaguirre.net/docs/backends/qq.html, if that's not it, I won't be able to create a backend for a Chinese site (language barrier).\n. Thanks!\n. Closed by #563\n. Revoke methods moved to the base class.\n. It should be invoked like this:\n\n``` python\nfrom social.apps.django_app.utils import load_strategy\n\nuser = User.objects.get(pk=...)\nsocial = user.social_auth.get(provider='google-oauth2')\nsocial.refresh_token(load_strategy())\n```\n. There was an error on how the state validation was done previous to error checking which masked the original error as an state-missing one. Fixed by https://github.com/python-social-auth/social-core/commit/4d2903c1a26cc433731dcc103fd211a7a4716b96. Closed by #491\n. Thanks!\n. This only works for Django framework but the function is defined in the main `utils.py`, this kind of framework-related feature should be defined in the corresponding strategy.\n. Cool, thanks for also including the docs and comments.\n. Thanks!\n. Thanks!\n. Thanks!\n\nFixes #501\n. Thanks!\n. The app was created a long time ago when things where different, I don't see the need to change it, but if a pull-request is presented I'll merge it.\n\n@DavidJFelix, thanks for that extensive description! \n. I've flagged the trailing slashes to be optional for Django apps.\n\nFYI, you can drop the built-in URLs and use your own version pointing to the same views, just don't include the built-in `urls.py`.\n. @nicksnell, I've pushed a change for that, now the trailing slash is controlled by a setting `SOCIAL_AUTH_TRAILING_SLASH`, set it to `True` (have trailing slashes in URLs) or `False` (don't have them). It defaults to `True` to keep it backward compatible.\n. Recently facebook introduced an approval mechanism for scopes, the only ones that don't require approval are `public_profile`, `email` and `user_friends`, anything else will require Facebook to review your app (you need to submit a request to review it).\n\nAlso, many of the scopes don't mean that the data will be available during the auth process automatically, you need to call the Facebook APIs to retrieve it (python-social-auth will only care about the basic data needed to authenticate the user and nothing else).\n. Thanks!\n. Thanks!\n. Thanks.\n\nFixes #508 \n. Thanks!\n. Python social auth supports loging by email/username, docs are here http://psa.matiasaguirre.net/docs/backends/email.html\n. Merged, thanks!\n. You know this is a python application, right?\n. Actually it was my fault, I rushed to check the code and quickly saw the usage of `hmac_sha256` but didn't saw it's definition above, also I've noted the `;` after that function call, plus the failing Python3 tests (which are caused by encoding while calling the hashing lib).\n\nI'll reopen it and fix the issues in a branch before merging the work.\n. It's merged now.\n. Thanks for tracking this and posting a pull-request.\n. Thanks!\n. Thanks!\n. Thanks!\n. Closing, very broken tests.\n. @clintonb, I'll do it shortly\n. Hi, `v0.2.2` was just released to pypi.\n. Thanks!\n. I don't follow your request.\n\nClosing (reopen if needed).\n. This was fixed once merged #550\n. This doesn't seem to be a problem with python-social-auth but just something with your setup, right?\n. Thanks!\n. It seems that behance dropped OAuth2 support recently(?) in what looks like an API restructuring, their [blog post](http://blog.behance.net/dev/introducing-the-behance-api) from Sept 2014 says that OAuth2 would be introduced \"soon\" but so far it seems still broken.\n\nI've created a request on their help desk https://help.behance.net/requests/143083 (not sure if that's public).\n\nMeanwhile I've added a deprecated/broken notice in the docs http://psa.matiasaguirre.net/docs/backends/behance.html.\n\nI hope they solve this silly change soon.\n. Sadly behance is doing a (poorly planed) transition from OAuth2 to Adobe Identity, so OAuth2 is no longer to be supported, I'll remove the backend soon.\n. Fixed, thanks.\n. Already fixed.\n. Merged, I've also added a couple simplifications.\n. Thanks!\n. There was an error that made `state` getting validated on error responses from the provider that masked the real error as an state-missing problem, this got fixed by https://github.com/python-social-auth/social-core/commit/4d2903c1a26cc433731dcc103fd211a7a4716b96. Frankly I don't know, Tornado support was an experiment wrote in a night when preparing for a talk for PyCon Uruguay, it's worth checking tho.\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. I've merged the work, in the process I've updated `EXTRA_DATA` to hold the values from the doc. \n\nThanks!\n. This change will force the setting to everybody using the lib, instead there's a setting to accomplish that:\n\n``` python\nSOCIAL_AUTH_FACEBOOK_AUTH_EXTRA_ARGUMENTS = {'auth_type': 'rerequest'}\n```\n. Thanks!\n. Thanks!\n. Take a look to the tests suite, it uses [HTTPretty](https://github.com/gabrielfalcao/HTTPretty) to mock the auth flow, you can define a similar setup in your site to mimic the authentication process.\n. Thanks!\n. Thanks!\n. I've introduced the mentioned fixes and merged the work.\n\nThanks!\n. The code looks good and I like it, but I have some concerns about backward compatibility, maybe we can keep the code in the `__init__.py` with a version check to keep it compatible?\n. I've implemented the mentioned change and merged the work. Thanks!\n. @sohamnavadiya did you install the package `social-auth-django`?. @shepilov-vladislav, check the migration file https://github.com/omab/python-social-auth/blob/master/MIGRATING_TO_SOCIAL.md#django. @sohamnavadiya no problem, do you mind posting the solution, I know that transitions aren't always smooths and could be useful to somebody else experiencing the same problem.. Fixed by #550.\n. You don't need to monkey patch the backends, it's enough to define your own `storage` (you can inherit from the [built-in one](https://github.com/omab/python-social-auth/blob/183a57a33c1111bb9b19bfaac884cf82ae542073/social/storage/django_orm.py)), and override the [get_user](https://github.com/omab/python-social-auth/blob/183a57a33c1111bb9b19bfaac884cf82ae542073/social/storage/django_orm.py#L62-L69) method to take the current `site_id` into account, you might need to override other user related methods too.\n\nThe storage is defined in the [utils.py](https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/utils.py#L18-L19) module, and it can be overridden with the `SOCIAL_AUTH_STORAGE` setting. \n. Yeah, the trick is not going to be as simple as you thought, but you are in the correct path. What you need now is:\n1. Define your own `UserSocialAuth` model, make it inherit from your custom mixin\n2. Use that model in the configuration for `SocialAuthStorageOverride`\n\n``` python\n\nfrom django.db import models\nfrom social.apps.django_app.default.models import Nonce, Association, Code, DjangoStorage\n\n\nclass UserSocialAuth(models.Model, SocialAuthUserMixinOverride):\n    class Meta:\n        db_table = 'social_auth_usersocialauth'\n\n\nclass SocialAuthStorageOverride(DjangoStorage):\n    user = UserSocialAuth\n```\n\nYou can avoid the mixin and directly define the overridden methods in the custom `UserSocialAuth` class.\n. The steam username is used as a base to the user username, if it's duplicated, then a extra hash will be added (so they are never repeated), also, if the user changes his username in steam, it won't change the username in your site (username is defined only once).\n\nYou are getting that error because you have two steam accounts associated to a single user, python-social-auth doesn't put any constraint to that, you can have several accounts from the same provider associated to a given user.\n\nYou should do `user.social_auth.filter(provider='steam')[0]` (or select one of them).\n. Thanks!\n. Looks great, merged.\n\nThanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Closing since it's not needed. Also adding a pipline that gets users by username is a security risk, many sites allow users to define their own username, this can be used to take over other user account with a similar username on a site using python-social-auth. \n. I've added rednose to python 3 dependencies too (that fixed the tests).\n\nThanks!\n. Thanks!\n. I need more details to debug this one, what social site are you using? Could you define steps to reproduce?\n. Thanks!\n. You need to escape your next parameter, it should look like `?next=%2Fmy%2Fredirect%2Fpath%3Fcode%3Dabcd`.\n\nBTW, you can quote it with `urllib.quote_plus('...')`.\n. This is probably by the lack of the certificates in your server, try installing the `ca-certificates` package on it (if it's a debian derivative just run `sudo apt-get install ca-certificates`), also ensure that your server date is properly defined (use `ntpdate` or similar).\n. Where in the docs says that the id shouldn't be taken as the user identifier? In fact, you can change your username in Github Settings.\n. An `id` that can change, is not a valid way to identify a unique user `id`. Anybody that changes his username won't be able to logging back to their account in your site.\n\nYou can retrieve the username using the `/user` API (https://developer.github.com/v3/users/#get-the-authenticated-user). Also, you can store it `extra_data` when defining the setting `SOCIAL_AUTH_GITHUB_EXTRA_DATA = [('login', 'login')]` (I've added that entry to the default value, so you won't need the setting actually). Then you can access it by doing `user.social_auth.get(provider='github').extra_data['login']`.\n. Docs added, check here http://psa.matiasaguirre.net/docs/logging_out.html\n. Thanks!\n. That's an odd implementation, but works, for me, thanks!\n. Version 0.2.3 released.\n. No problem!\n. I've added a condition import also updated the docs to mention the [transaction](https://pypi.python.org/pypi/transaction) package.\n. Thanks!\n. Do you have the complete traceback?\n. That change should get rid of the issue and raise a more simpler exception.\n. Twitter doesn't disclose email address, so you won't be getting one when using that backend. About `username`, that's because the user creation is calling your user manager `create_user()` method, by default it will pass the `username` parameter, but you can avoid that by defining `SOCIAL_AUTH_USER_FIELDS = ['email']` (set any parameter name that your `create_user()` method expects).\n. Hi Dima. I've updated the mongoengine example using the other example as base, in this new version the missing email is taken into account by a pipeline function and it's requested as part of the process.\n. What's the vague exception?\n. If that's the error, it won't only fail the validation because email is \"missing\", it will also break the whole authentication process since the pipeline information is empty, the whole authentication process will fail.\n. @maxsocl, @craig-hacklaunch, I see the problem now, and even if I think that this could be solved with a re-write of the email validation pipeline, this affects all the pipeline functions that use the partial mechanism, so, I'm already working on a restructure of the pipeline serialization functionality that will improve this behavior. Basically the pipeline data will be dumped to a DB table and a hash code will be used to identify the processes which can be stopped and continue later, removing the dependency of the session.\n. File added. Thanks!\n. Thanks!\n. These are already solved by #550\n. The change is not released into pypi yet.\n. I do releases mostly by demand or when I feel the amount of changes are worthy a release. I've released `v0.2.4` a few minutes ago.\n. `SOCIAL_AUTH_EXTRA_DATA` should be a list, not a boolean field, check the docs at http://psa.matiasaguirre.net/docs/backends/oauth.html. I see a lot of old settings (like `django-social-auth` old) there:\n- `SOCIAL_AUTH_ENABLED_BACKENDS`\n- `SOCIAL_AUTH_CHANGE_SIGNAL_ONLY`\n- `GITHUB_API_SECRET`\n- `GITHUB_APP_ID`\n- `GITHUB_PASSWORD`\n- `SOCIAL_AUTH_COMPLETE_URL_NAME`\n- `SOCIAL_AUTH_ASSOCIATE_URL_NAME`\n. Awesome, thanks!\n. Thanks!\n. Fixed by #550\n. Cannot be removed (in fact it could be added by others), I've added a not saying it's deprecated.\n. What version of psa are you using?\n. I've released `v0.2.4` a few minutes ago, that should fix your issue.\n. That's already fixed (was released a couple days ago).\n. You need to set `SOCIAL_AUTH_PROTECTED_USER_FIELDS = ['email']` to avoid that value overwrite.\n. The setting is documented here http://psa.matiasaguirre.net/docs/configuration/settings.html?highlight=protected#miscellaneous-settings. Anyway, I've added `email` as a protected field by default a few minutes ago (and released `v0.2.5` too) because it's been asked quite often recently.\n. I've released `v0.2.5` which solves this issue, the problem was caused by the recently introduced wheel support, but the packages built was broken (Python 2 dependencies defined in the a single universal wheel), I've fixed it b building version-dependent wheels now.\n. The `302` response is not an error, that's OK, clicking that link again raises an error because it's trying to get a value from the session that's not there anymore (because the URL was already visited during the complete process).\n\nNo, regarding the problem in your server, do you have the full traceback? Also check if you have access to Twitter API from your server (try wget or similar tools to hit it). It looks like your server is experiencing issues accessing the twitter API (maybe because it's over `https`, which is not the first time something similar is reported).\n\nHow's the server datetime defined? Do you have `ntpd` or similar installed (highly recommended)?\n. What I meant is that your server (the machine that you are using where the app is deployed, the one with Apache), might have some limitations accessing third-party sites or protocols or ports, so you need to check if that serve is killing your connection to twitter, try this in that machine `wget https://api.twitter.com/oauth/request_token`, it should drop a 400 bad request (because it lacks some parameters).\n. I think you are not following me, I didn't meant that your server should be running over SSL, I meant that it looks like your server doesn't have a correct access to SSL APIs. Do you have `nptd` running on that machine?\n. Could you try installing `python-social-auth` from github and try again? You can install it with pip like this:\n\n``` shell\n$ pip install -e \"git+https://github.com/omab/python-social-auth.git#egg=python-social-auth\"\n```\n. `v0.2.6` (just released) includes the requirements files.\n. Thanks!\n. That's odd, it's working just fine for me, I've changed that method recently to use `get_json()` since the docs specify that with API `v2.3` the response to `/oauth/access_token` is of JSON nature (https://developers.facebook.com/docs/facebook-login/manually-build-a-login-flow/#confirm).\n\nMaybe you need to enable `v2.3`?\n. Python 3.4.2 and Django 1.8 here too.\n. That change should get rid of the issue, please test and reopen the ticket if needed.\n. I think that 254 chars is probably enough.\n\nThanks!\n. Fixed, thanks!\n. Merged, thanks!\n. What version are you using? There was a fix related to access token storage when using AJAX authentication a few days ago.\n. This approach resembles the default server-side OAuth2 implementation, the user clicks the login button, get's redirected to the provider where it accepts, get's redirected back to the site with a `code` parameter, that's then exchanged for an `access_token`.\n\nIn theory (this is not tested), you can call `request.backend.auth_complete()` in your view implementation.\n. Do you have the complete traceback?\n. It seems that you are using the `default` application (which uses Django ORM) and the Mongoengine one, that's not compatible, and in this case the mongoengine application is overriding the models definition and failing when trying to connect to MongoDB.\n. What? Do you have any traceback? Any info?\n. It looks like your python setup is broken and lacks some modules, check that you have the SSL dependencies when installing it.\n. The problem is not with `python-social-auth` or `requests`, it's withing your Python installation which lacks SSL support (needed to connect to any SSL-based service), you need to recompile Python with SSL support, or reinstall a version with it.\n. I've never tried it, but AFAIK it works.\n. Merged. Thanks!\n\nI've also made an small change, replaced the `json.loads(urlopen(...))` with the `get_json()` helper method that simplifies the task.\n. No description?\n. `AppConfig` is defined here https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/default/config.py.\n\nThere's no need for a rename of an app that's over 2 years old, in active development and used by many developers that never complained about that.\n. The `user` instance passed in the pipeline is from `django.contrib.auth.models.User` unless the user model was overridden by `AUTH_USER_MODEL` setting (https://docs.djangoproject.com/en/1.8/topics/auth/customizing/#substituting-a-custom-user-model).\n\nAbout `roles`, it depends on how your application manages them, if you are referring to `Groups` (https://docs.djangoproject.com/en/1.8/topics/auth/default/#topic-authorization), then follow the Django docs about it.\n. I've added TLSv1 support to Amazon backend. Now, regarding `django-social-auth`, that lib is deprecated and support for this won't be added to it.\n. How do you track that? Different buttons? If that's the case, then check this solution to a similar problem https://groups.google.com/d/msg/python-social-auth/4U6eaeaPtEc/ErS3NT_CsR4J\n. Thanks!\n. I don't see an reference to a migration named `0002_auto_20141123_1349` in the whole repository history, are you sure that that migration wasn't generated in your project?\n. `v0.2.9` released to pypi.\n. This can be accomplished with an intermediate page to do the final redirect, or even the final page can access the stored values in the session.\n. A Changelog is properly maintained now in the new library components at [python-social-auth](https;//github.com/python-social-auth).. This is a great PR, I'll take a look to it shortly. Many thanks!\n. @bradenmacdonald, I've checked the code and it looks good, thanks for working on it. I think that leaving `python-saml` out of the default dependencies is the best choice. I have a few questions tho:\n1. There's any chance to get some docs about how to use it?\n2. What's the status of the pending pull requests on `python-saml`?\n\nThanks\n. Thanks for those docs, I've merged the work, thanks!\n. Sounds great.\n. @bradenmacdonald, `v0.2.11` released.\n\n@pitbulk thanks for taking a look to it!\n. I've bumped the depedencies versions for Python 2 and 3, that should get rid of this issue, python 3 dependencies where behind python 2.\n. VK ID_KEY was updated to `id`.. Merged, thanks!\n. The examples were properly updated recently, they are located at [social-examples](https://github.com/python-social-auth/social-examples).. Merged, thanks!\n. @hwkns, `v0.2.13` released to pypi.\n. Thanks!\n. Merged, thanks!\n. Currently there's no implemented way, but with the recent split into smaller modules, it should be easier to accomplish this since the [core component](https://github.com/python-social-auth/social-core) doesn't depend on any framework.. Is this related to #632 on any way?\n. Merged, sorry it took so long.\n. The `state` is automatically sent by the auth provider, it's used as a security measure like if it was a CSRF token.. @nemesisdesign, version on pypi updated\n. Recent changes to OpenIdConnect porting it to use `jwkest` lib, properly take care of the signing algorithm.. The related PRs were merged or ported to the new lib [social-core](https://github.com/python-social-auth/social-core).. I've added a note regarding the OAuth1 access_token format in the docs https://github.com/python-social-auth/social-docs/commit/b816470b35c69e3fd304948a34023f5b9178a4cf.. Thanks!\n. This should be supported by now, check any of the example apps at [social-examples](https://github.com/python-social-auth/social-examples).. Changes merged with the small change to keep some degree of backward compatibility with the username-as-id behavior.\n\nThanks\n. Merged, thanks!\n. Set `SOCIAL_AUTH_AZUREAD_OAUTH2_SCOPE = [...]` and `SOCIAL_AUTH_AZUREAD_OAUTH2_IGNORE_DEFAULT_SCOPE = True`.. Damn, I need to fix the way I generate the changelog.\n\nThanks!\n. Great, thanks!\n. Thanks!\n. PSA wil automatically associate new social-account to the current logged in user, if there's no logged-in user, then a new one is created. The URLs are the same for create and associate.. Per-backend PIPELINE setting was added some time ago, per-backend USER_FIELDS was added here https://github.com/python-social-auth/social-core/commit/1690dd66aeb361f8fc0265c5e45035215f28d2d2.. Merged, with a slightly change to the API endpoints generation.\n\nThanks!\n. If a PR is proposed I would be willing to review and approve it in, but I don't have any plan to implement a custom strategy to improve the integration with django-rest-framework.\r\n\r\nI'm closing the issue, reopen in [social-app-django](https://github.com/python-social-auth/social-app-django) module if still relevant.. Fixed by https://github.com/python-social-auth/social-core/commit/4e33457813c63f6b1d7979cf2bdc30c5095c0ddf. Thanks!\n. A fix for this was already merged.. I've raised https://github.com/python-social-auth/social-core/issues/8 to properly track this issue in the new components.. PR merged.. Fixed by #672\n. Thanks\n. Thanks!\n. Thanks!\n. Facebook API is already updated, currently version is 2.8.. Thanks!\n. Thanks!\n. The new examples at [social-examples](https://github.com/python-social-auth/social-examples) properly corrected this issue.. Thanks!\n. Merged, I've applied some PEP8 related changes and linked the docs to the backends index.\n\nThanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. PR was merged and issue is fixed.. Thanks!\n. Thanks!\n. Yes, I would accept such PR, the documentation location is now at [social-docs](https://github.com/python-social-auth/social-docs).\r\n\r\nThanks.. `redirect_url` is an option in OAuth2 providers when creating the application on their end, it's meant to be used to send the user to that location once approved the access, when configuring PSA, the value usually has the form `http://yousite.com/complete/qq`.. Thanks!\n. This got addressed.. Good idea, thanks!\n. This is really great, many thanks. You can find the docs here http://psa.matiasaguirre.net/docs/developer_intro.html\n. Currently there's no easy way to resume a pipeline from another browser since it heavily depends on the session which also usually depends on the browser cookies. I've created https://github.com/python-social-auth/social-core/issues/7 to start working on a solution to this common problem.. Thanks!\n. Thanks!\n. Thanks\n. When the user cancels the auth, the project needs to properly deal with the exception and render/return/etc a proper notification since PSA only deals with the flow, doesn't do rendering or integrates with the project styles, when using Django, there's a [middleware](http://psa.matiasaguirre.net/docs/configuration/django.html#exceptions-middleware) to ease the process.\r\n\r\nIt's quite common for the APIs to drop errors when not configured properly, on many cases the errors are treated as `AuthCanceled`, on some cases probably wrongly.. Thanks!\n. Thanks!\n. Why?\n. Personally I don't like trailing commas in `tuples` or `dicts`, but this PR is harmless, so I'll accept it.\n\nThanks!\n. Since the error is in a `print` statement, I would assume that the server stdout is closed, thus producing an IO error when trying to write to it.. Thanks!\n. This should suffix as an example https://github.com/python-social-auth/social-core/blob/master/social_core/backends/open_id.py#L338-L356. Thanks!\n. The button was removed since it wasn't used anymore.. Check the name in your `AUTHENTICATION_BACKENDS` setting, it should read `social.backends.facebook.FacebookOAuth2` (note the uppercase A in the OAuth2 part in the name).\n. Thanks!\n. Facebook API is now at 2.8 and the lib was updated to support it.. Thanks!\n. Thanks!\n. The example apps were updated recently, they now reside in [social-examples](https://github.com/python-social-auth/social-examples).. Updated https://github.com/python-social-auth/social-docs/commit/551123cc61a545ef79b683592a0931f1a313cca5.. Thanks!\n. The bytes type is properly treated now.. Thanks!\n. That's odd, this PR should be closed by the manual merge I did.\n. Thanks!\n. Thanks!\n. Closing since #772 got merged.\n. https://github.com/omab/python-social-auth/blob/master/CHANGELOG.md#v0213-2015-09-25. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/25ca1f51b1e2e22521fdee33ac542ce2bcfb4da0).\r\n\r\nThanks!. Thanks!\n. Thanks!\n. Took a couple months, but it's finally merged. Thanks!\n. There's no support for it yet, issue was created [here](https://github.com/python-social-auth/social-core/issues/6) to work on it.. Support added at [social-core](https://github.com/python-social-auth/social-core/commit/b20feb4ffef6dfcb2c171b9d04cfa65f405d1578).. Thanks!\n. This got solved.. This got fixed.. Thanks!\n. Thanks!\n. The new app [social-app-django](https://github.com/python-social-auth/social-app-django) should be ready for Django 1.10.\r\n\r\nThanks!. Thanks!\n. The pipeline was updated to a more generic version that will fetch the needed fields to create a user from the setting `SOCIAL_AUTH_USER_FIELDS`, defaults to `['username', 'email']`.. Thanks!\n. Thanks!\n. PSA focus on social athentication/authorization, it also has support for \"legacy\" backends (email and username), you could extend any of those with the desired behavior. Check the docs for them here http://psa.matiasaguirre.net/docs/backends/index.html#non-social-backends. Docs updated https://github.com/python-social-auth/social-docs/commit/628d7aa9c664cc3d51f6f87fc01d7bc6721db5a5. Thanks!\n. Thanks!\n. Closing since this is already in the codebase https://github.com/python-social-auth/social-app-django/blob/master/social_django/storage.py#L112.\r\n\r\nThanks!. The fix was merged.. Thanks!\n. A similar change was already introduced a while ago, it also forms part of the new app [social-app-django](https://github.com/python-social-auth/social-app-django).\r\n\r\nThanks!. Merged, thanks!\n. Closing since this was fixed a long time ago.. Backends list can be found here http://psa.matiasaguirre.net/docs/backends/index.html, there might be some cases where the documentation file is missing, but if a backend is defined [here](https://github.com/python-social-auth/social-core/tree/master/social_core/backends), the it's officially supported.. Fixed by https://github.com/python-social-auth/social-core/commit/4d2903c1a26cc433731dcc103fd211a7a4716b96.. Doesn't look like this is needed anymore (https://github.com/python-social-auth/social-core/blob/master/social_core/backends/reddit.py#L45-L47).\r\n\r\nThanks!. Sorry for the delay.\n\nThanks!\n. Thanks!\n. Closing since #941 got merged.\n. Merged, thanks!\n. Version updated https://github.com/python-social-auth/social-core/commit/54e245c58366d513d3b02e0b5ea18146be04ea16.. There was an incorrect check for the state value on error responses hiding the real error happening. Fixed by https://github.com/python-social-auth/social-core/commit/4d2903c1a26cc433731dcc103fd211a7a4716b96. Thanks!\n. I'm closing this since it's very outdated by now.\r\n\r\nThanks!. @matthowland could you update `AUTHORIZATION_URL` too?\n. Fixed by #797 \n. PR already fixed.. API version was recently changed to 2.7.\n. Thanks!\n. Thanks!\n. Warnings already fixed.. `v0.2.14` released with this fix.\n. Thanks @tkajtoch for that investigation, this looks clearly like a server outdated ca certificates. Reopen in [social-core](https://github.com/python-social-auth/social-core) if this still relevant.. Will take a look asap.\n. Thanks @yprez, merged.\n\n@gustavi it's not just \"code review\", and it also takes time.\n. Thanks!\n. Thanks!\n. Thanks!\n. Fix already merged.. Fix already merged.. Sorry about the delay, I'm very busy but slowly catching up with all the PRs proposed.\n\nThanks!\n. Thanks!\n. Thanks!\n. Support added https://github.com/python-social-auth/social-core/commit/4e832808f9db9fa94d228a159f8af960bd7a10ae. Merged, thanks!\n. Thanks!\n. I've ported this PR into [social-app-django](https://github.com/python-social-auth/social-app-django/commit/e9820bdb610b57f5ec397db0faa1987c2d851759).\r\n\r\nThanks!. Thanks!\n. Fix already merged, thanks!. Thanks!\n. An earlier change included the `include_email` flag in the request, I've manually merged this PR to resolve the conflicts, but did mostly to preserve part of the docs and the new test case.\n\nThanks!\n. I've created this issue https://github.com/python-social-auth/social-core/issues/7 to track the work needed to support this scenario.. With the usage of `resolve_url` this should be fixed (https://github.com/python-social-auth/social-app-django/blob/master/social_django/strategy.py#L49).. Thanks!\n. There are a few options to override the default behavior:\r\n\r\n1. Add a custom pipeline after `social_details` that will alter the value in the `details` parameter\r\n2. Extend the Yahoo backend and override the `get_user_details()` method, then replace the line in `AUTHENTICATION_BACKENDS` to point to your version of the backend. . Thanks!\n. PSA setting should be named `SOCIAL_AUTH_PIPELINE`, the lib will attempt the following names in this order when trying to fetch the setting:\r\n\r\n1. SOCIAL_AUTH_<BACKEND NAME>_PIPELINE\r\n2. SOCIAL_AUTH_PIPELINE\r\n3. PIPELINE\r\n\r\nFirst one to match is returned.. The settings name in your settings should be `SOCIAL_AUTH_STEAM_API_KEY`, check the docs [here](http://psa.matiasaguirre.net/docs/backends/steam.html).\n. Implement a backend for your custom provider, point it to the internal URLs for it and add the backend to `AUTHENTICATION_BACKENDS` setting.. I've ported this PR into [social-app-django](https://github.com/python-social-auth/social-app-django/commit/7c88d23b43f1fb41215ad1af8efe0405d02f894a).\r\n\r\nThanks!. `UserSocialAuth` instances have a `expiration_datetime()` method that will return a `timedelta()` with how many seconds will remain the validity of the access token, this depends on the value of `expires` in `extra_data`, which is not stored by default for every backend, just a few define the needed value in the `EXTRA_DATA` dict. Also, there are some cases where the provider will return a seconds-to-live instead of a timestamp, and this case is not very well supported yet since there's no created-at time to track it against of, but that can be easily workarounded with a custom pipeline that stores such time in the `extra_data` attribute.. Thansk!\n. Dependency updated and enabled Python 3 integration in [social-core](https://github.com/python-social-auth/social-core/commit/4c9623dbf13bafeca506f4434ad8ec5f8347bd6c).. Thanks!\n. Manually merged to apply PEP8.\n\nThanks!\n. Google OAuth2 backend is accessible at `/login/google-oauth2`.. Closing since this pulls in too many dependencies (probably from your own project requirements).\r\n\r\nThanks!. Thanks!\n. I've merged this manually and moved the querystring parameter in the URL to the `params` option in `get_json`.\n\nThanks!\n. Thanks!\n. Example apps were revamped as part of the split [social-examples](https://github.com/python-social-auth/social-examples/blob/master).. PR merged.. This is already fixed in the new app [social-app-django](https://github.com/python-social-auth/social-app-django/blob/master/social_django/fields.py).\r\n\r\nThanks!. Thanks!\n. Fixed by https://github.com/python-social-auth/social-core/commit/dd9897c62cf36aab74eb97a1730d28cadee314a9. Thanks!\n. The strategies are the responsible for defining the needed methods to access the current framework session capabilities (https://github.com/python-social-auth/social-core/blob/b78159cbd45ff1c281e92d7756ab03c22f7ded8f/social_core/strategy.py#L182-L192), if that's what you are looking for, then you need to define you custom strategy (you can inherit from the already implemented one for the framework you use), and define those three methods with your desired mechanism. Then set the setting `SOCIAL_AUTH_STRATEGY` to be an import path to your custom class.. Fixed by https://github.com/python-social-auth/social-core/commit/b78159cbd45ff1c281e92d7756ab03c22f7ded8f.. Docs added https://github.com/python-social-auth/social-docs/commit/c733a4f12c7e691a520b49643703725883a09080. Closing since the psa-way to do this, is to properly differentiate the backends by provider, if the code is the same, then that can be implemented in a base class, but the backends are required since their name is used to retrieve the corresponding settings.\r\n\r\nThanks!. Fixed at https://github.com/python-social-auth/social-app-django/commit/d79d8bde9f4b49a1406683f0731bf1719987695d.. This got addressed in the last changes to the JSONField in `social-app-django`.. Actually the value should be `POCKET_KEY` as it's documented [here](http://psa.matiasaguirre.net/docs/backends/pocket.html), but the code wasn't reflecting that value properly.\n. I can't reproduce this, `appsecret_proof` seems to be generated accordingly the rules in [facebook docs](https://developers.facebook.com/docs/graph-api/securing-requests), maybe this got fixed in the recent update to the backend.\r\n\r\nI'm closing it, if still relevant, please open a ticket in [social-core](https://github.com/python-social-auth/social-core) component.\r\n\r\nThanks. I've created https://github.com/python-social-auth/social-app-django/issues/6 to track the needed work.. Good idea, thanks!\n. Looks good, the change can be extended to other classes if needed, but right now this is enough.\n\nThanks!\n. Thanks!\n. Can't do at the moment due to a bug on their app, will update that once they fix https://github.com/pydanny/djangopackages/issues/392. `python-social-auth` will try several setting names in the following order:\n- `SOCIAL_AUTH_<BACKEND_NAME>_PIPELINE`\n- `SOCIAL_AUTH_PIPELINE`\n- `PIPELINE`\n\nThe utility `setting_name` in `utils.py` adds the setting prefix `SOCIAL_AUTH_` to the names.\n. Thanks!\n. I'll try to get the new release out today, probably try to merge a few simple PRs before cutting it.\n. `v0.2.16` released to pypi.\n. I've opened a new ticket in https://github.com/python-social-auth/social-core/issues/6 to track this request.. Thanks!\n. Thanks!\n. I've manually merged the changes since they had conflicts.\n\nThanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. There's no `loading` reference in the application, that has to be something else in the project. `django_app` is not the right app to include, it should be `social.apps.django_app.default`.. I'll close this since the split to https://github.com/python-social-auth a solution that's framework independent seems like a more suitable solution.\r\n\r\nThanks!. Thanks!\n. I've ported this PR into [social-app-django](https://github.com/python-social-auth/social-app-django/commit/da662ca57c22e0b24a6e3c2374c74dafdfab18e4).\r\n\r\nThanks!. Fixed at [social-exampes](https://github.com/python-social-auth/social-examples/commit/e95eaa1cae1c179d1351f97aa2c9ccff5bba0ebe).. Thanks!\n. Thanks!\n. @clintonb, `v0.2.19` released\n. I've created https://github.com/python-social-auth/social-app-django/issues/5 to properly track this work.. Worth pointing that `django-jsonfield` is looking for a new maintainer for a while https://github.com/bradjasper/django-jsonfield/issues/146.\n. I'm closing this since pulling a third-party that didn't got a maintainer for a while will make things complicated.\r\n\r\nThanks!. Merged, thanks!\n. @clintonb thanks for this PR, I've merged it but ran PEP8 on it first.\n. If this is still relevant, please reopen on the corresponding component at [python-social-auth](https://github.com/python-social-auth).. Thanks!\n. I've improved the regular expressions used in [social-core](https://github.com/python-social-auth/social-core/commit/315aef3c42caa1d4be508411c48ec4e6cf054d90), also added an option to override the default behavior by defining a setting pointing to a function that will be invoked to do the cleanup.. This seems to be a problem with Steam since the common name for their certificate for `steamcommunity.com` points to `store.steampowered.com`.. Thanks!\n. That's correct, PSA just focus on authentication and basic user details retrieval, if the picture is already part of the VK data exchange, then it an be fetched by adding a custom pipeline to process it, if not, then a new request must be done to their API by using the access token stored in the DB.. ```python\r\nfrom social_django.models import AbstractUserSocialAuth, DjangoStorage\r\n\r\nclass CustomUserSocialAuth(AbstractUserSocialAUth):\r\n    custom_field = models.CharField(...)\r\n\r\nclass CustomDjangoStorage(DjangoStorage):\r\n    user = CustomUserSocialAuth\r\n```\r\n\r\nThen define the setting `SOCIAL_AUTH_STORAGE` with the import path to the `CustomDjangoStorage` class.. Thanks!\n. I've created https://github.com/python-social-auth/social-app-django/issues/7 to track the needed work to fix this (second issue, `cls.DoesNotExists` is already fixed).. The override should also override the user field and the corresponding related name to avoid the clash, I've removed the usage of `.social_auth` related field from the examples and the lib since it should't depend on such property due to overridable nature of it, `Storage.user.get_social_auth_for_user(...)` can be used for such means too, where `Storage` is the custom storage solution that overrides the built-in one.. I've added support for it in [social-core](https://github.com/python-social-auth/social-core/commit/35c267fbf84757bc4ec64b278a0edac040bb3309), and documented in [social-docs](https://github.com/python-social-auth/social-docs/commit/7d06053182e5ae4ae4f68e390c9af47889c138bb).. The answers given are correct.. Thanks!\n. I can't reproduce this, the backend is working as expected once the settings are properly set, ensure to have `SOCIAL_AUTH_OPENSTREETMAP_KEY` and `SOCIAL_AUTH_OPENSTREETMAP_SECRET` defined.. Hi @alexpantyukhin , I need to dedicate some time to review this change, thanks!\n. Finally merged it. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Closing as duplicate of #936.\n. Your settings are for `linkedin` backend, but your code is expecting `linkedin-oauth2`, your settings should be named like `SOCIAL_AUTH_LINKEDIN_OAUTH2_*`.\r\n\r\nPlease format properly the snippets when submitting a ticket.. Thanks!\n. Like this https://github.com/python-social-auth/social-examples/blob/master/example-common/templates/home.html#L39.. Assuming LinkedIn OAuth2 and Django, the access token is stored in the `UserSocialAuth` instance corresponding to `linkedin-oauth2`, to get it you can do:\r\n\r\n```python\r\naccess_token = user.social_auth.filter(provider='linkedin-oauth2')[0].access_token\r\n```\r\n\r\nWith that token you can call any of the LinkedIn APIs that the scope allows you to do.. Thanks!\n. Thanks!\n. I've updated the Slack backend in the [social-core](https://github.com/python-social-auth/social-core/commit/5ab8ec51245eae134a07749169ad5b246dba08d0) module.. Thanks!\n. This is hard to debug with little details, error tracebacks are very useful to help with this. Steam seems to work fine, I guess the problem was related with the key/secret settings.\r\n\r\nI'm closing it, please reopen in the [social-core](https://github.com/python-social-auth/social-core) component if this is still relevant.. PR already merged.. Thanks!\n. `login_redirect` can't ignore the `request` is a required parameter, if doesn't fit your current setup, that means that you need a custom function for that particular environment.. Fixed by https://github.com/python-social-auth/social-app-django/issues/2. @dvdhpkns, did you try the steps on https://github.com/omab/python-social-auth/blob/master/MIGRATING_TO_SOCIAL.md#migrations ?. Do anybody have detailed steps to reproduce the situation? So far I wasn't able to do it on my end.. That seems to be the right way, thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. As per the downtime, handling that is out of the scope of a simple lib, in fact the possible solutions mention in the stackoverflow question are mostly architectural. Still, thanks for the notice.\n\nAbout the nounces, I agree that they shouldn't reside in the DB and I've been planning on removing that table for a while, probably just use the framework of choise session mechanism.\n. Thanks!\n. @rlucioni, `v0.2.20` released to pypi.\n. Should be fixed by now.. Thanks!\n. Thanks!\n. A fix for this was already merged into [social-app-django](https://github.com/python-social-auth/social-app-django/blob/master/social_django/admin.py#L28).. Technically that's doable by overriding the strategy `get_setting` method.. The Django `request` can be accessed at `strategy.request`.. I've created https://github.com/python-social-auth/social-app-django/issues/6 to track the needed work for this.. Closing since #968 got merged.\n\nThanks!\n. Try with `strategy.session_get('password')` in your pipeline.. Thanks!\n. You need to override the backend in use, let's assume `Facebook OAuth2`, the following override should be what you are looking for:\r\n\r\n```python\r\n\r\nfrom social_core.backends.facebook import FacebookOAuth2\r\n\r\nclass FacebookOAuth2Token(FacebookOAuth2):\r\n  name = 'facebook-token'\r\n  RESPONSE_TYPE = 'token'\r\n```\r\n\r\nAdd that backend to the `AUTHENTICATION_BACKENDS` setting and use the url `/login/facebook-token`.. Can't help with this little details, `app_session` seems to be defined in Pyramid or Tornado frameworks.\r\n\r\nI'm closing it, please reopen in the corresponding component in the [splitted social auth](https://github.com/python-social-auth) if still relevant.. Thanks!\n. [Docs updated](https://github.com/python-social-auth/social-docs/blob/master/docs/developer_intro.rst#L131). [Done](https://github.com/python-social-auth/social-docs/commit/29985ce439d35cbd71457b0799fef41bae68ff8a).\r\n\r\nThanks. AFAIK there's no way yet.\r\n\r\nClosing, reopen in [social-core](https://github.com/python-social-auth/social-core) if still relevant.. Thanks!\n. @rlucioni , `v0.2.21` released\n. Thanks!\n. Thanks!\n. @clintonb, `v0.2.21` released\n. Django 1.5.5 is too old, this lib won't be supporting anything older than the last Django LTS (currently 1.8), but if you need the request, you can access it by doing `strategy.request`.. The parameters change is not strictly needed since the `backend` can be retrieved from the `kwargs`, but it's harmless and I like the exception change too.\n\nThanks!\n. The fix for this issue got merged into the [social-app-django](https://github.com/python-social-auth/social-app-django) component.. Your guess is correct, you just need to present the form to the user, no need to go to `/login/email` first, that form needs to `POST` to `/complete/email` and a custom pipeline function will be responsible of taking the form data and storing it were needed.. This falls out of the this library responsibilities.. Yeah, you need your own pipeline method that does such flag setting and avoids the pausing of the auth pipeline.. Depends on your needs, but if you need email-validation you need to implement such feature at some point. PSA doesn't do much on this matter, it just sends an email with a link to complete the authentication in a way that we can trust that the user validated the address.. I've updated the endpoint in [social-core](https://github.com/python-social-auth/social-core/commit/4912fe1523e52a88dddc8fa1004ad8ccee62737b).. You can override the [complete](https://github.com/python-social-auth/social-app-django/blob/master/social_django/views.py#L25) view and with that determine the login behavior by setting your custom login function.. Closing, please reopen in [social-app-django](https://github.com/python-social-auth/social-app-django) if still relevant.. @tsouvarev, the PR looks good, but I'm in the middle of splitting the application in smaller pieces (core, django, flask, etc), I'll port any PR to the corresponding place once I've finish the split/migration\n. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/78da4eb201dd22fd2d8a4e38a1d17a73beabad24).\r\n\r\nThanks!. Can't debug without a proper traceback and the data involved. Closing, please reopen in [social-app-django](https://github.com/python-social-auth/social-app-django) if still relevant.. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/7183357baec18ae8a7cd34b234b7a9d940ccc397).\r\n\r\nThanks!. I've ported this PR into [social-app-django](https://github.com/python-social-auth/social-app-django/commit/6384c13fc1d4431db7f218fa78a3aaf8e034b566).\r\n\r\nThanks!. I'm closing this since the newer implementation at https://github.com/python-social-auth/social-app-django/blob/master/social_django/models.py#L30 already fixed these references.\r\n\r\nThanks!. Your problem looks more like that the `create_user(*args, **kwargs)` call is passing all the parameters you sent to it, that will cause you trouble with Django ORM, that's why the default pipeline limits the data passed to just the needed fields. You shouldn't be passing attributes that aren't part of the model to that method.. Under the `feature` label is fine.. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/f461abe3612dade058840e0595dde1d0aa0d90bd) and [social-docs](https://github.com/python-social-auth/social-docs/commit/415dc3d78af88ddc06b6a5cf2570b427a83cb8cc).\r\n\r\nThanks!. Fix for this got merged in the new split components [python-social-auth](https://github.com/python-social-auth).\r\n. Fix for this got merged in the new split components [python-social-auth](https://github.com/python-social-auth).\r\n. I've ported this PR into [social-app-django](https://github.com/python-social-auth/social-app-django/commit/fcd91c68f363ccbb9facd050d2a38e299acaabdd).\r\n\r\nThanks!. This got merged.. I've added a fix for this on [social-core](https://github.com/python-social-auth/social-core/commit/f1a66542b4972486ee8c0130efb8365534d9a7af). Only `None` values will be ignored.. I've ported this PR into [social-docs](https://github.com/python-social-auth/social-docs/commit/b9fa0e52f2dfdf14b4fe77a538c0be8ed3e8dec1) and [social-core](https://github.com/python-social-auth/social-core/commit/3761eae3e8dad6a61afcce3fd8fbca6ebaf792b8).\r\n\r\nThanks!. @keattang, sorry for the delays but I'm in the middle of transitioning `python-social-auth` to a more modular approach (almost done http://github.com/python-social-auth), next pending tasks involve migrating this repo to that organization, port PRs and Issues.\n. I've ported this PR into [social-docs](https://github.com/python-social-auth/social-docs/commit/14a2467fe93589954114709aacecfc3c4eb8003d) and [social-core](https://github.com/python-social-auth/social-core/commit/0930a7d7d314c8256c446777222e3a6fda714203).\r\n\r\nThanks!. The pipeline is backend agnostic, doesn't differentiate between OAuth2, OAuth1, OpenId or legacy, the same rules are applied to all.. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/4954b112d3e11e808c4a9cad80af47083f5f96ad).\r\n\r\nThanks!. I've created https://github.com/python-social-auth/social-app-django/issues/6 to track the needed work.. This got fixed in the new [examples component](https://github.com/python-social-auth/social-examples/blob/master/example-flask-peewee).. I'm closing this since the current README doesn't have any badge at all.\r\n\r\nThanks!. I've ported this change into [social-app-django-mongoengine](https://github.com/python-social-auth/social-app-django-mongoengine/commit/5afa9295c89024cc125b0520f7125745d76e10d7).\r\n\r\nThanks!. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/239a7bf01730ee961ed6dd4034f69813291f5245).\r\n\r\nThanks!. TODO: port the merged #1031 \n. Thank you all, the migration is going well, migrating PRs is going to be the more tedious part, but luckily many are straightforward and don't spread across components.\n. Small update, as you might noted, things keeps moving, I've updated this lib to depend on the new split packages, tests are all green. Now I'll start on migrating the different PRs/Issues to the new organization.. All relevant PRs got ported to their corresponding components.. Migration complete! :tada: . The new app [social-app-django](https://github.com/python-social-auth/social-app-django/blob/master/social_django) and the [new example](https://github.com/python-social-auth/social-examples/blob/master/example-django) should be up to date already.\r\n\r\nThanks!. @macolo, the reason is that I'm in the middle of migrating the project to http://github.com/python-social-auth, I need to port the PRs there first.\n. @jschneier, sure, we can do it\n. @tdruez, I'm porting the app to https://github.com/python-social-auth, I suggest using the git reference in the requirements.txt to get this fix since I don't plan any release on `python-social-auth` until I fully port it to depend on the new packages.\n. The app works fine with Django 1.10, the new split of the app ensured that the warnings were placated.. The fix for this problems got ported to the [social-core](https://github.com/python-social-auth/social-core) component.. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/155f77dc99d48cafff86c31a46de77bd9c55c4d1).\r\n\r\nThanks!. I've ported this PR into [social-app-django](https://github.com/python-social-auth/social-app-django/commit/eda0642b22a04d5989254fa4cb8dde1bd2f88a4a).\r\n\r\nThanks!. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/541ddbb6ec695cb6d78de452a6d56886546d28ae) and [social-docs](https://github.com/python-social-auth/social-docs/commit/48a4640f7906f5ce0cd17bd479246b5889618b53).\r\n\r\nThanks!. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/2b8e06a385b3c4ddbabe3a4bdedccc798439f081) and [social-docs](https://github.com/python-social-auth/social-docs/commit/1c24b7e6cab018d7a73b0691c41912ac2a9a857a).\r\n\r\nThanks!. I've merged this work into https://github.com/python-social-auth/social-docs.\r\n\r\nThanks!. I've ported this PR into [social-app-flask-sqlalchemy](https://github.com/python-social-auth/social-app-flask-sqlalchemy/commit/160bf47f74a6e9af8196f9fcc0af620f1816e4d7), [social-app-pyramid](https://github.com/python-social-auth/social-app-pyramid/commit/1869d6febbe4d22dec64e73a10e18c568632f0ff), [social-app-tornado](https://github.com/python-social-auth/social-app-tornado/commit/50bbc3750bce61bcc9ce8e0d7e860e3c806d4d56) and [social-app-webpy](https://github.com/python-social-auth/social-app-webpy/commit/bc63b1478e77a8d72914010a5e1e55bc8e99a226).\r\n\r\nThanks!. By itself, the app won't support that schema, but you can override it simply by defining your own Facebook backend that overrides the `get_key_and_secret()` method:\n\n``` python\nfrom social.backends.facebook import FacebookOAuth2\n\nclass CustomFacebook(FacebookOAuth2):\n    def get_key_and_secret(self):\n        key = get_facebook_app_key_based_on_some_rule()\n        secret = get_facebook_app_secret_based_on_some_rule()\n        return key, secret\n```\n\nThen use that backend by replacing `social.backends.facebook.FacebookOAuth2` in the `AUTHENTICATION_BACKENDS` setting with the import path to your `CustomFacebook` one.\n. Depends on your application, you can do it by:\n1. Overriding the python-social-auth views in order to specify the needed option\n2. Adding a parameter to the links querystring (which can then be retrieved in the backends by doing `self.strategy.request_data()`)\n3. Adding a parameter to the session (which can be accessed in the backends with `this.strategy.session`\n. I prefer not to maintain tests on a simple example application, if the tests are actually needed they should be integrated with the django app.\r\n\r\nThanks!. That doesn't seem correct, `tokeninfo` just returns information about the token (app, granted scopes, user id, lifetime), but no user details like `people/me`.. Since the port to [python-social-auth](https://github.com/python-social-auth), the section in the readme got removed, the backends are listed just in the documentation files.. This got ported to [python-social-auth](https://github.com/python-social-auth). Thanks!. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/027fe5c7bfc3eb346bf17fe8c5109bb9762471f9) and [social-docs](https://github.com/python-social-auth/social-docs/commit/7bfc870a41fddcaafafb50a1fe8164f458d9a17a).\r\n\r\nThanks!. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/dd4740775578526f3c6eaa946549f4c23076dd10).\r\n\r\nThanks!. I'm closing this since the new examples https://github.com/python-social-auth/social-examples/tree/master/example-flask-peewee corrected this issue.\r\n\r\nThanks!. I've ported this into [social-docs](https://github.com/python-social-auth/social-docs/commit/1c24b7e6cab018d7a73b0691c41912ac2a9a857a).\r\n\r\nThanks!. This requires more details in order to debug it, a traceback at least. If this is still relevant, please reopen on the corresponding component at [python-social-auth](https://github.com/python-social-auth).. This app is intended to be used with a web framework, the recent split into [python-social-auth](https://github.com/python-social-auth) might help to reach this goal, but as is, there's no support for it yet.. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/a842f5df9d9e8d42476f34db97d107b09316fa19) and [social-docs](https://github.com/python-social-auth/social-docs/commit/603c95d846a0adf85ff2918c5b463a29a8e91920).\r\n\r\nThanks!. Those are PostgresSQL fields only.. This got fixed already.. I don't see the need for this change, people shouldn't just copy-and-paste code.\r\n\r\nThanks!. I've ported this into [social-docs](https://github.com/python-social-auth/social-docs/commit/c5bcdc5fd3d2b8b322856fd7ac0d44a3f4c7e136).\r\n\r\nThanks!. I've ported this PR into [social-core](https://github.com/python-social-auth/social-core/commit/0de0e7d1fbcd5ffbe06ff1e109919bb6e80df21e)\r\n\r\nThanks!. The only way I see this possible right is by doing:\r\n\r\n1. Define a custom `complete` view that mimics the code from the original (it's hard to reuse it at the moment), and returns the redirect with the needed token for the user\r\n2. Define a custom view that your app calls after a success login to retrieve the needed token.\r\n\r\nI'm closing this, please reopen in [social-app-django](https://github.com/python-social-auth/social-app-django) if still relevant.. I'm closing this since the new example at https://github.com/python-social-auth/social-examples/tree/master/example-django doesn't need this fix.\r\n\r\nThanks!. Hi @eronaeon, Facebook and Google can be consideres as having email verified, I assume it's a `@gmail.com` address or google-app address (since you are using Google), and the same address is in Facebook, for google is already \"validated\", since it's the source of the address, and Facebook validates the email addresses as part of the signup process.. @ranvijay-zymr this is not enough information to debug the problem, requests and responses bodies would be very helpful.. 1. What version of python-social-auth are you using? (the references in your traceback look outdated)\r\n2. What's the value for `LOGIN_ERROR_URL` in your settings?. You need to define `LOGIN_ERROR_URL`, that's the reason for the traceback, that doesn't mean that it will solve the error with your backend, it will just fix the traceback posted above.. Yeah, that wil do the trick, you can also temporarily set `LOGIN_ERROR_URL = '/'` to pass through the exception and continue debugging the OpenId problem. . @browniebroke, is this ready to get merged or do you want to hold the merge for a while?. Gotcha, I'll investigate that other issue, meanwhile I will merge this and then update the file with a note about that other problem.\r\n\r\nThanks!. Thanks!. You need to install `social-auth-app-django` too. Check the details in the [migration file](https://github.com/omab/python-social-auth/blob/master/MIGRATING_TO_SOCIAL.md#django).. Sorry?. @coleclayman, no, because somebody using `Flask` will end with a lot of dependencies related to `Django` that's undesired, so I've opted to document the needed dependency instead.. @sis, I can explore that option.. @sis, I've added the `extras` in [setup.py](https://github.com/omab/python-social-auth/blob/master/setup.py#L85-L95) also documented them in the [migration doc](https://github.com/omab/python-social-auth/blob/master/MIGRATING_TO_SOCIAL.md).. `v0.3.1` published into pypi.. I'm not accepting PRs on this project anymore, please reopen one in one of the components at [python-social-auth](https://github.com/python-social-auth). Looks like this one should be in [social-docs](https://github.com/python-social-auth/social-docs).\r\n\r\nThanks!. Somebody on #550 experienced the same troubles.. @fendyh what's your django version? Is django installed in your env (virtual or not)? What happens if you run `from django.template import engines` in a python shell within it?. @fendyh, PSA is dropping support for `Django <= 1.7`, I do recommend updating at least to 1.8, or stick with PSA version `0.2.21`. @fendyh I do not recomment going back to django-social-out, that codebase was abandoned years ago and it's very outdated at the memoment. If you stick to `python-social-auth==0.2.21`, you will have Django 1.7 support.. Try with `python manage.py migrate --fake`.. @tytarenko you don't, you can stick with `0.2.21` or migrate to the new version that depends on the new packages, the library is now split in smaller modules, and anything `>=0.3.0` will depend on the new packages.. Check the [migration doc](https://github.com/omab/python-social-auth/blob/master/MIGRATING_TO_SOCIAL.md#flask).. I've published `0.3.3` with the proper fix.. Roll back to python-social-auth `0.2.21`, anything `>= 0.3.0` is not compatible with Django 1.7.. Thanks!. Thanks!. Thanks!. Ensure that the `user` is indeed a user instance and not a queryset.. How do you check if somebody has access to that page? Also, why is the `next` value different for form-login and social-login?. Please move this ticket to https://github.com/python-social-auth/social-app-django. Fixed by https://github.com/python-social-auth/social-core/commit/feeb27c5d2bdf94428d09f289342cd64a679df62.. `python-social-auth` doesn't support Django 2.0 yet. The proper place to open a ticket related to Django would be in the https://github.com/python-social-auth/social-app-django project.. @Pomax, @cadecairos, `python-social-auth` uses Django [build_absolute_uri](https://github.com/django/django/blob/f87256b15e375c6c57fe425c33ae23e116da3e84/django/http/request.py#L158) helper that's in the HTTP Request class, looking at the code, you can see that it uses [get_host()](https://github.com/django/django/blob/f87256b15e375c6c57fe425c33ae23e116da3e84/django/http/request.py#L174) method defined [a few lines above](https://github.com/django/django/blob/f87256b15e375c6c57fe425c33ae23e116da3e84/django/http/request.py#L87), this one uses [_get_raw_host()](https://github.com/django/django/blob/f87256b15e375c6c57fe425c33ae23e116da3e84/django/http/request.py#L68), which will attempt to determine the host based on settings and/or request headers.\r\n\r\nThe common use case is to make the front server, load-balancer, proxy, etc, set the `X-Forwarded-Host` header with the domain, but to make it work with Django, ensure that the setting `USE_X_FORWARDED_HOST` is set to `True`.\r\n\r\nMore details on thins can be found in [Django docs](https://docs.djangoproject.com/en/1.11/ref/settings/#std:setting-USE_X_FORWARDED_HOST).. ",
    "RonnyPfannschmidt": "but that is an project-specific object - that will get stored inside the project if used proper, why have such an hack in addition\n. if you have a function that takes the app anyway, it can just do a setdefault on the app with the real objects, no need for the funky default schemes\n. but that is an project-specific object - that will get stored inside the project if used proper, why have such an hack in addition\n. if you have a function that takes the app anyway, it can just do a setdefault on the app with the real objects, no need for the funky default schemes\n. ",
    "maxcountryman": "@omab gotcha. I can imagine that not having to hack around lack of OAuth 2.0 support would also be a nice transition from oauthlib to rauth? I do think rauth is particularly well-suited for the client role, whereas oauthlib seems finicky and its client implementations do leave a lot to be desired. Anyway I'll leave this open for your consideration, regardless we do plan to implement Python 3 support in the not-so-distant future.\n. @omab gotcha. I can imagine that not having to hack around lack of OAuth 2.0 support would also be a nice transition from oauthlib to rauth? I do think rauth is particularly well-suited for the client role, whereas oauthlib seems finicky and its client implementations do leave a lot to be desired. Anyway I'll leave this open for your consideration, regardless we do plan to implement Python 3 support in the not-so-distant future.\n. ",
    "skakri": "Yes I have. I'll clone python-social-auth repo and try to check if the problem persists (maybe there's a problem with my environment; I copied files by hand) and I'll get back to you.\n. Ok, it's kinda weird, if you clone from git repo - it works, but if you copy files by hand - there's no relation.\n\nSteps made (I'm on Arch, python by default is python 3, so I have to call python2.7)\n\n```\ngit clone https://github.com/omab/python-social-auth.git python-social-auth-test\ncd python-social-auth-test/\nsudo python2.7 setup.py install\ncd examples/flask_example\npip2 install -r requirements.txt # failed, couldn't install flask to system wide flask-packages\nsudo pip2 install -r requirements.txt\nsudo pip2 install psycopg2\npython2.7 ./manage.py syncdb\npython2.7 ./manage.py runserver\n```\n\n(afterwards tried with postgre)\n^ runs ok!\n\n```\nmkdir flask_example\ncd flask_example\nvirtualenv-2.7 --python=/usr/bin/python2.7 --no-site-packages virtualenv\n. virtualenv/bin/activate\npip install python-social-auth\n# copying files from https://github.com/omab/python-social-auth/tree/master/examples/flask_example ...\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/__init__.py\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/manage.py\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/requirements.txt\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/settings.py\nmkdir models && cd models\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/models/__init__.py\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/models/user.py\ncd ..\nmkdir routes && cd routes\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/routes/__init__.py\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/routes/main.py\ncd ..\nmkdir templates && cd templates\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/templates/base.html\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/templates/done.html\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/templates/home.html\ncd ..\n\npip install -r requirements.txt\npython ./manage.py migrate run\npython ./manage.py runserver\n```\n\nOn http://localhost:5000/complete/..\n\n```\nOperationalError: (OperationalError) no such table: social_auth_usersocialauth u'SELECT social_auth_usersocialauth.id AS social_auth_usersocialauth_id, social_auth_usersocialauth.provider AS social_auth_usersocialauth_provider, social_auth_usersocialauth.uid AS social_auth_usersocialauth_uid, social_auth_usersocialauth.extra_data AS social_auth_usersocialauth_extra_data, social_auth_usersocialauth.user_id AS social_auth_usersocialauth_user_id \\nFROM social_auth_usersocialauth \\nWHERE social_auth_usersocialauth.uid = ? AND social_auth_usersocialauth.provider = ?\\n LIMIT ? OFFSET ?' ('14276842', 'twitter', 1, 0)\n```\n\nMaybe Python-Social-Auth package (via pip) differs from git and I've forgotten some step?\n. Yeah but there's no syncdb command (in package which is provided via pip):\n\n```\npython ./manage.py syncdb\nCommand syncdb not found\n  migrate    \n  runserver  Runs the Flask development server i.e. app.run()\n  shell      Runs a Python shell inside Flask application context.\n```\n\nSo it's better to install via git for now (I'm not developing anything critical, I just want to keep up with the latest version, which works)? :)\n. Great, it works now. Thank you!\n. Yes I have. I'll clone python-social-auth repo and try to check if the problem persists (maybe there's a problem with my environment; I copied files by hand) and I'll get back to you.\n. Ok, it's kinda weird, if you clone from git repo - it works, but if you copy files by hand - there's no relation.\n\nSteps made (I'm on Arch, python by default is python 3, so I have to call python2.7)\n\n```\ngit clone https://github.com/omab/python-social-auth.git python-social-auth-test\ncd python-social-auth-test/\nsudo python2.7 setup.py install\ncd examples/flask_example\npip2 install -r requirements.txt # failed, couldn't install flask to system wide flask-packages\nsudo pip2 install -r requirements.txt\nsudo pip2 install psycopg2\npython2.7 ./manage.py syncdb\npython2.7 ./manage.py runserver\n```\n\n(afterwards tried with postgre)\n^ runs ok!\n\n```\nmkdir flask_example\ncd flask_example\nvirtualenv-2.7 --python=/usr/bin/python2.7 --no-site-packages virtualenv\n. virtualenv/bin/activate\npip install python-social-auth\n# copying files from https://github.com/omab/python-social-auth/tree/master/examples/flask_example ...\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/__init__.py\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/manage.py\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/requirements.txt\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/settings.py\nmkdir models && cd models\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/models/__init__.py\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/models/user.py\ncd ..\nmkdir routes && cd routes\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/routes/__init__.py\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/routes/main.py\ncd ..\nmkdir templates && cd templates\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/templates/base.html\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/templates/done.html\nwget https://raw.github.com/omab/python-social-auth/master/examples/flask_example/templates/home.html\ncd ..\n\npip install -r requirements.txt\npython ./manage.py migrate run\npython ./manage.py runserver\n```\n\nOn http://localhost:5000/complete/..\n\n```\nOperationalError: (OperationalError) no such table: social_auth_usersocialauth u'SELECT social_auth_usersocialauth.id AS social_auth_usersocialauth_id, social_auth_usersocialauth.provider AS social_auth_usersocialauth_provider, social_auth_usersocialauth.uid AS social_auth_usersocialauth_uid, social_auth_usersocialauth.extra_data AS social_auth_usersocialauth_extra_data, social_auth_usersocialauth.user_id AS social_auth_usersocialauth_user_id \\nFROM social_auth_usersocialauth \\nWHERE social_auth_usersocialauth.uid = ? AND social_auth_usersocialauth.provider = ?\\n LIMIT ? OFFSET ?' ('14276842', 'twitter', 1, 0)\n```\n\nMaybe Python-Social-Auth package (via pip) differs from git and I've forgotten some step?\n. Yeah but there's no syncdb command (in package which is provided via pip):\n\n```\npython ./manage.py syncdb\nCommand syncdb not found\n  migrate    \n  runserver  Runs the Flask development server i.e. app.run()\n  shell      Runs a Python shell inside Flask application context.\n```\n\nSo it's better to install via git for now (I'm not developing anything critical, I just want to keep up with the latest version, which works)? :)\n. Great, it works now. Thank you!\n. ",
    "gsakkis": "Ah, so the `response` parameter of `get_user_details()` is the result of `user_data()`; I thought they were called in the opposite order.\n\nPull request coming soon, thanks!\n. Ah, so the `response` parameter of `get_user_details()` is the result of `user_data()`; I thought they were called in the opposite order.\n\nPull request coming soon, thanks!\n. ",
    "rday": "I'll have to reject this request and make sure the test cases pass. I have the solution, just traveling at the moment. I'll get more details tomorrow.\n\nOn Jun 21, 2013, at 5:47 PM, Mat\u00edas Aguirre notifications@github.com wrote:\n\n> Could you detail the error? A traceback maybe?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. I'll have to reject this request and make sure the test cases pass. I have the solution, just traveling at the moment. I'll get more details tomorrow.\n\nOn Jun 21, 2013, at 5:47 PM, Mat\u00edas Aguirre notifications@github.com wrote:\n\n> Could you detail the error? A traceback maybe?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ",
    "devangmundhra": "I am still getting this error when using Django + psa and using a `@strategy` decorator for a function:\n\n`TypeError: \"get_strategy() got multiple values for keyword argument 'request'\"`\n\nThe code I am using is as follows:\n\n```\n@strategy() \ndef register_by_access_token(request, backend, *args, **kwargs):\n    access_token = kwargs.get('access_token')\n    if not access_token:\n        raise AuthMissingParameter(backend, 'access_token')\n    user = backend.do_auth(access_token)\n    if user and user.is_active:\n        login(request, user)\n    return user\n```\n\nIt looks like `load_strategy` https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/utils.py#L22 has `request` in its `kwargs` which gets passed to `get_strategy` along with the `request=None` parameter https://github.com/omab/python-social-auth/blob/master/social/strategies/utils.py#L14\n. Thanks! And can we still use the view decorators?\n\n```\n@dsa_view() \ndef register_by_access_token(request, backend, *args, **kwargs):\n```\n. I am using Django Tastypie to load the view.. following is the traceback\n\n```\nERROR:django.request:Internal Server Error: /api/v1/users/\nTraceback (most recent call last):\n  File \u201c../lib/python2.7/site-packages/django/core/handlers/base.py\", line 115, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n  File \u201c../lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 77, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \u201c../lib/python2.7/site-packages/tastypie/resources.py\", line 195, in wrapper\n    response = callback(request, *args, **kwargs)\n  File \u201c../lib/python2.7/site-packages/tastypie/resources.py\", line 426, in dispatch_list\n    return self.dispatch('list', request, **kwargs)\n  File \u201c../lib/python2.7/site-packages/tastypie/resources.py\", line 458, in dispatch\n    response = method(request, **kwargs)\n  File \u201c../lib/python2.7/site-packages/tastypie/resources.py\", line 1320, in post_list\n    updated_bundle = self.obj_create(bundle, **self.remove_api_resource_names(kwargs))\n  File \u201c../apps/accounts/api.py\", line 78, in obj_create\n    user = register_by_access_token(bundle.request, \"facebook\", [], **info)\n  File \u201c../python2.7/site-packages/social/apps/django_app/utils.py\", line 36, in wrapper\n    redirect_uri=uri, *args, **kwargs\n  File \u201c../python2.7/site-packages/social/apps/django_app/utils.py\", line 22, in load_strategy\n    return get_strategy(BACKENDS, STRATEGY, STORAGE, *args, **kwargs)\nTypeError: get_strategy() got multiple values for keyword argument 'request'\n[27/Nov/2013 05:57:20] \"POST /api/v1/users/ HTTP/1.1\" 500 115594\n```\n\nNot sure how helpful this information will me. Please let me know if there is any additional information I can provide.\nThis used to be working fine with the `@dsa_view` decorator from django_social_auth and the problem only started while migrating to python_social_auth\n. Info is just a dict with facebook access token and id-\n\n```\n(Pdb) p info\n\n{u'access_token': <some access token>', u'id': u'<some id>'}\n\n```\n. Please let me know if you need any more info.\n. It looks like either there is some issue with Python, of there is some mis-use of args/kwargs.\nI have asked a question on StackOverflow with a very simplified version of reproducing this issue-\nhttp://stackoverflow.com/questions/20600870/got-multiple-values-for-keyword-argument-when-using-args-kwargs-in-a-pytho\n. I am getting the same issue too with \n\n```\npython-social-auth==0.1.22\nDjango Version: 1.6.2\nPython Version: 2.7.5\n```\n\nMy pipeline is\n\n```\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'social.pipeline.social_auth.associate_by_email',\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details'\n)\n```\n. Hi Matias,\n\nSomehow I don't see the error any more even before trying the fix (I\nuninstalled and reinstalled the same version of python-social-auth).\nIf I start seeing this error again, I'll try the fix you have mentioned.\n\nThanks.\n\nOn Sat, Mar 15, 2014 at 10:39 AM, Mat\u00edas Aguirre\nnotifications@github.comwrote:\n\n> I've introduced a change that might fix the issue, @mohitrankahttps://github.com/mohitrankaand\n> @devangmundhra https://github.com/devangmundhra could you give it a try?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/190#issuecomment-37732368\n> .\n. @omab: FYI, I was also using a custom User Model when I was getting this\nerror.\n@sledopit: I am sure you know this, but still just FYI, it could help in\ndebugging if you used python's debugger because I am not much of a python\ndeveloper and this was a really helpful tool when I got to know about it.\nJust 'import pdb' in social/apps/django_app/utils.py and set\n'pdb.set_trace()' before line 45. You can then print (p) and step (s)\nthrough the functions to see why social_auth is None. More info about pdb\nhere http://docs.python.org/2/library/pdb.html.\n\nOn Sun, Mar 23, 2014 at 11:32 AM, sledopit notifications@github.com wrote:\n\n> @omab https://github.com/omab it's quite a challenge for me. I will try\n> it, but I definitely need some time for investigations.\n> By the way, can this be related due to I'm using a custom User Model?\n> ( SOCIAL_AUTH_USER_MODEL and AUTH_USER_MODEL are defined in settings.py )\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/190#issuecomment-38391840\n> .\n. I have seen a similar problem occurring with another open source project\nfor Django- tastypie.\nThere too, the problem occurred intermittently and was difficult to\nreproduce once it was gone.\n\nI was able to find the cause of the problem in that instance, which was\nthat while loading the tastypie modules, it tried to import\nCustomUserModule. However, if the custom user module model has not been\ninitialized by then, Django throws an ImportError and the 'User' is set as\nNone.\nNow the next time the 'User' field is accessed, it is of NoneType leading\nto this problem.\n\nOne way to solve the problem there was to reload the\nmodules(tastypie.compat) from which the User module was accessed.\nMore description of the problem found in tastypie is available here-\nhttps://github.com/toastdriven/django-tastypie/issues/1009\n\nI am not sure if this problem is related or not, though the symptoms are\nvery similar.\nSo if the social_auth_user_models is loaded before the actual user model is\nloaded, this issue can occur.\n\nOn Tue, Apr 1, 2014 at 10:43 AM, Pavel Kuznetsov\nnotifications@github.comwrote:\n\n> I encounter the same issue (vkontakte and odnoklassniki backends for me),\n> as far as i can remember it has also appeared when i introduced a custom\n> User model. I use the default pipeline.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/190#issuecomment-39235430\n> .\n. I am still getting this error when using Django + psa and using a `@strategy` decorator for a function:\n\n`TypeError: \"get_strategy() got multiple values for keyword argument 'request'\"`\n\nThe code I am using is as follows:\n\n```\n@strategy() \ndef register_by_access_token(request, backend, *args, **kwargs):\n    access_token = kwargs.get('access_token')\n    if not access_token:\n        raise AuthMissingParameter(backend, 'access_token')\n    user = backend.do_auth(access_token)\n    if user and user.is_active:\n        login(request, user)\n    return user\n```\n\nIt looks like `load_strategy` https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/utils.py#L22 has `request` in its `kwargs` which gets passed to `get_strategy` along with the `request=None` parameter https://github.com/omab/python-social-auth/blob/master/social/strategies/utils.py#L14\n. Thanks! And can we still use the view decorators?\n\n```\n@dsa_view() \ndef register_by_access_token(request, backend, *args, **kwargs):\n```\n. I am using Django Tastypie to load the view.. following is the traceback\n\n```\nERROR:django.request:Internal Server Error: /api/v1/users/\nTraceback (most recent call last):\n  File \u201c../lib/python2.7/site-packages/django/core/handlers/base.py\", line 115, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n  File \u201c../lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 77, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \u201c../lib/python2.7/site-packages/tastypie/resources.py\", line 195, in wrapper\n    response = callback(request, *args, **kwargs)\n  File \u201c../lib/python2.7/site-packages/tastypie/resources.py\", line 426, in dispatch_list\n    return self.dispatch('list', request, **kwargs)\n  File \u201c../lib/python2.7/site-packages/tastypie/resources.py\", line 458, in dispatch\n    response = method(request, **kwargs)\n  File \u201c../lib/python2.7/site-packages/tastypie/resources.py\", line 1320, in post_list\n    updated_bundle = self.obj_create(bundle, **self.remove_api_resource_names(kwargs))\n  File \u201c../apps/accounts/api.py\", line 78, in obj_create\n    user = register_by_access_token(bundle.request, \"facebook\", [], **info)\n  File \u201c../python2.7/site-packages/social/apps/django_app/utils.py\", line 36, in wrapper\n    redirect_uri=uri, *args, **kwargs\n  File \u201c../python2.7/site-packages/social/apps/django_app/utils.py\", line 22, in load_strategy\n    return get_strategy(BACKENDS, STRATEGY, STORAGE, *args, **kwargs)\nTypeError: get_strategy() got multiple values for keyword argument 'request'\n[27/Nov/2013 05:57:20] \"POST /api/v1/users/ HTTP/1.1\" 500 115594\n```\n\nNot sure how helpful this information will me. Please let me know if there is any additional information I can provide.\nThis used to be working fine with the `@dsa_view` decorator from django_social_auth and the problem only started while migrating to python_social_auth\n. Info is just a dict with facebook access token and id-\n\n```\n(Pdb) p info\n\n{u'access_token': <some access token>', u'id': u'<some id>'}\n\n```\n. Please let me know if you need any more info.\n. It looks like either there is some issue with Python, of there is some mis-use of args/kwargs.\nI have asked a question on StackOverflow with a very simplified version of reproducing this issue-\nhttp://stackoverflow.com/questions/20600870/got-multiple-values-for-keyword-argument-when-using-args-kwargs-in-a-pytho\n. I am getting the same issue too with \n\n```\npython-social-auth==0.1.22\nDjango Version: 1.6.2\nPython Version: 2.7.5\n```\n\nMy pipeline is\n\n```\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'social.pipeline.social_auth.associate_by_email',\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details'\n)\n```\n. Hi Matias,\n\nSomehow I don't see the error any more even before trying the fix (I\nuninstalled and reinstalled the same version of python-social-auth).\nIf I start seeing this error again, I'll try the fix you have mentioned.\n\nThanks.\n\nOn Sat, Mar 15, 2014 at 10:39 AM, Mat\u00edas Aguirre\nnotifications@github.comwrote:\n\n> I've introduced a change that might fix the issue, @mohitrankahttps://github.com/mohitrankaand\n> @devangmundhra https://github.com/devangmundhra could you give it a try?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/190#issuecomment-37732368\n> .\n. @omab: FYI, I was also using a custom User Model when I was getting this\nerror.\n@sledopit: I am sure you know this, but still just FYI, it could help in\ndebugging if you used python's debugger because I am not much of a python\ndeveloper and this was a really helpful tool when I got to know about it.\nJust 'import pdb' in social/apps/django_app/utils.py and set\n'pdb.set_trace()' before line 45. You can then print (p) and step (s)\nthrough the functions to see why social_auth is None. More info about pdb\nhere http://docs.python.org/2/library/pdb.html.\n\nOn Sun, Mar 23, 2014 at 11:32 AM, sledopit notifications@github.com wrote:\n\n> @omab https://github.com/omab it's quite a challenge for me. I will try\n> it, but I definitely need some time for investigations.\n> By the way, can this be related due to I'm using a custom User Model?\n> ( SOCIAL_AUTH_USER_MODEL and AUTH_USER_MODEL are defined in settings.py )\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/190#issuecomment-38391840\n> .\n. I have seen a similar problem occurring with another open source project\nfor Django- tastypie.\nThere too, the problem occurred intermittently and was difficult to\nreproduce once it was gone.\n\nI was able to find the cause of the problem in that instance, which was\nthat while loading the tastypie modules, it tried to import\nCustomUserModule. However, if the custom user module model has not been\ninitialized by then, Django throws an ImportError and the 'User' is set as\nNone.\nNow the next time the 'User' field is accessed, it is of NoneType leading\nto this problem.\n\nOne way to solve the problem there was to reload the\nmodules(tastypie.compat) from which the User module was accessed.\nMore description of the problem found in tastypie is available here-\nhttps://github.com/toastdriven/django-tastypie/issues/1009\n\nI am not sure if this problem is related or not, though the symptoms are\nvery similar.\nSo if the social_auth_user_models is loaded before the actual user model is\nloaded, this issue can occur.\n\nOn Tue, Apr 1, 2014 at 10:43 AM, Pavel Kuznetsov\nnotifications@github.comwrote:\n\n> I encounter the same issue (vkontakte and odnoklassniki backends for me),\n> as far as i can remember it has also appeared when i introduced a custom\n> User model. I use the default pipeline.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/190#issuecomment-39235430\n> .\n. ",
    "bradbeattie": "Hey, I'm running into the same error here. When I initially authenticate using django-social-auth, I get the refresh_token, but if I remove the authentication and add it back in, there's no refresh_token to be found.\n\nDid you run into this too? If so, did you discover the cause?\n. Thanks! Setting `SOCIAL_AUTH_REVOKE_TOKENS_ON_DISCONNECT = True` in django-social-auth fixed this for me.\n. Hey, I'm running into the same error here. When I initially authenticate using django-social-auth, I get the refresh_token, but if I remove the authentication and add it back in, there's no refresh_token to be found.\n\nDid you run into this too? If so, did you discover the cause?\n. Thanks! Setting `SOCIAL_AUTH_REVOKE_TOKENS_ON_DISCONNECT = True` in django-social-auth fixed this for me.\n. ",
    "alexander-gridnev": "I was patched lib (added checking empty refresh_token in google response, and if it empty, not save it to db), it is not very good solution, but I think re-authing user every time, bad idea too..\n. I was patched lib (added checking empty refresh_token in google response, and if it empty, not save it to db), it is not very good solution, but I think re-authing user every time, bad idea too..\n. ",
    "mikepurvis": "Ah, I realized that not all of the dependencies matched the requirements.txt file exactly\u2014I had some stuff that were newer versions. Once I did that, I got a proper stack trace for the error, which prompted me to run the syncdb command to populate the sqlite DB. I think I thought that would happen on its own.\n\nSorry for the false alarm!\n. Ah, I realized that not all of the dependencies matched the requirements.txt file exactly\u2014I had some stuff that were newer versions. Once I did that, I got a proper stack trace for the error, which prompted me to run the syncdb command to populate the sqlite DB. I think I thought that would happen on its own.\n\nSorry for the false alarm!\n. ",
    "ondrowan": "Oh sorry, I forgot to mention I was using Python 3.3.2 and Django 1.5.1.\n. It seems to be working now. Thanks for the fix!\n. Coincidentally, [South 1.0 was released today](http://www.aeracode.org/2014/7/1/end-era/).\n. Oh sorry, I forgot to mention I was using Python 3.3.2 and Django 1.5.1.\n. It seems to be working now. Thanks for the fix!\n. Coincidentally, [South 1.0 was released today](http://www.aeracode.org/2014/7/1/end-era/).\n. ",
    "systemizer": "Ah! I couldn't find the default namings (which is why i used the custom one). But yeah, definitly agree there. I've pushed a fix\n. Ah! I couldn't find the default namings (which is why i used the custom one). But yeah, definitly agree there. I've pushed a fix\n. ",
    "romanalexander": "Hi, the API I was working with is [here](https://github.com/justintv/Twitch-API/blob/master/authentication.md#authorization-code-flow). That particular OAuth2 provider [correctly specifies that redirect_uri must be the full URI](http://tools.ietf.org/html/rfc6819#page-62).\n\n[OAuth2.0 specification](http://tools.ietf.org/html/rfc6749#appendix-A.6) says that redirect_uri is defined as a URI-reference. I believe the parameters of OAuth2.0 are roughly defined as [`application/x-www-form-urlencoded`](http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1)\n\nI should mention that this PR only fixes my use-case. I am uncertain if this 05dc5ae alone would bring the module in line with RFC6749.\n. When implementing twitter/facebook oauth I did notice that it didn't care what value callback url was. This clears up a lot of questions.\n\nI can't really think of anything that can remedy this situation of following specification while simultaneously breaking specification.\n\nPerhaps something contrived like this would be called for?\n\n``` python\n        if self.REDIRECT_STATE: # Encode the redirect state into the redirect_uri to prevent forgery.\n            return self.AUTHORIZATION_URL + '?' + urlencode(params)\n        else: # redirect_uri is enforced, so match the providers value exactly.\n            return self.AUTHORIZATION_URL + '?' + unquote(urlencode(params))\n```\n\nThoughts?\n. @omab I pushed the change to the pull request. The change runs fine on my local development copy.\n. Hi, the API I was working with is [here](https://github.com/justintv/Twitch-API/blob/master/authentication.md#authorization-code-flow). That particular OAuth2 provider [correctly specifies that redirect_uri must be the full URI](http://tools.ietf.org/html/rfc6819#page-62).\n\n[OAuth2.0 specification](http://tools.ietf.org/html/rfc6749#appendix-A.6) says that redirect_uri is defined as a URI-reference. I believe the parameters of OAuth2.0 are roughly defined as [`application/x-www-form-urlencoded`](http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1)\n\nI should mention that this PR only fixes my use-case. I am uncertain if this 05dc5ae alone would bring the module in line with RFC6749.\n. When implementing twitter/facebook oauth I did notice that it didn't care what value callback url was. This clears up a lot of questions.\n\nI can't really think of anything that can remedy this situation of following specification while simultaneously breaking specification.\n\nPerhaps something contrived like this would be called for?\n\n``` python\n        if self.REDIRECT_STATE: # Encode the redirect state into the redirect_uri to prevent forgery.\n            return self.AUTHORIZATION_URL + '?' + urlencode(params)\n        else: # redirect_uri is enforced, so match the providers value exactly.\n            return self.AUTHORIZATION_URL + '?' + unquote(urlencode(params))\n```\n\nThoughts?\n. @omab I pushed the change to the pull request. The change runs fine on my local development copy.\n. ",
    "ceelian": "Thank you @omab! I will check it out.\n. Thank you @omab! I will check it out.\n. ",
    "bjunix": "@omab: Thanks for the quick fix :)\n. @omab: Thanks for the quick fix :)\n. ",
    "antisvin": "Tested, works like a charm. Keep up the good work!\n. Tested, works like a charm. Keep up the good work!\n. ",
    "dblado": "same:\n\n```\n    \"emailAddress\" : null,\n    \"lastName\" : null,\n```\n. yep that did it...thanks!\n. funny enough the twitter dev discussion board had the answer for me...the callback URL in your linkedin app needs to be set -- even though it explicitly says oath1:\n\nthis is what I did:\n\n![image](https://f.cloud.github.com/assets/926459/1577249/4e470b0c-5168-11e3-9797-f71bf3e8ddde.png)\n\nhttps://dev.twitter.com/discussions/1403\n. I'm seeing the same problem -- I'm using SESSION_ENGINE = 'mongoengine.django.sessions'\n\nwhen I nuke the sessions the problem does go away but also causes all users to be logged out\n. dupe of #128?\n. Ahh, silly me -- I didn't think to see if ACCESS_TOKEN_METHOD was configurable.  Might be handy to have that configurable by backend?\n\nThat didn't fix my problem though.  The fix from the linkedin blog post was to use POST but send the OAuth params in the query string.\n\nHere is the stack trace from setting ACCESS_TOKEN_METHOD = 'GET'\n\nTraceback (most recent call last):\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/Django-1.4.10-py2.6.egg/django/core/handlers/base.py\", line 111, in get_response\n    response = callback(request, _callback_args, *_callback_kwargs)\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/Django-1.4.10-py2.6.egg/django/views/decorators/csrf.py\", line 77, in wrapped_view\n    return view_func(_args, *_kwargs)\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/python_social_auth-0.1.20-py2.6.egg/social/apps/django_app/utils.py\", line 45, in wrapper\n    return func(request, backend, _args, *_kwargs)\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/python_social_auth-0.1.20-py2.6.egg/social/apps/django_app/views.py\", line 21, in complete\n    redirect_name=REDIRECT_FIELD_NAME, _args, *_kwargs)\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/python_social_auth-0.1.20-py2.6.egg/social/actions.py\", line 44, in do_complete\n    _args, *_kwargs)\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/python_social_auth-0.1.20-py2.6.egg/social/strategies/base.py\", line 67, in complete\n    return self.backend.auth_complete(_args, *_kwargs)\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/python_social_auth-0.1.20-py2.6.egg/social/backends/oauth.py\", line 337, in auth_complete\n    method=self.ACCESS_TOKEN_METHOD\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/python_social_auth-0.1.20-py2.6.egg/social/backends/oauth.py\", line 318, in request_access_token\n    return self.get_json(_args, *_kwargs)\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/python_social_auth-0.1.20-py2.6.egg/social/backends/base.py\", line 191, in get_json\n    return self.request(url, _args, *_kwargs).json()\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/requests-2.2.1-py2.6.egg/requests/models.py\", line 741, in json\n    return json.loads(self.text, **kwargs)\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/simplejson-3.3.2-py2.6-linux-x86_64.egg/simplejson/**init**.py\", line 488, in loads\n    return _default_decoder.decode(s)\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/simplejson-3.3.2-py2.6-linux-x86_64.egg/simplejson/decoder.py\", line 370, in decode\n    obj, end = self.raw_decode(s)\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/simplejson-3.3.2-py2.6-linux-x86_64.egg/simplejson/decoder.py\", line 389, in raw_decode\n    return self.scan_once(s, idx=_w(s, idx).end())\n\nJSONDecodeError: Expecting value: line 1 column 1 (char 0)\n. doesn't seem to make sense that I can't make the problem happen from localhost, only production (Amazon EC2)\n. per the instructions here: https://developer.linkedin.com/documents/authentication\n\nI thought I could make this work using:\nAUTH_EXTRA_ARGUMENTS = {'response_type': 'code', 'client_id': SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY, 'scope': SOCIAL_AUTH_LINKEDIN_OAUTH2_SCOPE, 'redirect_uri': SOCIAL_AUTH_LOGIN_REDIRECT_URL}\nREQUEST_TOKEN_EXTRA_ARGUMENTS = {'grant_type': 'authorization_code', 'redirect_uri': SOCIAL_AUTH_LOGIN_REDIRECT_URL, 'client_id': SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY, 'client_secret': SOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET}\n\nbut I still get the same results.\n. Yep that seems to have fixed my problem -- I though I had tried a variant of that.\n\nThanks so much for the quick response!  \n\nwas this caused by a change that linkedin made -- I hadn't made any changes to auth on my end when this problem popped up\n. Just tracked this error down to this issue.\r\n\r\nAny workaround/update?. @alexole \r\nI think maybe this wasn't described well in the migration docs.\r\n\r\nI updated to:\r\n```\r\nfrom social_core.pipeline.partial import partial\r\n```\r\nAnd in my settings, updated:\r\n```\r\nSOCIAL_AUTH_PIPELINE = (\r\n    'social_core.pipeline.social_auth.social_details',\r\n    'social_core.pipeline.social_auth.social_uid',\r\n    'social_core.pipeline.social_auth.auth_allowed',\r\n    '...'\r\n)\r\n```\r\n\r\nI believe that should resolve your issues.. Additionally, I believe you should \r\n```\r\npip uninstall python-social-auth\r\n```\r\nto make sure you migrated to the new libraries properly.. same:\n\n```\n    \"emailAddress\" : null,\n    \"lastName\" : null,\n```\n. yep that did it...thanks!\n. funny enough the twitter dev discussion board had the answer for me...the callback URL in your linkedin app needs to be set -- even though it explicitly says oath1:\n\nthis is what I did:\n\n![image](https://f.cloud.github.com/assets/926459/1577249/4e470b0c-5168-11e3-9797-f71bf3e8ddde.png)\n\nhttps://dev.twitter.com/discussions/1403\n. I'm seeing the same problem -- I'm using SESSION_ENGINE = 'mongoengine.django.sessions'\n\nwhen I nuke the sessions the problem does go away but also causes all users to be logged out\n. dupe of #128?\n. Ahh, silly me -- I didn't think to see if ACCESS_TOKEN_METHOD was configurable.  Might be handy to have that configurable by backend?\n\nThat didn't fix my problem though.  The fix from the linkedin blog post was to use POST but send the OAuth params in the query string.\n\nHere is the stack trace from setting ACCESS_TOKEN_METHOD = 'GET'\n\nTraceback (most recent call last):\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/Django-1.4.10-py2.6.egg/django/core/handlers/base.py\", line 111, in get_response\n    response = callback(request, _callback_args, *_callback_kwargs)\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/Django-1.4.10-py2.6.egg/django/views/decorators/csrf.py\", line 77, in wrapped_view\n    return view_func(_args, *_kwargs)\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/python_social_auth-0.1.20-py2.6.egg/social/apps/django_app/utils.py\", line 45, in wrapper\n    return func(request, backend, _args, *_kwargs)\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/python_social_auth-0.1.20-py2.6.egg/social/apps/django_app/views.py\", line 21, in complete\n    redirect_name=REDIRECT_FIELD_NAME, _args, *_kwargs)\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/python_social_auth-0.1.20-py2.6.egg/social/actions.py\", line 44, in do_complete\n    _args, *_kwargs)\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/python_social_auth-0.1.20-py2.6.egg/social/strategies/base.py\", line 67, in complete\n    return self.backend.auth_complete(_args, *_kwargs)\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/python_social_auth-0.1.20-py2.6.egg/social/backends/oauth.py\", line 337, in auth_complete\n    method=self.ACCESS_TOKEN_METHOD\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/python_social_auth-0.1.20-py2.6.egg/social/backends/oauth.py\", line 318, in request_access_token\n    return self.get_json(_args, *_kwargs)\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/python_social_auth-0.1.20-py2.6.egg/social/backends/base.py\", line 191, in get_json\n    return self.request(url, _args, *_kwargs).json()\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/requests-2.2.1-py2.6.egg/requests/models.py\", line 741, in json\n    return json.loads(self.text, **kwargs)\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/simplejson-3.3.2-py2.6-linux-x86_64.egg/simplejson/**init**.py\", line 488, in loads\n    return _default_decoder.decode(s)\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/simplejson-3.3.2-py2.6-linux-x86_64.egg/simplejson/decoder.py\", line 370, in decode\n    obj, end = self.raw_decode(s)\n\n  File \"/opt/vendop/virtenv/lib/python2.6/site-packages/simplejson-3.3.2-py2.6-linux-x86_64.egg/simplejson/decoder.py\", line 389, in raw_decode\n    return self.scan_once(s, idx=_w(s, idx).end())\n\nJSONDecodeError: Expecting value: line 1 column 1 (char 0)\n. doesn't seem to make sense that I can't make the problem happen from localhost, only production (Amazon EC2)\n. per the instructions here: https://developer.linkedin.com/documents/authentication\n\nI thought I could make this work using:\nAUTH_EXTRA_ARGUMENTS = {'response_type': 'code', 'client_id': SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY, 'scope': SOCIAL_AUTH_LINKEDIN_OAUTH2_SCOPE, 'redirect_uri': SOCIAL_AUTH_LOGIN_REDIRECT_URL}\nREQUEST_TOKEN_EXTRA_ARGUMENTS = {'grant_type': 'authorization_code', 'redirect_uri': SOCIAL_AUTH_LOGIN_REDIRECT_URL, 'client_id': SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY, 'client_secret': SOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET}\n\nbut I still get the same results.\n. Yep that seems to have fixed my problem -- I though I had tried a variant of that.\n\nThanks so much for the quick response!  \n\nwas this caused by a change that linkedin made -- I hadn't made any changes to auth on my end when this problem popped up\n. Just tracked this error down to this issue.\r\n\r\nAny workaround/update?. @alexole \r\nI think maybe this wasn't described well in the migration docs.\r\n\r\nI updated to:\r\n```\r\nfrom social_core.pipeline.partial import partial\r\n```\r\nAnd in my settings, updated:\r\n```\r\nSOCIAL_AUTH_PIPELINE = (\r\n    'social_core.pipeline.social_auth.social_details',\r\n    'social_core.pipeline.social_auth.social_uid',\r\n    'social_core.pipeline.social_auth.auth_allowed',\r\n    '...'\r\n)\r\n```\r\n\r\nI believe that should resolve your issues.. Additionally, I believe you should \r\n```\r\npip uninstall python-social-auth\r\n```\r\nto make sure you migrated to the new libraries properly.. ",
    "aldodevs": "I have these apps installed: 'tastypie', 'suit', 'django_evolution' and before I had the django_social_auth, i think it occurs because has a incompatibility with 'django_evolution', well i changed to south and was solved\n. ./manage.py syncdb\nSyncing...\nCreating tables ...\nPicklingError: Can't pickle <class 'django.db.models.fields.subclassing.JSONField'>: attribute lookup django.db.models.fields.subclassing.JSONField failed\n\nthat's all\n. I have these apps installed: 'tastypie', 'suit', 'django_evolution' and before I had the django_social_auth, i think it occurs because has a incompatibility with 'django_evolution', well i changed to south and was solved\n. ./manage.py syncdb\nSyncing...\nCreating tables ...\nPicklingError: Can't pickle <class 'django.db.models.fields.subclassing.JSONField'>: attribute lookup django.db.models.fields.subclassing.JSONField failed\n\nthat's all\n. ",
    "famoraes": "I had this problem too. My solution was remove/comment the SESSION_SERIALIZER on settings.py, that is json by default.\n. I had this problem too. My solution was remove/comment the SESSION_SERIALIZER on settings.py, that is json by default.\n. ",
    "maoaiz": "I have the same problem too. The @famoraes solution is good for me, (thanks for that), but... what is the correct solution? what happen if I need the SESSION_SERIALIZER var?\n. I have the same problem too. The @famoraes solution is good for me, (thanks for that), but... what is the correct solution? what happen if I need the SESSION_SERIALIZER var?\n. ",
    "eugeniol": "I have the same issue, is it addressed to JSON serializer ?\n. I have the same issue, is it addressed to JSON serializer ?\n. ",
    "Diolor": "My mongoengine is 0.8.4. I also saw your comment on stackoverflow, thanks.\n\nI don't get any error neither on\n\n```\nfrom mongoengine.django.auth import User\n```\n\nnor with\n\n```\nfrom social.utils import module_member\nprint module_member('mongoengine.django.auth.User')\n```\n\nWith the second it prints: `<class 'mongoengine.django.auth.User'>`\n\nHowever, I added `SOCIAL_AUTH_USER_MODEL = 'mongoengine.django.auth.User'` and I get:\n\n```\ndefault.usersocialauth: 'user' has a relation with model mongoengine.django.auth.User, which has either not been installed or is abstract.\n```\n\nwhich looks like mongo doesn't import the model. I tracked the error on a question <a href='http://stackoverflow.com/questions/17123296/how-to-inherit-mongoengine-django-auth-user-for-custom-user-model'> on StackOverflow </a> so I created a model in my `models.py` as in the example. However now I get:\n\n```\ndjango.core.management.base.CommandError: One or more models did not validate:\napps.user: Accessor for m2m field 'groups' clashes with related m2m field 'Group.user_set'. Add a related_name argument to the definition for 'groups'.\napps.user: Accessor for m2m field 'user_permissions' clashes with related m2m field 'Permission.user_set'. Add a related_name argument to the definition for 'user_permissions'.\nauth.user: Accessor for m2m field 'groups' clashes with related m2m field 'Group.user_set'. Add a related_name argument to the definition for 'groups'.\nauth.user: Accessor for m2m field 'user_permissions' clashes with related m2m field 'Permission.user_set'. Add a related_name argument to the definition for 'user_permissions'.\ndefault.usersocialauth: 'user' has a relation with model mongoengine.django.auth.User, which has either not been installed or is abstract.\n```\n\nIf my class is not `User(AbstractBaseUser, PermissionsMixin)` it will pop up the same error as above (not been installed or is abstract).\n. And that solved it. Thanks\n. It looked it was a migration problem. The database was complaining to the new structure of the `user` and `user_social_auth`. The only clue is possibly because the `foo =[]` was not there. I deleted these two user collections (it is luckily in dev) and then run smoothly. No clue how to fix this if you do not want to delete the user collections.\n\nI commented out the `AUTH_USER_MODEL` which was not necessary; if that had to do something.\n. Ok I found the problem. Just for the records, it was a MongoDB user authentication/privileges level.\n. @omab \nI don't have it. \n\n```\n AUTHENTICATION_BACKENDS    ('social.backends.facebook.FacebookOAuth2',\n                            'django.contrib.auth.backends.ModelBackend')\n```\n. My mongoengine is 0.8.4. I also saw your comment on stackoverflow, thanks.\n\nI don't get any error neither on\n\n```\nfrom mongoengine.django.auth import User\n```\n\nnor with\n\n```\nfrom social.utils import module_member\nprint module_member('mongoengine.django.auth.User')\n```\n\nWith the second it prints: `<class 'mongoengine.django.auth.User'>`\n\nHowever, I added `SOCIAL_AUTH_USER_MODEL = 'mongoengine.django.auth.User'` and I get:\n\n```\ndefault.usersocialauth: 'user' has a relation with model mongoengine.django.auth.User, which has either not been installed or is abstract.\n```\n\nwhich looks like mongo doesn't import the model. I tracked the error on a question <a href='http://stackoverflow.com/questions/17123296/how-to-inherit-mongoengine-django-auth-user-for-custom-user-model'> on StackOverflow </a> so I created a model in my `models.py` as in the example. However now I get:\n\n```\ndjango.core.management.base.CommandError: One or more models did not validate:\napps.user: Accessor for m2m field 'groups' clashes with related m2m field 'Group.user_set'. Add a related_name argument to the definition for 'groups'.\napps.user: Accessor for m2m field 'user_permissions' clashes with related m2m field 'Permission.user_set'. Add a related_name argument to the definition for 'user_permissions'.\nauth.user: Accessor for m2m field 'groups' clashes with related m2m field 'Group.user_set'. Add a related_name argument to the definition for 'groups'.\nauth.user: Accessor for m2m field 'user_permissions' clashes with related m2m field 'Permission.user_set'. Add a related_name argument to the definition for 'user_permissions'.\ndefault.usersocialauth: 'user' has a relation with model mongoengine.django.auth.User, which has either not been installed or is abstract.\n```\n\nIf my class is not `User(AbstractBaseUser, PermissionsMixin)` it will pop up the same error as above (not been installed or is abstract).\n. And that solved it. Thanks\n. It looked it was a migration problem. The database was complaining to the new structure of the `user` and `user_social_auth`. The only clue is possibly because the `foo =[]` was not there. I deleted these two user collections (it is luckily in dev) and then run smoothly. No clue how to fix this if you do not want to delete the user collections.\n\nI commented out the `AUTH_USER_MODEL` which was not necessary; if that had to do something.\n. Ok I found the problem. Just for the records, it was a MongoDB user authentication/privileges level.\n. @omab \nI don't have it. \n\n```\n AUTHENTICATION_BACKENDS    ('social.backends.facebook.FacebookOAuth2',\n                            'django.contrib.auth.backends.ModelBackend')\n```\n. ",
    "johnthedebs": "Looks like you've found the issue - I have two `user social auth` CTs in the DB, and one of them doesn't return a model when its `model_class()` method is called. That explains why the code works when I leave in the old import. Thanks!\n. Looks like you've found the issue - I have two `user social auth` CTs in the DB, and one of them doesn't return a model when its `model_class()` method is called. That explains why the code works when I leave in the old import. Thanks!\n. ",
    "nmundar": "Thanks for response.\n\nI've tried adding those settings to the pipeline setting. In do_complete i have AnonymousUser as user after strategy.session_get but in  authenticate method of strategy kwargs['user'] is still None.\n. I see no change when i remove custom pipelines, this is how they are implemented   \n\n```\nfrom datetime import datetime\nfrom uuid import uuid4\nfrom urllib2 import urlopen, HTTPError\nfrom django.contrib.auth.models import User\nfrom django.template.defaultfilters import slugify\nfrom django.core.files.base import ContentFile\nfrom models import UserProfile\n\n\ndef get_profile_data(backend, details, response, social_user,\n                     uid, user, *args, **kwargs):\n    profile, new_user = UserProfile.objects.get_or_create(user=user)\n\n    if backend.__class__.__name__ == 'FacebookOAuth2':   # changed from FacebookBackend, no effect\n\n        if not user.email and response.get('email'):\n            user.email = response.get('email')\n\n        if not profile.gender and response.get('gender'):\n            profile.gender = response.get('gender')\n\n        if not profile.birthday and response.get('birthday'):\n            datestring = response.get('birthday')\n            date_format = \"%m/%d/%Y\"\n            profile.birthday = datetime.strptime(datestring, date_format)\n\n        profile.save()\n        user.save()\n\n\ndef get_profile_avatar(backend, details, response, social_user,\n                       uid, user, *args, **kwargs):\n    url = None\n    profile = user.get_profile()\n    if not profile.profile_photo:\n        if backend.__class__.__name__ == 'FacebookOAuth2':\n            url = \"http://graph.facebook.com/%s/picture?type=large\" % \\\n                  response.get('id')\n\n        if url:\n            try:\n                avatar = urlopen(url)\n                rstring = uuid4().get_hex()\n                profile.profile_photo.save(slugify(rstring + '_p') + '.jpg',\n                                           ContentFile(avatar.read()))\n                profile.save()\n            except HTTPError:\n                pass\n```\n. I managed to catch some time to try to make this work. I've succeded. The problem was actualy in my pipeline due to extra social_user param. I've managed to find it because I've been messing inside django authenticate method which silences exceptions that are due to incorrect number of arguments.\n. Thanks for response.\n\nI've tried adding those settings to the pipeline setting. In do_complete i have AnonymousUser as user after strategy.session_get but in  authenticate method of strategy kwargs['user'] is still None.\n. I see no change when i remove custom pipelines, this is how they are implemented   \n\n```\nfrom datetime import datetime\nfrom uuid import uuid4\nfrom urllib2 import urlopen, HTTPError\nfrom django.contrib.auth.models import User\nfrom django.template.defaultfilters import slugify\nfrom django.core.files.base import ContentFile\nfrom models import UserProfile\n\n\ndef get_profile_data(backend, details, response, social_user,\n                     uid, user, *args, **kwargs):\n    profile, new_user = UserProfile.objects.get_or_create(user=user)\n\n    if backend.__class__.__name__ == 'FacebookOAuth2':   # changed from FacebookBackend, no effect\n\n        if not user.email and response.get('email'):\n            user.email = response.get('email')\n\n        if not profile.gender and response.get('gender'):\n            profile.gender = response.get('gender')\n\n        if not profile.birthday and response.get('birthday'):\n            datestring = response.get('birthday')\n            date_format = \"%m/%d/%Y\"\n            profile.birthday = datetime.strptime(datestring, date_format)\n\n        profile.save()\n        user.save()\n\n\ndef get_profile_avatar(backend, details, response, social_user,\n                       uid, user, *args, **kwargs):\n    url = None\n    profile = user.get_profile()\n    if not profile.profile_photo:\n        if backend.__class__.__name__ == 'FacebookOAuth2':\n            url = \"http://graph.facebook.com/%s/picture?type=large\" % \\\n                  response.get('id')\n\n        if url:\n            try:\n                avatar = urlopen(url)\n                rstring = uuid4().get_hex()\n                profile.profile_photo.save(slugify(rstring + '_p') + '.jpg',\n                                           ContentFile(avatar.read()))\n                profile.save()\n            except HTTPError:\n                pass\n```\n. I managed to catch some time to try to make this work. I've succeded. The problem was actualy in my pipeline due to extra social_user param. I've managed to find it because I've been messing inside django authenticate method which silences exceptions that are due to incorrect number of arguments.\n. ",
    "jasonwaters": "I'm having this exact same problem after migrating from django-social-auth to python-social-auth.  do_complete never gets a valid user.  It's always None.  and partial = partial_pipeline_data(strategy, user, _args, *_kwargs) also returns None.  So it always redirects to the login_error page.  \n\nI'm not using facbook, but my own backend for Runkeeper.  worked like a champ in django-social-auth.\n\nDo you mind looking at my diff to see if you can see the problem?\n\nhttps://github.com/jasonwaters/fitcompetition/commit/05a0014983e972f3028d3e90e1438a22d3a4289b\n. Thanks for the comment.  Sadly it's not the problem for me.  I don't have the SOCIAL_AUTH_EXTRA_DATA setting at all, and it doesn't look like python-social-auth is even getting into the pipeline at all.\n. There was an exception raised:\n\n'social_details() takes at least 2 arguments (2 given)'\n\nsee https://www.dropbox.com/s/ci6p5v8255xdscn/Screenshot%202013-11-02%2011.29.47.png\n. There are no arguments passed into social_details().  I traced it to run_pipeline where it calls the method by reflection:\n\nresult = func(_args, *_out)\n\n*args is an empty tuple.\n\nhttps://www.dropbox.com/s/1bxh1g8cyy917sz/Screenshot%202013-11-02%2016.14.24.png\n\nIt looks like args are passed down all the way from the response where they originate as an empty tuple.  I'm puzzled at this point, since I don't have a clear understanding of how it should work.\n. I'm pretty much dead in the water on this.  Everything was working fine with django-social-auth, but after the switch to python-social-auth I'm stuck.  I want to adopt the new library, but it just doesn't work.  Anything else I can do to get you information to troubleshoot this issue?  My entire project is on github.\n. Great news!  Thanks.  I installed with pip, BTW.\n. It's working now.  Thank's a lot!  What was the problem?\n. Thanks!\n. I'm having this exact same problem after migrating from django-social-auth to python-social-auth.  do_complete never gets a valid user.  It's always None.  and partial = partial_pipeline_data(strategy, user, _args, *_kwargs) also returns None.  So it always redirects to the login_error page.  \n\nI'm not using facbook, but my own backend for Runkeeper.  worked like a champ in django-social-auth.\n\nDo you mind looking at my diff to see if you can see the problem?\n\nhttps://github.com/jasonwaters/fitcompetition/commit/05a0014983e972f3028d3e90e1438a22d3a4289b\n. Thanks for the comment.  Sadly it's not the problem for me.  I don't have the SOCIAL_AUTH_EXTRA_DATA setting at all, and it doesn't look like python-social-auth is even getting into the pipeline at all.\n. There was an exception raised:\n\n'social_details() takes at least 2 arguments (2 given)'\n\nsee https://www.dropbox.com/s/ci6p5v8255xdscn/Screenshot%202013-11-02%2011.29.47.png\n. There are no arguments passed into social_details().  I traced it to run_pipeline where it calls the method by reflection:\n\nresult = func(_args, *_out)\n\n*args is an empty tuple.\n\nhttps://www.dropbox.com/s/1bxh1g8cyy917sz/Screenshot%202013-11-02%2016.14.24.png\n\nIt looks like args are passed down all the way from the response where they originate as an empty tuple.  I'm puzzled at this point, since I don't have a clear understanding of how it should work.\n. I'm pretty much dead in the water on this.  Everything was working fine with django-social-auth, but after the switch to python-social-auth I'm stuck.  I want to adopt the new library, but it just doesn't work.  Anything else I can do to get you information to troubleshoot this issue?  My entire project is on github.\n. Great news!  Thanks.  I installed with pip, BTW.\n. It's working now.  Thank's a lot!  What was the problem?\n. Thanks!\n. ",
    "taivo": "I also switched from django-social-auth to python-social-auth and have a problem with very similar symptoms. I was able to track down my problem. Hopefully, this summary will help you guys:\n\nCauses:\n1. I had an old setting from django-social-auth: `SOCIAL_AUTH_EXTRA_DATA = False`\n2. In the extra_data step of the pipeline, the `backends.oauth.extra_data` function does this concatenation\n\n``` python\n    names = (self.EXTRA_DATA or []) + \\\n    self.setting('EXTRA_DATA', [])\n```\n\nSo an exception was thrown because a list is concatenated with a bool and this exception propagated up the stack and eventually invalidated the entire authentication pipeline.\n\nSolution: removing the setting `SOCIAL_AUTH_EXTRA_DATA`.\n\nSuggestion: perhaps some note on SOCIAL_AUTH_EXTRA_DATA 's new usage (as list) or its deprecation should be mentioned in the \"Porting settings\" docs. Also, it looks like `backends.oauth.extra_data` is retrieving settings that are list of strings, perhaps we can raise an explicit exception here if EXTRA_DATA is of a different type.\n\n@omab, I can submit a PR but I'm hoping to find out from you first about the role of SOCIAL_AUTH_EXTRA_DATA in this new codebase. Thanks.\n. I also switched from django-social-auth to python-social-auth and have a problem with very similar symptoms. I was able to track down my problem. Hopefully, this summary will help you guys:\n\nCauses:\n1. I had an old setting from django-social-auth: `SOCIAL_AUTH_EXTRA_DATA = False`\n2. In the extra_data step of the pipeline, the `backends.oauth.extra_data` function does this concatenation\n\n``` python\n    names = (self.EXTRA_DATA or []) + \\\n    self.setting('EXTRA_DATA', [])\n```\n\nSo an exception was thrown because a list is concatenated with a bool and this exception propagated up the stack and eventually invalidated the entire authentication pipeline.\n\nSolution: removing the setting `SOCIAL_AUTH_EXTRA_DATA`.\n\nSuggestion: perhaps some note on SOCIAL_AUTH_EXTRA_DATA 's new usage (as list) or its deprecation should be mentioned in the \"Porting settings\" docs. Also, it looks like `backends.oauth.extra_data` is retrieving settings that are list of strings, perhaps we can raise an explicit exception here if EXTRA_DATA is of a different type.\n\n@omab, I can submit a PR but I'm hoping to find out from you first about the role of SOCIAL_AUTH_EXTRA_DATA in this new codebase. Thanks.\n. ",
    "mlowicki": "It works. Thanks.\n. It works. Thanks.\n. ",
    "meconlin": "Using these settings:\n\n```\nSOCIAL_AUTH_AMAZON_KEY = 'blahkey'\nSOCIAL_AUTH_AMAZON_SECRET = 'blahblahblabhsecret'\n```\n\nappears to get client_id set in the url, but still fails.\n. AH nevermind, was whitelist issue at other end, once I had second settings in. \nThanks! Got it. \n\nThanks for all the hardwork, loving this package so far, have Twitter, Google, and Amazon working. LinkedIn not so much, have you been succesful using linkedin?\n. should the link to kick off linkedin oauth2 be /login/linkedin-oath2/ or simply /login/linkedin/\n. got it, thanks, do you a have a more detailed todo list anywhere, so I can pitch in a bit?\n. absolutely\n. Sorry if I was not clear omab, I was not trying to test oauth in any meaningful way. I was simply trying to get an authenticated `django.test.Client` so that I can unit test REST endpoints. My mistake was thinking that it mattered how that Client got authenticated, for unit testing the tasteypie endpoints oauth really doesnt need to come into play at all. \n\nthis worked for me:\n\n```\n        self.user = User.objects.create(username='testuser', password='12345', is_active=True, is_staff=True, is_superuser=True) \n        self.user.set_password('hello') \n        self.user.save() \n        self.user = authenticate(username='testuser', password='hello') \n        login = self.c.login(username='testuser', password='hello') \n        self.assertTrue(login)\n```\n. Using these settings:\n\n```\nSOCIAL_AUTH_AMAZON_KEY = 'blahkey'\nSOCIAL_AUTH_AMAZON_SECRET = 'blahblahblabhsecret'\n```\n\nappears to get client_id set in the url, but still fails.\n. AH nevermind, was whitelist issue at other end, once I had second settings in. \nThanks! Got it. \n\nThanks for all the hardwork, loving this package so far, have Twitter, Google, and Amazon working. LinkedIn not so much, have you been succesful using linkedin?\n. should the link to kick off linkedin oauth2 be /login/linkedin-oath2/ or simply /login/linkedin/\n. got it, thanks, do you a have a more detailed todo list anywhere, so I can pitch in a bit?\n. absolutely\n. Sorry if I was not clear omab, I was not trying to test oauth in any meaningful way. I was simply trying to get an authenticated `django.test.Client` so that I can unit test REST endpoints. My mistake was thinking that it mattered how that Client got authenticated, for unit testing the tasteypie endpoints oauth really doesnt need to come into play at all. \n\nthis worked for me:\n\n```\n        self.user = User.objects.create(username='testuser', password='12345', is_active=True, is_staff=True, is_superuser=True) \n        self.user.set_password('hello') \n        self.user.save() \n        self.user = authenticate(username='testuser', password='hello') \n        login = self.c.login(username='testuser', password='hello') \n        self.assertTrue(login)\n```\n. ",
    "andrewamanda": "Hi, I have spent hours but failed to set up the Python-social-oauth to work properly with Amazon. The request made to Amazon is exactly like the one meconlin posted:\nhttps://www.amazon.com/ap/oa?ie=UTF8&response_type=code&scope=profile&redirect_uri=http%3A%2F%2Flocalhost%3A8000%2Fcomplete%2Famazon%2F&state=oRNdyN6ewMMA6zqkkPc2k8ntR20JNtp2&client_id=<the real client id>\n\nBut I kept getting 400 Bad Request:\nThe redirect URI you provided has not been whitelisted for your application\n\nThe \"Allowed Return URL\" I entered on the Amazon app console is:\nhttps://localhost:8000/complete/amazon/\n\nWhat else should be done to get it working?\n\nThank you\nAndrew\n. That's what bothers me. Our local service is running over SSL, we tested this on our production server which is running SSL as well. But the link generated by the python-social-auth backend always translates to redirect_uri=http%3A%2F%2Flocalhost%3A8000...\n\nOn the Amazon app console, we can only define the https:// for the redirect_uri. If we try to save http://, it will give an error: \n\nOne of your website return urls is invalid. Ex: https://example.com/signin \n. setting SOCIAL_AUTH_AMAZON_REDIRECT_IS_HTTPS to True did the trick on my local server.  Thank you.\n\nHowever it does not change anything on my production server which is running behind Nginx.\n\nAny idea why this is so?\n. Yes, what part of the proxy definition are you looking for?\n\nOne of the production servers we are testing this on now is:\n\nhttps://www.andrew-amanda.com/accounts/login/\n\nClick the Login with Amazon button. You will see the error.\n\nDoes it give you any clue?\n. The only proxy definition which might be relevant is:\nSetEnvIf X-Forwarded-SSL on HTTPS=1\n\nWhere is the proxy_set_header calls being made? Our django app does not make that call. \n. Our django app is hosted on a shared Nginx server. The X-Forwarded-SSL is set on the httpd.conf file belong to our django instance.\n. yes, see the header dump:\n\n'HTTP_HTTPS': 'on',\n'HTTP_HTTP_X_FORWARDED_PROTO': 'https',\n'HTTP_X_FORWARDED_PROTO': 'https',\n'HTTP_X_FORWARDED_SSL': 'on',\n\nI just tried the setting:\n\nSECURE_PROXY_SSL_HEADER = ('HTTPS', '1')\nor\nSECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')\n\nIt doesn't have an effect on the redirect_uri.\n. no, it doesn't make a difference after setting it to: SECURE_PROXY_SSL_HEADER = ('HTTP_HTTPS', 'on')\n. What are all the other possible settings for Amazon from the python-social-auth backend, besides:\nSOCIAL_AUTH_AMAZON_KEY = '...'\nSOCIAL_AUTH_AMAZON_SECRET = '...'\nSOCIAL_AUTH_AMAZON_REDIRECT_IS_HTTPS = True\n. should we set REDIRECT_IS_HTTPS to True, according to the code you referred to?\n. adding REDIRECT_IS_HTTPS solves the problem. But still not understanding why it is not picking up the \nSOCIAL_AUTH_AMAZON_REDIRECT_IS_HTTPS\n\nI'm wondering how meconlin was able to get it working. The redirect_uri he posted was clearly a http://, but Amazon App Console clearly states that it must be https://\n\nMidnight here, continue tomorrow\n. Thank you, that takes care of it.\n\nIs there any logging mechanism available in the python-social-auth package which allows our app to keep track of the failed login attempts to those backends?\n. Hi, I have spent hours but failed to set up the Python-social-oauth to work properly with Amazon. The request made to Amazon is exactly like the one meconlin posted:\nhttps://www.amazon.com/ap/oa?ie=UTF8&response_type=code&scope=profile&redirect_uri=http%3A%2F%2Flocalhost%3A8000%2Fcomplete%2Famazon%2F&state=oRNdyN6ewMMA6zqkkPc2k8ntR20JNtp2&client_id=<the real client id>\n\nBut I kept getting 400 Bad Request:\nThe redirect URI you provided has not been whitelisted for your application\n\nThe \"Allowed Return URL\" I entered on the Amazon app console is:\nhttps://localhost:8000/complete/amazon/\n\nWhat else should be done to get it working?\n\nThank you\nAndrew\n. That's what bothers me. Our local service is running over SSL, we tested this on our production server which is running SSL as well. But the link generated by the python-social-auth backend always translates to redirect_uri=http%3A%2F%2Flocalhost%3A8000...\n\nOn the Amazon app console, we can only define the https:// for the redirect_uri. If we try to save http://, it will give an error: \n\nOne of your website return urls is invalid. Ex: https://example.com/signin \n. setting SOCIAL_AUTH_AMAZON_REDIRECT_IS_HTTPS to True did the trick on my local server.  Thank you.\n\nHowever it does not change anything on my production server which is running behind Nginx.\n\nAny idea why this is so?\n. Yes, what part of the proxy definition are you looking for?\n\nOne of the production servers we are testing this on now is:\n\nhttps://www.andrew-amanda.com/accounts/login/\n\nClick the Login with Amazon button. You will see the error.\n\nDoes it give you any clue?\n. The only proxy definition which might be relevant is:\nSetEnvIf X-Forwarded-SSL on HTTPS=1\n\nWhere is the proxy_set_header calls being made? Our django app does not make that call. \n. Our django app is hosted on a shared Nginx server. The X-Forwarded-SSL is set on the httpd.conf file belong to our django instance.\n. yes, see the header dump:\n\n'HTTP_HTTPS': 'on',\n'HTTP_HTTP_X_FORWARDED_PROTO': 'https',\n'HTTP_X_FORWARDED_PROTO': 'https',\n'HTTP_X_FORWARDED_SSL': 'on',\n\nI just tried the setting:\n\nSECURE_PROXY_SSL_HEADER = ('HTTPS', '1')\nor\nSECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')\n\nIt doesn't have an effect on the redirect_uri.\n. no, it doesn't make a difference after setting it to: SECURE_PROXY_SSL_HEADER = ('HTTP_HTTPS', 'on')\n. What are all the other possible settings for Amazon from the python-social-auth backend, besides:\nSOCIAL_AUTH_AMAZON_KEY = '...'\nSOCIAL_AUTH_AMAZON_SECRET = '...'\nSOCIAL_AUTH_AMAZON_REDIRECT_IS_HTTPS = True\n. should we set REDIRECT_IS_HTTPS to True, according to the code you referred to?\n. adding REDIRECT_IS_HTTPS solves the problem. But still not understanding why it is not picking up the \nSOCIAL_AUTH_AMAZON_REDIRECT_IS_HTTPS\n\nI'm wondering how meconlin was able to get it working. The redirect_uri he posted was clearly a http://, but Amazon App Console clearly states that it must be https://\n\nMidnight here, continue tomorrow\n. Thank you, that takes care of it.\n\nIs there any logging mechanism available in the python-social-auth package which allows our app to keep track of the failed login attempts to those backends?\n. ",
    "shiroi2003": "Sorry. My mistake, I just forgot to remove some \"social_auth\" lines. \n. Thank you very much. To make the same thing on template I have to create a new templatetag??\n. Sorry. My mistake, I just forgot to remove some \"social_auth\" lines. \n. Thank you very much. To make the same thing on template I have to create a new templatetag??\n. ",
    "kakky": "at refresh_token() method\n\n```\nself.get_key_and_secret()  # return (None, None)\nself.setting('KEY')  # return ('SOCIAL_AUTH_KEY', 'SOCIAL_AUTH_KEY', 'KEY', 'KEY') ... There is no SOCIAL_AUTH_GOOGLE_OAUTH2_KEY\nBACKENDSCACHE  # return {}\n```\n\nSo I wrote\n\n```\nfrom social.apps.django_app.utils import load_strategy\nfrom social.backends.utils import load_backends\n\nuser = User.objects.get(...)\nsocial = user.social_auth.filter(provider='google-oauth2')[0]\n\nload_backends(settings.AUTHENTICATION_BACKENDS)\nstrategy = load_strategy(backend=social.provider)\n\nsocial.refresh_token(strategy)\n```\n\nSomething wrong?\n. I think it is this (if self.REFRESH_TOKEN_METHOD == 'POST')\n\nat social.backends.oauth.BaseOAuth2\n\n```\n    def refresh_token(self, token, *args, **kwargs):\n#        params = self.refresh_token_params(token, *args, **kwargs)\n        data = self.refresh_token_params(token, *args, **kwargs)\n        request = self.request(self.REFRESH_TOKEN_URL or self.ACCESS_TOKEN_URL,\n#                               params=params, headers=self.auth_headers(),\n                               data=data, headers=self.auth_headers(),\n                               method=self.REFRESH_TOKEN_METHOD)\n        return self.process_refresh_token_response(request, *args, **kwargs)\n```\n. Problem is\n\n1.Perhaps, forget to load the backend instances in load_strategy().\n\n2.If I do not specify a backend name, it is not possible to load the backend origin key and secret. Which backend should be use, maybe guess in refresh_token().\n\nnot work. can not find 'SOCIAL_AUTH_' + 'BACKEND_NAME' + '_KEY'\n\n```\nfrom social.apps.django_app.utils import load_strategy\n\nuser = User.objects.get(...)\nsocial = user.social_auth.filter(provider='backend-name')[0]\nstrategy = load_strategy()\nsocial.refresh_token(strategy)\n```\n\nwork\n\n```\nfrom social.apps.django_app.utils import load_strategy\n\nuser = User.objects.get(...)\nsocial = user.social_auth.filter(provider='backend-name')[0]\nstrategy = load_strategy(backend='backend-name')\nsocial.refresh_token(strategy)\n```\n\n3.Though POST, It becomes the query parameter in the URL.\n\nSorry about funny English.\n. Thank you. It worked!\n. I tried it.\nhttps://gist.github.com/kakky/6809432\n. at refresh_token() method\n\n```\nself.get_key_and_secret()  # return (None, None)\nself.setting('KEY')  # return ('SOCIAL_AUTH_KEY', 'SOCIAL_AUTH_KEY', 'KEY', 'KEY') ... There is no SOCIAL_AUTH_GOOGLE_OAUTH2_KEY\nBACKENDSCACHE  # return {}\n```\n\nSo I wrote\n\n```\nfrom social.apps.django_app.utils import load_strategy\nfrom social.backends.utils import load_backends\n\nuser = User.objects.get(...)\nsocial = user.social_auth.filter(provider='google-oauth2')[0]\n\nload_backends(settings.AUTHENTICATION_BACKENDS)\nstrategy = load_strategy(backend=social.provider)\n\nsocial.refresh_token(strategy)\n```\n\nSomething wrong?\n. I think it is this (if self.REFRESH_TOKEN_METHOD == 'POST')\n\nat social.backends.oauth.BaseOAuth2\n\n```\n    def refresh_token(self, token, *args, **kwargs):\n#        params = self.refresh_token_params(token, *args, **kwargs)\n        data = self.refresh_token_params(token, *args, **kwargs)\n        request = self.request(self.REFRESH_TOKEN_URL or self.ACCESS_TOKEN_URL,\n#                               params=params, headers=self.auth_headers(),\n                               data=data, headers=self.auth_headers(),\n                               method=self.REFRESH_TOKEN_METHOD)\n        return self.process_refresh_token_response(request, *args, **kwargs)\n```\n. Problem is\n\n1.Perhaps, forget to load the backend instances in load_strategy().\n\n2.If I do not specify a backend name, it is not possible to load the backend origin key and secret. Which backend should be use, maybe guess in refresh_token().\n\nnot work. can not find 'SOCIAL_AUTH_' + 'BACKEND_NAME' + '_KEY'\n\n```\nfrom social.apps.django_app.utils import load_strategy\n\nuser = User.objects.get(...)\nsocial = user.social_auth.filter(provider='backend-name')[0]\nstrategy = load_strategy()\nsocial.refresh_token(strategy)\n```\n\nwork\n\n```\nfrom social.apps.django_app.utils import load_strategy\n\nuser = User.objects.get(...)\nsocial = user.social_auth.filter(provider='backend-name')[0]\nstrategy = load_strategy(backend='backend-name')\nsocial.refresh_token(strategy)\n```\n\n3.Though POST, It becomes the query parameter in the URL.\n\nSorry about funny English.\n. Thank you. It worked!\n. I tried it.\nhttps://gist.github.com/kakky/6809432\n. ",
    "mongkok": "In the final `request` the user (`request.user`) is Anonymous when it should be the real user instance.\n. In the final `request` the user (`request.user`) is Anonymous when it should be the real user instance.\n. ",
    "kahnvex": "Agreed. Trying to go through source and figure out what is going on is very difficult. A lot of the code could be simplified rather cheaply. ~~Too much [defensive coding](https://github.com/omab/python-social-auth/blob/master/social/backends/oauth.py#L130-L153).~~ Edit: The code that was originally linked to has been cleaned up.\n\nWhere do you think needs to most TLC?\n. Not sure about the whole installable, but it seems like the code I linked has been cleaned up. I did not look any further than that.\n\nIn retrospect I should have pressed the \"y\" key before copying the source lines link to get the commit hash in the URL. It would have been much easier to see the cleanup.\n. Suggest:\n\n``` python\n@classmethod\ndef username_max_length(cls):\n    username_field = cls.username_field()\n    user_model = UserSocialAuth.user_model()\n    field = getattr(user_model, username_field)\n    if hasattr(field, 'max_length'):\n        return field.max_length\n\n    return settings.USERNAME_FIELD_MAX_LENGTH\n\n```\n. Agreed. Trying to go through source and figure out what is going on is very difficult. A lot of the code could be simplified rather cheaply. ~~Too much [defensive coding](https://github.com/omab/python-social-auth/blob/master/social/backends/oauth.py#L130-L153).~~ Edit: The code that was originally linked to has been cleaned up.\n\nWhere do you think needs to most TLC?\n. Not sure about the whole installable, but it seems like the code I linked has been cleaned up. I did not look any further than that.\n\nIn retrospect I should have pressed the \"y\" key before copying the source lines link to get the commit hash in the URL. It would have been much easier to see the cleanup.\n. Suggest:\n\n``` python\n@classmethod\ndef username_max_length(cls):\n    username_field = cls.username_field()\n    user_model = UserSocialAuth.user_model()\n    field = getattr(user_model, username_field)\n    if hasattr(field, 'max_length'):\n        return field.max_length\n\n    return settings.USERNAME_FIELD_MAX_LENGTH\n\n```\n. ",
    "trojanware": "+1\n@omab Noob here. Is there a plan regarding this that I can build up on / implement? I would like to take a stab at this.\n. Explaining what the error message says: PSA expects certain data to be included along with the URL call, which would be absent when you call it manually. So, you will have to have Instagram call the redirect uri to see if everything works fine\n. +1\n@omab Noob here. Is there a plan regarding this that I can build up on / implement? I would like to take a stab at this.\n. Explaining what the error message says: PSA expects certain data to be included along with the URL call, which would be absent when you call it manually. So, you will have to have Instagram call the redirect uri to see if everything works fine\n. ",
    "vitalyvolkov": "Sorry, my mistake, there should be set USER_FIELDS for create_user\n. Sorry, my mistake, there should be set USER_FIELDS for create_user\n. ",
    "nicksnell": "**Update:** No longer seem to be experiencing this issue with Facebook with the same code that was failing for the last few days. Assuming it was a glitch somewhere Facebook's end. Would be interested to hear if there could be any other reason for this?\n. This hasn't really made it optional - it now means everyone using the URL template tag to generate social URLs will do so without a trailing slash. Obviously they can manually rewrite the urls, but it's not ideal as it breaks existing setups. Would this not be better made into a setting/something more flexible?\n. @omab Wonderful - Thanks!\n. **Update:** No longer seem to be experiencing this issue with Facebook with the same code that was failing for the last few days. Assuming it was a glitch somewhere Facebook's end. Would be interested to hear if there could be any other reason for this?\n. This hasn't really made it optional - it now means everyone using the URL template tag to generate social URLs will do so without a trailing slash. Obviously they can manually rewrite the urls, but it's not ideal as it breaks existing setups. Would this not be better made into a setting/something more flexible?\n. @omab Wonderful - Thanks!\n. ",
    "guyf": "Camel-case works great - thanks!\n. Camel-case works great - thanks!\n. ",
    "d3prof3t": "@omab What exactly do we need to specify in the redirect uri in the django app as well as the linkedin app?\nMy current django app config is:\nSOCIAL_AUTH_LINKEDIN_OAUTH2_KEY = 'xxxxxxxxxx'\nSOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET = 'xxxxxxx'\n\n# Add email to requested authorizations.\n\nSOCIAL_AUTH_LINKEDIN_OAUTH2_SCOPE = [ \n    'r_basicprofile', 'r_emailaddress', 'rw_company_admin', 'w_share']\n\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = '/home/'\nSOCIAL_AUTH_LOGIN_URL = '/'\n\nAm I missing something in my config file, and exactly what should be the redirect uri in cas of OAuth2?\n. @omab What exactly do we need to specify in the redirect uri in the django app as well as the linkedin app?\nMy current django app config is:\nSOCIAL_AUTH_LINKEDIN_OAUTH2_KEY = 'xxxxxxxxxx'\nSOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET = 'xxxxxxx'\n\n# Add email to requested authorizations.\n\nSOCIAL_AUTH_LINKEDIN_OAUTH2_SCOPE = [ \n    'r_basicprofile', 'r_emailaddress', 'rw_company_admin', 'w_share']\n\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = '/home/'\nSOCIAL_AUTH_LOGIN_URL = '/'\n\nAm I missing something in my config file, and exactly what should be the redirect uri in cas of OAuth2?\n. ",
    "z4r": "thanks to you @omab :+1: \n. thanks to you @omab :+1: \n. ",
    "hannseman": "Hmm, I can't really see why the Travis CI build is failing on `test_livejournal` on Python 3.3. I haven't touched anything besides `DjangoStrategy`. Got any pointers?  \n. @omab, I see!\n. Hmm, I can't really see why the Travis CI build is failing on `test_livejournal` on Python 3.3. I haven't touched anything besides `DjangoStrategy`. Got any pointers?  \n. @omab, I see!\n. ",
    "JasonSanford": "I see Travis is automatically testing pull requests. If I can't get my tests to run locally I can always push code to this  branch and wait and see if things pass.\n. I see Travis is automatically testing pull requests. If I can't get my tests to run locally I can always push code to this  branch and wait and see if things pass.\n. ",
    "simonluijk": "Thank you for your quick response. With a few tweaks from the snippet given this is the code I have:\n\n``` python\nclass AuthViewSet(mixins.CreateModelMixin, viewsets.GenericViewSet):\n    queryset = User.objects.all()\n    serializer_class = AuthSerializer\n\n    def create(self, request):\n        serializer = self.get_serializer(data=request.DATA,\n                                         files=request.FILES)\n\n        if serializer.is_valid():\n            auth_token = serializer.data['token']\n            backend = serializer.data['backend']\n\n            strategy = load_strategy(request=request, backend=backend)\n            user = strategy.backend.do_auth(\n                access_token=auth_token,\n                user=request.user.is_authenticated() and request.user or None\n            )\n            login(request, user)\n            return Response({'status': 'Done'})\n```\n\nWhen there is no sessionid cookie, no exception is raised, the user is created, a sessionid cookie is created but the user is not logged in. Afterwards visiting a url that requires login or reauthenticating produces the following exception. \n\n```\nAttributeError at /api/accounts/auth/\n'NoneType' object has no attribute 'get_user'\n\nRequest Method: POST\nRequest URL: http://localhost:8000/api/accounts/auth/\nDjango Version: 1.6c1\nPython Version: 2.7.5\nServer time: Tue, 29 Oct 2013 04:52:21 -0500\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.admin',\n 'south',\n 'django_nose',\n 'rest_framework',\n 'social.apps.django_app.default')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\n\nTraceback:\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n  114.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/django/db/transaction.py\" in inner\n  339.                 return func(*args, **kwargs)\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/rest_framework/viewsets.py\" in view\n  78.             return self.dispatch(request, *args, **kwargs)\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n  57.         return view_func(*args, **kwargs)\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/rest_framework/views.py\" in dispatch\n  399.             response = self.handle_exception(exc)\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/rest_framework/views.py\" in dispatch\n  396.             response = handler(request, *args, **kwargs)\nFile \"/home/simon/Dropbox/Projects/django/src/django/apps/accounts/views.py\" in create\n  46.                 user=request.user.is_authenticated() and request.user or None\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/django/utils/functional.py\" in inner\n  213.             self._setup()\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/django/utils/functional.py\" in _setup\n  298.         self._wrapped = self._setupfunc()\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/django/contrib/auth/middleware.py\" in <lambda>\n  18.         request.user = SimpleLazyObject(lambda: get_user(request))\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/django/contrib/auth/middleware.py\" in get_user\n  10.         request._cached_user = auth.get_user(request)\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/django/contrib/auth/__init__.py\" in get_user\n  137.         user = backend.get_user(user_id) or AnonymousUser()\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/social/backends/base.py\" in get_user\n  149.         return self.strategy.get_user(user_id)\n\nException Type: AttributeError at /api/accounts/auth/\nException Value: 'NoneType' object has no attribute 'get_user'\n```\n\nIt behaves the same using the view you provided above. When visiting /login/facebook/ all works as expected.\n. Thanks that has solved my issue.\n. @omab Thank you for the hooks and conformation. When I have something working I will see if it is something that can be included in psa.\n. Thank you for your quick response. With a few tweaks from the snippet given this is the code I have:\n\n``` python\nclass AuthViewSet(mixins.CreateModelMixin, viewsets.GenericViewSet):\n    queryset = User.objects.all()\n    serializer_class = AuthSerializer\n\n    def create(self, request):\n        serializer = self.get_serializer(data=request.DATA,\n                                         files=request.FILES)\n\n        if serializer.is_valid():\n            auth_token = serializer.data['token']\n            backend = serializer.data['backend']\n\n            strategy = load_strategy(request=request, backend=backend)\n            user = strategy.backend.do_auth(\n                access_token=auth_token,\n                user=request.user.is_authenticated() and request.user or None\n            )\n            login(request, user)\n            return Response({'status': 'Done'})\n```\n\nWhen there is no sessionid cookie, no exception is raised, the user is created, a sessionid cookie is created but the user is not logged in. Afterwards visiting a url that requires login or reauthenticating produces the following exception. \n\n```\nAttributeError at /api/accounts/auth/\n'NoneType' object has no attribute 'get_user'\n\nRequest Method: POST\nRequest URL: http://localhost:8000/api/accounts/auth/\nDjango Version: 1.6c1\nPython Version: 2.7.5\nServer time: Tue, 29 Oct 2013 04:52:21 -0500\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.admin',\n 'south',\n 'django_nose',\n 'rest_framework',\n 'social.apps.django_app.default')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\n\nTraceback:\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n  114.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/django/db/transaction.py\" in inner\n  339.                 return func(*args, **kwargs)\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/rest_framework/viewsets.py\" in view\n  78.             return self.dispatch(request, *args, **kwargs)\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n  57.         return view_func(*args, **kwargs)\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/rest_framework/views.py\" in dispatch\n  399.             response = self.handle_exception(exc)\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/rest_framework/views.py\" in dispatch\n  396.             response = handler(request, *args, **kwargs)\nFile \"/home/simon/Dropbox/Projects/django/src/django/apps/accounts/views.py\" in create\n  46.                 user=request.user.is_authenticated() and request.user or None\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/django/utils/functional.py\" in inner\n  213.             self._setup()\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/django/utils/functional.py\" in _setup\n  298.         self._wrapped = self._setupfunc()\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/django/contrib/auth/middleware.py\" in <lambda>\n  18.         request.user = SimpleLazyObject(lambda: get_user(request))\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/django/contrib/auth/middleware.py\" in get_user\n  10.         request._cached_user = auth.get_user(request)\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/django/contrib/auth/__init__.py\" in get_user\n  137.         user = backend.get_user(user_id) or AnonymousUser()\nFile \"/home/simon/.virtualenvs/django/lib/python2.7/site-packages/social/backends/base.py\" in get_user\n  149.         return self.strategy.get_user(user_id)\n\nException Type: AttributeError at /api/accounts/auth/\nException Value: 'NoneType' object has no attribute 'get_user'\n```\n\nIt behaves the same using the view you provided above. When visiting /login/facebook/ all works as expected.\n. Thanks that has solved my issue.\n. @omab Thank you for the hooks and conformation. When I have something working I will see if it is something that can be included in psa.\n. ",
    "rodrigogadea": "I had the same issue - although a slightly different implementation in the views:\n\n``` python\n# For login with a Facebook account, decorators seems not play well with CBVs...\n@strategy()\ndef auth_by_fb_token(request, backend):\n    backend = request.strategy.backend\n\n    try:\n        user = backend.do_auth(\n            access_token=request.GET.get('access_token')\n            )\n    except Exception as err:\n        print err\n        user = None\n\n    if user and user.is_active:\n        return user# Return anything that makes sense here\n    else:\n        return None\n\n\nclass LoginWithFacebook(views.APIView):\n    permission_classes = (permissions.AllowAny,)\n    authentication_classes = (UnsafeSessionAuthentication,)\n\n    def get(self, request, backend, *args, **kwargs):\n        uid = request.GET.get(\"uid\", None)\n        if not uid:\n            return Response(\"No UID provided\", status=400)\n\n        user = auth_by_fb_token(request, backend)\n        if user:\n            #login(request, user)\n            strategy = load_strategy(request=request, backend=backend)\n            _do_login(strategy, user)\n            return Response(\"Login Successful!\")\n        else:\n            return Response(\"Bad Credentials, check the Token and/or the UID\", status=403)\n```\n\nAnd using `_do_login()` totally solved the problem!\n\nI'm astonished about the quality of the code of python-social-auth and how well it integrates (other packages are way too invasive) and how good it works.\n\n### KEEP ROCKIN'\n. I had the same issue - although a slightly different implementation in the views:\n\n``` python\n# For login with a Facebook account, decorators seems not play well with CBVs...\n@strategy()\ndef auth_by_fb_token(request, backend):\n    backend = request.strategy.backend\n\n    try:\n        user = backend.do_auth(\n            access_token=request.GET.get('access_token')\n            )\n    except Exception as err:\n        print err\n        user = None\n\n    if user and user.is_active:\n        return user# Return anything that makes sense here\n    else:\n        return None\n\n\nclass LoginWithFacebook(views.APIView):\n    permission_classes = (permissions.AllowAny,)\n    authentication_classes = (UnsafeSessionAuthentication,)\n\n    def get(self, request, backend, *args, **kwargs):\n        uid = request.GET.get(\"uid\", None)\n        if not uid:\n            return Response(\"No UID provided\", status=400)\n\n        user = auth_by_fb_token(request, backend)\n        if user:\n            #login(request, user)\n            strategy = load_strategy(request=request, backend=backend)\n            _do_login(strategy, user)\n            return Response(\"Login Successful!\")\n        else:\n            return Response(\"Bad Credentials, check the Token and/or the UID\", status=403)\n```\n\nAnd using `_do_login()` totally solved the problem!\n\nI'm astonished about the quality of the code of python-social-auth and how well it integrates (other packages are way too invasive) and how good it works.\n\n### KEEP ROCKIN'\n. ",
    "nwilson5": "I'm having a similar issue (\"'NoneType' object has no attribute 'get_user'\"). When I initially log in via google OpenId for example, it works fine. I can browse my site logged in for a minute or so. Then I start getting this error for every page.\n\nI'm using the default django_app/views.py for completing login, which implements _do_login. I notice the only difference I see between _do_login and django's login is _do_login looks for social_user.expiration_datetime(), which in my case is None.\n\nI'm not sure if there's something else going on with my middleware which may be mucking things up, but it's looking like my request.user is getting initialized to None thus all middleware I'm using that relies on checking request.user attributes is breaking. I made my own social_auth model, seeing as our user model is quite abstracted from standard django users. I may try adding expiration_datetime() method to my social_user model, and see if that does anything. But might you have an idea of where I might be straying?\n. 0.1.17.\n\nI'm finding in social.backends.base.BaseAuth in get_user():\n\n``` python\n    def get_user(self, user_id):\n        \"\"\"\n        Return user with given ID from the User model used by this backend.\n        This is called by django.contrib.auth.middleware.\n        \"\"\"\n        from social.strategies.utils import get_current_strategy\n        strategy = self.strategy or get_current_strategy()\n        return strategy.get_user(user_id)\n```\n\nThe times it breaks are due to strategy being None. The user_id is correct. I am not entirely sure how that variable is set and why it is None on some pageviews and correctly set in others.\n. That seems to have done it, thanks. I wasn't using social.apps.django_app.default (or mongoengine) in my installed apps (made my own).\n. Checked more closely in the logs, all the instances of this 500 are from a single user who keeps on crawling/spamming /login/google/ requests then incorrect /complete/ URL's. Not sure if I should catch this exception and display something else or just let them be weird.\n\nAnyways sorry for the false alarm.\n. Yeah, was confused by this error at first\n\"410 Client Error: Gone\"\n\nTurned out foursquare was returning this text:\n\n'The Foursquare API no longer supports requests that do not pass in a version parameter. For more details see https://developer.foursquare.com/overview/versioning'\n\nThanks for the fix.\n. I'm having a similar issue (\"'NoneType' object has no attribute 'get_user'\"). When I initially log in via google OpenId for example, it works fine. I can browse my site logged in for a minute or so. Then I start getting this error for every page.\n\nI'm using the default django_app/views.py for completing login, which implements _do_login. I notice the only difference I see between _do_login and django's login is _do_login looks for social_user.expiration_datetime(), which in my case is None.\n\nI'm not sure if there's something else going on with my middleware which may be mucking things up, but it's looking like my request.user is getting initialized to None thus all middleware I'm using that relies on checking request.user attributes is breaking. I made my own social_auth model, seeing as our user model is quite abstracted from standard django users. I may try adding expiration_datetime() method to my social_user model, and see if that does anything. But might you have an idea of where I might be straying?\n. 0.1.17.\n\nI'm finding in social.backends.base.BaseAuth in get_user():\n\n``` python\n    def get_user(self, user_id):\n        \"\"\"\n        Return user with given ID from the User model used by this backend.\n        This is called by django.contrib.auth.middleware.\n        \"\"\"\n        from social.strategies.utils import get_current_strategy\n        strategy = self.strategy or get_current_strategy()\n        return strategy.get_user(user_id)\n```\n\nThe times it breaks are due to strategy being None. The user_id is correct. I am not entirely sure how that variable is set and why it is None on some pageviews and correctly set in others.\n. That seems to have done it, thanks. I wasn't using social.apps.django_app.default (or mongoengine) in my installed apps (made my own).\n. Checked more closely in the logs, all the instances of this 500 are from a single user who keeps on crawling/spamming /login/google/ requests then incorrect /complete/ URL's. Not sure if I should catch this exception and display something else or just let them be weird.\n\nAnyways sorry for the false alarm.\n. Yeah, was confused by this error at first\n\"410 Client Error: Gone\"\n\nTurned out foursquare was returning this text:\n\n'The Foursquare API no longer supports requests that do not pass in a version parameter. For more details see https://developer.foursquare.com/overview/versioning'\n\nThanks for the fix.\n. ",
    "julienaubert": "I just upgraded from 0.1.22 to 0.1.23, and I see it changed signature of `_do_login` in reference to #190. This is however causing me issues as I am relying on `_do_login` as recommended here in #68.\n\nWhat is the canonical way to solve this? (I.e. not use non-public method so that it won't break on minor updates).\n. Actually, I am not sure I could reproduce #68 on 0.1.23. Will use login() for now. \n. @omab, thanks for the reply. I was just under the impression I had to use `_do_login` to avoid the issue reported here. Has it been confirmed that #68 is fixed / no need to use `_do_login`?\n. I just upgraded from 0.1.22 to 0.1.23, and I see it changed signature of `_do_login` in reference to #190. This is however causing me issues as I am relying on `_do_login` as recommended here in #68.\n\nWhat is the canonical way to solve this? (I.e. not use non-public method so that it won't break on minor updates).\n. Actually, I am not sure I could reproduce #68 on 0.1.23. Will use login() for now. \n. @omab, thanks for the reply. I was just under the impression I had to use `_do_login` to avoid the issue reported here. Has it been confirmed that #68 is fixed / no need to use `_do_login`?\n. ",
    "antitoxic": "`_do_login` no longer works with 2 arguments. What would the updated snippet be?\n. @omab yep. I got that far :) I'm simply passing what `_do_login` was making before: `user.social_user`\n\nIt might be useful to put a changelog warning somewhere.\n. `_do_login` no longer works with 2 arguments. What would the updated snippet be?\n. @omab yep. I got that far :) I'm simply passing what `_do_login` was making before: `user.social_user`\n\nIt might be useful to put a changelog warning somewhere.\n. ",
    "josseph": "@omab Authenticated successfully now. But the page was not  redirected  to http://test.com/done from http://test.com/complete/douban-oauth2/?code=fa07be221b26a9f4&state=9sZWB5FErO0Ufbk2R4FTM2LNrQYQ3Uuf\n\nThe page keep staying on http://www.gkkgo.com/complete/douban-oauth2/?code=fa07be221b26a9f4&state=9sZWB5FErO0Ufbk2R4FTM2LNrQYQ3Uuf,\nand the exception thrown like before. \n\n```\nAuthCanceled at /complete/douban-oauth2/\nAuthentication process canceled\n```\n\nI used the sample code for Django.   Here is the stack trace.\n\n```\n\n\nEnvironment:\n\n\nRequest Method: GET\nRequest URL: http://test.com/complete/douban-oauth2/?code=fa07be221b26a9f4&state=9sZWB5FErO0Ufbk2R4FTM2LNrQYQ3Uuf\n\nDjango Version: 1.5\nPython Version: 2.7.5\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.admin',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'social.apps.django_app.default',\n 'test.app')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\n\n\nTraceback:\nFile \"/Library/Python/2.7/site-packages/Django-1.5-py2.7.egg/django/core/handlers/base.py\" in get_response\n  115.                         response = callback(request, *callback_args, **callback_kwargs)\nFile \"/Library/Python/2.7/site-packages/Django-1.5-py2.7.egg/django/views/decorators/csrf.py\" in wrapped_view\n  77.         return view_func(*args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n  32.             return func(request, backend, *args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/apps/django_app/views.py\" in complete\n  25.                        redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/actions.py\" in do_complete\n  54.                                  *args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/strategies/base.py\" in complete\n  62.         return self.backend.auth_complete(*args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/backends/oauth.py\" in auth_complete\n  330.                 raise AuthCanceled(self)\n\nException Type: AuthCanceled at /complete/douban-oauth2/\nException Value: Authentication process canceled\n\n```\n. @omab, I installed it with pip.  I manually merged your fix to my environment to make sure the fix in. The change after the fix is when I manually switch to http://test.com/done , the connect status for douban is marked as \"connected\".  If not include this fix, no \"connected\" status marked for douban in http://test.com/done.\n. Proposed one solution to fix this issue. https://github.com/omab/python-social-auth/pull/100\nIf the fix has potential regression issue, just ignore it.  \n. @omab Authenticated successfully now. But the page was not  redirected  to http://test.com/done from http://test.com/complete/douban-oauth2/?code=fa07be221b26a9f4&state=9sZWB5FErO0Ufbk2R4FTM2LNrQYQ3Uuf\n\nThe page keep staying on http://www.gkkgo.com/complete/douban-oauth2/?code=fa07be221b26a9f4&state=9sZWB5FErO0Ufbk2R4FTM2LNrQYQ3Uuf,\nand the exception thrown like before. \n\n```\nAuthCanceled at /complete/douban-oauth2/\nAuthentication process canceled\n```\n\nI used the sample code for Django.   Here is the stack trace.\n\n```\n\n\nEnvironment:\n\n\nRequest Method: GET\nRequest URL: http://test.com/complete/douban-oauth2/?code=fa07be221b26a9f4&state=9sZWB5FErO0Ufbk2R4FTM2LNrQYQ3Uuf\n\nDjango Version: 1.5\nPython Version: 2.7.5\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.admin',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'social.apps.django_app.default',\n 'test.app')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\n\n\nTraceback:\nFile \"/Library/Python/2.7/site-packages/Django-1.5-py2.7.egg/django/core/handlers/base.py\" in get_response\n  115.                         response = callback(request, *callback_args, **callback_kwargs)\nFile \"/Library/Python/2.7/site-packages/Django-1.5-py2.7.egg/django/views/decorators/csrf.py\" in wrapped_view\n  77.         return view_func(*args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n  32.             return func(request, backend, *args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/apps/django_app/views.py\" in complete\n  25.                        redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/actions.py\" in do_complete\n  54.                                  *args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/strategies/base.py\" in complete\n  62.         return self.backend.auth_complete(*args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/backends/oauth.py\" in auth_complete\n  330.                 raise AuthCanceled(self)\n\nException Type: AuthCanceled at /complete/douban-oauth2/\nException Value: Authentication process canceled\n\n```\n. @omab, I installed it with pip.  I manually merged your fix to my environment to make sure the fix in. The change after the fix is when I manually switch to http://test.com/done , the connect status for douban is marked as \"connected\".  If not include this fix, no \"connected\" status marked for douban in http://test.com/done.\n. Proposed one solution to fix this issue. https://github.com/omab/python-social-auth/pull/100\nIf the fix has potential regression issue, just ignore it.  \n. ",
    "noirbizarre": "You're welcome !\n. You're welcome !\n. ",
    "kdazzle": "Oh, so simple! Thanks @omab \n. Oh, so simple! Thanks @omab \n. ",
    "Salma7amed": "Thanks a lot it did work (Y).\n. I am having the same problem, how shall I solve it.\n. @omab I cleared the session using \"python manage.py clearsessions\", but I am still getting the same error.\n. @omab no I don't have it.\n. Traceback (most recent call last):\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/handlers/base.py\", line 115, in get_response\n    response = callback(request, _callback_args, *_callback_kwargs)\n\n  File \"/home/azureuser/django/saludable/order/views.py\", line 21, in log_in\n    if request.user.is_authenticated():\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/utils/functional.py\", line 202, in inner\n    self._setup()\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/utils/functional.py\", line 268, in _setup\n    self._wrapped = self._setupfunc()\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/contrib/auth/middleware.py\", line 18, in <lambda>\n    request.user = SimpleLazyObject(lambda: get_user(request))\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/contrib/auth/middleware.py\", line 10, in get_user\n    request._cached_user = auth.get_user(request)\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/contrib/auth/**init**.py\", line 136, in get_user\n    backend = load_backend(backend_path)\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/contrib/auth/**init**.py\", line 24, in load_backend\n    raise ImproperlyConfigured('Module \"%s\" does not define a \"%s\" authentication backend' % (module, attr))\n\nImproperlyConfigured: Module \"social.apps.django_app.utils\" does not define a \"BackendWrapper\" authentication backend\n. Plz note I didn't have this problem when I was using the version 0.1.14, after I upgraded I got this error.\n. AUTHENTICATION_BACKENDS = (\n    'social.backends.facebook.FacebookOAuth2',\n    'order.backends.EmailOrUsernameModelBackend',\n    'django.contrib.auth.backends.ModelBackend',\n)\n\nhope this is what u r asking about ..\n. database-backend session - 'django.contrib.sessions' \nmy the db is MySQL.\n. Traceback (most recent call last):\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/handlers/base.py\", line 115, in get_response\n    response = callback(request, _callback_args, *_callback_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/views/decorators/csrf.py\", line 77, in wrapped_view\n    return view_func(_args, *_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/apps/django_app/utils.py\", line 32, in wrapper\n    return func(request, backend, _args, *_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/apps/django_app/views.py\", line 25, in complete\n    redirect_name=REDIRECT_FIELD_NAME, _args, *_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/actions.py\", line 54, in do_complete\n    _args, *_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/strategies/base.py\", line 69, in complete\n    return self.backend.auth_complete(_args, *_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/backends/facebook.py\", line 71, in auth_complete\n    'code': self.data['code']\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/utils/datastructures.py\", line 23, in **getitem**\n    raise KeyError\n. http://order.saludable.me/\n. @omab it seems the problem is as @tklovett stated. How can I avoid the raise of 500 ??!\n. @omab I just discovered that the cancel throws an \"AuthCanceled: Authentication process canceled\" and not \"KeyError\" as mentioned in the previous traceback posted.\n. Yes it's not.\n. According to the traceback I get the following is mentioned:\n 'REQUEST_URI': '/complete/facebook/?ref=search&fb_source=search',\n. @omab How can I get you this info. Especially that I have no idea when this error is triggered. I just get the 500 error email from django.\n. @omab to which mail shall I send the mail ??!.\n. @omab I think if it was in the facebook app or in my code, it would have been appearing for all users who try to signup with facebook ??\n. Where can I find the change u've added ??. And how will it help in finding what is causing this problem ??.\n. ok, now after upgrading to the latest version. The following is the error I get:\n\nTraceback (most recent call last):\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/handlers/base.py\", line 115, in get_response\n    response = callback(request, _callback_args, *_callback_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/views/decorators/csrf.py\", line 77, in wrapped_view\n    return view_func(_args, *_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/apps/django_app/utils.py\", line 45, in wrapper\n    return func(request, backend, _args, *_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/apps/django_app/views.py\", line 21, in complete\n    redirect_name=REDIRECT_FIELD_NAME, _args, *_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/actions.py\", line 44, in do_complete\n    _args, *_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/strategies/base.py\", line 67, in complete\n    return self.backend.auth_complete(_args, *_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/backends/facebook.py\", line 56, in auth_complete\n    raise AuthMissingParameter(self, 'code')\n\nAuthMissingParameter: Missing needed parameter code\n. Thanks a lot it did work (Y).\n. I am having the same problem, how shall I solve it.\n. @omab I cleared the session using \"python manage.py clearsessions\", but I am still getting the same error.\n. @omab no I don't have it.\n. Traceback (most recent call last):\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/handlers/base.py\", line 115, in get_response\n    response = callback(request, _callback_args, *_callback_kwargs)\n\n  File \"/home/azureuser/django/saludable/order/views.py\", line 21, in log_in\n    if request.user.is_authenticated():\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/utils/functional.py\", line 202, in inner\n    self._setup()\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/utils/functional.py\", line 268, in _setup\n    self._wrapped = self._setupfunc()\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/contrib/auth/middleware.py\", line 18, in <lambda>\n    request.user = SimpleLazyObject(lambda: get_user(request))\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/contrib/auth/middleware.py\", line 10, in get_user\n    request._cached_user = auth.get_user(request)\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/contrib/auth/**init**.py\", line 136, in get_user\n    backend = load_backend(backend_path)\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/contrib/auth/**init**.py\", line 24, in load_backend\n    raise ImproperlyConfigured('Module \"%s\" does not define a \"%s\" authentication backend' % (module, attr))\n\nImproperlyConfigured: Module \"social.apps.django_app.utils\" does not define a \"BackendWrapper\" authentication backend\n. Plz note I didn't have this problem when I was using the version 0.1.14, after I upgraded I got this error.\n. AUTHENTICATION_BACKENDS = (\n    'social.backends.facebook.FacebookOAuth2',\n    'order.backends.EmailOrUsernameModelBackend',\n    'django.contrib.auth.backends.ModelBackend',\n)\n\nhope this is what u r asking about ..\n. database-backend session - 'django.contrib.sessions' \nmy the db is MySQL.\n. Traceback (most recent call last):\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/handlers/base.py\", line 115, in get_response\n    response = callback(request, _callback_args, *_callback_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/views/decorators/csrf.py\", line 77, in wrapped_view\n    return view_func(_args, *_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/apps/django_app/utils.py\", line 32, in wrapper\n    return func(request, backend, _args, *_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/apps/django_app/views.py\", line 25, in complete\n    redirect_name=REDIRECT_FIELD_NAME, _args, *_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/actions.py\", line 54, in do_complete\n    _args, *_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/strategies/base.py\", line 69, in complete\n    return self.backend.auth_complete(_args, *_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/backends/facebook.py\", line 71, in auth_complete\n    'code': self.data['code']\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/utils/datastructures.py\", line 23, in **getitem**\n    raise KeyError\n. http://order.saludable.me/\n. @omab it seems the problem is as @tklovett stated. How can I avoid the raise of 500 ??!\n. @omab I just discovered that the cancel throws an \"AuthCanceled: Authentication process canceled\" and not \"KeyError\" as mentioned in the previous traceback posted.\n. Yes it's not.\n. According to the traceback I get the following is mentioned:\n 'REQUEST_URI': '/complete/facebook/?ref=search&fb_source=search',\n. @omab How can I get you this info. Especially that I have no idea when this error is triggered. I just get the 500 error email from django.\n. @omab to which mail shall I send the mail ??!.\n. @omab I think if it was in the facebook app or in my code, it would have been appearing for all users who try to signup with facebook ??\n. Where can I find the change u've added ??. And how will it help in finding what is causing this problem ??.\n. ok, now after upgrading to the latest version. The following is the error I get:\n\nTraceback (most recent call last):\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/handlers/base.py\", line 115, in get_response\n    response = callback(request, _callback_args, *_callback_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/django/views/decorators/csrf.py\", line 77, in wrapped_view\n    return view_func(_args, *_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/apps/django_app/utils.py\", line 45, in wrapper\n    return func(request, backend, _args, *_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/apps/django_app/views.py\", line 21, in complete\n    redirect_name=REDIRECT_FIELD_NAME, _args, *_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/actions.py\", line 44, in do_complete\n    _args, *_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/strategies/base.py\", line 67, in complete\n    return self.backend.auth_complete(_args, *_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/backends/facebook.py\", line 56, in auth_complete\n    raise AuthMissingParameter(self, 'code')\n\nAuthMissingParameter: Missing needed parameter code\n. ",
    "ChillarAnand": "Thank you @meconlin  I had the same problem. Your script helped me a lot!\n. Thank you @meconlin  I had the same problem. Your script helped me a lot!\n. ",
    "alexfalcucci": "Thanks man!\n. Thanks man!\n. ",
    "gonvaled": "@omab what if I really want to make sure that the integration of python social auth with my django project is working? I do not need to test that the social endpoints are working, but at least I would like to know that my site is doing right the request/reply cycle. How to go about this? Is there any example available?\n. @omab what if I really want to make sure that the integration of python social auth with my django project is working? I do not need to test that the social endpoints are working, but at least I would like to know that my site is doing right the request/reply cycle. How to go about this? Is there any example available?\n. ",
    "idchlife": "@gonvaled +1\n. @gonvaled +1\n. ",
    "denisonfire": "thx, the problem was in my API key, he was in an external file\n. thx, the problem was in my API key, he was in an external file\n. ",
    "dulacp": "This solve the exact same issue for me, thanks @omab !\n. Btw, do not move the `associate_user` above the `create_user`, like said before, only `associate_by_email`.\n\n``` python\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'social.pipeline.social_auth.associate_by_email',\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details'\n)\n```\n. @htch +1 Same thing for me, the following database integrity error\n\n``` psql\nERROR:  insert or update on table \"social_auth_usersocialauth\" violates foreign key constraint \"social_auth_usersocialauth_user_id_fkey\"\nDETAIL:  Key (user_id)=(66) is not present in table \"auth_user\".\n```\n\nfails silently because is catch by the line https://github.com/omab/python-social-auth/blob/21f462f18dd1b5917e811ab084e3470ce9969aa5/social/pipeline/social_auth.py#L39 (as @htch found out)\n. This solve the exact same issue for me, thanks @omab !\n. Btw, do not move the `associate_user` above the `create_user`, like said before, only `associate_by_email`.\n\n``` python\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'social.pipeline.social_auth.associate_by_email',\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details'\n)\n```\n. @htch +1 Same thing for me, the following database integrity error\n\n``` psql\nERROR:  insert or update on table \"social_auth_usersocialauth\" violates foreign key constraint \"social_auth_usersocialauth_user_id_fkey\"\nDETAIL:  Key (user_id)=(66) is not present in table \"auth_user\".\n```\n\nfails silently because is catch by the line https://github.com/omab/python-social-auth/blob/21f462f18dd1b5917e811ab084e3470ce9969aa5/social/pipeline/social_auth.py#L39 (as @htch found out)\n. ",
    "aroraprince": "Will this method work if I have a user registered on my webiste manually( i.e not using python- social-auth) using simple forms , and then he tries to register using some social login using same email address.\n. @omab I am using the following pipeline:\n\n```\nDEFAULT_AUTH_PIPELINE = (\n'social.pipeline.social_auth.social_details',\n'social.pipeline.social_auth.social_uid',\n'social.pipeline.social_auth.auth_allowed',\n'social.pipeline.social_auth.social_user',\n'social.pipeline.social_auth.associate_by_email',\n'social.pipeline.user.get_username',\n'social.pipeline.user.create_user',\n'social.pipeline.social_auth.associate_user',\n'social.pipeline.social_auth.load_extra_data',\n'social.pipeline.user.user_details'\n)\n```\n\nbut it does not seem to work in the above scenario.A new user gets registered when I try to register using OAuth.\n. @omab I have tried using gmail.\nMy gmail email id was already in the users table but still a new user was created when tried using social-auth.\n. @omab Yes, I think there isn't any problem\n. Yes, I think there isn't any problem with the database\n. @omab I tried logging in using OAuth after manually registering myself.\n. Will this method work if I have a user registered on my webiste manually( i.e not using python- social-auth) using simple forms , and then he tries to register using some social login using same email address.\n. @omab I am using the following pipeline:\n\n```\nDEFAULT_AUTH_PIPELINE = (\n'social.pipeline.social_auth.social_details',\n'social.pipeline.social_auth.social_uid',\n'social.pipeline.social_auth.auth_allowed',\n'social.pipeline.social_auth.social_user',\n'social.pipeline.social_auth.associate_by_email',\n'social.pipeline.user.get_username',\n'social.pipeline.user.create_user',\n'social.pipeline.social_auth.associate_user',\n'social.pipeline.social_auth.load_extra_data',\n'social.pipeline.user.user_details'\n)\n```\n\nbut it does not seem to work in the above scenario.A new user gets registered when I try to register using OAuth.\n. @omab I have tried using gmail.\nMy gmail email id was already in the users table but still a new user was created when tried using social-auth.\n. @omab Yes, I think there isn't any problem\n. Yes, I think there isn't any problem with the database\n. @omab I tried logging in using OAuth after manually registering myself.\n. ",
    "cgreinke": "Looks good!\n. Looks good!\n. ",
    "juanriaza": "@omab done\n. @sahilgupta you can always check the latest docs at [Read the Docs](http://python-social-auth.readthedocs.org/en/latest/configuration/django.html) and trigger a build on demand.\n. @devangmundhra [Porting from django-social-auth](http://psa.matiasaguirre.net/docs/configuration/porting_from_dsa.html)\n. @omab done\n. @sahilgupta you can always check the latest docs at [Read the Docs](http://python-social-auth.readthedocs.org/en/latest/configuration/django.html) and trigger a build on demand.\n. @devangmundhra [Porting from django-social-auth](http://psa.matiasaguirre.net/docs/configuration/porting_from_dsa.html)\n. ",
    "max107": "Quick fix:\n\nChange 38 line like this:\n\n``` py\nvalues['fullname'] = u'%s %s' % (values['first_name'], values['last_name'])\n```\n\nI don't know why with `format` method raises this exception.\n\nSorry, my english is bad.\n. Sorry, this fix only for python 2, i know.\n. Quick fix:\n\nChange 38 line like this:\n\n``` py\nvalues['fullname'] = u'%s %s' % (values['first_name'], values['last_name'])\n```\n\nI don't know why with `format` method raises this exception.\n\nSorry, my english is bad.\n. Sorry, this fix only for python 2, i know.\n. ",
    "Madd": "Was this broken by this conflict? Can't get it to work...\nhttps://github.com/omab/python-social-auth/commit/6bead862cb6edc62da87b93a61916e573fdd9594\n. Was this broken by this conflict? Can't get it to work...\nhttps://github.com/omab/python-social-auth/commit/6bead862cb6edc62da87b93a61916e573fdd9594\n. ",
    "sahilgupta": "@juanriaza Thank you for that pointer, I had no idea this was the case.\n\nI think then the README should be updated to reflect this fact.\n. @juanriaza Thank you for that pointer, I had no idea this was the case.\n\nI think then the README should be updated to reflect this fact.\n. ",
    "akamit": "Problem is that\nSOCIAL_AUTH_ODNOKLASSNIKI_PUBLIC_NAME\nshould be\nSOCIAL_AUTH_ODNOKLASSNIKI_OAUTH2_PUBLIC_NAME\n. Problem is that\nSOCIAL_AUTH_ODNOKLASSNIKI_PUBLIC_NAME\nshould be\nSOCIAL_AUTH_ODNOKLASSNIKI_OAUTH2_PUBLIC_NAME\n. ",
    "russian-master": "oh, thank you! now it works. I could spend a lot of time debugging it... \ndocumentation needs to be updated.\n. oh, thank you! now it works. I could spend a lot of time debugging it... \ndocumentation needs to be updated.\n. ",
    "hhhonzik": "I was trying to debug my code and I think it has something to do with oauth and unicode string (but can't figure out which var is throwing this error.\n\nHere is traceback:\nhttp://dpaste.com/1478161/\n. Thanks omab, you are right.\n\nFrom django-social-oauth LinkedIn key and secret variable has changed and I didn't see that.\n\nThank you very much.\n. I was trying to debug my code and I think it has something to do with oauth and unicode string (but can't figure out which var is throwing this error.\n\nHere is traceback:\nhttp://dpaste.com/1478161/\n. Thanks omab, you are right.\n\nFrom django-social-oauth LinkedIn key and secret variable has changed and I didn't see that.\n\nThank you very much.\n. ",
    "Sourabh87": "Hi friends\n\nI am trying to track multiple term tweets by following multiple users with a single stream object. but I am getting a trace back:\nTraceback (most recent call last):\n  File \"C:\\Python27\\nytimes\\20052014\\mutliple keyword from multiple user search.py\", line 45, in <module>\n    streaming_api.filter(follow=\"list_users\")\n  File \"build\\bdist.win32\\egg\\tweepy\\streaming.py\", line 313, in filter\n    self._start(async)\n  File \"build\\bdist.win32\\egg\\tweepy\\streaming.py\", line 235, in _start\n    self._run()\n  File \"build\\bdist.win32\\egg\\tweepy\\streaming.py\", line 151, in _run\n    timeout=self.timeout, stream=True, auth=auth)\n  File \"C:\\Python27\\lib\\site-packages\\requests-2.1.0-py2.7.egg\\requests\\sessions.py\", line 348, in request\n    prep = self.prepare_request(req)\n  File \"C:\\Python27\\lib\\site-packages\\requests-2.1.0-py2.7.egg\\requests\\sessions.py\", line 286, in prepare_request\n    hooks=merge_hooks(request.hooks, self.hooks),\n  File \"C:\\Python27\\lib\\site-packages\\requests-2.1.0-py2.7.egg\\requests\\models.py\", line 290, in prepare\n    self.prepare_auth(auth, url)\n  File \"C:\\Python27\\lib\\site-packages\\requests-2.1.0-py2.7.egg\\requests\\models.py\", line 469, in prepare_auth\n    r = auth(self)\n  File \"C:\\Python27\\lib\\site-packages\\requests_oauthlib-0.4.0-py2.7.egg\\requests_oauthlib\\oauth1_auth.py\", line 63, in __call__\n    unicode(r.url), unicode(r.method), r.body or '', r.headers)\n  File \"build\\bdist.win32\\egg\\oauthlib\\oauth1\\rfc5849__init__.py\", line 280, in sign\n    request.oauth_params.append(('oauth_signature', self.get_oauth_signature(request)))\n  File \"build\\bdist.win32\\egg\\oauthlib\\oauth1\\rfc5849__init__.py\", line 112, in get_oauth_signature\n    uri, headers, body = self._render(request)\n  File \"build\\bdist.win32\\egg\\oauthlib\\oauth1\\rfc5849__init__.py\", line 186, in _render\n    headers = parameters.prepare_headers(request.oauth_params, request.headers, realm=realm)\n  File \"build\\bdist.win32\\egg\\oauthlib\\oauth1\\rfc5849\\utils.py\", line 32, in wrapper\n    return target(params, _args, *_kwargs)\n  File \"build\\bdist.win32\\egg\\oauthlib\\oauth1\\rfc5849\\parameters.py\", line 58, in prepare_headers\n    escaped_value = utils.escape(value)\n  File \"build\\bdist.win32\\egg\\oauthlib\\oauth1\\rfc5849\\utils.py\", line 57, in escape\n    'Got %s of type %s.' % (u, type(u)))\nValueError: Only unicode objects are escapable. Got <generator object <genexpr> at 0x030160F8> of type <type 'generator'>.\n\nHelp me resolving it please.Thanks \nSourabh\n. I am running this code:\n\nimport tweepy\nconsumer_key=('XYZ'),\nconsumer_secret=('XYZ'),\naccess_key=('XYZ'),\naccess_secret=('XYZ')\nauth = tweepy.OAuthHandler(consumer_key, consumer_secret)\nauth.set_access_token(access_key, access_secret)\n#api=tweepy.API(auth)\n\nclass CustomStreamListener(tweepy.StreamListener):\n\n```\ndef on_status(self, status):\n\n\n    try:\n        print \"%s\\t%s\\t%s\\t%s\" % (status.text, \n                                  status.author.screen_name, \n                                  status.created_at, \n                                  status.source,)\n    except Exception, e:\n        print error\ndef on_error(self, status_code):\n    return True \n```\n\nstreaming_api = tweepy.streaming.Stream(auth, CustomStreamListener(), timeout=60)\nlist_users = ['17006157','59145948','157009365','16686144','68044757','33338729']   #Some ids\nlist_terms = ['ABC','XYZ']   #Some terms\nstreaming_api.filter(follow=\"list_users\")\nstreaming_api.filter(track=\"list_terms\")\n\nRegards\nSourabh\n. Sorry for your Inconvenience Omab. I posted it at the right place. \n\nThanks for the suggestion\n. Hi friends\n\nI am trying to track multiple term tweets by following multiple users with a single stream object. but I am getting a trace back:\nTraceback (most recent call last):\n  File \"C:\\Python27\\nytimes\\20052014\\mutliple keyword from multiple user search.py\", line 45, in <module>\n    streaming_api.filter(follow=\"list_users\")\n  File \"build\\bdist.win32\\egg\\tweepy\\streaming.py\", line 313, in filter\n    self._start(async)\n  File \"build\\bdist.win32\\egg\\tweepy\\streaming.py\", line 235, in _start\n    self._run()\n  File \"build\\bdist.win32\\egg\\tweepy\\streaming.py\", line 151, in _run\n    timeout=self.timeout, stream=True, auth=auth)\n  File \"C:\\Python27\\lib\\site-packages\\requests-2.1.0-py2.7.egg\\requests\\sessions.py\", line 348, in request\n    prep = self.prepare_request(req)\n  File \"C:\\Python27\\lib\\site-packages\\requests-2.1.0-py2.7.egg\\requests\\sessions.py\", line 286, in prepare_request\n    hooks=merge_hooks(request.hooks, self.hooks),\n  File \"C:\\Python27\\lib\\site-packages\\requests-2.1.0-py2.7.egg\\requests\\models.py\", line 290, in prepare\n    self.prepare_auth(auth, url)\n  File \"C:\\Python27\\lib\\site-packages\\requests-2.1.0-py2.7.egg\\requests\\models.py\", line 469, in prepare_auth\n    r = auth(self)\n  File \"C:\\Python27\\lib\\site-packages\\requests_oauthlib-0.4.0-py2.7.egg\\requests_oauthlib\\oauth1_auth.py\", line 63, in __call__\n    unicode(r.url), unicode(r.method), r.body or '', r.headers)\n  File \"build\\bdist.win32\\egg\\oauthlib\\oauth1\\rfc5849__init__.py\", line 280, in sign\n    request.oauth_params.append(('oauth_signature', self.get_oauth_signature(request)))\n  File \"build\\bdist.win32\\egg\\oauthlib\\oauth1\\rfc5849__init__.py\", line 112, in get_oauth_signature\n    uri, headers, body = self._render(request)\n  File \"build\\bdist.win32\\egg\\oauthlib\\oauth1\\rfc5849__init__.py\", line 186, in _render\n    headers = parameters.prepare_headers(request.oauth_params, request.headers, realm=realm)\n  File \"build\\bdist.win32\\egg\\oauthlib\\oauth1\\rfc5849\\utils.py\", line 32, in wrapper\n    return target(params, _args, *_kwargs)\n  File \"build\\bdist.win32\\egg\\oauthlib\\oauth1\\rfc5849\\parameters.py\", line 58, in prepare_headers\n    escaped_value = utils.escape(value)\n  File \"build\\bdist.win32\\egg\\oauthlib\\oauth1\\rfc5849\\utils.py\", line 57, in escape\n    'Got %s of type %s.' % (u, type(u)))\nValueError: Only unicode objects are escapable. Got <generator object <genexpr> at 0x030160F8> of type <type 'generator'>.\n\nHelp me resolving it please.Thanks \nSourabh\n. I am running this code:\n\nimport tweepy\nconsumer_key=('XYZ'),\nconsumer_secret=('XYZ'),\naccess_key=('XYZ'),\naccess_secret=('XYZ')\nauth = tweepy.OAuthHandler(consumer_key, consumer_secret)\nauth.set_access_token(access_key, access_secret)\n#api=tweepy.API(auth)\n\nclass CustomStreamListener(tweepy.StreamListener):\n\n```\ndef on_status(self, status):\n\n\n    try:\n        print \"%s\\t%s\\t%s\\t%s\" % (status.text, \n                                  status.author.screen_name, \n                                  status.created_at, \n                                  status.source,)\n    except Exception, e:\n        print error\ndef on_error(self, status_code):\n    return True \n```\n\nstreaming_api = tweepy.streaming.Stream(auth, CustomStreamListener(), timeout=60)\nlist_users = ['17006157','59145948','157009365','16686144','68044757','33338729']   #Some ids\nlist_terms = ['ABC','XYZ']   #Some terms\nstreaming_api.filter(follow=\"list_users\")\nstreaming_api.filter(track=\"list_terms\")\n\nRegards\nSourabh\n. Sorry for your Inconvenience Omab. I posted it at the right place. \n\nThanks for the suggestion\n. ",
    "maxtepkeev": "Thanks, but social.get_backend(strategy) returns a class, and I needed an instance of that class, so I did social.get_backend(strategy)(strategy=strategy) and got back an instance, and now everything works perfectly.\n\nMaybe it is a good idea to create a wrapper for the code above somewhere to ease access to backend instance object, thanks and feel free to close this issue.\n. Helper to get backend instance was introduced in https://github.com/omab/python-social-auth/issues/114#ref-commit-07124e7 and it workes perfectly. Closed.\n. Thanks, but social.get_backend(strategy) returns a class, and I needed an instance of that class, so I did social.get_backend(strategy)(strategy=strategy) and got back an instance, and now everything works perfectly.\n\nMaybe it is a good idea to create a wrapper for the code above somewhere to ease access to backend instance object, thanks and feel free to close this issue.\n. Helper to get backend instance was introduced in https://github.com/omab/python-social-auth/issues/114#ref-commit-07124e7 and it workes perfectly. Closed.\n. ",
    "valeriansaliou": "Oh yes, this one works. Thanks & sorry for disturbing.\n. Oh, yes. Could figure out that the consumer key was not being set, due to a renamed configuration variable between django-social-auth and python-social-auth.\n\nI was referring to the backend source file headers, which gives outdated configuration variable names. You should take some time to change all those to the new ones, as it can get some ppl lost ;)\n\nSorry for bothering, again. If you need me doing that, in sync with your docs, just ping me.\n. Oh yes, this one works. Thanks & sorry for disturbing.\n. Oh, yes. Could figure out that the consumer key was not being set, due to a renamed configuration variable between django-social-auth and python-social-auth.\n\nI was referring to the backend source file headers, which gives outdated configuration variable names. You should take some time to change all those to the new ones, as it can get some ppl lost ;)\n\nSorry for bothering, again. If you need me doing that, in sync with your docs, just ping me.\n. ",
    "tarunbehal": "Hi,\n\nCan you please suggest how this particular issue was fixed. I'm struck on this issue for long. Prompt response would be highly appreciated. Thanks in advance.\n. Ok Finally found it. The issue is with variable name. \n\n```\nSOCIAL_AUTH_TWITTER_KEY = ''\nSOCIAL_AUTH_TWITTER_SECRET = ''\n```\n. Hi,\n\nCan you please suggest how this particular issue was fixed. I'm struck on this issue for long. Prompt response would be highly appreciated. Thanks in advance.\n. Ok Finally found it. The issue is with variable name. \n\n```\nSOCIAL_AUTH_TWITTER_KEY = ''\nSOCIAL_AUTH_TWITTER_SECRET = ''\n```\n. ",
    "variable": "when I try your code, I got this error\n\nTypeError: unbound method oauth_request() must be called with MyOAuth instance as first argument (got dict instance instead)\n. Awesome, thanks, that worked.\n. when I try your code, I got this error\n\nTypeError: unbound method oauth_request() must be called with MyOAuth instance as first argument (got dict instance instead)\n. Awesome, thanks, that worked.\n. ",
    "airtonix": "My assumption was that any mention of emails with urls/views in the example were to do with triggering the required email pipeline when someone logged in with a social account that doesn't return with it an email address.\n. My assumption was that any mention of emails with urls/views in the example were to do with triggering the required email pipeline when someone logged in with a social account that doesn't return with it an email address.\n. ",
    "hansl": "When running generic tests on all our dependencies we are missing a few files. Adding them to the package would fix this.\n. When running generic tests on all our dependencies we are missing a few files. Adding them to the package would fix this.\n. ",
    "monkut": "Unfortunately, pip is using the system's native encoding, and not trying to decode via utf8.  \nI suppose this could be considered a bug in pip, but the PKG-INFO format seems to define ASCII as the encoding.\n\nhttp://www.python.org/dev/peps/pep-0241/\n\n> The PKG-INFO file format is a single set of RFC-822 headers\n>    parseable by the rfc822.py module.\n\nhttp://www.ietf.org/rfc/rfc0822.txt\n\n> Each header field can be viewed as a single, logical  line  of\n>        ASCII  characters,  comprising  a field-name and a field-body.\n. I would think this would install fine on the majority of \"western\" machines, but this is on a japanese win7 installation.  \n. Unfortunately, pip is using the system's native encoding, and not trying to decode via utf8.  \nI suppose this could be considered a bug in pip, but the PKG-INFO format seems to define ASCII as the encoding.\n\nhttp://www.python.org/dev/peps/pep-0241/\n\n> The PKG-INFO file format is a single set of RFC-822 headers\n>    parseable by the rfc822.py module.\n\nhttp://www.ietf.org/rfc/rfc0822.txt\n\n> Each header field can be viewed as a single, logical  line  of\n>        ASCII  characters,  comprising  a field-name and a field-body.\n. I would think this would install fine on the majority of \"western\" machines, but this is on a japanese win7 installation.  \n. ",
    "ananelson": "Oops, sorry. I thought this was the problem, and installing a different version of requests changed the error message I was getting, but now that I fixed the real problem the latest version of requests seems fine.\n. Oops, sorry. I thought this was the problem, and installing a different version of requests changed the error message I was getting, but now that I fixed the real problem the latest version of requests seems fine.\n. ",
    "roberto-robles": "Btw if I use this Backend with a new Yahoo account the error is not raised, only with my Old Yahoo account.\n\nHope this can help, thanks for such great job with Python social auth.\n. Removed prefix.\n\nThanks!\n. Btw if I use this Backend with a new Yahoo account the error is not raised, only with my Old Yahoo account.\n\nHope this can help, thanks for such great job with Python social auth.\n. Removed prefix.\n\nThanks!\n. ",
    "hekevintran": "Pretty good.  python-social-auth has evolved a very nice set of abstractions by the way.  Thanks for merging!\n. Pretty good.  python-social-auth has evolved a very nice set of abstractions by the way.  Thanks for merging!\n. ",
    "andreasofthings": "django shell:\n\n```\n>>> from django.conf import settings\n>>> settings.AUTHENTICATION_BACKENDS\n('social.backends.facebook.FacebookOAuth2', 'social.backends.google.GoogleOAuth2', 'social.backends.twitter.TwitterOAuth', 'social.backends.email.EmailAuth', 'social.backends.username.UsernameAuth', 'django.contrib.auth.backends.ModelBackend')\n```\n\nhowever:\n\n```\nBACKENDS = settings.AUTHENTICATION_BACKENDS\n\n[...]\n\ndef load_strategy(*args, **kwargs):\n    logger.error(\"BACKENDS: %s\", BACKENDS)\n    # replace BACKENDS with settings.AUTHENTICATION_BACKENDS as a workaround\n    return get_strategy(settings.AUTHENTICATION_BACKENDS, STRATEGY, STORAGE, *args, **kwargs)\n```\n\nproduces:\n\n```\n2013-12-22 14:13:59,753 ERROR social.apps.django_app.utils.load_strategy: BACKENDS: ('django.contrib.auth.backends.ModelBackend',)\n```\n\nseems settings.AUTHENTICATION_BACKENDS is still default values by the time it is assigned (?) Now that I think about it I'm really not sure anymore why this is.\n. I spent some more time investigating this, but couldn't come up with an idea how settings loading should be different in my setup.\n\n`from django.conf import settings` is in use in other places and works there.\n\nWhat would cause such a behavior? This could happen in other installations too, I presume.\n. Haven't made progress, but it's repeatable. Had to do a clean deploy of the application. New venv, pip install -r requirements.txt.\n\nSame behavior.\n. django shell:\n\n```\n>>> from django.conf import settings\n>>> settings.AUTHENTICATION_BACKENDS\n('social.backends.facebook.FacebookOAuth2', 'social.backends.google.GoogleOAuth2', 'social.backends.twitter.TwitterOAuth', 'social.backends.email.EmailAuth', 'social.backends.username.UsernameAuth', 'django.contrib.auth.backends.ModelBackend')\n```\n\nhowever:\n\n```\nBACKENDS = settings.AUTHENTICATION_BACKENDS\n\n[...]\n\ndef load_strategy(*args, **kwargs):\n    logger.error(\"BACKENDS: %s\", BACKENDS)\n    # replace BACKENDS with settings.AUTHENTICATION_BACKENDS as a workaround\n    return get_strategy(settings.AUTHENTICATION_BACKENDS, STRATEGY, STORAGE, *args, **kwargs)\n```\n\nproduces:\n\n```\n2013-12-22 14:13:59,753 ERROR social.apps.django_app.utils.load_strategy: BACKENDS: ('django.contrib.auth.backends.ModelBackend',)\n```\n\nseems settings.AUTHENTICATION_BACKENDS is still default values by the time it is assigned (?) Now that I think about it I'm really not sure anymore why this is.\n. I spent some more time investigating this, but couldn't come up with an idea how settings loading should be different in my setup.\n\n`from django.conf import settings` is in use in other places and works there.\n\nWhat would cause such a behavior? This could happen in other installations too, I presume.\n. Haven't made progress, but it's repeatable. Had to do a clean deploy of the application. New venv, pip install -r requirements.txt.\n\nSame behavior.\n. ",
    "mikek": "I am trying to avoid hardcoding backends and really ended up with a similar custom template tag. Thanks.\n. I am trying to avoid hardcoding backends and really ended up with a similar custom template tag. Thanks.\n. ",
    "coveralls": "[![Coverage Status](https://coveralls.io/builds/2299099/badge)](https://coveralls.io/builds/2299099)\n\nChanges Unknown when pulling **d208d71d4f170b89e204c3594bfa8e7b3aeeeeff on ncortot:mongoengine-auth** into *\\* on omab:master**.\n. [![Coverage Status](https://coveralls.io/builds/6703199/badge)](https://coveralls.io/builds/6703199)\n\nChanges Unknown when pulling **6b021c559d9cce38e2a22ccb35db661037ffc062 on kabelsea:master** into *\\* on omab:master**.\n. [![Coverage Status](https://coveralls.io/builds/2299099/badge)](https://coveralls.io/builds/2299099)\n\nChanges Unknown when pulling **d208d71d4f170b89e204c3594bfa8e7b3aeeeeff on ncortot:mongoengine-auth** into *\\* on omab:master**.\n. [![Coverage Status](https://coveralls.io/builds/6703199/badge)](https://coveralls.io/builds/6703199)\n\nChanges Unknown when pulling **6b021c559d9cce38e2a22ccb35db661037ffc062 on kabelsea:master** into *\\* on omab:master**.\n. ",
    "empty": "Well with Tumblr the \"username\" is not in the response it's only in the details. So the \"username\" is always None. Tumblr calls it \"name\" and it's in the \"response\" of response.\n. @omab Sorry for not getting back to you. That actually will not fix the problem. I tried that at first. The issue is not the wrong key but the wrong thing being inspected. I had to subclass the Tumblr and do the following. Hopefully this will explain the issue:\n\n```\nfrom social.backends.tumblr import TumblrOAuth\n\nclass TumblrBackend(TumblrOAuth):\n\n    def get_user_id(self, details, response):\n        \"\"\"Must return a unique ID from values returned on details\"\"\"\n        return details.get(self.ID_KEY)\n```\n. @omab Yeah this will help explain it:\n\n```\n(Pdb) response\n{'access_token': {u'oauth_token_secret': u'nFJVzLUBsOdFag6FlHi9oqI47s4lzEMER2fukWXnLvHVoZRNnT', u'oauth_token': u'yywZWdPrYqOQmLOMjvJgX0pRfz4nlNKkuKqK16BIXZfoVbcGbU'}, u'meta': {u'status': 200, u'msg': u'OK'}, u'response': {u'user': {u'following': 0, u'blogs': [{u'updated': 1389913770, u'description': u'', u'drafts': 0, u'title': u'Untitled', u'url': u'http://mtriereldarion.tumblr.com/', u'messages': 0, u'tweet': u'N', u'share_likes': True, u'posts': 13, u'primary': True, u'queue': 0, u'admin': True, u'followers': 0, u'ask': False, u'facebook': u'N', u'type': u'public', u'facebook_opengraph_enabled': u'N', u'name': u'mtriereldarion'}], u'default_post_format': u'html', u'name': u'mtriereldarion', u'likes': 10}}}\n(Pdb) response.keys()\n['access_token', u'meta', u'response']\n(Pdb) response[\"name\"]\n*** KeyError: 'name'\n(Pdb) response[\"response\"][\"user\"][\"name\"]\nu'mtriereldarion'\n(Pdb) details\n{'username': u'mtriereldarion', 'fullname': u'Untitled'}\n```\n. @omab Yep I'll give it a shot tomorrow. Thanks.\n. @omab Works perfectly. Thank you.\n. Well with Tumblr the \"username\" is not in the response it's only in the details. So the \"username\" is always None. Tumblr calls it \"name\" and it's in the \"response\" of response.\n. @omab Sorry for not getting back to you. That actually will not fix the problem. I tried that at first. The issue is not the wrong key but the wrong thing being inspected. I had to subclass the Tumblr and do the following. Hopefully this will explain the issue:\n\n```\nfrom social.backends.tumblr import TumblrOAuth\n\nclass TumblrBackend(TumblrOAuth):\n\n    def get_user_id(self, details, response):\n        \"\"\"Must return a unique ID from values returned on details\"\"\"\n        return details.get(self.ID_KEY)\n```\n. @omab Yeah this will help explain it:\n\n```\n(Pdb) response\n{'access_token': {u'oauth_token_secret': u'nFJVzLUBsOdFag6FlHi9oqI47s4lzEMER2fukWXnLvHVoZRNnT', u'oauth_token': u'yywZWdPrYqOQmLOMjvJgX0pRfz4nlNKkuKqK16BIXZfoVbcGbU'}, u'meta': {u'status': 200, u'msg': u'OK'}, u'response': {u'user': {u'following': 0, u'blogs': [{u'updated': 1389913770, u'description': u'', u'drafts': 0, u'title': u'Untitled', u'url': u'http://mtriereldarion.tumblr.com/', u'messages': 0, u'tweet': u'N', u'share_likes': True, u'posts': 13, u'primary': True, u'queue': 0, u'admin': True, u'followers': 0, u'ask': False, u'facebook': u'N', u'type': u'public', u'facebook_opengraph_enabled': u'N', u'name': u'mtriereldarion'}], u'default_post_format': u'html', u'name': u'mtriereldarion', u'likes': 10}}}\n(Pdb) response.keys()\n['access_token', u'meta', u'response']\n(Pdb) response[\"name\"]\n*** KeyError: 'name'\n(Pdb) response[\"response\"][\"user\"][\"name\"]\nu'mtriereldarion'\n(Pdb) details\n{'username': u'mtriereldarion', 'fullname': u'Untitled'}\n```\n. @omab Yep I'll give it a shot tomorrow. Thanks.\n. @omab Works perfectly. Thank you.\n. ",
    "geekan": "I'm using HTTP_REFERER in request.META, but I'm not sure it'll work forever..\n. Understand.\nI think it can be used as an example like you write, or it may not be easily understand.\nAnd if there is a url like http://www.server.com/?next=http://www.server.com/?page=1?x=2 , will it be redirected correctly?\n. Thanks!\n. I'm using HTTP_REFERER in request.META, but I'm not sure it'll work forever..\n. Understand.\nI think it can be used as an example like you write, or it may not be easily understand.\nAnd if there is a url like http://www.server.com/?next=http://www.server.com/?page=1?x=2 , will it be redirected correctly?\n. Thanks!\n. ",
    "ghost": "I can confirm - error still there...\n\nPython 3.3.3, Django 1.6.1\n\n``` python3\nStacktrace (most recent call last):\n\n  File \"django/core/handlers/base.py\", line 201, in get_response\n    response = middleware_method(request, response)\n  File \"django/contrib/sessions/middleware.py\", line 38, in process_response\n    request.session.save()\n  File \"django/contrib/sessions/backends/db.py\", line 57, in save\n    session_data=self.encode(self._get_session(no_load=must_create)),\n  File \"django/contrib/sessions/backends/base.py\", line 87, in encode\n    serialized = self.serializer().dumps(session_dict)\n  File \"django/core/signing.py\", line 88, in dumps\n    return json.dumps(obj, separators=(',', ':')).encode('latin-1')\n  File \"json/__init__.py\", line 243, in dumps\n    **kw).encode(obj)\n  File \"json/encoder.py\", line 191, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n  File \"json/encoder.py\", line 249, in iterencode\n    return _iterencode(o, 0)\n  File \"json/encoder.py\", line 173, in default\n    raise TypeError(repr(o) + \" is not JSON serializable\")\n```\n. @omab,\n\n``` python3\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'bemycobase.pipeline.require_email_username_birthdate_sex_city',\n    # 'social.pipeline.mail.mail_validation',\n    'bemycobase.pipeline.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details'\n)\n```\n\n``` python3\nfrom datetime import datetime\nimport traceback\nfrom account.models import EmailAddress\nfrom django.contrib import messages\nfrom django.shortcuts import redirect\nfrom django.utils.translation import ugettext_lazy as _\nfrom social.pipeline.partial import partial\nimport sys\n\n\n@partial\ndef require_email_username_birthdate_sex_city(strategy, details, user=None,\n                                              is_new=False, *args, **kwargs):\n    if user and user.email and user.username and user.first_name \\\n        and user.last_name and user.birthdate and user.sex \\\n        and user.city:\n        return\n    elif is_new and (not details.get('email') or not details.get('username')\n                     or not details.get('first_name')\n                     or not details.get('last_name')\n                     or not details.get('birthdate') or not details.get('sex')\n                     or not details.get('city_id')):\n        if strategy.session_get('saved_email') and \\\n                strategy.session_get('saved_username') and \\\n                strategy.session_get('saved_first_name') and \\\n                strategy.session_get('saved_last_name') and \\\n                strategy.session_get('saved_birthdate') and \\\n                strategy.session_get('saved_sex') and \\\n                strategy.session_get('saved_city_id'):\n            details['email'] = strategy.session_pop('saved_email')\n            details['username'] = strategy.session_pop('saved_username')\n            details['first_name'] = strategy.session_pop('saved_first_name')\n            details['last_name'] = strategy.session_pop('saved_last_name')\n            details['birthdate'] = strategy.session_pop('saved_birthdate')\n            details['sex'] = strategy.session_pop('saved_sex')\n            details['city_id'] = strategy.session_pop('saved_city_id')\n        else:\n            return redirect(\n                'bemycobase:require_email_username_birthdate_sex_city')\n\ndef create_user(strategy, details, response, uid, user=None, *args, **kwargs):\n    if user:\n        return\n\n    fields = dict((name, kwargs.get(name) or details.get(name))\n                        for name in strategy.setting('USER_FIELDS'))\n    if not fields:\n        return\n\n    fields['birthdate'] = datetime.strptime(details.get('birthdate'),\n                                            '%Y-%m-%d')\n    try:\n        created_user = strategy.create_user(**fields)  # commit=False,\n        # prevent User post_save signal from creating an Account instance\n        # we want to handle that ourself.\n        # created_user._disable_account_creation = True\n        created_user.username = details.get('username')\n        created_user.save()\n        # created_email = EmailAddress.objects.add_email(created_user,\n        #                                                created_user.email,\n        #                                                **{'primary': True,\n        #                                                   'verified': False,\n        #                                                   'confirm': True})\n        # Account.create(request=strategy.request, user=created_user,\n        # create_email=False)\n        email_address = EmailAddress.objects.get(user=created_user,\n                                                 email=created_user.email)\n        email_address.send_confirmation()\n        messages.add_message(\n            strategy.request,\n            messages.INFO,\n            _(\"Confirmation email sent to {email}.\").format(**{\n                \"email\": details.get(\"email\")\n            })\n        )\n        return {\n            'is_new': True,\n            'user': created_user\n        }\n    except:\n        exc_type, exc_value, exc_traceback = sys.exc_info()\n        lines = traceback.format_exception(exc_type, exc_value, exc_traceback)\n        debug = ''.join('!! ' + line for line in lines)\n\n```\n. But you can ignore my custom pipelines because of I can't associate my current user account with Twitter too...\n. @omab tested trunk, it works fine... (before I used latest pip)\n. @omab, it doesn't help me. I also have such error with facebook and twitter. \n. @omab. nope it also didn't fix it. some technical details:\n`$ pip freeze\nDjango==1.6.2\nSouth==0.8.4\nanyjson==0.3.3\nargparse==1.2.1\nbeautifulsoup4==4.3.2\ndistribute==0.6.24\ndjango-htmlmin==0.6.3\ndjango-registration==1.0\ndjango-tinymce==1.5.2\noauthlib==0.6.1\npython-openid==2.2.5\n-e git+https://github.com/omab/python-social-auth.git@062552926c30379d13058ad11a3c9a76663c9b95#egg=python_social_auth-dev\npytz==2013.9\nrequests==2.2.1\nrequests-oauthlib==0.4.0\nsix==1.6.1\nsorl-thumbnail==11.12\nsqlparse==0.1.11\ntimezones==1.6\nwsgiref==0.1.2`\nTrace:\n\n```\nEnvironment:\n\n\nRequest Method: GET\nRequest URL: http://localhost/complete/facebook/?redirect_state=U53FUiZTj6TAzFH4RYrpffKEDfK3ORfW&code=AQAYwwCXDgN05xlpAOjvq6esW46JmFUdCTsHpQdQ41hi4yPc7iQ9OwUxQr0k3-yaVoq9GTtvIjYuGrZx6OfEBUn7joQZWmT1AGVOkMg4GnyD1HmryhoBeopII6HiBF2Q-Bu6bDp5xZUdMkwk_N7Mdr4wGAeF9QwjMg1D6jpHpxksaSWdGGlJa6JNDpBCY5mwVqFRVB51ez7ToQZP9N6UyyeX0Hf4OsMRVVyHajqrntFyw-2LTmSVJpI5cIT4d9gmAopzbqyk-3RCjnpxCHNYFrDtoL_UKf7TN8qcmBrY80ZACKWbcpN93rZrB0Dd4ijtKl4&state=U53FUiZTj6TAzFH4RYrpffKEDfK3ORfW\n\nDjango Version: 1.6.2\nPython Version: 2.7.3\nInstalled Applications:\n('south',\n 'gdata',\n 'captcha',\n 'timezones',\n 'registration',\n 'sorl.thumbnail',\n 'django.contrib.auth',\n 'django.contrib.sessions',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.contenttypes',\n 'social.apps.django_app.default',\n 'site.main',\n 'grappelli',\n 'django_extensions',\n 'django.contrib.admin')\nInstalled Middleware:\n('htmlmin.middleware.HtmlMinifyMiddleware',\n 'django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\n\n\nTraceback:\nFile \"/home/site/www/.env/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n  114.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/home/site/www/.env/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n  57.         return view_func(*args, **kwargs)\nFile \"/home/site/www/.env/lib/python2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n  45.             return func(request, backend, *args, **kwargs)\nFile \"/home/site/www/.env/lib/python2.7/site-packages/social/apps/django_app/views.py\" in complete\n  21.                        redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\nFile \"/home/site/www/.env/lib/python2.7/site-packages/social/actions.py\" in do_complete\n  61.             login(strategy, user, social_user)\nFile \"/home/site/www/.env/lib/python2.7/site-packages/social/apps/django_app/views.py\" in _do_login\n  41.         expiration = social_user.expiration_datetime()\n\nException Type: AttributeError at /complete/facebook/\nException Value: 'NoneType' object has no attribute 'expiration_datetime'\n```\n\nit is almost the same as in OP trace.\n. @omab it's quite a challenge for me. I will try it, but I definitely need some time for investigations.\nBy the way, can this be related due to I'm using a custom User Model?\n( SOCIAL_AUTH_USER_MODEL and AUTH_USER_MODEL are defined in settings.py )\n. @omab, I tried to make a simple app to reproduce and there it works without this error. This is really strange as all things are absolutely the same (even User model app is just copied from my project ). I will try to find the diff between simple app and my. Hope I'll be lucky enough to catch the root.\n. @htch , check you database. when I recreated it from scratch everything became fine. I didn't figure out what was wrong in database, but the evil is in it. I still have both databases and with the old one I still can reproduce the bug. So it looks like some migration broke it at my side. \n. Confirm that. Downgrading solves the 403 Forbidden issue with google.\n. I solved it by inserting below code in settings\r\nSOCIAL_AUTH_PIPELINE = (\r\n    'social_core.pipeline.user.user_details',\r\n). Anyone?\n. >  if it's duplicated, then a extra hash will be added (so they are never repeated)\n\nThat's the problem here, it doesn't seem to add an extra hash when there are collisions. I logged in using two different Steam accounts with the same username then this happened.\n\nAnyway, I solved the problem by writing a custom pipeline to replace usernames with Steam UIDs, it's good enough for my requirements.\n\nThanks!\n. looking into the issue further, it seems problem maybe with the API version. v2.3 -> v2.4\n. Also I suggest to use https://docs.djangoproject.com/en/1.9/ref/contrib/postgres/fields/#django.contrib.postgres.fields.JSONField\n\nif Django >= 1.9 and django.contrib.postgres in installed apps...\n. @gitfred we ended up just following this guide and implementing it ourselves, and had an easier time integratng it to our existing auth solution \n\nhttps://developers.google.com/identity/sign-in/android/offline-access\n. Hi @liberathor ,\r\n\r\nWe don't use this code anymore but this is the gist of it. Hope it helps!\r\n\r\n```python\r\nimport datetime\r\nimport logging\r\n\r\nimport pytz\r\nfrom oauth2client import crypt\r\nfrom django.conf import settings\r\nfrom oauth2client import client as oauth_client\r\n\r\nclass GoogleAuthBridge:\r\n    def __init__(self, uses_new_google_client_id):\r\n        self.uses_new_google_client_id = uses_new_google_client_id\r\n\r\n    def validate_token(self, token):\r\n        try:\r\n            client_id_for_verification = settings.GOOGLE_SERVER_CLIENT_ID if self.uses_new_google_client_id else settings.GOOGLE_SERVICE_ACCOUNT_CLIENT_ID\r\n            idinfo = oauth_client.verify_id_token(token, client_id_for_verification)\r\n            # If multiple clients access the backend server:\r\n            if idinfo['aud'] not in [settings.GOOGLE_ANDROID_CLIENT_ID, settings.GOOGLE_IOS_CLIENT_ID,\r\n                                     settings.GOOGLE_SERVER_CLIENT_ID, settings.GOOGLE_WEB_CLIENT_ID,\r\n                                     settings.GOOGLE_SERVICE_ACCOUNT_CLIENT_ID]:\r\n                raise crypt.AppIdentityError(\"Unrecognized client.\")\r\n            if idinfo['iss'] not in ['accounts.google.com', 'https://accounts.google.com']:\r\n                raise crypt.AppIdentityError(\"Wrong issuer.\")\r\n        except crypt.AppIdentityError:\r\n            # Invalid token\r\n            return None, None\r\n\r\n        # Convert from google's timestamp to our \"seconds till expiration\" format\r\n        expiration_timestamp = int(idinfo['exp'])\r\n        now = datetime.datetime.now(tz=pytz.UTC)\r\n        expiration_time = datetime.datetime.fromtimestamp(expiration_timestamp).replace(tzinfo=pytz.UTC)\r\n        seconds_till_expiration = expiration_time - now\r\n        return token, seconds_till_expiration.seconds\r\n`. I don't know whether this will solve your problem, but i hope this might help you.\n\nI was getting the same error with the code:\n\nclass TestGoogleLogin(unittest.TestCase):\n\n```\ndef setUp(self):\n    self.client = Client()\n\ndef fake_social_complete(request, backend=None, *args, **kwargs):\n    return HttpResponseRedirect('.')\n\n@mock.patch('something.views.login', side_effect=fake_social_complete)\ndef test_login(self, mock_social):\n    self.user = User.objects.create_user(email=\"test@test.com\", username=\"test\", password=\"test\")\n    self.client.login(username=\"test\", password=\"test\")\n    self.factory = RequestFactory()\n    request = self.factory.get('/')\n    request.user = self.user\n    middleware = SessionMiddleware()\n    middleware.process_request(request)\n    request.session.save()\n    response = self.client.get('/complete/google-oauth2')\n    self.assertTrue(response.client)\n```\n\n---\n\nI have changed the unittest.TestCase to django.test.testcases.LiveServerTestCase and it stopped throwing the error and started working\n. @anderflash :+1: Got my OAuth login ironed out thanks friend\n. Agreed. Having the same issue. Thanks for the tip!\n. I am getting only this error in my console:\r\n\r\n```\r\n[02/Dec/2016 06:58:22]\"GET /login/any-oidc/ HTTP/1.1\" 302 0\r\nNo handlers could be found for logger \"social\"\r\nERROR Internal Server Error: /complete/any-oidc/\r\nTraceback (most recent call last):\r\n  File \"/Users/ranvijay.s/.virtualenvs/env/lib/python2.7/site-packages/django/core/handlers/base.py\", line 138, in get_response\r\n    response = middleware_method(request, e)\r\n  File \"/Users/ranvijay.s/.virtualenvs/env/lib/python2.7/site-packages/social/apps/django_app/middleware.py\", line 45, in process_exception\r\n    return redirect(url)\r\n  File \"/Users/ranvijay.s/.virtualenvs/env/lib/python2.7/site-packages/django/shortcuts.py\", line 116, in redirect\r\n    return redirect_class(resolve_url(to, *args, **kwargs))\r\n  File \"/Users/ranvijay.s/.virtualenvs/env/lib/python2.7/site-packages/django/shortcuts.py\", line 211, in resolve_url\r\n    if '/' not in to and '.' not in to:\r\nTypeError: argument of type 'NoneType' is not iterable\r\n[02/Dec/2016 06:58:34]\"GET /complete/any-oidc/?state=gHgDNqsb27ij7uWcPh8FXSFE2ja7iUBr&code=4/Yf6xHAaCGk3v_B9Cd4gKcmuRmVQlyOgIhwjcFiENJ1k&authuser=0&hd=zymr.com&session_state=13bca00e792c51d91ce538cf1efde8b40cb1c402..ab7a&prompt=consent HTTP/1.1\" 500 91031\r\n```\r\n. python-social-auth==0.2.21\r\nLOGIN_ERROR_URL is not defined. you mean to say we need to add a custom view for error like...\r\n\r\nmiddleware.py\r\n\r\n```\r\nclass ExampleSocialAuthExceptionMiddleware(SocialAuthExceptionMiddleware):\r\n    def raise_exception(self, request, exception):\r\n        return False\r\n\r\n    def get_message(self, request, exception):\r\n        if isinstance(exception, AuthAlreadyAssociated):\r\n            return 'Somebody is already using that account!'\r\n        return super(ExampleSocialAuthExceptionMiddleware, self) \\\r\n            .get_message(request, exception)\r\n\r\n    def get_redirect_uri(self, request, exception):\r\n        if request.user.is_authenticated():\r\n            return reverse('done')\r\n        else:\r\n            return reverse('error')\r\n```\r\n\r\nview.py\r\n```\r\nclass AuthError(TemplateView):\r\n    template_name = 'error.html'\r\n```\r\n\r\nurls.py\r\n`url(r'^error/$', views.AuthError.as_view(), name='error'),`. How will we integrate same with Django rest-framework?\r\nIn my project, we are using angular for the front end. \r\nHere backend port: 8000 and frontend port: 9000\r\nSo please tell me how we will redirect back Django standard templates to angular with User(info) valid token.. I can confirm - error still there...\n\nPython 3.3.3, Django 1.6.1\n\n``` python3\nStacktrace (most recent call last):\n\n  File \"django/core/handlers/base.py\", line 201, in get_response\n    response = middleware_method(request, response)\n  File \"django/contrib/sessions/middleware.py\", line 38, in process_response\n    request.session.save()\n  File \"django/contrib/sessions/backends/db.py\", line 57, in save\n    session_data=self.encode(self._get_session(no_load=must_create)),\n  File \"django/contrib/sessions/backends/base.py\", line 87, in encode\n    serialized = self.serializer().dumps(session_dict)\n  File \"django/core/signing.py\", line 88, in dumps\n    return json.dumps(obj, separators=(',', ':')).encode('latin-1')\n  File \"json/__init__.py\", line 243, in dumps\n    **kw).encode(obj)\n  File \"json/encoder.py\", line 191, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n  File \"json/encoder.py\", line 249, in iterencode\n    return _iterencode(o, 0)\n  File \"json/encoder.py\", line 173, in default\n    raise TypeError(repr(o) + \" is not JSON serializable\")\n```\n. @omab,\n\n``` python3\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'bemycobase.pipeline.require_email_username_birthdate_sex_city',\n    # 'social.pipeline.mail.mail_validation',\n    'bemycobase.pipeline.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details'\n)\n```\n\n``` python3\nfrom datetime import datetime\nimport traceback\nfrom account.models import EmailAddress\nfrom django.contrib import messages\nfrom django.shortcuts import redirect\nfrom django.utils.translation import ugettext_lazy as _\nfrom social.pipeline.partial import partial\nimport sys\n\n\n@partial\ndef require_email_username_birthdate_sex_city(strategy, details, user=None,\n                                              is_new=False, *args, **kwargs):\n    if user and user.email and user.username and user.first_name \\\n        and user.last_name and user.birthdate and user.sex \\\n        and user.city:\n        return\n    elif is_new and (not details.get('email') or not details.get('username')\n                     or not details.get('first_name')\n                     or not details.get('last_name')\n                     or not details.get('birthdate') or not details.get('sex')\n                     or not details.get('city_id')):\n        if strategy.session_get('saved_email') and \\\n                strategy.session_get('saved_username') and \\\n                strategy.session_get('saved_first_name') and \\\n                strategy.session_get('saved_last_name') and \\\n                strategy.session_get('saved_birthdate') and \\\n                strategy.session_get('saved_sex') and \\\n                strategy.session_get('saved_city_id'):\n            details['email'] = strategy.session_pop('saved_email')\n            details['username'] = strategy.session_pop('saved_username')\n            details['first_name'] = strategy.session_pop('saved_first_name')\n            details['last_name'] = strategy.session_pop('saved_last_name')\n            details['birthdate'] = strategy.session_pop('saved_birthdate')\n            details['sex'] = strategy.session_pop('saved_sex')\n            details['city_id'] = strategy.session_pop('saved_city_id')\n        else:\n            return redirect(\n                'bemycobase:require_email_username_birthdate_sex_city')\n\ndef create_user(strategy, details, response, uid, user=None, *args, **kwargs):\n    if user:\n        return\n\n    fields = dict((name, kwargs.get(name) or details.get(name))\n                        for name in strategy.setting('USER_FIELDS'))\n    if not fields:\n        return\n\n    fields['birthdate'] = datetime.strptime(details.get('birthdate'),\n                                            '%Y-%m-%d')\n    try:\n        created_user = strategy.create_user(**fields)  # commit=False,\n        # prevent User post_save signal from creating an Account instance\n        # we want to handle that ourself.\n        # created_user._disable_account_creation = True\n        created_user.username = details.get('username')\n        created_user.save()\n        # created_email = EmailAddress.objects.add_email(created_user,\n        #                                                created_user.email,\n        #                                                **{'primary': True,\n        #                                                   'verified': False,\n        #                                                   'confirm': True})\n        # Account.create(request=strategy.request, user=created_user,\n        # create_email=False)\n        email_address = EmailAddress.objects.get(user=created_user,\n                                                 email=created_user.email)\n        email_address.send_confirmation()\n        messages.add_message(\n            strategy.request,\n            messages.INFO,\n            _(\"Confirmation email sent to {email}.\").format(**{\n                \"email\": details.get(\"email\")\n            })\n        )\n        return {\n            'is_new': True,\n            'user': created_user\n        }\n    except:\n        exc_type, exc_value, exc_traceback = sys.exc_info()\n        lines = traceback.format_exception(exc_type, exc_value, exc_traceback)\n        debug = ''.join('!! ' + line for line in lines)\n\n```\n. But you can ignore my custom pipelines because of I can't associate my current user account with Twitter too...\n. @omab tested trunk, it works fine... (before I used latest pip)\n. @omab, it doesn't help me. I also have such error with facebook and twitter. \n. @omab. nope it also didn't fix it. some technical details:\n`$ pip freeze\nDjango==1.6.2\nSouth==0.8.4\nanyjson==0.3.3\nargparse==1.2.1\nbeautifulsoup4==4.3.2\ndistribute==0.6.24\ndjango-htmlmin==0.6.3\ndjango-registration==1.0\ndjango-tinymce==1.5.2\noauthlib==0.6.1\npython-openid==2.2.5\n-e git+https://github.com/omab/python-social-auth.git@062552926c30379d13058ad11a3c9a76663c9b95#egg=python_social_auth-dev\npytz==2013.9\nrequests==2.2.1\nrequests-oauthlib==0.4.0\nsix==1.6.1\nsorl-thumbnail==11.12\nsqlparse==0.1.11\ntimezones==1.6\nwsgiref==0.1.2`\nTrace:\n\n```\nEnvironment:\n\n\nRequest Method: GET\nRequest URL: http://localhost/complete/facebook/?redirect_state=U53FUiZTj6TAzFH4RYrpffKEDfK3ORfW&code=AQAYwwCXDgN05xlpAOjvq6esW46JmFUdCTsHpQdQ41hi4yPc7iQ9OwUxQr0k3-yaVoq9GTtvIjYuGrZx6OfEBUn7joQZWmT1AGVOkMg4GnyD1HmryhoBeopII6HiBF2Q-Bu6bDp5xZUdMkwk_N7Mdr4wGAeF9QwjMg1D6jpHpxksaSWdGGlJa6JNDpBCY5mwVqFRVB51ez7ToQZP9N6UyyeX0Hf4OsMRVVyHajqrntFyw-2LTmSVJpI5cIT4d9gmAopzbqyk-3RCjnpxCHNYFrDtoL_UKf7TN8qcmBrY80ZACKWbcpN93rZrB0Dd4ijtKl4&state=U53FUiZTj6TAzFH4RYrpffKEDfK3ORfW\n\nDjango Version: 1.6.2\nPython Version: 2.7.3\nInstalled Applications:\n('south',\n 'gdata',\n 'captcha',\n 'timezones',\n 'registration',\n 'sorl.thumbnail',\n 'django.contrib.auth',\n 'django.contrib.sessions',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.contenttypes',\n 'social.apps.django_app.default',\n 'site.main',\n 'grappelli',\n 'django_extensions',\n 'django.contrib.admin')\nInstalled Middleware:\n('htmlmin.middleware.HtmlMinifyMiddleware',\n 'django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\n\n\nTraceback:\nFile \"/home/site/www/.env/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n  114.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/home/site/www/.env/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n  57.         return view_func(*args, **kwargs)\nFile \"/home/site/www/.env/lib/python2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n  45.             return func(request, backend, *args, **kwargs)\nFile \"/home/site/www/.env/lib/python2.7/site-packages/social/apps/django_app/views.py\" in complete\n  21.                        redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\nFile \"/home/site/www/.env/lib/python2.7/site-packages/social/actions.py\" in do_complete\n  61.             login(strategy, user, social_user)\nFile \"/home/site/www/.env/lib/python2.7/site-packages/social/apps/django_app/views.py\" in _do_login\n  41.         expiration = social_user.expiration_datetime()\n\nException Type: AttributeError at /complete/facebook/\nException Value: 'NoneType' object has no attribute 'expiration_datetime'\n```\n\nit is almost the same as in OP trace.\n. @omab it's quite a challenge for me. I will try it, but I definitely need some time for investigations.\nBy the way, can this be related due to I'm using a custom User Model?\n( SOCIAL_AUTH_USER_MODEL and AUTH_USER_MODEL are defined in settings.py )\n. @omab, I tried to make a simple app to reproduce and there it works without this error. This is really strange as all things are absolutely the same (even User model app is just copied from my project ). I will try to find the diff between simple app and my. Hope I'll be lucky enough to catch the root.\n. @htch , check you database. when I recreated it from scratch everything became fine. I didn't figure out what was wrong in database, but the evil is in it. I still have both databases and with the old one I still can reproduce the bug. So it looks like some migration broke it at my side. \n. Confirm that. Downgrading solves the 403 Forbidden issue with google.\n. I solved it by inserting below code in settings\r\nSOCIAL_AUTH_PIPELINE = (\r\n    'social_core.pipeline.user.user_details',\r\n). Anyone?\n. >  if it's duplicated, then a extra hash will be added (so they are never repeated)\n\nThat's the problem here, it doesn't seem to add an extra hash when there are collisions. I logged in using two different Steam accounts with the same username then this happened.\n\nAnyway, I solved the problem by writing a custom pipeline to replace usernames with Steam UIDs, it's good enough for my requirements.\n\nThanks!\n. looking into the issue further, it seems problem maybe with the API version. v2.3 -> v2.4\n. Also I suggest to use https://docs.djangoproject.com/en/1.9/ref/contrib/postgres/fields/#django.contrib.postgres.fields.JSONField\n\nif Django >= 1.9 and django.contrib.postgres in installed apps...\n. @gitfred we ended up just following this guide and implementing it ourselves, and had an easier time integratng it to our existing auth solution \n\nhttps://developers.google.com/identity/sign-in/android/offline-access\n. Hi @liberathor ,\r\n\r\nWe don't use this code anymore but this is the gist of it. Hope it helps!\r\n\r\n```python\r\nimport datetime\r\nimport logging\r\n\r\nimport pytz\r\nfrom oauth2client import crypt\r\nfrom django.conf import settings\r\nfrom oauth2client import client as oauth_client\r\n\r\nclass GoogleAuthBridge:\r\n    def __init__(self, uses_new_google_client_id):\r\n        self.uses_new_google_client_id = uses_new_google_client_id\r\n\r\n    def validate_token(self, token):\r\n        try:\r\n            client_id_for_verification = settings.GOOGLE_SERVER_CLIENT_ID if self.uses_new_google_client_id else settings.GOOGLE_SERVICE_ACCOUNT_CLIENT_ID\r\n            idinfo = oauth_client.verify_id_token(token, client_id_for_verification)\r\n            # If multiple clients access the backend server:\r\n            if idinfo['aud'] not in [settings.GOOGLE_ANDROID_CLIENT_ID, settings.GOOGLE_IOS_CLIENT_ID,\r\n                                     settings.GOOGLE_SERVER_CLIENT_ID, settings.GOOGLE_WEB_CLIENT_ID,\r\n                                     settings.GOOGLE_SERVICE_ACCOUNT_CLIENT_ID]:\r\n                raise crypt.AppIdentityError(\"Unrecognized client.\")\r\n            if idinfo['iss'] not in ['accounts.google.com', 'https://accounts.google.com']:\r\n                raise crypt.AppIdentityError(\"Wrong issuer.\")\r\n        except crypt.AppIdentityError:\r\n            # Invalid token\r\n            return None, None\r\n\r\n        # Convert from google's timestamp to our \"seconds till expiration\" format\r\n        expiration_timestamp = int(idinfo['exp'])\r\n        now = datetime.datetime.now(tz=pytz.UTC)\r\n        expiration_time = datetime.datetime.fromtimestamp(expiration_timestamp).replace(tzinfo=pytz.UTC)\r\n        seconds_till_expiration = expiration_time - now\r\n        return token, seconds_till_expiration.seconds\r\n`. I don't know whether this will solve your problem, but i hope this might help you.\n\nI was getting the same error with the code:\n\nclass TestGoogleLogin(unittest.TestCase):\n\n```\ndef setUp(self):\n    self.client = Client()\n\ndef fake_social_complete(request, backend=None, *args, **kwargs):\n    return HttpResponseRedirect('.')\n\n@mock.patch('something.views.login', side_effect=fake_social_complete)\ndef test_login(self, mock_social):\n    self.user = User.objects.create_user(email=\"test@test.com\", username=\"test\", password=\"test\")\n    self.client.login(username=\"test\", password=\"test\")\n    self.factory = RequestFactory()\n    request = self.factory.get('/')\n    request.user = self.user\n    middleware = SessionMiddleware()\n    middleware.process_request(request)\n    request.session.save()\n    response = self.client.get('/complete/google-oauth2')\n    self.assertTrue(response.client)\n```\n\n---\n\nI have changed the unittest.TestCase to django.test.testcases.LiveServerTestCase and it stopped throwing the error and started working\n. @anderflash :+1: Got my OAuth login ironed out thanks friend\n. Agreed. Having the same issue. Thanks for the tip!\n. I am getting only this error in my console:\r\n\r\n```\r\n[02/Dec/2016 06:58:22]\"GET /login/any-oidc/ HTTP/1.1\" 302 0\r\nNo handlers could be found for logger \"social\"\r\nERROR Internal Server Error: /complete/any-oidc/\r\nTraceback (most recent call last):\r\n  File \"/Users/ranvijay.s/.virtualenvs/env/lib/python2.7/site-packages/django/core/handlers/base.py\", line 138, in get_response\r\n    response = middleware_method(request, e)\r\n  File \"/Users/ranvijay.s/.virtualenvs/env/lib/python2.7/site-packages/social/apps/django_app/middleware.py\", line 45, in process_exception\r\n    return redirect(url)\r\n  File \"/Users/ranvijay.s/.virtualenvs/env/lib/python2.7/site-packages/django/shortcuts.py\", line 116, in redirect\r\n    return redirect_class(resolve_url(to, *args, **kwargs))\r\n  File \"/Users/ranvijay.s/.virtualenvs/env/lib/python2.7/site-packages/django/shortcuts.py\", line 211, in resolve_url\r\n    if '/' not in to and '.' not in to:\r\nTypeError: argument of type 'NoneType' is not iterable\r\n[02/Dec/2016 06:58:34]\"GET /complete/any-oidc/?state=gHgDNqsb27ij7uWcPh8FXSFE2ja7iUBr&code=4/Yf6xHAaCGk3v_B9Cd4gKcmuRmVQlyOgIhwjcFiENJ1k&authuser=0&hd=zymr.com&session_state=13bca00e792c51d91ce538cf1efde8b40cb1c402..ab7a&prompt=consent HTTP/1.1\" 500 91031\r\n```\r\n. python-social-auth==0.2.21\r\nLOGIN_ERROR_URL is not defined. you mean to say we need to add a custom view for error like...\r\n\r\nmiddleware.py\r\n\r\n```\r\nclass ExampleSocialAuthExceptionMiddleware(SocialAuthExceptionMiddleware):\r\n    def raise_exception(self, request, exception):\r\n        return False\r\n\r\n    def get_message(self, request, exception):\r\n        if isinstance(exception, AuthAlreadyAssociated):\r\n            return 'Somebody is already using that account!'\r\n        return super(ExampleSocialAuthExceptionMiddleware, self) \\\r\n            .get_message(request, exception)\r\n\r\n    def get_redirect_uri(self, request, exception):\r\n        if request.user.is_authenticated():\r\n            return reverse('done')\r\n        else:\r\n            return reverse('error')\r\n```\r\n\r\nview.py\r\n```\r\nclass AuthError(TemplateView):\r\n    template_name = 'error.html'\r\n```\r\n\r\nurls.py\r\n`url(r'^error/$', views.AuthError.as_view(), name='error'),`. How will we integrate same with Django rest-framework?\r\nIn my project, we are using angular for the front end. \r\nHere backend port: 8000 and frontend port: 9000\r\nSo please tell me how we will redirect back Django standard templates to angular with User(info) valid token.. ",
    "fajran": "Thanks!\n\nI used something similar to your fix for a temporary workaround https://github.com/angkot/angkot/commit/b43d07a366be2d637d223ef1937ff87208b659f8\n. Thanks!\n\nI used something similar to your fix for a temporary workaround https://github.com/angkot/angkot/commit/b43d07a366be2d637d223ef1937ff87208b659f8\n. ",
    "JordanReiter": "I'm getting the same error on Master now, with the Facebook OAuth backend.\n. I'm getting the same error on Master now, with the Facebook OAuth backend.\n. ",
    "neara": "http://psa.matiasaguirre.net/docs/configuration/django.html#exceptions-middleware\nanswered my need. \n. Oh, that's probably the case. I didn't define `SOCIAL_AUTH_INACTIVE_USER_URL`. \nWill try it out.\n\nThank you!\n. http://psa.matiasaguirre.net/docs/configuration/django.html#exceptions-middleware\nanswered my need. \n. Oh, that's probably the case. I didn't define `SOCIAL_AUTH_INACTIVE_USER_URL`. \nWill try it out.\n\nThank you!\n. ",
    "jcouyang": "sure thing\n. sure thing\n. ",
    "alexander-ae": "Thanks, it works!\n. Thanks, it works!\n. ",
    "gameguy43": "Thanks for this thread and for patching--solved my problem!\n. resolved with https://github.com/omab/python-social-auth/pull/358\n. :+1: \n. Thanks for this thread and for patching--solved my problem!\n. resolved with https://github.com/omab/python-social-auth/pull/358\n. :+1: \n. ",
    "ziima": "Ok, I found HTTPretty in testing docs, but I still haven't found sure.\n. I found the other dependency file.\n. Ok, I found HTTPretty in testing docs, but I still haven't found sure.\n. I found the other dependency file.\n. ",
    "weasteam": "it works now.\n. it works now.\n. ",
    "tklovett": "Hitting 'Cancel' Facebook's accept auth request dialog causes a Server Error (500) for @Salma7amed's website\n. 1.6.1\n\n```\nDjango==1.6.1\nMySQL-python==1.2.5\nPyTumblr==0.0.5\nWerkzeug==0.9.4\ndistribute==0.6.49\ndj-database-url==0.2.2\ndj-static==0.0.5\ndjango-extensions==1.3.2\ndjango-forms-bootstrap==2.0.3.post2\ndjango-jsonfield==0.9.12\ndjango-nose==1.2\ndjango-stripe-payments==2.0b32\ndjango-toolbelt==0.0.1\ngunicorn==18.0\nhttplib2==0.8\nmock==1.0.1\nnose==1.3.0\noauth2==1.5.211\noauthlib==0.6.0\npsycopg2==2.5.2\npython-openid==2.2.5\npython-social-auth==0.1.17\nrequests==2.1.0\nrequests-oauthlib==0.4.0\nsix==1.5.2\nstatic==0.4\nstevedore==0.13\nstripe==1.11.0\nvirtualenv==1.10.1\nvirtualenv-clone==0.2.4\nvirtualenvwrapper==4.1.1\nwsgiref==0.1.2\n```\n. @omab any idea what's causing my issue? I'm happy to PM you any info you need.\n. Hey @mionch, I'd like to take you up on your offer to help. What's the best way to reach you?\n. Possibly related:\n`get_user_id()` in [backends/base.py](https://github.com/omab/python-social-auth/blob/9d45d50c4cd064a33f8303592eea41d90750c296/social/backends/base.py#L140) is returning None\n\nIn `get_user_id(self, details, response):`, the value for `response` is:\n\n```\n{\n    'access_token': {u'oauth_token_secret': u'XXX', u'oauth_token': u'XXX'},\n   u'meta': {u'status': 200, u'msg': u'OK'},\n   u'response': {u'user': {u'following': 1, u'blogs': [{u'updated': 0, u'description': u'test', u'drafts': 0, u'title': u'test', u'url': u'http://tklovett-test.tumblr.com/', u'messages': 0, u'tweet': u'N', u'share_likes': True, u'posts': 0, u'primary': True, u'queue': 0, u'admin': True, u'followers': 0, u'ask': False, u'facebook': u'N', u'type': u'public', u'facebook_opengraph_enabled': u'N', u'name': u'tklovett-test'}], u'default_post_format': u'html', u'name': u'tklovett-test', u'likes': 0}}\n}\n```\n\nAnd `self.ID_KEY = 'username'`, so `response.get(self.ID_KEY)` is `None`.\n\nThen I get the same IntegrityError exception as @mionch in [associate_user](https://github.com/omab/python-social-auth/blob/4bcac6a3f0d38f3c0c7833a14e91911968389a43/social/pipeline/social_auth.py#L33-L45), since `'columns provider, uid are not unique'` (tumblr, None)\n. Ok I've pinpointed the issue. The first person to ever log in to gets a User object and UserSocialAuth object successfully created. Because of the issue above, the UserSocialAuth.uid is set to `'None'`. From that point on, anyone who tries to log in with a different account gets a User object created, but cannot have a UserSocialAuth created because it tries to use the same (provider='tumblr', uid='None') pair for a unique key. When the original user disconnects and re-authenticates with tumblr, it tries to retrieve the UserSocialAuth using `None` for the uid (not the string `'None'`). It then sees an existing User object with that username, and creates a new User object according to the duplicate username rules (So the next time tklovett logs in, user tklovett9365027503 is created).\n\nSo the issue arises from [this code](https://github.com/omab/python-social-auth/blob/master/social/backends/base.py#L137-L140):\n\n```\ndef get_user_id(self, details, response):\n        \"\"\"Must return a unique ID from values returned on details\"\"\"\n        return response.get(self.ID_KEY)\n```\n\nBut I don't know if the tumblr backend is not setting ID_KEY properly, if Tumblr is sending an improperly formatted response, or if the wrong thing is being passed in as the response. @omab, do you know?\n. I was working with python-social-auth==0.1.17, I believe. I've updated now to 0.1.20, I'll see if that fixes.\n. Everything looks 100% fixed!\n\nYeah, for some reason the PyPI version of 0.1.20 doesn't have the changes from that commit. I had to change my requirements.txt to clone from github directly rather than just having python-social-auth==0.1.20\n. Most of the code was written a while ago by someone other than me in commit 12bbafb. Let me know if I should change anything before the PR is accepted.\n. Awesome, thanks for taking care of that @omab!\n. Hitting 'Cancel' Facebook's accept auth request dialog causes a Server Error (500) for @Salma7amed's website\n. 1.6.1\n\n```\nDjango==1.6.1\nMySQL-python==1.2.5\nPyTumblr==0.0.5\nWerkzeug==0.9.4\ndistribute==0.6.49\ndj-database-url==0.2.2\ndj-static==0.0.5\ndjango-extensions==1.3.2\ndjango-forms-bootstrap==2.0.3.post2\ndjango-jsonfield==0.9.12\ndjango-nose==1.2\ndjango-stripe-payments==2.0b32\ndjango-toolbelt==0.0.1\ngunicorn==18.0\nhttplib2==0.8\nmock==1.0.1\nnose==1.3.0\noauth2==1.5.211\noauthlib==0.6.0\npsycopg2==2.5.2\npython-openid==2.2.5\npython-social-auth==0.1.17\nrequests==2.1.0\nrequests-oauthlib==0.4.0\nsix==1.5.2\nstatic==0.4\nstevedore==0.13\nstripe==1.11.0\nvirtualenv==1.10.1\nvirtualenv-clone==0.2.4\nvirtualenvwrapper==4.1.1\nwsgiref==0.1.2\n```\n. @omab any idea what's causing my issue? I'm happy to PM you any info you need.\n. Hey @mionch, I'd like to take you up on your offer to help. What's the best way to reach you?\n. Possibly related:\n`get_user_id()` in [backends/base.py](https://github.com/omab/python-social-auth/blob/9d45d50c4cd064a33f8303592eea41d90750c296/social/backends/base.py#L140) is returning None\n\nIn `get_user_id(self, details, response):`, the value for `response` is:\n\n```\n{\n    'access_token': {u'oauth_token_secret': u'XXX', u'oauth_token': u'XXX'},\n   u'meta': {u'status': 200, u'msg': u'OK'},\n   u'response': {u'user': {u'following': 1, u'blogs': [{u'updated': 0, u'description': u'test', u'drafts': 0, u'title': u'test', u'url': u'http://tklovett-test.tumblr.com/', u'messages': 0, u'tweet': u'N', u'share_likes': True, u'posts': 0, u'primary': True, u'queue': 0, u'admin': True, u'followers': 0, u'ask': False, u'facebook': u'N', u'type': u'public', u'facebook_opengraph_enabled': u'N', u'name': u'tklovett-test'}], u'default_post_format': u'html', u'name': u'tklovett-test', u'likes': 0}}\n}\n```\n\nAnd `self.ID_KEY = 'username'`, so `response.get(self.ID_KEY)` is `None`.\n\nThen I get the same IntegrityError exception as @mionch in [associate_user](https://github.com/omab/python-social-auth/blob/4bcac6a3f0d38f3c0c7833a14e91911968389a43/social/pipeline/social_auth.py#L33-L45), since `'columns provider, uid are not unique'` (tumblr, None)\n. Ok I've pinpointed the issue. The first person to ever log in to gets a User object and UserSocialAuth object successfully created. Because of the issue above, the UserSocialAuth.uid is set to `'None'`. From that point on, anyone who tries to log in with a different account gets a User object created, but cannot have a UserSocialAuth created because it tries to use the same (provider='tumblr', uid='None') pair for a unique key. When the original user disconnects and re-authenticates with tumblr, it tries to retrieve the UserSocialAuth using `None` for the uid (not the string `'None'`). It then sees an existing User object with that username, and creates a new User object according to the duplicate username rules (So the next time tklovett logs in, user tklovett9365027503 is created).\n\nSo the issue arises from [this code](https://github.com/omab/python-social-auth/blob/master/social/backends/base.py#L137-L140):\n\n```\ndef get_user_id(self, details, response):\n        \"\"\"Must return a unique ID from values returned on details\"\"\"\n        return response.get(self.ID_KEY)\n```\n\nBut I don't know if the tumblr backend is not setting ID_KEY properly, if Tumblr is sending an improperly formatted response, or if the wrong thing is being passed in as the response. @omab, do you know?\n. I was working with python-social-auth==0.1.17, I believe. I've updated now to 0.1.20, I'll see if that fixes.\n. Everything looks 100% fixed!\n\nYeah, for some reason the PyPI version of 0.1.20 doesn't have the changes from that commit. I had to change my requirements.txt to clone from github directly rather than just having python-social-auth==0.1.20\n. Most of the code was written a while ago by someone other than me in commit 12bbafb. Let me know if I should change anything before the PR is accepted.\n. Awesome, thanks for taking care of that @omab!\n. ",
    "jgsogo": "created PR\n. created PR\n. ",
    "stianpr": "Sweet. That work! Thanks =)\n\nThe documentation for LinkedIn backend should be updated then? I can make a pull request if you want?\n. Sweet. And thanks for giving us a good authentication framework!\n. Sweet. That work! Thanks =)\n\nThe documentation for LinkedIn backend should be updated then? I can make a pull request if you want?\n. Sweet. And thanks for giving us a good authentication framework!\n. ",
    "eroninjapan": "The online docs are still showing the incorrect values even though I see they've been updated in the repo. Can you please update or is it no longer maintained? http://python-social-auth.readthedocs.org/en/latest/backends/linkedin.html\n. Looks great, thanks!\n. The online docs are still showing the incorrect values even though I see they've been updated in the repo. Can you please update or is it no longer maintained? http://python-social-auth.readthedocs.org/en/latest/backends/linkedin.html\n. Looks great, thanks!\n. ",
    "misli": "I'd like to add python-social-auth to Fedora and I have found it usual to use pypi tarballs as source tarbals for RPM packages. But it is also usual that such tarballs contain this stuff, which may be provided as -doc subpackage.\nMy current SRPM contains tarball from github, which is quite suitable, so You may take this just like a suggestion.\n. I'd like to add python-social-auth to Fedora and I have found it usual to use pypi tarballs as source tarbals for RPM packages. But it is also usual that such tarballs contain this stuff, which may be provided as -doc subpackage.\nMy current SRPM contains tarball from github, which is quite suitable, so You may take this just like a suggestion.\n. ",
    "xen": "This is what I have in my Chrome settings:\n\n![screen shot 2014-01-20 at 5 24 56 pm](https://f.cloud.github.com/assets/31260/1955325/123469a2-81e7-11e3-9c9e-d02759008d37.png)\n\nDeveloper tools screenshot: \n\n![screen shot 2014-01-20 at 5 44 31 pm](https://f.cloud.github.com/assets/31260/1955486/cb8c85fe-81e9-11e3-9bbd-964f0f842127.png)\n\nAny ideas?\n. I checked does incoming request have cookies. And it is:\n\n```\n>>> req.cookies\nwerkzeug.datastructures.ImmutableTypeConversionDict({'psa_session': u'eyJnaXRodWJfc3RhdGUiOnsiIGIiOiJVamRVV0hSR1JWSm9WakJXVFRCbU9URnBiV3MzYm01UVZIQnFabWxPVTFZPSJ9fQ.Bb9TmA.B1cY1ozga4HGD7Y2RaJgCt19DII'  })\n```\n. Great, I'll check now. Sorry for my silence.\n. I've checked. Looks like it working with or without `SESSION_PROTECTION`. Thank you very much for your support. I think that this ticket can be closed, but it is your repository.\n. This is what I have in my Chrome settings:\n\n![screen shot 2014-01-20 at 5 24 56 pm](https://f.cloud.github.com/assets/31260/1955325/123469a2-81e7-11e3-9c9e-d02759008d37.png)\n\nDeveloper tools screenshot: \n\n![screen shot 2014-01-20 at 5 44 31 pm](https://f.cloud.github.com/assets/31260/1955486/cb8c85fe-81e9-11e3-9bbd-964f0f842127.png)\n\nAny ideas?\n. I checked does incoming request have cookies. And it is:\n\n```\n>>> req.cookies\nwerkzeug.datastructures.ImmutableTypeConversionDict({'psa_session': u'eyJnaXRodWJfc3RhdGUiOnsiIGIiOiJVamRVV0hSR1JWSm9WakJXVFRCbU9URnBiV3MzYm01UVZIQnFabWxPVTFZPSJ9fQ.Bb9TmA.B1cY1ozga4HGD7Y2RaJgCt19DII'  })\n```\n. Great, I'll check now. Sorry for my silence.\n. I've checked. Looks like it working with or without `SESSION_PROTECTION`. Thank you very much for your support. I think that this ticket can be closed, but it is your repository.\n. ",
    "a1exs": "I had same problem in flask_example with google-oauth2. Tried from 0.1.19 to latest commit, only after removing SESSION_PROTECTION = 'strong' from settings.py - problem gone.\n. Yes, after update Flask-Login from 0.2.9 to latest commit works fine with SESSION_PROTECTION = 'strong'. Thanks!\n. I had same problem in flask_example with google-oauth2. Tried from 0.1.19 to latest commit, only after removing SESSION_PROTECTION = 'strong' from settings.py - problem gone.\n. Yes, after update Flask-Login from 0.2.9 to latest commit works fine with SESSION_PROTECTION = 'strong'. Thanks!\n. ",
    "EugeneLiang": "oops, it's found in the extra_data of the UserSocialAuth object. apologies.\n. Yup, I installed python-social-auth using pip.\n\nHow do I fix this error than?\n\nAlso I noticed that taobao's login link is not in the template. Is taobao\nnot supported in the tornado example?\n\nThanks!\nOn Jan 22, 2014 12:30 AM, \"Mat\u00edas Aguirre\" notifications@github.com wrote:\n\n> @EugeneLiang https://github.com/EugeneLiang, any chance you also\n> installed python-social-auth using pip? To me it looks like an python\n> path issue where you have the app installed with pip (older version\n> without tornado support).\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/171#issuecomment-32902014\n> .\n. Cool, will try it and get back to you! Thank you!\nOn Jan 22, 2014 12:38 AM, \"Mat\u00edas Aguirre\" notifications@github.com wrote:\n\n> @EugeneLiang https://github.com/EugeneLiang, try with pip install\n> --upgrade python-social-auth. Taobao backend should be supported in the\n> Tornado app, it's just not linked there at the moment (it's easy to loose\n> the links sync between apps).\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/171#issuecomment-32902906\n> .\n. Hi, i've tried to run the code using python app.y after running pip install --upgrade python-social-auth,\nbut i got the same error:\n\nTraceback (most recent call last):\n  File \"app.py\", line 17, in <module>\n    import settings\n  File \"/Users/eugenely/Downloads/python-social-auth-master/examples/tornado_example/settings.py\", line 46, in <module>\n    from local_settings import *\nImportError: No module named local_settings\n\nI'm on Mac OS X 10.9.1 and using python 2.7.5.\n\nAny ideas how do i fix this ?\n\nThanks!\n. Hi cool!\n\ni've tried creating the Taobao link on home.html by adding in \n\n```\n<a href=\"/login/taobao\">Taobao OAuth2</a>\n```\n\nand on settings.py i've added in \n\n```\n    'social.backends.weibo.WeiboOAuth2',\n    'social.backends.taobao.TaobaoOAuth2',  \n```\n\nFinally, i ran the app and clicked on taobao login link. But on the console i see this error:\n\n```\n[E 140122 12:22:56 web:1228] Uncaught exception GET /login/taobao (127.0.0.1)\n    HTTPRequest(protocol='http', host='127.0.0.1', method='GET', uri='/login/taobao', version='HTTP/1.1', remote_ip='127.0.0.1', headers={'Accept-Language': 'en-US,en;q=0.8,zh-TW;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'Host': '127.0.0.1', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36', 'Connection': 'keep-alive', 'Referer': 'http://127.0.0.1/', 'Cache-Control': 'max-age=0', 'Cookie': 'weibo_user=\"eyJhY2Nlc3NfdG9rZW4iOiAiMi4wMG9WWHZORUZxRzVLQmY4MzExNDZlMDNFN0NXZ0UiLCAic2Vzc2lvbl9leHBpcmVzIjogMTU3Njc5OTk5LCAiaWQiOiAzODcwMzM3MjE2LCAicHJvZmlsZV9pbWFnZV91cmwiOiAiaHR0cDovL3RwMS5zaW5haW1nLmNuLzM4NzAzMzcyMTYvNTAvMC8xIiwgInNjcmVlbl9uYW1lIjogImV1Z2VuZWxpYW5nODUifQ==|1388212141|7870b33baa8abd0245c4db1ab75c93d412db14a7\"; sessionid=4o78mriiks3cqjg5y47ycfuupj0yhyaz; csrftoken=lmG12aJCI3zKOnzw6QKNeYHvJ5gEk1yJ; weibo_state=\"S01GV0hSNmdzb0F4RGQ2MlBOSXh0cDBleEhmWHJlR20=|1390364412|592a798d2a7fe49d3d62dfcfa2d706e856308a96\"; partial_pipeline=|1390364472|49cb9f24e7a342d3999b53fe384d96e995d00bee'})\n    Traceback (most recent call last):\n      File \"/Library/Python/2.7/site-packages/tornado/web.py\", line 1141, in _when_complete\n        callback()\n      File \"/Library/Python/2.7/site-packages/tornado/web.py\", line 1162, in _execute_method\n        self._when_complete(method(*self.path_args, **self.path_kwargs),\n      File \"/Library/Python/2.7/site-packages/social/apps/tornado_app/handlers.py\", line 22, in get\n        self._auth(backend)\n      File \"/Library/Python/2.7/site-packages/social/apps/tornado_app/utils.py\", line 35, in wrapper\n        redirect_uri=uri, *args, **kwargs)\n      File \"/Library/Python/2.7/site-packages/social/apps/tornado_app/utils.py\", line 23, in load_strategy\n        request_handler=request_handler, *args, **kwargs)\n      File \"/Library/Python/2.7/site-packages/social/strategies/utils.py\", line 17, in get_strategy\n        Backend = get_backend(backends, backend)\n      File \"/Library/Python/2.7/site-packages/social/backends/utils.py\", line 50, in get_backend\n        load_backends(backends, force_load=True)\n      File \"/Library/Python/2.7/site-packages/social/backends/utils.py\", line 32, in load_backends\n        backend = module_member(auth_backend)\n      File \"/Library/Python/2.7/site-packages/social/utils.py\", line 22, in module_member\n        return getattr(module, member)\n    AttributeError: 'module' object has no attribute 'TaobaoOAuth2'\n```\n\nAm i missing anything ?\n. alright! it works!! thank you!\n\nOn Wed, Jan 22, 2014 at 9:58 PM, Mat\u00edas Aguirre notifications@github.comwrote:\n\n> Change 'social.backends.taobao.TaobaoOAuth2' to\n> 'social.backends.taobao.TAOBAOAuth'.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/171#issuecomment-33024079\n> .\n\n## \n\nBest Regards,\nEugene\nhttp://www.liangeugene.com\n. oops, it's found in the extra_data of the UserSocialAuth object. apologies.\n. Yup, I installed python-social-auth using pip.\n\nHow do I fix this error than?\n\nAlso I noticed that taobao's login link is not in the template. Is taobao\nnot supported in the tornado example?\n\nThanks!\nOn Jan 22, 2014 12:30 AM, \"Mat\u00edas Aguirre\" notifications@github.com wrote:\n\n> @EugeneLiang https://github.com/EugeneLiang, any chance you also\n> installed python-social-auth using pip? To me it looks like an python\n> path issue where you have the app installed with pip (older version\n> without tornado support).\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/171#issuecomment-32902014\n> .\n. Cool, will try it and get back to you! Thank you!\nOn Jan 22, 2014 12:38 AM, \"Mat\u00edas Aguirre\" notifications@github.com wrote:\n\n> @EugeneLiang https://github.com/EugeneLiang, try with pip install\n> --upgrade python-social-auth. Taobao backend should be supported in the\n> Tornado app, it's just not linked there at the moment (it's easy to loose\n> the links sync between apps).\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/171#issuecomment-32902906\n> .\n. Hi, i've tried to run the code using python app.y after running pip install --upgrade python-social-auth,\nbut i got the same error:\n\nTraceback (most recent call last):\n  File \"app.py\", line 17, in <module>\n    import settings\n  File \"/Users/eugenely/Downloads/python-social-auth-master/examples/tornado_example/settings.py\", line 46, in <module>\n    from local_settings import *\nImportError: No module named local_settings\n\nI'm on Mac OS X 10.9.1 and using python 2.7.5.\n\nAny ideas how do i fix this ?\n\nThanks!\n. Hi cool!\n\ni've tried creating the Taobao link on home.html by adding in \n\n```\n<a href=\"/login/taobao\">Taobao OAuth2</a>\n```\n\nand on settings.py i've added in \n\n```\n    'social.backends.weibo.WeiboOAuth2',\n    'social.backends.taobao.TaobaoOAuth2',  \n```\n\nFinally, i ran the app and clicked on taobao login link. But on the console i see this error:\n\n```\n[E 140122 12:22:56 web:1228] Uncaught exception GET /login/taobao (127.0.0.1)\n    HTTPRequest(protocol='http', host='127.0.0.1', method='GET', uri='/login/taobao', version='HTTP/1.1', remote_ip='127.0.0.1', headers={'Accept-Language': 'en-US,en;q=0.8,zh-TW;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'Host': '127.0.0.1', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36', 'Connection': 'keep-alive', 'Referer': 'http://127.0.0.1/', 'Cache-Control': 'max-age=0', 'Cookie': 'weibo_user=\"eyJhY2Nlc3NfdG9rZW4iOiAiMi4wMG9WWHZORUZxRzVLQmY4MzExNDZlMDNFN0NXZ0UiLCAic2Vzc2lvbl9leHBpcmVzIjogMTU3Njc5OTk5LCAiaWQiOiAzODcwMzM3MjE2LCAicHJvZmlsZV9pbWFnZV91cmwiOiAiaHR0cDovL3RwMS5zaW5haW1nLmNuLzM4NzAzMzcyMTYvNTAvMC8xIiwgInNjcmVlbl9uYW1lIjogImV1Z2VuZWxpYW5nODUifQ==|1388212141|7870b33baa8abd0245c4db1ab75c93d412db14a7\"; sessionid=4o78mriiks3cqjg5y47ycfuupj0yhyaz; csrftoken=lmG12aJCI3zKOnzw6QKNeYHvJ5gEk1yJ; weibo_state=\"S01GV0hSNmdzb0F4RGQ2MlBOSXh0cDBleEhmWHJlR20=|1390364412|592a798d2a7fe49d3d62dfcfa2d706e856308a96\"; partial_pipeline=|1390364472|49cb9f24e7a342d3999b53fe384d96e995d00bee'})\n    Traceback (most recent call last):\n      File \"/Library/Python/2.7/site-packages/tornado/web.py\", line 1141, in _when_complete\n        callback()\n      File \"/Library/Python/2.7/site-packages/tornado/web.py\", line 1162, in _execute_method\n        self._when_complete(method(*self.path_args, **self.path_kwargs),\n      File \"/Library/Python/2.7/site-packages/social/apps/tornado_app/handlers.py\", line 22, in get\n        self._auth(backend)\n      File \"/Library/Python/2.7/site-packages/social/apps/tornado_app/utils.py\", line 35, in wrapper\n        redirect_uri=uri, *args, **kwargs)\n      File \"/Library/Python/2.7/site-packages/social/apps/tornado_app/utils.py\", line 23, in load_strategy\n        request_handler=request_handler, *args, **kwargs)\n      File \"/Library/Python/2.7/site-packages/social/strategies/utils.py\", line 17, in get_strategy\n        Backend = get_backend(backends, backend)\n      File \"/Library/Python/2.7/site-packages/social/backends/utils.py\", line 50, in get_backend\n        load_backends(backends, force_load=True)\n      File \"/Library/Python/2.7/site-packages/social/backends/utils.py\", line 32, in load_backends\n        backend = module_member(auth_backend)\n      File \"/Library/Python/2.7/site-packages/social/utils.py\", line 22, in module_member\n        return getattr(module, member)\n    AttributeError: 'module' object has no attribute 'TaobaoOAuth2'\n```\n\nAm i missing anything ?\n. alright! it works!! thank you!\n\nOn Wed, Jan 22, 2014 at 9:58 PM, Mat\u00edas Aguirre notifications@github.comwrote:\n\n> Change 'social.backends.taobao.TaobaoOAuth2' to\n> 'social.backends.taobao.TAOBAOAuth'.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/171#issuecomment-33024079\n> .\n\n## \n\nBest Regards,\nEugene\nhttp://www.liangeugene.com\n. ",
    "lukos": "Sure, I didn't see the docs. I'll do something now and add another pull\nrequest.\n\nThanks\n\nLuke\n\nOn 21 January 2014 14:58, Mat\u00edas Aguirre notifications@github.com wrote:\n\n> @lukos https://github.com/lukos, awesome, thanks. There's any chance to\n> get some docs about how to setup it (like the rest of the backends)?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/pull/169#issuecomment-32891889\n> .\n. Oh OK will do\n\nOn 21 January 2014 15:05, Mat\u00edas Aguirre notifications@github.com wrote:\n\n> @lukos https://github.com/lukos, no need for a new one, just update\n> your master and this one will be updated, whatever you prefer is OK.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/pull/169#issuecomment-32892807\n> .\n. Done!. Thanks\n\nOn 21 January 2014 15:05, Luke Briner lukiebriner@gmail.com wrote:\n\n> Oh OK will do\n> \n> On 21 January 2014 15:05, Mat\u00edas Aguirre notifications@github.com wrote:\n> \n> > @lukos https://github.com/lukos, no need for a new one, just update\n> > your master and this one will be updated, whatever you prefer is OK.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/pull/169#issuecomment-32892807\n> > .\n. thank you!\n. Sure, I didn't see the docs. I'll do something now and add another pull\nrequest.\n\nThanks\n\nLuke\n\nOn 21 January 2014 14:58, Mat\u00edas Aguirre notifications@github.com wrote:\n\n> @lukos https://github.com/lukos, awesome, thanks. There's any chance to\n> get some docs about how to setup it (like the rest of the backends)?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/pull/169#issuecomment-32891889\n> .\n. Oh OK will do\n\nOn 21 January 2014 15:05, Mat\u00edas Aguirre notifications@github.com wrote:\n\n> @lukos https://github.com/lukos, no need for a new one, just update\n> your master and this one will be updated, whatever you prefer is OK.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/pull/169#issuecomment-32892807\n> .\n. Done!. Thanks\n\nOn 21 January 2014 15:05, Luke Briner lukiebriner@gmail.com wrote:\n\n> Oh OK will do\n> \n> On 21 January 2014 15:05, Mat\u00edas Aguirre notifications@github.com wrote:\n> \n> > @lukos https://github.com/lukos, no need for a new one, just update\n> > your master and this one will be updated, whatever you prefer is OK.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/pull/169#issuecomment-32892807\n> > .\n. thank you!\n. ",
    "tobiasbartel": "Something similar happens to me, but i am logged in at my django app and at tumblr.\nI get this error:\n\n```\nEnvironment:\n\n\nRequest Method: GET\n\nDjango Version: 1.6.1\nPython Version: 2.7.3\nInstalled Applications:\n('django.contrib.admin',\n 'django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.admin',\n 'south',\n 'social.apps.django_app.default',\n 'bootstrap3',\n 'FeaturedProducts',\n 'tweets',\n 'webUI')\nInstalled Middleware:\n('django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.common.CommonMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'social.apps.django_app.middleware.SocialAuthExceptionMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.middleware.clickjacking.XFrameOptionsMiddleware')\n\n\nTraceback:\nFile \"/home/angeber/lib/python2.7/django/core/handlers/base.py\" in get_response\n  114.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/home/angeber/lib/python2.7/social/apps/django_app/utils.py\" in wrapper\n  45.             return func(request, backend, *args, **kwargs)\nFile \"/home/angeber/lib/python2.7/social/apps/django_app/views.py\" in auth\n  12.     return do_auth(request.social_strategy, redirect_name=REDIRECT_FIELD_NAME)\nFile \"/home/angeber/lib/python2.7/social/actions.py\" in do_auth\n  25.     return strategy.start()\nFile \"/home/angeber/lib/python2.7/social/strategies/base.py\" in start\n  62.             return self.redirect(self.backend.auth_url())\nFile \"/home/angeber/lib/python2.7/social/backends/oauth.py\" in auth_url\n  97.         token = self.set_unauthorized_token()\nFile \"/home/angeber/lib/python2.7/social/backends/oauth.py\" in set_unauthorized_token\n  154.         token = self.unauthorized_token()\nFile \"/home/angeber/lib/python2.7/social/backends/oauth.py\" in unauthorized_token\n  174.         return response.content.decode(response.encoding)\n\nException Type: TypeError at /login/tumblr/\nException Value: decode() argument 1 must be string, not None\n```\n. Something similar happens to me, but i am logged in at my django app and at tumblr.\nI get this error:\n\n```\nEnvironment:\n\n\nRequest Method: GET\n\nDjango Version: 1.6.1\nPython Version: 2.7.3\nInstalled Applications:\n('django.contrib.admin',\n 'django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.admin',\n 'south',\n 'social.apps.django_app.default',\n 'bootstrap3',\n 'FeaturedProducts',\n 'tweets',\n 'webUI')\nInstalled Middleware:\n('django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.common.CommonMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'social.apps.django_app.middleware.SocialAuthExceptionMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.middleware.clickjacking.XFrameOptionsMiddleware')\n\n\nTraceback:\nFile \"/home/angeber/lib/python2.7/django/core/handlers/base.py\" in get_response\n  114.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/home/angeber/lib/python2.7/social/apps/django_app/utils.py\" in wrapper\n  45.             return func(request, backend, *args, **kwargs)\nFile \"/home/angeber/lib/python2.7/social/apps/django_app/views.py\" in auth\n  12.     return do_auth(request.social_strategy, redirect_name=REDIRECT_FIELD_NAME)\nFile \"/home/angeber/lib/python2.7/social/actions.py\" in do_auth\n  25.     return strategy.start()\nFile \"/home/angeber/lib/python2.7/social/strategies/base.py\" in start\n  62.             return self.redirect(self.backend.auth_url())\nFile \"/home/angeber/lib/python2.7/social/backends/oauth.py\" in auth_url\n  97.         token = self.set_unauthorized_token()\nFile \"/home/angeber/lib/python2.7/social/backends/oauth.py\" in set_unauthorized_token\n  154.         token = self.unauthorized_token()\nFile \"/home/angeber/lib/python2.7/social/backends/oauth.py\" in unauthorized_token\n  174.         return response.content.decode(response.encoding)\n\nException Type: TypeError at /login/tumblr/\nException Value: decode() argument 1 must be string, not None\n```\n. ",
    "mionch": "I am having the exact same problem when logging in with a new Facebook user - user.social_user is None. Maybe this may be of any help - I managed to temporarily get it working by disabling the SOCIAL_AUTH_USER_MODEL setting, as I am trying to use it to redirect the model to my own subclass of django.contrib.auth.models.User. I am running version 0.1.20 on Django 1.6.\n. Ok, it seems the fault was on my side - my custom model defined a field 'user_id', which was sometimes taken as the id field of default django User class. \n\nAnyway, @tklovett, hope what I found through debugging may help you - the error itself was caused by an IntegrityError at the point of creating an instance of SocialUser in method associate_user at social.pipelines.social_auth.py. The error concerned a duplicate private key consisting of the uid and auth provider - in my case a social user with my Facebook ID was created before but possibly due to an error, was not brought to the end of auth pipeline. If you have any questions, PM me - I'll be happy to help with the issue.\n. Well, I've been looking through the code right now and the outcome causing the error seems to be exactly the same as in my case. But speaking of the cause, in my case the backend for Tumblr seems to look like this:\n\n```\nclass TumblrOAuth(BaseOAuth1):\n    name = 'tumblr'\n    ID_KEY = 'name'\n    (...)\n```\n\nSo, from what you wrote, the uid should be extracted from the name field, which is present in your request... It seems strange to me that on your side this setting is set to 'username'. Maybe you should try editing this field in the tumblr backend just to see if it solves the issue?\n. Oh, I think I found what might be addressing the issue, which seems to be already fixed. I've looked at the history of the the Tumblr backend file and it seems that on January 17th @omab introduced a fix (https://github.com/omab/python-social-auth/commit/9d45d50c4cd064a33f8303592eea41d90750c296) that looks like a workaround for the `get_user_id` method in this backend. What is more, wrong ID_KEY was also fixed before (https://github.com/omab/python-social-auth/commit/87a4943e3486700270273569ad05823e59c65beb). \n. It is exactly the version I use, so it appears it still lacks the other fix with overriding the method - it is not present in my code. Luckily, it is a small change, so it should be easy to use as a hotfix.\n. I am having the exact same problem when logging in with a new Facebook user - user.social_user is None. Maybe this may be of any help - I managed to temporarily get it working by disabling the SOCIAL_AUTH_USER_MODEL setting, as I am trying to use it to redirect the model to my own subclass of django.contrib.auth.models.User. I am running version 0.1.20 on Django 1.6.\n. Ok, it seems the fault was on my side - my custom model defined a field 'user_id', which was sometimes taken as the id field of default django User class. \n\nAnyway, @tklovett, hope what I found through debugging may help you - the error itself was caused by an IntegrityError at the point of creating an instance of SocialUser in method associate_user at social.pipelines.social_auth.py. The error concerned a duplicate private key consisting of the uid and auth provider - in my case a social user with my Facebook ID was created before but possibly due to an error, was not brought to the end of auth pipeline. If you have any questions, PM me - I'll be happy to help with the issue.\n. Well, I've been looking through the code right now and the outcome causing the error seems to be exactly the same as in my case. But speaking of the cause, in my case the backend for Tumblr seems to look like this:\n\n```\nclass TumblrOAuth(BaseOAuth1):\n    name = 'tumblr'\n    ID_KEY = 'name'\n    (...)\n```\n\nSo, from what you wrote, the uid should be extracted from the name field, which is present in your request... It seems strange to me that on your side this setting is set to 'username'. Maybe you should try editing this field in the tumblr backend just to see if it solves the issue?\n. Oh, I think I found what might be addressing the issue, which seems to be already fixed. I've looked at the history of the the Tumblr backend file and it seems that on January 17th @omab introduced a fix (https://github.com/omab/python-social-auth/commit/9d45d50c4cd064a33f8303592eea41d90750c296) that looks like a workaround for the `get_user_id` method in this backend. What is more, wrong ID_KEY was also fixed before (https://github.com/omab/python-social-auth/commit/87a4943e3486700270273569ad05823e59c65beb). \n. It is exactly the version I use, so it appears it still lacks the other fix with overriding the method - it is not present in my code. Luckily, it is a small change, so it should be easy to use as a hotfix.\n. ",
    "altryne": "It would be easier, if you think about it upfront.\nIMHO it seems a shame that literally every other setting there is configurable, but this one is kinda hardcoded\n. It would be easier, if you think about it upfront.\nIMHO it seems a shame that literally every other setting there is configurable, but this one is kinda hardcoded\n. ",
    "ronniebarker": "I also have this problem not in a virtual environment (but also in windows - works fine in osx)!\nIf I remove the symbolic links by downloading the zip and installing manually then everything goes smoothly\n. That page does work - but I think this question is more about using pip to install things not how to install pip...\n. I also have this problem not in a virtual environment (but also in windows - works fine in osx)!\nIf I remove the symbolic links by downloading the zip and installing manually then everything goes smoothly\n. That page does work - but I think this question is more about using pip to install things not how to install pip...\n. ",
    "michaeljohnbarr": "Theoretically, this should work - http://www.pip-installer.org/en/latest/installing.html\n. According to https://github.com/vandersonmota/model_mommy/commit/95aa15affee4b41b18e50663fb45471e0bcbc702 , this author had to remove the symlink to get pip working. The issue this fixes can be found here: https://github.com/vandersonmota/model_mommy/issues/36\n. Theoretically, this should work - http://www.pip-installer.org/en/latest/installing.html\n. According to https://github.com/vandersonmota/model_mommy/commit/95aa15affee4b41b18e50663fb45471e0bcbc702 , this author had to remove the symlink to get pip working. The issue this fixes can be found here: https://github.com/vandersonmota/model_mommy/issues/36\n. ",
    "sandz-in": "http://stackoverflow.com/questions/21515035/login-via-google-and-facebook-using-django-social-auth\n. http://stackoverflow.com/questions/21515035/login-via-google-and-facebook-using-django-social-auth\n. ",
    "georgewhewell": "this is bug in urllib3 (bundled with requests), a patch has been supplied here: https://github.com/shazow/urllib3/commit/627fc7a897e8e52b59d8ca2eb3d5ebccbe66ac7a\n. this is bug in urllib3 (bundled with requests), a patch has been supplied here: https://github.com/shazow/urllib3/commit/627fc7a897e8e52b59d8ca2eb3d5ebccbe66ac7a\n. ",
    "synth3tk": "I'm looking at giving this module a shot on an App Engine app. Is this working yet?\n. Also, how does one even implement this at all with App Engine? We're using `webapp2`, if that helps.\n. I'm looking at giving this module a shot on an App Engine app. Is this working yet?\n. Also, how does one even implement this at all with App Engine? We're using `webapp2`, if that helps.\n. ",
    "maxg0": "I fixed this by using an updated version of urllib3 in the requests/packages folder.\n. I fixed this by using an updated version of urllib3 in the requests/packages folder.\n. ",
    "ashishnitinpatil": "@synth3tk You need to take a look at [djangoappengine](http://djangoappengine.readthedocs.org/en/latest/) project! It is a workaround for using django on google app engine.\n. Oh, I missed that apparently, will look into it. Thanks omab!! :D\nI am willing to offer you the StackOverflow bounty though :P\n. I will close the issue as soon as I work on how to use the built-in testing functionality & will post my solution too.\n. Haven't found the time to resolve my particular issue yet, when I do it, I'll surely post it here for any future reference by anyone. Till then, closing the issue as it is solved long back.\n. @synth3tk You need to take a look at [djangoappengine](http://djangoappengine.readthedocs.org/en/latest/) project! It is a workaround for using django on google app engine.\n. Oh, I missed that apparently, will look into it. Thanks omab!! :D\nI am willing to offer you the StackOverflow bounty though :P\n. I will close the issue as soon as I work on how to use the built-in testing functionality & will post my solution too.\n. Haven't found the time to resolve my particular issue yet, when I do it, I'll surely post it here for any future reference by anyone. Till then, closing the issue as it is solved long back.\n. ",
    "faxioman": "Oopps ... I wrote \"email_iexact\" instead of \"email__iexact\" ... sorry!\n. Sorry, sorry, sorry :)\nIt's a spring time fault :)\n\nMy custom pipeline module is named social...\nSorry again.\n. Oopps ... I wrote \"email_iexact\" instead of \"email__iexact\" ... sorry!\n. Sorry, sorry, sorry :)\nIt's a spring time fault :)\n\nMy custom pipeline module is named social...\nSorry again.\n. ",
    "bquinn": "FYI I had this problem as well and checking out the version from master solved it. Thanks!\n. FYI I had this problem as well and checking out the version from master solved it. Thanks!\n. ",
    "stevejalim": "Apologies. Found them here: http://python-social-auth.readthedocs.org/en/latest/configuration/settings.html#urls-options\n. @mtirsel I'm experiencing something similar, in that running `makemigrations` to port a 1.6 project to 1.7.1 generates a bogus 0002 migration on the default app, which when applied by the test runner causes any integration tests that use python-social-auth to explode. Why? Take a look at what the 0002 contains:\n\n```\n# -*- coding: utf-8 -*-\nfrom __future__ import unicode_literals\n\nfrom django.db import models, migrations\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('default', '0001_initial'),\n    ]\n\n    operations = [\n        migrations.DeleteModel(\n            name='Association',\n        ),\n        migrations.DeleteModel(\n            name='Code',\n        ),\n        migrations.DeleteModel(\n            name='Nonce',\n        ),\n        migrations.AlterUniqueTogether(\n            name='usersocialauth',\n            unique_together=None,\n        ),\n        migrations.RemoveField(\n            model_name='usersocialauth',\n            name='user',\n        ),\n        migrations.DeleteModel(\n            name='UserSocialAuth',\n        ),\n    ]\n```\n\nYep, that's right, it just drops all the models, which implies:\n\n1) that either the Django migration code is not finding the model, but finding the 0001 migration and thinking all the models have been junked.\n\nor\n\n2) something about p-s-a isn't quite set up right for 1.7.1 (eg explicit app labels -- apps with nested models and lacking explicit app labels seem to fox the migration discovery code)\n\nDoes your experience match this, @mtirsel? Does your 0002 (in site-packages/social/migrations) look like mine?\n\nCheers\nSteve\n. Update (and partic one for @omab), I just forked p-s-a and...\n\n1) tried the updated 0001 migration that mentions the related_name change in @mtirsel's  message (https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/default/migrations/0001_initial.py#L78). This did not prevent a deadly 0002 being generated.\n\n2) I added an explict `app_label` value to all of the models in `python-social-auth/social/apps/django_app/default/models.py`. ie, in `Meta`, I added `app_label=\"default\"`. This **DID** prevent the creation of a deadly 0002. \n\nI'm going to ride with our fork for a while (https://github.com/yunojuno/python-social-auth/) before offering up a PR, but if you agree that it make sense, @omab, let me know and I'll issue a PR.\n\nCheers\nSteve \n. @mtirsel Have you tried my fork, above? If it works for you in your automated builds, too, I'll issue a pull request to @omab  \n. Apologies. Found them here: http://python-social-auth.readthedocs.org/en/latest/configuration/settings.html#urls-options\n. @mtirsel I'm experiencing something similar, in that running `makemigrations` to port a 1.6 project to 1.7.1 generates a bogus 0002 migration on the default app, which when applied by the test runner causes any integration tests that use python-social-auth to explode. Why? Take a look at what the 0002 contains:\n\n```\n# -*- coding: utf-8 -*-\nfrom __future__ import unicode_literals\n\nfrom django.db import models, migrations\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('default', '0001_initial'),\n    ]\n\n    operations = [\n        migrations.DeleteModel(\n            name='Association',\n        ),\n        migrations.DeleteModel(\n            name='Code',\n        ),\n        migrations.DeleteModel(\n            name='Nonce',\n        ),\n        migrations.AlterUniqueTogether(\n            name='usersocialauth',\n            unique_together=None,\n        ),\n        migrations.RemoveField(\n            model_name='usersocialauth',\n            name='user',\n        ),\n        migrations.DeleteModel(\n            name='UserSocialAuth',\n        ),\n    ]\n```\n\nYep, that's right, it just drops all the models, which implies:\n\n1) that either the Django migration code is not finding the model, but finding the 0001 migration and thinking all the models have been junked.\n\nor\n\n2) something about p-s-a isn't quite set up right for 1.7.1 (eg explicit app labels -- apps with nested models and lacking explicit app labels seem to fox the migration discovery code)\n\nDoes your experience match this, @mtirsel? Does your 0002 (in site-packages/social/migrations) look like mine?\n\nCheers\nSteve\n. Update (and partic one for @omab), I just forked p-s-a and...\n\n1) tried the updated 0001 migration that mentions the related_name change in @mtirsel's  message (https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/default/migrations/0001_initial.py#L78). This did not prevent a deadly 0002 being generated.\n\n2) I added an explict `app_label` value to all of the models in `python-social-auth/social/apps/django_app/default/models.py`. ie, in `Meta`, I added `app_label=\"default\"`. This **DID** prevent the creation of a deadly 0002. \n\nI'm going to ride with our fork for a while (https://github.com/yunojuno/python-social-auth/) before offering up a PR, but if you agree that it make sense, @omab, let me know and I'll issue a PR.\n\nCheers\nSteve \n. @mtirsel Have you tried my fork, above? If it works for you in your automated builds, too, I'll issue a pull request to @omab  \n. ",
    "jessepollak": ":thumbsup: \n. Looks like Python 3.3 is broken because it uses urllib2 (my bad), you should just be able to switch that out.\n. Nice, thanks!\n. :thumbsup: \n. Looks like Python 3.3 is broken because it uses urllib2 (my bad), you should just be able to switch that out.\n. Nice, thanks!\n. ",
    "mohitranka": "Its similar to #172 (but with facebook as the backend). I am using the latest available release (0.1.21).\n\n```\nDjango==1.6\nMySQL-python==1.2.4\nSouth==0.8.4\nargparse==1.2.1\ndistribute==0.6.34\ndjango-extensions==1.2.5\nipython==1.2.0\noauthlib==0.6.1\npython-dateutil==2.2\npython-openid==2.2.5\npython-social-auth==0.1.21\nrequests==2.0.1\nrequests-oauthlib==0.4.0\nsix==1.5.2\ntwython==3.1.2\nwsgiref==0.1.2\n```\n. My pipeline is \n\n```\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details',\n    'myapp.pipeline.finalize',\n)\n```\n\nWhich is standard + custom last step. I'll look into running the step with commenting out the last step of the pipeline and check if the error still exists.\n. Its similar to #172 (but with facebook as the backend). I am using the latest available release (0.1.21).\n\n```\nDjango==1.6\nMySQL-python==1.2.4\nSouth==0.8.4\nargparse==1.2.1\ndistribute==0.6.34\ndjango-extensions==1.2.5\nipython==1.2.0\noauthlib==0.6.1\npython-dateutil==2.2\npython-openid==2.2.5\npython-social-auth==0.1.21\nrequests==2.0.1\nrequests-oauthlib==0.4.0\nsix==1.5.2\ntwython==3.1.2\nwsgiref==0.1.2\n```\n. My pipeline is \n\n```\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details',\n    'myapp.pipeline.finalize',\n)\n```\n\nWhich is standard + custom last step. I'll look into running the step with commenting out the last step of the pipeline and check if the error still exists.\n. ",
    "CrazyPilot": "Have the same problem on facebook, twitter and VK login((\n. Have the same problem on facebook, twitter and VK login((\n. ",
    "htch": "I encounter the same issue (vkontakte and odnoklassniki backends for me), as far as i can remember it has also appeared when i introduced a custom User model. I use the default pipeline.\n. @omab, 0.1.23\n\n```\n$ pip freeze\nDjango==1.6.2\nMySQL-python==1.2.5\nPillow==2.3.1\nSouth==0.8.4\nargparse==1.2.1\nboto==2.27.0\ndistribute==0.6.24\ndjango-bower==4.8.1\ndjango-debug-toolbar==1.0.1\ndjango.js==0.8.1\ndjangorestframework==2.3.13\nipython==1.2.1\noauthlib==0.6.1\npython-openid==2.2.5\npython-social-auth==0.1.23\nrequests==2.2.1\nrequests-oauthlib==0.4.0\nsix==1.6.1\nsqlparse==0.1.11\nwsgiref==0.1.2\n```\n. I guess it does indeed have a lot to do with the state of the database.\nIn my case the culprit was the exception suppressed here https://github.com/omab/python-social-auth/blob/21f462f18dd1b5917e811ab084e3470ce9969aa5/social/pipeline/social_auth.py#L39\n\n```\n(1452, 'Cannot add or update a child row: a foreign key constraint fails (`mi8`.`social_auth_usersocialauth`, CONSTRAINT `user_id_refs_id_e6cbdf29` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`))')\n```\n\nOnce I deleted the foreign key (obviously left from the time when I have switched from auth.User to my custom user model), the error disappeared.\n. I encounter the same issue (vkontakte and odnoklassniki backends for me), as far as i can remember it has also appeared when i introduced a custom User model. I use the default pipeline.\n. @omab, 0.1.23\n\n```\n$ pip freeze\nDjango==1.6.2\nMySQL-python==1.2.5\nPillow==2.3.1\nSouth==0.8.4\nargparse==1.2.1\nboto==2.27.0\ndistribute==0.6.24\ndjango-bower==4.8.1\ndjango-debug-toolbar==1.0.1\ndjango.js==0.8.1\ndjangorestframework==2.3.13\nipython==1.2.1\noauthlib==0.6.1\npython-openid==2.2.5\npython-social-auth==0.1.23\nrequests==2.2.1\nrequests-oauthlib==0.4.0\nsix==1.6.1\nsqlparse==0.1.11\nwsgiref==0.1.2\n```\n. I guess it does indeed have a lot to do with the state of the database.\nIn my case the culprit was the exception suppressed here https://github.com/omab/python-social-auth/blob/21f462f18dd1b5917e811ab084e3470ce9969aa5/social/pipeline/social_auth.py#L39\n\n```\n(1452, 'Cannot add or update a child row: a foreign key constraint fails (`mi8`.`social_auth_usersocialauth`, CONSTRAINT `user_id_refs_id_e6cbdf29` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`))')\n```\n\nOnce I deleted the foreign key (obviously left from the time when I have switched from auth.User to my custom user model), the error disappeared.\n. ",
    "bemall": "Any resolution to this ?\nDajngo 1.7 and Python 2.7\n. Thank you for the feedback and understood!\n. Hi, Is this fixed in python-social-auth==0.2.13. I am still getting this error in this version\n. Any resolution to this ?\nDajngo 1.7 and Python 2.7\n. Thank you for the feedback and understood!\n. Hi, Is this fixed in python-social-auth==0.2.13. I am still getting this error in this version\n. ",
    "krtek4": "Hey @omab \n\nWhen do you plan to release a new version with this fix in ? I have some production website that are actually suffering from this issue.\n. Thanks :)\n. Hey @omab \n\nWhen do you plan to release a new version with this fix in ? I have some production website that are actually suffering from this issue.\n. Thanks :)\n. ",
    "skozan": "This is great news! Tested and works perfectly, thank you very much!\n. This is great news! Tested and works perfectly, thank you very much!\n. ",
    "Bonus05": "sory, it's work\nhave some another issue, that initial redirects to home page\n. sory, it's work\nhave some another issue, that initial redirects to home page\n. ",
    "cdeblois": "Thanks Matias!\n. It seems that it is needed, yes.  Otherwise you get an error about the redirect_uri not matching.  I see other backends seem to do the same thing (reddit, behance, dropbox, stripe, google, jawbone, douban, amazon, yandex, coinbase, weibo, soundcloud, angel).\n\nThanks!\n. Yes, they did change it.  It was originally working fine.  Thank you!\n. It seems that there is an old (OAPI) API request that is being used in the Mendeley-OAuth2 backend class.  Also, it appears that the resulting response is no longer inside 'main'.\n\nOld API (OAPI) request:\n\n<pre>\nhttps://api-oauth2.mendeley.com/oapi/profiles/info/me/\n</pre>\n\nShould now be:\n\n<pre>\nhttps://api.mendeley.com/profiles/me/\n</pre>\n\nResponse (expecting 'main'):\n\n<pre>\nlocal psa.mendeley.user_data values are:  \n{\n    u'discipline': {\n        u'name': [value]\n    },\n    u'first_name': [value],\n    u'last_name': [value],\n    u'display_name': [value],\n    u'disciplines': [\n        {\n            u'name': [value]\n        }\n    ],\n    u'created': u'2013-11-14T22:48:56.000Z',\n    u'photo': {\n        u'square': u'http://s3.amazonaws.com/mendeley-photos/awaiting_square.png',\n        u'standard': u'http://s3.amazonaws.com/mendeley-photos/awaiting.png'\n    }, \n    u'user_type': u'normal',\n    u'email': [value],\n    u'photos': [\n        {\n            u'url': u'http://s3.amazonaws.com/mendeley-photos/awaiting.png',\n            u'original': False,\n            u'height': 120\n        },\n        {\n            u'url': u'http://s3.amazonaws.com/mendeley-photos/awaiting_square.png',\n            u'width': 48,\n            u'original': False,\n            u'height': 48\n        }, \n        {\n            u'url': u'http://s3.amazonaws.com/mendeley-photos/awaiting_square_256.png',\n            u'width': 256,\n            u'original': False,\n            u'height': 256\n        }\n    ],\n    u'link': [value],\n    u'marketing': True,\n    u'verified': True,\n    u'id': u'39202a43-895c-3df9-9add-f2b1d63c5804',\n    u'academic_status': u'Other Professional'\n}\n</pre>\n. Should I submit a PULL request for this?\n. When can this be merged?\n. Thanks Matias!\n. It seems that it is needed, yes.  Otherwise you get an error about the redirect_uri not matching.  I see other backends seem to do the same thing (reddit, behance, dropbox, stripe, google, jawbone, douban, amazon, yandex, coinbase, weibo, soundcloud, angel).\n\nThanks!\n. Yes, they did change it.  It was originally working fine.  Thank you!\n. It seems that there is an old (OAPI) API request that is being used in the Mendeley-OAuth2 backend class.  Also, it appears that the resulting response is no longer inside 'main'.\n\nOld API (OAPI) request:\n\n<pre>\nhttps://api-oauth2.mendeley.com/oapi/profiles/info/me/\n</pre>\n\nShould now be:\n\n<pre>\nhttps://api.mendeley.com/profiles/me/\n</pre>\n\nResponse (expecting 'main'):\n\n<pre>\nlocal psa.mendeley.user_data values are:  \n{\n    u'discipline': {\n        u'name': [value]\n    },\n    u'first_name': [value],\n    u'last_name': [value],\n    u'display_name': [value],\n    u'disciplines': [\n        {\n            u'name': [value]\n        }\n    ],\n    u'created': u'2013-11-14T22:48:56.000Z',\n    u'photo': {\n        u'square': u'http://s3.amazonaws.com/mendeley-photos/awaiting_square.png',\n        u'standard': u'http://s3.amazonaws.com/mendeley-photos/awaiting.png'\n    }, \n    u'user_type': u'normal',\n    u'email': [value],\n    u'photos': [\n        {\n            u'url': u'http://s3.amazonaws.com/mendeley-photos/awaiting.png',\n            u'original': False,\n            u'height': 120\n        },\n        {\n            u'url': u'http://s3.amazonaws.com/mendeley-photos/awaiting_square.png',\n            u'width': 48,\n            u'original': False,\n            u'height': 48\n        }, \n        {\n            u'url': u'http://s3.amazonaws.com/mendeley-photos/awaiting_square_256.png',\n            u'width': 256,\n            u'original': False,\n            u'height': 256\n        }\n    ],\n    u'link': [value],\n    u'marketing': True,\n    u'verified': True,\n    u'id': u'39202a43-895c-3df9-9add-f2b1d63c5804',\n    u'academic_status': u'Other Professional'\n}\n</pre>\n. Should I submit a PULL request for this?\n. When can this be merged?\n. ",
    "jbl2024": "username_max_length function in https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/me/models.py#L73 should be replaced with : \n\n``` python\n    @classmethod\n    def username_max_length(cls):\n        username_field = cls.username_field()\n        field = UserSocialAuth.user_model()._meta.get_field(username_field)\n        return field.max_length\n```\n. I have tested it on my code and it works fine :)\n. username_max_length function in https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/me/models.py#L73 should be replaced with : \n\n``` python\n    @classmethod\n    def username_max_length(cls):\n        username_field = cls.username_field()\n        field = UserSocialAuth.user_model()._meta.get_field(username_field)\n        return field.max_length\n```\n. I have tested it on my code and it works fine :)\n. ",
    "gglentini": "Hi,\nI have encountered exactly the same issue.\n\nMy pipeline is also very similar\n\n```\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details', \n    'social.pipeline.social_auth.social_uid',   \n    'social.pipeline.social_auth.auth_allowed',     \n    'social.pipeline.social_auth.social_user', \n    'social.pipeline.user.get_username', \n    'profiles.pipeline.associate_by_email',   # custom association by mail\n    'social.pipeline.user.create_user', \n    'profiles.pipeline.set_user_password',          \n    'profiles.pipeline.mail_validation',            # send validation mail at signup\n    'social.pipeline.social_auth.associate_user'\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details'\n)\n```\n\nThe problem seems starting in SHA: 228b36bb7067306dd2e263abba2318873b3b87fa.\nI will try to debug or provide a pull request if I can.\n\nCheers\n. Yep, I confirm the fix is properly working.\nThank you.\n. @omab yes, just tried the 0.1.22-dev and a 'password not valid' error is now raised.\nThank you.\n. Hi,\nI have encountered exactly the same issue.\n\nMy pipeline is also very similar\n\n```\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details', \n    'social.pipeline.social_auth.social_uid',   \n    'social.pipeline.social_auth.auth_allowed',     \n    'social.pipeline.social_auth.social_user', \n    'social.pipeline.user.get_username', \n    'profiles.pipeline.associate_by_email',   # custom association by mail\n    'social.pipeline.user.create_user', \n    'profiles.pipeline.set_user_password',          \n    'profiles.pipeline.mail_validation',            # send validation mail at signup\n    'social.pipeline.social_auth.associate_user'\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details'\n)\n```\n\nThe problem seems starting in SHA: 228b36bb7067306dd2e263abba2318873b3b87fa.\nI will try to debug or provide a pull request if I can.\n\nCheers\n. Yep, I confirm the fix is properly working.\nThank you.\n. @omab yes, just tried the 0.1.22-dev and a 'password not valid' error is now raised.\nThank you.\n. ",
    "w0rm": "@gglentini seems to be it! This commit has changed user precedence so the user from session is overridden by the argument of `partial_pipeline_data`.\n. Should be working. I'm sorry I've already reorganised my pipeline so the user is created after email validation and password hash is set in details dict and copied to user on create_user step.\n\n@gglentini can you check if it works in your implementation?\n. If these changes are fine, I can send a pull request.\n. @gglentini seems to be it! This commit has changed user precedence so the user from session is overridden by the argument of `partial_pipeline_data`.\n. Should be working. I'm sorry I've already reorganised my pipeline so the user is created after email validation and password hash is set in details dict and copied to user on create_user step.\n\n@gglentini can you check if it works in your implementation?\n. If these changes are fine, I can send a pull request.\n. ",
    "jandob": "I made a little mockup of how i wanted to use your module. It only covers Oauth since it does not require the storage class. But thats enough for my needs.\nMaybe you could have a look at it and tell me what you think.\nIt would be nice if the backends could be used directly. For now i wrote that GenericStrategy class but it would be nice to get rid of it and use the backends directly.\n\nhttps://gist.github.com/jandob/a53d9233592b15d09ce5\n. @dcmoore-gd \nNo sorry, not much more than the gist i posted, but i think you could build on that.\n. I made a little mockup of how i wanted to use your module. It only covers Oauth since it does not require the storage class. But thats enough for my needs.\nMaybe you could have a look at it and tell me what you think.\nIt would be nice if the backends could be used directly. For now i wrote that GenericStrategy class but it would be nice to get rid of it and use the backends directly.\n\nhttps://gist.github.com/jandob/a53d9233592b15d09ce5\n. @dcmoore-gd \nNo sorry, not much more than the gist i posted, but i think you could build on that.\n. ",
    "dcmoore-gd": "@jandob Did you end up pursuing this further?  I'm considering a similar usage.  Thanks!\n. Incidentally, if anyone comes across this thread, I did end up using it like a library as well, though a bit differently than the gist above.  I identified a few minor changes to python-social-auth that would make this easier for us and others to do, so will try to contribute some of that as time allows.\n. @Gocht Did you get anywhere with this?\n. @martey If you don't, I may submit a PR for this...\n. @berdon Not sure about the actual merge, but here's where it appears:  https://github.com/omab/python-social-auth/blob/df6d841bbcad0a800cc0cf1c4395e0cb2531aabb/social/backends/twitter.py#L39\n. @berdon That's odd, we haven't experienced that 401 auth required error.  We have apps with the email requesting both on and off with the latest version of PSA.  Could there be some other factor causing it for you?\n. Thanks for all your work on `python-social-auth` and now its dependencies, @omab!. @jandob Did you end up pursuing this further?  I'm considering a similar usage.  Thanks!\n. Incidentally, if anyone comes across this thread, I did end up using it like a library as well, though a bit differently than the gist above.  I identified a few minor changes to python-social-auth that would make this easier for us and others to do, so will try to contribute some of that as time allows.\n. @Gocht Did you get anywhere with this?\n. @martey If you don't, I may submit a PR for this...\n. @berdon Not sure about the actual merge, but here's where it appears:  https://github.com/omab/python-social-auth/blob/df6d841bbcad0a800cc0cf1c4395e0cb2531aabb/social/backends/twitter.py#L39\n. @berdon That's odd, we haven't experienced that 401 auth required error.  We have apps with the email requesting both on and off with the latest version of PSA.  Could there be some other factor causing it for you?\n. Thanks for all your work on `python-social-auth` and now its dependencies, @omab!. ",
    "psych0der": "Environment:\n\nRequest Method: GET\nRequest URL: http://localhost:8000/complete/facebook/?redirect_state=i6irPGAcgPVjkkMER4qk2UnBXrmtvFfo&code=AQDtYMNBz-4OVB5LpjIXQMxlsBMYI1OxOfbMGa_AqYv6bn8AaP_Sjb1_PwwJdKoqDej7-5A7YdsNAJT0d9U41et-5mH7ui0gmkLZkxfcWAE0M27aPmqOkj_hmQpsIicRg_kZQulNUQ5fE736B5WSiaXGf3GfwXJkYwhfIq7y1szTUvzwXfw1wqKf1QpC9MRTOhFeplWYP774NAjPAtznay9OAQ55pOrQIdO4y1bGhVb39i7eoubOMiQVZadrqWko-vDrZx5_ulioFRaS5KCKAKYVCuM4Qq8cx-940j-E2X5N85E3_5bH0HrmC7FkSQGYJQ4&state=i6irPGAcgPVjkkMER4qk2UnBXrmtvFfo\n\nDjango Version: 1.5.5\nPython Version: 2.7.6\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.admin',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'social.apps.django_app.default',\n 'example.app')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\n\nTraceback:\nFile \"/Users/mayankbhola/nobles0ul_progr/venvs/resumizr/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                         response = callback(request, _callback_args, *_callback_kwargs)\n   File \"/Users/mayankbhola/nobles0ul_progr/venvs/resumizr/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n2.         return view_func(_args, *_kwargs)\n   File \"../../social/apps/django_app/utils.py\" in wrapper\n3.             return func(request, backend, _args, *_kwargs)\n   File \"../../social/apps/django_app/views.py\" in complete\n4.                        redirect_name=REDIRECT_FIELD_NAME, _args, *_kwargs)\n   File \"../../social/actions.py\" in do_complete\n5.                                  _args, *_kwargs)\n   File \"../../social/strategies/base.py\" in complete\n6.         return self.backend.auth_complete(_args, *_kwargs)\n   File \"../../social/backends/facebook.py\" in auth_complete\n7.             'code': self.data['code']\n   File \"../../social/backends/base.py\" in get_querystring\n8.         return parse_qs(self.request(url, _args, *_kwargs).text)\n   File \"../../social/backends/base.py\" in request\n9.         response.raise_for_status()\n   File \"/Users/mayankbhola/nobles0ul_progr/venvs/resumizr/lib/python2.7/site-packages/requests/models.py\" in raise_for_status\n10.             raise HTTPError(http_error_msg, response=self)\n\nException Type: HTTPError at /complete/facebook/\nException Value: 400 Client Error: Bad Request\n. url \n'https://graph.facebook.com/oauth/access_token'\nself  \n<social.backends.facebook.FacebookOAuth2 object at 0x10be3b210>\nargs  \n()\nresponse  \n<Response [400]>\nkwargs  \n{'params': {'client_id': 'XXXXXXXXXXXXXXXXXX',\n            'client_secret': 'XXXXXXXXXXXXXXXXXX',\n            'code': u'AQDr2cSh0ssAMTh02mINqzO7ucqJxORlTpQ7pcvaJq3_Ncz59Qc2MAhn4Ns3gqGnD169Qgn6YANwKfTUshK1XWSXNWwCFmU7g0BXKhR1vAGFiOcuO1Fj4um6zmBDfptS7TW1yUmJHh9kHaLIhqYYqbe3Jfty5SRO7zx7v8-Fqd5A0giNu1IkKbJreC_1JjPj_0b8mu5I-Sv5v0V4V3bV4ZBFsPJT7Y-CC70rFDFEi4dxp-rsQlTonbcR3A9iswmwBeeKfbuyfNU2epBihuBxZ0SJI-vzb0oNGBjHzcSwbx8CRTn21ytzV1KYO5jH1qHzt4U',\n            'redirect_uri': 'http://localhost:8000/complete/facebook/?redirect_state=i6irPGAcgPVjkkMER4qk2UnBXrmtvFfo'},\n 'timeout': None}\nmethod  \n'GET'\n. Did previous value of any use ?\n. ok thanx\n\nOn 10 March 2014 23:01, Mat\u00edas Aguirre notifications@github.com wrote:\n\n> It did and looks like the server request is OK, I'm still trying to figure\n> out were it's breaking.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/207#issuecomment-37209928\n> .\n\n## \n\nRegards\n_Mayank Bhola_\n. @omab, thanx for that. I tried example app bundled with python social auth\nfor django and filled in Facebook details.\n\nCan you please re mention Facebook details which I need to fill in while\nregestering new app? And is there no way I can test it with local host?\n\nOn Saturday, March 15, 2014, Mat\u00edas Aguirre notifications@github.com\nwrote:\n\n> @psych0der https://github.com/psych0der, I'm still unable to reproduce\n> the issue, I've created a new Facebook application from scratch, filled all\n> the values and it worked, in the process I've noticed that Facebook doesn't\n> allow localhost as App Domains anymore. Also tried my usual app (which is\n> quite old) and it works as expected too.\n> \n> I'm gonna keep looking but could you try with a new application and\n> provide some example code to reproduce the issue?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/207#issuecomment-37718476\n> .\n\n## \n\nRegards\n_Mayank Bhola_\n. Thanx a lot @omab. The issue was, I had registered app using localhost as\nsiteurl (http://localhost:8000).\nI think this should be mentioned in the documentation to not to use\nlocalhost while registering the app.\n\nThanx again :)\n\nOn 15 March 2014 12:07, Mat\u00edas Aguirre notifications@github.com wrote:\n\n> @psych0der https://github.com/psych0der, there were the details I\n> needed to fill:\n> 1. Display Name and Category (popup when clicking Create a New Appfrom the menu)\n> 2. In Settings -> Basic fiilled\n>    - App Domains: myapp.com\n>    - Clicked Add Platform and selected Website\n>      - Set Site URL to http://myapp.com:8000/\n>        1. In Settings -> Advanced\n>    - Ensured that Client OAuth Login is on\n>    - Ensured that Native or desktop app? is off\n> \n> Finally copied App ID (filled SOCIAL_AUTH_FACEBOOK_KEY) and App Secret(filled\n> SOCIAL_AUTH_FACEBOOK_SECRET).\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/207#issuecomment-37718827\n> .\n\n## \n\nRegards\n_Mayank Bhola_\n. Environment:\n\nRequest Method: GET\nRequest URL: http://localhost:8000/complete/facebook/?redirect_state=i6irPGAcgPVjkkMER4qk2UnBXrmtvFfo&code=AQDtYMNBz-4OVB5LpjIXQMxlsBMYI1OxOfbMGa_AqYv6bn8AaP_Sjb1_PwwJdKoqDej7-5A7YdsNAJT0d9U41et-5mH7ui0gmkLZkxfcWAE0M27aPmqOkj_hmQpsIicRg_kZQulNUQ5fE736B5WSiaXGf3GfwXJkYwhfIq7y1szTUvzwXfw1wqKf1QpC9MRTOhFeplWYP774NAjPAtznay9OAQ55pOrQIdO4y1bGhVb39i7eoubOMiQVZadrqWko-vDrZx5_ulioFRaS5KCKAKYVCuM4Qq8cx-940j-E2X5N85E3_5bH0HrmC7FkSQGYJQ4&state=i6irPGAcgPVjkkMER4qk2UnBXrmtvFfo\n\nDjango Version: 1.5.5\nPython Version: 2.7.6\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.admin',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'social.apps.django_app.default',\n 'example.app')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\n\nTraceback:\nFile \"/Users/mayankbhola/nobles0ul_progr/venvs/resumizr/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                         response = callback(request, _callback_args, *_callback_kwargs)\n   File \"/Users/mayankbhola/nobles0ul_progr/venvs/resumizr/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n2.         return view_func(_args, *_kwargs)\n   File \"../../social/apps/django_app/utils.py\" in wrapper\n3.             return func(request, backend, _args, *_kwargs)\n   File \"../../social/apps/django_app/views.py\" in complete\n4.                        redirect_name=REDIRECT_FIELD_NAME, _args, *_kwargs)\n   File \"../../social/actions.py\" in do_complete\n5.                                  _args, *_kwargs)\n   File \"../../social/strategies/base.py\" in complete\n6.         return self.backend.auth_complete(_args, *_kwargs)\n   File \"../../social/backends/facebook.py\" in auth_complete\n7.             'code': self.data['code']\n   File \"../../social/backends/base.py\" in get_querystring\n8.         return parse_qs(self.request(url, _args, *_kwargs).text)\n   File \"../../social/backends/base.py\" in request\n9.         response.raise_for_status()\n   File \"/Users/mayankbhola/nobles0ul_progr/venvs/resumizr/lib/python2.7/site-packages/requests/models.py\" in raise_for_status\n10.             raise HTTPError(http_error_msg, response=self)\n\nException Type: HTTPError at /complete/facebook/\nException Value: 400 Client Error: Bad Request\n. url \n'https://graph.facebook.com/oauth/access_token'\nself  \n<social.backends.facebook.FacebookOAuth2 object at 0x10be3b210>\nargs  \n()\nresponse  \n<Response [400]>\nkwargs  \n{'params': {'client_id': 'XXXXXXXXXXXXXXXXXX',\n            'client_secret': 'XXXXXXXXXXXXXXXXXX',\n            'code': u'AQDr2cSh0ssAMTh02mINqzO7ucqJxORlTpQ7pcvaJq3_Ncz59Qc2MAhn4Ns3gqGnD169Qgn6YANwKfTUshK1XWSXNWwCFmU7g0BXKhR1vAGFiOcuO1Fj4um6zmBDfptS7TW1yUmJHh9kHaLIhqYYqbe3Jfty5SRO7zx7v8-Fqd5A0giNu1IkKbJreC_1JjPj_0b8mu5I-Sv5v0V4V3bV4ZBFsPJT7Y-CC70rFDFEi4dxp-rsQlTonbcR3A9iswmwBeeKfbuyfNU2epBihuBxZ0SJI-vzb0oNGBjHzcSwbx8CRTn21ytzV1KYO5jH1qHzt4U',\n            'redirect_uri': 'http://localhost:8000/complete/facebook/?redirect_state=i6irPGAcgPVjkkMER4qk2UnBXrmtvFfo'},\n 'timeout': None}\nmethod  \n'GET'\n. Did previous value of any use ?\n. ok thanx\n\nOn 10 March 2014 23:01, Mat\u00edas Aguirre notifications@github.com wrote:\n\n> It did and looks like the server request is OK, I'm still trying to figure\n> out were it's breaking.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/207#issuecomment-37209928\n> .\n\n## \n\nRegards\n_Mayank Bhola_\n. @omab, thanx for that. I tried example app bundled with python social auth\nfor django and filled in Facebook details.\n\nCan you please re mention Facebook details which I need to fill in while\nregestering new app? And is there no way I can test it with local host?\n\nOn Saturday, March 15, 2014, Mat\u00edas Aguirre notifications@github.com\nwrote:\n\n> @psych0der https://github.com/psych0der, I'm still unable to reproduce\n> the issue, I've created a new Facebook application from scratch, filled all\n> the values and it worked, in the process I've noticed that Facebook doesn't\n> allow localhost as App Domains anymore. Also tried my usual app (which is\n> quite old) and it works as expected too.\n> \n> I'm gonna keep looking but could you try with a new application and\n> provide some example code to reproduce the issue?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/207#issuecomment-37718476\n> .\n\n## \n\nRegards\n_Mayank Bhola_\n. Thanx a lot @omab. The issue was, I had registered app using localhost as\nsiteurl (http://localhost:8000).\nI think this should be mentioned in the documentation to not to use\nlocalhost while registering the app.\n\nThanx again :)\n\nOn 15 March 2014 12:07, Mat\u00edas Aguirre notifications@github.com wrote:\n\n> @psych0der https://github.com/psych0der, there were the details I\n> needed to fill:\n> 1. Display Name and Category (popup when clicking Create a New Appfrom the menu)\n> 2. In Settings -> Basic fiilled\n>    - App Domains: myapp.com\n>    - Clicked Add Platform and selected Website\n>      - Set Site URL to http://myapp.com:8000/\n>        1. In Settings -> Advanced\n>    - Ensured that Client OAuth Login is on\n>    - Ensured that Native or desktop app? is off\n> \n> Finally copied App ID (filled SOCIAL_AUTH_FACEBOOK_KEY) and App Secret(filled\n> SOCIAL_AUTH_FACEBOOK_SECRET).\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/207#issuecomment-37718827\n> .\n\n## \n\nRegards\n_Mayank Bhola_\n. ",
    "alexche8": "I got same issue  with steam .\n. I got same issue  with steam .\n. ",
    "vero4karu": "Thank you for your answer! The user is registered but not logged in and tries to log in with his Facebook account. \nWhen somebody registers with his Facebook account and then logs in everything works fine. The problem appears when he registers with his email (I'm using `django-registration`), so we have an instance of User (but not UserSocialAuth), and then we tries to login with his Facebook account associated the same email address.\nAdding `'social.pipeline.social_auth.associate_by_email'` gives me the same error :(\n. Thank you so much. It worked. You were right, the issue was about the order in the pipeline.\n\nMe alegr\u00f3 el d\u00eda :) Much\u00edsimas gracias por responder y perd\u00f3n por las molestias.\n. Hello Mat\u00edas, \nI got the same error and have no idea how to sole it. It appears when I try to do the following thing:\n\nThere are two registered users on our website: a user **A** with an email `a@example.com` and a user **B** with an email `b@example.com`. Both are instances of `User` model and have no social network associated with their accounts.\n\nA user **A** logs in and tries to associate his Google account with an account on our website. His Google account has an email `b@example.com`.\n\nSo at this moment it fails with an error:\n\n```\nduplicate key value violates unique constraint \"userprofile_user_email_key\"\nDETAIL:  Key (email)=(b@example.com) already exists.\n```\n\nLog:\n\n```\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/core/handlers/base.py in get_response\n                    response = wrapped_callback(request, *callback_args, **callback_kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/views/decorators/csrf.py in wrapped_view\n        return view_func(*args, **kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/apps/django_app/utils.py in wrapper\n            return func(request, backend, *args, **kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/apps/django_app/views.py in complete\n                       redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/actions.py in do_complete\n                                 *args, **kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/strategies/base.py in complete\n        return self.backend.auth_complete(*args, **kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/backends/oauth.py in auth_complete\n                            *args, **kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/backends/oauth.py in do_auth\n        return self.strategy.authenticate(*args, **kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/strategies/django_strategy.py in authenticate\n        return authenticate(*args, **kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/contrib/auth/__init__.py in authenticate\n            user = backend.authenticate(**credentials) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/backends/base.py in authenticate\n        return self.pipeline(pipeline, *args, **kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/backends/base.py in pipeline\n        out = self.run_pipeline(pipeline, pipeline_index, *args, **kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/backends/base.py in run_pipeline\n            result = func(*args, **out) or {} ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/pipeline/user.py in user_details\n            strategy.storage.user.changed(user) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/storage/django_orm.py in changed\n        user.save() ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/base.py in save\n                       force_update=force_update, update_fields=update_fields) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/base.py in save_base\n            updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/base.py in _save_table\n                                      forced_update) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/base.py in _do_update\n        return filtered._update(values) > 0 ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/query.py in _update\n        return query.get_compiler(self.db).execute_sql(None) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/sql/compiler.py in execute_sql\n        cursor = super(SQLUpdateCompiler, self).execute_sql(result_type) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/sql/compiler.py in execute_sql\n        cursor.execute(sql, params) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/debug_toolbar/panels/sql/tracking.py in execute\n        return self._record(self.cursor.execute, sql, params) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/debug_toolbar/panels/sql/tracking.py in _record\n            return method(sql, params) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/backends/util.py in execute\n            return super(CursorDebugWrapper, self).execute(sql, params) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/backends/util.py in execute\n                return self.cursor.execute(sql, params) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/utils.py in __exit__\n                six.reraise(dj_exc_type, dj_exc_value, traceback) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/backends/util.py in execute\n                return self.cursor.execute(sql, params) ...\n```\n\nThank you in advance!\n. @omab Thank you for your answer! I figured out that in order to fix it I need to add `email` to `PROTECTED_USER_FIELDS` of a strategy. In this case it won't replace `a@example.com`of **A** user with `b@example.com` and violate a unique constraint for `email` field.\n\nWhat is the proper way to set this attribute?\n\nhttps://github.com/omab/python-social-auth/blob/master/social/pipeline/user.py#L76\n. Thank you for your answer! The user is registered but not logged in and tries to log in with his Facebook account. \nWhen somebody registers with his Facebook account and then logs in everything works fine. The problem appears when he registers with his email (I'm using `django-registration`), so we have an instance of User (but not UserSocialAuth), and then we tries to login with his Facebook account associated the same email address.\nAdding `'social.pipeline.social_auth.associate_by_email'` gives me the same error :(\n. Thank you so much. It worked. You were right, the issue was about the order in the pipeline.\n\nMe alegr\u00f3 el d\u00eda :) Much\u00edsimas gracias por responder y perd\u00f3n por las molestias.\n. Hello Mat\u00edas, \nI got the same error and have no idea how to sole it. It appears when I try to do the following thing:\n\nThere are two registered users on our website: a user **A** with an email `a@example.com` and a user **B** with an email `b@example.com`. Both are instances of `User` model and have no social network associated with their accounts.\n\nA user **A** logs in and tries to associate his Google account with an account on our website. His Google account has an email `b@example.com`.\n\nSo at this moment it fails with an error:\n\n```\nduplicate key value violates unique constraint \"userprofile_user_email_key\"\nDETAIL:  Key (email)=(b@example.com) already exists.\n```\n\nLog:\n\n```\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/core/handlers/base.py in get_response\n                    response = wrapped_callback(request, *callback_args, **callback_kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/views/decorators/csrf.py in wrapped_view\n        return view_func(*args, **kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/apps/django_app/utils.py in wrapper\n            return func(request, backend, *args, **kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/apps/django_app/views.py in complete\n                       redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/actions.py in do_complete\n                                 *args, **kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/strategies/base.py in complete\n        return self.backend.auth_complete(*args, **kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/backends/oauth.py in auth_complete\n                            *args, **kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/backends/oauth.py in do_auth\n        return self.strategy.authenticate(*args, **kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/strategies/django_strategy.py in authenticate\n        return authenticate(*args, **kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/contrib/auth/__init__.py in authenticate\n            user = backend.authenticate(**credentials) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/backends/base.py in authenticate\n        return self.pipeline(pipeline, *args, **kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/backends/base.py in pipeline\n        out = self.run_pipeline(pipeline, pipeline_index, *args, **kwargs) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/backends/base.py in run_pipeline\n            result = func(*args, **out) or {} ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/pipeline/user.py in user_details\n            strategy.storage.user.changed(user) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/storage/django_orm.py in changed\n        user.save() ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/base.py in save\n                       force_update=force_update, update_fields=update_fields) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/base.py in save_base\n            updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/base.py in _save_table\n                                      forced_update) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/base.py in _do_update\n        return filtered._update(values) > 0 ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/query.py in _update\n        return query.get_compiler(self.db).execute_sql(None) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/sql/compiler.py in execute_sql\n        cursor = super(SQLUpdateCompiler, self).execute_sql(result_type) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/sql/compiler.py in execute_sql\n        cursor.execute(sql, params) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/debug_toolbar/panels/sql/tracking.py in execute\n        return self._record(self.cursor.execute, sql, params) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/debug_toolbar/panels/sql/tracking.py in _record\n            return method(sql, params) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/backends/util.py in execute\n            return super(CursorDebugWrapper, self).execute(sql, params) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/backends/util.py in execute\n                return self.cursor.execute(sql, params) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/utils.py in __exit__\n                six.reraise(dj_exc_type, dj_exc_value, traceback) ...\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/backends/util.py in execute\n                return self.cursor.execute(sql, params) ...\n```\n\nThank you in advance!\n. @omab Thank you for your answer! I figured out that in order to fix it I need to add `email` to `PROTECTED_USER_FIELDS` of a strategy. In this case it won't replace `a@example.com`of **A** user with `b@example.com` and violate a unique constraint for `email` field.\n\nWhat is the proper way to set this attribute?\n\nhttps://github.com/omab/python-social-auth/blob/master/social/pipeline/user.py#L76\n. ",
    "AdaLovelance": "worked for me too, thanks a lot!\n. worked for me too, thanks a lot!\n. ",
    "camilonova": "any updates on this?\n. @omab can we have it documented somewhere?\n. any updates on this?\n. @omab can we have it documented somewhere?\n. ",
    "mykhul": "I am new with using these packages, and I am experiencing this issue. I have followed all of the advice here, and am still having the same problem.\n. I am new with using these packages, and I am experiencing this issue. I have followed all of the advice here, and am still having the same problem.\n. ",
    "GregoryAveryWeir": "I have not tested it, but the 1.2 docs say that the messages framework is a new feature \"for both anonymous and authenticated clients:\" https://docs.djangoproject.com/en/1.2/ref/contrib/messages/\n\nIt definitely works in 1.6.\n. I have not tested it, but the 1.2 docs say that the messages framework is a new feature \"for both anonymous and authenticated clients:\" https://docs.djangoproject.com/en/1.2/ref/contrib/messages/\n\nIt definitely works in 1.6.\n. ",
    "Darwesh27": "@omab I've encountered a same kind of problem. The reason, I guess, is that I have an app named 'social'. What can I do about it.\n. I didn't knew this problem would occur. Now I have a running local app with name social and my site is live. I think I can't change the name of my local app. Is there any way I can refer the python-social-auth's 'social' app with a different name in my whole project including INSTALLED_APPS\n. And also 'social' is too common name. python-social-auth should have some prefix to social. \n. I'd definitely had renamed my app to something specific rather then just 'social' if it was going to be used by hundreds of developers around but since I will just be used by me so I am going to keep it that way and use another social auth app that will not conflict. :)\n. @omab I've encountered a same kind of problem. The reason, I guess, is that I have an app named 'social'. What can I do about it.\n. I didn't knew this problem would occur. Now I have a running local app with name social and my site is live. I think I can't change the name of my local app. Is there any way I can refer the python-social-auth's 'social' app with a different name in my whole project including INSTALLED_APPS\n. And also 'social' is too common name. python-social-auth should have some prefix to social. \n. I'd definitely had renamed my app to something specific rather then just 'social' if it was going to be used by hundreds of developers around but since I will just be used by me so I am going to keep it that way and use another social auth app that will not conflict. :)\n. ",
    "abunsen": ":+1: thank you!\n. :+1: thank you!\n. ",
    "lvelezsantos": "The default url sending by python-social-auth. also force the return with: \"?next=/complete/live/\" and \"?next=www.example.com/complete/live/\". and always fails when the security mechanism enabled. When I disable it everything works perfectly.\n\nerror in url hotmail page \n\n```\nhttps://login.live.com/err.srf?lc=1033#error=invalid_request&error_description=The%20provided%20value%20for%20the%20input%20parameter%20'redirect_uri'%20is%20not%20valid.%20The%20expected%20value%20is%20'https://login.live.com/oauth20_desktop.srf'%20or%20a%20URL%20which%20matches%20the%20redirect%20URI%20registered%20for%20this%20client%20application.&state=mPfavdURoteYz5279dsPCYRKhkjGG2Pr\n```\n. The default url sending by python-social-auth. also force the return with: \"?next=/complete/live/\" and \"?next=www.example.com/complete/live/\". and always fails when the security mechanism enabled. When I disable it everything works perfectly.\n\nerror in url hotmail page \n\n```\nhttps://login.live.com/err.srf?lc=1033#error=invalid_request&error_description=The%20provided%20value%20for%20the%20input%20parameter%20'redirect_uri'%20is%20not%20valid.%20The%20expected%20value%20is%20'https://login.live.com/oauth20_desktop.srf'%20or%20a%20URL%20which%20matches%20the%20redirect%20URI%20registered%20for%20this%20client%20application.&state=mPfavdURoteYz5279dsPCYRKhkjGG2Pr\n```\n. ",
    "sid24ss": "Alright. I guess this can be closed then. Thanks!\n. But isn't that a hack? What if the user signs up and then doesn't check\nher mail in the same session?\n\n## \n\nSiddharth Swaminathan\nSent from my mobile device,\nplease excuse any brevity.\nOn Mar 21, 2014 12:51 AM, \"Mat\u00edas Aguirre\" notifications@github.com wrote:\n\n> You should store the password in the session when you get it the first\n> time, then retrieve it and set it once the user was created, so you need a\n> new pipeline function after create_user that will get that password from\n> the session and set it in the newly created instance.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/222#issuecomment-38249076\n> .\n. Yeah, I thought about points 1 and 3. I'll look into this. Thanks a lot,\njust wanted to make sure there's no feature I'm missing.\n\nI'm closing this for now.\n\nOn Fri, Mar 21, 2014 at 1:47 AM, Mat\u00edas Aguirre notifications@github.comwrote:\n\n> Yeah, that's possible, the user could easily clean the cookies, but it's\n> just an example on how you can manipulate the pipeline, other options could\n> be:\n> - ask for the password after the email validation was complete\n>   (partial pipeline)\n> - store the initial password in a new table in your server, or in\n>   another storage like redis or memcached (beware of memcached restarts)\n> - create the user when the data in available but set it as inactiveand remove the flag once the email is validated (that way the user can't\n>   login unless the email is validated)\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/222#issuecomment-38250752\n> .\n\n## \n\nSiddharth Swaminathan\nhttp://siddharthswaminathan.in/\n. Alright. I guess this can be closed then. Thanks!\n. But isn't that a hack? What if the user signs up and then doesn't check\nher mail in the same session?\n\n## \n\nSiddharth Swaminathan\nSent from my mobile device,\nplease excuse any brevity.\nOn Mar 21, 2014 12:51 AM, \"Mat\u00edas Aguirre\" notifications@github.com wrote:\n\n> You should store the password in the session when you get it the first\n> time, then retrieve it and set it once the user was created, so you need a\n> new pipeline function after create_user that will get that password from\n> the session and set it in the newly created instance.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/222#issuecomment-38249076\n> .\n. Yeah, I thought about points 1 and 3. I'll look into this. Thanks a lot,\njust wanted to make sure there's no feature I'm missing.\n\nI'm closing this for now.\n\nOn Fri, Mar 21, 2014 at 1:47 AM, Mat\u00edas Aguirre notifications@github.comwrote:\n\n> Yeah, that's possible, the user could easily clean the cookies, but it's\n> just an example on how you can manipulate the pipeline, other options could\n> be:\n> - ask for the password after the email validation was complete\n>   (partial pipeline)\n> - store the initial password in a new table in your server, or in\n>   another storage like redis or memcached (beware of memcached restarts)\n> - create the user when the data in available but set it as inactiveand remove the flag once the email is validated (that way the user can't\n>   login unless the email is validated)\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/222#issuecomment-38250752\n> .\n\n## \n\nSiddharth Swaminathan\nhttp://siddharthswaminathan.in/\n. ",
    "adamsc": "I think we figured it out. it seems to be an issue with the redirect URL from Google OAuth. I  will post a more complete explanation when we get a fix.\n. @goldsmith For us, it turned out to be an issue with the redirect URI we registered with google, rather than any actual bugs with the auth state. At the time, we weren't supporting HTTPS but didn't have it disabled. When someone would attempt to use the site via HTTPS, they would get an error that looked like this:\n\n![error](https://f.cloud.github.com/assets/2161601/2479536/77fb5a2a-b09a-11e3-98ab-4ed9a1afa6ef.png)\n\nI still haven't had a chance to look into why, but that was getting raised as AuthStateMissing. It was hard to track down because nothing in the logs suggested this sort of configuration issue. We only figured it out after a user emailed us that screenshot.\n\nIf there's any other information I can provide to help you debug, please let me know. \n. I think we figured it out. it seems to be an issue with the redirect URL from Google OAuth. I  will post a more complete explanation when we get a fix.\n. @goldsmith For us, it turned out to be an issue with the redirect URI we registered with google, rather than any actual bugs with the auth state. At the time, we weren't supporting HTTPS but didn't have it disabled. When someone would attempt to use the site via HTTPS, they would get an error that looked like this:\n\n![error](https://f.cloud.github.com/assets/2161601/2479536/77fb5a2a-b09a-11e3-98ab-4ed9a1afa6ef.png)\n\nI still haven't had a chance to look into why, but that was getting raised as AuthStateMissing. It was hard to track down because nothing in the logs suggested this sort of configuration issue. We only figured it out after a user emailed us that screenshot.\n\nIf there's any other information I can provide to help you debug, please let me know. \n. ",
    "goldsmith": "@adamsc I think we're running into the same issue. I've registered about 600 users, and it seems like roughly one in 50 will get an AuthStateMissing bug. I think it has something to do with Django sessions not properly storing the 'google-oauth2_state' key. \n\nDo you have any updates on how you solved it?\n. @adamsc I think we're running into the same issue. I've registered about 600 users, and it seems like roughly one in 50 will get an AuthStateMissing bug. I think it has something to do with Django sessions not properly storing the 'google-oauth2_state' key. \n\nDo you have any updates on how you solved it?\n. ",
    "jpatel3": "Can some one provide the more information on this issue? We are running into same issue, but its happening rarely and not able to figure out the pattern.\n. Any luck? Any solution or at least cause on why it happens? Its tough to actively reproduce this issue, it happens randomly. Tried to check with different browser and different machines, but not any consistent pattern. (For us it happens on google signin)\n. +1 Whats the solution for this issue? I was running requests 2.3.0, upgrading to 2.14.2 throws the above error. What's the supported version of requests for python-social-auth? . @chidg It worked for me. I had to do` pip uninstall -y certifi && pip install certifi==2015.04.28` as suggested on one of the above comments. Thanks.. @LucasRoesler Can you share some details?\n. Can some one provide the more information on this issue? We are running into same issue, but its happening rarely and not able to figure out the pattern.\n. Any luck? Any solution or at least cause on why it happens? Its tough to actively reproduce this issue, it happens randomly. Tried to check with different browser and different machines, but not any consistent pattern. (For us it happens on google signin)\n. +1 Whats the solution for this issue? I was running requests 2.3.0, upgrading to 2.14.2 throws the above error. What's the supported version of requests for python-social-auth? . @chidg It worked for me. I had to do` pip uninstall -y certifi && pip install certifi==2015.04.28` as suggested on one of the above comments. Thanks.. @LucasRoesler Can you share some details?\n. ",
    "chriscauley": "I'm running into the same problem using uwsgi and nginx with django==1.5. The bug only occurs about one in every 5 times someone tries to log in. It won't happen on my development machine using runserver but it does happen on live. I've tried varying DEBUG and http/https, as well as removing all my custom middleware and context processors.\n. I'm running into the same problem using uwsgi and nginx with django==1.5. The bug only occurs about one in every 5 times someone tries to log in. It won't happen on my development machine using runserver but it does happen on live. I've tried varying DEBUG and http/https, as well as removing all my custom middleware and context processors.\n. ",
    "nezo": "Hi!\n\nI still have this issue with Django.\n(More details: using HTTPS only, Django 1.7.3 + uWSGI 2.0.8 + nginx 1.4.6)\n\nIt happens in production, only after running for a while. Last time it occured, I tried to log in with several browsers but that was unsuccessful.\nA restart of Django server is usually enough to fix it, though.\n\nAs @jpatel3 and @chriscauley said it's pretty random and I didn't found the pattern yet.\n. Hi!\n\nI still have this issue with Django.\n(More details: using HTTPS only, Django 1.7.3 + uWSGI 2.0.8 + nginx 1.4.6)\n\nIt happens in production, only after running for a while. Last time it occured, I tried to log in with several browsers but that was unsuccessful.\nA restart of Django server is usually enough to fix it, though.\n\nAs @jpatel3 and @chriscauley said it's pretty random and I didn't found the pattern yet.\n. ",
    "craig-hacklaunch": "+1 on this seeing the same problem in production. Did anyone get any closer on figuring it out?\n. +1 on this I have seen the same behaviour as pgcd. Is there any workaround suggested?\n. I have also seen this issue caused where you are giving the user multiple oauth login options and using a  email verification step. The user uses one oauth login and then another without verifying the first. Then when they come to validate the first link of the first oauth provider the session has been changed.  \n. This is also a problem if you are using a partial pipeline, for example during email validation. If the user tries to complete the sign up from a different device so the session is simply not available. Also if you have a partial pipeline and the user uses a second backend to login while the first is partially complete the partial for the first is removed. This mean if they come back later to to complete the validation through the email link it will no longer be valid. \n. @omab as @maxsocl mention above I don't think the current implementation is how most users expect things to work. There should not be a dependency on the session for the mail validation partial. There is no guarantee the user will continue the process using the same device or even browser. Any state information should be retrievable from the validation link and not depend on the session.\n. @omab thanks for your contribution to the community :). Your fix sounds like a good approach, I guess this will fix the problem for all partial pipelines that were using the session to dump their data to before. \n. +1 on this seeing the same problem in production. Did anyone get any closer on figuring it out?\n. +1 on this I have seen the same behaviour as pgcd. Is there any workaround suggested?\n. I have also seen this issue caused where you are giving the user multiple oauth login options and using a  email verification step. The user uses one oauth login and then another without verifying the first. Then when they come to validate the first link of the first oauth provider the session has been changed.  \n. This is also a problem if you are using a partial pipeline, for example during email validation. If the user tries to complete the sign up from a different device so the session is simply not available. Also if you have a partial pipeline and the user uses a second backend to login while the first is partially complete the partial for the first is removed. This mean if they come back later to to complete the validation through the email link it will no longer be valid. \n. @omab as @maxsocl mention above I don't think the current implementation is how most users expect things to work. There should not be a dependency on the session for the mail validation partial. There is no guarantee the user will continue the process using the same device or even browser. Any state information should be retrievable from the validation link and not depend on the session.\n. @omab thanks for your contribution to the community :). Your fix sounds like a good approach, I guess this will fix the problem for all partial pipelines that were using the session to dump their data to before. \n. ",
    "merutak": "I'm getting this whenever the user hits /complete/provider/ twice (to me, happens often with Linkedin). I'm guessing - not sure - that what happens is this:\n- The user clicks the 'accept' button twice by mistake (or maybe because of a bug with the provider's front end).\n- The first 'complete' pops the session state and tries to continue with the pipeline. It fails because the provider revoked the token, because of the second request.\n- The second 'complete' doesn't find the state so fails.\n\nIf this is indeed the issue, maybe we can somehow avoid popping the session state; rather leaving it as is for the next request.\n. I also get this frequently.\n. @amigo00678  Can you be more specific? Where to put it?\n\nI think I eventually got this solved, by NOT passing a \"scope\" parameter to Linkedin's auth.\n. I'm getting this whenever the user hits /complete/provider/ twice (to me, happens often with Linkedin). I'm guessing - not sure - that what happens is this:\n- The user clicks the 'accept' button twice by mistake (or maybe because of a bug with the provider's front end).\n- The first 'complete' pops the session state and tries to continue with the pipeline. It fails because the provider revoked the token, because of the second request.\n- The second 'complete' doesn't find the state so fails.\n\nIf this is indeed the issue, maybe we can somehow avoid popping the session state; rather leaving it as is for the next request.\n. I also get this frequently.\n. @amigo00678  Can you be more specific? Where to put it?\n\nI think I eventually got this solved, by NOT passing a \"scope\" parameter to Linkedin's auth.\n. ",
    "jackismissing": "That was it, thanks a lot !\n. Hello,\n\nI am sorry I polluted the discussion again, it was actually a problem of not properly signed ssl certificate :)\n\nCheers !\n. That was it, thanks a lot !\n. Hello,\n\nI am sorry I polluted the discussion again, it was actually a problem of not properly signed ssl certificate :)\n\nCheers !\n. ",
    "hroncok": "Sorry, I'm quite new to this, where do I find logs when I `./manage.py\nrunserver` on the example app from this repo?\n. No error at all is there. Just 200 OK for /login/github and that's it.\nWriting from my cell phone so I cannot copy paste it right now.\n. Nope, it's github's 404, not Django's.\n. ```\n[23/Mar/2014 12:33:42] \"GET / HTTP/1.1\" 200 6954\n[23/Mar/2014 12:33:47] \"GET /login/github/ HTTP/1.1\" 302 0\n```\n\nhttps://github.com/login/oauth/authorize?state=OTAXNkH7U2mOr6rBvkNcpAl3oPyn59md&redirect_uri=http%3A%2F%2F127.0.0.1%3A8000%2Fcomplete%2Fgithub%2F%3Fredirect_state%3DOTAXNkH7U2mOr6rBvkNcpAl3oPyn59md&response_type=code&client_id=None\n. That's not set on the example app, ok, thanks, I'll try to look at this in\nthe docs.\n. Do I need to use [social.pipeline.social_auth.associate_by_email](http://psa.matiasaguirre.net/docs/use_cases.html#associate-users-by-email)? And what of the emails are different?\n. Thanks a lot for answering my noob questions.\n. Thanks for info, will ask for help there next time.\n. Sorry, I'm quite new to this, where do I find logs when I `./manage.py\nrunserver` on the example app from this repo?\n. No error at all is there. Just 200 OK for /login/github and that's it.\nWriting from my cell phone so I cannot copy paste it right now.\n. Nope, it's github's 404, not Django's.\n. ```\n[23/Mar/2014 12:33:42] \"GET / HTTP/1.1\" 200 6954\n[23/Mar/2014 12:33:47] \"GET /login/github/ HTTP/1.1\" 302 0\n```\n\nhttps://github.com/login/oauth/authorize?state=OTAXNkH7U2mOr6rBvkNcpAl3oPyn59md&redirect_uri=http%3A%2F%2F127.0.0.1%3A8000%2Fcomplete%2Fgithub%2F%3Fredirect_state%3DOTAXNkH7U2mOr6rBvkNcpAl3oPyn59md&response_type=code&client_id=None\n. That's not set on the example app, ok, thanks, I'll try to look at this in\nthe docs.\n. Do I need to use [social.pipeline.social_auth.associate_by_email](http://psa.matiasaguirre.net/docs/use_cases.html#associate-users-by-email)? And what of the emails are different?\n. Thanks a lot for answering my noob questions.\n. Thanks for info, will ask for help there next time.\n. ",
    "pekoslaw": "I was testing it and bitbucket do not return any data in that case.\nAuthForbidden exception is much easier to identify that existing UnboundError.\nI do not insist. Made workaround in my application for that\n. I was testing it and bitbucket do not return any data in that case.\nAuthForbidden exception is much easier to identify that existing UnboundError.\nI do not insist. Made workaround in my application for that\n. ",
    "ricardomartins": "Thank you a lot @omab , for answering this fast. I'll do as you suggested, change `SESSION_SERIALIZER` now and wait for a new release.\n. Thank you a lot @omab , for answering this fast. I'll do as you suggested, change `SESSION_SERIALIZER` now and wait for a new release.\n. ",
    "ranjeetsghrix": "Thanks a lot , you save my day or I don't know may be days :+1: )\n. @omab  One general question , In case of twitter what will be the `access token` because there are two things that we get from twitter `oauth_token_secret` and `oauth_token`.\n. @omab  It gives me 401 Client Error: Unauthorized\n. @omab Here is the trace-back for twitter error : \nEnvironment:\n\nRequest Method: GET\nRequest URL: http:///social_service/auth/twitter/\n\nDjango Version: 1.6.2\nPython Version: 2.7.4\nInstalled Applications:\n('grappelli',\n 'django.contrib.admin',\n 'django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n)\nInstalled Middleware:\n('django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.common.CommonMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.middleware.clickjacking.XFrameOptionsMiddleware',\n 'django.middleware.locale.LocaleMiddleware',\n 'config.lang.SessionBasedLocaleMiddleware')\n\nTraceback:\nFile \"/home/ghrix/projects2014/test/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                     response = wrapped_callback(request, _callback_args, *_callback_kwargs)\n   File \"/home/ghrix/projects2014/test/local/lib/python2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n2.             return func(request, backend, _args, *_kwargs)\n   File \"/home/ghrix/projects2014/Test/test/social_services/views.py\" in register_by_access_token\n3.         user = request.strategy.backend.do_auth({'oauth_token': '....', 'oauth_token_secret':  '.....'})\n   File \"/home/ghrix/projects2014/test/local/lib/python2.7/site-packages/social/backends/oauth.py\" in do_auth\n4.         data = self.user_data(access_token)\n   File \"/home/ghrix/projects2014/test/local/lib/python2.7/site-packages/social/backends/twitter.py\" in user_data\n5.             auth=self.oauth_auth(access_token)\n   File \"/home/ghrix/projects2014/test/local/lib/python2.7/site-packages/social/backends/base.py\" in get_json\n6.         return self.request(url, _args, *_kwargs).json()\n   File \"/home/ghrix/projects2014/test/local/lib/python2.7/site-packages/social/backends/base.py\" in request\n7.         response.raise_for_status()\n   File \"/home/ghrix/projects2014/test/local/lib/python2.7/site-packages/requests/models.py\" in raise_for_status\n8.             raise HTTPError(http_error_msg, response=self)\n\nException Type: HTTPError at /social_service/auth/twitter/\nException Value: 401 Client Error: Unauthorized\n. @omab   Hi any updates ??\n. @omab Thanks for the reply but The issue is still remain same for me and unlike maryokhin https://github.com/omab/python-social-auth/issues/272#issuecomment-43770728  , I have defined all keys in my settings but stll doesn't work for me.\n\nAlso the issue of VK authentications is not resolved I am still getting the `user_data() takes at least 3 arguments (2 given)`\nMy code is as follows : \n\n``` code\nif backend == 'vk-oauth2':\n            access_token =\"abcbcbbc\"\n            user = request.strategy.backend.do_auth(access_token)\n```\n\nand traceback is as follows : \n\n``` code\n\nEnvironment:\n\n\nRequest Method: GET\nRequest URL: http://{domain_name}/social_service/auth/vk-oauth2/\n\nDjango Version: 1.6.2\nPython Version: 2.7.3\nInstalled Applications:\n('grappelli',\n 'django.contrib.admin',\n 'django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'social.apps.django_app.default',\n )\nInstalled Middleware:\n('django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.common.CommonMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.middleware.clickjacking.XFrameOptionsMiddleware',\n 'django.middleware.locale.LocaleMiddleware',\n 'config.lang.SessionBasedLocaleMiddleware')\n\n\nTraceback:\nFile \"/home/ghrix/MEM/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n  114.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/home/ghrix/MEM/local/lib/python2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n  45.             return func(request, backend, *args, **kwargs)\nFile \"/home/ghrix/MEM/MemNowBackEnd/social_services/views.py\" in register_by_access_token\n  105.          user = request.strategy.backend.do_auth(access_token)\nFile \"/home/ghrix/MEM/local/lib/python2.7/site-packages/social/backends/oauth.py\" in do_auth\n  360.         data = self.user_data(access_token, *args, **kwargs)\n\nException Type: TypeError at /social_service/auth/vk-oauth2/\nException Value: user_data() takes at least 3 arguments (2 given)\n\n```\n. Thanks a lot , you save my day or I don't know may be days :+1: )\n. @omab  One general question , In case of twitter what will be the `access token` because there are two things that we get from twitter `oauth_token_secret` and `oauth_token`.\n. @omab  It gives me 401 Client Error: Unauthorized\n. @omab Here is the trace-back for twitter error : \nEnvironment:\n\nRequest Method: GET\nRequest URL: http:///social_service/auth/twitter/\n\nDjango Version: 1.6.2\nPython Version: 2.7.4\nInstalled Applications:\n('grappelli',\n 'django.contrib.admin',\n 'django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n)\nInstalled Middleware:\n('django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.common.CommonMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.middleware.clickjacking.XFrameOptionsMiddleware',\n 'django.middleware.locale.LocaleMiddleware',\n 'config.lang.SessionBasedLocaleMiddleware')\n\nTraceback:\nFile \"/home/ghrix/projects2014/test/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                     response = wrapped_callback(request, _callback_args, *_callback_kwargs)\n   File \"/home/ghrix/projects2014/test/local/lib/python2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n2.             return func(request, backend, _args, *_kwargs)\n   File \"/home/ghrix/projects2014/Test/test/social_services/views.py\" in register_by_access_token\n3.         user = request.strategy.backend.do_auth({'oauth_token': '....', 'oauth_token_secret':  '.....'})\n   File \"/home/ghrix/projects2014/test/local/lib/python2.7/site-packages/social/backends/oauth.py\" in do_auth\n4.         data = self.user_data(access_token)\n   File \"/home/ghrix/projects2014/test/local/lib/python2.7/site-packages/social/backends/twitter.py\" in user_data\n5.             auth=self.oauth_auth(access_token)\n   File \"/home/ghrix/projects2014/test/local/lib/python2.7/site-packages/social/backends/base.py\" in get_json\n6.         return self.request(url, _args, *_kwargs).json()\n   File \"/home/ghrix/projects2014/test/local/lib/python2.7/site-packages/social/backends/base.py\" in request\n7.         response.raise_for_status()\n   File \"/home/ghrix/projects2014/test/local/lib/python2.7/site-packages/requests/models.py\" in raise_for_status\n8.             raise HTTPError(http_error_msg, response=self)\n\nException Type: HTTPError at /social_service/auth/twitter/\nException Value: 401 Client Error: Unauthorized\n. @omab   Hi any updates ??\n. @omab Thanks for the reply but The issue is still remain same for me and unlike maryokhin https://github.com/omab/python-social-auth/issues/272#issuecomment-43770728  , I have defined all keys in my settings but stll doesn't work for me.\n\nAlso the issue of VK authentications is not resolved I am still getting the `user_data() takes at least 3 arguments (2 given)`\nMy code is as follows : \n\n``` code\nif backend == 'vk-oauth2':\n            access_token =\"abcbcbbc\"\n            user = request.strategy.backend.do_auth(access_token)\n```\n\nand traceback is as follows : \n\n``` code\n\nEnvironment:\n\n\nRequest Method: GET\nRequest URL: http://{domain_name}/social_service/auth/vk-oauth2/\n\nDjango Version: 1.6.2\nPython Version: 2.7.3\nInstalled Applications:\n('grappelli',\n 'django.contrib.admin',\n 'django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'social.apps.django_app.default',\n )\nInstalled Middleware:\n('django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.common.CommonMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.middleware.clickjacking.XFrameOptionsMiddleware',\n 'django.middleware.locale.LocaleMiddleware',\n 'config.lang.SessionBasedLocaleMiddleware')\n\n\nTraceback:\nFile \"/home/ghrix/MEM/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n  114.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/home/ghrix/MEM/local/lib/python2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n  45.             return func(request, backend, *args, **kwargs)\nFile \"/home/ghrix/MEM/MemNowBackEnd/social_services/views.py\" in register_by_access_token\n  105.          user = request.strategy.backend.do_auth(access_token)\nFile \"/home/ghrix/MEM/local/lib/python2.7/site-packages/social/backends/oauth.py\" in do_auth\n  360.         data = self.user_data(access_token, *args, **kwargs)\n\nException Type: TypeError at /social_service/auth/vk-oauth2/\nException Value: user_data() takes at least 3 arguments (2 given)\n\n```\n. ",
    "dkwasniak": "Hello, \n\nI have got the same problem like @ranjeetsghrix. I have also tried your suggestion @omab but it doesn't work for me. I hava two kinds of errors. \n1. When I am trying with backend.do_auth(access_token), I have got: \n   <code>'unicode' object has no attribute 'do_auth'</code>\n2. When I am trying with request.strategy.backend.do_auth(access_token), I have got: \n   <code>'DjangoStrategy' object has no attribute 'backend'</code>\n\nI am completely new in python and maybe I made some mistakes. \nI will be grateful for your help. \n\nBR\navonil \n. @omab I am trying with: \n\nhttps://gist.github.com/avonil/3ae50f1e22dce966a7a9#file-gistfile1-py\n. @omab \n\n<code>192.168.0.100:8000/api/register-by-token/facebook?access_token=</code>\n\nAfter that I have got error like above. \n\nAs I told I am new and maybe I don't understand something. Should I get backend instance somewhere before ? \n. Hello, \n\nI have got the same problem like @ranjeetsghrix. I have also tried your suggestion @omab but it doesn't work for me. I hava two kinds of errors. \n1. When I am trying with backend.do_auth(access_token), I have got: \n   <code>'unicode' object has no attribute 'do_auth'</code>\n2. When I am trying with request.strategy.backend.do_auth(access_token), I have got: \n   <code>'DjangoStrategy' object has no attribute 'backend'</code>\n\nI am completely new in python and maybe I made some mistakes. \nI will be grateful for your help. \n\nBR\navonil \n. @omab I am trying with: \n\nhttps://gist.github.com/avonil/3ae50f1e22dce966a7a9#file-gistfile1-py\n. @omab \n\n<code>192.168.0.100:8000/api/register-by-token/facebook?access_token=</code>\n\nAfter that I have got error like above. \n\nAs I told I am new and maybe I don't understand something. Should I get backend instance somewhere before ? \n. ",
    "elmkarami": "@avonil instead of `backend.do_auth` try `request.backend.do_auth`\n. I solved this by setting AUTH_EXTRA_ARGUMENTS = {'access_type': 'offline'}.\n\nbut why this GOOGLE_OAUTH2_AUTH_EXTRA_ARGUMENTS = {'access_type': 'offline'} is not working \n. @avonil instead of `backend.do_auth` try `request.backend.do_auth`\n. I solved this by setting AUTH_EXTRA_ARGUMENTS = {'access_type': 'offline'}.\n\nbut why this GOOGLE_OAUTH2_AUTH_EXTRA_ARGUMENTS = {'access_type': 'offline'} is not working \n. ",
    "phniix": "From further investigation with how Google Chrome handles cookies.\nAdjusted my local domain name and authorization works without qualms. \n\nClosing.\n. This should be a pretty quick fix for you @Uznick \nWhat you want to do is use a legitimate domain and TLD for use inside of Chrome. Don't use the reserved localhost, or a TLD like .dev or .local. \nFor example, use:\n    foo.com\ndon't use:\n    foo.dev\n    foo.local\n    localhost\nMake adjustments to your local hosts file and you will see that this works a treat =D\n. There was no place to cleanly enforce that '+' be '%20' for Vimeo's OAuth2 api. \nI have tested this again and now it seems to work with '+'.  This is good.\n\ndoseq=0 is not needed.\n\nSCOPE_PARAMETER_NAME and SCOPE_SEPARATOR are also redundant in this submission. \n\nI will make appropriate changes and withdraw this request.\n. From further investigation with how Google Chrome handles cookies.\nAdjusted my local domain name and authorization works without qualms. \n\nClosing.\n. This should be a pretty quick fix for you @Uznick \nWhat you want to do is use a legitimate domain and TLD for use inside of Chrome. Don't use the reserved localhost, or a TLD like .dev or .local. \nFor example, use:\n    foo.com\ndon't use:\n    foo.dev\n    foo.local\n    localhost\nMake adjustments to your local hosts file and you will see that this works a treat =D\n. There was no place to cleanly enforce that '+' be '%20' for Vimeo's OAuth2 api. \nI have tested this again and now it seems to work with '+'.  This is good.\n\ndoseq=0 is not needed.\n\nSCOPE_PARAMETER_NAME and SCOPE_SEPARATOR are also redundant in this submission. \n\nI will make appropriate changes and withdraw this request.\n. ",
    "Uznick": "@jjshabs, could you, please, write more details about the solving of the problem? I've having the same issue and have no idea what to do :)\n. Thanks :)\n. Same problem here, it just does not work :(\n. I have enabled the Google+ API in the dashboard.\n\nAnd I have the following settings in my Django settings.py:\n\nGOOGLE_OAUTH2_CLIENT_ID = 'xxx.apps.googleusercontent.com'\nGOOGLE_OAUTH2_CLIENT_SECRET = 'yyyyyy'\nI have 'social.backends.google.GooglePlusAuth' in my AUTHENTICATION_BACKENDS\nAnd I use {% url 'social:begin' 'google-plus' %} to login via Google+.\n\nAnd when I follow the link I get:\n\n```\nEnvironment:\n\n\nRequest Method: GET\nRequest URL: http://localhost:8000/login/google-plus/?next=/registration/%3Ffrom%3Dgoogle\n\nDjango Version: 1.6.5\nPython Version: 2.7.6\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'velobike.apps.main',\n 'velobike.apps.content',\n 'velobike.apps.core',\n 'velobike.apps.configuration',\n 'suit',\n 'django.contrib.admin',\n 'south',\n 'social.apps.django_app.default',\n 'linaro_django_pagination',\n 'django_summernote',\n 'solo',\n 'modeltranslation',\n 'mathfilters')\nInstalled Middleware:\n('django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.common.CommonMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.middleware.clickjacking.XFrameOptionsMiddleware',\n 'linaro_django_pagination.middleware.PaginationMiddleware',\n 'velobike.apps.core.middleware.VeloAuthMiddleware')\n\n\nTraceback:\nFile \"/Users/uznick/.virtualenvs/velobike-web/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n  112.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/Users/uznick/.virtualenvs/velobike-web/lib/python2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n  45.             return func(request, backend, *args, **kwargs)\nFile \"/Users/uznick/.virtualenvs/velobike-web/lib/python2.7/site-packages/social/apps/django_app/views.py\" in auth\n  12.     return do_auth(request.social_strategy, redirect_name=REDIRECT_FIELD_NAME)\nFile \"/Users/uznick/.virtualenvs/velobike-web/lib/python2.7/site-packages/social/actions.py\" in do_auth\n  25.     return strategy.start()\nFile \"/Users/uznick/.virtualenvs/velobike-web/lib/python2.7/site-packages/social/strategies/base.py\" in start\n  66.             return self.redirect(self.backend.auth_url())\nFile \"/Users/uznick/.virtualenvs/velobike-web/lib/python2.7/site-packages/social/backends/oauth.py\" in auth_url\n  291.         return self.AUTHORIZATION_URL + '?' + params\n\nException Type: TypeError at /login/google-plus/\nException Value: unsupported operand type(s) for +: 'NoneType' and 'str'\n```\n. @jjshabs, could you, please, write more details about the solving of the problem? I've having the same issue and have no idea what to do :)\n. Thanks :)\n. Same problem here, it just does not work :(\n. I have enabled the Google+ API in the dashboard.\n\nAnd I have the following settings in my Django settings.py:\n\nGOOGLE_OAUTH2_CLIENT_ID = 'xxx.apps.googleusercontent.com'\nGOOGLE_OAUTH2_CLIENT_SECRET = 'yyyyyy'\nI have 'social.backends.google.GooglePlusAuth' in my AUTHENTICATION_BACKENDS\nAnd I use {% url 'social:begin' 'google-plus' %} to login via Google+.\n\nAnd when I follow the link I get:\n\n```\nEnvironment:\n\n\nRequest Method: GET\nRequest URL: http://localhost:8000/login/google-plus/?next=/registration/%3Ffrom%3Dgoogle\n\nDjango Version: 1.6.5\nPython Version: 2.7.6\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'velobike.apps.main',\n 'velobike.apps.content',\n 'velobike.apps.core',\n 'velobike.apps.configuration',\n 'suit',\n 'django.contrib.admin',\n 'south',\n 'social.apps.django_app.default',\n 'linaro_django_pagination',\n 'django_summernote',\n 'solo',\n 'modeltranslation',\n 'mathfilters')\nInstalled Middleware:\n('django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.common.CommonMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.middleware.clickjacking.XFrameOptionsMiddleware',\n 'linaro_django_pagination.middleware.PaginationMiddleware',\n 'velobike.apps.core.middleware.VeloAuthMiddleware')\n\n\nTraceback:\nFile \"/Users/uznick/.virtualenvs/velobike-web/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n  112.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/Users/uznick/.virtualenvs/velobike-web/lib/python2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n  45.             return func(request, backend, *args, **kwargs)\nFile \"/Users/uznick/.virtualenvs/velobike-web/lib/python2.7/site-packages/social/apps/django_app/views.py\" in auth\n  12.     return do_auth(request.social_strategy, redirect_name=REDIRECT_FIELD_NAME)\nFile \"/Users/uznick/.virtualenvs/velobike-web/lib/python2.7/site-packages/social/actions.py\" in do_auth\n  25.     return strategy.start()\nFile \"/Users/uznick/.virtualenvs/velobike-web/lib/python2.7/site-packages/social/strategies/base.py\" in start\n  66.             return self.redirect(self.backend.auth_url())\nFile \"/Users/uznick/.virtualenvs/velobike-web/lib/python2.7/site-packages/social/backends/oauth.py\" in auth_url\n  291.         return self.AUTHORIZATION_URL + '?' + params\n\nException Type: TypeError at /login/google-plus/\nException Value: unsupported operand type(s) for +: 'NoneType' and 'str'\n```\n. ",
    "AbdealiJK": "Hi,\nThanks for the reply, I realized my error. I had set proxy variables in the\nterminal running runserver, but did not have proxy when I ran shell.\n\nIt wasn't an error in the library.\nPlease close the issue.\nThanks !\nOn Apr 17, 2014 7:58 AM, \"Mat\u00edas Aguirre\" notifications@github.com wrote:\n\n> Could you provide a full traceback? the request method is used by many\n> different places.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/248?utm_campaign=website&utm_source=sendgrid.com&utm_medium=email#issuecomment-40674810\n> .\n. Hi,\nThanks for the reply, I realized my error. I had set proxy variables in the\nterminal running runserver, but did not have proxy when I ran shell.\n\nIt wasn't an error in the library.\nPlease close the issue.\nThanks !\nOn Apr 17, 2014 7:58 AM, \"Mat\u00edas Aguirre\" notifications@github.com wrote:\n\n> Could you provide a full traceback? the request method is used by many\n> different places.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/issues/248?utm_campaign=website&utm_source=sendgrid.com&utm_medium=email#issuecomment-40674810\n> .\n. ",
    "ckcollab": "Huh... I get `None` back... nothing to see here!\n\nHeroku is doing something funny, online interface shows those variables set, but when I print them they definitely are not...\n\n## EDIT:\n\n`os.environ.get(\"SOCIAL_AUTH_FACEBOOK_KEY\")` works\n\n`settings.SOCIAL_AUTH_FACEBOOK_KEY` is set to None...\n\nIn my `settings/base.py` I have:\n\n``` python\nSOCIAL_AUTH_FACEBOOK_KEY = os.environ.get(\"SOCIAL_AUTH_FACEBOOK_KEY\", None)\nSOCIAL_AUTH_FACEBOOK_SECRET = os.environ.get(\"SOCIAL_AUTH_FACEBOOK_SECRET\", None)\nSOCIAL_AUTH_FACEBOOK_SCOPE = ['email']\n```\n\nWhat the!\n\nAlso, I can do `print settings.SOCIAL_AUTH_TWITTER_KEY` no problem\n. I think it may have been that I wasn't using https or something? Can you give me some more details and I'll try to dig up what I did?\n. Whoa... forgot about this, welcome! :D\n. Hrm, I downgraded to Django 1.8 and I'm getting this\n`backend not found`\n\nWhen requesting `http://localhost:8000/login/github/` OR `http://localhost:8000/login/github-oauth2/`\n\nUsing:\n\n``` python\nAUTHENTICATION_BACKENDS = (\n    'social.backends.github.GithubOAuth2',\n    'django.contrib.auth.backends.ModelBackend',\n)\n```\n\nand\n\n``` python\nINSTALLED_APPS = (\n    ...\n    'social.apps.django_app.default',\n)\n```\n. NOTE: For anyone who runs into this again.............. make sure you're working on the right `settings.py` ;)\n. Huh... I get `None` back... nothing to see here!\n\nHeroku is doing something funny, online interface shows those variables set, but when I print them they definitely are not...\n\n## EDIT:\n\n`os.environ.get(\"SOCIAL_AUTH_FACEBOOK_KEY\")` works\n\n`settings.SOCIAL_AUTH_FACEBOOK_KEY` is set to None...\n\nIn my `settings/base.py` I have:\n\n``` python\nSOCIAL_AUTH_FACEBOOK_KEY = os.environ.get(\"SOCIAL_AUTH_FACEBOOK_KEY\", None)\nSOCIAL_AUTH_FACEBOOK_SECRET = os.environ.get(\"SOCIAL_AUTH_FACEBOOK_SECRET\", None)\nSOCIAL_AUTH_FACEBOOK_SCOPE = ['email']\n```\n\nWhat the!\n\nAlso, I can do `print settings.SOCIAL_AUTH_TWITTER_KEY` no problem\n. I think it may have been that I wasn't using https or something? Can you give me some more details and I'll try to dig up what I did?\n. Whoa... forgot about this, welcome! :D\n. Hrm, I downgraded to Django 1.8 and I'm getting this\n`backend not found`\n\nWhen requesting `http://localhost:8000/login/github/` OR `http://localhost:8000/login/github-oauth2/`\n\nUsing:\n\n``` python\nAUTHENTICATION_BACKENDS = (\n    'social.backends.github.GithubOAuth2',\n    'django.contrib.auth.backends.ModelBackend',\n)\n```\n\nand\n\n``` python\nINSTALLED_APPS = (\n    ...\n    'social.apps.django_app.default',\n)\n```\n. NOTE: For anyone who runs into this again.............. make sure you're working on the right `settings.py` ;)\n. ",
    "zhangoose": "@ckcollab Hi! I know this is old, but do you remember what you did in this issue to solve it? \n. @ckcollab Thanks for the reply! Actually I just figured it out, heh. I was using a virtualenv and I just didn't export the environment variables I set in my `.env`. :disappointed: \n. @ckcollab Hi! I know this is old, but do you remember what you did in this issue to solve it? \n. @ckcollab Thanks for the reply! Actually I just figured it out, heh. I was using a virtualenv and I just didn't export the environment variables I set in my `.env`. :disappointed: \n. ",
    "beaumartinez": "Actually\u2014the reason was I wasn't returning a user in my custom user manager's `create_user`. D'oh!\n. Actually\u2014the reason was I wasn't returning a user in my custom user manager's `create_user`. D'oh!\n. ",
    "pahaz": "hotfix:\n\n```\nfrom flask.ext.login import _get_user\n\n\n@app.before_request\ndef global_user():\n    g.user = _get_user()\n```\n. hotfix:\n\n```\nfrom flask.ext.login import _get_user\n\n\n@app.before_request\ndef global_user():\n    g.user = _get_user()\n```\n. ",
    "fletchowns": "Works great!! Thanks for the quick turnaround!\n. @omab, is there an equivalent to this for google-oauth2? I put this in my settings.py:\n\n```\nSOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [\n    'https://www.googleapis.com/auth/admin.directory.group.readonly'\n]\n```\n\nIt looks like the DEFAULT_SCOPE values still apply though:\n\n```\nDEFAULT_SCOPE = ['https://www.googleapis.com/auth/userinfo.email',\n                     'https://www.googleapis.com/auth/userinfo.profile']\n```\n\nHere's what I end up with:\n\n![google permission screen](http://i.imgur.com/isVFiOr.png)\n. @omab - Awesome! Worked great for me. I appreciate the help!\n\nThat also led me down the path of reading about the OAuth scopes that Google supports, and caused me to realize that they are deprecating some of them soon: https://developers.google.com/+/api/oauth#login-scopes\n. Great to hear, thanks Mat\u00edas!\n. Related issue in the python-openid project: https://github.com/openid/python-openid/issues/63\n. Works great!! Thanks for the quick turnaround!\n. @omab, is there an equivalent to this for google-oauth2? I put this in my settings.py:\n\n```\nSOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [\n    'https://www.googleapis.com/auth/admin.directory.group.readonly'\n]\n```\n\nIt looks like the DEFAULT_SCOPE values still apply though:\n\n```\nDEFAULT_SCOPE = ['https://www.googleapis.com/auth/userinfo.email',\n                     'https://www.googleapis.com/auth/userinfo.profile']\n```\n\nHere's what I end up with:\n\n![google permission screen](http://i.imgur.com/isVFiOr.png)\n. @omab - Awesome! Worked great for me. I appreciate the help!\n\nThat also led me down the path of reading about the OAuth scopes that Google supports, and caused me to realize that they are deprecating some of them soon: https://developers.google.com/+/api/oauth#login-scopes\n. Great to hear, thanks Mat\u00edas!\n. Related issue in the python-openid project: https://github.com/openid/python-openid/issues/63\n. ",
    "sherzberg": "Thanks!\n. Thanks!\n. ",
    "momamene": "Thank you for your advice! \nI fixed `user_data_body` and `get_user_details` of kakao.py. \nNow it passes tests.\n. Thank you for your advice! \nI fixed `user_data_body` and `get_user_details` of kakao.py. \nNow it passes tests.\n. ",
    "grepme": "@omab Thanks! It was an awkward use case as compared with other examples. Looks solid otherwise! I'll run some more tests and let you know if I have any concerns/issues.\n. @omab Thanks! It was an awkward use case as compared with other examples. Looks solid otherwise! I'll run some more tests and let you know if I have any concerns/issues.\n. ",
    "Nabu-thinker-ru": "Its working! Thank you very much!\n. Its working! Thank you very much!\n. ",
    "Raihanveer": "@omab what should be the configuration for tornado?I have  not found configuration for tornado from your link or may be i am confused.\n. @omab what should be the configuration for tornado?I have  not found configuration for tornado from your link or may be i am confused.\n. ",
    "aw3s0me": "Facebook and Google. The same behaviour for both. I'll try to debug the code.\n. Yea. It's unauthorized 401. It gives error before post method in class. I mean class senteces are executed but after these sentences it raises error and sends 401 response.\n\n\"Rest says:\"\nUnauthenticated responses that are denied permission will result in an HTTP 401 Unauthorized response with an appropriate WWW-Authenticate header. For example:\n\nWWW-Authenticate: Basic realm=\"api\"\n\nDo you know how to set right header Now I'm doing beforeSend: function(xhr, settings) { xhr.setRequestHeader('Authorization', token); } \n\nBut probably the problem is not there... \n. Facebook and Google. The same behaviour for both. I'll try to debug the code.\n. Yea. It's unauthorized 401. It gives error before post method in class. I mean class senteces are executed but after these sentences it raises error and sends 401 response.\n\n\"Rest says:\"\nUnauthenticated responses that are denied permission will result in an HTTP 401 Unauthorized response with an appropriate WWW-Authenticate header. For example:\n\nWWW-Authenticate: Basic realm=\"api\"\n\nDo you know how to set right header Now I'm doing beforeSend: function(xhr, settings) { xhr.setRequestHeader('Authorization', token); } \n\nBut probably the problem is not there... \n. ",
    "maryokhin": "@omab, I tried to pass it like this, but it gave me exactly the same error. Maybe I'm passing it wrong?\n\n``` python3\ntwitter = {'oauth_token': oauth_token, 'oauth_token_secret': oauth_token_secret, 'oauth_verifier': oauth_verifier}\nuser = strategy.backend.do_auth(twitter)\n```\n. @omab, I used the debugger and at line https://github.com/omab/python-social-auth/blob/bec5ff8ae08b3dfa13912dbde762884e46f25ec6/social/backends/oauth.py#L201 the values are\n\n``` python3\nself.data.get('oauth_verifier') = None\n```\n\n``` python3\nself.data = {'_content': '{  \\r\\n  \"backend\": \"twitter\",\\r\\n  \"access_token\": \"2478001586-tbni3wKlT9***************8i2tdkiOW\",\\r\\n  \"oauth_token_secret\": \"WgaYaEyHL*****************X6UpzAlTgITPa\",\\r\\n  \"oauth_verifier\": \"Em5uMDvZU4G*****************NHDk6nCIYV0\"\\r\\n}', '_content_type': 'application/json', 'csrfmiddlewaretoken': 'iOnr8epq2O*************VYBqZ'}\n```\n\nCould it be that `self.data` gets mangled because <a href=\"http://www.django-rest-framework.org/api-guide/requests\">REST Framework Requests</a> are a bit different? Would be a shame if that's the case, as this is like the only oauth plugin that is versatile enough to work for both front and back-end. \n. @omab, I implemented the strategy, but what is `request_data` supposed to return, a dictionary? Because then it would be enough to just return `self.request.DATA`, which is equal to\n\n``` python3\nrequest.DATA = {'oauth_token_secret': 'WgaYaEyHL*****************X6UpzAlTgITPa', 'backend': 'twitter', 'oauth_verifier': 'Em5uMDvZU4G*****************NHDk6nCIYV0', 'access_token': '2478001586-tbni3wKlT9***************8i2tdkiOW'}\n```\n\nOn other hand I tried this, and got the same error as before.\n\nWas not able to use `data.update(data.pop('_content'))` because `data = self.request.REQUEST` gives a <b>MergeDict</b>, not a <b>dict</b> and it's doesn't support `update()` and `pop()` along with not supporting any concise docs on what MergeDict actually is. \n. @omab, Yes, even with `copy()` it doesn't work, maybe they removed the methods without notice, as MergeDict is internal and subject to change all the time.\n\nI used a custom strategy and return `self.request.DATA` in `request_data` because it solves the verifier issue, but there's still a `None` returned somewhere it shouldn't (maybe with inconsistent naming, i.e. some providers require `'access_token'` and some `'oauth_token'`, but I don't think that's the main problem). \n\nData from some breakpoints:\n<a href = \"https://github.com/omab/python-social-auth/blob/bec5ff8ae08b3dfa13912dbde762884e46f25ec6/social/backends/oauth.py#L212\">social/backends/oauth.py#L212</a>\n\n``` python3\nkey = None\n```\n\n``` python3\nsecret = None\n```\n\n``` python3\noauth_verifier = Em5uMDvZU4G*****************NHDk6nCIYV0\n```\n\n``` python3\ntoken = {}\n```\n\n``` python3\ntoken.get('oauth_token') = None\n```\n\n``` python3\ntoken.get('oauth_token_secret') = None\n```\n\n``` python3\ndecoding = None\n```\n\nIf I modify this method:\n\n``` python3\ndef oauth_auth(self, token=None, oauth_verifier=None,\n                   signature_type=SIGNATURE_TYPE_AUTH_HEADER):\n        key, secret = self.get_key_and_secret()\n        oauth_verifier = oauth_verifier or self.data.get('oauth_verifier')\n        token_key = token.get('oauth_token') or self.data.get('access_token')\n        token_secret = token.get('oauth_token_secret') or self.data.get('oauth_token_secret')\n        # decoding='utf-8' produces errors with python-requests on Python3\n        # since the final URL will be of type bytes\n        decoding = None if six.PY3 else 'utf-8'\n        return OAuth1(key, secret,\n                      resource_owner_key=token_key,\n                      resource_owner_secret=token_secret,\n                      callback_uri=self.redirect_uri,\n                      verifier=oauth_verifier,\n                      signature_type=signature_type,\n                      decoding=decoding)\n```\n\nThen the values of `oauth_verifier`, `token_key`, `token_secret` are valid, but `key` and `secret` are `None` because they are taken from the settings, could it be that it doesn't know how to work without them?\n. @omab I wasn't able to get it to work with this code:\n\n``` python3\nclass SocialAuthView(APIView):\n\n    serializer_class = SocialAuthSerializer\n\n    def post(self, request):\n        serializer = self.serializer_class(data=request.DATA, files=request.FILES)\n\n        if serializer.is_valid():\n            backend = serializer.data.get('backend')\n            access_token = serializer.data.get('access_token')\n            access_token_secret = serializer.data.get('access_token_secret')\n        else:\n            return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n\n        strategy = load_strategy(request=request, backend=backend)\n\n        if isinstance(strategy.backend, BaseOAuth1):\n            token = {\n                'oauth_token': access_token,\n                'oauth_token_secret': access_token_secret\n            }\n        elif isinstance(strategy.backend, BaseOAuth2):\n            token = access_token\n        else:\n            raise Response(data=\"Wrong backend type\", status=status.HTTP_400_BAD_REQUEST)\n\n        user = strategy.backend.do_auth(token)\n        login(request, user)\n\n        data = {'id': user.id, 'username': user.username}\n        return Response(data=data, status=status.HTTP_200_OK)\n```\n\nMaybe @omritoptix or @Zoneur got it to work and can tell me what I'm doing wrong.\n\n<b>P.S.</b> `@strategy` decorator gave me `wrapper() got multiple values for argument 'backend'`, so I used `load_strategy()` instead. \n. @omab On OAuth 2 providers `load_strategy()`, I think worked for me without `redirect_uri`, on OAuth1 it doesn't work no matter with or without it. Basically the whole issue is that at <a href=\"https://gist.github.com/maryokhin/0da5e697f0d09fa7eea4#file-parameters-py-L58\">oauthlib/oauth1/rfc5849/parameters.py</a> the runtime values are \n\n``` python3\nparams  \n[('oauth_nonce', '9345058242317761441400449282'),\n ('oauth_timestamp', '1400449282'),\n ('oauth_version', '1.0'),\n ('oauth_signature_method', 'HMAC-SHA1'),\n ('oauth_consumer_key', None),\n ('oauth_token', '2478001586-tbni3wKlT9***************8i2tdkiOW'),\n ('oauth_callback', 'http://127.0.0.1:8000/social-auth')]\n```\n\nso during iteration it hits the `None` value and throws `Only unicode objects are escapable. Got None of type <class 'NoneType'>`. But I just can't wrap my head around how this `None` managed to seep through there.\n. @omritoptix, I don't know, even basically copying your code gives me the same error I had in the beginning. It's just driving me crazy.\n\n``` python3\n@strategy()\ndef social_auth(request, backend):\n    backend = request.strategy.backend\n\n    if isinstance(backend, BaseOAuth1):\n        token = {\n            'oauth_token': request.POST.get('access_token'),\n            'oauth_token_secret': request.POST.get('access_token_secret'),\n        }\n    elif isinstance(backend, BaseOAuth2):\n        token = request.POST.get('access_token')\n    else:\n        raise Response('Wrong backend type', status.HTTP_400_BAD_REQUEST)\n\n    user = request.strategy.backend.do_auth(token)\n    login(request, user)\n\n    data = {'username': user.username, 'api_key': user.api_key.key}\n    return Response(data=data, status=status.HTTP_200_OK)\n```\n\n@omab, I guess just close the issue since I'm the only one experiencing difficulties. Thank you for all your input.\n. @omab could it be by any chance something having to do with the setup I have or should I not even bother checking that? I communicated with @Zoneur and using the exact same code that works for him doesn't work for me. It would be valuable, if @omritoptix could share his environment.\n\nI use `python 3.4`\n\n``` python3\nDjango==1.7b4\ndjango-braces==1.4.0\ndjango-cors-headers==0.12\ndjango-grappelli==2.5.3\ndjangorestframework==2.3.13\noauthlib==0.6.1\npsycopg2==2.5.3\npython-social-auth==0.1.24\npython3-openid==3.0.4\nrequests==2.3.0\nrequests-oauthlib==0.3.1\nshortuuid==0.4.2\nsix==1.6.1\n```\n. @omab, I get a 401 now, but that means it works! Thank you very much, I did <b>not</b> include the keys on the API side, because it worked without them on OAuth2, but I guess OAuth1 requires it, I didn't know about this requirement. Thank you and I now feel stupid about my mistake.\nI just have a last unrelated question: access tokens are not consistent, they can expire, be revoked, so is there a best-practice when linking them to users, check user ID from service or something?\n\n<b>P.S</b>. I think Django REST Framework should be included to the list of frameworks, I can contribute a simple example app in ~ week's time.\n. @omab, I meant that for Google/Facebook I didn't define any keys/secrets in the settings and it worked.\n. @omab, I tried to pass it like this, but it gave me exactly the same error. Maybe I'm passing it wrong?\n\n``` python3\ntwitter = {'oauth_token': oauth_token, 'oauth_token_secret': oauth_token_secret, 'oauth_verifier': oauth_verifier}\nuser = strategy.backend.do_auth(twitter)\n```\n. @omab, I used the debugger and at line https://github.com/omab/python-social-auth/blob/bec5ff8ae08b3dfa13912dbde762884e46f25ec6/social/backends/oauth.py#L201 the values are\n\n``` python3\nself.data.get('oauth_verifier') = None\n```\n\n``` python3\nself.data = {'_content': '{  \\r\\n  \"backend\": \"twitter\",\\r\\n  \"access_token\": \"2478001586-tbni3wKlT9***************8i2tdkiOW\",\\r\\n  \"oauth_token_secret\": \"WgaYaEyHL*****************X6UpzAlTgITPa\",\\r\\n  \"oauth_verifier\": \"Em5uMDvZU4G*****************NHDk6nCIYV0\"\\r\\n}', '_content_type': 'application/json', 'csrfmiddlewaretoken': 'iOnr8epq2O*************VYBqZ'}\n```\n\nCould it be that `self.data` gets mangled because <a href=\"http://www.django-rest-framework.org/api-guide/requests\">REST Framework Requests</a> are a bit different? Would be a shame if that's the case, as this is like the only oauth plugin that is versatile enough to work for both front and back-end. \n. @omab, I implemented the strategy, but what is `request_data` supposed to return, a dictionary? Because then it would be enough to just return `self.request.DATA`, which is equal to\n\n``` python3\nrequest.DATA = {'oauth_token_secret': 'WgaYaEyHL*****************X6UpzAlTgITPa', 'backend': 'twitter', 'oauth_verifier': 'Em5uMDvZU4G*****************NHDk6nCIYV0', 'access_token': '2478001586-tbni3wKlT9***************8i2tdkiOW'}\n```\n\nOn other hand I tried this, and got the same error as before.\n\nWas not able to use `data.update(data.pop('_content'))` because `data = self.request.REQUEST` gives a <b>MergeDict</b>, not a <b>dict</b> and it's doesn't support `update()` and `pop()` along with not supporting any concise docs on what MergeDict actually is. \n. @omab, Yes, even with `copy()` it doesn't work, maybe they removed the methods without notice, as MergeDict is internal and subject to change all the time.\n\nI used a custom strategy and return `self.request.DATA` in `request_data` because it solves the verifier issue, but there's still a `None` returned somewhere it shouldn't (maybe with inconsistent naming, i.e. some providers require `'access_token'` and some `'oauth_token'`, but I don't think that's the main problem). \n\nData from some breakpoints:\n<a href = \"https://github.com/omab/python-social-auth/blob/bec5ff8ae08b3dfa13912dbde762884e46f25ec6/social/backends/oauth.py#L212\">social/backends/oauth.py#L212</a>\n\n``` python3\nkey = None\n```\n\n``` python3\nsecret = None\n```\n\n``` python3\noauth_verifier = Em5uMDvZU4G*****************NHDk6nCIYV0\n```\n\n``` python3\ntoken = {}\n```\n\n``` python3\ntoken.get('oauth_token') = None\n```\n\n``` python3\ntoken.get('oauth_token_secret') = None\n```\n\n``` python3\ndecoding = None\n```\n\nIf I modify this method:\n\n``` python3\ndef oauth_auth(self, token=None, oauth_verifier=None,\n                   signature_type=SIGNATURE_TYPE_AUTH_HEADER):\n        key, secret = self.get_key_and_secret()\n        oauth_verifier = oauth_verifier or self.data.get('oauth_verifier')\n        token_key = token.get('oauth_token') or self.data.get('access_token')\n        token_secret = token.get('oauth_token_secret') or self.data.get('oauth_token_secret')\n        # decoding='utf-8' produces errors with python-requests on Python3\n        # since the final URL will be of type bytes\n        decoding = None if six.PY3 else 'utf-8'\n        return OAuth1(key, secret,\n                      resource_owner_key=token_key,\n                      resource_owner_secret=token_secret,\n                      callback_uri=self.redirect_uri,\n                      verifier=oauth_verifier,\n                      signature_type=signature_type,\n                      decoding=decoding)\n```\n\nThen the values of `oauth_verifier`, `token_key`, `token_secret` are valid, but `key` and `secret` are `None` because they are taken from the settings, could it be that it doesn't know how to work without them?\n. @omab I wasn't able to get it to work with this code:\n\n``` python3\nclass SocialAuthView(APIView):\n\n    serializer_class = SocialAuthSerializer\n\n    def post(self, request):\n        serializer = self.serializer_class(data=request.DATA, files=request.FILES)\n\n        if serializer.is_valid():\n            backend = serializer.data.get('backend')\n            access_token = serializer.data.get('access_token')\n            access_token_secret = serializer.data.get('access_token_secret')\n        else:\n            return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n\n        strategy = load_strategy(request=request, backend=backend)\n\n        if isinstance(strategy.backend, BaseOAuth1):\n            token = {\n                'oauth_token': access_token,\n                'oauth_token_secret': access_token_secret\n            }\n        elif isinstance(strategy.backend, BaseOAuth2):\n            token = access_token\n        else:\n            raise Response(data=\"Wrong backend type\", status=status.HTTP_400_BAD_REQUEST)\n\n        user = strategy.backend.do_auth(token)\n        login(request, user)\n\n        data = {'id': user.id, 'username': user.username}\n        return Response(data=data, status=status.HTTP_200_OK)\n```\n\nMaybe @omritoptix or @Zoneur got it to work and can tell me what I'm doing wrong.\n\n<b>P.S.</b> `@strategy` decorator gave me `wrapper() got multiple values for argument 'backend'`, so I used `load_strategy()` instead. \n. @omab On OAuth 2 providers `load_strategy()`, I think worked for me without `redirect_uri`, on OAuth1 it doesn't work no matter with or without it. Basically the whole issue is that at <a href=\"https://gist.github.com/maryokhin/0da5e697f0d09fa7eea4#file-parameters-py-L58\">oauthlib/oauth1/rfc5849/parameters.py</a> the runtime values are \n\n``` python3\nparams  \n[('oauth_nonce', '9345058242317761441400449282'),\n ('oauth_timestamp', '1400449282'),\n ('oauth_version', '1.0'),\n ('oauth_signature_method', 'HMAC-SHA1'),\n ('oauth_consumer_key', None),\n ('oauth_token', '2478001586-tbni3wKlT9***************8i2tdkiOW'),\n ('oauth_callback', 'http://127.0.0.1:8000/social-auth')]\n```\n\nso during iteration it hits the `None` value and throws `Only unicode objects are escapable. Got None of type <class 'NoneType'>`. But I just can't wrap my head around how this `None` managed to seep through there.\n. @omritoptix, I don't know, even basically copying your code gives me the same error I had in the beginning. It's just driving me crazy.\n\n``` python3\n@strategy()\ndef social_auth(request, backend):\n    backend = request.strategy.backend\n\n    if isinstance(backend, BaseOAuth1):\n        token = {\n            'oauth_token': request.POST.get('access_token'),\n            'oauth_token_secret': request.POST.get('access_token_secret'),\n        }\n    elif isinstance(backend, BaseOAuth2):\n        token = request.POST.get('access_token')\n    else:\n        raise Response('Wrong backend type', status.HTTP_400_BAD_REQUEST)\n\n    user = request.strategy.backend.do_auth(token)\n    login(request, user)\n\n    data = {'username': user.username, 'api_key': user.api_key.key}\n    return Response(data=data, status=status.HTTP_200_OK)\n```\n\n@omab, I guess just close the issue since I'm the only one experiencing difficulties. Thank you for all your input.\n. @omab could it be by any chance something having to do with the setup I have or should I not even bother checking that? I communicated with @Zoneur and using the exact same code that works for him doesn't work for me. It would be valuable, if @omritoptix could share his environment.\n\nI use `python 3.4`\n\n``` python3\nDjango==1.7b4\ndjango-braces==1.4.0\ndjango-cors-headers==0.12\ndjango-grappelli==2.5.3\ndjangorestframework==2.3.13\noauthlib==0.6.1\npsycopg2==2.5.3\npython-social-auth==0.1.24\npython3-openid==3.0.4\nrequests==2.3.0\nrequests-oauthlib==0.3.1\nshortuuid==0.4.2\nsix==1.6.1\n```\n. @omab, I get a 401 now, but that means it works! Thank you very much, I did <b>not</b> include the keys on the API side, because it worked without them on OAuth2, but I guess OAuth1 requires it, I didn't know about this requirement. Thank you and I now feel stupid about my mistake.\nI just have a last unrelated question: access tokens are not consistent, they can expire, be revoked, so is there a best-practice when linking them to users, check user ID from service or something?\n\n<b>P.S</b>. I think Django REST Framework should be included to the list of frameworks, I can contribute a simple example app in ~ week's time.\n. @omab, I meant that for Google/Facebook I didn't define any keys/secrets in the settings and it worked.\n. ",
    "omritoptix": "also have the same problem\n. @maryokhin I got it to work with both twitter and facebook by using @omab Example code.\nMy view looks like this:\n\n```\n@strategy('social:complete')\n    def ajax_auth(request, backend):\n        post = simplejson.loads(request.body)\n        backend = request.strategy.backend\n        if isinstance(backend, BaseOAuth1):\n            token = {\n                'oauth_token': post.get('access_token'),\n                'oauth_token_secret': post.get('access_token_secret'),\n            }\n        elif isinstance(backend, BaseOAuth2):\n            token = post.get('access_token')\n        else:\n            raise HttpResponseBadRequest('Wrong backend type')\n        user = request.strategy.backend.do_auth(token)\n        login(request, user)\n        data = {'username': user.username, 'api_key': user.api_key.key}\n        return HttpResponse(json.dumps(data), mimetype='application/json')\n```\n\nand i use the following curl to invoke it (for example twitter):\n\n```\ncurl --dump-header - -H \"Content-Type: application/son\" -X POST --data '{\"access_token\":\"280665555-Dux**********tDEunLikpJq\",\"access_token_secret\":\"VAvS8a8vcgPhp******nMInUCwa\"}' http://localhost:8000/ajax-auth/twitter/\n```\n\nI don't pass callback URL, and my callback url in the twitter settings in not related to my dev server.\nI used to get 401, but that apparently caused by a expired token. so regenerated the token in twitter , and it worked.\n\nHope it will help you in some way. \n. also have the same problem\n. @maryokhin I got it to work with both twitter and facebook by using @omab Example code.\nMy view looks like this:\n\n```\n@strategy('social:complete')\n    def ajax_auth(request, backend):\n        post = simplejson.loads(request.body)\n        backend = request.strategy.backend\n        if isinstance(backend, BaseOAuth1):\n            token = {\n                'oauth_token': post.get('access_token'),\n                'oauth_token_secret': post.get('access_token_secret'),\n            }\n        elif isinstance(backend, BaseOAuth2):\n            token = post.get('access_token')\n        else:\n            raise HttpResponseBadRequest('Wrong backend type')\n        user = request.strategy.backend.do_auth(token)\n        login(request, user)\n        data = {'username': user.username, 'api_key': user.api_key.key}\n        return HttpResponse(json.dumps(data), mimetype='application/json')\n```\n\nand i use the following curl to invoke it (for example twitter):\n\n```\ncurl --dump-header - -H \"Content-Type: application/son\" -X POST --data '{\"access_token\":\"280665555-Dux**********tDEunLikpJq\",\"access_token_secret\":\"VAvS8a8vcgPhp******nMInUCwa\"}' http://localhost:8000/ajax-auth/twitter/\n```\n\nI don't pass callback URL, and my callback url in the twitter settings in not related to my dev server.\nI used to get 401, but that apparently caused by a expired token. so regenerated the token in twitter , and it worked.\n\nHope it will help you in some way. \n. ",
    "lburg": "I am not sure if this is related, but I have also got a problem using the Twitter backend. I am trying to authenticate using `do_auth` (I am using RestFramework too) by giving it the `access_token` that Twitter gave me from my app API keys page and all I get is `403 Forbidden`. I used Twitter's \"Test OAuth\" tool to generate a cURL command that would authenticate me and from there I saw two differences between the cURL command request and the Twitter backend request:\n- A header is missing from the Twitter backend request, `oauth_token`, which should be set to my access token value; and,\n- The cURL command has a query parameter `access_token` set to my access token value, whereas the Twitter backend request does not.\n\nI set a breakpoint before the request was sent and manually added the query parameter and the missing header, and I got `401 Unauthorized` instead of `403 Forbidden`. Any ideas?\n. Alright I got it to work. I have a function looking like this:\n\n```\n    @strategy()\n    def _register_by_access_token(request, backend):\n\u00a0 \u00a0     backend = request.strategy.backend\n    \u00a0 \u00a0 access_token = request.DATA['access_token']\n\u00a0 \u00a0     return backend.do_auth(access_token)\n```\n\nThis works for Facebook, but failed for Twitter. I got it working by doing:\n\n```\naccess_token = \"oauth_token=\" + request.DATA['access_token'] + \"&oauth_token_secret=<secret>\"\n```\n\nThis seems weird because using the Twitter tool to generate cURL commands to authenticate, there is no need for the oauth_token_secret, but it fails if I do not include it.\n\nAlso, is there a way to make this work without checking whether the backend is OAuth1 or OAuth2? I understand we are not in the regular PSA flow, but it would be nice not to check the base class of the backend.\n\n@maryokhin Your code looks rather similar to mine, try calling `do_auth` with a string using the url format instead of a dict maybe? Regarding the `wrapper` error, that's probably because your function had extra parameters instead of just `request` and `backend`. The decorator forwards those parameters to `strategies.utils.get_strategy` and there is a conflict between these extra parameters that are passed as positional arguments and the ones that are passed as keyword arguments (like backend).   \n\nThanks for your help @omab !\n. I am not sure if this is related, but I have also got a problem using the Twitter backend. I am trying to authenticate using `do_auth` (I am using RestFramework too) by giving it the `access_token` that Twitter gave me from my app API keys page and all I get is `403 Forbidden`. I used Twitter's \"Test OAuth\" tool to generate a cURL command that would authenticate me and from there I saw two differences between the cURL command request and the Twitter backend request:\n- A header is missing from the Twitter backend request, `oauth_token`, which should be set to my access token value; and,\n- The cURL command has a query parameter `access_token` set to my access token value, whereas the Twitter backend request does not.\n\nI set a breakpoint before the request was sent and manually added the query parameter and the missing header, and I got `401 Unauthorized` instead of `403 Forbidden`. Any ideas?\n. Alright I got it to work. I have a function looking like this:\n\n```\n    @strategy()\n    def _register_by_access_token(request, backend):\n\u00a0 \u00a0     backend = request.strategy.backend\n    \u00a0 \u00a0 access_token = request.DATA['access_token']\n\u00a0 \u00a0     return backend.do_auth(access_token)\n```\n\nThis works for Facebook, but failed for Twitter. I got it working by doing:\n\n```\naccess_token = \"oauth_token=\" + request.DATA['access_token'] + \"&oauth_token_secret=<secret>\"\n```\n\nThis seems weird because using the Twitter tool to generate cURL commands to authenticate, there is no need for the oauth_token_secret, but it fails if I do not include it.\n\nAlso, is there a way to make this work without checking whether the backend is OAuth1 or OAuth2? I understand we are not in the regular PSA flow, but it would be nice not to check the base class of the backend.\n\n@maryokhin Your code looks rather similar to mine, try calling `do_auth` with a string using the url format instead of a dict maybe? Regarding the `wrapper` error, that's probably because your function had extra parameters instead of just `request` and `backend`. The decorator forwards those parameters to `strategies.utils.get_strategy` and there is a conflict between these extra parameters that are passed as positional arguments and the ones that are passed as keyword arguments (like backend).   \n\nThanks for your help @omab !\n. ",
    "troeger": "Using SOCIAL_AUTH_TWITTER_KEY and SOCIAL_AUTH_TWITTER_SECRET as configuration parameters, as proposed, solved this for me. Here is the pull request for the documentation update:\n\nhttps://github.com/omab/django-social-auth/pull/821\n. Using SOCIAL_AUTH_TWITTER_KEY and SOCIAL_AUTH_TWITTER_SECRET as configuration parameters, as proposed, solved this for me. Here is the pull request for the documentation update:\n\nhttps://github.com/omab/django-social-auth/pull/821\n. ",
    "filipeximenes": "Actually, my mistake, the version on pip does match the code on the release, but the documentation does mention `Facebook2OAuth2` and it's not available on the pip package.\n. My bad, I was mistakenly setting `SOCIAL_AUTH_FACEBOOK_APP_KEY` instead of `SOCIAL_AUTH_FACEBOOK_KEY`\n. This issue is also related to issue #303\n. Actually, my mistake, the version on pip does match the code on the release, but the documentation does mention `Facebook2OAuth2` and it's not available on the pip package.\n. My bad, I was mistakenly setting `SOCIAL_AUTH_FACEBOOK_APP_KEY` instead of `SOCIAL_AUTH_FACEBOOK_KEY`\n. This issue is also related to issue #303\n. ",
    "ericson-cepeda": "#534 \n. It happened to me that trying to access with: http://localhost/complete/oauth2test?state=vkTqtm0 works, but:  http://localhost/complete/oauth2test/?state=vkTqtm0EsOj8E5oTDg5bGMabIgl172A0 did not.\n\nOnce the trailing '/' (oauth2test/) was removed, the error disappeared.\n. #534 \n. It happened to me that trying to access with: http://localhost/complete/oauth2test?state=vkTqtm0 works, but:  http://localhost/complete/oauth2test/?state=vkTqtm0EsOj8E5oTDg5bGMabIgl172A0 did not.\n\nOnce the trailing '/' (oauth2test/) was removed, the error disappeared.\n. ",
    "ryankicks": "Thanks so much!\n\nOn Mon, May 26, 2014 at 1:06 PM, Mat\u00edas Aguirre notifications@github.comwrote:\n\n> Merged, I've applied PEP8 and cleaned some debug lines.\n> \n> Thanks!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/pull/283#issuecomment-44215059\n> .\n. Thanks so much!\n\nOn Mon, May 26, 2014 at 1:06 PM, Mat\u00edas Aguirre notifications@github.comwrote:\n\n> Merged, I've applied PEP8 and cleaned some debug lines.\n> \n> Thanks!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/omab/python-social-auth/pull/283#issuecomment-44215059\n> .\n. ",
    "ipmb": "With this in mind, what is the current recommended way to authenticate against Google?\n\nI sounds like `GoogleOAuth` is deprecated upstream and `GoogleOAuth2` support is experimental according to the docs. Is `GoogleOpenId` the best option? What is the migration path for current `GoogleOAuth` users?\n. Thanks for the quick response @omab! Does it work for Google account users that don't have a Google+ account? Am I correct to assume that anyone connected with `GoogleOAuth` will need to reconnect when switching to `GooglePlusAuth`?\n. With this in mind, what is the current recommended way to authenticate against Google?\n\nI sounds like `GoogleOAuth` is deprecated upstream and `GoogleOAuth2` support is experimental according to the docs. Is `GoogleOpenId` the best option? What is the migration path for current `GoogleOAuth` users?\n. Thanks for the quick response @omab! Does it work for Google account users that don't have a Google+ account? Am I correct to assume that anyone connected with `GoogleOAuth` will need to reconnect when switching to `GooglePlusAuth`?\n. ",
    "fabioz": "A related question: is there a proper way to make a backward-compatible change? i.e.: what's the way to migrate the authentication so that the user doesn't loose its account -- considering that the previous authentication is all there is to reference the user?\n. Great. Thanks for the clarification :)\n. A related question: is there a proper way to make a backward-compatible change? i.e.: what's the way to migrate the authentication so that the user doesn't loose its account -- considering that the previous authentication is all there is to reference the user?\n. Great. Thanks for the clarification :)\n. ",
    "kamikaze": "social.backends.google.GooglePlusAuth\n. I've always had G+ API enabled, actually everything worked until pyton-social-auth changed to new API (https://github.com/omab/python-social-auth/commit/e35251878a88954cecf8e575eca27c63164b9f67)  \n\nbut is there a fact that new API is supported by Google right now?\n. but I have Google+ API enabled already...\n. Thanks\n. social.backends.google.GooglePlusAuth\n. I've always had G+ API enabled, actually everything worked until pyton-social-auth changed to new API (https://github.com/omab/python-social-auth/commit/e35251878a88954cecf8e575eca27c63164b9f67)  \n\nbut is there a fact that new API is supported by Google right now?\n. but I have Google+ API enabled already...\n. Thanks\n. ",
    "AndrewJHart": "I typically don't post to issues but I've been working for several hours to no avail with a consistent response of invalid scope using the GooglePlusAuth and always 403 Forbidden on GoogleOAuth2. \n\nI will post the stack trace if needed - \n\nThx\n. @kamikaze @omab  If you remove the `plus.login` scope it will authenticate the app for the GooglePlusAuth, however I still end with a 403 Client Error: Forbidden response. \n\nI must be missing something simple at this point -- please help?\n. Just a note - tests on this are failing for me as well. \n\nHowever, from what I can gather (ergo my reason for being hesitant to post), if the HTTP response is a  `403` then isn't that indicative of some kind of issue/requirement e.g. **permissions** on google's end??\n\nBut I have followed advice from many various sources in an attempt to remedy the issue by adjusting permissions, etc.. on the google app acct and I still get a `403 Forbidden` every time. \n\nSo I'm wondering if this issue has something to do with python-social-auth. \n\nThanks - any help or direction would be awesome.\n. I typically don't post to issues but I've been working for several hours to no avail with a consistent response of invalid scope using the GooglePlusAuth and always 403 Forbidden on GoogleOAuth2. \n\nI will post the stack trace if needed - \n\nThx\n. @kamikaze @omab  If you remove the `plus.login` scope it will authenticate the app for the GooglePlusAuth, however I still end with a 403 Client Error: Forbidden response. \n\nI must be missing something simple at this point -- please help?\n. Just a note - tests on this are failing for me as well. \n\nHowever, from what I can gather (ergo my reason for being hesitant to post), if the HTTP response is a  `403` then isn't that indicative of some kind of issue/requirement e.g. **permissions** on google's end??\n\nBut I have followed advice from many various sources in an attempt to remedy the issue by adjusting permissions, etc.. on the google app acct and I still get a `403 Forbidden` every time. \n\nSo I'm wondering if this issue has something to do with python-social-auth. \n\nThanks - any help or direction would be awesome.\n. ",
    "bettsmatt": "I am having the same issues. I have updated and deployed the fix from https://github.com/omab/python-social-auth/commit/e35251878a88954cecf8e575eca27c63164b9f67 but requests continue to come back as 403.\n\nAny progress on fixing this issue?\n. I took a closer look at the error I was having.\nTurns out it was a problem with the API's we had enabled in the Google Developer Console.\n\nGoogle Oauth2 is authenticating correctly and returning a valid access token.\nBut when the access token is used to get the email address from Google + it is marked as unauthorised. As Google + was not an enabled API in the Google developer console.\n\nI found this by calling\nhttps://www.googleapis.com/plus/v1/people/me?access_token=<ACCESS_TOKEN> with the access token obtained through python social auth. As I would get the following error \"Access Not Configured. Please use Google Developers Console to activate the API for your project.\" \n\nOnce I turned on the Google + API in the developer console everything worked perfectly.\n\n@AndrewJHart, @kamikaze hope this helps.\n. I'm assuming nothing has changed and its safe to fake the migration?\n. Faked the migration, everything still works.\n. Didn't work, social sign in fails.\nIf anyone has a similar problem let me know. \nHave rolled back to version 0.1.24 until we have time to look at it properly.\n. Wasn't me, but that sounds about right. \nGiven the app I'm working on will be updating to 1.7 soon we haven't tried to solve it. \n. Upgraded our app to 1.7, don't have this problem any more.\n. I am having the same issues. I have updated and deployed the fix from https://github.com/omab/python-social-auth/commit/e35251878a88954cecf8e575eca27c63164b9f67 but requests continue to come back as 403.\n\nAny progress on fixing this issue?\n. I took a closer look at the error I was having.\nTurns out it was a problem with the API's we had enabled in the Google Developer Console.\n\nGoogle Oauth2 is authenticating correctly and returning a valid access token.\nBut when the access token is used to get the email address from Google + it is marked as unauthorised. As Google + was not an enabled API in the Google developer console.\n\nI found this by calling\nhttps://www.googleapis.com/plus/v1/people/me?access_token=<ACCESS_TOKEN> with the access token obtained through python social auth. As I would get the following error \"Access Not Configured. Please use Google Developers Console to activate the API for your project.\" \n\nOnce I turned on the Google + API in the developer console everything worked perfectly.\n\n@AndrewJHart, @kamikaze hope this helps.\n. I'm assuming nothing has changed and its safe to fake the migration?\n. Faked the migration, everything still works.\n. Didn't work, social sign in fails.\nIf anyone has a similar problem let me know. \nHave rolled back to version 0.1.24 until we have time to look at it properly.\n. Wasn't me, but that sounds about right. \nGiven the app I'm working on will be updating to 1.7 soon we haven't tried to solve it. \n. Upgraded our app to 1.7, don't have this problem any more.\n. ",
    "pryankster": "@Uznick :  I'm seeing the same issue.   AUTHORIZATION_URL isn't being set in the GooglePlusAuth class -- none of its parent classes define it. \n\n```\nclass BaseGoogleAuth(object): # backends/google.py[12]\nclass BaseGoogleOAuth2API(BaseGoogleAuth): # backends/google.py[42]\nclass GooglePlusAuth(BaseGoogleOAuth2API, BaseOAuth2):  # backends/google.py[74]\n```\n\nMaybe it should inherit BaseGoogleOAuth2 (which inherits BaseGoogleOAuth2API, or it should define the AUTHORIZATION_URL (and other) constants directly in the class? I haven't used the G+ API enough to know what the proper patch is.\n. @Uznick :  I'm seeing the same issue.   AUTHORIZATION_URL isn't being set in the GooglePlusAuth class -- none of its parent classes define it. \n\n```\nclass BaseGoogleAuth(object): # backends/google.py[12]\nclass BaseGoogleOAuth2API(BaseGoogleAuth): # backends/google.py[42]\nclass GooglePlusAuth(BaseGoogleOAuth2API, BaseOAuth2):  # backends/google.py[74]\n```\n\nMaybe it should inherit BaseGoogleOAuth2 (which inherits BaseGoogleOAuth2API, or it should define the AUTHORIZATION_URL (and other) constants directly in the class? I haven't used the G+ API enough to know what the proper patch is.\n. ",
    "shoooe": "I'm using v0.1.26 and I still get 403 (even with Google+ API enabled). In fact if I take the `access_token` from the debug backtrace and go to:\n\n```\nhttps://www.googleapis.com/plus/v1/people/me?access_token=<access_token>\n```\n\nI'm perfectly able to see the correct response. \n\nIt is to say that I'm testing without HTTPS enabled on my end; might that be the cause of this problem?\n. My problem was that Google+ API was Off in the Developer Console at Google.\n. Exactly what I was looking for, thanks @wadewilliams.\n. In \"Status & Review\" in the Facebook console I've also enabled the application. My App domains and site URL are defined in `/etc/hosts` and are not `localhost` (even though it allowed them) and are working.\n\nThe problem still remains.\n. Thank you very much.\n. Now I've come in contact with another problem. I have this piece of logic where I say: \"A user can remove connections only when the user has at least 2 accounts\". Fairly simple. Problem is that I don't know how I can create a dummy user connection per social account.\n\nIn my opinion this shows that there should be some testing tool that:\n- allows for fast creation of dummy connections\n- simulates the authentication to these dummy connections\n\nI might be wrong though.\n. I will, but I think there should be a chapter in the documentation regarding this. Maybe listing all the tools python-social-auth gives you for testing.\n. Thanks.\n. I'm using v0.1.26 and I still get 403 (even with Google+ API enabled). In fact if I take the `access_token` from the debug backtrace and go to:\n\n```\nhttps://www.googleapis.com/plus/v1/people/me?access_token=<access_token>\n```\n\nI'm perfectly able to see the correct response. \n\nIt is to say that I'm testing without HTTPS enabled on my end; might that be the cause of this problem?\n. My problem was that Google+ API was Off in the Developer Console at Google.\n. Exactly what I was looking for, thanks @wadewilliams.\n. In \"Status & Review\" in the Facebook console I've also enabled the application. My App domains and site URL are defined in `/etc/hosts` and are not `localhost` (even though it allowed them) and are working.\n\nThe problem still remains.\n. Thank you very much.\n. Now I've come in contact with another problem. I have this piece of logic where I say: \"A user can remove connections only when the user has at least 2 accounts\". Fairly simple. Problem is that I don't know how I can create a dummy user connection per social account.\n\nIn my opinion this shows that there should be some testing tool that:\n- allows for fast creation of dummy connections\n- simulates the authentication to these dummy connections\n\nI might be wrong though.\n. I will, but I think there should be a chapter in the documentation regarding this. Maybe listing all the tools python-social-auth gives you for testing.\n. Thanks.\n. ",
    "jrasanen": "Hmm, what is the non-deprecated API then?\n. Hmm, what is the non-deprecated API then?\n. ",
    "naoko": "Thank you, After enable Google+ API i was able to solve this issue as well\n. Thank you, After enable Google+ API i was able to solve this issue as well\n. ",
    "avibrazil": "Me too... I had to enable Google+ API even if not needed by my app.\n. I'll test these changes today and will tell you. I've wrote this code months ago and I frankly don't remember what I did.\n. Thank you\n. Nevermind. I was doing it wrong. Fixed by doing this:\n\nSOCIAL_AUTH_GOOGLE_OAUTH2__AUTH__EXTRA_ARGUMENTS = {'access_type': 'offline'}\n. Me too... I had to enable Google+ API even if not needed by my app.\n. I'll test these changes today and will tell you. I've wrote this code months ago and I frankly don't remember what I did.\n. Thank you\n. Nevermind. I was doing it wrong. Fixed by doing this:\n\nSOCIAL_AUTH_GOOGLE_OAUTH2__AUTH__EXTRA_ARGUMENTS = {'access_type': 'offline'}\n. ",
    "vahedq": "Are you guys still able to use this fine? I have it set up, and Google+ API is enabled, but am getting this error:\n\nTraceback (most recent call last):\n  File \"/storage/client/repo1/server/eagle/views.py\", line 56, in register_by_access_token\n    user = backend.do_auth(access_token)\n  File \"/usr/local/lib/python2.7/dist-packages/social/backends/oauth.py\", line 383, in do_auth\n    data = self.user_data(access_token, _args, *_kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/social/backends/google.py\", line 74, in user_data\n    'alt': 'json'\n  File \"/usr/local/lib/python2.7/dist-packages/social/backends/base.py\", line 229, in get_json\n    return self.request(url, _args, *_kwargs).json()\n  File \"/usr/local/lib/python2.7/dist-packages/social/backends/base.py\", line 225, in request\n    response.raise_for_status()\n  File \"/usr/lib/python2.7/dist-packages/requests/models.py\", line 773, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\nHTTPError: 403 Client Error: Forbidden\n. Are you guys still able to use this fine? I have it set up, and Google+ API is enabled, but am getting this error:\n\nTraceback (most recent call last):\n  File \"/storage/client/repo1/server/eagle/views.py\", line 56, in register_by_access_token\n    user = backend.do_auth(access_token)\n  File \"/usr/local/lib/python2.7/dist-packages/social/backends/oauth.py\", line 383, in do_auth\n    data = self.user_data(access_token, _args, *_kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/social/backends/google.py\", line 74, in user_data\n    'alt': 'json'\n  File \"/usr/local/lib/python2.7/dist-packages/social/backends/base.py\", line 229, in get_json\n    return self.request(url, _args, *_kwargs).json()\n  File \"/usr/local/lib/python2.7/dist-packages/social/backends/base.py\", line 225, in request\n    response.raise_for_status()\n  File \"/usr/lib/python2.7/dist-packages/requests/models.py\", line 773, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\nHTTPError: 403 Client Error: Forbidden\n. ",
    "divestrato": "I have the same problem as @vahedq as well. Any pointers will be much appreciated!\n. I have the same problem as @vahedq as well. Any pointers will be much appreciated!\n. ",
    "morninj": "I had the same issue. I solved it by enabling the Google+ API from `console.developers.google.com`.\n. I had the same issue. I solved it by enabling the Google+ API from `console.developers.google.com`.\n. ",
    "sureshvv": "+1 to bettsmatt & morninj\n. @zhang-z this fixed it for me too.\n. +1 to bettsmatt & morninj\n. @zhang-z this fixed it for me too.\n. ",
    "chandrunitk": "bettsmatt's solution did it for me!\n. bettsmatt's solution did it for me!\n. ",
    "rajeeshr-punathil": "I still struggling with the same problem as @vahedq Project created, Google+ API enabled. My UI (angularjs) is able to let user login by google and pass the access_token. When psa's backend.do_auth is invoked with token, 403 is raised. Testing is done localhost and an AWS client.. I still struggling with the same problem as @vahedq Project created, Google+ API enabled. My UI (angularjs) is able to let user login by google and pass the access_token. When psa's backend.do_auth is invoked with token, 403 is raised. Testing is done localhost and an AWS client.. ",
    "naveen319": "Hi I am struggling with this issue,\r\n\r\nTypeError at /social-auth/complete/google-oauth2/\r\nunsupported operand type(s) for +: 'NoneType' and 'int'\r\n\r\nI am getting this error even for Twitter and Facebook. Can any one please help me on this,\r\n\r\n![error](https://user-images.githubusercontent.com/22286945/27614402-1219156e-5b67-11e7-8b50-7eea07660656.JPG)\r\n. Hi I am struggling with this issue,\r\n\r\nTypeError at /social-auth/complete/google-oauth2/\r\nunsupported operand type(s) for +: 'NoneType' and 'int'\r\n\r\nI am getting this error even for Twitter and Facebook. Can any one please help me on this,\r\n\r\n![error](https://user-images.githubusercontent.com/22286945/27614402-1219156e-5b67-11e7-8b50-7eea07660656.JPG)\r\n. ",
    "michaelgodshall": "Sorry, I just realized my changes aren't compatible for Django 1.6 and below.  Do you have any thoughts on the best way to provide backwards compatibility?\n. Sorry, I just realized my changes aren't compatible for Django 1.6 and below.  Do you have any thoughts on the best way to provide backwards compatibility?\n. ",
    "catskul": "Apparently this problem is caused by debug_toolbar which ends up wrapping some part of the system such that the exceptions do not propperly percolate to middleware process_exceptions functions.\n. In the case of linkedin, they've recently made changes to their API policy which will reject token requests for r_fullprofile. When this happens, python social auth does not check this condition, and looks for the `state` entry in the dictionary returned and it's not there.\n\nThere should probably be some better error checking around this.\n. As far as I can tell every version post 0.2.0 has this problem. I tried upgrading to the latest and noticed this issue.\n. Apparently this problem is caused by debug_toolbar which ends up wrapping some part of the system such that the exceptions do not propperly percolate to middleware process_exceptions functions.\n. In the case of linkedin, they've recently made changes to their API policy which will reject token requests for r_fullprofile. When this happens, python social auth does not check this condition, and looks for the `state` entry in the dictionary returned and it's not there.\n\nThere should probably be some better error checking around this.\n. As far as I can tell every version post 0.2.0 has this problem. I tried upgrading to the latest and noticed this issue.\n. ",
    "daniula": "Ok I found [related question on StackOverflow](http://stackoverflow.com/questions/18643403/how-to-refresh-linkedin-oauth-token-if-the-user-authorized-the-app-through-oauth) which explains that there is no way to refresh access token this way. Issue is impossible to resolve.\n. Ok I found [related question on StackOverflow](http://stackoverflow.com/questions/18643403/how-to-refresh-linkedin-oauth-token-if-the-user-authorized-the-app-through-oauth) which explains that there is no way to refresh access token this way. Issue is impossible to resolve.\n. ",
    "nijel": "The code which I think is broken: https://github.com/omab/python-social-auth/blob/master/social/strategies/base.py#L137\n. Thanks it seems to work.\n. The code which I think is broken: https://github.com/omab/python-social-auth/blob/master/social/strategies/base.py#L137\n. Thanks it seems to work.\n. ",
    "jlhawn": "I haven't contributed to social-auth before and I haven't yet read your contributor guidelines. (It's been a busy morning!) Ping me and I'll update with requested tests/changes.\n. I haven't contributed to social-auth before and I haven't yet read your contributor guidelines. (It's been a busy morning!) Ping me and I'll update with requested tests/changes.\n. ",
    "imns": "I am trying to post to a page.  The endpoint is: `POST /{page-id}/feed`  and I have verified that the page id is correct.  I've also added `publish_actions` to my `SOCIAL_AUTH_FACEBOOK_SCOPE` list. \n\nI am basing this off of this documentation: https://developers.facebook.com/docs/graph-api/reference/v2.0/page/feed#pubfields\n\nNo matter what I seem to do I still get a `403` response like I posted above. \n. I am trying to post to a page.  The endpoint is: `POST /{page-id}/feed`  and I have verified that the page id is correct.  I've also added `publish_actions` to my `SOCIAL_AUTH_FACEBOOK_SCOPE` list. \n\nI am basing this off of this documentation: https://developers.facebook.com/docs/graph-api/reference/v2.0/page/feed#pubfields\n\nNo matter what I seem to do I still get a `403` response like I posted above. \n. ",
    "tleewu": "@omab is SOCIAL_AUTH_SCOPE more preferred than FACEBOOK_EXTENDED_PERMISSIONS and whatnot? because it seems like the social_auth tutorial did not even talk about SOCIAL_AUTH_SCOPE. If this is the case, how do you request information from SOCIAL_AUTH_SCOPE (like email or something) in the view function?\n. @omab sorry, I actually meant SOCIAL_AUTH_FACEBOOK_SCOPE. Where can I see the things I can call for SOCIAL_AUTH_FACEBOOK_SCOPE? like email or user likes or photos? because I think the syntax for facebook scope is different from facebook_extended permissions?\n. @omab is SOCIAL_AUTH_SCOPE more preferred than FACEBOOK_EXTENDED_PERMISSIONS and whatnot? because it seems like the social_auth tutorial did not even talk about SOCIAL_AUTH_SCOPE. If this is the case, how do you request information from SOCIAL_AUTH_SCOPE (like email or something) in the view function?\n. @omab sorry, I actually meant SOCIAL_AUTH_FACEBOOK_SCOPE. Where can I see the things I can call for SOCIAL_AUTH_FACEBOOK_SCOPE? like email or user likes or photos? because I think the syntax for facebook scope is different from facebook_extended permissions?\n. ",
    "arahman17": "This do the expected result for me. Hope it helps...\n\nSOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {\n    'locale': 'ru_RU',\n    'fields': 'id, name, email, age_range'\n}\n. This do the expected result for me. Hope it helps...\n\nSOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {\n    'locale': 'ru_RU',\n    'fields': 'id, name, email, age_range'\n}\n. ",
    "steven-mercatante": "@omab From `pip`\n. @omab From `pip`\n. ",
    "adalekin": "It's OK. Thank you.\n. It's OK. Thank you.\n. ",
    "synotna": "Has any work already been done towards it, or do you have any idea how difficult it will be to implement with the existing structure?\n. I've found only one other Python implementation so far, https://github.com/rohe/pyoidc\n\nThe other libraries seem to be in the same situation\n\nThanks!\n. Google Open ID Connect is now working for me, and our in house open id once I configured it to use the Authorization header method\n\nThat is the preferred method by Google, https://developers.google.com/accounts/docs/OAuth2WebServer#callinganapi so maybe it is best to change the defaults?\n\nThanks for getting it working so quickly!\n. When will you push the update to pypi? :)\n. I opened this ticket after checking this code:\n\n``` python\n@classmethod\n    def get_user(cls, pk):\n        try:\n            return cls.user_model().objects.get(pk=pk)\n        except cls.user_model().DoesNotExist:\n            return None\n```\n\nI just tested to make sure, definitely is not working for me\n. Has any work already been done towards it, or do you have any idea how difficult it will be to implement with the existing structure?\n. I've found only one other Python implementation so far, https://github.com/rohe/pyoidc\n\nThe other libraries seem to be in the same situation\n\nThanks!\n. Google Open ID Connect is now working for me, and our in house open id once I configured it to use the Authorization header method\n\nThat is the preferred method by Google, https://developers.google.com/accounts/docs/OAuth2WebServer#callinganapi so maybe it is best to change the defaults?\n\nThanks for getting it working so quickly!\n. When will you push the update to pypi? :)\n. I opened this ticket after checking this code:\n\n``` python\n@classmethod\n    def get_user(cls, pk):\n        try:\n            return cls.user_model().objects.get(pk=pk)\n        except cls.user_model().DoesNotExist:\n            return None\n```\n\nI just tested to make sure, definitely is not working for me\n. ",
    "clintonb": "I combined the work of @omab and @kakky to make an extendable `OpenIdConnect` consumer for a project I am working on: https://gist.github.com/clintonb/6ee13e39ca6cc5c56c49.\n. @mhluongo Any idea when you'll get around to updating this?\n. @mhluongo The South requirement is cool with me. The upgrade seems pretty painless.\n. @mhluongo Checkout http://stackoverflow.com/questions/15472704/trouble-migrating-reusable-django-app-models-to-use-a-custom-user-model.\n. See #509.\n. FYI @dsjen @jbau @dylanrhodes\n. Thanks!\n. This issue was introduced by #813. Django docs for reference: https://docs.djangoproject.com/en/1.9/howto/custom-model-fields/#converting-values-to-python-objects.\n. The default value of `JSONField` is incorrectly set to the string value `'{}'` instead of a dict, `{}`. See https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/default/fields.py#L20.\n. @omab please review.\n. @omab any plans to release a new version? We are pinned at 0.2.14 until a release with these changes comes out.\n. Related: #908 and #909 \n. @webjunkie why the \ud83d\udc4e ?\n. @omab please reivew\n. @omab please review.\nFYI @bderusha @nasthagiri @jcdyer\n. @omab any feedback?\n. Thanks @omab!\n. After a quick glance, the documentation doesn't mention `DjangoAssociationMixin`, so I'm not sure of the value of including it or where to include it.\n. @omab please review\n. @omab please review\nFYI @jibsheet\n. Acknowledged @rlucioni. I have also filed #970 to address the fact that this table should not store nonces forever. They should be removed once the authorization response is validated. Long-term it might make more sense to use Django's caching layer for this purpose rather than the database model.\n. It may also be possible to use the `replaces` functionality normally reserved for squashed migrations. \n. FYI @omab @cclay\n. @omab please let me know when we can expect a new PyPI release.\n. I combined the work of @omab and @kakky to make an extendable `OpenIdConnect` consumer for a project I am working on: https://gist.github.com/clintonb/6ee13e39ca6cc5c56c49.\n. @mhluongo Any idea when you'll get around to updating this?\n. @mhluongo The South requirement is cool with me. The upgrade seems pretty painless.\n. @mhluongo Checkout http://stackoverflow.com/questions/15472704/trouble-migrating-reusable-django-app-models-to-use-a-custom-user-model.\n. See #509.\n. FYI @dsjen @jbau @dylanrhodes\n. Thanks!\n. This issue was introduced by #813. Django docs for reference: https://docs.djangoproject.com/en/1.9/howto/custom-model-fields/#converting-values-to-python-objects.\n. The default value of `JSONField` is incorrectly set to the string value `'{}'` instead of a dict, `{}`. See https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/default/fields.py#L20.\n. @omab please review.\n. @omab any plans to release a new version? We are pinned at 0.2.14 until a release with these changes comes out.\n. Related: #908 and #909 \n. @webjunkie why the \ud83d\udc4e ?\n. @omab please reivew\n. @omab please review.\nFYI @bderusha @nasthagiri @jcdyer\n. @omab any feedback?\n. Thanks @omab!\n. After a quick glance, the documentation doesn't mention `DjangoAssociationMixin`, so I'm not sure of the value of including it or where to include it.\n. @omab please review\n. @omab please review\nFYI @jibsheet\n. Acknowledged @rlucioni. I have also filed #970 to address the fact that this table should not store nonces forever. They should be removed once the authorization response is validated. Long-term it might make more sense to use Django's caching layer for this purpose rather than the database model.\n. It may also be possible to use the `replaces` functionality normally reserved for squashed migrations. \n. FYI @omab @cclay\n. @omab please let me know when we can expect a new PyPI release.\n. ",
    "cambridgemike": "Oh, that's awesome. It wasn't in the documentation. Thanks a bunch!\n. @omab Is it possible to set this redirect_url from within the pipeline?\n. Thanks, that's good enough for me!\n. @omab will this work? The `redirect_value` is grabbed from the session _before_ the pipeline finishes running\n\n```\nredirect_value = backend.strategy.session_get(redirect_name, '') or \\\n                 data.get(redirect_name, '')\n\nis_authenticated = user_is_authenticated(user)\nuser = is_authenticated and user or None\n\npartial = partial_pipeline_data(backend, user, *args, **kwargs)\nif partial:\n    xargs, xkwargs = partial\n    user = backend.continue_pipeline(*xargs, **xkwargs)\nelse:\n```\n. I want to send a user to `/facebook/login?redict_after=/my/url` OR `/facebook/complete?redirect_after=/my/url`. And have them redirected to `/my/url` after authenticated\n. Do I just need to put `next=/my/url` I assumed `next` was used for internal state tracking\n. Is it possible to turn off SANITIZE_REDIRECTS for the django strategy without writing my own strategy?\n. awesome aswesome, I see that's in the docs as well... sorry about that.\n\nThanks for everything!\n. I'm having this same error too. \n\nI think it's the [line](https://github.com/omab/python-social-auth/blob/master/social/pipeline/utils.py#L25) `clean_kwargs.update(kwargs)` because before that the `clean_kwargs['user']` is equal to `user.id`. But when you update it with the `kwargs` it gets set back to the `User` object.  Thus, the `user` gets stripped out of `clean_kwargs` when checking if values are in the `SERIALIZABLE_TYPES`.\n\nLooks like this was added in commit b1fa8bca3eb7abce29439809ace6dcbfc5578769 which launched as v0.1.24.  \n. Oh, that's awesome. It wasn't in the documentation. Thanks a bunch!\n. @omab Is it possible to set this redirect_url from within the pipeline?\n. Thanks, that's good enough for me!\n. @omab will this work? The `redirect_value` is grabbed from the session _before_ the pipeline finishes running\n\n```\nredirect_value = backend.strategy.session_get(redirect_name, '') or \\\n                 data.get(redirect_name, '')\n\nis_authenticated = user_is_authenticated(user)\nuser = is_authenticated and user or None\n\npartial = partial_pipeline_data(backend, user, *args, **kwargs)\nif partial:\n    xargs, xkwargs = partial\n    user = backend.continue_pipeline(*xargs, **xkwargs)\nelse:\n```\n. I want to send a user to `/facebook/login?redict_after=/my/url` OR `/facebook/complete?redirect_after=/my/url`. And have them redirected to `/my/url` after authenticated\n. Do I just need to put `next=/my/url` I assumed `next` was used for internal state tracking\n. Is it possible to turn off SANITIZE_REDIRECTS for the django strategy without writing my own strategy?\n. awesome aswesome, I see that's in the docs as well... sorry about that.\n\nThanks for everything!\n. I'm having this same error too. \n\nI think it's the [line](https://github.com/omab/python-social-auth/blob/master/social/pipeline/utils.py#L25) `clean_kwargs.update(kwargs)` because before that the `clean_kwargs['user']` is equal to `user.id`. But when you update it with the `kwargs` it gets set back to the `User` object.  Thus, the `user` gets stripped out of `clean_kwargs` when checking if values are in the `SERIALIZABLE_TYPES`.\n\nLooks like this was added in commit b1fa8bca3eb7abce29439809ace6dcbfc5578769 which launched as v0.1.24.  \n. ",
    "zhang-zy": "Thanks for point out the built-in middleware.\n\nI tried it, then found a small issue here: https://github.com/omab/python-social-auth/blob/master/social/backends/oauth.py\nUnlike `BaseOAuth2.auth_complete`, the `BaseOAuth2.do_auth` doesn't handle HTTPError (similar issue may also exist somewhere else). As a result, errors from `do_auth` won't be handled by `SocialAuthExceptionMiddleware`. If I write a custom middleware, I can check URL to determine where the HTTPError come from. It's an OK solution, but seems not very elegant to me. Are there any considerations of why `do_auth` not handling HTTPError like `auth_complete`?\n. Thanks for point out the built-in middleware.\n\nI tried it, then found a small issue here: https://github.com/omab/python-social-auth/blob/master/social/backends/oauth.py\nUnlike `BaseOAuth2.auth_complete`, the `BaseOAuth2.do_auth` doesn't handle HTTPError (similar issue may also exist somewhere else). As a result, errors from `do_auth` won't be handled by `SocialAuthExceptionMiddleware`. If I write a custom middleware, I can check URL to determine where the HTTPError come from. It's an OK solution, but seems not very elegant to me. Are there any considerations of why `do_auth` not handling HTTPError like `auth_complete`?\n. ",
    "romanlevin": "So I found that I can use the `*_AUTH_EXTRA_ARGUMENTS` setting to set the `access_type`, and `.refresh_token` seems to correctly update the persisted auth token so far.\n\nMaybe the Google backends should have a specific setting for enabling offline access? Or maybe an explicit mention of this in the documentation?\n. So I found that I can use the `*_AUTH_EXTRA_ARGUMENTS` setting to set the `access_type`, and `.refresh_token` seems to correctly update the persisted auth token so far.\n\nMaybe the Google backends should have a specific setting for enabling offline access? Or maybe an explicit mention of this in the documentation?\n. ",
    "vyscond": "nevermind! i was using the wrong reference at settings.py (social_auth.backends.facebook.FacebookBackend)\n. probably related to this [concept](http://www.puppetcookbook.com/posts/trailing-commas.html)\n. Hi! If note the **README.rst** on the line 120 the twitter is flag as **OAuth1**. This is why _\"it and it looks like the auth kwargs is a OAuth1 object\"_\n. Can you post the full traceback?\n. nevermind! i was using the wrong reference at settings.py (social_auth.backends.facebook.FacebookBackend)\n. probably related to this [concept](http://www.puppetcookbook.com/posts/trailing-commas.html)\n. Hi! If note the **README.rst** on the line 120 the twitter is flag as **OAuth1**. This is why _\"it and it looks like the auth kwargs is a OAuth1 object\"_\n. Can you post the full traceback?\n. ",
    "wuhaotju": "django \u5927\u725b. hi,how did you sloved it? the second fault.. ok, i know how to fix it,thx.and by the way.i have spell the wrong word 'solves',ha ha. django \u5927\u725b. hi,how did you sloved it? the second fault.. ok, i know how to fix it,thx.and by the way.i have spell the wrong word 'solves',ha ha. ",
    "trikosuave": "I found an error in a custom function I had in the pipeline. Was able to resolve that. \nI couldn't find it in the documentation. I am only using Facebook. Is there a way a user can associate the standard login/user with a Facebook login? Say I manually create a user 'a@example.com' and I want to click a link while logged into 'a' that will associate my facebook login 'b@example.com' to user a. Is there a way to do that? If I try that now (just using social:begin url) while logged in as 'a', I get this:\nValueError at /complete/facebook/\nCannot assign \"<django.utils.functional.SimpleLazyObject object at 0x114b20c10>\": \"UserSocialAuth.user\" must be a \"UserProfile\" instance.\nI am using django 1.5\nThanks!\n. Thanks. Had to work my way around our custom User model. However, when i login to facebook as user b when logged into our site as user a, it creates and logs me in to user b and doesnt associate with user a at all. Logging into facebook (user b) should log me into the site as user a. however it logs me in as b. Is there a setting I am missing?\n. I am going to close this issue as mine is more in the implementation than an issue with the code itself. Thanks for your help. I am still having trouble but will post on https://groups.google.com/forum/#!forum/python-social-auth instead. Thanks!\n. I found an error in a custom function I had in the pipeline. Was able to resolve that. \nI couldn't find it in the documentation. I am only using Facebook. Is there a way a user can associate the standard login/user with a Facebook login? Say I manually create a user 'a@example.com' and I want to click a link while logged into 'a' that will associate my facebook login 'b@example.com' to user a. Is there a way to do that? If I try that now (just using social:begin url) while logged in as 'a', I get this:\nValueError at /complete/facebook/\nCannot assign \"<django.utils.functional.SimpleLazyObject object at 0x114b20c10>\": \"UserSocialAuth.user\" must be a \"UserProfile\" instance.\nI am using django 1.5\nThanks!\n. Thanks. Had to work my way around our custom User model. However, when i login to facebook as user b when logged into our site as user a, it creates and logs me in to user b and doesnt associate with user a at all. Logging into facebook (user b) should log me into the site as user a. however it logs me in as b. Is there a setting I am missing?\n. I am going to close this issue as mine is more in the implementation than an issue with the code itself. Thanks for your help. I am still having trouble but will post on https://groups.google.com/forum/#!forum/python-social-auth instead. Thanks!\n. ",
    "dhendo": "@omab The exacttarget_ prefix was for local convenience. The id is presented details by ET, rather than in the response, so the override is required.\n. Rolled into #386 \n. @omab - yes there was no good reason to skip the class, updated.\n. @omab The exacttarget_ prefix was for local convenience. The id is presented details by ET, rather than in the response, so the override is required.\n. Rolled into #386 \n. @omab - yes there was no good reason to skip the class, updated.\n. ",
    "crazyscorpio12": "@epetxepe did you find any solution to this yet?\n. @epetxepe did you find any solution to this yet?\n. ",
    "epetxepe": "@crazyscorpio12  Not yet, but right now I'm focussed on the development of the web-framework. I think it is matter of tweaking the javascript inserted in the main page to avoid automatically sign-in.\n. I've opted for an approach to show Logout for local users and Disconnect for python-social-auth, and to revoke the token given by Google plus, so when I try to login next time, it does not log in automatically and I can either log with local accounts or python-social-auth (having to give permission again).\n\nI had to set the following in the settings.py file to revoke the given token:\nSOCIAL_AUTH_REVOKE_TOKENS_ON_DISCONNECT = True\nand \nTo make the changes I suggest at https://github.com/omab/python-social-auth/issues/484\n\nThe sign-out procedure reported above seems the most natural way. \n. Dear @Menda @omab, \n\n   I've tried to use the SDK sign out solution (https://developers.google.com/+/web/signin/sign-out), and I've not been able to make the solution work. I've tried testing locally and from remote machines. \n\n  I've implemented the following:\n\n  <script>\n      function signOut() {\n        var auth2 = gapi.auth2.getAuthInstance();\n        auth2.signOut().then(function () {\n          console.log('User signed out.');\n          window.location =\"https://127.0.0.1:8000/logout\";  \n        });\n      }\n      function onLoad() {\n         gapi.load('auth2', function() {\n           gapi.auth2.init();\n         });\n       }\n    </script>\n    <script src=\"https://plus.google.com/js/client:plusone.js?onload=onLoad\" async defer></script>\n    ...\n    <a href=\"#\" onclick=\"signOut();\">Sign out</a>\n\nI receive the console.log('User signed out.'); message and logout executes but it is automatically logged again.\n\nAny pointers / example how you have implemented this?\nHow can I check at debug level if the user has been signed out?\n. @omab Thanks for the updates, but I've not been able to get it working correctly.\nI've tried:\n    1.- Updated example. I'm receiving the following error from Google: \n1. That\u2019s an error.\n   Error: invalid_request\n   Application: Si elegans web platform\n   You can email the developer of this application at: ------------@gmail.com\n   Permission denied to generate login hint for target domain.\n   Request Details\n   openid.realm=\n   scope=email profile openid https://www.googleapis.com/auth/plus.login\n   response_type=permission\n   redirect_uri=storagerelay://http/127.0.0.1:8000?id=auth720879\n   ss_domain=http://127.0.0.1:8000\n   client_id=--------------------------\n   fetch_basic_profile=true\n\nI've tried it with 127.0.0.1 and localhost. Updated Google Developer Console with http://127.0.0.1/* to match redirect_uri following http://stackoverflow.com/questions/29201763/google-sign-in-is-not-working \n\nNo luck.\n\n```\n2.- Updated my original code with updated documentation http://psa.matiasaguirre.net/docs/backends/google.html#google-sign-in, but the same automatically sign-in after sign-out is repeated. Is there a way to see the changes is your documentation html? \n```\n\nThe documentation does not reflect sign out usage and the updated example makes a SDK usage not introduced in the documentation. The example makes a more clear use of the Google's JS SDK objects, while documentation reflects the callback way, which keeps calling complete/google_plus when the https://apis.google.com/js/client:plusone.js is loaded.\n. @omab yes my browser was rendering a cached version. Sorry for that.\n\nI've tried both the example and the documentation on my dev having to change the following:\n**1.- To fix the error:**\n\n Error: invalid_request Application: Si elegans web platform You can email the developer of this application at: ------------@gmail.com Permission denied to generate login hint for target domain. Request Details openid.realm= scope=email profile openid https://www.googleapis.com/auth/plus.login response_type=permission redirect_uri=storagerelay://http/127.0.0.1:8000?id=auth720879 ss_domain=http://127.0.0.1:8000 client_id=-------------------------- fetch_basic_profile=true\n\n**Change:** Updated Google Developer Console with `http://127.0.0.1:8000/*` & `http://localhost:8000/*` .  **It only works for localhost:8000**\n**2.- To fix the error:**\nInternal Server Error: /complete/google-plus\nTraceback (most recent call last):\n  File \"C:\\Users\\gepelde.virtualenvs\\sielegans\\lib\\site-packages\\django\\core\\handlers\\base.py\", line 87, in get_response\n    response = middleware_method(request)\n  File \"C:\\Users\\gepelde.virtualenvs\\sielegans\\lib\\site-packages\\django\\middleware\\common.py\", line 82, in process_request\n    \"settings.\") % (new_url[0], new_url[1]))\nRuntimeError: You called this URL via POST, but the URL doesn't end in a slash and you have APPEND_SLASH set. Django can't redirect to the slash URL while maintaining POST data. Change your form to point to localhost:8000/complete/google-plus/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.\n\n**Change:** Added an extra slash at the of  $form.attr(\"action\", \"/complete/google-plus\"); --- from documentation or substitute with the line from example $form.attr(\"action\", \"{% url \"social:complete\" backend=\"google-plus\" %}\"); \n     I've proposed a change in github\n\n**I'm stuck at error:**(On both example and my own dev)\nMissing needed parameter access_token or **code**\nRequest Method: POST\nRequest URL:    https://localhost:8000/complete/google-plus/\nDjango Version: 1.7.1\nException Type: AuthMissingParameter\nException Value:  \nMissing needed parameter access_token or **code**\n\nI've updated your javascript to fill the code value, but I don't know where to get the **code** from the authResponse object. In the old version it was coming from the callback. \n\n```\n $form = $(\"<form>\");\n$form.attr(\"action\", \"{% url \"social:complete\" backend=\"google-plus\" %}\");\n$form.attr(\"method\", \"post\");\n$input_access_token = $(\"<input>\");\n$input_access_token.attr(\"name\", \"access_token\");\n$input_access_token.attr(\"value\", authResponse.access_token);\n$form.append($input_access_token);\n**$input_code = $(\"<input>\");**\n**$input_code.attr(\"name\", \"code\");**\n**$input_code.attr(\"value\", authResponse.code);**\n$form.append($input_code);\n// Add csrf-token if needed\n$(document.body).append($form);\n$form.submit();\n```\n\nChecking the /complete/google-plus/ request I've seen that code is being sent empty, while in the old version, there is a string filled.\n\n**As a results I'm stuck in the error**:\n\nAuthCanceled at /complete/google-plus/\nAuthentication process canceled\nRequest Method: POST\nRequest URL:    https://localhost:8000/complete/google-plus/\nDjango Version: 1.7.1\nException Type: AuthCanceled\nException Value:  \nAuthentication process canceled\n\nI've checked the AuthResponse object at https://developers.google.com/identity/sign-in/web/reference , but not sure if any of its properties is the old version's **code** value. \n\nCould you please provide advice on this?\n. Thanks @omab, got both sign-in and log-out working with the latest version and no auto-login.\n. @crazyscorpio12  Not yet, but right now I'm focussed on the development of the web-framework. I think it is matter of tweaking the javascript inserted in the main page to avoid automatically sign-in.\n. I've opted for an approach to show Logout for local users and Disconnect for python-social-auth, and to revoke the token given by Google plus, so when I try to login next time, it does not log in automatically and I can either log with local accounts or python-social-auth (having to give permission again).\n\nI had to set the following in the settings.py file to revoke the given token:\nSOCIAL_AUTH_REVOKE_TOKENS_ON_DISCONNECT = True\nand \nTo make the changes I suggest at https://github.com/omab/python-social-auth/issues/484\n\nThe sign-out procedure reported above seems the most natural way. \n. Dear @Menda @omab, \n\n   I've tried to use the SDK sign out solution (https://developers.google.com/+/web/signin/sign-out), and I've not been able to make the solution work. I've tried testing locally and from remote machines. \n\n  I've implemented the following:\n\n  <script>\n      function signOut() {\n        var auth2 = gapi.auth2.getAuthInstance();\n        auth2.signOut().then(function () {\n          console.log('User signed out.');\n          window.location =\"https://127.0.0.1:8000/logout\";  \n        });\n      }\n      function onLoad() {\n         gapi.load('auth2', function() {\n           gapi.auth2.init();\n         });\n       }\n    </script>\n    <script src=\"https://plus.google.com/js/client:plusone.js?onload=onLoad\" async defer></script>\n    ...\n    <a href=\"#\" onclick=\"signOut();\">Sign out</a>\n\nI receive the console.log('User signed out.'); message and logout executes but it is automatically logged again.\n\nAny pointers / example how you have implemented this?\nHow can I check at debug level if the user has been signed out?\n. @omab Thanks for the updates, but I've not been able to get it working correctly.\nI've tried:\n    1.- Updated example. I'm receiving the following error from Google: \n1. That\u2019s an error.\n   Error: invalid_request\n   Application: Si elegans web platform\n   You can email the developer of this application at: ------------@gmail.com\n   Permission denied to generate login hint for target domain.\n   Request Details\n   openid.realm=\n   scope=email profile openid https://www.googleapis.com/auth/plus.login\n   response_type=permission\n   redirect_uri=storagerelay://http/127.0.0.1:8000?id=auth720879\n   ss_domain=http://127.0.0.1:8000\n   client_id=--------------------------\n   fetch_basic_profile=true\n\nI've tried it with 127.0.0.1 and localhost. Updated Google Developer Console with http://127.0.0.1/* to match redirect_uri following http://stackoverflow.com/questions/29201763/google-sign-in-is-not-working \n\nNo luck.\n\n```\n2.- Updated my original code with updated documentation http://psa.matiasaguirre.net/docs/backends/google.html#google-sign-in, but the same automatically sign-in after sign-out is repeated. Is there a way to see the changes is your documentation html? \n```\n\nThe documentation does not reflect sign out usage and the updated example makes a SDK usage not introduced in the documentation. The example makes a more clear use of the Google's JS SDK objects, while documentation reflects the callback way, which keeps calling complete/google_plus when the https://apis.google.com/js/client:plusone.js is loaded.\n. @omab yes my browser was rendering a cached version. Sorry for that.\n\nI've tried both the example and the documentation on my dev having to change the following:\n**1.- To fix the error:**\n\n Error: invalid_request Application: Si elegans web platform You can email the developer of this application at: ------------@gmail.com Permission denied to generate login hint for target domain. Request Details openid.realm= scope=email profile openid https://www.googleapis.com/auth/plus.login response_type=permission redirect_uri=storagerelay://http/127.0.0.1:8000?id=auth720879 ss_domain=http://127.0.0.1:8000 client_id=-------------------------- fetch_basic_profile=true\n\n**Change:** Updated Google Developer Console with `http://127.0.0.1:8000/*` & `http://localhost:8000/*` .  **It only works for localhost:8000**\n**2.- To fix the error:**\nInternal Server Error: /complete/google-plus\nTraceback (most recent call last):\n  File \"C:\\Users\\gepelde.virtualenvs\\sielegans\\lib\\site-packages\\django\\core\\handlers\\base.py\", line 87, in get_response\n    response = middleware_method(request)\n  File \"C:\\Users\\gepelde.virtualenvs\\sielegans\\lib\\site-packages\\django\\middleware\\common.py\", line 82, in process_request\n    \"settings.\") % (new_url[0], new_url[1]))\nRuntimeError: You called this URL via POST, but the URL doesn't end in a slash and you have APPEND_SLASH set. Django can't redirect to the slash URL while maintaining POST data. Change your form to point to localhost:8000/complete/google-plus/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.\n\n**Change:** Added an extra slash at the of  $form.attr(\"action\", \"/complete/google-plus\"); --- from documentation or substitute with the line from example $form.attr(\"action\", \"{% url \"social:complete\" backend=\"google-plus\" %}\"); \n     I've proposed a change in github\n\n**I'm stuck at error:**(On both example and my own dev)\nMissing needed parameter access_token or **code**\nRequest Method: POST\nRequest URL:    https://localhost:8000/complete/google-plus/\nDjango Version: 1.7.1\nException Type: AuthMissingParameter\nException Value:  \nMissing needed parameter access_token or **code**\n\nI've updated your javascript to fill the code value, but I don't know where to get the **code** from the authResponse object. In the old version it was coming from the callback. \n\n```\n $form = $(\"<form>\");\n$form.attr(\"action\", \"{% url \"social:complete\" backend=\"google-plus\" %}\");\n$form.attr(\"method\", \"post\");\n$input_access_token = $(\"<input>\");\n$input_access_token.attr(\"name\", \"access_token\");\n$input_access_token.attr(\"value\", authResponse.access_token);\n$form.append($input_access_token);\n**$input_code = $(\"<input>\");**\n**$input_code.attr(\"name\", \"code\");**\n**$input_code.attr(\"value\", authResponse.code);**\n$form.append($input_code);\n// Add csrf-token if needed\n$(document.body).append($form);\n$form.submit();\n```\n\nChecking the /complete/google-plus/ request I've seen that code is being sent empty, while in the old version, there is a string filled.\n\n**As a results I'm stuck in the error**:\n\nAuthCanceled at /complete/google-plus/\nAuthentication process canceled\nRequest Method: POST\nRequest URL:    https://localhost:8000/complete/google-plus/\nDjango Version: 1.7.1\nException Type: AuthCanceled\nException Value:  \nAuthentication process canceled\n\nI've checked the AuthResponse object at https://developers.google.com/identity/sign-in/web/reference , but not sure if any of its properties is the old version's **code** value. \n\nCould you please provide advice on this?\n. Thanks @omab, got both sign-in and log-out working with the latest version and no auto-login.\n. ",
    "Menda": "I'm having the same problem. I tried also all posibilities, and I have no clue how can this being solved. Maybe @omab knows the reason.\n. Yes, this JS call function is exactly what I tried, but didn't work, but I think it's because some people are reporting that the logout function doesn't work on localhost. When I have it tested, I will update the Google README file on how to procedure for this functionality.\n. Hi @epetxepe . In my case I also have the same problem as you, because after using the sign out also the users sign in again. This is not only happening in localhost, but in all servers. Let's see if anybody comes with a solution and document it.\n. Same as here: https://github.com/omab/python-social-auth/issues/316\n. Restart also Travis, it's failing for any reason.\n. :+1: \n. I'm having the same problem. I tried also all posibilities, and I have no clue how can this being solved. Maybe @omab knows the reason.\n. Yes, this JS call function is exactly what I tried, but didn't work, but I think it's because some people are reporting that the logout function doesn't work on localhost. When I have it tested, I will update the Google README file on how to procedure for this functionality.\n. Hi @epetxepe . In my case I also have the same problem as you, because after using the sign out also the users sign in again. This is not only happening in localhost, but in all servers. Let's see if anybody comes with a solution and document it.\n. Same as here: https://github.com/omab/python-social-auth/issues/316\n. Restart also Travis, it's failing for any reason.\n. :+1: \n. ",
    "davidhubbard": "fixing that Travis CI error...\n. fixing that Travis CI error...\n. ",
    "marinewater": "It's fairly easy, you must have an [Authorization Policy and an AuthenticationPolicy setup](http://docs.pylonsproject.org/projects/pyramid/en/1.5-branch/narr/security.html#enabling-an-authorization-policy), get the headers via `pyramid.security.remember(request, username)` and redirect the user (e.g. `HTTPFound(location=location, headers=rember(request, username)`) instead of using sessions.\n\nPyramid is very well documented, [here is a code example](http://docs.pylonsproject.org/projects/pyramid/en/1.5-branch/quick_tutorial/authentication.html?highlight=authentication), should be rather easy to implement it.\n. It's fairly easy, you must have an [Authorization Policy and an AuthenticationPolicy setup](http://docs.pylonsproject.org/projects/pyramid/en/1.5-branch/narr/security.html#enabling-an-authorization-policy), get the headers via `pyramid.security.remember(request, username)` and redirect the user (e.g. `HTTPFound(location=location, headers=rember(request, username)`) instead of using sessions.\n\nPyramid is very well documented, [here is a code example](http://docs.pylonsproject.org/projects/pyramid/en/1.5-branch/quick_tutorial/authentication.html?highlight=authentication), should be rather easy to implement it.\n. ",
    "cjltsod": "With this pull request, Pyramid Authentication Policies could run smoothly. \n\nI'm able to write an example with Pyramid Authentication Policies, but I'm not sure what directory name should I use.\n. With this pull request, Pyramid Authentication Policies could run smoothly. \n\nI'm able to write an example with Pyramid Authentication Policies, but I'm not sure what directory name should I use.\n. ",
    "yetanotherape": "I use django 1.6.5, add custom function to `SOCIAL_AUTH_PIPELINE`, which redirects user to another view and do nothing when user come via `redirect('social:complete', backend=backend)`.\nWhen user come via `redirect('social:complete', backend=backend)` param `user` equals to `None` in python-social-auth 0.1.26. But in 0.1.23 this param contained user that was created.\n\n```\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details',\n    'my_app.social_pipeline.foobar',\n)\n...\n@partial\ndef foobar(strategy, details, user=None, is_new=False, *args, **kwargs):\n    pass\n```\n. Hey, @omab, what's wrong with this pull request?\n. Thanks!\n. I use django 1.6.5, add custom function to `SOCIAL_AUTH_PIPELINE`, which redirects user to another view and do nothing when user come via `redirect('social:complete', backend=backend)`.\nWhen user come via `redirect('social:complete', backend=backend)` param `user` equals to `None` in python-social-auth 0.1.26. But in 0.1.23 this param contained user that was created.\n\n```\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details',\n    'my_app.social_pipeline.foobar',\n)\n...\n@partial\ndef foobar(strategy, details, user=None, is_new=False, *args, **kwargs):\n    pass\n```\n. Hey, @omab, what's wrong with this pull request?\n. Thanks!\n. ",
    "scuml": "Ran into the same error using Google Auth with Flower (https://github.com/mher/flower) on Safari 8.0.2.  Auth redirect worked fine in Chrome, but 504'd in Safari.  \n. No - have yet to find a solution.  Ended up just using Chrome as a workaround.\n. Ran into the same error using Google Auth with Flower (https://github.com/mher/flower) on Safari 8.0.2.  Auth redirect worked fine in Chrome, but 504'd in Safari.  \n. No - have yet to find a solution.  Ended up just using Chrome as a workaround.\n. ",
    "domino14": "I'm seeing this as well with Facebook.\n. @scuml @jenia have any of you figured out what caused this?\n. My issue was that I had no Internet connectivity from inside my Docker container on prod - not related to this. FWIW Safari and my Google social auth work fine on prod... Thanks for letting me know.\n. So this doesn't work? We gotta use Google OAuth2 backend?\n. The issue was that I had no Internet connectivity inside my Docker container on prod for an unrelated reason. Closing this, but I'll leave the description up in case anyone has the same issue...\n. I'm seeing this as well with Facebook.\n. @scuml @jenia have any of you figured out what caused this?\n. My issue was that I had no Internet connectivity from inside my Docker container on prod - not related to this. FWIW Safari and my Google social auth work fine on prod... Thanks for letting me know.\n. So this doesn't work? We gotta use Google OAuth2 backend?\n. The issue was that I had no Internet connectivity inside my Docker container on prod for an unrelated reason. Closing this, but I'll leave the description up in case anyone has the same issue...\n. ",
    "onurmatik": "Sure, but for example when a new email validation is started, any existing partial pipeline session data should be invalidated and the newly started pipeline data should be used. In the current situation, the old one persists, never letting a new validation to be started. Thus, if you enter a wrong email address, there is no way you can correct it, without cleaning the session data explicitly. \n. Sure, but for example when a new email validation is started, any existing partial pipeline session data should be invalidated and the newly started pipeline data should be used. In the current situation, the old one persists, never letting a new validation to be started. Thus, if you enter a wrong email address, there is no way you can correct it, without cleaning the session data explicitly. \n. ",
    "ffurrer": "And here's my branch, I'm not super happy with the implementation but I just adapted from the other code.\nhttps://github.com/ffurrer/django-social-auth/tree/feature/github_team_support\n. nice, thanks :)\n. And here's my branch, I'm not super happy with the implementation but I just adapted from the other code.\nhttps://github.com/ffurrer/django-social-auth/tree/feature/github_team_support\n. nice, thanks :)\n. ",
    "ScottBarkman": "Errant Issue - my bad.\n. Errant Issue - my bad.\n. ",
    "rosscdh": "bump?\n. Great to hear. I can submit a pull request with the namespace change if you like? I've also got another PR ready for a \"goclio\" (http://goclio.com) backend integration\n. Pleasure, thanks for the great app\n. @dhamaniasad last time I checked there were also issues in the exception middleware. The access strategy for accessing the request/site/backend object was broken. Is this still the case?\n. bump?\n. Great to hear. I can submit a pull request with the namespace change if you like? I've also got another PR ready for a \"goclio\" (http://goclio.com) backend integration\n. Pleasure, thanks for the great app\n. @dhamaniasad last time I checked there were also issues in the exception middleware. The access strategy for accessing the request/site/backend object was broken. Is this still the case?\n. ",
    "dexter1691": "@omab Thanks for taking time looking into this. Its highly unlikely that it is a production/development issue. I will try to dig deeper into it, and will update the thread with my findings.\n. @omab Thanks for taking time looking into this. Its highly unlikely that it is a production/development issue. I will try to dig deeper into it, and will update the thread with my findings.\n. ",
    "gorillamania": "@omab  thanks for the quick response and the fix. Have a beer on me with @changetip\n. Thanks @omab! 1 high five @changetip\n. @omab  thanks for the quick response and the fix. Have a beer on me with @changetip\n. Thanks @omab! 1 high five @changetip\n. ",
    "changetip": "Hi omab, gorillamania sent you a Bitcoin tip worth a beer (5.932 mBTC/$3.50), and I'm here to deliver it \u2794 **[collect your tip at ChangeTip.com](https://www.changetip.com/collect/32128)**.\n\n**[Is this real?](https://www.changetip.com/tip-online/github)**\n. Hi @omab, I've delivered a Bitcoin tip worth 1 high five (22,228 bits/$5.00) from @gorillamania to your ChangeTip wallet.\n\n**[Learn about ChangeTip](https://www.changetip.com/tip-online/github)**\n. Hi omab, gorillamania sent you a Bitcoin tip worth a beer (5.932 mBTC/$3.50), and I'm here to deliver it \u2794 **[collect your tip at ChangeTip.com](https://www.changetip.com/collect/32128)**.\n\n**[Is this real?](https://www.changetip.com/tip-online/github)**\n. Hi @omab, I've delivered a Bitcoin tip worth 1 high five (22,228 bits/$5.00) from @gorillamania to your ChangeTip wallet.\n\n**[Learn about ChangeTip](https://www.changetip.com/tip-online/github)**\n. ",
    "mhluongo": "@omab great points. I'll update the PR.\n. @clintonb I should be able to give it some time tomorrow.\n. @coagulant it's definitely cleaner, but I'm not sure about the South >= 1.0 requirement- anyone uneasy about that?\n. The ayes have it.\n. @omab I'm not sure how to remove the `auth.User` bit in the South migration, since AFAICT South still doesn't support swappable models. Maybe I'm missing something?\n. FWIW the tests run fine in my environment. It looks like Travis had connectivity issues & needs to rebuild.\n. @clintonb but if there's a migration after the initial one, that solution breaks down. The issue is that South doesn't have a way to freeze that setting. Maybe that's the best we can do, though?\n. @omab are there issues (IP, etc) with pulling https://github.com/omab/django-social-auth/blob/master/social_auth/utils.py in? If not, I'll do that.\n. ... a couple force-pushes later, and I think this is done- it seems to work for a fresh deploy of the app I'm working on, anyway.\n. @omab great points. I'll update the PR.\n. @clintonb I should be able to give it some time tomorrow.\n. @coagulant it's definitely cleaner, but I'm not sure about the South >= 1.0 requirement- anyone uneasy about that?\n. The ayes have it.\n. @omab I'm not sure how to remove the `auth.User` bit in the South migration, since AFAICT South still doesn't support swappable models. Maybe I'm missing something?\n. FWIW the tests run fine in my environment. It looks like Travis had connectivity issues & needs to rebuild.\n. @clintonb but if there's a migration after the initial one, that solution breaks down. The issue is that South doesn't have a way to freeze that setting. Maybe that's the best we can do, though?\n. @omab are there issues (IP, etc) with pulling https://github.com/omab/django-social-auth/blob/master/social_auth/utils.py in? If not, I'll do that.\n. ... a couple force-pushes later, and I think this is done- it seems to work for a fresh deploy of the app I'm working on, anyway.\n. ",
    "SalahAdDin": "But, i think that will be good if you put the two ways, django migrations and South migrations :D\n. Heee, now is very cool, both migrations ways!\n. :+1: Put in docs please.\n. But, i think that will be good if you put the two ways, django migrations and South migrations :D\n. Heee, now is very cool, both migrations ways!\n. :+1: Put in docs please.\n. ",
    "coagulant": "Keeping south migrations and django 1.7 migrations in separate folders seems like a more clean and maintainable solution, e.g. https://github.com/alex/django-taggit/tree/develop/taggit has both `south_migrations` and `migrations` folders. https://docs.djangoproject.com/en/dev/topics/migrations/#libraries-third-party-apps\n\nRequiring to upgrade South to 1.0 or set up proper `SOUTH_MIGRATION_MODULES` is an only requirement.\n. Keeping south migrations and django 1.7 migrations in separate folders seems like a more clean and maintainable solution, e.g. https://github.com/alex/django-taggit/tree/develop/taggit has both `south_migrations` and `migrations` folders. https://docs.djangoproject.com/en/dev/topics/migrations/#libraries-third-party-apps\n\nRequiring to upgrade South to 1.0 or set up proper `SOUTH_MIGRATION_MODULES` is an only requirement.\n. ",
    "Karmak23": "I case this is still unclear and @jacksonofalltrades needs an exemple, [here is](https://github.com/1flow/1flow/blob/master/oneflow/base/templates/profile/social-accounts.html) a profile page where currently associated accounts are shown to the user, and a block to [associate new ones](https://github.com/1flow/1flow/blob/master/oneflow/core/templates/snippets/social-auth-signin.html).\n\nNOTE: the templates use latest python-social-auth official version, but still font-awesome 3.2.1. Here is a screenshot (sorry it's in french I've got a language switch bug on the profile page\u2026):\n\n![capture d ecran de 2014-11-16 17 22 36](https://cloud.githubusercontent.com/assets/663404/5062159/5be7979e-6db5-11e4-972f-3b1ea450831e.png)\n. Ping please ?\nEvery time I associate an account, it works, but `user.social_auth.get().tokens` is `None`.\n. Hi,\nI would have expected some hints to help me find what could have been wrong, but nevermind.\n\nI finally solved my problem. For future readers, here is what was wrong\u00a0:\n- **some settings coming from DSA should be WIPED OUT**. Here, `SOCIAL_AUTH_EXTRA_DATA=True` was making PSA pipeline crash, without any exception.\n  - After a search I see now it's listed in [deprecated bits](http://django-social-auth.readthedocs.org/en/latest/deprecated.html?highlight=social_auth_extra_data), but I never got any deprecation warning in DSA about it in 2 years. PSA  picks it up with a totally different meaning: it's now a valid setting again, but should not contain the same type of settings. There was a `ValueError` [raised here](https://github.com/omab/python-social-auth/blob/master/social/backends/base.py#L120), but silenced at some point. \n  - Setting `SOCIAL_AUTH_RAISE_EXCEPTIONS=True` was not of any help, even with `DEBUG=True`, even with `SocialAuthExceptionMiddleware` enabled, the exception was still silent. I was only redirected to `LOGIN_ERROR_URL`, not even without a message. I needed to log and try/except all pipeline functions one by one to find where the problem was. I think the pipeline debugging should be made easier to enable (like `requests-oauthlib` does, with some `logging.debug()` call here and there). \n- **pipeline arguments order changed** from DSA to PSA. I successfully tackled the `social_auth` \u2192 `backend` argument rename and some other obvious bits, but not the arguments order changes, which are not stated in the migration documentation. I finished by using only `**kwargs` in my pipeline functions, getting only the arguments I needed at every function beginning.\n\nHope this helps someone else migrating from DSA to PSA.\n\n@omab , I can provide a PR for a debuggable pipeline, I've got a partially (but cleanly, with python logging, namespace, etc) patched PSA ;-)\n\nregards,\n. I case this is still unclear and @jacksonofalltrades needs an exemple, [here is](https://github.com/1flow/1flow/blob/master/oneflow/base/templates/profile/social-accounts.html) a profile page where currently associated accounts are shown to the user, and a block to [associate new ones](https://github.com/1flow/1flow/blob/master/oneflow/core/templates/snippets/social-auth-signin.html).\n\nNOTE: the templates use latest python-social-auth official version, but still font-awesome 3.2.1. Here is a screenshot (sorry it's in french I've got a language switch bug on the profile page\u2026):\n\n![capture d ecran de 2014-11-16 17 22 36](https://cloud.githubusercontent.com/assets/663404/5062159/5be7979e-6db5-11e4-972f-3b1ea450831e.png)\n. Ping please ?\nEvery time I associate an account, it works, but `user.social_auth.get().tokens` is `None`.\n. Hi,\nI would have expected some hints to help me find what could have been wrong, but nevermind.\n\nI finally solved my problem. For future readers, here is what was wrong\u00a0:\n- **some settings coming from DSA should be WIPED OUT**. Here, `SOCIAL_AUTH_EXTRA_DATA=True` was making PSA pipeline crash, without any exception.\n  - After a search I see now it's listed in [deprecated bits](http://django-social-auth.readthedocs.org/en/latest/deprecated.html?highlight=social_auth_extra_data), but I never got any deprecation warning in DSA about it in 2 years. PSA  picks it up with a totally different meaning: it's now a valid setting again, but should not contain the same type of settings. There was a `ValueError` [raised here](https://github.com/omab/python-social-auth/blob/master/social/backends/base.py#L120), but silenced at some point. \n  - Setting `SOCIAL_AUTH_RAISE_EXCEPTIONS=True` was not of any help, even with `DEBUG=True`, even with `SocialAuthExceptionMiddleware` enabled, the exception was still silent. I was only redirected to `LOGIN_ERROR_URL`, not even without a message. I needed to log and try/except all pipeline functions one by one to find where the problem was. I think the pipeline debugging should be made easier to enable (like `requests-oauthlib` does, with some `logging.debug()` call here and there). \n- **pipeline arguments order changed** from DSA to PSA. I successfully tackled the `social_auth` \u2192 `backend` argument rename and some other obvious bits, but not the arguments order changes, which are not stated in the migration documentation. I finished by using only `**kwargs` in my pipeline functions, getting only the arguments I needed at every function beginning.\n\nHope this helps someone else migrating from DSA to PSA.\n\n@omab , I can provide a PR for a debuggable pipeline, I've got a partially (but cleanly, with python logging, namespace, etc) patched PSA ;-)\n\nregards,\n. ",
    "alfetopito": "Hi there.\n\n@omab I'm doing exactly as you said, but it is not working.\nLooking through the issues I found this one and since it is the same I opted to comment it here. If you think a new issue would be better just let me know.\n\nAnyway, I'm doing my custom model and custom storage, but both models are being created by Django, generating a conflict due to the related name in the user ForeignKey.\n\nHere's a stub code for reference:\n\n```\n# users.models.py\n\nclass CustomUserSocialAuth(AbstractUserSocialAuth):\n    \"\"\"Social Auth association model\"\"\"\n\n    @classmethod\n    def create_user(cls, *args, **kwargs):\n         # my custom method here\n         pass\n\n    class Meta:\n        \"\"\"Meta data\"\"\"\n        unique_together = ('provider', 'uid')\n        db_table = 'social_auth_usersocialauth'\n\n\n-----\n# user.storages.py\n\nfrom .models import CustomUserSocialAuth\n\nclass PreCreatedUserStorage(DjangoStorage):\n    \"\"\"\n    This storage was created with the sole purpose of using our pre-created\n    unclaimed user accounts rather than creating brand new user objects\n    \"\"\"\n    user = CustomUserSocialAuth\n\n\n-----\n# settings.py\n\nSOCIAL_AUTH_STORAGE = 'users.storages.PreCreatedUserStorage'\n```\n\nThe error:\n\n```\n    raise SystemCheckError(msg)\ndjango.core.management.base.SystemCheckError: SystemCheckError: System check identified some issues:\n\nERRORS:\ndefault.UserSocialAuth.user: (fields.E304) Reverse accessor for 'UserSocialAuth.user' clashes with reverse accessor for 'CustomUserSocialAuth.user'.\n    HINT: Add or change a related_name argument to the definition for 'UserSocialAuth.user' or 'CustomUserSocialAuth.user'.\ndefault.UserSocialAuth.user: (fields.E305) Reverse query name for 'UserSocialAuth.user' clashes with reverse query name for 'CustomUserSocialAuth.user'.\n    HINT: Add or change a related_name argument to the definition for 'UserSocialAuth.user' or 'CustomUserSocialAuth.user'.\nusers.CustomUserSocialAuth.user: (fields.E304) Reverse accessor for 'CustomUserSocialAuth.user' clashes with reverse accessor for 'UserSocialAuth.user'.\n    HINT: Add or change a related_name argument to the definition for 'CustomUserSocialAuth.user' or 'UserSocialAuth.user'.\nusers.CustomUserSocialAuth.user: (fields.E305) Reverse query name for 'CustomUserSocialAuth.user' clashes with reverse query name for 'UserSocialAuth.user'.\n    HINT: Add or change a related_name argument to the definition for 'CustomUserSocialAuth.user' or 'UserSocialAuth.user'.\n```\n\nI believe that if I use a different related name it will pass the initial check, but maybe the reverse relationship is used by PSA down the road.\n\nIs there a better alternative to use a custom User model?\n\nWhat I wanted to solve by creating a custom user is simply to override the `create_user` method. Maybe I don't need a custom UserSocialAuth model.\n\nThoughts?\n. One alternative that just occurred to me is instead of a custom storage, I can modify the `social.pipepline.user.create_user` function (https://github.com/omab/python-social-auth/blob/master/social%2Fpipeline%2Fuser.py#L58) to do the creation my own way.\n\nMight work, but I still feel like this isn't the right place to do it.\n. Hi there.\n\n@omab I'm doing exactly as you said, but it is not working.\nLooking through the issues I found this one and since it is the same I opted to comment it here. If you think a new issue would be better just let me know.\n\nAnyway, I'm doing my custom model and custom storage, but both models are being created by Django, generating a conflict due to the related name in the user ForeignKey.\n\nHere's a stub code for reference:\n\n```\n# users.models.py\n\nclass CustomUserSocialAuth(AbstractUserSocialAuth):\n    \"\"\"Social Auth association model\"\"\"\n\n    @classmethod\n    def create_user(cls, *args, **kwargs):\n         # my custom method here\n         pass\n\n    class Meta:\n        \"\"\"Meta data\"\"\"\n        unique_together = ('provider', 'uid')\n        db_table = 'social_auth_usersocialauth'\n\n\n-----\n# user.storages.py\n\nfrom .models import CustomUserSocialAuth\n\nclass PreCreatedUserStorage(DjangoStorage):\n    \"\"\"\n    This storage was created with the sole purpose of using our pre-created\n    unclaimed user accounts rather than creating brand new user objects\n    \"\"\"\n    user = CustomUserSocialAuth\n\n\n-----\n# settings.py\n\nSOCIAL_AUTH_STORAGE = 'users.storages.PreCreatedUserStorage'\n```\n\nThe error:\n\n```\n    raise SystemCheckError(msg)\ndjango.core.management.base.SystemCheckError: SystemCheckError: System check identified some issues:\n\nERRORS:\ndefault.UserSocialAuth.user: (fields.E304) Reverse accessor for 'UserSocialAuth.user' clashes with reverse accessor for 'CustomUserSocialAuth.user'.\n    HINT: Add or change a related_name argument to the definition for 'UserSocialAuth.user' or 'CustomUserSocialAuth.user'.\ndefault.UserSocialAuth.user: (fields.E305) Reverse query name for 'UserSocialAuth.user' clashes with reverse query name for 'CustomUserSocialAuth.user'.\n    HINT: Add or change a related_name argument to the definition for 'UserSocialAuth.user' or 'CustomUserSocialAuth.user'.\nusers.CustomUserSocialAuth.user: (fields.E304) Reverse accessor for 'CustomUserSocialAuth.user' clashes with reverse accessor for 'UserSocialAuth.user'.\n    HINT: Add or change a related_name argument to the definition for 'CustomUserSocialAuth.user' or 'UserSocialAuth.user'.\nusers.CustomUserSocialAuth.user: (fields.E305) Reverse query name for 'CustomUserSocialAuth.user' clashes with reverse query name for 'UserSocialAuth.user'.\n    HINT: Add or change a related_name argument to the definition for 'CustomUserSocialAuth.user' or 'UserSocialAuth.user'.\n```\n\nI believe that if I use a different related name it will pass the initial check, but maybe the reverse relationship is used by PSA down the road.\n\nIs there a better alternative to use a custom User model?\n\nWhat I wanted to solve by creating a custom user is simply to override the `create_user` method. Maybe I don't need a custom UserSocialAuth model.\n\nThoughts?\n. One alternative that just occurred to me is instead of a custom storage, I can modify the `social.pipepline.user.create_user` function (https://github.com/omab/python-social-auth/blob/master/social%2Fpipeline%2Fuser.py#L58) to do the creation my own way.\n\nMight work, but I still feel like this isn't the right place to do it.\n. ",
    "webjunkie": "I think this is similar to #416 \n. The Shopify backend is broken for me as well. Looking at the code, `self.data` is never populated, so the Shopify client has no way to tell which store I have. I solved this by adding a `SOCIAL_AUTH_SHOPIFY_SHOP` setting. There also appears an error later where it is looking for a dict which isn't there. Should I submit a PR?\n. Mhm, well, `SOCIAL_AUTH_SHOPIFY_SHOP` does not make sense if you want any random shop to sign in, of course.\n\nI now figured out that it works by going to `/login/shopify/?shop=testshop`. Is this documented somewhere?\n. I have the same problem. I do `do_auth` manually and cannot figure out where extra_data should get populated. The solution from @wamberg works for the moment though...\n. Also fixed by #813 \n. Also dupe of #755 \n. I had the same problem, but now I don't... and the redirect does seem to use Django's shortcut that also resolves URLs: 0220ae249f0243ab056ef927c964d80de278243e\n\nCan you point to where it does not resolve for you?\n. Today I ran into the issue again. The problem is when PSA pulls the non-resolved URLs from the settings, they don't appear as valid URLs and are thus not taken into account when redirecting e.g. a new user. I'm going to do a pull request.\n. For the provider I'm implementing I now made it so that every time it gets an access token, the `expires_in` (from the response) is stored in seconds, and right away `expires` is calculated as timestamp and also stored in `extra_data`. I could extend this and provide a pull request so that the base class always stores it that way for all providers, unless the values are somehow already set.\n\nAs far as I can see, that would not affect current workings, because the library already checks if the value in `expires` is a timestamp or a number of seconds. It would furthermore bring it closer to the OAuth2 standard, where `expires_in` is defined (as seconds) whereas this library only relies on `expires` (with mixed content).\n. I cannot check if it is still 100% active, that's right. But what I can do, and this is important for tokens with short expiration times, is checking whether it is expired or not. If they expire quickly and I can just check that, it doesn't make sense always trying to do a request.\n. I don't see the point yet. If you have multiple Wordpress \"providers\" (and Wordpress isn't even a supported backend currently) you would use a custom subclass for each of these, giving it a different name. So there would be no clashes, right?\n\nAs I see it, a provider/backend is not so much a \"provider type\" but really a single provider.\n. You can already just use `SOCIAL_AUTH_PIPELINE` and it should work...\n. @paulsoh You did not get me right. There is no use for this PR as the default is already `SOCIAL_AUTH_PIPELINE`. The `self.setting()` method in the same lines that you want to be changed automatically prefixes everything with `SOCIAL_AUTH_` and at least for me, I just use `SOCIAL_AUTH_WHATEVER` in my settings and it works without conflicts.\n. @clintonb Sorry I did not clarify this. I'm just -1 on putting another dependency in this project. It might introduce other problems and looking at it, it wasn't updated all year and has \"Django 1.8 support\" as a feature. Just my two cents.\n. Yes, that's what this library will do. You can associate any number of OAuth identities to a user account, including multiple identities from the same provider. But as @moorchegue said, the user has to be logged out, otherwise the provider will not authenticate the right user of course.\n. Might be a duplicate of my pull request and also be fixed by that: #905 \n. I think this is similar to #416 \n. The Shopify backend is broken for me as well. Looking at the code, `self.data` is never populated, so the Shopify client has no way to tell which store I have. I solved this by adding a `SOCIAL_AUTH_SHOPIFY_SHOP` setting. There also appears an error later where it is looking for a dict which isn't there. Should I submit a PR?\n. Mhm, well, `SOCIAL_AUTH_SHOPIFY_SHOP` does not make sense if you want any random shop to sign in, of course.\n\nI now figured out that it works by going to `/login/shopify/?shop=testshop`. Is this documented somewhere?\n. I have the same problem. I do `do_auth` manually and cannot figure out where extra_data should get populated. The solution from @wamberg works for the moment though...\n. Also fixed by #813 \n. Also dupe of #755 \n. I had the same problem, but now I don't... and the redirect does seem to use Django's shortcut that also resolves URLs: 0220ae249f0243ab056ef927c964d80de278243e\n\nCan you point to where it does not resolve for you?\n. Today I ran into the issue again. The problem is when PSA pulls the non-resolved URLs from the settings, they don't appear as valid URLs and are thus not taken into account when redirecting e.g. a new user. I'm going to do a pull request.\n. For the provider I'm implementing I now made it so that every time it gets an access token, the `expires_in` (from the response) is stored in seconds, and right away `expires` is calculated as timestamp and also stored in `extra_data`. I could extend this and provide a pull request so that the base class always stores it that way for all providers, unless the values are somehow already set.\n\nAs far as I can see, that would not affect current workings, because the library already checks if the value in `expires` is a timestamp or a number of seconds. It would furthermore bring it closer to the OAuth2 standard, where `expires_in` is defined (as seconds) whereas this library only relies on `expires` (with mixed content).\n. I cannot check if it is still 100% active, that's right. But what I can do, and this is important for tokens with short expiration times, is checking whether it is expired or not. If they expire quickly and I can just check that, it doesn't make sense always trying to do a request.\n. I don't see the point yet. If you have multiple Wordpress \"providers\" (and Wordpress isn't even a supported backend currently) you would use a custom subclass for each of these, giving it a different name. So there would be no clashes, right?\n\nAs I see it, a provider/backend is not so much a \"provider type\" but really a single provider.\n. You can already just use `SOCIAL_AUTH_PIPELINE` and it should work...\n. @paulsoh You did not get me right. There is no use for this PR as the default is already `SOCIAL_AUTH_PIPELINE`. The `self.setting()` method in the same lines that you want to be changed automatically prefixes everything with `SOCIAL_AUTH_` and at least for me, I just use `SOCIAL_AUTH_WHATEVER` in my settings and it works without conflicts.\n. @clintonb Sorry I did not clarify this. I'm just -1 on putting another dependency in this project. It might introduce other problems and looking at it, it wasn't updated all year and has \"Django 1.8 support\" as a feature. Just my two cents.\n. Yes, that's what this library will do. You can associate any number of OAuth identities to a user account, including multiple identities from the same provider. But as @moorchegue said, the user has to be logged out, otherwise the provider will not authenticate the right user of course.\n. Might be a duplicate of my pull request and also be fixed by that: #905 \n. ",
    "duoduo369": "I try these config, It's not work\n\n```\nSOCIAL_AUTH_SANITIZE_REDIRECTS = False \nLOGIN_REDIRECT_URL = 'http://llovebaimuda.herokuapp.com/' \nSOCIAL_AUTH_LOGIN_REDIRECT_URL = 'http://llovebaimuda.herokuapp.com/' \nSOCIAL_AUTH_WEIBO_LOGIN_REDIRECT_URL = 'http://llovebaimuda.herokuapp.com/'\n```\n. Amazing! I realy don't know oauth can use hosts file to debug, before this I publish my code online, then test oauth. Brillante idea.\nThanks.\n. I found a bug, closed this pr.\n. I try these config, It's not work\n\n```\nSOCIAL_AUTH_SANITIZE_REDIRECTS = False \nLOGIN_REDIRECT_URL = 'http://llovebaimuda.herokuapp.com/' \nSOCIAL_AUTH_LOGIN_REDIRECT_URL = 'http://llovebaimuda.herokuapp.com/' \nSOCIAL_AUTH_WEIBO_LOGIN_REDIRECT_URL = 'http://llovebaimuda.herokuapp.com/'\n```\n. Amazing! I realy don't know oauth can use hosts file to debug, before this I publish my code online, then test oauth. Brillante idea.\nThanks.\n. I found a bug, closed this pr.\n. ",
    "guruganesh26": "Still the same problem :)\n. Still the same problem :)\n. ",
    "ksavenkov": "Confirmed, I have the same problem (cookies cleaned).\n. For me, it is fixed after applying changes proposed in https://github.com/omab/python-social-auth/issues/445\n. I was a little bit too optimistic. With this fix, the authorisation is successfully started, I got redirected to the twitter connect page, but after clicking \"Sign In\" I have 500 described in #487. If after experiencing that \"Wrong state\" error I repeat the auth attempt, then the backend gets an unauthorised token from cookies and that results in exactly the same behaviour described above.\n. Seemingly, the problem is that session_get returns the following value in my case: \n\"[u'oauth_token=uN14aAyXi42bqOHfs6ttlpTir7Gk6WBD&oauth_token_secret=KyO0jgFdUUboOPvTSP5ddTqi9wwEq3aA&oauth_callback_confirmed=true']\". That is, insted of being a single-element array it's an string representation of the array,\nwhich has a type <type 'str'>, whilst [token] has type <type 'list'>.\n. And the source of the problem is in session_set function: it receives value as a list of a single unicode string: \n\nvalue = [u'foo'] \n\nand then sets the cookie as str(value), which is \"[u'foo']\".\n\nWhen session_get is invoked, it reads the cookie as a string \"[u'foo']\", while expecting to receive a list ['foo'].\n. Confirmed, I have the same problem (cookies cleaned).\n. For me, it is fixed after applying changes proposed in https://github.com/omab/python-social-auth/issues/445\n. I was a little bit too optimistic. With this fix, the authorisation is successfully started, I got redirected to the twitter connect page, but after clicking \"Sign In\" I have 500 described in #487. If after experiencing that \"Wrong state\" error I repeat the auth attempt, then the backend gets an unauthorised token from cookies and that results in exactly the same behaviour described above.\n. Seemingly, the problem is that session_get returns the following value in my case: \n\"[u'oauth_token=uN14aAyXi42bqOHfs6ttlpTir7Gk6WBD&oauth_token_secret=KyO0jgFdUUboOPvTSP5ddTqi9wwEq3aA&oauth_callback_confirmed=true']\". That is, insted of being a single-element array it's an string representation of the array,\nwhich has a type <type 'str'>, whilst [token] has type <type 'list'>.\n. And the source of the problem is in session_set function: it receives value as a list of a single unicode string: \n\nvalue = [u'foo'] \n\nand then sets the cookie as str(value), which is \"[u'foo']\".\n\nWhen session_get is invoked, it reads the cookie as a string \"[u'foo']\", while expecting to receive a list ['foo'].\n. ",
    "slavugan": "my fault, it was missed comma\n. my fault, it was missed comma\n. ",
    "eyscode": "Hi, what happen with this commit?, I see the change in the master branch, but not in the latest v0.1.26 on pip (neither in v0.1.24, 0.1.25) Anyone know anything about it? @omab @gameguy43 \n\nAt the moment, when using google-plus backend, the sessionid expires in 1 hour, unless the SOCIAL_AUTH_SESSION_EXPIRATION is False. @omab @gameguy43 \n. Thanks for the prompt reply.\n. Cool (:\n. Hi, what happen with this commit?, I see the change in the master branch, but not in the latest v0.1.26 on pip (neither in v0.1.24, 0.1.25) Anyone know anything about it? @omab @gameguy43 \n\nAt the moment, when using google-plus backend, the sessionid expires in 1 hour, unless the SOCIAL_AUTH_SESSION_EXPIRATION is False. @omab @gameguy43 \n. Thanks for the prompt reply.\n. Cool (:\n. ",
    "wadewilliams": "fwiw, \n\n```\n# Get the information we can about the user.\n'social.pipeline.social_auth.social_details',\n\n# Get the social uid from whichever service we're authing thru\n'social.pipeline.social_auth.social_uid',\n\n# Some sort of authorization that has nothing to do with whether or not the user granted permissions or not\n'social.pipeline.social_auth.auth_allowed',\n\n# Checking the usersocialauth table for pre-existing connections\n'social.pipeline.social_auth.social_user',\n\n# Make up a username for this person\n'social.pipeline.user.get_username',\n\n# 'social.pipeline.mail.mail_validation',\n\n# Checking against user table for email if we don't have them yet\n'social.pipeline.social_auth.associate_by_email',\n\n# Create a user if we haven't found one yet\n'social.pipeline.user.create_user',\n\n# Create the socialauth connection record for this user.\n'social.pipeline.social_auth.associate_user',\n\n\n'social.pipeline.social_auth.load_extra_data',\n'authentication.services.authentication.socialSendActivationEmail',\n\n# Update the user record with any changed info from social.\n'social.pipeline.user.user_details',\n```\n\nThat might not be 100% correct but its atleast my understanding of it at this point. \n. its not 100% of the time, unfortunately I can't figure out how to reproduce it, but we've got 50 occurrences over the last 5 days\n. Whats weird is all of the rest of the data is coming across, I'm not sure how or why the email would come across as blank. It's being included as a field so that's interesting. I'm not super familiar with your package's internals as far as how this handoff goes from the pipeline / backend to create user. I'm not sure where the best place would be to mitigate this if it is something on Facebook's side, but it seems that data is coming from Facebook just fine in this case ? Happy to open a pull req to help but not sure exactly what to do at this point. \n. Asking for an email is a security hazard, I was able to hijack an account if I entered a registered user's email. The pkg is happy to update that persons social auth so I can regain access in the future if we use the simple enter your presumably valid email address fix. We wrote a pipeline service that will defer to real log/registration in this case. Let us know if u want a pull request to handle this edge case.\n. fwiw, \n\n```\n# Get the information we can about the user.\n'social.pipeline.social_auth.social_details',\n\n# Get the social uid from whichever service we're authing thru\n'social.pipeline.social_auth.social_uid',\n\n# Some sort of authorization that has nothing to do with whether or not the user granted permissions or not\n'social.pipeline.social_auth.auth_allowed',\n\n# Checking the usersocialauth table for pre-existing connections\n'social.pipeline.social_auth.social_user',\n\n# Make up a username for this person\n'social.pipeline.user.get_username',\n\n# 'social.pipeline.mail.mail_validation',\n\n# Checking against user table for email if we don't have them yet\n'social.pipeline.social_auth.associate_by_email',\n\n# Create a user if we haven't found one yet\n'social.pipeline.user.create_user',\n\n# Create the socialauth connection record for this user.\n'social.pipeline.social_auth.associate_user',\n\n\n'social.pipeline.social_auth.load_extra_data',\n'authentication.services.authentication.socialSendActivationEmail',\n\n# Update the user record with any changed info from social.\n'social.pipeline.user.user_details',\n```\n\nThat might not be 100% correct but its atleast my understanding of it at this point. \n. its not 100% of the time, unfortunately I can't figure out how to reproduce it, but we've got 50 occurrences over the last 5 days\n. Whats weird is all of the rest of the data is coming across, I'm not sure how or why the email would come across as blank. It's being included as a field so that's interesting. I'm not super familiar with your package's internals as far as how this handoff goes from the pipeline / backend to create user. I'm not sure where the best place would be to mitigate this if it is something on Facebook's side, but it seems that data is coming from Facebook just fine in this case ? Happy to open a pull req to help but not sure exactly what to do at this point. \n. Asking for an email is a security hazard, I was able to hijack an account if I entered a registered user's email. The pkg is happy to update that persons social auth so I can regain access in the future if we use the simple enter your presumably valid email address fix. We wrote a pipeline service that will defer to real log/registration in this case. Let us know if u want a pull request to handle this edge case.\n. ",
    "rca": "I had to clear session cookies for Google auth to work again.  Still figuring out Facebook ...\n. Same resolution for Facebook.  Clear out all FB session cookies and auth started working again.\n\nMy immediate issue is resolved, however I'm going to leave this open for a bit to see if there is any input from the core devs on whether it's possible that social auth somehow tainted the session.  Is this something that could happen to an actual user in production?\n\nThanks!\n. I had to clear session cookies for Google auth to work again.  Still figuring out Facebook ...\n. Same resolution for Facebook.  Clear out all FB session cookies and auth started working again.\n\nMy immediate issue is resolved, however I'm going to leave this open for a bit to see if there is any input from the core devs on whether it's possible that social auth somehow tainted the session.  Is this something that could happen to an actual user in production?\n\nThanks!\n. ",
    "Appdevs-Moonlight": "+1 on this. I got the same exception sporadically for Linkedin OAuth2 backend. However, I can see the 'state\" querystring was sent back from Linkedin server. Here is the log details:\n\nException: <class 'social.exceptions.AuthStateMissing'>. \nDetail: Session value state missing.. \nUserId: Anonymous User. \nRequestUrl: www.securefer.com/complete/linkedin-oauth2/?code=AQT2WzYIie_EOsknru5bYY0OXxzLh0zaamLGi7vEvKnUTt89lLr5LT7n_-E_j42_oncXsO6-yoFs5q_dZwhg7E0nC1sIcjw_5blHRRR3t1AnZA-F238&state=wzM1cXZNYl6zK9TuGwDHVnOWapzA0pGK. \nRequestGet: <QueryDict: {u'state': [u'wzM1cXZNYl6zK9TuGwDHVnOWapzA0pGK'], u'code': [u'AQT2WzYIie_EOsknru5bYY0OXxzLh0zaamLGi7vEvKnUTt89lLr5LT7n_-E_j42_oncXsO6-yoFs5q_dZwhg7E0nC1sIcjw_5blHRRR3t1AnZA-F238']}>. \nRequestPost: <QueryDict: {}>. \nCallstack:\nTraceback (most recent call last):\nFile \"/home/ubuntu/virtualenvs/env/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 112, in get_response\nresponse = wrapped_callback(request, _callback_args, *_callback_kwargs)\nFile \"/home/ubuntu/virtualenvs/env/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 57, in wrapped_view\nreturn view_func(_args, *_kwargs)\nFile \"/home/ubuntu/virtualenvs/env/local/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 45, in wrapper\nreturn func(request, backend, _args, *_kwargs)\nFile \"/home/ubuntu/virtualenvs/env/local/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 21, in complete\nredirect_name=REDIRECT_FIELD_NAME, _args, *_kwargs)\nFile \"/home/ubuntu/virtualenvs/env/local/lib/python2.7/site-packages/social/actions.py\", line 44, in do_complete\n_args, *_kwargs)\nFile \"/home/ubuntu/virtualenvs/env/local/lib/python2.7/site-packages/social/strategies/base.py\", line 71, in complete\nreturn self.backend.auth_complete(_args, *_kwargs)\nFile \"/home/ubuntu/virtualenvs/env/local/lib/python2.7/site-packages/social/backends/oauth.py\", line 345, in auth_complete\ndata=self.auth_complete_params(self.validate_state()),\nFile \"/home/ubuntu/virtualenvs/env/local/lib/python2.7/site-packages/social/backends/oauth.py\", line 307, in validate_state\nraise AuthStateMissing(self, 'state')\nAuthStateMissing: Session value state missing.\n. +1 on this. I got the same exception sporadically for Linkedin OAuth2 backend. However, I can see the 'state\" querystring was sent back from Linkedin server. Here is the log details:\n\nException: <class 'social.exceptions.AuthStateMissing'>. \nDetail: Session value state missing.. \nUserId: Anonymous User. \nRequestUrl: www.securefer.com/complete/linkedin-oauth2/?code=AQT2WzYIie_EOsknru5bYY0OXxzLh0zaamLGi7vEvKnUTt89lLr5LT7n_-E_j42_oncXsO6-yoFs5q_dZwhg7E0nC1sIcjw_5blHRRR3t1AnZA-F238&state=wzM1cXZNYl6zK9TuGwDHVnOWapzA0pGK. \nRequestGet: <QueryDict: {u'state': [u'wzM1cXZNYl6zK9TuGwDHVnOWapzA0pGK'], u'code': [u'AQT2WzYIie_EOsknru5bYY0OXxzLh0zaamLGi7vEvKnUTt89lLr5LT7n_-E_j42_oncXsO6-yoFs5q_dZwhg7E0nC1sIcjw_5blHRRR3t1AnZA-F238']}>. \nRequestPost: <QueryDict: {}>. \nCallstack:\nTraceback (most recent call last):\nFile \"/home/ubuntu/virtualenvs/env/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 112, in get_response\nresponse = wrapped_callback(request, _callback_args, *_callback_kwargs)\nFile \"/home/ubuntu/virtualenvs/env/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 57, in wrapped_view\nreturn view_func(_args, *_kwargs)\nFile \"/home/ubuntu/virtualenvs/env/local/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 45, in wrapper\nreturn func(request, backend, _args, *_kwargs)\nFile \"/home/ubuntu/virtualenvs/env/local/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 21, in complete\nredirect_name=REDIRECT_FIELD_NAME, _args, *_kwargs)\nFile \"/home/ubuntu/virtualenvs/env/local/lib/python2.7/site-packages/social/actions.py\", line 44, in do_complete\n_args, *_kwargs)\nFile \"/home/ubuntu/virtualenvs/env/local/lib/python2.7/site-packages/social/strategies/base.py\", line 71, in complete\nreturn self.backend.auth_complete(_args, *_kwargs)\nFile \"/home/ubuntu/virtualenvs/env/local/lib/python2.7/site-packages/social/backends/oauth.py\", line 345, in auth_complete\ndata=self.auth_complete_params(self.validate_state()),\nFile \"/home/ubuntu/virtualenvs/env/local/lib/python2.7/site-packages/social/backends/oauth.py\", line 307, in validate_state\nraise AuthStateMissing(self, 'state')\nAuthStateMissing: Session value state missing.\n. ",
    "abhimskywalker": "+1 \nWe have been getting the same error for LinkedIn sporadically as well. It's not predictable. It seems somewhere the session information is lost/modified, but we haven't been able to replicate the errors as well.\n\nJust wanted to ask if it makes sense to build a small snippet to maybe restart the whole request response cycle in this case once more for this failure? I haven't as yet looked into the code fully in detail if this is possible or not, but hypothesis is that is the failure is a random event (specifically if the exception is `AuthStateMissing`) then when we encounter this let's just try to restart the whole process of auth request cycle. \nThis essentially means that we are just trying to maximise our chances of getting a proper response (hopefully this random event will not repeat twice in a row). Let me know what do you guys think? \nMight try to test this out sometime soon, but have no clear way to reproduce this error as yet to test if this will work or not.\n. +1 \nWe have been getting the same error for LinkedIn sporadically as well. It's not predictable. It seems somewhere the session information is lost/modified, but we haven't been able to replicate the errors as well.\n\nJust wanted to ask if it makes sense to build a small snippet to maybe restart the whole request response cycle in this case once more for this failure? I haven't as yet looked into the code fully in detail if this is possible or not, but hypothesis is that is the failure is a random event (specifically if the exception is `AuthStateMissing`) then when we encounter this let's just try to restart the whole process of auth request cycle. \nThis essentially means that we are just trying to maximise our chances of getting a proper response (hopefully this random event will not repeat twice in a row). Let me know what do you guys think? \nMight try to test this out sometime soon, but have no clear way to reproduce this error as yet to test if this will work or not.\n. ",
    "pgcd": "i'm not sure if this is actually the same issue but I'm getting the error frequently (1/hour) and in my case it's apparently due to the user cancelling the request: this is what the query_dict looks like:\n\n```\n{u'state': [u'fsA5LYcwGuZaomUEsRJEi4g9iPavXtie'], u'error_description': [u'the user denied your request'], u'error': [u'access_denied']}\n```\n\nUPDATE:\nI can confirm that this happens every time a user denies the authorization - 100% repeatable.\n. i'm not sure if this is actually the same issue but I'm getting the error frequently (1/hour) and in my case it's apparently due to the user cancelling the request: this is what the query_dict looks like:\n\n```\n{u'state': [u'fsA5LYcwGuZaomUEsRJEi4g9iPavXtie'], u'error_description': [u'the user denied your request'], u'error': [u'access_denied']}\n```\n\nUPDATE:\nI can confirm that this happens every time a user denies the authorization - 100% repeatable.\n. ",
    "liuminghao1": "+1  I am also\n. +1  I am also\n. ",
    "inakrin": "Same here. \n. Same here. \n. ",
    "jlafon": "Thanks!\n. Thanks!\n. ",
    "lewang0418": "I was using psa from source and I should use pip to install it.\n. I was using psa from source and I should use pip to install it.\n. ",
    "dhamaniasad": "@rosscdh is this what you're referring to? https://gist.github.com/dhamaniasad/3bb378b3947eac90f783. If so, then yes. \n. @rosscdh is this what you're referring to? https://gist.github.com/dhamaniasad/3bb378b3947eac90f783. If so, then yes. \n. ",
    "jprobst21": "take a look at this  https://developers.facebook.com/bugs/298946933534016\nI guess Facebook users can have unvalidated email addresses\n. take a look at this  https://developers.facebook.com/bugs/298946933534016\nI guess Facebook users can have unvalidated email addresses\n. ",
    "harshmaur": "Dont you think this could happen when a user registers with a phone number on facebook instead of an email id. \n. Thanks!\n. Dont you think this could happen when a user registers with a phone number on facebook instead of an email id. \n. Thanks!\n. ",
    "jaitaiwan": "@Jefffrey it might be that the URL should be /login/facebook-app-oauth2\n\nAlso make sure that you're posting to that url as well.\n. @corpulent please see here: http://python-social-auth.readthedocs.org/en/latest/configuration/settings.html#urls-options\n\nHere's an example of my settings.py:\n\n```\nSOCIAL_AUTH_NEW_USER_REDIRECT_URL = '/login/social/newuser/'\nSOCIAL_AUTH_LOGIN_URL = '/login/social/'\nSOCIAL_AUTH_LOGIN_ERROR_URL = '/login/social/error/'\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = '/profile/'\nSOCIAL_AUTH_NEW_ASSOCIATION_REDIRECT_URL = '/profile/social/connect/'\nSOCIAL_AUTH_DISCONNECT_REDIRECT_URL = '/profile/social/disconnect/'\nSOCIAL_AUTH_INACTIVE_USER_URL = '/login/social/inactive/'\n```\n\nIf you're using Django, I think from memory the prefix may be different.\n. I'm not sure what kind of configuration you're using but I believe that `SOCIAL_AUTH_AUTHENTICATION_BACKENDS` needs to be a dict. More so I've had issues where there needs to be two backends listed for it to work. Let me know if that helps\n. Sorry, are you able to reword that at all? It didn't make a lot of sense to\nme.\n\nKind Regards,\n\nDaniel J Holmes\n\nOn Sun, Oct 26, 2014 at 5:22 AM, Qier LU notifications@github.com wrote:\n\n> @jaitaiwan https://github.com/jaitaiwan where did you find the type of\n> SOCIAL_AUTH_AUTHENTICATION_BACKENDS? But there's an example which type is a\n> tuple in the doc:\n> http://python-social-auth.readthedocs.org/en/latest/configuration/settings.html#authentication-backends\n> . While ini configuration file only support string value, Pyramid app\n> should convert it to list type, on which pyramid.settings.aslist is used.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/issues/391#issuecomment-60494361\n> .\n. Ahhh, I finally got what you're saying! Could you use pastebin or gist and\nshow me an example of your ini config and also where you add those settings\ninto your application?\n\nKind Regards,\n\nDaniel J Holmes\n\nOn Mon, Oct 27, 2014 at 5:09 PM, Qier LU notifications@github.com wrote:\n\n> @jaitaiwan https://github.com/jaitaiwan Sorry for my poor English. I\n> mean SOCIAL_AUTH_AUTHENTICATION_BACKENDS is a tuple according to\n> http://python-social-auth.readthedocs.org/en/latest/configuration/settings.html#authentication-backends\n> .\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/issues/391#issuecomment-60556634\n> .\n. @lvqier configuration is loaded by whatever framework you're using... That looks like ini style configuration to me. Is your request to support ini configuration of PSA?\n. @Matusko not sure what you're exactly asking here...\n\nI don't think I understand you correctly, but isn't this `user = backend.do_auth(request.GET.get('access_token'))` the part of the example that you need?\n\nIt seems like you've already got the request as part of your function definition.\n. @bettsmatt I think we may have been chatting about this on IRC? If not someone else was having a similar issue. It might be because the migration pattern is specifically for Django 1.7\n. @omab with this request, I'm assuming two things:\n1. Migration example provided in the repo is for Django 1.7 and not for South Migrations being external from Django in versions less than 1.7?\n2. You're not will to release a patch for versions less than 1.7\n\nIf that's the case then I can make a pull request to the repo to add a note of what the example is specifically supporting which will fix people making issues and asking for help in IRC.\n. Can you confirm that tokens you've got in your settings are correct?\n. Closing this issues as #407 merged\n. @Jefffrey it might be that the URL should be /login/facebook-app-oauth2\n\nAlso make sure that you're posting to that url as well.\n. @corpulent please see here: http://python-social-auth.readthedocs.org/en/latest/configuration/settings.html#urls-options\n\nHere's an example of my settings.py:\n\n```\nSOCIAL_AUTH_NEW_USER_REDIRECT_URL = '/login/social/newuser/'\nSOCIAL_AUTH_LOGIN_URL = '/login/social/'\nSOCIAL_AUTH_LOGIN_ERROR_URL = '/login/social/error/'\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = '/profile/'\nSOCIAL_AUTH_NEW_ASSOCIATION_REDIRECT_URL = '/profile/social/connect/'\nSOCIAL_AUTH_DISCONNECT_REDIRECT_URL = '/profile/social/disconnect/'\nSOCIAL_AUTH_INACTIVE_USER_URL = '/login/social/inactive/'\n```\n\nIf you're using Django, I think from memory the prefix may be different.\n. I'm not sure what kind of configuration you're using but I believe that `SOCIAL_AUTH_AUTHENTICATION_BACKENDS` needs to be a dict. More so I've had issues where there needs to be two backends listed for it to work. Let me know if that helps\n. Sorry, are you able to reword that at all? It didn't make a lot of sense to\nme.\n\nKind Regards,\n\nDaniel J Holmes\n\nOn Sun, Oct 26, 2014 at 5:22 AM, Qier LU notifications@github.com wrote:\n\n> @jaitaiwan https://github.com/jaitaiwan where did you find the type of\n> SOCIAL_AUTH_AUTHENTICATION_BACKENDS? But there's an example which type is a\n> tuple in the doc:\n> http://python-social-auth.readthedocs.org/en/latest/configuration/settings.html#authentication-backends\n> . While ini configuration file only support string value, Pyramid app\n> should convert it to list type, on which pyramid.settings.aslist is used.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/issues/391#issuecomment-60494361\n> .\n. Ahhh, I finally got what you're saying! Could you use pastebin or gist and\nshow me an example of your ini config and also where you add those settings\ninto your application?\n\nKind Regards,\n\nDaniel J Holmes\n\nOn Mon, Oct 27, 2014 at 5:09 PM, Qier LU notifications@github.com wrote:\n\n> @jaitaiwan https://github.com/jaitaiwan Sorry for my poor English. I\n> mean SOCIAL_AUTH_AUTHENTICATION_BACKENDS is a tuple according to\n> http://python-social-auth.readthedocs.org/en/latest/configuration/settings.html#authentication-backends\n> .\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/issues/391#issuecomment-60556634\n> .\n. @lvqier configuration is loaded by whatever framework you're using... That looks like ini style configuration to me. Is your request to support ini configuration of PSA?\n. @Matusko not sure what you're exactly asking here...\n\nI don't think I understand you correctly, but isn't this `user = backend.do_auth(request.GET.get('access_token'))` the part of the example that you need?\n\nIt seems like you've already got the request as part of your function definition.\n. @bettsmatt I think we may have been chatting about this on IRC? If not someone else was having a similar issue. It might be because the migration pattern is specifically for Django 1.7\n. @omab with this request, I'm assuming two things:\n1. Migration example provided in the repo is for Django 1.7 and not for South Migrations being external from Django in versions less than 1.7?\n2. You're not will to release a patch for versions less than 1.7\n\nIf that's the case then I can make a pull request to the repo to add a note of what the example is specifically supporting which will fix people making issues and asking for help in IRC.\n. Can you confirm that tokens you've got in your settings are correct?\n. Closing this issues as #407 merged\n. ",
    "bustinstuff": "+1\n. +1\n. ",
    "c475": "Yep, it works. Thank you.\n. Yep, it works. Thank you.\n. ",
    "jacobg": "Thanks. SAML has recently become a leading technology in SSO particularly in corporate.\n. As a general mission for this project, do you think it would be worthwhile to incorporate the corporate login providers such as OneLogin and Okta into python-social-auth? I think the standard for corporate space is to use SAML, so perhaps integrating SAML would then give this project more corporate value.\n. Great, thanks so much @omab.\n. Thanks. SAML has recently become a leading technology in SSO particularly in corporate.\n. As a general mission for this project, do you think it would be worthwhile to incorporate the corporate login providers such as OneLogin and Okta into python-social-auth? I think the standard for corporate space is to use SAML, so perhaps integrating SAML would then give this project more corporate value.\n. Great, thanks so much @omab.\n. ",
    "pitbulk": "Other python library:  https://github.com/onelogin/python-saml\n. @omab @bradenmacdonald I'm working on a python3 version of the python-saml (forked by bgaifullin). https://github.com/pitbulk/python3-saml\n. Yes, I plan to publish it soon, now is in testing phase. Feedback welcome ;)\n. @omab, @bradenmacdonald sorry for the delay. I will do a new release of the python-saml today.\n. There is a new release with security improvements [2.2.0](https://github.com/onelogin/python-saml/releases/tag/v2.2.0).\n\nI highly recommended to use it instead previous versions.\n. Other python library:  https://github.com/onelogin/python-saml\n. @omab @bradenmacdonald I'm working on a python3 version of the python-saml (forked by bgaifullin). https://github.com/pitbulk/python3-saml\n. Yes, I plan to publish it soon, now is in testing phase. Feedback welcome ;)\n. @omab, @bradenmacdonald sorry for the delay. I will do a new release of the python-saml today.\n. There is a new release with security improvements [2.2.0](https://github.com/onelogin/python-saml/releases/tag/v2.2.0).\n\nI highly recommended to use it instead previous versions.\n. ",
    "bradenmacdonald": "@omab I am likely going to be implementing a python-social-auth SAML backend in the near future as part of bringing Shibboleth support to the software I work on (edX). It will depend on python-saml (linked two comments up), which in turn has a few other requirements and is only compatible with Python 2.7. Would you be willing to include that backend in python-social-auth, given the extra requirements and lack of Python 3 support? We'd love to contribute it so others can use it, if possible.\n. @pitbulk Glad to hear that; I wasn't sure of the status of that fork and if it was going to be made \"official\" at some point.\n. @ashchristopher I have already more or less finished an implementation: https://github.com/omab/python-social-auth/pull/616 . Just waiting for review and feedback. Check it out and I'd be curious to know if it works for your use case or not.\n. @vsobolmaven Those should be quite simple to implement - I recommend you implement that yourself and open a pull request here to contribute it to the project.\n. @omab, just wondering if you'll be able to look at this soon?\n. Awesome, thanks for the review, @omab. I have added some documentation now - sorry for not including that originally. I'm not sure of the python-saml pull request status. I have pinged the guy who manages that repository to ask, but I haven't heard back yet.\n. Awesome, thanks! When the python-saml PRs get merged upstream, I'll open a new PR to use the vanilla upstream version.\n. @omab Would you mind releasing a versioned PyPi release now that this has merged? That way the edX project can require an official release rather than a development build in our project's next major release.\n. @omab I am likely going to be implementing a python-social-auth SAML backend in the near future as part of bringing Shibboleth support to the software I work on (edX). It will depend on python-saml (linked two comments up), which in turn has a few other requirements and is only compatible with Python 2.7. Would you be willing to include that backend in python-social-auth, given the extra requirements and lack of Python 3 support? We'd love to contribute it so others can use it, if possible.\n. @pitbulk Glad to hear that; I wasn't sure of the status of that fork and if it was going to be made \"official\" at some point.\n. @ashchristopher I have already more or less finished an implementation: https://github.com/omab/python-social-auth/pull/616 . Just waiting for review and feedback. Check it out and I'd be curious to know if it works for your use case or not.\n. @vsobolmaven Those should be quite simple to implement - I recommend you implement that yourself and open a pull request here to contribute it to the project.\n. @omab, just wondering if you'll be able to look at this soon?\n. Awesome, thanks for the review, @omab. I have added some documentation now - sorry for not including that originally. I'm not sure of the python-saml pull request status. I have pinged the guy who manages that repository to ask, but I haven't heard back yet.\n. Awesome, thanks! When the python-saml PRs get merged upstream, I'll open a new PR to use the vanilla upstream version.\n. @omab Would you mind releasing a versioned PyPi release now that this has merged? That way the edX project can require an official release rather than a development build in our project's next major release.\n. ",
    "ashchristopher": "@bradenmacdonald I am looking at creating a SAML backend for python-social-auth as well - would you be interested in collaborating?\n. Given that `GoogleOAuth2` and `GoogleOpenIdConnect` are two different backends that can be used independently, shouldn't `openid` only be necessarily applied to the `GoogleOpenIdConnect` backend? To use `GoogleOAuth2`, using the `openid` scope is definitely not required.\n\ncc: @dlanger\n. @bradenmacdonald I am looking at creating a SAML backend for python-social-auth as well - would you be interested in collaborating?\n. Given that `GoogleOAuth2` and `GoogleOpenIdConnect` are two different backends that can be used independently, shouldn't `openid` only be necessarily applied to the `GoogleOpenIdConnect` backend? To use `GoogleOAuth2`, using the `openid` scope is definitely not required.\n\ncc: @dlanger\n. ",
    "vsobolmaven": "Apparently a few of abstract methods are still not implement in pyramid_strategy.py to make saml work with pyramid. They are request_post(), request_get(), request_path(), request_is_secure(). Would be great to see this fixed. Thanks.\n. Same thing with pipeline configuration per backend - not possible with current implementation of authenticate() in social.backends.base\n. Apparently a few of abstract methods are still not implement in pyramid_strategy.py to make saml work with pyramid. They are request_post(), request_get(), request_path(), request_is_secure(). Would be great to see this fixed. Thanks.\n. Same thing with pipeline configuration per backend - not possible with current implementation of authenticate() in social.backends.base\n. ",
    "pdurbin": "I was wondering why @omab closed this issue but from reading https://github.com/omab/python-social-auth/issues/778#issuecomment-269242569 it sounds like SAML is supported these days. Sure enough, pull request #616 by @bradenmacdonald was merged a while back. Great! Thanks!. I was wondering why @omab closed this issue but from reading https://github.com/omab/python-social-auth/issues/778#issuecomment-269242569 it sounds like SAML is supported these days. Sure enough, pull request #616 by @bradenmacdonald was merged a while back. Great! Thanks!. ",
    "amilstead": "I've run into this issue during development as well. I'm planning on setting up a pull request soon, but in the interim, I've just patched their pyramid_app strategy in order to get things running.\n\nI've got a monkey patch for it that seems to get things up and running (see below). After you've applied the patch, make sure to change the function for your \"login_user\" the take the parameters `(backend, user, social_user)` (see [the example code](https://github.com/omab/python-social-auth/blob/master/examples/pyramid_example/example/auth.py))\n\nHere's the patch (call it at the top of your app/__init__.py file with all the config setup):\n\n```\nfrom functools import wraps\n\nfrom pyramid.httpexceptions import HTTPNotFound\nfrom social.strategies.utils import get_strategy\nfrom social.apps.pyramid_app import utils\n\n\ndef patch():\n\n    def load_strategy(request):\n        return get_strategy(\n            utils.get_helper('STRATEGY'),\n            utils.get_helper('STORAGE'),\n            request\n        )\n\n    utils.load_strategy = load_strategy\n\n    def psa(redirect_uri=None):\n        def decorator(func):\n            @wraps(func)\n            def wrapper(request, *args, **kwargs):\n                backend = request.matchdict.get('backend')\n                if not backend:\n                    return HTTPNotFound('Missing backend')\n\n                uri = redirect_uri\n                if uri and not uri.startswith('/'):\n                    uri = request.route_url(uri, backend=backend)\n\n                request.strategy = load_strategy(request)\n                request.backend = utils.load_backend(\n                    request.strategy,\n                    backend,\n                    uri\n                )\n                return func(request, *args, **kwargs)\n            return wrapper\n        return decorator\n    utils.psa = psa\n\n```\n. Another issue with their pyramid implementation seems to be that the storage engine they're using (sqlalchemy_orm) isn't flushing the ORM session after the commit, so the user_id never actually makes it into the request's session.\n. @omab I was experiencing some funniness with the model that was coming through inside login callback functions.\n\nSpecifically, I narrowed down that in this file: https://github.com/omab/python-social-auth/blob/master/social/storage/sqlalchemy_orm.py#L40 there should be a call to `cls._session().flush()` in order for the newly created ORM instance to have a DB generated primary key. \n\nUpon new users signing up/registering via the PSA system on a pyramid framework, a user object will be passed to the \"SOCIAL_AUTH_LOGIN_FUNCTION\" (defined in settings). That user, if the session it was created under had never been flushed, will end up with an id of `None` or possibly be `None` itself.\n\nYou can test this by using the example project https://github.com/omab/python-social-auth/blob/master/examples/pyramid_example/example in a simple dev environment to see what I'm talking about (one thing you'll have to change is the parameters to `login_user`, it should be: `def login_user(backend, user, social_user)`.\n. I've run into this issue during development as well. I'm planning on setting up a pull request soon, but in the interim, I've just patched their pyramid_app strategy in order to get things running.\n\nI've got a monkey patch for it that seems to get things up and running (see below). After you've applied the patch, make sure to change the function for your \"login_user\" the take the parameters `(backend, user, social_user)` (see [the example code](https://github.com/omab/python-social-auth/blob/master/examples/pyramid_example/example/auth.py))\n\nHere's the patch (call it at the top of your app/__init__.py file with all the config setup):\n\n```\nfrom functools import wraps\n\nfrom pyramid.httpexceptions import HTTPNotFound\nfrom social.strategies.utils import get_strategy\nfrom social.apps.pyramid_app import utils\n\n\ndef patch():\n\n    def load_strategy(request):\n        return get_strategy(\n            utils.get_helper('STRATEGY'),\n            utils.get_helper('STORAGE'),\n            request\n        )\n\n    utils.load_strategy = load_strategy\n\n    def psa(redirect_uri=None):\n        def decorator(func):\n            @wraps(func)\n            def wrapper(request, *args, **kwargs):\n                backend = request.matchdict.get('backend')\n                if not backend:\n                    return HTTPNotFound('Missing backend')\n\n                uri = redirect_uri\n                if uri and not uri.startswith('/'):\n                    uri = request.route_url(uri, backend=backend)\n\n                request.strategy = load_strategy(request)\n                request.backend = utils.load_backend(\n                    request.strategy,\n                    backend,\n                    uri\n                )\n                return func(request, *args, **kwargs)\n            return wrapper\n        return decorator\n    utils.psa = psa\n\n```\n. Another issue with their pyramid implementation seems to be that the storage engine they're using (sqlalchemy_orm) isn't flushing the ORM session after the commit, so the user_id never actually makes it into the request's session.\n. @omab I was experiencing some funniness with the model that was coming through inside login callback functions.\n\nSpecifically, I narrowed down that in this file: https://github.com/omab/python-social-auth/blob/master/social/storage/sqlalchemy_orm.py#L40 there should be a call to `cls._session().flush()` in order for the newly created ORM instance to have a DB generated primary key. \n\nUpon new users signing up/registering via the PSA system on a pyramid framework, a user object will be passed to the \"SOCIAL_AUTH_LOGIN_FUNCTION\" (defined in settings). That user, if the session it was created under had never been flushed, will end up with an id of `None` or possibly be `None` itself.\n\nYou can test this by using the example project https://github.com/omab/python-social-auth/blob/master/examples/pyramid_example/example in a simple dev environment to see what I'm talking about (one thing you'll have to change is the parameters to `login_user`, it should be: `def login_user(backend, user, social_user)`.\n. ",
    "lvqier": "Thanks @amilstead . It works after I did some thing like your patch.\n. @jaitaiwan where did you find the type of SOCIAL_AUTH_AUTHENTICATION_BACKENDS? But there's an example which type is a tuple in the doc: http://python-social-auth.readthedocs.org/en/latest/configuration/settings.html#authentication-backends . While ini configuration file only support string value, Pyramid app should convert it to list type, on which pyramid.settings.aslist is used.\n. @jaitaiwan Sorry for my poor English. I mean SOCIAL_AUTH_AUTHENTICATION_BACKENDS is a tuple according to http://python-social-auth.readthedocs.org/en/latest/configuration/settings.html#authentication-backends .\n. Hi @jaitaiwan sample code is pasted on gist: https://gist.github.com/lvqier/8f678902e66831afd175 . The first file is part of development.ini, it is read by Pyramid on start. The second file is part of python-social-auth/social/apps/pyramid_app/utils.py that loads SOCIAL_AUTH_AUTHENTICATION_BACKENDS. \nThe variable backends in the function load_backend is a str that returned by get_helper. But the first argument of get_backend should be a list, not str.\n. @jaitaiwan Yes! It is raised by pyramid_app.\n. Thanks @amilstead . It works after I did some thing like your patch.\n. @jaitaiwan where did you find the type of SOCIAL_AUTH_AUTHENTICATION_BACKENDS? But there's an example which type is a tuple in the doc: http://python-social-auth.readthedocs.org/en/latest/configuration/settings.html#authentication-backends . While ini configuration file only support string value, Pyramid app should convert it to list type, on which pyramid.settings.aslist is used.\n. @jaitaiwan Sorry for my poor English. I mean SOCIAL_AUTH_AUTHENTICATION_BACKENDS is a tuple according to http://python-social-auth.readthedocs.org/en/latest/configuration/settings.html#authentication-backends .\n. Hi @jaitaiwan sample code is pasted on gist: https://gist.github.com/lvqier/8f678902e66831afd175 . The first file is part of development.ini, it is read by Pyramid on start. The second file is part of python-social-auth/social/apps/pyramid_app/utils.py that loads SOCIAL_AUTH_AUTHENTICATION_BACKENDS. \nThe variable backends in the function load_backend is a str that returned by get_helper. But the first argument of get_backend should be a list, not str.\n. @jaitaiwan Yes! It is raised by pyramid_app.\n. ",
    "jeromelefeuvre": "+1 @amilstead \n\nWorking to integrate this on pyramid+sqlalchemy and have the same problem ;(\n. Hey @omab ,\n\nI just tested and it's failed. I try to create a test for that. To reproduce the test, start from a empty db (or remove users table) and try to login (I took twitter as example), Done page failed because request.user is none:\n\n```\n'NoneType' object has no attribute 'username'\n```\n. +1. You rocks !\n. My question is \"How to logout in pyramid ?\"\nI tried to remove `request.session['user_id']` but if I do that, it create new user each time I connect.\nFirst user is created with good username but on the second login, it create a second user with username 'jeromelefeuvreb378405578'\n. Hi @pcompassion,\n\nDisconnect is more \"forget me\". It remove a entry in the client app db which link your user just created with the server.\nLogout could be done easily by removing sessions.\n. +1 @amilstead \n\nWorking to integrate this on pyramid+sqlalchemy and have the same problem ;(\n. Hey @omab ,\n\nI just tested and it's failed. I try to create a test for that. To reproduce the test, start from a empty db (or remove users table) and try to login (I took twitter as example), Done page failed because request.user is none:\n\n```\n'NoneType' object has no attribute 'username'\n```\n. +1. You rocks !\n. My question is \"How to logout in pyramid ?\"\nI tried to remove `request.session['user_id']` but if I do that, it create new user each time I connect.\nFirst user is created with good username but on the second login, it create a second user with username 'jeromelefeuvreb378405578'\n. Hi @pcompassion,\n\nDisconnect is more \"forget me\". It remove a entry in the client app db which link your user just created with the server.\nLogout could be done easily by removing sessions.\n. ",
    "abourget": "woah, we're on Django 1.4.12 .. any chance in the world we can use version 0.2.1 ?\n. woah, we're on Django 1.4.12 .. any chance in the world we can use version 0.2.1 ?\n. ",
    "artolaluis": "I'm getting the same error. \n. I'm getting the same error. \n. ",
    "pythonshiva": "Me also getting same error.Yes my settings are correct\n\nMy error is:\n\n(https://cloud.githubusercontent.com/assets/9129593/4675235/569b9fd2-55f6-11e4-8121-28382b3bbf0d.jpg)\n. Me also getting same error.Yes my settings are correct\n\nMy error is:\n\n(https://cloud.githubusercontent.com/assets/9129593/4675235/569b9fd2-55f6-11e4-8121-28382b3bbf0d.jpg)\n. ",
    "chrismcginlay": "Did the SocialClient get dropped in the move from django-social-auth to python-social-auth:\nhttp://django-social-auth.readthedocs.org/en/latest/testing_tools.html\nI'm trying to figure out the best way to do functional testing with selenium for sequences of user operations that will require social sign ins. Wondered if something like SocialClient might have helped\n. Did the SocialClient get dropped in the move from django-social-auth to python-social-auth:\nhttp://django-social-auth.readthedocs.org/en/latest/testing_tools.html\nI'm trying to figure out the best way to do functional testing with selenium for sequences of user operations that will require social sign ins. Wondered if something like SocialClient might have helped\n. ",
    "glowka": "+1\n. +1\n. ",
    "kreativitea": "I'd very much like the SocialClient from django-social-auth back.  I'm doing integration testing with individual endpoints, and I'd like the auth rejected flow to be part of those tests.\n. I'd very much like the SocialClient from django-social-auth back.  I'm doing integration testing with individual endpoints, and I'd like the auth rejected flow to be part of those tests.\n. ",
    "lcardito": "+1\n. +1\n. ",
    "BraisGabin": "I mock the `user_data` function in the backends to test with different responses. An example to mock Facebook:\n\n``` python\nfrom social.backends import facebook\nfrom requests.exceptions import HTTPError\nfrom requests.models import Response\n\ndef get_facebook_info_mock(self, access_token, *args, **kwargs):\n    info = {\n        'user_1': {\n            'id': '00001',\n            'name': 'Foo Bar',\n            'email': 'foo@bar.com',\n        },\n        # ...\n    }\n    try:\n        return info[access_token]\n    except KeyError:\n        response = Response()\n        response.status_code = 400\n        raise HTTPError('Error', response=response)\n\n\nclass FacebookTestCase(APITestCase):\n    def setUp(self):\n        facebook.FacebookOAuth2.user_data = get_facebook_info_mock\n\n    # the tests\n```\n. I hope this can help @coriolinus\r\n\r\n```python\r\nfrom social.backends import facebook\r\nfrom requests.exceptions import HTTPError\r\nfrom requests.models import Response\r\nfrom rest_framework.test import APITestCase\r\n\r\ndef get_facebook_info_mock(self, access_token, *args, **kwargs):\r\n    info = {\r\n        'user_1': {\r\n            'id': '00001',\r\n            'name': 'Foo Bar',\r\n            'email': 'foo@bar.com',\r\n        },\r\n        # ...\r\n    }\r\n    try:\r\n        return info[access_token]\r\n    except KeyError:\r\n        response = Response()\r\n        response.status_code = 400\r\n        raise HTTPError('Error', response=response)\r\n\r\n\r\nclass FacebookTestCase(APITestCase):\r\n    def setUp(self):\r\n        facebook.FacebookOAuth2.user_data = get_facebook_info_mock\r\n\r\n    def testFacebook(self):\r\n       d = {'grant_type': 'convert_token', 'client_id': 'foo', 'client_secret': 'bar', 'backend': 'facebook', 'token': 'user_1'}\r\n        response = self.client.post('/oauth/convert-token/', d)\r\n        self.assertEqual(response.status_code, 200, response.data)\r\n        user = User.objects.all().latest('date_joined')\r\n        self.assertEqual(user.email, \"foo@bar.com\")\r\n```. I mock the `user_data` function in the backends to test with different responses. An example to mock Facebook:\n\n``` python\nfrom social.backends import facebook\nfrom requests.exceptions import HTTPError\nfrom requests.models import Response\n\ndef get_facebook_info_mock(self, access_token, *args, **kwargs):\n    info = {\n        'user_1': {\n            'id': '00001',\n            'name': 'Foo Bar',\n            'email': 'foo@bar.com',\n        },\n        # ...\n    }\n    try:\n        return info[access_token]\n    except KeyError:\n        response = Response()\n        response.status_code = 400\n        raise HTTPError('Error', response=response)\n\n\nclass FacebookTestCase(APITestCase):\n    def setUp(self):\n        facebook.FacebookOAuth2.user_data = get_facebook_info_mock\n\n    # the tests\n```\n. I hope this can help @coriolinus\r\n\r\n```python\r\nfrom social.backends import facebook\r\nfrom requests.exceptions import HTTPError\r\nfrom requests.models import Response\r\nfrom rest_framework.test import APITestCase\r\n\r\ndef get_facebook_info_mock(self, access_token, *args, **kwargs):\r\n    info = {\r\n        'user_1': {\r\n            'id': '00001',\r\n            'name': 'Foo Bar',\r\n            'email': 'foo@bar.com',\r\n        },\r\n        # ...\r\n    }\r\n    try:\r\n        return info[access_token]\r\n    except KeyError:\r\n        response = Response()\r\n        response.status_code = 400\r\n        raise HTTPError('Error', response=response)\r\n\r\n\r\nclass FacebookTestCase(APITestCase):\r\n    def setUp(self):\r\n        facebook.FacebookOAuth2.user_data = get_facebook_info_mock\r\n\r\n    def testFacebook(self):\r\n       d = {'grant_type': 'convert_token', 'client_id': 'foo', 'client_secret': 'bar', 'backend': 'facebook', 'token': 'user_1'}\r\n        response = self.client.post('/oauth/convert-token/', d)\r\n        self.assertEqual(response.status_code, 200, response.data)\r\n        user = User.objects.all().latest('date_joined')\r\n        self.assertEqual(user.email, \"foo@bar.com\")\r\n```. ",
    "coriolinus": "@BraisGabin I haven't had any luck following that example; when I run it, the `get_facebook_info_mock` function is bypassed in favor of the genuine `user_data` function. My best guess is that my test case is in the wrong scope when I substitute in the replacement function.\r\n\r\nWould you mind fleshing out the example a little more so I can see how you're doing this?. @BraisGabin I haven't had any luck following that example; when I run it, the `get_facebook_info_mock` function is bypassed in favor of the genuine `user_data` function. My best guess is that my test case is in the wrong scope when I substitute in the replacement function.\r\n\r\nWould you mind fleshing out the example a little more so I can see how you're doing this?. ",
    "wamberg": "+1\n\nWe (@bbuhai wrote it) have a workaround that at least stores the **access_token** in **extra_data**. We pass a response into `do_auth`. Here's what the call looks like:\n\n``` python\nuser = backend.do_auth(\n            access_token=access_token,\n            response={'access_token': access_token})\n```\n\nWe still don't get **expires** in the **extra_data** column though.\n. +1\n\nWe (@bbuhai wrote it) have a workaround that at least stores the **access_token** in **extra_data**. We pass a response into `do_auth`. Here's what the call looks like:\n\n``` python\nuser = backend.do_auth(\n            access_token=access_token,\n            response={'access_token': access_token})\n```\n\nWe still don't get **expires** in the **extra_data** column though.\n. ",
    "miukal": "Solved. add one line in nginx\n\n```\nproxy_set_header X-Forwarded-Host 'app.mydomain.com';\n```\n. Solved. add one line in nginx\n\n```\nproxy_set_header X-Forwarded-Host 'app.mydomain.com';\n```\n. ",
    "altunyurt": "https://developers.facebook.com/docs/facebook-login/v2.2 \n. https://developers.facebook.com/docs/facebook-login/v2.2 \n. ",
    "SaulTigh": "any updates on this issue?\n. any updates on this issue?\n. ",
    "mtirsel": "Any progress? This is causing a lot of problems in automated builds/deployments and is easy to fix.\n. Duplicate of https://github.com/omab/python-social-auth/issues/426\n. Any progress? This is causing a lot of problems in automated builds/deployments and is easy to fix.\n. Duplicate of https://github.com/omab/python-social-auth/issues/426\n. ",
    "bendavis78": "See above pull request. The fix was to remove the `b` prefix on the default_value for the `extra_data` field. This bug appears to have been introduced by 587da255.\n. See above pull request. The fix was to remove the `b` prefix on the default_value for the `extra_data` field. This bug appears to have been introduced by 587da255.\n. ",
    "lioman": "I installed it with pip3 the error was caused by python-openid. I have deinstalled it and the error was gone, But there was a bunch of new ones so I switched to django-allauth.\nIt seems that python-social-auth is not fully compatible with python3.4\n. I installed it with pip3 the error was caused by python-openid. I have deinstalled it and the error was gone, But there was a bunch of new ones so I switched to django-allauth.\nIt seems that python-social-auth is not fully compatible with python3.4\n. ",
    "chadmiller": "Still a problem.  Please re-open.\n\nIn debug page shown because of exception, a few frames from the end, showing local variables:\n\nsocial/backends/oauth.py in request_access_token\n\n``` python\nkwargs    {\n   'auth': None,\n   'data': { 'client_id': 'zhFG9g',\n             'client_secret': 'ssJb3WWrttdz6I',\n             'code': 'nBOjFdLuqNM4k',\n             'grant_type': 'authorization_code',\n             'redirect_uri': 'http://boogs.example.com/redirect/reddit'},\n   'headers': {'Authorization': 'Basic '\n                              \"b'emhGdHp6YmtyeDVNBZmFqdFdydHRkejZJ'\",\n             'User-Agent': 'python-social-auth-0.2.12'},\n   'method': 'POST'}\n```\n. This seems more likely to be right.  Note \".decode()\"\n\n```\n 43     def auth_headers(self):\n 44         return {\n 45             'Authorization': 'Basic {0}'.format(base64.urlsafe_b64encode(\n 46                 ('{0}:{1}'.format(*self.get_key_and_secret()).encode())\n 47             ).decode())\n 48         }\n```\n. Still a problem.  Please re-open.\n\nIn debug page shown because of exception, a few frames from the end, showing local variables:\n\nsocial/backends/oauth.py in request_access_token\n\n``` python\nkwargs    {\n   'auth': None,\n   'data': { 'client_id': 'zhFG9g',\n             'client_secret': 'ssJb3WWrttdz6I',\n             'code': 'nBOjFdLuqNM4k',\n             'grant_type': 'authorization_code',\n             'redirect_uri': 'http://boogs.example.com/redirect/reddit'},\n   'headers': {'Authorization': 'Basic '\n                              \"b'emhGdHp6YmtyeDVNBZmFqdFdydHRkejZJ'\",\n             'User-Agent': 'python-social-auth-0.2.12'},\n   'method': 'POST'}\n```\n. This seems more likely to be right.  Note \".decode()\"\n\n```\n 43     def auth_headers(self):\n 44         return {\n 45             'Authorization': 'Basic {0}'.format(base64.urlsafe_b64encode(\n 46                 ('{0}:{1}'.format(*self.get_key_and_secret()).encode())\n 47             ).decode())\n 48         }\n```\n. ",
    "jackfischer": "Please re-open, also looks like there may be other pull requests, #772 and #782?\n. +1 on the bug. Would be great to have this merged. Looks like there's a similar pull request, #772 \n. +1, but duplicate of pull #745?\n. Please re-open, also looks like there may be other pull requests, #772 and #782?\n. +1 on the bug. Would be great to have this merged. Looks like there's a similar pull request, #772 \n. +1, but duplicate of pull #745?\n. ",
    "cubaraphael": "@omab, ok. You got it wrong, sorry.\n\nMy problem is when anything is wrong in my project and the error message ever return the same thing like this.\nLook the first print:\n\n![Error with python social auth](https://fbcdn-sphotos-h-a.akamaihd.net/hphotos-ak-xpf1/v/t34.0-12/10816061_322443424609625_364765997_n.jpg?oh=b866e403a1bdd1f553288410b822d2b0&oe=546B7ED7&__gda__=1416328394_095b70536cee8a3e1e62c5be8a175074)\n\nI created a new project to show how the message should be displayed.\n![Error without python social auth](https://fbcdn-sphotos-h-a.akamaihd.net/hphotos-ak-xpa1/v/t35.0-12/10807633_322445051276129_1477256265_o.jpg?oh=024db39f3c2a79d1d4ae37538bef0e6b&oe=546B9CF8&__gda__=1416391064_ea3ffbdae06f0dd6dcd6a0ddf32f9a55)\n\nI don't know how to solve it. Can you help me?\n\nThanks!\n. @omab those two images are the same error.\nThe first image is with the python-social-auth installed and the second is a new project, both with DEBUG = True and both with the same problem (without import module slugify of django).\nThe same error and the error message is displayed in two ways.\nThe second print is better for debug than the first image, it returns the file that have the error, line, etc.\n\nYou understand now?\n\nThanks!\n. I dont have any @login_required decorator. The log for this fail is only this:\n\n```\nhttp://0.0.0.0:8000/login/?error=global%20name%20%27slugify%27%20is%20not%20defined\n```\n\nI follow this tutorial to implement python-social-auth on my project.\nCan you read this [link](http://www.artandlogic.com/blog/2014/04/tutorial-adding-facebooktwittergoogle-authentication-to-a-django-application/)?\nMaybe can help us to discover.\n\nThanks!\n. Yes, i'm using. But I teased this error to show the problem.\n. @omab, ok. You got it wrong, sorry.\n\nMy problem is when anything is wrong in my project and the error message ever return the same thing like this.\nLook the first print:\n\n![Error with python social auth](https://fbcdn-sphotos-h-a.akamaihd.net/hphotos-ak-xpf1/v/t34.0-12/10816061_322443424609625_364765997_n.jpg?oh=b866e403a1bdd1f553288410b822d2b0&oe=546B7ED7&__gda__=1416328394_095b70536cee8a3e1e62c5be8a175074)\n\nI created a new project to show how the message should be displayed.\n![Error without python social auth](https://fbcdn-sphotos-h-a.akamaihd.net/hphotos-ak-xpa1/v/t35.0-12/10807633_322445051276129_1477256265_o.jpg?oh=024db39f3c2a79d1d4ae37538bef0e6b&oe=546B9CF8&__gda__=1416391064_ea3ffbdae06f0dd6dcd6a0ddf32f9a55)\n\nI don't know how to solve it. Can you help me?\n\nThanks!\n. @omab those two images are the same error.\nThe first image is with the python-social-auth installed and the second is a new project, both with DEBUG = True and both with the same problem (without import module slugify of django).\nThe same error and the error message is displayed in two ways.\nThe second print is better for debug than the first image, it returns the file that have the error, line, etc.\n\nYou understand now?\n\nThanks!\n. I dont have any @login_required decorator. The log for this fail is only this:\n\n```\nhttp://0.0.0.0:8000/login/?error=global%20name%20%27slugify%27%20is%20not%20defined\n```\n\nI follow this tutorial to implement python-social-auth on my project.\nCan you read this [link](http://www.artandlogic.com/blog/2014/04/tutorial-adding-facebooktwittergoogle-authentication-to-a-django-application/)?\nMaybe can help us to discover.\n\nThanks!\n. Yes, i'm using. But I teased this error to show the problem.\n. ",
    "artemmus": "Yes, it works.\n\nP.S.\nwaiting for the update on PyPI :)\n. Yes, it works.\n\nP.S.\nwaiting for the update on PyPI :)\n. ",
    "hugocore": "Hi @jeverling!\n\nYou can now authenticate your users against your django-rest-framework with bearer tokens from any python-social-auth backend using this library https://github.com/PhilipGarnero/django-rest-framework-social-oauth2\n\nBest regards\n. Hi @jeverling!\n\nYou can now authenticate your users against your django-rest-framework with bearer tokens from any python-social-auth backend using this library https://github.com/PhilipGarnero/django-rest-framework-social-oauth2\n\nBest regards\n. ",
    "travoltino": "Perhaps the author should make the ability to disable certificate validation. I also had to do \"verify = False\"\n. kblw, can check you backend when opened in iframe on site professionali.ru? \nIn my version, i had to added:\n\n```\ndef validate_state(self):\n    return None\n```\n\nCause they do not send the \"state\" when inframe, and I get an exeption AuthMissingParameter(self, 'state').\n. Perhaps the author should make the ability to disable certificate validation. I also had to do \"verify = False\"\n. kblw, can check you backend when opened in iframe on site professionali.ru? \nIn my version, i had to added:\n\n```\ndef validate_state(self):\n    return None\n```\n\nCause they do not send the \"state\" when inframe, and I get an exeption AuthMissingParameter(self, 'state').\n. ",
    "maxvyaznikov": "Thank you for this, @drpancake!\n. Thank you for this, @drpancake!\n. ",
    "buddylindsey": "Have you gotten this to work? I recently just started using it and it seems to work for me. If it isn't working for you still can you show some code.\n. no problem. Glad to finally help with this library code wise. :)\n. Have you gotten this to work? I recently just started using it and it seems to work for me. If it isn't working for you still can you show some code.\n. no problem. Glad to finally help with this library code wise. :)\n. ",
    "filonik": "Nevermind, it was just a configuration issue on my part. It works perfectly now. Thanks!\n. Nevermind, it was just a configuration issue on my part. It works perfectly now. Thanks!\n. ",
    "mailarchis": "python-social-auth supports south migrations for django versions < 1.7. You need to add the  following to django settings\n\nSOUTH_MIGRATION_MODULES = {\n    'default': 'social.apps.django_app.default.south_migrations',\n}\n\nReferences\nhttps://github.com/omab/python-social-auth/pull/339\nhttp://south.readthedocs.org/en/latest/settings.html\n. python-social-auth supports south migrations for django versions < 1.7. You need to add the  following to django settings\n\nSOUTH_MIGRATION_MODULES = {\n    'default': 'social.apps.django_app.default.south_migrations',\n}\n\nReferences\nhttps://github.com/omab/python-social-auth/pull/339\nhttp://south.readthedocs.org/en/latest/settings.html\n. ",
    "frankier": "Tangentially related: https://github.com/omab/django-social-auth/issues/711\n\nI have the same or similar bug. For me it only occurs when an unsanitary url is specified as ?next= which causes LOGIN_REDIRECT_URL to be saved in the session without calling force_text(...).\n\nIt's common to use reverse_lazy(...) in settings.py to specify urls. Django's default session serialiser doesn't support lazy objects (by design: https://code.djangoproject.com/ticket/5590 ). We know that in the specific case of django-social-auth it's safe to call foce_text before saving to the session so it's up to django-social-auth to support lazy_reverse settings.\n\nI'm working on a PR.\n. @alsoicode: All that said, maybe you could provide a full traceback so we can be sure it's the same issue?\n. Tangentially related: https://github.com/omab/django-social-auth/issues/711\n\nI have the same or similar bug. For me it only occurs when an unsanitary url is specified as ?next= which causes LOGIN_REDIRECT_URL to be saved in the session without calling force_text(...).\n\nIt's common to use reverse_lazy(...) in settings.py to specify urls. Django's default session serialiser doesn't support lazy objects (by design: https://code.djangoproject.com/ticket/5590 ). We know that in the specific case of django-social-auth it's safe to call foce_text before saving to the session so it's up to django-social-auth to support lazy_reverse settings.\n\nI'm working on a PR.\n. @alsoicode: All that said, maybe you could provide a full traceback so we can be sure it's the same issue?\n. ",
    "alsoicode": "Hi everyone. I'm slammed this morning, but I should be able to get you a\nfull traceback today. I'm almost certain setting the LOGIN_REDIRECT_URL via\nreverse_lazy is what's causing the issue, because as soon as I changed it\nback to a hard-coded value, everything worked as expected again.\n\nOn Fri, Dec 19, 2014 at 9:51 AM, Frankie Robertson <notifications@github.com\n\n> wrote:\n> \n> @alsoicode https://github.com/alsoicode: All that said, maybe you could\n> provide a full traceback so we can be sure it's the same issue?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/issues/460#issuecomment-67647039\n> .\n. I'll look into those right away. Thanks.\n. I've triple-checked my redirect URL, which for Google is:\n\n```\nhttp://[subdomain].brandonftaylor.com/complete/google-oauth2/\n```\n\nso I'm fairly certain that covers #220. I checked my Chrome settings and cleared out all cookies, and my settings look identical to #244. I'm using Django, so the `SESSION_PROTECTION` setting doesn't apply for me. I'm redirecting to a subdomain on a TLD.\n\nEverything was working just fine, and then it wasn't. Using a different browser, like Firefox also doesn't help.\n. Now suddenly everything is working again, and I haven't made any changes. That's great, but doesn't exactly instill a lot of confidence in me. I'd really like to understand what was going on.\n. Hi everyone. I'm slammed this morning, but I should be able to get you a\nfull traceback today. I'm almost certain setting the LOGIN_REDIRECT_URL via\nreverse_lazy is what's causing the issue, because as soon as I changed it\nback to a hard-coded value, everything worked as expected again.\n\nOn Fri, Dec 19, 2014 at 9:51 AM, Frankie Robertson <notifications@github.com\n\n> wrote:\n> \n> @alsoicode https://github.com/alsoicode: All that said, maybe you could\n> provide a full traceback so we can be sure it's the same issue?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/issues/460#issuecomment-67647039\n> .\n. I'll look into those right away. Thanks.\n. I've triple-checked my redirect URL, which for Google is:\n\n```\nhttp://[subdomain].brandonftaylor.com/complete/google-oauth2/\n```\n\nso I'm fairly certain that covers #220. I checked my Chrome settings and cleared out all cookies, and my settings look identical to #244. I'm using Django, so the `SESSION_PROTECTION` setting doesn't apply for me. I'm redirecting to a subdomain on a TLD.\n\nEverything was working just fine, and then it wasn't. Using a different browser, like Firefox also doesn't help.\n. Now suddenly everything is working again, and I haven't made any changes. That's great, but doesn't exactly instill a lot of confidence in me. I'd really like to understand what was going on.\n. ",
    "flying-sheep": "this would be a dupe of #257, but i disagree with the closing reason:\r\n\r\npython-social-auth [uses flask_login itself](https://github.com/omab/python-social-auth/blob/master/social/apps/flask_app/routes.py#L2), so it needs to cope with the way it works.\r\n\r\nalso this is the only place to fix it:\r\n\r\nflask_login exposed it as Proxy for the advantage of thread-locality, and since a metaclass has no access to the local object\u2019s class, werkzeug can\u2019t define some `__instancecheck__` magic that works around this.\r\n\r\nyou use flask_login, and your [docs recommend using](https://github.com/omab/python-social-auth/blob/v0.2.21/docs/configuration/flask.rst#flask-login) it in a way that has to fail:\r\n\r\n> # Flask-Login\r\n> \r\n> The application works quite well with Flask-Login, ensure to have some similar handlers to these:\r\n> \r\n> ``` python\r\n> @app.before_request\r\n> def global_user():\r\n>     g.user = login.current_user\r\n> ```\r\n. this would be a dupe of #257, but i disagree with the closing reason:\r\n\r\npython-social-auth [uses flask_login itself](https://github.com/omab/python-social-auth/blob/master/social/apps/flask_app/routes.py#L2), so it needs to cope with the way it works.\r\n\r\nalso this is the only place to fix it:\r\n\r\nflask_login exposed it as Proxy for the advantage of thread-locality, and since a metaclass has no access to the local object\u2019s class, werkzeug can\u2019t define some `__instancecheck__` magic that works around this.\r\n\r\nyou use flask_login, and your [docs recommend using](https://github.com/omab/python-social-auth/blob/v0.2.21/docs/configuration/flask.rst#flask-login) it in a way that has to fail:\r\n\r\n> # Flask-Login\r\n> \r\n> The application works quite well with Flask-Login, ensure to have some similar handlers to these:\r\n> \r\n> ``` python\r\n> @app.before_request\r\n> def global_user():\r\n>     g.user = login.current_user\r\n> ```\r\n. ",
    "moorchegue": "Stumbled into this as well. I'm not sure what's the right place to fix it, because I aint dig too deep into psa or werkzeug to figure out possible responsibilities.\n\nHowever just by the looking on the condition @flying-sheep mentioned and possible returned value I get really confused. Shouldn't the condition at least be more specific if we expect something response-like to be returned?\n\nOn more practical side of things. Is there a related ticket/issue on werkzeug/flask-login bug trackers? Any cooperation is happenning on on this?\n. I think you can, but you'd have to log out of your current account in Instagram each time before adding another one. Otherwise you'll just get something like \"this account is already assiciated\".\n. Anyway, https://github.com/omab/python-social-auth/pull/963\n. Good thinking. This is somehow similar to the situation when user disconnects all the backends and exists as a soap bubble waiting to burst.\n\nI think PSA doesn't provide anything out-of-the box to deal with either, so it's all up to the app you're implementing. Generate fake uid, don't let users log in if there's no password or specific flag set, that's it, I guess\u2026\n. Stumbled into this as well. I'm not sure what's the right place to fix it, because I aint dig too deep into psa or werkzeug to figure out possible responsibilities.\n\nHowever just by the looking on the condition @flying-sheep mentioned and possible returned value I get really confused. Shouldn't the condition at least be more specific if we expect something response-like to be returned?\n\nOn more practical side of things. Is there a related ticket/issue on werkzeug/flask-login bug trackers? Any cooperation is happenning on on this?\n. I think you can, but you'd have to log out of your current account in Instagram each time before adding another one. Otherwise you'll just get something like \"this account is already assiciated\".\n. Anyway, https://github.com/omab/python-social-auth/pull/963\n. Good thinking. This is somehow similar to the situation when user disconnects all the backends and exists as a soap bubble waiting to burst.\n\nI think PSA doesn't provide anything out-of-the box to deal with either, so it's all up to the app you're implementing. Generate fake uid, don't let users log in if there's no password or specific flag set, that's it, I guess\u2026\n. ",
    "yaniv14": "Did you follow similar resolved issues:\nhttps://github.com/omab/python-social-auth/issues/220\nhttps://github.com/omab/python-social-auth/issues/244\nhttps://github.com/omab/python-social-auth/issues/166\n. I don't think you can get it directly from facebook in the response.\nAlso not all profile pages are first and last name combined.\nI am using this link to get redirect to the user page.\nhttps://www.facebook.com/app_scoped_user_id/<user_id>/\n\n<user_id> value you get with the response.\n. Hi Thomas,\n\nDid you facebook app approved for all the extra scopes?\nYou can ask for as many scopes as you want with python social auth request, but you will get with the response only the scopes that approved by your facebook app.\n\nCheck your approved items in Status & Reviews tab in facebook developers panel.\n. Birthday belong to user_birthday scope and it requires facebook review.\nLocation belong to user_location scope and it also requires review.\nGender is part of public_profile which doesn't need review\n. Same happened to me, I just created my own create_user and replace the one in the pipeline.\n\ndef create_user(strategy, details, user=None, _args, *_kwargs):\n    if user:\n        return {'is_new': False}\n\n```\nreturn {\n    'is_new': True,\n    'user': strategy.create_user(email=details['email'])\n}\n```\n. Did you follow similar resolved issues:\nhttps://github.com/omab/python-social-auth/issues/220\nhttps://github.com/omab/python-social-auth/issues/244\nhttps://github.com/omab/python-social-auth/issues/166\n. I don't think you can get it directly from facebook in the response.\nAlso not all profile pages are first and last name combined.\nI am using this link to get redirect to the user page.\nhttps://www.facebook.com/app_scoped_user_id/<user_id>/\n\n<user_id> value you get with the response.\n. Hi Thomas,\n\nDid you facebook app approved for all the extra scopes?\nYou can ask for as many scopes as you want with python social auth request, but you will get with the response only the scopes that approved by your facebook app.\n\nCheck your approved items in Status & Reviews tab in facebook developers panel.\n. Birthday belong to user_birthday scope and it requires facebook review.\nLocation belong to user_location scope and it also requires review.\nGender is part of public_profile which doesn't need review\n. Same happened to me, I just created my own create_user and replace the one in the pipeline.\n\ndef create_user(strategy, details, user=None, _args, *_kwargs):\n    if user:\n        return {'is_new': False}\n\n```\nreturn {\n    'is_new': True,\n    'user': strategy.create_user(email=details['email'])\n}\n```\n. ",
    "MajorTal": "+1\n. +1\n. ",
    "sshadmand": "FYI adding: settings.FIELD_SELECTORS = ['email-address']\n\nto settings worked but it is not documented anywhere. Also, if SOCIAL_AUTH_LINKEDIN_FIELD_OAUTH2_SELECTORS isn't used why is it required in the first place?\n. FYI adding: settings.FIELD_SELECTORS = ['email-address']\n\nto settings worked but it is not documented anywhere. Also, if SOCIAL_AUTH_LINKEDIN_FIELD_OAUTH2_SELECTORS isn't used why is it required in the first place?\n. ",
    "eduardomb": "+1\n. +1\n. ",
    "ebpetway": "I'm running into the same issue, as I was hoping to use OpenID Connect instead of having to rely on the user having a Google+ account.\n\nEdit: Just read that the user actually doesn't even need a Google+ account if you just use the \"profile\" scope.\nSource: https://developers.google.com/+/api/auth-migration\n. I'm running into the same issue, as I was hoping to use OpenID Connect instead of having to rely on the user having a Google+ account.\n\nEdit: Just read that the user actually doesn't even need a Google+ account if you just use the \"profile\" scope.\nSource: https://developers.google.com/+/api/auth-migration\n. ",
    "eshellman": "I couldn't get Google Open ID Connect to work, I just couldn't shake the AuthCanceled exception on auth-complete. using the Google OAuth2 backend seems to be the right way to replace Google OpenID\n. I couldn't get Google Open ID Connect to work, I just couldn't shake the AuthCanceled exception on auth-complete. using the Google OAuth2 backend seems to be the right way to replace Google OpenID\n. ",
    "gfranxman": "Same here, FYI.   Worked like a charm.\n. Same here, FYI.   Worked like a charm.\n. ",
    "wj1918": "Just saw a closed issue.\nhttps://github.com/omab/python-social-auth/issues/218\nThis is still not working.\n. We are appending redirect_state to the redirect_uri, This cause the failing.\n\nredirect_uri=https://www.example.com/account/social/complete/live/?redirect_state=lmfVxeqIBCtugBWybBo3sGHtMdQh9UXu\n\nError message is\n\"We're unable to complete your request\nMicrosoft account is experiencing technical problems. Please try again later.\"\n. I created a pull request to set redirect_state to false.\n. same here, how to fix it?\n. Just saw a closed issue.\nhttps://github.com/omab/python-social-auth/issues/218\nThis is still not working.\n. We are appending redirect_state to the redirect_uri, This cause the failing.\n\nredirect_uri=https://www.example.com/account/social/complete/live/?redirect_state=lmfVxeqIBCtugBWybBo3sGHtMdQh9UXu\n\nError message is\n\"We're unable to complete your request\nMicrosoft account is experiencing technical problems. Please try again later.\"\n. I created a pull request to set redirect_state to false.\n. same here, how to fix it?\n. ",
    "dineshv": "I am also facing the same issue. Any idea why this is failing.\n. I am also facing the same issue. Any idea why this is failing.\n. ",
    "alvarovelezgalvez": "Same for me. 2 weeks with no Live! login available.\n\nIt's seems to be a general problem, as their analytics URL (to check number of logins) does not work anymore: https://onedrive.live.com/dev/analytics.aspx?id=XXXXXXXXXXXX\n. Same for me. 2 weeks with no Live! login available.\n\nIt's seems to be a general problem, as their analytics URL (to check number of logins) does not work anymore: https://onedrive.live.com/dev/analytics.aspx?id=XXXXXXXXXXXX\n. ",
    "po5i": "Did you manage to solve this?\n. This may help http://stackoverflow.com/questions/24377506/httperror-403-forbidden-with-django-and-python-social-auth-connecting-to-googl\n. Is there no way? Anybody?\n. Thanks!\n. Did you manage to solve this?\n. This may help http://stackoverflow.com/questions/24377506/httperror-403-forbidden-with-django-and-python-social-auth-connecting-to-googl\n. Is there no way? Anybody?\n. Thanks!\n. ",
    "clemente": "I'm also getting it from time to time since many months ago on both Facebook and Twitter. It's not related to mobile or slow connections. It seldom happened to me, but when it does, I go back, click the login button again and then it works. In production it happens like 5 times a day every day, always to different people.\n\nI'll add the results of my research:\n- This is not about the URL. _Don't look for a missing parameter \"state\" in the URL_. There is a `&state=\u2026` parameter in OAuth2, and also a `&redirect_state=\u2026`, but they work all right when this bug happens. What PSA is complaining about is a state parameter _inside session_, which is called `facebook_state` or `twitter_state` \n- It happened with OAuth2 (Facebook) and very rarely with OAuth1 (Twitter). Always in the /complete/ step\n- It always happens when logging in (that means the user cannot log in and stays anonimous) except a very rare occasion when it happened on logout\n- You can reproduce it easily by going to a URL which has an expired token, although I'm not sure the conditions are the same as the bug in the wild. E.g. `http://www.yourdomain.com/account/complete/twitter/?redirect_state=8edOO0H4AcNXohUB7IOOYRaiEhv6iK4b&oauth_token=E1DsnqYwM6ie0U5Zd2RqHsOixWqOZgQh&oauth_verifier=0VeL60uek54y1pWgAmQegysG1lwW0IFN`\n- If I look at the session data at the time of the error (in a middleware), I confirm that the session doesn't have a `twitter_state parameter`. It has: `[('currency', 'IDR'), ('django_language', 'id')]`, while in a normal (non-failing) login, there is a `twitter_state` parameter: `[(u'twitterunauthorized_token_name', [u'oauth_token=rh19NS7EkL3Wovwn9Mi8KbM24ZLDfOt7&oauth_token_secret=3NON79A7UYYD5Ec73SB0p1c8f3M7Igfk&oauth_callback_confirmed=true']), (u'next', u'/'), (u'currency', u'IDR'), (u'twitter_state', u'75N2XDSQnyIOaKEBV6RsofkmcLTKyDDG'), (u'_language', u'id'), (u'django_language', u'id')]`\n- I'm using memcached and nothing too strange.\n- I'm suspicious that this bug is because: the user starts logging in and uses the auth_token etc, then something goes wrong and the browser tries to load the URL again. Fb/Twitter doesn't allow to use those tokens a 2nd time, and therefore the /complete/ step doesn't have all the necessary information in session.\n\nAny comments are appreciated! I want to add more debug information or some workaround for this.\n. That's an interesting story, I'm glad you found the cause.\n\nI'm not sure that psa is \u201eshifting\u201c your other context variables into a dict called \u201ebackends\u201c. I think that psa is just _adding_ to the context a new dict that you can use as needed, but it doesn't change any other context variable (all dicts returned by context processors will be joined together by Django). If one context processor destroys the others, that's the bug.\nMaybe what you saw can be solved by changing the order of things (of middlewares, of apps maybe, \u2026).\n\nBut the problem I saw happens at login time (you get a 500 page before any AJAX or JS is loaded). But I was wondering: could it be a problem if a session ends but the user unknowingly continues doing AJAX requests? But no, it's not because of that, because all the errors I saw happen in the URL /account/complete/facebook/, and AJAX would never try to connect there. All the problems happen after seeing the Facebook website, not in background.\nTherefore I think that it can be a different error!\n. I'm also getting it from time to time since many months ago on both Facebook and Twitter. It's not related to mobile or slow connections. It seldom happened to me, but when it does, I go back, click the login button again and then it works. In production it happens like 5 times a day every day, always to different people.\n\nI'll add the results of my research:\n- This is not about the URL. _Don't look for a missing parameter \"state\" in the URL_. There is a `&state=\u2026` parameter in OAuth2, and also a `&redirect_state=\u2026`, but they work all right when this bug happens. What PSA is complaining about is a state parameter _inside session_, which is called `facebook_state` or `twitter_state` \n- It happened with OAuth2 (Facebook) and very rarely with OAuth1 (Twitter). Always in the /complete/ step\n- It always happens when logging in (that means the user cannot log in and stays anonimous) except a very rare occasion when it happened on logout\n- You can reproduce it easily by going to a URL which has an expired token, although I'm not sure the conditions are the same as the bug in the wild. E.g. `http://www.yourdomain.com/account/complete/twitter/?redirect_state=8edOO0H4AcNXohUB7IOOYRaiEhv6iK4b&oauth_token=E1DsnqYwM6ie0U5Zd2RqHsOixWqOZgQh&oauth_verifier=0VeL60uek54y1pWgAmQegysG1lwW0IFN`\n- If I look at the session data at the time of the error (in a middleware), I confirm that the session doesn't have a `twitter_state parameter`. It has: `[('currency', 'IDR'), ('django_language', 'id')]`, while in a normal (non-failing) login, there is a `twitter_state` parameter: `[(u'twitterunauthorized_token_name', [u'oauth_token=rh19NS7EkL3Wovwn9Mi8KbM24ZLDfOt7&oauth_token_secret=3NON79A7UYYD5Ec73SB0p1c8f3M7Igfk&oauth_callback_confirmed=true']), (u'next', u'/'), (u'currency', u'IDR'), (u'twitter_state', u'75N2XDSQnyIOaKEBV6RsofkmcLTKyDDG'), (u'_language', u'id'), (u'django_language', u'id')]`\n- I'm using memcached and nothing too strange.\n- I'm suspicious that this bug is because: the user starts logging in and uses the auth_token etc, then something goes wrong and the browser tries to load the URL again. Fb/Twitter doesn't allow to use those tokens a 2nd time, and therefore the /complete/ step doesn't have all the necessary information in session.\n\nAny comments are appreciated! I want to add more debug information or some workaround for this.\n. That's an interesting story, I'm glad you found the cause.\n\nI'm not sure that psa is \u201eshifting\u201c your other context variables into a dict called \u201ebackends\u201c. I think that psa is just _adding_ to the context a new dict that you can use as needed, but it doesn't change any other context variable (all dicts returned by context processors will be joined together by Django). If one context processor destroys the others, that's the bug.\nMaybe what you saw can be solved by changing the order of things (of middlewares, of apps maybe, \u2026).\n\nBut the problem I saw happens at login time (you get a 500 page before any AJAX or JS is loaded). But I was wondering: could it be a problem if a session ends but the user unknowingly continues doing AJAX requests? But no, it's not because of that, because all the errors I saw happen in the URL /account/complete/facebook/, and AJAX would never try to connect there. All the problems happen after seeing the Facebook website, not in background.\nTherefore I think that it can be a different error!\n. ",
    "darkaardvark2": "I had this issue for a long time with google-oauth2 as well and finally figured out the root cause of the problem last night.  I'm not sure if you are experiencing exactly the same problem, but for me it turned out to be an issue of conflicting apps.  \n\nApart from python-social-auth, we use django-session-security to automatically logout a user after a certain amount of time.  The security app stores the expiration time in the context data of the request, but psa's context processor switches all of that context data to be stored in a \"backend\" key during the complete step.  At this point, It looks like the base template that was rendered during this step would occasionally try to execute some javascript with context data that didn't exist, so the expiration time would be zero and the page would automatically reload. \n\nThis was a tricky problem to debug because none of the error information seems to point to another app and it rarely happens because of the variable time that it will take javascript to begin execution before the page is redirected.  If the issue you're having is similar, look for any javascript in your code that executes a page reload and try to find if it depends on context data. If it does, you will just have to make sure that this code only runs if the context data exists.  \n. I had this issue for a long time with google-oauth2 as well and finally figured out the root cause of the problem last night.  I'm not sure if you are experiencing exactly the same problem, but for me it turned out to be an issue of conflicting apps.  \n\nApart from python-social-auth, we use django-session-security to automatically logout a user after a certain amount of time.  The security app stores the expiration time in the context data of the request, but psa's context processor switches all of that context data to be stored in a \"backend\" key during the complete step.  At this point, It looks like the base template that was rendered during this step would occasionally try to execute some javascript with context data that didn't exist, so the expiration time would be zero and the page would automatically reload. \n\nThis was a tricky problem to debug because none of the error information seems to point to another app and it rarely happens because of the variable time that it will take javascript to begin execution before the page is redirected.  If the issue you're having is similar, look for any javascript in your code that executes a page reload and try to find if it depends on context data. If it does, you will just have to make sure that this code only runs if the context data exists.  \n. ",
    "gustavi": "Some news of this issue ?\n. The code is OK, somebody can merge it ?\n. Some news ?\n. ?\n\nIt's just a code review, please merge it ASAP.\n. Thank you.\n. Thank you for the PR, someone can review and merge it ?\n. Some news ?\n. ?\n. I have no idea why nobody wants to merge it. Really.\n. up\n. Some news of this issue ?\n. The code is OK, somebody can merge it ?\n. Some news ?\n. ?\n\nIt's just a code review, please merge it ASAP.\n. Thank you.\n. Thank you for the PR, someone can review and merge it ?\n. Some news ?\n. ?\n. I have no idea why nobody wants to merge it. Really.\n. up\n. ",
    "fredericcambon": "Hey there,\n\nI opened an issue some weeks ago : https://github.com/omab/python-social-auth/issues/477\nAnd fixed Google OpenID on my fork https://github.com/cambonf/python-social-auth/tree/bug/google-openid-connect\n\nI haven't opened a PR yet. Maybe there's a better solution (I'm quite new to this project) but it works for us.\n. Hi sorry for the late answer,\n\nYup I'll do a PR and see with the owner :)\n\n+\n. Hey there,\n\nI opened an issue some weeks ago : https://github.com/omab/python-social-auth/issues/477\nAnd fixed Google OpenID on my fork https://github.com/cambonf/python-social-auth/tree/bug/google-openid-connect\n\nI haven't opened a PR yet. Maybe there's a better solution (I'm quite new to this project) but it works for us.\n. Hi sorry for the late answer,\n\nYup I'll do a PR and see with the owner :)\n\n+\n. ",
    "DavidHwu": "Thanks @cambonf \nLooked at your branch and its very straight forward and in line with the architecture principles of this package... though I am a newbie to this package.\n\nAny chance I can encourage you to do a PR with the owner and merge?  In general I don't like working off branches.  Take a chance, the author seems like a nice fellow.\n\nThanks\nDavid\n. +1\n\nSent from my iPhone\n\n> On Feb 5, 2015, at 4:04 AM, Pierre-Antoine Passet notifications@github.com wrote:\n> \n> +1 ! We have the same workaround in nginx :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Thanks @cambonf \nLooked at your branch and its very straight forward and in line with the architecture principles of this package... though I am a newbie to this package.\n\nAny chance I can encourage you to do a PR with the owner and merge?  In general I don't like working off branches.  Take a chance, the author seems like a nice fellow.\n\nThanks\nDavid\n. +1\n\nSent from my iPhone\n\n> On Feb 5, 2015, at 4:04 AM, Pierre-Antoine Passet notifications@github.com wrote:\n> \n> +1 ! We have the same workaround in nginx :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ",
    "asimcan": "This seems to be an older version, v0.2.12 works just fine with pymysql\n\n```\ndef init_social(app, session):\n    UID_LENGTH = app.config.get(setting_name('UID_LENGTH'), 255)\n    User = module_member(app.config[setting_name('USER_MODEL')])\n    _AppSession._set_session(session)\n    UserSocialAuth.__table_args__ = (UniqueConstraint('provider', 'uid'),)\n    UserSocialAuth.uid = Column(String(UID_LENGTH))\n    UserSocialAuth.user_id = Column(Integer, ForeignKey(User.id),\n                                    nullable=False, index=True)\n    UserSocialAuth.user = relationship(User, backref=backref('social_auth',\n                                                             lazy='dynamic'))\n```\n. This seems to be an older version, v0.2.12 works just fine with pymysql\n\n```\ndef init_social(app, session):\n    UID_LENGTH = app.config.get(setting_name('UID_LENGTH'), 255)\n    User = module_member(app.config[setting_name('USER_MODEL')])\n    _AppSession._set_session(session)\n    UserSocialAuth.__table_args__ = (UniqueConstraint('provider', 'uid'),)\n    UserSocialAuth.uid = Column(String(UID_LENGTH))\n    UserSocialAuth.user_id = Column(Integer, ForeignKey(User.id),\n                                    nullable=False, index=True)\n    UserSocialAuth.user = relationship(User, backref=backref('social_auth',\n                                                             lazy='dynamic'))\n```\n. ",
    "ericflo": "I've just run into this same problem. Did you ever figure out what it was, or a workaround?\n. I've just run into this same problem. Did you ever figure out what it was, or a workaround?\n. ",
    "rivf": "Yep, I've fixed it.\nCheck this: https://github.com/omab/python-social-auth/pull/498\n. Yep, I've fixed it.\nCheck this: https://github.com/omab/python-social-auth/pull/498\n. ",
    "zetahernandez": "I'm getting the same problem with the extra_data = {\"access_token\": \"\", \"expires\": null}, What am I doing wrong? i had very similar configuration. Why did you close the issue?\n. I'm using 0.2.6 the last\n. The flow i need is based on [server-side-flow](https://developers.google.com/+/web/signin/server-side-flow) as i saw there the client send an \"authorization code\" to the server and use it to obtain credential. The code is a one-time code that the server can exchange with Google's servers for an access token. Maybe this approach isn't supported yet in psa.\n![server-side-flow](https://developers.google.com/+/images/server_side_code_flow.png)\n. I'm getting the same problem with the extra_data = {\"access_token\": \"\", \"expires\": null}, What am I doing wrong? i had very similar configuration. Why did you close the issue?\n. I'm using 0.2.6 the last\n. The flow i need is based on [server-side-flow](https://developers.google.com/+/web/signin/server-side-flow) as i saw there the client send an \"authorization code\" to the server and use it to obtain credential. The code is a one-time code that the server can exchange with Google's servers for an access token. Maybe this approach isn't supported yet in psa.\n![server-side-flow](https://developers.google.com/+/images/server_side_code_flow.png)\n. ",
    "shnako": "@zetahernandez I closed it because it wasn't really an issue with PSA. Have a look at my answer to the stackoverflow question linked above.\n. @zetahernandez I closed it because it wasn't really an issue with PSA. Have a look at my answer to the stackoverflow question linked above.\n. ",
    "DavidJFelix": "@bemall I think it's an issue of tree structure. The \"app\" is in the wrong subtree (at least according to conventional django). The way it's organized is:\n- example\n  - manage.py\n  - example\n    - app\n      - models.py\n      - ...\n    - urls.py\n    - settings.py\n    - templates\n      - ...\n    - wsgi.py\n    - ...\n\nThis format isn't really idiomatic, but really shouldn't startle django veterans. The templates folder is configured in settings.py and as long as urls.py and settings.py correctly import the app, it can really exist anywhere, including places out of the source tree. I've never really seen a case where you'd want to nest apps as done in here, but if you did, nesting them in the \"main\" app is probably the least unusual way... if that makes sense.\n\nIf you're contemplating nesting apps, I would urge you to instead keep it as one app and split up the files in the app into a directory. This will take some work, but will be much cleaner in the end. Apps are meant to be siblings in a project, not parents and children -- even if they may depend on each other. There are a number of changes that cause unexpected behavior with nested apps [Including this](https://code.djangoproject.com/ticket/23348). It's not a supported workflow, as far as I know. Apps can contain modules rather than files if they get too large and are at a size where you might want nested apps. Here is how I would expect to see the django example laid out, in idiomatic django:\n- example\n  - manage.py\n  - templates\n    - ...\n  - app\n    - models.py\n    - ...\n  - example\n    - urls.py\n    - settings.py\n    - wsgi.py\n    - ...\n\nTo do this, there would need to be a few pathing changes to urls.py and settings.py, but it should work with a direct copy and paste, otherwise. I don't know that it's a big enough deal to modify the example, however. \n. @omab I agree. I don't think the cleanup would be worth the effort needed to regression test and ensure the app is wired up correctly. Like I said, django veterans should be able to figure it out and if it annoys somebody enough, they can do the PR.\n. @bemall I think it's an issue of tree structure. The \"app\" is in the wrong subtree (at least according to conventional django). The way it's organized is:\n- example\n  - manage.py\n  - example\n    - app\n      - models.py\n      - ...\n    - urls.py\n    - settings.py\n    - templates\n      - ...\n    - wsgi.py\n    - ...\n\nThis format isn't really idiomatic, but really shouldn't startle django veterans. The templates folder is configured in settings.py and as long as urls.py and settings.py correctly import the app, it can really exist anywhere, including places out of the source tree. I've never really seen a case where you'd want to nest apps as done in here, but if you did, nesting them in the \"main\" app is probably the least unusual way... if that makes sense.\n\nIf you're contemplating nesting apps, I would urge you to instead keep it as one app and split up the files in the app into a directory. This will take some work, but will be much cleaner in the end. Apps are meant to be siblings in a project, not parents and children -- even if they may depend on each other. There are a number of changes that cause unexpected behavior with nested apps [Including this](https://code.djangoproject.com/ticket/23348). It's not a supported workflow, as far as I know. Apps can contain modules rather than files if they get too large and are at a size where you might want nested apps. Here is how I would expect to see the django example laid out, in idiomatic django:\n- example\n  - manage.py\n  - templates\n    - ...\n  - app\n    - models.py\n    - ...\n  - example\n    - urls.py\n    - settings.py\n    - wsgi.py\n    - ...\n\nTo do this, there would need to be a few pathing changes to urls.py and settings.py, but it should work with a direct copy and paste, otherwise. I don't know that it's a big enough deal to modify the example, however. \n. @omab I agree. I don't think the cleanup would be worth the effort needed to regression test and ensure the app is wired up correctly. Like I said, django veterans should be able to figure it out and if it annoys somebody enough, they can do the PR.\n. ",
    "pierreant-p": "+1 ! We have the same workaround in nginx :)\n. +1 ! We have the same workaround in nginx :)\n. ",
    "thusoy": "@omab Thanks a lot!\n. @omab Thanks a lot!\n. ",
    "otherland": "I'm having the same issue as abdulgaffar with facebook scope, while using almost identical settings. If I paste the access token generated into \"https://graph.facebook.com/me/permissions?access_token=\" I get the following output, and so it seems that no extra permissions are being asked for. How can we use the extra permissions?\n\n{\n   \"data\": [\n      {\n         \"permission\": \"installed\",\n         \"status\": \"granted\"\n      },\n      {\n         \"permission\": \"public_profile\",\n         \"status\": \"granted\"\n      },\n      {\n         \"permission\": \"email\",\n         \"status\": \"granted\"\n      }\n   ]\n}\n. Can anyone reading this please post a link to a repo that uses the extended facebook permissions, so we can compare our settings and see what might be the problem? Thanks\n. I'm having the same issue as abdulgaffar with facebook scope, while using almost identical settings. If I paste the access token generated into \"https://graph.facebook.com/me/permissions?access_token=\" I get the following output, and so it seems that no extra permissions are being asked for. How can we use the extra permissions?\n\n{\n   \"data\": [\n      {\n         \"permission\": \"installed\",\n         \"status\": \"granted\"\n      },\n      {\n         \"permission\": \"public_profile\",\n         \"status\": \"granted\"\n      },\n      {\n         \"permission\": \"email\",\n         \"status\": \"granted\"\n      }\n   ]\n}\n. Can anyone reading this please post a link to a repo that uses the extended facebook permissions, so we can compare our settings and see what might be the problem? Thanks\n. ",
    "ranjansaga": "In order to access user's \"gender\", \"birthday\" and \"location\" ,should i get my app reviewed by facebook ?\n. In order to access user's \"gender\", \"birthday\" and \"location\" ,should i get my app reviewed by facebook ?\n. ",
    "eagafonov": "> You know this is a python application, right?\n\nSure :)\n\nI'm developing a django-based service with Facebook's OAuth2 as primary user registration method.\nIt didn't not work with newly registered app key/secret until I've switched off appsecret_proof on Facebook's app setting page.\n\nI didn't catch the reason of MR closure. Travice CI is failed for python3. Is it the reason?\n. cool. Thanks! \n. > You know this is a python application, right?\n\nSure :)\n\nI'm developing a django-based service with Facebook's OAuth2 as primary user registration method.\nIt didn't not work with newly registered app key/secret until I've switched off appsecret_proof on Facebook's app setting page.\n\nI didn't catch the reason of MR closure. Travice CI is failed for python3. Is it the reason?\n. cool. Thanks! \n. ",
    "tonylampada": "Following this. Hope it works out.\n. I can confirm that it's possible to login using google-openidconnect with this patch.\n\nThe changes I had to do in my django application are here [1]\nAlso I had to create a project with a clientid/secret as instructed here [2]\nImportant: Authentication only worked after I enabled the \"Google +\" API for that project\n\n[1] https://github.com/freedomsponsors/www.freedomsponsors.org/commit/e45f986f840c5fff9d8b055791da1cb03e9d366c\n[2] https://developers.google.com/accounts/docs/OpenIDConnect\n\nThe problem now is that, if I try to login on \"/login/google-openidconnect\", it will create a new User instead of authenticating into the previously existing one. Is there an easy solution for this problem?\n\n/cc @omab  - perhaps you can give me a pointer here too?\n. OK, no need. Just had to rtfm and use [Associate Users by email](http://python-social-auth.readthedocs.org/en/latest/use_cases.html#associate-users-by-email).\n\nJust for the record here's the [relevant changes](https://github.com/freedomsponsors/www.freedomsponsors.org/commit/f8824f002d2bebb2c02e9108cce5bcbc666dd91d)\n. Following this. Hope it works out.\n. I can confirm that it's possible to login using google-openidconnect with this patch.\n\nThe changes I had to do in my django application are here [1]\nAlso I had to create a project with a clientid/secret as instructed here [2]\nImportant: Authentication only worked after I enabled the \"Google +\" API for that project\n\n[1] https://github.com/freedomsponsors/www.freedomsponsors.org/commit/e45f986f840c5fff9d8b055791da1cb03e9d366c\n[2] https://developers.google.com/accounts/docs/OpenIDConnect\n\nThe problem now is that, if I try to login on \"/login/google-openidconnect\", it will create a new User instead of authenticating into the previously existing one. Is there an easy solution for this problem?\n\n/cc @omab  - perhaps you can give me a pointer here too?\n. OK, no need. Just had to rtfm and use [Associate Users by email](http://python-social-auth.readthedocs.org/en/latest/use_cases.html#associate-users-by-email).\n\nJust for the record here's the [relevant changes](https://github.com/freedomsponsors/www.freedomsponsors.org/commit/f8824f002d2bebb2c02e9108cce5bcbc666dd91d)\n. ",
    "abompard": "Google says basic OpenID will stop working in 12 days, is there a way to auth with Google without requesting an API key from them?\n. You can test the install with buildout by creating a file called \"buidout.cfg\" in a temporary directory with the following content:\n\n``` ini\n[buildout]\nparts = main\n[main]\nrecipe = zc.recipe.egg\neggs = python-social-auth\n```\n\nAnd running the \"buildout\" command.\n. OK I found the reason. In `MANIFEST.in`, the egg-info directory is ignored, and these files are necessary for easy_install to work. Buildout uses easy_install, thus triggers the error.\nThis can be easily reproduced with the command:\n\n```\n$ easy_install -md /tmp http://pypi.python.org/packages/source/p/python-social-auth/python-social-auth-0.2.10.tar.gz\n```\n\nThe fix is as easy as:\n\n``` diff\ndiff --git a/MANIFEST.in b/MANIFEST.in\nindex 2cf5b48..d2fef43 100644\n--- a/MANIFEST.in\n+++ b/MANIFEST.in\n@@ -7,7 +7,6 @@ recursive-include social/tests *.txt\n graft examples\n\n recursive-exclude .tox *\n-recursive-exclude python_social_auth.egg-info *\n recursive-exclude social *.pyc\n recursive-exclude examples *.pyc\n recursive-exclude examples *.db\n```\n\nI'll send you a pull request ASAP.\n. Google says basic OpenID will stop working in 12 days, is there a way to auth with Google without requesting an API key from them?\n. You can test the install with buildout by creating a file called \"buidout.cfg\" in a temporary directory with the following content:\n\n``` ini\n[buildout]\nparts = main\n[main]\nrecipe = zc.recipe.egg\neggs = python-social-auth\n```\n\nAnd running the \"buildout\" command.\n. OK I found the reason. In `MANIFEST.in`, the egg-info directory is ignored, and these files are necessary for easy_install to work. Buildout uses easy_install, thus triggers the error.\nThis can be easily reproduced with the command:\n\n```\n$ easy_install -md /tmp http://pypi.python.org/packages/source/p/python-social-auth/python-social-auth-0.2.10.tar.gz\n```\n\nThe fix is as easy as:\n\n``` diff\ndiff --git a/MANIFEST.in b/MANIFEST.in\nindex 2cf5b48..d2fef43 100644\n--- a/MANIFEST.in\n+++ b/MANIFEST.in\n@@ -7,7 +7,6 @@ recursive-include social/tests *.txt\n graft examples\n\n recursive-exclude .tox *\n-recursive-exclude python_social_auth.egg-info *\n recursive-exclude social *.pyc\n recursive-exclude examples *.pyc\n recursive-exclude examples *.db\n```\n\nI'll send you a pull request ASAP.\n. ",
    "rlucioni": "@omab, any progress here?\n. Thank you very much!\n. Seconding this. The PyJWT upgrade introduced in #557 would fix dependency conflicts with other projects which have upgraded.\n. Thank you @omab!\n. I think it's worth noting that running the migration in this PR against a MySQL database will incur downtime while the index is added ([reference](http://stackoverflow.com/a/14248906)).\n. @clintonb \ud83d\udc4d \n. @omab thoughts on this?\n. @omab would it be possible to publish v0.2.20 so that the community can take advantage of this change?\n. Thank you @omab!\n. @omab would you mind releasing v0.2.21 with this change?\n. @omab thank you!\n. @omab, any progress here?\n. Thank you very much!\n. Seconding this. The PyJWT upgrade introduced in #557 would fix dependency conflicts with other projects which have upgraded.\n. Thank you @omab!\n. I think it's worth noting that running the migration in this PR against a MySQL database will incur downtime while the index is added ([reference](http://stackoverflow.com/a/14248906)).\n. @clintonb \ud83d\udc4d \n. @omab thoughts on this?\n. @omab would it be possible to publish v0.2.20 so that the community can take advantage of this change?\n. Thank you @omab!\n. @omab would you mind releasing v0.2.21 with this change?\n. @omab thank you!\n. ",
    "DanielJDufour": "Hi, Nijel.  I wrote a fix, which you can find here: https://github.com/DanielJDufour/python-social-auth/commit/b51629fcc54ad755f1b17f27712aacc860f34129.\n\nHowever, I'm not a core developer, so I can't really say if this fix follows best practices.  Basically, I moved stuff from the **init** file in django_app to a ready method in the PythonSocialAuthConfig class that I created.  See this for more information and why I did this: https://docs.djangoproject.com/en/1.7/ref/applications/\n\nHope this helps and good luck! :)\n. Thanks dude. If you're ever in DC, first round is on me!\n. Hi, Nijel.  I wrote a fix, which you can find here: https://github.com/DanielJDufour/python-social-auth/commit/b51629fcc54ad755f1b17f27712aacc860f34129.\n\nHowever, I'm not a core developer, so I can't really say if this fix follows best practices.  Basically, I moved stuff from the **init** file in django_app to a ready method in the PythonSocialAuthConfig class that I created.  See this for more information and why I did this: https://docs.djangoproject.com/en/1.7/ref/applications/\n\nHope this helps and good luck! :)\n. Thanks dude. If you're ever in DC, first round is on me!\n. ",
    "ahmedouvic": "This is fixed here https://github.com/omab/python-social-auth/commit/f138221b12df275a4ddcece83f212998c30428dc\n. This is fixed here https://github.com/omab/python-social-auth/commit/f138221b12df275a4ddcece83f212998c30428dc\n. ",
    "adilnaimi": "If you have nginx error 502,  try to add to nginx config file the following buffer setup:\n\n``` nginx\nhttp {\n\n        .....\n        .....\n\n        proxy_buffer_size 128k;\n        proxy_buffers 4 256k;\n        proxy_busy_buffers_size 256k;\n\n        .....\n```\n. If you have nginx error 502,  try to add to nginx config file the following buffer setup:\n\n``` nginx\nhttp {\n\n        .....\n        .....\n\n        proxy_buffer_size 128k;\n        proxy_buffers 4 256k;\n        proxy_busy_buffers_size 256k;\n\n        .....\n```\n. ",
    "dreampuf": "test pass with [0.2.2 version](https://github.com/omab/python-social-auth/commit/8561dc45680d00a683fa1d91c5ecf63df60e42c9)\n. test pass with [0.2.2 version](https://github.com/omab/python-social-auth/commit/8561dc45680d00a683fa1d91c5ecf63df60e42c9)\n. ",
    "pconerly": "I'm still getting this with the out-of-the-box example. I configured a github app and it successfully comes back from github and prompts me for my email, but then it fails.\n\nI get the same output:\n\n```\n\n../../social/backends/base.py in __init__\n            self.data = self.strategy.request_data() ...\n\u25b6 Local vars\n../../social/strategies/django_strategy.py in request_data\n        return getattr(settings, name)\n    def request_data(self, merge=True):\n        if not self.request:\n            return {}\n        if merge:\n            data = self.request.GET\n            data.update(self.request.POST) ...\n        elif self.request.method == 'POST':\n            data = self.request.POST\n        else:\n            data = self.request.GET\n        return data\n```\n\nmore debug:\n\n```\nAttributeError at /complete/github/\nThis QueryDict instance is immutable\nRequest Method: POST\nRequest URL:    http://peter.dev.flaregun.io/complete/github/\nDjango Version: 1.7.5\nException Type: AttributeError\nException Value:    \nThis QueryDict instance is immutable\nException Location: /Users/peterconerly/.virtualenvs/derp/lib/python2.7/site-packages/django/http/request.py in _assert_mutable, line 349\nPython Executable:  /Users/peterconerly/.virtualenvs/derp/bin/python\nPython Version: 2.7.5\n```\n.  Just kidding---- I upgraded `python-social-auth` via `pip`, but the example uses the module in the parent directory.  a `git pull` fixed me.  Thanks!\n. I'm still getting this with the out-of-the-box example. I configured a github app and it successfully comes back from github and prompts me for my email, but then it fails.\n\nI get the same output:\n\n```\n\n../../social/backends/base.py in __init__\n            self.data = self.strategy.request_data() ...\n\u25b6 Local vars\n../../social/strategies/django_strategy.py in request_data\n        return getattr(settings, name)\n    def request_data(self, merge=True):\n        if not self.request:\n            return {}\n        if merge:\n            data = self.request.GET\n            data.update(self.request.POST) ...\n        elif self.request.method == 'POST':\n            data = self.request.POST\n        else:\n            data = self.request.GET\n        return data\n```\n\nmore debug:\n\n```\nAttributeError at /complete/github/\nThis QueryDict instance is immutable\nRequest Method: POST\nRequest URL:    http://peter.dev.flaregun.io/complete/github/\nDjango Version: 1.7.5\nException Type: AttributeError\nException Value:    \nThis QueryDict instance is immutable\nException Location: /Users/peterconerly/.virtualenvs/derp/lib/python2.7/site-packages/django/http/request.py in _assert_mutable, line 349\nPython Executable:  /Users/peterconerly/.virtualenvs/derp/bin/python\nPython Version: 2.7.5\n```\n.  Just kidding---- I upgraded `python-social-auth` via `pip`, but the example uses the module in the parent directory.  a `git pull` fixed me.  Thanks!\n. ",
    "troygrosfield": "The requests-oathlib has the same problem.  The setup.py is restricting it to version `0.3` to `0.3.1`:\n\n```\nif PY3:\n    requires += ['python3-openid>=3.0.1',\n                 'requests-oauthlib>=0.3.0,<0.3.2']\n```\n\nWhen the latest version of requests-oauthlib is 0.4.2.  Why is this only allowing those two versions of requests-oauthlib?  It seems to run find with the latest version of requests-oauthlib installed.  Can this be changed to work with the latest version as well?\n\n```\nif PY3:\n    requires += ['python3-openid>=3.0.1',\n                 'requests-oauthlib>=0.3.0']\n```\n. What version of python are you running and are you using it with django?  If so, what version?\n\nI blew away my entire local setup and deleted the permissions from facebook.  Then tried it again and got the same error using the v2.3 urls from the [FacebookOAuth2](https://github.com/omab/python-social-auth/blob/master/social/backends/facebook.py#L17) class.\n. @omab, I tested the changes and that fixed the error.  Thanks for the quick turnaround!\n. same issue here.  Will be nice to get that PR merged in.\n. This is still breaking for me as well with `0.2.18` and `django==1.9.5`.\n. The requests-oathlib has the same problem.  The setup.py is restricting it to version `0.3` to `0.3.1`:\n\n```\nif PY3:\n    requires += ['python3-openid>=3.0.1',\n                 'requests-oauthlib>=0.3.0,<0.3.2']\n```\n\nWhen the latest version of requests-oauthlib is 0.4.2.  Why is this only allowing those two versions of requests-oauthlib?  It seems to run find with the latest version of requests-oauthlib installed.  Can this be changed to work with the latest version as well?\n\n```\nif PY3:\n    requires += ['python3-openid>=3.0.1',\n                 'requests-oauthlib>=0.3.0']\n```\n. What version of python are you running and are you using it with django?  If so, what version?\n\nI blew away my entire local setup and deleted the permissions from facebook.  Then tried it again and got the same error using the v2.3 urls from the [FacebookOAuth2](https://github.com/omab/python-social-auth/blob/master/social/backends/facebook.py#L17) class.\n. @omab, I tested the changes and that fixed the error.  Thanks for the quick turnaround!\n. same issue here.  Will be nice to get that PR merged in.\n. This is still breaking for me as well with `0.2.18` and `django==1.9.5`.\n. ",
    "tark-hidden": "How to repeat:\n- Try to login with some auth provider\n- Remove session cookie (and you can to restart uwsgi, if you want)\n- Try to login again\n- Get 502 error\n\nSame here with Pyramid framework.\n. How to repeat:\n- Try to login with some auth provider\n- Remove session cookie (and you can to restart uwsgi, if you want)\n- Try to login again\n- Get 502 error\n\nSame here with Pyramid framework.\n. ",
    "marcussaad": "Having the same issue here when logging through mobile\n. Having the same issue here when logging through mobile\n. ",
    "anzellai": "Any update on this? I have encountered this similar issue, and it raises `AuthStateMissing: Session value state missing.` both on **Facebook** and **Twitter**, it happens across different desktop/mobile devices (Windows/Mac/Android/iOS).\nI am on version `0.2.11`. \n. @ericson-cepeda, interesting and thanks for the tip :+1: \nI am using Django with it and have set to append the url with trailing slash to get other modules playing nice together, so it could well be the culprit like you suggested.\nWill give it a go on Monday and provide updates.\n. @ericson-cepeda, by removing the trailing slash on `provider/` like you suggested, I can confirm the same error hasn't come back since :+1:  \n. Any update on this? I have encountered this similar issue, and it raises `AuthStateMissing: Session value state missing.` both on **Facebook** and **Twitter**, it happens across different desktop/mobile devices (Windows/Mac/Android/iOS).\nI am on version `0.2.11`. \n. @ericson-cepeda, interesting and thanks for the tip :+1: \nI am using Django with it and have set to append the url with trailing slash to get other modules playing nice together, so it could well be the culprit like you suggested.\nWill give it a go on Monday and provide updates.\n. @ericson-cepeda, by removing the trailing slash on `provider/` like you suggested, I can confirm the same error hasn't come back since :+1:  \n. ",
    "TeckFA": "While debugging this adding traces to the server log, I noticed the following sequence of events WRT session state, during Google OAuth2 interactions. (Function names refer to `oauth.py`.) First, there is state:\n\n>  get_or_create_state has state OiVSTFTN1O4CsnYNA72RZDP65QaTDAFm for google-oauth2_state\n\n(The value is returned by `self.strategy.session_get`). Then there is a 302 `/login/google-oauth2/`, and after that, the session state value seems to have gone:\n\n>  get_session_state returning None for google-oauth2_state\n\nIt is `validate_state` that calls `get_session_state` and then raises `AuthStateMissing`, since state is now  gone, indeed. (Could it be that something is not flused to the session/db?)\n\nFTR, earlier in the server log lines there are Python strings for SQL; they seem to lack quotes around the values to be compared (but I'm no expert in these ORM matters!),\n\n> ... WHERE (\"django_session\".\"session_key\" = %s AND \"django_session\".\"expire_date\" > %s)\n. FTR, there are TRAILING_SLASH (urls.py), and APPEND_SLASH (Django, in case). Maybe a [stackoverflow discussion](http://stackoverflow.com/questions/1596552/django-urls-without-a-trailing-slash-do-not-redirect) on redirects applies.\n. While debugging this adding traces to the server log, I noticed the following sequence of events WRT session state, during Google OAuth2 interactions. (Function names refer to `oauth.py`.) First, there is state:\n\n>  get_or_create_state has state OiVSTFTN1O4CsnYNA72RZDP65QaTDAFm for google-oauth2_state\n\n(The value is returned by `self.strategy.session_get`). Then there is a 302 `/login/google-oauth2/`, and after that, the session state value seems to have gone:\n\n>  get_session_state returning None for google-oauth2_state\n\nIt is `validate_state` that calls `get_session_state` and then raises `AuthStateMissing`, since state is now  gone, indeed. (Could it be that something is not flused to the session/db?)\n\nFTR, earlier in the server log lines there are Python strings for SQL; they seem to lack quotes around the values to be compared (but I'm no expert in these ORM matters!),\n\n> ... WHERE (\"django_session\".\"session_key\" = %s AND \"django_session\".\"expire_date\" > %s)\n. FTR, there are TRAILING_SLASH (urls.py), and APPEND_SLASH (Django, in case). Maybe a [stackoverflow discussion](http://stackoverflow.com/questions/1596552/django-urls-without-a-trailing-slash-do-not-redirect) on redirects applies.\n. ",
    "pellaeon": "@TeckFA I hit the same problem, same sympton as you observed. Digging deeper, I found that [cookies are NOT port specific](https://stackoverflow.com/questions/1612177/are-http-cookies-port-specific) , so if you run both OAuth client and provider on the same host, when being redirected to the provider to authenticate, it will overwrite the `sessionid` cookie set by the client, making client unable to retrieve the correct session object after being redirected back by the provider.\n. @TeckFA I hit the same problem, same sympton as you observed. Digging deeper, I found that [cookies are NOT port specific](https://stackoverflow.com/questions/1612177/are-http-cookies-port-specific) , so if you run both OAuth client and provider on the same host, when being redirected to the provider to authenticate, it will overwrite the `sessionid` cookie set by the client, making client unable to retrieve the correct session object after being redirected back by the provider.\n. ",
    "ivictbor": "@pellaeon OMG, thanks a lot!!! You saved my day!\n. @pellaeon OMG, thanks a lot!!! You saved my day!\n. ",
    "petrklus": "I am seeing the same issue on my side as well:\n\n```\nAuthStateMissing: Session value state missing.\n  File \"django/core/handlers/base.py\", line 132, in get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"django/views/decorators/cache.py\", line 57, in _wrapped_view_func\n    response = view_func(request, *args, **kwargs)\n  File \"django/views/decorators/csrf.py\", line 58, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"social/apps/django_app/utils.py\", line 51, in wrapper\n    return func(request, backend, *args, **kwargs)\n  File \"social/apps/django_app/views.py\", line 28, in complete\n    redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\n  File \"social/actions.py\", line 44, in do_complete\n    user = backend.complete(user=user, *args, **kwargs)\n  File \"social/backends/base.py\", line 41, in complete\n    return self.auth_complete(*args, **kwargs)\n  File \"social/utils.py\", line 246, in wrapper\n    return func(*args, **kwargs)\n  File \"social/backends/oauth.py\", line 385, in auth_complete\n    state = self.validate_state()\n  File \"social/backends/oauth.py\", line 88, in validate_state\n    raise AuthStateMissing(self, 'state')\n```\n\nI have tried disabling the trailing slash with the TRAILING_SLASH parameter but the result is the same.\n. I am seeing the same issue on my side as well:\n\n```\nAuthStateMissing: Session value state missing.\n  File \"django/core/handlers/base.py\", line 132, in get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"django/views/decorators/cache.py\", line 57, in _wrapped_view_func\n    response = view_func(request, *args, **kwargs)\n  File \"django/views/decorators/csrf.py\", line 58, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"social/apps/django_app/utils.py\", line 51, in wrapper\n    return func(request, backend, *args, **kwargs)\n  File \"social/apps/django_app/views.py\", line 28, in complete\n    redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\n  File \"social/actions.py\", line 44, in do_complete\n    user = backend.complete(user=user, *args, **kwargs)\n  File \"social/backends/base.py\", line 41, in complete\n    return self.auth_complete(*args, **kwargs)\n  File \"social/utils.py\", line 246, in wrapper\n    return func(*args, **kwargs)\n  File \"social/backends/oauth.py\", line 385, in auth_complete\n    state = self.validate_state()\n  File \"social/backends/oauth.py\", line 88, in validate_state\n    raise AuthStateMissing(self, 'state')\n```\n\nI have tried disabling the trailing slash with the TRAILING_SLASH parameter but the result is the same.\n. ",
    "Pomax": "I am hitting this as well, but I don't know how to act on the information that @pellaeon provides: This is a single Django instance on a single machine, on the same port, so I have a \"client\" page on `http://localhost:8000/pages` that presents the user with a login link:\r\n\r\n```\r\n<a href=\"http://localhost:8000/auth/login/google-oauth2?next=%2Fauth%2Fcomplete%2Fgoogle-oauth2\">click here</a>\r\n```\r\n\r\nI click this, and then run through the google auth process, where google redirects to:\r\n\r\n```\r\nhttp://localhost:8000 /auth/complete/google-oauth2/?state=...&code=...&authuser=0&hd=...&session_state=...&prompt=none HTTP/1.1\r\n```\r\n\r\nWhile the initial redirect clearly has a state value, that disappears somewhere:\r\n\r\n```\r\nInternal Server Error: /auth/complete/google-oauth2/\r\nTraceback (most recent call last):\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/django/core/handlers/exception.py\", line 39, in inner\r\n    response = get_response(request)\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/django/core/handlers/base.py\", line 187, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/django/core/handlers/base.py\", line 185, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/django/views/decorators/cache.py\", line 57, in _wrapped_view_func\r\n    response = view_func(request, *args, **kwargs)\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 51, in wrapper\r\n    return func(request, backend, *args, **kwargs)\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 28, in complete\r\n    redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/social/actions.py\", line 44, in do_complete\r\n    user = backend.complete(user=user, *args, **kwargs)\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/social/backends/base.py\", line 41, in complete\r\n    return self.auth_complete(*args, **kwargs)\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/social/utils.py\", line 246, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/social/backends/oauth.py\", line 385, in auth_complete\r\n    state = self.validate_state()\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/social/backends/oauth.py\", line 86, in validate_state\r\n    raise AuthMissingParameter(self, 'state')\r\nAuthMissingParameter: Missing needed parameter state\r\n[23/Nov/2016 21:37:44] \"GET /auth/complete/google-oauth2/ HTTP/1.1\" 500 98565\r\n```\r\n\r\nNo amount of adding or removing trailing slashes seems to have any effect on this, and this happens *every time*, not intermittently. @lisad is that a thing you might be able to file PR-fix for? Sounds like a good thing to generate a logged warning for (since user error isn't a true error, but a warning message to help user figure out *they* were the problem is super important). I'll echo that: thanks!. I am hitting this as well, but I don't know how to act on the information that @pellaeon provides: This is a single Django instance on a single machine, on the same port, so I have a \"client\" page on `http://localhost:8000/pages` that presents the user with a login link:\r\n\r\n```\r\n<a href=\"http://localhost:8000/auth/login/google-oauth2?next=%2Fauth%2Fcomplete%2Fgoogle-oauth2\">click here</a>\r\n```\r\n\r\nI click this, and then run through the google auth process, where google redirects to:\r\n\r\n```\r\nhttp://localhost:8000 /auth/complete/google-oauth2/?state=...&code=...&authuser=0&hd=...&session_state=...&prompt=none HTTP/1.1\r\n```\r\n\r\nWhile the initial redirect clearly has a state value, that disappears somewhere:\r\n\r\n```\r\nInternal Server Error: /auth/complete/google-oauth2/\r\nTraceback (most recent call last):\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/django/core/handlers/exception.py\", line 39, in inner\r\n    response = get_response(request)\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/django/core/handlers/base.py\", line 187, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/django/core/handlers/base.py\", line 185, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/django/views/decorators/cache.py\", line 57, in _wrapped_view_func\r\n    response = view_func(request, *args, **kwargs)\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 51, in wrapper\r\n    return func(request, backend, *args, **kwargs)\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 28, in complete\r\n    redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/social/actions.py\", line 44, in do_complete\r\n    user = backend.complete(user=user, *args, **kwargs)\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/social/backends/base.py\", line 41, in complete\r\n    return self.auth_complete(*args, **kwargs)\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/social/utils.py\", line 246, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/social/backends/oauth.py\", line 385, in auth_complete\r\n    state = self.validate_state()\r\n  File \"/Users/Pomax/Documents/git/temp/venv/lib/python2.7/site-packages/social/backends/oauth.py\", line 86, in validate_state\r\n    raise AuthMissingParameter(self, 'state')\r\nAuthMissingParameter: Missing needed parameter state\r\n[23/Nov/2016 21:37:44] \"GET /auth/complete/google-oauth2/ HTTP/1.1\" 500 98565\r\n```\r\n\r\nNo amount of adding or removing trailing slashes seems to have any effect on this, and this happens *every time*, not intermittently. @lisad is that a thing you might be able to file PR-fix for? Sounds like a good thing to generate a logged warning for (since user error isn't a true error, but a warning message to help user figure out *they* were the problem is super important). I'll echo that: thanks!. ",
    "lisad": "I just discovered that adding \"SESSION_COOKIE_SECURE = True\" can start this error happening.  Obviously that's pilot error - me telling the site not to accept session cookies unless over HTTPS but trying to use HTTP anyway.  But I imagine it would be hard to diagnose if I hadn't just changed just this one setting (in fact I came looking for a more complete answer anyway). . I just discovered that adding \"SESSION_COOKIE_SECURE = True\" can start this error happening.  Obviously that's pilot error - me telling the site not to accept session cookies unless over HTTPS but trying to use HTTP anyway.  But I imagine it would be hard to diagnose if I hadn't just changed just this one setting (in fact I came looking for a more complete answer anyway). . ",
    "dvdhpkns": "Thanks @lisad, this was my issue!. I was just coming here to open up this issue -- it was driving me crazy. Thanks @matthowland. @omab can you please merge this and cut a new version? \n. I'm having the same issue. @omab until this is resolved we are stuck on PSA.... @omab, yes, I followed the steps. I am currently on python-social-auth==0.2.21, ran migrations and everything is working fine there. I run into trouble, however, when I try to update to the new library. I have install the new libs, updated all my settings, but when I run migrate I get the following:\r\n```\r\ndjango.db.migrations.graph.NodeNotFoundError: Migration social_django.0005_auto_20160727_2333 dependencies reference nonexistent parent node (u'social_django', u'0004_auto_20160423_0400')\r\n```\r\nCould this be related to the renaming of the app and change in the migration here: https://github.com/python-social-auth/social-app-django/commit/08b4fae4352f68a524d51a7e14767e5b093c4a73?\r\n\r\nThanks for your help!. @teeberg is there a way to do this in an automated way so that everyone on my team won't have the same migration issue? . @omab steps to repro:\r\n\r\n1) Setup django project with old python social auth lib v. 0.2.13\r\n2) Upgrade to v. 0.2.21, including running migrations\r\n3) Change to new version of PSA with social-core and social-app-django (latest versions), run migrations. @teeberg @omab if adding these rows is necessary for migration, should we add a migration step to insert those rows? Not sure if that's even possible, but my concern is manually adding those rows and then having every other user of my project having to do the same and every new / future user having to learn this through tribal knowledge. . Thanks @lisad, this was my issue!. I was just coming here to open up this issue -- it was driving me crazy. Thanks @matthowland. @omab can you please merge this and cut a new version? \n. I'm having the same issue. @omab until this is resolved we are stuck on PSA.... @omab, yes, I followed the steps. I am currently on python-social-auth==0.2.21, ran migrations and everything is working fine there. I run into trouble, however, when I try to update to the new library. I have install the new libs, updated all my settings, but when I run migrate I get the following:\r\n```\r\ndjango.db.migrations.graph.NodeNotFoundError: Migration social_django.0005_auto_20160727_2333 dependencies reference nonexistent parent node (u'social_django', u'0004_auto_20160423_0400')\r\n```\r\nCould this be related to the renaming of the app and change in the migration here: https://github.com/python-social-auth/social-app-django/commit/08b4fae4352f68a524d51a7e14767e5b093c4a73?\r\n\r\nThanks for your help!. @teeberg is there a way to do this in an automated way so that everyone on my team won't have the same migration issue? . @omab steps to repro:\r\n\r\n1) Setup django project with old python social auth lib v. 0.2.13\r\n2) Upgrade to v. 0.2.21, including running migrations\r\n3) Change to new version of PSA with social-core and social-app-django (latest versions), run migrations. @teeberg @omab if adding these rows is necessary for migration, should we add a migration step to insert those rows? Not sure if that's even possible, but my concern is manually adding those rows and then having every other user of my project having to do the same and every new / future user having to learn this through tribal knowledge. . ",
    "pnija": "@lisad Applied your solution still getting \"AuthStateMissing: Session value state missing\". How did you solve it in production server?. @AnttiVirtanen , I'm  using django.core.cache.backends.memcached.MemcachedCache as our caching Server. still, the issue persists . @AnttiVirtanen i'm  using \"django.contrib.sessions.backends.cached_db\" as our session engine . @lisad Applied your solution still getting \"AuthStateMissing: Session value state missing\". How did you solve it in production server?. @AnttiVirtanen , I'm  using django.core.cache.backends.memcached.MemcachedCache as our caching Server. still, the issue persists . @AnttiVirtanen i'm  using \"django.contrib.sessions.backends.cached_db\" as our session engine . ",
    "AnttiVirtanen": "Struggled with the exact problem for days, turned out that reason for missing state was caused by the caching. We had Django's LocMemCache on use (django.core.cache.backends.locmem.LocMemCache), changed it to MemcachedCache (django.core.cache.backends.memcached.MemcachedCache) and the problem disappeared. . @pnija Well that's fairly strange. Are you also using session based caching? And if so, which session engine? In case you are using django.contrib.sessions.backends.cache that might cause the problem too, quoted from django documentation \"... session data may not be persistent\".. Struggled with the exact problem for days, turned out that reason for missing state was caused by the caching. We had Django's LocMemCache on use (django.core.cache.backends.locmem.LocMemCache), changed it to MemcachedCache (django.core.cache.backends.memcached.MemcachedCache) and the problem disappeared. . @pnija Well that's fairly strange. Are you also using session based caching? And if so, which session engine? In case you are using django.contrib.sessions.backends.cache that might cause the problem too, quoted from django documentation \"... session data may not be persistent\".. ",
    "jettify": "Thanks. That is why no tornado  entry in documentation. I'll try to write something in async way)\n. Thanks. That is why no tornado  entry in documentation. I'll try to write something in async way)\n. ",
    "flesser": "Thanks for merging -- and cleaning my code. Sorry for the leftover debug print... _ehem_\n. Thanks for merging -- and cleaning my code. Sorry for the leftover debug print... _ehem_\n. ",
    "chipmunk1101": "Got it. Thanks a lot. I was looking this exact thing. I was not able to find this in the docs. \n. Got it. Thanks a lot. I was looking this exact thing. I was not able to find this in the docs. \n. ",
    "sohamnavadiya": "I am trying to upgrade django 1.7 to 1.9.11 and after upgrade it, I am getting below error.\r\n\r\n\r\n\r\n```\r\nfrom social_django.models import AbstractUserSocialAuth, UserSocialAuth, Nonce, Association, Code, DjangoStorage\r\nImportError: No module named social_django.models\r\n\r\n``` . @omab I have installed **social-auth-app-django (0.1.0)**\r\nI fixed above error. But not I am getting below error.\r\n```\r\n \"INSTALLED_APPS.\" % (module, name)\r\nRuntimeError: Model class social_django.models.UserSocialAuth doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.\r\n\r\n```\r\n. @omab Now I am getting below exception stack.\r\n\r\n```\r\nFile \"/usr/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/home/Documents/django_upgrade_venv/cubii_upgrade_1_9/local/lib/python2.7/site-packages/social_django/models.py\", line 30, in <module>\r\n    class AbstractUserSocialAuth(models.Model, DjangoUserMixin):\r\n  File \"/home/Documents/django_upgrade_venv/cubii_upgrade_1_9/local/lib/python2.7/site-packages/django/db/models/base.py\", line 105, in __new__\r\n    app_config = apps.get_containing_app_config(module)\r\n  File \"/home/Documents/django_upgrade_venv/cubii_upgrade_1_9/local/lib/python2.7/site-packages/django/apps/registry.py\", line 237, in get_containing_app_config\r\n    self.check_apps_ready()\r\n  File \"/home/Documents/django_upgrade_venv/cubii_upgrade_1_9/local/lib/python2.7/site-packages/django/apps/registry.py\", line 124, in check_apps_ready\r\n    raise AppRegistryNotReady(\"Apps aren't loaded yet.\")\r\ndjango.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.\r\n```\r\n. @omab I solved above issue. By the way thanks for quick reply. I really appreciate your work.. I am trying to upgrade django 1.7 to 1.9.11 and after upgrade it, I am getting below error.\r\n\r\n\r\n\r\n```\r\nfrom social_django.models import AbstractUserSocialAuth, UserSocialAuth, Nonce, Association, Code, DjangoStorage\r\nImportError: No module named social_django.models\r\n\r\n``` . @omab I have installed **social-auth-app-django (0.1.0)**\r\nI fixed above error. But not I am getting below error.\r\n```\r\n \"INSTALLED_APPS.\" % (module, name)\r\nRuntimeError: Model class social_django.models.UserSocialAuth doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.\r\n\r\n```\r\n. @omab Now I am getting below exception stack.\r\n\r\n```\r\nFile \"/usr/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/home/Documents/django_upgrade_venv/cubii_upgrade_1_9/local/lib/python2.7/site-packages/social_django/models.py\", line 30, in <module>\r\n    class AbstractUserSocialAuth(models.Model, DjangoUserMixin):\r\n  File \"/home/Documents/django_upgrade_venv/cubii_upgrade_1_9/local/lib/python2.7/site-packages/django/db/models/base.py\", line 105, in __new__\r\n    app_config = apps.get_containing_app_config(module)\r\n  File \"/home/Documents/django_upgrade_venv/cubii_upgrade_1_9/local/lib/python2.7/site-packages/django/apps/registry.py\", line 237, in get_containing_app_config\r\n    self.check_apps_ready()\r\n  File \"/home/Documents/django_upgrade_venv/cubii_upgrade_1_9/local/lib/python2.7/site-packages/django/apps/registry.py\", line 124, in check_apps_ready\r\n    raise AppRegistryNotReady(\"Apps aren't loaded yet.\")\r\ndjango.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.\r\n```\r\n. @omab I solved above issue. By the way thanks for quick reply. I really appreciate your work.. ",
    "mandx": "This is actually useful right now, if one tries to refer to some model using `django.apps.apps.get_model()`. If the `app_label` attribute of the AppConfig instance is not defined, it is created using the last component of the `name` attribute, which in this case, is turns out to be the string `'default'`. So if we need to refer to one of this app's model, we need to call `get_model('default', 'UserSocialAuth')`, which gives no clear indication of which of the installed apps is this `\"default\"` referring to.\n. This is actually useful right now, if one tries to refer to some model using `django.apps.apps.get_model()`. If the `app_label` attribute of the AppConfig instance is not defined, it is created using the last component of the `name` attribute, which in this case, is turns out to be the string `'default'`. So if we need to refer to one of this app's model, we need to call `get_model('default', 'UserSocialAuth')`, which gives no clear indication of which of the installed apps is this `\"default\"` referring to.\n. ",
    "mnaglee": "Fantastic!  I had my eye on SOCIAL_AUTH_STORAGE but wasn't sure.  Thanks!  I've got most of a solution put together, but I'm running into an error.  Can you confirm I'm going about this the right way?  I've tried to override as little as possible...\n\n```\nimport six\n\nfrom django.contrib.sites.models import Site\nfrom django.conf import settings\n\nfrom social.apps.django_app.default.models import DjangoUserMixin as SocialAUth_DjangoUserMixin, DjangoStorage as SocialAuth_DjangoStorage\n\n\nclass SocialAuthUserMixinOverride(SocialAUth_DjangoUserMixin):\n    \"\"\"\n    Override social auth storage class' user methods to be site specific\n    \"\"\"\n\n    @classmethod\n    def user_exists(cls, *args, **kwargs):\n        # filter by site_id\n        kwargs.update({'site': Site.objects.get(pk=settings.SITE_ID)})\n        super(SocialAuthUserMixinOverride).user_exists(cls, *args, **kwargs)\n\n    @classmethod\n    def create_user(cls, *args, **kwargs):\n        # filter by site_id\n        kwargs.update({'site': Site.objects.get(pk=settings.SITE_ID)})\n        super(SocialAuthUserMixinOverride).create_user(cls, *args, **kwargs)\n\n    @classmethod\n    def get_user(cls, pk=None, **kwargs):\n        # filter by site_id\n        kwargs.update({'site': Site.objects.get(pk=settings.SITE_ID)})\n        super(SocialAuthUserMixinOverride).get_user(cls, pk=pk, **kwargs)\n\n    @classmethod\n    def get_users_by_email(cls, email):\n        user_model = cls.user_model()\n        email_field = getattr(user_model, 'EMAIL_FIELD', 'email')\n        return user_model.objects.filter(**{email_field + '__iexact': email,\n                                            # filter by site_id\n                                            'site': Site.objects.get(pk=settings.SITE_ID)})\n\n    @classmethod\n    def get_social_auth(cls, provider, uid):\n        if not isinstance(uid, six.string_types):\n            uid = str(uid)\n        try:\n            return cls.objects.get(provider=provider, uid=uid,\n                                    # filter by site_id\n                                    user__site=Site.objects.get(pk=settings.SITE_ID))\n        except cls.DoesNotExist:\n            return None\n\n\nclass SocialAuthStorageOverride(SocialAuth_DjangoStorage):\n    \"\"\"\n    Override social auth storage class' user methods to be site specific\n    \"\"\"\n    user = SocialAuthUserMixinOverride\n```\n\nIn settings.py: \n`SOCIAL_AUTH_STORAGE = 'realtors.apps.registration.models.SocialAuthStorageOverride'\n`\n\nWhen attempting to login I'm getting \"type object 'SocialAuthUserMixinOverride' has no attribute 'DoesNotExist'\", pointing to the line \"except cls.DoesNotExist:\" in the function \"get_social_auth\".  If you can point me in the right direction I'd really appreciate it.\n. Thanks again for all your help!  I tried what you wrote above, but it didn't have access to the field definitions.  Here's what I've got now:\n\n```\nfrom social.utils import setting_name\nfrom social.apps.django_app.default.models import DjangoUserMixin as SocialAUth_DjangoUserMixin, DjangoStorage as SocialAuth_DjangoStorage, UserSocialAuth as SocialAuth_UserSocialAuth\nfrom social.apps.django_app.default.fields import JSONField\n\nUSER_MODEL = getattr(settings, setting_name('USER_MODEL'), None) or \\\n             getattr(settings, 'AUTH_USER_MODEL', None) or \\\n             'auth.User'\nUID_LENGTH = getattr(settings, setting_name('UID_LENGTH'), 255)\nNONCE_SERVER_URL_LENGTH = getattr(\n    settings, setting_name('NONCE_SERVER_URL_LENGTH'), 255)\nASSOCIATION_SERVER_URL_LENGTH = getattr(\n    settings, setting_name('ASSOCIATION_SERVER_URL_LENGTH'), 255)\nASSOCIATION_HANDLE_LENGTH = getattr(\n    settings, setting_name('ASSOCIATION_HANDLE_LENGTH'), 255)\n\nclass SocialAuthUserMixinOverride(SocialAUth_DjangoUserMixin):\n    \"\"\"\n    Override social auth storage class' user methods to be site specific\n    \"\"\"\n\n    @classmethod\n    def user_exists(cls, *args, **kwargs):\n        \"\"\"\n        Return True/False if a User instance exists with the given arguments.\n        Arguments are directly passed to filter() manager method.\n        \"\"\"\n        logger.info('Customer user_exists method triggered.')\n        # filter by site_id\n        kwargs.update({'site': Site.objects.get(pk=settings.SITE_ID)})\n        if 'username' in kwargs:\n            kwargs[cls.username_field()] = kwargs.pop('username')\n        return cls.user_model().objects.filter(*args, **kwargs).count() > 0\n\n    @classmethod\n    def create_user(cls, *args, **kwargs):\n        logger.info('Customer create_user method triggered.')\n        # filter by site_id\n        kwargs.update({'site': Site.objects.get(pk=settings.SITE_ID)})\n        username_field = cls.username_field()\n        if 'username' in kwargs and username_field not in kwargs:\n            kwargs[username_field] = kwargs.pop('username')\n        return cls.user_model().objects.create_user(*args, **kwargs)\n\n    @classmethod\n    def get_user(cls, pk=None, **kwargs):\n        logger.info('Customer get_user method triggered.')\n        # filter by site_id\n        kwargs.update({'site': Site.objects.get(pk=settings.SITE_ID)})\n        if pk:\n            kwargs = {'pk': pk}\n        try:\n            return cls.user_model().objects.get(**kwargs)\n        except cls.user_model().DoesNotExist:\n            return None\n\n    @classmethod\n    def get_users_by_email(cls, email):\n        logger.info('Customer get_users_by_email method triggered.')\n        user_model = cls.user_model()\n        email_field = getattr(user_model, 'EMAIL_FIELD', 'email')\n        return user_model.objects.filter(**{email_field + '__iexact': email,\n                                            # filter by site_id\n                                            'site': Site.objects.get(pk=settings.SITE_ID)})\n\n    @classmethod\n    def get_social_auth(cls, provider, uid):\n        logger.info('Customer get_social_auth method triggered.  cls = %s' % cls)\n        if not isinstance(uid, six.string_types):\n            uid = str(uid)\n        try:\n            return cls.objects.get(provider=provider, uid=uid,\n                                    # filter by site_id\n                                    user__site=Site.objects.get(pk=settings.SITE_ID))\n        except cls.DoesNotExist:\n            return None\n\n\n\nclass UserSocialAuth(models.Model, SocialAuthUserMixinOverride):\n    \"\"\"Social Auth association model\"\"\"\n    user = models.ForeignKey(USER_MODEL, related_name='social_auth_user')\n    provider = models.CharField(max_length=32)\n    uid = models.CharField(max_length=UID_LENGTH)\n    extra_data = JSONField()\n\n    def __str__(self):\n        return str(self.user)\n\n    class Meta:\n        \"\"\"Meta data\"\"\"\n        unique_together = ('provider', 'uid', 'user')\n        db_table = 'social_auth_usersocialauth'\n\n    @classmethod\n    def get_social_auth(cls, provider, uid):\n        try:\n            return cls.objects.select_related('user').get(provider=provider,\n                                                        uid=uid,\n                                                        # filter by site_id\n                                                        user__site=Site.objects.get(pk=settings.SITE_ID))\n        except UserSocialAuth.DoesNotExist:\n            return None\n\n    @classmethod\n    def username_max_length(cls):\n        username_field = cls.username_field()\n        field = UserSocialAuth.user_model()._meta.get_field(username_field)\n        return field.max_length\n\n    @classmethod\n    def user_model(cls):\n        user_model = UserSocialAuth._meta.get_field('user').rel.to\n        if isinstance(user_model, six.string_types):\n            app_label, model_name = user_model.split('.')\n            return models.get_model(app_label, model_name)\n        return user_model\n\n\nclass SocialAuthStorageOverride(SocialAuth_DjangoStorage):\n    \"\"\"\n    Override social auth storage class' user methods to be site specific\n    \"\"\"\n    user = UserSocialAuth\n```\n\nThis seems to work okay for accounts that already exist, but if I attempt to create a new social auth account the request just spins, while cpu and memory usage climbs steadily to max on the server.\n\nIn a spirit of overriding as little as possible, I also tried inheriting from the mixin and creating a proxy model for UserSocialAuth, only overriding what I absolutely had to, like this:\n\n```\nclass SocialAuthUserMixinOverride(SocialAUth_DjangoUserMixin):\n    \"\"\"\n    Override social auth storage class' user methods to be site specific\n    \"\"\"\n\n    @classmethod\n    def user_exists(cls, *args, **kwargs):\n        logger.info('Customer user_exists method triggered.')\n        # filter by site_id\n        kwargs.update({'site': Site.objects.get(pk=settings.SITE_ID)})\n        super(SocialAuthUserMixinOverride).user_exists(cls, *args, **kwargs)\n\n    @classmethod\n    def create_user(cls, *args, **kwargs):\n        logger.info('Customer create_user method triggered.')\n        # filter by site_id\n        kwargs.update({'site': Site.objects.get(pk=settings.SITE_ID)})\n        super(SocialAuthUserMixinOverride).create_user(cls, *args, **kwargs)\n\n    @classmethod\n    def get_user(cls, pk=None, **kwargs):\n        logger.info('Customer get_user method triggered.')\n        # filter by site_id\n        kwargs.update({'site': Site.objects.get(pk=settings.SITE_ID)})\n        super(SocialAuthUserMixinOverride).get_user(cls, pk=pk, **kwargs)\n\n    @classmethod\n    def get_users_by_email(cls, email):\n        logger.info('Customer get_users_by_email method triggered.')\n        user_model = cls.user_model()\n        email_field = getattr(user_model, 'EMAIL_FIELD', 'email')\n        return user_model.objects.filter(**{email_field + '__iexact': email,\n                                            # filter by site_id\n                                            'site': Site.objects.get(pk=settings.SITE_ID)})\n\n    @classmethod\n    def get_social_auth(cls, provider, uid):\n        logger.info('Customer get_social_auth method triggered.  cls = %s' % cls)\n        if not isinstance(uid, six.string_types):\n            uid = str(uid)\n        try:\n            return cls.objects.get(provider=provider, uid=uid,\n                                    # filter by site_id\n                                    user__site=Site.objects.get(pk=settings.SITE_ID))\n        except cls.DoesNotExist:\n            return None\n\n\n\nclass UserSocialAuth(SocialAuth_UserSocialAuth):\n    \"\"\"Social Auth association model\"\"\"\n\n    class Meta:\n        \"\"\"Meta data\"\"\"\n        proxy = True\n        unique_together = ('provider', 'uid', 'user')\n        db_table = 'social_auth_usersocialauth'\n\n    @classmethod\n    def get_social_auth(cls, provider, uid):\n        try:\n            return cls.objects.select_related('user').get(provider=provider,\n                                                        uid=uid,\n                                                        # filter by site_id\n                                                        user__site=Site.objects.get(pk=settings.SITE_ID))\n        except UserSocialAuth.DoesNotExist:\n            return None\n\nclass SocialAuthStorageOverride(SocialAuth_DjangoStorage):\n    \"\"\"\n    Override social auth storage class' user methods to be site specific\n    \"\"\"\n    user = UserSocialAuth\n```\n\nThe UserSocialAuth definition seems to work just as well, but I get \" 'super' object has no attribute 'get_user' \" when it tries to use the get_user method.  \n\nThanks again for your help... gotta be getting close. :)\n. Fantastic!  I had my eye on SOCIAL_AUTH_STORAGE but wasn't sure.  Thanks!  I've got most of a solution put together, but I'm running into an error.  Can you confirm I'm going about this the right way?  I've tried to override as little as possible...\n\n```\nimport six\n\nfrom django.contrib.sites.models import Site\nfrom django.conf import settings\n\nfrom social.apps.django_app.default.models import DjangoUserMixin as SocialAUth_DjangoUserMixin, DjangoStorage as SocialAuth_DjangoStorage\n\n\nclass SocialAuthUserMixinOverride(SocialAUth_DjangoUserMixin):\n    \"\"\"\n    Override social auth storage class' user methods to be site specific\n    \"\"\"\n\n    @classmethod\n    def user_exists(cls, *args, **kwargs):\n        # filter by site_id\n        kwargs.update({'site': Site.objects.get(pk=settings.SITE_ID)})\n        super(SocialAuthUserMixinOverride).user_exists(cls, *args, **kwargs)\n\n    @classmethod\n    def create_user(cls, *args, **kwargs):\n        # filter by site_id\n        kwargs.update({'site': Site.objects.get(pk=settings.SITE_ID)})\n        super(SocialAuthUserMixinOverride).create_user(cls, *args, **kwargs)\n\n    @classmethod\n    def get_user(cls, pk=None, **kwargs):\n        # filter by site_id\n        kwargs.update({'site': Site.objects.get(pk=settings.SITE_ID)})\n        super(SocialAuthUserMixinOverride).get_user(cls, pk=pk, **kwargs)\n\n    @classmethod\n    def get_users_by_email(cls, email):\n        user_model = cls.user_model()\n        email_field = getattr(user_model, 'EMAIL_FIELD', 'email')\n        return user_model.objects.filter(**{email_field + '__iexact': email,\n                                            # filter by site_id\n                                            'site': Site.objects.get(pk=settings.SITE_ID)})\n\n    @classmethod\n    def get_social_auth(cls, provider, uid):\n        if not isinstance(uid, six.string_types):\n            uid = str(uid)\n        try:\n            return cls.objects.get(provider=provider, uid=uid,\n                                    # filter by site_id\n                                    user__site=Site.objects.get(pk=settings.SITE_ID))\n        except cls.DoesNotExist:\n            return None\n\n\nclass SocialAuthStorageOverride(SocialAuth_DjangoStorage):\n    \"\"\"\n    Override social auth storage class' user methods to be site specific\n    \"\"\"\n    user = SocialAuthUserMixinOverride\n```\n\nIn settings.py: \n`SOCIAL_AUTH_STORAGE = 'realtors.apps.registration.models.SocialAuthStorageOverride'\n`\n\nWhen attempting to login I'm getting \"type object 'SocialAuthUserMixinOverride' has no attribute 'DoesNotExist'\", pointing to the line \"except cls.DoesNotExist:\" in the function \"get_social_auth\".  If you can point me in the right direction I'd really appreciate it.\n. Thanks again for all your help!  I tried what you wrote above, but it didn't have access to the field definitions.  Here's what I've got now:\n\n```\nfrom social.utils import setting_name\nfrom social.apps.django_app.default.models import DjangoUserMixin as SocialAUth_DjangoUserMixin, DjangoStorage as SocialAuth_DjangoStorage, UserSocialAuth as SocialAuth_UserSocialAuth\nfrom social.apps.django_app.default.fields import JSONField\n\nUSER_MODEL = getattr(settings, setting_name('USER_MODEL'), None) or \\\n             getattr(settings, 'AUTH_USER_MODEL', None) or \\\n             'auth.User'\nUID_LENGTH = getattr(settings, setting_name('UID_LENGTH'), 255)\nNONCE_SERVER_URL_LENGTH = getattr(\n    settings, setting_name('NONCE_SERVER_URL_LENGTH'), 255)\nASSOCIATION_SERVER_URL_LENGTH = getattr(\n    settings, setting_name('ASSOCIATION_SERVER_URL_LENGTH'), 255)\nASSOCIATION_HANDLE_LENGTH = getattr(\n    settings, setting_name('ASSOCIATION_HANDLE_LENGTH'), 255)\n\nclass SocialAuthUserMixinOverride(SocialAUth_DjangoUserMixin):\n    \"\"\"\n    Override social auth storage class' user methods to be site specific\n    \"\"\"\n\n    @classmethod\n    def user_exists(cls, *args, **kwargs):\n        \"\"\"\n        Return True/False if a User instance exists with the given arguments.\n        Arguments are directly passed to filter() manager method.\n        \"\"\"\n        logger.info('Customer user_exists method triggered.')\n        # filter by site_id\n        kwargs.update({'site': Site.objects.get(pk=settings.SITE_ID)})\n        if 'username' in kwargs:\n            kwargs[cls.username_field()] = kwargs.pop('username')\n        return cls.user_model().objects.filter(*args, **kwargs).count() > 0\n\n    @classmethod\n    def create_user(cls, *args, **kwargs):\n        logger.info('Customer create_user method triggered.')\n        # filter by site_id\n        kwargs.update({'site': Site.objects.get(pk=settings.SITE_ID)})\n        username_field = cls.username_field()\n        if 'username' in kwargs and username_field not in kwargs:\n            kwargs[username_field] = kwargs.pop('username')\n        return cls.user_model().objects.create_user(*args, **kwargs)\n\n    @classmethod\n    def get_user(cls, pk=None, **kwargs):\n        logger.info('Customer get_user method triggered.')\n        # filter by site_id\n        kwargs.update({'site': Site.objects.get(pk=settings.SITE_ID)})\n        if pk:\n            kwargs = {'pk': pk}\n        try:\n            return cls.user_model().objects.get(**kwargs)\n        except cls.user_model().DoesNotExist:\n            return None\n\n    @classmethod\n    def get_users_by_email(cls, email):\n        logger.info('Customer get_users_by_email method triggered.')\n        user_model = cls.user_model()\n        email_field = getattr(user_model, 'EMAIL_FIELD', 'email')\n        return user_model.objects.filter(**{email_field + '__iexact': email,\n                                            # filter by site_id\n                                            'site': Site.objects.get(pk=settings.SITE_ID)})\n\n    @classmethod\n    def get_social_auth(cls, provider, uid):\n        logger.info('Customer get_social_auth method triggered.  cls = %s' % cls)\n        if not isinstance(uid, six.string_types):\n            uid = str(uid)\n        try:\n            return cls.objects.get(provider=provider, uid=uid,\n                                    # filter by site_id\n                                    user__site=Site.objects.get(pk=settings.SITE_ID))\n        except cls.DoesNotExist:\n            return None\n\n\n\nclass UserSocialAuth(models.Model, SocialAuthUserMixinOverride):\n    \"\"\"Social Auth association model\"\"\"\n    user = models.ForeignKey(USER_MODEL, related_name='social_auth_user')\n    provider = models.CharField(max_length=32)\n    uid = models.CharField(max_length=UID_LENGTH)\n    extra_data = JSONField()\n\n    def __str__(self):\n        return str(self.user)\n\n    class Meta:\n        \"\"\"Meta data\"\"\"\n        unique_together = ('provider', 'uid', 'user')\n        db_table = 'social_auth_usersocialauth'\n\n    @classmethod\n    def get_social_auth(cls, provider, uid):\n        try:\n            return cls.objects.select_related('user').get(provider=provider,\n                                                        uid=uid,\n                                                        # filter by site_id\n                                                        user__site=Site.objects.get(pk=settings.SITE_ID))\n        except UserSocialAuth.DoesNotExist:\n            return None\n\n    @classmethod\n    def username_max_length(cls):\n        username_field = cls.username_field()\n        field = UserSocialAuth.user_model()._meta.get_field(username_field)\n        return field.max_length\n\n    @classmethod\n    def user_model(cls):\n        user_model = UserSocialAuth._meta.get_field('user').rel.to\n        if isinstance(user_model, six.string_types):\n            app_label, model_name = user_model.split('.')\n            return models.get_model(app_label, model_name)\n        return user_model\n\n\nclass SocialAuthStorageOverride(SocialAuth_DjangoStorage):\n    \"\"\"\n    Override social auth storage class' user methods to be site specific\n    \"\"\"\n    user = UserSocialAuth\n```\n\nThis seems to work okay for accounts that already exist, but if I attempt to create a new social auth account the request just spins, while cpu and memory usage climbs steadily to max on the server.\n\nIn a spirit of overriding as little as possible, I also tried inheriting from the mixin and creating a proxy model for UserSocialAuth, only overriding what I absolutely had to, like this:\n\n```\nclass SocialAuthUserMixinOverride(SocialAUth_DjangoUserMixin):\n    \"\"\"\n    Override social auth storage class' user methods to be site specific\n    \"\"\"\n\n    @classmethod\n    def user_exists(cls, *args, **kwargs):\n        logger.info('Customer user_exists method triggered.')\n        # filter by site_id\n        kwargs.update({'site': Site.objects.get(pk=settings.SITE_ID)})\n        super(SocialAuthUserMixinOverride).user_exists(cls, *args, **kwargs)\n\n    @classmethod\n    def create_user(cls, *args, **kwargs):\n        logger.info('Customer create_user method triggered.')\n        # filter by site_id\n        kwargs.update({'site': Site.objects.get(pk=settings.SITE_ID)})\n        super(SocialAuthUserMixinOverride).create_user(cls, *args, **kwargs)\n\n    @classmethod\n    def get_user(cls, pk=None, **kwargs):\n        logger.info('Customer get_user method triggered.')\n        # filter by site_id\n        kwargs.update({'site': Site.objects.get(pk=settings.SITE_ID)})\n        super(SocialAuthUserMixinOverride).get_user(cls, pk=pk, **kwargs)\n\n    @classmethod\n    def get_users_by_email(cls, email):\n        logger.info('Customer get_users_by_email method triggered.')\n        user_model = cls.user_model()\n        email_field = getattr(user_model, 'EMAIL_FIELD', 'email')\n        return user_model.objects.filter(**{email_field + '__iexact': email,\n                                            # filter by site_id\n                                            'site': Site.objects.get(pk=settings.SITE_ID)})\n\n    @classmethod\n    def get_social_auth(cls, provider, uid):\n        logger.info('Customer get_social_auth method triggered.  cls = %s' % cls)\n        if not isinstance(uid, six.string_types):\n            uid = str(uid)\n        try:\n            return cls.objects.get(provider=provider, uid=uid,\n                                    # filter by site_id\n                                    user__site=Site.objects.get(pk=settings.SITE_ID))\n        except cls.DoesNotExist:\n            return None\n\n\n\nclass UserSocialAuth(SocialAuth_UserSocialAuth):\n    \"\"\"Social Auth association model\"\"\"\n\n    class Meta:\n        \"\"\"Meta data\"\"\"\n        proxy = True\n        unique_together = ('provider', 'uid', 'user')\n        db_table = 'social_auth_usersocialauth'\n\n    @classmethod\n    def get_social_auth(cls, provider, uid):\n        try:\n            return cls.objects.select_related('user').get(provider=provider,\n                                                        uid=uid,\n                                                        # filter by site_id\n                                                        user__site=Site.objects.get(pk=settings.SITE_ID))\n        except UserSocialAuth.DoesNotExist:\n            return None\n\nclass SocialAuthStorageOverride(SocialAuth_DjangoStorage):\n    \"\"\"\n    Override social auth storage class' user methods to be site specific\n    \"\"\"\n    user = UserSocialAuth\n```\n\nThe UserSocialAuth definition seems to work just as well, but I get \" 'super' object has no attribute 'get_user' \" when it tries to use the get_user method.  \n\nThanks again for your help... gotta be getting close. :)\n. ",
    "boxconnect": "Has this been solved?  I am facing the same issue. @CrimsonRay: Could you provide your pipeline code?\n. Has this been solved?  I am facing the same issue. @CrimsonRay: Could you provide your pipeline code?\n. ",
    "johtso": "How does the pull request look? I think it's definitely an improvement to add this consistency to the signature of the pipeline functions, the first step in the pipeline being a bit of an odd one out currently.\n. @omab sorry, somehow managed to cut off the last line, updated.\n. Awesome! :+1: \n. How does the pull request look? I think it's definitely an improvement to add this consistency to the signature of the pipeline functions, the first step in the pipeline being a bit of an odd one out currently.\n. @omab sorry, somehow managed to cut off the last line, updated.\n. Awesome! :+1: \n. ",
    "tclancy": "Did you upgrade from the `django-social-auth` app? I'm doing that for an application that's new to me and seeing the same issue, but now I notice the migration for this app [contains an additional table](https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/default/south_migrations/0001_initial.py#L45) `social_auth_code` that may do the connections.\n. This was the item you helped me with. Just needed to define:\n\n```\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'social.pipeline.social_auth.associate_by_email',\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details'\n)\n```\n\nfor Google+ anyway.\n. Did you upgrade from the `django-social-auth` app? I'm doing that for an application that's new to me and seeing the same issue, but now I notice the migration for this app [contains an additional table](https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/default/south_migrations/0001_initial.py#L45) `social_auth_code` that may do the connections.\n. This was the item you helped me with. Just needed to define:\n\n```\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'social.pipeline.social_auth.associate_by_email',\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details'\n)\n```\n\nfor Google+ anyway.\n. ",
    "stushurik": "I changed python 2.7.6 to 2.7.9 and still get error\n\nAuthFailed at /complete/google-oauth2/\nAuthentication failed: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:581)\n\nThe error is raised when calling [requests](https://github.com/omab/python-social-auth/blob/master/social/backends/base.py#L222). with url https://accounts.google.com/o/oauth2/token.\n\nI don`t understand why google cert is not a valid \n. @a1Gupta  I think you should try @omab `s solution.\n. I changed python 2.7.6 to 2.7.9 and still get error\n\nAuthFailed at /complete/google-oauth2/\nAuthentication failed: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:581)\n\nThe error is raised when calling [requests](https://github.com/omab/python-social-auth/blob/master/social/backends/base.py#L222). with url https://accounts.google.com/o/oauth2/token.\n\nI don`t understand why google cert is not a valid \n. @a1Gupta  I think you should try @omab `s solution.\n. ",
    "a1Gupta": "@stushurik How did you resolve the issue ? I am getting the same error with Django 1.8 and Python 2.7.6\n. I tried that but that's not working!\n. I changed the requests version from 2.8 to 2.7.0 and it worked for me!\n. @omab Is it fixed now ? @maxsocl Can you please share the solution/fork you are using. I was using this https://gist.github.com/SaneMethod/b30156a3705ce9e944cd#file-django-python-social-auth-monkey-py till now , but it fails if session_key gets deleted/changed in the database. Django updates session_key each time the session data changes. So in case any other user logs in the same browser the session_key gets changed and user can't verify with the email link.\n. You can follow Step 3 of this blog, http://artandlogic.com/2015/07/email-validation-with-django-and-python-social-auth/ .Even though it's not a perfect solution it will work in most cases. It will fail if session_key gets deleted/changed in the database. Django updates session_key each time the session data changes. So in case any other user logs in the same browser the session_key gets changed and user can't verify with the email link. I am looking for some solution to fix this.\n. Did you find fix for this ?\n. Issues #577 #830 #702 might be relevant\n. There nothing wrong in this. Read this https://developers.facebook.com/blog/post/552/\n\n> Change in Session Redirect Behavior\n> This week, we started adding a fragment #_=_ to the redirect_uri when this field is left blank. Please ensure that your app can handle this behavior.\n. @stushurik How did you resolve the issue ? I am getting the same error with Django 1.8 and Python 2.7.6\n. I tried that but that's not working!\n. I changed the requests version from 2.8 to 2.7.0 and it worked for me!\n. @omab Is it fixed now ? @maxsocl Can you please share the solution/fork you are using. I was using this https://gist.github.com/SaneMethod/b30156a3705ce9e944cd#file-django-python-social-auth-monkey-py till now , but it fails if session_key gets deleted/changed in the database. Django updates session_key each time the session data changes. So in case any other user logs in the same browser the session_key gets changed and user can't verify with the email link.\n. You can follow Step 3 of this blog, http://artandlogic.com/2015/07/email-validation-with-django-and-python-social-auth/ .Even though it's not a perfect solution it will work in most cases. It will fail if session_key gets deleted/changed in the database. Django updates session_key each time the session data changes. So in case any other user logs in the same browser the session_key gets changed and user can't verify with the email link. I am looking for some solution to fix this.\n. Did you find fix for this ?\n. Issues #577 #830 #702 might be relevant\n. There nothing wrong in this. Read this https://developers.facebook.com/blog/post/552/\n\n> Change in Session Redirect Behavior\n> This week, we started adding a fragment #_=_ to the redirect_uri when this field is left blank. Please ensure that your app can handle this behavior.\n. ",
    "nicolaspanel": "@a1Gupta : I have the same problem. Have you found a solution/workaround?\n. @a1Gupta : I have the same problem. Have you found a solution/workaround?\n. ",
    "varche1": "+1!\n. +1!\n. ",
    "zhang-z": "`pip uninstall -y certifi && pip install certifi==2015.04.28` solved the problem for me.\nReference: http://stackoverflow.com/questions/34646942/ssl3-get-server-certificate-certificate-verify-failed-on-python-when-requesting\n. `pip uninstall -y certifi && pip install certifi==2015.04.28` solved the problem for me.\nReference: http://stackoverflow.com/questions/34646942/ssl3-get-server-certificate-certificate-verify-failed-on-python-when-requesting\n. ",
    "hack2learn": "@zhang-z this fixed it for me too.\n. @zhang-z this fixed it for me too.\n. ",
    "aviars": "I have tried this on Python2 and Python3 Ubuntu 14 and Ubuntu 16.  I m still getting this error or a Bad Handshake \" error depending on what version of python-social-auth im using.  I have tried a number of fixes and still coming up the same error. I'm assuming there is an issue somewhere between the keyboard and the chair.  This is not clearly an issue with python-social-auth, but more of a request for information about connecting my own oAuth provider (Django oAuth Toolkit) and python-social-auth.  So I am closing this as an issue, but if anyone has info on this topic I would be very grateful.\n. I have tried this on Python2 and Python3 Ubuntu 14 and Ubuntu 16.  I m still getting this error or a Bad Handshake \" error depending on what version of python-social-auth im using.  I have tried a number of fixes and still coming up the same error. I'm assuming there is an issue somewhere between the keyboard and the chair.  This is not clearly an issue with python-social-auth, but more of a request for information about connecting my own oAuth provider (Django oAuth Toolkit) and python-social-auth.  So I am closing this as an issue, but if anyone has info on this topic I would be very grateful.\n. ",
    "chidg": "Manually specifying `certifi==2015.04.28` in my requirements did the trick for me. Unfortunate to have to downgrade to a more than 2 year old version, but I guess that's the easiest workaround at this point. @jpatel3 see if that works for you. It's an issue with certifi, not requests.. Manually specifying `certifi==2015.04.28` in my requirements did the trick for me. Unfortunate to have to downgrade to a more than 2 year old version, but I guess that's the easiest workaround at this point. @jpatel3 see if that works for you. It's an issue with certifi, not requests.. ",
    "spiderbot": "@zhang-z soultion worked for me. @zhang-z soultion worked for me. ",
    "luisvalerio": "@zhang-z soultion worked for me too, awesome\r\n. @zhang-z soultion worked for me too, awesome\r\n. ",
    "rliebi": "There's no documented feature, nor undocumented ones that I know of, that expose the retrieval of the username from the id. From the GitHub API consumer perspective, the user id is an \"implementation detail\". The real key is the username.\n. Okay. I agree with that\ud83d\ude0a\n\nSent from my iPhone\n\n> On 29 Mar 2015, at 19:15, Mat\u00edas Aguirre notifications@github.com wrote:\n> \n> An id that can change, is not a valid way to identify a unique user id. Anybody that changes his username won't be able to logging back to their account in your site.\n> \n> You can retrieve the username using the /user API (https://developer.github.com/v3/users/#get-the-authenticated-user). Also, you can store it extra_data when defining the setting SOCIAL_AUTH_GITHUB_EXTRA_DATA = [('login', 'login')](I've added that entry to the default value, so you won't need the setting actually). Then you can access it by doing user.social_auth.get(provider='github').extra_data['login'].\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. There's no documented feature, nor undocumented ones that I know of, that expose the retrieval of the username from the id. From the GitHub API consumer perspective, the user id is an \"implementation detail\". The real key is the username.\n. Okay. I agree with that\ud83d\ude0a\n\nSent from my iPhone\n\n> On 29 Mar 2015, at 19:15, Mat\u00edas Aguirre notifications@github.com wrote:\n> \n> An id that can change, is not a valid way to identify a unique user id. Anybody that changes his username won't be able to logging back to their account in your site.\n> \n> You can retrieve the username using the /user API (https://developer.github.com/v3/users/#get-the-authenticated-user). Also, you can store it extra_data when defining the setting SOCIAL_AUTH_GITHUB_EXTRA_DATA = [('login', 'login')](I've added that entry to the default value, so you won't need the setting actually). Then you can access it by doing user.social_auth.get(provider='github').extra_data['login'].\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ",
    "hoffmannkrzysztof": "Hi,\nOAuth2 works fine and after authorization we get valid token. But If we want use it to get data about user from REST service. Each request must be signed with OAuth Consumer Request. The supported signature method is HMAC-SHA1. Also, for POST and PUT requests, Oauth Body Hash is mandatory.\nThats why i use part of OAuth1.\n. Hi,\nOAuth2 works fine and after authorization we get valid token. But If we want use it to get data about user from REST service. Each request must be signed with OAuth Consumer Request. The supported signature method is HMAC-SHA1. Also, for POST and PUT requests, Oauth Body Hash is mandatory.\nThats why i use part of OAuth1.\n. ",
    "ddorian": "But it's still used further down on the file.\n. But it's still used further down on the file.\n. ",
    "neerajd-impinge": "SOCIAL_AUTH_USER_FIELDS  helps to resolve my error , and when I click on login with fb my app asks for the email but still my create user manager gets blank email.\nMy custom manager : \n\n```\n\nclass CustomUserManager(BaseUserManager):\n    def _create_user(self, email, password,\n                     is_staff, is_superuser, **extra_fields):\n        \"\"\"\n        Creates and saves a User with the given email and password.\n        \"\"\"\n        now = timezone.now()\n        if not email:\n            raise ValueError('The given email must be set')\n        email = self.normalize_email(email)\n        user = self.model(email=email,\n                          is_staff=is_staff, is_active=True,\n                          is_superuser=is_superuser, last_login=now,\n                          date_joined=now, **extra_fields)\n        user.set_password(password)\n        user.save(using=self._db)\n        return user\n    def create_user(self, email, password=None, **extra_fields):\n        return self._create_user(email, password, False, False,\n                                 **extra_fields)\n    def create_superuser(self, email, password, **extra_fields):\n        return self._create_user(email, password, True, True,\n                                 **extra_fields)\n\n```\n\nIf facebook is asking for email permission then python-social auth must getting the email in response but why my create user getting blank email ? any idea ?\n. SOCIAL_AUTH_USER_FIELDS  helps to resolve my error , and when I click on login with fb my app asks for the email but still my create user manager gets blank email.\nMy custom manager : \n\n```\n\nclass CustomUserManager(BaseUserManager):\n    def _create_user(self, email, password,\n                     is_staff, is_superuser, **extra_fields):\n        \"\"\"\n        Creates and saves a User with the given email and password.\n        \"\"\"\n        now = timezone.now()\n        if not email:\n            raise ValueError('The given email must be set')\n        email = self.normalize_email(email)\n        user = self.model(email=email,\n                          is_staff=is_staff, is_active=True,\n                          is_superuser=is_superuser, last_login=now,\n                          date_joined=now, **extra_fields)\n        user.set_password(password)\n        user.save(using=self._db)\n        return user\n    def create_user(self, email, password=None, **extra_fields):\n        return self._create_user(email, password, False, False,\n                                 **extra_fields)\n    def create_superuser(self, email, password, **extra_fields):\n        return self._create_user(email, password, True, True,\n                                 **extra_fields)\n\n```\n\nIf facebook is asking for email permission then python-social auth must getting the email in response but why my create user getting blank email ? any idea ?\n. ",
    "ZuSe": "Same error for me,\n\nis there any solution for the issue?\nThe email you get within create_user is just blank. All we know is the username that is provided within kwargs (extra_fields above)\n. Are their any plans to support google-oauth v3? Otherwise every android app struggles with authentication. \n@rithi Thanks for the workaround, gonna to try it out for our application.\n. Same error for me,\n\nis there any solution for the issue?\nThe email you get within create_user is just blank. All we know is the username that is provided within kwargs (extra_fields above)\n. Are their any plans to support google-oauth v3? Otherwise every android app struggles with authentication. \n@rithi Thanks for the workaround, gonna to try it out for our application.\n. ",
    "cmltaWt0": "Exception Type: AuthMissingParameter\nException Value:    Missing needed parameter email\n\nThis exception is raised when we validate email within different session.\nStep to reproduce:\n1. Send email to validate.\n2. Logout.\n3. Click validation link.\n. @omab The whole authentication process is not fail - it will start as new login/register process...\nAnd there is a problem because if user click to associate Email and confirm email from another PC (for example from Phone) it will fall into new login process but not into Email association process...\n. @omab  @craig-hacklaunch\nUPD: I got around this issue by creating custom Strategy, Storage and Code. In Code a have user_id field. And when user click confirmation link on different PC I can see exactly what user want to confirm an email.\n. @omab it is a good news for everyone :smile: thank you for contribution!\n. @jasonshark what about this [backend](https://github.com/omab/python-social-auth/blob/master/social/backends/spotify.py)?\n\nYou need to register a new application at [Spotify Web API](https://developer.spotify.com/web-api/) and follow this [instructions](https://python-social-auth.readthedocs.org/en/latest/backends/spotify.html).\n. > Is there no way? Anybody?\n\nLook at [django_example](https://github.com/omab/python-social-auth/tree/master/examples/django_example) app to get a hint.\n. @y2kfresh may be you can try to install `requests` to `python2` and not to `python3`? Or to run a project w/ python3? \n. @jcda You should set at least empty strings for TWITTER OAUTH KEY/SECRET params in settings.py (if I correctly remember this issue)\n. Exception Type: AuthMissingParameter\nException Value:    Missing needed parameter email\n\nThis exception is raised when we validate email within different session.\nStep to reproduce:\n1. Send email to validate.\n2. Logout.\n3. Click validation link.\n. @omab The whole authentication process is not fail - it will start as new login/register process...\nAnd there is a problem because if user click to associate Email and confirm email from another PC (for example from Phone) it will fall into new login process but not into Email association process...\n. @omab  @craig-hacklaunch\nUPD: I got around this issue by creating custom Strategy, Storage and Code. In Code a have user_id field. And when user click confirmation link on different PC I can see exactly what user want to confirm an email.\n. @omab it is a good news for everyone :smile: thank you for contribution!\n. @jasonshark what about this [backend](https://github.com/omab/python-social-auth/blob/master/social/backends/spotify.py)?\n\nYou need to register a new application at [Spotify Web API](https://developer.spotify.com/web-api/) and follow this [instructions](https://python-social-auth.readthedocs.org/en/latest/backends/spotify.html).\n. > Is there no way? Anybody?\n\nLook at [django_example](https://github.com/omab/python-social-auth/tree/master/examples/django_example) app to get a hint.\n. @y2kfresh may be you can try to install `requests` to `python2` and not to `python3`? Or to run a project w/ python3? \n. @jcda You should set at least empty strings for TWITTER OAUTH KEY/SECRET params in settings.py (if I correctly remember this issue)\n. ",
    "annshress": "Any updates for MissingParameterEmail?. @dmaze your fix still gives me: \r\n> \"error_messages\": [\"Password is None\"]. Any updates for MissingParameterEmail?. @dmaze your fix still gives me: \r\n> \"error_messages\": [\"Password is None\"]. ",
    "mattrobenolt": "See #551 which has been fixed.\n. See #551 which has been fixed.\n. ",
    "JJZolper": "Oh that's weird, I will have to try to update my PSA again because I was pretty sure I made sure to update the package for this exact reason and I saw those warnings after I had updated. Maybe it's just a rookie mistake on my end in terms of missing something in terms of updating the package and it not fully updating but I was pretty sure I did it right. I will dig into this again and try again and see if all is good and report back any findings.\n. Oh that must be it because I see that the versioning was updated to 0.2.4 but I only have 0.2.3 so yeah when the next release comes out like you already know and have said I think I'll be in good shape.\n. btw is there a timetable for when it would be released to the pypi? sorry if i don't know where i should be looking because i don't haha.\n. Yeah that's what I am saying. I had pulled the newest release which is yes 0.2.4 and I tried to run the server and it bombed out, the server will not run. And yes it looks like something with open ID so maybe we weren't expecting this as much like tutuca said.\n. Oh yprez did that do it? Did installing python3-openid do it? I did some research and it did seem like a python3 thing. Basically you had to handle the mapping slightly differently.\n. Yeah you are correct, after uninstalling python-openid and installing python3-openid everything worked out as expected and the server funs fine. I just installed python3-openid directly so pip install python3-openid instead of using PSA because when I first tried that it still installed python-openid instead.\n. Oh that's weird, I will have to try to update my PSA again because I was pretty sure I made sure to update the package for this exact reason and I saw those warnings after I had updated. Maybe it's just a rookie mistake on my end in terms of missing something in terms of updating the package and it not fully updating but I was pretty sure I did it right. I will dig into this again and try again and see if all is good and report back any findings.\n. Oh that must be it because I see that the versioning was updated to 0.2.4 but I only have 0.2.3 so yeah when the next release comes out like you already know and have said I think I'll be in good shape.\n. btw is there a timetable for when it would be released to the pypi? sorry if i don't know where i should be looking because i don't haha.\n. Yeah that's what I am saying. I had pulled the newest release which is yes 0.2.4 and I tried to run the server and it bombed out, the server will not run. And yes it looks like something with open ID so maybe we weren't expecting this as much like tutuca said.\n. Oh yprez did that do it? Did installing python3-openid do it? I did some research and it did seem like a python3 thing. Basically you had to handle the mapping slightly differently.\n. Yeah you are correct, after uninstalling python-openid and installing python3-openid everything worked out as expected and the server funs fine. I just installed python3-openid directly so pip install python3-openid instead of using PSA because when I first tried that it still installed python-openid instead.\n. ",
    "pydanny": "@omab Thanks for pointing out my mistake! I'll let you know when djangopackages.com goes live with python-social-auth 0.2.3.\n. We're up to Django 1.7.7 on djangopackages.com. Thanks for your coaching!\n. @omab Thanks for pointing out my mistake! I'll let you know when djangopackages.com goes live with python-social-auth 0.2.3.\n. We're up to Django 1.7.7 on djangopackages.com. Thanks for your coaching!\n. ",
    "dhilipsiva": ":+1: For me too.\n. :+1: For me too.\n. ",
    "sbhuvanas": "hi . I am a newbie for Django. I too get the same errors. I am totally confused. can you explain it clearly to solve this issue. \n. hi . I am a newbie for Django. I too get the same errors. I am totally confused. can you explain it clearly to solve this issue. \n. ",
    "urlsangel": "Hi Mat\u00edas\n\nThanks for responding :-)\n\nI'm using psa 0.2.3.\n\nCheers,\n\nRussell.\n. Hi Mat\u00edas\n\nI'm using pip to install from pypi - I've just had a look at the code from there, and it looks like the inactive login part isn't in there, so maybe that's the problem?\n\nAny chance pypi could be updated to include the latest from github?\n\nThanks\n\nRussell.\n. Hi Mat\u00edas\n\nThanks for doing that, much appreciated.\n\nI'm running python 3.4, but it looks like the psa requirements aren't picking that up, as they grab `python-openid` instead of `python3-openid` - any idea what might be the cause?\n\n`Downloading/unpacking python-openid>=2.2 (from python-social-auth==0.2.4->-r requirements.txt (line 21))`\n\nThanks again,\n\nRussell.\n. Hi Mat\u00edas\n\nAny idea if the above python 3 bug is fixable?\n\nThanks,\n\nRussell.\n. Brilliant, thank you :-)\n. Hi Mat\u00edas\n\nThanks for responding :-)\n\nI'm using psa 0.2.3.\n\nCheers,\n\nRussell.\n. Hi Mat\u00edas\n\nI'm using pip to install from pypi - I've just had a look at the code from there, and it looks like the inactive login part isn't in there, so maybe that's the problem?\n\nAny chance pypi could be updated to include the latest from github?\n\nThanks\n\nRussell.\n. Hi Mat\u00edas\n\nThanks for doing that, much appreciated.\n\nI'm running python 3.4, but it looks like the psa requirements aren't picking that up, as they grab `python-openid` instead of `python3-openid` - any idea what might be the cause?\n\n`Downloading/unpacking python-openid>=2.2 (from python-social-auth==0.2.4->-r requirements.txt (line 21))`\n\nThanks again,\n\nRussell.\n. Hi Mat\u00edas\n\nAny idea if the above python 3 bug is fixable?\n\nThanks,\n\nRussell.\n. Brilliant, thank you :-)\n. ",
    "jmckib": "@omab Ok, I didn't know about that setting, and I imagine most don't, so is it really a good idea to clobber `user.email` by default? That seems broken to me. I wasted a few days hunting this down.\n. That's great! It's probably not a good idea to clobber fullname, first_name, or last_name either, but it's certainly a less serious bug than clobbering email.\n\nNot to complain too much, I think python-social-auth is f***ing awesome.\n. @omab Ok, I didn't know about that setting, and I imagine most don't, so is it really a good idea to clobber `user.email` by default? That seems broken to me. I wasted a few days hunting this down.\n. That's great! It's probably not a good idea to clobber fullname, first_name, or last_name either, but it's certainly a less serious bug than clobbering email.\n\nNot to complain too much, I think python-social-auth is f***ing awesome.\n. ",
    "kyleconroy": "I just ran into this problem as well\n\nPSA: 0.2.4\nDjango: 1.8\n\n```\n$ python manage.py runserver\nTraceback (most recent call last):\n  File \"manage.py\", line 26, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/django/core/management/__init__.py\", line 338, in execute_from_command_line\n    utility.execute()\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/django/core/management/__init__.py\", line 312, in execute\n    django.setup()\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/django/__init__.py\", line 18, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/django/apps/registry.py\", line 108, in populate\n    app_config.import_models(all_models)\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/django/apps/config.py\", line 198, in import_models\n    self.models_module = import_module(models_module_name)\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/importlib/__init__.py\", line 109, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 2254, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 2237, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 2226, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1200, in _load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1129, in _exec\n  File \"<frozen importlib._bootstrap>\", line 1471, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 321, in _call_with_frames_removed\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/social/apps/django_app/default/models.py\", line 9, in <module>\n    from social.storage.django_orm import DjangoUserMixin, \\\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/social/storage/django_orm.py\", line 5, in <module>\n    from social.storage.base import UserMixin, AssociationMixin, NonceMixin, \\\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/social/storage/base.py\", line 12, in <module>\n    from openid.association import Association as OpenIdAssociation\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/openid/__init__.py\", line 52, in <module>\n    if len(version_info) != 3:\nTypeError: object of type 'map' has no len()\n```\n. I just ran into this problem as well\n\nPSA: 0.2.4\nDjango: 1.8\n\n```\n$ python manage.py runserver\nTraceback (most recent call last):\n  File \"manage.py\", line 26, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/django/core/management/__init__.py\", line 338, in execute_from_command_line\n    utility.execute()\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/django/core/management/__init__.py\", line 312, in execute\n    django.setup()\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/django/__init__.py\", line 18, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/django/apps/registry.py\", line 108, in populate\n    app_config.import_models(all_models)\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/django/apps/config.py\", line 198, in import_models\n    self.models_module = import_module(models_module_name)\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/importlib/__init__.py\", line 109, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 2254, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 2237, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 2226, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1200, in _load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1129, in _exec\n  File \"<frozen importlib._bootstrap>\", line 1471, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 321, in _call_with_frames_removed\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/social/apps/django_app/default/models.py\", line 9, in <module>\n    from social.storage.django_orm import DjangoUserMixin, \\\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/social/storage/django_orm.py\", line 5, in <module>\n    from social.storage.base import UserMixin, AssociationMixin, NonceMixin, \\\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/social/storage/base.py\", line 12, in <module>\n    from openid.association import Association as OpenIdAssociation\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/openid/__init__.py\", line 52, in <module>\n    if len(version_info) != 3:\nTypeError: object of type 'map' has no len()\n```\n. ",
    "tutuca": "[Release was last night](https://github.com/omab/python-social-auth/commit/c73ad1fbe45121bf00ee56c2bef27b3d0475e542).\n\nIt's broken here too. It's weird because IIRC python-openid wasn't required to use PSA and shouldn't pull it by default.\n. Thanks!\n. [Release was last night](https://github.com/omab/python-social-auth/commit/c73ad1fbe45121bf00ee56c2bef27b3d0475e542).\n\nIt's broken here too. It's weird because IIRC python-openid wasn't required to use PSA and shouldn't pull it by default.\n. Thanks!\n. ",
    "yprez": "Ran into this too...\nLooks like, for some reason, when installing from PyPI on Python3 it installs python-openid instead of python3-openid...\nWhen installing from github, or from a local version, it does get the correct version (python3-openid).\n. I checked and after uninstalling python-openid and installing python3-openid manually, it worked. Before that I had problems with it, maybe because of clashes between the 2 openid versions.\n\nThe weird thing is that when you do `pip install git+https://github.com/omab/python-social-auth.git`, it installs python3-openid properly...\n. Can be closed I think, not sure why github didn't close this automatically...\n. I think this can be closed since it's already compatible with Django 1.9 and there are no warnings about this anymore... probably was fixed at some point.\n. > but the e-mail address changes on me\n\nI have a similar setup, sounds like you need the `SOCIAL_AUTH_PROTECTED_USER_FIELDS` setting to protect the email field.\n\nhttp://psa.matiasaguirre.net/docs/configuration/settings.html#miscellaneous-settings\n. @omab there are several PRs addressing this and other compatibility issues, is there any chance you can review/merge/close some of them?\n. Thanks @omab !\n\nI'll try fixing the other deprecation issues, or finding PRs that already do...\n. +1\n. Also fixes #812  #811 #801\n. @blueyed this _is_ the patch... just showing that there is interest (github lacks voting).\n. I think that `request.data` exists only in the `request` wrapper object in django-rest-framework, not in Django itself...\n. Ran into this too...\nLooks like, for some reason, when installing from PyPI on Python3 it installs python-openid instead of python3-openid...\nWhen installing from github, or from a local version, it does get the correct version (python3-openid).\n. I checked and after uninstalling python-openid and installing python3-openid manually, it worked. Before that I had problems with it, maybe because of clashes between the 2 openid versions.\n\nThe weird thing is that when you do `pip install git+https://github.com/omab/python-social-auth.git`, it installs python3-openid properly...\n. Can be closed I think, not sure why github didn't close this automatically...\n. I think this can be closed since it's already compatible with Django 1.9 and there are no warnings about this anymore... probably was fixed at some point.\n. > but the e-mail address changes on me\n\nI have a similar setup, sounds like you need the `SOCIAL_AUTH_PROTECTED_USER_FIELDS` setting to protect the email field.\n\nhttp://psa.matiasaguirre.net/docs/configuration/settings.html#miscellaneous-settings\n. @omab there are several PRs addressing this and other compatibility issues, is there any chance you can review/merge/close some of them?\n. Thanks @omab !\n\nI'll try fixing the other deprecation issues, or finding PRs that already do...\n. +1\n. Also fixes #812  #811 #801\n. @blueyed this _is_ the patch... just showing that there is interest (github lacks voting).\n. I think that `request.data` exists only in the `request` wrapper object in django-rest-framework, not in Django itself...\n. ",
    "h8": "Same here - after installing latest version with Pip it also installs python-openid instead of installing python3-openid. Python version 3.4.0.\n. Same here - after installing latest version with Pip it also installs python-openid instead of installing python3-openid. Python version 3.4.0.\n. ",
    "ngavrish": "Still have this issue with latest from pip and Python 3.4\n\nIt somehow falls into opened instead of python3-openid\nFile \"/Users/802619/Envs/nucase/lib/python3.4/site-packages/openid/**init**.py\", line 52, in <module>\n    if len(version_info) != 3:\n. Obviously even I fix this by wrapping map in the list, I run into bunch of another issues\n. Still have this issue with latest from pip and Python 3.4\n\nIt somehow falls into opened instead of python3-openid\nFile \"/Users/802619/Envs/nucase/lib/python3.4/site-packages/openid/**init**.py\", line 52, in <module>\n    if len(version_info) != 3:\n. Obviously even I fix this by wrapping map in the list, I run into bunch of another issues\n. ",
    "iampbernardo": "Still same problem here\nPython 3.4 \n. Still same problem here\nPython 3.4 \n. ",
    "TristanH": "+1 to issue still existing with Python 3.4\n. +1 to issue still existing with Python 3.4\n. ",
    "masroore": "Python 3.5.1. issue still existing. \n. Python 3.5.1. issue still existing. \n. ",
    "guinslym": "Works great with 3.4. I just had to upgrade the package\n`pip install -U python-social-auth`\n. Works great with 3.4. I just had to upgrade the package\n`pip install -U python-social-auth`\n. ",
    "neelshah16": "I still have the same issue, python 3.6. I still have the same issue, python 3.6. ",
    "akhilrs": "Upgrading `python3-openid` solved the issue on python 3.6\r\n`pip3 install python3-openid --upgrade`\r\n. Upgrading `python3-openid` solved the issue on python 3.6\r\n`pip3 install python3-openid --upgrade`\r\n. ",
    "hinnocence": "thank you for replying\n\nwhen I deploy it with apache the error returned is \n\n> AuthFailed at /login/twitter/\n> Authentication failed: ('Connection aborted.', error(110, 'Connection timed out'))\n\nthe full traceback is as follows\n\nEnvironment:\n\n> Request Method: GET\n> Request URL: http://demodemo.com/login/twitter/?next=/\n> \n> Django Version: 1.6.6\n> Python Version: 2.7.8\n> Installed Applications:\n> ('south',\n>  'twython',\n>  'djcelery',\n>  'rest_framework',\n>  'corsheaders',\n>  'corsheaders',\n>  'oauth2_provider',\n>  'webservice',\n>  'suit',\n>  'django.contrib.admin',\n>  'django.contrib.auth',\n>  'django.contrib.contenttypes',\n>  'django.contrib.sessions',\n>  'django.contrib.messages',\n>  'django.contrib.staticfiles',\n>  'social.apps.django_app.default')\n> Installed Middleware:\n> ('django.contrib.sessions.middleware.SessionMiddleware',\n>  'corsheaders.middleware.CorsMiddleware',\n>  'django.middleware.common.CommonMiddleware',\n>  'django.middleware.csrf.CsrfViewMiddleware',\n>  'django.contrib.auth.middleware.AuthenticationMiddleware',\n>  'django.contrib.messages.middleware.MessageMiddleware',\n>  'django.middleware.clickjacking.XFrameOptionsMiddleware',\n>  'webservice.middleware.ErrorToJSONMiddleware',\n>  'social.apps.django_app.middleware.SocialAuthExceptionMiddleware')\n> \n> Traceback:\n> File \"/usr/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n> 1.                     response = wrapped_callback(request, _callback_args, *_callback_kwargs)\n>    File \"/usr/local/lib/python2.7/site-packages/django/views/decorators/cache.py\" in _wrapped_view_func\n> 2.         response = view_func(request, _args, *_kwargs)\n>    File \"/usr/local/lib/python2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n> 3.             return func(request, backend, _args, *_kwargs)\n>    File \"/usr/local/lib/python2.7/site-packages/social/apps/django_app/views.py\" in auth\n> 4.     return do_auth(request.backend, redirect_name=REDIRECT_FIELD_NAME)\n>    File \"/usr/local/lib/python2.7/site-packages/social/actions.py\" in do_auth\n> 5.     return backend.start()\n>    File \"/usr/local/lib/python2.7/site-packages/social/backends/base.py\" in start\n> 6.             return self.strategy.redirect(self.auth_url())\n>    File \"/usr/local/lib/python2.7/site-packages/social/backends/oauth.py\" in auth_url\n> 7.         token = self.set_unauthorized_token()\n>    File \"/usr/local/lib/python2.7/site-packages/social/backends/oauth.py\" in set_unauthorized_token\n> 8.         token = self.unauthorized_token()\n>    File \"/usr/local/lib/python2.7/site-packages/social/backends/oauth.py\" in unauthorized_token\n> 9.             method=self.REQUEST_TOKEN_METHOD\n>    File \"/usr/local/lib/python2.7/site-packages/social/backends/base.py\" in request\n> 10.             raise AuthFailed(self, str(err))\n> \n> Exception Type: AuthFailed at /login/twitter/\n> Exception Value: Authentication failed: ('Connection aborted.', error(110, 'Connection timed out'))\n\nactually the server can access the twitter API , because when I start the server by the command \"manage.py runserver\" ,and login with the twitter account it works fine. \n\nWhat do you mean by \"maybe it's over https\"?  you mean the authentication through twitter is over https? do I also need to set the return url to https address?  \n. yes. the response is 400. I'll enable the ssl for apache. thank you !\n. I check the configuration and i found my server can support https, and then I found the parameter SOCIAL_AUTH_REDIRECT_IS_HTTPS, and I set it  \"True\" , is it the parameter to force the twitter api return to a url via 'https', but it still not work..... I am blocked here.... \n. it works fine ntpd 0:off 1:off 2:on 3:on 5:on 6:off\n. thank you for replying\n\nwhen I deploy it with apache the error returned is \n\n> AuthFailed at /login/twitter/\n> Authentication failed: ('Connection aborted.', error(110, 'Connection timed out'))\n\nthe full traceback is as follows\n\nEnvironment:\n\n> Request Method: GET\n> Request URL: http://demodemo.com/login/twitter/?next=/\n> \n> Django Version: 1.6.6\n> Python Version: 2.7.8\n> Installed Applications:\n> ('south',\n>  'twython',\n>  'djcelery',\n>  'rest_framework',\n>  'corsheaders',\n>  'corsheaders',\n>  'oauth2_provider',\n>  'webservice',\n>  'suit',\n>  'django.contrib.admin',\n>  'django.contrib.auth',\n>  'django.contrib.contenttypes',\n>  'django.contrib.sessions',\n>  'django.contrib.messages',\n>  'django.contrib.staticfiles',\n>  'social.apps.django_app.default')\n> Installed Middleware:\n> ('django.contrib.sessions.middleware.SessionMiddleware',\n>  'corsheaders.middleware.CorsMiddleware',\n>  'django.middleware.common.CommonMiddleware',\n>  'django.middleware.csrf.CsrfViewMiddleware',\n>  'django.contrib.auth.middleware.AuthenticationMiddleware',\n>  'django.contrib.messages.middleware.MessageMiddleware',\n>  'django.middleware.clickjacking.XFrameOptionsMiddleware',\n>  'webservice.middleware.ErrorToJSONMiddleware',\n>  'social.apps.django_app.middleware.SocialAuthExceptionMiddleware')\n> \n> Traceback:\n> File \"/usr/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n> 1.                     response = wrapped_callback(request, _callback_args, *_callback_kwargs)\n>    File \"/usr/local/lib/python2.7/site-packages/django/views/decorators/cache.py\" in _wrapped_view_func\n> 2.         response = view_func(request, _args, *_kwargs)\n>    File \"/usr/local/lib/python2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n> 3.             return func(request, backend, _args, *_kwargs)\n>    File \"/usr/local/lib/python2.7/site-packages/social/apps/django_app/views.py\" in auth\n> 4.     return do_auth(request.backend, redirect_name=REDIRECT_FIELD_NAME)\n>    File \"/usr/local/lib/python2.7/site-packages/social/actions.py\" in do_auth\n> 5.     return backend.start()\n>    File \"/usr/local/lib/python2.7/site-packages/social/backends/base.py\" in start\n> 6.             return self.strategy.redirect(self.auth_url())\n>    File \"/usr/local/lib/python2.7/site-packages/social/backends/oauth.py\" in auth_url\n> 7.         token = self.set_unauthorized_token()\n>    File \"/usr/local/lib/python2.7/site-packages/social/backends/oauth.py\" in set_unauthorized_token\n> 8.         token = self.unauthorized_token()\n>    File \"/usr/local/lib/python2.7/site-packages/social/backends/oauth.py\" in unauthorized_token\n> 9.             method=self.REQUEST_TOKEN_METHOD\n>    File \"/usr/local/lib/python2.7/site-packages/social/backends/base.py\" in request\n> 10.             raise AuthFailed(self, str(err))\n> \n> Exception Type: AuthFailed at /login/twitter/\n> Exception Value: Authentication failed: ('Connection aborted.', error(110, 'Connection timed out'))\n\nactually the server can access the twitter API , because when I start the server by the command \"manage.py runserver\" ,and login with the twitter account it works fine. \n\nWhat do you mean by \"maybe it's over https\"?  you mean the authentication through twitter is over https? do I also need to set the return url to https address?  \n. yes. the response is 400. I'll enable the ssl for apache. thank you !\n. I check the configuration and i found my server can support https, and then I found the parameter SOCIAL_AUTH_REDIRECT_IS_HTTPS, and I set it  \"True\" , is it the parameter to force the twitter api return to a url via 'https', but it still not work..... I am blocked here.... \n. it works fine ntpd 0:off 1:off 2:on 3:on 5:on 6:off\n. ",
    "taxido": "Older releases are also affected by this issue\n. Older releases are also affected by this issue\n. ",
    "aemdy": "The same issue here. Using Python 3.4.2 and Django 1.7.7.\n. The same issue here. Using Python 3.4.2 and Django 1.7.7.\n. ",
    "dfejgelis": "@omab THANKS!! I've been debugging this for looong time.\n. @omab THANKS!! I've been debugging this for looong time.\n. ",
    "sotsugov": "Apologies, sure. \n\n`````` Environment:\nRequest Method: GET\nRequest URL: http://127.0.0.1:8000/complete/steam?janrain_nonce=2015-04-19T07%3A56%3A56ZBkqkIk&openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0&openid.mode=id_res&openid.op_endpoint=https%3A%2F%2Fsteamcommunity.com%2Fopenid%2Flogin&openid.claimed_id=http%3A%2F%2Fsteamcommunity.com%2Fopenid%2Fid%2F76561197987677089&openid.identity=http%3A%2F%2Fsteamcommunity.com%2Fopenid%2Fid%2F76561197987677089&openid.return_to=http%3A%2F%2F127.0.0.1%3A8000%2Fcomplete%2Fsteam%3Fjanrain_nonce%3D2015-04-19T07%253A56%253A56ZBkqkIk&openid.response_nonce=2015-04-19T07%3A57%3A04ZUCSa39a%2FpmUTUKvX6vLqmM1iOzM%3D&openid.assoc_handle=1234567890&openid.signed=signed%2Cop_endpoint%2Cclaimed_id%2Cidentity%2Creturn_to%2Cresponse_nonce%2Cassoc_handle&openid.sig=Kr8z0M1DjvUWT9qtcXWOyYXr%2BvA%3D\n\nDjango Version: 1.8\nPython Version: 2.7.6\nInstalled Applications:\n('django.contrib.admin',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.auth',\n 'social.apps.django_app.default',\n 'social.apps.django_app.me',\n 'steampy')\nInstalled Middleware:\n('django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.common.CommonMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.middleware.clickjacking.XFrameOptionsMiddleware')\n\n\nTraceback:\nFile \"/Library/Python/2.7/site-packages/django/core/handlers/base.py\" in get_response\n  132.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/Library/Python/2.7/site-packages/django/views/decorators/cache.py\" in _wrapped_view_func\n  57.         response = view_func(request, *args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n  58.         return view_func(*args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n  52.             return func(request, backend, *args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/apps/django_app/views.py\" in complete\n  28.                        redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/actions.py\" in do_complete\n  40.         user = backend.complete(user=user, *args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/backends/base.py\" in complete\n  40.         return self.auth_complete(*args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/backends/open_id.py\" in auth_complete\n  174.         return self.strategy.authenticate(*args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/strategies/django_strategy.py\" in authenticate\n  76.         return authenticate(*args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/django/contrib/auth/__init__.py\" in authenticate\n  74.             user = backend.authenticate(**credentials)\nFile \"/Library/Python/2.7/site-packages/social/backends/base.py\" in authenticate\n  81.         return self.pipeline(pipeline, *args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/backends/base.py\" in pipeline\n  84.         out = self.run_pipeline(pipeline, pipeline_index, *args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/backends/base.py\" in run_pipeline\n  111.             result = func(*args, **out) or {}\nFile \"/Library/Python/2.7/site-packages/social/pipeline/social_auth.py\" in social_user\n  20.     social = backend.strategy.storage.user.get_social_auth(provider, uid)\nFile \"/Library/Python/2.7/site-packages/social/storage/mongoengine_orm.py\" in get_social_auth\n  115.             return cls.objects.get(provider=provider, uid=uid)\nFile \"/Library/Python/2.7/site-packages/mongoengine/queryset/manager.py\" in __get__\n  37.         queryset = queryset_class(owner, owner._get_collection())\nFile \"/Library/Python/2.7/site-packages/mongoengine/document.py\" in _get_collection\n  168.             db = cls._get_db()\nFile \"/Library/Python/2.7/site-packages/mongoengine/document.py\" in _get_db\n  162.         return get_db(cls._meta.get(\"db_alias\", DEFAULT_CONNECTION_NAME))\nFile \"/Library/Python/2.7/site-packages/mongoengine/connection.py\" in get_db\n  136.         conn = get_connection(alias)\nFile \"/Library/Python/2.7/site-packages/mongoengine/connection.py\" in get_connection\n  94.             raise ConnectionError(msg)\n\nException Type: ConnectionError at /complete/steam\nException Value: You have not defined a default connection```\n``````\n. You're right, would you be able to point me on to how to address this, please?\n. I've configured mongoengine and added all the settings. I've also downgraded django to 1.7 Now I seemed to have made a work around this one, so I'll close it, I'm having another issue now though. \n. Apologies, sure. \n\n`````` Environment:\nRequest Method: GET\nRequest URL: http://127.0.0.1:8000/complete/steam?janrain_nonce=2015-04-19T07%3A56%3A56ZBkqkIk&openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0&openid.mode=id_res&openid.op_endpoint=https%3A%2F%2Fsteamcommunity.com%2Fopenid%2Flogin&openid.claimed_id=http%3A%2F%2Fsteamcommunity.com%2Fopenid%2Fid%2F76561197987677089&openid.identity=http%3A%2F%2Fsteamcommunity.com%2Fopenid%2Fid%2F76561197987677089&openid.return_to=http%3A%2F%2F127.0.0.1%3A8000%2Fcomplete%2Fsteam%3Fjanrain_nonce%3D2015-04-19T07%253A56%253A56ZBkqkIk&openid.response_nonce=2015-04-19T07%3A57%3A04ZUCSa39a%2FpmUTUKvX6vLqmM1iOzM%3D&openid.assoc_handle=1234567890&openid.signed=signed%2Cop_endpoint%2Cclaimed_id%2Cidentity%2Creturn_to%2Cresponse_nonce%2Cassoc_handle&openid.sig=Kr8z0M1DjvUWT9qtcXWOyYXr%2BvA%3D\n\nDjango Version: 1.8\nPython Version: 2.7.6\nInstalled Applications:\n('django.contrib.admin',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.auth',\n 'social.apps.django_app.default',\n 'social.apps.django_app.me',\n 'steampy')\nInstalled Middleware:\n('django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.common.CommonMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.middleware.clickjacking.XFrameOptionsMiddleware')\n\n\nTraceback:\nFile \"/Library/Python/2.7/site-packages/django/core/handlers/base.py\" in get_response\n  132.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/Library/Python/2.7/site-packages/django/views/decorators/cache.py\" in _wrapped_view_func\n  57.         response = view_func(request, *args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n  58.         return view_func(*args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n  52.             return func(request, backend, *args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/apps/django_app/views.py\" in complete\n  28.                        redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/actions.py\" in do_complete\n  40.         user = backend.complete(user=user, *args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/backends/base.py\" in complete\n  40.         return self.auth_complete(*args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/backends/open_id.py\" in auth_complete\n  174.         return self.strategy.authenticate(*args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/strategies/django_strategy.py\" in authenticate\n  76.         return authenticate(*args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/django/contrib/auth/__init__.py\" in authenticate\n  74.             user = backend.authenticate(**credentials)\nFile \"/Library/Python/2.7/site-packages/social/backends/base.py\" in authenticate\n  81.         return self.pipeline(pipeline, *args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/backends/base.py\" in pipeline\n  84.         out = self.run_pipeline(pipeline, pipeline_index, *args, **kwargs)\nFile \"/Library/Python/2.7/site-packages/social/backends/base.py\" in run_pipeline\n  111.             result = func(*args, **out) or {}\nFile \"/Library/Python/2.7/site-packages/social/pipeline/social_auth.py\" in social_user\n  20.     social = backend.strategy.storage.user.get_social_auth(provider, uid)\nFile \"/Library/Python/2.7/site-packages/social/storage/mongoengine_orm.py\" in get_social_auth\n  115.             return cls.objects.get(provider=provider, uid=uid)\nFile \"/Library/Python/2.7/site-packages/mongoengine/queryset/manager.py\" in __get__\n  37.         queryset = queryset_class(owner, owner._get_collection())\nFile \"/Library/Python/2.7/site-packages/mongoengine/document.py\" in _get_collection\n  168.             db = cls._get_db()\nFile \"/Library/Python/2.7/site-packages/mongoengine/document.py\" in _get_db\n  162.         return get_db(cls._meta.get(\"db_alias\", DEFAULT_CONNECTION_NAME))\nFile \"/Library/Python/2.7/site-packages/mongoengine/connection.py\" in get_db\n  136.         conn = get_connection(alias)\nFile \"/Library/Python/2.7/site-packages/mongoengine/connection.py\" in get_connection\n  94.             raise ConnectionError(msg)\n\nException Type: ConnectionError at /complete/steam\nException Value: You have not defined a default connection```\n``````\n. You're right, would you be able to point me on to how to address this, please?\n. I've configured mongoengine and added all the settings. I've also downgraded django to 1.7 Now I seemed to have made a work around this one, so I'll close it, I'm having another issue now though. \n. ",
    "juliocebrito": "Traceback (most recent call last):\n  File \"C:\\Users\\Mr.Julio\\Desktop\\atcoin\\django\\core\\handlers\\base.py\", line 111, in get_response\n    response = wrapped_callback(request, _callback_args, *_callback_kwargs)\n  File \"C:\\Users\\Mr.Julio\\Desktop\\atcoin\\django\\views\\decorators\\cache.py\", line 52, in _wrapped_view_func\n    response = view_func(request, _args, *_kwargs)\n  File \"C:\\Users\\Mr.Julio\\Desktop\\atcoin\\social\\apps\\django_app\\utils.py\", line 52, in wrapper\n    return func(request, backend, _args, *_kwargs)\n  File \"C:\\Users\\Mr.Julio\\Desktop\\atcoin\\social\\apps\\django_app\\views.py\", line 19, in auth\n    return do_auth(request.backend, redirect_name=REDIRECT_FIELD_NAME)\n  File \"C:\\Users\\Mr.Julio\\Desktop\\atcoin\\social\\actions.py\", line 25, in do_auth\n    return backend.start()\n  File \"C:\\Users\\Mr.Julio\\Desktop\\atcoin\\social\\backends\\base.py\", line 35, in start\n    return self.strategy.redirect(self.auth_url())\n  File \"C:\\Users\\Mr.Julio\\Desktop\\atcoin\\social\\backends\\oauth.py\", line 165, in auth_url\n    token = self.set_unauthorized_token()\n  File \"C:\\Users\\Mr.Julio\\Desktop\\atcoin\\social\\backends\\oauth.py\", line 221, in set_unauthorized_token\n    token = self.unauthorized_token()\n  File \"C:\\Users\\Mr.Julio\\Desktop\\atcoin\\social\\backends\\oauth.py\", line 241, in unauthorized_token\n    method=self.REQUEST_TOKEN_METHOD\n  File \"C:\\Users\\Mr.Julio\\Desktop\\atcoin\\social\\backends\\base.py\", line 224, in request\n    raise AuthFailed(self, str(err))\nAuthFailed: Authentication failed: Can't connect to HTTPS URL because the SSL module is not available.\nINFO     2015-04-20 14:35:15,645 module.py:788] default: \"GET /login/twitter HTTP/1.1\" 500 88984\n. Hola, Gracias Matias por tu tiempo, yo soy julio de colombia, mira con django funciona perfectamente, pero yo estoy usando djangae que es una aplicacion para usar django en app engine de Google https://github.com/potatolondon/djangae\n. def request(self, url, method='GET', _args, *_kwargs):\n        kwargs.setdefault('headers', {})\n        if self.setting('VERIFY_SSL') is not None:\n            kwargs.setdefault('verify', self.setting('VERIFY_SSL'))\n        kwargs.setdefault('timeout', self.setting('REQUESTS_TIMEOUT') or\n                                     self.setting('URLOPEN_TIMEOUT'))\n\n```\n    if self.SEND_USER_AGENT and 'User-Agent' not in kwargs['headers']:\n        kwargs['headers']['User-Agent'] = user_agent()\n\n    try:\n        response = request(method, url, *args, **kwargs)\n    except ConnectionError as err:\n        raise AuthFailed(self, str(err))\n    response.raise_for_status()\n    return response\n```\n. please tell me python-social-auth work on app engine?\n. Traceback (most recent call last):\n  File \"C:\\Users\\Mr.Julio\\Desktop\\atcoin\\django\\core\\handlers\\base.py\", line 111, in get_response\n    response = wrapped_callback(request, _callback_args, *_callback_kwargs)\n  File \"C:\\Users\\Mr.Julio\\Desktop\\atcoin\\django\\views\\decorators\\cache.py\", line 52, in _wrapped_view_func\n    response = view_func(request, _args, *_kwargs)\n  File \"C:\\Users\\Mr.Julio\\Desktop\\atcoin\\social\\apps\\django_app\\utils.py\", line 52, in wrapper\n    return func(request, backend, _args, *_kwargs)\n  File \"C:\\Users\\Mr.Julio\\Desktop\\atcoin\\social\\apps\\django_app\\views.py\", line 19, in auth\n    return do_auth(request.backend, redirect_name=REDIRECT_FIELD_NAME)\n  File \"C:\\Users\\Mr.Julio\\Desktop\\atcoin\\social\\actions.py\", line 25, in do_auth\n    return backend.start()\n  File \"C:\\Users\\Mr.Julio\\Desktop\\atcoin\\social\\backends\\base.py\", line 35, in start\n    return self.strategy.redirect(self.auth_url())\n  File \"C:\\Users\\Mr.Julio\\Desktop\\atcoin\\social\\backends\\oauth.py\", line 165, in auth_url\n    token = self.set_unauthorized_token()\n  File \"C:\\Users\\Mr.Julio\\Desktop\\atcoin\\social\\backends\\oauth.py\", line 221, in set_unauthorized_token\n    token = self.unauthorized_token()\n  File \"C:\\Users\\Mr.Julio\\Desktop\\atcoin\\social\\backends\\oauth.py\", line 241, in unauthorized_token\n    method=self.REQUEST_TOKEN_METHOD\n  File \"C:\\Users\\Mr.Julio\\Desktop\\atcoin\\social\\backends\\base.py\", line 224, in request\n    raise AuthFailed(self, str(err))\nAuthFailed: Authentication failed: Can't connect to HTTPS URL because the SSL module is not available.\nINFO     2015-04-20 14:35:15,645 module.py:788] default: \"GET /login/twitter HTTP/1.1\" 500 88984\n. Hola, Gracias Matias por tu tiempo, yo soy julio de colombia, mira con django funciona perfectamente, pero yo estoy usando djangae que es una aplicacion para usar django en app engine de Google https://github.com/potatolondon/djangae\n. def request(self, url, method='GET', _args, *_kwargs):\n        kwargs.setdefault('headers', {})\n        if self.setting('VERIFY_SSL') is not None:\n            kwargs.setdefault('verify', self.setting('VERIFY_SSL'))\n        kwargs.setdefault('timeout', self.setting('REQUESTS_TIMEOUT') or\n                                     self.setting('URLOPEN_TIMEOUT'))\n\n```\n    if self.SEND_USER_AGENT and 'User-Agent' not in kwargs['headers']:\n        kwargs['headers']['User-Agent'] = user_agent()\n\n    try:\n        response = request(method, url, *args, **kwargs)\n    except ConnectionError as err:\n        raise AuthFailed(self, str(err))\n    response.raise_for_status()\n    return response\n```\n. please tell me python-social-auth work on app engine?\n. ",
    "luckypupil": "Whoops looks like I inadvertently submitted an issue.  There was no issue.\n\nOn Mon, Apr 27, 2015 at 10:50 AM, Mat\u00edas Aguirre notifications@github.com\nwrote:\n\n> No description?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/issues/600#issuecomment-96683094\n> .\n. Whoops looks like I inadvertently submitted an issue.  There was no issue.\n\nOn Mon, Apr 27, 2015 at 10:50 AM, Mat\u00edas Aguirre notifications@github.com\nwrote:\n\n> No description?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/issues/600#issuecomment-96683094\n> .\n. ",
    "fproldan": "Thanks! it's works. \nPerd\u00f3n por mi ingl\u00e9s, pero creo que sos de Uruguay, as\u00ed que te agradezco en espa\u00f1ol!. Muy buena app!\n. Thanks! it's works. \nPerd\u00f3n por mi ingl\u00e9s, pero creo que sos de Uruguay, as\u00ed que te agradezco en espa\u00f1ol!. Muy buena app!\n. ",
    "tcosta84": "It happens you don't need to use \"django.core.context_processors.request\" to achieve that. The issue was that I was using \"render_to_response\" instead of \"render\".\n\nAnd in your template you want to use:\n\n{{ user.first_name }}\n\ninstead of\n\n{{ request.user.first_name }}\n. It happens you don't need to use \"django.core.context_processors.request\" to achieve that. The issue was that I was using \"render_to_response\" instead of \"render\".\n\nAnd in your template you want to use:\n\n{{ user.first_name }}\n\ninstead of\n\n{{ request.user.first_name }}\n. It happens you don't need to use \"django.core.context_processors.request\" to achieve that. The issue was that I was using \"render_to_response\" instead of \"render\".\n\nAnd in your template you want to use:\n\n{{ user.first_name }}\n\ninstead of\n\n{{ request.user.first_name }}\n. It happens you don't need to use \"django.core.context_processors.request\" to achieve that. The issue was that I was using \"render_to_response\" instead of \"render\".\n\nAnd in your template you want to use:\n\n{{ user.first_name }}\n\ninstead of\n\n{{ request.user.first_name }}\n. ",
    "niwinz": "I found that in very different environments, but I'm not sure about all them! I'm not start suspect about possible issue until I found it in three different environments and not all are controlled by me.  \n\nI'll check it in any case! Thanks for notice me about that possibility because I do not considered it :S \n. I found that in very different environments, but I'm not sure about all them! I'm not start suspect about possible issue until I found it in three different environments and not all are controlled by me.  \n\nI'll check it in any case! Thanks for notice me about that possibility because I do not considered it :S \n. ",
    "julianwachholz": "This is an automatic migration Django created because you use a custom user model.\nMaybe this was a buggy handling of the swappable dependency in `0001_initial` in previous versions of Django, becaue I just noticed that I have a similar migration created in my `site-packages`.\n\nI guess yours will looks similar to this:\n\n```\noperations = [\n    migrations.AlterField(\n        model_name='usersocialauth',\n        name='user',\n        field=models.ForeignKey(to=settings.AUTH_USER_MODEL, related_name='social_auth'),\n    ),\n]\n```\n\nI'm not yet sure how to properly handle this, as I also can't roll back this migration now.. \n. This is an automatic migration Django created because you use a custom user model.\nMaybe this was a buggy handling of the swappable dependency in `0001_initial` in previous versions of Django, becaue I just noticed that I have a similar migration created in my `site-packages`.\n\nI guess yours will looks similar to this:\n\n```\noperations = [\n    migrations.AlterField(\n        model_name='usersocialauth',\n        name='user',\n        field=models.ForeignKey(to=settings.AUTH_USER_MODEL, related_name='social_auth'),\n    ),\n]\n```\n\nI'm not yet sure how to properly handle this, as I also can't roll back this migration now.. \n. ",
    "jschneier": "I'll also note that I played around in ipython quite a bit looking around for it but might have overlooked something obvious.\n. The nice folks in IRC pointed me at `user.is_new`\n. I just opened #1031 can you verify if it works for you?\n. @omab Can we at least merge this and then people can install from git? I think this is one of the last blockers for a lot of people to move to the new `MIDDLEWARE` setting in Django. I see the ongoing migration to the split repos but realistically for now it doesn't look like people are using that.\n. I'll also note that I played around in ipython quite a bit looking around for it but might have overlooked something obvious.\n. The nice folks in IRC pointed me at `user.is_new`\n. I just opened #1031 can you verify if it works for you?\n. @omab Can we at least merge this and then people can install from git? I think this is one of the last blockers for a lot of people to move to the new `MIDDLEWARE` setting in Django. I see the ongoing migration to the split repos but realistically for now it doesn't look like people are using that.\n. ",
    "crashtext": "when testing with current python-social-auth==0.2.10, it done the same result\n. I try to test a workaround like bellow : \n\n```\ndef load_sqla(handler):\n    web.ctx.orm = scoped_session(sessionmaker(bind=engine))\n    get_data = web.input()\n\n    if get_data.has_key('redirect_state'):\n        web.web_session['facebook_state'] = get_data['redirect_state']\n\n\n    try:\n        return handler()\n    except web.HTTPError:\n        web.ctx.orm.commit()\n        raise\n    except:\n        web.ctx.orm.rollback()\n        raise\n    finally:\n        web.ctx.orm.commit()\n```\n\nAnd now it pass : \n\n```\nINFO:requests.packages.urllib3.connectionpool:Starting new HTTPS connection (1): graph.facebook.com\nDEBUG:requests.packages.urllib3.connectionpool:\"GET /v2.3/oauth/access_token?client_secret=[snipped]&code=[snipped]&client_id=[snipped]&redirect_uri=http%3A%2F%2Ftheater.greenmango.net%3A8080%2Fcomplete%2Ffacebook%2F%3Fredirect_state%3DJyGaQfieqg5FCzDLquwAUwavDI2RnrX4 HTTP/1.1\" 200 285\nINFO:requests.packages.urllib3.connectionpool:Starting new HTTPS connection (1): graph.facebook.com\nDEBUG:requests.packages.urllib3.connectionpool:\"GET /v2.3/me?access_token=[snipped]&appsecret_proof=[snipped] HTTP/1.1\" 200 580\n```\n\nI test the https requests and Facebook answer correct data.\n\nBut unfortunately, there is no user store in database.\n. Ok, I solve the problem without any hack.\nI just forget to code and import the migrate.py ... \n. when testing with current python-social-auth==0.2.10, it done the same result\n. I try to test a workaround like bellow : \n\n```\ndef load_sqla(handler):\n    web.ctx.orm = scoped_session(sessionmaker(bind=engine))\n    get_data = web.input()\n\n    if get_data.has_key('redirect_state'):\n        web.web_session['facebook_state'] = get_data['redirect_state']\n\n\n    try:\n        return handler()\n    except web.HTTPError:\n        web.ctx.orm.commit()\n        raise\n    except:\n        web.ctx.orm.rollback()\n        raise\n    finally:\n        web.ctx.orm.commit()\n```\n\nAnd now it pass : \n\n```\nINFO:requests.packages.urllib3.connectionpool:Starting new HTTPS connection (1): graph.facebook.com\nDEBUG:requests.packages.urllib3.connectionpool:\"GET /v2.3/oauth/access_token?client_secret=[snipped]&code=[snipped]&client_id=[snipped]&redirect_uri=http%3A%2F%2Ftheater.greenmango.net%3A8080%2Fcomplete%2Ffacebook%2F%3Fredirect_state%3DJyGaQfieqg5FCzDLquwAUwavDI2RnrX4 HTTP/1.1\" 200 285\nINFO:requests.packages.urllib3.connectionpool:Starting new HTTPS connection (1): graph.facebook.com\nDEBUG:requests.packages.urllib3.connectionpool:\"GET /v2.3/me?access_token=[snipped]&appsecret_proof=[snipped] HTTP/1.1\" 200 580\n```\n\nI test the https requests and Facebook answer correct data.\n\nBut unfortunately, there is no user store in database.\n. Ok, I solve the problem without any hack.\nI just forget to code and import the migrate.py ... \n. ",
    "vrtx64": "Resolved issue by change in /social/utils.py\n\n```\nfrom requests.packages.urllib3.poolmanager import PoolManager\n```\n\nto\n\n```\nfrom urllib3.poolmanager import PoolManager\n```\n. Resolved issue by change in /social/utils.py\n\n```\nfrom requests.packages.urllib3.poolmanager import PoolManager\n```\n\nto\n\n```\nfrom urllib3.poolmanager import PoolManager\n```\n. ",
    "marekjalovec": "Ad a newer version of requests to your requirements\n\nrequests>=2.5.1\n. Ad a newer version of requests to your requirements\n\nrequests>=2.5.1\n. ",
    "MingweiSamuel": "@marekjalovec I am having the same problem as mentioned in this thread, using python3\n\nI have the following relevant packages installed via `pip3`\n\n```\noauthlib (0.7.2)\nPyJWT (1.3.0)\npython-social-auth (0.2.11)\npython3-openid (3.0.5)\nrequests (2.7.0)\nrequests-oauthlib (0.5.0)\nsix (1.9.0)\nurllib3 (1.10.4)\n```\n\nI get a slightly different error from `manage.py` (django):\n\n```\nTraceback (most recent call last):\n  File \"./manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/usr/local/lib/python3.4/dist-packages/django/core/management/__init__.py\", line 338, in execute_from_command_line\n    utility.execute()\n  File \"/usr/local/lib/python3.4/dist-packages/django/core/management/__init__.py\", line 312, in execute\n    django.setup()\n  File \"/usr/local/lib/python3.4/dist-packages/django/__init__.py\", line 18, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/usr/local/lib/python3.4/dist-packages/django/apps/registry.py\", line 108, in populate\n    app_config.import_models(all_models)\n  File \"/usr/local/lib/python3.4/dist-packages/django/apps/config.py\", line 198, in import_models\n    self.models_module = import_module(models_module_name)\n  File \"/usr/lib/python3.4/importlib/__init__.py\", line 109, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 2231, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 2214, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 2203, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1200, in _load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1129, in _exec\n  File \"<frozen importlib._bootstrap>\", line 1448, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 321, in _call_with_frames_removed\n  File \"/usr/local/lib/python3.4/dist-packages/social/apps/django_app/default/models.py\", line 8, in <module>\n    from social.utils import setting_name\n  File \"/usr/local/lib/python3.4/dist-packages/social/utils.py\", line 13, in <module>\n    from requests.packages.urllib3.poolmanager import PoolManager\nImportError: No module named 'requests.packages'\n```\n\nAny help is appreciated\n. also the same fix mentioned by @vrtx64 fixed the error\n. Can we get this reopened?\nOn Sep 9, 2015 5:16 PM, \"ojaved\" notifications@github.com wrote:\n\n> @marekjalovec https://github.com/marekjalovec I am getting the error\n> even with requests>=2.5.1 .\n> @vrtx64 https://github.com/vrtx64 fixes the error\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/issues/617#issuecomment-139078159\n> .\n. @marekjalovec I am having the same problem as mentioned in this thread, using python3\n\nI have the following relevant packages installed via `pip3`\n\n```\noauthlib (0.7.2)\nPyJWT (1.3.0)\npython-social-auth (0.2.11)\npython3-openid (3.0.5)\nrequests (2.7.0)\nrequests-oauthlib (0.5.0)\nsix (1.9.0)\nurllib3 (1.10.4)\n```\n\nI get a slightly different error from `manage.py` (django):\n\n```\nTraceback (most recent call last):\n  File \"./manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/usr/local/lib/python3.4/dist-packages/django/core/management/__init__.py\", line 338, in execute_from_command_line\n    utility.execute()\n  File \"/usr/local/lib/python3.4/dist-packages/django/core/management/__init__.py\", line 312, in execute\n    django.setup()\n  File \"/usr/local/lib/python3.4/dist-packages/django/__init__.py\", line 18, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/usr/local/lib/python3.4/dist-packages/django/apps/registry.py\", line 108, in populate\n    app_config.import_models(all_models)\n  File \"/usr/local/lib/python3.4/dist-packages/django/apps/config.py\", line 198, in import_models\n    self.models_module = import_module(models_module_name)\n  File \"/usr/lib/python3.4/importlib/__init__.py\", line 109, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 2231, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 2214, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 2203, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1200, in _load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1129, in _exec\n  File \"<frozen importlib._bootstrap>\", line 1448, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 321, in _call_with_frames_removed\n  File \"/usr/local/lib/python3.4/dist-packages/social/apps/django_app/default/models.py\", line 8, in <module>\n    from social.utils import setting_name\n  File \"/usr/local/lib/python3.4/dist-packages/social/utils.py\", line 13, in <module>\n    from requests.packages.urllib3.poolmanager import PoolManager\nImportError: No module named 'requests.packages'\n```\n\nAny help is appreciated\n. also the same fix mentioned by @vrtx64 fixed the error\n. Can we get this reopened?\nOn Sep 9, 2015 5:16 PM, \"ojaved\" notifications@github.com wrote:\n\n> @marekjalovec https://github.com/marekjalovec I am getting the error\n> even with requests>=2.5.1 .\n> @vrtx64 https://github.com/vrtx64 fixes the error\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/issues/617#issuecomment-139078159\n> .\n. ",
    "gvidon": "@marekjalovec thanks for proper solution!\n. @marekjalovec thanks for proper solution!\n. ",
    "ojaved": "@marekjalovec I am getting the error even with requests>=2.5.1 . \n@vrtx64 fixes the error\n. @marekjalovec I am getting the error even with requests>=2.5.1 . \n@vrtx64 fixes the error\n. ",
    "puneetagg": "Am also facing this issue. It's almost year old issue. Does anyone know how to deal with this.?\n. @omab I checked with the new requirements as well. But still its stuck there.\n. Its resolved. Python used for running application was of the system and I now changed it to that of my virtual env. May be that's why requests module was being picked from the system instead of virtaulenv.\n\nThanks!\n. Am also facing this issue. It's almost year old issue. Does anyone know how to deal with this.?\n. @omab I checked with the new requirements as well. But still its stuck there.\n. Its resolved. Python used for running application was of the system and I now changed it to that of my virtual env. May be that's why requests module was being picked from the system instead of virtaulenv.\n\nThanks!\n. ",
    "sairambandaru": "Its resolved.I am Python using 2.7 got same issue\nTry to import (from urllib3.poolmanager import PoolManager)\n\nThanks!\n. Its resolved.I am Python using 2.7 got same issue\nTry to import (from urllib3.poolmanager import PoolManager)\n\nThanks!\n. ",
    "Atorich": "+1\n. +1\n. ",
    "Amareis": "-1. Now KEY_ID must be 'uid', else you get user with 'None' UID, and this is very bad.\nAPI response does not contain field `user_id`, used by psa by default. I made simple workaround for this issue in my settings.py\n\n``` python\n# monkey patch for social vk api\nfrom social.backends.vk import VKOAuth2\nVKOAuth2.ID_KEY = 'uid'\n```\n. Ok, if set `SOCIAL_AUTH_VK_OAUTH2_API_VERSION` to '5.52' (current API version), then KEY_ID must be 'id'. But anyway, response from default version API (3.0) doesn't contains field `user_id`, it's contain `uid` field.\nIt's need to be fixed.\n. -1. Now KEY_ID must be 'uid', else you get user with 'None' UID, and this is very bad.\nAPI response does not contain field `user_id`, used by psa by default. I made simple workaround for this issue in my settings.py\n\n``` python\n# monkey patch for social vk api\nfrom social.backends.vk import VKOAuth2\nVKOAuth2.ID_KEY = 'uid'\n```\n. Ok, if set `SOCIAL_AUTH_VK_OAUTH2_API_VERSION` to '5.52' (current API version), then KEY_ID must be 'id'. But anyway, response from default version API (3.0) doesn't contains field `user_id`, it's contain `uid` field.\nIt's need to be fixed.\n. ",
    "andrewsomething": "Awesome, thanks!\n. Awesome, thanks!\n. ",
    "petitchamp": "maybe you guys can update the readme and add weixin in the list \n. maybe you guys can update the readme and add weixin in the list \n. ",
    "nickcatal": "FYI, this was solved in 663a174db194b1cc46effcaa4a2dc45d41d0d8e3 (I spent a long time trying to figure this out without realizing I had the wrong version installed)\n. Ouch. Misread that. You're right. Hmm.....\n. @mvschaik Since you have #747 can you close this? I didn't notice it. Will move my commit comments over there\n. Left a few comments that I could see on first glance.\n\nThis is what I need to start to flesh out part 2 of #750 so hopefully it gets merged in.\n. @omab let me know if you have any concerns here.\n\nI need to incorporate this into a larger open source project and would prefer to simply have `pip install python-social-auth` as the setup step :)\n. @omab squashed this commit, but the addition of naver upstream causes a merge conflict (two \"n\" backends) you'll need to fix\n\nFYI, this is currently live at https://public.ofaconnect.com/ if you want to check it out.\n\nIt'd be great to have this merged in so that I can change the requirements.txt file in https://github.com/ofa/connect to reference the pypi entry instead of a github fork.\n. Awesome!\n\n@omab Can you push this to PyPI?\n\nThanks\n. FYI, this was solved in 663a174db194b1cc46effcaa4a2dc45d41d0d8e3 (I spent a long time trying to figure this out without realizing I had the wrong version installed)\n. Ouch. Misread that. You're right. Hmm.....\n. @mvschaik Since you have #747 can you close this? I didn't notice it. Will move my commit comments over there\n. Left a few comments that I could see on first glance.\n\nThis is what I need to start to flesh out part 2 of #750 so hopefully it gets merged in.\n. @omab let me know if you have any concerns here.\n\nI need to incorporate this into a larger open source project and would prefer to simply have `pip install python-social-auth` as the setup step :)\n. @omab squashed this commit, but the addition of naver upstream causes a merge conflict (two \"n\" backends) you'll need to fix\n\nFYI, this is currently live at https://public.ofaconnect.com/ if you want to check it out.\n\nIt'd be great to have this merged in so that I can change the requirements.txt file in https://github.com/ofa/connect to reference the pypi entry instead of a github fork.\n. Awesome!\n\n@omab Can you push this to PyPI?\n\nThanks\n. ",
    "shaib": "No, this was **introduced** in 663a174. Before that commit, migrations create a field that doesn't work well with Django 1.8. With it, migrations create a field which works well with Django 1.8, but not Django 1.7.\n. Yes, in fact, #632 is a fuller implementation of the same thing. This is no longer required (I took time to verify that the now-built-in implementation works for us before confirming).\n. No, this was **introduced** in 663a174. Before that commit, migrations create a field that doesn't work well with Django 1.8. With it, migrations create a field which works well with Django 1.8, but not Django 1.7.\n. Yes, in fact, #632 is a fuller implementation of the same thing. This is no longer required (I took time to verify that the now-built-in implementation works for us before confirming).\n. ",
    "koterpillar": "Specify the length on the `EmailField` manually to fix this.\n. Specify the length on the `EmailField` manually to fix this.\n. ",
    "hwkns": "@omab could you maybe release this fix to PyPI?  This is currently breaking my builds, so I've had to downgrade `python-social-auth`.\n. @omab could you maybe release this fix to PyPI?  This is currently breaking my builds, so I've had to downgrade `python-social-auth`.\n. ",
    "ziegenberg": "I created a new temporary user, build a virtual environment and tested python-social-auth with buildout in two different versions.\n\n```\ntesting@jiffy02:~$ virtualenv venv\ntesting@jiffy02:~$ source venv/bin/activate\n(venv) testing@jiffy02:~$ pip install zc.buildout\n(venv) testing@jiffy02:~$ buildout\n```\n\n**buildout.cfg** (#1)\n\n``` ini\n[buildout]\nparts = main\n[main]\nrecipe = zc.recipe.egg\neggs = python-social-auth\n```\n\nIt fails:\n\n```\n(venv)testing@jiffy02:~$ buildout\nCreating directory '/home/testing/bin'.\nCreating directory '/home/testing/parts'.\nCreating directory '/home/testing/eggs'.\nCreating directory '/home/testing/develop-eggs'.\nGetting distribution for 'zc.recipe.egg>=2.0.0a3'.\nGot zc.recipe.egg 2.0.1.\nInstalling main.\nGetting distribution for 'python-social-auth'.\nwarning: no previously-included files matching '*' found under directory '.tox'\nwarning: no previously-included files matching '*.pyc' found under directory 'social'\nwarning: no previously-included files matching '*.pyc' found under directory 'examples'\nwarning: no previously-included files matching '*.db' found under directory 'examples'\nwarning: no previously-included files matching 'local_settings.py' found under directory 'examples'\nwarning: no previously-included files matching '*' found under directory 'examples/webpy_example/sessions'\nNo eggs found in /tmp/easy_install-wyDf6z/python-social-auth-0.2.9/egg-dist-tmp-7Pz6Vl (setup script problem?)\nWhile:\n  Installing main.\n  Getting distribution for 'python-social-auth'.\nError: Couldn't install: python-social-auth 0.2.9\n```\n\n**buildout.cfg** (#2)\n\n``` ini\n[buildout]\nparts = main\n[main]\nrecipe = zc.recipe.egg\neggs = python-social-auth<0.2.9\n```\n\nIt succeeds:\n\n```\n(venv)testing@jiffy02:~$ buildout\nCreating directory '/home/testing/bin'.\nCreating directory '/home/testing/parts'.\nCreating directory '/home/testing/eggs'.\nCreating directory '/home/testing/develop-eggs'.\nGetting distribution for 'zc.recipe.egg>=2.0.0a3'.\nGot zc.recipe.egg 2.0.1.\nInstalling main.\nGetting distribution for 'python-social-auth<0.2.9'.\nwarning: no previously-included files matching '*.pyc' found under directory 'social'\nwarning: no previously-included files matching '*.pyc' found under directory 'examples'\nwarning: no previously-included files matching '*.db' found under directory 'examples'\nwarning: no previously-included files matching 'local_settings.py' found under directory 'examples'\nwarning: no previously-included files matching '*' found under directory 'examples/webpy_example/sessions'\nGot python-social-auth 0.2.7.\nGetting distribution for 'PyJWT>=1.0.0'.\nzip_safe flag not set; analyzing archive contents...\nGot PyJWT 1.1.0.\nGetting distribution for 'six>=1.2.0'.\nno previously-included directories found matching 'documentation/_build'\nzip_safe flag not set; analyzing archive contents...\nsix: module references __path__\nGot six 1.9.0.\nGetting distribution for 'requests-oauthlib>=0.3.1'.\nGot requests-oauthlib 0.5.0.\nGetting distribution for 'oauthlib>=0.3.8'.\nzip_safe flag not set; analyzing archive contents...\nGot oauthlib 0.7.2.\nGetting distribution for 'requests>=1.1.0'.\nGot requests 2.7.0.\nGetting distribution for 'python-openid>=2.2'.\nwarning: no files found matching 'CHANGELOG'\nwarning: no files found matching '*.css' under directory 'doc'\nwarning: no files found matching '*.html' under directory 'doc'\nzip_safe flag not set; analyzing archive contents...\nGot python-openid 2.2.5.\n```\n. I created a new temporary user, build a virtual environment and tested python-social-auth with buildout in two different versions.\n\n```\ntesting@jiffy02:~$ virtualenv venv\ntesting@jiffy02:~$ source venv/bin/activate\n(venv) testing@jiffy02:~$ pip install zc.buildout\n(venv) testing@jiffy02:~$ buildout\n```\n\n**buildout.cfg** (#1)\n\n``` ini\n[buildout]\nparts = main\n[main]\nrecipe = zc.recipe.egg\neggs = python-social-auth\n```\n\nIt fails:\n\n```\n(venv)testing@jiffy02:~$ buildout\nCreating directory '/home/testing/bin'.\nCreating directory '/home/testing/parts'.\nCreating directory '/home/testing/eggs'.\nCreating directory '/home/testing/develop-eggs'.\nGetting distribution for 'zc.recipe.egg>=2.0.0a3'.\nGot zc.recipe.egg 2.0.1.\nInstalling main.\nGetting distribution for 'python-social-auth'.\nwarning: no previously-included files matching '*' found under directory '.tox'\nwarning: no previously-included files matching '*.pyc' found under directory 'social'\nwarning: no previously-included files matching '*.pyc' found under directory 'examples'\nwarning: no previously-included files matching '*.db' found under directory 'examples'\nwarning: no previously-included files matching 'local_settings.py' found under directory 'examples'\nwarning: no previously-included files matching '*' found under directory 'examples/webpy_example/sessions'\nNo eggs found in /tmp/easy_install-wyDf6z/python-social-auth-0.2.9/egg-dist-tmp-7Pz6Vl (setup script problem?)\nWhile:\n  Installing main.\n  Getting distribution for 'python-social-auth'.\nError: Couldn't install: python-social-auth 0.2.9\n```\n\n**buildout.cfg** (#2)\n\n``` ini\n[buildout]\nparts = main\n[main]\nrecipe = zc.recipe.egg\neggs = python-social-auth<0.2.9\n```\n\nIt succeeds:\n\n```\n(venv)testing@jiffy02:~$ buildout\nCreating directory '/home/testing/bin'.\nCreating directory '/home/testing/parts'.\nCreating directory '/home/testing/eggs'.\nCreating directory '/home/testing/develop-eggs'.\nGetting distribution for 'zc.recipe.egg>=2.0.0a3'.\nGot zc.recipe.egg 2.0.1.\nInstalling main.\nGetting distribution for 'python-social-auth<0.2.9'.\nwarning: no previously-included files matching '*.pyc' found under directory 'social'\nwarning: no previously-included files matching '*.pyc' found under directory 'examples'\nwarning: no previously-included files matching '*.db' found under directory 'examples'\nwarning: no previously-included files matching 'local_settings.py' found under directory 'examples'\nwarning: no previously-included files matching '*' found under directory 'examples/webpy_example/sessions'\nGot python-social-auth 0.2.7.\nGetting distribution for 'PyJWT>=1.0.0'.\nzip_safe flag not set; analyzing archive contents...\nGot PyJWT 1.1.0.\nGetting distribution for 'six>=1.2.0'.\nno previously-included directories found matching 'documentation/_build'\nzip_safe flag not set; analyzing archive contents...\nsix: module references __path__\nGot six 1.9.0.\nGetting distribution for 'requests-oauthlib>=0.3.1'.\nGot requests-oauthlib 0.5.0.\nGetting distribution for 'oauthlib>=0.3.8'.\nzip_safe flag not set; analyzing archive contents...\nGot oauthlib 0.7.2.\nGetting distribution for 'requests>=1.1.0'.\nGot requests 2.7.0.\nGetting distribution for 'python-openid>=2.2'.\nwarning: no files found matching 'CHANGELOG'\nwarning: no files found matching '*.css' under directory 'doc'\nwarning: no files found matching '*.html' under directory 'doc'\nzip_safe flag not set; analyzing archive contents...\nGot python-openid 2.2.5.\n```\n. ",
    "wdoekes": "Same problem over here. I did a manual download of python-social 0.2.9, untar, python setup.py bdist_egg, unzip of that egg, and the mailman3 buildout continued without complaints.\n\n(No idea what I did though, I never use buildout nor eggs.)\n. Apparently this change:\n\n```\n--- python-social-auth-0.2.7/python_social_auth.egg-info/requires.txt   2015-04-19 09:13:58.000000000 +0200\n+++ python-social-auth-0.2.9/python_social_auth.egg-info/requires.txt   2015-05-25 22:01:54.817050206 +0200\n@@ -1,6 +1,6 @@\n-python-openid>=2.2\n+python3-openid>=3.0.1\n```\n\nI had to install the former to make things work. Installing the latter complained about py3-only stuff. (mailman setup scripts use py2).\n. Same problem over here. I did a manual download of python-social 0.2.9, untar, python setup.py bdist_egg, unzip of that egg, and the mailman3 buildout continued without complaints.\n\n(No idea what I did though, I never use buildout nor eggs.)\n. Apparently this change:\n\n```\n--- python-social-auth-0.2.7/python_social_auth.egg-info/requires.txt   2015-04-19 09:13:58.000000000 +0200\n+++ python-social-auth-0.2.9/python_social_auth.egg-info/requires.txt   2015-05-25 22:01:54.817050206 +0200\n@@ -1,6 +1,6 @@\n-python-openid>=2.2\n+python3-openid>=3.0.1\n```\n\nI had to install the former to make things work. Installing the latter complained about py3-only stuff. (mailman setup scripts use py2).\n. ",
    "Cykooz": "Please, apply the patch from **abompard** and release a new version. Until that happens, I can only use the version 0.2.7\n. Please, apply the patch from **abompard** and release a new version. Until that happens, I can only use the version 0.2.7\n. ",
    "garryqian": "I got similar issue with other app refer to user module in django 1.8. \nBut it only happens after I upgrade MySQL from 5.1 to 5.7.9.\nI find out that the auth_user table is not created at this time, passed after re-run migrate.\nI have not figure out the root cause. Just for your reference.@jasonwaters\n. I got similar issue with other app refer to user module in django 1.8. \nBut it only happens after I upgrade MySQL from 5.1 to 5.7.9.\nI find out that the auth_user table is not created at this time, passed after re-run migrate.\nI have not figure out the root cause. Just for your reference.@jasonwaters\n. ",
    "jduyon": "I've ran into this issue also, and seem to have fixed it by \"starting from scratch\" while using django 1.9.1 and mysql 5.6.23. My steps that seemed to work were:\n(first setup a test that reproduces the issue)\n- Backup mysql database\n- Remove migrations folders from all apps (including auth and admin in site-packages/django/contrib/<auth or admin>}/migrations/)\n- Remove auto_created=True from class Meta of one of my models (unrelated to this specific issue)\n- Drop testing and production database\n- Run makemigrations for 'default', 'admin','auth' and then each of my other installed apps\n- Run migrate \n- Rerun the tests and hopefully works again.\n\nEdit: Here's my requirements.txt:\n\nDjango==1.9.1\ndjango-extensions==1.6.1\nfuncsigs==0.4\ngunicorn==19.3.0\nmock==1.3.0\nMySQL-python==1.2.5\nnose==1.3.7\noauthlib==1.0.3\npbr==1.7.0\nPyJWT==1.4.0\npython-openid==2.2.5\npython-social-auth==0.2.13\nrequests==2.9.1\nrequests-oauthlib==0.6.0\nsix==1.10.0\nstripe==1.22.2\nuWSGI==2.0.10\n. I've ran into this issue also, and seem to have fixed it by \"starting from scratch\" while using django 1.9.1 and mysql 5.6.23. My steps that seemed to work were:\n(first setup a test that reproduces the issue)\n- Backup mysql database\n- Remove migrations folders from all apps (including auth and admin in site-packages/django/contrib/<auth or admin>}/migrations/)\n- Remove auto_created=True from class Meta of one of my models (unrelated to this specific issue)\n- Drop testing and production database\n- Run makemigrations for 'default', 'admin','auth' and then each of my other installed apps\n- Run migrate \n- Rerun the tests and hopefully works again.\n\nEdit: Here's my requirements.txt:\n\nDjango==1.9.1\ndjango-extensions==1.6.1\nfuncsigs==0.4\ngunicorn==19.3.0\nmock==1.3.0\nMySQL-python==1.2.5\nnose==1.3.7\noauthlib==1.0.3\npbr==1.7.0\nPyJWT==1.4.0\npython-openid==2.2.5\npython-social-auth==0.2.13\nrequests==2.9.1\nrequests-oauthlib==0.6.0\nsix==1.10.0\nstripe==1.22.2\nuWSGI==2.0.10\n. ",
    "marccerrato": ":+1: \n. :+1: \n. ",
    "vinhub": "We will resubmit after correcting above errors.\n. We will resubmit after correcting above errors.\n. ",
    "blackrosezy": "I have found the issue. My `create_user` function returns string instead of user object:\n\n##### WRONG:\n\n```\n    def create_user(self, email=None, password=None):\n        .......\n        user.save()\n        return user.new_email_key <---------------- (x)\n```\n\n##### CORRECT:\n\n```\n    def create_user(self, email=None, password=None):\n        .......\n        user.save()\n        return user <---------------- (/)\n```\n\nI have also found that the `SOCIAL_AUTH_USER_MODEL` variable is not required when using custom user model in Django (the app automatic get the value from `AUTH_USER_MODEL`).\n. I have found the issue. My `create_user` function returns string instead of user object:\n\n##### WRONG:\n\n```\n    def create_user(self, email=None, password=None):\n        .......\n        user.save()\n        return user.new_email_key <---------------- (x)\n```\n\n##### CORRECT:\n\n```\n    def create_user(self, email=None, password=None):\n        .......\n        user.save()\n        return user <---------------- (/)\n```\n\nI have also found that the `SOCIAL_AUTH_USER_MODEL` variable is not required when using custom user model in Django (the app automatic get the value from `AUTH_USER_MODEL`).\n. ",
    "tomkcook": "No solution to this?  I get the same.\n. I should perhaps mention that I'm using Python 3.4 with SQLAlchemy 1.0.11 and python-social-auth 0.2.14.\n. Never mind, this is what I get for not calling `init_social` before creating the schema.\n\nSo now my manage.py looks like this:\n\n```\nimport ha.models\nimport ha.wsgi\nfrom ha.wsgi import application\nfrom social.apps.flask_app.default import models\nfrom social.apps.flask_app.default.models import init_social\n\ninit_social(ha.wsgi.application, ha.models.db_session)\n#ha.models.db.metadata.drop_all(ha.models.engine)\n#models.PSABase.metadata.drop_all(ha.models.engine)\nha.models.db.metadata.create_all(ha.models.engine)\nmodels.PSABase.metadata.create_all(ha.models.engine)\n```\n\nand I have the same problem as #634.  Why?\n. No solution to this?  I get the same.\n. I should perhaps mention that I'm using Python 3.4 with SQLAlchemy 1.0.11 and python-social-auth 0.2.14.\n. Never mind, this is what I get for not calling `init_social` before creating the schema.\n\nSo now my manage.py looks like this:\n\n```\nimport ha.models\nimport ha.wsgi\nfrom ha.wsgi import application\nfrom social.apps.flask_app.default import models\nfrom social.apps.flask_app.default.models import init_social\n\ninit_social(ha.wsgi.application, ha.models.db_session)\n#ha.models.db.metadata.drop_all(ha.models.engine)\n#models.PSABase.metadata.drop_all(ha.models.engine)\nha.models.db.metadata.create_all(ha.models.engine)\nmodels.PSABase.metadata.create_all(ha.models.engine)\n```\n\nand I have the same problem as #634.  Why?\n. ",
    "prmtl": "I had similar problem and was able to fix it.\nThe key to understand what is causing that issue is that `init_social` method must be called only once per whole test session - if not, the column `social_auth_usersocialauth.uid` will be initialized over and over and causing this bug to appear. The simplest solution is just to create `app` once per whole test session. In case of the @benregn code change `app` fixture scope from \"function\" to \"session\".\n. I had similar problem and was able to fix it.\nThe key to understand what is causing that issue is that `init_social` method must be called only once per whole test session - if not, the column `social_auth_usersocialauth.uid` will be initialized over and over and causing this bug to appear. The simplest solution is just to create `app` once per whole test session. In case of the @benregn code change `app` fixture scope from \"function\" to \"session\".\n. ",
    "frgtn": "This is still relevant as buildout depends on egg-info directory being in sdist. See #640 for more details.\n. Duplicate of #635.\n. This is still relevant as buildout depends on egg-info directory being in sdist. See #640 for more details.\n. Duplicate of #635.\n. ",
    "neufeind": "Please reconsider. See also bugreport here: https://github.com/omab/python-social-auth/issues/623\n. Please reconsider. See also bugreport here: https://github.com/omab/python-social-auth/issues/623\n. ",
    "nemesisdesign": "It seems it's possible to replicate the issue with doind just:\n\n```\neasy_install python-social-auth==0.2.10\n```\n\npip works fine though ... \n. @omab do you know how to workaround this issue?\n. oh well, I found out this is a duplicate of #640 and #635, so I can close this issue while renovating the request to please release a fixed version on pypi.\n. @omab thank you very much\n. It seems it's possible to replicate the issue with doind just:\n\n```\neasy_install python-social-auth==0.2.10\n```\n\npip works fine though ... \n. @omab do you know how to workaround this issue?\n. oh well, I found out this is a duplicate of #640 and #635, so I can close this issue while renovating the request to please release a fixed version on pypi.\n. @omab thank you very much\n. ",
    "adheus": "did you find a solution?\n. did you find a solution?\n. ",
    "citmusa": "no, while the project was active, this error appeared some times\n. no, while the project was active, this error appeared some times\n. ",
    "vvakame": ":+1: \n. :+1: \n. ",
    "Shurahbeel": "i need the python script and password list\n\nOn Fri, Jun 19, 2015 at 5:40 AM, Masahiro Wakame notifications@github.com\nwrote:\n\n> [image: :+1:]\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/issues/644#issuecomment-113503760\n> .\n. i need the python script and password list\n\nOn Fri, Jun 19, 2015 at 5:40 AM, Masahiro Wakame notifications@github.com\nwrote:\n\n> [image: :+1:]\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/issues/644#issuecomment-113503760\n> .\n. ",
    "dmiyakawa": "FWIW, I implemented a simple django project with Python Social Auth that demonstrates this behavior.\n\nhttps://github.com/dmiyakawa/psa_exp\n\nMaybe I'm not using the library, so pointing it out would be also helpful.\n. FWIW, I implemented a simple django project with Python Social Auth that demonstrates this behavior.\n\nhttps://github.com/dmiyakawa/psa_exp\n\nMaybe I'm not using the library, so pointing it out would be also helpful.\n. ",
    "mhidaka": ":+1:\n. :+1:\n. ",
    "sidazad": "Any updates on this? Seems like OpenID has been phased out in favor of OpenID Connect. Hence support for OpenID Connect is imperative.\n. Any updates on this? Seems like OpenID has been phased out in favor of OpenID Connect. Hence support for OpenID Connect is imperative.\n. ",
    "hjwp": "+1\n. +1\n. ",
    "villiers-s": "My progress with this issue thus far:\n- I did the `nonce` fix \n  - also got the RS256 algorithm error\n- Added `ID_TOKEN_JWT_DECODE_KWARGS = {'algorithms': ['RS256']}` to settings to fix that\n  - Got a different algorithm error\n- Installed cryptography (`pip install cryptography`) which fixed that\n  - Got this error `TypeError: Expecting a PEM-formatted key`\n\nI have no idea where to even start fixing that.\n. My progress with this issue thus far:\n- I did the `nonce` fix \n  - also got the RS256 algorithm error\n- Added `ID_TOKEN_JWT_DECODE_KWARGS = {'algorithms': ['RS256']}` to settings to fix that\n  - Got a different algorithm error\n- Installed cryptography (`pip install cryptography`) which fixed that\n  - Got this error `TypeError: Expecting a PEM-formatted key`\n\nI have no idea where to even start fixing that.\n. ",
    "gabejackson": "@unklphil I just implemented OpenIdConnect authorization for some proprietary platform today which also only used RS256 for signing JWTs. I had to do something like this in ```def validate_and_return_id_token``` to get it working:\r\n```\r\nfrom cryptography.hazmat.backends import default_backend\r\nfrom cryptography.x509 import load_pem_x509_certificate\r\n\r\nkey = load_pem_x509_certificate(self.setting('ID_TOKEN_DECRYPTION_KEY'), default_backend())\r\npublic_key = key.public_key()\r\ndecode_kwargs = {\r\n    'algorithms': ['RS256'],\r\n    'audience': client_id,\r\n    'issuer': self.ID_TOKEN_ISSUER,\r\n    'key': public_key,\r\n    'options': {\r\n        'verify_signature': True,\r\n        'verify_exp': True,\r\n        'verify_iat': True,\r\n        'verify_aud': True,\r\n        'verify_iss': True,\r\n        'require_exp': True,\r\n        'require_iat': True,\r\n    },\r\n}\r\n```\r\n\r\n```your_social_ID_TOKEN_DECRYPTION_KEY``` should contain the certificate. I used something like this to load it:\r\n```\r\nin_file = open(\"public-key-for-jwt-signing.pem\", \"rb\")\r\nyour_social_ID_TOKEN_DECRYPTION_KEY = infile.read()\r\n```\r\n\r\nI hope that helps.\r\n\r\nMaybe on note that got me at first because I wasn't too familiar with JWTs: The RS256 signing method uses asymmetrical signing, which means the Producer (Server) users a private key to sign the request and you (Consumer) have to use the public key to verify the signature (with jwt_decode). Google's Open ID Connect gives you a ```kid``` back which can be retrieved from the discovery document at https://accounts.google.com/.well-known/openid-configuration\r\nThe param \"jwks_uri\": \"https://www.googleapis.com/oauth2/v3/certs\", contains the certs with appropriate ```kid``` values. Ticket #747 has done great work im implementing all this automatically, but it hasn't been merged yet. Check out the source there.. Any reason this hasn't been merged yet? Have been working on something similar lately and could lend a hand getting this merged if needed.. @nitin478 you resolve this issue? Experiencing the same issue with a custom OpenIDConnect backend we have implemented. But oddly only for some users. It seems that the SocialAuthUser is not being created. Will check in to it today and see what I can find out.. The problem is most likely that ```get_user_id``` isn't returning the correct username. This will create a ```SocialAuthUser``` with uid = None. The next user that tries to connect will then also get this uid, which will cause the above mentioned problem. So make sure your get_user_id code is really returning a valid username for the SocialAuthUser creation part. This solved the issue for me.. @unklphil I just implemented OpenIdConnect authorization for some proprietary platform today which also only used RS256 for signing JWTs. I had to do something like this in ```def validate_and_return_id_token``` to get it working:\r\n```\r\nfrom cryptography.hazmat.backends import default_backend\r\nfrom cryptography.x509 import load_pem_x509_certificate\r\n\r\nkey = load_pem_x509_certificate(self.setting('ID_TOKEN_DECRYPTION_KEY'), default_backend())\r\npublic_key = key.public_key()\r\ndecode_kwargs = {\r\n    'algorithms': ['RS256'],\r\n    'audience': client_id,\r\n    'issuer': self.ID_TOKEN_ISSUER,\r\n    'key': public_key,\r\n    'options': {\r\n        'verify_signature': True,\r\n        'verify_exp': True,\r\n        'verify_iat': True,\r\n        'verify_aud': True,\r\n        'verify_iss': True,\r\n        'require_exp': True,\r\n        'require_iat': True,\r\n    },\r\n}\r\n```\r\n\r\n```your_social_ID_TOKEN_DECRYPTION_KEY``` should contain the certificate. I used something like this to load it:\r\n```\r\nin_file = open(\"public-key-for-jwt-signing.pem\", \"rb\")\r\nyour_social_ID_TOKEN_DECRYPTION_KEY = infile.read()\r\n```\r\n\r\nI hope that helps.\r\n\r\nMaybe on note that got me at first because I wasn't too familiar with JWTs: The RS256 signing method uses asymmetrical signing, which means the Producer (Server) users a private key to sign the request and you (Consumer) have to use the public key to verify the signature (with jwt_decode). Google's Open ID Connect gives you a ```kid``` back which can be retrieved from the discovery document at https://accounts.google.com/.well-known/openid-configuration\r\nThe param \"jwks_uri\": \"https://www.googleapis.com/oauth2/v3/certs\", contains the certs with appropriate ```kid``` values. Ticket #747 has done great work im implementing all this automatically, but it hasn't been merged yet. Check out the source there.. Any reason this hasn't been merged yet? Have been working on something similar lately and could lend a hand getting this merged if needed.. @nitin478 you resolve this issue? Experiencing the same issue with a custom OpenIDConnect backend we have implemented. But oddly only for some users. It seems that the SocialAuthUser is not being created. Will check in to it today and see what I can find out.. The problem is most likely that ```get_user_id``` isn't returning the correct username. This will create a ```SocialAuthUser``` with uid = None. The next user that tries to connect will then also get this uid, which will cause the above mentioned problem. So make sure your get_user_id code is really returning a valid username for the SocialAuthUser creation part. This solved the issue for me.. ",
    "mascot6699": "@chrismaille You found any solution to your problem?\n. @chrismaille You found any solution to your problem?\n. ",
    "patriotyk": "Have You resolved this issue? I get the same problem, but it happens sometimes.\n. Have You resolved this issue? I get the same problem, but it happens sometimes.\n. ",
    "jishnunand": "@patriotyk  This issue has fixed in latest version. I have tested.\n. @patriotyk  This issue has fixed in latest version. I have tested.\n. ",
    "connor11528": "I am trying to get this working with django. My code is a bit of a mess. Looking for a simple way to incorporate into a django app\n. I am trying to get this working with django. My code is a bit of a mess. Looking for a simple way to incorporate into a django app\n. ",
    "blakewest": "+1 on this. the access_token is extremely weird to find with the new gsignin2. And the docs don't really show you how to find it. It's in these weird two letter properties (like \"po\" or \"wc\") that appear to change over time. However, there's a nice clean method for getting the \"id_token\".\n. +1 on this. the access_token is extremely weird to find with the new gsignin2. And the docs don't really show you how to find it. It's in these weird two letter properties (like \"po\" or \"wc\") that appear to change over time. However, there's a nice clean method for getting the \"id_token\".\n. ",
    "anujism": "Any update on this?\n. Is there any plan to support this?\n. Any update on this?\n. Is there any plan to support this?\n. ",
    "mark-adams": "Following up, can someone take a look at this?\n. Hi, just wanted to follow-up and see if anyone had a chance to take a look at this yet.\n. Following up, can someone take a look at this?\n. Hi, just wanted to follow-up and see if anyone had a chance to take a look at this yet.\n. ",
    "codeboy": "Yep, i need it to.\n. Yep, i need it to.\n. ",
    "iserko": "closing as there's an unexpected bug, will reopen later\n. closing as there's an unexpected bug, will reopen later\n. ",
    "kaflesudip": "I am experiencing the same issue. Any reason for that?\n. Found out a solution for this. You need to add `expires_in` to the list of extra_data. Example:\n\n```\nSOCIAL_AUTH_LINKEDIN_OAUTH2_EXTRA_DATA = [\n    ('id', 'id'),\n    ('firstName', 'first_name'),\n    ('lastName', 'last_name'),\n    ('emailAddress', 'email_address'),\n    (\"expires_in\", \"expires_in\")\n]\n```\n. I am experiencing the same issue. Any reason for that?\n. Found out a solution for this. You need to add `expires_in` to the list of extra_data. Example:\n\n```\nSOCIAL_AUTH_LINKEDIN_OAUTH2_EXTRA_DATA = [\n    ('id', 'id'),\n    ('firstName', 'first_name'),\n    ('lastName', 'last_name'),\n    ('emailAddress', 'email_address'),\n    (\"expires_in\", \"expires_in\")\n]\n```\n. ",
    "sethlivingston": "The code that triggers this error,\n\n```\n    try:\n        template = loader.get_template(tpl)\n    except TemplateDoesNotExist:\n        template = loader.get_template_from_string(html)\n```\n\nonly runs if 1) you don't have your templates folder configured properly in settings.py, or 2) the template you're attempting to load doesn't exist.\n\nSo yes, this needs to be updated, but there is an easy workaround. :)\n. The code that triggers this error,\n\n```\n    try:\n        template = loader.get_template(tpl)\n    except TemplateDoesNotExist:\n        template = loader.get_template_from_string(html)\n```\n\nonly runs if 1) you don't have your templates folder configured properly in settings.py, or 2) the template you're attempting to load doesn't exist.\n\nSo yes, this needs to be updated, but there is an easy workaround. :)\n. ",
    "zergu": "+1\n. +1\n. ",
    "aisayko": "+1\n. +1\n. ",
    "highcat": "+1\n. I found solution:\nnow you need to request email field explicitly to retrieve it from Facebook, so just add this to your settings:\n\n```\nSOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {\n    'fields': 'id,name,email', # needed starting from protocol v2.4\n}\n```\n\nUP of course you need to set scope also:\n\n```\nSOCIAL_AUTH_FACEBOOK_SCOPE = ['email'] \n```\n. As I remember, there was NO way to get email from twitter, Twitter API won't return it (and everybody was frustrated about that).\nCheck it's API first, maybe things changed.\n. +1\n. I found solution:\nnow you need to request email field explicitly to retrieve it from Facebook, so just add this to your settings:\n\n```\nSOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {\n    'fields': 'id,name,email', # needed starting from protocol v2.4\n}\n```\n\nUP of course you need to set scope also:\n\n```\nSOCIAL_AUTH_FACEBOOK_SCOPE = ['email'] \n```\n. As I remember, there was NO way to get email from twitter, Twitter API won't return it (and everybody was frustrated about that).\nCheck it's API first, maybe things changed.\n. ",
    "scottlow": "+1\n. See #675 for more information on this. It looks like a Facebook API problem, as this used to work.\n. +1\n. See #675 for more information on this. It looks like a Facebook API problem, as this used to work.\n. ",
    "christianmls": "Thanks for your solution. \n\nHow I can recover the email users who are already registered before the solution?\n. Thanks for your solution. \n\nHow I can recover the email users who are already registered before the solution?\n. ",
    "aaj": "Thanks highcat. Your solution seems to be working.\n. Thanks highcat. Your solution seems to be working.\n. ",
    "macolo": "Thanks!\n. @jschneier @omab is there a reason this PR cannot  be merged?\n\nIt is very, very dear to me. :)\n. Ok, the reason for this to not work yet is that the PR is not merged yet: https://github.com/omab/python-social-auth/pull/1031\n. Thanks!\n. @jschneier @omab is there a reason this PR cannot  be merged?\n\nIt is very, very dear to me. :)\n. Ok, the reason for this to not work yet is that the PR is not merged yet: https://github.com/omab/python-social-auth/pull/1031\n. ",
    "romanovskiy-k": "Thanks! Please, update the docs.\n. Thanks! Please, update the docs.\n. ",
    "vdjkelly": "and twitter? email = \"\" ?\n. If I work with facebook to twitter the issue is not cast me email\n. and twitter? email = \"\" ?\n. If I work with facebook to twitter the issue is not cast me email\n. ",
    "diegoponciano": "I tried setting `SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS`, didn't work for me.  \nHas the API been changed again?\n. I tried setting `SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS`, didn't work for me.  \nHas the API been changed again?\n. ",
    "Amar-Chaudhari": "I updated SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAM, but doesnt seem to work.\nDo we need to update API version in https://github.com/omab/python-social-auth/blob/master/social/backends/facebook.py ?\n. @sarfrajimpinge are you able to get email address with these settings ?\nIt just doesnt work for me, response does not return email key\n. I updated SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAM, but doesnt seem to work.\nDo we need to update API version in https://github.com/omab/python-social-auth/blob/master/social/backends/facebook.py ?\n. @sarfrajimpinge are you able to get email address with these settings ?\nIt just doesnt work for me, response does not return email key\n. ",
    "hellvix": "`SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS` works for me on Facebook, but doesn't work for Twitter. Any ideas on how to get the e-mail?\n. @highcat. I found this: http://stackoverflow.com/questions/22627083/can-we-get-email-id-from-twitter-oauth-api\n\nIt migh be worth trying. I have submitted a request. Let's see what happens.\n. I am facing the same problem. I don't think it reached the master branch, did it?\n. I made the update and sent a proposal for the fix. Let's see if someone can approve it.\n. Hummmm. So this problem comes from Social Auth. Good to know.\n. Yeah, me too. I think we will need to wait until the next update appears or changing that manually.\n\nEdit:\n\nI changed it myself.\n\nIf you are not downgrading, replace /pythonX.Y/site-packages/social/apps/django_app/urls.py\n\n```\n\"\"\"URLs module\"\"\"\n    from django.conf import settings\n    try:\n        from django.conf.urls import patterns, url\n    except ImportError:\n        # Django < 1.4\n        from django.conf.urls.defaults import patterns, url\n\n\n    from social.utils import setting_name\n    from social.apps.django_app import views\n\n\n    extra = getattr(settings, setting_name('TRAILING_SLASH'), True) and '/' or ''\n\n\n    urlpatterns = [\n        # authentication / association\n        url(r'^login/(?P<backend>[^/]+){0}$'.format(extra), views.auth, name='begin'),\n        url(r'^complete/(?P<backend>[^/]+){0}$'.format(extra), views.complete, name='complete'),\n        # disconnection\n        url(r'^disconnect/(?P<backend>[^/]+){0}$'.format(extra), views.disconnect, name='disconnect'),\n        url(r'^disconnect/(?P<backend>[^/]+)/(?P<association_id>[^/]+){0}$' .format(extra), views.disconnect, name='disconnect_individual'),\n    ]\n```\n. Can it be also updated on pip repository?\n. @AlbertPuchala What was the modification you made? I believe I have to add `and not isinstance(self.extra_data, str)`.\n. @AlbertPuchala It should, but I believe @omab is really busy. He hasn't been updating the stuff we have around.\n. Should have been fixed. Update your version and let us know here the\noutcome.\nOn 20 Apr 2016 10:58, \"Julian Bez\" notifications@github.com wrote:\n\n@hellvix https://github.com/hellvix was the fix added? I have the same\nproblem as @AlbertPuchala https://github.com/AlbertPuchala.. which line\ndo I need to change?\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/omab/python-social-auth/pull/813#issuecomment-212337729\n. I submitted a request to Twitter asking for more user details (including e-mail) for my app. They approved, I changed social-auth's parameters and I am still unable to get the e-mail in the request. \nIt would be interesting to know if someone succeeded in this.\n. It worked, @halfstrik. It should be fixed in the app and updated in the documentation.\n. You can create a custom middleware to catch these exceptions. Like this one:\n\n```\nfrom social.apps.django_app.middleware import SocialAuthExceptionMiddleware\nfrom social.exceptions import AuthCanceled\nfrom django.shortcuts import redirect, render\n\nclass SocialAuthExceptionMiddleware(SocialAuthExceptionMiddleware):\n    \"\"\"\n    Handles login error exception generated by social authentication app\n    \"\"\"\n    def process_exception(self, request, exception):\n        if type(exception) == AuthCanceled:\n            return render(request, 'login_error.html', {'error_message': exception})\n        else:\n            raise exception\n```\n\nThis one catches exceptions on cancelled Authentications. You can edit and create one that fits your needs.\n. I believe it has been fixed already. However it may have not been reflected to pip repository yet. Try downloading directly from git. `pip install git+https://github.com/omab/python-social-auth.git`\n. Should come soon if not there already.\n. It is an import issue. Go in the folder and rename the file (from local_settings.py.template to local_settings.py) or fix the import.\n. `SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS` works for me on Facebook, but doesn't work for Twitter. Any ideas on how to get the e-mail?\n. @highcat. I found this: http://stackoverflow.com/questions/22627083/can-we-get-email-id-from-twitter-oauth-api\n\nIt migh be worth trying. I have submitted a request. Let's see what happens.\n. I am facing the same problem. I don't think it reached the master branch, did it?\n. I made the update and sent a proposal for the fix. Let's see if someone can approve it.\n. Hummmm. So this problem comes from Social Auth. Good to know.\n. Yeah, me too. I think we will need to wait until the next update appears or changing that manually.\n\nEdit:\n\nI changed it myself.\n\nIf you are not downgrading, replace /pythonX.Y/site-packages/social/apps/django_app/urls.py\n\n```\n\"\"\"URLs module\"\"\"\n    from django.conf import settings\n    try:\n        from django.conf.urls import patterns, url\n    except ImportError:\n        # Django < 1.4\n        from django.conf.urls.defaults import patterns, url\n\n\n    from social.utils import setting_name\n    from social.apps.django_app import views\n\n\n    extra = getattr(settings, setting_name('TRAILING_SLASH'), True) and '/' or ''\n\n\n    urlpatterns = [\n        # authentication / association\n        url(r'^login/(?P<backend>[^/]+){0}$'.format(extra), views.auth, name='begin'),\n        url(r'^complete/(?P<backend>[^/]+){0}$'.format(extra), views.complete, name='complete'),\n        # disconnection\n        url(r'^disconnect/(?P<backend>[^/]+){0}$'.format(extra), views.disconnect, name='disconnect'),\n        url(r'^disconnect/(?P<backend>[^/]+)/(?P<association_id>[^/]+){0}$' .format(extra), views.disconnect, name='disconnect_individual'),\n    ]\n```\n. Can it be also updated on pip repository?\n. @AlbertPuchala What was the modification you made? I believe I have to add `and not isinstance(self.extra_data, str)`.\n. @AlbertPuchala It should, but I believe @omab is really busy. He hasn't been updating the stuff we have around.\n. Should have been fixed. Update your version and let us know here the\noutcome.\nOn 20 Apr 2016 10:58, \"Julian Bez\" notifications@github.com wrote:\n\n@hellvix https://github.com/hellvix was the fix added? I have the same\nproblem as @AlbertPuchala https://github.com/AlbertPuchala.. which line\ndo I need to change?\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/omab/python-social-auth/pull/813#issuecomment-212337729\n. I submitted a request to Twitter asking for more user details (including e-mail) for my app. They approved, I changed social-auth's parameters and I am still unable to get the e-mail in the request. \nIt would be interesting to know if someone succeeded in this.\n. It worked, @halfstrik. It should be fixed in the app and updated in the documentation.\n. You can create a custom middleware to catch these exceptions. Like this one:\n\n```\nfrom social.apps.django_app.middleware import SocialAuthExceptionMiddleware\nfrom social.exceptions import AuthCanceled\nfrom django.shortcuts import redirect, render\n\nclass SocialAuthExceptionMiddleware(SocialAuthExceptionMiddleware):\n    \"\"\"\n    Handles login error exception generated by social authentication app\n    \"\"\"\n    def process_exception(self, request, exception):\n        if type(exception) == AuthCanceled:\n            return render(request, 'login_error.html', {'error_message': exception})\n        else:\n            raise exception\n```\n\nThis one catches exceptions on cancelled Authentications. You can edit and create one that fits your needs.\n. I believe it has been fixed already. However it may have not been reflected to pip repository yet. Try downloading directly from git. `pip install git+https://github.com/omab/python-social-auth.git`\n. Should come soon if not there already.\n. It is an import issue. Go in the folder and rename the file (from local_settings.py.template to local_settings.py) or fix the import.\n. ",
    "zixan": "@christianmls the next time user logs in with facebook their email will be added to profile.\n. @christianmls the next time user logs in with facebook their email will be added to profile.\n. ",
    "PabloLefort": "Hi!\nA work arround using `Django 1.10, Python Social Auth 0.2.21 and Requests 2.11.1` to get email of user with facebook strategy:\n\n``` py\n@partial\ndef require_email(strategy, details, user=None, is_new=False, *args, **kwargs):\n    if user and user.email:\n        return\n    elif is_new and not details.get('email'):\n        if strategy.request_data().get('email'):\n            details['email'] = strategy.request_data().get('email')\n            return\n\n        if strategy.request.session.get('email', '') != '':\n            details['email'] = strategy.request.session['email']\n            return\n\n        fbuid = kwargs['response']['id']\n        token = kwargs['response']['access_token']\n        url = 'https://graph.facebook.com/{0}/?' \\\n              'fields=email&access_token={1}'.format(fbuid, token)\n        resp = requests.get(url)\n        if resp.json().get('email'):\n            details['email'] = resp.json().get('email')\n        else:\n            return redirect('myapp:email-required')\n\n```\n\nAnd in settings:\n\n``` py\nSOCIAL_AUTH_PIPELINE = (\n        #...\n        'social.pipeline.social_auth.social_user',\n        'myapp.pipeline.require_email'\n        #...\n)\n```\n. @harun1393 Hi Harun, could you provide the stack trace?\n. Hi!\nA work arround using `Django 1.10, Python Social Auth 0.2.21 and Requests 2.11.1` to get email of user with facebook strategy:\n\n``` py\n@partial\ndef require_email(strategy, details, user=None, is_new=False, *args, **kwargs):\n    if user and user.email:\n        return\n    elif is_new and not details.get('email'):\n        if strategy.request_data().get('email'):\n            details['email'] = strategy.request_data().get('email')\n            return\n\n        if strategy.request.session.get('email', '') != '':\n            details['email'] = strategy.request.session['email']\n            return\n\n        fbuid = kwargs['response']['id']\n        token = kwargs['response']['access_token']\n        url = 'https://graph.facebook.com/{0}/?' \\\n              'fields=email&access_token={1}'.format(fbuid, token)\n        resp = requests.get(url)\n        if resp.json().get('email'):\n            details['email'] = resp.json().get('email')\n        else:\n            return redirect('myapp:email-required')\n\n```\n\nAnd in settings:\n\n``` py\nSOCIAL_AUTH_PIPELINE = (\n        #...\n        'social.pipeline.social_auth.social_user',\n        'myapp.pipeline.require_email'\n        #...\n)\n```\n. @harun1393 Hi Harun, could you provide the stack trace?\n. ",
    "harunurkst": "It works for for facebook but not for LinkedIn. What is the solution for LinkedIn? \n. Hi, My problem solved for LinkedIn also. I have done some mistake to write settings\n. Thank you\r\n\r\n2016-12-27 3:03 GMT+06:00 Mat\u00edas Aguirre <notifications@github.com>:\r\n\r\n> Facebook API is already updated, currently version is 2.8.\r\n>\r\n> \u2014\r\n> You are receiving this because you were mentioned.\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/omab/python-social-auth/issues/675#issuecomment-269241641>,\r\n> or mute the thread\r\n> <https://github.com/notifications/unsubscribe-auth/AJGe41m-jxSSiKwgNAxRmXwYLRlgUKLAks5rMCuRgaJpZM4FWB96>\r\n> .\r\n>\r\n\r\n\r\n\r\n-- \r\n\u09b9\u09be\u09b0\u09c1\u09a8 \u0985\u09b0 \u09b0\u09b6\u09bf\u09a6\r\n\u09b8\u09cd\u09ac\u09c7\u099a\u09cd\u099b\u09be\u09b8\u09c7\u09ac\u0995, \u098f\u09ab\u0993\u098f\u09b8\u098f\u09b8 \u09ac\u09be\u0982\u09b2\u09be\u09a6\u09c7\u09b6\r\n. It works for for facebook but not for LinkedIn. What is the solution for LinkedIn? \n. Hi, My problem solved for LinkedIn also. I have done some mistake to write settings\n. Thank you\r\n\r\n2016-12-27 3:03 GMT+06:00 Mat\u00edas Aguirre <notifications@github.com>:\r\n\r\n> Facebook API is already updated, currently version is 2.8.\r\n>\r\n> \u2014\r\n> You are receiving this because you were mentioned.\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/omab/python-social-auth/issues/675#issuecomment-269241641>,\r\n> or mute the thread\r\n> <https://github.com/notifications/unsubscribe-auth/AJGe41m-jxSSiKwgNAxRmXwYLRlgUKLAks5rMCuRgaJpZM4FWB96>\r\n> .\r\n>\r\n\r\n\r\n\r\n-- \r\n\u09b9\u09be\u09b0\u09c1\u09a8 \u0985\u09b0 \u09b0\u09b6\u09bf\u09a6\r\n\u09b8\u09cd\u09ac\u09c7\u099a\u09cd\u099b\u09be\u09b8\u09c7\u09ac\u0995, \u098f\u09ab\u0993\u098f\u09b8\u098f\u09b8 \u09ac\u09be\u0982\u09b2\u09be\u09a6\u09c7\u09b6\r\n. ",
    "degustaf": "Should this be closed, since the PR has been merged?\n. Should this be closed, since the PR has been merged?\n. ",
    "bluszcz": "Yes.\n. Yes.\n. ",
    "pirax": "Migrate doesn't work either on Django 1.8. Nor makemigrations.\n. Migrate doesn't work either on Django 1.8. Nor makemigrations.\n. ",
    "laginha": "I solved the problem.\n\nWhile in django 1.6:\n1. `pip install python-social-auth`\n2. remove `\"social_auth\"` from the `INSTALLED_APPS`.\n3. add `\"social.apps.django_app.default\"` to the `INSTALLED_APPS`.\n4. add  `SOUTH_MIGRATION_MODULES = { \"default\": \"social_auth.migrations\"}` to `settings.py`.\n5. Create and empty migration to freeze the app: `python manage.py schemamigration --freeze default default freeze --empty`\n6. Create a migration to add the `Code` model: `python manage.py schemamigration default --auto`\n7. Apply both migrations: `python manage.py migrate default`\n\nWhen that is done, you have django-social-auth's and python-social-auth's migrations in sync. Thus after you upgrade to django 1.7 or higher:\n1. remove from `settings.py` the previously added `SOUTH_MIGRATION_MODULES` option.\n2. remove `\"south\"` from the `INSTALLED_APPS` (you may also need to uninstall it)\n3. apply python-social-auth migrations:\n   1. `python manage.py migrate default 0001 --fake`\n   2. `python manage.py migrate default`\n. I solved the problem.\n\nWhile in django 1.6:\n1. `pip install python-social-auth`\n2. remove `\"social_auth\"` from the `INSTALLED_APPS`.\n3. add `\"social.apps.django_app.default\"` to the `INSTALLED_APPS`.\n4. add  `SOUTH_MIGRATION_MODULES = { \"default\": \"social_auth.migrations\"}` to `settings.py`.\n5. Create and empty migration to freeze the app: `python manage.py schemamigration --freeze default default freeze --empty`\n6. Create a migration to add the `Code` model: `python manage.py schemamigration default --auto`\n7. Apply both migrations: `python manage.py migrate default`\n\nWhen that is done, you have django-social-auth's and python-social-auth's migrations in sync. Thus after you upgrade to django 1.7 or higher:\n1. remove from `settings.py` the previously added `SOUTH_MIGRATION_MODULES` option.\n2. remove `\"south\"` from the `INSTALLED_APPS` (you may also need to uninstall it)\n3. apply python-social-auth migrations:\n   1. `python manage.py migrate default 0001 --fake`\n   2. `python manage.py migrate default`\n. ",
    "dbrgn": "I had the same problem. Apparently my database was in an inconsistent state, probably due to switching to Django 1.7 and PSA at the same time.\n\nI ended up fixing it in the database directly, by using the output from `python manage.py sqlmigrate default 0001` and comparing it with the state of the live database.\n\nIn my case these changes were missing:\n\n```\nBEGIN;\nCREATE TABLE \"social_auth_code\" (\"id\" serial NOT NULL PRIMARY KEY, \"email\" varchar(75) NOT NULL, \"code\" varchar(32) NOT NULL, \"verified\" boolean NOT NULL);\nALTER TABLE \"social_auth_code\" ADD CONSTRAINT \"social_auth_code_email_75f27066d057e3b6_uniq\" UNIQUE (\"email\", \"code\");\nALTER TABLE \"social_auth_nonce\" ADD CONSTRAINT \"social_auth_nonce_server_url_36601f978463b4_uniq\" UNIQUE (\"server_url\", \"timestamp\", \"salt\");\nCREATE INDEX \"social_auth_code_c1336794\" ON \"social_auth_code\" (\"code\");\nCREATE INDEX \"social_auth_code_code_32d820bdeaa954bc_like\" ON \"social_auth_code\" (\"code\" varchar_pattern_ops);\nCREATE INDEX \"social_auth_usersocialauth_e8701ad4\" ON \"social_auth_usersocialauth\" (\"user_id\");\nCOMMIT;\n```\n\nAfter that, the migrations would apply cleanly.\n. After re-creating the database locally, everything works fine. Maybe my local dev system was broken somehow. I'll try to see if the stage system can be upgraded, until then I'll close this issue.\n. Duplicate of #682.\n. I had the same problem. Apparently my database was in an inconsistent state, probably due to switching to Django 1.7 and PSA at the same time.\n\nI ended up fixing it in the database directly, by using the output from `python manage.py sqlmigrate default 0001` and comparing it with the state of the live database.\n\nIn my case these changes were missing:\n\n```\nBEGIN;\nCREATE TABLE \"social_auth_code\" (\"id\" serial NOT NULL PRIMARY KEY, \"email\" varchar(75) NOT NULL, \"code\" varchar(32) NOT NULL, \"verified\" boolean NOT NULL);\nALTER TABLE \"social_auth_code\" ADD CONSTRAINT \"social_auth_code_email_75f27066d057e3b6_uniq\" UNIQUE (\"email\", \"code\");\nALTER TABLE \"social_auth_nonce\" ADD CONSTRAINT \"social_auth_nonce_server_url_36601f978463b4_uniq\" UNIQUE (\"server_url\", \"timestamp\", \"salt\");\nCREATE INDEX \"social_auth_code_c1336794\" ON \"social_auth_code\" (\"code\");\nCREATE INDEX \"social_auth_code_code_32d820bdeaa954bc_like\" ON \"social_auth_code\" (\"code\" varchar_pattern_ops);\nCREATE INDEX \"social_auth_usersocialauth_e8701ad4\" ON \"social_auth_usersocialauth\" (\"user_id\");\nCOMMIT;\n```\n\nAfter that, the migrations would apply cleanly.\n. After re-creating the database locally, everything works fine. Maybe my local dev system was broken somehow. I'll try to see if the stage system can be upgraded, until then I'll close this issue.\n. Duplicate of #682.\n. ",
    "jeyraof": "It's test failed on travis..\nI will be back\n. Fixed.\n. @omab but i know you are so busy now, if possible, can you check this pr please? To using this commit for product, im wating for your response. i'm sorry and many thanks! :+1:\n. It's test failed on travis..\nI will be back\n. Fixed.\n. @omab but i know you are so busy now, if possible, can you check this pr please? To using this commit for product, im wating for your response. i'm sorry and many thanks! :+1:\n. ",
    "hachiyanagi-ks": "+1\nI also was troubled by the same problems.\n. +1\nI also was troubled by the same problems.\n. ",
    "mvschaik": "Closed in favor of #747 \n. Hi @omab,\n\nWhat do you think of these PR's? Is this something you could accept? Please let me know if you have additional requirements or questions so I can address them!\n\nThanks!\n. I overhauled the caching of OIDC configuration and keys, so now it is more robust.\n. Closed in favor of #747 \n. Thanks for your suggestions, @nickcatal! I've added some fixes. I hope it gets merged in too!\n. Closed in favor of #747 \n. Hi @omab,\n\nWhat do you think of these PR's? Is this something you could accept? Please let me know if you have additional requirements or questions so I can address them!\n\nThanks!\n. I overhauled the caching of OIDC configuration and keys, so now it is more robust.\n. Closed in favor of #747 \n. Thanks for your suggestions, @nickcatal! I've added some fixes. I hope it gets merged in too!\n. ",
    "contracode": "+1 I can confirm the bug and that this fixes it.\n. Submitted Pull Request #745 to fix.\n. Is there anything I can clarify or add to get this PR merged?\n. Could you review and merge this, please, @omab? If you do not have the time to do this, please consider granting me write access to this repo. I can ensure you that I will assist you in bug triage, pull request review/merge, and the other maintenance tasks related to providing quality code to the world.\n. +1 I can confirm the bug and that this fixes it.\n. Submitted Pull Request #745 to fix.\n. Is there anything I can clarify or add to get this PR merged?\n. Could you review and merge this, please, @omab? If you do not have the time to do this, please consider granting me write access to this repo. I can ensure you that I will assist you in bug triage, pull request review/merge, and the other maintenance tasks related to providing quality code to the world.\n. ",
    "iepathos": "Requirement already satisfied is checking your Python 3.2 libs whereas it looks like you're running Django from python 2.7, you can see the difference in the paths.  Like @maxsocl said, just install requests into your python 2.7 libs or run the project from your python3.2 environment and it should work ok for you.\n. Requirement already satisfied is checking your Python 3.2 libs whereas it looks like you're running Django from python 2.7, you can see the difference in the paths.  Like @maxsocl said, just install requests into your python 2.7 libs or run the project from your python3.2 environment and it should work ok for you.\n. ",
    "SomethingWrong": "Okay, as I've understood it's known problem for Facebook. For many reasons, not everyone on Facebook have Email address registered. The simplest solution I've found is to use user's Facebook email:\nuser_name@facebook.com / user_id@facebook.com\nIf necessary, you can modify a little omab's **[require_email](https://github.com/omab/python-social-auth/blob/master/examples/django_example/example/app/pipeline.py)** function, so under the last else statement will be something like this:\n\n``` python\nemail = kwargs['response']['id']\ndetails['email'] = email + '@facebook.com'\n```\n. Okay, as I've understood it's known problem for Facebook. For many reasons, not everyone on Facebook have Email address registered. The simplest solution I've found is to use user's Facebook email:\nuser_name@facebook.com / user_id@facebook.com\nIf necessary, you can modify a little omab's **[require_email](https://github.com/omab/python-social-auth/blob/master/examples/django_example/example/app/pipeline.py)** function, so under the last else statement will be something like this:\n\n``` python\nemail = kwargs['response']['id']\ndetails['email'] = email + '@facebook.com'\n```\n. ",
    "cridenour": "Guess I'll answer it myself - the user returned by do_auth can be check by the attribute\n\n``` python\nuser.is_new\n```\n. Guess I'll answer it myself - the user returned by do_auth can be check by the attribute\n\n``` python\nuser.is_new\n```\n. ",
    "robert-osborne": "I having a similar issue with the source; using the validate email link for an email login in a new browser session causes the following error:\n\n```\nMissing needed parameter email\n```\n\nLooking at the code, this doesn't look easy to fix.\n. I having a similar issue with the source; using the validate email link for an email login in a new browser session causes the following error:\n\n```\nMissing needed parameter email\n```\n\nLooking at the code, this doesn't look easy to fix.\n. ",
    "bwarren2": "Looks like this is a dupe of #668 .\n. I was on 0.2.9.  Upgrading to 0.2.12 resolved this, though there is a different error to address in my implementation.\n. Looks like this is a dupe of #668 .\n. I was on 0.2.9.  Upgrading to 0.2.12 resolved this, though there is a different error to address in my implementation.\n. ",
    "tkajtoch": "AuthCancelled can also occur when one of pipelines raises an exception.\nPaste your full python-social-auth configuration from settings.py (without api keys of course).\n. Looks like Python cannot find `social` module. Are you using virtualenv?\nFor test you can run interpreter inside your environment and check python-social-auth version:\n\n```\nimport social\nsocial.__version__\n```\n. First, correct the mispelled openid name in PR title. `opened` -> `openid`\n. Did you migrated changes into the database after modifying UID_LENGTH?\n\nOn Thursday, 5 November 2015, Abe notifications@github.com wrote:\n\n> I set SOCIAL_AUTH_UID_LENGTH = 191 in my settings.py file for my Django\n> project, but it looks like get the following error still:\n> _mysql_exceptions.OperationalError: (1071, 'Specified key was too long; max\n> key length is 767 bytes')\n> \n> When I search for SOCIAL_AUTH_UID_LENGTH it does not look like, the code\n> is referencing this, but just wanted to double check.\n> \n> Thank you and appreciate the help!\n> \n> Here's my setup:\n> Ubuntu 14.04.3/Python 3.4.3\n> mysql 5.5.46\n> Django==1.8.6\n> mysqlclient==1.3.6\n> python-social-auth==0.2.13\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/issues/777.\n. Clean commit.\nPython 2.6 requires the `replacement_field` to be filled by the `field_name`.\n\nDocs: https://docs.python.org/2.6/library/string.html#format-string-syntax\n. @matburt I know. My comment is just some kind of note for @omab to accept this PR quickly :-)\n. Clean. Ready to merge.\n. Checks weren't passed.\n. Some critical errors occurred during the tests. This PR can't be merged.\n. This is just a django warning message. The migrations will be applied.\n. Hello, Jimmy!\n\nI've just looked in a code and done some research about your issue.\npython-social-auth uses the `requests` module to make a HTTP(S) requests. Requests module is based on `curl` and openssl to make secured connections.\n\nRun the following command on your OS and check the result:\n\n```\necho | openssl s_client -showcerts -connect api.login.yahoo.com:443 2>/dev/null | openssl x509 -inform pem -noout -text\n```\n\nLook at `Certificate -> Validity` section and compare the dates with the proper ones:\n\n```\nNot Before: Jun 17 00:00:00 2015 GMT\nNot After : Jun 16 23:59:59 2016 GMT\n```\n\nIf the dates are different or the certificate is already expired you must update the CA certificates on your system.\n\n**Updating CA certificates:**\n\n```\n# apt-get update\n# apt-get install ca-certificates\n# update-ca-certificates\n```\n. Okay. Let's start finding the problem somewhere else.\n\nRun the Python interpreter inside your environment and execute this script:\n\n```\nimport ssl\nfrom social.utils import SSLHttpAdapter\n\nsession = SSLHttpAdapter.ssl_adapter_session(ssl.PROTOCOL_TLSv1)\nresponse = session.request(\"GET\", \"https://api.login.yahoo.com/oauth/v2/request_auth\")\n\nprint(response.status_code)\n```\n\nThe code above will make a request to Yahoo API in the same way as python-social-auth does.\nCertificate verification is performed by default. Script should print `200` as response status code.\n. Hello, Jimmy\n\nYeah, I'm getting 200 OK every time I make the request. I also launched test scripts on my servers located in Poland, Germany, France and UK and 100% of the requests were passed.\n\nSome time ago I saw a post that informs the yahoo load balancer doesn't work properly and certain IPs are redirected to the yahoo development servers, not the production ones.\n\nCan you make a simple mtr to yahoo endpoint? Maybe we'll find the bug...\n. Can you compare the curl output for these requests from my server with yours?\n\n```\n# curl -vvv https://api.login.yahoo.com/oauth/v2/request_auth\n* Hostname was NOT found in DNS cache\n*   Trying 188.125.80.138...\n* Connected to api.login.yahoo.com (188.125.80.138) port 443 (#0)\n* successfully set certificate verify locations:\n*   CAfile: none\n  CApath: /etc/ssl/certs\n* SSLv3, TLS handshake, Client hello (1):\n* SSLv3, TLS handshake, Server hello (2):\n* SSLv3, TLS handshake, CERT (11):\n* SSLv3, TLS handshake, Server key exchange (12):\n* SSLv3, TLS handshake, Server finished (14):\n* SSLv3, TLS handshake, Client key exchange (16):\n* SSLv3, TLS change cipher, Client hello (1):\n* SSLv3, TLS handshake, Finished (20):\n* SSLv3, TLS change cipher, Client hello (1):\n* SSLv3, TLS handshake, Finished (20):\n* SSL connection using ECDHE-RSA-AES128-GCM-SHA256\n* Server certificate:\n[...]\n```\n. Hello, webjunkie.\n\nYou are right - python-social-auth does not store the time of `access_token` generation. The problem is you cannot check if `access_token` is still active without making a request to a provider.\n\nNote that any provider does not return the exact date of `access_token` expiration - this is because the provider's backends can invalidate, delete or simply lost valid access tokens and they will have to be regenerated for your app.\n. Hello,\n\nLook at https://github.com/django/django/blob/master/django/contrib/auth/forms.py#L235. Django in it's default password reset form filters out users who do not have set usable password. The problem is users registered via python-social-auth does not.\n\nYou can fix this by overriding `get_users` method from default form and deleting that part of code.\n. AuthCancelled can also occur when one of pipelines raises an exception.\nPaste your full python-social-auth configuration from settings.py (without api keys of course).\n. Looks like Python cannot find `social` module. Are you using virtualenv?\nFor test you can run interpreter inside your environment and check python-social-auth version:\n\n```\nimport social\nsocial.__version__\n```\n. First, correct the mispelled openid name in PR title. `opened` -> `openid`\n. Did you migrated changes into the database after modifying UID_LENGTH?\n\nOn Thursday, 5 November 2015, Abe notifications@github.com wrote:\n\n> I set SOCIAL_AUTH_UID_LENGTH = 191 in my settings.py file for my Django\n> project, but it looks like get the following error still:\n> _mysql_exceptions.OperationalError: (1071, 'Specified key was too long; max\n> key length is 767 bytes')\n> \n> When I search for SOCIAL_AUTH_UID_LENGTH it does not look like, the code\n> is referencing this, but just wanted to double check.\n> \n> Thank you and appreciate the help!\n> \n> Here's my setup:\n> Ubuntu 14.04.3/Python 3.4.3\n> mysql 5.5.46\n> Django==1.8.6\n> mysqlclient==1.3.6\n> python-social-auth==0.2.13\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/issues/777.\n. Clean commit.\nPython 2.6 requires the `replacement_field` to be filled by the `field_name`.\n\nDocs: https://docs.python.org/2.6/library/string.html#format-string-syntax\n. @matburt I know. My comment is just some kind of note for @omab to accept this PR quickly :-)\n. Clean. Ready to merge.\n. Checks weren't passed.\n. Some critical errors occurred during the tests. This PR can't be merged.\n. This is just a django warning message. The migrations will be applied.\n. Hello, Jimmy!\n\nI've just looked in a code and done some research about your issue.\npython-social-auth uses the `requests` module to make a HTTP(S) requests. Requests module is based on `curl` and openssl to make secured connections.\n\nRun the following command on your OS and check the result:\n\n```\necho | openssl s_client -showcerts -connect api.login.yahoo.com:443 2>/dev/null | openssl x509 -inform pem -noout -text\n```\n\nLook at `Certificate -> Validity` section and compare the dates with the proper ones:\n\n```\nNot Before: Jun 17 00:00:00 2015 GMT\nNot After : Jun 16 23:59:59 2016 GMT\n```\n\nIf the dates are different or the certificate is already expired you must update the CA certificates on your system.\n\n**Updating CA certificates:**\n\n```\n# apt-get update\n# apt-get install ca-certificates\n# update-ca-certificates\n```\n. Okay. Let's start finding the problem somewhere else.\n\nRun the Python interpreter inside your environment and execute this script:\n\n```\nimport ssl\nfrom social.utils import SSLHttpAdapter\n\nsession = SSLHttpAdapter.ssl_adapter_session(ssl.PROTOCOL_TLSv1)\nresponse = session.request(\"GET\", \"https://api.login.yahoo.com/oauth/v2/request_auth\")\n\nprint(response.status_code)\n```\n\nThe code above will make a request to Yahoo API in the same way as python-social-auth does.\nCertificate verification is performed by default. Script should print `200` as response status code.\n. Hello, Jimmy\n\nYeah, I'm getting 200 OK every time I make the request. I also launched test scripts on my servers located in Poland, Germany, France and UK and 100% of the requests were passed.\n\nSome time ago I saw a post that informs the yahoo load balancer doesn't work properly and certain IPs are redirected to the yahoo development servers, not the production ones.\n\nCan you make a simple mtr to yahoo endpoint? Maybe we'll find the bug...\n. Can you compare the curl output for these requests from my server with yours?\n\n```\n# curl -vvv https://api.login.yahoo.com/oauth/v2/request_auth\n* Hostname was NOT found in DNS cache\n*   Trying 188.125.80.138...\n* Connected to api.login.yahoo.com (188.125.80.138) port 443 (#0)\n* successfully set certificate verify locations:\n*   CAfile: none\n  CApath: /etc/ssl/certs\n* SSLv3, TLS handshake, Client hello (1):\n* SSLv3, TLS handshake, Server hello (2):\n* SSLv3, TLS handshake, CERT (11):\n* SSLv3, TLS handshake, Server key exchange (12):\n* SSLv3, TLS handshake, Server finished (14):\n* SSLv3, TLS handshake, Client key exchange (16):\n* SSLv3, TLS change cipher, Client hello (1):\n* SSLv3, TLS handshake, Finished (20):\n* SSLv3, TLS change cipher, Client hello (1):\n* SSLv3, TLS handshake, Finished (20):\n* SSL connection using ECDHE-RSA-AES128-GCM-SHA256\n* Server certificate:\n[...]\n```\n. Hello, webjunkie.\n\nYou are right - python-social-auth does not store the time of `access_token` generation. The problem is you cannot check if `access_token` is still active without making a request to a provider.\n\nNote that any provider does not return the exact date of `access_token` expiration - this is because the provider's backends can invalidate, delete or simply lost valid access tokens and they will have to be regenerated for your app.\n. Hello,\n\nLook at https://github.com/django/django/blob/master/django/contrib/auth/forms.py#L235. Django in it's default password reset form filters out users who do not have set usable password. The problem is users registered via python-social-auth does not.\n\nYou can fix this by overriding `get_users` method from default form and deleting that part of code.\n. ",
    "Luis-Palacios": "@rajasimon  did you solve this? i am having the same issue\n. Well. i saw [this stackoverflowquestion](http://stackoverflow.com/questions/31077965/django-python-social-auth-authentication-canceled-by-facebook-app) and it worked for me too strange i had the right ip of the server but for some reason it did not work when i leave the server ip white list empty it works great\n. @rajasimon  did you solve this? i am having the same issue\n. Well. i saw [this stackoverflowquestion](http://stackoverflow.com/questions/31077965/django-python-social-auth-authentication-canceled-by-facebook-app) and it worked for me too strange i had the right ip of the server but for some reason it did not work when i leave the server ip white list empty it works great\n. ",
    "shubh3794": "Has this issue been solved? I am having the same issue\n. Yep changing the redirect URL solved it for me too.\n. I think it would be safe to close the issue now.\n. Has this issue been solved? I am having the same issue\n. Yep changing the redirect URL solved it for me too.\n. I think it would be safe to close the issue now.\n. ",
    "johnfosborneiii": "I finally just solved this. I am not 100% sure what I did to fix but these were some of the things I did.\n1. I deleted the faebook app and created a new one.\n2. When I was putting the new SOCIAL_AUTH_FACEBOOK_SECRET in settings. I noticed the old one had a the string \"reset\" at the end of the string. This is what the old secret looked like: 'd9e316e4c67d5a45198cf58ecb0efc10Reset'\nThe new one just has the String. I am thinking that there may be an issue with the facebook website the way it was copied in the first place? I obviously never added the Reset string there.\n3. For the redirect URLs I added /complete/facebook/ since that's the URL that the framework redirects you to before the user then gets redirected to SOCIAL_AUTH_LOGIN_REDIRECT_URL\n\nI am guessing it was either 2 or 3 that fixed. Probably the 3rd one.\n. Awesome, good to get to the bottom of it. It took me about too long to figure out!\n. I finally just solved this. I am not 100% sure what I did to fix but these were some of the things I did.\n1. I deleted the faebook app and created a new one.\n2. When I was putting the new SOCIAL_AUTH_FACEBOOK_SECRET in settings. I noticed the old one had a the string \"reset\" at the end of the string. This is what the old secret looked like: 'd9e316e4c67d5a45198cf58ecb0efc10Reset'\nThe new one just has the String. I am thinking that there may be an issue with the facebook website the way it was copied in the first place? I obviously never added the Reset string there.\n3. For the redirect URLs I added /complete/facebook/ since that's the URL that the framework redirects you to before the user then gets redirected to SOCIAL_AUTH_LOGIN_REDIRECT_URL\n\nI am guessing it was either 2 or 3 that fixed. Probably the 3rd one.\n. Awesome, good to get to the bottom of it. It took me about too long to figure out!\n. ",
    "rudyryk": "I get this error in totally valid case when a user decides to cancel authentication process.\n\n``````\n/complete/vk-oauth2/?redirect_state=xxx&error=access_denied&error_reason=user_denied&error_description=User+denied+your+request&state=xxx```\n``````\n. I can see warnings with the Django 1.9.11\n. I get this error in totally valid case when a user decides to cancel authentication process.\n\n``````\n/complete/vk-oauth2/?redirect_state=xxx&error=access_denied&error_reason=user_denied&error_description=User+denied+your+request&state=xxx```\n``````\n. I can see warnings with the Django 1.9.11\n. ",
    "hlrossato": "I'm getting this error on Facebook when user cancel the authentication process:\n`/oauth/complete/facebook/?redirect_state=xxxxxx&error=access_denied&error_code=200&error_description=Permissions+error&error_reason=user_denied&state=xxxxxxx`\n. I'm getting this error on Facebook when user cancel the authentication process:\n`/oauth/complete/facebook/?redirect_state=xxxxxx&error=access_denied&error_code=200&error_description=Permissions+error&error_reason=user_denied&state=xxxxxxx`\n. ",
    "francescortiz": "The link @omab posted does not work anymore. I think this is where it should point to:\r\n\r\n[Exceptions middleware](http://python-social-auth.readthedocs.io/en/latest/configuration/django.html#exceptions-middleware). The link @omab posted does not work anymore. I think this is where it should point to:\r\n\r\n[Exceptions middleware](http://python-social-auth.readthedocs.io/en/latest/configuration/django.html#exceptions-middleware). ",
    "ddehghan": "I also get this error in production for less than 1% of users logging with Google Oauth2. Here is my stack trace\n\nError message\nsocial.exceptions:AuthMissingParameter: Missing needed parameter state\n\nStack trace\nTraceback (most recent call last):\nFile \"/app/.heroku/python/bin/gunicorn\", line 11, in <module>\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/app/wsgiapp.py\", line 74, in run\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/app/base.py\", line 189, in run\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/app/base.py\", line 72, in run\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/arbiter.py\", line 174, in run\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/arbiter.py\", line 477, in manage_workers\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/arbiter.py\", line 540, in spawn_workers\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/arbiter.py\", line 507, in spawn_worker\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/workers/base.py\", line 124, in init_process\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/workers/sync.py\", line 119, in run\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/workers/sync.py\", line 66, in run_for_one\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/workers/sync.py\", line 30, in accept\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/workers/sync.py\", line 130, in handle\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/workers/sync.py\", line 176, in handle_request\nFile \"/app/.heroku/python/lib/python2.7/site-packages/newrelic-2.54.0.41/newrelic/api/web_transaction.py\", line 711, in **iter**\nFile \"/app/.heroku/python/lib/python2.7/site-packages/newrelic-2.54.0.41/newrelic/api/web_transaction.py\", line 1087, in **call**\nFile \"/app/.heroku/python/lib/python2.7/site-packages/newrelic-2.54.0.41/newrelic/api/web_transaction.py\", line 1215, in _nr_wsgi_application_wrapper_\nFile \"/app/.heroku/python/lib/python2.7/site-packages/django/core/handlers/wsgi.py\", line 189, in **call**\nFile \"/app/.heroku/python/lib/python2.7/site-packages/django/core/handlers/base.py\", line 132, in get_response\nFile \"/app/.heroku/python/lib/python2.7/site-packages/newrelic-2.54.0.41/newrelic/hooks/framework_django.py\", line 499, in wrapper\nFile \"/app/.heroku/python/lib/python2.7/site-packages/django/views/decorators/cache.py\", line 57, in _wrapped_view_func\nFile \"/app/.heroku/python/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 51, in wrapper\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 28, in complete\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/actions.py\", line 43, in do_complete\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/base.py\", line 41, in complete\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/utils.py\", line 229, in wrapper\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 375, in auth_complete\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 86, in validate_state\n. I think the reason is that Django session is missing for that user instead of there being and expired session. \n. I really haven't tried to solve this yet. In my case I had to delete my\nsession table once about 1 year ago. Now when those old users come back\nthey cause this error. I was hoping that at some point I will migrate the\nusers to our new domain and will force the users to reauthenticate and that\nwill solve the problem.\n\nThanks\nDavid\n\nOn Tue, Oct 27, 2015 at 11:28 AM, Ashish Gupta notifications@github.com\nwrote:\n\n> Yes you are correct. I followed this blog,\n> http://artandlogic.com/2015/07/email-validation-with-django-and-python-social-auth/\n> and applied monkey-patch to fetch session data from Session Table. It works\n> fine in most cases but fails if session_key gets deleted/changed in the\n> database. Django updates session_key each time the session data changes. So\n> in case any other user logs in the same browser the session_key gets\n> changed and user can't verify with the email link. @ddehghan\n> https://github.com/ddehghan Did you fix this issue in better way than\n> what's discussed in this blog ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/issues/711#issuecomment-151601791\n> .\n. has anyone found a solid way to repro this bug. I thought that it was\ncaused by deleting sessions manually from Django session table but then I\ntried that but I couldn't get this exception to repro. I see the exception\nin my logs but I have not been able to find the source of it or see the\nuser experience. Will the user get this error and not be able to login\never? or it is a transient error?\n\nOn Sat, Nov 14, 2015 at 4:08 AM, Ahmed Saidi notifications@github.com\nwrote:\n\n> I got the same issue for Slack it didn't work at all, but after\n> commenting this lines\n> \n> file: socail/backends/oauth.py\n> \n> ```\n> def validate_state(self):\n>     \"\"\"Validate state value. Raises exception on error, returns state        value if valid.\"\"\"\n>     if not self.STATE_PARAMETER and not self.REDIRECT_STATE:\n>         return None\n>     state = self.get_session_state()\n>     request_state = self.get_request_state()\n>    # if not request_state:\n>    #     raise AuthMissingParameter(self, 'state')\n>    # elif not state:\n>    #     raise AuthStateMissing(self, 'state')\n>    # elif not request_state == state:\n>    #     raise AuthStateForbidden(self)\n>    # else:\n>     return state\n> ```\n> \n> This worked to authenticate the user for the first time, after that it\n> keep working even after uncommenting those lines. I'm not sure but maybe\n> the code should be like this:\n> \n> ```\n> def validate_state(self):\n>     \"\"\"Validate state value. Raises exception on error, returns state        value if valid.\"\"\"\n>     if not self.STATE_PARAMETER and not self.REDIRECT_STATE:\n>         return None\n>     state = self.get_session_state()\n>     request_state = self.get_request_state()\n>     if not request_state and not state:\n>         raise AuthMissingParameter(self, 'state')\n>     elif not state:\n>         raise AuthStateMissing(self, 'state')\n>     # elif not request_state == state: # Not sure what to do here\n>     #    raise AuthStateForbidden(self)\n>     else:\n>         return state\n> ```\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/issues/711#issuecomment-156690864\n> .\n. I also have the same missing session state problem but mine is with google auth. I tried to reproduce this with google oauth and it didn't. So at least with google auth it seems that you can't double click:\n\nhere is in order how values get set and poped in session for me:\n\npop partial_pipeline\nvalue: None\npop partial_pipeline\nvalue: None\nget google-oauth2_state\nvalue: None\nset google-oauth2_state\nvalue: nlAPKf8OVsZ9Uqw7ePbuwbCD45faPM\n\n127.0.0.1 - - [20/Nov/2015 13:03:59] \"GET /login/google-oauth2/? HTTP/1.1\" 302 -\nget partial_pipeline\nvalue: None\nget google-oauth2_state\nvalue: nlAPKf8OVsZ9Uqw7ePbuwbCD45faPM\npop partial_pipeline\nvalue: None\nget next\n\nset social_auth_last_login_backend\nvalue: google-oauth2\n. An update on this. I never figured out what the problem was. At some point it came up to 1% of daily auths. \n\nBut then it went down dramatically on its own. Now it happens very rarely. A few times a week. \n\nI get about 1%  Authentication process canceled  . Maybe it gets masked in those somehow. But for now it is low enough that I am no worried about it. \n. @addodelgrossi @arsavard Are you guys still having this issue? I am trying to document the PSA compatibility with different Django version. \n\nThis is probably a none issue.\n. I also get this error in production for less than 1% of users logging with Google Oauth2. Here is my stack trace\n\nError message\nsocial.exceptions:AuthMissingParameter: Missing needed parameter state\n\nStack trace\nTraceback (most recent call last):\nFile \"/app/.heroku/python/bin/gunicorn\", line 11, in <module>\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/app/wsgiapp.py\", line 74, in run\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/app/base.py\", line 189, in run\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/app/base.py\", line 72, in run\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/arbiter.py\", line 174, in run\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/arbiter.py\", line 477, in manage_workers\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/arbiter.py\", line 540, in spawn_workers\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/arbiter.py\", line 507, in spawn_worker\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/workers/base.py\", line 124, in init_process\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/workers/sync.py\", line 119, in run\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/workers/sync.py\", line 66, in run_for_one\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/workers/sync.py\", line 30, in accept\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/workers/sync.py\", line 130, in handle\nFile \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/workers/sync.py\", line 176, in handle_request\nFile \"/app/.heroku/python/lib/python2.7/site-packages/newrelic-2.54.0.41/newrelic/api/web_transaction.py\", line 711, in **iter**\nFile \"/app/.heroku/python/lib/python2.7/site-packages/newrelic-2.54.0.41/newrelic/api/web_transaction.py\", line 1087, in **call**\nFile \"/app/.heroku/python/lib/python2.7/site-packages/newrelic-2.54.0.41/newrelic/api/web_transaction.py\", line 1215, in _nr_wsgi_application_wrapper_\nFile \"/app/.heroku/python/lib/python2.7/site-packages/django/core/handlers/wsgi.py\", line 189, in **call**\nFile \"/app/.heroku/python/lib/python2.7/site-packages/django/core/handlers/base.py\", line 132, in get_response\nFile \"/app/.heroku/python/lib/python2.7/site-packages/newrelic-2.54.0.41/newrelic/hooks/framework_django.py\", line 499, in wrapper\nFile \"/app/.heroku/python/lib/python2.7/site-packages/django/views/decorators/cache.py\", line 57, in _wrapped_view_func\nFile \"/app/.heroku/python/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 51, in wrapper\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 28, in complete\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/actions.py\", line 43, in do_complete\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/base.py\", line 41, in complete\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/utils.py\", line 229, in wrapper\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 375, in auth_complete\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 86, in validate_state\n. I think the reason is that Django session is missing for that user instead of there being and expired session. \n. I really haven't tried to solve this yet. In my case I had to delete my\nsession table once about 1 year ago. Now when those old users come back\nthey cause this error. I was hoping that at some point I will migrate the\nusers to our new domain and will force the users to reauthenticate and that\nwill solve the problem.\n\nThanks\nDavid\n\nOn Tue, Oct 27, 2015 at 11:28 AM, Ashish Gupta notifications@github.com\nwrote:\n\n> Yes you are correct. I followed this blog,\n> http://artandlogic.com/2015/07/email-validation-with-django-and-python-social-auth/\n> and applied monkey-patch to fetch session data from Session Table. It works\n> fine in most cases but fails if session_key gets deleted/changed in the\n> database. Django updates session_key each time the session data changes. So\n> in case any other user logs in the same browser the session_key gets\n> changed and user can't verify with the email link. @ddehghan\n> https://github.com/ddehghan Did you fix this issue in better way than\n> what's discussed in this blog ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/issues/711#issuecomment-151601791\n> .\n. has anyone found a solid way to repro this bug. I thought that it was\ncaused by deleting sessions manually from Django session table but then I\ntried that but I couldn't get this exception to repro. I see the exception\nin my logs but I have not been able to find the source of it or see the\nuser experience. Will the user get this error and not be able to login\never? or it is a transient error?\n\nOn Sat, Nov 14, 2015 at 4:08 AM, Ahmed Saidi notifications@github.com\nwrote:\n\n> I got the same issue for Slack it didn't work at all, but after\n> commenting this lines\n> \n> file: socail/backends/oauth.py\n> \n> ```\n> def validate_state(self):\n>     \"\"\"Validate state value. Raises exception on error, returns state        value if valid.\"\"\"\n>     if not self.STATE_PARAMETER and not self.REDIRECT_STATE:\n>         return None\n>     state = self.get_session_state()\n>     request_state = self.get_request_state()\n>    # if not request_state:\n>    #     raise AuthMissingParameter(self, 'state')\n>    # elif not state:\n>    #     raise AuthStateMissing(self, 'state')\n>    # elif not request_state == state:\n>    #     raise AuthStateForbidden(self)\n>    # else:\n>     return state\n> ```\n> \n> This worked to authenticate the user for the first time, after that it\n> keep working even after uncommenting those lines. I'm not sure but maybe\n> the code should be like this:\n> \n> ```\n> def validate_state(self):\n>     \"\"\"Validate state value. Raises exception on error, returns state        value if valid.\"\"\"\n>     if not self.STATE_PARAMETER and not self.REDIRECT_STATE:\n>         return None\n>     state = self.get_session_state()\n>     request_state = self.get_request_state()\n>     if not request_state and not state:\n>         raise AuthMissingParameter(self, 'state')\n>     elif not state:\n>         raise AuthStateMissing(self, 'state')\n>     # elif not request_state == state: # Not sure what to do here\n>     #    raise AuthStateForbidden(self)\n>     else:\n>         return state\n> ```\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/issues/711#issuecomment-156690864\n> .\n. I also have the same missing session state problem but mine is with google auth. I tried to reproduce this with google oauth and it didn't. So at least with google auth it seems that you can't double click:\n\nhere is in order how values get set and poped in session for me:\n\npop partial_pipeline\nvalue: None\npop partial_pipeline\nvalue: None\nget google-oauth2_state\nvalue: None\nset google-oauth2_state\nvalue: nlAPKf8OVsZ9Uqw7ePbuwbCD45faPM\n\n127.0.0.1 - - [20/Nov/2015 13:03:59] \"GET /login/google-oauth2/? HTTP/1.1\" 302 -\nget partial_pipeline\nvalue: None\nget google-oauth2_state\nvalue: nlAPKf8OVsZ9Uqw7ePbuwbCD45faPM\npop partial_pipeline\nvalue: None\nget next\n\nset social_auth_last_login_backend\nvalue: google-oauth2\n. An update on this. I never figured out what the problem was. At some point it came up to 1% of daily auths. \n\nBut then it went down dramatically on its own. Now it happens very rarely. A few times a week. \n\nI get about 1%  Authentication process canceled  . Maybe it gets masked in those somehow. But for now it is low enough that I am no worried about it. \n. @addodelgrossi @arsavard Are you guys still having this issue? I am trying to document the PSA compatibility with different Django version. \n\nThis is probably a none issue.\n. ",
    "boussouira": "I got the same issue for `Slack` it didn't work at all, but after commenting this lines\n\nfile: `socail/backends/oauth.py`\n\n``` python\n    def validate_state(self):\n        \"\"\"Validate state value. Raises exception on error, returns state\n        value if valid.\"\"\"\n        if not self.STATE_PARAMETER and not self.REDIRECT_STATE:\n            return None\n        state = self.get_session_state()\n        request_state = self.get_request_state()\n       # if not request_state:\n       #     raise AuthMissingParameter(self, 'state')\n       # elif not state:\n       #     raise AuthStateMissing(self, 'state')\n       # elif not request_state == state:\n       #     raise AuthStateForbidden(self)\n       # else:\n        return state\n```\n\nThis worked to authenticate the user for the first time, after that it keep working even after uncommenting those lines. I'm not sure but maybe the code should be like this:\n\n``` python\n    def validate_state(self):\n        \"\"\"Validate state value. Raises exception on error, returns state\n        value if valid.\"\"\"\n        if not self.STATE_PARAMETER and not self.REDIRECT_STATE:\n            return None\n        state = self.get_session_state()\n        request_state = self.get_request_state()\n        if not request_state and not state:\n            raise AuthMissingParameter(self, 'state')\n        elif not state:\n            raise AuthStateMissing(self, 'state')\n        # elif not request_state == state: # Not sure what to do here\n        #    raise AuthStateForbidden(self)\n        else:\n            return state\n```\n. I got the same issue for `Slack` it didn't work at all, but after commenting this lines\n\nfile: `socail/backends/oauth.py`\n\n``` python\n    def validate_state(self):\n        \"\"\"Validate state value. Raises exception on error, returns state\n        value if valid.\"\"\"\n        if not self.STATE_PARAMETER and not self.REDIRECT_STATE:\n            return None\n        state = self.get_session_state()\n        request_state = self.get_request_state()\n       # if not request_state:\n       #     raise AuthMissingParameter(self, 'state')\n       # elif not state:\n       #     raise AuthStateMissing(self, 'state')\n       # elif not request_state == state:\n       #     raise AuthStateForbidden(self)\n       # else:\n        return state\n```\n\nThis worked to authenticate the user for the first time, after that it keep working even after uncommenting those lines. I'm not sure but maybe the code should be like this:\n\n``` python\n    def validate_state(self):\n        \"\"\"Validate state value. Raises exception on error, returns state\n        value if valid.\"\"\"\n        if not self.STATE_PARAMETER and not self.REDIRECT_STATE:\n            return None\n        state = self.get_session_state()\n        request_state = self.get_request_state()\n        if not request_state and not state:\n            raise AuthMissingParameter(self, 'state')\n        elif not state:\n            raise AuthStateMissing(self, 'state')\n        # elif not request_state == state: # Not sure what to do here\n        #    raise AuthStateForbidden(self)\n        else:\n            return state\n```\n. ",
    "JerzySpendel": "Ok, that will be all I think.\n. Tuples were ended with or without coma. I think all tuples should be ended with coma, or all tuples should be ended without a coma. That will be nicer\n. Ok, that will be all I think.\n. Tuples were ended with or without coma. I think all tuples should be ended with coma, or all tuples should be ended without a coma. That will be nicer\n. ",
    "jimmyislive": "If I change the code in backends/oauth.py to the one below, it works...:\n\n```\n        '''\n        response = self.request(\n            self.REQUEST_TOKEN_URL,\n            params=params,\n            auth=OAuth1(key, secret, callback_uri=self.get_redirect_uri(state),\n                        decoding=decoding),\n            method=self.REQUEST_TOKEN_METHOD\n        )\n        '''\n        #######\n        import requests\n        response = requests.post(url=self.REQUEST_TOKEN_URL, auth=OAuth1(key, secret, callback_uri=self.get_redirect_uri(state),\n                        decoding=decoding))\n        #######\n```\n. FYI, the versions I am using are:\n\ndjango = 1.8.3\nrequests = 2.7.0\nrequests_oauthlib = 0.5.0\npython_social_auth = 0.2.12\n. FYI, this has been resolved for me and is no longer an issue. Thx.\n. If someone else came across this, i got past this error by changing my url like:\n\nurl(r'^[^/]+/api/', include('api.urls')),\n. Thanks. I checked it and they all look ok:\n\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            03:d6:0a:f7:3a:3a:69:da:16:c2:7b:8c:4e:63:57:c1\n    Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C=US, O=Symantec Corporation, OU=Symantec Trust Network, CN=Symantec Class 3 Secure Server CA - G4\n        Validity\n            Not Before: Jun 17 00:00:00 2015 GMT\n            Not After : Jun 16 23:59:59 2016 GMT\n...\n...\n...\n```\n. Thanks for looking but I don't think the issue is at the source end. The issue is at the target cert. If I choose not to verify the cert i.e. verify=False, it works.\n\nI suspect something may be off at the Yahoo end i.e. their cert may have expired or something like that.\n\nFYI, even on the command line when I try I get the same exception:\n\n```\nrequests.exceptions.SSLError: [Errno 1] _ssl.c:504: error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed\n```\n\nI have tried this on three totally distinct and separate environments.\n\nI googled around and it seems folks have run into the same issue:\n\ne.g. https://developer.yahoo.com/forum/Social-Directory-API/CURL-ERROR/1231422511000-94719244-877b-310e-a995-c8a2975043d6/\n\nSeveral other forums on YDN talk of the same cert error on some endpoints....\n\nCurious....r u getting a 200 OK for the above?\n. If I change the code in backends/oauth.py to the one below, it works...:\n\n```\n        '''\n        response = self.request(\n            self.REQUEST_TOKEN_URL,\n            params=params,\n            auth=OAuth1(key, secret, callback_uri=self.get_redirect_uri(state),\n                        decoding=decoding),\n            method=self.REQUEST_TOKEN_METHOD\n        )\n        '''\n        #######\n        import requests\n        response = requests.post(url=self.REQUEST_TOKEN_URL, auth=OAuth1(key, secret, callback_uri=self.get_redirect_uri(state),\n                        decoding=decoding))\n        #######\n```\n. FYI, the versions I am using are:\n\ndjango = 1.8.3\nrequests = 2.7.0\nrequests_oauthlib = 0.5.0\npython_social_auth = 0.2.12\n. FYI, this has been resolved for me and is no longer an issue. Thx.\n. If someone else came across this, i got past this error by changing my url like:\n\nurl(r'^[^/]+/api/', include('api.urls')),\n. Thanks. I checked it and they all look ok:\n\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            03:d6:0a:f7:3a:3a:69:da:16:c2:7b:8c:4e:63:57:c1\n    Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C=US, O=Symantec Corporation, OU=Symantec Trust Network, CN=Symantec Class 3 Secure Server CA - G4\n        Validity\n            Not Before: Jun 17 00:00:00 2015 GMT\n            Not After : Jun 16 23:59:59 2016 GMT\n...\n...\n...\n```\n. Thanks for looking but I don't think the issue is at the source end. The issue is at the target cert. If I choose not to verify the cert i.e. verify=False, it works.\n\nI suspect something may be off at the Yahoo end i.e. their cert may have expired or something like that.\n\nFYI, even on the command line when I try I get the same exception:\n\n```\nrequests.exceptions.SSLError: [Errno 1] _ssl.c:504: error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed\n```\n\nI have tried this on three totally distinct and separate environments.\n\nI googled around and it seems folks have run into the same issue:\n\ne.g. https://developer.yahoo.com/forum/Social-Directory-API/CURL-ERROR/1231422511000-94719244-877b-310e-a995-c8a2975043d6/\n\nSeveral other forums on YDN talk of the same cert error on some endpoints....\n\nCurious....r u getting a 200 OK for the above?\n. ",
    "ismailsunni": "hi @jimmyislive I tried to change like your suggestion, but it still doesn't work :(\n. hi @jimmyislive I tried to change like your suggestion, but it still doesn't work :(\n. ",
    "tisdall": "I got this error when I didn't put in a \"Callback URL\" in the settings at https://apps.twitter.com .  The docs mention this but it's not obvious from the error message you get.\n. Do you have a directory or file in your own project called \"social\"?\n. I don't think you'll get much help on here as the backend does exist and you haven't given much information to go on...  You could try `python manage.py shell` and run `from social.backends.google import GoogleOAuth2` and see what it says.\n. correction...  My workaround doesn't work if there's nothing to redirect to.  It needs to be instead `{% if REDIRECT_FIELD_VALUE %}{{ REDIRECT_FIELD_NAME }}={{ REDIRECT_FIELD_VALUE|urlencode }}{% endif %}`\n. uh..  it seems you changed one instance of getting `'local_password'` from the `request` and left the rest.  The comment above that mentions `request['local_password']` and below that is `user.set_password(request['local_password'])`.. I got this error when I didn't put in a \"Callback URL\" in the settings at https://apps.twitter.com .  The docs mention this but it's not obvious from the error message you get.\n. Do you have a directory or file in your own project called \"social\"?\n. I don't think you'll get much help on here as the backend does exist and you haven't given much information to go on...  You could try `python manage.py shell` and run `from social.backends.google import GoogleOAuth2` and see what it says.\n. correction...  My workaround doesn't work if there's nothing to redirect to.  It needs to be instead `{% if REDIRECT_FIELD_VALUE %}{{ REDIRECT_FIELD_NAME }}={{ REDIRECT_FIELD_VALUE|urlencode }}{% endif %}`\n. uh..  it seems you changed one instance of getting `'local_password'` from the `request` and left the rest.  The comment above that mentions `request['local_password']` and below that is `user.set_password(request['local_password'])`.. ",
    "liminspace": "Sorry, it is my mistake. I forgot add social.apps.django_app.default to INSTALLED_APPS and run migrate :)\n. +1\n. I'm too :(\n. +1\n. +1\n. @creimers No, I haven't solved this issue yet.\n. Sorry, it is my mistake. I forgot add social.apps.django_app.default to INSTALLED_APPS and run migrate :)\n. +1\n. I'm too :(\n. +1\n. +1\n. @creimers No, I haven't solved this issue yet.\n. ",
    "bgarcial": "I have yesterday recently this same error in my t2-micro ec2 instance free in amazon web services. I've fixed of this way .. http://stackoverflow.com/questions/34643170/amazon-django-each-12-hours-appears-that-errno-5-input-output-error \n\nAlthough my situation was for my code. I share the question and answer just in case.\n. I have yesterday recently this same error in my t2-micro ec2 instance free in amazon web services. I've fixed of this way .. http://stackoverflow.com/questions/34643170/amazon-django-each-12-hours-appears-that-errno-5-input-output-error \n\nAlthough my situation was for my code. I share the question and answer just in case.\n. ",
    "trevoriancox": "Resolved by using any version of requests other than 2.6.1. Perhaps Google just started gzipping responses. Python requests 2.6.1 does not work with gzip encoding (2.6.0 and 2.6.2 do).  https://github.com/kennethreitz/requests/issues/2561\n. Resolved by using any version of requests other than 2.6.1. Perhaps Google just started gzipping responses. Python requests 2.6.1 does not work with gzip encoding (2.6.0 and 2.6.2 do).  https://github.com/kennethreitz/requests/issues/2561\n. ",
    "martey": "I didn't submit a pull request because I was hoping for clarification from @omab whether removing the button was okay, or whether he would prefer to have the README's language updated.\n. I didn't submit a pull request because I was hoping for clarification from @omab whether removing the button was okay, or whether he would prefer to have the README's language updated.\n. ",
    "dmitry-saritasa": "```\nTraceback (most recent call last):\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/backends/utils.py\", line 64, in execute\n    return self.cursor.execute(sql, params)\npsycopg2.DataError: value too long for type character varying(30)\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/core/handlers/base.py\", line 132, in get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/views/generic/base.py\", line 71, in view\n    return self.dispatch(request, *args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/utils/decorators.py\", line 34, in _wrapper\n    return bound_func(*args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/utils/decorators.py\", line 30, in bound_func\n    return func.__get__(self, type(self))(*args2, **kwargs2)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/braces/views/_forms.py\", line 22, in dispatch\n    return super(CsrfExemptMixin, self).dispatch(*args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/views/generic/base.py\", line 89, in dispatch\n    return handler(request, *args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/rest_framework_social_oauth2/views.py\", line 34, in post\n    url, headers, body, status = self.create_token_response(request)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/oauth2_provider/views/mixins.py\", line 124, in create_token_response\n    return core.create_token_response(request)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/oauth2_provider/oauth2_backends.py\", line 126, in create_token_response\n    headers)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/oauthlib/oauth2/rfc6749/endpoints/base.py\", line 64, in wrapper\n    return f(endpoint, uri, *args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/rest_framework_social_oauth2/oauth2_endpoints.py\", line 60, in create_token_response\n    request, self.default_token_type)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/oauthlib/oauth2/rfc6749/grant_types/refresh_token.py\", line 58, in create_token_response\n    self.validate_token_request(request)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/rest_framework_social_oauth2/oauth2_grants.py\", line 91, in validate_token_request\n    user = backend.do_auth(access_token=request.token)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/social/backends/facebook.py\", line 119, in do_auth\n    return self.strategy.authenticate(*args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/social/strategies/django_strategy.py\", line 96, in authenticate\n    return authenticate(*args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/contrib/auth/__init__.py\", line 74, in authenticate\n    user = backend.authenticate(**credentials)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/social/backends/base.py\", line 82, in authenticate\n    return self.pipeline(pipeline, *args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/social/backends/base.py\", line 85, in pipeline\n    out = self.run_pipeline(pipeline, pipeline_index, *args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/social/backends/base.py\", line 112, in run_pipeline\n    result = func(*args, **out) or {}\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/social/pipeline/user.py\", line 70, in create_user\n    'user': strategy.create_user(**fields)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/social/strategies/base.py\", line 53, in create_user\n    return self.storage.user.create_user(*args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/social/storage/django_orm.py\", line 60, in create_user\n    return cls.user_model().objects.create_user(*args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/contrib/auth/models.py\", line 187, in create_user\n    **extra_fields)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/contrib/auth/models.py\", line 182, in _create_user\n    user.save(using=self._db)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/models/base.py\", line 734, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/models/base.py\", line 762, in save_base\n    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/models/base.py\", line 846, in _save_table\n    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/models/base.py\", line 885, in _do_insert\n    using=using, raw=raw)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/models/manager.py\", line 127, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/models/query.py\", line 920, in _insert\n    return query.get_compiler(using=using).execute_sql(return_id)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/models/sql/compiler.py\", line 974, in execute_sql\n    cursor.execute(sql, params)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return super(CursorDebugWrapper, self).execute(sql, params)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/backends/utils.py\", line 64, in execute\n    return self.cursor.execute(sql, params)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/utils.py\", line 97, in __exit__\n    six.reraise(dj_exc_type, dj_exc_value, traceback)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/utils/six.py\", line 658, in reraise\n    raise value.with_traceback(tb)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/backends/utils.py\", line 64, in execute\n    return self.cursor.execute(sql, params)\ndjango.db.utils.DataError: value too long for type character varying(30)\n\n[07/Oct/2015 23:38:35] \"POST /api/v1/oauth/convert-token HTTP/1.1\" 500 330455\n```\n. ```\nTraceback (most recent call last):\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/backends/utils.py\", line 64, in execute\n    return self.cursor.execute(sql, params)\npsycopg2.DataError: value too long for type character varying(30)\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/core/handlers/base.py\", line 132, in get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/views/generic/base.py\", line 71, in view\n    return self.dispatch(request, *args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/utils/decorators.py\", line 34, in _wrapper\n    return bound_func(*args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/utils/decorators.py\", line 30, in bound_func\n    return func.__get__(self, type(self))(*args2, **kwargs2)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/braces/views/_forms.py\", line 22, in dispatch\n    return super(CsrfExemptMixin, self).dispatch(*args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/views/generic/base.py\", line 89, in dispatch\n    return handler(request, *args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/rest_framework_social_oauth2/views.py\", line 34, in post\n    url, headers, body, status = self.create_token_response(request)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/oauth2_provider/views/mixins.py\", line 124, in create_token_response\n    return core.create_token_response(request)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/oauth2_provider/oauth2_backends.py\", line 126, in create_token_response\n    headers)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/oauthlib/oauth2/rfc6749/endpoints/base.py\", line 64, in wrapper\n    return f(endpoint, uri, *args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/rest_framework_social_oauth2/oauth2_endpoints.py\", line 60, in create_token_response\n    request, self.default_token_type)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/oauthlib/oauth2/rfc6749/grant_types/refresh_token.py\", line 58, in create_token_response\n    self.validate_token_request(request)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/rest_framework_social_oauth2/oauth2_grants.py\", line 91, in validate_token_request\n    user = backend.do_auth(access_token=request.token)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/social/backends/facebook.py\", line 119, in do_auth\n    return self.strategy.authenticate(*args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/social/strategies/django_strategy.py\", line 96, in authenticate\n    return authenticate(*args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/contrib/auth/__init__.py\", line 74, in authenticate\n    user = backend.authenticate(**credentials)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/social/backends/base.py\", line 82, in authenticate\n    return self.pipeline(pipeline, *args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/social/backends/base.py\", line 85, in pipeline\n    out = self.run_pipeline(pipeline, pipeline_index, *args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/social/backends/base.py\", line 112, in run_pipeline\n    result = func(*args, **out) or {}\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/social/pipeline/user.py\", line 70, in create_user\n    'user': strategy.create_user(**fields)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/social/strategies/base.py\", line 53, in create_user\n    return self.storage.user.create_user(*args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/social/storage/django_orm.py\", line 60, in create_user\n    return cls.user_model().objects.create_user(*args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/contrib/auth/models.py\", line 187, in create_user\n    **extra_fields)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/contrib/auth/models.py\", line 182, in _create_user\n    user.save(using=self._db)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/models/base.py\", line 734, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/models/base.py\", line 762, in save_base\n    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/models/base.py\", line 846, in _save_table\n    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/models/base.py\", line 885, in _do_insert\n    using=using, raw=raw)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/models/manager.py\", line 127, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/models/query.py\", line 920, in _insert\n    return query.get_compiler(using=using).execute_sql(return_id)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/models/sql/compiler.py\", line 974, in execute_sql\n    cursor.execute(sql, params)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return super(CursorDebugWrapper, self).execute(sql, params)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/backends/utils.py\", line 64, in execute\n    return self.cursor.execute(sql, params)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/utils.py\", line 97, in __exit__\n    six.reraise(dj_exc_type, dj_exc_value, traceback)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/utils/six.py\", line 658, in reraise\n    raise value.with_traceback(tb)\n  File \"/home/dmitry/Projects/bme/containers/backend/.venv/bme/lib/python3.4/site-packages/django/db/backends/utils.py\", line 64, in execute\n    return self.cursor.execute(sql, params)\ndjango.db.utils.DataError: value too long for type character varying(30)\n\n[07/Oct/2015 23:38:35] \"POST /api/v1/oauth/convert-token HTTP/1.1\" 500 330455\n```\n. ",
    "aethemba": "+1 Im running into a similar issue. Apps that have an API version prior to 2.4 are working correctly but new apps break. The call to backend.do_auth(access_token) does not return me a User but None. \n. Please ignore my previous message. The FB API changes caused my own code to break, not python-social-auth.\n. +1 Im running into a similar issue. Apps that have an API version prior to 2.4 are working correctly but new apps break. The call to backend.do_auth(access_token) does not return me a User but None. \n. Please ignore my previous message. The FB API changes caused my own code to break, not python-social-auth.\n. ",
    "dotpot": "same thing here! getting exactly the same error.\n. same thing here! getting exactly the same error.\n. ",
    "robbiet480": "Fitbit will be retiring OAuth1.0a soon (as yet undefined date though) and OAuth2 is required for heartrate & location access.\n. @omab Sorry to bug but any update on this? It looks like the tests failed due to a dependency installation so I don't think that I caused it.\n. Fitbit will be retiring OAuth1.0a soon (as yet undefined date though) and OAuth2 is required for heartrate & location access.\n. @omab Sorry to bug but any update on this? It looks like the tests failed due to a dependency installation so I don't think that I caused it.\n. ",
    "awidgery": "Fitbit OAuth 1 retirement is now set for Mar/Apr 2016:\n\nhttps://dev.fitbit.com/docs/oauth2/\n\nIs there any plan to support oauth2?\n. Fitbit OAuth 1 retirement is now set for Mar/Apr 2016:\n\nhttps://dev.fitbit.com/docs/oauth2/\n\nIs there any plan to support oauth2?\n. ",
    "ChateauXiao": "well.  \nmaking psa support wechat is also my target.. \nif i can do something for it, then i'm in.\n. we already use peewee, why do we have to install sqlalchemy also?\n. well.  \nmaking psa support wechat is also my target.. \nif i can do something for it, then i'm in.\n. we already use peewee, why do we have to install sqlalchemy also?\n. ",
    "vfr292": "So, my problem was that my test account had not confirmed the email, and so the the email was not being returned.\n\nWhen I added the email to my test account, PSA started working normally. \n. So, my problem was that my test account had not confirmed the email, and so the the email was not being returned.\n\nWhen I added the email to my test account, PSA started working normally. \n. ",
    "PaulGregor": "Hi there! I faced the same problem. \nDjango: 1.8.5\nPSA: 0.2.13\n. Hi there! I faced the same problem. \nDjango: 1.8.5\nPSA: 0.2.13\n. ",
    "e-kolpakov": "@omab I'm not sure who should I talk to to get this merged, so starting with you. The test failure is something that happened with all the other PRs opened at that time, plus it only happens to `pypy` version of it (is there a problem with test infrastructure). So, what would be the next steps to get this merged (or at least discussed)?\n. Closing in favor of #841 \n. @omab I'm not sure who should I talk to to get this merged, so starting with you. The test failure is something that happened with all the other PRs opened at that time, plus it only happens to `pypy` version of it (is there a problem with test infrastructure). So, what would be the next steps to get this merged (or at least discussed)?\n. Closing in favor of #841 \n. ",
    "jcda": "thanks, that was exactly it\n. thanks, that was exactly it\n. ",
    "beaugunderson": ":+1:, need this going forward\n. Noting that fixtures with `\"default.usersocialauth\"` need to be manually updated to `\"social_auth.usersocialauth\"` as well.\n. :+1:, need this going forward\n. Noting that fixtures with `\"default.usersocialauth\"` need to be manually updated to `\"social_auth.usersocialauth\"` as well.\n. ",
    "neographikal": "With the Django 1.10 dev this gives a error indeed, when you try to create the migrations.\n. With the Django 1.10 dev this gives a error indeed, when you try to create the migrations.\n. ",
    "genxstylez": "when is this releasing?\n. when is this releasing?\n. ",
    "matheusjardimb": "Seems fixed on 0.2.18 :+1: \n. Seems fixed on 0.2.18 :+1: \n. ",
    "rokcarl": "I get this warning on latest 0.2.21 version, so not yet fixed.\n. I get this warning on latest 0.2.21 version, so not yet fixed.\n. ",
    "pzrq": "Somehow missed that `backend.user_data` is used here:\nhttps://github.com/omab/python-social-auth/blob/v0.2.13/social/backends/oauth.py#L392\n. I suppose it would be clearer if the [social/backends](https://github.com/omab/python-social-auth/tree/v0.2.13/social/backends) base.py, oauth.py, open_id.py, saml.py, etc were in a `base` directory similar to how [Django handles database backends](https://github.com/django/django/tree/master/django/db/backends) but otherwise can't see anything I could have done better at this time. \n\nClosing this as invalid.\n. Somehow missed that `backend.user_data` is used here:\nhttps://github.com/omab/python-social-auth/blob/v0.2.13/social/backends/oauth.py#L392\n. I suppose it would be clearer if the [social/backends](https://github.com/omab/python-social-auth/tree/v0.2.13/social/backends) base.py, oauth.py, open_id.py, saml.py, etc were in a `base` directory similar to how [Django handles database backends](https://github.com/django/django/tree/master/django/db/backends) but otherwise can't see anything I could have done better at this time. \n\nClosing this as invalid.\n. ",
    "lneoe": "My mistake, it has been modified\n. My mistake, it has been modified\n. ",
    "cage1016": "Here is my solution to solve this problem\n\n> django + python-social-auth\n1.  modify `MIDDLEWARE_CLASSES`\n   MIDDLEWARE_CLASSES = (\n   ...\n   'social.apps.django_app.middleware.SocialAuthExceptionMiddleware',\n   )\n2. setup login error url\n   ex: SOCIAL_AUTH_LOGIN_ERROR_URL = '/accounts/login-error/'\n3. setup login error view what you want\n4. as [Exceptions Middleware](https://goo.gl/cgBvqk) mention. Exception processing is disabled if any of this settings is defined with a True value:\n\n```\n<backend name>_SOCIAL_AUTH_RAISE_EXCEPTIONS = True\nSOCIAL_AUTH_RAISE_EXCEPTIONS = True\nRAISE_EXCEPTIONS = True\nDEBUG = True\n```\n. Here is my solution to solve this problem\n\n> django + python-social-auth\n1.  modify `MIDDLEWARE_CLASSES`\n   MIDDLEWARE_CLASSES = (\n   ...\n   'social.apps.django_app.middleware.SocialAuthExceptionMiddleware',\n   )\n2. setup login error url\n   ex: SOCIAL_AUTH_LOGIN_ERROR_URL = '/accounts/login-error/'\n3. setup login error view what you want\n4. as [Exceptions Middleware](https://goo.gl/cgBvqk) mention. Exception processing is disabled if any of this settings is defined with a True value:\n\n```\n<backend name>_SOCIAL_AUTH_RAISE_EXCEPTIONS = True\nSOCIAL_AUTH_RAISE_EXCEPTIONS = True\nRAISE_EXCEPTIONS = True\nDEBUG = True\n```\n. ",
    "doctoryes": "@omab FYI - for your review - thanks.\n. @carsongee Pleased that it helped you!\n. @omab FYI - for your review - thanks.\n. @carsongee Pleased that it helped you!\n. ",
    "carsongee": "This is just what I needed, thanks @doctoryes \n. This is just what I needed, thanks @doctoryes \n. ",
    "dragomireckijj": "Here is what was happened:\n1. db engine is PostgreSQL in my project\n2. migration for JSONField `extra_data` sets `{}` as default value for new rows\n3. `social.pipeline.social_auth.load_extra_data` calls `set_extra_data` method of `UserMixin`\n4. `set_extra_data` reads `extra_data` attribute of newly created model (which contains `{}` string at this time) and tries to use `dict.update` method on it.\n\nAfter appending `and not isinstance(self.extra_data, str)` to condition on line 84 of [social/storage/base.py](https://github.com/omab/python-social-auth/blob/master/social/storage/base.py#L84) I was able to fix this issue.\n. Here is what was happened:\n1. db engine is PostgreSQL in my project\n2. migration for JSONField `extra_data` sets `{}` as default value for new rows\n3. `social.pipeline.social_auth.load_extra_data` calls `set_extra_data` method of `UserMixin`\n4. `set_extra_data` reads `extra_data` attribute of newly created model (which contains `{}` string at this time) and tries to use `dict.update` method on it.\n\nAfter appending `and not isinstance(self.extra_data, str)` to condition on line 84 of [social/storage/base.py](https://github.com/omab/python-social-auth/blob/master/social/storage/base.py#L84) I was able to fix this issue.\n. ",
    "aniav": "This has been here for quite a long time now and there is a lot of other PR waiting. I am getting tons of warnings with the python-social-auth module on Django 1.9 project. Do you need maintainers for this project @omab maybe?\n. This has been here for quite a long time now and there is a lot of other PR waiting. I am getting tons of warnings with the python-social-auth module on Django 1.9 project. Do you need maintainers for this project @omab maybe?\n. ",
    "muhammad-ammar": "@omab Please review the changes. Thanks\n. @omab Please review the changes. Thanks\n. ",
    "abepark01": "Yes, I made the changes in the settings.py of my Django project and then ran\n\n```\npython manage.py migrate\n```\n\nBefore that I created an empty mysql database.\n. Perhaps it wasn't ported over from the [django-social-auth](https://github.com/omab/django-social-auth) project?\nI did notice the following references in the codebase:\n\nhttps://github.com/omab/django-social-auth/blob/699571a3b6d84aa2c25ffce59daa4c7f3559a0e4/social_auth/migrations/0001_initial.py#L13\n\nhttps://github.com/omab/django-social-auth/blob/699571a3b6d84aa2c25ffce59daa4c7f3559a0e4/social_auth/migrations/0002_auto__add_unique_nonce_timestamp_salt_server_url__add_unique_associati.py#L13\n. I did notice that the uid is set to 255 [here](https://github.com/omab/python-social-auth/blob/aa66b83d4848c09defa57384529eca83597a3692/social/apps/django_app/default/migrations/0001_initial.py#L79)\nSo, it doesn't look like UID_LENGTH is being applied?\n\nDo we just need to read the setting variable SOCIAL_AUTH_UID_LENGTH in [0001_initial.py](https://github.com/omab/python-social-auth/blob/aa66b83d4848c09defa57384529eca83597a3692/social/apps/django_app/default/migrations/0001_initial.py#L79)\n\nI also saw [models.py](https://github.com/omab/python-social-auth/blob/aa66b83d4848c09defa57384529eca83597a3692/social/apps/django_app/default/models.py#L34), but this class does read UID_LENGTH.\n. Here is a more detailed error message, which seems to indicate the first migration fails because it uses 255 as the max length for the uid field:\n\n```\nApplying default.0001_initial...Traceback (most recent call last):\n  File \"/Users/abe.park/.virtualenvs/p3/lib/python3.5/site-packages/django/db/backends/utils.py\", line 64, in execute\n    return self.cursor.execute(sql, params)\n  File \"/Users/abe.park/.virtualenvs/p3/lib/python3.5/site-packages/django/db/backends/mysql/base.py\", line 124, in execute\n    return self.cursor.execute(query, args)\n  File \"/Users/abe.park/.virtualenvs/p3/lib/python3.5/site-packages/MySQLdb/cursors.py\", line 226, in execute\n    self.errorhandler(self, exc, value)\n  File \"/Users/abe.park/.virtualenvs/p3/lib/python3.5/site-packages/MySQLdb/connections.py\", line 36, in defaulterrorhandler\n    raise errorvalue\n  File \"/Users/abe.park/.virtualenvs/p3/lib/python3.5/site-packages/MySQLdb/cursors.py\", line 217, in execute\n    res = self._query(query)\n  File \"/Users/abe.park/.virtualenvs/p3/lib/python3.5/site-packages/MySQLdb/cursors.py\", line 378, in _query\n    rowcount = self._do_query(q)\n  File \"/Users/abe.park/.virtualenvs/p3/lib/python3.5/site-packages/MySQLdb/cursors.py\", line 341, in _do_query\n    db.query(q)\n  File \"/Users/abe.park/.virtualenvs/p3/lib/python3.5/site-packages/MySQLdb/connections.py\", line 280, in query\n    _mysql.connection.query(self, query)\n_mysql_exceptions.OperationalError: (1071, 'Specified key was too long; max key length is 767 bytes')\n```\n. Yes, I made the changes in the settings.py of my Django project and then ran\n\n```\npython manage.py migrate\n```\n\nBefore that I created an empty mysql database.\n. Perhaps it wasn't ported over from the [django-social-auth](https://github.com/omab/django-social-auth) project?\nI did notice the following references in the codebase:\n\nhttps://github.com/omab/django-social-auth/blob/699571a3b6d84aa2c25ffce59daa4c7f3559a0e4/social_auth/migrations/0001_initial.py#L13\n\nhttps://github.com/omab/django-social-auth/blob/699571a3b6d84aa2c25ffce59daa4c7f3559a0e4/social_auth/migrations/0002_auto__add_unique_nonce_timestamp_salt_server_url__add_unique_associati.py#L13\n. I did notice that the uid is set to 255 [here](https://github.com/omab/python-social-auth/blob/aa66b83d4848c09defa57384529eca83597a3692/social/apps/django_app/default/migrations/0001_initial.py#L79)\nSo, it doesn't look like UID_LENGTH is being applied?\n\nDo we just need to read the setting variable SOCIAL_AUTH_UID_LENGTH in [0001_initial.py](https://github.com/omab/python-social-auth/blob/aa66b83d4848c09defa57384529eca83597a3692/social/apps/django_app/default/migrations/0001_initial.py#L79)\n\nI also saw [models.py](https://github.com/omab/python-social-auth/blob/aa66b83d4848c09defa57384529eca83597a3692/social/apps/django_app/default/models.py#L34), but this class does read UID_LENGTH.\n. Here is a more detailed error message, which seems to indicate the first migration fails because it uses 255 as the max length for the uid field:\n\n```\nApplying default.0001_initial...Traceback (most recent call last):\n  File \"/Users/abe.park/.virtualenvs/p3/lib/python3.5/site-packages/django/db/backends/utils.py\", line 64, in execute\n    return self.cursor.execute(sql, params)\n  File \"/Users/abe.park/.virtualenvs/p3/lib/python3.5/site-packages/django/db/backends/mysql/base.py\", line 124, in execute\n    return self.cursor.execute(query, args)\n  File \"/Users/abe.park/.virtualenvs/p3/lib/python3.5/site-packages/MySQLdb/cursors.py\", line 226, in execute\n    self.errorhandler(self, exc, value)\n  File \"/Users/abe.park/.virtualenvs/p3/lib/python3.5/site-packages/MySQLdb/connections.py\", line 36, in defaulterrorhandler\n    raise errorvalue\n  File \"/Users/abe.park/.virtualenvs/p3/lib/python3.5/site-packages/MySQLdb/cursors.py\", line 217, in execute\n    res = self._query(query)\n  File \"/Users/abe.park/.virtualenvs/p3/lib/python3.5/site-packages/MySQLdb/cursors.py\", line 378, in _query\n    rowcount = self._do_query(q)\n  File \"/Users/abe.park/.virtualenvs/p3/lib/python3.5/site-packages/MySQLdb/cursors.py\", line 341, in _do_query\n    db.query(q)\n  File \"/Users/abe.park/.virtualenvs/p3/lib/python3.5/site-packages/MySQLdb/connections.py\", line 280, in query\n    _mysql.connection.query(self, query)\n_mysql_exceptions.OperationalError: (1071, 'Specified key was too long; max key length is 767 bytes')\n```\n. ",
    "chrismeyersfsu": ":+1: works with py2.6 for me.\n. :+1: works with py2.6 for me.\n. ",
    "matburt": "You can use `{0}` for positional arguments though (which is what is used here)... you just can't use the empty variant `{}`\n. ah, gotcha!\n\nOn Thu, Dec 17, 2015 at 5:01 AM, Tomasz Kajtoch notifications@github.com\nwrote:\n\n> @matburt https://github.com/matburt I know. My comment is just some\n> kind of note for @omab https://github.com/omab to accept this PR\n> quickly :-)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/pull/783#issuecomment-165405115\n> .\n. You can use `{0}` for positional arguments though (which is what is used here)... you just can't use the empty variant `{}`\n. ah, gotcha!\n\nOn Thu, Dec 17, 2015 at 5:01 AM, Tomasz Kajtoch notifications@github.com\nwrote:\n\n> @matburt https://github.com/matburt I know. My comment is just some\n> kind of note for @omab https://github.com/omab to accept this PR\n> quickly :-)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/pull/783#issuecomment-165405115\n> .\n. ",
    "PiraHzq": "It's my fault\uff0c we can set the scope in setting.py file\uff0cjust like bellow...\nSOCIAL_AUTH_WEIXIN_SCOPE = ['snsapi_login',]\n. It's my fault\uff0c we can set the scope in setting.py file\uff0cjust like bellow...\nSOCIAL_AUTH_WEIXIN_SCOPE = ['snsapi_login',]\n. ",
    "se0kjun": "@omab \nplease to check and accept this PR quickly :-)\n. I think you cannot access friend's email address. \n\nBut, if possible, only access a friends installed your apps. You can get friend's name and id using [graph API](https://developers.facebook.com/docs/graph-api/reference/v2.5/user/friends). And then you can get email address using friend's id.\n\nGood luck!\n. @omab \nplease to check and accept this PR quickly :-)\n. I think you cannot access friend's email address. \n\nBut, if possible, only access a friends installed your apps. You can get friend's name and id using [graph API](https://developers.facebook.com/docs/graph-api/reference/v2.5/user/friends). And then you can get email address using friend's id.\n\nGood luck!\n. ",
    "rajanshah": "Thanks for the reply as I am searching for correct answer since last several days.\n\nSo, suppose at least couple friends have installed app and if I can get their id, name via user_friends scope. How can I use friend's id to access their email address using Graph API? \n. Thanks for the reply as I am searching for correct answer since last several days.\n\nSo, suppose at least couple friends have installed app and if I can get their id, name via user_friends scope. How can I use friend's id to access their email address using Graph API? \n. ",
    "bmurithi": "Encountered the same issue - This is a workaround. \n\nHad to take an extra measure to convert the **serverAuthCode** (from android application) to an access token which can then be used to get the user profile or access other APIs.\n\nSee: https://developers.google.com/identity/protocols/OAuth2InstalledApp\nUsing: https://github.com/PhilipGarnero/django-rest-framework-social-oauth2\n\nI would imagine a similar approach for PSA (convert auth code to access token).\n\n``` python\nclass ConvertTokenViewCustom(ConvertTokenView):\n    \"\"\"\n     Transform Google Token request to access token.\n    \"\"\"\n\n    GOOGLE_BACKEND_KEY = \"google-oauth2\"\n    GOOGLE_TOKEN_URL = \"https://www.googleapis.com/oauth2/v3/token\"\n    # should match configured redirect URL on Google Developer console\n    GOOGLE_REDIRECT_URL = \"<REDIRECT-URL>\"\n\n    def get_google_token(self, server_token):\n        params = dict(code=server_token,\n                      client_id=settings.SOCIAL_AUTH_GOOGLE_OAUTH2_KEY,\n                      client_secret=settings.SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET,\n                      redirect_uri=self.GOOGLE_REDIRECT_URL,\n                      grant_type=\"authorization_code\")\n        response = requests.post(self.GOOGLE_TOKEN_URL, data=params)\n        response_json = response.json()\n        return response_json.get(\"access_token\", server_token)\n\n    def post(self, request, *args, **kwargs):\n        request.POST = request.POST.copy()\n        backend = request.POST.get(\"backend\")\n        if backend == self.GOOGLE_BACKEND_KEY:\n            request.POST[\"token\"] = self.get_google_token(request.POST.get(\"token\"))\n        return super(ConvertTokenViewCustom, self).post(request, *args, **kwargs)\n\n```\n. Encountered the same issue - This is a workaround. \n\nHad to take an extra measure to convert the **serverAuthCode** (from android application) to an access token which can then be used to get the user profile or access other APIs.\n\nSee: https://developers.google.com/identity/protocols/OAuth2InstalledApp\nUsing: https://github.com/PhilipGarnero/django-rest-framework-social-oauth2\n\nI would imagine a similar approach for PSA (convert auth code to access token).\n\n``` python\nclass ConvertTokenViewCustom(ConvertTokenView):\n    \"\"\"\n     Transform Google Token request to access token.\n    \"\"\"\n\n    GOOGLE_BACKEND_KEY = \"google-oauth2\"\n    GOOGLE_TOKEN_URL = \"https://www.googleapis.com/oauth2/v3/token\"\n    # should match configured redirect URL on Google Developer console\n    GOOGLE_REDIRECT_URL = \"<REDIRECT-URL>\"\n\n    def get_google_token(self, server_token):\n        params = dict(code=server_token,\n                      client_id=settings.SOCIAL_AUTH_GOOGLE_OAUTH2_KEY,\n                      client_secret=settings.SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET,\n                      redirect_uri=self.GOOGLE_REDIRECT_URL,\n                      grant_type=\"authorization_code\")\n        response = requests.post(self.GOOGLE_TOKEN_URL, data=params)\n        response_json = response.json()\n        return response_json.get(\"access_token\", server_token)\n\n    def post(self, request, *args, **kwargs):\n        request.POST = request.POST.copy()\n        backend = request.POST.get(\"backend\")\n        if backend == self.GOOGLE_BACKEND_KEY:\n            request.POST[\"token\"] = self.get_google_token(request.POST.get(\"token\"))\n        return super(ConvertTokenViewCustom, self).post(request, *args, **kwargs)\n\n```\n. ",
    "pnagle": "Is google-auth v4 supporting now ? \n. Is google-auth v4 supporting now ? \n. ",
    "alexandcote": "@omab Same question here ? Can I help you with that ? \n. @omab Can I help you with something ? It's a huge job alone ! \ud83d\udc80 \n. @omab Same question here ? Can I help you with that ? \n. @omab Can I help you with something ? It's a huge job alone ! \ud83d\udc80 \n. ",
    "yuri1992": "Same problem here\n. Same problem here\n. ",
    "riklaunim": "Both url changed and it works.\n. Both url changed and it works.\n. ",
    "jgoclawski": "It affects us too, Instagram authentication has been broken for the past 4 days until we found this pull request. It works and fixes the problem.\n\nBTW: we've changed both urls (AUTHORIZATION_URL, ACCESS_TOKEN_URL)\n. There seems to be a duplicate of this PR, but with both URLs changed: https://github.com/omab/python-social-auth/pull/797.\n. It affects us too, Instagram authentication has been broken for the past 4 days until we found this pull request. It works and fixes the problem.\n\nBTW: we've changed both urls (AUTHORIZATION_URL, ACCESS_TOKEN_URL)\n. There seems to be a duplicate of this PR, but with both URLs changed: https://github.com/omab/python-social-auth/pull/797.\n. ",
    "c-bata": "+1\n\nCurrently, the latest facebook api version is v2.7.\n. fixed by #973 \n. +1\n. +1\n. It is already sent PR (refs #968).\n. +1\n\nCurrently, the latest facebook api version is v2.7.\n. fixed by #973 \n. +1\n. +1\n. It is already sent PR (refs #968).\n. ",
    "sa-tony": "Yea.... Sorry for my wrong information, but please fix these warnings\n\nOn Thu, Dec 17, 2015, 5:02 AM Tomasz Kajtoch notifications@github.com\nwrote:\n\n> This is just a django warning message. The migrations will be applied.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/issues/801#issuecomment-165405435\n> .\n. Yea.... Sorry for my wrong information, but please fix these warnings\n\nOn Thu, Dec 17, 2015, 5:02 AM Tomasz Kajtoch notifications@github.com\nwrote:\n\n> This is just a django warning message. The migrations will be applied.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/issues/801#issuecomment-165405435\n> .\n. ",
    "blueyed": "Dupe of / fixed by #813.\n. Dupe of / fixed by #813.\n. Duplicate of / fixed by #813.\n. Please stop +1'ing without providing some input/findings/patch.\n\nFWIW, you can use something like the following to filter out warnings unrelated to your project:\n\n```\nimport project\nPROJECT_PATH = os.path.dirname(project.__file__)\n\ndef filter_deprecation_warnings(record):\n    warnings_to_suppress = [\n        'RemovedInDjango110Warning'\n    ]\n    msg = record.getMessage()\n    return not any([warn in msg\n                    for warn in warnings_to_suppress\n                    if not msg.startswith(PROJECT_PATH)])\nlogging.getLogger('py.warnings').addFilter(filter_deprecation_warnings)\n```\n. @yprez \nYou've added some info at least, so that was OKish.\n\nIt was meant more in general.\n\nAnd regarding your comment (which were actually 2, so two emails for maintainers), it would be better to add it to the duplicate issues and reference this one from there, clearing stating that it's a dupe / fixed by this PR - so it can be easily triaged.\nOtherwise all the noise will only make it harder for maintainers.\nThat's also why we should stop here discussing this.\n. Dupe of / fixed by #813.\n. Dupe of / fixed by #813.\n. Duplicate of / fixed by #813.\n. Please stop +1'ing without providing some input/findings/patch.\n\nFWIW, you can use something like the following to filter out warnings unrelated to your project:\n\n```\nimport project\nPROJECT_PATH = os.path.dirname(project.__file__)\n\ndef filter_deprecation_warnings(record):\n    warnings_to_suppress = [\n        'RemovedInDjango110Warning'\n    ]\n    msg = record.getMessage()\n    return not any([warn in msg\n                    for warn in warnings_to_suppress\n                    if not msg.startswith(PROJECT_PATH)])\nlogging.getLogger('py.warnings').addFilter(filter_deprecation_warnings)\n```\n. @yprez \nYou've added some info at least, so that was OKish.\n\nIt was meant more in general.\n\nAnd regarding your comment (which were actually 2, so two emails for maintainers), it would be better to add it to the duplicate issues and reference this one from there, clearing stating that it's a dupe / fixed by this PR - so it can be easily triaged.\nOtherwise all the noise will only make it harder for maintainers.\nThat's also why we should stop here discussing this.\n. ",
    "bryankimani": "Thanks Omab.. I did pip  install python-social-auth==0.2.14...and the warning was gone..It worked for me.\n. Thanks Omab.. I did pip  install python-social-auth==0.2.14...and the warning was gone..It worked for me.\n. ",
    "alexandrevicenzi": ":+1: \n. :+1: \n. ",
    "duducosmos": "+1\n. +1\n. ",
    "PetrVasilev": "Where i have to add \"def filter_deprecation_warnings(record):\" in my project???\n. Hi, I also have this bug, and I tried fix it. You can do exception in\nyour project, and it will works.\n\n2016-02-20 9:57 GMT+09:00 yamashitadesu notifications@github.com:\n\n> Hi, I also have the Bug with Django 1.9.2.\n> I found this page\n> http://stackoverflow.com/questions/34321332/subfieldbase-has-been-deprecated-use-field-from-db-value-instead,\n> and I reinstalled python-social-auth by\n> $ git clone https://github.com/omab/python-social-auth\n> and\n> $ python setup.py install\n> \n> But I still have the Bug. Should I use Django 1.10? Or Can I solve this\n> Bug on Django 1.9?\n> \n> Thank you.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/pull/813#issuecomment-186471451\n> .\n\n## \n\n// \u0412\u0430\u0441\u0438\u043b\u044c\u0435\u0432 \u041f\u0435\u0442\u0440 \u0410\u043b\u0435\u043a\u0441\u0435\u0435\u0432\u0438\u0447\n. Me too, it is really bad problem for me\n\n2016-02-20 19:38 GMT+09:00 Laville Augustin notifications@github.com:\n\n> I have no idea why nobody wants to merge it. Really.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/pull/813#issuecomment-186566243\n> .\n\n## \n\n// \u0412\u0430\u0441\u0438\u043b\u044c\u0435\u0432 \u041f\u0435\u0442\u0440 \u0410\u043b\u0435\u043a\u0441\u0435\u0435\u0432\u0438\u0447\n. Where i have to add \"def filter_deprecation_warnings(record):\" in my project???\n. Hi, I also have this bug, and I tried fix it. You can do exception in\nyour project, and it will works.\n\n2016-02-20 9:57 GMT+09:00 yamashitadesu notifications@github.com:\n\n> Hi, I also have the Bug with Django 1.9.2.\n> I found this page\n> http://stackoverflow.com/questions/34321332/subfieldbase-has-been-deprecated-use-field-from-db-value-instead,\n> and I reinstalled python-social-auth by\n> $ git clone https://github.com/omab/python-social-auth\n> and\n> $ python setup.py install\n> \n> But I still have the Bug. Should I use Django 1.10? Or Can I solve this\n> Bug on Django 1.9?\n> \n> Thank you.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/pull/813#issuecomment-186471451\n> .\n\n## \n\n// \u0412\u0430\u0441\u0438\u043b\u044c\u0435\u0432 \u041f\u0435\u0442\u0440 \u0410\u043b\u0435\u043a\u0441\u0435\u0435\u0432\u0438\u0447\n. Me too, it is really bad problem for me\n\n2016-02-20 19:38 GMT+09:00 Laville Augustin notifications@github.com:\n\n> I have no idea why nobody wants to merge it. Really.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/omab/python-social-auth/pull/813#issuecomment-186566243\n> .\n\n## \n\n// \u0412\u0430\u0441\u0438\u043b\u044c\u0435\u0432 \u041f\u0435\u0442\u0440 \u0410\u043b\u0435\u043a\u0441\u0435\u0435\u0432\u0438\u0447\n. ",
    "yamashitadesu": "Hi, I also have the Bug with Django 1.9.2.\nI found [this page](http://stackoverflow.com/questions/34321332/subfieldbase-has-been-deprecated-use-field-from-db-value-instead), and I reinstalled python-social-auth by\n`$ git clone https://github.com/omab/python-social-auth`\nand\n`$ python setup.py install`\n\nBut I still have the Bug. Should I use Django 1.10? Or Can I solve this Bug on Django 1.9?\n\nThank you.\n. I am sorry, I could solve this.\nIt was my fault.\nAfter I deleted Database, it worked.\n. I solved myself.\nThe problem was the order of PIPELINE.\n. Hi, I also have the Bug with Django 1.9.2.\nI found [this page](http://stackoverflow.com/questions/34321332/subfieldbase-has-been-deprecated-use-field-from-db-value-instead), and I reinstalled python-social-auth by\n`$ git clone https://github.com/omab/python-social-auth`\nand\n`$ python setup.py install`\n\nBut I still have the Bug. Should I use Django 1.10? Or Can I solve this Bug on Django 1.9?\n\nThank you.\n. I am sorry, I could solve this.\nIt was my fault.\nAfter I deleted Database, it worked.\n. I solved myself.\nThe problem was the order of PIPELINE.\n. ",
    "AlbertPuchala": "When I change this line manually and try to use Google auth, I get Error:\n\n> AttributeError at /accounts/social/complete/google-oauth2/\n> 'str' object has no attribute 'update'\n> Request Method: GET\n> Request URL:    http://myapp.com:8000/accounts/social/complete/google-oauth2/?state=2M0kJYG5Y6gY2168PvXZYoSASqvkaGhk&code=4/oSlipMXmeksLQO8ekcGnWVtm9ZPFv1oBpJptr4Cm0wk&authuser=0&session_state=150dc7ee96507db45d657099378028204c576a4a..dfee&prompt=none\n> Django Version: 1.9.2\n> Exception Type: AttributeError\n> Exception Value:  \n> 'str' object has no attribute 'update'\n> Exception Location: /home/albert/HomeFinder/env/lib/python3.4/site-packages/social/storage/base.py in set_extra_data, line 85\n> Python Executable:  /home/albert/HomeFinder/env/bin/python\n> Python Version: 3.4.3\n\nWithout this change everything works fine.\nWhat am I doing wrong?\n. @hellvix Thanks, now it works :).\nBut shouldn't that (which you've pasted) change be appended to this branch?\n. When I change this line manually and try to use Google auth, I get Error:\n\n> AttributeError at /accounts/social/complete/google-oauth2/\n> 'str' object has no attribute 'update'\n> Request Method: GET\n> Request URL:    http://myapp.com:8000/accounts/social/complete/google-oauth2/?state=2M0kJYG5Y6gY2168PvXZYoSASqvkaGhk&code=4/oSlipMXmeksLQO8ekcGnWVtm9ZPFv1oBpJptr4Cm0wk&authuser=0&session_state=150dc7ee96507db45d657099378028204c576a4a..dfee&prompt=none\n> Django Version: 1.9.2\n> Exception Type: AttributeError\n> Exception Value:  \n> 'str' object has no attribute 'update'\n> Exception Location: /home/albert/HomeFinder/env/lib/python3.4/site-packages/social/storage/base.py in set_extra_data, line 85\n> Python Executable:  /home/albert/HomeFinder/env/bin/python\n> Python Version: 3.4.3\n\nWithout this change everything works fine.\nWhat am I doing wrong?\n. @hellvix Thanks, now it works :).\nBut shouldn't that (which you've pasted) change be appended to this branch?\n. ",
    "vaibhavmule": "Any progress on this?\n. Any progress on this?\n. ",
    "cleder": "This warning in Django 1.9 may be a red herring. I did have it and migrated to 1.10 without any problems. If you are on 1.9 and the warning holds you back, just give it a try to migrate to 1.10 (and run your tests ;-) )\n. this is only a problem when you activate the debug pipeline => yagni\n. more details please, it works fine for me on django 1.10.2 on linux\n. This is mainly for users that build their applications on top of the demo app who will have to add this tests eventually anyway\n. This warning in Django 1.9 may be a red herring. I did have it and migrated to 1.10 without any problems. If you are on 1.9 and the warning holds you back, just give it a try to migrate to 1.10 (and run your tests ;-) )\n. this is only a problem when you activate the debug pipeline => yagni\n. more details please, it works fine for me on django 1.10.2 on linux\n. This is mainly for users that build their applications on top of the demo app who will have to add this tests eventually anyway\n. ",
    "ashishpahwa7": "I have migrated to 1.10 and still facing the same issue :\n\n`class JSONField(six.with_metaclass(models.SubfieldBase,models.TextField)):\nAttributeError: 'module' object has no attribute 'SubfieldBase'\n`\n. Hope this helps : \r\nhttps://github.com/omab/python-social-auth/blob/master/MIGRATING_TO_SOCIAL.md. Turned out that social discovery of my app was turned off .\n. I have migrated to 1.10 and still facing the same issue :\n\n`class JSONField(six.with_metaclass(models.SubfieldBase,models.TextField)):\nAttributeError: 'module' object has no attribute 'SubfieldBase'\n`\n. Hope this helps : \r\nhttps://github.com/omab/python-social-auth/blob/master/MIGRATING_TO_SOCIAL.md. Turned out that social discovery of my app was turned off .\n. ",
    "xeor": "I am using a strategy like this now;\n\n```\nclass SocialAuthDjangoStrategy(DjangoStrategy):\n    def request_data(self, merge=True):\n        if not self.request:\n            return {}\n\n        if self.request.method == 'POST':\n            return self.request.data\n        else:\n            return self.request.GET\n```\n\nand it works as it should. It is simplified a little compared to the original since this is all I need, but it works..\n. I am using a strategy like this now;\n\n```\nclass SocialAuthDjangoStrategy(DjangoStrategy):\n    def request_data(self, merge=True):\n        if not self.request:\n            return {}\n\n        if self.request.method == 'POST':\n            return self.request.data\n        else:\n            return self.request.GET\n```\n\nand it works as it should. It is simplified a little compared to the original since this is all I need, but it works..\n. ",
    "seawolf42": "Awesome, thanks!. Awesome, thanks!. ",
    "willcadell": "+1\n. +1\n. ",
    "michaelconnor00": "+1\n. +1\n. ",
    "juljacques": "+1\n. +1\n. ",
    "stuporglue": "+1!\n. +1!\n. ",
    "aspcanada": "I just realized that my tests were not committed, sorry for the delay!\n. I just realized that my tests were not committed, sorry for the delay!\n. ",
    "halfstrik": "I managed to get it right and actually receive user email!\n\nFor this several steps need to be done ([see this post](https://twittercommunity.com/t/how-to-get-email-from-twitter-user-using-oauthtokens/558/209?u=emergeworld))\n\nMake sure Twitter respond to you via email and approved that your app actually get white-listed.\n\nThan this changes need to be done in python-social-auth app in `python/lib/python2.7/site-packages/social/backends/twitter.py`:\nline 30: `'email': response.get('email'),`\nline 38: `'https://api.twitter.com/1.1/account/verify_credentials.json?include_email=true',`\n\nIn other words, `Parameters` from Twitter documentation must go not to `access_token` object, but rather to URL as path params.\n\nI'll try to create a pull request for this as soon as I understand how this app works on examples with Facebook and similar.\n. @hellvix, great to hear it! I updated appropriate docs/ files in this PR as well.\n\nThe things I'm unsure are the name of the variable in settings and a quality of my test.\nWill wait @omab for judgments:)\n. I managed to get it right and actually receive user email!\n\nFor this several steps need to be done ([see this post](https://twittercommunity.com/t/how-to-get-email-from-twitter-user-using-oauthtokens/558/209?u=emergeworld))\n\nMake sure Twitter respond to you via email and approved that your app actually get white-listed.\n\nThan this changes need to be done in python-social-auth app in `python/lib/python2.7/site-packages/social/backends/twitter.py`:\nline 30: `'email': response.get('email'),`\nline 38: `'https://api.twitter.com/1.1/account/verify_credentials.json?include_email=true',`\n\nIn other words, `Parameters` from Twitter documentation must go not to `access_token` object, but rather to URL as path params.\n\nI'll try to create a pull request for this as soon as I understand how this app works on examples with Facebook and similar.\n. @hellvix, great to hear it! I updated appropriate docs/ files in this PR as well.\n\nThe things I'm unsure are the name of the variable in settings and a quality of my test.\nWill wait @omab for judgments:)\n. ",
    "goatandsheep": "> The Google+ Sign-In button and the plus.login scope used by Google+ Sign-In are not currently supported for use with the Google+ Domains API. Requests that are made to the Google+ Domains API using an authentication token granted for the plus.login scope, or generated by the Google+ Sign-In button, will fail.\n\n[Google+ API Documentation](https://developers.google.com/+/domains/authentication/)\n. @voutilad I noticed that the Google+ Auth code currently has the following scopes:\n\n```\n    DEFAULT_SCOPE = [\n        'https://www.googleapis.com/auth/plus.login',\n        'https://www.googleapis.com/auth/plus.me',\n    ]\n```\n\nMaybe all that needs to be done is remove the scope, `https://www.googleapis.com/auth/plus.login`\n. > The Google+ Sign-In button and the plus.login scope used by Google+ Sign-In are not currently supported for use with the Google+ Domains API. Requests that are made to the Google+ Domains API using an authentication token granted for the plus.login scope, or generated by the Google+ Sign-In button, will fail.\n\n[Google+ API Documentation](https://developers.google.com/+/domains/authentication/)\n. @voutilad I noticed that the Google+ Auth code currently has the following scopes:\n\n```\n    DEFAULT_SCOPE = [\n        'https://www.googleapis.com/auth/plus.login',\n        'https://www.googleapis.com/auth/plus.me',\n    ]\n```\n\nMaybe all that needs to be done is remove the scope, `https://www.googleapis.com/auth/plus.login`\n. ",
    "voutilad": "I only use the `social.backends.google.GoogleOAuth2` backend and my project in the Google Developers Console has \"Google+ API\" enabled and it works fine. I think similar to what @goatandsheep might be saying, you might want to try removing the `social.backends.google.GooglePlusAuth` backend and just use the `social.backends.google.GoogleOAuth2` backend.\n. I only use the `social.backends.google.GoogleOAuth2` backend and my project in the Google Developers Console has \"Google+ API\" enabled and it works fine. I think similar to what @goatandsheep might be saying, you might want to try removing the `social.backends.google.GooglePlusAuth` backend and just use the `social.backends.google.GoogleOAuth2` backend.\n. ",
    "sylwekb": "@ami-fairfly any progress on this?\n. @ami-fairfly any progress on this?\n. ",
    "liberathor": "@ami-fairfly you can share your implementation?, we need really solve this issue.\r\n\r\nI try with android and web to get token_id and send to server and can't solve.\r\nhttps://developers.google.com/identity/sign-in/android/backend-auth\r\nhttps://developers.google.com/identity/sign-in/web/build-button\r\n\r\nand try it with documentation sample google+ sign in button and doesn't works\r\nhttp://python-social-auth.readthedocs.io/en/latest/backends/google.html\r\n . @ami-fairfly you can share your implementation?, we need really solve this issue.\r\n\r\nI try with android and web to get token_id and send to server and can't solve.\r\nhttps://developers.google.com/identity/sign-in/android/backend-auth\r\nhttps://developers.google.com/identity/sign-in/web/build-button\r\n\r\nand try it with documentation sample google+ sign in button and doesn't works\r\nhttp://python-social-auth.readthedocs.io/en/latest/backends/google.html\r\n . ",
    "berdon": "I can't find any remnants of this merge / manual merge?\n. @dcmoore-gd @omab Yeah, this eliminates the \"optional\" specificity and forces it. For those using twitter authentication that haven't been approved for email requesting, you get a 401 authorization required error.\n. Potentially - there's one other thing I need to check. But most of the posts around the VerifyCredentials and the change to the email requests (specifically the one that this CR was addressing) indicate the need for a specific Twitter authorization on an account.\n. I can't find any remnants of this merge / manual merge?\n. @dcmoore-gd @omab Yeah, this eliminates the \"optional\" specificity and forces it. For those using twitter authentication that haven't been approved for email requesting, you get a 401 authorization required error.\n. Potentially - there's one other thing I need to check. But most of the posts around the VerifyCredentials and the change to the email requests (specifically the one that this CR was addressing) indicate the need for a specific Twitter authorization on an account.\n. ",
    "kemar": ":+1: \n. :+1: \n. ",
    "hartym": ":+1: \n. :+1: \n. ",
    "franlu": "**Please give urgent attention on this.**\n:+1: \n. **Please give urgent attention on this.**\n:+1: \n. ",
    "danielskun": ":+1:\n. :+1:\n. ",
    "tomislater": "\ud83d\udc4d . \ud83d\udc4d . ",
    "sreejithr": "Saw this error in InnoDB status:\n\n```\n> show engine innodb status;\n....\n....\n------------------------\nLATEST FOREIGN KEY ERROR\n------------------------\n160201  7:41:15 Error in foreign key constraint of table <db-name>/#sql-1_b2:\n FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`):\nCannot resolve table name close to:\n (`id`)\n....\n....\n```\n. Saw this error in InnoDB status:\n\n```\n> show engine innodb status;\n....\n....\n------------------------\nLATEST FOREIGN KEY ERROR\n------------------------\n160201  7:41:15 Error in foreign key constraint of table <db-name>/#sql-1_b2:\n FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`):\nCannot resolve table name close to:\n (`id`)\n....\n....\n```\n. ",
    "FaBay89": "Ok so sorry for that, seems to be a fb issue...\n\nhttp://stackoverflow.com/questions/7131909/facebook-callback-appends-to-return-url\n. Ok so sorry for that, seems to be a fb issue...\n\nhttp://stackoverflow.com/questions/7131909/facebook-callback-appends-to-return-url\n. ",
    "vanadium23": "Up\n. Up\n. ",
    "frafra": "Same issue here. \n. ```\n    def get_pipeline(self):\n        return self.setting('PIPELINE', DEFAULT_AUTH_PIPELINE)\n```\n\nSource: https://github.com/omab/python-social-auth/blob/master/social/strategies/base.py#L97\n\nI changed PIPELINE with SOCIAL_AUTH_PIPELINE and it seems to work.\n\nThere's another file which tries to read PIPELINE, but it's under social/tests.\n\n```\n$ grep -ri \"'PIPELINE'\" .\n./social/strategies/base.py:        return self.setting('PIPELINE', DEFAULT_AUTH_PIPELINE)\n./social/tests/strategy.py:        return self.setting('PIPELINE', (\n```\n. Same issue here. \n. ```\n    def get_pipeline(self):\n        return self.setting('PIPELINE', DEFAULT_AUTH_PIPELINE)\n```\n\nSource: https://github.com/omab/python-social-auth/blob/master/social/strategies/base.py#L97\n\nI changed PIPELINE with SOCIAL_AUTH_PIPELINE and it seems to work.\n\nThere's another file which tries to read PIPELINE, but it's under social/tests.\n\n```\n$ grep -ri \"'PIPELINE'\" .\n./social/strategies/base.py:        return self.setting('PIPELINE', DEFAULT_AUTH_PIPELINE)\n./social/tests/strategy.py:        return self.setting('PIPELINE', (\n```\n. ",
    "colons": "It would solve a problem of mine if this were merged.\n. It would solve a problem of mine if this were merged.\n. ",
    "rwoloszyn": "Check this issue :\nException Value: no such table: app_customuser\n\nIt seems that some tables are missing, either in your db or twitter changesd their api\n. Check this issue :\nException Value: no such table: app_customuser\n\nIt seems that some tables are missing, either in your db or twitter changesd their api\n. ",
    "nberserk": "same issue with Github.\n\nEnvironment:\n\nRequest Method: GET\nRequest URL: http://127.0.0.1:8000/complete/github/?code=034a3567b2e92b8de6e5&redirect_state=4IWASz4yKtcxo0QEvYPVvoFwDXGPpRtz&state=4IWASz4yKtcxo0QEvYPVvoFwDXGPpRtz\n\nDjango Version: 1.9.4\nPython Version: 2.7.10\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.admin',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'social.apps.django_app.default',\n 'example.app')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\n\nTraceback:\n\nFile \"/usr/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                     response = self.process_exception_by_middleware(e, request)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                     response = wrapped_callback(request, _callback_args, *_callback_kwargs)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/views/decorators/cache.py\" in _wrapped_view_func\n1.         response = view_func(request, _args, *_kwargs)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n1.         return view_func(_args, *_kwargs)\n\nFile \"../../social/apps/django_app/utils.py\" in wrapper\n1.             return func(request, backend, _args, *_kwargs)\n\nFile \"../../social/apps/django_app/views.py\" in complete\n1.                        redirect_name=REDIRECT_FIELD_NAME, _args, *_kwargs)\n\nFile \"../../social/actions.py\" in do_complete\n1.         user = backend.complete(user=user, _args, *_kwargs)\n\nFile \"../../social/backends/base.py\" in complete\n1.         return self.auth_complete(_args, *_kwargs)\n\nFile \"../../social/utils.py\" in wrapper\n1.             return func(_args, *_kwargs)\n\nFile \"../../social/backends/oauth.py\" in auth_complete\n1.                             _args, *_kwargs)\n\nFile \"../../social/utils.py\" in wrapper\n1.             return func(_args, *_kwargs)\n\nFile \"../../social/backends/oauth.py\" in do_auth\n1.         return self.strategy.authenticate(_args, *_kwargs)\n\nFile \"../../social/strategies/django_strategy.py\" in authenticate\n1.         return authenticate(_args, *_kwargs)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/contrib/auth/**init**.py\" in authenticate\n1.             user = backend.authenticate(**credentials)\n\nFile \"../../social/backends/base.py\" in authenticate\n1.         return self.pipeline(pipeline, _args, *_kwargs)\n\nFile \"../../social/backends/base.py\" in pipeline\n1.         out = self.run_pipeline(pipeline, pipeline_index, _args, *_kwargs)\n\nFile \"../../social/backends/base.py\" in run_pipeline\n1.             result = func(_args, *_out) or {}\n\nFile \"../../social/pipeline/social_auth.py\" in social_user\n1.     social = backend.strategy.storage.user.get_social_auth(provider, uid)\n\nFile \"../../social/apps/django_app/default/models.py\" in get_social_auth\n1.                                                           uid=uid)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/db/models/query.py\" in get\n1.         num = len(clone)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/db/models/query.py\" in **len**\n1.         self._fetch_all()\n\nFile \"/usr/local/lib/python2.7/site-packages/django/db/models/query.py\" in _fetch_all\n1.             self._result_cache = list(self.iterator())\n\nFile \"/usr/local/lib/python2.7/site-packages/django/db/models/query.py\" in **iter**\n1.         results = compiler.execute_sql()\n\nFile \"/usr/local/lib/python2.7/site-packages/django/db/models/sql/compiler.py\" in execute_sql\n1.             cursor.execute(sql, params)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/db/backends/utils.py\" in execute\n1.             return super(CursorDebugWrapper, self).execute(sql, params)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/db/backends/utils.py\" in execute\n1.                 return self.cursor.execute(sql, params)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/db/utils.py\" in **exit**\n1.                 six.reraise(dj_exc_type, dj_exc_value, traceback)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/db/backends/utils.py\" in execute\n1.                 return self.cursor.execute(sql, params)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/db/backends/sqlite3/base.py\" in execute\n1.         return Database.Cursor.execute(self, query, params)\n\nException Type: OperationalError at /complete/github/\nException Value: no such table: app_customuser\n. same issue with Github.\n\nEnvironment:\n\nRequest Method: GET\nRequest URL: http://127.0.0.1:8000/complete/github/?code=034a3567b2e92b8de6e5&redirect_state=4IWASz4yKtcxo0QEvYPVvoFwDXGPpRtz&state=4IWASz4yKtcxo0QEvYPVvoFwDXGPpRtz\n\nDjango Version: 1.9.4\nPython Version: 2.7.10\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.admin',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'social.apps.django_app.default',\n 'example.app')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\n\nTraceback:\n\nFile \"/usr/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                     response = self.process_exception_by_middleware(e, request)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                     response = wrapped_callback(request, _callback_args, *_callback_kwargs)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/views/decorators/cache.py\" in _wrapped_view_func\n1.         response = view_func(request, _args, *_kwargs)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n1.         return view_func(_args, *_kwargs)\n\nFile \"../../social/apps/django_app/utils.py\" in wrapper\n1.             return func(request, backend, _args, *_kwargs)\n\nFile \"../../social/apps/django_app/views.py\" in complete\n1.                        redirect_name=REDIRECT_FIELD_NAME, _args, *_kwargs)\n\nFile \"../../social/actions.py\" in do_complete\n1.         user = backend.complete(user=user, _args, *_kwargs)\n\nFile \"../../social/backends/base.py\" in complete\n1.         return self.auth_complete(_args, *_kwargs)\n\nFile \"../../social/utils.py\" in wrapper\n1.             return func(_args, *_kwargs)\n\nFile \"../../social/backends/oauth.py\" in auth_complete\n1.                             _args, *_kwargs)\n\nFile \"../../social/utils.py\" in wrapper\n1.             return func(_args, *_kwargs)\n\nFile \"../../social/backends/oauth.py\" in do_auth\n1.         return self.strategy.authenticate(_args, *_kwargs)\n\nFile \"../../social/strategies/django_strategy.py\" in authenticate\n1.         return authenticate(_args, *_kwargs)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/contrib/auth/**init**.py\" in authenticate\n1.             user = backend.authenticate(**credentials)\n\nFile \"../../social/backends/base.py\" in authenticate\n1.         return self.pipeline(pipeline, _args, *_kwargs)\n\nFile \"../../social/backends/base.py\" in pipeline\n1.         out = self.run_pipeline(pipeline, pipeline_index, _args, *_kwargs)\n\nFile \"../../social/backends/base.py\" in run_pipeline\n1.             result = func(_args, *_out) or {}\n\nFile \"../../social/pipeline/social_auth.py\" in social_user\n1.     social = backend.strategy.storage.user.get_social_auth(provider, uid)\n\nFile \"../../social/apps/django_app/default/models.py\" in get_social_auth\n1.                                                           uid=uid)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/db/models/query.py\" in get\n1.         num = len(clone)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/db/models/query.py\" in **len**\n1.         self._fetch_all()\n\nFile \"/usr/local/lib/python2.7/site-packages/django/db/models/query.py\" in _fetch_all\n1.             self._result_cache = list(self.iterator())\n\nFile \"/usr/local/lib/python2.7/site-packages/django/db/models/query.py\" in **iter**\n1.         results = compiler.execute_sql()\n\nFile \"/usr/local/lib/python2.7/site-packages/django/db/models/sql/compiler.py\" in execute_sql\n1.             cursor.execute(sql, params)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/db/backends/utils.py\" in execute\n1.             return super(CursorDebugWrapper, self).execute(sql, params)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/db/backends/utils.py\" in execute\n1.                 return self.cursor.execute(sql, params)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/db/utils.py\" in **exit**\n1.                 six.reraise(dj_exc_type, dj_exc_value, traceback)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/db/backends/utils.py\" in execute\n1.                 return self.cursor.execute(sql, params)\n\nFile \"/usr/local/lib/python2.7/site-packages/django/db/backends/sqlite3/base.py\" in execute\n1.         return Database.Cursor.execute(self, query, params)\n\nException Type: OperationalError at /complete/github/\nException Value: no such table: app_customuser\n. ",
    "kapucko": "Solution is here: http://stackoverflow.com/questions/35394949/python-social-auth-with-django-errors-with-no-such-table-app-customuser ... just for others\n. Solution is here: http://stackoverflow.com/questions/35394949/python-social-auth-with-django-errors-with-no-such-table-app-customuser ... just for others\n. ",
    "LucasRoesler": "We have implemented it, but it takes some weird effort on the Azure side when setting up your application.   I used the AzureAD Backend in Python Social Auth. \n. Our configuration currently looks like \n\n``` python\nSOCIAL_AUTH_AUTHENTICATION_BACKENDS = (\n    'social.backends.azuread.AzureADOAuth2',\n   ...\n)\n\nSOCIAL_AUTH_AZUREAD_OAUTH2_KEY = '...'\nSOCIAL_AUTH_AZUREAD_OAUTH2_SECRET = '...' \nSOCIAL_AUTH_AZUREAD_OAUTH2_RESOURCE = 'https://graph.microsoft.com/'\n```\n\nOnce you have the OAuth2 key and secret, it simply worked. The `AzureADOAuth2` backend is included in python-social-auth. \n\nTo get the key and secret, we had to sign up for an Azure account and then create a new Azure app.   Their documentation for creating apps is here: https://azure.microsoft.com/en-us/documentation/articles/active-directory-integrating-applications/#BKMK_Native\n. We have implemented it, but it takes some weird effort on the Azure side when setting up your application.   I used the AzureAD Backend in Python Social Auth. \n. Our configuration currently looks like \n\n``` python\nSOCIAL_AUTH_AUTHENTICATION_BACKENDS = (\n    'social.backends.azuread.AzureADOAuth2',\n   ...\n)\n\nSOCIAL_AUTH_AZUREAD_OAUTH2_KEY = '...'\nSOCIAL_AUTH_AZUREAD_OAUTH2_SECRET = '...' \nSOCIAL_AUTH_AZUREAD_OAUTH2_RESOURCE = 'https://graph.microsoft.com/'\n```\n\nOnce you have the OAuth2 key and secret, it simply worked. The `AzureADOAuth2` backend is included in python-social-auth. \n\nTo get the key and secret, we had to sign up for an Azure account and then create a new Azure app.   Their documentation for creating apps is here: https://azure.microsoft.com/en-us/documentation/articles/active-directory-integrating-applications/#BKMK_Native\n. ",
    "alx377": "I got this same problem except with steam. what was the problem here?. I got this same problem except with steam. what was the problem here?. ",
    "amigo00678": "I had this issue. Put domain name in nginx and django settings, not IP of server. That error gone.\n. The setting that fixed that for me was BASE_URL = 'mydomain.com' instead of BASE_URL = '212.x.x.x'.\nAnd also 'server_name' setting for nginx config.\n. I had this issue. Put domain name in nginx and django settings, not IP of server. That error gone.\n. The setting that fixed that for me was BASE_URL = 'mydomain.com' instead of BASE_URL = '212.x.x.x'.\nAnd also 'server_name' setting for nginx config.\n. ",
    "Keda87": "I also had this issue when using twitter, but not all my users got this error.\n@amigo00678 could you give a snippet for django settings of yours to fix this?\n. I also had this issue when using twitter, but not all my users got this error.\n@amigo00678 could you give a snippet for django settings of yours to fix this?\n. ",
    "anderflash": "No, and it works with Facebook, but not with Google\n. I've found the problem. There is a mistake in the book. They suggest adding this to the template:\n\n```\n<li class=\"google\"><a href=\"{% url \"social:begin\" \"google\" %}\">Login\nwith Google</a></li>\n```\n\nChange **google** by **google-oauth2**:\n\n```\n<li class=\"google\"><a href=\"{% url \"social:begin\" \"google-oauth2\" %}\">Login\nwith Google</a></li>\n```\n\nSo the backend for Google (by using OAuth2) is registered as google-oauth2.\n\nThanks\n. No, and it works with Facebook, but not with Google\n. I've found the problem. There is a mistake in the book. They suggest adding this to the template:\n\n```\n<li class=\"google\"><a href=\"{% url \"social:begin\" \"google\" %}\">Login\nwith Google</a></li>\n```\n\nChange **google** by **google-oauth2**:\n\n```\n<li class=\"google\"><a href=\"{% url \"social:begin\" \"google-oauth2\" %}\">Login\nwith Google</a></li>\n```\n\nSo the backend for Google (by using OAuth2) is registered as google-oauth2.\n\nThanks\n. ",
    "philliphuangca": "hey anderflash, i'm going through the same book (Django by Example) and encountered the same `Backend not found` error. I did what you suggested changing from `google` to `google-oauth2` in the login template, and I also used the `'social.backends.google.GoogleOAuth2'` in settings.py, but I'm still getting the error. How did you resolve your issue? Thanks\n. hey anderflash, i'm going through the same book (Django by Example) and encountered the same `Backend not found` error. I did what you suggested changing from `google` to `google-oauth2` in the login template, and I also used the `'social.backends.google.GoogleOAuth2'` in settings.py, but I'm still getting the error. How did you resolve your issue? Thanks\n. ",
    "simple0426": "Thanks for @anderflash , i solved this problem according to your suggestion.\n. Thanks for @anderflash , i solved this problem according to your suggestion.\n. ",
    "diorich": "Yep i had the same problem thanks for posting.... One thing i have noticed is that if i click edit profile it throws an error does everyone else get this or have i missed something. That is once you have logged in with the social accounts. Its because a profile doesn't exist yet. \n. Yep i had the same problem thanks for posting.... One thing i have noticed is that if i click edit profile it throws an error does everyone else get this or have i missed something. That is once you have logged in with the social accounts. Its because a profile doesn't exist yet. \n. ",
    "vglfr": "Just for the record: it's 'social_core.backends.google.GoogleOAuth2' now (social-auth-app-django 1.1.0, social-auth-core 1.2.0).. Just for the record: it's 'social_core.backends.google.GoogleOAuth2' now (social-auth-app-django 1.1.0, social-auth-core 1.2.0).. ",
    "adamchainz": "Fixed by 03ae00154900a8150a5bf941663425698aacdb6b\n. \ud83d\udc4d  Would like to see this merged\n. Hi, at work we're looking to upgrade to Django 1.10 and python-social-auth is one of dependencies that needs to upgrade. Is there anything I can do to help with the migration? \ud83d\ude38 \n. Fixed by 03ae00154900a8150a5bf941663425698aacdb6b\n. \ud83d\udc4d  Would like to see this merged\n. Hi, at work we're looking to upgrade to Django 1.10 and python-social-auth is one of dependencies that needs to upgrade. Is there anything I can do to help with the migration? \ud83d\ude38 \n. ",
    "Chronial": "Note: I fixed this locally for my project \u2013 all that is required is to generate the `OAuth1` for this one call without the two problematic parameters.\n. @Andygmb In general I agree, but I think this change is more about architecture. My local fix feels to dirty for the actual library, as it only fixes Xing.\n\nI think this should be fixed for every Oauth provider. `oauth_callback` and `aouth_verifier` should only be send on the first call, not all subsequent api calls. Xing is just the only provider that complains, but it's just as wrong for every other one.\n. Note: I fixed this locally for my project \u2013 all that is required is to generate the `OAuth1` for this one call without the two problematic parameters.\n. @Andygmb In general I agree, but I think this change is more about architecture. My local fix feels to dirty for the actual library, as it only fixes Xing.\n\nI think this should be fixed for every Oauth provider. `oauth_callback` and `aouth_verifier` should only be send on the first call, not all subsequent api calls. Xing is just the only provider that complains, but it's just as wrong for every other one.\n. ",
    "Andygmb": "@chronial - if you fixed it locally you should submit a pull request with that fix. \n. @chronial - if you fixed it locally you should submit a pull request with that fix. \n. ",
    "ZhiweiWang": "please check backend/weixin.py\n. please check backend/weixin.py\n. ",
    "maparent": "Good day!\nAny wordpress instance can serve as an identity provider with the help of https://srd.wordpress.org/plugins/oauth2-provider/.\nEach instance will have a different URL and OAuth key/secret pair, but otherwise will be identical. They differ in data values, not behaviour; as such they should not need subclassing. (And requiring subclasses makes adding an instance a code vs data modification.)\nI wrote a wordpress provider, btw: I wanted to make it part of this pull request, but I thought I'd get the requisite changes pulled before proposing the provider itsef. It is here if you want to look at it:\nhttps://github.com/assembl/assembl/blob/develop/assembl/auth/wordpress.py\nI hope my intention is clearer.\nBest,\nMarc-Antoine Parent\n. Good day!\nAny wordpress instance can serve as an identity provider with the help of https://srd.wordpress.org/plugins/oauth2-provider/.\nEach instance will have a different URL and OAuth key/secret pair, but otherwise will be identical. They differ in data values, not behaviour; as such they should not need subclassing. (And requiring subclasses makes adding an instance a code vs data modification.)\nI wrote a wordpress provider, btw: I wanted to make it part of this pull request, but I thought I'd get the requisite changes pulled before proposing the provider itsef. It is here if you want to look at it:\nhttps://github.com/assembl/assembl/blob/develop/assembl/auth/wordpress.py\nI hope my intention is clearer.\nBest,\nMarc-Antoine Parent\n. ",
    "alexpantyukhin": "I don't know why, but the current pull request didn't attach to the issue. https://github.com/omab/python-social-auth/pull/932\n. I found what was the problem. It seems that the `do_complete` function tried to get `current_user` object which was a proxy. That was the reason why it was not 'callable'\n. @omab  Hi, whats about this PR?\n. I see. I tested it on a couple of social networks.. It seems to be working. Thanks!\n. You are welcome!\n. Sorry but I found it only now when reviewed it.\n. Yes.. it looks like and error. I will look on it.\n. +1 @alexandcote . Also want to help.\n. @omab  I have added PR https://github.com/python-social-auth/social-app-django/pull/1 which is migration of https://github.com/omab/python-social-auth/pull/1031 on new repos.\n. Hi @meatbot. There is an example of flask app for flask and sqlalchemy https://github.com/omab/python-social-auth/tree/master/examples/flask_example . Please, look on manage.py file (https://github.com/omab/python-social-auth/blob/master/examples/flask_example/manage.py) you can find there a method `syncdb`. If you run it  '.manage.py syncdb' this command create all needed tables for you. Hopefully this advise will be useful.\n. I guess I know what the problem. It seems you use `flask_migrate` and `social_auth` tables is not in the same session. That's why migration thinks that these tables are redundant. Did you made a call of `init_social`?\n. I don't know why, but the current pull request didn't attach to the issue. https://github.com/omab/python-social-auth/pull/932\n. I found what was the problem. It seems that the `do_complete` function tried to get `current_user` object which was a proxy. That was the reason why it was not 'callable'\n. @omab  Hi, whats about this PR?\n. I see. I tested it on a couple of social networks.. It seems to be working. Thanks!\n. You are welcome!\n. Sorry but I found it only now when reviewed it.\n. Yes.. it looks like and error. I will look on it.\n. +1 @alexandcote . Also want to help.\n. @omab  I have added PR https://github.com/python-social-auth/social-app-django/pull/1 which is migration of https://github.com/omab/python-social-auth/pull/1031 on new repos.\n. Hi @meatbot. There is an example of flask app for flask and sqlalchemy https://github.com/omab/python-social-auth/tree/master/examples/flask_example . Please, look on manage.py file (https://github.com/omab/python-social-auth/blob/master/examples/flask_example/manage.py) you can find there a method `syncdb`. If you run it  '.manage.py syncdb' this command create all needed tables for you. Hopefully this advise will be useful.\n. I guess I know what the problem. It seems you use `flask_migrate` and `social_auth` tables is not in the same session. That's why migration thinks that these tables are redundant. Did you made a call of `init_social`?\n. ",
    "hmilkovi": "+1\n. +1\n. ",
    "jamesmcnamara": "- 1\n. - 1\n. ",
    "Revocsid": "+1\n. +1\n. ",
    "mapeveri": "One question, when will reflected in pip repository?. Any idea?.\n\nThanks!\n. @hellvix thanks!\n. @luis8 thanks, It works perfect.\n\nOne question:\n\nThis line:\n\nSOCIAL_AUTH_FACEBOOK_SCOPE = ['email']\n\nWhat is the difference with the other line?\n\nThanks!\n. @luis8 perfect.\n\nThanks!\n. One question, when will reflected in pip repository?. Any idea?.\n\nThanks!\n. @hellvix thanks!\n. @luis8 thanks, It works perfect.\n\nOne question:\n\nThis line:\n\nSOCIAL_AUTH_FACEBOOK_SCOPE = ['email']\n\nWhat is the difference with the other line?\n\nThanks!\n. @luis8 perfect.\n\nThanks!\n. ",
    "paulsoh": "@webjunkie Thanks for proving my point. \n\nThe default namespace PSA uses is `PIPELINE` which causes an error when used with django-pipeline, (django-pipeline also uses `PIPELINE`) and as you said if you change it to `SOCIAL_AUTH_PIPELINE` for PSA there is no conflict between these two packages.\n\nThats the reason for this PR, I changed the default `PIPELINE` to `SOCIAL_AUTH_PIPELINE`.\n. @webjunkie Thanks for proving my point. \n\nThe default namespace PSA uses is `PIPELINE` which causes an error when used with django-pipeline, (django-pipeline also uses `PIPELINE`) and as you said if you change it to `SOCIAL_AUTH_PIPELINE` for PSA there is no conflict between these two packages.\n\nThats the reason for this PR, I changed the default `PIPELINE` to `SOCIAL_AUTH_PIPELINE`.\n. ",
    "dobestan": ":+1:\n. :+1:\n. ",
    "luis8": "@mapeveri  I'm also facing this problem, did you find a solution?\n. okay, i just find the solution. You need to add this to your settings file\n\nSOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {\n    'fields': 'id,name,email', \n}\n\nI didn't see this in the docs, so i think they need an update on this matter\n. @mapeveri the first one is for the email permissions in facebook, without it the facebook dialog wont ask for access to the email permission, but it seems like it is a little redundant IMO.\n. @mapeveri  I'm also facing this problem, did you find a solution?\n. okay, i just find the solution. You need to add this to your settings file\n\nSOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {\n    'fields': 'id,name,email', \n}\n\nI didn't see this in the docs, so i think they need an update on this matter\n. @mapeveri the first one is for the email permissions in facebook, without it the facebook dialog wont ask for access to the email permission, but it seems like it is a little redundant IMO.\n. ",
    "youcandanch": "Hey @omab, just bumping this one a bit - we'd like to get this integration into production use for our service (https://github.com/newsela) in the next few days, so if you'd have any time to review and accept, I'd greatly appreciate it. Thank you!\n. No, thank _you_! I see there's a few other outstanding PRs with similar additive functionality - is the general release plan to merge similar things and then increment on PyPi? Just trying to gauge when it'll be available for consumption there.\n. @omab just a heads up that this is currently breaking a good amount of stuff using refresh token in mainline - any chance this could get a set of eyes and a version bump on pypi?\n. @troygrosfield @Cotest it's been merged in and 0.2.18 is on PyPi now. Thanks, @omab!\n. Hey @omab, just bumping this one a bit - we'd like to get this integration into production use for our service (https://github.com/newsela) in the next few days, so if you'd have any time to review and accept, I'd greatly appreciate it. Thank you!\n. No, thank _you_! I see there's a few other outstanding PRs with similar additive functionality - is the general release plan to merge similar things and then increment on PyPi? Just trying to gauge when it'll be available for consumption there.\n. @omab just a heads up that this is currently breaking a good amount of stuff using refresh token in mainline - any chance this could get a set of eyes and a version bump on pypi?\n. @troygrosfield @Cotest it's been merged in and 0.2.18 is on PyPi now. Thanks, @omab!\n. ",
    "staticshock": "\u2764\ufe0f \n. \u2764\ufe0f \n. ",
    "nuklea": "Can I use python [gettext module](https://docs.python.org/2/library/gettext.html) for translate?\n. Can I use python [gettext module](https://docs.python.org/2/library/gettext.html) for translate?\n. ",
    "creimers": "@liminspace I'm experiencing something similar, if not the same. Have you been able to solve this?\n. @liminspace Never mind, I solved it with this answer: https://github.com/omab/python-social-auth/issues/675#issuecomment-124964058\n. @liminspace I'm experiencing something similar, if not the same. Have you been able to solve this?\n. @liminspace Never mind, I solved it with this answer: https://github.com/omab/python-social-auth/issues/675#issuecomment-124964058\n. ",
    "netoxico": "Hi @liminspace I had the same problem and just solved it adding a partial pipeline, I added \n\nsettings.py\n\n``` .py\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'users.pipeline.require_email', # Added my pipeline after get_username\n    '...' # Rest of needed pipelines\n)\n```\n\nusers/pipeline/require_email.py\n\n``` .py\nfrom django.shortcuts import redirect\n\nfrom social.pipeline.partial import partial\n\n\n@partial\ndef require_email(strategy, details, user=None, is_new=False, *args, **kwargs):\n    if kwargs.get('ajax') or user and user.email:\n        return\n    elif is_new and not details.get('email'):\n        email = strategy.request_data().get('email')\n        if email:\n            details['email'] = email\n        else:\n            return redirect('require_email')\n```\n\nurls.py\n\n``` .py\nurlpatterns = [\n    url(r'^email/$', views.require_email, name='require_email'),\n]\n```\n\nviews.py\n\n``` .py\n@render_to('home.html')\ndef require_email(request):\n    backend = request.session['partial_pipeline']['backend']\n    return {'email_required': True, 'backend': backend}\n```\n\nI hope this can help\n. Hi @liminspace I had the same problem and just solved it adding a partial pipeline, I added \n\nsettings.py\n\n``` .py\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'users.pipeline.require_email', # Added my pipeline after get_username\n    '...' # Rest of needed pipelines\n)\n```\n\nusers/pipeline/require_email.py\n\n``` .py\nfrom django.shortcuts import redirect\n\nfrom social.pipeline.partial import partial\n\n\n@partial\ndef require_email(strategy, details, user=None, is_new=False, *args, **kwargs):\n    if kwargs.get('ajax') or user and user.email:\n        return\n    elif is_new and not details.get('email'):\n        email = strategy.request_data().get('email')\n        if email:\n            details['email'] = email\n        else:\n            return redirect('require_email')\n```\n\nurls.py\n\n``` .py\nurlpatterns = [\n    url(r'^email/$', views.require_email, name='require_email'),\n]\n```\n\nviews.py\n\n``` .py\n@render_to('home.html')\ndef require_email(request):\n    backend = request.session['partial_pipeline']['backend']\n    return {'email_required': True, 'backend': backend}\n```\n\nI hope this can help\n. ",
    "sbussetti": "@clintonb yeah, the author of that patch removed SubFieldBase without reading the rest of the deprecation instructions from the Django docs which instruct you to provide `from_db_value` going forward.  Not that it matters to me, but #813 would also break backwards compat...\n. @clintonb yeah, the author of that patch removed SubFieldBase without reading the rest of the deprecation instructions from the Django docs which instruct you to provide `from_db_value` going forward.  Not that it matters to me, but #813 would also break backwards compat...\n. ",
    "ydemidenko": "extra_data fixed in Pull Request #897.\nError in vk.com refresh_token stay.\n. extra_data fixed in Pull Request #897.\nError in vk.com refresh_token stay.\n. ",
    "bcfurtado": "Still experiencing the same issue here though. Using version `0.2.18` with `Django==1.6.11`\n. Still experiencing the same issue here though. Using version `0.2.18` with `Django==1.6.11`\n. ",
    "lfyzjck": "Does this pr will be merged into master?\n. Does this pr will be merged into master?\n. ",
    "addodelgrossi": "I am having the same error, but another library\nImportError: No module named django_app\n. My INSTALLED_APPS \n\n```\nINSTALLED_APPS = (\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'django.contrib.humanize',\n    'core',\n    'store',\n    'api',\n    'account',\n    'sell',\n    'social',\n    'training',\n    'raven.contrib.django.raven_compat',\n    'social.apps.django_app.default'\n)\n```\n. Thanks for the reply.\n\nI just make one more test, removing my social app and the error persists.\n\nIt could be a conflict with other libraries?\n\n```\npip freeze\ncontextlib2==0.5.3\ndj-database-url==0.4.1\nDjango==1.9.7\ngunicorn==19.6.0\noauthlib==1.1.2\nPyJWT==1.4.0\npython-openid==2.2.5\npython-social-auth==0.2.19\nraven==5.20.0\nrequests==2.10.0\nrequests-oauthlib==0.6.1\nsix==1.10.0\n```\n. OK, thank you\n\nI can trying create new django application and only add python-social-auth, but I using the same version.\n\nAfter the test, I reply the result.\n. @AndreasBackx the problem was just to have another application with the social name\n\nthank you advanced\n. I am having the same error, but another library\nImportError: No module named django_app\n. My INSTALLED_APPS \n\n```\nINSTALLED_APPS = (\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'django.contrib.humanize',\n    'core',\n    'store',\n    'api',\n    'account',\n    'sell',\n    'social',\n    'training',\n    'raven.contrib.django.raven_compat',\n    'social.apps.django_app.default'\n)\n```\n. Thanks for the reply.\n\nI just make one more test, removing my social app and the error persists.\n\nIt could be a conflict with other libraries?\n\n```\npip freeze\ncontextlib2==0.5.3\ndj-database-url==0.4.1\nDjango==1.9.7\ngunicorn==19.6.0\noauthlib==1.1.2\nPyJWT==1.4.0\npython-openid==2.2.5\npython-social-auth==0.2.19\nraven==5.20.0\nrequests==2.10.0\nrequests-oauthlib==0.6.1\nsix==1.10.0\n```\n. OK, thank you\n\nI can trying create new django application and only add python-social-auth, but I using the same version.\n\nAfter the test, I reply the result.\n. @AndreasBackx the problem was just to have another application with the social name\n\nthank you advanced\n. ",
    "snznaota": "You should change your import to \n`from django.apps.apps import get_model`\n. You should change your import to \n`from django.apps.apps import get_model`\n. ",
    "dmzkrsk": "Fixed tests\n. Fixed tests\n. ",
    "BurkovBA": "There [is a Mongoengine ORM](https://github.com/omab/python-social-auth/blob/master/social/storage/mongoengine_orm.py) in repo, so I don't see any problems to use it with Tornado. For instance, both Flask and Django guys use Mongoengine, so I don't think there will be much problem with Tornado.\n. Ah, you're right. Motorengine probably works by making Tornado's io_loop listen to pymongo sockets.\n. There [is a Mongoengine ORM](https://github.com/omab/python-social-auth/blob/master/social/storage/mongoengine_orm.py) in repo, so I don't see any problems to use it with Tornado. For instance, both Flask and Django guys use Mongoengine, so I don't think there will be much problem with Tornado.\n. Ah, you're right. Motorengine probably works by making Tornado's io_loop listen to pymongo sockets.\n. ",
    "alekseyl1992": "Tornado is asynchronous in contrast to Djando and Flask, that's the main difference.\nI guess one should use motorengine instead of mongoengine.\nAnyways I'm not interested in this issue anymore.\n\nBut I think it would be good if that case will be covered in examples in that repo.\n. Tornado is asynchronous in contrast to Djando and Flask, that's the main difference.\nI guess one should use motorengine instead of mongoengine.\nAnyways I'm not interested in this issue anymore.\n\nBut I think it would be good if that case will be covered in examples in that repo.\n. ",
    "jontsai": "When is the next planned release v 0.2.20?\n. When is the next planned release v 0.2.20?\n. ",
    "pinkeshdarji": "Yes I tried it and its working now.\nThanks @hellvix \n. Yes I tried it and its working now.\nThanks @hellvix \n. ",
    "LennyLip": "I think, no. PSA is auth, not API backend. I think, you can just use access_token of PSA (stored in db) to make new query to vk API using custom vk python sdk.\nOr, you can rewrite vk backend of PSA to retrieve profile img while auth proccess (you can try use EXTRA_DATA at all).  \n. please close duplicate issue\n. Work fine for me. Please, paste full stack trace error. \n. @deniskrishna please, close issue if it works\n. you must add 'social.apps.django_app.default' into your INSTALLED_APPS in django settings.\nplease, read docs.\n. @justinguo see django ticket https://code.djangoproject.com/ticket/18256 :\n\"Please make sure all your MySQL tables are using the same storage engine (i.e. MyISM v. InnoDB). Specially tables that have ForeignKeys between them.\"\n\nsee ticket for more details. i think it is not PSA issue and must be closed\n. @webjunkie Yeah, seems it is duplicate. \n. \"request\" at pipeline kwargs is not django request. It is QueryDict , that using by PSA with tokens and etc. If you want access  django wsgi request, you must use \"strategy.request\" value.\n. +need help to config yandex settings.\n\n```\nSOCIAL_AUTH_YANDEX_KEY = ''\nSOCIAL_AUTH_YANDEX_SECRET = ''\n```\n\ndoes not work\n. ok, found it\n\nSOCIAL_AUTH_YANDEX_OAUTH2_KEY = ''\nSOCIAL_AUTH_YANDEX_OAUTH2_SECRET = ''\n\nit is for all backends (info nor newbie):\n\n```\nSOCIAL_AUTH - PSA app name\nYANDEX_OAUTH2 - converted backend name \"yandex-oauth2\"\nKEY - key\n```\n\nps. docs still required\n. I think, no. PSA is auth, not API backend. I think, you can just use access_token of PSA (stored in db) to make new query to vk API using custom vk python sdk.\nOr, you can rewrite vk backend of PSA to retrieve profile img while auth proccess (you can try use EXTRA_DATA at all).  \n. please close duplicate issue\n. Work fine for me. Please, paste full stack trace error. \n. @deniskrishna please, close issue if it works\n. you must add 'social.apps.django_app.default' into your INSTALLED_APPS in django settings.\nplease, read docs.\n. @justinguo see django ticket https://code.djangoproject.com/ticket/18256 :\n\"Please make sure all your MySQL tables are using the same storage engine (i.e. MyISM v. InnoDB). Specially tables that have ForeignKeys between them.\"\n\nsee ticket for more details. i think it is not PSA issue and must be closed\n. @webjunkie Yeah, seems it is duplicate. \n. \"request\" at pipeline kwargs is not django request. It is QueryDict , that using by PSA with tokens and etc. If you want access  django wsgi request, you must use \"strategy.request\" value.\n. +need help to config yandex settings.\n\n```\nSOCIAL_AUTH_YANDEX_KEY = ''\nSOCIAL_AUTH_YANDEX_SECRET = ''\n```\n\ndoes not work\n. ok, found it\n\nSOCIAL_AUTH_YANDEX_OAUTH2_KEY = ''\nSOCIAL_AUTH_YANDEX_OAUTH2_SECRET = ''\n\nit is for all backends (info nor newbie):\n\n```\nSOCIAL_AUTH - PSA app name\nYANDEX_OAUTH2 - converted backend name \"yandex-oauth2\"\nKEY - key\n```\n\nps. docs still required\n. ",
    "esistgut": "Another question regarding https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/default/models.py#L50\n\nWhy is the child class hardcoded in the parent abstract class?\nShouldn't this be:\n\n``` python\nexcept cls.DoesNotExist:\n```\n\nLike it is in the [mixin which is the base for _AbstractUserSocialAuth_](https://github.com/omab/python-social-auth/blob/master/social/storage/django_orm.py#L83)?\n. Another question regarding https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/default/models.py#L50\n\nWhy is the child class hardcoded in the parent abstract class?\nShouldn't this be:\n\n``` python\nexcept cls.DoesNotExist:\n```\n\nLike it is in the [mixin which is the base for _AbstractUserSocialAuth_](https://github.com/omab/python-social-auth/blob/master/social/storage/django_orm.py#L83)?\n. ",
    "AndreasBackx": "Can you please post your `INSTALLED_APPS` variable in `settings.py`? Make sure it contains `'social.apps.django_app.default'`. Your error is saying it can't find the module `django_apps`.\n. Either your own app `social` is interfering with `social.apps.django_app.default` or there is something wrong with your environment. This shouldn't be the library's fault.\n\nThis is also a duplicate of #902.\n. Best to check your own environment and app labels can conflict with one another which might be the cause. But I haven't looked very far into this. See [applications](https://docs.djangoproject.com/en/1.9/ref/applications/).\n. Can you please post your `INSTALLED_APPS` variable in `settings.py`? Make sure it contains `'social.apps.django_app.default'`. Your error is saying it can't find the module `django_apps`.\n. Either your own app `social` is interfering with `social.apps.django_app.default` or there is something wrong with your environment. This shouldn't be the library's fault.\n\nThis is also a duplicate of #902.\n. Best to check your own environment and app labels can conflict with one another which might be the cause. But I haven't looked very far into this. See [applications](https://docs.djangoproject.com/en/1.9/ref/applications/).\n. ",
    "max-arnold": "Do you have any objections against this patch? To me the fix looks obvious (bundled south migrations have something similar: https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/default/south_migrations/__init__.py)\n. Looks like duplicate of https://github.com/omab/python-social-auth/pull/936\n. Do you have any objections against this patch? To me the fix looks obvious (bundled south migrations have something similar: https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/default/south_migrations/__init__.py)\n. Looks like duplicate of https://github.com/omab/python-social-auth/pull/936\n. ",
    "Christopher2K": "Hi ! \nI'm in the same situation. I'm looking for a way to retrieve informations, save it into my db & link local account and FB account !\n. Hi ! \nI'm in the same situation. I'm looking for a way to retrieve informations, save it into my db & link local account and FB account !\n. ",
    "aoghina": "A workaround is to do this:\n\n```\ndb = SQLAlchemy()\n\ndef __bogus_flush():\n    raise AssertionError\n\ndb.session.flush = __bogus_flush\ninit_social(app, db.session)\n```\n\nIt works because if flush() raises and `AssertionError`, then python-social-auth does commit.\n. Actually this seems to be the offending commit: https://github.com/omab/python-social-auth/commit/a52ee69cc641018bbf32c6fd599a6c30036b3086\n. A workaround is to do this:\n\n```\ndb = SQLAlchemy()\n\ndef __bogus_flush():\n    raise AssertionError\n\ndb.session.flush = __bogus_flush\ninit_social(app, db.session)\n```\n\nIt works because if flush() raises and `AssertionError`, then python-social-auth does commit.\n. Actually this seems to be the offending commit: https://github.com/omab/python-social-auth/commit/a52ee69cc641018bbf32c6fd599a6c30036b3086\n. ",
    "EdwardBetts": "I've found more occurrences of flask.ext.login and submitted a new pull request: #951.\n. This affects more backends. I've submitted a new pull request: #947.\n. I've managed to mix multiple changes into a single pull request. I'm going to close this one.\n. I've found more occurrences of flask.ext.login and submitted a new pull request: #951.\n. This affects more backends. I've submitted a new pull request: #947.\n. I've managed to mix multiple changes into a single pull request. I'm going to close this one.\n. ",
    "seroy": "To run `python-social-auth >= 0.2.15` on `Django < 1.8`, can use this mokey patch (past it in the end of `settings.py`):\n\n```\ndef monkey_patch_socialauth_JSONField():\n    from django.db import models\n    from social.apps.django_app.default.fields import JSONField\n    from social.apps.django_app.default.models import AbstractUserSocialAuth\n\n    class PatchedJSONField(JSONField):\n        __metaclass__ = models.SubfieldBase\n\n    AbstractUserSocialAuth.add_to_class('extra_data', PatchedJSONField())\n\nmonkey_patch_socialauth_JSONField():\n```\n. Related: #909, #952\n. To run `python-social-auth >= 0.2.15` on `Django < 1.8`, can use this mokey patch (past it in the end of `settings.py`):\n\n```\ndef monkey_patch_socialauth_JSONField():\n    from django.db import models\n    from social.apps.django_app.default.fields import JSONField\n    from social.apps.django_app.default.models import AbstractUserSocialAuth\n\n    class PatchedJSONField(JSONField):\n        __metaclass__ = models.SubfieldBase\n\n    AbstractUserSocialAuth.add_to_class('extra_data', PatchedJSONField())\n\nmonkey_patch_socialauth_JSONField():\n```\n. Related: #909, #952\n. ",
    "RevolutionTech": "+1\n. #1031 works for me, all tests now passing using the `MIDDLEWARE` setting.\n. It doesn't look like this was fixed in `social-app-django`:\r\nhttps://github.com/python-social-auth/social-app-django/blob/e368f5305ecb469ae0908b0fa24b8c1797d3d22c/social_django/models.py#L62\r\n\r\nI suppose the more relevant issue for this now would be https://github.com/python-social-auth/social-app-django/issues/6 though.. +1\n. #1031 works for me, all tests now passing using the `MIDDLEWARE` setting.\n. It doesn't look like this was fixed in `social-app-django`:\r\nhttps://github.com/python-social-auth/social-app-django/blob/e368f5305ecb469ae0908b0fa24b8c1797d3d22c/social_django/models.py#L62\r\n\r\nI suppose the more relevant issue for this now would be https://github.com/python-social-auth/social-app-django/issues/6 though.. ",
    "xgt001": "+1, faced the same issue\n\nfor folks who came Googling here, looking into handling denied oauth flow for Google OAuth, you can use a basic Django 1.10 complaint middleware like this\n\n```\nfrom django.shortcuts import render_to_response\n\nclass MySocialAuthExceptionMiddleware(object):\n    def __init__(self, get_response):\n        self.get_response = get_response\n\n    def __call__(self, request):\n        if request.method == 'GET':\n            if 'access_denied' in request.META['QUERY_STRING']:\n                print \"User has denied access\"\n                return render_to_response('your_view.html')\n        response = self.get_response(request)\n\n        return response\n```\n. +1, faced the same issue\n\nfor folks who came Googling here, looking into handling denied oauth flow for Google OAuth, you can use a basic Django 1.10 complaint middleware like this\n\n```\nfrom django.shortcuts import render_to_response\n\nclass MySocialAuthExceptionMiddleware(object):\n    def __init__(self, get_response):\n        self.get_response = get_response\n\n    def __call__(self, request):\n        if request.method == 'GET':\n            if 'access_denied' in request.META['QUERY_STRING']:\n                print \"User has denied access\"\n                return render_to_response('your_view.html')\n        response = self.get_response(request)\n\n        return response\n```\n. ",
    "felipe3dfx": "+1\n. +1\n. ",
    "asieira": "Ok, I was finally able to make this work by setting `SOCIAL_AUTH_SLACK_SCOPE` to `['identity.basic']`, however the first name, last name and e-mail address are not being set on the Django user even if I add `identity.email`. Any ideas on what might be going on?\n. Ok, after much investigation I was able to determine that the default implementation of Slack OAuth was not correctly getting the user details since it was trying to use the `users.info` operation instead of the [users.identity](https://api.slack.com/methods/users.identity) one which is recommended in the [Sign In with Slack documentation](https://api.slack.com/docs/sign-in-with-slack). In my environment the former does not work (users never get names or e-mails populated) while the latter does.\n\nSo I implemented a subclass that works for me and allows me to properly obtain the user name and e-mail. Plus, it allows authentication to be restricted to a configurable list of Slack teams, since in my case this was a needed feature:\n\n```\nfrom social.backends.slack import SlackOAuth2\nfrom social.exceptions import AuthFailed\n\nclass FixedSlackOAuth2(SlackOAuth2):\n    DEFAULT_SCOPE = ['identity.basic','identity.email']\n\n    def get_user_details(self, response):\n        retval = {}\n\n        if 'name' in response['user']:\n            retval['fullname'] = response['user']['name']\n            s = retval['fullname'].split()\n            retval['first_name'] = s[0]\n            if len(s) > 1:\n                retval['last_name'] = ' '.join(s[1:])\n\n        if 'email' in response['user']:\n            retval['email'] = response['user']['email']\n\n        retval['username'] = '{0}:{1}@slack'.format(response['user']['id'], response['team']['id'])\n\n        return retval\n\n    def user_data(self, access_token, *args, **kwargs):\n        user_identity = self.get_json('https://slack.com/api/users.identity', params={'token': access_token})\n        user_identity['id'] = user_identity['user']['id']\n        if not user_identity.get('ok', False):\n            raise AuthFailed(self.name, user_identity.get('error', 'users.identity operation failed'))\n        return user_identity\n\n    def auth_allowed(self, response, details):\n        \"\"\"Return True if the user should be allowed to authenticate, by\n        default check if email is whitelisted (if there's a whitelist)\"\"\"\n        teams = self.setting('ALLOWED_TEAMS', [])\n        if not teams:\n            return True\n        elif 'team' in response and 'id' in response['team']:\n            return response['team']['id'] in teams\n        else:\n            return False\n```\n. Ok, I was finally able to make this work by setting `SOCIAL_AUTH_SLACK_SCOPE` to `['identity.basic']`, however the first name, last name and e-mail address are not being set on the Django user even if I add `identity.email`. Any ideas on what might be going on?\n. Ok, after much investigation I was able to determine that the default implementation of Slack OAuth was not correctly getting the user details since it was trying to use the `users.info` operation instead of the [users.identity](https://api.slack.com/methods/users.identity) one which is recommended in the [Sign In with Slack documentation](https://api.slack.com/docs/sign-in-with-slack). In my environment the former does not work (users never get names or e-mails populated) while the latter does.\n\nSo I implemented a subclass that works for me and allows me to properly obtain the user name and e-mail. Plus, it allows authentication to be restricted to a configurable list of Slack teams, since in my case this was a needed feature:\n\n```\nfrom social.backends.slack import SlackOAuth2\nfrom social.exceptions import AuthFailed\n\nclass FixedSlackOAuth2(SlackOAuth2):\n    DEFAULT_SCOPE = ['identity.basic','identity.email']\n\n    def get_user_details(self, response):\n        retval = {}\n\n        if 'name' in response['user']:\n            retval['fullname'] = response['user']['name']\n            s = retval['fullname'].split()\n            retval['first_name'] = s[0]\n            if len(s) > 1:\n                retval['last_name'] = ' '.join(s[1:])\n\n        if 'email' in response['user']:\n            retval['email'] = response['user']['email']\n\n        retval['username'] = '{0}:{1}@slack'.format(response['user']['id'], response['team']['id'])\n\n        return retval\n\n    def user_data(self, access_token, *args, **kwargs):\n        user_identity = self.get_json('https://slack.com/api/users.identity', params={'token': access_token})\n        user_identity['id'] = user_identity['user']['id']\n        if not user_identity.get('ok', False):\n            raise AuthFailed(self.name, user_identity.get('error', 'users.identity operation failed'))\n        return user_identity\n\n    def auth_allowed(self, response, details):\n        \"\"\"Return True if the user should be allowed to authenticate, by\n        default check if email is whitelisted (if there's a whitelist)\"\"\"\n        teams = self.setting('ALLOWED_TEAMS', [])\n        if not teams:\n            return True\n        elif 'team' in response and 'id' in response['team']:\n            return response['team']['id'] in teams\n        else:\n            return False\n```\n. ",
    "maxim1989": "I added this variables in settings.py, when I deleted them my site start working as I expect.\nWhy did it happen?\n\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details',\n)\n\nSOCIAL_AUTH_DISCONNECT_PIPELINE = (\n    # Verifies that the social association can be disconnected from the current\n    # user (ensure that the user login mechanism is not compromised by this\n    # disconnection).\n    'social.pipeline.disconnect.allowed_to_disconnect',\n\n```\n# Collects the social associations to disconnect.\n'social.pipeline.disconnect.get_entries',\n\n# Revoke any access_token when possible.\n'social.pipeline.disconnect.revoke_tokens',\n\n# Removes the social associations.\n'social.pipeline.disconnect.disconnect',\n```\n\n)\n. I added this variables in settings.py, when I deleted them my site start working as I expect.\nWhy did it happen?\n\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details',\n)\n\nSOCIAL_AUTH_DISCONNECT_PIPELINE = (\n    # Verifies that the social association can be disconnected from the current\n    # user (ensure that the user login mechanism is not compromised by this\n    # disconnection).\n    'social.pipeline.disconnect.allowed_to_disconnect',\n\n```\n# Collects the social associations to disconnect.\n'social.pipeline.disconnect.get_entries',\n\n# Revoke any access_token when possible.\n'social.pipeline.disconnect.revoke_tokens',\n\n# Removes the social associations.\n'social.pipeline.disconnect.disconnect',\n```\n\n)\n. ",
    "CareyJWilliams": "Same issue here, did you ever work out what it was @yeago ?\n. Same issue here, did you ever work out what it was @yeago ?\n. ",
    "yeago": "I just hacked the migration manually to change the name and ran it.\n\nOn Aug 3, 2016 9:46 AM, \"Carey Williams\" notifications@github.com wrote:\n\n> Same issue here, did you ever work out what it was @yeago\n> https://github.com/yeago ?\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/omab/python-social-auth/issues/962#issuecomment-237273138,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AAJVuphK3CJZmbe777u8pRt_Gu0A4t6vks5qcMMAgaJpZM4JUwzF\n> .\n. folks, in my august 3rd message I had indicated that a straightforward hack of the migration was all that was needed to proceed. I have since looked at the repository and the migrations directory has been replaced by a .py file. This is something of an experimental practice (at best). To anyone contending with this issue, I would say that you could #href=\"https://github.com/omab/python-social-auth/pull/980/files#diff-ea3ca5165c1c3aaac32d6d8299e3a9a9\">go back to this diff and rename \"default\" to \"social_auth\" and then upgrade (or whatever) and then fake all migrations from there to a present-like state.. ....requirements.txt....?. I just hacked the migration manually to change the name and ran it.\n\nOn Aug 3, 2016 9:46 AM, \"Carey Williams\" notifications@github.com wrote:\n\n> Same issue here, did you ever work out what it was @yeago\n> https://github.com/yeago ?\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/omab/python-social-auth/issues/962#issuecomment-237273138,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AAJVuphK3CJZmbe777u8pRt_Gu0A4t6vks5qcMMAgaJpZM4JUwzF\n> .\n. folks, in my august 3rd message I had indicated that a straightforward hack of the migration was all that was needed to proceed. I have since looked at the repository and the migrations directory has been replaced by a .py file. This is something of an experimental practice (at best). To anyone contending with this issue, I would say that you could #href=\"https://github.com/omab/python-social-auth/pull/980/files#diff-ea3ca5165c1c3aaac32d6d8299e3a9a9\">go back to this diff and rename \"default\" to \"social_auth\" and then upgrade (or whatever) and then fake all migrations from there to a present-like state.. ....requirements.txt....?. ",
    "divonelnc": "I now have the following error:\r\n`django.db.migrations.exceptions.NodeNotFoundError: Migration social_django.0005_auto_20160727_2333 dependencies reference nonexistent parent node ('social_django', '0004_auto_20160423_0400')`\r\n\r\nIn social_django instead of default. Any idea?. I now have the following error:\r\n`django.db.migrations.exceptions.NodeNotFoundError: Migration social_django.0005_auto_20160727_2333 dependencies reference nonexistent parent node ('social_django', '0004_auto_20160423_0400')`\r\n\r\nIn social_django instead of default. Any idea?. ",
    "lukeaus": "I am still getting this error using social-auth-app-django==0.1.0 and social-auth-core==0.2.1 . Error:\r\n ```django.db.migrations.exceptions.NodeNotFoundError: Migration social_django.0004_auto_20160423_0400.py dependencies reference nonexistent parent node (u'social_django', u'0003_alter_email_max_length\u2019)```\r\n\r\nQuite weird, cause that migration file ```0003_alter_email_max_length.py``` is in the migrations folder.. I am still getting this error using social-auth-app-django==0.1.0 and social-auth-core==0.2.1 . Error:\r\n ```django.db.migrations.exceptions.NodeNotFoundError: Migration social_django.0004_auto_20160423_0400.py dependencies reference nonexistent parent node (u'social_django', u'0003_alter_email_max_length\u2019)```\r\n\r\nQuite weird, cause that migration file ```0003_alter_email_max_length.py``` is in the migrations folder.. ",
    "sharov": "Same issue. Django==1.9.7, python-social-auth[django]==0.3.3\r\n\r\n. Same issue. Django==1.9.7, python-social-auth[django]==0.3.3\r\n\r\n. ",
    "orzel": "same issue here, using Django 1.8 or 1.9,  and social_auth_app_django-0.1.0.dist-info. same issue here, using Django 1.8 or 1.9,  and social_auth_app_django-0.1.0.dist-info. ",
    "LordBastor": "One more over here with the same problem - using Django 1.8, migration 0005 doesn't seem to locate it's previous dependancy despite it being in the file and correctly named. Really weird.. One more over here with the same problem - using Django 1.8, migration 0005 doesn't seem to locate it's previous dependancy despite it being in the file and correctly named. Really weird.. ",
    "asgaines": "Yes, someone more knowledgeable: please help! . Yes, someone more knowledgeable: please help! . ",
    "teeberg": "From what I understand, django adds to the `django_migrations` table when you apply a migration that replaces a previous one, even for the one that's replaced if it doesn't exist. So, assuming that you applied all previous migrations (which you did if you just upgraded from python-social-auth to the new social-auth-core), I think simply adding the missing migration rows manually like this is a clean fix:\r\n```sql\r\nINSERT INTO `django_migrations` (`app`, `name`, `applied`) VALUES (\"social_auth\", \"0001_initial\", NOW());\r\nINSERT INTO `django_migrations` (`app`, `name`, `applied`) VALUES (\"social_auth\", \"0003_alter_email_max_length\", NOW());\r\nINSERT INTO `django_migrations` (`app`, `name`, `applied`) VALUES (\"social_auth\", \"0004_auto_20160423_0400\", NOW());\r\nINSERT INTO `django_migrations` (`app`, `name`, `applied`) VALUES (\"social_auth\", \"0002_add_related_name\", NOW());\r\n```. @omab We were seeing this error:\r\n> Migration social_django.0005_auto_20160727_2333 dependencies reference nonexistent parent node (u'social_django', u'0004_auto_20160423_0400')\r\n\r\nThese migrations were applied to our database when that error was thrown:\r\n```\r\n|  10 | default                | 0001_initial                                           | 2015-04-30 17:09:37 |\r\n| 172 | default                | 0002_add_related_name                                  | 2016-07-15 21:03:38 |\r\n| 173 | default                | 0003_alter_email_max_length                            | 2016-07-15 22:52:54 |\r\n| 174 | default                | 0004_auto_20160423_0400                                | 2016-07-15 22:53:09 |\r\n| 203 | social_auth            | 0005_auto_20160727_2333                                | 2016-12-16 23:48:06 |\r\n| 238 | social_django          | 0006_partial                                           | 2017-02-21 15:43:41 |\r\n| 239 | social_django          | 0002_add_related_name                                  | 2017-02-21 17:23:38 |\r\n| 240 | social_django          | 0003_alter_email_max_length                            | 2017-02-21 17:23:38 |\r\n| 241 | social_django          | 0001_initial                                           | 2017-02-21 17:23:38 |\r\n| 242 | social_django          | 0004_auto_20160423_0400                                | 2017-02-21 17:23:38 |\r\n| 243 | social_django          | 0005_auto_20160727_2333                                | 2017-02-21 17:23:38 |\r\n```\r\nAdding these four to the table (without applying any changes) fixed it:\r\n```\r\n| 244 | social_auth            | 0001_initial                                           | 2017-02-21 22:34:01 |\r\n| 245 | social_auth            | 0003_alter_email_max_length                            | 2017-02-21 22:34:01 |\r\n| 246 | social_auth            | 0004_auto_20160423_0400                                | 2017-02-21 22:34:01 |\r\n| 247 | social_auth            | 0002_add_related_name                                  | 2017-02-21 22:34:06 |\r\n```. @dvdhpkns @omab added a section about migrations here: https://github.com/omab/python-social-auth/blob/master/MIGRATING_TO_SOCIAL.md#migrations\r\n\r\nIdeally, applying all migrations from python-social-auth would let you upgrade smoothly. If it doesn't, I think the best automated way forward is to make python-social-auth fix the migrations so that it does go smoothly :) Hopefully, the info about the migrations above can help @omab pinpoint the issue. As far as I understand, adding those rows to the migrations table only made it look like it should've looked in the first place. So I don't expect any trouble because of it in the future. But please share if you run into any problems!. *Theoretically*, you can have arbitrary python code in django migrations, so it should be doable to fix the migrations automatically by figuring out which ones are missing.. From what I understand, django adds to the `django_migrations` table when you apply a migration that replaces a previous one, even for the one that's replaced if it doesn't exist. So, assuming that you applied all previous migrations (which you did if you just upgraded from python-social-auth to the new social-auth-core), I think simply adding the missing migration rows manually like this is a clean fix:\r\n```sql\r\nINSERT INTO `django_migrations` (`app`, `name`, `applied`) VALUES (\"social_auth\", \"0001_initial\", NOW());\r\nINSERT INTO `django_migrations` (`app`, `name`, `applied`) VALUES (\"social_auth\", \"0003_alter_email_max_length\", NOW());\r\nINSERT INTO `django_migrations` (`app`, `name`, `applied`) VALUES (\"social_auth\", \"0004_auto_20160423_0400\", NOW());\r\nINSERT INTO `django_migrations` (`app`, `name`, `applied`) VALUES (\"social_auth\", \"0002_add_related_name\", NOW());\r\n```. @omab We were seeing this error:\r\n> Migration social_django.0005_auto_20160727_2333 dependencies reference nonexistent parent node (u'social_django', u'0004_auto_20160423_0400')\r\n\r\nThese migrations were applied to our database when that error was thrown:\r\n```\r\n|  10 | default                | 0001_initial                                           | 2015-04-30 17:09:37 |\r\n| 172 | default                | 0002_add_related_name                                  | 2016-07-15 21:03:38 |\r\n| 173 | default                | 0003_alter_email_max_length                            | 2016-07-15 22:52:54 |\r\n| 174 | default                | 0004_auto_20160423_0400                                | 2016-07-15 22:53:09 |\r\n| 203 | social_auth            | 0005_auto_20160727_2333                                | 2016-12-16 23:48:06 |\r\n| 238 | social_django          | 0006_partial                                           | 2017-02-21 15:43:41 |\r\n| 239 | social_django          | 0002_add_related_name                                  | 2017-02-21 17:23:38 |\r\n| 240 | social_django          | 0003_alter_email_max_length                            | 2017-02-21 17:23:38 |\r\n| 241 | social_django          | 0001_initial                                           | 2017-02-21 17:23:38 |\r\n| 242 | social_django          | 0004_auto_20160423_0400                                | 2017-02-21 17:23:38 |\r\n| 243 | social_django          | 0005_auto_20160727_2333                                | 2017-02-21 17:23:38 |\r\n```\r\nAdding these four to the table (without applying any changes) fixed it:\r\n```\r\n| 244 | social_auth            | 0001_initial                                           | 2017-02-21 22:34:01 |\r\n| 245 | social_auth            | 0003_alter_email_max_length                            | 2017-02-21 22:34:01 |\r\n| 246 | social_auth            | 0004_auto_20160423_0400                                | 2017-02-21 22:34:01 |\r\n| 247 | social_auth            | 0002_add_related_name                                  | 2017-02-21 22:34:06 |\r\n```. @dvdhpkns @omab added a section about migrations here: https://github.com/omab/python-social-auth/blob/master/MIGRATING_TO_SOCIAL.md#migrations\r\n\r\nIdeally, applying all migrations from python-social-auth would let you upgrade smoothly. If it doesn't, I think the best automated way forward is to make python-social-auth fix the migrations so that it does go smoothly :) Hopefully, the info about the migrations above can help @omab pinpoint the issue. As far as I understand, adding those rows to the migrations table only made it look like it should've looked in the first place. So I don't expect any trouble because of it in the future. But please share if you run into any problems!. *Theoretically*, you can have arbitrary python code in django migrations, so it should be doable to fix the migrations automatically by figuring out which ones are missing.. ",
    "megavenik": "Hi! Looks like, the same issue here\r\n\r\nI've done everything according to the instruction - https://github.com/omab/python-social-auth/blob/master/MIGRATING_TO_SOCIAL.md\r\n\r\nBut during the last step (`manage.py migrate` with updated code) i'm getting an error:\r\n\r\n`django.db.migrations.graph.NodeNotFoundError: Migration social_django.0004_auto_20170312_1222 dependencies reference nonexistent parent node (u'social_django', u'0003_alter_email_max_length')`\r\n\r\nBut as I can see, all migration files are at their proper places:\r\n\r\n```\r\nls -lah /var/venv/python27/local/lib/python2.7/site-packages/social_django/migrations\r\ntotal 68K\r\ndrwxr-xr-x 2 root root 4.0K Mar 12 17:39 .\r\ndrwxr-xr-x 3 root root 4.0K Mar 12 17:36 ..\r\n-rw-r--r-- 1 root root 4.3K Mar 12 17:36 0001_initial.py\r\n-rw-r--r-- 1 root root 3.4K Mar 12 17:36 0001_initial.pyc\r\n-rw-r--r-- 1 root root  783 Mar 12 17:36 0002_add_related_name.py\r\n-rw-r--r-- 1 root root 1.3K Mar 12 17:36 0002_add_related_name.pyc\r\n-rw-r--r-- 1 root root  690 Mar 12 17:36 0003_alter_email_max_length.py\r\n-rw-r--r-- 1 root root 1.3K Mar 12 17:36 0003_alter_email_max_length.pyc\r\n-rw-r--r-- 1 root root  567 Mar 12 17:36 0004_auto_20160423_0400.py\r\n-rw-r--r-- 1 root root 1.1K Mar 12 17:36 0004_auto_20160423_0400.pyc\r\n-rw-r--r-- 1 root root 1.3K Mar 12 17:22 0004_auto_20170312_1222.py\r\n-rw-r--r-- 1 root root  513 Mar 12 17:36 0005_auto_20160727_2333.py\r\n-rw-r--r-- 1 root root  989 Mar 12 17:36 0005_auto_20160727_2333.pyc\r\n-rw-r--r-- 1 root root 1.1K Mar 12 17:36 0006_partial.py\r\n-rw-r--r-- 1 root root 1.5K Mar 12 17:36 0006_partial.pyc\r\n-rw-r--r-- 1 root root    0 Mar 12 17:36 __init__.py\r\n-rw-r--r-- 1 root root  168 Mar 12 17:36 __init__.pyc\r\n```\r\n\r\nAfter some `strace`'ing I've discovered, that `manage.py migrate` is looking for migration files in absolutely different place for some reason:\r\n\r\n```\r\n11211 stat64(\"/var/venv/python27/local/lib/python2.7/site-packages/django/contrib/auth/migrations/0003_alter_user_email_max_length\", 0xbedb3448) = -1 ENOENT (No such file or directory)\r\n11211 open(\"/var/venv/python27/local/lib/python2.7/site-packages/django/contrib/auth/migrations/0003_alter_user_email_max_length.arm-linux-gnueabihf.so\", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)\r\n11211 open(\"/var/venv/python27/local/lib/python2.7/site-packages/django/contrib/auth/migrations/0003_alter_user_email_max_length.so\", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)\r\n11211 open(\"/var/venv/python27/local/lib/python2.7/site-packages/django/contrib/auth/migrations/0003_alter_user_email_max_lengthmodule.so\", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)\r\n```\r\n\r\nMaybe, you can help me understand, why does it behaves in such way?\r\n\r\nThanks!. Used @teeberg's advice about manual inserts to db and it seems fixed the current process, but I'm afraid of possible further issues, that could appear when module development will move forward. Is it possible, how do you think?. Hi! Looks like, the same issue here\r\n\r\nI've done everything according to the instruction - https://github.com/omab/python-social-auth/blob/master/MIGRATING_TO_SOCIAL.md\r\n\r\nBut during the last step (`manage.py migrate` with updated code) i'm getting an error:\r\n\r\n`django.db.migrations.graph.NodeNotFoundError: Migration social_django.0004_auto_20170312_1222 dependencies reference nonexistent parent node (u'social_django', u'0003_alter_email_max_length')`\r\n\r\nBut as I can see, all migration files are at their proper places:\r\n\r\n```\r\nls -lah /var/venv/python27/local/lib/python2.7/site-packages/social_django/migrations\r\ntotal 68K\r\ndrwxr-xr-x 2 root root 4.0K Mar 12 17:39 .\r\ndrwxr-xr-x 3 root root 4.0K Mar 12 17:36 ..\r\n-rw-r--r-- 1 root root 4.3K Mar 12 17:36 0001_initial.py\r\n-rw-r--r-- 1 root root 3.4K Mar 12 17:36 0001_initial.pyc\r\n-rw-r--r-- 1 root root  783 Mar 12 17:36 0002_add_related_name.py\r\n-rw-r--r-- 1 root root 1.3K Mar 12 17:36 0002_add_related_name.pyc\r\n-rw-r--r-- 1 root root  690 Mar 12 17:36 0003_alter_email_max_length.py\r\n-rw-r--r-- 1 root root 1.3K Mar 12 17:36 0003_alter_email_max_length.pyc\r\n-rw-r--r-- 1 root root  567 Mar 12 17:36 0004_auto_20160423_0400.py\r\n-rw-r--r-- 1 root root 1.1K Mar 12 17:36 0004_auto_20160423_0400.pyc\r\n-rw-r--r-- 1 root root 1.3K Mar 12 17:22 0004_auto_20170312_1222.py\r\n-rw-r--r-- 1 root root  513 Mar 12 17:36 0005_auto_20160727_2333.py\r\n-rw-r--r-- 1 root root  989 Mar 12 17:36 0005_auto_20160727_2333.pyc\r\n-rw-r--r-- 1 root root 1.1K Mar 12 17:36 0006_partial.py\r\n-rw-r--r-- 1 root root 1.5K Mar 12 17:36 0006_partial.pyc\r\n-rw-r--r-- 1 root root    0 Mar 12 17:36 __init__.py\r\n-rw-r--r-- 1 root root  168 Mar 12 17:36 __init__.pyc\r\n```\r\n\r\nAfter some `strace`'ing I've discovered, that `manage.py migrate` is looking for migration files in absolutely different place for some reason:\r\n\r\n```\r\n11211 stat64(\"/var/venv/python27/local/lib/python2.7/site-packages/django/contrib/auth/migrations/0003_alter_user_email_max_length\", 0xbedb3448) = -1 ENOENT (No such file or directory)\r\n11211 open(\"/var/venv/python27/local/lib/python2.7/site-packages/django/contrib/auth/migrations/0003_alter_user_email_max_length.arm-linux-gnueabihf.so\", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)\r\n11211 open(\"/var/venv/python27/local/lib/python2.7/site-packages/django/contrib/auth/migrations/0003_alter_user_email_max_length.so\", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)\r\n11211 open(\"/var/venv/python27/local/lib/python2.7/site-packages/django/contrib/auth/migrations/0003_alter_user_email_max_lengthmodule.so\", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)\r\n```\r\n\r\nMaybe, you can help me understand, why does it behaves in such way?\r\n\r\nThanks!. Used @teeberg's advice about manual inserts to db and it seems fixed the current process, but I'm afraid of possible further issues, that could appear when module development will move forward. Is it possible, how do you think?. ",
    "cgthayer": "Following migration instructions and hitting same issue.  Also had to manually insert the migrations (for sqlite use DATETIME() instead of NOW()).  Seems to work now, but not feeling any confidence in this.\r\n\r\nMigration social_django.0005_auto_20160727_2333 dependencies reference nonexistent parent node (u'social_django', u'0004_auto_20160423_0400\r\n\r\nAt this point I have only (there are only 112 users total, and only a few are using social auth):\r\nsqlite> select count(*) from social_auth_association;\r\n0\r\nsqlite> select count(*) from social_auth_code;\r\n0\r\nsqlite> select count(*) from social_auth_nonce;\r\n0\r\nsqlite> select count(*) from social_auth_partial;\r\n0\r\nsqlite> select count(*) from social_auth_usersocialauth;\r\n12\r\nsqlite> .schema social_auth_usersocialauth\r\nCREATE TABLE \"social_auth_usersocialauth\" (\"id\" integer NOT NULL PRIMARY KEY AUTOINCREMENT, \"provider\" varchar(32) NOT NULL, \"uid\" varchar(255) NOT NULL, \"user_id\" integer NOT NULL REFERENCES \"auth_user\" (\"id\"), \"extra_data\" text NOT NULL);\r\nCREATE UNIQUE INDEX \"social_auth_usersocialauth_provider_e6b5e668_uniq\" ON \"social_auth_usersocialauth\" (\"provider\", \"uid\");\r\nCREATE INDEX \"social_auth_usersocialauth_e8701ad4\" ON \"social_auth_usersocialauth\" (\"user_id\");\r\n. @yeago thanks, but in my case it was referencing 'social_django' not 'default' nor 'social_auth' (see error msg above).  I inserted the \"social_auth\" migrations manually, but now I see I have newer 'social_django' entries as well (woops).  It may be that my first packaging included \"social-auth-app-django\" then I realized I needed \"python-social-auth[django]\" as well.  Since I don't have much experience with migrations, I've probably completely messed this up, though it seems to be working at the moment.\r\n\r\nI imagine that we could put python code in the migration to detect if there were 'social_auth' or 'default' migrations that looked like a match, then use that dependency auto-magically, no? \r\n\r\n```\r\nsqlite> select * from django_migrations where app like '%social%' or app like '%auth%';\r\nINSERT INTO table VALUES(2,'auth','0001_initial','2016-08-11 05:05:10.783228');\r\nINSERT INTO table VALUES(28,'auth','0002_alter_permission_name_max_length','2016-08-11 05:05:13.715921');\r\nINSERT INTO table VALUES(29,'auth','0003_alter_user_email_max_length','2016-08-11 05:05:13.763263');\r\nINSERT INTO table VALUES(30,'auth','0004_alter_user_username_opts','2016-08-11 05:05:13.813902');\r\nINSERT INTO table VALUES(31,'auth','0005_alter_user_last_login_null','2016-08-11 05:05:13.855558');\r\nINSERT INTO table VALUES(32,'auth','0006_require_contenttypes_0002','2016-08-11 05:05:13.866386');\r\nINSERT INTO table VALUES(33,'auth','0007_alter_validators_add_error_messages','2016-08-11 05:05:13.918604');\r\nINSERT INTO table VALUES(59,'social_auth','0001_initial','2017-03-28 04:33:39');\r\nINSERT INTO table VALUES(60,'social_auth','0002_add_related_name','2017-03-28 04:33:50');\r\nINSERT INTO table VALUES(61,'social_auth','0003_alter_email_max_length','2017-03-28 04:33:56');\r\nINSERT INTO table VALUES(62,'social_auth','0004_auto_20160423_0400','2017-03-28 04:34:03');\r\nINSERT INTO table VALUES(68,'social_auth','0005_auto_20160727_2333','2017-03-28 04:37:01.988028');\r\nINSERT INTO table VALUES(69,'social_django','0006_partial','2017-03-28 04:37:02.022577');\r\nINSERT INTO table VALUES(74,'social_django','0002_add_related_name','2017-03-28 04:37:02.481073');\r\nINSERT INTO table VALUES(75,'social_django','0003_alter_email_max_length','2017-03-28 04:37:02.487837');\r\nINSERT INTO table VALUES(76,'social_django','0001_initial','2017-03-28 04:37:02.494446');\r\nINSERT INTO table VALUES(77,'social_django','0004_auto_20160423_0400','2017-03-28 04:37:02.500878');\r\nINSERT INTO table VALUES(78,'social_django','0005_auto_20160727_2333','2017-03-28 04:37:02.508305');\r\n```. Following migration instructions and hitting same issue.  Also had to manually insert the migrations (for sqlite use DATETIME() instead of NOW()).  Seems to work now, but not feeling any confidence in this.\r\n\r\nMigration social_django.0005_auto_20160727_2333 dependencies reference nonexistent parent node (u'social_django', u'0004_auto_20160423_0400\r\n\r\nAt this point I have only (there are only 112 users total, and only a few are using social auth):\r\nsqlite> select count(*) from social_auth_association;\r\n0\r\nsqlite> select count(*) from social_auth_code;\r\n0\r\nsqlite> select count(*) from social_auth_nonce;\r\n0\r\nsqlite> select count(*) from social_auth_partial;\r\n0\r\nsqlite> select count(*) from social_auth_usersocialauth;\r\n12\r\nsqlite> .schema social_auth_usersocialauth\r\nCREATE TABLE \"social_auth_usersocialauth\" (\"id\" integer NOT NULL PRIMARY KEY AUTOINCREMENT, \"provider\" varchar(32) NOT NULL, \"uid\" varchar(255) NOT NULL, \"user_id\" integer NOT NULL REFERENCES \"auth_user\" (\"id\"), \"extra_data\" text NOT NULL);\r\nCREATE UNIQUE INDEX \"social_auth_usersocialauth_provider_e6b5e668_uniq\" ON \"social_auth_usersocialauth\" (\"provider\", \"uid\");\r\nCREATE INDEX \"social_auth_usersocialauth_e8701ad4\" ON \"social_auth_usersocialauth\" (\"user_id\");\r\n. @yeago thanks, but in my case it was referencing 'social_django' not 'default' nor 'social_auth' (see error msg above).  I inserted the \"social_auth\" migrations manually, but now I see I have newer 'social_django' entries as well (woops).  It may be that my first packaging included \"social-auth-app-django\" then I realized I needed \"python-social-auth[django]\" as well.  Since I don't have much experience with migrations, I've probably completely messed this up, though it seems to be working at the moment.\r\n\r\nI imagine that we could put python code in the migration to detect if there were 'social_auth' or 'default' migrations that looked like a match, then use that dependency auto-magically, no? \r\n\r\n```\r\nsqlite> select * from django_migrations where app like '%social%' or app like '%auth%';\r\nINSERT INTO table VALUES(2,'auth','0001_initial','2016-08-11 05:05:10.783228');\r\nINSERT INTO table VALUES(28,'auth','0002_alter_permission_name_max_length','2016-08-11 05:05:13.715921');\r\nINSERT INTO table VALUES(29,'auth','0003_alter_user_email_max_length','2016-08-11 05:05:13.763263');\r\nINSERT INTO table VALUES(30,'auth','0004_alter_user_username_opts','2016-08-11 05:05:13.813902');\r\nINSERT INTO table VALUES(31,'auth','0005_alter_user_last_login_null','2016-08-11 05:05:13.855558');\r\nINSERT INTO table VALUES(32,'auth','0006_require_contenttypes_0002','2016-08-11 05:05:13.866386');\r\nINSERT INTO table VALUES(33,'auth','0007_alter_validators_add_error_messages','2016-08-11 05:05:13.918604');\r\nINSERT INTO table VALUES(59,'social_auth','0001_initial','2017-03-28 04:33:39');\r\nINSERT INTO table VALUES(60,'social_auth','0002_add_related_name','2017-03-28 04:33:50');\r\nINSERT INTO table VALUES(61,'social_auth','0003_alter_email_max_length','2017-03-28 04:33:56');\r\nINSERT INTO table VALUES(62,'social_auth','0004_auto_20160423_0400','2017-03-28 04:34:03');\r\nINSERT INTO table VALUES(68,'social_auth','0005_auto_20160727_2333','2017-03-28 04:37:01.988028');\r\nINSERT INTO table VALUES(69,'social_django','0006_partial','2017-03-28 04:37:02.022577');\r\nINSERT INTO table VALUES(74,'social_django','0002_add_related_name','2017-03-28 04:37:02.481073');\r\nINSERT INTO table VALUES(75,'social_django','0003_alter_email_max_length','2017-03-28 04:37:02.487837');\r\nINSERT INTO table VALUES(76,'social_django','0001_initial','2017-03-28 04:37:02.494446');\r\nINSERT INTO table VALUES(77,'social_django','0004_auto_20160423_0400','2017-03-28 04:37:02.500878');\r\nINSERT INTO table VALUES(78,'social_django','0005_auto_20160727_2333','2017-03-28 04:37:02.508305');\r\n```. ",
    "Ivorforce": "After teeberg's solution didn't work, I did what https://github.com/omab/python-social-auth/commit/81c0a542d158772bd3486d31834c10af5d5f08b0 suggested:\r\n\r\n1) Update social django on old machine\r\n2) Run migrations\r\n3) Re-import SQL database in new machine\r\n4) Run migrations\r\n\r\nThat fixed it for me.. After teeberg's solution didn't work, I did what https://github.com/omab/python-social-auth/commit/81c0a542d158772bd3486d31834c10af5d5f08b0 suggested:\r\n\r\n1) Update social django on old machine\r\n2) Run migrations\r\n3) Re-import SQL database in new machine\r\n4) Run migrations\r\n\r\nThat fixed it for me.. ",
    "cloudrave": "The following monkey patch should fix the issue in the short term:\n\n```\n# Monkey patch for Python Social Auth as per\n# https://docs.djangoproject.com/en/1.9/ref/models/meta/#migrating-from-the-old-api\ndef get_all_field_names():\n    from itertools import chain\n    return list(set(chain.from_iterable(\n        (field.name, field.attname) if hasattr(field, 'attname') else (field.name,)\n        for field in User._meta.get_fields()\n        # For complete backwards compatibility, you may want to exclude\n        # GenericForeignKey from the results.\n        if not (field.many_to_one and field.related_model is None)\n    )))\n\nUser._meta.get_all_field_names = get_all_field_names\n```\n. The following monkey patch should fix the issue in the short term:\n\n```\n# Monkey patch for Python Social Auth as per\n# https://docs.djangoproject.com/en/1.9/ref/models/meta/#migrating-from-the-old-api\ndef get_all_field_names():\n    from itertools import chain\n    return list(set(chain.from_iterable(\n        (field.name, field.attname) if hasattr(field, 'attname') else (field.name,)\n        for field in User._meta.get_fields()\n        # For complete backwards compatibility, you may want to exclude\n        # GenericForeignKey from the results.\n        if not (field.many_to_one and field.related_model is None)\n    )))\n\nUser._meta.get_all_field_names = get_all_field_names\n```\n. ",
    "dogukankotan": "instead of using all_names = _User._meta.get_all_field_names() use all_names = [f.name for f in _User._meta.get_fields()]\n. Ha, I see the updates on admin.py. Please update pip for other Django 1.10.x users\n. instead of using all_names = _User._meta.get_all_field_names() use all_names = [f.name for f in _User._meta.get_fields()]\n. Ha, I see the updates on admin.py. Please update pip for other Django 1.10.x users\n. ",
    "rigaspapas": "Thanks! I was expecting to find that information at the **Pipeline** page of the documentation. Another problem worth mentioning when having a custom user system in Django, is that when you disable the `AuthenticationMiddleware`, `request.user` is not defined, leading to an error. Is there a workarround with that? \n. Thanks! I was expecting to find that information at the **Pipeline** page of the documentation. Another problem worth mentioning when having a custom user system in Django, is that when you disable the `AuthenticationMiddleware`, `request.user` is not defined, leading to an error. Is there a workarround with that? \n. ",
    "siddharthsahu": "I have recently upgraded from v0.1.17 to v0.2.4, and my code is breaking when it tried to access session as follows:\n\n```\nrequest = kwargs.get('request')\ndo_something(session_key=request.session.session_key)\n\n```\n\nError: 'QueryDict' object has no attribute 'session'\nAs per your conversation, since this `request` is not django request, hence I am getting above error, but this code was working fine before upgrade. Any idea, why is this so?\n. I have recently upgraded from v0.1.17 to v0.2.4, and my code is breaking when it tried to access session as follows:\n\n```\nrequest = kwargs.get('request')\ndo_something(session_key=request.session.session_key)\n\n```\n\nError: 'QueryDict' object has no attribute 'session'\nAs per your conversation, since this `request` is not django request, hence I am getting above error, but this code was working fine before upgrade. Any idea, why is this so?\n. ",
    "Tatsh": "Thank you. I was so confused and spent at least an hour debugging what was going on. We really need the documentation updated for this.\n. Thank you. I was so confused and spent at least an hour debugging what was going on. We really need the documentation updated for this.\n. ",
    "reeteshranjan": "I have been facing this issue for quite some time and finally it seems I messed up my database. I have written a blog post https://technfoblog.wordpress.com/2016/11/30/python-social-auth-nonetype-object-has-no-attribute-provider-issue-solution/ where you can see the technical details and see if what I found solves your issue too.. In my case the `uid` returned by `get_user_id` was all fine, and for all these backends I used - `linkedin`, `bitbucket`, `github`, `facebook`, `twitter` and `googleplus`.\r\n\r\nIn `pipeline/social_auth.py` here is the function that uses `get_user_id`:\r\n```\r\ndef social_uid(backend, details, response, *args, **kwargs):\r\n    return {'uid': backend.get_user_id(details, response)}\r\n```\r\nAs you'll see the next pipeline function that actually uses the `uid` is `associate_user` (in the same file). In my case, the sequence `social_auth_usersocialauth_id_seq` was messed up because of incorrect database dumping and reloading where I missed out setting the right value of this sequence when I ignored the corresponding SQL statement. In case you are getting this after a database dump and reload with errors like in my case, you'll find a solution in the blog link above.\r\n\r\nHere is a quick help on debugging this including @gabejackson comments.\r\n\r\n- Add logs in `social_uid` to see what `uid` is being returned.\r\n- If it is `None` then you can follow @gabejackson remarks\r\n- If it is not `None` then add statements to print the stack trace here\r\n\r\n```\r\ndef associate_user(backend, uid, user=None, social=None, *args, **kwargs):\r\n    if user and not social:\r\n        try:\r\n            social = backend.strategy.storage.user.create_social_auth(\r\n                user, uid, backend.name\r\n            )\r\n        except Exception as err:\r\n            # Added trace here - Reetesh\r\n            traceback.print_exc()\r\n            if not backend.strategy.storage.is_integrity_error(err):\r\n                raise\r\n            # Protect for possible race condition, those bastard with FTL\r\n            # clicking capabilities, check issue #131:\r\n            #   https://github.com/omab/django-social-auth/issues/131\r\n            # Added trace here - Reetesh\r\n            traceback.print_exc()\r\n            return social_user(backend, uid, user, *args, **kwargs)\r\n        else:\r\n            return {'social': social,\r\n                    'user': social.user,\r\n                    'new_association': True}\r\n```\r\n**NOTE**: You'd need to add `import traceback` for the above to work.\r\n\r\nIn my case, where the `uid` was fine, I hit the integrity error and the 2nd `traceback.print_exc()` was executed (as you can see any integrity errors are not raised again). If you get the same issue, then you can follow the blog link in my above comment to see the problem and solution.. I have been facing this issue for quite some time and finally it seems I messed up my database. I have written a blog post https://technfoblog.wordpress.com/2016/11/30/python-social-auth-nonetype-object-has-no-attribute-provider-issue-solution/ where you can see the technical details and see if what I found solves your issue too.. In my case the `uid` returned by `get_user_id` was all fine, and for all these backends I used - `linkedin`, `bitbucket`, `github`, `facebook`, `twitter` and `googleplus`.\r\n\r\nIn `pipeline/social_auth.py` here is the function that uses `get_user_id`:\r\n```\r\ndef social_uid(backend, details, response, *args, **kwargs):\r\n    return {'uid': backend.get_user_id(details, response)}\r\n```\r\nAs you'll see the next pipeline function that actually uses the `uid` is `associate_user` (in the same file). In my case, the sequence `social_auth_usersocialauth_id_seq` was messed up because of incorrect database dumping and reloading where I missed out setting the right value of this sequence when I ignored the corresponding SQL statement. In case you are getting this after a database dump and reload with errors like in my case, you'll find a solution in the blog link above.\r\n\r\nHere is a quick help on debugging this including @gabejackson comments.\r\n\r\n- Add logs in `social_uid` to see what `uid` is being returned.\r\n- If it is `None` then you can follow @gabejackson remarks\r\n- If it is not `None` then add statements to print the stack trace here\r\n\r\n```\r\ndef associate_user(backend, uid, user=None, social=None, *args, **kwargs):\r\n    if user and not social:\r\n        try:\r\n            social = backend.strategy.storage.user.create_social_auth(\r\n                user, uid, backend.name\r\n            )\r\n        except Exception as err:\r\n            # Added trace here - Reetesh\r\n            traceback.print_exc()\r\n            if not backend.strategy.storage.is_integrity_error(err):\r\n                raise\r\n            # Protect for possible race condition, those bastard with FTL\r\n            # clicking capabilities, check issue #131:\r\n            #   https://github.com/omab/django-social-auth/issues/131\r\n            # Added trace here - Reetesh\r\n            traceback.print_exc()\r\n            return social_user(backend, uid, user, *args, **kwargs)\r\n        else:\r\n            return {'social': social,\r\n                    'user': social.user,\r\n                    'new_association': True}\r\n```\r\n**NOTE**: You'd need to add `import traceback` for the above to work.\r\n\r\nIn my case, where the `uid` was fine, I hit the integrity error and the 2nd `traceback.print_exc()` was executed (as you can see any integrity errors are not raised again). If you get the same issue, then you can follow the blog link in my above comment to see the problem and solution.. ",
    "tom-dalton-fanduel": "I wonder if the try/catch:\n\n``` python\ntry:\n    from django.db.models import SubfieldBase\n    field_class = functools.partial(six.with_metaclass, SubfieldBase)\nexcept ImportError:\n    field_class = functools.partial(six.with_metaclass, type)\n```\n\ncould be replaced with a version check along the lines of:\n\n``` python\n# SubfieldBase causes RemovedInDjango110Warning in 1.8 and 1.9, and will not work in 1.10 or later\nimport django\nif django.VERSION[:2] >= (1, 8):\n    field_class = functools.partial(six.with_metaclass, type)\nelse:\n    from django.db.models import SubfieldBase\n    field_class = functools.partial(six.with_metaclass, SubfieldBase)\n```\n. Created a PR with the proposed fix from above: #1008\n. Works for me on Django 1.9.9\n. Hi @omab, what do you think of this PR? It seems I'm not the only one affected by this. See #997 for the details but the TL;DR is that this was fixed by #813, but then subsequently broken again by 03ae001.\n. I wonder if the try/catch:\n\n``` python\ntry:\n    from django.db.models import SubfieldBase\n    field_class = functools.partial(six.with_metaclass, SubfieldBase)\nexcept ImportError:\n    field_class = functools.partial(six.with_metaclass, type)\n```\n\ncould be replaced with a version check along the lines of:\n\n``` python\n# SubfieldBase causes RemovedInDjango110Warning in 1.8 and 1.9, and will not work in 1.10 or later\nimport django\nif django.VERSION[:2] >= (1, 8):\n    field_class = functools.partial(six.with_metaclass, type)\nelse:\n    from django.db.models import SubfieldBase\n    field_class = functools.partial(six.with_metaclass, SubfieldBase)\n```\n. Created a PR with the proposed fix from above: #1008\n. Works for me on Django 1.9.9\n. Hi @omab, what do you think of this PR? It seems I'm not the only one affected by this. See #997 for the details but the TL;DR is that this was fixed by #813, but then subsequently broken again by 03ae001.\n. ",
    "ThibautNicodeme": "Having the same issue. It doesn't seem to be blocking anything, but it'd be nice if it could be fixed. [Especially since it apparently was back in October last year?](https://github.com/omab/python-social-auth/issues/755)\n. Having the same issue. It doesn't seem to be blocking anything, but it'd be nice if it could be fixed. [Especially since it apparently was back in October last year?](https://github.com/omab/python-social-auth/issues/755)\n. ",
    "tremby": "Would I then need to reimplement some of the other related functionality python-social-auth provides, or would I be able to hook back into it somehow? For example to complete the validation.. Well that's what I was hoping to repurpose, just without the delay and setting the flag. Doesn't matter -- the project I used this for is over now, but next time I use this module I'll have another shot.. Would I then need to reimplement some of the other related functionality python-social-auth provides, or would I be able to hook back into it somehow? For example to complete the validation.. Well that's what I was hoping to repurpose, just without the delay and setting the flag. Doesn't matter -- the project I used this for is over now, but next time I use this module I'll have another shot.. ",
    "itbabu": "I've the same error:\nHere my traceback\n\n``` python\nTraceback (most recent call last):\n  File \"manage.py\", line 23, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/opt/web/env/FOO/lib/python3.5/site-packages/django/core/management/__init__.py\", line 353, in execute_from_command_line\n    utility.execute()\n  File \"/opt/web/env/FOO/lib/python3.5/site-packages/django/core/management/__init__.py\", line 345, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/opt/web/env/FOO/lib/python3.5/site-packages/django/core/management/base.py\", line 348, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"/opt/web/env/FOO/lib/python3.5/site-packages/django/core/management/base.py\", line 399, in execute\n    output = self.handle(*args, **options)\n  File \"/opt/web/env/FOO/lib/python3.5/site-packages/django/core/management/commands/migrate.py\", line 186, in handle\n    changes = autodetector.changes(graph=executor.loader.graph)\n  File \"/opt/web/env/FOO/lib/python3.5/site-packages/django/db/migrations/autodetector.py\", line 46, in changes\n    changes = self._detect_changes(convert_apps, graph)\n  File \"/opt/web/env/FOO/lib/python3.5/site-packages/django/db/migrations/autodetector.py\", line 131, in _detect_changes\n    self.old_apps = self.from_state.concrete_apps\n  File \"/opt/web/env/FOO/lib/python3.5/site-packages/django/db/migrations/state.py\", line 166, in concrete_apps\n    self.apps = StateApps(self.real_apps, self.models, ignore_swappable=True)\n  File \"/opt/web/env/FOO/lib/python3.5/site-packages/django/db/migrations/state.py\", line 235, in __init__\n    raise ValueError(self._pending_models_error(pending_models))\nValueError: Unhandled pending operations for models:\n  default.usersocialauth (referred to by fields: profiles.FacebookProfile.user_social_auth, profiles.GoogleProfile.user_social_auth)\n\n```\n. I've the same error:\nHere my traceback\n\n``` python\nTraceback (most recent call last):\n  File \"manage.py\", line 23, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/opt/web/env/FOO/lib/python3.5/site-packages/django/core/management/__init__.py\", line 353, in execute_from_command_line\n    utility.execute()\n  File \"/opt/web/env/FOO/lib/python3.5/site-packages/django/core/management/__init__.py\", line 345, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/opt/web/env/FOO/lib/python3.5/site-packages/django/core/management/base.py\", line 348, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"/opt/web/env/FOO/lib/python3.5/site-packages/django/core/management/base.py\", line 399, in execute\n    output = self.handle(*args, **options)\n  File \"/opt/web/env/FOO/lib/python3.5/site-packages/django/core/management/commands/migrate.py\", line 186, in handle\n    changes = autodetector.changes(graph=executor.loader.graph)\n  File \"/opt/web/env/FOO/lib/python3.5/site-packages/django/db/migrations/autodetector.py\", line 46, in changes\n    changes = self._detect_changes(convert_apps, graph)\n  File \"/opt/web/env/FOO/lib/python3.5/site-packages/django/db/migrations/autodetector.py\", line 131, in _detect_changes\n    self.old_apps = self.from_state.concrete_apps\n  File \"/opt/web/env/FOO/lib/python3.5/site-packages/django/db/migrations/state.py\", line 166, in concrete_apps\n    self.apps = StateApps(self.real_apps, self.models, ignore_swappable=True)\n  File \"/opt/web/env/FOO/lib/python3.5/site-packages/django/db/migrations/state.py\", line 235, in __init__\n    raise ValueError(self._pending_models_error(pending_models))\nValueError: Unhandled pending operations for models:\n  default.usersocialauth (referred to by fields: profiles.FacebookProfile.user_social_auth, profiles.GoogleProfile.user_social_auth)\n\n```\n. ",
    "tsouvarev": "Hello @omab do you need anything else to merge this request?\n. thanks, looking forward to that\n. Hello @omab do you need anything else to merge this request?\n. thanks, looking forward to that\n. ",
    "geekscrapy": "It looks like it's not getting/creating a user upon return from Facebook.\n\nIf I change:\n\nLOGIN_URL = 'account:login'\nto\nLOGIN_URL = '/account/login/'\n\nIt doesn't error, but sends me to the login page.\n. FYI, i'm also using the ?next param to send the user back to the same page at which they are authing\n. It looks like it's not getting/creating a user upon return from Facebook.\n\nIf I change:\n\nLOGIN_URL = 'account:login'\nto\nLOGIN_URL = '/account/login/'\n\nIt doesn't error, but sends me to the login page.\n. FYI, i'm also using the ?next param to send the user back to the same page at which they are authing\n. ",
    "glensc": "in what category this bug should be resubmitted? core?\r\n\r\nhttps://github.com/python-social-auth/social-core. in what category this bug should be resubmitted? core?\r\n\r\nhttps://github.com/python-social-auth/social-core. ",
    "keattang": "Thanks!. @omab Is there a possibility of this being merged in? It's very simple and has been very useful in my project\n. Thanks!. @omab Is there a possibility of this being merged in? It's very simple and has been very useful in my project\n. ",
    "sobolevn": "@omab any feedback please? The change is really simple.\n. @omab any feedback please? The change is really simple.\n. ",
    "hockeybuggy": "This looks fine to me (as an untrained observer). @sobolevn Maybe people would respond better to this PR if there was a description explaining why you want to switch the badges to svg?. This looks fine to me (as an untrained observer). @sobolevn Maybe people would respond better to this PR if there was a description explaining why you want to switch the badges to svg?. ",
    "tdruez": "@jschneier thanks for the fix :)\n\n@omab would you mind to issue a new release including this? Thanks!\n. @omab sorry to insist, but is there anything blocking a Django 1.10 compatible package?\n. Alright, good luck with the migration!\n. @jschneier thanks for the fix :)\n\n@omab would you mind to issue a new release including this? Thanks!\n. @omab sorry to insist, but is there anything blocking a Django 1.10 compatible package?\n. Alright, good luck with the migration!\n. ",
    "danni": "If you don't want to run the Git version, here's a workaround until this is released.\r\n\r\n```python\r\nfrom django.utils.deprecation import MiddlewareMixin\r\n\r\nimport social.apps.django_app.middleware\r\n\r\n\r\nclass SocialAuthExceptionMiddleware(\r\n        social.apps.django_app.middleware.SocialAuthExceptionMiddleware,\r\n        MiddlewareMixin):\r\n    \"\"\"Work around Django 1.10 middleware incompatibility.\"\"\"\r\n\r\n    pass\r\n```. If you don't want to run the Git version, here's a workaround until this is released.\r\n\r\n```python\r\nfrom django.utils.deprecation import MiddlewareMixin\r\n\r\nimport social.apps.django_app.middleware\r\n\r\n\r\nclass SocialAuthExceptionMiddleware(\r\n        social.apps.django_app.middleware.SocialAuthExceptionMiddleware,\r\n        MiddlewareMixin):\r\n    \"\"\"Work around Django 1.10 middleware incompatibility.\"\"\"\r\n\r\n    pass\r\n```. ",
    "viaro-adolfo": "Hi All I have the same issue!\n. Hi All I have the same issue!\n. ",
    "avigmati": "sorry! my mistake)\n. sorry! my mistake)\n. ",
    "santhoshraju18": "Okay thanks for helping with the workaround @omab. But the real problem for us is to pass instance id as an argument to the get_key_and_secret() method so as to obtain the auth_key and auth_secret from a different model. \n. Thanks @omab it really works using both steps 2 and 3 combined together. Closing this now.\n. Okay thanks for helping with the workaround @omab. But the real problem for us is to pass instance id as an argument to the get_key_and_secret() method so as to obtain the auth_key and auth_secret from a different model. \n. Thanks @omab it really works using both steps 2 and 3 combined together. Closing this now.\n. ",
    "smsaladi": "related to #1032 ?\n. related to #1032 ?\n. ",
    "tremblerz": "Oh ! I see, Thanks :+1: \n. Oh ! I see, Thanks :+1: \n. ",
    "iamkhush": "@omab  Am I missing anything in the pull request ? . @omab  Am I missing anything in the pull request ? . ",
    "meatbot": "@alexpantyukhin, I tried to use it. But i have a problem.\n\nI add `syncdb` command to my `manage.py`:\n\n```\nfrom app.models import *\nfrom flask_migrate import Migrate, MigrateCommand\nfrom flask_script import Manager\n\nmigrate = Migrate(app, db)\n\nmanager = Manager(app)\nmanager.add_command('db', MigrateCommand)\n\n@manager.command\ndef syncdb():\n    from social.apps.flask_app.default import models\n    models.PSABase.metadata.create_all(db.engine)\n\nif __name__ == '__main__':\n    manager.run()\n```\n\nAnd `python manage.py syncdb` successfully create relations `social_auth_association`, `social_auth_code`, `social_auth_nonce`, `social_auth_usersocialauth`. It is great!\n\nBut when i run `python manage.py db migrate` I got a migration which removes `social_auth_*` relations:\n\n```\n...\ndef upgrade():\n    ### commands auto generated by Alembic - please adjust! ###\n    op.drop_table('social_auth_nonce')\n    op.drop_table('social_auth_usersocialauth')\n    op.drop_table('social_auth_code')\n    op.drop_table('social_auth_association')\n    ### end Alembic commands ###\n...\n```\n\nWhat I should do? What am I doing wrong?\n. I call `init_social` in my `models.py` module:\n\n```\nfrom app import app\nfrom flask_sqlalchemy import SQLAlchemy\n...\ndb = SQLAlchemy(app)\n...\nclass User(db.Model):\n...\ninit_social(app, db.session)\n```\n\nYou about this?\n. I found perfect solution http://stackoverflow.com/a/35196770/2111562\n. @alexpantyukhin, I tried to use it. But i have a problem.\n\nI add `syncdb` command to my `manage.py`:\n\n```\nfrom app.models import *\nfrom flask_migrate import Migrate, MigrateCommand\nfrom flask_script import Manager\n\nmigrate = Migrate(app, db)\n\nmanager = Manager(app)\nmanager.add_command('db', MigrateCommand)\n\n@manager.command\ndef syncdb():\n    from social.apps.flask_app.default import models\n    models.PSABase.metadata.create_all(db.engine)\n\nif __name__ == '__main__':\n    manager.run()\n```\n\nAnd `python manage.py syncdb` successfully create relations `social_auth_association`, `social_auth_code`, `social_auth_nonce`, `social_auth_usersocialauth`. It is great!\n\nBut when i run `python manage.py db migrate` I got a migration which removes `social_auth_*` relations:\n\n```\n...\ndef upgrade():\n    ### commands auto generated by Alembic - please adjust! ###\n    op.drop_table('social_auth_nonce')\n    op.drop_table('social_auth_usersocialauth')\n    op.drop_table('social_auth_code')\n    op.drop_table('social_auth_association')\n    ### end Alembic commands ###\n...\n```\n\nWhat I should do? What am I doing wrong?\n. I call `init_social` in my `models.py` module:\n\n```\nfrom app import app\nfrom flask_sqlalchemy import SQLAlchemy\n...\ndb = SQLAlchemy(app)\n...\nclass User(db.Model):\n...\ninit_social(app, db.session)\n```\n\nYou about this?\n. I found perfect solution http://stackoverflow.com/a/35196770/2111562\n. ",
    "vladimirnani": "Maybe that has something to do with [server whitelist](https://developers.facebook.com/docs/apps/security)?\n. Maybe that has something to do with [server whitelist](https://developers.facebook.com/docs/apps/security)?\n. ",
    "WGierke": "Go ahead! :). Go ahead! :). ",
    "xuanliao": "parse the error project\n. parse the error project\n. ",
    "knaperek": "Hi arol, I'd suggest you take a look at [django-rest-framework-social-oauth2](https://github.com/PhilipGarnero/django-rest-framework-social-oauth2/) which integrates this library together with [django-oauth-toolkit](https://django-oauth-toolkit.readthedocs.org/) into DRF.\n\nIn SPA you probably want to have your own authentication provider built in your backend which is able to generate tokens for your users (based on either good-old username/password credentials or) **as an exchange for Linkedin token**. Your frontend (JS) shall then be responsible for obtaining an access_token from Linkedin first, and then subsequently using the `convert_token` method to retrieve your App's token from your backend. Since your frontend will use the new token for all subsequent requests against your backend API, you'll also avoid hitting Linkedin API with every request.\n. Hi arol, I'd suggest you take a look at [django-rest-framework-social-oauth2](https://github.com/PhilipGarnero/django-rest-framework-social-oauth2/) which integrates this library together with [django-oauth-toolkit](https://django-oauth-toolkit.readthedocs.org/) into DRF.\n\nIn SPA you probably want to have your own authentication provider built in your backend which is able to generate tokens for your users (based on either good-old username/password credentials or) **as an exchange for Linkedin token**. Your frontend (JS) shall then be responsible for obtaining an access_token from Linkedin first, and then subsequently using the `convert_token` method to retrieve your App's token from your backend. Since your frontend will use the new token for all subsequent requests against your backend API, you'll also avoid hitting Linkedin API with every request.\n. ",
    "gh67uyyghj": "Thanks so much @omab! so this means that using the default `associate_by_email()` for these three backends: Facebook oauth2, Google oauth2 and default django backend (assuming the email of the default django backend is verified) is **sufficient**, am I right?\r\n\r\n\r\nAdditionally, to make sure (maybe this may be helpful to noobs like me), I signed up a new account to Facebook using some random email, I tried to login to my app using Facebook oauth2 with this newly registered & unverified Facebook account, Facebook asked me to verify the email first in order to authorize the app.. Thanks so much @omab! so this means that using the default `associate_by_email()` for these three backends: Facebook oauth2, Google oauth2 and default django backend (assuming the email of the default django backend is verified) is **sufficient**, am I right?\r\n\r\n\r\nAdditionally, to make sure (maybe this may be helpful to noobs like me), I signed up a new account to Facebook using some random email, I tried to login to my app using Facebook oauth2 with this newly registered & unverified Facebook account, Facebook asked me to verify the email first in order to authorize the app.. ",
    "browniebroke": "Wanted to add my notes until I completed the upgrade, but I'm afraid I don't have enough time at the moment and I'm blocked by https://github.com/python-social-auth/social-app-django/issues/2. \r\n\r\nIn the meantime, feel free to merge this PR.\r\n\r\nThanks!. Wanted to add my notes until I completed the upgrade, but I'm afraid I don't have enough time at the moment and I'm blocked by https://github.com/python-social-auth/social-app-django/issues/2. \r\n\r\nIn the meantime, feel free to merge this PR.\r\n\r\nThanks!. ",
    "claycoleman": "shouldn't that be included in the requirements.txt ? so that when you install python-social-auth, pip will download and install social-auth-app-django as well?. shouldn't that be included in the requirements.txt ? so that when you install python-social-auth, pip will download and install social-auth-app-django as well?. ",
    "sils": "@omab how about using setuptools extras?. @omab how about using setuptools extras?. ",
    "ghoshbishakh": "You also need to install `social-auth-app-django` and add `social.apps.django_app.default` to your INSTALLED_APPS in your settings.py file.. @palzuncoff \r\n\r\n> As for Dec 03 2016, this library is now deprecated.\r\n\r\n\r\nYou should be using the new [social-app-django](https://github.com/python-social-auth/social-app-django).\r\n\r\nCheck out how to use that in this doc: https://github.com/omab/python-social-auth/blob/master/MIGRATING_TO_SOCIAL.md. You also need to install `social-auth-app-django` and add `social.apps.django_app.default` to your INSTALLED_APPS in your settings.py file.. @palzuncoff \r\n\r\n> As for Dec 03 2016, this library is now deprecated.\r\n\r\n\r\nYou should be using the new [social-app-django](https://github.com/python-social-auth/social-app-django).\r\n\r\nCheck out how to use that in this doc: https://github.com/omab/python-social-auth/blob/master/MIGRATING_TO_SOCIAL.md. ",
    "palzuncoff": "\r\nerror changed\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 22, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/home/giverroot/django/gve1/lib/python2.7/site-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/home/giverroot/django/gve1/lib/python2.7/site-packages/django/core/management/__init__.py\", line 341, in execute\r\n    django.setup()\r\n  File \"/home/giverroot/django/gve1/lib/python2.7/site-packages/django/__init__.py\", line 27, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/home/giverroot/django/gve1/lib/python2.7/site-packages/django/apps/registry.py\", line 108, in populate\r\n    app_config.import_models(all_models)\r\n  File \"/home/giverroot/django/gve1/lib/python2.7/site-packages/django/apps/config.py\", line 199, in import_models\r\n    self.models_module = import_module(models_module_name)\r\n  File \"/usr/local/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/home/giverroot/django/gve1/lib/python2.7/site-packages/social/apps/django_app/default/models.py\", line 1, in <module>\r\n    from social_django.models import AbstractUserSocialAuth, UserSocialAuth, Nonce, Association, Code, DjangoStorage\r\n  File \"/home/giverroot/django/gve1/lib/python2.7/site-packages/social_django/models.py\", line 68, in <module>\r\n    class UserSocialAuth(AbstractUserSocialAuth):\r\n  File \"/home/giverroot/django/gve1/lib/python2.7/site-packages/django/db/models/base.py\", line 113, in __new__\r\n    \"INSTALLED_APPS.\" % (module, name)\r\nRuntimeError: Model class social_django.models.UserSocialAuth doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.\r\n```\r\n. Thank you. \r\nerror changed\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 22, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/home/giverroot/django/gve1/lib/python2.7/site-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/home/giverroot/django/gve1/lib/python2.7/site-packages/django/core/management/__init__.py\", line 341, in execute\r\n    django.setup()\r\n  File \"/home/giverroot/django/gve1/lib/python2.7/site-packages/django/__init__.py\", line 27, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/home/giverroot/django/gve1/lib/python2.7/site-packages/django/apps/registry.py\", line 108, in populate\r\n    app_config.import_models(all_models)\r\n  File \"/home/giverroot/django/gve1/lib/python2.7/site-packages/django/apps/config.py\", line 199, in import_models\r\n    self.models_module = import_module(models_module_name)\r\n  File \"/usr/local/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/home/giverroot/django/gve1/lib/python2.7/site-packages/social/apps/django_app/default/models.py\", line 1, in <module>\r\n    from social_django.models import AbstractUserSocialAuth, UserSocialAuth, Nonce, Association, Code, DjangoStorage\r\n  File \"/home/giverroot/django/gve1/lib/python2.7/site-packages/social_django/models.py\", line 68, in <module>\r\n    class UserSocialAuth(AbstractUserSocialAuth):\r\n  File \"/home/giverroot/django/gve1/lib/python2.7/site-packages/django/db/models/base.py\", line 113, in __new__\r\n    \"INSTALLED_APPS.\" % (module, name)\r\nRuntimeError: Model class social_django.models.UserSocialAuth doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.\r\n```\r\n. Thank you. ",
    "fendyh": "I'm now encountering an error, it says ImportError at /\r\ncannot import name engines\r\n it traced back to /lib/python2.7/site-packages/social_django/strategy.py in this line\r\nfrom django.template import TemplateDoesNotExist, RequestContext, loader, engines\r\n\r\n. @omab My Django version is 1.7.3 , and yes `from django.template import engines` generates error as it does not exist, what Django version should I use ? And yes My Django is installed in virtualenv\r\n\r\nThank you for the answer!. @omab I've tried upgrading my Django to the newest version and it generates so much errors, I think changing my Django version is not an option. Thanks for the answers. I finally managed to implement it by installing Django Social Auth instead, as it still has support for Django 1.7.. Thanks for the answer ! I followed your suggestion and try installing `python-social-auth==0.2.21` instead. As I have already implemented `django-social-auth==0.7.28`, I will need to migrate it to `python-social-auth`, and so I followed the instructions laid in `http://psa.matiasaguirre.net/docs/configuration/porting_from_dsa.html`, as it turns out, when I run manage.py runserver, there's a warning `You have unapplied migrations; your app may not work properly until they are applied.\r\nRun 'python manage.py migrate' to apply them.` and so I run `manage.py migrate`, and here's the result\r\n`Running migrations:\r\n  Applying social_auth.0001_initial...Traceback (most recent call last):\r\n  File \"./manage.py\", line 10, in <module>\r\n...\r\ndjango.db.utils.ProgrammingError: relation \"social_auth_association\" already exists`\r\n\r\ncan you help with this ? this maybe a newbie error, sorry but I'm new to Django, I don't know how to solve this, but thanks for helping !. @omab Thanks for the answer ! the fake migration worked, and I can login and logout normally again. there's still an issue though, when I go to http://localhost:8000/admin/social_auth/usersocialauth/ , it generates an error `AttributeError at /admin/social_auth/usersocialauth/\r\n\r\n'Options' object has no attribute 'get_fields'`\r\n\r\nfurther stacktrace, the error generated originated from /titanium_toys_env/lib/python2.7/site-packages/social/apps/django_app/default/admin.py in get_search_fields, particularly this line:\r\n`\r\n\r\n            )\r\n\r\n            if search_fields is None:\r\n\r\n                _User = UserSocialAuth.user_model()\r\n\r\n                username = getattr(_User, 'USERNAME_FIELD', None) or \\\r\n\r\n                           hasattr(_User, 'username') and 'username' or \\\r\n\r\n                           None\r\n\r\n                fieldnames = ('first_name', 'last_name', 'email', username)\r\n\r\n                all_names = self._get_all_field_names(_User._meta) // this line generates the error\r\n\r\n     ...\r\n\r\n                search_fields = [name for name in fieldnames\r\n\r\n                                    if name and name in all_names]\r\n\r\n            return ['user__' + name for name in search_fields]\r\n\r\n        @staticmethod\r\n\r\n        def _get_all_field_names(model):\r\n`\r\n\r\nthanks !!. I'm now encountering an error, it says ImportError at /\r\ncannot import name engines\r\n it traced back to /lib/python2.7/site-packages/social_django/strategy.py in this line\r\nfrom django.template import TemplateDoesNotExist, RequestContext, loader, engines\r\n\r\n. @omab My Django version is 1.7.3 , and yes `from django.template import engines` generates error as it does not exist, what Django version should I use ? And yes My Django is installed in virtualenv\r\n\r\nThank you for the answer!. @omab I've tried upgrading my Django to the newest version and it generates so much errors, I think changing my Django version is not an option. Thanks for the answers. I finally managed to implement it by installing Django Social Auth instead, as it still has support for Django 1.7.. Thanks for the answer ! I followed your suggestion and try installing `python-social-auth==0.2.21` instead. As I have already implemented `django-social-auth==0.7.28`, I will need to migrate it to `python-social-auth`, and so I followed the instructions laid in `http://psa.matiasaguirre.net/docs/configuration/porting_from_dsa.html`, as it turns out, when I run manage.py runserver, there's a warning `You have unapplied migrations; your app may not work properly until they are applied.\r\nRun 'python manage.py migrate' to apply them.` and so I run `manage.py migrate`, and here's the result\r\n`Running migrations:\r\n  Applying social_auth.0001_initial...Traceback (most recent call last):\r\n  File \"./manage.py\", line 10, in <module>\r\n...\r\ndjango.db.utils.ProgrammingError: relation \"social_auth_association\" already exists`\r\n\r\ncan you help with this ? this maybe a newbie error, sorry but I'm new to Django, I don't know how to solve this, but thanks for helping !. @omab Thanks for the answer ! the fake migration worked, and I can login and logout normally again. there's still an issue though, when I go to http://localhost:8000/admin/social_auth/usersocialauth/ , it generates an error `AttributeError at /admin/social_auth/usersocialauth/\r\n\r\n'Options' object has no attribute 'get_fields'`\r\n\r\nfurther stacktrace, the error generated originated from /titanium_toys_env/lib/python2.7/site-packages/social/apps/django_app/default/admin.py in get_search_fields, particularly this line:\r\n`\r\n\r\n            )\r\n\r\n            if search_fields is None:\r\n\r\n                _User = UserSocialAuth.user_model()\r\n\r\n                username = getattr(_User, 'USERNAME_FIELD', None) or \\\r\n\r\n                           hasattr(_User, 'username') and 'username' or \\\r\n\r\n                           None\r\n\r\n                fieldnames = ('first_name', 'last_name', 'email', username)\r\n\r\n                all_names = self._get_all_field_names(_User._meta) // this line generates the error\r\n\r\n     ...\r\n\r\n                search_fields = [name for name in fieldnames\r\n\r\n                                    if name and name in all_names]\r\n\r\n            return ['user__' + name for name in search_fields]\r\n\r\n        @staticmethod\r\n\r\n        def _get_all_field_names(model):\r\n`\r\n\r\nthanks !!. ",
    "haloween": "Ok.\r\nYou need to have your INSTALLED_APPS like:\r\n`\r\n'social_django',\r\n'social.apps.django_app.default',\r\n`. Ok.\r\nYou need to have your INSTALLED_APPS like:\r\n`\r\n'social_django',\r\n'social.apps.django_app.default',\r\n`. ",
    "jpic": "I've fixed this in my project by doing the above mentioned steps and changing social_auth to social_django in my own migrations. There's probably a better way though. See: \r\n\r\nhttps://github.com/omab/python-social-auth/blob/master/MIGRATING_TO_SOCIAL.md. I've fixed this in my project by doing the above mentioned steps and changing social_auth to social_django in my own migrations. There's probably a better way though. See: \r\n\r\nhttps://github.com/omab/python-social-auth/blob/master/MIGRATING_TO_SOCIAL.md. ",
    "tytarenko": "Could you please tell me, why I have install this pack\u0430ge \"social-auth-app-django\" and why it does not work without it. Nothing is said in the docs about it. And I have rollback to version 0.2.21 because current version on pip does not work. It not return authorized user. Could you please tell me, why I have install this pack\u0430ge \"social-auth-app-django\" and why it does not work without it. Nothing is said in the docs about it. And I have rollback to version 0.2.21 because current version on pip does not work. It not return authorized user. ",
    "apache10": "Traceback (most recent call last):\r\n  File \"manage.py\", line 22, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/home/gaurav/.local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/home/gaurav/.local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 341, in execute\r\n    django.setup()\r\n  File \"/home/gaurav/.local/lib/python2.7/site-packages/django/__init__.py\", line 27, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/home/gaurav/.local/lib/python2.7/site-packages/django/apps/registry.py\", line 108, in populate\r\n    app_config.import_models(all_models)\r\n  File \"/home/gaurav/.local/lib/python2.7/site-packages/django/apps/config.py\", line 199, in import_models\r\n    self.models_module = import_module(models_module_name)\r\n  File \"/usr/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/usr/local/lib/python2.7/dist-packages/social/apps/django_app/default/models.py\", line 1, in <module>\r\n    from social_django.models import AbstractUserSocialAuth, UserSocialAuth, Nonce, Association, Code, DjangoStorage\r\nImportError: No module named social_django.models\r\n\r\n\r\nI have installed social-auth-app-django and added social.apps.django_app.default to INSTALLED_APPS in  settings.py file.. Traceback (most recent call last):\r\n  File \"manage.py\", line 22, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/home/gaurav/.local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/home/gaurav/.local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 341, in execute\r\n    django.setup()\r\n  File \"/home/gaurav/.local/lib/python2.7/site-packages/django/__init__.py\", line 27, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/home/gaurav/.local/lib/python2.7/site-packages/django/apps/registry.py\", line 108, in populate\r\n    app_config.import_models(all_models)\r\n  File \"/home/gaurav/.local/lib/python2.7/site-packages/django/apps/config.py\", line 199, in import_models\r\n    self.models_module = import_module(models_module_name)\r\n  File \"/usr/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/usr/local/lib/python2.7/dist-packages/social/apps/django_app/default/models.py\", line 1, in <module>\r\n    from social_django.models import AbstractUserSocialAuth, UserSocialAuth, Nonce, Association, Code, DjangoStorage\r\nImportError: No module named social_django.models\r\n\r\n\r\nI have installed social-auth-app-django and added social.apps.django_app.default to INSTALLED_APPS in  settings.py file.. ",
    "jingz": "got to install\r\n\r\n`$ pip install social-auth-storage-sqlalchemy`. just use\r\n\r\n```python\r\nfrom social_flask.routes import social_auth\r\n```\r\n. got to install\r\n\r\n`$ pip install social-auth-storage-sqlalchemy`. just use\r\n\r\n```python\r\nfrom social_flask.routes import social_auth\r\n```\r\n. ",
    "Obtin": "I tried with the mention version but it still did nt fix.. what shud i do?. I tried with the mention version but it still did nt fix.. what shud i do?. ",
    "zelds": "Trouble was with wrong pipeline documentation. we need     **'social.pipeline.user.create_user',** before **'social.pipeline.social_auth.associate_user',**\r\n```\r\nSOCIAL_AUTH_PIPELINE = (\r\n    'social.pipeline.social_auth.social_details',\r\n    'social.pipeline.social_auth.social_uid',\r\n    'social.pipeline.social_auth.auth_allowed',\r\n    'social.pipeline.user.create_user',\r\n    'social.pipeline.social_auth.social_user',\r\n    'social.pipeline.social_auth.associate_user',\r\n    'social.pipeline.social_auth.load_extra_data',\r\n    'social.pipeline.user.user_details',\r\n    # After this write ur custom pipelines\r\n)\r\n```. Trouble was with wrong pipeline documentation. we need     **'social.pipeline.user.create_user',** before **'social.pipeline.social_auth.associate_user',**\r\n```\r\nSOCIAL_AUTH_PIPELINE = (\r\n    'social.pipeline.social_auth.social_details',\r\n    'social.pipeline.social_auth.social_uid',\r\n    'social.pipeline.social_auth.auth_allowed',\r\n    'social.pipeline.user.create_user',\r\n    'social.pipeline.social_auth.social_user',\r\n    'social.pipeline.social_auth.associate_user',\r\n    'social.pipeline.social_auth.load_extra_data',\r\n    'social.pipeline.user.user_details',\r\n    # After this write ur custom pipelines\r\n)\r\n```. ",
    "berluskuni": "Hi, I'm using python 3.5 Django==1.10 I installed Python-social-auth executed the command Python manage.py transfer error received!\r\npython manage.py migrate\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 22, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/home/berluskuni/web_project/exprender/.exprender/lib64/python3.5/site-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/home/berluskuni/web_project/exprender/.exprender/lib64/python3.5/site-packages/django/core/management/__init__.py\", line 341, in execute\r\n    django.setup()\r\n  File \"/home/berluskuni/web_project/exprender/.exprender/lib64/python3.5/site-packages/django/__init__.py\", line 27, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/home/berluskuni/web_project/exprender/.exprender/lib64/python3.5/site-packages/django/apps/registry.py\", line 108, in populate\r\n    app_config.import_models(all_models)\r\n  File \"/home/berluskuni/web_project/exprender/.exprender/lib64/python3.5/site-packages/django/apps/config.py\", line 199, in import_models\r\n    self.models_module = import_module(models_module_name)\r\n  File \"/usr/lib64/python3.5/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 665, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\r\n  File \"/home/berluskuni/web_project/exprender/.exprender/lib64/python3.5/site-packages/social/apps/django_app/default/models.py\", line 1, in <module>\r\n    from social_django.models import AbstractUserSocialAuth, UserSocialAuth, Nonce, Association, Code, DjangoStorage\r\nImportError: No module named 'social_django'\r\n(.exprender) [*********@localhost exprender]$ \r\n. I helped the decision!\r\npip install python-social-auth[django]`\r\n`or\r\npip install social-auth-app-django`\r\n`\r\nand in INSTALLED APPS\r\n.....\r\n.....\r\n'social_django',\r\n'social.apps.django_app.default',\r\nGood luck. Hi, I'm using python 3.5 Django==1.10 I installed Python-social-auth executed the command Python manage.py transfer error received!\r\npython manage.py migrate\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 22, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/home/berluskuni/web_project/exprender/.exprender/lib64/python3.5/site-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/home/berluskuni/web_project/exprender/.exprender/lib64/python3.5/site-packages/django/core/management/__init__.py\", line 341, in execute\r\n    django.setup()\r\n  File \"/home/berluskuni/web_project/exprender/.exprender/lib64/python3.5/site-packages/django/__init__.py\", line 27, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/home/berluskuni/web_project/exprender/.exprender/lib64/python3.5/site-packages/django/apps/registry.py\", line 108, in populate\r\n    app_config.import_models(all_models)\r\n  File \"/home/berluskuni/web_project/exprender/.exprender/lib64/python3.5/site-packages/django/apps/config.py\", line 199, in import_models\r\n    self.models_module = import_module(models_module_name)\r\n  File \"/usr/lib64/python3.5/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 665, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\r\n  File \"/home/berluskuni/web_project/exprender/.exprender/lib64/python3.5/site-packages/social/apps/django_app/default/models.py\", line 1, in <module>\r\n    from social_django.models import AbstractUserSocialAuth, UserSocialAuth, Nonce, Association, Code, DjangoStorage\r\nImportError: No module named 'social_django'\r\n(.exprender) [*********@localhost exprender]$ \r\n. I helped the decision!\r\npip install python-social-auth[django]`\r\n`or\r\npip install social-auth-app-django`\r\n`\r\nand in INSTALLED APPS\r\n.....\r\n.....\r\n'social_django',\r\n'social.apps.django_app.default',\r\nGood luck. ",
    "SirRenfri": "I solved my problem. It was because virtual environment. I forgot active it. I solved my problem. It was because virtual environment. I forgot active it. ",
    "rifa84": " I have the same problem, and virtualenv is active, but the same error \"No module named social_djano\".  I have the same problem, and virtualenv is active, but the same error \"No module named social_djano\". ",
    "czarina": "Sorry, needed to update my versioning.. Needed to update my version. . Sorry, needed to update my versioning.. Needed to update my version. . ",
    "wormhoudt": "This is still an issue as of 1.1.0\r\n\r\nFor google-oauth2 this means that after 3600 seconds, the token gets refreshed for every single request. It's clear that the `access_token` is being updated in the database, but `auth_time` is not.\r\n\r\nI added the following code as a temporary fix.\r\n\r\n```\r\n# Update the auth time, to compensate for auth_time not being updated by refresh_token\r\n# Assumes server is UTC and creates a 5 minute buffer to account for skew\r\nauth.extra_data['auth_time'] = int(time.time()) - 300\r\nauth.save()\r\n```. This is still an issue as of 1.1.0\r\n\r\nFor google-oauth2 this means that after 3600 seconds, the token gets refreshed for every single request. It's clear that the `access_token` is being updated in the database, but `auth_time` is not.\r\n\r\nI added the following code as a temporary fix.\r\n\r\n```\r\n# Update the auth time, to compensate for auth_time not being updated by refresh_token\r\n# Assumes server is UTC and creates a 5 minute buffer to account for skew\r\nauth.extra_data['auth_time'] = int(time.time()) - 300\r\nauth.save()\r\n```. ",
    "nony05": "+1. +1. ",
    "sametersan": "+1. +1. ",
    "scottlinux": "Does the latest python-social-auth work? (0.3.6). Try python-social-auth==0.2.21\r\n. Does the latest python-social-auth work? (0.3.6). Try python-social-auth==0.2.21\r\n. ",
    "ajoyoommen": "I was unable to upgrade to latest. However, upgrading to 0.2.19 worked and also solved this issue.. I was unable to upgrade to latest. However, upgrading to 0.2.19 worked and also solved this issue.. ",
    "goozmake": "I have same error!. I have same error!. ",
    "nh-99": "What worked for me was to enable the Google+ API on the Google Developer Console.. What worked for me was to enable the Google+ API on the Google Developer Console.. ",
    "randyyuan": "I had the same error with both Google+ API and Gmail API enabled on Google Developer Console\r\n\r\nUpdate: I think my problem was due to expired tokens on the app's side.. I had the same error with both Google+ API and Gmail API enabled on Google Developer Console\r\n\r\nUpdate: I think my problem was due to expired tokens on the app's side.. ",
    "vsoch": "second bug is fixed, I forgot to add the saml to the settings.py! The first is still an issue (with the capital letter) I think.. second bug is fixed, I forgot to add the saml to the settings.py! The first is still an issue (with the capital letter) I think.. ",
    "cadecairos": "@omab Can you weigh in on this?. Thanks for the help @omab, we'll give this a go tomorrow and report back here our findings.. Got it working using `X-Forwarded-Host` - thanks @omab. @omab Can you weigh in on this?. Thanks for the help @omab, we'll give this a go tomorrow and report back here our findings.. Got it working using `X-Forwarded-Host` - thanks @omab. ",
    "zavod": "So, how it should work?. So, how it should work?. ",
    "jialutu": "This is due to the classes OpenIdConnectAssociation and OpenIdConnectAuth moving to social_core.backends.open_id_connect.\r\n\r\nPull request #1104 created to update the import.. This is due to the classes OpenIdConnectAssociation and OpenIdConnectAuth moving to social_core.backends.open_id_connect.\r\n\r\nPull request #1104 created to update the import.. "
}