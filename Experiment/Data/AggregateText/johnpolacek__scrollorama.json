{
    "kimmel": "I tried these changes on both Firefox 9.0.1 and Chromium 18.0.972.0 and all the effects stop working.\n. I tried these changes on both Firefox 9.0.1 and Chromium 18.0.972.0 and all the effects stop working.\n. ",
    "johnpolacek": "Yes, the array needs to iterate forward - it manipulates elements from the top of the page to the bottom of the page. I could probably refactor so elements are pushed to the array from bottom up, but it seems like a lot to do for browser js quirkiness that may change whenever the browsers are updated. For all we know, when Chrome 17+ comes out, it may prefer ++\n\nAs for the if soup, I tend to use 'if', because it is more readable and understandable to people learning js. It is definitely niftier the way you are doing it. Is it more performant?\n. Thank cwolves. That was my impression as well.\n. haha. tHANKS FOR THE LULZ!1\n. Thanks!\n. Done. Thanks!\n. Thanks for the feedback!\nI'd recommend keeping the body at 100% and use a div wrapper for the\ncontent. Hopefully that will solve it for you.\n- John\n\nOn Thu, Jan 5, 2012 at 2:00 AM, MedicatedMannequin <\nreply@reply.github.com\n\n> wrote:\n> \n> Hey, Just playing around with this. Great stuff! Thanks!\n> I think I might have come across a little bug.\n> When the body of a page is set to less than width: 100% it causes the\n> .scrollblock contents to shift to the side a little.\n> \n> Try:\n> scrollorama.animate('#unpin',{ duration: 9999, property:'padding-top',\n> pin:true });\n> \n> with a body tag at 95%\n> \n> Cheers.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/johnpolacek/scrollorama/issues/5\n. Thanks!\n. To get the pin feature to work, converting to absolute position on the 'blocks' was necessary. To keep things simple, I've applied it to all blocks. Perhaps there may be a way around that, I'll give it some thought.\n. I added an enablePin setting. It is set to true by default. If you set it to false, then it doesn't absolutely position the elements.\n\nvar scrollorama = $.scrollorama({ enablePin:false });\n. I haven't set it up to do that unfortunately. I was thinking about adding\nthat in at some point, if I needed. No time right now though. Would love to\nsee a pull request that added that.\n\nOr, you could try the easy route, I suggest doing this through trickery.\nUse one property for the animating in, and a different or similar property\nfor the next animation. Like padding and margin. Or for your example, you\ncould try to use the zoom property maybe?\n\nOn Sat, Feb 11, 2012 at 3:44 PM, Jerry Badabam <\nreply@reply.github.com\n\n> wrote:\n> \n> **(Hi John, I love this plugin very much!)**\n> \n> Do you see a way to animate the same value of the same element in two\n> different directions over time? So I could first animate something in one\n> direction - and _later_ back to the other.\n> \n> Example:\n> \n> ```\n> scrollorama.animate('#logo',{\n>    duration:150,\n>    property:'height',\n>    start:logoMaxHeight,\n>    end:logoMinHeight\n> });\n> scrollorama.animate('#logo', {\n>    delay:200,\n>    duration:150,\n>    property:'height',\n>    start: logoMinHeight,\n>    end:logoMaxHeight\n> });\n> ```\n> \n> This would be a **huge** feature! Is it possible to implement with a few\n> changes?\n> \n> Thank you very much!\n> \n> Kind regards,\n> Jerry\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/johnpolacek/scrollorama/issues/8\n. Thanks for the fixes!\n. Thanks Mark. Lately I've been doing one-liners without braces because I find it cleaner/easier to read, but I know that is going against the common practice so I think I'll just go with the crowd from now on. I've also read conflicting opinions on where to declare vars. Crockford wants you to do it all at the top, but others say that it is easier to figure out what is going on when you declare them before they are used. I've felt the latter makes more sense, but on the other hand I don't want to be on the wrong side of the godfather, haha.\n. I just added requestAnimationFrame so it animates a little better. I'm also\nworking on Scrollorama 2: Superscrollorama, so I'll try to better optimize\nthat for iOS.\n\nOn Sun, Apr 15, 2012 at 3:19 PM, Bernhard Rusch <\nreply@reply.github.com\n\n> wrote:\n> \n> ... would be really amazing.\n> \n> Like: http://markdalgleish.com/projects/stellar.js/demos/ios.html\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/johnpolacek/scrollorama/issues/12\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. I'd need to see an example. Also, have you tried SuperScrollorama? http://johnpolacek.github.com/superscrollorama/\n. Try using this instead: https://github.com/Prinzhorn/skrollr\n. It is likely you will get better performance out of superscrollorama\nbecause it uses Greensock's highly optimized tweening framework.\nhttp://johnpolacek.github.com/superscrollorama/\n\nOn Monday, July 9, 2012, carlo frinolli wrote:\n\n> Hi,\n> \n> we implemented a couple of effects here\n> \n> www.crowdfuture.net using scrolloroma, but due to some huge bg image we\n> are having some heavy performances troubles. Any idea wheter is our mistake\n> or something different?\n> Thanks\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/johnpolacek/scrollorama/issues/20\n\n## \n\n*\n*\n_Follow me on Twitter: http://twitter.com/johnpolacek_\n. Thanks!\n. Not at this time. I do accept pull requests.\n. Thanks!\n. Good one. Thanks! Shoot me a link to your project if you can.\n. The empty div is necessary for pinning. When elements are pinned, they become fixed position. The empty div keeps everything where it should be as you keep scrolling.\n\nThanks for the fix!\n. Pulled `$.browser()` from jQuery migrate. Also, I recommend using SuperScrollorama, which, via Greensock, lets you animate a lot more properties with better performance. http://johnpolacek.github.com/superscrollorama/\n. Try SuperScrollorama https://github.com/johnpolacek/superscrollorama - which is built on top of the Greensock Animation Platform. http://www.greensock.com/gsap-js/\n. Thanks!\n. Thanks!\n. Thanks!\n. Are you using the latest Scrollorama? This issue should be fixed. https://github.com/johnpolacek/scrollorama/blob/master/js/jquery.scrollorama.js#L40\n. Thanks!\n. Thanks!\n. Use SuperScrollorama instead (it is on Bower)\n. The way I would do it is that instead of an onComplete, I would stack all those images, one on top of the other, all of them absolutely positioned inside a div container that has relative position. Instead of changing the img src, just do fast opacity tweens on those images and work them into your animation timeline. Make sense?\n\nLet me know when your project is finished and I'll give you a tweet..\n. Thanks!\n\nNote: I am not maintaining Scrollorama under active development (or its sequel SuperScrollorama). I recommend ScrollMagic \u2014 http://janpaepke.github.io/ScrollMagic/\n. Yes, the array needs to iterate forward - it manipulates elements from the top of the page to the bottom of the page. I could probably refactor so elements are pushed to the array from bottom up, but it seems like a lot to do for browser js quirkiness that may change whenever the browsers are updated. For all we know, when Chrome 17+ comes out, it may prefer ++\n\nAs for the if soup, I tend to use 'if', because it is more readable and understandable to people learning js. It is definitely niftier the way you are doing it. Is it more performant?\n. Thank cwolves. That was my impression as well.\n. haha. tHANKS FOR THE LULZ!1\n. Thanks!\n. Done. Thanks!\n. Thanks for the feedback!\nI'd recommend keeping the body at 100% and use a div wrapper for the\ncontent. Hopefully that will solve it for you.\n- John\n\nOn Thu, Jan 5, 2012 at 2:00 AM, MedicatedMannequin <\nreply@reply.github.com\n\n> wrote:\n> \n> Hey, Just playing around with this. Great stuff! Thanks!\n> I think I might have come across a little bug.\n> When the body of a page is set to less than width: 100% it causes the\n> .scrollblock contents to shift to the side a little.\n> \n> Try:\n> scrollorama.animate('#unpin',{ duration: 9999, property:'padding-top',\n> pin:true });\n> \n> with a body tag at 95%\n> \n> Cheers.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/johnpolacek/scrollorama/issues/5\n. Thanks!\n. To get the pin feature to work, converting to absolute position on the 'blocks' was necessary. To keep things simple, I've applied it to all blocks. Perhaps there may be a way around that, I'll give it some thought.\n. I added an enablePin setting. It is set to true by default. If you set it to false, then it doesn't absolutely position the elements.\n\nvar scrollorama = $.scrollorama({ enablePin:false });\n. I haven't set it up to do that unfortunately. I was thinking about adding\nthat in at some point, if I needed. No time right now though. Would love to\nsee a pull request that added that.\n\nOr, you could try the easy route, I suggest doing this through trickery.\nUse one property for the animating in, and a different or similar property\nfor the next animation. Like padding and margin. Or for your example, you\ncould try to use the zoom property maybe?\n\nOn Sat, Feb 11, 2012 at 3:44 PM, Jerry Badabam <\nreply@reply.github.com\n\n> wrote:\n> \n> **(Hi John, I love this plugin very much!)**\n> \n> Do you see a way to animate the same value of the same element in two\n> different directions over time? So I could first animate something in one\n> direction - and _later_ back to the other.\n> \n> Example:\n> \n> ```\n> scrollorama.animate('#logo',{\n>    duration:150,\n>    property:'height',\n>    start:logoMaxHeight,\n>    end:logoMinHeight\n> });\n> scrollorama.animate('#logo', {\n>    delay:200,\n>    duration:150,\n>    property:'height',\n>    start: logoMinHeight,\n>    end:logoMaxHeight\n> });\n> ```\n> \n> This would be a **huge** feature! Is it possible to implement with a few\n> changes?\n> \n> Thank you very much!\n> \n> Kind regards,\n> Jerry\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/johnpolacek/scrollorama/issues/8\n. Thanks for the fixes!\n. Thanks Mark. Lately I've been doing one-liners without braces because I find it cleaner/easier to read, but I know that is going against the common practice so I think I'll just go with the crowd from now on. I've also read conflicting opinions on where to declare vars. Crockford wants you to do it all at the top, but others say that it is easier to figure out what is going on when you declare them before they are used. I've felt the latter makes more sense, but on the other hand I don't want to be on the wrong side of the godfather, haha.\n. I just added requestAnimationFrame so it animates a little better. I'm also\nworking on Scrollorama 2: Superscrollorama, so I'll try to better optimize\nthat for iOS.\n\nOn Sun, Apr 15, 2012 at 3:19 PM, Bernhard Rusch <\nreply@reply.github.com\n\n> wrote:\n> \n> ... would be really amazing.\n> \n> Like: http://markdalgleish.com/projects/stellar.js/demos/ios.html\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/johnpolacek/scrollorama/issues/12\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. I'd need to see an example. Also, have you tried SuperScrollorama? http://johnpolacek.github.com/superscrollorama/\n. Try using this instead: https://github.com/Prinzhorn/skrollr\n. It is likely you will get better performance out of superscrollorama\nbecause it uses Greensock's highly optimized tweening framework.\nhttp://johnpolacek.github.com/superscrollorama/\n\nOn Monday, July 9, 2012, carlo frinolli wrote:\n\n> Hi,\n> \n> we implemented a couple of effects here\n> \n> www.crowdfuture.net using scrolloroma, but due to some huge bg image we\n> are having some heavy performances troubles. Any idea wheter is our mistake\n> or something different?\n> Thanks\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/johnpolacek/scrollorama/issues/20\n\n## \n\n*\n*\n_Follow me on Twitter: http://twitter.com/johnpolacek_\n. Thanks!\n. Not at this time. I do accept pull requests.\n. Thanks!\n. Good one. Thanks! Shoot me a link to your project if you can.\n. The empty div is necessary for pinning. When elements are pinned, they become fixed position. The empty div keeps everything where it should be as you keep scrolling.\n\nThanks for the fix!\n. Pulled `$.browser()` from jQuery migrate. Also, I recommend using SuperScrollorama, which, via Greensock, lets you animate a lot more properties with better performance. http://johnpolacek.github.com/superscrollorama/\n. Try SuperScrollorama https://github.com/johnpolacek/superscrollorama - which is built on top of the Greensock Animation Platform. http://www.greensock.com/gsap-js/\n. Thanks!\n. Thanks!\n. Thanks!\n. Are you using the latest Scrollorama? This issue should be fixed. https://github.com/johnpolacek/scrollorama/blob/master/js/jquery.scrollorama.js#L40\n. Thanks!\n. Thanks!\n. Use SuperScrollorama instead (it is on Bower)\n. The way I would do it is that instead of an onComplete, I would stack all those images, one on top of the other, all of them absolutely positioned inside a div container that has relative position. Instead of changing the img src, just do fast opacity tweens on those images and work them into your animation timeline. Make sense?\n\nLet me know when your project is finished and I'll give you a tweet..\n. Thanks!\n\nNote: I am not maintaining Scrollorama under active development (or its sequel SuperScrollorama). I recommend ScrollMagic \u2014 http://janpaepke.github.io/ScrollMagic/\n. ",
    "MarkKahn": "-1 to the `condition && statement` pattern -- I used to use it all the time myself, but it's harder to read and in newer JS engines is actually **_slower**_ than `if( condition ){ statement; }`\n. -1 to the `condition && statement` pattern -- I used to use it all the time myself, but it's harder to read and in newer JS engines is actually **_slower**_ than `if( condition ){ statement; }`\n. ",
    "scumbag-pull-request": "hOW 'BOUT A MERGE?!!\n. hOW 'BOUT A MERGE?!!\n. ",
    "richo": "+1 helped me significantly while intergrating node into my OS kernel.\n. +1 helped me significantly while intergrating node into my OS kernel.\n. ",
    "narfdotpl": ":sparkles: Cheers! :sparkles:\n. :sparkles: Cheers! :sparkles:\n. ",
    "erfanimani": "Ah I see. Good to know its there for the pin feature so I can safely remove it since im not using the pinning feature.\n. Ah I see. Good to know its there for the pin feature so I can safely remove it since im not using the pinning feature.\n. ",
    "fleeting": "I ran into the same issue of not needing the blocks to be position absolute. I'm also not using the pin feature so I commented out the absolute code as well. Not sure other options for it.\n. I ran into the same issue of not needing the blocks to be position absolute. I'm also not using the pin feature so I commented out the absolute code as well. Not sure other options for it.\n. ",
    "badabam": "Hi John,\n\nthank you for the quick answer! For now, I will do some trickery (but based on [Cardume's scrollAnimate](https://github.com/Cardume/scrollAnimate) - it does not use scrollblocks). But I will see if I can find some time later to add the new functionality into your nice plugin.\n- Jerry\n. Hi John,\n\nthank you for the quick answer! For now, I will do some trickery (but based on [Cardume's scrollAnimate](https://github.com/Cardume/scrollAnimate) - it does not use scrollblocks). But I will see if I can find some time later to add the new functionality into your nice plugin.\n- Jerry\n. ",
    "brusch": "Wow, good news! Keep on the good work!\n. Wow, good news! Keep on the good work!\n. ",
    "diegodorado": "happy to be helpful... great work with scrolldeck!\n. happy to be helpful... great work with scrolldeck!\n. ",
    "hjujah": "Sorry , I guess this is related to scrolldeck and not  to scrollorama,,,\n. Sorry , I guess this is related to scrolldeck and not  to scrollorama,,,\n. ",
    "ehaft": "I've narrowed it down to IE8 working when the css is written like this: \"backgroundPositionY\" and not this \"background-position-y\".  \n\nSo this works in firefox:\nscrollorama.animate('#home', {\n            duration: 1100, property: 'background-position-y', start: 0, end: -400\n        });\n\nAnd only this works in IE8:\nscrollorama.animate('#home', {\n                duration: 1100, property: 'backgroundPositionY', start: 0, end: -400\n            });\n\nI'm currently trying to figure out how I can get both to work....any ideas would be helpful!\nThanks\n. Probably not ideal, but I got it working with the following:\n\n<script>\n        var ie8 = false;\n    </script>\n\n\n```\n<!--[if IE 8]>\n    <script>\n        ie8 = true;\n    </script>\n<![endif]-->\n```\n\nThen I wrapped my js in the following to use both types of css syntax:\n\nif (ie8 == false) {\n    //code using background-position-y\n} else {\n    //code using backgroundPositionY\n}\n. I've narrowed it down to IE8 working when the css is written like this: \"backgroundPositionY\" and not this \"background-position-y\".  \n\nSo this works in firefox:\nscrollorama.animate('#home', {\n            duration: 1100, property: 'background-position-y', start: 0, end: -400\n        });\n\nAnd only this works in IE8:\nscrollorama.animate('#home', {\n                duration: 1100, property: 'backgroundPositionY', start: 0, end: -400\n            });\n\nI'm currently trying to figure out how I can get both to work....any ideas would be helpful!\nThanks\n. Probably not ideal, but I got it working with the following:\n\n<script>\n        var ie8 = false;\n    </script>\n\n\n```\n<!--[if IE 8]>\n    <script>\n        ie8 = true;\n    </script>\n<![endif]-->\n```\n\nThen I wrapped my js in the following to use both types of css syntax:\n\nif (ie8 == false) {\n    //code using background-position-y\n} else {\n    //code using backgroundPositionY\n}\n. ",
    "jorditost": "Is there an easy way to reset all scrollpoints?\n. Hi John,\n\nI don't know why I cannot leave pull requests. I think that the resize method would be something like:\n\n``` javascript\nscrollorama.resize = function() {\n\n    var block;\n    for (i=0; i<blocks.length; i++) {\n\n        block = scrollorama.settings.blocks.eq(i);\n        blocks[i].top = block.offset().top - parseInt(block.css('margin-top'), 10);\n    }\n};\n```\n. Is there an easy way to reset all scrollpoints?\n. Hi John,\n\nI don't know why I cannot leave pull requests. I think that the resize method would be something like:\n\n``` javascript\nscrollorama.resize = function() {\n\n    var block;\n    for (i=0; i<blocks.length; i++) {\n\n        block = scrollorama.settings.blocks.eq(i);\n        blocks[i].top = block.offset().top - parseInt(block.css('margin-top'), 10);\n    }\n};\n```\n. ",
    "opreadoru": "Hi jorditost,\nI am having some difficult time adding that code you made into scrollorama js. Did you managed to make that script work?\nmany thanks\n. Hi jorditost,\nI am having some difficult time adding that code you made into scrollorama js. Did you managed to make that script work?\nmany thanks\n. ",
    "parameter": "We are making a site for a star trek/star wars-movie using scrollorama. \nMaking a reload when user resizes the window but the second \"slide\" \nends up way to far down, as if the page was fullscreen, any idea on \nwhat's happening? \n\ncan I also carry on animating elements after the next \"slide\" \ncomes into scrolloramas focus? \n. We are making a site for a star trek/star wars-movie using scrollorama. \nMaking a reload when user resizes the window but the second \"slide\" \nends up way to far down, as if the page was fullscreen, any idea on \nwhat's happening? \n\ncan I also carry on animating elements after the next \"slide\" \ncomes into scrolloramas focus? \n. ",
    "you-rick": "Does anybody find solution with stopping animation when window is resizing?\n. Does anybody find solution with stopping animation when window is resizing?\n. ",
    "armandocanals": "Also, thanks for all the hard work on this. It was really fun to use!\n. I certainly will! Its not up just yet but ill be sure to send you a link once it is. \n. Also, thanks for all the hard work on this. It was really fun to use!\n. I certainly will! Its not up just yet but ill be sure to send you a link once it is. \n. ",
    "ooldesign": "![Screen Shot 2013-01-16 at 7 44 56 PM](https://f.cloud.github.com/assets/2453117/71064/4ab431fa-5fd2-11e2-80f9-2a5d5c33db22.png)\n. ![Screen Shot 2013-01-16 at 7 44 56 PM](https://f.cloud.github.com/assets/2453117/71064/4ab431fa-5fd2-11e2-80f9-2a5d5c33db22.png)\n. ",
    "ranjith48": "can u please elaborate your issue..\n. Open the jquery.fancybox-1.3.4.js file (full version, not pack version) with a text/html editor.\nFind around the line 29 where it says :\n\nisIE6 = $.browser.msie && $.browser.version < 7 && !window.XMLHttpRequest,\n\nand replace it by :\n\nisIE6 = navigator.userAgent.match(/msie/i) && navigator.userAgent.match(/6/) && !window.XMLHttpRequest,\n. can u please elaborate your issue..\n. Open the jquery.fancybox-1.3.4.js file (full version, not pack version) with a text/html editor.\nFind around the line 29 where it says :\n\nisIE6 = $.browser.msie && $.browser.version < 7 && !window.XMLHttpRequest,\n\nand replace it by :\n\nisIE6 = navigator.userAgent.match(/msie/i) && navigator.userAgent.match(/6/) && !window.XMLHttpRequest,\n. ",
    "rustedwolf": "When I start using the plugin it won't run. The console gives me the following error:\n\nTypeError: $.browser is undefined\n[Break On This Error]  \nif ($.browser.mozilla) { browserPrefix = '-moz-'; }...           jquery...rama.js (line 37)\n\nAs I remembered, in the latest 1.9 version of jQuery the $.browser method was removed (it was deprecated since 1.3v er.). The only workarround I've found atm is tu use 1.9 with the jQuery migrate plugin.\n\nI want to know if there will be any changes to scrollorama plugin, that I wouldn't have any need for the jQuery Migrate plugin.\n. When I start using the plugin it won't run. The console gives me the following error:\n\nTypeError: $.browser is undefined\n[Break On This Error]  \nif ($.browser.mozilla) { browserPrefix = '-moz-'; }...           jquery...rama.js (line 37)\n\nAs I remembered, in the latest 1.9 version of jQuery the $.browser method was removed (it was deprecated since 1.3v er.). The only workarround I've found atm is tu use 1.9 with the jQuery migrate plugin.\n\nI want to know if there will be any changes to scrollorama plugin, that I wouldn't have any need for the jQuery Migrate plugin.\n. ",
    "PabloArty": "I have a weird issue, im using this\n\n.animate('.content_about',{duration:1000, property:'bottom', start:-1000})\n\nCSS:\n.content_about{\n    height: 550px;\n    bottom:200px;\n    width: 100%;\n    background: #e4e4e4;\n    position: absolute;\n}\n\nAnd my animation always make a weird jump I don't know why\n. I have a weird issue, im using this\n\n.animate('.content_about',{duration:1000, property:'bottom', start:-1000})\n\nCSS:\n.content_about{\n    height: 550px;\n    bottom:200px;\n    width: 100%;\n    background: #e4e4e4;\n    position: absolute;\n}\n\nAnd my animation always make a weird jump I don't know why\n. ",
    "jhdavids8": "Thank you!\n. Thank you!\n. ",
    "beautifulgarbage": "Found the source of my issue... improper HTML markup...\n. Hey!... sorry sounds like I just missed you.\n\nI had two issues at play. One being the issue you described, setting whatever you use for the scroll block class as a parent instead of the actual elements you want to manipulate.\n\nThe other issue I encountered was with some of my boilerplate CSS that I usually use.\nI had the following CSS:\n\nhtml, body {height:100%; width:100%; min-height:100% min-width:100%; }\n\nScrollorama would not work with this css...\n\nHope that helps!! \n. Found the source of my issue... improper HTML markup...\n. Hey!... sorry sounds like I just missed you.\n\nI had two issues at play. One being the issue you described, setting whatever you use for the scroll block class as a parent instead of the actual elements you want to manipulate.\n\nThe other issue I encountered was with some of my boilerplate CSS that I usually use.\nI had the following CSS:\n\nhtml, body {height:100%; width:100%; min-height:100% min-width:100%; }\n\nScrollorama would not work with this css...\n\nHope that helps!! \n. ",
    "milhaus": "I'm having the same issue and after seeing the 'improper HTML markup' comment from beautifulgarbage I ran my code through the w3c validator and it passed. I'm wondering if I could get some clarification on what the improper markup was that triggered the issue.\n. Figured it out. You have to set the scrollblock class on the parent of the items that are to be animated, not on the items themselves.\n. I'm having the same issue and after seeing the 'improper HTML markup' comment from beautifulgarbage I ran my code through the w3c validator and it passed. I'm wondering if I could get some clarification on what the improper markup was that triggered the issue.\n. Figured it out. You have to set the scrollblock class on the parent of the items that are to be animated, not on the items themselves.\n. ",
    "felipap": "What modification did you do to this boilerplate, @beautifulgarbage ?\n. What modification did you do to this boilerplate, @beautifulgarbage ?\n. ",
    "marksyzm": "Maybe this should be set as a system wide option, so people with very complex and specific slides can disable this by choice OR have a value that allows you to increase the range i.e. 2 = 2 blocks before and after those within viewport, -1 = infinite blocks\n. Just tried it out... works really well and fixed a few issues for me too. Many thanks!\n. Maybe this should be set as a system wide option, so people with very complex and specific slides can disable this by choice OR have a value that allows you to increase the range i.e. 2 = 2 blocks before and after those within viewport, -1 = infinite blocks\n. Just tried it out... works really well and fixed a few issues for me too. Many thanks!\n. ",
    "Hirbod": "This Fix really made my day... thanks a lot!\n. This Fix really made my day... thanks a lot!\n. ",
    "frederickjansen": "You're both welcome. I still hope it makes it into the project, since it's John's most popular one when you look at stars.\n. Sure, just use the onBlockChange event callback\n\n``` javascript\nplayYoutubeOnBlockChange = function() {\n    if (scrollorama.blockIndex === indexOfBlockYouNeed) {\n        // Code to play youtube video\n    }\n};\n\nscrollorama.onBlockChange(playYoutubeOnBlockChange);\n```\n. This will probably fix it: https://github.com/johnpolacek/scrollorama/pull/35\n. You're both welcome. I still hope it makes it into the project, since it's John's most popular one when you look at stars.\n. Sure, just use the onBlockChange event callback\n\n``` javascript\nplayYoutubeOnBlockChange = function() {\n    if (scrollorama.blockIndex === indexOfBlockYouNeed) {\n        // Code to play youtube video\n    }\n};\n\nscrollorama.onBlockChange(playYoutubeOnBlockChange);\n```\n. This will probably fix it: https://github.com/johnpolacek/scrollorama/pull/35\n. ",
    "doughamlin": "@frederickjansen \n\nThis patch is causing an error for me:\n\nUncaught TypeError: Cannot call method 'animate' of undefined main.js:9\n(anonymous function) main.js:9\n(anonymous function) main.js:17\n\nMy main.js:\n\n```\n(function($) {\n  var viewportHeight = $(window).height();\n  var scrollorama = $.scrollorama({\n    blocks: '.block',\n    enablePin: false\n  });\n  scrollorama\n    .animate('#dp1 label', { delay: 500, duration: viewportHeight*1.5, property: 'top', start: 218, end: 0 })\n    .animate('#dp2 label', { delay: 150, duration: viewportHeight*1.5, property: 'top', start: 325, end: 0 })\n    .animate('#b3', { delay: 150, duration: viewportHeight*1.5, property: 'background-position-y', start: 500, end: 0 })\n    .animate('#dp3 label', { delay: 250, duration: viewportHeight*1.5, property: 'top', start: 225, end: 0 })\n    .animate('#dp4 label', { delay: 250, duration: viewportHeight*1.5, property: 'top', start: 225, end: 0 })\n    .animate('#dp5 label', { delay: 250, duration: viewportHeight*1.5, property: 'top', start: 225, end: 0 })\n    .animate('#dp6 label', { delay: 250, duration: viewportHeight*1.5, property: 'top', start: 500, end: 0 })\n    .animate('#dp7 label', { delay: 650, duration: viewportHeight*1.5, property: 'top', start: 500, end: 0 })\n    .animate('#dp8 label', { delay: 1550, duration: viewportHeight*1.5, property: 'top', start: 500, end: 0 });\n})(jQuery);\n```\n. @frederickjansen \n\nThis patch is causing an error for me:\n\nUncaught TypeError: Cannot call method 'animate' of undefined main.js:9\n(anonymous function) main.js:9\n(anonymous function) main.js:17\n\nMy main.js:\n\n```\n(function($) {\n  var viewportHeight = $(window).height();\n  var scrollorama = $.scrollorama({\n    blocks: '.block',\n    enablePin: false\n  });\n  scrollorama\n    .animate('#dp1 label', { delay: 500, duration: viewportHeight*1.5, property: 'top', start: 218, end: 0 })\n    .animate('#dp2 label', { delay: 150, duration: viewportHeight*1.5, property: 'top', start: 325, end: 0 })\n    .animate('#b3', { delay: 150, duration: viewportHeight*1.5, property: 'background-position-y', start: 500, end: 0 })\n    .animate('#dp3 label', { delay: 250, duration: viewportHeight*1.5, property: 'top', start: 225, end: 0 })\n    .animate('#dp4 label', { delay: 250, duration: viewportHeight*1.5, property: 'top', start: 225, end: 0 })\n    .animate('#dp5 label', { delay: 250, duration: viewportHeight*1.5, property: 'top', start: 225, end: 0 })\n    .animate('#dp6 label', { delay: 250, duration: viewportHeight*1.5, property: 'top', start: 500, end: 0 })\n    .animate('#dp7 label', { delay: 650, duration: viewportHeight*1.5, property: 'top', start: 500, end: 0 })\n    .animate('#dp8 label', { delay: 1550, duration: viewportHeight*1.5, property: 'top', start: 500, end: 0 });\n})(jQuery);\n```\n. ",
    "cointilt": "If you are using bower or any other dependency manager you will not see the fix since it has not been tagged.\n. If you are using bower or any other dependency manager you will not see the fix since it has not been tagged.\n. ",
    "CSobol": "+1\n. +1\n. ",
    "bretmorris": "@johnpolacek not sure if this is helpful but I was able to resolve this issue for my project. \n\nI simply set the height of the container element to equal the `duration of the pin + the height of the viewport`. Hope this helps. Thanks again for the plugin!\n. @johnpolacek not sure if this is helpful but I was able to resolve this issue for my project. \n\nI simply set the height of the container element to equal the `duration of the pin + the height of the viewport`. Hope this helps. Thanks again for the plugin!\n. ",
    "Soviut": "+1 If you can use it in the browser it should be on bower!\n. Fire your client.\n. +1 If you can use it in the browser it should be on bower!\n. Fire your client.\n. ",
    "callumacrae": "Yep, I found that through the SuperScrollorama README and I'm using it now :smile: \n. Yep, I found that through the SuperScrollorama README and I'm using it now :smile: \n. "
}