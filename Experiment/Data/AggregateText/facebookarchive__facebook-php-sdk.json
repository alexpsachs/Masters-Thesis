{
    "mikesherov": "I signed the document listed here: https://developers.facebook.com/opensource/cla\n. @ThomasWunderlich that doesn't also clear the session data in PHP. If the user has granted offline_access (which I know is now deprecated), they aren't really ever logged out. Try it. \n\nThe correct way to log someone out fully is remove the session data from your own server, then direct the user to logout of facebook as well.\n. I signed the document listed here: https://developers.facebook.com/opensource/cla\n. I've signed the document listed here: https://developers.facebook.com/opensource/cla\n. +1\n. I signed the document listed here: https://developers.facebook.com/opensource/cla\n. @ThomasWunderlich that doesn't also clear the session data in PHP. If the user has granted offline_access (which I know is now deprecated), they aren't really ever logged out. Try it. \n\nThe correct way to log someone out fully is remove the session data from your own server, then direct the user to logout of facebook as well.\n. I signed the document listed here: https://developers.facebook.com/opensource/cla\n. I've signed the document listed here: https://developers.facebook.com/opensource/cla\n. +1\n. ",
    "ThomasWunderlich": "There's already a login/logout function, take a look at example.php\n. There's already a login/logout function, take a look at example.php\n. ",
    "antoineguiral": "and remove the cookie too, no?\n. and remove the cookie too, no?\n. ",
    "diegoholiveira": ":+1:\n. :+1:\n. ",
    "lacker": "Sorry for not getting to this before now. But, I think in general we are not trying to include PEAR support as part of the supported stuff in this SDK in favor of Composer at this time.\n. Sorry for not getting to this before now. But, it seems like this is the sort of thing that is better maintained as a separate codebase rather than part of this supported SDK. Let me know if there is a specific rationale for why this should be in the official SDK.\n. Sorry for not getting to this before now. Unfortunately, since there are merge conflicts and this was a relatively minor thing in the first place, it's probably just better to let this drop. Sorry about that. Thanks for your contribution and if you do want to get this into master then please reopen another request.\n. This seems like a good idea. Sorry for not getting to this before now!\n. Sorry for not getting to this before now. It seems like in this case, if you want to do this it's pretty straightforward to include this as a function in your own code rather than in the SDK and for maintenance purposes I think it would be cleaner to do so. Thanks for the suggestion though!\n. Sorry for not getting to this before now. These changes look pretty good - thanks for cleaning this stuff up!\n. Sorry for not getting to this before now. But, it does seem like this task got completed along the way. Thanks for your effort here - we will try to be more prompt in the future.\n. Hey, thanks for catching this. Would you mind adding a test? If you're like, hey man this was a year ago, then okay, we should probably add this ourselves, but then we should go write a test before sticking this in.\n. Sorry for not getting to this before now. But, it does seem like this task got completed along the way. Thanks for your effort here - we will try to be more prompt in the future.\n. Sorry for not getting to this before now. But, it does seem like this task got completed along the way. Thanks for your effort here - we will try to be more prompt in the future.\n. Yeah, since this is just changing the app id we don't want to accept it. Sorry\n. It looks like this was a mistaken commit, because this wouldn't be a logical component of the PHP SDK. You should probably delete this from anywhere public, actually, since it contains your app secret. Or reset your app secret.\n. Sorry for not getting to this before now. But, I think in general we are not trying to include PEAR support as part of the supported stuff in this SDK in favor of Composer at this time.\n. Sorry for not getting to this before now. But, it seems like this is the sort of thing that is better maintained as a separate codebase rather than part of this supported SDK. Let me know if there is a specific rationale for why this should be in the official SDK.\n. Sorry for not getting to this before now. Unfortunately, since there are merge conflicts and this was a relatively minor thing in the first place, it's probably just better to let this drop. Sorry about that. Thanks for your contribution and if you do want to get this into master then please reopen another request.\n. This seems like a good idea. Sorry for not getting to this before now!\n. Sorry for not getting to this before now. It seems like in this case, if you want to do this it's pretty straightforward to include this as a function in your own code rather than in the SDK and for maintenance purposes I think it would be cleaner to do so. Thanks for the suggestion though!\n. Sorry for not getting to this before now. These changes look pretty good - thanks for cleaning this stuff up!\n. Sorry for not getting to this before now. But, it does seem like this task got completed along the way. Thanks for your effort here - we will try to be more prompt in the future.\n. Hey, thanks for catching this. Would you mind adding a test? If you're like, hey man this was a year ago, then okay, we should probably add this ourselves, but then we should go write a test before sticking this in.\n. Sorry for not getting to this before now. But, it does seem like this task got completed along the way. Thanks for your effort here - we will try to be more prompt in the future.\n. Sorry for not getting to this before now. But, it does seem like this task got completed along the way. Thanks for your effort here - we will try to be more prompt in the future.\n. Yeah, since this is just changing the app id we don't want to accept it. Sorry\n. It looks like this was a mistaken commit, because this wouldn't be a logical component of the PHP SDK. You should probably delete this from anywhere public, actually, since it contains your app secret. Or reset your app secret.\n. ",
    "takwing": "+1\n. +1\n. ",
    "ekagreen": "i have some error on\nbase_facebook.php\nUncaught OAuthException:\n(#100) Sorry, this post contains a\nblocked URL thrown in\nbase_facebook.php on line 1106\ncan you help me?\n. i have some error on base_facebook.php\n\nUncaught OAuthException: (#100) Sorry, this post contains a blocked URL thrown in base_facebook.php on line 1106\n\ncan you help me?\n. i have some error on\nbase_facebook.php\nUncaught OAuthException:\n(#100) Sorry, this post contains a\nblocked URL thrown in\nbase_facebook.php on line 1106\ncan you help me?\n. i have some error on base_facebook.php\n\nUncaught OAuthException: (#100) Sorry, this post contains a blocked URL thrown in base_facebook.php on line 1106\n\ncan you help me?\n. ",
    "GeorgeGardiner": "I've also had this problem trying to use the Facebook Notifications API (https://developers.facebook.com/docs/games/notifications/) through Facebook PHP SDK. The solution currently does indeed appear to be changing getApplicationAccessToken from protected to public and doing something like this:\n\n$userToken = $facebook->getAccessToken();\n$facebook->setAccessToken($facebook->getApplicationToken());\n$facebook->api('/'.$id.'/notifications', 'POST', array('template'=>'You just got a new message.'));\n$facebook->setAccessToken($userToken);\n\nWould be interested to learn from someone more familiar with the SDK if this is considered a decent way of doing things.\n. I've also had this problem trying to use the Facebook Notifications API (https://developers.facebook.com/docs/games/notifications/) through Facebook PHP SDK. The solution currently does indeed appear to be changing getApplicationAccessToken from protected to public and doing something like this:\n\n$userToken = $facebook->getAccessToken();\n$facebook->setAccessToken($facebook->getApplicationToken());\n$facebook->api('/'.$id.'/notifications', 'POST', array('template'=>'You just got a new message.'));\n$facebook->setAccessToken($userToken);\n\nWould be interested to learn from someone more familiar with the SDK if this is considered a decent way of doing things.\n. ",
    "GromNaN": "I've accepted the CLA, can you review this PR ?\n. I've accepted the CLA, can you review this PR ?\n. ",
    "gfosco": "Sorry it took this long to respond to this.  At this time, there are merge conflicts, and I have a question: Is there a better or more comprehensive way to validate the signed_request?  What are the scenarios where signed_request is modified or empty causing it to log a notice?  If you want to update the PR and re-open this, we can look into this further.  Thanks for your contribution.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at this further. Thanks for your contribution.\n. Sorry it took so long to respond to this.  I agree this is a good change, to allow the override of the redirect_uri.  There are merge conflicts now, would you be able/willing to update this for the current master?  Thanks for your contribution.\n. It looks like this can be solved by passing in a param option of \"redirect_uri\" to the getLoginUrl method.  Closing for now, can reopen if you'd like to discuss.\n. Sorry it took so long to respond to this, and thank you for your contribution.  This topic will now be tracked by Issue #103 for future enhancement.  \n. Sorry it took so long to respond to this, and thank you for your contribution.  This topic will now be tracked by Issue #103 for future enhancement.  \n. Sorry it took so long to respond to this.  Can you sign the Contributor License Agreement?  https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at merging this.  Thanks for your contribution.\n. If you're still experiencing this issue, let me know.  Closing for now.\n. Per php.net, implode accepts its params in either order.  May as well not change it now, but it will likely be changed in future changes.  Thanks for your contribution.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nAt this time, there are merge conflicts.. Would you be willing to update this for the current master?\n\nOnce that's done we can look at merging this. Thanks for your contribution.\n. Sorry we did not respond to this sooner.  Thanks for your input but this isn't a change we want to make.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at this further. I'm concerned that using the hardcoded URL may not be the best solution, but it can be discussed.  Thanks for your contribution.\n. I spoke too quick.  We discussed this internally and at this time we do not want to add this to the core SDK.\n. Sorry it took so long to respond to this.  Would you be able to add a test case for this?  Let us know if not and we can deal with it in another commit.  Thanks for your contribution.\n. This will be corrected in PR #106.  Thanks again.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nAt this time, there are merge conflicts.  Would you be willing to update this for the current master?\n\nThanks for your contribution.\n. Really appreciate your work here, and like the idea.  This is a sizable enough addition that we'd like to thoroughly design and develop the feature in-house, preferably after some other modernization releases.  This will be tracked by issue #105.\n. Thanks for your input but I agree with oyvindkinsey.  Developers can later encode the URL if necessary.\n. Sorry it took so long to respond to this, and thank you for your contribution.  This topic will now be tracked by Issue #103 for future enhancement.  \n. Hi,  Would you be able to add some test cases and sign the CLA and then open a new PR for this?  Please try and provide some details on when/how this situation is triggered.  Thank you for your contribution.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at merging this. Thanks for your contribution.\n. So the issue with this is that the SDK is currently compatible with PHP 5.2 as the lowest requirement.  Switching to static:: will break 5.2.  Another PR, 81 was submitted which changes it to an instance method, but that would also break existing code.  I think this will have to be delayed until we make larger changes and a new release for PHP 5.4 and higher.\n. Due to the breaking change issue, this will be closed.  A future version of the SDK which requires a more recent version of PHP will support this static method.  Thanks again.\n. Sorry this was not responded to sooner.  At this time there are merge conflicts, and I really do not think we want to remove exception handling from the SDK.  If there is still a valid reason for changing this, please update and open a new request.  Thanks for your input.\n. Sorry this was not responded to sooner.  It looks like this was updated somewhere along the way.  Thanks for your input.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at merging this. Thanks for your contribution.\n. Thanks for your contribution Dominik!\n. Sorry it took so long to respond to this, and thank you for your contribution.  This topic will now be tracked by Issue #103 for future enhancement.  \n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at merging this. Thanks for your contribution.  If you don't want to sign it, we can fix this with a separate commit.\n. Thank you.  This will be addressed with PR #95 \n. Sorry it took this long to respond to this.  We're tracking several issues to be corrected soon, many of which include the CURL options.  I'm going to close this and it will be addressed along with some other issues in a future commit.  Related PRs: 16, 18, 36, 52, and we'll look into the session_start issue as well.  Thanks for your feedback.\n. Sorry this was not responded to sooner.  At this time there are merge conflicts, and it's really not clear what you are attempting to update here.  Please let us know if you think there's something worth changing.\n. Thanks for your contribution!!\n. What error?\n. Hi Gary, \n\nThanks for your contribution.  I agree this would be a good change to make.  Can you please sign the Contributor License Agreement?  https://developers.facebook.com/opensource/cla\n. Thanks for your contribution Gary!\n. Hi Gary,\n\nThis sounds like a good addition to the library.  Once you've signed the CLA (I commented on one of your other PRs with the URL,) we can further review and consider this.\n\nThanks for your contribution,\n\nFosco\n. We'll look to add batch support to a future release, after the main codebase is refactored and namespaced with newer PHP features.  We also want to spend some time designing the API and fully test it.  It will be tracked by issue #109 \n\nThanks for your contribution.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement and then re-open this? https://developers.facebook.com/opensource/cla\n\nIn what scenario is there a full host inside of REQUEST_URI?  The documentation states it will only contain the path name (i.e. /index.html)\n\nThanks for your contribution.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at merging this. Thanks for your contribution.\n. Will get back to you about this soon, hopefully this week.  We had discussed internally and want to suggest a few changes.\n. Can you add a space between the 'if' and the opening parenthesis on line 1024?\n. Can you please sign the Contributor License Agreement and re-open this?  https://developers.facebook.com/opensource/cla\n\nIf not, we'll fix this in a separate commit.  Thanks for your contribution.\n. Sorry it took so long to respond to this, and thank you for your contribution.  This topic will now be tracked by Issue #103 for future enhancement.  \n. Hi, \n\nSorry it took so long to respond to this.  Can you complete the Contributor License Agreement and re-open this?  https://developers.facebook.com/opensource/cla\n\nOnce that's complete we can look at this further.  Thanks for your contribution,\n\nFosco\n. Can you elaborate a little on the problem this is solving?  I mostly understand your description, but is something broken / not working?  Or is it just less efficient?\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at this further, but it looks like a good idea. Thanks for your contribution.\n. We'll address this and other enhancements for the access token in future releases.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement and re-open this? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at merging this. Thanks for your contribution. (Related PR #65)\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement and re-open this? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at this further. Thanks for your contribution.\n. Since this isn't broken, we've decided not to merge this.  The change may be made at some point in the future as the code is modernized.  \n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement and re-open this? https://developers.facebook.com/opensource/cla\n\nThere are 3 PRs which cover this, so if you're not interested in signing the CLA we'll correct it in another commit.\n\nThanks for your contribution.\n. Sorry it took so long to respond to this.  Thanks for your contribution, but at this time we do not wish to add this functionality to the core SDK.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at merging this. Thanks for your contribution.\n. Sorry it took so long to respond to this.  This will be corrected with PR #98 which was originally PR #76.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nRelated PR #38 \n\nUsing $this maintains 5.2 compatibility but would still be considered a breaking change, I assume, do to removal of static qualifier, as referenced by the tests needing to change.\n\nOnce that's done we can look at this further. Thanks for your contribution.\n. Due to the breaking change issue, this will be closed.  A future version of the SDK which requires a more recent version of PHP will support this static method.  Thanks again.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement and re-open this? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at this further. Thanks for your contribution.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement and re-open this? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at merging this. Thanks for your contribution.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at merging this. Thanks for your contribution.\n. When you run PHPUnit, are you including the --stderr flag?  Does this notice ever fire outside of the test script?  We saw this ourselves when testing some PRs yesterday and as long as the stderr flag is present, the notices didn't fire.  I'm hesitant to make this change without a larger need outside of the PHPUnit process.\n. Discussed internally and this is an issue with the testing suite only, as far as we can determine.  Any output occurring prior to the session_start call will trigger this, and that's why using --stderr corrects it while running tests.  Changing how the actual framework functions outside of testing is not desirable.  We'll keep an eye on this for future versions.  Thanks again.\n. Sorry it took this long to respond to this.  Thanks for your contribution, but at this time we do not wish to add this functionality to the core SDK.  \n. The scope of the change is not insignificant, and would be difficult to test, which is not included with the PR.  There is not a significant demand for this feature and it would increase our surface area for maintenance.  We have quite a few plans for enhancing this project and making it PHP-FIG standards compliant, once we can work through the backlog of requests and contributions.  It's possible that after we get to that point, we may be more open to this change. \n. Sorry it took this long to respond to this.  Thanks for your contribution, but this specific issue will be corrected with PR #61.\n. It's not immediately clear what problem this PR is attempting to solve.  There are a few other PRs about session tokens, which may address your issue.  If you'd like to explain further please elaborate, add test cases to cover the scenarios, and create a new PR.  Thanks for your contribution.\n. Thanks but not sure what this is, does not look like it belongs as part of the SDK.\n. When updated against master, the PR now contains a lot more than your original one line change... Would it be possible for you to submit a new PR with just that one line, and the last comment you made?\n. Yeah that was my fault.. Since it wasn't rebased for the last update, I asked for a new PR and closed it.  It's not a big deal.\n. Would you be able to add a test case to cover these 2 scenarios?\n. If you can add test cases here I will re-open this.  If not we will try and address this in another commit.  Thanks for your contribution. \n. Ah, just realized you added the test cases..  Ok, will look at this soon.\n. Thanks for your contribution!\n. Sorry it took this long to respond to this.  Thanks for your contribution.  In order for us to consider merging this, can you sign the Contributor License Agreement?  https://developers.facebook.com/opensource/cla\n\nOnce signed, comment here and I will re-open this.\n. Is it possible to add a test case for this that hits both scenarios?\n. Hi @kl3ryk will you be adding test cases?\n\nThanks\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at merging this. Thanks for your contribution.\n. After some discussion we decided not to merge this.  It's our feeling that the app secret proof should be sent, and may at some point be required.\n. What is the scenario where the SDK doesn't have access to the app secret?  Seems like something it should have..\n. Thanks for your contribution Giulio!\n. Sorry about this, but we discussed this internally and decided not to add this to the readme file.  Thanks for contributing and let us know if you have further ideas.\n. Thanks for your contribution Steve!\n. Thanks for your contribution.  In order for us to consider this, can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n. Sorry, we've decided not to add this to the main SDK.  We'll keep it in mind as the framework matures.\n. What is a scenario where the signed_request is malformed?\n. I understand what it does, but what scenarios will cause the signed_request to not have the '.' ?\n. Sorry.. I appreciate your work on this.  The main issue is we don't want to make parseSignedRequest public.  It is easier to test if public, but, that's a no go.  We'll have to add a more complicated test in the future.  This and the previous PR will be closed and the issue corrected by PR #104 if accepted.\n. If you can remove the FQL example we may be able to merge the first example.  The FQL method is not recommended as it will use older APIs.\n. Is there an operator precedence reason for using 'and' instead of '&&' here?  We'd prefer && for consistency sake, but will agree to merge without a test case in this situation.\n. Can you change it? It's your PR :) Thanks Phil\n. Instead of using strtok, can you switch this to using explode and grabbing the first item?\n. Hi,\n\nWould really like to see this done without using stateful methods.  array_filter/current falls in to the same category as str_tok.  Can you modify it to work like this:\n\n``` php\n    protected function getHttpHost() {\n      if ($this->trustForwarded && isset($_SERVER['HTTP_X_FORWARDED_HOST'])) {\n        $forwardProxies = explode(',', $_SERVER['HTTP_X_FORWARDED_HOST']);\n        if (!empty($forwardProxies)) {\n          return $forwardProxies[0];\n        }\n      }\n      return $_SERVER['HTTP_HOST'];\n    }\n```\n\nThis way it will be checked for the scenario that explode returns FALSE or the array is otherwise empty, and it allows the logic to fall through and return the normal HTTP_HOST value.\n\nAlso, you will need to sign the Contributor License Agreement before this can be merged:  https://developers.facebook.com/opensource/cla\n\nThanks,\n\nFosco\n. Merged.. Thanks for your contribution!\n. Thanks for the contribution!\n. Updated this separately, thanks for noticing.  Please sign the Contributor License Agreement so your future requests can be considered for merging: https://developers.facebook.com/opensource/cla\n. Oh.. Sorry about that.  Our internal tool had not yet updated your compliance flag.\n. Cool..  Thanks for helping document this better.\n\nCan you sign the Contributor License Agreement?  https://developers.facebook.com/opensource/cla\n\nLooks like like 793 and 1378 in base_facebook could use a blank comment line before the @return\n\nlines 1188-1190, 1462-1463, 1477-1478 the spacing should be updated so the $ align and the comments after them align.\n. Ok.. Will check on that and get back to you.\n. Thanks for your contribution!\n. Thank you very much for your contribution.  Looks good, merging it.\n. Thanks but this isn't a constructive pull request.\n. Thanks for your interest, but without a thorough explanation of this issue and its severity, we can't consider accepting it.  I feel like this should be handled by the outbound headers specifying the accepted response type.  Since this is not a commonly reported issue, perhaps a proxy is a cause.\n. If this is not a breaking issue, or causing some harm, we'd rather not make this change to the main SDK at this time.  Thanks for your interest, and we'll keep your feedback in mind for our future development plans here.\n. Can you please sign the Contributor License Agreement?  https://developers.facebook.com/opensource/cla\n\nOnce this is done we can consider this addition (looks good to me.)\n. The URL generation is pretty trivial, doesn't involve any IO or network requests, so this won't have a meaningful impact.  Thanks for your contribution but we have decided not to merge it. \n. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce this is done we can consider making this change..  Thanks.\n. On line 536 you're mutating the access_token... After closer inspection it doesn't look like we want to accept this change to the main repository.  Thanks.\n. Can you sign the Contributor License Agreement?  https://developers.facebook.com/opensource/cla\n\nOnce this is signed we can consider making this change.  Thanks.\n. Can you change this to combine the conditionals?\n\n```\nif ((function_exists('session_status') \n  && session_status() !== PHP_SESSION_ACTIVE) || !session_id()) {\n  session_start();\n}\n```\n. A PSR compliant PHP 5.4+ version is in the works (shh), and you're correct that this repo isn't the right spot for it due to the breaking nature of the changes.  Appreciate the support.\n. I like this idea, but it's not something we want to commit to master right now, especially without test cases.  Generally, I don't think apps should or need to make a lot of requests to the point where reusing the curl handler is beneficial.  Thank you.\n. Not that I'm assuming they all have the same needs, just that the main SDK is to cover the majority of needs.  As you've been using this code for 2 years, it shows that since the SDK is open source you're free to customize it.\n. Is this error_code checking causing an actual problem in practice, or is this just theoretical?  I'm going to close this for now.\n. The SDK is pretty general, having only an api() method for making all calls to the Graph API.  This type of function is what developers should have in their own project.  Thanks for your interest.\n. Thanks for this Sammy.  Closing as all future development will occur on the new SDK.  https://github.com/facebook/facebook-php-sdk-v4\n. Thanks for this Sammy.  Closing as all future development will occur on the new SDK.  https://github.com/facebook/facebook-php-sdk-v4\n. Thanks for this Sammy.  Closing as all future development will occur on the new SDK.  https://github.com/facebook/facebook-php-sdk-v4\n. Thanks for this Sammy.  Closing as all future development will occur on the new SDK.  https://github.com/facebook/facebook-php-sdk-v4\n. Thanks for this Sammy.  Closing as all future development will occur on the new SDK.  https://github.com/facebook/facebook-php-sdk-v4\n. Thanks for this Sammy.  Closing as all future development will occur on the new SDK.  https://github.com/facebook/facebook-php-sdk-v4\n. merged #182\n. Closing this issue as this repository is archived.  The current version of the SDK can be found at facebook/facebook-php-sdk-v4\n. Closing this issue as this repository is archived.  The current version of the SDK can be found at facebook/facebook-php-sdk-v4\n. Closing this issue as this repository is archived.  The current version of the SDK can be found at facebook/facebook-php-sdk-v4\n. Closing this issue as this repository is archived.  The current version of the SDK can be found at facebook/facebook-php-sdk-v4\n. Closing this issue as this repository is archived.  The current version of the SDK can be found at facebook/facebook-php-sdk-v4\n. Sorry it took this long to respond to this.  At this time, there are merge conflicts, and I have a question: Is there a better or more comprehensive way to validate the signed_request?  What are the scenarios where signed_request is modified or empty causing it to log a notice?  If you want to update the PR and re-open this, we can look into this further.  Thanks for your contribution.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at this further. Thanks for your contribution.\n. Sorry it took so long to respond to this.  I agree this is a good change, to allow the override of the redirect_uri.  There are merge conflicts now, would you be able/willing to update this for the current master?  Thanks for your contribution.\n. It looks like this can be solved by passing in a param option of \"redirect_uri\" to the getLoginUrl method.  Closing for now, can reopen if you'd like to discuss.\n. Sorry it took so long to respond to this, and thank you for your contribution.  This topic will now be tracked by Issue #103 for future enhancement.  \n. Sorry it took so long to respond to this, and thank you for your contribution.  This topic will now be tracked by Issue #103 for future enhancement.  \n. Sorry it took so long to respond to this.  Can you sign the Contributor License Agreement?  https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at merging this.  Thanks for your contribution.\n. If you're still experiencing this issue, let me know.  Closing for now.\n. Per php.net, implode accepts its params in either order.  May as well not change it now, but it will likely be changed in future changes.  Thanks for your contribution.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nAt this time, there are merge conflicts.. Would you be willing to update this for the current master?\n\nOnce that's done we can look at merging this. Thanks for your contribution.\n. Sorry we did not respond to this sooner.  Thanks for your input but this isn't a change we want to make.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at this further. I'm concerned that using the hardcoded URL may not be the best solution, but it can be discussed.  Thanks for your contribution.\n. I spoke too quick.  We discussed this internally and at this time we do not want to add this to the core SDK.\n. Sorry it took so long to respond to this.  Would you be able to add a test case for this?  Let us know if not and we can deal with it in another commit.  Thanks for your contribution.\n. This will be corrected in PR #106.  Thanks again.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nAt this time, there are merge conflicts.  Would you be willing to update this for the current master?\n\nThanks for your contribution.\n. Really appreciate your work here, and like the idea.  This is a sizable enough addition that we'd like to thoroughly design and develop the feature in-house, preferably after some other modernization releases.  This will be tracked by issue #105.\n. Thanks for your input but I agree with oyvindkinsey.  Developers can later encode the URL if necessary.\n. Sorry it took so long to respond to this, and thank you for your contribution.  This topic will now be tracked by Issue #103 for future enhancement.  \n. Hi,  Would you be able to add some test cases and sign the CLA and then open a new PR for this?  Please try and provide some details on when/how this situation is triggered.  Thank you for your contribution.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at merging this. Thanks for your contribution.\n. So the issue with this is that the SDK is currently compatible with PHP 5.2 as the lowest requirement.  Switching to static:: will break 5.2.  Another PR, 81 was submitted which changes it to an instance method, but that would also break existing code.  I think this will have to be delayed until we make larger changes and a new release for PHP 5.4 and higher.\n. Due to the breaking change issue, this will be closed.  A future version of the SDK which requires a more recent version of PHP will support this static method.  Thanks again.\n. Sorry this was not responded to sooner.  At this time there are merge conflicts, and I really do not think we want to remove exception handling from the SDK.  If there is still a valid reason for changing this, please update and open a new request.  Thanks for your input.\n. Sorry this was not responded to sooner.  It looks like this was updated somewhere along the way.  Thanks for your input.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at merging this. Thanks for your contribution.\n. Thanks for your contribution Dominik!\n. Sorry it took so long to respond to this, and thank you for your contribution.  This topic will now be tracked by Issue #103 for future enhancement.  \n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at merging this. Thanks for your contribution.  If you don't want to sign it, we can fix this with a separate commit.\n. Thank you.  This will be addressed with PR #95 \n. Sorry it took this long to respond to this.  We're tracking several issues to be corrected soon, many of which include the CURL options.  I'm going to close this and it will be addressed along with some other issues in a future commit.  Related PRs: 16, 18, 36, 52, and we'll look into the session_start issue as well.  Thanks for your feedback.\n. Sorry this was not responded to sooner.  At this time there are merge conflicts, and it's really not clear what you are attempting to update here.  Please let us know if you think there's something worth changing.\n. Thanks for your contribution!!\n. What error?\n. Hi Gary, \n\nThanks for your contribution.  I agree this would be a good change to make.  Can you please sign the Contributor License Agreement?  https://developers.facebook.com/opensource/cla\n. Thanks for your contribution Gary!\n. Hi Gary,\n\nThis sounds like a good addition to the library.  Once you've signed the CLA (I commented on one of your other PRs with the URL,) we can further review and consider this.\n\nThanks for your contribution,\n\nFosco\n. We'll look to add batch support to a future release, after the main codebase is refactored and namespaced with newer PHP features.  We also want to spend some time designing the API and fully test it.  It will be tracked by issue #109 \n\nThanks for your contribution.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement and then re-open this? https://developers.facebook.com/opensource/cla\n\nIn what scenario is there a full host inside of REQUEST_URI?  The documentation states it will only contain the path name (i.e. /index.html)\n\nThanks for your contribution.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at merging this. Thanks for your contribution.\n. Will get back to you about this soon, hopefully this week.  We had discussed internally and want to suggest a few changes.\n. Can you add a space between the 'if' and the opening parenthesis on line 1024?\n. Can you please sign the Contributor License Agreement and re-open this?  https://developers.facebook.com/opensource/cla\n\nIf not, we'll fix this in a separate commit.  Thanks for your contribution.\n. Sorry it took so long to respond to this, and thank you for your contribution.  This topic will now be tracked by Issue #103 for future enhancement.  \n. Hi, \n\nSorry it took so long to respond to this.  Can you complete the Contributor License Agreement and re-open this?  https://developers.facebook.com/opensource/cla\n\nOnce that's complete we can look at this further.  Thanks for your contribution,\n\nFosco\n. Can you elaborate a little on the problem this is solving?  I mostly understand your description, but is something broken / not working?  Or is it just less efficient?\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at this further, but it looks like a good idea. Thanks for your contribution.\n. We'll address this and other enhancements for the access token in future releases.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement and re-open this? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at merging this. Thanks for your contribution. (Related PR #65)\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement and re-open this? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at this further. Thanks for your contribution.\n. Since this isn't broken, we've decided not to merge this.  The change may be made at some point in the future as the code is modernized.  \n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement and re-open this? https://developers.facebook.com/opensource/cla\n\nThere are 3 PRs which cover this, so if you're not interested in signing the CLA we'll correct it in another commit.\n\nThanks for your contribution.\n. Sorry it took so long to respond to this.  Thanks for your contribution, but at this time we do not wish to add this functionality to the core SDK.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at merging this. Thanks for your contribution.\n. Sorry it took so long to respond to this.  This will be corrected with PR #98 which was originally PR #76.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nRelated PR #38 \n\nUsing $this maintains 5.2 compatibility but would still be considered a breaking change, I assume, do to removal of static qualifier, as referenced by the tests needing to change.\n\nOnce that's done we can look at this further. Thanks for your contribution.\n. Due to the breaking change issue, this will be closed.  A future version of the SDK which requires a more recent version of PHP will support this static method.  Thanks again.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement and re-open this? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at this further. Thanks for your contribution.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement and re-open this? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at merging this. Thanks for your contribution.\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at merging this. Thanks for your contribution.\n. When you run PHPUnit, are you including the --stderr flag?  Does this notice ever fire outside of the test script?  We saw this ourselves when testing some PRs yesterday and as long as the stderr flag is present, the notices didn't fire.  I'm hesitant to make this change without a larger need outside of the PHPUnit process.\n. Discussed internally and this is an issue with the testing suite only, as far as we can determine.  Any output occurring prior to the session_start call will trigger this, and that's why using --stderr corrects it while running tests.  Changing how the actual framework functions outside of testing is not desirable.  We'll keep an eye on this for future versions.  Thanks again.\n. Sorry it took this long to respond to this.  Thanks for your contribution, but at this time we do not wish to add this functionality to the core SDK.  \n. The scope of the change is not insignificant, and would be difficult to test, which is not included with the PR.  There is not a significant demand for this feature and it would increase our surface area for maintenance.  We have quite a few plans for enhancing this project and making it PHP-FIG standards compliant, once we can work through the backlog of requests and contributions.  It's possible that after we get to that point, we may be more open to this change. \n. Sorry it took this long to respond to this.  Thanks for your contribution, but this specific issue will be corrected with PR #61.\n. It's not immediately clear what problem this PR is attempting to solve.  There are a few other PRs about session tokens, which may address your issue.  If you'd like to explain further please elaborate, add test cases to cover the scenarios, and create a new PR.  Thanks for your contribution.\n. Thanks but not sure what this is, does not look like it belongs as part of the SDK.\n. When updated against master, the PR now contains a lot more than your original one line change... Would it be possible for you to submit a new PR with just that one line, and the last comment you made?\n. Yeah that was my fault.. Since it wasn't rebased for the last update, I asked for a new PR and closed it.  It's not a big deal.\n. Would you be able to add a test case to cover these 2 scenarios?\n. If you can add test cases here I will re-open this.  If not we will try and address this in another commit.  Thanks for your contribution. \n. Ah, just realized you added the test cases..  Ok, will look at this soon.\n. Thanks for your contribution!\n. Sorry it took this long to respond to this.  Thanks for your contribution.  In order for us to consider merging this, can you sign the Contributor License Agreement?  https://developers.facebook.com/opensource/cla\n\nOnce signed, comment here and I will re-open this.\n. Is it possible to add a test case for this that hits both scenarios?\n. Hi @kl3ryk will you be adding test cases?\n\nThanks\n. Sorry it took so long to respond to this. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce that's done we can look at merging this. Thanks for your contribution.\n. After some discussion we decided not to merge this.  It's our feeling that the app secret proof should be sent, and may at some point be required.\n. What is the scenario where the SDK doesn't have access to the app secret?  Seems like something it should have..\n. Thanks for your contribution Giulio!\n. Sorry about this, but we discussed this internally and decided not to add this to the readme file.  Thanks for contributing and let us know if you have further ideas.\n. Thanks for your contribution Steve!\n. Thanks for your contribution.  In order for us to consider this, can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n. Sorry, we've decided not to add this to the main SDK.  We'll keep it in mind as the framework matures.\n. What is a scenario where the signed_request is malformed?\n. I understand what it does, but what scenarios will cause the signed_request to not have the '.' ?\n. Sorry.. I appreciate your work on this.  The main issue is we don't want to make parseSignedRequest public.  It is easier to test if public, but, that's a no go.  We'll have to add a more complicated test in the future.  This and the previous PR will be closed and the issue corrected by PR #104 if accepted.\n. If you can remove the FQL example we may be able to merge the first example.  The FQL method is not recommended as it will use older APIs.\n. Is there an operator precedence reason for using 'and' instead of '&&' here?  We'd prefer && for consistency sake, but will agree to merge without a test case in this situation.\n. Can you change it? It's your PR :) Thanks Phil\n. Instead of using strtok, can you switch this to using explode and grabbing the first item?\n. Hi,\n\nWould really like to see this done without using stateful methods.  array_filter/current falls in to the same category as str_tok.  Can you modify it to work like this:\n\n``` php\n    protected function getHttpHost() {\n      if ($this->trustForwarded && isset($_SERVER['HTTP_X_FORWARDED_HOST'])) {\n        $forwardProxies = explode(',', $_SERVER['HTTP_X_FORWARDED_HOST']);\n        if (!empty($forwardProxies)) {\n          return $forwardProxies[0];\n        }\n      }\n      return $_SERVER['HTTP_HOST'];\n    }\n```\n\nThis way it will be checked for the scenario that explode returns FALSE or the array is otherwise empty, and it allows the logic to fall through and return the normal HTTP_HOST value.\n\nAlso, you will need to sign the Contributor License Agreement before this can be merged:  https://developers.facebook.com/opensource/cla\n\nThanks,\n\nFosco\n. Merged.. Thanks for your contribution!\n. Thanks for the contribution!\n. Updated this separately, thanks for noticing.  Please sign the Contributor License Agreement so your future requests can be considered for merging: https://developers.facebook.com/opensource/cla\n. Oh.. Sorry about that.  Our internal tool had not yet updated your compliance flag.\n. Cool..  Thanks for helping document this better.\n\nCan you sign the Contributor License Agreement?  https://developers.facebook.com/opensource/cla\n\nLooks like like 793 and 1378 in base_facebook could use a blank comment line before the @return\n\nlines 1188-1190, 1462-1463, 1477-1478 the spacing should be updated so the $ align and the comments after them align.\n. Ok.. Will check on that and get back to you.\n. Thanks for your contribution!\n. Thank you very much for your contribution.  Looks good, merging it.\n. Thanks but this isn't a constructive pull request.\n. Thanks for your interest, but without a thorough explanation of this issue and its severity, we can't consider accepting it.  I feel like this should be handled by the outbound headers specifying the accepted response type.  Since this is not a commonly reported issue, perhaps a proxy is a cause.\n. If this is not a breaking issue, or causing some harm, we'd rather not make this change to the main SDK at this time.  Thanks for your interest, and we'll keep your feedback in mind for our future development plans here.\n. Can you please sign the Contributor License Agreement?  https://developers.facebook.com/opensource/cla\n\nOnce this is done we can consider this addition (looks good to me.)\n. The URL generation is pretty trivial, doesn't involve any IO or network requests, so this won't have a meaningful impact.  Thanks for your contribution but we have decided not to merge it. \n. Can you sign the Contributor License Agreement? https://developers.facebook.com/opensource/cla\n\nOnce this is done we can consider making this change..  Thanks.\n. On line 536 you're mutating the access_token... After closer inspection it doesn't look like we want to accept this change to the main repository.  Thanks.\n. Can you sign the Contributor License Agreement?  https://developers.facebook.com/opensource/cla\n\nOnce this is signed we can consider making this change.  Thanks.\n. Can you change this to combine the conditionals?\n\n```\nif ((function_exists('session_status') \n  && session_status() !== PHP_SESSION_ACTIVE) || !session_id()) {\n  session_start();\n}\n```\n. A PSR compliant PHP 5.4+ version is in the works (shh), and you're correct that this repo isn't the right spot for it due to the breaking nature of the changes.  Appreciate the support.\n. I like this idea, but it's not something we want to commit to master right now, especially without test cases.  Generally, I don't think apps should or need to make a lot of requests to the point where reusing the curl handler is beneficial.  Thank you.\n. Not that I'm assuming they all have the same needs, just that the main SDK is to cover the majority of needs.  As you've been using this code for 2 years, it shows that since the SDK is open source you're free to customize it.\n. Is this error_code checking causing an actual problem in practice, or is this just theoretical?  I'm going to close this for now.\n. The SDK is pretty general, having only an api() method for making all calls to the Graph API.  This type of function is what developers should have in their own project.  Thanks for your interest.\n. Thanks for this Sammy.  Closing as all future development will occur on the new SDK.  https://github.com/facebook/facebook-php-sdk-v4\n. Thanks for this Sammy.  Closing as all future development will occur on the new SDK.  https://github.com/facebook/facebook-php-sdk-v4\n. Thanks for this Sammy.  Closing as all future development will occur on the new SDK.  https://github.com/facebook/facebook-php-sdk-v4\n. Thanks for this Sammy.  Closing as all future development will occur on the new SDK.  https://github.com/facebook/facebook-php-sdk-v4\n. Thanks for this Sammy.  Closing as all future development will occur on the new SDK.  https://github.com/facebook/facebook-php-sdk-v4\n. Thanks for this Sammy.  Closing as all future development will occur on the new SDK.  https://github.com/facebook/facebook-php-sdk-v4\n. merged #182\n. Closing this issue as this repository is archived.  The current version of the SDK can be found at facebook/facebook-php-sdk-v4\n. Closing this issue as this repository is archived.  The current version of the SDK can be found at facebook/facebook-php-sdk-v4\n. Closing this issue as this repository is archived.  The current version of the SDK can be found at facebook/facebook-php-sdk-v4\n. Closing this issue as this repository is archived.  The current version of the SDK can be found at facebook/facebook-php-sdk-v4\n. Closing this issue as this repository is archived.  The current version of the SDK can be found at facebook/facebook-php-sdk-v4\n. ",
    "lsmith77": "I should add that I have not signed the CLA, but since this is not a code contribution I figure its not necessary.\n. Indeed `classmap` deals with libs that are not PSR-0 compliant:\n\n```\n\n<?php\n\n// autoload_classmap.php generated by Composer\n\n$vendorDir = dirname(__DIR__);\n$baseDir = dirname($vendorDir);\n\nreturn array(\n    'FacebookApiException' => $baseDir . '/vendor/facebook/php-sdk/src/base_facebook.php',\n    'BaseFacebook' => $baseDir . '/vendor/facebook/php-sdk/src/base_facebook.php',\n    'Facebook' => $baseDir . '/vendor/facebook/php-sdk/src/facebook.php',\n);\n```\n\n```\n<?php\n\n// autoload.php generated by Composer\nif (!class_exists('Composer\\\\Autoload\\\\ClassLoader', false)) {\n    require __DIR__.'/ClassLoader.php';\n}\n\nreturn call_user_func(function() {\n    $loader = new \\Composer\\Autoload\\ClassLoader();\n\n    $map = require __DIR__.'/autoload_namespaces.php';\n\n    foreach ($map as $namespace => $path) {\n        $loader->add($namespace, $path);\n    }\n\n    $classMap = require __DIR__.'/autoload_classmap.php';\n    if ($classMap) {\n        $loader->addClassMap($classMap);\n    }\n\n    $loader->register();\n\n    return $loader;\n});\n```\n. I should add that I have not signed the CLA, but since this is not a code contribution I figure its not necessary.\n. Indeed `classmap` deals with libs that are not PSR-0 compliant:\n\n```\n\n<?php\n\n// autoload_classmap.php generated by Composer\n\n$vendorDir = dirname(__DIR__);\n$baseDir = dirname($vendorDir);\n\nreturn array(\n    'FacebookApiException' => $baseDir . '/vendor/facebook/php-sdk/src/base_facebook.php',\n    'BaseFacebook' => $baseDir . '/vendor/facebook/php-sdk/src/base_facebook.php',\n    'Facebook' => $baseDir . '/vendor/facebook/php-sdk/src/facebook.php',\n);\n```\n\n```\n<?php\n\n// autoload.php generated by Composer\nif (!class_exists('Composer\\\\Autoload\\\\ClassLoader', false)) {\n    require __DIR__.'/ClassLoader.php';\n}\n\nreturn call_user_func(function() {\n    $loader = new \\Composer\\Autoload\\ClassLoader();\n\n    $map = require __DIR__.'/autoload_namespaces.php';\n\n    foreach ($map as $namespace => $path) {\n        $loader->add($namespace, $path);\n    }\n\n    $classMap = require __DIR__.'/autoload_classmap.php';\n    if ($classMap) {\n        $loader->addClassMap($classMap);\n    }\n\n    $loader->register();\n\n    return $loader;\n});\n```\n. ",
    "cordoval": "+1\n\nI do think this is a code contribution but of different type. Maybe someone else that had signed the CLA can copy your code and do the PR for you to avoid problems.\n. +1\n\nI do think this is a code contribution but of different type. Maybe someone else that had signed the CLA can copy your code and do the PR for you to avoid problems.\n. ",
    "jmikola": "@lsmith77: Does `\"autoload\": {\"classmap\": [\"src\"]}` allow Composer's autoloader to properly handle `facebook.php` and `base_facebook.php`? I know we've had trouble autoloading those classes in the past, since they don't mesh with PSR-0. \n\nI know this is getting Symfony2-specific, but isn't that why FOSFacebookBundle relies on the `file` attribute of the service definition to manually load the dependency?\n\nI'll also ping @oyvindkinsey here, since he was the last FB dev to merge a PR two months ago :)\n. @lsmith77: Does `\"autoload\": {\"classmap\": [\"src\"]}` allow Composer's autoloader to properly handle `facebook.php` and `base_facebook.php`? I know we've had trouble autoloading those classes in the past, since they don't mesh with PSR-0. \n\nI know this is getting Symfony2-specific, but isn't that why FOSFacebookBundle relies on the `file` attribute of the service definition to manually load the dependency?\n\nI'll also ping @oyvindkinsey here, since he was the last FB dev to merge a PR two months ago :)\n. ",
    "maoueh": "Nice move, this would allow me to avoid using custom repositories within my `composer.json` file. Big +1 on this one.\n. Nice move, this would allow me to avoid using custom repositories within my `composer.json` file. Big +1 on this one.\n. ",
    "jclaros": "+1 it should be an standard to use composer in all projects related with php\n. +1 it should be an standard to use composer in all projects related with php\n. ",
    "dmitrybelyakov": "Yes, please merge that.\n. Yes, please merge that.\n. ",
    "scottmac": "After discussion around the CLA, we can merge this without one as Lukas has agreed to submit it under the Apache 2.0 license.\n. It's the same operation, it looks up a hashtable inside PHP.\n\neither module registry or function registry. Ideally function_exists() is better since it takes into account functions disabled with the disabled_functions ini entry.\n. After discussion around the CLA, we can merge this without one as Lukas has agreed to submit it under the Apache 2.0 license.\n. It's the same operation, it looks up a hashtable inside PHP.\n\neither module registry or function registry. Ideally function_exists() is better since it takes into account functions disabled with the disabled_functions ini entry.\n. ",
    "naderman": "Cool! Thanks :)\n. Cool! Thanks :)\n. ",
    "ebuildy": "Sound like Php is becoming a messy merge of Java and Ruby On Rails ;-)\n. @Ocramius yes and its a very good thing for Php developper (what I am...), just said composer its just a copy of \"gem\" from RoR (same thing for Symfony2 which is a copy of Java concepts ....), but yes its a really cool tool !\n. Sound like Php is becoming a messy merge of Java and Ruby On Rails ;-)\n. @Ocramius yes and its a very good thing for Php developper (what I am...), just said composer its just a copy of \"gem\" from RoR (same thing for Symfony2 which is a copy of Java concepts ....), but yes its a really cool tool !\n. ",
    "Ocramius": "@ebuildy actually, this is just package management...\n. @ebuildy actually, this is just package management...\n. ",
    "philsturgeon": "Quiet down there troll.\n\nOn 14 Jul 2012, at 23:36, Marco Pivettareply@reply.github.com wrote:\n\n> @ebuildy actually, this is just package management...\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/facebook/facebook-php-sdk/pull/12#issuecomment-6987224\n. How has this still not been done, started, or accepted yet? PHP 5.2 usage numbers are way down, other than the huge number of WordPress installs keeping the numbers bumped up. \n\nMaintain a separate branch with only security fixes, and the new major version is PHP 5.3 only.\n. Bump.\n. Month bump.\n. I was speaking with @gfosco and he suggested I should add unit-tests. The trouble is that there are currently no tests covering this sort of functionality at all, and I am simply adding an \"or clause\" that checks if something is an instance of `CurlFile`.\n\nThere is no possibility this could break any existing functionality, and it definitely works as I've been using this.\n\nInstead of asking me to write a bunch of unit tests for functionality the SDK should already be testing itself, please just merge this in and let it be part of the recode as things move forward.\n\nAs I said, Facebook PHP SDK is currently broken in PHP 5.5 and PHP 5.6 is not that far away. \n. Done\nhttps://github.com/facebook/facebook-php-sdk/pull/110\n\n--\u00a0\nPhil Sturgeon\n\nOn 28 October 2013 at 19:23:48, Fosco Marotto (notifications@github.com) wrote:\n\nWhen updated against master, the PR now contains a lot more than your original one line change... Would it be possible for you to submit a new PR with just that one line, and the last comment you made?\n\n\u2014\nReply to this email directly or view it on GitHub.\n. @Rican7 It certainly could have, but creating a fresh branch and using cherry-pick took about 15 seconds. That leaves me unsure why you're posting that.\n. It was already closed, otherwise I\u2019d have been happy to :)\n\n--\u00a0\nPhil Sturgeon\n\nOn 29 October 2013 at 11:43:54, Trevor N. Suarez (notifications@github.com) wrote:\n\n@philsturgeon Just a tip on how this could have been done in one issue, instead of creating a duplicate, in case someone else comes across this. No disrespect intended.\n\n\u2014\nReply to this email directly or view it on GitHub.\n. No special reason in this instance, it makes no difference. Use whichever you see fit.\n. Done. Click that green button.\n. Quiet down there troll.\n\nOn 14 Jul 2012, at 23:36, Marco Pivettareply@reply.github.com wrote:\n\n> @ebuildy actually, this is just package management...\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/facebook/facebook-php-sdk/pull/12#issuecomment-6987224\n. How has this still not been done, started, or accepted yet? PHP 5.2 usage numbers are way down, other than the huge number of WordPress installs keeping the numbers bumped up. \n\nMaintain a separate branch with only security fixes, and the new major version is PHP 5.3 only.\n. Bump.\n. Month bump.\n. I was speaking with @gfosco and he suggested I should add unit-tests. The trouble is that there are currently no tests covering this sort of functionality at all, and I am simply adding an \"or clause\" that checks if something is an instance of `CurlFile`.\n\nThere is no possibility this could break any existing functionality, and it definitely works as I've been using this.\n\nInstead of asking me to write a bunch of unit tests for functionality the SDK should already be testing itself, please just merge this in and let it be part of the recode as things move forward.\n\nAs I said, Facebook PHP SDK is currently broken in PHP 5.5 and PHP 5.6 is not that far away. \n. Done\nhttps://github.com/facebook/facebook-php-sdk/pull/110\n\n--\u00a0\nPhil Sturgeon\n\nOn 28 October 2013 at 19:23:48, Fosco Marotto (notifications@github.com) wrote:\n\nWhen updated against master, the PR now contains a lot more than your original one line change... Would it be possible for you to submit a new PR with just that one line, and the last comment you made?\n\n\u2014\nReply to this email directly or view it on GitHub.\n. @Rican7 It certainly could have, but creating a fresh branch and using cherry-pick took about 15 seconds. That leaves me unsure why you're posting that.\n. It was already closed, otherwise I\u2019d have been happy to :)\n\n--\u00a0\nPhil Sturgeon\n\nOn 29 October 2013 at 11:43:54, Trevor N. Suarez (notifications@github.com) wrote:\n\n@philsturgeon Just a tip on how this could have been done in one issue, instead of creating a duplicate, in case someone else comes across this. No disrespect intended.\n\n\u2014\nReply to this email directly or view it on GitHub.\n. No special reason in this instance, it makes no difference. Use whichever you see fit.\n. Done. Click that green button.\n. ",
    "mhughes": "Please don't feed the trolls\n. Please don't feed the trolls\n. ",
    "tristanlins": "I update my request according to the comments. Thx to @mikesherov \n. I update my request according to the comments. Thx to @mikesherov \n. ",
    "omerida": "It's caused by the version of curl/libcurl available, I did some testing w/diff environments: http://oscarm.org/2012/4/fix-ssl-timeouts-facebook-php-sdk\n. Sorry, didn't mean to come across as argumentative. I didn't know that it was a TLS version specifically. There are too many onion layers to this :)\n\nFacebook SDK > PHP > PHP Curl Extension > Curl > OpenSSL > TLS defaults.\n. It's caused by the version of curl/libcurl available, I did some testing w/diff environments: http://oscarm.org/2012/4/fix-ssl-timeouts-facebook-php-sdk\n. Sorry, didn't mean to come across as argumentative. I didn't know that it was a TLS version specifically. There are too many onion layers to this :)\n\nFacebook SDK > PHP > PHP Curl Extension > Curl > OpenSSL > TLS defaults.\n. ",
    "comel": "No need to argue, but it is caused by new openssl library (1.0.1) where TLS 1.2 is default. You can see this also in your blog post, it works with OpenSSL/0.9.8o, but not with OpenSSL/1.0.1. Curl version isn't important.\n. Needless to say that this is probably problem due to bad SSL/TLS implementation on facebook servers/loadbalancers...\n. It's not libcurl's fault, look this pull request https://github.com/facebook/facebook-php-sdk/pull/16...\n. No need to argue, but it is caused by new openssl library (1.0.1) where TLS 1.2 is default. You can see this also in your blog post, it works with OpenSSL/0.9.8o, but not with OpenSSL/1.0.1. Curl version isn't important.\n. Needless to say that this is probably problem due to bad SSL/TLS implementation on facebook servers/loadbalancers...\n. It's not libcurl's fault, look this pull request https://github.com/facebook/facebook-php-sdk/pull/16...\n. ",
    "buzzedword": "_BUMP_\n\nWhere did you leave off with this, and how can I contribute? Have a need for this as well.\n. _BUMP_\n\nWhere did you leave off with this, and how can I contribute? Have a need for this as well.\n. ",
    "juzna": "Love it, can't wait to see fb-sdk on travis :)\n. Love it, can't wait to see fb-sdk on travis :)\n. ",
    "daaku": "Thanks @yanod!\n. Oops, sorry -- I though I used the autocomplete but apparently I can't type :) Thanks @yandod !\n. This looks fine -- could you fix up the indentation/style and 80 col issues.\n. Thanks!\n. We're not ready for a backward incompatible change, specifically the use of namespaces at a quick glance. It would be great if you could split the change to only apply backward compatible fixes for PSR-0 compliance. Thanks for the patch!\n. Thanks for the feedback all, I'll talk to some folks internally and get back.\n. The right way to delete the cookie would be specify the domain when you delete it. The domain is necessary for when subdomains are involved.\n. Can you just modify `BaseFacebook::CURL_OPTS` directly? It's public.\n. Thanks @yanod!\n. Oops, sorry -- I though I used the autocomplete but apparently I can't type :) Thanks @yandod !\n. This looks fine -- could you fix up the indentation/style and 80 col issues.\n. Thanks!\n. We're not ready for a backward incompatible change, specifically the use of namespaces at a quick glance. It would be great if you could split the change to only apply backward compatible fixes for PSR-0 compliance. Thanks for the patch!\n. Thanks for the feedback all, I'll talk to some folks internally and get back.\n. The right way to delete the cookie would be specify the domain when you delete it. The domain is necessary for when subdomains are involved.\n. Can you just modify `BaseFacebook::CURL_OPTS` directly? It's public.\n. ",
    "yandod": ":+1:\nDo not forget to enable service hook for master repo.\nhttp://about.travis-ci.org/docs/user/how-to-setup-and-trigger-the-hook-manually/\n\nAnd I'm actually \"YANDO\" :smile:\n. may :octocat: be with u.\n. :+1:\n. :+1:\nDo not forget to enable service hook for master repo.\nhttp://about.travis-ci.org/docs/user/how-to-setup-and-trigger-the-hook-manually/\n\nAnd I'm actually \"YANDO\" :smile:\n. may :octocat: be with u.\n. :+1:\n. ",
    "greut": ":+1:\n. :+1:\n. ",
    "titus88": ":+1:\n. :+1:\n. ",
    "roman02": "When is this going to be added to the SDK? 2 years is more than enough.\n. kl3ryk, let's assume that he will reopen the issue, as he has done in the past.\n. According to my tests, if the session is stopped via session_destroy(), then session_id() returns an empty string. At least, in PHP 5.3.27. ($_SESSION remains set, however, by the way)\n. Did you mean session_write_close()?\n. @gfosco  Go ahead and allow yourself to do the merge! LOL\n. When is this going to be added to the SDK? 2 years is more than enough.\n. kl3ryk, let's assume that he will reopen the issue, as he has done in the past.\n. According to my tests, if the session is stopped via session_destroy(), then session_id() returns an empty string. At least, in PHP 5.3.27. ($_SESSION remains set, however, by the way)\n. Did you mean session_write_close()?\n. @gfosco  Go ahead and allow yourself to do the merge! LOL\n. ",
    "mattwkelly": "CC @scottmac @nshah \n. @scottmac Not sure what you mean.  The JS SDK should be able to support getting long-lived tokens, but the PHP SDK should also support that.\n. Updated. @nshah, @scottmac, good to go?\n. CC @scottmac @nshah \n. @scottmac Not sure what you mean.  The JS SDK should be able to support getting long-lived tokens, but the PHP SDK should also support that.\n. Updated. @nshah, @scottmac, good to go?\n. ",
    "jappievw": "@gfosco just signed the CLA.\n. @gfosco Ok clear\n. @gfosco just signed the CLA.\n. @gfosco Ok clear\n. ",
    "bartekn": "Fixed to be up to date with `facebook:master` and signed the Contributor License Agreement.\n. Fixed to be up to date with `facebook:master` and signed the Contributor License Agreement.\n. ",
    "stfalcon": "@daaku, @oyvindkinsey anybody home? it's important feature\n. @daaku, @oyvindkinsey anybody home? it's important feature\n. ",
    "dorongutman": "@stfalcon doesn't the following provides the same functionality:\nhttps://github.com/facebook/facebook-php-sdk/blob/master/src/base_facebook.php#L351\n?\n. I just figured out you will not merge this pull request without me signing a CLA (if at all), so since this is a really small change, can someone else that already signed the CLA please create a pull request with this change, and I'll close mine ? \nI don't really care who adds this code, I just want it added, so my code and the code of all the other users that got stuck by what this PR tries to fix will work.\n\nJust please make this change if you believe it fixes what I said, I will not have anything to ask and/or complain about it.\n\nThanks.\n. @gfosco indeed it took a while :-)\n\nI do not want to sign the CLA, so if you could fix it with a separate commit - that would be awesome.\n\nIt's nice seeing an official representative in this repository, thanks for that.\n. @stfalcon doesn't the following provides the same functionality:\nhttps://github.com/facebook/facebook-php-sdk/blob/master/src/base_facebook.php#L351\n?\n. I just figured out you will not merge this pull request without me signing a CLA (if at all), so since this is a really small change, can someone else that already signed the CLA please create a pull request with this change, and I'll close mine ? \nI don't really care who adds this code, I just want it added, so my code and the code of all the other users that got stuck by what this PR tries to fix will work.\n\nJust please make this change if you believe it fixes what I said, I will not have anything to ask and/or complain about it.\n\nThanks.\n. @gfosco indeed it took a while :-)\n\nI do not want to sign the CLA, so if you could fix it with a separate commit - that would be awesome.\n\nIt's nice seeing an official representative in this repository, thanks for that.\n. ",
    "adityapatadia": "@dorongutman yes, its same functionality added by facebook. Closing this issue.\n. @dorongutman yes, its same functionality added by facebook. Closing this issue.\n. ",
    "oyvindkinsey": "Thank you for the interest in contributing to the PHP SDK.\nWe are not able to take this pull request though as we are currently rewriting this part of the SDK to deal with this and other issues.\n. This method creates a URL, which is unescaped. If you render this in html,\nit is up to you to encode it.\nOn Aug 13, 2012 9:03 PM, \"Lee Murphy\" notifications@github.com wrote:\n\n> I've updated the reference to an ampersand in the http_build_query\n> function, part of the getUrl method. Updated from '&' to its HTML\n> \n> ## representation '&'. This ensures W3C validation for login/logout links etc.\n> \n> You can merge this Pull Request by running:\n> \n>   git pull https://github.com/leejmurphy/facebook-php-sdk master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/facebook/facebook-php-sdk/pull/34\n> Commit Summary\n> - Changed reference to ampersand entity to pass W3C validation\n> \n> File Changes\n> - _M_ src/base_facebook.php (2)\n> \n> Patch Links\n> - https://github.com/facebook/facebook-php-sdk/pull/34.patch\n> - https://github.com/facebook/facebook-php-sdk/pull/34.diff\n>   \n>   \u2014\n>   Reply to this email directly or view it on GitHubhttps://github.com/facebook/facebook-php-sdk/pull/34.\n. Hey ethanl - would you mind rebasing and re-request this pull?\n. Please squash these before submitting the pull request.\n. ca947b is a less invasive change than the one in this pull request, and is designed to only handle the case of reusing authorization codes. \n\nFor all other issues, please provide additional error descriptions and/or pull requests.\n. Can you squash these two commits?\n\nAnd take a look a the inline comments - are you sure the test case actually use persistant storage? You can easily try that by making the test fail first, and then apply your fix.\n. Thank you for the interest in contributing to the PHP SDK.\nWe are not able to take this pull request though as we are currently rewriting this part of the SDK to deal with this and other issues.\n. This method creates a URL, which is unescaped. If you render this in html,\nit is up to you to encode it.\nOn Aug 13, 2012 9:03 PM, \"Lee Murphy\" notifications@github.com wrote:\n\n> I've updated the reference to an ampersand in the http_build_query\n> function, part of the getUrl method. Updated from '&' to its HTML\n> \n> ## representation '&'. This ensures W3C validation for login/logout links etc.\n> \n> You can merge this Pull Request by running:\n> \n>   git pull https://github.com/leejmurphy/facebook-php-sdk master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/facebook/facebook-php-sdk/pull/34\n> Commit Summary\n> - Changed reference to ampersand entity to pass W3C validation\n> \n> File Changes\n> - _M_ src/base_facebook.php (2)\n> \n> Patch Links\n> - https://github.com/facebook/facebook-php-sdk/pull/34.patch\n> - https://github.com/facebook/facebook-php-sdk/pull/34.diff\n>   \n>   \u2014\n>   Reply to this email directly or view it on GitHubhttps://github.com/facebook/facebook-php-sdk/pull/34.\n. Hey ethanl - would you mind rebasing and re-request this pull?\n. Please squash these before submitting the pull request.\n. ca947b is a less invasive change than the one in this pull request, and is designed to only handle the case of reusing authorization codes. \n\nFor all other issues, please provide additional error descriptions and/or pull requests.\n. Can you squash these two commits?\n\nAnd take a look a the inline comments - are you sure the test case actually use persistant storage? You can easily try that by making the test fail first, and then apply your fix.\n. ",
    "eirikhm": "+1 for this. This is a must when working from more secure platforms.\n. +1 for this. This is a must when working from more secure platforms.\n. ",
    "manuelhe": "Why use a custom procedure to support curl proxy connections if you can inject multiple curl options with a simple change? Take a look at my proposal: https://github.com/facebook/facebook-php-sdk/pull/52\n. +1\n\nEl martes, 19 de febrero de 2013, George Buckingham escribi\u00f3:\n\n> +1\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/facebook/facebook-php-sdk/pull/42#issuecomment-13806826.\n\n## \n\n/\\* manuel.he - @fractalsoftware - http://linkd.in/qVvGrL */\n. I ran the same issue: take a look to my proposal request: https://github.com/manuelhe/facebook-php-sdk/commit/f8a2113af4a82b34bdacf8747e48be198da20522\n. Why use a custom procedure to support curl proxy connections if you can inject multiple curl options with a simple change? Take a look at my proposal: https://github.com/facebook/facebook-php-sdk/pull/52\n. +1\n\nEl martes, 19 de febrero de 2013, George Buckingham escribi\u00f3:\n\n> +1\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/facebook/facebook-php-sdk/pull/42#issuecomment-13806826.\n\n## \n\n/\\* manuel.he - @fractalsoftware - http://linkd.in/qVvGrL */\n. I ran the same issue: take a look to my proposal request: https://github.com/manuelhe/facebook-php-sdk/commit/f8a2113af4a82b34bdacf8747e48be198da20522\n. ",
    "moisadoru": "@manuelhe There are two problems with your proposed changes:\n- since BaseFacebook::$CURL_OPTS is public and static, modifying it from inside an instance will affect all future instances; sometimes this is not desirable.\n- it does not solve the problem with multiple proxies in $_SERVER['HTTP_X_FORWARDED_HOST'] (when the request is proxied through more than one proxy server)\n. Hi @gfosco, \n\nDoes the explode() version look alright ?\n. Hi @gfosco ,\n\nI commited the version you suggested (without stateful function calls), and also signed the CLA.\n\nThanks.\n. Thanks!\n. @manuelhe There are two problems with your proposed changes:\n- since BaseFacebook::$CURL_OPTS is public and static, modifying it from inside an instance will affect all future instances; sometimes this is not desirable.\n- it does not solve the problem with multiple proxies in $_SERVER['HTTP_X_FORWARDED_HOST'] (when the request is proxied through more than one proxy server)\n. Hi @gfosco, \n\nDoes the explode() version look alright ?\n. Hi @gfosco ,\n\nI commited the version you suggested (without stateful function calls), and also signed the CLA.\n\nThanks.\n. Thanks!\n. ",
    "MacDada": "gfosco: signed\n. gfosco: signed\n. ",
    "ethanl": "Sorry for the late reply. But I believe you've committed [a similar fix for this issue](https://github.com/facebook/facebook-php-sdk/commit/ca9472b3312dab3fdcfbffb4e45eb091f582dcb7). Although my changes also include removing some duplicate code (L447-452 and L463-469).\n. Sorry for the late reply. But I believe you've committed [a similar fix for this issue](https://github.com/facebook/facebook-php-sdk/commit/ca9472b3312dab3fdcfbffb4e45eb091f582dcb7). Although my changes also include removing some duplicate code (L447-452 and L463-469).\n. ",
    "jakob-stoeck": "A pity, it means that a user of the FB API cannot see the error which occurred since that is hidden in the FacebookApiException, which is never communicated outside of those functions.\n. A pity, it means that a user of the FB API cannot see the error which occurred since that is hidden in the FacebookApiException, which is never communicated outside of those functions.\n. ",
    "BenMorel": "I removed the namespaces as per your request, but then this is not PSR-0 anymore (every class must belong to a vendor namespace). We're still closer than the original implementation, though.\n\nI'm wondering, why not creating a new major version (3.3.0 or even 4.0.0) introducing namespaces, fully PSR-0 compatible, PHP 5.3, while keeping the 3.2.x branch for PHP 5.2, that you would deprecate and decide of an end-of-life date (like 6 months from now)?\n\nYou'd just have to maintain two branches for a few months, but given the number of recent commits, that shouldn't be a pain?\n\nAlso, the move to PHP 5.3 is now unavoidable: even the snail Red Hat Enterprise Linux has now moved to this version.\nIf we consider that most of Facebook SDK users are already using PHP 5.3, the changes to their applications will be very small to start using the new library.\n\nWhat do you think?\n. Thanks daaku. If that may help your decision, for information Amazon Web Services have released today their [SDK for PHP 2](http://aws.amazon.com/sdkforphp2/), which is PHP 5.3, PSR-0, PSR-1 and PSR-2 compliant.\n. @thomaswelton For information, you can still use the Facebook API with Composer even though it's not PSR-0, if you autoload your classes with `require 'vendor/autoload.php';`. Composer will have generated a class map to handle autoloading of the Facebook classes. But yep, I'd be happy to see Facebook namespaced!\n. @daaku FYI, [PHP 5.3 is reaching End Of Life](http://php.net/archive/2013.php#id2013-07-11-1), so the argument to support PHP 5.2 is getting really awkward!\n. This is being overlooked, I'm closing this PR.\nI've opened a bug with my wishlist for the next major version instead:\n\nhttps://developers.facebook.com/bugs/612436278789603\n\nPlease register your interest there if you want these changes as well!\n. @gfosco Is there a specific reason why? There is absolutely no BC break here.\n. Thanks for your answer. Actually, for the next major version I think the storage should be an interface, that should be passed to the Facebook constructor, which is a much clear approach IMO than having to subclass a BaseFacebook. I've detailed my thoughts in this wishlist a few months ago:\n\nhttps://developers.facebook.com/bugs/612436278789603\n\nA new version of the Facebook SDK whould be great anyway.\n. I removed the namespaces as per your request, but then this is not PSR-0 anymore (every class must belong to a vendor namespace). We're still closer than the original implementation, though.\n\nI'm wondering, why not creating a new major version (3.3.0 or even 4.0.0) introducing namespaces, fully PSR-0 compatible, PHP 5.3, while keeping the 3.2.x branch for PHP 5.2, that you would deprecate and decide of an end-of-life date (like 6 months from now)?\n\nYou'd just have to maintain two branches for a few months, but given the number of recent commits, that shouldn't be a pain?\n\nAlso, the move to PHP 5.3 is now unavoidable: even the snail Red Hat Enterprise Linux has now moved to this version.\nIf we consider that most of Facebook SDK users are already using PHP 5.3, the changes to their applications will be very small to start using the new library.\n\nWhat do you think?\n. Thanks daaku. If that may help your decision, for information Amazon Web Services have released today their [SDK for PHP 2](http://aws.amazon.com/sdkforphp2/), which is PHP 5.3, PSR-0, PSR-1 and PSR-2 compliant.\n. @thomaswelton For information, you can still use the Facebook API with Composer even though it's not PSR-0, if you autoload your classes with `require 'vendor/autoload.php';`. Composer will have generated a class map to handle autoloading of the Facebook classes. But yep, I'd be happy to see Facebook namespaced!\n. @daaku FYI, [PHP 5.3 is reaching End Of Life](http://php.net/archive/2013.php#id2013-07-11-1), so the argument to support PHP 5.2 is getting really awkward!\n. This is being overlooked, I'm closing this PR.\nI've opened a bug with my wishlist for the next major version instead:\n\nhttps://developers.facebook.com/bugs/612436278789603\n\nPlease register your interest there if you want these changes as well!\n. @gfosco Is there a specific reason why? There is absolutely no BC break here.\n. Thanks for your answer. Actually, for the next major version I think the storage should be an interface, that should be passed to the Facebook constructor, which is a much clear approach IMO than having to subclass a BaseFacebook. I've detailed my thoughts in this wishlist a few months ago:\n\nhttps://developers.facebook.com/bugs/612436278789603\n\nA new version of the Facebook SDK whould be great anyway.\n. ",
    "conradkdotcom": "1+ on the new major version idea. Namespaces would be very helpful.\n. +1\n. 1+ on the new major version idea. Namespaces would be very helpful.\n. +1\n. ",
    "ikocev": "yep, new major version is good idea. (+1)\n. yep, new major version is good idea. (+1)\n. ",
    "eduardbulai": "Absolutely pro for new major version. (+1)\n. Absolutely pro for new major version. (+1)\n. ",
    "ricardclau": "Keeping compatibility with PHP5.2 is an error to my point of view. \n\nPHP5.2 has been abandoned for more than 1 year. Everyone who uses projects that are constantly updated are either on 5.3 or they are not likely to downloaded an updated version of the API that could break something even if you promise backwards compatibility.\n\nAnother major problem is the lack of possibility to extend static timeout properties (because of Late Static Bindings). 60 seconds? WTF!\n\nAbsolutely +1 for PHP5.3, namespaces, etc... and leave current version as a tag for 5.2 users.\n. With composer support we also had to wait for quite a while.\n\nCome on guys, you are Facebook, you've pushed PHP and MySQL farther than most people would have expected, I honestly cannot understand why this is taking so long. \n\nPeople on 5.2 in their servers don't care about updating, and they can always get some old branch/tag. \n\nPlease, let's move forward, only companies like yours can make the whole community advance.\n. Keeping compatibility with PHP5.2 is an error to my point of view. \n\nPHP5.2 has been abandoned for more than 1 year. Everyone who uses projects that are constantly updated are either on 5.3 or they are not likely to downloaded an updated version of the API that could break something even if you promise backwards compatibility.\n\nAnother major problem is the lack of possibility to extend static timeout properties (because of Late Static Bindings). 60 seconds? WTF!\n\nAbsolutely +1 for PHP5.3, namespaces, etc... and leave current version as a tag for 5.2 users.\n. With composer support we also had to wait for quite a while.\n\nCome on guys, you are Facebook, you've pushed PHP and MySQL farther than most people would have expected, I honestly cannot understand why this is taking so long. \n\nPeople on 5.2 in their servers don't care about updating, and they can always get some old branch/tag. \n\nPlease, let's move forward, only companies like yours can make the whole community advance.\n. ",
    "yahuarkuntur": ":+1: \n. :+1: \n. ",
    "richardpickett": "How do we start a whole new discussion? I don't want to hijack this thread,\nbut I'd like to contribute by expanding the example.php with an example of\neach type of activity (wall post, video post, image post, comment, etc...)\nand am looking for a concise list of parameters for each of those\n\"functions\" to build a comprehensive example of each (with optional and\nmandatory parameters listed).\n\nAnyone that knows how to start a new thread without doing a commit or has\nsomething to help me put this list together, I'd appreciate it.\n\nYou can contact me directly: (I have excellent spam control)\nRichard.Pickett@CSRTechnologies.com\n\nThanks, be blessed,\n\nRichard W. Pickett, Jr.\n\nOn Thu, Nov 1, 2012 at 11:52 AM, Brian Debuire notifications@github.comwrote:\n\n> [image: :+1:]\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/facebook/facebook-php-sdk/pull/42#issuecomment-9987142.\n. How do we start a whole new discussion? I don't want to hijack this thread,\nbut I'd like to contribute by expanding the example.php with an example of\neach type of activity (wall post, video post, image post, comment, etc...)\nand am looking for a concise list of parameters for each of those\n\"functions\" to build a comprehensive example of each (with optional and\nmandatory parameters listed).\n\nAnyone that knows how to start a new thread without doing a commit or has\nsomething to help me put this list together, I'd appreciate it.\n\nYou can contact me directly: (I have excellent spam control)\nRichard.Pickett@CSRTechnologies.com\n\nThanks, be blessed,\n\nRichard W. Pickett, Jr.\n\nOn Thu, Nov 1, 2012 at 11:52 AM, Brian Debuire notifications@github.comwrote:\n\n> [image: :+1:]\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/facebook/facebook-php-sdk/pull/42#issuecomment-9987142.\n. ",
    "vpassapera": "Is a decision to make Facebook's code PSR 0 1 and 2 compliant in the horizon?\n. Is a decision to make Facebook's code PSR 0 1 and 2 compliant in the horizon?\n. ",
    "jasonrhodes": "Another vote for accepting this PR with the namespaces and moving to 5.3 support. Big giants like Amazon and Facebook can help move everybody forward (5.5 is on the horizon now...)\n. Another vote for accepting this PR with the namespaces and moving to 5.3 support. Big giants like Amazon and Facebook can help move everybody forward (5.5 is on the horizon now...)\n. ",
    "MichMich": "+1 for this one.\u00a0\nVriendelijke groeten,\nMichael Teeuw\n\n---\n\nSent from my iPhone.\n\nMichael Teeuw\nXonay Media\nwww.xonaymedia.nl\n06 51 71 36 15\n\nOn Tue, Feb 19, 2013 at 11:27 PM, Phil Sturgeon notifications@github.com\nwrote:\n\n> How has this still not been done, started, or accepted yet? PHP 5.2 usage numbers are way down, other than the huge number of WordPress installs keeping the numbers bumped up. \n> \n> ## Maintain a separate branch with only security fixes, and the new major version is PHP 5.3 only.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/facebook/facebook-php-sdk/pull/42#issuecomment-13803941\n. +1 for this one.\u00a0\nVriendelijke groeten,\nMichael Teeuw\n\n---\n\nSent from my iPhone.\n\nMichael Teeuw\nXonay Media\nwww.xonaymedia.nl\n06 51 71 36 15\n\nOn Tue, Feb 19, 2013 at 11:27 PM, Phil Sturgeon notifications@github.com\nwrote:\n\n> How has this still not been done, started, or accepted yet? PHP 5.2 usage numbers are way down, other than the huge number of WordPress installs keeping the numbers bumped up. \n> \n> ## Maintain a separate branch with only security fixes, and the new major version is PHP 5.3 only.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/facebook/facebook-php-sdk/pull/42#issuecomment-13803941\n. ",
    "freguinhas": "Me too. +1 on this matter.\nEm 19/02/2013 19:29, \"MichMich\" notifications@github.com escreveu:\n\n> +1 for this one.\n> Vriendelijke groeten,\n> Michael Teeuw\n> \n> ---\n> \n> Sent from my iPhone.\n> \n> Michael Teeuw\n> Xonay Media\n> www.xonaymedia.nl\n> 06 51 71 36 15\n> \n> On Tue, Feb 19, 2013 at 11:27 PM, Phil Sturgeon notifications@github.com\n> \n> wrote:\n> \n> > How has this still not been done, started, or accepted yet? PHP 5.2\n> > usage numbers are way down, other than the huge number of WordPress\n> > installs keeping the numbers bumped up.\n> > Maintain a separate branch with only security fixes, and the new major\n> > \n> > ## version is PHP 5.3 only.\n> > \n> > Reply to this email directly or view it on GitHub:\n> > \n> > https://github.com/facebook/facebook-php-sdk/pull/42#issuecomment-13803941\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/facebook/facebook-php-sdk/pull/42#issuecomment-13804046.\n. Me too. +1 on this matter.\nEm 19/02/2013 19:29, \"MichMich\" notifications@github.com escreveu:\n\n> +1 for this one.\n> Vriendelijke groeten,\n> Michael Teeuw\n> \n> ---\n> \n> Sent from my iPhone.\n> \n> Michael Teeuw\n> Xonay Media\n> www.xonaymedia.nl\n> 06 51 71 36 15\n> \n> On Tue, Feb 19, 2013 at 11:27 PM, Phil Sturgeon notifications@github.com\n> \n> wrote:\n> \n> > How has this still not been done, started, or accepted yet? PHP 5.2\n> > usage numbers are way down, other than the huge number of WordPress\n> > installs keeping the numbers bumped up.\n> > Maintain a separate branch with only security fixes, and the new major\n> > \n> > ## version is PHP 5.3 only.\n> > \n> > Reply to this email directly or view it on GitHub:\n> > \n> > https://github.com/facebook/facebook-php-sdk/pull/42#issuecomment-13803941\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/facebook/facebook-php-sdk/pull/42#issuecomment-13804046.\n. ",
    "zackkitzmiller": "+1\n. +1\n. ",
    "floristenhove": "Yes please, +1!\n\nRegards,\n\nFloris\n\nOp 19 feb. 2013 om 23:35 heeft Zack Kitzmiller notifications@github.com\nhet volgende geschreven:\n\n+1\n\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/facebook/facebook-php-sdk/pull/42#issuecomment-13804254.\n. Yes please, +1!\n\nRegards,\n\nFloris\n\nOp 19 feb. 2013 om 23:35 heeft Zack Kitzmiller notifications@github.com\nhet volgende geschreven:\n\n+1\n\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/facebook/facebook-php-sdk/pull/42#issuecomment-13804254.\n. ",
    "ghost": "As soon as possible.\n. As soon as possible.\n. ",
    "hasokeric": "+1\n. +1\n. ",
    "gbuckingham89": "+1\n. +1\n. ",
    "matthew-muscat": "+1 here\n. +1 here\n. ",
    "ipalaus": "+1\n. +1\n. ",
    "blitux": "+1 on new branch for security fixes only and new major version with PSR compliance.\n. +1 on new branch for security fixes only and new major version with PSR compliance.\n. ",
    "SlKelevro": "definitely +1\n. definitely +1\n. ",
    "shanyee": "+1\n. +1\n. ",
    "DisposaBoy": "Quit it with `+1`, content-less spam already!\n. Quit it with `+1`, content-less spam already!\n. ",
    "maximebeaudoin": ":+1: \n. :+1: \n. ",
    "stormpat": "Agreed! This would be great!\n. Agreed! This would be great!\n. ",
    "raymondjavaxx": "+1\n. +1\n. ",
    "irazasyed": "Great idea, Totally agree! \nBut any news/updates? Been 7 months already.\n. :+1: yeah!\n. I signed already before submitting PR.\n. No problem :+1:\n. My pleasure.\n\nAs i said before in my previous PR #119, I had already signed CLA. Do i have to sign again?\n\nAnd I've made the changes, can you please check if that's correct?\n\nEdit: I see typo in commit summary, I meant \"Added\". Sorry about that.\n. No problem.\n\nThanks for merging :+1: \n. Great idea, Totally agree! \nBut any news/updates? Been 7 months already.\n. :+1: yeah!\n. I signed already before submitting PR.\n. No problem :+1:\n. My pleasure.\n\nAs i said before in my previous PR #119, I had already signed CLA. Do i have to sign again?\n\nAnd I've made the changes, can you please check if that's correct?\n\nEdit: I see typo in commit summary, I meant \"Added\". Sorry about that.\n. No problem.\n\nThanks for merging :+1: \n. ",
    "RobMasters": "What's the hold up for this? I just downloaded this via Composer and couldn't believe that it wasn't properly namespaced. As it is, I simply can't use this library as there's already a Facebook class in the large, legacy application.\n. What's the hold up for this? I just downloaded this via Composer and couldn't believe that it wasn't properly namespaced. As it is, I simply can't use this library as there's already a Facebook class in the large, legacy application.\n. ",
    "thomaswelton": "I have forked the commits @BenMorel had made to make this PSR-0 compliant and then merged the latest changes  from the core Facebook repo up to v3.2.2 https://github.com/thomaswelton/facebook-php-sdk\nThis has also been submited to packagist https://packagist.org/packages/thomaswelton/facebook-php-sdk\n\nThis has allowed me to install it via composer and use proper namespaces for my Laravel package.\n. Yeah for anyone that just wants to install facebook via composer you can find the official package here https://packagist.org/packages/facebook/php-sdk\n\nIn the app I'm writing I needed the Facebook php-sdk to be properly namespaced. So for my own projects I'll be keeping my PSR-0 compliant package up to date.\n. I have forked the commits @BenMorel had made to make this PSR-0 compliant and then merged the latest changes  from the core Facebook repo up to v3.2.2 https://github.com/thomaswelton/facebook-php-sdk\nThis has also been submited to packagist https://packagist.org/packages/thomaswelton/facebook-php-sdk\n\nThis has allowed me to install it via composer and use proper namespaces for my Laravel package.\n. Yeah for anyone that just wants to install facebook via composer you can find the official package here https://packagist.org/packages/facebook/php-sdk\n\nIn the app I'm writing I needed the Facebook php-sdk to be properly namespaced. So for my own projects I'll be keeping my PSR-0 compliant package up to date.\n. ",
    "akelap501usa": "Thanks though I'm not a programmer. Programming Languages enable me to avoid becoming a cyber criminal a/o a pedophile. Say you will continue with instructive assists. Your Peer Chace  \nChace K. Daggers\n\n-----Original Message-----\nFrom: nortsp notifications@github.com\nDate: Wed, 07 Nov 2012 05:00:43 \nTo: facebook/facebook-php-sdkfacebook-php-sdk@noreply.github.com\nReply-To: facebook/facebook-php-sdk reply@reply.github.com\nSubject: [facebook-php-sdk] Update src/facebook.php (#43)\n\nYou can merge this Pull Request by running:\n\n  git pull https://github.com/nortsp/facebook-php-sdk patch-1\n\nOr you can view, comment on it, or merge it online at:\n\n  https://github.com/facebook/facebook-php-sdk/pull/43\n\n-- Commit Summary --\n- Update src/facebook.php\n\n-- File Changes --\n\nM src/facebook.php (218)\n\n-- Patch Links --\n\nhttps://github.com/facebook/facebook-php-sdk/pull/43.patch\nhttps://github.com/facebook/facebook-php-sdk/pull/43.diff\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/facebook/facebook-php-sdk/pull/43\n. Thanks though I'm not a programmer. Programming Languages enable me to avoid becoming a cyber criminal a/o a pedophile. Say you will continue with instructive assists. Your Peer Chace  \nChace K. Daggers\n\n-----Original Message-----\nFrom: nortsp notifications@github.com\nDate: Wed, 07 Nov 2012 05:00:43 \nTo: facebook/facebook-php-sdkfacebook-php-sdk@noreply.github.com\nReply-To: facebook/facebook-php-sdk reply@reply.github.com\nSubject: [facebook-php-sdk] Update src/facebook.php (#43)\n\nYou can merge this Pull Request by running:\n\n  git pull https://github.com/nortsp/facebook-php-sdk patch-1\n\nOr you can view, comment on it, or merge it online at:\n\n  https://github.com/facebook/facebook-php-sdk/pull/43\n\n-- Commit Summary --\n- Update src/facebook.php\n\n-- File Changes --\n\nM src/facebook.php (218)\n\n-- Patch Links --\n\nhttps://github.com/facebook/facebook-php-sdk/pull/43.patch\nhttps://github.com/facebook/facebook-php-sdk/pull/43.diff\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/facebook/facebook-php-sdk/pull/43\n. ",
    "dosercz": "CLA is signed\n. CLA is signed\n. ",
    "ankithbti": "Made changes in file src/base_facebook.php to correct this bug.\n. Made changes in file src/base_facebook.php to correct this bug.\n. ",
    "konrness": "There are several other places where clearAllPersistentData() is called after a unsuccessful authentication. I think all instances are too eager since there is a lot of non-auth data stored in the signed request including page like/admin info, user age group, etc.\n. There are several other places where clearAllPersistentData() is called after a unsuccessful authentication. I think all instances are too eager since there is a lot of non-auth data stored in the signed request including page like/admin info, user age group, etc.\n. ",
    "willybarro": "This also fix a bug ( _tested!_ ) I'm facing with a valid access_token being overridden by an empty/invalid token coming from the fbsr_\\* cookie (set by the JS-SDK).\nJust to make myself clear:\n- I'm using both PHP-SDK and JS-SDK;\n- Authentications are handled by the PHP-SDK;\n- Every page has a **$fb->api('/me');** call;\n- In the successfully authenticated page, I'm including the JS-SDK with the \"cookie:true\" option enabled. This way, sometimes the fbsr_\\* cookie is filled, and when PHP tries to get a signed request off of this cookie, it can't find a valid access_token (its empty) and **still** destroy the VALID and authenticated session.\n\nA code comment says that \" _signed request states there's no access token, anything should be cleared_ \" - Why? Maybe I'm missing something, but, if I have a valid **access_token**, why would an invalid signed request coming from a cookie overwrites that? If the access_token turns out to be invalid when some request is done, the exception should be handled.\n. This also fix a bug ( _tested!_ ) I'm facing with a valid access_token being overridden by an empty/invalid token coming from the fbsr_\\* cookie (set by the JS-SDK).\nJust to make myself clear:\n- I'm using both PHP-SDK and JS-SDK;\n- Authentications are handled by the PHP-SDK;\n- Every page has a **$fb->api('/me');** call;\n- In the successfully authenticated page, I'm including the JS-SDK with the \"cookie:true\" option enabled. This way, sometimes the fbsr_\\* cookie is filled, and when PHP tries to get a signed request off of this cookie, it can't find a valid access_token (its empty) and **still** destroy the VALID and authenticated session.\n\nA code comment says that \" _signed request states there's no access token, anything should be cleared_ \" - Why? Maybe I'm missing something, but, if I have a valid **access_token**, why would an invalid signed request coming from a cookie overwrites that? If the access_token turns out to be invalid when some request is done, the exception should be handled.\n. ",
    "maxgalbu": "this commit actually works, while ca9472b3312dab3fdcfbffb4e45eb091f582dcb7 doesn't.\nplease merge this pull request in place of the other\n. this commit actually works, while ca9472b3312dab3fdcfbffb4e45eb091f582dcb7 doesn't.\nplease merge this pull request in place of the other\n. ",
    "alizaheer": "@eosgood  Thanks for this fix. your commit works fine rather that [ca947b](https://github.com/facebook/facebook-php-sdk/commit/ca9472b3312dab3fdcfbffb4e45eb091f582dcb7) \n\ncc @facebook \n. @eosgood  Thanks for this fix. your commit works fine rather that [ca947b](https://github.com/facebook/facebook-php-sdk/commit/ca9472b3312dab3fdcfbffb4e45eb091f582dcb7) \n\ncc @facebook \n. ",
    "jbrocker": "@oyvindkinsey The problem is that the following lines remove any valid access_tokens, because of a invalid $code in the JS generated Signed Request which can't be used by PHP:\n\n``` php\n458      $this->clearAllPersistentData();\n459      return false; // respect the signed request's data, even\n460                    // if there's an authorization code or something else\n```\n. @oyvindkinsey The problem is that the following lines remove any valid access_tokens, because of a invalid $code in the JS generated Signed Request which can't be used by PHP:\n\n``` php\n458      $this->clearAllPersistentData();\n459      return false; // respect the signed request's data, even\n460                    // if there's an authorization code or something else\n```\n. ",
    "mprogano": "Still have an issue where I get logged out, I am authenticating with the JS SDK and using the PHP SDK for actions. The issue results in an error, \"OAuthException: An active access token must be used to query information about the current user.\" because the JS cookie/token is deemed invalid in PHP after about 10 mins.\n. Still have an issue where I get logged out, I am authenticating with the JS SDK and using the PHP SDK for actions. The issue results in an error, \"OAuthException: An active access token must be used to query information about the current user.\" because the JS cookie/token is deemed invalid in PHP after about 10 mins.\n. ",
    "kilotaras": "A test case is actually a little more complicated and tbh.\n\nIt doesn't look like pull request can be changed (only adding commits is possible). Just reject this one and I'll pull request from other branch.\n. A test case is actually a little more complicated and tbh.\n\nIt doesn't look like pull request can be changed (only adding commits is possible). Just reject this one and I'll pull request from other branch.\n. ",
    "JohnnyGoods": "guys, what's the deal with completely ignoring pull requests?\n. There are many issues that can cause a CSRF state validation failure. This patch was submitted only to address one cause by a bug that failed to initialize the CSRF state in the shared session cookie (only when the argument sharedSession = true is passed to the constructor). \n\nI'm guessing the issue you are facing may be due to a coding error. I would recommend tracing your code and looking for anything that could be causing you FB client to be re-initialized between the auth redirect and the confirmation on callback. Often this is a redirect prior to callback confirmation. \n\n> On Oct 21, 2013, at 2:58 AM, \"M. Vugteveen\" notifications@github.com wrote:\n> \n> NOTICE: PHP message: CSRF state token does not match one provided.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. guys, what's the deal with completely ignoring pull requests?\n. There are many issues that can cause a CSRF state validation failure. This patch was submitted only to address one cause by a bug that failed to initialize the CSRF state in the shared session cookie (only when the argument sharedSession = true is passed to the constructor). \n\nI'm guessing the issue you are facing may be due to a coding error. I would recommend tracing your code and looking for anything that could be causing you FB client to be re-initialized between the auth redirect and the confirmation on callback. Often this is a redirect prior to callback confirmation. \n\n> On Oct 21, 2013, at 2:58 AM, \"M. Vugteveen\" notifications@github.com wrote:\n> \n> NOTICE: PHP message: CSRF state token does not match one provided.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ",
    "it-can": "yes please fix this issue. This fix is not working for me btw...\n. I still see this error in my error log file. I use nginx & php-fpm.\n. NOTICE: PHP message: CSRF state token does not match one provided.\n. ok done\n. yes please fix this issue. This fix is not working for me btw...\n. I still see this error in my error log file. I use nginx & php-fpm.\n. NOTICE: PHP message: CSRF state token does not match one provided.\n. ok done\n. ",
    "bradydoll": "This would make more sense to be in a [`\"require-dev\"`](http://getcomposer.org/doc/04-schema.md#require-dev) section of the `composer.json` as it is not necessary for typical use of the SDK.  This allows you to require it while working on the SDK in a dev environment, while not requiring it in a production environment.\n\n```\n\"require-dev\": {\n    \"phpunit/phpunit\": \"3.7.*\"\n}\n```\n. This would make more sense to be in a [`\"require-dev\"`](http://getcomposer.org/doc/04-schema.md#require-dev) section of the `composer.json` as it is not necessary for typical use of the SDK.  This allows you to require it while working on the SDK in a dev environment, while not requiring it in a production environment.\n\n```\n\"require-dev\": {\n    \"phpunit/phpunit\": \"3.7.*\"\n}\n```\n. ",
    "gary-rafferty": ":+1: This makes complete sense. Have modified the pull request. Thanks\n. Hi Fosco, \n\nThat's done now. Thanks,\n. Hi Fosco, \n\nThe CLA has now been signed. Thanks,\n. :+1: This makes complete sense. Have modified the pull request. Thanks\n. Hi Fosco, \n\nThat's done now. Thanks,\n. Hi Fosco, \n\nThe CLA has now been signed. Thanks,\n. ",
    "h0ke": "Signed. :+1: \n. Alrighty. :smiley: \n. Signed. :+1: \n. Alrighty. :smiley: \n. ",
    "depoll": "Thanks for your contribution!\n. Please add tests for the new behavior.\n. Thanks for your contribution!\n. Please add tests for the new behavior.\n. ",
    "phwd": "You are just hijacking the app id... you aren't really updating it.\n. You are just hijacking the app id... you aren't really updating it.\n. ",
    "frankdejonge": "@daaku, of course, but that wouldn't really be a clean way of solving the issue. Another point for not doing that is that you'd have to copy the params the package requires itself into that array too when replacing and when that changes in an update, the app would break. This patch provides a cleaner way of solving this problem without doing any sort of hacky injection.\n. @manuelhe that's the same as setting the config on the object directly. The cleanest would be to have the properties on the instance like al the other configuration options do as well. That's why I chose to have it as a non-static property with a getter and setter.\n. @daaku, of course, but that wouldn't really be a clean way of solving the issue. Another point for not doing that is that you'd have to copy the params the package requires itself into that array too when replacing and when that changes in an update, the app would break. This patch provides a cleaner way of solving this problem without doing any sort of hacky injection.\n. @manuelhe that's the same as setting the config on the object directly. The cleanest would be to have the properties on the instance like al the other configuration options do as well. That's why I chose to have it as a non-static property with a getter and setter.\n. ",
    "mouhmed": "53fe48779ecde09a91d51750c0d9341073762d75\n. 53fe48779ecde09a91d51750c0d9341073762d75\n. ",
    "eddyvlad": "I like this because `getExtendedAccessToken` is all we need. `setExtendedAccessToken` is just silly because there is no control to whether I want it persistent or not. Also it is not consistent with the pre-existing `setAccessToken` which accepts argument. Speaking of which, `setPersistentData` should've been made `public`.\n\nWell... much of the SDK is flawed anyway because there is no context for the persistent data. This is annoying if you are working with more than one instance.\n. @tugrul Yeah. I know `setPersistentData` wasn't from you. I'm just puzzled why they decided to merge it. Then now its too late to change the behaviour because it will be considered as breaking change. \nI'm going to merge yours into my fork anyway. Thanks for this.\n. I like this because `getExtendedAccessToken` is all we need. `setExtendedAccessToken` is just silly because there is no control to whether I want it persistent or not. Also it is not consistent with the pre-existing `setAccessToken` which accepts argument. Speaking of which, `setPersistentData` should've been made `public`.\n\nWell... much of the SDK is flawed anyway because there is no context for the persistent data. This is annoying if you are working with more than one instance.\n. @tugrul Yeah. I know `setPersistentData` wasn't from you. I'm just puzzled why they decided to merge it. Then now its too late to change the behaviour because it will be considered as breaking change. \nI'm going to merge yours into my fork anyway. Thanks for this.\n. ",
    "tugrul": "@eddyvlad I agree with you about `setPersistentData`. This behavior coming from past. I didn't change this behavior. I just added small functionallity to improve usability\n. I wish to sign but i dont have got official Facebook account. I have got an unofficial account (who named John Doe) just to use for development.\n. @eddyvlad I agree with you about `setPersistentData`. This behavior coming from past. I didn't change this behavior. I just added small functionallity to improve usability\n. I wish to sign but i dont have got official Facebook account. I have got an unofficial account (who named John Doe) just to use for development.\n. ",
    "Bnaya": "You can get the new access token via getAccessToken, but what you can't currently get its the new expiration time of the token without another api call.\nit will be nice to have that.\n. The commit is now from my personal email with the CLA.\nif #104  will be merged if (strpos($rawSignedRequest, '.') === false) { can be removed \n\nFor more information when we are using this method:\nhttps://github.com/facebook/facebook-php-sdk/pull/100#issuecomment-26658350\n. Maybe its an unclear word for that,\nbut if the signed request string won't have a . in it you will get a php warning on the following line:\n\n```\nlist($encoded_sig, $payload) = explode('.', $signed_request, 2);\n```\n\nUndefined offset: 1\n\nSo if '.' is mission from the given string its should just return null and not try to parse it.\n\nIf we a are giving a public access to that method we better make it more error immune\n. Its not something that should happen on purpose by the developer, but the signed request is usually sent from the client and can be manipulated or filled with stub data and i think its better not to reach to a situation when a manipulated input can make your code raise an error.\n\nAnd with unit test approach, if there is a case that a specific input can raise an error, even if the developer should not do so, you need to cover it and make your code ready for that situation.\n. I'll try to describe our use case and why we use public parseSignedRequest & setSignedRequest.\nWe've made our own implementation that extends base_facebook with the needed changes for us and i believe more developers can make benefit from it if it will be added.\n\nOur application is a one page application, our registration/authentication is an json api endpoint and not a page.\nOur backend is a laravel 4 app, we have unit tests for our controllers.\n\nAbout setSignedRequest:\nFor testing & code maintainability we don't want any direct access to request vars (cookies/request) from the inside of our code. we don't want the PHP SDK to do that work of getting the signed request for us. its very good for websites especially if the main login system is facebook, but for our use its not.\nSo we need an interfaced way to set the signed request so the class won't look for it in the request/cookie arrays so we can test out code without using global variables.\n\nAbout parseSignedRequest:\nOur input validation for signed request is to parse it for making sure its valid. belongs to our facebook application, and check for a specific fields in it.\n\nFor user authentication by facebook we send the signed request to the server, parse it and checking our db for a user with the given paired facebook uid (no actual api request is needed)\n\nWe can just copy the code and make our own parse function but why not give the ability to use that code directly from official sdk...\n. You can get the new access token via getAccessToken, but what you can't currently get its the new expiration time of the token without another api call.\nit will be nice to have that.\n. The commit is now from my personal email with the CLA.\nif #104  will be merged if (strpos($rawSignedRequest, '.') === false) { can be removed \n\nFor more information when we are using this method:\nhttps://github.com/facebook/facebook-php-sdk/pull/100#issuecomment-26658350\n. Maybe its an unclear word for that,\nbut if the signed request string won't have a . in it you will get a php warning on the following line:\n\n```\nlist($encoded_sig, $payload) = explode('.', $signed_request, 2);\n```\n\nUndefined offset: 1\n\nSo if '.' is mission from the given string its should just return null and not try to parse it.\n\nIf we a are giving a public access to that method we better make it more error immune\n. Its not something that should happen on purpose by the developer, but the signed request is usually sent from the client and can be manipulated or filled with stub data and i think its better not to reach to a situation when a manipulated input can make your code raise an error.\n\nAnd with unit test approach, if there is a case that a specific input can raise an error, even if the developer should not do so, you need to cover it and make your code ready for that situation.\n. I'll try to describe our use case and why we use public parseSignedRequest & setSignedRequest.\nWe've made our own implementation that extends base_facebook with the needed changes for us and i believe more developers can make benefit from it if it will be added.\n\nOur application is a one page application, our registration/authentication is an json api endpoint and not a page.\nOur backend is a laravel 4 app, we have unit tests for our controllers.\n\nAbout setSignedRequest:\nFor testing & code maintainability we don't want any direct access to request vars (cookies/request) from the inside of our code. we don't want the PHP SDK to do that work of getting the signed request for us. its very good for websites especially if the main login system is facebook, but for our use its not.\nSo we need an interfaced way to set the signed request so the class won't look for it in the request/cookie arrays so we can test out code without using global variables.\n\nAbout parseSignedRequest:\nOur input validation for signed request is to parse it for making sure its valid. belongs to our facebook application, and check for a specific fields in it.\n\nFor user authentication by facebook we send the signed request to the server, parse it and checking our db for a user with the given paired facebook uid (no actual api request is needed)\n\nWe can just copy the code and make our own parse function but why not give the ability to use that code directly from official sdk...\n. ",
    "tomasvitek": "Hey, no worries. I have signed the CLA.\n. Hey, no worries. I have signed the CLA.\n. ",
    "uuf6429": "Done, cannot reopen this myself though.\n. Done, cannot reopen this myself though.\n. ",
    "samqiu": "`.DS_Store` should not be here :)\n. What is this? Please close this issue.\n. `.DS_Store` should not be here :)\n. What is this? Please close this issue.\n. ",
    "alixandru": "It's done. Signed: October 16, 2013\n. It's done. Signed: October 16, 2013\n. ",
    "liuggio": ":+1: \n. 3 months.\n. :+1: \n. 3 months.\n. ",
    "leopro": ":+1: \n. :+1: \n. ",
    "morafabio": ":+1:\n. :+1:\n. ",
    "agiuliano": "I've just sign the CLA and I reopen this PR\n. I made another PR for this\n. I've just sign the CLA and I reopen this PR\n. I made another PR for this\n. ",
    "gerp": "Thanks! I have signed the agreement.\n. Fair enough. Thanks for looking into it.\n. Thanks! I have signed the agreement.\n. Fair enough. Thanks for looking into it.\n. ",
    "Rican7": ":+1: \n. #110 could have been alleviated with a rebase:\n- http://git-scm.com/book/en/Git-Branching-Rebasing\n- http://stackoverflow.com/a/457988/852382\n. @philsturgeon Just a tip on how this could have been done in one issue, instead of creating a duplicate, in case someone else comes across this. No disrespect intended.\n. :+1: \n. #110 could have been alleviated with a rebase:\n- http://git-scm.com/book/en/Git-Branching-Rebasing\n- http://stackoverflow.com/a/457988/852382\n. @philsturgeon Just a tip on how this could have been done in one issue, instead of creating a duplicate, in case someone else comes across this. No disrespect intended.\n. ",
    "Cangit": "Yes please\n. Yes please\n. ",
    "czjvic": "+1\n. +1\n. ",
    "mattynoce": "i definitely can. i was away for 2 weeks and didn't have a chance to look\nat it. thanks for the notice.\n\nOn Mon, Oct 28, 2013 at 4:16 PM, Fosco Marotto notifications@github.comwrote:\n\n> If you can add test cases here I will re-open this. If not we will try and\n> address this in another commit. Thanks for your contribution.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/facebook/facebook-php-sdk/pull/90#issuecomment-27266029\n> .\n. i definitely can. i was away for 2 weeks and didn't have a chance to look\nat it. thanks for the notice.\n\nOn Mon, Oct 28, 2013 at 4:16 PM, Fosco Marotto notifications@github.comwrote:\n\n> If you can add test cases here I will re-open this. If not we will try and\n> address this in another commit. Thanks for your contribution.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/facebook/facebook-php-sdk/pull/90#issuecomment-27266029\n> .\n. ",
    "kl3ryk": "Done :)\n. Yes i will provide them in this week :)\n. @janisto they didnt merged it because i didn't provided test cases yet. But until march i don't have much time to prepare test cases. So if you have anything i can just push it. \n\nI will find some time after 11 march :). @gfosco will you reopen issue then?\n. Done :)\n. Yes i will provide them in this week :)\n. @janisto they didnt merged it because i didn't provided test cases yet. But until march i don't have much time to prepare test cases. So if you have anything i can just push it. \n\nI will find some time after 11 march :). @gfosco will you reopen issue then?\n. ",
    "janisto": "Why didn't you merge this?\n\nWhen I use setExtendedAccessToken(), I now have to use getPersistentData() and setAccessToken().\n. Why didn't you merge this?\n\nWhen I use setExtendedAccessToken(), I now have to use getPersistentData() and setAccessToken().\n. ",
    "bagia": "Hi,\nDone.\nThanks!\n. I understand. It is just that in the app settings on developers.facebook.com, we can disable the requirement of the app secret proof. The problem is that if we do so and the SDK sends an invalid one (for instance because the SDK doesn't have access to the app secret), the app secret proof is still checked by the server and causes a failure.\n. In the scenario you can see on this image https://fbcdn-dragon-a.akamaihd.net/hphotos-ak-ash3/851585_667526966593398_797346584_n.png, taken from the Facebook documentation : https://developers.facebook.com/docs/facebook-login/access-tokens/#architecture\nIn that case, you can have the client not owning the app secret.\n. Hi,\nDone.\nThanks!\n. I understand. It is just that in the app settings on developers.facebook.com, we can disable the requirement of the app secret proof. The problem is that if we do so and the SDK sends an invalid one (for instance because the SDK doesn't have access to the app secret), the app secret proof is still checked by the server and causes a failure.\n. In the scenario you can see on this image https://fbcdn-dragon-a.akamaihd.net/hphotos-ak-ash3/851585_667526966593398_797346584_n.png, taken from the Facebook documentation : https://developers.facebook.com/docs/facebook-login/access-tokens/#architecture\nIn that case, you can have the client not owning the app secret.\n. ",
    "mbiagetti": ":+1: \n. :+1: \n. ",
    "jimmykane": "Example: \n\n`$user = $facebook->getUser();` Here 1st check is performed against query params and state\n`$facebook->getLogoutUrl();` Here 2nd check fails due to that the 1st has reset the state to null but the query params are still there.\n. Also accepted licence for contribution. I want to use facebook as a dependency via composer. This pull request fixes double logging of FB CSRF 'protection'. I explained the scenario above. Today we pay for logging services and every line costs.\n. Np. Keep up the good work. \n. NP I am OK with that. Have a great day. \n. Example: \n\n`$user = $facebook->getUser();` Here 1st check is performed against query params and state\n`$facebook->getLogoutUrl();` Here 2nd check fails due to that the 1st has reset the state to null but the query params are still there.\n. Also accepted licence for contribution. I want to use facebook as a dependency via composer. This pull request fixes double logging of FB CSRF 'protection'. I explained the scenario above. Today we pay for logging services and every line costs.\n. Np. Keep up the good work. \n. NP I am OK with that. Have a great day. \n. ",
    "tiger-seo": "We don't use proxy\n. @gfosco any suggestion how I should resolve this?\n. We don't use proxy\n. @gfosco any suggestion how I should resolve this?\n. ",
    "bocharsky-bw": "Thanks, I signed at February 19, 2014 the Contributor License Agreement (Individual).\nIs that enough? Or You need some additional information from me?\n. =)\n. @glensc You're right, thanks!\nI think many people copy the code from this file and it will be better to add `<?php` to avoid possible problems, especially with beginners.\n@glensc what do you think?\n. @glensc not always, developers could try this lib in scratch first before to use it in real project.\n. Thanks, I signed at February 19, 2014 the Contributor License Agreement (Individual).\nIs that enough? Or You need some additional information from me?\n. =)\n. @glensc You're right, thanks!\nI think many people copy the code from this file and it will be better to add `<?php` to avoid possible problems, especially with beginners.\n@glensc what do you think?\n. @glensc not always, developers could try this lib in scratch first before to use it in real project.\n. ",
    "ervandos": "Done.\n. Done.\n. ",
    "ollea": "See http://www.php.net/manual/fr/function.session-status.php#112888 about this issue and PHP bug report here https://bugs.php.net/bug.php?id=52982 \n. Hey, what do I need to do for this patch to be applied ?\n. It's done, I have signed it under the name of my company, Ollea.\n. Perhaps with session_destroy() but with session_write_close(), session_id() still returns the session ID.\nSo checking if a session is closed with session_id() is not reliable.\n. Yes sorry, I've updated my comment\n. See http://www.php.net/manual/fr/function.session-status.php#112888 about this issue and PHP bug report here https://bugs.php.net/bug.php?id=52982 \n. Hey, what do I need to do for this patch to be applied ?\n. It's done, I have signed it under the name of my company, Ollea.\n. Perhaps with session_destroy() but with session_write_close(), session_id() still returns the session ID.\nSo checking if a session is closed with session_id() is not reliable.\n. Yes sorry, I've updated my comment\n. ",
    "CapMousse": ":+1: \n. :+1: \n. ",
    "tchaffee": "+1. Also agree that the latest stable version might not be the place for this, but how about next stable release with an announcement in the dev blog? Devs who aren't using modern PHP for whatever reason could still use an older version of the SDK, but most of the PHP community would be very happy to see a PSR compliant SDK.\n. +1. Also agree that the latest stable version might not be the place for this, but how about next stable release with an announcement in the dev blog? Devs who aren't using modern PHP for whatever reason could still use an older version of the SDK, but most of the PHP community would be very happy to see a PSR compliant SDK.\n. ",
    "fkubis": "+1\n. +1\n. ",
    "Gomes81": "I'm using that code for two years now and still no problem... If you need I can write test cases for that. Just don't close it like that. Tell me what you want and I'll try to accomplish it.\nAlso why are you assuming all apps have the same needs? By not accepting this request you are keeping the difficulty to extend the facebook base class for other needs.\n. The SDK is free and I'm free to customize and extend it and that's what I did, but that's not the point. The point is that in order to me to \"customize it\", I need to change the core SDK code, witch forces me to change that peace of code every time the SDK is updated. So what I'm suggesting here is to change that few lines of code that makes your code more difficult to be extended and \"customized\". I'm not doing it for me, cause, changing 4 lines of code is not that hard. But I'm doing it for the community and having in mind that someone is having those same needs to. Any way, again, if I can do anything else for this to be approved, I'm glad to help. Best regards.\n. I'm using that code for two years now and still no problem... If you need I can write test cases for that. Just don't close it like that. Tell me what you want and I'll try to accomplish it.\nAlso why are you assuming all apps have the same needs? By not accepting this request you are keeping the difficulty to extend the facebook base class for other needs.\n. The SDK is free and I'm free to customize and extend it and that's what I did, but that's not the point. The point is that in order to me to \"customize it\", I need to change the core SDK code, witch forces me to change that peace of code every time the SDK is updated. So what I'm suggesting here is to change that few lines of code that makes your code more difficult to be extended and \"customized\". I'm not doing it for me, cause, changing 4 lines of code is not that hard. But I'm doing it for the community and having in mind that someone is having those same needs to. Any way, again, if I can do anything else for this to be approved, I'm glad to help. Best regards.\n. ",
    "jurchiks": "Should be ctype_digit() then, not preg_match(), 001 should match as true aswell IMHO.\n. You haven't been programming for long, have you?\n\n``` php\nif (isset($result['error_code']))\n{\n    if (is_int($result['error_code']))\n    {\n        $code = $result['error_code'];\n    }\n    else if (is_string($result['error_code']) && ctype_digit($result['error_code']))\n    {\n        $code = intval($result['error_code']);\n    }\n}\n```\n. I don't know, I didn't make the initial patch, but it wouldn't hurt to check.\n. Should be ctype_digit() then, not preg_match(), 001 should match as true aswell IMHO.\n. You haven't been programming for long, have you?\n\n``` php\nif (isset($result['error_code']))\n{\n    if (is_int($result['error_code']))\n    {\n        $code = $result['error_code'];\n    }\n    else if (is_string($result['error_code']) && ctype_digit($result['error_code']))\n    {\n        $code = intval($result['error_code']);\n    }\n}\n```\n. I don't know, I didn't make the initial patch, but it wouldn't hurt to check.\n. ",
    "usk81": "Exception's $code is only accepted integer, because should match only natural number.\nif use ctype_digit() ...\n\n``` php\nif(ctype_digit($result['error_code']))\n{\n  $result['error_code'] = (int) $result['error_code'];\n}\nif (isset($result['error_code']) && is_int($result['error_code'])) {\n  $code = $result['error_code'];\n}\n```\n\nIs it better?\n. Exception's $code is only accepted integer, because should match only natural number.\nif use ctype_digit() ...\n\n``` php\nif(ctype_digit($result['error_code']))\n{\n  $result['error_code'] = (int) $result['error_code'];\n}\nif (isset($result['error_code']) && is_int($result['error_code'])) {\n  $code = $result['error_code'];\n}\n```\n\nIs it better?\n. ",
    "boo1231": " in tutor with maylin lol x\n.  in tutor with maylin lol x\n. ",
    "Topener": "you shouldn't put your keys in the public repository! \n. you shouldn't put your keys in the public repository! \n. ",
    "facebook-github-bot": "Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your contribution. However, we are not accepting pull requests for this project, and will be closing it automatically. Please see the project's readme for more details - thanks!\n. Thank you for your contribution. However, we are not accepting pull requests for this project, and will be closing it automatically. Please see the project's readme for more details - thanks!\n. Thank you for your contribution. However, we are not accepting pull requests for this project, and will be closing it automatically. Please see the project's readme for more details - thanks!\n. Thank you for your contribution. However, we are not accepting pull requests for this project, and will be closing it automatically. Please see the project's readme for more details - thanks!\n. Thank you for your contribution. However, we are not accepting pull requests for this project, and will be closing it automatically. Please see the project's readme for more details - thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your contribution. However, we are not accepting pull requests for this project, and will be closing it automatically. Please see the project's readme for more details - thanks!\n. Thank you for your contribution. However, we are not accepting pull requests for this project, and will be closing it automatically. Please see the project's readme for more details - thanks!\n. Thank you for your contribution. However, we are not accepting pull requests for this project, and will be closing it automatically. Please see the project's readme for more details - thanks!\n. Thank you for your contribution. However, we are not accepting pull requests for this project, and will be closing it automatically. Please see the project's readme for more details - thanks!\n. Thank you for your contribution. However, we are not accepting pull requests for this project, and will be closing it automatically. Please see the project's readme for more details - thanks!\n. ",
    "ManeeshTiwari01": "hi \nplease help me.\n i have found error  Fatal error: Uncaught OAuthException: (#803) Cannot query users by their username\n. hi \nplease help me.\n i have found error  Fatal error: Uncaught OAuthException: (#803) Cannot query users by their username\n. ",
    "sarciszewski": "Feel free to close this if Facebook doesn't care about the old SDK ;)\n. Feel free to close this if Facebook doesn't care about the old SDK ;)\n. ",
    "GrahamCampbell": "Any news on this?\n. Any news on this?\n. ",
    "fredemmott": "I'll poke someone internally...\n. I'll poke someone internally...\n. ",
    "yguedidi": "Wrong repository\n. Wrong repository\n. ",
    "arthurdarcet": "How can this work ?\nI think you should extend the BaseFacebook class and implement custom `(get|set)PersistentData`\n. How can this work ?\nI think you should extend the BaseFacebook class and implement custom `(get|set)PersistentData`\n. ",
    "glensc": "agree with @arthurdarcet. this PR is should be closed and you should extend from `BaseFacebook` instead. that is why the class was split.\n. :+1: \n. trash PR. should be ignored and closed!\n. seems pointless. github already [highlights this](https://github.com/facebookarchive/facebook-php-sdk/blob/master/readme.md#usage) using:\n\n``````\n```php\n```\n``````\n. but the samples are not full file, the are to be inserted to existing php script\n. agree with @arthurdarcet. this PR is should be closed and you should extend from `BaseFacebook` instead. that is why the class was split.\n. :+1: \n. trash PR. should be ignored and closed!\n. seems pointless. github already [highlights this](https://github.com/facebookarchive/facebook-php-sdk/blob/master/readme.md#usage) using:\n\n``````\n```php\n```\n``````\n. but the samples are not full file, the are to be inserted to existing php script\n. ",
    "xz360": "test comment\n. test comment\n. "
}