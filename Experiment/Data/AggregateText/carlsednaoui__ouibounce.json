{
    "carlsednaoui": "Done!\n. Let's do it!\n. Fixed!\n. @joshuachestang I haven't had a chance to build the modals out. You can use the designs provided in the readme as inspiration to build your own though :)\n. Taking care of with callback option in #8 \n. Awesome, I'll be merging this soon.\n. Thanks for the pull request @nilsine :)\n. :shipit: \n. Full of `#win`\n. Done & merged into CDNJS :)\n\nhttps://github.com/cdnjs/cdnjs/pull/2918#issuecomment-39287853\n. Thanks for the PR @ayanev! I'll check out the code (and merge) this weekend.\n. Thanks @jenius! Passing the cookie expiration date as an option def looks like the right move.\n\n@ayanev, let me know if you want to review/ update the PR.\n. Added this in commit 2685ba5. Thanks @ayanev!\n. Agreed. @filipekiss, wanna review the PR? I can also work on this in the next few days.\n. Thanks for the pulled request :smile:  I ended up using a slightly different approach in 5d894eea3483690612c80573230976a5794cf2fc\n. :+1: This looks great! :shipit: \n. Good point @mcgwebdesign.\n\n@jenius, do you think this should be the default behavior? (Site-wide cookie) I think it makes sense to do so.\n\nWe could change line 56 in the source to\n`document.cookie = 'viewedOuibounceModal=true' + cookieExpire + ';path=/';`\n. @mcgwebdesign agreed with @jenius, a PR to include the option for site-wide cookie would be great.\n\nAs a side note, this logic shouldn't be part of ouibounce:\n\n> 1) user clicks out, show again in 5 days\n> 2) user fills out form, never show again\n\nYou will still need to build some logic on your own :)\n. :+1: :smile: \n. @mcgwebdesign as a side note, there's already a cookie expiration option\n\n``` js\nouiBounce(document.getElementById('ouibounce-modal'), { cookieExpire: 10 });\n```\n\nI think what you want to add is page-specific cookie v.s. site-wide cookie (an on / off option basically). The default should be site-wide cookie unless page-specific is set to `True` (or whatever naming convention we choose).\n. @mcgwebdesign saw you opened then closed a PR. Let me know when you're ready to submit :)\n. Awesome, thanks @mcgwebdesign! I'll take a look either tonight or this weekend at the latest :)\n. /note: Relevant PR #20 \n. Closing issue since there's a PR for it (#20).\n. Thanks for the suggestions but the current behavior works as expected for the tests. This may get revised when I write more tests for it.\n\nClosing for now.\n. @jenius, tried to clarify that gnarly ternary logic. Thoughts? 2ff8c3dec94e5b41d97774d46c2bf68a2c1c6e5d\n. @mcgwebdesign, let us know if you'll be writing tests for this :smiley: \n. Thanks @schonfeld! This was rebased and merged.\n\n/reference 1f8896e073382771e30c8d34afe1f0cfb938ac2f, c3ddb78a05cb57bf91435ac0a84b2e42839c0ac0\n. Wow, what a long thread. Thanks for the great contribution @jenius!\n\nTo answer the `sensitivity` setting on `mouseout`\n\n> The mouseout event is fired when a pointing device (usually a mouse) is moved off the element that has the listener attached or off one of its children.\n> [source](https://developer.mozilla.org/en-US/docs/Web/Reference/Events/mouseout)\n\nThis means that anytime the mouse moves away from `html` (or leaves the `window`) an event is sent. We then check the position of the mouse like so: `e.clientY > sensitivity`. This prevents ouibounce to fire when your mouse exits on the side of the screen, etc. There might be a better way to do this but this seems to work fine for our purposes.\n\nTo better understand the `mouseout` event you can clone this project and change the [build file](https://github.com/carlsednaoui/ouibounce/blob/master/build/ouibounce.js#L43) to have the following code on line 43:\n`console.log('moused out');`\n\nYou can then open up the [test file](https://github.com/carlsednaoui/ouibounce/blob/master/test/index.html) in your browser and look at the console \u2014 you'll see the mouseout events firing.\n\nHope this helps. I'm gonna close this issue for now.\n. @jenius good ol' `git push -f` :back:  \n. IT'S ON THE LINE, EVERYBODY WILL SEE THIS!\n\nMy shot at becoming the first French-American president is now forever gone :(\n\n> At least I got chicken\n. literally lol'ed :+1: :+1: :+1: \n. @dtdw, the plugin behaves as expected. As you mentioned, if you **slowly** move your mouse inside the window then the event will fire. To get rid of this (or limit it), move your mouse like a regular user (at regular speed) or decrease the sensitivity.\n\nClosing this issue for now. Please re-open if there's anything actionable.\n. Good point @dtdw, have you tried playing with sensitivity? If you set it to ~5 (or maybe even less) the odds of this happening will decrease tremendously.\n\nYou can also try to implement an alternative fix and submit a pull request :)\n. /note: Maybe we can make use of [this](http://stackoverflow.com/questions/7389328/detect-if-browser-tab-has-focus). The [demo](http://www.thefutureoftheweb.com/demo/2007-05-16-detect-browser-window-focus/) is really cool.\n. That was good feedback @dtdw, I actually opened up a new issue \u2014 #26 \u2014 to look into it :) \n. And no worries about contributing, we're all learning as we go :smiley: \n. Just looked into this.\n\nHere's what's happening: whenever there's padding around the `body` (or any element at the top of the page), Ouibouce is likely to fire \u2014 this is because a `mouseout` event is called and the default sensitivity is pretty high. The 2 examples provided in the README link to GitHub pages, which have 50px of padding on the `body`.\n\nThe solution is to decrease the sensitivity \u2014 I tested it with `sensitivity: 1` and it worked like a charm.\n\n/edit: The GH-Pages example's sensitivity has been updated with 3e431af0cec72dc4f4a7e5cd2d867ece7f57335a\n. @dtdw decreasing the [sensitivity](https://github.com/carlsednaoui/ouibounce#sensitivity) should take care of that.\n\nClosing for now. Re-open if that doesn't solve your problem.\n. @jenius how about this?\n\n![image](https://cloud.githubusercontent.com/assets/791818/3056434/bb743b62-e1ca-11e3-9443-3ae025e31fab.png)\n\nThinking we could add interactivity options later. Thoughts?\n. Ahh, forgot about the pattern. I did this in PS, Sketch wasn't opening up for me (it was crashing), decided to redo it lol.\n\nHere is it with pattern\n![image](https://cloud.githubusercontent.com/assets/791818/3056536/b42cd746-e1cb-11e3-98c0-66648c1b6b3f.png)\n\nAnd here's the 'shop file: http://cl.ly/0X3e0u00111Q\n\n/edit: here's the latest file: http://cl.ly/0I3L3I2s0G12\n. @jenius we need to find a way to add a gif in here. No demo page is ever complete without a gif.\n\n![sealexe_is_loading_please_wait-51065](https://cloud.githubusercontent.com/assets/791818/3056571/06f04ca6-e1cc-11e3-953a-647a52a15cbf.gif)\n. NOOOOO!!! LMAO\n. Just pushed a basic example page: http://carlsednaoui.github.io/ouibounce/\n\nWe can revise later with an awesome-er design :)\n. Hey travis, small world\u00a0\u2014 I'm a big fan of pineapple.io (I created http://coursebacon.com/ way back when I was learning rails!).\n\nI'm not sure I understand what you're trying to achieve \u2014 why would you call ouibouce on false? If you're trying to show a modal using ouibounce you def need to select an element (which ouibounce will then show).\n\nAll you're getting with ouibounce is the trigger \u2014 based on the `mouseout` event. You have full control over what happens on exit (which element you show, etc).\n. Ohh, I see. That's a neat use case!\n\nNot sure if there's an easy way to add that in right now but pull requests are always welcome :)\n\n@jenius: any ideas on this?\n. Thanks for the heads up \u2014\u00a0that's a problem. Just opened up a new issue for it :+1: \n. @9mm, just added this \u2014 let me know if it works for you. (I also updated the README :)\n. @9mm, does the code in https://github.com/carlsednaoui/ouibounce/compare/ie8 fix the ie8 bug? I'll find a way to test locally in the coming days.\n. Thanks for the review @9mm.\n\nGood call @jenius, I really don't want to deal with legacy stuff. Will add the es5-shims to the README.\n. Re-opening. @jenius wanna pair on this when I'm back Stateside? :hamburger: \n. Would this PR address this? https://github.com/carlsednaoui/ouibounce/pull/20\n\n@mcgwebdesign is trying to write tests for it.\n\nLet me know!\n. No worries at all :)\n\nClosing this issue for now \u2014 feel free to re-open if needed.\n. PR submitted with https://github.com/cdnjs/cdnjs/pull/3170\n. @Rendez the build is failing, likely due to the typo identified by @jenius: https://travis-ci.org/carlsednaoui/ouibounce/builds/25087625\n\nAlso, could you edit the README to document what you're adding?\n. Thanks @Rendez! Loved the detailed README addition :)\n\nQuick note, I committed af4938703f7e33fd359b5e8d678f90de8dff74c3 \u2014 I believe `';domain='` was missing.\n\nLet me know if you find any errors.\n\nThanks!\n. :+1: :)\n. @jenius for sure. This issue is can only happen after #29 is completed :)\n. :lollipop: \n. Just submitted to unheap \u2014\u00a0they'll tweet once it's live :)\n. :heart: \n. Thanks @s16h, we can look into `mouseleave` and update the code if makes sense. I think this issue addresses something similar to what you're mentioning: https://github.com/carlsednaoui/ouibounce/issues/26 but we didn't look into `mouseleave` at the time.\n\nHave you have a chance to run the script with `mouseleave` on your end? Does this solve the problem?\n\n/cc: @bergerjac \n. This is great @bergerjac! Here's another way to test:\n\nMouseout    \n\n``` js\n$('body').on('mouseout', function(e) {console.log('out')});\n```\n\nMouseleave    \n\n``` js\n$('body').on('mouseleave', function(e) {console.log('leave')});\n```\n\nWant to submit a PR?\n. Closed with #45 \n. Hi @simevidas by window breakpoint I mean \"the window edge\". That's where the website's content ends and the URL bar starts.\n\nThe modal is triggered whenever the user is trying to leave your website \u2014\u00a0when she/ he moves the mouse pass the window breakpoint (to close the tab, change the URL, etc).\n\nLet me know if that clarifies your question!\n. Thanks @simevidas, I just clarified the `README`: https://github.com/carlsednaoui/ouibounce#sensitivity\n. Interesting concept. Want to give this a shot @simevidas and submit a PR?\n. @simevidas thoughts on this: https://github.com/carlsednaoui/ouibounce/tree/reEnter?\n. @simevidas feel free to review when you have time. I'm closing this issue for now \u2014\u00a0happy to re-open when / if needed.\n. Bad idea. Closing.\n. Closed with #44 \n. I think that's because something is overriding jQuery's `$`.\n\n![image](https://cloud.githubusercontent.com/assets/791818/3126512/41ed4268-e7a4-11e3-98cc-ff30960cd3cc.png)\n\nThese two should be the same:\n![image](https://cloud.githubusercontent.com/assets/791818/3126517/5cb3935e-e7a4-11e3-8ae3-57845e640eb3.png)\n\nLike in here:\n![image](https://cloud.githubusercontent.com/assets/791818/3126522/7f4e79a6-e7a4-11e3-91df-9a5f391fb983.png)\n\nOne way to fix this would be to change `$('body').on('click', function() {` to `jQuery('body').on('click', function() {` but you should probably get a developer to look at your code and understand where and why jQuery's `$` is getting overridden.\n\nClosing this issue. Hopefully this helps.\n. Awesome, thank you @dz0ny. Will add package to registry.\n. Love it! Thanks @bergerjac :smiley: \n. https://github.com/cdnjs/cdnjs/pull/3894\n. Not sure how to make it work without interrupting the user flow. If they're not tapping they're likely reading or away (therefore defeating the purpose of a modal).\n\nUnfortunately, I don't there's an elegant solution for this :(\n. Closing this for now.\n. Example 2 in the README has the wrong ouibounce version, my bad \u2014\u00a0will open an issue to update it.\n\nTry the same thing here: http://carlsednaoui.github.io/ouibounce/ you shouldn't face this problem.\n\nClosing for now, please re-open if http://carlsednaoui.github.io/ouibounce/ has the issue you're describing.\n. Thanks @zaus! I just re-opened the issue. I'll try to replicate this bug on my end (maybe with different browsers?).\n\nWould you be able to submit a pull-request trying to fix this?\n. Ahhh, I'm trying to replicate this behavior @zaus and can't do it!\n\n@jenius are you able to replicate this issue on your machine?\n. :alien: \n. Could someone please share a live URL where this is happening?\n. Thanks so much for the demo, this is infuriating!\n\nLook what happens on my machine (it all works as expected):\n\n![6](https://cloud.githubusercontent.com/assets/791818/3565192/333859b0-0aae-11e4-8e8f-7a630893d3b5.gif)\n\nIf you implement [this version/ release](https://github.com/carlsednaoui/ouibounce/releases/tag/v0.0.8) does this still happen? Wondering if there's something to the `mouseout` v.s. `mouseleave` that we recently implemented.\n\nLet me know and happy weekend! \n. Hmmm so weird, I'll try to play around by tracking the mouse movement and only trigger is the mouse is going up.\n\nMy schedule is booked for the next week or so \u2014 I'll take a look as soon as I can.\n\n@colinodell, if you have time, let me know if implementing mouse movement solves this \u2014 we can just add another conditional before firing the event.\n. Thanks @colinodell! Branch merged.\n\n@zaus, let me know if the problem persists.\n\nClosing this issue for now (and hopefully for ever :smile:)\n. Updated!\n. Hi @AmandaMT, the `sitewide: true` option should be doing this for you. Can you share the website this is implemented on?\n. @AmandaMT did you try turning `aggressive` off? You can simply remove that line.\n\nAlso, your code is throwing an error, you might want to have a dev look at it:\n![image](https://cloud.githubusercontent.com/assets/791818/3252449/44769e9a-f1c1-11e3-8dab-8f60f825ca45.png)\n. @AmandaMT glad I was able to help :)\n. Thanks @zaus!\n\nI just implemented the toUTCString change (good call on this, didn't know it was deprecated).\n\nPreventing the event trigger should have been solved in #55 \u2014\u00a0let me know if this doesn't work for you.\n\nClosing for now \u2014\u00a0thank you again for submitting the PR!!\n\n:smile: :fries: :hamburger: \n. Thanks for the suggestions @zaus.\n\nBy default, OuiBounce uses a session cookie, so we should be good. The overhead is a good point, but it's so small that I'd rather keep the code smaller / cleaner v.s. saving a few cycles of calculation.\n\nI'll close this issue for now.\n. Hmm, just took a look. It's probably a CSS issue.\n\nMake sure that `.modal` has `display: block;`.\n\n![image](https://cloud.githubusercontent.com/assets/791818/3584384/2e4e213a-0c18-11e4-8135-abd28f2201a2.png)\n. You're welcome :)\n. @pjrvs the [example page](http://carlsednaoui.github.io/ouibounce/) has this behavior. As @jenius said, this is something that would need to be implemented on your end.\n\nHere's how I [implemented this](https://github.com/carlsednaoui/ouibounce/tree/gh-pages):\n\n``` js\n    <!-- Example page JS        -->\n    <!-- Used to fire the modal -->\n    <script>\n\n      // if you want to use the 'fire' or 'disable' fn,\n      // you need to save OuiBounce to an object\n      var _ouibounce = ouibounce(document.getElementById('ouibounce-modal'), {\n        aggressive: true,\n        timer: 0,\n        callback: function() { console.log('ouibounce fired!'); }\n      });\n\n      $('body').on('click', function() {\n        $('#ouibounce-modal').hide();\n      });\n\n      $('#ouibounce-modal .modal-footer').on('click', function() {\n        $('#ouibounce-modal').hide();\n      });\n\n      $('#ouibounce-modal .modal').on('click', function(e) {\n        e.stopPropagation();\n      });\n    </script>\n```\n\nThe key is this little bit here:\n\n``` js\n     $('body').on('click', function() {\n        $('#ouibounce-modal').hide();\n      });\n```\n\nCombined with this to ensure users can click on the modal content without having it close on them:\n\n``` js\n      $('#ouibounce-modal .modal').on('click', function(e) {\n        e.stopPropagation();\n      });\n```\n\nClosing this issue for now\u00a0\u2014\u00a0let me know if you have any problems implementing this on your end :smile: \n. Hi @djanowski!\n\nOuiBounce focuses on the logic of detecting _when_ a user leaves the page. What happens once the ouibounce event fires is up to each individual user.\n\nIn this case, you're free to make the field auto-focus. You can also show a banner, exit survey, or do anything else you like :)\n\nI'm closing this issue for now as it doesn't appear to be related with the core functionality of the library. Happy to re-open if there's something I'm missing.\n. Hi @siddarthp, I don't think you meant to post this here.\n\nClosing this issue for now.\n. @Huti, thanks for answering this \u2014\u00a0makes me wonder if we should switch back to the `mouseout` event listener. This was changed in v0.0.9: https://github.com/carlsednaoui/ouibounce/releases/tag/v0.0.9.\n. @Huti, I also just merged a few PR that fixed some bugs.\n\nI just tested Ouibounce in Safari (on a Mac) and everything appears to work fine. Please let me know if you still have any issue on your end.\n\nIf so, we can look into it and fix them :smile: \n. Ahh, that's terrible!\n\nIs the only way to fix this to append\n\n``` js\nif (/windows/.test(navigator.userAgent.toLowerCase()) && /safari/.test(navigator.userAgent.toLowerCase())) {  \n  _html.addEventListener('mouseout', handleMouseleave);\n}\n```\n\n?\n\nWondering if the event listener is just not getting attached. (If so, I have no idea why =/)\n. @jhard if you remove the safari test, does [v0.0.10](https://github.com/carlsednaoui/ouibounce/releases/tag/v0.0.10) not work?\n. Thank you @jhard :smile: \n. As noted by @stevenchoo on #63 \n\n> The problem only occurs on Chrome (currently v36) Windows, where as Chrome on Ubuntu, Firefox (Windows & Ubuntu) and Internet Explorer do not show any problems.\n. Thanks @kevinweber, I'll modify the copy a bit and will merge it this weekend :)\n. Hi @c3x, thanks for the suggestion!\n\nOuiBounce only handles the \"business logic\" by providing an event when the user leaves the page.\u00a0What you do this with said event (such as show a modal) is up to you (that includes the modal content too).\n\nDon't get me wrong, dynamically switching the modal's content based on duration of visit is **DEFINITELY** a great idea! Unfortunately, I don't think it belongs in OuiBounce.\n\nLet me know if you build this and I'll add it to the README :smile: (and I'll use it on my sites too!!)\n\nClosing this issue for now.\n. Thanks for the suggestion @kevinweber. Could you please submit a Pull Request with this?\n. Ok, I'll close this issue for now \u2014\u00a0we can re-open when you're ready to send the PR. I won't be implementing this on my end :smile: \n. Hi @palamccc, thanks for filing the bug. What's your browser version / operating system?\n. Thanks @palamccc and @StevenChoo, I think this is a dup of #59 (same reason). I'll close this issue and will try to patch #59 soon :smile: \n. @chppatel you're saying that when you added a CSS stylesheet (bootstrap), a JavaScript library (Ouibouce) stopped working? I don't think that's really possible.\n\nWas this working before you added the Bootstrap styles AND are you using the same `css` selectors as I did in the examples? If so, you probably need to change the `css` classes for the Ouibounce modal (both Bootstrap and the Ouibounce example use `.modal` as a `css` class).\n\nHope this helps,\n\nCarl\n. Closing this issue \u2014 let me know if the problem persists and I can re-open.\n. It works for me. Try it in incognito:\n\n![1](https://cloud.githubusercontent.com/assets/791818/4109908/4d054862-31eb-11e4-8daf-ffc9bd691fd2.gif)\n\nIf you want it to fire every time (which I don't recommend), you need to set `aggressive: true`\n. Closing this issue \u2014\u00a0let me know if the problem persists and I can re-open.\n. @fabiosl, that's weird. The modal fires as expected in the gif attached earlier (on Chrome / Mac). Are you getting any errors on production?\n. @fabiosl let me know if there's anything I can do to help\n. I think that bootstrap takes over the `.modal` class.\n\nDid you try renaming your classes? Example:\n\n``` html\n<div id=\"ouibounce-modal\">\n      <div class=\"underlay\"></div>\n      <div class=\"ouibounce-modal\">\n        <div class=\"ouibounce-modal-title\">\n          <h3>This is a OuiBounce modal!</h3>\n        </div>\n\n        <div class=\"ouibounce-modal-body\">\n          <p>A doge is an elected chief of state lordship, the ruler of the Republic in many of the Italian city states during the medieval and renaissance periods, in the Italian \"crowned republics\".</p>\n          <p>The word is from a Venetian word that descends from the Latin dux (as do the English duke and the standard Italian duce and duca), meaning \"leader\", especially in a military context. The wife of a doge is styled a dogaressa. <a href=\"https://en.wikipedia.org/wiki/Doge\" target=\"blank\">[1]</a></p>\n\n          <form>\n            <input type=\"text\" placeholder=\"you@email.com\">\n            <input type=\"submit\" value=\"learn more &raquo;\">\n            <p class=\"form-notice\">*this is a fake form</p>\n          </form>\n        </div>\n\n        <div class=\"ouibounce-modal-footer\">\n          <p>no thanks</p>\n        </div>\n      </div>\n    </div>\n```\n. @alebcay: Thanks for adding me to the NPM registry :smile: \n\nI'll shortly update CDNJS too.\n. Hi everyone, sorry for the delay \u2014\u00a0been busy / on vacation. Will look and merge soon :)\n\nThanks again for the PR @jdeniau :hamburger: \n. Weird. Did you try hosting the code yourself?\n\n**Note:** CDNJS is a few versions behind \u2014\u00a0I need to send a PR for the update.\n. @lucianojmf let me know if the problem persists. Closing for now.\n. If you open the console and type `ouibounce`, do you get access to it?\n. Looks like the script ins't being loaded \u2014 weird.\n\n## \n\nCarl Sednaoui\n+1 (646) 498-6451\n@carlsednaoui http://www.twitter.com/carlsednaoui\nCoderDojo http://www.coderdojonyc.com/ | MailCharts\nhttp://www.mailcharts.com/ | Thinkful http://www.thinkful.com/\n\nOn Wed, Oct 15, 2014 at 2:10 AM, melinazell notifications@github.com\nwrote:\n\n> Yes, if I start typing, the \"auto fill\" shows ouibounce. And if I press\n> return, I can see the function too...\n> \n> Please see this...\n> [image: oui]\n> https://cloud.githubusercontent.com/assets/6194316/4641139/e46af9e6-5431-11e4-9d0d-de08ca391542.gif\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/carlsednaoui/ouibounce/issues/70#issuecomment-59161908\n> .\n. Kaboom!\n\n## \n\nCarl Sednaoui\n+1 (646) 498-6451\n@carlsednaoui http://www.twitter.com/carlsednaoui\nCoderDojo http://www.coderdojonyc.com/ | MailCharts\nhttp://www.mailcharts.com/ | Thinkful http://www.thinkful.com/\n\nOn Wed, Oct 15, 2014 at 1:45 PM, Atanas Yanev notifications@github.com\nwrote:\n\n> note that oui**_B**_ounce != oui**_b**_ounce :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/carlsednaoui/ouibounce/issues/70#issuecomment-59245696\n> .\n. @kevinweber Thanks for the PR but I don't think I'll be merging this. In essence, this PR defeats the purpose of ouibounce which it to fire an event when a user plans on leaving the site.\n. My dislike for \"time-based events\" is the reason I hacked up ouibounce \u2014 I believe these provide a less-than-ideal user experience (ouibounce being the less evil of all options out there).\n\nI'm happy to leave this branch open since you already put the work into it but don't feel comfortable morphing the philosophy behind this project.\n\nRe: the on-load hook: ouibounce should be loaded on pageload, because of this, I feel as though it isn't necessary.\n\nThanks again for spending the time on this @kevinweber I do really appreciate it. I hope you can see things from my perspective too :hamburger: \n. @neils1 ouibounce was not (and cannot) be designed for mobile devices since there's no such thing as \"finger tracking\" (yet :)\n. :+1: +1 on what @jenius said :)\n. Not sure what your issue is.\n\n`$('#ouibounce-modal').show();` shows the modal\n`$('#ouibounce-modal').hide();` hides the modal\n\nYou have some z-index problems, but other than that, it appears to work\n\n![image](https://cloud.githubusercontent.com/assets/791818/4900065/56d329d6-6422-11e4-9b19-7584cea79fc3.png)\n. Not sure, to be honest.\n\nSomething like `$('.ouibounce-modal-footer').on('click', function() {$('#ouibounce-modal').hide();})` should work.\n\nFirst I'd try fixing all these errors:\n![image](https://cloud.githubusercontent.com/assets/791818/4900874/b36e4edc-642c-11e4-9ec7-9e4786075781.png)\n\nSomething is overriding `$`\n\nAdding this: `jQuery('.ouibounce-modal-footer').on('click', function() {$('#ouibounce-modal').hide();})` and then clicking on the link works.\n. @kevinweber I don't think that detects the exit intent. Imagine if `NYTimes` did that when you scrolled back up, or a product page did so when in reality you wanted to go from the `Jeans` section to the `Jacket` section.\n. I personally won't be working on this. Closing this issue. If anyone is interested on building this functionality pls hollar.\n. @jenius I don't think you fully understand what the proposed feature is. This is a pixel-like implementation of the `timer`.\n\nThis would essentially **prevent** ouibounce from firing if a user has **not** engaged with your page (by scrolling at least Xpx).\n. Good call re: jamming the page.\n\nMaybe time to have 2 scripts? One with, one without?\n. @visiblybetter it's just a manual way to fire the modal. If you build any of the logic for `1, 2, 3` then yes, you can achieve this.\n. Hi @brushbill, ouibounce will always fire if you try to exit the viewport \u2014\u00a0that's the nature of the plugin.\n\nTo answer your question, sensitivity relies on this: https://developer.mozilla.org/en-US/docs/Web/Events/mouseleave \n\nThis was added to prevent ouibounce from \"firing too early\" when certain elements had padding and what not.\n\nHope this helps,\n. Send a PR?\n. :+1: \n. Can you pls share some code or way to reproduce this?\n. I don't think that's correct. Check out this test file: https://github.com/carlsednaoui/ouibounce/blob/master/test/index.html\n\nYou can load the page (make sure you're running it from a server), call `_ouibounce.disable()` leave the window and nothing happens. Refresh the page, leave the window and ouibounce fires as expected.\n\nClosing since I checked this on my end. Happy to re-open if what I described above doesn't work as expected.\n. Thanks for the suggestion @roblb. Unfortunately, this is not something we'll be pursuing on Ouibounce. You can find more info on this previous issue: https://github.com/carlsednaoui/ouibounce/issues/74\n\nPlease feel free to fork this project and add this functionality.\n. Thanks for the note @leobardimpact. If you've found a fix, could you please submit a PR?\n. Thanks for the note, @pvdbroek. If you'd like to see this implemented, the easiest way is to submit a PR. I can take a look at this in the coming weeks/ month. Just need to get parallel for my computer and be able to run IE to test this.\n. _tl;dr: No._\n\nHi James,\n\nThanks for the suggestion! Ouibounce only handles the `business logic` of detecting _when_ to fire a modal.\n\nHow the modal looks and what it says is completely up to you. I haven't had a chance to write sample modals but I [did design a few](https://github.com/carlsednaoui/ouibounce#modal-inspiration) you can use as inspiration.\n\nHope this helps!\n. @tomazzaman please do! would love to improve the `fire()` functionality.\n\nThanks so much for asking first and for taking charge of this! :pizza: \n. Thanks @tomazzaman I'll take a look this weekend.\n. Damn, nice PR. Thanks @tomazzaman.\n\nLet me add your tutorial to the README too :smile: \n. Thanks for the note and compliments.\n\nI'd like to your page but, unfortunately, there's no way to download it without an email capture. That's a dealbreaker.\n. Sure, that's be great!\n. Thanks @marketbizpro. I'll create a new issue for this and add it to the README when I get a chance.\n. @marketbizpro thanks for the info but please don't promote other startups / services on this repo as this is not related to Ouibounce. As a heads up, I'm going to delete your above comment.\n. @bradvogel Just sent a PR :)\n. Done @bradvogel: https://github.com/jsdelivr/jsdelivr/commit/8d31243679bb1fc652896c43ddbda8bb7882c24c\n. @madmaxy thanks for opening an issue. Unfortunately, I know nothing about jbetolo or Joomla. \n\nYou mentioned\n\n> modal-footer Button is not working.\n\nThis doesn't feel like a ouibounce-specific issue but more of an issue with the form you're using. If you took the demo form, that will certainly not work as it's for demo purposes only. May I suggest you open an issue on StackOverflow?\n\nI will close this issue for now \u2014\u00a0let me know if there's anything I can do to be more useful.\n\nThanks,\n. Hi @sebastien-fauvel, thanks for spending the time implementing this for your client \u2014 and for sending a PR through. As mentioned in #74 I personally don't like this behavior (more details [here](https://github.com/carlsednaoui/ouibounce/issues/74#issuecomment-62837551)).\n\nNot sure what the best way to proceed is, but I'd like ouibounce to keep it's focus on someone `bouncing`, not for rapid scrolling.\n. @sudipmisra this feels like a CSS or implementation error, correct?\n\nAs in, Ouibounce works as expected (the JS-based trigger). I'll close this issue unless you have a specific question related to how the library works. Unfortunately, I don't have time to help you debug CSS implementation. Sorry :(\n. I do. It's supposed to be automatic. I haven't had a chance to look into\nwhy it's not updating... sorry :(\n. Updated! https://cdnjs.com/libraries/ouibounce\n. Should be all up to date. Sorry about the delay on this!\n. https://www.npmjs.com/package/ouibounce\n. Hi @Staalkoper, I just looked at http://production.siteoplossing.nl/ and saw a modal fire. Assuming you're all good here!\n. @Staalkoper this looks to be resolved. Closing issue \u2014\u00a0please re-open if this is still a problem\n. Thanks for the note, Ike. As you can see, I've been a bit absent when it\ncomes to open source :(\n\nWill try to jump back into the ouibounce train soon!\n\nOn Fri, Feb 17, 2017 at 8:31 AM, Ike Ku <notifications@github.com> wrote:\n\n> hi @carlsednaoui <https://github.com/carlsednaoui> can you please take a\n> look at this PR?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/carlsednaoui/ouibounce/pull/112#issuecomment-280649770>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAwVCjOxkyZoPz3_I5iCkOnSrJnRawekks5rdaEhgaJpZM4HsYu->\n> .\n>\n. My bad, thanks for the heads up @tandrewnichols \n. Hi Theo, that's not something I plan on building. Sorry =/\n\nOn Wed, May 17, 2017 at 7:12 AM, Theo Tzaferis <notifications@github.com>\nwrote:\n\n> Hello,\n>\n> I wanted to use this plugin in my site which uses TypeScript. However, I\n> haven't found any types definition for this library. Is it planned to\n> integrate this plugin also to TypeScript or is this something that won't\n> happen in the near future?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/carlsednaoui/ouibounce/issues/129>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAwVCieJOxoNSCWU8slBbtA64ertisuVks5r6tYWgaJpZM4Ndtrp>\n> .\n>\n. Checks if someone is using keyboard to focus the URL input (which likely\nmeans they are going to navigate away).\n\n\nOn Mon, Jun 26, 2017 at 10:59 PM yellow1912 <notifications@github.com>\nwrote:\n\n> It seems like the keycode for the character l, is there any special\n> purpose for checking it?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/carlsednaoui/ouibounce/issues/131>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAwVCjbaDY7eS0M1D1CJ8w1AYRJkcZvoks5sIHAWgaJpZM4OGF0q>\n> .\n>\n-- \nMobile\n. Done!\n. Let's do it!\n. Fixed!\n. @joshuachestang I haven't had a chance to build the modals out. You can use the designs provided in the readme as inspiration to build your own though :)\n. Taking care of with callback option in #8 \n. Awesome, I'll be merging this soon.\n. Thanks for the pull request @nilsine :)\n. :shipit: \n. Full of `#win`\n. Done & merged into CDNJS :)\n\nhttps://github.com/cdnjs/cdnjs/pull/2918#issuecomment-39287853\n. Thanks for the PR @ayanev! I'll check out the code (and merge) this weekend.\n. Thanks @jenius! Passing the cookie expiration date as an option def looks like the right move.\n\n@ayanev, let me know if you want to review/ update the PR.\n. Added this in commit 2685ba5. Thanks @ayanev!\n. Agreed. @filipekiss, wanna review the PR? I can also work on this in the next few days.\n. Thanks for the pulled request :smile:  I ended up using a slightly different approach in 5d894eea3483690612c80573230976a5794cf2fc\n. :+1: This looks great! :shipit: \n. Good point @mcgwebdesign.\n\n@jenius, do you think this should be the default behavior? (Site-wide cookie) I think it makes sense to do so.\n\nWe could change line 56 in the source to\n`document.cookie = 'viewedOuibounceModal=true' + cookieExpire + ';path=/';`\n. @mcgwebdesign agreed with @jenius, a PR to include the option for site-wide cookie would be great.\n\nAs a side note, this logic shouldn't be part of ouibounce:\n\n> 1) user clicks out, show again in 5 days\n> 2) user fills out form, never show again\n\nYou will still need to build some logic on your own :)\n. :+1: :smile: \n. @mcgwebdesign as a side note, there's already a cookie expiration option\n\n``` js\nouiBounce(document.getElementById('ouibounce-modal'), { cookieExpire: 10 });\n```\n\nI think what you want to add is page-specific cookie v.s. site-wide cookie (an on / off option basically). The default should be site-wide cookie unless page-specific is set to `True` (or whatever naming convention we choose).\n. @mcgwebdesign saw you opened then closed a PR. Let me know when you're ready to submit :)\n. Awesome, thanks @mcgwebdesign! I'll take a look either tonight or this weekend at the latest :)\n. /note: Relevant PR #20 \n. Closing issue since there's a PR for it (#20).\n. Thanks for the suggestions but the current behavior works as expected for the tests. This may get revised when I write more tests for it.\n\nClosing for now.\n. @jenius, tried to clarify that gnarly ternary logic. Thoughts? 2ff8c3dec94e5b41d97774d46c2bf68a2c1c6e5d\n. @mcgwebdesign, let us know if you'll be writing tests for this :smiley: \n. Thanks @schonfeld! This was rebased and merged.\n\n/reference 1f8896e073382771e30c8d34afe1f0cfb938ac2f, c3ddb78a05cb57bf91435ac0a84b2e42839c0ac0\n. Wow, what a long thread. Thanks for the great contribution @jenius!\n\nTo answer the `sensitivity` setting on `mouseout`\n\n> The mouseout event is fired when a pointing device (usually a mouse) is moved off the element that has the listener attached or off one of its children.\n> [source](https://developer.mozilla.org/en-US/docs/Web/Reference/Events/mouseout)\n\nThis means that anytime the mouse moves away from `html` (or leaves the `window`) an event is sent. We then check the position of the mouse like so: `e.clientY > sensitivity`. This prevents ouibounce to fire when your mouse exits on the side of the screen, etc. There might be a better way to do this but this seems to work fine for our purposes.\n\nTo better understand the `mouseout` event you can clone this project and change the [build file](https://github.com/carlsednaoui/ouibounce/blob/master/build/ouibounce.js#L43) to have the following code on line 43:\n`console.log('moused out');`\n\nYou can then open up the [test file](https://github.com/carlsednaoui/ouibounce/blob/master/test/index.html) in your browser and look at the console \u2014 you'll see the mouseout events firing.\n\nHope this helps. I'm gonna close this issue for now.\n. @jenius good ol' `git push -f` :back:  \n. IT'S ON THE LINE, EVERYBODY WILL SEE THIS!\n\nMy shot at becoming the first French-American president is now forever gone :(\n\n> At least I got chicken\n. literally lol'ed :+1: :+1: :+1: \n. @dtdw, the plugin behaves as expected. As you mentioned, if you **slowly** move your mouse inside the window then the event will fire. To get rid of this (or limit it), move your mouse like a regular user (at regular speed) or decrease the sensitivity.\n\nClosing this issue for now. Please re-open if there's anything actionable.\n. Good point @dtdw, have you tried playing with sensitivity? If you set it to ~5 (or maybe even less) the odds of this happening will decrease tremendously.\n\nYou can also try to implement an alternative fix and submit a pull request :)\n. /note: Maybe we can make use of [this](http://stackoverflow.com/questions/7389328/detect-if-browser-tab-has-focus). The [demo](http://www.thefutureoftheweb.com/demo/2007-05-16-detect-browser-window-focus/) is really cool.\n. That was good feedback @dtdw, I actually opened up a new issue \u2014 #26 \u2014 to look into it :) \n. And no worries about contributing, we're all learning as we go :smiley: \n. Just looked into this.\n\nHere's what's happening: whenever there's padding around the `body` (or any element at the top of the page), Ouibouce is likely to fire \u2014 this is because a `mouseout` event is called and the default sensitivity is pretty high. The 2 examples provided in the README link to GitHub pages, which have 50px of padding on the `body`.\n\nThe solution is to decrease the sensitivity \u2014 I tested it with `sensitivity: 1` and it worked like a charm.\n\n/edit: The GH-Pages example's sensitivity has been updated with 3e431af0cec72dc4f4a7e5cd2d867ece7f57335a\n. @dtdw decreasing the [sensitivity](https://github.com/carlsednaoui/ouibounce#sensitivity) should take care of that.\n\nClosing for now. Re-open if that doesn't solve your problem.\n. @jenius how about this?\n\n![image](https://cloud.githubusercontent.com/assets/791818/3056434/bb743b62-e1ca-11e3-9443-3ae025e31fab.png)\n\nThinking we could add interactivity options later. Thoughts?\n. Ahh, forgot about the pattern. I did this in PS, Sketch wasn't opening up for me (it was crashing), decided to redo it lol.\n\nHere is it with pattern\n![image](https://cloud.githubusercontent.com/assets/791818/3056536/b42cd746-e1cb-11e3-98c0-66648c1b6b3f.png)\n\nAnd here's the 'shop file: http://cl.ly/0X3e0u00111Q\n\n/edit: here's the latest file: http://cl.ly/0I3L3I2s0G12\n. @jenius we need to find a way to add a gif in here. No demo page is ever complete without a gif.\n\n![sealexe_is_loading_please_wait-51065](https://cloud.githubusercontent.com/assets/791818/3056571/06f04ca6-e1cc-11e3-953a-647a52a15cbf.gif)\n. NOOOOO!!! LMAO\n. Just pushed a basic example page: http://carlsednaoui.github.io/ouibounce/\n\nWe can revise later with an awesome-er design :)\n. Hey travis, small world\u00a0\u2014 I'm a big fan of pineapple.io (I created http://coursebacon.com/ way back when I was learning rails!).\n\nI'm not sure I understand what you're trying to achieve \u2014 why would you call ouibouce on false? If you're trying to show a modal using ouibounce you def need to select an element (which ouibounce will then show).\n\nAll you're getting with ouibounce is the trigger \u2014 based on the `mouseout` event. You have full control over what happens on exit (which element you show, etc).\n. Ohh, I see. That's a neat use case!\n\nNot sure if there's an easy way to add that in right now but pull requests are always welcome :)\n\n@jenius: any ideas on this?\n. Thanks for the heads up \u2014\u00a0that's a problem. Just opened up a new issue for it :+1: \n. @9mm, just added this \u2014 let me know if it works for you. (I also updated the README :)\n. @9mm, does the code in https://github.com/carlsednaoui/ouibounce/compare/ie8 fix the ie8 bug? I'll find a way to test locally in the coming days.\n. Thanks for the review @9mm.\n\nGood call @jenius, I really don't want to deal with legacy stuff. Will add the es5-shims to the README.\n. Re-opening. @jenius wanna pair on this when I'm back Stateside? :hamburger: \n. Would this PR address this? https://github.com/carlsednaoui/ouibounce/pull/20\n\n@mcgwebdesign is trying to write tests for it.\n\nLet me know!\n. No worries at all :)\n\nClosing this issue for now \u2014 feel free to re-open if needed.\n. PR submitted with https://github.com/cdnjs/cdnjs/pull/3170\n. @Rendez the build is failing, likely due to the typo identified by @jenius: https://travis-ci.org/carlsednaoui/ouibounce/builds/25087625\n\nAlso, could you edit the README to document what you're adding?\n. Thanks @Rendez! Loved the detailed README addition :)\n\nQuick note, I committed af4938703f7e33fd359b5e8d678f90de8dff74c3 \u2014 I believe `';domain='` was missing.\n\nLet me know if you find any errors.\n\nThanks!\n. :+1: :)\n. @jenius for sure. This issue is can only happen after #29 is completed :)\n. :lollipop: \n. Just submitted to unheap \u2014\u00a0they'll tweet once it's live :)\n. :heart: \n. Thanks @s16h, we can look into `mouseleave` and update the code if makes sense. I think this issue addresses something similar to what you're mentioning: https://github.com/carlsednaoui/ouibounce/issues/26 but we didn't look into `mouseleave` at the time.\n\nHave you have a chance to run the script with `mouseleave` on your end? Does this solve the problem?\n\n/cc: @bergerjac \n. This is great @bergerjac! Here's another way to test:\n\nMouseout    \n\n``` js\n$('body').on('mouseout', function(e) {console.log('out')});\n```\n\nMouseleave    \n\n``` js\n$('body').on('mouseleave', function(e) {console.log('leave')});\n```\n\nWant to submit a PR?\n. Closed with #45 \n. Hi @simevidas by window breakpoint I mean \"the window edge\". That's where the website's content ends and the URL bar starts.\n\nThe modal is triggered whenever the user is trying to leave your website \u2014\u00a0when she/ he moves the mouse pass the window breakpoint (to close the tab, change the URL, etc).\n\nLet me know if that clarifies your question!\n. Thanks @simevidas, I just clarified the `README`: https://github.com/carlsednaoui/ouibounce#sensitivity\n. Interesting concept. Want to give this a shot @simevidas and submit a PR?\n. @simevidas thoughts on this: https://github.com/carlsednaoui/ouibounce/tree/reEnter?\n. @simevidas feel free to review when you have time. I'm closing this issue for now \u2014\u00a0happy to re-open when / if needed.\n. Bad idea. Closing.\n. Closed with #44 \n. I think that's because something is overriding jQuery's `$`.\n\n![image](https://cloud.githubusercontent.com/assets/791818/3126512/41ed4268-e7a4-11e3-98cc-ff30960cd3cc.png)\n\nThese two should be the same:\n![image](https://cloud.githubusercontent.com/assets/791818/3126517/5cb3935e-e7a4-11e3-8ae3-57845e640eb3.png)\n\nLike in here:\n![image](https://cloud.githubusercontent.com/assets/791818/3126522/7f4e79a6-e7a4-11e3-91df-9a5f391fb983.png)\n\nOne way to fix this would be to change `$('body').on('click', function() {` to `jQuery('body').on('click', function() {` but you should probably get a developer to look at your code and understand where and why jQuery's `$` is getting overridden.\n\nClosing this issue. Hopefully this helps.\n. Awesome, thank you @dz0ny. Will add package to registry.\n. Love it! Thanks @bergerjac :smiley: \n. https://github.com/cdnjs/cdnjs/pull/3894\n. Not sure how to make it work without interrupting the user flow. If they're not tapping they're likely reading or away (therefore defeating the purpose of a modal).\n\nUnfortunately, I don't there's an elegant solution for this :(\n. Closing this for now.\n. Example 2 in the README has the wrong ouibounce version, my bad \u2014\u00a0will open an issue to update it.\n\nTry the same thing here: http://carlsednaoui.github.io/ouibounce/ you shouldn't face this problem.\n\nClosing for now, please re-open if http://carlsednaoui.github.io/ouibounce/ has the issue you're describing.\n. Thanks @zaus! I just re-opened the issue. I'll try to replicate this bug on my end (maybe with different browsers?).\n\nWould you be able to submit a pull-request trying to fix this?\n. Ahhh, I'm trying to replicate this behavior @zaus and can't do it!\n\n@jenius are you able to replicate this issue on your machine?\n. :alien: \n. Could someone please share a live URL where this is happening?\n. Thanks so much for the demo, this is infuriating!\n\nLook what happens on my machine (it all works as expected):\n\n![6](https://cloud.githubusercontent.com/assets/791818/3565192/333859b0-0aae-11e4-8e8f-7a630893d3b5.gif)\n\nIf you implement [this version/ release](https://github.com/carlsednaoui/ouibounce/releases/tag/v0.0.8) does this still happen? Wondering if there's something to the `mouseout` v.s. `mouseleave` that we recently implemented.\n\nLet me know and happy weekend! \n. Hmmm so weird, I'll try to play around by tracking the mouse movement and only trigger is the mouse is going up.\n\nMy schedule is booked for the next week or so \u2014 I'll take a look as soon as I can.\n\n@colinodell, if you have time, let me know if implementing mouse movement solves this \u2014 we can just add another conditional before firing the event.\n. Thanks @colinodell! Branch merged.\n\n@zaus, let me know if the problem persists.\n\nClosing this issue for now (and hopefully for ever :smile:)\n. Updated!\n. Hi @AmandaMT, the `sitewide: true` option should be doing this for you. Can you share the website this is implemented on?\n. @AmandaMT did you try turning `aggressive` off? You can simply remove that line.\n\nAlso, your code is throwing an error, you might want to have a dev look at it:\n![image](https://cloud.githubusercontent.com/assets/791818/3252449/44769e9a-f1c1-11e3-8dab-8f60f825ca45.png)\n. @AmandaMT glad I was able to help :)\n. Thanks @zaus!\n\nI just implemented the toUTCString change (good call on this, didn't know it was deprecated).\n\nPreventing the event trigger should have been solved in #55 \u2014\u00a0let me know if this doesn't work for you.\n\nClosing for now \u2014\u00a0thank you again for submitting the PR!!\n\n:smile: :fries: :hamburger: \n. Thanks for the suggestions @zaus.\n\nBy default, OuiBounce uses a session cookie, so we should be good. The overhead is a good point, but it's so small that I'd rather keep the code smaller / cleaner v.s. saving a few cycles of calculation.\n\nI'll close this issue for now.\n. Hmm, just took a look. It's probably a CSS issue.\n\nMake sure that `.modal` has `display: block;`.\n\n![image](https://cloud.githubusercontent.com/assets/791818/3584384/2e4e213a-0c18-11e4-8135-abd28f2201a2.png)\n. You're welcome :)\n. @pjrvs the [example page](http://carlsednaoui.github.io/ouibounce/) has this behavior. As @jenius said, this is something that would need to be implemented on your end.\n\nHere's how I [implemented this](https://github.com/carlsednaoui/ouibounce/tree/gh-pages):\n\n``` js\n    <!-- Example page JS        -->\n    <!-- Used to fire the modal -->\n    <script>\n\n      // if you want to use the 'fire' or 'disable' fn,\n      // you need to save OuiBounce to an object\n      var _ouibounce = ouibounce(document.getElementById('ouibounce-modal'), {\n        aggressive: true,\n        timer: 0,\n        callback: function() { console.log('ouibounce fired!'); }\n      });\n\n      $('body').on('click', function() {\n        $('#ouibounce-modal').hide();\n      });\n\n      $('#ouibounce-modal .modal-footer').on('click', function() {\n        $('#ouibounce-modal').hide();\n      });\n\n      $('#ouibounce-modal .modal').on('click', function(e) {\n        e.stopPropagation();\n      });\n    </script>\n```\n\nThe key is this little bit here:\n\n``` js\n     $('body').on('click', function() {\n        $('#ouibounce-modal').hide();\n      });\n```\n\nCombined with this to ensure users can click on the modal content without having it close on them:\n\n``` js\n      $('#ouibounce-modal .modal').on('click', function(e) {\n        e.stopPropagation();\n      });\n```\n\nClosing this issue for now\u00a0\u2014\u00a0let me know if you have any problems implementing this on your end :smile: \n. Hi @djanowski!\n\nOuiBounce focuses on the logic of detecting _when_ a user leaves the page. What happens once the ouibounce event fires is up to each individual user.\n\nIn this case, you're free to make the field auto-focus. You can also show a banner, exit survey, or do anything else you like :)\n\nI'm closing this issue for now as it doesn't appear to be related with the core functionality of the library. Happy to re-open if there's something I'm missing.\n. Hi @siddarthp, I don't think you meant to post this here.\n\nClosing this issue for now.\n. @Huti, thanks for answering this \u2014\u00a0makes me wonder if we should switch back to the `mouseout` event listener. This was changed in v0.0.9: https://github.com/carlsednaoui/ouibounce/releases/tag/v0.0.9.\n. @Huti, I also just merged a few PR that fixed some bugs.\n\nI just tested Ouibounce in Safari (on a Mac) and everything appears to work fine. Please let me know if you still have any issue on your end.\n\nIf so, we can look into it and fix them :smile: \n. Ahh, that's terrible!\n\nIs the only way to fix this to append\n\n``` js\nif (/windows/.test(navigator.userAgent.toLowerCase()) && /safari/.test(navigator.userAgent.toLowerCase())) {  \n  _html.addEventListener('mouseout', handleMouseleave);\n}\n```\n\n?\n\nWondering if the event listener is just not getting attached. (If so, I have no idea why =/)\n. @jhard if you remove the safari test, does [v0.0.10](https://github.com/carlsednaoui/ouibounce/releases/tag/v0.0.10) not work?\n. Thank you @jhard :smile: \n. As noted by @stevenchoo on #63 \n\n> The problem only occurs on Chrome (currently v36) Windows, where as Chrome on Ubuntu, Firefox (Windows & Ubuntu) and Internet Explorer do not show any problems.\n. Thanks @kevinweber, I'll modify the copy a bit and will merge it this weekend :)\n. Hi @c3x, thanks for the suggestion!\n\nOuiBounce only handles the \"business logic\" by providing an event when the user leaves the page.\u00a0What you do this with said event (such as show a modal) is up to you (that includes the modal content too).\n\nDon't get me wrong, dynamically switching the modal's content based on duration of visit is **DEFINITELY** a great idea! Unfortunately, I don't think it belongs in OuiBounce.\n\nLet me know if you build this and I'll add it to the README :smile: (and I'll use it on my sites too!!)\n\nClosing this issue for now.\n. Thanks for the suggestion @kevinweber. Could you please submit a Pull Request with this?\n. Ok, I'll close this issue for now \u2014\u00a0we can re-open when you're ready to send the PR. I won't be implementing this on my end :smile: \n. Hi @palamccc, thanks for filing the bug. What's your browser version / operating system?\n. Thanks @palamccc and @StevenChoo, I think this is a dup of #59 (same reason). I'll close this issue and will try to patch #59 soon :smile: \n. @chppatel you're saying that when you added a CSS stylesheet (bootstrap), a JavaScript library (Ouibouce) stopped working? I don't think that's really possible.\n\nWas this working before you added the Bootstrap styles AND are you using the same `css` selectors as I did in the examples? If so, you probably need to change the `css` classes for the Ouibounce modal (both Bootstrap and the Ouibounce example use `.modal` as a `css` class).\n\nHope this helps,\n\nCarl\n. Closing this issue \u2014 let me know if the problem persists and I can re-open.\n. It works for me. Try it in incognito:\n\n![1](https://cloud.githubusercontent.com/assets/791818/4109908/4d054862-31eb-11e4-8daf-ffc9bd691fd2.gif)\n\nIf you want it to fire every time (which I don't recommend), you need to set `aggressive: true`\n. Closing this issue \u2014\u00a0let me know if the problem persists and I can re-open.\n. @fabiosl, that's weird. The modal fires as expected in the gif attached earlier (on Chrome / Mac). Are you getting any errors on production?\n. @fabiosl let me know if there's anything I can do to help\n. I think that bootstrap takes over the `.modal` class.\n\nDid you try renaming your classes? Example:\n\n``` html\n<div id=\"ouibounce-modal\">\n      <div class=\"underlay\"></div>\n      <div class=\"ouibounce-modal\">\n        <div class=\"ouibounce-modal-title\">\n          <h3>This is a OuiBounce modal!</h3>\n        </div>\n\n        <div class=\"ouibounce-modal-body\">\n          <p>A doge is an elected chief of state lordship, the ruler of the Republic in many of the Italian city states during the medieval and renaissance periods, in the Italian \"crowned republics\".</p>\n          <p>The word is from a Venetian word that descends from the Latin dux (as do the English duke and the standard Italian duce and duca), meaning \"leader\", especially in a military context. The wife of a doge is styled a dogaressa. <a href=\"https://en.wikipedia.org/wiki/Doge\" target=\"blank\">[1]</a></p>\n\n          <form>\n            <input type=\"text\" placeholder=\"you@email.com\">\n            <input type=\"submit\" value=\"learn more &raquo;\">\n            <p class=\"form-notice\">*this is a fake form</p>\n          </form>\n        </div>\n\n        <div class=\"ouibounce-modal-footer\">\n          <p>no thanks</p>\n        </div>\n      </div>\n    </div>\n```\n. @alebcay: Thanks for adding me to the NPM registry :smile: \n\nI'll shortly update CDNJS too.\n. Hi everyone, sorry for the delay \u2014\u00a0been busy / on vacation. Will look and merge soon :)\n\nThanks again for the PR @jdeniau :hamburger: \n. Weird. Did you try hosting the code yourself?\n\n**Note:** CDNJS is a few versions behind \u2014\u00a0I need to send a PR for the update.\n. @lucianojmf let me know if the problem persists. Closing for now.\n. If you open the console and type `ouibounce`, do you get access to it?\n. Looks like the script ins't being loaded \u2014 weird.\n\n## \n\nCarl Sednaoui\n+1 (646) 498-6451\n@carlsednaoui http://www.twitter.com/carlsednaoui\nCoderDojo http://www.coderdojonyc.com/ | MailCharts\nhttp://www.mailcharts.com/ | Thinkful http://www.thinkful.com/\n\nOn Wed, Oct 15, 2014 at 2:10 AM, melinazell notifications@github.com\nwrote:\n\n> Yes, if I start typing, the \"auto fill\" shows ouibounce. And if I press\n> return, I can see the function too...\n> \n> Please see this...\n> [image: oui]\n> https://cloud.githubusercontent.com/assets/6194316/4641139/e46af9e6-5431-11e4-9d0d-de08ca391542.gif\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/carlsednaoui/ouibounce/issues/70#issuecomment-59161908\n> .\n. Kaboom!\n\n## \n\nCarl Sednaoui\n+1 (646) 498-6451\n@carlsednaoui http://www.twitter.com/carlsednaoui\nCoderDojo http://www.coderdojonyc.com/ | MailCharts\nhttp://www.mailcharts.com/ | Thinkful http://www.thinkful.com/\n\nOn Wed, Oct 15, 2014 at 1:45 PM, Atanas Yanev notifications@github.com\nwrote:\n\n> note that oui**_B**_ounce != oui**_b**_ounce :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/carlsednaoui/ouibounce/issues/70#issuecomment-59245696\n> .\n. @kevinweber Thanks for the PR but I don't think I'll be merging this. In essence, this PR defeats the purpose of ouibounce which it to fire an event when a user plans on leaving the site.\n. My dislike for \"time-based events\" is the reason I hacked up ouibounce \u2014 I believe these provide a less-than-ideal user experience (ouibounce being the less evil of all options out there).\n\nI'm happy to leave this branch open since you already put the work into it but don't feel comfortable morphing the philosophy behind this project.\n\nRe: the on-load hook: ouibounce should be loaded on pageload, because of this, I feel as though it isn't necessary.\n\nThanks again for spending the time on this @kevinweber I do really appreciate it. I hope you can see things from my perspective too :hamburger: \n. @neils1 ouibounce was not (and cannot) be designed for mobile devices since there's no such thing as \"finger tracking\" (yet :)\n. :+1: +1 on what @jenius said :)\n. Not sure what your issue is.\n\n`$('#ouibounce-modal').show();` shows the modal\n`$('#ouibounce-modal').hide();` hides the modal\n\nYou have some z-index problems, but other than that, it appears to work\n\n![image](https://cloud.githubusercontent.com/assets/791818/4900065/56d329d6-6422-11e4-9b19-7584cea79fc3.png)\n. Not sure, to be honest.\n\nSomething like `$('.ouibounce-modal-footer').on('click', function() {$('#ouibounce-modal').hide();})` should work.\n\nFirst I'd try fixing all these errors:\n![image](https://cloud.githubusercontent.com/assets/791818/4900874/b36e4edc-642c-11e4-9ec7-9e4786075781.png)\n\nSomething is overriding `$`\n\nAdding this: `jQuery('.ouibounce-modal-footer').on('click', function() {$('#ouibounce-modal').hide();})` and then clicking on the link works.\n. @kevinweber I don't think that detects the exit intent. Imagine if `NYTimes` did that when you scrolled back up, or a product page did so when in reality you wanted to go from the `Jeans` section to the `Jacket` section.\n. I personally won't be working on this. Closing this issue. If anyone is interested on building this functionality pls hollar.\n. @jenius I don't think you fully understand what the proposed feature is. This is a pixel-like implementation of the `timer`.\n\nThis would essentially **prevent** ouibounce from firing if a user has **not** engaged with your page (by scrolling at least Xpx).\n. Good call re: jamming the page.\n\nMaybe time to have 2 scripts? One with, one without?\n. @visiblybetter it's just a manual way to fire the modal. If you build any of the logic for `1, 2, 3` then yes, you can achieve this.\n. Hi @brushbill, ouibounce will always fire if you try to exit the viewport \u2014\u00a0that's the nature of the plugin.\n\nTo answer your question, sensitivity relies on this: https://developer.mozilla.org/en-US/docs/Web/Events/mouseleave \n\nThis was added to prevent ouibounce from \"firing too early\" when certain elements had padding and what not.\n\nHope this helps,\n. Send a PR?\n. :+1: \n. Can you pls share some code or way to reproduce this?\n. I don't think that's correct. Check out this test file: https://github.com/carlsednaoui/ouibounce/blob/master/test/index.html\n\nYou can load the page (make sure you're running it from a server), call `_ouibounce.disable()` leave the window and nothing happens. Refresh the page, leave the window and ouibounce fires as expected.\n\nClosing since I checked this on my end. Happy to re-open if what I described above doesn't work as expected.\n. Thanks for the suggestion @roblb. Unfortunately, this is not something we'll be pursuing on Ouibounce. You can find more info on this previous issue: https://github.com/carlsednaoui/ouibounce/issues/74\n\nPlease feel free to fork this project and add this functionality.\n. Thanks for the note @leobardimpact. If you've found a fix, could you please submit a PR?\n. Thanks for the note, @pvdbroek. If you'd like to see this implemented, the easiest way is to submit a PR. I can take a look at this in the coming weeks/ month. Just need to get parallel for my computer and be able to run IE to test this.\n. _tl;dr: No._\n\nHi James,\n\nThanks for the suggestion! Ouibounce only handles the `business logic` of detecting _when_ to fire a modal.\n\nHow the modal looks and what it says is completely up to you. I haven't had a chance to write sample modals but I [did design a few](https://github.com/carlsednaoui/ouibounce#modal-inspiration) you can use as inspiration.\n\nHope this helps!\n. @tomazzaman please do! would love to improve the `fire()` functionality.\n\nThanks so much for asking first and for taking charge of this! :pizza: \n. Thanks @tomazzaman I'll take a look this weekend.\n. Damn, nice PR. Thanks @tomazzaman.\n\nLet me add your tutorial to the README too :smile: \n. Thanks for the note and compliments.\n\nI'd like to your page but, unfortunately, there's no way to download it without an email capture. That's a dealbreaker.\n. Sure, that's be great!\n. Thanks @marketbizpro. I'll create a new issue for this and add it to the README when I get a chance.\n. @marketbizpro thanks for the info but please don't promote other startups / services on this repo as this is not related to Ouibounce. As a heads up, I'm going to delete your above comment.\n. @bradvogel Just sent a PR :)\n. Done @bradvogel: https://github.com/jsdelivr/jsdelivr/commit/8d31243679bb1fc652896c43ddbda8bb7882c24c\n. @madmaxy thanks for opening an issue. Unfortunately, I know nothing about jbetolo or Joomla. \n\nYou mentioned\n\n> modal-footer Button is not working.\n\nThis doesn't feel like a ouibounce-specific issue but more of an issue with the form you're using. If you took the demo form, that will certainly not work as it's for demo purposes only. May I suggest you open an issue on StackOverflow?\n\nI will close this issue for now \u2014\u00a0let me know if there's anything I can do to be more useful.\n\nThanks,\n. Hi @sebastien-fauvel, thanks for spending the time implementing this for your client \u2014 and for sending a PR through. As mentioned in #74 I personally don't like this behavior (more details [here](https://github.com/carlsednaoui/ouibounce/issues/74#issuecomment-62837551)).\n\nNot sure what the best way to proceed is, but I'd like ouibounce to keep it's focus on someone `bouncing`, not for rapid scrolling.\n. @sudipmisra this feels like a CSS or implementation error, correct?\n\nAs in, Ouibounce works as expected (the JS-based trigger). I'll close this issue unless you have a specific question related to how the library works. Unfortunately, I don't have time to help you debug CSS implementation. Sorry :(\n. I do. It's supposed to be automatic. I haven't had a chance to look into\nwhy it's not updating... sorry :(\n. Updated! https://cdnjs.com/libraries/ouibounce\n. Should be all up to date. Sorry about the delay on this!\n. https://www.npmjs.com/package/ouibounce\n. Hi @Staalkoper, I just looked at http://production.siteoplossing.nl/ and saw a modal fire. Assuming you're all good here!\n. @Staalkoper this looks to be resolved. Closing issue \u2014\u00a0please re-open if this is still a problem\n. Thanks for the note, Ike. As you can see, I've been a bit absent when it\ncomes to open source :(\n\nWill try to jump back into the ouibounce train soon!\n\nOn Fri, Feb 17, 2017 at 8:31 AM, Ike Ku <notifications@github.com> wrote:\n\n> hi @carlsednaoui <https://github.com/carlsednaoui> can you please take a\n> look at this PR?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/carlsednaoui/ouibounce/pull/112#issuecomment-280649770>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAwVCjOxkyZoPz3_I5iCkOnSrJnRawekks5rdaEhgaJpZM4HsYu->\n> .\n>\n. My bad, thanks for the heads up @tandrewnichols \n. Hi Theo, that's not something I plan on building. Sorry =/\n\nOn Wed, May 17, 2017 at 7:12 AM, Theo Tzaferis <notifications@github.com>\nwrote:\n\n> Hello,\n>\n> I wanted to use this plugin in my site which uses TypeScript. However, I\n> haven't found any types definition for this library. Is it planned to\n> integrate this plugin also to TypeScript or is this something that won't\n> happen in the near future?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/carlsednaoui/ouibounce/issues/129>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAwVCieJOxoNSCWU8slBbtA64ertisuVks5r6tYWgaJpZM4Ndtrp>\n> .\n>\n. Checks if someone is using keyboard to focus the URL input (which likely\nmeans they are going to navigate away).\n\n\nOn Mon, Jun 26, 2017 at 10:59 PM yellow1912 <notifications@github.com>\nwrote:\n\n> It seems like the keycode for the character l, is there any special\n> purpose for checking it?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/carlsednaoui/ouibounce/issues/131>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAwVCjbaDY7eS0M1D1CJ8w1AYRJkcZvoks5sIHAWgaJpZM4OGF0q>\n> .\n>\n-- \nMobile\n. ",
    "joshuachestang": "Hey, sorry reopen this, but where are the templates exactly? I see them inside the readme but what about the actual code?\n. Nevermind. Found them in: https://github.com/carlsednaoui/ouimodals\n. Hey, sorry reopen this, but where are the templates exactly? I see them inside the readme but what about the actual code?\n. Nevermind. Found them in: https://github.com/carlsednaoui/ouimodals\n. ",
    "nilsine": "NP, thank you for saving us 3000$ :-D\n. NP, thank you for saving us 3000$ :-D\n. ",
    "jescalan": ":+1: \n. This looks ready for merge, let's just squash those last 2 commits\n. Updated and ready to roll :camel: \n. :whale: \n. :tada: \n. This is an interesting prospect. I feel like maybe the default should actually be `session` unless days are specified? Or maybe if days is set to `false` it would restore to session? I like the idea, but I don't like having to pass an arbitrary string.\n. Seems legit to me. Want to drop a pull request to get the process started?\n. For sure - any logic directly attached to the cookie can/should be part of ouibounce since ouibounce does set the cookie. But the form piece etc should be separate as that's an outside use case\n. Thank you @mcgwebdesign -- excited to see what you've been working on!\n. Hey @mcgwebdesign - this looks fantastic, nice work! Is there any chance you would take a crack at writing a test for this? https://github.com/carlsednaoui/ouibounce/blob/master/test/test.js\n. Looook who it is! :dog2: \n. Just to check on the gulp thing, did you install gulp globally with `npm i gulp -g`, and still getting that error? If you did this a while ago it also might be an older version...\n. Just my 2 cents, although I'm sure @carlsednaoui will have good answers to this:\n1. [UMD](https://github.com/umdjs/umd) ensures support for a variety of different javascript module loaders such a requirejs and browserify, among others. Loading your javascript as modules rather than attaching everything directly to `window` offers a number of advantages for JS development. To find out more here, I'd suggest poking around for article on the advantages of requirejs and/or browserify to lead you in the right direction. [Some](http://requirejs.org/docs/why.html) [examples](http://esa-matti.suuronen.org/blog/2013/03/22/journey-from-requirejs-to-browserify/) [here](https://gist.github.com/desandro/4686136). In general, using javascript modules is something attractive to more advanced javascript developers, but the benefit of UMD is that it makes this script compatible with everything, whether you are using it as a module or just loading it as a script tag.\n2. Because we are measuring when the mouse has exited the window, not when it has moved in any way. It would be very obnoxious if a popup appeared whenever you moved your mouse.\n3. This is wonderful that you are interested in contributing! A couple quick notes here. First, you can find information on setting up the build in the [contributing.md file](https://github.com/carlsednaoui/ouibounce/blob/master/contributing.md). This is a standard on github, which is nice because you can often find this file in repos when you are interested in contributing. Second, I'm not sure having the event fire when you leave the window in any direction is something that we'd want to pull in to the library. The intent of ouibounce is to have the event fire _before the user is about to leave the page_ by closing the window/tab. If you move your mouse out on the side or bottom of the window, it's unlikely that you are moving to close the tab, which is at the top of the window, and more likely that maybe you are going to check something else, but staying on the page, so it would be inappropriate to have the popup appear then.\n\nHope this helps!\n. For point 2, I'll defer to @carlsednaoui to explain this. However, I promise you that using mouseMove would not be the correct way to handle this, as that particular event would fire whenever the mouse moved anywhere on the page, rather than when it moves outside the page. Not only is this much heavier polling, it would also produce false positives when the user moved their mouse upwards anywhere on the page. Feel free to fork the project and experiment around with these things, but you will find that it does indeed work as intended in the current state.\n\n3) I may be mistaken, but I think our philosophy here was to edge on the side of being ok with occasional rare events when the event doesn't fire if the user leaves (by taking some weird route out the side of the browser then looping back up to the top without entering the window again), than to have it frequently fire when the user is _not_ going to leave. I suppose in technical terms this would be preferring false negatives over false positives. Perhaps @carlsednaoui will disagree with me here, but my opinion on this issue would be that if you want to make that change you'd have to fork it, and that it would not be pulled in here. Although you are welcome to do so, that's what open source is all about!\n. I hope that people don't agree with a more aggressive option, for the good of your users!\n. :+1:\n. Woah what happened with all these commit refs!\n. hah, thats crazy. welp nobody will see it anyway right? :cookie: \n. > \"French Presidential Nominee Sednaoui Force Pushes Code On Github, Faces Public Shame\"\n. Also, if you find that you users frequently wait more than 1s after getting to a site to move their mouse into the window, you can always adjust the delay time to be higher:\n\nhttps://github.com/carlsednaoui/ouibounce#set-a-min-time-before-ouibounce-fires\n. That's a very good point, I hadn't thought of that. The primary use-case @dtdw is talking about here being, I assume, when a user clicks a link to open in a background tab (which I do all the time honestly), but by the time they get there the delay has run and the popup appears on entry.\n\nI'm sure there's a way we can fix this. For example, if that event fires once on entry and once on exit, we could always just record the first fire and only actually trigger the modal on the second, etc.\n. :+1: \n. 100% let's get it :boom: \n. :lipstick: \n. Oh noes what happened to the pattern! Add the sketch file somewhere and I'll pull down and contribute some cleanup? :grinning: \n. Shop? This is an outrage. Recreating in sketch.\n\n![31eeq](https://cloud.githubusercontent.com/assets/556932/3057623/1abdd486-e1d8-11e3-8fe1-dee18b8d6a3e.gif)\n. Maybe something like this would help: https://github.com/WebReflection/ie8\n. Oh yeah IE8 doesnt support `array.reduce` haha. You probably just want to use an es5 shim with this library like this one: https://github.com/es-shims/es5-shim\n\nUnless you want to worry about legacy js engines @carlsednaoui I might add a note that you'll need an es5 shim if you're running on ie8 or earlier to the readme?\n. Cool, looks like potentially adding the event shim to the caveats as well might help. As these shims continue rolling in, it might be worth it for us to add a new build file called `shims` or something that rolls them all into one place, but that the user can choose to include or not at their own discretion.\n. Sure, just let me know!\n. Hey @Rendez, could you add a description to your PR to explain what you did here and why?\n. you mean after the designz are done right?\n. Haha :+1: \n\n``` js\n{\n  \"dependencies\":\n    \"design\": \"git@github.com/carlsednaoui/ouibounce/issues/29\"\n}\n```\n. Ah shoot, I feel like this needs a bit more polish before it's ready for unheap - hopefully they accept it anyway! Will submit a PR to make some small tweaks when I can :sparkling_heart: \n. :+1: \n. I'm good with this - I think this would mean moving the callback into an object so that there could be two, one for `leave` and one for `re-enter`. Since ouibounce doesn't decide what actually happens, and only fires these events, it would be up to the user to reverse the behavior on re-entry.\n. can't you do both?\n. Also, for npm this is just matter of changing `main` in `package.json` to point to `build/ouibounce.js`, that will be a good quick one. Might be a good pull request too :wink: \n. :+1: \n. lgtm :+1: \n. Oooh that's interesting. You might be able to stop this by messing around a little with the bubbling with something like [e.stopPropagation](https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation)\n. Can't replicate either\n. Perhaps it has to do with windows? I know both me and @carlsednaoui are on macs...\n. Ok so I guess I'm going to be the one to point out here that your cursor is a small wizard? :laughing: \n. Is there any use case for this other than a temporary workaround for #48?\n. Hi @pjrvs!\n\nOuibounce won't do this automatically, it's only responsible for detecting and firing the event when the user is about to leave. The modal logic is on you to code :grinning: \n\nThe good news is that you can actually make this happen yourself fairly easily, just attach a click event handler to the `body` element that fires the modal close event. If you want to prevent the event bubbling from also closing the modal when you click anywhere inside the modal, you can attach a second click handler to the modal that calls [stopPropagation](http://api.jquery.com/event.stoppropagation/).\n. You're just talking about in the example, right? The plugin itself does not come with a form.\n. Yeah I've gotta side with @carlsednaoui here and say this isn't a feature I'd be comfortable including. But that's what open source is all about, you are welcome to fork it into your own version that does include this feature!\n. @neils1 that method seems like it would generate a lot of false positives. I think one of the goals of ouibounce is to generate very few or no false positives. Popups are annoying, especially if they come up seemingly randomly. I would go no on that idea, although I must admit it is very creative!\n. I feel like this opens up opportunities to turn this into crappy spam. Nobody wants to get a popup when they are in the middle of scrolling down a page, it's just annoying and makes for a poor experience.\n\nIt also is not in line with the purpose of this plugin, which is to trigger an event when someone is about to leave a page -- that turns it into trigger an event at a couple of arbitrary times that you might want to trigger popups. If we accept that as a feature, what justification would we have to say \"no\" to someone who asked for an option to trigger a popup when the user mouses over a specific element? Or after a specific amount of time on the page?\n. Ohh yeah I totally did not. In that case I agree haha sorry!\n\nBut the caveat here is that you have to bind to `window.scroll` which is kind of a slow thing to do so be careful, that can really choke the javascript up. Might want to add a warning about it in the docs that it could slow down your page, and definitely remove the listener after the scroll point was hit.\n\nCould also listen for mouse movement on the page.\n. I think it's fine as an option in this script, as long as it's off by default!\n. :+1: \n. This looks ready for merge, let's just squash those last 2 commits\n. Updated and ready to roll :camel: \n. :whale: \n. :tada: \n. This is an interesting prospect. I feel like maybe the default should actually be `session` unless days are specified? Or maybe if days is set to `false` it would restore to session? I like the idea, but I don't like having to pass an arbitrary string.\n. Seems legit to me. Want to drop a pull request to get the process started?\n. For sure - any logic directly attached to the cookie can/should be part of ouibounce since ouibounce does set the cookie. But the form piece etc should be separate as that's an outside use case\n. Thank you @mcgwebdesign -- excited to see what you've been working on!\n. Hey @mcgwebdesign - this looks fantastic, nice work! Is there any chance you would take a crack at writing a test for this? https://github.com/carlsednaoui/ouibounce/blob/master/test/test.js\n. Looook who it is! :dog2: \n. Just to check on the gulp thing, did you install gulp globally with `npm i gulp -g`, and still getting that error? If you did this a while ago it also might be an older version...\n. Just my 2 cents, although I'm sure @carlsednaoui will have good answers to this:\n1. [UMD](https://github.com/umdjs/umd) ensures support for a variety of different javascript module loaders such a requirejs and browserify, among others. Loading your javascript as modules rather than attaching everything directly to `window` offers a number of advantages for JS development. To find out more here, I'd suggest poking around for article on the advantages of requirejs and/or browserify to lead you in the right direction. [Some](http://requirejs.org/docs/why.html) [examples](http://esa-matti.suuronen.org/blog/2013/03/22/journey-from-requirejs-to-browserify/) [here](https://gist.github.com/desandro/4686136). In general, using javascript modules is something attractive to more advanced javascript developers, but the benefit of UMD is that it makes this script compatible with everything, whether you are using it as a module or just loading it as a script tag.\n2. Because we are measuring when the mouse has exited the window, not when it has moved in any way. It would be very obnoxious if a popup appeared whenever you moved your mouse.\n3. This is wonderful that you are interested in contributing! A couple quick notes here. First, you can find information on setting up the build in the [contributing.md file](https://github.com/carlsednaoui/ouibounce/blob/master/contributing.md). This is a standard on github, which is nice because you can often find this file in repos when you are interested in contributing. Second, I'm not sure having the event fire when you leave the window in any direction is something that we'd want to pull in to the library. The intent of ouibounce is to have the event fire _before the user is about to leave the page_ by closing the window/tab. If you move your mouse out on the side or bottom of the window, it's unlikely that you are moving to close the tab, which is at the top of the window, and more likely that maybe you are going to check something else, but staying on the page, so it would be inappropriate to have the popup appear then.\n\nHope this helps!\n. For point 2, I'll defer to @carlsednaoui to explain this. However, I promise you that using mouseMove would not be the correct way to handle this, as that particular event would fire whenever the mouse moved anywhere on the page, rather than when it moves outside the page. Not only is this much heavier polling, it would also produce false positives when the user moved their mouse upwards anywhere on the page. Feel free to fork the project and experiment around with these things, but you will find that it does indeed work as intended in the current state.\n\n3) I may be mistaken, but I think our philosophy here was to edge on the side of being ok with occasional rare events when the event doesn't fire if the user leaves (by taking some weird route out the side of the browser then looping back up to the top without entering the window again), than to have it frequently fire when the user is _not_ going to leave. I suppose in technical terms this would be preferring false negatives over false positives. Perhaps @carlsednaoui will disagree with me here, but my opinion on this issue would be that if you want to make that change you'd have to fork it, and that it would not be pulled in here. Although you are welcome to do so, that's what open source is all about!\n. I hope that people don't agree with a more aggressive option, for the good of your users!\n. :+1:\n. Woah what happened with all these commit refs!\n. hah, thats crazy. welp nobody will see it anyway right? :cookie: \n. > \"French Presidential Nominee Sednaoui Force Pushes Code On Github, Faces Public Shame\"\n. Also, if you find that you users frequently wait more than 1s after getting to a site to move their mouse into the window, you can always adjust the delay time to be higher:\n\nhttps://github.com/carlsednaoui/ouibounce#set-a-min-time-before-ouibounce-fires\n. That's a very good point, I hadn't thought of that. The primary use-case @dtdw is talking about here being, I assume, when a user clicks a link to open in a background tab (which I do all the time honestly), but by the time they get there the delay has run and the popup appears on entry.\n\nI'm sure there's a way we can fix this. For example, if that event fires once on entry and once on exit, we could always just record the first fire and only actually trigger the modal on the second, etc.\n. :+1: \n. 100% let's get it :boom: \n. :lipstick: \n. Oh noes what happened to the pattern! Add the sketch file somewhere and I'll pull down and contribute some cleanup? :grinning: \n. Shop? This is an outrage. Recreating in sketch.\n\n![31eeq](https://cloud.githubusercontent.com/assets/556932/3057623/1abdd486-e1d8-11e3-8fe1-dee18b8d6a3e.gif)\n. Maybe something like this would help: https://github.com/WebReflection/ie8\n. Oh yeah IE8 doesnt support `array.reduce` haha. You probably just want to use an es5 shim with this library like this one: https://github.com/es-shims/es5-shim\n\nUnless you want to worry about legacy js engines @carlsednaoui I might add a note that you'll need an es5 shim if you're running on ie8 or earlier to the readme?\n. Cool, looks like potentially adding the event shim to the caveats as well might help. As these shims continue rolling in, it might be worth it for us to add a new build file called `shims` or something that rolls them all into one place, but that the user can choose to include or not at their own discretion.\n. Sure, just let me know!\n. Hey @Rendez, could you add a description to your PR to explain what you did here and why?\n. you mean after the designz are done right?\n. Haha :+1: \n\n``` js\n{\n  \"dependencies\":\n    \"design\": \"git@github.com/carlsednaoui/ouibounce/issues/29\"\n}\n```\n. Ah shoot, I feel like this needs a bit more polish before it's ready for unheap - hopefully they accept it anyway! Will submit a PR to make some small tweaks when I can :sparkling_heart: \n. :+1: \n. I'm good with this - I think this would mean moving the callback into an object so that there could be two, one for `leave` and one for `re-enter`. Since ouibounce doesn't decide what actually happens, and only fires these events, it would be up to the user to reverse the behavior on re-entry.\n. can't you do both?\n. Also, for npm this is just matter of changing `main` in `package.json` to point to `build/ouibounce.js`, that will be a good quick one. Might be a good pull request too :wink: \n. :+1: \n. lgtm :+1: \n. Oooh that's interesting. You might be able to stop this by messing around a little with the bubbling with something like [e.stopPropagation](https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation)\n. Can't replicate either\n. Perhaps it has to do with windows? I know both me and @carlsednaoui are on macs...\n. Ok so I guess I'm going to be the one to point out here that your cursor is a small wizard? :laughing: \n. Is there any use case for this other than a temporary workaround for #48?\n. Hi @pjrvs!\n\nOuibounce won't do this automatically, it's only responsible for detecting and firing the event when the user is about to leave. The modal logic is on you to code :grinning: \n\nThe good news is that you can actually make this happen yourself fairly easily, just attach a click event handler to the `body` element that fires the modal close event. If you want to prevent the event bubbling from also closing the modal when you click anywhere inside the modal, you can attach a second click handler to the modal that calls [stopPropagation](http://api.jquery.com/event.stoppropagation/).\n. You're just talking about in the example, right? The plugin itself does not come with a form.\n. Yeah I've gotta side with @carlsednaoui here and say this isn't a feature I'd be comfortable including. But that's what open source is all about, you are welcome to fork it into your own version that does include this feature!\n. @neils1 that method seems like it would generate a lot of false positives. I think one of the goals of ouibounce is to generate very few or no false positives. Popups are annoying, especially if they come up seemingly randomly. I would go no on that idea, although I must admit it is very creative!\n. I feel like this opens up opportunities to turn this into crappy spam. Nobody wants to get a popup when they are in the middle of scrolling down a page, it's just annoying and makes for a poor experience.\n\nIt also is not in line with the purpose of this plugin, which is to trigger an event when someone is about to leave a page -- that turns it into trigger an event at a couple of arbitrary times that you might want to trigger popups. If we accept that as a feature, what justification would we have to say \"no\" to someone who asked for an option to trigger a popup when the user mouses over a specific element? Or after a specific amount of time on the page?\n. Ohh yeah I totally did not. In that case I agree haha sorry!\n\nBut the caveat here is that you have to bind to `window.scroll` which is kind of a slow thing to do so be careful, that can really choke the javascript up. Might want to add a warning about it in the docs that it could slow down your page, and definitely remove the listener after the scroll point was hit.\n\nCould also listen for mouse movement on the page.\n. I think it's fine as an option in this script, as long as it's off by default!\n. ",
    "filipekiss": "So the default would be Session, unless specified? That might work better.\n. I'll submit a review in a few minutes :) Thanks @carlsednaoui.\n. Great :D Glad I could help.\n. So the default would be Session, unless specified? That might work better.\n. I'll submit a review in a few minutes :) Thanks @carlsednaoui.\n. Great :D Glad I could help.\n. ",
    "mcgwebdesign": "Hi Carl,\n\nI was thinking about this last night and figured I'd elaborate on my usecase and make a suggestion.\n\nHow about parameterizing ouibounce.disable() and adding a true/alse for pagewide/sitewide and adding a cookie expiration time both as optional parameters\n\nI have two instances where I would disable the modal:\n1) user clicks out, show again in 5 days\n2) user fills out form, never show again\n\nCurrently, I built my own logic and drop a separate cookie for the 2nd case but it would be cleaner to have it all within Ouibounce depending on how the disable function gets called.\n. @carlsednaoui Agreed, the form logic isn't part of ouibounce, what I'm referring to is that the ouibounce disable function should allow the user to set  cookies with different expiration lengths. I'm working on a PR will submit as soon as I can test it.\n\nThanks!\n. @carlsednaoui accidentally sent that out, first time sending a PR :) I cleaned everything up and resubmitted. \nThanks!\n. Thanks @jenius! I will give it a shot. \n. @carlsednaoui I have no experience writing tests, but I will attempt today/tomorrow and let you know :)\n\nthanks!\n. Hi Carl,\n\nI was thinking about this last night and figured I'd elaborate on my usecase and make a suggestion.\n\nHow about parameterizing ouibounce.disable() and adding a true/alse for pagewide/sitewide and adding a cookie expiration time both as optional parameters\n\nI have two instances where I would disable the modal:\n1) user clicks out, show again in 5 days\n2) user fills out form, never show again\n\nCurrently, I built my own logic and drop a separate cookie for the 2nd case but it would be cleaner to have it all within Ouibounce depending on how the disable function gets called.\n. @carlsednaoui Agreed, the form logic isn't part of ouibounce, what I'm referring to is that the ouibounce disable function should allow the user to set  cookies with different expiration lengths. I'm working on a PR will submit as soon as I can test it.\n\nThanks!\n. @carlsednaoui accidentally sent that out, first time sending a PR :) I cleaned everything up and resubmitted. \nThanks!\n. Thanks @jenius! I will give it a shot. \n. @carlsednaoui I have no experience writing tests, but I will attempt today/tomorrow and let you know :)\n\nthanks!\n. ",
    "bezreyhan": "Thanks for the quick reply. \n\n1) Thanks for the examples and pointing me to requirejs\n\n2) I should clarify what I meant. I didn't mean to say that we should display the modal every time that the mouse is moved, but rather why don't we evaluate handleMouseout() when the mouse is moved?\n\nI'm actually a little bit confused as to how the code is currently working (and sorry if I'm being a newb about this). Currently, we only call handleMouseout() when the user actually leaves an element. But if that's true, how are we setting a sensitivity. In other words, if the handleMouseout is only firing once the user has left the window, then isn't it too late to check if the user has surpassed the sensitivity threshold? \n\nHowever, if we were watching the mouse movements then we can check the clientY every time the mouse is moved. \n\nI'm sure I'm missing something so thanks for taking the time. \n\n3) I completely agree with you that the majority of the time when people want to exit a window they  go straight to the top. However, there are edge cases where a user's browser is not set to the full-screen. This is an option for people who may want to take a more aggressive approach.\n\nThanks again\n. 2) I have played with it and it seems it's working fine. I'm just not sure why? \nI get what your saying about onmousemove being an expensive event. \n\n3) I think forking it would probably be the best option. I completely get the philosophy and actually agree with it. I was asked to make a more \"aggressive\" version so I thought that maybe others would be interested as well. \n\nThanks again!\n. Thanks for the quick reply. \n\n1) Thanks for the examples and pointing me to requirejs\n\n2) I should clarify what I meant. I didn't mean to say that we should display the modal every time that the mouse is moved, but rather why don't we evaluate handleMouseout() when the mouse is moved?\n\nI'm actually a little bit confused as to how the code is currently working (and sorry if I'm being a newb about this). Currently, we only call handleMouseout() when the user actually leaves an element. But if that's true, how are we setting a sensitivity. In other words, if the handleMouseout is only firing once the user has left the window, then isn't it too late to check if the user has surpassed the sensitivity threshold? \n\nHowever, if we were watching the mouse movements then we can check the clientY every time the mouse is moved. \n\nI'm sure I'm missing something so thanks for taking the time. \n\n3) I completely agree with you that the majority of the time when people want to exit a window they  go straight to the top. However, there are edge cases where a user's browser is not set to the full-screen. This is an option for people who may want to take a more aggressive approach.\n\nThanks again\n. 2) I have played with it and it seems it's working fine. I'm just not sure why? \nI get what your saying about onmousemove being an expensive event. \n\n3) I think forking it would probably be the best option. I completely get the philosophy and actually agree with it. I was asked to make a more \"aggressive\" version so I thought that maybe others would be interested as well. \n\nThanks again!\n. ",
    "jameskkv": "I used a few scenario based on a few user's movement prediction and the default firing upon entry is just really odd. Almost all other alternative also uses this technique and i don't think it's optimal for user experience. \n\nLet's say for example, a user opens link in a new tab and waited 5s before switching, and i set the delay to 5s. But what if another user leaves the page within 3s? Another example, a user clicks on a link that opens a new window, and re-enters page upon which pop up fires. \n\nUnless there is 2 different pop-ups, 1 upon entry and another upon exit (not feasible in every situation), I think it needs a better way to fire only when mouse leaves after it entered.\n. @jenius Yes, besides the open in background tab, the other use case is when the user is already in your site and clicked on a link which opens in new window (which automatically focuses on it). And so when he re-enters your site the pop up would fire.\n\n@carlsednaoui honestly i am just a beginner in this field and do not know much about the code behind it, still learning in fact, so i'm afraid i couldn't do much help for now.\n. I used a few scenario based on a few user's movement prediction and the default firing upon entry is just really odd. Almost all other alternative also uses this technique and i don't think it's optimal for user experience. \n\nLet's say for example, a user opens link in a new tab and waited 5s before switching, and i set the delay to 5s. But what if another user leaves the page within 3s? Another example, a user clicks on a link that opens a new window, and re-enters page upon which pop up fires. \n\nUnless there is 2 different pop-ups, 1 upon entry and another upon exit (not feasible in every situation), I think it needs a better way to fire only when mouse leaves after it entered.\n. @jenius Yes, besides the open in background tab, the other use case is when the user is already in your site and clicked on a link which opens in new window (which automatically focuses on it). And so when he re-enters your site the pop up would fire.\n\n@carlsednaoui honestly i am just a beginner in this field and do not know much about the code behind it, still learning in fact, so i'm afraid i couldn't do much help for now.\n. ",
    "9mm": "Hey man, thats awesome! :)\n\nEr, as for my question that was just a (probably awful) idea. Basically, I just would like to benefit from the outbounce API for when the user's mouse is leaving the page, but without ouibounce actually triggering a popup (I use [this](http://github.hubspot.com/vex/docs/welcome/) modal plugin for example). \n\nWhat I currently do is create a blank dummy object, then place my vex modal code in `callback: function() {}`. It would just be cool to do that without having to create a dummy object.\n. Instead of blowing you up with new issues, I'm just wondering if it's easy to let ouibounce work with IE8?\n\nI get `Object doesn't support property or method 'addEventListener'`.\n\nIf not it's not a big deal I don't think... I do think this is an awesome plugin!\n. Nice :+1:\n. Sorry for delay, i'll check it out today.\n. When I used the code from there (minified version) I got\n\n`Object doesn't support property or method 'reduce'`\n. Hey that looks good actually. Sorry, I didn't realize that was already in the works!\n. Hey man, thats awesome! :)\n\nEr, as for my question that was just a (probably awful) idea. Basically, I just would like to benefit from the outbounce API for when the user's mouse is leaving the page, but without ouibounce actually triggering a popup (I use [this](http://github.hubspot.com/vex/docs/welcome/) modal plugin for example). \n\nWhat I currently do is create a blank dummy object, then place my vex modal code in `callback: function() {}`. It would just be cool to do that without having to create a dummy object.\n. Instead of blowing you up with new issues, I'm just wondering if it's easy to let ouibounce work with IE8?\n\nI get `Object doesn't support property or method 'addEventListener'`.\n\nIf not it's not a big deal I don't think... I do think this is an awesome plugin!\n. Nice :+1:\n. Sorry for delay, i'll check it out today.\n. When I used the code from there (minified version) I got\n\n`Object doesn't support property or method 'reduce'`\n. Hey that looks good actually. Sorry, I didn't realize that was already in the works!\n. ",
    "nathanielban": "I'm currently using v0.0.9 so this issue may be different in v0.0.10 however the above listed fix is actually insufficient and just moves the problem to Line 28 because IE7+8 do not understand addEventListener. I was able to fix the issue by adding in another shim (https://github.com/jwmcpeak/EventShim) on top of the es5-shim mentioned above. Obviously considering the unfortunately high amount of IE8 users still in the wild this is less than ideal when a solution like the one shown here: http://stackoverflow.com/questions/9769868/addeventlistener-not-working-in-ie8 seems pretty straight forward. I may attempt to construct a fix but I am currently pressed for time and figured at least bringing it up would be better than letting someone else suffer with it.\n\nA screenshot showing the bug:\nhttp://i.imgur.com/6cXUI3D.png\n. I'm currently using v0.0.9 so this issue may be different in v0.0.10 however the above listed fix is actually insufficient and just moves the problem to Line 28 because IE7+8 do not understand addEventListener. I was able to fix the issue by adding in another shim (https://github.com/jwmcpeak/EventShim) on top of the es5-shim mentioned above. Obviously considering the unfortunately high amount of IE8 users still in the wild this is less than ideal when a solution like the one shown here: http://stackoverflow.com/questions/9769868/addeventlistener-not-working-in-ie8 seems pretty straight forward. I may attempt to construct a fix but I am currently pressed for time and figured at least bringing it up would be better than letting someone else suffer with it.\n\nA screenshot showing the bug:\nhttp://i.imgur.com/6cXUI3D.png\n. ",
    "Rendez": "Yeah, will do. Thank you both.\n. @carlsednaoui thanks for the fix you're right. Busy day and short attention span :)\n. Yeah, will do. Thank you both.\n. @carlsednaoui thanks for the fix you're right. Busy day and short attention span :)\n. ",
    "bergerjac": "agreed. same behavior on Firefox 29.0.1, Windows 7 x64\n. According to [MDN example](https://developer.mozilla.org/en-US/docs/Web/Reference/Events/mouseout#Example), which illustrates the difference between `mouseout` and `mouseleave` events\n\n`mouseout` fires when the cursor moves off the element and onto another, including firing when moving between children (current implementation)\n\n`mouseleave` fires when the cursor moves completely off of the element and its tree\n\nusing _only_ `mouseleave` seems like it would provide the intended behavior\n1. open Dev Tools on this page\n2. open console\n3. paste this snippet (which selects the whole comment section)\n4. note behavior when hovering around the page, within the comments, etc.\n5. reload page\n6. replace `mouseout` with `mouseleave`\n7. repeat hover test\n\n``` javascript\nvar test = document.getElementById(\"discussion_bucket\");  \n  test.addEventListener(\"mouseout\", function( event ) {   \n    event.target.style.color = \"red\";\n    setTimeout(function() { event.target.style.color = \"\"; }, 2000);\n  }, false);\n```\n. agreed. same behavior on Firefox 29.0.1, Windows 7 x64\n. According to [MDN example](https://developer.mozilla.org/en-US/docs/Web/Reference/Events/mouseout#Example), which illustrates the difference between `mouseout` and `mouseleave` events\n\n`mouseout` fires when the cursor moves off the element and onto another, including firing when moving between children (current implementation)\n\n`mouseleave` fires when the cursor moves completely off of the element and its tree\n\nusing _only_ `mouseleave` seems like it would provide the intended behavior\n1. open Dev Tools on this page\n2. open console\n3. paste this snippet (which selects the whole comment section)\n4. note behavior when hovering around the page, within the comments, etc.\n5. reload page\n6. replace `mouseout` with `mouseleave`\n7. repeat hover test\n\n``` javascript\nvar test = document.getElementById(\"discussion_bucket\");  \n  test.addEventListener(\"mouseout\", function( event ) {   \n    event.target.style.color = \"red\";\n    setTimeout(function() { event.target.style.color = \"\"; }, 2000);\n  }, false);\n```\n. ",
    "s16h": "I haven't tried yet. I'm going to fork and try to fix this later today (or possibly over the weekend).\n. I haven't tried yet. I'm going to fork and try to fix this later today (or possibly over the weekend).\n. ",
    "simevidas": "Got it. When the mouse cursor moves close to the top of the _viewport_. \n. :+1: \n. @carlsednaoui I'm considering that behavior on my own site. It's on my TODO document, but a bunch of other things have higher priority right now.\n. @carlsednaoui OK :)\n. Got it. When the mouse cursor moves close to the top of the _viewport_. \n. :+1: \n. @carlsednaoui I'm considering that behavior on my own site. It's on my TODO document, but a bunch of other things have higher priority right now.\n. @carlsednaoui OK :)\n. ",
    "pbojinov": "Sure can, just wanted to see your thoughts on this.\n\nI'll send a pull request soon :grin:\n. Sure can, just wanted to see your thoughts on this.\n\nI'll send a pull request soon :grin:\n. ",
    "takechi03": "ok i'm have solution this problem.\r\n\r\ni use \r\n$('#landingpage, body').on('click',function(){\r\n        $( \".action-close\" ).trigger( \"click\" );\r\n });\r\n\r\nyou can use .. ok i'm have solution this problem.\r\n\r\ni use \r\n$('#landingpage, body').on('click',function(){\r\n        $( \".action-close\" ).trigger( \"click\" );\r\n });\r\n\r\nyou can use .. ",
    "zaus": "Same problem.  I really think it has to do with `mouseleave` support, because it seems like it's firing the event the first time I enter the DOM.  When I tried looking up browser support, I only saw (slightly older) posts saying it doesn't work, but I couldn't find anything definitive that says it behaves correctly.  Even jQuery has some workaround for it (see [source](https://github.com/jquery/jquery/blob/ad032d3c7df04827989a4187117614c29bf3a4ad/src/event.js#L698)).\n. Also, I'm [not allowed to reopen the issue](http://stackoverflow.com/a/21333938/1037948)\n. hm...i'm doing some more testing, and i think `mouseleave` is triggered because you're \"leaving\" the `html` root element by entering the `header` element when you move into the page.\n. I'm baffled.  I've tried it in regular and incognito Chrome windows, happens every time I mouse in from the direction of the nav bar; there's a guy sitting next to me watching this happen so I know I'm not crazy...unless I'm imagining him too?\n\nI'm using Windows 7 Chrome 35.0.1916.153 m\n. Watch as my mouse moves down from the top and the modal appears...\n![ouibounce_2014-07-09 2](https://cloud.githubusercontent.com/assets/784367/3534102/07183b68-07e1-11e4-8f2f-305caf6aac6e.gif)\n. Also noticed `toGMTString` is deprecated, threw that in\n. Same problem.  I really think it has to do with `mouseleave` support, because it seems like it's firing the event the first time I enter the DOM.  When I tried looking up browser support, I only saw (slightly older) posts saying it doesn't work, but I couldn't find anything definitive that says it behaves correctly.  Even jQuery has some workaround for it (see [source](https://github.com/jquery/jquery/blob/ad032d3c7df04827989a4187117614c29bf3a4ad/src/event.js#L698)).\n. Also, I'm [not allowed to reopen the issue](http://stackoverflow.com/a/21333938/1037948)\n. hm...i'm doing some more testing, and i think `mouseleave` is triggered because you're \"leaving\" the `html` root element by entering the `header` element when you move into the page.\n. I'm baffled.  I've tried it in regular and incognito Chrome windows, happens every time I mouse in from the direction of the nav bar; there's a guy sitting next to me watching this happen so I know I'm not crazy...unless I'm imagining him too?\n\nI'm using Windows 7 Chrome 35.0.1916.153 m\n. Watch as my mouse moves down from the top and the modal appears...\n![ouibounce_2014-07-09 2](https://cloud.githubusercontent.com/assets/784367/3534102/07183b68-07e1-11e4-8f2f-305caf6aac6e.gif)\n. Also noticed `toGMTString` is deprecated, threw that in\n. ",
    "raitucarp": ":+1: same here\n. :+1: same here\n. ",
    "colinodell": "I'm also having the same issue.  Windows 7 64-bit Chrome 36.0.1985.103 beta-m\n. I've tested the odd-numbered releases (to save time) and they all exhibited the same broken behavior on the `test/index.html` page.  I am using a beta version of Chrome, but @zaus is not... perhaps this could be a new bug or functionality change introduced by Chrome 35?\n. Here's something interesting:\n- When you mouse upwards into the toolbar, Chrome fires the single `mouseleave` event as expected.\n- When you mouse downwards into the page, Chrome fires `mouseenter`, `mouseleave`, and then `mouseenter` again.  (If you move the cursor super-fast, only a single `mouseenter` is fired)\n\nI found that we could use `setTimeout` and `cancelTimeout` to cancel the action if `mouseenter` is fired immediately after, like what happens in Chrome.  I was able to implement this as a new feature which also happens to fix the bug - I'll post the PR in a moment.\n. I should mention that I wasn't able to build the project due to local configuration issues.  I hope you wouldn't mind building it for me, should this be approved.\n. @carlsednaoui, what are your thoughts on this feature?\n. One possible use case is making the modal feel less intrusive than an instant popup.  A small delay (150-400ms perhaps) still makes the message seem important but not so urgent/in-your-face.\n\nIt also allows you to \"fuzz\" the actual trigger, making it feel less like a `mouseleave` event, and more like the site actually knows you're not interested.\n\nRegarding #48, the only other solution I can think of is monitoring mouse movements, which is certainly doable (but slightly more complex to implement).\n. I'm also having the same issue.  Windows 7 64-bit Chrome 36.0.1985.103 beta-m\n. I've tested the odd-numbered releases (to save time) and they all exhibited the same broken behavior on the `test/index.html` page.  I am using a beta version of Chrome, but @zaus is not... perhaps this could be a new bug or functionality change introduced by Chrome 35?\n. Here's something interesting:\n- When you mouse upwards into the toolbar, Chrome fires the single `mouseleave` event as expected.\n- When you mouse downwards into the page, Chrome fires `mouseenter`, `mouseleave`, and then `mouseenter` again.  (If you move the cursor super-fast, only a single `mouseenter` is fired)\n\nI found that we could use `setTimeout` and `cancelTimeout` to cancel the action if `mouseenter` is fired immediately after, like what happens in Chrome.  I was able to implement this as a new feature which also happens to fix the bug - I'll post the PR in a moment.\n. I should mention that I wasn't able to build the project due to local configuration issues.  I hope you wouldn't mind building it for me, should this be approved.\n. @carlsednaoui, what are your thoughts on this feature?\n. One possible use case is making the modal feel less intrusive than an instant popup.  A small delay (150-400ms perhaps) still makes the message seem important but not so urgent/in-your-face.\n\nIt also allows you to \"fuzz\" the actual trigger, making it feel less like a `mouseleave` event, and more like the site actually knows you're not interested.\n\nRegarding #48, the only other solution I can think of is monitoring mouse movements, which is certainly doable (but slightly more complex to implement).\n. ",
    "AmandaMT": "Yeah sure.\nThanks for quick response!\nPlease find it on hgttp://careertest.guru99.com\nHope you can help me!\n. Thank you so much @carlsednaoui for resolving my issue so quickly!\nIts working as expected :)\nAnd yeah thanks for informing me about that error, it is also resolved. \nThanks a ton!\n. Yeah sure.\nThanks for quick response!\nPlease find it on hgttp://careertest.guru99.com\nHope you can help me!\n. Thank you so much @carlsednaoui for resolving my issue so quickly!\nIts working as expected :)\nAnd yeah thanks for informing me about that error, it is also resolved. \nThanks a ton!\n. ",
    "jaykay1966": "Absolutely perfect!!! Thank you so much for helping me out and for such a useful tool!\n\nBest regards\nJay\n. Absolutely perfect!!! Thank you so much for helping me out and for such a useful tool!\n\nBest regards\nJay\n. ",
    "soundswaste": "I am facing the exact same problem in chrome (36.0.1985.125 m)\nYou guys were able to find any fix?\n. I am facing the exact same problem in chrome (36.0.1985.125 m)\nYou guys were able to find any fix?\n. ",
    "jhard": "This fixes the issue for me.\nI was able to reproduce the issue on Chromium 34.0.1847.116 on Lubuntu and multiple Chrome-Versions on Windows 7. Small timeout values (0-30ms) didn't seem to work, 150ms works just fine and doesn't mess with the functionality imho.\n\nMaybe this could get a default value if browser == chrome?\n. Hi Huti,\n\nthank you, that looks good. Works fine for me now!\nCheers\n. I've left the windows-test out, because it didn't work for me on OS X either, so I'm just testing for safari. Works for me.\n. Oh, sorry, I haven't tested that yet, I was just commenting to let you know it's not a windows only-problem ;)\n\nWill try that tomorrow at my work computer.\n. I've tested it with 0.0.10 right now on OS X in a VM with Safari 7.0 (9537.71) and it doesn't work correctly without the mouseout-event bound. Adding that makes it work great, though.\n\nFor now, I keep\n\n<pre>\nif (/safari/.test(navigator.userAgent.toLowerCase())) {  \n  _html.addEventListener('mouseout', handleMouseleave);\n}\n</pre>\n\nin there and am happily waiting for a perfect version.\n. This fixes the issue for me.\nI was able to reproduce the issue on Chromium 34.0.1847.116 on Lubuntu and multiple Chrome-Versions on Windows 7. Small timeout values (0-30ms) didn't seem to work, 150ms works just fine and doesn't mess with the functionality imho.\n\nMaybe this could get a default value if browser == chrome?\n. Hi Huti,\n\nthank you, that looks good. Works fine for me now!\nCheers\n. I've left the windows-test out, because it didn't work for me on OS X either, so I'm just testing for safari. Works for me.\n. Oh, sorry, I haven't tested that yet, I was just commenting to let you know it's not a windows only-problem ;)\n\nWill try that tomorrow at my work computer.\n. I've tested it with 0.0.10 right now on OS X in a VM with Safari 7.0 (9537.71) and it doesn't work correctly without the mouseout-event bound. Adding that makes it work great, though.\n\nFor now, I keep\n\n<pre>\nif (/safari/.test(navigator.userAgent.toLowerCase())) {  \n  _html.addEventListener('mouseout', handleMouseleave);\n}\n</pre>\n\nin there and am happily waiting for a perfect version.\n. ",
    "siddarthp": "My bad\nOn Aug 10, 2014 12:46 PM, \"Carl Sednaoui\" notifications@github.com wrote:\n\n> Hi @siddarthp https://github.com/siddarthp, I don't think you meant to\n> post this here.\n> \n> Closing this issue for now.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/carlsednaoui/ouibounce/issues/58#issuecomment-51720076\n> .\n. My bad\nOn Aug 10, 2014 12:46 PM, \"Carl Sednaoui\" notifications@github.com wrote:\n\n> Hi @siddarthp https://github.com/siddarthp, I don't think you meant to\n> post this here.\n> \n> Closing this issue for now.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/carlsednaoui/ouibounce/issues/58#issuecomment-51720076\n> .\n. ",
    "Huti": "Hello jhard. \nI had a similar problem with Windows safari.\nUserAgent mozilla/5.0 (windows nt 6.2; wow64) applewebkit/534.57.2 (khtml, like gecko) version/5.1.7 safari/534.57.2\nFor this I was able to add a hack by adding the \"mouseout\" event listener \nin the source it looks like this\n\n```\nif (/windows/.test(navigator.userAgent.toLowerCase()) && /safari/.test(navigator.userAgent.toLowerCase())) {  \n  _html.addEventListener('mouseout', handleMouseleave);\n}\n_html.addEventListener('mouseleave', handleMouseleave);\n_html.addEventListener('keydown', handleKeydown);\n```\n\nI put this to https://github.com/carlsednaoui/ouibounce/blob/master/source/ouibounce.js in the source file to test it and in to the attachOuiBounce() function\n. Hello @carlsednaoui, sorry for not answering sooner. I tried out the current version in git and sadly it still didn't wanted to work in Windows Safari.\n. Hello jhard. \nI had a similar problem with Windows safari.\nUserAgent mozilla/5.0 (windows nt 6.2; wow64) applewebkit/534.57.2 (khtml, like gecko) version/5.1.7 safari/534.57.2\nFor this I was able to add a hack by adding the \"mouseout\" event listener \nin the source it looks like this\n\n```\nif (/windows/.test(navigator.userAgent.toLowerCase()) && /safari/.test(navigator.userAgent.toLowerCase())) {  \n  _html.addEventListener('mouseout', handleMouseleave);\n}\n_html.addEventListener('mouseleave', handleMouseleave);\n_html.addEventListener('keydown', handleKeydown);\n```\n\nI put this to https://github.com/carlsednaoui/ouibounce/blob/master/source/ouibounce.js in the source file to test it and in to the attachOuiBounce() function\n. Hello @carlsednaoui, sorry for not answering sooner. I tried out the current version in git and sadly it still didn't wanted to work in Windows Safari.\n. ",
    "kevinweber": "I write it on my to-do list. But it might take a while ;)\n. @jdeniau, thanks for that cookieName configuration! I'm looking forward to use it.\n. I think that this feature is interesting for many users of exit-intent software. The feature actually doesn't wipe out the use of exit popups.\n1. The popup still fires when the user wants to close/switch tabs using his cursor. \n2. But additionally, when it takes very long to close the tab or when the user switches tabs using his keyboard, the popup can appear.\n\nAlternatively:\nDo you want to implement something like an \"on load\" hook? It's similar to the callback function but it must be possible to call your script's functions even when the popup is not yet fired.\n. Yes, I see. Your philosophy is really cool and I appreciate it.\n\nWhat do you think of extending the API? Like that:\n\n```\n  return {\n    fire: fire,\n    disable: disable,\n    checkCookieValue: checkCookieValue,\n    _fireAndCallback: _fireAndCallback,\n  };\n```\n. Well roar'd, @jenius.\nI agree.\n. I write it on my to-do list. But it might take a while ;)\n. @jdeniau, thanks for that cookieName configuration! I'm looking forward to use it.\n. I think that this feature is interesting for many users of exit-intent software. The feature actually doesn't wipe out the use of exit popups.\n1. The popup still fires when the user wants to close/switch tabs using his cursor. \n2. But additionally, when it takes very long to close the tab or when the user switches tabs using his keyboard, the popup can appear.\n\nAlternatively:\nDo you want to implement something like an \"on load\" hook? It's similar to the callback function but it must be possible to call your script's functions even when the popup is not yet fired.\n. Yes, I see. Your philosophy is really cool and I appreciate it.\n\nWhat do you think of extending the API? Like that:\n\n```\n  return {\n    fire: fire,\n    disable: disable,\n    checkCookieValue: checkCookieValue,\n    _fireAndCallback: _fireAndCallback,\n  };\n```\n. Well roar'd, @jenius.\nI agree.\n. ",
    "palamccc": "Win 7 / Chrome\n\nOn 29 August 2014 18:20, Carl Sednaoui notifications@github.com wrote:\n\n> Hi @palamccc https://github.com/palamccc, thanks for filing the bug.\n> What's your browser version / operating system?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/carlsednaoui/ouibounce/issues/63#issuecomment-53870864\n> .\n. Win 7 / Chrome\n\nOn 29 August 2014 18:20, Carl Sednaoui notifications@github.com wrote:\n\n> Hi @palamccc https://github.com/palamccc, thanks for filing the bug.\n> What's your browser version / operating system?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/carlsednaoui/ouibounce/issues/63#issuecomment-53870864\n> .\n. ",
    "StevenChoo": "Hi carlsednaoui, noticing this problem as well. The problem only occurs on Chrome (currently v36) Windows, where as Chrome on Ubuntu, Firefox (Windows & Ubuntu) and Internet Explorer do not show any problems.\n. Hi carlsednaoui, noticing this problem as well. The problem only occurs on Chrome (currently v36) Windows, where as Chrome on Ubuntu, Firefox (Windows & Ubuntu) and Internet Explorer do not show any problems.\n. ",
    "fabiosl": "Hi @carlsednaoui, \nThat's weird... In one tab (localhost) it works as expected and on the other (production) it doesn't. And yes, I have tried incognito mode before opening the issue. I'm using Google Chrome for Mac. \nOn Firefox it works, however.\n\nI disabled the plugin for now and I'll try again later! \n\nThanks!\n. Hi @carlsednaoui, \nThat's weird... In one tab (localhost) it works as expected and on the other (production) it doesn't. And yes, I have tried incognito mode before opening the issue. I'm using Google Chrome for Mac. \nOn Firefox it works, however.\n\nI disabled the plugin for now and I'll try again later! \n\nThanks!\n. ",
    "gitouttaherenow": "I'm facing the exact issue as well.\n. I'm facing the exact issue as well.\n. ",
    "anderskitson": "It's just cookies as far as I can tell, just delete this cookie in your resources tab when you are in inspect mode, and refresh, then it should fire again.\n<img width=\"1341\" alt=\"screen shot 2016-07-07 at 8 42 08 am\" src=\"https://cloud.githubusercontent.com/assets/27952/16659411/c00bd94c-441e-11e6-94b0-d65d1de19f3a.png\">\n. It's just cookies as far as I can tell, just delete this cookie in your resources tab when you are in inspect mode, and refresh, then it should fire again.\n<img width=\"1341\" alt=\"screen shot 2016-07-07 at 8 42 08 am\" src=\"https://cloud.githubusercontent.com/assets/27952/16659411/c00bd94c-441e-11e6-94b0-d65d1de19f3a.png\">\n. ",
    "muhammedtufekyapan": "Thank you Carl! It works!\n. Thank you Carl! It works!\n. ",
    "scofield-ua": "Maybe, much easier is do something like this:\n\n``` javascript\n ouibounce(false, {\n        callback: function() {\n            $('#your-modal-id').modal('show');\n        }\n  });\n```\n. Maybe, much easier is do something like this:\n\n``` javascript\n ouibounce(false, {\n        callback: function() {\n            $('#your-modal-id').modal('show');\n        }\n  });\n```\n. ",
    "bonswouar": "@scofield-ua solution is nice and easy.\nKnowing Twitter Bootstrap is very popular, maybe it should be in the documentation ?\n. @scofield-ua solution is nice and easy.\nKnowing Twitter Bootstrap is very popular, maybe it should be in the documentation ?\n. ",
    "ibbatta": "@muhammedtufekyapan @carlsednaoui the main reason you can't see your element, is for `.fade` class ( next `.modal`). That class apply `opacity: 0` to you element.\n\n@scofield-ua your solution doesn't work for me. Seems like doesn't reconize $(...) as an element\n\np.s. sorry for my awful english\n. @muhammedtufekyapan @carlsednaoui the main reason you can't see your element, is for `.fade` class ( next `.modal`). That class apply `opacity: 0` to you element.\n\n@scofield-ua your solution doesn't work for me. Seems like doesn't reconize $(...) as an element\n\np.s. sorry for my awful english\n. ",
    "DaPo": "Well, I had some issues with Ouibounce & Bootstrap's modal.\n\nIndeed, with only \n\n``` JS\nouibounce(false, {\n        callback: function() {\n            $('#your-modal-id').modal('show');\n        }\n  });\n```\n\nThe `isDisabled()` function will be at true and if so, the ouibounce will never be fired.\nSo we have to make it false, like this: \n\n``` JS\ndocument.addEventListener('DOMContentLoaded', function(){\n    var _ouibounce = ouibounce(false, {\n        aggressive: true,\n        timer: 0,\n        callback: function() {\n            jQuery('#your-modal-id').modal('show');\n        }\n    });\n});\n```\n\nFound the code here https://github.com/carlsednaoui/ouibounce/issues/92\n\nHop it helps!\n\nAnyway @carlsednaoui that's a very nice plugin you made there, great great job. \ud83d\udc4d \n. Well, I had some issues with Ouibounce & Bootstrap's modal.\n\nIndeed, with only \n\n``` JS\nouibounce(false, {\n        callback: function() {\n            $('#your-modal-id').modal('show');\n        }\n  });\n```\n\nThe `isDisabled()` function will be at true and if so, the ouibounce will never be fired.\nSo we have to make it false, like this: \n\n``` JS\ndocument.addEventListener('DOMContentLoaded', function(){\n    var _ouibounce = ouibounce(false, {\n        aggressive: true,\n        timer: 0,\n        callback: function() {\n            jQuery('#your-modal-id').modal('show');\n        }\n    });\n});\n```\n\nFound the code here https://github.com/carlsednaoui/ouibounce/issues/92\n\nHop it helps!\n\nAnyway @carlsednaoui that's a very nice plugin you made there, great great job. \ud83d\udc4d \n. ",
    "jdeniau": "up? :)\n. up? :)\n. ",
    "allanedk": "I was just about to suggest this feature! Great work! Looking forward to next release.\n. I was just about to suggest this feature! Great work! Looking forward to next release.\n. ",
    "melinazell": "Yes, if I start typing, the \"auto fill\" shows ouibounce. And if I press return, I can see the function too...\n\nPlease see this...\n![oui](https://cloud.githubusercontent.com/assets/6194316/4641139/e46af9e6-5431-11e4-9d0d-de08ca391542.gif)\n. Yes, if I start typing, the \"auto fill\" shows ouibounce. And if I press return, I can see the function too...\n\nPlease see this...\n![oui](https://cloud.githubusercontent.com/assets/6194316/4641139/e46af9e6-5431-11e4-9d0d-de08ca391542.gif)\n. ",
    "ayanev": "note that oui**_B**_ounce != oui**_b**_ounce :) \n. The form is NOT submitted by default.\n\nThere is now way to know if the user is going to submit it or not, therefore what you're trying to do is impossible.\n\nHowever, I can suggest to use a timer+variable.\nDefine your variable like \"var isActive=true;\" modify this:\n\n if (e.clientY > sensitivity || (checkCookieValue(cookieName, 'true') && !aggressive)) return;\nto\n if ((e.clientY > sensitivity || (checkCookieValue(cookieName, 'true') && !aggressive)) && isActive) return;\n\nthen check if user is interacting with your form, track on keyup event and attach a function like this:\nif(yourFormElement.onkeyup)[ isActive=fasle; setTimeout(isActive=true, _insert your average time needed to fill&submit the form_)]\n. note that oui**_B**_ounce != oui**_b**_ounce :) \n. The form is NOT submitted by default.\n\nThere is now way to know if the user is going to submit it or not, therefore what you're trying to do is impossible.\n\nHowever, I can suggest to use a timer+variable.\nDefine your variable like \"var isActive=true;\" modify this:\n\n if (e.clientY > sensitivity || (checkCookieValue(cookieName, 'true') && !aggressive)) return;\nto\n if ((e.clientY > sensitivity || (checkCookieValue(cookieName, 'true') && !aggressive)) && isActive) return;\n\nthen check if user is interacting with your form, track on keyup event and attach a function like this:\nif(yourFormElement.onkeyup)[ isActive=fasle; setTimeout(isActive=true, _insert your average time needed to fill&submit the form_)]\n. ",
    "neils1": "\u1427\nHow about on mobile devices? A time based events for mobile sites would be\nperfect, if it was time since last scroll \\* number of words on screen.\n\nOn Sun, Nov 2, 2014 at 8:30 AM, Kevin Weber notifications@github.com\nwrote:\n\n> Yes, I see. Your philosophy is really cool and I appreciate it.\n> \n> What do you think of extending the API? Like that:\n> \n>   return {\n>     fire: fire,\n>     disable: disable,\n>     checkCookieValue: checkCookieValue,\n>     _fireAndCallback: _fireAndCallback,\n>   };\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/carlsednaoui/ouibounce/pull/71#issuecomment-61412988.\n. The workaround I was thinking was susing jquery to make the whole page an active state and then calculating word count *average reading speed and then if someone doesn't scroll down after that time triggering a popup. \n. \u1427\nHow about on mobile devices? A time based events for mobile sites would be\nperfect, if it was time since last scroll \\* number of words on screen.\n\nOn Sun, Nov 2, 2014 at 8:30 AM, Kevin Weber notifications@github.com\nwrote:\n\n> Yes, I see. Your philosophy is really cool and I appreciate it.\n> \n> What do you think of extending the API? Like that:\n> \n>   return {\n>     fire: fire,\n>     disable: disable,\n>     checkCookieValue: checkCookieValue,\n>     _fireAndCallback: _fireAndCallback,\n>   };\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/carlsednaoui/ouibounce/pull/71#issuecomment-61412988.\n. The workaround I was thinking was susing jquery to make the whole page an active state and then calculating word count *average reading speed and then if someone doesn't scroll down after that time triggering a popup. \n. ",
    "PatriceParis": "Thanks Carl for your swift reply !\n\nThe problem is when I try clicking on the footer \"Non merci, Oscar est\nassez grand pour rester seul\", the modal doesn't hide.\n\nThe z-index problem is fixed on Google Chrome\n. Thanks Carl.\n\nI've fixed it by disabling several lines of the script and adding your\nsuggestion:\n\n<script>\n      // if you want to use the 'fire' or 'disable' fn,\n      // you need to save OuiBounce to an object\n      var _ouibounce =\nouibounce(document.getElementById('ouibounce-modal'), {\n        aggressive: true,\n        timer: 0,\n        callback: function() { console.log('ouibounce fired!'); }\n      });\n      /*$('body').on('click', function() {\n        $('#ouibounce-modal').hide();\n      });*/\n     jQuery('.ouibounce-modal-footer').on('click', function()\n{$('#ouibounce-modal').hide();})\n     /* $('#ouibounce-modal .ouibounce-modal').on('click', function(e) {\n        e.stopPropagation();\n      });*/\n    </script>\n. Thanks Carl for your swift reply !\n\nThe problem is when I try clicking on the footer \"Non merci, Oscar est\nassez grand pour rester seul\", the modal doesn't hide.\n\nThe z-index problem is fixed on Google Chrome\n. Thanks Carl.\n\nI've fixed it by disabling several lines of the script and adding your\nsuggestion:\n\n<script>\n      // if you want to use the 'fire' or 'disable' fn,\n      // you need to save OuiBounce to an object\n      var _ouibounce =\nouibounce(document.getElementById('ouibounce-modal'), {\n        aggressive: true,\n        timer: 0,\n        callback: function() { console.log('ouibounce fired!'); }\n      });\n      /*$('body').on('click', function() {\n        $('#ouibounce-modal').hide();\n      });*/\n     jQuery('.ouibounce-modal-footer').on('click', function()\n{$('#ouibounce-modal').hide();})\n     /* $('#ouibounce-modal .ouibounce-modal').on('click', function(e) {\n        e.stopPropagation();\n      });*/\n    </script>\n. ",
    "copyhold": "Thank you,\nI resolved it by exporting set_delay method\nso when i open the form -> set_delay(1e4)\nformclose -> set_delay(0)\n. Thank you,\nI resolved it by exporting set_delay method\nso when i open the form -> set_delay(1e4)\nformclose -> set_delay(0)\n. ",
    "tbuchok": "it would need to be tested, but @kevinweber's thought here is definitely interesting with regard to \"scrolls up to get address bar\"\n\nin your desktop browser this would potentiallyl work with the \"blur\" event.\n\nmight be worth some examination by an intrepid soul ...\n\n``` js\n;(function() {\n  var thresholdMet = false;\n  window.addEventListener('scroll', function(event) {\n    thresholdMet = detectScrollThresholdSomehow(event);\n    if (thresholdMet == false)\n      return;\n    var timer = setTimeout(function() {\n        clearTimeout(timer);\n        thresholdMet = false;\n    }, SOME_REASONABLE_AMOUNT_OF_TIME);\n  });\n  window.addEventListener('blur', function(event) {\n     if (thresholdMet)\n       goGoOuiBounceExclamationMark();\n   });\n{());\n```\n\nhope that helps spur some ideas. :pizza: \n. it would need to be tested, but @kevinweber's thought here is definitely interesting with regard to \"scrolls up to get address bar\"\n\nin your desktop browser this would potentiallyl work with the \"blur\" event.\n\nmight be worth some examination by an intrepid soul ...\n\n``` js\n;(function() {\n  var thresholdMet = false;\n  window.addEventListener('scroll', function(event) {\n    thresholdMet = detectScrollThresholdSomehow(event);\n    if (thresholdMet == false)\n      return;\n    var timer = setTimeout(function() {\n        clearTimeout(timer);\n        thresholdMet = false;\n    }, SOME_REASONABLE_AMOUNT_OF_TIME);\n  });\n  window.addEventListener('blur', function(event) {\n     if (thresholdMet)\n       goGoOuiBounceExclamationMark();\n   });\n{());\n```\n\nhope that helps spur some ideas. :pizza: \n. ",
    "simsketch": "Thought you guys might be interested in something like this. https://github.com/shahzam/DialogTriggerJS\r\n\r\nI found it here: http://stackoverflow.com/a/38777449/1579789\r\n\r\n> On some of my sites, I found that mobile exit intent often consists of a slight upward scroll before the user hits their back button. For example, users often scroll down the page quite a bit while consuming content, but when they're ready to leave they might scroll upwards slightly (say 5-10% of the page height), and then they'll go hit the back button or close the tab.. Thought you guys might be interested in something like this. https://github.com/shahzam/DialogTriggerJS\r\n\r\nI found it here: http://stackoverflow.com/a/38777449/1579789\r\n\r\n> On some of my sites, I found that mobile exit intent often consists of a slight upward scroll before the user hits their back button. For example, users often scroll down the page quite a bit while consuming content, but when they're ready to leave they might scroll upwards slightly (say 5-10% of the page height), and then they'll go hit the back button or close the tab.. ",
    "will728": "Well to me, i still think, timing user time before displaying popup still works, but then on the other hand, here is the issue with timing, for example if it generally takes users 10 minutes to read the content of a page before they close it, if you set the exit intent for 10 minutes, some other users might just read the content of the page for less than 10 minutes, meaning users that read the content under 10 minutes will never see the exit, any i was able find a balance on this on my [web design site](http://zendbay.com) but i'm still researching ways to even make exit intent on mobile achievable. There is nothing impossible,. Well to me, i still think, timing user time before displaying popup still works, but then on the other hand, here is the issue with timing, for example if it generally takes users 10 minutes to read the content of a page before they close it, if you set the exit intent for 10 minutes, some other users might just read the content of the page for less than 10 minutes, meaning users that read the content under 10 minutes will never see the exit, any i was able find a balance on this on my [web design site](http://zendbay.com) but i'm still researching ways to even make exit intent on mobile achievable. There is nothing impossible,. ",
    "Archiduc": "Hi, I had a similar feature request with the time spent on the page. It just seemed strange to me that the \"pop-up\" would open if I stayed two seconds and went to open an other tab. Scrolling seems fine too, but some people can scroll pretty fast I guess (I have no idea !)\n. Hi, I had a similar feature request with the time spent on the page. It just seemed strange to me that the \"pop-up\" would open if I stayed two seconds and went to open an other tab. Scrolling seems fine too, but some people can scroll pretty fast I guess (I have no idea !)\n. ",
    "matheusrocha89": "Discovered why, the CDN 0.0.10 don't have this option. Sorry, my Bad :stuck_out_tongue_closed_eyes: \n. Discovered why, the CDN 0.0.10 don't have this option. Sorry, my Bad :stuck_out_tongue_closed_eyes: \n. ",
    "stevenmunro": "Sorry, I typed too soon.\nWhen the aggressive : true is set, modal.disable has no effect. Probably intended to work that way.\n.  As per your docs\n\n```\n var _ouibounce = ouibounce(document.getElementById('ouibounce-modal'), {\n    aggressive: true,\n    timer: 0,\n    callback: function() { console.log('ouibounce fired!'); }\n  });\n\n  $('body').on('click', function() {\n    $('#ouibounce-modal').hide();\n  });\n\n  $('#ouibounce-modal .modal-footer').on('click', function() {\n    $('#ouibounce-modal').hide();\n  });\n\n  $('#ouibounce-modal .modal').on('click', function(e) {\n    e.stopPropagation();\n  });\n\n  _ouibounce.disable();\n```\n\n_ouibounce.disable(); has no effect if aggressive: true is set.\n. Sorry, I typed too soon.\nWhen the aggressive : true is set, modal.disable has no effect. Probably intended to work that way.\n.  As per your docs\n\n```\n var _ouibounce = ouibounce(document.getElementById('ouibounce-modal'), {\n    aggressive: true,\n    timer: 0,\n    callback: function() { console.log('ouibounce fired!'); }\n  });\n\n  $('body').on('click', function() {\n    $('#ouibounce-modal').hide();\n  });\n\n  $('#ouibounce-modal .modal-footer').on('click', function() {\n    $('#ouibounce-modal').hide();\n  });\n\n  $('#ouibounce-modal .modal').on('click', function(e) {\n    e.stopPropagation();\n  });\n\n  _ouibounce.disable();\n```\n\n_ouibounce.disable(); has no effect if aggressive: true is set.\n. ",
    "leobardimpact": "Hi @carlsednaoui - sorry, I don't have a diff for you. I already coded and deployed my own \"exit detection\" before I found ouibounce. \n\nIt works along the following lines of \"keep the last known location while you have it\", if you translate it to ouibounce it would be (untested):\n\n// this goes inside the ouibounce defining function\n// new var\nvar lastMoveMouseClientY = 100; // i.e. sensitivity+1\n// the ugly handler needed for IE :-(\nvar onMouseMove = function(e) {\n    lastMoveMouseClientY = e.clientY;\n}\n_html.mousemove(onMouseMove);\n\n// replace e.clientY with var, no changes otherwise.\nfunction handleMouseleave(e) {\n    if (lastMoveMouseClientY  > sensitivity || (checkCookieValue(cookieName, 'true') && !aggressive)) return;\n\n```\n_delayTimer = setTimeout(_fireAndCallback, delay);\n```\n\n}\n. Hi @carlsednaoui - sorry, I don't have a diff for you. I already coded and deployed my own \"exit detection\" before I found ouibounce. \n\nIt works along the following lines of \"keep the last known location while you have it\", if you translate it to ouibounce it would be (untested):\n\n// this goes inside the ouibounce defining function\n// new var\nvar lastMoveMouseClientY = 100; // i.e. sensitivity+1\n// the ugly handler needed for IE :-(\nvar onMouseMove = function(e) {\n    lastMoveMouseClientY = e.clientY;\n}\n_html.mousemove(onMouseMove);\n\n// replace e.clientY with var, no changes otherwise.\nfunction handleMouseleave(e) {\n    if (lastMoveMouseClientY  > sensitivity || (checkCookieValue(cookieName, 'true') && !aggressive)) return;\n\n```\n_delayTimer = setTimeout(_fireAndCallback, delay);\n```\n\n}\n. ",
    "pvdbroek": "Hi Carl,\n\nFirst of all, thanks for your great plugin!\n\nI noticed the plugin does not seem to work in any version of IE. Would it be possible to take a look at the fix of Leo and see if this fixes things?\n\nBest regards,\n\nPim\n. Hi Carl,\n\nFirst of all, thanks for your great plugin!\n\nI noticed the plugin does not seem to work in any version of IE. Would it be possible to take a look at the fix of Leo and see if this fixes things?\n\nBest regards,\n\nPim\n. ",
    "tomazzaman": "I guess I can close this one now :)\n. You're welcome!\n. By the way, I've also written a tutorial on using [Ouibounce with WordPress](https://codeable.io/community/how-to-build-your-own-wordpress-email-form-optin-form/): \n. Thanks, glad I could help :)\n. I guess I can close this one now :)\n. You're welcome!\n. By the way, I've also written a tutorial on using [Ouibounce with WordPress](https://codeable.io/community/how-to-build-your-own-wordpress-email-form-optin-form/): \n. Thanks, glad I could help :)\n. ",
    "tarponjargon": "Nevermind - this issue was on my end :-/\n. Nevermind - this issue was on my end :-/\n. ",
    "marketbizpro": "I can give you the link to direct download, if you want?\n. You may word the anchor text anyway you see fit.   The download page is here:  http://ignitionhub.com/bootbounce/thank-you.html  Or if you absolutely want the file download link, that is:  http://ignitionhub.s3.amazonaws.com/marketing_snippets/boot-bounce.zip ...whatever works for you. \n\nThanks a bunch!  I hope it helps everyone...\n. That's awesome!  Thank you...I hope everyone enjoys!\n\nOn Fri, Jul 24, 2015 at 9:08 AM, Carl Sednaoui notifications@github.com\nwrote:\n\n> Thanks @marketbizpro https://github.com/marketbizpro. I'll create a new\n> issue for this and add it to the README when I get a chance.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/carlsednaoui/ouibounce/issues/92#issuecomment-124534773\n> .\n. I can give you the link to direct download, if you want?\n. You may word the anchor text anyway you see fit.   The download page is here:  http://ignitionhub.com/bootbounce/thank-you.html  Or if you absolutely want the file download link, that is:  http://ignitionhub.s3.amazonaws.com/marketing_snippets/boot-bounce.zip ...whatever works for you. \n\nThanks a bunch!  I hope it helps everyone...\n. That's awesome!  Thank you...I hope everyone enjoys!\n\nOn Fri, Jul 24, 2015 at 9:08 AM, Carl Sednaoui notifications@github.com\nwrote:\n\n> Thanks @marketbizpro https://github.com/marketbizpro. I'll create a new\n> issue for this and add it to the README when I get a chance.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/carlsednaoui/ouibounce/issues/92#issuecomment-124534773\n> .\n. ",
    "bradvogel": "Thanks!\n. Thanks!\n. ",
    "madmaxy": "  // if you want to use the 'fire' or 'disable' fn,\n      // you need to save OuiBounce to an object\n      var _ouibounce = ouibounce(document.getElementById('ouibounce-modal'), {\n        aggressive: true,\n        timer: 0,\n        callback: function() { console.log('ouibounce fired!'); }\n      });\n\n```\n  $('body').on('click', function() {\n    $('#ouibounce-modal').hide();\n  });\n\n  $('#ouibounce-modal .modal-footer').on('click', function() {\n    $('#ouibounce-modal').hide();\n  });\n\n  $('#ouibounce-modal .modal').on('click', function(e) {\n    e.stopPropagation();\n  });\n```\n.   // if you want to use the 'fire' or 'disable' fn,\n      // you need to save OuiBounce to an object\n      var _ouibounce = ouibounce(document.getElementById('ouibounce-modal'), {\n        aggressive: true,\n        timer: 0,\n        callback: function() { console.log('ouibounce fired!'); }\n      });\n\n```\n  $('body').on('click', function() {\n    $('#ouibounce-modal').hide();\n  });\n\n  $('#ouibounce-modal .modal-footer').on('click', function() {\n    $('#ouibounce-modal').hide();\n  });\n\n  $('#ouibounce-modal .modal').on('click', function(e) {\n    e.stopPropagation();\n  });\n```\n. ",
    "sebastien-fauvel": "Hi Carl,\n\nthanks for looking into it! I had already read about your concerns in the original issue, and I _think_ I've addressed them, at least on clients with a mouse/trackpad, by aborting the delayed firing whenever the mouse moves on the page. If you scroll to reach the navigation bar and go to another section, you will probably move the mouse pointer before the end of the firing delay \u2013 at least if you have a sensible one, say, 500ms? On smartphones & tablets, though, you will only have a `mousemove` event whenever you click the navigation menu. With a firing delay of, say, 2 seconds, we could avoid firing too early, too. What do you think? Should we add a separate configuration variable `delayScroll` with a reasonable default (2000ms) to handle that, or some configuration flag `trackScroll` set to `false` by default? Would it make sense to you? I mean, your current solution (firing when the mouse leaves the page, aborting when it moves onto the page again) is not perfect either, it only works fine when the firing delay is adjusted properly \u2013 because you also cross the top of the page with the mouse from time to time when you want to use the navigation menu. Isn't this quite the same issue? Also I thought you wanted to implement an open-source replacement for BounceExchange, and they do track scrolling, too...\n\nAnyway, let me know what you think \u2013 I'll start a sister project if you want to drop this feature at all costs :)\n. Hi Carl,\n\nthanks for looking into it! I had already read about your concerns in the original issue, and I _think_ I've addressed them, at least on clients with a mouse/trackpad, by aborting the delayed firing whenever the mouse moves on the page. If you scroll to reach the navigation bar and go to another section, you will probably move the mouse pointer before the end of the firing delay \u2013 at least if you have a sensible one, say, 500ms? On smartphones & tablets, though, you will only have a `mousemove` event whenever you click the navigation menu. With a firing delay of, say, 2 seconds, we could avoid firing too early, too. What do you think? Should we add a separate configuration variable `delayScroll` with a reasonable default (2000ms) to handle that, or some configuration flag `trackScroll` set to `false` by default? Would it make sense to you? I mean, your current solution (firing when the mouse leaves the page, aborting when it moves onto the page again) is not perfect either, it only works fine when the firing delay is adjusted properly \u2013 because you also cross the top of the page with the mouse from time to time when you want to use the navigation menu. Isn't this quite the same issue? Also I thought you wanted to implement an open-source replacement for BounceExchange, and they do track scrolling, too...\n\nAnyway, let me know what you think \u2013 I'll start a sister project if you want to drop this feature at all costs :)\n. ",
    "sudipmisra": "Adding   \"display:block\" helped\n\n#ouibounce-modal .modal {\n  display:block;\n}\n. Yes Ouibounce works as expected. Thanks for such a great API. Please close the issue.\n. Adding   \"display:block\" helped\n\n#ouibounce-modal .modal {\n  display:block;\n}\n. Yes Ouibounce works as expected. Thanks for such a great API. Please close the issue.\n. ",
    "kdreilly": "A Firefox browser bug was preventing this cookie from being created.\n. A Firefox browser bug was preventing this cookie from being created.\n. ",
    "yadomi": "@carlsednaoui up ? \n\nDo you plan to release `0.0.12` on cdnjs ?\n\nThanks\n. Ok, good to know and thanks for your reply :) \n\nGreat tool btw :+1: \n. @carlsednaoui up ? \n\nDo you plan to release `0.0.12` on cdnjs ?\n\nThanks\n. Ok, good to know and thanks for your reply :) \n\nGreat tool btw :+1: \n. ",
    "jsieber-aca": "Just a heads up that cdnjs is still serving up the previous version.\n. You should be able to use the following:\n\nvar _ouibounce = ouibounce(document.getElementById('ouibounce-modal'), {\n     aggressive: false,\n     timer: 3,\n});\n\nsetTimeout(function(){\n                _ouibounce.fire();\n              },3000); //3 seconds\n. This works if you download and host the actual ouibounce.js file. The file coming from the CDN shows as version 0.0.11 but is not the latest version.\n. Just a heads up that cdnjs is still serving up the previous version.\n. You should be able to use the following:\n\nvar _ouibounce = ouibounce(document.getElementById('ouibounce-modal'), {\n     aggressive: false,\n     timer: 3,\n});\n\nsetTimeout(function(){\n                _ouibounce.fire();\n              },3000); //3 seconds\n. This works if you download and host the actual ouibounce.js file. The file coming from the CDN shows as version 0.0.11 but is not the latest version.\n. ",
    "rarkins": "Hi, can this be updated?\n. Hi, can this be updated?\n. ",
    "srogier": "Hi!\nany news about this PR ?\n. Hi!\nany news about this PR ?\n. ",
    "lee-tms": "+1\n\nThere are scenarios where you don't want it to fire (to only invoke on certain pages, for example), which I've done using an If statement wrapping around the ouibounce call, but this would be a neater solution.\n. +1\n\nThere are scenarios where you don't want it to fire (to only invoke on certain pages, for example), which I've done using an If statement wrapping around the ouibounce call, but this would be a neater solution.\n. ",
    "thdk": "+1 That's also what we need!\nI also had a fix for this but this solutions seems even better to me :)\n. +1 That's also what we need!\nI also had a fix for this but this solutions seems even better to me :)\n. ",
    "criol": "any news?\n. any news?\n. ",
    "bolandrm": ":+1:  I could use this for working properly with Rails / Turbolinks\n. :+1:  I could use this for working properly with Rails / Turbolinks\n. ",
    "Marcom75": "hi,\n\nwhere, in what file, did you put this script? thanks\n. hi,\n\nwhere, in what file, did you put this script? thanks\n. ",
    "christianesperar": "I think this is what you need https://github.com/carlsednaoui/ouibounce#cookie-expiration\n. I think this is what you need https://github.com/carlsednaoui/ouibounce#cookie-expiration\n. ",
    "Staalkoper": "Thanks for the help Christiane!\n\nI'm not very familiar with JS. \nCould you tell me where I should add \n`ouibounce(document.getElementById('ouibounce-modal'), { cookieExpire: 10 });`\n. Thanks for the help Christiane!\n\nI'm not very familiar with JS. \nCould you tell me where I should add \n`ouibounce(document.getElementById('ouibounce-modal'), { cookieExpire: 10 });`\n. ",
    "chrisdesrochers": "Don't forget to consider the new [AMP](https://www.ampproject.org/) specs. Lots of sites are migrating mobile pages to AMP format which unfortunately does not support external JavaScript. \n. Don't forget to consider the new [AMP](https://www.ampproject.org/) specs. Lots of sites are migrating mobile pages to AMP format which unfortunately does not support external JavaScript. \n. ",
    "jgoyon": "Hi, is there a plan to merge this PR ?\nI [started to implement this feature](https://github.com/jgoyon/ouibounce/commit/9fbae927b1031779d874a0d8198e1794771c6563)  on my side but discovered the PR of @dempfi already implement it.\n. Hi, is there a plan to merge this PR ?\nI [started to implement this feature](https://github.com/jgoyon/ouibounce/commit/9fbae927b1031779d874a0d8198e1794771c6563)  on my side but discovered the PR of @dempfi already implement it.\n. ",
    "dempfi": "hi @carlsednaoui can you please take a look at this PR?. I know how it happens :) no worries. hi @carlsednaoui can you please take a look at this PR?. I know how it happens :) no worries. ",
    "kazimzaidi": "I'm experiencing same. Any thoughts anyone? IE11.0\n. I'm experiencing same. Any thoughts anyone? IE11.0\n. ",
    "basilfarraj": "No one helped with this kazimzaidi.\nI just disabled the the bounce when on IE.\n. No one helped with this kazimzaidi.\nI just disabled the the bounce when on IE.\n. ",
    "snietert": "I was dealing with the same problem and also tried to fix this. Failed. As I had some time constraints there was either an option to remove ouibounce, disable it for IE or find some hack to make it work for everybody. I chose the hack way by just instantly hiding the popup and re-initializing it. It has to be fast enough so the user does not see it. Have to test cross browser. Not super nice but works :)\n\n`$('#selectTriggeringTheModal').on('mouseleave', function(e){\n    window.setTimeout(function() {\n      $('.modal').hide();\n      $('.popup-bg').hide();\n      setUpModal();\n    }, 5);\n  });`\n. I was dealing with the same problem and also tried to fix this. Failed. As I had some time constraints there was either an option to remove ouibounce, disable it for IE or find some hack to make it work for everybody. I chose the hack way by just instantly hiding the popup and re-initializing it. It has to be fast enough so the user does not see it. Have to test cross browser. Not super nice but works :)\n\n`$('#selectTriggeringTheModal').on('mouseleave', function(e){\n    window.setTimeout(function() {\n      $('.modal').hide();\n      $('.popup-bg').hide();\n      setUpModal();\n    }, 5);\n  });`\n. ",
    "yamanwa": "Another workaround, check if the event was fired from within a select, this can be done on mouse event\r\n\r\n```\r\nvar isIE = (navigator.appName == 'Microsoft Internet Explorer') || (navigator.appName == 'Netscape' && (new RegExp(\"Trident/.*rv:([0-9]{1,}[\\.0-9]{0,})\").exec(navigator.userAgent) != null));\r\nif (isIE > 0) { /* IE */\r\n\tvar list = document.getElementsByTagName(\"select\");\r\n\tfor (var i = 0; i < list.length; i++) {\r\n\t\tvar rect = list[i].getBoundingClientRect();\r\n\t\tif (e.clientX >= rect.left && e.clientX <= rect.right && e.clientY >= rect.top && e.clientY <= rect.bottom) {\r\n\t\t\treturn; /* event fired inside select */\r\n\t\t}\r\n\t}\r\n\t//Event in IE, not in a select\r\n}\r\nelse {\r\n\t//Other browsers\r\n}\r\n```\r\nHope this is useful\r\n. Another workaround, check if the event was fired from within a select, this can be done on mouse event\r\n\r\n```\r\nvar isIE = (navigator.appName == 'Microsoft Internet Explorer') || (navigator.appName == 'Netscape' && (new RegExp(\"Trident/.*rv:([0-9]{1,}[\\.0-9]{0,})\").exec(navigator.userAgent) != null));\r\nif (isIE > 0) { /* IE */\r\n\tvar list = document.getElementsByTagName(\"select\");\r\n\tfor (var i = 0; i < list.length; i++) {\r\n\t\tvar rect = list[i].getBoundingClientRect();\r\n\t\tif (e.clientX >= rect.left && e.clientX <= rect.right && e.clientY >= rect.top && e.clientY <= rect.bottom) {\r\n\t\t\treturn; /* event fired inside select */\r\n\t\t}\r\n\t}\r\n\t//Event in IE, not in a select\r\n}\r\nelse {\r\n\t//Other browsers\r\n}\r\n```\r\nHope this is useful\r\n. ",
    "JiveDig": "I'm still seeing this behavior with v0.0.12\r\nviewedOuibounceModal is true in my browser, yet...\r\n`setTimeout(function() {\r\n\t_ouibounce.fire();\r\n}, 4000 );`\r\nand the modal fires every time.\r\n\r\n. Turns out you can use a different cookie name per popup... then you can have different popups per section of your site. Cool!\n. See the 2nd snippet here. https://github.com/JiveDig/slim-popups/blob/master/README.md\nI made a WordPress plugin to quickly setup popups.\n. I'm still seeing this behavior with v0.0.12\r\nviewedOuibounceModal is true in my browser, yet...\r\n`setTimeout(function() {\r\n\t_ouibounce.fire();\r\n}, 4000 );`\r\nand the modal fires every time.\r\n\r\n. Turns out you can use a different cookie name per popup... then you can have different popups per section of your site. Cool!\n. See the 2nd snippet here. https://github.com/JiveDig/slim-popups/blob/master/README.md\nI made a WordPress plugin to quickly setup popups.\n. ",
    "lencioni": "It looks like this is happening because of the UMD build (via gulp-wrap-umd). There's [an issue on that project](https://github.com/phated/gulp-wrap-umd/issues/10) that pointed me to [a webpack plugin that helps webpack understand UMD](https://github.com/resin-io/umd-require-webpack-plugin).\n. That plugin did not seem to help in my situation. However, it turns out that we had some configuration that disables AMD stuff:\n\n``` js\n{\n  test: /./,\n  loader: 'imports?define=>false',\n},\n```\n\nIf I remove this, I can get the warnings to go away.\n. Just to totally close the loop on this, I ended up changing my above configuration to\n\n``` js\n{\n  test: /./,\n  exclude: [\n    require.resolve('ouibounce'),\n  ],\n  loader: 'imports?define=>false',\n},\n```\n. It looks like this is happening because of the UMD build (via gulp-wrap-umd). There's [an issue on that project](https://github.com/phated/gulp-wrap-umd/issues/10) that pointed me to [a webpack plugin that helps webpack understand UMD](https://github.com/resin-io/umd-require-webpack-plugin).\n. That plugin did not seem to help in my situation. However, it turns out that we had some configuration that disables AMD stuff:\n\n``` js\n{\n  test: /./,\n  loader: 'imports?define=>false',\n},\n```\n\nIf I remove this, I can get the warnings to go away.\n. Just to totally close the loop on this, I ended up changing my above configuration to\n\n``` js\n{\n  test: /./,\n  exclude: [\n    require.resolve('ouibounce'),\n  ],\n  loader: 'imports?define=>false',\n},\n```\n. ",
    "tandrewnichols": "No, 0.0.12 is published on bower.\n. I didn't mean that this was resolved. Bower.json does say 0.0.11 (even in my bower install of 0.0.12).\n. No, 0.0.12 is published on bower.\n. I didn't mean that this was resolved. Bower.json does say 0.0.11 (even in my bower install of 0.0.12).\n. ",
    "Isengo1989": "Could you share your answer? Much appreciated ;-)\n. Could you share your answer? Much appreciated ;-)\n. ",
    "pjatx": "Yeah - it doesn't support touch devices. One approach can be found here: https://github.com/carlsednaoui/ouibounce/pull/96 which seems to work when folks scroll very quickly up the page. \r\n\r\nOther options are detecting mobile devices and firing at a certain time, otherwise use normal desktop behavior. . Yeah - it doesn't support touch devices. One approach can be found here: https://github.com/carlsednaoui/ouibounce/pull/96 which seems to work when folks scroll very quickly up the page. \r\n\r\nOther options are detecting mobile devices and firing at a certain time, otherwise use normal desktop behavior. . ",
    "tikotzky": "Looks like the issue may be that you aren't saving the handler again in `handleClose()`\r\n\r\ntry changing it to something like\r\n```\r\nhandleClose(){\r\n    // we set the modal again, so that it reopens when we quit next time\r\n    const handler = this.setupOuibounce()\r\n    this.setState({open:false, handler})\r\n  }\r\n```. Looks like the issue may be that you aren't saving the handler again in `handleClose()`\r\n\r\ntry changing it to something like\r\n```\r\nhandleClose(){\r\n    // we set the modal again, so that it reopens when we quit next time\r\n    const handler = this.setupOuibounce()\r\n    this.setState({open:false, handler})\r\n  }\r\n```. ",
    "eric-burel": "Definitely the right solution, thanks. I should have posted on stackoverflow first. I'll try to publish a React version of ouibounce some day.\r\n. Definitely the right solution, thanks. I should have posted on stackoverflow first. I'll try to publish a React version of ouibounce some day.\r\n. ",
    "makaroni4": "\ud83d\udc4c \r\n\r\nIt's a duplicate of https://github.com/carlsednaoui/ouibounce/pull/101 btw. @dimdimbe there are even 3 PRs like this, hope @carlsednaoui will find some time to merge one of them, it's very useful feature \ud83d\udc4d . \ud83d\udc4c \r\n\r\nIt's a duplicate of https://github.com/carlsednaoui/ouibounce/pull/101 btw. @dimdimbe there are even 3 PRs like this, hope @carlsednaoui will find some time to merge one of them, it's very useful feature \ud83d\udc4d . ",
    "dimdimbe": "You're right! I didn't check other PR before... You're right! I didn't check other PR before... ",
    "azypka": "Never mind , my mistake :) Works without problem. Never mind , my mistake :) Works without problem. ",
    "yellow1912": "Difficult to say, does it happen for any email field on any form? Can you setup a live working example with simple hml to test?. Difficult to say, does it happen for any email field on any form? Can you setup a live working example with simple hml to test?. ",
    "kwoxer": "Well it's nearly impossible to serve a public example for this as it just happens when the connection is http without ssl. As there is nearly no website without ssl there, it's better to test it offline.\r\n\r\nBecause developer play around on local machines without ssl it that issue I mentioned here is happening very often.\r\n\r\nSo just run any site with a login locally and you will see that Firefox warning popup on the login email element.. Well it's nearly impossible to serve a public example for this as it just happens when the connection is http without ssl. As there is nearly no website without ssl there, it's better to test it offline.\r\n\r\nBecause developer play around on local machines without ssl it that issue I mentioned here is happening very often.\r\n\r\nSo just run any site with a login locally and you will see that Firefox warning popup on the login email element.. ",
    "CraigWallsauce": "simple answer:\r\naggressive: false;. simple answer:\r\naggressive: false;. ",
    "nodesocket": "Don't use `aggressive`. According to the doc, this does not use cookie state at all.. Don't use `aggressive`. According to the doc, this does not use cookie state at all.. ",
    "hackuun": "What's the point? You don't have hover on mobile.. What's the point? You don't have hover on mobile.. "
}