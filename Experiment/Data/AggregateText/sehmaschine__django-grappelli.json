{
    "sehmaschine": "cool \u2013 thanks.\n. thanks again. please note that I\u00b4m just giving github a try and grappelli is still maintained via google-code.\n. autocompletes are now availabe with the autocomplete-branch:\nhttps://github.com/sehmaschine/django-grappelli/tree/autocomplete\nhttp://readthedocs.org/docs/django-grappelli/en/autocomplete/customization.html#autocomplete-lookups\n\ntested with firefox, chrome & safari on regular forms, inline-formsets (tabular and stacked) and generic inlines. NOTE THAT THE UI IS NOT FINISHED YET ...\n\nTODO:\n\u2013 CSS cleanup\n\u2013 check behaviour on changelist.\n\u2013 check errors below fields.\n\nplease add your thoughts about the current implementation (incl. variable names etc.) and keep in mind that we\u00b4re looking for the most simple solution.\n. TODO: only show \"X\" for fk and generics when the field is not empty\n. TODO: show result-counter and show a message if no results are found.\n. @parsch: long text within fk- and generic-input overflow the remove-symbol\n@parsch: with m2m-autocompletes, the list is much smaller than the div-wrapper\n@parsch: hovers (div, input) are not very nice (probably an issue with djangos fine dom-structure)\n. \u2013 CSS cleanup done\n\u2013 functionality on changelist not possible due to a bug in django 1.3 (update the grappelli-docs accordingly)\n. \u2013 error-fields ok\n\u2013 remove-link is only visible if there\u00b4s a value\n. \u2013 width of menu-items with m2m-autocompletes is fixed.\n. \u2013 clicking labels with autocomplets is fixed.\n. idea: add an \"X\" to m2m-autocomplets in order to remove _all_ items. remove the \"X\" button for every single item ... instead, remove the item by clicking it.\n. @parsch: please check the width of m2m-fields within tabular-inlines.\n. @parsch: the results are now being shown as the first item within ul.menu. instead of `<li><a>xxx</a></li>` we have `<li><span>xxx</span></li>` ... needs to be styled. this line is always there (even in case of a server-error).\n. @parsch: some styling-issues with updating jquery & jqueryUI (e.g. the datepicker). uncomment line 50 in grappelli.js and you\u00b4ll see what\u00b4s wrong. some other styles might need a fix as well.\n. @parsch: elements within fk, m2m and generic wrapper are having a slightly different vertical position (with inlines, the items are not centered vertically). the same is true for the remove-link.\n. @parsch: IMO, we need to distinguish single lookups from multiple lookups with adapting the search-icon accordingly (for either related-lookups and autocomplete-lookups). because even with related-lookups, it\u00b4s not obvious that multiple items can be selected. minimal change to the search-icon > far more user-friendly.\n. not necessarily: distinguish by type (object, file), by action (single, multiple) or by type and action. IMO, type is not as important as action.\n. @parsch: check width if several fields are within a row.\n. fixed with the 2.3.4-release.\n. this could be done with a) adding all necessary ui\u2013translation files and b) loading the file based on the defined django\u2013language with:\n\n```\n    <script type=\"text/javascript\" charset=\"utf-8\">\n        var url = \"{% get_static_prefix %}grappelli/jquery/i18n/ui.datepicker-{{ LANGUAGE_CODE }}.js\";\n        grp.jQuery.getScript(url);\n    </script>\n```\n\nhowerver, not every language is available with jquery\u2013ui. can we still use that? any opinions?\n. you mean with adding a custom grappelli templatetag and hardcoded datepicker languages?\n. @pawlyk yes, manually with customized templates (just add the necessary jquery-ui language files).\n. @pawlyk please refer to the google user\u2013group for asking questions. this is an issue tracker. thank you!\n. seems possible after we updated jquery/jquery\u2013UI (see #378). but we don't update jquery with 2.4.x, because there are backwards\u2013incompatible changes.\n. closing this since there's no viable solution (file endings are not equal with django language codes and jquery UI). besides, it's easy to add the files yourself.\n. @parsch: overriding the template is done with admin.ModelAdmin.\n\ne.g.,\nchange_list_template = \"admin/change_list.html\"\nversus\nchange_list_template = \"admin/change_list_filters.html\"\n. @parsch: results should be behind the sidebar\u2013filters.\n. fixed with 2.4.2\n. did you test with django 1.3? I\u00b4m asking because grappelli is always developed against the latest official release.\n. works fine for me (OSX 10.6.8, safari 5.0.5) with django 1.3.\nI\u00b4m sorry, but djangos trunk is too hard to follow ... especially with 1.4, since some admin-related changes are implemented.\n. can you add more details (e.g. looking at the code and see what\u00b4s happening)? for me, it\u00b4s hard to debug this issue since I\u00b4m not able to reproduce it.\n\nthis problem doesn\u00b4t exist when you\u00b4re not using grappelli, right?\n. yes, login would be helpful.\n. the wrong (original admin interface) css are being loaded ... it\u00b4s a setup issue. do you use staticfiles?\n. WHAT didn\u00b4t you install with pip? grappelli? no - you don\u00b4t have to use pip (although I recommend using it).\n. the problem is not pip though ... the problem is that the wrong css is being loaded and that\u00b4s related to your django-setup (staticfiles, media_root etc.). sorry, but there\u00b4s not much I can help with.\n. that\u00b4s a bad place to discuss it here ... are you on IRC/skype?\n. the problem is definitely a wrong setup. BUT: if you\u00b4re asking a question and/or don\u00b4t understand how things work, please use the google-group. this is an issue-tracker.\n. if no images are loaded and/or paths/urls are wrong ... setup issue!\nread the django-docs about how to server media and static files. sorry ... nothing we can do about that.\n. @adaaif: yes, but of course that doesn\u00b4t mean your media/static-setup is fine (that\u00b4s a totally different story).\n. @adaaif : sorry ;-)\n. TinyMCEAdmin.js is _not_ using the grappelli-theme (it\u00b4s using o2k7). if you\u00b4re using grappelli, you need to add tinymce_setup.js (or something similar). can you give that a try and let me know if it works?\nnote: it probably makes sense to remove TinyMCEAdmin.js from the repo.\n. no, you shouldn\u00b4t use TinyMCEAdmin.js at all ... you should use tinymce_setup.js. that said, this file is just an _example_ of how a configuration-file could look like (please read the tinymce-docs in order to understand what\u00b4s happening exactly).\n\nif you add tinymce and tinymce_setup (both which are included with grappelli), there shouldn\u00b4t be an error. I\u00b4ve tested with firefox, safari & chrome (both windows and OSX).\n\nif you\u00b4re having questions on how to integrate TinyMCE in general, please use the google-group.\n. did you try with django 1.3?\n. honestly ... I don\u00b4t think it\u00b4s a grappelli-error. otherwise hundreds of users won\u00b4t be able to use the filter drop-down and I don\u00b4t think that\u00b4s the case. I\u00b4m pretty sure it\u00b4s because of 1.4.0a ... and grappelli is always developed against the latest official release.\n. if you read my last comment you'll see that grappelli is not developed with djangos trunk. \n. I\u00b4m closing this ticket since it\u00b4s related to djangos trunk version. docs have been updated and a note has been added that grappelli is always developed against the latest stable django release.\n. of course, it will get fixed once grappelli is compatible with django 1.4\n. grp.jQuery needs to be there, otherwise no js will work ... we already had that issue with another ticket and it turned out it\u00b4s been a setup issue. are you sure that your javascript-files are being loaded correctly?\n. can you check why grp.jQuery is not there? because it should be. as mentioned before, if grp.jQuery is not there, a lot of stuff won\u00b4t work as expected.\n. which django-version are you using?\n. I\u00b4m using django 1.3 and chrome 14.0.835.94 beta ... can\u00b4t reproduce this bug.\n. when you say \"problem reproduced\" ... are you referring to the login-page only or (as vitorh45 described) every page?\n. are you all using grappelli 2.3.3+?\n\nsee\nhttps://github.com/sehmaschine/django-grappelli/commit/68e0cc7fe2e573d1dab0691c76b949a2f7d325eb\nhttps://github.com/sehmaschine/django-grappelli/commit/0a8fc04141fef96a08ef227adb3085471cfff9b0\n. I\u00b4m closing this since it seems to be solved with 2.3.3+\n. besides, the ui-sortable-helper class gets overriden by the predelete class.\n. grappelli-skin-default.css, line 748 seems to be the problem:\n.collapse.open.predelete > h4.collapse-handler\n. definitely works ... did you define the related lookups according to the docs? http://django-grappelli.readthedocs.org/en/latest/customization.html#related-lookups. I\u00b4m sorry but we had to change the related-lookups a bit with 2.3+ because of some smaller issues with the former version. it\u00b4s all mentioned in the docs as well as the changelog and should now work very stable.\n. see http://readthedocs.org/docs/django-grappelli/en/latest/customization.html#inline-sortables ... besides that, the latest official release is 2.3.3 (e.g. via pip install).\n. you are so right! accepted (and hopefully fixed soon).\n. fixed, see http://sehmaschine.github.com/django-grappelli/\n. sorry, but I can\u00b4t guarantee the tinymce-files to be up-to-date all the time. that\u00b4s just to much effort. thanks for the patch though.\n. IMO, this should be done with classes instead of alignments. any objections?\n. I\u00b4m closing this for now since I\u00b4m sure this is better solved with using classes.\n. I did unterstand your proposal. what I don\u00b4t understand is why you want to use text-alignments instead of classes (of course you can define classes which will define text-alignments).\nconsider this: you let your editors add alignments to paragraphs and one day you\u00b4d like to change these alignments ... what do you do? IMO, text-alignment is completely redundant (if not dangerous) with \"rich text editing\".\n. no, I don\u00b4t have a better idea. but I guess that you can simply override content_css with tinymce_setup.js.\n. 1. if you use grappelli.dashboard, please remove all admin-tools-apps from your INSTALLED_APPS\n2. which version of grappelli are you using?\n. grappellli is always developed againt the latest official django-release. using django 1.3 will resolve the problem.\n. thanks for the information. unfortunately, there\u00b4s a bunch of backwards-incompatible changes with 1.4 ... that\u00b4s why we stick with 1.3 for now. that said, customizing the admin-interface should be a lot easier with the final release of 1.4 (so we\u00b4re looking forward to that).\n. updating screenshots are already on the todo-list. maybe we\u00b4ll add screencasts as well. but I think that another github-project is to hard to maintain (I rather spend my time improving grappelli/filebrowser). sorry.\n. fixed with the autocomplete-branch since it\u00b4ll be merged soon.\n. please use the google-group to ask question. thanks.\n. nope. bug!\n. thanks. we\u00b4ll check that issue asap.\n. what version of django did you use for this fix?\n. no, that\u00b4s fine. I just asked because most of the recent request are related to django 1.4 ... \n. thanks. we\u00b4ll fix that.\n. note: I\u00b4ll deleted the files with the autocomplete-branch since this branch is going to be merged very soon. closing the ticket since the merge will fix the issue.\n. can you explain that a bit more? what \"Meta class\"?\n. seems a bit overdone for what we\u00b4re trying to do, but we\u00b4ll keep it in mind. thanks for the hint though.\n\nbtw: we\u00b4ll use compass for the next version of grappelli.\n. we just need the grid \u2013 and with that in mind, it\u00b4s overdone (not in general, but for us). besides, compass nicely integrates with blueprint.\n\nsorry, but I don\u00b4t understand your last question. grappelli has the same amount of fields, it just looks different.\n. closing this since the next version will be based on compass (and I don\u00b4t understand the second question). if compass integrates with bootstrap, we\u00b4ll re-discuss this issue.\n. We will check Bootstrap with the next major release again.\n\nBut I have to say, that this (https://wrapbootstrap.com/themes/admin) is not really convincing. Some of these themes look nice at first, but weird when it comes to the details \u2014 though I'm currently not sure if the reason is Bootstrap or the actual implementation.\n. I doubt that this is easily possible ... but we'll check it!\n. well, that would be interesting of course. but before you start working on something like that ... if it's not easy, what exactly are the benefits of doing this? just to say we're using bootstrap? from my point of view, it doesn't make customizing the admin interface easier (maybe even harder) for anyone using grappelli. moreover, we need to adapt with every new version of bootstrap, but we're already having a hard time keeping up with django.contrib.admin (and their inexplicable updates).\n\nthat being said, I don't wanna block this issue. if you're having some spare time to invest doing a prototype, that's much appreciated (though it doesn't mean we're going to use Bootstrap).\n. @BertrandBordage we're totally open to change our workflow and I basically agree with what you've written. my doubts primarily arise from the admin projects done with bootstrap. for example, the link above posted by leonardo: when I look at these screenshots ... I'm like WTF!\n\nbut: maybe it doesn't have to be this way. maybe I just need someone to convince me that grappelli won't look that shitty if we use bootstrap.\n. I personally don't care about the \"theme\" ... that could be changed later. what's important in my opinion is that we have the necessary structure/options (e.g. object\u2013tools, footer, date\u2013hierarchy and other stuff). from my experience it's not that easy \u2013 you can't just add boostrap elements to an existing DOM and assume that it will look ok. \n\nmaybe the misunderstanding is this: when I talk about the design, I'm not referring to colors/fonts/or presentational markup in general. I'm talking about (for example) pixel perfect placement of a filter element beneath a searchbar. If we're able to solve that issue, I'm more than happy to re\u2013evaluate bootstrap for the next major release of grappelli.\n. I\u00b4m also not happy about that situation. but working on grappelli is unpaid \u2013\u00a0so we need to focus on what\u00b4s important for us and our customers. sorry.\n\nbesides, you\u00b4re free to add patches in order to solve these issues.\n. overriding a change-list template is exactly the same with grappelli and the standard admin interface. but I don\u00b4t understand your question \u2013 why do you need to find out if grappelli is being used? I mean, you\u00b4re the developer, so you should know. guess I\u00b4m missing something, right?\n. alright, I see.\n\nunfortunately, I don\u00b4t know how to figure out if grappelli is being used. guess you need to check INSTALLED_APPS. on a template-level, you probably need to write a custom template-tag.\nbesides, please use the google-group for asking questions.\n\nthanks,\npatrick\n. @parsch: could you please take a look at this one? thanks.\n. yes, I know. but I haven\u00b4t give this much thoughts so far ... do you think it\u00b4s better to throw an error?\n. about your first problem: did you add apps like \"myapp\" and others like \"project.myapp\" to your INSTALLED_APPS?\n\nthe comparison with how django handles such cases is a good argument. I agree that we should take the same path.\n. I\u00b4ve tried to solve this but I didn\u00b4t find a solution since we\u00b4re able to define models like \"django.contrib.*\" ... which is not in the list of registered items.\n\nI\u00b4d say we have to stick with the current solution. it\u00b4s not perfect, but on the other hand you shouldn\u00b4t have a problem if you define your dashboard-models like the one you add to INSTALLED_APPS.\nif for example\n\"project.blog\"\nis in your INSTALLED_APPS\nyou need to add something like\n\"project.blog.models.BlogEntry\"\nto your dashboard\n. closing this one since #46 adds a better explanation.\n. grappelli is a requirement for the filebrowser.\n\nbut you don\u00b4t need to use grappellis tinymce-theme. did you try it with the default tinymce skin?\n. closing this since no reply is given. I guess this is being solved with using the original tinymce-skin.\n. grappelli doesn\u00b4t include all buttons that come with tinymce \u2013\u00a0it\u00b4s only a minimal theme.\n. unfortunately, I don\u00b4t know a quick fix since I\u00b4ve never used pagebreak \u2013 but if you find a solution, please let me know.\n. thx. I\u00b4ll check that and update asap.\n. what url reverse error?\n. you could use a filebrowsefield or an imagefield with the clearablefileinput-widget that comes with the filebrowser (see http://readthedocs.org/docs/django-filebrowser/en/3.3.0/fieldswidgets.html#clearablefileinput). but the question is more related to the filebrowser than to grappelli. \n. how can I reproduce this error?\n. now I see what you mean \u2013\u00a0thanks for the clarification.\n\nI\u00b4ll take a look at this. The mentioned code shouldn\u00b4t even be relevant because of `if request.GET.get('query_string', None):`\n. just by taking a quick look at your patch I\u00b4m having a question: you mainly seem to remove image-references in css-files (as well as some grid-styles). doesn\u00b4t this affect the grappelli-layout? sorry, but I\u00b4ve never been using cache storage: can you explain your patch a bit?\n\nthanks.\n. I see ... you just removed images which are not used. thanks. we\u00b4ll test the patch with our environment an merge asap (this may take a few days since we\u00b4re in the middle of a bigger filebrowser-update).\n. thanks a lot.\n. sorry, but this patch doesn\u00b4t seem to work ... did you tested this without the \"future\" imports? IMO, {% load url from future %} is missing.\n. did you test with the latest official django-release? because grappelli is not developed against djangos trunk. and since we never came across this issue, I suspect it\u00b4s more related to django than to grappelli.\n. interesting. do you get any js-errors?\n\nbesides, can you please send\na) the model and admin-options you\u00b4re using for the inlines and\nb) the relevant part of the traceback\n\nthanks.\n. the next version will be namespaced.\n. I could just now reproduce this bug. we\u00b4ll take a look at this!\n. working on it ...\n. bug should be fixed (dynamic-form is now being added correctly). please let me know if you\u00b4re still having problems with this issue.\n. should be solved.\n. how do you refer to the models when adding them to the admin (register ...).\n. thanks. will update the docs.\n. I\u00b4ve updated the docs in order to reflect the issue mentioned by @dannyadair. unfortunately, I\u00b4m not able to reproduce the original issue (which seems to be a different one).\n. docs are updated.\n. mainly because I don\u00b4t get the point. I mean ... we just can\u00b4t support all 3rd-party-apps which are based on the admin-interface and are not compatible with grappelli. where does it lead to?\n\nbesides, if treemenu needs these icons, grappellis look & feel is gone ... so I suggest using the original admin-interface for that case anyway.\n\nthis is an unsatisfactory situation for us as well. but as long as it\u00b4s not possible to skin djangos admin-interface in a clean and easy way, we have to make decisions like this.\n. that\u00b4s a reasonable argument and I already said I\u00b4m not satisfied with the situation as is. nevertheless, we\u00b4re not able to support all 3rd-party-apps (that\u00b4s just not possble because it\u00b4s too much effort and we do these projects in our spare time).\n\nthat said, if you add a pull-request chances are much higher it\u00b4s being implemented (if it doesn\u00b4t interfere with other stuff and it\u00b4s just about adding some images).\n. grappelli doesn\u00b4t include any translations. so it\u00b4s mainly a django-issue. that being said, we should take care that the layout doesn\u00b4t break even if the text-phrase is too long.\n. looks good to me.\n\njust a small hint if you submit a patch:\nfor backwards-compatibility, I would leave the callback as is (for now).\n. do you still want to submit a patch for this? otherwise I\u00b4m going to close this issue ... although I\u00b4m happy to implement your patch if you find the time to submit it.\n. alright. thanks for the info.\n. please resubmit if that\u00b4s possible. thanks.\n. a question to begin with: what exactly would you do with pre-/post-content functionality?\n. added pre- and post-content. please note that you need to add the relevant DOM yourself ... e.g.\n\n```\n        self.children.append(modules.AppList(\n            _('Administration'),\n            collapsible=True,\n            column=1,\n            css_classes=('collapse open',),\n            pre_content='<div class=\"module\"><div class=\"row\"><p>Adding a <a href=\"https://djangoproject.com\">Link</a></p></div></div>',\n            post_content='<div class=\"module\"><div class=\"row\"><p>Adding a <a href=\"https://djangoproject.com\">Link</a></p></div></div>',\n            models=('django.contrib.auth.models.User','django.contrib.auth.models.Group',),\n        ))\n```\n. sorry, I don\u00b4t understand your last comment ... how is feincms connected with grappelli?\n. I still don\u00b4t understand this. as far as I know, feincms doesn\u00b4t support grappelli ... am I wrong?\n. basically, you\u00b4re right \u2013 grappelli replaces the admin site. but if feincms doesn\u00b4t support our templates resp. DOM structure, it won\u00b4t work.\n\nbackground: because the HTML/CSS of the original admin is a bit of a mess, we are not able to work on the basis with grappelli since it makes the js-part (which again ist just a workaround for some django-limitations) almost impossible. bit of an awkward situation, but there\u00b4s not much we can do about that right now.\n. sorry for that. are you able to split the pull-requests?\n. I\u00b4d prefer a pull-request for every self-contained change/fix. thanks a lot.\n. sorry ... I didn\u00b4t know you can do only one pull request a time. in that case, just leave it as is. I\u00b4m pretty new to git, so I\u00b4ve never used cherry-pick, but I\u00b4ll give that a try.\n. sorry, but I need to close this request ... I\u00b4m not able to see what\u00b4s more or less important and how the different requests relate to each other (and/or to feincms). please re-add the request with additional information on what exactly you want to change and why. thanks.\n. how does tinymce detect the language automatically?\n. besides, that\u00b4s about 1900 additional files ... and the grappelli-plugin for tinymce doesn\u00b4t support all these languages. not sure about this.\n. we\u00b4ve decided to not include all languages (tinymce has been updated with 2.3.8)\n. I\u00b4m ok with adding this if (and only if) the given grappelli-style is preserved. can you send a screenshot?\n. this is just for tinymce, right? because there's other popups in the admin interface as well (eg related lookups). how do we handle these other cases? because IMO it's important to have a coherent solution - not different kind of popups. what do you think?\n. in that case I\u00b4m against merging this (sorry). but consistency is a major issue for us \u2013\u00a0and having different solutions for popups/dialogs within a interface is something I don\u00b4t like at all.\n\nthanks for the effort though. if there\u00b4s any chance we\u00b4re able to create a decent and consistent solution, we should re-discuss this issue.\n. yes. but that's a backwards-incompatible change with django. so, once 1.4 is released, we'll update grappelli. \n. see #91\n. what version are you using? because I think we just fixed that bug.\n. see https://github.com/sehmaschine/django-grappelli/commit/8997ce912d3e638973507c7edde50a7c05a2cf1c\n. right, it\u00b4s solved with the master-branch, but there\u00b4s no update on pypi yet. I\u00b4m leaving this open for reference although the issue is already fixed.\n. closing this since 2.3.6 will be relased pretty soon.\n. I\u00b4m pretty sure this is related to the tinymce-version (3.4.2) we\u00b4re using with grappelli ... it seems to work with tinymce 3.4.7., so it will be solved when we update tinymce.\n. probably with 2.4 (once django 1.4 is out). but I don\u00b4t know since I\u00b4m only assuming that it comes down to the tinymce-version. if it\u00b4s really an issue with tinymce, I\u00b4m going to update instantly \u2013\u00a0but I need more information on the subject in order to do so ... \n. if you need it fast, you could add a pull-request. please keep in mind that we overwrite some plugins in order to preserve the grappelli-style ...\n. tinymce updated with 2.3.8-release\n. @parsch: isn\u00b4t it better to add grappelli-like arrow-buttons?\n. @honi: doesn\u00b4t work for me (tested with firefox). does it work for you?\n. I\u00b4m on 13.0.1 as well ... you added the line to the stop-function of the sortable, right? \n. sorry ... yes, it does work. the behaviour just seems strange to me (and with all the different inlines I\u00b4m testing with I got confused). so, yes it works, but I\u00b4m not fully convinced we should use this.\n. looks good, thanks!\n. yep. any idea how to solve this?\n. I don\u00b4t see how this could be solved due to browser-issues (since we are not able to serialize a filefield).\n. #134 is a possible solution.\n. what if we\na) serialize the fields (for each row) when loading the changeform.\nb) add the result to each row (just a hidden div with the field-values).\nc) on save, we serialize again (like we do now) and compare the values with the hidden div.\n\ncould that work?\n. if the values are unchanged \u2013 we don\u00b4t need to save them, because they are already saved. right?\n. I don\u00b4t quite get the point: if you\u00b4re having an extra form with initial data and you don\u00b4t change any values ... why would you want to save this row then? because when I follow your example, _all_ extra forms will automatically be saved (no matter what I do). am I missing something?\n. but we shouldn\u00b4t rely on that.\n. sorry, but I\u00b4m not able to follow this discussion anymore (IMO your argumentation goes in circles). please add a new ticket and try to explain _what exactly_ you want/need to solve. thanks.\n. take a look at #134 ... that\u00b4s a possible solution IMO.\n. I\u00b4m using django-positions as well, mainly for models which have list-editables on a changelist.\n\nwhen using django-positions with inline-sortables it doesn\u00b4t work (at least that\u00b4s my experience). I haven\u00b4t been looking into django-positions to figure out what exactly does break there \u2013 but I\u00b4m pretty sure this is not an issue we can solve with grappelli, right?\n. any updates on this one?\n. I\u00b4m closing this issue for now. please re-open with additional information if needed. thanks.\n. can you explain your patch? what does it actually solve and why?\n. ah, ok. you know that we always develop against the latest official release of django, right? so, this \"error\" is intentional. we\u00b4ll update grappelli once 1.4 is released (because there are backwards-incompatible changs with the admin-interface).\n. I don\u00b4t think that\u00b4s something which should be configurable with grappelli. I personally don\u00b4t like/use the app-index at all, but it should be solved with django (and not with grappelli).\n\nI\u00b4ve mentioned this several times before: django orders your models based on apps. but I\u00b4m pretty sure, no customer/editor is interested in the structure of your \"apps\". to me, this doesn\u00b4t make sense at all ... still a \"-1\" on \"fixing\" this with grappelli.\n. well, I think the whole admin-interface has been built with developers in mind: e.g., the index-page is just a list of \"INSTALLED APPS\" (try to explain that to an editor).\n. closing this since it\u00b4s not a grappelli-issue (although I hope that it will be solved with django).\n. -1 for this \"solution\".\n. which version of grappelli are you using?\n. this should be solved with the master-branch. please reopen the ticket if the issue still exists.\n. thanks \u2013 just committed your code.\n. yes, that\u00b4s the intended behaviour. any problems with this?\n. sorry, of course you don\u00b4t need to populate the sortable-field but one of the other fields with any inline ... if the serialization of all inline-fields returns something, the sortable-field gets populated.\n. any js-errors? did you do the setup of the sortables according to the docs?\n. now it\u00b4s clear: serializing a file-field doesn\u00b4t work. so unfortunately, the sortables are not working with a single file-field. and I don\u00b4t think there\u00b4s a solution, because of the way file-fields are handled with html.\n. closing this one. if you feel that your issue hasn\u00b4t been solved yet, please add another (working and tested) pull-request. thanks.\n. see #91\n. I\u00b4m sorry but this pull-request seems quite strange to me (see my 2 comments on your requests).\n. 1. just added a fix for the term \"1 result\" with pagionations.\n2. you need to add missing translations directly with django.contrib.admin (I think they use transifex).\n3. I\u00b4ve added your other translation fixes as well (thanks for that).\n\nbut no, the templates from django-admin-tools are being used for the dashboard excklusively.\n. is this solved with django admin 1.3? because relatedobjectlooup.js is basically a copy ...\n. I\u00b4m pretty sure django handles raw-id-fields and radio-lists as well (but I didn\u00b4t check that).\n\nhowever, if you add a pull-request I\u00b4m going to merge it.\n. thanks. I\u00b4ve decided to remove title_url from the docs (use pre_content or post_content instead).\n. thanks. no pull-request needed ... we\u00b4ll check that.\n. thanks. merged the other pull-request though.\n. what if we\na) serialize the fields (for each row) when loading the changeform.\nb) add the result to each row (just a hidden div with the field-values).\nc) on save, we serialize again (like we do now) and compare the values with the hidden div.\n. see also #96\n. @funkybob: could you add more details please? we\u00b4re not able to reproduce it by what you\u00b4ve written.\n. @funkybob: what version of grappelli are you using? 2.3.8? moreover, why do you define \"pk\" as an autocomplete_lookup_fields (shouldn\u00b4t \"unter\" be the autocomplete)? did you check the serialisation (e.g. with using console.log on the javascript)?\n\nfor debugging, you could add console.log(fields) after:\nhttps://github.com/sehmaschine/django-grappelli/blob/master/grappelli/templates/admin/edit_inline/tabular.html#L265\nwhich should log something in your case ...\n. do you want to try with 2.3.8? because 2.4 is not yet released ... if the problem exists with 2.3.8 it\u00b4s actually a \"bug\" \u2013 with 2.4. it\u00b4s just not finished yet.\n. thanks a lot for checking that \u2013 we\u00b4ll take a look at the 2.4 branch.\n. should work with the 2.4-branch now (the sortable-exclude issue hasn\u00b4t been solved though).\n. closing this in favor of #134 which offers a solution (not implemented with the 2.4-branch yet).\n. totally agree \u2013 will update to 2.3.7 on the weekend (I didn\u00b4t check with 2.5). thanks!\n. see #91\n. see #91\n. well, grappelli 2.4+ won\u00b4t work with django 1.3 anyway (because django introduced some backwards-incompatible changes with the admin-interface). I have to look through all the changes coming with django 1.4, but yes \u2013 if the tags are not used with the django-admin we can remove them. btw: the branch to work on for django 1.4 compatibility is grappelli_2_4 (just in case you wanna add a pull-request).\n. hi,\n\nwe\u00b4re working on it ... but there\u00b4s no schedule yet since we\u00b4re updating\nall CSS to compass.\nI could say we\u00b4re probably done in about 3 weeks, but don\u00b4t take this for\ngranted.\n\nbest,\npatrick\n\n2012/4/16 Simon Heimler <\nreply@reply.github.com\n\n> Hi there,\n> \n> any Idea when Grappelli is ready for Django 1.4?\n> I've tryed the Grappelli 2.4 Branch but it didn't work for me.\n> \n> Greets, Simon\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/sehmaschine/django-grappelli/issues/91#issuecomment-5147860\n. all issues mentioned here are solved with the 2.4-branch.\n. no, you\u00b4re not using the static-tag, do you?\n. I\u00b4m talking about {% static \"...\" %} ... like with the original admin from 1.4\n. you don\u00b4t need to since I\u00b4m also changing the templates ... I\u00b4ll check your other changes and implement them asap.\n. besides \u2013 would you agree that we need to use {% static \"admin/...\" %} instead of {% static \"grappelli/...\" %} and rename the /static/grappelli/ to /static/admin/ ... otherwise we are not able to overwrite the original static-files ... right?\n. looks good, thanks \u2026 we\u00b4ll do it that way.\n. I\u00b4m not sure I can follow ... but I\u00b4ve done some tests with my current grappelli_2_4_branch and most things seem to work fine (besides the multiple sorting on the changelist). so I guess we can take that as a basis.\n. my thoughts ...\nwe have these 2 folders:\n/static/admin/\n/static/grappelli/\n\nthe first folder (/static/admin/) is needed because there\u00b4s hardcoded stuff with the django admin\u00a0expecting files to be found within that folder (which is {% static \"admin/...\" %}).\nwith grappelli, we can use a different static-tag (which is {% static \"grappelli/...\" %}, but only where we\u00b4re able to change the tag (and not for any hardcoded stuff).\n\nI agree that we don\u00b4t need to duplicate files, because collectstatic will find these files anyway. however, since we\u00b4re having at least minor changes within every js, I\u00b4m +1 on duplicating all admin-files.\n. we\u00b4re close.\n. no, sorry \u2013\u00a0we\u00b4re doing this in our spare time and it\u00b4s hard to guess what our customers are up to.\n. same with filters ... check all overlay for closing when\na) clicking somewhere else\nb) ESC\n. with django 1.4/grappelli 2.4, this issue should be solved ... right? because when using collectstatic, the gis-images are there and since ADMIN_MEDIA_PREFIX is deprecated, the path/url to the images should be fine as well. \n. theoretically speaking, the field with the default value should be excluded from the serialization when doing the sorting ... right?\n. because the sortable field reacts to any inputs/changes by a user \u2013\u00a0but a default value is not a changed value ... so why should the sortable field react to that field? am I missing something? do we need to re-define the sortables and if yes, what could a (new) definition be?\n. @funkybob: no, that\u00b4s not an issue. did you define blank=True and null=True for your sortable field? if not, you should do so.\n\nthe example you mentioned (with the 3 fields) should definitely work \u2013 this is something we\u00b4re using for almost every project.\n. I\u00b4ve just tested with jsfiddle and\nvar fields = $(this).find(\"div.td :input[value);\nDOES pick up hidden inputs.\n\n???\n. see http://jsfiddle.net/sehmaschine/Myc29/ ... this could also include file-fields (although I don\u00b4t quite like the syntax with the field-loop).\n. I\u00b4ve never came across hidden inputs within 2 and 4 (at least not inputs which could/should be changed with having an effect on sortables). do you have an example?\n. 1. what do you mean with \"... the hidden inputs at position 2\"? which \"hidden inputs\"?\n2. and I still don\u00b4t understand why you wanna select fields with default values ... yes, it might be the solution for your problem, but theoretically speaking it\u00b4s not a good idea IMHO (because it doesn\u00b4t work with extra-rows).\n\nhowever, you might wanna take a look at #134 ... I\u00b4ve update the jsfiddle in order to work properly with file-fields and default values (hope I didn\u00b4t miss anything).\n. IMO #134 offers a proper solution (codewise, it\u00b4s not perfect but it deals with file-fields and ignores default values).\n. closing this in favor of #134 which offers a solution.\n\nnote: with my last question (nr. 1) I\u00b4ve been asking for examples of \"hidden inputs\" on position 2 ... these inputs currently don\u00b4t exist in my opinion and I still don\u00b4t understand what kind of inputs you\u00b4d like to see there.\n. thanks for the hint \u2013 we\u00b4re working on django 1.4 compatibility!\n. see #91\n. fixed the first issue, but decided to not go for the second one (maybe I don\u00b4t fully understand the benefits).\n. we often define custom change forms with overriding the grappelli change form (e.g. for changing object-tools).\nwhat exactly is not working for you?\n. why would you want to _extend_ the change-form if you need to _override_ it (for all objects)? when you add change_form_base, the same problem occurs with this template, right (if I extend change_form_base)?\n\nI agree that django admin templates aren\u00b4t very customazation friendly, but I\u00b4m not sure we\u00b4re talking about a bad design decision here. I\u00b4m ok with finding a better solution, but adding a _base template (which we need to do for every other template as well) doesn\u00b4t sound sensible to me.\n. I agree with everything you say here (thanks for the explanation). we\u00b4ll discuss that issue and may implement the _base templates.\n. sorry, but our goal with grappelli is to NOT add locales ... IMO we should use the jquery-localization for this one (if that\u00b4s possible). the reason we don\u00b4t add locales with grappelli is that it adds another layer of complexity (using transifex, keeping the locales up-to-date etc). appreciate your effort though.\n. if you download jqueryUI you\u00b4ll find the datepicker-locales ...\n. besides, if you\u00b4re willing to add a transifex-project and manage (!) that project for grappelli-locales, I\u00b4ll think about it.\n. hmm, \"done\" is part of the datepicker, see http://jqueryui.com/demos/datepicker/#buttonbar\n\ntelling from my experience with django-filebrowser: you don\u00b4t wanna do it!\n. closing this for now since different topics have been mentioned. please add a new ticket with a specific description. thanks!\n. thanks. FYI: both trunk and grappelli_2_4 are under development. for production use, please refer to the releases (tags or pypi).\n. can\u00b4t reproduce with either 2_3 and 2_4\n. see #91\n. see #91\n. see #91\n. I think it\u00b4s not possible to allow for several date formats with the jquery-datepicker ... is it?\n. can\u00b4t reproduce \u2013 for me, the typed date has a white background when the calendar is opened.\n. see #91\n. it\u00b4s not because of the tinymce version.\n\nnote to myself: it\u00b4s the onsubmit function with the html-file (pastword.html).\n. is there an english site?\n. thanks \u2013 it looks like a decent app, but without an english documentation ... sorry.\n. hmm, english translation is good ... and I\u00b4d love to get rid of tinymce and I like the redactor-style (the general look & feel is much better compared with tinymce) but: do you really think that editor is already working with a productive environment? I\u00b4ve been playing with the demo and unfortunately it doesn\u00b4t seem mature (e.g. indent/outdent not working, senseless functions like font-color and font-background, no obvious method to change blockformats, no post cleanup, link and image classes missing, strange code like img style=\"cursor: default;\"  ...).\n\na bit too much from my point of view. and I\u00b4m not a fan of tinymce at all \u2013\u00a0but replacing some crap with something else that\u00b4s not really working ... \n. thanks \u2013 good find.\n. you mean the error pops up with jquery-UI? if so, there\u00b4s not much we can do about it ...\n\ndoes it work when you remove jquery-UI?\n. what do you mean with \"add attachment\" resp. \"delete attachment\"?\n. do you mean inlines? there\u00b4s nothing like an \"attachments admin page\", right?\n\nand yes, the add-inline buttons do work with the stable version of grappelli. please reopen the ticket with additional information (e.g. a screenshot) and exactly describe the issue (if it actually is an issue). thx.\n. here\u00b4s on overview of the js: http://readthedocs.org/docs/django-grappelli/en/latest/javascripts.html\n\nbut you don\u00b4t need django- or grappelli-js to use the datepicker \u2013 it\u00b4s jquery-UI.\n\nbesides, please use the google-group for asking questions. this is an issue-tracker. thanks!\n. where do we use function-based generic views with grappelli?\n. oh, right \u2013\u00a0forgot that we added these urls ... thx.\n. no, there\u00b4s currently no effort to collaborate with django-admin-tools (more). we think that it\u00b4s a great project, but there are some design decisions we don\u00b4t agree with. however, it should be easy to add custom menus/widgets/groups/modules (esp. with the DOM-documentation available with grappelli 2.4).\n\nI\u00b4m closing this issue since our philosophy is to keep grappelli as clean and minimal as possible (while extending flexiblity in order to add custom items). please reopen if you think I missed something or didn\u00b4t fully understand your proposal.\n. not sure I\u00b4m able to follow. you\u00b4re talking about 2 different issues, right? first, the \"other plugin\" and second the way we\u00b4re calling functions ...\n. closing this for now \u2013\u00a0please reopen if you have additional details.\n. @parsch: I personally prefer the old action styling (no backgrounds, a bit smaller and generally less intrusive). \n. @parsch: click filter, click filter again (not selecting anything), move mouse away \u2013\u00a0background of filter is black.\n. it serializes file-fields, but we\u00b4re still facing the issue with default values:\nwhen we serialize the row, we don\u00b4t know if a value is a default one or not (and we don\u00b4t have a chance to check that). so, every row with a default value will be serialized and the sortable value will be set ... but that doesn\u00b4t make sense for extra-rows with a default value (because I want this rows to be excluded if no other value than the default one is given).\n\ntherefore, we need to add a field with the initial value counter and onSubmit compare the value of that field with the new serialized value counter.\nUPDATE: instead of a counter we store the serialized row with a hidden-field.\n\none problem still remains:\nif the user changes a default value (e.g. change \"xxx\" to \"yyy\" with input_text_003) the row isn\u00b4t marked as being changed ... so far, that\u00b4s no problem. but if the user now manually deletes the value of the sortable field, the row is missing. this could be solved with using a hidden-field or a readonly-field with sortables.\nUPDATE: this problem is solved with comparing the serialized fields.\n\nbesides: most problems with selectors in the 2.4-branch are results of jquery (1.7.2) changing the behaviour of :input (compared to 1.6.2). that\u00b4s already updated with the latest version of the branch.\n. even better than mine. thanks a lot \u2013 will update the branch today and then we can do some testing.\n. I did some testing and unfortunately, it doesn\u00b4t work with your proposal: the main problem is that form-rows can be removed and the row-index is being updated. so if we store initial values with the row-index (I couldn\u00b4t think of another way), it\u00b4s starting to get complicated.\n\nany ideas?\n. after some additinal testing, it\u00b4s far more complicated: serializing initial values won\u00b4t work, since these \"initial values\" will change after submitting the form. so, if there\u00b4s an error and the page is displayed a 2nd time, the \"initial values\" are different than before ... therefore, we can\u00b4t use them.\n\nthe only chance for this to work is to somehow get the real initial values from django \u2013\u00a0but unfortunately, these values are not there.\n. how did you manage to get the default values? because that's what we actually need. \n\nbesides, we need the values on a per inline form row basis (not for the whole form).\n. using initial values doesn\u00b4t seem a proper (and clean) solution. so I tried something different (see last commit):\nit takes file-fields into account and I\u00b4ve added a setting \"sortable_excludes\" (either list or tuple) in order to define fields which should not have any effect on the ordering. I\u00b4ve done some pretty extensive testing and (so far) it works for all my test cases ...\n\nwhat I don\u00b4t like and/or could be improved:\n\na) the fields selector:\n\n```\nvar fields = $(this).find(\"fieldset :input[value][value!=''][type!=radio][type!=checkbox],input:checked,input[type=file]\") ... \n```\n\nmaybe this can be done easier? note that :input[value] has changed with the latest jquery-version.\n\nb) comparing value and sortable_excludes:\n\n```\nif ($(this).val() && $(this).attr(\"name\") && $.inArray($(this).attr(\"name\").split(\"-\").pop(), sortable_excludes) == -1)\n```\n\nwe need to use \"name\" since there are (custom) widgets (e.g. autocompletes) which add form-fields without the name-attribute (and therefore should be excluded).\n\nc) I didn\u00b4t check for performance. not sure if this is faster/slower compared with the previous solution based on \"serialize\".\n\nfeedback/testing is very much appreciated.\n. any complaints about this solution? otherwise, I\u00b4m going to close this ticket.\n. I\u00b4ve tested quite extensively and it seems to work. closing this for now.\n. a probably better solution is to focus the search-input when closing the related object window.\n. add options.wrapper_search.find(\"input\").focus(); to lookup_id with jquery.grp_autocomplete_m2m.js ... it works but means that the search-field being focussed onload (which is not what\u00b4s needed).\n. fixed\n. no, this is not related to inlines.\n. hmm, works fine for me (tested with fieldsets, tabular and stacked inlines). what do you mean with \"values are not displaying properly\".\n\nnote: with tabular-inlines, the class grp-readonly is misssing (but that\u00b4s just a design issue).\n. you\u00b4re right \u2013\u00a0it now works for me (with multiple fields as well) with the latest commit by parsch.\n. works for me \u2013 do you have an action with an intermediate page?\n\nI\u00b4ve added print request.POST.copy() to my custom action and \"_selected_action\" is there.\n. if I\u00b4m using \"select all\", request.POST.copy() gives me all records (_selected_action is limited to the records on the first page, but that\u00b4s intended behaviour I guess).\n. yes, I\u00b4m on the 2.4-branch.\ndon\u00b4t know why you can\u00b4t assign labels ... but we\u00b4re taking care about that (if you\u00b4re referring to github-issues).\n\nisn\u00b4t there only one \"select all\"? first, I\u00b4m clicking the checkbox on the top left \u2013\u00a0to select all items on the current page, then I\u00b4m using \"select all\" in the footer-area (right beneath the select-field for actions).\n\nplease not that the styling of the footer is not finished yet: e.g., \"select all\" shouldn\u00b4t be visible when loading the page.\n. we\u00b4re going with the django admin behaviour here \u2013\u00a0first select all items on the page, then you get the option to \"select all\". changing the two-step process is another discussion (I\u00b4m ok with the current behaviour, but I don\u00b4t use actions a lot).\n. should be fixed \u2013 please reopen the ticket if you\u00b4re still seeing errors. \n. 1) because it looks more centered (vertically), although it isn\u00b4t.\n2 and 3) hard to argue. to me, the old version looks more balanced/unified.\n\nmoreover, I\u00b4m not sure about the text-shadow with headlines, because of missing repitition.\nand I prefer the slightly bigger padding with form-rows (see 2.3.8).\n. @parsch: dashboard index shows models with font-style: normal, while app index show it bold. \n. @parsch: IMO, .grp-help could have a color like #999.\n. @funkybob: there\u00b4s a problem with hiding rows with inlines. the only attribute we get is field.is_hidden, but we don\u00b4t get line.is_hidden ... therefore, it\u00b4s hard to achieve this. any ideas?\n\nbesides, I\u00b4d consider this a django-bug.\n. This bug should be fixed with Django.\n. even worse with tabular inlines, where the \"X\" (of autocompletes, if given) is being moved to the right.\n. non-form-errors look ok (not sure if we can do any improvement there).\n\nin order to reproduce, the easiest way is to just add the errorlist with the template (search for non_form_errors with stacked.html and tabular.html).\n. field-errors and non-field-errors\n. besides, I\u00b4m not sure if the items should be red\n. any idea how to solve this? just add a 2nd jQuery-namespace?\n. inline.js (and inline.min.js) has never been available with grappelli. and it doesn\u00b4t make sense to include these files, since they won\u00b4t work anyway.\n\nsorry, but I don\u00b4t get the point about FeinCMS: this app is not compatible with grappelli in the first place, right?\n\ntheoretically speaking, I think it\u00b4s a good idea to keep 3rd-party-apps in mind ... on the other hand, we avoid conflicts if we use a distinct grp-namespace for jQuery.\n. that\u00b4s exactly what I\u00b4ve been thinking about ... I\u00b4ll test it.\n. interesting (works for me). prepopulate is not even part of the grappelli-javascripts.\n. @bjudson if collectstatic does not copy the file, there's something wrong with your setup ... that should definitely work. any details are appreciated.\n. django.jQuery is there ... and I\u00b4m not getting any js-errors. are you using the latest version?\n. very strange \u2013 I just checked again and I don\u00b4t get any js errors. I\u00b4ve tested with DEBUG = True (loading the original js) and DEBGU = False (loading the minified grappelli js).\n\nthe distinction between django.jQuery and grp.jQuery shouldn\u00b4t be a problem (this is done by purpose in order to namespace all grappelli javascripts). I don\u00b4t think this can cause the js-errors you\u00b4re getting.\n\nIs grp.jQuery defined? (e.g. testing with the firebug console)\n. thanks \u2013\u00a0I\u00b4ve removed the second media.js.\n. right, we\u00b4ll explain that better ... autocompletes are (currently) alternatives for related/m2m/generic lookups.\n. you\u00b4re using grappelli 2.3.8 instead of the 2.4-branch, right?\n. depends what you want ... master is not compatible with django 1.4 (see documentation).\n. no problem \u2013 we\u00b4re about to release grappelli 2.4 this week (actually, it should have been released last week already).\n. We assume that grappelli-users know how `collectstatic` works.\n. closing this one since it should work with stable/2.4.x ... please reopen the ticket if the problem still exists.\n. @parsch: empty li needs styling\n. I don\u00b4t fully understand your pull-request:\na) the original django templates use a different approach, right?\nb) if we use \"url from future\" and the new url-syntax, why only for a couple of templates (and not all of them)?\n. thanks \u2013 but that doesn\u00b4t really answer my two questions (or I just don\u00b4t get it).\n. Actually, I do have doubts ... because the first file you\u00b4ve changed (delete_selected_confirmation) already throws an error because of \"opts\" ...\n\nand I still don\u00b4t understand why we need \"url from future\" when the original admin interface doesn\u00b4t use it.\n\nsorry for being so sceptical, but your patch doesn\u00b4t seem to be tested.\n. ok. If you send a patch, please use the branch \"stable/2.4.x\" ... thanks! if your patch is tested, we\u00b4ll merge the changes.\n. @michaelmior as said before \u2013 well-tested (!!!) patches are welcome.\n. @michaelmior  please submit a patch against stable/2.4.x ... we\u00b4re about to release a new version within the next couple of days btw.\n. sorry, but I\u00b4m not able to follow \u2013\u00a0what \"a\"-tag are you talking about? which \"JS code\" looks for an \"a\"-tag within the URL? \n\nplease add some details. closing this in the meantime, since it\u00b4s not reproducable with the information given.\n. what do you mean with \"our project main template\"?\n. sorry, I don\u00b4t think I can follow ... you mean the admin interface base-template, right? because grappelli is not supposed to work with anything else than djangos admin interface ... am I missing something?\n. can you send me a screenshot of what you want to achieve?\n\nyou can override that file and add (for example) a top-section ...\n. well, in that case I\u00b4d override base.html ...\n\nI still don\u00b4t fully understand the background of this issue, but (for now) this seems to be a very rare case to me (and therefore, I wouldn\u00b4t support something like that out of the box).\n. did you add the field to your form? it should definitely work with generic relations ...\n. do you see the position-field?\n\nbesides: which version of grappelli and django are you using?\n. it\u00b4s\nsortable_field_name = \"position\"\n\nsee http://django-grappelli.readthedocs.org/en/latest/customization.html#inline-sortables\n\n(please reopen the ticket if it still doesn\u00b4t work)\n. no problem \u2013 seems like a feasible update. however, I don\u00b4t think FeinCMS works with grappelli anway \u2013\u00a0does it?\n. what do you mean with \"the updated tinyMCE\"?\n. you\u00b4re talking about this file, right?\nhttps://github.com/sehmaschine/django-grappelli/blob/stable/2.3.x/grappelli/static/grappelli/tinymce/jscripts/tiny_mce/plugins/paste/pastetext.htm\n. ok \u2013 same plugin.\n. FYI: just released a new version (2.3.9), compatible with django 1.3\n. looks fine to me.\n. sorry ... what do you mean with \"add in the changes\"? they are already added ... the styling is missing for now, but @parsch will update soon.\n. nope, thanks.\n. done (available with 2.4.1).\n. what version of grappelli and filebrowser are you using? we just fixed this issue with the stable-branch ...\n. ok. I\u00b4m closing this since it\u00b4s already fixed. new releases will be available on pypi soon.\n. are you having a screenshot? because I\u00b4m not sure I can follow ... why do you need to scroll if the window size exceeds the popup width? which popup btw? are you talking about add-another?\n. alright, now I see (thanks for the clarification).\n\nI\u00b4m using chrome 21 as well, but I\u00b4m able to see the save-button (no need for scrolling). that being said, the window is too small (about 20 to 40px, I guess). we\u00b4ll take a look at this issue ...\n. @parsch: is this fixed?\n. I\u00b4m having the same setup, but I\u00b4m not able to reproduce this. the file actions.js is being loaded correctly?\n. if this problem still exists with 2.3.9 or 2.4.2, please reopen the ticket. I\u00b4m not able to reproduce this.\n. @DrMeers any idea when/why this happens?\n. @pedrospdc what do you mean with \"couldn\u00b4t handle\"?\n. @DrMeers so you think that 2.3.5 is more compatible with IE8? if so, why?\n. @DrMeers it should already be IE8 compatible (more or less). if you see any issues, please open a new ticket with details. but I\u00b4m not saying that grappelli will ever work perfectly with IE8 (that\u00b4s just not our main goal).\n. grappelli is always developed against the latest official release (which is 1.4.x right now). unfortunately, we don\u00b4t have the resources to always keep up-to-date with djangos master-trunk. therefore, I have to say ... no, django 1.5.x will be supported once it\u00b4s officialy released.\n. if it\u00b4s backwards compatible with 1.4.x, yes. otherwise no (sorry).\n. I would totally support that as well. question is: who\u00b4s going to submit a well\u2013tested patch?\n. can\u00b4t see the screenshot\n. hmm, can\u00b4t reproduce \u2013 looks good with my setup. any details?\n. well, it seems you don\u00b4t have change\u2013permissions!\n. @epicserve: your fix introduces change_url which has been removed with django recently. instead, I\u00b4m going to change the model\u2013list template.\n. the release is already out (2.4.2). just pip upgrade.\n. absolutely \u2013 if it works, we\u00b4ll accept the patch. please patch against stable/2.4.x.\n\nbesides, 2 minutes is a very long time ... how many foreign keys do you have? our test\u2013environment is pretty extensive (esp. with relationships), but I never wait that long (max. 10 seconds with hundreds of inlines).\n. what about this one? https://github.com/yourlabs/django-autocomplete-light \n\nI didn\u00b4t test it ...\n. @BertrandBordage problem with django-ajax-selects: generic relations are missing.\n. I\u00b4m open to patches ... \n. @BertrandBordage I\u00b4ve added your changes to stable/2.4.x and I\u00b4m currently trying to cleanup the code ... can you explain why exactly you\u00b4ve chosen the given functions? e.g., any reason why you\u00b4re working with a function search_term, but without any filtering function (instead the filters are part of get_queryset)? More generally speaking, can you please explain your code ... thx.\n. see #239\n. the latest release is 2.4.1 (pypi).\n2.4.2 is the version of the master\u2013branch (next release, current development version).\nso, this looks fine to me ...\n\nconcerning the js, there shouldn\u00b4t be any difference between 2.4.1 and 2.4.2 \u2013 if you\u00b4re seeing any errors, please open another ticket. thanks.\n. @parsch: please take a look at this. the link to \"password reset\" needs to be styled and of course the reset\u2013form as well.\n. @camilonova pypi will be updated once the next release is due.\n. if django doesn\u00b4t support this, how could we add it (without using the python\u2013part of djangos admin interface)?\n. problem is ... the diff refers to options.py (a file which is not part of grappelli). I\u00b4ll take a closer look, but I don\u00b4t think it\u00b4s possible (although I like to see the feature as well).\n. I think anyone can send a patch \u2013 if you add tests, chances are much better though.\n. closing this ticket for now (because it\u00b4s mainly related to django and not to grappelli), although I\u00b4d love to see this feature.\n. Are you sure you\u00b4ve cleared the cache and you\u00b4re loading the right files?\nbecause I\u00b4m not able to reproduce this (and I\u00b4m pretty sure this bug doesn\u00b4t exist).\n. I\u00b4ve checked again and I\u00b4m not able to reproduce this ... please re\u2013open the ticket if you think it\u00b4s a bug.\n. I\u00b4m using staticpatterns, but I\u00b4m still not able to reproduce this.\n\n@philwo you\u00b4re saying that grappellis jquery.js doesn\u00b4t get loaded. if that\u00b4s the case, there\u00b4s a lot of functionality which doesn\u00b4t work, right (e.g. autocompletes)? basically, not much of the admin will work as expected ... \n. since we\u00b4re about to do a new release, it\u00b4d be nice to solve this issue ... \n1. it seems that STATICFILES_FINDERS is not being used with runserver (I\u00b4m able to reproduce that).\n2. still, I\u00b4m not able to get django override the grappelli files (unless I\u00b4m adding \"django.contrib.admin\" before \"grappelli\" with INSTALLED_APPS).\n\nany additional information is helpful ... thx.\n. @maffacow since I\u00b4ve never been able to reproduce this issue, I need to rely on feedback. so far, I\u00b4m not sure what a \"fix\" could be ... \n. well ... you can debug, find the issue (if it actually exists) and submit a pull\u2013request. that\u00b4s the most straightforward way to solve it.\n. @ulmus that's a good point \u2013 we'll update the docs with that info.\n. @idboehman thanks for the hint, but I'm very certain that GRAPPELLI_INDEX_DASHBOARD is not related to the actions whatsoever. My guess is that this issue is caused by caching (could be browser\u2013cache, could be old .pyc\u2013files).\n. @zzart if you need a symlink there\u00b4s something wrong with your staticfiles setup ... all staticfiles should be found automatically when doing collectstatic.\n\n@tufelkinder djangos built\u2013in jquery is overriden by grappelli (there is no content with jquery.min.js).\n. @grafa but the file /static/admin/js/jquery.js is empty, see\nhttps://github.com/sehmaschine/django-grappelli/blob/master/grappelli/static/admin/js/jquery.js\n\nanother idea \u2013\u00a0did you try running collectstatic with ignoring the original admin\u2013files?\npython manage.py collectstatic --ignore django.contrib.admin\n. @sdillinger well, haven't been able to reproduce this for 2+ years. I'm pretty sure this is not related to grappelli but your server/django setup.\n. @myii Thanks a lot for the research and the very detailed explanation. What you're saying makes sense indeed (still funny that I've never run across this issue with any projects we did).\n. see #791 . @BertrandBordage about the french locale: grappelli doesn\u00b4t include any translations (this all comes with django). the other changes look fine to me ... but why do you want to pull to master (instead of stable/2.4.x)?\n. about the translations: yes, you\u00b4re right \u2013 there are some strings not available with django.contrib.admin. on the other hand, adding translations means using transifex, managing that project et.al. ... but we rather concentrate on improving grappelli (not enough resources to do translations as well).\n. I\u00b4ve fixed the issue with id\u00b4s and autocompletes. we won\u00b4t add translations to grappelli and I\u00b4ve decided to not take action concerning the datepicker\u2013issue (waiting for a cleaner patch for that one). thanks!\n. what is django-autocomplete-light?\n. updated \u2013 please let me know if that works for you.\n. stable/x.x.x > release > master\n. @parsch: what do you think? IMO, we can\u00b4t support every 3rd\u2013party app (not until there\u00b4s an established Frontend\u2013Framework with consistent classes and styles with the vanilla admin theme). on the other hand, adding this one additional style is fine with me ...\n. thx. added to stable/3.4.x and fixed some missing urls.\n. @michaelmior no problem and thanks for the patch.\n. already fixed with stable/3.4.x\n. the \"releases\" section on github front (https://github.com/sehmaschine/django-grappelli) says 2.3.9 is the latest release for 2.3. \n\nthe latest release on pypi is 2.3.9 as well ...\n\nwhat do you mean with \"the Zip button to download an archive for the 2_3 branch\" ... can you give me a link/url?\n. now I see \u2013 you\u00b4re using the \"wrong\" branch. grappelli_2_3 is a dev branch, stable/2.3.x is the right one \u2013\u00a0besides, using pypi is always recommended.\n. you\u00b4re right \u2013 that should be more obvious. I\u00b4ll open a ticket.\n. done\n. please use the google\u2013group for asking questions. this is an issue tracker. thx.\n\nabout your question: it depends on what you mean with \"navigation\" ... grappelli.dashboard adds the ability to use a custom index dashboard (which needs to be defined, see the docs for that).\n. that navigation needs to be customized (we removed it with previous versions of grappelli).\n. well \u2013 I\u00b4d personally use a list (ul) and add it to the header\u2013area.\n. no, I don\u00b4t mind ... but the line you\u00b4re referring to is the same with the django admin interface. not sure what\u00b4s the problem here. do you have an idea?\n. closing this for now. please reopen with more details. thx.\n. first question: how can I reproduce this? my models are never sorted arbitrary.\nsecond: the point with a model\u2013list is to show models _independent_ or their names. what if I want a different ordering? currently, I can order my models with giving them a different position ...\n. sorry, but I still don\u00b4t get it \u2013 can you tell me how I\u00b4m able to reproduce this issue? my models are never being sorted randomly but based on their position.\n. I mean the position within the tuple:\nmodels=('django.contrib.auth.models.User', 'django.contrib.auth.models.Group'),\n\ninstead of:\nmodels=('django.contrib.*',),\n\nIMO, that\u00b4s the point of using a modellist (otherwise, an applist is probably better).\n. is this still an issue?\n. @phretor that\u00b4s strange. I just checked again and both your examples work fine with my setup. are you sure your models are references with e.g. \"academic.publishing.ConferenceArticle\" instead of something like \"academic.publishing.models.ConferenceArticle\"? whatever reason, this should definitely work (and it always has with my projects).\n. When looking at the code at bitbucket, I think you should use academic.publishing.models.ConferenceArticle ... any reason you don\u00b4t use \"models\"?\n\nWhen you check admin.py, you see that the models are imported with\nfrom academic.publishing.models import *\n. @phretor yeah!\n. guess that issue is solved, right? please reopen or add a new issue if you\u00b4re still having problems with sorting models \u2013\u00a0it should work tas explained by phretor above.\n. should already be solved with stable/2.4.x ... new release on pypi coming soon.\n. already solved with stable/3.4.x ... release coming soon.\n. are you sure the styles/templates are properly loaded? because I\u00b4m not able to reproduce that screenshot with IE9 ... that\u00b4s IE8, right?\n. @lvelezsantos what \"problems mentioned above\"? kenricci (who opened the ticket) obviously solved the problem and it was some kind of setup\u2013issue (or mis\u2013installation). so, there\u00b4s nothing we can actually refer to.\n. please add a new ticket with a more detailed description if the problem still exists.\n. I\u00b4ve added your code to stable/2.4.x, though we\u00b4re now having an issue with autocomplete\u2013lookups if nothing is found. I\u00b4ll check that.\n. @BertrandBordage Sorry, I\u00b4m trying to rephrase. I need to know if any of the methods you defined is important for overriding stuff (either for you, personally, or based on your idea of how the classes should work on a purely theoretical level). Let\u00b4s take \"model_in_GET\" ... needed for a specific reason or just a personal decision? Could we distinguish between helper\u2013methods (e.g. model_in_GET) and methods which could/should be overriden (e.g. get_queryset)? IMO, something like public/private functions would help for naming the methods and clarify the behaviour. Do you know what I mean?\n\nBesides, FILTER and SEARCH is not being splitted with autocompletes (filter is part of get_queryset) ... any reason that filter is not a separate method?  \n. fixed with stable/2.4.x\n. @parsch can you take a look at this one?\n. supporting django-mptt is definitely planned, but I need to take a closer look at the possible issues. supporting FeinCMS is not planned though.\n. I\u00b4ve been taking a look at django\u2013mptt. Integration with Grappelli is easy (we just need to add 2 simple templates), but it\u00b4ll never look nice because of this:\n\nhttps://github.com/django-mptt/django-mptt/blob/master/mptt/templatetags/mptt_admin.py#L102\n\nhardcoded margin with python-code. WTF!\n. there should be a class instead of the hardcoded padding. if the guys over at django\u2013mptt will change this, integration with grappelli is easy.\n. Here\u00b4s a workaround: see https://gist.github.com/4452240\n\nI\u00b4m closing this ticket for now. If the guys doing django\u2013mptt will remove the paddings from python code, we\u00b4ll support mptt.\n. did you check the tinymce setup? did you add/remove valid elements to show the player?\n\nplease refer to the tinymce docs in order to resolve this issue. I\u00b4m pretty sure it\u00b4s not related to grappelli ... feel free to reopen this ticket (with additional information) if you think it\u00b4s a grappelli\u2013related bug.\n. change the background with css\nadd a logo with using a custom header\noverriding grappelli\u2013templates works exactly like overriding django\u2013templates (of course, it depends on the position of your template\u2013loaders).\n. which version of grappelli are you using?\n. thx, I\u00b4ll look into that.\n. Thanks \u2013 that looks good. Any reason you wanna merge to master instead of stable/2.4.x?\n. Sorry for being so skeptical, but what are all these commits? Is it possible you\u00b4re just sending your own changes? Otherwise I can still cherry\u2013pick your updates ...\n. awesome \u2013 thx a lot.\n. that\u00b4s already solved ... see stable/2.4.x\n. Thanks for the effort, but we don\u00b4t support translations with grappelli (if we do, we need to use Transifex and that\u00b4s just too much work for a couple of translatable lines). Another reason we don\u00b4t add TinyMCE language files is that we plan to use another editor as soon as possible ... sorry!\n. Where did you find translations?\nI personally would like to switch to Redactor, but the editor still produces strange HTML. I never liked CKEditor, but the current theme looks really nice. Main problem is: With every update of TinyMCE, we need to update all the plugins because of the look & feel.\n. Alright \u2013 I forgot that we have these translations. In that case, I\u00b4m going to add your translations (of course). Though it\u00b4d be helpful if you patch against stable/2.4.x (not master).\n\nUnfortunately, Redactor currently just looks impressive \u2013 but it behaves pretty annoying.\n. Yes. The only problem I see is when the changelist is paginated. How would you solve that? How can I move an item from page 2 to page 1?\n. IMO we should not add a feature if it doesn\u00b4t fully work. I can already hear clients calling asking how to reorder with pagination activated. However, I do like the feature and if we find a decent solution, I\u00b4m definitely +1. From my point of view, the limitation is serious since you\u00b4re not able to re\u2013position an element from one page to another ...\n. I just realized there\u00b4s a setting list_max_show_all since Django 1.4 (see https://docs.djangoproject.com/en/1.4/ref/contrib/admin/#django.contrib.admin.ModelAdmin.list_max_show_all). I guess it only makes sense to reorder a manageable amount of items. And with the given option, one could still click on \"Show All\" in order to rearrange items which haven previously been on different pages.\n\nTherefore, I\u00b4m accepting a patch (please use stable/2.4.x for pull\u2013requests).\nBut the behaviour needs to be similar with inlines (no extra js with ModelAdmin).\n. @brejoc Are you working on this one? Otherwise, I'm going to close the ticket.\n. fixed with stable/2.4.x\n. closing this since no useful explanation is given.\n. this is an issue tracker ... please use the google\u2013group for asking questions. thx.\n. you\u00b4re working with django 1.6 while django 1.5 is not yet released?\n. alright, I see. is your pull\u2013request backwards\u2013compatible?\n. fixed with stable/2.4.x\n. how is this solved with the original admin interface? do they use get_short_name?\n\nand: please patch against stable/2.4.x (not master).\n. Thanks for looking into that.\n. that change is not backwards\u2013compatible with 1.4 ...\n. should be solved with stable/2.4.x\n. No, there currently isn\u00b4t (though it should be a matter of minutes setting up grappelli with an existing django project). However, we might add a live demo soon.\n. we decided that this is out of scope. besides, there's no need (at least not for us) to advertise the project.\n. I see your point ... but while you don't have the time to research the benefits, we don't have the time to setup and maintain a demo site (that said, I guess researching the benefits is less time-consuming).\n. Not sure about that one since it's fairly easy to use grappelli with an existing project. So you just need to setup a project and install grappelli.\n\nHowever, you could use the model available with grappelli/tests in order to work on this feature. If you send a PR I'm happy to review.\n. @doganmeh a grid-based look & feel is definitely not a standard feature (django doesn't care at all about the UI).\n. shouldn\u00b4t that be:\n\ntry:\n    from django.conf.urls.defaults import *\nexcept ImportError:\n    from django.conf.urls import *\n\notherwise, it\u00b4s backwards\u2013incompatible, right? \n. fixed with stable/2.4.x\n. say I\u00b4m using \"name__icontains\" for my autocomplete lookups and I\u00b4m having numerous db\u2013rows with the same name ... why should I only see \"distinct\" values?\n. thx. fixed with stable/2.4.x\n. Thanks for pointing this out. Mobile is definitely in discussion, though part of a bigger strategy on how we\u00b4ll develop Grappelli in the future. Currently we\u00b4re trying to fix as many limitations (caused by the original admin interface) as possible with Grappelli. However, this is tedious and time\u2013consuming.\n\nOur idea is to implement a frontend framework with the admin interface based on a fixed and updated foundation (talking about django.contrib.admin). Once the main issues are solved, we can get rid of all workarounds and invest more time for important issues like mobile browsers. Until then, we don\u00b4t have the ressources to do that work.\n\nThat being said, we do accept patches ... \n. thanks \u2013 we\u00b4ll take a look.\n. see #274\n. fixed with stable/2.4.x ... somehow it seems that GitHub doesn\u00b4t accept commits with \"fixed #xxx\" anymore.\n. that needs to be added to model_list as well, right?\n. in order to reproduce this \u2013\u00a0where do I actually add the code you\u00b4ve mentioned above? models, admin, ...?\n. just tested \u2013 IMO the trans templatetag should also be used with model.title (with app_list) and child.title (with model_list). otherwise, there\u00b4s no translation. on the other hand, I might not fully understand what you\u00b4re actually trying to translate (app title, model title, both)?\n. there\u00b4s a difference: with using the dashboard, you can easily translate the app\u2013name with the dashboard title (which is not possible when using the standard template). so I\u00b4m not sure this change has any benefits ... does it?\n\nbesides, when translating the app\u2013name with the dashboard template, why not also translate the model names?\n. Now I\u00b4ve got it \u2013 sorry! And thanks for the explanation.\n. @parsch fixed?\n. fixed with stable/2.4.x\n. you\u00b4re talking about a textfield (not a foreign key), right?\n\nbesides \u2013 why are you using mark_safe? this could obviously break the layout depending on the content of your textfield.\n. @parsch any idea?\n. did you check stable/2.4.x ... isn\u00b4t that already solved?\nsecond question: that\u00b4s a non\u2013backwards compatible change, right? so this is related to django 1.6?\n. there should be a button \"X\" on the right\u2013hand side of each row (the checkbox is hidden). do you have the permissions to delete the items?\n. what do you mean with \"delete the row\"? what if you just made a mistake (e.g. clicking the wrong row)?\n. 1. let\u00b4s say you hide the row (but that was a mistake). what do you do? reload the page?\n2. hiding the row suggests that the record is being deleted immediately (and that you don\u00b4t need to press \"save\").\n. you\u00b4re kidding, right?\n. @parsch what do you think? I\u00b4d go with the current solution and I don\u00b4t see the need to change this.\n. closing this for now. IMO the proposed solution has no benefits.\n. please send your model (the relevant part) and the admin definition. thx.\n. There\u00b4s not attribute columns with the Dashboard (see the grappelli docs for more details). Use the attribute columns with the dashboard\u2013module.\n. since grappelli is only a skin, that\u00b4s more of a django issue, right?\n. Alright, closing this for now.\n. @parsch you might want to look at this. I personally don\u00b4t like using the resize\u2013icon for showing the pagebreak.\n. what exactly is the usecase for text\u2013align and font\u2013colors? this is better done with using classes, isn\u00b4t it? I know we could just add this ... on the other hand, I don\u00b4t think there\u00b4s a good reason these buttons should ever (ever!) be present with a text editor.\n\nhowever, I\u00b4m open to conviction.\n. see #214\n. thx. could you patch against stable/2.4.x or is it too complicated? otherwise I\u00b4m trying to cherry\u2013pick your changes.\n. I might be missing something, but what exactly is the \"problem\" you\u00b4ve mentioned? Using an integer field for an ID is the way to go, right? Should we change the docs?\n. @paramburu yes, you are right \u2013\u00a0we\u00b4ll take a look.\n\n@parsch might be easy to solve with adding input.vTextField and textarea.vLargeTextField to the fields we need to hide via css.\n. seems to work with charfields, does not work with textareas.\n. @parsch works now, but after selecting an item from a pop\u2013up the screen jumps to top ... with fk and m2m as well. this didn\u00b4t happen before.\n. works for me. fixed with stable/2.4.x\n. thanks, but that\u00b4s the totally wrong branch. please user either stable/2.4.x or master.\n. fixed in stable/2.4.x\n. thx, good point. with the \"new version of Django\" you\u00b4re referring to what exactly? upcoming 1.5 or 1.6 (dev)?\n. How exactly is this related to Grappelli?\n. @Hedde it has to be the other way round \u2013\u00a0FeinCMS needs to be based on Grappelli if both apps should work nicely with each other.\n. fixed with stable/2.4.x\n. fixed with stable/2.4.x\n. Hard to say \u2013\u00a0I suggest using print\u2013statements with the related lookup view and/or the js, trying to find out why the app_label and model_name is missing. Looks weird and shouldn't happen.\n. just a guess \u2013 is it possible that the term \"condition\" causes the error. did you try to rename the field?\n\nbesides, could you send me the code to my email address (incl. models.py, admin.py)?\n. thanks for clarifying.\n. fixed with stable/2.4.x\n. fixed with stable/2.4.x\n. The google\u2013group ist a better place to ask questions. However, if this should happen it needs to be the other way round ... Django\u2013CMS has to be based on Grappelli, using the right classes and DOM (see Grappellis DOM docs).\n. fixed with stable/2.4.x\n. thanks for the patch ... fixed with stable/2.4.x\n. already fixed.\n. which version of django, which version of grappelli? does it work with raw\u2013id\u2013fields?\n. ok, thanks \u2013\u00a0I'll take a look. if you have any additional info, please let me know.\n. just tested this and it works fine for me.\n. yes, just to be sure. and please add your admin config. besides, do you get any js errors?\n. did you try with grappelli 2.4.4 (the latest version)?\n. closing this since the last comment is 3 months old and additional information is missing.\n. already solved with stable/2.4.x\n. already solved with stable/2.4.x \u2013\u00a0we'll release a new version soon.\n. if we look at djangos setup.py it should be:\n\n'Programming Language :: Python',\n'Programming Language :: Python :: 2.6',\n'Programming Language :: Python :: 2.7',\n'Programming Language :: Python :: 3.2',\n'Programming Language :: Python :: 3.3',\n\nright?\n. already committed. thanks for the hint.\n. please reopen with a useful description of the problem \u2013 you\u00b4re saying that \"grappelli is not compatible with django 1.5\", but that\u00b4s wrong. please add comprehensible details. thank you!\n. it seems that you didn\u00b4t follow the installation steps:\nhttps://django-grappelli.readthedocs.org/en/2.4.4/quickstart.html\n\nthere\u00b4s definitely no bug here! please use the grappelli google\u2013group for asking questions ... thanks!\n. you are right \u2013\u00a0we didn\u00b4t yet find a way to translate the datepicker.\n. the django datepicker is extremely hard to style and we're using jqueryUI anway. that being said, it _should_ (theoretically) be possible to get the defined language and change the datepickers language \u2013 it's definitely possible with using a custom base template.\n\nI'm sorry ... I know this is not a satisfying answer. but it's already a lot of work dealing with all the strange code of the original interface.\n. the same is true for autocomplete generic lookups when content_type is defined with radio_fields ... right?\n. fixed with stable/2.4.x (merged to master)\n. sorry, but grappelli\u2013safe is not developed or maintained by us ... I guess you need to talk to the people doing mezzanine.\n. the .editorconfig looks good to me although I'd go with spaces (instead of tabs) for scss\u2013files as well \u2014 I just did a quick check and could not find any files with tabs ...\n\na pull request is very much appreciated.\n. I'm sorry, but I'm not able to merge this pull\u2013request ... \n. it's a merging issue because of the updates we made recently.\n. usually it's the latest development branch we're using (e.g. stable/2.4.x), but currently you can use master since everything's merged.\n. did you send the new pull\u2013request?\n. closing this for now, since there doesn't seem to be a usable pull\u2013request. please open a new issue if you're working on this one.\n. @jaap3 thanks for the heads up. I'll take a look and let you know if it works (or not).\n. please use the google\u2013group for asking questions. thank you.\n. Is that also the case with Django 1.5 or only with django\u2013master (because we only support official django releases).\n. please use the google\u2013groups for asking questions. If you think this is a bug with grappelli, please reopen the ticket with a detailed explanation on what's wrong. thx.\n. @BertrandBordage it works fine with our testcases and the class should be there (see https://github.com/sehmaschine/django-grappelli/blob/master/grappelli/static/grappelli/js/jquery.grp_related_fk.js#L22). are you sure you're having the right version installed?\n. thx. I've removed the URLs and changed the hosting mode.\n. I guess there's something wrong with your setup on the position\u2013field, because I'm not able to reproduce this. can you send your models and modeladmins?\n. closing this \u2013 please reopen with detailed information if you think this is a bug.\n. good point.\n. looking at the code (at github) there does not seem to be any .DS_store files ... ???\n. so how do I remove these files then?\n. tinymce does not include that css\u2013file, so we'll remove it from the template.\n. why do you add a template to /admin/constance/ instead of /constance/ ... that looks a bit strange to me ... ???\n. I see ... not a good idea to put the templates there, but not much we can do about that I guess. will merge soon. thanks for the pull\u2013request.\n. @hellysmile just checked your template and it does not seem to follow the way grappelli templates are built ... I'm trying to fix this (but it might take a while).\n. Why don't you add related_label to the model containing the ContentType reference?\n. Your PageObject does not have a name nor an app_label, therefore\n\n```\nreturn force_text(\"%s:%s\" % (self.name, self.app_label))\n```\n\ndoes not return anything ... \n. Did you try to debug in order to see what _exactly_ is happening? I assume you need to use content_object (or content, in your case), but I didn\u00b4t test that obviously.\n. There might be a misunderstanding: related_label refers to how selected items are being displayed (e.g. within an autocomplete\u2013field or a raw\u2013id\u2013field). It does not refer to the content\u2013type dropdown (changing that dropdown is not related to grappelli).\n. what exactly do you mean? activating the admin for related lookups?\n. generally speaking, we don't duplicate the django\u2013docs. this is needed for the original admin to work (not only for grappelli), so I'm not sure we should add this ... we have to assume people now how to deal with the original admin when using grappelli.\n. I see your point ... however, it's stated clearly with the docs that autocompletes are an alternative for related lookups. And you need to register both models with every kind of relationship when using django.contrib.admin.\n\nThat being said, I'll add a short note with the docs.\n. Did you add the module to your Dashboard?\n. yes, you should do that \u2013\u00a0it's in the docs (see grappelli.dashboard).\n. I though you closed it ... I just closed the ticket ... ???\n. I see \u2013 thanks for the pull\u2013request (reopened).\n. that's a backwards\u2013incompatible change with django 1.6, right?\n. Thanks. We won't fix this with the upcoming release (since we only support official releases of Django). However, if someone adds a backwards\u2013compatible patch, I'm fine with implementing this.\n. that should already be solved, see\nhttps://github.com/sehmaschine/django-grappelli/blob/master/grappelli/templates/admin/edit_inline/stacked.html#L45\n\nIf you still see this issue, please reopen the ticket.\n. @BertrandBordage That's a good point. I personally don't see inlines \"moving\", but that's probably because my admin pages are loading pretty fast. Theoretically speaking, I like the suggested solution because we get rid of the JS. But I'm not sure about the actual implementation with something like `fieldsets_and_inlines_order = ('f', 'i', 'i')` ...  it's just not obvious what happens and which 'i' I'm referring to. Any ideas on how this could be improved?\n. are you interested in updating your patch in order to support a more verbose kind of rearrangement?\nI'm thinking about something like this:\n\n```\n(\"Some Fieldset\", {\n    \"classes\": (\"grp-collapse grp-open\",),\n    \"fields\": (\"whatever\",)\n}),\n(\"Image Inlines\", {\"inline\": \"ImagesInline\"),\n(\"Another Fieldset\", {\n    \"classes\": (\"grp-collapse grp-open\",),\n    \"fields\": (\"whatever\",)\n}),\n```\n. There is an example with the docs. You need a class `placeholder` and a 2nd class which matches the class of the inline-group (which depends on your fieldsets). If you have an inline `images` the class would probably be `images-group`.\r\n\r\nBesides, please use the google-group for asking questions (it\u00b4s more likely to get an answer there).. http://skin.tinymce.com\n. you need to use the grp\u2013prefix, so it's e.g. grp-collapse ... but please use the google-group for asking questions.\n. grappelli respects limit_choices_to which works fine with our testcases. if you think there's a bug, please reopen this ticket with additional details (models, ModelAdmin ... grappelli/django version etc etc). if this is a question (I'm actually not sure about it), please use the google\u2013group.\n. I'm sorry if I'm not able to follow ... so we're not talking about limit_choices_to but only queryset, right?\n. I'm +1 on fixing this \u2013 can you support an example (models.py, ModelAdmin, ...)?\n. Nope ... code snippets are fine (just to get the basic idea in order to construct a testcase). As simple as possible!\n. alright, thanks a lot. What I tried is to restrict the class RelateLookup (line 51), because this is what AutocompleteLookup relies on, but it does not seem to work. Will dig in deeper tomorrow (time to go to bed around here).\n. I'm actually not sure how to solve this. Theoretically speaking, we need to check for a method queryset, defined with ModelAdmin. Therefore, we have to find the registered ModelAdmin first ... and in order to get the ModelAdmin, we need to know which AdminSite we're currently using (because we cannot assume the model is registered with `django.contrib.admin`).\n1. Find current `AdminSite`\n2. check `_registry` for the model\n3. This gives us the correct `ModelAdmin`\n4. check if queryset is defined (if not, use the default manager)\n\nAny help is appreciated.\n. This should work ... the only issue left is figuring out the current `AdminSite` ...\n\n```\ntry:\n    # See if there is a custom admin queryset\n    return admin_site._registry[self.model].queryset(self.request)\nexcept:\n    # If not, go with the default manager\n    return self.model._default_manager.all()\n```\n. @rcooke with my testcase, if I'm using `model.queryset(request)` it does not work ... because `model` has no idea about `ModelAdmin` (but the custom queryset is defined with `ModelAdmin`). Besides, `ModelAdmin` is registered with a specific admin site (not necessarily `django.contrib.admin`) and that's why I try to get the current admin site. Are your sure that `model.queryset(request` works with your setup? I'm really surprised about that ...\n. IMO, we cannot assume people use the default admin site. I think the only way to find out which is the current admin site is via URLs ... and it shouldn't matter if a model is registered with several sites (because each `ModelAdmin` could have a different custom queryset). From my point of view, the second problem is exactly the same as the first one. Once we have the current admin site, we also have the right queryset.\n. That's what I'm talking about ... we need to check the URL (request.path) and the admin site associated with that specific URL (no GET parameters involved here). Unfortunately, with `current_app` (see django.contrib.admin), we only get the `name` of the admin site.\n. Question is, how do we get this list of admin sites ... because I didn't find a way except manually adding a list of admin sites to settings (which is not a good solution).\n. @rcooke are you still working on this issue?\n. see #403 \n. @rockymeza sorry ... thought this is backwards\u2013incompatible.\n. Sorry, but I'm not able to follow that pull request. Your 2nd paragraph says \"The \"<\" character shouldn't ever be in the label\" ... to me, that sounds like you're seeing an \"<\" character, but it doesn't show up on your screenshots. Am I missing something?\n. now I see \u2013 thanks for the clarification. I'll update later today.\n. please use the google\u2013group for asking questions. this is an issue tracker! thanks.\n. my thoughts on the mentioned ideas:\n- replacing icons with a decent webfont is a good idea\n- concerning the dashboard: we'll probably change the header\u2013area a bit with the next major release of grappelli. so your dashboard screenshot is something we currently cannot consider.\n- notifications etc: see previous. we should add the styles for adding this, but we definitely won't add the actual implementation.\n- sidebar: the alternate sidebar should already be possible with the current grappelli\u2013styles.\n- changelist: not sure what this screenshot should tell us \u2013 looks like a standard changelist to me.\n- +1 for adding tabs.\n. please use the google\u2013group for asking questions! this is an ISSUE TRACKER!!!\n. please check the contribution guidelines and reopen the issue \u2013\u00a0thanks.\n. thanks for the patch \u2013\u00a0looks good to me. can you add another usecase besides the one mentioned? because I'm not sure if we should add this if it only covers this (very rare) case.\n. alright \u2013\u00a0I'm currently +1, but let me think about this for another day ;-)\n. let's do this. a pull\u2013request is highly appreciated (including documentation updates).\n. @arski There's gonna be another grappelli\u2013release pretty soon (just some minor fixes). If you send a pull\u2013request, I'll add it to the release.\n. thanks for the patch. IMO this should be done with overriding the template (see django\u2013docs on how to customize admin templates), because we just can't support every single usecase and overriding templates is an easy and straightforward solution. \n. any idea on how to make that update backwards compatible?\n. that\u00b4s fine, thanks.\n. smart_bytes is not available with django1.4\n. That was just a reminder for myself to update the grappelli docs, saying that at least django 1.4.2 is required. Since we have supported Django 1.4+ so far, I need to mention that. But of course you are right that 1.4.0 and 1.4.1 should not be used anymore.\n. @parsch clicking on a datepicker throws a 404:\n\"NetworkError: 404 NOT FOUND - .../static/grappelli/jquery/ui/css/custom-theme/images/ui-bg_glass_0_CEE9F2_1x400.png\"\n. Thx for the pull\u2013request. When using this code I'm getting Invalid filter: 'admin_urlquote' ... which version of django did you use?\n. see #395\n. that has already been solved with 2.4.7.\nbesides, your pull\u2013request misses the stacked inlines.\n\nplease reopen this ticket if I'm wrong ...\n. did you test without grappelli? because that js comes with django. \n. hi bryan,\n\nunfortunately, that image you posted is not visible \u2013 I'm getting a 404.\n\nregards,\npatrick\n. that\u00b4s strange. just a guess: if you add an app with `INSTALLED_APPS`, did you add _exactly_ the same path with your dashboard and your admin registration? e.g., you could have `www.blog` with `INSTALLED_APPS` and you could just add `blog` when you register your admin model and you could again add `www.blog` with the dashboard ... that might not work.\n. you do have the necessary permissions for music, right?\n\nyou could try this (just to see if it is working):\n\n```\nmodels=('components.merchandise.music.models.XXX',),\n```\n\nother than that, I really don't have an idea \u2013\u00a0I usually use the exact same code. of course, you could try to debug with dashboard.modules.AppList (a simple print statement should be sufficient).\n. @bryanveloso ok, so I did a couple of tests with either `AppList` and `ModelList` \u2014 it doesn't matter if I use several single models or if I use `components.merchandise.*` or `components.merchandise.music.*`, it all works. the only issue I had is when the app added with dashboard is named differently than with INSTALLED_APP \u2014 other than that I haven't been able to reproduce this.\n. closing this for now \u2013 if you think this is a bug, please reopen with additional information.\n. Thanks for the pull\u2013request.\n\nI'm having a couple of issues here:\n\n1) If I add an Inline and then drag it to another position, TinyMCE seems to react strange (I'm not able to insert text anymore).\n2) When having an Inline with just a textarea and a position\u2013field, the position is not being updated, because line 245 of stacked.html (var fields=...) does not include TinyMCE.\n\nAny ideas how to solve this?\n. closing this since the PR is pretty old ... please add a new PR if you still work on this issue.\n. closing this, because the authority templates are quite a mess.\n. of course, using sessions does not work \u2013 instead we use the cache framework. because the key has to be the path to the current site, this is limited to showing _one_ additional user, but I guess that's fine for now. seeing another user viewing/editing the site should be enough of a warning. we just want to make sure an editor knows about another editor currently online.\n. https://github.com/django/django/commit/389892aae595b86c4be28c43e3312d76a68a0173\n. @bryanveloso I've added a quick fix. But please note that grappelli is not yet compatible with Django 1.6 \u2014 there's a lot of backwards-incompatible changes (esp. with admin templates). Therefore, we need to do a new major release. Quickly looking through all the necessary changes, I doubt that this will happen within the next couple of weeks. \n. @bryanveloso yes \u2026 there's only two things you need to check: a) the new approach for defining \"view on site\" doesn't work with the current version of grappelli and b) preserve_filters doesn't work as well.\n. fixed with master\n. see #396 \n. @parsch please take a look at this one (needs to be styled).\n. @brenouchoa absolutely. coming today!\n. @dmrz thanks a lot for the pull\u2013request, but please use branch stable/2.5.x for everything related to Django 1.6.\n. @lzanuz thanks!\n. @lzanuz and \u2026 thanks again!\n. @lzanuz thanks \u2026 the template changes are already solved (see branch stable/2.5.x). concerning the widgets, I've opened a separate ticket.\n. all 1.6 compatibility issues should now be solved with branch stable/2.5.x (pypi release coming later today)\n. https://docs.djangoproject.com/en/dev/ref/forms/widgets/#numberinput\nhttps://docs.djangoproject.com/en/dev/ref/forms/widgets/#emailinput\nhttps://docs.djangoproject.com/en/dev/ref/forms/widgets/#urlinput\n. @parsch moreover, with a changelist and list\u2013editables, the URLField is wrapped with p.url which adds margins at the top/bottom (these margins/paddings need to be removed).\n. @pnovotnak because you mentioned mezzanine: please note that mezzanine relies on a pretty outdated version of grappelli and they are using a separate branch.\n. @tdruez there is no help_text with the django templates, is there?\n. I see \u2013 thanks for the clarification.\n. @rcooke filters are not handled by grappelli, but by django. we don't customise anything here.\n. @pauloxnet did you do any tests? does it work? can you add a testcase?\n. @pauloxnet I'm sorry, but I won't merge this without tests ... but thanks for the patch anyway.\n. how does that test relate to your pull-request? I think we need a modeladmin with a custom queryset, don't we? In my opinion, there needs to be a new (or at least extended) testcase.\n\nbesides, your pull-reqeust does not work if models are registered with several admin sites, does it? when you take a look at my first comment, you'll see that my proposal includes adding the model_admin to the ajax-call. that's because (in my opinion) we cannot rely on registry to provide us with the correct modeladmin.\n. a) yes, modeladmin has get_queryset but we don't have testcases for that option. that's exactly what I'm talking about ... we need tests to cover that option. of course, these tests are currently not necessary since we don't support custom querysets (but a pull-request should include the tests).\nb) just by looking at the code, I think your pull-request does not work with several admin sites ... but I'm not sure since we don't have a testcase.\n. see https://gist.github.com/sehmaschine/41747752e56e2723368a409feb3cbd5c\r\n\r\nthe changes are in lines 21, 76-81 and 96-98.\r\n\r\nIt\u00b4s actually a pretty easy workaround, but (in my opinion) it does not work with multiple/custom admin sites since we only check the contrib.admin registry. I'm not sure how we could solve this and I'm currently unable to add a testcase. As said before, if someone comes up with a working and tested solution, I'm more than happy to merge it.\r\n. sorry, but I'm not able to follow \u2026 what exactly is the bug/issue?\n. should it? if yes, why?\n\nI still don't see what the bug/issue is \u2026 is this limited to your personal/custom usecase or valid for anybody?\n. let me put it this way: why do you use an onclick attribute anyway? isn't it better to use something like .bind(\"click\", \u2026).\n. hmm, alright \u2013 since it won't break anything I'll update. thanks for reporting.\n. grappelli 2.4.8 (compatible with django 1.5) does not include firstof from future, grappelli 2.5.0 (compatible with django 1.6) does.\n. that\u00b4s another issue now, right? could you please open a new ticket?\n\nthe README doesn\u00b4t need to be updated since grappelli 2.4.8 is supposed to work with django 1.4 and 1.5.\n. I'm not able to reproduce this issue. {% now \"Z\" %} should work with django 1.4/1.5 and 1.6, although django only uses it with the admin interface from 1.7 \u2026 however, this should not throw an error.\n\nare you able to add any details?\n. @foxx alright, thanks for clarifying.\n. sorry, but I'm not able to follow \u2026 what exactly is the bug?\n\nwe have recently updated jquery/jquery-ui but decided to keep the old files (js, css) because people might have used these files for customizations.\n. now I see \u2013 thanks for clarifying. that's a bug indeed.\n. what exactly is the \"improvement\"?\n\nI didn't check order_with_respect_to for quite a while, but it has been there from the very beginning \u2013 but it actually never worked correctly (or at least the way it's supposed to work). Besides, you can just use \"_order\" as your sortable_field \u2026 so I'm not sure what exactly we should change with grappelli.\n\nI'm closing this because of the missing details. That being said, it might still be a good idea \u2013 but maybe I'm just not understanding it right now. So please feel free to reopen this ticket with additional explanations.\n. what do you mean with \"under the search button\"?\n. same problem as #411 \n. @lzanuz From my point of view, what you\u00b4re saying is only true when applying more than one filter. With a single filter applied, the current version is faster (because you only need one click instead of an additional submit-button). Therefore, I'm not sure if your suggestion improves the overall usability. \n. it seems that you don't have a request defined with your context \u2026 is that possible? can you try to debug and check why line 219 with grp_tags throws an error?\n. and \u2026 did you run the tests?\n. can you check why there's no request\u2013var?\n. just to get this right \u2014 everything besides SWITCH_USER does work, right?\n. please add an example (code!) to your proposal. thanks.\n. it should be possible to overwrite the jQuery function (I guess). and I think that\u00b4s a much better solution, because we can't add blocks to everything. IMO that usecase is too personal to change the code \u2026 but I might rethink the issue if overwriting the js\u2013functions doesn\u00b4t work.\n. what you're experiencing here is exactly what @parsch described \u2026 it does not make sense to add the block to every stacked inline. therefore, we decided to not implement this. if you find another solution which works for single inlines, please feel free to reopen this ticket.\n. the policy depends on the version of the docs \u2013 with a new version (e.g. 2.5.x) previous updates are only mentioned with the major version. as far as I know, that's how Django does it as well \u2026 if I'm wrong, please feel free to reopen this ticket.\n. there have been changes with jquery handling _renderItem \u2026 maybe we've missed something, but it works with my testcases (multiple autocompletes as well). \n\nyou might wanna try this one:\nhttp://stackoverflow.com/questions/9513251/cannot-set-property-renderitem-of-undefined-jquery-ui-autocomplete-with-html\n\nwhen looking on our code (e.g. jquery.grp_autocomplete_fk.js, line 114) it looks strange indeed. we first use `.data(\"ui-autocomplete\")` and later on `.data( \"item.autocomplete\", item )` ...\n. did you check all staticfiles are loaded correctly (eg the new versions of jquery & jqueryui)? \n. Please use the Google\u2013Group for asking questions. If you think this is a bug, please add specific details. Thank you!\n. +1 if this is a replacement (or add-on) for drag/drop. If one needs to resort with manually editing positions, every number (position) should be possible (not only negative numbers). On the other hand, it might be confusing when an item jumps to another position.\n\nI have the feeling that this usecase is better solved with a custom js (or maybe with overriding the models save-method and rearranging the items).\n\nFeel free to reopen the ticket ...\n. Can't open the screenshot \u2026 is it the same as #405 \u2026 ?\n\nBesides, you did not mention which version of Grappelli you're using.\n. Alright, so that's actually solved already.\n. yes, it's marked as closed with a commit \u2026 isn't it solved?\n. I see \u2014 2.5.1 will probably be released early next week.\n. that\u00b4s already solved with stable/2.5.x\n. you only fix line 135 with your patch \u2014 but you're suggesting to fix line 63 as well, right?\n. we decided to delete the outdated jquery files instead of adding the images. thanks for the patch.\n. which version of django & grappelli?\n. that should be solved with branch stable 2.5.x \u2026 any chance you can give that a try?\n. sorry, you are right \u2013 this issue is not yet solved!\n. that\u00b4s not a grappelli issue: seems that your staticfiles are not loaded correctly (or maybe collectstatic didn\u00b4t work as expected). I'm pretty sure this is similar to #214 \u2026 if I missed something, please reopen this ticket with additional information (js-errors, debug statemenets etc.).\n. do you use grappelli.dashboard or not?\n. that\u00b4s two different issues in my opinion: we could update index.html in order to work with adminplus (a patch would be nice).\n\non the other hand, I'm not sure we should add adminplus with grappelli.dashboard \u2013 because you can easily add links (or even custom views) with a dashboard. so that doesn't make sense from my point of view \u2026\n\nbefore we change the code someone should test with and without the dashboard.\n. the whole point of the custom dashboard is to not show anything automatically.\n. absolutely: can you test adding adminplus to the dashboard?\n. I mean adding the custom views to a custom dashboard (with grappelli.dashboard) \u2014 what you proposed before with \"semi-automatically\".\n. there\u00b4s no sidebar block, but that\u00b4s not the point IMO. why do you believe code changes are necessary? context should include the custom list and you should be able to loop the items \u2026 well, you might need to dive into dashboards a bit.\n. I'm pretty sure any app using a custom index page will fail with grappelli, because our template structure differs \u2026 no matter if we add a sidebar block or not.\n. Your patch is fine, because you are using the grp-classes (e.g. grp-module).\n\nIf we just add a sidebar-block and another 3rd-party app extends that block without the grp-classes, there's no compatibility in the first place. That being said, I'm ok with adding that block \u2013 because most of the time, people probably use the custom dashboard anyway.\n. that template you mention hopefully doesn't work with grappelli \u2014 inline-styles, tables \u2026 wow!!!\n. the patch should work \u2013 I'll check that (probably next week).\n. you mean using Bootstrap instead of a custom theme?\n. we won\u00b4t using bootstrap for a couple of reasons (we discussed that already \u2013 see issues and google-group for details).\n. that\u00b4s because django-import-export uses another dom-structure for their templates. you need to overwrite their template with grappellis dom.\n. Please take a look at the django docs \u2013 there it\u00b4s explained how to overwrite templates.\n. thx \u2013 looks good to me.\n. @funkybob just a thought: isn't it better to use the ModelAdmins get_queryset method instead of providing a specific model manager?\n. see #403 \u2026 we need to add the modeladmin to the lookup call.\n. @rcooke did you take a look at the code with issue #403?\n. closing this in favour of #403 \n. sorry, but I do not understand this issue \u2026 why would wou want to hide the related lookup when you just defined it with your modeladmin?\n. I'm closing this since it does not seem to be an \"issue\" (please use the google group for asking questions). Feel free to reopen the ticket if I missed something.\n. good point. except keyerror should be nested (I don\u00b4t like the nesting as well, but it works).\n\nconsidering the queryset: what if we return qs = model.objects.none() if no search_fields are defined? of course, this leads to \"0 results\" with the autocomplete instead of an error message. but from my point of view, that\u00b4s ok. what do you think?\n. @titovanton-com what exactly is the issue here? you don\u00b4t need to set extra to zero in order to work with sortable inlines \u2026 that\u00b4s definitely working. please add more details if you think it\u00b4s a bug.\n. ok \u2013 so there are 2 issues: first, please open a new ticket for change list sortables. second, please add details about the actual bug you\u00b4re talking about \u2013 what you\u00b4re saying is currently not reproducable. I'm closing this for now since there are mixed issues here.\n\nbesides, please take a look at the contribution guidelines. thanks!\n. instead of changing the management command, I decided to add a note to the docs \u2026 since the location depends on where manage.py is being stored (related to your project directory).\n. @pauloxnet what exactly do you mean with filter/exclude? is this related to #403?\n. I see. that\u00b4s exactly #403, right? because this behaviour should also apply to related lookups (using the search icon, for example).\n. I'm closing this in favour of #403. If you think it\u00b4s a different issue, please reopen this ticket with an additional explanation.\n. you need to define autocomplets with your ModelAdmin, see http://django-grappelli.readthedocs.org/en/latest/customization.html#autocomplete-lookups\n\nbesides, please use the google group for asking questions \u2026 this is an issue tracker.\n. it _does_ work with the changelist \u2026 did you try?\n. please resend the code in a readable format.\n. uncomment list_editable \u2014 because you want to edit the field, right?\n. yes, it is a requirement \u2026\n\nyou did not overwrite anything (css, templates)?\ncan you send a screenshot of your changelist?\nany js errors?\n. jquery.min.map is not part of grappelli \u2026 the question is: why is this file being loaded with your setup?\n. Sorry \u2013 I don\u00b4t have time to offer that kind of support. Please try to find out what\u00b4s the issue \u2026 autocompletes are definitely working on the changelist (I just douple-checked with different browsers).\n\nI'm closing this ticket for now. If you find something, feel free to reopen.\n. I don\u00b4t think the python-package is an issue (I might be wrong though).\n\nWhat I would do:\n1. check if raw_id_fields are working with your changelist (that\u00b4s pure django, not related to grappelli).\n2. check if related-lookups (grappelli) are working.\n\nI would use Firefox or Safari for testing. And always check for js-errors.\n. seems to be a django issue, right? how is this related to grappelli?\n. please use the google\u2013group for asking questions (see contribution guidelines). thank you!\n. I'm not able to reproduce this \u2013 please add the necessary details (see contribution guidelines).\n. @gone https://github.com/sehmaschine/django-grappelli/blob/master/CONTRIBUTING.rst\n\nan example app probably won\u00b4t help, since this \"issue\" does not exist (I\u00b4m pretty sure about that). so, the question is: why does it exist with your setup? I guess that the grappelli staticfiles are not served correctly.\n. @gone the behaviour with grappelli isn\u00b4t any different from the django admin, right? does it make sense to update the docs if there\u00b4s already an explanation with the django docs?\n. @jschneier no timeline. if you wanna submit a patch, I'll merge it asap.\n. I'm still not able to reproduce this, so I'm closing this issue. Please reopen with additional details about `TEMPLATE_STRING_IF_INVALID`. According to the django docs, you should not assume the admin templates to be rendered correctly, if `TEMPLATE_STRING_IF_INVALID` is set to anything other than an empty string.\n. what I don\u00b4t get \u2026 you define `'fk': [['enterprise']],`, but `enterprise` is not within `list_display` \u2026 am I missing something?\n. @ingodjango can you do me a favour and try to replace that line with\n\n`.find(\"input[name^='\" + prefix + \"'][name$='-\" + this + \"']\")`\n\nthere\u00b4s now an additional \"-\" with checking the name attribute.\nplease let me know if that works.\n. Thanks \u2013 I\u00b4ll change that and commit asap.\n. solved with branch stable/2.5.x \u2013 new release soon.\n. thanks for the patch. how can I reproduce this bug?\n. I'm not able to reproduce the bug ... every add-url ends with a slash and my autocomplete work fine with add pages \u2026 ???\n. @deleted the js you mentioned resolves the href-attribute given with a relation (it\u00b4s not resolving the URL). And I\u00b4m not able to find a link with an additional \"add\" ... how did you get that?\n. @deleted autocomplete uses the links given with a relation-field (fk, m2m, ...) \u2013 you should see these links with the source-code. in my opinion, a relation-field always uses /appname/modelname/ and never ends with an /add/. the question remains: how can I reproduce this?\n. alright \u2013 I'm closing this for now. please reopen with details on how to reproduce this issue \u2013 no github repo needed, just simple infos like \"go to an add view\", \"use fk-autocomplete\" etc.\n. that's a good idea \u2013 thanks for the patch.\n. @blueyed is there an issue with the original template/styles or is it just with your custom template/styles?\n. fixed with stable/2.5.x\n. @MDamien no \u2013 master does not support 1.7 (if it works with 1.7, that\u00b4s not intended). if you need a branch in order to sumit patches for 1.7, please let me know.\n. @blueyed are these changes backwards-compatible?\n. @blueyed the branch is dev/2.6.x ... I don't think it makes sense to jump from 2.5 to 2.7 just because of the django version.\n. @HiddenFox grappelli 2.5.7 is NOT compatible with django 1.8.\n. @HiddenFox come on ... https://github.com/sehmaschine/django-grappelli#releases\n. it doesn\u00b4t make sense to patch against master, if it\u00b4s a backwards-incompatible change. this is only related to django 1.7, right?\n. @blueyed You're right \u2013 I assumed you wanna merge this right now.\n. master is always targeting the latest stable release (see docs). there are actually 2 stable branches for different django-versions \u2013 IMO, it\u00b4s hard to follow another one (and just too much effort for us).\n\nbesides, merging is always the better option ... but that probably requires another patch once we target django 1.7.\n\nthe plan is to release another version with bugfixes and then start working on 1.7 (in about 3-4 weeks hopefully).\n. @blueyed I'm not able to reproduce this error ... \n. @blueyed urls are being loaded. but I don\u00b4t understand how your next 2 questions are related to the topic ... in other words: what do I need to do in order to reproduce this error? do I need to use a custom user model?\n. still not able to reproduce this!\n. closing this since I've never been able to reproduce it ... please reopen with additional details if this error still exists.\n. I can't imagine a single request, but I'm open for ideas/patches. Besides, I only see _one_ performance issue with what you describing (instead of two).\n. closing this since there's not been a pull-request so far\n. 1 \u2013 that's already the case: select via keyboard, enter does not submit the form.\n2 \u2013 you are talking about M2M-autocompletes, right?\n3 \u2013 again, this is only about M2M-autocompletes, right?\n. 2 & 3: I guess it\u00b4s a thin line between a visually minimal and clear interface and showing every option available. I tend to agree with your proposal ... on the other hand, we don\u00b4t wanna have a cluttered interface (thinking about a distinctive block for each item with an additional X is overdone IMO). But I see your point and we\u00b4ll discuss that.\n\n@parsch what\u00b4s your opinion?\n. you assume that the model is registered with admin.site ... but that's not necessarily true if we use a custom admin site ... right? so your patch only works with non custom sites, or do I miss something?\n. closing this since the PR is very old ... if you still work on this issue and have a good solution, please send a new PR.\n. what version of django/grappelli are you using? did you run the tests?\n\nbtw: I just tested this and it works fine for me. when looking at the code in grappelli.js, I don't see any potential bugs ... can you please add some details?\n. well ... as stated with the docs, autocomplete-fields need to be raw-id-fields ... ???\n. why do you think its insecure? the admin is only used by \"trusted editors\" anyway ... so having access to the admin itself is a much higher risk than adding the model structure, don't you agree?\n\nbesides, please use the google-group for asking questions ;-)\n. I don't agree that this is a security risk ... that being said, it's always better to limit the exposed information. So if you (or someone else) comes up with a patch, I'm happy to review that.\n. which section are you talking about? do you mean the page \"home\" when logging in at djangosuit/admin/?\n. besides \u2013 questions should usually be posted to the google-group, not the issue-tracker. that way, chances are much higher that other people read it and you might get an answer.\n. when is self.model = None? second, shouldn\u00b4t this exception be handled better than just using \"except\"?\n. thanks for the patch. the problem is that you are using styles which are not designed to fit your purpose (the success and error classes are for messages, not modules). besides, I'm not sure if this is better done with a custom view instead of a dashboard module (because the usecase is very rare in my opinion).\n. closing this for now since no further comment has been posted.\n. because your commit targets master and I'm working with the stable/... branches. not sure if it's possible to cherry-pick from another branch (I never did that).\n. ok \u2013 thanks for the hint (hub looks good).\n. you say that the form does not validate ... what exactly is the error you get? I'm ignoring the issue with prepoulated fields for now since that\u00b4s a different one (which we should take care of once the initial issue is solved).\n. wait ... just a guess: try to remove the default value for your ordering field or use sortable_exluces (see http://django-grappelli.readthedocs.org/en/latest/customization.html#sortable-excludes).\n. the sortable_exludes should refer to the position-field (not title or slug) \u2013 you want to exclude the field which has a value/default.\nsecond, are you sure you removed the default value (from the database)?\n\nif you have 3 fields within an extra-row and one field has a value (e.g. a default value), then we assume that this row needs to be saved (hence the error messages). if the row does not have any values, there won't be an error message. you could try check the js (adding some console logs) in order to exactly figure out what\u00b4s happening.\n\nplease post any (javascript) errors you find so we can reproduce this \u2013 because currently it's not reproducible and I'm pretty sure it is not a bug.\n. `sortable_excludes` is exactly what you described: combining default values with extra rows. because the js which defines the ordering field looks if there are values within each row \u2013 if so, a number is assigned. the fields within `sortable_excludes` are excluded from this calculation (you usually want to exclude all fields with default values).\n\nunfortunately, there is currently no other way since django doesn't tell us anything about the field values (e.g. giving us a json for each row).\n\nif that works, do you mind opening another ticket for the issue with the slug-field not being populated?\n. alright \u2013 I'm closing this for now. please reopen if the issue still exists with sortable_excludes.\n. which css-classes did you use for the collapsibles? besides, collapsibles also work with `TabularInline` (just the header, of course).\n. Not exactly ... the docs first mentions `InlineModelAdmin` (which includes both Stacked- and TabularInline). Additionaly, you have the `inline_classes` with StackedInline. The docs are fine from my point of view.\n\nWith the actual implementation, you need to use a tuple (or list), not a string. Second, `inline_classes` are only available with StackedInline (because there are no collapsible headers with Tabulars, so there's nothing which could actually be collapsed).\n\nWith Tabulars, you only need `classes`. I don't see a bug here \u2013 if you find one, please check the js for any errors and post it here.\n. I see your point concerning the documentation and we'll add additional examples for collapsible inline groups.\n. there are autocompletes with grappelli (see docs).\n\nbesides, please use the google-group for asking questions (this is an issue tracker).\n. thanks for the hint ... grappelli-filters looks useful indeed.\n. fixed with 300927fd7a207e556be87fa74125f48e02716570\n. please use the google-group for asking questions \u2013 if you think this is a bug, please add useful information in order to reproduce it. thank you!\n. fixed with dev/2.6.x\n. I see your point \u2013 on the other hand, these apps do add elements to the DOM which are not compatible with grappelli anway (e.g. admin-enhancers related links which are hardcoded images with a fixed width/height). So we solve one problem in order to face another one? Not sure about that ...\n. Agreed. We'll check if it's possible to add the original classnames as well (I'm pretty sure it is).\n. @blueyed is it only `.form-row` and `#container` we need?\n. @parsch what do you think about this issue? should we use the original ids/classnames as well? probably a good idea for compatibility reasons with other packages. on the other hand, if those packages rely on the original ids/classnames, they are probably not compatible with grappelli anyway. that said, blueyed mentioned that a non-optimal solution is better than none. I'd say it depends on a) how much work it is (maintenance included) and b) if it's going to be messy with all these different ids/classnames in the end.\n. We could also state that we do not add original classnames and any 3rd-party apps which target grappelli have to use our classes instead. That's (at least) a clear distinction (though I can see the drawbacks).\n. The Mixin is a good idea \u2013 will do some tests.\n. we still need to check this last commit because of hiding the row with stacked inlines \u2013 that's a bit complicated since django doesn't provide the information with the fieldline.\n. see fe0acf4db425a25264474ea8134661705c795f2e\n. did you try with a current checkout of dev/2.6.x?\n. will take a look at your approach. besides, master is not compatible with 1.7!\n. @adaptivdesign do you use the most recent version (there have been some commits yesterday).\n. I think using `_to_field` is the better approach, so I'll go with that one. thanks for looking into that!\n. fixed with f6f146ee51aa89f5e68179ab43588cba78de425c\n. I can see the function with grappelli.min.js ... ???\n. ah, thanks for clarifying. fixed with 6f58813fadac98720da96e3f63851d9ee987fe2a\n. should be solved with dev/2.6.x (not sure why you tried to merge with master). please reopen if the issue still exists.\n. thanks for the patch. one important issue with inlines is that the ordering is preserved in case of errors somewhere within the form (not necessarily with the inlines). did you check that with your patch? just by looking at the code, I don't think this will work.\n. closing this because no answer has been given.\n. For how, I'm not able to reproduce this. Reopen the ticket with additional details (if this is a bug indeed).\n. see https://github.com/sehmaschine/django-grappelli/blob/master/docs/contributing.rst ... is that ok?\n. not a bad idea. the first contributing-file is automatically shown with github when adding an issue \u2013 the second one is part of the documentation. maybe we should integrate the whole \"how to add a ticket section\" with the docs and just link from the github-contrib-file to the documentation.\n. @SalahAdDin exactly like the original admin interface (we don't change anything about popups).\n. @SalahAdDin a) check the django code b) use the django google-group c) use the grappelli google-group. this is an issue tracker!\n. the branch which includes compatibility with django 1.7 is dev/2.6.x \u2013 can you try again with that one please?\n. this might be a stupid question, but did you test that? because I don't think that the grappelli settings are available as variables within a template.\n. Closing this as wontfix \u2013 if anyone uses django-smuggler, please add a pull-request.\n. yes\n. did you check that with our 1.7 compatible branch (dev/2.6.x)?\n. I'm not sure what you mean, but it's the same with djangos admin templates:\nhttps://github.com/django/django/blob/master/django/contrib/admin/templates/admin/base_site.html\n\nPlease reopen with additional details, if you think this is a bug ... I currently don't see why it should be one.\n. @LegoStormtroopr you are right \u2013 thanks for checking that. @parsch can you take a look at that?\n. ... which versions (django/grappelli)? any custom js/templates?\n\nhttps://github.com/sehmaschine/django-grappelli/blob/master/CONTRIBUTING.rst\n. @dlcerva @volksman did you register the related object with the same admin-site? I'm not able to reproduce this (I only get a 404 if the related model is not registered).\n. maybe this is a django bug? https://code.djangoproject.com/ticket/23431\n. I'm not exactly sure why the \"_to_field\" is there in the first place, but it's used with the django admin as well (of course, there's no autocompletes). We could just remove it from the lookup query, but I don't know if that might lead to other issues.\n. @volksman thanks. I've used your patch (I didn't update related.py since one might have _to_field with custom templates) and minified the js. should be solved (hopefully).\n. we did not, since the issue has been closed ... the problem with the original ticket is that the versions don't match (grappelli 2.6.x is not compatible with django 1.6).\n. @soujiro86 IMO that's overdone. if we add the requirements to the setup-file, django is being updated if you install the wrong grappelli version. I think that the requirements are thoroughly listed in different places and it's fairly easy to update django yourself. any objections?\n. should already be fixed with the master branch. can you give that a try?\n. there is a binding for django.jQuery, see\nhttps://github.com/sehmaschine/django-grappelli/blob/master/grappelli/static/grappelli/js/grappelli.js#L12\n. not sure if this is still an issue since no further comments have been made ... please reopen with additional details if you think this is a bug.\n. I see your point ... but why do you want to install grappelli.dashboard as well as admin_tools.dashboard?\n. updated with master (I hope that fix works).\n. fixed\n. sorry, but I don't understand what this is about. \n. looks good \u2013 I'll do some tests and merge this asap. thanks for the patch!\n. @mpasternak some issues here:\n\na) LANGUAGE_CODE is always set, isn't it? so the \"if LANGUAGE_CODE\" doesn't really make sense in my opinion.\nb) the default value for LANGUAGE_CODE is \"en-us\", but there's not datepicker language file with that ending. we'll always get a 404 with that one.\nc) if USE_I18N is False, the admin is not being translated. so we should check that setting as well, right?\n. sorry \u2013 just to get the idea right: you are not translating the datepicker with \"en-us\", but you try to translate the datepicker with every other language. did you check the compatibility between the django language codes and the datepicker files for other languages?\n. @mpasternak I've given this another try, but ... when you look at the django example with \"de_AT\" which is represented as \"de-at\" with the frontend, no such datepicker file exists which leads to a 404. Besides, the same is true with \"pt_BR\" (because the jquery UI file contains uppercase characters).\n. I prefer to have the locale files with grappelli \u2013 but only if we don't need to rename the files (because renaming makes every jQuery update more difficult than necessary).\n. I'm with @camilonova here, because there doesn't seem to be a clean solution. Stay with en and let people take care about translations (it's pretty easy anyway).\n. Closing this issue. please refer to #577 for the 500 ... other than that, we decided to not include the translation files because of the issues mentioned before. thanks everyone for participating and thanks for the thoughts/patches. I'm sorry that we are not able to include this ... but there doesn't seem to be a straightforward and maintainable solution.\n. no, it does not explain itself. first, please add versions (see https://github.com/sehmaschine/django-grappelli/blob/master/CONTRIBUTING.rst). second, which content is not being loaded and why? are you sure this is a grappelli-issue?\n. did you try to navigate to a static-file directly (e.g. with adding the path to the browsers address bar)? if that doesn't work, it is not related to grappelli.\n. closing this since no further details are given. not a grappelli related issue in my opinion.\n. solved with stable/2.5.x\n. No\n. @volksman @funkybob yes, it should be the other way round in order to allow overriding the static files. I  can't remember why that's in the docs, so I'm going to remove it.\n. are you sure that the app-loading mechanism with haystack is fine?\nthe lookup error is correct in that it says \"grappelli doesn't have a dashboard model\", because it's actually the app \"grappelli.dashboard\" which has the model.\n\ncan you debug a bit more and try to find out what causes that error?\n. line 41 of haystack breaks with grappelli:\nhttps://github.com/toastdriven/django-haystack/blob/master/haystack/utils/app_loading.py#L41\n\nI'm not sure why they are trying to call get_model here, but I guess that's a bug with haystack. If I'm not mistaken, haystack assumes that every installed app has a model, but that's not necessarily the case.\n. I suggest talking to the people doing haystack, because that problem might occur with other apps as well.\n. Closing this for now. Please note that we'll remove TinyMCE with the next major release.\n. you could add a custom js (overwrite the template). other than that, I don't see a solution. besides, I'm pretty sure that there are more issues when it comes to using grappelli with FeinCMS.\n. I would like to see that as well, but it's too much effort in my opinion.\n. that is a useful patch indeed. thanks!\n. @gkuhn1 one question: shouldn't change be triggered with M2Ms in case of removing values as well?\n. @epicserve just tested with a fresh setup (django 1.7, grappelli 2.6.3) and I'm not able to reproduce this. all autocompletes (fk, m2m, generic) look fine.\n. the length doesn't matter with my testcase. what browser are you using?\n. we're not on yosemite yet. can you do me a favour and just try with another browser (cause it might be an issue with chrome) and tell me if that works or not.\n. @epicserve are you sure your setup is correct? I could reproduce your error with defining an m2m-field with both related_lookups and autocomplete_lookups. But it doesn't seem to be a bug with grappelli. The placeholder is only used with related lookups (but not with autocompletes).\n. sure. check the django documentation on this:\nhttps://docs.djangoproject.com/en/dev/ref/contrib/admin/#django.contrib.admin.InlineModelAdmin.extra\n. The \"easiest\" way to achieve this is probably to overwrite the js (/admin/actions.js). Other than that, I don't really see a way to handle this.\n. @parsch what do you think?\n. did you add the grappelli urls?\n. since you get this error it's probably much easier for you to track a possible bug ... could you try to debug that issue?\n. @eandersons thanks for looking into that \u2013 I think I've found a solution.\n. @camilonova will be part of the next pypi release. thank you for the patch.\n. @camilonova within the next two weeks.\n. sorry ... lots of other stuff to do. Hope I'll find the time to add that update soon.\n. can't think of a way to achieve this (seems quite complicated, esp. with inlines).\n\nbesides, please use the google-group for asking questions.\n. grappelli 2.6 is not compatible with django 1.6.\n\nas far as I know, nested inlines are currently not possible with django \u2013 and it's not related to grappelli.\n. usually, you do not copy the folder at all but install with pip instead (so grappelli is part of your virtual envinronment and not your project).\n\nother than that, grappelli is an ordinary django app \u2013 so please refer to the django docs on how to install applications.\n. grappelli has to be before django.contrib.admin with INSTALLED_APPS. besides, please use the google-group for asking questions (this is an issue tracker).\n. how should we be able to reproduce this? grappelli version? django version? model? model-admin? any js errors?\n\nplease re-open with all necessary details.\n. sorry, we decided to not include translation files for jQuery UI (we'll remove existing files as well).\n. already solved, see https://github.com/sehmaschine/django-grappelli/commit/7e0847ad6093daa6f9d96bc653af60f8948121cd\n. just tested \u2013 works fine with my setup. you need to add django.contrib.admindocs to your INSTALLED_APPS after grappelli.\n\nIf you think this is a bug, please try to debug and re-open this issue adding some details.\n. thanks for looking into this. it's strange though that the docs work with my setup.\n. @edwinlunando great. thank you!\n. https://github.com/sehmaschine/django-grappelli/tree/stable/2.5.x\n. see https://github.com/sehmaschine/django-grappelli/issues/559\n. which grappelli version, which django version?\n. base.htm, line 86:\n{% firstof user.get_short_name user.get_username %}\n\nso you say that isn't working for your case? any chance to debug this issue?\n. can't reproduce ... models are being sorted fine even without verbose_name/verbose_name_plural with my test case. more details?\n. ok ... finally got it.\n. I currently don't see any performance improvements ... the main issue is that we need to do a request for each and every autocomplete (because the functionality is not built-in with django and the necessary items are not available with an ordinary change form).\n. I don't think pagination is possible (though that is a django issue).\n. IMO django should give us the object representation, but it currently doesn't. If we have the title (for example), we don't need to use an ajax-call when loading the page. I don't see a workaround unless django adds the necessary elements ... but they probably won't.\n. this should already be solved ... which version of grappelli are you using?\n. According to the django docs, you should not assume the admin templates to be rendered correctly, if TEMPLATE_STRING_IF_INVALID is set to anything other than an empty string.\n\nTherefore, what exactly is the issue here?\n. that may be true, but it's a django design decision that admin doesn't have to work if that string is not empty. however, if you're able to submit a patch I'll give it a review (please reopen this issue if you wanna take on that work).\n. @mpasternak I'm -1 on supporting django-compressor out of the box. We should try to limit any dependencies and it's pretty straightforward to get django-compressor up and running (well ... besides the mentioned error with translation files).\n. @msamoylov Sorry, can't follow ...\n. @msamoylov We'll remove ui localization ... see #528 ... https://github.com/sehmaschine/django-grappelli/pull/528#issuecomment-77523683\n. @msamoylov Let's keep this issue for reference (other people might look for this error message as well). Will do the update within the next couple of days.\n. this is either not easy to solve or I am missing something. first, I'm not able to reproduce this (both collectstatic and compress works fine with my setup). second (and probably more important), there is no file ui.datepicker-en-us.js with jquery/i18n.\n. No 'compress' template tags found in templates.\n. what I don't get here: why would compress look for ui.datepicker-en-us.js since that file is never being referenced within a termplate (as mentioned before, that file doesn't even exist with jqueryUI).\n. I'm about to add a new release, but I would like this issue to be solved before. So please let me know if there's any additional information. \n. which commit exactly? the localized calendar has not been commited IMO.\n. strange for me as well ... lets wait for another reply and see if someone might have worked with your branch instead of master/stable, because that would explain the issues. and that would also explain why I have never been able to reproduce this bug.\n\nI wanna be sure about this before pushing another version to pypi.\n. I'm closing this since that is not an issue with the currently available branches IMO. Please reopen (with additional details) if you don't think this is solved.\n. are you aware that we fire the lookup-call twice when adding this behaviour?\n. closing this for now since it does not fully work. please send a new PR if you still work on this issue. besides, the \"focus\" is necessary in order for the autocompletes to work.\n. did you define an app_label within your app?\n\nthe proposed patch is not the right way to solve this \u2013 but I actually doubt that we're talking about a bug here.\n. besides, which django version are you using?\n. Can you please send your INSTALLED_APPS, your URLs, the k2 model and k2 modeladmin (gist is preferred instead of pasting it here).\n. your URLs look a bit strange to me ... both common/k2 start with`url(r'^',`. other than that, it looks ok to me. \n\nadditional question: you don't have apps defined, have you? see https://docs.djangoproject.com/en/1.7/ref/applications/\n. Closing this since I'm pretty sure it's not a bug (besides, the mentioned functionality is covered with testcases).\n. Good point. I'm actually not quite sure how to solve this. I just tried with not splitting the term (line 139 in related.py) and it works as expected.\nI don't remember why we decided to split the term. It doesn't seem to make much sense (but I might be missing something).\n. Unfortunately, that's currently not possible. But it would be a fine improvement. Any idea on a good implementation?\n. The search-link is generated with Django (not Grappelli) by using raw-id fields. That's the link we use for autocompletes as well.\n\nThat being said, issue #403 is somehow similar in terms of retrieving ModelAdmin with the frontend. Generally speaking, I think ModelAdmin is the class to look at \u2013 we should try to define the lookup queryset with ModelAdmin instead of relying on `autocomplete_search_fields` (or maybe combine both setups).\n. Sorry, but I'm not able to follow ... subclassing the widget is bound to a specific field (if I'm using M2Ms I need to subclass a different widget). That seems a bit strange ... or I just don't get it.\n. closing this for now since there hasn't been any updates in a while now.\n. No worries, I just didn\u00b4t have the time yet.\n. interesting ... we just changed that because of a pull request (see #579). what python version are you using?\n. I'm not able to reproduce this ... I'm using Grappelli 2.6.4 and Django 1.7.\n\nverbose_name = u\"Dergi \u0130\u00e7erikleri\"\nverbose_name_plural = u\"Dergi \u0130\u00e7erikleri\"\n\nworks fine.\n. @tatterdemalion @twopac @Seleznev-nvkz @robslotboom ... can anybody give me a hint on how to reproduce this with django 1.7 and grappelli 2.6.4?\n. @Seleznev-nvkz thanks, but I don't get an error. works fine with my setup (python 2.7.3, django 1.7, grappelli 2.6.4)\n. alright ... I finally could reproduce this. using \"unicode\" doesn't make sense since python3 uses \"str\".\n\nmy suggestion is to change line 113 of utils.py to:\npattern_items.sort(key=lambda x: str(x[0]._meta.verbose_name_plural.encode('utf-8')))\n\nmaybe someone can test this as well and give some feedback. from my point of view, it's a clean solution and it should work with python2 and python3.\n. That's because Grappelli is not yet compatible with Django 1.8.\n. Please try with stable/2.7.x.\n. Please reopen this ticket if the issue still exists. \n. @jieter I'll add a new branch and then let you know (probably tomorrow).\n. please use branch dev/2.7.x instead of master for compatibility with django 1.8\n. Thanks a lot for looking into that. I'll check this issue once we work on compatibility with Django 1.8.\n. @ngzhian There's a new branch dev/2.7.x in order to work on compatibility with Django 1.8.\n. @ngzhian With branch stable/2.7.x (and dev/2.7.x) the related object functionality should be fine. For now, we didn't implement the new \"edit\" feature (we'll do that once all other bugs are resolved). Please give it a try and let me know if there are still issues.\n. closing this since no further feedback has been given (the edit feature is another issue anyway).\n. please use branch dev/2.7.x instead of master for compatibility with django 1.8\n. True. Grappelli is not yet compatible with Django 1.8.\n. closing this since no details are given.\n. please use branch dev/2.7.x instead of master for compatibility with django 1.8\n. should be solved with the mentioned branch. please reopen if the issue still exists.\n. dev/2.7.x is only working with Django 1.8 (it doesn't have to be backwards compatible because there are other versions of grappelli which work with older versions of django).\n. that's much appreciated!\n. Should work now. I'll add a note about adding `grappelli.dashboard` after `django.contrib.contenttypes` to INSTALLED_APPS.\n. Closing this for now since all warnings should be gone (with stable/2.7.x). Please reopen if the issue still exists.\n. see #590 \n. which versions (django/grappelli)?\n. Note: Grappelli is not yet compatible with Django 1.8.\n. see #593 \n. same here ... I'm not able to follow this.\n. closing this since no further details are given. please add a new pull-request with additional information.\n. I'm currently taking a look. Unfortunately, I'm not able to merge this since some stuff is missing with RelatedObjetcLookups.js.\n. should be solved with dev/2.7.x and stable/2.7.x ... please reopen if the issue still exists.\n. versions please!!!\n. and which django version???\n. it's fixed (see my commit above)!\n. Sorry, I don't get it ... you want to add `<li>` to a template without having a surrounding `<ul>`?\n. I'm not sure it answers my question ... so you actually wanna add list-elements without having a list, right? Isn't that weird?\n. @alex1989 sorry for the delay. happy with the fix?\n. Closing this since it should be fixed. Please reopen if the issue still exists.\n. should work with stable/2.7.x ... please reopen if the issue still exists.\n. that would be nice indeed. does django-admin-sortable work with grappelli? do we just need to change the styles?\n. I'm having a raw-id-field with tabular inlines ... I do get the edit link with the field. The same field within the changeform and no edit link is given. Can someone please explain how this \"feature\" is supposed to work, because I just don't seem to get it!\n. it would be considered ... a consistent implementation is a requirement though (see my first comment).\n. please reopen the tickets with adding versions (django, grappelli).\n. Please add a description to this pull-request. I'm not able to reproduce this issue (I actually don't know what the issue is in the first place). Autocomplete works fine for me.\n. sorry, but that seems to be out of scope. besides, shouldn't that be a django issue instead of a grappelli issue?\n\nIMHO the filter_horizontal widget should be removed completely.\n. Did you add a ModelAdmin for ContentType?\n. closing this since no further details are given.\n. this is already fixed.\n. you are right.\n. this is already fixed.\n. @oelium cannot reproduce. please open a new ticket and add some details (django.utils.importlib is not available with related.py).\n. there is no django.contrib.admin.util in related.py\n. wrong grappelli version, I guess:\nhttps://github.com/sehmaschine/django-grappelli/blob/master/grappelli/views/related.py#L17\n. fixed with stable/2.7.x\n. are you sure that this is a grappelli issue?\n. Please use the Google-Group for asking questions (hint: add Django/Grappelli versions). If you think this is a bug, please reopen this ticket and add some debugging details.\n. @michael-fairfly do you know how that fix is related to this ticket? because the pull-request is about the reversion template, your ticket doesn't mention reversion.\n. alright, thanks for the clarification.\n. @mmarksnippety this pull-request is empty. \n. @nemesisdesign which version of grappelli are you targeting?\n. @nemesisdesign thanks for the clarification.\n. just merging pull requests ... will happen today.\n. Could you please add an example so I'm able to reproduce this issue with my setup?\n. true ... but that's just the template documentation, so not a major issue here. we'll take a look.\n. closing this since nor further details are given. please reopen if this issue still exists.\n. instead of trying to improve `get_app_label` ... isn't it better to generate the correct link in the first place?\n. I see. \n. what happens if you deactivate grappelli? do you get a different result?\n. can you try to find out what's causing this? because I'm not able to reproduce it.\n. Please use the google-group for asking questions. Thank you!\n\nBesides: there is a whole lot of answers to this question already (because it is not related to grappelli).\n. search for extending django admin templates (not related to grappelli). you can add custom css with your model admin definition or you can overwrite base.html and add your css there.\n\nhttps://docs.djangoproject.com/en/1.8/ref/contrib/admin/#modeladmin-asset-definitions\nhttps://docs.djangoproject.com/en/dev/ref/contrib/admin/#overriding-admin-templates\n. Thanks \u2013 I'll take a look at this one. Adding checks is a good idea anyway.\n\nI don't quite get your comment on adding the tests though.\n. `python manage.py test grappelli`\n. where's the commit?\n. thanks! I'll take a look at the failed test.\n. wait ... you wanna submit more PRs? in that case it's better to wait for all your PRs instead of merging every single one, right?\n. sorry ... working on it. we had to do an intermediate release for 1.8 compatibility. this one's one the list for the next release.\n. I'm getting `ImportError: cannot import name 'HTTPSHandler'` when trying to run tox. Any idea?\n. ok. got it ... but shouldn't we use 3.5 instead of 3.4?\n. ok \u2013 I'll change that. just trying to figure out why the tests break with 3.5 (seems a bit strange).\n. solved. error gone.\n. thanks again for that PR. while this issue is basically solved ... what about adding travis-ci? any objections?\n. I'm fine with writing the travis file ... \n\nBut one question remains: If we use travis, we could test with multiple python 3.x versions. However, if I add these versions to tox, I'm not able to run the test locally (because not all different python versions are installed with my machine). I'm not even sure if it makes sense to test with e.g. 3.2, 3.3, 3.4 and 3.5. Maybe it is totally overdone. Any thoughts?\n. did you try to debug this issue? any details?\n. which version of grappelli? which django version? which browser?\n. grappelli 2.7 is not compatible with django 1.7, see http://django-grappelli.readthedocs.org/en/latest/#versions-and-compatibility\n. thanks a lot for the PR!\n. thanks again (trying to improve yesterdays weak response time).\n. see http://django-grappelli.readthedocs.org/en/latest/customization.html#sortable-excludes\n\nIf there is one value within the row (e.g. quantity or units) we assume that this row has been added. Therefore the validation error (even with a different field).\n. @jieter any suggestion on the wording?\n. @jieter thanks ... good points. I reopen this ticket as a reminder for updating the docs.\n. @jieter Tried my best to explain the behaviour. Please reopen if you still think we can improve this.\n. thanks for reporting. why do you think python 2.7.9 could be deprecated?\n. just tested the original issue (switch user dropdown) again and it works fine with my setup. I'm closing this issue for now ... please reopen a new one if this error (or one of the others) still exists.\n\nno worries about the waste of time. you mainly figured it out yourself anyway.\n. are you sure the right actions.js is being loaded (the grappelli one and not the one from django admin)?\n. just check if actions.js is equal to grappellis actions.js (you only need to copy the URL and check with your browser).\n. Well ... then you have to make sure the correct one is being loaded. Seems more like a setup/Django issue than related to grappelli.\n. yep, it's strange indeed. there has been a ticket about this issue a while ago, but I've never been able to reproduce this behaviour.\n. /static/admin/js/actions.js should be the grappelli file (although it probably isn't with your setup). due to the way collectstatic works, you might wanna try to re-install grappelli and then do collectstatic again.\n\nif you do `python manage.py findstatic admin/js/actions.js` the grappelli file should be the first one.\n. @SebasSBM this seems like a strange solution, because both /django/contrib/admin/ and /grappelli/ are apps. so changing the order with `STATICFILES_FINDERS` shouldn't really change anything.\n. filebrowser doesn't interfere. what could interfere though is updating django (after installing grappelli).\n\nthat being said, I have no clue about which direction to take either. people already opened tickets about this topic \u2013 but soon afterwards, they closed it because of caching or setup issues. I'm glad if somebody is able to find out if this is a problem indeed and if it is related to grappelli.\n. @SebasSBM what do you mean by \"external apps\" vs \"internal apps\"? IMO there is no such difference, there are just apps.\n. see #666 ... seems that your staticfiles are not loaded correctly (esp. actions.js).\n. just by looking at the code briefly this seems like a good change (no reason whatsoever for hardcoding these values).\n. a) searching related fields should be possible\nb) comparing the autocomplete search with the change-list admin search is misleading. these options are not related whatsoever.\nc) defining the autocomplete fields within admin (rather than the model) would be nice. unfortunately, I don't think that's possible. but if someone comes up with a good idea on how to implement that, I'm all ears.\n\nbesides, please use the google-group for asking questions ... thank you!\n. I'd use a separate modeadmin instead (with list_editables on the changelist). To be honest, I don't see how pagination with inlines could work ... are you able to show a demo?\n. @theeluwin what exactly is the issue you are having with putting together a PR? do you have in mind that we need to deal with possible form errors on all the different sub-pages?\n. closing this for now ... although it's an interesting topic. happy to take a look at a PR.\n. @vinnyrose thanks (also for using the right branch!)\n. @joshmaker the same is true for fieldset_inline.html, right?\n. @debnet FYI: We're dealing with 1.9 once there's an official release. I'm closing this for now since there's probably tons of issues with 1.9.\n. support for 1.9 is definitely planned ... I hope to find some spare time within the next couple of days. sorry for the delay on this issue.\n. Not reproducable. Can you add details?\n. Well, I could guess ... but that probably doesn't help. Maybe you wanna add this question to the google-group and see if anyone has similar issues. And come back here once we're talking about an issue. Ok?\n. I'm closing this for now. Happy to reopen the ticket if we're able to narrow down the possible issue.\n. @ydaniv one note on this one: if the requests are identical, it seems to be a problem with django (because we just react on errors given by django). on the other hand, you could just try the original django-admin and check if the issue still exists ... if not, it's probably a grappelli issue.\n. this is not related to grappelli, is it?\n. @hhio618 sorry, but I'm not able to reproduce this. can you pls send your custom dashboard class or any other information which might be helpful.\n. grappelli is already working with python 3.4 for quite a while (see travis tests).\n. thanks. there's only one problem: travis currently does not support testing with python 3.5 \u2013 I'm not sure we should implement these updates until we can test properly. any objections?\n. I'm reopening this issue for future reference. Once travis supports testing with 3.5, we'll merge this.\n. thanks. is that PR going to be part of django 1.9?\n. I see ... how do you think we should handle this with grappelli? Wait until it's being implemented with Django or try to figure it out right now? Any preferences?\n. @graingert just tried to use your patch, but I'm seeing lots of errors with my local setup (JS variables not defined etc). is this supposed to work?\n. @graingert I've reverted the merge with stable/2.8.x ... there's just too many issues for me to resolve now (e.g. almost all paths are wrong, you use \"grapelli\" instead of \"grappelli\" etc). happy to take a look at this again if you're sending a tested PR.\n. sorry, but I don't understand that question. you could just use it with any given project.\n. closing this for now. please reopen with a new PR (thanks for your effort on this topic).\n. thanks for the PR. will merge asap.\n. @graingert great stuff. I'll take a look asap ... what do you mean with \"examples\"?\n. sorry, I don't get it ... how are the tinymce examples related to your PR?\n. @graingert I don't think updating the tinymce examples is relevant. There are currently no test scripts for the UI.\n. @graingert working on it. this should be part of the upcoming release compatible with django 1.9, right? or did you plan to have these changes with the current grappelli version as well?\n. @graingert great. we'll release a new version (2.7.3) today (compatible with Django 1.8) because there's been some minor bugfixes. afterwards, we'll work on compatibility with Django 1.9.\n. @graingert is it simple for you to send that PR again (using branch stable/2.8.x)? otherwise I'll try to cherry-pick ...\n. @graingert I was not aware that Django does it that way ... we've always tried to keep master stable with grappelli. But I'll give it a try.\n. @tdruez that issue should be addressed with django reversion first, right?\n. yes, preserve filters is not related to grappelli. it's mainly about using the \"add_preserved_filters\" template tag with links.\n. closing this for now since it's not mainly related to grappelli. once the reversion templates are updated, we'll take a look as well.\n. should be fixed with master \u2013 can you give that a try?\n. @dhararon thanks! will do another release pretty soon.\n. 2.7.3 is out now\n. there's probably lots of errors with django 1.9 ... we'll deal with this once 1.9 is being released (see docs).\n. please use the google-group for asking questions. if you think this is a bug, please add details in order to debug (and try to explain why this error is related to grappelli, if that\u00b4s even the case). did you try to remove grappelli and see if the error exists with the original django admin?\n. Is this a question or a bug report? Any details resp. debugging infos?\n. fixed with stable/2.8.x\n. no idea \u2013 but it should be straightforward to debug this issue. besides, please use the google-group for asking questions ... if you think this is a bug, please add some details.\n. which version of grappelli are you using?\n. is python 3.5 already supported by travis (because it hasn`t been about a month ago)?\n. @dbinetti I think you answered your own question with the 2nd comment. We need to use raw_id_fields, because otherwise we do not get the related link we need to use the js autocomplete workaround. Not sure if we're able to solve this ... if you have an idea, please let me know.\n. are you sure that your staticfiles are set up correctly? do you get the grappelli javascripts and styles?\n. is this solved? can we close this issue?\n. closing this for now since it seems to be a setup issue. please reopen if the problem still exists with the deployed version.\n. @clutcher @ninjaa I see what you mean. But with the proposed \"fix\", we do have another issue - see https://github.com/sehmaschine/django-grappelli/pull/646\n. should be solved, see #685 \n. Hi @ninapavlich and @olivierdalang ... it's great that you both wanna help improving Grappelli (thanks!!!). Unfortunately, we are still not sure about the roadmap. Giving the current structure (e.g. inlines), it's very hard to make it work with mobile devices. Still thinking about a decent solution ...\n\nConcerning \"hacking\" the CSS to make it a bit less unpractical: Our goal is to offer a good solution, not one which is \"less unpractical\". Therefore, I don't think that's the right way to go.\n. fixed with stable/2.8.x\n. @drxos please note that full compatibility with Django 1.9 is not yet given.\n. sounds good. can you provied tests for this behaviour?\n. fixed with stable/2.8.x\n. @parsch what exactly do you get? works fine with my setup.\n. @michalwerner I do think it's related to django-pipeline. please try again without that package.\n. see #714 \n. sorry, I don't understand your question ... grappelli is not yet compatible with django 1.9. besides, please use the google-group for asking questions.\n. Compatibility with Django 1.9 is planned. And grappelli has a dashboard ... but I still don't understand the question.\n. you are not using grappelli due to your screenshot!\n. you know that the current release is not compatible with django 1.9, right?\n. see #714 \n. these are issues with django.contrib.admin, not grappelli ... right?\n. grappelli 2.7 is not compatible with django 1.9. use grappelli 2.8 and reopen this ticket, if the problem still exists.\n. tested with stable/2.8.x and master ... works for me (might be related to the last commit which fixed popup_response.html). so please give this a try again and reopen if the bug still exists.\n. @tdruez @pombredanne well ... good PR. right branch, easy to follow (including links).\n. @garyelephant closing this for now \u2013 please reopen with additional information in order to reproduce this.\n. @chasepilon you should check if the right grappelli scripts are being loaded (and not the original scripts from the django admin interface), e.g. with using developer tools. I'm closing this for now since it's most probably a setup issue and not a grappelli bug. Please reopen with additional information if you still think this is a bug.\n. @parsch please take a look at this one and fix with stable/2.7.x, stable/2.8.x and (upcoming) stable/2.9.x\n. I don't think that HTML with the admin title has ever been possible ... but if you're able to give me a hint on the specific commit, I'm happy to check this issue.\n. see https://github.com/sehmaschine/django-grappelli/blob/stable/2.6.x/grappelli/templates/admin/base.html#L78\n\nare you sure that you did not use a custom template?\n. I don't get how this could be affected by Django itself. But I guess I have to give up here (not able to understand/reproduce this issue). Feel free to reopen with additional details (a PR would be useful).\n. What do you mean with \"not working\"? There's now a GO-Button to submit an action.\n. should be fixed now.\n. fixed with stable/2.8.x and master\n. I'm closing this since 2.7.3 is not compatible with Django 1.9. If the problem still exists with 2.8.x, please reopen this ticket.\n. 2.8.1 is still under development and there hasn't been a lot of feedback so far. but I see your point and I'll do a release later today (but please be aware that this version isn't fully tested).\n. alright \u2013 that's good to know.\n. thanks for the PR. we've had some issues with this behaviour in the past (changing the code lots of times). therefore, I'm only willing to change this if a useful test case is provided \u2013 as an alternative, you can try to explain what doesn't work now and what exactly that patch solves (and why it doesn't break any other cases).\n. did you check #706 and #403?\n\na test project would be useful. the main issue here is that I also \"think\" that it doesn't break any other cases, but I don't really now. and since we had problems with this behaviour in the past, I'm very cautious with merging changes without putting together a decent test case.\n. with \"this behaviour\" I'm referring to building the search query.\n. It's in 2.8.1 (for example).\n. I see. We'll think about doing a 2.7 release with this fix included. Unfortunately, we are not able to add  LTS comparable to django (we just don't have the necessary ressources).\n\nBesides, we don't say to use the 1.7 branch. First, this branch doesn't exist. Second, we refer to releases (not branches).\n. We decided to not release a new version for 2.7, but you can use the branch stable/2.7.x instead.. what do you plan to do with these docs? I'm not sure they are up-to-date.\n. that makes sense ... you could just copy/paste the URLs to your own urls.py (or outcomment them with grappelli).\n. django uses `[wheel]` instead of `[bdist_wheel]`. what should we use?\n. thanks. updated.\n. according to the error `relation \"users_mycustomuser\" does not exist` it is definitely not related to grappelli.\n. again, this is not a grappelli issue. you cannot use a custom user model without admin attributes (e.g. is_staff) for admin-related features.\n. > Do you mean that a custom user model will break tests programmatically?\n\nNot necessarily. It depends on the customization, but we are not able to foresee every possible case.\n\n> Switch won't be possible at all with a custom user model?\n\nDepends on the customization. You can check the function `switch_user` for details.\n\n> Is there a place where these \"do and don't\"s are documented?\n\nNo. But if you find something which should be documented, we'll integrate it ... or (even better) you send a PR with the updated docs.\n\nGenerally speaking, it should be easy for you to figure out what's wrong. You can than either send a PR with the updated code (if tests are included, a merge is easier) or docs or you give us a hint on what we can/should do. \n. with the docs, you are referring to `is_staff` first and to `is_admin` later on. besides, why don't we just say that `is_superuser` and `is_staff` are required fields with a custom user model if you want to use the switch functionality?\n. not sure how we can solve this. but grappelli works, right? \n. closing this since it's not a grappelli issue. not sure if verbosity is a solution (mentioned with the django ticket).\n. it seems like you're using a custom header, right?\n. no issue with `django-reversion`, but your screenshot definitely shows a header with a custom height. \n. no, sorry. but check for your header \"Isotek ...\" within your code.\n. please check if this happens without grappelli as well (I assume it's not related to grappelli). you could also use the google-group for asking questions.\n. how can we reproduce this?\n. I'm not able to reproduce this. Still possible that there's an issue ... but without any further details, we are not able to check this. Since it happens for all models, I'd say it's probably a setup issue (unrelated to grappelli).\n\nPlease reopen with detailed instructions on how to reproduce this error \u2013 since you get it, it should be much easier for you to debug and give us some hints.\n. thanks for the info.\n. can anyone confirm that the proposed solution works with different languages?\n. the block might be a good idea \u2013 I'll take a look.\n. fixed with 78877e1be88836b13c52a993d115e8ecc65600fe\n. please use the google-group for asking questions ... besides, this is not related to grappelli (deleting inlines is a feature of the django admin interface).\n. Here is the documentation: http://django-grappelli.readthedocs.io/en/latest/dashboard_api.html\n\nYou could use a custom dashboard, for example. But there's probably different ways to achieve this. Besides, please use the google-group for asking questions.\n. which version of django/grappelli?\n. Not related to the styling issue, but ... you are using an M2M-autocomplete with inlines, right? Is that really necessary?\n. M2M seems good \u2013 alternatively, you could use a FK with an intermediate table (and inlines with the admin interface). The 2nd approach is better, if you need additional fields (e.g. position). But you mix both options ... \n. About the database setup: FK with an intermediate table means that you have inlines with a foreign key ... but you have inlines with M2M (that's done twice). If you post your models here I can tell you more about this.\n. Concerning the styling issue: Is it possible that either your `related_label` and/or your `__str__` method contains HTML characters? If so, that causes the error.\n. 3) that\u00b4s the intended behaviour.\n4) the multiline textbox is fine for M2M autocompletes.\n\nhowever, I still think you should redefine the relationship with your database using foreign keys instead of many-to-many relations. could you please send the significant part of your models as well as your admin definitions?\n\nyour models should looke something like this ...\n\n```\nclass Parent(models.Model):\n    (fields)\n\nclass Tag(models.Model):\n    name = models.CharField(u\"Name\", max_length=100)\n    slug = models.SlugField(u\"Slug\", max_length=100, db_index=True, blank=True)\n    (additional fields)\n\nclass TagToParent(models.Model):\n    parent = models.ForeignKey(Parent, verbose_name=u\"Parent\", related_name=\"USE_A_GOOD_NAME\")\n    tag = models.ForeignKey(Tag, verbose_name=u\"Tag\", related_name=\"USE_A_GOOD_NAME\")\n    (additional fields)\n```\n\nand your admin file ...\n\n```\nclass TagInline(admin.TabularInline):\n    model = TagToParent\n    raw_id_fields = (\"tag\",)\n    autocomplete_lookup_fields = {\n        \"fk\": [\"tag\"],\n    }\n\nclass ParentOptions(admin.ModelAdmin):\n    inlines = [TagInline]\n```\n. No, it does NOT look similar. As mentioned before, you are combining an inline with a many-to-many relation.  I'm not exactly sure what you're trying to achieve here ... and it is definitely not true that \"Django creates the intermediate table\" (it only does so if you explicitely tell Django). Django does create the M2M-table (but that's not a through-table).\n\nI'm closing this ticket for now since I'm pretty sure the issue is related to your setup. I would try to clean the models first. And if the issue still exists with a proper database setup, feel free to reopen this ticket.\n. an M2M is essentially the same as an intermediary table with a foreign key (with the 2nd offering more possibilities). so, admin-wise, you either go with a SINGLE M2M autocomplete field ... OR ... with inlines and foreign keys.\n\nmany-to-many is fine when using tags. but again, you're not using M2M ... your doing an M2M-M2M.\n. glad you solved it ... but I still think your database-setup (resp. model-setup) is not quite correct. but that's a bit out of scope with regards to grappelli.\n. I see what you mean and I generally agree.\n\nThat said, I'm not sure that the database setup you described with regards to `product_name` is the best solution ... there's still the possibility of people using the wrong name for similar products.\n. are the autocompletes working? can you do a search within the fields?\n. you need to define the autocomplete lookup fields like this:\n\n```\nautocomplete_lookup_fields = { 'fk': ['invoice', 'credit_note'] }\n```\n. 1. the tuple is used for searching. with the mentioned example, you search for id (exact) and name (icontains).\n2. key: right. \n3. you need raw_id_fields, because autocompletes is kind of a hack. we need the output of raw_id_fields with the template, because otherwise we do not get the ID.\n. you can use djangos field lookups. not sure why there's an error when removing `id__iexact` ... that shouldn't be the case (you may wanna try to debug that)\n. I think it only applies to inlines with \"view on site\" (that is, objects with get_absolute_url defined).\n. see #780 \n. I don't fully get this PR ... you say that the issue occurs with Django 1.9, but later you also say it's fine with 1.9. Besides, where exactly do you see this error? Only with the dev branch or with master as well?\n. @tdruez thanks. we are aware of these issue and have not yet started with 1.10 compatibility.\n. solved with stable/2.9.x\n. it is grappelli (not grapelli)\n. nope, the given path is correct\n. definitely interesting, but out of scope. besides, it seems that django-locking is no longer actively developed.\n. Is this related to grappelli or to django-autocomplete-light?\n. No ETA yet. We hope to start working on 1.10 support soon.\n. ETA is set to September 27th. I assume there are some minor updates needed (esp. in order to remove depreciation warnings, but I'll have a closer look asap).\n. solved with stable/2.9.x\n. please use the google group for asking questions.\n. @unaizalakain this PR does not work. if I submit an inline formset with updated positions and I have an error within that formset, the ordering is not correct. happy to review an updated PR.\n. @unaizalakain what do you mean with the formsetsort template? and yes, it has been working and it is still working.\n. @unaizalakain that\u00b4s exactly what I do ... but the order is only messed up with the PR applied (it works for me without your PR). can you do a test with the branch stable/2.9.x and django 1.10?\n\nbesides, if the sorting is messed up with your PR, you do agree that the PR is not exactly what we need ... right? or did I miss something?\n. @unaizalakain see https://github.com/sehmaschine/django-grappelli/blob/master/grappelli/templates/admin/edit_inline/stacked.html#L17 ... the function is called every time the inline templates are used.\n. solved with stable/2.9.x\n. see branch stable/2.9.x ... should work. I'm just waiting for some feedback before the actual release.\n. you can checkout that branch and just play around. tests look fine, but I'm pretty sure there are still minor glitches. and if you do not find any bugs, that's a useful feedback as well.\n. @adamchainz We don't necessarily follow the jQuery updates of Django, but I'll take a look.\n. @florianm master is not compatible with django 1.10 \u2013 take a look at stable/2.9.x instead.\n. @adamchainz what exactly is the issue with jQuery (besides using a different version compared with the Django admin)?\n. > I've been looking around a bit. Django 1.10 upgraded from jQuery 2.1.4 to 2.2.3, but Grappelli 2.9.x is currently replacing that with version 2.1.4 again - shouldn't it be upgraded?\n\nthat\u00b4s true. but I don\u00b4t see any issues here.\n. > In fact b196350 copied in jQuery 2.2.3 (rather than just dropping the file to prevent static 'shadowing' of django.contrib.admin), but it still shadows jquery.init.js so the end result is that django.jQuery is the 2.1.4 version but window.jQuery is the 2.2.3.\n\nI'm sorry, but I do not understand this comment.\n. so we just need to add the comments again, right? additionally, we could also update the jquery version.\n. @debnet I'm not able to reproduce this. popups work fine with my setup. are you sure that you're using the updated files?\n. just released 2.9.1 (compatible with Django 1.10)\n. @adamchainz sorry, I don't quite get it ... the file `setup.cfg` is already there and you didn't change anything, right?\n. @tdruez I'll do a release in the next couple of days. I just waited for some feedback on compatibility with django 1.10.\n. hope this issue is solved.\n. please try branch stable/2.9.x ... 2.8.x is not compatible with django 1.10.\n. @rcooke you are right. we are aware of this issue and decided to not go with the \"?\" since it\u00b4s not consistent. that said, with regards to your usecase it definitely makes sense. we\u00b4ll take another look .... @parsch can you answer that?. change to django-style help text.\r\n\r\n@parsch please add styling. please explain ...\n. @orlra sorry, but I cannot follow. you know that overriding templates is a django issue, right? we don\u00b4t change that behaviour.. We changed this behaviour with Grappelli 2.8. It is not planned to update 2.7 though.. I'm not able to reproduce this. Works fine for me. Any details?. Thanks for the clarification.. we decided to not implement the number field since it behaves (very) different depending on the browser (one browser even accepts an empty field although that field is required, though I don\u00b4t remember which browser that was). I also added a django-ticket when we worked on that issue, but I'm currently not able to find that ticket anymore. However, the django devs agreed that the number field behaves badly (although they decided to stick with their solution).. as @etianen already mentioned, we need to adjust the templates. since I'm personally not using reversion, I didn't recognize that there have been changes according to the templates. my suggestion is to look into the reversion templates and compare it with the grappelli reversion templates and find the diffs. shouldn't be a big deal IMO.. @tsouvarev I don't quite understand where exactly we should use this new method. Any details on this?. that seems like an error with your configuration. if you think this is a bug, please add details and clarify why the noreversematch is caused by grappelli and/or how we could solve this.. I'm not able to reproduce this and it seems kind of weird. Are you saying that the ordering of `MyModel` interferes with the autocomplete for `parent` (because one has nothing to do with the other). Can you add more details and try to debug this?. closing this because no further details are given. please reopen if the problem still exists with the correct grappelli/django combination.. @tdruez Thanks for looking into it. I'll check compatibility with 1.11 asap (hopefully next week).. @Cediddi Planned for tomorrow. I'll check the issues and I'm hopefully able to have a new release by Friday.. both mentioned issues are solved with stable/2.10.x. @orlra Did you target branch dev/2.7.x by purpose? Because it\u00b4s pretty outdated \u2014 the development branch for the current version is stable/2.9.x.. see https://django-grappelli.readthedocs.io/en/latest/customization.html#available-settings . I'm pretty sure this is not related to grappelli. You could try to deactivate grappelli and check if the error still exists \u2013 if that\u00b4s not case, please reopen this ticket.. As said with the docs, these URLs are commented out by default (so you need to change this if you want to use the template docs).. sorry, not able to follow here. can you add an example?. thanks, I'll take a look at this.. FYI: I think I have a solution, but it\u00b4s a quite complicated update and I need to add some tests before pushing the changes.. see #639 . please use the google-group for asking questions (this is an issue tracker).\r\n\r\nhint: js/jquery.grp_timepicker.js (from lines 22). you should be able to use `default_time_list`.. thx for the pull request. I'll take a look.. can you please try with Grappelli 2.8.3? I'm not saying this issue is solved, but you refer to a version which is not maintained.. any specific reason you did not add the compiled css file?. @parsch can you confirm that this patch looks reasonable?. cool \u2013 thanks.\n. thanks again. please note that I\u00b4m just giving github a try and grappelli is still maintained via google-code.\n. autocompletes are now availabe with the autocomplete-branch:\nhttps://github.com/sehmaschine/django-grappelli/tree/autocomplete\nhttp://readthedocs.org/docs/django-grappelli/en/autocomplete/customization.html#autocomplete-lookups\n\ntested with firefox, chrome & safari on regular forms, inline-formsets (tabular and stacked) and generic inlines. NOTE THAT THE UI IS NOT FINISHED YET ...\n\nTODO:\n\u2013 CSS cleanup\n\u2013 check behaviour on changelist.\n\u2013 check errors below fields.\n\nplease add your thoughts about the current implementation (incl. variable names etc.) and keep in mind that we\u00b4re looking for the most simple solution.\n. TODO: only show \"X\" for fk and generics when the field is not empty\n. TODO: show result-counter and show a message if no results are found.\n. @parsch: long text within fk- and generic-input overflow the remove-symbol\n@parsch: with m2m-autocompletes, the list is much smaller than the div-wrapper\n@parsch: hovers (div, input) are not very nice (probably an issue with djangos fine dom-structure)\n. \u2013 CSS cleanup done\n\u2013 functionality on changelist not possible due to a bug in django 1.3 (update the grappelli-docs accordingly)\n. \u2013 error-fields ok\n\u2013 remove-link is only visible if there\u00b4s a value\n. \u2013 width of menu-items with m2m-autocompletes is fixed.\n. \u2013 clicking labels with autocomplets is fixed.\n. idea: add an \"X\" to m2m-autocomplets in order to remove _all_ items. remove the \"X\" button for every single item ... instead, remove the item by clicking it.\n. @parsch: please check the width of m2m-fields within tabular-inlines.\n. @parsch: the results are now being shown as the first item within ul.menu. instead of `<li><a>xxx</a></li>` we have `<li><span>xxx</span></li>` ... needs to be styled. this line is always there (even in case of a server-error).\n. @parsch: some styling-issues with updating jquery & jqueryUI (e.g. the datepicker). uncomment line 50 in grappelli.js and you\u00b4ll see what\u00b4s wrong. some other styles might need a fix as well.\n. @parsch: elements within fk, m2m and generic wrapper are having a slightly different vertical position (with inlines, the items are not centered vertically). the same is true for the remove-link.\n. @parsch: IMO, we need to distinguish single lookups from multiple lookups with adapting the search-icon accordingly (for either related-lookups and autocomplete-lookups). because even with related-lookups, it\u00b4s not obvious that multiple items can be selected. minimal change to the search-icon > far more user-friendly.\n. not necessarily: distinguish by type (object, file), by action (single, multiple) or by type and action. IMO, type is not as important as action.\n. @parsch: check width if several fields are within a row.\n. fixed with the 2.3.4-release.\n. this could be done with a) adding all necessary ui\u2013translation files and b) loading the file based on the defined django\u2013language with:\n\n```\n    <script type=\"text/javascript\" charset=\"utf-8\">\n        var url = \"{% get_static_prefix %}grappelli/jquery/i18n/ui.datepicker-{{ LANGUAGE_CODE }}.js\";\n        grp.jQuery.getScript(url);\n    </script>\n```\n\nhowerver, not every language is available with jquery\u2013ui. can we still use that? any opinions?\n. you mean with adding a custom grappelli templatetag and hardcoded datepicker languages?\n. @pawlyk yes, manually with customized templates (just add the necessary jquery-ui language files).\n. @pawlyk please refer to the google user\u2013group for asking questions. this is an issue tracker. thank you!\n. seems possible after we updated jquery/jquery\u2013UI (see #378). but we don't update jquery with 2.4.x, because there are backwards\u2013incompatible changes.\n. closing this since there's no viable solution (file endings are not equal with django language codes and jquery UI). besides, it's easy to add the files yourself.\n. @parsch: overriding the template is done with admin.ModelAdmin.\n\ne.g.,\nchange_list_template = \"admin/change_list.html\"\nversus\nchange_list_template = \"admin/change_list_filters.html\"\n. @parsch: results should be behind the sidebar\u2013filters.\n. fixed with 2.4.2\n. did you test with django 1.3? I\u00b4m asking because grappelli is always developed against the latest official release.\n. works fine for me (OSX 10.6.8, safari 5.0.5) with django 1.3.\nI\u00b4m sorry, but djangos trunk is too hard to follow ... especially with 1.4, since some admin-related changes are implemented.\n. can you add more details (e.g. looking at the code and see what\u00b4s happening)? for me, it\u00b4s hard to debug this issue since I\u00b4m not able to reproduce it.\n\nthis problem doesn\u00b4t exist when you\u00b4re not using grappelli, right?\n. yes, login would be helpful.\n. the wrong (original admin interface) css are being loaded ... it\u00b4s a setup issue. do you use staticfiles?\n. WHAT didn\u00b4t you install with pip? grappelli? no - you don\u00b4t have to use pip (although I recommend using it).\n. the problem is not pip though ... the problem is that the wrong css is being loaded and that\u00b4s related to your django-setup (staticfiles, media_root etc.). sorry, but there\u00b4s not much I can help with.\n. that\u00b4s a bad place to discuss it here ... are you on IRC/skype?\n. the problem is definitely a wrong setup. BUT: if you\u00b4re asking a question and/or don\u00b4t understand how things work, please use the google-group. this is an issue-tracker.\n. if no images are loaded and/or paths/urls are wrong ... setup issue!\nread the django-docs about how to server media and static files. sorry ... nothing we can do about that.\n. @adaaif: yes, but of course that doesn\u00b4t mean your media/static-setup is fine (that\u00b4s a totally different story).\n. @adaaif : sorry ;-)\n. TinyMCEAdmin.js is _not_ using the grappelli-theme (it\u00b4s using o2k7). if you\u00b4re using grappelli, you need to add tinymce_setup.js (or something similar). can you give that a try and let me know if it works?\nnote: it probably makes sense to remove TinyMCEAdmin.js from the repo.\n. no, you shouldn\u00b4t use TinyMCEAdmin.js at all ... you should use tinymce_setup.js. that said, this file is just an _example_ of how a configuration-file could look like (please read the tinymce-docs in order to understand what\u00b4s happening exactly).\n\nif you add tinymce and tinymce_setup (both which are included with grappelli), there shouldn\u00b4t be an error. I\u00b4ve tested with firefox, safari & chrome (both windows and OSX).\n\nif you\u00b4re having questions on how to integrate TinyMCE in general, please use the google-group.\n. did you try with django 1.3?\n. honestly ... I don\u00b4t think it\u00b4s a grappelli-error. otherwise hundreds of users won\u00b4t be able to use the filter drop-down and I don\u00b4t think that\u00b4s the case. I\u00b4m pretty sure it\u00b4s because of 1.4.0a ... and grappelli is always developed against the latest official release.\n. if you read my last comment you'll see that grappelli is not developed with djangos trunk. \n. I\u00b4m closing this ticket since it\u00b4s related to djangos trunk version. docs have been updated and a note has been added that grappelli is always developed against the latest stable django release.\n. of course, it will get fixed once grappelli is compatible with django 1.4\n. grp.jQuery needs to be there, otherwise no js will work ... we already had that issue with another ticket and it turned out it\u00b4s been a setup issue. are you sure that your javascript-files are being loaded correctly?\n. can you check why grp.jQuery is not there? because it should be. as mentioned before, if grp.jQuery is not there, a lot of stuff won\u00b4t work as expected.\n. which django-version are you using?\n. I\u00b4m using django 1.3 and chrome 14.0.835.94 beta ... can\u00b4t reproduce this bug.\n. when you say \"problem reproduced\" ... are you referring to the login-page only or (as vitorh45 described) every page?\n. are you all using grappelli 2.3.3+?\n\nsee\nhttps://github.com/sehmaschine/django-grappelli/commit/68e0cc7fe2e573d1dab0691c76b949a2f7d325eb\nhttps://github.com/sehmaschine/django-grappelli/commit/0a8fc04141fef96a08ef227adb3085471cfff9b0\n. I\u00b4m closing this since it seems to be solved with 2.3.3+\n. besides, the ui-sortable-helper class gets overriden by the predelete class.\n. grappelli-skin-default.css, line 748 seems to be the problem:\n.collapse.open.predelete > h4.collapse-handler\n. definitely works ... did you define the related lookups according to the docs? http://django-grappelli.readthedocs.org/en/latest/customization.html#related-lookups. I\u00b4m sorry but we had to change the related-lookups a bit with 2.3+ because of some smaller issues with the former version. it\u00b4s all mentioned in the docs as well as the changelog and should now work very stable.\n. see http://readthedocs.org/docs/django-grappelli/en/latest/customization.html#inline-sortables ... besides that, the latest official release is 2.3.3 (e.g. via pip install).\n. you are so right! accepted (and hopefully fixed soon).\n. fixed, see http://sehmaschine.github.com/django-grappelli/\n. sorry, but I can\u00b4t guarantee the tinymce-files to be up-to-date all the time. that\u00b4s just to much effort. thanks for the patch though.\n. IMO, this should be done with classes instead of alignments. any objections?\n. I\u00b4m closing this for now since I\u00b4m sure this is better solved with using classes.\n. I did unterstand your proposal. what I don\u00b4t understand is why you want to use text-alignments instead of classes (of course you can define classes which will define text-alignments).\nconsider this: you let your editors add alignments to paragraphs and one day you\u00b4d like to change these alignments ... what do you do? IMO, text-alignment is completely redundant (if not dangerous) with \"rich text editing\".\n. no, I don\u00b4t have a better idea. but I guess that you can simply override content_css with tinymce_setup.js.\n. 1. if you use grappelli.dashboard, please remove all admin-tools-apps from your INSTALLED_APPS\n2. which version of grappelli are you using?\n. grappellli is always developed againt the latest official django-release. using django 1.3 will resolve the problem.\n. thanks for the information. unfortunately, there\u00b4s a bunch of backwards-incompatible changes with 1.4 ... that\u00b4s why we stick with 1.3 for now. that said, customizing the admin-interface should be a lot easier with the final release of 1.4 (so we\u00b4re looking forward to that).\n. updating screenshots are already on the todo-list. maybe we\u00b4ll add screencasts as well. but I think that another github-project is to hard to maintain (I rather spend my time improving grappelli/filebrowser). sorry.\n. fixed with the autocomplete-branch since it\u00b4ll be merged soon.\n. please use the google-group to ask question. thanks.\n. nope. bug!\n. thanks. we\u00b4ll check that issue asap.\n. what version of django did you use for this fix?\n. no, that\u00b4s fine. I just asked because most of the recent request are related to django 1.4 ... \n. thanks. we\u00b4ll fix that.\n. note: I\u00b4ll deleted the files with the autocomplete-branch since this branch is going to be merged very soon. closing the ticket since the merge will fix the issue.\n. can you explain that a bit more? what \"Meta class\"?\n. seems a bit overdone for what we\u00b4re trying to do, but we\u00b4ll keep it in mind. thanks for the hint though.\n\nbtw: we\u00b4ll use compass for the next version of grappelli.\n. we just need the grid \u2013 and with that in mind, it\u00b4s overdone (not in general, but for us). besides, compass nicely integrates with blueprint.\n\nsorry, but I don\u00b4t understand your last question. grappelli has the same amount of fields, it just looks different.\n. closing this since the next version will be based on compass (and I don\u00b4t understand the second question). if compass integrates with bootstrap, we\u00b4ll re-discuss this issue.\n. We will check Bootstrap with the next major release again.\n\nBut I have to say, that this (https://wrapbootstrap.com/themes/admin) is not really convincing. Some of these themes look nice at first, but weird when it comes to the details \u2014 though I'm currently not sure if the reason is Bootstrap or the actual implementation.\n. I doubt that this is easily possible ... but we'll check it!\n. well, that would be interesting of course. but before you start working on something like that ... if it's not easy, what exactly are the benefits of doing this? just to say we're using bootstrap? from my point of view, it doesn't make customizing the admin interface easier (maybe even harder) for anyone using grappelli. moreover, we need to adapt with every new version of bootstrap, but we're already having a hard time keeping up with django.contrib.admin (and their inexplicable updates).\n\nthat being said, I don't wanna block this issue. if you're having some spare time to invest doing a prototype, that's much appreciated (though it doesn't mean we're going to use Bootstrap).\n. @BertrandBordage we're totally open to change our workflow and I basically agree with what you've written. my doubts primarily arise from the admin projects done with bootstrap. for example, the link above posted by leonardo: when I look at these screenshots ... I'm like WTF!\n\nbut: maybe it doesn't have to be this way. maybe I just need someone to convince me that grappelli won't look that shitty if we use bootstrap.\n. I personally don't care about the \"theme\" ... that could be changed later. what's important in my opinion is that we have the necessary structure/options (e.g. object\u2013tools, footer, date\u2013hierarchy and other stuff). from my experience it's not that easy \u2013 you can't just add boostrap elements to an existing DOM and assume that it will look ok. \n\nmaybe the misunderstanding is this: when I talk about the design, I'm not referring to colors/fonts/or presentational markup in general. I'm talking about (for example) pixel perfect placement of a filter element beneath a searchbar. If we're able to solve that issue, I'm more than happy to re\u2013evaluate bootstrap for the next major release of grappelli.\n. I\u00b4m also not happy about that situation. but working on grappelli is unpaid \u2013\u00a0so we need to focus on what\u00b4s important for us and our customers. sorry.\n\nbesides, you\u00b4re free to add patches in order to solve these issues.\n. overriding a change-list template is exactly the same with grappelli and the standard admin interface. but I don\u00b4t understand your question \u2013 why do you need to find out if grappelli is being used? I mean, you\u00b4re the developer, so you should know. guess I\u00b4m missing something, right?\n. alright, I see.\n\nunfortunately, I don\u00b4t know how to figure out if grappelli is being used. guess you need to check INSTALLED_APPS. on a template-level, you probably need to write a custom template-tag.\nbesides, please use the google-group for asking questions.\n\nthanks,\npatrick\n. @parsch: could you please take a look at this one? thanks.\n. yes, I know. but I haven\u00b4t give this much thoughts so far ... do you think it\u00b4s better to throw an error?\n. about your first problem: did you add apps like \"myapp\" and others like \"project.myapp\" to your INSTALLED_APPS?\n\nthe comparison with how django handles such cases is a good argument. I agree that we should take the same path.\n. I\u00b4ve tried to solve this but I didn\u00b4t find a solution since we\u00b4re able to define models like \"django.contrib.*\" ... which is not in the list of registered items.\n\nI\u00b4d say we have to stick with the current solution. it\u00b4s not perfect, but on the other hand you shouldn\u00b4t have a problem if you define your dashboard-models like the one you add to INSTALLED_APPS.\nif for example\n\"project.blog\"\nis in your INSTALLED_APPS\nyou need to add something like\n\"project.blog.models.BlogEntry\"\nto your dashboard\n. closing this one since #46 adds a better explanation.\n. grappelli is a requirement for the filebrowser.\n\nbut you don\u00b4t need to use grappellis tinymce-theme. did you try it with the default tinymce skin?\n. closing this since no reply is given. I guess this is being solved with using the original tinymce-skin.\n. grappelli doesn\u00b4t include all buttons that come with tinymce \u2013\u00a0it\u00b4s only a minimal theme.\n. unfortunately, I don\u00b4t know a quick fix since I\u00b4ve never used pagebreak \u2013 but if you find a solution, please let me know.\n. thx. I\u00b4ll check that and update asap.\n. what url reverse error?\n. you could use a filebrowsefield or an imagefield with the clearablefileinput-widget that comes with the filebrowser (see http://readthedocs.org/docs/django-filebrowser/en/3.3.0/fieldswidgets.html#clearablefileinput). but the question is more related to the filebrowser than to grappelli. \n. how can I reproduce this error?\n. now I see what you mean \u2013\u00a0thanks for the clarification.\n\nI\u00b4ll take a look at this. The mentioned code shouldn\u00b4t even be relevant because of `if request.GET.get('query_string', None):`\n. just by taking a quick look at your patch I\u00b4m having a question: you mainly seem to remove image-references in css-files (as well as some grid-styles). doesn\u00b4t this affect the grappelli-layout? sorry, but I\u00b4ve never been using cache storage: can you explain your patch a bit?\n\nthanks.\n. I see ... you just removed images which are not used. thanks. we\u00b4ll test the patch with our environment an merge asap (this may take a few days since we\u00b4re in the middle of a bigger filebrowser-update).\n. thanks a lot.\n. sorry, but this patch doesn\u00b4t seem to work ... did you tested this without the \"future\" imports? IMO, {% load url from future %} is missing.\n. did you test with the latest official django-release? because grappelli is not developed against djangos trunk. and since we never came across this issue, I suspect it\u00b4s more related to django than to grappelli.\n. interesting. do you get any js-errors?\n\nbesides, can you please send\na) the model and admin-options you\u00b4re using for the inlines and\nb) the relevant part of the traceback\n\nthanks.\n. the next version will be namespaced.\n. I could just now reproduce this bug. we\u00b4ll take a look at this!\n. working on it ...\n. bug should be fixed (dynamic-form is now being added correctly). please let me know if you\u00b4re still having problems with this issue.\n. should be solved.\n. how do you refer to the models when adding them to the admin (register ...).\n. thanks. will update the docs.\n. I\u00b4ve updated the docs in order to reflect the issue mentioned by @dannyadair. unfortunately, I\u00b4m not able to reproduce the original issue (which seems to be a different one).\n. docs are updated.\n. mainly because I don\u00b4t get the point. I mean ... we just can\u00b4t support all 3rd-party-apps which are based on the admin-interface and are not compatible with grappelli. where does it lead to?\n\nbesides, if treemenu needs these icons, grappellis look & feel is gone ... so I suggest using the original admin-interface for that case anyway.\n\nthis is an unsatisfactory situation for us as well. but as long as it\u00b4s not possible to skin djangos admin-interface in a clean and easy way, we have to make decisions like this.\n. that\u00b4s a reasonable argument and I already said I\u00b4m not satisfied with the situation as is. nevertheless, we\u00b4re not able to support all 3rd-party-apps (that\u00b4s just not possble because it\u00b4s too much effort and we do these projects in our spare time).\n\nthat said, if you add a pull-request chances are much higher it\u00b4s being implemented (if it doesn\u00b4t interfere with other stuff and it\u00b4s just about adding some images).\n. grappelli doesn\u00b4t include any translations. so it\u00b4s mainly a django-issue. that being said, we should take care that the layout doesn\u00b4t break even if the text-phrase is too long.\n. looks good to me.\n\njust a small hint if you submit a patch:\nfor backwards-compatibility, I would leave the callback as is (for now).\n. do you still want to submit a patch for this? otherwise I\u00b4m going to close this issue ... although I\u00b4m happy to implement your patch if you find the time to submit it.\n. alright. thanks for the info.\n. please resubmit if that\u00b4s possible. thanks.\n. a question to begin with: what exactly would you do with pre-/post-content functionality?\n. added pre- and post-content. please note that you need to add the relevant DOM yourself ... e.g.\n\n```\n        self.children.append(modules.AppList(\n            _('Administration'),\n            collapsible=True,\n            column=1,\n            css_classes=('collapse open',),\n            pre_content='<div class=\"module\"><div class=\"row\"><p>Adding a <a href=\"https://djangoproject.com\">Link</a></p></div></div>',\n            post_content='<div class=\"module\"><div class=\"row\"><p>Adding a <a href=\"https://djangoproject.com\">Link</a></p></div></div>',\n            models=('django.contrib.auth.models.User','django.contrib.auth.models.Group',),\n        ))\n```\n. sorry, I don\u00b4t understand your last comment ... how is feincms connected with grappelli?\n. I still don\u00b4t understand this. as far as I know, feincms doesn\u00b4t support grappelli ... am I wrong?\n. basically, you\u00b4re right \u2013 grappelli replaces the admin site. but if feincms doesn\u00b4t support our templates resp. DOM structure, it won\u00b4t work.\n\nbackground: because the HTML/CSS of the original admin is a bit of a mess, we are not able to work on the basis with grappelli since it makes the js-part (which again ist just a workaround for some django-limitations) almost impossible. bit of an awkward situation, but there\u00b4s not much we can do about that right now.\n. sorry for that. are you able to split the pull-requests?\n. I\u00b4d prefer a pull-request for every self-contained change/fix. thanks a lot.\n. sorry ... I didn\u00b4t know you can do only one pull request a time. in that case, just leave it as is. I\u00b4m pretty new to git, so I\u00b4ve never used cherry-pick, but I\u00b4ll give that a try.\n. sorry, but I need to close this request ... I\u00b4m not able to see what\u00b4s more or less important and how the different requests relate to each other (and/or to feincms). please re-add the request with additional information on what exactly you want to change and why. thanks.\n. how does tinymce detect the language automatically?\n. besides, that\u00b4s about 1900 additional files ... and the grappelli-plugin for tinymce doesn\u00b4t support all these languages. not sure about this.\n. we\u00b4ve decided to not include all languages (tinymce has been updated with 2.3.8)\n. I\u00b4m ok with adding this if (and only if) the given grappelli-style is preserved. can you send a screenshot?\n. this is just for tinymce, right? because there's other popups in the admin interface as well (eg related lookups). how do we handle these other cases? because IMO it's important to have a coherent solution - not different kind of popups. what do you think?\n. in that case I\u00b4m against merging this (sorry). but consistency is a major issue for us \u2013\u00a0and having different solutions for popups/dialogs within a interface is something I don\u00b4t like at all.\n\nthanks for the effort though. if there\u00b4s any chance we\u00b4re able to create a decent and consistent solution, we should re-discuss this issue.\n. yes. but that's a backwards-incompatible change with django. so, once 1.4 is released, we'll update grappelli. \n. see #91\n. what version are you using? because I think we just fixed that bug.\n. see https://github.com/sehmaschine/django-grappelli/commit/8997ce912d3e638973507c7edde50a7c05a2cf1c\n. right, it\u00b4s solved with the master-branch, but there\u00b4s no update on pypi yet. I\u00b4m leaving this open for reference although the issue is already fixed.\n. closing this since 2.3.6 will be relased pretty soon.\n. I\u00b4m pretty sure this is related to the tinymce-version (3.4.2) we\u00b4re using with grappelli ... it seems to work with tinymce 3.4.7., so it will be solved when we update tinymce.\n. probably with 2.4 (once django 1.4 is out). but I don\u00b4t know since I\u00b4m only assuming that it comes down to the tinymce-version. if it\u00b4s really an issue with tinymce, I\u00b4m going to update instantly \u2013\u00a0but I need more information on the subject in order to do so ... \n. if you need it fast, you could add a pull-request. please keep in mind that we overwrite some plugins in order to preserve the grappelli-style ...\n. tinymce updated with 2.3.8-release\n. @parsch: isn\u00b4t it better to add grappelli-like arrow-buttons?\n. @honi: doesn\u00b4t work for me (tested with firefox). does it work for you?\n. I\u00b4m on 13.0.1 as well ... you added the line to the stop-function of the sortable, right? \n. sorry ... yes, it does work. the behaviour just seems strange to me (and with all the different inlines I\u00b4m testing with I got confused). so, yes it works, but I\u00b4m not fully convinced we should use this.\n. looks good, thanks!\n. yep. any idea how to solve this?\n. I don\u00b4t see how this could be solved due to browser-issues (since we are not able to serialize a filefield).\n. #134 is a possible solution.\n. what if we\na) serialize the fields (for each row) when loading the changeform.\nb) add the result to each row (just a hidden div with the field-values).\nc) on save, we serialize again (like we do now) and compare the values with the hidden div.\n\ncould that work?\n. if the values are unchanged \u2013 we don\u00b4t need to save them, because they are already saved. right?\n. I don\u00b4t quite get the point: if you\u00b4re having an extra form with initial data and you don\u00b4t change any values ... why would you want to save this row then? because when I follow your example, _all_ extra forms will automatically be saved (no matter what I do). am I missing something?\n. but we shouldn\u00b4t rely on that.\n. sorry, but I\u00b4m not able to follow this discussion anymore (IMO your argumentation goes in circles). please add a new ticket and try to explain _what exactly_ you want/need to solve. thanks.\n. take a look at #134 ... that\u00b4s a possible solution IMO.\n. I\u00b4m using django-positions as well, mainly for models which have list-editables on a changelist.\n\nwhen using django-positions with inline-sortables it doesn\u00b4t work (at least that\u00b4s my experience). I haven\u00b4t been looking into django-positions to figure out what exactly does break there \u2013 but I\u00b4m pretty sure this is not an issue we can solve with grappelli, right?\n. any updates on this one?\n. I\u00b4m closing this issue for now. please re-open with additional information if needed. thanks.\n. can you explain your patch? what does it actually solve and why?\n. ah, ok. you know that we always develop against the latest official release of django, right? so, this \"error\" is intentional. we\u00b4ll update grappelli once 1.4 is released (because there are backwards-incompatible changs with the admin-interface).\n. I don\u00b4t think that\u00b4s something which should be configurable with grappelli. I personally don\u00b4t like/use the app-index at all, but it should be solved with django (and not with grappelli).\n\nI\u00b4ve mentioned this several times before: django orders your models based on apps. but I\u00b4m pretty sure, no customer/editor is interested in the structure of your \"apps\". to me, this doesn\u00b4t make sense at all ... still a \"-1\" on \"fixing\" this with grappelli.\n. well, I think the whole admin-interface has been built with developers in mind: e.g., the index-page is just a list of \"INSTALLED APPS\" (try to explain that to an editor).\n. closing this since it\u00b4s not a grappelli-issue (although I hope that it will be solved with django).\n. -1 for this \"solution\".\n. which version of grappelli are you using?\n. this should be solved with the master-branch. please reopen the ticket if the issue still exists.\n. thanks \u2013 just committed your code.\n. yes, that\u00b4s the intended behaviour. any problems with this?\n. sorry, of course you don\u00b4t need to populate the sortable-field but one of the other fields with any inline ... if the serialization of all inline-fields returns something, the sortable-field gets populated.\n. any js-errors? did you do the setup of the sortables according to the docs?\n. now it\u00b4s clear: serializing a file-field doesn\u00b4t work. so unfortunately, the sortables are not working with a single file-field. and I don\u00b4t think there\u00b4s a solution, because of the way file-fields are handled with html.\n. closing this one. if you feel that your issue hasn\u00b4t been solved yet, please add another (working and tested) pull-request. thanks.\n. see #91\n. I\u00b4m sorry but this pull-request seems quite strange to me (see my 2 comments on your requests).\n. 1. just added a fix for the term \"1 result\" with pagionations.\n2. you need to add missing translations directly with django.contrib.admin (I think they use transifex).\n3. I\u00b4ve added your other translation fixes as well (thanks for that).\n\nbut no, the templates from django-admin-tools are being used for the dashboard excklusively.\n. is this solved with django admin 1.3? because relatedobjectlooup.js is basically a copy ...\n. I\u00b4m pretty sure django handles raw-id-fields and radio-lists as well (but I didn\u00b4t check that).\n\nhowever, if you add a pull-request I\u00b4m going to merge it.\n. thanks. I\u00b4ve decided to remove title_url from the docs (use pre_content or post_content instead).\n. thanks. no pull-request needed ... we\u00b4ll check that.\n. thanks. merged the other pull-request though.\n. what if we\na) serialize the fields (for each row) when loading the changeform.\nb) add the result to each row (just a hidden div with the field-values).\nc) on save, we serialize again (like we do now) and compare the values with the hidden div.\n. see also #96\n. @funkybob: could you add more details please? we\u00b4re not able to reproduce it by what you\u00b4ve written.\n. @funkybob: what version of grappelli are you using? 2.3.8? moreover, why do you define \"pk\" as an autocomplete_lookup_fields (shouldn\u00b4t \"unter\" be the autocomplete)? did you check the serialisation (e.g. with using console.log on the javascript)?\n\nfor debugging, you could add console.log(fields) after:\nhttps://github.com/sehmaschine/django-grappelli/blob/master/grappelli/templates/admin/edit_inline/tabular.html#L265\nwhich should log something in your case ...\n. do you want to try with 2.3.8? because 2.4 is not yet released ... if the problem exists with 2.3.8 it\u00b4s actually a \"bug\" \u2013 with 2.4. it\u00b4s just not finished yet.\n. thanks a lot for checking that \u2013 we\u00b4ll take a look at the 2.4 branch.\n. should work with the 2.4-branch now (the sortable-exclude issue hasn\u00b4t been solved though).\n. closing this in favor of #134 which offers a solution (not implemented with the 2.4-branch yet).\n. totally agree \u2013 will update to 2.3.7 on the weekend (I didn\u00b4t check with 2.5). thanks!\n. see #91\n. see #91\n. well, grappelli 2.4+ won\u00b4t work with django 1.3 anyway (because django introduced some backwards-incompatible changes with the admin-interface). I have to look through all the changes coming with django 1.4, but yes \u2013 if the tags are not used with the django-admin we can remove them. btw: the branch to work on for django 1.4 compatibility is grappelli_2_4 (just in case you wanna add a pull-request).\n. hi,\n\nwe\u00b4re working on it ... but there\u00b4s no schedule yet since we\u00b4re updating\nall CSS to compass.\nI could say we\u00b4re probably done in about 3 weeks, but don\u00b4t take this for\ngranted.\n\nbest,\npatrick\n\n2012/4/16 Simon Heimler <\nreply@reply.github.com\n\n> Hi there,\n> \n> any Idea when Grappelli is ready for Django 1.4?\n> I've tryed the Grappelli 2.4 Branch but it didn't work for me.\n> \n> Greets, Simon\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/sehmaschine/django-grappelli/issues/91#issuecomment-5147860\n. all issues mentioned here are solved with the 2.4-branch.\n. no, you\u00b4re not using the static-tag, do you?\n. I\u00b4m talking about {% static \"...\" %} ... like with the original admin from 1.4\n. you don\u00b4t need to since I\u00b4m also changing the templates ... I\u00b4ll check your other changes and implement them asap.\n. besides \u2013 would you agree that we need to use {% static \"admin/...\" %} instead of {% static \"grappelli/...\" %} and rename the /static/grappelli/ to /static/admin/ ... otherwise we are not able to overwrite the original static-files ... right?\n. looks good, thanks \u2026 we\u00b4ll do it that way.\n. I\u00b4m not sure I can follow ... but I\u00b4ve done some tests with my current grappelli_2_4_branch and most things seem to work fine (besides the multiple sorting on the changelist). so I guess we can take that as a basis.\n. my thoughts ...\nwe have these 2 folders:\n/static/admin/\n/static/grappelli/\n\nthe first folder (/static/admin/) is needed because there\u00b4s hardcoded stuff with the django admin\u00a0expecting files to be found within that folder (which is {% static \"admin/...\" %}).\nwith grappelli, we can use a different static-tag (which is {% static \"grappelli/...\" %}, but only where we\u00b4re able to change the tag (and not for any hardcoded stuff).\n\nI agree that we don\u00b4t need to duplicate files, because collectstatic will find these files anyway. however, since we\u00b4re having at least minor changes within every js, I\u00b4m +1 on duplicating all admin-files.\n. we\u00b4re close.\n. no, sorry \u2013\u00a0we\u00b4re doing this in our spare time and it\u00b4s hard to guess what our customers are up to.\n. same with filters ... check all overlay for closing when\na) clicking somewhere else\nb) ESC\n. with django 1.4/grappelli 2.4, this issue should be solved ... right? because when using collectstatic, the gis-images are there and since ADMIN_MEDIA_PREFIX is deprecated, the path/url to the images should be fine as well. \n. theoretically speaking, the field with the default value should be excluded from the serialization when doing the sorting ... right?\n. because the sortable field reacts to any inputs/changes by a user \u2013\u00a0but a default value is not a changed value ... so why should the sortable field react to that field? am I missing something? do we need to re-define the sortables and if yes, what could a (new) definition be?\n. @funkybob: no, that\u00b4s not an issue. did you define blank=True and null=True for your sortable field? if not, you should do so.\n\nthe example you mentioned (with the 3 fields) should definitely work \u2013 this is something we\u00b4re using for almost every project.\n. I\u00b4ve just tested with jsfiddle and\nvar fields = $(this).find(\"div.td :input[value);\nDOES pick up hidden inputs.\n\n???\n. see http://jsfiddle.net/sehmaschine/Myc29/ ... this could also include file-fields (although I don\u00b4t quite like the syntax with the field-loop).\n. I\u00b4ve never came across hidden inputs within 2 and 4 (at least not inputs which could/should be changed with having an effect on sortables). do you have an example?\n. 1. what do you mean with \"... the hidden inputs at position 2\"? which \"hidden inputs\"?\n2. and I still don\u00b4t understand why you wanna select fields with default values ... yes, it might be the solution for your problem, but theoretically speaking it\u00b4s not a good idea IMHO (because it doesn\u00b4t work with extra-rows).\n\nhowever, you might wanna take a look at #134 ... I\u00b4ve update the jsfiddle in order to work properly with file-fields and default values (hope I didn\u00b4t miss anything).\n. IMO #134 offers a proper solution (codewise, it\u00b4s not perfect but it deals with file-fields and ignores default values).\n. closing this in favor of #134 which offers a solution.\n\nnote: with my last question (nr. 1) I\u00b4ve been asking for examples of \"hidden inputs\" on position 2 ... these inputs currently don\u00b4t exist in my opinion and I still don\u00b4t understand what kind of inputs you\u00b4d like to see there.\n. thanks for the hint \u2013 we\u00b4re working on django 1.4 compatibility!\n. see #91\n. fixed the first issue, but decided to not go for the second one (maybe I don\u00b4t fully understand the benefits).\n. we often define custom change forms with overriding the grappelli change form (e.g. for changing object-tools).\nwhat exactly is not working for you?\n. why would you want to _extend_ the change-form if you need to _override_ it (for all objects)? when you add change_form_base, the same problem occurs with this template, right (if I extend change_form_base)?\n\nI agree that django admin templates aren\u00b4t very customazation friendly, but I\u00b4m not sure we\u00b4re talking about a bad design decision here. I\u00b4m ok with finding a better solution, but adding a _base template (which we need to do for every other template as well) doesn\u00b4t sound sensible to me.\n. I agree with everything you say here (thanks for the explanation). we\u00b4ll discuss that issue and may implement the _base templates.\n. sorry, but our goal with grappelli is to NOT add locales ... IMO we should use the jquery-localization for this one (if that\u00b4s possible). the reason we don\u00b4t add locales with grappelli is that it adds another layer of complexity (using transifex, keeping the locales up-to-date etc). appreciate your effort though.\n. if you download jqueryUI you\u00b4ll find the datepicker-locales ...\n. besides, if you\u00b4re willing to add a transifex-project and manage (!) that project for grappelli-locales, I\u00b4ll think about it.\n. hmm, \"done\" is part of the datepicker, see http://jqueryui.com/demos/datepicker/#buttonbar\n\ntelling from my experience with django-filebrowser: you don\u00b4t wanna do it!\n. closing this for now since different topics have been mentioned. please add a new ticket with a specific description. thanks!\n. thanks. FYI: both trunk and grappelli_2_4 are under development. for production use, please refer to the releases (tags or pypi).\n. can\u00b4t reproduce with either 2_3 and 2_4\n. see #91\n. see #91\n. see #91\n. I think it\u00b4s not possible to allow for several date formats with the jquery-datepicker ... is it?\n. can\u00b4t reproduce \u2013 for me, the typed date has a white background when the calendar is opened.\n. see #91\n. it\u00b4s not because of the tinymce version.\n\nnote to myself: it\u00b4s the onsubmit function with the html-file (pastword.html).\n. is there an english site?\n. thanks \u2013 it looks like a decent app, but without an english documentation ... sorry.\n. hmm, english translation is good ... and I\u00b4d love to get rid of tinymce and I like the redactor-style (the general look & feel is much better compared with tinymce) but: do you really think that editor is already working with a productive environment? I\u00b4ve been playing with the demo and unfortunately it doesn\u00b4t seem mature (e.g. indent/outdent not working, senseless functions like font-color and font-background, no obvious method to change blockformats, no post cleanup, link and image classes missing, strange code like img style=\"cursor: default;\"  ...).\n\na bit too much from my point of view. and I\u00b4m not a fan of tinymce at all \u2013\u00a0but replacing some crap with something else that\u00b4s not really working ... \n. thanks \u2013 good find.\n. you mean the error pops up with jquery-UI? if so, there\u00b4s not much we can do about it ...\n\ndoes it work when you remove jquery-UI?\n. what do you mean with \"add attachment\" resp. \"delete attachment\"?\n. do you mean inlines? there\u00b4s nothing like an \"attachments admin page\", right?\n\nand yes, the add-inline buttons do work with the stable version of grappelli. please reopen the ticket with additional information (e.g. a screenshot) and exactly describe the issue (if it actually is an issue). thx.\n. here\u00b4s on overview of the js: http://readthedocs.org/docs/django-grappelli/en/latest/javascripts.html\n\nbut you don\u00b4t need django- or grappelli-js to use the datepicker \u2013 it\u00b4s jquery-UI.\n\nbesides, please use the google-group for asking questions. this is an issue-tracker. thanks!\n. where do we use function-based generic views with grappelli?\n. oh, right \u2013\u00a0forgot that we added these urls ... thx.\n. no, there\u00b4s currently no effort to collaborate with django-admin-tools (more). we think that it\u00b4s a great project, but there are some design decisions we don\u00b4t agree with. however, it should be easy to add custom menus/widgets/groups/modules (esp. with the DOM-documentation available with grappelli 2.4).\n\nI\u00b4m closing this issue since our philosophy is to keep grappelli as clean and minimal as possible (while extending flexiblity in order to add custom items). please reopen if you think I missed something or didn\u00b4t fully understand your proposal.\n. not sure I\u00b4m able to follow. you\u00b4re talking about 2 different issues, right? first, the \"other plugin\" and second the way we\u00b4re calling functions ...\n. closing this for now \u2013\u00a0please reopen if you have additional details.\n. @parsch: I personally prefer the old action styling (no backgrounds, a bit smaller and generally less intrusive). \n. @parsch: click filter, click filter again (not selecting anything), move mouse away \u2013\u00a0background of filter is black.\n. it serializes file-fields, but we\u00b4re still facing the issue with default values:\nwhen we serialize the row, we don\u00b4t know if a value is a default one or not (and we don\u00b4t have a chance to check that). so, every row with a default value will be serialized and the sortable value will be set ... but that doesn\u00b4t make sense for extra-rows with a default value (because I want this rows to be excluded if no other value than the default one is given).\n\ntherefore, we need to add a field with the initial value counter and onSubmit compare the value of that field with the new serialized value counter.\nUPDATE: instead of a counter we store the serialized row with a hidden-field.\n\none problem still remains:\nif the user changes a default value (e.g. change \"xxx\" to \"yyy\" with input_text_003) the row isn\u00b4t marked as being changed ... so far, that\u00b4s no problem. but if the user now manually deletes the value of the sortable field, the row is missing. this could be solved with using a hidden-field or a readonly-field with sortables.\nUPDATE: this problem is solved with comparing the serialized fields.\n\nbesides: most problems with selectors in the 2.4-branch are results of jquery (1.7.2) changing the behaviour of :input (compared to 1.6.2). that\u00b4s already updated with the latest version of the branch.\n. even better than mine. thanks a lot \u2013 will update the branch today and then we can do some testing.\n. I did some testing and unfortunately, it doesn\u00b4t work with your proposal: the main problem is that form-rows can be removed and the row-index is being updated. so if we store initial values with the row-index (I couldn\u00b4t think of another way), it\u00b4s starting to get complicated.\n\nany ideas?\n. after some additinal testing, it\u00b4s far more complicated: serializing initial values won\u00b4t work, since these \"initial values\" will change after submitting the form. so, if there\u00b4s an error and the page is displayed a 2nd time, the \"initial values\" are different than before ... therefore, we can\u00b4t use them.\n\nthe only chance for this to work is to somehow get the real initial values from django \u2013\u00a0but unfortunately, these values are not there.\n. how did you manage to get the default values? because that's what we actually need. \n\nbesides, we need the values on a per inline form row basis (not for the whole form).\n. using initial values doesn\u00b4t seem a proper (and clean) solution. so I tried something different (see last commit):\nit takes file-fields into account and I\u00b4ve added a setting \"sortable_excludes\" (either list or tuple) in order to define fields which should not have any effect on the ordering. I\u00b4ve done some pretty extensive testing and (so far) it works for all my test cases ...\n\nwhat I don\u00b4t like and/or could be improved:\n\na) the fields selector:\n\n```\nvar fields = $(this).find(\"fieldset :input[value][value!=''][type!=radio][type!=checkbox],input:checked,input[type=file]\") ... \n```\n\nmaybe this can be done easier? note that :input[value] has changed with the latest jquery-version.\n\nb) comparing value and sortable_excludes:\n\n```\nif ($(this).val() && $(this).attr(\"name\") && $.inArray($(this).attr(\"name\").split(\"-\").pop(), sortable_excludes) == -1)\n```\n\nwe need to use \"name\" since there are (custom) widgets (e.g. autocompletes) which add form-fields without the name-attribute (and therefore should be excluded).\n\nc) I didn\u00b4t check for performance. not sure if this is faster/slower compared with the previous solution based on \"serialize\".\n\nfeedback/testing is very much appreciated.\n. any complaints about this solution? otherwise, I\u00b4m going to close this ticket.\n. I\u00b4ve tested quite extensively and it seems to work. closing this for now.\n. a probably better solution is to focus the search-input when closing the related object window.\n. add options.wrapper_search.find(\"input\").focus(); to lookup_id with jquery.grp_autocomplete_m2m.js ... it works but means that the search-field being focussed onload (which is not what\u00b4s needed).\n. fixed\n. no, this is not related to inlines.\n. hmm, works fine for me (tested with fieldsets, tabular and stacked inlines). what do you mean with \"values are not displaying properly\".\n\nnote: with tabular-inlines, the class grp-readonly is misssing (but that\u00b4s just a design issue).\n. you\u00b4re right \u2013\u00a0it now works for me (with multiple fields as well) with the latest commit by parsch.\n. works for me \u2013 do you have an action with an intermediate page?\n\nI\u00b4ve added print request.POST.copy() to my custom action and \"_selected_action\" is there.\n. if I\u00b4m using \"select all\", request.POST.copy() gives me all records (_selected_action is limited to the records on the first page, but that\u00b4s intended behaviour I guess).\n. yes, I\u00b4m on the 2.4-branch.\ndon\u00b4t know why you can\u00b4t assign labels ... but we\u00b4re taking care about that (if you\u00b4re referring to github-issues).\n\nisn\u00b4t there only one \"select all\"? first, I\u00b4m clicking the checkbox on the top left \u2013\u00a0to select all items on the current page, then I\u00b4m using \"select all\" in the footer-area (right beneath the select-field for actions).\n\nplease not that the styling of the footer is not finished yet: e.g., \"select all\" shouldn\u00b4t be visible when loading the page.\n. we\u00b4re going with the django admin behaviour here \u2013\u00a0first select all items on the page, then you get the option to \"select all\". changing the two-step process is another discussion (I\u00b4m ok with the current behaviour, but I don\u00b4t use actions a lot).\n. should be fixed \u2013 please reopen the ticket if you\u00b4re still seeing errors. \n. 1) because it looks more centered (vertically), although it isn\u00b4t.\n2 and 3) hard to argue. to me, the old version looks more balanced/unified.\n\nmoreover, I\u00b4m not sure about the text-shadow with headlines, because of missing repitition.\nand I prefer the slightly bigger padding with form-rows (see 2.3.8).\n. @parsch: dashboard index shows models with font-style: normal, while app index show it bold. \n. @parsch: IMO, .grp-help could have a color like #999.\n. @funkybob: there\u00b4s a problem with hiding rows with inlines. the only attribute we get is field.is_hidden, but we don\u00b4t get line.is_hidden ... therefore, it\u00b4s hard to achieve this. any ideas?\n\nbesides, I\u00b4d consider this a django-bug.\n. This bug should be fixed with Django.\n. even worse with tabular inlines, where the \"X\" (of autocompletes, if given) is being moved to the right.\n. non-form-errors look ok (not sure if we can do any improvement there).\n\nin order to reproduce, the easiest way is to just add the errorlist with the template (search for non_form_errors with stacked.html and tabular.html).\n. field-errors and non-field-errors\n. besides, I\u00b4m not sure if the items should be red\n. any idea how to solve this? just add a 2nd jQuery-namespace?\n. inline.js (and inline.min.js) has never been available with grappelli. and it doesn\u00b4t make sense to include these files, since they won\u00b4t work anyway.\n\nsorry, but I don\u00b4t get the point about FeinCMS: this app is not compatible with grappelli in the first place, right?\n\ntheoretically speaking, I think it\u00b4s a good idea to keep 3rd-party-apps in mind ... on the other hand, we avoid conflicts if we use a distinct grp-namespace for jQuery.\n. that\u00b4s exactly what I\u00b4ve been thinking about ... I\u00b4ll test it.\n. interesting (works for me). prepopulate is not even part of the grappelli-javascripts.\n. @bjudson if collectstatic does not copy the file, there's something wrong with your setup ... that should definitely work. any details are appreciated.\n. django.jQuery is there ... and I\u00b4m not getting any js-errors. are you using the latest version?\n. very strange \u2013 I just checked again and I don\u00b4t get any js errors. I\u00b4ve tested with DEBUG = True (loading the original js) and DEBGU = False (loading the minified grappelli js).\n\nthe distinction between django.jQuery and grp.jQuery shouldn\u00b4t be a problem (this is done by purpose in order to namespace all grappelli javascripts). I don\u00b4t think this can cause the js-errors you\u00b4re getting.\n\nIs grp.jQuery defined? (e.g. testing with the firebug console)\n. thanks \u2013\u00a0I\u00b4ve removed the second media.js.\n. right, we\u00b4ll explain that better ... autocompletes are (currently) alternatives for related/m2m/generic lookups.\n. you\u00b4re using grappelli 2.3.8 instead of the 2.4-branch, right?\n. depends what you want ... master is not compatible with django 1.4 (see documentation).\n. no problem \u2013 we\u00b4re about to release grappelli 2.4 this week (actually, it should have been released last week already).\n. We assume that grappelli-users know how `collectstatic` works.\n. closing this one since it should work with stable/2.4.x ... please reopen the ticket if the problem still exists.\n. @parsch: empty li needs styling\n. I don\u00b4t fully understand your pull-request:\na) the original django templates use a different approach, right?\nb) if we use \"url from future\" and the new url-syntax, why only for a couple of templates (and not all of them)?\n. thanks \u2013 but that doesn\u00b4t really answer my two questions (or I just don\u00b4t get it).\n. Actually, I do have doubts ... because the first file you\u00b4ve changed (delete_selected_confirmation) already throws an error because of \"opts\" ...\n\nand I still don\u00b4t understand why we need \"url from future\" when the original admin interface doesn\u00b4t use it.\n\nsorry for being so sceptical, but your patch doesn\u00b4t seem to be tested.\n. ok. If you send a patch, please use the branch \"stable/2.4.x\" ... thanks! if your patch is tested, we\u00b4ll merge the changes.\n. @michaelmior as said before \u2013 well-tested (!!!) patches are welcome.\n. @michaelmior  please submit a patch against stable/2.4.x ... we\u00b4re about to release a new version within the next couple of days btw.\n. sorry, but I\u00b4m not able to follow \u2013\u00a0what \"a\"-tag are you talking about? which \"JS code\" looks for an \"a\"-tag within the URL? \n\nplease add some details. closing this in the meantime, since it\u00b4s not reproducable with the information given.\n. what do you mean with \"our project main template\"?\n. sorry, I don\u00b4t think I can follow ... you mean the admin interface base-template, right? because grappelli is not supposed to work with anything else than djangos admin interface ... am I missing something?\n. can you send me a screenshot of what you want to achieve?\n\nyou can override that file and add (for example) a top-section ...\n. well, in that case I\u00b4d override base.html ...\n\nI still don\u00b4t fully understand the background of this issue, but (for now) this seems to be a very rare case to me (and therefore, I wouldn\u00b4t support something like that out of the box).\n. did you add the field to your form? it should definitely work with generic relations ...\n. do you see the position-field?\n\nbesides: which version of grappelli and django are you using?\n. it\u00b4s\nsortable_field_name = \"position\"\n\nsee http://django-grappelli.readthedocs.org/en/latest/customization.html#inline-sortables\n\n(please reopen the ticket if it still doesn\u00b4t work)\n. no problem \u2013 seems like a feasible update. however, I don\u00b4t think FeinCMS works with grappelli anway \u2013\u00a0does it?\n. what do you mean with \"the updated tinyMCE\"?\n. you\u00b4re talking about this file, right?\nhttps://github.com/sehmaschine/django-grappelli/blob/stable/2.3.x/grappelli/static/grappelli/tinymce/jscripts/tiny_mce/plugins/paste/pastetext.htm\n. ok \u2013 same plugin.\n. FYI: just released a new version (2.3.9), compatible with django 1.3\n. looks fine to me.\n. sorry ... what do you mean with \"add in the changes\"? they are already added ... the styling is missing for now, but @parsch will update soon.\n. nope, thanks.\n. done (available with 2.4.1).\n. what version of grappelli and filebrowser are you using? we just fixed this issue with the stable-branch ...\n. ok. I\u00b4m closing this since it\u00b4s already fixed. new releases will be available on pypi soon.\n. are you having a screenshot? because I\u00b4m not sure I can follow ... why do you need to scroll if the window size exceeds the popup width? which popup btw? are you talking about add-another?\n. alright, now I see (thanks for the clarification).\n\nI\u00b4m using chrome 21 as well, but I\u00b4m able to see the save-button (no need for scrolling). that being said, the window is too small (about 20 to 40px, I guess). we\u00b4ll take a look at this issue ...\n. @parsch: is this fixed?\n. I\u00b4m having the same setup, but I\u00b4m not able to reproduce this. the file actions.js is being loaded correctly?\n. if this problem still exists with 2.3.9 or 2.4.2, please reopen the ticket. I\u00b4m not able to reproduce this.\n. @DrMeers any idea when/why this happens?\n. @pedrospdc what do you mean with \"couldn\u00b4t handle\"?\n. @DrMeers so you think that 2.3.5 is more compatible with IE8? if so, why?\n. @DrMeers it should already be IE8 compatible (more or less). if you see any issues, please open a new ticket with details. but I\u00b4m not saying that grappelli will ever work perfectly with IE8 (that\u00b4s just not our main goal).\n. grappelli is always developed against the latest official release (which is 1.4.x right now). unfortunately, we don\u00b4t have the resources to always keep up-to-date with djangos master-trunk. therefore, I have to say ... no, django 1.5.x will be supported once it\u00b4s officialy released.\n. if it\u00b4s backwards compatible with 1.4.x, yes. otherwise no (sorry).\n. I would totally support that as well. question is: who\u00b4s going to submit a well\u2013tested patch?\n. can\u00b4t see the screenshot\n. hmm, can\u00b4t reproduce \u2013 looks good with my setup. any details?\n. well, it seems you don\u00b4t have change\u2013permissions!\n. @epicserve: your fix introduces change_url which has been removed with django recently. instead, I\u00b4m going to change the model\u2013list template.\n. the release is already out (2.4.2). just pip upgrade.\n. absolutely \u2013 if it works, we\u00b4ll accept the patch. please patch against stable/2.4.x.\n\nbesides, 2 minutes is a very long time ... how many foreign keys do you have? our test\u2013environment is pretty extensive (esp. with relationships), but I never wait that long (max. 10 seconds with hundreds of inlines).\n. what about this one? https://github.com/yourlabs/django-autocomplete-light \n\nI didn\u00b4t test it ...\n. @BertrandBordage problem with django-ajax-selects: generic relations are missing.\n. I\u00b4m open to patches ... \n. @BertrandBordage I\u00b4ve added your changes to stable/2.4.x and I\u00b4m currently trying to cleanup the code ... can you explain why exactly you\u00b4ve chosen the given functions? e.g., any reason why you\u00b4re working with a function search_term, but without any filtering function (instead the filters are part of get_queryset)? More generally speaking, can you please explain your code ... thx.\n. see #239\n. the latest release is 2.4.1 (pypi).\n2.4.2 is the version of the master\u2013branch (next release, current development version).\nso, this looks fine to me ...\n\nconcerning the js, there shouldn\u00b4t be any difference between 2.4.1 and 2.4.2 \u2013 if you\u00b4re seeing any errors, please open another ticket. thanks.\n. @parsch: please take a look at this. the link to \"password reset\" needs to be styled and of course the reset\u2013form as well.\n. @camilonova pypi will be updated once the next release is due.\n. if django doesn\u00b4t support this, how could we add it (without using the python\u2013part of djangos admin interface)?\n. problem is ... the diff refers to options.py (a file which is not part of grappelli). I\u00b4ll take a closer look, but I don\u00b4t think it\u00b4s possible (although I like to see the feature as well).\n. I think anyone can send a patch \u2013 if you add tests, chances are much better though.\n. closing this ticket for now (because it\u00b4s mainly related to django and not to grappelli), although I\u00b4d love to see this feature.\n. Are you sure you\u00b4ve cleared the cache and you\u00b4re loading the right files?\nbecause I\u00b4m not able to reproduce this (and I\u00b4m pretty sure this bug doesn\u00b4t exist).\n. I\u00b4ve checked again and I\u00b4m not able to reproduce this ... please re\u2013open the ticket if you think it\u00b4s a bug.\n. I\u00b4m using staticpatterns, but I\u00b4m still not able to reproduce this.\n\n@philwo you\u00b4re saying that grappellis jquery.js doesn\u00b4t get loaded. if that\u00b4s the case, there\u00b4s a lot of functionality which doesn\u00b4t work, right (e.g. autocompletes)? basically, not much of the admin will work as expected ... \n. since we\u00b4re about to do a new release, it\u00b4d be nice to solve this issue ... \n1. it seems that STATICFILES_FINDERS is not being used with runserver (I\u00b4m able to reproduce that).\n2. still, I\u00b4m not able to get django override the grappelli files (unless I\u00b4m adding \"django.contrib.admin\" before \"grappelli\" with INSTALLED_APPS).\n\nany additional information is helpful ... thx.\n. @maffacow since I\u00b4ve never been able to reproduce this issue, I need to rely on feedback. so far, I\u00b4m not sure what a \"fix\" could be ... \n. well ... you can debug, find the issue (if it actually exists) and submit a pull\u2013request. that\u00b4s the most straightforward way to solve it.\n. @ulmus that's a good point \u2013 we'll update the docs with that info.\n. @idboehman thanks for the hint, but I'm very certain that GRAPPELLI_INDEX_DASHBOARD is not related to the actions whatsoever. My guess is that this issue is caused by caching (could be browser\u2013cache, could be old .pyc\u2013files).\n. @zzart if you need a symlink there\u00b4s something wrong with your staticfiles setup ... all staticfiles should be found automatically when doing collectstatic.\n\n@tufelkinder djangos built\u2013in jquery is overriden by grappelli (there is no content with jquery.min.js).\n. @grafa but the file /static/admin/js/jquery.js is empty, see\nhttps://github.com/sehmaschine/django-grappelli/blob/master/grappelli/static/admin/js/jquery.js\n\nanother idea \u2013\u00a0did you try running collectstatic with ignoring the original admin\u2013files?\npython manage.py collectstatic --ignore django.contrib.admin\n. @sdillinger well, haven't been able to reproduce this for 2+ years. I'm pretty sure this is not related to grappelli but your server/django setup.\n. @myii Thanks a lot for the research and the very detailed explanation. What you're saying makes sense indeed (still funny that I've never run across this issue with any projects we did).\n. see #791 . @BertrandBordage about the french locale: grappelli doesn\u00b4t include any translations (this all comes with django). the other changes look fine to me ... but why do you want to pull to master (instead of stable/2.4.x)?\n. about the translations: yes, you\u00b4re right \u2013 there are some strings not available with django.contrib.admin. on the other hand, adding translations means using transifex, managing that project et.al. ... but we rather concentrate on improving grappelli (not enough resources to do translations as well).\n. I\u00b4ve fixed the issue with id\u00b4s and autocompletes. we won\u00b4t add translations to grappelli and I\u00b4ve decided to not take action concerning the datepicker\u2013issue (waiting for a cleaner patch for that one). thanks!\n. what is django-autocomplete-light?\n. updated \u2013 please let me know if that works for you.\n. stable/x.x.x > release > master\n. @parsch: what do you think? IMO, we can\u00b4t support every 3rd\u2013party app (not until there\u00b4s an established Frontend\u2013Framework with consistent classes and styles with the vanilla admin theme). on the other hand, adding this one additional style is fine with me ...\n. thx. added to stable/3.4.x and fixed some missing urls.\n. @michaelmior no problem and thanks for the patch.\n. already fixed with stable/3.4.x\n. the \"releases\" section on github front (https://github.com/sehmaschine/django-grappelli) says 2.3.9 is the latest release for 2.3. \n\nthe latest release on pypi is 2.3.9 as well ...\n\nwhat do you mean with \"the Zip button to download an archive for the 2_3 branch\" ... can you give me a link/url?\n. now I see \u2013 you\u00b4re using the \"wrong\" branch. grappelli_2_3 is a dev branch, stable/2.3.x is the right one \u2013\u00a0besides, using pypi is always recommended.\n. you\u00b4re right \u2013 that should be more obvious. I\u00b4ll open a ticket.\n. done\n. please use the google\u2013group for asking questions. this is an issue tracker. thx.\n\nabout your question: it depends on what you mean with \"navigation\" ... grappelli.dashboard adds the ability to use a custom index dashboard (which needs to be defined, see the docs for that).\n. that navigation needs to be customized (we removed it with previous versions of grappelli).\n. well \u2013 I\u00b4d personally use a list (ul) and add it to the header\u2013area.\n. no, I don\u00b4t mind ... but the line you\u00b4re referring to is the same with the django admin interface. not sure what\u00b4s the problem here. do you have an idea?\n. closing this for now. please reopen with more details. thx.\n. first question: how can I reproduce this? my models are never sorted arbitrary.\nsecond: the point with a model\u2013list is to show models _independent_ or their names. what if I want a different ordering? currently, I can order my models with giving them a different position ...\n. sorry, but I still don\u00b4t get it \u2013 can you tell me how I\u00b4m able to reproduce this issue? my models are never being sorted randomly but based on their position.\n. I mean the position within the tuple:\nmodels=('django.contrib.auth.models.User', 'django.contrib.auth.models.Group'),\n\ninstead of:\nmodels=('django.contrib.*',),\n\nIMO, that\u00b4s the point of using a modellist (otherwise, an applist is probably better).\n. is this still an issue?\n. @phretor that\u00b4s strange. I just checked again and both your examples work fine with my setup. are you sure your models are references with e.g. \"academic.publishing.ConferenceArticle\" instead of something like \"academic.publishing.models.ConferenceArticle\"? whatever reason, this should definitely work (and it always has with my projects).\n. When looking at the code at bitbucket, I think you should use academic.publishing.models.ConferenceArticle ... any reason you don\u00b4t use \"models\"?\n\nWhen you check admin.py, you see that the models are imported with\nfrom academic.publishing.models import *\n. @phretor yeah!\n. guess that issue is solved, right? please reopen or add a new issue if you\u00b4re still having problems with sorting models \u2013\u00a0it should work tas explained by phretor above.\n. should already be solved with stable/2.4.x ... new release on pypi coming soon.\n. already solved with stable/3.4.x ... release coming soon.\n. are you sure the styles/templates are properly loaded? because I\u00b4m not able to reproduce that screenshot with IE9 ... that\u00b4s IE8, right?\n. @lvelezsantos what \"problems mentioned above\"? kenricci (who opened the ticket) obviously solved the problem and it was some kind of setup\u2013issue (or mis\u2013installation). so, there\u00b4s nothing we can actually refer to.\n. please add a new ticket with a more detailed description if the problem still exists.\n. I\u00b4ve added your code to stable/2.4.x, though we\u00b4re now having an issue with autocomplete\u2013lookups if nothing is found. I\u00b4ll check that.\n. @BertrandBordage Sorry, I\u00b4m trying to rephrase. I need to know if any of the methods you defined is important for overriding stuff (either for you, personally, or based on your idea of how the classes should work on a purely theoretical level). Let\u00b4s take \"model_in_GET\" ... needed for a specific reason or just a personal decision? Could we distinguish between helper\u2013methods (e.g. model_in_GET) and methods which could/should be overriden (e.g. get_queryset)? IMO, something like public/private functions would help for naming the methods and clarify the behaviour. Do you know what I mean?\n\nBesides, FILTER and SEARCH is not being splitted with autocompletes (filter is part of get_queryset) ... any reason that filter is not a separate method?  \n. fixed with stable/2.4.x\n. @parsch can you take a look at this one?\n. supporting django-mptt is definitely planned, but I need to take a closer look at the possible issues. supporting FeinCMS is not planned though.\n. I\u00b4ve been taking a look at django\u2013mptt. Integration with Grappelli is easy (we just need to add 2 simple templates), but it\u00b4ll never look nice because of this:\n\nhttps://github.com/django-mptt/django-mptt/blob/master/mptt/templatetags/mptt_admin.py#L102\n\nhardcoded margin with python-code. WTF!\n. there should be a class instead of the hardcoded padding. if the guys over at django\u2013mptt will change this, integration with grappelli is easy.\n. Here\u00b4s a workaround: see https://gist.github.com/4452240\n\nI\u00b4m closing this ticket for now. If the guys doing django\u2013mptt will remove the paddings from python code, we\u00b4ll support mptt.\n. did you check the tinymce setup? did you add/remove valid elements to show the player?\n\nplease refer to the tinymce docs in order to resolve this issue. I\u00b4m pretty sure it\u00b4s not related to grappelli ... feel free to reopen this ticket (with additional information) if you think it\u00b4s a grappelli\u2013related bug.\n. change the background with css\nadd a logo with using a custom header\noverriding grappelli\u2013templates works exactly like overriding django\u2013templates (of course, it depends on the position of your template\u2013loaders).\n. which version of grappelli are you using?\n. thx, I\u00b4ll look into that.\n. Thanks \u2013 that looks good. Any reason you wanna merge to master instead of stable/2.4.x?\n. Sorry for being so skeptical, but what are all these commits? Is it possible you\u00b4re just sending your own changes? Otherwise I can still cherry\u2013pick your updates ...\n. awesome \u2013 thx a lot.\n. that\u00b4s already solved ... see stable/2.4.x\n. Thanks for the effort, but we don\u00b4t support translations with grappelli (if we do, we need to use Transifex and that\u00b4s just too much work for a couple of translatable lines). Another reason we don\u00b4t add TinyMCE language files is that we plan to use another editor as soon as possible ... sorry!\n. Where did you find translations?\nI personally would like to switch to Redactor, but the editor still produces strange HTML. I never liked CKEditor, but the current theme looks really nice. Main problem is: With every update of TinyMCE, we need to update all the plugins because of the look & feel.\n. Alright \u2013 I forgot that we have these translations. In that case, I\u00b4m going to add your translations (of course). Though it\u00b4d be helpful if you patch against stable/2.4.x (not master).\n\nUnfortunately, Redactor currently just looks impressive \u2013 but it behaves pretty annoying.\n. Yes. The only problem I see is when the changelist is paginated. How would you solve that? How can I move an item from page 2 to page 1?\n. IMO we should not add a feature if it doesn\u00b4t fully work. I can already hear clients calling asking how to reorder with pagination activated. However, I do like the feature and if we find a decent solution, I\u00b4m definitely +1. From my point of view, the limitation is serious since you\u00b4re not able to re\u2013position an element from one page to another ...\n. I just realized there\u00b4s a setting list_max_show_all since Django 1.4 (see https://docs.djangoproject.com/en/1.4/ref/contrib/admin/#django.contrib.admin.ModelAdmin.list_max_show_all). I guess it only makes sense to reorder a manageable amount of items. And with the given option, one could still click on \"Show All\" in order to rearrange items which haven previously been on different pages.\n\nTherefore, I\u00b4m accepting a patch (please use stable/2.4.x for pull\u2013requests).\nBut the behaviour needs to be similar with inlines (no extra js with ModelAdmin).\n. @brejoc Are you working on this one? Otherwise, I'm going to close the ticket.\n. fixed with stable/2.4.x\n. closing this since no useful explanation is given.\n. this is an issue tracker ... please use the google\u2013group for asking questions. thx.\n. you\u00b4re working with django 1.6 while django 1.5 is not yet released?\n. alright, I see. is your pull\u2013request backwards\u2013compatible?\n. fixed with stable/2.4.x\n. how is this solved with the original admin interface? do they use get_short_name?\n\nand: please patch against stable/2.4.x (not master).\n. Thanks for looking into that.\n. that change is not backwards\u2013compatible with 1.4 ...\n. should be solved with stable/2.4.x\n. No, there currently isn\u00b4t (though it should be a matter of minutes setting up grappelli with an existing django project). However, we might add a live demo soon.\n. we decided that this is out of scope. besides, there's no need (at least not for us) to advertise the project.\n. I see your point ... but while you don't have the time to research the benefits, we don't have the time to setup and maintain a demo site (that said, I guess researching the benefits is less time-consuming).\n. Not sure about that one since it's fairly easy to use grappelli with an existing project. So you just need to setup a project and install grappelli.\n\nHowever, you could use the model available with grappelli/tests in order to work on this feature. If you send a PR I'm happy to review.\n. @doganmeh a grid-based look & feel is definitely not a standard feature (django doesn't care at all about the UI).\n. shouldn\u00b4t that be:\n\ntry:\n    from django.conf.urls.defaults import *\nexcept ImportError:\n    from django.conf.urls import *\n\notherwise, it\u00b4s backwards\u2013incompatible, right? \n. fixed with stable/2.4.x\n. say I\u00b4m using \"name__icontains\" for my autocomplete lookups and I\u00b4m having numerous db\u2013rows with the same name ... why should I only see \"distinct\" values?\n. thx. fixed with stable/2.4.x\n. Thanks for pointing this out. Mobile is definitely in discussion, though part of a bigger strategy on how we\u00b4ll develop Grappelli in the future. Currently we\u00b4re trying to fix as many limitations (caused by the original admin interface) as possible with Grappelli. However, this is tedious and time\u2013consuming.\n\nOur idea is to implement a frontend framework with the admin interface based on a fixed and updated foundation (talking about django.contrib.admin). Once the main issues are solved, we can get rid of all workarounds and invest more time for important issues like mobile browsers. Until then, we don\u00b4t have the ressources to do that work.\n\nThat being said, we do accept patches ... \n. thanks \u2013 we\u00b4ll take a look.\n. see #274\n. fixed with stable/2.4.x ... somehow it seems that GitHub doesn\u00b4t accept commits with \"fixed #xxx\" anymore.\n. that needs to be added to model_list as well, right?\n. in order to reproduce this \u2013\u00a0where do I actually add the code you\u00b4ve mentioned above? models, admin, ...?\n. just tested \u2013 IMO the trans templatetag should also be used with model.title (with app_list) and child.title (with model_list). otherwise, there\u00b4s no translation. on the other hand, I might not fully understand what you\u00b4re actually trying to translate (app title, model title, both)?\n. there\u00b4s a difference: with using the dashboard, you can easily translate the app\u2013name with the dashboard title (which is not possible when using the standard template). so I\u00b4m not sure this change has any benefits ... does it?\n\nbesides, when translating the app\u2013name with the dashboard template, why not also translate the model names?\n. Now I\u00b4ve got it \u2013 sorry! And thanks for the explanation.\n. @parsch fixed?\n. fixed with stable/2.4.x\n. you\u00b4re talking about a textfield (not a foreign key), right?\n\nbesides \u2013 why are you using mark_safe? this could obviously break the layout depending on the content of your textfield.\n. @parsch any idea?\n. did you check stable/2.4.x ... isn\u00b4t that already solved?\nsecond question: that\u00b4s a non\u2013backwards compatible change, right? so this is related to django 1.6?\n. there should be a button \"X\" on the right\u2013hand side of each row (the checkbox is hidden). do you have the permissions to delete the items?\n. what do you mean with \"delete the row\"? what if you just made a mistake (e.g. clicking the wrong row)?\n. 1. let\u00b4s say you hide the row (but that was a mistake). what do you do? reload the page?\n2. hiding the row suggests that the record is being deleted immediately (and that you don\u00b4t need to press \"save\").\n. you\u00b4re kidding, right?\n. @parsch what do you think? I\u00b4d go with the current solution and I don\u00b4t see the need to change this.\n. closing this for now. IMO the proposed solution has no benefits.\n. please send your model (the relevant part) and the admin definition. thx.\n. There\u00b4s not attribute columns with the Dashboard (see the grappelli docs for more details). Use the attribute columns with the dashboard\u2013module.\n. since grappelli is only a skin, that\u00b4s more of a django issue, right?\n. Alright, closing this for now.\n. @parsch you might want to look at this. I personally don\u00b4t like using the resize\u2013icon for showing the pagebreak.\n. what exactly is the usecase for text\u2013align and font\u2013colors? this is better done with using classes, isn\u00b4t it? I know we could just add this ... on the other hand, I don\u00b4t think there\u00b4s a good reason these buttons should ever (ever!) be present with a text editor.\n\nhowever, I\u00b4m open to conviction.\n. see #214\n. thx. could you patch against stable/2.4.x or is it too complicated? otherwise I\u00b4m trying to cherry\u2013pick your changes.\n. I might be missing something, but what exactly is the \"problem\" you\u00b4ve mentioned? Using an integer field for an ID is the way to go, right? Should we change the docs?\n. @paramburu yes, you are right \u2013\u00a0we\u00b4ll take a look.\n\n@parsch might be easy to solve with adding input.vTextField and textarea.vLargeTextField to the fields we need to hide via css.\n. seems to work with charfields, does not work with textareas.\n. @parsch works now, but after selecting an item from a pop\u2013up the screen jumps to top ... with fk and m2m as well. this didn\u00b4t happen before.\n. works for me. fixed with stable/2.4.x\n. thanks, but that\u00b4s the totally wrong branch. please user either stable/2.4.x or master.\n. fixed in stable/2.4.x\n. thx, good point. with the \"new version of Django\" you\u00b4re referring to what exactly? upcoming 1.5 or 1.6 (dev)?\n. How exactly is this related to Grappelli?\n. @Hedde it has to be the other way round \u2013\u00a0FeinCMS needs to be based on Grappelli if both apps should work nicely with each other.\n. fixed with stable/2.4.x\n. fixed with stable/2.4.x\n. Hard to say \u2013\u00a0I suggest using print\u2013statements with the related lookup view and/or the js, trying to find out why the app_label and model_name is missing. Looks weird and shouldn't happen.\n. just a guess \u2013 is it possible that the term \"condition\" causes the error. did you try to rename the field?\n\nbesides, could you send me the code to my email address (incl. models.py, admin.py)?\n. thanks for clarifying.\n. fixed with stable/2.4.x\n. fixed with stable/2.4.x\n. The google\u2013group ist a better place to ask questions. However, if this should happen it needs to be the other way round ... Django\u2013CMS has to be based on Grappelli, using the right classes and DOM (see Grappellis DOM docs).\n. fixed with stable/2.4.x\n. thanks for the patch ... fixed with stable/2.4.x\n. already fixed.\n. which version of django, which version of grappelli? does it work with raw\u2013id\u2013fields?\n. ok, thanks \u2013\u00a0I'll take a look. if you have any additional info, please let me know.\n. just tested this and it works fine for me.\n. yes, just to be sure. and please add your admin config. besides, do you get any js errors?\n. did you try with grappelli 2.4.4 (the latest version)?\n. closing this since the last comment is 3 months old and additional information is missing.\n. already solved with stable/2.4.x\n. already solved with stable/2.4.x \u2013\u00a0we'll release a new version soon.\n. if we look at djangos setup.py it should be:\n\n'Programming Language :: Python',\n'Programming Language :: Python :: 2.6',\n'Programming Language :: Python :: 2.7',\n'Programming Language :: Python :: 3.2',\n'Programming Language :: Python :: 3.3',\n\nright?\n. already committed. thanks for the hint.\n. please reopen with a useful description of the problem \u2013 you\u00b4re saying that \"grappelli is not compatible with django 1.5\", but that\u00b4s wrong. please add comprehensible details. thank you!\n. it seems that you didn\u00b4t follow the installation steps:\nhttps://django-grappelli.readthedocs.org/en/2.4.4/quickstart.html\n\nthere\u00b4s definitely no bug here! please use the grappelli google\u2013group for asking questions ... thanks!\n. you are right \u2013\u00a0we didn\u00b4t yet find a way to translate the datepicker.\n. the django datepicker is extremely hard to style and we're using jqueryUI anway. that being said, it _should_ (theoretically) be possible to get the defined language and change the datepickers language \u2013 it's definitely possible with using a custom base template.\n\nI'm sorry ... I know this is not a satisfying answer. but it's already a lot of work dealing with all the strange code of the original interface.\n. the same is true for autocomplete generic lookups when content_type is defined with radio_fields ... right?\n. fixed with stable/2.4.x (merged to master)\n. sorry, but grappelli\u2013safe is not developed or maintained by us ... I guess you need to talk to the people doing mezzanine.\n. the .editorconfig looks good to me although I'd go with spaces (instead of tabs) for scss\u2013files as well \u2014 I just did a quick check and could not find any files with tabs ...\n\na pull request is very much appreciated.\n. I'm sorry, but I'm not able to merge this pull\u2013request ... \n. it's a merging issue because of the updates we made recently.\n. usually it's the latest development branch we're using (e.g. stable/2.4.x), but currently you can use master since everything's merged.\n. did you send the new pull\u2013request?\n. closing this for now, since there doesn't seem to be a usable pull\u2013request. please open a new issue if you're working on this one.\n. @jaap3 thanks for the heads up. I'll take a look and let you know if it works (or not).\n. please use the google\u2013group for asking questions. thank you.\n. Is that also the case with Django 1.5 or only with django\u2013master (because we only support official django releases).\n. please use the google\u2013groups for asking questions. If you think this is a bug with grappelli, please reopen the ticket with a detailed explanation on what's wrong. thx.\n. @BertrandBordage it works fine with our testcases and the class should be there (see https://github.com/sehmaschine/django-grappelli/blob/master/grappelli/static/grappelli/js/jquery.grp_related_fk.js#L22). are you sure you're having the right version installed?\n. thx. I've removed the URLs and changed the hosting mode.\n. I guess there's something wrong with your setup on the position\u2013field, because I'm not able to reproduce this. can you send your models and modeladmins?\n. closing this \u2013 please reopen with detailed information if you think this is a bug.\n. good point.\n. looking at the code (at github) there does not seem to be any .DS_store files ... ???\n. so how do I remove these files then?\n. tinymce does not include that css\u2013file, so we'll remove it from the template.\n. why do you add a template to /admin/constance/ instead of /constance/ ... that looks a bit strange to me ... ???\n. I see ... not a good idea to put the templates there, but not much we can do about that I guess. will merge soon. thanks for the pull\u2013request.\n. @hellysmile just checked your template and it does not seem to follow the way grappelli templates are built ... I'm trying to fix this (but it might take a while).\n. Why don't you add related_label to the model containing the ContentType reference?\n. Your PageObject does not have a name nor an app_label, therefore\n\n```\nreturn force_text(\"%s:%s\" % (self.name, self.app_label))\n```\n\ndoes not return anything ... \n. Did you try to debug in order to see what _exactly_ is happening? I assume you need to use content_object (or content, in your case), but I didn\u00b4t test that obviously.\n. There might be a misunderstanding: related_label refers to how selected items are being displayed (e.g. within an autocomplete\u2013field or a raw\u2013id\u2013field). It does not refer to the content\u2013type dropdown (changing that dropdown is not related to grappelli).\n. what exactly do you mean? activating the admin for related lookups?\n. generally speaking, we don't duplicate the django\u2013docs. this is needed for the original admin to work (not only for grappelli), so I'm not sure we should add this ... we have to assume people now how to deal with the original admin when using grappelli.\n. I see your point ... however, it's stated clearly with the docs that autocompletes are an alternative for related lookups. And you need to register both models with every kind of relationship when using django.contrib.admin.\n\nThat being said, I'll add a short note with the docs.\n. Did you add the module to your Dashboard?\n. yes, you should do that \u2013\u00a0it's in the docs (see grappelli.dashboard).\n. I though you closed it ... I just closed the ticket ... ???\n. I see \u2013 thanks for the pull\u2013request (reopened).\n. that's a backwards\u2013incompatible change with django 1.6, right?\n. Thanks. We won't fix this with the upcoming release (since we only support official releases of Django). However, if someone adds a backwards\u2013compatible patch, I'm fine with implementing this.\n. that should already be solved, see\nhttps://github.com/sehmaschine/django-grappelli/blob/master/grappelli/templates/admin/edit_inline/stacked.html#L45\n\nIf you still see this issue, please reopen the ticket.\n. @BertrandBordage That's a good point. I personally don't see inlines \"moving\", but that's probably because my admin pages are loading pretty fast. Theoretically speaking, I like the suggested solution because we get rid of the JS. But I'm not sure about the actual implementation with something like `fieldsets_and_inlines_order = ('f', 'i', 'i')` ...  it's just not obvious what happens and which 'i' I'm referring to. Any ideas on how this could be improved?\n. are you interested in updating your patch in order to support a more verbose kind of rearrangement?\nI'm thinking about something like this:\n\n```\n(\"Some Fieldset\", {\n    \"classes\": (\"grp-collapse grp-open\",),\n    \"fields\": (\"whatever\",)\n}),\n(\"Image Inlines\", {\"inline\": \"ImagesInline\"),\n(\"Another Fieldset\", {\n    \"classes\": (\"grp-collapse grp-open\",),\n    \"fields\": (\"whatever\",)\n}),\n```\n. There is an example with the docs. You need a class `placeholder` and a 2nd class which matches the class of the inline-group (which depends on your fieldsets). If you have an inline `images` the class would probably be `images-group`.\r\n\r\nBesides, please use the google-group for asking questions (it\u00b4s more likely to get an answer there).. http://skin.tinymce.com\n. you need to use the grp\u2013prefix, so it's e.g. grp-collapse ... but please use the google-group for asking questions.\n. grappelli respects limit_choices_to which works fine with our testcases. if you think there's a bug, please reopen this ticket with additional details (models, ModelAdmin ... grappelli/django version etc etc). if this is a question (I'm actually not sure about it), please use the google\u2013group.\n. I'm sorry if I'm not able to follow ... so we're not talking about limit_choices_to but only queryset, right?\n. I'm +1 on fixing this \u2013 can you support an example (models.py, ModelAdmin, ...)?\n. Nope ... code snippets are fine (just to get the basic idea in order to construct a testcase). As simple as possible!\n. alright, thanks a lot. What I tried is to restrict the class RelateLookup (line 51), because this is what AutocompleteLookup relies on, but it does not seem to work. Will dig in deeper tomorrow (time to go to bed around here).\n. I'm actually not sure how to solve this. Theoretically speaking, we need to check for a method queryset, defined with ModelAdmin. Therefore, we have to find the registered ModelAdmin first ... and in order to get the ModelAdmin, we need to know which AdminSite we're currently using (because we cannot assume the model is registered with `django.contrib.admin`).\n1. Find current `AdminSite`\n2. check `_registry` for the model\n3. This gives us the correct `ModelAdmin`\n4. check if queryset is defined (if not, use the default manager)\n\nAny help is appreciated.\n. This should work ... the only issue left is figuring out the current `AdminSite` ...\n\n```\ntry:\n    # See if there is a custom admin queryset\n    return admin_site._registry[self.model].queryset(self.request)\nexcept:\n    # If not, go with the default manager\n    return self.model._default_manager.all()\n```\n. @rcooke with my testcase, if I'm using `model.queryset(request)` it does not work ... because `model` has no idea about `ModelAdmin` (but the custom queryset is defined with `ModelAdmin`). Besides, `ModelAdmin` is registered with a specific admin site (not necessarily `django.contrib.admin`) and that's why I try to get the current admin site. Are your sure that `model.queryset(request` works with your setup? I'm really surprised about that ...\n. IMO, we cannot assume people use the default admin site. I think the only way to find out which is the current admin site is via URLs ... and it shouldn't matter if a model is registered with several sites (because each `ModelAdmin` could have a different custom queryset). From my point of view, the second problem is exactly the same as the first one. Once we have the current admin site, we also have the right queryset.\n. That's what I'm talking about ... we need to check the URL (request.path) and the admin site associated with that specific URL (no GET parameters involved here). Unfortunately, with `current_app` (see django.contrib.admin), we only get the `name` of the admin site.\n. Question is, how do we get this list of admin sites ... because I didn't find a way except manually adding a list of admin sites to settings (which is not a good solution).\n. @rcooke are you still working on this issue?\n. see #403 \n. @rockymeza sorry ... thought this is backwards\u2013incompatible.\n. Sorry, but I'm not able to follow that pull request. Your 2nd paragraph says \"The \"<\" character shouldn't ever be in the label\" ... to me, that sounds like you're seeing an \"<\" character, but it doesn't show up on your screenshots. Am I missing something?\n. now I see \u2013 thanks for the clarification. I'll update later today.\n. please use the google\u2013group for asking questions. this is an issue tracker! thanks.\n. my thoughts on the mentioned ideas:\n- replacing icons with a decent webfont is a good idea\n- concerning the dashboard: we'll probably change the header\u2013area a bit with the next major release of grappelli. so your dashboard screenshot is something we currently cannot consider.\n- notifications etc: see previous. we should add the styles for adding this, but we definitely won't add the actual implementation.\n- sidebar: the alternate sidebar should already be possible with the current grappelli\u2013styles.\n- changelist: not sure what this screenshot should tell us \u2013 looks like a standard changelist to me.\n- +1 for adding tabs.\n. please use the google\u2013group for asking questions! this is an ISSUE TRACKER!!!\n. please check the contribution guidelines and reopen the issue \u2013\u00a0thanks.\n. thanks for the patch \u2013\u00a0looks good to me. can you add another usecase besides the one mentioned? because I'm not sure if we should add this if it only covers this (very rare) case.\n. alright \u2013\u00a0I'm currently +1, but let me think about this for another day ;-)\n. let's do this. a pull\u2013request is highly appreciated (including documentation updates).\n. @arski There's gonna be another grappelli\u2013release pretty soon (just some minor fixes). If you send a pull\u2013request, I'll add it to the release.\n. thanks for the patch. IMO this should be done with overriding the template (see django\u2013docs on how to customize admin templates), because we just can't support every single usecase and overriding templates is an easy and straightforward solution. \n. any idea on how to make that update backwards compatible?\n. that\u00b4s fine, thanks.\n. smart_bytes is not available with django1.4\n. That was just a reminder for myself to update the grappelli docs, saying that at least django 1.4.2 is required. Since we have supported Django 1.4+ so far, I need to mention that. But of course you are right that 1.4.0 and 1.4.1 should not be used anymore.\n. @parsch clicking on a datepicker throws a 404:\n\"NetworkError: 404 NOT FOUND - .../static/grappelli/jquery/ui/css/custom-theme/images/ui-bg_glass_0_CEE9F2_1x400.png\"\n. Thx for the pull\u2013request. When using this code I'm getting Invalid filter: 'admin_urlquote' ... which version of django did you use?\n. see #395\n. that has already been solved with 2.4.7.\nbesides, your pull\u2013request misses the stacked inlines.\n\nplease reopen this ticket if I'm wrong ...\n. did you test without grappelli? because that js comes with django. \n. hi bryan,\n\nunfortunately, that image you posted is not visible \u2013 I'm getting a 404.\n\nregards,\npatrick\n. that\u00b4s strange. just a guess: if you add an app with `INSTALLED_APPS`, did you add _exactly_ the same path with your dashboard and your admin registration? e.g., you could have `www.blog` with `INSTALLED_APPS` and you could just add `blog` when you register your admin model and you could again add `www.blog` with the dashboard ... that might not work.\n. you do have the necessary permissions for music, right?\n\nyou could try this (just to see if it is working):\n\n```\nmodels=('components.merchandise.music.models.XXX',),\n```\n\nother than that, I really don't have an idea \u2013\u00a0I usually use the exact same code. of course, you could try to debug with dashboard.modules.AppList (a simple print statement should be sufficient).\n. @bryanveloso ok, so I did a couple of tests with either `AppList` and `ModelList` \u2014 it doesn't matter if I use several single models or if I use `components.merchandise.*` or `components.merchandise.music.*`, it all works. the only issue I had is when the app added with dashboard is named differently than with INSTALLED_APP \u2014 other than that I haven't been able to reproduce this.\n. closing this for now \u2013 if you think this is a bug, please reopen with additional information.\n. Thanks for the pull\u2013request.\n\nI'm having a couple of issues here:\n\n1) If I add an Inline and then drag it to another position, TinyMCE seems to react strange (I'm not able to insert text anymore).\n2) When having an Inline with just a textarea and a position\u2013field, the position is not being updated, because line 245 of stacked.html (var fields=...) does not include TinyMCE.\n\nAny ideas how to solve this?\n. closing this since the PR is pretty old ... please add a new PR if you still work on this issue.\n. closing this, because the authority templates are quite a mess.\n. of course, using sessions does not work \u2013 instead we use the cache framework. because the key has to be the path to the current site, this is limited to showing _one_ additional user, but I guess that's fine for now. seeing another user viewing/editing the site should be enough of a warning. we just want to make sure an editor knows about another editor currently online.\n. https://github.com/django/django/commit/389892aae595b86c4be28c43e3312d76a68a0173\n. @bryanveloso I've added a quick fix. But please note that grappelli is not yet compatible with Django 1.6 \u2014 there's a lot of backwards-incompatible changes (esp. with admin templates). Therefore, we need to do a new major release. Quickly looking through all the necessary changes, I doubt that this will happen within the next couple of weeks. \n. @bryanveloso yes \u2026 there's only two things you need to check: a) the new approach for defining \"view on site\" doesn't work with the current version of grappelli and b) preserve_filters doesn't work as well.\n. fixed with master\n. see #396 \n. @parsch please take a look at this one (needs to be styled).\n. @brenouchoa absolutely. coming today!\n. @dmrz thanks a lot for the pull\u2013request, but please use branch stable/2.5.x for everything related to Django 1.6.\n. @lzanuz thanks!\n. @lzanuz and \u2026 thanks again!\n. @lzanuz thanks \u2026 the template changes are already solved (see branch stable/2.5.x). concerning the widgets, I've opened a separate ticket.\n. all 1.6 compatibility issues should now be solved with branch stable/2.5.x (pypi release coming later today)\n. https://docs.djangoproject.com/en/dev/ref/forms/widgets/#numberinput\nhttps://docs.djangoproject.com/en/dev/ref/forms/widgets/#emailinput\nhttps://docs.djangoproject.com/en/dev/ref/forms/widgets/#urlinput\n. @parsch moreover, with a changelist and list\u2013editables, the URLField is wrapped with p.url which adds margins at the top/bottom (these margins/paddings need to be removed).\n. @pnovotnak because you mentioned mezzanine: please note that mezzanine relies on a pretty outdated version of grappelli and they are using a separate branch.\n. @tdruez there is no help_text with the django templates, is there?\n. I see \u2013 thanks for the clarification.\n. @rcooke filters are not handled by grappelli, but by django. we don't customise anything here.\n. @pauloxnet did you do any tests? does it work? can you add a testcase?\n. @pauloxnet I'm sorry, but I won't merge this without tests ... but thanks for the patch anyway.\n. how does that test relate to your pull-request? I think we need a modeladmin with a custom queryset, don't we? In my opinion, there needs to be a new (or at least extended) testcase.\n\nbesides, your pull-reqeust does not work if models are registered with several admin sites, does it? when you take a look at my first comment, you'll see that my proposal includes adding the model_admin to the ajax-call. that's because (in my opinion) we cannot rely on registry to provide us with the correct modeladmin.\n. a) yes, modeladmin has get_queryset but we don't have testcases for that option. that's exactly what I'm talking about ... we need tests to cover that option. of course, these tests are currently not necessary since we don't support custom querysets (but a pull-request should include the tests).\nb) just by looking at the code, I think your pull-request does not work with several admin sites ... but I'm not sure since we don't have a testcase.\n. see https://gist.github.com/sehmaschine/41747752e56e2723368a409feb3cbd5c\r\n\r\nthe changes are in lines 21, 76-81 and 96-98.\r\n\r\nIt\u00b4s actually a pretty easy workaround, but (in my opinion) it does not work with multiple/custom admin sites since we only check the contrib.admin registry. I'm not sure how we could solve this and I'm currently unable to add a testcase. As said before, if someone comes up with a working and tested solution, I'm more than happy to merge it.\r\n. sorry, but I'm not able to follow \u2026 what exactly is the bug/issue?\n. should it? if yes, why?\n\nI still don't see what the bug/issue is \u2026 is this limited to your personal/custom usecase or valid for anybody?\n. let me put it this way: why do you use an onclick attribute anyway? isn't it better to use something like .bind(\"click\", \u2026).\n. hmm, alright \u2013 since it won't break anything I'll update. thanks for reporting.\n. grappelli 2.4.8 (compatible with django 1.5) does not include firstof from future, grappelli 2.5.0 (compatible with django 1.6) does.\n. that\u00b4s another issue now, right? could you please open a new ticket?\n\nthe README doesn\u00b4t need to be updated since grappelli 2.4.8 is supposed to work with django 1.4 and 1.5.\n. I'm not able to reproduce this issue. {% now \"Z\" %} should work with django 1.4/1.5 and 1.6, although django only uses it with the admin interface from 1.7 \u2026 however, this should not throw an error.\n\nare you able to add any details?\n. @foxx alright, thanks for clarifying.\n. sorry, but I'm not able to follow \u2026 what exactly is the bug?\n\nwe have recently updated jquery/jquery-ui but decided to keep the old files (js, css) because people might have used these files for customizations.\n. now I see \u2013 thanks for clarifying. that's a bug indeed.\n. what exactly is the \"improvement\"?\n\nI didn't check order_with_respect_to for quite a while, but it has been there from the very beginning \u2013 but it actually never worked correctly (or at least the way it's supposed to work). Besides, you can just use \"_order\" as your sortable_field \u2026 so I'm not sure what exactly we should change with grappelli.\n\nI'm closing this because of the missing details. That being said, it might still be a good idea \u2013 but maybe I'm just not understanding it right now. So please feel free to reopen this ticket with additional explanations.\n. what do you mean with \"under the search button\"?\n. same problem as #411 \n. @lzanuz From my point of view, what you\u00b4re saying is only true when applying more than one filter. With a single filter applied, the current version is faster (because you only need one click instead of an additional submit-button). Therefore, I'm not sure if your suggestion improves the overall usability. \n. it seems that you don't have a request defined with your context \u2026 is that possible? can you try to debug and check why line 219 with grp_tags throws an error?\n. and \u2026 did you run the tests?\n. can you check why there's no request\u2013var?\n. just to get this right \u2014 everything besides SWITCH_USER does work, right?\n. please add an example (code!) to your proposal. thanks.\n. it should be possible to overwrite the jQuery function (I guess). and I think that\u00b4s a much better solution, because we can't add blocks to everything. IMO that usecase is too personal to change the code \u2026 but I might rethink the issue if overwriting the js\u2013functions doesn\u00b4t work.\n. what you're experiencing here is exactly what @parsch described \u2026 it does not make sense to add the block to every stacked inline. therefore, we decided to not implement this. if you find another solution which works for single inlines, please feel free to reopen this ticket.\n. the policy depends on the version of the docs \u2013 with a new version (e.g. 2.5.x) previous updates are only mentioned with the major version. as far as I know, that's how Django does it as well \u2026 if I'm wrong, please feel free to reopen this ticket.\n. there have been changes with jquery handling _renderItem \u2026 maybe we've missed something, but it works with my testcases (multiple autocompletes as well). \n\nyou might wanna try this one:\nhttp://stackoverflow.com/questions/9513251/cannot-set-property-renderitem-of-undefined-jquery-ui-autocomplete-with-html\n\nwhen looking on our code (e.g. jquery.grp_autocomplete_fk.js, line 114) it looks strange indeed. we first use `.data(\"ui-autocomplete\")` and later on `.data( \"item.autocomplete\", item )` ...\n. did you check all staticfiles are loaded correctly (eg the new versions of jquery & jqueryui)? \n. Please use the Google\u2013Group for asking questions. If you think this is a bug, please add specific details. Thank you!\n. +1 if this is a replacement (or add-on) for drag/drop. If one needs to resort with manually editing positions, every number (position) should be possible (not only negative numbers). On the other hand, it might be confusing when an item jumps to another position.\n\nI have the feeling that this usecase is better solved with a custom js (or maybe with overriding the models save-method and rearranging the items).\n\nFeel free to reopen the ticket ...\n. Can't open the screenshot \u2026 is it the same as #405 \u2026 ?\n\nBesides, you did not mention which version of Grappelli you're using.\n. Alright, so that's actually solved already.\n. yes, it's marked as closed with a commit \u2026 isn't it solved?\n. I see \u2014 2.5.1 will probably be released early next week.\n. that\u00b4s already solved with stable/2.5.x\n. you only fix line 135 with your patch \u2014 but you're suggesting to fix line 63 as well, right?\n. we decided to delete the outdated jquery files instead of adding the images. thanks for the patch.\n. which version of django & grappelli?\n. that should be solved with branch stable 2.5.x \u2026 any chance you can give that a try?\n. sorry, you are right \u2013 this issue is not yet solved!\n. that\u00b4s not a grappelli issue: seems that your staticfiles are not loaded correctly (or maybe collectstatic didn\u00b4t work as expected). I'm pretty sure this is similar to #214 \u2026 if I missed something, please reopen this ticket with additional information (js-errors, debug statemenets etc.).\n. do you use grappelli.dashboard or not?\n. that\u00b4s two different issues in my opinion: we could update index.html in order to work with adminplus (a patch would be nice).\n\non the other hand, I'm not sure we should add adminplus with grappelli.dashboard \u2013 because you can easily add links (or even custom views) with a dashboard. so that doesn't make sense from my point of view \u2026\n\nbefore we change the code someone should test with and without the dashboard.\n. the whole point of the custom dashboard is to not show anything automatically.\n. absolutely: can you test adding adminplus to the dashboard?\n. I mean adding the custom views to a custom dashboard (with grappelli.dashboard) \u2014 what you proposed before with \"semi-automatically\".\n. there\u00b4s no sidebar block, but that\u00b4s not the point IMO. why do you believe code changes are necessary? context should include the custom list and you should be able to loop the items \u2026 well, you might need to dive into dashboards a bit.\n. I'm pretty sure any app using a custom index page will fail with grappelli, because our template structure differs \u2026 no matter if we add a sidebar block or not.\n. Your patch is fine, because you are using the grp-classes (e.g. grp-module).\n\nIf we just add a sidebar-block and another 3rd-party app extends that block without the grp-classes, there's no compatibility in the first place. That being said, I'm ok with adding that block \u2013 because most of the time, people probably use the custom dashboard anyway.\n. that template you mention hopefully doesn't work with grappelli \u2014 inline-styles, tables \u2026 wow!!!\n. the patch should work \u2013 I'll check that (probably next week).\n. you mean using Bootstrap instead of a custom theme?\n. we won\u00b4t using bootstrap for a couple of reasons (we discussed that already \u2013 see issues and google-group for details).\n. that\u00b4s because django-import-export uses another dom-structure for their templates. you need to overwrite their template with grappellis dom.\n. Please take a look at the django docs \u2013 there it\u00b4s explained how to overwrite templates.\n. thx \u2013 looks good to me.\n. @funkybob just a thought: isn't it better to use the ModelAdmins get_queryset method instead of providing a specific model manager?\n. see #403 \u2026 we need to add the modeladmin to the lookup call.\n. @rcooke did you take a look at the code with issue #403?\n. closing this in favour of #403 \n. sorry, but I do not understand this issue \u2026 why would wou want to hide the related lookup when you just defined it with your modeladmin?\n. I'm closing this since it does not seem to be an \"issue\" (please use the google group for asking questions). Feel free to reopen the ticket if I missed something.\n. good point. except keyerror should be nested (I don\u00b4t like the nesting as well, but it works).\n\nconsidering the queryset: what if we return qs = model.objects.none() if no search_fields are defined? of course, this leads to \"0 results\" with the autocomplete instead of an error message. but from my point of view, that\u00b4s ok. what do you think?\n. @titovanton-com what exactly is the issue here? you don\u00b4t need to set extra to zero in order to work with sortable inlines \u2026 that\u00b4s definitely working. please add more details if you think it\u00b4s a bug.\n. ok \u2013 so there are 2 issues: first, please open a new ticket for change list sortables. second, please add details about the actual bug you\u00b4re talking about \u2013 what you\u00b4re saying is currently not reproducable. I'm closing this for now since there are mixed issues here.\n\nbesides, please take a look at the contribution guidelines. thanks!\n. instead of changing the management command, I decided to add a note to the docs \u2026 since the location depends on where manage.py is being stored (related to your project directory).\n. @pauloxnet what exactly do you mean with filter/exclude? is this related to #403?\n. I see. that\u00b4s exactly #403, right? because this behaviour should also apply to related lookups (using the search icon, for example).\n. I'm closing this in favour of #403. If you think it\u00b4s a different issue, please reopen this ticket with an additional explanation.\n. you need to define autocomplets with your ModelAdmin, see http://django-grappelli.readthedocs.org/en/latest/customization.html#autocomplete-lookups\n\nbesides, please use the google group for asking questions \u2026 this is an issue tracker.\n. it _does_ work with the changelist \u2026 did you try?\n. please resend the code in a readable format.\n. uncomment list_editable \u2014 because you want to edit the field, right?\n. yes, it is a requirement \u2026\n\nyou did not overwrite anything (css, templates)?\ncan you send a screenshot of your changelist?\nany js errors?\n. jquery.min.map is not part of grappelli \u2026 the question is: why is this file being loaded with your setup?\n. Sorry \u2013 I don\u00b4t have time to offer that kind of support. Please try to find out what\u00b4s the issue \u2026 autocompletes are definitely working on the changelist (I just douple-checked with different browsers).\n\nI'm closing this ticket for now. If you find something, feel free to reopen.\n. I don\u00b4t think the python-package is an issue (I might be wrong though).\n\nWhat I would do:\n1. check if raw_id_fields are working with your changelist (that\u00b4s pure django, not related to grappelli).\n2. check if related-lookups (grappelli) are working.\n\nI would use Firefox or Safari for testing. And always check for js-errors.\n. seems to be a django issue, right? how is this related to grappelli?\n. please use the google\u2013group for asking questions (see contribution guidelines). thank you!\n. I'm not able to reproduce this \u2013 please add the necessary details (see contribution guidelines).\n. @gone https://github.com/sehmaschine/django-grappelli/blob/master/CONTRIBUTING.rst\n\nan example app probably won\u00b4t help, since this \"issue\" does not exist (I\u00b4m pretty sure about that). so, the question is: why does it exist with your setup? I guess that the grappelli staticfiles are not served correctly.\n. @gone the behaviour with grappelli isn\u00b4t any different from the django admin, right? does it make sense to update the docs if there\u00b4s already an explanation with the django docs?\n. @jschneier no timeline. if you wanna submit a patch, I'll merge it asap.\n. I'm still not able to reproduce this, so I'm closing this issue. Please reopen with additional details about `TEMPLATE_STRING_IF_INVALID`. According to the django docs, you should not assume the admin templates to be rendered correctly, if `TEMPLATE_STRING_IF_INVALID` is set to anything other than an empty string.\n. what I don\u00b4t get \u2026 you define `'fk': [['enterprise']],`, but `enterprise` is not within `list_display` \u2026 am I missing something?\n. @ingodjango can you do me a favour and try to replace that line with\n\n`.find(\"input[name^='\" + prefix + \"'][name$='-\" + this + \"']\")`\n\nthere\u00b4s now an additional \"-\" with checking the name attribute.\nplease let me know if that works.\n. Thanks \u2013 I\u00b4ll change that and commit asap.\n. solved with branch stable/2.5.x \u2013 new release soon.\n. thanks for the patch. how can I reproduce this bug?\n. I'm not able to reproduce the bug ... every add-url ends with a slash and my autocomplete work fine with add pages \u2026 ???\n. @deleted the js you mentioned resolves the href-attribute given with a relation (it\u00b4s not resolving the URL). And I\u00b4m not able to find a link with an additional \"add\" ... how did you get that?\n. @deleted autocomplete uses the links given with a relation-field (fk, m2m, ...) \u2013 you should see these links with the source-code. in my opinion, a relation-field always uses /appname/modelname/ and never ends with an /add/. the question remains: how can I reproduce this?\n. alright \u2013 I'm closing this for now. please reopen with details on how to reproduce this issue \u2013 no github repo needed, just simple infos like \"go to an add view\", \"use fk-autocomplete\" etc.\n. that's a good idea \u2013 thanks for the patch.\n. @blueyed is there an issue with the original template/styles or is it just with your custom template/styles?\n. fixed with stable/2.5.x\n. @MDamien no \u2013 master does not support 1.7 (if it works with 1.7, that\u00b4s not intended). if you need a branch in order to sumit patches for 1.7, please let me know.\n. @blueyed are these changes backwards-compatible?\n. @blueyed the branch is dev/2.6.x ... I don't think it makes sense to jump from 2.5 to 2.7 just because of the django version.\n. @HiddenFox grappelli 2.5.7 is NOT compatible with django 1.8.\n. @HiddenFox come on ... https://github.com/sehmaschine/django-grappelli#releases\n. it doesn\u00b4t make sense to patch against master, if it\u00b4s a backwards-incompatible change. this is only related to django 1.7, right?\n. @blueyed You're right \u2013 I assumed you wanna merge this right now.\n. master is always targeting the latest stable release (see docs). there are actually 2 stable branches for different django-versions \u2013 IMO, it\u00b4s hard to follow another one (and just too much effort for us).\n\nbesides, merging is always the better option ... but that probably requires another patch once we target django 1.7.\n\nthe plan is to release another version with bugfixes and then start working on 1.7 (in about 3-4 weeks hopefully).\n. @blueyed I'm not able to reproduce this error ... \n. @blueyed urls are being loaded. but I don\u00b4t understand how your next 2 questions are related to the topic ... in other words: what do I need to do in order to reproduce this error? do I need to use a custom user model?\n. still not able to reproduce this!\n. closing this since I've never been able to reproduce it ... please reopen with additional details if this error still exists.\n. I can't imagine a single request, but I'm open for ideas/patches. Besides, I only see _one_ performance issue with what you describing (instead of two).\n. closing this since there's not been a pull-request so far\n. 1 \u2013 that's already the case: select via keyboard, enter does not submit the form.\n2 \u2013 you are talking about M2M-autocompletes, right?\n3 \u2013 again, this is only about M2M-autocompletes, right?\n. 2 & 3: I guess it\u00b4s a thin line between a visually minimal and clear interface and showing every option available. I tend to agree with your proposal ... on the other hand, we don\u00b4t wanna have a cluttered interface (thinking about a distinctive block for each item with an additional X is overdone IMO). But I see your point and we\u00b4ll discuss that.\n\n@parsch what\u00b4s your opinion?\n. you assume that the model is registered with admin.site ... but that's not necessarily true if we use a custom admin site ... right? so your patch only works with non custom sites, or do I miss something?\n. closing this since the PR is very old ... if you still work on this issue and have a good solution, please send a new PR.\n. what version of django/grappelli are you using? did you run the tests?\n\nbtw: I just tested this and it works fine for me. when looking at the code in grappelli.js, I don't see any potential bugs ... can you please add some details?\n. well ... as stated with the docs, autocomplete-fields need to be raw-id-fields ... ???\n. why do you think its insecure? the admin is only used by \"trusted editors\" anyway ... so having access to the admin itself is a much higher risk than adding the model structure, don't you agree?\n\nbesides, please use the google-group for asking questions ;-)\n. I don't agree that this is a security risk ... that being said, it's always better to limit the exposed information. So if you (or someone else) comes up with a patch, I'm happy to review that.\n. which section are you talking about? do you mean the page \"home\" when logging in at djangosuit/admin/?\n. besides \u2013 questions should usually be posted to the google-group, not the issue-tracker. that way, chances are much higher that other people read it and you might get an answer.\n. when is self.model = None? second, shouldn\u00b4t this exception be handled better than just using \"except\"?\n. thanks for the patch. the problem is that you are using styles which are not designed to fit your purpose (the success and error classes are for messages, not modules). besides, I'm not sure if this is better done with a custom view instead of a dashboard module (because the usecase is very rare in my opinion).\n. closing this for now since no further comment has been posted.\n. because your commit targets master and I'm working with the stable/... branches. not sure if it's possible to cherry-pick from another branch (I never did that).\n. ok \u2013 thanks for the hint (hub looks good).\n. you say that the form does not validate ... what exactly is the error you get? I'm ignoring the issue with prepoulated fields for now since that\u00b4s a different one (which we should take care of once the initial issue is solved).\n. wait ... just a guess: try to remove the default value for your ordering field or use sortable_exluces (see http://django-grappelli.readthedocs.org/en/latest/customization.html#sortable-excludes).\n. the sortable_exludes should refer to the position-field (not title or slug) \u2013 you want to exclude the field which has a value/default.\nsecond, are you sure you removed the default value (from the database)?\n\nif you have 3 fields within an extra-row and one field has a value (e.g. a default value), then we assume that this row needs to be saved (hence the error messages). if the row does not have any values, there won't be an error message. you could try check the js (adding some console logs) in order to exactly figure out what\u00b4s happening.\n\nplease post any (javascript) errors you find so we can reproduce this \u2013 because currently it's not reproducible and I'm pretty sure it is not a bug.\n. `sortable_excludes` is exactly what you described: combining default values with extra rows. because the js which defines the ordering field looks if there are values within each row \u2013 if so, a number is assigned. the fields within `sortable_excludes` are excluded from this calculation (you usually want to exclude all fields with default values).\n\nunfortunately, there is currently no other way since django doesn't tell us anything about the field values (e.g. giving us a json for each row).\n\nif that works, do you mind opening another ticket for the issue with the slug-field not being populated?\n. alright \u2013 I'm closing this for now. please reopen if the issue still exists with sortable_excludes.\n. which css-classes did you use for the collapsibles? besides, collapsibles also work with `TabularInline` (just the header, of course).\n. Not exactly ... the docs first mentions `InlineModelAdmin` (which includes both Stacked- and TabularInline). Additionaly, you have the `inline_classes` with StackedInline. The docs are fine from my point of view.\n\nWith the actual implementation, you need to use a tuple (or list), not a string. Second, `inline_classes` are only available with StackedInline (because there are no collapsible headers with Tabulars, so there's nothing which could actually be collapsed).\n\nWith Tabulars, you only need `classes`. I don't see a bug here \u2013 if you find one, please check the js for any errors and post it here.\n. I see your point concerning the documentation and we'll add additional examples for collapsible inline groups.\n. there are autocompletes with grappelli (see docs).\n\nbesides, please use the google-group for asking questions (this is an issue tracker).\n. thanks for the hint ... grappelli-filters looks useful indeed.\n. fixed with 300927fd7a207e556be87fa74125f48e02716570\n. please use the google-group for asking questions \u2013 if you think this is a bug, please add useful information in order to reproduce it. thank you!\n. fixed with dev/2.6.x\n. I see your point \u2013 on the other hand, these apps do add elements to the DOM which are not compatible with grappelli anway (e.g. admin-enhancers related links which are hardcoded images with a fixed width/height). So we solve one problem in order to face another one? Not sure about that ...\n. Agreed. We'll check if it's possible to add the original classnames as well (I'm pretty sure it is).\n. @blueyed is it only `.form-row` and `#container` we need?\n. @parsch what do you think about this issue? should we use the original ids/classnames as well? probably a good idea for compatibility reasons with other packages. on the other hand, if those packages rely on the original ids/classnames, they are probably not compatible with grappelli anyway. that said, blueyed mentioned that a non-optimal solution is better than none. I'd say it depends on a) how much work it is (maintenance included) and b) if it's going to be messy with all these different ids/classnames in the end.\n. We could also state that we do not add original classnames and any 3rd-party apps which target grappelli have to use our classes instead. That's (at least) a clear distinction (though I can see the drawbacks).\n. The Mixin is a good idea \u2013 will do some tests.\n. we still need to check this last commit because of hiding the row with stacked inlines \u2013 that's a bit complicated since django doesn't provide the information with the fieldline.\n. see fe0acf4db425a25264474ea8134661705c795f2e\n. did you try with a current checkout of dev/2.6.x?\n. will take a look at your approach. besides, master is not compatible with 1.7!\n. @adaptivdesign do you use the most recent version (there have been some commits yesterday).\n. I think using `_to_field` is the better approach, so I'll go with that one. thanks for looking into that!\n. fixed with f6f146ee51aa89f5e68179ab43588cba78de425c\n. I can see the function with grappelli.min.js ... ???\n. ah, thanks for clarifying. fixed with 6f58813fadac98720da96e3f63851d9ee987fe2a\n. should be solved with dev/2.6.x (not sure why you tried to merge with master). please reopen if the issue still exists.\n. thanks for the patch. one important issue with inlines is that the ordering is preserved in case of errors somewhere within the form (not necessarily with the inlines). did you check that with your patch? just by looking at the code, I don't think this will work.\n. closing this because no answer has been given.\n. For how, I'm not able to reproduce this. Reopen the ticket with additional details (if this is a bug indeed).\n. see https://github.com/sehmaschine/django-grappelli/blob/master/docs/contributing.rst ... is that ok?\n. not a bad idea. the first contributing-file is automatically shown with github when adding an issue \u2013 the second one is part of the documentation. maybe we should integrate the whole \"how to add a ticket section\" with the docs and just link from the github-contrib-file to the documentation.\n. @SalahAdDin exactly like the original admin interface (we don't change anything about popups).\n. @SalahAdDin a) check the django code b) use the django google-group c) use the grappelli google-group. this is an issue tracker!\n. the branch which includes compatibility with django 1.7 is dev/2.6.x \u2013 can you try again with that one please?\n. this might be a stupid question, but did you test that? because I don't think that the grappelli settings are available as variables within a template.\n. Closing this as wontfix \u2013 if anyone uses django-smuggler, please add a pull-request.\n. yes\n. did you check that with our 1.7 compatible branch (dev/2.6.x)?\n. I'm not sure what you mean, but it's the same with djangos admin templates:\nhttps://github.com/django/django/blob/master/django/contrib/admin/templates/admin/base_site.html\n\nPlease reopen with additional details, if you think this is a bug ... I currently don't see why it should be one.\n. @LegoStormtroopr you are right \u2013 thanks for checking that. @parsch can you take a look at that?\n. ... which versions (django/grappelli)? any custom js/templates?\n\nhttps://github.com/sehmaschine/django-grappelli/blob/master/CONTRIBUTING.rst\n. @dlcerva @volksman did you register the related object with the same admin-site? I'm not able to reproduce this (I only get a 404 if the related model is not registered).\n. maybe this is a django bug? https://code.djangoproject.com/ticket/23431\n. I'm not exactly sure why the \"_to_field\" is there in the first place, but it's used with the django admin as well (of course, there's no autocompletes). We could just remove it from the lookup query, but I don't know if that might lead to other issues.\n. @volksman thanks. I've used your patch (I didn't update related.py since one might have _to_field with custom templates) and minified the js. should be solved (hopefully).\n. we did not, since the issue has been closed ... the problem with the original ticket is that the versions don't match (grappelli 2.6.x is not compatible with django 1.6).\n. @soujiro86 IMO that's overdone. if we add the requirements to the setup-file, django is being updated if you install the wrong grappelli version. I think that the requirements are thoroughly listed in different places and it's fairly easy to update django yourself. any objections?\n. should already be fixed with the master branch. can you give that a try?\n. there is a binding for django.jQuery, see\nhttps://github.com/sehmaschine/django-grappelli/blob/master/grappelli/static/grappelli/js/grappelli.js#L12\n. not sure if this is still an issue since no further comments have been made ... please reopen with additional details if you think this is a bug.\n. I see your point ... but why do you want to install grappelli.dashboard as well as admin_tools.dashboard?\n. updated with master (I hope that fix works).\n. fixed\n. sorry, but I don't understand what this is about. \n. looks good \u2013 I'll do some tests and merge this asap. thanks for the patch!\n. @mpasternak some issues here:\n\na) LANGUAGE_CODE is always set, isn't it? so the \"if LANGUAGE_CODE\" doesn't really make sense in my opinion.\nb) the default value for LANGUAGE_CODE is \"en-us\", but there's not datepicker language file with that ending. we'll always get a 404 with that one.\nc) if USE_I18N is False, the admin is not being translated. so we should check that setting as well, right?\n. sorry \u2013 just to get the idea right: you are not translating the datepicker with \"en-us\", but you try to translate the datepicker with every other language. did you check the compatibility between the django language codes and the datepicker files for other languages?\n. @mpasternak I've given this another try, but ... when you look at the django example with \"de_AT\" which is represented as \"de-at\" with the frontend, no such datepicker file exists which leads to a 404. Besides, the same is true with \"pt_BR\" (because the jquery UI file contains uppercase characters).\n. I prefer to have the locale files with grappelli \u2013 but only if we don't need to rename the files (because renaming makes every jQuery update more difficult than necessary).\n. I'm with @camilonova here, because there doesn't seem to be a clean solution. Stay with en and let people take care about translations (it's pretty easy anyway).\n. Closing this issue. please refer to #577 for the 500 ... other than that, we decided to not include the translation files because of the issues mentioned before. thanks everyone for participating and thanks for the thoughts/patches. I'm sorry that we are not able to include this ... but there doesn't seem to be a straightforward and maintainable solution.\n. no, it does not explain itself. first, please add versions (see https://github.com/sehmaschine/django-grappelli/blob/master/CONTRIBUTING.rst). second, which content is not being loaded and why? are you sure this is a grappelli-issue?\n. did you try to navigate to a static-file directly (e.g. with adding the path to the browsers address bar)? if that doesn't work, it is not related to grappelli.\n. closing this since no further details are given. not a grappelli related issue in my opinion.\n. solved with stable/2.5.x\n. No\n. @volksman @funkybob yes, it should be the other way round in order to allow overriding the static files. I  can't remember why that's in the docs, so I'm going to remove it.\n. are you sure that the app-loading mechanism with haystack is fine?\nthe lookup error is correct in that it says \"grappelli doesn't have a dashboard model\", because it's actually the app \"grappelli.dashboard\" which has the model.\n\ncan you debug a bit more and try to find out what causes that error?\n. line 41 of haystack breaks with grappelli:\nhttps://github.com/toastdriven/django-haystack/blob/master/haystack/utils/app_loading.py#L41\n\nI'm not sure why they are trying to call get_model here, but I guess that's a bug with haystack. If I'm not mistaken, haystack assumes that every installed app has a model, but that's not necessarily the case.\n. I suggest talking to the people doing haystack, because that problem might occur with other apps as well.\n. Closing this for now. Please note that we'll remove TinyMCE with the next major release.\n. you could add a custom js (overwrite the template). other than that, I don't see a solution. besides, I'm pretty sure that there are more issues when it comes to using grappelli with FeinCMS.\n. I would like to see that as well, but it's too much effort in my opinion.\n. that is a useful patch indeed. thanks!\n. @gkuhn1 one question: shouldn't change be triggered with M2Ms in case of removing values as well?\n. @epicserve just tested with a fresh setup (django 1.7, grappelli 2.6.3) and I'm not able to reproduce this. all autocompletes (fk, m2m, generic) look fine.\n. the length doesn't matter with my testcase. what browser are you using?\n. we're not on yosemite yet. can you do me a favour and just try with another browser (cause it might be an issue with chrome) and tell me if that works or not.\n. @epicserve are you sure your setup is correct? I could reproduce your error with defining an m2m-field with both related_lookups and autocomplete_lookups. But it doesn't seem to be a bug with grappelli. The placeholder is only used with related lookups (but not with autocompletes).\n. sure. check the django documentation on this:\nhttps://docs.djangoproject.com/en/dev/ref/contrib/admin/#django.contrib.admin.InlineModelAdmin.extra\n. The \"easiest\" way to achieve this is probably to overwrite the js (/admin/actions.js). Other than that, I don't really see a way to handle this.\n. @parsch what do you think?\n. did you add the grappelli urls?\n. since you get this error it's probably much easier for you to track a possible bug ... could you try to debug that issue?\n. @eandersons thanks for looking into that \u2013 I think I've found a solution.\n. @camilonova will be part of the next pypi release. thank you for the patch.\n. @camilonova within the next two weeks.\n. sorry ... lots of other stuff to do. Hope I'll find the time to add that update soon.\n. can't think of a way to achieve this (seems quite complicated, esp. with inlines).\n\nbesides, please use the google-group for asking questions.\n. grappelli 2.6 is not compatible with django 1.6.\n\nas far as I know, nested inlines are currently not possible with django \u2013 and it's not related to grappelli.\n. usually, you do not copy the folder at all but install with pip instead (so grappelli is part of your virtual envinronment and not your project).\n\nother than that, grappelli is an ordinary django app \u2013 so please refer to the django docs on how to install applications.\n. grappelli has to be before django.contrib.admin with INSTALLED_APPS. besides, please use the google-group for asking questions (this is an issue tracker).\n. how should we be able to reproduce this? grappelli version? django version? model? model-admin? any js errors?\n\nplease re-open with all necessary details.\n. sorry, we decided to not include translation files for jQuery UI (we'll remove existing files as well).\n. already solved, see https://github.com/sehmaschine/django-grappelli/commit/7e0847ad6093daa6f9d96bc653af60f8948121cd\n. just tested \u2013 works fine with my setup. you need to add django.contrib.admindocs to your INSTALLED_APPS after grappelli.\n\nIf you think this is a bug, please try to debug and re-open this issue adding some details.\n. thanks for looking into this. it's strange though that the docs work with my setup.\n. @edwinlunando great. thank you!\n. https://github.com/sehmaschine/django-grappelli/tree/stable/2.5.x\n. see https://github.com/sehmaschine/django-grappelli/issues/559\n. which grappelli version, which django version?\n. base.htm, line 86:\n{% firstof user.get_short_name user.get_username %}\n\nso you say that isn't working for your case? any chance to debug this issue?\n. can't reproduce ... models are being sorted fine even without verbose_name/verbose_name_plural with my test case. more details?\n. ok ... finally got it.\n. I currently don't see any performance improvements ... the main issue is that we need to do a request for each and every autocomplete (because the functionality is not built-in with django and the necessary items are not available with an ordinary change form).\n. I don't think pagination is possible (though that is a django issue).\n. IMO django should give us the object representation, but it currently doesn't. If we have the title (for example), we don't need to use an ajax-call when loading the page. I don't see a workaround unless django adds the necessary elements ... but they probably won't.\n. this should already be solved ... which version of grappelli are you using?\n. According to the django docs, you should not assume the admin templates to be rendered correctly, if TEMPLATE_STRING_IF_INVALID is set to anything other than an empty string.\n\nTherefore, what exactly is the issue here?\n. that may be true, but it's a django design decision that admin doesn't have to work if that string is not empty. however, if you're able to submit a patch I'll give it a review (please reopen this issue if you wanna take on that work).\n. @mpasternak I'm -1 on supporting django-compressor out of the box. We should try to limit any dependencies and it's pretty straightforward to get django-compressor up and running (well ... besides the mentioned error with translation files).\n. @msamoylov Sorry, can't follow ...\n. @msamoylov We'll remove ui localization ... see #528 ... https://github.com/sehmaschine/django-grappelli/pull/528#issuecomment-77523683\n. @msamoylov Let's keep this issue for reference (other people might look for this error message as well). Will do the update within the next couple of days.\n. this is either not easy to solve or I am missing something. first, I'm not able to reproduce this (both collectstatic and compress works fine with my setup). second (and probably more important), there is no file ui.datepicker-en-us.js with jquery/i18n.\n. No 'compress' template tags found in templates.\n. what I don't get here: why would compress look for ui.datepicker-en-us.js since that file is never being referenced within a termplate (as mentioned before, that file doesn't even exist with jqueryUI).\n. I'm about to add a new release, but I would like this issue to be solved before. So please let me know if there's any additional information. \n. which commit exactly? the localized calendar has not been commited IMO.\n. strange for me as well ... lets wait for another reply and see if someone might have worked with your branch instead of master/stable, because that would explain the issues. and that would also explain why I have never been able to reproduce this bug.\n\nI wanna be sure about this before pushing another version to pypi.\n. I'm closing this since that is not an issue with the currently available branches IMO. Please reopen (with additional details) if you don't think this is solved.\n. are you aware that we fire the lookup-call twice when adding this behaviour?\n. closing this for now since it does not fully work. please send a new PR if you still work on this issue. besides, the \"focus\" is necessary in order for the autocompletes to work.\n. did you define an app_label within your app?\n\nthe proposed patch is not the right way to solve this \u2013 but I actually doubt that we're talking about a bug here.\n. besides, which django version are you using?\n. Can you please send your INSTALLED_APPS, your URLs, the k2 model and k2 modeladmin (gist is preferred instead of pasting it here).\n. your URLs look a bit strange to me ... both common/k2 start with`url(r'^',`. other than that, it looks ok to me. \n\nadditional question: you don't have apps defined, have you? see https://docs.djangoproject.com/en/1.7/ref/applications/\n. Closing this since I'm pretty sure it's not a bug (besides, the mentioned functionality is covered with testcases).\n. Good point. I'm actually not quite sure how to solve this. I just tried with not splitting the term (line 139 in related.py) and it works as expected.\nI don't remember why we decided to split the term. It doesn't seem to make much sense (but I might be missing something).\n. Unfortunately, that's currently not possible. But it would be a fine improvement. Any idea on a good implementation?\n. The search-link is generated with Django (not Grappelli) by using raw-id fields. That's the link we use for autocompletes as well.\n\nThat being said, issue #403 is somehow similar in terms of retrieving ModelAdmin with the frontend. Generally speaking, I think ModelAdmin is the class to look at \u2013 we should try to define the lookup queryset with ModelAdmin instead of relying on `autocomplete_search_fields` (or maybe combine both setups).\n. Sorry, but I'm not able to follow ... subclassing the widget is bound to a specific field (if I'm using M2Ms I need to subclass a different widget). That seems a bit strange ... or I just don't get it.\n. closing this for now since there hasn't been any updates in a while now.\n. No worries, I just didn\u00b4t have the time yet.\n. interesting ... we just changed that because of a pull request (see #579). what python version are you using?\n. I'm not able to reproduce this ... I'm using Grappelli 2.6.4 and Django 1.7.\n\nverbose_name = u\"Dergi \u0130\u00e7erikleri\"\nverbose_name_plural = u\"Dergi \u0130\u00e7erikleri\"\n\nworks fine.\n. @tatterdemalion @twopac @Seleznev-nvkz @robslotboom ... can anybody give me a hint on how to reproduce this with django 1.7 and grappelli 2.6.4?\n. @Seleznev-nvkz thanks, but I don't get an error. works fine with my setup (python 2.7.3, django 1.7, grappelli 2.6.4)\n. alright ... I finally could reproduce this. using \"unicode\" doesn't make sense since python3 uses \"str\".\n\nmy suggestion is to change line 113 of utils.py to:\npattern_items.sort(key=lambda x: str(x[0]._meta.verbose_name_plural.encode('utf-8')))\n\nmaybe someone can test this as well and give some feedback. from my point of view, it's a clean solution and it should work with python2 and python3.\n. That's because Grappelli is not yet compatible with Django 1.8.\n. Please try with stable/2.7.x.\n. Please reopen this ticket if the issue still exists. \n. @jieter I'll add a new branch and then let you know (probably tomorrow).\n. please use branch dev/2.7.x instead of master for compatibility with django 1.8\n. Thanks a lot for looking into that. I'll check this issue once we work on compatibility with Django 1.8.\n. @ngzhian There's a new branch dev/2.7.x in order to work on compatibility with Django 1.8.\n. @ngzhian With branch stable/2.7.x (and dev/2.7.x) the related object functionality should be fine. For now, we didn't implement the new \"edit\" feature (we'll do that once all other bugs are resolved). Please give it a try and let me know if there are still issues.\n. closing this since no further feedback has been given (the edit feature is another issue anyway).\n. please use branch dev/2.7.x instead of master for compatibility with django 1.8\n. True. Grappelli is not yet compatible with Django 1.8.\n. closing this since no details are given.\n. please use branch dev/2.7.x instead of master for compatibility with django 1.8\n. should be solved with the mentioned branch. please reopen if the issue still exists.\n. dev/2.7.x is only working with Django 1.8 (it doesn't have to be backwards compatible because there are other versions of grappelli which work with older versions of django).\n. that's much appreciated!\n. Should work now. I'll add a note about adding `grappelli.dashboard` after `django.contrib.contenttypes` to INSTALLED_APPS.\n. Closing this for now since all warnings should be gone (with stable/2.7.x). Please reopen if the issue still exists.\n. see #590 \n. which versions (django/grappelli)?\n. Note: Grappelli is not yet compatible with Django 1.8.\n. see #593 \n. same here ... I'm not able to follow this.\n. closing this since no further details are given. please add a new pull-request with additional information.\n. I'm currently taking a look. Unfortunately, I'm not able to merge this since some stuff is missing with RelatedObjetcLookups.js.\n. should be solved with dev/2.7.x and stable/2.7.x ... please reopen if the issue still exists.\n. versions please!!!\n. and which django version???\n. it's fixed (see my commit above)!\n. Sorry, I don't get it ... you want to add `<li>` to a template without having a surrounding `<ul>`?\n. I'm not sure it answers my question ... so you actually wanna add list-elements without having a list, right? Isn't that weird?\n. @alex1989 sorry for the delay. happy with the fix?\n. Closing this since it should be fixed. Please reopen if the issue still exists.\n. should work with stable/2.7.x ... please reopen if the issue still exists.\n. that would be nice indeed. does django-admin-sortable work with grappelli? do we just need to change the styles?\n. I'm having a raw-id-field with tabular inlines ... I do get the edit link with the field. The same field within the changeform and no edit link is given. Can someone please explain how this \"feature\" is supposed to work, because I just don't seem to get it!\n. it would be considered ... a consistent implementation is a requirement though (see my first comment).\n. please reopen the tickets with adding versions (django, grappelli).\n. Please add a description to this pull-request. I'm not able to reproduce this issue (I actually don't know what the issue is in the first place). Autocomplete works fine for me.\n. sorry, but that seems to be out of scope. besides, shouldn't that be a django issue instead of a grappelli issue?\n\nIMHO the filter_horizontal widget should be removed completely.\n. Did you add a ModelAdmin for ContentType?\n. closing this since no further details are given.\n. this is already fixed.\n. you are right.\n. this is already fixed.\n. @oelium cannot reproduce. please open a new ticket and add some details (django.utils.importlib is not available with related.py).\n. there is no django.contrib.admin.util in related.py\n. wrong grappelli version, I guess:\nhttps://github.com/sehmaschine/django-grappelli/blob/master/grappelli/views/related.py#L17\n. fixed with stable/2.7.x\n. are you sure that this is a grappelli issue?\n. Please use the Google-Group for asking questions (hint: add Django/Grappelli versions). If you think this is a bug, please reopen this ticket and add some debugging details.\n. @michael-fairfly do you know how that fix is related to this ticket? because the pull-request is about the reversion template, your ticket doesn't mention reversion.\n. alright, thanks for the clarification.\n. @mmarksnippety this pull-request is empty. \n. @nemesisdesign which version of grappelli are you targeting?\n. @nemesisdesign thanks for the clarification.\n. just merging pull requests ... will happen today.\n. Could you please add an example so I'm able to reproduce this issue with my setup?\n. true ... but that's just the template documentation, so not a major issue here. we'll take a look.\n. closing this since nor further details are given. please reopen if this issue still exists.\n. instead of trying to improve `get_app_label` ... isn't it better to generate the correct link in the first place?\n. I see. \n. what happens if you deactivate grappelli? do you get a different result?\n. can you try to find out what's causing this? because I'm not able to reproduce it.\n. Please use the google-group for asking questions. Thank you!\n\nBesides: there is a whole lot of answers to this question already (because it is not related to grappelli).\n. search for extending django admin templates (not related to grappelli). you can add custom css with your model admin definition or you can overwrite base.html and add your css there.\n\nhttps://docs.djangoproject.com/en/1.8/ref/contrib/admin/#modeladmin-asset-definitions\nhttps://docs.djangoproject.com/en/dev/ref/contrib/admin/#overriding-admin-templates\n. Thanks \u2013 I'll take a look at this one. Adding checks is a good idea anyway.\n\nI don't quite get your comment on adding the tests though.\n. `python manage.py test grappelli`\n. where's the commit?\n. thanks! I'll take a look at the failed test.\n. wait ... you wanna submit more PRs? in that case it's better to wait for all your PRs instead of merging every single one, right?\n. sorry ... working on it. we had to do an intermediate release for 1.8 compatibility. this one's one the list for the next release.\n. I'm getting `ImportError: cannot import name 'HTTPSHandler'` when trying to run tox. Any idea?\n. ok. got it ... but shouldn't we use 3.5 instead of 3.4?\n. ok \u2013 I'll change that. just trying to figure out why the tests break with 3.5 (seems a bit strange).\n. solved. error gone.\n. thanks again for that PR. while this issue is basically solved ... what about adding travis-ci? any objections?\n. I'm fine with writing the travis file ... \n\nBut one question remains: If we use travis, we could test with multiple python 3.x versions. However, if I add these versions to tox, I'm not able to run the test locally (because not all different python versions are installed with my machine). I'm not even sure if it makes sense to test with e.g. 3.2, 3.3, 3.4 and 3.5. Maybe it is totally overdone. Any thoughts?\n. did you try to debug this issue? any details?\n. which version of grappelli? which django version? which browser?\n. grappelli 2.7 is not compatible with django 1.7, see http://django-grappelli.readthedocs.org/en/latest/#versions-and-compatibility\n. thanks a lot for the PR!\n. thanks again (trying to improve yesterdays weak response time).\n. see http://django-grappelli.readthedocs.org/en/latest/customization.html#sortable-excludes\n\nIf there is one value within the row (e.g. quantity or units) we assume that this row has been added. Therefore the validation error (even with a different field).\n. @jieter any suggestion on the wording?\n. @jieter thanks ... good points. I reopen this ticket as a reminder for updating the docs.\n. @jieter Tried my best to explain the behaviour. Please reopen if you still think we can improve this.\n. thanks for reporting. why do you think python 2.7.9 could be deprecated?\n. just tested the original issue (switch user dropdown) again and it works fine with my setup. I'm closing this issue for now ... please reopen a new one if this error (or one of the others) still exists.\n\nno worries about the waste of time. you mainly figured it out yourself anyway.\n. are you sure the right actions.js is being loaded (the grappelli one and not the one from django admin)?\n. just check if actions.js is equal to grappellis actions.js (you only need to copy the URL and check with your browser).\n. Well ... then you have to make sure the correct one is being loaded. Seems more like a setup/Django issue than related to grappelli.\n. yep, it's strange indeed. there has been a ticket about this issue a while ago, but I've never been able to reproduce this behaviour.\n. /static/admin/js/actions.js should be the grappelli file (although it probably isn't with your setup). due to the way collectstatic works, you might wanna try to re-install grappelli and then do collectstatic again.\n\nif you do `python manage.py findstatic admin/js/actions.js` the grappelli file should be the first one.\n. @SebasSBM this seems like a strange solution, because both /django/contrib/admin/ and /grappelli/ are apps. so changing the order with `STATICFILES_FINDERS` shouldn't really change anything.\n. filebrowser doesn't interfere. what could interfere though is updating django (after installing grappelli).\n\nthat being said, I have no clue about which direction to take either. people already opened tickets about this topic \u2013 but soon afterwards, they closed it because of caching or setup issues. I'm glad if somebody is able to find out if this is a problem indeed and if it is related to grappelli.\n. @SebasSBM what do you mean by \"external apps\" vs \"internal apps\"? IMO there is no such difference, there are just apps.\n. see #666 ... seems that your staticfiles are not loaded correctly (esp. actions.js).\n. just by looking at the code briefly this seems like a good change (no reason whatsoever for hardcoding these values).\n. a) searching related fields should be possible\nb) comparing the autocomplete search with the change-list admin search is misleading. these options are not related whatsoever.\nc) defining the autocomplete fields within admin (rather than the model) would be nice. unfortunately, I don't think that's possible. but if someone comes up with a good idea on how to implement that, I'm all ears.\n\nbesides, please use the google-group for asking questions ... thank you!\n. I'd use a separate modeadmin instead (with list_editables on the changelist). To be honest, I don't see how pagination with inlines could work ... are you able to show a demo?\n. @theeluwin what exactly is the issue you are having with putting together a PR? do you have in mind that we need to deal with possible form errors on all the different sub-pages?\n. closing this for now ... although it's an interesting topic. happy to take a look at a PR.\n. @vinnyrose thanks (also for using the right branch!)\n. @joshmaker the same is true for fieldset_inline.html, right?\n. @debnet FYI: We're dealing with 1.9 once there's an official release. I'm closing this for now since there's probably tons of issues with 1.9.\n. support for 1.9 is definitely planned ... I hope to find some spare time within the next couple of days. sorry for the delay on this issue.\n. Not reproducable. Can you add details?\n. Well, I could guess ... but that probably doesn't help. Maybe you wanna add this question to the google-group and see if anyone has similar issues. And come back here once we're talking about an issue. Ok?\n. I'm closing this for now. Happy to reopen the ticket if we're able to narrow down the possible issue.\n. @ydaniv one note on this one: if the requests are identical, it seems to be a problem with django (because we just react on errors given by django). on the other hand, you could just try the original django-admin and check if the issue still exists ... if not, it's probably a grappelli issue.\n. this is not related to grappelli, is it?\n. @hhio618 sorry, but I'm not able to reproduce this. can you pls send your custom dashboard class or any other information which might be helpful.\n. grappelli is already working with python 3.4 for quite a while (see travis tests).\n. thanks. there's only one problem: travis currently does not support testing with python 3.5 \u2013 I'm not sure we should implement these updates until we can test properly. any objections?\n. I'm reopening this issue for future reference. Once travis supports testing with 3.5, we'll merge this.\n. thanks. is that PR going to be part of django 1.9?\n. I see ... how do you think we should handle this with grappelli? Wait until it's being implemented with Django or try to figure it out right now? Any preferences?\n. @graingert just tried to use your patch, but I'm seeing lots of errors with my local setup (JS variables not defined etc). is this supposed to work?\n. @graingert I've reverted the merge with stable/2.8.x ... there's just too many issues for me to resolve now (e.g. almost all paths are wrong, you use \"grapelli\" instead of \"grappelli\" etc). happy to take a look at this again if you're sending a tested PR.\n. sorry, but I don't understand that question. you could just use it with any given project.\n. closing this for now. please reopen with a new PR (thanks for your effort on this topic).\n. thanks for the PR. will merge asap.\n. @graingert great stuff. I'll take a look asap ... what do you mean with \"examples\"?\n. sorry, I don't get it ... how are the tinymce examples related to your PR?\n. @graingert I don't think updating the tinymce examples is relevant. There are currently no test scripts for the UI.\n. @graingert working on it. this should be part of the upcoming release compatible with django 1.9, right? or did you plan to have these changes with the current grappelli version as well?\n. @graingert great. we'll release a new version (2.7.3) today (compatible with Django 1.8) because there's been some minor bugfixes. afterwards, we'll work on compatibility with Django 1.9.\n. @graingert is it simple for you to send that PR again (using branch stable/2.8.x)? otherwise I'll try to cherry-pick ...\n. @graingert I was not aware that Django does it that way ... we've always tried to keep master stable with grappelli. But I'll give it a try.\n. @tdruez that issue should be addressed with django reversion first, right?\n. yes, preserve filters is not related to grappelli. it's mainly about using the \"add_preserved_filters\" template tag with links.\n. closing this for now since it's not mainly related to grappelli. once the reversion templates are updated, we'll take a look as well.\n. should be fixed with master \u2013 can you give that a try?\n. @dhararon thanks! will do another release pretty soon.\n. 2.7.3 is out now\n. there's probably lots of errors with django 1.9 ... we'll deal with this once 1.9 is being released (see docs).\n. please use the google-group for asking questions. if you think this is a bug, please add details in order to debug (and try to explain why this error is related to grappelli, if that\u00b4s even the case). did you try to remove grappelli and see if the error exists with the original django admin?\n. Is this a question or a bug report? Any details resp. debugging infos?\n. fixed with stable/2.8.x\n. no idea \u2013 but it should be straightforward to debug this issue. besides, please use the google-group for asking questions ... if you think this is a bug, please add some details.\n. which version of grappelli are you using?\n. is python 3.5 already supported by travis (because it hasn`t been about a month ago)?\n. @dbinetti I think you answered your own question with the 2nd comment. We need to use raw_id_fields, because otherwise we do not get the related link we need to use the js autocomplete workaround. Not sure if we're able to solve this ... if you have an idea, please let me know.\n. are you sure that your staticfiles are set up correctly? do you get the grappelli javascripts and styles?\n. is this solved? can we close this issue?\n. closing this for now since it seems to be a setup issue. please reopen if the problem still exists with the deployed version.\n. @clutcher @ninjaa I see what you mean. But with the proposed \"fix\", we do have another issue - see https://github.com/sehmaschine/django-grappelli/pull/646\n. should be solved, see #685 \n. Hi @ninapavlich and @olivierdalang ... it's great that you both wanna help improving Grappelli (thanks!!!). Unfortunately, we are still not sure about the roadmap. Giving the current structure (e.g. inlines), it's very hard to make it work with mobile devices. Still thinking about a decent solution ...\n\nConcerning \"hacking\" the CSS to make it a bit less unpractical: Our goal is to offer a good solution, not one which is \"less unpractical\". Therefore, I don't think that's the right way to go.\n. fixed with stable/2.8.x\n. @drxos please note that full compatibility with Django 1.9 is not yet given.\n. sounds good. can you provied tests for this behaviour?\n. fixed with stable/2.8.x\n. @parsch what exactly do you get? works fine with my setup.\n. @michalwerner I do think it's related to django-pipeline. please try again without that package.\n. see #714 \n. sorry, I don't understand your question ... grappelli is not yet compatible with django 1.9. besides, please use the google-group for asking questions.\n. Compatibility with Django 1.9 is planned. And grappelli has a dashboard ... but I still don't understand the question.\n. you are not using grappelli due to your screenshot!\n. you know that the current release is not compatible with django 1.9, right?\n. see #714 \n. these are issues with django.contrib.admin, not grappelli ... right?\n. grappelli 2.7 is not compatible with django 1.9. use grappelli 2.8 and reopen this ticket, if the problem still exists.\n. tested with stable/2.8.x and master ... works for me (might be related to the last commit which fixed popup_response.html). so please give this a try again and reopen if the bug still exists.\n. @tdruez @pombredanne well ... good PR. right branch, easy to follow (including links).\n. @garyelephant closing this for now \u2013 please reopen with additional information in order to reproduce this.\n. @chasepilon you should check if the right grappelli scripts are being loaded (and not the original scripts from the django admin interface), e.g. with using developer tools. I'm closing this for now since it's most probably a setup issue and not a grappelli bug. Please reopen with additional information if you still think this is a bug.\n. @parsch please take a look at this one and fix with stable/2.7.x, stable/2.8.x and (upcoming) stable/2.9.x\n. I don't think that HTML with the admin title has ever been possible ... but if you're able to give me a hint on the specific commit, I'm happy to check this issue.\n. see https://github.com/sehmaschine/django-grappelli/blob/stable/2.6.x/grappelli/templates/admin/base.html#L78\n\nare you sure that you did not use a custom template?\n. I don't get how this could be affected by Django itself. But I guess I have to give up here (not able to understand/reproduce this issue). Feel free to reopen with additional details (a PR would be useful).\n. What do you mean with \"not working\"? There's now a GO-Button to submit an action.\n. should be fixed now.\n. fixed with stable/2.8.x and master\n. I'm closing this since 2.7.3 is not compatible with Django 1.9. If the problem still exists with 2.8.x, please reopen this ticket.\n. 2.8.1 is still under development and there hasn't been a lot of feedback so far. but I see your point and I'll do a release later today (but please be aware that this version isn't fully tested).\n. alright \u2013 that's good to know.\n. thanks for the PR. we've had some issues with this behaviour in the past (changing the code lots of times). therefore, I'm only willing to change this if a useful test case is provided \u2013 as an alternative, you can try to explain what doesn't work now and what exactly that patch solves (and why it doesn't break any other cases).\n. did you check #706 and #403?\n\na test project would be useful. the main issue here is that I also \"think\" that it doesn't break any other cases, but I don't really now. and since we had problems with this behaviour in the past, I'm very cautious with merging changes without putting together a decent test case.\n. with \"this behaviour\" I'm referring to building the search query.\n. It's in 2.8.1 (for example).\n. I see. We'll think about doing a 2.7 release with this fix included. Unfortunately, we are not able to add  LTS comparable to django (we just don't have the necessary ressources).\n\nBesides, we don't say to use the 1.7 branch. First, this branch doesn't exist. Second, we refer to releases (not branches).\n. We decided to not release a new version for 2.7, but you can use the branch stable/2.7.x instead.. what do you plan to do with these docs? I'm not sure they are up-to-date.\n. that makes sense ... you could just copy/paste the URLs to your own urls.py (or outcomment them with grappelli).\n. django uses `[wheel]` instead of `[bdist_wheel]`. what should we use?\n. thanks. updated.\n. according to the error `relation \"users_mycustomuser\" does not exist` it is definitely not related to grappelli.\n. again, this is not a grappelli issue. you cannot use a custom user model without admin attributes (e.g. is_staff) for admin-related features.\n. > Do you mean that a custom user model will break tests programmatically?\n\nNot necessarily. It depends on the customization, but we are not able to foresee every possible case.\n\n> Switch won't be possible at all with a custom user model?\n\nDepends on the customization. You can check the function `switch_user` for details.\n\n> Is there a place where these \"do and don't\"s are documented?\n\nNo. But if you find something which should be documented, we'll integrate it ... or (even better) you send a PR with the updated docs.\n\nGenerally speaking, it should be easy for you to figure out what's wrong. You can than either send a PR with the updated code (if tests are included, a merge is easier) or docs or you give us a hint on what we can/should do. \n. with the docs, you are referring to `is_staff` first and to `is_admin` later on. besides, why don't we just say that `is_superuser` and `is_staff` are required fields with a custom user model if you want to use the switch functionality?\n. not sure how we can solve this. but grappelli works, right? \n. closing this since it's not a grappelli issue. not sure if verbosity is a solution (mentioned with the django ticket).\n. it seems like you're using a custom header, right?\n. no issue with `django-reversion`, but your screenshot definitely shows a header with a custom height. \n. no, sorry. but check for your header \"Isotek ...\" within your code.\n. please check if this happens without grappelli as well (I assume it's not related to grappelli). you could also use the google-group for asking questions.\n. how can we reproduce this?\n. I'm not able to reproduce this. Still possible that there's an issue ... but without any further details, we are not able to check this. Since it happens for all models, I'd say it's probably a setup issue (unrelated to grappelli).\n\nPlease reopen with detailed instructions on how to reproduce this error \u2013 since you get it, it should be much easier for you to debug and give us some hints.\n. thanks for the info.\n. can anyone confirm that the proposed solution works with different languages?\n. the block might be a good idea \u2013 I'll take a look.\n. fixed with 78877e1be88836b13c52a993d115e8ecc65600fe\n. please use the google-group for asking questions ... besides, this is not related to grappelli (deleting inlines is a feature of the django admin interface).\n. Here is the documentation: http://django-grappelli.readthedocs.io/en/latest/dashboard_api.html\n\nYou could use a custom dashboard, for example. But there's probably different ways to achieve this. Besides, please use the google-group for asking questions.\n. which version of django/grappelli?\n. Not related to the styling issue, but ... you are using an M2M-autocomplete with inlines, right? Is that really necessary?\n. M2M seems good \u2013 alternatively, you could use a FK with an intermediate table (and inlines with the admin interface). The 2nd approach is better, if you need additional fields (e.g. position). But you mix both options ... \n. About the database setup: FK with an intermediate table means that you have inlines with a foreign key ... but you have inlines with M2M (that's done twice). If you post your models here I can tell you more about this.\n. Concerning the styling issue: Is it possible that either your `related_label` and/or your `__str__` method contains HTML characters? If so, that causes the error.\n. 3) that\u00b4s the intended behaviour.\n4) the multiline textbox is fine for M2M autocompletes.\n\nhowever, I still think you should redefine the relationship with your database using foreign keys instead of many-to-many relations. could you please send the significant part of your models as well as your admin definitions?\n\nyour models should looke something like this ...\n\n```\nclass Parent(models.Model):\n    (fields)\n\nclass Tag(models.Model):\n    name = models.CharField(u\"Name\", max_length=100)\n    slug = models.SlugField(u\"Slug\", max_length=100, db_index=True, blank=True)\n    (additional fields)\n\nclass TagToParent(models.Model):\n    parent = models.ForeignKey(Parent, verbose_name=u\"Parent\", related_name=\"USE_A_GOOD_NAME\")\n    tag = models.ForeignKey(Tag, verbose_name=u\"Tag\", related_name=\"USE_A_GOOD_NAME\")\n    (additional fields)\n```\n\nand your admin file ...\n\n```\nclass TagInline(admin.TabularInline):\n    model = TagToParent\n    raw_id_fields = (\"tag\",)\n    autocomplete_lookup_fields = {\n        \"fk\": [\"tag\"],\n    }\n\nclass ParentOptions(admin.ModelAdmin):\n    inlines = [TagInline]\n```\n. No, it does NOT look similar. As mentioned before, you are combining an inline with a many-to-many relation.  I'm not exactly sure what you're trying to achieve here ... and it is definitely not true that \"Django creates the intermediate table\" (it only does so if you explicitely tell Django). Django does create the M2M-table (but that's not a through-table).\n\nI'm closing this ticket for now since I'm pretty sure the issue is related to your setup. I would try to clean the models first. And if the issue still exists with a proper database setup, feel free to reopen this ticket.\n. an M2M is essentially the same as an intermediary table with a foreign key (with the 2nd offering more possibilities). so, admin-wise, you either go with a SINGLE M2M autocomplete field ... OR ... with inlines and foreign keys.\n\nmany-to-many is fine when using tags. but again, you're not using M2M ... your doing an M2M-M2M.\n. glad you solved it ... but I still think your database-setup (resp. model-setup) is not quite correct. but that's a bit out of scope with regards to grappelli.\n. I see what you mean and I generally agree.\n\nThat said, I'm not sure that the database setup you described with regards to `product_name` is the best solution ... there's still the possibility of people using the wrong name for similar products.\n. are the autocompletes working? can you do a search within the fields?\n. you need to define the autocomplete lookup fields like this:\n\n```\nautocomplete_lookup_fields = { 'fk': ['invoice', 'credit_note'] }\n```\n. 1. the tuple is used for searching. with the mentioned example, you search for id (exact) and name (icontains).\n2. key: right. \n3. you need raw_id_fields, because autocompletes is kind of a hack. we need the output of raw_id_fields with the template, because otherwise we do not get the ID.\n. you can use djangos field lookups. not sure why there's an error when removing `id__iexact` ... that shouldn't be the case (you may wanna try to debug that)\n. I think it only applies to inlines with \"view on site\" (that is, objects with get_absolute_url defined).\n. see #780 \n. I don't fully get this PR ... you say that the issue occurs with Django 1.9, but later you also say it's fine with 1.9. Besides, where exactly do you see this error? Only with the dev branch or with master as well?\n. @tdruez thanks. we are aware of these issue and have not yet started with 1.10 compatibility.\n. solved with stable/2.9.x\n. it is grappelli (not grapelli)\n. nope, the given path is correct\n. definitely interesting, but out of scope. besides, it seems that django-locking is no longer actively developed.\n. Is this related to grappelli or to django-autocomplete-light?\n. No ETA yet. We hope to start working on 1.10 support soon.\n. ETA is set to September 27th. I assume there are some minor updates needed (esp. in order to remove depreciation warnings, but I'll have a closer look asap).\n. solved with stable/2.9.x\n. please use the google group for asking questions.\n. @unaizalakain this PR does not work. if I submit an inline formset with updated positions and I have an error within that formset, the ordering is not correct. happy to review an updated PR.\n. @unaizalakain what do you mean with the formsetsort template? and yes, it has been working and it is still working.\n. @unaizalakain that\u00b4s exactly what I do ... but the order is only messed up with the PR applied (it works for me without your PR). can you do a test with the branch stable/2.9.x and django 1.10?\n\nbesides, if the sorting is messed up with your PR, you do agree that the PR is not exactly what we need ... right? or did I miss something?\n. @unaizalakain see https://github.com/sehmaschine/django-grappelli/blob/master/grappelli/templates/admin/edit_inline/stacked.html#L17 ... the function is called every time the inline templates are used.\n. solved with stable/2.9.x\n. see branch stable/2.9.x ... should work. I'm just waiting for some feedback before the actual release.\n. you can checkout that branch and just play around. tests look fine, but I'm pretty sure there are still minor glitches. and if you do not find any bugs, that's a useful feedback as well.\n. @adamchainz We don't necessarily follow the jQuery updates of Django, but I'll take a look.\n. @florianm master is not compatible with django 1.10 \u2013 take a look at stable/2.9.x instead.\n. @adamchainz what exactly is the issue with jQuery (besides using a different version compared with the Django admin)?\n. > I've been looking around a bit. Django 1.10 upgraded from jQuery 2.1.4 to 2.2.3, but Grappelli 2.9.x is currently replacing that with version 2.1.4 again - shouldn't it be upgraded?\n\nthat\u00b4s true. but I don\u00b4t see any issues here.\n. > In fact b196350 copied in jQuery 2.2.3 (rather than just dropping the file to prevent static 'shadowing' of django.contrib.admin), but it still shadows jquery.init.js so the end result is that django.jQuery is the 2.1.4 version but window.jQuery is the 2.2.3.\n\nI'm sorry, but I do not understand this comment.\n. so we just need to add the comments again, right? additionally, we could also update the jquery version.\n. @debnet I'm not able to reproduce this. popups work fine with my setup. are you sure that you're using the updated files?\n. just released 2.9.1 (compatible with Django 1.10)\n. @adamchainz sorry, I don't quite get it ... the file `setup.cfg` is already there and you didn't change anything, right?\n. @tdruez I'll do a release in the next couple of days. I just waited for some feedback on compatibility with django 1.10.\n. hope this issue is solved.\n. please try branch stable/2.9.x ... 2.8.x is not compatible with django 1.10.\n. @rcooke you are right. we are aware of this issue and decided to not go with the \"?\" since it\u00b4s not consistent. that said, with regards to your usecase it definitely makes sense. we\u00b4ll take another look .... @parsch can you answer that?. change to django-style help text.\r\n\r\n@parsch please add styling. please explain ...\n. @orlra sorry, but I cannot follow. you know that overriding templates is a django issue, right? we don\u00b4t change that behaviour.. We changed this behaviour with Grappelli 2.8. It is not planned to update 2.7 though.. I'm not able to reproduce this. Works fine for me. Any details?. Thanks for the clarification.. we decided to not implement the number field since it behaves (very) different depending on the browser (one browser even accepts an empty field although that field is required, though I don\u00b4t remember which browser that was). I also added a django-ticket when we worked on that issue, but I'm currently not able to find that ticket anymore. However, the django devs agreed that the number field behaves badly (although they decided to stick with their solution).. as @etianen already mentioned, we need to adjust the templates. since I'm personally not using reversion, I didn't recognize that there have been changes according to the templates. my suggestion is to look into the reversion templates and compare it with the grappelli reversion templates and find the diffs. shouldn't be a big deal IMO.. @tsouvarev I don't quite understand where exactly we should use this new method. Any details on this?. that seems like an error with your configuration. if you think this is a bug, please add details and clarify why the noreversematch is caused by grappelli and/or how we could solve this.. I'm not able to reproduce this and it seems kind of weird. Are you saying that the ordering of `MyModel` interferes with the autocomplete for `parent` (because one has nothing to do with the other). Can you add more details and try to debug this?. closing this because no further details are given. please reopen if the problem still exists with the correct grappelli/django combination.. @tdruez Thanks for looking into it. I'll check compatibility with 1.11 asap (hopefully next week).. @Cediddi Planned for tomorrow. I'll check the issues and I'm hopefully able to have a new release by Friday.. both mentioned issues are solved with stable/2.10.x. @orlra Did you target branch dev/2.7.x by purpose? Because it\u00b4s pretty outdated \u2014 the development branch for the current version is stable/2.9.x.. see https://django-grappelli.readthedocs.io/en/latest/customization.html#available-settings . I'm pretty sure this is not related to grappelli. You could try to deactivate grappelli and check if the error still exists \u2013 if that\u00b4s not case, please reopen this ticket.. As said with the docs, these URLs are commented out by default (so you need to change this if you want to use the template docs).. sorry, not able to follow here. can you add an example?. thanks, I'll take a look at this.. FYI: I think I have a solution, but it\u00b4s a quite complicated update and I need to add some tests before pushing the changes.. see #639 . please use the google-group for asking questions (this is an issue tracker).\r\n\r\nhint: js/jquery.grp_timepicker.js (from lines 22). you should be able to use `default_time_list`.. thx for the pull request. I'll take a look.. can you please try with Grappelli 2.8.3? I'm not saying this issue is solved, but you refer to a version which is not maintained.. any specific reason you did not add the compiled css file?. @parsch can you confirm that this patch looks reasonable?. ",
    "parsch": "@sehmaschine: autocompletes should be focused when clicking their labels\n. autocomplete css have to be distributed to certain css-files before the autocompletes are released\n. @sehmaschine: yes, we might think about distinguishing the search-icons but then we have to have more different search-icons (also for filebrowse-fields). right now the search-icon does not rely to the type of the field it is associated with but just illustrates the action of opening some sort of changelist in a popup-window. \n. added predefined layout for changelist with filters in a sidebar.\n. thanks for reporting, should be fixed with 2 commits in the autocomplete branch:\ncommit 001db4ec75fd9ca16cc97176b6e4a8a6efb78cbd\ncommit 54bc70d155ed0c5b95e628f76e909c62bba62202\n. I just want to mention (as we discussed that point often before) that it is not possible to cover Grappelli with Bootstrap only. We would need a lot of additional/custom DOM and CSS to maintain the current possibilities of Grappelli.\n. @LeonardoGentile that's clear anyway... I just want to avoid heavy dependencies, css-mingle-mangle, using something as an alleged base which then has to be widely adapted. I generally don't refuse the idea of using Bootstrap, just pointing out my concerns.\n. @BertrandBordage First of all thanks for exploring that case. Based on experiences, I think your estimated hours meet the minimum efforts. Maybe you can give more detailed and actual descriptions of what you are working on, we will try our best to support possible questions on the fly. In my opinion an accurate layout of requirements dom- and css-wise, in combination with a projected dividing line between bootstrap and customs, could give a more precise idea of what has to be done.\n. @nym sorry, this issue has been closed for several reasons, mentioning two main important ones:\n1) the boostrap-issue has been discussed a lot, we always expressed our concerns about possibilities to base grappelli on bootstrap (reminder: you'll be able to implement/transfer 80% right away, but you'll fail when it comes to the last 20% and grappelli is about the last 20%). no one came up with a consistent solution that far, but feel free to surprise us ...\n2) the future of grappelli has to be something different than bootstrap, as bootstrap is quite outdated when it comes to modern frontend frameworks/technologies.\n. solved with 5134e3bd90cc840e79eb55a488548f0e2fa1e572\n. solved with d174682bbc1714bc071dbe4d29df705d5239c2e7\n\nof course the height of .selector-available and .selector-chosen differs if there's a multiline text in .selector-filter. that might be solved when using compass...\n. we'll take a look at that, thanks\n. this issue depends on  line 258 of tabular.html where we have to toggle the the .module.table twice to prevent webkit browsers from applying the border-spacing at wrong positions during dragging.\n\nwe have to do some research to find a smart solution for that.\n. the geoadmin icons will be supplied with the next release of grappelli\n. yes, I will supply them for older releases as well...\nand I'm reopening the issue (just to keep it in mind).\n. @sehmaschine: you are right \u2013 collectstatic collects the original admin images into the static folder. the gis-images are there...\n. also works with Grappelli 2.3\n. we'll take a look at that when releasing grappelli 2.4\n. The overflow:hidden is in there because it's needed when you got cells in a row. I moved the overflow:hidden to .row.cells which might solve your problem temporarily and will review the whole construction while working on grappelli 2.4, see #99\n. it's not there for clearfixing something, it's necessary to hide the vertical borders of .cells in .rows which have to overflow the height of the .rows (but you should not see the overflow) \u2013 however, a bit complicated. i will review that during the development of grappelli 2.4 and distribute a solution to 2.3 if i find one\n. @kylemacfarlane: thanks for reporting, didn't notice that it's used with the login-page...\n. ul.radiolist / ul.checkboxlist (both +inline)\n. a.related-lookup\n. elements mentioned in this ticket can't be namespaced\n. sorry for delay, simply have overseen that. should work now.\n. I'm not able to reproduce this/follow you, can you please provide some example or screenshot?\n. @iperatoner: can you also tell me which browser/os you are using?\n. thanks for reporting, should work now\n. components.css is not used with Grappelli 2.4 (checked the selectors there and they seem okay)\n. thanks for reporting, fixed it without patch because it has some dependencies\n. On the one hand you are right: Images like that have been \"replaced\" with Grappelli 2.3.8-\nThat did not happen with Grappelli 2.4 until now, that's why I applied the commit above.\n\nOn the other hand I don't get your point with css/buttons.css and js/SelectFilter2.js as they are not used in Grappelli 2.4\n. okay, that's what I thought. But you can't use Grappelli 2.3.8 with Django 1.4 anyway: http://django-grappelli.readthedocs.org/en/latest/\n. @lauritzen: should work now...\n. @lauritzen you're welcome, thanks for reporting (and making me search for a cleaner solution)\n. no, that wasn't a design decision. the dashboard should of course show multiple columns as it ever did.\n. yes, you are right, the dashboard-files were missing the last changes... I've updated them, smaller fixes according styles will follow\n. @sehmaschine: collapse is not working with the dashboard (though the classes are there)\n. think that happended especially with field in grp-cells, should work now (otherwise please reopen this issue)\n. yes, that's because I changed the g-d-fluid classes (maybe we have to improve that but with a better solution then...)\n. working on that right now...\n. I know, display states and js seem to be broken/confusing...\n. works fine for me (selecting/unselecting all, rows going yellow, actions for multiple objects...). have you done a collectstatic?\n. ad 1) why?\nad 2) that's too greyish for my taste\nad 3) I would not unify the headings but we may increase the font-size of labels \u2013 on the other hand we need small font-sizes expecially in changelists\n. +1 for that as everything within Grappelli which could be namespaced should be namespaced \u2013 why refer to Django when you are dealing with Grappelli\n. thanks for reporting, fixed it\n. this is a grappelli issue (actually a tinymce issue within grappelli) - there's an issue: https://github.com/sehmaschine/django-grappelli/issues/167\n. the supported tinymce-plugins should be styled now.\n. Works fine for me. Are you sure you are using Grappelli 2.4?\n. There's a branch for Grappelli 2.4 (https://github.com/sehmaschine/django-grappelli/tree/grappelli_2_4). It's almost finished and will hopefully be released next week.\n. I don't quite understand what happened here: Can you please provide more info about your static-files setting? And why do you use a symbolic link? Which files haven been overridden?\n\nBasically a collectstatic with Grappelli should only collect the Grappelli-static-files. As we do not serve any django-based static files (beside some js) I'm wondering how that could override your django admin files (as colletstatic adds files and usually not overrides them).\n. we still need the general min-width of modules because of its possible contents but I excluded the submit-rows from that\n. ad 1) Fields defined as readonly are delivered as <p class=\"grp-readonly\" /> \u2013 I'm not sure if you mean that...\nad grp-help) I cannot reproduce helptexts above widgets (SelectBox.js), please provide more information (code/screenshot)\n. Just wondering how you get the helptext above the selectors as we remove it in SelectFilters2.js\n\nShould be working now.\n. Okay, thought something like that. If you want you may provide your improvements...\n. I added the experimental svg-support for IE9. Please note, that Grappelli isn't tested with non-standard-compliant browsers (and we also do not support IE8 and lower because of poor CSS3 and HTML5 capabilities).\n. I can't reproduce this \u2013 looks well in my IE9 (and should have been fixed with 320b73ab5d7eabf5775f8ba39d666dfbc44ef44b).\n\nI got the SVG background and the sprite.\n. To use background-image is not always possible as I dynamically combine background-gradients and background-images (combinations of gradients and icons). And about the SVG/gradient fallback: I'm sorry but most of modern browsers support at least one of that and we are not going to begin writing fallbacks.\n. I think this is duplicate and already was fixed, see #113. Please make sure you got the commit and collected the static. If the problem still exists the please reopen the ticket.\n. should be fixed with 320b73ab5d7eabf5775f8ba39d666dfbc44ef44b, see also #178\n. thanks for reporting, fixed it.\n. @lboaretto: beside changing \"grappelli/stylesheets/partials/custom/tinymce.css\" you also have to update \"grappelli/stylesheets/screen.css\" as it contains selectors for those buttons\n. I applied another fix, hope it works for you and strongly recommend that you update your browser (as Grappelli is tested with Firefox 14.0+)\n. @lboaretto: Your screenshot shows that you must be definitely missing some styles as there is a button but no icon. With my Firefox 15.0 everything looks fine (there is an icon and the button is at the right place). Don't know... Did you collect your static files?\n. Compass creates sprite images on the fly which means that their names might change from time to time. You have to get the new icons-sprite. Why don't you just check out Grappellis stable/2.4.x branch \u2013 all recent changes are in there.\n. thanks for reporting. should work now.\n. RTL styles for TinyMCE are not working properly: Some could be fixed but beside that there are crticial points where the DOM is a problem, e.g. with the .mceListBox (dropdown menu for styles, fonts etc.)\n\nI'm not sure if we are going to implement an RTL-version of TinyMCE.\n. As there was no further feedback concerning the rtl-styles I close this issue.\n. yes\n. Something must be broken in the DOM of your changelist as it should definitely look like the first screenshot on http://www.grappelliproject.com/ (even without date-hierarchy). Did you customize anything? Can you take a look at the dom (especially for elements not being closed)?\n. The missing backgrounds have been fixed (see #178). Which IE are you using?\n. We'll take a look at that.\n. After trying some things out we decided to postpone that. Basically I like the idea of those tooltip-helptexts but I don't like that they would work very different than all other helptexts (introduce a new behaviour).\n\nBesides that it can be recommended to use a description if you want to avoid repeating long helptexts.\n\nI leave this issue open as we might come back to that.\n. I'll take a look at.\n. I tested this issue in Grappelli 2.4.2 with a multiline helptext for a charField in a tabular inline and cannot reproduce it.\nThe p.grp-help has a \"max-width: 278px\" there and also the inherited \"white-space:nowrap\" is overwritten by a \"white-space:normal !important\".\n\nWhat Grappelli version are you using/talking about? Which Browser/OS?\n. Never mind the mistake. Thanks for pointing to the concerned CSS. I made some changes to solve the mentioned 2 problems, hope it works for you (tested it on Chrome/Safari/Firefox/IE9).\n. @sehmaschine: it's also not necessary to have that sentence twice. we should remove one (either the pre_content of dashboard/modules.py line 348 or the else-clause of dashboard/modules/recent_actions.html line17f).\n. @sehmaschine: +1 for covering such minor fallbacks... They should be placed in django-resets.scss as this refers to                                            erything concerning the original Django.\n. Can you be more specific? \n. I am sorry, but your screenshots are far beyond known minor rendering issues in IE8/9. As I assume that you cleared your cache, collected static files etc. I just got one guess left: Is your IE running in that strange mode where it behaves like an older version of itself?\n. I'm afraid that we won't be able to solve the mentioned issues with IE8.\nWe do not provide any html5shim/v javascript (that would be easy) but also the `$experimental-support-for-svg: true`doesn't work with IE8. Furthermore we use some layout-props which are not understood by IE8.\n. Actually they should have the same height. What browser are you using?\n. I took a closer look at that: The height of the second box is calculated and assigned by js (admin/js/admin/SelectFilter2.js line 102 and following). As there occured some inaccuracies according different browsers I assigned fixed heights and skipped the whole js-calculation.\n. Adding a height is not a good solution. The timepicker should rather be openend to the top (like datepickers do in that case).\n. The styles for selecting month/year in date widget have already been there, I improved them a bit.\nIf you want to use such a datepicker (with custom/different options) you have to load a custom js.\n. @lvelezsantos: Just want to let you know that there's a related question and some advice on how to implement a customized datepicker, see https://groups.google.com/forum/?fromgroups=#!topic/django-grappelli/nPZe74hR9NE\n. when reporting an issue you have to give more accurate details: which functions in which context are not working in your opinion?\n. @doganmeh Grappelli is based on a very different grid system, on which allows controlling horizontal and vertical spacings throughout the whole design process, see http://muellergridsystem.com/ \n. fixed with 9f396116125d7c139524b6cd193fd477ef7faca6\n. basically yes, testing would be appreciated.\n\n@floledermann: can you try the last commit?\n. thanks!\n. set `vertical-align: top;` for some form fields. still has to be tested with all combinations.\n. test results seem to be ok\n. it's the mark_safe: it returns paragraphs in the mentioned case and as the grp-readonly is a paragraph itself the visible output fails.\n\nwe are going to change the `p.grp-readonly` to a `div.grp-readonly`\n. I would not change the process of clicking the cross and marking a line as being deleted on save. That's what a user has to understand (and that wouldn't be obvious if a line disappears immediately). We discussed the styles before (reducing opacities, different colors, icon changes, ...) but came to no better solution. If there are any suggestions of how to improve those styles then let me know please.\n. which OS/browser?\n. I added the pagebreak (as an example of how to use the customizable files/folders, see https://groups.google.com/forum/?fromgroups=#!topic/django-grappelli/VMIZRLfmd6Q).\n. @alexander-ae: Please put your custom styles into the files/folders mentioned here: https://groups.google.com/forum/?fromgroups=#!topic/django-grappelli/VMIZRLfmd6Q\n. thanks for reporting\n. All those fields (independent of their possible types) are \"hidden\" via some class now. Testing is appreciated.\n. thanks, you're right, I refined it.\n. should work now\n. thanks for reporting @paramburu \n. Thanks for reporting, I'll take a look at that.\n\nAm Freitag, 22. M\u00e4rz 2013 schrieb killarny :\n\n> I have a field in my model that contains plain text with linefeeds,\n> wrapped in a pre tag. In my admin model, I've defined the field as\n> readonly. The relevant part of the rendered admin change form template\n> looks like this:\n> \n> <div class=\"grp-readonly\"><pre>my text\n> with linefeeds\n> that are\n> broken by\n> grappelli's css</pre></div>\n> \n> In django-grappelli 2.4.4, the grp-readonly CSS class applies white-space:\n> normal !important, which breaks the linefeeds that should be respected by\n> the pre tag.\n> \n> A temporary workaround for this is to either include custom CSS that\n> properly applies pre tag styling, or use inline styles:\n> \n> <div class=\"grp-readonly\"><pre style=\"white-space: pre !important\">my text\n> with linefeeds\n> that are\n> broken by\n> grappelli's css</pre></div>\n> \n> The above renders as you'd expect, with linefeeds respected.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/309\n> .\n. The add-button is hidden via jquery.grp_inline.js depending on TOTAL_FORMS and MAX_NUM_FORMS (it's not asking for permissions there). Anyway, the hidden add-button with `display: none` was still visible as `grp-tools` items in `.gpr-closed` need the property `display: block !important`. I fixed that via css with really hiding such hidden buttons.\n. Thanks for reporting, I take a look at that. Might be related to #316.\n. thanks for reporting, fixed it with the suggested change to `position: relative`\n. I added the suggested styles by myself as there are changes to the alterative changelist-template according to that: First we check if there's an overflow and then add a class which handels the overflow.\n. I raised the `padding-right` for form fields followed by a button (lowering the `padding` would break the grid): That applies to datepicker-fields, timepicker-fields, fields with a generic lookup (related, fk, m2m) and filebrowse-fields.\n. A custom `width` should not affect the behaviour of such an input-field, as its `padding` remains the same (24px, which is the width of the button overlapping the field).\n. I moved the included header.html back to base.html\nOverriding/extending `{% block userlinks %}` and `{% block nav-global %}` should work again.\nFurthermore I had to change some password-change templates which doubled the userlinks.\n. @benebun Yes, I'm keeping an eye on that issue\n. Hi Johannes, thanks for sharing your work, we'll take a closer look (quite busy right now).\n. @sehmaschine the images should be found now\n. Unfortunately we can not provide any wording change.\nI altered the colors (there should be slightly more contrast now) and provided an extra icon. \n. +1 for that. we'll have a thought on how this might look.\n. IMO such a block would only work, if it appeared only one time per page. as there might be multiple stacked inlines such a block would cause an error. I think it would be best to define a custom jquery function which inserts the \"onAfterAdded\" to a specific stacked inline.\n. Can you give me a short explanation why it is more difficult to customize the user actions using `{% block userlinks %}` right now?\n. Ok, I think I get your point. We have to think about a solution (considering #335 extending blocks in includes is not possible) how to solve that. If you have any idea, let me know.\n. In case you want to override a block only, you are not able to access blocks within the include from outside, see #335\n. I favor the idea of using different blocks to customize parts of the header (#538), which would not be possible if the header was an include. Therefore I removed the obsolete header includes.\n. I modified the selectors, should work with CachedStaticFilesStorage now \u2013 testing is appreciated. \nSee 4f0ca2a0949eb1484f06e2f80ad5b4a8b9ceb750\n. @morlandi Thanks for fixing\n. thanks for reporting, should work now\n. Since we use Github as an issue tracker and furthermore this question is not related to Grappelli I'm closing this.\nPlease use other ways to ask questions concerning django.\n. As this is an issue-tracker (and I'm not sure whether your are describing a bug or asking a question), I would ask you to post your problem to the google group https://groups.google.com/forum/m/#!forum/django-grappelli \u2013 it might be answered faster there\n. thanks for reporting\n. I changed the css as it seems to be more reasonable than deleting html-elements.\n. We didn't yet find a way to translate the datepicker ( #318 , #5 ) \u2013 the only solution for now is to add your custom translation by using a Media inner class on your ModelAdmin (see https://docs.djangoproject.com/en/dev/ref/contrib/admin/#modeladmin-media-definitions).\n. As mentioned before you could e.g. also use \n\n```\nclass MyModel(admin.ModelAdmin):\n    ...\n\n    class Media:\n        js = [\n            \"/PATH_TO_YOUR/custom.ui.datepicker-it.js\",\n        ]\n```\n\nWhy should we collect translations in the meantime? They are all there (jQuery UI)...\n. @nebstrebor thanks for preparing this.\n\nFor now it works in debug mode only as @sehmaschine the JS files have to be minified again.\n. @nebstrebor thanks for preparing this.\n\nFor now it works in debug mode only as @sehmaschine the JS files have to be minified again.\n. thanks for reporting\n. There is no change_form_top_model.html with Grappelli.\n. This would result in an empty `<ul  class=\"grp-object-tools\">` if a user has no add-permission and there are no third-party buttons. I'll take a look at that.\n. fixed with c1178727098ed3f3ca50da82c18db8e189b64212 (see also a1d3ff0707ea16795c576a1640d304e32dfe9766)\n. This is a problem in which context?\n. Which version of django and grappelli?\n. What sort of custom widget do you use? How is ist defined?\n. As there are no `<input type=\"button\" />` with Django/Grappelli (at least I couldn't find any having a peek), I disabled them extending `grp-icon-button`. That declaration was moved to tinyMCE's namespace as there might be use cases with tinyMCE.\n\n@pauliuszaleckas Does that work for you?\n. I made some style changes to make the `<input type=\"button\" />` look similar like a `grp-icon-button`\n. I partially agree with 2&3: I separated values by commas and added a strike-through for the pre-remove state. Think that's enough \u2013 distinctive blocks, \"X\" etc. are way too much emphasize imo.\n. Those images are already there: https://github.com/sehmaschine/django-grappelli/tree/grappelli_2_4/grappelli/static/grappelli/jquery/ui/css/custom-theme/images\n\nCan you provide additional information?\n. The \"standard\" django dashboard has just 2 columns. You can define a custom dashboard with grappelli, then you will have 3 columns and be able to place single apps/modules within certain columns. If you need more than 3 columns you have to write your own dashboard template.\n\nhttp://django-grappelli.readthedocs.org/en/latest/dashboard_setup.html#custom-dashboard\nhttp://django-grappelli.readthedocs.org/en/latest/dashboard_api.html\n. I'll have a look at that, might be related to #405 \n. I just tested with Grappelli (dev/2.6.x) using Django 1.7b4 (Chrome/Safari/Firefox) and I'm not able to reproduce this.\nCan you check again and provide additional information?\n. okay, don't worry\n. Some thoughts:\n\nIf we use all original classes in addition, it's going to be messy, of course. Using a selection only makes not much sense imo as we don't know which classnames for which packages might be needed.\n\nFurther we changed some dom-structures with Grappelli which might cause incompatibilities too (even if there are original classnames).\n\nIt would be some hours of work to reassign all those original classnames in addition to the grp ones. Basically there should be no visual interferences as Grappelli doesn't deliver Django's original stylesheets. There will be visual interferences with dom/styles provided by other packages.\n\nAll in all it sounds a bit messy and dirty but I can't think of another possibility opening Grappelli to Django-related packages.\n. @blueyed Okay, let's add `#container` and `.form-row`. Can you provide a patch for that?\n. added following id/classes: `#container` `.inline-group` `.inline-related` `.tabular` `.module` `.form-row` `.field-box`\n. ~~That's the default behaviour, see http://jqueryui.com/datepicker/#buttonbar~~\n\nEdit: Sorry, my fault, there's a custom behaviour. Should be fixed with bb6c205e8c756ad54ae87d8d71118654312263e9\n. The branding block is back (in base.html). It's empty by default but I commented out a `div#grp-branding` which can be used to place elements on the left-hand side of the `h1#grp-admin-title`. Of course you can fill it with other elements, too.\n. grappelli 2.6.x is not compatible with django 1.6, see #516 \n. That's true, but was never intended. The `GRAPPELLI_ADMIN_TITLE` is only shown at the upper left side (with the global navigation bar).\n. ... but we take a look at replacing the default admin title with the `GRAPPELLI_ADMIN_TITLE`\n. I'll take a look at that, although it's a fussy issue \u2013 might take some time as I have to figure out user-selects in different contexts (we don't want to loose visible selections everywhere).\n. Thanks for reporting\n. yes, it's going to be in 2.5.6 (might take some time).\nif you need it now, check out the current 2.5.x branch.\n. grappelli 2.6.x is not compatible with django 1.6, see #516\n. When we integrated TinyMCE we focussed on features which seemed important to be editable via a text editor. We did icons for those features only (also see #293, #492 ).\n\nFeel free if you want to add the table icons, a patch would be welcome.\n. Thanks, that's a good idea IMO. I established some new blocks which make it easy to flexibly customize the header or parts of it: \n`{% block header %}` (the header as a whole, including als sub-elements), \n`{% block navigation %}` (the navigation, including all sub-elements), \n`{% block user-tools %}` (the user-tools with sub-elements),\n`{% block context-navigation %}` (the context-navigation including breadcrumbs and page-tools).\n. Cannot reproduce that either. It's strange that there's a second item at all.\n@epicserve Can you possibly find out where this second item is located in the dom structure?\n. Let's implement a submit button\n. Can't reproduce this with the the latest Chromium 41.0.2271.0 (64-bit) OS X (I'm not able to test Version 37.0.2062.120 Built on Ubuntu 12.04, running on elementary OS 0.2.1 (281580) (64-bit)).\n\nClosing this, you might try other releases and get back with more information (please include grappelli version then, too).\n. Well, to be honest I think there's something wrong with your setup.\nIt works fine in Chrome 39.0.2171.95 (64-bit) on OS X Mavericks for me (and ever did).\n\nDid you check if `/static/admin/js/actions.js` is loaded? I can reproduce the error if that's not the case...\n. And you might take a look at https://github.com/sehmaschine/django-grappelli/issues/214\n. thanks for reporting, should be solved.\n. @lzanuz Yes, it worked for me. I could reproduce this with IE9/10 \u2014 if you take a look at the `a.grp-button.grp-pulldown-handler` of the filter menu, it should have a `background-size: auto !important`. Switching that property off brings back the problem.\n. @lzanuz If it's still `-webkit-background-size` you've got the outdated css-files (take a look at fad72b8e88a50ed392a9db5a99438257cfef8f71). The changes are not yet merged to the master, did you check out stable 2.6.x?\n. @lzanuz stable is okay (master is preferred, but as mentioned it's not merged into that right now).\n. You're welcome @lzanuz\n. thanks for reporting\n. Sorry, can't reproduce this. Dou you have a screenshot and more information (browser etc.)?\n. Thanks for additional info, fixed it (stable/2.6.x, stable/2.5.x) assigning `white-space: pre-wrap`\n. @micrypt Did you check the new footer z-index it with all other z-indizes throughout?\n. @micrypt Just have to check some possible interferences. What's the z-index of the map? I don't have any GeoDjango stuff installed so let's find out theoretically.\n. @micrypt Can you tell me the z-index of the map?\n. @micrypt That can't be: z-index 0 can't overlap z-index 900 (as the footer was positioned before your patch), can you take a second look maybe at ohter elements wrapping the map and having z-indices?\n. @micrypt Right, thanks for clarifying. If we don't know the highest possible z-index it's a bit dangerous to operate with just something, I don't want to carelessly adjust z-indizes as some other features depend on that. \n. @k1-hedayati Can you post a screenshot showing where that custom views box should be positioned?\n. Where it should be positioned correctly in the end \u2014 is it below the other apps or in a smaller sidebar?\n. let me have a look at this before working on a pr\n. @ngzhian I'm not sure why your top navigation bar is 52px tall \u2013 did you apply any custom styles to it? Your `ul#grp-user-tools` on the righthand side must also suffer from that taller height, right?\n. allright\n. @c-nichols Can't verify that problem (looks okay in my local environment using the same setup). I'm able to force this _only_ if I lower the width of `.selector` (from given 758px to < 758px). Are you sure there are no custom styles of yours? You might also try playing around with the width of that `.selector` (via web developer tools) and provide some more information on that problem.\n\n![bildschirmfoto 2015-04-21 um 18 06 52](https://cloud.githubusercontent.com/assets/206830/7256741/5047cb22-e851-11e4-921f-1edce82169ec.png)\n. Closing this as no further information was provided and issue couldn't be verified.\n. Thanks for the patch!\n. We chose to hide that headline because showing it reduces the clarity/readability of the tabular layout.\n. @ngzhian currently not (we wanted to leave it in there for e.g use with document outlines etc.)\n. Please use the google group for asking questions (this is an issue tracker).\n\nBasically you have to add a custom datepicker-js by using a Media inner class on your ModelAdmin (see https://docs.djangoproject.com/en/dev/ref/contrib/admin/#modeladmin-media-definitions).\n\nA description and example file can be found here: https://groups.google.com/forum/#!searchin/django-grappelli/datepicker/django-grappelli/nPZe74hR9NE/I_mOY9gZjGsJ\n. @menarguez Seems you customized your admin title, right? If so, you'll have to customize the styles, too.\n. Closing this, as issue couldn't be verified and no further information has been provided.\n. Thanks for reporting!\n. @lzanuz which os/browser are you using?\n. Thank you! I'll take a look at that...\n. Seems to be a Django bug: https://code.djangoproject.com/ticket/22955\n. @niorko When I disable Grappelli (Djano only) I get the same behaviour...\n. Might be an issue with the cache of SelectBox.js as the misbehaviour doesn't appear if the page is reloaded with overriding the cache (cmd+shift+r OSX)\n. @oelium Sorry, cannot find\"load url from future\" or  \"future\" in any of the grappelli 2.7.x templates and surely not on the lines (53) mentioned above. Can you specify that issue?\n. Though IMO the printed layout doesn't get much better with `media=\"all\"` instead of `media=\"screen\"`, there's no reason why we shouldn't use it until we might have specific print styles.\n. Thanks for reporting\n. @jpotterm I like both your proposals (removing the changelink, simplifying the addlink). Before submitting a pr, please make sure that different user permission scenarios are still satisfied.\n. Don't think that's related to Grappelli, find in files isn't able to find an `icon_calendar.gif`. @robslotboom do you have any custom installations/packages, e.g. of jQuery UI?\n. The file \n`[21/Dec/2015 12:37:46]\"GET /static/admin/js/admin/DateTimeShortcuts.js HTTP/1.1\" 200 69`\nhas to be empty besides some comments explaining that Grappelli has dropped the contents of it and only keeps this empty file to prevent 404 errors. Can you take a look at this file? If it's not empty it's the original Django one and there's something wrong with your setup then.\n. Just to let you know: we're not working on that officially nor do we know about any contributors working on that.\n. @pista329 oops, thanks for reporting, fixed it.\n. Thanks for reporting & fixing it!\n. Thanks for reporting & fixing it!\n. Thanks for reporting, fixed in stable 2.7.x and 2.8.x branches\n. Works with my comparable setup (and there have been no reports concerning such a misbehaviour). Did you check if the scripts are loaded correctly?\n. Thanks for reporting, spread it to branches (stable 2.8.x via 789e920ce3ee6fcf6d2f4c98209dc8f2530c8e18 and stable 2.7.x via f25543c4d17b63541f5c68d69b1f31c955b9e8a4)\n. Well, it's easy if you don't use Grappelli but the original Django 1.9. styles if you like them.\n. Using Grappelli's functionality without it's styles is not possible.\n. Please note that Grappelli 2.7.3 is not compatible with Django 1.9, you should use the 2.8 development branch (https://github.com/sehmaschine/django-grappelli#releases)\n\nFurthermore the height works well in my environment but you're talking about an \"add\" button \u2013 do you have any customizations implemented?\n. Implemented suggested changes (didn't test them).\n. Thanks for reporting. I defined `grp-container` as class using `container` as only ID (providing compatibility, see #494).\n. @utapyngo As I'm not able to set up constance right now: can you please check if adding `{% load static %}` solves the problem or if there are further requirements (we're usually using a `{{ STATIC_URL }}`). Happy to integrate it then.\n. Thank you.\n. see #752\n. So you did define `<h1 id=\"site-name\"><a href=\"{% url 'admin:index' %}\">CMDB</a></h1>` in templates/admin/base_site.html?\n\nIf yes, you end up with two `<h1>` (not a good thing) and of course you have to apply styles to your custom heading.\n\nIf no, please let me know where this `<h1 id=\"site-name\">` might come from, I can't reproduce it.\n. Yes, maybe that's not very clear that you shouldn't use `<h1 id=\"site-name\">`.\nUsing the `{% block branding %}` you can define/insert whatever you want, of course you have to take care about the styles on your on behalf. As suggested in the comment of `{% block branding %}` you can use `<div id=\"grp-branding\">` as a container for a logo or whatsoever, it's positioned correctly. But you will have to apply some styles on your own, too, as there's no way to guess how people use the branding block.\n. @ArtemBernatskyy Can you please check if this is solved with ede5b66 (or similar to #737)?\n. The suggested solution you cited is not the one I used in the end. You should check out https://github.com/sehmaschine/django-grappelli/tree/stable/2.8.x (the commit ede5b66 contains the changes fixing #737), or at least get the `screen.css` of ede5b66\n. already fixed in #753 \n. The styling issue 1 comes from `<div class=\"grp-loader\" style=\"display: none;\">loader</div>&nbsp;<strong>Network - Syndicated</strong>`, there should definitely be no `<strong>`. I have no idea where this might come from. Can you provide the HTML of the second example, too?\n. Thanks for reporting \u2013 and fixing it!\n. @MikeVL Since I'm not using django-constance: I assume your mods are tested, right? Because I'll implement them in the 2.7.x-2.9.x Grappelli versions as they are. Please confirm.\n. @MikeVL Thanks for confirming \u2013 and the patch.\n. @rcooke Is it an option to use a description (instead of help texts)? See #216 . @ArtemBernatskyy Can't verify that, works fine with my setup. Do you use any customized versions (of the dashboard)?. @dahfool besides you're right, which way do you apply your custom css?. @dahfool I tested overriding selectors the way you're implementing the custom css and that works fine \u2014 but you're absolutely right that the css contains some unnecessary nestings. I flattended some of them, but it's currently not possible to go over all css hierarchies.. @dahfool I'm personally not a huge fan of smacss or bem (nor have they been popular when Grappelli's css base has been set up) but I totally agree on following modern guidelines for writing flat, minimal and maintainable css. Unfortunately there's not much time left for overhauling everything right now, but I'll definitely keep that in mind for possible future updates.. looks good. @sehmaschine: autocompletes should be focused when clicking their labels\n. autocomplete css have to be distributed to certain css-files before the autocompletes are released\n. @sehmaschine: yes, we might think about distinguishing the search-icons but then we have to have more different search-icons (also for filebrowse-fields). right now the search-icon does not rely to the type of the field it is associated with but just illustrates the action of opening some sort of changelist in a popup-window. \n. added predefined layout for changelist with filters in a sidebar.\n. thanks for reporting, should be fixed with 2 commits in the autocomplete branch:\ncommit 001db4ec75fd9ca16cc97176b6e4a8a6efb78cbd\ncommit 54bc70d155ed0c5b95e628f76e909c62bba62202\n. I just want to mention (as we discussed that point often before) that it is not possible to cover Grappelli with Bootstrap only. We would need a lot of additional/custom DOM and CSS to maintain the current possibilities of Grappelli.\n. @LeonardoGentile that's clear anyway... I just want to avoid heavy dependencies, css-mingle-mangle, using something as an alleged base which then has to be widely adapted. I generally don't refuse the idea of using Bootstrap, just pointing out my concerns.\n. @BertrandBordage First of all thanks for exploring that case. Based on experiences, I think your estimated hours meet the minimum efforts. Maybe you can give more detailed and actual descriptions of what you are working on, we will try our best to support possible questions on the fly. In my opinion an accurate layout of requirements dom- and css-wise, in combination with a projected dividing line between bootstrap and customs, could give a more precise idea of what has to be done.\n. @nym sorry, this issue has been closed for several reasons, mentioning two main important ones:\n1) the boostrap-issue has been discussed a lot, we always expressed our concerns about possibilities to base grappelli on bootstrap (reminder: you'll be able to implement/transfer 80% right away, but you'll fail when it comes to the last 20% and grappelli is about the last 20%). no one came up with a consistent solution that far, but feel free to surprise us ...\n2) the future of grappelli has to be something different than bootstrap, as bootstrap is quite outdated when it comes to modern frontend frameworks/technologies.\n. solved with 5134e3bd90cc840e79eb55a488548f0e2fa1e572\n. solved with d174682bbc1714bc071dbe4d29df705d5239c2e7\n\nof course the height of .selector-available and .selector-chosen differs if there's a multiline text in .selector-filter. that might be solved when using compass...\n. we'll take a look at that, thanks\n. this issue depends on  line 258 of tabular.html where we have to toggle the the .module.table twice to prevent webkit browsers from applying the border-spacing at wrong positions during dragging.\n\nwe have to do some research to find a smart solution for that.\n. the geoadmin icons will be supplied with the next release of grappelli\n. yes, I will supply them for older releases as well...\nand I'm reopening the issue (just to keep it in mind).\n. @sehmaschine: you are right \u2013 collectstatic collects the original admin images into the static folder. the gis-images are there...\n. also works with Grappelli 2.3\n. we'll take a look at that when releasing grappelli 2.4\n. The overflow:hidden is in there because it's needed when you got cells in a row. I moved the overflow:hidden to .row.cells which might solve your problem temporarily and will review the whole construction while working on grappelli 2.4, see #99\n. it's not there for clearfixing something, it's necessary to hide the vertical borders of .cells in .rows which have to overflow the height of the .rows (but you should not see the overflow) \u2013 however, a bit complicated. i will review that during the development of grappelli 2.4 and distribute a solution to 2.3 if i find one\n. @kylemacfarlane: thanks for reporting, didn't notice that it's used with the login-page...\n. ul.radiolist / ul.checkboxlist (both +inline)\n. a.related-lookup\n. elements mentioned in this ticket can't be namespaced\n. sorry for delay, simply have overseen that. should work now.\n. I'm not able to reproduce this/follow you, can you please provide some example or screenshot?\n. @iperatoner: can you also tell me which browser/os you are using?\n. thanks for reporting, should work now\n. components.css is not used with Grappelli 2.4 (checked the selectors there and they seem okay)\n. thanks for reporting, fixed it without patch because it has some dependencies\n. On the one hand you are right: Images like that have been \"replaced\" with Grappelli 2.3.8-\nThat did not happen with Grappelli 2.4 until now, that's why I applied the commit above.\n\nOn the other hand I don't get your point with css/buttons.css and js/SelectFilter2.js as they are not used in Grappelli 2.4\n. okay, that's what I thought. But you can't use Grappelli 2.3.8 with Django 1.4 anyway: http://django-grappelli.readthedocs.org/en/latest/\n. @lauritzen: should work now...\n. @lauritzen you're welcome, thanks for reporting (and making me search for a cleaner solution)\n. no, that wasn't a design decision. the dashboard should of course show multiple columns as it ever did.\n. yes, you are right, the dashboard-files were missing the last changes... I've updated them, smaller fixes according styles will follow\n. @sehmaschine: collapse is not working with the dashboard (though the classes are there)\n. think that happended especially with field in grp-cells, should work now (otherwise please reopen this issue)\n. yes, that's because I changed the g-d-fluid classes (maybe we have to improve that but with a better solution then...)\n. working on that right now...\n. I know, display states and js seem to be broken/confusing...\n. works fine for me (selecting/unselecting all, rows going yellow, actions for multiple objects...). have you done a collectstatic?\n. ad 1) why?\nad 2) that's too greyish for my taste\nad 3) I would not unify the headings but we may increase the font-size of labels \u2013 on the other hand we need small font-sizes expecially in changelists\n. +1 for that as everything within Grappelli which could be namespaced should be namespaced \u2013 why refer to Django when you are dealing with Grappelli\n. thanks for reporting, fixed it\n. this is a grappelli issue (actually a tinymce issue within grappelli) - there's an issue: https://github.com/sehmaschine/django-grappelli/issues/167\n. the supported tinymce-plugins should be styled now.\n. Works fine for me. Are you sure you are using Grappelli 2.4?\n. There's a branch for Grappelli 2.4 (https://github.com/sehmaschine/django-grappelli/tree/grappelli_2_4). It's almost finished and will hopefully be released next week.\n. I don't quite understand what happened here: Can you please provide more info about your static-files setting? And why do you use a symbolic link? Which files haven been overridden?\n\nBasically a collectstatic with Grappelli should only collect the Grappelli-static-files. As we do not serve any django-based static files (beside some js) I'm wondering how that could override your django admin files (as colletstatic adds files and usually not overrides them).\n. we still need the general min-width of modules because of its possible contents but I excluded the submit-rows from that\n. ad 1) Fields defined as readonly are delivered as <p class=\"grp-readonly\" /> \u2013 I'm not sure if you mean that...\nad grp-help) I cannot reproduce helptexts above widgets (SelectBox.js), please provide more information (code/screenshot)\n. Just wondering how you get the helptext above the selectors as we remove it in SelectFilters2.js\n\nShould be working now.\n. Okay, thought something like that. If you want you may provide your improvements...\n. I added the experimental svg-support for IE9. Please note, that Grappelli isn't tested with non-standard-compliant browsers (and we also do not support IE8 and lower because of poor CSS3 and HTML5 capabilities).\n. I can't reproduce this \u2013 looks well in my IE9 (and should have been fixed with 320b73ab5d7eabf5775f8ba39d666dfbc44ef44b).\n\nI got the SVG background and the sprite.\n. To use background-image is not always possible as I dynamically combine background-gradients and background-images (combinations of gradients and icons). And about the SVG/gradient fallback: I'm sorry but most of modern browsers support at least one of that and we are not going to begin writing fallbacks.\n. I think this is duplicate and already was fixed, see #113. Please make sure you got the commit and collected the static. If the problem still exists the please reopen the ticket.\n. should be fixed with 320b73ab5d7eabf5775f8ba39d666dfbc44ef44b, see also #178\n. thanks for reporting, fixed it.\n. @lboaretto: beside changing \"grappelli/stylesheets/partials/custom/tinymce.css\" you also have to update \"grappelli/stylesheets/screen.css\" as it contains selectors for those buttons\n. I applied another fix, hope it works for you and strongly recommend that you update your browser (as Grappelli is tested with Firefox 14.0+)\n. @lboaretto: Your screenshot shows that you must be definitely missing some styles as there is a button but no icon. With my Firefox 15.0 everything looks fine (there is an icon and the button is at the right place). Don't know... Did you collect your static files?\n. Compass creates sprite images on the fly which means that their names might change from time to time. You have to get the new icons-sprite. Why don't you just check out Grappellis stable/2.4.x branch \u2013 all recent changes are in there.\n. thanks for reporting. should work now.\n. RTL styles for TinyMCE are not working properly: Some could be fixed but beside that there are crticial points where the DOM is a problem, e.g. with the .mceListBox (dropdown menu for styles, fonts etc.)\n\nI'm not sure if we are going to implement an RTL-version of TinyMCE.\n. As there was no further feedback concerning the rtl-styles I close this issue.\n. yes\n. Something must be broken in the DOM of your changelist as it should definitely look like the first screenshot on http://www.grappelliproject.com/ (even without date-hierarchy). Did you customize anything? Can you take a look at the dom (especially for elements not being closed)?\n. The missing backgrounds have been fixed (see #178). Which IE are you using?\n. We'll take a look at that.\n. After trying some things out we decided to postpone that. Basically I like the idea of those tooltip-helptexts but I don't like that they would work very different than all other helptexts (introduce a new behaviour).\n\nBesides that it can be recommended to use a description if you want to avoid repeating long helptexts.\n\nI leave this issue open as we might come back to that.\n. I'll take a look at.\n. I tested this issue in Grappelli 2.4.2 with a multiline helptext for a charField in a tabular inline and cannot reproduce it.\nThe p.grp-help has a \"max-width: 278px\" there and also the inherited \"white-space:nowrap\" is overwritten by a \"white-space:normal !important\".\n\nWhat Grappelli version are you using/talking about? Which Browser/OS?\n. Never mind the mistake. Thanks for pointing to the concerned CSS. I made some changes to solve the mentioned 2 problems, hope it works for you (tested it on Chrome/Safari/Firefox/IE9).\n. @sehmaschine: it's also not necessary to have that sentence twice. we should remove one (either the pre_content of dashboard/modules.py line 348 or the else-clause of dashboard/modules/recent_actions.html line17f).\n. @sehmaschine: +1 for covering such minor fallbacks... They should be placed in django-resets.scss as this refers to                                            erything concerning the original Django.\n. Can you be more specific? \n. I am sorry, but your screenshots are far beyond known minor rendering issues in IE8/9. As I assume that you cleared your cache, collected static files etc. I just got one guess left: Is your IE running in that strange mode where it behaves like an older version of itself?\n. I'm afraid that we won't be able to solve the mentioned issues with IE8.\nWe do not provide any html5shim/v javascript (that would be easy) but also the `$experimental-support-for-svg: true`doesn't work with IE8. Furthermore we use some layout-props which are not understood by IE8.\n. Actually they should have the same height. What browser are you using?\n. I took a closer look at that: The height of the second box is calculated and assigned by js (admin/js/admin/SelectFilter2.js line 102 and following). As there occured some inaccuracies according different browsers I assigned fixed heights and skipped the whole js-calculation.\n. Adding a height is not a good solution. The timepicker should rather be openend to the top (like datepickers do in that case).\n. The styles for selecting month/year in date widget have already been there, I improved them a bit.\nIf you want to use such a datepicker (with custom/different options) you have to load a custom js.\n. @lvelezsantos: Just want to let you know that there's a related question and some advice on how to implement a customized datepicker, see https://groups.google.com/forum/?fromgroups=#!topic/django-grappelli/nPZe74hR9NE\n. when reporting an issue you have to give more accurate details: which functions in which context are not working in your opinion?\n. @doganmeh Grappelli is based on a very different grid system, on which allows controlling horizontal and vertical spacings throughout the whole design process, see http://muellergridsystem.com/ \n. fixed with 9f396116125d7c139524b6cd193fd477ef7faca6\n. basically yes, testing would be appreciated.\n\n@floledermann: can you try the last commit?\n. thanks!\n. set `vertical-align: top;` for some form fields. still has to be tested with all combinations.\n. test results seem to be ok\n. it's the mark_safe: it returns paragraphs in the mentioned case and as the grp-readonly is a paragraph itself the visible output fails.\n\nwe are going to change the `p.grp-readonly` to a `div.grp-readonly`\n. I would not change the process of clicking the cross and marking a line as being deleted on save. That's what a user has to understand (and that wouldn't be obvious if a line disappears immediately). We discussed the styles before (reducing opacities, different colors, icon changes, ...) but came to no better solution. If there are any suggestions of how to improve those styles then let me know please.\n. which OS/browser?\n. I added the pagebreak (as an example of how to use the customizable files/folders, see https://groups.google.com/forum/?fromgroups=#!topic/django-grappelli/VMIZRLfmd6Q).\n. @alexander-ae: Please put your custom styles into the files/folders mentioned here: https://groups.google.com/forum/?fromgroups=#!topic/django-grappelli/VMIZRLfmd6Q\n. thanks for reporting\n. All those fields (independent of their possible types) are \"hidden\" via some class now. Testing is appreciated.\n. thanks, you're right, I refined it.\n. should work now\n. thanks for reporting @paramburu \n. Thanks for reporting, I'll take a look at that.\n\nAm Freitag, 22. M\u00e4rz 2013 schrieb killarny :\n\n> I have a field in my model that contains plain text with linefeeds,\n> wrapped in a pre tag. In my admin model, I've defined the field as\n> readonly. The relevant part of the rendered admin change form template\n> looks like this:\n> \n> <div class=\"grp-readonly\"><pre>my text\n> with linefeeds\n> that are\n> broken by\n> grappelli's css</pre></div>\n> \n> In django-grappelli 2.4.4, the grp-readonly CSS class applies white-space:\n> normal !important, which breaks the linefeeds that should be respected by\n> the pre tag.\n> \n> A temporary workaround for this is to either include custom CSS that\n> properly applies pre tag styling, or use inline styles:\n> \n> <div class=\"grp-readonly\"><pre style=\"white-space: pre !important\">my text\n> with linefeeds\n> that are\n> broken by\n> grappelli's css</pre></div>\n> \n> The above renders as you'd expect, with linefeeds respected.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/309\n> .\n. The add-button is hidden via jquery.grp_inline.js depending on TOTAL_FORMS and MAX_NUM_FORMS (it's not asking for permissions there). Anyway, the hidden add-button with `display: none` was still visible as `grp-tools` items in `.gpr-closed` need the property `display: block !important`. I fixed that via css with really hiding such hidden buttons.\n. Thanks for reporting, I take a look at that. Might be related to #316.\n. thanks for reporting, fixed it with the suggested change to `position: relative`\n. I added the suggested styles by myself as there are changes to the alterative changelist-template according to that: First we check if there's an overflow and then add a class which handels the overflow.\n. I raised the `padding-right` for form fields followed by a button (lowering the `padding` would break the grid): That applies to datepicker-fields, timepicker-fields, fields with a generic lookup (related, fk, m2m) and filebrowse-fields.\n. A custom `width` should not affect the behaviour of such an input-field, as its `padding` remains the same (24px, which is the width of the button overlapping the field).\n. I moved the included header.html back to base.html\nOverriding/extending `{% block userlinks %}` and `{% block nav-global %}` should work again.\nFurthermore I had to change some password-change templates which doubled the userlinks.\n. @benebun Yes, I'm keeping an eye on that issue\n. Hi Johannes, thanks for sharing your work, we'll take a closer look (quite busy right now).\n. @sehmaschine the images should be found now\n. Unfortunately we can not provide any wording change.\nI altered the colors (there should be slightly more contrast now) and provided an extra icon. \n. +1 for that. we'll have a thought on how this might look.\n. IMO such a block would only work, if it appeared only one time per page. as there might be multiple stacked inlines such a block would cause an error. I think it would be best to define a custom jquery function which inserts the \"onAfterAdded\" to a specific stacked inline.\n. Can you give me a short explanation why it is more difficult to customize the user actions using `{% block userlinks %}` right now?\n. Ok, I think I get your point. We have to think about a solution (considering #335 extending blocks in includes is not possible) how to solve that. If you have any idea, let me know.\n. In case you want to override a block only, you are not able to access blocks within the include from outside, see #335\n. I favor the idea of using different blocks to customize parts of the header (#538), which would not be possible if the header was an include. Therefore I removed the obsolete header includes.\n. I modified the selectors, should work with CachedStaticFilesStorage now \u2013 testing is appreciated. \nSee 4f0ca2a0949eb1484f06e2f80ad5b4a8b9ceb750\n. @morlandi Thanks for fixing\n. thanks for reporting, should work now\n. Since we use Github as an issue tracker and furthermore this question is not related to Grappelli I'm closing this.\nPlease use other ways to ask questions concerning django.\n. As this is an issue-tracker (and I'm not sure whether your are describing a bug or asking a question), I would ask you to post your problem to the google group https://groups.google.com/forum/m/#!forum/django-grappelli \u2013 it might be answered faster there\n. thanks for reporting\n. I changed the css as it seems to be more reasonable than deleting html-elements.\n. We didn't yet find a way to translate the datepicker ( #318 , #5 ) \u2013 the only solution for now is to add your custom translation by using a Media inner class on your ModelAdmin (see https://docs.djangoproject.com/en/dev/ref/contrib/admin/#modeladmin-media-definitions).\n. As mentioned before you could e.g. also use \n\n```\nclass MyModel(admin.ModelAdmin):\n    ...\n\n    class Media:\n        js = [\n            \"/PATH_TO_YOUR/custom.ui.datepicker-it.js\",\n        ]\n```\n\nWhy should we collect translations in the meantime? They are all there (jQuery UI)...\n. @nebstrebor thanks for preparing this.\n\nFor now it works in debug mode only as @sehmaschine the JS files have to be minified again.\n. @nebstrebor thanks for preparing this.\n\nFor now it works in debug mode only as @sehmaschine the JS files have to be minified again.\n. thanks for reporting\n. There is no change_form_top_model.html with Grappelli.\n. This would result in an empty `<ul  class=\"grp-object-tools\">` if a user has no add-permission and there are no third-party buttons. I'll take a look at that.\n. fixed with c1178727098ed3f3ca50da82c18db8e189b64212 (see also a1d3ff0707ea16795c576a1640d304e32dfe9766)\n. This is a problem in which context?\n. Which version of django and grappelli?\n. What sort of custom widget do you use? How is ist defined?\n. As there are no `<input type=\"button\" />` with Django/Grappelli (at least I couldn't find any having a peek), I disabled them extending `grp-icon-button`. That declaration was moved to tinyMCE's namespace as there might be use cases with tinyMCE.\n\n@pauliuszaleckas Does that work for you?\n. I made some style changes to make the `<input type=\"button\" />` look similar like a `grp-icon-button`\n. I partially agree with 2&3: I separated values by commas and added a strike-through for the pre-remove state. Think that's enough \u2013 distinctive blocks, \"X\" etc. are way too much emphasize imo.\n. Those images are already there: https://github.com/sehmaschine/django-grappelli/tree/grappelli_2_4/grappelli/static/grappelli/jquery/ui/css/custom-theme/images\n\nCan you provide additional information?\n. The \"standard\" django dashboard has just 2 columns. You can define a custom dashboard with grappelli, then you will have 3 columns and be able to place single apps/modules within certain columns. If you need more than 3 columns you have to write your own dashboard template.\n\nhttp://django-grappelli.readthedocs.org/en/latest/dashboard_setup.html#custom-dashboard\nhttp://django-grappelli.readthedocs.org/en/latest/dashboard_api.html\n. I'll have a look at that, might be related to #405 \n. I just tested with Grappelli (dev/2.6.x) using Django 1.7b4 (Chrome/Safari/Firefox) and I'm not able to reproduce this.\nCan you check again and provide additional information?\n. okay, don't worry\n. Some thoughts:\n\nIf we use all original classes in addition, it's going to be messy, of course. Using a selection only makes not much sense imo as we don't know which classnames for which packages might be needed.\n\nFurther we changed some dom-structures with Grappelli which might cause incompatibilities too (even if there are original classnames).\n\nIt would be some hours of work to reassign all those original classnames in addition to the grp ones. Basically there should be no visual interferences as Grappelli doesn't deliver Django's original stylesheets. There will be visual interferences with dom/styles provided by other packages.\n\nAll in all it sounds a bit messy and dirty but I can't think of another possibility opening Grappelli to Django-related packages.\n. @blueyed Okay, let's add `#container` and `.form-row`. Can you provide a patch for that?\n. added following id/classes: `#container` `.inline-group` `.inline-related` `.tabular` `.module` `.form-row` `.field-box`\n. ~~That's the default behaviour, see http://jqueryui.com/datepicker/#buttonbar~~\n\nEdit: Sorry, my fault, there's a custom behaviour. Should be fixed with bb6c205e8c756ad54ae87d8d71118654312263e9\n. The branding block is back (in base.html). It's empty by default but I commented out a `div#grp-branding` which can be used to place elements on the left-hand side of the `h1#grp-admin-title`. Of course you can fill it with other elements, too.\n. grappelli 2.6.x is not compatible with django 1.6, see #516 \n. That's true, but was never intended. The `GRAPPELLI_ADMIN_TITLE` is only shown at the upper left side (with the global navigation bar).\n. ... but we take a look at replacing the default admin title with the `GRAPPELLI_ADMIN_TITLE`\n. I'll take a look at that, although it's a fussy issue \u2013 might take some time as I have to figure out user-selects in different contexts (we don't want to loose visible selections everywhere).\n. Thanks for reporting\n. yes, it's going to be in 2.5.6 (might take some time).\nif you need it now, check out the current 2.5.x branch.\n. grappelli 2.6.x is not compatible with django 1.6, see #516\n. When we integrated TinyMCE we focussed on features which seemed important to be editable via a text editor. We did icons for those features only (also see #293, #492 ).\n\nFeel free if you want to add the table icons, a patch would be welcome.\n. Thanks, that's a good idea IMO. I established some new blocks which make it easy to flexibly customize the header or parts of it: \n`{% block header %}` (the header as a whole, including als sub-elements), \n`{% block navigation %}` (the navigation, including all sub-elements), \n`{% block user-tools %}` (the user-tools with sub-elements),\n`{% block context-navigation %}` (the context-navigation including breadcrumbs and page-tools).\n. Cannot reproduce that either. It's strange that there's a second item at all.\n@epicserve Can you possibly find out where this second item is located in the dom structure?\n. Let's implement a submit button\n. Can't reproduce this with the the latest Chromium 41.0.2271.0 (64-bit) OS X (I'm not able to test Version 37.0.2062.120 Built on Ubuntu 12.04, running on elementary OS 0.2.1 (281580) (64-bit)).\n\nClosing this, you might try other releases and get back with more information (please include grappelli version then, too).\n. Well, to be honest I think there's something wrong with your setup.\nIt works fine in Chrome 39.0.2171.95 (64-bit) on OS X Mavericks for me (and ever did).\n\nDid you check if `/static/admin/js/actions.js` is loaded? I can reproduce the error if that's not the case...\n. And you might take a look at https://github.com/sehmaschine/django-grappelli/issues/214\n. thanks for reporting, should be solved.\n. @lzanuz Yes, it worked for me. I could reproduce this with IE9/10 \u2014 if you take a look at the `a.grp-button.grp-pulldown-handler` of the filter menu, it should have a `background-size: auto !important`. Switching that property off brings back the problem.\n. @lzanuz If it's still `-webkit-background-size` you've got the outdated css-files (take a look at fad72b8e88a50ed392a9db5a99438257cfef8f71). The changes are not yet merged to the master, did you check out stable 2.6.x?\n. @lzanuz stable is okay (master is preferred, but as mentioned it's not merged into that right now).\n. You're welcome @lzanuz\n. thanks for reporting\n. Sorry, can't reproduce this. Dou you have a screenshot and more information (browser etc.)?\n. Thanks for additional info, fixed it (stable/2.6.x, stable/2.5.x) assigning `white-space: pre-wrap`\n. @micrypt Did you check the new footer z-index it with all other z-indizes throughout?\n. @micrypt Just have to check some possible interferences. What's the z-index of the map? I don't have any GeoDjango stuff installed so let's find out theoretically.\n. @micrypt Can you tell me the z-index of the map?\n. @micrypt That can't be: z-index 0 can't overlap z-index 900 (as the footer was positioned before your patch), can you take a second look maybe at ohter elements wrapping the map and having z-indices?\n. @micrypt Right, thanks for clarifying. If we don't know the highest possible z-index it's a bit dangerous to operate with just something, I don't want to carelessly adjust z-indizes as some other features depend on that. \n. @k1-hedayati Can you post a screenshot showing where that custom views box should be positioned?\n. Where it should be positioned correctly in the end \u2014 is it below the other apps or in a smaller sidebar?\n. let me have a look at this before working on a pr\n. @ngzhian I'm not sure why your top navigation bar is 52px tall \u2013 did you apply any custom styles to it? Your `ul#grp-user-tools` on the righthand side must also suffer from that taller height, right?\n. allright\n. @c-nichols Can't verify that problem (looks okay in my local environment using the same setup). I'm able to force this _only_ if I lower the width of `.selector` (from given 758px to < 758px). Are you sure there are no custom styles of yours? You might also try playing around with the width of that `.selector` (via web developer tools) and provide some more information on that problem.\n\n![bildschirmfoto 2015-04-21 um 18 06 52](https://cloud.githubusercontent.com/assets/206830/7256741/5047cb22-e851-11e4-921f-1edce82169ec.png)\n. Closing this as no further information was provided and issue couldn't be verified.\n. Thanks for the patch!\n. We chose to hide that headline because showing it reduces the clarity/readability of the tabular layout.\n. @ngzhian currently not (we wanted to leave it in there for e.g use with document outlines etc.)\n. Please use the google group for asking questions (this is an issue tracker).\n\nBasically you have to add a custom datepicker-js by using a Media inner class on your ModelAdmin (see https://docs.djangoproject.com/en/dev/ref/contrib/admin/#modeladmin-media-definitions).\n\nA description and example file can be found here: https://groups.google.com/forum/#!searchin/django-grappelli/datepicker/django-grappelli/nPZe74hR9NE/I_mOY9gZjGsJ\n. @menarguez Seems you customized your admin title, right? If so, you'll have to customize the styles, too.\n. Closing this, as issue couldn't be verified and no further information has been provided.\n. Thanks for reporting!\n. @lzanuz which os/browser are you using?\n. Thank you! I'll take a look at that...\n. Seems to be a Django bug: https://code.djangoproject.com/ticket/22955\n. @niorko When I disable Grappelli (Djano only) I get the same behaviour...\n. Might be an issue with the cache of SelectBox.js as the misbehaviour doesn't appear if the page is reloaded with overriding the cache (cmd+shift+r OSX)\n. @oelium Sorry, cannot find\"load url from future\" or  \"future\" in any of the grappelli 2.7.x templates and surely not on the lines (53) mentioned above. Can you specify that issue?\n. Though IMO the printed layout doesn't get much better with `media=\"all\"` instead of `media=\"screen\"`, there's no reason why we shouldn't use it until we might have specific print styles.\n. Thanks for reporting\n. @jpotterm I like both your proposals (removing the changelink, simplifying the addlink). Before submitting a pr, please make sure that different user permission scenarios are still satisfied.\n. Don't think that's related to Grappelli, find in files isn't able to find an `icon_calendar.gif`. @robslotboom do you have any custom installations/packages, e.g. of jQuery UI?\n. The file \n`[21/Dec/2015 12:37:46]\"GET /static/admin/js/admin/DateTimeShortcuts.js HTTP/1.1\" 200 69`\nhas to be empty besides some comments explaining that Grappelli has dropped the contents of it and only keeps this empty file to prevent 404 errors. Can you take a look at this file? If it's not empty it's the original Django one and there's something wrong with your setup then.\n. Just to let you know: we're not working on that officially nor do we know about any contributors working on that.\n. @pista329 oops, thanks for reporting, fixed it.\n. Thanks for reporting & fixing it!\n. Thanks for reporting & fixing it!\n. Thanks for reporting, fixed in stable 2.7.x and 2.8.x branches\n. Works with my comparable setup (and there have been no reports concerning such a misbehaviour). Did you check if the scripts are loaded correctly?\n. Thanks for reporting, spread it to branches (stable 2.8.x via 789e920ce3ee6fcf6d2f4c98209dc8f2530c8e18 and stable 2.7.x via f25543c4d17b63541f5c68d69b1f31c955b9e8a4)\n. Well, it's easy if you don't use Grappelli but the original Django 1.9. styles if you like them.\n. Using Grappelli's functionality without it's styles is not possible.\n. Please note that Grappelli 2.7.3 is not compatible with Django 1.9, you should use the 2.8 development branch (https://github.com/sehmaschine/django-grappelli#releases)\n\nFurthermore the height works well in my environment but you're talking about an \"add\" button \u2013 do you have any customizations implemented?\n. Implemented suggested changes (didn't test them).\n. Thanks for reporting. I defined `grp-container` as class using `container` as only ID (providing compatibility, see #494).\n. @utapyngo As I'm not able to set up constance right now: can you please check if adding `{% load static %}` solves the problem or if there are further requirements (we're usually using a `{{ STATIC_URL }}`). Happy to integrate it then.\n. Thank you.\n. see #752\n. So you did define `<h1 id=\"site-name\"><a href=\"{% url 'admin:index' %}\">CMDB</a></h1>` in templates/admin/base_site.html?\n\nIf yes, you end up with two `<h1>` (not a good thing) and of course you have to apply styles to your custom heading.\n\nIf no, please let me know where this `<h1 id=\"site-name\">` might come from, I can't reproduce it.\n. Yes, maybe that's not very clear that you shouldn't use `<h1 id=\"site-name\">`.\nUsing the `{% block branding %}` you can define/insert whatever you want, of course you have to take care about the styles on your on behalf. As suggested in the comment of `{% block branding %}` you can use `<div id=\"grp-branding\">` as a container for a logo or whatsoever, it's positioned correctly. But you will have to apply some styles on your own, too, as there's no way to guess how people use the branding block.\n. @ArtemBernatskyy Can you please check if this is solved with ede5b66 (or similar to #737)?\n. The suggested solution you cited is not the one I used in the end. You should check out https://github.com/sehmaschine/django-grappelli/tree/stable/2.8.x (the commit ede5b66 contains the changes fixing #737), or at least get the `screen.css` of ede5b66\n. already fixed in #753 \n. The styling issue 1 comes from `<div class=\"grp-loader\" style=\"display: none;\">loader</div>&nbsp;<strong>Network - Syndicated</strong>`, there should definitely be no `<strong>`. I have no idea where this might come from. Can you provide the HTML of the second example, too?\n. Thanks for reporting \u2013 and fixing it!\n. @MikeVL Since I'm not using django-constance: I assume your mods are tested, right? Because I'll implement them in the 2.7.x-2.9.x Grappelli versions as they are. Please confirm.\n. @MikeVL Thanks for confirming \u2013 and the patch.\n. @rcooke Is it an option to use a description (instead of help texts)? See #216 . @ArtemBernatskyy Can't verify that, works fine with my setup. Do you use any customized versions (of the dashboard)?. @dahfool besides you're right, which way do you apply your custom css?. @dahfool I tested overriding selectors the way you're implementing the custom css and that works fine \u2014 but you're absolutely right that the css contains some unnecessary nestings. I flattended some of them, but it's currently not possible to go over all css hierarchies.. @dahfool I'm personally not a huge fan of smacss or bem (nor have they been popular when Grappelli's css base has been set up) but I totally agree on following modern guidelines for writing flat, minimal and maintainable css. Unfortunately there's not much time left for overhauling everything right now, but I'll definitely keep that in mind for possible future updates.. looks good. ",
    "BertrandBordage": "We could add the list of available languages to the context of the view, then:\n\n```\n{% if LANGUAGE_CODE in datepicker_available_languages %}\n  ....\n{% endif %}\n```\n. Oh, I see the problem, we can't customize admin views\u2026  So a template tag could be great.  We could even implement automatic datepicker localization discovery using staticfiles.  \"We try to find 'grappelli/jquery/i18n/ui.datepicker-de-de.js' with staticfiles, and if an exception is raised, we don't include datepicker locale\".  (However, I don't remember whether staticfiles is a mandatory app when using admin.)\n. :+1: Twitter Bootstrap is awesome nowadays, we should use it.\nBut that would require a lot of rewriting, and using LESS instead of SASS.  As I use LESS only, you can count on me to help if we do such a rewriting.\n\nMaybe we could also use django_compressor to precompile & minimify the LESS files to CSS at the first user request.  That's what I do for my professional projects, and it allows people to easily override variables using their own LESS stylings.  It also avoids having to include compiled & minimified files in the repository.\n. We can make our own \"theme\" based on the beautiful current design of grappelli.\n. No, that won't be easy\u2026  I can do a prototype if you want, to evaluate the amount of work needed.\n. In my opinion, that will be easier to maintain than with Compass for these reasons:\n- there is now a much larger community using Bootstrap than Compass, making it easier to find contributors\n- the amount of CSS to maintain should drastically decrease with Bootstrap\n- Bootstrap is easier to understand; we use powerful HTML classes and we don't have to care much about CSS\n- it's easy to customize its look with LESS\n\nThat being said, I know there has been a few backward incompatibilities from version to version, especially between Bootstrap 2 and 3.  But this wasn't very painful.\nAnd we can always keep an old version of Bootstrap without being obsolete, unlike django.contrib.admin.\n\nI guess @parsch and you are accustomed to the workflow with Compass and SASS. I don't really know Compass and you both did an awesome job using it, so don't worry if you want to keep it that way ;)\n. @LeonardoGentile: Excellent project!  Unfortunately, that would add a heavy dependancy.\nI'll start from scratch\u2026  Hardcore mode!\n. @sehmaschine I agree, using Bootstrap with no deep customization is not convincing.  Apart from being clean, Bootstrap default stylesheet looks generic and tasteless.  There's not even a color code!  But IMHO it's a good thing.  It just redefines the basic stylesheet of web browser, and it's up to us to use it as a design tool.\n\nThe problem is that most Bootstrap users are developers with no designer experience.  So most of the time Bootstrap CSSs are not customized, or sometimes with the small customization tool available on the official website.\n\nWhat I plan to do is include Bootstrap as a git submodule and add a LESS file overriding Bootstrap so that we get the same grappelli look as today.  I already did this for one of my professional projects.  See [the submodule](https://github.com/dezede/dezede/tree/redesign/libretto/static), [the custom LESS file](https://github.com/dezede/dezede/blob/redesign/libretto/static/css/styles.less) and [the result](http://afo.dezede.org/evenements/).\n. @LeonardoGentile Yes, that's the same workflow (although I didn't know Bootswatch).  But what's the point of using Bootswatch if we want our own theme?\n. I just spent 3 hours on a prototype.  Of course there's A LOT of work to do.\n\nFrom what I did, here is how I see such a work & the amount of time to spend on it:\n- first, copy all admin template from django (and not from grappelli)\n- adapt HTML to work with Bootstrap & with the aim of handling all grappelli features, but with the minimal changes (70 h)\n- write LESS overrides to get the desired design (50 h)\n- add the minimum amount of CSS classes & ids for grappelli jquery object selection (15 h)\n- remove uncustomized templates, try to simplify other templates using `block`s and `extends` (10 h)\n- remove any trace of old HTML classes & ids (5h)\n\nBut to be sure that it won't ruin grappelli, we need to test all the specific features of grappelli: autocompletes, sortable inlines, collapsibles, filter dropdowns, etc.  Before and after that whole rewriting IMO, using Selenium.\nThat should represent an amount of work of 20 hours.\n\nSo I think this whole job could be done **in 220 hours**.  That's 1.5 month of full-time job\u2026\n. @parsch Yes, that could be more precise if we explicitly plan which classes we keep, etc.  In fact, maybe we could \u2212 in order to simplify grappelli \u2212 make a detail of useful & useless HTML classes, their uses, etc?  Such a cleaning would be useful, even if we don't switch to Bootstrap.\nThat said, maybe all grappelli classes are useful; but I found so many different \"grp-*\" that I doubt it.\n. I haven't tried django-autocomplete-light with grappelli, but yesterday I started using [django-ajax-selects](https://github.com/crucialfelix/django-ajax-selects).  It works perfectly with grappelli for `CharField`s, as you can see:\n![](http://img145.imageshack.us/img145/4974/charfieldautocomplete.png)\n\nAll you have to do is to define a `LookupChannel`, add it to `AJAX_LOOKUP_CHANNELS` and specify you want to use an `AutocompleteWidget` for your CharField.\n\nAnd why not replacing the three related lookup views of grappelli with ajax-selects?\nI always wanted to have an autocomplete lookup using methods or haystack in grappelli instead of simple SQL.  I am totally ready to do such a change, if @sehmaschine agrees.\n. :o\\\nAnother solution would be to change grappelli.views so that they are class-based generic views (there is a lot of code in common between the three views) using some kind of lookup channels when one wants to change the default behaviour of `autocomplete_lookup_fields`, etc.\n. Great\u00a0!  I start working on it right now.\n. Ooops, requested pull from stable/2.4.x to master\u2026\n. The pull to master was a mistake (for the second time with yesterday).  And for the locale, I know a main part is in django.contrib.admin, but not everything.  In the inlines, you introduced \"Open All Items\", \"Close[\u2026]\", \"Move Item\", etc.  I translated some other parts because I was not sure if they already were translated.  If you wish, I can remove everything that is already translated in django.\n. Thanks to you for that powerful and beautiful module!\n. I have the same problem with one of my applications.  There is about thirty models that are randomly displayed.\n\nSince [the documentation](https://django-grappelli.readthedocs.org/en/latest/dashboard_api.html#the-modellist-class) mainly explains how to include all the models from an application, I suggest that we either:\n- sort all the models imported by a `app.*` by names\n- or explain in the doc how to do so (the line of code @philwo added in this pull request)\n. @sehmaschine What do you want me to explain?  I could spend hours describing how this is working :)\n\nBasically, these views are the same than before but reordered so that we avoid redundancies.  And since they are class-based, it's easier to extend, maintain, or even understand them, even though I agree the non-linear impression may be misleading.\n\nI chose to split filtering and searching in AutocompleteLookup because the search is typically what someone is willing to change.  Filtering is here a boring task that only selects the model to search in.  And since there were \"FILTER\" and \"SEARCH\" comments before this pull request, I guess someone else got the same idea before ;)\n. I created `model_in_GET` to ease reading and simplify `has_valid_request`.\nAnd yes, we can distinguish methods that should not be overriden.  Either by forbidding override (http://stackoverflow.com/a/321240/1576438) or by making them private, as you suggested.  A simple underscore before may be sufficient, since there is IMO no really good reason to make them private.\n\nAnd you are true, I could have put filtering in another method.\n. I had the same issue, so I am not currently using `MPTTModelAdmin` with my `MPTTModel`s.  A fix would be awesome.\n. It could work if we changed this hard-coded padding with something like `'&nbsp;' * level`.  But this can't take `MPTT_ADMIN_LEVEL_INDENT` into account\u2026  We therefore need to convince the django-mptt to remove this setting.  Or make an ugly copy-paste of this template tag with a few changes.  Or write it here or in the docs this pseudo-solution for those wanting to get this working.\n. Looks like the problem is already solved in django-mptt/master, as you can see here: https://github.com/django-mptt/django-mptt/commit/686f536355e6745eb3fa212fd21d10ddb1d13357.\n. Wrong branch.  I do it again.\n. That would work correctly since `QuerySet.distinct()` is distinguishing ids, not values.\n. Hmm, I'm not sure this `'?'` will be displayed.  It depends on how the JS handles this response. @sehmaschine, what should be returned?\n\nIf `''` should be returned, then I suggest:\n\n```\ndef get_data(self):\n    obj_id = self.GET['object_id']\n    if not obj_id:\n        return [{'value': '', 'label': ''}]\n    try:\n        obj = self.get_queryset().get(pk=obj_id)\n    except self.model.DoesNotExist:\n        label = _('?')\n    else:\n        label = get_label(obj)\n    return [{'value': obj_id, 'label': label}]\n```\n. You're right; I forgot I wrote that.\n. `grappelli.settings` confirms you're right.\n. The issue is still there in 2.4.5.  The input has no `grp-has-related-lookup` class and adding it manually doesn't fix it.\n. @sehmaschine Yes, I'm sure.  Here is a screenshot so you can see this is the latest JS.  I added a breakpoint on the line that should add `.grp-has-related-lookup` and it's never run.\n\nI also withdraw what I said, manually adding `grp-has-related-lookup` does the trick\u2026  Unless you have a custom width, which is the case here.  So both JS and CSS have a problem :\\\n\n![Bug](http://img211.imageshack.us/img211/6812/slection634.png)\n. :+1: \nAnother approach would be to add autocomplete_search_fields to ModelAdmins, unregister 3rd party models, inherit their modeladmins and add autocomplete_search_fields then register them again.\n. Closed due to branch error.  See #353.\n. Hmm\u2026  Why did you close that pull request?\n. No, I closed #352, \"its little sister\", where I made a mistake once again with the branch :\\\n. The small issue with your JS solution is that we can see the inlines \"moving\" from their default slot to the defined placeholder when the page loads.\n\nThere's also the solution of overriding the template.\nI made an implementation on dezede/dezede@ed13ccaf34494e71fd913fd785c229052f6acdc8.\nYou can also read [a small explanation on django-users](https://groups.google.com/forum/#!msg/django-users/yUq2Nvx_4eM/30_EkjePrOAJ).\n. Yes, I'm very interested in reimplementing it. I don't have time to do it this week, so I'll have to postpone it a bit.  However, since I still actively use grappelli and dislike `fieldsets_and_inlines_order`, I'll have to rewrite this in the following weeks ;)\n\nBy the way, [inlines already have verbosity](https://docs.djangoproject.com/en/1.6/ref/contrib/admin/#django.contrib.admin.InlineModelAdmin.verbose_name).  Isn't that enough?  Here's where they are used:\n\n![inlines-verbosity](http://i.imgur.com/3Pa2HiA.png)\n\nIn terms of implementation, it would probably be clea[n|r]er to add an explicit `InlineFieldSet` class that would be used this way:\n\n``` python\nfrom django.contrib.admin import ModelAdmin\nfrom grappelli import ImageFieldSet\n\nclass MyModelAmin(ModelAdmin):\n    fieldsets = (\n        (None, {'fields': ('name', 'type')}),\n        InlineFieldSet(ImageInline),\n        ('Administration', {'fields': ('owner', 'status')}),\n    )\n```\n\nI know that goes against grappelli's logic of implicit template overrides.  I know that logic means that it's easy to give grappelli a try, but that also tends to be obscure.\n\nAnd specifically here, users could be tempted to define stuff like `description` with your syntax. (For more info about `description`, see the end of [this paragraph](https://docs.djangoproject.com/en/1.6/ref/contrib/admin/#django.contrib.admin.ModelAdmin.fieldsets).  It's funny how it mentions TabularInline, as if vanilla Django supported inlines inside fieldsets!)\nBut that would have no effect nor raise an exception.\n. Nice work!  What library are you using to get those translation buttons? Is this django-modeltranslation?\n. Can you access /admin/merchandise/albums/ in your production environment?\n. OK, so admin registration and user permissions are working.  And what happens if you specify each submodule, as @sehmaschine suggested above?\n. There\u2019s a good reason for splitting the term.\nSuppose you want an autocomplete on a Person model with two CharFields for first name and last name. You want to be able to search \u201cBeethoven\u201d or \u201cBeethoven Ludwig\u201d, as well as the full \u201cLudwig van Beethoven\u201d. If we don\u2019t split the term, either while using __istartswith or __icontains, nothing is returned.\n\nI don\u2019t see a good solution without using a search engine or using multiple queries.\nThe best solution IMHO may be to avoid splitting the term if there is only one __[i]startswith field in autocomplete_search_fields + give users a way to write their own query. In my case that would be relying on a search engine.\n. @DeathBorn: This is a really tricky issue\u2026 That\u2019s why search engines are for. You see the problem with the '-'? There\u2019s plenty of other characters that need to be dealt with, like the many types of spaces, '\u00df' vs 'ss', '\u00e4' vs '\u00e6' vs 'ae' vs 'a', etc. \n\nIf we implement what you describe, we\u2019ll end up with an enormous query: it needs to filter against all the combinations of splitted words for all the search fields. And the query will contain dozens of `OR`, which is bad for performance.\nSuppose the search fields are `first_name__icontains`, `middle_name__icontains` & `last_name__icontains`, and you search `Antonio Lucio Vivaldi`. This is a simple case, I have [far more complex cases](https://github.com/dezede/dezede/blob/002034e54ff8e10401fb6015f4d91660f61b3d72/libretto/models/oeuvre.py#L957-L971). The query will look like that:\n\n``` python\nComposer.objects.filter(\n    (Q(first_name__icontains='Antonio')\n     & Q(middle_name__icontains='Lucio')\n     & Q(last_name__icontains='Vivaldi'))\n    | (Q(first_name__icontains='Antonio')\n       & Q(last_name__icontains='Lucio')\n       & Q(middle_name__icontains='Vivaldi'))\n    | (Q(first_name__icontains='Antonio')\n       & Q(middle_name__icontains='Lucio Vivaldi'))\n    | (Q(first_name__icontains='Antonio')\n       & Q(last_name__icontains='Lucio Vivaldi'))\n    | (Q(first_name__icontains='Antonio Lucio')\n       & Q(middle_name__icontains='Vivaldi'))\n    | (Q(first_name__icontains='Antonio Lucio')\n       & Q(last_name__icontains='Vivaldi'))\n    | Q(first_name__icontains='Antonio Lucio Vivaldi')\n    | (Q(middle_name__icontains='Antonio')\n       & Q(first_name__icontains='Lucio')\n       & Q(last_name__icontains='Vivaldi'))\n    | (Q(middle_name__icontains='Antonio')\n       & Q(last_name__icontains='Lucio')\n       & Q(first_name__icontains='Vivaldi'))\n    | (Q(middle_name__icontains='Antonio')\n       & Q(first_name__icontains='Lucio Vivaldi'))\n    | (Q(middle_name__icontains='Antonio')\n       & Q(last_name__icontains='Lucio Vivaldi'))\n    | (Q(middle_name__icontains='Antonio Lucio')\n       & Q(first_name__icontains='Vivaldi'))\n    | (Q(middle_name__icontains='Antonio Lucio')\n       & Q(last_name__icontains='Vivaldi'))\n    | Q(middle_name__icontains='Antonio Lucio Vivaldi')\n    | (Q(last_name__icontains='Antonio')\n       & Q(first_name__icontains='Lucio')\n       & Q(middle_name__icontains='Vivaldi'))\n    | (Q(last_name__icontains='Antonio')\n       & Q(middle_name__icontains='Lucio')\n       & Q(first_name__icontains='Vivaldi'))\n    | (Q(last_name__icontains='Antonio')\n       & Q(first_name__icontains='Lucio Vivaldi'))\n    | (Q(last_name__icontains='Antonio')\n       & Q(middle_name__icontains='Lucio Vivaldi'))\n    | (Q(last_name__icontains='Antonio Lucio')\n       & Q(first_name__icontains='Vivaldi'))\n    | (Q(last_name__icontains='Antonio Lucio')\n       & Q(middle_name__icontains='Vivaldi'))\n    | Q(last_name__icontains='Antonio Lucio Vivaldi')\n)\n```\n\nAnd this is only a simple case, imagine when users search 5 words in a 10 search fields scenario\u2026 I tested the query above against a PostgreSQL table of 9000 people where none match the query: takes 60 ms to complete, and there are indexes on these columns. In comparison, the current query django-grappelli executes is the following and takes 24 ms to run on the same table:\n\n``` python\nComposer.objects.filter(\n    (Q(first_name__icontains='Antonio')\n     | Q(middle_name__icontains='Antonio')\n     | Q(last_name__icontains='Antonio'))\n    & (Q(first_name__icontains='Lucio')\n       | Q(middle_name__icontains='Lucio')\n       | Q(last_name__icontains='Lucio'))\n    & (Q(first_name__icontains='Vivaldi')\n       | Q(middle_name__icontains='Vivaldi')\n       | Q(last_name__icontains='Vivaldi')))\n```\n\nThe good news is that this approach would solve #585. But it will not sort the results by relevance, which can only be done by a search engine. And of course, performance with a search engine would be unmatched.\n\nTo sum up, **it would partially improve autocompletion while decreasing performance on most cases**.\n\nIn my opinion, what we probably need to do first is allow users to specify their own `AutocompleteLookup` subclass in the settings. Since a lot of sites have full-text search, using haystack for example, this would be really useful.\n. We could add the list of available languages to the context of the view, then:\n\n```\n{% if LANGUAGE_CODE in datepicker_available_languages %}\n  ....\n{% endif %}\n```\n. Oh, I see the problem, we can't customize admin views\u2026  So a template tag could be great.  We could even implement automatic datepicker localization discovery using staticfiles.  \"We try to find 'grappelli/jquery/i18n/ui.datepicker-de-de.js' with staticfiles, and if an exception is raised, we don't include datepicker locale\".  (However, I don't remember whether staticfiles is a mandatory app when using admin.)\n. :+1: Twitter Bootstrap is awesome nowadays, we should use it.\nBut that would require a lot of rewriting, and using LESS instead of SASS.  As I use LESS only, you can count on me to help if we do such a rewriting.\n\nMaybe we could also use django_compressor to precompile & minimify the LESS files to CSS at the first user request.  That's what I do for my professional projects, and it allows people to easily override variables using their own LESS stylings.  It also avoids having to include compiled & minimified files in the repository.\n. We can make our own \"theme\" based on the beautiful current design of grappelli.\n. No, that won't be easy\u2026  I can do a prototype if you want, to evaluate the amount of work needed.\n. In my opinion, that will be easier to maintain than with Compass for these reasons:\n- there is now a much larger community using Bootstrap than Compass, making it easier to find contributors\n- the amount of CSS to maintain should drastically decrease with Bootstrap\n- Bootstrap is easier to understand; we use powerful HTML classes and we don't have to care much about CSS\n- it's easy to customize its look with LESS\n\nThat being said, I know there has been a few backward incompatibilities from version to version, especially between Bootstrap 2 and 3.  But this wasn't very painful.\nAnd we can always keep an old version of Bootstrap without being obsolete, unlike django.contrib.admin.\n\nI guess @parsch and you are accustomed to the workflow with Compass and SASS. I don't really know Compass and you both did an awesome job using it, so don't worry if you want to keep it that way ;)\n. @LeonardoGentile: Excellent project!  Unfortunately, that would add a heavy dependancy.\nI'll start from scratch\u2026  Hardcore mode!\n. @sehmaschine I agree, using Bootstrap with no deep customization is not convincing.  Apart from being clean, Bootstrap default stylesheet looks generic and tasteless.  There's not even a color code!  But IMHO it's a good thing.  It just redefines the basic stylesheet of web browser, and it's up to us to use it as a design tool.\n\nThe problem is that most Bootstrap users are developers with no designer experience.  So most of the time Bootstrap CSSs are not customized, or sometimes with the small customization tool available on the official website.\n\nWhat I plan to do is include Bootstrap as a git submodule and add a LESS file overriding Bootstrap so that we get the same grappelli look as today.  I already did this for one of my professional projects.  See [the submodule](https://github.com/dezede/dezede/tree/redesign/libretto/static), [the custom LESS file](https://github.com/dezede/dezede/blob/redesign/libretto/static/css/styles.less) and [the result](http://afo.dezede.org/evenements/).\n. @LeonardoGentile Yes, that's the same workflow (although I didn't know Bootswatch).  But what's the point of using Bootswatch if we want our own theme?\n. I just spent 3 hours on a prototype.  Of course there's A LOT of work to do.\n\nFrom what I did, here is how I see such a work & the amount of time to spend on it:\n- first, copy all admin template from django (and not from grappelli)\n- adapt HTML to work with Bootstrap & with the aim of handling all grappelli features, but with the minimal changes (70 h)\n- write LESS overrides to get the desired design (50 h)\n- add the minimum amount of CSS classes & ids for grappelli jquery object selection (15 h)\n- remove uncustomized templates, try to simplify other templates using `block`s and `extends` (10 h)\n- remove any trace of old HTML classes & ids (5h)\n\nBut to be sure that it won't ruin grappelli, we need to test all the specific features of grappelli: autocompletes, sortable inlines, collapsibles, filter dropdowns, etc.  Before and after that whole rewriting IMO, using Selenium.\nThat should represent an amount of work of 20 hours.\n\nSo I think this whole job could be done **in 220 hours**.  That's 1.5 month of full-time job\u2026\n. @parsch Yes, that could be more precise if we explicitly plan which classes we keep, etc.  In fact, maybe we could \u2212 in order to simplify grappelli \u2212 make a detail of useful & useless HTML classes, their uses, etc?  Such a cleaning would be useful, even if we don't switch to Bootstrap.\nThat said, maybe all grappelli classes are useful; but I found so many different \"grp-*\" that I doubt it.\n. I haven't tried django-autocomplete-light with grappelli, but yesterday I started using [django-ajax-selects](https://github.com/crucialfelix/django-ajax-selects).  It works perfectly with grappelli for `CharField`s, as you can see:\n![](http://img145.imageshack.us/img145/4974/charfieldautocomplete.png)\n\nAll you have to do is to define a `LookupChannel`, add it to `AJAX_LOOKUP_CHANNELS` and specify you want to use an `AutocompleteWidget` for your CharField.\n\nAnd why not replacing the three related lookup views of grappelli with ajax-selects?\nI always wanted to have an autocomplete lookup using methods or haystack in grappelli instead of simple SQL.  I am totally ready to do such a change, if @sehmaschine agrees.\n. :o\\\nAnother solution would be to change grappelli.views so that they are class-based generic views (there is a lot of code in common between the three views) using some kind of lookup channels when one wants to change the default behaviour of `autocomplete_lookup_fields`, etc.\n. Great\u00a0!  I start working on it right now.\n. Ooops, requested pull from stable/2.4.x to master\u2026\n. The pull to master was a mistake (for the second time with yesterday).  And for the locale, I know a main part is in django.contrib.admin, but not everything.  In the inlines, you introduced \"Open All Items\", \"Close[\u2026]\", \"Move Item\", etc.  I translated some other parts because I was not sure if they already were translated.  If you wish, I can remove everything that is already translated in django.\n. Thanks to you for that powerful and beautiful module!\n. I have the same problem with one of my applications.  There is about thirty models that are randomly displayed.\n\nSince [the documentation](https://django-grappelli.readthedocs.org/en/latest/dashboard_api.html#the-modellist-class) mainly explains how to include all the models from an application, I suggest that we either:\n- sort all the models imported by a `app.*` by names\n- or explain in the doc how to do so (the line of code @philwo added in this pull request)\n. @sehmaschine What do you want me to explain?  I could spend hours describing how this is working :)\n\nBasically, these views are the same than before but reordered so that we avoid redundancies.  And since they are class-based, it's easier to extend, maintain, or even understand them, even though I agree the non-linear impression may be misleading.\n\nI chose to split filtering and searching in AutocompleteLookup because the search is typically what someone is willing to change.  Filtering is here a boring task that only selects the model to search in.  And since there were \"FILTER\" and \"SEARCH\" comments before this pull request, I guess someone else got the same idea before ;)\n. I created `model_in_GET` to ease reading and simplify `has_valid_request`.\nAnd yes, we can distinguish methods that should not be overriden.  Either by forbidding override (http://stackoverflow.com/a/321240/1576438) or by making them private, as you suggested.  A simple underscore before may be sufficient, since there is IMO no really good reason to make them private.\n\nAnd you are true, I could have put filtering in another method.\n. I had the same issue, so I am not currently using `MPTTModelAdmin` with my `MPTTModel`s.  A fix would be awesome.\n. It could work if we changed this hard-coded padding with something like `'&nbsp;' * level`.  But this can't take `MPTT_ADMIN_LEVEL_INDENT` into account\u2026  We therefore need to convince the django-mptt to remove this setting.  Or make an ugly copy-paste of this template tag with a few changes.  Or write it here or in the docs this pseudo-solution for those wanting to get this working.\n. Looks like the problem is already solved in django-mptt/master, as you can see here: https://github.com/django-mptt/django-mptt/commit/686f536355e6745eb3fa212fd21d10ddb1d13357.\n. Wrong branch.  I do it again.\n. That would work correctly since `QuerySet.distinct()` is distinguishing ids, not values.\n. Hmm, I'm not sure this `'?'` will be displayed.  It depends on how the JS handles this response. @sehmaschine, what should be returned?\n\nIf `''` should be returned, then I suggest:\n\n```\ndef get_data(self):\n    obj_id = self.GET['object_id']\n    if not obj_id:\n        return [{'value': '', 'label': ''}]\n    try:\n        obj = self.get_queryset().get(pk=obj_id)\n    except self.model.DoesNotExist:\n        label = _('?')\n    else:\n        label = get_label(obj)\n    return [{'value': obj_id, 'label': label}]\n```\n. You're right; I forgot I wrote that.\n. `grappelli.settings` confirms you're right.\n. The issue is still there in 2.4.5.  The input has no `grp-has-related-lookup` class and adding it manually doesn't fix it.\n. @sehmaschine Yes, I'm sure.  Here is a screenshot so you can see this is the latest JS.  I added a breakpoint on the line that should add `.grp-has-related-lookup` and it's never run.\n\nI also withdraw what I said, manually adding `grp-has-related-lookup` does the trick\u2026  Unless you have a custom width, which is the case here.  So both JS and CSS have a problem :\\\n\n![Bug](http://img211.imageshack.us/img211/6812/slection634.png)\n. :+1: \nAnother approach would be to add autocomplete_search_fields to ModelAdmins, unregister 3rd party models, inherit their modeladmins and add autocomplete_search_fields then register them again.\n. Closed due to branch error.  See #353.\n. Hmm\u2026  Why did you close that pull request?\n. No, I closed #352, \"its little sister\", where I made a mistake once again with the branch :\\\n. The small issue with your JS solution is that we can see the inlines \"moving\" from their default slot to the defined placeholder when the page loads.\n\nThere's also the solution of overriding the template.\nI made an implementation on dezede/dezede@ed13ccaf34494e71fd913fd785c229052f6acdc8.\nYou can also read [a small explanation on django-users](https://groups.google.com/forum/#!msg/django-users/yUq2Nvx_4eM/30_EkjePrOAJ).\n. Yes, I'm very interested in reimplementing it. I don't have time to do it this week, so I'll have to postpone it a bit.  However, since I still actively use grappelli and dislike `fieldsets_and_inlines_order`, I'll have to rewrite this in the following weeks ;)\n\nBy the way, [inlines already have verbosity](https://docs.djangoproject.com/en/1.6/ref/contrib/admin/#django.contrib.admin.InlineModelAdmin.verbose_name).  Isn't that enough?  Here's where they are used:\n\n![inlines-verbosity](http://i.imgur.com/3Pa2HiA.png)\n\nIn terms of implementation, it would probably be clea[n|r]er to add an explicit `InlineFieldSet` class that would be used this way:\n\n``` python\nfrom django.contrib.admin import ModelAdmin\nfrom grappelli import ImageFieldSet\n\nclass MyModelAmin(ModelAdmin):\n    fieldsets = (\n        (None, {'fields': ('name', 'type')}),\n        InlineFieldSet(ImageInline),\n        ('Administration', {'fields': ('owner', 'status')}),\n    )\n```\n\nI know that goes against grappelli's logic of implicit template overrides.  I know that logic means that it's easy to give grappelli a try, but that also tends to be obscure.\n\nAnd specifically here, users could be tempted to define stuff like `description` with your syntax. (For more info about `description`, see the end of [this paragraph](https://docs.djangoproject.com/en/1.6/ref/contrib/admin/#django.contrib.admin.ModelAdmin.fieldsets).  It's funny how it mentions TabularInline, as if vanilla Django supported inlines inside fieldsets!)\nBut that would have no effect nor raise an exception.\n. Nice work!  What library are you using to get those translation buttons? Is this django-modeltranslation?\n. Can you access /admin/merchandise/albums/ in your production environment?\n. OK, so admin registration and user permissions are working.  And what happens if you specify each submodule, as @sehmaschine suggested above?\n. There\u2019s a good reason for splitting the term.\nSuppose you want an autocomplete on a Person model with two CharFields for first name and last name. You want to be able to search \u201cBeethoven\u201d or \u201cBeethoven Ludwig\u201d, as well as the full \u201cLudwig van Beethoven\u201d. If we don\u2019t split the term, either while using __istartswith or __icontains, nothing is returned.\n\nI don\u2019t see a good solution without using a search engine or using multiple queries.\nThe best solution IMHO may be to avoid splitting the term if there is only one __[i]startswith field in autocomplete_search_fields + give users a way to write their own query. In my case that would be relying on a search engine.\n. @DeathBorn: This is a really tricky issue\u2026 That\u2019s why search engines are for. You see the problem with the '-'? There\u2019s plenty of other characters that need to be dealt with, like the many types of spaces, '\u00df' vs 'ss', '\u00e4' vs '\u00e6' vs 'ae' vs 'a', etc. \n\nIf we implement what you describe, we\u2019ll end up with an enormous query: it needs to filter against all the combinations of splitted words for all the search fields. And the query will contain dozens of `OR`, which is bad for performance.\nSuppose the search fields are `first_name__icontains`, `middle_name__icontains` & `last_name__icontains`, and you search `Antonio Lucio Vivaldi`. This is a simple case, I have [far more complex cases](https://github.com/dezede/dezede/blob/002034e54ff8e10401fb6015f4d91660f61b3d72/libretto/models/oeuvre.py#L957-L971). The query will look like that:\n\n``` python\nComposer.objects.filter(\n    (Q(first_name__icontains='Antonio')\n     & Q(middle_name__icontains='Lucio')\n     & Q(last_name__icontains='Vivaldi'))\n    | (Q(first_name__icontains='Antonio')\n       & Q(last_name__icontains='Lucio')\n       & Q(middle_name__icontains='Vivaldi'))\n    | (Q(first_name__icontains='Antonio')\n       & Q(middle_name__icontains='Lucio Vivaldi'))\n    | (Q(first_name__icontains='Antonio')\n       & Q(last_name__icontains='Lucio Vivaldi'))\n    | (Q(first_name__icontains='Antonio Lucio')\n       & Q(middle_name__icontains='Vivaldi'))\n    | (Q(first_name__icontains='Antonio Lucio')\n       & Q(last_name__icontains='Vivaldi'))\n    | Q(first_name__icontains='Antonio Lucio Vivaldi')\n    | (Q(middle_name__icontains='Antonio')\n       & Q(first_name__icontains='Lucio')\n       & Q(last_name__icontains='Vivaldi'))\n    | (Q(middle_name__icontains='Antonio')\n       & Q(last_name__icontains='Lucio')\n       & Q(first_name__icontains='Vivaldi'))\n    | (Q(middle_name__icontains='Antonio')\n       & Q(first_name__icontains='Lucio Vivaldi'))\n    | (Q(middle_name__icontains='Antonio')\n       & Q(last_name__icontains='Lucio Vivaldi'))\n    | (Q(middle_name__icontains='Antonio Lucio')\n       & Q(first_name__icontains='Vivaldi'))\n    | (Q(middle_name__icontains='Antonio Lucio')\n       & Q(last_name__icontains='Vivaldi'))\n    | Q(middle_name__icontains='Antonio Lucio Vivaldi')\n    | (Q(last_name__icontains='Antonio')\n       & Q(first_name__icontains='Lucio')\n       & Q(middle_name__icontains='Vivaldi'))\n    | (Q(last_name__icontains='Antonio')\n       & Q(middle_name__icontains='Lucio')\n       & Q(first_name__icontains='Vivaldi'))\n    | (Q(last_name__icontains='Antonio')\n       & Q(first_name__icontains='Lucio Vivaldi'))\n    | (Q(last_name__icontains='Antonio')\n       & Q(middle_name__icontains='Lucio Vivaldi'))\n    | (Q(last_name__icontains='Antonio Lucio')\n       & Q(first_name__icontains='Vivaldi'))\n    | (Q(last_name__icontains='Antonio Lucio')\n       & Q(middle_name__icontains='Vivaldi'))\n    | Q(last_name__icontains='Antonio Lucio Vivaldi')\n)\n```\n\nAnd this is only a simple case, imagine when users search 5 words in a 10 search fields scenario\u2026 I tested the query above against a PostgreSQL table of 9000 people where none match the query: takes 60 ms to complete, and there are indexes on these columns. In comparison, the current query django-grappelli executes is the following and takes 24 ms to run on the same table:\n\n``` python\nComposer.objects.filter(\n    (Q(first_name__icontains='Antonio')\n     | Q(middle_name__icontains='Antonio')\n     | Q(last_name__icontains='Antonio'))\n    & (Q(first_name__icontains='Lucio')\n       | Q(middle_name__icontains='Lucio')\n       | Q(last_name__icontains='Lucio'))\n    & (Q(first_name__icontains='Vivaldi')\n       | Q(middle_name__icontains='Vivaldi')\n       | Q(last_name__icontains='Vivaldi')))\n```\n\nThe good news is that this approach would solve #585. But it will not sort the results by relevance, which can only be done by a search engine. And of course, performance with a search engine would be unmatched.\n\nTo sum up, **it would partially improve autocompletion while decreasing performance on most cases**.\n\nIn my opinion, what we probably need to do first is allow users to specify their own `AutocompleteLookup` subclass in the settings. Since a lot of sites have full-text search, using haystack for example, this would be really useful.\n. ",
    "pawlyk": "Can i add another localization on datepicker?\n. Can i add another localization on datepicker?\n. ",
    "camilonova": "What if you pull them from a CDN ?\n. This happens to me as well, could be the ordering of javascript libraries?\n. There is any possible or near date for 2.4 version ?\n. We are close to the middle of the year, can we have some fixed date for planning the release?\n. +1 can you update pypi please.\n@parsch nice job\n. This is so annoying, I'm getting 500 errors because sometimes grappelli is looking for the en-us localized file and I have many locales active on the site, could be any random language and I don't want to add all the file languages.\n\nAt least can we silently move on if the file does not exist? \n\nMy file storage check that every referenced file must exists, so I cannot live with a 404 on those files.\n\nCan I help somehow to fix this?\n. What about non localizing the calendar widget, make it English by default and let anyone who need the localized version to replace it?\n\nI guess most of the people don't need the localized calendar.\n\nWhat do you think?\n\nSent from my iPhone\n\n> On Feb 4, 2015, at 3:59 PM, Micha\u0142 Pasternak notifications@github.com wrote:\n> \n> Well, what solution would suit you, Camilo?\n> \n> 2015-02-04 21:56 GMT+01:00 Camilo Nova notifications@github.com:\n> \n> > This is so annoying, I'm getting 500 errors because sometimes grappelli is\n> > looking for the en-us localized file and I have many locales active on the\n> > site, could be any random language and I don't want to add all the file\n> > languages.\n> > \n> > At least can we silently move on if the file does not exist?\n> > \n> > My file storage check that every referenced file must exists, so I cannot\n> > live with a 404 on those files.\n> > \n> > Can I help somehow to fix this?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/sehmaschine/django-grappelli/pull/528#issuecomment-72937128\n> > .\n> \n> ## \n> \n> Pozdrawiam,\n> Micha\u0142 Pasternak\n> \ud83d\udcf1 +48 793 66 87 33\n> \u2014\n> Reply to this email directly or view it on GitHub.\n. @msamoylov thats my problem too.\n. @mpasternak any thoughts ?\n. Great, thanks.\n. @sehmaschine have you look at it?\n. @sehmaschine it is going to be merged so we can point the requirements file here?\n\nDo you have an ETA for the next release?\n\nThank you.\n. @sehmaschine two weeks gone\n. @sehmaschine any updates?\n. What if you pull them from a CDN ?\n. This happens to me as well, could be the ordering of javascript libraries?\n. There is any possible or near date for 2.4 version ?\n. We are close to the middle of the year, can we have some fixed date for planning the release?\n. +1 can you update pypi please.\n@parsch nice job\n. This is so annoying, I'm getting 500 errors because sometimes grappelli is looking for the en-us localized file and I have many locales active on the site, could be any random language and I don't want to add all the file languages.\n\nAt least can we silently move on if the file does not exist? \n\nMy file storage check that every referenced file must exists, so I cannot live with a 404 on those files.\n\nCan I help somehow to fix this?\n. What about non localizing the calendar widget, make it English by default and let anyone who need the localized version to replace it?\n\nI guess most of the people don't need the localized calendar.\n\nWhat do you think?\n\nSent from my iPhone\n\n> On Feb 4, 2015, at 3:59 PM, Micha\u0142 Pasternak notifications@github.com wrote:\n> \n> Well, what solution would suit you, Camilo?\n> \n> 2015-02-04 21:56 GMT+01:00 Camilo Nova notifications@github.com:\n> \n> > This is so annoying, I'm getting 500 errors because sometimes grappelli is\n> > looking for the en-us localized file and I have many locales active on the\n> > site, could be any random language and I don't want to add all the file\n> > languages.\n> > \n> > At least can we silently move on if the file does not exist?\n> > \n> > My file storage check that every referenced file must exists, so I cannot\n> > live with a 404 on those files.\n> > \n> > Can I help somehow to fix this?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/sehmaschine/django-grappelli/pull/528#issuecomment-72937128\n> > .\n> \n> ## \n> \n> Pozdrawiam,\n> Micha\u0142 Pasternak\n> \ud83d\udcf1 +48 793 66 87 33\n> \u2014\n> Reply to this email directly or view it on GitHub.\n. @msamoylov thats my problem too.\n. @mpasternak any thoughts ?\n. Great, thanks.\n. @sehmaschine have you look at it?\n. @sehmaschine it is going to be merged so we can point the requirements file here?\n\nDo you have an ETA for the next release?\n\nThank you.\n. @sehmaschine two weeks gone\n. @sehmaschine any updates?\n. ",
    "michelts": "Cool! This feature could fix the issue:68 too.\n. Hi Patrick,\n\nI agree with you and customizing the styles are pretty simple. There are 2 problems in that approach. The first is that you must specify a content_css file that depends of the STATIC_URL path. I did it through the code above:\n\n``` javascript\nvar tinymce_default_options = {...};\nif(typeof(tinymce_options)!='undefined')\nfor(p in tinymce_options)\n    tinymce_default_options[p] = tinymce_options[p];\ntinyMCE.init(tinymce_default_options);\n```\n\nIn the admin/base_site.html, I prepend the block javascripts with the above code:\n\n``` jinja\n{% block javascripts %}\n<script type=\"text/javascript\"><!--\nvar tinymce_options = {\n    content_css: \"{{ STATIC_URL }}css/custom_content.css\"\n};\n--></script>\n{{ block.super }}{% endblock %}\n```\n\nThe second problem is that style_formats do not have an _exact_ instruction to avoid style merging. I solved it through the code above:\n\n``` javascript\nstyle_formats : [\n        {title : 'Center', block: 'p', attributes: {class: 'center'}},\n        {title : 'Left', block: 'p', attributes: {class: 'left'}},\n        {title : 'Right', block: 'p', attributes: {class: 'right'}},\n        {title : 'Justify', block: 'p', attributes: {class: 'justify'}}\n    ],\n```\n\nNote that I set the attributes reather than the class itself, this way I avoid a p get the more than one class at same time.\n\nDo you have any better approach for this?\n. I understand your point. I will extend this thread to the django developers list. A django's config option would be better than a grappelli one. We could even raise 404 on the app index url (something grappelli cannot do).\n\nJust to note, I dig into django's tickets and found [when it starts to have app-index](https://code.djangoproject.com/ticket/1390). \n. We both hope so :)\n\nAnyway, until this improvement comes to django, an exit for the problem is to rewrite the app_index template and make it redirect to the admin homepage. This must be done through the meta tag \"refresh\".\n\nIt is ugly but it works ;)\n. I would like to apologise. I told _help text_ with _error messages_ in mind... Very sorry.\n\nAnyway, I tested again with Grappelli 2.4.2 with Firefox 15.0.1 and Google Chrome, both in Linux. In my case, I'm testing with a ChoiceField (an fk). The problem comes when the help text is larger than the select box itself.\n\nI tested 3 ways, with an autocomplete lookup field, with a raw id field and with a default select. In both cases, the line won't break due the white-space rule but with the autocomplete + Firefox, the text is cutted.\n\nI solved it adding this rule in the screen.css:\n\n``` css\n.grp-tabular .grp-td ul.errorlist li {                                                            \n    white-space: normal;                                                                          \n}\n```\n\nAlso, with a standard select box, the add_another link seems weird due the _float: left_ rule. I solved it adding:\n\n``` css\n.grp-td select + a.add-another {                                                                  \n    float: none;                                                                                  \n}\n```\n\nYou can reproduce this easier by throwing any error message and rewriting it through firebug. If you wait until tomorrow, I can test it with Internet Explorer too.\n\nThanks and sorry the mistake again :)\n. By the way, the problem happens in google chrome. Firefox is ok. I didn't tested IE.\n. Cool! This feature could fix the issue:68 too.\n. Hi Patrick,\n\nI agree with you and customizing the styles are pretty simple. There are 2 problems in that approach. The first is that you must specify a content_css file that depends of the STATIC_URL path. I did it through the code above:\n\n``` javascript\nvar tinymce_default_options = {...};\nif(typeof(tinymce_options)!='undefined')\nfor(p in tinymce_options)\n    tinymce_default_options[p] = tinymce_options[p];\ntinyMCE.init(tinymce_default_options);\n```\n\nIn the admin/base_site.html, I prepend the block javascripts with the above code:\n\n``` jinja\n{% block javascripts %}\n<script type=\"text/javascript\"><!--\nvar tinymce_options = {\n    content_css: \"{{ STATIC_URL }}css/custom_content.css\"\n};\n--></script>\n{{ block.super }}{% endblock %}\n```\n\nThe second problem is that style_formats do not have an _exact_ instruction to avoid style merging. I solved it through the code above:\n\n``` javascript\nstyle_formats : [\n        {title : 'Center', block: 'p', attributes: {class: 'center'}},\n        {title : 'Left', block: 'p', attributes: {class: 'left'}},\n        {title : 'Right', block: 'p', attributes: {class: 'right'}},\n        {title : 'Justify', block: 'p', attributes: {class: 'justify'}}\n    ],\n```\n\nNote that I set the attributes reather than the class itself, this way I avoid a p get the more than one class at same time.\n\nDo you have any better approach for this?\n. I understand your point. I will extend this thread to the django developers list. A django's config option would be better than a grappelli one. We could even raise 404 on the app index url (something grappelli cannot do).\n\nJust to note, I dig into django's tickets and found [when it starts to have app-index](https://code.djangoproject.com/ticket/1390). \n. We both hope so :)\n\nAnyway, until this improvement comes to django, an exit for the problem is to rewrite the app_index template and make it redirect to the admin homepage. This must be done through the meta tag \"refresh\".\n\nIt is ugly but it works ;)\n. I would like to apologise. I told _help text_ with _error messages_ in mind... Very sorry.\n\nAnyway, I tested again with Grappelli 2.4.2 with Firefox 15.0.1 and Google Chrome, both in Linux. In my case, I'm testing with a ChoiceField (an fk). The problem comes when the help text is larger than the select box itself.\n\nI tested 3 ways, with an autocomplete lookup field, with a raw id field and with a default select. In both cases, the line won't break due the white-space rule but with the autocomplete + Firefox, the text is cutted.\n\nI solved it adding this rule in the screen.css:\n\n``` css\n.grp-tabular .grp-td ul.errorlist li {                                                            \n    white-space: normal;                                                                          \n}\n```\n\nAlso, with a standard select box, the add_another link seems weird due the _float: left_ rule. I solved it adding:\n\n``` css\n.grp-td select + a.add-another {                                                                  \n    float: none;                                                                                  \n}\n```\n\nYou can reproduce this easier by throwing any error message and rewriting it through firebug. If you wait until tomorrow, I can test it with Internet Explorer too.\n\nThanks and sorry the mistake again :)\n. By the way, the problem happens in google chrome. Firefox is ok. I didn't tested IE.\n. ",
    "stepmr": "I think this would be great! I was forced to revert to normal django admin on my last project because of filters (client request) :(\n. I think this would be great! I was forced to revert to normal django admin on my last project because of filters (client request) :(\n. ",
    "kbhalerao": "No - I did not.. I probably won't revert to 1.3 though, since I think I'm using some 1.4 features. If you confirm it works with 1.3, feel free to ignore the issue. \nCheers and thanks for a superb product. \nK\n\nOn Jul 28, 2011, at 10:53 AM, sehmaschine wrote:\n\n> did you test with django 1.3? I\u00b4m asking because grappelli is always developed against the latest official release.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/sehmaschine/django-grappelli/issues/9#issuecomment-1673748\n. I removed django 1.4 pre-a and installed 1.3. Problem seems to persist. However, there are some inconsistencies - it seem to work on Safari on Windows (not sure which version - not my computer), and among my two macs, (same OS X version) it works on one Chrome, but not on the other...\n. Right - problem doesn't exist on the regular django admin. There are no errors on the page anywhere - all the scripts seem to load fine, my access log shows a POST from the computer.. it doesn't redirect to the next stage. .. On my MBP - Firefox and Chrome work, on my MBA - nothing works, on my work iMac - only Firefox works. They are all 10.6.8 and all the browsers are updated. Further, if I set my Safari user agent to Firefox, it makes no difference. \n\nI can make you a login to my site if you want to look at it yourself.\n\nI've read about the login loop issue in Safari and various solutions, but none of them have helped. I'm sorry - I'm not sure what useful information I can provide, since it works perfectly in some browsers... Would you suspect a processor architecture issue? MBA / iMac are Core2Duo / 32 bit, MBP is an i7 /64 bit if I'm not mistaken...\n. Can you send me your email? I dont' want to post a login on the forum. \nK\n\nOn Jul 31, 2011, at 8:37 AM, sehmaschine wrote:\n\n> yes, login would be helpful.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/sehmaschine/django-grappelli/issues/9#issuecomment-1695066\n. This issue was resolved - clearing the browser caches and changing the password seemed to make the issue go away. \nThanks sehmachine\n. OK - I made a mistake in the previous post. I have two applications that use the TinyMCE editor. In one of them, I use the admin class as above. In the other one, I add \n    settings.ADMIN_MEDIA_PREFIX+'tinymce_setup/tinymce_setup.js'\nas well. I haven't made any changes to the stock setup file from you. I only get the getUserSetting error when I include your tinymc_setup.js. No error when including TinyMCEAdmin. \n\nIf I remove TinyMCEAdmin.js, I do not see the TinyMCE editor. If I have them both in, I still get the error. \n\nRegardless of the error or no error, I still cannot add the image. The only HTML it adds is the one above. I checked to make sure that the img tag and its attributes are in the 'valid_element' or 'extended_valid_elements' lists.\n\nAre you saying I should make a copy of TinyMCEAdmin, rename it to my custom setup file and point to it? I did change the skin to 'grappelli' in it and it does look very nice, but I still can't add the image. \n. Ok - this issue is resolved - \nI was using wrong instructions from somewhere to include tiny_mce_src and TinyMCEAdmin in my django classes. \nThe correct ones to include are tiny_mce.js and tinymce_setup.js as per the instructions. \nThanks sehmashine!\n. No - I did not.. I probably won't revert to 1.3 though, since I think I'm using some 1.4 features. If you confirm it works with 1.3, feel free to ignore the issue. \nCheers and thanks for a superb product. \nK\n\nOn Jul 28, 2011, at 10:53 AM, sehmaschine wrote:\n\n> did you test with django 1.3? I\u00b4m asking because grappelli is always developed against the latest official release.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/sehmaschine/django-grappelli/issues/9#issuecomment-1673748\n. I removed django 1.4 pre-a and installed 1.3. Problem seems to persist. However, there are some inconsistencies - it seem to work on Safari on Windows (not sure which version - not my computer), and among my two macs, (same OS X version) it works on one Chrome, but not on the other...\n. Right - problem doesn't exist on the regular django admin. There are no errors on the page anywhere - all the scripts seem to load fine, my access log shows a POST from the computer.. it doesn't redirect to the next stage. .. On my MBP - Firefox and Chrome work, on my MBA - nothing works, on my work iMac - only Firefox works. They are all 10.6.8 and all the browsers are updated. Further, if I set my Safari user agent to Firefox, it makes no difference. \n\nI can make you a login to my site if you want to look at it yourself.\n\nI've read about the login loop issue in Safari and various solutions, but none of them have helped. I'm sorry - I'm not sure what useful information I can provide, since it works perfectly in some browsers... Would you suspect a processor architecture issue? MBA / iMac are Core2Duo / 32 bit, MBP is an i7 /64 bit if I'm not mistaken...\n. Can you send me your email? I dont' want to post a login on the forum. \nK\n\nOn Jul 31, 2011, at 8:37 AM, sehmaschine wrote:\n\n> yes, login would be helpful.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/sehmaschine/django-grappelli/issues/9#issuecomment-1695066\n. This issue was resolved - clearing the browser caches and changing the password seemed to make the issue go away. \nThanks sehmachine\n. OK - I made a mistake in the previous post. I have two applications that use the TinyMCE editor. In one of them, I use the admin class as above. In the other one, I add \n    settings.ADMIN_MEDIA_PREFIX+'tinymce_setup/tinymce_setup.js'\nas well. I haven't made any changes to the stock setup file from you. I only get the getUserSetting error when I include your tinymc_setup.js. No error when including TinyMCEAdmin. \n\nIf I remove TinyMCEAdmin.js, I do not see the TinyMCE editor. If I have them both in, I still get the error. \n\nRegardless of the error or no error, I still cannot add the image. The only HTML it adds is the one above. I checked to make sure that the img tag and its attributes are in the 'valid_element' or 'extended_valid_elements' lists.\n\nAre you saying I should make a copy of TinyMCEAdmin, rename it to my custom setup file and point to it? I did change the skin to 'grappelli' in it and it does look very nice, but I still can't add the image. \n. Ok - this issue is resolved - \nI was using wrong instructions from somewhere to include tiny_mce_src and TinyMCEAdmin in my django classes. \nThe correct ones to include are tiny_mce.js and tinymce_setup.js as per the instructions. \nThanks sehmashine!\n. ",
    "sebfie": "Yes i use it, but i didn't install it with pip, i just but the directory on my project, i have to use pip?\n. Sorry, i closed the issue, i clicked on the wrong button :)\n. ok i start again with pip.\n. That's the same. I follow this instructions : http://readthedocs.org/docs/django-grappelli/en/latest/quickstart.html#installation\n. I don't know what i did wrong, because my own css works.\n. I send you an email with my skype id. Thank you\n. Yes i use it, but i didn't install it with pip, i just but the directory on my project, i have to use pip?\n. Sorry, i closed the issue, i clicked on the wrong button :)\n. ok i start again with pip.\n. That's the same. I follow this instructions : http://readthedocs.org/docs/django-grappelli/en/latest/quickstart.html#installation\n. I don't know what i did wrong, because my own css works.\n. I send you an email with my skype id. Thank you\n. ",
    "rbilash": "Hi Guys, \nI have the same issue, did you find out the solution to the problem? \n\nI have checked the sources fast and found that admin interface tries to load dashboard.css (or login.css when not logged in) and both of these files missing in source code. they are also missing in source repo here. So if this is a problem, could you please update repo with missing files, or please let me know how to resolve the issue, thanks!\n. Hi Guys, \nI have the same issue, did you find out the solution to the problem? \n\nI have checked the sources fast and found that admin interface tries to load dashboard.css (or login.css when not logged in) and both of these files missing in source code. they are also missing in source repo here. So if this is a problem, could you please update repo with missing files, or please let me know how to resolve the issue, thanks!\n. ",
    "l00mi": "Hello, I have also a problem with css and layout of grappelli. I did follow step-by-step instructions for installation. I did install through pip.\n\nStrange things (as far I understand stuff):\n- <script type=\"text/javascript\">window.**admin_media_prefix** = \"/static/grappelli/\";</script> is an entry in the HTML source\n- in the static files there is folder like \"tinymce Kopie\"\n- the icon paths show to /grappeli/img/ and not /grappeli/img/icons/ (and in general no images are loaded)\n\nI use the pip version:\ndjango-grappelli          - A jazzy skin for the Django Admin-Interface.\n  INSTALLED: 2.3.3 (latest)\n. Hello, I have also a problem with css and layout of grappelli. I did follow step-by-step instructions for installation. I did install through pip.\n\nStrange things (as far I understand stuff):\n- <script type=\"text/javascript\">window.**admin_media_prefix** = \"/static/grappelli/\";</script> is an entry in the HTML source\n- in the static files there is folder like \"tinymce Kopie\"\n- the icon paths show to /grappeli/img/ and not /grappeli/img/icons/ (and in general no images are loaded)\n\nI use the pip version:\ndjango-grappelli          - A jazzy skin for the Django Admin-Interface.\n  INSTALLED: 2.3.3 (latest)\n. ",
    "adaaif": "from the django-grappelli  doc : \nOpen settings.py and add grappelli to your INSTALLED_APPS (before django.contrib.admin)\n. @sehmaschine : yes of course, it just that i had ran into the same problem and i solved it by putting the names of the two apps in the correct order. \n. from the django-grappelli  doc : \nOpen settings.py and add grappelli to your INSTALLED_APPS (before django.contrib.admin)\n. @sehmaschine : yes of course, it just that i had ran into the same problem and i solved it by putting the names of the two apps in the correct order. \n. ",
    "ndrsn": "No, sorry. Just 1.4.0a. I'm a little groggy, but I believe it's mostly\na grappelli thing: the template change_list and the order of\nloading/executing Javascript code.\n\nI may have been a bit too hasty in filing the report, and not rigorous\nenough in testing with different django versions -- apologies!\n. No, sorry. Just 1.4.0a. I'm a little groggy, but I believe it's mostly\na grappelli thing: the template change_list and the order of\nloading/executing Javascript code.\n\nI may have been a bit too hasty in filing the report, and not rigorous\nenough in testing with different django versions -- apologies!\n. ",
    "zettadam": "I can confirm that it is the case--the filter drop-down hasn't been working with django-trunk for quite some time. I haven't touched the Grappelli templates yet to move the code as swashbuckler suggested.\n\nIf Grappelli is kept up-to-date with django-trunk then it is an issue that should be looked at more closely. I suspect it has to do with Django 1.4 moving contrib.admin media to STATIC_URL and deprecating ADMIN_MEDIA_PREFIX. \n. Sorry, I read it too quickly :)\n. I can confirm that it is the case--the filter drop-down hasn't been working with django-trunk for quite some time. I haven't touched the Grappelli templates yet to move the code as swashbuckler suggested.\n\nIf Grappelli is kept up-to-date with django-trunk then it is an issue that should be looked at more closely. I suspect it has to do with Django 1.4 moving contrib.admin media to STATIC_URL and deprecating ADMIN_MEDIA_PREFIX. \n. Sorry, I read it too quickly :)\n. ",
    "user996015": "It looks like this issue persists with 1.4 being released a few days ago. Any chance this could get fixed?\n. for those using django1.4, use the grappelli_2_4 branch.\n\n```\ncd ../lib/python2.7/site-packages\ngit init django-grappelli\ncd django-grappelli\ngit remote add --track grappelli_2_4 grappelli_2_4 https://github.com/sehmaschine/django-grappelli.git\ngit fetch grappelli_2_4\ngit checkout grappelli_2_4\npython setup.py install\n```\n. Another 1.4 compatible solution:\nhttps://github.com/sehmaschine/django-grappelli/issues/12#issuecomment-5514067\n. It looks like this issue persists with 1.4 being released a few days ago. Any chance this could get fixed?\n. for those using django1.4, use the grappelli_2_4 branch.\n\n```\ncd ../lib/python2.7/site-packages\ngit init django-grappelli\ncd django-grappelli\ngit remote add --track grappelli_2_4 grappelli_2_4 https://github.com/sehmaschine/django-grappelli.git\ngit fetch grappelli_2_4\ngit checkout grappelli_2_4\npython setup.py install\n```\n. Another 1.4 compatible solution:\nhttps://github.com/sehmaschine/django-grappelli/issues/12#issuecomment-5514067\n. ",
    "italomaia": "Is there a workaround for those using django1.4?\n. Is there a workaround for those using django1.4?\n. ",
    "maccesch": "I found one here: http://groups.google.com/group/django-grappelli/browse_thread/thread/7b929047d316275f\n\nHaven't tried it though.\n. I found one here: http://groups.google.com/group/django-grappelli/browse_thread/thread/7b929047d316275f\n\nHaven't tried it though.\n. ",
    "Uznick": "last time when I checked the branch there were huge problems with markup, that made most of it unusable in business :(\n. is there a div#header .collapse in template? May be the template has no correct class/id?\n. https://github.com/sehmaschine/django-grappelli/issues/12\n. For now you can use grappelli fork that's compatible for 1.4 for most of the features: https://github.com/Uznick/django-grappelli. I'm using it in production and everything's fine.\n. last time when I checked the branch there were huge problems with markup, that made most of it unusable in business :(\n. last time when I checked the branch there were huge problems with markup, that made most of it unusable in business :(\n. is there a div#header .collapse in template? May be the template has no correct class/id?\n. https://github.com/sehmaschine/django-grappelli/issues/12\n. For now you can use grappelli fork that's compatible for 1.4 for most of the features: https://github.com/Uznick/django-grappelli. I'm using it in production and everything's fine.\n. last time when I checked the branch there were huge problems with markup, that made most of it unusable in business :(\n. ",
    "andrewkoltsov": "catch it with django 1.4.2 and grappelli 2.4.3\n. catch it with django 1.4.2 and grappelli 2.4.3\n. ",
    "vinyll": "Using Grappelli 2.4.3 + Django 1.4.3 with Firefox 17 and having this error message on page having filters :\n\n```\nTypeError: $(...).actions is not a function\n$(\"tr input.action-select\").actions();\n```\n\npagination bar broke-moved to top of list with filters not opening (see attached image).\n\nClearing cache does not help.\n\n![Capture d e cran 2013-01-04 a 11 50 42](https://f.cloud.github.com/assets/145172/42938/a30dcb1a-565c-11e2-8c4a-3bc98be7c2fd.png)\n. Seems that the jquery used is not appropriate in my case (multiple versions are imported, scripts use \"grp.jQuery\" instead of default).\nFixed by overriding templates and replacing \"grp.jQuery\" with \"django.jQuery\" in the following code :\n\n```\n<script type=\"text/javascript\" charset=\"utf-8\">\n        (function($) {\n            $(document).ready(function() {\n                $(\"tr input.action-select\").actions();\n            });\n        })(grp.jQuery);\n    </script>\n```\n\nThat results in the following code :\n\n```\n<script type=\"text/javascript\" charset=\"utf-8\">\n        (function($) {\n            $(document).ready(function() {\n                $(\"tr input.action-select\").actions();\n            });\n        })(django.jQuery);\n    </script>\n```\n. @sehmaschine I updated my comment (using \"django.jQuery\" namespace instead of none).\ngrp.jQuery is actually 1.7.2 while django.jQuery is 1.4.2. I didn't customize of setup much in admin and grappelli. I might have missed some configuration setup somehow, but can't figure out what or where.\n\nFor information, here's my source file that fails. And where changing \"grp.jQuery\" to \"django.jQuery\" solves : https://gist.github.com/4452470\n\nEven the check-all checkbox (<input id=\"action-toggle\" type=\"checkbox\">) works now.\n. Using Grappelli 2.4.3 + Django 1.4.3 with Firefox 17 and having this error message on page having filters :\n\n```\nTypeError: $(...).actions is not a function\n$(\"tr input.action-select\").actions();\n```\n\npagination bar broke-moved to top of list with filters not opening (see attached image).\n\nClearing cache does not help.\n\n![Capture d e cran 2013-01-04 a 11 50 42](https://f.cloud.github.com/assets/145172/42938/a30dcb1a-565c-11e2-8c4a-3bc98be7c2fd.png)\n. Seems that the jquery used is not appropriate in my case (multiple versions are imported, scripts use \"grp.jQuery\" instead of default).\nFixed by overriding templates and replacing \"grp.jQuery\" with \"django.jQuery\" in the following code :\n\n```\n<script type=\"text/javascript\" charset=\"utf-8\">\n        (function($) {\n            $(document).ready(function() {\n                $(\"tr input.action-select\").actions();\n            });\n        })(grp.jQuery);\n    </script>\n```\n\nThat results in the following code :\n\n```\n<script type=\"text/javascript\" charset=\"utf-8\">\n        (function($) {\n            $(document).ready(function() {\n                $(\"tr input.action-select\").actions();\n            });\n        })(django.jQuery);\n    </script>\n```\n. @sehmaschine I updated my comment (using \"django.jQuery\" namespace instead of none).\ngrp.jQuery is actually 1.7.2 while django.jQuery is 1.4.2. I didn't customize of setup much in admin and grappelli. I might have missed some configuration setup somehow, but can't figure out what or where.\n\nFor information, here's my source file that fails. And where changing \"grp.jQuery\" to \"django.jQuery\" solves : https://gist.github.com/4452470\n\nEven the check-all checkbox (<input id=\"action-toggle\" type=\"checkbox\">) works now.\n. ",
    "defrex": "I'm having this same issue (Django 1.5, Chrome 26). If I break on the line in question (`$(\"tr input.action-select\").actions();`), grp.jQuery is there, it just doesn't have the `actions()` method.\n. I've had this issue for a long time. The `STATICFILES_FINDERS` fix worked for me.\n. I'm having this same issue (Django 1.5, Chrome 26). If I break on the line in question (`$(\"tr input.action-select\").actions();`), grp.jQuery is there, it just doesn't have the `actions()` method.\n. I've had this issue for a long time. The `STATICFILES_FINDERS` fix worked for me.\n. ",
    "vongesell": "ack. same issue as defrex\n. having the same issue. Tried the GRAPPELLI_INDEX_DASHBOARD suggestion, clearing cache suggestion, the STATICFILES_FINDERS suggestion and made certain all of the paths for static files were to documentation standards. No luck. Perhaps I'll try the modification of the js suggestion but seems rather adhoc. oh well.\n. ack. same issue as defrex\n. having the same issue. Tried the GRAPPELLI_INDEX_DASHBOARD suggestion, clearing cache suggestion, the STATICFILES_FINDERS suggestion and made certain all of the paths for static files were to documentation standards. No luck. Perhaps I'll try the modification of the js suggestion but seems rather adhoc. oh well.\n. ",
    "benbarbour": "I'm seeing the same thing as you, @defrex, but only when actions.min.js is loaded. If DEBUG=True everything seems fine. Have your @vongesell noticed that as well? Did either of you manage to fix it?\n\nOh yes, same version of Django and Chrome, and I'm using grappelli 2.4.4.\n. I'm seeing the same thing as you, @defrex, but only when actions.min.js is loaded. If DEBUG=True everything seems fine. Have your @vongesell noticed that as well? Did either of you manage to fix it?\n\nOh yes, same version of Django and Chrome, and I'm using grappelli 2.4.4.\n. ",
    "SeanHayes": "Same issue, Django==1.5, django-grappelli==2.4.4, Firefox 22.0 on Ubuntu. Firebug console output:\n\nTypeError: $(...).actions is not a function\n[Break On This Error]   \n\n$(\"tr input.action-select\").actions();\n\n/api/a...kstate/ (line 55)\n. @bjudson Thanks for the hint. For me it turned out collectstatic didn't copy everything over. I ran it again and now everything works.\n. Same issue, Django==1.5, django-grappelli==2.4.4, Firefox 22.0 on Ubuntu. Firebug console output:\n\nTypeError: $(...).actions is not a function\n[Break On This Error]   \n\n$(\"tr input.action-select\").actions();\n\n/api/a...kstate/ (line 55)\n. @bjudson Thanks for the hint. For me it turned out collectstatic didn't copy everything over. I ran it again and now everything works.\n. ",
    "bjudson": "Also seeing it here. In my case, the Grappelli version of `actions.js` was not copied into `/static/admin/js/` by `collectstatic`. All I had to do was copy it manually and everything works. Had the same problem with `prepopulate.js`.\n. Also seeing here with Django 1.5.1 and Grappelli 2.4.5\n\nEdit: This was fixed in my case by editing `static/admin/js/populate.js`, changing the last line from:\n`})(django.jQuery);`\n\nto:\n`})(grp.jQuery);`\n\nThe version of the file in the Grappelli package is correct, but it doesn't seem to be copied by `collectstatic`. \n. I just deleted everything in static and ran it, and it worked as expected. It appears that in my case, running `collectstatic` doesn't overwrite existing files. I installed Grappelli after doing some development work, so the original admin files were left hanging around even after running `collectstatic` post-Grappelli install.\n. Also seeing it here. In my case, the Grappelli version of `actions.js` was not copied into `/static/admin/js/` by `collectstatic`. All I had to do was copy it manually and everything works. Had the same problem with `prepopulate.js`.\n. Also seeing here with Django 1.5.1 and Grappelli 2.4.5\n\nEdit: This was fixed in my case by editing `static/admin/js/populate.js`, changing the last line from:\n`})(django.jQuery);`\n\nto:\n`})(grp.jQuery);`\n\nThe version of the file in the Grappelli package is correct, but it doesn't seem to be copied by `collectstatic`. \n. I just deleted everything in static and ran it, and it worked as expected. It appears that in my case, running `collectstatic` doesn't overwrite existing files. I installed Grappelli after doing some development work, so the original admin files were left hanging around even after running `collectstatic` post-Grappelli install.\n. ",
    "backbohne": "Same issue with Django 1.6 and Grappelli 2.5.0. Patching ../grappelli/templates/admin/change_list.html like recommented by Vinyll fixes my problems.\n. After updating to Grappelli 2.5 it works either under HTTP nor under HTTPS ;-( \n. Same issue with Django 1.6 and Grappelli 2.5.0. Patching ../grappelli/templates/admin/change_list.html like recommented by Vinyll fixes my problems.\n. After updating to Grappelli 2.5 it works either under HTTP nor under HTTPS ;-( \n. ",
    "samupl": "Django==1.8.2\ndjango-grappelli==2.7.1\n\nProblem still persists, collectstatic doesn't find grappellis admin/ static folder for some reason.\n. Django==1.8.2\ndjango-grappelli==2.7.1\n\nProblem still persists, collectstatic doesn't find grappellis admin/ static folder for some reason.\n. ",
    "gbcgit": "Django==1.8.3\ndjango-grappelli==2.7.3\n\nproblem still here for me\n\n~django.contrib.admin.options.ModelAdmin#media:635\n        if self.actions is not None:\n            js.append('actions%s.js' % extra)\n\nIf you do something in a ModelAdmin subclass that prevents this method (property) from getting called, like redefine the media property without calling this super one, then you don't get actions loaded.  And you also don't get the extend feature of Form.media.   So, even if you try to put actions in your class Media in the subclass it doesn't get found.\n\nSo, put a check point in that method and make sure it's getting called.\n. Django==1.8.3\ndjango-grappelli==2.7.3\n\nproblem still here for me\n\n~django.contrib.admin.options.ModelAdmin#media:635\n        if self.actions is not None:\n            js.append('actions%s.js' % extra)\n\nIf you do something in a ModelAdmin subclass that prevents this method (property) from getting called, like redefine the media property without calling this super one, then you don't get actions loaded.  And you also don't get the extend feature of Form.media.   So, even if you try to put actions in your class Media in the subclass it doesn't get found.\n\nSo, put a check point in that method and make sure it's getting called.\n. ",
    "gameot": "I had the same problem and I solved it by editing nginx config. \nBefore:\n`location /static/admin/ { alias /web/merv/env/lib/python3.4/site-packages/django/contrib/admin/static/admin/; }`\n`location /static/ {\n        alias   /web/merv/files/static/;\n    }`\nAfter:\n`location /static/ {\n        alias   /web/merv/files/static/;\n    }`\n. I had the same problem and I solved it by editing nginx config. \nBefore:\n`location /static/admin/ { alias /web/merv/env/lib/python3.4/site-packages/django/contrib/admin/static/admin/; }`\n`location /static/ {\n        alias   /web/merv/files/static/;\n    }`\nAfter:\n`location /static/ {\n        alias   /web/merv/files/static/;\n    }`\n. ",
    "gasinvein": "For me problem is still present.\npython 2.7, django 1.9.6, grappelli 2.8.1\n. For me problem is still present.\npython 2.7, django 1.9.6, grappelli 2.8.1\n. ",
    "MohsenHassani": "For solving the problem I needed to comment the /static/admin/ block in the nginx config file of the website (as @gameot said); like this:\n\n```\n#location /static/admin/ {\n#   alias /home/mohsen/virtualenvs/django-1.9/lib/python3.4/site-packages/django/contrib/admin/static/admin/;\n#}\n```\n\nI could delete it of course! It just seems to be useless when using grappelli. \n\nAfter that do the collectstatic as grappelli docs says: python manage.py collectstatic\nThen restart nginx.\n. For solving the problem I needed to comment the /static/admin/ block in the nginx config file of the website (as @gameot said); like this:\n\n```\n#location /static/admin/ {\n#   alias /home/mohsen/virtualenvs/django-1.9/lib/python3.4/site-packages/django/contrib/admin/static/admin/;\n#}\n```\n\nI could delete it of course! It just seems to be useless when using grappelli. \n\nAfter that do the collectstatic as grappelli docs says: python manage.py collectstatic\nThen restart nginx.\n. ",
    "vitorh45": "this code resolve the issue on login. but in every page that i access the same bug occurs.\n. i'm using django 1.3 and chrome 12.0.142. this bug occurs only when i using chrome.\n. i'm sorry, but is not happening in every pages. the exception is change_list.\n. i did the same as bdauvergne and the problem is solved. thanks.\n. this code resolve the issue on login. but in every page that i access the same bug occurs.\n. i'm using django 1.3 and chrome 12.0.142. this bug occurs only when i using chrome.\n. i'm sorry, but is not happening in every pages. the exception is change_list.\n. i did the same as bdauvergne and the problem is solved. thanks.\n. ",
    "bdauvergne": "problem reproduced here django 1.3 and chromium 13.0.782.41\n. login, index and change_form pages, but not on change_list.\n. When exploring the DOM with chromium debugger it seems the div with the main content and classified \".container-flexible\" has its size set to 0 until we click.\n. I updated to 2.3.3, rerun \"collectstatic\" and it resolved the problem for me, thanks a lot.\n. problem reproduced here django 1.3 and chromium 13.0.782.41\n. login, index and change_form pages, but not on change_list.\n. When exploring the DOM with chromium debugger it seems the div with the main content and classified \".container-flexible\" has its size set to 0 until we click.\n. I updated to 2.3.3, rerun \"collectstatic\" and it resolved the problem for me, thanks a lot.\n. ",
    "darylantony": "Thanks! Sorry I didn't look closer to the docs :)\n\nOn 11/08/2011, at 5:11 PM, sehmaschine wrote:\n\n> definitely works ... did you define the related lookups according to the docs? http://django-grappelli.readthedocs.org/en/latest/customization.html#related-lookups. I\u00b4m sorry but we had to change the related-lookups a bit with 2.3+ because of some smaller issues with the former version. it\u00b4s all mentioned in the docs as well as the changelog and should now work very stable.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/sehmaschine/django-grappelli/issues/16#issuecomment-1779777\n. Thanks! Sorry I didn't look closer to the docs :)\n\nOn 11/08/2011, at 5:11 PM, sehmaschine wrote:\n\n> definitely works ... did you define the related lookups according to the docs? http://django-grappelli.readthedocs.org/en/latest/customization.html#related-lookups. I\u00b4m sorry but we had to change the related-lookups a bit with 2.3+ because of some smaller issues with the former version. it\u00b4s all mentioned in the docs as well as the changelog and should now work very stable.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/sehmaschine/django-grappelli/issues/16#issuecomment-1779777\n. ",
    "bevenky": "+1 for this\n. To be honest its not at all over done. its just basic stuff.\n\nGrappelli pages looks very empty currently when we go into a model crud page. Django admin looks completely full here.\n\nAny way this could be done too? \n. +1 for this\n. To be honest its not at all over done. its just basic stuff.\n\nGrappelli pages looks very empty currently when we go into a model crud page. Django admin looks completely full here.\n\nAny way this could be done too? \n. ",
    "lerrua": "+1\n. +1\n. ",
    "andre-git": "+1\n. +1\n. ",
    "gilsondev": "I'm talking about add in the theme used in Grappelli, three buttons for text alignment. This will be used by lay users, so the use of classes does not. Will be used as paragraphs, you can not define it in TinyMCE. When I put these features, it is without the icons. What I propose is even add icons for these three functions.\n. I'm talking about add in the theme used in Grappelli, three buttons for text alignment. This will be used by lay users, so the use of classes does not. Will be used as paragraphs, you can not define it in TinyMCE. When I put these features, it is without the icons. What I propose is even add icons for these three functions.\n. ",
    "lllama": "1. I've removed all admin_tools and now I have the dashboard working. No dragging but otherwise okay.\n2. Fairly recent (https://github.com/sehmaschine/django-grappelli/commit/f485991bbcd1477440ba1c313e2b84dde1135a82). I'll update to latest and see what happens.\n. Updated to latest and same result.\n. Can't argue with that. FYI (for when you need to update to support 1.4) it appears that the problem is in django/contrib/admin/helpers.py.\n\n```\n@@ -75,8 +74,8 @@\n\n     def _media(self):\n         if 'collapse' in self.classes:\n-            js = ['js/jquery.min.js', 'js/jquery.init.js', 'js/collapse.min.js']\n-            return forms.Media(js=['%s%s' % (settings.ADMIN_MEDIA_PREFIX, url) for url in js])\n+            js = ['jquery.min.js', 'jquery.init.js', 'collapse.min.js']\n+            return forms.Media(js=['admin/js/%s' % url for url in js])\n         return forms.Media()\n     media = property(_media)\n```\n\nI'm guessing this is in preparation for the deprecation of the ADMIN_MEDIA_PREFIX setting. The values are now hard-coded to pull in admin/js/. For the time being I'll just remove the files from my static dir and suffer the 404s.\n. 1. I've removed all admin_tools and now I have the dashboard working. No dragging but otherwise okay.\n2. Fairly recent (https://github.com/sehmaschine/django-grappelli/commit/f485991bbcd1477440ba1c313e2b84dde1135a82). I'll update to latest and see what happens.\n. Updated to latest and same result.\n. Can't argue with that. FYI (for when you need to update to support 1.4) it appears that the problem is in django/contrib/admin/helpers.py.\n\n```\n@@ -75,8 +74,8 @@\n\n     def _media(self):\n         if 'collapse' in self.classes:\n-            js = ['js/jquery.min.js', 'js/jquery.init.js', 'js/collapse.min.js']\n-            return forms.Media(js=['%s%s' % (settings.ADMIN_MEDIA_PREFIX, url) for url in js])\n+            js = ['jquery.min.js', 'jquery.init.js', 'collapse.min.js']\n+            return forms.Media(js=['admin/js/%s' % url for url in js])\n         return forms.Media()\n     media = property(_media)\n```\n\nI'm guessing this is in preparation for the deprecation of the ADMIN_MEDIA_PREFIX setting. The values are now hard-coded to pull in admin/js/. For the time being I'll just remove the files from my static dir and suffer the 404s.\n. ",
    "jrast": "I think beside the edit link about which is the django bug, the last scentens of the ticket is also very important:\n\n> I think the reciprocal of this would also be very useful -- ForeignKey widgets could display an [edit] link beside the \"add new\" (green +) link which links to the change form for the selected parent object.\n\nI would be very happy to see this in grappelli!\n. +1 for this! \n. I think beside the edit link about which is the django bug, the last scentens of the ticket is also very important:\n\n> I think the reciprocal of this would also be very useful -- ForeignKey widgets could display an [edit] link beside the \"add new\" (green +) link which links to the change form for the selected parent object.\n\nI would be very happy to see this in grappelli!\n. +1 for this! \n. ",
    "kvnn": "See http://stackoverflow.com/questions/6241062/django-grappelli-error\n. See http://stackoverflow.com/questions/6241062/django-grappelli-error\n. ",
    "sjaensch": "Django 1.3. I did not test with other django versions, but I can if you think it's necessary.\n. The problem is that just defining django.jQuery as an alias for grp.jQuery is not enough: Django defines several new jQuery functions. This happens in django/contrib/admin/static/admin/js/actions.js, inlines.js and prepopulate.js. These functions are used by third-party apps, e.g. FeinCMS uses the formset() function defined in inlines.js. I'll see if we can just alias django.jQuery and include (or duplicate) those three JavaScript files.\n. While getting FeinCMS to work with Grappelli might be out of scope for this bug, how about adding \n\nvar django = {\n    'jQuery': grp.jQuery\n};\n\nto grappelli.js? Would this have any negative impact?\n. Django 1.3. I did not test with other django versions, but I can if you think it's necessary.\n. The problem is that just defining django.jQuery as an alias for grp.jQuery is not enough: Django defines several new jQuery functions. This happens in django/contrib/admin/static/admin/js/actions.js, inlines.js and prepopulate.js. These functions are used by third-party apps, e.g. FeinCMS uses the formset() function defined in inlines.js. I'll see if we can just alias django.jQuery and include (or duplicate) those three JavaScript files.\n. While getting FeinCMS to work with Grappelli might be out of scope for this bug, how about adding \n\nvar django = {\n    'jQuery': grp.jQuery\n};\n\nto grappelli.js? Would this have any negative impact?\n. ",
    "Apocalepse": "ohhhhhhh .... sorry, is my mistake! I did not sleep that night :-)\n. ohhhhhhh .... sorry, is my mistake! I did not sleep that night :-)\n. ",
    "LeonardoGentile": "If the problem is only the Bootstrap Compass integration you should check this project: https://github.com/vwall/compass-twitter-bootstrap \n. :+1: @BertrandBordage maybe you can check this: https://github.com/riccardo-forina/django-admin-bootstrapped for a starting point\n. You are making me happy! :metal:\n. @BertrandBordage  so your approach would be similar to http://bootswatch.com/ if so why not to start from there already? Using bootswatch I was able to completely customize bootstrap just changing a less file containing all the variable definitions (color, navbar size, an so on). @sehmaschine Using this approach with grappelli would mean that for making a new theme is only necessary to edit a single file! According to me that would lead to an easy way to create and exchange grappelli themes that nonetheless will be still very easy to customize. \n. @BertrandBordage Bootswatch was an example but as a matter of fact a custom theme in bootswatch means to modify only [a couple of less files](\"https://github.com/thomaspark/bootswatch/#customization\") so at least we have a starting point. It also offer other [utilities and resources](\"https://github.com/thomaspark/bootswatch/#usage\") (for example we can start building the same thing using scss files)\n. @parsch and @sehmaschine when editing the less files that at the end generate a single bootstrap.css files you can put in there whatever you want, that means custom classes and whatsoever. So this is a solution. The other one would be to include a custom css called after bootstrap that will override the previous defined rules.\n. If the problem is only the Bootstrap Compass integration you should check this project: https://github.com/vwall/compass-twitter-bootstrap \n. :+1: @BertrandBordage maybe you can check this: https://github.com/riccardo-forina/django-admin-bootstrapped for a starting point\n. You are making me happy! :metal:\n. @BertrandBordage  so your approach would be similar to http://bootswatch.com/ if so why not to start from there already? Using bootswatch I was able to completely customize bootstrap just changing a less file containing all the variable definitions (color, navbar size, an so on). @sehmaschine Using this approach with grappelli would mean that for making a new theme is only necessary to edit a single file! According to me that would lead to an easy way to create and exchange grappelli themes that nonetheless will be still very easy to customize. \n. @BertrandBordage Bootswatch was an example but as a matter of fact a custom theme in bootswatch means to modify only [a couple of less files](\"https://github.com/thomaspark/bootswatch/#customization\") so at least we have a starting point. It also offer other [utilities and resources](\"https://github.com/thomaspark/bootswatch/#usage\") (for example we can start building the same thing using scss files)\n. @parsch and @sehmaschine when editing the less files that at the end generate a single bootstrap.css files you can put in there whatever you want, that means custom classes and whatsoever. So this is a solution. The other one would be to include a custom css called after bootstrap that will override the previous defined rules.\n. ",
    "nym": "Please switch to Bootstrap! \n. I no longer use grappelli, so I have no skin in the game, but given that it's about a year and a half since I posted this, I wanted to bring up the point that bootstrap is still alive and kicking. \r\n\r\nThemeForest has 234 Admin themes that are compatible with Bootstrap:\r\n\r\nhttps://themeforest.net/category/site-templates/admin-templates?utf8=%E2%9C%93&referrer=search&view=grid&compatible_with%5B%5D=Bootstrap\r\n\r\nThe lack of ability to theme Grappelli was a big PITA at the time I was requesting the feature. There are no real options out there, other than rolling your own. If there is another option out there with more available themes for sale and for free, I'd love to hear about it. I tried to google alternatives, and they all appeared to be fairly niche (lacking available themes in particular). . Please switch to Bootstrap! \n. I no longer use grappelli, so I have no skin in the game, but given that it's about a year and a half since I posted this, I wanted to bring up the point that bootstrap is still alive and kicking. \r\n\r\nThemeForest has 234 Admin themes that are compatible with Bootstrap:\r\n\r\nhttps://themeforest.net/category/site-templates/admin-templates?utf8=%E2%9C%93&referrer=search&view=grid&compatible_with%5B%5D=Bootstrap\r\n\r\nThe lack of ability to theme Grappelli was a big PITA at the time I was requesting the feature. There are no real options out there, other than rolling your own. If there is another option out there with more available themes for sale and for free, I'd love to hear about it. I tried to google alternatives, and they all appeared to be fairly niche (lacking available themes in particular). . ",
    "jschrewe": "The app should be as generic as possible. And because I know that I use grappelli doesn't mean that someone else uses it. But the app is supposed to work for both.\n. The app should be as generic as possible. And because I know that I use grappelli doesn't mean that someone else uses it. But the app is supposed to work for both.\n. ",
    "honi": "I'm having a very strange problem in my deployment server, for some reason that I couldn't find yet, some models are found as app.models.\\* and others as project.app.models.\\* (anyways that's another issue).\nIt took me a while before I realized that was the problem. If the dashboard would have thrown me an error saying it couldn't find X module it would have been nice.\n\nFollowing other \"conventions\" found in django, for example in the list_display tuple, you can type whatever you want, they are strings, but if the ModelAdmin can't find that field or method, it'll throw an error. I think it would be more reasonable if the dashboard threw an error if it can't find a module or model.\n. Yes. The weird thing is that if I manually type the url to the change list, I can actually use the admin interface for that model. As in: /admin/myapp/mymodel/\nIt just doesn't appear in the dashboard. And even weirder is that the \"error\" is not consistent with all models. Some need the myapp prefix and other don't. I doubt this has anything to do with grappelli or the dashboard itself, it's probably a fault on my serverside config. If it turns out to be related with grappelli I'll post about it.\n\nRegarding the issue at hand, I've already been digging around the dashboard code. Correct me if I'm wrong, I believe that the checking could be done in this method:\nhttps://github.com/sehmaschine/django-grappelli/blob/master/grappelli/dashboard/utils.py#L88\nBut the thing is that get_avail_models() would only return the models that the logged user has perms. So if a model defined in the dashboard config is not matched, it doesn't really mean that it's invalid, maybe the user just didn't have permissions. You would have to get a list of ALL the available models on the admin site to check against. And maybe this could be done elsewhere.\n. I posted #34. Actually, I was having the same issue as you. My models weren't invalid.\nI ended up fixing the issue on the production server by specifying my models as myproject.myapp.models.Model\nBut it seems as this doesn't fix it for you.\n. Here's a screenshot:\n![Filter horizontal issue](http://mindpulse.net/temp/filter_horizontal_issue.png)\n\nOne solution would be to modify .selector .selector-filter by removing:\nline-height: 25px;\ntext-indent: 25px;\nAnd adding:\npadding-left: 25px;\n. Actually it doesn't work in 2.3.4 either. But in 2.3.3 it did worked.\n. How about this after the double toggle()\n\n``` javascript\n$(document).scrollTop(ui.item.offset().top);\n```\n\nIt's not perfect but at least you remain in the inline section after dragging. \n\nA simple improvement could be to scroll to a position in which the dragged item is at the middle of the screen. For example:\n\n``` javascript\n$(document).scrollTop(ui.item.offset().top + ui.item.height() / 2 - $(window).height() / 2);\n```\n\nStill not perfect though.\n. Let me check. I only tested on Chrome (Version 20.0.1132.43 beta).\n. Hmmm.. It's working with Firefox 13.0.1\n\nI'm using the second approach. How can we test this better?\n. How about this one (tested on Chrome & Firefox):\n\n``` javascript\nvar lastScrollTop = $(window).scrollTop();\n$(\"#{{ inline_admin_formset.formset.prefix }}-group > div.grp-table\").toggle().toggle();\n$(window).scrollTop(lastScrollTop);\n```\n. Great, works fine now!\n. But I'm not setting a custom Form for the inline. I must have configured something wrong, just can't find it yet.\n. If I remove\n    sortable_field_name = ('position', )\nthen I do see the position field\n\nDjango: 1.4.1, Grappelli: 2.4.0\n. Oh, my bad. Thanks! \n. You can install FeinCMS, and then you'll have available the FeinCMSModelAdmin which is bundled with django-mptt. It subclasses FeinCMS's TreeEditor, which displays fine with grappelli's styles, and adds extra features to the changelist, like expandable / collapsable nodes, drag & drop for re ordering nodes and AJAX boolean editables.\n\nThough there are some look & feel issues with FeinCMSModelAdmin that don't match very well with Grappelli.\n\nAnd also I'm not really happy with having to install FeinCMS just to use its TreeEditor. Would it be a good addition for Grappelli to support MPTT models out of the box? I would be happy to try to add this support, refactoring out FeinCMS's TreeEditor into Grappelli. Or maybe its not that big deal having to install FeinCMS, and then Grappelli could just override the templates to fix the look & feel issues.\n. +1 Same problem here\n. You need to add `django.core.context_processors.request` to [TEMPLATE_CONTEXT_PROCESSORS](https://docs.djangoproject.com/en/dev/ref/settings/#std:setting-TEMPLATE_CONTEXT_PROCESSORS) (it is not there by default).\n. I'm having a very strange problem in my deployment server, for some reason that I couldn't find yet, some models are found as app.models.\\* and others as project.app.models.\\* (anyways that's another issue).\nIt took me a while before I realized that was the problem. If the dashboard would have thrown me an error saying it couldn't find X module it would have been nice.\n\nFollowing other \"conventions\" found in django, for example in the list_display tuple, you can type whatever you want, they are strings, but if the ModelAdmin can't find that field or method, it'll throw an error. I think it would be more reasonable if the dashboard threw an error if it can't find a module or model.\n. Yes. The weird thing is that if I manually type the url to the change list, I can actually use the admin interface for that model. As in: /admin/myapp/mymodel/\nIt just doesn't appear in the dashboard. And even weirder is that the \"error\" is not consistent with all models. Some need the myapp prefix and other don't. I doubt this has anything to do with grappelli or the dashboard itself, it's probably a fault on my serverside config. If it turns out to be related with grappelli I'll post about it.\n\nRegarding the issue at hand, I've already been digging around the dashboard code. Correct me if I'm wrong, I believe that the checking could be done in this method:\nhttps://github.com/sehmaschine/django-grappelli/blob/master/grappelli/dashboard/utils.py#L88\nBut the thing is that get_avail_models() would only return the models that the logged user has perms. So if a model defined in the dashboard config is not matched, it doesn't really mean that it's invalid, maybe the user just didn't have permissions. You would have to get a list of ALL the available models on the admin site to check against. And maybe this could be done elsewhere.\n. I posted #34. Actually, I was having the same issue as you. My models weren't invalid.\nI ended up fixing the issue on the production server by specifying my models as myproject.myapp.models.Model\nBut it seems as this doesn't fix it for you.\n. Here's a screenshot:\n![Filter horizontal issue](http://mindpulse.net/temp/filter_horizontal_issue.png)\n\nOne solution would be to modify .selector .selector-filter by removing:\nline-height: 25px;\ntext-indent: 25px;\nAnd adding:\npadding-left: 25px;\n. Actually it doesn't work in 2.3.4 either. But in 2.3.3 it did worked.\n. How about this after the double toggle()\n\n``` javascript\n$(document).scrollTop(ui.item.offset().top);\n```\n\nIt's not perfect but at least you remain in the inline section after dragging. \n\nA simple improvement could be to scroll to a position in which the dragged item is at the middle of the screen. For example:\n\n``` javascript\n$(document).scrollTop(ui.item.offset().top + ui.item.height() / 2 - $(window).height() / 2);\n```\n\nStill not perfect though.\n. Let me check. I only tested on Chrome (Version 20.0.1132.43 beta).\n. Hmmm.. It's working with Firefox 13.0.1\n\nI'm using the second approach. How can we test this better?\n. How about this one (tested on Chrome & Firefox):\n\n``` javascript\nvar lastScrollTop = $(window).scrollTop();\n$(\"#{{ inline_admin_formset.formset.prefix }}-group > div.grp-table\").toggle().toggle();\n$(window).scrollTop(lastScrollTop);\n```\n. Great, works fine now!\n. But I'm not setting a custom Form for the inline. I must have configured something wrong, just can't find it yet.\n. If I remove\n    sortable_field_name = ('position', )\nthen I do see the position field\n\nDjango: 1.4.1, Grappelli: 2.4.0\n. Oh, my bad. Thanks! \n. You can install FeinCMS, and then you'll have available the FeinCMSModelAdmin which is bundled with django-mptt. It subclasses FeinCMS's TreeEditor, which displays fine with grappelli's styles, and adds extra features to the changelist, like expandable / collapsable nodes, drag & drop for re ordering nodes and AJAX boolean editables.\n\nThough there are some look & feel issues with FeinCMSModelAdmin that don't match very well with Grappelli.\n\nAnd also I'm not really happy with having to install FeinCMS just to use its TreeEditor. Would it be a good addition for Grappelli to support MPTT models out of the box? I would be happy to try to add this support, refactoring out FeinCMS's TreeEditor into Grappelli. Or maybe its not that big deal having to install FeinCMS, and then Grappelli could just override the templates to fix the look & feel issues.\n. +1 Same problem here\n. You need to add `django.core.context_processors.request` to [TEMPLATE_CONTEXT_PROCESSORS](https://docs.djangoproject.com/en/dev/ref/settings/#std:setting-TEMPLATE_CONTEXT_PROCESSORS) (it is not there by default).\n. ",
    "AgDude": "I am having the same problem where my apps are not showing on the dashboard, but are available by typing the url.  I will start a new issue, since this does not seem to be related to and invalid model.\n. In admin.py:\nfrom myproject.myapp.models import *\n\nadmin.site.register(Model1)\nadmin.site.register(Model2)\n...\n. In my case I am not overriding the default admin, and I have only one site in the project.\n. I am having the same problem where my apps are not showing on the dashboard, but are available by typing the url.  I will start a new issue, since this does not seem to be related to and invalid model.\n. In admin.py:\nfrom myproject.myapp.models import *\n\nadmin.site.register(Model1)\nadmin.site.register(Model2)\n...\n. In my case I am not overriding the default admin, and I have only one site in the project.\n. ",
    "esistgut": "This problem appears to be still in place:\n\nplugins: 'advimage,advlink,fullscreen,paste,media,searchreplace,grappelli,template,pagebreak',\ntheme_advanced_buttons2: 'pagebreak,search,|,pasteword,template,media,charmap,|,code,|,table,cleanup,grappelli_documentstructure',\n\nNo icon on the toolbar and no visual representation of the pagebreak (but it is correctly put in the html code).\n. It is not really the button itself but the visual representation of the pagebreak. It would be totally fine if it is seen as on the default theme but I don't want to use the whole default theme. Can you point to a quick fix for this?\n. I worked out a quick fix:\nhttps://github.com/g-graziosi/django-grappelli/commit/cd85461d32d1684fea5f51572928a4c8d69a7cc9\n. Can you please share some code?\n. This problem appears to be still in place:\n\nplugins: 'advimage,advlink,fullscreen,paste,media,searchreplace,grappelli,template,pagebreak',\ntheme_advanced_buttons2: 'pagebreak,search,|,pasteword,template,media,charmap,|,code,|,table,cleanup,grappelli_documentstructure',\n\nNo icon on the toolbar and no visual representation of the pagebreak (but it is correctly put in the html code).\n. It is not really the button itself but the visual representation of the pagebreak. It would be totally fine if it is seen as on the default theme but I don't want to use the whole default theme. Can you point to a quick fix for this?\n. I worked out a quick fix:\nhttps://github.com/g-graziosi/django-grappelli/commit/cd85461d32d1684fea5f51572928a4c8d69a7cc9\n. Can you please share some code?\n. ",
    "gkmngrgn": "sorry for my wrong notification. i could not repeat this error.\n. sorry for my wrong notification. i could not repeat this error.\n. ",
    "nasahitzi": "Of course there are no simple steps to reproduce.  If you study the problem you see that it is caused be the following chain of events:\nhttps://github.com/sehmaschine/django-grappelli/blob/master/grappelli/views/related.py\n1. In the view autocomplete_lookup(request) arguments are extracted as Unicode strings.\n2. This is later packed into filters Dictionary (Line 101).  In this case both key and value variables are Unicode strings.\n3. Then in the next line filters dictionary is passed as kwargs: model.objects.filter(**filters)\n\nThere seems to be much confusion about if it is possible to pass unicode strings as kwarg keywords.  See the discussion here: http://stackoverflow.com/questions/4598604/how-to-pass-unicode-keywords-to-kwargs\n\nOn my server I'm running Python 2.7.1.  Still I got this error.\n\nTherefore I feel it is the most safe way to always pass this as ANSI string kwargs using smart_str.  This should never break.\n. Of course there are no simple steps to reproduce.  If you study the problem you see that it is caused be the following chain of events:\nhttps://github.com/sehmaschine/django-grappelli/blob/master/grappelli/views/related.py\n1. In the view autocomplete_lookup(request) arguments are extracted as Unicode strings.\n2. This is later packed into filters Dictionary (Line 101).  In this case both key and value variables are Unicode strings.\n3. Then in the next line filters dictionary is passed as kwargs: model.objects.filter(**filters)\n\nThere seems to be much confusion about if it is possible to pass unicode strings as kwarg keywords.  See the discussion here: http://stackoverflow.com/questions/4598604/how-to-pass-unicode-keywords-to-kwargs\n\nOn my server I'm running Python 2.7.1.  Still I got this error.\n\nTherefore I feel it is the most safe way to always pass this as ANSI string kwargs using smart_str.  This should never break.\n. ",
    "oscarcp": "Closing issue, the new issue includes code\n. I'm sorry, apparently I forgot two things in the patch, to import \"future\" in every template (to make the templates compatible until 1.4) and to delete the comma to separate arguments. It was my fault to make the pull too quickly.\n. Same here with grappelli 2.3.5\n. Should we remove the {% load url from future %} lines when django 1.4 is released? The new url tag is included in the code, with backwards compatibility for \"load url from future\". Removing it will cause the new version of grappelli stop working on django <= 1.3.1\n. Sent a pull request for the URL tag issue\n. Closing pull request. After thorough testing I've found that django 1.4 includes the new URL feature, but not as default. They will maintain compatibility until django 1.5\n. I meant that we should use the \"url from future\" for all django-grappelli templates, since it provides compatibility from django 1.3 to django 1.6. Since the update to grappelli 2.4 some templates were not usingi t, so I updated them, just that :)\n. Sorry, the questions:\n\na) The django templates also use the new URL tags (see: https://github.com/django/django/blob/master/django/contrib/admin/templates/admin/base.html). They don't import the \"url from future\" because they make a global load of the new tag, just like in e-cidadania: https://github.com/cidadania/e-cidadania/blob/master/src/e_cidadania/settings/defaults.py#L213 (Line 213).\n\nb) We should use it for all of them, I think that with this patch they're all converted to the new syntax.\n\nIf you have any doubts just ask me :)\n. It seems that I didn't test it properly. Actually, it's the first time where I find the use of filters inside the new URL tag. You should dismiss this patch until I fix that. Sorry. I leave here some reasons of why we should move to the new URLs, but it's up to you :)\n\nAbout the original admin, they are using the new tags, as seen in one of the links I've send in the last comment: https://github.com/django/django/blob/stable/1.4.x/django/contrib/admin/templates/admin/base.html#L36 (line 36, for example)\n\nAnother three reasons for changing:\n\n1- https://docs.djangoproject.com/en/1.3/releases/1.3/#changes-to-url-and-ssi\n2- django-grappelli is already using the new URL tag since 2.3 (I sent the patch, pull #43 ) but in the new update (2.4) the url tags are mixed.\n3- Applications that are already using the new URL tags globally are unable to use django-grappelli because of the mix between new and old url tags.\n. Closing issue, the new issue includes code\n. I'm sorry, apparently I forgot two things in the patch, to import \"future\" in every template (to make the templates compatible until 1.4) and to delete the comma to separate arguments. It was my fault to make the pull too quickly.\n. Same here with grappelli 2.3.5\n. Should we remove the {% load url from future %} lines when django 1.4 is released? The new url tag is included in the code, with backwards compatibility for \"load url from future\". Removing it will cause the new version of grappelli stop working on django <= 1.3.1\n. Sent a pull request for the URL tag issue\n. Closing pull request. After thorough testing I've found that django 1.4 includes the new URL feature, but not as default. They will maintain compatibility until django 1.5\n. I meant that we should use the \"url from future\" for all django-grappelli templates, since it provides compatibility from django 1.3 to django 1.6. Since the update to grappelli 2.4 some templates were not usingi t, so I updated them, just that :)\n. Sorry, the questions:\n\na) The django templates also use the new URL tags (see: https://github.com/django/django/blob/master/django/contrib/admin/templates/admin/base.html). They don't import the \"url from future\" because they make a global load of the new tag, just like in e-cidadania: https://github.com/cidadania/e-cidadania/blob/master/src/e_cidadania/settings/defaults.py#L213 (Line 213).\n\nb) We should use it for all of them, I think that with this patch they're all converted to the new syntax.\n\nIf you have any doubts just ask me :)\n. It seems that I didn't test it properly. Actually, it's the first time where I find the use of filters inside the new URL tag. You should dismiss this patch until I fix that. Sorry. I leave here some reasons of why we should move to the new URLs, but it's up to you :)\n\nAbout the original admin, they are using the new tags, as seen in one of the links I've send in the last comment: https://github.com/django/django/blob/stable/1.4.x/django/contrib/admin/templates/admin/base.html#L36 (line 36, for example)\n\nAnother three reasons for changing:\n\n1- https://docs.djangoproject.com/en/1.3/releases/1.3/#changes-to-url-and-ssi\n2- django-grappelli is already using the new URL tag since 2.3 (I sent the patch, pull #43 ) but in the new update (2.4) the url tags are mixed.\n3- Applications that are already using the new URL tags globally are unable to use django-grappelli because of the mix between new and old url tags.\n. ",
    "zyegfryed": "@sehmaschine  the grid layout was commented, so i removed it for a cleaner/smaller CSS file. The grid system is not causing any damage, so feel free to keep it - even if commented, it doesn't deserve any purpose...\nBasically the [cache storage](http://readthedocs.org/docs/django-staticfiles/en/latest/helpers/#staticfiles.storage.CachedStaticFilesStorage) from django-staticfiles allow file cache busting.\nTo do so, when collecting static files it also verify that file exists or raise an exception. I submitted a patch to django-statcfiles which add a setting to fail silently on missing file.\nIn the same time, the following patch removes all image files that are not used, so it's compatible with django-staticfiles and we are sure there are no missing files served on production.\nHope it helps.\n. Thanks for your quick reply.\n. @sehmaschine  the grid layout was commented, so i removed it for a cleaner/smaller CSS file. The grid system is not causing any damage, so feel free to keep it - even if commented, it doesn't deserve any purpose...\nBasically the [cache storage](http://readthedocs.org/docs/django-staticfiles/en/latest/helpers/#staticfiles.storage.CachedStaticFilesStorage) from django-staticfiles allow file cache busting.\nTo do so, when collecting static files it also verify that file exists or raise an exception. I submitted a patch to django-statcfiles which add a setting to fail silently on missing file.\nIn the same time, the following patch removes all image files that are not used, so it's compatible with django-staticfiles and we are sure there are no missing files served on production.\nHope it helps.\n. Thanks for your quick reply.\n. ",
    "jancespivo": "It's not \"trunk\" branch but one of the latest revision of the 1.3 branch. Anyway I've tested it with the latest 1.3 revision and the latest stable version downloaded from djangoproject.com and I've been experienced with the same bug.\n. We analyze this problem in our projects and definitely **it's not a bug in grappelli**. But there isn't separated css and javascript logic across the classes. In this case it is class \"module\", which is important not only for definition the visual style in css but also for counting of inline rows (adding and removing row with js). So we recommend to separate class \"module\" to two. One for visual and one for javascript. We did it manually in our projects and it's fine now.\n\nThank you for your time..\n. It's not \"trunk\" branch but one of the latest revision of the 1.3 branch. Anyway I've tested it with the latest 1.3 revision and the latest stable version downloaded from djangoproject.com and I've been experienced with the same bug.\n. We analyze this problem in our projects and definitely **it's not a bug in grappelli**. But there isn't separated css and javascript logic across the classes. In this case it is class \"module\", which is important not only for definition the visual style in css but also for counting of inline rows (adding and removing row with js). So we recommend to separate class \"module\" to two. One for visual and one for javascript. We did it manually in our projects and it's fine now.\n\nThank you for your time..\n. ",
    "dingosaurus": "It is grappelli really bug.\nfor example: \n\nfile grappelli/templates/admin/edit_inline/tabular.html (https://github.com/sehmaschine/django-grappelli/blob/master/grappelli/templates/admin/edit_inline/tabular.html) on row 13 and 14 is div element with css class \"module\" and js inline (https://github.com/sehmaschine/django-grappelli/blob/master/grappelli/static/grappelli/js/grappelli/jquery.grp_inline.js#L60) on row 60 bind options.formCssClass for each \".module\" elements. \n\nAnd if I would remove empty inline (sequence: add inline -> not fill anything -> remove inline ->) on for 139 (https://github.com/sehmaschine/django-grappelli/blob/master/grappelli/static/grappelli/js/grappelli/jquery.grp_inline.js#L139) count each elements with class options.formCssClass (aka .module) => it count table header, Add item, ... too.\n\nNamespace or diff between system class and design class is good idea.\n\nThanks\nMK\n. Hi, \nfirst test worked good. Thanks!\n. It is grappelli really bug.\nfor example: \n\nfile grappelli/templates/admin/edit_inline/tabular.html (https://github.com/sehmaschine/django-grappelli/blob/master/grappelli/templates/admin/edit_inline/tabular.html) on row 13 and 14 is div element with css class \"module\" and js inline (https://github.com/sehmaschine/django-grappelli/blob/master/grappelli/static/grappelli/js/grappelli/jquery.grp_inline.js#L60) on row 60 bind options.formCssClass for each \".module\" elements. \n\nAnd if I would remove empty inline (sequence: add inline -> not fill anything -> remove inline ->) on for 139 (https://github.com/sehmaschine/django-grappelli/blob/master/grappelli/static/grappelli/js/grappelli/jquery.grp_inline.js#L139) count each elements with class options.formCssClass (aka .module) => it count table header, Add item, ... too.\n\nNamespace or diff between system class and design class is good idea.\n\nThanks\nMK\n. Hi, \nfirst test worked good. Thanks!\n. ",
    "bohyn": "Hello, is there anything new about fixing this bug? I have also met it in django grappelli admin.\n. Hello, is there anything new about fixing this bug? I have also met it in django grappelli admin.\n. ",
    "bashmish": "As of d174682bbc1714bc071dbe4d29df705d5239c2e7 this issue seems to be resolved.\n. I think that this bug is closely related to #64.\n\nThe first idea is to add default class `.untouched` to all extra forms (which are empty) added to inline formset. When administrator tries to edit some of these forms the form looses `.untouched` class. When save button is clicked grappelli excludes forms with `.untouched` class.\n\nBut there are some cases when this behavior is not expected. For example, when inline forms include only select widget fields or some other inputs which can be untouched but expected to be saved as is in default state.  So this behavior should be optional.\n\nAny better ideas?\n. I think that this is a consistent solution.\n\nStill don't see how comparing values can help in some rare cases. The reason is that the serialized data in extra forms can be unchanged, but it doesn't necessarily mean that administrator doesn't want it to be saved. Am I wrong?\n. @sehmaschine you are right in case of old rows (taken from DB), but what about new extra forms containing some untouched data which still has to be saved (even if it was not edited)?\n\nI can't imagine a real example. Maybe there will be someone who can. So, let it be as you propose :)\n. After thinking for quite a while I came to an idea that I was wrong about these rare situations. All examples that came to my mind resulted in strong confidence that in all such rare cases a programmer will set `extra = 0`, because setting `extra > 1` has no sense. And all unwanted extra forms added to a formset using JavaScript must be _manually_ deleted.\n. Yes, I understand that. But in real cases I don't see problems anymore. Some marginal cases, for example, when inline has only NullBooleanField, can't be automatically resolved because adding extra form means that this form is already fulfilled even if administrator didn't do anything except adding this extra form. If administrator clicks \"+\" and adds form with NullBooleanField only he should have understand that he added a fulfilled form that will be saved in any case.\n. If grappelli adds indexes to inputs only on save using JavaScript then this bug is not related to grappelli itself.\n\nI'll try to reproduce this bug in Django's built-in admin UI manually adding position indexes.\n. As of d174682bbc1714bc071dbe4d29df705d5239c2e7 this issue seems to be resolved.\n. I think that this bug is closely related to #64.\n\nThe first idea is to add default class `.untouched` to all extra forms (which are empty) added to inline formset. When administrator tries to edit some of these forms the form looses `.untouched` class. When save button is clicked grappelli excludes forms with `.untouched` class.\n\nBut there are some cases when this behavior is not expected. For example, when inline forms include only select widget fields or some other inputs which can be untouched but expected to be saved as is in default state.  So this behavior should be optional.\n\nAny better ideas?\n. I think that this is a consistent solution.\n\nStill don't see how comparing values can help in some rare cases. The reason is that the serialized data in extra forms can be unchanged, but it doesn't necessarily mean that administrator doesn't want it to be saved. Am I wrong?\n. @sehmaschine you are right in case of old rows (taken from DB), but what about new extra forms containing some untouched data which still has to be saved (even if it was not edited)?\n\nI can't imagine a real example. Maybe there will be someone who can. So, let it be as you propose :)\n. After thinking for quite a while I came to an idea that I was wrong about these rare situations. All examples that came to my mind resulted in strong confidence that in all such rare cases a programmer will set `extra = 0`, because setting `extra > 1` has no sense. And all unwanted extra forms added to a formset using JavaScript must be _manually_ deleted.\n. Yes, I understand that. But in real cases I don't see problems anymore. Some marginal cases, for example, when inline has only NullBooleanField, can't be automatically resolved because adding extra form means that this form is already fulfilled even if administrator didn't do anything except adding this extra form. If administrator clicks \"+\" and adds form with NullBooleanField only he should have understand that he added a fulfilled form that will be saved in any case.\n. If grappelli adds indexes to inputs only on save using JavaScript then this bug is not related to grappelli itself.\n\nI'll try to reproduce this bug in Django's built-in admin UI manually adding position indexes.\n. ",
    "dannyadair": "I have the same problem. Would like to add that an AppList without \"models\" or \"exclude\" will not list my app either. I register the models with a subclass of django.contrib.admin.AdminSite.\n. Ah, and the latter seems to be problem: dashboard.utils.get_admin_site returns \"admin.site\" which is the regular \"django.contrib.admin.sites.AdminSite\". The ._registry.items() only holds the default registrations of the standard admin site. My own sublcassed admin site does hold all the models in its registration, but isn't used...\n\nThis should be reproducible with a simple:\n\n``` python\nfrom django.contrib import admin\n\nclass MySite(admin.AdminSite):\n    pass\nmy_site = MySite()\n```\n\nand then registering against that site.\n. Ok solved (for me). I'm overriding the default admin site and therefore have to go the \"figure out from URL using dictionary\" route, i.e.\n\n``` python\nGRAPPELLI_INDEX_DASHBOARD = {\n    'myproject.myapp.admin.my_site': 'myproject.dashboard.CustomIndexDashboard',\n}\n```\n\nNow the correct admin site is used and all its registered models listed.\n\nThe documentation should probably mention that - \"if you have several admin sites\" is not the only time this is needed.\n. I think I found the culprit.\n\nIn one of my projects, it has 12 apps, one of the apps was not picked up by the wildcard pattern. When instantiating a dashboard.modules.AppList, I had to specify \"models=('myproject._', 'funnyapp._', )\" for funnyapp to show up, although funnyapp is part of myproject like all the others.\n\nI think this has to do with the notation that apps are imported. With django's sys.path/importlib hackery, you can import \"myapp\" or \"myproject.myapp\". (Btw if you mix the two notations the module will be loaded/executed twice)\n\nI believe Carl Meyer has been doing some magic removal on django trunk, see https://groups.google.com/group/django-developers/browse_thread/thread/44b70a37ff73298b which essentially brings consistency to the import notation - either something \"inside\" the project or not, choose one.\n\nOne of my apps was importing \"from funnyapp\" instead of \"from myproject.funnyapp\" and somehow - I didn't look at the details - that stayed the only reference to the app in regards to AdminSite's app registration. Once I changed the import to \"from myproject.funnyapp\" the project wildcard also picked up funnyapp.\n. So I guess it a) is not a grappelli-specific issue b) nevertheless is worth mentioning in the docs of the wildcard notation c) should disappear with the next django release where consistent import notation is enforced.\n. I have the same problem. Would like to add that an AppList without \"models\" or \"exclude\" will not list my app either. I register the models with a subclass of django.contrib.admin.AdminSite.\n. Ah, and the latter seems to be problem: dashboard.utils.get_admin_site returns \"admin.site\" which is the regular \"django.contrib.admin.sites.AdminSite\". The ._registry.items() only holds the default registrations of the standard admin site. My own sublcassed admin site does hold all the models in its registration, but isn't used...\n\nThis should be reproducible with a simple:\n\n``` python\nfrom django.contrib import admin\n\nclass MySite(admin.AdminSite):\n    pass\nmy_site = MySite()\n```\n\nand then registering against that site.\n. Ok solved (for me). I'm overriding the default admin site and therefore have to go the \"figure out from URL using dictionary\" route, i.e.\n\n``` python\nGRAPPELLI_INDEX_DASHBOARD = {\n    'myproject.myapp.admin.my_site': 'myproject.dashboard.CustomIndexDashboard',\n}\n```\n\nNow the correct admin site is used and all its registered models listed.\n\nThe documentation should probably mention that - \"if you have several admin sites\" is not the only time this is needed.\n. I think I found the culprit.\n\nIn one of my projects, it has 12 apps, one of the apps was not picked up by the wildcard pattern. When instantiating a dashboard.modules.AppList, I had to specify \"models=('myproject._', 'funnyapp._', )\" for funnyapp to show up, although funnyapp is part of myproject like all the others.\n\nI think this has to do with the notation that apps are imported. With django's sys.path/importlib hackery, you can import \"myapp\" or \"myproject.myapp\". (Btw if you mix the two notations the module will be loaded/executed twice)\n\nI believe Carl Meyer has been doing some magic removal on django trunk, see https://groups.google.com/group/django-developers/browse_thread/thread/44b70a37ff73298b which essentially brings consistency to the import notation - either something \"inside\" the project or not, choose one.\n\nOne of my apps was importing \"from funnyapp\" instead of \"from myproject.funnyapp\" and somehow - I didn't look at the details - that stayed the only reference to the app in regards to AdminSite's app registration. Once I changed the import to \"from myproject.funnyapp\" the project wildcard also picked up funnyapp.\n. So I guess it a) is not a grappelli-specific issue b) nevertheless is worth mentioning in the docs of the wildcard notation c) should disappear with the next django release where consistent import notation is enforced.\n. ",
    "javouhey": "I forgot to register my models. That was the reason why it didn't show up.\n. I forgot to register my models. That was the reason why it didn't show up.\n. ",
    "domenkozar": "Any particualar reason this one was closed?\n. Since you don't ship django-filebrowser independent of django-grappeli, it makes it pretty much useless if it is also not compatible with other third party add-ons. Grappelli is an awesome product, but if you are going to support a few of your products explicitly and discard all others, chances that someone will use it are pretty slim IMHO.\n. Good point :)\n. Where can I find those? :)\n. Any particualar reason this one was closed?\n. Since you don't ship django-filebrowser independent of django-grappeli, it makes it pretty much useless if it is also not compatible with other third party add-ons. Grappelli is an awesome product, but if you are going to support a few of your products explicitly and discard all others, chances that someone will use it are pretty slim IMHO.\n. Good point :)\n. Where can I find those? :)\n. ",
    "thikonom": "does not work for me either. 2.3.4 here\n. Anyone with the same prob?\n. does not work for me either. 2.3.4 here\n. Anyone with the same prob?\n. ",
    "kylefox": "Sorry yeah, let's close it. I'll just submit a pull request if I get around to it.\n. Sorry yeah, let's close it. I'll just submit a pull request if I get around to it.\n. ",
    "tomscytale": "according to docs/dashboard_api.rst they can contain \"Text or HTML content\nto display above[below] the module content\"\n\nWe have some non-technical staff that use the admin site to push content to\nour site. I would like to provide explanatory notes in several modules\nexplaining the uses of the different models.\n\nt\n\nOn Tue, Nov 8, 2011 at 12:13 PM, Patrick Kranzlmueller <\nreply@reply.github.com>wrote:\n\n> a question to begin with: what exactly would you do with pre-/post-content\n> functionality?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/sehmaschine/django-grappelli/issues/53#issuecomment-2666795\n. I have both installed on a site. grappelli breaks feincms due to inlines.min.js being empty.\n. I understood that grappelli was intended to be a drop in replacement for the regular django admin site and so was intended to just work everywhere that the admin site does. If this is not the case then I'll revert that particular commit and work around it locally.\n. On Mon, Nov 14, 2011 at 11:00 AM, Patrick Kranzlmueller <\nreply@reply.github.com\n\n> wrote:\n> \n> basically, youre right  grappelli replaces the admin site. but if\n> feincms doesnt support our templates resp. DOM structure, it wont work.\n> \n> background: because the HTML/CSS of the original admin is a bit of a mess,\n> we are not able to work on the basis with grappelli since it makes the\n> js-part (which again ist just a workaround for some django-limitations)\n> almost impossible. bit of an awkward situation, but theres not much we can\n> do about that right now.\n> \n> ok, that's useful to know, thanks.\n\nThat said. It's not really the case that feincms does not support\ngrappelli's DOM structure etc. feincms simply requires access to\ninlines.min.js. I believe that adding back this file would retain\ncompatibility with a popular project with minimal effort and minimal future\nsupport obligation.\n\nt\n. I notice you've closed this pull request - apart from the change to the javascript there were various other changes - some documentation updates and some useful minor functionality tweaks - have you decided that you don't want to pull any of this?\n. On Mon, Nov 14, 2011 at 2:27 PM, Patrick Kranzlmueller <\nreply@reply.github.com\n\n> wrote:\n> \n> sorry for that. are you able to split the pull-requests?\n\nI can add a revert for the bits you don't want or i can resubmit -\nwhichever you prefer.\n\nt\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/sehmaschine/django-grappelli/pull/54#issuecomment-2730943\n. On Mon, Nov 14, 2011 at 2:31 PM, Patrick Kranzlmueller <\nreply@reply.github.com\n\n> wrote:\n> \n> Id prefer a pull-request for every self-contained change/fix. thanks a\n> lot.\n\nreally? I can do that but since afaik I can only issue one pull request at\na time that's going take a long time since I'm going to have to wait for\nyou to merge each request before sending the next one and there are 5 self\ncontained small changes.\n\nnormally if someone sends me a pull request I just do a 'git remote add'\n to get their repo and then cherry-pick the commits I want to accept.\nThat's a lot faster than dealing with multiple pull requests - is there a\nreason you prefer the slower approach?\n\nt\n. On Tue, Nov 15, 2011 at 10:14 AM, Patrick Kranzlmueller <\nreply@reply.github.com\n\n> wrote:\n> \n> sorry ... I didnt know you can do only one pull request a time. in that\n> case, just leave it as is. Im pretty new to git, so Ive never used\n> cherry-pick, but Ill give that a try.\n\nif you're not used to git it looks very cryptic but once you know what the\ncommands mean it's actually quite striaghtforward.\n\nit'd be something along the lines of this:\nhttp://markosullivan.ca/how-to-handle-a-pull-request-from-github/\n\nlet me know if you have any queries.\n\nt\n. according to docs/dashboard_api.rst they can contain \"Text or HTML content\nto display above[below] the module content\"\n\nWe have some non-technical staff that use the admin site to push content to\nour site. I would like to provide explanatory notes in several modules\nexplaining the uses of the different models.\n\nt\n\nOn Tue, Nov 8, 2011 at 12:13 PM, Patrick Kranzlmueller <\nreply@reply.github.com>wrote:\n\n> a question to begin with: what exactly would you do with pre-/post-content\n> functionality?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/sehmaschine/django-grappelli/issues/53#issuecomment-2666795\n. I have both installed on a site. grappelli breaks feincms due to inlines.min.js being empty.\n. I understood that grappelli was intended to be a drop in replacement for the regular django admin site and so was intended to just work everywhere that the admin site does. If this is not the case then I'll revert that particular commit and work around it locally.\n. On Mon, Nov 14, 2011 at 11:00 AM, Patrick Kranzlmueller <\nreply@reply.github.com\n\n> wrote:\n> \n> basically, youre right  grappelli replaces the admin site. but if\n> feincms doesnt support our templates resp. DOM structure, it wont work.\n> \n> background: because the HTML/CSS of the original admin is a bit of a mess,\n> we are not able to work on the basis with grappelli since it makes the\n> js-part (which again ist just a workaround for some django-limitations)\n> almost impossible. bit of an awkward situation, but theres not much we can\n> do about that right now.\n> \n> ok, that's useful to know, thanks.\n\nThat said. It's not really the case that feincms does not support\ngrappelli's DOM structure etc. feincms simply requires access to\ninlines.min.js. I believe that adding back this file would retain\ncompatibility with a popular project with minimal effort and minimal future\nsupport obligation.\n\nt\n. I notice you've closed this pull request - apart from the change to the javascript there were various other changes - some documentation updates and some useful minor functionality tweaks - have you decided that you don't want to pull any of this?\n. On Mon, Nov 14, 2011 at 2:27 PM, Patrick Kranzlmueller <\nreply@reply.github.com\n\n> wrote:\n> \n> sorry for that. are you able to split the pull-requests?\n\nI can add a revert for the bits you don't want or i can resubmit -\nwhichever you prefer.\n\nt\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/sehmaschine/django-grappelli/pull/54#issuecomment-2730943\n. On Mon, Nov 14, 2011 at 2:31 PM, Patrick Kranzlmueller <\nreply@reply.github.com\n\n> wrote:\n> \n> Id prefer a pull-request for every self-contained change/fix. thanks a\n> lot.\n\nreally? I can do that but since afaik I can only issue one pull request at\na time that's going take a long time since I'm going to have to wait for\nyou to merge each request before sending the next one and there are 5 self\ncontained small changes.\n\nnormally if someone sends me a pull request I just do a 'git remote add'\n to get their repo and then cherry-pick the commits I want to accept.\nThat's a lot faster than dealing with multiple pull requests - is there a\nreason you prefer the slower approach?\n\nt\n. On Tue, Nov 15, 2011 at 10:14 AM, Patrick Kranzlmueller <\nreply@reply.github.com\n\n> wrote:\n> \n> sorry ... I didnt know you can do only one pull request a time. in that\n> case, just leave it as is. Im pretty new to git, so Ive never used\n> cherry-pick, but Ill give that a try.\n\nif you're not used to git it looks very cryptic but once you know what the\ncommands mean it's actually quite striaghtforward.\n\nit'd be something along the lines of this:\nhttp://markosullivan.ca/how-to-handle-a-pull-request-from-github/\n\nlet me know if you have any queries.\n\nt\n. ",
    "hcarvalhoalves": "Screenshot: http://i41.tinypic.com/2q8rqyr.png\n\nIt's a little rough in the edges, the dialogs (the warning/error ones) are still pretty ugly (default TinyMCE skins suck), so consider it work-in-progress. But it's a good start, since it's less annoying than browser popups.\n. Yes, it's only for TinyMCE dialogs (although if you launch FileBrowser from a TinyMCE image/URL dialog, it will open as a modal too).\n\nI too wanted a generic solution for all popups on the admin. Unfortunately, TinyMCE has it's own implementation for popups that is incompatible with everything (the inlinepopups plugin), so you can't really use something like lightbox.js for opening both TinyMCE and Django popups.\n. I think you are right. For consistency it will be probably necessary to create a custom TinyMCE plugin, such that something like jQuery Lightbox plugin can be used for _all_ popups in the admin.\n. Also, that catch-all `try` is evil. Should be:\n\n```\n                        try:\n                            obj = model.objects.get(pk=obj_id)\n                            data.append({\"value\":obj.pk,\"label\":get_label(obj)})\n                        except obj.DoesNotExist:\n                            data.append({\"value\":obj_id,\"label\":_(\"?\")})\n```\n. The question is wether this is something to be configurable at all. This is more of a conceptual problem since the Dashboard reorganizes only the first page, and the other navigation elements (breadcrumbs) follow Django's layout.\n\nThe templates can be rewritten to take into account if you are using Dashboard or not, and retrieve the correct breadcrumbs based on which context processor is installed. I'll try to make a patch for that.\n. Screenshot: http://i41.tinypic.com/2q8rqyr.png\n\nIt's a little rough in the edges, the dialogs (the warning/error ones) are still pretty ugly (default TinyMCE skins suck), so consider it work-in-progress. But it's a good start, since it's less annoying than browser popups.\n. Yes, it's only for TinyMCE dialogs (although if you launch FileBrowser from a TinyMCE image/URL dialog, it will open as a modal too).\n\nI too wanted a generic solution for all popups on the admin. Unfortunately, TinyMCE has it's own implementation for popups that is incompatible with everything (the inlinepopups plugin), so you can't really use something like lightbox.js for opening both TinyMCE and Django popups.\n. I think you are right. For consistency it will be probably necessary to create a custom TinyMCE plugin, such that something like jQuery Lightbox plugin can be used for _all_ popups in the admin.\n. Also, that catch-all `try` is evil. Should be:\n\n```\n                        try:\n                            obj = model.objects.get(pk=obj_id)\n                            data.append({\"value\":obj.pk,\"label\":get_label(obj)})\n                        except obj.DoesNotExist:\n                            data.append({\"value\":obj_id,\"label\":_(\"?\")})\n```\n. The question is wether this is something to be configurable at all. This is more of a conceptual problem since the Dashboard reorganizes only the first page, and the other navigation elements (breadcrumbs) follow Django's layout.\n\nThe templates can be rewritten to take into account if you are using Dashboard or not, and retrieve the correct breadcrumbs based on which context processor is installed. I'll try to make a patch for that.\n. ",
    "mariuszthecoder": "I'm using 2.3.5 version installed by default by pip script.\nthanks\n\n2011/11/15 Patrick Kranzlmueller\nreply@reply.github.com:\n\n> see https://github.com/sehmaschine/django-grappelli/commit/8997ce912d3e638973507c7edde50a7c05a2cf1c\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/sehmaschine/django-grappelli/issues/59#issuecomment-2747057\n. I'm using 2.3.5 version installed by default by pip script.\nthanks\n\n2011/11/15 Patrick Kranzlmueller\nreply@reply.github.com:\n\n> see https://github.com/sehmaschine/django-grappelli/commit/8997ce912d3e638973507c7edde50a7c05a2cf1c\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/sehmaschine/django-grappelli/issues/59#issuecomment-2747057\n. ",
    "VladimirPal": "When do you plan to use tinymce 3.4.7 ?\n. When do you plan to use tinymce 3.4.7 ?\n. ",
    "archatas": "The new Youtube embed code uses iframes which are not supported as insertable media for tinymce 3.4.2, but are supported by tinymce 3.4.7. In my opinion, it is important to update tinymce ASAP.\n. I mean tinyMCE 3.5b2.\n. No. It's here: https://github.com/sehmaschine/django-grappelli/blob/stable/2.3.x/grappelli/static/grappelli/tinymce/jscripts/tiny_mce/plugins/paste/pasteword.htm\n. It seems that if I change the form in **pasteword.html** to\n\n``` html\n<form name=\"source\" onsubmit=\"return PasteWordDialog.insert();\" action=\"#\">\n```\n\nand submit button to\n\n``` html\n<input type=\"submit\" id=\"insert\" class=\"default\" name=\"insert\" value=\"{#insert}\" />\n```\n\nthen the plugin works well.\n. Thanks!\n. The new Youtube embed code uses iframes which are not supported as insertable media for tinymce 3.4.2, but are supported by tinymce 3.4.7. In my opinion, it is important to update tinymce ASAP.\n. I mean tinyMCE 3.5b2.\n. No. It's here: https://github.com/sehmaschine/django-grappelli/blob/stable/2.3.x/grappelli/static/grappelli/tinymce/jscripts/tiny_mce/plugins/paste/pasteword.htm\n. It seems that if I change the form in **pasteword.html** to\n\n``` html\n<form name=\"source\" onsubmit=\"return PasteWordDialog.insert();\" action=\"#\">\n```\n\nand submit button to\n\n``` html\n<input type=\"submit\" id=\"insert\" class=\"default\" name=\"insert\" value=\"{#insert}\" />\n```\n\nthen the plugin works well.\n. Thanks!\n. ",
    "kylemacfarlane": "In case anyone else comes across this it's easy to fix. Just set `default=0` on your sortable field.\n\nNow you'll also run into issue 65 so you'll have to also set `extra = 0` on your admin inlines.\n. I'm using 2.3.5 from PyPi.\n. This issue seems to be fixed in the 2.4 branch. Just remember to update your admin files and overwrite them with the new dummy files from 2.4.\n. I don't understand why you would want fields with default values to be excluded? Especially if the defaults are dynamic.\n\nIn my situation I only had a file field which can't be serialized and a hidden sortable_field_name with a default which the selector misses. So in the end nothing gets serialized unless the selector is changed to also pickup hidden fields. Excluding default values would create the same problem in a different place.\n. The sortable fields do not react to changes by users; they are just blindly renumbered when the user drags and drop the inlines.\n\nIf the inlines are to become \"smart\" and detect changes then they should be done properly as mentioned in #65 which would also fix #64 and then make this issue redundant. Otherwise just ignoring defaults would make #64 unsolvable.\n. The selector misses hidden inputs not because they're hidden per se, but because the template renders hidden inputs in a different location.\n\nIIRC simply the following would work too.\n\n```\nvar fields = $(this).find(\"div.td :input[value], > input[value]\");\n```\n. This bug has nothing to do with `[value]` but the fact that the hidden inputs are sometimes rendered in a different place in the template, i.e. not inside `div.td`. Tabular inlines are rendered something like:\n\n```\n<div>\n    <!-- 1. Hidden formset inputs -->\n    <input type=\"hidden\" name=\"TOTAL_FORMS\" value=\"1\" />\n\n    <div class=\"tr\">\n        <!-- 2. Hidden form inputs -->\n        <input type=\"hidden\" name=\"sort_order\" value=\"0\" />\n\n        <div class=\"td\">\n            <!-- 3. Regular inputs -->\n            <input type=\"text\" name=\"something\" value=\"test\" />\n        </div>\n\n        <div class=\"td tools\">\n            <!-- 4. Hidden row pk, fk, etc. -->\n            <input type=\"text\" name=\"id\" value=\"1\" />\n        </div>\n    </div>\n</div>\n```\n\nSortables need to pick up the inputs at positions 2, 3 and 4 while ignoring inputs at position 1. The selector `div.td :input[value]` only picks up 3 and 4 and misses 2. Adding `, > input[type=hidden]` was the most precise way I could think of adding position 2 to the current selector.\n\nI don't think that stacked inlines have the same problem but they do have an [issue with ghost rows where the label is displayed but the input is hidden](https://code.djangoproject.com/ticket/11277) so I imagine they will one day be rendered in a similar way to tabular inlines.\n. You're right, 4 doesn't matter.\n\nTwo is important because we can't serialize file inputs. So if the only input at position 3 is a file field then the whole row will be ignored. By including the hidden inputs at position 2 we have data we can serialize (specifically the sortable field itself is serializable assuming it has a default value).\n. 1) I numbered all my comments 1., 2., etc.\n\n2) I'm only interested in default values because they offer a simple way around #64. It's not a holy cow and a proper solution shouldn't care about default values.\n. There are methods for clearfixing that don't use overflow hidden. For example:\n\n```\nfieldset.module .row {\n    padding: 8px 10px;\n    line-height: 18px;\n    font-weight: normal;\n    *min-height: 1%;\n}\nfieldset.module .row:after {\n    clear: both;\n    content: \" \";\n    display: block;\n    font-size: 0;\n    height: 0;\n    visibility: hidden;\n}\nfieldset.module .row.cells {\n    white-space: nowrap;\n}\n```\n. It's being used as a clearfix on the login page, which the change for issue 97 has broken.\n. Really github? No double click prevention?\n. This seems to work for me. My only complaint is that storing in an actual hidden input is redundant if the variables are properly scoped. I came up with the following when the fiddle was in an earlier state but now yours seems to cover the same features as mine except you use a fake textarea.\n\nhttp://jsfiddle.net/kjcFA/5/\n\nEDIT: In Grappelli I don't believe that `document.ready` should be used. Just dump the Javascript immediately after the HTML so that the events bind as quickly as possible.\n. I couldn't find a way to access initial field values in the template, only default field values. Looking at the Django source it seems like the initial values are actually stored in the form and the fields are generally unaware of them.\n\nSo I think you'd need to create a template tag that can get the initial values for the form and store them as JSON in an HTML5 data attribute. Something like:\n\n```\n<form method=\"post\" action=\".\" data-initial=\"{% grp_initial_values form %}\">\n```\n\n Then in jQuery you could do something as simple as `var initial = $('form').data('initial')` and it automatically parses the JSON and everything.\n. ```\n{{ field.field.field.initial }}\n```\n\nDespite the naming it seems to actually be the default value from the model and not the initial form data.\n\nHowever the data is of course in Python format which means comparing it to the actual form values in Javascript is more complicated. Converting None to empty strings is one thing, but widgets can alter the value in all types of ways (especially custom widgets).\n\nSo a fuller solution might have to look like the following completely untested pseudo code.\n\n```\n{{ field.field|grp_default }}\n```\n\n.\n\n```\n@register.filter\ndef grp_default(field):\n    # Get the default value\n    # Taken from https://github.com/django/django/blob/master/django/forms/forms.py#L483-496\n    data = field.form.initial.get(field.name, field.field.initial)\n    if callable(data):\n        data = data()\n    data = field.field.prepare_value(data)\n\n    # Convert the data to HTML format\n    # I don't believe there is a requirement for widgets to implement _format_value but all the default ones do\n    return field.field.widget._format_value(data)\n```\n. It seems to work fine for me but I didn't try anything fancy. I don't think performance is an issue considering it's only run on submit.\n. This is a Django bug: https://code.djangoproject.com/ticket/11277\n\nIt happens in contrib.admin too.\n. The grp-help class has no margin-bottom and looks too close when it appears above widgets such as the one from SelectBox.js.\n. Fields defined in `readonly_fields` in the Django admin will have the `grp-readonly` class around them but you can also use a custom admin form and change the widget on a field to something like `widget=AdminURLFieldWidget(attrs={'readonly': 'readonly'})`. Grappelli 2.4 won't apply any special styling to inputs like this because it has no selector for `input[readonly], textarea[readonly]`.\n\nI've linked a screenshot of grp-help above a SelectBox. It doesn't quite touch but it's obviously much closer than it should be and looks misaligned compared to the help messages on the rest of the page.\n\nhttp://i.imgur.com/14Pcv.png\n. I rewrote my own version of SelectBox/Filter that can handle large lists (tested up to 11k) without slowing down to a halt. The default widget in Django/Grappelli is too slow for me and crashes IE and Opera.\n. I have it as a pull request over at the Django repo https://github.com/django/django/pull/222 It also includes improved keyboard accessibility.\n\nI doubt they will accept it since it doesn't have tests and I've never used Selenium before. One of the core developers has a complete jQuery rewrite with tests over at Django ticket 13614 which I think is more likely to be committed even though it's even slower than the current widget.\n. There's also a problem with stacked inlines caused by [Django ticket 11277](https://code.djangoproject.com/ticket/11277) which someone also opened here as #149.\n\nWith tabular inlines the hidden fields are placed in a different location and the inline ordering selector doesn't pick them up. However in stacked inlines they're still in the same location but hidden and so are counted towards reordering.\n\nIn my setup this creates the problem that the reordering selector picks up the default value in the `sortable_field_name` and so blank extras rows are renumbered and are detected by the Django admin as new rows. A simple solution to this would be to automatically put the sortable field into `sortable_excludes`.\n\nBut there's still the problem that stacked and tabular inlines behave differently with hidden inputs. We could just ignore all hidden inputs by adding `[type!=hidden]` to the selector but that might break some custom widgets.\n\nSo I think the following should be done.\n1. Add `sortable_field_name` to `sortable_excludes` automatically. Even if it's not a hidden field I can't imagine a situation where you'd want it to count towards reordering. In both `stacked.html` and `tabular.html`:\n   \n   ```\n   sortable_excludes = [sortable_field_name].concat({% get_sortable_excludes inline_admin_formset.opts %}),\n   ```\n2. Also select immediate descendants for tabular inlines so that we pick up the hidden fields and have consistent behaviour between each layout type. Only in `tabular.html`:\n   \n   ```\n   var selectors = \":input[value][value!=''][type!=radio][type!=checkbox],input:checked,input[type=file]\",\n       fields = $(this).find(\"div.grp-td \" + selectors + \", > \" + selectors),\n       submit_values = false,\n       has_value;\n   ```\n   \n   When 11277 or #149 are fixed then a similar fix will probably have to be applied to `stacked.html`.\n. In case anyone else comes across this it's easy to fix. Just set `default=0` on your sortable field.\n\nNow you'll also run into issue 65 so you'll have to also set `extra = 0` on your admin inlines.\n. I'm using 2.3.5 from PyPi.\n. This issue seems to be fixed in the 2.4 branch. Just remember to update your admin files and overwrite them with the new dummy files from 2.4.\n. I don't understand why you would want fields with default values to be excluded? Especially if the defaults are dynamic.\n\nIn my situation I only had a file field which can't be serialized and a hidden sortable_field_name with a default which the selector misses. So in the end nothing gets serialized unless the selector is changed to also pickup hidden fields. Excluding default values would create the same problem in a different place.\n. The sortable fields do not react to changes by users; they are just blindly renumbered when the user drags and drop the inlines.\n\nIf the inlines are to become \"smart\" and detect changes then they should be done properly as mentioned in #65 which would also fix #64 and then make this issue redundant. Otherwise just ignoring defaults would make #64 unsolvable.\n. The selector misses hidden inputs not because they're hidden per se, but because the template renders hidden inputs in a different location.\n\nIIRC simply the following would work too.\n\n```\nvar fields = $(this).find(\"div.td :input[value], > input[value]\");\n```\n. This bug has nothing to do with `[value]` but the fact that the hidden inputs are sometimes rendered in a different place in the template, i.e. not inside `div.td`. Tabular inlines are rendered something like:\n\n```\n<div>\n    <!-- 1. Hidden formset inputs -->\n    <input type=\"hidden\" name=\"TOTAL_FORMS\" value=\"1\" />\n\n    <div class=\"tr\">\n        <!-- 2. Hidden form inputs -->\n        <input type=\"hidden\" name=\"sort_order\" value=\"0\" />\n\n        <div class=\"td\">\n            <!-- 3. Regular inputs -->\n            <input type=\"text\" name=\"something\" value=\"test\" />\n        </div>\n\n        <div class=\"td tools\">\n            <!-- 4. Hidden row pk, fk, etc. -->\n            <input type=\"text\" name=\"id\" value=\"1\" />\n        </div>\n    </div>\n</div>\n```\n\nSortables need to pick up the inputs at positions 2, 3 and 4 while ignoring inputs at position 1. The selector `div.td :input[value]` only picks up 3 and 4 and misses 2. Adding `, > input[type=hidden]` was the most precise way I could think of adding position 2 to the current selector.\n\nI don't think that stacked inlines have the same problem but they do have an [issue with ghost rows where the label is displayed but the input is hidden](https://code.djangoproject.com/ticket/11277) so I imagine they will one day be rendered in a similar way to tabular inlines.\n. You're right, 4 doesn't matter.\n\nTwo is important because we can't serialize file inputs. So if the only input at position 3 is a file field then the whole row will be ignored. By including the hidden inputs at position 2 we have data we can serialize (specifically the sortable field itself is serializable assuming it has a default value).\n. 1) I numbered all my comments 1., 2., etc.\n\n2) I'm only interested in default values because they offer a simple way around #64. It's not a holy cow and a proper solution shouldn't care about default values.\n. There are methods for clearfixing that don't use overflow hidden. For example:\n\n```\nfieldset.module .row {\n    padding: 8px 10px;\n    line-height: 18px;\n    font-weight: normal;\n    *min-height: 1%;\n}\nfieldset.module .row:after {\n    clear: both;\n    content: \" \";\n    display: block;\n    font-size: 0;\n    height: 0;\n    visibility: hidden;\n}\nfieldset.module .row.cells {\n    white-space: nowrap;\n}\n```\n. It's being used as a clearfix on the login page, which the change for issue 97 has broken.\n. Really github? No double click prevention?\n. This seems to work for me. My only complaint is that storing in an actual hidden input is redundant if the variables are properly scoped. I came up with the following when the fiddle was in an earlier state but now yours seems to cover the same features as mine except you use a fake textarea.\n\nhttp://jsfiddle.net/kjcFA/5/\n\nEDIT: In Grappelli I don't believe that `document.ready` should be used. Just dump the Javascript immediately after the HTML so that the events bind as quickly as possible.\n. I couldn't find a way to access initial field values in the template, only default field values. Looking at the Django source it seems like the initial values are actually stored in the form and the fields are generally unaware of them.\n\nSo I think you'd need to create a template tag that can get the initial values for the form and store them as JSON in an HTML5 data attribute. Something like:\n\n```\n<form method=\"post\" action=\".\" data-initial=\"{% grp_initial_values form %}\">\n```\n\n Then in jQuery you could do something as simple as `var initial = $('form').data('initial')` and it automatically parses the JSON and everything.\n. ```\n{{ field.field.field.initial }}\n```\n\nDespite the naming it seems to actually be the default value from the model and not the initial form data.\n\nHowever the data is of course in Python format which means comparing it to the actual form values in Javascript is more complicated. Converting None to empty strings is one thing, but widgets can alter the value in all types of ways (especially custom widgets).\n\nSo a fuller solution might have to look like the following completely untested pseudo code.\n\n```\n{{ field.field|grp_default }}\n```\n\n.\n\n```\n@register.filter\ndef grp_default(field):\n    # Get the default value\n    # Taken from https://github.com/django/django/blob/master/django/forms/forms.py#L483-496\n    data = field.form.initial.get(field.name, field.field.initial)\n    if callable(data):\n        data = data()\n    data = field.field.prepare_value(data)\n\n    # Convert the data to HTML format\n    # I don't believe there is a requirement for widgets to implement _format_value but all the default ones do\n    return field.field.widget._format_value(data)\n```\n. It seems to work fine for me but I didn't try anything fancy. I don't think performance is an issue considering it's only run on submit.\n. This is a Django bug: https://code.djangoproject.com/ticket/11277\n\nIt happens in contrib.admin too.\n. The grp-help class has no margin-bottom and looks too close when it appears above widgets such as the one from SelectBox.js.\n. Fields defined in `readonly_fields` in the Django admin will have the `grp-readonly` class around them but you can also use a custom admin form and change the widget on a field to something like `widget=AdminURLFieldWidget(attrs={'readonly': 'readonly'})`. Grappelli 2.4 won't apply any special styling to inputs like this because it has no selector for `input[readonly], textarea[readonly]`.\n\nI've linked a screenshot of grp-help above a SelectBox. It doesn't quite touch but it's obviously much closer than it should be and looks misaligned compared to the help messages on the rest of the page.\n\nhttp://i.imgur.com/14Pcv.png\n. I rewrote my own version of SelectBox/Filter that can handle large lists (tested up to 11k) without slowing down to a halt. The default widget in Django/Grappelli is too slow for me and crashes IE and Opera.\n. I have it as a pull request over at the Django repo https://github.com/django/django/pull/222 It also includes improved keyboard accessibility.\n\nI doubt they will accept it since it doesn't have tests and I've never used Selenium before. One of the core developers has a complete jQuery rewrite with tests over at Django ticket 13614 which I think is more likely to be committed even though it's even slower than the current widget.\n. There's also a problem with stacked inlines caused by [Django ticket 11277](https://code.djangoproject.com/ticket/11277) which someone also opened here as #149.\n\nWith tabular inlines the hidden fields are placed in a different location and the inline ordering selector doesn't pick them up. However in stacked inlines they're still in the same location but hidden and so are counted towards reordering.\n\nIn my setup this creates the problem that the reordering selector picks up the default value in the `sortable_field_name` and so blank extras rows are renumbered and are detected by the Django admin as new rows. A simple solution to this would be to automatically put the sortable field into `sortable_excludes`.\n\nBut there's still the problem that stacked and tabular inlines behave differently with hidden inputs. We could just ignore all hidden inputs by adding `[type!=hidden]` to the selector but that might break some custom widgets.\n\nSo I think the following should be done.\n1. Add `sortable_field_name` to `sortable_excludes` automatically. Even if it's not a hidden field I can't imagine a situation where you'd want it to count towards reordering. In both `stacked.html` and `tabular.html`:\n   \n   ```\n   sortable_excludes = [sortable_field_name].concat({% get_sortable_excludes inline_admin_formset.opts %}),\n   ```\n2. Also select immediate descendants for tabular inlines so that we pick up the hidden fields and have consistent behaviour between each layout type. Only in `tabular.html`:\n   \n   ```\n   var selectors = \":input[value][value!=''][type!=radio][type!=checkbox],input:checked,input[type=file]\",\n       fields = $(this).find(\"div.grp-td \" + selectors + \", > \" + selectors),\n       submit_values = false,\n       has_value;\n   ```\n   \n   When 11277 or #149 are fixed then a similar fix will probably have to be applied to `stacked.html`.\n. ",
    "firewut": "Django 1.4 pre-alpha.\nWhen i try to load any application page i'm getting error like:\n\nTypeError: 'undefined' is not a function (evaluating '$(\"tr input.action-select\").actions()')\n\nSo i've just included actions.js into base.html template :D\nThere is some other errors and i'm tryin to fix it.\n\nSorry if it's a nooby pull request :D \n. Django 1.4 pre-alpha.\nWhen i try to load any application page i'm getting error like:\n\nTypeError: 'undefined' is not a function (evaluating '$(\"tr input.action-select\").actions()')\n\nSo i've just included actions.js into base.html template :D\nThere is some other errors and i'm tryin to fix it.\n\nSorry if it's a nooby pull request :D \n. ",
    "Glideh": "I don't understand why they added this feature, the application is more a developer concern.\n. :) you should be right\n. I'm talking about the usual `project/templates/base.html`\n. I'm talking about [this file](https://github.com/sehmaschine/django-grappelli/blob/master/grappelli/templates/admin/base.html).\nI need to integrate the administration interface but I need it to respect the principal menu/tab navigation of my site.\n. The several elements that you see in [this screenshot](http://gprod.net/Grappelli.png) appears on any page, they are defined in my project/templates/base.html\nTabs and menus are not related to admin.\n. It seems effectively more linked to admin than Grappelli specifically.\nI thought it was a fairly common case.\nI'll try to override the base.\nThank you\n. I have this error when trying to group delete any selected object(s)\n\nFor example when trying to delete a selected user (from the list)\n\n> NoReverseMatch at /admin/auth/user/\n> Reverse for 'app_list' with arguments '()' and keyword arguments '{u'app_label': ''}' not found.\n> 1 pattern(s) tried:\n> [u'admin/(?P<app_label>company|sites|default|plaquette|avatar|product|planner|registration|auth)/$']\n\nDeleting the object individually (from the editor) works.\n\n```\nDjango==1.7.6\ndjango-grappelli==2.5.3\n```\n. I don't understand why they added this feature, the application is more a developer concern.\n. :) you should be right\n. I'm talking about the usual `project/templates/base.html`\n. I'm talking about [this file](https://github.com/sehmaschine/django-grappelli/blob/master/grappelli/templates/admin/base.html).\nI need to integrate the administration interface but I need it to respect the principal menu/tab navigation of my site.\n. The several elements that you see in [this screenshot](http://gprod.net/Grappelli.png) appears on any page, they are defined in my project/templates/base.html\nTabs and menus are not related to admin.\n. It seems effectively more linked to admin than Grappelli specifically.\nI thought it was a fairly common case.\nI'll try to override the base.\nThank you\n. I have this error when trying to group delete any selected object(s)\n\nFor example when trying to delete a selected user (from the list)\n\n> NoReverseMatch at /admin/auth/user/\n> Reverse for 'app_list' with arguments '()' and keyword arguments '{u'app_label': ''}' not found.\n> 1 pattern(s) tried:\n> [u'admin/(?P<app_label>company|sites|default|plaquette|avatar|product|planner|registration|auth)/$']\n\nDeleting the object individually (from the editor) works.\n\n```\nDjango==1.7.6\ndjango-grappelli==2.5.3\n```\n. ",
    "mb0": "i also had the same problem. \nGovexec/django-grappelli@7a2841266a6c676f38c8f166a06b07e91e7df905 fixed it for me.\n. i also had the same problem. \nGovexec/django-grappelli@7a2841266a6c676f38c8f166a06b07e91e7df905 fixed it for me.\n. ",
    "floledermann": "Closing this as I didn't realize pull requests are treated as issues automatically. See #72 for pull-request.\n. Turns out it is quite a pain to detect mobile devices with all the variety that exists nowadays. The most robust method still seems to be a media query for devices with a screen width or height under 600, as modern, high-res smartphones will report a device-pixel-ratio of 2 and therefore divide their resolution by 2 with respect to media queries.\n\nThe proposed patch uses such a simple media query, and would lead to false positives in the following cases: browsers on screens with a height <= 600px, or smartphones with a width > 1200 - both seem highly unlikely.\nThe media query causes the header to rendered as position: static (i.e. default block element) and the footer position: absolute at the bottom of the page (since it is embedded 1 level deeper than the header it looks better to take it out of the layout hierarchy by applying absolute positioning)\n\nConsider this a quick fix to be able to access and use grappelli on mobile, not a thorough concept ;)\n. All good on my Galaxy Nexus, guess this should work everywhere.\n. Closing this as I didn't realize pull requests are treated as issues automatically. See #72 for pull-request.\n. Turns out it is quite a pain to detect mobile devices with all the variety that exists nowadays. The most robust method still seems to be a media query for devices with a screen width or height under 600, as modern, high-res smartphones will report a device-pixel-ratio of 2 and therefore divide their resolution by 2 with respect to media queries.\n\nThe proposed patch uses such a simple media query, and would lead to false positives in the following cases: browsers on screens with a height <= 600px, or smartphones with a width > 1200 - both seem highly unlikely.\nThe media query causes the header to rendered as position: static (i.e. default block element) and the footer position: absolute at the bottom of the page (since it is embedded 1 level deeper than the header it looks better to take it out of the layout hierarchy by applying absolute positioning)\n\nConsider this a quick fix to be able to access and use grappelli on mobile, not a thorough concept ;)\n. All good on my Galaxy Nexus, guess this should work everywhere.\n. ",
    "georgema1982": "Then it's quite strange. I enter in other fields but left the sortable field blank. Grappelli doesn't populate sortable fields. I always have to enter something there.\n. Here are the model and admin definition (tailored a little):\n\nclass ItemImage(ImageModel):\n\n```\nitem = models.ForeignKey(Item)\nimage = models.ImageField(upload_to = 'items')\nsequence = models.PositiveSmallIntegerField()\nclass Meta:\n    ordering = ['sequence']\n```\n\nclass ItemImageInline(TabularInline):\n\n```\nmodel = ItemImage\nsortable_field_name = \"sequence\"\nform = ItemImageForm\n```\n. There are no js errors. The sortable field is simply ignored if it's not populated with something.\n. Maybe add a hidden field in the form and use javascript to populate this hidden field on file field's onchange event?\n. Then it's quite strange. I enter in other fields but left the sortable field blank. Grappelli doesn't populate sortable fields. I always have to enter something there.\n. Here are the model and admin definition (tailored a little):\n\nclass ItemImage(ImageModel):\n\n```\nitem = models.ForeignKey(Item)\nimage = models.ImageField(upload_to = 'items')\nsequence = models.PositiveSmallIntegerField()\nclass Meta:\n    ordering = ['sequence']\n```\n\nclass ItemImageInline(TabularInline):\n\n```\nmodel = ItemImage\nsortable_field_name = \"sequence\"\nform = ItemImageForm\n```\n. There are no js errors. The sortable field is simply ignored if it's not populated with something.\n. Maybe add a hidden field in the form and use javascript to populate this hidden field on file field's onchange event?\n. ",
    "fourga38": "OK, thanks anyway !\n\nIn my last commit (fourga38/django-grappelli@e2b2ba35443748496580e4c9eee7b5e45299dfdd), I just changed the content of some of your translation blocks a little, because, they don't exactly match the ones expected by django.\n\nA simple example, from grappelli/templates/admin/index.html :\n- {% trans \"You don\u00b4t have permission to edit anything.\" %} won't be translated\n- {% trans \"You don't have permission to edit anything.\" %} will be translated (\"\u00b4\" != \"'\")\n\nNote that I'm using diango 1.3, maybe some admin messages have change between versions.\n\nThanks again for reading !\n. One more thing that, I guess, explains missing translations : some of the grappelli templates translation blocks seems to come from django-admin-tools, which got its own translation files.\n. OK, thanks anyway !\n\nIn my last commit (fourga38/django-grappelli@e2b2ba35443748496580e4c9eee7b5e45299dfdd), I just changed the content of some of your translation blocks a little, because, they don't exactly match the ones expected by django.\n\nA simple example, from grappelli/templates/admin/index.html :\n- {% trans \"You don\u00b4t have permission to edit anything.\" %} won't be translated\n- {% trans \"You don't have permission to edit anything.\" %} will be translated (\"\u00b4\" != \"'\")\n\nNote that I'm using diango 1.3, maybe some admin messages have change between versions.\n\nThanks again for reading !\n. One more thing that, I guess, explains missing translations : some of the grappelli templates translation blocks seems to come from django-admin-tools, which got its own translation files.\n. ",
    "fetzig": "the help_text underneath the list of checkboxes is for the SelectBox version only, thus wrong too: \"Halten Sie die Strg-Taste (\u2318 f\u00fcr Mac) w\u00e4hrend des Klickens gedr\u00fcckt, um mehrere Eintr\u00e4ge auszuw\u00e4hlen.\"\n. as far as i know (and i checked): django admin has no clue about this whatsoever. \n\ndjango.contrib.admin v1.3 and 1.4 handle the select box widget only. grappelli can handle the select box, raw id fields and radio lists as far as i can see in the code (relatedobjectlooup.js - the custom part).\n\nwould fix this in my grappelli fork, but would like know if it has a chance to go upstream first.\n. fyi: about the help_text comment above: this is hardcoded in django. https://github.com/django/django/blob/master/django/db/models/fields/related.py#L1119\n\n:(\n. pull requests are currently (imo always by concept) broken. get a 404 when submitting the form.\n\nhere is the commit: https://github.com/fetzig/django-grappelli/commit/bfa1875cb39426df7ea2d6c00831f2bf4e54a716\n\nwill try to make a pull request another time soon.\n. sorry no idea how to make a pull request out of that.\n\nwould be great if you could \"cherry-pick\" those:\nhttps://github.com/fetzig/django-grappelli/commit/bfa1875cb39426df7ea2d6c00831f2bf4e54a716\nhttps://github.com/fetzig/django-grappelli/commit/a0aec5f1161e3aded9ad1001132d5ae1d314ac76\n. the help_text underneath the list of checkboxes is for the SelectBox version only, thus wrong too: \"Halten Sie die Strg-Taste (\u2318 f\u00fcr Mac) w\u00e4hrend des Klickens gedr\u00fcckt, um mehrere Eintr\u00e4ge auszuw\u00e4hlen.\"\n. as far as i know (and i checked): django admin has no clue about this whatsoever. \n\ndjango.contrib.admin v1.3 and 1.4 handle the select box widget only. grappelli can handle the select box, raw id fields and radio lists as far as i can see in the code (relatedobjectlooup.js - the custom part).\n\nwould fix this in my grappelli fork, but would like know if it has a chance to go upstream first.\n. fyi: about the help_text comment above: this is hardcoded in django. https://github.com/django/django/blob/master/django/db/models/fields/related.py#L1119\n\n:(\n. pull requests are currently (imo always by concept) broken. get a 404 when submitting the form.\n\nhere is the commit: https://github.com/fetzig/django-grappelli/commit/bfa1875cb39426df7ea2d6c00831f2bf4e54a716\n\nwill try to make a pull request another time soon.\n. sorry no idea how to make a pull request out of that.\n\nwould be great if you could \"cherry-pick\" those:\nhttps://github.com/fetzig/django-grappelli/commit/bfa1875cb39426df7ea2d6c00831f2bf4e54a716\nhttps://github.com/fetzig/django-grappelli/commit/a0aec5f1161e3aded9ad1001132d5ae1d314ac76\n. ",
    "funkybob": "I think I've just run into this.\n\nWas getting an error with \"please correct the error below\", though no fields were showing an error.\n\nSome hacking about in django source revealed it was the last formset -- the one there because I had extra=1.\n\nWorse, if I tried to remove it (hit the -) I'd get an exception as the formset machinery complained of missing keys.\n\nI'm currently working around this using extra=0.\n. Whilst trying to mock up a simple test case for this, I've run into another problem.\n\nhttps://gist.github.com/2773175\n\nWhen I go to Admin and try to add a new Uber, I can't save it because it flags all 3 Through inlines as requiring their 'Unter' to be defined.\n. On further digging [I've lost context on where in my app it originally showed up, as i have several sortables] I think my original issue was to do with something else [which I may bring up in another ticket]\n\nHowever, with my Unter/Uber example I am hitting the \"This field is required\" when I leave the Unter field blank in the inline -- even though it's an \"extras\" inline, not an existing record.\n\nGiven that there are only 3 fields on the record (2fkeys and an order) and only two are on the form, and only 1 is visible... and blank... it seems your existing code is failing your defined process, since it shouldn't serialise the inlines since they don't have any values.\n. The 2.4 branch, with Django 1.4... updated today to verify the problem still exists.\n. Well, you know... this being a ticket flagged as 2.4... seemed the right place to mention it... will go try 2.3.8 now.\n. After mangling my config to make 2.3 work again [adding ADMIN_MEDIA_PREFIX] ... no, 2.3.x doesn't behave the same.\n\nSo, it looks like a regression in the 2.4 branch.\n. The tweak above seems to fix the issue for us where the sortable field is a Hidden widget.  We get a \"This field is required\"... even when the field is not hidden, the problem persists.\n\nIn our case, the inlined model has 3 fields -- fkey to parent object, fkey to another object [using an autocomplete] and 'order', the sortable field.\n\nFrom looking at the JS at that point and inspecting the HTML, the selector looking for :input[value] won't select the sortable field of the newly created inline, because it has no value attribute.\n\nCould this be related to why it's not being renumbered?\n. Yeah, it used to work for us... but has stopped.\n\nSorry, should have mentioned before we're using the 2.4 branch on django 1.4.\n\nAs to the blank/null... never needed that before, and the sortable values are all defined in JavaScript before submission, so I don't see how it's relevant.\n\nWhat I can confirm is that when I applied the selector change of the OP, it works.  However, my theory is not because they're hidden fields, but because they have no 'value' attribute.\n. They look good in the design, and I'd love menus to be added to Grappelli... but why create a new menu widget?\n\nFor instance, menu widgets used in django-admin-tools and bootstrap seem quite functional. (and then there's django-admintools-bootstrap, to boot!)\n. ping?\n. Well, I can try to bisect my way back to when it stopped... but I don't think the 2.4 branch has been multi-column for some time now...\n. Wonder if this is at all related with all our inlines not rendering today...\n. Yep!  All working now.  Thanks!\n. I have two fields next to each other... in our case:\n\n'fields': (\n    ('created_at', 'created_by'),\n    ('modified_at', 'modified_by'),\n)\n\nThey're all four read-only fields.\n\nOn the \"at\" fields (datetimes) I see \"Mar\", but the r is cut off by the divider for the \"by\" field.\n\nThe \"by\" field (fkey to User) doesn't show anything, as the value has vanished behind its label.\n\n[Am using Chrome on Linux]\n. Even fixed another issue on the same page I hadn't noticed, where a date/time field [editable] was mostly disappearing as overflow.\n\nThanks!\n. Whilst you're at it... seems the display/hidden state of them isn't starting out right...\n. No, the action doesn't have an intermediate page.\n\nIf I hit the \"select all\" checkbox, it selects all 100 on the page, and the action works.\n\nIf I press, instead, the \"select all 317\" button in the footer bar, next to the Action drop-down, it doesn't work.\n. To clarify.... hitting the \"sslect all\" checkbox... only gives me the 100 records on the page.  Not all 317 records.\n. Are you testing against the 2.4 branch?\n\nWhy can't I attach the 2.4 label to issues?\n\nWhich \"select all\" are you referring to?\n. Well, no... it's ambiguous... because the checkbox in the title list of the grid selects only those items showing on the page, whereas the \"sleect all' button in the footer [next to the Actions listbox] theoretically selects \"all 317\" as it says.\n\nOK... yes, using your two-step process works as expected.\n\nAs I said above, I pressed ONLY ONE of the two options in each test.  I didn't realise the \"Select All N\" button wasn't supposed to show until after.\n\nNot sure I like the two-step process...\n. Tried collectstatic, as well as purging browser cache.  I'm going to throw in a random comment to see if it really is being updated.\n. Currently this looks like whatever is causing my live server [but not test setup] to use actions.min.js is the culprit.\n\nWhich brings us back to #148 ... should they match, and what controls which one is used?\n. So, it's a matter of if DEBUG=True or not as to if min is appended. [contrib.admin.options .. about line 400]\n\nSo the fact admin/actions.min.js and admin/actions.js are different _is_ significant.  Indeed, copying actions.js over top of actions.min.js fixed my issue.\n. Seems this is controlled by if DEBUG=True... so they should match and operate identically.\n. And whilst I look, labels for checkboxes are rendered to the right of them, yet the space to the left is still there... just wasted, effectively.\n. I'll dig into it and see what I can find out...\n. FYI - I've just run into exactly the same issue... it's ONLY with ModelLists... AppLists are all working fine.\n. Yeah... saw it, grok'd it, and agree with it...  just wanted to lend weight to your claim :)\n\nGuess we'll be skipping 2.4.1 ... unless the release is somehow revised :P\n. Try adding the trailing / to your STATIC_URL\n\nThe reason is, in 'proper' URL joining, adding \"grappelli/js/...\" to \"/static\"  steps back to \"/\" first, before adding the 'relative' path.\n. Delving deeper... it looks like the raw_id_fields on the inline is being ignored... the markup for that field is significantly different to working ones, and includes the repr in a < strong > tag.\n. Turns out this is the same as #185.\n\nSince I'm selecting from a list of classes which inherit it, and never the base class, I hadn't added it to admin.\n. Makes sense to be, but I can't see how you can reliably map from Model to Admin, especially since there could be more than one.\n\nMy need for this feature may, in fact, go away soon with a patch I submitted to django-model-utils, but if there was one case, there could be more.\n. What is the justification for this order?  Grappelli doesn't provide any project-level static files.\n. I think I've just run into this.\n\nWas getting an error with \"please correct the error below\", though no fields were showing an error.\n\nSome hacking about in django source revealed it was the last formset -- the one there because I had extra=1.\n\nWorse, if I tried to remove it (hit the -) I'd get an exception as the formset machinery complained of missing keys.\n\nI'm currently working around this using extra=0.\n. Whilst trying to mock up a simple test case for this, I've run into another problem.\n\nhttps://gist.github.com/2773175\n\nWhen I go to Admin and try to add a new Uber, I can't save it because it flags all 3 Through inlines as requiring their 'Unter' to be defined.\n. On further digging [I've lost context on where in my app it originally showed up, as i have several sortables] I think my original issue was to do with something else [which I may bring up in another ticket]\n\nHowever, with my Unter/Uber example I am hitting the \"This field is required\" when I leave the Unter field blank in the inline -- even though it's an \"extras\" inline, not an existing record.\n\nGiven that there are only 3 fields on the record (2fkeys and an order) and only two are on the form, and only 1 is visible... and blank... it seems your existing code is failing your defined process, since it shouldn't serialise the inlines since they don't have any values.\n. The 2.4 branch, with Django 1.4... updated today to verify the problem still exists.\n. Well, you know... this being a ticket flagged as 2.4... seemed the right place to mention it... will go try 2.3.8 now.\n. After mangling my config to make 2.3 work again [adding ADMIN_MEDIA_PREFIX] ... no, 2.3.x doesn't behave the same.\n\nSo, it looks like a regression in the 2.4 branch.\n. The tweak above seems to fix the issue for us where the sortable field is a Hidden widget.  We get a \"This field is required\"... even when the field is not hidden, the problem persists.\n\nIn our case, the inlined model has 3 fields -- fkey to parent object, fkey to another object [using an autocomplete] and 'order', the sortable field.\n\nFrom looking at the JS at that point and inspecting the HTML, the selector looking for :input[value] won't select the sortable field of the newly created inline, because it has no value attribute.\n\nCould this be related to why it's not being renumbered?\n. Yeah, it used to work for us... but has stopped.\n\nSorry, should have mentioned before we're using the 2.4 branch on django 1.4.\n\nAs to the blank/null... never needed that before, and the sortable values are all defined in JavaScript before submission, so I don't see how it's relevant.\n\nWhat I can confirm is that when I applied the selector change of the OP, it works.  However, my theory is not because they're hidden fields, but because they have no 'value' attribute.\n. They look good in the design, and I'd love menus to be added to Grappelli... but why create a new menu widget?\n\nFor instance, menu widgets used in django-admin-tools and bootstrap seem quite functional. (and then there's django-admintools-bootstrap, to boot!)\n. ping?\n. Well, I can try to bisect my way back to when it stopped... but I don't think the 2.4 branch has been multi-column for some time now...\n. Wonder if this is at all related with all our inlines not rendering today...\n. Yep!  All working now.  Thanks!\n. I have two fields next to each other... in our case:\n\n'fields': (\n    ('created_at', 'created_by'),\n    ('modified_at', 'modified_by'),\n)\n\nThey're all four read-only fields.\n\nOn the \"at\" fields (datetimes) I see \"Mar\", but the r is cut off by the divider for the \"by\" field.\n\nThe \"by\" field (fkey to User) doesn't show anything, as the value has vanished behind its label.\n\n[Am using Chrome on Linux]\n. Even fixed another issue on the same page I hadn't noticed, where a date/time field [editable] was mostly disappearing as overflow.\n\nThanks!\n. Whilst you're at it... seems the display/hidden state of them isn't starting out right...\n. No, the action doesn't have an intermediate page.\n\nIf I hit the \"select all\" checkbox, it selects all 100 on the page, and the action works.\n\nIf I press, instead, the \"select all 317\" button in the footer bar, next to the Action drop-down, it doesn't work.\n. To clarify.... hitting the \"sslect all\" checkbox... only gives me the 100 records on the page.  Not all 317 records.\n. Are you testing against the 2.4 branch?\n\nWhy can't I attach the 2.4 label to issues?\n\nWhich \"select all\" are you referring to?\n. Well, no... it's ambiguous... because the checkbox in the title list of the grid selects only those items showing on the page, whereas the \"sleect all' button in the footer [next to the Actions listbox] theoretically selects \"all 317\" as it says.\n\nOK... yes, using your two-step process works as expected.\n\nAs I said above, I pressed ONLY ONE of the two options in each test.  I didn't realise the \"Select All N\" button wasn't supposed to show until after.\n\nNot sure I like the two-step process...\n. Tried collectstatic, as well as purging browser cache.  I'm going to throw in a random comment to see if it really is being updated.\n. Currently this looks like whatever is causing my live server [but not test setup] to use actions.min.js is the culprit.\n\nWhich brings us back to #148 ... should they match, and what controls which one is used?\n. So, it's a matter of if DEBUG=True or not as to if min is appended. [contrib.admin.options .. about line 400]\n\nSo the fact admin/actions.min.js and admin/actions.js are different _is_ significant.  Indeed, copying actions.js over top of actions.min.js fixed my issue.\n. Seems this is controlled by if DEBUG=True... so they should match and operate identically.\n. And whilst I look, labels for checkboxes are rendered to the right of them, yet the space to the left is still there... just wasted, effectively.\n. I'll dig into it and see what I can find out...\n. FYI - I've just run into exactly the same issue... it's ONLY with ModelLists... AppLists are all working fine.\n. Yeah... saw it, grok'd it, and agree with it...  just wanted to lend weight to your claim :)\n\nGuess we'll be skipping 2.4.1 ... unless the release is somehow revised :P\n. Try adding the trailing / to your STATIC_URL\n\nThe reason is, in 'proper' URL joining, adding \"grappelli/js/...\" to \"/static\"  steps back to \"/\" first, before adding the 'relative' path.\n. Delving deeper... it looks like the raw_id_fields on the inline is being ignored... the markup for that field is significantly different to working ones, and includes the repr in a < strong > tag.\n. Turns out this is the same as #185.\n\nSince I'm selecting from a list of classes which inherit it, and never the base class, I hadn't added it to admin.\n. Makes sense to be, but I can't see how you can reliably map from Model to Admin, especially since there could be more than one.\n\nMy need for this feature may, in fact, go away soon with a patch I submitted to django-model-utils, but if there was one case, there could be more.\n. What is the justification for this order?  Grappelli doesn't provide any project-level static files.\n. ",
    "overshard": "Still a problem in 1.4b1\n. There is, I did think that and specifically checked that the appropriate HTML was there. This error does not seem to be directed at the HTML selector though, it seems directed at the JavaScript method grp_collapsible(). It simply can't find it even though I see it being imported into the document. Maybe the end (django.jQuery) has something to do with it? Instead of it being just (jQuery)?\n. Still a problem in 1.4b1\n. There is, I did think that and specifically checked that the appropriate HTML was there. This error does not seem to be directed at the HTML selector though, it seems directed at the JavaScript method grp_collapsible(). It simply can't find it even though I see it being imported into the document. Maybe the end (django.jQuery) has something to do with it? Instead of it being just (jQuery)?\n. ",
    "Fannon": "Hi there,\n\nany Idea when Grappelli is ready for Django 1.4? \nI've tryed the Grappelli 2.4 Branch but it didn't work for me.\n\nGreets, Simon\n. Thanks for the fast reply! \n\nGreat Project / UI by the way!\n\nSimon\n. Hi there,\n\nany Idea when Grappelli is ready for Django 1.4? \nI've tryed the Grappelli 2.4 Branch but it didn't work for me.\n\nGreets, Simon\n. Thanks for the fast reply! \n\nGreat Project / UI by the way!\n\nSimon\n. ",
    "leandroferreira": "When is the 1.4 compatible version coming out?\n. When is the 1.4 compatible version coming out?\n. ",
    "g00fy-": "I am working with trunk (1.5) now, almost everything seems to be ok,\n\nThere is only one problem with filtering, but there is a quick fix:\n\ngrappelli/templates/adminchange_list.html :\n\nthe tag:  {{ media.js }} has to be before other scripts (wrong order of scripts loading causes actions() to fail)\n\nthe quick fix (lines 10~15):\n\n<!-- JAVASCRIPTS -->\n\n{% block javascripts %}\n    {{ block.super }} \n    {{ media.js }}\n    <!--* import of actions.js has to be before it is used * -->\n\nthis quck fix, works with django trunk.\n\nsorry I couldn't send a patch.\n. I am working with trunk (1.5) now, almost everything seems to be ok,\n\nThere is only one problem with filtering, but there is a quick fix:\n\ngrappelli/templates/adminchange_list.html :\n\nthe tag:  {{ media.js }} has to be before other scripts (wrong order of scripts loading causes actions() to fail)\n\nthe quick fix (lines 10~15):\n\n<!-- JAVASCRIPTS -->\n\n{% block javascripts %}\n    {{ block.super }} \n    {{ media.js }}\n    <!--* import of actions.js has to be before it is used * -->\n\nthis quck fix, works with django trunk.\n\nsorry I couldn't send a patch.\n. ",
    "h3": "Yes, I'm using it.. sorry if that wasn't clear in my pull message.\n. Yes I'm using it .. everywhere it's \"{{ STATIC_URL }}grappelli/....\"\n\nHardcoding /static/ wouldn't make sense..\n. Ahhhh, I see. No, I did not know about this tag. Will change it right away.\n. Check my latest commit .. I've separated the admin and grappelli medias. What's in static/admin/ is used to overwrite the admin static files and what's in static/grappelli/ is now specific only to grappelli.\n\nThis is a lot cleaner I think..\n. I think we'll be able to go one step further in the clean up by removing files in grappelli/static/admin/ that are unchanged from he django/static/admin/ and they should fallback to the django/static/admin/.\n\nBut this remain to test..\n. I've found the issue with sorting .. nothing related to JavaScript.\n\nThe problem is in templates/admin/change_list_results.html which has changed in 1.4 to support multiple columns sorting. They also added a button to remove the sorting on a column.\n\nThis is way harder to fix than I expected because grappelli changed the way sorting button works. In vanilla admin they added buttons inside the TH to control the sorting. But since the pre-1.4 column sorting in django admin was a bit naive, in grappelli you removed the button inside the TH and used a background image instead. So the whole TH is actually the sort button.\n\nThe problem is that now we have three different sort actions that must work within the TH: sort, reverse sort, remove sort. So using the whole TH as a sort button to toggle between ascending and descending won't work anymore.\n\nWe'll also need a new icons for the remove sort button and the unsorted state..\n\nI might give it a shot this weekend.\n. I've managed to fix multiple column sorting .. not without a good fight with the CSS.\n\nThere's some testing left to be done, but it looks pretty much functional.\n\nAlso, I've created a temporary icon for the \"remove sorting\" button, you will probably want to change it: icons/icon-th-ascending.png\n\nCheers\n. I think the folder grappelli/static/admin/ isn't even needed anymore .. I've tried to delete it and everything is still working as expected. Can anybody confirm this ?\n. Nevermind my last comment. If django doesn't find files in `grappelli/static/admin/` it uses `admin/static/admin/`.\n\nBut it confirm my suspicion that we can remove JavaScript files in `grappelli/static/admin/js/` that are unchanged from `admin/static/admin/js/`.\n\nFor example, I deleted `grappelli/static/admin/js/urlify.js` and django was still able to pull it from `admin/static/admin/js/urlify.js`.\n\nSo ultimately, the only files we should put in `grappelli/static/admin/js/` are the one we need to overwrite from the vanilla admin.\n. Yes, I'm using it.. sorry if that wasn't clear in my pull message.\n. Yes I'm using it .. everywhere it's \"{{ STATIC_URL }}grappelli/....\"\n\nHardcoding /static/ wouldn't make sense..\n. Ahhhh, I see. No, I did not know about this tag. Will change it right away.\n. Check my latest commit .. I've separated the admin and grappelli medias. What's in static/admin/ is used to overwrite the admin static files and what's in static/grappelli/ is now specific only to grappelli.\n\nThis is a lot cleaner I think..\n. I think we'll be able to go one step further in the clean up by removing files in grappelli/static/admin/ that are unchanged from he django/static/admin/ and they should fallback to the django/static/admin/.\n\nBut this remain to test..\n. I've found the issue with sorting .. nothing related to JavaScript.\n\nThe problem is in templates/admin/change_list_results.html which has changed in 1.4 to support multiple columns sorting. They also added a button to remove the sorting on a column.\n\nThis is way harder to fix than I expected because grappelli changed the way sorting button works. In vanilla admin they added buttons inside the TH to control the sorting. But since the pre-1.4 column sorting in django admin was a bit naive, in grappelli you removed the button inside the TH and used a background image instead. So the whole TH is actually the sort button.\n\nThe problem is that now we have three different sort actions that must work within the TH: sort, reverse sort, remove sort. So using the whole TH as a sort button to toggle between ascending and descending won't work anymore.\n\nWe'll also need a new icons for the remove sort button and the unsorted state..\n\nI might give it a shot this weekend.\n. I've managed to fix multiple column sorting .. not without a good fight with the CSS.\n\nThere's some testing left to be done, but it looks pretty much functional.\n\nAlso, I've created a temporary icon for the \"remove sorting\" button, you will probably want to change it: icons/icon-th-ascending.png\n\nCheers\n. I think the folder grappelli/static/admin/ isn't even needed anymore .. I've tried to delete it and everything is still working as expected. Can anybody confirm this ?\n. Nevermind my last comment. If django doesn't find files in `grappelli/static/admin/` it uses `admin/static/admin/`.\n\nBut it confirm my suspicion that we can remove JavaScript files in `grappelli/static/admin/js/` that are unchanged from `admin/static/admin/js/`.\n\nFor example, I deleted `grappelli/static/admin/js/urlify.js` and django was still able to pull it from `admin/static/admin/js/urlify.js`.\n\nSo ultimately, the only files we should put in `grappelli/static/admin/js/` are the one we need to overwrite from the vanilla admin.\n. ",
    "ikks": "Thanks, for older releases suffices to copy the gis icons from admin to static/grappelli/img/gis in case someone asks.\n.  @parsch you rock, thx.\n. @sehmaschine I guess you can close this issue, because is being addressed at https://github.com/toastdriven/django-haystack/issues/1097 . Thank you.\n. Thanks, for older releases suffices to copy the gis icons from admin to static/grappelli/img/gis in case someone asks.\n.  @parsch you rock, thx.\n. @sehmaschine I guess you can close this issue, because is being addressed at https://github.com/toastdriven/django-haystack/issues/1097 . Thank you.\n. ",
    "xaralis": "Hi, the reasoning for the second commit can be situation I faced related to the submit_row blocks. I needed to override submit row globally (didn't wanna use the original django `submit_row` templatetag). I can imagine such a situation could occur quite often, it happens that you need to override some part of `change_form.html` template for every object.\n\nHowever, this is not at all possible without copy-pasting rest of the contents (not only the changed part) because when you define your own `change_form.html`, it's not possible to extend the original grappelli one -- you can try it, it just won't work and results in endless recursion loop. That's why I put the contents in separate file. This way you can easily extend the separate template without the recursion side-efect. Does it make sense now?\n. It's easy to override change form for some specific object type (~content type). The problem occurs when you need to make same changes to the change form of _every_ object type while not forced to do copy-and-paste of the whole template code (which is totally anti-DRY).\n\nLet's say you would like to override `object_tools` block for every object type. You would probably go this way:\n1. Define custom `[TEMPLATES_DIR]/admin/change_form.html`\n2. Use the original grappeli template as base:\n\n``` python\n{% extends \"admin/change_form.html\" %}\n\n{% block object_tools %}\n    {# my changes - e.g. add new button for all the objects #}\n    {{ block.super }}\n{% endblock %}\n```\n\nThe problem here is the `{% extends \"admin/change_form.html\" %}` statement. This leads to infinite recursion because the template you wanted to extend is resolved as the very same template you try to define! There is no possibility to tell Django it should look for grappelli template as parent to extend.\n. I should mention that same problem applies to Django templates too. Django administration templates aren't designed in very customization-friendly way in my humble opinion. I just thought that we should try to avoid bad design decisions in case of Grappelli (which replaces most of the templates anyway).\n. I do not want to override it completely in most cases. Usually, what i need to do is just some minor changes like add something to `object_tools` block and quite often changing the behavior of submit row too. Unfortunately, current template design doesn't allow me to do this. The only choice left is to copy whole template to mine and alter it to my taste. This is something I don't really like because it is very unfriendly when it comes to upgrade the grappelli version. I would have to check everytime if something didn't changed in original grappelli template and forward the changes to my clone if it did.\n\nI do agree that having _base template for every of those root templates doesn't sound very nice. On the other hand, I am afraid that this is by far the simplest and still transparent solution available. Other ways to solve this would require changes on the level of `ModelAdmin` class - to extend the template selection fallback in some way which would allow for having custom global template base.\n. And yes, you are right that same problem would occur if I tried to extend change_from_base in template called change_form_base. That's why there are two levels of the change form template. In my custom change_form, I am able to extend from change_form_base in the same way you would do it in the grappelli original. This is why I find it quite simple and transparent.\n. In case of Django admin, it probably _wasn't_ bad design decision but simply a decision they made. It's very clear they do not want to expose a lot of admin possibilities/interface to public because they don't think of Django admin as full-featured administration interface at all. It's mostly likely meant only as substitute when real administration is not needed. They do not want to be bound by lot of backwards compatibility they would have to maintain otherwise. I bet this is something you came across too :) I mean things like fixing broken grappelli compatibility everytime new Django version goes out.\n. Ooops, seems like that unresolved pull request stacks up when commiting to forked master. Hopefully, this is something you appreciate - I added localization of datepicker, which solves #5.\n. Ok, understand your point. It's a shame though since I will be probably forced to keep my fork separate (which was not the original intent).\n\nI tried to search for \"jquery-localization\" but didn't find the project. Can you help me find it? I might try to use it instead of Django js catalogue.\n. Well, those locales solve problem with jquery ui original files but it doesn't solve your custom text like \"Done\" button in datepicker. So, in my opinion, this is hardly a way to go.\n\nAbout transifex project... I would have to think about it a little. Dunno how much time eaten up I should expect.\n. Hi, the reasoning for the second commit can be situation I faced related to the submit_row blocks. I needed to override submit row globally (didn't wanna use the original django `submit_row` templatetag). I can imagine such a situation could occur quite often, it happens that you need to override some part of `change_form.html` template for every object.\n\nHowever, this is not at all possible without copy-pasting rest of the contents (not only the changed part) because when you define your own `change_form.html`, it's not possible to extend the original grappelli one -- you can try it, it just won't work and results in endless recursion loop. That's why I put the contents in separate file. This way you can easily extend the separate template without the recursion side-efect. Does it make sense now?\n. It's easy to override change form for some specific object type (~content type). The problem occurs when you need to make same changes to the change form of _every_ object type while not forced to do copy-and-paste of the whole template code (which is totally anti-DRY).\n\nLet's say you would like to override `object_tools` block for every object type. You would probably go this way:\n1. Define custom `[TEMPLATES_DIR]/admin/change_form.html`\n2. Use the original grappeli template as base:\n\n``` python\n{% extends \"admin/change_form.html\" %}\n\n{% block object_tools %}\n    {# my changes - e.g. add new button for all the objects #}\n    {{ block.super }}\n{% endblock %}\n```\n\nThe problem here is the `{% extends \"admin/change_form.html\" %}` statement. This leads to infinite recursion because the template you wanted to extend is resolved as the very same template you try to define! There is no possibility to tell Django it should look for grappelli template as parent to extend.\n. I should mention that same problem applies to Django templates too. Django administration templates aren't designed in very customization-friendly way in my humble opinion. I just thought that we should try to avoid bad design decisions in case of Grappelli (which replaces most of the templates anyway).\n. I do not want to override it completely in most cases. Usually, what i need to do is just some minor changes like add something to `object_tools` block and quite often changing the behavior of submit row too. Unfortunately, current template design doesn't allow me to do this. The only choice left is to copy whole template to mine and alter it to my taste. This is something I don't really like because it is very unfriendly when it comes to upgrade the grappelli version. I would have to check everytime if something didn't changed in original grappelli template and forward the changes to my clone if it did.\n\nI do agree that having _base template for every of those root templates doesn't sound very nice. On the other hand, I am afraid that this is by far the simplest and still transparent solution available. Other ways to solve this would require changes on the level of `ModelAdmin` class - to extend the template selection fallback in some way which would allow for having custom global template base.\n. And yes, you are right that same problem would occur if I tried to extend change_from_base in template called change_form_base. That's why there are two levels of the change form template. In my custom change_form, I am able to extend from change_form_base in the same way you would do it in the grappelli original. This is why I find it quite simple and transparent.\n. In case of Django admin, it probably _wasn't_ bad design decision but simply a decision they made. It's very clear they do not want to expose a lot of admin possibilities/interface to public because they don't think of Django admin as full-featured administration interface at all. It's mostly likely meant only as substitute when real administration is not needed. They do not want to be bound by lot of backwards compatibility they would have to maintain otherwise. I bet this is something you came across too :) I mean things like fixing broken grappelli compatibility everytime new Django version goes out.\n. Ooops, seems like that unresolved pull request stacks up when commiting to forked master. Hopefully, this is something you appreciate - I added localization of datepicker, which solves #5.\n. Ok, understand your point. It's a shame though since I will be probably forced to keep my fork separate (which was not the original intent).\n\nI tried to search for \"jquery-localization\" but didn't find the project. Can you help me find it? I might try to use it instead of Django js catalogue.\n. Well, those locales solve problem with jquery ui original files but it doesn't solve your custom text like \"Done\" button in datepicker. So, in my opinion, this is hardly a way to go.\n\nAbout transifex project... I would have to think about it a little. Dunno how much time eaten up I should expect.\n. ",
    "naftulikay": "See http://docs.jquery.com/UI/Datepicker#option-altFormat\n\nYou're right on that. Maybe it'd be nice to provide a setting for this:\n\n```\nGRAPPELLI_DATE_FORMAT = \"%m/%d%/%y\"\nGRAPPELLI_TIME_FORMAT = \"%H:%M\"\n```\n\nI'm sure that my formats are wrong by `strftime`, but hey. Just an idea/feature request :)\n. Looks like it's working now. Hmm, wonder why that was. Sorry. \n. This is expected functionality. This is what the library is supposed to do. \n. See http://docs.jquery.com/UI/Datepicker#option-altFormat\n\nYou're right on that. Maybe it'd be nice to provide a setting for this:\n\n```\nGRAPPELLI_DATE_FORMAT = \"%m/%d%/%y\"\nGRAPPELLI_TIME_FORMAT = \"%H:%M\"\n```\n\nI'm sure that my formats are wrong by `strftime`, but hey. Just an idea/feature request :)\n. Looks like it's working now. Hmm, wonder why that was. Sorry. \n. This is expected functionality. This is what the library is supposed to do. \n. ",
    "chriscauley": "For anyone who is interested in a quick fix, in your main url file import settings and add these lines:\n\n``` python\nurlpatterns += patterns(\n  'django.views.generic.simple',\n  (r'^static/(?P<path>.*)$', 'redirect_to',{'url': settings.STATIC_URL+'%(path)s'}),\n)\n```\n. For anyone who is interested in a quick fix, in your main url file import settings and add these lines:\n\n``` python\nurlpatterns += patterns(\n  'django.views.generic.simple',\n  (r'^static/(?P<path>.*)$', 'redirect_to',{'url': settings.STATIC_URL+'%(path)s'}),\n)\n```\n. ",
    "gciding": "Is there an ETA on when this patch will be pulled?  The non-relative paths in screen.css cause 404s when you are using collect static and your static URL is not '/static/'\n. Is there an ETA on when this patch will be pulled?  The non-relative paths in screen.css cause 404s when you are using collect static and your static URL is not '/static/'\n. ",
    "iperatoner": "I believe I've encountered the same problem + have uploaded a screenshot: http://drop.immanuel-peratoner.de/filter_horizontal-floatleft.png\n\nIt's not possible to select any of the items except the first one of the first selector. Looks like a clearfix is missing?\n. I'm using Google Chrome 19 on [Crunchbang Linux](http://crunchbang.org/), but it also occurs on Windows7/Chrome19\n. I believe I've encountered the same problem + have uploaded a screenshot: http://drop.immanuel-peratoner.de/filter_horizontal-floatleft.png\n\nIt's not possible to select any of the items except the first one of the first selector. Looks like a clearfix is missing?\n. I'm using Google Chrome 19 on [Crunchbang Linux](http://crunchbang.org/), but it also occurs on Windows7/Chrome19\n. ",
    "semente": "Unfortunately no, but the documentation is understandable using Google Translator.\n\nThere is a django app that might help you: https://bitbucket.org/semente/django-redactor (fork of https://bitbucket.org/gearheart/django-redactor)\n. Documentation link: http://imperavi.com/redactor/docs/\n. don't worry. thanks anyway!\n. Unfortunately no, but the documentation is understandable using Google Translator.\n\nThere is a django app that might help you: https://bitbucket.org/semente/django-redactor (fork of https://bitbucket.org/gearheart/django-redactor)\n. Documentation link: http://imperavi.com/redactor/docs/\n. don't worry. thanks anyway!\n. ",
    "majorz": "It seems they have an English documentation right now. Maybe the request could be reconsidered, since the editor is done quite well with nice functionality and very clean code.\n. You made some good points. I have reconsidered my initial suggestion and now I also think the project should mature more before considering such a step. It has the potential, but it is still not there.\n\nI am okay with using it for my personal things, because the code inside is clean enough and I can quickly do modifications that suit my taste, and I am waiting for launching their plugin support so that I transfer those changes as plugins. Also lxml is such a nice tool for fixing things on the back-end (no matter whether you use this or something else) - it already feels so natural :) This is only to echo what you are talking about.\n\nI am not sure as well whether the license is appropriate. Anyway, it is definitely a project worth watching how it develops.\n. It seems they have an English documentation right now. Maybe the request could be reconsidered, since the editor is done quite well with nice functionality and very clean code.\n. You made some good points. I have reconsidered my initial suggestion and now I also think the project should mature more before considering such a step. It has the potential, but it is still not there.\n\nI am okay with using it for my personal things, because the code inside is clean enough and I can quickly do modifications that suit my taste, and I am waiting for launching their plugin support so that I transfer those changes as plugins. Also lxml is such a nice tool for fixing things on the back-end (no matter whether you use this or something else) - it already feels so natural :) This is only to echo what you are talking about.\n\nI am not sure as well whether the license is appropriate. Anyway, it is definitely a project worth watching how it develops.\n. ",
    "octothorp": "The association still works. When I dug a bit deeper the error seems tied to the jquery-ui auto-complete component. I will raise the issue elsewhere.\n\nThanks\n. I am also having this issue. The problem seems to be with the filter horizontal element being floated. As far as I can figure, _fieldset.module .row_ in components CSS needs to have _clear:both_ applied.\n\nScreenshot: http://dl.dropbox.com/u/21181767/grappelli_bug.png\n\n_Setup_\nDjango 1.3.1\nGrappelli 2.3.8\nChrome 20.0.1132.57 / OS X\n. The association still works. When I dug a bit deeper the error seems tied to the jquery-ui auto-complete component. I will raise the issue elsewhere.\n\nThanks\n. I am also having this issue. The problem seems to be with the filter horizontal element being floated. As far as I can figure, _fieldset.module .row_ in components CSS needs to have _clear:both_ applied.\n\nScreenshot: http://dl.dropbox.com/u/21181767/grappelli_bug.png\n\n_Setup_\nDjango 1.3.1\nGrappelli 2.3.8\nChrome 20.0.1132.57 / OS X\n. ",
    "er34": "It's a buttons on model with attachments admin page. Add another attachment and delete attachment. They don't work with grappelli\n. It's a buttons on model with attachments admin page. Add another attachment and delete attachment. They don't work with grappelli\n. ",
    "ei-grad": "it is in grappelli_2_4 branch\n. it is in grappelli_2_4 branch\n. ",
    "c4traz": "these here for Grappelli DOM Documentation, line 16-20:\nhttps://github.com/sehmaschine/django-grappelli/blob/grappelli_2_4/grappelli/urls.py\n. these here for Grappelli DOM Documentation, line 16-20:\nhttps://github.com/sehmaschine/django-grappelli/blob/grappelli_2_4/grappelli/urls.py\n. ",
    "bufke": "The django-admin-tools menu could be ported to work with Grappelli. \n\nThe widget is suitable, though not my favorite. Specifically I like menu's that disappear after a few seconds of losing mouseover.  Anyway that could always be switched out later.\n\nDo you know if there is any effort to collaborate more with django-admin-tools? My understanding is they aren't compatible as is. Grappelli used the dashboard feature from that project already. There is the now defunct django-grappelli-admin-tools. Whatever the implementable I'm happy to assist in building it.\n. The django-admin-tools menu could be ported to work with Grappelli. \n\nThe widget is suitable, though not my favorite. Specifically I like menu's that disappear after a few seconds of losing mouseover.  Anyway that could always be switched out later.\n\nDo you know if there is any effort to collaborate more with django-admin-tools? My understanding is they aren't compatible as is. Grappelli used the dashboard feature from that project already. There is the now defunct django-grappelli-admin-tools. Whatever the implementable I'm happy to assist in building it.\n. ",
    "witten": "You're right: This is an issue with Grappelli 2.3.8, not 2.4.\n. You're right: This is an issue with Grappelli 2.3.8, not 2.4.\n. ",
    "lauritzen": "The fix doesn't work in Firefox (13.0), content rules are ignored.\n. @parsch thanks!\n. Latest code, yes. django.jQuery is there, but it is as if Django adds its extra functions to the django.jQuery object and Grappelli adds its functions to grp.jQuery and later uses grp.jQuery (passed into the namespaces):\n\n  https://github.com/sehmaschine/django-grappelli/blob/grappelli_2_4/grappelli/templates/admin/change_list.html#L27\n\nThis is just a hunch, it checked the code a bit since I found it weird that I was getting these errors and nobody else seems to.\n. Right, sorry, my wrong. There was a rule in nginx which was overshadowing the /static/admin/ path and instead serving the vanilla Django scripts.\n\nWhile looking through the code I found a double include that you might want to fix:\n\n  https://github.com/sehmaschine/django-grappelli/blob/grappelli_2_4/grappelli/templates/admin/change_list.html#L16\n  https://github.com/sehmaschine/django-grappelli/blob/grappelli_2_4/grappelli/templates/admin/change_list.html#L114\n\nSorry about the trouble.\n. The fix doesn't work in Firefox (13.0), content rules are ignored.\n. @parsch thanks!\n. Latest code, yes. django.jQuery is there, but it is as if Django adds its extra functions to the django.jQuery object and Grappelli adds its functions to grp.jQuery and later uses grp.jQuery (passed into the namespaces):\n\n  https://github.com/sehmaschine/django-grappelli/blob/grappelli_2_4/grappelli/templates/admin/change_list.html#L27\n\nThis is just a hunch, it checked the code a bit since I found it weird that I was getting these errors and nobody else seems to.\n. Right, sorry, my wrong. There was a rule in nginx which was overshadowing the /static/admin/ path and instead serving the vanilla Django scripts.\n\nWhile looking through the code I found a double include that you might want to fix:\n\n  https://github.com/sehmaschine/django-grappelli/blob/grappelli_2_4/grappelli/templates/admin/change_list.html#L16\n  https://github.com/sehmaschine/django-grappelli/blob/grappelli_2_4/grappelli/templates/admin/change_list.html#L114\n\nSorry about the trouble.\n. ",
    "franckbret": "Thx\n. Thx\n. ",
    "charlesmulder": "I'm experiencing the same issue using Django 1.4.5 and Grappelli 2.4.5\n. My bad. Found the issue. When in doubt read the docs. Specifically:\n\nMake sure AppDirectoriesFinder is first with your STATICFILES_FINDERS:\n\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n)\n. I'm experiencing the same issue using Django 1.4.5 and Grappelli 2.4.5\n. My bad. Found the issue. When in doubt read the docs. Specifically:\n\nMake sure AppDirectoriesFinder is first with your STATICFILES_FINDERS:\n\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n)\n. ",
    "mschettler": "I am still having these issues, i'm on latest grapelli (sudo pip install --upgrade django-grappelli)\n\nhttp://i.imgur.com/qd7WO.png\n. I am still having these issues, i'm on latest grapelli (sudo pip install --upgrade django-grappelli)\n\nhttp://i.imgur.com/qd7WO.png\n. ",
    "nemesisdesign": "Pheraphs you guys just forgot to add the folders \"/static/grappelli/css/\" and \"/static/grappelli/img/\" to the 2.4 branch.\n. What about explaining a little bit more what this field is for in that page?\n. thanks, I didn't get it. I thought it was possible to get autocompletition for search results.. lol.\n. This file for example:\nhttps://github.com/sehmaschine/django-grappelli/blob/master/grappelli/static/admin/js/prepopulate.js\nIs a replacement of django's prepopulate.js and when I ran the collectstatic command it overwrote the default prepopulate.js. \n\nI used a symbolic link for convenience in the development evironment.\nIt took me a while to understand that it was not a good idea, so my suggestion is to just add few more words in the docs to warn from this case.\n. What about the explicit is better than implicit guideline of python?\nYou assume django users remember all the django internal details and commands? \n. i'll try to help in my spare time.\n. would you accept a pull request to grappelli to update the current template in https://github.com/sehmaschine/django-grappelli/tree/master/grappelli/templates/smuggler ?\n. I've tested it on 2.6.5, I noticed you just released 2.7.1, I'll test it on that release and come back to you in a couple of hours.\n. It works on 2.7.1 too. I synced the patch branch with the current master.\n. @sehmaschine very welcome  \n. Any issue with merging this?\n. :+1: thanks\n. Pheraphs you guys just forgot to add the folders \"/static/grappelli/css/\" and \"/static/grappelli/img/\" to the 2.4 branch.\n. What about explaining a little bit more what this field is for in that page?\n. thanks, I didn't get it. I thought it was possible to get autocompletition for search results.. lol.\n. This file for example:\nhttps://github.com/sehmaschine/django-grappelli/blob/master/grappelli/static/admin/js/prepopulate.js\nIs a replacement of django's prepopulate.js and when I ran the collectstatic command it overwrote the default prepopulate.js. \n\nI used a symbolic link for convenience in the development evironment.\nIt took me a while to understand that it was not a good idea, so my suggestion is to just add few more words in the docs to warn from this case.\n. What about the explicit is better than implicit guideline of python?\nYou assume django users remember all the django internal details and commands? \n. i'll try to help in my spare time.\n. would you accept a pull request to grappelli to update the current template in https://github.com/sehmaschine/django-grappelli/tree/master/grappelli/templates/smuggler ?\n. I've tested it on 2.6.5, I noticed you just released 2.7.1, I'll test it on that release and come back to you in a couple of hours.\n. It works on 2.7.1 too. I synced the patch branch with the current master.\n. @sehmaschine very welcome  \n. Any issue with merging this?\n. :+1: thanks\n. ",
    "djinox": "no, I'm using 2.3.8 version. How can I switch to 2.4? It is not released yet as I understood\n. okay, I've switched to 2.4.0a version, but the bug still remains..\nI've cleaned my browser's cache and fully removed grappelli dir from my django static files dir and done collectstatic again.\n. after entering admin index page all worked magically well. thanks for the help!\n. no, I'm using 2.3.8 version. How can I switch to 2.4? It is not released yet as I understood\n. okay, I've switched to 2.4.0a version, but the bug still remains..\nI've cleaned my browser's cache and fully removed grappelli dir from my django static files dir and done collectstatic again.\n. after entering admin index page all worked magically well. thanks for the help!\n. ",
    "pnordahl": "I'm using master, is that not best practice?\n. Well that solves that. Thanks!\n. I'm using master, is that not best practice?\n. Well that solves that. Thanks!\n. ",
    "gladson": "Thanks, it worked fine... Pretty cool!!\n. Thanks, it worked fine... Pretty cool!!\n. ",
    "michaelmior": "Anything I can do to lend a hand on this one? I'm building a new project on Django 1.5 and this one is blocking me. I made some simple tweaks so it works for me right now, but I'd love to help get this merged in.\n. @sehmaschine Great. I'll look into this over the next few days. Should hopefully be a quick fix and then add suport up to Django 2.0 (wrt to the url template tag at least).\n. This is made obsolete by #225.\n. Sorry, forgot to make this to the correct branch. Glad this helped though.\n. Anything I can do to lend a hand on this one? I'm building a new project on Django 1.5 and this one is blocking me. I made some simple tweaks so it works for me right now, but I'd love to help get this merged in.\n. @sehmaschine Great. I'll look into this over the next few days. Should hopefully be a quick fix and then add suport up to Django 2.0 (wrt to the url template tag at least).\n. This is made obsolete by #225.\n. Sorry, forgot to make this to the correct branch. Glad this helped though.\n. ",
    "efoken": "How about comma-separated background-images? If you ask me, SVG gradients are crap, users of IE9 should only see  flat colors, no gradients ;-) Besides, CSS and SVG gradients are not supported by Android < 2.3, so using background-color is always a good proposal.\n. Sorry that was an accident :-)\n. Yeah, but with your solution there will be an initial \"?\" in add forms, which should normally be empty ;-)\n. I think returning `[]` is okay. If you take a look a few lines below (around line 62):\n\n``` Python\ndef get(self, request, *args, **kwargs):\n    self.check_user_permission()\n    self.GET = self.request.GET\n\n    if self.request_is_valid():\n        self.get_model()\n        data = self.get_data()\n        if data:\n            return ajax_response(data)\n\n    data = [{\"value\": None, \"label\": \"\"}]\n    return ajax_response(data)\n```\n\nSo as long as `data` is `False` (and `[]` equals `False`) the final output will be `[{\"value\": None, \"label\": \"\"}]`. And appart of that, the `M2MLookup.get_data()` returns `[]` too.\n. How about comma-separated background-images? If you ask me, SVG gradients are crap, users of IE9 should only see  flat colors, no gradients ;-) Besides, CSS and SVG gradients are not supported by Android < 2.3, so using background-color is always a good proposal.\n. Sorry that was an accident :-)\n. Yeah, but with your solution there will be an initial \"?\" in add forms, which should normally be empty ;-)\n. I think returning `[]` is okay. If you take a look a few lines below (around line 62):\n\n``` Python\ndef get(self, request, *args, **kwargs):\n    self.check_user_permission()\n    self.GET = self.request.GET\n\n    if self.request_is_valid():\n        self.get_model()\n        data = self.get_data()\n        if data:\n            return ajax_response(data)\n\n    data = [{\"value\": None, \"label\": \"\"}]\n    return ajax_response(data)\n```\n\nSo as long as `data` is `False` (and `[]` equals `False`) the final output will be `[{\"value\": None, \"label\": \"\"}]`. And appart of that, the `M2MLookup.get_data()` returns `[]` too.\n. ",
    "benjiec": "My bad. I didn't enable the admin for the related model. If you don't enable the admin for the related model, then default Django admin won't create the lookup links to search related model. W/o the lookup links, there are no HTML a tags for get_app_label javascript function. Hence the error.\n. Thanks for that explanation, I moved the import to the top of the file.\n. +1\n. My bad. I didn't enable the admin for the related model. If you don't enable the admin for the related model, then default Django admin won't create the lookup links to search related model. W/o the lookup links, there are no HTML a tags for get_app_label javascript function. Hence the error.\n. Thanks for that explanation, I moved the import to the top of the file.\n. +1\n. ",
    "leszarna": "There should be some check and error or warning so that developers do not loose time investigating.\nMaking additional ModelAdmin helped.\nThe best is that in older version it worked without ModelAdmin for some model.\n. There should be some check and error or warning so that developers do not loose time investigating.\nMaking additional ModelAdmin helped.\nThe best is that in older version it worked without ModelAdmin for some model.\n. ",
    "loscoto": "I have the same problem with exactly the same versions. Also tried TinyMCE 3.5.6 but with no luck. \nIf advlink plugin gets removed, browse button is visible and works, but styles are missing. \n\nEDIT: it is there, just CSS is missing, rendering the browse button invisible\n. I have the same problem with exactly the same versions. Also tried TinyMCE 3.5.6 but with no luck. \nIf advlink plugin gets removed, browse button is visible and works, but styles are missing. \n\nEDIT: it is there, just CSS is missing, rendering the browse button invisible\n. ",
    "lboaretto": "Hi,\n\nI changed the CSS file \"grappelli/stylesheets/partials/custom/tinymce.css\" with your fix and I have the same problem.\n\nWhat was fixed was just the alignment of the button \"advimage\"\n\nHow do I fix \"advlink\"?\n\nThanks.\n. Hi,\n\nThanks. This works!\n\nBut... The alignment is on TOP.\n. Hi,\n\nIm using Firefox 15.0.\n\nThe alignment now on bottom: http://cl.ly/image/311S270t0N2E\n. Hi,\n\nOn firebug, one file is missing: /static/grappelli/images/icons-sc7be296969.png this \n\nThis file has renamed on any css? \n\nI have used collectstatic after I changed all *.css\n. Hi,\n\nThanks! Works perfect!\n. Hi,\n\nI changed the CSS file \"grappelli/stylesheets/partials/custom/tinymce.css\" with your fix and I have the same problem.\n\nWhat was fixed was just the alignment of the button \"advimage\"\n\nHow do I fix \"advlink\"?\n\nThanks.\n. Hi,\n\nThanks. This works!\n\nBut... The alignment is on TOP.\n. Hi,\n\nIm using Firefox 15.0.\n\nThe alignment now on bottom: http://cl.ly/image/311S270t0N2E\n. Hi,\n\nOn firebug, one file is missing: /static/grappelli/images/icons-sc7be296969.png this \n\nThis file has renamed on any css? \n\nI have used collectstatic after I changed all *.css\n. Hi,\n\nThanks! Works perfect!\n. ",
    "papalagichen": "I just start investigating FeinCMS's features and am not familiar with it.\nYes, as you thought, there are some discussions on compatibility issues of FeinCMS's tree editor and rich text editor.\nFor now, I only needs to integrate tree editor into django-grappelli.\n\nThanks a lot!\n. I just start investigating FeinCMS's features and am not familiar with it.\nYes, as you thought, there are some discussions on compatibility issues of FeinCMS's tree editor and rich text editor.\nFor now, I only needs to integrate tree editor into django-grappelli.\n\nThanks a lot!\n. ",
    "epicserve": "@sehmaschine, @parsch and @vam, thoughts? I would think this would be something simple enough that you could add it in.\n. I've found a bug and I'm working on a fix. It looks as if the `update_lookup` function is placing an extra placeholder tag every time you change the content type select.\n. I was wrong about the bug. The bug was caused by some of my own javascript for the site I was working on. I updated this pull request so that the m2m related_lookup_fields now use jQuery's .html() method for labels. I also wrapped the joining comma in a span tag so you can change it with CSS if you want to join your label list with something else. This pull request should be ready to merge.\n. So you want me to add in the changes from cf92910?\n. @sehmaschine, so is there anything more you need me to do before this code gets merged in?\n. Sweet, thanks!\n. Strange I can see it. Anyway, try this, https://www.evernote.com/shard/s7/sh/c45c2107-1779-49d8-82ab-2b4b00471eb0/67ded37fc271746784798725e0c29dc7\n. LOL, I hardly think that's it since I'm signed in as the superuser. I'll dig in and see if I can give some more details.\n. For some reason the variable `child.change_url` on line 6 of `grappelli/dashboard/templates/grappelli/dashboard/modules/model_list.html` is an empty string.\n. Fixed it, https://github.com/epicserve/django-grappelli/commit/0f08c0046bc7a9f5639298fd28ec17645177b329\n. @sehmaschine Let me know if you need anything else to get this bug fixed. \n. @funkybob, did you see my code. It fixes the issue.\n. I'll just use my fork until it's patched. I'm guessing @sehmaschine could release 2.4.1.1.\n. @sehmaschine, I see that you fixed it, how do I tell what branch your fix is on. I click on the link to your code but I'm not sure how I tell from there what branch that code is one. Also, are you going to make another release with this fix?\n. @sehmaschine cool, thanks!\n. @albertyw Ooops, sorry about that ... not sure how I missed the other pull request.\n. In your test, is your `TestModel.related_label` something that will return a longish string (e.g. \"Brent O'Connor (brento)\")?\n. Because it works fine for me too if the `related_label` returns a string <= 7 characters.\n. Chrome 38.0.2125.122 on OS X Yosemite (10.10)\n. @parsch and @sehmaschine \n\n**First DOM Element**\nCSS path: #user_form > div > fieldset:nth-child(3) > div.grp-row.grp-cells-1.editable_users > div > div.c-2 > div > ul > li.grp-repr > a\nHTML:\n\n```\n<a class=\"grp-m2m-remove\" href=\"javascript://\">first_name last_name (username)</a>\n```\n\n**Second DOM Element**\nCSS path: #user_form > div > fieldset:nth-child(3) > div.grp-row.grp-cells-1.editable_users > div > div.c-2 > div > div.grp-placeholder-related-m2m > span\nHTML:\n\n```\n<div class=\"grp-placeholder-related-m2m\">\n    <span class=\"grp-placeholder-label\">first_name last_name (username)</span>\n</div>\n```\n. @sehmaschine removing those fields from `MyAdmin.related_lookup_fields` fixed it. Sorry for the hassle. I guess I need to read the docs more closely.\n. Never mind. It's probably something silly I've done. I looked at the console log and when I click on the icons as well as the \"Add another extension unit director\" link, I get \"Uncaught ReferenceError: tinyMCE is not defined\" in the console.\n. Yep, that was it. I had a custom `admin/edit_inline/stacked.html` template that had a bug in the JS. It's fixed now and all is happy. Sorry for the extra issue noise.\n. @sehmaschine I've tested out 'dev/2.7.x', it seems to get rid of most of the RemovedInDjango19Warning(s). However I was still getting the \"Model class django.contrib.contenttypes.models.ContentType ...\" warning and discovered that moving `'grappelli.dashboard'` in my installed apps from the beginning to the end fixed that warning.\n\nI also noticed that in grappelli's templates the tags url, firstof and cycle are loaded from the future, which generates RemovedInDjango19Warning(s). I'm not sure how you want to handle that because if removed, it would break things for older versions of Django.\n. @sehmaschine Want me to remove them and submit a PR?\n. @sehmaschine Can you tell me why you closed this without merging in the changes?\n. @sehmaschine, @parsch and @vam, thoughts? I would think this would be something simple enough that you could add it in.\n. I've found a bug and I'm working on a fix. It looks as if the `update_lookup` function is placing an extra placeholder tag every time you change the content type select.\n. I was wrong about the bug. The bug was caused by some of my own javascript for the site I was working on. I updated this pull request so that the m2m related_lookup_fields now use jQuery's .html() method for labels. I also wrapped the joining comma in a span tag so you can change it with CSS if you want to join your label list with something else. This pull request should be ready to merge.\n. So you want me to add in the changes from cf92910?\n. @sehmaschine, so is there anything more you need me to do before this code gets merged in?\n. Sweet, thanks!\n. Strange I can see it. Anyway, try this, https://www.evernote.com/shard/s7/sh/c45c2107-1779-49d8-82ab-2b4b00471eb0/67ded37fc271746784798725e0c29dc7\n. LOL, I hardly think that's it since I'm signed in as the superuser. I'll dig in and see if I can give some more details.\n. For some reason the variable `child.change_url` on line 6 of `grappelli/dashboard/templates/grappelli/dashboard/modules/model_list.html` is an empty string.\n. Fixed it, https://github.com/epicserve/django-grappelli/commit/0f08c0046bc7a9f5639298fd28ec17645177b329\n. @sehmaschine Let me know if you need anything else to get this bug fixed. \n. @funkybob, did you see my code. It fixes the issue.\n. I'll just use my fork until it's patched. I'm guessing @sehmaschine could release 2.4.1.1.\n. @sehmaschine, I see that you fixed it, how do I tell what branch your fix is on. I click on the link to your code but I'm not sure how I tell from there what branch that code is one. Also, are you going to make another release with this fix?\n. @sehmaschine cool, thanks!\n. @albertyw Ooops, sorry about that ... not sure how I missed the other pull request.\n. In your test, is your `TestModel.related_label` something that will return a longish string (e.g. \"Brent O'Connor (brento)\")?\n. Because it works fine for me too if the `related_label` returns a string <= 7 characters.\n. Chrome 38.0.2125.122 on OS X Yosemite (10.10)\n. @parsch and @sehmaschine \n\n**First DOM Element**\nCSS path: #user_form > div > fieldset:nth-child(3) > div.grp-row.grp-cells-1.editable_users > div > div.c-2 > div > ul > li.grp-repr > a\nHTML:\n\n```\n<a class=\"grp-m2m-remove\" href=\"javascript://\">first_name last_name (username)</a>\n```\n\n**Second DOM Element**\nCSS path: #user_form > div > fieldset:nth-child(3) > div.grp-row.grp-cells-1.editable_users > div > div.c-2 > div > div.grp-placeholder-related-m2m > span\nHTML:\n\n```\n<div class=\"grp-placeholder-related-m2m\">\n    <span class=\"grp-placeholder-label\">first_name last_name (username)</span>\n</div>\n```\n. @sehmaschine removing those fields from `MyAdmin.related_lookup_fields` fixed it. Sorry for the hassle. I guess I need to read the docs more closely.\n. Never mind. It's probably something silly I've done. I looked at the console log and when I click on the icons as well as the \"Add another extension unit director\" link, I get \"Uncaught ReferenceError: tinyMCE is not defined\" in the console.\n. Yep, that was it. I had a custom `admin/edit_inline/stacked.html` template that had a bug in the JS. It's fixed now and all is happy. Sorry for the extra issue noise.\n. @sehmaschine I've tested out 'dev/2.7.x', it seems to get rid of most of the RemovedInDjango19Warning(s). However I was still getting the \"Model class django.contrib.contenttypes.models.ContentType ...\" warning and discovered that moving `'grappelli.dashboard'` in my installed apps from the beginning to the end fixed that warning.\n\nI also noticed that in grappelli's templates the tags url, firstof and cycle are loaded from the future, which generates RemovedInDjango19Warning(s). I'm not sure how you want to handle that because if removed, it would break things for older versions of Django.\n. @sehmaschine Want me to remove them and submit a PR?\n. @sehmaschine Can you tell me why you closed this without merging in the changes?\n. ",
    "digicase": "Thanks Patrick. I'm using grappelli 2.4.0 and filebrowser 3.5.0.\n. Thanks Patrick. I'm using grappelli 2.4.0 and filebrowser 3.5.0.\n. ",
    "pedrospdc": "http://cl.ly/image/0k3Y1I3P2E3G\n\nThis is an \"add foreignkey item\" popup. You need to scroll it because the save buttons seems to be out of the popup \"overflow\" (I'm not sure how to express this)\n. I managed to see the save button when installing from the stable_2.4 branch, but the master neither the pip install works. On the stable_2.4 I can see it, but the body size  is still set to 960px, making the inputs too large.  \n\nThanks a lot for the fast reply, Patrick. You've made a great work on grappelli!  \n\n## \n\nAtenciosamente,\nPedro Sampaio Palhares de Campos\n\nOn Monday, 10 de September de 2012 at 15:39, Patrick Kranzlmueller wrote:\n\n> alright, now I see (thanks for the clarification).\n> I\u00b4m using chrome 21 as well, but I\u00b4m able to see the save-button (no need for scrolling). that being said, the window is too small (about 20 to 40px, I guess). we\u00b4ll take a look at this issue ...\n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/sehmaschine/django-grappelli/issues/200#issuecomment-8433462).  \n. I've made some research when I posted this and it seemed like Grappelli /\nFile Browser couldn't handle custom static urls or static root directories\n(I can't remember which). I'm not sure if this has been fixed.\n\n2012/11/22 Simon Meers notifications@github.com\n\n> it happened to me when using a custom runserver command which didn't\n> inherit from the staticfiles version. I didn't get time to investigate why\n> that made it serve the wrong files, since I'd have expected\n> staticfiles_urlpatterns to still behave correctly. Using the\n> staticfiles-overridden version of runserver corrected the issue for me\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/201#issuecomment-10627306.\n\n## \n\nAtenciosamente,\nPedro Sampaio Palhares de Campos\npedrospdc@gmail.com\n. I might be confusing this with a filebrowser issue, but it was trying to\ninsert a /static/ url (or something like that) when my admin's static url\nwas different (static-admin).\n\n2012/11/22 Patrick Kranzlmueller notifications@github.com\n\n> @pedrospdc https://github.com/pedrospdc what do you mean with \"couldn\u00b4t\n> handle\"?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/201#issuecomment-10633861.\n\n## \n\nAtenciosamente,\nPedro Sampaio Palhares de Campos\npedrospdc@gmail.com\n. I do believe this is possible by extending the admin classes, but I might be wrong. >> Click the quote button bellow, something has gone wrong\nOn the mentioned ticket a guy has uploaded a diff file in which he modifies two methods and adds another two to one admin class. Isn't it possible to create or extend that class without modifying Django?  \n\n> On Tuesday, 2 de October de 2012 at 12:05, Patrick Kranzlmueller wrote:\n> \n> if django doesn\u00b4t support this, how could we add it (without using the python\u2013part of djangos admin interface)?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/sehmaschine/django-grappelli/issues/213#issuecomment-9074107).  \n. As I have a project depending on this feature, I'd create the patch myself and send them - do you have any idea if the Django patch development is closed to a group of developers?\n. http://cl.ly/image/0k3Y1I3P2E3G\n\nThis is an \"add foreignkey item\" popup. You need to scroll it because the save buttons seems to be out of the popup \"overflow\" (I'm not sure how to express this)\n. I managed to see the save button when installing from the stable_2.4 branch, but the master neither the pip install works. On the stable_2.4 I can see it, but the body size  is still set to 960px, making the inputs too large.  \n\nThanks a lot for the fast reply, Patrick. You've made a great work on grappelli!  \n\n## \n\nAtenciosamente,\nPedro Sampaio Palhares de Campos\n\nOn Monday, 10 de September de 2012 at 15:39, Patrick Kranzlmueller wrote:\n\n> alright, now I see (thanks for the clarification).\n> I\u00b4m using chrome 21 as well, but I\u00b4m able to see the save-button (no need for scrolling). that being said, the window is too small (about 20 to 40px, I guess). we\u00b4ll take a look at this issue ...\n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/sehmaschine/django-grappelli/issues/200#issuecomment-8433462).  \n. I've made some research when I posted this and it seemed like Grappelli /\nFile Browser couldn't handle custom static urls or static root directories\n(I can't remember which). I'm not sure if this has been fixed.\n\n2012/11/22 Simon Meers notifications@github.com\n\n> it happened to me when using a custom runserver command which didn't\n> inherit from the staticfiles version. I didn't get time to investigate why\n> that made it serve the wrong files, since I'd have expected\n> staticfiles_urlpatterns to still behave correctly. Using the\n> staticfiles-overridden version of runserver corrected the issue for me\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/201#issuecomment-10627306.\n\n## \n\nAtenciosamente,\nPedro Sampaio Palhares de Campos\npedrospdc@gmail.com\n. I might be confusing this with a filebrowser issue, but it was trying to\ninsert a /static/ url (or something like that) when my admin's static url\nwas different (static-admin).\n\n2012/11/22 Patrick Kranzlmueller notifications@github.com\n\n> @pedrospdc https://github.com/pedrospdc what do you mean with \"couldn\u00b4t\n> handle\"?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/201#issuecomment-10633861.\n\n## \n\nAtenciosamente,\nPedro Sampaio Palhares de Campos\npedrospdc@gmail.com\n. I do believe this is possible by extending the admin classes, but I might be wrong. >> Click the quote button bellow, something has gone wrong\nOn the mentioned ticket a guy has uploaded a diff file in which he modifies two methods and adds another two to one admin class. Isn't it possible to create or extend that class without modifying Django?  \n\n> On Tuesday, 2 de October de 2012 at 12:05, Patrick Kranzlmueller wrote:\n> \n> if django doesn\u00b4t support this, how could we add it (without using the python\u2013part of djangos admin interface)?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/sehmaschine/django-grappelli/issues/213#issuecomment-9074107).  \n. As I have a project depending on this feature, I'd create the patch myself and send them - do you have any idea if the Django patch development is closed to a group of developers?\n. ",
    "DrMeers": "This can occur if staticfiles happens to collect/serve the contrib.admin version of actions(.min).js rather than the grappelli version.\n. it happened to me when using a custom runserver command which didn't inherit from the staticfiles version. I didn't get time to investigate why that made it serve the wrong files, since I'd have expected staticfiles_urlpatterns to still behave correctly. Using the staticfiles-overridden version of runserver corrected the issue for me\n. Things also can behave very stranglely when you upgrade/downgrade past https://github.com/sehmaschine/django-grappelli/commit/c7fc29f86 -- the static files change location, but collectstatic seems to not notice and does not overwrite the previously copied version. runserver behaviour may differ.\n\nEncountering this because of a client who requires IE8 compatibility, so we needed to downgrade to 2.3.5 ... only to find that Django 1.4-compatibility only landed in 2.4.0.\n. @mrbichel yes, I found the same as mentioned above.\n@sehmaschine do you have any interest in making Grappelli 2.4.3+ IE8 compatible? We're going to have to either help to do that, or ditch Grappelli for this particular project which involves many corporate clients who are stuck on older versions of IE\n. OK, the IE8 issues were outlined by @chrisoates above; I'll ask him to open a ticket with more details. The IE8 screenshots I was shown looked completely unusable.\n. This can occur if staticfiles happens to collect/serve the contrib.admin version of actions(.min).js rather than the grappelli version.\n. it happened to me when using a custom runserver command which didn't inherit from the staticfiles version. I didn't get time to investigate why that made it serve the wrong files, since I'd have expected staticfiles_urlpatterns to still behave correctly. Using the staticfiles-overridden version of runserver corrected the issue for me\n. Things also can behave very stranglely when you upgrade/downgrade past https://github.com/sehmaschine/django-grappelli/commit/c7fc29f86 -- the static files change location, but collectstatic seems to not notice and does not overwrite the previously copied version. runserver behaviour may differ.\n\nEncountering this because of a client who requires IE8 compatibility, so we needed to downgrade to 2.3.5 ... only to find that Django 1.4-compatibility only landed in 2.4.0.\n. @mrbichel yes, I found the same as mentioned above.\n@sehmaschine do you have any interest in making Grappelli 2.4.3+ IE8 compatible? We're going to have to either help to do that, or ditch Grappelli for this particular project which involves many corporate clients who are stuck on older versions of IE\n. OK, the IE8 issues were outlined by @chrisoates above; I'll ask him to open a ticket with more details. The IE8 screenshots I was shown looked completely unusable.\n. ",
    "chrisoates": "Hi @sehmaschine, I'm working with @DrMeers on this and suggested using 2.3.5 for better IE8 compatibility (certainly from a HTML + CSS point of view) because the templates, as far as I've seen, don't use any HMTL5 elements so style correctly in IE by default and the button, header and footer backgrounds fallback to a plain color if the browser doesn't support linear-gradient in CSS.\n. Hi @sehmaschine, I'm working with @DrMeers on this and suggested using 2.3.5 for better IE8 compatibility (certainly from a HTML + CSS point of view) because the templates, as far as I've seen, don't use any HMTL5 elements so style correctly in IE by default and the button, header and footer backgrounds fallback to a plain color if the browser doesn't support linear-gradient in CSS.\n. ",
    "mrbichel": "Seems this problem has do to with the collectstatic function not overwriting files correctly after upgrading Grappelli. A simple workaround is to purge your STATIC_ROOT completely and then regenerate with collectstatic.\n\nI am running Django 1.4.2 and Grappelli 2.4.3 and run into the issue after upgrading from Grappelli 2.4.\n. Seems this problem has do to with the collectstatic function not overwriting files correctly after upgrading Grappelli. A simple workaround is to purge your STATIC_ROOT completely and then regenerate with collectstatic.\n\nI am running Django 1.4.2 and Grappelli 2.4.3 and run into the issue after upgrading from Grappelli 2.4.\n. ",
    "dustinwhittle": "The only real issue is url handling in templates. If I submit a pull request that adds compatibility will you merge?\n. I will try to get to it in the next two-three weeks. For me it is not a priority, but I would like to use grappelli moving forward.\n. The only real issue is url handling in templates. If I submit a pull request that adds compatibility will you merge?\n. I will try to get to it in the next two-three weeks. For me it is not a priority, but I would like to use grappelli moving forward.\n. ",
    "meronym": "The url issue has been also discussed in [this pull request](https://github.com/sehmaschine/django-grappelli/pull/182). It seems that minor updates are needed, I would totally support including them once they're tested and backwards-compatible, since Django 1.5 is gaining some momentum.\n. The url issue has been also discussed in [this pull request](https://github.com/sehmaschine/django-grappelli/pull/182). It seems that minor updates are needed, I would totally support including them once they're tested and backwards-compatible, since Django 1.5 is gaining some momentum.\n. ",
    "frankoid": "It looks like 1.5 is supported now - https://django-grappelli.readthedocs.org/en/2.4.4/ says \"Grappelli 2.4.4 requires Django 1.4/1.5\"\n. It looks like 1.5 is supported now - https://django-grappelli.readthedocs.org/en/2.4.4/ says \"Grappelli 2.4.4 requires Django 1.4/1.5\"\n. ",
    "ZlobnyiSerg": "The bug is really on my side, sorry, closing.\n. Oh, I've missed this update from 2.4.1. Everything seems to be ok with latest version. Closing this request.\n. The bug is really on my side, sorry, closing.\n. Oh, I've missed this update from 2.4.1. Everything seems to be ok with latest version. Closing this request.\n. ",
    "meric": "Hmm, must be a cache problem. It worked with a new environment. \n. Short story: I added a timezone field to the admin's datetime field and it gets removed by the label removing code.\n\nLonger version:\nCurrently the code here tries to detect the label before the text field and removes the label:\n\n```\n text = text.replace(/<br>.*: /, \"<br>\");\n```\n\nIf I add an additional field, as I did in the screenshot above, it'll get removed by the code because \".*\" matches any character, including HTML markup, e.g. \"<input>\". This means the code prevents customizing the DateTimeField with, for example, an extra \"timezone\" field, because it'll get removed by the input code.\n. Hmm, must be a cache problem. It worked with a new environment. \n. Short story: I added a timezone field to the admin's datetime field and it gets removed by the label removing code.\n\nLonger version:\nCurrently the code here tries to detect the label before the text field and removes the label:\n\n```\n text = text.replace(/<br>.*: /, \"<br>\");\n```\n\nIf I add an additional field, as I did in the screenshot above, it'll get removed by the code because \".*\" matches any character, including HTML markup, e.g. \"<input>\". This means the code prevents customizing the DateTimeField with, for example, an extra \"timezone\" field, because it'll get removed by the input code.\n. ",
    "regisf": "I think the main issue is my laptop which is a slow laptop, even if its heart is a Core i5m @2.5 Ghz. But as a WebDev I have to think to End Users (Keyboard/Chair interfaces as we say in France). \n\nI try to change few routines from each to a for loop. The results are impressive.  I'm using the 2.3 Version. First I need to switch to the 2.4 version and start the job. \n. I do the job and well... How to say... It was a misconception of mine... Not a Grappelli problem.=\n\nI'm very confuse :|\n\nI asked to Django and Grappelli do display more than 2154 elements in 3  <select> on each row, with 100 rows so the browser was overloaded (215,400 <option> to compute and to display). The database too.\n\nPlease close the ticket. Sorry for the noise. \n\nAt last now I know how to avoid slow this.each in a jQuery plugin :)\n. I think the main issue is my laptop which is a slow laptop, even if its heart is a Core i5m @2.5 Ghz. But as a WebDev I have to think to End Users (Keyboard/Chair interfaces as we say in France). \n\nI try to change few routines from each to a for loop. The results are impressive.  I'm using the 2.3 Version. First I need to switch to the 2.4 version and start the job. \n. I do the job and well... How to say... It was a misconception of mine... Not a Grappelli problem.=\n\nI'm very confuse :|\n\nI asked to Django and Grappelli do display more than 2154 elements in 3  <select> on each row, with 100 rows so the browser was overloaded (215,400 <option> to compute and to display). The database too.\n\nPlease close the ticket. Sorry for the noise. \n\nAt last now I know how to avoid slow this.each in a jQuery plugin :)\n. ",
    "scottyob": "that solved it.\n. that solved it.\n. ",
    "pauloxnet": "I'll try it, thx\n. you're right. I submitted feature request on Django ticket system: ![#19755](https://code.djangoproject.com/ticket/19755)\n. Can you review my pull request #475 \n. I'm sorry but I have no time at moment for testing but I used my patched branch in my current project with success.\n. I'm going to add test next days.\n. I looked for add test about my patch but I found test is already present in `test_related.py` :\n\n```\n        # cusotm queryset (Editor)\n        # FIXME: this should fail, because the custom admin queryset\n        # limits the entry to the logged in superuser\n        self.client.login(username=\"Editor001\", password=\"editor001\")\n        response = self.client.get(\"%s?object_id=1&app_label=%s&model_name=%s\" % (reverse(\"grp_related_lookup\"), \"grappelli\", \"entry\"))\n        self.assertEqual(response.status_code, 200)\n        self.assertEqual(response.content, json.dumps([{\"value\": \"1\", \"label\": \"Entry Superuser\"}]))\n```\n\nI tryed to fix the test to add user in the request, I found only this documentation:\nhttps://docs.djangoproject.com/en/1.6/topics/testing/advanced/\n\nHowever my patch works well and pass the test, can you merge it ?\n. I think the test just do the job and we already have modeladmin `EntryOptions` with custom `get_queryset` in `tests/admin.py` .\n\nI didn't try my pull-request if models are registered with several admin sites, in your opinion my pull-request is all wrong or you can adapt it if models are registered with several admin sites ?\n. I'm sorry but I tried to write a test for custom quesyset but django test RequestFactory does not include request.user and I don't have another time to try it.\n\nHowever if my pull-request does not work with several admin sites I hope someone will sent a better pull-request for it soon.\n. I created a fresh virtualenv and I installed django 1.6.0 and grappelli 2.5.0.\n\nThe test found 5 errors:\nhttp://dpaste.com/1490133/\n. I tried to check the reason but I can't find it, but I exectude only standard Django installation steps and standard Grappelli installation steps.\n\nThis the step to reproduce my above issue in a fresh virtualenv:\n\n```\npip install django==1.6.0\npip install django-grappelli==2.5.0\ndjango-admin.py startproject mysite\ncd mysite\npython manage.py syncdb\nnano mysite/settings.py\nnano mysite/urls.py\nmkdir static\ncd static\npython ../manage.py collectstatic\npython manage.py runserver\npython manage.py test grappelli.tests\n```\n\nThis is settings.py file:\n\n```\nimport os\nBASE_DIR = os.path.dirname(os.path.dirname(__file__))\nSECRET_KEY = '-aa7)#0ps4m9et6=opb6c=@znyy5d^7udnzjowpy!#n_nq&-n!'\nDEBUG = True\nTEMPLATE_DEBUG = True\nALLOWED_HOSTS = []\nINSTALLED_APPS = (\n    'grappelli',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n)\nMIDDLEWARE_CLASSES = (\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n)\nROOT_URLCONF = 'mysite.urls'\nWSGI_APPLICATION = 'mysite.wsgi.application'\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\nSTATIC_URL = '/static/'\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n)\nGRAPPELLI_SWITCH_USER = True\n```\n\nand the urls.py file:\n\n```\nfrom django.conf.urls import patterns, include, url\nfrom django.contrib import admin\nadmin.autodiscover()\nurlpatterns = patterns('',,\n    url(r'^grappelli/', include('grappelli.urls')),\n    url(r'^admin/', include(admin.site.urls)),\n)\n```\n. Setting `GRAPPELLI_SWITCH_USER = False` I can use django with grappelli without problems but this's the result of `python manage.py test grappelli.tests` :\nhttp://dpaste.com/1490279/\n. Thanks @hone I modified my settings.py adding this variable:\n\n```\nTEMPLATE_CONTEXT_PROCESSORS = (\n    \"django.contrib.auth.context_processors.auth\",\n    \"django.core.context_processors.debug\",\n    \"django.core.context_processors.i18n\",\n    \"django.core.context_processors.media\",\n    \"django.core.context_processors.static\",\n    \"django.core.context_processors.tz\",\n    \"django.contrib.messages.context_processors.messages\",\n    \"django.core.context_processors.request\"\n)\n```\n\nNow tests and django works well form me, but I think we had to add this step into \"Quick Start Guide\" [1] for standard Django 1.6 installation.\n\n[1] http://django-grappelli.readthedocs.org/en/latest/quickstart.html#setup\n. I supposed that with bootstrap-sass project you can add bootstrap template to grappelli using sass*.\n- I don't know nothing about compass/sass\n. Ok for not using bootstrap but I think adding responsive/adaptative feature to grappelli would be a \"killer feature\"!\n. I would able to define a filter rule on autocomplete field.\nI hope example below can help me to explain:\n\n```\nclass Project(models.Model):\n    title = models.CharField()\n    active = models.BooleanField()\n```\n\nWhen a user type first characters of project's title, it only show title of projects with the field active is true.\n. Pull requests for italian translation of jquery datepicker was not yet merged!\nCan someone merge it please ?\n. I'll try it, thx\n. you're right. I submitted feature request on Django ticket system: ![#19755](https://code.djangoproject.com/ticket/19755)\n. Can you review my pull request #475 \n. I'm sorry but I have no time at moment for testing but I used my patched branch in my current project with success.\n. I'm going to add test next days.\n. I looked for add test about my patch but I found test is already present in `test_related.py` :\n\n```\n        # cusotm queryset (Editor)\n        # FIXME: this should fail, because the custom admin queryset\n        # limits the entry to the logged in superuser\n        self.client.login(username=\"Editor001\", password=\"editor001\")\n        response = self.client.get(\"%s?object_id=1&app_label=%s&model_name=%s\" % (reverse(\"grp_related_lookup\"), \"grappelli\", \"entry\"))\n        self.assertEqual(response.status_code, 200)\n        self.assertEqual(response.content, json.dumps([{\"value\": \"1\", \"label\": \"Entry Superuser\"}]))\n```\n\nI tryed to fix the test to add user in the request, I found only this documentation:\nhttps://docs.djangoproject.com/en/1.6/topics/testing/advanced/\n\nHowever my patch works well and pass the test, can you merge it ?\n. I think the test just do the job and we already have modeladmin `EntryOptions` with custom `get_queryset` in `tests/admin.py` .\n\nI didn't try my pull-request if models are registered with several admin sites, in your opinion my pull-request is all wrong or you can adapt it if models are registered with several admin sites ?\n. I'm sorry but I tried to write a test for custom quesyset but django test RequestFactory does not include request.user and I don't have another time to try it.\n\nHowever if my pull-request does not work with several admin sites I hope someone will sent a better pull-request for it soon.\n. I created a fresh virtualenv and I installed django 1.6.0 and grappelli 2.5.0.\n\nThe test found 5 errors:\nhttp://dpaste.com/1490133/\n. I tried to check the reason but I can't find it, but I exectude only standard Django installation steps and standard Grappelli installation steps.\n\nThis the step to reproduce my above issue in a fresh virtualenv:\n\n```\npip install django==1.6.0\npip install django-grappelli==2.5.0\ndjango-admin.py startproject mysite\ncd mysite\npython manage.py syncdb\nnano mysite/settings.py\nnano mysite/urls.py\nmkdir static\ncd static\npython ../manage.py collectstatic\npython manage.py runserver\npython manage.py test grappelli.tests\n```\n\nThis is settings.py file:\n\n```\nimport os\nBASE_DIR = os.path.dirname(os.path.dirname(__file__))\nSECRET_KEY = '-aa7)#0ps4m9et6=opb6c=@znyy5d^7udnzjowpy!#n_nq&-n!'\nDEBUG = True\nTEMPLATE_DEBUG = True\nALLOWED_HOSTS = []\nINSTALLED_APPS = (\n    'grappelli',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n)\nMIDDLEWARE_CLASSES = (\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n)\nROOT_URLCONF = 'mysite.urls'\nWSGI_APPLICATION = 'mysite.wsgi.application'\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\nSTATIC_URL = '/static/'\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n)\nGRAPPELLI_SWITCH_USER = True\n```\n\nand the urls.py file:\n\n```\nfrom django.conf.urls import patterns, include, url\nfrom django.contrib import admin\nadmin.autodiscover()\nurlpatterns = patterns('',,\n    url(r'^grappelli/', include('grappelli.urls')),\n    url(r'^admin/', include(admin.site.urls)),\n)\n```\n. Setting `GRAPPELLI_SWITCH_USER = False` I can use django with grappelli without problems but this's the result of `python manage.py test grappelli.tests` :\nhttp://dpaste.com/1490279/\n. Thanks @hone I modified my settings.py adding this variable:\n\n```\nTEMPLATE_CONTEXT_PROCESSORS = (\n    \"django.contrib.auth.context_processors.auth\",\n    \"django.core.context_processors.debug\",\n    \"django.core.context_processors.i18n\",\n    \"django.core.context_processors.media\",\n    \"django.core.context_processors.static\",\n    \"django.core.context_processors.tz\",\n    \"django.contrib.messages.context_processors.messages\",\n    \"django.core.context_processors.request\"\n)\n```\n\nNow tests and django works well form me, but I think we had to add this step into \"Quick Start Guide\" [1] for standard Django 1.6 installation.\n\n[1] http://django-grappelli.readthedocs.org/en/latest/quickstart.html#setup\n. I supposed that with bootstrap-sass project you can add bootstrap template to grappelli using sass*.\n- I don't know nothing about compass/sass\n. Ok for not using bootstrap but I think adding responsive/adaptative feature to grappelli would be a \"killer feature\"!\n. I would able to define a filter rule on autocomplete field.\nI hope example below can help me to explain:\n\n```\nclass Project(models.Model):\n    title = models.CharField()\n    active = models.BooleanField()\n```\n\nWhen a user type first characters of project's title, it only show title of projects with the field active is true.\n. Pull requests for italian translation of jquery datepicker was not yet merged!\nCan someone merge it please ?\n. ",
    "karansag": "You're right--it must have been a cache issue, because it's gone now. Strange thing is that I'm using a development server (Werkzeug) and didn't set any cache headers. I've never had a problem with Chrome auto-caching something before. Is something different about Grappelli's dynamically generated content? If so, could we put some kind of notice in for others? It looks like it's happened before (see Issue #206, mentioned above).\n. You're right--it must have been a cache issue, because it's gone now. Strange thing is that I'm using a development server (Werkzeug) and didn't set any cache headers. I've never had a problem with Chrome auto-caching something before. Is something different about Grappelli's dynamically generated content? If so, could we put some kind of notice in for others? It looks like it's happened before (see Issue #206, mentioned above).\n. ",
    "philwo": "I stumbled upon this, too and it doesn't look like a cache issue to me. Even if I delete the cache in Chrome and Firefox and revisit the admin site, the error doesn't disappear. Also, restarting the Django server (I'm using gunicorn) doesn't help. I didn't do any configuration of grappelli yet, just installed it via pip (django-grappelli==2.4.2) and included it in the INSTALLED_APPS in settings.py (before django.contrib.admin).\n\nThe problem, I think, is, that the failing call to \".actions()\" uses grp.jQuery, but .action() is only defined in django.jQuery. In grappelli.min.js you seem to try to set django.jQuery to grp.jQuery, so that they're the same, but because the grappelli scripts are loaded before the Django admin JavaScripts, that doesn't work.\n\nThis is what the HTML code of a Django admin list overview page looks like in my case:\n\n``` html\n<!-- jQuery, jQuery-UI -->\n<script src=\"/static/grappelli/jquery/jquery-1.7.2.min.js\" type=\"text/javascript\"></script>\n<script src=\"/static/grappelli/jquery/ui/js/jquery-ui-1.8.18.custom.min.js\" type=\"text/javascript\"></script>\n\n<!-- Grappelli Minified -->\n<script src=\"/static/grappelli/js/grappelli.min.js\" type=\"text/javascript\"></script>\n\n<script type=\"text/javascript\" src=\"/static/admin/js/core.js\"></script>\n<script type=\"text/javascript\" src=\"/static/admin/js/admin/RelatedObjectLookups.js\"></script>\n<script type=\"text/javascript\" src=\"/static/admin/js/jquery.js\"></script>\n<script type=\"text/javascript\" src=\"/static/admin/js/jquery.init.js\"></script>\n<script type=\"text/javascript\" src=\"/static/admin/js/actions.js\"></script>\n\n<script type=\"text/javascript\" src=\"/admin/jsi18n/\"></script>\n\n<script type=\"text/javascript\" charset=\"utf-8\">\n    (function($) {\n        $(document).ready(function() {\n            $(\"tr input.action-select\").actions();\n        });\n    })(grp.jQuery);\n</script>\n```\n\nThis may well be a configuration error on my side, but to me it doesn't look like a caching issue...\n. OK, I think I found the reason and it looks like a Django bug: When you use the static file development view of Django to serve your static files, Django doesn't serve grappelli's overridden jquery.js and jquery.init.js, but instead the original files from the Django admin, which causes this error. :( Now I'm serving my static files with nginx even during development and it works fine.\n. @sehmaschine Yes, that was the case, the features relying on JavaScript didn't work. I'll try to find the cause for this problem on my configuration in the next days and will get back to you.\n. This is extremely strange.\n\nI'm able to reproduce it when I run the Django devserver using \"./manage.py runserver\" or gunicorn using \"./manage.py run_gunicorn\" - then Django seems to override my whole static files config with defaults (even if I configure it totally wrong on purpose and specify non-existing classes in settings.STATICFILES_FINDERS it will still serve static files).\n\nIf I run gunicorn using \"gunicorn myapp.wsgi:application\", Django uses my settings correctly and I have to add the usual \"urlpatterns += staticfiles_urlpatterns()\" to my urls.py to get static files working. Then the override works and grappelli's JS files get served correctly instead of the original Django admin files.\n\nI'm going to create a minimal example and if I'm successful, I'll report this as an issue on code.djangoproject.com.\n. I'm sorry, I don't understand what you mean by saying that the models are sorted \"based on their position\"? How do you specify this position? I'm using the ModelList like this: https://gist.github.com/4134338\n\nIf I don't use my class SortedModelList but the original ModelList instead, the models are shifted randomly on every reload of the Django Admin main page.\n\nI'm able to reproduce this on CentOS 6.3, but currently fail to do so on my development machine running Mac OS X 10.8.2 ...\n. I stumbled upon this, too and it doesn't look like a cache issue to me. Even if I delete the cache in Chrome and Firefox and revisit the admin site, the error doesn't disappear. Also, restarting the Django server (I'm using gunicorn) doesn't help. I didn't do any configuration of grappelli yet, just installed it via pip (django-grappelli==2.4.2) and included it in the INSTALLED_APPS in settings.py (before django.contrib.admin).\n\nThe problem, I think, is, that the failing call to \".actions()\" uses grp.jQuery, but .action() is only defined in django.jQuery. In grappelli.min.js you seem to try to set django.jQuery to grp.jQuery, so that they're the same, but because the grappelli scripts are loaded before the Django admin JavaScripts, that doesn't work.\n\nThis is what the HTML code of a Django admin list overview page looks like in my case:\n\n``` html\n<!-- jQuery, jQuery-UI -->\n<script src=\"/static/grappelli/jquery/jquery-1.7.2.min.js\" type=\"text/javascript\"></script>\n<script src=\"/static/grappelli/jquery/ui/js/jquery-ui-1.8.18.custom.min.js\" type=\"text/javascript\"></script>\n\n<!-- Grappelli Minified -->\n<script src=\"/static/grappelli/js/grappelli.min.js\" type=\"text/javascript\"></script>\n\n<script type=\"text/javascript\" src=\"/static/admin/js/core.js\"></script>\n<script type=\"text/javascript\" src=\"/static/admin/js/admin/RelatedObjectLookups.js\"></script>\n<script type=\"text/javascript\" src=\"/static/admin/js/jquery.js\"></script>\n<script type=\"text/javascript\" src=\"/static/admin/js/jquery.init.js\"></script>\n<script type=\"text/javascript\" src=\"/static/admin/js/actions.js\"></script>\n\n<script type=\"text/javascript\" src=\"/admin/jsi18n/\"></script>\n\n<script type=\"text/javascript\" charset=\"utf-8\">\n    (function($) {\n        $(document).ready(function() {\n            $(\"tr input.action-select\").actions();\n        });\n    })(grp.jQuery);\n</script>\n```\n\nThis may well be a configuration error on my side, but to me it doesn't look like a caching issue...\n. OK, I think I found the reason and it looks like a Django bug: When you use the static file development view of Django to serve your static files, Django doesn't serve grappelli's overridden jquery.js and jquery.init.js, but instead the original files from the Django admin, which causes this error. :( Now I'm serving my static files with nginx even during development and it works fine.\n. @sehmaschine Yes, that was the case, the features relying on JavaScript didn't work. I'll try to find the cause for this problem on my configuration in the next days and will get back to you.\n. This is extremely strange.\n\nI'm able to reproduce it when I run the Django devserver using \"./manage.py runserver\" or gunicorn using \"./manage.py run_gunicorn\" - then Django seems to override my whole static files config with defaults (even if I configure it totally wrong on purpose and specify non-existing classes in settings.STATICFILES_FINDERS it will still serve static files).\n\nIf I run gunicorn using \"gunicorn myapp.wsgi:application\", Django uses my settings correctly and I have to add the usual \"urlpatterns += staticfiles_urlpatterns()\" to my urls.py to get static files working. Then the override works and grappelli's JS files get served correctly instead of the original Django admin files.\n\nI'm going to create a minimal example and if I'm successful, I'll report this as an issue on code.djangoproject.com.\n. I'm sorry, I don't understand what you mean by saying that the models are sorted \"based on their position\"? How do you specify this position? I'm using the ModelList like this: https://gist.github.com/4134338\n\nIf I don't use my class SortedModelList but the original ModelList instead, the models are shifted randomly on every reload of the Django Admin main page.\n\nI'm able to reproduce this on CentOS 6.3, but currently fail to do so on my development machine running Mac OS X 10.8.2 ...\n. ",
    "npardington": "I'm having this same problem. I'm running Django 1.4.1 and have grappelli in installed apps before contrib.admin. \n\n```\n<script type=\"text/javascript\" charset=\"utf-8\">\n        (function($) {\n            $(document).ready(function() {\n                $(\"tr input.action-select\").actions();\n            });\n        })(grp.jQuery);\n</script>\n```\n\nWhen I edit change_list.html to pass in django.jQuery the filter list works as you'd expect. Not a great fix but hope if provides some insight.\n\n```\n<script type=\"text/javascript\" charset=\"utf-8\">\n        (function($) {\n            $(document).ready(function() {\n                $(\"tr input.action-select\").actions();\n            });\n        })(django.jQuery);\n</script>\n```\n. Now I realize how this works. Fairly new to Github, forgive the duplicate issue.\n. I'm having this same problem. I'm running Django 1.4.1 and have grappelli in installed apps before contrib.admin. \n\n```\n<script type=\"text/javascript\" charset=\"utf-8\">\n        (function($) {\n            $(document).ready(function() {\n                $(\"tr input.action-select\").actions();\n            });\n        })(grp.jQuery);\n</script>\n```\n\nWhen I edit change_list.html to pass in django.jQuery the filter list works as you'd expect. Not a great fix but hope if provides some insight.\n\n```\n<script type=\"text/javascript\" charset=\"utf-8\">\n        (function($) {\n            $(document).ready(function() {\n                $(\"tr input.action-select\").actions();\n            });\n        })(django.jQuery);\n</script>\n```\n. Now I realize how this works. Fairly new to Github, forgive the duplicate issue.\n. ",
    "maffacow": "I am also having this issue running Django 1.4.2 and Grappelli 2.4.3 on a fresh install of Ubuntu 10.04\n\n<code>$(\"tr input.action-select\").actions is not a function</code>\n\nis the error being shown with firebug.\n\nThe filter doesn't work and I cant select items for deletion.  \n\nI have tried using the domain name directly and also with runserver.\n\nAt first I was getting the error with both but changing \n\n<code>STATIC_URL = 'http://somedomain.com/static/'</code>\n\nto simply\n\n<code>STATIC_URL = '/static/'</code>\n\nfixed the issue when using runserver but the problem still exists when using the domain name.\n\nI have compared the html output code of both and they are identical.\n\nIt all works flawlessly on my dev server and I would just like to say a big thanks for a fantastic product.  Fingers crossed a fix can be found for this.\n\nAny further info I can supply you with please just ask.\n. Has there been any progress with this issue?\n\nI have two sites to put live for clients and I will need to do some recoding if I have to revert back to the Django templates.\n. Since the website is not yet live, I can give you ssh access if you require? Or is there any info I can provide you with?\n. Ok, I finally got this working on my system.\n\nSehmaschine, is correct in my instance, it wasnt actually a bug but more to do with my settings.\n\nI was loading the static files from the dist-packages using apache in my sites-available file.\n\n<code>\nAlias /static/grappelli /usr/local/lib/python2.6/dist-packages/grappelli/static/grappelli\nAlias /static /usr/local/lib/python2.6/dist-packages/Django-1.4-py2.6.egg/django/contrib/admin/static\n</code>\n\nThis was stupid I know, but the way I was shown when first introduced to Django\n\nAll I needed to have was \n<code>\nAlias /static /srv/www/mywebsite.com/public_html/static\n</code>\n\nand in my settings.py\n<code>\nSTATIC_ROOT = '/srv/www/mywebsite.com/public_html/static/'\nSTATIC_URL = '/static/'\n</code>\n\nI hope this may be of some help to others and once again, thank you for such a great script\n. I can verify this also with grp 2.8.1 and Django 1.9.2\nThanks\n. Hi there and thanks for looking into this.\n\nOk, so as basic test in a Django 1.7 running Grappelli==2.6.5\n`GRAPPELLI_ADMIN_TITLE = '<a href=\"#\">This is a hyperlink</a>'`\n\nproduces the following. It always has back since Django 1.4 which is where I started using your Grappelli Module (fantastic by the way)\n\n![screen shot 2016-02-26 at 17 23 07](https://cloud.githubusercontent.com/assets/2813210/13359861/15d5cf32-dcae-11e5-9ba3-111ae1b8e053.png)\n\nThe next screenshot is Django 1.9 with the very latest Grappelli\n\n![screen shot 2016-02-26 at 17 27 40](https://cloud.githubusercontent.com/assets/2813210/13359889/46166bca-dcae-11e5-9529-ebc6ab0cde1f.png)\n\nThis has always allowed me to add a little custom branding with my contact details etc\n\nKeep up the good work\n. Maybe it is Django itself which has changed.\n\nI found a work around using:\n\nfrom django.utils.safestring import mark_safe\nGRAPPELLI_ADMIN_TITLE = mark_safe(myHTML)\n\nOn Fri, Mar 4, 2016 at 12:17 PM, Patrick Kranzlmueller <\nnotifications@github.com> wrote:\n\n> see\n> https://github.com/sehmaschine/django-grappelli/blob/stable/2.6.x/grappelli/templates/admin/base.html#L78\n> \n> are you sure that you did not use a custom template?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/issues/732#issuecomment-192258177\n> .\n. I am also having this issue running Django 1.4.2 and Grappelli 2.4.3 on a fresh install of Ubuntu 10.04\n\n<code>$(\"tr input.action-select\").actions is not a function</code>\n\nis the error being shown with firebug.\n\nThe filter doesn't work and I cant select items for deletion.  \n\nI have tried using the domain name directly and also with runserver.\n\nAt first I was getting the error with both but changing \n\n<code>STATIC_URL = 'http://somedomain.com/static/'</code>\n\nto simply\n\n<code>STATIC_URL = '/static/'</code>\n\nfixed the issue when using runserver but the problem still exists when using the domain name.\n\nI have compared the html output code of both and they are identical.\n\nIt all works flawlessly on my dev server and I would just like to say a big thanks for a fantastic product.  Fingers crossed a fix can be found for this.\n\nAny further info I can supply you with please just ask.\n. Has there been any progress with this issue?\n\nI have two sites to put live for clients and I will need to do some recoding if I have to revert back to the Django templates.\n. Since the website is not yet live, I can give you ssh access if you require? Or is there any info I can provide you with?\n. Ok, I finally got this working on my system.\n\nSehmaschine, is correct in my instance, it wasnt actually a bug but more to do with my settings.\n\nI was loading the static files from the dist-packages using apache in my sites-available file.\n\n<code>\nAlias /static/grappelli /usr/local/lib/python2.6/dist-packages/grappelli/static/grappelli\nAlias /static /usr/local/lib/python2.6/dist-packages/Django-1.4-py2.6.egg/django/contrib/admin/static\n</code>\n\nThis was stupid I know, but the way I was shown when first introduced to Django\n\nAll I needed to have was \n<code>\nAlias /static /srv/www/mywebsite.com/public_html/static\n</code>\n\nand in my settings.py\n<code>\nSTATIC_ROOT = '/srv/www/mywebsite.com/public_html/static/'\nSTATIC_URL = '/static/'\n</code>\n\nI hope this may be of some help to others and once again, thank you for such a great script\n. I can verify this also with grp 2.8.1 and Django 1.9.2\nThanks\n. Hi there and thanks for looking into this.\n\nOk, so as basic test in a Django 1.7 running Grappelli==2.6.5\n`GRAPPELLI_ADMIN_TITLE = '<a href=\"#\">This is a hyperlink</a>'`\n\nproduces the following. It always has back since Django 1.4 which is where I started using your Grappelli Module (fantastic by the way)\n\n![screen shot 2016-02-26 at 17 23 07](https://cloud.githubusercontent.com/assets/2813210/13359861/15d5cf32-dcae-11e5-9ba3-111ae1b8e053.png)\n\nThe next screenshot is Django 1.9 with the very latest Grappelli\n\n![screen shot 2016-02-26 at 17 27 40](https://cloud.githubusercontent.com/assets/2813210/13359889/46166bca-dcae-11e5-9529-ebc6ab0cde1f.png)\n\nThis has always allowed me to add a little custom branding with my contact details etc\n\nKeep up the good work\n. Maybe it is Django itself which has changed.\n\nI found a work around using:\n\nfrom django.utils.safestring import mark_safe\nGRAPPELLI_ADMIN_TITLE = mark_safe(myHTML)\n\nOn Fri, Mar 4, 2016 at 12:17 PM, Patrick Kranzlmueller <\nnotifications@github.com> wrote:\n\n> see\n> https://github.com/sehmaschine/django-grappelli/blob/stable/2.6.x/grappelli/templates/admin/base.html#L78\n> \n> are you sure that you did not use a custom template?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/issues/732#issuecomment-192258177\n> .\n. ",
    "tangent": "I am having the same/similar issue, site works fine on devserver but JS loading seems to be not working properly on production server (nginix)\n\nDjango's default jquery libs are being loaded rather than the grappelli overrides\n\nThe only place grappelli javascripts are working is on the main admin/ page, ie the click() event is handled for the user options dropdown when you click on the username in the top menu.. but only if you are on the main admin dashboard.  (because django does not load its jquery libraries on the main admin dashboard)\n\nDjango 1.4.2 with Grappelli 2.4.3, no caching enabled, everything appears to be configured properly.. have numerous Django 1.3 sites with grappelli on similar production setup with no issues.\n. OK I figured out my issue also, it was indeed a caching/configuration error.\n\nCaching was disabled for HTTP but enabled for SSL /static alias.\n. I am having the same/similar issue, site works fine on devserver but JS loading seems to be not working properly on production server (nginix)\n\nDjango's default jquery libs are being loaded rather than the grappelli overrides\n\nThe only place grappelli javascripts are working is on the main admin/ page, ie the click() event is handled for the user options dropdown when you click on the username in the top menu.. but only if you are on the main admin dashboard.  (because django does not load its jquery libraries on the main admin dashboard)\n\nDjango 1.4.2 with Grappelli 2.4.3, no caching enabled, everything appears to be configured properly.. have numerous Django 1.3 sites with grappelli on similar production setup with no issues.\n. OK I figured out my issue also, it was indeed a caching/configuration error.\n\nCaching was disabled for HTTP but enabled for SSL /static alias.\n. ",
    "mborho": "I had a similar configuration like maffacow. \n\nUsing the collectstatic command and removing the alias for the admin files in the server-configuration fixed the issue for me.\n. No,  I guess not. model_list seems to get already the translated names.\n. I've added it directly to the **init**.py of the main app (django 1.4), but I guess it can be added elsewhere too.\n. Sorry, I was confused :(\n\nNot in the standard django dashboard it works, but in the default grappelli dashboard:\nhttps://github.com/sehmaschine/django-grappelli/blob/master/grappelli/templates/admin/index.html#L33\n\nSo adding trans templatetag in app_list for child.title in the dashboard module should align it with /grappelli/templates/admin/index.html ?\n. The  model names are getting already translated (via their verbose names). But the app titles in the custom dashboard not, since there is nothing like verbose_name or something similar for apps.\n\nI have this for example this in my custom dashboard: \n\n``` python\n        self.children.append(modules.AppList(\n            _('content'),\n            collapsible=True,\n            column=1,\n            css_classes=('collapse closed',),\n            exclude=('django.contrib.*','myproject.appname.*','othermodule.*'),\n        ))\n```\n\nSo when there is for example an app named \"customsettings\", the app title is displayed as \"Customsettings\", but gets not translated. Even when there is a rule for \"customsettings\".\n\n![grapelli1](https://f.cloud.github.com/assets/58875/86221/4986f264-6490-11e2-9d26-ae61e3a34cff.png)\n\nBut when I add a translation in the .po file for \"Customsettings\" and add {% trans child.title %} to the app_list.html I can also translate the app-title in my custom dashboard. \n\n![grapelli2](https://f.cloud.github.com/assets/58875/86223/4e9656aa-6490-11e2-837b-ab9400afd6d4.png)\n\nDamn, this is  hard to explain... :)\n. No problem! Thanks for Grappelli!\n. I had a similar configuration like maffacow. \n\nUsing the collectstatic command and removing the alias for the admin files in the server-configuration fixed the issue for me.\n. No,  I guess not. model_list seems to get already the translated names.\n. I've added it directly to the **init**.py of the main app (django 1.4), but I guess it can be added elsewhere too.\n. Sorry, I was confused :(\n\nNot in the standard django dashboard it works, but in the default grappelli dashboard:\nhttps://github.com/sehmaschine/django-grappelli/blob/master/grappelli/templates/admin/index.html#L33\n\nSo adding trans templatetag in app_list for child.title in the dashboard module should align it with /grappelli/templates/admin/index.html ?\n. The  model names are getting already translated (via their verbose names). But the app titles in the custom dashboard not, since there is nothing like verbose_name or something similar for apps.\n\nI have this for example this in my custom dashboard: \n\n``` python\n        self.children.append(modules.AppList(\n            _('content'),\n            collapsible=True,\n            column=1,\n            css_classes=('collapse closed',),\n            exclude=('django.contrib.*','myproject.appname.*','othermodule.*'),\n        ))\n```\n\nSo when there is for example an app named \"customsettings\", the app title is displayed as \"Customsettings\", but gets not translated. Even when there is a rule for \"customsettings\".\n\n![grapelli1](https://f.cloud.github.com/assets/58875/86221/4986f264-6490-11e2-9d26-ae61e3a34cff.png)\n\nBut when I add a translation in the .po file for \"Customsettings\" and add {% trans child.title %} to the app_list.html I can also translate the app-title in my custom dashboard. \n\n![grapelli2](https://f.cloud.github.com/assets/58875/86223/4e9656aa-6490-11e2-837b-ab9400afd6d4.png)\n\nDamn, this is  hard to explain... :)\n. No problem! Thanks for Grappelli!\n. ",
    "pombredanne": "I got the same problem: clearing the browser cache solved it\n. @sehmaschine what speedy a reactivity! :bow: Thanks!\n. I got the same problem: clearing the browser cache solved it\n. @sehmaschine what speedy a reactivity! :bow: Thanks!\n. ",
    "skndn60": "I have the same problem when deploying to Google App Engine. Works just fine on my local machine. From the source of the generated page I see the following entries for various JS libraries when running on GAE:\n\njquery-1.7.2.min.js from /static/grappelli\njquery-ui-1.8.18.custom.min.js from /static/grappelli\n\ngrappelli.min.js from /static/grappelli\n\ncore.js from /static/admin\nRelatedObjectLookups.js from /static/admin\njquery.js from /static/admin\njquery.init.js from /static/admin\nactions.js from /static/admin\n\nI've cleared the browser cache, ran collectstatic and have setup the static urls as per Google's docs. When I check these entries against a locally generated page, the JS entries match...\n\nUnfortunately no solution yet. By the way, thanks for an awesome script...\n. I have the same problem when deploying to Google App Engine. Works just fine on my local machine. From the source of the generated page I see the following entries for various JS libraries when running on GAE:\n\njquery-1.7.2.min.js from /static/grappelli\njquery-ui-1.8.18.custom.min.js from /static/grappelli\n\ngrappelli.min.js from /static/grappelli\n\ncore.js from /static/admin\nRelatedObjectLookups.js from /static/admin\njquery.js from /static/admin\njquery.init.js from /static/admin\nactions.js from /static/admin\n\nI've cleared the browser cache, ran collectstatic and have setup the static urls as per Google's docs. When I check these entries against a locally generated page, the JS entries match...\n\nUnfortunately no solution yet. By the way, thanks for an awesome script...\n. ",
    "ulmus": "I had this issue, solved it by ensuring that the `AppDirectoriesFinder` is first among the `STATICFILES_FINDERS`, like this:\n\n```\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n )\n```\n. I had this issue, solved it by ensuring that the `AppDirectoriesFinder` is first among the `STATICFILES_FINDERS`, like this:\n\n```\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n )\n```\n. ",
    "idboehman": "I had this issue today as well. I ensured that `AppDirectoriesFinder` was first in `STATICFILES_FINDERS` as well as making sure my `STATIC_ROOT` , `STATICFILES_DIRS` , and `STATIC_URL` were all set correctly. \n\nThe solution to my issue ended up being moving `GRAPPELLI_INDEX_DASHBOARD` from my `local.py` settings file and into my `base.py` settings file above all of the above declarations. \n. I had this issue today as well. I ensured that `AppDirectoriesFinder` was first in `STATICFILES_FINDERS` as well as making sure my `STATIC_ROOT` , `STATICFILES_DIRS` , and `STATIC_URL` were all set correctly. \n\nThe solution to my issue ended up being moving `GRAPPELLI_INDEX_DASHBOARD` from my `local.py` settings file and into my `base.py` settings file above all of the above declarations. \n. ",
    "zzart": "The way i did this was to create simlink to grappelli/static/admin (which has the js files in question) in my staticfiles folder. STATICFILES_FINDERS didn't help. \n. The way i did this was to create simlink to grappelli/static/admin (which has the js files in question) in my staticfiles folder. STATICFILES_FINDERS didn't help. \n. ",
    "tufelkinder": "This is what solved it for me as well, zzart.\n\nJust guessing, but the issue appears to be that following the install instructions, django's built-in jquery library is loading after the grappelli jquery-1.7.2. Creating the link as you describe results in effectively loading the jquery library twice, but at least it's the same library.\n. This is what solved it for me as well, zzart.\n\nJust guessing, but the issue appears to be that following the install instructions, django's built-in jquery library is loading after the grappelli jquery-1.7.2. Creating the link as you describe results in effectively loading the jquery library twice, but at least it's the same library.\n. ",
    "alberdonpi": "In two months, I have had this issue 3 times, and every time I used a different way to solve it. \n\nBut I have found that if you follow the @ulmus comment about AppDirectoriesFinder, and inside your static folder, you replace your admin > js folder by your grapelli > static > admin > js folder, the problem is solved!\n. In two months, I have had this issue 3 times, and every time I used a different way to solve it. \n\nBut I have found that if you follow the @ulmus comment about AppDirectoriesFinder, and inside your static folder, you replace your admin > js folder by your grapelli > static > admin > js folder, the problem is solved!\n. ",
    "im-n1": "Hi guys, I was facing this issue and the core of this tricky issue is that jquery is there twice. U can see that when u look into html source in ur browser.\n\nI didnt wanna use symlink, so I've added this to nginx site conf:\n\n```\nlocation = /static/admin/js/jquery.js {\n    alias /dev/null;\n}\n```\n. @sehmaschine my solution wasn't 100%. I've started using collectstatic and it works now.\n. Hi guys, I was facing this issue and the core of this tricky issue is that jquery is there twice. U can see that when u look into html source in ur browser.\n\nI didnt wanna use symlink, so I've added this to nginx site conf:\n\n```\nlocation = /static/admin/js/jquery.js {\n    alias /dev/null;\n}\n```\n. @sehmaschine my solution wasn't 100%. I've started using collectstatic and it works now.\n. ",
    "haganf": "So I had this exact same problem... I took over a project that at some point was started pre 1.3 Django (currently 1.4). Turns out I had been using the old 'staticfiles' app and not 'django.contrib.staticfiles' and wasn't getting everything with collectstatic.  After migrating over to django's static, collectstatic worked and no more admin issues!\n. So I had this exact same problem... I took over a project that at some point was started pre 1.3 Django (currently 1.4). Turns out I had been using the old 'staticfiles' app and not 'django.contrib.staticfiles' and wasn't getting everything with collectstatic.  After migrating over to django's static, collectstatic worked and no more admin issues!\n. ",
    "etratch": "my problem was solved as follows::\n\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n )\n. my problem was solved as follows::\n\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n )\n. ",
    "sujeethmenon": "Hi i having one issue .. I have created a js file for numeric key pad and wen i call from my application , Its not calling . i get error as \"[ object object] has no method. Any help will be appreciated. Thanks in advance\n. Hi i having one issue .. I have created a js file for numeric key pad and wen i call from my application , Its not calling . i get error as \"[ object object] has no method. Any help will be appreciated. Thanks in advance\n. ",
    "restarian": "Found it! Make sure to remove the old grappelli and admin files in your static root directory and then do a manage.py collectstatic again after this is changed.\n\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n}\nNow it stated to work without that error. \n. Found it! Make sure to remove the old grappelli and admin files in your static root directory and then do a manage.py collectstatic again after this is changed.\n\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n}\nNow it stated to work without that error. \n. ",
    "squarepegsys": "I had the same problem with Filters using gunicorn and ngnix. I had  `AppDirectoriesFinder` before `FileSystemFinder` in `STATICFILES_FINDERS` but it still didn't work. What did work is making sure that when the grappelli is using the admin/js/, that is is forcing it to use grappelli's admin javascripts, not the admin apps.\n\nThis is what my ngnix config looks like now:\n\n```\n   location /static/admin/js/ {\n       root /usr/local/lib/python2.7/dist-packages/grappelli/;\n }\nlocation /static/admin/media/ {\n       root /usr/local/lib/python2.7/dist-packages/django/contrib/admin/static/admin/;\n }\n\n location /static/grappelli/ {\n      root /usr/local/lib/python2.7/dist-packages/grappelli/;\n    }\n\n location /static/ {\n    # if asset versioning is used\n    if ($query_string) {\n        expires max;\n      }\n }\n```\n. I had the same problem with Filters using gunicorn and ngnix. I had  `AppDirectoriesFinder` before `FileSystemFinder` in `STATICFILES_FINDERS` but it still didn't work. What did work is making sure that when the grappelli is using the admin/js/, that is is forcing it to use grappelli's admin javascripts, not the admin apps.\n\nThis is what my ngnix config looks like now:\n\n```\n   location /static/admin/js/ {\n       root /usr/local/lib/python2.7/dist-packages/grappelli/;\n }\nlocation /static/admin/media/ {\n       root /usr/local/lib/python2.7/dist-packages/django/contrib/admin/static/admin/;\n }\n\n location /static/grappelli/ {\n      root /usr/local/lib/python2.7/dist-packages/grappelli/;\n    }\n\n location /static/ {\n    # if asset versioning is used\n    if ($query_string) {\n        expires max;\n      }\n }\n```\n. ",
    "brenouchoa": "@squarepegsys thanks, your solution also solved my problem...\n. think is time to create a branch with new version for the new bugs found with django 1.6...\n. https://github.com/CrossWaterBridge/django-grappelli-autocomplete-fk-edit-link\nseams that have accomplished what you guys and i need.\n. @squarepegsys thanks, your solution also solved my problem...\n. think is time to create a branch with new version for the new bugs found with django 1.6...\n. https://github.com/CrossWaterBridge/django-grappelli-autocomplete-fk-edit-link\nseams that have accomplished what you guys and i need.\n. ",
    "ecederstrand": "With nginx, you should really just have one `location /static/` pointing to your static project folder and then let `./manage.py collectstatic` DTRT, respecting the collection order specified in `settings.py`. That way, your nginx and runserver environment will be much more comparable.\n. marcoooo,\n\nIs `grappelli` first in `INSTALLED_APPS`?\n\n```\nINSTALLED_APPS = (\n    'grappelli',\n    'django.contrib.admin',\n)\n```\n\nDid you run `collectstatic`? What is the output? Which filesystem path does it collect to? How are your static files served? Which filesystem path are they served from? Have you emptied your browser cache and any server caches for your static files?\n. With nginx, you should really just have one `location /static/` pointing to your static project folder and then let `./manage.py collectstatic` DTRT, respecting the collection order specified in `settings.py`. That way, your nginx and runserver environment will be much more comparable.\n. marcoooo,\n\nIs `grappelli` first in `INSTALLED_APPS`?\n\n```\nINSTALLED_APPS = (\n    'grappelli',\n    'django.contrib.admin',\n)\n```\n\nDid you run `collectstatic`? What is the output? Which filesystem path does it collect to? How are your static files served? Which filesystem path are they served from? Have you emptied your browser cache and any server caches for your static files?\n. ",
    "sdillinger": "Same problem that's been reported for 2+ years.   Tried all reasonable solutions.  No luck.  \n. Same problem that's been reported for 2+ years.   Tried all reasonable solutions.  No luck.  \n. ",
    "ajostergaard": "It seems to me that the same symptom has multiple root causes depending on the environment.\n\nIn my case, 'runserver', the solution was to reverse STATICFILES_FINDERS as suggested above.\n. ACTUALLY... In my case STATICFILES_FINDERS only partially solved the problem and, in fact, was a red herring.\n\nWhat solved it for me was making sure grappelli loads before debug_toolbar:\n\nINSTALLED_APPS = (\n    ...\n    'grappelli',\n    'debug_toolbar',\n    ...\n)\n. It seems to me that the same symptom has multiple root causes depending on the environment.\n\nIn my case, 'runserver', the solution was to reverse STATICFILES_FINDERS as suggested above.\n. ACTUALLY... In my case STATICFILES_FINDERS only partially solved the problem and, in fact, was a red herring.\n\nWhat solved it for me was making sure grappelli loads before debug_toolbar:\n\nINSTALLED_APPS = (\n    ...\n    'grappelli',\n    'debug_toolbar',\n    ...\n)\n. ",
    "myii": "Have just encountered this problem for the second time so exerted some effort looking into it.  The following discussion is based upon my setup but it wouldn't surprise me in the slightest if others are in exactly the same boat.\n\n>  sehmaschine commented on 11 Aug\n> @sdillinger well, haven't been able to reproduce this for 2+ years. I'm pretty sure this is not related to grappelli but your server/django setup.\n\n@sehmaschine: I'm with you 100% -- in my case at least, it had nothing to do with Grappelli itself.  As for reproducing (and fixing) the error -- perhaps I can help you with that...\n\n---\n\n##### TL;DR\n\nA simple, working solution to this problem.  First up, two important references:\n\nhttp://django-grappelli.readthedocs.org/en/latest/quickstart.html#setup:\n\n> Open `settings.py` and add `grappelli` to your `INSTALLED_APPS` (before `django.contrib.admin`):\n> \n> ```\n> INSTALLED_APPS = (\n>     'grappelli',\n>     'django.contrib.admin',\n> )\n> ```\n\nhttps://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/#django-admin-option---clear:\n\n> `--clear`\n> \n>    Clear the existing files before trying to copy or link the original file.\n\nA caveat:\n- Using `--clear` is like a sledgehammer; it will clear all static files that aren't needed by the current project\n- So if you are using the same `STATIC_ROOT` for more than one project, then better to leave this method -- there's a more nuanced, less destructive method outlined [further down](#fixing_the_error)\n- Essentially, **don't use this for anything other than testing**, unless you're comfortable to rebuild `STATIC_ROOT`\n\nNow the steps:\n1. Ensure you have `'grappelli'` before `'django.contrib.admin'` in `INSTALLED_APPS`, as shown in the reference above\n2. Run `python manage.py collectstatic --noinput --clear`\n3. Test from the browser, with full reload of the page with the filter button on it -- error should be resolved\n\n---\n\n##### Basic overview\n\n###### Intro\n\nWith the steps shown below, I've been able to reproduce and fix the error 100% consistently, using the following setup:\n1. Django 1.8\n2. `DEBUG = False`\n3. Nginx + Gunicorn via. Unix socket\n\nIn any case, as long as the static files are being accessed at `STATIC_ROOT`, the following steps should work.\n\n###### Reproducing the error\n\nIn order to reproduce the error, note that I am about to _contradict the official instructions as shown above_, because that is one of the ways that this problem could have occurred.\n- Switch the ordering in `INSTALLED_APPS`, i.e.:\n\n```\nINSTALLED_APPS = (\n    'django.contrib.admin',\n    'grappelli',\n)\n```\n- Delete (or at least rename) the `static/admin/js` directory\n- Run `python manage.py collectstatic --noinput`, output should show `django/contrib/admin` in the path, such as:\n\n```\n$ python manage.py collectstatic --noinput\nCopying '.../django/contrib/admin/static/admin/js/inlines.js'\nCopying '.../django/contrib/admin/static/admin/js/collapse.js'\nCopying '.../django/contrib/admin/static/admin/js/related-widget-wrapper.js'\nCopying '.../django/contrib/admin/static/admin/js/calendar.js'\nCopying '.../django/contrib/admin/static/admin/js/collapse.min.js'\nCopying '.../django/contrib/admin/static/admin/js/urlify.js'\nCopying '.../django/contrib/admin/static/admin/js/core.js'\nCopying '.../django/contrib/admin/static/admin/js/jquery.js'\nCopying '.../django/contrib/admin/static/admin/js/actions.min.js'\nCopying '.../django/contrib/admin/static/admin/js/jquery.init.js'\nCopying '.../django/contrib/admin/static/admin/js/inlines.min.js'\nCopying '.../django/contrib/admin/static/admin/js/actions.js'\nCopying '.../django/contrib/admin/static/admin/js/jquery.min.js'\nCopying '.../django/contrib/admin/static/admin/js/timeparse.js'\nCopying '.../django/contrib/admin/static/admin/js/SelectBox.js'\nCopying '.../django/contrib/admin/static/admin/js/prepopulate.min.js'\nCopying '.../django/contrib/admin/static/admin/js/SelectFilter2.js'\nCopying '.../django/contrib/admin/static/admin/js/LICENSE-JQUERY.txt'\nCopying '.../django/contrib/admin/static/admin/js/prepopulate.js'\nCopying '.../django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js'\nCopying '.../django/contrib/admin/static/admin/js/admin/DateTimeShortcuts.js'\n\n21 static files copied to '.../static', 593 unmodified.\n```\n- Test from the browser, with full reload of the page with the filter button on it -- error should be manifest\n\n<a name=\"fixing_the_error\"></a>\n\n###### Fixing the error\n\nThe resolution steps are almost the same:\n- Correct the ordering in `INSTALLED_APPS`, i.e.:\n\n```\nINSTALLED_APPS = (\n    'grappelli',\n    'django.contrib.admin',\n)\n```\n- Delete (or at least rename) the `static/admin/js` directory\n- Run `python manage.py collectstatic --noinput`, output should show `grappelli` in the path, such as:\n\n```\n$ python manage.py collectstatic --noinput\nCopying '.../grappelli/static/admin/js/SelectFilter2.js'\nCopying '.../grappelli/static/admin/js/collapse.min.js'\nCopying '.../grappelli/static/admin/js/actions.min.js'\nCopying '.../grappelli/static/admin/js/inlines.js'\nCopying '.../grappelli/static/admin/js/urlify.js'\nCopying '.../grappelli/static/admin/js/related-widget-wrapper.js'\nCopying '.../grappelli/static/admin/js/collapse.js'\nCopying '.../grappelli/static/admin/js/jquery.js'\nCopying '.../grappelli/static/admin/js/jquery.min.js'\nCopying '.../grappelli/static/admin/js/calendar.js'\nCopying '.../grappelli/static/admin/js/prepopulate.js'\nCopying '.../grappelli/static/admin/js/prepopulate.min.js'\nCopying '.../grappelli/static/admin/js/actions.js'\nCopying '.../grappelli/static/admin/js/core.js'\nCopying '.../grappelli/static/admin/js/LICENSE-JQUERY.txt'\nCopying '.../grappelli/static/admin/js/timeparse.js'\nCopying '.../grappelli/static/admin/js/SelectBox.js'\nCopying '.../grappelli/static/admin/js/inlines.min.js'\nCopying '.../grappelli/static/admin/js/jquery.init.js'\nCopying '.../grappelli/static/admin/js/admin/RelatedObjectLookups.js'\nCopying '.../grappelli/static/admin/js/admin/DateTimeShortcuts.js'\n\n21 static files copied to '.../static', 593 unmodified.\n```\n- Test from the browser, with full reload of the page with the filter button on it -- error should be resolved\n\n###### Why is the problem occurring?\n- `collectstatic` is getting the `static/admin/js` files from `'django.contrib.admin'` instead of `'grappelli'`\n\n###### How could this have happened?\n1. As in the steps shown above, could have the `INSTALLED_APPS` ordered wrongly\n2. Another cause could be that `collectstatic` was run for `'django.contrib.admin'` before `'grappelli'` was ever installed\n3. ...\n\n---\n\n##### Further details\n\nThe following points are from my basic investigations and not any meaningful experience.  I'd be perfectly happy for a Django expert to come along and tell me I'm all wrong and there are better explanations and solutions.  I just want to develop more robust, stable apps.  Please take with a pinch of salt.\n\n###### Everything hinges on how `collectstatic` works\n\nhttps://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/#collectstatic:\n\n> On subsequent `collectstatic` runs (if `STATIC_ROOT` isn\u2019t empty), **files are copied only if they have a modified timestamp greater than the timestamp of the file in `STATIC_ROOT`**. Therefore if you remove an application from `INSTALLED_APPS`, it\u2019s a good idea to use the `--clear` option in order to remove stale static files.\n- Emphasis above is mine\n- Possible scenario:\n  - Wrong `static/admin/js` in place\n  - User has corrected ordering in `INSTALLED_APPS`\n  - However, modification dates on system are unfavourable, i.e.:\n    -  `grappelli/static/admin/js` < `static/admin/js`\n- The result will be something like:\n\n```\n$ python manage.py collectstatic --noinput\n\n0 static files copied to '.../static', 614 unmodified.\n```\n- Change the modification date for one of the source files, to show that it is then collected:\n\n```\n$ touch .../grappelli/static/admin/js/jquery.init.js \n$ python manage.py collectstatic --noinput\nCopying '.../grappelli/static/admin/js/jquery.init.js'\n\n1 static file copied to '.../static', 613 unmodified.\n```\n- Probably far more appropriate to change modification dates in the `static` directory rather than the source files, e.g.:\n\n```\n$ touch -d 2000-01-01 .../static/admin/js/jquery.init.js \n$ python manage.py collectstatic --noinput\nCopying '.../grappelli/static/admin/js/jquery.init.js'\n\n1 static file copied to '.../static', 613 unmodified.\n```\n- So for the whole `static/admin/js` directory:\n\n```\n$ find .../static/admin/js -type f -exec touch -d 2000-01-01 {} \\;\n$ python manage.py collectstatic --noinput\nCopying '.../grappelli/static/admin/js/SelectFilter2.js'\nCopying '.../grappelli/static/admin/js/collapse.min.js'\nCopying '.../grappelli/static/admin/js/actions.min.js'\nCopying '.../grappelli/static/admin/js/inlines.js'\nCopying '.../grappelli/static/admin/js/urlify.js'\nCopying '.../grappelli/static/admin/js/related-widget-wrapper.js'\nCopying '.../grappelli/static/admin/js/collapse.js'\nCopying '.../grappelli/static/admin/js/jquery.js'\nCopying '.../grappelli/static/admin/js/jquery.min.js'\nCopying '.../grappelli/static/admin/js/calendar.js'\nCopying '.../grappelli/static/admin/js/prepopulate.js'\nCopying '.../grappelli/static/admin/js/prepopulate.min.js'\nCopying '.../grappelli/static/admin/js/actions.js'\nCopying '.../grappelli/static/admin/js/core.js'\nCopying '.../grappelli/static/admin/js/LICENSE-JQUERY.txt'\nCopying '.../grappelli/static/admin/js/timeparse.js'\nCopying '.../grappelli/static/admin/js/SelectBox.js'\nCopying '.../grappelli/static/admin/js/inlines.min.js'\nCopying '.../grappelli/static/admin/js/jquery.init.js'\nCopying '.../grappelli/static/admin/js/admin/RelatedObjectLookups.js'\nCopying '.../grappelli/static/admin/js/admin/DateTimeShortcuts.js'\n\n21 static files copied to '.../static', 593 unmodified.\n```\n- In regards to the `--clear` option, as mentioned at the beginning; some observations:\n  - It definitely works...\n  - ... but it is a very aggressive solution, which can end up removing static files belonging to other projects that share the same `STATIC_ROOT`\n  - Thus, not really appropriate as a general recommendation\n\n###### Repercussions\n\nThis issue remaining active for over 3 years is a testament to this `collectstatic` functionality.  What makes it even more delicious is that the \"bug\" can resolve itself given the right conditions.  An example:\n- Amongst trying different solutions, user upgrades Grappelli, introducing new `static/admin/js` source files, with more recent modification dates than those currently in `STATIC_ROOT`\n  - Yet, filter button stubbornly refuses to work\n- At some future point in time, user runs `collectstatic`\n  - Suddenly, the filter button is working again\n\nIn an ideal world:\n- An in-between setting for `collectstatic`, something like a `--replace` or `--overwrite` or `--ignore-timestamps`\n- Basically:\n  - Find all the static files as it currently does\n  - Copy them over regardless of existing static files\n  - Don't touch any other static files in `STATIC_ROOT`\n\nNow if this ideal world already exists, please let me know.  Perhaps even this issue could finally be closed!\n\n###### \"The File of Doom\"\n\nFinally, this whole discussion wouldn't be complete without identifying the offender, fingering the exact line of code that has caused so much pain!\n\nI've already sneakily mentioned it above... and it is...:\n- **`static/admin/js/jquery.init.js`**!!!  But y'all had already figured that out, right?!\n\nIf Grappelli wins the `collectstatic` battle, then you'll find it contains:\n\n```\n// dropped\n// not used in grappelli\n// kept this file to prevent 404\n```\n\nYet if Django-Admin comes out trumps, you'll find:\n\n```\n/* Puts the included jQuery into our own namespace using noConflict and passing\n * it 'true'. This ensures that the included jQuery doesn't pollute the global\n * namespace (i.e. this preserves pre-existing values for both window.$ and\n * window.jQuery).\n */\nvar django = django || {};\ndjango.jQuery = jQuery.noConflict(true);\n```\n- So, just a 2-line `js` file after all of that\n- And it's actually the last line that is the troublemaker -- comment it out and the filter button works again\n\nNB: I am in **no way** advocating this method of getting the filter button working again -- just sharing this finding for the curious out there.\n. @marcoooo Based upon [my long answer above](https://github.com/sehmaschine/django-grappelli/issues/214#issuecomment-158576652) and the [follow-up by @Tatsh](https://github.com/sehmaschine/django-grappelli/issues/214#issuecomment-159800219), I've got a 2-step summary for you:\n1. Clear/move the `static/admin/js` directory\n2. Run `collectstatic` again\n\nAs long as you've got the correct ordering as pointed out by @ecederstrand, you'll be good to go.\n. > I run collectstatic, admin files comme again (so I deleted the folder)\n\n@marcoooo Only delete the folder **before** `collectstatic`.  When you run `collectstatic` again, it produces the correct files _that you need to keep_.\n. @mykljohn \n\nI've run into this problem a number of times and I am definite that the issue lies between `collectstatic` and the configuration of your web server for serving static files.  You didn't mention either of these above and it would help if you could explain these further.\n\n> but in devtools it still shows:\n> // Puts the included jQuery into our own namespace\n> var django = {\n> \"jQuery\": jQuery.noConflict(true)\n> };\n\nThis indicates that your web server is still serving the file provided by `django-admin` instead of `grappelli`.  So that is where you need to look for resolving this.\n\n> But it still shows as original...it definitely appears to be a caching issue, so I rebooted and it still shows the same.\n\nI'm definite that it is not a caching issue.  Configuration and serving of static files is where I'm sure you will find the problem.\n\nOne way to do that is find the URL where `jquery.init.js` is being served from.  For example, using Firefox dev tools:\n1. Go to the Network tab\n2. Reload the page if necessary\n3. Locate `jquery.init.js`\n4. Right-click and open in a new tab\n\nWhat's the URL being used?  What's the content of the file?\n\nLeave this tab open while you are trying to resolve this problem, since you can keep refreshing it each time you make changes to see if it is making any difference.  Then try these steps:\n1. Using the URL, locate the `jquery.init.js` file that is being served by your web server\n   1. One easy way to tell that you have the right one is to simply rename the file and the refresh the tab you have opened\n   2. If you have found the right one, then you should end up with a `404 Not Found` page\n   3. Rename the file back to `jquery.init.js`\n2. At this point, manually change this file to have the correct content (as you have done above) and confirm that is displayed when you refresh the page again\n3. If that works, then the filter button should work again once you refresh _that_ page (i.e. the page with the filter button on it)\n\nIf you get this far, then the problem is somewhere with `collectstatic` or the web server configuration.\n\nNotes:\n1. At no point during this process did I need to restart the web server or clear the browser cache\n2. As soon as changes are made to the correct file, they are displayed when refreshing the pages in the browser, even for the filter button\n. The following resources might be useful to you:\n- https://help.pythonanywhere.com/pages/502BadGateway\n- https://help.pythonanywhere.com/pages/Django400BadRequest\n\nHow about `python manage.py collectstatic --noinput --clear`?  Quoting from my post on the other issue:\n\n> https://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/#django-admin-option---clear:\n> \n> `--clear`\n> \n> Clear the existing files before trying to copy or link the original file.\n> A caveat:\n> \n> Using `--clear` is like a sledgehammer; it will clear all static files that aren't needed by the current project\n> So if you are using the same `STATIC_ROOT` for more than one project, then better to leave this method -- there's a more nuanced, less destructive method outlined further down\n> Essentially, **don't use this for anything other than testing**, unless you're comfortable to rebuild `STATIC_ROOT`\n> \n> Now the steps:\n> \n> Ensure you have `'grappelli'` before `'django.contrib.admin'` in `INSTALLED_APPS`, as shown in the reference above\n> Run `python manage.py collectstatic --noinput --clear`\n> Test from the browser, with full reload of the page with the filter button on it -- error should be resolved\n. > I then recreated the file with the code dummy code and refreshed and now I get Bad Request (400). That's with Debug = False, If I set Debug = True, it goes in, but has the old code.\n\nFrom https://help.pythonanywhere.com/pages/Django400BadRequest:\n\n> ```\n> 400 Bad Request\n> ```\n> \n> Unfriendly huh? It's a common django problem though (as you'll see from a quick google search, and the answer is that you need to set the `ALLOWED_HOSTS` setting in your settings.py (or switch `DEBUG` back to True)\n\nTo be able to set `DEBUG = False`, you need to set the `ALLOWED_HOSTS` value.  Something like:\n\n```\nDEBUG = False\n\nALLOWED_HOSTS = [\n    '127.0.0.1',\n    'localhost',\n    'Site_URL_goes_here',\n]\n```\n\nObviously, modify `'Site_URL_goes_here'` with your site URL.\n\nGet it working with this setting and then see if the static file is served properly.\n. From what I mentioned earlier:\n\n> One way to do that is find the URL where `jquery.init.js` is being served from. For example, using Firefox dev tools:\n> 1. Go to the Network tab\n> 2. Reload the page if necessary\n> 3. Locate `jquery.init.js`\n> 4. Right-click and open in a new tab\n> \n> What's the URL being used? What's the content of the file?\n\nPlease specifically mention the URL.\n\nThen get the `404` error like I mentioned above:\n\n> Leave this tab open while you are trying to resolve this problem, since you can keep refreshing it each time you make changes to see if it is making any difference.  Then try these steps:\n> 1. Using the URL, locate the `jquery.init.js` file that is being served by your web server\n>    1. One easy way to tell that you have the right one is to simply rename the file and the refresh the tab you have opened\n>    2. If you have found the right one, then you should end up with a `404 Not Found` page\n>    3. Rename the file back to `jquery.init.js`\n\nDo you get the `404` error or not?\n. Just to confirm, I've followed your link and this is what I've got:\n\n```\n// dropped\n// not used in grappelli\n// kept this file to prevent 404\n```\n\nSo that's the correct version being served here.  Perhaps the pythonanywhere people can explain what is going on at their end.\n. Right, that one is showing the `django-admin` version:\n\n```\n// Puts the included jQuery into our own namespace\nvar django = {\n    \"jQuery\": jQuery.noConflict(true)\n};\n```\n\nSo now the issue is with the static files that are on the web server.  You normally need to copy these over.  Please post your web server configuration.\n. No, don't delete anything, you might make the situation worse.  But the static files are being served by a web server.  Which one are you using?  Or which one is provided by PythonAnywhere?\n. Well, that's good news!  I'm glad I was able to help, even if indirectly.  If all is OK, please go ahead and close this issue.\n. ## Really sorry, don't have any experience with the dashboard. Perhaps ask a question on the Grappelli Google Group @ http://groups.google.com/group/django-grappelli.\n\nSent from my BlackBerry\n\n---\n\nFrom: mykljohn notifications@github.com\nDate: Sat, 11 Jun 2016 20:06:08 -0700\nTo: sehmaschine/django-grappellidjango-grappelli@noreply.github.com\nReplyTo: sehmaschine/django-grappelli reply@reply.github.com\nCc: myiiiqbalmy@hotmail.com; Mentionmention@noreply.github.com\nSubject: Re: [sehmaschine/django-grappelli] [problem] Filter in 2.7.3 (#759)\n\nQuestion...is there any clearer documentation on setting up the dashboard? or a video?\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/759#issuecomment-225407116, or mute the threadhttps://github.com/notifications/unsubscribe/AJwewR4HmBumzR3uBrZ0s8lFCmHXRJ6xks5qK3eggaJpZM4IzbME.\n. Have just encountered this problem for the second time so exerted some effort looking into it.  The following discussion is based upon my setup but it wouldn't surprise me in the slightest if others are in exactly the same boat.\n\n>  sehmaschine commented on 11 Aug\n> @sdillinger well, haven't been able to reproduce this for 2+ years. I'm pretty sure this is not related to grappelli but your server/django setup.\n\n@sehmaschine: I'm with you 100% -- in my case at least, it had nothing to do with Grappelli itself.  As for reproducing (and fixing) the error -- perhaps I can help you with that...\n\n---\n\n##### TL;DR\n\nA simple, working solution to this problem.  First up, two important references:\n\nhttp://django-grappelli.readthedocs.org/en/latest/quickstart.html#setup:\n\n> Open `settings.py` and add `grappelli` to your `INSTALLED_APPS` (before `django.contrib.admin`):\n> \n> ```\n> INSTALLED_APPS = (\n>     'grappelli',\n>     'django.contrib.admin',\n> )\n> ```\n\nhttps://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/#django-admin-option---clear:\n\n> `--clear`\n> \n>    Clear the existing files before trying to copy or link the original file.\n\nA caveat:\n- Using `--clear` is like a sledgehammer; it will clear all static files that aren't needed by the current project\n- So if you are using the same `STATIC_ROOT` for more than one project, then better to leave this method -- there's a more nuanced, less destructive method outlined [further down](#fixing_the_error)\n- Essentially, **don't use this for anything other than testing**, unless you're comfortable to rebuild `STATIC_ROOT`\n\nNow the steps:\n1. Ensure you have `'grappelli'` before `'django.contrib.admin'` in `INSTALLED_APPS`, as shown in the reference above\n2. Run `python manage.py collectstatic --noinput --clear`\n3. Test from the browser, with full reload of the page with the filter button on it -- error should be resolved\n\n---\n\n##### Basic overview\n\n###### Intro\n\nWith the steps shown below, I've been able to reproduce and fix the error 100% consistently, using the following setup:\n1. Django 1.8\n2. `DEBUG = False`\n3. Nginx + Gunicorn via. Unix socket\n\nIn any case, as long as the static files are being accessed at `STATIC_ROOT`, the following steps should work.\n\n###### Reproducing the error\n\nIn order to reproduce the error, note that I am about to _contradict the official instructions as shown above_, because that is one of the ways that this problem could have occurred.\n- Switch the ordering in `INSTALLED_APPS`, i.e.:\n\n```\nINSTALLED_APPS = (\n    'django.contrib.admin',\n    'grappelli',\n)\n```\n- Delete (or at least rename) the `static/admin/js` directory\n- Run `python manage.py collectstatic --noinput`, output should show `django/contrib/admin` in the path, such as:\n\n```\n$ python manage.py collectstatic --noinput\nCopying '.../django/contrib/admin/static/admin/js/inlines.js'\nCopying '.../django/contrib/admin/static/admin/js/collapse.js'\nCopying '.../django/contrib/admin/static/admin/js/related-widget-wrapper.js'\nCopying '.../django/contrib/admin/static/admin/js/calendar.js'\nCopying '.../django/contrib/admin/static/admin/js/collapse.min.js'\nCopying '.../django/contrib/admin/static/admin/js/urlify.js'\nCopying '.../django/contrib/admin/static/admin/js/core.js'\nCopying '.../django/contrib/admin/static/admin/js/jquery.js'\nCopying '.../django/contrib/admin/static/admin/js/actions.min.js'\nCopying '.../django/contrib/admin/static/admin/js/jquery.init.js'\nCopying '.../django/contrib/admin/static/admin/js/inlines.min.js'\nCopying '.../django/contrib/admin/static/admin/js/actions.js'\nCopying '.../django/contrib/admin/static/admin/js/jquery.min.js'\nCopying '.../django/contrib/admin/static/admin/js/timeparse.js'\nCopying '.../django/contrib/admin/static/admin/js/SelectBox.js'\nCopying '.../django/contrib/admin/static/admin/js/prepopulate.min.js'\nCopying '.../django/contrib/admin/static/admin/js/SelectFilter2.js'\nCopying '.../django/contrib/admin/static/admin/js/LICENSE-JQUERY.txt'\nCopying '.../django/contrib/admin/static/admin/js/prepopulate.js'\nCopying '.../django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js'\nCopying '.../django/contrib/admin/static/admin/js/admin/DateTimeShortcuts.js'\n\n21 static files copied to '.../static', 593 unmodified.\n```\n- Test from the browser, with full reload of the page with the filter button on it -- error should be manifest\n\n<a name=\"fixing_the_error\"></a>\n\n###### Fixing the error\n\nThe resolution steps are almost the same:\n- Correct the ordering in `INSTALLED_APPS`, i.e.:\n\n```\nINSTALLED_APPS = (\n    'grappelli',\n    'django.contrib.admin',\n)\n```\n- Delete (or at least rename) the `static/admin/js` directory\n- Run `python manage.py collectstatic --noinput`, output should show `grappelli` in the path, such as:\n\n```\n$ python manage.py collectstatic --noinput\nCopying '.../grappelli/static/admin/js/SelectFilter2.js'\nCopying '.../grappelli/static/admin/js/collapse.min.js'\nCopying '.../grappelli/static/admin/js/actions.min.js'\nCopying '.../grappelli/static/admin/js/inlines.js'\nCopying '.../grappelli/static/admin/js/urlify.js'\nCopying '.../grappelli/static/admin/js/related-widget-wrapper.js'\nCopying '.../grappelli/static/admin/js/collapse.js'\nCopying '.../grappelli/static/admin/js/jquery.js'\nCopying '.../grappelli/static/admin/js/jquery.min.js'\nCopying '.../grappelli/static/admin/js/calendar.js'\nCopying '.../grappelli/static/admin/js/prepopulate.js'\nCopying '.../grappelli/static/admin/js/prepopulate.min.js'\nCopying '.../grappelli/static/admin/js/actions.js'\nCopying '.../grappelli/static/admin/js/core.js'\nCopying '.../grappelli/static/admin/js/LICENSE-JQUERY.txt'\nCopying '.../grappelli/static/admin/js/timeparse.js'\nCopying '.../grappelli/static/admin/js/SelectBox.js'\nCopying '.../grappelli/static/admin/js/inlines.min.js'\nCopying '.../grappelli/static/admin/js/jquery.init.js'\nCopying '.../grappelli/static/admin/js/admin/RelatedObjectLookups.js'\nCopying '.../grappelli/static/admin/js/admin/DateTimeShortcuts.js'\n\n21 static files copied to '.../static', 593 unmodified.\n```\n- Test from the browser, with full reload of the page with the filter button on it -- error should be resolved\n\n###### Why is the problem occurring?\n- `collectstatic` is getting the `static/admin/js` files from `'django.contrib.admin'` instead of `'grappelli'`\n\n###### How could this have happened?\n1. As in the steps shown above, could have the `INSTALLED_APPS` ordered wrongly\n2. Another cause could be that `collectstatic` was run for `'django.contrib.admin'` before `'grappelli'` was ever installed\n3. ...\n\n---\n\n##### Further details\n\nThe following points are from my basic investigations and not any meaningful experience.  I'd be perfectly happy for a Django expert to come along and tell me I'm all wrong and there are better explanations and solutions.  I just want to develop more robust, stable apps.  Please take with a pinch of salt.\n\n###### Everything hinges on how `collectstatic` works\n\nhttps://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/#collectstatic:\n\n> On subsequent `collectstatic` runs (if `STATIC_ROOT` isn\u2019t empty), **files are copied only if they have a modified timestamp greater than the timestamp of the file in `STATIC_ROOT`**. Therefore if you remove an application from `INSTALLED_APPS`, it\u2019s a good idea to use the `--clear` option in order to remove stale static files.\n- Emphasis above is mine\n- Possible scenario:\n  - Wrong `static/admin/js` in place\n  - User has corrected ordering in `INSTALLED_APPS`\n  - However, modification dates on system are unfavourable, i.e.:\n    -  `grappelli/static/admin/js` < `static/admin/js`\n- The result will be something like:\n\n```\n$ python manage.py collectstatic --noinput\n\n0 static files copied to '.../static', 614 unmodified.\n```\n- Change the modification date for one of the source files, to show that it is then collected:\n\n```\n$ touch .../grappelli/static/admin/js/jquery.init.js \n$ python manage.py collectstatic --noinput\nCopying '.../grappelli/static/admin/js/jquery.init.js'\n\n1 static file copied to '.../static', 613 unmodified.\n```\n- Probably far more appropriate to change modification dates in the `static` directory rather than the source files, e.g.:\n\n```\n$ touch -d 2000-01-01 .../static/admin/js/jquery.init.js \n$ python manage.py collectstatic --noinput\nCopying '.../grappelli/static/admin/js/jquery.init.js'\n\n1 static file copied to '.../static', 613 unmodified.\n```\n- So for the whole `static/admin/js` directory:\n\n```\n$ find .../static/admin/js -type f -exec touch -d 2000-01-01 {} \\;\n$ python manage.py collectstatic --noinput\nCopying '.../grappelli/static/admin/js/SelectFilter2.js'\nCopying '.../grappelli/static/admin/js/collapse.min.js'\nCopying '.../grappelli/static/admin/js/actions.min.js'\nCopying '.../grappelli/static/admin/js/inlines.js'\nCopying '.../grappelli/static/admin/js/urlify.js'\nCopying '.../grappelli/static/admin/js/related-widget-wrapper.js'\nCopying '.../grappelli/static/admin/js/collapse.js'\nCopying '.../grappelli/static/admin/js/jquery.js'\nCopying '.../grappelli/static/admin/js/jquery.min.js'\nCopying '.../grappelli/static/admin/js/calendar.js'\nCopying '.../grappelli/static/admin/js/prepopulate.js'\nCopying '.../grappelli/static/admin/js/prepopulate.min.js'\nCopying '.../grappelli/static/admin/js/actions.js'\nCopying '.../grappelli/static/admin/js/core.js'\nCopying '.../grappelli/static/admin/js/LICENSE-JQUERY.txt'\nCopying '.../grappelli/static/admin/js/timeparse.js'\nCopying '.../grappelli/static/admin/js/SelectBox.js'\nCopying '.../grappelli/static/admin/js/inlines.min.js'\nCopying '.../grappelli/static/admin/js/jquery.init.js'\nCopying '.../grappelli/static/admin/js/admin/RelatedObjectLookups.js'\nCopying '.../grappelli/static/admin/js/admin/DateTimeShortcuts.js'\n\n21 static files copied to '.../static', 593 unmodified.\n```\n- In regards to the `--clear` option, as mentioned at the beginning; some observations:\n  - It definitely works...\n  - ... but it is a very aggressive solution, which can end up removing static files belonging to other projects that share the same `STATIC_ROOT`\n  - Thus, not really appropriate as a general recommendation\n\n###### Repercussions\n\nThis issue remaining active for over 3 years is a testament to this `collectstatic` functionality.  What makes it even more delicious is that the \"bug\" can resolve itself given the right conditions.  An example:\n- Amongst trying different solutions, user upgrades Grappelli, introducing new `static/admin/js` source files, with more recent modification dates than those currently in `STATIC_ROOT`\n  - Yet, filter button stubbornly refuses to work\n- At some future point in time, user runs `collectstatic`\n  - Suddenly, the filter button is working again\n\nIn an ideal world:\n- An in-between setting for `collectstatic`, something like a `--replace` or `--overwrite` or `--ignore-timestamps`\n- Basically:\n  - Find all the static files as it currently does\n  - Copy them over regardless of existing static files\n  - Don't touch any other static files in `STATIC_ROOT`\n\nNow if this ideal world already exists, please let me know.  Perhaps even this issue could finally be closed!\n\n###### \"The File of Doom\"\n\nFinally, this whole discussion wouldn't be complete without identifying the offender, fingering the exact line of code that has caused so much pain!\n\nI've already sneakily mentioned it above... and it is...:\n- **`static/admin/js/jquery.init.js`**!!!  But y'all had already figured that out, right?!\n\nIf Grappelli wins the `collectstatic` battle, then you'll find it contains:\n\n```\n// dropped\n// not used in grappelli\n// kept this file to prevent 404\n```\n\nYet if Django-Admin comes out trumps, you'll find:\n\n```\n/* Puts the included jQuery into our own namespace using noConflict and passing\n * it 'true'. This ensures that the included jQuery doesn't pollute the global\n * namespace (i.e. this preserves pre-existing values for both window.$ and\n * window.jQuery).\n */\nvar django = django || {};\ndjango.jQuery = jQuery.noConflict(true);\n```\n- So, just a 2-line `js` file after all of that\n- And it's actually the last line that is the troublemaker -- comment it out and the filter button works again\n\nNB: I am in **no way** advocating this method of getting the filter button working again -- just sharing this finding for the curious out there.\n. @marcoooo Based upon [my long answer above](https://github.com/sehmaschine/django-grappelli/issues/214#issuecomment-158576652) and the [follow-up by @Tatsh](https://github.com/sehmaschine/django-grappelli/issues/214#issuecomment-159800219), I've got a 2-step summary for you:\n1. Clear/move the `static/admin/js` directory\n2. Run `collectstatic` again\n\nAs long as you've got the correct ordering as pointed out by @ecederstrand, you'll be good to go.\n. > I run collectstatic, admin files comme again (so I deleted the folder)\n\n@marcoooo Only delete the folder **before** `collectstatic`.  When you run `collectstatic` again, it produces the correct files _that you need to keep_.\n. @mykljohn \n\nI've run into this problem a number of times and I am definite that the issue lies between `collectstatic` and the configuration of your web server for serving static files.  You didn't mention either of these above and it would help if you could explain these further.\n\n> but in devtools it still shows:\n> // Puts the included jQuery into our own namespace\n> var django = {\n> \"jQuery\": jQuery.noConflict(true)\n> };\n\nThis indicates that your web server is still serving the file provided by `django-admin` instead of `grappelli`.  So that is where you need to look for resolving this.\n\n> But it still shows as original...it definitely appears to be a caching issue, so I rebooted and it still shows the same.\n\nI'm definite that it is not a caching issue.  Configuration and serving of static files is where I'm sure you will find the problem.\n\nOne way to do that is find the URL where `jquery.init.js` is being served from.  For example, using Firefox dev tools:\n1. Go to the Network tab\n2. Reload the page if necessary\n3. Locate `jquery.init.js`\n4. Right-click and open in a new tab\n\nWhat's the URL being used?  What's the content of the file?\n\nLeave this tab open while you are trying to resolve this problem, since you can keep refreshing it each time you make changes to see if it is making any difference.  Then try these steps:\n1. Using the URL, locate the `jquery.init.js` file that is being served by your web server\n   1. One easy way to tell that you have the right one is to simply rename the file and the refresh the tab you have opened\n   2. If you have found the right one, then you should end up with a `404 Not Found` page\n   3. Rename the file back to `jquery.init.js`\n2. At this point, manually change this file to have the correct content (as you have done above) and confirm that is displayed when you refresh the page again\n3. If that works, then the filter button should work again once you refresh _that_ page (i.e. the page with the filter button on it)\n\nIf you get this far, then the problem is somewhere with `collectstatic` or the web server configuration.\n\nNotes:\n1. At no point during this process did I need to restart the web server or clear the browser cache\n2. As soon as changes are made to the correct file, they are displayed when refreshing the pages in the browser, even for the filter button\n. The following resources might be useful to you:\n- https://help.pythonanywhere.com/pages/502BadGateway\n- https://help.pythonanywhere.com/pages/Django400BadRequest\n\nHow about `python manage.py collectstatic --noinput --clear`?  Quoting from my post on the other issue:\n\n> https://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/#django-admin-option---clear:\n> \n> `--clear`\n> \n> Clear the existing files before trying to copy or link the original file.\n> A caveat:\n> \n> Using `--clear` is like a sledgehammer; it will clear all static files that aren't needed by the current project\n> So if you are using the same `STATIC_ROOT` for more than one project, then better to leave this method -- there's a more nuanced, less destructive method outlined further down\n> Essentially, **don't use this for anything other than testing**, unless you're comfortable to rebuild `STATIC_ROOT`\n> \n> Now the steps:\n> \n> Ensure you have `'grappelli'` before `'django.contrib.admin'` in `INSTALLED_APPS`, as shown in the reference above\n> Run `python manage.py collectstatic --noinput --clear`\n> Test from the browser, with full reload of the page with the filter button on it -- error should be resolved\n. > I then recreated the file with the code dummy code and refreshed and now I get Bad Request (400). That's with Debug = False, If I set Debug = True, it goes in, but has the old code.\n\nFrom https://help.pythonanywhere.com/pages/Django400BadRequest:\n\n> ```\n> 400 Bad Request\n> ```\n> \n> Unfriendly huh? It's a common django problem though (as you'll see from a quick google search, and the answer is that you need to set the `ALLOWED_HOSTS` setting in your settings.py (or switch `DEBUG` back to True)\n\nTo be able to set `DEBUG = False`, you need to set the `ALLOWED_HOSTS` value.  Something like:\n\n```\nDEBUG = False\n\nALLOWED_HOSTS = [\n    '127.0.0.1',\n    'localhost',\n    'Site_URL_goes_here',\n]\n```\n\nObviously, modify `'Site_URL_goes_here'` with your site URL.\n\nGet it working with this setting and then see if the static file is served properly.\n. From what I mentioned earlier:\n\n> One way to do that is find the URL where `jquery.init.js` is being served from. For example, using Firefox dev tools:\n> 1. Go to the Network tab\n> 2. Reload the page if necessary\n> 3. Locate `jquery.init.js`\n> 4. Right-click and open in a new tab\n> \n> What's the URL being used? What's the content of the file?\n\nPlease specifically mention the URL.\n\nThen get the `404` error like I mentioned above:\n\n> Leave this tab open while you are trying to resolve this problem, since you can keep refreshing it each time you make changes to see if it is making any difference.  Then try these steps:\n> 1. Using the URL, locate the `jquery.init.js` file that is being served by your web server\n>    1. One easy way to tell that you have the right one is to simply rename the file and the refresh the tab you have opened\n>    2. If you have found the right one, then you should end up with a `404 Not Found` page\n>    3. Rename the file back to `jquery.init.js`\n\nDo you get the `404` error or not?\n. Just to confirm, I've followed your link and this is what I've got:\n\n```\n// dropped\n// not used in grappelli\n// kept this file to prevent 404\n```\n\nSo that's the correct version being served here.  Perhaps the pythonanywhere people can explain what is going on at their end.\n. Right, that one is showing the `django-admin` version:\n\n```\n// Puts the included jQuery into our own namespace\nvar django = {\n    \"jQuery\": jQuery.noConflict(true)\n};\n```\n\nSo now the issue is with the static files that are on the web server.  You normally need to copy these over.  Please post your web server configuration.\n. No, don't delete anything, you might make the situation worse.  But the static files are being served by a web server.  Which one are you using?  Or which one is provided by PythonAnywhere?\n. Well, that's good news!  I'm glad I was able to help, even if indirectly.  If all is OK, please go ahead and close this issue.\n. ## Really sorry, don't have any experience with the dashboard. Perhaps ask a question on the Grappelli Google Group @ http://groups.google.com/group/django-grappelli.\n\nSent from my BlackBerry\n\n---\n\nFrom: mykljohn notifications@github.com\nDate: Sat, 11 Jun 2016 20:06:08 -0700\nTo: sehmaschine/django-grappellidjango-grappelli@noreply.github.com\nReplyTo: sehmaschine/django-grappelli reply@reply.github.com\nCc: myiiiqbalmy@hotmail.com; Mentionmention@noreply.github.com\nSubject: Re: [sehmaschine/django-grappelli] [problem] Filter in 2.7.3 (#759)\n\nQuestion...is there any clearer documentation on setting up the dashboard? or a video?\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/759#issuecomment-225407116, or mute the threadhttps://github.com/notifications/unsubscribe/AJwewR4HmBumzR3uBrZ0s8lFCmHXRJ6xks5qK3eggaJpZM4IzbME.\n. ",
    "Tatsh": "@myii Thanks. I added the steps` to my deployment in Ansible like so, and then run collectstatic again (unfortunately):\n\n``` yaml\n- name: 'manage.py collectstatic'\n  django_manage: app_path={{common_htdocs_dir}}/fos\n                 command=collectstatic\n                 settings=fos.settings\n                 virtualenv={{common_htdocs_dir}}/fos-venv\n  when: code.changed or code_deps.changed or settings.changed\n  tags:\n    - fos\n    - collectstatic\n\n# Next two steps, credits to @myii\n# https://github.com/sehmaschine/django-grappelli/issues/214#issuecomment-158576652\n- name: \"Move Django's admin assets to avoid conflict with Grapelli's\"\n  command: mv {{common_htdocs_dir}}/fos/static/admin/js {{common_htdocs_dir}}/fos/static/admin/js-already-moved creates={{common_htdocs_dir}}/fos/static/admin/js-already-moved\n  tags:\n    - fos\n    - collectstatic\n    - grapelli\n\n# Using command directly so ----no-post-process can be passed, for extra speed\n- name: \"Re-run collectstatic to replace admin assets with Grapelli's\"\n  command: '{{common_htdocs_dir}}/fos-venv/bin/python ./manage.py collectstatic --no-color --noinput --no-post-process chdir={{common_htdocs_dir}}/fos'\n  tags:\n    - fos\n    - collectstatic\n```\n\nLuckily Grapelli does not need post-processing, and only JS is affected.\n. @myii Thanks. I added the steps` to my deployment in Ansible like so, and then run collectstatic again (unfortunately):\n\n``` yaml\n- name: 'manage.py collectstatic'\n  django_manage: app_path={{common_htdocs_dir}}/fos\n                 command=collectstatic\n                 settings=fos.settings\n                 virtualenv={{common_htdocs_dir}}/fos-venv\n  when: code.changed or code_deps.changed or settings.changed\n  tags:\n    - fos\n    - collectstatic\n\n# Next two steps, credits to @myii\n# https://github.com/sehmaschine/django-grappelli/issues/214#issuecomment-158576652\n- name: \"Move Django's admin assets to avoid conflict with Grapelli's\"\n  command: mv {{common_htdocs_dir}}/fos/static/admin/js {{common_htdocs_dir}}/fos/static/admin/js-already-moved creates={{common_htdocs_dir}}/fos/static/admin/js-already-moved\n  tags:\n    - fos\n    - collectstatic\n    - grapelli\n\n# Using command directly so ----no-post-process can be passed, for extra speed\n- name: \"Re-run collectstatic to replace admin assets with Grapelli's\"\n  command: '{{common_htdocs_dir}}/fos-venv/bin/python ./manage.py collectstatic --no-color --noinput --no-post-process chdir={{common_htdocs_dir}}/fos'\n  tags:\n    - fos\n    - collectstatic\n```\n\nLuckily Grapelli does not need post-processing, and only JS is affected.\n. ",
    "fchevitarese": "I got the same error, added this and it worked\nSTATICFILES_FINDERS = (\n'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n'django.contrib.staticfiles.finders.FileSystemFinder',\n}\n\n;) \n. I got the same error, added this and it worked\nSTATICFILES_FINDERS = (\n'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n'django.contrib.staticfiles.finders.FileSystemFinder',\n}\n\n;) \n. ",
    "marcoooo": "Hi all, Django 1.9.8 / Grappelli 2.8., this problem still occurs, even in production with static files setup. \n\nIs there any 'simple' solution for this ? Noting that in my project, admin js is never loaded any time.\n. Hi All, thank for your quiclk response !\n- Ordering in apps is ok (since in the reverse order, I d'ont get the grappelli style at all)\n- I run collectstatic, admin files comme again (so I deleted the folder)\n- path is (relative to project ~/staticfiles/) I think my conf is correct because all other statics are served well (no urlpatterns update in my urls.py configuration, as recommanded in Django doc)\n\nStill got this issue.\n\nDjango packages installed:\n\n> django-admin-sortable (2.0.18)\n> django-authtools (1.5.0)\n> django-bootstrap-themes (3.3.6)\n> django-braces (1.9.0)\n> django-ckeditor (5.1.0)\n> django-cors-headers (1.1.0)\n> django-countries (3.4.1)\n> django-crispy-forms (1.6.0)\n> django-crontab (0.7.1)\n> django-debug-toolbar (1.5)\n> django-eav (0.9.2, /home/marc/.virtualenvs/waves1/src/django-eav)\n> django-environ (0.4.0)\n> django-grappelli (2.8.1)\n> django-ipware (1.1.5)\n> django-jquery (1.12.2)\n> django-jquery-ui (1.11.4.1)\n> django-log-file-viewer (0.9)\n> django-mail-templated (2.6.2)\n> django-mptt (0.8.4)\n> django-multiupload (0.5.1)\n> django-nested-admin (3.0.8)\n> django-polymorphic (1.0.1)\n> django-registration (2.1.2)\n> django-smart-selects (1.2.2)\n> django-tabbed-admin (1.0.0)\n> djangorestframework (3.4.0)\n> djangorestframework-jwt (1.8.0)\n> djangorestframework-xml (1.3.0)\n> drfdocs (0.0.11)\n\nRunning on apache with static serving setup:\n\n &lt;Directory [ABSOLUTE_PATH_TO_WAVES_INSTALL_DIR]/src/waves_services&gt;\n        Options FollowSymLinks Indexes\n        &lt;Files wsgi.py&gt;\n            Require all granted\n        &lt;/Files&gt;\n    &lt;/Directory&gt;\n    &lt;Location /static&gt;\n      SetHandler None\n    &lt;/Location&gt;\n    &lt;Location /media&gt;\n      SetHandler None\n    &lt;/Location&gt;\n    Alias /media [ABSOLUTE_PATH_TO_WAVES_INSTALL_DIR]/media\n    Alias /static [ABSOLUTE_PATH_TO_WAVES_INSTALL_DIR]/staticfiles\n\nTo help: actions() function seems to be declared in actions.js, but this file is not loaded in my admin pages (I inherit base_site.html in my project). Should I force this inclsion in my template ? I didn't see any trace of this import in any template in Grappelli sources.\n\n## **GOT IT ! This is what happens, I don't know how, but includes on actions.js seems to be lost somewhere, I forced inclusion in my admin base_site.html template, and now it works.**\n\nFor future reference it could be helpfull. (But anyway, does this file should not be included in base_site.html grappelli file ?)\n. Hi all, Django 1.9.8 / Grappelli 2.8., this problem still occurs, even in production with static files setup. \n\nIs there any 'simple' solution for this ? Noting that in my project, admin js is never loaded any time.\n. Hi All, thank for your quiclk response !\n- Ordering in apps is ok (since in the reverse order, I d'ont get the grappelli style at all)\n- I run collectstatic, admin files comme again (so I deleted the folder)\n- path is (relative to project ~/staticfiles/) I think my conf is correct because all other statics are served well (no urlpatterns update in my urls.py configuration, as recommanded in Django doc)\n\nStill got this issue.\n\nDjango packages installed:\n\n> django-admin-sortable (2.0.18)\n> django-authtools (1.5.0)\n> django-bootstrap-themes (3.3.6)\n> django-braces (1.9.0)\n> django-ckeditor (5.1.0)\n> django-cors-headers (1.1.0)\n> django-countries (3.4.1)\n> django-crispy-forms (1.6.0)\n> django-crontab (0.7.1)\n> django-debug-toolbar (1.5)\n> django-eav (0.9.2, /home/marc/.virtualenvs/waves1/src/django-eav)\n> django-environ (0.4.0)\n> django-grappelli (2.8.1)\n> django-ipware (1.1.5)\n> django-jquery (1.12.2)\n> django-jquery-ui (1.11.4.1)\n> django-log-file-viewer (0.9)\n> django-mail-templated (2.6.2)\n> django-mptt (0.8.4)\n> django-multiupload (0.5.1)\n> django-nested-admin (3.0.8)\n> django-polymorphic (1.0.1)\n> django-registration (2.1.2)\n> django-smart-selects (1.2.2)\n> django-tabbed-admin (1.0.0)\n> djangorestframework (3.4.0)\n> djangorestframework-jwt (1.8.0)\n> djangorestframework-xml (1.3.0)\n> drfdocs (0.0.11)\n\nRunning on apache with static serving setup:\n\n &lt;Directory [ABSOLUTE_PATH_TO_WAVES_INSTALL_DIR]/src/waves_services&gt;\n        Options FollowSymLinks Indexes\n        &lt;Files wsgi.py&gt;\n            Require all granted\n        &lt;/Files&gt;\n    &lt;/Directory&gt;\n    &lt;Location /static&gt;\n      SetHandler None\n    &lt;/Location&gt;\n    &lt;Location /media&gt;\n      SetHandler None\n    &lt;/Location&gt;\n    Alias /media [ABSOLUTE_PATH_TO_WAVES_INSTALL_DIR]/media\n    Alias /static [ABSOLUTE_PATH_TO_WAVES_INSTALL_DIR]/staticfiles\n\nTo help: actions() function seems to be declared in actions.js, but this file is not loaded in my admin pages (I inherit base_site.html in my project). Should I force this inclsion in my template ? I didn't see any trace of this import in any template in Grappelli sources.\n\n## **GOT IT ! This is what happens, I don't know how, but includes on actions.js seems to be lost somewhere, I forced inclusion in my admin base_site.html template, and now it works.**\n\nFor future reference it could be helpfull. (But anyway, does this file should not be included in base_site.html grappelli file ?)\n. ",
    "ilosamart": "Hello everyone!\r\nWe have here the same issue but with a different scenario:\r\n- 2 virtualenvs packaged with RPM\r\n- one of them have Grappelli\r\nour static files are shared across the virtualenv and collectstatic is run first for the one that do not have Grappelli.\r\nThe timestamp of files are the date of the RPM's creation, so Grappellis and Djando static admin files are almost ate the same datetime.\r\n\r\nIf someone else got this scenario beware. Our solution (for now) is to mannualy copy Grappelli's static files after collectstatic.. Hello everyone!\r\nWe have here the same issue but with a different scenario:\r\n- 2 virtualenvs packaged with RPM\r\n- one of them have Grappelli\r\nour static files are shared across the virtualenv and collectstatic is run first for the one that do not have Grappelli.\r\nThe timestamp of files are the date of the RPM's creation, so Grappellis and Djando static admin files are almost ate the same datetime.\r\n\r\nIf someone else got this scenario beware. Our solution (for now) is to mannualy copy Grappelli's static files after collectstatic.. ",
    "rcooke": "## description\r\n\r\nA string of optional extra text to be displayed at the top of each fieldset, \r\nunder the heading of the fieldset. _This string is not rendered for TabularInline_ \r\n_due to its layout._\r\n\r\n[ModelAdmin.fieldsets](https://docs.djangoproject.com/en/dev/ref/contrib/admin/#django.contrib.admin.ModelAdmin.fieldsets)  Django 1.10\r\n\r\n\r\nAccording to the Django docs, this will not work with Tabular inlines.  I don't understand your aversion to Django's solution.\r\n\r\nBut you could make an option flag to enable it for tabular inlines, so its not a magical new behavior.  Or define a new option - like hover-over for the column title cell and/or any cell in that column. Or define a number of options so the user can pick which one they want to best suit their circumstances.\r\n. Heh.  One quick fix is to hide the help text with some JS in JQuery:\r\n\r\n```\r\ndjango.jQuery(document).ready(function($){\r\n  $(\".inline-group .grp-help\").hide()\r\n});\r\n\r\n```\r\nI'm trying to learn enough JS/JQuery to copy or move the HELP TEXT someplace else.  Either as the \"title\" text for the input field, or the column title.  Which would be a lot easier to do in the template.. Heh.  Ok.  So I figured out the Jquery to copy the help text message onto the cell container's \"title\" attribute.  So hovering the mouse over the cell pops it up.  I might try and figure out how to target the input cell itself, if users complain the pop ups are too distracting this way.\r\n\r\n```\r\ndjango.jQuery(document).ready(function($){\r\n  $(\".inline-group .grp-help\").hide()\r\n  $('.inline-group .grp-help').each(function() {\r\n    this.parentNode.title = this.innerHTML;\r\n  });\r\n});\r\n\r\n```\r\n. Grappelli 2.4.5 with Django 1.5.1\n\nGrappelli should respect the use of ModelAdmin.queryset.\n\nThat is, if defined, Grappelli should use it in place of :\nqs = super(AutocompleteLookup, self).get_queryset()\n\n(line 132 in related.py, function AutocompleteLookup.get_queryset)\n\nFor example, in django_extensions, I proposed replacing the generic queryset line with:\n\n```\n        try:\n            # See if there is a custom admin queryset:\n            queryset = model.queryset(request)\n        except:\n            # If not, then make our own:\n            queryset = model._default_manager.all()\n```\n\nOr be more clever and see if the function exists first.  try/except is just my quick and dirty method of testing fixes.\n. Sorry to confuse the issue.  I thought it would be clever for Grappelli to improve upon the limit_choices_to feature.  \n\nBut really, all that is needed is for Grappelli to support a feature added in Django 1.1.\n\nAnd \"yes\" that affects the base queryset all \"admin\" functions work with.\n. Sure.\nPaste code snippets here OK?  Or do you want something more sophisticated?\n. Actually, the simplest example is on Djangodocs:\nhttps://docs.djangoproject.com/en/1.5/ref/contrib/admin/#django.contrib.admin.ModelAdmin.queryset\n\nThis goes in your admin.py for the model:\n\n```\nclass MyModelAdmin(admin.ModelAdmin):\n    def queryset(self, request):\n        qs = super(MyModelAdmin, self).queryset(request)\n        if request.user.is_superuser:\n            return qs\n        return qs.filter(author=request.user)\n```\n\nThis limits all records used in Admin to those authored by the logged in user.\n\nThis is what I use:\n\n```\ndef queryset(self, request):\n    qs = super(TimesheetAdmin, self).queryset(request)\n    if request.user.is_superuser:\n        self.message_user(request, \"Warning: This is the ADMINISTRATOR view!!\", 'warning')\n        return qs\n    return qs.filter(site__id=request.session['site'].id).filter(staff__id=request.user.id)\n```\n\nIf the user is \"admin\" they see or work-with all records.  Otherwise, they only see records that belong to the same site as they are logged in under.\n\nThis required I add a FK field called \"site\" to all my models I want restricted this way.  And I have to have this code in all the corresponding admin.py files.  All of my internal admin linked logic works perfect.  Then I noticed that all of my FK lookups (when you clicked on the select list or Grappellis' magnifying glass) showed ALL records, regardless of what \"site\" they belonged to!  \n\nI found this function to restrict the admins normal FK and M2M look up selection list:\nhttps://docs.djangoproject.com/en/1.5/ref/contrib/admin/#django.contrib.admin.ModelAdmin.formfield_for_foreignkey\n\nAnd this code works for the basic admin select widgets:\n\n```\ndef formfield_for_foreignkey(self, db_field, request, **kwargs):\n    if db_field.name in ('task', ):\n        kwargs[\"queryset\"] = Tasks.objects.get_query_set().filter(site__id=request.session['site'].id)\n    if db_field.name in ('job', ):\n        kwargs[\"queryset\"] = Milestones.objects.get_query_set().filter(site__id=request.session['site'].id)\n    return super(TimesheetAdmin, self).formfield_for_foreignkey(db_field, request, **kwargs)\n```\n\nI'm testing django_extensions auto complete lookup as I posted above, I figured out how to \"fix\" their queryset.\n\nThat just leaves Grappelli.  I thought a ticket would be easier than forking and issuing a pull request. \n. Add this to your head revision and I can clone it onto my test server and verify it works.\n. Excellent, thanks.  Let me know if you need anything.  Time to head home for a pint for me.\n. Hm.  By the way, the zen of lookups is such that restricting a related lookup might not be valid.  Whereas restricting a \"pick list\" would be valid.\n\nBecause if something is already linked to a record, then its allowed to be.  Whereas the latter is going to make a link and should be subject to restrictions.\n\nOf course we would have delve into the nuances of a possible security risk.  Defeat a SAS system just by changing one value in a GET command...  not good.\n\nBased on my early testing - when I tried replacing the default manger - changing the Related lookup class would only work if all the relations are to records that will pass whatever restriction is placed upon them in the admin queryset.  Should work, so long as all data was created AFTER the restriction was added.  \n. Did you want me to patch my code with that and test?\n\nOr is this in the master revision?  I can check it out and run it, so long as there is nothing in there that could cause me other issues.\n. I don't understand why your trying to find the \"current\" admin site.  All you need is the model class, which you have already.\n\nLike what I did to django-extension's autosearch lookup to fix the same problem:\n\n```\n    try:\n        # See if there is a custom admin queryset:\n        queryset = model.queryset(request)\n    except:\n        # If not, then make our own:\n        queryset = model._default_manager.all()\n```\n\nWhich is nearly identical to your code, except the lack of messing with the admin registry.\n. Did you notice that there is another way to fix this?\n\nYou could defer your FK selection to the admin's code.  That would let users customize your code the same way they customize the admin's FK/M2M select lists:\n\n```\nformfield_for_foreignkey()\n```\n\nheh.  Or both.\n. oh sh*t.  The line above my monkey patch in django-extensions is:\n\n```\nmodel = models.get_model(app_label, model_name)\n```\n\nNuts.  I commented-out my Try/Except to see what happens:\n\n```\nFile \"/home/rcooke/django-extensions/django_extensions/admin/__init__.py\", line 107, in foreignkey_autocomplete\n  queryset = model.queryset(request)\nAttributeError: type object 'Company' has no attribute 'queryset'\n```\n\nYou are correct!\n. I'm researching into how one hosts multiple admin sites, in the theory that would suggest a way to catalog what is available.\n\nDjango docs are very detailed here:\n- https://docs.djangoproject.com/en/dev/ref/contrib/admin/#adminsite-objects\n\nEach site has to be an instance of the base class, so worst case you could do a getattr on global memory checking each object to see if its an instance of the class.  Since the constructor takes a \"name\" for the site, I'm hoping there is an report or list of what sites exist....\n. The last line of `django.contrib.admin.sites` (after AdminSite()) is:\n\n```\nsite = AdminSite()\n```\n\nAnd since most people follow the tutorial and examples, we can easily determine the default (usually only) Admin Site instance. \n\nHowever, I think we actually have TWO problems.\n1. Find out what admin sites exist.\n2. What do we do if the model is registered with two or more of them?\n\nAnd the second problem is _\"worse\"_ than the first.\n\nI posted to Django's user forum on this. Django discussion link:\n- https://groups.google.com/forum/#!topic/django-users/azFcdcxK0n0\n. I don't understand \"current admin site\".  It seems to me that multiple sites all live in memory and are active at the same time.  The only differentiation between them is the URL used to access them.\n\nAh.  Maybe that is how to best identify which site the current request is associated with:  inspect the GET parameters.\n. Right.  Which would let us (after making a list of all the admin sites in memory) identify which site has the indicated name.\n\nIts too bad Django does not make an instance list of the AdminSites.  Just a couple of lines in the contrib file would do it.\n. Yeah, working on it.  I'm trying out an idea - inspecting the model in memory to see if there is anyway to link it back to the admin site.  When I do a dir() on the model class returned by `models.get_model(app_label, model_name)` I see an object named `'get_absolute_url'`.  Now where did that come from?\n\nAdding the admin site name or class instance to the (new) settings object  for specifying related and lookup fields (in place of the static method) is not too bad of an idea.\n. Heh.  I forgot about that.  I adopted a pre-existing project for managing company and contact info `django-contacts`:\n- https://github.com/myles/django-contacts\n\nThis clever thing has `get_absolute_url` defined as a `@permalink` function in the data model.  So, it might work but only for those data classes that define it.  No different from making users specify their adminsite model in settings.\n\nI was hoping the AdminSite code would add an attribute to the data model class that would link or at least identify the two.\n\nThis is the function I spotted on the model:\n\n```\n@permalink\ndef get_absolute_url(self):\n    return ('contacts_company_detail', None, {\n        'pk': self.pk,\n        'slug': self.slug,\n    })\n```\n. Sigh.  Its too bad the admin site does not publish a signal when a model is registered....\n. Not actively.  My client has not granted a budget for fixing it properly.  He had me hack my grappelli files to use the admin manager in place of the base manager - I only have one admin site so that works well. \n\nI also discovered the issue extends to filters.  That is, when you put a filter on a table view the filter pulls its choices from the base file manager, causing it to show choices that do not belong to the sub-set of records being displayed.\n\nWhen this client advances to needing a second admin site I can slot this fix in.  However, I can't say when - if ever - that will happen.  They may decide to keep the admin as-is and do custom views for the task-driven stuff they want.\n.\n. Another related wrinkle I discovered is that the FILTERS on any table view in admin with Grappelli do not use this limited query.\n\nThis results in the filter displaying choices that are not actually available to the current user.\n\nFor example, in my contacts database. One company division has a few hundred contacts. A new company division just started.\n\nWhen the new company division users logged in to start to add in their contacts, the FILTER for \"company name\" shows ALL of the companies that belong to the older division.\n\nAttempting to select any gets a \"record not found\" error.\n\nI was just about to go looking for the code that builds the list for FILTER.\n. Hah.  Never mind.  As you pointed out, this is handled by Django and admin.  I failed to head the instructions for configuring a filter to limit the queryset, in this section of the docs after \"new in Django 1.4\":\nhttps://docs.djangoproject.com/en/1.5/ref/contrib/admin/#django.contrib.admin.ModelAdmin.list_filter\n. Another related wrinkle I discovered is that the FILTERS on any table view in admin with Grappelli do not use this limited query.\n\nThis results in the filter displaying choices that are not actually available to the current user.\n\nFor example, in my contacts database. One company division has a few hundred contacts. A new company division just started.\n\nWhen the new company division users logged in to start to add in their contacts, the FILTER for \"company name\" shows ALL of the companies that belong to the older division.\n\nAttempting to select any gets a \"record not found\" error.\n\nI was just about to go looking for the code that builds the list for FILTER.\n. Hah.  Never mind.  As you pointed out, this is handled by Django and admin.  I failed to head the instructions for configuring a filter to limit the queryset, in this section of the docs after \"new in Django 1.4\":\nhttps://docs.djangoproject.com/en/1.5/ref/contrib/admin/#django.contrib.admin.ModelAdmin.list_filter\n. I added a note about this to the ticket from last year.\n\nSame road block. Django is not making a list of admin site objects so how does the code \"back track\"?\n\nFor my project we only have one admin site, so I made a small hack in Grappelli. It's checked in under my fork if you want it.\n\nRichard Cooke\n(Sent from my iPhone)\n\n> On Jan 13, 2014, at 6:12 AM, Curtis Maloney noreply@github.com wrote:\n> \n> Makes sense to be, but I can't see how you can reliably map from Model to Admin, especially since there could be more than one.\n> \n> My need for this feature may, in fact, go away soon with a patch I submitted to django-model-utils, but if there was one case, there could be more.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Yes, but since my hack works the client has not approved any changes.\n\nIf a situation comes up where I can switch to that method I will.  I would have to pull in your changes - which is fine since there are other changes I want.\n\nHm.  Maybe I can piggyback this on top of the next update to our library code.\n\nDid you (or anybody) ever post a suggestion to Django to keep a list or dict of admin sites? \n\nRegards,\n\nRichard Cooke\nTurnkey Automation Inc\nrcooke@tnky.ca\n\nOn Jan 13, 2014, at 9:44 AM, Patrick Kranzlmueller noreply@github.com wrote:\n\n> @rcooke did you take a look at the code with issue #403?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. I want something similar.  Client repairs industrial electronics, there is a db of \"parts\" needed for each repair. The technicians have to type in the part specification every time such as \"Resistor, 220 Ohm, 1/2Watt, 5%, SMD\".\n\nThis is a Character field, their lives would be a LOT easier if I could give them an auto complete that searches all the previous Part row entries.\n\nIt would help keep descriptions orderly too.\n. Does this apply to any editable in place inlines?  I have one admin form that uses this, and have not observed a problem in testing with Django 1.10 yet.  I will dig deeper if I know what I'm looking for?\n. Likely because it still works!  heheh\n\nActually, ONE big issue with it is lack of support by Mobile browsers!  It catches unexpected exits using a DOM model event that fires before the web page is deleted from memory.  Works great on desktops.  But, all mobile browsers have decided to NOT implement it!  \n\nAll of them saying its for \"user security\", since some nasty websites use that function to try and keep the user on their site.\n\nTheir answer is to write an APP for their device.  Then you can handle that event any way you like.\n\nIts enough to make me think its part of some master plan to force developers to develop for their platform!\n. I have been testing Django 1.10 with Grappelli for a week without problems.  I just pushed the update to the production server this weekend, and everything seems to be working.  Is there something specific inside Grappelli that needs updating for Django 1.10?\n\nI reviewed the other 2 items with this tag. Have not seen a problem with them yet.\n. Ah, my users pointed out to me that Dj1.10 Admin tabular inline has some enhancements that are missing from the current Grappelli version.\n\nI'm comparing the two versions to see if I can convert the Django version into a new Grappelli compatible template.  But its going very slow for me since I don't know any of the history behind the Grappelli changes!  I think I'll put this on hold and wait for your update....\n. Trying to update my Dev setup to verify Grapelli changes, I ran into a really neat problem with File Browser!\n\nPIP made me update it to V9.  Then a PIP CHECK told me File Browser was not recommended for my new Grappelli version.  So I told PIP to update FB - thinking there would be a new version with updated requirements specs.  And it DOWNGRADED my Grappelli back to 2.8!!!  Below is the console session.\n\n```\n(py27dj110)rcooke@developer1:~/source/GNVO/django-DEV$ pip check\ndjango-filebrowser 3.7.2 has requirement django-grappelli<2.9,>=2.8, but you have django-grappelli 2.9.1.\n\n\n(py27dj110)rcooke@developer1:~/source/GNVO/django-DEV$ pip show django-filebrowser\nName: django-filebrowser\nVersion: 3.7.2\nSummary: Media-Management with Grappelli\nHome-page: http://django-filebrowser.readthedocs.org\nAuthor: Patrick Kranzlmueller, Axel Swoboda (vonautomatisch)\nAuthor-email: office@vonautomatisch.at\nLicense: BSD\nLocation: /home/rcooke/.virtualenvs/py27dj110/lib/python2.7/site-packages\nRequires: django-grappelli\n\n\n(py27dj110)rcooke@developer1:~/source/GNVO/django-DEV$ pip install --upgrade django-filebrowser\nRequirement already up-to-date: django-filebrowser in /home/rcooke/.virtualenvs/py27dj110/lib/python2.7/site-packages\nCollecting django-grappelli<2.9,>=2.8 (from django-filebrowser)\n  Downloading django_grappelli-2.8.3-py2.py3-none-any.whl (1.6MB)\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1.6MB 594kB/s \nInstalling collected packages: django-grappelli\n  Found existing installation: django-grappelli 2.9.1\n    Uninstalling django-grappelli-2.9.1:\n      Successfully uninstalled django-grappelli-2.9.1\nSuccessfully installed django-grappelli-2.8.3\n(py27dj110)rcooke@developer1:~/source/GNVO/django-DEV$ \n```\n. I posted that here as a warning to others looking to update their setups.  If one was not aware of this, and did a generic \"update all\" packages, Grappelli would likely wind up staying at 2.8.x - depending upon the order of the update checks.\n\nI also posted it to [FileBrowser](https://github.com/sehmaschine/django-filebrowser/issues/326).\n. The other issue is it is repeating the HELP message text on every row.  So rows are at least twice as tall as necessary.  Especially since half of the \"info\" is the same string repeated over and over underneath each field.\r\n\r\nIf your against having an icon, why not make the help text into a hover-over message on the field or the column title?. @parsch Thanks!  But -1 for not linking to what \"description\" is!\r\n\r\nAre you referring to this?:\r\n\r\n[Field API reference - description](https://docs.djangoproject.com/en/1.10/ref/models/fields/#django.db.models.Field.description)\r\n\r\nAnd I don't see any Grappelli docs on how it would be used with or instead of help_text.. Or maybe you meant:\r\n\r\n[ModelAdmin.fieldsets](https://docs.djangoproject.com/en/dev/ref/contrib/admin/#django.contrib.admin.ModelAdmin.fieldsets)\r\n\r\nThe Description item is mentioned here too.  But there is a note that it is not always displayed.\r\n\r\n\r\n## description\r\n\r\nA string of optional extra text to be displayed at the top of each fieldset, \r\nunder the heading of the fieldset. _This string is not rendered for TabularInline_ \r\n_due to its layout._\r\n\r\n\r\n\r\n\r\n. Heh.  One quick fix is to hide the help text with some JS in JQuery:\r\n\r\n```\r\ndjango.jQuery(document).ready(function($){\r\n  $(\".inline-group .grp-help\").hide()\r\n});\r\n\r\n```\r\nI'm trying to learn enough JS/JQuery to copy or move the HELP TEXT someplace else.  Either as the \"title\" text for the input field, or the column title.  Which would be a lot easier to do in the template.. Heh.  Ok.  So I figured out the Jquery to copy the help text message onto the cell container's \"title\" attribute.  So hovering the mouse over the cell pops it up.  I might try and figure out how to target the input cell itself, if users complain the pop ups are too distracting this way.\r\n\r\n```\r\ndjango.jQuery(document).ready(function($){\r\n  $(\".inline-group .grp-help\").hide()\r\n  $('.inline-group .grp-help').each(function() {\r\n    this.parentNode.title = this.innerHTML;\r\n  });\r\n});\r\n\r\n```\r\n. I'll take that as a \"No\" then?\r\n\r\nI implemented a work-around.  I subclassed the Number widget as \"MyNumberWidget\" and used the Admin widget override to replace the default.  Thankfully that seems to work, now my number fields have the up/down arrows for changing values.\r\n\r\nHaving those is a requirements for this app.  And of course I said \"no problem, a near zero effort change\".....  Argh.\r\n\r\nI can post the code snippet here in case somebody might need it one day.\r\n . ## description\r\n\r\nA string of optional extra text to be displayed at the top of each fieldset, \r\nunder the heading of the fieldset. _This string is not rendered for TabularInline_ \r\n_due to its layout._\r\n\r\n[ModelAdmin.fieldsets](https://docs.djangoproject.com/en/dev/ref/contrib/admin/#django.contrib.admin.ModelAdmin.fieldsets)  Django 1.10\r\n\r\n\r\nAccording to the Django docs, this will not work with Tabular inlines.  I don't understand your aversion to Django's solution.\r\n\r\nBut you could make an option flag to enable it for tabular inlines, so its not a magical new behavior.  Or define a new option - like hover-over for the column title cell and/or any cell in that column. Or define a number of options so the user can pick which one they want to best suit their circumstances.\r\n. Heh.  One quick fix is to hide the help text with some JS in JQuery:\r\n\r\n```\r\ndjango.jQuery(document).ready(function($){\r\n  $(\".inline-group .grp-help\").hide()\r\n});\r\n\r\n```\r\nI'm trying to learn enough JS/JQuery to copy or move the HELP TEXT someplace else.  Either as the \"title\" text for the input field, or the column title.  Which would be a lot easier to do in the template.. Heh.  Ok.  So I figured out the Jquery to copy the help text message onto the cell container's \"title\" attribute.  So hovering the mouse over the cell pops it up.  I might try and figure out how to target the input cell itself, if users complain the pop ups are too distracting this way.\r\n\r\n```\r\ndjango.jQuery(document).ready(function($){\r\n  $(\".inline-group .grp-help\").hide()\r\n  $('.inline-group .grp-help').each(function() {\r\n    this.parentNode.title = this.innerHTML;\r\n  });\r\n});\r\n\r\n```\r\n. Grappelli 2.4.5 with Django 1.5.1\n\nGrappelli should respect the use of ModelAdmin.queryset.\n\nThat is, if defined, Grappelli should use it in place of :\nqs = super(AutocompleteLookup, self).get_queryset()\n\n(line 132 in related.py, function AutocompleteLookup.get_queryset)\n\nFor example, in django_extensions, I proposed replacing the generic queryset line with:\n\n```\n        try:\n            # See if there is a custom admin queryset:\n            queryset = model.queryset(request)\n        except:\n            # If not, then make our own:\n            queryset = model._default_manager.all()\n```\n\nOr be more clever and see if the function exists first.  try/except is just my quick and dirty method of testing fixes.\n. Sorry to confuse the issue.  I thought it would be clever for Grappelli to improve upon the limit_choices_to feature.  \n\nBut really, all that is needed is for Grappelli to support a feature added in Django 1.1.\n\nAnd \"yes\" that affects the base queryset all \"admin\" functions work with.\n. Sure.\nPaste code snippets here OK?  Or do you want something more sophisticated?\n. Actually, the simplest example is on Djangodocs:\nhttps://docs.djangoproject.com/en/1.5/ref/contrib/admin/#django.contrib.admin.ModelAdmin.queryset\n\nThis goes in your admin.py for the model:\n\n```\nclass MyModelAdmin(admin.ModelAdmin):\n    def queryset(self, request):\n        qs = super(MyModelAdmin, self).queryset(request)\n        if request.user.is_superuser:\n            return qs\n        return qs.filter(author=request.user)\n```\n\nThis limits all records used in Admin to those authored by the logged in user.\n\nThis is what I use:\n\n```\ndef queryset(self, request):\n    qs = super(TimesheetAdmin, self).queryset(request)\n    if request.user.is_superuser:\n        self.message_user(request, \"Warning: This is the ADMINISTRATOR view!!\", 'warning')\n        return qs\n    return qs.filter(site__id=request.session['site'].id).filter(staff__id=request.user.id)\n```\n\nIf the user is \"admin\" they see or work-with all records.  Otherwise, they only see records that belong to the same site as they are logged in under.\n\nThis required I add a FK field called \"site\" to all my models I want restricted this way.  And I have to have this code in all the corresponding admin.py files.  All of my internal admin linked logic works perfect.  Then I noticed that all of my FK lookups (when you clicked on the select list or Grappellis' magnifying glass) showed ALL records, regardless of what \"site\" they belonged to!  \n\nI found this function to restrict the admins normal FK and M2M look up selection list:\nhttps://docs.djangoproject.com/en/1.5/ref/contrib/admin/#django.contrib.admin.ModelAdmin.formfield_for_foreignkey\n\nAnd this code works for the basic admin select widgets:\n\n```\ndef formfield_for_foreignkey(self, db_field, request, **kwargs):\n    if db_field.name in ('task', ):\n        kwargs[\"queryset\"] = Tasks.objects.get_query_set().filter(site__id=request.session['site'].id)\n    if db_field.name in ('job', ):\n        kwargs[\"queryset\"] = Milestones.objects.get_query_set().filter(site__id=request.session['site'].id)\n    return super(TimesheetAdmin, self).formfield_for_foreignkey(db_field, request, **kwargs)\n```\n\nI'm testing django_extensions auto complete lookup as I posted above, I figured out how to \"fix\" their queryset.\n\nThat just leaves Grappelli.  I thought a ticket would be easier than forking and issuing a pull request. \n. Add this to your head revision and I can clone it onto my test server and verify it works.\n. Excellent, thanks.  Let me know if you need anything.  Time to head home for a pint for me.\n. Hm.  By the way, the zen of lookups is such that restricting a related lookup might not be valid.  Whereas restricting a \"pick list\" would be valid.\n\nBecause if something is already linked to a record, then its allowed to be.  Whereas the latter is going to make a link and should be subject to restrictions.\n\nOf course we would have delve into the nuances of a possible security risk.  Defeat a SAS system just by changing one value in a GET command...  not good.\n\nBased on my early testing - when I tried replacing the default manger - changing the Related lookup class would only work if all the relations are to records that will pass whatever restriction is placed upon them in the admin queryset.  Should work, so long as all data was created AFTER the restriction was added.  \n. Did you want me to patch my code with that and test?\n\nOr is this in the master revision?  I can check it out and run it, so long as there is nothing in there that could cause me other issues.\n. I don't understand why your trying to find the \"current\" admin site.  All you need is the model class, which you have already.\n\nLike what I did to django-extension's autosearch lookup to fix the same problem:\n\n```\n    try:\n        # See if there is a custom admin queryset:\n        queryset = model.queryset(request)\n    except:\n        # If not, then make our own:\n        queryset = model._default_manager.all()\n```\n\nWhich is nearly identical to your code, except the lack of messing with the admin registry.\n. Did you notice that there is another way to fix this?\n\nYou could defer your FK selection to the admin's code.  That would let users customize your code the same way they customize the admin's FK/M2M select lists:\n\n```\nformfield_for_foreignkey()\n```\n\nheh.  Or both.\n. oh sh*t.  The line above my monkey patch in django-extensions is:\n\n```\nmodel = models.get_model(app_label, model_name)\n```\n\nNuts.  I commented-out my Try/Except to see what happens:\n\n```\nFile \"/home/rcooke/django-extensions/django_extensions/admin/__init__.py\", line 107, in foreignkey_autocomplete\n  queryset = model.queryset(request)\nAttributeError: type object 'Company' has no attribute 'queryset'\n```\n\nYou are correct!\n. I'm researching into how one hosts multiple admin sites, in the theory that would suggest a way to catalog what is available.\n\nDjango docs are very detailed here:\n- https://docs.djangoproject.com/en/dev/ref/contrib/admin/#adminsite-objects\n\nEach site has to be an instance of the base class, so worst case you could do a getattr on global memory checking each object to see if its an instance of the class.  Since the constructor takes a \"name\" for the site, I'm hoping there is an report or list of what sites exist....\n. The last line of `django.contrib.admin.sites` (after AdminSite()) is:\n\n```\nsite = AdminSite()\n```\n\nAnd since most people follow the tutorial and examples, we can easily determine the default (usually only) Admin Site instance. \n\nHowever, I think we actually have TWO problems.\n1. Find out what admin sites exist.\n2. What do we do if the model is registered with two or more of them?\n\nAnd the second problem is _\"worse\"_ than the first.\n\nI posted to Django's user forum on this. Django discussion link:\n- https://groups.google.com/forum/#!topic/django-users/azFcdcxK0n0\n. I don't understand \"current admin site\".  It seems to me that multiple sites all live in memory and are active at the same time.  The only differentiation between them is the URL used to access them.\n\nAh.  Maybe that is how to best identify which site the current request is associated with:  inspect the GET parameters.\n. Right.  Which would let us (after making a list of all the admin sites in memory) identify which site has the indicated name.\n\nIts too bad Django does not make an instance list of the AdminSites.  Just a couple of lines in the contrib file would do it.\n. Yeah, working on it.  I'm trying out an idea - inspecting the model in memory to see if there is anyway to link it back to the admin site.  When I do a dir() on the model class returned by `models.get_model(app_label, model_name)` I see an object named `'get_absolute_url'`.  Now where did that come from?\n\nAdding the admin site name or class instance to the (new) settings object  for specifying related and lookup fields (in place of the static method) is not too bad of an idea.\n. Heh.  I forgot about that.  I adopted a pre-existing project for managing company and contact info `django-contacts`:\n- https://github.com/myles/django-contacts\n\nThis clever thing has `get_absolute_url` defined as a `@permalink` function in the data model.  So, it might work but only for those data classes that define it.  No different from making users specify their adminsite model in settings.\n\nI was hoping the AdminSite code would add an attribute to the data model class that would link or at least identify the two.\n\nThis is the function I spotted on the model:\n\n```\n@permalink\ndef get_absolute_url(self):\n    return ('contacts_company_detail', None, {\n        'pk': self.pk,\n        'slug': self.slug,\n    })\n```\n. Sigh.  Its too bad the admin site does not publish a signal when a model is registered....\n. Not actively.  My client has not granted a budget for fixing it properly.  He had me hack my grappelli files to use the admin manager in place of the base manager - I only have one admin site so that works well. \n\nI also discovered the issue extends to filters.  That is, when you put a filter on a table view the filter pulls its choices from the base file manager, causing it to show choices that do not belong to the sub-set of records being displayed.\n\nWhen this client advances to needing a second admin site I can slot this fix in.  However, I can't say when - if ever - that will happen.  They may decide to keep the admin as-is and do custom views for the task-driven stuff they want.\n.\n. Another related wrinkle I discovered is that the FILTERS on any table view in admin with Grappelli do not use this limited query.\n\nThis results in the filter displaying choices that are not actually available to the current user.\n\nFor example, in my contacts database. One company division has a few hundred contacts. A new company division just started.\n\nWhen the new company division users logged in to start to add in their contacts, the FILTER for \"company name\" shows ALL of the companies that belong to the older division.\n\nAttempting to select any gets a \"record not found\" error.\n\nI was just about to go looking for the code that builds the list for FILTER.\n. Hah.  Never mind.  As you pointed out, this is handled by Django and admin.  I failed to head the instructions for configuring a filter to limit the queryset, in this section of the docs after \"new in Django 1.4\":\nhttps://docs.djangoproject.com/en/1.5/ref/contrib/admin/#django.contrib.admin.ModelAdmin.list_filter\n. Another related wrinkle I discovered is that the FILTERS on any table view in admin with Grappelli do not use this limited query.\n\nThis results in the filter displaying choices that are not actually available to the current user.\n\nFor example, in my contacts database. One company division has a few hundred contacts. A new company division just started.\n\nWhen the new company division users logged in to start to add in their contacts, the FILTER for \"company name\" shows ALL of the companies that belong to the older division.\n\nAttempting to select any gets a \"record not found\" error.\n\nI was just about to go looking for the code that builds the list for FILTER.\n. Hah.  Never mind.  As you pointed out, this is handled by Django and admin.  I failed to head the instructions for configuring a filter to limit the queryset, in this section of the docs after \"new in Django 1.4\":\nhttps://docs.djangoproject.com/en/1.5/ref/contrib/admin/#django.contrib.admin.ModelAdmin.list_filter\n. I added a note about this to the ticket from last year.\n\nSame road block. Django is not making a list of admin site objects so how does the code \"back track\"?\n\nFor my project we only have one admin site, so I made a small hack in Grappelli. It's checked in under my fork if you want it.\n\nRichard Cooke\n(Sent from my iPhone)\n\n> On Jan 13, 2014, at 6:12 AM, Curtis Maloney noreply@github.com wrote:\n> \n> Makes sense to be, but I can't see how you can reliably map from Model to Admin, especially since there could be more than one.\n> \n> My need for this feature may, in fact, go away soon with a patch I submitted to django-model-utils, but if there was one case, there could be more.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Yes, but since my hack works the client has not approved any changes.\n\nIf a situation comes up where I can switch to that method I will.  I would have to pull in your changes - which is fine since there are other changes I want.\n\nHm.  Maybe I can piggyback this on top of the next update to our library code.\n\nDid you (or anybody) ever post a suggestion to Django to keep a list or dict of admin sites? \n\nRegards,\n\nRichard Cooke\nTurnkey Automation Inc\nrcooke@tnky.ca\n\nOn Jan 13, 2014, at 9:44 AM, Patrick Kranzlmueller noreply@github.com wrote:\n\n> @rcooke did you take a look at the code with issue #403?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. I want something similar.  Client repairs industrial electronics, there is a db of \"parts\" needed for each repair. The technicians have to type in the part specification every time such as \"Resistor, 220 Ohm, 1/2Watt, 5%, SMD\".\n\nThis is a Character field, their lives would be a LOT easier if I could give them an auto complete that searches all the previous Part row entries.\n\nIt would help keep descriptions orderly too.\n. Does this apply to any editable in place inlines?  I have one admin form that uses this, and have not observed a problem in testing with Django 1.10 yet.  I will dig deeper if I know what I'm looking for?\n. Likely because it still works!  heheh\n\nActually, ONE big issue with it is lack of support by Mobile browsers!  It catches unexpected exits using a DOM model event that fires before the web page is deleted from memory.  Works great on desktops.  But, all mobile browsers have decided to NOT implement it!  \n\nAll of them saying its for \"user security\", since some nasty websites use that function to try and keep the user on their site.\n\nTheir answer is to write an APP for their device.  Then you can handle that event any way you like.\n\nIts enough to make me think its part of some master plan to force developers to develop for their platform!\n. I have been testing Django 1.10 with Grappelli for a week without problems.  I just pushed the update to the production server this weekend, and everything seems to be working.  Is there something specific inside Grappelli that needs updating for Django 1.10?\n\nI reviewed the other 2 items with this tag. Have not seen a problem with them yet.\n. Ah, my users pointed out to me that Dj1.10 Admin tabular inline has some enhancements that are missing from the current Grappelli version.\n\nI'm comparing the two versions to see if I can convert the Django version into a new Grappelli compatible template.  But its going very slow for me since I don't know any of the history behind the Grappelli changes!  I think I'll put this on hold and wait for your update....\n. Trying to update my Dev setup to verify Grapelli changes, I ran into a really neat problem with File Browser!\n\nPIP made me update it to V9.  Then a PIP CHECK told me File Browser was not recommended for my new Grappelli version.  So I told PIP to update FB - thinking there would be a new version with updated requirements specs.  And it DOWNGRADED my Grappelli back to 2.8!!!  Below is the console session.\n\n```\n(py27dj110)rcooke@developer1:~/source/GNVO/django-DEV$ pip check\ndjango-filebrowser 3.7.2 has requirement django-grappelli<2.9,>=2.8, but you have django-grappelli 2.9.1.\n\n\n(py27dj110)rcooke@developer1:~/source/GNVO/django-DEV$ pip show django-filebrowser\nName: django-filebrowser\nVersion: 3.7.2\nSummary: Media-Management with Grappelli\nHome-page: http://django-filebrowser.readthedocs.org\nAuthor: Patrick Kranzlmueller, Axel Swoboda (vonautomatisch)\nAuthor-email: office@vonautomatisch.at\nLicense: BSD\nLocation: /home/rcooke/.virtualenvs/py27dj110/lib/python2.7/site-packages\nRequires: django-grappelli\n\n\n(py27dj110)rcooke@developer1:~/source/GNVO/django-DEV$ pip install --upgrade django-filebrowser\nRequirement already up-to-date: django-filebrowser in /home/rcooke/.virtualenvs/py27dj110/lib/python2.7/site-packages\nCollecting django-grappelli<2.9,>=2.8 (from django-filebrowser)\n  Downloading django_grappelli-2.8.3-py2.py3-none-any.whl (1.6MB)\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1.6MB 594kB/s \nInstalling collected packages: django-grappelli\n  Found existing installation: django-grappelli 2.9.1\n    Uninstalling django-grappelli-2.9.1:\n      Successfully uninstalled django-grappelli-2.9.1\nSuccessfully installed django-grappelli-2.8.3\n(py27dj110)rcooke@developer1:~/source/GNVO/django-DEV$ \n```\n. I posted that here as a warning to others looking to update their setups.  If one was not aware of this, and did a generic \"update all\" packages, Grappelli would likely wind up staying at 2.8.x - depending upon the order of the update checks.\n\nI also posted it to [FileBrowser](https://github.com/sehmaschine/django-filebrowser/issues/326).\n. The other issue is it is repeating the HELP message text on every row.  So rows are at least twice as tall as necessary.  Especially since half of the \"info\" is the same string repeated over and over underneath each field.\r\n\r\nIf your against having an icon, why not make the help text into a hover-over message on the field or the column title?. @parsch Thanks!  But -1 for not linking to what \"description\" is!\r\n\r\nAre you referring to this?:\r\n\r\n[Field API reference - description](https://docs.djangoproject.com/en/1.10/ref/models/fields/#django.db.models.Field.description)\r\n\r\nAnd I don't see any Grappelli docs on how it would be used with or instead of help_text.. Or maybe you meant:\r\n\r\n[ModelAdmin.fieldsets](https://docs.djangoproject.com/en/dev/ref/contrib/admin/#django.contrib.admin.ModelAdmin.fieldsets)\r\n\r\nThe Description item is mentioned here too.  But there is a note that it is not always displayed.\r\n\r\n\r\n## description\r\n\r\nA string of optional extra text to be displayed at the top of each fieldset, \r\nunder the heading of the fieldset. _This string is not rendered for TabularInline_ \r\n_due to its layout._\r\n\r\n\r\n\r\n\r\n. Heh.  One quick fix is to hide the help text with some JS in JQuery:\r\n\r\n```\r\ndjango.jQuery(document).ready(function($){\r\n  $(\".inline-group .grp-help\").hide()\r\n});\r\n\r\n```\r\nI'm trying to learn enough JS/JQuery to copy or move the HELP TEXT someplace else.  Either as the \"title\" text for the input field, or the column title.  Which would be a lot easier to do in the template.. Heh.  Ok.  So I figured out the Jquery to copy the help text message onto the cell container's \"title\" attribute.  So hovering the mouse over the cell pops it up.  I might try and figure out how to target the input cell itself, if users complain the pop ups are too distracting this way.\r\n\r\n```\r\ndjango.jQuery(document).ready(function($){\r\n  $(\".inline-group .grp-help\").hide()\r\n  $('.inline-group .grp-help').each(function() {\r\n    this.parentNode.title = this.innerHTML;\r\n  });\r\n});\r\n\r\n```\r\n. I'll take that as a \"No\" then?\r\n\r\nI implemented a work-around.  I subclassed the Number widget as \"MyNumberWidget\" and used the Admin widget override to replace the default.  Thankfully that seems to work, now my number fields have the up/down arrows for changing values.\r\n\r\nHaving those is a requirements for this app.  And of course I said \"no problem, a near zero effort change\".....  Argh.\r\n\r\nI can post the code snippet here in case somebody might need it one day.\r\n . ",
    "mpasternak": "https://github.com/yourlabs/django-autocomplete-light\n. Issue description on django-autocomplete-light side: https://github.com/yourlabs/django-autocomplete-light/issues/52\n. Thanks!\n. Hi,\n\nI saw, that you updated the stable/2.4.x branch. I tested this branch today with django-autocomplete-light test_project and it works okay. Out of pure curiosity I'd like to ask you -- why did you update the stable/2.4.x branch and not the master branch?\n\nThanks for your time!\n. THANKS MAN, YOU'RE THE BEST!!!11shiftone :+1: :+1: :+1: :+1: :+1: :+1: :+1: :+1: \n. Thanks & kudos to you for sharing a & caring about a GREAT project!!\n. Hi,\n\nthanks for reviewing my code,\n\nas docs say https://docs.djangoproject.com/en/dev/topics/i18n/translation/ , I should use something along those lines in template: \n\n```\n{% load i18n %}\n{% get_current_language as LANGUAGE_CODE %}\n```\n\n... so I guess I'll update my code accordingly. \n\nAlso, I just checked with an empty project on Django 1.7 -- with such lines in template code as above, I will get \"en-us\" as LANGUAGE_CODE, even if I have USE_I18N, USE_L10N set to False AND d.c.context_processors.i18n removed from TEMPLATE_CONTEXT_PROCESSORS. \n. Please re-review. \n. Howdy, any progress on that? I like it :+1:  :)\n. Yes, that's the idea. The datepicker comes with \"en-us\" by default, so there is need to include locale stuff for it for every other locale.\n\nYes, I have checked the codes for other languages. As you can see here: https://github.com/jquery/jquery-ui/tree/master/ui/i18n and here: https://docs.djangoproject.com/en/dev/topics/i18n/ they're pretty much the same case/format, as - at least in theory - this is normalized by ISO, https://www.gnu.org/software/gettext/manual/html_node/Usual-Language-Codes.html\n. Would you like to distribute calendar locale files together with grappelli\nor to have them in separate package?\n\nIn my projects, I use django-bower (which is just a tiny layer over bower)\nfor downloading javascript dependencies, but I think that for grappelli it\ncould be overkill.\n\nIn my \"localized calendar\" branch, I keep the locale file inside grappelli\nsource tree. If this is what we decide for the main branch (to keep the\nlocale files in grappelli source tree) - and, IMO, this is not a bad option\n- I can rename them to match to Django locale codes.\n\nAlso, if you ask me - having uppercase letters in file names is a possible\nproblem with portability. We all know, that Windows doesn't care about\nupper/lower case and in the past, there were some problems with file names,\nespecially those shorter, than 8 characters.\n\n2015-01-02 15:20 GMT+01:00 Patrick Kranzlmueller notifications@github.com:\n\n> @mpasternak https://github.com/mpasternak I've given this another try,\n> but ... when you look at the django example with \"de_AT\" which is\n> represented as \"de-at\" with the frontend, no such datepicker file exists\n> which leads to a 404. Besides, the same is true with \"pt_BR\" (because the\n> jquery UI file contains uppercase characters).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/pull/528#issuecomment-68529251\n> .\n\n## \n\nPozdrawiam,\nMicha\u0142 Pasternak\n\ud83d\udcf1 +48 793 66 87 33\n. OK, this sounds reasonable. As a maintainer of a software package, that\nconsists of many elements, this sounds perfectly reasonable.\n\nFrom my point of view, on the other hand, if I want locale codes from\nDjango to be translated to locale codes of jquery, I need to write some\ncode, to get the result from a mapping. Maybe I am not aware of some\nsimpler method, correct me if I am wrong, but it looks like it either\nrequires some extra JavaScript code, or a template tag or some middleware\nstuff. And, as a result, we will be running a line of code just to serve a\nstatic file, just to translate its name from one version to another.\n\nAs the locale files will not be updated too often (and, as the locale stuff\nis only for calendar - at least, for now) - I suggest that we just rename\nthem and add them to the repository. If you disagree with this approach as\nit will possibly make things harder to maintain in the future, please let\nme know what solution would you like more: javascript code, middleware\nmodification (adding some extra parameters to request) or a template tag.\nOr, a custom view (but using a custom Django view, running Python code, to\nserve a small static file seems not optimal to me).\n\n... or, in case there are some more methods, let me know.\n\n2015-01-05 14:19 GMT+01:00 Patrick Kranzlmueller notifications@github.com:\n\n> I prefer to have the locale files with grappelli \u2013 but only if we don't\n> need to rename the files (because renaming makes every jQuery update more\n> difficult than necessary).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/pull/528#issuecomment-68706293\n> .\n\n## \n\nPozdrawiam,\nMicha\u0142 Pasternak\n\ud83d\udcf1 +48 793 66 87 33\n. Well, what solution would suit you, Camilo?\n\n2015-02-04 21:56 GMT+01:00 Camilo Nova notifications@github.com:\n\n> This is so annoying, I'm getting 500 errors because sometimes grappelli is\n> looking for the en-us localized file and I have many locales active on the\n> site, could be any random language and I don't want to add all the file\n> languages.\n> \n> At least can we silently move on if the file does not exist?\n> \n> My file storage check that every referenced file must exists, so I cannot\n> live with a 404 on those files.\n> \n> Can I help somehow to fix this?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/pull/528#issuecomment-72937128\n> .\n\n## \n\nPozdrawiam,\nMicha\u0142 Pasternak\n\ud83d\udcf1 +48 793 66 87 33\n. I'd add an empty file for en-us locale. If used in production with tools\nlike django-compresor, there is no overhead. What do you think?\n5 mar 2015 22:47 \"Camilo Nova\" notifications@github.com napisa\u0142(a):\n\n> @mpasternak https://github.com/mpasternak any thoughts ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/pull/528#issuecomment-77459151\n> .\n. I'll take care of this.\n\nThank you guys for all the feedback and support.\n6 mar 2015 09:33 \"Patrick Kranzlmueller\" notifications@github.com\nnapisa\u0142(a):\n\n> I'm with @camilonova https://github.com/camilonova here, because there\n> doesn't seem to be a clean solution. Stay with en and let people take care\n> about translations (it's pretty easy anyway).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/pull/528#issuecomment-77523683\n> .\n. Hi guys,\n\nfirst of all, thank you very much for all your suggestions. And, thank you even more for not ignoring my needs, because for my end-users to see the week starting on Sunday is definitely not normal. \n\nSecond, thank you very much for caring about such a great piece of software like django-grappelli.\n\nI have did some plumbing in order to:\n- fix @sehmaschine problem with \"de-at\" locale,\n- fix @camilonova problem with file-not-found,\n- include new translations,\n- fail gracefully,\n- be tolerant if LANGUAGE_CODE in settings.py wrong.\n\nPlease check my latest commits. Thanks!\n. Hey Patrick,\n\nno offence taken,\n\nI'm doing Django stuff for some time (as in ~5 yrs or so) and I've already\nhad enough trouble with deployment, I realize that there's a magnitude of\nsites out there and it is pretty easy to break something for someone else\nwith a setup I've never thought of,\n\nthanks to wonderful tools at github, it's trival to keep an up-to-date\npatch in my branch. If you ever decide support it or to include it, you\nknow where to find me.\n\nRegards,\n\n2015-03-12 15:48 GMT+01:00 Patrick Kranzlmueller notifications@github.com:\n\n> Closing this issue. please refer to #577\n> https://github.com/sehmaschine/django-grappelli/issues/577 for the 500\n> ... other than that, we decided to not include the translation files\n> because of the issues mentioned before. thanks everyone for participating\n> and thanks for the thoughts/patches. I'm sorry that we are not able to\n> include this ... but there doesn't seem to be a straightforward and\n> maintainable solution.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/pull/528#issuecomment-78494248\n> .\n\n## \n\nPozdrawiam,\nMicha\u0142 Pasternak\n\ud83d\udcf1 +48 793 66 87 33\n. Hi, thank you for your report,\n\nI'm using django-compressor too and it's pretty crucial to me to have it working. Please see my latest changes in my branch here https://github.com/sehmaschine/django-grappelli/pull/528#commits-pushed-8aa4387 and see if they fix anything.\n\n@sehmaschine , do we want to support django-compressor out of the box?\n\nBecause, if we do, I'll just add a conditional there and it will cause generation of compressed javascript amalgamation file, that will contain all the translations for the jquery UI datepicker. \n\nThe base.html will look like this (in pseudo-code, I don't remember the exact tags)\n\n```\n{% if COMPRESS_ENABLED %}\n  {% compress js %}\n  ...\n  ... a list of all the jquery ui translation files, that will be compressed into one by django-compressor\n  ...\n  {% endcompress %}\n{% else %}\n  ... current code\n{% endif %}\n```\n\nI guess jquery.ui.datepicker does not care about how many locales we include into Javascript code, as it uses only one of them. \n\nIn my code, I am using customized, modified Grappelli HTML templates that use django-compressor heavily and in this case (localized calendar) I'd just include all the translations I want to support, perhaps in the page <head>, in the {%compress%} block. \n. Well, that file was referenced in my branch.\n\nBut  I also don't understand how django-compressor would look for files\noutside {% compress %} block. Michael, did you modify files on your own?\n12 mar 2015 18:13 \"Patrick Kranzlmueller\" notifications@github.com\nnapisa\u0142(a):\n\n> what I don't get here: why would compress look for ui.datepicker-en-us.js\n> since that file is never being referenced within a termplate (as mentioned\n> before, that file doesn't even exist with jqueryUI).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/issues/577#issuecomment-78532680\n> .\n. I think it will be gone when you revert my commit with jQuery calendar\nlocalization\n13 mar 2015 09:46 \"Patrick Kranzlmueller\" notifications@github.com\nnapisa\u0142(a):\n\n> I'm about to add a new release, but I would like this issue to be solved\n> before. So please let me know if there's any additional information.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/issues/577#issuecomment-78871107\n> .\n. Well, this is somehow strange to me too, because I thought I was working in\na branch and people report bugs about my branch somehow... And those are\nnot people interested in jQuery ui localization... How would be that\npossible?\n\nIf you did not merge my branch with master, I think grappelli is okay and\nwe can close this. As long as there are no special tags including jQuery ui\ndate picker localization at the bottom of base.html (or base_site.html),\nthere is no chance for this bug to occur.\n\nPerhaps those guys downloaded my branch somehow but report issues here. No\nidea.\n13 mar 2015 10:50 \"Patrick Kranzlmueller\" notifications@github.com\nnapisa\u0142(a):\n\n> which commit exactly? the localized calendar has not been commited IMO.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/issues/577#issuecomment-78892649\n> .\n. https://github.com/yourlabs/django-autocomplete-light\n. Issue description on django-autocomplete-light side: https://github.com/yourlabs/django-autocomplete-light/issues/52\n. Thanks!\n. Hi,\n\nI saw, that you updated the stable/2.4.x branch. I tested this branch today with django-autocomplete-light test_project and it works okay. Out of pure curiosity I'd like to ask you -- why did you update the stable/2.4.x branch and not the master branch?\n\nThanks for your time!\n. THANKS MAN, YOU'RE THE BEST!!!11shiftone :+1: :+1: :+1: :+1: :+1: :+1: :+1: :+1: \n. Thanks & kudos to you for sharing a & caring about a GREAT project!!\n. Hi,\n\nthanks for reviewing my code,\n\nas docs say https://docs.djangoproject.com/en/dev/topics/i18n/translation/ , I should use something along those lines in template: \n\n```\n{% load i18n %}\n{% get_current_language as LANGUAGE_CODE %}\n```\n\n... so I guess I'll update my code accordingly. \n\nAlso, I just checked with an empty project on Django 1.7 -- with such lines in template code as above, I will get \"en-us\" as LANGUAGE_CODE, even if I have USE_I18N, USE_L10N set to False AND d.c.context_processors.i18n removed from TEMPLATE_CONTEXT_PROCESSORS. \n. Please re-review. \n. Howdy, any progress on that? I like it :+1:  :)\n. Yes, that's the idea. The datepicker comes with \"en-us\" by default, so there is need to include locale stuff for it for every other locale.\n\nYes, I have checked the codes for other languages. As you can see here: https://github.com/jquery/jquery-ui/tree/master/ui/i18n and here: https://docs.djangoproject.com/en/dev/topics/i18n/ they're pretty much the same case/format, as - at least in theory - this is normalized by ISO, https://www.gnu.org/software/gettext/manual/html_node/Usual-Language-Codes.html\n. Would you like to distribute calendar locale files together with grappelli\nor to have them in separate package?\n\nIn my projects, I use django-bower (which is just a tiny layer over bower)\nfor downloading javascript dependencies, but I think that for grappelli it\ncould be overkill.\n\nIn my \"localized calendar\" branch, I keep the locale file inside grappelli\nsource tree. If this is what we decide for the main branch (to keep the\nlocale files in grappelli source tree) - and, IMO, this is not a bad option\n- I can rename them to match to Django locale codes.\n\nAlso, if you ask me - having uppercase letters in file names is a possible\nproblem with portability. We all know, that Windows doesn't care about\nupper/lower case and in the past, there were some problems with file names,\nespecially those shorter, than 8 characters.\n\n2015-01-02 15:20 GMT+01:00 Patrick Kranzlmueller notifications@github.com:\n\n> @mpasternak https://github.com/mpasternak I've given this another try,\n> but ... when you look at the django example with \"de_AT\" which is\n> represented as \"de-at\" with the frontend, no such datepicker file exists\n> which leads to a 404. Besides, the same is true with \"pt_BR\" (because the\n> jquery UI file contains uppercase characters).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/pull/528#issuecomment-68529251\n> .\n\n## \n\nPozdrawiam,\nMicha\u0142 Pasternak\n\ud83d\udcf1 +48 793 66 87 33\n. OK, this sounds reasonable. As a maintainer of a software package, that\nconsists of many elements, this sounds perfectly reasonable.\n\nFrom my point of view, on the other hand, if I want locale codes from\nDjango to be translated to locale codes of jquery, I need to write some\ncode, to get the result from a mapping. Maybe I am not aware of some\nsimpler method, correct me if I am wrong, but it looks like it either\nrequires some extra JavaScript code, or a template tag or some middleware\nstuff. And, as a result, we will be running a line of code just to serve a\nstatic file, just to translate its name from one version to another.\n\nAs the locale files will not be updated too often (and, as the locale stuff\nis only for calendar - at least, for now) - I suggest that we just rename\nthem and add them to the repository. If you disagree with this approach as\nit will possibly make things harder to maintain in the future, please let\nme know what solution would you like more: javascript code, middleware\nmodification (adding some extra parameters to request) or a template tag.\nOr, a custom view (but using a custom Django view, running Python code, to\nserve a small static file seems not optimal to me).\n\n... or, in case there are some more methods, let me know.\n\n2015-01-05 14:19 GMT+01:00 Patrick Kranzlmueller notifications@github.com:\n\n> I prefer to have the locale files with grappelli \u2013 but only if we don't\n> need to rename the files (because renaming makes every jQuery update more\n> difficult than necessary).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/pull/528#issuecomment-68706293\n> .\n\n## \n\nPozdrawiam,\nMicha\u0142 Pasternak\n\ud83d\udcf1 +48 793 66 87 33\n. Well, what solution would suit you, Camilo?\n\n2015-02-04 21:56 GMT+01:00 Camilo Nova notifications@github.com:\n\n> This is so annoying, I'm getting 500 errors because sometimes grappelli is\n> looking for the en-us localized file and I have many locales active on the\n> site, could be any random language and I don't want to add all the file\n> languages.\n> \n> At least can we silently move on if the file does not exist?\n> \n> My file storage check that every referenced file must exists, so I cannot\n> live with a 404 on those files.\n> \n> Can I help somehow to fix this?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/pull/528#issuecomment-72937128\n> .\n\n## \n\nPozdrawiam,\nMicha\u0142 Pasternak\n\ud83d\udcf1 +48 793 66 87 33\n. I'd add an empty file for en-us locale. If used in production with tools\nlike django-compresor, there is no overhead. What do you think?\n5 mar 2015 22:47 \"Camilo Nova\" notifications@github.com napisa\u0142(a):\n\n> @mpasternak https://github.com/mpasternak any thoughts ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/pull/528#issuecomment-77459151\n> .\n. I'll take care of this.\n\nThank you guys for all the feedback and support.\n6 mar 2015 09:33 \"Patrick Kranzlmueller\" notifications@github.com\nnapisa\u0142(a):\n\n> I'm with @camilonova https://github.com/camilonova here, because there\n> doesn't seem to be a clean solution. Stay with en and let people take care\n> about translations (it's pretty easy anyway).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/pull/528#issuecomment-77523683\n> .\n. Hi guys,\n\nfirst of all, thank you very much for all your suggestions. And, thank you even more for not ignoring my needs, because for my end-users to see the week starting on Sunday is definitely not normal. \n\nSecond, thank you very much for caring about such a great piece of software like django-grappelli.\n\nI have did some plumbing in order to:\n- fix @sehmaschine problem with \"de-at\" locale,\n- fix @camilonova problem with file-not-found,\n- include new translations,\n- fail gracefully,\n- be tolerant if LANGUAGE_CODE in settings.py wrong.\n\nPlease check my latest commits. Thanks!\n. Hey Patrick,\n\nno offence taken,\n\nI'm doing Django stuff for some time (as in ~5 yrs or so) and I've already\nhad enough trouble with deployment, I realize that there's a magnitude of\nsites out there and it is pretty easy to break something for someone else\nwith a setup I've never thought of,\n\nthanks to wonderful tools at github, it's trival to keep an up-to-date\npatch in my branch. If you ever decide support it or to include it, you\nknow where to find me.\n\nRegards,\n\n2015-03-12 15:48 GMT+01:00 Patrick Kranzlmueller notifications@github.com:\n\n> Closing this issue. please refer to #577\n> https://github.com/sehmaschine/django-grappelli/issues/577 for the 500\n> ... other than that, we decided to not include the translation files\n> because of the issues mentioned before. thanks everyone for participating\n> and thanks for the thoughts/patches. I'm sorry that we are not able to\n> include this ... but there doesn't seem to be a straightforward and\n> maintainable solution.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/pull/528#issuecomment-78494248\n> .\n\n## \n\nPozdrawiam,\nMicha\u0142 Pasternak\n\ud83d\udcf1 +48 793 66 87 33\n. Hi, thank you for your report,\n\nI'm using django-compressor too and it's pretty crucial to me to have it working. Please see my latest changes in my branch here https://github.com/sehmaschine/django-grappelli/pull/528#commits-pushed-8aa4387 and see if they fix anything.\n\n@sehmaschine , do we want to support django-compressor out of the box?\n\nBecause, if we do, I'll just add a conditional there and it will cause generation of compressed javascript amalgamation file, that will contain all the translations for the jquery UI datepicker. \n\nThe base.html will look like this (in pseudo-code, I don't remember the exact tags)\n\n```\n{% if COMPRESS_ENABLED %}\n  {% compress js %}\n  ...\n  ... a list of all the jquery ui translation files, that will be compressed into one by django-compressor\n  ...\n  {% endcompress %}\n{% else %}\n  ... current code\n{% endif %}\n```\n\nI guess jquery.ui.datepicker does not care about how many locales we include into Javascript code, as it uses only one of them. \n\nIn my code, I am using customized, modified Grappelli HTML templates that use django-compressor heavily and in this case (localized calendar) I'd just include all the translations I want to support, perhaps in the page <head>, in the {%compress%} block. \n. Well, that file was referenced in my branch.\n\nBut  I also don't understand how django-compressor would look for files\noutside {% compress %} block. Michael, did you modify files on your own?\n12 mar 2015 18:13 \"Patrick Kranzlmueller\" notifications@github.com\nnapisa\u0142(a):\n\n> what I don't get here: why would compress look for ui.datepicker-en-us.js\n> since that file is never being referenced within a termplate (as mentioned\n> before, that file doesn't even exist with jqueryUI).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/issues/577#issuecomment-78532680\n> .\n. I think it will be gone when you revert my commit with jQuery calendar\nlocalization\n13 mar 2015 09:46 \"Patrick Kranzlmueller\" notifications@github.com\nnapisa\u0142(a):\n\n> I'm about to add a new release, but I would like this issue to be solved\n> before. So please let me know if there's any additional information.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/issues/577#issuecomment-78871107\n> .\n. Well, this is somehow strange to me too, because I thought I was working in\na branch and people report bugs about my branch somehow... And those are\nnot people interested in jQuery ui localization... How would be that\npossible?\n\nIf you did not merge my branch with master, I think grappelli is okay and\nwe can close this. As long as there are no special tags including jQuery ui\ndate picker localization at the bottom of base.html (or base_site.html),\nthere is no chance for this bug to occur.\n\nPerhaps those guys downloaded my branch somehow but report issues here. No\nidea.\n13 mar 2015 10:50 \"Patrick Kranzlmueller\" notifications@github.com\nnapisa\u0142(a):\n\n> which commit exactly? the localized calendar has not been commited IMO.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/issues/577#issuecomment-78892649\n> .\n. ",
    "jpic": "Works here, thanks !\n. Works here, thanks !\n. ",
    "minddust": "thanks :)\n. thanks :)\n. ",
    "jgbreezer": "Thanks for the reply. So, I went to the github front page, clicked the 'master' dropdown branches menu and selected the 2_3 version. When that page reloaded, I clicked the big 'zip' button to the left of the http button which prefixes the git url textbox-like field.\n\nThe downloaded filename was as given in the original issue (copy-pasted from my filesystem). Enough detail? (Am busy now, can respond more properly if needed next time).\n\nJohn\n----- Original message -----\n\n> the \"releases\" section on github front\n> (https://github.com/sehmaschine/django-grappelli) says 2.3.9 is the\n> latest release for 2.3. \n> \n> the latest release on pypi is 2.3.9 as well ...\n> \n> what do you mean with \"the Zip button to download an archive for the 2_3\n> branch\" ... can you give me a link/url?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/sehmaschine/django-grappelli/issues/230#issuecomment-9785220\n. PS Direct url for that download is https://github.com/sehmaschine/django-grappelli/zipball/grappelli_2_3\nAs you can see, the zip download url (and the branch I'm viewing when I click on it) doesn't mention 2.3.8 specifically so I am presuming it should download the latest 2.3, aka 2.3.9; but I don't get that.\nI just tested it again  (did it from memory in my reply) and the steps were exactly as mentioned. I'm sure if I was to fork the code or get the source from that branch in other ways I'd get the latest in that branch, which would be 2.3.9; though I have yet to check the zip file I downloaded to see if it actually is 2.3.9 (would need to look for a difference to match up from the git revision history/maybe file dates).\n. Ah ok thanks for explaining.\n\nThere's no download link spottable from the non-github site for 2.3, and I\njust selected the first thing that said it was 2.3 that I saw from the\nbranches menu. The list it drops down isn't big enough to notice another\n2.3 hiding further down, without scrolling; and as the grappelli_2_3 branch\ndoesn't have 'dev' anywhere in it's name, I didn't know to search for the\nstable/2.3.x branch.\n\nThe only hint towards that I can spot, is that on the code directory\nlisting, the version comments refer to stable/2.4 and 2.3.x.\n\nI don't know that my mistake/accidental dev-branch selection is anything\nyou think is worth trying to avoid other people unfamiliar with the branch\nstyle making. Would it be useful to have some easier link to it somewhere a\nlittle more obvious (whether on the github wiki-like content or on the\ngrappelli site)? Obv. less obvious than links to latest stable 2.4.x\nversion. Maybe (if it wouldn't confuse people) in the Releases heading\nfurther down the page, where it lists the previous versions, each one could\ntake you to that branch, if do-able. Though that does require scrolling\ndown on many people's browser windows and you're probably aware that the\nmajority of people don't bother to scroll.\n\nOn 26 October 2012 14:21, Patrick Kranzlmueller notifications@github.comwrote:\n\n> now I see \u2013 you\u00b4re using the \"wrong\" branch. grappelli_2_3 is a dev\n> branch, stable/2.3.x is the right one \u2013 besides, using pypi is always\n> recommended.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/230#issuecomment-9812657.\n. Thanks for the reply. So, I went to the github front page, clicked the 'master' dropdown branches menu and selected the 2_3 version. When that page reloaded, I clicked the big 'zip' button to the left of the http button which prefixes the git url textbox-like field.\n\nThe downloaded filename was as given in the original issue (copy-pasted from my filesystem). Enough detail? (Am busy now, can respond more properly if needed next time).\n\nJohn\n----- Original message -----\n\n> the \"releases\" section on github front\n> (https://github.com/sehmaschine/django-grappelli) says 2.3.9 is the\n> latest release for 2.3. \n> \n> the latest release on pypi is 2.3.9 as well ...\n> \n> what do you mean with \"the Zip button to download an archive for the 2_3\n> branch\" ... can you give me a link/url?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/sehmaschine/django-grappelli/issues/230#issuecomment-9785220\n. PS Direct url for that download is https://github.com/sehmaschine/django-grappelli/zipball/grappelli_2_3\nAs you can see, the zip download url (and the branch I'm viewing when I click on it) doesn't mention 2.3.8 specifically so I am presuming it should download the latest 2.3, aka 2.3.9; but I don't get that.\nI just tested it again  (did it from memory in my reply) and the steps were exactly as mentioned. I'm sure if I was to fork the code or get the source from that branch in other ways I'd get the latest in that branch, which would be 2.3.9; though I have yet to check the zip file I downloaded to see if it actually is 2.3.9 (would need to look for a difference to match up from the git revision history/maybe file dates).\n. Ah ok thanks for explaining.\n\nThere's no download link spottable from the non-github site for 2.3, and I\njust selected the first thing that said it was 2.3 that I saw from the\nbranches menu. The list it drops down isn't big enough to notice another\n2.3 hiding further down, without scrolling; and as the grappelli_2_3 branch\ndoesn't have 'dev' anywhere in it's name, I didn't know to search for the\nstable/2.3.x branch.\n\nThe only hint towards that I can spot, is that on the code directory\nlisting, the version comments refer to stable/2.4 and 2.3.x.\n\nI don't know that my mistake/accidental dev-branch selection is anything\nyou think is worth trying to avoid other people unfamiliar with the branch\nstyle making. Would it be useful to have some easier link to it somewhere a\nlittle more obvious (whether on the github wiki-like content or on the\ngrappelli site)? Obv. less obvious than links to latest stable 2.4.x\nversion. Maybe (if it wouldn't confuse people) in the Releases heading\nfurther down the page, where it lists the previous versions, each one could\ntake you to that branch, if do-able. Though that does require scrolling\ndown on many people's browser windows and you're probably aware that the\nmajority of people don't bother to scroll.\n\nOn 26 October 2012 14:21, Patrick Kranzlmueller notifications@github.comwrote:\n\n> now I see \u2013 you\u00b4re using the \"wrong\" branch. grappelli_2_3 is a dev\n> branch, stable/2.3.x is the right one \u2013 besides, using pypi is always\n> recommended.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/230#issuecomment-9812657.\n. ",
    "Meenakshiithape": "Thanks for the reply. I already use the grappelli google group for this, but didn't get the useful information.\nAnd also refer the doc for this. http://django-grappelli.readthedocs.org/en/latest/dashboard_setup.html\nBut didn't get the navigation. I want the naviagtion like the older version of grappelli\nhttp://code.google.com/p/django-grappelli/wiki/navigation\n. Can you please suggest me what customazations will be needed? That will be helpful to me.\n. I have resolved this issue. Customized the new grappelli version as like the old grappelli 2.0. Add the navigation classes into models.py and also add navigation block into the index.html file and it working. Add the style as like new Grappelli structure.\n. Thanks for the reply. I already use the grappelli google group for this, but didn't get the useful information.\nAnd also refer the doc for this. http://django-grappelli.readthedocs.org/en/latest/dashboard_setup.html\nBut didn't get the navigation. I want the naviagtion like the older version of grappelli\nhttp://code.google.com/p/django-grappelli/wiki/navigation\n. Can you please suggest me what customazations will be needed? That will be helpful to me.\n. I have resolved this issue. Customized the new grappelli version as like the old grappelli 2.0. Add the navigation classes into models.py and also add navigation block into the index.html file and it working. Add the style as like new Grappelli structure.\n. ",
    "greglinch": "Hmm, interesting. I don't, but will explore further. Thanks!\n. Hmm, interesting. I don't, but will explore further. Thanks!\n. ",
    "phretor": "@sehmaschine sort of. For me, the first one works:\n\n```\nclass CustomIndexDashboard(Dashboard):\n    def __init__(self, **kwargs):\n        Dashboard.__init__(self, **kwargs)\n\n        self.children.append(\n            modules.ModelList(\n                title=_('Publications'),\n                column=1,\n                models=[\n                    'academic.publishing.*',],\n                )\n            )\n```\n\nwhereas the second one doesn't display anything (no errors whatsoever):\n\n```\nfrom django.utils.translation import ugettext_lazy as _\nfrom grappelli.dashboard import modules, Dashboard\n\nclass CustomIndexDashboard(Dashboard):\n    def __init__(self, **kwargs):\n        Dashboard.__init__(self, **kwargs)\n\n        self.children.append(\n            modules.ModelList(\n                title=_('Publications'),\n                column=1,\n                models=[\n                    'academic.publishing.ConferenceArticle',\n                    'academic.publishing.JournalArticle',\n                    'academic.publishing.BookChapter',\n                    'academic.publishing.TechnicalReport',\n                    'academic.publishing.PhdThesis',\n                    'academic.publishing.MasterThesis',],\n                )\n            )\n```\n\nI also tried with `django.contrib.auth.*` vs. `django.contrib.auth.User` to make sure that it wasn't `academic.publishing.*`'s fault.\n. @sehmaschine yes, I am sure the models are referenced like that (i.e., without the `.models.`). However, I am using a non standard packaging structure, and I believe that I should remove `academic.` and just use `publishing.` (haven't tried, but now that I look more carefully at my package structure, I believe that that's the culprit).\n\n https://bitbucket.org/phretor/django-academic/src/049bf53c06681eecb19cf81427de827532ce2c83/academic/?at=seclab\n\nHowever, it's weird that `academic.publishing.*` and `publishing.ModelName` both work and `academic.publishing.ModelName` doesn't.\n\nI will check, and let you know so that you can close this ticket.\n. @sehmaschine I checked, and doesn't act as expected:\n- Code\n\n```\nfrom django.utils.translation import ugettext_lazy as _\nfrom grappelli.dashboard import modules, Dashboard\n\nclass CustomIndexDashboard(Dashboard):\n    def __init__(self, **kwargs):\n        Dashboard.__init__(self, **kwargs)\n\n        self.children.append(\n            modules.ModelList(\n                title=_('Publications (displayed)'),\n                column=1,\n                models=[\n                    'academic.publishing.*',],\n                )\n            )\n\n        self.children.append(\n            modules.ModelList(\n                title=_('Publications 2 (not displayed)'),\n                column=1,\n                models=[\n                    'academic.publishing.ConferenceArticle',\n                    'academic.publishing.JournalArticle',\n                    'academic.publishing.BookChapter',\n                    'academic.publishing.TechnicalReport',\n                    'academic.publishing.PhdThesis',\n                    'academic.publishing.MasterThesis',],\n                )\n            )\n\n        self.children.append(\n            modules.ModelList(\n                title=_('Publications 2 (not displayed even)'),\n                column=1,\n                models=[\n                    'publishing.ConferenceArticle',\n                    'publishing.JournalArticle',\n                    'publishing.BookChapter',\n                    'publishing.TechnicalReport',\n                    'publishing.PhdThesis',\n                    'publishing.MasterThesis',],\n                )\n            )\n```\n- Screenshot: http://screencast.com/t/lQVgXXI5stlo\n- `academic.*` is from: https://bitbucket.org/phretor/django-academic/src/049bf53c0668/?at=seclab\n. worksforme :)\n. @sehmaschine I'm still seeing this issue on 2.5.7 + Django 1.7. Here is more details:\n\n```\n# models.py\nclass Conference(models.Model):\n        class Meta:\n            app_label = 'foolab'\n            ordering = [\n                'acronym',\n                'name', ]\n\n        name = models.CharField(\n            _('Name'),\n            help_text=_('E.g., Recent Advances in Intrusion Detection'),\n            max_length=256,\n            unique=True,\n            db_index=True)\n        acronym = models.CharField(\n            max_length=16,\n            unique=True,\n            help_text=_('E.g., RAID, IMC, EC2ND, CCS, SSP'),\n            validators=[RegexValidator(regex=r'^([0-9A-Za-z]+[ ]?)+$')])\n\n        def __unicode__(self):\n            return self.acronymized\n\n        def _get_acronymized(self):\n            return u'%s (%s)' % (\n                self.name,\n                self.acronym)\n        acronymized = property(_get_acronymized)\n\n        @staticmethod\n        def autocomplete_search_fields():\n            return (\"id__iexact\", \"name__icontains\", \"acronym__icontains\")\n\nclass ConferenceEdition(models.Model):\n        class Meta:\n            app_label = 'foolab'\n            ordering = [\n                '-year',\n                '-month',\n                'conference__acronym',\n                'conference__name',]\n            unique_together = (\n                'conference',\n                'year',)\n\n        conference = models.ForeignKey(\n            Conference)\n        edition_number = models.PositiveSmallIntegerField(\n            help_text=_('E.g., \"13\" as in \"Proceedings of the 13th Symposioum on ...\"'),\n            db_index=True)\n        month = models.PositiveSmallIntegerField(\n            choices=MONTHS,\n            blank=True,\n            null=True,\n            db_index=True)\n        year = models.CharField(\n            max_length=4,\n            choices=YEARS,\n            help_text=_('Year of the event'),\n            db_index=True)\n        address = models.CharField(\n            _('Venue'),\n            max_length=1024,\n            help_text=_('Conference location.'),\n            blank=True,\n            null=True)\n        web_page = models.URLField(\n            _('Web page'),\n            blank=True,\n            null=True)\n        slug = models.SlugField(\n            max_length=512,\n            editable=False,\n            db_index=True)\n\n        def __unicode__(self):\n            return u'%s %s' % (self.conference, self.year)\n\n        def _get_acronymized(self):\n            return u'%s (%s %s)' % (\n                self.conference.name,\n                self.conference.acronym,\n                self.year)\n        acronymized = property(_get_acronymized)\n\n        def _get_rev_acronymized(self):\n            return u'%s %s - %s' % (\n                self.conference.acronym,\n                self.year,\n                self.conference.name)\n        rev_acronymized = property(_get_rev_acronymized)\n\n        def save(self, **kwargs):\n            if len(self.slug) == 0:\n                self.slug = slugify('%s %s' % (self.conference.acronym, self.year))\n            super(ConferenceEdition, self).save(**kwargs)\n\n# admin.py\n@admin.register(ConferenceEdition)\n    class ConferenceEditionAdmin(admin.ModelAdmin):\n        list_display_links = (\n            'conference',)\n        list_display = (\n            'conference',\n            'year',\n            'address',\n            'web_page')\n        raw_id_fields = (\n            'conference',)\n        autocomplete_lookup_fields = {\n            'fk': ['conference',]\n        }\n\n    @admin.register(Conference)\n    class ConferenceAdmin(admin.ModelAdmin):\n        list_display = (\n            'acronym',\n            'name')\n        list_display_links = (\n            'acronym',\n            'name',)\n\n# traceback\nEnvironment:\n\n\n    Request Method: GET\n    Request URL: http://localhost:9000/grappelli/lookup/autocomplete/?term=raid&app_label=foolab&model_name=conference&query_string=_to_field=id\n\n    Django Version: 1.7\n    Python Version: 2.7.9\n    Installed Applications:\n    ('grappelli.dashboard',\n     'grappelli',\n     'filebrowser',\n     'ckeditor',\n     'django.contrib.admin',\n     'django.contrib.auth',\n     'django.contrib.contenttypes',\n     'django.contrib.messages',\n     'django.contrib.sessions',\n     'django.contrib.staticfiles',\n     'django.contrib.webdesign',\n     'django.contrib.sites',\n     'djangobower',\n     'pipeline',\n     'django_extensions',\n     'debug_toolbar',\n     'treemenus',\n     'gunicorn',\n     'foolab')\n    Installed Middleware:\n    ('django.middleware.common.CommonMiddleware',\n     'django.contrib.sessions.middleware.SessionMiddleware',\n     'django.middleware.csrf.CsrfViewMiddleware',\n     'django.contrib.auth.middleware.AuthenticationMiddleware',\n     'django.middleware.locale.LocaleMiddleware',\n     'django.contrib.messages.middleware.MessageMiddleware',\n     'django.middleware.clickjacking.XFrameOptionsMiddleware',\n     'django.middleware.gzip.GZipMiddleware',\n     'debug_toolbar.middleware.DebugToolbarMiddleware',\n     'pipeline.middleware.MinifyHTMLMiddleware')\n\n\n    Traceback:\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n      111.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/views/generic/base.py\" in view\n      69.             return self.dispatch(request, *args, **kwargs)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/views/generic/base.py\" in dispatch\n      87.         return handler(request, *args, **kwargs)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/views/decorators/cache.py\" in _wrapped_view_func\n      52.         response = view_func(request, *args, **kwargs)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/grappelli/views/related.py\" in get\n      169.             data = self.get_data()\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/grappelli/views/related.py\" in get_data\n      160.         return [{\"value\": f.pk, \"label\": get_label(f)} for f in self.get_queryset()[:AUTOCOMPLETE_LIMIT]]\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/grappelli/views/related.py\" in get_queryset\n      154.         qs = super(AutocompleteLookup, self).get_queryset()\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/grappelli/views/related.py\" in get_queryset\n      74.         qs = self.get_filtered_queryset(qs)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/grappelli/views/related.py\" in get_filtered_queryset\n      70.         return qs.filter(**filters)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/db/models/query.py\" in filter\n      691.         return self._filter_or_exclude(False, *args, **kwargs)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/db/models/query.py\" in _filter_or_exclude\n      709.             clone.query.add_q(Q(*args, **kwargs))\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/db/models/sql/query.py\" in add_q\n      1287.         clause, require_inner = self._add_q(where_part, self.used_aliases)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/db/models/sql/query.py\" in _add_q\n      1314.                     current_negated=current_negated, connector=connector)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/db/models/sql/query.py\" in build_filter\n      1138.         lookups, parts, reffed_aggregate = self.solve_lookup_type(arg)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/db/models/sql/query.py\" in solve_lookup_type\n      1076.         _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/db/models/sql/query.py\" in names_to_path\n      1383.             self.raise_field_error(opts, name)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/db/models/sql/query.py\" in raise_field_error\n      1389.                          \"Choices are: %s\" % (name, \", \".join(available)))\n\n    Exception Type: FieldError at /grappelli/lookup/autocomplete/\n    Exception Value: Cannot resolve keyword u'_to_field' into field. Choices are: acronym, conferenceedition, id, name\n```\n. @sehmaschine sort of. For me, the first one works:\n\n```\nclass CustomIndexDashboard(Dashboard):\n    def __init__(self, **kwargs):\n        Dashboard.__init__(self, **kwargs)\n\n        self.children.append(\n            modules.ModelList(\n                title=_('Publications'),\n                column=1,\n                models=[\n                    'academic.publishing.*',],\n                )\n            )\n```\n\nwhereas the second one doesn't display anything (no errors whatsoever):\n\n```\nfrom django.utils.translation import ugettext_lazy as _\nfrom grappelli.dashboard import modules, Dashboard\n\nclass CustomIndexDashboard(Dashboard):\n    def __init__(self, **kwargs):\n        Dashboard.__init__(self, **kwargs)\n\n        self.children.append(\n            modules.ModelList(\n                title=_('Publications'),\n                column=1,\n                models=[\n                    'academic.publishing.ConferenceArticle',\n                    'academic.publishing.JournalArticle',\n                    'academic.publishing.BookChapter',\n                    'academic.publishing.TechnicalReport',\n                    'academic.publishing.PhdThesis',\n                    'academic.publishing.MasterThesis',],\n                )\n            )\n```\n\nI also tried with `django.contrib.auth.*` vs. `django.contrib.auth.User` to make sure that it wasn't `academic.publishing.*`'s fault.\n. @sehmaschine yes, I am sure the models are referenced like that (i.e., without the `.models.`). However, I am using a non standard packaging structure, and I believe that I should remove `academic.` and just use `publishing.` (haven't tried, but now that I look more carefully at my package structure, I believe that that's the culprit).\n\n https://bitbucket.org/phretor/django-academic/src/049bf53c06681eecb19cf81427de827532ce2c83/academic/?at=seclab\n\nHowever, it's weird that `academic.publishing.*` and `publishing.ModelName` both work and `academic.publishing.ModelName` doesn't.\n\nI will check, and let you know so that you can close this ticket.\n. @sehmaschine I checked, and doesn't act as expected:\n- Code\n\n```\nfrom django.utils.translation import ugettext_lazy as _\nfrom grappelli.dashboard import modules, Dashboard\n\nclass CustomIndexDashboard(Dashboard):\n    def __init__(self, **kwargs):\n        Dashboard.__init__(self, **kwargs)\n\n        self.children.append(\n            modules.ModelList(\n                title=_('Publications (displayed)'),\n                column=1,\n                models=[\n                    'academic.publishing.*',],\n                )\n            )\n\n        self.children.append(\n            modules.ModelList(\n                title=_('Publications 2 (not displayed)'),\n                column=1,\n                models=[\n                    'academic.publishing.ConferenceArticle',\n                    'academic.publishing.JournalArticle',\n                    'academic.publishing.BookChapter',\n                    'academic.publishing.TechnicalReport',\n                    'academic.publishing.PhdThesis',\n                    'academic.publishing.MasterThesis',],\n                )\n            )\n\n        self.children.append(\n            modules.ModelList(\n                title=_('Publications 2 (not displayed even)'),\n                column=1,\n                models=[\n                    'publishing.ConferenceArticle',\n                    'publishing.JournalArticle',\n                    'publishing.BookChapter',\n                    'publishing.TechnicalReport',\n                    'publishing.PhdThesis',\n                    'publishing.MasterThesis',],\n                )\n            )\n```\n- Screenshot: http://screencast.com/t/lQVgXXI5stlo\n- `academic.*` is from: https://bitbucket.org/phretor/django-academic/src/049bf53c0668/?at=seclab\n. worksforme :)\n. @sehmaschine I'm still seeing this issue on 2.5.7 + Django 1.7. Here is more details:\n\n```\n# models.py\nclass Conference(models.Model):\n        class Meta:\n            app_label = 'foolab'\n            ordering = [\n                'acronym',\n                'name', ]\n\n        name = models.CharField(\n            _('Name'),\n            help_text=_('E.g., Recent Advances in Intrusion Detection'),\n            max_length=256,\n            unique=True,\n            db_index=True)\n        acronym = models.CharField(\n            max_length=16,\n            unique=True,\n            help_text=_('E.g., RAID, IMC, EC2ND, CCS, SSP'),\n            validators=[RegexValidator(regex=r'^([0-9A-Za-z]+[ ]?)+$')])\n\n        def __unicode__(self):\n            return self.acronymized\n\n        def _get_acronymized(self):\n            return u'%s (%s)' % (\n                self.name,\n                self.acronym)\n        acronymized = property(_get_acronymized)\n\n        @staticmethod\n        def autocomplete_search_fields():\n            return (\"id__iexact\", \"name__icontains\", \"acronym__icontains\")\n\nclass ConferenceEdition(models.Model):\n        class Meta:\n            app_label = 'foolab'\n            ordering = [\n                '-year',\n                '-month',\n                'conference__acronym',\n                'conference__name',]\n            unique_together = (\n                'conference',\n                'year',)\n\n        conference = models.ForeignKey(\n            Conference)\n        edition_number = models.PositiveSmallIntegerField(\n            help_text=_('E.g., \"13\" as in \"Proceedings of the 13th Symposioum on ...\"'),\n            db_index=True)\n        month = models.PositiveSmallIntegerField(\n            choices=MONTHS,\n            blank=True,\n            null=True,\n            db_index=True)\n        year = models.CharField(\n            max_length=4,\n            choices=YEARS,\n            help_text=_('Year of the event'),\n            db_index=True)\n        address = models.CharField(\n            _('Venue'),\n            max_length=1024,\n            help_text=_('Conference location.'),\n            blank=True,\n            null=True)\n        web_page = models.URLField(\n            _('Web page'),\n            blank=True,\n            null=True)\n        slug = models.SlugField(\n            max_length=512,\n            editable=False,\n            db_index=True)\n\n        def __unicode__(self):\n            return u'%s %s' % (self.conference, self.year)\n\n        def _get_acronymized(self):\n            return u'%s (%s %s)' % (\n                self.conference.name,\n                self.conference.acronym,\n                self.year)\n        acronymized = property(_get_acronymized)\n\n        def _get_rev_acronymized(self):\n            return u'%s %s - %s' % (\n                self.conference.acronym,\n                self.year,\n                self.conference.name)\n        rev_acronymized = property(_get_rev_acronymized)\n\n        def save(self, **kwargs):\n            if len(self.slug) == 0:\n                self.slug = slugify('%s %s' % (self.conference.acronym, self.year))\n            super(ConferenceEdition, self).save(**kwargs)\n\n# admin.py\n@admin.register(ConferenceEdition)\n    class ConferenceEditionAdmin(admin.ModelAdmin):\n        list_display_links = (\n            'conference',)\n        list_display = (\n            'conference',\n            'year',\n            'address',\n            'web_page')\n        raw_id_fields = (\n            'conference',)\n        autocomplete_lookup_fields = {\n            'fk': ['conference',]\n        }\n\n    @admin.register(Conference)\n    class ConferenceAdmin(admin.ModelAdmin):\n        list_display = (\n            'acronym',\n            'name')\n        list_display_links = (\n            'acronym',\n            'name',)\n\n# traceback\nEnvironment:\n\n\n    Request Method: GET\n    Request URL: http://localhost:9000/grappelli/lookup/autocomplete/?term=raid&app_label=foolab&model_name=conference&query_string=_to_field=id\n\n    Django Version: 1.7\n    Python Version: 2.7.9\n    Installed Applications:\n    ('grappelli.dashboard',\n     'grappelli',\n     'filebrowser',\n     'ckeditor',\n     'django.contrib.admin',\n     'django.contrib.auth',\n     'django.contrib.contenttypes',\n     'django.contrib.messages',\n     'django.contrib.sessions',\n     'django.contrib.staticfiles',\n     'django.contrib.webdesign',\n     'django.contrib.sites',\n     'djangobower',\n     'pipeline',\n     'django_extensions',\n     'debug_toolbar',\n     'treemenus',\n     'gunicorn',\n     'foolab')\n    Installed Middleware:\n    ('django.middleware.common.CommonMiddleware',\n     'django.contrib.sessions.middleware.SessionMiddleware',\n     'django.middleware.csrf.CsrfViewMiddleware',\n     'django.contrib.auth.middleware.AuthenticationMiddleware',\n     'django.middleware.locale.LocaleMiddleware',\n     'django.contrib.messages.middleware.MessageMiddleware',\n     'django.middleware.clickjacking.XFrameOptionsMiddleware',\n     'django.middleware.gzip.GZipMiddleware',\n     'debug_toolbar.middleware.DebugToolbarMiddleware',\n     'pipeline.middleware.MinifyHTMLMiddleware')\n\n\n    Traceback:\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n      111.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/views/generic/base.py\" in view\n      69.             return self.dispatch(request, *args, **kwargs)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/views/generic/base.py\" in dispatch\n      87.         return handler(request, *args, **kwargs)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/views/decorators/cache.py\" in _wrapped_view_func\n      52.         response = view_func(request, *args, **kwargs)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/grappelli/views/related.py\" in get\n      169.             data = self.get_data()\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/grappelli/views/related.py\" in get_data\n      160.         return [{\"value\": f.pk, \"label\": get_label(f)} for f in self.get_queryset()[:AUTOCOMPLETE_LIMIT]]\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/grappelli/views/related.py\" in get_queryset\n      154.         qs = super(AutocompleteLookup, self).get_queryset()\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/grappelli/views/related.py\" in get_queryset\n      74.         qs = self.get_filtered_queryset(qs)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/grappelli/views/related.py\" in get_filtered_queryset\n      70.         return qs.filter(**filters)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/db/models/query.py\" in filter\n      691.         return self._filter_or_exclude(False, *args, **kwargs)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/db/models/query.py\" in _filter_or_exclude\n      709.             clone.query.add_q(Q(*args, **kwargs))\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/db/models/sql/query.py\" in add_q\n      1287.         clause, require_inner = self._add_q(where_part, self.used_aliases)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/db/models/sql/query.py\" in _add_q\n      1314.                     current_negated=current_negated, connector=connector)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/db/models/sql/query.py\" in build_filter\n      1138.         lookups, parts, reffed_aggregate = self.solve_lookup_type(arg)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/db/models/sql/query.py\" in solve_lookup_type\n      1076.         _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/db/models/sql/query.py\" in names_to_path\n      1383.             self.raise_field_error(opts, name)\n    File \"/Users/phretor/ve/foolab/lib/python2.7/site-packages/django/db/models/sql/query.py\" in raise_field_error\n      1389.                          \"Choices are: %s\" % (name, \", \".join(available)))\n\n    Exception Type: FieldError at /grappelli/lookup/autocomplete/\n    Exception Value: Cannot resolve keyword u'_to_field' into field. Choices are: acronym, conferenceedition, id, name\n```\n. ",
    "kenricci": "See attached examples\n\nOn Thu, Nov 8, 2012 at 12:03 AM, parsch notifications@github.com wrote:\n\n> Can you be more specific?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/237#issuecomment-10179425.\n. I guess I can't send attachments via email.  See the link for the attachment\nhttp://dl.dropbox.com/u/68635088/Environment.pdf\n\nOn Thu, Nov 8, 2012 at 8:12 AM, Ken Ricci ken@kenricci.ca wrote:\n\n> See attached examples\n> \n> On Thu, Nov 8, 2012 at 12:03 AM, parsch notifications@github.com wrote:\n> \n> > Can you be more specific?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/237#issuecomment-10179425.\n. No it is IE9.  I'm sure it's stylesheet/template related but I don't\nunderstand how one browser can work properly and another improperly.  Are\nthere different files for each type of browser?  How would I rationalize\nthe files?\n\nOn Thu, Nov 8, 2012 at 12:41 PM, Patrick Kranzlmueller <\nnotifications@github.com> wrote:\n\n> are you sure the styles/templates are properly loaded? because I\u00b4m not\n> able to reproduce that screenshot with IE9 ... that\u00b4s IE8, right?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/237#issuecomment-10204008.\n. I've decided to start from scratch and rebuild the environment.  I started\nfrom a base Linux distro on a Windows HyperV server and took snapshots at\neach stage so I could roll back if I pooched the config.  I think I've got\nit sorted now.  The good thing about shooting yourself in the foot is that\nyou gain a better understanding of cause-and-effect...software is much\nsafer than a gun!\n\nThank you for your help.\nRegards,\nKen\n\nOn Thu, Nov 8, 2012 at 4:30 PM, parsch notifications@github.com wrote:\n\n> I am sorry, but your screenshots are far beyond known minor rendering\n> issues in IE8/9. As I assume that you cleared your cache, collected static\n> files etc. I just got one guess left: Is your IE running in that strange\n> mode where it behaves like an older version of itself?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/237#issuecomment-10211207.\n. Issue is the same from IE9 and IE10 as well as Chrome and Firefox on\nWindows XP, 7, and 8.  IE8 doesn't work at all.  My server environment is:\n\nUbuntu server 12.10 with natively installed Python 2.7.3\npython-django 1.4.1 via apt-get\nGrappelli 2.4.3 via pip\n\nall static files in place via collectstatic before and after installation\nof Grappelli.\n\nI just confirmed from a snapshot on another server that before loading\nGrappelli via pip, the boxes were the same size.\n\nAny suggestions?\n\nOn Sat, Nov 10, 2012 at 1:42 AM, parsch notifications@github.com wrote:\n\n> Actually they should have the same height. What browser are you using?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/238#issuecomment-10253506.\n. It's a textfield (rich text?) From a foreign key object - if that makes any sense. \nSent from my BlackBerry device on the Rogers Wireless Network\n\n-----Original Message-----\nFrom: Patrick Kranzlmueller notifications@github.com\nDate: Tue, 29 Jan 2013 05:20:05 \nTo: sehmaschine/django-grappellidjango-grappelli@noreply.github.com\nReply-To: sehmaschine/django-grappelli reply@reply.github.com\nCc: kenricciken@kenricci.ca\nSubject: Re: [django-grappelli] Readonly field from foreign key object doesn't\n display properly (#279)\n\nyou\u00b4re talking about a textfield (not a foreign key), right?\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/sehmaschine/django-grappelli/issues/279#issuecomment-12834025\n. See attached examples\n\nOn Thu, Nov 8, 2012 at 12:03 AM, parsch notifications@github.com wrote:\n\n> Can you be more specific?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/237#issuecomment-10179425.\n. I guess I can't send attachments via email.  See the link for the attachment\nhttp://dl.dropbox.com/u/68635088/Environment.pdf\n\nOn Thu, Nov 8, 2012 at 8:12 AM, Ken Ricci ken@kenricci.ca wrote:\n\n> See attached examples\n> \n> On Thu, Nov 8, 2012 at 12:03 AM, parsch notifications@github.com wrote:\n> \n> > Can you be more specific?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/237#issuecomment-10179425.\n. No it is IE9.  I'm sure it's stylesheet/template related but I don't\nunderstand how one browser can work properly and another improperly.  Are\nthere different files for each type of browser?  How would I rationalize\nthe files?\n\nOn Thu, Nov 8, 2012 at 12:41 PM, Patrick Kranzlmueller <\nnotifications@github.com> wrote:\n\n> are you sure the styles/templates are properly loaded? because I\u00b4m not\n> able to reproduce that screenshot with IE9 ... that\u00b4s IE8, right?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/237#issuecomment-10204008.\n. I've decided to start from scratch and rebuild the environment.  I started\nfrom a base Linux distro on a Windows HyperV server and took snapshots at\neach stage so I could roll back if I pooched the config.  I think I've got\nit sorted now.  The good thing about shooting yourself in the foot is that\nyou gain a better understanding of cause-and-effect...software is much\nsafer than a gun!\n\nThank you for your help.\nRegards,\nKen\n\nOn Thu, Nov 8, 2012 at 4:30 PM, parsch notifications@github.com wrote:\n\n> I am sorry, but your screenshots are far beyond known minor rendering\n> issues in IE8/9. As I assume that you cleared your cache, collected static\n> files etc. I just got one guess left: Is your IE running in that strange\n> mode where it behaves like an older version of itself?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/237#issuecomment-10211207.\n. Issue is the same from IE9 and IE10 as well as Chrome and Firefox on\nWindows XP, 7, and 8.  IE8 doesn't work at all.  My server environment is:\n\nUbuntu server 12.10 with natively installed Python 2.7.3\npython-django 1.4.1 via apt-get\nGrappelli 2.4.3 via pip\n\nall static files in place via collectstatic before and after installation\nof Grappelli.\n\nI just confirmed from a snapshot on another server that before loading\nGrappelli via pip, the boxes were the same size.\n\nAny suggestions?\n\nOn Sat, Nov 10, 2012 at 1:42 AM, parsch notifications@github.com wrote:\n\n> Actually they should have the same height. What browser are you using?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/238#issuecomment-10253506.\n. It's a textfield (rich text?) From a foreign key object - if that makes any sense. \nSent from my BlackBerry device on the Rogers Wireless Network\n\n-----Original Message-----\nFrom: Patrick Kranzlmueller notifications@github.com\nDate: Tue, 29 Jan 2013 05:20:05 \nTo: sehmaschine/django-grappellidjango-grappelli@noreply.github.com\nReply-To: sehmaschine/django-grappelli reply@reply.github.com\nCc: kenricciken@kenricci.ca\nSubject: Re: [django-grappelli] Readonly field from foreign key object doesn't\n display properly (#279)\n\nyou\u00b4re talking about a textfield (not a foreign key), right?\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/sehmaschine/django-grappelli/issues/279#issuecomment-12834025\n. ",
    "lvelezsantos": "I really works well in IE 9, since the upgrade to version 2.4.3 Grappelli, but IE 8 is presenting the problems presented above, with version 2.4.2. Sorry for my English.\n\nhttp://dl.dropbox.com/u/5967952/Error%20grappelli%20IE8.png\n. I really works well in IE 9, since the upgrade to version 2.4.3 Grappelli, but IE 8 is presenting the problems presented above, with version 2.4.2. Sorry for my English.\n\nhttp://dl.dropbox.com/u/5967952/Error%20grappelli%20IE8.png\n. ",
    "stuaxo": "Hi,\n   I've got exactly the same problem on IE8.  (My screenshot looks the same).\n\nWill let you know if we make any progress on it..\n\nCheers,\nStuart\n. Hi,\n   I've got exactly the same problem on IE8.  (My screenshot looks the same).\n\nWill let you know if we make any progress on it..\n\nCheers,\nStuart\n. ",
    "karolyi": "+1\n. +1, `django-pipeline` compilation breaks because of this\n. thx, my good sir.\n. +1\n. +1, `django-pipeline` compilation breaks because of this\n. thx, my good sir.\n. ",
    "asteinlein": "2.4.3. I also tried 2.4.2 since I saw a bug related to help_text was supposed to be fixed in 2.4.3, but this issue is present in both versions.\n. 2.4.3. I also tried 2.4.2 since I saw a bug related to help_text was supposed to be fixed in 2.4.3, but this issue is present in both versions.\n. ",
    "praus": "Ok, I understand. I thought translations are supported since I found Polish, French, Russian, etc.\nOut of curiosity, what editor are you planning to switch to?\n. $ ls grappelli/static/grappelli/tinymce/jscripts/tiny_mce/plugins/grappelli/langs/\nde.js  en.js  fr.js  pl.js  ru.js\n\nRedactor looks pretty impressive. Looking forward to what you come up with :)\n. Have a look at my commits for Czech translation (https://github.com/sehmaschine/django-grappelli/pull/261/commits) regarding what files need to be changed. It's really just a few files. Change them, commit them, push them to your forked repo and then submit a pull request.\n. Ok, I understand. I thought translations are supported since I found Polish, French, Russian, etc.\nOut of curiosity, what editor are you planning to switch to?\n. $ ls grappelli/static/grappelli/tinymce/jscripts/tiny_mce/plugins/grappelli/langs/\nde.js  en.js  fr.js  pl.js  ru.js\n\nRedactor looks pretty impressive. Looking forward to what you come up with :)\n. Have a look at my commits for Czech translation (https://github.com/sehmaschine/django-grappelli/pull/261/commits) regarding what files need to be changed. It's really just a few files. Change them, commit them, push them to your forked repo and then submit a pull request.\n. ",
    "odarbelaeze": "I'm seriously interested in a Spanish (es-co) translation, I'm truly capable of translating whatever needs to be translated, just need some advice in how to do it :)\n. I'm seriously interested in a Spanish (es-co) translation, I'm truly capable of translating whatever needs to be translated, just need some advice in how to do it :)\n. ",
    "brejoc": "Good objection. With the current pagination this wouldn't easily solvable. But is it desirable to not have this optional feature because of that limitation?\n. Nice, that'll work. I will hopefully be able to look into this in the next few days. I will also try to reuse the exising JS as much as possible.\n. Good objection. With the current pagination this wouldn't easily solvable. But is it desirable to not have this optional feature because of that limitation?\n. Nice, that'll work. I will hopefully be able to look into this in the next few days. I will also try to reuse the exising JS as much as possible.\n. ",
    "javpaw": "yes, \"I'm living on the edge\"  =).\n\nFirst thank you for Grappelli, awesome app.\nThis is my first pull request, a very small one and maybe wrong but I had to start with something. \n\nThe true is that I started using django 1.5 beta because of the new custom User captabilites, but they left some admin functionality for the new User out of django 1.5 so I'm using the development version.\n. Well, I first try to import the conf.urls functionalities using the old import path (django.confs.urls.defaults) and if there is an ImportError then I try the new path (django.confs.urls) so I think It's backwards-compatible.\n. Ok, sorry about the branch, I'm still learning.\n\nThe original admin interface [solves this problem](https://github.com/django/django/blob/master/django/contrib/admin/templates/admin/base.html#L29) calling first get_short_name and then get_username.\n. yes, \"I'm living on the edge\"  =).\n\nFirst thank you for Grappelli, awesome app.\nThis is my first pull request, a very small one and maybe wrong but I had to start with something. \n\nThe true is that I started using django 1.5 beta because of the new custom User captabilites, but they left some admin functionality for the new User out of django 1.5 so I'm using the development version.\n. Well, I first try to import the conf.urls functionalities using the old import path (django.confs.urls.defaults) and if there is an ImportError then I try the new path (django.confs.urls) so I think It's backwards-compatible.\n. Ok, sorry about the branch, I'm still learning.\n\nThe original admin interface [solves this problem](https://github.com/django/django/blob/master/django/contrib/admin/templates/admin/base.html#L29) calling first get_short_name and then get_username.\n. ",
    "dohvis": "+1\n. +1\n. ",
    "derek-adair": "I would also like to see a demo that showcases all of the features grappelli has to offer.  Its not exactly clear what I am getting, particularly when i install it on top of a fresh django instance (how i typically test out these types of things).\n\nSeems like it would do a lot to advertise for your project!\n. Fair enough, just some feedback from a... kindof user.  I'm actually trying to find out what features you guys have added since[ mezzanine forked](https://github.com/stephenmcd/grappelli-safe).  Its difficult for me to compare without having them both at my fingertips.  I can't really spend the time to research the benefits from upgrading at this point and time...\n\nI'd absolutely love to be able to compare features so as I can come up with some incentive for the community to embrace the idea of upgrading.  Seems like an obvious win in terms of maintenance, but i'm still getting my feet wet in mezzanine.\n\nthoughts?\n. Hmm, yes I can see how if you dont need or have any desire for driving people to this project a live demo is just simply not worth the time or effort.\n\nWhat about some kind of support script to install a feature demonstration locally?\n\nMezzanine has a cool [createdb management command](https://github.com/stephenmcd/mezzanine/blob/280642c8d0e7e41b90398c974a15533f6df20049/mezzanine/core/management/commands/createdb.py) that allows users to explore the more advanced features of the project by installing a couple fixtures.  This would essentially amount to configuring the \"setup\" of the demo.\n\nIf this is something you find interesting I can keep this in mind when I do have time to explore this project more.  Thanks for your prompt responses!\n. I would also like to see a demo that showcases all of the features grappelli has to offer.  Its not exactly clear what I am getting, particularly when i install it on top of a fresh django instance (how i typically test out these types of things).\n\nSeems like it would do a lot to advertise for your project!\n. Fair enough, just some feedback from a... kindof user.  I'm actually trying to find out what features you guys have added since[ mezzanine forked](https://github.com/stephenmcd/grappelli-safe).  Its difficult for me to compare without having them both at my fingertips.  I can't really spend the time to research the benefits from upgrading at this point and time...\n\nI'd absolutely love to be able to compare features so as I can come up with some incentive for the community to embrace the idea of upgrading.  Seems like an obvious win in terms of maintenance, but i'm still getting my feet wet in mezzanine.\n\nthoughts?\n. Hmm, yes I can see how if you dont need or have any desire for driving people to this project a live demo is just simply not worth the time or effort.\n\nWhat about some kind of support script to install a feature demonstration locally?\n\nMezzanine has a cool [createdb management command](https://github.com/stephenmcd/mezzanine/blob/280642c8d0e7e41b90398c974a15533f6df20049/mezzanine/core/management/commands/createdb.py) that allows users to explore the more advanced features of the project by installing a couple fixtures.  This would essentially amount to configuring the \"setup\" of the demo.\n\nIf this is something you find interesting I can keep this in mind when I do have time to explore this project more.  Thanks for your prompt responses!\n. ",
    "doganmeh": "A live demo for open source projects is not common practice, although it would be great if there was one. \n\nBut I do find grappelli's documentation not self-explanatory despite being well written. It lacks pictures, as a picture may worth a thousand word sometimes. To be able to follow along grappelli's documentation, you must have mastered how to customize django admin beforehand, read carefully, and process everything in your head to figure out what should it be doing or what should be the end result. That hurts.. and most people are not django admin guru. \n\nFor example because grappelli described itself as such: \"Grappelli adds a consistent and grid-based look & feel and some nifty features.\" I spent a considerable amount of time at the documentation trying to figure out how to do grids with grappelli, and it turned out to be (after hours of reading) a standard django feature.\n\nBottom line, authors may not need advertising their project, but the documentation is there for a reason, and I think it could be more accessible. \n\nI appreciate your work. \n. Here is the django feature that I was referring to:\n\nhttps://docs.djangoproject.com/en/1.10/ref/contrib/admin/#django.contrib.admin.ModelAdmin.list_display\n\nBriefly; when field names list such as:\n\n```\nlist_display = ('first_name', 'last_name')\n```\n\nlisted, they will be shown on separate columns, instead of a single uni-code representation of the object. Thus you get a html table which I called grid. \n. Now I see where you are coming from :) Thanks,\n. A live demo for open source projects is not common practice, although it would be great if there was one. \n\nBut I do find grappelli's documentation not self-explanatory despite being well written. It lacks pictures, as a picture may worth a thousand word sometimes. To be able to follow along grappelli's documentation, you must have mastered how to customize django admin beforehand, read carefully, and process everything in your head to figure out what should it be doing or what should be the end result. That hurts.. and most people are not django admin guru. \n\nFor example because grappelli described itself as such: \"Grappelli adds a consistent and grid-based look & feel and some nifty features.\" I spent a considerable amount of time at the documentation trying to figure out how to do grids with grappelli, and it turned out to be (after hours of reading) a standard django feature.\n\nBottom line, authors may not need advertising their project, but the documentation is there for a reason, and I think it could be more accessible. \n\nI appreciate your work. \n. Here is the django feature that I was referring to:\n\nhttps://docs.djangoproject.com/en/1.10/ref/contrib/admin/#django.contrib.admin.ModelAdmin.list_display\n\nBriefly; when field names list such as:\n\n```\nlist_display = ('first_name', 'last_name')\n```\n\nlisted, they will be shown on separate columns, instead of a single uni-code representation of the object. Thus you get a html table which I called grid. \n. Now I see where you are coming from :) Thanks,\n. ",
    "troytft": "sehmaschine, thx\n. sehmaschine, thx\n. ",
    "x0nix": "you are right, it is solved in stable/2.4.x, sorry\n. you are right, it is solved in stable/2.4.x, sorry\n. ",
    "khamaileon": "Ok I understood afterwards. I did not notice the color change.\n\nWould not it be more explicit to delete the row instead of changing the color of the line?\n. I mean hide the html element. If there is an error I just don't save\n. So maybe we can replace the cross icon by an other like the \"reload\" one when the user has deleted a line\n. No I don't think that re-click on the same cross to reactivate the line is \"logical\"\n. Ok I understood afterwards. I did not notice the color change.\n\nWould not it be more explicit to delete the row instead of changing the color of the line?\n. I mean hide the html element. If there is an error I just don't save\n. So maybe we can replace the cross icon by an other like the \"reload\" one when the user has deleted a line\n. No I don't think that re-click on the same cross to reactivate the line is \"logical\"\n. ",
    "paramburu": "Chrome on OS X 10.8.2. I attach you a screenshot.\n\n![autocomplete](https://f.cloud.github.com/assets/1961274/112292/ab64f124-6b17-11e2-882f-326a23507664.png)\n. Evidently isn't a problem with Django 1.5c1 because I uninstalled it and installed Django 1.4.3 and it's the same problem. The thing is I have another project with Django 1.4 and autocomplete lookups (tested in the same browser and OS) and it's working properly.\n\nThe javascripts are loading properly (at least according with Chrome Dev Tools) and the \"setup\" checked repeatedly. If someone have gone through this before I gladly appreciate some insight.\n\nI'm sorry in advance for not checking first with Django 1.4 before submitting the issue.\n. ``` python\n\n# main urls.py\nurlpatterns = patterns('',\n    (r'^grappelli/', include('grappelli.urls')),\n    ...\n)\n\n# models.py\nclass Place(models.Model):\n    name = models.CharField(max_length=100)\n    parent = models.ForeignKey('self', null=True)\n\n    def __unicode__(self):\n        return self.name\n\n    @staticmethod\n    def autocomplete_search_fields():\n        return ('id__iexact', 'name__istartswith',)\n\n\nclass Destination(models.Model):\n    places = models.ManyToManyField(Place)\n\n\n# admin.py\nclass DestinationAdmin(admin.ModelAdmin):\n    # The places field is mentioned in a fieldset\n\n    # define the raw_id_fields for Autocomplete Lookups\n    raw_id_fields = ('places',)\n    # define the autocomplete_lookup_fields\n    autocomplete_lookup_fields = {\n        'm2m': ['places']\n    }\n\n\nadmin.site.register(Destination, DestinationAdmin)\n```\n\nThere are no ImportErrors and everything seems to be ok.\n. Ok, I figured it out. Thanks anyway for your concern.\n\nThe issue is when no admin interface is defined for a model. (I believe) There is no proper clarification about that but is more an admin site issue than a grappelli one. In our case, the Place model is loaded with a fixture and it shouldn't change. Because of that my partner didn't register it with the admin interface. Once I enabled it with the admin interface it worked fine.\n\nI realized it when enabling only raw_id_fields didn't showed the \"magnifying glass\" that for that to happen the model may need to be registered in the admin site.\n\nThat opens up a question. What happens if someone has all permissions for model A (which has an autocomplete_lookup_field) but has none for model B (the auto-completed)? It will show the same way? I will try to test it today so I fill a proper issue.\n\nAgain, thanks for all the trouble I made.\n. Well, not always. If I have a custom model with a custom primary key and that primary key is alphanumerical it will break like it did. For example, I can make an article model where the primary key is a slug instead of the default one. I know I could have the default primary key and the slug as unique but it's just as an example.\n\nIf you read the section **Primary key type compatibility** in https://docs.djangoproject.com/en/1.5/ref/contrib/contenttypes/#django.contrib.contenttypes.generic.GenericForeignKey you will find that object_id can indeed be CharFields or even, if you need maximum compatibility TextFields. I personally use CharFields because you never know other models primary key, especially if you are releasing the app to the public or if you are using a third-party app. As an example you could see that in django.contrib.comments they've used a TextField for maximum compatibility.\nhttps://github.com/django/django/blob/master/django/contrib/comments/models.py#L25\n\nI would like to point out that this isn't only with Django 1.5. It has been in the docs since Django 1.2 (I believe).\n. Thanks @parsch and @sehmaschine.\n. Chrome on OS X 10.8.2. I attach you a screenshot.\n\n![autocomplete](https://f.cloud.github.com/assets/1961274/112292/ab64f124-6b17-11e2-882f-326a23507664.png)\n. Evidently isn't a problem with Django 1.5c1 because I uninstalled it and installed Django 1.4.3 and it's the same problem. The thing is I have another project with Django 1.4 and autocomplete lookups (tested in the same browser and OS) and it's working properly.\n\nThe javascripts are loading properly (at least according with Chrome Dev Tools) and the \"setup\" checked repeatedly. If someone have gone through this before I gladly appreciate some insight.\n\nI'm sorry in advance for not checking first with Django 1.4 before submitting the issue.\n. ``` python\n\n# main urls.py\nurlpatterns = patterns('',\n    (r'^grappelli/', include('grappelli.urls')),\n    ...\n)\n\n# models.py\nclass Place(models.Model):\n    name = models.CharField(max_length=100)\n    parent = models.ForeignKey('self', null=True)\n\n    def __unicode__(self):\n        return self.name\n\n    @staticmethod\n    def autocomplete_search_fields():\n        return ('id__iexact', 'name__istartswith',)\n\n\nclass Destination(models.Model):\n    places = models.ManyToManyField(Place)\n\n\n# admin.py\nclass DestinationAdmin(admin.ModelAdmin):\n    # The places field is mentioned in a fieldset\n\n    # define the raw_id_fields for Autocomplete Lookups\n    raw_id_fields = ('places',)\n    # define the autocomplete_lookup_fields\n    autocomplete_lookup_fields = {\n        'm2m': ['places']\n    }\n\n\nadmin.site.register(Destination, DestinationAdmin)\n```\n\nThere are no ImportErrors and everything seems to be ok.\n. Ok, I figured it out. Thanks anyway for your concern.\n\nThe issue is when no admin interface is defined for a model. (I believe) There is no proper clarification about that but is more an admin site issue than a grappelli one. In our case, the Place model is loaded with a fixture and it shouldn't change. Because of that my partner didn't register it with the admin interface. Once I enabled it with the admin interface it worked fine.\n\nI realized it when enabling only raw_id_fields didn't showed the \"magnifying glass\" that for that to happen the model may need to be registered in the admin site.\n\nThat opens up a question. What happens if someone has all permissions for model A (which has an autocomplete_lookup_field) but has none for model B (the auto-completed)? It will show the same way? I will try to test it today so I fill a proper issue.\n\nAgain, thanks for all the trouble I made.\n. Well, not always. If I have a custom model with a custom primary key and that primary key is alphanumerical it will break like it did. For example, I can make an article model where the primary key is a slug instead of the default one. I know I could have the default primary key and the slug as unique but it's just as an example.\n\nIf you read the section **Primary key type compatibility** in https://docs.djangoproject.com/en/1.5/ref/contrib/contenttypes/#django.contrib.contenttypes.generic.GenericForeignKey you will find that object_id can indeed be CharFields or even, if you need maximum compatibility TextFields. I personally use CharFields because you never know other models primary key, especially if you are releasing the app to the public or if you are using a third-party app. As an example you could see that in django.contrib.comments they've used a TextField for maximum compatibility.\nhttps://github.com/django/django/blob/master/django/contrib/comments/models.py#L25\n\nI would like to point out that this isn't only with Django 1.5. It has been in the docs since Django 1.2 (I believe).\n. Thanks @parsch and @sehmaschine.\n. ",
    "johnpneumann": "Herp Derp. :/ Submitting new pull request in master.\n. Herp Derp. :/ Submitting new pull request in master.\n. ",
    "nnmware": "It's from 1.5, but in grp_tags.py you make same changes 1 years ago.\nimport json or import simplejson from django\n. It's only in django-master, but you software real work very well with they. Last 12 hours i try find problem in code, for help you project, but not may localize this problem. :(  \nPlease say in what block find, and i try resolve this, 'cause not want lost excellent dashboard after this small deprecation issue. \n. Great thanks! After last update of grappelli- all works the best with django-master.\n. It's from 1.5, but in grp_tags.py you make same changes 1 years ago.\nimport json or import simplejson from django\n. It's only in django-master, but you software real work very well with they. Last 12 hours i try find problem in code, for help you project, but not may localize this problem. :(  \nPlease say in what block find, and i try resolve this, 'cause not want lost excellent dashboard after this small deprecation issue. \n. Great thanks! After last update of grappelli- all works the best with django-master.\n. ",
    "Hedde": "I thought grapelli supported feincms classes but I guess I am mistaken and this requires some custom work\n. I thought grapelli supported feincms classes but I guess I am mistaken and this requires some custom work\n. ",
    "sspross": "@Hedde did you found a working solution?\n. @Hedde did you found a working solution?\n. ",
    "paveltyavin": "Ok, i've found it and described here http://stackoverflow.com/questions/15097874/grappelli-dashboard-valueerror-on-two-admin-sites/15098250#15098250\n. Ok, i've found it and described here http://stackoverflow.com/questions/15097874/grappelli-dashboard-valueerror-on-two-admin-sites/15098250#15098250\n. ",
    "albertyw": "Agreed.  This removes the warning \"DeprecationWarning: django.conf.urls.defaults is deprecated; use django.conf.urls instead\"\n. This is the same change as a previous pull request.  https://github.com/sehmaschine/django-grappelli/pull/301\n. Agreed.  This removes the warning \"DeprecationWarning: django.conf.urls.defaults is deprecated; use django.conf.urls instead\"\n. This is the same change as a previous pull request.  https://github.com/sehmaschine/django-grappelli/pull/301\n. ",
    "selcuk": "I deleted the .po files, recreated and recompiled them and it worked. Sorry for bothering.\n. I deleted the .po files, recreated and recompiled them and it worked. Sorry for bothering.\n. ",
    "DeathBorn": "Yep. you need to register that model on which you autocomplete. Only then autocompelte will work. It is a shame.\n. Your point is very good.\n. Yep. you need to register that model on which you autocomplete. Only then autocompelte will work. It is a shame.\n. Your point is very good.\n. ",
    "tdruez": "Thanks @sehmaschine.\n. Thanks!\n. No the is no help_text in the django template: https://github.com/django/django/blob/master/django/contrib/admin/templates/admin/auth/user/change_password.html#L35\n\nI guess Django is assuming you are using the default change_password_form, ie AdminPasswordChangeForm, on which password1 has no help_text.\nAlthough they give you the possibility to provide your custom Form on the model admin, and the custom form may have a help_text defined. Especially for specific password validation where you want to display the rules to your users.\n\nThere's not easy way to do it at the moment except by duplicating the template content to add it.\n. Thanks!\n. I think you're right, the empty QuerySet is fine. \nThanks for looking at the issue :)\n. Somehow an improvement on top of https://github.com/sehmaschine/django-grappelli/pull/440 :)\nThe nested \"try\" is gone!\n. Thanks for the merge! :+1: \n. Thanks!\n. Could you provide the value assigned to GRAPPELLI_AUTOCOMPLETE_SEARCH_FIELDS?\n. Similar issues for the select multiple widget.\nThe following snippet needs to be added on the Grappelli side: https://github.com/django/django/blob/master/django/contrib/admin/static/admin/js/SelectFilter2.js#L228\n\nActually, all the JavaScript files overrided in Grappelli should be compared and updated with the new ones in Django 1.10\n. I've been running Django 1.10 and Grappelli 2.8.1 for a month and everything works fine except for the inline JavaScript @ https://github.com/sehmaschine/django-grappelli/issues/770\n\nThanks for the great work!\n. @sehmaschine I've been also running successfully a download of the 2.9.x branch for the past month, any plans for a proper 2.9.1 pypi release?\nThanks!\n. Great news! No issues with the 2.9.x branch so far on my side :)\n. @sehmaschine that's great! Thanks \ud83d\udc4d \n. Thanks!. @tsouvarev See the change in https://github.com/sehmaschine/django-grappelli/commit/9da2bc3d03f234962254f44eba377e502eb7c588. @sehmaschine so far it's the only issue I've encountered running Grappelli on Django 1.11 :). Here's another issue running Django 1.11, the `admin/related_widget_wrapper.html` template was moved to `admin/widgets/related_widget_wrapper.html` and the reference updated in `RelatedFieldWidgetWrapper`.\r\n\r\nChanges in Django: https://github.com/django/django/commit/b52c73008a9d67e9ddbb841872dc15cdd3d6ee01#diff-f42ac10b4a1091330b3ae0c3d0d0a7cfR224\r\nhttps://github.com/django/django/commit/b52c73008a9d67e9ddbb841872dc15cdd3d6ee01#diff-5259f408db66c0fd643a9b52c2743a34\r\n\r\nNote that the original `admin/related_widget_wrapper.html` is still present in the codebase https://github.com/django/django/blob/58f02c498b659a906e9c30d946bd89bedc4717e5/django/contrib/admin/templates/admin/related_widget_wrapper.html and is slightly different from the new one `admin/widgets/related_widget_wrapper.html` https://github.com/django/django/blob/58f02c498b659a906e9c30d946bd89bedc4717e5/django/contrib/admin/templates/admin/widgets/related_widget_wrapper.html\r\n\r\n```\r\ndiff /django/contrib/admin/templates/admin/widgets/related_widget_wrapper.html /django/contrib/admin/templates/admin/related_widget_wrapper.html\r\n3c3\r\n<     {{ rendered_widget }}\r\n---\r\n>     {{ widget }}\r\n```. Thanks for the merge!. Thanks @sehmaschine.\n. Thanks!\n. No the is no help_text in the django template: https://github.com/django/django/blob/master/django/contrib/admin/templates/admin/auth/user/change_password.html#L35\n\nI guess Django is assuming you are using the default change_password_form, ie AdminPasswordChangeForm, on which password1 has no help_text.\nAlthough they give you the possibility to provide your custom Form on the model admin, and the custom form may have a help_text defined. Especially for specific password validation where you want to display the rules to your users.\n\nThere's not easy way to do it at the moment except by duplicating the template content to add it.\n. Thanks!\n. I think you're right, the empty QuerySet is fine. \nThanks for looking at the issue :)\n. Somehow an improvement on top of https://github.com/sehmaschine/django-grappelli/pull/440 :)\nThe nested \"try\" is gone!\n. Thanks for the merge! :+1: \n. Thanks!\n. Could you provide the value assigned to GRAPPELLI_AUTOCOMPLETE_SEARCH_FIELDS?\n. Similar issues for the select multiple widget.\nThe following snippet needs to be added on the Grappelli side: https://github.com/django/django/blob/master/django/contrib/admin/static/admin/js/SelectFilter2.js#L228\n\nActually, all the JavaScript files overrided in Grappelli should be compared and updated with the new ones in Django 1.10\n. I've been running Django 1.10 and Grappelli 2.8.1 for a month and everything works fine except for the inline JavaScript @ https://github.com/sehmaschine/django-grappelli/issues/770\n\nThanks for the great work!\n. @sehmaschine I've been also running successfully a download of the 2.9.x branch for the past month, any plans for a proper 2.9.1 pypi release?\nThanks!\n. Great news! No issues with the 2.9.x branch so far on my side :)\n. @sehmaschine that's great! Thanks \ud83d\udc4d \n. Thanks!. @tsouvarev See the change in https://github.com/sehmaschine/django-grappelli/commit/9da2bc3d03f234962254f44eba377e502eb7c588. @sehmaschine so far it's the only issue I've encountered running Grappelli on Django 1.11 :). Here's another issue running Django 1.11, the `admin/related_widget_wrapper.html` template was moved to `admin/widgets/related_widget_wrapper.html` and the reference updated in `RelatedFieldWidgetWrapper`.\r\n\r\nChanges in Django: https://github.com/django/django/commit/b52c73008a9d67e9ddbb841872dc15cdd3d6ee01#diff-f42ac10b4a1091330b3ae0c3d0d0a7cfR224\r\nhttps://github.com/django/django/commit/b52c73008a9d67e9ddbb841872dc15cdd3d6ee01#diff-5259f408db66c0fd643a9b52c2743a34\r\n\r\nNote that the original `admin/related_widget_wrapper.html` is still present in the codebase https://github.com/django/django/blob/58f02c498b659a906e9c30d946bd89bedc4717e5/django/contrib/admin/templates/admin/related_widget_wrapper.html and is slightly different from the new one `admin/widgets/related_widget_wrapper.html` https://github.com/django/django/blob/58f02c498b659a906e9c30d946bd89bedc4717e5/django/contrib/admin/templates/admin/widgets/related_widget_wrapper.html\r\n\r\n```\r\ndiff /django/contrib/admin/templates/admin/widgets/related_widget_wrapper.html /django/contrib/admin/templates/admin/related_widget_wrapper.html\r\n3c3\r\n<     {{ rendered_widget }}\r\n---\r\n>     {{ widget }}\r\n```. Thanks for the merge!. ",
    "int-ua": "It wasn't removed in docs:\nhttps://github.com/sehmaschine/django-grappelli/blob/master/docs/dashboard_api.rst#the-dashboardmodule-class\n. AFAIU, it should be replaced with `children` in the documentation.\n. Upgrading Grappelli from 2.5.7 to 2.6.5 fixed this issue for me.\n. It was a bit unclear for me: the fix was included in 2.5.7.\n. It wasn't removed in docs:\nhttps://github.com/sehmaschine/django-grappelli/blob/master/docs/dashboard_api.rst#the-dashboardmodule-class\n. AFAIU, it should be replaced with `children` in the documentation.\n. Upgrading Grappelli from 2.5.7 to 2.6.5 fixed this issue for me.\n. It was a bit unclear for me: the fix was included in 2.5.7.\n. ",
    "yardenst": "django==1.5\ndjango-grappelli==2.4.3\n\nYes it works fine with raw-id-fields, only when adding autocomplete_lookup_fields the problem occurs.\n. Interesting, would you like me to add an image? something else to help identify better the problem?\n. Ok so I checked it a bit more.\nThis is my model which another model uses as ManyToMany:\n\n``` python\nclass ImageView(models.Model, SearchAbleModel):\n    description = models.CharField(max_length=50, unique=True)\n    view_type = models.CharField(max_length=1, choices=IMAGE_VIEW_CHOICES)\n\n    objects = models.Manager()\n    objects_with_aggregates = ImageViewWithAggregationManager()\n\n    def __unicode__(self):\n        return self.description\n\n    @classmethod\n    def get_searchable_fields(cls):\n        return ['description__contains', ]\n```\n\nThis way everything works.\n\nWhen changing to:\n\n``` python\n\n    all_objects = models.Manager()\n    objects_with_aggregates = ImageViewWithAggregationManager()\n```\n\nI get an error on the XHR request for this URL:\n\n```\nhttp://localhost:8000/grappelli/lookup/m2m/?object_id=75&app_label=carsgallery&model_name=imageview\n```\n\nerror:\n\n```\ntype object 'ImageView' has no attribute 'objects'\n\n/home/yarden/.virtualenvs/carzENV/local/lib/python2.7/site-packages/grappelli/views/related.py in m2m_lookup\n70.                             obj = model.objects.get(pk=obj_id) \n\n```\n\nYou can see the field \"views\" which shows nothing indeed, when there are related actually:\n![Screenshot from 2013-04-25 00:42:26](https://f.cloud.github.com/assets/1735325/422461/e16fda52-ad27-11e2-9292-7f520a52278b.png)\n\nAnd finally the Admin Class which uses the ImageView model (related name is \"views\"):\n\n``` python\n\nclass ImageAdmin(admin.ModelAdmin):\n    list_display = ('description_display', 'image_view', 'image')\n    actions = ('generate_description',)\n    list_filter = ('views', NoViewFilter, 'colors', 'bodystyles')\n    raw_id_fields = ('generation', 'colors', 'views')\n    autocomplete_lookup_fields = {\n        'fk': ['generation', ],\n        'm2m': ['views', 'colors', ]\n    }\n    search_fields = ('generation__model__hebrew_name', 'generation__model__english_name',)\n```\n\nShould you need anything else, just ask\n. django==1.5\ndjango-grappelli==2.4.3\n\nYes it works fine with raw-id-fields, only when adding autocomplete_lookup_fields the problem occurs.\n. Interesting, would you like me to add an image? something else to help identify better the problem?\n. Ok so I checked it a bit more.\nThis is my model which another model uses as ManyToMany:\n\n``` python\nclass ImageView(models.Model, SearchAbleModel):\n    description = models.CharField(max_length=50, unique=True)\n    view_type = models.CharField(max_length=1, choices=IMAGE_VIEW_CHOICES)\n\n    objects = models.Manager()\n    objects_with_aggregates = ImageViewWithAggregationManager()\n\n    def __unicode__(self):\n        return self.description\n\n    @classmethod\n    def get_searchable_fields(cls):\n        return ['description__contains', ]\n```\n\nThis way everything works.\n\nWhen changing to:\n\n``` python\n\n    all_objects = models.Manager()\n    objects_with_aggregates = ImageViewWithAggregationManager()\n```\n\nI get an error on the XHR request for this URL:\n\n```\nhttp://localhost:8000/grappelli/lookup/m2m/?object_id=75&app_label=carsgallery&model_name=imageview\n```\n\nerror:\n\n```\ntype object 'ImageView' has no attribute 'objects'\n\n/home/yarden/.virtualenvs/carzENV/local/lib/python2.7/site-packages/grappelli/views/related.py in m2m_lookup\n70.                             obj = model.objects.get(pk=obj_id) \n\n```\n\nYou can see the field \"views\" which shows nothing indeed, when there are related actually:\n![Screenshot from 2013-04-25 00:42:26](https://f.cloud.github.com/assets/1735325/422461/e16fda52-ad27-11e2-9292-7f520a52278b.png)\n\nAnd finally the Admin Class which uses the ImageView model (related name is \"views\"):\n\n``` python\n\nclass ImageAdmin(admin.ModelAdmin):\n    list_display = ('description_display', 'image_view', 'image')\n    actions = ('generate_description',)\n    list_filter = ('views', NoViewFilter, 'colors', 'bodystyles')\n    raw_id_fields = ('generation', 'colors', 'views')\n    autocomplete_lookup_fields = {\n        'fk': ['generation', ],\n        'm2m': ['views', 'colors', ]\n    }\n    search_fields = ('generation__model__hebrew_name', 'generation__model__english_name',)\n```\n\nShould you need anything else, just ask\n. ",
    "saulshanabrook": "Yeah that looks right. At first I wasn't sure if you needed the `Programming Language :: Python` as well, but it looks like thats the correct way to do it.\n. Also the `admin/img/icon_deletelink.gif` has been changed to `admin/img/icon_deletelink.svg` in Django 1.9 so am getting this when I run `collectstatic`\n\n```\nPost-processing 'grappelli/stylesheets/screen.css' failed!\n\nTraceback (most recent call last):\n  File \"manage.py\", line 6, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/management/__init__.py\", line 350, in execute_from_command_line\n    utility.execute()\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/management/__init__.py\", line 342, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/management/base.py\", line 348, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/management/base.py\", line 399, in execute\n    output = self.handle(*args, **options)\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/contrib/staticfiles/management/commands/collectstatic.py\", line 176, in handle\n    collected = self.collect()\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/contrib/staticfiles/management/commands/collectstatic.py\", line 128, in collect\n    raise processed\nwhitenoise.django.MissingFileError: The file 'admin/img/icon_deletelink.gif' could not be found with <whitenoise.django.GzipManifestStaticFilesStorage object at 0x1e78950>.\n\nThe CSS file 'grappelli/stylesheets/screen.css' references a file which could not be found:\n  admin/img/icon_deletelink.gif\n\nPlease check the URL references in this CSS file, particularly any\nrelative paths which might be pointing to the wrong location.\n```\n. Yeah that looks right. At first I wasn't sure if you needed the `Programming Language :: Python` as well, but it looks like thats the correct way to do it.\n. Also the `admin/img/icon_deletelink.gif` has been changed to `admin/img/icon_deletelink.svg` in Django 1.9 so am getting this when I run `collectstatic`\n\n```\nPost-processing 'grappelli/stylesheets/screen.css' failed!\n\nTraceback (most recent call last):\n  File \"manage.py\", line 6, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/management/__init__.py\", line 350, in execute_from_command_line\n    utility.execute()\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/management/__init__.py\", line 342, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/management/base.py\", line 348, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/management/base.py\", line 399, in execute\n    output = self.handle(*args, **options)\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/contrib/staticfiles/management/commands/collectstatic.py\", line 176, in handle\n    collected = self.collect()\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/contrib/staticfiles/management/commands/collectstatic.py\", line 128, in collect\n    raise processed\nwhitenoise.django.MissingFileError: The file 'admin/img/icon_deletelink.gif' could not be found with <whitenoise.django.GzipManifestStaticFilesStorage object at 0x1e78950>.\n\nThe CSS file 'grappelli/stylesheets/screen.css' references a file which could not be found:\n  admin/img/icon_deletelink.gif\n\nPlease check the URL references in this CSS file, particularly any\nrelative paths which might be pointing to the wrong location.\n```\n. ",
    "shuge": "When I access this URL http://127.0.0.1:8000/admin/pages/page/2/\nit raises an NoReverseMatch exception.\n\nMy django settings\n\n```\nINSTALLED_APPS = (\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.sites',\n    'django.contrib.messages',\n\n    \"django.contrib.staticfiles\",\n\n    'grappelli',\n    'filebrowser',\n    'django.contrib.admin',\n\n    \"django.contrib.markup\",\n    'mptt',\n    \"south\",\n    \"tinymce\",\n\n    \"pages\",\n)\n```\n\nIf I remove 'grappelli' from INSTALLED_APPS, it works,\nso I'm sure there is a bug in current version of grappelli.\n\nBoth django-grappelli version 2.4.5 (pull from latest git source) and 2.4.4 (install it from pip) doesn't works with django 1.5.1.\n\nI think the traceback information could show you a big picture about it,\nhttp://dpaste.com/hold/1057259/\nplease take a look, thanks a million.\n. When I access this URL http://127.0.0.1:8000/admin/pages/page/2/\nit raises an NoReverseMatch exception.\n\nMy django settings\n\n```\nINSTALLED_APPS = (\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.sites',\n    'django.contrib.messages',\n\n    \"django.contrib.staticfiles\",\n\n    'grappelli',\n    'filebrowser',\n    'django.contrib.admin',\n\n    \"django.contrib.markup\",\n    'mptt',\n    \"south\",\n    \"tinymce\",\n\n    \"pages\",\n)\n```\n\nIf I remove 'grappelli' from INSTALLED_APPS, it works,\nso I'm sure there is a bug in current version of grappelli.\n\nBoth django-grappelli version 2.4.5 (pull from latest git source) and 2.4.4 (install it from pip) doesn't works with django 1.5.1.\n\nI think the traceback information could show you a big picture about it,\nhttp://dpaste.com/hold/1057259/\nplease take a look, thanks a million.\n. ",
    "umazalakain": "and what's the reason of not sticking with django's way of translating datepicker?\n. Thanks for the explanation ;-) When I have some time I will try to deal with this little issue!\n. Related: https://github.com/sehmaschine/django-grappelli/pull/779\n. @sehmaschine I might be missing something, but that didn't work before neither: the `formsetsort` template isn't called at all when submitting an erroneous formset.\n. @sehmaschine Maybe I didn't understand.\n\nUsing django-grappelli 2.9 and django 1.10, I load a model's change page, change the order of the elements in its related inline formset, change a field in the formset so that it throws an error, and \"Save and continue editing\". The result is that the object is not saved and that the order of the inline objects gets messed up.\n\nAnd I get exactly the same behaviour once applied the PR. But I think I didn't understand your test case :-/\n. @sehmaschine that's what I did, I tested with stable/2.9.x and django 1.10.\n\nBut anyway, my PR only changes the `formsetsort` function. And, as you can test, that function is not called at all when going through the test. So I can't understand how it would mess up the order.\n. @sehmaschine  Also to be noted, when `formsetsort` _is_ executed (when the inline objects are correctly saved), the order is maintained.\n. @sehmaschine Oh my, my apologies: I modified the source path for grappelli and didn't reload my development server! I tried testing with stable/2.9.x and django 1.10 again, this is the traceback I get (which motivates the PR):\n\n```\nTraceback (most recent call last):\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/core/handlers/exception.py\", line 39, in inner\n    response = get_response(request)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/core/handlers/base.py\", line 217, in _get_response\n    response = self.process_exception_by_middleware(e, request)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/core/handlers/base.py\", line 215, in _get_response\n    response = response.render()\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/response.py\", line 109, in render\n    self.content = self.rendered_content\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/response.py\", line 86, in rendered_content\n    content = template.render(context, self._request)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/backends/django.py\", line 66, in render\n    return self.template.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 208, in render\n    return self._render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 199, in _render\n    return self.nodelist.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 994, in render\n    bit = node.render_annotated(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 961, in render_annotated\n    return self.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/loader_tags.py\", line 174, in render\n    return compiled_parent._render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 199, in _render\n    return self.nodelist.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 994, in render\n    bit = node.render_annotated(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 961, in render_annotated\n    return self.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/loader_tags.py\", line 174, in render\n    return compiled_parent._render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 199, in _render\n    return self.nodelist.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 994, in render\n    bit = node.render_annotated(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 961, in render_annotated\n    return self.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/loader_tags.py\", line 70, in render\n    result = block.nodelist.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 994, in render\n    bit = node.render_annotated(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 961, in render_annotated\n    return self.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/loader_tags.py\", line 70, in render\n    result = block.nodelist.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 994, in render\n    bit = node.render_annotated(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 961, in render_annotated\n    return self.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/defaulttags.py\", line 209, in render\n    nodelist.append(node.render_annotated(context))\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 961, in render_annotated\n    return self.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/loader_tags.py\", line 210, in render\n    return template.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 210, in render\n    return self._render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 199, in _render\n    return self.nodelist.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 994, in render\n    bit = node.render_annotated(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 961, in render_annotated\n    return self.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/defaulttags.py\", line 510, in render\n    return self.nodelist.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 994, in render\n    bit = node.render_annotated(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 961, in render_annotated\n    return self.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/defaulttags.py\", line 159, in render\n    values = self.sequence.resolve(context, True)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 739, in resolve\n    new_obj = func(obj, *arg_vals)\n  File \"/home/unai/devel/django-grappelli/grappelli/templatetags/grp_tags.py\",line 138, in formsetsort\n    sorted_list.sort()\nTypeError: unorderable types: InlineAdminForm() < InlineAdminForm()\n```\n. @sehmaschine `formsetsort` is trying to sort a list of `(int, InlineAdminForm)` tuples. This works correctly provided all `int`s are unique.\n. and what's the reason of not sticking with django's way of translating datepicker?\n. Thanks for the explanation ;-) When I have some time I will try to deal with this little issue!\n. Related: https://github.com/sehmaschine/django-grappelli/pull/779\n. @sehmaschine I might be missing something, but that didn't work before neither: the `formsetsort` template isn't called at all when submitting an erroneous formset.\n. @sehmaschine Maybe I didn't understand.\n\nUsing django-grappelli 2.9 and django 1.10, I load a model's change page, change the order of the elements in its related inline formset, change a field in the formset so that it throws an error, and \"Save and continue editing\". The result is that the object is not saved and that the order of the inline objects gets messed up.\n\nAnd I get exactly the same behaviour once applied the PR. But I think I didn't understand your test case :-/\n. @sehmaschine that's what I did, I tested with stable/2.9.x and django 1.10.\n\nBut anyway, my PR only changes the `formsetsort` function. And, as you can test, that function is not called at all when going through the test. So I can't understand how it would mess up the order.\n. @sehmaschine  Also to be noted, when `formsetsort` _is_ executed (when the inline objects are correctly saved), the order is maintained.\n. @sehmaschine Oh my, my apologies: I modified the source path for grappelli and didn't reload my development server! I tried testing with stable/2.9.x and django 1.10 again, this is the traceback I get (which motivates the PR):\n\n```\nTraceback (most recent call last):\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/core/handlers/exception.py\", line 39, in inner\n    response = get_response(request)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/core/handlers/base.py\", line 217, in _get_response\n    response = self.process_exception_by_middleware(e, request)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/core/handlers/base.py\", line 215, in _get_response\n    response = response.render()\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/response.py\", line 109, in render\n    self.content = self.rendered_content\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/response.py\", line 86, in rendered_content\n    content = template.render(context, self._request)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/backends/django.py\", line 66, in render\n    return self.template.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 208, in render\n    return self._render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 199, in _render\n    return self.nodelist.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 994, in render\n    bit = node.render_annotated(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 961, in render_annotated\n    return self.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/loader_tags.py\", line 174, in render\n    return compiled_parent._render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 199, in _render\n    return self.nodelist.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 994, in render\n    bit = node.render_annotated(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 961, in render_annotated\n    return self.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/loader_tags.py\", line 174, in render\n    return compiled_parent._render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 199, in _render\n    return self.nodelist.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 994, in render\n    bit = node.render_annotated(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 961, in render_annotated\n    return self.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/loader_tags.py\", line 70, in render\n    result = block.nodelist.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 994, in render\n    bit = node.render_annotated(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 961, in render_annotated\n    return self.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/loader_tags.py\", line 70, in render\n    result = block.nodelist.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 994, in render\n    bit = node.render_annotated(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 961, in render_annotated\n    return self.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/defaulttags.py\", line 209, in render\n    nodelist.append(node.render_annotated(context))\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 961, in render_annotated\n    return self.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/loader_tags.py\", line 210, in render\n    return template.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 210, in render\n    return self._render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 199, in _render\n    return self.nodelist.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 994, in render\n    bit = node.render_annotated(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 961, in render_annotated\n    return self.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/defaulttags.py\", line 510, in render\n    return self.nodelist.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 994, in render\n    bit = node.render_annotated(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 961, in render_annotated\n    return self.render(context)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/defaulttags.py\", line 159, in render\n    values = self.sequence.resolve(context, True)\n  File \"/home/unai/.virtualenvs/amv2/lib/python3.5/site-packages/django/template/base.py\", line 739, in resolve\n    new_obj = func(obj, *arg_vals)\n  File \"/home/unai/devel/django-grappelli/grappelli/templatetags/grp_tags.py\",line 138, in formsetsort\n    sorted_list.sort()\nTypeError: unorderable types: InlineAdminForm() < InlineAdminForm()\n```\n. @sehmaschine `formsetsort` is trying to sort a list of `(int, InlineAdminForm)` tuples. This works correctly provided all `int`s are unique.\n. ",
    "skinofstars": "+1\n. +1\n. ",
    "exonian": "I haven't used the autocomplete so hadn't noticed, but yes you're right the same fix should be applied there.\n. I haven't used the autocomplete so hadn't noticed, but yes you're right the same fix should be applied there.\n. ",
    "ppo": "Yes, I think it's the same... at least the CSS fix works.\nSorry didn't found that one.\n. Yes, I think it's the same... at least the CSS fix works.\nSorry didn't found that one.\n. ",
    "nkeilar": "Good point. Sorry, my bad. Think I ment to do that, but must have used the wrong tab. Have a good weekend. \n. Good point. Sorry, my bad. Think I ment to do that, but must have used the wrong tab. Have a good weekend. \n. ",
    "treyhunner": "I changed this into a pull request.\n\nI suggest analyzing the changes I made locally because Github's in-browser diff doesn't seem to handle large volumes of changes very well.\n\nIf you perform a [diff ignoring whitespace](https://github.com/sehmaschine/django-grappelli/pull/325/files?w=1) (`git diff -w master`) you'll see that only changes in whitespace were made in addition to some file mode fixes (755 to 644) and the addition of the `.editorconfig` file.\n\nSince Python cares about whitespace differences (if the indentation changed), here's a diff of the whitespace changes that weren't just adding or removing lines:\n\n```\n$ git diff master */**/*.py | grep -v '^[+-] *$' | grep -C5 '^[+-][^-+]'\n+++ b/grappelli/urls.py\n@@ -1,9 +1,9 @@\n # coding: utf-8\n\n # DJANGO IMPORTS\n-try:\n+try:\n    from django.conf.urls import url, patterns\n-except ImportError:\n+except ImportError:\n     # for Django version less then 1.4\n     from django.conf.urls.defaults import url, patterns\n```\n. I'd like more information if you can provide it so that I can clean up the pull request (if possible) or understand what issue there is for future pull requests that I author.\n\nDo you mean you're having merge conflicts (I'm not so I assume you aren't also)?\n\nDo you mean you're not comfortable merging it?  If so why not?  Is it because the resulting `git blame` command will reveal my changes as the most recent for too many lines of code?  Is it because you're not confident that these changes won't cause a bug or another issue of some sort?  Or is it something else?\n. Ok.  If there is a branch I should rebase my changes onto now or in the future so that they can be merged properly, let me know.  It's not too difficult to reproduce these changes on a new code base.\n. I just rebased the changes onto `stable/2.4.x` and reran the EditorConfig checker to confirm there are no more style issues.\n\nThis should be good to merge into stable/2.4.x now.\n. I changed this into a pull request.\n\nI suggest analyzing the changes I made locally because Github's in-browser diff doesn't seem to handle large volumes of changes very well.\n\nIf you perform a [diff ignoring whitespace](https://github.com/sehmaschine/django-grappelli/pull/325/files?w=1) (`git diff -w master`) you'll see that only changes in whitespace were made in addition to some file mode fixes (755 to 644) and the addition of the `.editorconfig` file.\n\nSince Python cares about whitespace differences (if the indentation changed), here's a diff of the whitespace changes that weren't just adding or removing lines:\n\n```\n$ git diff master */**/*.py | grep -v '^[+-] *$' | grep -C5 '^[+-][^-+]'\n+++ b/grappelli/urls.py\n@@ -1,9 +1,9 @@\n # coding: utf-8\n\n # DJANGO IMPORTS\n-try:\n+try:\n    from django.conf.urls import url, patterns\n-except ImportError:\n+except ImportError:\n     # for Django version less then 1.4\n     from django.conf.urls.defaults import url, patterns\n```\n. I'd like more information if you can provide it so that I can clean up the pull request (if possible) or understand what issue there is for future pull requests that I author.\n\nDo you mean you're having merge conflicts (I'm not so I assume you aren't also)?\n\nDo you mean you're not comfortable merging it?  If so why not?  Is it because the resulting `git blame` command will reveal my changes as the most recent for too many lines of code?  Is it because you're not confident that these changes won't cause a bug or another issue of some sort?  Or is it something else?\n. Ok.  If there is a branch I should rebase my changes onto now or in the future so that they can be merged properly, let me know.  It's not too difficult to reproduce these changes on a new code base.\n. I just rebased the changes onto `stable/2.4.x` and reran the EditorConfig checker to confirm there are no more style issues.\n\nThis should be good to merge into stable/2.4.x now.\n. ",
    "jaap3": "In the upcoming release of django-smuggler the load_data_form.html template has been changed drastically. This means that the included template in grapelli won't be compatible anymore! I personally don't use grappelli, just giving you guys a heads-up :-).\n\np.s. If there's anything in the django-smuggler templates that can be done to make integration with grappelli easier, give us a pull request! https://github.com/semente/django-smuggler\n. In the upcoming release of django-smuggler the load_data_form.html template has been changed drastically. This means that the included template in grapelli won't be compatible anymore! I personally don't use grappelli, just giving you guys a heads-up :-).\n\np.s. If there's anything in the django-smuggler templates that can be done to make integration with grappelli easier, give us a pull request! https://github.com/semente/django-smuggler\n. ",
    "hellysmile": "yeah, but when python setup.py  sdist upload you can push these files to PyPi\n. https://github.com/comoga/django-constance/blob/master/constance/templates/admin/constance/change_list.html\n\ni need to ovveride original template\n. yeah, but when python setup.py  sdist upload you can push these files to PyPi\n. https://github.com/comoga/django-constance/blob/master/constance/templates/admin/constance/change_list.html\n\ni need to ovveride original template\n. ",
    "compfaculty": "If you mean this way:\n\n``` python\nclass PageObject(MPTTModel):\n    '''PageObject class'''\n    title = models.CharField(blank=False,unique=True, max_length=100)\n    url = models.URLField(_('Url field'),blank=True,)\n    content_type = models.ForeignKey(ContentType, related_name=\"page_objects\", db_index=True,blank=True, null=True,)\n    content_id = models.PositiveIntegerField(db_index=True,blank=True, null=True,)\n    content = generic.GenericForeignKey('content_type', 'content_id')\n    parent = TreeForeignKey('self', null=True, blank=True, related_name='children')\n\n    def __unicode__(self):\n        return self.title\n    @property\n    def ancestors(self):\n        return self.get_ancestors()\n\n    @property\n    def childrens(self):\n        return self.get_children()\n    @property\n    def get_portlets(self):\n        '''returns list of all portlets related to this instance'''\n        p_a = PortletAssignment.objects.prefetch_related('portlet').filter(page_object=self)\n        return [p.portlet for p in p_a]\n\n    def related_label(self):\n        return force_text(\"%s:%s\" % (self.name, self.app_label))\n```\n\n-have no result (\nOr I need to insert _related_label_ in every model in project? But this is not good solution...\nMaybe we have some misunderstood, so I give you a picture of trouble\n![contenttype](https://f.cloud.github.com/assets/1645749/761599/9d262984-e7d6-11e2-9059-61817026b707.png)\n\nAs you can see, where are two same \"category\" from different apps(and how to distinguish beetween them?) - and I want to show the name of app in droplist\n. Yes. ) But no matter I suppose. I need to display ContentType instances in my PageObject create form in admin. I want to have , i.e. :\ncategory:shop\ncategory:blog\nBut now I have only\ncategory\ncategory\nAs you can see on image.\nSo, I need to modify ContentType itself, but how!?\n. I checked it in the debugger - related_label just not calling. \nOk. Lets go step by step.(sorry for my English)\n1. ContentType instansce has  id, name,  app_label, model.\n2. content_type field from my model related to html select element in admin interface:\n\n``` html\n<select id=\"id_content_type\" name=\"content_type\">\n<option selected=\"selected\" value=\"\">---------</option>\n<option value=\"104\">category</option>\n<option value=\"45\">category</option> \n```\n1. This html output is yours javascript job. You just using id and name. But I need id+name+app_label.\n2. I thought I could change this behavior using  related_label method on ContentType. But not. The only solution that I find, was to rework ContentType **str** metod. \n\n``` python\n        #return force_text(model._meta.verbose_name) #original code\n        return force_text(\"%s:%s\" % (self.name,self.app_label)) #my solution\n```\n\nBut I dont want to change ContentType internal logic.\n. Ups. (( But thanks. \nBut I'll hope to see this feature in Grappelli: customize ContentType items view in dropdown. \n. If you mean this way:\n\n``` python\nclass PageObject(MPTTModel):\n    '''PageObject class'''\n    title = models.CharField(blank=False,unique=True, max_length=100)\n    url = models.URLField(_('Url field'),blank=True,)\n    content_type = models.ForeignKey(ContentType, related_name=\"page_objects\", db_index=True,blank=True, null=True,)\n    content_id = models.PositiveIntegerField(db_index=True,blank=True, null=True,)\n    content = generic.GenericForeignKey('content_type', 'content_id')\n    parent = TreeForeignKey('self', null=True, blank=True, related_name='children')\n\n    def __unicode__(self):\n        return self.title\n    @property\n    def ancestors(self):\n        return self.get_ancestors()\n\n    @property\n    def childrens(self):\n        return self.get_children()\n    @property\n    def get_portlets(self):\n        '''returns list of all portlets related to this instance'''\n        p_a = PortletAssignment.objects.prefetch_related('portlet').filter(page_object=self)\n        return [p.portlet for p in p_a]\n\n    def related_label(self):\n        return force_text(\"%s:%s\" % (self.name, self.app_label))\n```\n\n-have no result (\nOr I need to insert _related_label_ in every model in project? But this is not good solution...\nMaybe we have some misunderstood, so I give you a picture of trouble\n![contenttype](https://f.cloud.github.com/assets/1645749/761599/9d262984-e7d6-11e2-9059-61817026b707.png)\n\nAs you can see, where are two same \"category\" from different apps(and how to distinguish beetween them?) - and I want to show the name of app in droplist\n. Yes. ) But no matter I suppose. I need to display ContentType instances in my PageObject create form in admin. I want to have , i.e. :\ncategory:shop\ncategory:blog\nBut now I have only\ncategory\ncategory\nAs you can see on image.\nSo, I need to modify ContentType itself, but how!?\n. I checked it in the debugger - related_label just not calling. \nOk. Lets go step by step.(sorry for my English)\n1. ContentType instansce has  id, name,  app_label, model.\n2. content_type field from my model related to html select element in admin interface:\n\n``` html\n<select id=\"id_content_type\" name=\"content_type\">\n<option selected=\"selected\" value=\"\">---------</option>\n<option value=\"104\">category</option>\n<option value=\"45\">category</option> \n```\n1. This html output is yours javascript job. You just using id and name. But I need id+name+app_label.\n2. I thought I could change this behavior using  related_label method on ContentType. But not. The only solution that I find, was to rework ContentType **str** metod. \n\n``` python\n        #return force_text(model._meta.verbose_name) #original code\n        return force_text(\"%s:%s\" % (self.name,self.app_label)) #my solution\n```\n\nBut I dont want to change ContentType internal logic.\n. Ups. (( But thanks. \nBut I'll hope to see this feature in Grappelli: customize ContentType items view in dropdown. \n. ",
    "arski": "yea, without admin.site.register on the related model, it won't work.\n. Well yes and no. Say you have two models, ModelA and ModelB, with ModelA having a ForeignKey field pointing to ModelB, which you want to run through autocomplete in your ModelA admin interface. Of course, in order for this to work in the first place, one must have registered ModelA with admin, which I agree is not something grappelli should be documenting. However, one might not necessarily want/need to register ModelB with admin as well (maybe I don't want/need it to be working with the admin interface) - but this will make the autocomplete in ModelA's edit form to fail in grappelli. So, I guess you see my point. This nuance is really causing the \"bug reports\" in your issue queue (I could spot at least one other apart from the one I linked to) and would be good to have it documented here (because it's causing grappelli's autocomplete to fail).\n. Hm, OK this might be a language issue then. Because \"alternative\" to me does not imply that it has all the same requirements. Besides, you say `And you need to register both models with every kind of relationship when using django.contrib.admin.` - that is not really true from what I can see, having tested the admin interface for ModelA with/without having registered ModelB (just the default way, without autocomplete or anything). The only difference is that when ModelB is registered, I get an \"add another\" plus-sign icon; otherwise, I get the same default select list in both cases. So strictly speaking, it seems that you dont need to register both models in principle.\n. Could replace special characters with % signs in case they are stored with a different encoding in the db. Say user searches for an \"Cats & Dogs\" title of an object when its stored as \"Cats &amp; Dogs\" in the db.\n\nI know I know, that is also somewhat rare, but it would be nice to have this small hook anyway in case one wants to autocomplete by url/title which is a long field and can only be well indexed as a hash.\n\nCheers\n. Sure sure, I actually thought this might be a fixed setting (i.e. lookup-as-hash, but that would be much harder to implement I think.)\n. Hey, sorry, it's been on my to-do list but just swamped with all kinds of random stuff lately. I'll hopefully have this done today :) Thanks for bumping.\n. OK, updated PR with some documentation. I'll let you add all/any changelog messages if needed. Let me know if there's anything else missing.\n. yea, without admin.site.register on the related model, it won't work.\n. Well yes and no. Say you have two models, ModelA and ModelB, with ModelA having a ForeignKey field pointing to ModelB, which you want to run through autocomplete in your ModelA admin interface. Of course, in order for this to work in the first place, one must have registered ModelA with admin, which I agree is not something grappelli should be documenting. However, one might not necessarily want/need to register ModelB with admin as well (maybe I don't want/need it to be working with the admin interface) - but this will make the autocomplete in ModelA's edit form to fail in grappelli. So, I guess you see my point. This nuance is really causing the \"bug reports\" in your issue queue (I could spot at least one other apart from the one I linked to) and would be good to have it documented here (because it's causing grappelli's autocomplete to fail).\n. Hm, OK this might be a language issue then. Because \"alternative\" to me does not imply that it has all the same requirements. Besides, you say `And you need to register both models with every kind of relationship when using django.contrib.admin.` - that is not really true from what I can see, having tested the admin interface for ModelA with/without having registered ModelB (just the default way, without autocomplete or anything). The only difference is that when ModelB is registered, I get an \"add another\" plus-sign icon; otherwise, I get the same default select list in both cases. So strictly speaking, it seems that you dont need to register both models in principle.\n. Could replace special characters with % signs in case they are stored with a different encoding in the db. Say user searches for an \"Cats & Dogs\" title of an object when its stored as \"Cats &amp; Dogs\" in the db.\n\nI know I know, that is also somewhat rare, but it would be nice to have this small hook anyway in case one wants to autocomplete by url/title which is a long field and can only be well indexed as a hash.\n\nCheers\n. Sure sure, I actually thought this might be a fixed setting (i.e. lookup-as-hash, but that would be much harder to implement I think.)\n. Hey, sorry, it's been on my to-do list but just swamped with all kinds of random stuff lately. I'll hopefully have this done today :) Thanks for bumping.\n. OK, updated PR with some documentation. I'll let you add all/any changelog messages if needed. Let me know if there's anything else missing.\n. ",
    "onoxo": "No, is that what I have to do?\n\n---\n\nvedran kolac\n\n---\n\ngTalk - vedran.kolac@gmail.com\n\n---\n\nskype - vedrankolac\n\n---\n\n+385 (0) 91 567 07 17\n\n---\n\nhttp://www.onoxo.net\nhttp://www.projectmoe.net\n\n---\n\nOn Tue, Jul 23, 2013 at 1:01 PM, Patrick Kranzlmueller <\nnotifications@github.com> wrote:\n\n> Did you add the module to your Dashboard?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/351#issuecomment-21406683\n> .\n. Ok, working :)\nThanks!\n. No, is that what I have to do?\n\n---\n\nvedran kolac\n\n---\n\ngTalk - vedran.kolac@gmail.com\n\n---\n\nskype - vedrankolac\n\n---\n\n+385 (0) 91 567 07 17\n\n---\n\nhttp://www.onoxo.net\nhttp://www.projectmoe.net\n\n---\n\nOn Tue, Jul 23, 2013 at 1:01 PM, Patrick Kranzlmueller <\nnotifications@github.com> wrote:\n\n> Did you add the module to your Dashboard?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/issues/351#issuecomment-21406683\n> .\n. Ok, working :)\nThanks!\n. ",
    "thenewguy": "I do not think it would be backported < 1.6 in django.  But Grappelli templates could be written to support older versions I would imagine with an extra if condition in the markup easily enough.\n\nThis is another way the issue presented itself that was marked as a duplicate: https://code.djangoproject.com/ticket/19888\n. I do not think it would be backported < 1.6 in django.  But Grappelli templates could be written to support older versions I would imagine with an extra if condition in the markup easily enough.\n\nThis is another way the issue presented itself that was marked as a duplicate: https://code.djangoproject.com/ticket/19888\n. ",
    "ppawlak": "Hi, I am trying to get this working. [From the docs](http://django-grappelli.readthedocs.io/en/latest/customization.html#rearrange-inlines) it seems to be implemented ?\r\n\r\nMaybe I am not doing it right. Where the doc says \r\n\r\n> The two classes for the placeholder are important. First, you need a class placeholder. The second class has to match the id of the inline\u2013group.\r\n\r\nis not very clear. Can you provide a full working example ?\r\n\r\nThanks a lot!\r\n. Hi, I am trying to get this working. [From the docs](http://django-grappelli.readthedocs.io/en/latest/customization.html#rearrange-inlines) it seems to be implemented ?\r\n\r\nMaybe I am not doing it right. Where the doc says \r\n\r\n> The two classes for the placeholder are important. First, you need a class placeholder. The second class has to match the id of the inline\u2013group.\r\n\r\nis not very clear. Can you provide a full working example ?\r\n\r\nThanks a lot!\r\n. ",
    "benebun": "Related: I guess with 2.5.x the use of the .grp- prefix will be extended? Right now there are still some button hover effects from grappelli that apply to a TinyMCE4 skin.\n. Related: I guess with 2.5.x the use of the .grp- prefix will be extended? Right now there are still some button hover effects from grappelli that apply to a TinyMCE4 skin.\n. ",
    "rockymeza": "Here is the ticket where the method changed: https://code.djangoproject.com/ticket/13696 and here is the commit https://github.com/django/django/commit/3aad955ea8db1592fad0012155eaa25b72e50dc5\n. ping @sehmaschine \n. Thanks @sehmaschine!  After I sent that ping I saw the alert on the docs that says:\n\n> Grappelli is always developed against the lastest stable Django release and is NOT tested with Djangos trunk.\n\nand then I felt bad.\n\nThanks for merging anyway!\n. Here is the ticket where the method changed: https://code.djangoproject.com/ticket/13696 and here is the commit https://github.com/django/django/commit/3aad955ea8db1592fad0012155eaa25b72e50dc5\n. ping @sehmaschine \n. Thanks @sehmaschine!  After I sent that ping I saw the alert on the docs that says:\n\n> Grappelli is always developed against the lastest stable Django release and is NOT tested with Djangos trunk.\n\nand then I felt bad.\n\nThanks for merging anyway!\n. ",
    "SalahAdDin": "Hey men, can you say me how do you do your grappelli's dashboard?\nI don't know that is possible do all of this and i don't know how do this, but i want to do this, and better.\nI don't know where put my dashboard api configuration file, even :'(\n\nPlease, teach me!\n\nBut, wow, one year ago that you don't come here, so bad.\n. A question, how do you do pop ups for django grappelli?\n. Yes yes , but, i don`t know how do dit, i'm newie with dashboard, and i want add many other utils for my dahsboard, but, i don't know how do it.\n. Hey men, can you say me how do you do your grappelli's dashboard?\nI don't know that is possible do all of this and i don't know how do this, but i want to do this, and better.\nI don't know where put my dashboard api configuration file, even :'(\n\nPlease, teach me!\n\nBut, wow, one year ago that you don't come here, so bad.\n. A question, how do you do pop ups for django grappelli?\n. Yes yes , but, i don`t know how do dit, i'm newie with dashboard, and i want add many other utils for my dahsboard, but, i don't know how do it.\n. ",
    "lzanuz": "I prefer the django_admin_tools dashboard. But there are some good ideas. \n- I liked your breadcrumbs, notifications and tabs instead of fieldsets is cool.\n. templates/registration/password_reset_email.html (line 7)\n\nchange:  uidb36=uid\nto:  uidb64=uid\n. Hello, grappelli is nice, great django app. \n\nAnother small thing in: templates/registration/password_reset_email.html\n\nIn grappelli template:\n\n{% trans \"Your username, in case you've forgotten:\" %} {% firstof user.first_name user.username user.get_short_name user.get_username %}\n\nIn django template:\n\n{% trans \"Your username, in case you've forgotten:\" %} {{ user.get_username }}\n\nSo, if the username is \"sehmaschine\" and the User.first_name is \"Patrick\", the user will receive in e-mail:\n\nYour username, in case you've forgotten: Patrick\n\nbut the real username is: sehmaschine\n\nby.\n. Hello again,\n\nTemplates:\n\ntemplates/admin/login.html\ntemplates/admin/change_form.html\ntemplates/admin/change_list_filter_sidebar.html\ntemplates/admin/auth/user/change_password.html\ntemplates/admin/change_list.html\n\nIn these grappelli templates is required a small review:\n\n{% if form.errors %}\n      <p class=\"errornote\">{% blocktrans count form.errors.items|length as counter %}Please correct the error below.{% plural %}Please correct the errors below.{% endblocktrans %}</p>\n{% endif %}\n\nMust change like django 1.6. It's not working any more.\n\n{% if form.errors.items|length == 1 %}{% trans \"Please correct the error below.\" %}{% else %}{% trans \"Please correct the errors below.\" %}{% endif %}\n\nBy.\n. https://docs.djangoproject.com/en/dev/releases/1.6/#minor-features\n\nThe default widgets for EmailField, URLField, IntegerField, FloatField and DecimalField use the new type attributes available in HTML5 (type='email', type='url', type='number'). Note that due to erratic support of the number input type with localized numbers in current browsers, Django only uses it when numeric fields are not localized.\n\n<input id=\"id_price\" type=\"number\" step=\"0.01\" name=\"price\" maxlength=\"12\">\n\ninput[type=\"text\"],\ninput[type=\"password\"],\ninput[type=\"submit\"],\ninput[type=\"reset\"],\ntextarea, select {\n.....\n}\n\nOn CSS, need to include these new types, email, url and number.\n. Nice, I had this same situation, a custom form for user change_password and the help_text for password1 not appears.\nby.\n. Sorry by my poor english :)\n\nWhen I click on \"search button\", open a popup to select an item or add another.\n\nIf I select an item that is on the list, no problem. But if I add a new one, when I click on \"Save\" button the value of this new item is not set on the auto-complete field.\n\n![auto_complete](https://f.cloud.github.com/assets/5805339/1641800/31c63860-5864-11e3-9012-b0aff378ce37.jpg)\n. Hi.\n\nI'd like to suggest too, if it's possible, of course, to select multiple options in filter and then apply it togheter. Actually any selected option by user in filter makes a new request and the user must to wait for results to apply another. After applied multiple filters, it's necessary to invert the proccess to clear them.\n\nIn my view point, a good usability in filters makes the users happy, because facility a lot theirs jobs.\n\nAtt.\n. @sehmaschine Yes, for apply just one filter is better now, but if you want to apply multiple filters for each one you must select it and wait for reload the page. After the user need to clean one by one again. But how I said, it's just a suggestion for improve the usability.\n. ![screenshot-localhost](https://cloud.githubusercontent.com/assets/5805339/4260893/4473a664-3b53-11e4-910b-32b64180d30e.png)\n\nHi, this is mine custom filter, just css and js was needed to do this. Of course, changing template is more easier, but I didn't be intrusive. The user select all options they want and apply and remove once. It's just my suggestion to improve filters e make grappelli mutch better for all.\n. OK, I'll try.\n\nOn django \"contrib/admin/options.py\" there is a class \"StackedInline\" that you can define the template name for stacked inlines.\n\nSo, I'd like to create my own template that extends from grappelli stacked.html. In this way, I dont need to have a copy of the template on my app. On grappelli tamplete, something like:\n\n-----admin/edit_inline/stacked.htm-----\n\nonAfterRemoved: function(inline) {\n    --code js--\n    {% block onAfterRemoved %}{% endblock %}\n},\nonAfterAdded: function(form) {\n    --code js--\n    {% block onAfterAdded %}{% endblock %}\n}\n\n------than I could do on admin---\n\nclass DivisionInline(admin.StackedInline):\n    model = MyModel\n    form = MyForm\n    template = 'myStackedInline.html'\n\n-----myStackedInline.html------\n\n{% extends \"admin/edit_inline/stacked.html\" %}\n{% block onAfterAdded %}\n    --my code js--\n{% endblock %}\n. Replace the jQuery function were my first shot, but then, when I clicked on \"Add another\" two new inlines was added instead of one.\n\nSeems that if I replace de function, two events are executed. Maybe i did something wrong, but I Just copied the generated code on template and added to my custom JS file whith my changes.\n\nIf is not a available option to add blocks, unfortunatelly I will need replace the whole template.\n\nBy\n. $(\"#document_set-group\").grp_inline({\n            prefix: \"document_set\",\n            onAfterRemoved: function(inline) {},\n            onAfterAdded: function(form) {\n            ...code...\n            }\n});\n\nThe code are generated for each inline, I have two inlines and the block of code in the stacked.html is generated for each inline.\n. OK, no problem. Just for history, I did this on my template.\n\n{% block onAfterAdded %}\n                if (prefix == 'photo_set') {\n                    << code >>\n                }\n                if (prefix == 'video_set') {\n                    << code >>\n                }\n{% endblock %}\n. News from Django 1.7 beta 1, almost there!\n\nhttps://www.djangoproject.com/weblog/2014/mar/20/django-17b1/\nhttps://docs.djangoproject.com/en/dev/releases/1.7/\n. Hi @sehmaschine.\n\nFirst, sorry for ask here.\n\nI disagree a litte bit, because the admin it's used by \"suposed trusted users\" and we must warranty the application security. Some users don't have permissions for some models in admin, but if they knows that these models exists, they can try get some kind of access.\n\nThe users can knows the apps you have been installed and can explore bugs in this apps to try get access to restrict informations.\n\nIf the MODEL_URL_ARRAY dosen't expose that, it continue there, but at least it's obscure to users.\n\nBy.\n. Hi, in this case, I use templatetags functions from admin_tools to move and keep positions of dashbord panels. Maybe I could use just admin_tools dashboard.\n. Nice, thanks.\n. Hi,\n\nOn django 1.7 is not necessary to have models.py in an app anymore.\n\nhttps://docs.djangoproject.com/en/dev/releases/1.7/#app-loading-refactor\n\nItem 3 - It is possible to omit models.py entirely if an application doesn\u2019t have any models.\n\nMaybe haystack is not compatible with django.1.7.X yet.\n. Nice Guilherme, this will be useful. \nI think that this patch could be done on grappelli 2.6.x too.\nThks.\n. Yes I think. Because to remove a value is change event.\nSo the event is triggered and the developer decide what to to if a value was removed.\nBy.\n. Hi @parsch \n\nDidn't solve for me. I updated my git repository, cleaned my browser cache, forced reload static content but the problem it's the same.\n\nIt worked for you?\n\nThanks.\n. @parsch I tried on Chrome (it worked) but on Firefox (not worked).\n\nI found just a webkit background size on screen.css, but this not work for all browsers. When I delete \"-webkit\" and use just \"background-size\" works fine in Firefox and Chrome.\n\n-webkit-background-size: auto !important; (not works on FF)\nbackground-size: auto !important; (works on FF and Chome, not tested on IE)\n. @parsch  Yes, I'am using @dev/2.6.x, now I checkout @stable/2.6.x and it's OK. What version is better for use in production, dev or stable?\n. Thanks @parsch \n\nI changed dev to stable, I'll use this repository from now.\n\nBy.\n. Nice, I opened the same issue for dango-floppyforms. They changed and released 1.4.0 with this and  other issues.\n. Sorry, django-grappelli.git@stable/2.6.x#egg=grappelli\nUpdated today from git.\n. django==1.7.7\n. Hi, I tried in another machine and it's OK. Maybe it's something wrong with my virtualenv. I'll reinstall everything for test.\n. It's working. There was someting wrong whith my envoriment on that time. Sorry.\n. Try dev/2.7.x with django 1.8+\nBut it's development.\n. Hi @sehmaschine\n\nI really think that is important, so I had developed an improvement on my system to do that. I added a button on left widget that on click open a popup to edit the selected object.  If this feature was supported on grappelli will be very useful for all.\n\n/admin/app/objec>/id/?_popup=1\n\n![2015-06-15 09-07-22](https://cloud.githubusercontent.com/assets/5805339/8159592/8e7c0fda-133e-11e5-8377-d6e26f60aac4.png)\n. Sorry. I never used raw-id-fields with inlines.\n. This happens for me on both browsers.\n\nLinux / Goggle Chrome  42.0.2311.90 (64-bit) \nLinux / Firefox 38.0.5\n\nOn rigth select multiple widget (\"id_field_to\") there is a inline style thtat set the height. If I remove it the height is the same on both sides.\n\nAbout the yellow backgroud on inlines widget, I think that jquery UI is using a different theme, because if you run this on 2.6.x version and 2.7.x version is different theme. On 2.7.x is a yellow theme.\n\nrun on browser console:   grp.jQuery('#grp-content-title').dialog();\n. I prefer the django_admin_tools dashboard. But there are some good ideas. \n- I liked your breadcrumbs, notifications and tabs instead of fieldsets is cool.\n. templates/registration/password_reset_email.html (line 7)\n\nchange:  uidb36=uid\nto:  uidb64=uid\n. Hello, grappelli is nice, great django app. \n\nAnother small thing in: templates/registration/password_reset_email.html\n\nIn grappelli template:\n\n{% trans \"Your username, in case you've forgotten:\" %} {% firstof user.first_name user.username user.get_short_name user.get_username %}\n\nIn django template:\n\n{% trans \"Your username, in case you've forgotten:\" %} {{ user.get_username }}\n\nSo, if the username is \"sehmaschine\" and the User.first_name is \"Patrick\", the user will receive in e-mail:\n\nYour username, in case you've forgotten: Patrick\n\nbut the real username is: sehmaschine\n\nby.\n. Hello again,\n\nTemplates:\n\ntemplates/admin/login.html\ntemplates/admin/change_form.html\ntemplates/admin/change_list_filter_sidebar.html\ntemplates/admin/auth/user/change_password.html\ntemplates/admin/change_list.html\n\nIn these grappelli templates is required a small review:\n\n{% if form.errors %}\n      <p class=\"errornote\">{% blocktrans count form.errors.items|length as counter %}Please correct the error below.{% plural %}Please correct the errors below.{% endblocktrans %}</p>\n{% endif %}\n\nMust change like django 1.6. It's not working any more.\n\n{% if form.errors.items|length == 1 %}{% trans \"Please correct the error below.\" %}{% else %}{% trans \"Please correct the errors below.\" %}{% endif %}\n\nBy.\n. https://docs.djangoproject.com/en/dev/releases/1.6/#minor-features\n\nThe default widgets for EmailField, URLField, IntegerField, FloatField and DecimalField use the new type attributes available in HTML5 (type='email', type='url', type='number'). Note that due to erratic support of the number input type with localized numbers in current browsers, Django only uses it when numeric fields are not localized.\n\n<input id=\"id_price\" type=\"number\" step=\"0.01\" name=\"price\" maxlength=\"12\">\n\ninput[type=\"text\"],\ninput[type=\"password\"],\ninput[type=\"submit\"],\ninput[type=\"reset\"],\ntextarea, select {\n.....\n}\n\nOn CSS, need to include these new types, email, url and number.\n. Nice, I had this same situation, a custom form for user change_password and the help_text for password1 not appears.\nby.\n. Sorry by my poor english :)\n\nWhen I click on \"search button\", open a popup to select an item or add another.\n\nIf I select an item that is on the list, no problem. But if I add a new one, when I click on \"Save\" button the value of this new item is not set on the auto-complete field.\n\n![auto_complete](https://f.cloud.github.com/assets/5805339/1641800/31c63860-5864-11e3-9012-b0aff378ce37.jpg)\n. Hi.\n\nI'd like to suggest too, if it's possible, of course, to select multiple options in filter and then apply it togheter. Actually any selected option by user in filter makes a new request and the user must to wait for results to apply another. After applied multiple filters, it's necessary to invert the proccess to clear them.\n\nIn my view point, a good usability in filters makes the users happy, because facility a lot theirs jobs.\n\nAtt.\n. @sehmaschine Yes, for apply just one filter is better now, but if you want to apply multiple filters for each one you must select it and wait for reload the page. After the user need to clean one by one again. But how I said, it's just a suggestion for improve the usability.\n. ![screenshot-localhost](https://cloud.githubusercontent.com/assets/5805339/4260893/4473a664-3b53-11e4-910b-32b64180d30e.png)\n\nHi, this is mine custom filter, just css and js was needed to do this. Of course, changing template is more easier, but I didn't be intrusive. The user select all options they want and apply and remove once. It's just my suggestion to improve filters e make grappelli mutch better for all.\n. OK, I'll try.\n\nOn django \"contrib/admin/options.py\" there is a class \"StackedInline\" that you can define the template name for stacked inlines.\n\nSo, I'd like to create my own template that extends from grappelli stacked.html. In this way, I dont need to have a copy of the template on my app. On grappelli tamplete, something like:\n\n-----admin/edit_inline/stacked.htm-----\n\nonAfterRemoved: function(inline) {\n    --code js--\n    {% block onAfterRemoved %}{% endblock %}\n},\nonAfterAdded: function(form) {\n    --code js--\n    {% block onAfterAdded %}{% endblock %}\n}\n\n------than I could do on admin---\n\nclass DivisionInline(admin.StackedInline):\n    model = MyModel\n    form = MyForm\n    template = 'myStackedInline.html'\n\n-----myStackedInline.html------\n\n{% extends \"admin/edit_inline/stacked.html\" %}\n{% block onAfterAdded %}\n    --my code js--\n{% endblock %}\n. Replace the jQuery function were my first shot, but then, when I clicked on \"Add another\" two new inlines was added instead of one.\n\nSeems that if I replace de function, two events are executed. Maybe i did something wrong, but I Just copied the generated code on template and added to my custom JS file whith my changes.\n\nIf is not a available option to add blocks, unfortunatelly I will need replace the whole template.\n\nBy\n. $(\"#document_set-group\").grp_inline({\n            prefix: \"document_set\",\n            onAfterRemoved: function(inline) {},\n            onAfterAdded: function(form) {\n            ...code...\n            }\n});\n\nThe code are generated for each inline, I have two inlines and the block of code in the stacked.html is generated for each inline.\n. OK, no problem. Just for history, I did this on my template.\n\n{% block onAfterAdded %}\n                if (prefix == 'photo_set') {\n                    << code >>\n                }\n                if (prefix == 'video_set') {\n                    << code >>\n                }\n{% endblock %}\n. News from Django 1.7 beta 1, almost there!\n\nhttps://www.djangoproject.com/weblog/2014/mar/20/django-17b1/\nhttps://docs.djangoproject.com/en/dev/releases/1.7/\n. Hi @sehmaschine.\n\nFirst, sorry for ask here.\n\nI disagree a litte bit, because the admin it's used by \"suposed trusted users\" and we must warranty the application security. Some users don't have permissions for some models in admin, but if they knows that these models exists, they can try get some kind of access.\n\nThe users can knows the apps you have been installed and can explore bugs in this apps to try get access to restrict informations.\n\nIf the MODEL_URL_ARRAY dosen't expose that, it continue there, but at least it's obscure to users.\n\nBy.\n. Hi, in this case, I use templatetags functions from admin_tools to move and keep positions of dashbord panels. Maybe I could use just admin_tools dashboard.\n. Nice, thanks.\n. Hi,\n\nOn django 1.7 is not necessary to have models.py in an app anymore.\n\nhttps://docs.djangoproject.com/en/dev/releases/1.7/#app-loading-refactor\n\nItem 3 - It is possible to omit models.py entirely if an application doesn\u2019t have any models.\n\nMaybe haystack is not compatible with django.1.7.X yet.\n. Nice Guilherme, this will be useful. \nI think that this patch could be done on grappelli 2.6.x too.\nThks.\n. Yes I think. Because to remove a value is change event.\nSo the event is triggered and the developer decide what to to if a value was removed.\nBy.\n. Hi @parsch \n\nDidn't solve for me. I updated my git repository, cleaned my browser cache, forced reload static content but the problem it's the same.\n\nIt worked for you?\n\nThanks.\n. @parsch I tried on Chrome (it worked) but on Firefox (not worked).\n\nI found just a webkit background size on screen.css, but this not work for all browsers. When I delete \"-webkit\" and use just \"background-size\" works fine in Firefox and Chrome.\n\n-webkit-background-size: auto !important; (not works on FF)\nbackground-size: auto !important; (works on FF and Chome, not tested on IE)\n. @parsch  Yes, I'am using @dev/2.6.x, now I checkout @stable/2.6.x and it's OK. What version is better for use in production, dev or stable?\n. Thanks @parsch \n\nI changed dev to stable, I'll use this repository from now.\n\nBy.\n. Nice, I opened the same issue for dango-floppyforms. They changed and released 1.4.0 with this and  other issues.\n. Sorry, django-grappelli.git@stable/2.6.x#egg=grappelli\nUpdated today from git.\n. django==1.7.7\n. Hi, I tried in another machine and it's OK. Maybe it's something wrong with my virtualenv. I'll reinstall everything for test.\n. It's working. There was someting wrong whith my envoriment on that time. Sorry.\n. Try dev/2.7.x with django 1.8+\nBut it's development.\n. Hi @sehmaschine\n\nI really think that is important, so I had developed an improvement on my system to do that. I added a button on left widget that on click open a popup to edit the selected object.  If this feature was supported on grappelli will be very useful for all.\n\n/admin/app/objec>/id/?_popup=1\n\n![2015-06-15 09-07-22](https://cloud.githubusercontent.com/assets/5805339/8159592/8e7c0fda-133e-11e5-8377-d6e26f60aac4.png)\n. Sorry. I never used raw-id-fields with inlines.\n. This happens for me on both browsers.\n\nLinux / Goggle Chrome  42.0.2311.90 (64-bit) \nLinux / Firefox 38.0.5\n\nOn rigth select multiple widget (\"id_field_to\") there is a inline style thtat set the height. If I remove it the height is the same on both sides.\n\nAbout the yellow backgroud on inlines widget, I think that jquery UI is using a different theme, because if you run this on 2.6.x version and 2.7.x version is different theme. On 2.7.x is a yellow theme.\n\nrun on browser console:   grp.jQuery('#grp-content-title').dialog();\n. ",
    "tkupari": "+1\n. +1\n. ",
    "mijamo": "\"from functools import reduce\" is compatible with python 2.6 and 2.7. \n\nPython 2.5 was dropped for django 1.5 so I don't know i you want to keep it for Grappelli (didn't find mentions of python version in the docs). If you do, I guess you could just do something like\ntry:\n    from functools import reduce\nI don't really see other solutions right now\n. https://github.com/django/django/blob/stable/1.4.x/django/utils/encoding.py \n\nlast line : smart_bytes IS available in django 1.4\n\nDjango documentation says they were made available in django 1.4.2 (https://docs.djangoproject.com/en/1.5/topics/python3/#string-handling : For forwards compatibility, the new names work as of Django 1.4.2.). \n\nWe are now at 1.4.8, nobody should use a 1.4.0 or 1.4.1 anyway.\n. I don't see how it is fixed, url still refers to 'django.contrib.auth.views.password_reset_confirm' zhereas it should be 'password_reset_confirm' so we can use our own \u00b4'password_reset_confirm' view.\n. \"from functools import reduce\" is compatible with python 2.6 and 2.7. \n\nPython 2.5 was dropped for django 1.5 so I don't know i you want to keep it for Grappelli (didn't find mentions of python version in the docs). If you do, I guess you could just do something like\ntry:\n    from functools import reduce\nI don't really see other solutions right now\n. https://github.com/django/django/blob/stable/1.4.x/django/utils/encoding.py \n\nlast line : smart_bytes IS available in django 1.4\n\nDjango documentation says they were made available in django 1.4.2 (https://docs.djangoproject.com/en/1.5/topics/python3/#string-handling : For forwards compatibility, the new names work as of Django 1.4.2.). \n\nWe are now at 1.4.8, nobody should use a 1.4.0 or 1.4.1 anyway.\n. I don't see how it is fixed, url still refers to 'django.contrib.auth.views.password_reset_confirm' zhereas it should be 'password_reset_confirm' so we can use our own \u00b4'password_reset_confirm' view.\n. ",
    "acatton": "Hi @sehmaschine , I use django 1.6 . I have to admit I didn't test with older version of django. This fixed one bug in my project.\n. Hi @sehmaschine , I use django 1.6 . I have to admit I didn't test with older version of django. This fixed one bug in my project.\n. ",
    "gavinwahl": "Whoops, nevermind. It is fixed in 2.4.7.\n. Whoops, nevermind. It is fixed in 2.4.7.\n. ",
    "grendel513": "thanks, i just tested it by removing grappelli from installed apps and the problem remains.  i will reach out django for a potential fix\n. thanks, i just tested it by removing grappelli from installed apps and the problem remains.  i will reach out django for a potential fix\n. ",
    "bryanveloso": "@sehmaschine \u2014 Fixed!\n. ![2013-10-29 at 3 41 pm](https://f.cloud.github.com/assets/1258/1433112/0bba407a-40eb-11e3-9dd9-6edd93c0f38e.png)\n\nThis is how I add it. I've tried other ways as well, such as using `ModelList`, but the music app still won't show up. :(\n. @BertrandBordage \u2014 Yes, I can. Which is what makes this problem so weird, if I don't use a custom dashboard in production, the app displays as expected.\n. Thanks for the help so far. Still not having luck with this. Going to try and see what the differences are between my local environment and production, since I still don't get why it works in one and not the other with the exact same dashboard code.\n. @sehmaschine \u2014 Understood. Everything but that is working fine in my install, so I'm alright with taking the risk. :]\n. It's odd. This is Firefox's error by the way:\n\n```\n[11:39:25.939] TypeError: options.wrapper_autocomplete.find(...).bind(...).bind(...).autocomplete(...).data(...) is undefined @ /static/grappelli/js/jquery.grp_autocomplete_fk.js:111\n```\n\nI'm not sure what's going on to be honest, since one minute everything worked and then the next everything didn't. It doesn't seem to be just this either, my editors have been complaining of not being able to delete inlines, etc. Not getting any errors around those though since it always throws an error around autocomplete first.\n. As an aside, I installed 2.4.8 (despite running Django 1.6) and the autocompletes started working again.\n. Gah, cue idiocy. Forgot I was overriding the admin base template. Sorry for the trouble. :frowning: \n. @sehmaschine \u2014 Fixed!\n. ![2013-10-29 at 3 41 pm](https://f.cloud.github.com/assets/1258/1433112/0bba407a-40eb-11e3-9dd9-6edd93c0f38e.png)\n\nThis is how I add it. I've tried other ways as well, such as using `ModelList`, but the music app still won't show up. :(\n. @BertrandBordage \u2014 Yes, I can. Which is what makes this problem so weird, if I don't use a custom dashboard in production, the app displays as expected.\n. Thanks for the help so far. Still not having luck with this. Going to try and see what the differences are between my local environment and production, since I still don't get why it works in one and not the other with the exact same dashboard code.\n. @sehmaschine \u2014 Understood. Everything but that is working fine in my install, so I'm alright with taking the risk. :]\n. It's odd. This is Firefox's error by the way:\n\n```\n[11:39:25.939] TypeError: options.wrapper_autocomplete.find(...).bind(...).bind(...).autocomplete(...).data(...) is undefined @ /static/grappelli/js/jquery.grp_autocomplete_fk.js:111\n```\n\nI'm not sure what's going on to be honest, since one minute everything worked and then the next everything didn't. It doesn't seem to be just this either, my editors have been complaining of not being able to delete inlines, etc. Not getting any errors around those though since it always throws an error around autocomplete first.\n. As an aside, I installed 2.4.8 (despite running Django 1.6) and the autocompletes started working again.\n. Gah, cue idiocy. Forgot I was overriding the admin base template. Sorry for the trouble. :frowning: \n. ",
    "usernamenumber": "Sorry for the late reply. Apparently I don't have github set up to email me when someone responds to a pull request, so I'm just seeing this now. I'll take a look and get back to you at my earliest opportunity. \n. Sorry for the late reply. Apparently I don't have github set up to email me when someone responds to a pull request, so I'm just seeing this now. I'll take a look and get back to you at my earliest opportunity. \n. ",
    "kanu": "Without longpolling requests or socket connections the possibilities are limited.\n\nHowever if you accept the limitations of polling an url and that the concurrent updates of\nthe cache by multiple users  are not atmoic and might overwrite each other have a look at this function.\n\n```\ndef get_concurrency(path, userid, timeout=60):\n    \"\"\"\n    Add a userid to the queue at the path.\n    Returns a list of userids currently using the path.\n    \"\"\"\n\n    from django.core.cache import cache\n    user_key = 'LOCK:%s:%s' % (path, userid)\n    queue_key = 'QUEUE:%s' % path\n    actives = {user_key:userid}\n    queue = cache.get(queue_key)\n    if queue:\n        actives.update(cache.get_many(queue))\n        if user_key not in queue:\n            queue.append(user_key)\n        concurrency = [key for key in queue if key in actives]\n    else:\n        concurrency = [user_key]\n    cache.set(queue_key, concurrency, timeout=timeout*2)\n    cache.set(user_key, userid, timeout=timeout)\n    return [actives[x] for x in concurrency]\n```\n\nConsecutive ajax requests could hit this function with the \"http_referer\" and the user.id.\nThe function returns the sorted list of userids that are polling from the same url.\n\n```\n>>> print get_conncurrency('admin/obj/1', 12)\n[12]\n>>> print get_conncurrency('admin/obj/1', 1)\n[12, 1]\n>>> print get_conncurrency('admin/obj/1', 4)\n[12, 1, 4]\n# wait 1 minute\n>>> print get_conncurrency('admin/obj/1', 5)\n[1, 4, 5]\n```\n. oh sorry, thats an django1.7 +  dev/2.6.x branch issue\n. Without longpolling requests or socket connections the possibilities are limited.\n\nHowever if you accept the limitations of polling an url and that the concurrent updates of\nthe cache by multiple users  are not atmoic and might overwrite each other have a look at this function.\n\n```\ndef get_concurrency(path, userid, timeout=60):\n    \"\"\"\n    Add a userid to the queue at the path.\n    Returns a list of userids currently using the path.\n    \"\"\"\n\n    from django.core.cache import cache\n    user_key = 'LOCK:%s:%s' % (path, userid)\n    queue_key = 'QUEUE:%s' % path\n    actives = {user_key:userid}\n    queue = cache.get(queue_key)\n    if queue:\n        actives.update(cache.get_many(queue))\n        if user_key not in queue:\n            queue.append(user_key)\n        concurrency = [key for key in queue if key in actives]\n    else:\n        concurrency = [user_key]\n    cache.set(queue_key, concurrency, timeout=timeout*2)\n    cache.set(user_key, userid, timeout=timeout)\n    return [actives[x] for x in concurrency]\n```\n\nConsecutive ajax requests could hit this function with the \"http_referer\" and the user.id.\nThe function returns the sorted list of userids that are polling from the same url.\n\n```\n>>> print get_conncurrency('admin/obj/1', 12)\n[12]\n>>> print get_conncurrency('admin/obj/1', 1)\n[12, 1]\n>>> print get_conncurrency('admin/obj/1', 4)\n[12, 1, 4]\n# wait 1 minute\n>>> print get_conncurrency('admin/obj/1', 5)\n[1, 4, 5]\n```\n. oh sorry, thats an django1.7 +  dev/2.6.x branch issue\n. ",
    "pnovotnak": "Ergh, spoke too soon, and it's so simple! Here's the method I used:\n\nhttp://stackoverflow.com/questions/11341663/django-override-admin-sites-login-form#answer-18172154\n. Ergh, spoke too soon, and it's so simple! Here's the method I used:\n\nhttp://stackoverflow.com/questions/11341663/django-override-admin-sites-login-form#answer-18172154\n. ",
    "apoku": "Any chance this is still being worked? Our team switched over to django-grappelli for the effortless autocomplete feature on foreign key and many to many fields; however, we do have use cases where we've got to prevent some values from being displayed in the UI based on factors such as if the entry \"is approved\" or the logged in user \"is authorized\" etc. We were hoping to just override the get_queryset() method that is part of Django 1.11, but it doesn't seem to be supported with django-grappelli. Any pointers or other workarounds?. Any chance this is still being worked? Our team switched over to django-grappelli for the effortless autocomplete feature on foreign key and many to many fields; however, we do have use cases where we've got to prevent some values from being displayed in the UI based on factors such as if the entry \"is approved\" or the logged in user \"is authorized\" etc. We were hoping to just override the get_queryset() method that is part of Django 1.11, but it doesn't seem to be supported with django-grappelli. Any pointers or other workarounds?. ",
    "bmispelon": "Hi,\nI'm trying to get this fix into Django itself (https://code.djangoproject.com/ticket/21445) but I'm having a hard time reproducing the issue.\n\nDoes anyone have a small test-case or would be willing to assist me in reproducing this?\nI'm available on #django-dev on Freenode to discuss if that's more convenient.\n\nThanks.\n\nThanks.\n. Hi,\nI'm trying to get this fix into Django itself (https://code.djangoproject.com/ticket/21445) but I'm having a hard time reproducing the issue.\n\nDoes anyone have a small test-case or would be willing to assist me in reproducing this?\nI'm available on #django-dev on Freenode to discuss if that's more convenient.\n\nThanks.\n\nThanks.\n. ",
    "jasongotlieb": "The issue is just that the `updateFormIndex` function does not handle for the `onclick` attribute. \n. Yes. You're right. `.bind(\"click\",..)` would be potentially better but, `onclick` is not technically incorrect and is a valid use case. \n. Since I came across it, I thought I'd bring it to your attention. Not a huge issue just helpful as the function is seemingly meant to override the `__prefix__` string. This was another place I thought it ought to be replaced. Thanks so much!\n. The issue is just that the `updateFormIndex` function does not handle for the `onclick` attribute. \n. Yes. You're right. `.bind(\"click\",..)` would be potentially better but, `onclick` is not technically incorrect and is a valid use case. \n. Since I came across it, I thought I'd bring it to your attention. Not a huge issue just helpful as the function is seemingly meant to override the `__prefix__` string. This was another place I thought it ought to be replaced. Thanks so much!\n. ",
    "foxx": "Tried with `Django==1.5.5`, `Django==1.5.1` and `grappelli==2.4.8` and `grappelli=2.5.0`, same problem every time.\n. `grappelli==2.4.8` and `Django==1.5.5` results in;\n\n`grappelli/templates/admin/base.html`\n\n```\nnow() got an unexpected keyword argument 'tz'\n        <script type=\"text/javascript\">window.__admin_utc_offset__ = \"{% filter escapejs %}{% now \"Z\" %}{% endfilter %}\";</script>\n```\n\nHowever `grappelli==2.4.5` works fine with `Django==1.5.5`.\n\nCan you please update the README to show that Django 1.5 is only compatible with Grappelli 2.4.5\n\nThanks\n. Agreed - will open a separate ticket\n. Crap, it would appear this was actually caused by some monkeypatching of builtins by another library. It was not properly handling `now()`, sorry for the false report on this :(\n. Tried with `Django==1.5.5`, `Django==1.5.1` and `grappelli==2.4.8` and `grappelli=2.5.0`, same problem every time.\n. `grappelli==2.4.8` and `Django==1.5.5` results in;\n\n`grappelli/templates/admin/base.html`\n\n```\nnow() got an unexpected keyword argument 'tz'\n        <script type=\"text/javascript\">window.__admin_utc_offset__ = \"{% filter escapejs %}{% now \"Z\" %}{% endfilter %}\";</script>\n```\n\nHowever `grappelli==2.4.5` works fine with `Django==1.5.5`.\n\nCan you please update the README to show that Django 1.5 is only compatible with Grappelli 2.4.5\n\nThanks\n. Agreed - will open a separate ticket\n. Crap, it would appear this was actually caused by some monkeypatching of builtins by another library. It was not properly handling `now()`, sorry for the false report on this :(\n. ",
    "lgaticaq": "The problem is this. The css file has styles that refer to images that do not exist. For example the image images/ui-bg_flat_75_ffffff_40x100.png.\nIn Django when using STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.CachedStaticFilesStorage' and runs collectstatic fails because it is not declared in the pictures styles.\nThe solution to this is to delete the file or include the missing images.\n. The problem is this. The css file has styles that refer to images that do not exist. For example the image images/ui-bg_flat_75_ffffff_40x100.png.\nIn Django when using STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.CachedStaticFilesStorage' and runs collectstatic fails because it is not declared in the pictures styles.\nThe solution to this is to delete the file or include the missing images.\n. ",
    "pg1671": "+1\n. +1\n. ",
    "whtsky": "+1\n. +1\n. ",
    "nonZero": "When using `order_with_respect_to`, adding:\n\n```\nsortable_field_name = \"_order\"\n```\n\nraises a `KeyError` exception:\n\n```\nKey '_order' not found in 'MyInlineModelForm'\"\n...\nIn template ...\\admin\\edit_inline\\stacked.html, error at line 17\n...\n{% for inline_admin_form in inline_admin_formset|formsetsort:sortable_field_name %}\n```\n\n(Tested with django 1.7.1 and grappelli 2.6.3)\n. When using `order_with_respect_to`, adding:\n\n```\nsortable_field_name = \"_order\"\n```\n\nraises a `KeyError` exception:\n\n```\nKey '_order' not found in 'MyInlineModelForm'\"\n...\nIn template ...\\admin\\edit_inline\\stacked.html, error at line 17\n...\n{% for inline_admin_form in inline_admin_formset|formsetsort:sortable_field_name %}\n```\n\n(Tested with django 1.7.1 and grappelli 2.6.3)\n. ",
    "iamanoopmk": "Most of my apps invariably use multiple filters. So, waiting for each filter to reload the page is cumbersome. Django REST Framework's filter option is a good example where it allows inputting multiple filters at once and then fetching the results. That would be more user-friendly since I would not mind pressing an extra button to load results.. Most of my apps invariably use multiple filters. So, waiting for each filter to reload the page is cumbersome. Django REST Framework's filter option is a good example where it allows inputting multiple filters at once and then fetching the results. That would be more user-friendly since I would not mind pressing an extra button to load results.. ",
    "goinnn": "Because now if you want to customize the user actions you have to overwrite a template with a lot of code. Before I had to overwrite a template with very little code.\n\nIf a developer overwrite this template (with a lot of code), it's very probable that in the next release of django-grapelli he will get an error, or he don't have some feature.\n\nFor this reason I prefer the before solution.\n\nRelated ticket in [django](https://code.djangoproject.com/ticket/15053)\n. You could overwrite the header.html template. I did it in openmooc project. Why is it a problem?\n. Of course, but I think that this is not the scope of this issue.\n\nI think that with this changeset 12112ea238316e983b98af40b7f5d3d943afd1f9 to overwrite the userlinks block or  nav-global block is more difficult. Before, If you would want to overwrite some of these you could overwrite a little template (header.html) now you have to overwrite a big template (base.html).\n\nPlease, see the this template: https://github.com/OpenMOOC/moocng/blob/master/moocng/templates/admin/includes_grappelli/header.html\n\nIf you want a django template to be able to do overwrite only a block of another template when the same name, this is his scope: https://code.djangoproject.com/ticket/15053 or in the django-develop email list: the thread with this subject: \"Self-referenced template recursion handling\"\n. Because now if you want to customize the user actions you have to overwrite a template with a lot of code. Before I had to overwrite a template with very little code.\n\nIf a developer overwrite this template (with a lot of code), it's very probable that in the next release of django-grapelli he will get an error, or he don't have some feature.\n\nFor this reason I prefer the before solution.\n\nRelated ticket in [django](https://code.djangoproject.com/ticket/15053)\n. You could overwrite the header.html template. I did it in openmooc project. Why is it a problem?\n. Of course, but I think that this is not the scope of this issue.\n\nI think that with this changeset 12112ea238316e983b98af40b7f5d3d943afd1f9 to overwrite the userlinks block or  nav-global block is more difficult. Before, If you would want to overwrite some of these you could overwrite a little template (header.html) now you have to overwrite a big template (base.html).\n\nPlease, see the this template: https://github.com/OpenMOOC/moocng/blob/master/moocng/templates/admin/includes_grappelli/header.html\n\nIf you want a django template to be able to do overwrite only a block of another template when the same name, this is his scope: https://code.djangoproject.com/ticket/15053 or in the django-develop email list: the thread with this subject: \"Self-referenced template recursion handling\"\n. ",
    "silviogutierrez": "Oh I see it now, in the 2.4.8 docs, it does list 2.4.6 as the version.\n\nIncidentally, I don't think Django actually added features in minor versions, so the example above wouldn't actually happen. I could be wrong though. Thanks again for a great app!\n. Oh I see it now, in the 2.4.8 docs, it does list 2.4.6 as the version.\n\nIncidentally, I don't think Django actually added features in minor versions, so the example above wouldn't actually happen. I could be wrong though. Thanks again for a great app!\n. ",
    "garetmckinley": "Yes, that's the same bug. I'm running 2.5\n. On 2.5.1?\n. Yes.. I was just asking what version it was fixed with, seeing as 2.5 is the latest stable release and it's still present in it.\n. Yes, that's the same bug. I'm running 2.5\n. On 2.5.1?\n. Yes.. I was just asking what version it was fixed with, seeing as 2.5 is the latest stable release and it's still present in it.\n. ",
    "d9pouces": "Yes, I am. But since I was not sure of this bug (my code does not use line 63, only line 135), I did not fix it. However, I'm pretty sure that there is a bug too.\n. Yes, I am. But since I was not sure of this bug (my code does not use line 63, only line 135), I did not fix it. However, I'm pretty sure that there is a bug too.\n. ",
    "7wonders": ":+1: \n. thanks, got the autocompletes working now. Also found this https://github.com/frnhr/django-grappelli-filters which works great for autocompletes on the filters (worth a mention in the docs?)\n. This fix works for me on 1.8\n. I guess something else has changed between then and now because I also cannot reproduce this anymore with the latest master.\n. :+1: \n. thanks, got the autocompletes working now. Also found this https://github.com/frnhr/django-grappelli-filters which works great for autocompletes on the filters (worth a mention in the docs?)\n. This fix works for me on 1.8\n. I guess something else has changed between then and now because I also cannot reproduce this anymore with the latest master.\n. ",
    "MikeVL": "Django 1.6.1, Grappelli 2.5.0\n\nProblem in css selector:\n\n```\nimg[src$=\"admin/img/icon-unknown.gif\"], img[src$=\"admin/img/icon-no.gif\"],\nimg[src$=\"admin/img/icon-yes.gif\"] {\n    position: relative;\n    height: 0;\n    width: 0;\n    top: 0;\n    margin: -2px 0;\n    padding: 8px;\n    font-size: 0\n}\n\nimg[src$=\"admin/img/icon-unknown.gif\"] {\n    background-position: 0 -1551px\n}\n\nimg[src$=\"admin/img/icon-no.gif\"] {\n    background-position: 0 -1793px\n}\n\nimg[src$=\"admin/img/icon-yes.gif\"] {\n    background-position: 0 -1586px\n}\n```\n\nIn HTML code image url with hash.\n. May be change selectors to img[alt=True] ?\n. Thanks! This patch works fine.\n. This patch works fine with enabled/disabled `CONSTANCE_CONFIG_FIELDSETS`\n![django 2016-10-10 11-03-02](https://cloud.githubusercontent.com/assets/118285/19229863/651a0a30-8ed9-11e6-898f-fdb23d03df84.png)\n![django 2016-10-10 11-03-55](https://cloud.githubusercontent.com/assets/118285/19229864/6545ce68-8ed9-11e6-82a5-2f0898fea14b.png)\n. Django 1.6.1, Grappelli 2.5.0\n\nProblem in css selector:\n\n```\nimg[src$=\"admin/img/icon-unknown.gif\"], img[src$=\"admin/img/icon-no.gif\"],\nimg[src$=\"admin/img/icon-yes.gif\"] {\n    position: relative;\n    height: 0;\n    width: 0;\n    top: 0;\n    margin: -2px 0;\n    padding: 8px;\n    font-size: 0\n}\n\nimg[src$=\"admin/img/icon-unknown.gif\"] {\n    background-position: 0 -1551px\n}\n\nimg[src$=\"admin/img/icon-no.gif\"] {\n    background-position: 0 -1793px\n}\n\nimg[src$=\"admin/img/icon-yes.gif\"] {\n    background-position: 0 -1586px\n}\n```\n\nIn HTML code image url with hash.\n. May be change selectors to img[alt=True] ?\n. Thanks! This patch works fine.\n. This patch works fine with enabled/disabled `CONSTANCE_CONFIG_FIELDSETS`\n![django 2016-10-10 11-03-02](https://cloud.githubusercontent.com/assets/118285/19229863/651a0a30-8ed9-11e6-898f-fdb23d03df84.png)\n![django 2016-10-10 11-03-55](https://cloud.githubusercontent.com/assets/118285/19229864/6545ce68-8ed9-11e6-82a5-2f0898fea14b.png)\n. ",
    "Voulnet": "To fix it I had to:\n- Delete admin and grappelli directories in static\n- Make sure     'django.contrib.staticfiles.finders.AppDirectoriesFinder' is the top in STATICFILES_FINDERS.\n- run collectstatic again\n. To fix it I had to:\n- Delete admin and grappelli directories in static\n- Make sure     'django.contrib.staticfiles.finders.AppDirectoriesFinder' is the top in STATICFILES_FINDERS.\n- run collectstatic again\n. ",
    "gingerlime": "Currently not, but I tried it with the dashboard and it didn't work either. At least not with the custom dashboard created with the `customdashboard` command.\n. Happy to submit a pull request for the index.html soon.\n\nI tested both. I think the benefit of adding the custom views (also to grappelli.dashboard) is that with adminplus it's more DRY: You create a custom view and it automatically appears on the custom views section of the admin index. You don't need to manually add a link. \n\nThe flip side of the coin is if someone wants to have more fine-level control of the custom views. But maybe they could then override a custom views block that can be added to the content? Or use some more grappelli-way of defining this in the dashboard(?)\n. in that case, it makes sense only to add it to index. I've just created a pull request with this fix.\n\nI do wonder if it's easy enough to add those custom views 'semi-automatically', i.e. specify in your dashboard.js file that you want to allow custom views and those will appear if they are registered?\n. I'm not exactly sure what you mean by \"test adding adminplus to the dashboard\".\n\nI tested the updated index.html and if adminplus is used _AND_ there's a custom view, then it appears on the admin main screen. If there's no custom view then it looks normal.\n. Ah, but this I believe would require some code changes in grappelli. I'm not that familiar with the grappelli dashboards yet.\n\nbtw - I think the issue stems from the fact that adminplus [extends the `sidebar` block](https://github.com/jsocol/django-adminplus/blob/master/adminplus/templates/adminplus/index.html), which [exists in the core django admin](https://github.com/django/django/blob/1.6.1/django/contrib/admin/templates/admin/index.html). But it doesn't exist within the grappelli admin index.html template...\n\nSo any app that extends the official django admin and relies on the sidebar block will have trouble with grappelli. Right?\n. > there\u00b4s no sidebar block, but that\u00b4s not the point IMO\n\nbut any other admin app that relies on this sidebar block being there on the admin index will fail with grappelli... no?\n\n> context should include the custom list and you should be able to loop the items \u2026 well, you might need to dive into dashboards a bit.\n\nI managed to add custom links to the dashboard with the following snippet:\n\n``` python\ncustom_links = [{'url': '/admin/{0}'.format(x[0]),\n                 'title': x[1],\n                 'external': False} for x in context.get('custom_list')]\nself.children.append(modules.LinkList(\n    _('Custom Views'),\n    column=2,\n    children=custom_links\n))\n```\n\nSo that won't require any code changes in grappelli. Users need to be aware of this and can do it 'semi-automatically'. Nice\n\nI still hope you can consider adding a sidebar block to the grappelli admin index or merge the pull request I made.\n. well, at least adminplus won't fail if this block was present. If you want to completely break any compatibility with the django admin then it's your call, but if you can maintain at least some compatibility on the templates, I think it's better. I would say it's better than a custom solution only for adminplus, but it's your decision.\n. That makes sense. What would happen with adminplus? because it doesn't use any `grp` classes. see https://github.com/jsocol/django-adminplus/blob/master/adminplus/templates/adminplus/index.html#L7\n\nI switched to using a custom dashboard actually. It seems like a better structure overall. The learning-curve is a bit steeper though, so that's why I didn't immediately start with it. Once I figured the basics out, it seems like the way to go. Thanks for creating it.\n. bummer. ok, so at least the patch should work? a little hacky, but should do the trick and won't hurt anybody unless they use a `custom_list` in the context. \n\nThanks for being so responsive @sehmaschine !\n. Currently not, but I tried it with the dashboard and it didn't work either. At least not with the custom dashboard created with the `customdashboard` command.\n. Happy to submit a pull request for the index.html soon.\n\nI tested both. I think the benefit of adding the custom views (also to grappelli.dashboard) is that with adminplus it's more DRY: You create a custom view and it automatically appears on the custom views section of the admin index. You don't need to manually add a link. \n\nThe flip side of the coin is if someone wants to have more fine-level control of the custom views. But maybe they could then override a custom views block that can be added to the content? Or use some more grappelli-way of defining this in the dashboard(?)\n. in that case, it makes sense only to add it to index. I've just created a pull request with this fix.\n\nI do wonder if it's easy enough to add those custom views 'semi-automatically', i.e. specify in your dashboard.js file that you want to allow custom views and those will appear if they are registered?\n. I'm not exactly sure what you mean by \"test adding adminplus to the dashboard\".\n\nI tested the updated index.html and if adminplus is used _AND_ there's a custom view, then it appears on the admin main screen. If there's no custom view then it looks normal.\n. Ah, but this I believe would require some code changes in grappelli. I'm not that familiar with the grappelli dashboards yet.\n\nbtw - I think the issue stems from the fact that adminplus [extends the `sidebar` block](https://github.com/jsocol/django-adminplus/blob/master/adminplus/templates/adminplus/index.html), which [exists in the core django admin](https://github.com/django/django/blob/1.6.1/django/contrib/admin/templates/admin/index.html). But it doesn't exist within the grappelli admin index.html template...\n\nSo any app that extends the official django admin and relies on the sidebar block will have trouble with grappelli. Right?\n. > there\u00b4s no sidebar block, but that\u00b4s not the point IMO\n\nbut any other admin app that relies on this sidebar block being there on the admin index will fail with grappelli... no?\n\n> context should include the custom list and you should be able to loop the items \u2026 well, you might need to dive into dashboards a bit.\n\nI managed to add custom links to the dashboard with the following snippet:\n\n``` python\ncustom_links = [{'url': '/admin/{0}'.format(x[0]),\n                 'title': x[1],\n                 'external': False} for x in context.get('custom_list')]\nself.children.append(modules.LinkList(\n    _('Custom Views'),\n    column=2,\n    children=custom_links\n))\n```\n\nSo that won't require any code changes in grappelli. Users need to be aware of this and can do it 'semi-automatically'. Nice\n\nI still hope you can consider adding a sidebar block to the grappelli admin index or merge the pull request I made.\n. well, at least adminplus won't fail if this block was present. If you want to completely break any compatibility with the django admin then it's your call, but if you can maintain at least some compatibility on the templates, I think it's better. I would say it's better than a custom solution only for adminplus, but it's your decision.\n. That makes sense. What would happen with adminplus? because it doesn't use any `grp` classes. see https://github.com/jsocol/django-adminplus/blob/master/adminplus/templates/adminplus/index.html#L7\n\nI switched to using a custom dashboard actually. It seems like a better structure overall. The learning-curve is a bit steeper though, so that's why I didn't immediately start with it. Once I figured the basics out, it seems like the way to go. Thanks for creating it.\n. bummer. ok, so at least the patch should work? a little hacky, but should do the trick and won't hurt anybody unless they use a `custom_list` in the context. \n\nThanks for being so responsive @sehmaschine !\n. ",
    "ghost": "Thanks sehmaschine,\n\nHow do I go about doing that? \n. Hi - I never got around to doing this. Hope you solve it and then would be grateful if you post back any findings - Thanks.\n. +1\nExact same for me.\n. Thanks guys!!! :crown: \n. Thanks sehmaschine,\n\nHow do I go about doing that? \n. Hi - I never got around to doing this. Hope you solve it and then would be grateful if you post back any findings - Thanks.\n. +1\nExact same for me.\n. Thanks guys!!! :crown: \n. ",
    "judithdboonstra": "I am wondering if you managed to properly overwrite your templates to make this work, sanjayhallan.  I have overwritten mine (the system is finding them without error) - each of my import-export templates that before extended the django admin templates now extend the grappelli admin templates instead.  Yet, my screen still look as you described.\n\nThank you in advance for whatever insight you can offer me on this issue.\n. I am wondering if you managed to properly overwrite your templates to make this work, sanjayhallan.  I have overwritten mine (the system is finding them without error) - each of my import-export templates that before extended the django admin templates now extend the grappelli admin templates instead.  Yet, my screen still look as you described.\n\nThank you in advance for whatever insight you can offer me on this issue.\n. ",
    "slawekl": "I resolved issue like suggest sehmaschine, to my project I override default import-export template - e.g. path  project/template/admin/import_export/ I copy from lib/python/site-packages/import-export/templates/admin/import-export/ all htmls and I set up like in grappelli css classes and all working and looks not bad. Maybe it will be helpfull for any one.\n. I resolved issue like suggest sehmaschine, to my project I override default import-export template - e.g. path  project/template/admin/import_export/ I copy from lib/python/site-packages/import-export/templates/admin/import-export/ all htmls and I set up like in grappelli css classes and all working and looks not bad. Maybe it will be helpfull for any one.\n. ",
    "AlexLoar": "@slawekl  I managed to gather both apps but I still have a problem in how are showed the buttons Import, Export and Add because are hidden (are located between the word admin and Filter): dl.dropboxusercontent.com/u/23171086/image.png\n. @slawekl  I managed to gather both apps but I still have a problem in how are showed the buttons Import, Export and Add because are hidden (are located between the word admin and Filter): dl.dropboxusercontent.com/u/23171086/image.png\n. ",
    "techietek": "I just hacked something up as I had the same issue, i haven't had time to do the import template so if someone gets a chance let me know :), you can just add those files to your template dir:\n\ntemplates/admin/import_export/\nhttps://gist.github.com/techietek/ffc53269c57549ebcb05\n\nwhich should give you something like below:\n![screen shot 2015-08-18 at 12 32 21 pm](https://cloud.githubusercontent.com/assets/8494130/9328966/499a903c-45a5-11e5-89f3-22387b13322f.JPG)\n\n![screen shot 2015-08-18 at 12 32 39 pm](https://cloud.githubusercontent.com/assets/8494130/9328965/4996d8e8-45a5-11e5-8d2a-c4a627b916eb.JPG)\n. hi i should have added that information apologies:\n\ndjango==1.7.9\ndjango-grappelli==2.7.1\nbrowser==chrome\n. I just hacked something up as I had the same issue, i haven't had time to do the import template so if someone gets a chance let me know :), you can just add those files to your template dir:\n\ntemplates/admin/import_export/\nhttps://gist.github.com/techietek/ffc53269c57549ebcb05\n\nwhich should give you something like below:\n![screen shot 2015-08-18 at 12 32 21 pm](https://cloud.githubusercontent.com/assets/8494130/9328966/499a903c-45a5-11e5-89f3-22387b13322f.JPG)\n\n![screen shot 2015-08-18 at 12 32 39 pm](https://cloud.githubusercontent.com/assets/8494130/9328965/4996d8e8-45a5-11e5-8d2a-c4a627b916eb.JPG)\n. hi i should have added that information apologies:\n\ndjango==1.7.9\ndjango-grappelli==2.7.1\nbrowser==chrome\n. ",
    "vincentleeuwen": "@techietek Works like a charm! Thanks for sharing!\n. @techietek Works like a charm! Thanks for sharing!\n. ",
    "benxy": "Also, note that in Django 1.9 url tag is loaded by default so it has to be removed from base.html and export.html.\n\nhttp://stackoverflow.com/questions/5653497/django-load-url-from-future-yields-error-url-is-not-a-valid-tag-libra\n. Also, note that in Django 1.9 url tag is loaded by default so it has to be removed from base.html and export.html.\n\nhttp://stackoverflow.com/questions/5653497/django-load-url-from-future-yields-error-url-is-not-a-valid-tag-libra\n. ",
    "titovanton": "There is a bug, when inline model has required fields: when I use \"ordered inlines\", js change default values for position field in extra rows, so its looks like Im gonna save them, but Im not! There are 2 ways to save extra rows without error alert: feel required fields, or set position to DB_MAX_INT - thats what akaihola tolking about. Sorry for my en just in case... Also, I'll happy to see \"change list sortable\" from the box (not from 3th part apps and snippets)... Thanks...\n. I got the problem, the issue was incorrectly titled. Sorry for that...\n. There is a bug, when inline model has required fields: when I use \"ordered inlines\", js change default values for position field in extra rows, so its looks like Im gonna save them, but Im not! There are 2 ways to save extra rows without error alert: feel required fields, or set position to DB_MAX_INT - thats what akaihola tolking about. Sorry for my en just in case... Also, I'll happy to see \"change list sortable\" from the box (not from 3th part apps and snippets)... Thanks...\n. I got the problem, the issue was incorrectly titled. Sorry for that...\n. ",
    "jblang": "I figured this out. I forgot to run manage.py collectstatic to copy the new version of jquery.\n. I figured this out. I forgot to run manage.py collectstatic to copy the new version of jquery.\n. ",
    "morlandi": "Mmmmhhh ... nasty story indeed.\nFor the time being, I live with this:\n\n```\n{% block javascripts %}\n    {{ block.super }}\n    <script type=\"text/javascript\" charset=\"utf-8\">\n        var url = \"{% get_static_prefix %}grappelli/jquery/i18n/ui.datepicker-it.js\";\n        grp.jQuery.getScript(url);\n    </script>\n{% endblock javascripts %}\n```\n\nas suggested in by @sehmaschine in #5.\nIf for some reason you already customized a \"base\" template, \"change_form.html\" being the very first candidate, it's not so bad.\nEventually, a specific language could be selected dynamically based on the request, but then you need a suitable datepicker translation for each supported language.\nWhy not collecting as much translations as possible in the meantime ?\n. Oh Yes ! \nNow I see your point, thanks.\nA possible advantage of customizing the base \"change_form.html\" template is, however, that it propagates to all models.\nOn the other side, asset definitions requires the customization of every single ModelAdmin which uses datapicker, as far as I know; or that every ModelAdmin is derived from a specific custom base class.\n. Mmmmhhh ... nasty story indeed.\nFor the time being, I live with this:\n\n```\n{% block javascripts %}\n    {{ block.super }}\n    <script type=\"text/javascript\" charset=\"utf-8\">\n        var url = \"{% get_static_prefix %}grappelli/jquery/i18n/ui.datepicker-it.js\";\n        grp.jQuery.getScript(url);\n    </script>\n{% endblock javascripts %}\n```\n\nas suggested in by @sehmaschine in #5.\nIf for some reason you already customized a \"base\" template, \"change_form.html\" being the very first candidate, it's not so bad.\nEventually, a specific language could be selected dynamically based on the request, but then you need a suitable datepicker translation for each supported language.\nWhy not collecting as much translations as possible in the meantime ?\n. Oh Yes ! \nNow I see your point, thanks.\nA possible advantage of customizing the base \"change_form.html\" template is, however, that it propagates to all models.\nOn the other side, asset definitions requires the customization of every single ModelAdmin which uses datapicker, as far as I know; or that every ModelAdmin is derived from a specific custom base class.\n. ",
    "benrobster": "Thanks, @parsch! \n. Thanks, @parsch! \n. ",
    "ymzz277": "It seems the autocomplete only works for change-form page. Is there a way to integrate it with search_fields on the change-list page? I do see it is possible with django-autocomplete-light as in\nhttp://django-autocomplete-light.readthedocs.org/en/latest/navigation.html\n. Yes. Sorry if you feel I am wasting your time, but I have spent a day tinkering with this, and yet it just does not work for me. I managed to make the autocomplete show for fk and m2m on the change form page, but not change-list. Here are my snippets, do you see anything missing? Thanks a lot in advance, Yufei\n\n#models.pyclass Place(models.Model):    name = models.CharField(max_length=100)    parent = models.ForeignKey('self', blank=True, null=True)\n    def **unicode**(self):        return self.name\n    @staticmethod    def autocomplete_search_fields():        return ('id__iexact', 'name__icontains',)\nclass Destination(models.Model):    places = models.ForeignKey(Place)    @staticmethod    def autocomplete_search_fields():        return ('id__iexact', 'places__icontains',)\n\n#admin.pyclass DestinationAdmin(admin.ModelAdmin):    # The places field is mentioned in a fieldset    list_display = ['id', 'places',]    search_fields = ['places',]    #list_editable = ['places',]    # define the raw_id_fields for Autocomplete Lookups    raw_id_fields = ('places',)    # define the autocomplete_lookup_fields    autocomplete_lookup_fields = {        'fk': ['places']    }\nclass PlaceAdmin(admin.ModelAdmin):    list_display=['name',]    search_fields = ['name',]\nadmin.site.register(Destination, DestinationAdmin)admin.site.register(Place, PlaceAdmin)\n\nDate: Tue, 18 Feb 2014 00:04:15 -0800\nFrom: notifications@github.com\nTo: django-grappelli@noreply.github.com\nCC: li_yufei@hotmail.com\nSubject: Re: [django-grappelli] Autocomplete question (#453)\n\nit does work with the changelist \u2026 did you try?\n\n\u2014\nReply to this email directly or view it on GitHub.                    \n. ```\n#models.py\nclass Place(models.Model):\n    name = models.CharField(max_length=100)\n    parent = models.ForeignKey('self', blank=True, null=True)\n\n    def __unicode__(self):\n        return self.name\n\n    @staticmethod\n    def autocomplete_search_fields():\n        return ('id__iexact', 'name__icontains',)\n\nclass Destination(models.Model):\n    places = models.ForeignKey(Place)\n    @staticmethod\n    def autocomplete_search_fields():\n        return ('id__iexact', 'places__icontains',)\n\n#admin.py\nclass DestinationAdmin(admin.ModelAdmin):\n    # The places field is mentioned in a fieldset\n    list_display = ['id', 'places',]\n    search_fields = ['places',]\n    #list_editable = ['places',]\n    # define the raw_id_fields for Autocomplete Lookups\n    raw_id_fields = ('places',)\n    # define the autocomplete_lookup_fields\n    autocomplete_lookup_fields = {\n        'fk': ['places']\n    }\n\nclass PlaceAdmin(admin.ModelAdmin):\n    list_display=['name',]\n    search_fields = ['name',]\n\nadmin.site.register(Destination, DestinationAdmin)\nadmin.site.register(Place, PlaceAdmin)\n```\n. Not a requirement. Either way autocomplete does not work for me\n. Now I do see:\nPage not found (404)\nRequest Method: GET\nRequest URL:    http://127.0.0.1:8000/static/grappelli/jquery/jquery.min.map\n\nUnder my \\grappelli_example\\static\\grappelli\\jquery:\nI see only jquery-1.9.1.min.js\n\nHow do I obtain jquery.min.map? Thanks\n. no idea. Do you mind if I package my code up and send it over?\n. Understand. Thanks for your kindness.\n\nDate: Tue, 18 Feb 2014 05:28:49 -0800\nFrom: notifications@github.com\nTo: django-grappelli@noreply.github.com\nCC: li_yufei@hotmail.com\nSubject: Re: [django-grappelli] Autocomplete question (#453)\n\nSorry \u2013 I don\u00b4t have time to offer that kind of support. Please try to find out what\u00b4s the issue \u2026 autocompletes are definitely working on the changelist (I just douple-checked with different browsers).\n\nI'm closing this ticket for now. If you find something, feel free to reopen.\n\n\u2014\nReply to this email directly or view it on GitHub.                    \n. just one quick question. How do u think I should go about finding it out? It is a very simple app with not much frills except grappelli. My first instinct is the python package I am using, which is the 64x anaconda for 2.7. I am changing to pythonxy now. Do you think this might be the issue? Any other thoughts will be much appreciated.\nThanks\n\nDate: Tue, 18 Feb 2014 05:28:51 -0800\nFrom: notifications@github.com\nTo: django-grappelli@noreply.github.com\nCC: li_yufei@hotmail.com\nSubject: Re: [django-grappelli] Autocomplete question (#453)\n\nClosed #453.\n\n\u2014\nReply to this email directly or view it on GitHub.                    \n. I installed pythonxy on the computer without any python installed previously, and get the same results. so it is not the package.\n\nI am wondering why raw_id_fields and related-lookups would not have anything to do here if my goal is to make autocomplete work for the model itself like this:\n\n```\n#models.py\nclass Place(models.Model):\n    name = models.CharField(max_length=100)\n\n    def __unicode__(self):\n        return self.name\n\n    @staticmethod\n    def autocomplete_search_fields():\n        return ('name__icontains',)\n\n#admin.py\nclass PlaceAdmin(admin.ModelAdmin):\n    list_display=['id', 'name',]\n    search_fields = ['name',]\n    list_editable=['name',]\n\nadmin.site.register(Place, PlaceAdmin)\n\n```\n\nIs this supposed to show autocomplete, as I start typing in the search box? The grappelli package is excellent, but without some examples/videos I do not know what is supposed to work.\n\nThanks\n. It seems the autocomplete only works for change-form page. Is there a way to integrate it with search_fields on the change-list page? I do see it is possible with django-autocomplete-light as in\nhttp://django-autocomplete-light.readthedocs.org/en/latest/navigation.html\n. Yes. Sorry if you feel I am wasting your time, but I have spent a day tinkering with this, and yet it just does not work for me. I managed to make the autocomplete show for fk and m2m on the change form page, but not change-list. Here are my snippets, do you see anything missing? Thanks a lot in advance, Yufei\n\n#models.pyclass Place(models.Model):    name = models.CharField(max_length=100)    parent = models.ForeignKey('self', blank=True, null=True)\n    def **unicode**(self):        return self.name\n    @staticmethod    def autocomplete_search_fields():        return ('id__iexact', 'name__icontains',)\nclass Destination(models.Model):    places = models.ForeignKey(Place)    @staticmethod    def autocomplete_search_fields():        return ('id__iexact', 'places__icontains',)\n\n#admin.pyclass DestinationAdmin(admin.ModelAdmin):    # The places field is mentioned in a fieldset    list_display = ['id', 'places',]    search_fields = ['places',]    #list_editable = ['places',]    # define the raw_id_fields for Autocomplete Lookups    raw_id_fields = ('places',)    # define the autocomplete_lookup_fields    autocomplete_lookup_fields = {        'fk': ['places']    }\nclass PlaceAdmin(admin.ModelAdmin):    list_display=['name',]    search_fields = ['name',]\nadmin.site.register(Destination, DestinationAdmin)admin.site.register(Place, PlaceAdmin)\n\nDate: Tue, 18 Feb 2014 00:04:15 -0800\nFrom: notifications@github.com\nTo: django-grappelli@noreply.github.com\nCC: li_yufei@hotmail.com\nSubject: Re: [django-grappelli] Autocomplete question (#453)\n\nit does work with the changelist \u2026 did you try?\n\n\u2014\nReply to this email directly or view it on GitHub.                    \n. ```\n#models.py\nclass Place(models.Model):\n    name = models.CharField(max_length=100)\n    parent = models.ForeignKey('self', blank=True, null=True)\n\n    def __unicode__(self):\n        return self.name\n\n    @staticmethod\n    def autocomplete_search_fields():\n        return ('id__iexact', 'name__icontains',)\n\nclass Destination(models.Model):\n    places = models.ForeignKey(Place)\n    @staticmethod\n    def autocomplete_search_fields():\n        return ('id__iexact', 'places__icontains',)\n\n#admin.py\nclass DestinationAdmin(admin.ModelAdmin):\n    # The places field is mentioned in a fieldset\n    list_display = ['id', 'places',]\n    search_fields = ['places',]\n    #list_editable = ['places',]\n    # define the raw_id_fields for Autocomplete Lookups\n    raw_id_fields = ('places',)\n    # define the autocomplete_lookup_fields\n    autocomplete_lookup_fields = {\n        'fk': ['places']\n    }\n\nclass PlaceAdmin(admin.ModelAdmin):\n    list_display=['name',]\n    search_fields = ['name',]\n\nadmin.site.register(Destination, DestinationAdmin)\nadmin.site.register(Place, PlaceAdmin)\n```\n. Not a requirement. Either way autocomplete does not work for me\n. Now I do see:\nPage not found (404)\nRequest Method: GET\nRequest URL:    http://127.0.0.1:8000/static/grappelli/jquery/jquery.min.map\n\nUnder my \\grappelli_example\\static\\grappelli\\jquery:\nI see only jquery-1.9.1.min.js\n\nHow do I obtain jquery.min.map? Thanks\n. no idea. Do you mind if I package my code up and send it over?\n. Understand. Thanks for your kindness.\n\nDate: Tue, 18 Feb 2014 05:28:49 -0800\nFrom: notifications@github.com\nTo: django-grappelli@noreply.github.com\nCC: li_yufei@hotmail.com\nSubject: Re: [django-grappelli] Autocomplete question (#453)\n\nSorry \u2013 I don\u00b4t have time to offer that kind of support. Please try to find out what\u00b4s the issue \u2026 autocompletes are definitely working on the changelist (I just douple-checked with different browsers).\n\nI'm closing this ticket for now. If you find something, feel free to reopen.\n\n\u2014\nReply to this email directly or view it on GitHub.                    \n. just one quick question. How do u think I should go about finding it out? It is a very simple app with not much frills except grappelli. My first instinct is the python package I am using, which is the 64x anaconda for 2.7. I am changing to pythonxy now. Do you think this might be the issue? Any other thoughts will be much appreciated.\nThanks\n\nDate: Tue, 18 Feb 2014 05:28:51 -0800\nFrom: notifications@github.com\nTo: django-grappelli@noreply.github.com\nCC: li_yufei@hotmail.com\nSubject: Re: [django-grappelli] Autocomplete question (#453)\n\nClosed #453.\n\n\u2014\nReply to this email directly or view it on GitHub.                    \n. I installed pythonxy on the computer without any python installed previously, and get the same results. so it is not the package.\n\nI am wondering why raw_id_fields and related-lookups would not have anything to do here if my goal is to make autocomplete work for the model itself like this:\n\n```\n#models.py\nclass Place(models.Model):\n    name = models.CharField(max_length=100)\n\n    def __unicode__(self):\n        return self.name\n\n    @staticmethod\n    def autocomplete_search_fields():\n        return ('name__icontains',)\n\n#admin.py\nclass PlaceAdmin(admin.ModelAdmin):\n    list_display=['id', 'name',]\n    search_fields = ['name',]\n    list_editable=['name',]\n\nadmin.site.register(Place, PlaceAdmin)\n\n```\n\nIs this supposed to show autocomplete, as I start typing in the search box? The grappelli package is excellent, but without some examples/videos I do not know what is supposed to work.\n\nThanks\n. ",
    "eyjolfur12": "Just a sidenote. I just installed Grappelli (2.5.1) with pip, and I also got a 404 on http://localhost:8000/static/grappelli/jquery/jquery.min.map. So I looked a little into it and found out the request is coming from jquery.min.js, see this ticked: http://stackoverflow.com/questions/18365315/jquerys-jquery-1-10-2-min-map-is-triggering-a-404-not-found.\nAnd thanks for the great work on Grappelli.\n. Just a sidenote. I just installed Grappelli (2.5.1) with pip, and I also got a 404 on http://localhost:8000/static/grappelli/jquery/jquery.min.map. So I looked a little into it and found out the request is coming from jquery.min.js, see this ticked: http://stackoverflow.com/questions/18365315/jquerys-jquery-1-10-2-min-map-is-triggering-a-404-not-found.\nAnd thanks for the great work on Grappelli.\n. ",
    "fdemmer": "i came to this issue looking for autocomplete (\"suggestions\") for search in the change_list. \ni think @ymzz277 was looking for the same thing. that is something grappelli does _not_ do!\n\nas @sehmaschine correctly said, the \"autocomplete lookups\" feature _does_ work in the change_list view. it allows you to edit raw_id fields using the same comfortable, autocompleting search widget as in the change_form view. (you have to add the field to `list_display`, `list_editable` and `raw_id_fields` to make that work)\n\nimho it was unfortunate to call the staticmethod to define the \"lookups\" for the \"autocomplete lookups\" feature `autocomplete_search_fields()` and the setting `GRAPPELLI_AUTOCOMPLETE_SEARCH_FIELDS` as it has nothing to do with what you can configure in Django admin with `search_fields` (which is filtering the items listed in change_list by a search term).\n\nautocomplete for the search would be nice... but that is a different story...\n. i came to this issue looking for autocomplete (\"suggestions\") for search in the change_list. \ni think @ymzz277 was looking for the same thing. that is something grappelli does _not_ do!\n\nas @sehmaschine correctly said, the \"autocomplete lookups\" feature _does_ work in the change_list view. it allows you to edit raw_id fields using the same comfortable, autocompleting search widget as in the change_form view. (you have to add the field to `list_display`, `list_editable` and `raw_id_fields` to make that work)\n\nimho it was unfortunate to call the staticmethod to define the \"lookups\" for the \"autocomplete lookups\" feature `autocomplete_search_fields()` and the setting `GRAPPELLI_AUTOCOMPLETE_SEARCH_FIELDS` as it has nothing to do with what you can configure in Django admin with `search_fields` (which is filtering the items listed in change_list by a search term).\n\nautocomplete for the search would be nice... but that is a different story...\n. ",
    "GabrielDumbrava": "I would also like to have autocomplete working in the search field in the change_list as @fdemmer mentioned. In the meantime I have to rely to other solutions which makes the interface a little inconsistent.. I would also like to have autocomplete working in the search field in the change_list as @fdemmer mentioned. In the meantime I have to rely to other solutions which makes the interface a little inconsistent.. ",
    "chrisdl": "Well, I am not intricately familiary with overriding templates in admin, so it was not clear to me whether I would need to get down and dirty with overriding grappelli or django's templates. Perhaps you could point me in the right direction? \n![dates_django_admin](https://f.cloud.github.com/assets/1074818/2219760/42e1aa12-9a45-11e3-8944-845fa2237ec8.png)\n\nI am basically looking to access whatever generates out a single field value and be like \"if this is a date, do xyz\" or possibly move even higher up the food chain.\n\nSorry if you think this isn't to do with grappelli!\n. Well, I am not intricately familiary with overriding templates in admin, so it was not clear to me whether I would need to get down and dirty with overriding grappelli or django's templates. Perhaps you could point me in the right direction? \n![dates_django_admin](https://f.cloud.github.com/assets/1074818/2219760/42e1aa12-9a45-11e3-8944-845fa2237ec8.png)\n\nI am basically looking to access whatever generates out a single field value and be like \"if this is a date, do xyz\" or possibly move even higher up the food chain.\n\nSorry if you think this isn't to do with grappelli!\n. ",
    "gone": "@sehmaschine Can you link me to the guidelines? I can provide a sample app to recreate the issue if that would help\n. Found the issue - any value other than \"\" in the \"TEMPLATE_STRING_IF_INVALID\" setting value will break the inline template. I'll try to put together a bugfix \n. @sehmaschine \nAccording to https://docs.djangoproject.com/en/dev/ref/templates/api/#how-invalid-variables-are-handled\n\nThis is possibly not really an issue. Would it make more sense to just update the docs to explicitly say \"inlines are borked if TEMPLATE_STRING_IF_INVALID is set to anything other than \"\" \"  - or throw an explicit error?  The current behavior of failing silently is less than ideal imho.\n. @sehmaschine It is different - the django admin works as expected, and grappelli fails silently. \n. I only have the setting set in local development so I removed the setting when working in admin, added again when outside.\n. Hit this again today, hacked up a quick fix:\n\n```\nclass FalseString(str):\n    def __nonzero__(self):\n        return False\n\nTEMPLATE_STRING_IF_INVALID = FalseString(\"BAD TEMPLATE VARIABLE\")\n```\n. @sehmaschine Can you link me to the guidelines? I can provide a sample app to recreate the issue if that would help\n. Found the issue - any value other than \"\" in the \"TEMPLATE_STRING_IF_INVALID\" setting value will break the inline template. I'll try to put together a bugfix \n. @sehmaschine \nAccording to https://docs.djangoproject.com/en/dev/ref/templates/api/#how-invalid-variables-are-handled\n\nThis is possibly not really an issue. Would it make more sense to just update the docs to explicitly say \"inlines are borked if TEMPLATE_STRING_IF_INVALID is set to anything other than \"\" \"  - or throw an explicit error?  The current behavior of failing silently is less than ideal imho.\n. @sehmaschine It is different - the django admin works as expected, and grappelli fails silently. \n. I only have the setting set in local development so I removed the setting when working in admin, added again when outside.\n. Hit this again today, hacked up a quick fix:\n\n```\nclass FalseString(str):\n    def __nonzero__(self):\n        return False\n\nTEMPLATE_STRING_IF_INVALID = FalseString(\"BAD TEMPLATE VARIABLE\")\n```\n. ",
    "sdarby2000": "I'm having this exact same error. How was it resolved @gone \n. @lightstrike I had overwritten the admin change from so I could use tinymce. But updating the admin change form fixed this for me. \n. @lightstrike To give custom behavior in the admin change form I had overridden the change form, basically adding admin/beehive/change_form.html in my templates file, then I copied the change_form from grappelli's admin change_form and pasted that inside that my change form. This allowed me to have costume behavior in my admin change_form. The issue I had was I had done this for a previous version of grappelli and I hadn't updated this form when I had updated grappelli. If that sounds familiar you probably had the same issue as I did. \n. I'm having this exact same error. How was it resolved @gone \n. @lightstrike I had overwritten the admin change from so I could use tinymce. But updating the admin change form fixed this for me. \n. @lightstrike To give custom behavior in the admin change form I had overridden the change form, basically adding admin/beehive/change_form.html in my templates file, then I copied the change_form from grappelli's admin change_form and pasted that inside that my change form. This allowed me to have costume behavior in my admin change_form. The issue I had was I had done this for a previous version of grappelli and I hadn't updated this form when I had updated grappelli. If that sounds familiar you probably had the same issue as I did. \n. ",
    "lightstrike": "@sehmaschine I'm hitting this issue as well. As soon as I remove 'grappelli' from INSTALLED_APPS, my inlines display and my form saves correctly.\n. @sdarby2000 Can you provide any more details about how you updated the admin change form? I'm not using tinymce in this particular project, was adding that what broke the inlines for you?\n. @sehmaschine I'm hitting this issue as well. As soon as I remove 'grappelli' from INSTALLED_APPS, my inlines display and my form saves correctly.\n. @sdarby2000 Can you provide any more details about how you updated the admin change form? I'm not using tinymce in this particular project, was adding that what broke the inlines for you?\n. ",
    "jschneier": "Just spent 3 hours tracking this down, thought I was going mad. @sehmaschine any timeline on a fix? Current workaround of editing settings is not really a workaround.\n. Just spent 3 hours tracking this down, thought I was going mad. @sehmaschine any timeline on a fix? Current workaround of editing settings is not really a workaround.\n. ",
    "ingodjango": "Correct. getEnterpriseName returns the formatted enterprise name as it should be shown in the list. the autocomplete should only appear on the change_form and not on the list.\n. Works.\nThanks!\n. Correct. getEnterpriseName returns the formatted enterprise name as it should be shown in the list. the autocomplete should only appear on the change_form and not on the list.\n. Works.\nThanks!\n. ",
    "deleted": "It should occur if you're accessing the admin page using an URL with a trailing \"/\".\n\nIn the long run, it may work out better to set values for the model and app name in the template (or perhaps as data attributes on the autocomplete widget itself), rather than trying to infer them from the URL.\n. In my deplyment, the Django Admin add_view() views (which provides a form to create a new model record)has \"/add/\" at the end of it's default route:\n`/admin/appname/modelname/add/`\n\nchange_view() has the default route:\n`/admin/appname/modelname/id/`\n\nThose routes are generated by admin.autodiscover().\n\nWhat URL patterns do  add_view and change_view use in your testing installation?\n. I won't have time today, but at some point I will see if I can put together\na minimal contrived example in the form of a github repo.  That seems to be\nthe best way forward.\n\nBy the way, thanks for Grappelli and all your hard work to bring modern\nlayouts to the Django admin!\n\nOn Mon, Mar 10, 2014 at 10:24 AM, Patrick Kranzlmueller <\nnotifications@github.com> wrote:\n\n> @deleted https://github.com/deleted autocomplete uses the links given\n> with a relation-field (fk, m2m, ...) - you should see these links with the\n> source-code. in my opinion, a relation-field always uses\n> /appname/modelname/ and never ends with an /add/. the question remains: how\n> can I reproduce this?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/pull/458#issuecomment-37209110\n> .\n. It should occur if you're accessing the admin page using an URL with a trailing \"/\".\n\nIn the long run, it may work out better to set values for the model and app name in the template (or perhaps as data attributes on the autocomplete widget itself), rather than trying to infer them from the URL.\n. In my deplyment, the Django Admin add_view() views (which provides a form to create a new model record)has \"/add/\" at the end of it's default route:\n`/admin/appname/modelname/add/`\n\nchange_view() has the default route:\n`/admin/appname/modelname/id/`\n\nThose routes are generated by admin.autodiscover().\n\nWhat URL patterns do  add_view and change_view use in your testing installation?\n. I won't have time today, but at some point I will see if I can put together\na minimal contrived example in the form of a github repo.  That seems to be\nthe best way forward.\n\nBy the way, thanks for Grappelli and all your hard work to bring modern\nlayouts to the Django admin!\n\nOn Mon, Mar 10, 2014 at 10:24 AM, Patrick Kranzlmueller <\nnotifications@github.com> wrote:\n\n> @deleted https://github.com/deleted autocomplete uses the links given\n> with a relation-field (fk, m2m, ...) - you should see these links with the\n> source-code. in my opinion, a relation-field always uses\n> /appname/modelname/ and never ends with an /add/. the question remains: how\n> can I reproduce this?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/sehmaschine/django-grappelli/pull/458#issuecomment-37209110\n> .\n. ",
    "zsoldosp": "Cheers for the superfast response!\n. Cheers for the superfast response!\n. ",
    "blueyed": "Yes, I am overriding it for a particular model.\n\nThe Grappelli form is change_form.html: https://github.com/sehmaschine/django-grappelli/blob/master/grappelli/templates/admin/change_form.html#L147\n. Thanks, that fixed it!\n. @sehmaschine \nMost likely not - it looks like the template context got changed, and `app_label` was moved to `opts`, with the new addition of `opts.app_config`.\n. @jcuotpc \nThe fix has not been merged: can you verify that my/this PR fixes it?\n\n@sehmaschine \nThere is no branch for Django 1.7 yet, is it?\nIt would be nice and helpful btw, if the Grappelli version would reflect the Django version somehow. Maybe using `2.7` for Django `1.7`?\n. @jcuotpc \nIt's fixed in dev/2.6.x (new commit): https://github.com/sehmaschine/django-grappelli/commit/accb699632deb3f7546b5d9883fefb44bdef6b25\n\n@sehmaschine \nOk, it was just an idea. Currently it's just `DJANGO_MAJOR-1.DJANGO_MINOR-1` == `MAJOR-1.MINOR-1`, which is easy to remember, too.\n\nI am closing this PR, because it has been applied manually in dev/2.6.x.\n. Yes, it's only relevant for Django 1.7.\n\nI've thought that master would get branched for 1.7 later?\n. No, but I wonder what Django version the master is targeting then, since there is the stable branch for Django 1.6 already?\nbtw: I would appreciate it being merged, instead of cherry-picked (like in https://github.com/sehmaschine/django-grappelli/pull/450); I just had to verify that it got merged actually).\n. @sehmaschine \nIs `grappelli/urls.py` not being loaded in your case?\nAre you using the new app loading mechanism for Grappelli?\nDo you have the default AUTH_USER_MODEL setting?\n. > do I need to use a custom user model?\n\nYes.  And then this also needs django-debug-toolbar's automatic patching to trigger it.\n\nI am not currently affected by this though anymore, because `DEBUG_TOOLBAR_PATCH_SETTINGS = False` is also used for other reasons (ref: https://github.com/django-debug-toolbar/django-debug-toolbar/issues/521).\n\nFrom the traceback:\n\n```\nFile \"venv/local/lib/python2.7/site-packages/debug_toolbar/models.py\", line 63, in <module>\n  patch_root_urlconf()\n...\nFile \"venv/src/django-grappelli-25x/grappelli/views/switch.py\", line 18, in <module>\n  User = get_user_model()\nFile \"venv/src/django/django/contrib/auth/__init__.py\", line 129, in get_user_model\n  return django_apps.get_model(settings.AUTH_USER_MODEL)\nFile \"venv/src/django/django/apps/registry.py\", line 187, in get_model\n  self.check_ready()\nFile \"venv/src/django/django/apps/registry.py\", line 119, in check_ready\n  raise RuntimeError(\"App registry isn't ready yet.\")\n```\n\nIt's OK to leave this closed for now.\n. @sehmaschine \nI might have asked this already, so please forgive my ignorance, but why haven't you cherry-picked my commit instead?\n(It would also have provided more information in the commit message)\n. I see.\n\n> not sure if it's possible to cherry-pick from another branch\n\nIt is possible.\n\nI also recommend using `hub` for an enhanced CLI to github: https://hub.github.com/ (in this regard and in general)\nThis allows e.g. for cherry-picking / applying patches from URLs directly.\n\nE.g. wiith your stable branch checked out that would have been:\n\n> `git am https://github.com/blueyed/django-grappelli/commit/8040e461`\n. > So we solve one problem in order to face another one?\n\nI think it's better to have a non-optimal, working solution, which can still be adjusted/optimized for grappelli (like I have done for django-parsley).\n. @sehmaschine \nThese appear to be the main ones I've recognized.\n. I think providing this for some essential wrappers like `#container` and `.form-row` would be a good start.  Other classes could be added if needed and it makes sense.\nIt might also make diffing to and merging from Django a bit easier after all.\n. @parsch \nThanks! :)\n. Yes, I am overriding it for a particular model.\n\nThe Grappelli form is change_form.html: https://github.com/sehmaschine/django-grappelli/blob/master/grappelli/templates/admin/change_form.html#L147\n. Thanks, that fixed it!\n. @sehmaschine \nMost likely not - it looks like the template context got changed, and `app_label` was moved to `opts`, with the new addition of `opts.app_config`.\n. @jcuotpc \nThe fix has not been merged: can you verify that my/this PR fixes it?\n\n@sehmaschine \nThere is no branch for Django 1.7 yet, is it?\nIt would be nice and helpful btw, if the Grappelli version would reflect the Django version somehow. Maybe using `2.7` for Django `1.7`?\n. @jcuotpc \nIt's fixed in dev/2.6.x (new commit): https://github.com/sehmaschine/django-grappelli/commit/accb699632deb3f7546b5d9883fefb44bdef6b25\n\n@sehmaschine \nOk, it was just an idea. Currently it's just `DJANGO_MAJOR-1.DJANGO_MINOR-1` == `MAJOR-1.MINOR-1`, which is easy to remember, too.\n\nI am closing this PR, because it has been applied manually in dev/2.6.x.\n. Yes, it's only relevant for Django 1.7.\n\nI've thought that master would get branched for 1.7 later?\n. No, but I wonder what Django version the master is targeting then, since there is the stable branch for Django 1.6 already?\nbtw: I would appreciate it being merged, instead of cherry-picked (like in https://github.com/sehmaschine/django-grappelli/pull/450); I just had to verify that it got merged actually).\n. @sehmaschine \nIs `grappelli/urls.py` not being loaded in your case?\nAre you using the new app loading mechanism for Grappelli?\nDo you have the default AUTH_USER_MODEL setting?\n. > do I need to use a custom user model?\n\nYes.  And then this also needs django-debug-toolbar's automatic patching to trigger it.\n\nI am not currently affected by this though anymore, because `DEBUG_TOOLBAR_PATCH_SETTINGS = False` is also used for other reasons (ref: https://github.com/django-debug-toolbar/django-debug-toolbar/issues/521).\n\nFrom the traceback:\n\n```\nFile \"venv/local/lib/python2.7/site-packages/debug_toolbar/models.py\", line 63, in <module>\n  patch_root_urlconf()\n...\nFile \"venv/src/django-grappelli-25x/grappelli/views/switch.py\", line 18, in <module>\n  User = get_user_model()\nFile \"venv/src/django/django/contrib/auth/__init__.py\", line 129, in get_user_model\n  return django_apps.get_model(settings.AUTH_USER_MODEL)\nFile \"venv/src/django/django/apps/registry.py\", line 187, in get_model\n  self.check_ready()\nFile \"venv/src/django/django/apps/registry.py\", line 119, in check_ready\n  raise RuntimeError(\"App registry isn't ready yet.\")\n```\n\nIt's OK to leave this closed for now.\n. @sehmaschine \nI might have asked this already, so please forgive my ignorance, but why haven't you cherry-picked my commit instead?\n(It would also have provided more information in the commit message)\n. I see.\n\n> not sure if it's possible to cherry-pick from another branch\n\nIt is possible.\n\nI also recommend using `hub` for an enhanced CLI to github: https://hub.github.com/ (in this regard and in general)\nThis allows e.g. for cherry-picking / applying patches from URLs directly.\n\nE.g. wiith your stable branch checked out that would have been:\n\n> `git am https://github.com/blueyed/django-grappelli/commit/8040e461`\n. > So we solve one problem in order to face another one?\n\nI think it's better to have a non-optimal, working solution, which can still be adjusted/optimized for grappelli (like I have done for django-parsley).\n. @sehmaschine \nThese appear to be the main ones I've recognized.\n. I think providing this for some essential wrappers like `#container` and `.form-row` would be a good start.  Other classes could be added if needed and it makes sense.\nIt might also make diffing to and merging from Django a bit easier after all.\n. @parsch \nThanks! :)\n. ",
    "jcuotpc": "This probelm appears again in Django 1.7c1 when visiting history in admin. \n\n`NoReverseMatch: Reverse for 'app_list' with arguments '()' and keyword arguments '{u'app_label': ''}' not found. 1 pattern(s) tried: [u'admin/(?P<app_label>app1|app2|app3|admin)/$']`\n\nIt works fine if grappelli is deactivated.\n. Yes, I installed dev/2.6.x and it's working fine.\nThank you!\n. This probelm appears again in Django 1.7c1 when visiting history in admin. \n\n`NoReverseMatch: Reverse for 'app_list' with arguments '()' and keyword arguments '{u'app_label': ''}' not found. 1 pattern(s) tried: [u'admin/(?P<app_label>app1|app2|app3|admin)/$']`\n\nIt works fine if grappelli is deactivated.\n. Yes, I installed dev/2.6.x and it's working fine.\nThank you!\n. ",
    "HiddenFox": "I have this problem with django 1.8.2, django-grappelli 2.5.7.\n\nIn template /home/han/workspace/python/virtualenv/d5_site_py3/lib/python3.4/site-packages/grappelli/templates/admin/object_history.html, error at line 10\nReverse for 'app_list' with arguments '()' and keyword arguments '{'app_label': ''}' not found. 1 pattern(s) tried: ['xiang/(?P<app_label>product|brand|auth)/$']\n\nThe following line is marked as red:\n       <li><a href=\"\n      {% url 'admin:app_list' app_label=app_label %}\n      \">{% trans app_label|capfirst|escape %}</a></li>\n. @sehmaschine Is there any version I can use for django 1.8? If not, do you have a plan to make it compatible with django 1.8?\n. @sehmaschine I see. Thank you!\n. I have this problem with django 1.8.2, django-grappelli 2.5.7.\n\nIn template /home/han/workspace/python/virtualenv/d5_site_py3/lib/python3.4/site-packages/grappelli/templates/admin/object_history.html, error at line 10\nReverse for 'app_list' with arguments '()' and keyword arguments '{'app_label': ''}' not found. 1 pattern(s) tried: ['xiang/(?P<app_label>product|brand|auth)/$']\n\nThe following line is marked as red:\n       <li><a href=\"\n      {% url 'admin:app_list' app_label=app_label %}\n      \">{% trans app_label|capfirst|escape %}</a></li>\n. @sehmaschine Is there any version I can use for django 1.8? If not, do you have a plan to make it compatible with django 1.8?\n. @sehmaschine I see. Thank you!\n. ",
    "sparkinson": "Hi,\n\nI this I have this problem with django 1.8.5, django-grappelli 2.7.1. Is this the same problem\n\nIt occurs when trying to revert to a save version using django-reversion. linked here from https://github.com/etianen/django-reversion/issues/318\n\n<img width=\"1124\" alt=\"screen shot 2015-10-29 at 21 34 29\" src=\"https://cloud.githubusercontent.com/assets/1190898/10832711/e56b3562-7e84-11e5-9e77-b00dee72d8a9.png\">\n. Hi,\n\nI this I have this problem with django 1.8.5, django-grappelli 2.7.1. Is this the same problem\n\nIt occurs when trying to revert to a save version using django-reversion. linked here from https://github.com/etianen/django-reversion/issues/318\n\n<img width=\"1124\" alt=\"screen shot 2015-10-29 at 21 34 29\" src=\"https://cloud.githubusercontent.com/assets/1190898/10832711/e56b3562-7e84-11e5-9e77-b00dee72d8a9.png\">\n. ",
    "pauliuszaleckas": "In object detail admin view. One field has custom widget with button. Take a look at right side of screenshot.\n![input_button](https://cloud.githubusercontent.com/assets/1389436/2634586/b6e5a4d6-be7b-11e3-8aae-f93849cc5e21.png)\n. Django (1.6.1)\ndjango-grappelli (2.5.1)\n\nNow I am using workaround to display it normal width:\n\n```\n<input type=\"button\" style=\"width:auto;\">\n```\n. It is custom one from: https://djangosnippets.org/snippets/2004/\n. Yes, now button width is good. But one disadvantage is that now button style is not grappelli-like.\n. In object detail admin view. One field has custom widget with button. Take a look at right side of screenshot.\n![input_button](https://cloud.githubusercontent.com/assets/1389436/2634586/b6e5a4d6-be7b-11e3-8aae-f93849cc5e21.png)\n. Django (1.6.1)\ndjango-grappelli (2.5.1)\n\nNow I am using workaround to display it normal width:\n\n```\n<input type=\"button\" style=\"width:auto;\">\n```\n. It is custom one from: https://djangosnippets.org/snippets/2004/\n. Yes, now button width is good. But one disadvantage is that now button style is not grappelli-like.\n. ",
    "dadoeyad": "1- I don't know why it's not working for me, I'm on Mac Chrome. I'll try again.\n2- 3- yes \n. 1- I don't know why it's not working for me, I'm on Mac Chrome. I'll try again.\n2- 3- yes \n. ",
    "blaise-io": "I'm sorry, I was on an older version (2.5.0) and I forgot to check if I was on the latest bug release.\n\nCannot reproduce on 2.5.3.\n. I have seen this before on Django 1.6.2, also on the edit user page. \nI didn't file a bug because I couldn't reproduce the bug consistently also.\n. I'm sorry, I was on an older version (2.5.0) and I forgot to check if I was on the latest bug release.\n\nCannot reproduce on 2.5.3.\n. I have seen this before on Django 1.6.2, also on the edit user page. \nI didn't file a bug because I couldn't reproduce the bug consistently also.\n. ",
    "debnet": "Hello, I have the error only if the target fields isn't in raw_id_fields. Try it. ;)\n. Django 1.9 out. ;)\n. Nevertheless, the popup window for selecting FK items is still buggy on stable/2.9.x.\nWhen clicking the PK of the selected item, the item is open for modification instead of putting data in field.\n. Hello, I have the error only if the target fields isn't in raw_id_fields. Try it. ;)\n. Django 1.9 out. ;)\n. Nevertheless, the popup window for selecting FK items is still buggy on stable/2.9.x.\nWhen clicking the PK of the selected item, the item is open for modification instead of putting data in field.\n. ",
    "EugeneDae": "Sadly, I can't reproduce this bug anymore. I will post details if I encounter the bug once again. Sorry for wasting your time :(\n. Sadly, I can't reproduce this bug anymore. I will post details if I encounter the bug once again. Sorry for wasting your time :(\n. ",
    "dessibelle": "Sorry, that was a bit unclear. The validation error is `\"This field is required\"` for the two required fields that does not have a default value, i.e. `title` and `slug` (the latter of which is prepopulated from the first one). That is, they present the same error as they would normally do when using a standalone ModelAdmin with the same model.\n\nRemoving the default value from the ordering field did not change anything unfortunately, and neither did using the `sortable_excludes` option (I supplied `title` and `slug` in the tuple).\n. I did remove the default value from the database, but it turns out i had missed another default value on another model field as this particular model has a quite complex class hierarchy. With no default values anywhere it does in deed save without any issues. Given that default values are supplied for some required fields it also makes total sense to see the error messages for the required fields that does _not_ have default values specified.\n\nIs my understanding that it's not possible to combine default values and extra rows correct? Or is that perhaps what `sortable_exludes` is for? I can't seem to get that part right (having one field with a default value, which I placed in the `sortable_exludes` tuple).\n\nThanks for the help and clarifications!\n. Absolutely, I'd definitely agree this is two separate issues. I'll fiddle around a bit more, and open a new issue for the slug-field if appropriate. The validation issue/default values is clearly just me not reading the docs well enough.\n\nRegarding the `sortable_excludes` setting that sounds like exactly what I need. I actually tried doing just that (putting all fields with default values in the tuple), but could not get it working. I'll give it another try. My model setup is a bit involved, so this time I promise to try it on a clean install before opening another ticket. :smile: \n. Sorry, that was a bit unclear. The validation error is `\"This field is required\"` for the two required fields that does not have a default value, i.e. `title` and `slug` (the latter of which is prepopulated from the first one). That is, they present the same error as they would normally do when using a standalone ModelAdmin with the same model.\n\nRemoving the default value from the ordering field did not change anything unfortunately, and neither did using the `sortable_excludes` option (I supplied `title` and `slug` in the tuple).\n. I did remove the default value from the database, but it turns out i had missed another default value on another model field as this particular model has a quite complex class hierarchy. With no default values anywhere it does in deed save without any issues. Given that default values are supplied for some required fields it also makes total sense to see the error messages for the required fields that does _not_ have default values specified.\n\nIs my understanding that it's not possible to combine default values and extra rows correct? Or is that perhaps what `sortable_exludes` is for? I can't seem to get that part right (having one field with a default value, which I placed in the `sortable_exludes` tuple).\n\nThanks for the help and clarifications!\n. Absolutely, I'd definitely agree this is two separate issues. I'll fiddle around a bit more, and open a new issue for the slug-field if appropriate. The validation issue/default values is clearly just me not reading the docs well enough.\n\nRegarding the `sortable_excludes` setting that sounds like exactly what I need. I actually tried doing just that (putting all fields with default values in the tuple), but could not get it working. I'll give it another try. My model setup is a bit involved, so this time I promise to try it on a clean install before opening another ticket. :smile: \n. ",
    "goldmar": "Good to know! [The documentation](http://django-grappelli.readthedocs.org/en/latest/customization.html#collapsibles) only mentions `StackedInline`.\n\nI've added `inline_classes = 'grp-collapse grp-closed'` to my classes (which extend StackedInline / TabularInline). When adding this to a `TabularInline` class, nothing happens at all. When adding to a `StackedInline` class, two arrows appear in the header bar at the top right. But nothing happens when I click on them.\n. Damn, okay I finally figured it out.\n- Apparently I need to define both `classes` and `inline_classes`.\n- Also, the parenthesis and the comma at the end is mandatory (as in the documentation) - I guess this makes it a list with a single element. Coming from a background of programming languages with static typing (Java / Scala), I'm not used to this kind of problem.\n\nStill, there are no arrows with `TabularInline` - I guess that's a bug in Grappelli.\n. Thanks for clarifying. While the docs are 'fine', they are a bit too terse for my taste. But maybe this is only because I'm new to both Python and Django.\n. Good to know! [The documentation](http://django-grappelli.readthedocs.org/en/latest/customization.html#collapsibles) only mentions `StackedInline`.\n\nI've added `inline_classes = 'grp-collapse grp-closed'` to my classes (which extend StackedInline / TabularInline). When adding this to a `TabularInline` class, nothing happens at all. When adding to a `StackedInline` class, two arrows appear in the header bar at the top right. But nothing happens when I click on them.\n. Damn, okay I finally figured it out.\n- Apparently I need to define both `classes` and `inline_classes`.\n- Also, the parenthesis and the comma at the end is mandatory (as in the documentation) - I guess this makes it a list with a single element. Coming from a background of programming languages with static typing (Java / Scala), I'm not used to this kind of problem.\n\nStill, there are no arrows with `TabularInline` - I guess that's a bug in Grappelli.\n. Thanks for clarifying. While the docs are 'fine', they are a bit too terse for my taste. But maybe this is only because I'm new to both Python and Django.\n. ",
    "spike411": "I apologize, seems like I missed the fact that this textarea is in fact generated by CodeMirror.\nhttp://stackoverflow.com/questions/13977276/codemirror-textarea-resizable-like-a-standard-textarea\n. I apologize, seems like I missed the fact that this textarea is in fact generated by CodeMirror.\nhttp://stackoverflow.com/questions/13977276/codemirror-textarea-resizable-like-a-standard-textarea\n. ",
    "adaptivdesign": "Ah i see, no i used the master. Looking at your latest commit:\n\nhttps://github.com/sehmaschine/django-grappelli/commit/5b4c2a7cabfe0d61a5ed9753a530c29c901c95ea\n\nI think you fixed it too. Although my approach no longer uses the 't' parameter.  \n. Thanks! My bad! \n. I've been using the dev/2.6.x branch now. Your commit does not seem to be working for generic lookups. Once i click the magnifying glass after i specified the content type, a popup does appear. However a regular change list appears. Not the popup version. By renaming 't' to '_to_field' django renders the page as an actual popup and object selection works again. \n\nI will make a fork of your repo again, and add my changes to the dev 2.6.x branch.\n. yes, i just checked out the latest version and the problem remains. I just fixed it with the suggested change. https://github.com/adaptivdesign/django-grappelli/tree/dev/2.6.x\n\nAlso if you compare the django 1.6.5 branch vs 1.7 you can see the changes:\n\nhttps://github.com/django/django/blob/1.6.5/django/contrib/admin/views/main.py\nhttps://github.com/django/django/blob/1.7c1/django/contrib/admin/views/main.py\nhttps://github.com/django/django/blob/1.7c1/django/contrib/admin/options.py\n. Ah i see, no i used the master. Looking at your latest commit:\n\nhttps://github.com/sehmaschine/django-grappelli/commit/5b4c2a7cabfe0d61a5ed9753a530c29c901c95ea\n\nI think you fixed it too. Although my approach no longer uses the 't' parameter.  \n. Thanks! My bad! \n. I've been using the dev/2.6.x branch now. Your commit does not seem to be working for generic lookups. Once i click the magnifying glass after i specified the content type, a popup does appear. However a regular change list appears. Not the popup version. By renaming 't' to '_to_field' django renders the page as an actual popup and object selection works again. \n\nI will make a fork of your repo again, and add my changes to the dev 2.6.x branch.\n. yes, i just checked out the latest version and the problem remains. I just fixed it with the suggested change. https://github.com/adaptivdesign/django-grappelli/tree/dev/2.6.x\n\nAlso if you compare the django 1.6.5 branch vs 1.7 you can see the changes:\n\nhttps://github.com/django/django/blob/1.6.5/django/contrib/admin/views/main.py\nhttps://github.com/django/django/blob/1.7c1/django/contrib/admin/views/main.py\nhttps://github.com/django/django/blob/1.7c1/django/contrib/admin/options.py\n. ",
    "paulshannon": "That's what I was looking for!\n\nIn the absence of a unified contributing file, links between the `code/doc` contributing.rst and the `issue/github` contributing.rst would be helpful. See forthcoming pull request. Thanks!\n. That's what I was looking for!\n\nIn the absence of a unified contributing file, links between the `code/doc` contributing.rst and the `issue/github` contributing.rst would be helpful. See forthcoming pull request. Thanks!\n. ",
    "remik": "Fixed with new Django release.\n. Fixed with new Django release.\n. ",
    "zacniewski": "I forgot to add: Django 1.7, Grappelli 2.5.3\n. I installed 2.6.1 version via: pip install git+https://github.com/sehmaschine/django-grappelli.git@dev/2.6.x and it helped.\nThanks :)\n. I forgot to add: Django 1.7, Grappelli 2.5.3\n. I installed 2.6.1 version via: pip install git+https://github.com/sehmaschine/django-grappelli.git@dev/2.6.x and it helped.\nThanks :)\n. ",
    "daradib": "Sorry, you're absolutely right. I changed the \"%\" to a \"{\" thinking that it was a typo. I'll close this pull request.\n. Sorry, you're absolutely right. I changed the \"%\" to a \"{\" thinking that it was a typo. I'll close this pull request.\n. ",
    "gugu": "sorry, it works in this branch\n. sorry, it works in this branch\n. ",
    "LegoStormtroopr": "I've rexamined this and it you look at:\n\n```\nhttps://github.com/django/django/blob/master/django/contrib/admin/templates/admin/base.html\n```\n\non line 25 there is a section `{% block branding %}{% endblock %}` this means that the branding block in:\n\n```\nhttps://github.com/django/django/blob/master/django/contrib/admin/templates/admin/base_site.html\n```\n\nis passed up to the main admin template, however in grappelli in template:\n\n```\nhttps://github.com/sehmaschine/django-grappelli/blob/master/grappelli/templates/admin/base.html    \n```\n\nthere is no equivalent block, this means its not possible to add a branding to the site without altering the grappelli `base.html`.\n\nAs such any content in the template\n\n```\nhttps://github.com/django/django/blob/master/django/contrib/admin/templates/admin/base_site.html\n```\n\nin the `{% block branding %}` section is lost. I'm not sure if it is intentional, but it might be useful to have the branding area back.\n. Not a problem. It took me a while to rediscover this. Thanks for maintaining and awesome library.\n. I've rexamined this and it you look at:\n\n```\nhttps://github.com/django/django/blob/master/django/contrib/admin/templates/admin/base.html\n```\n\non line 25 there is a section `{% block branding %}{% endblock %}` this means that the branding block in:\n\n```\nhttps://github.com/django/django/blob/master/django/contrib/admin/templates/admin/base_site.html\n```\n\nis passed up to the main admin template, however in grappelli in template:\n\n```\nhttps://github.com/sehmaschine/django-grappelli/blob/master/grappelli/templates/admin/base.html    \n```\n\nthere is no equivalent block, this means its not possible to add a branding to the site without altering the grappelli `base.html`.\n\nAs such any content in the template\n\n```\nhttps://github.com/django/django/blob/master/django/contrib/admin/templates/admin/base_site.html\n```\n\nin the `{% block branding %}` section is lost. I'm not sure if it is intentional, but it might be useful to have the branding area back.\n. Not a problem. It took me a while to rediscover this. Thanks for maintaining and awesome library.\n. ",
    "volksman": "I'm running into the same issue. I've tried both the package from pypi and master branch with no luck.  I'm using generic relation lookups but getting the same error as above.  Small note I was getting a completely different error/issue when installing grappelli THEN filebrowser as there is a requirements issue with Filebrowser 3.5.7.  I've also tried with both django 1.7 (official release) and 1.7.1a (git).\n\nIn [2]: django.VERSION\nOut[2]: (1, 7, 1, 'alpha', 0)\n\nIn [3]: import grappelli\n\nIn [4]: grappelli.VERSION\nOut[4]: '2.6.1'\n\nIn [5]: import filebrowser\n\nIn [6]: filebrowser.VERSION\nOut[6]: '3.5.7'\n\nI don't have any custom templates that I'm aware of that would interfere with this function.\n. Just found that if I remove _to_field=id from the related lookup url the page renders without error.  I've run out of time for now but will continue digging later unless someone can figure it out before then!  :)\n. I have both sides of this particular GenericRelation registered.  In fact this worked fine with 1.5/1.6.\n\nI'm currently using 1.7.1a which is the live 1.7 branch.  So that regression fix should be included.  As a quick test this morning I upgraded to master and I get a DisallowedModelAdminToField error instead of a 400.\n. I've created https://github.com/sehmaschine/django-grappelli/pull/518 which does seem to fix the problem but I haven't done any extensive testing yet. \n. I'm running into the same issue. I've tried both the package from pypi and master branch with no luck.  I'm using generic relation lookups but getting the same error as above.  Small note I was getting a completely different error/issue when installing grappelli THEN filebrowser as there is a requirements issue with Filebrowser 3.5.7.  I've also tried with both django 1.7 (official release) and 1.7.1a (git).\n\nIn [2]: django.VERSION\nOut[2]: (1, 7, 1, 'alpha', 0)\n\nIn [3]: import grappelli\n\nIn [4]: grappelli.VERSION\nOut[4]: '2.6.1'\n\nIn [5]: import filebrowser\n\nIn [6]: filebrowser.VERSION\nOut[6]: '3.5.7'\n\nI don't have any custom templates that I'm aware of that would interfere with this function.\n. Just found that if I remove _to_field=id from the related lookup url the page renders without error.  I've run out of time for now but will continue digging later unless someone can figure it out before then!  :)\n. I have both sides of this particular GenericRelation registered.  In fact this worked fine with 1.5/1.6.\n\nI'm currently using 1.7.1a which is the live 1.7 branch.  So that regression fix should be included.  As a quick test this morning I upgraded to master and I get a DisallowedModelAdminToField error instead of a 400.\n. I've created https://github.com/sehmaschine/django-grappelli/pull/518 which does seem to fix the problem but I haven't done any extensive testing yet. \n. ",
    "dlferro": "I've dug around but can't find a reason for this query string appended to both the related generic lookup. It also appears that the auto complete for generic lookup utilizes the same query string but it doesn't actually make a request with the url given. In order to resolve it, it looks like it will need to be removed in both spots.\n. Digging into contrib, it appears '_to_field' is used in the change form when there is a foreign key relation. An example would be if you have model admin form that has a foreign relationship field and you want to create that object from within the current form(utilizing the popup) and pre-populate the field with the newly created object. I believe '_to_field' is primarily equal to 'id' as that is what Django uses as a pk by default. I haven't confirmed this, but my guess would be this would be different if you designate another field as the pk for that model. At the end of the day, I think the functionality in question is outside of the scope of needing '_to_field' as a query param since the lookup is for existing objects.\n. I've dug around but can't find a reason for this query string appended to both the related generic lookup. It also appears that the auto complete for generic lookup utilizes the same query string but it doesn't actually make a request with the url given. In order to resolve it, it looks like it will need to be removed in both spots.\n. Digging into contrib, it appears '_to_field' is used in the change form when there is a foreign key relation. An example would be if you have model admin form that has a foreign relationship field and you want to create that object from within the current form(utilizing the popup) and pre-populate the field with the newly created object. I believe '_to_field' is primarily equal to 'id' as that is what Django uses as a pk by default. I haven't confirmed this, but my guess would be this would be different if you designate another field as the pk for that model. At the end of the day, I think the functionality in question is outside of the scope of needing '_to_field' as a query param since the lookup is for existing objects.\n. ",
    "palmjeff": "Hi ovodopyan,\n\nDid you ever correct this issue?  I am having the same problem.\n\nThanks\n. Of course, stupid mistake on my part.  Thanks.\n. Hi ovodopyan,\n\nDid you ever correct this issue?  I am having the same problem.\n\nThanks\n. Of course, stupid mistake on my part.  Thanks.\n. ",
    "soujiro86": "please work on pip requirements to limit the new grappelli 2.6.x to be installable only in environments with django 1.7+\n. please work on pip requirements to limit the new grappelli 2.6.x to be installable only in environments with django 1.7+\n. ",
    "joshkehn": "Thanks!\n. Thanks!\n. ",
    "SaulTigh": "sorry for being not clear, i mean this effect (it happen, when you accidentally click on module title twice)\n![4990440086437888 1](https://cloud.githubusercontent.com/assets/1167728/4722082/6c662bf8-593d-11e4-8125-88c79963478f.png)\nso, maybe, css property 'user-select' is the best option here.\n. sorry for being not clear, i mean this effect (it happen, when you accidentally click on module title twice)\n![4990440086437888 1](https://cloud.githubusercontent.com/assets/1167728/4722082/6c662bf8-593d-11e4-8125-88c79963478f.png)\nso, maybe, css property 'user-select' is the best option here.\n. ",
    "chubz": "This will be come out in 2.5.6?\n. This will be come out in 2.5.6?\n. ",
    "msamoylov": "BTW, with grappelli 2.5.6 I'm getting this:\n\n`ValueError: The file 'grappelli/jquery/i18n/ui.datepicker-en-us.js' could not be found with <django.contrib.staticfiles.storage.CachedStaticFilesStorage object at 0x2d61550>.`\n. I created a separate issue for that: https://github.com/sehmaschine/django-grappelli/issues/577\n. Well, otherwise you're breaking a mature and popular third-party package. \n. grappelli is missing the file named `grappelli/jquery/i18n/ui.datepicker-en-us.js` and that prevents compressing static files when `django.contrib.staticfiles.storage.CachedStaticFilesStorage` is enabled. So, it breaks a typical django-staticfiles deployment routine.\n. Perfect, thanks. Let's close this issue then.\n. django 1.6.10\n\n**settings.py**\n\n```\nLANGUAGE_CODE = 'en-US'\n\nSTATICFILES_STORAGE = 'django.contrib.staticfiles.storage.CachedStaticFilesStorage'\n\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    'compressor.finders.CompressorFinder',\n)\n\nCOMPRESS_PRECOMPILERS = (\n    ('text/less', 'lessc {infile} {outfile}'),\n)\n\nCOMPRESS_CSS_FILTERS = [\n    'compressor.filters.css_default.CssAbsoluteFilter',  \n    'compressor.filters.cssmin.CSSMinFilter'\n]\n\nCOMPRESS_ENABLED = True\nCOMPRESS_OFFLINE = True\n```\n. I've got a legacy codebase, but there are no customizations. Now I'm trying to figure out which template is referencing this file.\n. @Chris7 thank you, captain. It was a year ago, just FYI.\n. BTW, with grappelli 2.5.6 I'm getting this:\n\n`ValueError: The file 'grappelli/jquery/i18n/ui.datepicker-en-us.js' could not be found with <django.contrib.staticfiles.storage.CachedStaticFilesStorage object at 0x2d61550>.`\n. I created a separate issue for that: https://github.com/sehmaschine/django-grappelli/issues/577\n. Well, otherwise you're breaking a mature and popular third-party package. \n. grappelli is missing the file named `grappelli/jquery/i18n/ui.datepicker-en-us.js` and that prevents compressing static files when `django.contrib.staticfiles.storage.CachedStaticFilesStorage` is enabled. So, it breaks a typical django-staticfiles deployment routine.\n. Perfect, thanks. Let's close this issue then.\n. django 1.6.10\n\n**settings.py**\n\n```\nLANGUAGE_CODE = 'en-US'\n\nSTATICFILES_STORAGE = 'django.contrib.staticfiles.storage.CachedStaticFilesStorage'\n\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    'compressor.finders.CompressorFinder',\n)\n\nCOMPRESS_PRECOMPILERS = (\n    ('text/less', 'lessc {infile} {outfile}'),\n)\n\nCOMPRESS_CSS_FILTERS = [\n    'compressor.filters.css_default.CssAbsoluteFilter',  \n    'compressor.filters.cssmin.CSSMinFilter'\n]\n\nCOMPRESS_ENABLED = True\nCOMPRESS_OFFLINE = True\n```\n. I've got a legacy codebase, but there are no customizations. Now I'm trying to figure out which template is referencing this file.\n. @Chris7 thank you, captain. It was a year ago, just FYI.\n. ",
    "menarguez": "Excuse me for not following the guidelines, let me fill that information:\n\nVERSIONS: Grappelli 2.6.2, Django 1.7\nSTATICFILES: OK.\nJAVASCRIPTS: OK if I change STATIC_UR to '/static/', ERROR if STATIC_URL = '/' It just will not find any static file even if it is there\nCUSTOMIZATIONS: NONE\n. Excuse me for not following the guidelines, let me fill that information:\n\nVERSIONS: Grappelli 2.6.2, Django 1.7\nSTATICFILES: OK.\nJAVASCRIPTS: OK if I change STATIC_UR to '/static/', ERROR if STATIC_URL = '/' It just will not find any static file even if it is there\nCUSTOMIZATIONS: NONE\n. ",
    "mgedmin": "Any reason these are completely commented out instead of being protected with `if settings.DEBUG:` or something like that?\n. Any reason these are completely commented out instead of being protected with `if settings.DEBUG:` or something like that?\n. ",
    "facconi": "I have temporary solved by commenting the following line in grappelli.dashboard.**init**.py:\n\n<pre>\n#default_app_config = \"grappelli.dashboard.apps.DashboardConfig\"\n</pre>\n. I do not know if it is a Grappelli or an Haystack bug...\n. How can I help to debug it more?\n. What do you suggest? To open a bug on Haystack? Or maybe to add an empty models file to Grappelli?\n. Thank you for your help! I have posted this thread link in Haystack's issue page.\n. I have temporary solved by commenting the following line in grappelli.dashboard.**init**.py:\n\n<pre>\n#default_app_config = \"grappelli.dashboard.apps.DashboardConfig\"\n</pre>\n. I do not know if it is a Grappelli or an Haystack bug...\n. How can I help to debug it more?\n. What do you suggest? To open a bug on Haystack? Or maybe to add an empty models file to Grappelli?\n. Thank you for your help! I have posted this thread link in Haystack's issue page.\n. ",
    "kbr-": "Thanks.\n. Thanks.\n. ",
    "timkofu": "+1\nI have _this exact problem_. Further more, It makes it impossible to have admin actions that need options selected that are set via an ActionForm child form, as it immediately runs the action without letting one select an option.\n. Alright, we shall wait. Thank you for your great work.\n. Been using stable/2.9.x in production for a couple of weeks now; works perfect with 1.10 so far.\n. +1\nI have _this exact problem_. Further more, It makes it impossible to have admin actions that need options selected that are set via an ActionForm child form, as it immediately runs the action without letting one select an option.\n. Alright, we shall wait. Thank you for your great work.\n. Been using stable/2.9.x in production for a couple of weeks now; works perfect with 1.10 so far.\n. ",
    "Karmak23": "mmm. sorry for the noise. I will re-open if it's not that. very sorry.\n. Problem solved. Thanks.\nI must have forget to copy them when I moved from another project.\n. mmm. sorry for the noise. I will re-open if it's not that. very sorry.\n. Problem solved. Thanks.\nI must have forget to copy them when I moved from another project.\n. ",
    "eandersons": "I tried to debug, but without any success.\nUnfortunately I do not have much time to examine further this issue, but I can give it a try.\n\nActually, I have one guess. It seems that behaviour for the prepopulated fields is defined in the `prepopulated_fields_js.html`, that generates script before page is fully loaded. In this case it is clear why prepopulated fields are working, when in the inline admin class `extra` is not defined or it has value greater than `0`, but the automated value is not generated for the prepopuated fields in rows, that are added by \"Add another\" link.\nIt could be just shot in the dark, lets hope it hits something.\n. I did some debugging, and I found that my previous guess was right and wrong at the same time.\n\nIt seems that the problem is bigger than I thought, because value for prepopulated fields in stacked inlines is not generated in plain Django admin (without Grappelli) too. It would be useful if someone else verifies this.\n\nRegarding to `prepopulated_fields_js.html` it seems that it does not do what it is intended to do. What I mean is that CSS class `prepopulated_field` is never added to prepopulated fields elements. So I think that 23rd line in `prepopulated_fields_js.html` should be something like this (I am not sure about the part for stacked inlines (`.grp-empty-form .grp-row.{{ field.field.name }}`)):\n\n```\n$('.grp-empty-form .grp-row.{{ field.field.name }}, .grp-empty-form .grp-tr .grp-td.{{ field.field.name }}').addClass('prepopulated_field');\n```\n\ninstead of \n\n```\n$('.empty-form .form-row .field-{{ field.field.name }}, .empty-form.form-row .field-{{ field.field.name }}').addClass('prepopulated_field');\n```\n\nBut these corrections do not solve the issue, because it seems that in the Grappelli scripts the prepopulated fields are not handled.\nIn `django/contrib/admin/static/js/inlines.js` (line 173) is code that deals with the prepopulated fields in the tabular inlines:\n\n```\nvar initPrepopulatedFields = function(row) {\n  row.find('.prepopulated_field').each(function() {\n    var field = $(this),\n        input = field.find('input, select, textarea'),\n        dependency_list = input.data('dependency_list') || [],\n        dependencies = [];\n    $.each(dependency_list, function(i, field_name) {\n      dependencies.push('#' + row.find('.field-' + field_name).find('input, select, textarea').attr('id'));\n    });\n    if (dependencies.length) {\n      input.prepopulate(dependencies, input.attr('maxlength'));\n    }\n  });\n};\n\n$rows.formset({\n  prefix: options.prefix,\n  addText: options.addText,\n  formCssClass: \"dynamic-\" + options.prefix,\n  deleteCssClass: \"inline-deletelink\",\n  deleteText: options.deleteText,\n  emptyCssClass: \"empty-form\",\n  removed: alternatingRows,\n  added: function(row) {\n    initPrepopulatedFields(row);\n    reinitDateTimeShortCuts();\n    updateSelectFilter();\n    alternatingRows(row);\n  }\n});\n```\n\nI could not find something similar in Grappelli codebase.\n\nI hope this information is helpful.\n. I tried to debug, but without any success.\nUnfortunately I do not have much time to examine further this issue, but I can give it a try.\n\nActually, I have one guess. It seems that behaviour for the prepopulated fields is defined in the `prepopulated_fields_js.html`, that generates script before page is fully loaded. In this case it is clear why prepopulated fields are working, when in the inline admin class `extra` is not defined or it has value greater than `0`, but the automated value is not generated for the prepopuated fields in rows, that are added by \"Add another\" link.\nIt could be just shot in the dark, lets hope it hits something.\n. I did some debugging, and I found that my previous guess was right and wrong at the same time.\n\nIt seems that the problem is bigger than I thought, because value for prepopulated fields in stacked inlines is not generated in plain Django admin (without Grappelli) too. It would be useful if someone else verifies this.\n\nRegarding to `prepopulated_fields_js.html` it seems that it does not do what it is intended to do. What I mean is that CSS class `prepopulated_field` is never added to prepopulated fields elements. So I think that 23rd line in `prepopulated_fields_js.html` should be something like this (I am not sure about the part for stacked inlines (`.grp-empty-form .grp-row.{{ field.field.name }}`)):\n\n```\n$('.grp-empty-form .grp-row.{{ field.field.name }}, .grp-empty-form .grp-tr .grp-td.{{ field.field.name }}').addClass('prepopulated_field');\n```\n\ninstead of \n\n```\n$('.empty-form .form-row .field-{{ field.field.name }}, .empty-form.form-row .field-{{ field.field.name }}').addClass('prepopulated_field');\n```\n\nBut these corrections do not solve the issue, because it seems that in the Grappelli scripts the prepopulated fields are not handled.\nIn `django/contrib/admin/static/js/inlines.js` (line 173) is code that deals with the prepopulated fields in the tabular inlines:\n\n```\nvar initPrepopulatedFields = function(row) {\n  row.find('.prepopulated_field').each(function() {\n    var field = $(this),\n        input = field.find('input, select, textarea'),\n        dependency_list = input.data('dependency_list') || [],\n        dependencies = [];\n    $.each(dependency_list, function(i, field_name) {\n      dependencies.push('#' + row.find('.field-' + field_name).find('input, select, textarea').attr('id'));\n    });\n    if (dependencies.length) {\n      input.prepopulate(dependencies, input.attr('maxlength'));\n    }\n  });\n};\n\n$rows.formset({\n  prefix: options.prefix,\n  addText: options.addText,\n  formCssClass: \"dynamic-\" + options.prefix,\n  deleteCssClass: \"inline-deletelink\",\n  deleteText: options.deleteText,\n  emptyCssClass: \"empty-form\",\n  removed: alternatingRows,\n  added: function(row) {\n    initPrepopulatedFields(row);\n    reinitDateTimeShortCuts();\n    updateSelectFilter();\n    alternatingRows(row);\n  }\n});\n```\n\nI could not find something similar in Grappelli codebase.\n\nI hope this information is helpful.\n. ",
    "fgmacedo": "To fix this locally, I used [staticfiles](https://docs.djangoproject.com/en/1.7/ref/contrib/staticfiles/).\n\nOnly created an aditional app, and put the i18n version of `ui.datepicker.js` inside its static folder. On development mode Django will handle the get, and on deploy the `manage.py collectstatic` will put the file alongside grappelli default files.\n\n```\n<custom_app>/static/grappelli/jquery/i18n/ui.datepicker-pt-BR.js\n```\n\nTks!\n. To fix this locally, I used [staticfiles](https://docs.djangoproject.com/en/1.7/ref/contrib/staticfiles/).\n\nOnly created an aditional app, and put the i18n version of `ui.datepicker.js` inside its static folder. On development mode Django will handle the get, and on deploy the `manage.py collectstatic` will put the file alongside grappelli default files.\n\n```\n<custom_app>/static/grappelli/jquery/i18n/ui.datepicker-pt-BR.js\n```\n\nTks!\n. ",
    "radzhome": "Were you able to reproduce?\n. I'll update my Chromium and see, Thanks.\n. It started to occur in Chrome now, too Version 39.0.2171.95 (64-bit)  On OS X Mavericks\n. It would be more elegant if there was a button here instead, its not very informative/ responsive the way it is. I had the js error as well on 2 different machines using 2 different browsers.\n. static/admin/js/actions.js does load. I got it to work when I changed the\norder of my static file loaders around to as suggested in 214:\n\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n )\n\nOn Fri, Jan 9, 2015 at 2:28 PM, parsch notifications@github.com wrote:\n\n> And you might take a look at #214\n> https://github.com/sehmaschine/django-grappelli/issues/214\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/issues/558#issuecomment-69385308\n> .\n. Were you able to reproduce?\n. I'll update my Chromium and see, Thanks.\n. It started to occur in Chrome now, too Version 39.0.2171.95 (64-bit)  On OS X Mavericks\n. It would be more elegant if there was a button here instead, its not very informative/ responsive the way it is. I had the js error as well on 2 different machines using 2 different browsers.\n. static/admin/js/actions.js does load. I got it to work when I changed the\norder of my static file loaders around to as suggested in 214:\n\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n )\n\nOn Fri, Jan 9, 2015 at 2:28 PM, parsch notifications@github.com wrote:\n\n> And you might take a look at #214\n> https://github.com/sehmaschine/django-grappelli/issues/214\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/issues/558#issuecomment-69385308\n> .\n. ",
    "lazerscience": "This (I think #214 is also related to this issue) drove me also nuts, my dev server continued to serve the Django version of `actions.js` though everything seemed to be configured properly.\nAfter digging into this I found out that it is a caching issue (which is the reason people may experience it on some browsers and on others not - which may lead to the conclusion it is a browser related issue...):\n- If you were using the _original_ admin before your browser may still have a cached version of `action.js`, because if you configured your web server well to serve static files you've of course taken care of good caching - and - besides that the dev server also quite often responds with a `304 - Not Modified`.\n- Running `collectstatic` and/or changing the order of your `STATICFILES_FINDERS` might lead to having the files served again, depending on how they are served (as it changes the file dates for example).\n- For me force-reload (shift-reload) suddenly solved the problem after fooling around for one hour :confused: .\n\nSo I think there's no real solution for that as long the Grappelli files have to share the same name as the ones that come with Django.\n. The link is generated by Django Admin...\n. This (I think #214 is also related to this issue) drove me also nuts, my dev server continued to serve the Django version of `actions.js` though everything seemed to be configured properly.\nAfter digging into this I found out that it is a caching issue (which is the reason people may experience it on some browsers and on others not - which may lead to the conclusion it is a browser related issue...):\n- If you were using the _original_ admin before your browser may still have a cached version of `action.js`, because if you configured your web server well to serve static files you've of course taken care of good caching - and - besides that the dev server also quite often responds with a `304 - Not Modified`.\n- Running `collectstatic` and/or changing the order of your `STATICFILES_FINDERS` might lead to having the files served again, depending on how they are served (as it changes the file dates for example).\n- For me force-reload (shift-reload) suddenly solved the problem after fooling around for one hour :confused: .\n\nSo I think there's no real solution for that as long the Grappelli files have to share the same name as the ones that come with Django.\n. The link is generated by Django Admin...\n. ",
    "Hiieu": "God Damn it, I only put grappelli before admin in urls.py \nThank you, everything works now\n. God Damn it, I only put grappelli before admin in urls.py \nThank you, everything works now\n. ",
    "edwinlunando": "I think the problem is because the grappelli regroup the views based on site. \n\n```\n{% regroup views|dictsort:\"site_id\" by site as views_by_site %}\n```\n\nWhile the standard Django admin regroup by namespace.\n\n```\n{% regroup views|dictsort:'namespace' by namespace as views_by_ns %}\n```\n\nI think grappelli needs to follow this Django pull request. https://github.com/django/django/commit/a39d672ec7d53637805a61b45a51bc0e7d297a36\n. I've created a simple pull request for this. :). https://github.com/sehmaschine/django-grappelli/pull/567\n. I think the problem is because the grappelli regroup the views based on site. \n\n```\n{% regroup views|dictsort:\"site_id\" by site as views_by_site %}\n```\n\nWhile the standard Django admin regroup by namespace.\n\n```\n{% regroup views|dictsort:'namespace' by namespace as views_by_ns %}\n```\n\nI think grappelli needs to follow this Django pull request. https://github.com/django/django/commit/a39d672ec7d53637805a61b45a51bc0e7d297a36\n. I've created a simple pull request for this. :). https://github.com/sehmaschine/django-grappelli/pull/567\n. ",
    "lvr-dev": "django version 1.7 grappelli version 2.6.3\n. Figured it out: get_short_name pointed to userrole. So that explains everything. Thanks for the hint.\n. django version 1.7 grappelli version 2.6.3\n. Figured it out: get_short_name pointed to userrole. So that explains everything. Thanks for the hint.\n. ",
    "GriceTurrble": "Is pagination a possibility? I haven't looked into it in detail yet, I'm afraid. I'd gladly cut the inline count down to 50 or so and provide pagination for the results.\n. Is pagination a possibility? I haven't looked into it in detail yet, I'm afraid. I'd gladly cut the inline count down to 50 or so and provide pagination for the results.\n. ",
    "alosultan": "Version: 2.6.3\n. But this issue does not occur when i work with default admin templates.\n. Version: 2.6.3\n. But this issue does not occur when i work with default admin templates.\n. ",
    "Chris7": "@sehmaschine: It's because the pypi distribution is broken. The templates there include this:\n\n{% if LANGUAGE_CODE %}\n    {% with 'grappelli/jquery/i18n/ui.datepicker-'|add:LANGUAGE_CODE|add:'.js' as datepicker_url %}\n    <script src=\"{% static datepicker_url %}\" type=\"text/javascript\"></script>\n    {% endwith %}\n    {% endif %}\n\nwhich causes this error.\n\nYou can check it yourself here: https://pypi.python.org/pypi/django-grappelli/2.5.7\n. @msamoylov You can fix this by just adding an empty ui.datepicker-en-us.js to your static files under the path it needs.\n. @sehmaschine: It's because the pypi distribution is broken. The templates there include this:\n\n{% if LANGUAGE_CODE %}\n    {% with 'grappelli/jquery/i18n/ui.datepicker-'|add:LANGUAGE_CODE|add:'.js' as datepicker_url %}\n    <script src=\"{% static datepicker_url %}\" type=\"text/javascript\"></script>\n    {% endwith %}\n    {% endif %}\n\nwhich causes this error.\n\nYou can check it yourself here: https://pypi.python.org/pypi/django-grappelli/2.5.7\n. @msamoylov You can fix this by just adding an empty ui.datepicker-en-us.js to your static files under the path it needs.\n. ",
    "aumo": "@sehmaschine  No, Indeed I had not realized that, this is far from optimal. It is because of the focus right?\n\nHas listening on \"focus\" events any other goal apart from detecting related popups dismissal?\n. @sehmaschine  No, Indeed I had not realized that, this is far from optimal. It is because of the focus right?\n\nHas listening on \"focus\" events any other goal apart from detecting related popups dismissal?\n. ",
    "ivoras": "I don't think so. Grepping for \"app_label\" in my entire app returns nothing. Do you have some other things for me to try?\nThis is Django 1.7.\n. INSTALLED_APPS: https://gist.github.com/ivoras/a1ce61218c3f3c3bd6d7\n\napp-level URLs: https://gist.github.com/ivoras/c54cf69c16d36a61665c\n\nk2-level URLs: https://gist.github.com/ivoras/080d9da4f0f63c5c52f3\n\nrelevant models: https://gist.github.com/ivoras/13300bb8d547b2ea8c01\n\nmodeladmins: https://gist.github.com/ivoras/f748aff931d2a062c464\n\nThe ProductVariant model/admin form should autocomplete the \"product\" field.\n. I don't think so. Grepping for \"app_label\" in my entire app returns nothing. Do you have some other things for me to try?\nThis is Django 1.7.\n. INSTALLED_APPS: https://gist.github.com/ivoras/a1ce61218c3f3c3bd6d7\n\napp-level URLs: https://gist.github.com/ivoras/c54cf69c16d36a61665c\n\nk2-level URLs: https://gist.github.com/ivoras/080d9da4f0f63c5c52f3\n\nrelevant models: https://gist.github.com/ivoras/13300bb8d547b2ea8c01\n\nmodeladmins: https://gist.github.com/ivoras/f748aff931d2a062c464\n\nThe ProductVariant model/admin form should autocomplete the \"product\" field.\n. ",
    "hobbsd": "My browser is Firefox 37.\nHere is the textarea as-is:\n![screen-2015-03-31_12-12](https://cloud.githubusercontent.com/assets/1676348/6923589/936551c0-d7a0-11e4-9902-cd816be04f2e.png)\nAnd here it is with css adjusted as shown in the screenshot just below:\n![screen-2015-03-31_12-13](https://cloud.githubusercontent.com/assets/1676348/6923593/9a982472-d7a0-11e4-97e5-97e882bd6900.png)\n![screen-2015-03-31_12-14](https://cloud.githubusercontent.com/assets/1676348/6923595/9d7128d8-d7a0-11e4-846c-087c0405a364.png)\nThanks for looking into it, and let me know if there's any other info you need.\n. My browser is Firefox 37.\nHere is the textarea as-is:\n![screen-2015-03-31_12-12](https://cloud.githubusercontent.com/assets/1676348/6923589/936551c0-d7a0-11e4-9902-cd816be04f2e.png)\nAnd here it is with css adjusted as shown in the screenshot just below:\n![screen-2015-03-31_12-13](https://cloud.githubusercontent.com/assets/1676348/6923593/9a982472-d7a0-11e4-97e5-97e882bd6900.png)\n![screen-2015-03-31_12-14](https://cloud.githubusercontent.com/assets/1676348/6923595/9d7128d8-d7a0-11e4-846c-087c0405a364.png)\nThanks for looking into it, and let me know if there's any other info you need.\n. ",
    "micrypt": "@parsch I've only proposed to match it to that for `header#grp-header`. That said, I didn't notice any subsequent conflicts. This is really just me bringing it to your attention. I'll defer to your expertise.\n. @parsch \n\n`div.olMap {  z-index: 0; }`\n. @parsch That's the enclosing tag for the map. Open Layers then adds style attributes with z-indices well North of that value for some elements. Highest I've found so far was 1004. Looks like it's simply not well-behaved. Think I'll close this unless anyone else is interested.\n. @parsch I've only proposed to match it to that for `header#grp-header`. That said, I didn't notice any subsequent conflicts. This is really just me bringing it to your attention. I'll defer to your expertise.\n. @parsch \n\n`div.olMap {  z-index: 0; }`\n. @parsch That's the enclosing tag for the map. Open Layers then adds style attributes with z-indices well North of that value for some elements. Highest I've found so far was 1004. Looks like it's simply not well-behaved. Think I'll close this unless anyone else is interested.\n. ",
    "k1-hedayati": "Where should be positioned or where was positioned before?\nWith my fix it shows box in under of other apps. \n. I think it's better to be below other apps, so it seems like other normal apps\n. Where should be positioned or where was positioned before?\nWith my fix it shows box in under of other apps. \n. I think it's better to be below other apps, so it seems like other normal apps\n. ",
    "kokhoor": "Hopefully we can mess around with some settings in Model Admin to generate the search link (magnifyign glass link to the right of the auto-complete textbox) which will be intepreted by the auto-complete when user key in searches as well as the magnifying glass itself when opening the new dialog.\n\nBesides just filtering, it is then possible to maybe (thinking crazily) populate other fields too. This will be useful for invoices for example, where in the line items it is possible to just select an item, and the default selling price and unit of measure are pre-populated.\n\nIs it at all a good place to start such a customisation? I may be able to chip in some effort if it is considered useful for the project.\n. I am quite clueless as to how the link is generated. Will try to do some research on it.\n\nWhat I am afraid is for time being, I would just attempt a hack to make it work, and it might not be suitable for inclusion into the grappelli library.\n. What I believe can be done (although really feel hackish), is to override the function _formfield_for_foreignkey_ in Inline, I believe is the same for ModuleAdmin, based on the function defined in BaseModelAdmin, and change  the widgets.ForeignKeyRawIdWidget construction in the following code:\n\n```\n    if db_field.name in self.raw_id_fields:\n        kwargs['widget'] = widgets.ForeignKeyRawIdWidget(db_field.rel,\n                                self.admin_site, using=db)\n```\n\nWhat I did was subclass from widgets.ForeignKeyRawIdWidget and overwrite the url_parameters to add in my filters, which are actually defined in the actual Foreign Model Admin's list_filter\n\n```\ndef url_parameters(self):\n    from django.contrib.admin.views.main import TO_FIELD_VAR\n    params = self.base_url_parameters()\n    params.update({TO_FIELD_VAR: self.rel.get_related_field().name})\n    params['sell_ind__exact'] = '1'\n    return params\n```\n. Hopefully we can mess around with some settings in Model Admin to generate the search link (magnifyign glass link to the right of the auto-complete textbox) which will be intepreted by the auto-complete when user key in searches as well as the magnifying glass itself when opening the new dialog.\n\nBesides just filtering, it is then possible to maybe (thinking crazily) populate other fields too. This will be useful for invoices for example, where in the line items it is possible to just select an item, and the default selling price and unit of measure are pre-populated.\n\nIs it at all a good place to start such a customisation? I may be able to chip in some effort if it is considered useful for the project.\n. I am quite clueless as to how the link is generated. Will try to do some research on it.\n\nWhat I am afraid is for time being, I would just attempt a hack to make it work, and it might not be suitable for inclusion into the grappelli library.\n. What I believe can be done (although really feel hackish), is to override the function _formfield_for_foreignkey_ in Inline, I believe is the same for ModuleAdmin, based on the function defined in BaseModelAdmin, and change  the widgets.ForeignKeyRawIdWidget construction in the following code:\n\n```\n    if db_field.name in self.raw_id_fields:\n        kwargs['widget'] = widgets.ForeignKeyRawIdWidget(db_field.rel,\n                                self.admin_site, using=db)\n```\n\nWhat I did was subclass from widgets.ForeignKeyRawIdWidget and overwrite the url_parameters to add in my filters, which are actually defined in the actual Foreign Model Admin's list_filter\n\n```\ndef url_parameters(self):\n    from django.contrib.admin.views.main import TO_FIELD_VAR\n    params = self.base_url_parameters()\n    params.update({TO_FIELD_VAR: self.rel.get_related_field().name})\n    params['sell_ind__exact'] = '1'\n    return params\n```\n. ",
    "Sveder": "I just update object_history as it is the main offender for us. If someone wants to update the rest, go ahead.\n. @sehmaschine Anything I can do to help get the pull request accepted? Do you want me to add/remove something?\n. Haha, sorry, I didn't sync my branch so it looks like github added the merge and my previous commit to the PR. If you look at the files changed, it shows the actual only change which is the one above. \nFeel free to close the pull request and just copy paste the change into your own commit.\n\n(michael-fairfly is my work account btw)\n. I just update object_history as it is the main offender for us. If someone wants to update the rest, go ahead.\n. @sehmaschine Anything I can do to help get the pull request accepted? Do you want me to add/remove something?\n. Haha, sorry, I didn't sync my branch so it looks like github added the merge and my previous commit to the PR. If you look at the files changed, it shows the actual only change which is the one above. \nFeel free to close the pull request and just copy paste the change into your own commit.\n\n(michael-fairfly is my work account btw)\n. ",
    "tatterdemalion": "I encountered this problem both on my server and my local machine.\n\nServer: Python 2.7.3\nLocal: Python 2.7.6\n\nAh. I got it now. unicode won't work in Python 3.\nIt is interesting because unicode_literals is already imported.\n. I encountered this problem both on my server and my local machine.\n\nServer: Python 2.7.3\nLocal: Python 2.7.6\n\nAh. I got it now. unicode won't work in Python 3.\nIt is interesting because unicode_literals is already imported.\n. ",
    "twopac": "I have this problem too.\nPython 2.7.6\nDjango 1.7.7\n. I have this problem too.\nPython 2.7.6\nDjango 1.7.7\n. ",
    "Seleznev-nvkz": "Same problem.\nPython 2.7.6\nDjango 1.7.7\n. of course. You can try pass this \n\nclass Meta:\n        verbose_name = u'\u0421\u043f\u043e\u0441\u043e\u0431 \u043e\u043f\u043b\u0430\u0442\u044b'\n        verbose_name_plural = u'\u0421\u043f\u043e\u0441\u043e\u0431 \u043e\u043f\u043b\u0430\u0442\u044b'\n\nand required python 2.7.x\n. It's strangely, cause I have \n`UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-3: ordinal not in range(128)` \n, but in version 2.6.3 all fine.\nI attach screenshot below. And now we using 2.6.3 on production.\n![grappelli_2 6 4](https://cloud.githubusercontent.com/assets/4374093/7292105/68606b8c-e9ba-11e4-9125-39a1ec30bb56.png)\n. Same problem.\nPython 2.7.6\nDjango 1.7.7\n. of course. You can try pass this \n\nclass Meta:\n        verbose_name = u'\u0421\u043f\u043e\u0441\u043e\u0431 \u043e\u043f\u043b\u0430\u0442\u044b'\n        verbose_name_plural = u'\u0421\u043f\u043e\u0441\u043e\u0431 \u043e\u043f\u043b\u0430\u0442\u044b'\n\nand required python 2.7.x\n. It's strangely, cause I have \n`UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-3: ordinal not in range(128)` \n, but in version 2.6.3 all fine.\nI attach screenshot below. And now we using 2.6.3 on production.\n![grappelli_2 6 4](https://cloud.githubusercontent.com/assets/4374093/7292105/68606b8c-e9ba-11e4-9125-39a1ec30bb56.png)\n. ",
    "robslotboom": "Same here...\n\nPython 2.7.2\nDjango 1.8\nverbose_name_plural = u'Vaste pagina\u2019s'\n\nProblem solved using:\nverbose_name_plural = 'Vaste pagina\u2019s'\n. Absolutely.\n\nHere\u2019s the log:\n\n[11/Dec/2015 15:07:21] \"GET /admin/cms/contentnode/78/ HTTP/1.1\" 200 36552\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/jquery/ui/jquery-ui.min.css HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/stylesheets/screen.css HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/stylesheets/mueller/grid/output.css HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/jquery/jquery-2.1.4.min.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/jquery/ui/jquery-ui.min.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/grappelli.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/jquery.grp_collapsible.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/jquery.grp_timepicker.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/jquery.grp_collapsible_group.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/jquery.grp_related_fk.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/jquery.grp_related_m2m.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/jquery.grp_related_generic.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/jquery.grp_autocomplete_fk.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/jquery.grp_autocomplete_m2m.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/jquery.grp_inline.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/jquery.grp_autocomplete_generic.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/admin/js/core.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/admin/js/admin/RelatedObjectLookups.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/admin/js/jquery.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/admin/js/jquery.init.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/admin/js/admin/DateTimeShortcuts.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/admin/js/calendar.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/admin/js/actions.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/admin/js/related-widget-wrapper.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/filebrowser/js/AddFileBrowser.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/admin/js/collapse.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/debug_toolbar/css/print.css HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/debug_toolbar/js/jquery_pre.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/debug_toolbar/css/toolbar.css HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/debug_toolbar/js/jquery_post.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/debug_toolbar/js/toolbar.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /admin/jsi18n/ HTTP/1.1\" 200 7027\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/images/icons-s846f870921.png HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/debug_toolbar/img/ajax-loader.gif HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/img/icon_calendar.gif HTTP/1.1\" 404 1807\n\nBest regards,\n\nRobert\n. Hmmmm.\n\nA Multi file search for icon_calendar.gif in static gave no match.\nSame search in sitepackeges resulted in one match:\nlib/python3.5/site-packages/django/contrib/admin/static/admin/js/admin/DateTimeShortcuts.js\n. The icon is located at django.contrib.admin.static.admin.img.icon_calendar.gif\n. Hi Parsch,\n\nThat\u2019s it. The one created by collectstatic is empty but the one in sitepackages is not.\nSince I\u2019m currently working in debug mode the js form sitepackages is loaded, not the empty one.\n. I\u2019ll check it again once the project is deployed and let you know.\n\nregards,\n\nRob\n. Same here...\n\nPython 2.7.2\nDjango 1.8\nverbose_name_plural = u'Vaste pagina\u2019s'\n\nProblem solved using:\nverbose_name_plural = 'Vaste pagina\u2019s'\n. Absolutely.\n\nHere\u2019s the log:\n\n[11/Dec/2015 15:07:21] \"GET /admin/cms/contentnode/78/ HTTP/1.1\" 200 36552\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/jquery/ui/jquery-ui.min.css HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/stylesheets/screen.css HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/stylesheets/mueller/grid/output.css HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/jquery/jquery-2.1.4.min.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/jquery/ui/jquery-ui.min.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/grappelli.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/jquery.grp_collapsible.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/jquery.grp_timepicker.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/jquery.grp_collapsible_group.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/jquery.grp_related_fk.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/jquery.grp_related_m2m.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/jquery.grp_related_generic.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/jquery.grp_autocomplete_fk.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/jquery.grp_autocomplete_m2m.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/jquery.grp_inline.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/js/jquery.grp_autocomplete_generic.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/admin/js/core.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/admin/js/admin/RelatedObjectLookups.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/admin/js/jquery.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/admin/js/jquery.init.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/admin/js/admin/DateTimeShortcuts.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/admin/js/calendar.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/admin/js/actions.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/admin/js/related-widget-wrapper.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/filebrowser/js/AddFileBrowser.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/admin/js/collapse.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/debug_toolbar/css/print.css HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/debug_toolbar/js/jquery_pre.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/debug_toolbar/css/toolbar.css HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/debug_toolbar/js/jquery_post.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/debug_toolbar/js/toolbar.js HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /admin/jsi18n/ HTTP/1.1\" 200 7027\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/images/icons-s846f870921.png HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/debug_toolbar/img/ajax-loader.gif HTTP/1.1\" 304 0\n[11/Dec/2015 15:07:21] \"GET /static/grappelli/img/icon_calendar.gif HTTP/1.1\" 404 1807\n\nBest regards,\n\nRobert\n. Hmmmm.\n\nA Multi file search for icon_calendar.gif in static gave no match.\nSame search in sitepackeges resulted in one match:\nlib/python3.5/site-packages/django/contrib/admin/static/admin/js/admin/DateTimeShortcuts.js\n. The icon is located at django.contrib.admin.static.admin.img.icon_calendar.gif\n. Hi Parsch,\n\nThat\u2019s it. The one created by collectstatic is empty but the one in sitepackages is not.\nSince I\u2019m currently working in debug mode the js form sitepackages is loaded, not the empty one.\n. I\u2019ll check it again once the project is deployed and let you know.\n\nregards,\n\nRob\n. ",
    "ybigus": "also have this issue on django 1.7.8, python 2.7.3 @sehmaschine looks like this helps:pattern_items.sort(key=lambda x: str(x[0]._meta.verbose_name_plural.encode('utf-8')))\n. also have this issue on django 1.7.8, python 2.7.3 @sehmaschine looks like this helps:pattern_items.sort(key=lambda x: str(x[0]._meta.verbose_name_plural.encode('utf-8')))\n. ",
    "jieter": "Note that [this line](https://github.com/sehmaschine/django-grappelli/blob/79f6005b0fef6ee8c665e78a10c80f20c510cd1b/grappelli/templates/grp_doc/change_form.html#L53) seems to yield a warning too:\n`RemovedInDjango19Warning: Loading the `url` tag from the `future` library is deprecated and will be removed in Django 1.9. Use the default `url` tag instead.`\n. @sehmaschine anything I can do or help with regarding this PR?\n. a change like this (except without the try/except was added a few minutes ago\n. Should be easy to test on different python/django versions with a single `tox.ini`\n. Locally, it will report those versions not installed and run the tests for the versions installed. But you can also run to with an argument to select a certain entry from the test matrix. \n. @sehmaschine allright, it works now, thanks. \n\nMaybe the wording in the docs could be made more clear.\n. I think it should be clear what happens if you do not add `sortable_excludes`. It now says 'you <b>may</b> want to define...', which is not clear. I'm also not sure what you mean by 'having an effect on the position field'. In general, I think I expect these kind of docs (not strictly API docs), to be in the form of `problem -> solution` and not `solution -> problem`.\n\nMaybe something like: 'If you enable sorting on inlines with default values, you should define `sortable_excludes` to exclude those fields while checking if something changed.... ' \n\nAlso the comments in the example are not very helpful as it is very clear that `sortable_excludes` is defined without the comment. I think it could help more if it tells why 'field_1' and 'field_2' are added to that tuple.\n\nAnother issue when looking at these code examples: the comment in the code fragment just above the Sortable excludes paragraph basically states that sortable_field_name is 'position' by default, in an example about `GrappelliSortableHiddenMixin`. I think that comment should be reflected in the text about `sortable_field_name` and maybe in its example, but it's distracting in the docs about `GrappelliSortableMixin`\n. If you are on it: I just discovered that having a `position = models.PositiveSmallIntegerField()` on a model makes it impossible to ignore the position field while not working in the admin. I want to be able to just add related models, so maybe you should include `null=True` in the docs to make that possible while retaining sorting capabilities in the admin.\n. much better :+1: \n. Duplicate of #692 \n. #704 has almost the same patch.\n. For what it's worth: master works great with Django 1.9 for me too. Shouldn't we have more automatic testing, maybe something using selenium?\n. Note that [this line](https://github.com/sehmaschine/django-grappelli/blob/79f6005b0fef6ee8c665e78a10c80f20c510cd1b/grappelli/templates/grp_doc/change_form.html#L53) seems to yield a warning too:\n`RemovedInDjango19Warning: Loading the `url` tag from the `future` library is deprecated and will be removed in Django 1.9. Use the default `url` tag instead.`\n. @sehmaschine anything I can do or help with regarding this PR?\n. a change like this (except without the try/except was added a few minutes ago\n. Should be easy to test on different python/django versions with a single `tox.ini`\n. Locally, it will report those versions not installed and run the tests for the versions installed. But you can also run to with an argument to select a certain entry from the test matrix. \n. @sehmaschine allright, it works now, thanks. \n\nMaybe the wording in the docs could be made more clear.\n. I think it should be clear what happens if you do not add `sortable_excludes`. It now says 'you <b>may</b> want to define...', which is not clear. I'm also not sure what you mean by 'having an effect on the position field'. In general, I think I expect these kind of docs (not strictly API docs), to be in the form of `problem -> solution` and not `solution -> problem`.\n\nMaybe something like: 'If you enable sorting on inlines with default values, you should define `sortable_excludes` to exclude those fields while checking if something changed.... ' \n\nAlso the comments in the example are not very helpful as it is very clear that `sortable_excludes` is defined without the comment. I think it could help more if it tells why 'field_1' and 'field_2' are added to that tuple.\n\nAnother issue when looking at these code examples: the comment in the code fragment just above the Sortable excludes paragraph basically states that sortable_field_name is 'position' by default, in an example about `GrappelliSortableHiddenMixin`. I think that comment should be reflected in the text about `sortable_field_name` and maybe in its example, but it's distracting in the docs about `GrappelliSortableMixin`\n. If you are on it: I just discovered that having a `position = models.PositiveSmallIntegerField()` on a model makes it impossible to ignore the position field while not working in the admin. I want to be able to just add related models, so maybe you should include `null=True` in the docs to make that possible while retaining sorting capabilities in the admin.\n. much better :+1: \n. Duplicate of #692 \n. #704 has almost the same patch.\n. For what it's worth: master works great with Django 1.9 for me too. Shouldn't we have more automatic testing, maybe something using selenium?\n. ",
    "ngzhian": "I opened up PR #595 attempting to fix this issue and also reconcile the `RelatedObjectLookups.js` in 1.8 with the one in grappelli.\nI think the problem is an `onclick` handler on the `<a>` element, not the js file. The js file was actually pretty good in being [backwards compatible](https://github.com/django/django/blob/master/django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js#L138-L139)\n. Progress update, think i found the issue here, tracked it down to [this commit in django](https://github.com/django/django/commit/68c9a72e29c929d896a25b3a0f566c09b6723dd4#diff-f42ac10b4a1091330b3ae0c3d0d0a7cf).\n\nTo summarize, that commit tries to decouple the JS and HTML of the widgets, thus they removed the `onclick` in the html [diff](https://github.com/django/django/commit/68c9a72e29c929d896a25b3a0f566c09b6723dd4#diff-f42ac10b4a1091330b3ae0c3d0d0a7cfL173), and instead attached a click event listener [here](https://github.com/django/django/commit/68c9a72e29c929d896a25b3a0f566c09b6723dd4#diff-e17ea8b1adbd222a1dc7ef37d03a0d49R78).\n\nA possible fix is to copy those JS that adds the click handler into `change_form.html`. Will wor on that on the PR #595 .\n. @sehmaschine sure! Are there any issues I can help with? Would be great if you could @ ping me in those issues that you think can use an extra pair of eyes looking into, especially 1.8 compatibility blockers. Thanks\n. well well great investigation @parsch , there was some styles overwriting the defaults, let me sort it out and see if this still remains and issue. Thank you for looking into this!\n. thanks again, problem solved, lots of messy styles caused the confusion. :see_no_evil: \n. @sehmaschine this should fix adding related object. I've tested it locally in a test app I fired up.\n- [x] add a related object to a new model\n- [x] change related object of a model\n- [x] create a new related object in the popup window\n. This is moved to #606 where the PR is based off dev//2.7.x. \n. @sehmaschine ping for this. What's left is to decide which functions should stay and which should go. The code is pretty well committed as to which function was introduced in django 1.8, so let me know which ones are safe to remove.\nI'll patch this up with a commit that throws away methods I think are irrelevant, and hopefully that will be a better merge candidate. Thanks @m-aciek for bumping this up :facepunch: \n. @sehmaschine got it, I tried my best to copy over all methods that were in django1.8, dedup all those functions we already have on grappelli, and commented the appropriate options. Let me know if I can help with anything else.\n. @parsch understood, in that case can we consider removing that line then? (In my use case it is an extra DB hit to query the name.)\n. @parsch got it, thanks!\n. I opened up PR #595 attempting to fix this issue and also reconcile the `RelatedObjectLookups.js` in 1.8 with the one in grappelli.\nI think the problem is an `onclick` handler on the `<a>` element, not the js file. The js file was actually pretty good in being [backwards compatible](https://github.com/django/django/blob/master/django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js#L138-L139)\n. Progress update, think i found the issue here, tracked it down to [this commit in django](https://github.com/django/django/commit/68c9a72e29c929d896a25b3a0f566c09b6723dd4#diff-f42ac10b4a1091330b3ae0c3d0d0a7cf).\n\nTo summarize, that commit tries to decouple the JS and HTML of the widgets, thus they removed the `onclick` in the html [diff](https://github.com/django/django/commit/68c9a72e29c929d896a25b3a0f566c09b6723dd4#diff-f42ac10b4a1091330b3ae0c3d0d0a7cfL173), and instead attached a click event listener [here](https://github.com/django/django/commit/68c9a72e29c929d896a25b3a0f566c09b6723dd4#diff-e17ea8b1adbd222a1dc7ef37d03a0d49R78).\n\nA possible fix is to copy those JS that adds the click handler into `change_form.html`. Will wor on that on the PR #595 .\n. @sehmaschine sure! Are there any issues I can help with? Would be great if you could @ ping me in those issues that you think can use an extra pair of eyes looking into, especially 1.8 compatibility blockers. Thanks\n. well well great investigation @parsch , there was some styles overwriting the defaults, let me sort it out and see if this still remains and issue. Thank you for looking into this!\n. thanks again, problem solved, lots of messy styles caused the confusion. :see_no_evil: \n. @sehmaschine this should fix adding related object. I've tested it locally in a test app I fired up.\n- [x] add a related object to a new model\n- [x] change related object of a model\n- [x] create a new related object in the popup window\n. This is moved to #606 where the PR is based off dev//2.7.x. \n. @sehmaschine ping for this. What's left is to decide which functions should stay and which should go. The code is pretty well committed as to which function was introduced in django 1.8, so let me know which ones are safe to remove.\nI'll patch this up with a commit that throws away methods I think are irrelevant, and hopefully that will be a better merge candidate. Thanks @m-aciek for bumping this up :facepunch: \n. @sehmaschine got it, I tried my best to copy over all methods that were in django1.8, dedup all those functions we already have on grappelli, and commented the appropriate options. Let me know if I can help with anything else.\n. @parsch understood, in that case can we consider removing that line then? (In my use case it is an extra DB hit to query the name.)\n. @parsch got it, thanks!\n. ",
    "jlicht": "This issue still exists with: \nDjango: 1.8.2\nPython 3.4.3\ndjango-grappelli 2.7.1\n\nI was able to resolve it by moving `grappelli.dashboard` after `django.contrib.contenttypes` as described above\n. This issue still exists with: \nDjango: 1.8.2\nPython 3.4.3\ndjango-grappelli 2.7.1\n\nI was able to resolve it by moving `grappelli.dashboard` after `django.contrib.contenttypes` as described above\n. ",
    "Aisuko": "The same issue:\r\nDjango 1.8\r\npython 2.7.13\r\n. The same issue:\r\nDjango 1.8\r\npython 2.7.13\r\n. ",
    "and-nothing-else": "Django 1.8\nGrappelli 2.6.4\n. Django 1.8\nGrappelli 2.6.4\n. ",
    "m-aciek": "Workaround:\n\n```\n{% block extrahead %}\n<script>\n  (function($) {\n    $(document).ready(function() {\n      $(\".add-related, .change-related\").attr(\n        \"onclick\",\n        \"event.preventDefault();grp.onclickRelatedWorkaround(this)\"\n      )\n    });\n    grp.onclickRelatedWorkaround = function(el) {\n      if ($(el).attr(\"href\") != null) { showAddAnotherPopup(el) }\n    }\n  })(grp.jQuery);\n</script>\n{% endblock %}\n```\n\nin `admin/base_site.html`. Looking forward to Django 1.8 support!\nUPDATE: code updated\n. Beg you to merge that!\n. Note that Grappelli is not compatibile with Django 1.8 yet.\n. Hi, I think it would be great if Grappelli would cover all of the standard admin features and extend it, and do not left it behind in functionality. I think answer to your question is in deed question of resources to do that.\n. My fault, marking strings as unicode did the work.\n\n```\nclass Meta:\n        verbose_name = u\"zam\u00f3wienie\"\n        verbose_name_plural = u\"zam\u00f3wienia\"\n```\n. Actually, issue can be closed as problem is already resolved. Vide https://code.djangoproject.com/ticket/25019#comment:3\n. Workaround:\n\n```\n{% block extrahead %}\n<script>\n  (function($) {\n    $(document).ready(function() {\n      $(\".add-related, .change-related\").attr(\n        \"onclick\",\n        \"event.preventDefault();grp.onclickRelatedWorkaround(this)\"\n      )\n    });\n    grp.onclickRelatedWorkaround = function(el) {\n      if ($(el).attr(\"href\") != null) { showAddAnotherPopup(el) }\n    }\n  })(grp.jQuery);\n</script>\n{% endblock %}\n```\n\nin `admin/base_site.html`. Looking forward to Django 1.8 support!\nUPDATE: code updated\n. Beg you to merge that!\n. Note that Grappelli is not compatibile with Django 1.8 yet.\n. Hi, I think it would be great if Grappelli would cover all of the standard admin features and extend it, and do not left it behind in functionality. I think answer to your question is in deed question of resources to do that.\n. My fault, marking strings as unicode did the work.\n\n```\nclass Meta:\n        verbose_name = u\"zam\u00f3wienie\"\n        verbose_name_plural = u\"zam\u00f3wienia\"\n```\n. Actually, issue can be closed as problem is already resolved. Vide https://code.djangoproject.com/ticket/25019#comment:3\n. ",
    "nourchawich": "Same as #593 \n. Same as #593 \n. ",
    "cossio": "I am not using Grappelli, but I am having the same issue (add related opens in same window instead of popup). I have no idea why this could be happening. Any ideas on how I can diagnose it?\n. I am not using Grappelli, but I am having the same issue (add related opens in same window instead of popup). I have no idea why this could be happening. Any ideas on how I can diagnose it?\n. ",
    "c-nichols": "Sorry about the delay.  Turns out the way to reproduce is set zoom to <100%.\n. Sorry about the delay.  Turns out the way to reproduce is set zoom to <100%.\n. ",
    "alex1989": "I want to say that constants can't be updated because of django-constant have hidden field version, and this field isn't include to template, and because of constants isn't save, just looking to django-constant admin template and you'll understand.\n\nLinks:\nTemplate [https://github.com/jezdez/django-constance/blob/master/constance/templates/admin/constance/change_list.html#L43]\nAdmin file with form [https://github.com/jezdez/django-constance/blob/master/constance/admin.py#L62]\n\nThere is field version and this field is hidden, and if we don't change constance template it error will happen in the future\n. I understood what you want, you can change it another way, something like this, but it's need correct\n\n```\n{% for field in form.hidden_fields %}\n  {% if form.errors %}\n    <ul class=\"grp-messagelist\">\n    {% for error in field.errors %}\n      <li class=\"grp-error\">{{ error }}</li>\n    {% endfor %}\n    </ul>\n  {% endif %}\n  {{ field }}\n{% endfor %}\n```\n\nor like this\n\n```\n{% for field in form.hidden_fields %}\n  {% if field.errors %}\n    <ul class=\"grp-messagelist\">\n    {% for error in field.errors %}\n      <li class=\"grp-error\">{{ error }}</li>\n    {% endfor %}\n    </ul>\n  {% endif %}\n  {{ field }}\n{% endfor %}\n```\n. I want to say that constants can't be updated because of django-constant have hidden field version, and this field isn't include to template, and because of constants isn't save, just looking to django-constant admin template and you'll understand.\n\nLinks:\nTemplate [https://github.com/jezdez/django-constance/blob/master/constance/templates/admin/constance/change_list.html#L43]\nAdmin file with form [https://github.com/jezdez/django-constance/blob/master/constance/admin.py#L62]\n\nThere is field version and this field is hidden, and if we don't change constance template it error will happen in the future\n. I understood what you want, you can change it another way, something like this, but it's need correct\n\n```\n{% for field in form.hidden_fields %}\n  {% if form.errors %}\n    <ul class=\"grp-messagelist\">\n    {% for error in field.errors %}\n      <li class=\"grp-error\">{{ error }}</li>\n    {% endfor %}\n    </ul>\n  {% endif %}\n  {{ field }}\n{% endfor %}\n```\n\nor like this\n\n```\n{% for field in form.hidden_fields %}\n  {% if field.errors %}\n    <ul class=\"grp-messagelist\">\n    {% for error in field.errors %}\n      <li class=\"grp-error\">{{ error }}</li>\n    {% endfor %}\n    </ul>\n  {% endif %}\n  {{ field }}\n{% endfor %}\n```\n. ",
    "antoyo": "Yeah, it works together, but the style needs to be updated.\n. Yeah, it works together, but the style needs to be updated.\n. ",
    "fechnert": "This would be really really nice!\n. Now, [Django 1.9 is a thing](https://www.djangoproject.com/weblog/2015/dec/01/django-19-released/) and this error persists. Is the support for Django 1.9 planned?  \nAlso, this exception is only raised if i try to start Django with the grappelli-dashboard app. With grappelli standalone it works fine.  \nTried with Django 1.9.1, Python 2.7.8 and django-grappelli 2.7.2\n. Further described in #678\n. This would be really really nice!\n. Now, [Django 1.9 is a thing](https://www.djangoproject.com/weblog/2015/dec/01/django-19-released/) and this error persists. Is the support for Django 1.9 planned?  \nAlso, this exception is only raised if i try to start Django with the grappelli-dashboard app. With grappelli standalone it works fine.  \nTried with Django 1.9.1, Python 2.7.8 and django-grappelli 2.7.2\n. Further described in #678\n. ",
    "andreynovikov": "@lzanuz How did you add this button? I'm seeking for it too.\n. @lzanuz How did you add this button? I'm seeking for it too.\n. ",
    "olivierdalang": "@Izanuz I'm also very interested in your modification (in the meantime it's implemented in master), do you have a branch ?\n. @ninapavlich Hi, I couldn't find anything relevant on the google groups, and I'm very interested in a more mobile-friendly grappelli, and could probably contribute (even if I'm by no mean a css-specialist). Did you make any progress or findings on that matter ? (sorry for discussing here...)\n. @ninapavlich \nBut without talking of the major overhaul, wouldn't there be a much shorter term strategy in \"hacking\" the css to make it a bit less unpractical on mobile devices ?\n\nIn particular, I think of some hardcoded widths that could probably relatively easily be removed, or dealing with the fixed header and footer that take up all the screen on smartphones.\n\nI haven't spent time into this yet, and I'm a complete newbie to grappelli's CSS (and to css grids in general), so I may underestimate the complexity of it, but I can't believe we can't improve rendering on mobiles through a few well thought media queries.\n. @Izanuz I'm also very interested in your modification (in the meantime it's implemented in master), do you have a branch ?\n. @ninapavlich Hi, I couldn't find anything relevant on the google groups, and I'm very interested in a more mobile-friendly grappelli, and could probably contribute (even if I'm by no mean a css-specialist). Did you make any progress or findings on that matter ? (sorry for discussing here...)\n. @ninapavlich \nBut without talking of the major overhaul, wouldn't there be a much shorter term strategy in \"hacking\" the css to make it a bit less unpractical on mobile devices ?\n\nIn particular, I think of some hardcoded widths that could probably relatively easily be removed, or dealing with the fixed header and footer that take up all the screen on smartphones.\n\nI haven't spent time into this yet, and I'm a complete newbie to grappelli's CSS (and to css grids in general), so I may underestimate the complexity of it, but I can't believe we can't improve rendering on mobiles through a few well thought media queries.\n. ",
    "dbinetti": "I use this for inlines; when viewing inline children of a parent record it is incredibly useful to easily click to a child record that requires further inspection -- particularly when the inline only shows a subset of all available fields.  Yes, it is easy to create such a link and include it, but this is how i used the `show_change_link` parameter when using the default admin app.\n. This may help, if I understand how autocomplete works.  (Well, it helps answer the question, but I'm still stuck I think...)\n\nhttps://docs.djangoproject.com/en/1.8/ref/models/fields/#django.db.models.ForeignKey.limit_choices_to\n\n> If limit_choices_to is or returns a Q object, which is useful for complex queries, then it will only have an effect on the choices available in the admin when the field is not listed in raw_id_fields in the ModelAdmin for the model.\n. Nope, no ideas.  Closing\n. I use this for inlines; when viewing inline children of a parent record it is incredibly useful to easily click to a child record that requires further inspection -- particularly when the inline only shows a subset of all available fields.  Yes, it is easy to create such a link and include it, but this is how i used the `show_change_link` parameter when using the default admin app.\n. This may help, if I understand how autocomplete works.  (Well, it helps answer the question, but I'm still stuck I think...)\n\nhttps://docs.djangoproject.com/en/1.8/ref/models/fields/#django.db.models.ForeignKey.limit_choices_to\n\n> If limit_choices_to is or returns a Q object, which is useful for complex queries, then it will only have an effect on the choices available in the admin when the field is not listed in raw_id_fields in the ModelAdmin for the model.\n. Nope, no ideas.  Closing\n. ",
    "philippeluickx": "My use case is that I would love to have the edit and delete links in the FK dropdowns, but nothing in the inlines.\nIt's basically to simplify interaction. It saves a lot on navigation and searching.\n\nEDIT:\nI am not using autocomplete, because I am limiting the results shown (permissions with django-guardian). Hence just following the django default would be great in my case.\n. My use case is that I would love to have the edit and delete links in the FK dropdowns, but nothing in the inlines.\nIt's basically to simplify interaction. It saves a lot on navigation and searching.\n\nEDIT:\nI am not using autocomplete, because I am limiting the results shown (permissions with django-guardian). Hence just following the django default would be great in my case.\n. ",
    "helenst": "I'd like this. I've currently got this (the change bit anyway, for FK dropdowns) working on a site of mine but I've had to override the bits of Grappelli that override the bits of Django that implement this, which is kind of messy.\n\nWould a PR be accepted / considered?\n. I'd like this. I've currently got this (the change bit anyway, for FK dropdowns) working on a site of mine but I've had to override the bits of Grappelli that override the bits of Django that implement this, which is kind of messy.\n\nWould a PR be accepted / considered?\n. ",
    "kosner": "It's useful to have it, I use it from a TabularInlines to another modelAdmin with inlines.\r\nI started on the example of @lzanuz for my tool by modifying the tabular.html\r\n\r\n![image](https://cloud.githubusercontent.com/assets/16896831/21810521/76baf428-d74c-11e6-89f8-700d8c6763a0.png). It's useful to have it, I use it from a TabularInlines to another modelAdmin with inlines.\r\nI started on the example of @lzanuz for my tool by modifying the tabular.html\r\n\r\n![image](https://cloud.githubusercontent.com/assets/16896831/21810521/76baf428-d74c-11e6-89f8-700d8c6763a0.png). ",
    "phcerdan": "+1 for this, sorry for not being more helpful.. +1 for this, sorry for not being more helpful.. ",
    "mohamad-xtouch": "django 1.8\ngrappelli 2.6.5\n\ni can't reopen ticket\n. django 1.8\ngrappelli 2.6.5\n\ni can't reopen ticket\n. ",
    "oelium": "you have the same warning in File: grappelli/views/related.py line 17\n. ok sorry. it's and error. I make this correction\n\nthe import on File: grappelli/views/related.py line 17 -> from django.contrib.admin.util .... Removed in Django 1.9 by django.contrib.admin.utils\n\nsorry for this confusion\n. ![capture du 2015-07-23 13 08 18](https://cloud.githubusercontent.com/assets/13416461/8848944/ef33e832-313b-11e5-86f8-267b2f2bfb0e.png)\n. ok. i see. when i download the zip file i have in related.py 'django.contrib.admin.util' but not with git clone.\n\nThank..\n. for info you have the same in fillebrowser.\nI open a ticket on the repo with the list files.\n. you have the same warning in File: grappelli/views/related.py line 17\n. ok sorry. it's and error. I make this correction\n\nthe import on File: grappelli/views/related.py line 17 -> from django.contrib.admin.util .... Removed in Django 1.9 by django.contrib.admin.utils\n\nsorry for this confusion\n. ![capture du 2015-07-23 13 08 18](https://cloud.githubusercontent.com/assets/13416461/8848944/ef33e832-313b-11e5-86f8-267b2f2bfb0e.png)\n. ok. i see. when i download the zip file i have in related.py 'django.contrib.admin.util' but not with git clone.\n\nThank..\n. for info you have the same in fillebrowser.\nI open a ticket on the repo with the list files.\n. ",
    "lukas-hetzenecker": "Well, that's really a good question.\nActually I think the best option would be to incorporate this in Django itself, because other projects could step as easily into this gotcha.\n\nI opened a pull request for Django ( https://code.djangoproject.com/ticket/25019 ), let's see how this turns out.\n. Yes, please close this issue - my pull request for django was merged and a proper fix will be in the next release\n. Well, that's really a good question.\nActually I think the best option would be to incorporate this in Django itself, because other projects could step as easily into this gotcha.\n\nI opened a pull request for Django ( https://code.djangoproject.com/ticket/25019 ), let's see how this turns out.\n. Yes, please close this issue - my pull request for django was merged and a proper fix will be in the next release\n. ",
    "kbytesys": "Please close or edit this issue if you want\n\nI looked into the source code.\n\nIf you use:\n\n``` python\nmodules.LinkList(\n  title=None,\n  column=1,\n ...\n)\n```\n\ngrappelli will show the default title \"links\". If you use the empty string '', grappelli will hide the title.\n\nI don't know if this is the correct behaviour, but I suggest you to add this to your documentation.\n. Please close or edit this issue if you want\n\nI looked into the source code.\n\nIf you use:\n\n``` python\nmodules.LinkList(\n  title=None,\n  column=1,\n ...\n)\n```\n\ngrappelli will show the default title \"links\". If you use the empty string '', grappelli will hide the title.\n\nI don't know if this is the correct behaviour, but I suggest you to add this to your documentation.\n. ",
    "niorko": "But when I disable grappelli, items remain selected after refresh.\nSo it seems like a bug in some of the grappelli .js.\n. But when I disable grappelli, items remain selected after refresh.\nSo it seems like a bug in some of the grappelli .js.\n. ",
    "strycore": "Yes, of course. Any model containing a JSONField (https://pypi.python.org/pypi/jsonfield) using a PostgreSQL db will trigger the issue. The specific model where I was having the problem was this one: https://github.com/lutris/website/blob/master/platforms/models.py#L7\n. Yes, of course. Any model containing a JSONField (https://pypi.python.org/pypi/jsonfield) using a PostgreSQL db will trigger the issue. The specific model where I was having the problem was this one: https://github.com/lutris/website/blob/master/platforms/models.py#L7\n. ",
    "byashimov": "It's totally okay\n![c9f66f2bb88a44236479ff843fc223c7](https://cloud.githubusercontent.com/assets/1560043/9006746/2f726554-378b-11e5-930f-d676d431096d.png)\n:\n. Looks like it's not \"grappelli\" thing. I've reproduced the issue without grappelli on my Prod config.\n<img width=\"488\" alt=\"screen shot 2015-07-31 at 14 02 45\" src=\"https://cloud.githubusercontent.com/assets/1560043/9006988/6b42fe66-378d-11e5-8d63-48efb3f4240e.png\">\nThank you for your time.\n. It's totally okay\n![c9f66f2bb88a44236479ff843fc223c7](https://cloud.githubusercontent.com/assets/1560043/9006746/2f726554-378b-11e5-930f-d676d431096d.png)\n:\n. Looks like it's not \"grappelli\" thing. I've reproduced the issue without grappelli on my Prod config.\n<img width=\"488\" alt=\"screen shot 2015-07-31 at 14 02 45\" src=\"https://cloud.githubusercontent.com/assets/1560043/9006988/6b42fe66-378d-11e5-8d63-48efb3f4240e.png\">\nThank you for your time.\n. ",
    "vartagg": "Thanks for your answer. There are no information about this problem in documentation.\nP.S. google groups are dead.\n. Thanks for your answer. There are no information about this problem in documentation.\nP.S. google groups are dead.\n. ",
    "adamchainz": "I just mean I can't find a way of running the tests in the project. Most projects have a 'runtests' script or `python setup.py test` hook to run them - I couldn't find one, but maybe I'm just overlooking it.\n. This currently contains the commits from #656, don't merge as-is :negative_squared_cross_mark: \n. I've updated this now, and included a commit to upgrade the dependencies which fixes test breakage on Python 3.5 locally.\n. Attached to this PR...\n\nhttps://github.com/sehmaschine/django-grappelli/pull/655/commits\n. @sehmaschine bump\n. Meant to paste the output:\n\n```\n    def test_related_lookup(self):\n        \"\"\"\n            Test related lookup\n            \"\"\"\n        self.client.login(username=\"User001\", password=\"user001\")\n        response = self.client.get(reverse(\"grp_related_lookup\"))\n        self.assertEqual(response.status_code, 403)\n\n        self.client.login(username=\"Superuser001\", password=\"superuser001\")\n        response = self.client.get(reverse(\"grp_related_lookup\"))\n        self.assertEqual(response.status_code, 200)\n        self.assertJSONEqual(response.content.decode('utf-8'), [{\"value\": None, \"label\": \"\"}])\n\n        # ok\n        response = self.client.get(\"%s?object_id=1&app_label=%s&model_name=%s\" % (reverse(\"grp_related_lookup\"), \"grappelli\", \"category\"))\n        self.assertEqual(response.status_code, 200)\n        self.assertJSONEqual(response.content.decode('utf-8'), [{\"value\": \"1\", \"label\": \"Category No 0 (1)\"}])\n\n        # wrong object_id\n        response = self.client.get(\"%s?object_id=10000&app_label=%s&model_name=%s\" % (reverse(\"grp_related_lookup\"), \"grappelli\", \"category\"))\n        self.assertEqual(response.status_code, 200)\n        self.assertJSONEqual(response.content.decode('utf-8'), [{\"value\": \"10000\", \"label\": \"?\"}])\n\n        # filtered queryset (single filter) fails\n        response = self.client.get(\"%s?object_id=1&app_label=%s&model_name=%s&query_string=id__gte=99\" % (reverse(\"grp_related_lookup\"), \"grappelli\", \"category\"))\n        self.assertEqual(response.status_code, 200)\n        self.assertJSONEqual(response.content.decode('utf-8'), [{\"value\": \"1\", \"label\": \"?\"}])\n\n        # filtered queryset (single filter) works\n        response = self.client.get(\"%s?object_id=100&app_label=%s&model_name=%s&query_string=id__gte=99\" % (reverse(\"grp_related_lookup\"), \"grappelli\", \"category\"))\n        self.assertEqual(response.status_code, 200)\n        self.assertJSONEqual(response.content.decode('utf-8'), [{\"value\": \"100\", \"label\": \"Category No 99 (100)\"}])\n\n        # filtered queryset (multiple filters) fails\n        response = self.client.get(\"%s?object_id=1&app_label=%s&model_name=%s&query_string=name__icontains=99:id__gte=99\" % (reverse(\"grp_related_lookup\"), \"grappelli\", \"category\"))\n        self.assertEqual(response.status_code, 200)\n        self.assertJSONEqual(response.content.decode('utf-8'), [{\"value\": \"1\", \"label\": \"?\"}])\n\n        # filtered queryset (multiple filters) works\n        response = self.client.get(\"%s?object_id=100&app_label=%s&model_name=%s&query_string=name__icontains=99:id__gte=99\" % (reverse(\"grp_related_lookup\"), \"grappelli\", \"category\"))\n        self.assertEqual(response.status_code, 200)\n        self.assertJSONEqual(response.content.decode('utf-8'), [{\"value\": \"100\", \"label\": \"Category No 99 (100)\"}])\n\n        # custom queryset (Superuser)\n        response = self.client.get(\"%s?object_id=1&app_label=%s&model_name=%s\" % (reverse(\"grp_related_lookup\"), \"grappelli\", \"entry\"))\n        self.assertEqual(response.status_code, 200)\n>       self.assertJSONEqual(response.content.decode('utf-8'), [{\"value\": \"1\", \"label\": \"Entry Superuser\"}])\n\ngrappelli/tests/test_related.py:108: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.tox/py34-django18/lib/python3.4/site-packages/django/test/testcases.py:699: in assertJSONEqual\n    self.assertEqual(data, expected_data, msg=msg)\nE   AssertionError: Lists differ: [{'value': '1', 'label': 'Entry object'}] != [{'value': '1', 'label': 'Entry Superuser'}]\nE   \nE   First differing element 0:\nE   {'value': '1', 'label': 'Entry object'}\nE   {'value': '1', 'label': 'Entry Superuser'}\nE   \nE   - [{'label': 'Entry object', 'value': '1'}]\nE   ?                   ^^^ ^^\nE   \nE   + [{'label': 'Entry Superuser', 'value': '1'}]\nE   ?                   ^^^ ^^^^^\n```\n. Any progress? I'm keen to submit a few more PRs :smile: \n. Oh, I want to try adding a Travis CI build and tidying the tests, etc. Best to only continue with that once the Python 3 test failure is fixed :smile: \n. Any progress on review of this - let me know if there is anything I can do to help.\n. Seems like a `pip` error on your machine as opposed to anything in the codebase.. http://stackoverflow.com/questions/20688034/importerror-cannot-import-name-httpshandler-using-pip \n. Yes we should, 3.5 wasn't out when I wrote this patch :horse_racing: \n. No objections! Do you know how to create a travis file or should I write a new PR?\n. Indeed, I recommend putting them all in the tox file, and locally running e.g. `tox -e py27-django17,py34-django17`. It's what several other projects do.\n. This breaks sometimes for us sometimes, we get `OperationalError: (1116, 'Too many tables; MariaDB can only use 61 tables in a join')` when a search query with many words is used and the filters join tables\n. Ok, any testing/feedback I can do?\n. I've been looking around a bit. Django 1.10 upgraded from jQuery 2.1.4 to 2.2.3, but Grappelli 2.9.x is currently replacing that with version 2.1.4 again - shouldn't it be upgraded? \ud83d\ude04 \n\nOther than that I have spotted some other issues that seem to be in our custom javascript, but will update if any of these look like they're in Grappelli. Thx.\n. Ok, just seemed like you were in sync with 1.9 there. Also Grappelli replaces `django.jQuery` so I thought it would be following it.\n. In fact b1963500349f262160659d62b92eb8e72f88be17 copied in jQuery 2.2.3 (rather than just dropping the file to prevent static 'shadowing' of `django.contrib.admin`), but it still shadows `jquery.init.js` so the end result is that `django.jQuery` is the 2.1.4 version but `window.jQuery` is the 2.2.3. :thinking: \n. @sehmaschine bump - any idea about the jQuery changes?\n. Read my above comment, I don't think I can explain it any better\n. In grappelli 2.8.x the vendored jQuery files are just comments: https://github.com/sehmaschine/django-grappelli/blob/master/grappelli/static/admin/js/vendor/jquery/jquery.js . This claims to be to 'shadow' the file in Django, i.e. replace the one in `django.contrib.admin`. It does this because Django's staticfiles gives priority to `grappelli` as it's first in `INSTALLED_APPS` as per [the install guide](https://django-grappelli.readthedocs.io/en/latest/quickstart.html#installation). Grappelli 2.8.x then replaces `django.jQuery` with the version it ships, which is 2.1.4 - the same as what Django 1.9 ships: https://github.com/django/django/blob/stable/1.9.x/django/contrib/admin/static/admin/js/vendor/jquery/jquery.js\n\nIn 2.9.x Grappelli has removed the comments in the vendored jQuery file and instead committed jQuery 2.2.3. This is unnecessary - dropping the files (jquery.js and jquery.min.js) would suffice as Django 1.10 ships jQuery 2.2.3 in the same file, and the 'shadowing' would thus be no longer required. However 2.9.x still ships jQuery 2.1.4 and still replaces `django.jQuery` with it. So it's downgrading Django's version of jQuery, even after what appears to be attempts to upgrade to 2.2.3. This is a potential source of bugs as Django's jQuery code is only tested against 2.2.3.\n\nI'd recommend just always using Django's version of jQuery in Grappelli, especially since in 2.8.x that was what was effectively done by shipping 2.1.4, the same version that Django shipped.\n. I'm making a PR that just removes the files and uses Django's jQuery\n. That's because django-filebrowser depends on grappelli  < 2.9 as you can\nsee in the line:\n\nCollecting django-grappelli<2.9,>=2.8 (from django-filebrowser)\n\nThat's a problem with filebrowser not grappelli, report the issue there\n\nOn 15 November 2016 at 14:25, Richard Cooke notifications@github.com\nwrote:\n\n> Trying to update my Dev setup to verify Grapelli changes, I ran into a\n> really neat problem with File Browser!\n> \n> PIP made me update it to V9. Then a PIP CHECK told me File Browser was not\n> recommended for my new Grappelli version. So I told PIP to update FB -\n> thinking there would be a new version with updated requirements specs. And\n> it DOWNGRADED my Grappelli back to 2.8!!! Below is the console session.\n> \n> `(py27dj110)rcooke@developer1:~/source/GNVO/django-DEV$ pip check\n> django-filebrowser 3.7.2 has requirement django-grappelli<2.9,>=2.8, but\n> you have django-grappelli 2.9.1.\n> \n> (py27dj110)rcooke@developer1:~/source/GNVO/django-DEV$ pip show\n> django-filebrowser\n> Name: django-filebrowser\n> Version: 3.7.2\n> Summary: Media-Management with Grappelli\n> Home-page: http://django-filebrowser.readthedocs.org\n> Author: Patrick Kranzlmueller, Axel Swoboda (vonautomatisch)\n> Author-email: office@vonautomatisch.at\n> License: BSD\n> Location: /home/rcooke/.virtualenvs/py27dj110/lib/python2.7/site-packages\n> Requires: django-grappelli\n> \n> (py27dj110)rcooke@developer1:~/source/GNVO/django-DEV$ pip install\n> --upgrade django-filebrowser\n> Requirement already up-to-date: django-filebrowser in\n> /home/rcooke/.virtualenvs/py27dj110/lib/python2.7/site-packages\n> Collecting django-grappelli<2.9,>=2.8 (from django-filebrowser)\n> Downloading django_grappelli-2.8.3-py2.py3-none-any.whl (1.6MB)\n> 100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1.6MB 594kB/s\n> Installing collected packages: django-grappelli\n> Found existing installation: django-grappelli 2.9.1\n> Uninstalling django-grappelli-2.9.1:\n> Successfully uninstalled django-grappelli-2.9.1\n> Successfully installed django-grappelli-2.8.3\n> (py27dj110)rcooke@developer1:~/source/GNVO/django-DEV$\n> `\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/issues/783#issuecomment-260654333,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AA0WCa-9Z1TvuXgKVcIovXIVyjJXwHOKks5q-cDbgaJpZM4KJ-uV\n> .\n\n## \n\nAdam\n. I'm sorry I didn't realize, I didn't see the wheel on https://pypi.python.org/pypi/django-grappelli/2.8.2 so I assumed you didn't have the config. I'll turn this into an issue.\n. And there's a wheel, yay! \u2638\ufe0f \ud83c\udfa1 \ud83c\udf89 \n. As discussed in #783. I couldn't find a way of directly using Django's version _just_ in the templates since Django configures these files through form media, and with just templates we can't put javascript after the media. In an ideal world I think grappelli would have special `Admin` base classes that have a `media` property that extends what Django supplies, but that would be quite a lot for installations to change when upgrading.\n. N.B. tested by running this version of grappelli in my work app on Django 1.10. Checked that autocomplete and and M2m keys worked and that there were no errors in the javascript console in my browser (Chrome).\n. I just mean I can't find a way of running the tests in the project. Most projects have a 'runtests' script or `python setup.py test` hook to run them - I couldn't find one, but maybe I'm just overlooking it.\n. This currently contains the commits from #656, don't merge as-is :negative_squared_cross_mark: \n. I've updated this now, and included a commit to upgrade the dependencies which fixes test breakage on Python 3.5 locally.\n. Attached to this PR...\n\nhttps://github.com/sehmaschine/django-grappelli/pull/655/commits\n. @sehmaschine bump\n. Meant to paste the output:\n\n```\n    def test_related_lookup(self):\n        \"\"\"\n            Test related lookup\n            \"\"\"\n        self.client.login(username=\"User001\", password=\"user001\")\n        response = self.client.get(reverse(\"grp_related_lookup\"))\n        self.assertEqual(response.status_code, 403)\n\n        self.client.login(username=\"Superuser001\", password=\"superuser001\")\n        response = self.client.get(reverse(\"grp_related_lookup\"))\n        self.assertEqual(response.status_code, 200)\n        self.assertJSONEqual(response.content.decode('utf-8'), [{\"value\": None, \"label\": \"\"}])\n\n        # ok\n        response = self.client.get(\"%s?object_id=1&app_label=%s&model_name=%s\" % (reverse(\"grp_related_lookup\"), \"grappelli\", \"category\"))\n        self.assertEqual(response.status_code, 200)\n        self.assertJSONEqual(response.content.decode('utf-8'), [{\"value\": \"1\", \"label\": \"Category No 0 (1)\"}])\n\n        # wrong object_id\n        response = self.client.get(\"%s?object_id=10000&app_label=%s&model_name=%s\" % (reverse(\"grp_related_lookup\"), \"grappelli\", \"category\"))\n        self.assertEqual(response.status_code, 200)\n        self.assertJSONEqual(response.content.decode('utf-8'), [{\"value\": \"10000\", \"label\": \"?\"}])\n\n        # filtered queryset (single filter) fails\n        response = self.client.get(\"%s?object_id=1&app_label=%s&model_name=%s&query_string=id__gte=99\" % (reverse(\"grp_related_lookup\"), \"grappelli\", \"category\"))\n        self.assertEqual(response.status_code, 200)\n        self.assertJSONEqual(response.content.decode('utf-8'), [{\"value\": \"1\", \"label\": \"?\"}])\n\n        # filtered queryset (single filter) works\n        response = self.client.get(\"%s?object_id=100&app_label=%s&model_name=%s&query_string=id__gte=99\" % (reverse(\"grp_related_lookup\"), \"grappelli\", \"category\"))\n        self.assertEqual(response.status_code, 200)\n        self.assertJSONEqual(response.content.decode('utf-8'), [{\"value\": \"100\", \"label\": \"Category No 99 (100)\"}])\n\n        # filtered queryset (multiple filters) fails\n        response = self.client.get(\"%s?object_id=1&app_label=%s&model_name=%s&query_string=name__icontains=99:id__gte=99\" % (reverse(\"grp_related_lookup\"), \"grappelli\", \"category\"))\n        self.assertEqual(response.status_code, 200)\n        self.assertJSONEqual(response.content.decode('utf-8'), [{\"value\": \"1\", \"label\": \"?\"}])\n\n        # filtered queryset (multiple filters) works\n        response = self.client.get(\"%s?object_id=100&app_label=%s&model_name=%s&query_string=name__icontains=99:id__gte=99\" % (reverse(\"grp_related_lookup\"), \"grappelli\", \"category\"))\n        self.assertEqual(response.status_code, 200)\n        self.assertJSONEqual(response.content.decode('utf-8'), [{\"value\": \"100\", \"label\": \"Category No 99 (100)\"}])\n\n        # custom queryset (Superuser)\n        response = self.client.get(\"%s?object_id=1&app_label=%s&model_name=%s\" % (reverse(\"grp_related_lookup\"), \"grappelli\", \"entry\"))\n        self.assertEqual(response.status_code, 200)\n>       self.assertJSONEqual(response.content.decode('utf-8'), [{\"value\": \"1\", \"label\": \"Entry Superuser\"}])\n\ngrappelli/tests/test_related.py:108: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.tox/py34-django18/lib/python3.4/site-packages/django/test/testcases.py:699: in assertJSONEqual\n    self.assertEqual(data, expected_data, msg=msg)\nE   AssertionError: Lists differ: [{'value': '1', 'label': 'Entry object'}] != [{'value': '1', 'label': 'Entry Superuser'}]\nE   \nE   First differing element 0:\nE   {'value': '1', 'label': 'Entry object'}\nE   {'value': '1', 'label': 'Entry Superuser'}\nE   \nE   - [{'label': 'Entry object', 'value': '1'}]\nE   ?                   ^^^ ^^\nE   \nE   + [{'label': 'Entry Superuser', 'value': '1'}]\nE   ?                   ^^^ ^^^^^\n```\n. Any progress? I'm keen to submit a few more PRs :smile: \n. Oh, I want to try adding a Travis CI build and tidying the tests, etc. Best to only continue with that once the Python 3 test failure is fixed :smile: \n. Any progress on review of this - let me know if there is anything I can do to help.\n. Seems like a `pip` error on your machine as opposed to anything in the codebase.. http://stackoverflow.com/questions/20688034/importerror-cannot-import-name-httpshandler-using-pip \n. Yes we should, 3.5 wasn't out when I wrote this patch :horse_racing: \n. No objections! Do you know how to create a travis file or should I write a new PR?\n. Indeed, I recommend putting them all in the tox file, and locally running e.g. `tox -e py27-django17,py34-django17`. It's what several other projects do.\n. This breaks sometimes for us sometimes, we get `OperationalError: (1116, 'Too many tables; MariaDB can only use 61 tables in a join')` when a search query with many words is used and the filters join tables\n. Ok, any testing/feedback I can do?\n. I've been looking around a bit. Django 1.10 upgraded from jQuery 2.1.4 to 2.2.3, but Grappelli 2.9.x is currently replacing that with version 2.1.4 again - shouldn't it be upgraded? \ud83d\ude04 \n\nOther than that I have spotted some other issues that seem to be in our custom javascript, but will update if any of these look like they're in Grappelli. Thx.\n. Ok, just seemed like you were in sync with 1.9 there. Also Grappelli replaces `django.jQuery` so I thought it would be following it.\n. In fact b1963500349f262160659d62b92eb8e72f88be17 copied in jQuery 2.2.3 (rather than just dropping the file to prevent static 'shadowing' of `django.contrib.admin`), but it still shadows `jquery.init.js` so the end result is that `django.jQuery` is the 2.1.4 version but `window.jQuery` is the 2.2.3. :thinking: \n. @sehmaschine bump - any idea about the jQuery changes?\n. Read my above comment, I don't think I can explain it any better\n. In grappelli 2.8.x the vendored jQuery files are just comments: https://github.com/sehmaschine/django-grappelli/blob/master/grappelli/static/admin/js/vendor/jquery/jquery.js . This claims to be to 'shadow' the file in Django, i.e. replace the one in `django.contrib.admin`. It does this because Django's staticfiles gives priority to `grappelli` as it's first in `INSTALLED_APPS` as per [the install guide](https://django-grappelli.readthedocs.io/en/latest/quickstart.html#installation). Grappelli 2.8.x then replaces `django.jQuery` with the version it ships, which is 2.1.4 - the same as what Django 1.9 ships: https://github.com/django/django/blob/stable/1.9.x/django/contrib/admin/static/admin/js/vendor/jquery/jquery.js\n\nIn 2.9.x Grappelli has removed the comments in the vendored jQuery file and instead committed jQuery 2.2.3. This is unnecessary - dropping the files (jquery.js and jquery.min.js) would suffice as Django 1.10 ships jQuery 2.2.3 in the same file, and the 'shadowing' would thus be no longer required. However 2.9.x still ships jQuery 2.1.4 and still replaces `django.jQuery` with it. So it's downgrading Django's version of jQuery, even after what appears to be attempts to upgrade to 2.2.3. This is a potential source of bugs as Django's jQuery code is only tested against 2.2.3.\n\nI'd recommend just always using Django's version of jQuery in Grappelli, especially since in 2.8.x that was what was effectively done by shipping 2.1.4, the same version that Django shipped.\n. I'm making a PR that just removes the files and uses Django's jQuery\n. That's because django-filebrowser depends on grappelli  < 2.9 as you can\nsee in the line:\n\nCollecting django-grappelli<2.9,>=2.8 (from django-filebrowser)\n\nThat's a problem with filebrowser not grappelli, report the issue there\n\nOn 15 November 2016 at 14:25, Richard Cooke notifications@github.com\nwrote:\n\n> Trying to update my Dev setup to verify Grapelli changes, I ran into a\n> really neat problem with File Browser!\n> \n> PIP made me update it to V9. Then a PIP CHECK told me File Browser was not\n> recommended for my new Grappelli version. So I told PIP to update FB -\n> thinking there would be a new version with updated requirements specs. And\n> it DOWNGRADED my Grappelli back to 2.8!!! Below is the console session.\n> \n> `(py27dj110)rcooke@developer1:~/source/GNVO/django-DEV$ pip check\n> django-filebrowser 3.7.2 has requirement django-grappelli<2.9,>=2.8, but\n> you have django-grappelli 2.9.1.\n> \n> (py27dj110)rcooke@developer1:~/source/GNVO/django-DEV$ pip show\n> django-filebrowser\n> Name: django-filebrowser\n> Version: 3.7.2\n> Summary: Media-Management with Grappelli\n> Home-page: http://django-filebrowser.readthedocs.org\n> Author: Patrick Kranzlmueller, Axel Swoboda (vonautomatisch)\n> Author-email: office@vonautomatisch.at\n> License: BSD\n> Location: /home/rcooke/.virtualenvs/py27dj110/lib/python2.7/site-packages\n> Requires: django-grappelli\n> \n> (py27dj110)rcooke@developer1:~/source/GNVO/django-DEV$ pip install\n> --upgrade django-filebrowser\n> Requirement already up-to-date: django-filebrowser in\n> /home/rcooke/.virtualenvs/py27dj110/lib/python2.7/site-packages\n> Collecting django-grappelli<2.9,>=2.8 (from django-filebrowser)\n> Downloading django_grappelli-2.8.3-py2.py3-none-any.whl (1.6MB)\n> 100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1.6MB 594kB/s\n> Installing collected packages: django-grappelli\n> Found existing installation: django-grappelli 2.9.1\n> Uninstalling django-grappelli-2.9.1:\n> Successfully uninstalled django-grappelli-2.9.1\n> Successfully installed django-grappelli-2.8.3\n> (py27dj110)rcooke@developer1:~/source/GNVO/django-DEV$\n> `\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/issues/783#issuecomment-260654333,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AA0WCa-9Z1TvuXgKVcIovXIVyjJXwHOKks5q-cDbgaJpZM4KJ-uV\n> .\n\n## \n\nAdam\n. I'm sorry I didn't realize, I didn't see the wheel on https://pypi.python.org/pypi/django-grappelli/2.8.2 so I assumed you didn't have the config. I'll turn this into an issue.\n. And there's a wheel, yay! \u2638\ufe0f \ud83c\udfa1 \ud83c\udf89 \n. As discussed in #783. I couldn't find a way of directly using Django's version _just_ in the templates since Django configures these files through form media, and with just templates we can't put javascript after the media. In an ideal world I think grappelli would have special `Admin` base classes that have a `media` property that extends what Django supplies, but that would be quite a lot for installations to change when upgrading.\n. N.B. tested by running this version of grappelli in my work app on Django 1.10. Checked that autocomplete and and M2m keys worked and that there were no errors in the javascript console in my browser (Chrome).\n. ",
    "fcasco": "I think I know where the problem is in some module we define some DashboardModule, then we import it in the dashboard module and add it in `init_with_context`.\nMy guess is that the module is the same for all the requests and so it is not changed according to the request being served.\nI will try to fix this in short and post back if I can't make it work.\n. z\n. I think I know where the problem is in some module we define some DashboardModule, then we import it in the dashboard module and add it in `init_with_context`.\nMy guess is that the module is the same for all the requests and so it is not changed according to the request being served.\nI will try to fix this in short and post back if I can't make it work.\n. z\n. ",
    "etianen": "Awesomely fast response. Ta! :D\n\nOn Tue, 8 Sep 2015 at 11:19 Patrick Kranzlmueller notifications@github.com\nwrote:\n\n> Merged #662 https://github.com/sehmaschine/django-grappelli/pull/662.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/pull/662#event-403452978\n> .\n. The django-suit people haven't even looked at my first pull request, which is nice, as it means I totally got away with the initial commit not including all the changes!\n\nSee, that's the problem with being unreasonably responsive to pull requests... it leaves no wiggle room for the contributor to mess up and sneakily fix it! :P\n. I'm afraid that I know very little about the preserve filters feature. I believe that it's part of the django core admin, and not just a Grappelli add-on? In that case, it certainly belongs in django-reversion too.\n\nI'm not entirely sure what's involved to implement it, however. I'm happy to take a pull request if any changes are needed in reversion.\n. Awesomely fast response. Ta! :D\n\nOn Tue, 8 Sep 2015 at 11:19 Patrick Kranzlmueller notifications@github.com\nwrote:\n\n> Merged #662 https://github.com/sehmaschine/django-grappelli/pull/662.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/pull/662#event-403452978\n> .\n. The django-suit people haven't even looked at my first pull request, which is nice, as it means I totally got away with the initial commit not including all the changes!\n\nSee, that's the problem with being unreasonably responsive to pull requests... it leaves no wiggle room for the contributor to mess up and sneakily fix it! :P\n. I'm afraid that I know very little about the preserve filters feature. I believe that it's part of the django core admin, and not just a Grappelli add-on? In that case, it certainly belongs in django-reversion too.\n\nI'm not entirely sure what's involved to implement it, however. I'm happy to take a pull request if any changes are needed in reversion.\n. ",
    "SebasSBM": "Due to I compiled it from source because it wasn't available in apt-get repositories. In addition, this Python 2.7.9 console lacks some features (like moving the cursor in the command prompt, or switching to the commands you used earlier with up and down arrows) that the default Python 2.7.3 included.\n\nDue to this cause, I consider plausible that some functions available in 2.7.3 became deprecated in 2.7.9, or work in a different way, or something else with the potential to \"break\" the code, to say something.\n\nNow I think 2.7.9 is not the problem at all. In any case, I'm not sure.\n. I've been looking at the function switch_user_dropdown() itself, and it is made to return empty string if SWITCH_USER is False. I don't know enough details to be sure about if this has been made on purpose or not, but I think the test is probably giving a \"fake negative\" - in other words, assertion fails even if it is working as it has to work?\n\nI hope this helps.\n\nPD: \n- SWITCH_USER comes from grappelli.settings\n- Keep in mind: in my case, I am only using one single superuser. Maybe the test didn't expect such situation?\n. After fixing incorrect configurations of STATIC_ROOT, MEDIA_ROOT and STATICFILES_DIRS in `myproject/settings.py`, those 3 errors has dissappeared. Instead, this error appeared in the test:\n\n```\n======================================================================\nFAIL: test_autocomplete_lookup (grappelli.tests.test_related.RelatedTests)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/venvs/mdrcms/lib/python2.7/site-packages/grappelli/tests/test_related.py\", line 198, in test_autocomplete_lookup\n    self.assertEqual(response.content, json.dumps([{\"value\": None, \"label\": \"0 results\"}]))\nAssertionError: '[{\"value\": null, \"label\": \"0 resultados\"}]' != '[{\"value\": null, \"label\": \"0 results\"}]'\n```\n\nThis new error is probably caused by `LANGUAGE_CODE = 'es-es'` in `myproject/settings.py` (the only difference between the expected result and the actual result is the word `resultados` which is results in Spanish). So, this is a minor failure of the test itself that makes assert statement to fail just because the language is different...\n\n**MY OPINION:**\nDue to the original cause of the opening of this issue has dissappeared, and seemed to be caused by my own misconfiguration, maybe this issue should be closed...\n\n@sehmaschine Looking back into how messy my configuration was (see issue #666) now I feel guilty for the waste of time this probably was for you...\n. It looks like `python manage.py collectstatic` didn't collect `grappelli/static/admin` during installation/setup (but it did collect `grappelli/static/grappelli`... see <a target=\"_blank\" href=\"https://django-grappelli.readthedocs.org/en/2.7.1/quickstart.html#setup\">the Quickstart Guide setup section</a>). I tried to copy/paste the folder `grappelli/static/admin` into my project's static directory, but the bug didn't fix... then, I tried running `python manage.py collectstatic` again and clearing my browser's cache, but it still doesn't work...\n\nEDIT: It looks like `grappelli/static/admin/js/actions.js` is directly implied in the process of controlling the checkboxes' state. I hadn't time to figure out the whole picture of how it works yet, but I have noticed something strange: for some reason, `grappelli/static/admin/js/actions.js` and `grappelli/static/admin/js/actions.min.js` have the same code (in other words, `diff actions.js actions.min.js` returns nothing).\n\nEDIT2: From this point, I can see `actions.js` is loaded into the templates that control DB's registers from admin panel (through Firebug). So, it looks quite evident the JS code implied on controlling selected rows got \"broken\" -at least in my environment. \n. Well, I'm not sure at all. Right now I was trying to debug JS with Firebug. The following log is shown:\n\n```\nTypeError: $(...).actions is not a function\n    $(\"tr input.action-select\").actions();\n```\n\nI am trying to track this hardcoded JS function through the templates. It looks like it is in `templates/admin/change_list.html` line20... also in change_list_filter_sidebar.html line20\n. I made copy-paste from `actions.js` from Firebug to a dumb file, to compare them with `diff`. Identations are different (they come as tabs from Firebug) and this is interfering with the result. I'll replace tabs for spaces with vim to see if I can obtain a better comparison...\n\nEDIT: they seem to have relevant differences. So it seems the loaded actions.js is not the correct one...\n. Probably... but it is strange: the rest of grappelli's JS seem to be correct (collapsables work). I will check once again my `settings.py` file just in case, but, in theory, static files load well...\n\nMaybe I have overlooked something... So, I will take a look to the <a target=\"_blank\" href=\"https://django-grappelli.readthedocs.org/en/2.7.1/customization.html\">docs</a> again...\n. It is some kind of conflict between `django/contrib/admin/static/admin/js/actions.js` and the one coming from Grappelli. In any case, I remember that when I installed Grappelli following <a target=\"_blank\" href=\"https://django-grappelli.readthedocs.org/en/2.7.1/quickstart.html\">the Quickstart Guide</a> and run collectstatic, suddenly a folder called \"grappelli\" appeared in my static directory, but **the \"admin\" directory didn't**. I am not sure if this is correct behaviour or not...\n\nIn any case I don't know how Grappelli (or some other external app) is supposed to deal with static conflicts like this one, when it wants to override the default admin static files. I just know django uses \"the first file it finds\". `python manage.py findstatic actions.js` returns \"No match found\". I am stuck here...\n\nI will search in Django docs to see if there is a clean way to deal with this kind of overriding...\n. In my case, the one included was that one from django, instead of the one from the Grappelli module. But I finally got an idea to resolve it: just adding this in `myproject/settings.py`:\n\n```\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n)\n```\n\nNow it works as it should, and the bug mentioned in this issue dissappeared. As @sehmaschine said, it was a Django config issue...\n\nThis way Django will lookup in the **external** apps first. However, this doesn't seem clean enough as a general solution (it looks a little hacky, it would alter the default behaviour of Django). I would be making a fork of `grappelli/settings.py` to include this setting otherwise...\n\nEDIT: As a last test, I removed the mentioned `admin` folder that I copied before in `myproject/static`. Everything keeps working well, as it should\n. I discovered that setting by a casuality debugging the project I'm working on. Not all the global settings are included in a templateproject/settings.py, but any of the ones existing at <a target=\"_blank\" href=\"https://github.com/SebasSBM/django/blob/master/django/conf/global_settings.py\">django.conf.global_settings</a> can be overriden from your own settings.py file.\n. @dhbahr I misunderstood you. I'm sorry.\n\nYou have a point. For some reason, this only happened to me.\n\nI installed other external apps (filebrowser, modeltranslation) and one of the things I tried a few days ago was: putting grappelli on top of INSTALLED_APPS tuple, just in case the others were interfering... But no, they weren't. I have no idea how could this happen.\n\nFor your information, I am doing the tests on a Virtual Machine and I took some snaphots, so, I can come back to an earlier state, in case some additional research is needed...\n\nEDIT: I've looked up to issue <a target=\"_blank\" href=\"https://github.com/sehmaschine/django-grappelli/issues/667\">#667</a>, so now I am aware you have (or had) a similar problem.\n. @dhbahr When you say \"I didn't need to override it\", do you mean you have resolved your issue without that setting?\n. @dhbahr Other sentence that I misunderstood... my apologies for the inconvenience.\n. @dhbahr Thinking about it, how many times did I become crazy looking up for something that wasn't working, and then \"oops, I forgot to clear cache\"... xD. Best of lucks, as you said; it earns a lot of headaches.\n\n@sehmaschine about this issue itself, I can go backwards to a previous snapshot, as I said before, for researching's sake. However, I am clueless about which direction to take... except for that I have noticed reviewing my notes that I installed django-filebrowser==3.6.1 before django-grappelli==2.7.1. I will give it a try to install grappelli first, in a previous snapshot, to discard (or confirm) that django-filebrowser somehow interfered in the process.\n. @sehmaschine Well, then better I don't waste my time with filebrowser's idea...\n\nI have thought about the dependencies I installed **after** grappelli - but I don't think they are interfering, due to grappelli is on top of INSTALLED_APPS:\n\n```\n* Pillow==2.9.0\n* django-modeltranslation==0.10.1\n* django-tinymce==2.0.5\n```\n\nMaybe it is a Django issue, due to the problems that its STATICFILES system has. I don't know Django - neither the Grappelli app - deeply enough to be sure about this tough...\n\nCLARIFICATION: I made the tests over a new Django==1.8.3 installation in a VM, not an update over a previous Django version. So, in my case, this is discarded too\n\nCLARIFICATION2: My \"hacky\" solution forces Django to lookup in external apps before looking in Django internal apps. It worked, but it seems an ugly solution anyway...\n. @sehmaschine By \"internal apps\", I meant those ones that were included in the Django project itself -in other words, the apps that came with Django package-; and by \"external apps\" I meant those ones that didn't come with django by default. Might it be incorrect to call them this way?\n\nIn any case, the \"hacky solution\" (for the record: I call it like this on purpose because it was an ugly solution) is not necessary anymore. After fixing the mess I had in STATIC_ROOT, MEDIA_ROOT and STATICFILES_DIRS, **the ugly setting is not necessary anymore.**\n\nWhat was said in <a target=\"_blank\" href=\"https://github.com/sehmaschine/django-filebrowser/issues/286#issuecomment-143185855\">the issue I opened in filebrowser</a> is related with this issue too. Same for <a target=\"_blank\" href=\"https://github.com/sehmaschine/django-grappelli/issues/665\">issue #665</a>. So, due to **this issue was caused by my own configuration errors**, I will close it inmediately. @sehmaschine Please feel free to reopen it if you think something else should be added for the community's sake. I just close it because I think this issue has been clarified.\n\n**THE MESS THAT CAUSED THIS**:\nThis was my project's `settings.py` (relevant settings for the issue) before opening this issue :-$:\n\n```\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n# PROJECT_DIR equals myproject/myproject\nPROJECT_DIR = os.path.dirname(os.path.abspath(__file__))\n\n#Here are the messy settings that caused this issue\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static/')\nMEDIA_ROOT = os.path.join(BASE_DIR, 'myproject/') # <- Terrible mistake\n\n# These two ones weren't necessary at all...\nFILEBROWSER_DIRECTORY = \"static/uploads/\"\nFILEBROWSER_VERSIONS_BASEDIR = \"static/_versions\"\n\n# Desperate try due to \"why the heck STATIC_ROOT files are not processed?\"\nSTATICFILES_DIRS = (\n       os.path.join(PROJECT_DIR, \"static\"),\n)\n```\n\nBefore opening this issue, I didn't understood correctly the difference between STATIC_\\* and MEDIA_\\* settings, not even the real purpose of STATIC_ROOT and STATICFILES_DIRS. So, for the sake of clarification, I will expose my fatal errors configuring my Django project:\n\n**WHAT I THOUGHT I KNEW BEFORE:**\nSTATIC_ROOT = The folder where all static files must be (wrong!)\nMEDIA_ROOT = Similar to STATIC_ROOT? Doesn't seem to be necessary (completely wrong!)\nSTATICFILES_DIRS = Additional directories in which detect static files (definetely wrong!)\n\nAfter finding <a target=\"_blank\" href=\"https://docs.djangoproject.com/en/1.8/ref/settings/#static-root\">this part of Django docs</a> I noticed how terribly wrong I was misunderstanding the way staticfiles actually work in Django.\n\n**WHAT I \"KNOW\" NOW:**\nSTATIC_ROOT = The folder where all static files in the paths contained in STATICFILES_DIRS and other Django apps will be collected into.\nMEDIA_ROOT = All \"publicly uploaded\" files must be included here! So, `uploads` and `_versions` directories must be here\nSTATICFILES_DIRS = Tuple of directories from which `python manage.py collectstatic` will copy static files into STATIC_ROOT folder.\n. Due to I compiled it from source because it wasn't available in apt-get repositories. In addition, this Python 2.7.9 console lacks some features (like moving the cursor in the command prompt, or switching to the commands you used earlier with up and down arrows) that the default Python 2.7.3 included.\n\nDue to this cause, I consider plausible that some functions available in 2.7.3 became deprecated in 2.7.9, or work in a different way, or something else with the potential to \"break\" the code, to say something.\n\nNow I think 2.7.9 is not the problem at all. In any case, I'm not sure.\n. I've been looking at the function switch_user_dropdown() itself, and it is made to return empty string if SWITCH_USER is False. I don't know enough details to be sure about if this has been made on purpose or not, but I think the test is probably giving a \"fake negative\" - in other words, assertion fails even if it is working as it has to work?\n\nI hope this helps.\n\nPD: \n- SWITCH_USER comes from grappelli.settings\n- Keep in mind: in my case, I am only using one single superuser. Maybe the test didn't expect such situation?\n. After fixing incorrect configurations of STATIC_ROOT, MEDIA_ROOT and STATICFILES_DIRS in `myproject/settings.py`, those 3 errors has dissappeared. Instead, this error appeared in the test:\n\n```\n======================================================================\nFAIL: test_autocomplete_lookup (grappelli.tests.test_related.RelatedTests)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/venvs/mdrcms/lib/python2.7/site-packages/grappelli/tests/test_related.py\", line 198, in test_autocomplete_lookup\n    self.assertEqual(response.content, json.dumps([{\"value\": None, \"label\": \"0 results\"}]))\nAssertionError: '[{\"value\": null, \"label\": \"0 resultados\"}]' != '[{\"value\": null, \"label\": \"0 results\"}]'\n```\n\nThis new error is probably caused by `LANGUAGE_CODE = 'es-es'` in `myproject/settings.py` (the only difference between the expected result and the actual result is the word `resultados` which is results in Spanish). So, this is a minor failure of the test itself that makes assert statement to fail just because the language is different...\n\n**MY OPINION:**\nDue to the original cause of the opening of this issue has dissappeared, and seemed to be caused by my own misconfiguration, maybe this issue should be closed...\n\n@sehmaschine Looking back into how messy my configuration was (see issue #666) now I feel guilty for the waste of time this probably was for you...\n. It looks like `python manage.py collectstatic` didn't collect `grappelli/static/admin` during installation/setup (but it did collect `grappelli/static/grappelli`... see <a target=\"_blank\" href=\"https://django-grappelli.readthedocs.org/en/2.7.1/quickstart.html#setup\">the Quickstart Guide setup section</a>). I tried to copy/paste the folder `grappelli/static/admin` into my project's static directory, but the bug didn't fix... then, I tried running `python manage.py collectstatic` again and clearing my browser's cache, but it still doesn't work...\n\nEDIT: It looks like `grappelli/static/admin/js/actions.js` is directly implied in the process of controlling the checkboxes' state. I hadn't time to figure out the whole picture of how it works yet, but I have noticed something strange: for some reason, `grappelli/static/admin/js/actions.js` and `grappelli/static/admin/js/actions.min.js` have the same code (in other words, `diff actions.js actions.min.js` returns nothing).\n\nEDIT2: From this point, I can see `actions.js` is loaded into the templates that control DB's registers from admin panel (through Firebug). So, it looks quite evident the JS code implied on controlling selected rows got \"broken\" -at least in my environment. \n. Well, I'm not sure at all. Right now I was trying to debug JS with Firebug. The following log is shown:\n\n```\nTypeError: $(...).actions is not a function\n    $(\"tr input.action-select\").actions();\n```\n\nI am trying to track this hardcoded JS function through the templates. It looks like it is in `templates/admin/change_list.html` line20... also in change_list_filter_sidebar.html line20\n. I made copy-paste from `actions.js` from Firebug to a dumb file, to compare them with `diff`. Identations are different (they come as tabs from Firebug) and this is interfering with the result. I'll replace tabs for spaces with vim to see if I can obtain a better comparison...\n\nEDIT: they seem to have relevant differences. So it seems the loaded actions.js is not the correct one...\n. Probably... but it is strange: the rest of grappelli's JS seem to be correct (collapsables work). I will check once again my `settings.py` file just in case, but, in theory, static files load well...\n\nMaybe I have overlooked something... So, I will take a look to the <a target=\"_blank\" href=\"https://django-grappelli.readthedocs.org/en/2.7.1/customization.html\">docs</a> again...\n. It is some kind of conflict between `django/contrib/admin/static/admin/js/actions.js` and the one coming from Grappelli. In any case, I remember that when I installed Grappelli following <a target=\"_blank\" href=\"https://django-grappelli.readthedocs.org/en/2.7.1/quickstart.html\">the Quickstart Guide</a> and run collectstatic, suddenly a folder called \"grappelli\" appeared in my static directory, but **the \"admin\" directory didn't**. I am not sure if this is correct behaviour or not...\n\nIn any case I don't know how Grappelli (or some other external app) is supposed to deal with static conflicts like this one, when it wants to override the default admin static files. I just know django uses \"the first file it finds\". `python manage.py findstatic actions.js` returns \"No match found\". I am stuck here...\n\nI will search in Django docs to see if there is a clean way to deal with this kind of overriding...\n. In my case, the one included was that one from django, instead of the one from the Grappelli module. But I finally got an idea to resolve it: just adding this in `myproject/settings.py`:\n\n```\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n)\n```\n\nNow it works as it should, and the bug mentioned in this issue dissappeared. As @sehmaschine said, it was a Django config issue...\n\nThis way Django will lookup in the **external** apps first. However, this doesn't seem clean enough as a general solution (it looks a little hacky, it would alter the default behaviour of Django). I would be making a fork of `grappelli/settings.py` to include this setting otherwise...\n\nEDIT: As a last test, I removed the mentioned `admin` folder that I copied before in `myproject/static`. Everything keeps working well, as it should\n. I discovered that setting by a casuality debugging the project I'm working on. Not all the global settings are included in a templateproject/settings.py, but any of the ones existing at <a target=\"_blank\" href=\"https://github.com/SebasSBM/django/blob/master/django/conf/global_settings.py\">django.conf.global_settings</a> can be overriden from your own settings.py file.\n. @dhbahr I misunderstood you. I'm sorry.\n\nYou have a point. For some reason, this only happened to me.\n\nI installed other external apps (filebrowser, modeltranslation) and one of the things I tried a few days ago was: putting grappelli on top of INSTALLED_APPS tuple, just in case the others were interfering... But no, they weren't. I have no idea how could this happen.\n\nFor your information, I am doing the tests on a Virtual Machine and I took some snaphots, so, I can come back to an earlier state, in case some additional research is needed...\n\nEDIT: I've looked up to issue <a target=\"_blank\" href=\"https://github.com/sehmaschine/django-grappelli/issues/667\">#667</a>, so now I am aware you have (or had) a similar problem.\n. @dhbahr When you say \"I didn't need to override it\", do you mean you have resolved your issue without that setting?\n. @dhbahr Other sentence that I misunderstood... my apologies for the inconvenience.\n. @dhbahr Thinking about it, how many times did I become crazy looking up for something that wasn't working, and then \"oops, I forgot to clear cache\"... xD. Best of lucks, as you said; it earns a lot of headaches.\n\n@sehmaschine about this issue itself, I can go backwards to a previous snapshot, as I said before, for researching's sake. However, I am clueless about which direction to take... except for that I have noticed reviewing my notes that I installed django-filebrowser==3.6.1 before django-grappelli==2.7.1. I will give it a try to install grappelli first, in a previous snapshot, to discard (or confirm) that django-filebrowser somehow interfered in the process.\n. @sehmaschine Well, then better I don't waste my time with filebrowser's idea...\n\nI have thought about the dependencies I installed **after** grappelli - but I don't think they are interfering, due to grappelli is on top of INSTALLED_APPS:\n\n```\n* Pillow==2.9.0\n* django-modeltranslation==0.10.1\n* django-tinymce==2.0.5\n```\n\nMaybe it is a Django issue, due to the problems that its STATICFILES system has. I don't know Django - neither the Grappelli app - deeply enough to be sure about this tough...\n\nCLARIFICATION: I made the tests over a new Django==1.8.3 installation in a VM, not an update over a previous Django version. So, in my case, this is discarded too\n\nCLARIFICATION2: My \"hacky\" solution forces Django to lookup in external apps before looking in Django internal apps. It worked, but it seems an ugly solution anyway...\n. @sehmaschine By \"internal apps\", I meant those ones that were included in the Django project itself -in other words, the apps that came with Django package-; and by \"external apps\" I meant those ones that didn't come with django by default. Might it be incorrect to call them this way?\n\nIn any case, the \"hacky solution\" (for the record: I call it like this on purpose because it was an ugly solution) is not necessary anymore. After fixing the mess I had in STATIC_ROOT, MEDIA_ROOT and STATICFILES_DIRS, **the ugly setting is not necessary anymore.**\n\nWhat was said in <a target=\"_blank\" href=\"https://github.com/sehmaschine/django-filebrowser/issues/286#issuecomment-143185855\">the issue I opened in filebrowser</a> is related with this issue too. Same for <a target=\"_blank\" href=\"https://github.com/sehmaschine/django-grappelli/issues/665\">issue #665</a>. So, due to **this issue was caused by my own configuration errors**, I will close it inmediately. @sehmaschine Please feel free to reopen it if you think something else should be added for the community's sake. I just close it because I think this issue has been clarified.\n\n**THE MESS THAT CAUSED THIS**:\nThis was my project's `settings.py` (relevant settings for the issue) before opening this issue :-$:\n\n```\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n# PROJECT_DIR equals myproject/myproject\nPROJECT_DIR = os.path.dirname(os.path.abspath(__file__))\n\n#Here are the messy settings that caused this issue\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static/')\nMEDIA_ROOT = os.path.join(BASE_DIR, 'myproject/') # <- Terrible mistake\n\n# These two ones weren't necessary at all...\nFILEBROWSER_DIRECTORY = \"static/uploads/\"\nFILEBROWSER_VERSIONS_BASEDIR = \"static/_versions\"\n\n# Desperate try due to \"why the heck STATIC_ROOT files are not processed?\"\nSTATICFILES_DIRS = (\n       os.path.join(PROJECT_DIR, \"static\"),\n)\n```\n\nBefore opening this issue, I didn't understood correctly the difference between STATIC_\\* and MEDIA_\\* settings, not even the real purpose of STATIC_ROOT and STATICFILES_DIRS. So, for the sake of clarification, I will expose my fatal errors configuring my Django project:\n\n**WHAT I THOUGHT I KNEW BEFORE:**\nSTATIC_ROOT = The folder where all static files must be (wrong!)\nMEDIA_ROOT = Similar to STATIC_ROOT? Doesn't seem to be necessary (completely wrong!)\nSTATICFILES_DIRS = Additional directories in which detect static files (definetely wrong!)\n\nAfter finding <a target=\"_blank\" href=\"https://docs.djangoproject.com/en/1.8/ref/settings/#static-root\">this part of Django docs</a> I noticed how terribly wrong I was misunderstanding the way staticfiles actually work in Django.\n\n**WHAT I \"KNOW\" NOW:**\nSTATIC_ROOT = The folder where all static files in the paths contained in STATICFILES_DIRS and other Django apps will be collected into.\nMEDIA_ROOT = All \"publicly uploaded\" files must be included here! So, `uploads` and `_versions` directories must be here\nSTATICFILES_DIRS = Tuple of directories from which `python manage.py collectstatic` will copy static files into STATIC_ROOT folder.\n. ",
    "dhbahr": "@sehmaschine sorry for duplicating the issue, my bad\n@SebasSBM have you found any reason for this? \n\nAs I see on my debugger, the static/admin/js/actions.js is included. I have no actions.js from Grappelli though.\n\nWhat I am getting is an error \n\n```\nUncaught TypeError: $(...).actions is not a function\n```\n\non line 63 of the html document\n\n``` javascript\n    $(document).ready(function() {\n        $(\"tr input.action-select\").actions();\n    });\n```\n. Well.. bless me if you want to. I did a second `collectstatic` (which by the way said nothing needed to be done), hitted Ctrl+R on my browser et voil\u00e1: actions.js is working just fine ... misterious ways\n. @sehmaschine it does shows up first (Grappelli's action.js that is). I'm thinking it might have been something with the browser cache solved when I `Ctrl+R`ed.\n@SebasSBM as for me, I have no definition of the `STATICFILES_FINDERS` on my `settings.py`\n. @SebasSBM I'm aware, I just wanted to point out that I didn't need to override it.\n. @SebasSBM Yes, as I said 5 comments earlier, seems to me my issue was really browser cache related, after hitting `Ctrl+R` it went away.\n. @SebasSBM nevermind, best of lucks\n. @sehmaschine sorry for duplicating the issue, my bad\n@SebasSBM have you found any reason for this? \n\nAs I see on my debugger, the static/admin/js/actions.js is included. I have no actions.js from Grappelli though.\n\nWhat I am getting is an error \n\n```\nUncaught TypeError: $(...).actions is not a function\n```\n\non line 63 of the html document\n\n``` javascript\n    $(document).ready(function() {\n        $(\"tr input.action-select\").actions();\n    });\n```\n. Well.. bless me if you want to. I did a second `collectstatic` (which by the way said nothing needed to be done), hitted Ctrl+R on my browser et voil\u00e1: actions.js is working just fine ... misterious ways\n. @sehmaschine it does shows up first (Grappelli's action.js that is). I'm thinking it might have been something with the browser cache solved when I `Ctrl+R`ed.\n@SebasSBM as for me, I have no definition of the `STATICFILES_FINDERS` on my `settings.py`\n. @SebasSBM I'm aware, I just wanted to point out that I didn't need to override it.\n. @SebasSBM Yes, as I said 5 comments earlier, seems to me my issue was really browser cache related, after hitting `Ctrl+R` it went away.\n. @SebasSBM nevermind, best of lucks\n. ",
    "trevoriancox": "+1 Proposal 2. I don't think there are any permission concerns here.\n\nI like the &#9776; icon that was associated with the Change link, so I have added it to the model name link:\n\n```\n.grp-dashboard-module .grp-row a {\n    /* copied formatting from li.grp-change-link: */\n    background: url('../images/icons-small-s7d28d7943b.png') no-repeat;\n    background-position: 0 -3753px;\n    padding-left: 18px;\n}\n```\n\nThis change and others are in my fork:  \n\n> https://github.com/trevoriancox/django-grappelli\n>   Increase all text sizes 1-2px and use bold links.\n>   Make all dashboard links same size text.\n>   Dashboard header using link colour instead of white.\n>   Remove \"Change\", \"Add\" text from dashboard model list for cleaner design.\n>   Show grp-change-link's hamburger icon next to model name link on dashboard.\n>   Change media=\"screen\" to media=\"all\" to support printing.\n. Sorry, yup. Tho imho django's raw_id_fields are useless w/o grappelli. :)\n. +1 Proposal 2. I don't think there are any permission concerns here.\n\nI like the &#9776; icon that was associated with the Change link, so I have added it to the model name link:\n\n```\n.grp-dashboard-module .grp-row a {\n    /* copied formatting from li.grp-change-link: */\n    background: url('../images/icons-small-s7d28d7943b.png') no-repeat;\n    background-position: 0 -3753px;\n    padding-left: 18px;\n}\n```\n\nThis change and others are in my fork:  \n\n> https://github.com/trevoriancox/django-grappelli\n>   Increase all text sizes 1-2px and use bold links.\n>   Make all dashboard links same size text.\n>   Dashboard header using link colour instead of white.\n>   Remove \"Change\", \"Add\" text from dashboard model list for cleaner design.\n>   Show grp-change-link's hamburger icon next to model name link on dashboard.\n>   Change media=\"screen\" to media=\"all\" to support printing.\n. Sorry, yup. Tho imho django's raw_id_fields are useless w/o grappelli. :)\n. ",
    "theeluwin": "The problem is when there are too many items to show with tabular inline but.. I think it won't be an easy task. I'll try some more research myself. Sorry for bothering.\n. The problem is when there are too many items to show with tabular inline but.. I think it won't be an easy task. I'll try some more research myself. Sorry for bothering.\n. ",
    "vinnyrose": "Just to be clear this was fixed with PR: #676 \n. Just to be clear this was fixed with PR: #676 \n. ",
    "wjakob": "Agreed -- it would be fantastic to have Django 1.9 support now that it's the stable release.\n. I've been using master from this repository in the meantime, and it works perfectly.\n. Agreed -- it would be fantastic to have Django 1.9 support now that it's the stable release.\n. I've been using master from this repository in the meantime, and it works perfectly.\n. ",
    "ydaniv": "Hard to say. All was working constantly until upgrade. Getting this issue on multiple change forms, perhaps everywhere there are inlines with any `unique_together` rules set on their related model.\n\nThe sent requests are practically identical, so probably not an issue in the form's data.\n\nAlso, I'm using django-extensions' PostgreSQLUUIDField for id's (latest version).\n\nAny idea?\n. :+1: \n. Could be. @sehmaschine  if there's a problem duplicating this plz let me know if I can help. Anyhow, I've added the lines in the code where the deprecated property is used, so it should be as simple as replacing it.\n. Hard to say. All was working constantly until upgrade. Getting this issue on multiple change forms, perhaps everywhere there are inlines with any `unique_together` rules set on their related model.\n\nThe sent requests are practically identical, so probably not an issue in the form's data.\n\nAlso, I'm using django-extensions' PostgreSQLUUIDField for id's (latest version).\n\nAny idea?\n. :+1: \n. Could be. @sehmaschine  if there's a problem duplicating this plz let me know if I can help. Anyhow, I've added the lines in the code where the deprecated property is used, so it should be as simple as replacing it.\n. ",
    "hhio618": "Hi @sehmaschine thank u for response\nI got this issue on a multi site dashboard\n\n``` python\ndef get_admin_site(context=None, request=None):\n    dashboard_cls = getattr(\n        settings,\n        'GRAPPELLI_INDEX_DASHBOARD',\n        'grappelli.dashboard.dashboards.DefaultIndexDashboard'\n    )\n\n    if isinstance(dashboard_cls, dict):     #-----> True for multi site dashboards\n        curr_url = context.get('request').path #-----> exception happen here for multi site dashboard\n        for key in dashboard_cls:\n            mod, inst = key.rsplit('.', 1)\n            mod = import_module(mod)\n            admin_site = getattr(mod, inst)\n            admin_url = reverse('%s:index' % admin_site.name)\n            if curr_url.startswith(admin_url):\n                return admin_site\n    else:\n        return admin.site\n    raise ValueError('Admin site matching \"%s\" not found' % dashboard_cls)\n```\n\nthis is my dashboard class\n\n``` python\nclass CustomIndexDashboard(Dashboard):\n    \"\"\"\n    Custom index dashboard for www.\n    \"\"\"\n\n    class Media:\n        js = [\n            settings.STATIC_URL + 'js/jquery.min.js',\n            settings.STATIC_URL + 'js/highstock.js',\n            settings.STATIC_URL + 'js/exporting.js',\n            settings.STATIC_URL + 'js/gray.js',\n        ]\n        css = {\n            'all': (\n                settings.STATIC_URL + 'css/my-style.css',\n            ),\n        }\n\n    columns = 3\n\n    def init_with_context(self, context):\n        # site_name = get_admin_site_name(context)\n        # append a group for \"Administration\" & \"Applications\"\n        self.children.append(modules.Group(\n            _('Group: Administration & Applications'),\n            column=1,\n            collapsible=True,\n            children=[\n                modules.AppList(\n                    _('Administration'),\n                    column=1,\n                    collapsible=False,\n                    models=('django.contrib.*', 'tastypie_user.models.MyUser'),\n                ),\n                modules.AppList(\n                    _('Applications'),\n                    column=1,\n                    css_classes=('collapse closed',),\n                    exclude=('django.contrib.*',),\n                )\n            ]\n        ))\n\n\n\n        # append an app list module for \"Applications\"\n        # self.children.append(modules.AppList(\n        #     _('AppList: Applications'),\n        #     collapsible=True,\n        #     column=1,\n        #     css_classes=('collapse closed',),\n        #     exclude=('django.contrib.*',),\n        # ))\n        #\n        # append an app list module for \"Administration\"\n        # self.children.append(modules.ModelList(\n        #     _('ModelList: Administration'),\n        #     column=1,\n        #     collapsible=False,\n        #     models=('django.contrib.*','tastypie_user.UserProfile', ),\n        # ))\n        #\n        # append another link list module for \"support\".\n        self.children.append(modules.LinkList(\n            _('Media Management'),\n            column=2,\n            children=[\n                {\n                    'title': _('FileBrowser'),\n                    'url': '/admin/filebrowser/browse/',\n                    'external': False,\n                },\n            ]\n        ))\n\n        # append another link list module for \"support\".\n        self.children.append(modules.LinkList(\n            _('Support'),\n            column=2,\n            children=[\n                {\n                    'title': _('Django Documentation'),\n                    'url': 'http://docs.djangoproject.com/',\n                    'external': True,\n                },\n                {\n                    'title': _('Grappelli Documentation'),\n                    'url': 'http://packages.python.org/django-grappelli/',\n                    'external': True,\n                },\n                {\n                    'title': _('Grappelli Google-Code'),\n                    'url': 'http://code.google.com/p/django-grappelli/',\n                    'external': True,\n                },\n            ]\n        ))\n\n        # append a feed module\n        self.children.append(modules.Feed(\n            _('Latest Django News'),\n            column=2,\n            feed_url='http://www.djangoproject.com/rss/weblog/',\n            limit=5\n        ))\n\n        # append a recent actions module\n        self.children.append(modules.RecentActions(\n            _('Recent Actions'),\n            limit=5,\n            collapsible=False,\n            column=3,\n        ))\n```\n\nnow i use the following patch to get dashboard to working\n\n``` python\n\ndef patched_get_admin_site(context=None, request=None):\n    dashboard_cls = getattr(\n        settings,\n        'GRAPPELLI_INDEX_DASHBOARD',\n        'grappelli.dashboard.dashboards.DefaultIndexDashboard'\n    )\n\n    if isinstance(dashboard_cls, dict):\n        if context:\n            curr_url = context.get('request').path\n        elif request:\n            curr_url = request.path\n        else:\n            raise\n        for key in dashboard_cls:\n            mod, inst = key.rsplit('.', 1)\n            mod = import_module(mod)\n            admin_site = getattr(mod, inst)\n            admin_url = reverse('%s:index' % admin_site.name)\n            if curr_url.startswith(admin_url):\n                return admin_site\n    else:\n        return admin.site\n    raise ValueError('Admin site matching \"%s\" not found' % dashboard_cls)\n\nfrom grappelli.dashboard import utils\nutils.get_admin_site = patched_get_admin_site\n```\n. Hi @sehmaschine thank u for response\nI got this issue on a multi site dashboard\n\n``` python\ndef get_admin_site(context=None, request=None):\n    dashboard_cls = getattr(\n        settings,\n        'GRAPPELLI_INDEX_DASHBOARD',\n        'grappelli.dashboard.dashboards.DefaultIndexDashboard'\n    )\n\n    if isinstance(dashboard_cls, dict):     #-----> True for multi site dashboards\n        curr_url = context.get('request').path #-----> exception happen here for multi site dashboard\n        for key in dashboard_cls:\n            mod, inst = key.rsplit('.', 1)\n            mod = import_module(mod)\n            admin_site = getattr(mod, inst)\n            admin_url = reverse('%s:index' % admin_site.name)\n            if curr_url.startswith(admin_url):\n                return admin_site\n    else:\n        return admin.site\n    raise ValueError('Admin site matching \"%s\" not found' % dashboard_cls)\n```\n\nthis is my dashboard class\n\n``` python\nclass CustomIndexDashboard(Dashboard):\n    \"\"\"\n    Custom index dashboard for www.\n    \"\"\"\n\n    class Media:\n        js = [\n            settings.STATIC_URL + 'js/jquery.min.js',\n            settings.STATIC_URL + 'js/highstock.js',\n            settings.STATIC_URL + 'js/exporting.js',\n            settings.STATIC_URL + 'js/gray.js',\n        ]\n        css = {\n            'all': (\n                settings.STATIC_URL + 'css/my-style.css',\n            ),\n        }\n\n    columns = 3\n\n    def init_with_context(self, context):\n        # site_name = get_admin_site_name(context)\n        # append a group for \"Administration\" & \"Applications\"\n        self.children.append(modules.Group(\n            _('Group: Administration & Applications'),\n            column=1,\n            collapsible=True,\n            children=[\n                modules.AppList(\n                    _('Administration'),\n                    column=1,\n                    collapsible=False,\n                    models=('django.contrib.*', 'tastypie_user.models.MyUser'),\n                ),\n                modules.AppList(\n                    _('Applications'),\n                    column=1,\n                    css_classes=('collapse closed',),\n                    exclude=('django.contrib.*',),\n                )\n            ]\n        ))\n\n\n\n        # append an app list module for \"Applications\"\n        # self.children.append(modules.AppList(\n        #     _('AppList: Applications'),\n        #     collapsible=True,\n        #     column=1,\n        #     css_classes=('collapse closed',),\n        #     exclude=('django.contrib.*',),\n        # ))\n        #\n        # append an app list module for \"Administration\"\n        # self.children.append(modules.ModelList(\n        #     _('ModelList: Administration'),\n        #     column=1,\n        #     collapsible=False,\n        #     models=('django.contrib.*','tastypie_user.UserProfile', ),\n        # ))\n        #\n        # append another link list module for \"support\".\n        self.children.append(modules.LinkList(\n            _('Media Management'),\n            column=2,\n            children=[\n                {\n                    'title': _('FileBrowser'),\n                    'url': '/admin/filebrowser/browse/',\n                    'external': False,\n                },\n            ]\n        ))\n\n        # append another link list module for \"support\".\n        self.children.append(modules.LinkList(\n            _('Support'),\n            column=2,\n            children=[\n                {\n                    'title': _('Django Documentation'),\n                    'url': 'http://docs.djangoproject.com/',\n                    'external': True,\n                },\n                {\n                    'title': _('Grappelli Documentation'),\n                    'url': 'http://packages.python.org/django-grappelli/',\n                    'external': True,\n                },\n                {\n                    'title': _('Grappelli Google-Code'),\n                    'url': 'http://code.google.com/p/django-grappelli/',\n                    'external': True,\n                },\n            ]\n        ))\n\n        # append a feed module\n        self.children.append(modules.Feed(\n            _('Latest Django News'),\n            column=2,\n            feed_url='http://www.djangoproject.com/rss/weblog/',\n            limit=5\n        ))\n\n        # append a recent actions module\n        self.children.append(modules.RecentActions(\n            _('Recent Actions'),\n            limit=5,\n            collapsible=False,\n            column=3,\n        ))\n```\n\nnow i use the following patch to get dashboard to working\n\n``` python\n\ndef patched_get_admin_site(context=None, request=None):\n    dashboard_cls = getattr(\n        settings,\n        'GRAPPELLI_INDEX_DASHBOARD',\n        'grappelli.dashboard.dashboards.DefaultIndexDashboard'\n    )\n\n    if isinstance(dashboard_cls, dict):\n        if context:\n            curr_url = context.get('request').path\n        elif request:\n            curr_url = request.path\n        else:\n            raise\n        for key in dashboard_cls:\n            mod, inst = key.rsplit('.', 1)\n            mod = import_module(mod)\n            admin_site = getattr(mod, inst)\n            admin_url = reverse('%s:index' % admin_site.name)\n            if curr_url.startswith(admin_url):\n                return admin_site\n    else:\n        return admin.site\n    raise ValueError('Admin site matching \"%s\" not found' % dashboard_cls)\n\nfrom grappelli.dashboard import utils\nutils.get_admin_site = patched_get_admin_site\n```\n. ",
    "dhilipsiva": "No. I dont have any objections. I was just thinking if this got merged, then I can install it directly from pypi rather than installing from GitHub. No probs. I will close this PR. Thanks :)\n. @sehmaschine Sorry. Wrong PR. Will close this.\n. Dang! sorry for the confuion again. I realize @sehmaschine reopened this Issue. Dang! Sincere apologies. \n. @fdintino Its been a while I dont dont exactly remember the Error. I got an error while trying to port my code to 3.5. Maybe that edge case is not covered in test cases and thats why the passed? I am really not sure. I will close this Issue for now. I am maintaining a py3.5 port elsewhere.\n. No. I dont have any objections. I was just thinking if this got merged, then I can install it directly from pypi rather than installing from GitHub. No probs. I will close this PR. Thanks :)\n. @sehmaschine Sorry. Wrong PR. Will close this.\n. Dang! sorry for the confuion again. I realize @sehmaschine reopened this Issue. Dang! Sincere apologies. \n. @fdintino Its been a while I dont dont exactly remember the Error. I got an error while trying to port my code to 3.5. Maybe that edge case is not covered in test cases and thats why the passed? I am really not sure. I will close this Issue for now. I am maintaining a py3.5 port elsewhere.\n. ",
    "fdintino": "These all seem like minor formatting changes that 2to3 performs but that have nothing to do with python 3.5 specifically. Moreover, the unit tests currently pass on python 3.5. So what is this for?\n. These all seem like minor formatting changes that 2to3 performs but that have nothing to do with python 3.5 specifically. Moreover, the unit tests currently pass on python 3.5. So what is this for?\n. ",
    "graingert": "I think 1.9 is in feature freeze. I'd imagine this is going into 1.10\n. @sehmaschine it's not too hard to figure out now, we might as well be prepared\n. Yeah sorry about that. Is there a document on how to run grapelli on an\nexample project?\nOn 17 Jan 2016 14:56, \"Patrick Kranzlmueller\" notifications@github.com\nwrote:\n\n> @graingert https://github.com/graingert I've reverted the merge with\n> stable/2.8.x ... there's just too many issues for me to resolve now (e.g.\n> almost all paths are wrong, you use \"grapelli\" instead of \"grappelli\" etc).\n> happy to take a look at this again if you're sending a tested PR.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/issues/684#issuecomment-172333037\n> .\n. @sehmaschine I've finished removing inline JS from the actual Admin. It's still included in the examples and docs though\n. Sorry I mean tinymce examples https://github.com/sehmaschine/django-grappelli/tree/master/grappelli/static/grappelli/tinymce/examples\n. @sehmaschine I didn't remove the inline js from those files\n. @sehmaschine are there any selenium or manual test scripts for the UI?\n. @sehmaschine the CSP support in django admin landed\n. @sehmaschine what's the status on this?\n. @sehmaschine this targets 1.9\n. @sehmaschine why not do development like django? Merge into master then cherry-pick to stable/release\n. @sehmaschine it's been supported by travis for ages\n. I think 1.9 is in feature freeze. I'd imagine this is going into 1.10\n. @sehmaschine it's not too hard to figure out now, we might as well be prepared\n. Yeah sorry about that. Is there a document on how to run grapelli on an\nexample project?\nOn 17 Jan 2016 14:56, \"Patrick Kranzlmueller\" notifications@github.com\nwrote:\n\n> @graingert https://github.com/graingert I've reverted the merge with\n> stable/2.8.x ... there's just too many issues for me to resolve now (e.g.\n> almost all paths are wrong, you use \"grapelli\" instead of \"grappelli\" etc).\n> happy to take a look at this again if you're sending a tested PR.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/issues/684#issuecomment-172333037\n> .\n. @sehmaschine I've finished removing inline JS from the actual Admin. It's still included in the examples and docs though\n. Sorry I mean tinymce examples https://github.com/sehmaschine/django-grappelli/tree/master/grappelli/static/grappelli/tinymce/examples\n. @sehmaschine I didn't remove the inline js from those files\n. @sehmaschine are there any selenium or manual test scripts for the UI?\n. @sehmaschine the CSP support in django admin landed\n. @sehmaschine what's the status on this?\n. @sehmaschine this targets 1.9\n. @sehmaschine why not do development like django? Merge into master then cherry-pick to stable/release\n. @sehmaschine it's been supported by travis for ages\n. ",
    "despawnerer": "Ping. Any comments about this?\n. Ping. Any comments about this?\n. ",
    "dhararon": "[Solved] I run \"pip install -e git+https://github.com/sehmaschine/django-grappelli.git#egg=grappelli \"  and everything it's ok.  thank you.\n. [Solved] I run \"pip install -e git+https://github.com/sehmaschine/django-grappelli.git#egg=grappelli \"  and everything it's ok.  thank you.\n. ",
    "rstalbow": "I've had this error would be great to get 2.7.3 live asap.\n. I've had this error would be great to get 2.7.3 live asap.\n. ",
    "bruceli": "By the way, thanks for the wonderful work.\n. By the way, thanks for the wonderful work.\n. ",
    "HellerCommaA": "That's literally all the info I had from the AWS logs. I tried compressor with admin-bootstrap after I opened this ticket, I honestly think it's an issue with compressor, not with grappelli. I'll mark as closed.\n. That's literally all the info I had from the AWS logs. I tried compressor with admin-bootstrap after I opened this ticket, I honestly think it's an issue with compressor, not with grappelli. I'll mark as closed.\n. ",
    "dahrens": "had this issue with 2.7.1 and 2.7.2\n. i played around with this a little...\n\nRegarding the keyboard focus stuff it seemed as if there is just :hover on the inner a causing a different appearance - but :focus does nothing. The styles should comes from jquery-ui as those are used for styling.\n\nThe pull request adds autoFocus, so the first element gets focus and enter chooses it instead of saving the model (without changing the value)\n. had this issue with 2.7.1 and 2.7.2\n. i played around with this a little...\n\nRegarding the keyboard focus stuff it seemed as if there is just :hover on the inner a causing a different appearance - but :focus does nothing. The styles should comes from jquery-ui as those are used for styling.\n\nThe pull request adds autoFocus, so the first element gets focus and enter chooses it instead of saving the model (without changing the value)\n. ",
    "ninjaa": "Same issue\n. Can verify @clutcher's fix seems to work as well ... the following is my monkey patch\n\n``` python\n# Monkey patch grappelli autocomplete to fix bug\n# https://github.com/sehmaschine/django-grappelli/issues/701\nfrom django.db import connection\nfrom grappelli.views.related import AutocompleteLookup \n\ndef grp_autocomplete_get_queryset(self):\n    qs = super(AutocompleteLookup, self).get_queryset()\n    qs = self.get_filtered_queryset(qs)\n    qs = self.get_searched_queryset(qs)\n    if connection.vendor == 'postgresql':\n        distinct_columns = list(self.model._meta.ordering) + [self.model._meta.pk.column]\n        return qs.order_by(*distinct_columns).distinct()\n    else:\n        return qs.distinct()\n\nsetattr(AutocompleteLookup, 'get_queryset', grp_autocomplete_get_queryset)\n```\n. Same issue\n. Can verify @clutcher's fix seems to work as well ... the following is my monkey patch\n\n``` python\n# Monkey patch grappelli autocomplete to fix bug\n# https://github.com/sehmaschine/django-grappelli/issues/701\nfrom django.db import connection\nfrom grappelli.views.related import AutocompleteLookup \n\ndef grp_autocomplete_get_queryset(self):\n    qs = super(AutocompleteLookup, self).get_queryset()\n    qs = self.get_filtered_queryset(qs)\n    qs = self.get_searched_queryset(qs)\n    if connection.vendor == 'postgresql':\n        distinct_columns = list(self.model._meta.ordering) + [self.model._meta.pk.column]\n        return qs.order_by(*distinct_columns).distinct()\n    else:\n        return qs.distinct()\n\nsetattr(AutocompleteLookup, 'get_queryset', grp_autocomplete_get_queryset)\n```\n. ",
    "ninapavlich": "Oops -- I just saw the Google Group! Closing this question!\n. Hi @parsch, \n\nI emailed a little bit back in January with Patrick Kranzlm\u00fcller, and he mentioned that the developers would be discussing internally the future of the project and would be shooting to have a roadmap for this in March. \n\nHe mentioned that on the table was whether or not to overhaul the look and feel entirely, and he suggested that it would make more sense to hold off on any efforts to make it responsive until that overhaul is underway. \n\nWhenever that is underway, you have have two volunteers (me and @olivierdalang) to help!\n. Oops -- I just saw the Google Group! Closing this question!\n. Hi @parsch, \n\nI emailed a little bit back in January with Patrick Kranzlm\u00fcller, and he mentioned that the developers would be discussing internally the future of the project and would be shooting to have a roadmap for this in March. \n\nHe mentioned that on the table was whether or not to overhaul the look and feel entirely, and he suggested that it would make more sense to hold off on any efforts to make it responsive until that overhaul is underway. \n\nWhenever that is underway, you have have two volunteers (me and @olivierdalang) to help!\n. ",
    "drxos": "Great.\n. Good. I'll update my package\n. Ok. Don't forget to let me know if you need help. Keep in touch.\n. I fixed this bug. \n. Great.\n. Good. I'll update my package\n. Ok. Don't forget to let me know if you need help. Keep in touch.\n. I fixed this bug. \n. ",
    "dbykadorov": "Patch is working. I just tested it with my local version of the project (updated from Django 1.8 to 1.9).\n\nCan anyone merge it?\n. I see that it is not compatible, but I want to know wether the fix is planned or not?\n. The question was about exists layouts compatible with Django 1.9 (maybe I miss them). Your answer is \"Not yet\".\n\nI was planed upgrade of some old projects using grappelli to Django 1.9 and also I need to start new project with Django 1.9. \n\nCurrently I need to postpone the upgrade and in the new project I'll not use grappelli before it will be compatible with Django 1.9.\n\nThanks for your answer!\n. Patch is working. I just tested it with my local version of the project (updated from Django 1.8 to 1.9).\n\nCan anyone merge it?\n. I see that it is not compatible, but I want to know wether the fix is planned or not?\n. The question was about exists layouts compatible with Django 1.9 (maybe I miss them). Your answer is \"Not yet\".\n\nI was planed upgrade of some old projects using grappelli to Django 1.9 and also I need to start new project with Django 1.9. \n\nCurrently I need to postpone the upgrade and in the new project I'll not use grappelli before it will be compatible with Django 1.9.\n\nThanks for your answer!\n. ",
    "luster": "+1 could someone merge this?\n. +1 could someone merge this?\n. ",
    "michalwerner": "When I run `python manage.py collectstatic`, I get:\n\n```\nPost-processing 'grappelli/stylesheets/screen.css' failed!\n\nTraceback (most recent call last):\n  File \"manage.py\", line 13, in <module>\n    execute_from_command_line(sys.argv)\n  File \".............../lib/python3.5/site-packages/django/core/management/__init__.py\", line 353, in execute_from_command_line\n    utility.execute()\n  File \".............../lib/python3.5/site-packages/django/core/management/__init__.py\", line 345, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \".............../lib/python3.5/site-packages/django/core/management/base.py\", line 348, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \".............../lib/python3.5/site-packages/django/core/management/base.py\", line 399, in execute\n    output = self.handle(*args, **options)\n  File \".............../lib/python3.5/site-packages/django/contrib/staticfiles/management/commands/collectstatic.py\", line 176, in handle\n    collected = self.collect()\n  File \".............../lib/python3.5/site-packages/django/contrib/staticfiles/management/commands/collectstatic.py\", line 128, in collect\n    raise processed\n  File \".............../lib/python3.5/site-packages/django/contrib/staticfiles/storage.py\", line 245, in post_process\n    content = pattern.sub(converter, content)\n  File \".............../lib/python3.5/site-packages/django/contrib/staticfiles/storage.py\", line 184, in converter\n    hashed_url = self.url(unquote(joined_result), force=True)\n  File \".............../lib/python3.5/site-packages/django/contrib/staticfiles/storage.py\", line 131, in url\n    hashed_name = self.stored_name(clean_name)\n  File \".............../lib/python3.5/site-packages/django/contrib/staticfiles/storage.py\", line 280, in stored_name\n    cache_name = self.clean_name(self.hashed_name(name))\n  File \".............../lib/python3.5/site-packages/django/contrib/staticfiles/storage.py\", line 94, in hashed_name\n    (clean_name, self))\nValueError: The file 'admin/img/icon_deletelink.gif' could not be found with <pipeline.storage.PipelineCachedStorage object at 0x7f1addddecc0>.\n```\n\nI use django-pipeline, but I think it doesn't matter. I also noticed that there's no error unless I flush static directory first.\n. @sehmaschine, you're right, my bad. Error occurs only when some other package like django-pipeline tries to do something with static files. \nBut it does not change the fact that path to that icon changed in Django from: `admin/img/icon_deletelink.gif` to `admin/img/icon-deletelink.svg`.\n. I had similar issue, but it was related with django-filebrowser, not grappelli ([fix](https://github.com/sehmaschine/django-filebrowser/pull/300)).\n. When I run `python manage.py collectstatic`, I get:\n\n```\nPost-processing 'grappelli/stylesheets/screen.css' failed!\n\nTraceback (most recent call last):\n  File \"manage.py\", line 13, in <module>\n    execute_from_command_line(sys.argv)\n  File \".............../lib/python3.5/site-packages/django/core/management/__init__.py\", line 353, in execute_from_command_line\n    utility.execute()\n  File \".............../lib/python3.5/site-packages/django/core/management/__init__.py\", line 345, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \".............../lib/python3.5/site-packages/django/core/management/base.py\", line 348, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \".............../lib/python3.5/site-packages/django/core/management/base.py\", line 399, in execute\n    output = self.handle(*args, **options)\n  File \".............../lib/python3.5/site-packages/django/contrib/staticfiles/management/commands/collectstatic.py\", line 176, in handle\n    collected = self.collect()\n  File \".............../lib/python3.5/site-packages/django/contrib/staticfiles/management/commands/collectstatic.py\", line 128, in collect\n    raise processed\n  File \".............../lib/python3.5/site-packages/django/contrib/staticfiles/storage.py\", line 245, in post_process\n    content = pattern.sub(converter, content)\n  File \".............../lib/python3.5/site-packages/django/contrib/staticfiles/storage.py\", line 184, in converter\n    hashed_url = self.url(unquote(joined_result), force=True)\n  File \".............../lib/python3.5/site-packages/django/contrib/staticfiles/storage.py\", line 131, in url\n    hashed_name = self.stored_name(clean_name)\n  File \".............../lib/python3.5/site-packages/django/contrib/staticfiles/storage.py\", line 280, in stored_name\n    cache_name = self.clean_name(self.hashed_name(name))\n  File \".............../lib/python3.5/site-packages/django/contrib/staticfiles/storage.py\", line 94, in hashed_name\n    (clean_name, self))\nValueError: The file 'admin/img/icon_deletelink.gif' could not be found with <pipeline.storage.PipelineCachedStorage object at 0x7f1addddecc0>.\n```\n\nI use django-pipeline, but I think it doesn't matter. I also noticed that there's no error unless I flush static directory first.\n. @sehmaschine, you're right, my bad. Error occurs only when some other package like django-pipeline tries to do something with static files. \nBut it does not change the fact that path to that icon changed in Django from: `admin/img/icon_deletelink.gif` to `admin/img/icon-deletelink.svg`.\n. I had similar issue, but it was related with django-filebrowser, not grappelli ([fix](https://github.com/sehmaschine/django-filebrowser/pull/300)).\n. ",
    "dvkovner": "Yes. I think it is better to say than to remain silent. =)\n. I have the same issue in grappelli 2.8.1.\n. Yes. I think it is better to say than to remain silent. =)\n. I have the same issue in grappelli 2.8.1.\n. ",
    "gb119": "Possibly related, the search window popup for a generic foreign key from appA to appB/modelB is giving an unmatched url (of the form /admin/appA/appB/model/?&_popup=1 ). This is with current git stable/2.8.x branch and django-1.9.2\n. Possibly related, the search window popup for a generic foreign key from appA to appB/modelB is giving an unmatched url (of the form /admin/appA/appB/model/?&_popup=1 ). This is with current git stable/2.8.x branch and django-1.9.2\n. ",
    "PaoloC68": "@nferrari my pull request #722 should have fixed this, can you please confirm and close this issues? You should use branch stable/2.8.x\n. @parsch this merge should solve also #720, thanks!\n. @nferrari my pull request #722 should have fixed this, can you please confirm and close this issues? You should use branch stable/2.8.x\n. @parsch this merge should solve also #720, thanks!\n. ",
    "nferrari": "Indeed. Thank you!\n. Indeed. Thank you!\n. ",
    "mehdipourfar": "I think I was wrong. The problem is that you should change clear value of grp-help class to right in your rtl.css\nI'm waiting for fix.\n. And also, those horizontal selectors work inverse for rtl, because the position of  selector-chosen divs will be reversed. I hope you fix that too.\n. I think I was wrong. The problem is that you should change clear value of grp-help class to right in your rtl.css\nI'm waiting for fix.\n. And also, those horizontal selectors work inverse for rtl, because the position of  selector-chosen divs will be reversed. I hope you fix that too.\n. ",
    "MattFisher": "Awesome! (Just spent an hour diagnosing this same problem)\n. Awesome! (Just spent an hour diagnosing this same problem)\n. ",
    "chasepilon": "Steps:\n- pip install django-grappelli==2.6.5\n- added 'grappelli' to INSTALLED_APPS in settings.py before django.contrib.admin\n- added url(r'^grappelli/', include('grappelli.urls')), to urls.py under urlpatterns\n- removed my admin template folder\n- ran python manage.py collectstatic\n\nBeyond that, how would I confirm the scripts loaded properly?\n. Steps:\n- pip install django-grappelli==2.6.5\n- added 'grappelli' to INSTALLED_APPS in settings.py before django.contrib.admin\n- added url(r'^grappelli/', include('grappelli.urls')), to urls.py under urlpatterns\n- removed my admin template folder\n- ran python manage.py collectstatic\n\nBeyond that, how would I confirm the scripts loaded properly?\n. ",
    "jet-sun": "Thanks!\n. Thanks!\n. ",
    "cristianocca": "Sorry, do you mean to not use Grappelli at all? Grappelli adds some interesting features like auto complete and more, so it is still required, but I'm not sure how to skip its styles to just get the extra functionallity which is quite useful.\n\nDe: parsch\nEnviado el: \u200ejueves\u200e, \u200e25\u200e de \u200efebrero\u200e de \u200e2016 \u200e4\u200e:\u200e50\nPara: sehmaschine/django-grappelli\nCC: Cristiano Coelho\n\nWell, it's easy if you don't use Grappelli but the original Django 1.9. styles if you like them.\n\n\u2014\nReply to this email directly or view it on GitHub.\n. Sorry, do you mean to not use Grappelli at all? Grappelli adds some interesting features like auto complete and more, so it is still required, but I'm not sure how to skip its styles to just get the extra functionallity which is quite useful.\n\nDe: parsch\nEnviado el: \u200ejueves\u200e, \u200e25\u200e de \u200efebrero\u200e de \u200e2016 \u200e4\u200e:\u200e50\nPara: sehmaschine/django-grappelli\nCC: Cristiano Coelho\n\nWell, it's easy if you don't use Grappelli but the original Django 1.9. styles if you like them.\n\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "9gix": "I believe those functionalities aren't provided by django admin natively. So, perhaps, it is time to decouple those functionalities out from grappelli core such as `autocomplete_lookup_field`, `related_lookup_fields`. So that grappelli only focuses on skin for the Django admin interface without extra functionality. \n. I believe those functionalities aren't provided by django admin natively. So, perhaps, it is time to decouple those functionalities out from grappelli core such as `autocomplete_lookup_field`, `related_lookup_fields`. So that grappelli only focuses on skin for the Django admin interface without extra functionality. \n. ",
    "stas630": "If select value in select-box\"Delete selected...\", \nWhen I select a value \"Delete selected...\" in the select-box, then nothing happens (settings.DEBUG=False, use actions.min.js).\nWhen I select a value \"Delete selected...\" in the select-box, java-script runs and deletes (settings.DEBUG=True, use actions.js).\nFile actions.min.js and actions.js are different in your project.\nI use: Django (1.9.2) django-grappelli (master) Firefox 38.6.0\n. If select value in select-box\"Delete selected...\", \nWhen I select a value \"Delete selected...\" in the select-box, then nothing happens (settings.DEBUG=False, use actions.min.js).\nWhen I select a value \"Delete selected...\" in the select-box, java-script runs and deletes (settings.DEBUG=True, use actions.js).\nFile actions.min.js and actions.js are different in your project.\nI use: Django (1.9.2) django-grappelli (master) Firefox 38.6.0\n. ",
    "NickCliff": "The add button for example \"add user\" on the user administration page.\n\nNo I have no customizations implemented. I'll upgrade our grappelli version in a few hours and see if that fixes the height.\n. No problem.\n. The add button for example \"add user\" on the user administration page.\n\nNo I have no customizations implemented. I'll upgrade our grappelli version in a few hours and see if that fixes the height.\n. No problem.\n. ",
    "Quantra": "1.  I am unable to recreate.\n2.  Exists in IE11 and Firefox.  This issue is making the admin site unusable in these cases.  Patch please!\n. 1.  I am unable to recreate.\n2.  Exists in IE11 and Firefox.  This issue is making the admin site unusable in these cases.  Patch please!\n. ",
    "tsouvarev": "I was unable to add relevant test case without going in too deep. But current tests pass OK\n. I think, it doesn't break other cases because you don't test heavy magic transformations of querysets, as it happens in `django-modeltranslation`. I can put up test project with issue I've encountered\n. I did check those issues. #706 is irrelevant because it's about combinations of terms in query, not about field names in lookups. #403 may fix my issue, thou it's about something else\n\nAlso, what is \"this behaviour\" exactly in \"we had problems with this behaviour in the past\"?\n\nBy the way, here is another reason to accept this PR: currently you use merging feature of querysets, which do a lot more work than needed - it checks joins, makes column renames and so on. Using only `Q` objects to construct search query makes code simpler and faster\n. Test project: https://github.com/tsouvarev/test_grappellli_with_modeltranslation\n\nThis project has translated `Tag` model, with one `Tag` object with `name_en='en name'` and `name_de='de name'`. \nIt also has `autocomplete_search_fields` returning `['name__icontains']`\n\nSo `grappelli` should be able to autocomplete tags by name (as `modeltranslation` rewrites queries, and `name` becomes `name_en`):\n\n`http://localhost:8000/grappelli/lookup/autocomplete/?term=name&app_label=test_app&model_name=tag`\n\nBut it answers with zero results, however.\n\nThere are two ways to solve the problem:\n- install patched `grappelli`, which doesn't instantiate and then merge new QuerySet:\n\n```\npip install --upgrade git+https://github.com/tsouvarev/django-grappelli@use-models-queryset-in-autocomplete-lookup\n```\n- change `autocomplete_search_fields` to `['name_en__icontains']`\n. @tdruez that's it, thank you. This fixes https://github.com/sehmaschine/django-grappelli/issues/806. Duplicate of https://github.com/sehmaschine/django-grappelli/pull/805 :(. I was unable to add relevant test case without going in too deep. But current tests pass OK\n. I think, it doesn't break other cases because you don't test heavy magic transformations of querysets, as it happens in `django-modeltranslation`. I can put up test project with issue I've encountered\n. I did check those issues. #706 is irrelevant because it's about combinations of terms in query, not about field names in lookups. #403 may fix my issue, thou it's about something else\n\nAlso, what is \"this behaviour\" exactly in \"we had problems with this behaviour in the past\"?\n\nBy the way, here is another reason to accept this PR: currently you use merging feature of querysets, which do a lot more work than needed - it checks joins, makes column renames and so on. Using only `Q` objects to construct search query makes code simpler and faster\n. Test project: https://github.com/tsouvarev/test_grappellli_with_modeltranslation\n\nThis project has translated `Tag` model, with one `Tag` object with `name_en='en name'` and `name_de='de name'`. \nIt also has `autocomplete_search_fields` returning `['name__icontains']`\n\nSo `grappelli` should be able to autocomplete tags by name (as `modeltranslation` rewrites queries, and `name` becomes `name_en`):\n\n`http://localhost:8000/grappelli/lookup/autocomplete/?term=name&app_label=test_app&model_name=tag`\n\nBut it answers with zero results, however.\n\nThere are two ways to solve the problem:\n- install patched `grappelli`, which doesn't instantiate and then merge new QuerySet:\n\n```\npip install --upgrade git+https://github.com/tsouvarev/django-grappelli@use-models-queryset-in-autocomplete-lookup\n```\n- change `autocomplete_search_fields` to `['name_en__icontains']`\n. @tdruez that's it, thank you. This fixes https://github.com/sehmaschine/django-grappelli/issues/806. Duplicate of https://github.com/sehmaschine/django-grappelli/pull/805 :(. ",
    "erichonkanen": "decided to just override templates/admin/base.html\n. decided to just override templates/admin/base.html\n. ",
    "utapyngo": "> Invalid block tag on line 110: 'static', expected 'elif', 'else' or 'endif'. Did you forget to register or load this tag?\n. Yes, I have changed the LOADING section to `{% load admin_list i18n grp_tags admin_urls static %}`, and it works. Thanks!\n. > Invalid block tag on line 110: 'static', expected 'elif', 'else' or 'endif'. Did you forget to register or load this tag?\n. Yes, I have changed the LOADING section to `{% load admin_list i18n grp_tags admin_urls static %}`, and it works. Thanks!\n. ",
    "jpotterm": "This regression was introduced in commit c43288f840457945e7ca4636715f87d1474fd48e.\n. This regression was introduced in commit c43288f840457945e7ca4636715f87d1474fd48e.\n. ",
    "mick-t": "Will there be a tagged django-grappelli branch with this fix? django-grappelli==2.7.3 still has this problem.\n. I'm using Django 1.8.x and the django-grappelli docs say to use the 1.7 branch. I won't be upgrading to Django 1.9 as I want to stick to 1.8 as it's classed as a long-term support (LTS) release with support for the next 3 years.\n. Will there be a tagged django-grappelli branch with this fix? django-grappelli==2.7.3 still has this problem.\n. I'm using Django 1.8.x and the django-grappelli docs say to use the 1.7 branch. I won't be upgrading to Django 1.9 as I want to stick to 1.8 as it's classed as a long-term support (LTS) release with support for the next 3 years.\n. ",
    "dco5": "I need to create a custom admin view for a custom admin action. I need it too look and feel like still inside the admin.\n. I need to create a custom admin view for a custom admin action. I need it too look and feel like still inside the admin.\n. ",
    "kmmbvnr": "https://github.com/meshy/pythonwheels/issues/71\n\n[bdist_wheel] is canonical\n. https://github.com/meshy/pythonwheels/issues/71\n\n[bdist_wheel] is canonical\n. ",
    "paolostefan": "Ok, seems like that but I'm opening another issue to explain what I meant.\n. Can you elaborate a bit?\nDo you mean that a custom user model will break tests programmatically?\nSwitch won't be possible at all with a custom user model?\nIs there a place where these \"do and don't\"s are documented?\n\nAnyway, the model _has_ the property `is_staff` defined in https://gist.github.com/paolostefan/59a3b683ddd4f793e6a031bfdb8e068a#file-models-py-L89\n\nI took these [Django official docs](https://docs.djangoproject.com/en/1.9/topics/auth/customizing/#a-full-example) as reference.\n\nDo you mean that is_staff has to be defined as a _field_ (as opposed to a _property_)?\n\nThank you.\n. The `is_admin` was a typo, I fixed it with [this commit](https://github.com/paolostefan/django-grappelli/commit/37c9f65cd966ed3e0540d641f8d97774a70eaa5f) .\nWe can just do as you say- anyway, I think it's important to point out (in the docs) that you should pay attention if you are using a custom user model.\n. Ok, seems like that but I'm opening another issue to explain what I meant.\n. Can you elaborate a bit?\nDo you mean that a custom user model will break tests programmatically?\nSwitch won't be possible at all with a custom user model?\nIs there a place where these \"do and don't\"s are documented?\n\nAnyway, the model _has_ the property `is_staff` defined in https://gist.github.com/paolostefan/59a3b683ddd4f793e6a031bfdb8e068a#file-models-py-L89\n\nI took these [Django official docs](https://docs.djangoproject.com/en/1.9/topics/auth/customizing/#a-full-example) as reference.\n\nDo you mean that is_staff has to be defined as a _field_ (as opposed to a _property_)?\n\nThank you.\n. The `is_admin` was a typo, I fixed it with [this commit](https://github.com/paolostefan/django-grappelli/commit/37c9f65cd966ed3e0540d641f8d97774a70eaa5f) .\nWe can just do as you say- anyway, I think it's important to point out (in the docs) that you should pay attention if you are using a custom user model.\n. ",
    "leiserfg": "Sorry it's fixed on the master.\n. Sorry it's fixed on the master.\n. ",
    "thisjustin": "@sehmaschine grappelli seems to be working fine this appears to be the [Django commit that causes the warning](https://github.com/django/django/commit/5304494585c58b0c9245ea9896a6d6122a8673a2)\n\nI'm guessing this has always been happening but all of sudden Django has decided to show a warning for it - not sure I understand their reasoning for adding it.\n. Reading a bit more of the [Django ticket](https://code.djangoproject.com/ticket/24890) I see their reasoning - people were accidentally overwriting static files seemingly but since the whole point of grappelli is to overwrite large portions of the admin it'd be nice if we could silence the warnings. I've opened [a ticket](https://code.djangoproject.com/ticket/26583) with Django to add this option.\n. @sehmaschine grappelli seems to be working fine this appears to be the [Django commit that causes the warning](https://github.com/django/django/commit/5304494585c58b0c9245ea9896a6d6122a8673a2)\n\nI'm guessing this has always been happening but all of sudden Django has decided to show a warning for it - not sure I understand their reasoning for adding it.\n. Reading a bit more of the [Django ticket](https://code.djangoproject.com/ticket/24890) I see their reasoning - people were accidentally overwriting static files seemingly but since the whole point of grappelli is to overwrite large portions of the admin it'd be nice if we could silence the warnings. I've opened [a ticket](https://code.djangoproject.com/ticket/26583) with Django to add this option.\n. ",
    "kierun": "Not as far as I am aware but I could be... I am pretty new to Django. I am using `django-revision` as well if that impacts things...\n. Hum... Any idea where my broken setup got broken?... (Yeah, you can mock me for asking.)\n. hum... I'll keep digging.  Many thanks indeed.\n. `templates/admin/base_site.html` was the culprit in case this bugs anyone else.\n. @sehmaschine OOPS! Thank you. \u263a. Not as far as I am aware but I could be... I am pretty new to Django. I am using `django-revision` as well if that impacts things...\n. Hum... Any idea where my broken setup got broken?... (Yeah, you can mock me for asking.)\n. hum... I'll keep digging.  Many thanks indeed.\n. `templates/admin/base_site.html` was the culprit in case this bugs anyone else.\n. @sehmaschine OOPS! Thank you. \u263a. ",
    "extremewaysback": "@sehmaschine Thanks!\n. @sehmaschine Thanks!\n. ",
    "rohitjain-rj": "I followed the grappelli quick start guide: http://django-grappelli.readthedocs.io/en/latest/quickstart.html to setup.\n1. pip install django-grappelli\n2. Added 'grappelli' to INSTALLED_APPS, at the top.\n3. Added url - 'grappelli/' on urls.py\n4. python manage.py collectstatic\n\nThen I go to my django admin site, select any model from there. From the Model List page, select any model to visit Update Form, or Click on Add model to visit Add Form. The above error occurs. This happens for all models.\n\nIf I remove `grappelli` from INSTALLED_APPS and the url, the form opens fine.\n\nIf you want some more settings, please tell. I'll add.\n\nAt most of the models, I do have `def __str__()` function instead of `def __unicode__()` function. I'm using Python 2.7 (Django version 1.8). I did try replacing the function in `__unicode__`, but that didn't help.\n. Ok, just figured out that DEFAULT_CHARSET is set to ISO-8859-1 in my settings file. Removing that makes it work fine. Strange that it didn't fail with default admin template. May be probably because grappelli uses some other text representation for static text?\n. I followed the grappelli quick start guide: http://django-grappelli.readthedocs.io/en/latest/quickstart.html to setup.\n1. pip install django-grappelli\n2. Added 'grappelli' to INSTALLED_APPS, at the top.\n3. Added url - 'grappelli/' on urls.py\n4. python manage.py collectstatic\n\nThen I go to my django admin site, select any model from there. From the Model List page, select any model to visit Update Form, or Click on Add model to visit Add Form. The above error occurs. This happens for all models.\n\nIf I remove `grappelli` from INSTALLED_APPS and the url, the form opens fine.\n\nIf you want some more settings, please tell. I'll add.\n\nAt most of the models, I do have `def __str__()` function instead of `def __unicode__()` function. I'm using Python 2.7 (Django version 1.8). I did try replacing the function in `__unicode__`, but that didn't help.\n. Ok, just figured out that DEFAULT_CHARSET is set to ISO-8859-1 in my settings file. Removing that makes it work fine. Strange that it didn't fail with default admin template. May be probably because grappelli uses some other text representation for static text?\n. ",
    "joseph2002": "maybe you can give a block around this script for override?\nso that we can tweak it for different language, or just disable it to use original url-field. \n. maybe you can give a block around this script for override?\nso that we can tweak it for different language, or just disable it to use original url-field. \n. ",
    "ArtemBernatskyy": "Yes, thanks, actually i have found that i ve played with custom save_formset and it was my problem.\n. 2.8.1 , latest as i see\n. P.S. Firefox hasn't installed Flash. Firefox version is 46.0b1\n. Yes, this solved my problem [(click),](https://drive.google.com/open?id=0B045JEsT1LHnNWY3RjgwTWE3SXc) now it looks like this ([click](https://drive.google.com/open?id=0B045JEsT1LHnOE1weE9WYUlfQ2c)) .\nP.S. Yes, my Django is 1.9 version as mentioned in #737.\nShould i close this issue and wait for updates ?\n. Omg, it was my fault, i used it with my modified django-registration-redux and it was overlapping urls and loading my broken template :(  \r\n\r\nThanks for great app !. Yes, thanks, actually i have found that i ve played with custom save_formset and it was my problem.\n. 2.8.1 , latest as i see\n. P.S. Firefox hasn't installed Flash. Firefox version is 46.0b1\n. Yes, this solved my problem [(click),](https://drive.google.com/open?id=0B045JEsT1LHnNWY3RjgwTWE3SXc) now it looks like this ([click](https://drive.google.com/open?id=0B045JEsT1LHnOE1weE9WYUlfQ2c)) .\nP.S. Yes, my Django is 1.9 version as mentioned in #737.\nShould i close this issue and wait for updates ?\n. Omg, it was my fault, i used it with my modified django-registration-redux and it was overlapping urls and loading my broken template :(  \r\n\r\nThanks for great app !. ",
    "kitex": "![capture](https://cloud.githubusercontent.com/assets/7269068/15884914/3b839050-2d73-11e6-9d3e-d19feca8d1ec.PNG)\n\nI don't have any customer header.\n. I removed \n\n`<h1 id=\"site-name\"><a href=\"{% url 'admin:index' %}\">CMDB</a></h1>`\n\n from \ntemplates/admin/base_site.html and it solved.\n. Yes I defined it. So grappelli provides the other one?\n. Thank you parsch! Is there any document regarding this?\n\nOn Wed, Jun 8, 2016 at 5:48 PM, parsch notifications@github.com wrote:\n\n> Yes, maybe that's not very clear that you shouldn't use <h1\n> id=\"site-name\">.\n> Using the {% block branding %} you can define/insert whatever you want,\n> of course you have to take care about the styles on your on behalf. As\n> suggested in the comment of {% block branding %} you can use <div\n> id=\"grp-branding\"> as a container for a logo or whatsoever, it's\n> positioned correctly. But you will have to apply some styles on your own,\n> too, as there's no way to guess how people use the branding block.\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/issues/758#issuecomment-224568881,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AG7qzFwaSUZ119BJlJGbNQtTr73ttmU2ks5qJq-CgaJpZM4IwkoA\n> .\n. ![capture](https://cloud.githubusercontent.com/assets/7269068/15884914/3b839050-2d73-11e6-9d3e-d19feca8d1ec.PNG)\n\nI don't have any customer header.\n. I removed \n\n`<h1 id=\"site-name\"><a href=\"{% url 'admin:index' %}\">CMDB</a></h1>`\n\n from \ntemplates/admin/base_site.html and it solved.\n. Yes I defined it. So grappelli provides the other one?\n. Thank you parsch! Is there any document regarding this?\n\nOn Wed, Jun 8, 2016 at 5:48 PM, parsch notifications@github.com wrote:\n\n> Yes, maybe that's not very clear that you shouldn't use <h1\n> id=\"site-name\">.\n> Using the {% block branding %} you can define/insert whatever you want,\n> of course you have to take care about the styles on your on behalf. As\n> suggested in the comment of {% block branding %} you can use <div\n> id=\"grp-branding\"> as a container for a logo or whatsoever, it's\n> positioned correctly. But you will have to apply some styles on your own,\n> too, as there's no way to guess how people use the branding block.\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/sehmaschine/django-grappelli/issues/758#issuecomment-224568881,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AG7qzFwaSUZ119BJlJGbNQtTr73ttmU2ks5qJq-CgaJpZM4IwkoA\n> .\n. ",
    "mykljohn": "@sehmaschine  @myii \n\nI kind of confused and stuck here. \nI went through the steps in Filter functionality on admin pages don't work unless actions = None on ModelAdmins #214, and /mysite/static/admin/js/jquery.init.js is:\n\n// dropped\n// not used in grappelli\n// kept this file to prevent 404\n\nbut in devtools it still shows:\n// Puts the included jQuery into our own namespace\nvar django = {\n    \"jQuery\": jQuery.noConflict(true)\n};\n\nI've done a hard refresh <ctrl><f5> to clear cache and reload (correct?) but to no avail.\nI even went to /files/home/geeval/.virtualenvs/django18/lib/python2.7/site-packages/django/contrib/admin/static/admin/js/jquery.init.js and changed it to:\n\n// dropped\n// not used in grappelli\n// kept this file to prevent 404\n\nBut it still shows as original...it definitely appears to be a caching issue, so I rebooted and it still shows the same.   \n\nI additionally tried staticfile finder (which really doesn't make sense because it's the default anyway)\n\nSTATICFILES_FINDERS = (\n'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n'django.contrib.staticfiles.finders.FileSystemFinder',\n)\n\nI've tried in both Chrome and Firefox (on win10)\n\nMy versions are:\npython (2.7)\ndjango (1.8.6)\ndjango-grappelli (2.7.3)\n\nmy installed apps, middleware and static in settings.py are:\nINSTALLED_APPS = (\n    'django.contrib.contenttypes',\n    'grappelli.dashboard',\n    'grappelli',\n    'django.contrib.admin',\n    'django.contrib.admindocs',\n    'django.contrib.auth',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'django_spaghetti',\n    'django_tables2',\n    'eval',\n    'mail_templated',\n    'multiselectfield',\n    'ckeditor',\n    'explorer',\n    'model_report',\n)\n\nMIDDLEWARE_CLASSES = (\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'django.middleware.security.SecurityMiddleware',\n)\n\nSTATIC_ROOT = \"/home/myapp/mysite/static/\"\n\nSTATIC_URL = '/static/'\n\nSTATICFILES_DIRS = (\n    \"/home/myapp/mysite/eval/static/eval/\",\n    \"/home/myapp/mysite/static\"\n)\n. Hey thanks for the reply....I already checked the location...it's myserver/static/admin/js/jquery.init.js.  \n\nSo I went and deleted that file, and sure enough, I got a 502 error.   I then recreated the file with the code dummy code and refreshed and now I get Bad Request (400).  That's with Debug = False, If I set Debug = True, it goes in, but has the old code.  \nbut the file at that address is correct.  I'm guessing somehow the old file has been cached on the server (?)  I'm hosted on pythonanywhere.com so I sent a message to tech support there as well.\n\nThis is really confounding me because I never had to do a reload to the server for js or html...only php.\n. That's what I did at first.  and it looked good in my static files, but it still in devtool it still had the old code.  so I went and edited /files/home/geeval/.virtualenvs/django18/lib/python2.7/site-packages/django/contrib/admin/static/admin/js/jquery.init.js and copied the Grappelli no use code there.  So in theory, there should be no jquery.init.js existing with the old code.  But it still shows up in devtool.  That's why I'm stumped :(  \n\nI've just zipped up the .virtualenvs folder and I'm searching it for jquery.init.js just to see if it's located anywhere else.\n. I upgraded Grappelli because the dashboard wasn't working.  :(  I'm regretting that decision now :)\n. Ok, a little progress.  I got rid of the 400 error.  But it still has the static file error.  \n. Just to reiterate, these are my files in question. \nstatic/admin/js/jquery.init.js \n    // dropped\n    // not used in grappelli\n    // kept this file to prevent 404\n\n.virtualenvs/django18/lib/python2.7/site-packages/django/contrib/admin/static/admin/js/jquery.init.js\n    // dropped\n    // not used in grappelli\n    // kept this file to prevent 404\n\nSo I have no idea where it's getting the old code from.  still scanning .virtualenv....70% complete\n. Ok, it's official, the code shown does not exist in my files on the webserver.  the only js programs that have the line \"jQuery\": jQuery.noConflict(true) are \\mysite\\static\\grappelli\\js\\grappelli.js\nand .virtualenv\\django18\\lib\\python2.7\\site-packages\\grappelli\\static\\grappelli\\js\\grappelli.js\n\nIt's got to be some sort of caching on the server.   yes?  It's not making sense to me otherwise.\n\nWhere is it getting that code from?  \n\nps.  Thanks a lot for your help.\n. Please post your web server configuration.   I'm sorry what do you mean?\n. I just found this on the dashboard web.  Static files:\n\n/static/admin/  /usr/local/lib/python2.7/dist-packages/django/contrib/admin/media\n\nI'm guessing I should delete this...yes?\n. I deleted it and it works !!!!  Thanks for your help!  I've been going crazy with this.\n. hahaha, too late, but everything seems to be working now.  That must have been created when I opened the account because I sure didn't set it.\n. @myii FYI, you were right...it made things worse :)  It all worked fine yesterday, but when I turned on my pc today...no glory.  couldn't even startup.  So I reset it and now I'm back where I was...the jquery.init.js is in this /usr/local/lib/python2.7/dist-packages/django/contrib/admin/media folder, but it's hidden and protected.  I've sent a msg to pythonanywhere.com to help.  cheers.  Mykl\n. thanks...just found the google-group\n. +1. @sehmaschine  @myii \n\nI kind of confused and stuck here. \nI went through the steps in Filter functionality on admin pages don't work unless actions = None on ModelAdmins #214, and /mysite/static/admin/js/jquery.init.js is:\n\n// dropped\n// not used in grappelli\n// kept this file to prevent 404\n\nbut in devtools it still shows:\n// Puts the included jQuery into our own namespace\nvar django = {\n    \"jQuery\": jQuery.noConflict(true)\n};\n\nI've done a hard refresh <ctrl><f5> to clear cache and reload (correct?) but to no avail.\nI even went to /files/home/geeval/.virtualenvs/django18/lib/python2.7/site-packages/django/contrib/admin/static/admin/js/jquery.init.js and changed it to:\n\n// dropped\n// not used in grappelli\n// kept this file to prevent 404\n\nBut it still shows as original...it definitely appears to be a caching issue, so I rebooted and it still shows the same.   \n\nI additionally tried staticfile finder (which really doesn't make sense because it's the default anyway)\n\nSTATICFILES_FINDERS = (\n'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n'django.contrib.staticfiles.finders.FileSystemFinder',\n)\n\nI've tried in both Chrome and Firefox (on win10)\n\nMy versions are:\npython (2.7)\ndjango (1.8.6)\ndjango-grappelli (2.7.3)\n\nmy installed apps, middleware and static in settings.py are:\nINSTALLED_APPS = (\n    'django.contrib.contenttypes',\n    'grappelli.dashboard',\n    'grappelli',\n    'django.contrib.admin',\n    'django.contrib.admindocs',\n    'django.contrib.auth',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'django_spaghetti',\n    'django_tables2',\n    'eval',\n    'mail_templated',\n    'multiselectfield',\n    'ckeditor',\n    'explorer',\n    'model_report',\n)\n\nMIDDLEWARE_CLASSES = (\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'django.middleware.security.SecurityMiddleware',\n)\n\nSTATIC_ROOT = \"/home/myapp/mysite/static/\"\n\nSTATIC_URL = '/static/'\n\nSTATICFILES_DIRS = (\n    \"/home/myapp/mysite/eval/static/eval/\",\n    \"/home/myapp/mysite/static\"\n)\n. Hey thanks for the reply....I already checked the location...it's myserver/static/admin/js/jquery.init.js.  \n\nSo I went and deleted that file, and sure enough, I got a 502 error.   I then recreated the file with the code dummy code and refreshed and now I get Bad Request (400).  That's with Debug = False, If I set Debug = True, it goes in, but has the old code.  \nbut the file at that address is correct.  I'm guessing somehow the old file has been cached on the server (?)  I'm hosted on pythonanywhere.com so I sent a message to tech support there as well.\n\nThis is really confounding me because I never had to do a reload to the server for js or html...only php.\n. That's what I did at first.  and it looked good in my static files, but it still in devtool it still had the old code.  so I went and edited /files/home/geeval/.virtualenvs/django18/lib/python2.7/site-packages/django/contrib/admin/static/admin/js/jquery.init.js and copied the Grappelli no use code there.  So in theory, there should be no jquery.init.js existing with the old code.  But it still shows up in devtool.  That's why I'm stumped :(  \n\nI've just zipped up the .virtualenvs folder and I'm searching it for jquery.init.js just to see if it's located anywhere else.\n. I upgraded Grappelli because the dashboard wasn't working.  :(  I'm regretting that decision now :)\n. Ok, a little progress.  I got rid of the 400 error.  But it still has the static file error.  \n. Just to reiterate, these are my files in question. \nstatic/admin/js/jquery.init.js \n    // dropped\n    // not used in grappelli\n    // kept this file to prevent 404\n\n.virtualenvs/django18/lib/python2.7/site-packages/django/contrib/admin/static/admin/js/jquery.init.js\n    // dropped\n    // not used in grappelli\n    // kept this file to prevent 404\n\nSo I have no idea where it's getting the old code from.  still scanning .virtualenv....70% complete\n. Ok, it's official, the code shown does not exist in my files on the webserver.  the only js programs that have the line \"jQuery\": jQuery.noConflict(true) are \\mysite\\static\\grappelli\\js\\grappelli.js\nand .virtualenv\\django18\\lib\\python2.7\\site-packages\\grappelli\\static\\grappelli\\js\\grappelli.js\n\nIt's got to be some sort of caching on the server.   yes?  It's not making sense to me otherwise.\n\nWhere is it getting that code from?  \n\nps.  Thanks a lot for your help.\n. Please post your web server configuration.   I'm sorry what do you mean?\n. I just found this on the dashboard web.  Static files:\n\n/static/admin/  /usr/local/lib/python2.7/dist-packages/django/contrib/admin/media\n\nI'm guessing I should delete this...yes?\n. I deleted it and it works !!!!  Thanks for your help!  I've been going crazy with this.\n. hahaha, too late, but everything seems to be working now.  That must have been created when I opened the account because I sure didn't set it.\n. @myii FYI, you were right...it made things worse :)  It all worked fine yesterday, but when I turned on my pc today...no glory.  couldn't even startup.  So I reset it and now I'm back where I was...the jquery.init.js is in this /usr/local/lib/python2.7/dist-packages/django/contrib/admin/media folder, but it's hidden and protected.  I've sent a msg to pythonanywhere.com to help.  cheers.  Mykl\n. thanks...just found the google-group\n. +1. ",
    "nategranatir": "I am... \ud83d\ude2c  Is there a simpler way to accomplish this that I missed? We have a M2M relationship to a table that has a couple hundred items, for which autocomplete seems to be the easiest way to add those relationships, much better than the default listbox or dropdown list.\n. We do have other attributes on the tags. I guess I don't understand how using FKs with an intermediate table would be any different, functionally, than M2M. I thought this was the same except that Django manages the intermediate table for you if you use M2M.\n\nIs there something about this structure that may be causing the weird styling issues?\n. Sorry for the delay in responding. I've done some investigating and hopefully it will shed some light on the issues (I personally am no closer to understanding what's wrong.)\n\n1) @parsch I was using the same instance for both screenshots, so the HTML should be the same in both cases; unless you were referring to the HTML of a different portion of the page?\n\n2) @sehmaschine I don't have HTML characters in either related_label, **str** or **unicode**; it's just outputting fields that should contain only unicode characters. \n\n3) Because you mentioned related_label, I added one for our tags and discovered that the string representation inside the box will use related_label, but the weird extra string representation hiding behind the box is using **str** (previously I had no related_label defined, so **str** was used for both.) I'm not sure if this suggests what might be wrong in causing the extra text to display.\n\n4) I played around with the related_label text to try and figure out why the display is weird, expanding to two lines. It seems like it _may_ have something to do with the length of the text displayed. After playing around with it for a bit, I've taken screenshots of two examples. The only difference between the two is that I made the text of the related_label in the second one slightly longer, and in that case we get the 2-line textbox, in the shorter-text example I get it how (I assume) it's intended to be displayed. I got the same results in both cases in Chrome, Firefox and Safari on my Mac.\n\n![autocomplete_small](https://cloud.githubusercontent.com/assets/3166184/17221990/be902502-54bb-11e6-8130-ebe757e604e6.jpg)\n\n![autocomplete_large](https://cloud.githubusercontent.com/assets/3166184/17221994/c48b7c9a-54bb-11e6-8847-8e2dbd7c689e.jpg)\n. Yeah, that looks very similar to what we have, except that Django creates the intermediate table, TVShow.tags.through. Here are the relevant sections of our models (removed a bunch of irrelevant stuff):\n\n```\nclass TagHierarchy(models.Model):\n    dict = models.ForeignKey(Dictionary)\n    tag = models.ForeignKey(Tag)\n    parent_tag = models.ForeignKey(Tag, related_name='is_parent_tag', null=True, blank=True)\n\n    @staticmethod\n    def autocomplete_search_fields():\n        return (\"tag__tag_name__icontains\", \"tag__group__group_name__icontains\")\n\n    def related_label(self):\n        return self.tag.kairos_name()\n\nclass InterestDictionary(models.Model):\n    interest_name = models.CharField(max_length=500, unique=True, validators=[no_double_quotes])\n    interest_id = models.CharField(max_length=20, null=True, blank=True)\n    tags = models.ManyToManyField(TagHierarchy, blank=True)\n```\n\n```\nclass TagHierarchyInline(admin.TabularInline):\n    form = TagHierarchyInlineForm\n    model = TVShow.tags.through\n    extra = 0\n    verbose_name = 'Add/Remove Tag'\n    verbose_name_plural = 'Add/Remove Tags'\n    classes = ['grp-collapse grp-closed']\n\n    # For grappelli autocomplete lookup feature\n    raw_id_fields = ('taghierarchy',)\n    autocomplete_lookup_fields = {\n        'm2m': ['taghierarchy'],\n    }\n\nclass TVShowAdmin(admin.ModelAdmin):\n    form = TVShowForm\n    list_display = ('interest_name', 'release_date', 'end_date', 'retired', 'searchable_titles')\n    fieldsets = [\n        ...blah...\n        ('Add/Remove Tags', {'classes': ('placeholder TVShow_tags-group',), 'fields': ()}),\n        ...blah...\n    ]\n    inlines = [TagHierarchyInline, TwitterHandleInline]\n```\n. I'm not trying to be difficult here, I genuinely don't understand how what you're describing is functionally any different from what I did. Django created the table below automatically, because I defined the ManyToManyField in TVShow (TVShow inherits from InterestDictionary). \n![image](https://cloud.githubusercontent.com/assets/3166184/17332502/97b870d8-5894-11e6-8a78-b1a6e5b59dde.png)\n\nIt's a table that has three fields: an id, a foreign key to the TVShow model, and a foreign key to the TagHierarchy model - just like in your example of the TagToParent intermediate table. My inline is based on that model, the automatically created one, accessed via TVShow.tags.through, just like your inline is based on TagToParent.\n\nWhat I really don't understand about your suggestions are:\n- If my use of ManyToManyField is inappropriate here, in what situation _would_ you use ManyToManyField? A Tag can be applied to many Interests, and an Interest can have many tags. I don't see why I wouldn't use ManyToManyField.\n- Given that I'm using a ManyToManyField, how _should_ I display that in the admin site? The default display is a select-box, which is cumbersome to use for a large list of Tags. I figured it would be easier, then, to use an inline so tags could be individually added and removed; is there a way to do this without an inline?\n\nI will try to create some test models the way you described and see if I get any difference in behavior.\n. Aha! We finally discovered the problem, and understand a little better what you were trying to tell us. The issue was with this line in the intermediate table inline:\n\n```\nautocomplete_lookup_fields = {\n        'm2m': ['taghierarchy'],\n    }\n```\n\nIt should be:\n\n```\nautocomplete_lookup_fields = {\n        'fk': ['taghierarchy'],\n    }\n```\n\nOnce I made that change, the display works as intended! Everything seems to be in order - both the two-line display issue and the multiple-string-display issue are resolved. I appreciate your help. It was not clear to me until now that this was the line causing the problems, generating the additional m2m relationship; I misunderstood this line, thinking it was intended to describe how the two tables were related.\n\nHopefully this thread will be useful to anyone else who makes this mistake.\n. I am... \ud83d\ude2c  Is there a simpler way to accomplish this that I missed? We have a M2M relationship to a table that has a couple hundred items, for which autocomplete seems to be the easiest way to add those relationships, much better than the default listbox or dropdown list.\n. We do have other attributes on the tags. I guess I don't understand how using FKs with an intermediate table would be any different, functionally, than M2M. I thought this was the same except that Django manages the intermediate table for you if you use M2M.\n\nIs there something about this structure that may be causing the weird styling issues?\n. Sorry for the delay in responding. I've done some investigating and hopefully it will shed some light on the issues (I personally am no closer to understanding what's wrong.)\n\n1) @parsch I was using the same instance for both screenshots, so the HTML should be the same in both cases; unless you were referring to the HTML of a different portion of the page?\n\n2) @sehmaschine I don't have HTML characters in either related_label, **str** or **unicode**; it's just outputting fields that should contain only unicode characters. \n\n3) Because you mentioned related_label, I added one for our tags and discovered that the string representation inside the box will use related_label, but the weird extra string representation hiding behind the box is using **str** (previously I had no related_label defined, so **str** was used for both.) I'm not sure if this suggests what might be wrong in causing the extra text to display.\n\n4) I played around with the related_label text to try and figure out why the display is weird, expanding to two lines. It seems like it _may_ have something to do with the length of the text displayed. After playing around with it for a bit, I've taken screenshots of two examples. The only difference between the two is that I made the text of the related_label in the second one slightly longer, and in that case we get the 2-line textbox, in the shorter-text example I get it how (I assume) it's intended to be displayed. I got the same results in both cases in Chrome, Firefox and Safari on my Mac.\n\n![autocomplete_small](https://cloud.githubusercontent.com/assets/3166184/17221990/be902502-54bb-11e6-8130-ebe757e604e6.jpg)\n\n![autocomplete_large](https://cloud.githubusercontent.com/assets/3166184/17221994/c48b7c9a-54bb-11e6-8847-8e2dbd7c689e.jpg)\n. Yeah, that looks very similar to what we have, except that Django creates the intermediate table, TVShow.tags.through. Here are the relevant sections of our models (removed a bunch of irrelevant stuff):\n\n```\nclass TagHierarchy(models.Model):\n    dict = models.ForeignKey(Dictionary)\n    tag = models.ForeignKey(Tag)\n    parent_tag = models.ForeignKey(Tag, related_name='is_parent_tag', null=True, blank=True)\n\n    @staticmethod\n    def autocomplete_search_fields():\n        return (\"tag__tag_name__icontains\", \"tag__group__group_name__icontains\")\n\n    def related_label(self):\n        return self.tag.kairos_name()\n\nclass InterestDictionary(models.Model):\n    interest_name = models.CharField(max_length=500, unique=True, validators=[no_double_quotes])\n    interest_id = models.CharField(max_length=20, null=True, blank=True)\n    tags = models.ManyToManyField(TagHierarchy, blank=True)\n```\n\n```\nclass TagHierarchyInline(admin.TabularInline):\n    form = TagHierarchyInlineForm\n    model = TVShow.tags.through\n    extra = 0\n    verbose_name = 'Add/Remove Tag'\n    verbose_name_plural = 'Add/Remove Tags'\n    classes = ['grp-collapse grp-closed']\n\n    # For grappelli autocomplete lookup feature\n    raw_id_fields = ('taghierarchy',)\n    autocomplete_lookup_fields = {\n        'm2m': ['taghierarchy'],\n    }\n\nclass TVShowAdmin(admin.ModelAdmin):\n    form = TVShowForm\n    list_display = ('interest_name', 'release_date', 'end_date', 'retired', 'searchable_titles')\n    fieldsets = [\n        ...blah...\n        ('Add/Remove Tags', {'classes': ('placeholder TVShow_tags-group',), 'fields': ()}),\n        ...blah...\n    ]\n    inlines = [TagHierarchyInline, TwitterHandleInline]\n```\n. I'm not trying to be difficult here, I genuinely don't understand how what you're describing is functionally any different from what I did. Django created the table below automatically, because I defined the ManyToManyField in TVShow (TVShow inherits from InterestDictionary). \n![image](https://cloud.githubusercontent.com/assets/3166184/17332502/97b870d8-5894-11e6-8a78-b1a6e5b59dde.png)\n\nIt's a table that has three fields: an id, a foreign key to the TVShow model, and a foreign key to the TagHierarchy model - just like in your example of the TagToParent intermediate table. My inline is based on that model, the automatically created one, accessed via TVShow.tags.through, just like your inline is based on TagToParent.\n\nWhat I really don't understand about your suggestions are:\n- If my use of ManyToManyField is inappropriate here, in what situation _would_ you use ManyToManyField? A Tag can be applied to many Interests, and an Interest can have many tags. I don't see why I wouldn't use ManyToManyField.\n- Given that I'm using a ManyToManyField, how _should_ I display that in the admin site? The default display is a select-box, which is cumbersome to use for a large list of Tags. I figured it would be easier, then, to use an inline so tags could be individually added and removed; is there a way to do this without an inline?\n\nI will try to create some test models the way you described and see if I get any difference in behavior.\n. Aha! We finally discovered the problem, and understand a little better what you were trying to tell us. The issue was with this line in the intermediate table inline:\n\n```\nautocomplete_lookup_fields = {\n        'm2m': ['taghierarchy'],\n    }\n```\n\nIt should be:\n\n```\nautocomplete_lookup_fields = {\n        'fk': ['taghierarchy'],\n    }\n```\n\nOnce I made that change, the display works as intended! Everything seems to be in order - both the two-line display issue and the multiple-string-display issue are resolved. I appreciate your help. It was not clear to me until now that this was the line causing the problems, generating the additional m2m relationship; I misunderstood this line, thinking it was intended to describe how the two tables were related.\n\nHopefully this thread will be useful to anyone else who makes this mistake.\n. ",
    "Borkason": "Nice to hear :)\n\nAbout your objection. I fully agree, the possibility that users choose to ignore the suggestions persist. However, in my case I had to weigh up usability versus consistency. Since the product name is only a descriptive property, it's not bad if there are slight differences. Thanks for the hint.\n. Invoice: I can click on the magnifying glass and choose an invoice. If I type in a number autocomplete does not work. There is no HTTP/GET request sent to the server.\n\nCredit Note: Everything works okay.\n. Oooohhh, that explains why the value is a list. (Something that I forgot to ask in the other question! :+1: \n\nFunny, as soon as you do it right, everything works perfectly.\n. Just to clarify:\n1. So what I have is the possibility to either remove `id__iexact` if I'd like to search only for `name__icontains`? Or add the option to search for a third, fourth, \u2026 field within the object?  \nI tried to remove `id__iexact` leaving only `name__icontains`, but that gives me an error, so I assume I did not understand that part.\n1. and 3. Thanks, I understood! :smile: \n. Okay thank you for clarifying this. The error would be my fault then!\n. Nice to hear :)\n\nAbout your objection. I fully agree, the possibility that users choose to ignore the suggestions persist. However, in my case I had to weigh up usability versus consistency. Since the product name is only a descriptive property, it's not bad if there are slight differences. Thanks for the hint.\n. Invoice: I can click on the magnifying glass and choose an invoice. If I type in a number autocomplete does not work. There is no HTTP/GET request sent to the server.\n\nCredit Note: Everything works okay.\n. Oooohhh, that explains why the value is a list. (Something that I forgot to ask in the other question! :+1: \n\nFunny, as soon as you do it right, everything works perfectly.\n. Just to clarify:\n1. So what I have is the possibility to either remove `id__iexact` if I'd like to search only for `name__icontains`? Or add the option to search for a third, fourth, \u2026 field within the object?  \nI tried to remove `id__iexact` leaving only `name__icontains`, but that gives me an error, so I assume I did not understand that part.\n1. and 3. Thanks, I understood! :smile: \n. Okay thank you for clarifying this. The error would be my fault then!\n. ",
    "askoretskiy": "It occurs when running on Django 1.9.8 and grapelli 2.8.1\n\nGrapelli 2.8.1 officially supports Django 1.9.x, but given piece of template`{% load url from future %}` is not compatible with it. Also, comment in the code states that this piece was added to support Django < 1.5 that we don't support in this branch.\n\nSo it should be completely fine to apply my patch that simply disable that code. Sorry for a confusion.\n. I got this error when I run the tests with all warnings shown. Also, just keep in mind that `{% load url from future %}` simply does not work in Django 1.9. That would crash the code once we use this template.\n. It occurs when running on Django 1.9.8 and grapelli 2.8.1\n\nGrapelli 2.8.1 officially supports Django 1.9.x, but given piece of template`{% load url from future %}` is not compatible with it. Also, comment in the code states that this piece was added to support Django < 1.5 that we don't support in this branch.\n\nSo it should be completely fine to apply my patch that simply disable that code. Sorry for a confusion.\n. I got this error when I run the tests with all warnings shown. Also, just keep in mind that `{% load url from future %}` simply does not work in Django 1.9. That would crash the code once we use this template.\n. ",
    "mazdakb": "django-smuggler also has stopped working due to this problem in Django 1.9.9 with smuggler 0.7.0 (#773)\n. django-smuggler also has stopped working due to this problem in Django 1.9.9 with smuggler 0.7.0 (#773)\n. ",
    "sonarun": "It's definitely Grappelli, I was even having the issue on non-autocomplete fields. I modified the code in the Grappelli css and it is working fine. It's an issue that i've been having for a while.\n\nThe CSS Should be:\n\n```\n\n.related-widget-wrapper {\n    float: left;\n    display: flex;\n}\n\n.grp-related-widget-tools {\n    position: relative;\n    top: 2px;\n    z-index: 1;\n}\n\n    input + &,\n    select + &,\n    textarea + &,\n    .radiolist + &,\n    .checkboxlist + & {\n       position: relative;\n       display: inline-block;\n       float: right;\n       padding-left: 0;\n       margin-right: 0\n    }\n```\n\nI was working on a production system, so I didn't have access to the compass files at the time.\n\nIn a few days I can spin up another test system and I will issue a pull request. I was wondering if anyone had noticed it.\n. It's definitely Grappelli, I was even having the issue on non-autocomplete fields. I modified the code in the Grappelli css and it is working fine. It's an issue that i've been having for a while.\n\nThe CSS Should be:\n\n```\n\n.related-widget-wrapper {\n    float: left;\n    display: flex;\n}\n\n.grp-related-widget-tools {\n    position: relative;\n    top: 2px;\n    z-index: 1;\n}\n\n    input + &,\n    select + &,\n    textarea + &,\n    .radiolist + &,\n    .checkboxlist + & {\n       position: relative;\n       display: inline-block;\n       float: right;\n       padding-left: 0;\n       margin-right: 0\n    }\n```\n\nI was working on a production system, so I didn't have access to the compass files at the time.\n\nIn a few days I can spin up another test system and I will issue a pull request. I was wondering if anyone had noticed it.\n. ",
    "florianm": "The latest grappelli master works fine on my end with Django 1.10.2.\n\nMy only grief is the delete URL in the change_form: the template doesn't seem to receive a context, so the URL is simply \"delete/\", so the link resolves to \"admin/app_name/model_name/pk/change/delete/\" instead of \".../pk/delete\".\nThe problem may lie with fsm-admin.\n\nDjango==1.10.2\ndjango-grappelli==2.8.2\ndjango-fsm==2.4.0\ndjango-fsm-admin==1.2.3\ndjango-fsm-log==1.3.0\n. @sehmaschine thanks for the heads up! Running stable/2.9.x now - the problem with delete link persists, but coming from django-fsm-admin's submit template which does not seem to be receiving the request context.\n. The latest grappelli master works fine on my end with Django 1.10.2.\n\nMy only grief is the delete URL in the change_form: the template doesn't seem to receive a context, so the URL is simply \"delete/\", so the link resolves to \"admin/app_name/model_name/pk/change/delete/\" instead of \".../pk/delete\".\nThe problem may lie with fsm-admin.\n\nDjango==1.10.2\ndjango-grappelli==2.8.2\ndjango-fsm==2.4.0\ndjango-fsm-admin==1.2.3\ndjango-fsm-log==1.3.0\n. @sehmaschine thanks for the heads up! Running stable/2.9.x now - the problem with delete link persists, but coming from django-fsm-admin's submit template which does not seem to be receiving the request context.\n. ",
    "torchingloom": "sorry )) it was in 2.8.3\n. sorry )) it was in 2.8.3\n. ",
    "zobbo": "Ah excellent - time to upgrade. Many thanks!\r\n\r\nIan. Ah excellent - time to upgrade. Many thanks!\r\n\r\nIan. ",
    "surennata": "Yes.  This issues seems to have gone now.  Don't know what was wrong before and how that was corrected.\r\n\r\nAnyways, thanks for your time on this issue.  \r\n\r\nPlease feel free to reject this issue.  Or should I do it?. Yes.  This issues seems to have gone now.  Don't know what was wrong before and how that was corrected.\r\n\r\nAnyways, thanks for your time on this issue.  \r\n\r\nPlease feel free to reject this issue.  Or should I do it?. ",
    "dahfool": "@parsch I have added an admin.css file which contains all my overwrites after screen.css and output.css\r\n```html\r\n<link href=\"/static/grappelli/stylesheets/screen.css\" rel=\"stylesheet\" type=\"text/css\" media=\"all\">\r\n<link href=\"/static/grappelli/stylesheets/mueller/grid/output.css\" rel=\"stylesheet\" type=\"text/css\" media=\"screen\">\r\n\r\n<link href=\"/static/stylesheets/admin.css\" rel=\"stylesheet\" media=\"screen\">\r\n```. @parsch \ud83d\udc4d  Thanks, in future versions maybe look at methodologies like smacss or bem, which might make overwriting easier. . @parsch I have added an admin.css file which contains all my overwrites after screen.css and output.css\r\n```html\r\n<link href=\"/static/grappelli/stylesheets/screen.css\" rel=\"stylesheet\" type=\"text/css\" media=\"all\">\r\n<link href=\"/static/grappelli/stylesheets/mueller/grid/output.css\" rel=\"stylesheet\" type=\"text/css\" media=\"screen\">\r\n\r\n<link href=\"/static/stylesheets/admin.css\" rel=\"stylesheet\" media=\"screen\">\r\n```. @parsch \ud83d\udc4d  Thanks, in future versions maybe look at methodologies like smacss or bem, which might make overwriting easier. . ",
    "jamesbaltar": "Same here, I'm also encountering this issue on pop-ups with `related_lookup_fields`. If it helps here's the versions that I'm using in `Python3`:\r\n\r\n`Django==1.9.8`\r\n`django-grappelli==2.9.1`\r\n. Same here, I'm also encountering this issue on pop-ups with `related_lookup_fields`. If it helps here's the versions that I'm using in `Python3`:\r\n\r\n`Django==1.9.8`\r\n`django-grappelli==2.9.1`\r\n. ",
    "ecomesana": "Check version of grappelli for your version of django. \r\n@jamesbaltar since you are using django 1.9.8, you shoud be using django-grappelli 2.8.3 (as is explained in README.md: Grappelli 2.8.3 (November 8th, 2016): Compatible with Django 1.9)\r\n\r\nI was having the same problem until I realized about that.... Check version of grappelli for your version of django. \r\n@jamesbaltar since you are using django 1.9.8, you shoud be using django-grappelli 2.8.3 (as is explained in README.md: Grappelli 2.8.3 (November 8th, 2016): Compatible with Django 1.9)\r\n\r\nI was having the same problem until I realized about that.... ",
    "Cediddi": "Can I help about this PR? It's blocking my workflow.. @sehmaschine , were you be able to check the compatibility?. Can I help about this PR? It's blocking my workflow.. @sehmaschine , were you be able to check the compatibility?. ",
    "bluszcz": "It helped me in making grapelli work on 1.11.. It helped me in making grapelli work on 1.11.. ",
    "orlra": "its single file override so you should be able to merge it to all dev branches.. Ok I see what you meant. I should push it to stable 2.7.x instead ? I just thought dev branch was a test before things go to stable.\r\nMy project jumps between LTS versions and I need this in 1.8 Django. Thats why I targeted this branch. you should be able to cherry pick it up to all devs branches because from 2.7 nothing changed in this file.. If you with we can merge it to any other branch, But I would like to see it on stable/2.7.x if possible.. its single file override so you should be able to merge it to all dev branches.. Ok I see what you meant. I should push it to stable 2.7.x instead ? I just thought dev branch was a test before things go to stable.\r\nMy project jumps between LTS versions and I need this in 1.8 Django. Thats why I targeted this branch. you should be able to cherry pick it up to all devs branches because from 2.7 nothing changed in this file.. If you with we can merge it to any other branch, But I would like to see it on stable/2.7.x if possible.. ",
    "mapher87": "```python\r\n# models\r\nclass Author(models.Model):\r\n    identity = models.CharField(max_length=64, unique=True)\r\n\r\nclass Book(models.Model):\r\n    author = models.ForeignKey(Author, to_field='identity')\r\n\r\n# admin\r\nadmin.site.register(Book, ModelAdmin,\r\n    raw_id_fields=['author', ],\r\n    related_lookup_fields=['author', ],\r\n)\r\n```. ```python\r\n# models\r\nclass Author(models.Model):\r\n    identity = models.CharField(max_length=64, unique=True)\r\n\r\nclass Book(models.Model):\r\n    author = models.ForeignKey(Author, to_field='identity')\r\n\r\n# admin\r\nadmin.site.register(Book, ModelAdmin,\r\n    raw_id_fields=['author', ],\r\n    related_lookup_fields=['author', ],\r\n)\r\n```. ",
    "abithyzis": "I am following up on another issue in the RelatedObjectLookups.js\r\nThe `elem` referenced [here](https://github.com/sehmaschine/django-grappelli/blob/a0e442d8e5ba02a1b976d6561ce34a0bb7cccfc7/grappelli/static/admin/js/admin/RelatedObjectLookups.js#L117) is undefined \r\nNot sure if this will be part of the bigger overhaul. I am following up on another issue in the RelatedObjectLookups.js\r\nThe `elem` referenced [here](https://github.com/sehmaschine/django-grappelli/blob/a0e442d8e5ba02a1b976d6561ce34a0bb7cccfc7/grappelli/static/admin/js/admin/RelatedObjectLookups.js#L117) is undefined \r\nNot sure if this will be part of the bigger overhaul. ",
    "AndreiHondrari": "Not sure if more changes are required on : https://github.com/sehmaschine/django-grappelli/pull/819/files#diff-c26c185ae4abda98847e6f5404c4c474 @sehmaschine what do you think ?. Not sure if more changes are required on : https://github.com/sehmaschine/django-grappelli/pull/819/files#diff-c26c185ae4abda98847e6f5404c4c474 @sehmaschine what do you think ?. ",
    "rossmechanic": "+1 . +1 . ",
    "r3m0t": "I made the entire PR on github's website. I'll download and try it out now.. I tested 4d7a1a8f4550810f3f2a17c5b0b59e4b16aa873e\r\n\r\n```\r\nproject_name/users/admin.py\r\n43:        messages.add_message(request, messages.INFO, mark_safe('search faster:<ol><li>good option, or</li><li>less good option</li></ol>'))\r\n44:        messages.add_message(request, messages.INFO, 'another message, this time without HTML')\r\n```\r\n<img width=\"720\" alt=\"screen shot 2017-10-05 at 16 38 35\" src=\"https://user-images.githubusercontent.com/1485998/31236310-a7db7bdc-a9eb-11e7-9db0-22f8cf857eaf.png\">\r\n\r\n(the sibling selector is tested by the second message). I tested off pypi:\r\n<img width=\"524\" alt=\"screen shot 2017-10-05 at 16 35 58\" src=\"https://user-images.githubusercontent.com/1485998/31236170-4e2f15d0-a9eb-11e7-905b-8a92dd2f4ca3.png\">\r\n. I made the entire PR on github's website. I'll download and try it out now.. I tested 4d7a1a8f4550810f3f2a17c5b0b59e4b16aa873e\r\n\r\n```\r\nproject_name/users/admin.py\r\n43:        messages.add_message(request, messages.INFO, mark_safe('search faster:<ol><li>good option, or</li><li>less good option</li></ol>'))\r\n44:        messages.add_message(request, messages.INFO, 'another message, this time without HTML')\r\n```\r\n<img width=\"720\" alt=\"screen shot 2017-10-05 at 16 38 35\" src=\"https://user-images.githubusercontent.com/1485998/31236310-a7db7bdc-a9eb-11e7-9db0-22f8cf857eaf.png\">\r\n\r\n(the sibling selector is tested by the second message). I tested off pypi:\r\n<img width=\"524\" alt=\"screen shot 2017-10-05 at 16 35 58\" src=\"https://user-images.githubusercontent.com/1485998/31236170-4e2f15d0-a9eb-11e7-905b-8a92dd2f4ca3.png\">\r\n. ",
    "sa9": "I having the same issue as well. Any solution for this? . I having the same issue as well. Any solution for this? . ",
    "EpicEric": "I ran into the same issue with Grappelli 2.9.1, and it turns out it was because I did not register `'another_app.OtherModel'` in Django Admin. [From the documentation](https://django-grappelli.readthedocs.io/en/latest/customization.html#autocomplete-lookups):\r\n\r\n> **Note**\r\n> In order to use autocompletes, you need to register both ends (models) of the relationship with your `admin.site`.\r\n\r\n@pista329 Could you verify if this solves your issue?. I ran into the same issue with Grappelli 2.9.1, and it turns out it was because I did not register `'another_app.OtherModel'` in Django Admin. [From the documentation](https://django-grappelli.readthedocs.io/en/latest/customization.html#autocomplete-lookups):\r\n\r\n> **Note**\r\n> In order to use autocompletes, you need to register both ends (models) of the relationship with your `admin.site`.\r\n\r\n@pista329 Could you verify if this solves your issue?. "
}