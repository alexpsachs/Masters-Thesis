{
    "rsms": "As mogrify is basically the same thing as \"convert\" (except that it replaces the original image) I would rather see this being integrated as a flag `inplace: true|fase` which can be passed to appropriate commands. The \"convert\" program is already partially \"abstracted away\" (e.g. resizing an image).\n\nSorry for my late response BTW.\n. \"enobrev closed the pull request\"\n. Thanks. Since this patch couldn't be applied (readme has been rewritten), I fixed it manually at cba60ba\n. Thanks! Since this diff could no longer be applied I merged it manually. At 751aca9\n. Would be great if you could rebase this on current master and make sure that resize, gravity etc is specified even when you provide offset.\n. Thanks\n. Fixed in 34c8deb\n. Fixed in f22b58c (better to group var declarations at the top of a function scope, so there are no duplicate declarations).\n. Thanks for being patient guys\n. Guys, this is great. But pretty much every pull request I've merged so far has broken the module for someone else. Since this module relies on a system's ImageMagick CLI tools, changing the parser for a certain version of those tools (i.e. their output) means the parser will potentially fail for other versions of the code. I recommend you fork this module and name it something like \"imagemagick-X.Y\" for your own production. I'm not using this module myself anymore (I wrote it for Dropular.net, which is not around anymore) and so I have no interest in spending time on maintaining this.\n\nIf someone want's to take over maintenance, please let me know (ping me at @rsms on twitter) and I'll add you as a committer or transfer ownership in NPM.\n. As mogrify is basically the same thing as \"convert\" (except that it replaces the original image) I would rather see this being integrated as a flag `inplace: true|fase` which can be passed to appropriate commands. The \"convert\" program is already partially \"abstracted away\" (e.g. resizing an image).\n\nSorry for my late response BTW.\n. \"enobrev closed the pull request\"\n. Thanks. Since this patch couldn't be applied (readme has been rewritten), I fixed it manually at cba60ba\n. Thanks! Since this diff could no longer be applied I merged it manually. At 751aca9\n. Would be great if you could rebase this on current master and make sure that resize, gravity etc is specified even when you provide offset.\n. Thanks\n. Fixed in 34c8deb\n. Fixed in f22b58c (better to group var declarations at the top of a function scope, so there are no duplicate declarations).\n. Thanks for being patient guys\n. Guys, this is great. But pretty much every pull request I've merged so far has broken the module for someone else. Since this module relies on a system's ImageMagick CLI tools, changing the parser for a certain version of those tools (i.e. their output) means the parser will potentially fail for other versions of the code. I recommend you fork this module and name it something like \"imagemagick-X.Y\" for your own production. I'm not using this module myself anymore (I wrote it for Dropular.net, which is not around anymore) and so I have no interest in spending time on maintaining this.\n\nIf someone want's to take over maintenance, please let me know (ping me at @rsms on twitter) and I'll add you as a committer or transfer ownership in NPM.\n. ",
    "dustMason": "i guess this never got resolved? @rsms if you can elaborate a little on how you think this flag should be implemented i can take a crack at it\n. i guess this never got resolved? @rsms if you can elaborate a little on how you think this flag should be implemented i can take a crack at it\n. ",
    "streunerlein": "@rsms Additionally, mogrify supports wildcards in input filenames which is for me the most important difference to convert... It would be really nice to have it in this module.\n. @rsms Additionally, mogrify supports wildcards in input filenames which is for me the most important difference to convert... It would be really nice to have it in this module.\n. ",
    "thiagoarrais": "Still needs some love on the documentation side. But I can work on that if this gets merged in.\n. +1\n\n(I have already pulled this into my branch)\n. Maybe I'm misunderstanding here. But isn't this already supported in convert both for input and output?\n\nThis code works for me:\n\n```\nvar im = require('imagemagick'),\n    fs = require('fs');\n\nconv = im.convert(['-resize', '640x', '-', '/tmp/kitten-640.jpg'])\noutput = fs.createWriteStream('/tmp/kitten-640.jpg');\ninput = fs.createReadStream('/tmp/kitten.jpg');\nconv.on('data', function(chunk) { output.write(chunk, 'binary'); });\nconv.on('end', function() { output.end(); } );\ninput.on('data', function(chunk) { conv.stdin.write(chunk, null); });\ninput.on('end', function() { conv.stdin.end(); });\n```\n\nIs this what you're talking about?\n. Rasmus, I think it is ok to close this pull request. Isn't it, abram?\n. Thanks. Applied to my fork.\n. I've pulled this into my fork.\n. Still needs some love on the documentation side. But I can work on that if this gets merged in.\n. +1\n\n(I have already pulled this into my branch)\n. Maybe I'm misunderstanding here. But isn't this already supported in convert both for input and output?\n\nThis code works for me:\n\n```\nvar im = require('imagemagick'),\n    fs = require('fs');\n\nconv = im.convert(['-resize', '640x', '-', '/tmp/kitten-640.jpg'])\noutput = fs.createWriteStream('/tmp/kitten-640.jpg');\ninput = fs.createReadStream('/tmp/kitten.jpg');\nconv.on('data', function(chunk) { output.write(chunk, 'binary'); });\nconv.on('end', function() { output.end(); } );\ninput.on('data', function(chunk) { conv.stdin.write(chunk, null); });\ninput.on('end', function() { conv.stdin.end(); });\n```\n\nIs this what you're talking about?\n. Rasmus, I think it is ok to close this pull request. Isn't it, abram?\n. Thanks. Applied to my fork.\n. I've pulled this into my fork.\n. ",
    "gijsk": "+1, I'm also using a similar fix.\n. By the way, @abram, did you fix the consumers (exports.resizeCall and friends)?\n. +1, I'm also using a similar fix.\n. By the way, @abram, did you fix the consumers (exports.resizeCall and friends)?\n. ",
    "abram": "I designed it to be backwards compatible. I've been thinking about this some more though, and i think the right approach is to avoid putting all the data in a Buffer and use streams instead. That's the right way to gracefully deal with large files.\n\nDoes that sound like a better approach to you guys?\n. Heh, that does look like exactly what I'm looking for. Somehow I missed that\nit was possible to do that. I'll switch to using streams, which should\neliminate the need to increase the max buffer size.\n\nThanks!\n\n-Abe\n\nOn Sun, Jul 10, 2011 at 7:46 AM, thiagoarrais <\nreply@reply.github.com>wrote:\n\n> Maybe I'm misunderstanding here. But isn't this already supported in\n> convert both for input and output?\n> \n> This code works for me:\n> \n>    var im = require('imagemagick'),\n>        fs = require('fs');\n> \n>    conv = im.convert(['-resize', '640x', '-', '/tmp/kitten-640.jpg'])\n>    output = fs.createWriteStream('/tmp/kitten-640.jpg');\n>    input = fs.createReadStream('/tmp/kitten.jpg');\n>    conv.on('data', function(chunk) { output.write(chunk, 'binary'); });\n>    conv.on('end', function() { output.end(); } );\n>    input.on('data', function(chunk) { conv.stdin.write(chunk, null); });\n>    input.on('end', function() { conv.stdin.end(); });\n> \n> Is this what you're talking about?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/rsms/node-imagemagick/pull/11#issuecomment-1541562\n. Yep, fine with me.\n. I designed it to be backwards compatible. I've been thinking about this some more though, and i think the right approach is to avoid putting all the data in a Buffer and use streams instead. That's the right way to gracefully deal with large files.\n\nDoes that sound like a better approach to you guys?\n. Heh, that does look like exactly what I'm looking for. Somehow I missed that\nit was possible to do that. I'll switch to using streams, which should\neliminate the need to increase the max buffer size.\n\nThanks!\n\n-Abe\n\nOn Sun, Jul 10, 2011 at 7:46 AM, thiagoarrais <\nreply@reply.github.com>wrote:\n\n> Maybe I'm misunderstanding here. But isn't this already supported in\n> convert both for input and output?\n> \n> This code works for me:\n> \n>    var im = require('imagemagick'),\n>        fs = require('fs');\n> \n>    conv = im.convert(['-resize', '640x', '-', '/tmp/kitten-640.jpg'])\n>    output = fs.createWriteStream('/tmp/kitten-640.jpg');\n>    input = fs.createReadStream('/tmp/kitten.jpg');\n>    conv.on('data', function(chunk) { output.write(chunk, 'binary'); });\n>    conv.on('end', function() { output.end(); } );\n>    input.on('data', function(chunk) { conv.stdin.write(chunk, null); });\n>    input.on('end', function() { conv.stdin.end(); });\n> \n> Is this what you're talking about?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/rsms/node-imagemagick/pull/11#issuecomment-1541562\n. Yep, fine with me.\n. ",
    "greggreenhaw": "Why was this fix never implemented it is ridiculous that you can not increase the max buffer size as a resizeArgs or via convert directly.\n. Why was this fix never implemented it is ridiculous that you can not increase the max buffer size as a resizeArgs or via convert directly.\n. ",
    "xcambar": "Please merge or explain...\n. Please merge or explain...\n. ",
    "ming-codes": "It's closed. Was it not merged?\n. It's closed. Was it not merged?\n. ",
    "SamDecrock": "no, it was not.\nMontage is still missing from this module\n. no, it was not.\nMontage is still missing from this module\n. ",
    "ctide": "+1\n. +1\n. ",
    "alexjamesbrown": "+1 - 6 months and this hasn't been pulled in?!\nis this project still active??\n. guess not. what a real shame\n. +1 - 6 months and this hasn't been pulled in?!\nis this project still active??\n. guess not. what a real shame\n. ",
    "jnak": "+1\n. +1\n. ",
    "defvol": "npm package still have it!\n\n\u251c\u2500\u2500 imagemagick@0.1.2\n\nHackBook:gmx Rod$ grep -R \"require.*sys\" \\* \nnode_modules/imagemagick/imagemagick.js:var sys = require('sys'),\nnode_modules/imagemagick/test-crop.js:var sys = require('sys'),\nnode_modules/imagemagick/test.js:var sys = require('sys'),\n. npm package still have it!\n\n\u251c\u2500\u2500 imagemagick@0.1.2\n\nHackBook:gmx Rod$ grep -R \"require.*sys\" \\* \nnode_modules/imagemagick/imagemagick.js:var sys = require('sys'),\nnode_modules/imagemagick/test-crop.js:var sys = require('sys'),\nnode_modules/imagemagick/test.js:var sys = require('sys'),\n. ",
    "dharFr": "+1\n. Yes it does, but as @wilhelmbot noticed, the last version on npm registry (0.1.2) is not up to date with the repository.\n. +1\n. Yes it does, but as @wilhelmbot noticed, the last version on npm registry (0.1.2) is not up to date with the repository.\n. ",
    "laufzeit": "+1\n. +1\n. ",
    "tomasikp": "didn't #30 solve this?\n. didn't #30 solve this?\n. ",
    "domenic": "Can you publish a new version to npm? Trying to get ready for the incoming Node 0.8...\n. @wavded Nice find; I like the built-in streaming support.\n. Can you publish a new version to npm? Trying to get ready for the incoming Node 0.8...\n. @wavded Nice find; I like the built-in streaming support.\n. ",
    "wavded": "+1 @rsms could you publish a new one?\n. actually i just ported over to https://github.com/aheckmann/gm, was pretty simple to do so (has an imagemagick wrapper as well) if anyone is interested\n. +1 @rsms could you publish a new one?\n. actually i just ported over to https://github.com/aheckmann/gm, was pretty simple to do so (has an imagemagick wrapper as well) if anyone is interested\n. ",
    "davidmurdoch": "Please pull this in soon.\n. This was \"fixed\" in node 0.8.1 https://github.com/joyent/node/commit/f2a9ed487369ab7222522e1097708550adbe165c\n. Please pull this in soon.\n. This was \"fixed\" in node 0.8.1 https://github.com/joyent/node/commit/f2a9ed487369ab7222522e1097708550adbe165c\n. ",
    "heldr": "+1\n. +1\n. ",
    "tiratatp": "+1\n. +1\n. ",
    "nherment": "+1\n. +1\n. ",
    "newbyca": "+1\n. +1\n. ",
    "glesperance": "+1\n. @viatropos Doing what @coyer suggested won't be enough as you're not guaranteed that **close** will have fired by then.\n\n@bigeasy Are you sure **close** will always fire with both **code** & **signal** as arguments ? The node documentation doesn't seem to mention that anywhere?\n\n@rsms Any chance , this gets included & pushed to npm? This is a really serious issue as its making appa crash and so blocks anybody using node-imagemagick from updating to node 0.8.x.\n. @bigeasy Awesome then.\n\n@viatropos Thanks for the link. _gm_ definitely looks awesome ; although I think I'll just make a fork of this package right now since I've got other deadlines.\n. +1\n. @viatropos Doing what @coyer suggested won't be enough as you're not guaranteed that **close** will have fired by then.\n\n@bigeasy Are you sure **close** will always fire with both **code** & **signal** as arguments ? The node documentation doesn't seem to mention that anywhere?\n\n@rsms Any chance , this gets included & pushed to npm? This is a really serious issue as its making appa crash and so blocks anybody using node-imagemagick from updating to node 0.8.x.\n. @bigeasy Awesome then.\n\n@viatropos Thanks for the link. _gm_ definitely looks awesome ; although I think I'll just make a fork of this package right now since I've got other deadlines.\n. ",
    "TooTallNate": "@bigeasy Your ternary condition will give a false negative once node reaches 1.0.\n. @bigeasy Your ternary condition will give a false negative once node reaches 1.0.\n. ",
    "bigeasy": "Yup. Will fix.\n. @TooTallNate Better?\n. @glesperance Nope. Not sure at all. Let me ask around on the IRC and get back to you (with a patch if necessary).\n. @isaacs says `close` is the new `exit`; it behaves as `exit` used to. Here's where `close` is [emitted](https://github.com/joyent/node/blob/085a09874b03a1e5401d911ef61e9451b6ea3b30/lib/child_process.js#L634).\n. Yup. Will fix.\n. @TooTallNate Better?\n. @glesperance Nope. Not sure at all. Let me ask around on the IRC and get back to you (with a patch if necessary).\n. @isaacs says `close` is the new `exit`; it behaves as `exit` used to. Here's where `close` is [emitted](https://github.com/joyent/node/blob/085a09874b03a1e5401d911ef61e9451b6ea3b30/lib/child_process.js#L634).\n. ",
    "dbogatz": "Maybe the same issue:\nI noticed that \"exit\" sometimes get called before \"data\". So the callback gets called without any data collected in stdout.\nI solved the issue simply by wrapping the exit-listener inside process.nextTick(function () {})\n. Maybe the same issue:\nI noticed that \"exit\" sometimes get called before \"data\". So the callback gets called without any data collected in stdout.\nI solved the issue simply by wrapping the exit-listener inside process.nextTick(function () {})\n. ",
    "lancejpollard": "Having the same issue. When I run `im.identify(path, function() {})`, the code:\n\n``` javascript\nvar v = stdout.split(/ +/),\n  x = v[2].split(/x/);\n```\n\nfails; `v[2]` is null. This happens because `exit` is called before `data`. I don't know why, but the event handler from `exit` to `close` fixes it:\n\n``` javascript\n// in the exec2 function\nchild.addListener(\"close\", function (code, signal) {\n```\n\nGoing to try what @coyer suggested. @rsms can you update this please?\n\nSide note, wrapping exit in `process.nextTick` doesn't always work for me, I'm having to set a timer to go off after about 50 milliseconds.\n. Using https://github.com/aheckmann/gm, it solves all of these problems.\n. Having the same issue. When I run `im.identify(path, function() {})`, the code:\n\n``` javascript\nvar v = stdout.split(/ +/),\n  x = v[2].split(/x/);\n```\n\nfails; `v[2]` is null. This happens because `exit` is called before `data`. I don't know why, but the event handler from `exit` to `close` fixes it:\n\n``` javascript\n// in the exec2 function\nchild.addListener(\"close\", function (code, signal) {\n```\n\nGoing to try what @coyer suggested. @rsms can you update this please?\n\nSide note, wrapping exit in `process.nextTick` doesn't always work for me, I'm having to set a timer to go off after about 50 milliseconds.\n. Using https://github.com/aheckmann/gm, it solves all of these problems.\n. ",
    "bratchenko": "https://github.com/joyent/node/issues/3846\n\nIt's said that close is fired when output buffers are closed. So it's right to wait on close instead of exit.\n. https://github.com/joyent/node/issues/3846\n\nIt's said that close is fired when output buffers are closed. So it's right to wait on close instead of exit.\n. ",
    "jteplitz": "Sorry some console logs leaked through there that I forgot to delete.\n. Definitely, it's a really nice package and doesn't look like it's been maintained in a while.\n. Yep I did: https://github.com/jteplitz602/node-imagemagick\n. No problem. I've also reached out to rsms on twitter to see if he still plans on maintaing this repo.\n. Sorry some console logs leaked through there that I forgot to delete.\n. Definitely, it's a really nice package and doesn't look like it's been maintained in a while.\n. Yep I did: https://github.com/jteplitz602/node-imagemagick\n. No problem. I've also reached out to rsms on twitter to see if he still plans on maintaing this repo.\n. ",
    "jhnlsn": "Exactly what I was looking for, thanks.\n. I'm guessing this package is no longer supported maintained?  Possible you could hand this off to someone else?\n. @bardu for future reference, jteplitz602 added a pull request to this ticket as you can see from those 2 commit's above.  You are always able to grab the code from there or just use that repo instead of this one if the author never accepts the pull request.  As in the case of this repo :)\n. thank you!\n. Exactly what I was looking for, thanks.\n. I'm guessing this package is no longer supported maintained?  Possible you could hand this off to someone else?\n. @bardu for future reference, jteplitz602 added a pull request to this ticket as you can see from those 2 commit's above.  You are always able to grab the code from there or just use that repo instead of this one if the author never accepts the pull request.  As in the case of this repo :)\n. thank you!\n. ",
    "ghost": "Agree, would be nice if someone could take over and further improve this useful package.\n. @jteplitz602\n\nJust wondering did you fork this package? If not could you do so and share?\n. Cool, thanks.\n. Agree, would be nice if someone could take over and further improve this useful package.\n. @jteplitz602\n\nJust wondering did you fork this package? If not could you do so and share?\n. Cool, thanks.\n. ",
    "kschzt": "Sorry, canceling this as incorrect fix, it works on an older version but this one does not.\n. Sorry, canceling this as incorrect fix, it works on an older version but this one does not.\n. ",
    "mfrobben": "Never mind - this isn't the issue, npm doesn't have your latest.\n. Never mind - this isn't the issue, npm doesn't have your latest.\n. ",
    "matth3wga0": "same issue for me, it logs \"resize arg\" when I call crop();\n. same issue for me, it logs \"resize arg\" when I call crop();\n. ",
    "rdingman": "+1 for this pull request. This fix would allow me to use this package in my project.\n. +1 for this pull request. This fix would allow me to use this package in my project.\n. ",
    "matylla": ":+1: Please merge this patch.\n. I've lost hope that @rsms will merge anything :angry: \n. :+1: Please merge this patch.\n. I've lost hope that @rsms will merge anything :angry: \n. ",
    "DevDavido": "+1 :thumbsup:\n. +1 :thumbsup:\n. ",
    "maroshii": ":+1:  \nThis is important since `child_process.exec` and `child_process.spawn` write to stdout and the main process expects the buffer but instead gets rubbish. It took me a while to figure out what the problem was.\nPlease merge.\n. :+1:  \nThis is important since `child_process.exec` and `child_process.spawn` write to stdout and the main process expects the buffer but instead gets rubbish. It took me a while to figure out what the problem was.\nPlease merge.\n. ",
    "hacklschorsch": "Ah crap I forgot to re-base, re-opening with a new pull request. Sorry for the noise\n. Ah crap I forgot to re-base, re-opening with a new pull request. Sorry for the noise\n. ",
    "boutell": "I have verified that the JPEG I attached came through faithfully, including the offending RDF property, so you can test with it if desired.\n\nThanks!\n. I have verified that the JPEG I attached came through faithfully, including the offending RDF property, so you can test with it if desired.\n\nThanks!\n. ",
    "substack": "Somebody added me to this repo without my permission. I'm just going to start closing all issues without merging them if they keep showing up in my feed.\n. Sorry about your pull request but this is spam to me.\n. Somebody added me to this repo without my permission. I'm just going to start closing all issues without merging them if they keep showing up in my feed.\n. Sorry about your pull request but this is spam to me.\n. ",
    "iamdenny": "When it is fixed, please update it to npmjs.org\nThank you.\n. When it is fixed, please update it to npmjs.org\nThank you.\n. ",
    "leanderlee": "Could we please merge this in?\n. Could we please merge this in?\n. ",
    "mattiasrunge": "+1 :thumbsup:\n. +1 :thumbsup:\n. ",
    "h-evers": "+1 for this, needed for me too (Windows, ImageMagick 6.8.6-3 2013-06-25 Q16)\n. I added it by hand locally, but \"crop\" still doesn't work - needed property \"geometry\" is missing in \"identify\" data... So i'm going to adapt it for my need.\n. +1 for this, needed for me too (Windows, ImageMagick 6.8.6-3 2013-06-25 Q16)\n. I added it by hand locally, but \"crop\" still doesn't work - needed property \"geometry\" is missing in \"identify\" data... So i'm going to adapt it for my need.\n. ",
    "hguillermo": "Hey,\n\nIt seems like the maintainers are not really merging pull requests. Maybe I need to contact them to see if I can help. \n. Huh! I had the same problem with crop but now it works. Check that method and print the output. I am sure that value is coming unless your ImageMagick is too old.\n. Hey,\n\nIt seems like the maintainers are not really merging pull requests. Maybe I need to contact them to see if I can help. \n. Huh! I had the same problem with crop but now it works. Check that method and print the output. I am sure that value is coming unless your ImageMagick is too old.\n. ",
    "kadishmal": "When ready to merge, I will update README to add streaming example.\n. When ready to merge, I will update README to add streaming example.\n. ",
    "shawninder": "Any ETA for merging this PR?\n. Any ETA for merging this PR?\n. ",
    "oshalygin": "Any ETA on merging this in? . Any ETA on merging this in? . ",
    "ahailu": "+1 for this fix ... thanks for the fix acardinale ... hopefully it will get pulled in soon.\n. +1 for this fix ... thanks for the fix acardinale ... hopefully it will get pulled in soon.\n. ",
    "dhollenbeck": "+1 Thanks for the fix, but I believe the final solution is http://aheckmann.github.io/gm/\n. +1 Thanks for the fix, but I believe the final solution is http://aheckmann.github.io/gm/\n. ",
    "leahciMic": "\ud83d\udc4e  \n\nWhat does this add?\n. \ud83d\udc4e  \n\nWhat does this add?\n. ",
    "cotko": "Note: identifying usually fails when image includes some other meta info, like comments etc. It's easy to solve this with -strip flag ([which strips image of all profiles and comments](http://linux.die.net/man/1/identify))\n\n``` js\nimagemagick.identify(['-strip', 'myimage.jpg'], function (err, features) {\n\n});\n```\n\ninstead of:\n\n``` js\nimagemagick.identify('myimage.jpg', function (err, features) {\n\n});\n```\n. Note: identifying usually fails when image includes some other meta info, like comments etc. It's easy to solve this with -strip flag ([which strips image of all profiles and comments](http://linux.die.net/man/1/identify))\n\n``` js\nimagemagick.identify(['-strip', 'myimage.jpg'], function (err, features) {\n\n});\n```\n\ninstead of:\n\n``` js\nimagemagick.identify('myimage.jpg', function (err, features) {\n\n});\n```\n. ",
    "JonathanBristow": "Can someone merge this please?\n. This has been merged hasn't it?\n. Can someone merge this please?\n. This has been merged hasn't it?\n. ",
    "rvega": "Please merge :) \n. The console.log statements are still in master branch. See https://github.com/rsms/node-imagemagick/blob/master/imagemagick.js#L300\n. Actually, this is the same as #120. Can someone please merge? pleeeeassssee :)\n. Please merge :) \n. The console.log statements are still in master branch. See https://github.com/rsms/node-imagemagick/blob/master/imagemagick.js#L300\n. Actually, this is the same as #120. Can someone please merge? pleeeeassssee :)\n. ",
    "yutingzhao1991": "Is anybody maintain this project?\n. Oh! I find it : https://github.com/yourdeveloper/node-imagemagick\n. Is anybody maintain this project?\n. Oh! I find it : https://github.com/yourdeveloper/node-imagemagick\n. ",
    "mike1pol": "+1\n. @codetker you can use fixed fork  https://www.npmjs.com/package/@mikepol/imagemagick. +1\n. @codetker you can use fixed fork  https://www.npmjs.com/package/@mikepol/imagemagick. ",
    "auermi": "+1 Please merge this\n. +1 Please merge this\n. ",
    "arsenowitch": "+1\n. +1\n. ",
    "codetker": "I want to know that why the npm version is still five years ago,which remains a bug about svg parsing \u2018imagetrick non-conforming drawing primitive definition text-align\u2019. It drove me mad yesterday. . @mike1pol I am very glad for your timely reply\uff0ceven though it doesn't works. I use imagemagick to convert the output svg (from draw.io) in other image type, it works if there are no words in the svg chart.\r\n1\u3001To deal with \u2018imagetrick non-conforming drawing primitive definition text-align\u2019\uff0cI made a very simple svg with words in it.\r\n\r\n`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"121px\" height=\"61px\" version=\"1.1\" style=\"background-color: rgb(255, 255, 255);\"><defs/><g transform=\"translate(0.5,0.5)\"><rect x=\"0\" y=\"0\" width=\"120\" height=\"60\" fill=\"#ffffff\" stroke=\"#000000\" pointer-events=\"none\"/><g transform=\"translate(41.5,23.5)\"><switch><foreignObject style=\"overflow:visible;\" pointer-events=\"all\" width=\"36\" height=\"12\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 37px; white-space: nowrap; word-wrap: normal; text-align: center;\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display:inline-block;text-align:inherit;text-decoration:inherit;\">\u90fd\u53ef\u4ee5</div></div></foreignObject><text x=\"18\" y=\"12\" fill=\"#000000\" text-anchor=\"middle\" font-size=\"12px\" font-family=\"Helvetica\">\u79d1\u6280</text></switch></g></g></svg>`\r\n\r\n2\u3001An idea came to me that the svg may not stardard ,although it looks well in browsers.So I delete words about 'text-align' to avoid the error.And turns the svg to the bottom.\r\n\r\n`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"121px\" height=\"61px\" version=\"1.1\" style=\"background-color: rgb(255, 255, 255);\"><defs/><g transform=\"translate(0.5,0.5)\"><rect x=\"0\" y=\"0\" width=\"120\" height=\"60\" fill=\"#ffffff\" stroke=\"#000000\" pointer-events=\"none\"/><g transform=\"translate(41.5,23.5)\"><switch><foreignObject style=\"overflow:visible;\" pointer-events=\"all\" width=\"36\" height=\"12\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 37px; white-space: nowrap; word-wrap: normal; \"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display:inline-block;text-decoration:inherit;\">\u90fd\u53ef\u4ee5</div></div></foreignObject><text x=\"18\" y=\"12\" fill=\"#000000\" text-anchor=\"middle\" font-size=\"12px\" font-family=\"Helvetica\">\u79d1\u6280</text></switch></g></g></svg>`\r\n   \r\nIt works for imagemagicks and I got my png.A pity that the png is not what I want, some error tips on it, instand of Chineses words.\r\n\r\n3\u3001I also tried gm( I saw it in your last commit msg in readme.txt)\uff0cit doesn't interrupted\uff0cbut it only convert the part it identified.\r\n\r\n4\u3001I tried imagemagick-native, rsvg, imagemagick2 which all calls node-gym\uff0cbut all of them occurs a problem familiar to https://github.com/nodejs/node-gyp/issues/809. It wastes me a whole afternoon to try to solve the problem but failed.\r\n\r\n5\u3001Lastly\uff0cI use svgexport to get a luck. I used it before ,but it depends on PhantomJS, which is a quite huge guy. It turns out the svg with Chinese words can be well converted. The process of converting for svgexport is more than 2 seconds, while imagemagick only takes one percent.\r\n\r\nSo long haven't I written English, it very kind of you to read my poor words. How I wish imagemagic updates and be better and better!\r\n. I want to know that why the npm version is still five years ago,which remains a bug about svg parsing \u2018imagetrick non-conforming drawing primitive definition text-align\u2019. It drove me mad yesterday. . @mike1pol I am very glad for your timely reply\uff0ceven though it doesn't works. I use imagemagick to convert the output svg (from draw.io) in other image type, it works if there are no words in the svg chart.\r\n1\u3001To deal with \u2018imagetrick non-conforming drawing primitive definition text-align\u2019\uff0cI made a very simple svg with words in it.\r\n\r\n`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"121px\" height=\"61px\" version=\"1.1\" style=\"background-color: rgb(255, 255, 255);\"><defs/><g transform=\"translate(0.5,0.5)\"><rect x=\"0\" y=\"0\" width=\"120\" height=\"60\" fill=\"#ffffff\" stroke=\"#000000\" pointer-events=\"none\"/><g transform=\"translate(41.5,23.5)\"><switch><foreignObject style=\"overflow:visible;\" pointer-events=\"all\" width=\"36\" height=\"12\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 37px; white-space: nowrap; word-wrap: normal; text-align: center;\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display:inline-block;text-align:inherit;text-decoration:inherit;\">\u90fd\u53ef\u4ee5</div></div></foreignObject><text x=\"18\" y=\"12\" fill=\"#000000\" text-anchor=\"middle\" font-size=\"12px\" font-family=\"Helvetica\">\u79d1\u6280</text></switch></g></g></svg>`\r\n\r\n2\u3001An idea came to me that the svg may not stardard ,although it looks well in browsers.So I delete words about 'text-align' to avoid the error.And turns the svg to the bottom.\r\n\r\n`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"121px\" height=\"61px\" version=\"1.1\" style=\"background-color: rgb(255, 255, 255);\"><defs/><g transform=\"translate(0.5,0.5)\"><rect x=\"0\" y=\"0\" width=\"120\" height=\"60\" fill=\"#ffffff\" stroke=\"#000000\" pointer-events=\"none\"/><g transform=\"translate(41.5,23.5)\"><switch><foreignObject style=\"overflow:visible;\" pointer-events=\"all\" width=\"36\" height=\"12\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 37px; white-space: nowrap; word-wrap: normal; \"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display:inline-block;text-decoration:inherit;\">\u90fd\u53ef\u4ee5</div></div></foreignObject><text x=\"18\" y=\"12\" fill=\"#000000\" text-anchor=\"middle\" font-size=\"12px\" font-family=\"Helvetica\">\u79d1\u6280</text></switch></g></g></svg>`\r\n   \r\nIt works for imagemagicks and I got my png.A pity that the png is not what I want, some error tips on it, instand of Chineses words.\r\n\r\n3\u3001I also tried gm( I saw it in your last commit msg in readme.txt)\uff0cit doesn't interrupted\uff0cbut it only convert the part it identified.\r\n\r\n4\u3001I tried imagemagick-native, rsvg, imagemagick2 which all calls node-gym\uff0cbut all of them occurs a problem familiar to https://github.com/nodejs/node-gyp/issues/809. It wastes me a whole afternoon to try to solve the problem but failed.\r\n\r\n5\u3001Lastly\uff0cI use svgexport to get a luck. I used it before ,but it depends on PhantomJS, which is a quite huge guy. It turns out the svg with Chinese words can be well converted. The process of converting for svgexport is more than 2 seconds, while imagemagick only takes one percent.\r\n\r\nSo long haven't I written English, it very kind of you to read my poor words. How I wish imagemagic updates and be better and better!\r\n. "
}