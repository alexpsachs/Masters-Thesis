{
    "MarkBaker": "PHPExcel will still be distributed as \"stripped down\" packages via the CodePlex site (http://phpexcel.codeplex.com) for a while, which won't include the unit tests, etc (Code and Docs package, Code package, Docs package). We'll also probably look at other distributions for the packages: we already use PEAR, but we may also introduce a phar of the code. github will be used as a full source repository, including the slowly growing unit test suite.\n. Fixed, thanks for pointing it out\n. Basic rules for autofilters:\nEach worksheet can only have a single autofilter... at a minimum defined as the cell range to which the autofilter options can be applied... this is what we do at the moment. In Excel2007, this is the ref attribute of the worksheets autoFilter element.\nWhen filters are actually applied, then each column in the range can have one or more custom filters. These are identified by customFilter elements in filterColumn elements.Multiple filter criteria can be combined using AND or OR, and (depending on the datatype) they can include ? or \\* wildcards, and can have an operator such as greaterThanOrEqual.\nIf a filter is applied, then all rows in the range that match the criteria are visible, all other rows are hidden... matching this logic in PHPExcel adds a level of complexity when adding or changing filter criteria.\n\nThe other major element of autofilters is sorting. It appears that autoFilter sorting actually change the content of the rows, so I'd recommend that we don't implement this.\n\n```\n<autoFilter ref=\"D1:E10\">\n    <filterColumn colId=\"0\">\n        <customFilters>\n            <customFilter val=\"A*\"/>\n            <customFilter val=\"*E\"/>\n        </customFilters>\n    </filterColumn>\n    <filterColumn colId=\"1\">\n        <customFilters>\n            <customFilter val=\"2\" operator=\"greaterThanOrEqual\"/>\n        </customFilters>\n    </filterColumn>\n</autoFilter>\n```\n\nMy inclination is to replace the worksheet's autoFilter attribute (defining the range) with an PHPExcel_AutoFilter object comprising a range attribute and an array of PHPExcel_AutoFilter_Column objects, the PHPExcel_AutoFilter_Column objects comprising the array of rules (and the operator constants).\n. It should be fairly easy to create the appropriate autofiltering classes, and to modify the Excel2007 Reader and Writer to handle this... the biggest problems I see are providing the appropriate methods to add/remove/modify the filter criteria, validating the filtering rules and then resetting all the row hidden attributes as appropriate.\n. Note - Can't find any autofiltering in the Excel5 Reader other than in the sheet protection record, looks like it isn't implemented in the reader\n. The refactoring committed for core 15 minutes ago should be completely transparent to any existing user code that accesses the autofilter range for backward compatibility\n. The changes committed to the autofilter branch so far simply replicate existing functionality... except using an autofilter class instead of a simple string. Using it should be absolutely identical to the existing 1.7.7 code (for backward compatibility). I'm now working on the additions to that class for the actual expression filters, but haven't committed any of that to the branch yet\n. OK, so not quite as straightforward as I'd hoped - there's a couple of more complex types for date selections that I still need to make allowance for, but I've got the guts of reading, manipulating and writing now complete. Still need to do some fine tuning; and then I'll need to manage the data testing and hiding/unhiding or rows.\nI'm also going to adjust the autoCalculate column width while I'm about it to allow for teh width of the autofilter dropdown icon... but on schedule still to have the basics for Excel2007 working by next weekend, and on target for a 1.7.8 release.\n. That's all my code for AutoFilter expressions (core, for Excel2007 Reader and Excel2007 Writer) merged into the develop branch. This provides support for simple/standard filters, dategroup filters, custom filters, dynamic filters and top10 filters. It does not support colorFilters (the Rich Text rules are a real PITA), iconFilters or external filter lists - though I suspect these are all relatively rare anyway). Documentation is included, with a new AutoFilter Reference document.\n\nThe only thing still outstanding is handling the actual hide/unhide of rows appropriate to the actual filter rules. That will take a little more work to implement.... as a nice bonus though, a lot of the filtering code should be relevant when I finally start to implement pivot tables.\n. Autofilter Expressions implemented in core, and for Excel2007 Reader and Writer in Production release 1.7.8\n. Thanks, much appreciated\n\nAccepted!\nMerged manually to put it in the develop branch rather than in master\n. Bugfix accepted (with Progi1984's modification). Thanks for submitting.\n\nMerged manually to incorporate it into the develop branch rather than master\n. Thanks. Will test with all PDF renderers before merging.\n. Applying manually - will merge later tonight\n. Applied manually. Thanks for the patch\n. Thanks for the patch. I will merge it, but I'm going to make some modifications to support locale currencies first\n. Thanks - now merged with some modification for locale currency symbols\n. Not forgotten, but I'm trying to work out a good generic way of implementing. I know you already have a temporary solution\n. I've worked out the basic mechanic for handling the masking in a way that will work as readily with mask=\"0000-00-00\" and number 19601219 as with your phone number example.... the difficulty now is identifying masks of that type without affecting other standard masks such as #,##0.00\n. There is no _visible_ content in those apparently empty cells, but they can still contain style information, conditional formatting, be part of merge groups, etc. Within MS Excel, the difference between Edit Clear and Edit Delete is that clear removes any content from the cells, but leaves style information; delete removes the cells in their entirety.\n\nThe default behaviour of PHPExcel is to load these cells because they do contain formatting information and other features that would be required if (for example) you were using that spreadsheet as a template, and wanted to retain that formatting information so that it was there when you populated the otherwise empty template with data before saving.\n. Looking more closely at the situations where this function is used, the space separator isn't being used as an intersect operator like in Excel formulae, but simply as an alternative to the comma to separate several range entries in the same string. It means we don't need to do anything particularly clever, although the function should still eliminate duplicated cell addresses from the returned list. \n. Merged manually because github isn't good for reviewing changes to binaries\n. No, there isn't a \"stable\" version here yet. The latest stable is the 1.7.7 release on phpexcel.codeplex.com and the code had already been modified between that release and our move here to github, so we have nothing that can actually be tagged as stable yet.\n\nWithin the next two weeks, we should have a stable 1.7.8. release, at which point I'll be merging that into master and tagging it as 1.7.8, while also creating deployment packages to distribute on codeplex.\n. Commit history seemed to copy across, but not release tags\n. Thanks for taking the time for this submission, it's something that's been requested before but always been so low on the priority list.\n. Reading the .xls specs, this is stored in the grbits of the PLV (Page Layout View) record (8C8h if created on a Mac, 88Bh if created on Windows) which have a different layout (painfully sensible of you Microsoft) and were introduced in Excel2007 and Mac Excel 11 respectively. I've not tested to see if earlier versions of Excel recognise this record in xls files\n. No, there aren't any \"version\" tags here yet. Historic tags were not copied across when the repository was transferred from Subversion.\n\nThe latest stable is the 1.7.7 release on phpexcel.codeplex.com and the code had already been modified between that release and our move here to github, so we have nothing that can actually be tagged yet.\n\nWithin the next two weeks, we should have a stable 1.7.8. release, at which point I'll be merging that into master and tagging it as 1.7.8, while also creating deployment packages to distribute on codeplex.\nFrom that point on, all releases will be tagged here\n. Nice, simple enhancement. I'll be interested to see how well the different PDF rendering engines handle it. Thanks\n. If your code is identical, and the version of PHPExcel is identical, then there's something different in your hosting configuration. What do you mean by encoding though? Do you mean character set? \n. header charset has no effect whatsoever on the content of the file generated by PHPExcel. There could be differences in the configuration of PHP between the two machines: do a phpinfo for the two servers, and look for the differences\n. Thanks for the investigative work... not sure if I should try to do something about this in PHPExcel itself or not\n. Can you hash your script file on but versions of Ubuntu just to confirm that it is actually identical, and that one version doesn't have a spurious white space somewher?\n. Linux has an md5sum that will generate an md5 hash value for a specified filename. e.g.:\n\nmd5sum myTestFile.xls\n\ngives\n\n36fab1926423d8acb9884fe4c2d8e913  myTestFile.xls\n. Thanks for this.... distribution as a phar was definitely on the roadmap for this year, so it's much appreciated\n. I've modified slightly to move it to the build directory so that I can include building the phar file as part of the standard build process... testing at the moment (haven't encountered any problems yet, but I still need to test chart rendering and pdf generation where we're hooking into external libraries), but phar is definitely a great addition to our distribution options. Thanks again.\n. Manually merged\n. Is this opening and saving an xls or opening and saving an xlsx?\n. Resolved in my local version and will commit/merge to develop later today\n. Full fix should now be committed and merged to develop branch\n. Obviously a different problem: This is in the Excel5 Reader when reading objects such as cell comments or images, the closed issue was with the Excel2007 Writer when using defined names in AutoFilter ranges. Don't know what object type it's located in your file without examining the file\n. Thanks. I'd already realised that the changes I'd merged for autofilter expressions had broken saving xls/xlsx files without any autofilter defined - I've implemented the fixes locally and will be committing/merging back to develop later today\n. Thanks lowfill - I will add those validations as well - but I'd already been working on the fix since it was first brought to my attention and wanted to get it in place as quickly as I could. I still need to rerun all the tests to ensure I haven't missed anything critical, but I'll be committing the more comprehensive fix later (or possibly tomorrow). I'd just had so many people telling me that things were broken here, on codeplex, via mail, via twitter, even to my company email, that I wanted to get that quick fix committed and merged.\n\nIt's also why I've still left this open for the moment\n. Manual merge will be committed later this evening, thanks for all the work you've done on this\n. I've no idea how Microsoft modify the workbook to identify it as shareable, so the answer is \"No\" at this point in time\n. Certainly it requires edit hitory (the revision tables) but without reading through all the formal specs it's hard to identify if there's other changes needed to the core files (or what is required for Excel5 - BIFF files can also be shared)\n. The unit tests certainly need a lot of love and attention, and have been largely neglected for a long time, and I'm ore than happy to see some new work in that area. The develop_2.0.0 branch is dead for the moment; I've refactored a lot of the code to use a an object factory, and moved some of the core components to a repository common for all PHPOffice applications; and am rewriting the calculation engine significantly, and those changes won't merge cleanly with any existing branch. So any additions should be against the develop branch.\n. Hopefully the fix that I've just pushed to the autofilter branch should resolve this issue, though I'll run a couple more tests before I close\n. Looks like that fix now works, though I'm sure the code in ReferenceHelper can be cleaned up a bit. Merging to the develop branch.\n. Identical to Issue #32\n. Modified worksheet clone to cleanly handle the autofilter area, though not yet handling cloning the autofilter expressions to go with it\n. runall.php will take a long time to run.... it's doing a shell exec for every test script... and is intended to be run from the command line, not via a browser.\n\nAdded a display message to runall.php if not running in CLI. Will commit/push later tonight\n. There are thousands of \"Advanced options\" in Excel. I'm not going to leave an issue that is simply \"Excel Advanced Options\" because it can never be closed no matter how much work I do.... and targets that can never be fulfilled aren't conducive to working on them.\n\nSo I'm modifying the title of this issue to the specific feature that you want, which is an achievable objective.\n\nPS. I'm not aware that github allows the posting of file attachments against issues, so posting to the codeplex with a link from here to there should allow me to access the example file.\n. PHPExcel expects a UST date/time for date time values to provide consistency.\n. As a potential option to handle this, I might modify the conversion handling methods to include an optional allowForTimeZone option when the input or output is a unix timestamp. Default will remain an assumption of UST unless allowForTimeZone is TRUE.\nWhen working with DateTime objects, timezone adjustment is automatic, so it isn't needed in that case.\n. UTC is the default because MS Excel uses UTC Internally\n. Can you test against the github develop branch code? I've just pushed a fix that I believe works, although I hven't been able to replicate the exact problem.\n. http://phpexcel.codeplex.com/workitem/18425\n. Thanks for the additional test\n. Thanks for pointing out the error\n. The calculation engine is going to be completely rewritten over the next few months to handle (amongst other things) array formulae and a major performance boost. I shall certainly take this into account when I do the rewrite.\n\nMy inclination is to offer a configuration option in way that it is handled: either throw an exception, or fallback to a NULL so that the formula finishes evaluating and returns a result based on that NULL.\n. Excel should actually return a #REF for any cell reference that doesn't exist.\n. I've put in a quick fix to treat cells in non-existent worksheets as a NULL value (the same as empty cells in the current worksheet), but will leave this open as a reminder for while I'm working on the calc engine rewrite.\n. I thought I'd fixed this already. Please check using the latest develop branch code, because if ($reader !== $extensionType) { is not a line that exists in the develop code any more. It was changed earlier in this development cycle.\n. No problem.... once I've finished testing 1.7.8 and released it, I'll merge that into master. From that point, master will always reflect the latest production release.\n. This was certainly true for 1.7.7, but I've already fixed this issue on the develop branch here on github.\n\nUsing the following code to try and replicate your problem:\n\n```\n$objPHPExcel = new PHPExcel();\n\n$objPHPExcel->setActiveSheetIndex(0);\n$objPHPExcel->getActiveSheet()->setCellValue('A1', '0.25');\n\n$objPHPExcel->getActiveSheet()->getStyle('A1')\n    ->getNumberFormat()\n    ->setFormatCode(\n        PHPExcel_Style_NumberFormat::FORMAT_PERCENTAGE_00\n    );\n\n\n$objConditional1 = new PHPExcel_Style_Conditional();\n$objConditional1->setConditionType(PHPExcel_Style_Conditional::CONDITION_CELLIS)\n    ->setOperatorType(PHPExcel_Style_Conditional::OPERATOR_LESSTHAN)\n    ->addCondition('0');\n$objConditional1->getStyle()->getFont()->getColor()->setARGB(PHPExcel_Style_Color::COLOR_RED);\n\n$objConditional2 = new PHPExcel_Style_Conditional();\n$objConditional2->setConditionType(PHPExcel_Style_Conditional::CONDITION_CELLIS)\n    ->setOperatorType(PHPExcel_Style_Conditional::OPERATOR_GREATERTHANOREQUAL)\n    ->addCondition('0');\n$objConditional2->getStyle()->getFont()->getColor()->setARGB(PHPExcel_Style_Color::COLOR_GREEN);\n\n$conditionalStyles = $objPHPExcel->getActiveSheet()->getStyle('A1')->getConditionalStyles();\narray_push($conditionalStyles, $objConditional1);\narray_push($conditionalStyles, $objConditional2);\n$objPHPExcel->getActiveSheet()->getStyle('A1')->setConditionalStyles($conditionalStyles);\n\n\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\n$objWriter->save(str_replace('.php', '.xlsx', __FILE__));\n```\n\nThis works correctly: both the conditional background colour and the number format styles are maintained when the spreadsheet is saved. As I'm unable to replicate this issue, can you please upload a sample code that demonstrates your problem to the phpexcel.codeplex.com site.\n. The PHPExcel_IOFactory class is in the file IOFactory.php in the /Classes/PHPExcel directory.... if your script can't find that, then something is very, very wrong indeed... like the PHPExcel code is missing or not defined in the path (though I'd expect PHPExcel.php to be problematic as well if that was the case)\n. My bad - implementing a fix for template .ods files with styling but no data, broke the reader. Now fixed in develop branch\n. Unfortunately not, this is completely different to the way in which PHPExcel works, and would require a complete and total rewrite of every single line of code in the codebase.\nIncidentally, PHPExcel doesn't yet handdle pivot tables.\n. PHPExcel works by maintaining the workbook in PHP memory, structures as a PHPExcel object... The readers simply parse a file and convert it to PHPExcel's internal objects, discarding anything they don't understand; and the writers take that object and generate the appropriate file formatting (XML, BIFF, HTML whatever). It doesn't simply edit the xml nodes \"in situ\", and couldn't because not every Excel file is XML-based. The PHPExcel objet itself doesn't care how it is populated, whether from a file via the writer, or via a user script.\n. Is there any particular reason why you can't open files from Suunto movescount.com directly? Any errors thrown? Any missing data? Are they actually OfficeOpenXML files? What does identify() return? Any clues whatsoever?\n. Hopefully composer file now in place, and I'm sure somebody who knows more about these things will correct me if it's wrong\n. I'm not as familiar with composer as I should be (it's on my \"to learn about\" list), so I'm not completely sure what this actually does, how it ties (for example) the minimum-stability with a branch or tag on github.\n. Hopefully composer file now in place, and I'm sure somebody who knows more about these things will correct me if it's wrong\n. Package has already been registered on packagist.org - https://packagist.org/packages/phpoffice/phpexcel\n. \"ext-gd\": \"*\", isn't required though, it's only used if you want to use the exact method for autosizing column width, or rendering charts as jpg images\n. Surely $docsheet should still be defined from the original worksheet loop, which means that the variable still exists containing the last worksheet created by that sheet reader loop; so I'm struggling to see how it can be undefined in line 1749\n. Thanks for pointing it the need to update the install notes, I renamed the directory because it is more examples than tests, but forgot to update any references to it\n. Thanks, I guess I missed that somewhere down the line\n. The assets images appear in the documentation and are a lot easier to read because they show just the few relevant elements from the phpdoc mapping, in the context of the documentation. As such, I think they should remain.\n. The ones I'm looking at are up to date, though they may not all be.... I'll check later. Most are simply xml files, or images created from those xml files.\nIt might be an idea to switch them to a different (more generic) format like GraphViz which would make them easier to edit.\n. Good catch\n. Hopefully https://packagist.org/packages/phpoffice/phpexcel is now in place, with the appropriate github hooks: I'm sure somebody who knows more about these things will correct me if it's wrong\n. You don't need to save the files to disc at all\nWhy not simply use the code as shown in /Examples/01simple-download-xls.php etc?\n\nOr if you want to capture the output to a string (not recommended because it's an enormous memory overhead) then you can simply use PHP's ob_\\* functions around a call to save()\n. Fixed in develop branch, thanks for the checking\n. modified isset() test to use array_key_exists() instead\n. Missing file committed\n. Wow, with unit tests as well. Thanks! Will review and merge, probably tonight.\n. Thanks for the fix, very useful\n. You can use pretty much any version of Excel from Excel 95 onwards: files you've saved as BIFF format can be loaded using the Excel5 Reader, files saved as OfficeOpenXML can be saved using the Excel2007 Reader... if the file is loaded as a single empty column, what type of file is it? You can use the IO Factory identify() method to determine what format PHPExcel believes it to be\n. Unable to recreate this problem. I've created files containing NULL values and empty strings in cells using Excel2007 Writer with setOffice2003Compatibility(TRUE) and setOffice2003Compatibility(FALSE). Both files validate cleanly using the Open XML SDK Productivity tool, and they both load without error in MS Excel 2010, MS Excel 2007 and in MS Excel 2003 with compatibility pack.\n. Funny you should ask that: MS Excel has a formula function VERSION() which is replicated in the PHPExcel calculation engine:\nCalling (statically)\n\n``` php\nPHPExcel_Calculation_Functions::VERSION()\n```\n\nshould return\n\n> PHPExcel 1.7.8, 2012-10-12\n\nor the appropriate version number and date for all production releases\n. Because github code is \"unversioned\".... at the point when we do a production release using the build procedures, the distribution is versioned.... the code maintained on github contains only the tags that that get replaced during the build process\n. I really am trying to kill off the codeplex site.\n\nThe 1.8.1 download from here is tagged, and directly accessible to pull with the tag, or to install via composer\n. Thanks for the catch on title, and for the docblock fixes\n. Currently, work is underway to replace all thrown Exceptions with PHPExcel specific Exception classes. This is a work in progress, but most of the readers and writers throw PHPExcel_Reader_Exception and PHPExcel_Writer_Exception already.\n. More than happy to accept offers of help.... it's as simple as wading through the code replacing every thrown Exception so that it throws the appropriate PHPExcel_xxx_Exception. I believe I've done the Reader and Writer Exceptions, and the Calc Engine has its own PHPExcel_Calculation_Exception, so all other thrown Exceptions should be PHPExcel_Exception. There's a few places in the code where Exceptions are caught, but these can largely be left simply catching Exception\n. Yes, the APIDocs have got a bit out of date in places, and that's also a case of simply trawling through the code to fix all the docblocks, but it's a long, drawn-out chore checking every method that's called by a method to see if an Exception is thrown somewhere down the call stack\n. Thanks for all these Exception management changes.... I've had to merge them manually, unfortunately; but I just need to check for completeness and consistency (especially those in PHPExcel_Shared_*) and I should be in a position to commit them all tonight\n. Sorry, didn't manage to get the merge done tonight - too many interventions, so I didn't get my own final testing complete.\n\nA full CI environment would be greate, and we use Travis, but don't yet have a comprehensive set of tests for significant portions of the code, and many of the tests we do have don't yet run cleanly.... it's a work in progress.\n\nIf you're interested in joining the development team, we can always use fresh blood. There's times when the mind gets too close minded with regard to the existing architecture after working on it for so long. And I'm busy with two large tasks at the moment (the switch from SimpleXML to XMLReader, and a complete rewrite of the calculation engine) so there's a lot of areas being neglected while my focus is on those.\nDrop me a line if you want to join the team.\n. I'm not sure how the Reader can load files with sheet titles longer than 31 characters? What format? MS Excel itself only allows 31 characters\n. Fascinated in how they can retrofit a change to the limit in xls without changing the file structure. any insight in how they do it? The BIFF specification documents haven't been changed, so I can't see how they've done this\n. I've been trying to use tabs consistently since I first started working with PHPExcel, but there is no defined coding style at this moment. I know we should use one, and I've been playing around with PHPCS trying to decide what style to use: \nPSR-0 and 2 both object to any file that isn't all class or all procedural, otherwise I'd pick one of those;\nThere isn't a decent set of sniffs for Zend\nPEAR would probably be the best option, except I don't really like it\nI've not really looked at Symfony 2 yet\n. Merged manually - thanks for highlighting the problem, and for the unit test highlighting it and demonstrating that the fix works\n. Thanks: A nice performance boost, and the PHPExcel::cellXfExists() call can also be used in the applyFromArray() method of PHPExcel_Style as well.\n. Thanks for this useful fix\n. We do specifically tell people always to use UTF-8 encoding\n. Hopefully, this is now set up correctly... it was always something we'd planned when we moved to source to github, but hadn't got round to actually doing.... thanks for creating the basic configs for us\n. And thanks for the offer of helping with the unit tests\n. Thanks, I'd been trying to work out why this was erroring in 5.4\n. What symptons are you experiencing since the change?\n. You're correct, they shouldn't.... they're diagnostic outputs.... I'm amazed that nobody has ever noticed them before. Will comment them out and comit later\n. Thanks for the fix, and sorry it took me so long to get round to looking at it. I'm afraid I've been busy working on the calcEngine branch, which has focused a lot of my attention. Now I'm running final tests on those changes, and preparing for release, so I hope I'll have a little time to look at some of these merge requests.\n. Is this on any particular operating platform? What are the locale settings? What values are returned by the PHPExcel_Shared_String::getDecimalSeparator() and PHPExcel_Shared_String::getThousandsSeparator() methods?\n. It's more like a standard error message saying that PHP can't find a file called \"media/catalog/productno_selection\"... though I'd expect it to complain about \"media/catalog/product/no_selection\". Does that file exist? Should $row['small_image'] contain a string value of \"no_selection\"?\n. None of the 4 worksheets attached to this work item give me any problem with extra worksheets. They all load exactly as expected. Can anybody experiencing the problem please do a phpinfo dump to see if there might be any PHP configuration issues that could be triggering this issue.\n. Try using the $strictNullComparison flag with a TRUE value.\nThe fromArray() method tests each array value against the defined null value (argument 2, which defaults to NULL), and only sets the cell value if it isn't a match. This comparison uses either != or !== depending on the value of the $strictNullComparison flag. As  loose comparison 0 == NULL, 0 values won't be set unless strict comparison is enabled.\n. I'll keep this request open.\n\nAccording to the latest figures from http://w3techs.com/technologies/details/pl-php/5/all PHP5.2.x is still used for 51.1% of websites, and that has gone down nearly 15% over the last year. By the end of this year, I really hope that I can update to a minimum 5.3.0 requirement, so that I can take advantage of closures and namespaces and late static binding... the latter will also be useful for people wishing to extend the existing classes (as part of that, I'm slowly beginning to move private properties to protected)\n. So is there anything in the logs? Any indication of timeouts or hitting memory limits?\n. What I'm trying to figure out is why?\n. I mean I don't understand the purpose of this. Is it simply using the old PEAR SEW to write Excel5 files from PHPExcel Objects? If so, what advantage is there to using SEW over PHPExcel's own BIFF file writer? \n\nHow should I use it in a script using PHPExcel?\n. That sounds like the include_path isn't set on your production server, or PHPExcel isn't installed, or is in a different directory to where you expect\nAlternatively, check that any Joomla autoloader is not conflicting with PHPExcel's autoloader\n. Thanks for the reminder. I'll modify the wiki pages to highlight what code is where)\n\nThe latest stable code (for the last production release) should be found in the master branch here on github, and tagged with the release version. Latest development code in the develop branch. \"Packaged\" downloads (e.g. with PDF docs, or docs only, etc) will remain linked from codeplex. The codeplex source repository is no longer maintained.\n\nAs we've only had one production release since the transition to github, we're still \"in between\" and working on the best way to provide production releases via github, composer, packagist, codeplex, etc. One proposed change entails moving the documentation (and possibly the examples) into their own repository/ies, and simply including them for the zipped package downloads from codeplex. Locale packs will probably also be split off into their own repository.\n. In time, possibly - but it isn't exactly a simple legend for the chart - being able to handle this type of complexity is definitely low priority\n. Changing $zip->open($pFilename); to $zip->open($pFilename, ZIPARCHIVE::CREATE || ZIPARCHIVE::OVERWRITE ); is guaranteed to generate problems when loading a file: you're telling the ZipARchive class to create a file if one doesn't already exist, or to overwrite with a new blank file if it does.... so you're blasting everything from your Excel file.\n\nExcept that it should have worked before you made your change, as long as the file you were trying to load was actually an OfficeOpenXML file. The real error is that initial problem with the ziparchive \"Invalid or unitialized Zip object\" error... ZipArchive failed to read the file as a zip file for whatever reason. Can you open the original file in a text editor, and look at the initial characters in the file? The first two characters in the file should be an ASCII \"PK\"..\n. Only thing I can think of: PHPExcel needs direct filesystem access to the file you wish to load, it can't be loaded via a stream wrapper (e.g. a url), which means that remote files need downloading first\n. Merging with Issue #126 \n. Currently, conditional formatting only supports the basic types of\n- none\n- cellIs\n- containsText\n- expression\n\nThe following types are ignored\n- aboveAverage\n- beginsWith\n- colorScale\n- containsBlanks\n- containsErrors\n- dataBar\n- duplicateValues\n- endsWith\n- iconSet\n- notContainsBlanks\n- notContainsErrors\n- notContainsText\n- timePeriod\n- top10\n- uniqueValues\n. Unable to recreate\n. That's why we provide the options now :-)\n. Looking at this now. The code you've updated won't work if there are multiple cell ranges, and one of them is  single cell range, so modifying it to work in that sitution; but thanks for bringing it to our attention\n. In documentation, read section 4.6.8. \"Change a cell into a clickable URL\"\n. As far as I'm aware, it is not possible to make part of the text in a cell into a clickable URL; certainly I've no idea how I'd do that in Excel itself\n. At this point in time, PHPExcel doesn't support secondary axes in charts\n. It's not a bug? I've just run a basic loader/saver script for the file you've posted and get the following results:\nWith version 1.7.8\n\n> Load Tests from Excel2007 file\n> Call time to read Workbook was 11.3779 seconds\n> Current memory usage: 56.25 MB\n> Save as Excel2007 file\n> Call time to write Workbook was 0.3567 seconds\n> Current memory usage: 57.25 MB\n> Peak memory usage: 57.25 MB\n\nand with my latest develop code\n\n> Load Tests from Excel2007 file\n> Call time to read Workbook was 12.8214 seconds\n> Current memory usage: 54.75 MB\n> Save as Excel2007 file\n> Call time to write Workbook was 0.1354 seconds\n> Current memory usage: 55.5 MB\n> Peak memory usage: 55.5 MB\n\nso nothing like the 220MB that you're getting.\nMy tests were run on 32-bit PHP. Are you using 32-bit or 64-bit PHP? Because that will make a difference.\n\nHowever, there are a lot of styles defined in this file; and PHP reads all of those styles. They're defined in the Excel file, and PHPexcel reads the Excel file \"as is\". That's the way PHPExcel works.... while it might not be an optimal approach, it isn't a bug.\n. Wow thanks.... I'd only recently decided to go with PSR2 standards for PHPExcel (wherever appropriate), as an adopted standard; and was planning on taking a look at php-cs-fixer. Looks like this will certainly go some way toward that; and give me an excuse to see exactly how php-cs-fixer works.\n. 4 spaces works for me when it's replacing leading tabs in a line; though it still leaves tabs in inline comments (not checked docblocks). I'll double-check the appropriate psr2 settings; but this is certainly a great addition as long as it is used in a pre-commit hook. Time, methinks, to start setting up a developer wiki page.\n. I've been running some tests using the iconv and mbstring functions, and while iconv is significantly faster than mbstring for testing UTF8 encoding, there's no discernible speed difference with the strlen or substring functions. I didn't encounter any errors, but have switched the order of testing using iconv/mbstring for the latter two functions\n. Interesting: the description of the algorithm used in Excel2003 and above specifically uses FLOOR (http://support.microsoft.com/kb/828117), although it does indicate that this algorithm should only be used for values of $trials (n) >= 1030, and that the old Excel95 algorithm should be used for values of $trials (n) < 1030. Unfortunately, I don't have details of the earlier algorithm used, so the documented algorithm is used for all values of $trials.\nI know that using the defined algorithm can lead to a permanent loop with some values when $TotalUnscaledProbability returns NaN, so it does need some additional investigation.\n. Certainly possible (I've even done it as a proof of concept); though well outside the scope of PHPExcel itself. But it really depends how sophisticated you want the GUI to be; if you want \"on the fly\" recalculation, then you either need to replicate the calculation engine in javascript; or you have a major overhead in ajaxing the server on every cell change; similarly with changing cell format masks, or conditional formatting. And unless you can provide spreadsheet persistence on the server, then each ajax request has to load and update the spreadsheet, handle any calculations or reformatting, save and feed back the results (which makes it very slow).\nI only achieved decent performance using localhost, and providing a persistent loaded spreadsheet until an ajax save request was issued, which was a lot of custom daemon code at the backend.\n. Will take a look this weekend, hope that a PHP5.2 on Centos 6 will replicate.\n. Can you check your webserver logs, see if it reports any errors or if it's restarting.\n. It's unlikely that any solution will ever be found unless I can recreate the problem; and so far I've never seen this error occur\n. That's a call to read the workbook themes. How was this workbook generated? What version of MS Excel, or was it another spreadsheet program? I'll need to generate an xlsx that doesn't have a themes file to test any fix.\n. We don't provide any method as standard to eliminate empty cells from the CSV output, or even just \"trailing\" empty cells. The former would provide an unpredictable csv file, readers wouldn't be able to identify columns cleanly, so probably isn't worthwhile; the latter is certainly possible\n. Thanks for telling us that our CSV output is useless, sadly we provide a straightforward structure where, once you know how many entries are defined in one row, you know how many are defined in every row. I'd mistakenlky thought that this was the norm, because it's the behaviour reflected by most of the common spreadsheet programs.\n\nThe way to implement this would be to provide a new \"trim\" property in the CSV Writer, together with a getter and setter method for that property; then modify the -writeLine() method to trim trailing empty entries in the $pValues array, and the only to write the line if the count of $pValues entries is still greater than 0.\n. Historic decision, and adding yet another method to achieve the same result would really be adding overhead; unless I can figure out a decent, clean method to work as a column iterator to justify further changes\n. @AndreKR - There isn't yet a column iterator, still trying to work out a clean way of doing so, with the current restriction of PHP5.2 compatibility; I have couple of methods in mind once we can enforce PHP5.3 as a minimum version\n. This is all documented (documentation found in the /Documentation folder): and have you looked at any of the PDF examples in the /examples directory such as 21pdf.php?\n\n``` php\n// Tell PHPExcel that you're planning on using the tcPDF library\n// and where the tcPDF library is installed on your server\n$rendererName = PHPExcel_Settings::PDF_RENDERER_TCPDF\n$rendererLibrary = 'tcPDF5.9';\n$rendererLibraryPath = '/php/libraries/PDF/' . $rendererLibrary;\n\nif (!PHPExcel_Settings::setPdfRenderer(\n        $rendererName,\n        $rendererLibraryPath\n    )) {\n    die(\n        'NOTICE: Please set the $rendererName and $rendererLibraryPath values' .\n        EOL .\n        'at the top of this script as appropriate for your directory structure'\n    );\n}\n\n// Create a Writer for PDF, which will automatically pick up the settings that you've defined\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'PDF');\n// And write the spreadsheet to a PDF file\n$objWriter->save('myPDFSpreadsheet.pdf');\n```\n. Unfortunately, github doesn't provide any mechanism for uploading files to issues, so we have the old file attachments link on codeplex where you can upload files - http://phpexcel.codeplex.com/workitem/10749?ProjectName=phpexcel\n. Merged manually. Thanks for a very useful bugfix. This really improves the HTML and PDF output, and has been on the \"to do\" list for a long while now. It's good to finally get a solution, and a simple, efficient one at that\n. Correct, you won't get charts in an xls file until it's been implemented for the Excel5 Reader and Writer. Currently this option is only available for Excel2007 (xlsx)\n. Excel 2003 will read an OfficeOpenXML (xlsx) file if the compatibility pack has been installed\nCharts will be added for Excel5 (xls) Reader and WRiter \"sometime this year\", but I'm not going to commit more than that\n. So are you actually loading the 'Other sheet' worksheet that's referenced in your formula?\n. Sheets in another file is close to impossible: though the try/catch block in getCalculatedValue() should trap this exception and revert to getOldCalculatedValue() in that circumstance\n. If the value is blank, then there's not much you can do.... it is possible: the PHPExcel calculation engine could be modified to load up the external workbook if it's available and extract the value from it; but the memory and speed overhead is excessive\n. There is, but as and when time permits - it is on the roadmap for this year though https://github.com/PHPOffice/PHPExcel/wiki/Roadmap\n. Now resolved on develop branchNow resolved on develop branch\n. Unable to replicate the problem that this fixes at present\n. OK thanks, I've recreated it now and merged manually for the moment. I'll run some further tests (e.g. removing row #3 rather than row #1, playing with columns, and with both columns and rows, and test the other collections as well. Thanks for highlighting the problem, and providing the sample code to demonstrate it as well.\n. Slightly more complex. If I create the links in reverse order\n\n```\nfor($i = 5; $i >=2; $i--) {\n```\n\nThen it breaks again!\n\nI need to ensure that the collection is correctly sorted in the first place; and then reverse if necessary\n. I was looking more at:\n\n``` php\n$aHyperlinkCollection = $pSheet->getHyperlinkCollection();\n($pNumCols > 0 || $pNumRows > 0) ? \n    uksort($aHyperlinkCollection, array('PHPExcel_ReferenceHelper', 'cellReverseSort')) : \n    uksort($aHyperlinkCollection, array('PHPExcel_ReferenceHelper', 'cellSort')); \nforeach ($aHyperlinkCollection as $key => $value) {\n    $newReference = $this->updateCellReference($key, $pBefore, $pNumCols, $pNumRows);\n    if ($key != $newReference) {\n        $pSheet->setHyperlink( $newReference, $value );\n        $pSheet->setHyperlink( $key, null );\n    }\n}\n```\n\nWhere cellSort() and cellReverseSort() handle correct sorting of cell IDs by column and row; working on your principle of whether to array_reverse or not.\n\nInitial tests look OK, but still checking the results.\n. Are you setting a border style as well as a colour? The default style is `none`\n. What data is missing? Unless you provide real details, there's nothing we can do to help\n. So are you using Cell Caching? That's suggestion number 1\n. You might want to consider a different caching method that moves the cell data out of memory (APC, DiskIsam, SQLite, etc).\nYou might also want to set cell styling for a range of cells once you've written all your data, rather than setting for each cell individually; or even set your cell wrap style as a default workbook style\n. I'll be using a simple 1.7.9 tag from release 1.7.9 onwards, with 1.7.9rc1 style tagging for release candidates\n. 1.7.8 duly tagged\n. Hmm, the packagist hook is set under \"service hooks\" here, and \"test hook\" works without error\n. Looking at packagist, seems source is defined as \"https://github.com/PHPOffice/PHPExcel/tree/develop\" rather than \"https://github.com/PHPOffice/PHPExcel/tree/master\".... trying to figure out how to edit it\n. Thanks, will take a look at this - since I introduced charts as an experimental feature I've been getting more and more demands to expand charting features, so this will be a nice first step\n. I'll definitely be taking a look at this, but will want to run a good few tests before I merge it; but it could really be helpful. Thanks\n. Under what circumstances have you experienced these errors? The autoloader should ensure that the file is only ever included once... if you're getting \"Already defined\" errors for those constants, then it's symptomatic of a more serious problem with the autoloader, and I'd rather fix that than \"patch over\" the problem with an `if !defined` test to see if the constants are already defined\n. Ah, that explains it... our own unit tests always use the autoloader, so we don't see that issue\n. My bad, messed up the initial merge. Thanks for fixing\n. It means that PHPExcel has found something in your particular xlsx file that it can't handle correctly; but I'd need a copy of the file itself to try and identify what it was\n. Merged manually, thanks\n. Fixed in develop branch\n. Form elements such as check boxes are not supported by PHPExcel at this point\n. Namespaces require a minimum PHP version of 5.3.x and the current minimum version requirement for PHPExcel is PHP 5.2.0. (I've been cursing this for a long time now)\n\nEarlier this year, according to [W3Techs statistics](http://w3techs.com/technologies/details/pl-php/5/all), take-up of PHP 5.3 finally exceeded PHP 5.2; while the trend shown by [Pascal Martin's statistics](http://blog.pascal-martin.fr/post/statistiques-versions-php-2013-01) earlier in the year bears this out. With the production release of PHP 5.5 planned for July, and changes to the PHP version support policy, we hope that the use of PHP 5.2 among ISPs will drop significantly allowing us to drop support for PHP 5.2 in the second half of the year.\n\nIn anticipation of that, we have already decided that PHPExcel 1.7.9 will be the last release on the 1.x branch, and that subsequent releases will require a minimum PHP version of 5.3.0, which will allow us to use namespaces, closures, and take full advantage of SPL, We will also be refactoring a lot of the code to conform with PSR-2 standards wherever possible.\n. Fixed\n. There's no way that the PHPExcel object is aware even of the existence of a read filter, it simply accepts the data that's passed to it by the Reader, so this isn't really practical; but userland code is aware of it, and you can use rangeToArray() based on the filter range\n. Seems sensible: thanks\n. Already merged into develop branch, thanks\n. Try using 0.1 and 0.5 rather than '0.1' and '0.5'\n. Reading or Writing? What Reader? What Writer? Please provide a working example to demonstrate this fault.\n. Given that we still support PHP 5.2.0, I'm open to suggestions on how to phrase the install.txt file to cover all appropriate versions of PHP and operating systems. The [PHP docs](http://www.php.net/manual/en/zip.installation.php) themselves seem somewhat ambiguous on the topic\n. Whoops, thanks\n. No ideas. Can you provide a spreadsheet that demonstrates this problem\n. https://github.com/PHPOffice/PHPExcel/pull/194 and https://phpexcel.codeplex.com/workitem/19830\n. Even developers have brainfarts occasionally, fixed in develop branch\n. That's an extremely useful change, making things a lot easier for people. Much appreciated. Looking forward to merging it for the 2.0.0 version\n. Thanks. Interesting changes.... The rowspan and colspan was always on my \"to do\" list; and it looks as though you've cleaned up a lot of the existing code. I'll take a closer look at them later: I'm busy at the moment working on converting the develop_2.0.0 branch for namespacing; but I certainly appreciate the changes, and will look to merge them into that branch once I've tested all my namespace changes. That branch will also use protected rather than private to make the classes more easily extensible by the weekend.\n. Unfortunately, that's likely to make it a manual merge :(\n. Integrated manually for the merge cells, and fixed the issue with rowspan **_and**_ colspan values for the same cell; thanks for the basic work cifren\n. The travis build fail has nothing to do with this..... a lot of the calculation engine tests fail for various reasons; and while I'm reducing that slowly, it is a slow task.\n\nThe fix for rowspan and columnspan has been merged into the develop branch. As far as I'm aware, it's fixed, and there is no further need for me to do anything with it.\n. I'm not sure that this should be included in the default value binder, or if it should be in the advanced value binder, or even in a new custom value binder; but certainly you should be using the advanced value binder or a custom binder if you're working with the HTML reader (if only for handling dates)\n. If you do a \"Save As\" in OpenOffice or in MS Excel, what format does it show as the selected default in the \"Save as Type\" box\n. The file can be shared via the File Uploads \"issue\" on the codeplex site: https://phpexcel.codeplex.com/workitem/10749\n. Quick scan of the file: it's actually an xlsb format rather than an xlsx format. Unlike xlsx, which is a zipped collection of xml files; xlsb is a binary format, and not currently supported by PHPExcel. We probably should support it, and I do have the format documentation available, but haven't ever looked through it to see how simple or complex it actually is.\n. The issue isn't with dates before 1970, it's with dates before 1900: MS Excel doesn't support dates prior to 1-Jan-1900 (or 1-Jan-1904 if using the Mac calendar).\n\nIf you're working with dates prior to 14th December 1901, you may also have issues with PHP/unix timestamps on 32-bit PHP as well... use PHP DateTime objects if you need to work with dates between 1900 and 1901, or dates greater than 20th January 2038.\n. Both fixes now merged into develop branch, thanks\n. I believe this issue has already been fixed\n. Thanks\n. Using dev-develop_2.0.0 isn't wise because it is highly unstable development code, likely to be changed at any moment, may contain diagnostics, etc\n. Thanks\n. I've just downloaded the file manually, read as HTML, and written using Excel2007, and it gives me exactly what I'd expect (including the Cyrillic characters) without any problems:\n\n``` php\n$inputFileType = 'HTML';\n$inputFileName = './Cyrillic_UTF-8.htm';\n$outputFileType = 'Excel2007';\n$outputFileName = './Cyrillic_UTF-8.xlsx';\n\necho date('H:i:s').\" Load Tests from $inputFileType file\" , PHP_EOL;\n$callStartTime = microtime(true);\n\ntry {\n    $objPHPExcelReader = PHPExcel_IOFactory::createReader($inputFileType);\n    $objPHPExcelReader -> setReadDataOnly(false);\n    $objPHPExcel = $objPHPExcelReader->load($inputFileName);\n} catch (Exception $e) {\n   die ('ERROR: ' . $e->getMessage());\n}\n\n$callEndTime = microtime(true);\n$callTime = $callEndTime - $callStartTime;\necho 'Call time to read Workbook was '.sprintf('%.4f',$callTime).\" seconds\" , PHP_EOL;\n// Echo memory usage\necho date('H:i:s').' Current memory usage: '.(memory_get_usage(true) / 1024 / 1024).\" MB\" , PHP_EOL , PHP_EOL;\n\n\necho date('H:i:s').\" Save as $outputFileType file\" , PHP_EOL;\n$callStartTime = microtime(true);\n\n$objPHPExcelWriter = PHPExcel_IOFactory::createWriter($objPHPExcel,$outputFileType);\n$objPHPExcel = $objPHPExcelWriter->save($outputFileName);\n\n$callEndTime = microtime(true);\n$callTime = $callEndTime - $callStartTime;\necho 'Call time to write Workbook was '.sprintf('%.4f',$callTime).\" seconds\" , PHP_EOL;\n// Echo memory usage\necho date('H:i:s').' Current memory usage: '.(memory_get_usage(true) / 1024 / 1024).\" MB\" , PHP_EOL , PHP_EOL;\n\necho date('H:i:s').' Peak memory usage: '.(memory_get_peak_usage(true) / 1024 / 1024).\" MB\" , PHP_EOL , PHP_EOL;\n```\n. No problems using curl to retrieve the file either. Are you using the latest develop branch?\n. Will take a look: thanks, as it's a much-demanded feature\n. Finally getting round to looking at this PR\n. There's a number of problems with simply reading/writing the raw xml that I've noticed while testing, specifically if the pivot table uses any customised styling (e.g. for summarised totals with numberformatting) that isn't used in the main data sheets.\n. The cell's getValue() method should return a rich text object when the cell contains rich text:\n\nThe rich text object has a magic __toString() method that returns the content as plain text if you try to access it as though it were a sinple text string.\n\nIf you want to convert a rich text cell to HTML, take a look at the HTML Writer that does this. Modify and use this code appropriately:\n\n``` php\n// Value\nif ($cell->getValue() instanceof PHPExcel_RichText) {\n    // Loop through rich text elements\n    $elements = $cell->getValue()->getRichTextElements();\n    foreach ($elements as $element) {\n        // Rich text start?\n        if ($element instanceof PHPExcel_RichText_Run) {\n            $cellData .= '<span style=\"' . $this->_assembleCSS($this->_createCSSStyleFont($element->getFont())) . '\">';\n\n            if ($element->getFont()->getSuperScript()) {\n                $cellData .= '<sup>';\n            } else if ($element->getFont()->getSubScript()) {\n                $cellData .= '<sub>';\n            }\n        }\n\n        // Convert UTF8 data to PCDATA\n        $cellText = $element->getText();\n        $cellData .= htmlspecialchars($cellText);\n\n        if ($element instanceof PHPExcel_RichText_Run) {\n            if ($element->getFont()->getSuperScript()) {\n                $cellData .= '</sup>';\n            } else if ($element->getFont()->getSubScript()) {\n                $cellData .= '</sub>';\n            }\n\n            $cellData .= '</span>';\n        }\n    }\n}\n```\n\nYou can extract the various font properties such as color, bold, italic, etc. using\n\n``` php\n$element->getFont()\n```\n\nwhich is an PHPExcel_Style_Font object.\n\nand use that to convert the formatting to HTML\n. Any particular error, or just an error? Does the error actually have a message?\n. The code I posted demonstrates **how** it can be done; but is copied from the HTML Writer which is an object.... you'll need to adapt it yourself. Look at the code I posted, and that is in the HTML Writer and modify it to work with your code.\n. Thanks for the fix\n. This issue was fixed several weeks ago in the develop branch\n. Surely dev-master is accessing the `master` branch (I really wish I understood Composer and Packagist better, and the expectation on OS developers was that they could focus on their own code without needing to master every peripheral technology): the code in the `develop` branch has been changed https://github.com/PHPOffice/PHPExcel/blob/develop/Classes/PHPExcel/Reader/CSV.php\n. The default value binder works as intended, if you need to change binder behaviour then the approach is to create a custom binder and use that rather than change the existing binders\n. Unable to replicate, what Writer are you using?\n. Thanks\n. On 21/08/2013 11:26, MarcosBL wrote:\n\n> I know this is weird but... isolating this code:\n> \n> require_once  dirname(**FILE**)  .  '/lib/PHPExcel/IOFactory.php';\n> echo  round(68.3499,2).PHP_EOL;  // Works\n> $inputFileType  =  PHPExcel_IOFactory::identify($inputFileName);\n> echo  $inputFileType.PHP_EOL;  // Just to get the file type\n> echo  round(68.3499,2).PHP_EOL;  // Works\n> $objReader  =  PHPExcel_IOFactory::createReader($inputFileType);\n> echo  round(68.3499,2).PHP_EOL;  // Works\n> $objPHPExcel  =  $objReader->load($inputFileName);\n> echo  round(68.3499,2).PHP_EOL;  // KA-BOM, right after the load() call\n> \n> I get this result:\n> \n> 68.35\n> Excel5\n> 68.35\n> 68.35\n> 68.34999999999999\n> \n> Problem starts just after loading the file with the Reader object... \n> PHP 5.3.5-1ubuntu7.11 any idea on what's happening here ? Thanks in \n> advance !\n> \n> \u2014\n> Reply to this email directly or view it on GitHub \n> https://github.com/PHPOffice/PHPExcel/issues/237.\n> \n> Try disabling the calls to set (and restore) precision at lines \n> 1722-1726 and 1739-1741 of Classes/PHPExcel/Calculation.php\n\n## \n\nMark Baker\n. If you pull the develop branch, then you'l find that it was fixed nearly 2 years ago. It's in the develop branch; master is for production releases.... the \"issue\" is time. Functionality integrated with existing getHighestRow() which now accepts an optional column argument; and modified getHighestColumn() to accept an optional row number as well\n. Functionality added to getHighestRow(), allowing for a optional column argument, rather than as a new method; and also added getHighestColumn() with an optional row argument. Thanks for the PR\n. Thanks for the update\n. Thanks for the PR... the only thing I've modified is to suppress the check for the $zipClass, because the ZipArchive class won't necessarily have been autoloaded prior to the first instantiation, so will throw an exception at that point. I'll take a look at how I can modify that check\n. Are you actually doing anything to clear memory in importFile()? If so, what are you doing? If not, then read section 4.3 of the developer documentation entitled \"Clearing a Workbook from memory\"\n. The problem is, and has always been, cyclic references between objects - and if I'd known how much grief it would cause me on a daily basis from people explaining to me how it should have been done I'd never have got involved in any open source development again.... yet nobody has ever come up with a working alternative that allows parent/child and child/parent relationships to be maintained between objects\n. This error seems to have been eliminated in the latest develop branch code; at least, I'm unable to replicate it with the sample code above\n. Merged manually, thanks for the PR\n. Thanks for the PR\n. I've taken the approach of passing an array of cell addresses to the _generateRow() method rather than an array of cells, and selecting each cell within _generateRow() which eliminates this issue.\n. Thanks for the investigation work @eplaut \n. Fixed, thanks for the PR\n. Thanks for the fix - merged manually\n. Thanks for this Trevor... I'll look at what I can do to get it working on 32-bit and Windows boxes, but it's a feature that a lot of people have been asking for\n. On 15/11/2013 22:56, Trevor North wrote:\n\n> Hi Mark,\n> \n> Not sure if you made any progress but I had a bit of time this evening \n> so had a poke around and tracked the problem down to the rotate in the \n> Excel MD5 lib. This stems from the lower max int size on 32 bit, and \n> the bit shift was obviously not working as expected when given floats \n> instead. Oddly, the remaining bit operations still seem to work just \n> fine but I'll not complain about that.\n> \n> I've also done some general clean up to make the whole thing a bit \n> more maintainable. As a point of interest I adapted the code from \n> http://stackoverflow.com/a/1699199 originally although by this point \n> the info there probably isn't of much use. It's annoying that the \n> built in md5/hash functions don't expose the context as that would \n> have saved a lot of hassle but such as life.\n> \n> I should note that I have only tested this on \n> php-5.5.6-nts-Win32-VC11-x86/x64 on a 64 bit windows 7 machine as \n> that's what happens to be on my lap. I'm hopeful that this does indeed \n> work for other versions and linux 32 bit, and that I've not knackered \n> it up for linux 64 bit, but I'll admit to not actually having checked. \n> Let me know if I have and I can take another look.\n> \n> Cheers,\n> Trevor\n> \n> \u2014\n> Reply to this email directly or view it on GitHub \n> https://github.com/PHPOffice/PHPExcel/pull/261#issuecomment-28610440.\n> \n> Sorry I haven't got back to you sooner, but it's been a hectic couple of \n> weeks in work with a major \"go live\": but I'm planning to take another \n> look tonight, and this wekend.\n\nI'd already noted that the problem stemmed from that addition leading to \nan implicit float conversion, but hadn't worked out an alternative \napproach; but I'll do some additional testing now on both Windows and \n32-bit Linux. Thanks for the work you've done already; and hopefully \nthis should be the last major new change to the code before I start \nprepping for a new release - I really do want to get this feature in, \nbecause I know that so many people will appreciate it.\n\n## \n\nMark Baker\n. Merged thanks\n. Thanks for a useful modification to the method\n. Another good catch, and thanks for the additional checks with OpenOffice Calc sort ordering\n. Good catch, thanks\n. Thanks\n. Thanks for the fix\n. Couldn't automatically merge, so had to do it manually; but thanks for the fix\n. Already fixed in develop branch: Work item 19830 from codeplex issues list\n. Fixed thanks\n. Thanks for the fix\n. Fixed by modification to the regexp to ensure that values either side of the '/' are numeric and not blank\n. Can you please retest with the latest develop branch code\n. @saulob - If you need to limit the columns and rows read using the Readers, then use a Read Filter (it's precisely why Read Filters are provided)\n. Bad decision many years ago in history that now needs to be maintained for backward compatibility\n. Fixed in develop branch 9 months ago\n. Pivot Tables are not supported.... and until somebody writes a solution that doesn't result in corrupt files in the majority of cases, then that will remain the case.\n. Good luck finding an alternative, I only know of three ways to handle pivot tables in PHP:\n- PHP's [COM extension](http://www.php.net/manual/en/book.com.php) (requires a COM enabled spreadsheet program such as MS Excel or OpenOffice Calc running on the server) \n- The Open Office alternative to COM ([PUNO](http://www.wstech2.net/index.php?do=0a,01,05)) (requires Open Office installed on the server with Java support enabled) \n- [Ilia Alshanetsky's Excel extension](https://ilia.ws/archives/222-PHP-Excel-Extension.html) now on [github](https://github.com/iliaal/php_excel) (requires commercial [libXL](http://www.libxl.com/) component) \n. Do you have PHP's ZipArchive enabled in your PHP build?\n. The file doesn't have a zip signature as you'd expect from an OfficeOpenXML format File, but an OLE signature like a BIFF format file, and PHPExcel identifies it as needing the Excel5 Reader. What surprises me is that MS Excel doesn't complain about the mismatch between format and file extension.\n. Now resolved on develop branch\n. Thanks for this Maarten, I've been kinda busy of late\n. I'm hoping I'll get the 1.8.0 release done before the end of this month, so it'll be included in that\n. Already ahead on the Simple XML load rather than XML Reader: I've added it into the getLibXmlLoaderOptions() method so it's called every time.... perhaps not the cleanest way of doing it, but it does make it easier as we transition from SimpleXML to XMLReader\n. Only applies when the original formula is in cell A1 on a sheet\n. If those are the only differences, then the simplest way to output an Excel 2007 template doesn't require any code changes at all to the library:\n\n``` php\n// Redirect output to a client\u2019s web browser (Excel2007)\nheader('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.template');\nheader('Content-Disposition: attachment;filename=\"myfilename.xltx\"');\nheader('Cache-Control: max-age=0');\n// If you're serving to IE 9, then the following may be needed\nheader('Cache-Control: max-age=1');\n\n// If you're serving to IE over SSL, then the following may be needed\nheader ('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past\nheader ('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT'); // always modified\nheader ('Cache-Control: cache, must-revalidate'); // HTTP/1.1\nheader ('Pragma: public'); // HTTP/1.0\n\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\n$objWriter->save('php://output');\nexit;\n```\n. Thanks\n. Thanks\n. Unable to replicate this problem, can you please provide a spreadsheet file that demonstrates the issue\n. Apologies - I considered that implementing a security patch for a known exploit was more important than checking compatibility with PHP 5.2\n. Thanks for highlighting the change\n. Implemented slightly differently, but thanks for highlighting the bug\n. Done\n. Save your script **without** a UTF-8 BOM Header\n. The  \"EF BB BF\" is definitely a UTF-8 BOM header; none of the PHPExcel scripts should have any BOM header, but I can double check\n. In PHPExcel 1.7.9, the calculation engine was changed from a singleton to a multiton, meaning that each file is running its own calculation engine, and any calls to get the instance must identify which instance they need\n\nYour call to flush the calculation cache is such a call, and you need to pass the PHPExcel object to that call\n\n```\nPHPExcel_Calculation::getInstance($excel)->flushInstance();\n```\n. Mathematics 101:\n\n``` php\n$workSheet->setCellValue('F1','=3.03');\n$workSheet->setCellValue('F2','=4');\n$workSheet->setCellValue('F3','=F1+F2');  // = 7.03\n$workSheet->setCellValue('F8', '=F3-0.3'); //= 6.73, ___NOT___ 7\n\n$workSheet->setCellValue('F4','=1');\n$workSheet->setCellValue('F5','=2');\n$workSheet->setCellValue('F6','=F4+F5'); // = 3\n\n$workSheet->setCellValue('F7','=F8-F6'); // = 3.73, ___NOT___ 4\n```\n. That is a standard floating point issue that exists on every digital computer - http://en.wikipedia.org/wiki/Floating_point#Accuracy_problems - it's affects PHPExcel, and PHP, and any other language using IEEE 754 representation of floating point numbers (which is pretty much every language on any computer). If you consider it a bug, the only way to fix it is to switch to analogue computers. The other solution is to display to the precision that you need, and let the computer round it for you\n. Thanks  for the fix\n. What more composer support is actually needed? And should I really disenfranchise half the PHPExcel userbase that don't use Composer by removing the built-in autoloader?\n. This example can only include the chart if it can access the 3rd party jpgraph library. If you don't have jpgraph installed, then the chart simply can't be converted to an image file for embedding in the PDF file; if you have jpgraph installed, then you still may need to modify the example to include the correct path to the library, otherwise PHPExcel can't know how to include it.\n\nNeither I, nor PHPExcel can guess whether of where jpgraph is installed on somebody else's server; this example serves as an example of how the PDF Writer **can**, when configured correctly with jpgraph available, include a chart embedded in the generated PDF. As such, I feel it's worth retaining in the Examples folder\n. Thanks, a great addition to the set of Writers\n. Though I may rename it OOCalc for consistency with the existing OOCalc Reader; or should I break backward compatibility and rename the Reader?\n. Thanks, fixed\n. Thanks for spotting that\n. Added version check to HTML Reader so it only uses option flags if PHP >= 5.4.0\n. Does PHP < 5.3 actually error with this? Standard PHP behaviour when a function is called with extra arguments is simply to ignore those extra arguments\n. Fixed\n. Thanks for the additional Mac codepage references\n. Column addresses start at 0, row addresses start as 1\n. Are you using any form of cell caching? If cell caching is used, only one cell is ever present in memory at any one time, so that will be the cell that you're referencing at that point in time\n. No there are no plans to \"fix\" this behaviour..... otherwise caching becomes impossible, and there is no other way to save memory.... what you access is a pointer to the active cell, change the active cell, and you change the  reference.... that's how it works..... if you can come up with a better way of caching to reduce memory usage, that would allow you to keep all your cells in memory, the I'm all ears\n. If you do need to maintain variables for individual cells, then bypass the `getCell()` method, and access the cell collection directly.... note that this won't be any use unless you're using the full in-memory approach.\n\nModify the `$cellCache` property in `/Classes/PHPExcel/CachedObjectStorage/CacheBase.php` to public, and then you can use:\n\n```\n$cell_1 = $worksheet->getCellCacheController()->cellCache['A1'];\n```\n. I'm not sure I follow your question; but if you want to add new properties to the cell object, feel free..... PHPExcel currently reads that from the cache collection where it is the key to the cell, because otherwise it would simply be a duplication of data in memory (and the whole point of caching is to try and reduce memory usage)\n. Cell caching was introduced in version 1.7.0 (IIRC) of PHPExcel, and has always used a pointer to the current active cell.... that was in August 2009.\n\nWe're always trying to save memory everywhere we can, and have been doing so for years; cells use the largest amount of memory, simply because there are so many cells in a spreadsheet.\n. That's a memory optimisation for the cell..... cost of storing the cell address in the cell object is the zval struct size of 48 bytes + the length of the address (\"A123\" would be 4) on 64-bit PHP, or 28 bytes + the  length of the address on 32-bit PHP...... if you have 1000 cells, then that's a minimum of 50k+ bytes (64-bit) or 30k+ bytes (32-bit) that is reduced by not storing the address in the cell. If you have 120,000 cells, then that saving is 6+ Megabytes (64-bit) or 3.6 Megabytes (32-bit) saving in memory usage..... that's what was optimised\n. Take a look at the worksheet's `setSheetView()` method. The sheetView object allows you to set normal, page layout and page break preview options using the `setView()` method\n. I'd suggest that any numeric value that was a straight `0` or anything beginning `0.` should still be converted to a number.\n. There is no automatic correlation between the row iterator and read filters. This is why the startrow option was added to row iterators, allowing you to link the two under the control of your own scripts\n. Unless you can tell me what codepage 21010 actually is, then I'll just point you to https://phpexcel.codeplex.com/discussions/402767\n. Thanks for the bugfix\n. Thanks\n. Sadly, there's still a significant proportion of users still on PHP 5.2.... I've been trying to push PHP 5.3 as a minimum version for the past 18 months and encountering a lot of resistance.... at least 5.3 allows closures, late static binding, namespacing, etc which all help reduce the lines of code and improve performance; while a jump to 5.4 would help improve performance still further\n. I've already been refactoring a new version 2 of PHPExcel using 5.3 as a minimum, with namespacing, psr0-compliant autoloader, object factories, full use of SPL, more composition, more DI, and etc, breaking down a lot of the monolithic methods into smaller SOLID methods. that should be a lot easier to unit test, and a lot easier to manage going forward... but not backward compatible with the older version (different objects, different methods, a bootstrap).\n\n5.4 would allow me to use function array dereferencing and $this in closures, but little that 5.3 doesn't already give in benefits (I'm not going to start using traits).... the biggest benefit of 5.4 over 5.3 is improved execution speed (and the fact that it's still supported), but I don't have any issues with saying 5.3 minimum rather than 5.4\n\n5.5 would give some real bonuses - access to the array_column() function (though it can be simulated with array_map()) and generators in particular - but is certainly a step too far at the moment.\n\nThe lack of backward compatibility with the version 1 branch is the biggest drawback, but does make for a clean break from a lot of the legacy problems, and allows me to clean up some of the incompatibilities as well.\n\nOf most concern to me are the usage statistics ( [w3techs](http://w3techs.com/technologies/details/pl-php/5/all) and [Pascal Martin](http://blog.pascal-martin.fr/post/statistiques-versions-php-2013-11)) which show that over 25% of PHP users are still running on 5.2... that figure is likely to have dropped by the end of the year, and my PHPExcel2 code is unlikely to be stable enough before then, but I'm keeping a close eye on those figures.\n. PHP 5.3 is now officially end of life\n. So I wish people would only use supported versions of PHP, then we'd be able to say PHP 5.4 as a minimum version of PHP\n. There's certainly a lot of truth in that WanderingZombie, and it's getting more an more tempting to take that approach... 5.6 might be a step too far, but certainly working with the officially supported versions of PHP, and retaining backward compatibility with unsupported versions would simply be a bonus... I'd originally been targeting 5.3 as the minimum release (and the biggest step) but suggesting a minimum of 5.4 as the oldest officially supported version of PHP has benefits as well... and if that pattern of only supporting the currently supported releases of PHP gives a roadmap going forward\n. Yes, with PHP 5.2 dropping from 34.38% to 22.75%, PHP 5.4 on the rise from 8.03% to 22.63%, and PHP 5.3 relatively stable at around 45% since last November\n. Another useful addition, thank you\n. Thanks for this submission, a lot of users will appreciate the ability to manipulate chart axes\n. Thanks! I hadn't realised that libxml_disable_entity_loader(true) triggered different behaviours between simplexml_load_string() and simplexml_load_file().\n. There are a number of changes and bugfixes to the OLE container here that aren't implemented in the PEAR OLE (e.g. Work items 10252 and 15308 from the old Codeplex issues log). It was originally bundled with PHPExcel for the benefit of people who couldn't/wouldn't install dependencies manually; and last updated from PEAR for the PHPExcel 1.5.0 release on 32rd October 2007. It has also been modified to use class constants rather then global constants, work with the PHPExcel autoloader, and throw PHPExcel errors rather than PEAR errors, mainly to provide consistency with the rest of PHPExcel.\n\nIf you look at the changelog for PEAR OLE, there have only been 2 subsequent releases since the bundled version (OLE-1.0.0RC1 from May 2008, with a bugfix for Incompatibility open_basedir restriction; and then a 4-year gap till 1.0.0RC2 with a couple of bugfixes for Invalid Bigblock chain with files > 200MB and OLE doesn't save multistreams).\n\nWhile the PHPExcel fork should probably be modified to reflect those additional bugfixes, it seems awkward to unbundle the OLE again, making it difficult to use composer, giving problems with inconsistent error handling between PHPExcel and PEAR, and giving us a dependency on an unsupported library once more.\n. My bad, thanks for fixing\n. Thanks, that saved me a bit of work this evening\n. If you're using cyclic references in a formula (including ROW() with an argument of the current cell) then use\n\n```\nPHPExcel_Calculation::getInstance($objPHPExcel)->cyclicFormulaCount = 1;\n```\n\nbefore saving or getting any calculated value\n\nNote that MS Excel may still object to this anyway, for example if you're using MS Excel 2007+ to open a .xls file that uses formulae with ROW() or COLUMN() pointing to the cell itself, though it won't complain about the same in an .xlsx file\n. Note also that using `ROW()` or `COLUMN()` without an argument will return the row or column for the current cell, and without any cyclic reference issues in any version of MS Excel. This is standard MS Excel behaviour that is replicated in PHPExcel.\n. Please see latest develop branch using th tags in thead rather than td\n. Yes it does - https://github.com/PHPOffice/PHPExcel/commit/780cb7478209b82db236cb718f20f1e7850b3d5b\n. How do you know they're not working? What do you actually expect to happen in this case?\nWhy are you setting `memoryCacheSize` (especially with a space at the end of the key) for `cache_in_memory_serialized`? Section 4.2.1 of the developer documentation says which options can be applied to which caching methods.\n. Celll caching does not magically eliminate the need for memory, it _reduces_ the memory requirements for loading a file, and different caching mechanisms reduce by different amounts, and at different costs in performance.\n\nThe default memory caching has the highest memory cost, and the lowest speed cost; serialized in memory, igbinary and gzipped save a little bit of memory by reducing the memory size requirements for each individual cell, with a cost in code execution speed, but the cells are all still held in memory; external caches like apc, redis, memcache, wincache, or cache to file reduce the memory requirements further (cells are cached outside of PHP, but PHPExcel maintains an index in memory), but at a higher cost in performance; SQLite is the most efficient memory saving (because it is the only cache mechanism that eliminates cells completely from memory), but at a higher cost in execution speed.\n\nEven using SQLite, it's still possible to run out of memory, particularly when the spreadsheet uses large numbers of styles because only cells are cached.\n\nIf you want to test whether cell caching works or not, then test using a spreadsheet file that will fit in memory, but measure the memory usage with the different caching mechanisms; and you might also test execution speed as well. There's a couple of scripts in the `/Examples` folder that you might look at (`06largescale*.php`).\nOn my dev box, I get the following results using these:\n\n| Method | Peak memory (MB) | Write time (seconds) |\n| --- | --- | --- |\n| Memory | 23.25 | 1.7746 |\n| MemoryGZip | 21.5 | 4.2080 |\n| SQLite 3 | 15.5 | 5.1679 |\n\nNote also that you should really test if the call to `PHPExcel_Settings::setCacheStorageMethod()` has actually worked (e.g. if you try to use wincache on a linux server, or memcached without valid server credentials): if it fails, then it falls back to the default memory method.\n. Yes, there may be variation between different PHP versions, and there can be variations depending on the content of the spreadsheet as well; which is why you need to identify which methods work best for you. For options like phptemp, where you can specify at what point the cache should switch to using disk rather than memory, you may also notice differences when you modify that setting.\n\nThis is why I'm loathe to publish any figures, because there are so many variations beyond my control, and why a number of different caching options are provided allowing you to decide which ones work best for you in your specific circumstances.\n\nThose original figures that I posted were generated using PHP 5.4.7\n\nJust to give you more ammunition to use against me (all run against PHPExcel latest development branch):\n\n### PHP 5.3.27 (cli) (built: Jul 10 2013 20:56:24)\n\n| Method | Write time (seconds) | Peak memory (MB) |\n| --- | --- | --- |\n| Memory | 2.2109 | 38.00 |\n| MemorySerialized | 3.0671 | 31.25 |\n| MemoryGZip | 5.0613 | 26.00 |\n| DiscISAM | 4.5713 | 28.25 |\n| PHPTemp | 4.4202 | 28.25 |\n| SQLite | 6.5273 | 20.25 |\n| SQLite3 | 6.1095 | 20.00 |\n\n### PHP 5.4.21 (cli) (built: Oct 16 2013 21:09:16)\n\n| Method | Write time (seconds) | Peak memory (MB) |\n| --- | --- | --- |\n| Memory | 1.5754 | 23.00 |\n| MemorySerialized | 2.4092 | 27.25 |\n| MemoryGZip | 3.8843 | 21.25 |\n| DiscISAM | 3.4437 | 24.00 |\n| PHPTemp | 3.2954 | 24.25 |\n| SQLite3 | 4.5406 | 15.75 |\n\n### PHP 5.5.5 (cli) (built: Oct 15 2013 10:29:13)\n\n| Method | Write time (seconds) | Peak memory (MB) |\n| --- | --- | --- |\n| Memory | 1.4817 | 23.25 |\n| MemorySerialized | 1.9900 | 27.75 |\n| MemoryGZip | 3.2529 | 21.75 |\n| DiscISAM | 3.1306 | 24.00 |\n| PHPTemp | 3.1089 | 24.25 |\n| SQLite3 | 3.9123 | 16.00 |\n\nwhich suggests that somewhere between PHP 5.4.7 and 5.4.21 there was a change in PHP's serialize() method that actually increased the size of a serialized object making this method a lot less efficient. Note that there is also an increase in discisam and phptemp between PHP 5.3 and 5.4, perhaps as a result of changes to stream reading/writing\n. The main difference between SQLite and the temp file caching options (phpTemp and discIsam) is that the PHPExcel cache controller needs to keep and index to the file in memory: each cell is still referenced in memory by a pointer to the offset and size of the entry in the file, whereas SQLite can actually index the cell entries in the database, so there's no index of cells maintained in memory. Every cache method except SQLite/SQLite3 maintains an array of cell data in memory, whether that is the full cell object (memory) a serialized or compressed string of cell data (serialized, igbinary or memorygzip), a hashed key reference (memcache, wincache), or the file reference index.\n\nNote that only cell objects are cached, styles and other related data aren't.\n\nIt would probably be more memory efficient simply to use cell addresses as property names in the cache controllers rather than an array indexed by cell address; but certainly uglier (from a code perspective) and probably less easy to maintain.\n\nUnfortunately, unlike a simple csv file, the output structures for most spreadsheet formats simply aren't conducive to stream writing.\n. I thought all instances on the develop branch had been reverted from [] to array() syntax... are you aware of any that we've missed?\n. Have you read the section of the developer documentation on [cell caching](https://github.com/PHPOffice/PHPExcel/blob/develop/Documentation/markdown/Overview/04-Configuration-Settings.md)?\n. PHPExcel is an \"in memory\" model of the spreadsheet, as is explained in the documentation.\n\nWhen working with large spreadsheet files, this can use a lot of PHP memory, so we introduced cell caching. Cell caching is a way of **_reducing**_ the amount of PHP memory required to hold the cell data for a spreadsheet. Different cell caching options provide different levels of memory usage, some may even increase memory usage in combination with certain versions of PHP, and all dependent on the type of data in your cells. There is also a speed cost associated with each different cell caching option. \n\nThe default is Memory, which maintains the full details as PHP objects in memory. Other memory options (whether Serialized, Gzipped, Igbinary) offer the least memory saving, but the performance cost is higher than Memory. SQLite/SQLite3 offers the best memory usage, but significantly slower performance, the rest fall somewhere in between\n\nOnly you can work out which cell caching option works best for your data.\n. See [this discussion](https://github.com/PHPOffice/PHPExcel/issues/415) for a more detailed explanation of cell caching, together with some basic performance figures\n. Cell caching **_reduces**_ memory usage, it doesn't eliminate it. it allows more cells to be stored using the available PHP memory (though even that is subject to the vagaries of caching method and version of PHP for methods like serialized which actually uses more memory with PHP>5.4)\n\nCan cell caching deal with a 170MB xlsx file? \nPossibly, depends, only you can try it and see.... you don't even say how much you've set the PHP memory limit to.\n\nThe size of the file is pretty meaningless, it's the number of cells and their content that matters.... using cache in memory, an average rule of thumb is 1k per cell with 32-bit PHP, 1.6k on 64-bit PHP (but even that depends on content, and lots of long strings in cells will increase that figure). If you need to save the file afterwards, then my rule of thumb is to double the memory required by the cell count estimate.\n\nIf you have a 32MB limit for your PHP, then cell caching can help make better use of that 32MB, but the script itself still occupies part of that 32MB, as does PHP itself and any extensions that you're loading, leaving only a small amount of that 32MB available for program data. All of that is using PHP's limited memory even before you start loading a file, or building a file.\n\nCell caching is also just one method to reduce memory usage, though most other methods relate specifically to reading.\nIf you simply want to read raw data from a  file, then you can disable loading style information, which reduces the memory usage. If your spreadsheet has 10 worksheets, but you only need to access 1 or 2 of them, then you can load only those sheets rather than all 10. Cell chunking allows you to read a file in \"bite size\" pieces.\n. Some illustrations of Memory usage and Speed when using different cell caching methods with different versions of PHP\n\n![memoryusage](https://cloud.githubusercontent.com/assets/770298/4103525/9a348804-3165-11e4-8479-a3fff11f77e6.png)\n![readwritespeed](https://cloud.githubusercontent.com/assets/770298/4103527/a0f3e2e8-3165-11e4-8695-27ac09f15220.png)\n. Merged manually, thanks for the fix\n. Merged manually\n. Fixed in develop branch\n. Release 1.8.1 will be available probably within the next two weeks, certainly by the end of the month\n. Either wait a couple of weeks till 1.8.1 stable release, or use the develop branch.... I'm currently final testing develop preparatory to a new release\n. Thanks for the correction\n. Thanks for the fix, now implemented\n. There isn't..... but a Rich Text object has a magic __toString() method that will return plaintext, so you can simply cast it to a string\n. This doesn't lock the file from being opened, that isn't an option in PHPExcel. It means that editing those elements of the spreadsheet is password protected\n. An xlsx extension doth not an OfficeOpenXML file make.\n\nIf PHPExcel has identified your file as HTML, it's because it isn't an OfficeOpenXML file, but contains html markup. Have you opened the file in a text editor to actually look at the content?  Did you test that PHPExcel actually identified the file as Excel2007 (your code doesn't show that) or as HTML?\n. Then submit a PR to fix it, but have you actually opened any of these files in a text editor to see what they actually contain? If the identify() method fails to recognise the format, then the signature clearly isn't that documented in the appropriate doumentation for the format in question.\n\nAlternatively, send me your files so that I can check them myself\n. I'll take another look to see if there's any problem with the identify() method; but it starts by trying to match the actual extension against the signature for the filetype in question, and only starts searching for alternatives if that fails.... due to the common practise of people writing CSV files or html markup and giving the file an Excel extension, looking for a signature or content that will match one of the known filetypes that are supported by PHPExcel. \n. Is it possible to send me a copy of the file? I don't know if it's an obscure variant format, but I can at least run some tests to try and identify what the problem is. PHPExcel shouldn't have any issues recognising an OfficeOpenXML file created in Excel 2013 and being able to parse it correctly\n. You can upload files to the old codeplex site at https://phpexcel.codeplex.com/workitem/10749 (note that this is public access) or email to me ( mark at lange dot demon dot co dot uk )\n. @aairr This file fails for the same reason they always fail, non-standard namespacing.\n. Solution: complete rewrite of XLSX Reader, that's not quick, and I doubt very much that anybody will provide a PR..... but there's many causes that could create a situation where files are misinterpreted or unreadable..... one all-encompassing \"issue\" is an issue that can never be resolved, it requires specific issues for specific reasons that can be individually addressed\n. Thanks for pointing this out\n. Can you please provide the file\n. Sadly, github doesn't provide an option for attaching files to issues, but we still have an \"issue\" on the [old codeplex site](https://phpexcel.codeplex.com/workitem/10749) that allows for the upload of files for testing.\n\nThough you can always email it to me as well :)\n. Interestingly, I actually get an error with the autofilter range when opening your original file in MS Excel 2013\n. Probably not till the end of the month now: I'm about to go on holiday, and the wife has formally banned from taking the laptop with me when we go away.\n. You set the path to where you've installed the actual PDF rendering engine (tcPDF, DomPDF or mPDF), not to the PHPExcel wrapper for that engine\n. Thanks for the fix\n. This **_isn't**_ consistent, but it **_is**_ documented behaviour.... unfortunately it's \"inherited\", and any change will break backward compatibility; and it's also used extensively elsewhere in the code as well, so changing it in those methods will require extensive changes elsewhere within the codebase as well.... so we live with it.\n. That's MS Excel's standard built-in password when you do a simple encryption.... I haven't a clue how you'd encrypt/decrypt with a user-defined password.... did it successfully decrypt a file encrypted with your own password?\n. PHPExcel supports OfficeOpenXML-format .xlsx files through the Excel2007 Reader and Excel2007 Writer, as described in all the documentation\n. I think you'll find that this has already been removed in the development branch\n. No it isn't documented..... I just got so p****ed with people bitching about it\n. If you look at the actual failing tests, most of them are precision issues in the calculation engine (oddly, PHPExcel is accurate to a higher degree of precision than MS Excel itself) while others are test fro RAND() or TODAY() functions and similar which should probably be skipped. There are very few tests that actually fail (Matrix Inversion being one that springs to mind).... and (unfortunately) very few tests for features.\n\nIt's also a big reach for the PHPExcel development team to fix them all, but the product itself is very stable despite those failing tests\n. So what do you believe should be the solution if somebody tries to use `createTextRun()` with an empty text argument? Should it throw an exception? Should it be silently discarded? Should PHPExcel silently add an invisible character to the text run? I'm open to suggestions\n. If PHPExcel can't identify a file as an xlsx file, then it isn't a real OfficeOpenXML-format xlsx file. What does it identify the file as? Just because a file has an xlsx extension, doesn't mean that it's really an xlsx file. Open the file in a text editor and see what it really is.\n. If I execute a script containing\n\n``` php\n$filetype =  PHPExcel_IOFactory::identify('05featuredemo.xlsx');\nvar_dump($filetype);\n```\n\nthen I get an output\n\n```\nstring(9) \"Excel2007\"\n```\n\nas I'd expect\n\nTested against PHP 5.2.17, 5.3.27, 5.4.7, 5.4.21 and 5.5.5\n\nPlease provide an example script that will give me a different result against that same file, or provide exact details of your PHP version and configuration\n. If PHPExcel files aren't being autoloaded at all, you would expect a \"Class not found\" error.... including PHPExcel/IOFactory.php should enable the PHPExcel's built-in autoloader, but you need to make sure that any autoloader you're running yourself doesn't interfere with PHPExcel's own\n. Unless you use `setCellValueExplicit()`, PHPExcel will treat any cell value that you set which begins with `=` as a formula; to set `=FOOM` as a string, you need to use `setCellValueExplicit()`\n. Thanks, now merged into the 1.8 branch\n. Fixed, thanks\n. So are you using the latest code from the develop branch? Because line 399 is definitely commented out - https://github.com/PHPOffice/PHPExcel/blob/develop/Classes/PHPExcel/Reader/HTML.php#L399\n. Numbers are stored as numbers in PHPExcel unless you use a custom value binder to enforce datatype of string for numeric values with leading zeroes, or you need to set cell values individually using the `explicit` function...  only then will the value actually be stored as a string.\n\nWhat you aren't doing is declaring the value as a string.... the `setCellValueExplicit()` allows you to declare the value as a string; setting a number format of Text simply tells Excel to display the number in the cell as a string, but at that points it's already a number, and as such has no leading zeroes.\n\nThis is actually documented behaviour, as described in the Developer Documentation (Setting a number with leading zeroes)\n. See https://github.com/PHPOffice/PHPExcel/blob/develop/Documentation/markdown/Overview/07-Accessing-Cells.md#setting-a-number-with-leading-zeroes for details\n. That's right, trying to set cell value on a range of cells will throw an exception... the setCellValue*() methods all work on one, and only one, cell. There is no short-cut to achieve what you want.... And nor can you retrospectively change the datatype of a cell and automatically convert the content to restore something that may have been lost (such as leading zeroes) when the cell value was first set.\n\nHowever, it's pretty straightforward to define a cell binder that will recognise leading zeroes in a cell; and a [recent change on the development branch](https://github.com/PHPOffice/PHPExcel/issues/394) did exactly this\n. Can you give me any additional background about this file? How it was generated, etc?\n. Fixed, thanks for identifying the problem (and solution)\n. All I can tell you so far is that it's an issue with floating point \nprecision\n\nUsing the formula debugger (described in [this gist](https://gist.github.com/MarkBaker/5908357)) gives an output of:\n\n```\nFormula Value is=IF(F17<=22.0,\"TRUE\",\"FALSE\")\nExpected Value is UNKNOWN\nParser Stack :-\n\nArray\n(\n     [0] => Array\n         (\n             [type] => Cell Reference\n             [value] => F17\n             [reference] => F17\n         )\n     [1] => Array\n         (\n             [type] => Value\n             [value] => 22\n             [reference] =>\n         )\n     [2] => Array\n         (\n             [type] => Binary Operator\n             [value] => <=\n             [reference] =>\n         )\n     [3] => Array\n         (\n             [type] => Value\n             [value] => \"TRUE\"\n             [reference] =>\n         )\n     [4] => Array\n         (\n             [type] => Value\n             [value] => \"FALSE\"\n             [reference] =>\n         )\n     [5] => Array\n         (\n             [type] => Operand Count for Function IF()\n             [value] => 3\n             [reference] =>\n         )\n     [6] => Array\n         (\n             [type] => Function\n             [value] => IF(\n             [reference] =>\n         )\n)\n\nCalculated Value is FALSE\nEvaluation Log:\n\nArray\n(\n     [0] => Testing cache value for cell Worksheet!F18\n     [1] => Worksheet!F18 => Evaluating Cell F17 in current worksheet\n     [2] => Worksheet!F18 => Testing cache value for cell Worksheet!F17\n     [3] => Worksheet!F18 -> Worksheet!F17 => Evaluating Cell L8 in current worksheet\n     [4] => Worksheet!F18 -> Worksheet!F17 => Evaluation Result for cell Worksheet!L8 is a floating point number with a value of 900\n     [5] => Worksheet!F18 -> Worksheet!F17 => Evaluating 2.2 * 900\n     [6] => Worksheet!F18 -> Worksheet!F17 => Evaluation Result is a floating point number with a value of 1980\n     [7] => Worksheet!F18 -> Worksheet!F17 => Evaluating Cell F3 in current worksheet\n     [8] => Worksheet!F18 -> Worksheet!F17 => Testing cache value for cell Worksheet!F3\n     [9] => Worksheet!F18 -> Worksheet!F17 -> Worksheet!F3 => Evaluating Cell L1 in current worksheet\n     [10] => Worksheet!F18 -> Worksheet!F17 -> Worksheet!F3 => Evaluation Resultfor cell Worksheet!L1 is a floating point number with a value of 300\n     [11] => Worksheet!F18 -> Worksheet!F17 -> Worksheet!F3 => Evaluating Cell L2  in current worksheet\n     [12] => Worksheet!F18 -> Worksheet!F17 -> Worksheet!F3 => Evaluation Resultfor cell Worksheet!L2 is a floating point number with a value of 300\n     [13] => Worksheet!F18 -> Worksheet!F17 -> Worksheet!F3 => Evaluating Function MIN() with 2 arguments\n     [14] => Worksheet!F18 -> Worksheet!F17 -> Worksheet!F3 => Evaluating MIN( 300, 300 )\n     [15] => Worksheet!F18 -> Worksheet!F17 -> Worksheet!F3 => Evaluation Result for MIN() function call is a floating point number with a value of 300\n     [16] => Worksheet!F18 -> Worksheet!F17 => Evaluation Result for cell Worksheet!F3 is a floating point number with a value of 300\n     [17] => Worksheet!F18 -> Worksheet!F17 => Evaluating 0.3 * 300\n     [18] => Worksheet!F18 -> Worksheet!F17 => Evaluation Result is a floating point number with a value of 90\n     [19] => Worksheet!F18 -> Worksheet!F17 => Evaluating 1980 / 90\n     [20] => Worksheet!F18 -> Worksheet!F17 => Evaluation Result is a floating point number with a value of 22\n     [21] => Worksheet!F18 => Evaluation Result for cell Worksheet!F17 is a floating point number with a value of 22\n     [22] => Worksheet!F18 => Evaluating 22 <= 22\n     [23] => Worksheet!F18 => Evaluating Comparison 22 <= 22\n     [24] => Worksheet!F18 => Evaluating Comparison 22 <= 22\n     [25] => Worksheet!F18 => Evaluation Result is a boolean with a value of FALSE\n     [26] => Worksheet!F18 => Comparison Evaluation Result is a boolean with a value of FALSE\n     [27] => Worksheet!F18 => Comparison Evaluation Result is a boolean with a value of FALSE\n     [28] => Worksheet!F18 => Evaluating Function IF() with 3 arguments\n     [29] => Worksheet!F18 => Evaluating IF( FALSE, \"TRUE\", \"FALSE\" )\n     [30] => Worksheet!F18 => Evaluation Result for IF() function call is a string with a value of \"FALSE\"\n)\n```\n\nThe comparison operation is at line 3618 of `Classes/PHPExcel/Calculation.php`\n\n```\n    $result = ($operand1 <= $operand2);\n```\n\nI'm open to suggestions on how I can modify those comparisons to handle floating point imprecision\n. The fact that digital computers use a binary representation to represent floating point values makes all comparisons between floats very difficult; and after 30-odd years of digital computers, there still isn't a good solution to the problem\n. You might want to test against the latest develop branch: I've put in an epsilon comparison\n. Because if I used `$this->delta = 0` it would only work for integers. The whole point of an epsilon comparison is to match 123.0000000000000000001 as equal to 122.9999999999999999999 to the specified level of precision\n. Are you suggesting that perhaps the precision and scale should be set to perhaps 18/1.0E-18 or more? If so, what would you recommend as the value?\n. That doesn't really sound right, I would expect to need a higher degree of precision for a 64-bit system than for a 32-bit system\n. Almost every one of the examples in `/Examples` is written as a command-line script, including `16csv.php` which loads an xlsx file and writes it as a csv file\n. It's possible that your script may be referencing a PHPExcel_Cell cell reference from a variable that you've used in single quotes (`'$cellref'`) rather than double quotes (`\"$cellref\"`) or unquoted (`$cellref`). That could cause a problem.\n\nAlternatively it could be an absolute refererence (`$A$1`) rather than (`A1`), though that should be handled by PHPExcel\n. Thanks, fixed\n. Thanks\n. Unfortunately, github doesn't yet support attaching files to issues, though you can still attach files against [issue #10749](http://phpexcel.codeplex.com/workitem/10749) on the old codeplex site.\n\nAlternatively, try adding the `u` (UTF-8) switch to the regular expression\n\n``` php\n$domText = preg_replace('/\\s+/u', ' ', trim($child->nodeValue));\n```\n\nIf you can upload a file to demonstrate the problem though, it would allow me to test it myself\n. PHPExcel doesn't provide any method to modify the generate html at all, you'd need to either modify the HTML Writer, or use DOM to modify the generated markup\n. First issue, [as documented](https://github.com/PHPOffice/PHPExcel/blob/develop/Documentation/markdown/Overview/08-Recipes.md): PHPExcel expects formulae to conform to the following rules:\n- Decimal separator is '.' (period)\n- Function argument separator is ',' (comma)\n- Matrix row separator is ';' (semicolon)\n- English function names must be used\n  unless you've specifically set the calculation engine locale to specify otherwise\n\nHowever, external formulae are not supported in any way\n. Are you trying to resize the columns to a fixed size, or to autosize? The latter is certainly expensive, because it has to calculate the width of the result in every cell of each column that you autosize\n. Your first change will cause problems with non-ASCII string values (ie UTF-8) because strlen is counting bytes, not characters\n\nIs an if test faster than a simple str_replace?\n\nStoring a cell as a scalar might work, except that every cell has styling, even if it's just the default styling.... cache works for both reads and writes, because it's read/write agnostic.... but you're quite welcome to fork\n. If you var_dump a cell, you should see a parent property which references the cell cache for that worksheet.... but you only have a single active cell in the cell collection at any one time\n. But I'm not going to make performance optimisations without decent performance tests to prove that they will make things faster.... I get enough abuse over performance as it is (some of it extremely personal) so I'm not prepared to simply accept unproven changes that could s easily make things slower as faster\n. What branch? Because I can't see anything in the script that would cause this error, and line 173 doesn't even exist in that file (it's only 163 lines long)\n. It is an Excel limitation (and note that it's characters rather than bytes) but if you're just creating a CSV file, then why use PHPExcel in the first place? PHP has a perfectly good fputcsv() function built-in\n. As it stands, it'll break Rich Text objects, and I'm not sure if it needs any special handling for objects without a __toString() method (possibly throw some kind of catchable exception, although that requires a custom error handler to convert a catchable fatal error to an exception)\n. If you want something that will allow you to define a mask, then you want to use a custom value binder, more like the advanced value binder\n. It sounds like a confusion to me: the `getID()` method for the PHPExcel object definitely exists, though I'm not sure why the loader should be trying to access it.... I'll have to create a test case to try and see what it's doing, but I can't understand why it should give an error\n. `Whereas if each 100 rows are read individually they all use the same amount of memory.`\nCan you explain what you mean by this statement? How are you reading rows individually?\n. Chunk reading does details about the entire workbook, but only reads the cells listed in the chunk, so row and column sizes, style settings used in cells other than those read, etc are all included in the memory usage for a chunk.... and chunking in a loop may leave some residual objects unless you explicitly disconnect and unset them before loading the next chunk iteration.... as described in the [documentation](https://github.com/PHPOffice/PHPExcel/blob/develop/Documentation/markdown/Overview/05-Deleting-a-Workbook.md)\n. Merged on my development machine now, and will be committing within the next hour or so.... thanks for the PR\n. This issue has already been fixed\n. There's a whole [lot of documentation on how to set cell styles](https://github.com/PHPOffice/PHPExcel/blob/develop/Documentation/markdown/Overview/08-Recipes.md#styles). Thanks for spotting that\n. This space is necessary in some cases, simply removing it may merge words together.... e.g. in the 42richText.php example, it removes the space between `h2so4` and `is` and between `2<sup>3</sup> and`equals`.\n. OK! I get the picture! I've managed to introduce a bug!\n\nWhile you're all busy downgrading, has anybody actually tried to figure out the actual problem?\n. Related to [PHPExcel PR #557](https://github.com/PHPOffice/PHPExcel/pull/557) perhaps?\n. Is this an issue purely with some caching methods? Or with all caching methods? Do you get the expected result if you haven't applied any caching?\n. That's very weird, it's one of my standard tests (without any caching) \n. Merged on my development machine now, and will be committing within the next hour or so.... thanks for the PR\n. This \"bug\" is impossible to fix without changing PHPExcel in such a way that cell caching is completely impossible, with all the memory overheads that would create..... $cell is only a **pointer** to a current \"active\" cell. In calling getCell() again to read a different cell, you are changing the \"active\" cell, so that pointer is now pointing to a different cell; so when you set the value for $cell you're changing the value for the new \"active\" cell\n. And before you ask why this isn't explained in the docs..... people reading those docs often have enough difficulty understanding the difference PHP dates and Excel dates, or between workbooks and worksheets.... the docs try to keep things as simple as possible\n. It shouldn't change two cells at once, it's something I need to investigate because I've never come across it happening before\n. If you consider that the line `$aReferences = PHPExcel_Cell::extractAllCellReferencesInRange($ref);` is building an array of 10 (A-J) \\* 1048576 (1-1048576) cell addresses (a total of 10,485,760 entries), then it is going to take a while and use a lot of memory doing so.\n\nWhile combining the lines:\n\n```\n    $aReferences = PHPExcel_Cell::extractAllCellReferencesInRange($ref);\n    foreach ($aReferences as $reference) {\n        $docSheet->getStyle($reference)->setConditionalStyles($conditionalStyles);\n    }\n\n```\n\n as\n\n```\n    foreach (PHPExcel_Cell::extractAllCellReferencesInRange($ref) as $reference) {\n        $docSheet->getStyle($reference)->setConditionalStyles($conditionalStyles);\n    }\n```\n\nwould improve things a bit, it's not going to be fast building that list and then iterating over that many cells, applying the conditionals to each in turn\n\nBeing able to use a Generator for `PHPExcel_Cell::extractAllCellReferencesInRange()` would help further, but that requires a minimum PHP version of 5.5.0\n. Why not just apply the advanced value binder, which can recognise dates, percentages, fractions, etc and set appropriate styling..... and if you don't want fractions, percentages, etc, or want a slightly different format to be applied then create your own value binder\n. In the `/Examples`folder, `29advancedvaluebinder.php` uses the Advanced Value binder that we provide as an example, which is defined in [/Classes/PHPExcel/Cell](https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Cell/AdvancedValueBinder.php)\n\nThis is covered in the documentation [here](https://github.com/PHPOffice/PHPExcel/blob/develop/Documentation/markdown/Overview/08-Recipes.md#write-a-date-or-time-into-a-cell)\n. How is autosize going to calculate the column width if you don't calculate values in that column?\n. A cell will only be calculated as a formula if begins with `=` **_and**_ its datatype is set as a formula, not simply as a string like `=.=`.... but if you set a cell to have a value beginning with `=` then the documentation tells you to use the `setCellValueExplicit()` method rather than `setCellValue()` so that PHPExcel will set the cell datatype as a string rather than as a formula\n. The developers of PHPExcel apologise that they cannot fix bugs in LibreOffice Calc; but this is a known LibreOffice bug when importing Excel files\n. IIRC, it's https://bugs.documentfoundation.org/show_bug.cgi?id=91475. Then I'd need to double-check.... my original reference was on the original bug list on CodePlex, which has since been deleted. Wow thanks, it's going to take me a little while to check it all out, but much appreciated\n. Using your code against the 1.8.1 codebase, and I see\n\n```\ntest\nfile\ndata\nfoo\nbar\nbaz\n```\n\nwhich is exactly what I'd expect to see\n. It would be great wouldn't it. Sadly, the structure of Excel files isn't conducive to reading or writing in such a simple, structured manner.... Excel files aren't really actually organised in rows like a CSV file, and even an xlsx file that has a row/cells structure in the worksheet still references half a dozen other files from the xlsx zip for every cell.\n\nHowever, when writing a file, I'm not totally sure how \"chunking\" really saves any memory and doesn't just add time overhead to the scriot, because the entire file still needs to be open for the last chunk. Using one of the Cell caching methods would be a more appropriate strategy for writing a large file.\n. That actually leaves me puzzled. 'fraid I just can't understand how it reduces memory usage; because each time you load the file, you're still loading it all into memory\n. Err, yes.... that's what the chunk read filter does. If you only read a part of a file, and then save it.... only the part that you read will be saved\n. If you need to be able to save the file, then you can't use the chunk reader. If memory is your issue, then look at Cell Caching\n. Generally it means that your script is outputting something else to the browser. Using ob_end_clean() to flush the browser is a workround; your best solution is to identify what is being sent to the browser and fix it\n. You need to use **MS Excel** date format codes - https://support.office.com/en-sg/article/Add-and-customize-date-and-time-formats-763b9b04-ccf8-46a8-9ee3-6d8f6fb9e2f8 - not PHP date format codes.\n. `\\T` isn't accepted as part of an MS Excel format mask, so no it isn't accepted by PHPExcel; if you want a literal `T` in an MS Excel format mask, then you quote it\n. It's perfectly easy to get a literal `T` in an MS Excel date format mask:\n\n```\nyyyy-mm-dd\"T\"hh:mm:ss\n```\n\nwill give you what you're asking for\n. > Why not use php's createDatefromFormat and then reformat for excel friendly output?\n> I am aware this will create an extra dependency, but it should provide a better handling of the date.\n\nBecause `DateTime` objects weren't necessarily available in PHP 5.2 on all platforms, and `createFromFormat()` wasn't available until 5.3.\n\nDate handling is being rewritten using DateTime objects internally for PHPSpreadsheet (the successor to PHPExcel), but that is being done for a minimum PHP version of 5.5\n. It is still very much work in progress, so susceptible to changes in the API\n. ```\n$objPHPExcel->getActiveSheet()->setSelectedCell('G340');\n```\n. Could you perhaps explain what this Pull Request actually does?\n. Yes, it is the same project.\n\nThe notification about switching to github is one the front page of the [codeplex site](http://phpexcel.codeplex.com/):\n\n> **2012-06-19 PHPExcel Moves to github!**\n> The source repository for PHPExcel, together with its sister projects PHPWord and PHPPowerPoint under the auspices of PHPOffice. The repository can be found at https://github.com/PHPOffice/PHPExcel, and the latest working development code is in the develop branch.\n> This is the first part of series of changes in our development process which we believe will make it easier for us to do more frequent releases of better quality code. The next step will be CI integration for running automated unit testing against PHP 5.2, 5.3 and 5.4 using TravisCI.\n> We shall be maintaining the CodePlex SVN Source repository in parallel for a time, but the github repository should be considered the definitive source.\n\nwith a subsequent reminder posted a year later:\n\n> **2013-05-22 We are on Github!**\n> Please remember that we have been using github as our source repository for nearly a year now.... source code has not been maintained here on Codeplex in all that time. \n> If you want to contribute, you can fork it. We do accept Pull Requests.\n\nHowever, the 1.9 branch is not yet fully working, and should be considered highly unstable and subject to change without notice until it is officially released.\n. Excel doesn't have any magical style setting to do this: you simply want a string containing newline characters and your bullets, and then to set the cell to wrap\n\n``` php\n$value = \"\u2022 Foo\\n\u2022 Bar\";\n$objPHPExcel->getActiveSheet()\n    ->setCellValue('A10', $value);\n$objPHPExcel->getActiveSheet()\n    ->getRowDimension(10)\n    ->setRowHeight(-1);\n$objPHPExcel->getActiveSheet()\n    ->getStyle('A10')\n    ->getAlignment()\n    ->setWrapText(true);\n```\n. A malicious XXE/XEE entity will typically contain both `<!DOCTYPE` and `<!ENTITY`\n\ne.g.\n\n```\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><!DOCTYPE foo [ <!ELEMENT foo ANY ><!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]><foo>&xxe;</foo> \n```\n\nthough I was advised by the security expert who reported this issue that it is possible to create XXE/XEE with only `<!DOCTYPE`, so the default Reader behaviour is therefore to trap for `<!DOCTYPE`.\n\nHowever, `<!DOCTYPE` is perfectly valid in HTML (indeed, HTML should have `<!DOCTYPE`), so we can't rely on that for the HTML Reader, because every document should then return a positive and be blocked; so we override for that Reader with a check for `<!ENTITY` instead, because malicious xxe/xee can only be triggered via an `<!ENTITY` element in HTML documents.\n\nIt's basically a case of the docblock not being up-to-date with the code\n. [Floating Point Accuracy Problems](https://en.wikipedia.org/wiki/Floating_point#Accuracy_problems)\n. If you're running PHP7, then you shouldn't need to use pclzip at all anyway\n. But yes, I have been running tests against PHP7, without identifying any specific issues that can't be eliminated (such as dropping the use of pclzip) anyway\n. That is old code..... 1.8.1 is the latest release, and has been available since April, and the develop branch has been fixed to eliminate that break\n. Well as you're trying to read from every individual cell of the merge range, what do you expect PHPExcel to do?\n\nIf you've merged cells A1 and B1, then cell A1 holds the value, so what should PHPExcel do when you call getCell() on B1? What do you think should happen? Should it throw an exception for you to handle in your code? Should it return a null value? Should it return the value of the top-left cell of the merge range?\n\nThis isn't a bug, this is PHPExcel's behaviour.\n\nIf you need to test whether a cell is part of a merge range before getting the value for that cell, then you can do so.\n\n```\n// ignore merge cell unless it's the top-left cell in the merge range\nif (!$objPHPExcel->getActiveSheet()->getCellByColumnAndRow( $col, $row )->isInMergeRange() ||\n    $objPHPExcel->getActiveSheet()->getCellByColumnAndRow( $col, $row )->isMergeRangeValueCell()) {\n    // Cell is one that we're interested in reading\n} else {\n    // Cell is part of a merge-range that we're not interested in reading\n}\n```\n. What are you doing to try and use the csv Writer?\nAre you perhaps doing something like:\n\n```\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'csv');\n```\n\nThe Writer names are case-sensitive\nso you'd need to specify the Writer name correctly as 'CSV' rather than 'csv'\n\n```\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'CSV');\n```\n. There do appear to be some problems with the PDF rendering engines handling embedded images, which may or may not be affecting you. Which rendering engine were you using?\n. > sdclee  wants to merge 38 commits into 1.8 from 1.9\n\nThis really is not a good idea.... the 1.8 branch retains PHP 5.2 backward compatibility; merging the 1.9 branch into 1.8 is going to completely break that, and result in a perfectly valid 1.8 branch suddenly filled with non-working code.\n. I've looked at this task before when I did the original work on autofilters, and it really is a major piece of work, with a large memory and execution overhead. Excel doesn't simply display the rows in a different order, it actually moves the rows themselves.\n\nAs such, it's not a piece of work that I'm willing to do\n. That's right: Headers/Footers aren't implemented in the HTML or PDF Writers\n. Perfectly happy to accept pull requests, especially if they're simple enough to test easily or even simply review the code..... it's large PRs without description or tests that take a lot more effort to evaluate\n. It's actually LGPL Version 2.1, February 1999, that's the version used for the wording in the [license.md](https://github.com/PHPOffice/PHPExcel/blob/1.8/license.md) file\n. Only potential drawback with this that I see is that it's possible now (and I know people using it this way) to use the calculation engine without actually instantiating a PHPExcel object, using it purely to execute formulae with absolute values (rather than loaded from cells)\n\nOne of the examples (`Quadratic2.php`) actually demonstrates it this way\n. However, I do appreciate the reason behind this PR, I'm just wondering if it is the best approach\n. OK, Thanks! I'll take a look at it this evening\n. The cells prior to the startrow aren't populated at all until you look at them, so they're not taking up memory. If your startrow is 11 and endrow is 20, then no cells in the range 1-10 are actually loaded into memory at all..... not even with a null value.\n\nHowever, if you then try to access cell A1 from in your script, PHPExcel will **create** a cell A1 and given a null value.\nIf you do a call to `toArray()` (for example), it will create all the cells for rows 1-10 as null value cells, because `toArray()` always works from cell `A1`\n\nIf however, you use `rangeToArray('A11:E20')` instead, then you won't create those empty cells, because you're only referencing cells that were loaded\n. I'm not sure I see the point in this (and it won't work as you expect either).\n\nIf you've loaded a PHPExcel object from a spreadsheet file, it will retain any existing string values as strings (with any leading zeroes as appropriate).\nIf you're loading from a CSV file, or HTML, then you can use a value binder to retain any leading zero strings.... though I already implemented a change in version 1.8.1 to the default value binder to do this if a numeric string had leading zeroes anyway (Work Item GH-394  - DefaultValueBinder is too much aggressive when converting string to numeric).\n\nIf you're setting values with leading zeroes yourself, then use `setCellValueExplicit()` which will set the datatype to string by default, and retain any leading zeroes.\n\nThe original value without any formatting is already maintained in the `$value` property, as a value of the appropriate datatype.... you don't need a new property to maintain that explicitly as a string datatype, especially when the original might have been a Boolean or a rich text object.\n. If you are having problems with formulae, then PHPExcel allows you to do some debugging to see exactly how the engine is evaluating your formula - you can read about it [here](https://gist.github.com/MarkBaker/5908357)\n. But this doesn't look like a valid formula:\n\n```\n=IF((OR(E2=\"\",D2=\"\")),0,IF((E2<D2),((E2-D2)24)+24,(E2-D2)24))\n```\n\nWhat is `(E2-D2)24` supposed to do?\n. Because the result of that calculation is simply a string containing `10/30/2010`. PHPExcel doesn't know that you're treating it as a date elsewhere, and the calculation doesn't read the styling of a cell to know that you've applied a date style to that cell... to be honest, I'm surprised that MS Excel treats it as a date rather than as a string, because (regardless of any format) it is simply a string.\n\nIf you're using it in other formulae elsewhere, then the DATE() function will convert that string to a date\n. Don't use the 1.9 branch yet..... not everything has yet been namespaced, so there will be files not found, it's subject to major changes at any time as I refactor it..... it's here because if my development laptop breaks, at least I have this branch as a backup.\n\nIt should not be considered as code for anybody to run until such time as I remove the big notice from the README file that says \"Don't run this\"\n. https://en.wikipedia.org/wiki/Floating_point#Accuracy_problems\n\nSet a number format mask for the cells if you only want 2 decimals to be displayed; PHPExcel won't do this for you automagically\n. Can you explain exactly what problem?\n. OK, a clue.... what line of code? (your post suggests 409, in PHPExcel/Reader/Excel2007.php, but that has nothing to do with $colourScheme at all) What version of PHPExcel? Do you have any working .xlsx file that demonstrates this problem? (you can attach files to the issue now on github)\n. The build does fail, because the code doesn't yet pass every single test..... the drawback with a TDD approach..... that does not mean that the code is unstable or unusable, simply \"not 100% perfection\".\n\nIf something is missing, then it has nothing to do with failing tests..... so perhaps you can tell me what's missing, and then I might be able to help\n. It means that if I can reduce the number of errors with each new push, then I'm actually achieving something, reducing the number of failures, and improving the codebase.... you might as well ask what's the point of testing in the first place if you write every test so that it will always pass (and I've known projects that do), or of only writing tests for situations that you know the code can already handle.\n\nIf you look at the actual tests that fail, most of them are edge cases for the calculation engine, and slowly, one push at a time, I'm addressing those edge cases and reducing the number of failures\n. Unable to replicate, using your own code.... what version of PHPExcel are you running?\n. Which branch on github? develop or 1.8?\n\nI've tested with up to 20000 iterations in the loop, and still haven't managed to replicate this problem\n. It's certainly an oddity, though PHP should behave the same regardless of platform (32-bit/64-bit discrepancies aside)\n. Unless I can find some way of replicating it, I'm unlikely ever to find a fix.... fiddling with the code blindfold, and never being able to know if anything I've changed will fix the problem is almost impossible.\n. I'm guessing that you have misunderstood\n\n`getHighestColumn()` returns the highest column that is referenced anywhere within the worksheet, whether because it contains data, or is part of a range reference such as print range or autofilter range, or has a cell styling, even if it doesn't contain any content\n\n`getHighestDataColumn()` returns the highest column that contains actual data in the cell\n\nIt's not a discrepancy, it's the point of having two different methods.\n\n---\n\nThere is one other significant difference\n`getHighestColumn()` is read on loading the file (or set to 'A' by default if creating a new PHPExcel object, and won't change no matter what you do to the worksheet. It's stored as a staic value, so access is quick.\n`getHighestDataColumn()` is calculated at the point when you call it, so slower to retrieve; but it is always accurate at the point when it is called, and changing content of the worksheet will change the returned value\n. The parameter for  `getHighestDataRow()` is optional, if you don't provide the parameter, then it will return the highest column that contains data in the worksheet. If you provide a row number as an argument, then it returns the highest column containing data in that row.\n\nYou'll find that there's the equivalent for `getHighestDataRow()` as well, accepting an optional column letter\n\n`getHighestRow()` doesn't take any arguments\n. So you're saying that I should have just one function, with two optional arguments? Indeed, even more arguments if you want to base it on whether a particular formatting is applied or not? Or am I completely misunderstanding what you're saying?\n. I have no ide how git prepares its download, nor why it should ignore certain folders.... if somebody could tell me how to manage it.... \n. It's a highly unusual issue: the number is likely to be the MS Excel serialized timestamp (the number of days since 1st January 1900, or 1st January 1904 if the file was created using the Mac calendar) which is how the date is stored in Excel files. MS Excel uses a number format mask to render it in a human readable format.\n\nPHPExcel holds the value as that MS Excel serialized value internally, and renders it as a date using the number format mask when you write it to a format like CSV, so you should see the human readable date in the CSV unless PHPExcel doesn't have the number format mask\n\nSetting ReadDataOnly to true (the default is always false) means that PHPExcel won't read the number format mask, only the raw data value (the MS Excel serialized datetime value), and can't even tell if the value is a date or not without that mask; which is what makes it the most likely explanation for being unable to convert the value to a human readable date/tie on writing CSV.\n\nWhat puzzles me is why PHPExcel might be reading the serialized timestamp values, but nor the number format information if ReadDataOnly is set to false. Is it possible for you to attach a file that demonstrates this problem? \n. On 09/10/2015 20:40, Russ wrote:\n\n> I've created a very simple php script which reads in either an XLSX or \n> XLS file, and then exports the file content to CSV. Here's the guts of \n> the program, which you've seen many times before:\n> \n> $objReader = PHPExcel_IOFactory::createReader($cExcelFileType);\n> $objSpreadsheet = $objReader->load($cExcelFileName);\n> $objWriter = PHPExcel_IOFactory::createWriter($objSpreadsheet, \"CSV\");\n> $objWriter->save($cCsvFileName);\n> \n> What's interesting is that if I read in an XLS file and then output a \n> CSV, dates are written in dd/mm/yyyy format as expected. However, if I \n> read in an XLSX file and output a CSV, the dates are written out as \n> integers. I would have expected the CSV file to be written out using \n> date strings regardless of the import format.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub \n> https://github.com/PHPOffice/PHPExcel/issues/698.\n> \n> An annoying problem.... a patch that I'd done to handle badly-formed \n> xlsx files that were generated by scripts that overrode the pre-defined \n> number format masks below 164 (that are reserved for Microsoft internal \n> use)... except that my patch broke any use of those pre-defined formats.\n\nHopefully the change that I've just pushed to the 1.8 branch should fix \nthe problem.\n\n## \n\nMark Baker\n\n---\n\n|.  \\     -3\n|_J_/ PHP |\n|| |  __  |\n|| |m|  |m|\n\n  I LOVE PHP\n. Thanks for the confirmation, I'll merge the 1.8. branch into develop later this evening\n. MS Excel stores dates as a float, the number of days since 1st January 1900 (a bit like a unix timestamp is a number), and uses a number format mask to identify that it should be displayed as a date/time.\n\nYou see your line in your code that reads\n\n```\n    $objReader->setReadDataOnly(false);\n```\n\nThat line specifically tells PHPExcel **not** to read any formatting information (such as the number format mask that converts an Excel timestamp number into a formatted string) but only to read the raw cell data\n\nThat means PHPExcel can't know whether a cell contains a \"date\" or a \"number\", so it can only treat it as a number.\n\nRemove that one line of code, it will magically start recognising the values as dates again\n. No, nor do I.... and I'm not likely to be able to guess. I have no idea what filetype you're loading, or what it really contains; so you're giving me no clues to try and figure it out either\n\nHijacking a closed question isn't a good way of asking either\n. Using `getOldCalculatedValue()` will return the last value calculated for a formula cell that was generated in **MS Excel** (and even then, it's possible to disable calculations in MS Excel, and this value won't then be set). A file generated by PHPExcel will not populate this value, so it will simply provide a default value of 0.\n\nGenerally speaking, you should always use `getCalculatedValue()` when trying to evaluate a formula value\n. It should already be in the 1.8 branch\n. Thanks for highlighting the error.... I hadn't updated this PR, because I haven't yet changed it in the 1.9 branch (I have the same bundle of commits in my local 1.9 that I did for the 1.8 branch, but haven't yet completed them all)\n. Thanks for spotting this error, merged manually\n. What I don't see here is where you're adding the chart to the PHPExcel object\n. Except that a worksheet title should be a string\n. Excel isn't happy as you think.... effectively you're creating worksheets `for`['2001', '2002', '2003']`not for`[2001, 2002, 2003]`; because Excel worksheet names are strings, even if they're strings comprising all digits. Casting to a string is probably a better option than loosening the validation rules\n. How are you setting the value? Because cell styles shouldn't be affected by this in any way by simply changing a cell value.\n\nYou specifically have to tell PHPExcel Reader and Writer to include charts, the default behaviour is to ignore them\n. Excel5 doesn't support charts at all at the moment.\n\nExcel 2007 supports charts for reading and for writing; HTML and PDF support charts for writing\n. It will be fixed before the release of PHP7\n. All the more serious issues with PHP7 have been addressed in develop branch, and I've been running tests against that. The only things not working are those related to external libraries (jpgraph and various pdf rendering libraries), although phan is still picking up a few warnings about syntax that won't break anything, but still need cleaning up.\n. @naturekzw - under the tagged releases - [PHPExcel 1.8.1](https://github.com/PHPOffice/PHPExcel/tree/1.8.1)\n. Please provide more specifics (even perhaps attach a sample file that demonstrates this issue)..... because I use Office 2013 as standard on my laptop and have never had any crashes on getSheet(), so it certainly isn't as simple as all 2013 documents\n. Without a replicatable test case, it's almost impossible to diagnose a problem, especially with something as complex as an Excel file..... the best I can do is make arbitrary code changes and pray that they don't break anything, and hope that they might fix your problem.... PHP development as black magic\n. So you're basically saying that there's a fault somewhere in the Excel5 Writer..... that doesn't really narrow anything down at all.... I guess I can look at the writer and make a few arbitrary changes in the hope that it fixes things for some external reader application that I have no access to for testing, and hope that it doesn't actually break anything in the process\n. Certainly there have been changes between 1.7.8 and the latest 1.8.1 release (or even the develop branch on github)... including a couple of minor changes to the BIFF Writer.\n\nThere will always be some differences between a file saved in MS Excel and one created by PHPExcel, such as the created/modified timestamps.... without having a complete file, it's difficult to identify those differences, because the offsets aren't consistent but dependent on various content elements within the file (such as the length of document properties like subject and title)\n. I'm going to delete the 1.9 branch for good, and just keep it all on my laptop until the work is complete, and hope that I don't have any kind of laptop failure or get run over by a bus in the meanwhile...... THE 1.9 BRANCH IS NOT STABLE, IT IS NOT FOR USE UNTIL COMPLETE, IT IS MY OFFLINE BACKUP\n. This isn't a PHPExcel issue..... the script that you're running doesn't seem to be the same the two versions: it looks like you're injecting a spurious linefeed somewhere in your 5.2.17 version that's corrupting the output\n. Create a copy of the worksheet you want using either the worksheet's `copy()` method (for a shallow clone), or a PHP clone (which creates a deep clone) and then use the PHPExcel object's `addSheet()` method\n. PHPExcel should handle worksheet names containing single quote without problem, can you provide either a stack trace so I can see what is going on at this point, or a working example of code that will allow me to duplicate the problem\n. If you've found a bug, please provide a working code that demonstrates the issue, and I can look at fixing it properly; but this solution will break a great many worksheets..... and as far as I'm aware, your \"issue\" should be handled correctly by PHPExcel already.\n. Recommendation is to write a script that uses PHP's fgetcsv() function to read each row from the file and use your PHP SQL driver to insert that record into the database..... not really a PHPExcel question at all\n. Well logically you'd just iterate over the rows from the $objWorksheet object (see `Examples/28iterators.php`) for an example, and then use your database interface to insert the values from that row into your database\n. I don't see anywhere that you're setting the cell alignment to wrap in that code, as demonstrated in `/Examples/01simple.php`)..... this has to be set explicitly, it is not the default style\n\n``` php\n$objPHPExcel->getActiveSheet()\n    ->getStyle('A10')\n    ->getAlignment()\n    ->setWrapText(true);\n```\n. Can you provide a file that actually demonstrates this SimpleXML infinite loop bug?\n. Any particular Writers?\n. There is no built-in method that will do this for you; you'd need to write it yourself, ensuring that you moved both the content and the styles, and updated any references to that column using the ReferenceHelper\n. The reason was that failing to do so returned too many invalid results for too many functions with older versions of PHP. It has now been removed in the latest develop branch because I'm fed up with people complaining all the time\n. https://github.com/PHPOffice/PHPExcel/blob/1.8/license.md\n. Which elements of [semantic versioning](http://semver.org/) are we failing on? It would be great if you'd explain what we're doing wrong, in words that I can understand\n. The 1.9 branch isn't in any way stable yet, and shouldn't be used: and unlikely to ever see light of day as PHPExcel 1.9.0..... it's more likely to be 1.0.0 of PHPSpreadsheet instead.... 1.9 is where I'm posting the code changes as I do them so that there's a copy at least if I get hit by a bus, or if the cat fritzes my laptop next time she urinates over it\n. Is that a +1 to my not getting hit by a bus?\n. Yes, PHPExcel will run without issue on PHP 5.6.... I run all my tests against 5.2, 5.3, 5.4, 5.5 and 5.6, and have been testing against 7.0 release candidates for the last 2 months. Over the weekend, I also ran against 7.0 and cleared a couple of remaining issues with that on the develop branch\n\nSQLite is still a caching option for using PHPExcel with earlier versions of PHP that don't have SQLite 3. Sadly, there are still a lot of users on those older versions\n\nPCLZip is provided as an alternative to ZipArchive for versions of PHP that don't necessarily have ZipArchive enabled as standard. Most distros providing recent versions of PHP do have ZipArchive enabled as standard, but that wasn't the case with earlier versions of PHP.\n\nAnd yes, PHPCompatibility is a very useful plug-in for CodeSniffer\n. Then make sure that the row doesn't actually contain 1024 cells.... `next()` will only be called if there is another cell to retrieve\n. Empty is not the same as non-existent..... it's perfectly possible for a cell to contain an empty string or a null.... if you look at the actual code, the cell iterator checks to identify the highest column using a call to `getHighestColumn()`. If `IterateOnlyExistingCells` is `false` then this may include cells that contain styling information or are included in such worksheet features as print ranges. If `IterateOnlyExistingCells` is `true` then it explicitly checks for the existence of cell records loaded from the spreadsheet file\n. No I haven't seen anything like it, and I'm still trying to work out what you actually mean about `overwriting the value not clearing it and then writing to it`.\n. Currently testing, thanks for the PR\n. Currently testing, thanks for the PR.... it's been on my to do list for a while now\n. I'm not sure what you're doing, but a block of code as simple as\n\n```\nrequire_once dirname(__FILE__) . '/../Classes/PHPExcel.php';\n\necho PHPExcel_Style_NumberFormat::toFormattedString(10, \"0.00\"), PHP_EOL;\necho PHPExcel_Style_NumberFormat::toFormattedString(10.00, \"0.00\"), PHP_EOL;\n```\n\ndisplays\n\n```\n10.00\n10.00\n```\n\nwhich is correct behaviour\n\nCan you show exactly what you're doing?\n. Thanks.... I hate having to maintain backward compatibility for PHP5.2\n. Thanks for highlighting this, manually merged, and will push within the next hour or so\n. Currently testing, thanks for the PR.... it's been on my to do list for a while now\n. So what exactly is the benefit in changing a variable name from `$e` to `$S`?\n. So give me some clues..... what are you actually doing? Are you trying to add an image to a file? If so, what type of file? Have you changed anything on your server? PHPExcel has no reason to access any external sites, and there's nothing in the code that should do so unless somebody has created a file containing a drawing referring to an external site.... and PHPExcel expects all images in a file to be embedded in the file itself.\n. Then I'm afraid you'll have to have a word with Microsoft and get them to change it.... because I'm afraid that it's MS Excel itself that imposes this limit for BIFF-format xls files.... Once you've persuaded Microsoft to make that change, then I'll modify PHPExcel to work with it\n. Using Rich Text:\n\n```\n$objRichText = new PHPExcel_RichText();\n$objRichText->createText('Test');\n\n$objSuperscript = $objRichText->createTextRun('1');\n$objSuperscript->getFont()->setSuperScript(true);\n\n$worksheet->setCellValue('A1', $objRichText);\n```\n\nOr there is an HTML to RichText helper available as well:\n\n```\n$markup = 'Test<sup>1</sup>';\n$wizard = new PHPExcel_Helper_HTML;\n$richText = $wizard->toRichTextObject($markup);\n\n$worksheet->setCellValue('A1', $richText);\n```\n. Please provide actual code that demonstrates this problem, because I am unable to replicate\n. Do some basic diagnostics, check that the template file is loading correctly, check whether a cell like Z4 is populated with any value\n. Are these actually images? Or are they charts? Or form elements?\n. Then I'll need an example file to demonstrate the problem, because PHPExcel should read and write pretty much any images without issue\n. We don't support older versions of PHPExcel\n. Without knowing what your CSV file contains, how can I guess what PHPExcel thinks of it. Look at your file, look at the PHPExcel code, work out why PHPExcel thinks it might be an HTML file..... unless I can see your csv file, I can't do that for you\n. OK, so the PHP checker for HTML is **_too**_ simple because it's based on **_anything that looks like markup**_ (e.g. tags) being accepted as HTML markup..... so I'm open to suggestions on how to improve that for the rare case of a csv file that contains markup of some description.\n\n>  because Nuovo does a file extension check as well as a file type check\n\nIf PHPExcel did that, then it would report 95% errors...... because so many files aren't don't have a correct extensions, csv or html markup content often have an xls or xlsx extension.\n\nThat's precisely why we ignore the file extension\n. For precisely the reasons I've specified, namely misnamed files which are very common, No..... look at the identify() code..... it actually checks the extension to use for its initial \"check\", but only if the extension isn't csv..... I'lll take a look at changing this, but not while I'm in the work that actually gives me an income\n. Merged manually, thank you for the PR\n. If you want additional format constants, you should really add them in your own script; those provided in PHPExcel are simply those provided intenally in MS Excel, or required for the advanced value binder in PHPExcel\n. Do you have an example file that I can use to test this?\n. Uh! Where is any of the PHPExcel code using short array syntax? The 1.8 branch shouldn't have anything that isn't supported in PHP 5.2.0. Rather than changing the minimum version, the solution is to correct anything that isn't compatible\n. 1.9 is minimum PHP 5.4.0, as indicated in the composer.json file in the 1.9 branch\n. I'd start by recommending that you upgrade to the version of PHPExcel from the latest develop branch on github, because there have been some fixes implemented in the VLOOKUP functionsince 1.8.0\n. There's a [gist here](https://gist.github.com/MarkBaker/5908357) that shows how t debug the Calculation Engine\n. What are you trying to achieve? Tokenising a formula is a part of the parsing process, prior to execution of the formula; it's not intended as a method for changing a formula in any way; it's not intended to be reversible.\n\nIf you need to change the formula, do it using the string value of that formula, using str_replace() or regexp (or similar) \n. It supports UTF-8, I've never tried emoji, I've never tried emoji in MS Excel either\n. Corrected\n. Thank you for this, merged manually\n. Try setting `$objWriter->setPreCalculateFormulas(true);` before saving\n. Then something has magically changed somewhere, because PHPExcel has never had any problem with nested formula before; but I'm not aware of any commits that would have broken this. Which branch are you testing with?\n. Apologies, fixed\n. There's nothing to stop you defining additional formats in your own code, they're simply strings as you see\n. You can limit the data that you import by using a read filter; but it looks like you're using some kind of wrapper class around PHPExcel, so you may not have access to call PHPExcel methods directly\n. This won't work in all cases, because $ref could look something like `A1:E10 A20:E25` which is a series of ranges that wouldn't be accepted by the setConditionalStyles() method which only accepts a single range or a single cell value; but its easy enough to modify your change as\n\n```\n$cellBlocks = explode(' ', str_replace('$', '', strtoupper($ref)));\nforeach ($cellBlocks as $cellBlock) {\n    $docSheet->getStyle($cellBlock)->setConditionalStyles($conditionalStyles);\n}\n```\n\nWill merge this manually, but thanks for the pointer to this inefficiency\n. Implemented to 1.8 branch, merging to develop\n. Very risky, because you might find `x:` in the content of a cell; and something like `=SUM(x:y)` in a formula is perfectly valid\n. This option is not available from within PHPExcel, because the overhead of sorting is excessively high\n. If you're building a spreadsheet, then you need to ensure that the data is sorted before you start building it (e.g. in a database query or similar). If you're reading a spreadsheet, then read it to an array or temporary database table, and sort it there.\n. No! Sorting within PHPExcel is a big overhead, which is why it has never been implemented. This isn't an error. That's how cell caching works, only a single cell is \"active\" in memory at any one time.... if you reference that, and then change the active cell, you'll be pointing to the current \"active\" cell, which will be the last cell that you accessed..... don't use references to cells\n. Thanks for the fix\n. @tangix Please explain that comment; charts work in all tests now as correctly (or better) than in 1.7.8\n\nIf you make a sweeping comment like that, please provide specific examples to back up exactly what no longer works\n. Perhaps I need a bit more than that, because the `32chartreadwrite.php` examples for pie charts all run as expected, and MS Excel makes no complaints when opening the file\n. If cell A10 contains a dropdown list, then this is cell content, whether you have actively selected an entry from that list or not; therefore row 10 is the highest data row because row 10 contains a dropdown\n. The problem then is we end up with several more getHighest\\* methods, all reporting different things, and having to work in different ways.... having two methods already feels bad enough, and there's enough confusion about them.... and there's a big difference between getHighestColumn() (calculated purely during the file load) and getHighestDataColumn() (calculated when called based on the actual cell list).... but your request would not only require testing whether a cell existed, but also testing the value of that cell, an even bigger overhead\n. So perhaps I should write and document 20 different versions:\n- getHighestRowAsReadFromFileThatIsReferencedByAnything() \n- getHighestRowWhereACellActuallyExists()\n- getHighestRowWhereCellExistsAndIsNonBlank()\n\netc\nYou say \"do something about it\".... do what? Change the methods to work differently (and break backward compatibility), change them to work how? As you want them to work?\n\nThe difference is historic..... getHighestRow() has always existed, and always worked from loading the file; it never changed whatever was done to the data, so adding or deleting rows left it unchanged. getHighestDataRow() was added much more recently, and works by testing whether there is an entry in the cell collection. As nulls or empty strings are still data, they will still be reported, because the a cell containing those values still exists.\n. I'd hope that it would be `$excel->getProperties()->setCreator('\u0622\u0631\u062f')` because the PHPExcel object doesn't have a `setCreator()` method\n. In what way does it misread it? What is the separator defined as in your file? What is it being set to?\n. If a defined separator line is\n\n```\nsep=;\n01234\n```\n\nthen \n\n```\n$this->delimiter = substr($line, 4, 1);\n```\n\nshould read 1 character from offset 4, which should be `;`\n. Then the problem isn't with the line that reads `$this->delimiter = substr($line, 4, 1);` but with any logic that allows it to drop through to that line if no `sep=x` line exists in the file\n. Manually changed, with additional logic for case-insensitivity\n. So which version of PHPExcel are you having this problem with? Because 227 is a blank line in the latest develop branch of the library\n. And has your PHP7 been built without the zip library?\n. If you're adding a cloned sheet, or a new sheet from a different PHPExcel object, then consider using `addExternalSheet()` instead of `addSheet()` because that will copy the styles with it, rather than relying on both PHPExcel objects having exactly the same style definitions and indexes\n. Unless you specify a Reader, PHPExcel tries to identify the file to figure out which Reader to use to load it, testing each format in turn until it finds a match, and defaulting to CSV if it doesn't find any, because there is no signature that can identify a file as csv format.\n\nThis means that it needs to use php_zip to check whether the file could be ods, xlsx, etc first (note that xls is not a zip-based format); and if php_zip is not available, then it will fail.\n\nWith modern versions of PHP, zip would normally be included by default, and has to have been explicitly disabled for it not to be present. If it isn't, then you can fall back to the PCLZip alternative, configuring PHP to use that before executing the load.\n\nAlternatively, if you know that the file in question is a csv file, then you can specify to use the CSV Reader explicitly, rather than relying on PHPExcel to identify the format first (which is an overhead anyway)\n. Of course, pclzip.lib.php is an external library\n. It might look like an \"internal\" library, because we include it directly in the distribution; but it' actually [this library](https://github.com/ivanlanin/pclzip) which has finaly made its way onto github and packagist; and finally been updated\n. Of course, if your version of PHP is high enough, it isn't even needed because ZipArchive is built-in as standard by default\n. Are they really uppercase characters? Or simply lowercase characters styled as uppercase?\n. I can see the cells where styling has been added in your images; which stylings have been changed?\n\nAnd can you attach the external file to this issue?\n. There is no package `1.8.1.0`, the latest release is `1.8.1`. The `liuggio/excelbundle` should probably be checking for the non-dev releases\n\nAnd yes builds are failing, because PHPExcel doesn't yet pass all tests...... TDD, test and then write the code to pass those tests.... PHPExcel still fails some of the edge cases tests.... but if we didn't release until every single test passed, then there wouldn't be any releases.... with each release, it passes more of those tests, but isn't yet 100% perfect\n. This has long been resolved in the development branch\n. Are there any version issues with this? DateTimeImmutable and DateTimeInterface were only introduced in PHP 5.5\n. A good question, and one that I don't have an answer for. The 1.8 branch is still targeted at a minimum PHP version of 5.2, and sadly there's still too many people running older versions of PHP like that.\n\nThe 1.9 branch is being developed as the more up-to-date version, targeted at PHP 5.4, and using namespacing, etc.... not backward compatible with the 1.8 branch... sadly, changing that from 5.4 to 5.5 might seem like a good idea (still supported versions of PHP), and with all the nice extras like Generators as well; but there's still a sizeable 5.4 userbase that wouldn't be supported. It might be worth raising on https://gitter.im/PHPOffice/PHPExcel to see what consensus there might be for raising the minimum PHP version for the 1.9 branch to 5.5 (the library will also be renamed PHPSpreadsheet in due course), which would then allow your patch to be applied without issue.\n. Adding `$displayBlanksAs = self::DISPLAY_BLANKS_AS_GAP` among the existing arguments to the Chart constructor will break backward compatibility, and certainly break the Excel2007 Reader when charts are being loaded..... it would be better to have this new argument at the end\n. Unfortunately, DateTimeInterface requires a minimum PHP version of 5.5 (the same as DatetimeImmutable) and PHPExcel is 5.2 minmum requirement, which would break things for all users not yet running >= 5.5.... I've already had one PR for this change, and don't have a solution for the version problem..... that's why I opened up the call for comments on gitter about a minimum 5.5 version for the 1.9 branch\n. Even for the 1.9 branch, target PHP is >+ 5.4, not 5.5.... that's what the discussion on gitter is all about\n. That's what the discussion on [gitter](https://gitter.im/PHPOffice/PHPExcel) is supposed to be about. It was specifically the DateTimeImmutable that triggered the discussion in the first place\n. It's not really intuitive to have a getCellValue() method (or series of methods) in the Worksheet object, because you're setting up new shortcuts that act on a different object (the cell object) and don't add anything new to functionality, while filling the worksheet with yet more methods.... I'm already not a fan of the setCellValue() methods in the worksheet because they're already close to turning the worksheet into a \"god object\".\n. This is not an issue with PHPExcel, this is called ROUNDING\n. What do you mean \"round() not working\"? `round()` is a standard PHP function, that works pretty effectively:\n\n```\n$price = 544.8099999999999;\necho round($price, 2);\n```\n\n[Demo](https://3v4l.org/B9foi)\n\nAlternatively, if you have formatting for your cells, then use:\n\n```\n$price = $objPHPExcel->getActiveSheet()->getCellByColumnAndRow(4, $i)->getFormattedValue();\n```\n\nAs described in the [PHPExcel Documentation](https://github.com/PHPOffice/PHPExcel/blob/develop/Documentation/markdown/Overview/07-Accessing-Cells.md#retrieving-a-cell-value-by-coordinate)\n. `1.9-dev` shouldn't be a branch alias for `1.8` in any way, it's the initial branch for the next major version that breaks backward compatibility with `1.8` quite completely. It's soon to be deleted as it has provided the basis for creating the PHPSpreadsheet repository; any branch alias for `1.8` master releases should be `1.8-dev`\n. That's why what was 1.9 has now been moved to its own repo, and the 1.9 branch will be deleted \"real soon now\".... I've been busy with the Dutch PHP Conference since I created the new repo, so I didn't delete it before, but will do so this week\n. `getCalculatedValue()` will evaluate the formula and return the calculated value. If it is not doing so, but returning the formula instead, then it is not seeing that formula as a formula, but as a string. Why that should be happening, I don't know; but it must be something specific to your spreadsheet n file, and as I have no access to that file, I can't help. If you can post a file to demonstrate the problem, then I might be able to determine why it isn't working for you\n. How are you setting the cell value? Simply setting formatting to a type of string won't automagically convert a numeric value to one with leading zeroes, you need to set the cell value explicitly as a string datatype to retain the existing leading zeroes\n. So you're setting an empty string?\n\nAlright, what format are you writing, and how are you checking how it's been written?\n. Those constants are nothing more than strings; you can pass any string you want as a number format style mask (though best if it is a valid Excel number format mask), you're not limited to those defined in the NumberFormat.php file\n. Well perhaps there is a problem with the 3rd party invoicing application?\n. It may well be different.... PHPExcel doesn't \"optimise\" its storage of data in terms of size, because it simply tries to write the data as quickly as it can (it's a complex, slow process from native PHP anyway); whereas Excel and LibreOffice do, so there will be differences in size\n. This is absolutely nothing to do with PHPExcel, but with what your script does after calling the save(). If you generate any subsequent output, or send your own headers, then you're potentially going to cause yourself problems.\n\nIf you're doing this within a framework, then that may be doing the additional output or changing headers; but most frameworks provide a mechanism to suppress that behaviour\n. Is the date actually a date? Or simply a string containing a value that we humans will interpret as a date? Please provide some specifics\n. PHPExcel_Shared_Date::isDateTime() certainly works in most cases; and dataType=n with decimal value 42337 is simply indicating that the cell contains a number (`dataType=n`) with  value of 42337.\n\nWhat indicates that  cell value is  to be displayed as a date in MS Excel is the number format mask for that cell; and PHPExcel identifies whether a cell contains a date/time value by looking at that number format mask; so can you post the format mask?\n. The php_zip extension is a dependency for PHPExcel. If you don't have that dependency, then you can use the built-in PCLZip instead\n\n```\nPHPExcel_Settings::setZipClass(PHPExcel_Settings::PCLZIP);\n```\n\nbut at a significant cost in performance\n. Why do you actually need this? Are you trying to access the ZipArchive class before any other class in the PHPExcel library?\n. Thanks for identifying that problem; I've fixed it in the develop branch on github\n. Explain your problem!!! Simply showing two images doesn't make an issue report\n. Wrong in what way? What data is wrong?\n. I can't see any difference in the sixth line of data in those pictures:\n\n```\n 0 | 17130.36 | 22919.95\n```\n. Fixed in PHPOffice/PHPSpreadsheet, thanks for highlighting this\n. Unfortunately, this will break versions of PHPExcel running on earlier versions of PHP that don't support namespacing. We can't apply this change without a major break of PHPExcel, forcing version of PHP >= 5.3\n. So what cell caching methods have you tried using? \n. Do you mean unresponsive or simply slower? PHPExcel cannot exceed PHP's memory limits, so cell caching is method to reduce memory usage, but at  cost in execution speed\n. It's perfectly possible, but you no longer get a cell object returned, you get a \"pointer\" to the **_current**_ cell object, and there is only ever a single \"current\" cell object at any one time. Getting a different cell will reset that pointer to point to the latest accessed cell instead.\n. Because 1.7.7 was a different version.... between then and the current version 1.8.1 we introduced cell caching as a way of reducing the memory footprint of a spreadsheet, and that introduced the principle of having a pointer to a current active cell rather than making every cell directly available in memory.\n\nThere is no way of bypassing that. Why do you need to hold individual cells in memory anyway?\n. Save the cell address so you can retrieve that cell subsequently and get its value (though of course that will then become the current cell); or save the value\n. I'm going to delete this 1.9 branch.... it was useful for the initial namespacing work, but is causing much more confusion now\n. Native speadsheet formats require the ability to move the file pointer backward and forward through the file using functions like fseek(), because the actual content is not organised linearly in the file, and not all file streams support fseek, I'm not aware of any remote streams that do support seeking\n. This was something we'd originally implemented in PHPExcel, except that it created problems with earlier versions of PHP that rejected the additional arguments for `spl_autoload_register()` so it had to be removed. Thanks for resubmitting for PHPSpreadsheet now that the version restriction no longer applies\n. PHPExcel should be converting all content that it reads from the file to UTF-8 as it reads it; there is no need to convert it to utf-8 again. Are you displaying it as UTF-8?\n. Minimum requirements for the IntlDateFormatter class: `(PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0)` which requires forcing PHPExcel minimum version to 5.3, and ensuring that the relevant extensions are enabled\n. Talking about dropping support for PHP 5.2 is the type of thing that gets me death threats (seriously).... though you may be aware that we've been porting all the code across to PHPSpreadsheet, and rewriting swathes of it for PHP >= 5.5\n. Always use UTF-8; if the text isn't UTF-8 then use PHP's `iconv()` or `mb_*` functions to convert it to UTF-8. What?\n. No it isn't supported\n. You're not limited simply to the pre-defined format mask values, you can use almost anything that MS Excel will recognise\n. PHPExcel uses PHP memory, which is limited by your php.ini file settings. It cannot magically load more data from a file than memory permits, although there are methods provided for caching cell data that reduce the memory requirements. Which of those methods are you using?. I can understand what this does; but what is it actually a fix for?. Can you explain what you mean? What is it that you want to do?. Look at the latest develop branch, this has been resolved there for quite some time. Sadly not; I've tried several times (it errors if I try it myself), and I've asked the codeplex people to do it as well, all without success... I'll try chasing them up again, see if perhaps I'll find somebody willing to do it this time. It's getting an empty string, in the fifth column, which is still valid cell content as far as MS Excel is concerned. That's correct. MS Excel treats an empty string, or a null as data in a cell, even though it looks empty to a human, it isn't empty to excel. As for when `getHighestColumn()` and `getHighestDataColumn()` return different results... load your file and test the returned values of both functions, then add new data in cell `Z1` show the return values from both functions again\r\n. Another difference is that a cell in a loaded excel file can have styling, or be referenced in a print range or similar, but still be truly empty.... `getHighestColumn()` and `getHighestDataColumn()` can return different results in this case as well, because `getHighestColumn()` includes the reference, while `getHighestDataColumn()` ignores references, and looks to see if the cell actually exists. It's a limitation at the moment... it' a fairly intensive and slow piece of processing to check and do those updates on the same worksheet, so a conscious decision was made not to do so on all worksheets when it would really slow performance. If you put 2 dots (decimal points) in a value, then it can only be a string; so MS Excel will format it `General` (the default cell formatting for MS Excel) as a string. With a single dot (decimal point), PHPExcel will treat it as a number, and set the datatype accordingly; and MS Excel will see it as a floating point number, and MS Excel `General` formatting rules will format it using scientific formatting if it is greater than a standard 32-bit integer size, treating it as a float.\r\n\r\nIf you want to force string formatting, then you need to do so explicitly, either by setting it as a string datatype using `setCellValueExplicit()` to force it to be set as a string; or set a format mask other than `General` such as `0.00`\r\n\r\ne.g.\r\n\r\n```\r\n$objPHPExcel->getActiveSheet()->getStyle('A9')\r\n    ->getNumberFormat()\r\n    ->setFormatCode(\r\n        '0'\r\n    );\r\n```. Are you using PHPExcel's HTML Writer at all? If so, how?. Why don't you tell the HTML Writer to write all sheets in one output:\r\n```php\r\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'HTML');\r\n$objWriter->writeAllSheets();\r\n$objWriter->save('php://output');\r\n```\r\nrather than looping through the individual sheets, instantiating a new writer for each; that's adding quite a lot of overhead; and `writeAllSheets()` also integrates the different sheet outputs. Yes, it will write them all to one page, but in an integrated manner (tabbed, like MS Excel shows them); unlike writing each sheet individually in a loop, which display them one after the other..... but why don't you simply try it for yourself and see if it's what you want.. Personally, I'd create my own custom writer based on the HTML Writer (perhaps extending it, so you still have access to the core logic), rather than editing the existing HTML Writer. There's a section of the [PHPExcel Docs ](https://github.com/PHPOffice/PHPExcel/blob/develop/Documentation/markdown/Overview/08-Recipes.md#setting-a-columns-width)that tries to explain the units used for measurements. The formal standard for OfficeOpenXML reserves all number format Ids below 164 for Microsoft use only, but not all of those are used, and there are some third party writers that abuse this and use those \"gaps\"... this is already covered in develop branch code, where the lines you quote have been replaced by\r\n\r\n```\r\n// We shouldn't override any of the built-in MS Excel values (values below id 164)\r\n//  But there's a lot of naughty homebrew xlsx writers that do use \"reserved\" id values that aren't actually used\r\n//  So we make allowance for them rather than lose formatting masks\r\nif ((int)$xf[\"numFmtId\"] < 164 && PHPExcel_Style_NumberFormat::builtInFormatCode((int)$xf[\"numFmtId\"]) !== '') {\r\n    $numFmt = PHPExcel_Style_NumberFormat::builtInFormatCode((int)$xf[\"numFmtId\"]);\r\n}\r\n```. Entirely possible.... `getOldCalculatedValue()` isn't guaranteed. It's an old value that is stored in the spreadsheet file that you've loaded, but can be disabled from within MS Excel, or erroneous if a formula requires access to external files that aren't accessible, or the file has been opened and recalculated using other programs.\r\n\r\nBut how can you possibly expect us to know whether either figure is right or wrong without providing details of the formula, values, etc?. MS EXcel doesn't support dates prior to 1st January 1900 (or 1904 if using the Excel for Mac Calendar). If you have a date in an MS Excel spreadsheet that is prior to that base date; then it isn't a date but a string. And that is still the case. PHPExcel does not support form elements. `Render path: ../../lib/phpexcel/PHPExcel/Writer/PDF/mPDF` isn't pointing to your instance of mPDF.... it's pointing to the PHPExcel wrapper for mPDF..... you need to have mPDF itself installed on your server, and use the `$rendererLibraryPath` argument for `PHPExcel_Settings::setPdfRenderer()` to tell PHPExcel where the library has been installed. PHPExcel is quite capable of finding its own mPDF wrapper, but cannot guess where you have installed the actual mPDF library. XLS files don't have a line ending format, so PHPExcel doesn't have any option to change something that doesn't exist.... nor can I understand what your actual problem is, because you're original question seems to be missing some information, such as what PHPExcel actually creates compared with what you want to create. A sample csv file that causes your problem so we can try to replicate it would also help. Where do you see the line endings in the binary xls file? It's a binary format, not a flat file format with line endings, so what Notepad++ says should be completely irrelevant.... xls files are never intended to be displayed in a text editor, but in an application that actually parses the binary format.\r\n\r\nI'm still completely unclear about your problem.... what happens when you open this XLS file in MS Excel, or in OpenOffice? Does it display correctly there?. This is quite explicitly [stated in the documentation](https://github.com/PHPOffice/PHPExcel/blob/develop/Documentation/markdown/Overview/08-Recipes.md#write-a-formula-into-a-cell); and PHPExcel has no way of knowing if you are German or English or Japanese. Does xls itself have emoji support; if not, then we cannot implement it in PHPExcel. PHPExcel will still be distributed as \"stripped down\" packages via the CodePlex site (http://phpexcel.codeplex.com) for a while, which won't include the unit tests, etc (Code and Docs package, Code package, Docs package). We'll also probably look at other distributions for the packages: we already use PEAR, but we may also introduce a phar of the code. github will be used as a full source repository, including the slowly growing unit test suite.\n. Fixed, thanks for pointing it out\n. Basic rules for autofilters:\nEach worksheet can only have a single autofilter... at a minimum defined as the cell range to which the autofilter options can be applied... this is what we do at the moment. In Excel2007, this is the ref attribute of the worksheets autoFilter element.\nWhen filters are actually applied, then each column in the range can have one or more custom filters. These are identified by customFilter elements in filterColumn elements.Multiple filter criteria can be combined using AND or OR, and (depending on the datatype) they can include ? or \\* wildcards, and can have an operator such as greaterThanOrEqual.\nIf a filter is applied, then all rows in the range that match the criteria are visible, all other rows are hidden... matching this logic in PHPExcel adds a level of complexity when adding or changing filter criteria.\n\nThe other major element of autofilters is sorting. It appears that autoFilter sorting actually change the content of the rows, so I'd recommend that we don't implement this.\n\n```\n<autoFilter ref=\"D1:E10\">\n    <filterColumn colId=\"0\">\n        <customFilters>\n            <customFilter val=\"A*\"/>\n            <customFilter val=\"*E\"/>\n        </customFilters>\n    </filterColumn>\n    <filterColumn colId=\"1\">\n        <customFilters>\n            <customFilter val=\"2\" operator=\"greaterThanOrEqual\"/>\n        </customFilters>\n    </filterColumn>\n</autoFilter>\n```\n\nMy inclination is to replace the worksheet's autoFilter attribute (defining the range) with an PHPExcel_AutoFilter object comprising a range attribute and an array of PHPExcel_AutoFilter_Column objects, the PHPExcel_AutoFilter_Column objects comprising the array of rules (and the operator constants).\n. It should be fairly easy to create the appropriate autofiltering classes, and to modify the Excel2007 Reader and Writer to handle this... the biggest problems I see are providing the appropriate methods to add/remove/modify the filter criteria, validating the filtering rules and then resetting all the row hidden attributes as appropriate.\n. Note - Can't find any autofiltering in the Excel5 Reader other than in the sheet protection record, looks like it isn't implemented in the reader\n. The refactoring committed for core 15 minutes ago should be completely transparent to any existing user code that accesses the autofilter range for backward compatibility\n. The changes committed to the autofilter branch so far simply replicate existing functionality... except using an autofilter class instead of a simple string. Using it should be absolutely identical to the existing 1.7.7 code (for backward compatibility). I'm now working on the additions to that class for the actual expression filters, but haven't committed any of that to the branch yet\n. OK, so not quite as straightforward as I'd hoped - there's a couple of more complex types for date selections that I still need to make allowance for, but I've got the guts of reading, manipulating and writing now complete. Still need to do some fine tuning; and then I'll need to manage the data testing and hiding/unhiding or rows.\nI'm also going to adjust the autoCalculate column width while I'm about it to allow for teh width of the autofilter dropdown icon... but on schedule still to have the basics for Excel2007 working by next weekend, and on target for a 1.7.8 release.\n. That's all my code for AutoFilter expressions (core, for Excel2007 Reader and Excel2007 Writer) merged into the develop branch. This provides support for simple/standard filters, dategroup filters, custom filters, dynamic filters and top10 filters. It does not support colorFilters (the Rich Text rules are a real PITA), iconFilters or external filter lists - though I suspect these are all relatively rare anyway). Documentation is included, with a new AutoFilter Reference document.\n\nThe only thing still outstanding is handling the actual hide/unhide of rows appropriate to the actual filter rules. That will take a little more work to implement.... as a nice bonus though, a lot of the filtering code should be relevant when I finally start to implement pivot tables.\n. Autofilter Expressions implemented in core, and for Excel2007 Reader and Writer in Production release 1.7.8\n. Thanks, much appreciated\n\nAccepted!\nMerged manually to put it in the develop branch rather than in master\n. Bugfix accepted (with Progi1984's modification). Thanks for submitting.\n\nMerged manually to incorporate it into the develop branch rather than master\n. Thanks. Will test with all PDF renderers before merging.\n. Applying manually - will merge later tonight\n. Applied manually. Thanks for the patch\n. Thanks for the patch. I will merge it, but I'm going to make some modifications to support locale currencies first\n. Thanks - now merged with some modification for locale currency symbols\n. Not forgotten, but I'm trying to work out a good generic way of implementing. I know you already have a temporary solution\n. I've worked out the basic mechanic for handling the masking in a way that will work as readily with mask=\"0000-00-00\" and number 19601219 as with your phone number example.... the difficulty now is identifying masks of that type without affecting other standard masks such as #,##0.00\n. There is no _visible_ content in those apparently empty cells, but they can still contain style information, conditional formatting, be part of merge groups, etc. Within MS Excel, the difference between Edit Clear and Edit Delete is that clear removes any content from the cells, but leaves style information; delete removes the cells in their entirety.\n\nThe default behaviour of PHPExcel is to load these cells because they do contain formatting information and other features that would be required if (for example) you were using that spreadsheet as a template, and wanted to retain that formatting information so that it was there when you populated the otherwise empty template with data before saving.\n. Looking more closely at the situations where this function is used, the space separator isn't being used as an intersect operator like in Excel formulae, but simply as an alternative to the comma to separate several range entries in the same string. It means we don't need to do anything particularly clever, although the function should still eliminate duplicated cell addresses from the returned list. \n. Merged manually because github isn't good for reviewing changes to binaries\n. No, there isn't a \"stable\" version here yet. The latest stable is the 1.7.7 release on phpexcel.codeplex.com and the code had already been modified between that release and our move here to github, so we have nothing that can actually be tagged as stable yet.\n\nWithin the next two weeks, we should have a stable 1.7.8. release, at which point I'll be merging that into master and tagging it as 1.7.8, while also creating deployment packages to distribute on codeplex.\n. Commit history seemed to copy across, but not release tags\n. Thanks for taking the time for this submission, it's something that's been requested before but always been so low on the priority list.\n. Reading the .xls specs, this is stored in the grbits of the PLV (Page Layout View) record (8C8h if created on a Mac, 88Bh if created on Windows) which have a different layout (painfully sensible of you Microsoft) and were introduced in Excel2007 and Mac Excel 11 respectively. I've not tested to see if earlier versions of Excel recognise this record in xls files\n. No, there aren't any \"version\" tags here yet. Historic tags were not copied across when the repository was transferred from Subversion.\n\nThe latest stable is the 1.7.7 release on phpexcel.codeplex.com and the code had already been modified between that release and our move here to github, so we have nothing that can actually be tagged yet.\n\nWithin the next two weeks, we should have a stable 1.7.8. release, at which point I'll be merging that into master and tagging it as 1.7.8, while also creating deployment packages to distribute on codeplex.\nFrom that point on, all releases will be tagged here\n. Nice, simple enhancement. I'll be interested to see how well the different PDF rendering engines handle it. Thanks\n. If your code is identical, and the version of PHPExcel is identical, then there's something different in your hosting configuration. What do you mean by encoding though? Do you mean character set? \n. header charset has no effect whatsoever on the content of the file generated by PHPExcel. There could be differences in the configuration of PHP between the two machines: do a phpinfo for the two servers, and look for the differences\n. Thanks for the investigative work... not sure if I should try to do something about this in PHPExcel itself or not\n. Can you hash your script file on but versions of Ubuntu just to confirm that it is actually identical, and that one version doesn't have a spurious white space somewher?\n. Linux has an md5sum that will generate an md5 hash value for a specified filename. e.g.:\n\nmd5sum myTestFile.xls\n\ngives\n\n36fab1926423d8acb9884fe4c2d8e913  myTestFile.xls\n. Thanks for this.... distribution as a phar was definitely on the roadmap for this year, so it's much appreciated\n. I've modified slightly to move it to the build directory so that I can include building the phar file as part of the standard build process... testing at the moment (haven't encountered any problems yet, but I still need to test chart rendering and pdf generation where we're hooking into external libraries), but phar is definitely a great addition to our distribution options. Thanks again.\n. Manually merged\n. Is this opening and saving an xls or opening and saving an xlsx?\n. Resolved in my local version and will commit/merge to develop later today\n. Full fix should now be committed and merged to develop branch\n. Obviously a different problem: This is in the Excel5 Reader when reading objects such as cell comments or images, the closed issue was with the Excel2007 Writer when using defined names in AutoFilter ranges. Don't know what object type it's located in your file without examining the file\n. Thanks. I'd already realised that the changes I'd merged for autofilter expressions had broken saving xls/xlsx files without any autofilter defined - I've implemented the fixes locally and will be committing/merging back to develop later today\n. Thanks lowfill - I will add those validations as well - but I'd already been working on the fix since it was first brought to my attention and wanted to get it in place as quickly as I could. I still need to rerun all the tests to ensure I haven't missed anything critical, but I'll be committing the more comprehensive fix later (or possibly tomorrow). I'd just had so many people telling me that things were broken here, on codeplex, via mail, via twitter, even to my company email, that I wanted to get that quick fix committed and merged.\n\nIt's also why I've still left this open for the moment\n. Manual merge will be committed later this evening, thanks for all the work you've done on this\n. I've no idea how Microsoft modify the workbook to identify it as shareable, so the answer is \"No\" at this point in time\n. Certainly it requires edit hitory (the revision tables) but without reading through all the formal specs it's hard to identify if there's other changes needed to the core files (or what is required for Excel5 - BIFF files can also be shared)\n. The unit tests certainly need a lot of love and attention, and have been largely neglected for a long time, and I'm ore than happy to see some new work in that area. The develop_2.0.0 branch is dead for the moment; I've refactored a lot of the code to use a an object factory, and moved some of the core components to a repository common for all PHPOffice applications; and am rewriting the calculation engine significantly, and those changes won't merge cleanly with any existing branch. So any additions should be against the develop branch.\n. Hopefully the fix that I've just pushed to the autofilter branch should resolve this issue, though I'll run a couple more tests before I close\n. Looks like that fix now works, though I'm sure the code in ReferenceHelper can be cleaned up a bit. Merging to the develop branch.\n. Identical to Issue #32\n. Modified worksheet clone to cleanly handle the autofilter area, though not yet handling cloning the autofilter expressions to go with it\n. runall.php will take a long time to run.... it's doing a shell exec for every test script... and is intended to be run from the command line, not via a browser.\n\nAdded a display message to runall.php if not running in CLI. Will commit/push later tonight\n. There are thousands of \"Advanced options\" in Excel. I'm not going to leave an issue that is simply \"Excel Advanced Options\" because it can never be closed no matter how much work I do.... and targets that can never be fulfilled aren't conducive to working on them.\n\nSo I'm modifying the title of this issue to the specific feature that you want, which is an achievable objective.\n\nPS. I'm not aware that github allows the posting of file attachments against issues, so posting to the codeplex with a link from here to there should allow me to access the example file.\n. PHPExcel expects a UST date/time for date time values to provide consistency.\n. As a potential option to handle this, I might modify the conversion handling methods to include an optional allowForTimeZone option when the input or output is a unix timestamp. Default will remain an assumption of UST unless allowForTimeZone is TRUE.\nWhen working with DateTime objects, timezone adjustment is automatic, so it isn't needed in that case.\n. UTC is the default because MS Excel uses UTC Internally\n. Can you test against the github develop branch code? I've just pushed a fix that I believe works, although I hven't been able to replicate the exact problem.\n. http://phpexcel.codeplex.com/workitem/18425\n. Thanks for the additional test\n. Thanks for pointing out the error\n. The calculation engine is going to be completely rewritten over the next few months to handle (amongst other things) array formulae and a major performance boost. I shall certainly take this into account when I do the rewrite.\n\nMy inclination is to offer a configuration option in way that it is handled: either throw an exception, or fallback to a NULL so that the formula finishes evaluating and returns a result based on that NULL.\n. Excel should actually return a #REF for any cell reference that doesn't exist.\n. I've put in a quick fix to treat cells in non-existent worksheets as a NULL value (the same as empty cells in the current worksheet), but will leave this open as a reminder for while I'm working on the calc engine rewrite.\n. I thought I'd fixed this already. Please check using the latest develop branch code, because if ($reader !== $extensionType) { is not a line that exists in the develop code any more. It was changed earlier in this development cycle.\n. No problem.... once I've finished testing 1.7.8 and released it, I'll merge that into master. From that point, master will always reflect the latest production release.\n. This was certainly true for 1.7.7, but I've already fixed this issue on the develop branch here on github.\n\nUsing the following code to try and replicate your problem:\n\n```\n$objPHPExcel = new PHPExcel();\n\n$objPHPExcel->setActiveSheetIndex(0);\n$objPHPExcel->getActiveSheet()->setCellValue('A1', '0.25');\n\n$objPHPExcel->getActiveSheet()->getStyle('A1')\n    ->getNumberFormat()\n    ->setFormatCode(\n        PHPExcel_Style_NumberFormat::FORMAT_PERCENTAGE_00\n    );\n\n\n$objConditional1 = new PHPExcel_Style_Conditional();\n$objConditional1->setConditionType(PHPExcel_Style_Conditional::CONDITION_CELLIS)\n    ->setOperatorType(PHPExcel_Style_Conditional::OPERATOR_LESSTHAN)\n    ->addCondition('0');\n$objConditional1->getStyle()->getFont()->getColor()->setARGB(PHPExcel_Style_Color::COLOR_RED);\n\n$objConditional2 = new PHPExcel_Style_Conditional();\n$objConditional2->setConditionType(PHPExcel_Style_Conditional::CONDITION_CELLIS)\n    ->setOperatorType(PHPExcel_Style_Conditional::OPERATOR_GREATERTHANOREQUAL)\n    ->addCondition('0');\n$objConditional2->getStyle()->getFont()->getColor()->setARGB(PHPExcel_Style_Color::COLOR_GREEN);\n\n$conditionalStyles = $objPHPExcel->getActiveSheet()->getStyle('A1')->getConditionalStyles();\narray_push($conditionalStyles, $objConditional1);\narray_push($conditionalStyles, $objConditional2);\n$objPHPExcel->getActiveSheet()->getStyle('A1')->setConditionalStyles($conditionalStyles);\n\n\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\n$objWriter->save(str_replace('.php', '.xlsx', __FILE__));\n```\n\nThis works correctly: both the conditional background colour and the number format styles are maintained when the spreadsheet is saved. As I'm unable to replicate this issue, can you please upload a sample code that demonstrates your problem to the phpexcel.codeplex.com site.\n. The PHPExcel_IOFactory class is in the file IOFactory.php in the /Classes/PHPExcel directory.... if your script can't find that, then something is very, very wrong indeed... like the PHPExcel code is missing or not defined in the path (though I'd expect PHPExcel.php to be problematic as well if that was the case)\n. My bad - implementing a fix for template .ods files with styling but no data, broke the reader. Now fixed in develop branch\n. Unfortunately not, this is completely different to the way in which PHPExcel works, and would require a complete and total rewrite of every single line of code in the codebase.\nIncidentally, PHPExcel doesn't yet handdle pivot tables.\n. PHPExcel works by maintaining the workbook in PHP memory, structures as a PHPExcel object... The readers simply parse a file and convert it to PHPExcel's internal objects, discarding anything they don't understand; and the writers take that object and generate the appropriate file formatting (XML, BIFF, HTML whatever). It doesn't simply edit the xml nodes \"in situ\", and couldn't because not every Excel file is XML-based. The PHPExcel objet itself doesn't care how it is populated, whether from a file via the writer, or via a user script.\n. Is there any particular reason why you can't open files from Suunto movescount.com directly? Any errors thrown? Any missing data? Are they actually OfficeOpenXML files? What does identify() return? Any clues whatsoever?\n. Hopefully composer file now in place, and I'm sure somebody who knows more about these things will correct me if it's wrong\n. I'm not as familiar with composer as I should be (it's on my \"to learn about\" list), so I'm not completely sure what this actually does, how it ties (for example) the minimum-stability with a branch or tag on github.\n. Hopefully composer file now in place, and I'm sure somebody who knows more about these things will correct me if it's wrong\n. Package has already been registered on packagist.org - https://packagist.org/packages/phpoffice/phpexcel\n. \"ext-gd\": \"*\", isn't required though, it's only used if you want to use the exact method for autosizing column width, or rendering charts as jpg images\n. Surely $docsheet should still be defined from the original worksheet loop, which means that the variable still exists containing the last worksheet created by that sheet reader loop; so I'm struggling to see how it can be undefined in line 1749\n. Thanks for pointing it the need to update the install notes, I renamed the directory because it is more examples than tests, but forgot to update any references to it\n. Thanks, I guess I missed that somewhere down the line\n. The assets images appear in the documentation and are a lot easier to read because they show just the few relevant elements from the phpdoc mapping, in the context of the documentation. As such, I think they should remain.\n. The ones I'm looking at are up to date, though they may not all be.... I'll check later. Most are simply xml files, or images created from those xml files.\nIt might be an idea to switch them to a different (more generic) format like GraphViz which would make them easier to edit.\n. Good catch\n. Hopefully https://packagist.org/packages/phpoffice/phpexcel is now in place, with the appropriate github hooks: I'm sure somebody who knows more about these things will correct me if it's wrong\n. You don't need to save the files to disc at all\nWhy not simply use the code as shown in /Examples/01simple-download-xls.php etc?\n\nOr if you want to capture the output to a string (not recommended because it's an enormous memory overhead) then you can simply use PHP's ob_\\* functions around a call to save()\n. Fixed in develop branch, thanks for the checking\n. modified isset() test to use array_key_exists() instead\n. Missing file committed\n. Wow, with unit tests as well. Thanks! Will review and merge, probably tonight.\n. Thanks for the fix, very useful\n. You can use pretty much any version of Excel from Excel 95 onwards: files you've saved as BIFF format can be loaded using the Excel5 Reader, files saved as OfficeOpenXML can be saved using the Excel2007 Reader... if the file is loaded as a single empty column, what type of file is it? You can use the IO Factory identify() method to determine what format PHPExcel believes it to be\n. Unable to recreate this problem. I've created files containing NULL values and empty strings in cells using Excel2007 Writer with setOffice2003Compatibility(TRUE) and setOffice2003Compatibility(FALSE). Both files validate cleanly using the Open XML SDK Productivity tool, and they both load without error in MS Excel 2010, MS Excel 2007 and in MS Excel 2003 with compatibility pack.\n. Funny you should ask that: MS Excel has a formula function VERSION() which is replicated in the PHPExcel calculation engine:\nCalling (statically)\n\n``` php\nPHPExcel_Calculation_Functions::VERSION()\n```\n\nshould return\n\n> PHPExcel 1.7.8, 2012-10-12\n\nor the appropriate version number and date for all production releases\n. Because github code is \"unversioned\".... at the point when we do a production release using the build procedures, the distribution is versioned.... the code maintained on github contains only the tags that that get replaced during the build process\n. I really am trying to kill off the codeplex site.\n\nThe 1.8.1 download from here is tagged, and directly accessible to pull with the tag, or to install via composer\n. Thanks for the catch on title, and for the docblock fixes\n. Currently, work is underway to replace all thrown Exceptions with PHPExcel specific Exception classes. This is a work in progress, but most of the readers and writers throw PHPExcel_Reader_Exception and PHPExcel_Writer_Exception already.\n. More than happy to accept offers of help.... it's as simple as wading through the code replacing every thrown Exception so that it throws the appropriate PHPExcel_xxx_Exception. I believe I've done the Reader and Writer Exceptions, and the Calc Engine has its own PHPExcel_Calculation_Exception, so all other thrown Exceptions should be PHPExcel_Exception. There's a few places in the code where Exceptions are caught, but these can largely be left simply catching Exception\n. Yes, the APIDocs have got a bit out of date in places, and that's also a case of simply trawling through the code to fix all the docblocks, but it's a long, drawn-out chore checking every method that's called by a method to see if an Exception is thrown somewhere down the call stack\n. Thanks for all these Exception management changes.... I've had to merge them manually, unfortunately; but I just need to check for completeness and consistency (especially those in PHPExcel_Shared_*) and I should be in a position to commit them all tonight\n. Sorry, didn't manage to get the merge done tonight - too many interventions, so I didn't get my own final testing complete.\n\nA full CI environment would be greate, and we use Travis, but don't yet have a comprehensive set of tests for significant portions of the code, and many of the tests we do have don't yet run cleanly.... it's a work in progress.\n\nIf you're interested in joining the development team, we can always use fresh blood. There's times when the mind gets too close minded with regard to the existing architecture after working on it for so long. And I'm busy with two large tasks at the moment (the switch from SimpleXML to XMLReader, and a complete rewrite of the calculation engine) so there's a lot of areas being neglected while my focus is on those.\nDrop me a line if you want to join the team.\n. I'm not sure how the Reader can load files with sheet titles longer than 31 characters? What format? MS Excel itself only allows 31 characters\n. Fascinated in how they can retrofit a change to the limit in xls without changing the file structure. any insight in how they do it? The BIFF specification documents haven't been changed, so I can't see how they've done this\n. I've been trying to use tabs consistently since I first started working with PHPExcel, but there is no defined coding style at this moment. I know we should use one, and I've been playing around with PHPCS trying to decide what style to use: \nPSR-0 and 2 both object to any file that isn't all class or all procedural, otherwise I'd pick one of those;\nThere isn't a decent set of sniffs for Zend\nPEAR would probably be the best option, except I don't really like it\nI've not really looked at Symfony 2 yet\n. Merged manually - thanks for highlighting the problem, and for the unit test highlighting it and demonstrating that the fix works\n. Thanks: A nice performance boost, and the PHPExcel::cellXfExists() call can also be used in the applyFromArray() method of PHPExcel_Style as well.\n. Thanks for this useful fix\n. We do specifically tell people always to use UTF-8 encoding\n. Hopefully, this is now set up correctly... it was always something we'd planned when we moved to source to github, but hadn't got round to actually doing.... thanks for creating the basic configs for us\n. And thanks for the offer of helping with the unit tests\n. Thanks, I'd been trying to work out why this was erroring in 5.4\n. What symptons are you experiencing since the change?\n. You're correct, they shouldn't.... they're diagnostic outputs.... I'm amazed that nobody has ever noticed them before. Will comment them out and comit later\n. Thanks for the fix, and sorry it took me so long to get round to looking at it. I'm afraid I've been busy working on the calcEngine branch, which has focused a lot of my attention. Now I'm running final tests on those changes, and preparing for release, so I hope I'll have a little time to look at some of these merge requests.\n. Is this on any particular operating platform? What are the locale settings? What values are returned by the PHPExcel_Shared_String::getDecimalSeparator() and PHPExcel_Shared_String::getThousandsSeparator() methods?\n. It's more like a standard error message saying that PHP can't find a file called \"media/catalog/productno_selection\"... though I'd expect it to complain about \"media/catalog/product/no_selection\". Does that file exist? Should $row['small_image'] contain a string value of \"no_selection\"?\n. None of the 4 worksheets attached to this work item give me any problem with extra worksheets. They all load exactly as expected. Can anybody experiencing the problem please do a phpinfo dump to see if there might be any PHP configuration issues that could be triggering this issue.\n. Try using the $strictNullComparison flag with a TRUE value.\nThe fromArray() method tests each array value against the defined null value (argument 2, which defaults to NULL), and only sets the cell value if it isn't a match. This comparison uses either != or !== depending on the value of the $strictNullComparison flag. As  loose comparison 0 == NULL, 0 values won't be set unless strict comparison is enabled.\n. I'll keep this request open.\n\nAccording to the latest figures from http://w3techs.com/technologies/details/pl-php/5/all PHP5.2.x is still used for 51.1% of websites, and that has gone down nearly 15% over the last year. By the end of this year, I really hope that I can update to a minimum 5.3.0 requirement, so that I can take advantage of closures and namespaces and late static binding... the latter will also be useful for people wishing to extend the existing classes (as part of that, I'm slowly beginning to move private properties to protected)\n. So is there anything in the logs? Any indication of timeouts or hitting memory limits?\n. What I'm trying to figure out is why?\n. I mean I don't understand the purpose of this. Is it simply using the old PEAR SEW to write Excel5 files from PHPExcel Objects? If so, what advantage is there to using SEW over PHPExcel's own BIFF file writer? \n\nHow should I use it in a script using PHPExcel?\n. That sounds like the include_path isn't set on your production server, or PHPExcel isn't installed, or is in a different directory to where you expect\nAlternatively, check that any Joomla autoloader is not conflicting with PHPExcel's autoloader\n. Thanks for the reminder. I'll modify the wiki pages to highlight what code is where)\n\nThe latest stable code (for the last production release) should be found in the master branch here on github, and tagged with the release version. Latest development code in the develop branch. \"Packaged\" downloads (e.g. with PDF docs, or docs only, etc) will remain linked from codeplex. The codeplex source repository is no longer maintained.\n\nAs we've only had one production release since the transition to github, we're still \"in between\" and working on the best way to provide production releases via github, composer, packagist, codeplex, etc. One proposed change entails moving the documentation (and possibly the examples) into their own repository/ies, and simply including them for the zipped package downloads from codeplex. Locale packs will probably also be split off into their own repository.\n. In time, possibly - but it isn't exactly a simple legend for the chart - being able to handle this type of complexity is definitely low priority\n. Changing $zip->open($pFilename); to $zip->open($pFilename, ZIPARCHIVE::CREATE || ZIPARCHIVE::OVERWRITE ); is guaranteed to generate problems when loading a file: you're telling the ZipARchive class to create a file if one doesn't already exist, or to overwrite with a new blank file if it does.... so you're blasting everything from your Excel file.\n\nExcept that it should have worked before you made your change, as long as the file you were trying to load was actually an OfficeOpenXML file. The real error is that initial problem with the ziparchive \"Invalid or unitialized Zip object\" error... ZipArchive failed to read the file as a zip file for whatever reason. Can you open the original file in a text editor, and look at the initial characters in the file? The first two characters in the file should be an ASCII \"PK\"..\n. Only thing I can think of: PHPExcel needs direct filesystem access to the file you wish to load, it can't be loaded via a stream wrapper (e.g. a url), which means that remote files need downloading first\n. Merging with Issue #126 \n. Currently, conditional formatting only supports the basic types of\n- none\n- cellIs\n- containsText\n- expression\n\nThe following types are ignored\n- aboveAverage\n- beginsWith\n- colorScale\n- containsBlanks\n- containsErrors\n- dataBar\n- duplicateValues\n- endsWith\n- iconSet\n- notContainsBlanks\n- notContainsErrors\n- notContainsText\n- timePeriod\n- top10\n- uniqueValues\n. Unable to recreate\n. That's why we provide the options now :-)\n. Looking at this now. The code you've updated won't work if there are multiple cell ranges, and one of them is  single cell range, so modifying it to work in that sitution; but thanks for bringing it to our attention\n. In documentation, read section 4.6.8. \"Change a cell into a clickable URL\"\n. As far as I'm aware, it is not possible to make part of the text in a cell into a clickable URL; certainly I've no idea how I'd do that in Excel itself\n. At this point in time, PHPExcel doesn't support secondary axes in charts\n. It's not a bug? I've just run a basic loader/saver script for the file you've posted and get the following results:\nWith version 1.7.8\n\n> Load Tests from Excel2007 file\n> Call time to read Workbook was 11.3779 seconds\n> Current memory usage: 56.25 MB\n> Save as Excel2007 file\n> Call time to write Workbook was 0.3567 seconds\n> Current memory usage: 57.25 MB\n> Peak memory usage: 57.25 MB\n\nand with my latest develop code\n\n> Load Tests from Excel2007 file\n> Call time to read Workbook was 12.8214 seconds\n> Current memory usage: 54.75 MB\n> Save as Excel2007 file\n> Call time to write Workbook was 0.1354 seconds\n> Current memory usage: 55.5 MB\n> Peak memory usage: 55.5 MB\n\nso nothing like the 220MB that you're getting.\nMy tests were run on 32-bit PHP. Are you using 32-bit or 64-bit PHP? Because that will make a difference.\n\nHowever, there are a lot of styles defined in this file; and PHP reads all of those styles. They're defined in the Excel file, and PHPexcel reads the Excel file \"as is\". That's the way PHPExcel works.... while it might not be an optimal approach, it isn't a bug.\n. Wow thanks.... I'd only recently decided to go with PSR2 standards for PHPExcel (wherever appropriate), as an adopted standard; and was planning on taking a look at php-cs-fixer. Looks like this will certainly go some way toward that; and give me an excuse to see exactly how php-cs-fixer works.\n. 4 spaces works for me when it's replacing leading tabs in a line; though it still leaves tabs in inline comments (not checked docblocks). I'll double-check the appropriate psr2 settings; but this is certainly a great addition as long as it is used in a pre-commit hook. Time, methinks, to start setting up a developer wiki page.\n. I've been running some tests using the iconv and mbstring functions, and while iconv is significantly faster than mbstring for testing UTF8 encoding, there's no discernible speed difference with the strlen or substring functions. I didn't encounter any errors, but have switched the order of testing using iconv/mbstring for the latter two functions\n. Interesting: the description of the algorithm used in Excel2003 and above specifically uses FLOOR (http://support.microsoft.com/kb/828117), although it does indicate that this algorithm should only be used for values of $trials (n) >= 1030, and that the old Excel95 algorithm should be used for values of $trials (n) < 1030. Unfortunately, I don't have details of the earlier algorithm used, so the documented algorithm is used for all values of $trials.\nI know that using the defined algorithm can lead to a permanent loop with some values when $TotalUnscaledProbability returns NaN, so it does need some additional investigation.\n. Certainly possible (I've even done it as a proof of concept); though well outside the scope of PHPExcel itself. But it really depends how sophisticated you want the GUI to be; if you want \"on the fly\" recalculation, then you either need to replicate the calculation engine in javascript; or you have a major overhead in ajaxing the server on every cell change; similarly with changing cell format masks, or conditional formatting. And unless you can provide spreadsheet persistence on the server, then each ajax request has to load and update the spreadsheet, handle any calculations or reformatting, save and feed back the results (which makes it very slow).\nI only achieved decent performance using localhost, and providing a persistent loaded spreadsheet until an ajax save request was issued, which was a lot of custom daemon code at the backend.\n. Will take a look this weekend, hope that a PHP5.2 on Centos 6 will replicate.\n. Can you check your webserver logs, see if it reports any errors or if it's restarting.\n. It's unlikely that any solution will ever be found unless I can recreate the problem; and so far I've never seen this error occur\n. That's a call to read the workbook themes. How was this workbook generated? What version of MS Excel, or was it another spreadsheet program? I'll need to generate an xlsx that doesn't have a themes file to test any fix.\n. We don't provide any method as standard to eliminate empty cells from the CSV output, or even just \"trailing\" empty cells. The former would provide an unpredictable csv file, readers wouldn't be able to identify columns cleanly, so probably isn't worthwhile; the latter is certainly possible\n. Thanks for telling us that our CSV output is useless, sadly we provide a straightforward structure where, once you know how many entries are defined in one row, you know how many are defined in every row. I'd mistakenlky thought that this was the norm, because it's the behaviour reflected by most of the common spreadsheet programs.\n\nThe way to implement this would be to provide a new \"trim\" property in the CSV Writer, together with a getter and setter method for that property; then modify the -writeLine() method to trim trailing empty entries in the $pValues array, and the only to write the line if the count of $pValues entries is still greater than 0.\n. Historic decision, and adding yet another method to achieve the same result would really be adding overhead; unless I can figure out a decent, clean method to work as a column iterator to justify further changes\n. @AndreKR - There isn't yet a column iterator, still trying to work out a clean way of doing so, with the current restriction of PHP5.2 compatibility; I have couple of methods in mind once we can enforce PHP5.3 as a minimum version\n. This is all documented (documentation found in the /Documentation folder): and have you looked at any of the PDF examples in the /examples directory such as 21pdf.php?\n\n``` php\n// Tell PHPExcel that you're planning on using the tcPDF library\n// and where the tcPDF library is installed on your server\n$rendererName = PHPExcel_Settings::PDF_RENDERER_TCPDF\n$rendererLibrary = 'tcPDF5.9';\n$rendererLibraryPath = '/php/libraries/PDF/' . $rendererLibrary;\n\nif (!PHPExcel_Settings::setPdfRenderer(\n        $rendererName,\n        $rendererLibraryPath\n    )) {\n    die(\n        'NOTICE: Please set the $rendererName and $rendererLibraryPath values' .\n        EOL .\n        'at the top of this script as appropriate for your directory structure'\n    );\n}\n\n// Create a Writer for PDF, which will automatically pick up the settings that you've defined\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'PDF');\n// And write the spreadsheet to a PDF file\n$objWriter->save('myPDFSpreadsheet.pdf');\n```\n. Unfortunately, github doesn't provide any mechanism for uploading files to issues, so we have the old file attachments link on codeplex where you can upload files - http://phpexcel.codeplex.com/workitem/10749?ProjectName=phpexcel\n. Merged manually. Thanks for a very useful bugfix. This really improves the HTML and PDF output, and has been on the \"to do\" list for a long while now. It's good to finally get a solution, and a simple, efficient one at that\n. Correct, you won't get charts in an xls file until it's been implemented for the Excel5 Reader and Writer. Currently this option is only available for Excel2007 (xlsx)\n. Excel 2003 will read an OfficeOpenXML (xlsx) file if the compatibility pack has been installed\nCharts will be added for Excel5 (xls) Reader and WRiter \"sometime this year\", but I'm not going to commit more than that\n. So are you actually loading the 'Other sheet' worksheet that's referenced in your formula?\n. Sheets in another file is close to impossible: though the try/catch block in getCalculatedValue() should trap this exception and revert to getOldCalculatedValue() in that circumstance\n. If the value is blank, then there's not much you can do.... it is possible: the PHPExcel calculation engine could be modified to load up the external workbook if it's available and extract the value from it; but the memory and speed overhead is excessive\n. There is, but as and when time permits - it is on the roadmap for this year though https://github.com/PHPOffice/PHPExcel/wiki/Roadmap\n. Now resolved on develop branchNow resolved on develop branch\n. Unable to replicate the problem that this fixes at present\n. OK thanks, I've recreated it now and merged manually for the moment. I'll run some further tests (e.g. removing row #3 rather than row #1, playing with columns, and with both columns and rows, and test the other collections as well. Thanks for highlighting the problem, and providing the sample code to demonstrate it as well.\n. Slightly more complex. If I create the links in reverse order\n\n```\nfor($i = 5; $i >=2; $i--) {\n```\n\nThen it breaks again!\n\nI need to ensure that the collection is correctly sorted in the first place; and then reverse if necessary\n. I was looking more at:\n\n``` php\n$aHyperlinkCollection = $pSheet->getHyperlinkCollection();\n($pNumCols > 0 || $pNumRows > 0) ? \n    uksort($aHyperlinkCollection, array('PHPExcel_ReferenceHelper', 'cellReverseSort')) : \n    uksort($aHyperlinkCollection, array('PHPExcel_ReferenceHelper', 'cellSort')); \nforeach ($aHyperlinkCollection as $key => $value) {\n    $newReference = $this->updateCellReference($key, $pBefore, $pNumCols, $pNumRows);\n    if ($key != $newReference) {\n        $pSheet->setHyperlink( $newReference, $value );\n        $pSheet->setHyperlink( $key, null );\n    }\n}\n```\n\nWhere cellSort() and cellReverseSort() handle correct sorting of cell IDs by column and row; working on your principle of whether to array_reverse or not.\n\nInitial tests look OK, but still checking the results.\n. Are you setting a border style as well as a colour? The default style is `none`\n. What data is missing? Unless you provide real details, there's nothing we can do to help\n. So are you using Cell Caching? That's suggestion number 1\n. You might want to consider a different caching method that moves the cell data out of memory (APC, DiskIsam, SQLite, etc).\nYou might also want to set cell styling for a range of cells once you've written all your data, rather than setting for each cell individually; or even set your cell wrap style as a default workbook style\n. I'll be using a simple 1.7.9 tag from release 1.7.9 onwards, with 1.7.9rc1 style tagging for release candidates\n. 1.7.8 duly tagged\n. Hmm, the packagist hook is set under \"service hooks\" here, and \"test hook\" works without error\n. Looking at packagist, seems source is defined as \"https://github.com/PHPOffice/PHPExcel/tree/develop\" rather than \"https://github.com/PHPOffice/PHPExcel/tree/master\".... trying to figure out how to edit it\n. Thanks, will take a look at this - since I introduced charts as an experimental feature I've been getting more and more demands to expand charting features, so this will be a nice first step\n. I'll definitely be taking a look at this, but will want to run a good few tests before I merge it; but it could really be helpful. Thanks\n. Under what circumstances have you experienced these errors? The autoloader should ensure that the file is only ever included once... if you're getting \"Already defined\" errors for those constants, then it's symptomatic of a more serious problem with the autoloader, and I'd rather fix that than \"patch over\" the problem with an `if !defined` test to see if the constants are already defined\n. Ah, that explains it... our own unit tests always use the autoloader, so we don't see that issue\n. My bad, messed up the initial merge. Thanks for fixing\n. It means that PHPExcel has found something in your particular xlsx file that it can't handle correctly; but I'd need a copy of the file itself to try and identify what it was\n. Merged manually, thanks\n. Fixed in develop branch\n. Form elements such as check boxes are not supported by PHPExcel at this point\n. Namespaces require a minimum PHP version of 5.3.x and the current minimum version requirement for PHPExcel is PHP 5.2.0. (I've been cursing this for a long time now)\n\nEarlier this year, according to [W3Techs statistics](http://w3techs.com/technologies/details/pl-php/5/all), take-up of PHP 5.3 finally exceeded PHP 5.2; while the trend shown by [Pascal Martin's statistics](http://blog.pascal-martin.fr/post/statistiques-versions-php-2013-01) earlier in the year bears this out. With the production release of PHP 5.5 planned for July, and changes to the PHP version support policy, we hope that the use of PHP 5.2 among ISPs will drop significantly allowing us to drop support for PHP 5.2 in the second half of the year.\n\nIn anticipation of that, we have already decided that PHPExcel 1.7.9 will be the last release on the 1.x branch, and that subsequent releases will require a minimum PHP version of 5.3.0, which will allow us to use namespaces, closures, and take full advantage of SPL, We will also be refactoring a lot of the code to conform with PSR-2 standards wherever possible.\n. Fixed\n. There's no way that the PHPExcel object is aware even of the existence of a read filter, it simply accepts the data that's passed to it by the Reader, so this isn't really practical; but userland code is aware of it, and you can use rangeToArray() based on the filter range\n. Seems sensible: thanks\n. Already merged into develop branch, thanks\n. Try using 0.1 and 0.5 rather than '0.1' and '0.5'\n. Reading or Writing? What Reader? What Writer? Please provide a working example to demonstrate this fault.\n. Given that we still support PHP 5.2.0, I'm open to suggestions on how to phrase the install.txt file to cover all appropriate versions of PHP and operating systems. The [PHP docs](http://www.php.net/manual/en/zip.installation.php) themselves seem somewhat ambiguous on the topic\n. Whoops, thanks\n. No ideas. Can you provide a spreadsheet that demonstrates this problem\n. https://github.com/PHPOffice/PHPExcel/pull/194 and https://phpexcel.codeplex.com/workitem/19830\n. Even developers have brainfarts occasionally, fixed in develop branch\n. That's an extremely useful change, making things a lot easier for people. Much appreciated. Looking forward to merging it for the 2.0.0 version\n. Thanks. Interesting changes.... The rowspan and colspan was always on my \"to do\" list; and it looks as though you've cleaned up a lot of the existing code. I'll take a closer look at them later: I'm busy at the moment working on converting the develop_2.0.0 branch for namespacing; but I certainly appreciate the changes, and will look to merge them into that branch once I've tested all my namespace changes. That branch will also use protected rather than private to make the classes more easily extensible by the weekend.\n. Unfortunately, that's likely to make it a manual merge :(\n. Integrated manually for the merge cells, and fixed the issue with rowspan **_and**_ colspan values for the same cell; thanks for the basic work cifren\n. The travis build fail has nothing to do with this..... a lot of the calculation engine tests fail for various reasons; and while I'm reducing that slowly, it is a slow task.\n\nThe fix for rowspan and columnspan has been merged into the develop branch. As far as I'm aware, it's fixed, and there is no further need for me to do anything with it.\n. I'm not sure that this should be included in the default value binder, or if it should be in the advanced value binder, or even in a new custom value binder; but certainly you should be using the advanced value binder or a custom binder if you're working with the HTML reader (if only for handling dates)\n. If you do a \"Save As\" in OpenOffice or in MS Excel, what format does it show as the selected default in the \"Save as Type\" box\n. The file can be shared via the File Uploads \"issue\" on the codeplex site: https://phpexcel.codeplex.com/workitem/10749\n. Quick scan of the file: it's actually an xlsb format rather than an xlsx format. Unlike xlsx, which is a zipped collection of xml files; xlsb is a binary format, and not currently supported by PHPExcel. We probably should support it, and I do have the format documentation available, but haven't ever looked through it to see how simple or complex it actually is.\n. The issue isn't with dates before 1970, it's with dates before 1900: MS Excel doesn't support dates prior to 1-Jan-1900 (or 1-Jan-1904 if using the Mac calendar).\n\nIf you're working with dates prior to 14th December 1901, you may also have issues with PHP/unix timestamps on 32-bit PHP as well... use PHP DateTime objects if you need to work with dates between 1900 and 1901, or dates greater than 20th January 2038.\n. Both fixes now merged into develop branch, thanks\n. I believe this issue has already been fixed\n. Thanks\n. Using dev-develop_2.0.0 isn't wise because it is highly unstable development code, likely to be changed at any moment, may contain diagnostics, etc\n. Thanks\n. I've just downloaded the file manually, read as HTML, and written using Excel2007, and it gives me exactly what I'd expect (including the Cyrillic characters) without any problems:\n\n``` php\n$inputFileType = 'HTML';\n$inputFileName = './Cyrillic_UTF-8.htm';\n$outputFileType = 'Excel2007';\n$outputFileName = './Cyrillic_UTF-8.xlsx';\n\necho date('H:i:s').\" Load Tests from $inputFileType file\" , PHP_EOL;\n$callStartTime = microtime(true);\n\ntry {\n    $objPHPExcelReader = PHPExcel_IOFactory::createReader($inputFileType);\n    $objPHPExcelReader -> setReadDataOnly(false);\n    $objPHPExcel = $objPHPExcelReader->load($inputFileName);\n} catch (Exception $e) {\n   die ('ERROR: ' . $e->getMessage());\n}\n\n$callEndTime = microtime(true);\n$callTime = $callEndTime - $callStartTime;\necho 'Call time to read Workbook was '.sprintf('%.4f',$callTime).\" seconds\" , PHP_EOL;\n// Echo memory usage\necho date('H:i:s').' Current memory usage: '.(memory_get_usage(true) / 1024 / 1024).\" MB\" , PHP_EOL , PHP_EOL;\n\n\necho date('H:i:s').\" Save as $outputFileType file\" , PHP_EOL;\n$callStartTime = microtime(true);\n\n$objPHPExcelWriter = PHPExcel_IOFactory::createWriter($objPHPExcel,$outputFileType);\n$objPHPExcel = $objPHPExcelWriter->save($outputFileName);\n\n$callEndTime = microtime(true);\n$callTime = $callEndTime - $callStartTime;\necho 'Call time to write Workbook was '.sprintf('%.4f',$callTime).\" seconds\" , PHP_EOL;\n// Echo memory usage\necho date('H:i:s').' Current memory usage: '.(memory_get_usage(true) / 1024 / 1024).\" MB\" , PHP_EOL , PHP_EOL;\n\necho date('H:i:s').' Peak memory usage: '.(memory_get_peak_usage(true) / 1024 / 1024).\" MB\" , PHP_EOL , PHP_EOL;\n```\n. No problems using curl to retrieve the file either. Are you using the latest develop branch?\n. Will take a look: thanks, as it's a much-demanded feature\n. Finally getting round to looking at this PR\n. There's a number of problems with simply reading/writing the raw xml that I've noticed while testing, specifically if the pivot table uses any customised styling (e.g. for summarised totals with numberformatting) that isn't used in the main data sheets.\n. The cell's getValue() method should return a rich text object when the cell contains rich text:\n\nThe rich text object has a magic __toString() method that returns the content as plain text if you try to access it as though it were a sinple text string.\n\nIf you want to convert a rich text cell to HTML, take a look at the HTML Writer that does this. Modify and use this code appropriately:\n\n``` php\n// Value\nif ($cell->getValue() instanceof PHPExcel_RichText) {\n    // Loop through rich text elements\n    $elements = $cell->getValue()->getRichTextElements();\n    foreach ($elements as $element) {\n        // Rich text start?\n        if ($element instanceof PHPExcel_RichText_Run) {\n            $cellData .= '<span style=\"' . $this->_assembleCSS($this->_createCSSStyleFont($element->getFont())) . '\">';\n\n            if ($element->getFont()->getSuperScript()) {\n                $cellData .= '<sup>';\n            } else if ($element->getFont()->getSubScript()) {\n                $cellData .= '<sub>';\n            }\n        }\n\n        // Convert UTF8 data to PCDATA\n        $cellText = $element->getText();\n        $cellData .= htmlspecialchars($cellText);\n\n        if ($element instanceof PHPExcel_RichText_Run) {\n            if ($element->getFont()->getSuperScript()) {\n                $cellData .= '</sup>';\n            } else if ($element->getFont()->getSubScript()) {\n                $cellData .= '</sub>';\n            }\n\n            $cellData .= '</span>';\n        }\n    }\n}\n```\n\nYou can extract the various font properties such as color, bold, italic, etc. using\n\n``` php\n$element->getFont()\n```\n\nwhich is an PHPExcel_Style_Font object.\n\nand use that to convert the formatting to HTML\n. Any particular error, or just an error? Does the error actually have a message?\n. The code I posted demonstrates **how** it can be done; but is copied from the HTML Writer which is an object.... you'll need to adapt it yourself. Look at the code I posted, and that is in the HTML Writer and modify it to work with your code.\n. Thanks for the fix\n. This issue was fixed several weeks ago in the develop branch\n. Surely dev-master is accessing the `master` branch (I really wish I understood Composer and Packagist better, and the expectation on OS developers was that they could focus on their own code without needing to master every peripheral technology): the code in the `develop` branch has been changed https://github.com/PHPOffice/PHPExcel/blob/develop/Classes/PHPExcel/Reader/CSV.php\n. The default value binder works as intended, if you need to change binder behaviour then the approach is to create a custom binder and use that rather than change the existing binders\n. Unable to replicate, what Writer are you using?\n. Thanks\n. On 21/08/2013 11:26, MarcosBL wrote:\n\n> I know this is weird but... isolating this code:\n> \n> require_once  dirname(**FILE**)  .  '/lib/PHPExcel/IOFactory.php';\n> echo  round(68.3499,2).PHP_EOL;  // Works\n> $inputFileType  =  PHPExcel_IOFactory::identify($inputFileName);\n> echo  $inputFileType.PHP_EOL;  // Just to get the file type\n> echo  round(68.3499,2).PHP_EOL;  // Works\n> $objReader  =  PHPExcel_IOFactory::createReader($inputFileType);\n> echo  round(68.3499,2).PHP_EOL;  // Works\n> $objPHPExcel  =  $objReader->load($inputFileName);\n> echo  round(68.3499,2).PHP_EOL;  // KA-BOM, right after the load() call\n> \n> I get this result:\n> \n> 68.35\n> Excel5\n> 68.35\n> 68.35\n> 68.34999999999999\n> \n> Problem starts just after loading the file with the Reader object... \n> PHP 5.3.5-1ubuntu7.11 any idea on what's happening here ? Thanks in \n> advance !\n> \n> \u2014\n> Reply to this email directly or view it on GitHub \n> https://github.com/PHPOffice/PHPExcel/issues/237.\n> \n> Try disabling the calls to set (and restore) precision at lines \n> 1722-1726 and 1739-1741 of Classes/PHPExcel/Calculation.php\n\n## \n\nMark Baker\n. If you pull the develop branch, then you'l find that it was fixed nearly 2 years ago. It's in the develop branch; master is for production releases.... the \"issue\" is time. Functionality integrated with existing getHighestRow() which now accepts an optional column argument; and modified getHighestColumn() to accept an optional row number as well\n. Functionality added to getHighestRow(), allowing for a optional column argument, rather than as a new method; and also added getHighestColumn() with an optional row argument. Thanks for the PR\n. Thanks for the update\n. Thanks for the PR... the only thing I've modified is to suppress the check for the $zipClass, because the ZipArchive class won't necessarily have been autoloaded prior to the first instantiation, so will throw an exception at that point. I'll take a look at how I can modify that check\n. Are you actually doing anything to clear memory in importFile()? If so, what are you doing? If not, then read section 4.3 of the developer documentation entitled \"Clearing a Workbook from memory\"\n. The problem is, and has always been, cyclic references between objects - and if I'd known how much grief it would cause me on a daily basis from people explaining to me how it should have been done I'd never have got involved in any open source development again.... yet nobody has ever come up with a working alternative that allows parent/child and child/parent relationships to be maintained between objects\n. This error seems to have been eliminated in the latest develop branch code; at least, I'm unable to replicate it with the sample code above\n. Merged manually, thanks for the PR\n. Thanks for the PR\n. I've taken the approach of passing an array of cell addresses to the _generateRow() method rather than an array of cells, and selecting each cell within _generateRow() which eliminates this issue.\n. Thanks for the investigation work @eplaut \n. Fixed, thanks for the PR\n. Thanks for the fix - merged manually\n. Thanks for this Trevor... I'll look at what I can do to get it working on 32-bit and Windows boxes, but it's a feature that a lot of people have been asking for\n. On 15/11/2013 22:56, Trevor North wrote:\n\n> Hi Mark,\n> \n> Not sure if you made any progress but I had a bit of time this evening \n> so had a poke around and tracked the problem down to the rotate in the \n> Excel MD5 lib. This stems from the lower max int size on 32 bit, and \n> the bit shift was obviously not working as expected when given floats \n> instead. Oddly, the remaining bit operations still seem to work just \n> fine but I'll not complain about that.\n> \n> I've also done some general clean up to make the whole thing a bit \n> more maintainable. As a point of interest I adapted the code from \n> http://stackoverflow.com/a/1699199 originally although by this point \n> the info there probably isn't of much use. It's annoying that the \n> built in md5/hash functions don't expose the context as that would \n> have saved a lot of hassle but such as life.\n> \n> I should note that I have only tested this on \n> php-5.5.6-nts-Win32-VC11-x86/x64 on a 64 bit windows 7 machine as \n> that's what happens to be on my lap. I'm hopeful that this does indeed \n> work for other versions and linux 32 bit, and that I've not knackered \n> it up for linux 64 bit, but I'll admit to not actually having checked. \n> Let me know if I have and I can take another look.\n> \n> Cheers,\n> Trevor\n> \n> \u2014\n> Reply to this email directly or view it on GitHub \n> https://github.com/PHPOffice/PHPExcel/pull/261#issuecomment-28610440.\n> \n> Sorry I haven't got back to you sooner, but it's been a hectic couple of \n> weeks in work with a major \"go live\": but I'm planning to take another \n> look tonight, and this wekend.\n\nI'd already noted that the problem stemmed from that addition leading to \nan implicit float conversion, but hadn't worked out an alternative \napproach; but I'll do some additional testing now on both Windows and \n32-bit Linux. Thanks for the work you've done already; and hopefully \nthis should be the last major new change to the code before I start \nprepping for a new release - I really do want to get this feature in, \nbecause I know that so many people will appreciate it.\n\n## \n\nMark Baker\n. Merged thanks\n. Thanks for a useful modification to the method\n. Another good catch, and thanks for the additional checks with OpenOffice Calc sort ordering\n. Good catch, thanks\n. Thanks\n. Thanks for the fix\n. Couldn't automatically merge, so had to do it manually; but thanks for the fix\n. Already fixed in develop branch: Work item 19830 from codeplex issues list\n. Fixed thanks\n. Thanks for the fix\n. Fixed by modification to the regexp to ensure that values either side of the '/' are numeric and not blank\n. Can you please retest with the latest develop branch code\n. @saulob - If you need to limit the columns and rows read using the Readers, then use a Read Filter (it's precisely why Read Filters are provided)\n. Bad decision many years ago in history that now needs to be maintained for backward compatibility\n. Fixed in develop branch 9 months ago\n. Pivot Tables are not supported.... and until somebody writes a solution that doesn't result in corrupt files in the majority of cases, then that will remain the case.\n. Good luck finding an alternative, I only know of three ways to handle pivot tables in PHP:\n- PHP's [COM extension](http://www.php.net/manual/en/book.com.php) (requires a COM enabled spreadsheet program such as MS Excel or OpenOffice Calc running on the server) \n- The Open Office alternative to COM ([PUNO](http://www.wstech2.net/index.php?do=0a,01,05)) (requires Open Office installed on the server with Java support enabled) \n- [Ilia Alshanetsky's Excel extension](https://ilia.ws/archives/222-PHP-Excel-Extension.html) now on [github](https://github.com/iliaal/php_excel) (requires commercial [libXL](http://www.libxl.com/) component) \n. Do you have PHP's ZipArchive enabled in your PHP build?\n. The file doesn't have a zip signature as you'd expect from an OfficeOpenXML format File, but an OLE signature like a BIFF format file, and PHPExcel identifies it as needing the Excel5 Reader. What surprises me is that MS Excel doesn't complain about the mismatch between format and file extension.\n. Now resolved on develop branch\n. Thanks for this Maarten, I've been kinda busy of late\n. I'm hoping I'll get the 1.8.0 release done before the end of this month, so it'll be included in that\n. Already ahead on the Simple XML load rather than XML Reader: I've added it into the getLibXmlLoaderOptions() method so it's called every time.... perhaps not the cleanest way of doing it, but it does make it easier as we transition from SimpleXML to XMLReader\n. Only applies when the original formula is in cell A1 on a sheet\n. If those are the only differences, then the simplest way to output an Excel 2007 template doesn't require any code changes at all to the library:\n\n``` php\n// Redirect output to a client\u2019s web browser (Excel2007)\nheader('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.template');\nheader('Content-Disposition: attachment;filename=\"myfilename.xltx\"');\nheader('Cache-Control: max-age=0');\n// If you're serving to IE 9, then the following may be needed\nheader('Cache-Control: max-age=1');\n\n// If you're serving to IE over SSL, then the following may be needed\nheader ('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past\nheader ('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT'); // always modified\nheader ('Cache-Control: cache, must-revalidate'); // HTTP/1.1\nheader ('Pragma: public'); // HTTP/1.0\n\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\n$objWriter->save('php://output');\nexit;\n```\n. Thanks\n. Thanks\n. Unable to replicate this problem, can you please provide a spreadsheet file that demonstrates the issue\n. Apologies - I considered that implementing a security patch for a known exploit was more important than checking compatibility with PHP 5.2\n. Thanks for highlighting the change\n. Implemented slightly differently, but thanks for highlighting the bug\n. Done\n. Save your script **without** a UTF-8 BOM Header\n. The  \"EF BB BF\" is definitely a UTF-8 BOM header; none of the PHPExcel scripts should have any BOM header, but I can double check\n. In PHPExcel 1.7.9, the calculation engine was changed from a singleton to a multiton, meaning that each file is running its own calculation engine, and any calls to get the instance must identify which instance they need\n\nYour call to flush the calculation cache is such a call, and you need to pass the PHPExcel object to that call\n\n```\nPHPExcel_Calculation::getInstance($excel)->flushInstance();\n```\n. Mathematics 101:\n\n``` php\n$workSheet->setCellValue('F1','=3.03');\n$workSheet->setCellValue('F2','=4');\n$workSheet->setCellValue('F3','=F1+F2');  // = 7.03\n$workSheet->setCellValue('F8', '=F3-0.3'); //= 6.73, ___NOT___ 7\n\n$workSheet->setCellValue('F4','=1');\n$workSheet->setCellValue('F5','=2');\n$workSheet->setCellValue('F6','=F4+F5'); // = 3\n\n$workSheet->setCellValue('F7','=F8-F6'); // = 3.73, ___NOT___ 4\n```\n. That is a standard floating point issue that exists on every digital computer - http://en.wikipedia.org/wiki/Floating_point#Accuracy_problems - it's affects PHPExcel, and PHP, and any other language using IEEE 754 representation of floating point numbers (which is pretty much every language on any computer). If you consider it a bug, the only way to fix it is to switch to analogue computers. The other solution is to display to the precision that you need, and let the computer round it for you\n. Thanks  for the fix\n. What more composer support is actually needed? And should I really disenfranchise half the PHPExcel userbase that don't use Composer by removing the built-in autoloader?\n. This example can only include the chart if it can access the 3rd party jpgraph library. If you don't have jpgraph installed, then the chart simply can't be converted to an image file for embedding in the PDF file; if you have jpgraph installed, then you still may need to modify the example to include the correct path to the library, otherwise PHPExcel can't know how to include it.\n\nNeither I, nor PHPExcel can guess whether of where jpgraph is installed on somebody else's server; this example serves as an example of how the PDF Writer **can**, when configured correctly with jpgraph available, include a chart embedded in the generated PDF. As such, I feel it's worth retaining in the Examples folder\n. Thanks, a great addition to the set of Writers\n. Though I may rename it OOCalc for consistency with the existing OOCalc Reader; or should I break backward compatibility and rename the Reader?\n. Thanks, fixed\n. Thanks for spotting that\n. Added version check to HTML Reader so it only uses option flags if PHP >= 5.4.0\n. Does PHP < 5.3 actually error with this? Standard PHP behaviour when a function is called with extra arguments is simply to ignore those extra arguments\n. Fixed\n. Thanks for the additional Mac codepage references\n. Column addresses start at 0, row addresses start as 1\n. Are you using any form of cell caching? If cell caching is used, only one cell is ever present in memory at any one time, so that will be the cell that you're referencing at that point in time\n. No there are no plans to \"fix\" this behaviour..... otherwise caching becomes impossible, and there is no other way to save memory.... what you access is a pointer to the active cell, change the active cell, and you change the  reference.... that's how it works..... if you can come up with a better way of caching to reduce memory usage, that would allow you to keep all your cells in memory, the I'm all ears\n. If you do need to maintain variables for individual cells, then bypass the `getCell()` method, and access the cell collection directly.... note that this won't be any use unless you're using the full in-memory approach.\n\nModify the `$cellCache` property in `/Classes/PHPExcel/CachedObjectStorage/CacheBase.php` to public, and then you can use:\n\n```\n$cell_1 = $worksheet->getCellCacheController()->cellCache['A1'];\n```\n. I'm not sure I follow your question; but if you want to add new properties to the cell object, feel free..... PHPExcel currently reads that from the cache collection where it is the key to the cell, because otherwise it would simply be a duplication of data in memory (and the whole point of caching is to try and reduce memory usage)\n. Cell caching was introduced in version 1.7.0 (IIRC) of PHPExcel, and has always used a pointer to the current active cell.... that was in August 2009.\n\nWe're always trying to save memory everywhere we can, and have been doing so for years; cells use the largest amount of memory, simply because there are so many cells in a spreadsheet.\n. That's a memory optimisation for the cell..... cost of storing the cell address in the cell object is the zval struct size of 48 bytes + the length of the address (\"A123\" would be 4) on 64-bit PHP, or 28 bytes + the  length of the address on 32-bit PHP...... if you have 1000 cells, then that's a minimum of 50k+ bytes (64-bit) or 30k+ bytes (32-bit) that is reduced by not storing the address in the cell. If you have 120,000 cells, then that saving is 6+ Megabytes (64-bit) or 3.6 Megabytes (32-bit) saving in memory usage..... that's what was optimised\n. Take a look at the worksheet's `setSheetView()` method. The sheetView object allows you to set normal, page layout and page break preview options using the `setView()` method\n. I'd suggest that any numeric value that was a straight `0` or anything beginning `0.` should still be converted to a number.\n. There is no automatic correlation between the row iterator and read filters. This is why the startrow option was added to row iterators, allowing you to link the two under the control of your own scripts\n. Unless you can tell me what codepage 21010 actually is, then I'll just point you to https://phpexcel.codeplex.com/discussions/402767\n. Thanks for the bugfix\n. Thanks\n. Sadly, there's still a significant proportion of users still on PHP 5.2.... I've been trying to push PHP 5.3 as a minimum version for the past 18 months and encountering a lot of resistance.... at least 5.3 allows closures, late static binding, namespacing, etc which all help reduce the lines of code and improve performance; while a jump to 5.4 would help improve performance still further\n. I've already been refactoring a new version 2 of PHPExcel using 5.3 as a minimum, with namespacing, psr0-compliant autoloader, object factories, full use of SPL, more composition, more DI, and etc, breaking down a lot of the monolithic methods into smaller SOLID methods. that should be a lot easier to unit test, and a lot easier to manage going forward... but not backward compatible with the older version (different objects, different methods, a bootstrap).\n\n5.4 would allow me to use function array dereferencing and $this in closures, but little that 5.3 doesn't already give in benefits (I'm not going to start using traits).... the biggest benefit of 5.4 over 5.3 is improved execution speed (and the fact that it's still supported), but I don't have any issues with saying 5.3 minimum rather than 5.4\n\n5.5 would give some real bonuses - access to the array_column() function (though it can be simulated with array_map()) and generators in particular - but is certainly a step too far at the moment.\n\nThe lack of backward compatibility with the version 1 branch is the biggest drawback, but does make for a clean break from a lot of the legacy problems, and allows me to clean up some of the incompatibilities as well.\n\nOf most concern to me are the usage statistics ( [w3techs](http://w3techs.com/technologies/details/pl-php/5/all) and [Pascal Martin](http://blog.pascal-martin.fr/post/statistiques-versions-php-2013-11)) which show that over 25% of PHP users are still running on 5.2... that figure is likely to have dropped by the end of the year, and my PHPExcel2 code is unlikely to be stable enough before then, but I'm keeping a close eye on those figures.\n. PHP 5.3 is now officially end of life\n. So I wish people would only use supported versions of PHP, then we'd be able to say PHP 5.4 as a minimum version of PHP\n. There's certainly a lot of truth in that WanderingZombie, and it's getting more an more tempting to take that approach... 5.6 might be a step too far, but certainly working with the officially supported versions of PHP, and retaining backward compatibility with unsupported versions would simply be a bonus... I'd originally been targeting 5.3 as the minimum release (and the biggest step) but suggesting a minimum of 5.4 as the oldest officially supported version of PHP has benefits as well... and if that pattern of only supporting the currently supported releases of PHP gives a roadmap going forward\n. Yes, with PHP 5.2 dropping from 34.38% to 22.75%, PHP 5.4 on the rise from 8.03% to 22.63%, and PHP 5.3 relatively stable at around 45% since last November\n. Another useful addition, thank you\n. Thanks for this submission, a lot of users will appreciate the ability to manipulate chart axes\n. Thanks! I hadn't realised that libxml_disable_entity_loader(true) triggered different behaviours between simplexml_load_string() and simplexml_load_file().\n. There are a number of changes and bugfixes to the OLE container here that aren't implemented in the PEAR OLE (e.g. Work items 10252 and 15308 from the old Codeplex issues log). It was originally bundled with PHPExcel for the benefit of people who couldn't/wouldn't install dependencies manually; and last updated from PEAR for the PHPExcel 1.5.0 release on 32rd October 2007. It has also been modified to use class constants rather then global constants, work with the PHPExcel autoloader, and throw PHPExcel errors rather than PEAR errors, mainly to provide consistency with the rest of PHPExcel.\n\nIf you look at the changelog for PEAR OLE, there have only been 2 subsequent releases since the bundled version (OLE-1.0.0RC1 from May 2008, with a bugfix for Incompatibility open_basedir restriction; and then a 4-year gap till 1.0.0RC2 with a couple of bugfixes for Invalid Bigblock chain with files > 200MB and OLE doesn't save multistreams).\n\nWhile the PHPExcel fork should probably be modified to reflect those additional bugfixes, it seems awkward to unbundle the OLE again, making it difficult to use composer, giving problems with inconsistent error handling between PHPExcel and PEAR, and giving us a dependency on an unsupported library once more.\n. My bad, thanks for fixing\n. Thanks, that saved me a bit of work this evening\n. If you're using cyclic references in a formula (including ROW() with an argument of the current cell) then use\n\n```\nPHPExcel_Calculation::getInstance($objPHPExcel)->cyclicFormulaCount = 1;\n```\n\nbefore saving or getting any calculated value\n\nNote that MS Excel may still object to this anyway, for example if you're using MS Excel 2007+ to open a .xls file that uses formulae with ROW() or COLUMN() pointing to the cell itself, though it won't complain about the same in an .xlsx file\n. Note also that using `ROW()` or `COLUMN()` without an argument will return the row or column for the current cell, and without any cyclic reference issues in any version of MS Excel. This is standard MS Excel behaviour that is replicated in PHPExcel.\n. Please see latest develop branch using th tags in thead rather than td\n. Yes it does - https://github.com/PHPOffice/PHPExcel/commit/780cb7478209b82db236cb718f20f1e7850b3d5b\n. How do you know they're not working? What do you actually expect to happen in this case?\nWhy are you setting `memoryCacheSize` (especially with a space at the end of the key) for `cache_in_memory_serialized`? Section 4.2.1 of the developer documentation says which options can be applied to which caching methods.\n. Celll caching does not magically eliminate the need for memory, it _reduces_ the memory requirements for loading a file, and different caching mechanisms reduce by different amounts, and at different costs in performance.\n\nThe default memory caching has the highest memory cost, and the lowest speed cost; serialized in memory, igbinary and gzipped save a little bit of memory by reducing the memory size requirements for each individual cell, with a cost in code execution speed, but the cells are all still held in memory; external caches like apc, redis, memcache, wincache, or cache to file reduce the memory requirements further (cells are cached outside of PHP, but PHPExcel maintains an index in memory), but at a higher cost in performance; SQLite is the most efficient memory saving (because it is the only cache mechanism that eliminates cells completely from memory), but at a higher cost in execution speed.\n\nEven using SQLite, it's still possible to run out of memory, particularly when the spreadsheet uses large numbers of styles because only cells are cached.\n\nIf you want to test whether cell caching works or not, then test using a spreadsheet file that will fit in memory, but measure the memory usage with the different caching mechanisms; and you might also test execution speed as well. There's a couple of scripts in the `/Examples` folder that you might look at (`06largescale*.php`).\nOn my dev box, I get the following results using these:\n\n| Method | Peak memory (MB) | Write time (seconds) |\n| --- | --- | --- |\n| Memory | 23.25 | 1.7746 |\n| MemoryGZip | 21.5 | 4.2080 |\n| SQLite 3 | 15.5 | 5.1679 |\n\nNote also that you should really test if the call to `PHPExcel_Settings::setCacheStorageMethod()` has actually worked (e.g. if you try to use wincache on a linux server, or memcached without valid server credentials): if it fails, then it falls back to the default memory method.\n. Yes, there may be variation between different PHP versions, and there can be variations depending on the content of the spreadsheet as well; which is why you need to identify which methods work best for you. For options like phptemp, where you can specify at what point the cache should switch to using disk rather than memory, you may also notice differences when you modify that setting.\n\nThis is why I'm loathe to publish any figures, because there are so many variations beyond my control, and why a number of different caching options are provided allowing you to decide which ones work best for you in your specific circumstances.\n\nThose original figures that I posted were generated using PHP 5.4.7\n\nJust to give you more ammunition to use against me (all run against PHPExcel latest development branch):\n\n### PHP 5.3.27 (cli) (built: Jul 10 2013 20:56:24)\n\n| Method | Write time (seconds) | Peak memory (MB) |\n| --- | --- | --- |\n| Memory | 2.2109 | 38.00 |\n| MemorySerialized | 3.0671 | 31.25 |\n| MemoryGZip | 5.0613 | 26.00 |\n| DiscISAM | 4.5713 | 28.25 |\n| PHPTemp | 4.4202 | 28.25 |\n| SQLite | 6.5273 | 20.25 |\n| SQLite3 | 6.1095 | 20.00 |\n\n### PHP 5.4.21 (cli) (built: Oct 16 2013 21:09:16)\n\n| Method | Write time (seconds) | Peak memory (MB) |\n| --- | --- | --- |\n| Memory | 1.5754 | 23.00 |\n| MemorySerialized | 2.4092 | 27.25 |\n| MemoryGZip | 3.8843 | 21.25 |\n| DiscISAM | 3.4437 | 24.00 |\n| PHPTemp | 3.2954 | 24.25 |\n| SQLite3 | 4.5406 | 15.75 |\n\n### PHP 5.5.5 (cli) (built: Oct 15 2013 10:29:13)\n\n| Method | Write time (seconds) | Peak memory (MB) |\n| --- | --- | --- |\n| Memory | 1.4817 | 23.25 |\n| MemorySerialized | 1.9900 | 27.75 |\n| MemoryGZip | 3.2529 | 21.75 |\n| DiscISAM | 3.1306 | 24.00 |\n| PHPTemp | 3.1089 | 24.25 |\n| SQLite3 | 3.9123 | 16.00 |\n\nwhich suggests that somewhere between PHP 5.4.7 and 5.4.21 there was a change in PHP's serialize() method that actually increased the size of a serialized object making this method a lot less efficient. Note that there is also an increase in discisam and phptemp between PHP 5.3 and 5.4, perhaps as a result of changes to stream reading/writing\n. The main difference between SQLite and the temp file caching options (phpTemp and discIsam) is that the PHPExcel cache controller needs to keep and index to the file in memory: each cell is still referenced in memory by a pointer to the offset and size of the entry in the file, whereas SQLite can actually index the cell entries in the database, so there's no index of cells maintained in memory. Every cache method except SQLite/SQLite3 maintains an array of cell data in memory, whether that is the full cell object (memory) a serialized or compressed string of cell data (serialized, igbinary or memorygzip), a hashed key reference (memcache, wincache), or the file reference index.\n\nNote that only cell objects are cached, styles and other related data aren't.\n\nIt would probably be more memory efficient simply to use cell addresses as property names in the cache controllers rather than an array indexed by cell address; but certainly uglier (from a code perspective) and probably less easy to maintain.\n\nUnfortunately, unlike a simple csv file, the output structures for most spreadsheet formats simply aren't conducive to stream writing.\n. I thought all instances on the develop branch had been reverted from [] to array() syntax... are you aware of any that we've missed?\n. Have you read the section of the developer documentation on [cell caching](https://github.com/PHPOffice/PHPExcel/blob/develop/Documentation/markdown/Overview/04-Configuration-Settings.md)?\n. PHPExcel is an \"in memory\" model of the spreadsheet, as is explained in the documentation.\n\nWhen working with large spreadsheet files, this can use a lot of PHP memory, so we introduced cell caching. Cell caching is a way of **_reducing**_ the amount of PHP memory required to hold the cell data for a spreadsheet. Different cell caching options provide different levels of memory usage, some may even increase memory usage in combination with certain versions of PHP, and all dependent on the type of data in your cells. There is also a speed cost associated with each different cell caching option. \n\nThe default is Memory, which maintains the full details as PHP objects in memory. Other memory options (whether Serialized, Gzipped, Igbinary) offer the least memory saving, but the performance cost is higher than Memory. SQLite/SQLite3 offers the best memory usage, but significantly slower performance, the rest fall somewhere in between\n\nOnly you can work out which cell caching option works best for your data.\n. See [this discussion](https://github.com/PHPOffice/PHPExcel/issues/415) for a more detailed explanation of cell caching, together with some basic performance figures\n. Cell caching **_reduces**_ memory usage, it doesn't eliminate it. it allows more cells to be stored using the available PHP memory (though even that is subject to the vagaries of caching method and version of PHP for methods like serialized which actually uses more memory with PHP>5.4)\n\nCan cell caching deal with a 170MB xlsx file? \nPossibly, depends, only you can try it and see.... you don't even say how much you've set the PHP memory limit to.\n\nThe size of the file is pretty meaningless, it's the number of cells and their content that matters.... using cache in memory, an average rule of thumb is 1k per cell with 32-bit PHP, 1.6k on 64-bit PHP (but even that depends on content, and lots of long strings in cells will increase that figure). If you need to save the file afterwards, then my rule of thumb is to double the memory required by the cell count estimate.\n\nIf you have a 32MB limit for your PHP, then cell caching can help make better use of that 32MB, but the script itself still occupies part of that 32MB, as does PHP itself and any extensions that you're loading, leaving only a small amount of that 32MB available for program data. All of that is using PHP's limited memory even before you start loading a file, or building a file.\n\nCell caching is also just one method to reduce memory usage, though most other methods relate specifically to reading.\nIf you simply want to read raw data from a  file, then you can disable loading style information, which reduces the memory usage. If your spreadsheet has 10 worksheets, but you only need to access 1 or 2 of them, then you can load only those sheets rather than all 10. Cell chunking allows you to read a file in \"bite size\" pieces.\n. Some illustrations of Memory usage and Speed when using different cell caching methods with different versions of PHP\n\n![memoryusage](https://cloud.githubusercontent.com/assets/770298/4103525/9a348804-3165-11e4-8479-a3fff11f77e6.png)\n![readwritespeed](https://cloud.githubusercontent.com/assets/770298/4103527/a0f3e2e8-3165-11e4-8695-27ac09f15220.png)\n. Merged manually, thanks for the fix\n. Merged manually\n. Fixed in develop branch\n. Release 1.8.1 will be available probably within the next two weeks, certainly by the end of the month\n. Either wait a couple of weeks till 1.8.1 stable release, or use the develop branch.... I'm currently final testing develop preparatory to a new release\n. Thanks for the correction\n. Thanks for the fix, now implemented\n. There isn't..... but a Rich Text object has a magic __toString() method that will return plaintext, so you can simply cast it to a string\n. This doesn't lock the file from being opened, that isn't an option in PHPExcel. It means that editing those elements of the spreadsheet is password protected\n. An xlsx extension doth not an OfficeOpenXML file make.\n\nIf PHPExcel has identified your file as HTML, it's because it isn't an OfficeOpenXML file, but contains html markup. Have you opened the file in a text editor to actually look at the content?  Did you test that PHPExcel actually identified the file as Excel2007 (your code doesn't show that) or as HTML?\n. Then submit a PR to fix it, but have you actually opened any of these files in a text editor to see what they actually contain? If the identify() method fails to recognise the format, then the signature clearly isn't that documented in the appropriate doumentation for the format in question.\n\nAlternatively, send me your files so that I can check them myself\n. I'll take another look to see if there's any problem with the identify() method; but it starts by trying to match the actual extension against the signature for the filetype in question, and only starts searching for alternatives if that fails.... due to the common practise of people writing CSV files or html markup and giving the file an Excel extension, looking for a signature or content that will match one of the known filetypes that are supported by PHPExcel. \n. Is it possible to send me a copy of the file? I don't know if it's an obscure variant format, but I can at least run some tests to try and identify what the problem is. PHPExcel shouldn't have any issues recognising an OfficeOpenXML file created in Excel 2013 and being able to parse it correctly\n. You can upload files to the old codeplex site at https://phpexcel.codeplex.com/workitem/10749 (note that this is public access) or email to me ( mark at lange dot demon dot co dot uk )\n. @aairr This file fails for the same reason they always fail, non-standard namespacing.\n. Solution: complete rewrite of XLSX Reader, that's not quick, and I doubt very much that anybody will provide a PR..... but there's many causes that could create a situation where files are misinterpreted or unreadable..... one all-encompassing \"issue\" is an issue that can never be resolved, it requires specific issues for specific reasons that can be individually addressed\n. Thanks for pointing this out\n. Can you please provide the file\n. Sadly, github doesn't provide an option for attaching files to issues, but we still have an \"issue\" on the [old codeplex site](https://phpexcel.codeplex.com/workitem/10749) that allows for the upload of files for testing.\n\nThough you can always email it to me as well :)\n. Interestingly, I actually get an error with the autofilter range when opening your original file in MS Excel 2013\n. Probably not till the end of the month now: I'm about to go on holiday, and the wife has formally banned from taking the laptop with me when we go away.\n. You set the path to where you've installed the actual PDF rendering engine (tcPDF, DomPDF or mPDF), not to the PHPExcel wrapper for that engine\n. Thanks for the fix\n. This **_isn't**_ consistent, but it **_is**_ documented behaviour.... unfortunately it's \"inherited\", and any change will break backward compatibility; and it's also used extensively elsewhere in the code as well, so changing it in those methods will require extensive changes elsewhere within the codebase as well.... so we live with it.\n. That's MS Excel's standard built-in password when you do a simple encryption.... I haven't a clue how you'd encrypt/decrypt with a user-defined password.... did it successfully decrypt a file encrypted with your own password?\n. PHPExcel supports OfficeOpenXML-format .xlsx files through the Excel2007 Reader and Excel2007 Writer, as described in all the documentation\n. I think you'll find that this has already been removed in the development branch\n. No it isn't documented..... I just got so p****ed with people bitching about it\n. If you look at the actual failing tests, most of them are precision issues in the calculation engine (oddly, PHPExcel is accurate to a higher degree of precision than MS Excel itself) while others are test fro RAND() or TODAY() functions and similar which should probably be skipped. There are very few tests that actually fail (Matrix Inversion being one that springs to mind).... and (unfortunately) very few tests for features.\n\nIt's also a big reach for the PHPExcel development team to fix them all, but the product itself is very stable despite those failing tests\n. So what do you believe should be the solution if somebody tries to use `createTextRun()` with an empty text argument? Should it throw an exception? Should it be silently discarded? Should PHPExcel silently add an invisible character to the text run? I'm open to suggestions\n. If PHPExcel can't identify a file as an xlsx file, then it isn't a real OfficeOpenXML-format xlsx file. What does it identify the file as? Just because a file has an xlsx extension, doesn't mean that it's really an xlsx file. Open the file in a text editor and see what it really is.\n. If I execute a script containing\n\n``` php\n$filetype =  PHPExcel_IOFactory::identify('05featuredemo.xlsx');\nvar_dump($filetype);\n```\n\nthen I get an output\n\n```\nstring(9) \"Excel2007\"\n```\n\nas I'd expect\n\nTested against PHP 5.2.17, 5.3.27, 5.4.7, 5.4.21 and 5.5.5\n\nPlease provide an example script that will give me a different result against that same file, or provide exact details of your PHP version and configuration\n. If PHPExcel files aren't being autoloaded at all, you would expect a \"Class not found\" error.... including PHPExcel/IOFactory.php should enable the PHPExcel's built-in autoloader, but you need to make sure that any autoloader you're running yourself doesn't interfere with PHPExcel's own\n. Unless you use `setCellValueExplicit()`, PHPExcel will treat any cell value that you set which begins with `=` as a formula; to set `=FOOM` as a string, you need to use `setCellValueExplicit()`\n. Thanks, now merged into the 1.8 branch\n. Fixed, thanks\n. So are you using the latest code from the develop branch? Because line 399 is definitely commented out - https://github.com/PHPOffice/PHPExcel/blob/develop/Classes/PHPExcel/Reader/HTML.php#L399\n. Numbers are stored as numbers in PHPExcel unless you use a custom value binder to enforce datatype of string for numeric values with leading zeroes, or you need to set cell values individually using the `explicit` function...  only then will the value actually be stored as a string.\n\nWhat you aren't doing is declaring the value as a string.... the `setCellValueExplicit()` allows you to declare the value as a string; setting a number format of Text simply tells Excel to display the number in the cell as a string, but at that points it's already a number, and as such has no leading zeroes.\n\nThis is actually documented behaviour, as described in the Developer Documentation (Setting a number with leading zeroes)\n. See https://github.com/PHPOffice/PHPExcel/blob/develop/Documentation/markdown/Overview/07-Accessing-Cells.md#setting-a-number-with-leading-zeroes for details\n. That's right, trying to set cell value on a range of cells will throw an exception... the setCellValue*() methods all work on one, and only one, cell. There is no short-cut to achieve what you want.... And nor can you retrospectively change the datatype of a cell and automatically convert the content to restore something that may have been lost (such as leading zeroes) when the cell value was first set.\n\nHowever, it's pretty straightforward to define a cell binder that will recognise leading zeroes in a cell; and a [recent change on the development branch](https://github.com/PHPOffice/PHPExcel/issues/394) did exactly this\n. Can you give me any additional background about this file? How it was generated, etc?\n. Fixed, thanks for identifying the problem (and solution)\n. All I can tell you so far is that it's an issue with floating point \nprecision\n\nUsing the formula debugger (described in [this gist](https://gist.github.com/MarkBaker/5908357)) gives an output of:\n\n```\nFormula Value is=IF(F17<=22.0,\"TRUE\",\"FALSE\")\nExpected Value is UNKNOWN\nParser Stack :-\n\nArray\n(\n     [0] => Array\n         (\n             [type] => Cell Reference\n             [value] => F17\n             [reference] => F17\n         )\n     [1] => Array\n         (\n             [type] => Value\n             [value] => 22\n             [reference] =>\n         )\n     [2] => Array\n         (\n             [type] => Binary Operator\n             [value] => <=\n             [reference] =>\n         )\n     [3] => Array\n         (\n             [type] => Value\n             [value] => \"TRUE\"\n             [reference] =>\n         )\n     [4] => Array\n         (\n             [type] => Value\n             [value] => \"FALSE\"\n             [reference] =>\n         )\n     [5] => Array\n         (\n             [type] => Operand Count for Function IF()\n             [value] => 3\n             [reference] =>\n         )\n     [6] => Array\n         (\n             [type] => Function\n             [value] => IF(\n             [reference] =>\n         )\n)\n\nCalculated Value is FALSE\nEvaluation Log:\n\nArray\n(\n     [0] => Testing cache value for cell Worksheet!F18\n     [1] => Worksheet!F18 => Evaluating Cell F17 in current worksheet\n     [2] => Worksheet!F18 => Testing cache value for cell Worksheet!F17\n     [3] => Worksheet!F18 -> Worksheet!F17 => Evaluating Cell L8 in current worksheet\n     [4] => Worksheet!F18 -> Worksheet!F17 => Evaluation Result for cell Worksheet!L8 is a floating point number with a value of 900\n     [5] => Worksheet!F18 -> Worksheet!F17 => Evaluating 2.2 * 900\n     [6] => Worksheet!F18 -> Worksheet!F17 => Evaluation Result is a floating point number with a value of 1980\n     [7] => Worksheet!F18 -> Worksheet!F17 => Evaluating Cell F3 in current worksheet\n     [8] => Worksheet!F18 -> Worksheet!F17 => Testing cache value for cell Worksheet!F3\n     [9] => Worksheet!F18 -> Worksheet!F17 -> Worksheet!F3 => Evaluating Cell L1 in current worksheet\n     [10] => Worksheet!F18 -> Worksheet!F17 -> Worksheet!F3 => Evaluation Resultfor cell Worksheet!L1 is a floating point number with a value of 300\n     [11] => Worksheet!F18 -> Worksheet!F17 -> Worksheet!F3 => Evaluating Cell L2  in current worksheet\n     [12] => Worksheet!F18 -> Worksheet!F17 -> Worksheet!F3 => Evaluation Resultfor cell Worksheet!L2 is a floating point number with a value of 300\n     [13] => Worksheet!F18 -> Worksheet!F17 -> Worksheet!F3 => Evaluating Function MIN() with 2 arguments\n     [14] => Worksheet!F18 -> Worksheet!F17 -> Worksheet!F3 => Evaluating MIN( 300, 300 )\n     [15] => Worksheet!F18 -> Worksheet!F17 -> Worksheet!F3 => Evaluation Result for MIN() function call is a floating point number with a value of 300\n     [16] => Worksheet!F18 -> Worksheet!F17 => Evaluation Result for cell Worksheet!F3 is a floating point number with a value of 300\n     [17] => Worksheet!F18 -> Worksheet!F17 => Evaluating 0.3 * 300\n     [18] => Worksheet!F18 -> Worksheet!F17 => Evaluation Result is a floating point number with a value of 90\n     [19] => Worksheet!F18 -> Worksheet!F17 => Evaluating 1980 / 90\n     [20] => Worksheet!F18 -> Worksheet!F17 => Evaluation Result is a floating point number with a value of 22\n     [21] => Worksheet!F18 => Evaluation Result for cell Worksheet!F17 is a floating point number with a value of 22\n     [22] => Worksheet!F18 => Evaluating 22 <= 22\n     [23] => Worksheet!F18 => Evaluating Comparison 22 <= 22\n     [24] => Worksheet!F18 => Evaluating Comparison 22 <= 22\n     [25] => Worksheet!F18 => Evaluation Result is a boolean with a value of FALSE\n     [26] => Worksheet!F18 => Comparison Evaluation Result is a boolean with a value of FALSE\n     [27] => Worksheet!F18 => Comparison Evaluation Result is a boolean with a value of FALSE\n     [28] => Worksheet!F18 => Evaluating Function IF() with 3 arguments\n     [29] => Worksheet!F18 => Evaluating IF( FALSE, \"TRUE\", \"FALSE\" )\n     [30] => Worksheet!F18 => Evaluation Result for IF() function call is a string with a value of \"FALSE\"\n)\n```\n\nThe comparison operation is at line 3618 of `Classes/PHPExcel/Calculation.php`\n\n```\n    $result = ($operand1 <= $operand2);\n```\n\nI'm open to suggestions on how I can modify those comparisons to handle floating point imprecision\n. The fact that digital computers use a binary representation to represent floating point values makes all comparisons between floats very difficult; and after 30-odd years of digital computers, there still isn't a good solution to the problem\n. You might want to test against the latest develop branch: I've put in an epsilon comparison\n. Because if I used `$this->delta = 0` it would only work for integers. The whole point of an epsilon comparison is to match 123.0000000000000000001 as equal to 122.9999999999999999999 to the specified level of precision\n. Are you suggesting that perhaps the precision and scale should be set to perhaps 18/1.0E-18 or more? If so, what would you recommend as the value?\n. That doesn't really sound right, I would expect to need a higher degree of precision for a 64-bit system than for a 32-bit system\n. Almost every one of the examples in `/Examples` is written as a command-line script, including `16csv.php` which loads an xlsx file and writes it as a csv file\n. It's possible that your script may be referencing a PHPExcel_Cell cell reference from a variable that you've used in single quotes (`'$cellref'`) rather than double quotes (`\"$cellref\"`) or unquoted (`$cellref`). That could cause a problem.\n\nAlternatively it could be an absolute refererence (`$A$1`) rather than (`A1`), though that should be handled by PHPExcel\n. Thanks, fixed\n. Thanks\n. Unfortunately, github doesn't yet support attaching files to issues, though you can still attach files against [issue #10749](http://phpexcel.codeplex.com/workitem/10749) on the old codeplex site.\n\nAlternatively, try adding the `u` (UTF-8) switch to the regular expression\n\n``` php\n$domText = preg_replace('/\\s+/u', ' ', trim($child->nodeValue));\n```\n\nIf you can upload a file to demonstrate the problem though, it would allow me to test it myself\n. PHPExcel doesn't provide any method to modify the generate html at all, you'd need to either modify the HTML Writer, or use DOM to modify the generated markup\n. First issue, [as documented](https://github.com/PHPOffice/PHPExcel/blob/develop/Documentation/markdown/Overview/08-Recipes.md): PHPExcel expects formulae to conform to the following rules:\n- Decimal separator is '.' (period)\n- Function argument separator is ',' (comma)\n- Matrix row separator is ';' (semicolon)\n- English function names must be used\n  unless you've specifically set the calculation engine locale to specify otherwise\n\nHowever, external formulae are not supported in any way\n. Are you trying to resize the columns to a fixed size, or to autosize? The latter is certainly expensive, because it has to calculate the width of the result in every cell of each column that you autosize\n. Your first change will cause problems with non-ASCII string values (ie UTF-8) because strlen is counting bytes, not characters\n\nIs an if test faster than a simple str_replace?\n\nStoring a cell as a scalar might work, except that every cell has styling, even if it's just the default styling.... cache works for both reads and writes, because it's read/write agnostic.... but you're quite welcome to fork\n. If you var_dump a cell, you should see a parent property which references the cell cache for that worksheet.... but you only have a single active cell in the cell collection at any one time\n. But I'm not going to make performance optimisations without decent performance tests to prove that they will make things faster.... I get enough abuse over performance as it is (some of it extremely personal) so I'm not prepared to simply accept unproven changes that could s easily make things slower as faster\n. What branch? Because I can't see anything in the script that would cause this error, and line 173 doesn't even exist in that file (it's only 163 lines long)\n. It is an Excel limitation (and note that it's characters rather than bytes) but if you're just creating a CSV file, then why use PHPExcel in the first place? PHP has a perfectly good fputcsv() function built-in\n. As it stands, it'll break Rich Text objects, and I'm not sure if it needs any special handling for objects without a __toString() method (possibly throw some kind of catchable exception, although that requires a custom error handler to convert a catchable fatal error to an exception)\n. If you want something that will allow you to define a mask, then you want to use a custom value binder, more like the advanced value binder\n. It sounds like a confusion to me: the `getID()` method for the PHPExcel object definitely exists, though I'm not sure why the loader should be trying to access it.... I'll have to create a test case to try and see what it's doing, but I can't understand why it should give an error\n. `Whereas if each 100 rows are read individually they all use the same amount of memory.`\nCan you explain what you mean by this statement? How are you reading rows individually?\n. Chunk reading does details about the entire workbook, but only reads the cells listed in the chunk, so row and column sizes, style settings used in cells other than those read, etc are all included in the memory usage for a chunk.... and chunking in a loop may leave some residual objects unless you explicitly disconnect and unset them before loading the next chunk iteration.... as described in the [documentation](https://github.com/PHPOffice/PHPExcel/blob/develop/Documentation/markdown/Overview/05-Deleting-a-Workbook.md)\n. Merged on my development machine now, and will be committing within the next hour or so.... thanks for the PR\n. This issue has already been fixed\n. There's a whole [lot of documentation on how to set cell styles](https://github.com/PHPOffice/PHPExcel/blob/develop/Documentation/markdown/Overview/08-Recipes.md#styles). Thanks for spotting that\n. This space is necessary in some cases, simply removing it may merge words together.... e.g. in the 42richText.php example, it removes the space between `h2so4` and `is` and between `2<sup>3</sup> and`equals`.\n. OK! I get the picture! I've managed to introduce a bug!\n\nWhile you're all busy downgrading, has anybody actually tried to figure out the actual problem?\n. Related to [PHPExcel PR #557](https://github.com/PHPOffice/PHPExcel/pull/557) perhaps?\n. Is this an issue purely with some caching methods? Or with all caching methods? Do you get the expected result if you haven't applied any caching?\n. That's very weird, it's one of my standard tests (without any caching) \n. Merged on my development machine now, and will be committing within the next hour or so.... thanks for the PR\n. This \"bug\" is impossible to fix without changing PHPExcel in such a way that cell caching is completely impossible, with all the memory overheads that would create..... $cell is only a **pointer** to a current \"active\" cell. In calling getCell() again to read a different cell, you are changing the \"active\" cell, so that pointer is now pointing to a different cell; so when you set the value for $cell you're changing the value for the new \"active\" cell\n. And before you ask why this isn't explained in the docs..... people reading those docs often have enough difficulty understanding the difference PHP dates and Excel dates, or between workbooks and worksheets.... the docs try to keep things as simple as possible\n. It shouldn't change two cells at once, it's something I need to investigate because I've never come across it happening before\n. If you consider that the line `$aReferences = PHPExcel_Cell::extractAllCellReferencesInRange($ref);` is building an array of 10 (A-J) \\* 1048576 (1-1048576) cell addresses (a total of 10,485,760 entries), then it is going to take a while and use a lot of memory doing so.\n\nWhile combining the lines:\n\n```\n    $aReferences = PHPExcel_Cell::extractAllCellReferencesInRange($ref);\n    foreach ($aReferences as $reference) {\n        $docSheet->getStyle($reference)->setConditionalStyles($conditionalStyles);\n    }\n\n```\n\n as\n\n```\n    foreach (PHPExcel_Cell::extractAllCellReferencesInRange($ref) as $reference) {\n        $docSheet->getStyle($reference)->setConditionalStyles($conditionalStyles);\n    }\n```\n\nwould improve things a bit, it's not going to be fast building that list and then iterating over that many cells, applying the conditionals to each in turn\n\nBeing able to use a Generator for `PHPExcel_Cell::extractAllCellReferencesInRange()` would help further, but that requires a minimum PHP version of 5.5.0\n. Why not just apply the advanced value binder, which can recognise dates, percentages, fractions, etc and set appropriate styling..... and if you don't want fractions, percentages, etc, or want a slightly different format to be applied then create your own value binder\n. In the `/Examples`folder, `29advancedvaluebinder.php` uses the Advanced Value binder that we provide as an example, which is defined in [/Classes/PHPExcel/Cell](https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Cell/AdvancedValueBinder.php)\n\nThis is covered in the documentation [here](https://github.com/PHPOffice/PHPExcel/blob/develop/Documentation/markdown/Overview/08-Recipes.md#write-a-date-or-time-into-a-cell)\n. How is autosize going to calculate the column width if you don't calculate values in that column?\n. A cell will only be calculated as a formula if begins with `=` **_and**_ its datatype is set as a formula, not simply as a string like `=.=`.... but if you set a cell to have a value beginning with `=` then the documentation tells you to use the `setCellValueExplicit()` method rather than `setCellValue()` so that PHPExcel will set the cell datatype as a string rather than as a formula\n. The developers of PHPExcel apologise that they cannot fix bugs in LibreOffice Calc; but this is a known LibreOffice bug when importing Excel files\n. IIRC, it's https://bugs.documentfoundation.org/show_bug.cgi?id=91475. Then I'd need to double-check.... my original reference was on the original bug list on CodePlex, which has since been deleted. Wow thanks, it's going to take me a little while to check it all out, but much appreciated\n. Using your code against the 1.8.1 codebase, and I see\n\n```\ntest\nfile\ndata\nfoo\nbar\nbaz\n```\n\nwhich is exactly what I'd expect to see\n. It would be great wouldn't it. Sadly, the structure of Excel files isn't conducive to reading or writing in such a simple, structured manner.... Excel files aren't really actually organised in rows like a CSV file, and even an xlsx file that has a row/cells structure in the worksheet still references half a dozen other files from the xlsx zip for every cell.\n\nHowever, when writing a file, I'm not totally sure how \"chunking\" really saves any memory and doesn't just add time overhead to the scriot, because the entire file still needs to be open for the last chunk. Using one of the Cell caching methods would be a more appropriate strategy for writing a large file.\n. That actually leaves me puzzled. 'fraid I just can't understand how it reduces memory usage; because each time you load the file, you're still loading it all into memory\n. Err, yes.... that's what the chunk read filter does. If you only read a part of a file, and then save it.... only the part that you read will be saved\n. If you need to be able to save the file, then you can't use the chunk reader. If memory is your issue, then look at Cell Caching\n. Generally it means that your script is outputting something else to the browser. Using ob_end_clean() to flush the browser is a workround; your best solution is to identify what is being sent to the browser and fix it\n. You need to use **MS Excel** date format codes - https://support.office.com/en-sg/article/Add-and-customize-date-and-time-formats-763b9b04-ccf8-46a8-9ee3-6d8f6fb9e2f8 - not PHP date format codes.\n. `\\T` isn't accepted as part of an MS Excel format mask, so no it isn't accepted by PHPExcel; if you want a literal `T` in an MS Excel format mask, then you quote it\n. It's perfectly easy to get a literal `T` in an MS Excel date format mask:\n\n```\nyyyy-mm-dd\"T\"hh:mm:ss\n```\n\nwill give you what you're asking for\n. > Why not use php's createDatefromFormat and then reformat for excel friendly output?\n> I am aware this will create an extra dependency, but it should provide a better handling of the date.\n\nBecause `DateTime` objects weren't necessarily available in PHP 5.2 on all platforms, and `createFromFormat()` wasn't available until 5.3.\n\nDate handling is being rewritten using DateTime objects internally for PHPSpreadsheet (the successor to PHPExcel), but that is being done for a minimum PHP version of 5.5\n. It is still very much work in progress, so susceptible to changes in the API\n. ```\n$objPHPExcel->getActiveSheet()->setSelectedCell('G340');\n```\n. Could you perhaps explain what this Pull Request actually does?\n. Yes, it is the same project.\n\nThe notification about switching to github is one the front page of the [codeplex site](http://phpexcel.codeplex.com/):\n\n> **2012-06-19 PHPExcel Moves to github!**\n> The source repository for PHPExcel, together with its sister projects PHPWord and PHPPowerPoint under the auspices of PHPOffice. The repository can be found at https://github.com/PHPOffice/PHPExcel, and the latest working development code is in the develop branch.\n> This is the first part of series of changes in our development process which we believe will make it easier for us to do more frequent releases of better quality code. The next step will be CI integration for running automated unit testing against PHP 5.2, 5.3 and 5.4 using TravisCI.\n> We shall be maintaining the CodePlex SVN Source repository in parallel for a time, but the github repository should be considered the definitive source.\n\nwith a subsequent reminder posted a year later:\n\n> **2013-05-22 We are on Github!**\n> Please remember that we have been using github as our source repository for nearly a year now.... source code has not been maintained here on Codeplex in all that time. \n> If you want to contribute, you can fork it. We do accept Pull Requests.\n\nHowever, the 1.9 branch is not yet fully working, and should be considered highly unstable and subject to change without notice until it is officially released.\n. Excel doesn't have any magical style setting to do this: you simply want a string containing newline characters and your bullets, and then to set the cell to wrap\n\n``` php\n$value = \"\u2022 Foo\\n\u2022 Bar\";\n$objPHPExcel->getActiveSheet()\n    ->setCellValue('A10', $value);\n$objPHPExcel->getActiveSheet()\n    ->getRowDimension(10)\n    ->setRowHeight(-1);\n$objPHPExcel->getActiveSheet()\n    ->getStyle('A10')\n    ->getAlignment()\n    ->setWrapText(true);\n```\n. A malicious XXE/XEE entity will typically contain both `<!DOCTYPE` and `<!ENTITY`\n\ne.g.\n\n```\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><!DOCTYPE foo [ <!ELEMENT foo ANY ><!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]><foo>&xxe;</foo> \n```\n\nthough I was advised by the security expert who reported this issue that it is possible to create XXE/XEE with only `<!DOCTYPE`, so the default Reader behaviour is therefore to trap for `<!DOCTYPE`.\n\nHowever, `<!DOCTYPE` is perfectly valid in HTML (indeed, HTML should have `<!DOCTYPE`), so we can't rely on that for the HTML Reader, because every document should then return a positive and be blocked; so we override for that Reader with a check for `<!ENTITY` instead, because malicious xxe/xee can only be triggered via an `<!ENTITY` element in HTML documents.\n\nIt's basically a case of the docblock not being up-to-date with the code\n. [Floating Point Accuracy Problems](https://en.wikipedia.org/wiki/Floating_point#Accuracy_problems)\n. If you're running PHP7, then you shouldn't need to use pclzip at all anyway\n. But yes, I have been running tests against PHP7, without identifying any specific issues that can't be eliminated (such as dropping the use of pclzip) anyway\n. That is old code..... 1.8.1 is the latest release, and has been available since April, and the develop branch has been fixed to eliminate that break\n. Well as you're trying to read from every individual cell of the merge range, what do you expect PHPExcel to do?\n\nIf you've merged cells A1 and B1, then cell A1 holds the value, so what should PHPExcel do when you call getCell() on B1? What do you think should happen? Should it throw an exception for you to handle in your code? Should it return a null value? Should it return the value of the top-left cell of the merge range?\n\nThis isn't a bug, this is PHPExcel's behaviour.\n\nIf you need to test whether a cell is part of a merge range before getting the value for that cell, then you can do so.\n\n```\n// ignore merge cell unless it's the top-left cell in the merge range\nif (!$objPHPExcel->getActiveSheet()->getCellByColumnAndRow( $col, $row )->isInMergeRange() ||\n    $objPHPExcel->getActiveSheet()->getCellByColumnAndRow( $col, $row )->isMergeRangeValueCell()) {\n    // Cell is one that we're interested in reading\n} else {\n    // Cell is part of a merge-range that we're not interested in reading\n}\n```\n. What are you doing to try and use the csv Writer?\nAre you perhaps doing something like:\n\n```\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'csv');\n```\n\nThe Writer names are case-sensitive\nso you'd need to specify the Writer name correctly as 'CSV' rather than 'csv'\n\n```\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'CSV');\n```\n. There do appear to be some problems with the PDF rendering engines handling embedded images, which may or may not be affecting you. Which rendering engine were you using?\n. > sdclee  wants to merge 38 commits into 1.8 from 1.9\n\nThis really is not a good idea.... the 1.8 branch retains PHP 5.2 backward compatibility; merging the 1.9 branch into 1.8 is going to completely break that, and result in a perfectly valid 1.8 branch suddenly filled with non-working code.\n. I've looked at this task before when I did the original work on autofilters, and it really is a major piece of work, with a large memory and execution overhead. Excel doesn't simply display the rows in a different order, it actually moves the rows themselves.\n\nAs such, it's not a piece of work that I'm willing to do\n. That's right: Headers/Footers aren't implemented in the HTML or PDF Writers\n. Perfectly happy to accept pull requests, especially if they're simple enough to test easily or even simply review the code..... it's large PRs without description or tests that take a lot more effort to evaluate\n. It's actually LGPL Version 2.1, February 1999, that's the version used for the wording in the [license.md](https://github.com/PHPOffice/PHPExcel/blob/1.8/license.md) file\n. Only potential drawback with this that I see is that it's possible now (and I know people using it this way) to use the calculation engine without actually instantiating a PHPExcel object, using it purely to execute formulae with absolute values (rather than loaded from cells)\n\nOne of the examples (`Quadratic2.php`) actually demonstrates it this way\n. However, I do appreciate the reason behind this PR, I'm just wondering if it is the best approach\n. OK, Thanks! I'll take a look at it this evening\n. The cells prior to the startrow aren't populated at all until you look at them, so they're not taking up memory. If your startrow is 11 and endrow is 20, then no cells in the range 1-10 are actually loaded into memory at all..... not even with a null value.\n\nHowever, if you then try to access cell A1 from in your script, PHPExcel will **create** a cell A1 and given a null value.\nIf you do a call to `toArray()` (for example), it will create all the cells for rows 1-10 as null value cells, because `toArray()` always works from cell `A1`\n\nIf however, you use `rangeToArray('A11:E20')` instead, then you won't create those empty cells, because you're only referencing cells that were loaded\n. I'm not sure I see the point in this (and it won't work as you expect either).\n\nIf you've loaded a PHPExcel object from a spreadsheet file, it will retain any existing string values as strings (with any leading zeroes as appropriate).\nIf you're loading from a CSV file, or HTML, then you can use a value binder to retain any leading zero strings.... though I already implemented a change in version 1.8.1 to the default value binder to do this if a numeric string had leading zeroes anyway (Work Item GH-394  - DefaultValueBinder is too much aggressive when converting string to numeric).\n\nIf you're setting values with leading zeroes yourself, then use `setCellValueExplicit()` which will set the datatype to string by default, and retain any leading zeroes.\n\nThe original value without any formatting is already maintained in the `$value` property, as a value of the appropriate datatype.... you don't need a new property to maintain that explicitly as a string datatype, especially when the original might have been a Boolean or a rich text object.\n. If you are having problems with formulae, then PHPExcel allows you to do some debugging to see exactly how the engine is evaluating your formula - you can read about it [here](https://gist.github.com/MarkBaker/5908357)\n. But this doesn't look like a valid formula:\n\n```\n=IF((OR(E2=\"\",D2=\"\")),0,IF((E2<D2),((E2-D2)24)+24,(E2-D2)24))\n```\n\nWhat is `(E2-D2)24` supposed to do?\n. Because the result of that calculation is simply a string containing `10/30/2010`. PHPExcel doesn't know that you're treating it as a date elsewhere, and the calculation doesn't read the styling of a cell to know that you've applied a date style to that cell... to be honest, I'm surprised that MS Excel treats it as a date rather than as a string, because (regardless of any format) it is simply a string.\n\nIf you're using it in other formulae elsewhere, then the DATE() function will convert that string to a date\n. Don't use the 1.9 branch yet..... not everything has yet been namespaced, so there will be files not found, it's subject to major changes at any time as I refactor it..... it's here because if my development laptop breaks, at least I have this branch as a backup.\n\nIt should not be considered as code for anybody to run until such time as I remove the big notice from the README file that says \"Don't run this\"\n. https://en.wikipedia.org/wiki/Floating_point#Accuracy_problems\n\nSet a number format mask for the cells if you only want 2 decimals to be displayed; PHPExcel won't do this for you automagically\n. Can you explain exactly what problem?\n. OK, a clue.... what line of code? (your post suggests 409, in PHPExcel/Reader/Excel2007.php, but that has nothing to do with $colourScheme at all) What version of PHPExcel? Do you have any working .xlsx file that demonstrates this problem? (you can attach files to the issue now on github)\n. The build does fail, because the code doesn't yet pass every single test..... the drawback with a TDD approach..... that does not mean that the code is unstable or unusable, simply \"not 100% perfection\".\n\nIf something is missing, then it has nothing to do with failing tests..... so perhaps you can tell me what's missing, and then I might be able to help\n. It means that if I can reduce the number of errors with each new push, then I'm actually achieving something, reducing the number of failures, and improving the codebase.... you might as well ask what's the point of testing in the first place if you write every test so that it will always pass (and I've known projects that do), or of only writing tests for situations that you know the code can already handle.\n\nIf you look at the actual tests that fail, most of them are edge cases for the calculation engine, and slowly, one push at a time, I'm addressing those edge cases and reducing the number of failures\n. Unable to replicate, using your own code.... what version of PHPExcel are you running?\n. Which branch on github? develop or 1.8?\n\nI've tested with up to 20000 iterations in the loop, and still haven't managed to replicate this problem\n. It's certainly an oddity, though PHP should behave the same regardless of platform (32-bit/64-bit discrepancies aside)\n. Unless I can find some way of replicating it, I'm unlikely ever to find a fix.... fiddling with the code blindfold, and never being able to know if anything I've changed will fix the problem is almost impossible.\n. I'm guessing that you have misunderstood\n\n`getHighestColumn()` returns the highest column that is referenced anywhere within the worksheet, whether because it contains data, or is part of a range reference such as print range or autofilter range, or has a cell styling, even if it doesn't contain any content\n\n`getHighestDataColumn()` returns the highest column that contains actual data in the cell\n\nIt's not a discrepancy, it's the point of having two different methods.\n\n---\n\nThere is one other significant difference\n`getHighestColumn()` is read on loading the file (or set to 'A' by default if creating a new PHPExcel object, and won't change no matter what you do to the worksheet. It's stored as a staic value, so access is quick.\n`getHighestDataColumn()` is calculated at the point when you call it, so slower to retrieve; but it is always accurate at the point when it is called, and changing content of the worksheet will change the returned value\n. The parameter for  `getHighestDataRow()` is optional, if you don't provide the parameter, then it will return the highest column that contains data in the worksheet. If you provide a row number as an argument, then it returns the highest column containing data in that row.\n\nYou'll find that there's the equivalent for `getHighestDataRow()` as well, accepting an optional column letter\n\n`getHighestRow()` doesn't take any arguments\n. So you're saying that I should have just one function, with two optional arguments? Indeed, even more arguments if you want to base it on whether a particular formatting is applied or not? Or am I completely misunderstanding what you're saying?\n. I have no ide how git prepares its download, nor why it should ignore certain folders.... if somebody could tell me how to manage it.... \n. It's a highly unusual issue: the number is likely to be the MS Excel serialized timestamp (the number of days since 1st January 1900, or 1st January 1904 if the file was created using the Mac calendar) which is how the date is stored in Excel files. MS Excel uses a number format mask to render it in a human readable format.\n\nPHPExcel holds the value as that MS Excel serialized value internally, and renders it as a date using the number format mask when you write it to a format like CSV, so you should see the human readable date in the CSV unless PHPExcel doesn't have the number format mask\n\nSetting ReadDataOnly to true (the default is always false) means that PHPExcel won't read the number format mask, only the raw data value (the MS Excel serialized datetime value), and can't even tell if the value is a date or not without that mask; which is what makes it the most likely explanation for being unable to convert the value to a human readable date/tie on writing CSV.\n\nWhat puzzles me is why PHPExcel might be reading the serialized timestamp values, but nor the number format information if ReadDataOnly is set to false. Is it possible for you to attach a file that demonstrates this problem? \n. On 09/10/2015 20:40, Russ wrote:\n\n> I've created a very simple php script which reads in either an XLSX or \n> XLS file, and then exports the file content to CSV. Here's the guts of \n> the program, which you've seen many times before:\n> \n> $objReader = PHPExcel_IOFactory::createReader($cExcelFileType);\n> $objSpreadsheet = $objReader->load($cExcelFileName);\n> $objWriter = PHPExcel_IOFactory::createWriter($objSpreadsheet, \"CSV\");\n> $objWriter->save($cCsvFileName);\n> \n> What's interesting is that if I read in an XLS file and then output a \n> CSV, dates are written in dd/mm/yyyy format as expected. However, if I \n> read in an XLSX file and output a CSV, the dates are written out as \n> integers. I would have expected the CSV file to be written out using \n> date strings regardless of the import format.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub \n> https://github.com/PHPOffice/PHPExcel/issues/698.\n> \n> An annoying problem.... a patch that I'd done to handle badly-formed \n> xlsx files that were generated by scripts that overrode the pre-defined \n> number format masks below 164 (that are reserved for Microsoft internal \n> use)... except that my patch broke any use of those pre-defined formats.\n\nHopefully the change that I've just pushed to the 1.8 branch should fix \nthe problem.\n\n## \n\nMark Baker\n\n---\n\n|.  \\     -3\n|_J_/ PHP |\n|| |  __  |\n|| |m|  |m|\n\n  I LOVE PHP\n. Thanks for the confirmation, I'll merge the 1.8. branch into develop later this evening\n. MS Excel stores dates as a float, the number of days since 1st January 1900 (a bit like a unix timestamp is a number), and uses a number format mask to identify that it should be displayed as a date/time.\n\nYou see your line in your code that reads\n\n```\n    $objReader->setReadDataOnly(false);\n```\n\nThat line specifically tells PHPExcel **not** to read any formatting information (such as the number format mask that converts an Excel timestamp number into a formatted string) but only to read the raw cell data\n\nThat means PHPExcel can't know whether a cell contains a \"date\" or a \"number\", so it can only treat it as a number.\n\nRemove that one line of code, it will magically start recognising the values as dates again\n. No, nor do I.... and I'm not likely to be able to guess. I have no idea what filetype you're loading, or what it really contains; so you're giving me no clues to try and figure it out either\n\nHijacking a closed question isn't a good way of asking either\n. Using `getOldCalculatedValue()` will return the last value calculated for a formula cell that was generated in **MS Excel** (and even then, it's possible to disable calculations in MS Excel, and this value won't then be set). A file generated by PHPExcel will not populate this value, so it will simply provide a default value of 0.\n\nGenerally speaking, you should always use `getCalculatedValue()` when trying to evaluate a formula value\n. It should already be in the 1.8 branch\n. Thanks for highlighting the error.... I hadn't updated this PR, because I haven't yet changed it in the 1.9 branch (I have the same bundle of commits in my local 1.9 that I did for the 1.8 branch, but haven't yet completed them all)\n. Thanks for spotting this error, merged manually\n. What I don't see here is where you're adding the chart to the PHPExcel object\n. Except that a worksheet title should be a string\n. Excel isn't happy as you think.... effectively you're creating worksheets `for`['2001', '2002', '2003']`not for`[2001, 2002, 2003]`; because Excel worksheet names are strings, even if they're strings comprising all digits. Casting to a string is probably a better option than loosening the validation rules\n. How are you setting the value? Because cell styles shouldn't be affected by this in any way by simply changing a cell value.\n\nYou specifically have to tell PHPExcel Reader and Writer to include charts, the default behaviour is to ignore them\n. Excel5 doesn't support charts at all at the moment.\n\nExcel 2007 supports charts for reading and for writing; HTML and PDF support charts for writing\n. It will be fixed before the release of PHP7\n. All the more serious issues with PHP7 have been addressed in develop branch, and I've been running tests against that. The only things not working are those related to external libraries (jpgraph and various pdf rendering libraries), although phan is still picking up a few warnings about syntax that won't break anything, but still need cleaning up.\n. @naturekzw - under the tagged releases - [PHPExcel 1.8.1](https://github.com/PHPOffice/PHPExcel/tree/1.8.1)\n. Please provide more specifics (even perhaps attach a sample file that demonstrates this issue)..... because I use Office 2013 as standard on my laptop and have never had any crashes on getSheet(), so it certainly isn't as simple as all 2013 documents\n. Without a replicatable test case, it's almost impossible to diagnose a problem, especially with something as complex as an Excel file..... the best I can do is make arbitrary code changes and pray that they don't break anything, and hope that they might fix your problem.... PHP development as black magic\n. So you're basically saying that there's a fault somewhere in the Excel5 Writer..... that doesn't really narrow anything down at all.... I guess I can look at the writer and make a few arbitrary changes in the hope that it fixes things for some external reader application that I have no access to for testing, and hope that it doesn't actually break anything in the process\n. Certainly there have been changes between 1.7.8 and the latest 1.8.1 release (or even the develop branch on github)... including a couple of minor changes to the BIFF Writer.\n\nThere will always be some differences between a file saved in MS Excel and one created by PHPExcel, such as the created/modified timestamps.... without having a complete file, it's difficult to identify those differences, because the offsets aren't consistent but dependent on various content elements within the file (such as the length of document properties like subject and title)\n. I'm going to delete the 1.9 branch for good, and just keep it all on my laptop until the work is complete, and hope that I don't have any kind of laptop failure or get run over by a bus in the meanwhile...... THE 1.9 BRANCH IS NOT STABLE, IT IS NOT FOR USE UNTIL COMPLETE, IT IS MY OFFLINE BACKUP\n. This isn't a PHPExcel issue..... the script that you're running doesn't seem to be the same the two versions: it looks like you're injecting a spurious linefeed somewhere in your 5.2.17 version that's corrupting the output\n. Create a copy of the worksheet you want using either the worksheet's `copy()` method (for a shallow clone), or a PHP clone (which creates a deep clone) and then use the PHPExcel object's `addSheet()` method\n. PHPExcel should handle worksheet names containing single quote without problem, can you provide either a stack trace so I can see what is going on at this point, or a working example of code that will allow me to duplicate the problem\n. If you've found a bug, please provide a working code that demonstrates the issue, and I can look at fixing it properly; but this solution will break a great many worksheets..... and as far as I'm aware, your \"issue\" should be handled correctly by PHPExcel already.\n. Recommendation is to write a script that uses PHP's fgetcsv() function to read each row from the file and use your PHP SQL driver to insert that record into the database..... not really a PHPExcel question at all\n. Well logically you'd just iterate over the rows from the $objWorksheet object (see `Examples/28iterators.php`) for an example, and then use your database interface to insert the values from that row into your database\n. I don't see anywhere that you're setting the cell alignment to wrap in that code, as demonstrated in `/Examples/01simple.php`)..... this has to be set explicitly, it is not the default style\n\n``` php\n$objPHPExcel->getActiveSheet()\n    ->getStyle('A10')\n    ->getAlignment()\n    ->setWrapText(true);\n```\n. Can you provide a file that actually demonstrates this SimpleXML infinite loop bug?\n. Any particular Writers?\n. There is no built-in method that will do this for you; you'd need to write it yourself, ensuring that you moved both the content and the styles, and updated any references to that column using the ReferenceHelper\n. The reason was that failing to do so returned too many invalid results for too many functions with older versions of PHP. It has now been removed in the latest develop branch because I'm fed up with people complaining all the time\n. https://github.com/PHPOffice/PHPExcel/blob/1.8/license.md\n. Which elements of [semantic versioning](http://semver.org/) are we failing on? It would be great if you'd explain what we're doing wrong, in words that I can understand\n. The 1.9 branch isn't in any way stable yet, and shouldn't be used: and unlikely to ever see light of day as PHPExcel 1.9.0..... it's more likely to be 1.0.0 of PHPSpreadsheet instead.... 1.9 is where I'm posting the code changes as I do them so that there's a copy at least if I get hit by a bus, or if the cat fritzes my laptop next time she urinates over it\n. Is that a +1 to my not getting hit by a bus?\n. Yes, PHPExcel will run without issue on PHP 5.6.... I run all my tests against 5.2, 5.3, 5.4, 5.5 and 5.6, and have been testing against 7.0 release candidates for the last 2 months. Over the weekend, I also ran against 7.0 and cleared a couple of remaining issues with that on the develop branch\n\nSQLite is still a caching option for using PHPExcel with earlier versions of PHP that don't have SQLite 3. Sadly, there are still a lot of users on those older versions\n\nPCLZip is provided as an alternative to ZipArchive for versions of PHP that don't necessarily have ZipArchive enabled as standard. Most distros providing recent versions of PHP do have ZipArchive enabled as standard, but that wasn't the case with earlier versions of PHP.\n\nAnd yes, PHPCompatibility is a very useful plug-in for CodeSniffer\n. Then make sure that the row doesn't actually contain 1024 cells.... `next()` will only be called if there is another cell to retrieve\n. Empty is not the same as non-existent..... it's perfectly possible for a cell to contain an empty string or a null.... if you look at the actual code, the cell iterator checks to identify the highest column using a call to `getHighestColumn()`. If `IterateOnlyExistingCells` is `false` then this may include cells that contain styling information or are included in such worksheet features as print ranges. If `IterateOnlyExistingCells` is `true` then it explicitly checks for the existence of cell records loaded from the spreadsheet file\n. No I haven't seen anything like it, and I'm still trying to work out what you actually mean about `overwriting the value not clearing it and then writing to it`.\n. Currently testing, thanks for the PR\n. Currently testing, thanks for the PR.... it's been on my to do list for a while now\n. I'm not sure what you're doing, but a block of code as simple as\n\n```\nrequire_once dirname(__FILE__) . '/../Classes/PHPExcel.php';\n\necho PHPExcel_Style_NumberFormat::toFormattedString(10, \"0.00\"), PHP_EOL;\necho PHPExcel_Style_NumberFormat::toFormattedString(10.00, \"0.00\"), PHP_EOL;\n```\n\ndisplays\n\n```\n10.00\n10.00\n```\n\nwhich is correct behaviour\n\nCan you show exactly what you're doing?\n. Thanks.... I hate having to maintain backward compatibility for PHP5.2\n. Thanks for highlighting this, manually merged, and will push within the next hour or so\n. Currently testing, thanks for the PR.... it's been on my to do list for a while now\n. So what exactly is the benefit in changing a variable name from `$e` to `$S`?\n. So give me some clues..... what are you actually doing? Are you trying to add an image to a file? If so, what type of file? Have you changed anything on your server? PHPExcel has no reason to access any external sites, and there's nothing in the code that should do so unless somebody has created a file containing a drawing referring to an external site.... and PHPExcel expects all images in a file to be embedded in the file itself.\n. Then I'm afraid you'll have to have a word with Microsoft and get them to change it.... because I'm afraid that it's MS Excel itself that imposes this limit for BIFF-format xls files.... Once you've persuaded Microsoft to make that change, then I'll modify PHPExcel to work with it\n. Using Rich Text:\n\n```\n$objRichText = new PHPExcel_RichText();\n$objRichText->createText('Test');\n\n$objSuperscript = $objRichText->createTextRun('1');\n$objSuperscript->getFont()->setSuperScript(true);\n\n$worksheet->setCellValue('A1', $objRichText);\n```\n\nOr there is an HTML to RichText helper available as well:\n\n```\n$markup = 'Test<sup>1</sup>';\n$wizard = new PHPExcel_Helper_HTML;\n$richText = $wizard->toRichTextObject($markup);\n\n$worksheet->setCellValue('A1', $richText);\n```\n. Please provide actual code that demonstrates this problem, because I am unable to replicate\n. Do some basic diagnostics, check that the template file is loading correctly, check whether a cell like Z4 is populated with any value\n. Are these actually images? Or are they charts? Or form elements?\n. Then I'll need an example file to demonstrate the problem, because PHPExcel should read and write pretty much any images without issue\n. We don't support older versions of PHPExcel\n. Without knowing what your CSV file contains, how can I guess what PHPExcel thinks of it. Look at your file, look at the PHPExcel code, work out why PHPExcel thinks it might be an HTML file..... unless I can see your csv file, I can't do that for you\n. OK, so the PHP checker for HTML is **_too**_ simple because it's based on **_anything that looks like markup**_ (e.g. tags) being accepted as HTML markup..... so I'm open to suggestions on how to improve that for the rare case of a csv file that contains markup of some description.\n\n>  because Nuovo does a file extension check as well as a file type check\n\nIf PHPExcel did that, then it would report 95% errors...... because so many files aren't don't have a correct extensions, csv or html markup content often have an xls or xlsx extension.\n\nThat's precisely why we ignore the file extension\n. For precisely the reasons I've specified, namely misnamed files which are very common, No..... look at the identify() code..... it actually checks the extension to use for its initial \"check\", but only if the extension isn't csv..... I'lll take a look at changing this, but not while I'm in the work that actually gives me an income\n. Merged manually, thank you for the PR\n. If you want additional format constants, you should really add them in your own script; those provided in PHPExcel are simply those provided intenally in MS Excel, or required for the advanced value binder in PHPExcel\n. Do you have an example file that I can use to test this?\n. Uh! Where is any of the PHPExcel code using short array syntax? The 1.8 branch shouldn't have anything that isn't supported in PHP 5.2.0. Rather than changing the minimum version, the solution is to correct anything that isn't compatible\n. 1.9 is minimum PHP 5.4.0, as indicated in the composer.json file in the 1.9 branch\n. I'd start by recommending that you upgrade to the version of PHPExcel from the latest develop branch on github, because there have been some fixes implemented in the VLOOKUP functionsince 1.8.0\n. There's a [gist here](https://gist.github.com/MarkBaker/5908357) that shows how t debug the Calculation Engine\n. What are you trying to achieve? Tokenising a formula is a part of the parsing process, prior to execution of the formula; it's not intended as a method for changing a formula in any way; it's not intended to be reversible.\n\nIf you need to change the formula, do it using the string value of that formula, using str_replace() or regexp (or similar) \n. It supports UTF-8, I've never tried emoji, I've never tried emoji in MS Excel either\n. Corrected\n. Thank you for this, merged manually\n. Try setting `$objWriter->setPreCalculateFormulas(true);` before saving\n. Then something has magically changed somewhere, because PHPExcel has never had any problem with nested formula before; but I'm not aware of any commits that would have broken this. Which branch are you testing with?\n. Apologies, fixed\n. There's nothing to stop you defining additional formats in your own code, they're simply strings as you see\n. You can limit the data that you import by using a read filter; but it looks like you're using some kind of wrapper class around PHPExcel, so you may not have access to call PHPExcel methods directly\n. This won't work in all cases, because $ref could look something like `A1:E10 A20:E25` which is a series of ranges that wouldn't be accepted by the setConditionalStyles() method which only accepts a single range or a single cell value; but its easy enough to modify your change as\n\n```\n$cellBlocks = explode(' ', str_replace('$', '', strtoupper($ref)));\nforeach ($cellBlocks as $cellBlock) {\n    $docSheet->getStyle($cellBlock)->setConditionalStyles($conditionalStyles);\n}\n```\n\nWill merge this manually, but thanks for the pointer to this inefficiency\n. Implemented to 1.8 branch, merging to develop\n. Very risky, because you might find `x:` in the content of a cell; and something like `=SUM(x:y)` in a formula is perfectly valid\n. This option is not available from within PHPExcel, because the overhead of sorting is excessively high\n. If you're building a spreadsheet, then you need to ensure that the data is sorted before you start building it (e.g. in a database query or similar). If you're reading a spreadsheet, then read it to an array or temporary database table, and sort it there.\n. No! Sorting within PHPExcel is a big overhead, which is why it has never been implemented. This isn't an error. That's how cell caching works, only a single cell is \"active\" in memory at any one time.... if you reference that, and then change the active cell, you'll be pointing to the current \"active\" cell, which will be the last cell that you accessed..... don't use references to cells\n. Thanks for the fix\n. @tangix Please explain that comment; charts work in all tests now as correctly (or better) than in 1.7.8\n\nIf you make a sweeping comment like that, please provide specific examples to back up exactly what no longer works\n. Perhaps I need a bit more than that, because the `32chartreadwrite.php` examples for pie charts all run as expected, and MS Excel makes no complaints when opening the file\n. If cell A10 contains a dropdown list, then this is cell content, whether you have actively selected an entry from that list or not; therefore row 10 is the highest data row because row 10 contains a dropdown\n. The problem then is we end up with several more getHighest\\* methods, all reporting different things, and having to work in different ways.... having two methods already feels bad enough, and there's enough confusion about them.... and there's a big difference between getHighestColumn() (calculated purely during the file load) and getHighestDataColumn() (calculated when called based on the actual cell list).... but your request would not only require testing whether a cell existed, but also testing the value of that cell, an even bigger overhead\n. So perhaps I should write and document 20 different versions:\n- getHighestRowAsReadFromFileThatIsReferencedByAnything() \n- getHighestRowWhereACellActuallyExists()\n- getHighestRowWhereCellExistsAndIsNonBlank()\n\netc\nYou say \"do something about it\".... do what? Change the methods to work differently (and break backward compatibility), change them to work how? As you want them to work?\n\nThe difference is historic..... getHighestRow() has always existed, and always worked from loading the file; it never changed whatever was done to the data, so adding or deleting rows left it unchanged. getHighestDataRow() was added much more recently, and works by testing whether there is an entry in the cell collection. As nulls or empty strings are still data, they will still be reported, because the a cell containing those values still exists.\n. I'd hope that it would be `$excel->getProperties()->setCreator('\u0622\u0631\u062f')` because the PHPExcel object doesn't have a `setCreator()` method\n. In what way does it misread it? What is the separator defined as in your file? What is it being set to?\n. If a defined separator line is\n\n```\nsep=;\n01234\n```\n\nthen \n\n```\n$this->delimiter = substr($line, 4, 1);\n```\n\nshould read 1 character from offset 4, which should be `;`\n. Then the problem isn't with the line that reads `$this->delimiter = substr($line, 4, 1);` but with any logic that allows it to drop through to that line if no `sep=x` line exists in the file\n. Manually changed, with additional logic for case-insensitivity\n. So which version of PHPExcel are you having this problem with? Because 227 is a blank line in the latest develop branch of the library\n. And has your PHP7 been built without the zip library?\n. If you're adding a cloned sheet, or a new sheet from a different PHPExcel object, then consider using `addExternalSheet()` instead of `addSheet()` because that will copy the styles with it, rather than relying on both PHPExcel objects having exactly the same style definitions and indexes\n. Unless you specify a Reader, PHPExcel tries to identify the file to figure out which Reader to use to load it, testing each format in turn until it finds a match, and defaulting to CSV if it doesn't find any, because there is no signature that can identify a file as csv format.\n\nThis means that it needs to use php_zip to check whether the file could be ods, xlsx, etc first (note that xls is not a zip-based format); and if php_zip is not available, then it will fail.\n\nWith modern versions of PHP, zip would normally be included by default, and has to have been explicitly disabled for it not to be present. If it isn't, then you can fall back to the PCLZip alternative, configuring PHP to use that before executing the load.\n\nAlternatively, if you know that the file in question is a csv file, then you can specify to use the CSV Reader explicitly, rather than relying on PHPExcel to identify the format first (which is an overhead anyway)\n. Of course, pclzip.lib.php is an external library\n. It might look like an \"internal\" library, because we include it directly in the distribution; but it' actually [this library](https://github.com/ivanlanin/pclzip) which has finaly made its way onto github and packagist; and finally been updated\n. Of course, if your version of PHP is high enough, it isn't even needed because ZipArchive is built-in as standard by default\n. Are they really uppercase characters? Or simply lowercase characters styled as uppercase?\n. I can see the cells where styling has been added in your images; which stylings have been changed?\n\nAnd can you attach the external file to this issue?\n. There is no package `1.8.1.0`, the latest release is `1.8.1`. The `liuggio/excelbundle` should probably be checking for the non-dev releases\n\nAnd yes builds are failing, because PHPExcel doesn't yet pass all tests...... TDD, test and then write the code to pass those tests.... PHPExcel still fails some of the edge cases tests.... but if we didn't release until every single test passed, then there wouldn't be any releases.... with each release, it passes more of those tests, but isn't yet 100% perfect\n. This has long been resolved in the development branch\n. Are there any version issues with this? DateTimeImmutable and DateTimeInterface were only introduced in PHP 5.5\n. A good question, and one that I don't have an answer for. The 1.8 branch is still targeted at a minimum PHP version of 5.2, and sadly there's still too many people running older versions of PHP like that.\n\nThe 1.9 branch is being developed as the more up-to-date version, targeted at PHP 5.4, and using namespacing, etc.... not backward compatible with the 1.8 branch... sadly, changing that from 5.4 to 5.5 might seem like a good idea (still supported versions of PHP), and with all the nice extras like Generators as well; but there's still a sizeable 5.4 userbase that wouldn't be supported. It might be worth raising on https://gitter.im/PHPOffice/PHPExcel to see what consensus there might be for raising the minimum PHP version for the 1.9 branch to 5.5 (the library will also be renamed PHPSpreadsheet in due course), which would then allow your patch to be applied without issue.\n. Adding `$displayBlanksAs = self::DISPLAY_BLANKS_AS_GAP` among the existing arguments to the Chart constructor will break backward compatibility, and certainly break the Excel2007 Reader when charts are being loaded..... it would be better to have this new argument at the end\n. Unfortunately, DateTimeInterface requires a minimum PHP version of 5.5 (the same as DatetimeImmutable) and PHPExcel is 5.2 minmum requirement, which would break things for all users not yet running >= 5.5.... I've already had one PR for this change, and don't have a solution for the version problem..... that's why I opened up the call for comments on gitter about a minimum 5.5 version for the 1.9 branch\n. Even for the 1.9 branch, target PHP is >+ 5.4, not 5.5.... that's what the discussion on gitter is all about\n. That's what the discussion on [gitter](https://gitter.im/PHPOffice/PHPExcel) is supposed to be about. It was specifically the DateTimeImmutable that triggered the discussion in the first place\n. It's not really intuitive to have a getCellValue() method (or series of methods) in the Worksheet object, because you're setting up new shortcuts that act on a different object (the cell object) and don't add anything new to functionality, while filling the worksheet with yet more methods.... I'm already not a fan of the setCellValue() methods in the worksheet because they're already close to turning the worksheet into a \"god object\".\n. This is not an issue with PHPExcel, this is called ROUNDING\n. What do you mean \"round() not working\"? `round()` is a standard PHP function, that works pretty effectively:\n\n```\n$price = 544.8099999999999;\necho round($price, 2);\n```\n\n[Demo](https://3v4l.org/B9foi)\n\nAlternatively, if you have formatting for your cells, then use:\n\n```\n$price = $objPHPExcel->getActiveSheet()->getCellByColumnAndRow(4, $i)->getFormattedValue();\n```\n\nAs described in the [PHPExcel Documentation](https://github.com/PHPOffice/PHPExcel/blob/develop/Documentation/markdown/Overview/07-Accessing-Cells.md#retrieving-a-cell-value-by-coordinate)\n. `1.9-dev` shouldn't be a branch alias for `1.8` in any way, it's the initial branch for the next major version that breaks backward compatibility with `1.8` quite completely. It's soon to be deleted as it has provided the basis for creating the PHPSpreadsheet repository; any branch alias for `1.8` master releases should be `1.8-dev`\n. That's why what was 1.9 has now been moved to its own repo, and the 1.9 branch will be deleted \"real soon now\".... I've been busy with the Dutch PHP Conference since I created the new repo, so I didn't delete it before, but will do so this week\n. `getCalculatedValue()` will evaluate the formula and return the calculated value. If it is not doing so, but returning the formula instead, then it is not seeing that formula as a formula, but as a string. Why that should be happening, I don't know; but it must be something specific to your spreadsheet n file, and as I have no access to that file, I can't help. If you can post a file to demonstrate the problem, then I might be able to determine why it isn't working for you\n. How are you setting the cell value? Simply setting formatting to a type of string won't automagically convert a numeric value to one with leading zeroes, you need to set the cell value explicitly as a string datatype to retain the existing leading zeroes\n. So you're setting an empty string?\n\nAlright, what format are you writing, and how are you checking how it's been written?\n. Those constants are nothing more than strings; you can pass any string you want as a number format style mask (though best if it is a valid Excel number format mask), you're not limited to those defined in the NumberFormat.php file\n. Well perhaps there is a problem with the 3rd party invoicing application?\n. It may well be different.... PHPExcel doesn't \"optimise\" its storage of data in terms of size, because it simply tries to write the data as quickly as it can (it's a complex, slow process from native PHP anyway); whereas Excel and LibreOffice do, so there will be differences in size\n. This is absolutely nothing to do with PHPExcel, but with what your script does after calling the save(). If you generate any subsequent output, or send your own headers, then you're potentially going to cause yourself problems.\n\nIf you're doing this within a framework, then that may be doing the additional output or changing headers; but most frameworks provide a mechanism to suppress that behaviour\n. Is the date actually a date? Or simply a string containing a value that we humans will interpret as a date? Please provide some specifics\n. PHPExcel_Shared_Date::isDateTime() certainly works in most cases; and dataType=n with decimal value 42337 is simply indicating that the cell contains a number (`dataType=n`) with  value of 42337.\n\nWhat indicates that  cell value is  to be displayed as a date in MS Excel is the number format mask for that cell; and PHPExcel identifies whether a cell contains a date/time value by looking at that number format mask; so can you post the format mask?\n. The php_zip extension is a dependency for PHPExcel. If you don't have that dependency, then you can use the built-in PCLZip instead\n\n```\nPHPExcel_Settings::setZipClass(PHPExcel_Settings::PCLZIP);\n```\n\nbut at a significant cost in performance\n. Why do you actually need this? Are you trying to access the ZipArchive class before any other class in the PHPExcel library?\n. Thanks for identifying that problem; I've fixed it in the develop branch on github\n. Explain your problem!!! Simply showing two images doesn't make an issue report\n. Wrong in what way? What data is wrong?\n. I can't see any difference in the sixth line of data in those pictures:\n\n```\n 0 | 17130.36 | 22919.95\n```\n. Fixed in PHPOffice/PHPSpreadsheet, thanks for highlighting this\n. Unfortunately, this will break versions of PHPExcel running on earlier versions of PHP that don't support namespacing. We can't apply this change without a major break of PHPExcel, forcing version of PHP >= 5.3\n. So what cell caching methods have you tried using? \n. Do you mean unresponsive or simply slower? PHPExcel cannot exceed PHP's memory limits, so cell caching is method to reduce memory usage, but at  cost in execution speed\n. It's perfectly possible, but you no longer get a cell object returned, you get a \"pointer\" to the **_current**_ cell object, and there is only ever a single \"current\" cell object at any one time. Getting a different cell will reset that pointer to point to the latest accessed cell instead.\n. Because 1.7.7 was a different version.... between then and the current version 1.8.1 we introduced cell caching as a way of reducing the memory footprint of a spreadsheet, and that introduced the principle of having a pointer to a current active cell rather than making every cell directly available in memory.\n\nThere is no way of bypassing that. Why do you need to hold individual cells in memory anyway?\n. Save the cell address so you can retrieve that cell subsequently and get its value (though of course that will then become the current cell); or save the value\n. I'm going to delete this 1.9 branch.... it was useful for the initial namespacing work, but is causing much more confusion now\n. Native speadsheet formats require the ability to move the file pointer backward and forward through the file using functions like fseek(), because the actual content is not organised linearly in the file, and not all file streams support fseek, I'm not aware of any remote streams that do support seeking\n. This was something we'd originally implemented in PHPExcel, except that it created problems with earlier versions of PHP that rejected the additional arguments for `spl_autoload_register()` so it had to be removed. Thanks for resubmitting for PHPSpreadsheet now that the version restriction no longer applies\n. PHPExcel should be converting all content that it reads from the file to UTF-8 as it reads it; there is no need to convert it to utf-8 again. Are you displaying it as UTF-8?\n. Minimum requirements for the IntlDateFormatter class: `(PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0)` which requires forcing PHPExcel minimum version to 5.3, and ensuring that the relevant extensions are enabled\n. Talking about dropping support for PHP 5.2 is the type of thing that gets me death threats (seriously).... though you may be aware that we've been porting all the code across to PHPSpreadsheet, and rewriting swathes of it for PHP >= 5.5\n. Always use UTF-8; if the text isn't UTF-8 then use PHP's `iconv()` or `mb_*` functions to convert it to UTF-8. What?\n. No it isn't supported\n. You're not limited simply to the pre-defined format mask values, you can use almost anything that MS Excel will recognise\n. PHPExcel uses PHP memory, which is limited by your php.ini file settings. It cannot magically load more data from a file than memory permits, although there are methods provided for caching cell data that reduce the memory requirements. Which of those methods are you using?. I can understand what this does; but what is it actually a fix for?. Can you explain what you mean? What is it that you want to do?. Look at the latest develop branch, this has been resolved there for quite some time. Sadly not; I've tried several times (it errors if I try it myself), and I've asked the codeplex people to do it as well, all without success... I'll try chasing them up again, see if perhaps I'll find somebody willing to do it this time. It's getting an empty string, in the fifth column, which is still valid cell content as far as MS Excel is concerned. That's correct. MS Excel treats an empty string, or a null as data in a cell, even though it looks empty to a human, it isn't empty to excel. As for when `getHighestColumn()` and `getHighestDataColumn()` return different results... load your file and test the returned values of both functions, then add new data in cell `Z1` show the return values from both functions again\r\n. Another difference is that a cell in a loaded excel file can have styling, or be referenced in a print range or similar, but still be truly empty.... `getHighestColumn()` and `getHighestDataColumn()` can return different results in this case as well, because `getHighestColumn()` includes the reference, while `getHighestDataColumn()` ignores references, and looks to see if the cell actually exists. It's a limitation at the moment... it' a fairly intensive and slow piece of processing to check and do those updates on the same worksheet, so a conscious decision was made not to do so on all worksheets when it would really slow performance. If you put 2 dots (decimal points) in a value, then it can only be a string; so MS Excel will format it `General` (the default cell formatting for MS Excel) as a string. With a single dot (decimal point), PHPExcel will treat it as a number, and set the datatype accordingly; and MS Excel will see it as a floating point number, and MS Excel `General` formatting rules will format it using scientific formatting if it is greater than a standard 32-bit integer size, treating it as a float.\r\n\r\nIf you want to force string formatting, then you need to do so explicitly, either by setting it as a string datatype using `setCellValueExplicit()` to force it to be set as a string; or set a format mask other than `General` such as `0.00`\r\n\r\ne.g.\r\n\r\n```\r\n$objPHPExcel->getActiveSheet()->getStyle('A9')\r\n    ->getNumberFormat()\r\n    ->setFormatCode(\r\n        '0'\r\n    );\r\n```. Are you using PHPExcel's HTML Writer at all? If so, how?. Why don't you tell the HTML Writer to write all sheets in one output:\r\n```php\r\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'HTML');\r\n$objWriter->writeAllSheets();\r\n$objWriter->save('php://output');\r\n```\r\nrather than looping through the individual sheets, instantiating a new writer for each; that's adding quite a lot of overhead; and `writeAllSheets()` also integrates the different sheet outputs. Yes, it will write them all to one page, but in an integrated manner (tabbed, like MS Excel shows them); unlike writing each sheet individually in a loop, which display them one after the other..... but why don't you simply try it for yourself and see if it's what you want.. Personally, I'd create my own custom writer based on the HTML Writer (perhaps extending it, so you still have access to the core logic), rather than editing the existing HTML Writer. There's a section of the [PHPExcel Docs ](https://github.com/PHPOffice/PHPExcel/blob/develop/Documentation/markdown/Overview/08-Recipes.md#setting-a-columns-width)that tries to explain the units used for measurements. The formal standard for OfficeOpenXML reserves all number format Ids below 164 for Microsoft use only, but not all of those are used, and there are some third party writers that abuse this and use those \"gaps\"... this is already covered in develop branch code, where the lines you quote have been replaced by\r\n\r\n```\r\n// We shouldn't override any of the built-in MS Excel values (values below id 164)\r\n//  But there's a lot of naughty homebrew xlsx writers that do use \"reserved\" id values that aren't actually used\r\n//  So we make allowance for them rather than lose formatting masks\r\nif ((int)$xf[\"numFmtId\"] < 164 && PHPExcel_Style_NumberFormat::builtInFormatCode((int)$xf[\"numFmtId\"]) !== '') {\r\n    $numFmt = PHPExcel_Style_NumberFormat::builtInFormatCode((int)$xf[\"numFmtId\"]);\r\n}\r\n```. Entirely possible.... `getOldCalculatedValue()` isn't guaranteed. It's an old value that is stored in the spreadsheet file that you've loaded, but can be disabled from within MS Excel, or erroneous if a formula requires access to external files that aren't accessible, or the file has been opened and recalculated using other programs.\r\n\r\nBut how can you possibly expect us to know whether either figure is right or wrong without providing details of the formula, values, etc?. MS EXcel doesn't support dates prior to 1st January 1900 (or 1904 if using the Excel for Mac Calendar). If you have a date in an MS Excel spreadsheet that is prior to that base date; then it isn't a date but a string. And that is still the case. PHPExcel does not support form elements. `Render path: ../../lib/phpexcel/PHPExcel/Writer/PDF/mPDF` isn't pointing to your instance of mPDF.... it's pointing to the PHPExcel wrapper for mPDF..... you need to have mPDF itself installed on your server, and use the `$rendererLibraryPath` argument for `PHPExcel_Settings::setPdfRenderer()` to tell PHPExcel where the library has been installed. PHPExcel is quite capable of finding its own mPDF wrapper, but cannot guess where you have installed the actual mPDF library. XLS files don't have a line ending format, so PHPExcel doesn't have any option to change something that doesn't exist.... nor can I understand what your actual problem is, because you're original question seems to be missing some information, such as what PHPExcel actually creates compared with what you want to create. A sample csv file that causes your problem so we can try to replicate it would also help. Where do you see the line endings in the binary xls file? It's a binary format, not a flat file format with line endings, so what Notepad++ says should be completely irrelevant.... xls files are never intended to be displayed in a text editor, but in an application that actually parses the binary format.\r\n\r\nI'm still completely unclear about your problem.... what happens when you open this XLS file in MS Excel, or in OpenOffice? Does it display correctly there?. This is quite explicitly [stated in the documentation](https://github.com/PHPOffice/PHPExcel/blob/develop/Documentation/markdown/Overview/08-Recipes.md#write-a-formula-into-a-cell); and PHPExcel has no way of knowing if you are German or English or Japanese. Does xls itself have emoji support; if not, then we cannot implement it in PHPExcel. ",
    "Progi1984": "Close with this commit e1104f18627bbbc4e9ae24bc52dd2ebfbf468c98\n. Which code do you use ? The branch master or develop ?\n. I pull the last version of the branch develop.\nI try Tests/10autofilter.php.\nI test 10autofilter.xls just generated with Office2007 & LibreOffice, and i have the autofilter for the four columns.\n. Have you tried that ?\n- Click on this link : https://github.com/PHPOffice/PHPExcel/blob/master/Documentation/PHPExcel%20User%20Documentation%20-%20Reading%20Spreadsheet%20Files.doc\n- Click on \"Raw\"\n- Download it (Not open from the navigator)\n- Normally, it's a DOC File\n. I think... First step, integration in PHPExcel core... and after Excel2007 for @MarkBaker & Excel5 for me...\n\nWhat do you think about that ?\n. @MarkBaker, I see your branche \"autofilter\"...\n\nI open a bug for \"autofiltering in the Excel5 Reader\". I will work on this when i have some time.\n\nWhat does it lack ? Expressions filters ?\n. Some start...\n\nhttp://phpoffice.github.com/PHPExcel/\n. A renew has been done : http://phpoffice.github.com\n\nWhat do you think about it @MarkBaker and @maartenba ?\n. Now, it's good... The website is coming back (http://phpoffice.github.com/).\n\nAll news are in... (a long work ;))\n\nI use Twitter Bootstrap for this...\n\nIf you are agree with that, i clean Codeplex pages and redirect it to this website.\n. @MarkBaker Have we got an sample with sheet view ?\n. Help for understand this feature : http://office.microsoft.com/en-us/excel-help/use-page-layout-view-to-fine-tune-pages-before-printing-HA010021563.aspx\n. May be have you a sample for using this phar after generation ?\n. So simply, i love it...\n. Tip for me for understanding what is a shared workbook : http://www.wikihow.com/Unshare-an-Excel-Workbook\n. revisionHeaders.xml :\nhttp://msdn.microsoft.com/en-us/library/dd924046%28v=office.12%29.aspx\nrevisionLog1.xml\nhttp://msdn.microsoft.com/en-us/library/dd947963%28v=office.12%29\nuserNames.xml\nhttp://msdn.microsoft.com/en-us/library/dd926716%28v=office.12%29\n. Which writer do you use ?\n. We are opened to pull requests so don't hesitate to help us ;)/\n. @MarkBaker Is it possible to not include help for JAMA ?\n. @maartenba But with PHPDoc, normally, we have a class hierarchy (like that : http://demo.phpdoc.org/Responsive/graph_class.html) which can replace that ?\n. @MarkBaker : Are they uptodate ?\n. In the directory, we can include a phpdoc of PHPExcel correctly generated with graphviz (the render is perfect, i try it this morning)\n\nOR\n\nWe can create a branch (or a repo) dedicated to the doc (including Users documentation and PHPDoc for developpers) which permit to answer in part to the bug GH-#1\n. @MarkBaker In this zip (http://dl.free.fr/vqf8kX2if), there is the generation of PHPExcel's documentation with PHPDoc.\n\nYou can see the generated graphviz.\n. @MarkBaker Another idea : I create GitHub Pages for managing pages for PHPExcel (GH #17) which create a branch gh-pages... and in a directory of this branch, we store a generation of PHPExcel documenation with PHPDoc...\n\nThis permits developers to see it online easily and solve in part the GH #1\n. With commits f2803e8 and 9907ef9, @MarkBaker has cleaned JAMA.\n. Could we move documentation in phpoffice.github.com repo ?\n. @MarkBaker & @maartenba : What do you think about putting documentation in a dedicated branch, or a dedicated repo ? And why not in repo https://github.com/PHPOffice/phpoffice.github.com which manages http://phpoffice.github.com/ ?\n. @maartenba for which one ? :stuck_out_tongue_winking_eye: \n. Maybe a method getVersion() in PHPExcel class will be interesting ?\n. An example code ?\n. Interesting things are :\n- Declaration of compatibility_mode() : https://github.com/jmcnamara/spreadsheet-writeexcel/blob/master/lib/Spreadsheet/WriteExcel/Workbook.pm#L742\n- Use of $self->{_compatibility} : https://github.com/jmcnamara/spreadsheet-writeexcel/search?q=_compatibility\n. The good one is \"phpoffice/phpexcel\" (https://packagist.org/packages/phpoffice/phpexcel), linked to this repo. And connected to another projects : https://packagist.org/packages/phpoffice/.\n. Have you got a sample code (and a sample file)  for test ?\n. Could you post the code for test, please ?\n. :+1: \n. @PowerKiKi I currently work on branch 1.9 :\n- PHPCS tests :\n  - 1.8 : 675 Errors\n  - 1.9 : 0 Errors\n- PHPUnit tests \n  - 1.8 : Tests: 3833, Assertions: 4116, Errors: 1, Failures: 147\n  - 1.9 : Tests: 3826, Assertions: 4115, Failures: 107\n\nSo If you want to share some pull requests, please do it on 1.9 branch with fix for each failure.\nThanks\n. @PowerKiKi Thanks, we are always open :)\n. Sample base : \n- https://svn.apache.org/repos/asf/poi/trunk/src/examples/src/org/apache/poi/xssf/usermodel/examples/CreatePivotTable.java\n- https://dzone.com/articles/create-pivot-tables-pivot\n. Have you got a sample code for testing ?\n. Which file do you include once ?\n. @MarkBaker So ?\n. @MarkBaker A beautiful wish. So we wait the release of Pascal Martin's stats... and may be PHPExcel2 will arrive :)\n. @MarkBaker Pascal MARTIN has released its stats (10/2014) : http://blog.pascal-martin.fr/post/statistiques-versions-php-2014-10 (in french for the moment).\n. @MarkBaker And the version in english : http://blog.pascal-martin.fr/post/php-versions-stats-2014-10-en\n. @MarkBaker PHPCS fixes :) And some PHPUnit fixes done too...\n\nI work now on fixing PHPUnit unit tests:)\n\n> Tests: 3826, Assertions: 4112, Errors: 3, Failures: 140.\n. > Tests: 3826, Assertions: 4115, Failures: 113.\n. > Tests: 3826, Assertions: 4115, Failures: 110.\n. Implemented in 1.9 branch\n. Ever fixed\n. @Synchro Done\n. You can test on PHPOffice/PhpSpreadsheet which is the future of PHPExcel.\n. That means there are not enough pull requests. \ud83d\ude09\n. @ValentinNikolaev Could you add some unit tests ?\n. @ValentinNikolaev All your improvements\n\nLook at PHPPresentation unit tests for testing XML render\n. Close with this commit e1104f18627bbbc4e9ae24bc52dd2ebfbf468c98\n. Which code do you use ? The branch master or develop ?\n. I pull the last version of the branch develop.\nI try Tests/10autofilter.php.\nI test 10autofilter.xls just generated with Office2007 & LibreOffice, and i have the autofilter for the four columns.\n. Have you tried that ?\n- Click on this link : https://github.com/PHPOffice/PHPExcel/blob/master/Documentation/PHPExcel%20User%20Documentation%20-%20Reading%20Spreadsheet%20Files.doc\n- Click on \"Raw\"\n- Download it (Not open from the navigator)\n- Normally, it's a DOC File\n. I think... First step, integration in PHPExcel core... and after Excel2007 for @MarkBaker & Excel5 for me...\n\nWhat do you think about that ?\n. @MarkBaker, I see your branche \"autofilter\"...\n\nI open a bug for \"autofiltering in the Excel5 Reader\". I will work on this when i have some time.\n\nWhat does it lack ? Expressions filters ?\n. Some start...\n\nhttp://phpoffice.github.com/PHPExcel/\n. A renew has been done : http://phpoffice.github.com\n\nWhat do you think about it @MarkBaker and @maartenba ?\n. Now, it's good... The website is coming back (http://phpoffice.github.com/).\n\nAll news are in... (a long work ;))\n\nI use Twitter Bootstrap for this...\n\nIf you are agree with that, i clean Codeplex pages and redirect it to this website.\n. @MarkBaker Have we got an sample with sheet view ?\n. Help for understand this feature : http://office.microsoft.com/en-us/excel-help/use-page-layout-view-to-fine-tune-pages-before-printing-HA010021563.aspx\n. May be have you a sample for using this phar after generation ?\n. So simply, i love it...\n. Tip for me for understanding what is a shared workbook : http://www.wikihow.com/Unshare-an-Excel-Workbook\n. revisionHeaders.xml :\nhttp://msdn.microsoft.com/en-us/library/dd924046%28v=office.12%29.aspx\nrevisionLog1.xml\nhttp://msdn.microsoft.com/en-us/library/dd947963%28v=office.12%29\nuserNames.xml\nhttp://msdn.microsoft.com/en-us/library/dd926716%28v=office.12%29\n. Which writer do you use ?\n. We are opened to pull requests so don't hesitate to help us ;)/\n. @MarkBaker Is it possible to not include help for JAMA ?\n. @maartenba But with PHPDoc, normally, we have a class hierarchy (like that : http://demo.phpdoc.org/Responsive/graph_class.html) which can replace that ?\n. @MarkBaker : Are they uptodate ?\n. In the directory, we can include a phpdoc of PHPExcel correctly generated with graphviz (the render is perfect, i try it this morning)\n\nOR\n\nWe can create a branch (or a repo) dedicated to the doc (including Users documentation and PHPDoc for developpers) which permit to answer in part to the bug GH-#1\n. @MarkBaker In this zip (http://dl.free.fr/vqf8kX2if), there is the generation of PHPExcel's documentation with PHPDoc.\n\nYou can see the generated graphviz.\n. @MarkBaker Another idea : I create GitHub Pages for managing pages for PHPExcel (GH #17) which create a branch gh-pages... and in a directory of this branch, we store a generation of PHPExcel documenation with PHPDoc...\n\nThis permits developers to see it online easily and solve in part the GH #1\n. With commits f2803e8 and 9907ef9, @MarkBaker has cleaned JAMA.\n. Could we move documentation in phpoffice.github.com repo ?\n. @MarkBaker & @maartenba : What do you think about putting documentation in a dedicated branch, or a dedicated repo ? And why not in repo https://github.com/PHPOffice/phpoffice.github.com which manages http://phpoffice.github.com/ ?\n. @maartenba for which one ? :stuck_out_tongue_winking_eye: \n. Maybe a method getVersion() in PHPExcel class will be interesting ?\n. An example code ?\n. Interesting things are :\n- Declaration of compatibility_mode() : https://github.com/jmcnamara/spreadsheet-writeexcel/blob/master/lib/Spreadsheet/WriteExcel/Workbook.pm#L742\n- Use of $self->{_compatibility} : https://github.com/jmcnamara/spreadsheet-writeexcel/search?q=_compatibility\n. The good one is \"phpoffice/phpexcel\" (https://packagist.org/packages/phpoffice/phpexcel), linked to this repo. And connected to another projects : https://packagist.org/packages/phpoffice/.\n. Have you got a sample code (and a sample file)  for test ?\n. Could you post the code for test, please ?\n. :+1: \n. @PowerKiKi I currently work on branch 1.9 :\n- PHPCS tests :\n  - 1.8 : 675 Errors\n  - 1.9 : 0 Errors\n- PHPUnit tests \n  - 1.8 : Tests: 3833, Assertions: 4116, Errors: 1, Failures: 147\n  - 1.9 : Tests: 3826, Assertions: 4115, Failures: 107\n\nSo If you want to share some pull requests, please do it on 1.9 branch with fix for each failure.\nThanks\n. @PowerKiKi Thanks, we are always open :)\n. Sample base : \n- https://svn.apache.org/repos/asf/poi/trunk/src/examples/src/org/apache/poi/xssf/usermodel/examples/CreatePivotTable.java\n- https://dzone.com/articles/create-pivot-tables-pivot\n. Have you got a sample code for testing ?\n. Which file do you include once ?\n. @MarkBaker So ?\n. @MarkBaker A beautiful wish. So we wait the release of Pascal Martin's stats... and may be PHPExcel2 will arrive :)\n. @MarkBaker Pascal MARTIN has released its stats (10/2014) : http://blog.pascal-martin.fr/post/statistiques-versions-php-2014-10 (in french for the moment).\n. @MarkBaker And the version in english : http://blog.pascal-martin.fr/post/php-versions-stats-2014-10-en\n. @MarkBaker PHPCS fixes :) And some PHPUnit fixes done too...\n\nI work now on fixing PHPUnit unit tests:)\n\n> Tests: 3826, Assertions: 4112, Errors: 3, Failures: 140.\n. > Tests: 3826, Assertions: 4115, Failures: 113.\n. > Tests: 3826, Assertions: 4115, Failures: 110.\n. Implemented in 1.9 branch\n. Ever fixed\n. @Synchro Done\n. You can test on PHPOffice/PhpSpreadsheet which is the future of PHPExcel.\n. That means there are not enough pull requests. \ud83d\ude09\n. @ValentinNikolaev Could you add some unit tests ?\n. @ValentinNikolaev All your improvements\n\nLook at PHPPresentation unit tests for testing XML render\n. ",
    "mzeddd": "Looks like AutoFilter for Excel5 is not working.\nThe same code but with Excel2007 Writer works fine.\n\nWhat could be wrong?\n. I'm trying Tests/10autofilter.php with no modifications.\nI got everything from here: https://github.com/PHPOffice/PHPExcel/zipball/develop 3 days ago so the AutoFilter support should be in.\n. I tested on Office2007 just now and it looks fine but on Office2003 does not.\n\nI think would be good to state this limitation in changelog.txt\n. Thanks for the answer.\nHope this will be added into TODO list.\n. Yes, I found this after I posted this question :(\nSorry for false alarm.\n. Still the same problem even with 0.1 instead of '0.1'\n. It is Excel5 Writer with conditional formating\n\nSorry, could not provide working example right now.\n\nHere is the code from examples that I'm using in my file:\n\n```\n$objConditional1 = new PHPExcel_Style_Conditional();\n$objConditional1->setConditionType(PHPExcel_Style_Conditional::CONDITION_CELLIS)\n                ->setOperatorType(PHPExcel_Style_Conditional::OPERATOR_BETWEEN)\n                ->addCondition(0)\n                ->addCondition(50);\n$objConditional1->getStyle()->getFont()->getColor()->setARGB('FF993300');\n$objConditional1->getStyle()->getFont()->setSize(8);\n```\n. Can you try to save page using CURL as I did?\n. Looks like AutoFilter for Excel5 is not working.\nThe same code but with Excel2007 Writer works fine.\n\nWhat could be wrong?\n. I'm trying Tests/10autofilter.php with no modifications.\nI got everything from here: https://github.com/PHPOffice/PHPExcel/zipball/develop 3 days ago so the AutoFilter support should be in.\n. I tested on Office2007 just now and it looks fine but on Office2003 does not.\n\nI think would be good to state this limitation in changelog.txt\n. Thanks for the answer.\nHope this will be added into TODO list.\n. Yes, I found this after I posted this question :(\nSorry for false alarm.\n. Still the same problem even with 0.1 instead of '0.1'\n. It is Excel5 Writer with conditional formating\n\nSorry, could not provide working example right now.\n\nHere is the code from examples that I'm using in my file:\n\n```\n$objConditional1 = new PHPExcel_Style_Conditional();\n$objConditional1->setConditionType(PHPExcel_Style_Conditional::CONDITION_CELLIS)\n                ->setOperatorType(PHPExcel_Style_Conditional::OPERATOR_BETWEEN)\n                ->addCondition(0)\n                ->addCondition(50);\n$objConditional1->getStyle()->getFont()->getColor()->setARGB('FF993300');\n$objConditional1->getStyle()->getFont()->setSize(8);\n```\n. Can you try to save page using CURL as I did?\n. ",
    "preichow": "Looks like it works fine now.  Thank you!\n. Looks like it works fine now.  Thank you!\n. ",
    "dostmann": "Is there any progress in this issue? Would be great... . Is there any progress in this issue? Would be great... . ",
    "schir1964": "I figured as much, but I wanted to make sure the issue was migrated over \nto the git-hub repository.\n- Christopher Mullins\n\nOn 7/23/2012 5:40 PM, Mark Baker wrote:\n\n> Not forgotten, but I'm trying to work out a good generic way of implementing.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/PHPOffice/PHPExcel/issues/14#issuecomment-7192337\n. I know what you mean. When I initially researched it myself I also realized that the main hurdle is how to identify the mask as a phone number mask vs another type of number mask and keep the code generic. Thus my initial hack code example for the specific case I ran across.\n\nGood luck! (8^D)\n- Christopher Mullins\n. Mark, I think you can close this. Unless you have solution ready to drop in.\n. From the PHP Manual:\n\nint strpos ( string $haystack , mixed $needle [, int $offset = 0 ] )\n\nThe order is correct for the search.\n\nThe command strpos($data, '<')  searches for the character '<' in the string $data which is the HTML code. Some of the commands in PHP flip flop the order when involving a haystack so that may be causing some confusion. I tend to double check the manual just because of this inconsistency in order.\n- Christopher Mullins\n. I figured as much, but I wanted to make sure the issue was migrated over \nto the git-hub repository.\n- Christopher Mullins\n\nOn 7/23/2012 5:40 PM, Mark Baker wrote:\n\n> Not forgotten, but I'm trying to work out a good generic way of implementing.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/PHPOffice/PHPExcel/issues/14#issuecomment-7192337\n. I know what you mean. When I initially researched it myself I also realized that the main hurdle is how to identify the mask as a phone number mask vs another type of number mask and keep the code generic. Thus my initial hack code example for the specific case I ran across.\n\nGood luck! (8^D)\n- Christopher Mullins\n. Mark, I think you can close this. Unless you have solution ready to drop in.\n. From the PHP Manual:\n\nint strpos ( string $haystack , mixed $needle [, int $offset = 0 ] )\n\nThe order is correct for the search.\n\nThe command strpos($data, '<')  searches for the character '<' in the string $data which is the HTML code. Some of the commands in PHP flip flop the order when involving a haystack so that may be causing some confusion. I tend to double check the manual just because of this inconsistency in order.\n- Christopher Mullins\n. ",
    "g1smd": "If you would like detailed validation and formatting for UK telephone numbers, you are welcome to borrow code from:  https://github.com/g1smd/Drupal-CCK-Phone-GB/blob/master/phone.gb.inc\n. If you would like detailed validation and formatting for UK telephone numbers, you are welcome to borrow code from:  https://github.com/g1smd/Drupal-CCK-Phone-GB/blob/master/phone.gb.inc\n. ",
    "ssanders": "I think if it will read format masks, it should read them all, and it should read merged cells too.\n\nIf the confusion to resolve is with what value Excel shows vs. what it \"really\" is, these would be similarly confusing.\n. So I tried older commits until one worked again which is dae529615ef3933af641910b54b68bc4473d5e7c.\n. Yes.\n. It seems fixed here: https://github.com/PHPOffice/PHPExcel/pull/29\n\nI tried opening XLS, XLSX, and ODS and saving to XLS or XLSX.\n. By \"break,\" I mean that if I use a cell iterator on a valid ODS, it finds no cell data at all.\n. I tried this as applyFromArray() is so slow... but this is slow too. Hmm...\n. Somehow `RowCellIterator.php` was missing? Replacing it works. Thanks.\n. I think if it will read format masks, it should read them all, and it should read merged cells too.\n\nIf the confusion to resolve is with what value Excel shows vs. what it \"really\" is, these would be similarly confusing.\n. So I tried older commits until one worked again which is dae529615ef3933af641910b54b68bc4473d5e7c.\n. Yes.\n. It seems fixed here: https://github.com/PHPOffice/PHPExcel/pull/29\n\nI tried opening XLS, XLSX, and ODS and saving to XLS or XLSX.\n. By \"break,\" I mean that if I use a cell iterator on a valid ODS, it finds no cell data at all.\n. I tried this as applyFromArray() is so slow... but this is slow too. Hmm...\n. Somehow `RowCellIterator.php` was missing? Replacing it works. Thanks.\n. ",
    "ioleo": "@MarkBaker I think that cell merges are diffrent from other styles (like border or background colors). Cell merge information is more about data structure than style. IMO **in read only mode PHPExcel merge groups should be avaliable**, _but formating, styles, fonts, borders, and other stuff like that not_.\n\nE.g. a common pattern is a table like `Product sales by Regions`:\n\n``` yaml\n*| A          | B           | C           | D           | E           |\n-+------------+-------------+-------------+-------------+-------------+\n1| Region     | Product     | 2013/01     | 2013/02     | 2013/03     |\n-+------------+-------------+-------------+-------------+-------------+\n2| North      | Apple       | 50          | 100         | 20          |\n-|            |-------------+-------------+-------------+-------------|\n3|            | Banana      | 150         | 120         | 30          |\n-|            |-------------+-------------+-------------+-------------|\n4|            | Orange      | 10          | 72          | 130         |\n-+------------+-------------+-------------+-------------+-------------+\n5| South      | Apple       | 30          | 75          | 280         |\n-|            |-------------+-------------+-------------+-------------|\n6|            | Banana      | 25          | 110         | 15          |\n-|            |-------------+-------------+-------------+-------------|\n7|            | Orange      | 16          | 92          | 110         |\n-+------------+-------------+-------------+-------------+-------------+\n```\n\nTo read such data, you have to first:\n- skip/ignore the header row\n- get all merged cell ranges (`A2:A4`, `A5:A7`)\n- for each range\n  - read first row and column A (`A2`, `A5`) value and use it as Region name\n  - read all rows (in range) and column B (`B2`, `B3`, `B4` for first range and `B5`, `B6`, `B7` for second range) as products\n  - read all rows (in range) and column C, D, E as values for months\n\nRight now, to read such structured data we have to use `setReadDataOnly(false)`, which increases memory usage.\n. :+1: for styleFilter idea\n. @MarkBaker I think that cell merges are diffrent from other styles (like border or background colors). Cell merge information is more about data structure than style. IMO **in read only mode PHPExcel merge groups should be avaliable**, _but formating, styles, fonts, borders, and other stuff like that not_.\n\nE.g. a common pattern is a table like `Product sales by Regions`:\n\n``` yaml\n*| A          | B           | C           | D           | E           |\n-+------------+-------------+-------------+-------------+-------------+\n1| Region     | Product     | 2013/01     | 2013/02     | 2013/03     |\n-+------------+-------------+-------------+-------------+-------------+\n2| North      | Apple       | 50          | 100         | 20          |\n-|            |-------------+-------------+-------------+-------------|\n3|            | Banana      | 150         | 120         | 30          |\n-|            |-------------+-------------+-------------+-------------|\n4|            | Orange      | 10          | 72          | 130         |\n-+------------+-------------+-------------+-------------+-------------+\n5| South      | Apple       | 30          | 75          | 280         |\n-|            |-------------+-------------+-------------+-------------|\n6|            | Banana      | 25          | 110         | 15          |\n-|            |-------------+-------------+-------------+-------------|\n7|            | Orange      | 16          | 92          | 110         |\n-+------------+-------------+-------------+-------------+-------------+\n```\n\nTo read such data, you have to first:\n- skip/ignore the header row\n- get all merged cell ranges (`A2:A4`, `A5:A7`)\n- for each range\n  - read first row and column A (`A2`, `A5`) value and use it as Region name\n  - read all rows (in range) and column B (`B2`, `B3`, `B4` for first range and `B5`, `B6`, `B7` for second range) as products\n  - read all rows (in range) and column C, D, E as values for months\n\nRight now, to read such structured data we have to use `setReadDataOnly(false)`, which increases memory usage.\n. :+1: for styleFilter idea\n. ",
    "sergionalin": "For what's worth, I totally agree with MarkBaker (& loostro).\nTo keep backward compatibility with the current API and to solve these what's in and what's out issues why not implement a new filtering method like:\n\nsetReadStyleInfoFilter($styleFilterArray)\n\nletting users decide what styles they care about and what they don't?\nIMHO, this would be a valuable addition. It would help speed up the read process and avoid out of memory issues caused by humongous styles when dealing with user-uploaded Excel files.\n. For what's worth, I totally agree with MarkBaker (& loostro).\nTo keep backward compatibility with the current API and to solve these what's in and what's out issues why not implement a new filtering method like:\n\nsetReadStyleInfoFilter($styleFilterArray)\n\nletting users decide what styles they care about and what they don't?\nIMHO, this would be a valuable addition. It would help speed up the read process and avoid out of memory issues caused by humongous styles when dealing with user-uploaded Excel files.\n. ",
    "ragulka": "Thanks, that makes sense.\n. Thanks, that makes sense.\n. ",
    "maartenba": "Sweeet!\n. Fixed\n. The old files can go, Documentation/assets may contain some that we want to keep (basically architectural schemas)\n. Indeed. In that case, I think it's safe to remove those files\n. Sounds good\n. Both :-)\n. $objPHPExcel = PHPExcel_IOFactory::load($file) should do the trick\n. No worries. Can you prepare a release with this one in somewhere in the next days/weeks?\n. The problem is that unserialize() gets called by WordPress normally. If you can put arbitrary stuff in wp_options then you can use any PHP object injection vulnerabilitie  Also, another plugin uses unserialize() in a bad way then you can also use PHP object injection vulnerabilities.\n. Yeah it's a double-edged sword. I agree we should somehow safeguard, but I am wary about the approach. Perhaps a constant specifing if files should be deleted or not can be added, where we give the user a choice to let us do the cleanup or cleanup manually.\n\n@PHPOffice/owners any suggestions?\n. Sweeet!\n. Fixed\n. The old files can go, Documentation/assets may contain some that we want to keep (basically architectural schemas)\n. Indeed. In that case, I think it's safe to remove those files\n. Sounds good\n. Both :-)\n. $objPHPExcel = PHPExcel_IOFactory::load($file) should do the trick\n. No worries. Can you prepare a release with this one in somewhere in the next days/weeks?\n. The problem is that unserialize() gets called by WordPress normally. If you can put arbitrary stuff in wp_options then you can use any PHP object injection vulnerabilitie  Also, another plugin uses unserialize() in a bad way then you can also use PHP object injection vulnerabilities.\n. Yeah it's a double-edged sword. I agree we should somehow safeguard, but I am wary about the approach. Perhaps a constant specifing if files should be deleted or not can be added, where we give the user a choice to let us do the cleanup or cleanup manually.\n\n@PHPOffice/owners any suggestions?\n. ",
    "infojunkie": "Right, so the history wasn't imported from the previous VCS. Got it, thanks!\n. Thanks. The version I downloaded from GitHub (tagged 1.7.8 Production Release) returns ##VERSION## ##DATE##. Is this intended?\n. Yes, I agree that a method that's independent of spreadsheet functions would make more sense. But even with \n\n``` php\nPHPExcel_Calculation_Functions::VERSION()\n```\n\nwhy is the version coming back as tokens?\n. I see, thanks. And I also found that the package at http://phpexcel.codeplex.com/ does contain proper version info. I guess it would be useful to mention this in the docs here on github - or to provide built packages right here.\n. Right, so the history wasn't imported from the previous VCS. Got it, thanks!\n. Thanks. The version I downloaded from GitHub (tagged 1.7.8 Production Release) returns ##VERSION## ##DATE##. Is this intended?\n. Yes, I agree that a method that's independent of spreadsheet functions would make more sense. But even with \n\n``` php\nPHPExcel_Calculation_Functions::VERSION()\n```\n\nwhy is the version coming back as tokens?\n. I see, thanks. And I also found that the package at http://phpexcel.codeplex.com/ does contain proper version info. I guess it would be useful to mention this in the docs here on github - or to provide built packages right here.\n. ",
    "karak": "@Progi1984\nI reinforced this feature with pull request #85\nWill you review my fix?\n. I had met this error too.\nAnd I concluded it was bug the way to adjust active sheet index in removeSheetByIndex() then.\nI hope my fix could also help you.\n\nPresent:\n        // this condition misses when active sheet is not at last\n        if (($this->_activeSheetIndex >= $pIndex) &&\n            ($pIndex > count($this->_workSheetCollection) - 1)) {\n            --$this->_activeSheetIndex;\n        }\n\nFixed:\n        if (($this->_activeSheetIndex >= $pIndex) &&\n            ($this->_activeSheetIndex > 0))  {\n            --$this->_activeSheetIndex;\n        }\n. Sorry to have miss the point of your message.\n. In my use case, this fix causes memory exhaust.\nCombined use is safe like following:\n\n```\n    if ($this->_parent->cellXfExists($pCellStyle)) {\n        // there is already this cell Xf in our collection\n        // note that check by reference is much faster than by hash code\n        $xfIndex = $pCellStyle->getIndex();\n    } else if ($existingStyle = $this->_parent->getCellXfByHashCode($pCellStyle->getHashCode())) {\n        // there is already such cell Xf in our collection\n        $xfIndex = $existingStyle->getIndex();\n    } else {\n        // we don't have such a cell Xf, need to add\n        $workbook->addCellXf($pCellStyle);\n        $xfIndex = $pCellStyle->getIndex();\n    }\n```\n. My use is 'row copy' like following:\n1. get one style from cell 'A1' and duplicate to 'A2:A20'\n2. get another style from cell 'B1' and duplicate to B2:B20'\n3. and so forth.\n\nActually I'm also confused that your fix has introduced lack of consistency in equality comparison.\n. @MarkBaker \n\nI adopted an altenative way to boost **applyFromArray()**,\n    by using \"rough\" equality checking before execute <tt>getHashCode()</tt>.\n\nReplace <tt>getHashCode()</tt> by following <tt>getEqualCellXf()</tt>.\nIt could give _10x_ speed to the function statically; it would depend on your use of course.\n\n```\n/**\n * faster version of PHPExcel_Workbook::getCellXfByHashCode() in use case in this class\n * @param PHPExcel $workbook\n */\nprivate static function getEqualCellXf($workbook, $other)\n{\n    $hashCode = null;\n    foreach ($workbook->getCellXfCollection() as $cellXf) {\n        if ($cellXf->canBeEqual($other)) {\n            if (is_null($hashCode)){\n                $hashCode = $other->getHashCode();\n            }\n\n            if ($cellXf->getHashCode() == $hashCode) {\n                return $cellXf;\n            }\n        }\n    }\n    return false;\n}\n\n/**\n * rough equality check in order to reject in shorter time.\n */\nprivate function canBeEqual($other) {\n    //equality test by sampling -- frequently changed\n    return $this->_fill->getFillType() === $other->_fill->getFillType() &&\n           $this->_fill->getStartColor() === $other->_fill->getStartColor() &&\n           $this->_font->getColor() === $other->_font->getColor() &&\n           $this->_borders->getLeft()->getStyle() === $other->_borders->getLeft()->getStyle() &&\n           $this->_borders->getTop()->getStyle() === $other->_borders->getTop()->getStyle() &&\n           $this->_borders->getRight()->getStyle() === $other->_borders->getRight()->getStyle() &&\n           $this->_borders->getBottom()->getStyle() === $other->_borders->getBottom()->getStyle() &&\n           $this->_alignment->getHorizontal() === $other->_alignment->getHorizontal() &&\n           $this->_alignment->getVertical() === $other->_alignment->getVertical();\n}\n```\n. > The answer was in the first line of duplicateStyle(). See #101.\n\nThank you for your fix.\nI found \"shared component\" is used in my case as you indicated.\n. @Progi1984\nI reinforced this feature with pull request #85\nWill you review my fix?\n. I had met this error too.\nAnd I concluded it was bug the way to adjust active sheet index in removeSheetByIndex() then.\nI hope my fix could also help you.\n\nPresent:\n        // this condition misses when active sheet is not at last\n        if (($this->_activeSheetIndex >= $pIndex) &&\n            ($pIndex > count($this->_workSheetCollection) - 1)) {\n            --$this->_activeSheetIndex;\n        }\n\nFixed:\n        if (($this->_activeSheetIndex >= $pIndex) &&\n            ($this->_activeSheetIndex > 0))  {\n            --$this->_activeSheetIndex;\n        }\n. Sorry to have miss the point of your message.\n. In my use case, this fix causes memory exhaust.\nCombined use is safe like following:\n\n```\n    if ($this->_parent->cellXfExists($pCellStyle)) {\n        // there is already this cell Xf in our collection\n        // note that check by reference is much faster than by hash code\n        $xfIndex = $pCellStyle->getIndex();\n    } else if ($existingStyle = $this->_parent->getCellXfByHashCode($pCellStyle->getHashCode())) {\n        // there is already such cell Xf in our collection\n        $xfIndex = $existingStyle->getIndex();\n    } else {\n        // we don't have such a cell Xf, need to add\n        $workbook->addCellXf($pCellStyle);\n        $xfIndex = $pCellStyle->getIndex();\n    }\n```\n. My use is 'row copy' like following:\n1. get one style from cell 'A1' and duplicate to 'A2:A20'\n2. get another style from cell 'B1' and duplicate to B2:B20'\n3. and so forth.\n\nActually I'm also confused that your fix has introduced lack of consistency in equality comparison.\n. @MarkBaker \n\nI adopted an altenative way to boost **applyFromArray()**,\n    by using \"rough\" equality checking before execute <tt>getHashCode()</tt>.\n\nReplace <tt>getHashCode()</tt> by following <tt>getEqualCellXf()</tt>.\nIt could give _10x_ speed to the function statically; it would depend on your use of course.\n\n```\n/**\n * faster version of PHPExcel_Workbook::getCellXfByHashCode() in use case in this class\n * @param PHPExcel $workbook\n */\nprivate static function getEqualCellXf($workbook, $other)\n{\n    $hashCode = null;\n    foreach ($workbook->getCellXfCollection() as $cellXf) {\n        if ($cellXf->canBeEqual($other)) {\n            if (is_null($hashCode)){\n                $hashCode = $other->getHashCode();\n            }\n\n            if ($cellXf->getHashCode() == $hashCode) {\n                return $cellXf;\n            }\n        }\n    }\n    return false;\n}\n\n/**\n * rough equality check in order to reject in shorter time.\n */\nprivate function canBeEqual($other) {\n    //equality test by sampling -- frequently changed\n    return $this->_fill->getFillType() === $other->_fill->getFillType() &&\n           $this->_fill->getStartColor() === $other->_fill->getStartColor() &&\n           $this->_font->getColor() === $other->_font->getColor() &&\n           $this->_borders->getLeft()->getStyle() === $other->_borders->getLeft()->getStyle() &&\n           $this->_borders->getTop()->getStyle() === $other->_borders->getTop()->getStyle() &&\n           $this->_borders->getRight()->getStyle() === $other->_borders->getRight()->getStyle() &&\n           $this->_borders->getBottom()->getStyle() === $other->_borders->getBottom()->getStyle() &&\n           $this->_alignment->getHorizontal() === $other->_alignment->getHorizontal() &&\n           $this->_alignment->getVertical() === $other->_alignment->getVertical();\n}\n```\n. > The answer was in the first line of duplicateStyle(). See #101.\n\nThank you for your fix.\nI found \"shared component\" is used in my case as you indicated.\n. ",
    "Nicolas400": "Yes, in the hosting that returns bad characters I was forced to add some lines in php to the main program, header(... charset= \"utf8\").\nI have no idea which character set is running on the hosting, is there any test that I can run ?\nI'm running this library as an extension within yii framework.\n\nBest Regards\n. Yes, in the hosting that returns bad characters I was forced to add some lines in php to the main program, header(... charset= \"utf8\").\nI have no idea which character set is running on the hosting, is there any test that I can run ?\nI'm running this library as an extension within yii framework.\n\nBest Regards\n. ",
    "gianlucagiacometti": "I have the same problem. If I output xls (Excel5) the file is open but in a messy format, xlsx (Excel2007) says format not valid. Tried with phpExcel 1.7.7. and the last 1.7.8 RC downloaded today.\nThe one working is on Deb 6, the one not is on Ubuntu 11.10, both with php 5.3. I guess is php libraries (now php_zip is embedded in php but may be buggy).\nI will investrigate more in the following days, also with Ubuntu 12.04 to chech if something changes.\n. In Ubuntu 12.04 works, so it seems a problem related to php with Ubuntu 11.10.\n. OK I think I found the problem!\nAll was caused by a newline somehow set by header() before calling the IOFactory. The resulting file has a starting newline causing excel not to recognise the file format.\nThere's no issue in PHPExcel about that because if you skip headers and save the file it has no newline at the beginning.\nThe solution is to add a ob_clean(); after the header lines just before calling IOFactory:\n\nheader('Content-Disposition: attachment;filename=\"list.xlsx\"');\nheader('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\nheader('Cache-Control: max-age=0');\nob_clean();\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\n$objWriter->save('php://output');\n. I tryed in another Ubuntu 12.04 identical to my last new one (I just setup a new server for a new service) and the problem re-appeared...\nThe only difference between the two is the presence of an external firewall (without works), but no evidence it depends on that.\nI'm sure it does not depend on PHPExcel itself.\nThe best thing to do in my opinion is to tell people to add \"ob_clean();\" in the readme/manual.\nEhmmm.. Never hashed anything so far, if you tell me how to do that I will (blush)\n. SERVER 1:\n\n7fb71b65fb693b336b0845fdafedf55c  export_chiese.php\n\na12ba0e5bfd258ee2be51e02b9b3723a  export_palazzi.php\n\nSERVER 2:\n\n7fb71b65fb693b336b0845fdafedf55c  export_chiese.php\n\na12ba0e5bfd258ee2be51e02b9b3723a  export_palazzi.php\n\nseems exactly the same\nG\n. I have the same problem. If I output xls (Excel5) the file is open but in a messy format, xlsx (Excel2007) says format not valid. Tried with phpExcel 1.7.7. and the last 1.7.8 RC downloaded today.\nThe one working is on Deb 6, the one not is on Ubuntu 11.10, both with php 5.3. I guess is php libraries (now php_zip is embedded in php but may be buggy).\nI will investrigate more in the following days, also with Ubuntu 12.04 to chech if something changes.\n. In Ubuntu 12.04 works, so it seems a problem related to php with Ubuntu 11.10.\n. OK I think I found the problem!\nAll was caused by a newline somehow set by header() before calling the IOFactory. The resulting file has a starting newline causing excel not to recognise the file format.\nThere's no issue in PHPExcel about that because if you skip headers and save the file it has no newline at the beginning.\nThe solution is to add a ob_clean(); after the header lines just before calling IOFactory:\n\nheader('Content-Disposition: attachment;filename=\"list.xlsx\"');\nheader('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\nheader('Cache-Control: max-age=0');\nob_clean();\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\n$objWriter->save('php://output');\n. I tryed in another Ubuntu 12.04 identical to my last new one (I just setup a new server for a new service) and the problem re-appeared...\nThe only difference between the two is the presence of an external firewall (without works), but no evidence it depends on that.\nI'm sure it does not depend on PHPExcel itself.\nThe best thing to do in my opinion is to tell people to add \"ob_clean();\" in the readme/manual.\nEhmmm.. Never hashed anything so far, if you tell me how to do that I will (blush)\n. SERVER 1:\n\n7fb71b65fb693b336b0845fdafedf55c  export_chiese.php\n\na12ba0e5bfd258ee2be51e02b9b3723a  export_palazzi.php\n\nSERVER 2:\n\n7fb71b65fb693b336b0845fdafedf55c  export_chiese.php\n\na12ba0e5bfd258ee2be51e02b9b3723a  export_palazzi.php\n\nseems exactly the same\nG\n. ",
    "ezzatifa3": "@gianlucagiacometti tq so much for the ob_clean(); solution!! I have been looking everywhere for the right solution. Finally, i got it working now. Thanks! \n. @gianlucagiacometti tq so much for the ob_clean(); solution!! I have been looking everywhere for the right solution. Finally, i got it working now. Thanks! \n. ",
    "davidvegacl": "Hours of debugging and finally the problem was a newline at the begining of a long controller file. Thanks for the solution @gianlucagiacometti \n. Hours of debugging and finally the problem was a newline at the begining of a long controller file. Thanks for the solution @gianlucagiacometti \n. ",
    "kkamkou": "```\nrequire 'PHPExcel.phar';\n$excel = new PHPExcel();\n```\n. Np. Thank you for the whole project.\n. As I remember it appears only in the development branch. No?\n. ```\nrequire 'PHPExcel.phar';\n$excel = new PHPExcel();\n```\n. Np. Thank you for the whole project.\n. As I remember it appears only in the development branch. No?\n. ",
    "AndHam89": "Got the this traceback with PHPExcel 1.7.8. It is not the same line as above but the message and trace looks otherwise very much the same. I am wondering if the problem is supposed to be fixed with this version as it was released in December 2012. \n\nWell, I looked at the initial trace dump and yes, mine and the initial are quite different. Nevertheless, the software crashes and it appears that it happens if there is graphics in the .xls Excel file.\n\nRemark: I need to use a slightly different path because the software I am writing for has decided to use a non-standard path.\n\n``` Shell\nPHP Fatal error:  Uncaught exception 'PHPExcel_Exception' with message 'Cell coordinate can not be zero-length string' in /data/home/dcim/openDCIM-2.0.2/PHPExcel/PHPExcel/Cell.php:536\nStack trace:\n#0 /data/home/dcim/openDCIM-2.0.2/PHPExcel/PHPExcel/Reader/Excel5.php(956): PHPExcel_Cell::coordinateFromString(NULL)\n#1 /data/home/dcim/openDCIM-2.0.2/extras/read_a-f_rack_content.php(396): PHPExcel_Reader_Excel5->load(Object(SplFileInfo))\n#2 /data/home/dcim/openDCIM-2.0.2/extras/read_a-f_rack_content.php(544): ExcelContentProcessing->read_rack_content(Object(SplFileInfo))\n#3 /data/home/dcim/openDCIM-2.0.2/extras/read_a-f_rack_content.php(558): traverse_rack_content_repo(Object(Configuration), Object(ExcelContentProcessing))\n#4 {main}\n  thrown in /data/home/dcim/openDCIM-2.0.2/PHPExcel/PHPExcel/Cell.php on line 536\n```\n. Test file is uploaded to CodePlex with the title \nTest file for issue #153\n\ndescription\nAttached is the test file 'test_excel.xls' for the issue #153 reported with the title\n\nOn opening an Excel5 file receiving 'Cell coordinate can not be zero-length string'\n. Got the this traceback with PHPExcel 1.7.8. It is not the same line as above but the message and trace looks otherwise very much the same. I am wondering if the problem is supposed to be fixed with this version as it was released in December 2012. \n\nWell, I looked at the initial trace dump and yes, mine and the initial are quite different. Nevertheless, the software crashes and it appears that it happens if there is graphics in the .xls Excel file.\n\nRemark: I need to use a slightly different path because the software I am writing for has decided to use a non-standard path.\n\n``` Shell\nPHP Fatal error:  Uncaught exception 'PHPExcel_Exception' with message 'Cell coordinate can not be zero-length string' in /data/home/dcim/openDCIM-2.0.2/PHPExcel/PHPExcel/Cell.php:536\nStack trace:\n#0 /data/home/dcim/openDCIM-2.0.2/PHPExcel/PHPExcel/Reader/Excel5.php(956): PHPExcel_Cell::coordinateFromString(NULL)\n#1 /data/home/dcim/openDCIM-2.0.2/extras/read_a-f_rack_content.php(396): PHPExcel_Reader_Excel5->load(Object(SplFileInfo))\n#2 /data/home/dcim/openDCIM-2.0.2/extras/read_a-f_rack_content.php(544): ExcelContentProcessing->read_rack_content(Object(SplFileInfo))\n#3 /data/home/dcim/openDCIM-2.0.2/extras/read_a-f_rack_content.php(558): traverse_rack_content_repo(Object(Configuration), Object(ExcelContentProcessing))\n#4 {main}\n  thrown in /data/home/dcim/openDCIM-2.0.2/PHPExcel/PHPExcel/Cell.php on line 536\n```\n. Test file is uploaded to CodePlex with the title \nTest file for issue #153\n\ndescription\nAttached is the test file 'test_excel.xls' for the issue #153 reported with the title\n\nOn opening an Excel5 file receiving 'Cell coordinate can not be zero-length string'\n. ",
    "lin-credible": "\uff0b1 \ud83d\ude02 \r\n\r\nVersion Info\r\n```\r\n * @category   PHPExcel\r\n * @package    PHPExcel\r\n * @copyright  Copyright (c) 2006 - 2012 PHPExcel (http://www.codeplex.com/PHPExcel)\r\n * @license    http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt\tLGPL\r\n * @version    1.7.8, 2012-10-12\r\n```\r\n\r\nError\r\n```\r\n2016/12/20 09:33:29 [error] 48562#0: *59826 FastCGI sent in stderr: \"PHP message: PHP Fatal error:  Uncaught exception 'PHPExcel_Exception' with message 'Cell coordinate can not be zero-length string' in /Users/.../util/excel_new/PHPExcel/Cell.php:536\r\nStack trace:\r\n#0 /Users/.../util/excel_new/PHPExcel/Worksheet.php(1121): PHPExcel_Cell::coordinateFromString('')\r\n#1 /Users/.../util/excel_new/PHPExcel/Reader/Excel2007.php(1352): PHPExcel_Worksheet->getCell('')\r\n#2 /Users/.../util/excel_new/PHPExcel/IOFactory.php(192): PHPExcel_Reader_Excel2007->load('/Users/...')\r\n#3 /Users/.../controllers/erp/ajax/erp_batch_import.php(47): PHPExcel_IOFactory::load('/Users/...')\r\n```. \uff0b1 \ud83d\ude02 \r\n\r\nVersion Info\r\n```\r\n * @category   PHPExcel\r\n * @package    PHPExcel\r\n * @copyright  Copyright (c) 2006 - 2012 PHPExcel (http://www.codeplex.com/PHPExcel)\r\n * @license    http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt\tLGPL\r\n * @version    1.7.8, 2012-10-12\r\n```\r\n\r\nError\r\n```\r\n2016/12/20 09:33:29 [error] 48562#0: *59826 FastCGI sent in stderr: \"PHP message: PHP Fatal error:  Uncaught exception 'PHPExcel_Exception' with message 'Cell coordinate can not be zero-length string' in /Users/.../util/excel_new/PHPExcel/Cell.php:536\r\nStack trace:\r\n#0 /Users/.../util/excel_new/PHPExcel/Worksheet.php(1121): PHPExcel_Cell::coordinateFromString('')\r\n#1 /Users/.../util/excel_new/PHPExcel/Reader/Excel2007.php(1352): PHPExcel_Worksheet->getCell('')\r\n#2 /Users/.../util/excel_new/PHPExcel/IOFactory.php(192): PHPExcel_Reader_Excel2007->load('/Users/...')\r\n#3 /Users/.../controllers/erp/ajax/erp_batch_import.php(47): PHPExcel_IOFactory::load('/Users/...')\r\n```. ",
    "lowfill": "I just saw that you updated the code for savi xls/xlsx files without any autofilter. However the changes made directly to Cell class to ensure the range is valid would help to avoid similar problems in the future. \n\nI think that should be merged in the develop branch too.\n. Yeap, that was an anoying issue. Yesterday, I spent the whole day debugging it. \n\nFor sure all the changes that you are doing will be good for all\n. I just saw that you updated the code for savi xls/xlsx files without any autofilter. However the changes made directly to Cell class to ensure the range is valid would help to avoid similar problems in the future. \n\nI think that should be merged in the develop branch too.\n. Yeap, that was an anoying issue. Yesterday, I spent the whole day debugging it. \n\nFor sure all the changes that you are doing will be good for all\n. ",
    "dr-abadis": "I have same problem with reader!\nThe error is as below : \nException information:\n\nMessage: Cell coordinate can not be zero-length string\nStack trace:\n\n#0 C:\\xampp\\htdocs\\wimax.shabdiznet.com\\library\\PHPExcel\\Reader\\Excel2007.php(935): PHPExcel_Cell::coordinateFromString('')\n#1 C:\\xampp\\htdocs\\wimax.shabdiznet.com\\application\\models\\Functions.php(30): PHPExcel_Reader_Excel2007->load('C:\\xampp\\tmp\\ph...')\n#2 C:\\xampp\\htdocs\\wimax.shabdiznet.com\\application\\controllers\\ImportController.php(56): Application_Model_Functions::Read_Excel('C:\\xampp\\tmp\\ph...')\n#3 C:\\xampp\\htdocs\\wimax.shabdiznet.com\\library\\Zend\\Controller\\Action.php(516): ImportController->indexAction()\n#4 C:\\xampp\\htdocs\\wimax.shabdiznet.com\\library\\Zend\\Controller\\Dispatcher\\Standard.php(295): Zend_Controller_Action->dispatch('indexAction')\n#5 C:\\xampp\\htdocs\\wimax.shabdiznet.com\\library\\Zend\\Controller\\Front.php(954): Zend_Controller_Dispatcher_Standard->dispatch(Object(Zend_Controller_Request_Http), Object(Zend_Controller_Response_Http))\n#6 C:\\xampp\\htdocs\\wimax.shabdiznet.com\\library\\Zend\\Application\\Bootstrap\\Bootstrap.php(97): Zend_Controller_Front->dispatch()\n#7 C:\\xampp\\htdocs\\wimax.shabdiznet.com\\library\\Zend\\Application.php(366): Zend_Application_Bootstrap_Bootstrap->run()\n#8 C:\\xampp\\htdocs\\wimax.shabdiznet.com\\public\\index.php(25): Zend_Application->run()\n#9 {main}  \n\nThe uploaded file is file.xlsx\nIf you want I can Upload file for you to test it \n. Sorry Forgot to say that I got latest version from Github and problem still exists\n. Here is the file:\nhttps://www.dropbox.com/s/ca8fwoq6c3ey8ar/22.xlsx\nIt is about Wimax modems.I just get the first row.but there is persian characters in the file.the problem is on load function and to solve you can just open file with excel and press save and then close it. in that case the load function will work and no error happens but if you use the file directly it will raise error.thanks in advance\n. I have same problem with reader!\nThe error is as below : \nException information:\n\nMessage: Cell coordinate can not be zero-length string\nStack trace:\n\n#0 C:\\xampp\\htdocs\\wimax.shabdiznet.com\\library\\PHPExcel\\Reader\\Excel2007.php(935): PHPExcel_Cell::coordinateFromString('')\n#1 C:\\xampp\\htdocs\\wimax.shabdiznet.com\\application\\models\\Functions.php(30): PHPExcel_Reader_Excel2007->load('C:\\xampp\\tmp\\ph...')\n#2 C:\\xampp\\htdocs\\wimax.shabdiznet.com\\application\\controllers\\ImportController.php(56): Application_Model_Functions::Read_Excel('C:\\xampp\\tmp\\ph...')\n#3 C:\\xampp\\htdocs\\wimax.shabdiznet.com\\library\\Zend\\Controller\\Action.php(516): ImportController->indexAction()\n#4 C:\\xampp\\htdocs\\wimax.shabdiznet.com\\library\\Zend\\Controller\\Dispatcher\\Standard.php(295): Zend_Controller_Action->dispatch('indexAction')\n#5 C:\\xampp\\htdocs\\wimax.shabdiznet.com\\library\\Zend\\Controller\\Front.php(954): Zend_Controller_Dispatcher_Standard->dispatch(Object(Zend_Controller_Request_Http), Object(Zend_Controller_Response_Http))\n#6 C:\\xampp\\htdocs\\wimax.shabdiznet.com\\library\\Zend\\Application\\Bootstrap\\Bootstrap.php(97): Zend_Controller_Front->dispatch()\n#7 C:\\xampp\\htdocs\\wimax.shabdiznet.com\\library\\Zend\\Application.php(366): Zend_Application_Bootstrap_Bootstrap->run()\n#8 C:\\xampp\\htdocs\\wimax.shabdiznet.com\\public\\index.php(25): Zend_Application->run()\n#9 {main}  \n\nThe uploaded file is file.xlsx\nIf you want I can Upload file for you to test it \n. Sorry Forgot to say that I got latest version from Github and problem still exists\n. Here is the file:\nhttps://www.dropbox.com/s/ca8fwoq6c3ey8ar/22.xlsx\nIt is about Wimax modems.I just get the first row.but there is persian characters in the file.the problem is on load function and to solve you can just open file with excel and press save and then close it. in that case the load function will work and no error happens but if you use the file directly it will raise error.thanks in advance\n. ",
    "alexgann": "docProps/app.xml has a `<SharedDoc>` tag but in my quick tests it returns False even when the workbook is shared...\n\nWhat is different is a new directory added under xl called revisions which holds the following files:\n_rels/revisionHeaders.xml.rels\nrevisionHeaders.xml\nrevisionLog1.xml\nuserNames.xml\n\nIt appears it is the presence and contents of these files which controls the entire Shared workbook functionality.  But that's just 5 minutes of 7-zipping through xlsx files - so it is probably more than that.\n. cleaned up code in second commit to remove unnecessary conditions\n. docProps/app.xml has a `<SharedDoc>` tag but in my quick tests it returns False even when the workbook is shared...\n\nWhat is different is a new directory added under xl called revisions which holds the following files:\n_rels/revisionHeaders.xml.rels\nrevisionHeaders.xml\nrevisionLog1.xml\nuserNames.xml\n\nIt appears it is the presence and contents of these files which controls the entire Shared workbook functionality.  But that's just 5 minutes of 7-zipping through xlsx files - so it is probably more than that.\n. cleaned up code in second commit to remove unnecessary conditions\n. ",
    "PowerKiKi": "I confirm the issue still exists and can be summed up like so: \n\n| Formula | Excel 2010 | PHPExcel |\n| --- | --- | --- |\n| `=\"a\" = \"a\"` | TRUE | TRUE |\n| `=\"a\" = \"A\"` | TRUE | FALSE |\n| `=\"A\" = \"A\"` | TRUE | TRUE |\n| `=\"A\" = \"a\"` | TRUE | FALSE |\n\nInterestingly LibreOffice 4.0 seems to implement both modes. When creating a new document, it will be case sensitive (default behavior), but if you save it as .xlsx and re-open it, it will switch to case insensitive (Excel compatible behavior). The documentation does not mention anything though: https://help.libreoffice.org/Calc/Operators_in_Calc\n\nMy opinion is PHPExcel is not called PHPLibreOffice for a reason, and as much as it pains me to say it, I would implement Excel behavior as closely as possible.\n\nI will have a look at PHPExcel source code and see if I can submit a PR...\n. I should add that Google Drive spreadsheets, behave the same way as Excel. One more argument in favor of Excel behavior for what it is worth...\n. I updated my original Pull Request, and it now properly support compatibility mode setting to use case sensitive for OpenOffice and case insensitive for everything else.\n\nOn a side note, I noticed PHPExcel unit tests would need a lot of love to fix them all. If I ever happen to do some of that work, on which branch should it be ? develop or develop_2.0.0 ?\n. Thank you for the clarification. I was indeed wondering how you planned to\nmerge those very heavy changes.\n. Duplicate of https://github.com/PHPOffice/PhpSpreadsheet/pull/177#issuecomment-309699114. 1.7.4 was released on the 2010-08-26, almost 7 years ago. You should absolutely upgrade.. Closing because obsolete.. At this point in time, it seems unlikely that it will ever get merged, so closing.. I am not quite sure but it might have been fixed in PhpSpreadsheet. Would you like to test it and report your findings?. @gekannt try that: https://github.com/PHPOffice/PhpSpreadsheet/blob/develop/samples/21_Pdf_TCPDF.php. And tcpdf version is declared there: https://github.com/PHPOffice/PhpSpreadsheet/blob/develop/composer.json#L36. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/a7155d889080c52ff293768d27ffa3f40e74b9af. Closing because it should be fixed in PhpSpreadsheet according to Mark. If you happen to create a PR for that, please target PhpSpreadsheet, instead of PHPExcel.. Yep, it would be best. PhpSpreadsheet is PHPExcel renamed, it's mostly the same code base, so same features. You should also cover you work with unit tests, so that the feature doesn't break again in the future.. @sbrowett, @mvl22 if one of you can rebase the PR on https://github.com/PHPOffice/PhpSpreadsheet develop branch (respecting new code formatting), then I'll merge it over there.\n. This is not what you want to hear but xls format was introduced in 1998 and replaced by xlsx in 2007. Today, 10 years later, it should be more than safe to use xlsx instead of xls.. @MarkBaker, may I kindly request your attention on this PR ?\n\nThe aim of this PR is to get the unit tests to be successful as soon as possible, to be able to build upon a clean base and stop neglecting unit tests (and fix the existing one that need to be fixed). **The sooner it is merged, the better**.\n\nMy hope is that the green \"build success\" button from Travis displayed on the landing page of the project (currently red), will send a positive signal to the community. So, all contributors will be able to easily submit patches along with their unit tests. Obviously minimizing regression risks in the long term, and improving overall quality of PHPExcel.\n\nThanks for your time !\n. @MarkBaker, @maartenba would there still be an interest for this PR ? I am willing to put the effort to update it if you think that it's worth it. Otherwise we should just reject it.\n\nMost notably dropping PHP 5.2 support would really be a good thing. It's been almost 4 years since PHP [5.2 is officially obsolete](http://php.net/eol.php).\n. @Progi1984 I see that they are still +100 failing tests on Travis for any given PHP versions. What is the strategy for those ? If they are not skipped, as suggested, it will only add noise for newly implemented tests or newly failing tests. \n\nI'd go as far as to say that the situation got worse since the time I created this PR. It used to be only ~50 failing tests. And now it is more than twice that.\n\nObviously the best way to go is to fix all of them at once. But this will take (a lot of) time and meanwhile the situation will degrade even further.\n\nWhat are you thoughts on that ?\n. This is great news, thanks a lot. I'll spend some time on that 1.9 branch then.\n. @joe15000 would you be interested in submitting a PR against PhpSpreadsheet that would break BC and change the behavior (without extra flags) ?. thanks for the contribution @wernerkrauss . The original bug was fixed in 1.8.1 which was released a while ago. The rest of the mentioned bugs were fixed in https://github.com/PHPOffice/PhpSpreadsheet develop branch\n. @seemas-grazitti, please do not copy-paste your issue report in other threads.. Can't reproduce with PHPExcel 1.8.1 (and master) with your example.xlsx and the following code:\n\n``` php\n<?php\n\nrequire_once 'PHPExcel/Classes/PHPExcel.php';\n\n$name = 'example.xlsx';\n$excel = \\PHPExcel_IOFactory::load($name);\n$sheetData = $excel->getActiveSheet()->toArray(NULL, FALSE, FALSE, TRUE);\nvar_dump($sheetData);\n```\n\nWould you have other information to share to reproduce your case ?\n. Could you try to reproduce the problem outside of the web server and outside of cakePHP to see if they have anything to do with this ?\n\nAlso what version of PHPExcel do you use?\n. Unfortunately I am not familiar enough with CakePHP to help you. Sorry about that.\n\nMeanwhile I'll close this issue because the cause seems to be unrelated to PHPExcel.\n. Should be solved in https://github.com/PHPOffice/PhpSpreadsheet/commit/b964788d5c55f9c08a2320579d33a809bfa6c1f2. Obsolete, because it was heavily refactored in PhpSpreadsheet.. Closing this PR because it mixes several commits from different things and is quite old.\n\nIf you feel that something should be fixed, please create a new PR against https://github.com/PHPOffice/PhpSpreadsheet develop branch from a dedicated branch on your fork.\n. Install PHP zip extension if not done yet, and before any PHPExcel use, do:\r\n\r\n```php\r\nPHPExcel_Settings::setZipClass(PHPExcel_Settings::ZIPARCHIVE);\r\n```. Double-check when/where you set the settings. If done properly the class you have an error in is never even used at all.. This has been fixed (probably a long time ago) in https://github.com/PHPOffice/PhpSpreadsheet\n. Thanks @Pacoup for your answer.. Please submit a PR against [PhpSpreadsheet](https://github.com/PHPOffice/phpspreadsheet#phpexcel-vs-phpspreadsheet-) develop branch.. @DaumantasPHP, please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue. And don't forget to mention what version of this project you are using. That way there will be more chance for the issue to be solved.\n. Closing as per [Mark's comment](https://github.com/PHPOffice/PHPExcel/issues/588#issuecomment-249544915).\n. @mikehaertl, despite its name PHPExcel is not really geared toward a specific product, but rather a file format. So if you are able to find that there is indeed something wrong in the file generated by PHPExcel, I will gladly review it.\n\nBut I wasn't able to find anything myself. And that's why I relied on Mark's expertise on the topic to close this issue.\n. Thanks for the contribution. This has be done in https://github.com/PHPOffice/PhpSpreadsheet/commit/67dee17d6781546ff42d54cd9ae2ccfaa79b1f52#diff-df5549a12a3d29d72c3d6cf5bcabc399L33\n. Closing as this is outdated and will be addressed by https://github.com/PHPOffice/PhpSpreadsheet/issues/20\n. It seems you have a good grasp of the issue. Would you like to try to submit a patch and unit tests in a PR against [PhpSpreasheet](https://github.com/PHPOffice/phpspreadsheet#phpexcel-vs-phpspreadsheet-) ?. Closing as per OP's request in #604\n. Could you make an example of code to reproduce the bug ?\n. This has been solved a while ago. Upgrade to latest PHPExcel.\n. @thilina19 you should not have space in a class name, ever. This is unrelated to PHP 7.\r\n\r\nI am locking this thread, because **PHPExcel 1.8.1 is compatible with PHP 7**.. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/62345ef4da075f16c9dbe79d8962e26f2d0d8dd7. The [line 244 in PHPExcel 1.8.1 is a blank line](https://github.com/PHPOffice/PHPExcel/blob/372c7cbb695a6f6f1e62649381aeaa37e7e70b32/Classes/PHPExcel/Calculation/LookupRef.php#L244). So either the error message is wrong, or you don't have the latest version.\r\n\r\nPlease provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue with latest version. That way there will be more chance for the issue to be solved.. This works. Please downgrade to a stable release, or if you really need bleeding edge, upgrade to [PhpSpreadsheet](https://github.com/PHPOffice/phpspreadsheet#phpexcel-vs-phpspreadsheet-).\r\n\r\n![image](https://cloud.githubusercontent.com/assets/72603/21535362/536c927c-cdb7-11e6-82ba-66bb9b4d28f2.png)\r\n. The solution suggested in PR #690 should be rebased on top of PhpSpreadsheet develop branch if the issue still exists.. Obsolete, because next version PhpSpreadsheet, will require PHP 5.5+.. This is solved in latest version of PHPExcel, 1.8.1.\n. It **is** broken on PHP 7.1, and was only fixed in https://github.com/PHPOffice/PhpSpreadsheet/commit/5df662e1a36d6363cc63e7d83cc48610769de792, not in PHPExcel.. Thank you for those quality commits. They have been merged for next version in https://github.com/PHPOffice/PhpSpreadsheet\n. Closing because already implemented in PhpSpreadsheet.. @Vinksyunit the origin of this line goes all the way back to the [very first commit of this project](https://github.com/PHPOffice/PHPExcel/blob/509f27e5c601c002090af18a5dd545b06b7183ca/Classes/PHPExcel/Reader/Excel2007.php#L1269). Unfortunately I don't think anybody know what was the original purpose.\n\nHowever if you or @rudyZanotti can submit a PR, that includes unit tests, against https://github.com/PHPOffice/PhpSpreadsheet's develop branch, I'll merge it.\n. Actually I had a better look at this issue, and I can't reproduce it. Where does your file come from ? Could you please share code and file that could allow us to reproduce ?\n\nThis code:\n\n``` php\n<?php\n\nrequire 'Classes/PHPExcel.php';\n\n$filename = 'test.xlsx';\n$originalTitle = \"FEUILLE d'ARRIVEE\";\n\n// Write file\n$workbook = new PHPExcel();\n$sheet = $workbook->getActiveSheet();\n$sheet->setTitle($originalTitle);\n$writer = new PHPExcel_Writer_Excel2007($workbook);\n$writer->save($filename);\n\n// Read file\n$reloadedWorkbook = PHPExcel_IOFactory::load($filename);\n$title = $reloadedWorkbook->getActiveSheet()->getTitle();\nvar_dump($title === $originalTitle);\necho 'PHPExcel version: ' . `git describe --always`;\n```\n\nwill output as expected:\n\n```\nbool(true)\nPHPExcel version: 1.8.1\n```\n\nSo that means that PHPExcel is able to write and read sheet titles containing apostrophes. And also that LibreOffice Calc 5.1 is able to read files written by PHPExcel and PHPExcel is able to read files written by LibreOffice.\n\n@rudyZanotti feel free to participate here, if you can help us reproduce the case.\n. I could reproduce with your file and the following code:\n\n``` php\n<?php\n\nrequire_once 'Classes/PHPExcel.php';\n\n$excelTemplate = \\PHPExcel_IOFactory::createReader('Excel2007');\n$workbook = $excelTemplate->load('sample_issue.xlsx');\n\n$objWriter = \\PHPExcel_IOFactory::createWriter($workbook, 'Excel2007');\n$objWriter->save('out.xlsx'); // crash here\n```\n\nContrary to what your code implied the crash happened on `save()`, not on `createWriter()`. Also your file was needed to reproduce because it actually is related to the print area. My previous attempt did not have any print area specified, so the crash was not triggered.\n\nAnyway, I merged a fix (highly inspired by your PR) in https://github.com/PHPOffice/PhpSpreadsheet/commit/e95a2670347f87dc96cca9d88a9c2e904a73bb17\n. The file generated by CreateExcel2007.txt shows correctly in Excel 2016. Is this not what you expected ?\r\n\r\n![image](https://cloud.githubusercontent.com/assets/72603/20736885/c99bdb24-b6ec-11e6-8002-df3096dd5598.png)\r\n\r\n(it will show incorrectly in LibreOffice 5 though, but I believe it is a known issue from LibreOffice). Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/3bd0f6f9854bf858a0061eb52d4610467c3848d9. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/48a6e86adc4d33d6ec7a8aaa045775211ddb5057. Merged https://github.com/PHPOffice/PhpSpreadsheet/commit/b964788d5c55f9c08a2320579d33a809bfa6c1f2 instead. @stefandoorn it should be re-submitted against https://github.com/PHPOffice/phpspreadsheet develop branch (implying rebase-ing and codestyle and namespace adaptations). It should also be tested with unit tests.\n. @stefandoorn it is the next version indeed. It's not yet released, but all development happens over there now.\n. Before rebasing we should wait to see what happens with cache refactoring as planned in https://github.com/PHPOffice/PhpSpreadsheet/issues/3. This is very unlikely to happen in the foreseeable future unless somebody from the community step up and provides an implementation. And if somebody actually want to do that, it should be done in PhpSpreadsheet.. Thank you, your contributions are now part of the next release:\n- https://github.com/PHPOffice/PhpSpreadsheet/commit/b42bafcfe7e44ddb9cadb1882e8782f0eee24adb (amongst other things)\n- https://github.com/PHPOffice/PhpSpreadsheet/commit/d8850176a163afcf43f987be1e8dffceab5b1cfc\n- https://github.com/PHPOffice/PhpSpreadsheet/commit/6acd40325158bb905eb3005b8fbb9618c71af043\n. As said it was merged in https://github.com/PHPOffice/PHPExcel/commit/141d64d#diff-2969e907f49ca264dd0d46e15b2c8d65L491\n. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/b964788d5c55f9c08a2320579d33a809bfa6c1f2. @kamazee thanks for your work. Don't need to backport anything, because PHPExcel will not be updated anymore.\n. `\\PhpOffice\\PhpSpreadsheet\\Shared\\Date` was refactored heavily and this patch cannot be merged anymore.. Migrate to PhpSpreadsheet.. Thank you for the PR. It has been fixed for next version in https://github.com/PHPOffice/PhpSpreadsheet/commit/f02c3320a280a12431ddd9ed2a94da95dc9fe664\n. Thanks. This has been fixed for next release in https://github.com/PHPOffice/PhpSpreadsheet/commit/b42bafcfe7e44ddb9cadb1882e8782f0eee24adb\n. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/39b8dbd0a1fda087d229e3abbcc666275fc3d35a. Can PHPExcel re-read the written files ?\n. Should be solved by https://github.com/PHPOffice/PhpSpreadsheet/commit/b964788d5c55f9c08a2320579d33a809bfa6c1f2. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/2484a03f19950a923490f391b7e3678c15a69b1f. Have you tried unzipping the xlsx before and the one after the operation to compare its content ? That should at least give you a hint of what is not behaving as expected.. It seems it misses the possibility to specify a `DataType`, so `setValueExplicit()` is always called with default `DataType`. I'd suggest to pass an optionnal `DataType` to `fromArray()`, if null use `setValue()`, if not null use `setValueExplicitly()` with given value.\r\n\r\nAlso PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please head over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. This has been done in https://github.com/PHPOffice/PhpSpreadsheet/commit/850594c#diff-495ca961ee5a4a2ab5ae21e6a550a384L229 and more generally in `DateTimeInterface` are introduced in the context of  https://github.com/PHPOffice/PhpSpreadsheet/issues/7\n. This has been done in https://github.com/PHPOffice/PhpSpreadsheet/commit/850594c#diff-495ca961ee5a4a2ab5ae21e6a550a384L229 and more generally in `DateTimeInterface` are introduced in the context of  https://github.com/PHPOffice/PhpSpreadsheet/issues/7\n. This is no longer relevant in https://github.com/PHPOffice/PhpSpreadsheet\n. I believe this can be closed now.\n\n@phansys if you have other interesting contributions, please head over https://github.com/PHPOffice/PhpSpreadsheet\n. @RubenMartins nothing at all, except it [has now been documented](http://phpspreadsheet.readthedocs.io/en/develop/references/features-cross-reference/). Nowadays most features are implemented by contributors, you guys, not the team. If nobody step up, it will never be available. If you do implement it, please target PhpSpreadsheet instead of PHPExcel.. Thank you, this has been done in https://github.com/PHPOffice/PhpSpreadsheet/commit/54d2f72#diff-99e032cc5cf1c51225bd46cc1c4e106aL82\n. Thanks for the PR. This has been for the next version.\n. Thanks for the contribution. It has been merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/30bb53ebf83520d911106576905ae9f0af093a56\n. It seems you have a good idea on how to fix this. Would you like to submit a PR for that ? possibly covering it with unit tests ?\n. @Gigabyte1979 I am not sure why you intervened here. Are you working with @Quix0r ? Or do you happen to have the same issue in a different context ?\n. As you [can see here](https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/IOFactory.php#L225), PHPExcel itself use a detection based on file extension too. It seems unlikely that this would not work, unless it is not used correctly.\n\nI tried to reproduce what you described with the following code and attached file [some_foo_file.csv_incoming.xlsx](https://github.com/PHPOffice/PHPExcel/files/440437/some_foo_file.csv_incoming.xlsx), but it works as expected. So I am closing this, unless you can give us a reproducible case.\n\nThis code:\n\n``` php\n<?php\n\nrequire 'Classes/PHPExcel.php';\n\n$filename = 'some_foo_file.csv_incoming.xlsx';\n$workbook = PHPExcel_IOFactory::load($filename);\n$value = $workbook->getActiveSheet()->getCell('A1')->getValue();\n\nvar_dump($value);\necho 'PHPExcel version: ' . `git describe --always`;\n```\n\nWill correctly output:\n\n```\nstring(8) \"it works\"\nPHPExcel version: 1.8.1\n```\n. Thanks, it's been merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/08525a10c1ffadaef7af346e322bca0a031593e4\n. Thanks it has been merged for next version in https://github.com/PHPOffice/PhpSpreadsheet/commit/98e00e8843b6407288d7afcaebf253d76c2bc36b\n. While I generally agree that `require_once` should often be preferred over `require`, I can't reproduce a case where `PHPExcel_Autoloader::load()` is called more than once with the same class name, hence `require` or `require_once` should not make any difference. Maybe there is something else going on that could be a bug.\n\nWould you mind sharing the code you used for profiling and/or the list of class names you see in `PHPExcel_Autoloader::load()` ?\n. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/c1f5bdba5db90cb8ef4ad688c3d1d8dfad220f80. Development of next version moved to https://github.com/PHPOffice/PhpSpreadsheet. Could you please submit your PR against that new repository's develop branch ?\n\nSorry for the trouble\n. @gustavobeavis, thanks for your contribution. This PR has been merged as https://github.com/PHPOffice/PhpSpreadsheet/commit/ba705448464ec38f3527cd3ddc1ace20609b40b3\n\nPlease don't use 1.9 branch because it was in the middle of a major refactoring and was utterly broken. Either stay on 1.8, or move on to the future version with its new name and repository at https://github.com/PHPOffice/PhpSpreadsheet.\n. Closing as duplicate of #740. Let's continue the discussion in the older issue please.\n. It seems it can't be fixed, at least not in PHPExcel itself, so closing this issue.\n. Closing until we can reliably reproduce the case, see https://github.com/PHPOffice/PHPExcel/issues/740#issuecomment-242893363\n. This does not seem to be a bug report. I am closing it. But if you have a bug to report, feel free to add to it.\n. I assume you mean it should be `true` and not the default value of `false`, right ?\n. This is now fixed for next version in https://github.com/PHPOffice/PhpSpreadsheet/commit/c3bb4245b3d911adf82c2593a52495f01f1b3f7d.\n\nThanks for your clear bug description.\n. I am afraid that this PR cannot be merged, because it replaces a system that support multiple input encoding with hardcoded input encoding of `ISO-8859`.\n\nBut the documentation mentions something that should be helpful to you:\n\n> Note that PHPExcel_Reader_CSV by default assumes that the loaded CSV file is UTF-8 encoded. [...] Always make sure that the input encoding is set appropriately.\n\nSo something like this should work:\n\n``` php\n$objReader = new PHPExcel_Reader_CSV();\n$objReader->setInputEncoding('ISO-8859');\n```\n\nPS: next time you create a PR, try to submit only 1 commit, on a separate branch, instead of a unrelated commits all mixed together. That way it's easier to review and more likely to get merged.\n. I don't think the URL should be tested to be existing, that adds a dependency on network connection that can easily be broken and thus give different results in different context (I am thinking offline and/or unstable connection, routing issues, servers down etc.). While URL support may be interesting, I think the check whether it exists is too much.\n. I am not confident enough to merge this feature, because it opens the door to a whole lot of potential bugs/feature requests that are not well planed, and I am not sure we would like to support them.. Thanks, merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/1a2a6816fb5bb0e146524ba40aa419695c40136a\n. Thanks, merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/8fc7de7358d8c192b14f0f2fccc4fbaf3a78a57a\n. Please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue. And don't forget to mention what version of this project you are using. That way there will be more chance for the issue to be solved.\n. Please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue. And don't forget to mention what version of this project you are using. That way there will be more chance for the issue to be solved.\n\nMore specifically, include an excel file (and the code) that can be used to reproduced the problem.\n. what was that sentences about composer remove and require ?\n\ndo you `require()` any PHPExcel files in your code ?\n\nAlso what is the complete error message, including stack trace ?\n. If you want namespace, you should use https://github.com/PHPOffice/PhpSpreadsheet, but you'll have to setup a custom repo for composer since that version is not yet released. Otherwise you'll have to use latest stable, 1.8.1, not a branch.\n. PHPExcel will be out-dated when [PhpSpreadsheet](https://github.com/PHPOffice/phpspreadsheet) will be released. But it's not quite ready yet. Porting to PhpSpreadsheet should mostly be renaming class names (to include namespaces), so it should not be too much work.\n. Sure, we might even have a basic tool to help with some part of migration. But it's still a bit early for that...\n. Fixed via https://github.com/PHPOffice/PhpSpreadsheet/commit/c99ec67d6897b609d395e7b8d0f820e7a77f370a\n. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/5a3e2435c3e069abfb3e5dbcb65bdc63daa4c364\n. This seems unrelated to this project\n. IMHO it is not the responsibility of PHPExcel to fix corrupted files. And the patch provided seems to be quite fragile since it is hardcoded for a very specific cases. How can we be sure that there isn't another attribute that could be duplicated and fatal error. \n. If ms xml parser fails to parse it, then it is a corrupted file, isn't it ?\n. It is not PHPExcel responsability to fix invalid input files\n. The only supported version of IE by Microsoft [is IE 11](https://www.microsoft.com/en-us/WindowsForBusiness/End-of-IE-support), and conditonnal comments are not supported in IE 11 (since IE 10 as mentioned in [your link](https://msdn.microsoft.com/en-us/library/ms537512%28v=vs.85%29.aspx)). I don't think PHPExcel should support a technology that is obsolete and widely considered bad practice.\n. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/102c19356f4db86ee0e784d7db7d3875069a1efa\n. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/d791a0bbeb54bf6ce8ad2efe8843852f7ea41659\n. Thanks, merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/c99ec67d6897b609d395e7b8d0f820e7a77f370a\n. Thanks, merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/c94539c86c9e2790656947b87d1aa1ef211a4584\n. 1.8.1 is the last version of PHPExcel. The next version (2.0.0) is in development under the new name PhpSpreadsheet. So if you have more contributions to do, please contribute to PhpSpreadsheet instead.\n. Could you please give us a **complete** example of code that can work independently and reproduce the issue ? Especially, include the creation of the worksheet and writing it to a file.\n\nAlso what version of PHPExcel are you using ?\n. Unfortunately it doesn't seem to be a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) since that code seems to be dependent on Laravel. Try to reproduce it independently from your existing application, in a file that can run by other people without any other  dependencies than PHPExcel itself.\n. Instead of:\n\n``` php\n$sheet->getDefaultStyle();\n```\n\nUse:\n\n``` php\n$sheet->getParent()->getDefaultStyle();\n```\n\nOr more directly:\n\n``` php\n$workbook->getDefaultStyle();\n```\n. Before rebasing we should wait to see what happens with cache refactoring as planned in https://github.com/PHPOffice/PhpSpreadsheet/issues/3. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/30a5e4b893f3b7c7179711ad36331b2866efcc3c. Mark, the project lead, is very busy nowadays. And I try to push PhpSpreadsheet to a somewhat stable-ish release as soon as possible, and at the same time merge old PR from here and reply to some issues. But as you can imagine, we all have a very limited time to contribute.\r\n\r\nOn the bright side, PR to PhpSpreadsheet are very welcomed, especially if they are covered by unit tests. Sorry, I don't have a better answer to offer you.. `$readDataOnly` is already declared in `PHPExcel_Reader_Abstract` as you can [see here](https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Reader/Abstract.php#L37)\n. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Thank you for your effort, but unfortunately we won't be able to merge this. Development is now happening in https://github.com/PHPOffice/PhpSpreadsheet and the code was already heavily refactored and re-formatted. I am afraid your patch won't be applicable.\n. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/ec9e548153b4e92abbea9a7b410496a075ee5f41\n. Please submit all your PR to https://github.com/PHPOffice/PhpSpreadsheet project instead of here (see [why here](https://github.com/PHPOffice/PhpSpreadsheet#phpexcel-vs-phpspreadsheet-)).\n. I'll take care of this one though...\n. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/720fb3eff52b1103ca4ddd278e5b081162ec9fd6. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/3b4f54722fe5cf9f3322b862bed6324909d5d1b4. Closed via https://github.com/PHPOffice/PhpSpreadsheet/commit/e6bbc4bd2554305b770e016ea026e4b1d55fef98. Indirectly merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/e6bbc4bd2554305b770e016ea026e4b1d55fef98. @a3aakash, if you need it, you'll have to contribute the code to support it.. The feature does not exists at all, so somebody need to implement it. You, or someone else, could submit a patch to add this feature.\r\n\r\nI closed this issue because there is no point of leaving it open forever. I won't implement this feature myself, because of lack of time. And it's not very likely that somebody else implement such a \"big\" feature anytime soon.. PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please head over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.\n\nMoreover `sudo chmod -R 777 /var/www/` is extremely permissive and thus dangerous. It is not a good idea to suggest that as a solution. I am afraid this PR will not be merged.\n. No, there isn't, see #9. Please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue. And don't forget to mention what version of this project you are using. That way there will be more chance for the issue to be solved.\n. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/8c58385d6c103d23f6a5b3d1899a5e7cc8f66e92. I merged your PR on PhpSpreadsheet on the exact same subject (https://github.com/PHPOffice/PhpSpreadsheet/pull/35). You should know by now that nothing will ever be merged in PHPExcel anymore. Please keep your contribution on PhpSpreadsheet. This has been solved in [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet). It works with `\\DateTimeInterface`, making possible the use of both `\\DateTimeImmutable` or `\\DateTime`.. Can't reproduce with only renaming the file name, it always get read correctly. Did you try saving as \"aaaa.xlsx\", rename the file as \"\u753b\u9762.xlsx\" and then read that ? Or the other way around ?\r\n\r\nMy guess is the filename doesn't matter, but the file content generated differs when saving with a different name for some reason. You should be able to identify if the file are exactly the same by producing a MD5 sum of them. On Linux/OSX, that would be the command:\r\n\r\n```\r\nmd5sum aaaa.xlsx \u753b\u9762.xlsx\r\n```. I assume you use `PHPExcel_IOFactory::load($pFilename);` to load your file. Did you double-check the value of `$pFilename` ? Is it actually correct and does `var_dump(is_readable($pFilename));` return `true` ?\r\n\r\nAlso what OS/filesystem are you on ?. I am suspicious about `$encoded_filename = iconv('UTF-8', 'CP932', $filename);`, I would argue that you shouldn't need it and keep everything UTF-8 at all times. But I don't enough about filesystem encoding to know for sure...\r\n\r\nBy default PHPExcel will use [PHP's ZipArchive](http://php.net/manual/en/ziparchive.open.php) to read XLSX files. There are several bug reports about filename encoding **within** the archive. This is not the same as you see here, but still, maybe changing the ZIP handler could help...\r\n\r\nYou should be able to do that with:\r\n\r\n```php\r\n\\PHPExcel_Settings::setZipClass(\\PHPExcel_Settings::PCLZIP);\r\n```. What is the value of `$dirpath . '/', $filename` ?. Most likely it is a duplicate of https://github.com/PHPOffice/PHPExcel/issues/1071#issuecomment-263464073. Let me know if it doesn't work.. Use `setZipClass()` before `identify()`.. I am running out of ideas here... what do you get if running `composer show phpoffice/phpexcel` ? is it PHPExcel 1.8.1 ?. Thank you, but unfortunately it doesn't help us much. You correctly have the latest version 1.8.1.\r\n\r\nI just tried here on PHPExcel 1.8.1 and PHP 5.6 and 7.0 the following code\r\n\r\n```php\r\n<?php\r\n\r\nrequire 'Classes/PHPExcel.php';\r\n\r\n$inputFileName = './Documentation/Examples/Reading WorkBook Data/sampleData/example1.xls';\r\nPHPExcel_Settings::setZipClass(PHPExcel_Settings::ZIPARCHIVE);\r\n$a = PHPExcel_IOFactory::identify($inputFileName);\r\n\r\nPHPExcel_Settings::setZipClass(PHPExcel_Settings::PCLZIP);\r\n$b = PHPExcel_IOFactory::identify($inputFileName);\r\n\r\nvar_dump($a, $b);\r\n```\r\n\r\nPut that in `vendor/phpoffice/phpexcel/test.php`, then `cd vendor/phpoffice/phpexcel && php test.php`. It should give you this:\r\n\r\n```\r\n$ php test.php \r\nstring(6) \"Excel5\"\r\nstring(6) \"Excel5\"\r\n```\r\n\r\nIs it not the case ?. @Holisollogistics, please don't copy/paste your question in several threads. I don't think this an a issue specific to PHPExcel, but rather an issue of filesystem encoding. As long as `file_exists($path);` returns `false`, PHPExcel can't do anything. You have to find out what encoding you should use in order for PHP to access the file properly. Then start worrying about PHPExel.. Thank you, merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/5e03e282e5fa8701e4b3c7a942b135d24c40ae9c. Unfortunately I don't think I will be able to merge this because PHPExcel development for next version has moved under its new name PhpSpreadsheet. However if you rebase your work on [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet) develop branch, I'll gladly have another look.. There is now way to read PDF with PHPExcel.. No, there isn't, because there is no way to read PDF with PHPExcel.. Please explain in the commit why you are doing this change. And I'd argue that documentation is an essential part of the package and should probably be released together with code source.\r\n\r\nAlso PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please head over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. I'm really undecided on this topic. It seems Mark modified this file back and forth too a few times. The [PHP League](https://github.com/thephpleague) and [Zend Framework](https://github.com/zendframework) do it, but [Symphony don't do anymore](https://github.com/symfony/symfony/issues/6605). IMHO docs and tests are very useful to learn how a lib works, and I often have a look at them when developing. But at the same time I see the value of reducing package size for production...\r\n\r\n@MarkBaker would you have an opinion on what should and should not be excluded from packages ?. I actually quite often `grep` on my entire project and find matches both in tests and docs which, to me, is very helpful. So yes, I do look in vendor/ for docs and tests. I believe tests are an integral part of documentation to understand internals and how the lib is supposed to be used. So for my own uses I would prefer to always have everything for development. And unfortunately `--prefer-source` make composer much slower, so I still use `--prefer-dist` even for develop.\r\n\r\nThat's why I am undecided, and @MarkBaker inputs would be very appreciated.. @MarkBaker don't you have a way to manually remove all content from codeplex ? or at the very least the homepage ? it seems to bring more confusion than anything else.... I meant more like edit it out, replace the text with blank lines. I suppose you still have editing access ?. It would be great if one of you were able to contribute a PR against PhpSpreadsheet develop branch to fix this issue. I am afraid I won't have much time to investigate this one.. Thank you for reporting back your findings. Closing as requested.. I think it's a good idea, but I am not sure how to do it. I've been\nthinking about excluding this PHP version via composer.json, but that may\nbe excessive for people who don't even use SQLite. Maybe throwing an\nexception from our code when enabling SQLite ? Or only a mention in the doc\n?\n\nWhatever we choose to do, it should only be done for PhpSpreadsheet, not\nPHPExcel.\n. I agree with the suggestion to only mention it in the docs. Could one of\nyou suggest a PR please ? I'll merge them (for PHPExcel and PhpSpreadsheet)\n. Thank you for the suggestion, I merged a variation in PHPExcel and PhpSpreadsheet.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. This one was an easy merge, so I merged it in https://github.com/PHPOffice/PhpSpreadsheet/commit/ab7aa68300057032467370a822776c7de4568f18. Closing as this is not a bug related to PHPExcel, but feel free to continue the discussion.. Thank you for reporting. Could you please [report an issue in PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet/issues/new) which includes a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that demonstrate the problem with PhpSpreadsheet ?. If you can provide a full working example with PHPExcel I'll migrate it to PhpSpreadsheet.. Thanks, however I don't have the xlsx file. Can you create it \"in-memory\" with PHPExcel, instead of reading from disk, and still reproduce the bug ?. Please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue (without nginx, and creating the spreadsheet by code without reading from files). That way there will be more chance for the issue to be solved.. The example can be even reduced further down to the following. And I am able to reproduce and confirm the bug. What you said about array compared to int seems to be correct. And it seems it is because the `$rowNum` argument is wrong. The `INDEX()` method receives an array, but is actually expecting an int. If we change that argument to an int, it works as expected. So that means the method `INDEX()` is correct and the bug is somewhere before that method...\r\n\r\nI'll let you dig further, but I suspect it may be something in `PHPExcel_Calculation::_processTokenStack()`. Also I suggest you keep debugging this after upgrading to PhpSpreadsheet, because PHPExcel is not developed anymore, and PhpSpreadsheet provides a better environnement for submitting patches (unit testing, code style checking, etc.)\r\n\r\n```php\r\n<?php\r\n\r\nrequire 'Classes/PHPExcel.php';\r\n\r\n$arrayValues = array(\r\n    1 => array(\r\n        'A' => 'Title 1',\r\n        'B' => 'AT1234',\r\n    ),\r\n    2 => array(\r\n        'A' => 'Title 2',\r\n        'B' => 'AT3456',\r\n    ),\r\n    3 => array(\r\n        'A' => 'Title 3',\r\n        'B' => 'AT5678',\r\n    ),\r\n    4 => array(\r\n        'A' => 'Title 4',\r\n        'B' => 'AT8875',\r\n    ),\r\n    5 => array(\r\n        'A' => 'Title 5',\r\n        'B' => 'AT5457',\r\n    ),\r\n);\r\n\r\n$rowNum = array(\r\n    7 => array(\r\n        'A' => 2.0,\r\n    ),\r\n);\r\n\r\n$columnNum = 2;\r\n\r\nvar_dump(PHPExcel_Calculation_LookupRef::INDEX($arrayValues, $rowNum, $columnNum)); // Wrong\r\nvar_dump(PHPExcel_Calculation_LookupRef::INDEX($arrayValues, 2, $columnNum)); // Correct\r\n```\r\n. Unfortunately STDEVS is not implemented in PHPExcel/PhpSpreadsheet as you can see there: http://phpspreadsheet.readthedocs.io/en/develop/references/function-list-by-name/#s. \r\n\r\nIf you are willing to contribute an implementation for that, please do so in [PhpSpreadsheet project](github.com/PHPOffice/phpspreadsheet).. This is the wrong project, please report to [PHPWord](https://github.com/PHPOffice/PHPWord).. In latest version, `PHPExcel_Style_Border::getStyleArray()` [doesn't look like what you described](https://github.com/PHPOffice/PHPExcel/blob/372c7cbb695a6f6f1e62649381aeaa37e7e70b32/Classes/PHPExcel/Style/Border.php#L150-L175).\r\n\r\nPlease downgrade to a stable release, or if you really need bleeding edge, upgrade to [PhpSpreadsheet](https://github.com/PHPOffice/phpspreadsheet#phpexcel-vs-phpspreadsheet-).\r\n. See #642. You should only use in production [tagged releases](https://github.com/PHPOffice/PHPExcel/releases), or better yet use composer to install your dependencies.. Thank you for reporting the issue, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. Would you please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute a patch that include unit tests ?. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches (that includes unit tests). Pull Requests will no longer be accepted for PHPExcel.. Please upgrade to latest version 1.8.1 and see if the problem still exists.. @sdespont please submit a PR to improve the documentation as you see fit on [PhpSpreadsheet](https://github.com/PHPOffice/phpspreadsheet#phpexcel-vs-phpspreadsheet-) project.. This have been fixed in https://github.com/PHPOffice/PhpSpreadsheet/commit/5a3e2435c3e069abfb3e5dbcb65bdc63daa4c364 a few weeks ago. Also be careful to use PHPExcel 1.8.1, the latest released version, and not the branch 1.8 which may contains bugs.\r\n\r\nAnd finally PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. I understand the frustration, but unfortunately we are way under-staffed to support two projects. We are only two guys Mark, the lead who is pretty busy, and myself who arrived only a few weeks ago. Please consider contributing to PhpSpreadsheet if you need to see a faster release.. Please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue. And don't forget to mention what version of this project you are using. That way there will be more chance for the issue to be solved.. Not the answer you are looking for but PHPExcel does not and will never support PHP 7.1. Instead you might want to try [PhpSpreadsheet](https://github.com/PHPOffice/phpspreadsheet#phpexcel-vs-phpspreadsheet-). But even that one has a few tests that does not pass on PHP 7.1. Any help is welcome though.... @mnvx, no there is no plan, PHPExcel is not supported anymore. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Could you update to latest 1.8.1 and see if it still happens ?\r\n\r\nAnd if it does please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue. That way there will be more chance for the issue to be solved.. Can you compare the broken file with the working file (after unzipping them) ? you may find the answer to your question.... Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. As you can see there are [several bugs with PHP 7.1](https://travis-ci.org/PHPOffice/PhpSpreadsheet/jobs/191519295) that were still not fixed. Please consider creating a PR against PhpSpreadsheet develop branch if you are able to find a solution.. @mmuman you are absolutely right. Interestingly enough the bug existed for at least 7 years, since 509f27e. I guess PHP 7.1 new strictness is a good thing ;-)\r\n\r\nFixed in PhpSpreadsheet. If you try PhpSpreadsheet and discover bugs, please consider creating PR to fix bugs (ideally covered by unit tests), because we are severely understaffed.. @Webstorm-IL, upgrade to PhpSpreadsheet, if you can, to get this solved.. As you can see there are [several bugs with PHP 7.1](https://travis-ci.org/PHPOffice/PhpSpreadsheet/jobs/191519295) that were still not fixed and thus neither PHPExcel, nor PhpSpreadsheet is compatible with PHP 7.1. Please consider creating a PR against PhpSpreadsheet develop branch if you are able to find a solution.\r\n\r\nI am closing this now because it won't be solved in PHPExcel. But it will be in PhpSpreadsheet.. I know this PR was already closed, however this is just a heads up. PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) for future contributions. Pull Requests will no longer be accepted for PHPExcel.. Please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue. And also mention what version of this project you are using. That way there will be more chance for the issue to be solved.. Would you please try develop branch of https://github.com/PHPOffice/PhpSpreadsheet and see if latest commits changed anything for you ? I don't guarantee anything, but it is worth a try.... Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. This should have been fixed in PhpSpreadsheet, because PHPEXCEL_ROOT was entirely removed to rely on composer autoloader instead. You should try it, but be aware that it is not stable yet.. I think it has been fixed in PhpSpreadsheet develop branch. Please give it a try and open an issue in PhpSpreadsheet with code to reproduce the error if it still persist.. It seems you are trying to access a sheet that does not exists. Probably when you are creating a Spreadsheet from scratch. Please provide more details on what you are trying to do, and I'll re-open the issue.. We don't have time to support old versions unfortunately, closing.. Can you please let me know what tool you used to check compatibility ?\n. Can you please give a link to said plugin page ?\n. Thank you, the underlying tool used is https://github.com/wimg/PHPCompatibility. We [dropped support for SQLite 2 in PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet/commit/6e247c30d9e23e36072adef2d9ea265be9192b09). That should solve all remaining issues.. Upgrade to PHPExcel 1.8.1. In that latest version, there is [nothing on line 86](https://github.com/PHPOffice/PHPExcel/blob/372c7cbb695a6f6f1e62649381aeaa37e7e70b32/Classes/PHPExcel/Reader/Excel2007.php#L86). So you should not experience that bug if you had latest version.. Upgrade to PHPExcel 1.8.1. [Download it from here](https://github.com/PHPOffice/PHPExcel/releases/tag/1.8.1).. Then you probably don't have zip extension for PHP. What will the following code return ?\r\n\r\n```php\r\nvar_dump(extension_loaded ('zip'));\r\n```\r\n\r\nThis might be solved by installing the extension, or using an alternative implementation via:\r\n\r\n```php\r\nPHPExcel_Settings::setZipClass(PHPExcel_Settings::PCLZIP);\r\n```. This should be the first thing before using PHPExcel. Eg:\r\n\r\n```php\r\n// Use PCLZip rather than ZipArchive\r\nPHPExcel_Settings::setZipClass(PHPExcel_Settings::PCLZIP);\r\n$phpExcel = PHPExcel_IOFactory::load(\"filename.xlsx\");\r\n// your code here...\r\n```. this is a warning, not an error. You can't do much about it now, unless migrate to unstable 1.8 branch (not recommended), or migrate to [PhpSpreadsheet](https://github.com/PHPOffice/phpspreadsheet#phpexcel-vs-phpspreadsheet-) (only if you understand the risks).. Read this [part of PhpSpreadsheet doc](http://phpspreadsheet.readthedocs.io/en/develop/topics/reading-files/#spreadsheet-reader-options), it is also applicable with PHPExcel (although the namespace names changes, the concepts are identical). This should allow to read only the part that you need.\r\n\r\nAnd also read [about caching](http://phpspreadsheet.readthedocs.io/en/develop/topics/settings/#cell-caching), which may help too.\r\n\r\nFinally, try to post question on StackOverflow instead of here.. Done in https://github.com/PHPOffice/PhpSpreadsheet/commit/fb1d280e825381c97acd62e5e4292bea47e15785. From the description, it is not clear what result you are expecting, and what result you are actually seeing. Please clarify and provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits the issue. Unfortunately the code provided cannot be run by itself.. Unfortunately, I still cannot run your code, please provide a **complete** code example that can be copy/pasted and run.. We recently merged a commit for a similar issue in https://github.com/PHPOffice/PhpSpreadsheet/pull/95, so I think it would make sense to also solve this one. Would you create a PR against PhpSpreadsheet develop branch ?. Most likely fixed by https://github.com/PHPOffice/PhpSpreadsheet/commit/de5a04e4cbc83d6e1a7a4cdb1427873d07d861ae (because HTML is used to generate PDF). It seems to me that you are calling `rangeToArray` way too many times. Either drop the `for` loop and keep `rangeToArray('A' . $row . ':' . $highestColumn . $row, ...)`, or keep the `for` loop and read only one row at a time with `rangeToArray('A' . $row . ':' . $row . $row, ...)`.. Also don't [cross-post](http://stackoverflow.com/questions/42546111/does-count-of-row-column-of-an-excel-file-that-contain-data-affect-its-read-fil). For support use only StackOverflow, not this issue tracker.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. This may be PHP timing out before it could send everything. Try to increase PHP `max_execution_time` or speed up the file generation somehow (less data, or more efficient).. ([see here](http://phpspreadsheet.readthedocs.io/en/develop/topics/recipes/#setting-a-columns-width) for a slightly better formatting). Thanks for the contribution. Please next time target PhpSpreadsheet develop branch for easier/faster merging.. Please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue, without the need for any external Excel files. And don't forget to mention what version of this project you are using. That way there will be more chance for the issue to be solved.. `range()` is not doing what you think, as demonstrated by this command:\r\n```sh\r\n$ php -r \"var_dump(range('AA','AY'));\"\r\nCommand line code:1:\r\narray(1) {\r\n  [0] =>\r\n  string(1) \"A\"\r\n}\r\n```\r\n\r\nYou need something else than `range()`.. Did you try that https://github.com/PHPOffice/PHPExcel/blob/1.8/Documentation/markdown/Overview/04-Configuration-Settings.md#cell-caching ?. Is it a PHP timeout issue ?. Fixed in https://github.com/PHPOffice/PHPExcel/commit/0025318d7e76e100cbfa134189950d265c3cded4. It seems like your excel file _may_ have been wrongly generated. Where does it come from ?. Closing as per Mark's comment (he was talking about 818413e). The solution being to use PhpSpreadsheet develop branch for now. Please consider contributing a PR to PhpSpreadsheet develop branch. PHPExcel is not maintained anymore, and all debugging/contributing should be done with PhpSpreadsheet instead.. This is solved in (unreleased) PhpSpreadsheet develop branch.. Will be hard to help without more info. It may be because the file is\r\nwrongly generated. You may also try PhpSpreadsheet develop branch, that\r\n*may* have fixed some bugs. But your description is way too vague to know\r\nmore. You'll probably have to dig in the code and debug by yourself.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.\r\n\r\nAlso where does this format comes from ?. Oh, nevermind my last question, I should have read the commit message:\r\n\r\n> [...] to replicate the format when you click the \"Accounting Number Format\" button in Excel\r\n. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. The [docs states](http://phpspreadsheet.readthedocs.io/en/develop/#installation) that you can install PhpSpreadsheet with:\r\n\r\n ```sh\r\ncomposer require phpoffice/phpspreadsheet:dev-develop\r\n```\r\n\r\nAs a workaround for PHPExcel you can use ZipArchive instead of PclZip with:\r\n\r\n```php\r\nPHPExcel_Settings::setZipClass(PHPExcel_Settings::ZIPARCHIVE);\r\n```. Then you should use the mentioned workaround, by using PHP zip extension instead of built-in PCLZip code. In fact it's more than a workaround, as PHP zip extension will be a hard requirement for PhpSpreadsheet, so you better get your environnement ready now.. I cannot reproduce what you describe with the following code. If the problem persist please open a new issue on PhpSpreadsheet that include code to reproduce the bug (by modifying the following).\r\n\r\n```php\r\n<?php\r\n\r\nrequire __DIR__ . '/vendor/autoload.php';\r\n\r\nuse PhpOffice\\PhpSpreadsheet\\Style\\NumberFormat;\r\nuse PhpOffice\\PhpSpreadsheet\\Spreadsheet;\r\n\r\n$spreadsheet = new Spreadsheet();\r\n$sheet = $spreadsheet->getActiveSheet();\r\n$original = $sheet->getStyle('A1')->getNumberFormat()->getFormatCode();\r\n\r\n// Set formatting\r\n$sheet->getStyle('A1')->getNumberFormat()->setFormatCode(NumberFormat::FORMAT_CURRENCY_USD);\r\n$before = $sheet->getStyle('A1')->getNumberFormat()->getFormatCode();\r\n\r\n// Set formula containing ()\r\n$sheet->getCell('A1')->setValue('=\"foo (bar)\"');\r\n\r\n// Assert formatting did not change and value is as expected\r\n$after = $sheet->getStyle('A1')->getNumberFormat()->getFormatCode();\r\n$value = $sheet->getCell('A1')->getCalculatedValue();\r\n$success = $before === $after && $value === 'foo (bar)';\r\nvar_dump($original, $before, $after, $value, $success);\r\n```. Thank you for your contribution, it's has been merged.\r\n\r\nHowever PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) for your next contribution.. Might be somewhat related to https://bugs.php.net/bug.php?id=70110. Would you try this ?\r\n\r\n```php\r\n        ini_set('pcre.backtrack_limit', 100000000);\r\n        ini_set('pcre.jit', 0);\r\n```. I cannot reproduce your error with the following code on PHPExcel 1.8.1 (nor on PhpSpreadsheet develop branch):\r\n\r\n```php\r\n<?php\r\n\r\nrequire __DIR__ . '/Classes/PHPExcel.php';\r\n\r\nvar_dump(PHPExcel_Style_NumberFormat::toFormattedString(1234.0, '# ?/?'));\r\n```\r\n\r\nThis will correctly output:\r\n\r\n```\r\ndouble(1234)\r\n```. Closing as duplicate of https://github.com/PHPOffice/PhpSpreadsheet/issues/134. Please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue. And don't forget to mention what version of this project you are using. That way there will be more chance for the issue to be solved.. Please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue.. I cannot run this code because it depends on other variables and functions that do no exist. Can you please simplify your code to be **minimal** but complete ?. Have a look there: https://github.com/PHPOffice/PHPExcel/blob/1.8/Documentation/markdown/Overview/04-Configuration-Settings.md#cell-caching. You are loading a new sheet from a new file into memory. It is normal that the memory increase every time that the function is called.. Destroying the object should free the memory (`unset($PHPReader);`). But then you can't access it anymore.... https://github.com/PHPOffice/PHPExcel/blob/1c8c2379ccf5ab9dd7cb46be965821d22173bcf4/Documentation/markdown/Overview/01-Getting-Started.md#php-complains-about-ziparchive-not-being-found. There is no relation with namespace.\r\n\r\nIf you use `\\PHPExcel_Settings::setZipClass(\\PHPExcel_Settings::ZIPARCHIVE);`, then you **must** install PHP zip extension and it will work, otherwise it will fail as you saw.\r\n\r\nIf you cannot, or don't want to, install PHP zip extension, then the only choice you have is to use built-in PCLZIP like you did in second example.. Can you provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue? And don't forget to mention what version of this project you are using. That way there will be more chance for the issue to be solved.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Would you be able to submit a PR for that against PhpSpreadsheet develop branch ? At least some beginning of a fix ?. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Duplicate of https://github.com/PHPOffice/PhpSpreadsheet/issues/74, migrate to PhpSpreadsheet to solve it.. You can apply the patch yourself, it's not that big: https://github.com/PHPOffice/PhpSpreadsheet/pull/113/files. PHPExcel itself will be obsoleted by PhpSpreadsheet soon. I don't think it's worth the change, but thanks for letting us know.\r\n\r\n@MarkBaker or @Progi1984, could you please add a second person to that package on packagist and also https://packagist.org/packages/phpoffice/phpspreadsheet, so that we are sure that there is always somebody who can edit it ?. I think PHPExcel_Settings::setLibXmlLoaderOptions() should allow you to do that without patching PHPExcel. Upgrade to PHPExcel 1.8.1, and try again.\r\n\r\nThere is [no code at all on line 625 in PHPExcel 1.8.1](https://github.com/PHPOffice/PHPExcel/blob/1.8.1/Classes/PHPExcel/Reader/Excel5.php#L625).. Your formula is invalid because it misses quotes. This will work:\r\n\r\n```php\r\nvar_dump(PHPExcel_Calculation::getInstance()->parseFormula('=\"clich\u00e9\"'));\r\n```\r\n\r\nand correctly output:\r\n\r\n```\r\narray(1) {\r\n  [0] =>\r\n  array(3) {\r\n    'type' =>\r\n    string(5) \"Value\"\r\n    'value' =>\r\n    string(9) \"\"clich\u00e9\"\"\r\n    'reference' =>\r\n    NULL\r\n  }\r\n}\r\n```. Hyperlinks are [not supported in XML reader](http://phpspreadsheet.readthedocs.io/en/develop/references/features-cross-reference/). If you need it please consider submitting a PR against PhpSpreadsheet develop branch.. Could you provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue without the use of external file please ?. thanks ! I can reproduce it even in PhpSpreadsheet:\r\n\r\n```php\r\nrequire __DIR__ . '/vendor/autoload.php';\r\n\r\nuse PhpOffice\\PhpSpreadsheet\\Spreadsheet;\r\nuse PhpOffice\\PhpSpreadsheet\\NamedRange;\r\nuse PhpOffice\\PhpSpreadsheet\\Calculation;\r\n\r\n$objPHPExcel = new Spreadsheet();\r\n$objPHPExcel->getActiveSheet()->setCellValue('A1', 'kiki');\r\n$name = html_entity_decode('clich&eacute;');\r\n$objPHPExcel->addNamedRange(new NamedRange($name, $objPHPExcel->getActiveSheet(), 'A1'));\r\n$res = Calculation::getInstance($objPHPExcel)->parseFormula('=' . $name);\r\nvar_dump($res);\r\n```. No, I didn't file an issue on PhpSpreadsheet. I wish we could move issue across projects...\r\n\r\nA beta release is planned \"soon\".... Closing here. This is a bit vague. What is \"part of the program\", PHPExcel, Opencart, custom code? What does \"locking me out of the site\" mean? And what is the full error message and trace ?. I am afraid I won't be able to help much. It seems to be specific to Opencart and it's a system I am not familiar with. Hopefully somebody else can help you, or you can debug deeper to get more details.\r\n\r\nFor now I am closing, because there is no clear sign that it is a bug within PHPExcel itself.. I don't think font size is meant to include a unit. I'd need an explanation of why it has a unit in your case, where it comes from, and a reference to the specification that says so.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. You must bootstrap PHPExcel properly with something like:\r\n\r\n```php\r\nrequire_once 'vendor/phpoffice/phpexcel/Classes/PHPExcel.php';\r\n```. @digitalmanagerit not exactly a PHP version, but a PHP extension. If you want to use `\\ZipArchive();` you must install PHP `zip` extension. Unfortunately PHPExcel also have a class named `ZipArchive` that might conflict with the extension if not used properly.. Read the [changelog](https://github.com/PHPOffice/PHPExcel/blob/1.8.1/changelog.txt) to know about changes to 1.8.1.\r\n\r\nThe best you can hope for PHPExcel 1.7.9, which was released on 2013-06-02, is PHP 5.5 which was released 2013-06-20. Anything newer than that cannot be guaranteed.. Indeed [conditional formatting in XLS is not supported](http://phpspreadsheet.readthedocs.io/en/develop/references/features-cross-reference/).. This is the case since https://github.com/PHPOffice/PhpSpreadsheet/commit/ea5663bc005bcd0277ca18e563b305fe3151b3a4. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. It was added, already commented out, in 13f227c by Mark. It is unclear why it was done that way since the commit seems to be unrelated to styles.\r\n\r\nWould you please try to create a PR to enable this code in PhpSpreadsheet develop branch and add tests to cover it ?. The migrator class should give you [a good idea](https://github.com/PHPOffice/PhpSpreadsheet/blob/develop/src/PhpSpreadsheet/Helper/Migrator.php#L136) of how things changed.. This is out of scope of the project. Refer to rsync manual for proper handling of spaces.. Migrate to PhpSpreadsheet for support of PHP 7.1. Yes, unfortunately PHPExcel will not be updated anymore. At least not by me. Sorry for the inconvenience.. Duplicate of https://github.com/PHPOffice/PhpSpreadsheet/issues/74 and solved in https://github.com/PHPOffice/PhpSpreadsheet/pull/113/commits/6a0a5d9cefbd91365f92ec13288e70146c62e7dc. Unfortunately, it is not yet released. Read about reading large files there: http://phpspreadsheet.readthedocs.io/en/develop/topics/reading-files/#spreadsheet-reader-options (same concepts apply to PHPExcel). Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Not sure what is going here, but it seems to be a mistake. . https://github.com/PHPOffice/phpspreadsheet#phpexcel-vs-phpspreadsheet-. The double conversion was wrong and has been fixed in PhpSpreadsheet. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. See https://github.com/PHPOffice/PHPExcel/issues/119#issuecomment-11996725. This looks like a mistake, closing.. PHPExcel is not compatible with PHP 7.1. Consider migrating to PhpSpreadsheet instead.. Upgrade to PhpSpreadsheet. http://phpspreadsheet.readthedocs.io/en/develop/topics/reading-and-writing-to-file/#setting-csv-options. Was fixed in https://github.com/PHPOffice/PhpSpreadsheet/commit/035281f04cc05f33919da8c0ac230de69cd7a675. Actually, yes it can: https://github.com/PHPOffice/PHPExcel/blob/1.8/Documentation/markdown/Overview/10-Reading-and-Writing.md#reading-a-csv-file. See http://phpspreadsheet.readthedocs.io/en/develop/ (and [maybe that too](https://github.com/PHPOffice/phpspreadsheet#phpexcel-vs-phpspreadsheet-)). Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. XLS is a binary format and thus end of lines are not relevant. XLS files created by PHPExcel work on all OS with all major software (including LibreOffice).. It means you must not do anything with end of line. And it is not possible with PHPExcel to do what you want, because it would break the file.. I think the real question here is why do you try to vewi/edit a XLS file with a text editor ?. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Try to [enable error reporting](https://stackoverflow.com/a/21429652/37706) on your server and find out in the logs what exception is thrown. That should include a error message and a full stacktrace.. Was fixed in https://github.com/PHPOffice/PhpSpreadsheet/commit/3bd0f6f9854bf858a0061eb52d4610467c3848d9. Was fixed in https://github.com/PHPOffice/PhpSpreadsheet/commit/c2b38b0ee02475867a44659bf6ac70e89270b115. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Closing for lack of info. Thanks for letting me know. Fixed in PhpSpreadsheet. Most likely not a bug within PHPExcel itself, but rather PHP the language or something else in in your environnement.\r\n\r\n[PHP 5.3 has been unsupported for almost 3 years](http://php.net/eol.php), upgrade to PHP 5.6, or better yet PHP 7.1.. @robregonm and @juliogm12 try to remove all HTTP headers and switch to HTML writer and triple check that PHP error reporting is at its maximum and that there is not a single warning and that the generated HTML is correct according to your expectation.\r\n\r\nIf that leads to nothing, try to switch the ZIP lib used with something like:\r\n```php\r\nPHPExcel_Settings::setZipClass(PHPExcel_Settings::PCLZIP);\r\n```. nope, more like:\r\n\r\n```php\r\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'HTML');\r\n```\r\n\r\nThis will output the first sheet of Excel file as an HTML table. Quite convenient for debugging things.... PHP 7.1 is not supported and is likely to break somewhere at some point. You should consider migrating to PhpSpreadsheet develop branch.. You are not using the official PHPExcel 1.8.1, because the variable `$zipClass` cannot be undefined at that line. See [the code for yourself there](https://github.com/PHPOffice/PHPExcel/blob/1.8.1/Classes/PHPExcel/Writer/Excel2007.php#L226-L227).\r\n\r\nUpgrade to [PHPExcel 1.8.1](https://github.com/PHPOffice/PHPExcel/releases/tag/1.8.1).. https://github.com/PHPOffice/PHPExcel/blob/master/Documentation/markdown/Overview/01-Getting-Started.md#php-complains-about-ziparchive-not-being-found. https://github.com/PHPOffice/PHPExcel/blob/master/Documentation/markdown/Overview/01-Getting-Started.md#php-complains-about-ziparchive-not-being-found. @wakikuk \"Please help me\" is not an appropriate title. It should be a short description of the problem.\r\n\r\nAlso you should [read the documentation](https://github.com/PHPOffice/PHPExcel/blob/1c8c2379ccf5ab9dd7cb46be965821d22173bcf4/Documentation/markdown/Overview/10-Reading-and-Writing.md#setting-the-images-root-of-the-html-file) before asking for help.. Wrong project, try over there: https://github.com/PHPOffice/PHPWord. 4.8MB is not that big nowadays, I'm not sure why this would be a problem for any hosts. I often get 50-100MB of vendored libraries in my projects.\r\n\r\nHowever you could manually delete `Documentation/`, `Examples/` and `unitTests/`. Those folders are useless for production environnement.. > thus it is not linked to the values that are updated\r\n\r\nThen it is linked to the file itself. Try to modify the file, for instance by deleting columns/rows, until it works to identify exactly what cell and what cell content is the problem.\r\n\r\nAlso next time, please take care of formatting your message. Either use the toolbar or ``` syntax to format code blocks.. Wrong project, try over there: https://github.com/iliaal/php_excel. http://lmgtfy.com/?q=PHPExcel+%20laravel. Your frustration for not being able to code a loop is certainly not a good indicator of the quality of this library.\r\n\r\n```php\r\n<?php\r\n\r\nrequire __DIR__ . '/vendor/autoload.php';\r\n\r\nuse PhpOffice\\PhpSpreadsheet\\Spreadsheet;\r\nuse PhpOffice\\PhpSpreadsheet\\Writer\\Xlsx;\r\n\r\n$spreadsheet = new Spreadsheet();\r\n$sheet = $spreadsheet->getActiveSheet();\r\nforeach (range(1, 10) as $i) {\r\n    $sheet->setCellValueByColumnAndRow($i, 1, $i);\r\n}\r\n\r\n$writer = new Xlsx($spreadsheet);\r\n$filename = '/tmp/test.xlsx';\r\n$writer->save($filename);\r\necho 'saved to: ' . $filename . PHP_EOL;\r\n```. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. @derekrprice if you are going to submit a PR, please submit it against PhpSpreadsheet develop branch, not PHPExcel. Nothing will be merged for PHPExcel anymore. And since PhpSpreadsheet is not released yet, it might be our best chance to break compatibility, if you are able to explain the reason for the break and provide a patch that is covered by unit tests.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Please provide a [**Minimal**, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue without relying on an external file. This look far from minimal code to trigger the issue.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.\r\n\r\nIf you decide to submit a PR to PhpSpreadsheet, we should adopt a similar strategy than in https://github.com/PHPOffice/PhpSpreadsheet/pull/186, that is keep the validation for normal usage, but allow a non-validated value only when reading files.. I can confirm something is wrong with bubble chart. I also got empty chart\nwith the sample code in PhpSpreadsheet. If you can debug it further, please\nreport your findings and consider contributing a patch.\n. Was fixed in https://github.com/PHPOffice/PhpSpreadsheet/commit/408da0c17a7c198a2f0de44450902c711b9ef4c6. An easier way to test that, would be (with PhpSpreadsheet, but it's mostly same):\r\n\r\n```php\r\nvar_dump(\\PhpOffice\\PhpSpreadsheet\\Calculation\\Statistical::SLOPE([1, 1], [1, 1]));\r\n```\r\n\r\nWould you consider creating a PR for that against PhpSpreadsheet develop branch ?. PHP 7.2 is not supported and will never be, please consider migrating to PhpSpreadsheet. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. PHP 7.1 is not, and will not be, supported. Upgrade to PhpSpreadsheet instead.. Thank you for reporting in details.\r\n\r\nNext time please consider contributing a PR on PhpSpreadsheet develop branch.. Was already fixed in https://github.com/PHPOffice/PhpSpreadsheet/commit/004a1929221f759be2737d14f0138a0dd34a362f#diff-b1864d72ee83e62b9be406443ac9b5ceL793. Thank you for reporting though !. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. https://github.com/PHPOffice/PHPExcel/search?q=Class+%27ZipArchive%27+not+found&type=Issues&utf8=\u2713. Was fixed in https://github.com/PHPOffice/PhpSpreadsheet/commit/9767112b23de2f93d4e035bcc468174a8308640e. Also PHPExcel does not support PHP 7.1. Consider upgrading to PhpSpreadsheet. PHPExcel does not support PHP 7.1, consider upgrading to PhpSpreadsheet instead.. Fixed in PhpSpreadsheet (because it uses ZipArchive instead), consider upgrading.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Fixed in PhpSpreadsheet, consider upgrading.. Fixed in https://github.com/PHPOffice/PhpSpreadsheet/blob/1cec98016776338f3c30ef1bbfe66074d6b929aa/composer.json#L47. Duplicate of https://github.com/PHPOffice/PhpSpreadsheet/issues/74, migrate to PhpSpreadsheet to solve it.. I confirm the issue still exists and can be summed up like so: \n\n| Formula | Excel 2010 | PHPExcel |\n| --- | --- | --- |\n| `=\"a\" = \"a\"` | TRUE | TRUE |\n| `=\"a\" = \"A\"` | TRUE | FALSE |\n| `=\"A\" = \"A\"` | TRUE | TRUE |\n| `=\"A\" = \"a\"` | TRUE | FALSE |\n\nInterestingly LibreOffice 4.0 seems to implement both modes. When creating a new document, it will be case sensitive (default behavior), but if you save it as .xlsx and re-open it, it will switch to case insensitive (Excel compatible behavior). The documentation does not mention anything though: https://help.libreoffice.org/Calc/Operators_in_Calc\n\nMy opinion is PHPExcel is not called PHPLibreOffice for a reason, and as much as it pains me to say it, I would implement Excel behavior as closely as possible.\n\nI will have a look at PHPExcel source code and see if I can submit a PR...\n. I should add that Google Drive spreadsheets, behave the same way as Excel. One more argument in favor of Excel behavior for what it is worth...\n. I updated my original Pull Request, and it now properly support compatibility mode setting to use case sensitive for OpenOffice and case insensitive for everything else.\n\nOn a side note, I noticed PHPExcel unit tests would need a lot of love to fix them all. If I ever happen to do some of that work, on which branch should it be ? develop or develop_2.0.0 ?\n. Thank you for the clarification. I was indeed wondering how you planned to\nmerge those very heavy changes.\n. Duplicate of https://github.com/PHPOffice/PhpSpreadsheet/pull/177#issuecomment-309699114. 1.7.4 was released on the 2010-08-26, almost 7 years ago. You should absolutely upgrade.. Closing because obsolete.. At this point in time, it seems unlikely that it will ever get merged, so closing.. I am not quite sure but it might have been fixed in PhpSpreadsheet. Would you like to test it and report your findings?. @gekannt try that: https://github.com/PHPOffice/PhpSpreadsheet/blob/develop/samples/21_Pdf_TCPDF.php. And tcpdf version is declared there: https://github.com/PHPOffice/PhpSpreadsheet/blob/develop/composer.json#L36. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/a7155d889080c52ff293768d27ffa3f40e74b9af. Closing because it should be fixed in PhpSpreadsheet according to Mark. If you happen to create a PR for that, please target PhpSpreadsheet, instead of PHPExcel.. Yep, it would be best. PhpSpreadsheet is PHPExcel renamed, it's mostly the same code base, so same features. You should also cover you work with unit tests, so that the feature doesn't break again in the future.. @sbrowett, @mvl22 if one of you can rebase the PR on https://github.com/PHPOffice/PhpSpreadsheet develop branch (respecting new code formatting), then I'll merge it over there.\n. This is not what you want to hear but xls format was introduced in 1998 and replaced by xlsx in 2007. Today, 10 years later, it should be more than safe to use xlsx instead of xls.. @MarkBaker, may I kindly request your attention on this PR ?\n\nThe aim of this PR is to get the unit tests to be successful as soon as possible, to be able to build upon a clean base and stop neglecting unit tests (and fix the existing one that need to be fixed). **The sooner it is merged, the better**.\n\nMy hope is that the green \"build success\" button from Travis displayed on the landing page of the project (currently red), will send a positive signal to the community. So, all contributors will be able to easily submit patches along with their unit tests. Obviously minimizing regression risks in the long term, and improving overall quality of PHPExcel.\n\nThanks for your time !\n. @MarkBaker, @maartenba would there still be an interest for this PR ? I am willing to put the effort to update it if you think that it's worth it. Otherwise we should just reject it.\n\nMost notably dropping PHP 5.2 support would really be a good thing. It's been almost 4 years since PHP [5.2 is officially obsolete](http://php.net/eol.php).\n. @Progi1984 I see that they are still +100 failing tests on Travis for any given PHP versions. What is the strategy for those ? If they are not skipped, as suggested, it will only add noise for newly implemented tests or newly failing tests. \n\nI'd go as far as to say that the situation got worse since the time I created this PR. It used to be only ~50 failing tests. And now it is more than twice that.\n\nObviously the best way to go is to fix all of them at once. But this will take (a lot of) time and meanwhile the situation will degrade even further.\n\nWhat are you thoughts on that ?\n. This is great news, thanks a lot. I'll spend some time on that 1.9 branch then.\n. @joe15000 would you be interested in submitting a PR against PhpSpreadsheet that would break BC and change the behavior (without extra flags) ?. thanks for the contribution @wernerkrauss . The original bug was fixed in 1.8.1 which was released a while ago. The rest of the mentioned bugs were fixed in https://github.com/PHPOffice/PhpSpreadsheet develop branch\n. @seemas-grazitti, please do not copy-paste your issue report in other threads.. Can't reproduce with PHPExcel 1.8.1 (and master) with your example.xlsx and the following code:\n\n``` php\n<?php\n\nrequire_once 'PHPExcel/Classes/PHPExcel.php';\n\n$name = 'example.xlsx';\n$excel = \\PHPExcel_IOFactory::load($name);\n$sheetData = $excel->getActiveSheet()->toArray(NULL, FALSE, FALSE, TRUE);\nvar_dump($sheetData);\n```\n\nWould you have other information to share to reproduce your case ?\n. Could you try to reproduce the problem outside of the web server and outside of cakePHP to see if they have anything to do with this ?\n\nAlso what version of PHPExcel do you use?\n. Unfortunately I am not familiar enough with CakePHP to help you. Sorry about that.\n\nMeanwhile I'll close this issue because the cause seems to be unrelated to PHPExcel.\n. Should be solved in https://github.com/PHPOffice/PhpSpreadsheet/commit/b964788d5c55f9c08a2320579d33a809bfa6c1f2. Obsolete, because it was heavily refactored in PhpSpreadsheet.. Closing this PR because it mixes several commits from different things and is quite old.\n\nIf you feel that something should be fixed, please create a new PR against https://github.com/PHPOffice/PhpSpreadsheet develop branch from a dedicated branch on your fork.\n. Install PHP zip extension if not done yet, and before any PHPExcel use, do:\r\n\r\n```php\r\nPHPExcel_Settings::setZipClass(PHPExcel_Settings::ZIPARCHIVE);\r\n```. Double-check when/where you set the settings. If done properly the class you have an error in is never even used at all.. This has been fixed (probably a long time ago) in https://github.com/PHPOffice/PhpSpreadsheet\n. Thanks @Pacoup for your answer.. Please submit a PR against [PhpSpreadsheet](https://github.com/PHPOffice/phpspreadsheet#phpexcel-vs-phpspreadsheet-) develop branch.. @DaumantasPHP, please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue. And don't forget to mention what version of this project you are using. That way there will be more chance for the issue to be solved.\n. Closing as per [Mark's comment](https://github.com/PHPOffice/PHPExcel/issues/588#issuecomment-249544915).\n. @mikehaertl, despite its name PHPExcel is not really geared toward a specific product, but rather a file format. So if you are able to find that there is indeed something wrong in the file generated by PHPExcel, I will gladly review it.\n\nBut I wasn't able to find anything myself. And that's why I relied on Mark's expertise on the topic to close this issue.\n. Thanks for the contribution. This has be done in https://github.com/PHPOffice/PhpSpreadsheet/commit/67dee17d6781546ff42d54cd9ae2ccfaa79b1f52#diff-df5549a12a3d29d72c3d6cf5bcabc399L33\n. Closing as this is outdated and will be addressed by https://github.com/PHPOffice/PhpSpreadsheet/issues/20\n. It seems you have a good grasp of the issue. Would you like to try to submit a patch and unit tests in a PR against [PhpSpreasheet](https://github.com/PHPOffice/phpspreadsheet#phpexcel-vs-phpspreadsheet-) ?. Closing as per OP's request in #604\n. Could you make an example of code to reproduce the bug ?\n. This has been solved a while ago. Upgrade to latest PHPExcel.\n. @thilina19 you should not have space in a class name, ever. This is unrelated to PHP 7.\r\n\r\nI am locking this thread, because **PHPExcel 1.8.1 is compatible with PHP 7**.. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/62345ef4da075f16c9dbe79d8962e26f2d0d8dd7. The [line 244 in PHPExcel 1.8.1 is a blank line](https://github.com/PHPOffice/PHPExcel/blob/372c7cbb695a6f6f1e62649381aeaa37e7e70b32/Classes/PHPExcel/Calculation/LookupRef.php#L244). So either the error message is wrong, or you don't have the latest version.\r\n\r\nPlease provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue with latest version. That way there will be more chance for the issue to be solved.. This works. Please downgrade to a stable release, or if you really need bleeding edge, upgrade to [PhpSpreadsheet](https://github.com/PHPOffice/phpspreadsheet#phpexcel-vs-phpspreadsheet-).\r\n\r\n![image](https://cloud.githubusercontent.com/assets/72603/21535362/536c927c-cdb7-11e6-82ba-66bb9b4d28f2.png)\r\n. The solution suggested in PR #690 should be rebased on top of PhpSpreadsheet develop branch if the issue still exists.. Obsolete, because next version PhpSpreadsheet, will require PHP 5.5+.. This is solved in latest version of PHPExcel, 1.8.1.\n. It **is** broken on PHP 7.1, and was only fixed in https://github.com/PHPOffice/PhpSpreadsheet/commit/5df662e1a36d6363cc63e7d83cc48610769de792, not in PHPExcel.. Thank you for those quality commits. They have been merged for next version in https://github.com/PHPOffice/PhpSpreadsheet\n. Closing because already implemented in PhpSpreadsheet.. @Vinksyunit the origin of this line goes all the way back to the [very first commit of this project](https://github.com/PHPOffice/PHPExcel/blob/509f27e5c601c002090af18a5dd545b06b7183ca/Classes/PHPExcel/Reader/Excel2007.php#L1269). Unfortunately I don't think anybody know what was the original purpose.\n\nHowever if you or @rudyZanotti can submit a PR, that includes unit tests, against https://github.com/PHPOffice/PhpSpreadsheet's develop branch, I'll merge it.\n. Actually I had a better look at this issue, and I can't reproduce it. Where does your file come from ? Could you please share code and file that could allow us to reproduce ?\n\nThis code:\n\n``` php\n<?php\n\nrequire 'Classes/PHPExcel.php';\n\n$filename = 'test.xlsx';\n$originalTitle = \"FEUILLE d'ARRIVEE\";\n\n// Write file\n$workbook = new PHPExcel();\n$sheet = $workbook->getActiveSheet();\n$sheet->setTitle($originalTitle);\n$writer = new PHPExcel_Writer_Excel2007($workbook);\n$writer->save($filename);\n\n// Read file\n$reloadedWorkbook = PHPExcel_IOFactory::load($filename);\n$title = $reloadedWorkbook->getActiveSheet()->getTitle();\nvar_dump($title === $originalTitle);\necho 'PHPExcel version: ' . `git describe --always`;\n```\n\nwill output as expected:\n\n```\nbool(true)\nPHPExcel version: 1.8.1\n```\n\nSo that means that PHPExcel is able to write and read sheet titles containing apostrophes. And also that LibreOffice Calc 5.1 is able to read files written by PHPExcel and PHPExcel is able to read files written by LibreOffice.\n\n@rudyZanotti feel free to participate here, if you can help us reproduce the case.\n. I could reproduce with your file and the following code:\n\n``` php\n<?php\n\nrequire_once 'Classes/PHPExcel.php';\n\n$excelTemplate = \\PHPExcel_IOFactory::createReader('Excel2007');\n$workbook = $excelTemplate->load('sample_issue.xlsx');\n\n$objWriter = \\PHPExcel_IOFactory::createWriter($workbook, 'Excel2007');\n$objWriter->save('out.xlsx'); // crash here\n```\n\nContrary to what your code implied the crash happened on `save()`, not on `createWriter()`. Also your file was needed to reproduce because it actually is related to the print area. My previous attempt did not have any print area specified, so the crash was not triggered.\n\nAnyway, I merged a fix (highly inspired by your PR) in https://github.com/PHPOffice/PhpSpreadsheet/commit/e95a2670347f87dc96cca9d88a9c2e904a73bb17\n. The file generated by CreateExcel2007.txt shows correctly in Excel 2016. Is this not what you expected ?\r\n\r\n![image](https://cloud.githubusercontent.com/assets/72603/20736885/c99bdb24-b6ec-11e6-8002-df3096dd5598.png)\r\n\r\n(it will show incorrectly in LibreOffice 5 though, but I believe it is a known issue from LibreOffice). Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/3bd0f6f9854bf858a0061eb52d4610467c3848d9. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/48a6e86adc4d33d6ec7a8aaa045775211ddb5057. Merged https://github.com/PHPOffice/PhpSpreadsheet/commit/b964788d5c55f9c08a2320579d33a809bfa6c1f2 instead. @stefandoorn it should be re-submitted against https://github.com/PHPOffice/phpspreadsheet develop branch (implying rebase-ing and codestyle and namespace adaptations). It should also be tested with unit tests.\n. @stefandoorn it is the next version indeed. It's not yet released, but all development happens over there now.\n. Before rebasing we should wait to see what happens with cache refactoring as planned in https://github.com/PHPOffice/PhpSpreadsheet/issues/3. This is very unlikely to happen in the foreseeable future unless somebody from the community step up and provides an implementation. And if somebody actually want to do that, it should be done in PhpSpreadsheet.. Thank you, your contributions are now part of the next release:\n- https://github.com/PHPOffice/PhpSpreadsheet/commit/b42bafcfe7e44ddb9cadb1882e8782f0eee24adb (amongst other things)\n- https://github.com/PHPOffice/PhpSpreadsheet/commit/d8850176a163afcf43f987be1e8dffceab5b1cfc\n- https://github.com/PHPOffice/PhpSpreadsheet/commit/6acd40325158bb905eb3005b8fbb9618c71af043\n. As said it was merged in https://github.com/PHPOffice/PHPExcel/commit/141d64d#diff-2969e907f49ca264dd0d46e15b2c8d65L491\n. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/b964788d5c55f9c08a2320579d33a809bfa6c1f2. @kamazee thanks for your work. Don't need to backport anything, because PHPExcel will not be updated anymore.\n. `\\PhpOffice\\PhpSpreadsheet\\Shared\\Date` was refactored heavily and this patch cannot be merged anymore.. Migrate to PhpSpreadsheet.. Thank you for the PR. It has been fixed for next version in https://github.com/PHPOffice/PhpSpreadsheet/commit/f02c3320a280a12431ddd9ed2a94da95dc9fe664\n. Thanks. This has been fixed for next release in https://github.com/PHPOffice/PhpSpreadsheet/commit/b42bafcfe7e44ddb9cadb1882e8782f0eee24adb\n. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/39b8dbd0a1fda087d229e3abbcc666275fc3d35a. Can PHPExcel re-read the written files ?\n. Should be solved by https://github.com/PHPOffice/PhpSpreadsheet/commit/b964788d5c55f9c08a2320579d33a809bfa6c1f2. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/2484a03f19950a923490f391b7e3678c15a69b1f. Have you tried unzipping the xlsx before and the one after the operation to compare its content ? That should at least give you a hint of what is not behaving as expected.. It seems it misses the possibility to specify a `DataType`, so `setValueExplicit()` is always called with default `DataType`. I'd suggest to pass an optionnal `DataType` to `fromArray()`, if null use `setValue()`, if not null use `setValueExplicitly()` with given value.\r\n\r\nAlso PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please head over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. This has been done in https://github.com/PHPOffice/PhpSpreadsheet/commit/850594c#diff-495ca961ee5a4a2ab5ae21e6a550a384L229 and more generally in `DateTimeInterface` are introduced in the context of  https://github.com/PHPOffice/PhpSpreadsheet/issues/7\n. This has been done in https://github.com/PHPOffice/PhpSpreadsheet/commit/850594c#diff-495ca961ee5a4a2ab5ae21e6a550a384L229 and more generally in `DateTimeInterface` are introduced in the context of  https://github.com/PHPOffice/PhpSpreadsheet/issues/7\n. This is no longer relevant in https://github.com/PHPOffice/PhpSpreadsheet\n. I believe this can be closed now.\n\n@phansys if you have other interesting contributions, please head over https://github.com/PHPOffice/PhpSpreadsheet\n. @RubenMartins nothing at all, except it [has now been documented](http://phpspreadsheet.readthedocs.io/en/develop/references/features-cross-reference/). Nowadays most features are implemented by contributors, you guys, not the team. If nobody step up, it will never be available. If you do implement it, please target PhpSpreadsheet instead of PHPExcel.. Thank you, this has been done in https://github.com/PHPOffice/PhpSpreadsheet/commit/54d2f72#diff-99e032cc5cf1c51225bd46cc1c4e106aL82\n. Thanks for the PR. This has been for the next version.\n. Thanks for the contribution. It has been merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/30bb53ebf83520d911106576905ae9f0af093a56\n. It seems you have a good idea on how to fix this. Would you like to submit a PR for that ? possibly covering it with unit tests ?\n. @Gigabyte1979 I am not sure why you intervened here. Are you working with @Quix0r ? Or do you happen to have the same issue in a different context ?\n. As you [can see here](https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/IOFactory.php#L225), PHPExcel itself use a detection based on file extension too. It seems unlikely that this would not work, unless it is not used correctly.\n\nI tried to reproduce what you described with the following code and attached file [some_foo_file.csv_incoming.xlsx](https://github.com/PHPOffice/PHPExcel/files/440437/some_foo_file.csv_incoming.xlsx), but it works as expected. So I am closing this, unless you can give us a reproducible case.\n\nThis code:\n\n``` php\n<?php\n\nrequire 'Classes/PHPExcel.php';\n\n$filename = 'some_foo_file.csv_incoming.xlsx';\n$workbook = PHPExcel_IOFactory::load($filename);\n$value = $workbook->getActiveSheet()->getCell('A1')->getValue();\n\nvar_dump($value);\necho 'PHPExcel version: ' . `git describe --always`;\n```\n\nWill correctly output:\n\n```\nstring(8) \"it works\"\nPHPExcel version: 1.8.1\n```\n. Thanks, it's been merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/08525a10c1ffadaef7af346e322bca0a031593e4\n. Thanks it has been merged for next version in https://github.com/PHPOffice/PhpSpreadsheet/commit/98e00e8843b6407288d7afcaebf253d76c2bc36b\n. While I generally agree that `require_once` should often be preferred over `require`, I can't reproduce a case where `PHPExcel_Autoloader::load()` is called more than once with the same class name, hence `require` or `require_once` should not make any difference. Maybe there is something else going on that could be a bug.\n\nWould you mind sharing the code you used for profiling and/or the list of class names you see in `PHPExcel_Autoloader::load()` ?\n. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/c1f5bdba5db90cb8ef4ad688c3d1d8dfad220f80. Development of next version moved to https://github.com/PHPOffice/PhpSpreadsheet. Could you please submit your PR against that new repository's develop branch ?\n\nSorry for the trouble\n. @gustavobeavis, thanks for your contribution. This PR has been merged as https://github.com/PHPOffice/PhpSpreadsheet/commit/ba705448464ec38f3527cd3ddc1ace20609b40b3\n\nPlease don't use 1.9 branch because it was in the middle of a major refactoring and was utterly broken. Either stay on 1.8, or move on to the future version with its new name and repository at https://github.com/PHPOffice/PhpSpreadsheet.\n. Closing as duplicate of #740. Let's continue the discussion in the older issue please.\n. It seems it can't be fixed, at least not in PHPExcel itself, so closing this issue.\n. Closing until we can reliably reproduce the case, see https://github.com/PHPOffice/PHPExcel/issues/740#issuecomment-242893363\n. This does not seem to be a bug report. I am closing it. But if you have a bug to report, feel free to add to it.\n. I assume you mean it should be `true` and not the default value of `false`, right ?\n. This is now fixed for next version in https://github.com/PHPOffice/PhpSpreadsheet/commit/c3bb4245b3d911adf82c2593a52495f01f1b3f7d.\n\nThanks for your clear bug description.\n. I am afraid that this PR cannot be merged, because it replaces a system that support multiple input encoding with hardcoded input encoding of `ISO-8859`.\n\nBut the documentation mentions something that should be helpful to you:\n\n> Note that PHPExcel_Reader_CSV by default assumes that the loaded CSV file is UTF-8 encoded. [...] Always make sure that the input encoding is set appropriately.\n\nSo something like this should work:\n\n``` php\n$objReader = new PHPExcel_Reader_CSV();\n$objReader->setInputEncoding('ISO-8859');\n```\n\nPS: next time you create a PR, try to submit only 1 commit, on a separate branch, instead of a unrelated commits all mixed together. That way it's easier to review and more likely to get merged.\n. I don't think the URL should be tested to be existing, that adds a dependency on network connection that can easily be broken and thus give different results in different context (I am thinking offline and/or unstable connection, routing issues, servers down etc.). While URL support may be interesting, I think the check whether it exists is too much.\n. I am not confident enough to merge this feature, because it opens the door to a whole lot of potential bugs/feature requests that are not well planed, and I am not sure we would like to support them.. Thanks, merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/1a2a6816fb5bb0e146524ba40aa419695c40136a\n. Thanks, merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/8fc7de7358d8c192b14f0f2fccc4fbaf3a78a57a\n. Please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue. And don't forget to mention what version of this project you are using. That way there will be more chance for the issue to be solved.\n. Please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue. And don't forget to mention what version of this project you are using. That way there will be more chance for the issue to be solved.\n\nMore specifically, include an excel file (and the code) that can be used to reproduced the problem.\n. what was that sentences about composer remove and require ?\n\ndo you `require()` any PHPExcel files in your code ?\n\nAlso what is the complete error message, including stack trace ?\n. If you want namespace, you should use https://github.com/PHPOffice/PhpSpreadsheet, but you'll have to setup a custom repo for composer since that version is not yet released. Otherwise you'll have to use latest stable, 1.8.1, not a branch.\n. PHPExcel will be out-dated when [PhpSpreadsheet](https://github.com/PHPOffice/phpspreadsheet) will be released. But it's not quite ready yet. Porting to PhpSpreadsheet should mostly be renaming class names (to include namespaces), so it should not be too much work.\n. Sure, we might even have a basic tool to help with some part of migration. But it's still a bit early for that...\n. Fixed via https://github.com/PHPOffice/PhpSpreadsheet/commit/c99ec67d6897b609d395e7b8d0f820e7a77f370a\n. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/5a3e2435c3e069abfb3e5dbcb65bdc63daa4c364\n. This seems unrelated to this project\n. IMHO it is not the responsibility of PHPExcel to fix corrupted files. And the patch provided seems to be quite fragile since it is hardcoded for a very specific cases. How can we be sure that there isn't another attribute that could be duplicated and fatal error. \n. If ms xml parser fails to parse it, then it is a corrupted file, isn't it ?\n. It is not PHPExcel responsability to fix invalid input files\n. The only supported version of IE by Microsoft [is IE 11](https://www.microsoft.com/en-us/WindowsForBusiness/End-of-IE-support), and conditonnal comments are not supported in IE 11 (since IE 10 as mentioned in [your link](https://msdn.microsoft.com/en-us/library/ms537512%28v=vs.85%29.aspx)). I don't think PHPExcel should support a technology that is obsolete and widely considered bad practice.\n. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/102c19356f4db86ee0e784d7db7d3875069a1efa\n. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/d791a0bbeb54bf6ce8ad2efe8843852f7ea41659\n. Thanks, merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/c99ec67d6897b609d395e7b8d0f820e7a77f370a\n. Thanks, merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/c94539c86c9e2790656947b87d1aa1ef211a4584\n. 1.8.1 is the last version of PHPExcel. The next version (2.0.0) is in development under the new name PhpSpreadsheet. So if you have more contributions to do, please contribute to PhpSpreadsheet instead.\n. Could you please give us a **complete** example of code that can work independently and reproduce the issue ? Especially, include the creation of the worksheet and writing it to a file.\n\nAlso what version of PHPExcel are you using ?\n. Unfortunately it doesn't seem to be a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) since that code seems to be dependent on Laravel. Try to reproduce it independently from your existing application, in a file that can run by other people without any other  dependencies than PHPExcel itself.\n. Instead of:\n\n``` php\n$sheet->getDefaultStyle();\n```\n\nUse:\n\n``` php\n$sheet->getParent()->getDefaultStyle();\n```\n\nOr more directly:\n\n``` php\n$workbook->getDefaultStyle();\n```\n. Before rebasing we should wait to see what happens with cache refactoring as planned in https://github.com/PHPOffice/PhpSpreadsheet/issues/3. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/30a5e4b893f3b7c7179711ad36331b2866efcc3c. Mark, the project lead, is very busy nowadays. And I try to push PhpSpreadsheet to a somewhat stable-ish release as soon as possible, and at the same time merge old PR from here and reply to some issues. But as you can imagine, we all have a very limited time to contribute.\r\n\r\nOn the bright side, PR to PhpSpreadsheet are very welcomed, especially if they are covered by unit tests. Sorry, I don't have a better answer to offer you.. `$readDataOnly` is already declared in `PHPExcel_Reader_Abstract` as you can [see here](https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Reader/Abstract.php#L37)\n. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Thank you for your effort, but unfortunately we won't be able to merge this. Development is now happening in https://github.com/PHPOffice/PhpSpreadsheet and the code was already heavily refactored and re-formatted. I am afraid your patch won't be applicable.\n. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/ec9e548153b4e92abbea9a7b410496a075ee5f41\n. Please submit all your PR to https://github.com/PHPOffice/PhpSpreadsheet project instead of here (see [why here](https://github.com/PHPOffice/PhpSpreadsheet#phpexcel-vs-phpspreadsheet-)).\n. I'll take care of this one though...\n. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/720fb3eff52b1103ca4ddd278e5b081162ec9fd6. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/3b4f54722fe5cf9f3322b862bed6324909d5d1b4. Closed via https://github.com/PHPOffice/PhpSpreadsheet/commit/e6bbc4bd2554305b770e016ea026e4b1d55fef98. Indirectly merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/e6bbc4bd2554305b770e016ea026e4b1d55fef98. @a3aakash, if you need it, you'll have to contribute the code to support it.. The feature does not exists at all, so somebody need to implement it. You, or someone else, could submit a patch to add this feature.\r\n\r\nI closed this issue because there is no point of leaving it open forever. I won't implement this feature myself, because of lack of time. And it's not very likely that somebody else implement such a \"big\" feature anytime soon.. PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please head over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.\n\nMoreover `sudo chmod -R 777 /var/www/` is extremely permissive and thus dangerous. It is not a good idea to suggest that as a solution. I am afraid this PR will not be merged.\n. No, there isn't, see #9. Please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue. And don't forget to mention what version of this project you are using. That way there will be more chance for the issue to be solved.\n. Merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/8c58385d6c103d23f6a5b3d1899a5e7cc8f66e92. I merged your PR on PhpSpreadsheet on the exact same subject (https://github.com/PHPOffice/PhpSpreadsheet/pull/35). You should know by now that nothing will ever be merged in PHPExcel anymore. Please keep your contribution on PhpSpreadsheet. This has been solved in [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet). It works with `\\DateTimeInterface`, making possible the use of both `\\DateTimeImmutable` or `\\DateTime`.. Can't reproduce with only renaming the file name, it always get read correctly. Did you try saving as \"aaaa.xlsx\", rename the file as \"\u753b\u9762.xlsx\" and then read that ? Or the other way around ?\r\n\r\nMy guess is the filename doesn't matter, but the file content generated differs when saving with a different name for some reason. You should be able to identify if the file are exactly the same by producing a MD5 sum of them. On Linux/OSX, that would be the command:\r\n\r\n```\r\nmd5sum aaaa.xlsx \u753b\u9762.xlsx\r\n```. I assume you use `PHPExcel_IOFactory::load($pFilename);` to load your file. Did you double-check the value of `$pFilename` ? Is it actually correct and does `var_dump(is_readable($pFilename));` return `true` ?\r\n\r\nAlso what OS/filesystem are you on ?. I am suspicious about `$encoded_filename = iconv('UTF-8', 'CP932', $filename);`, I would argue that you shouldn't need it and keep everything UTF-8 at all times. But I don't enough about filesystem encoding to know for sure...\r\n\r\nBy default PHPExcel will use [PHP's ZipArchive](http://php.net/manual/en/ziparchive.open.php) to read XLSX files. There are several bug reports about filename encoding **within** the archive. This is not the same as you see here, but still, maybe changing the ZIP handler could help...\r\n\r\nYou should be able to do that with:\r\n\r\n```php\r\n\\PHPExcel_Settings::setZipClass(\\PHPExcel_Settings::PCLZIP);\r\n```. What is the value of `$dirpath . '/', $filename` ?. Most likely it is a duplicate of https://github.com/PHPOffice/PHPExcel/issues/1071#issuecomment-263464073. Let me know if it doesn't work.. Use `setZipClass()` before `identify()`.. I am running out of ideas here... what do you get if running `composer show phpoffice/phpexcel` ? is it PHPExcel 1.8.1 ?. Thank you, but unfortunately it doesn't help us much. You correctly have the latest version 1.8.1.\r\n\r\nI just tried here on PHPExcel 1.8.1 and PHP 5.6 and 7.0 the following code\r\n\r\n```php\r\n<?php\r\n\r\nrequire 'Classes/PHPExcel.php';\r\n\r\n$inputFileName = './Documentation/Examples/Reading WorkBook Data/sampleData/example1.xls';\r\nPHPExcel_Settings::setZipClass(PHPExcel_Settings::ZIPARCHIVE);\r\n$a = PHPExcel_IOFactory::identify($inputFileName);\r\n\r\nPHPExcel_Settings::setZipClass(PHPExcel_Settings::PCLZIP);\r\n$b = PHPExcel_IOFactory::identify($inputFileName);\r\n\r\nvar_dump($a, $b);\r\n```\r\n\r\nPut that in `vendor/phpoffice/phpexcel/test.php`, then `cd vendor/phpoffice/phpexcel && php test.php`. It should give you this:\r\n\r\n```\r\n$ php test.php \r\nstring(6) \"Excel5\"\r\nstring(6) \"Excel5\"\r\n```\r\n\r\nIs it not the case ?. @Holisollogistics, please don't copy/paste your question in several threads. I don't think this an a issue specific to PHPExcel, but rather an issue of filesystem encoding. As long as `file_exists($path);` returns `false`, PHPExcel can't do anything. You have to find out what encoding you should use in order for PHP to access the file properly. Then start worrying about PHPExel.. Thank you, merged in https://github.com/PHPOffice/PhpSpreadsheet/commit/5e03e282e5fa8701e4b3c7a942b135d24c40ae9c. Unfortunately I don't think I will be able to merge this because PHPExcel development for next version has moved under its new name PhpSpreadsheet. However if you rebase your work on [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet) develop branch, I'll gladly have another look.. There is now way to read PDF with PHPExcel.. No, there isn't, because there is no way to read PDF with PHPExcel.. Please explain in the commit why you are doing this change. And I'd argue that documentation is an essential part of the package and should probably be released together with code source.\r\n\r\nAlso PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please head over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. I'm really undecided on this topic. It seems Mark modified this file back and forth too a few times. The [PHP League](https://github.com/thephpleague) and [Zend Framework](https://github.com/zendframework) do it, but [Symphony don't do anymore](https://github.com/symfony/symfony/issues/6605). IMHO docs and tests are very useful to learn how a lib works, and I often have a look at them when developing. But at the same time I see the value of reducing package size for production...\r\n\r\n@MarkBaker would you have an opinion on what should and should not be excluded from packages ?. I actually quite often `grep` on my entire project and find matches both in tests and docs which, to me, is very helpful. So yes, I do look in vendor/ for docs and tests. I believe tests are an integral part of documentation to understand internals and how the lib is supposed to be used. So for my own uses I would prefer to always have everything for development. And unfortunately `--prefer-source` make composer much slower, so I still use `--prefer-dist` even for develop.\r\n\r\nThat's why I am undecided, and @MarkBaker inputs would be very appreciated.. @MarkBaker don't you have a way to manually remove all content from codeplex ? or at the very least the homepage ? it seems to bring more confusion than anything else.... I meant more like edit it out, replace the text with blank lines. I suppose you still have editing access ?. It would be great if one of you were able to contribute a PR against PhpSpreadsheet develop branch to fix this issue. I am afraid I won't have much time to investigate this one.. Thank you for reporting back your findings. Closing as requested.. I think it's a good idea, but I am not sure how to do it. I've been\nthinking about excluding this PHP version via composer.json, but that may\nbe excessive for people who don't even use SQLite. Maybe throwing an\nexception from our code when enabling SQLite ? Or only a mention in the doc\n?\n\nWhatever we choose to do, it should only be done for PhpSpreadsheet, not\nPHPExcel.\n. I agree with the suggestion to only mention it in the docs. Could one of\nyou suggest a PR please ? I'll merge them (for PHPExcel and PhpSpreadsheet)\n. Thank you for the suggestion, I merged a variation in PHPExcel and PhpSpreadsheet.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. This one was an easy merge, so I merged it in https://github.com/PHPOffice/PhpSpreadsheet/commit/ab7aa68300057032467370a822776c7de4568f18. Closing as this is not a bug related to PHPExcel, but feel free to continue the discussion.. Thank you for reporting. Could you please [report an issue in PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet/issues/new) which includes a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that demonstrate the problem with PhpSpreadsheet ?. If you can provide a full working example with PHPExcel I'll migrate it to PhpSpreadsheet.. Thanks, however I don't have the xlsx file. Can you create it \"in-memory\" with PHPExcel, instead of reading from disk, and still reproduce the bug ?. Please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue (without nginx, and creating the spreadsheet by code without reading from files). That way there will be more chance for the issue to be solved.. The example can be even reduced further down to the following. And I am able to reproduce and confirm the bug. What you said about array compared to int seems to be correct. And it seems it is because the `$rowNum` argument is wrong. The `INDEX()` method receives an array, but is actually expecting an int. If we change that argument to an int, it works as expected. So that means the method `INDEX()` is correct and the bug is somewhere before that method...\r\n\r\nI'll let you dig further, but I suspect it may be something in `PHPExcel_Calculation::_processTokenStack()`. Also I suggest you keep debugging this after upgrading to PhpSpreadsheet, because PHPExcel is not developed anymore, and PhpSpreadsheet provides a better environnement for submitting patches (unit testing, code style checking, etc.)\r\n\r\n```php\r\n<?php\r\n\r\nrequire 'Classes/PHPExcel.php';\r\n\r\n$arrayValues = array(\r\n    1 => array(\r\n        'A' => 'Title 1',\r\n        'B' => 'AT1234',\r\n    ),\r\n    2 => array(\r\n        'A' => 'Title 2',\r\n        'B' => 'AT3456',\r\n    ),\r\n    3 => array(\r\n        'A' => 'Title 3',\r\n        'B' => 'AT5678',\r\n    ),\r\n    4 => array(\r\n        'A' => 'Title 4',\r\n        'B' => 'AT8875',\r\n    ),\r\n    5 => array(\r\n        'A' => 'Title 5',\r\n        'B' => 'AT5457',\r\n    ),\r\n);\r\n\r\n$rowNum = array(\r\n    7 => array(\r\n        'A' => 2.0,\r\n    ),\r\n);\r\n\r\n$columnNum = 2;\r\n\r\nvar_dump(PHPExcel_Calculation_LookupRef::INDEX($arrayValues, $rowNum, $columnNum)); // Wrong\r\nvar_dump(PHPExcel_Calculation_LookupRef::INDEX($arrayValues, 2, $columnNum)); // Correct\r\n```\r\n. Unfortunately STDEVS is not implemented in PHPExcel/PhpSpreadsheet as you can see there: http://phpspreadsheet.readthedocs.io/en/develop/references/function-list-by-name/#s. \r\n\r\nIf you are willing to contribute an implementation for that, please do so in [PhpSpreadsheet project](github.com/PHPOffice/phpspreadsheet).. This is the wrong project, please report to [PHPWord](https://github.com/PHPOffice/PHPWord).. In latest version, `PHPExcel_Style_Border::getStyleArray()` [doesn't look like what you described](https://github.com/PHPOffice/PHPExcel/blob/372c7cbb695a6f6f1e62649381aeaa37e7e70b32/Classes/PHPExcel/Style/Border.php#L150-L175).\r\n\r\nPlease downgrade to a stable release, or if you really need bleeding edge, upgrade to [PhpSpreadsheet](https://github.com/PHPOffice/phpspreadsheet#phpexcel-vs-phpspreadsheet-).\r\n. See #642. You should only use in production [tagged releases](https://github.com/PHPOffice/PHPExcel/releases), or better yet use composer to install your dependencies.. Thank you for reporting the issue, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. Would you please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute a patch that include unit tests ?. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches (that includes unit tests). Pull Requests will no longer be accepted for PHPExcel.. Please upgrade to latest version 1.8.1 and see if the problem still exists.. @sdespont please submit a PR to improve the documentation as you see fit on [PhpSpreadsheet](https://github.com/PHPOffice/phpspreadsheet#phpexcel-vs-phpspreadsheet-) project.. This have been fixed in https://github.com/PHPOffice/PhpSpreadsheet/commit/5a3e2435c3e069abfb3e5dbcb65bdc63daa4c364 a few weeks ago. Also be careful to use PHPExcel 1.8.1, the latest released version, and not the branch 1.8 which may contains bugs.\r\n\r\nAnd finally PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. I understand the frustration, but unfortunately we are way under-staffed to support two projects. We are only two guys Mark, the lead who is pretty busy, and myself who arrived only a few weeks ago. Please consider contributing to PhpSpreadsheet if you need to see a faster release.. Please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue. And don't forget to mention what version of this project you are using. That way there will be more chance for the issue to be solved.. Not the answer you are looking for but PHPExcel does not and will never support PHP 7.1. Instead you might want to try [PhpSpreadsheet](https://github.com/PHPOffice/phpspreadsheet#phpexcel-vs-phpspreadsheet-). But even that one has a few tests that does not pass on PHP 7.1. Any help is welcome though.... @mnvx, no there is no plan, PHPExcel is not supported anymore. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Could you update to latest 1.8.1 and see if it still happens ?\r\n\r\nAnd if it does please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue. That way there will be more chance for the issue to be solved.. Can you compare the broken file with the working file (after unzipping them) ? you may find the answer to your question.... Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. As you can see there are [several bugs with PHP 7.1](https://travis-ci.org/PHPOffice/PhpSpreadsheet/jobs/191519295) that were still not fixed. Please consider creating a PR against PhpSpreadsheet develop branch if you are able to find a solution.. @mmuman you are absolutely right. Interestingly enough the bug existed for at least 7 years, since 509f27e. I guess PHP 7.1 new strictness is a good thing ;-)\r\n\r\nFixed in PhpSpreadsheet. If you try PhpSpreadsheet and discover bugs, please consider creating PR to fix bugs (ideally covered by unit tests), because we are severely understaffed.. @Webstorm-IL, upgrade to PhpSpreadsheet, if you can, to get this solved.. As you can see there are [several bugs with PHP 7.1](https://travis-ci.org/PHPOffice/PhpSpreadsheet/jobs/191519295) that were still not fixed and thus neither PHPExcel, nor PhpSpreadsheet is compatible with PHP 7.1. Please consider creating a PR against PhpSpreadsheet develop branch if you are able to find a solution.\r\n\r\nI am closing this now because it won't be solved in PHPExcel. But it will be in PhpSpreadsheet.. I know this PR was already closed, however this is just a heads up. PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) for future contributions. Pull Requests will no longer be accepted for PHPExcel.. Please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue. And also mention what version of this project you are using. That way there will be more chance for the issue to be solved.. Would you please try develop branch of https://github.com/PHPOffice/PhpSpreadsheet and see if latest commits changed anything for you ? I don't guarantee anything, but it is worth a try.... Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. This should have been fixed in PhpSpreadsheet, because PHPEXCEL_ROOT was entirely removed to rely on composer autoloader instead. You should try it, but be aware that it is not stable yet.. I think it has been fixed in PhpSpreadsheet develop branch. Please give it a try and open an issue in PhpSpreadsheet with code to reproduce the error if it still persist.. It seems you are trying to access a sheet that does not exists. Probably when you are creating a Spreadsheet from scratch. Please provide more details on what you are trying to do, and I'll re-open the issue.. We don't have time to support old versions unfortunately, closing.. Can you please let me know what tool you used to check compatibility ?\n. Can you please give a link to said plugin page ?\n. Thank you, the underlying tool used is https://github.com/wimg/PHPCompatibility. We [dropped support for SQLite 2 in PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet/commit/6e247c30d9e23e36072adef2d9ea265be9192b09). That should solve all remaining issues.. Upgrade to PHPExcel 1.8.1. In that latest version, there is [nothing on line 86](https://github.com/PHPOffice/PHPExcel/blob/372c7cbb695a6f6f1e62649381aeaa37e7e70b32/Classes/PHPExcel/Reader/Excel2007.php#L86). So you should not experience that bug if you had latest version.. Upgrade to PHPExcel 1.8.1. [Download it from here](https://github.com/PHPOffice/PHPExcel/releases/tag/1.8.1).. Then you probably don't have zip extension for PHP. What will the following code return ?\r\n\r\n```php\r\nvar_dump(extension_loaded ('zip'));\r\n```\r\n\r\nThis might be solved by installing the extension, or using an alternative implementation via:\r\n\r\n```php\r\nPHPExcel_Settings::setZipClass(PHPExcel_Settings::PCLZIP);\r\n```. This should be the first thing before using PHPExcel. Eg:\r\n\r\n```php\r\n// Use PCLZip rather than ZipArchive\r\nPHPExcel_Settings::setZipClass(PHPExcel_Settings::PCLZIP);\r\n$phpExcel = PHPExcel_IOFactory::load(\"filename.xlsx\");\r\n// your code here...\r\n```. this is a warning, not an error. You can't do much about it now, unless migrate to unstable 1.8 branch (not recommended), or migrate to [PhpSpreadsheet](https://github.com/PHPOffice/phpspreadsheet#phpexcel-vs-phpspreadsheet-) (only if you understand the risks).. Read this [part of PhpSpreadsheet doc](http://phpspreadsheet.readthedocs.io/en/develop/topics/reading-files/#spreadsheet-reader-options), it is also applicable with PHPExcel (although the namespace names changes, the concepts are identical). This should allow to read only the part that you need.\r\n\r\nAnd also read [about caching](http://phpspreadsheet.readthedocs.io/en/develop/topics/settings/#cell-caching), which may help too.\r\n\r\nFinally, try to post question on StackOverflow instead of here.. Done in https://github.com/PHPOffice/PhpSpreadsheet/commit/fb1d280e825381c97acd62e5e4292bea47e15785. From the description, it is not clear what result you are expecting, and what result you are actually seeing. Please clarify and provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits the issue. Unfortunately the code provided cannot be run by itself.. Unfortunately, I still cannot run your code, please provide a **complete** code example that can be copy/pasted and run.. We recently merged a commit for a similar issue in https://github.com/PHPOffice/PhpSpreadsheet/pull/95, so I think it would make sense to also solve this one. Would you create a PR against PhpSpreadsheet develop branch ?. Most likely fixed by https://github.com/PHPOffice/PhpSpreadsheet/commit/de5a04e4cbc83d6e1a7a4cdb1427873d07d861ae (because HTML is used to generate PDF). It seems to me that you are calling `rangeToArray` way too many times. Either drop the `for` loop and keep `rangeToArray('A' . $row . ':' . $highestColumn . $row, ...)`, or keep the `for` loop and read only one row at a time with `rangeToArray('A' . $row . ':' . $row . $row, ...)`.. Also don't [cross-post](http://stackoverflow.com/questions/42546111/does-count-of-row-column-of-an-excel-file-that-contain-data-affect-its-read-fil). For support use only StackOverflow, not this issue tracker.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. This may be PHP timing out before it could send everything. Try to increase PHP `max_execution_time` or speed up the file generation somehow (less data, or more efficient).. ([see here](http://phpspreadsheet.readthedocs.io/en/develop/topics/recipes/#setting-a-columns-width) for a slightly better formatting). Thanks for the contribution. Please next time target PhpSpreadsheet develop branch for easier/faster merging.. Please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue, without the need for any external Excel files. And don't forget to mention what version of this project you are using. That way there will be more chance for the issue to be solved.. `range()` is not doing what you think, as demonstrated by this command:\r\n```sh\r\n$ php -r \"var_dump(range('AA','AY'));\"\r\nCommand line code:1:\r\narray(1) {\r\n  [0] =>\r\n  string(1) \"A\"\r\n}\r\n```\r\n\r\nYou need something else than `range()`.. Did you try that https://github.com/PHPOffice/PHPExcel/blob/1.8/Documentation/markdown/Overview/04-Configuration-Settings.md#cell-caching ?. Is it a PHP timeout issue ?. Fixed in https://github.com/PHPOffice/PHPExcel/commit/0025318d7e76e100cbfa134189950d265c3cded4. It seems like your excel file _may_ have been wrongly generated. Where does it come from ?. Closing as per Mark's comment (he was talking about 818413e). The solution being to use PhpSpreadsheet develop branch for now. Please consider contributing a PR to PhpSpreadsheet develop branch. PHPExcel is not maintained anymore, and all debugging/contributing should be done with PhpSpreadsheet instead.. This is solved in (unreleased) PhpSpreadsheet develop branch.. Will be hard to help without more info. It may be because the file is\r\nwrongly generated. You may also try PhpSpreadsheet develop branch, that\r\n*may* have fixed some bugs. But your description is way too vague to know\r\nmore. You'll probably have to dig in the code and debug by yourself.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.\r\n\r\nAlso where does this format comes from ?. Oh, nevermind my last question, I should have read the commit message:\r\n\r\n> [...] to replicate the format when you click the \"Accounting Number Format\" button in Excel\r\n. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. The [docs states](http://phpspreadsheet.readthedocs.io/en/develop/#installation) that you can install PhpSpreadsheet with:\r\n\r\n ```sh\r\ncomposer require phpoffice/phpspreadsheet:dev-develop\r\n```\r\n\r\nAs a workaround for PHPExcel you can use ZipArchive instead of PclZip with:\r\n\r\n```php\r\nPHPExcel_Settings::setZipClass(PHPExcel_Settings::ZIPARCHIVE);\r\n```. Then you should use the mentioned workaround, by using PHP zip extension instead of built-in PCLZip code. In fact it's more than a workaround, as PHP zip extension will be a hard requirement for PhpSpreadsheet, so you better get your environnement ready now.. I cannot reproduce what you describe with the following code. If the problem persist please open a new issue on PhpSpreadsheet that include code to reproduce the bug (by modifying the following).\r\n\r\n```php\r\n<?php\r\n\r\nrequire __DIR__ . '/vendor/autoload.php';\r\n\r\nuse PhpOffice\\PhpSpreadsheet\\Style\\NumberFormat;\r\nuse PhpOffice\\PhpSpreadsheet\\Spreadsheet;\r\n\r\n$spreadsheet = new Spreadsheet();\r\n$sheet = $spreadsheet->getActiveSheet();\r\n$original = $sheet->getStyle('A1')->getNumberFormat()->getFormatCode();\r\n\r\n// Set formatting\r\n$sheet->getStyle('A1')->getNumberFormat()->setFormatCode(NumberFormat::FORMAT_CURRENCY_USD);\r\n$before = $sheet->getStyle('A1')->getNumberFormat()->getFormatCode();\r\n\r\n// Set formula containing ()\r\n$sheet->getCell('A1')->setValue('=\"foo (bar)\"');\r\n\r\n// Assert formatting did not change and value is as expected\r\n$after = $sheet->getStyle('A1')->getNumberFormat()->getFormatCode();\r\n$value = $sheet->getCell('A1')->getCalculatedValue();\r\n$success = $before === $after && $value === 'foo (bar)';\r\nvar_dump($original, $before, $after, $value, $success);\r\n```. Thank you for your contribution, it's has been merged.\r\n\r\nHowever PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) for your next contribution.. Might be somewhat related to https://bugs.php.net/bug.php?id=70110. Would you try this ?\r\n\r\n```php\r\n        ini_set('pcre.backtrack_limit', 100000000);\r\n        ini_set('pcre.jit', 0);\r\n```. I cannot reproduce your error with the following code on PHPExcel 1.8.1 (nor on PhpSpreadsheet develop branch):\r\n\r\n```php\r\n<?php\r\n\r\nrequire __DIR__ . '/Classes/PHPExcel.php';\r\n\r\nvar_dump(PHPExcel_Style_NumberFormat::toFormattedString(1234.0, '# ?/?'));\r\n```\r\n\r\nThis will correctly output:\r\n\r\n```\r\ndouble(1234)\r\n```. Closing as duplicate of https://github.com/PHPOffice/PhpSpreadsheet/issues/134. Please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue. And don't forget to mention what version of this project you are using. That way there will be more chance for the issue to be solved.. Please provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue.. I cannot run this code because it depends on other variables and functions that do no exist. Can you please simplify your code to be **minimal** but complete ?. Have a look there: https://github.com/PHPOffice/PHPExcel/blob/1.8/Documentation/markdown/Overview/04-Configuration-Settings.md#cell-caching. You are loading a new sheet from a new file into memory. It is normal that the memory increase every time that the function is called.. Destroying the object should free the memory (`unset($PHPReader);`). But then you can't access it anymore.... https://github.com/PHPOffice/PHPExcel/blob/1c8c2379ccf5ab9dd7cb46be965821d22173bcf4/Documentation/markdown/Overview/01-Getting-Started.md#php-complains-about-ziparchive-not-being-found. There is no relation with namespace.\r\n\r\nIf you use `\\PHPExcel_Settings::setZipClass(\\PHPExcel_Settings::ZIPARCHIVE);`, then you **must** install PHP zip extension and it will work, otherwise it will fail as you saw.\r\n\r\nIf you cannot, or don't want to, install PHP zip extension, then the only choice you have is to use built-in PCLZIP like you did in second example.. Can you provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue? And don't forget to mention what version of this project you are using. That way there will be more chance for the issue to be solved.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Would you be able to submit a PR for that against PhpSpreadsheet develop branch ? At least some beginning of a fix ?. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Duplicate of https://github.com/PHPOffice/PhpSpreadsheet/issues/74, migrate to PhpSpreadsheet to solve it.. You can apply the patch yourself, it's not that big: https://github.com/PHPOffice/PhpSpreadsheet/pull/113/files. PHPExcel itself will be obsoleted by PhpSpreadsheet soon. I don't think it's worth the change, but thanks for letting us know.\r\n\r\n@MarkBaker or @Progi1984, could you please add a second person to that package on packagist and also https://packagist.org/packages/phpoffice/phpspreadsheet, so that we are sure that there is always somebody who can edit it ?. I think PHPExcel_Settings::setLibXmlLoaderOptions() should allow you to do that without patching PHPExcel. Upgrade to PHPExcel 1.8.1, and try again.\r\n\r\nThere is [no code at all on line 625 in PHPExcel 1.8.1](https://github.com/PHPOffice/PHPExcel/blob/1.8.1/Classes/PHPExcel/Reader/Excel5.php#L625).. Your formula is invalid because it misses quotes. This will work:\r\n\r\n```php\r\nvar_dump(PHPExcel_Calculation::getInstance()->parseFormula('=\"clich\u00e9\"'));\r\n```\r\n\r\nand correctly output:\r\n\r\n```\r\narray(1) {\r\n  [0] =>\r\n  array(3) {\r\n    'type' =>\r\n    string(5) \"Value\"\r\n    'value' =>\r\n    string(9) \"\"clich\u00e9\"\"\r\n    'reference' =>\r\n    NULL\r\n  }\r\n}\r\n```. Hyperlinks are [not supported in XML reader](http://phpspreadsheet.readthedocs.io/en/develop/references/features-cross-reference/). If you need it please consider submitting a PR against PhpSpreadsheet develop branch.. Could you provide a [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue without the use of external file please ?. thanks ! I can reproduce it even in PhpSpreadsheet:\r\n\r\n```php\r\nrequire __DIR__ . '/vendor/autoload.php';\r\n\r\nuse PhpOffice\\PhpSpreadsheet\\Spreadsheet;\r\nuse PhpOffice\\PhpSpreadsheet\\NamedRange;\r\nuse PhpOffice\\PhpSpreadsheet\\Calculation;\r\n\r\n$objPHPExcel = new Spreadsheet();\r\n$objPHPExcel->getActiveSheet()->setCellValue('A1', 'kiki');\r\n$name = html_entity_decode('clich&eacute;');\r\n$objPHPExcel->addNamedRange(new NamedRange($name, $objPHPExcel->getActiveSheet(), 'A1'));\r\n$res = Calculation::getInstance($objPHPExcel)->parseFormula('=' . $name);\r\nvar_dump($res);\r\n```. No, I didn't file an issue on PhpSpreadsheet. I wish we could move issue across projects...\r\n\r\nA beta release is planned \"soon\".... Closing here. This is a bit vague. What is \"part of the program\", PHPExcel, Opencart, custom code? What does \"locking me out of the site\" mean? And what is the full error message and trace ?. I am afraid I won't be able to help much. It seems to be specific to Opencart and it's a system I am not familiar with. Hopefully somebody else can help you, or you can debug deeper to get more details.\r\n\r\nFor now I am closing, because there is no clear sign that it is a bug within PHPExcel itself.. I don't think font size is meant to include a unit. I'd need an explanation of why it has a unit in your case, where it comes from, and a reference to the specification that says so.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. You must bootstrap PHPExcel properly with something like:\r\n\r\n```php\r\nrequire_once 'vendor/phpoffice/phpexcel/Classes/PHPExcel.php';\r\n```. @digitalmanagerit not exactly a PHP version, but a PHP extension. If you want to use `\\ZipArchive();` you must install PHP `zip` extension. Unfortunately PHPExcel also have a class named `ZipArchive` that might conflict with the extension if not used properly.. Read the [changelog](https://github.com/PHPOffice/PHPExcel/blob/1.8.1/changelog.txt) to know about changes to 1.8.1.\r\n\r\nThe best you can hope for PHPExcel 1.7.9, which was released on 2013-06-02, is PHP 5.5 which was released 2013-06-20. Anything newer than that cannot be guaranteed.. Indeed [conditional formatting in XLS is not supported](http://phpspreadsheet.readthedocs.io/en/develop/references/features-cross-reference/).. This is the case since https://github.com/PHPOffice/PhpSpreadsheet/commit/ea5663bc005bcd0277ca18e563b305fe3151b3a4. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. It was added, already commented out, in 13f227c by Mark. It is unclear why it was done that way since the commit seems to be unrelated to styles.\r\n\r\nWould you please try to create a PR to enable this code in PhpSpreadsheet develop branch and add tests to cover it ?. The migrator class should give you [a good idea](https://github.com/PHPOffice/PhpSpreadsheet/blob/develop/src/PhpSpreadsheet/Helper/Migrator.php#L136) of how things changed.. This is out of scope of the project. Refer to rsync manual for proper handling of spaces.. Migrate to PhpSpreadsheet for support of PHP 7.1. Yes, unfortunately PHPExcel will not be updated anymore. At least not by me. Sorry for the inconvenience.. Duplicate of https://github.com/PHPOffice/PhpSpreadsheet/issues/74 and solved in https://github.com/PHPOffice/PhpSpreadsheet/pull/113/commits/6a0a5d9cefbd91365f92ec13288e70146c62e7dc. Unfortunately, it is not yet released. Read about reading large files there: http://phpspreadsheet.readthedocs.io/en/develop/topics/reading-files/#spreadsheet-reader-options (same concepts apply to PHPExcel). Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Not sure what is going here, but it seems to be a mistake. . https://github.com/PHPOffice/phpspreadsheet#phpexcel-vs-phpspreadsheet-. The double conversion was wrong and has been fixed in PhpSpreadsheet. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. See https://github.com/PHPOffice/PHPExcel/issues/119#issuecomment-11996725. This looks like a mistake, closing.. PHPExcel is not compatible with PHP 7.1. Consider migrating to PhpSpreadsheet instead.. Upgrade to PhpSpreadsheet. http://phpspreadsheet.readthedocs.io/en/develop/topics/reading-and-writing-to-file/#setting-csv-options. Was fixed in https://github.com/PHPOffice/PhpSpreadsheet/commit/035281f04cc05f33919da8c0ac230de69cd7a675. Actually, yes it can: https://github.com/PHPOffice/PHPExcel/blob/1.8/Documentation/markdown/Overview/10-Reading-and-Writing.md#reading-a-csv-file. See http://phpspreadsheet.readthedocs.io/en/develop/ (and [maybe that too](https://github.com/PHPOffice/phpspreadsheet#phpexcel-vs-phpspreadsheet-)). Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. XLS is a binary format and thus end of lines are not relevant. XLS files created by PHPExcel work on all OS with all major software (including LibreOffice).. It means you must not do anything with end of line. And it is not possible with PHPExcel to do what you want, because it would break the file.. I think the real question here is why do you try to vewi/edit a XLS file with a text editor ?. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Try to [enable error reporting](https://stackoverflow.com/a/21429652/37706) on your server and find out in the logs what exception is thrown. That should include a error message and a full stacktrace.. Was fixed in https://github.com/PHPOffice/PhpSpreadsheet/commit/3bd0f6f9854bf858a0061eb52d4610467c3848d9. Was fixed in https://github.com/PHPOffice/PhpSpreadsheet/commit/c2b38b0ee02475867a44659bf6ac70e89270b115. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Closing for lack of info. Thanks for letting me know. Fixed in PhpSpreadsheet. Most likely not a bug within PHPExcel itself, but rather PHP the language or something else in in your environnement.\r\n\r\n[PHP 5.3 has been unsupported for almost 3 years](http://php.net/eol.php), upgrade to PHP 5.6, or better yet PHP 7.1.. @robregonm and @juliogm12 try to remove all HTTP headers and switch to HTML writer and triple check that PHP error reporting is at its maximum and that there is not a single warning and that the generated HTML is correct according to your expectation.\r\n\r\nIf that leads to nothing, try to switch the ZIP lib used with something like:\r\n```php\r\nPHPExcel_Settings::setZipClass(PHPExcel_Settings::PCLZIP);\r\n```. nope, more like:\r\n\r\n```php\r\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'HTML');\r\n```\r\n\r\nThis will output the first sheet of Excel file as an HTML table. Quite convenient for debugging things.... PHP 7.1 is not supported and is likely to break somewhere at some point. You should consider migrating to PhpSpreadsheet develop branch.. You are not using the official PHPExcel 1.8.1, because the variable `$zipClass` cannot be undefined at that line. See [the code for yourself there](https://github.com/PHPOffice/PHPExcel/blob/1.8.1/Classes/PHPExcel/Writer/Excel2007.php#L226-L227).\r\n\r\nUpgrade to [PHPExcel 1.8.1](https://github.com/PHPOffice/PHPExcel/releases/tag/1.8.1).. https://github.com/PHPOffice/PHPExcel/blob/master/Documentation/markdown/Overview/01-Getting-Started.md#php-complains-about-ziparchive-not-being-found. https://github.com/PHPOffice/PHPExcel/blob/master/Documentation/markdown/Overview/01-Getting-Started.md#php-complains-about-ziparchive-not-being-found. @wakikuk \"Please help me\" is not an appropriate title. It should be a short description of the problem.\r\n\r\nAlso you should [read the documentation](https://github.com/PHPOffice/PHPExcel/blob/1c8c2379ccf5ab9dd7cb46be965821d22173bcf4/Documentation/markdown/Overview/10-Reading-and-Writing.md#setting-the-images-root-of-the-html-file) before asking for help.. Wrong project, try over there: https://github.com/PHPOffice/PHPWord. 4.8MB is not that big nowadays, I'm not sure why this would be a problem for any hosts. I often get 50-100MB of vendored libraries in my projects.\r\n\r\nHowever you could manually delete `Documentation/`, `Examples/` and `unitTests/`. Those folders are useless for production environnement.. > thus it is not linked to the values that are updated\r\n\r\nThen it is linked to the file itself. Try to modify the file, for instance by deleting columns/rows, until it works to identify exactly what cell and what cell content is the problem.\r\n\r\nAlso next time, please take care of formatting your message. Either use the toolbar or ``` syntax to format code blocks.. Wrong project, try over there: https://github.com/iliaal/php_excel. http://lmgtfy.com/?q=PHPExcel+%20laravel. Your frustration for not being able to code a loop is certainly not a good indicator of the quality of this library.\r\n\r\n```php\r\n<?php\r\n\r\nrequire __DIR__ . '/vendor/autoload.php';\r\n\r\nuse PhpOffice\\PhpSpreadsheet\\Spreadsheet;\r\nuse PhpOffice\\PhpSpreadsheet\\Writer\\Xlsx;\r\n\r\n$spreadsheet = new Spreadsheet();\r\n$sheet = $spreadsheet->getActiveSheet();\r\nforeach (range(1, 10) as $i) {\r\n    $sheet->setCellValueByColumnAndRow($i, 1, $i);\r\n}\r\n\r\n$writer = new Xlsx($spreadsheet);\r\n$filename = '/tmp/test.xlsx';\r\n$writer->save($filename);\r\necho 'saved to: ' . $filename . PHP_EOL;\r\n```. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. @derekrprice if you are going to submit a PR, please submit it against PhpSpreadsheet develop branch, not PHPExcel. Nothing will be merged for PHPExcel anymore. And since PhpSpreadsheet is not released yet, it might be our best chance to break compatibility, if you are able to explain the reason for the break and provide a patch that is covered by unit tests.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Please provide a [**Minimal**, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) of code that exhibits this issue without relying on an external file. This look far from minimal code to trigger the issue.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.\r\n\r\nIf you decide to submit a PR to PhpSpreadsheet, we should adopt a similar strategy than in https://github.com/PHPOffice/PhpSpreadsheet/pull/186, that is keep the validation for normal usage, but allow a non-validated value only when reading files.. I can confirm something is wrong with bubble chart. I also got empty chart\nwith the sample code in PhpSpreadsheet. If you can debug it further, please\nreport your findings and consider contributing a patch.\n. Was fixed in https://github.com/PHPOffice/PhpSpreadsheet/commit/408da0c17a7c198a2f0de44450902c711b9ef4c6. An easier way to test that, would be (with PhpSpreadsheet, but it's mostly same):\r\n\r\n```php\r\nvar_dump(\\PhpOffice\\PhpSpreadsheet\\Calculation\\Statistical::SLOPE([1, 1], [1, 1]));\r\n```\r\n\r\nWould you consider creating a PR for that against PhpSpreadsheet develop branch ?. PHP 7.2 is not supported and will never be, please consider migrating to PhpSpreadsheet. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. PHP 7.1 is not, and will not be, supported. Upgrade to PhpSpreadsheet instead.. Thank you for reporting in details.\r\n\r\nNext time please consider contributing a PR on PhpSpreadsheet develop branch.. Was already fixed in https://github.com/PHPOffice/PhpSpreadsheet/commit/004a1929221f759be2737d14f0138a0dd34a362f#diff-b1864d72ee83e62b9be406443ac9b5ceL793. Thank you for reporting though !. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. https://github.com/PHPOffice/PHPExcel/search?q=Class+%27ZipArchive%27+not+found&type=Issues&utf8=\u2713. Was fixed in https://github.com/PHPOffice/PhpSpreadsheet/commit/9767112b23de2f93d4e035bcc468174a8308640e. Also PHPExcel does not support PHP 7.1. Consider upgrading to PhpSpreadsheet. PHPExcel does not support PHP 7.1, consider upgrading to PhpSpreadsheet instead.. Fixed in PhpSpreadsheet (because it uses ZipArchive instead), consider upgrading.. Thank you for your contribution, however PHPExcel development for next version has moved under its new name PhpSpreadsheet. So please consider heading over to [PhpSpreadsheet](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute) to contribute patches and features. Pull Requests will no longer be accepted for PHPExcel.. Fixed in PhpSpreadsheet, consider upgrading.. Fixed in https://github.com/PHPOffice/PhpSpreadsheet/blob/1cec98016776338f3c30ef1bbfe66074d6b929aa/composer.json#L47. Duplicate of https://github.com/PHPOffice/PhpSpreadsheet/issues/74, migrate to PhpSpreadsheet to solve it.. ",
    "rgeddes": "I resolved my problem... \n\nbumped max memory a script may consume for fpm:\n\n memory_limit = 256M\n. I resolved my problem... \n\nbumped max memory a script may consume for fpm:\n\n memory_limit = 256M\n. ",
    "pwaring": "That makes sense if the rest of the codebase assumes UTC. Could the phpdoc be updated to make this clear though please? There's no reference to expecting a UTC date/time and I spent _ages_ trying to work out why the dates were not what I expected - it was only when I went in and read the code of the function that I realised it was overriding the timezone.\n. I've tested with the patch applied to the 1.7.7 code, seems to work fine. Will wait until Friday to confirm as most of this code is called in overnight batch jobs.\n. Patch seems to have worked, just manually run all our overnight jobs and they seem to have gone through without any problems.\n\nThanks for the quick fix!\n. That makes sense if the rest of the codebase assumes UTC. Could the phpdoc be updated to make this clear though please? There's no reference to expecting a UTC date/time and I spent _ages_ trying to work out why the dates were not what I expected - it was only when I went in and read the code of the function that I realised it was overriding the timezone.\n. I've tested with the patch applied to the 1.7.7 code, seems to work fine. Will wait until Friday to confirm as most of this code is called in overnight batch jobs.\n. Patch seems to have worked, just manually run all our overnight jobs and they seem to have gone through without any problems.\n\nThanks for the quick fix!\n. ",
    "datvance": "The PHPToExcel method now accepts two new parameters: \"adujstToTimezone\" and \"timezone\", but they are ignored. Is this a bug, an oversight or by design?\n. The PHPToExcel method now accepts two new parameters: \"adujstToTimezone\" and \"timezone\", but they are ignored. Is this a bug, an oversight or by design?\n. ",
    "asheshambasta": "PHPExcel is an ok package written for excel exports and it shines only because not many others exist. I must say I'm impressed by how much has been attempted to be done, but its small annoying bugs and quirks like this that make me lose confidence in the whole thing.\n\nI can confirm what @datvance has said, its just silly.\n. PHPExcel is an ok package written for excel exports and it shines only because not many others exist. I must say I'm impressed by how much has been attempted to be done, but its small annoying bugs and quirks like this that make me lose confidence in the whole thing.\n\nI can confirm what @datvance has said, its just silly.\n. ",
    "1963669": "I just ran into this. Previously I was entering dates as text, then I discovered the PHPExcel_Shared_Date::PHPToExcel() function which was needed for anyone sorting by dates after the spreadsheet was generated. \n\nI decided the easiest fix was to comment out as pwaring suggested the UTC default timezone swap:\n//$saveTimeZone = date_default_timezone_get();\n//date_default_timezone_set('UTC');\n[snip]\n//date_default_timezone_set($saveTimeZone);\n\nFor me this was in Shared/Date.php starting at line 153, but I know I'm on an older version of PHPExcel.\n. I just ran into this. Previously I was entering dates as text, then I discovered the PHPExcel_Shared_Date::PHPToExcel() function which was needed for anyone sorting by dates after the spreadsheet was generated. \n\nI decided the easiest fix was to comment out as pwaring suggested the UTC default timezone swap:\n//$saveTimeZone = date_default_timezone_get();\n//date_default_timezone_set('UTC');\n[snip]\n//date_default_timezone_set($saveTimeZone);\n\nFor me this was in Shared/Date.php starting at line 153, but I know I'm on an older version of PHPExcel.\n. ",
    "keithbox": "why did the UTC should be as a default and consistency. I think the timezone always dependence on the localization, moreover it doesn't make sense use +, in my timezone UTC+8  should be - here.\nhttps://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Shared/Date.php#L145\n. I also try to display Chinese traditional in the document. there was no problem to export in xls or, xlsx but cannot display the Chinese in PDF, i found that the engine form the Chinese as \"DejaVu Sans Condensed\" font in pdf.\r\n\r\nOption 1:\r\nset \"Sun-ExtA\" as the excel font style and install the \"Sun-ExtA.ttf\" on my pc, than the chinese can display correctly.\r\n\"Sun-ExtA\" already installed on mPDF, it is support chinese simplified and chinese traditional.\r\n\r\n$objPHPExcel->getDefaultStyle()->getFont()->setName('Sun-ExtA')->setSize(12);\r\n\r\nOption 2:\r\nyou may use \"Arial Unicode MS\" as the excel font style, but you must need to manual add to the mPDF, please follow the https://mpdf.github.io/fonts-languages/fonts-in-mpdf-6-x.html\r\n\"Arial Unicode MS\" is a microsoft font come with some MS product, check this list\r\nhttps://www.microsoft.com/typography/fonts/font.aspx?FMID=1081\r\nyou should find that in your windows font folder, if you installed any product listed on above\r\n\r\nOption 3:\r\ninstall the Dejavu fonts on your computer\r\nhttps://dejavu-fonts.github.io/. someone just reported a bug on Adobe Reader DC, https://forums.adobe.com/thread/2181902\r\n\"Cannot extract the embedded font MPDFAA++DejaVuSansCondensed some characters may not display or print correctly\" after last update of Adobe Reader DC (15.017.20050)\r\n\r\nThe same bug also happen on my Pro DC 2015.023.20053. why did the UTC should be as a default and consistency. I think the timezone always dependence on the localization, moreover it doesn't make sense use +, in my timezone UTC+8  should be - here.\nhttps://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Shared/Date.php#L145\n. I also try to display Chinese traditional in the document. there was no problem to export in xls or, xlsx but cannot display the Chinese in PDF, i found that the engine form the Chinese as \"DejaVu Sans Condensed\" font in pdf.\r\n\r\nOption 1:\r\nset \"Sun-ExtA\" as the excel font style and install the \"Sun-ExtA.ttf\" on my pc, than the chinese can display correctly.\r\n\"Sun-ExtA\" already installed on mPDF, it is support chinese simplified and chinese traditional.\r\n\r\n$objPHPExcel->getDefaultStyle()->getFont()->setName('Sun-ExtA')->setSize(12);\r\n\r\nOption 2:\r\nyou may use \"Arial Unicode MS\" as the excel font style, but you must need to manual add to the mPDF, please follow the https://mpdf.github.io/fonts-languages/fonts-in-mpdf-6-x.html\r\n\"Arial Unicode MS\" is a microsoft font come with some MS product, check this list\r\nhttps://www.microsoft.com/typography/fonts/font.aspx?FMID=1081\r\nyou should find that in your windows font folder, if you installed any product listed on above\r\n\r\nOption 3:\r\ninstall the Dejavu fonts on your computer\r\nhttps://dejavu-fonts.github.io/. someone just reported a bug on Adobe Reader DC, https://forums.adobe.com/thread/2181902\r\n\"Cannot extract the embedded font MPDFAA++DejaVuSansCondensed some characters may not display or print correctly\" after last update of Adobe Reader DC (15.017.20050)\r\n\r\nThe same bug also happen on my Pro DC 2015.023.20053. ",
    "syslogic": "Could it just return string \"#ERROR\" as cell value, like Excel would?\n\n```\ntry {\n   if($ws->getCell($x.$y)->getValue() != ''){\n      return $ws->getCell($x.$y)->getValue();\n   }\n}\ncatch(PHPExcel_Exception $e) {\n   return '#ERROR';\n   // $e->getMessage();\n}\n```\n. Could it just return string \"#ERROR\" as cell value, like Excel would?\n\n```\ntry {\n   if($ws->getCell($x.$y)->getValue() != ''){\n      return $ws->getCell($x.$y)->getValue();\n   }\n}\ncatch(PHPExcel_Exception $e) {\n   return '#ERROR';\n   // $e->getMessage();\n}\n```\n. ",
    "seliquity": "You're right, my bad I double checked master not develop.\n. You're right, my bad I double checked master not develop.\n. ",
    "ajouno": "I instanciate the PHPExcel_Writer_Excel2007 writer\n. Hi Mark, sorry about the long silence, my boss need my help on other work...\nAnyway, i'm back for this issue.\n\nI try your code but i get an error : Class PHPExcelIOFactory not found.\nI download the last commit on dev branch but i can't find any classe named PHPExcelIOFactory.\n\nWhere do i lost myself ?\n\nWhen i use 1.7.7 writer style call : \n\n$writer = new PHPExcel_Writer_Excel2007($objPHPExcel);\nheader('Content-type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\nheader('Content-Disposition:inline;filename=Fichier.xlsx ');\n$writer->save('php://output');\n\nI still get the original issue. bug seems to be fix on the writer.\n\nRegards,\najouno\n. oh crap... \nI just copy your code without my brain...\n\nI copy from the email which contain : \n$objWriter = PHPExcelIOFactory::createWriter($objPHPExcel, 'Excel2007');\n\nand not this : \n\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\n\n\"_\" change all...\n\nSo i can try your code.\nThanks\n. I try your code and get the same issue as before.\n\nA1 get a green color font with 0,25 in cell\nwhen i select A1, the value in fx box is 25%\n\nTo get A1 with 25% display i need to get in conditionnal cell\nedit the rule to add pourcent format with color font condition.\n\nI can send you the xls file if you want.\nMaybe an issue with european office 2007 ?\n. I've done !\n\n// ############################ this don't work ############################\n// style define\n$conditionOK = array(   'numberFormat'  => array(   'code' => PHPExcel_Style_NumberFormat::FORMAT_PERCENTAGE_00),\n                        'fill' => array(    'type'  => PHPExcel_Style_Fill::FILL_SOLID,\n                                    'startcolor'    => array('rgb' => '00FF00'),\n                                    'endcolor'  => array('rgb' => '00FF00') ));\n\n// style apply\n$objConditional1 = new PHPExcel_Style_Conditional();\n$objConditional1->setConditionType(PHPExcel_Style_Conditional::CONDITION_CELLIS);\n$objConditional1->setOperatorType(PHPExcel_Style_Conditional::OPERATOR_LESSTHAN);\n$objConditional1->addCondition('0');\n$objConditional1->getStyle()->applyFromArray($conditionNOK);\n// ############################ this don't work ############################\n\n// ############################ this work ################################\n$objConditional1->setConditionType(PHPExcel_Style_Conditional::CONDITION_CELLIS)->setOperatorType(PHPExcel_Style_Conditional::OPERATOR_LESSTHAN)->addCondition('0');\n$objConditional1->getStyle()->getFill()->getStartColor()->setRGB('FF0000');\n$objConditional1->getStyle()->getFill()->getEndColor()->setRGB('FF0000');\n$objConditional1->getStyle()->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID);\n$objConditional1->getStyle()->getNumberFormat()->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_PERCENTAGE_00);\n// ############################ this work ################################\n\nissu seems to come from \"applyFromArray\" method.\nThanks for your attention.\n\nRegards,\nAymeric\n. I instanciate the PHPExcel_Writer_Excel2007 writer\n. Hi Mark, sorry about the long silence, my boss need my help on other work...\nAnyway, i'm back for this issue.\n\nI try your code but i get an error : Class PHPExcelIOFactory not found.\nI download the last commit on dev branch but i can't find any classe named PHPExcelIOFactory.\n\nWhere do i lost myself ?\n\nWhen i use 1.7.7 writer style call : \n\n$writer = new PHPExcel_Writer_Excel2007($objPHPExcel);\nheader('Content-type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\nheader('Content-Disposition:inline;filename=Fichier.xlsx ');\n$writer->save('php://output');\n\nI still get the original issue. bug seems to be fix on the writer.\n\nRegards,\najouno\n. oh crap... \nI just copy your code without my brain...\n\nI copy from the email which contain : \n$objWriter = PHPExcelIOFactory::createWriter($objPHPExcel, 'Excel2007');\n\nand not this : \n\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\n\n\"_\" change all...\n\nSo i can try your code.\nThanks\n. I try your code and get the same issue as before.\n\nA1 get a green color font with 0,25 in cell\nwhen i select A1, the value in fx box is 25%\n\nTo get A1 with 25% display i need to get in conditionnal cell\nedit the rule to add pourcent format with color font condition.\n\nI can send you the xls file if you want.\nMaybe an issue with european office 2007 ?\n. I've done !\n\n// ############################ this don't work ############################\n// style define\n$conditionOK = array(   'numberFormat'  => array(   'code' => PHPExcel_Style_NumberFormat::FORMAT_PERCENTAGE_00),\n                        'fill' => array(    'type'  => PHPExcel_Style_Fill::FILL_SOLID,\n                                    'startcolor'    => array('rgb' => '00FF00'),\n                                    'endcolor'  => array('rgb' => '00FF00') ));\n\n// style apply\n$objConditional1 = new PHPExcel_Style_Conditional();\n$objConditional1->setConditionType(PHPExcel_Style_Conditional::CONDITION_CELLIS);\n$objConditional1->setOperatorType(PHPExcel_Style_Conditional::OPERATOR_LESSTHAN);\n$objConditional1->addCondition('0');\n$objConditional1->getStyle()->applyFromArray($conditionNOK);\n// ############################ this don't work ############################\n\n// ############################ this work ################################\n$objConditional1->setConditionType(PHPExcel_Style_Conditional::CONDITION_CELLIS)->setOperatorType(PHPExcel_Style_Conditional::OPERATOR_LESSTHAN)->addCondition('0');\n$objConditional1->getStyle()->getFill()->getStartColor()->setRGB('FF0000');\n$objConditional1->getStyle()->getFill()->getEndColor()->setRGB('FF0000');\n$objConditional1->getStyle()->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID);\n$objConditional1->getStyle()->getNumberFormat()->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_PERCENTAGE_00);\n// ############################ this work ################################\n\nissu seems to come from \"applyFromArray\" method.\nThanks for your attention.\n\nRegards,\nAymeric\n. ",
    "aweizd": "Hi,\n\nI have the same problem with 1.7.9 and the git develop branch. Tested with my code as well as Mark's code from above.\n\nBasically, if you don't explicitly specify a number format in the conditional style array PHPExcel will always use \"General\". That means all cells that match the rule will be formated as General independent of what the original cell format is. Ajouno's solution of explicitly setting the format isn't really an option for me, because my conditional format spans multiple columns with different number formats.\n\nAs far as I can tell the problem is in Style/NumberFormat.php lines 202-214: public function setFormatCode, which sets the number format to \"General\" if none is specified. \n\nI tested it by commenting line 205 and the result is what I expected. If no format is specified then no format is applied and all cells preserve their original formating. But this does cause some PHP warnings down the line, specifically in the function getHashCode() line 366 of the same file.\n\nEDIT: I just realized I also had to explicitly set the conditional number format to null, otherwise it doesn't work.\n\nI hope this help you fix this issue.\n. Hi,\n\nI have the same problem with 1.7.9 and the git develop branch. Tested with my code as well as Mark's code from above.\n\nBasically, if you don't explicitly specify a number format in the conditional style array PHPExcel will always use \"General\". That means all cells that match the rule will be formated as General independent of what the original cell format is. Ajouno's solution of explicitly setting the format isn't really an option for me, because my conditional format spans multiple columns with different number formats.\n\nAs far as I can tell the problem is in Style/NumberFormat.php lines 202-214: public function setFormatCode, which sets the number format to \"General\" if none is specified. \n\nI tested it by commenting line 205 and the result is what I expected. If no format is specified then no format is applied and all cells preserve their original formating. But this does cause some PHP warnings down the line, specifically in the function getHashCode() line 366 of the same file.\n\nEDIT: I just realized I also had to explicitly set the conditional number format to null, otherwise it doesn't work.\n\nI hope this help you fix this issue.\n. ",
    "jakajancar": "I'm not sure how PHPExcel works internally, but if it's a tree-like structure, is it an option to have a \"raw\"/undecoded node (e.g. sheet) that doesn't get deserialized and, when being written, is written as-is?\n\n(this is the approach I've seen used in XML and SQL parsers, not sure if it applies to PHPExcel)\n. I'm not sure how PHPExcel works internally, but if it's a tree-like structure, is it an option to have a \"raw\"/undecoded node (e.g. sheet) that doesn't get deserialized and, when being written, is written as-is?\n\n(this is the approach I've seen used in XML and SQL parsers, not sure if it applies to PHPExcel)\n. ",
    "rsulzenbacher": "Hello!\n\nI have the same problem. Can't open movescount .xlsx file directly with PHPExcel... \nProblem is getSheetCount delivers 0 and of course no worksheets are available. \n\nFunny thing aside: Apple Numbers can't open it either. \"No valid Excel file!\"\n\nI don't really understand which \"Excel\" format Suunto is using.\n\nRichard\n. It looks like OfficeOpenXML (when I open it with Texteditor) and identify delivers \"Excel2007\". \n. Hello!\n\nI have the same problem. Can't open movescount .xlsx file directly with PHPExcel... \nProblem is getSheetCount delivers 0 and of course no worksheets are available. \n\nFunny thing aside: Apple Numbers can't open it either. \"No valid Excel file!\"\n\nI don't really understand which \"Excel\" format Suunto is using.\n\nRichard\n. It looks like OfficeOpenXML (when I open it with Texteditor) and identify delivers \"Excel2007\". \n. ",
    "ultrinnan": "This is because downloaded file is in HTML format (but names as .xmlx). This is because downloaded file is in HTML format (but names as .xmlx). ",
    "rijoshrc": "I did the following steps to fix this.\r\n\r\n`$inputFileName = 'test.xlsx';`\r\n`$inputFileType = PHPExcel_IOFactory::identify($inputFileName);`\r\n`$objReader = PHPExcel_IOFactory::createReader($inputFileType);`\r\n`$objReader->setReadDataOnly(true);`\r\n`$objPHPExcel = $objReader->load($inputFileName);`\r\n\r\nInstall the ZipArchive if not already installed\r\n`sudo apt-get install php7.0-zip`\r\n`sudo service apache2 restart`. I did the following steps to fix this.\r\n\r\n`$inputFileName = 'test.xlsx';`\r\n`$inputFileType = PHPExcel_IOFactory::identify($inputFileName);`\r\n`$objReader = PHPExcel_IOFactory::createReader($inputFileType);`\r\n`$objReader->setReadDataOnly(true);`\r\n`$objPHPExcel = $objReader->load($inputFileName);`\r\n\r\nInstall the ZipArchive if not already installed\r\n`sudo apt-get install php7.0-zip`\r\n`sudo service apache2 restart`. ",
    "xalauc": "I also think this would be an awesome feature.\n. I also think this would be an awesome feature.\n. ",
    "rogeriopradoj": "+1\n. +1\n. hello, @Slamdunk . I saw that your PR solve the problem the problems you've indicated, but, have you seen travis still failing after that?\n. Hey, @Slamdunk.\n\nNow I understand, man, the point related to Windows environment.\n\nThanks for answering.\n\n:-)\n. #88\n. Hi, @MarkBaker, I think your commit 4779025 is a very good start, thanks for taking a look at this issue!\n\nBut the users will just be able to get the goods from it when the project release the next version, and, very important, only with a version tag  that Composer and Packagist can handle.\n\nFor example, if the next version get the tag name `1.7.9`, Composer and Packagist will be able to point this version in, awesome. But, if you go instead with `PHPExcel_1.7.9` the install will be get from the source, invalidating the point of .gitattributes.\n\nComposer doc says:\n\n> Tags\n> \n> For every tag that looks like a version, a package version of that tag will be created. It should match 'X.Y.Z' or >'vX.Y.Z', with an optional suffix for RC, beta, alpha or patch.\n> \n> Here are a few examples of valid tag names:\n> \n> 1.0.0\n> v1.0.0\n> 1.10.5-RC1\n> v4.4.4beta2\n> v2.0.0-alpha\n> v2.0.4-p1\n\nAnd keep going:\n\n> Branches\n> For every branch, a package development version will be created.[...]\n> [...]Note: When you install a dev version, it will install it from source.\n\nThat's the reason when we visit https://packagist.org/packages/phpoffice/phpexcel we just see composer package versions `dev-develop`, `dev-calcengine` and so on (dev-versions always install from the source, not getting the benefit of your commit...).\n\n---\n\nAnd a thing for future, I wish, could be this project following the [Semantic Versioning](http://semver.org/) to name releases, as Composer suggests as well.\n. +1\n. +1\n. hello, @Slamdunk . I saw that your PR solve the problem the problems you've indicated, but, have you seen travis still failing after that?\n. Hey, @Slamdunk.\n\nNow I understand, man, the point related to Windows environment.\n\nThanks for answering.\n\n:-)\n. #88\n. Hi, @MarkBaker, I think your commit 4779025 is a very good start, thanks for taking a look at this issue!\n\nBut the users will just be able to get the goods from it when the project release the next version, and, very important, only with a version tag  that Composer and Packagist can handle.\n\nFor example, if the next version get the tag name `1.7.9`, Composer and Packagist will be able to point this version in, awesome. But, if you go instead with `PHPExcel_1.7.9` the install will be get from the source, invalidating the point of .gitattributes.\n\nComposer doc says:\n\n> Tags\n> \n> For every tag that looks like a version, a package version of that tag will be created. It should match 'X.Y.Z' or >'vX.Y.Z', with an optional suffix for RC, beta, alpha or patch.\n> \n> Here are a few examples of valid tag names:\n> \n> 1.0.0\n> v1.0.0\n> 1.10.5-RC1\n> v4.4.4beta2\n> v2.0.0-alpha\n> v2.0.4-p1\n\nAnd keep going:\n\n> Branches\n> For every branch, a package development version will be created.[...]\n> [...]Note: When you install a dev version, it will install it from source.\n\nThat's the reason when we visit https://packagist.org/packages/phpoffice/phpexcel we just see composer package versions `dev-develop`, `dev-calcengine` and so on (dev-versions always install from the source, not getting the benefit of your commit...).\n\n---\n\nAnd a thing for future, I wish, could be this project following the [Semantic Versioning](http://semver.org/) to name releases, as Composer suggests as well.\n. ",
    "vinigarcia87": "You guys should create a Zend Framework 2 Module for PHPExcel too!\n. ZF2 uses composer and PSR-0 autoload to install vendor modules...\n. You guys should create a Zend Framework 2 Module for PHPExcel too!\n. ZF2 uses composer and PSR-0 autoload to install vendor modules...\n. ",
    "csanquer": "@vinigarcia87 Sorry i don't see the connection with composer config\n. @vinigarcia87 Sorry i don't see the connection with composer config\n. ",
    "lsmith77": "@MarkBaker composer has become more or less the defacto tool for managing dependencies with php. there already seem to be 2 people that have forked this code and created their \"own\" composer packages:\n- https://packagist.org/packages/CodePlex/PHPExcel\n- https://packagist.org/packages/phpexcel/phpexcel\n\nit would be good to get this from the source.\n. thx .. i added some comments for things that need to be fixed.\n\nFYI there is `php composer.phar validate` to validate the composer.json.\nThere is then one last step to do and that is to register the package on https://packagist.org\n. @MarkBaker composer has become more or less the defacto tool for managing dependencies with php. there already seem to be 2 people that have forked this code and created their \"own\" composer packages:\n- https://packagist.org/packages/CodePlex/PHPExcel\n- https://packagist.org/packages/phpexcel/phpexcel\n\nit would be good to get this from the source.\n. thx .. i added some comments for things that need to be fixed.\n\nFYI there is `php composer.phar validate` to validate the composer.json.\nThere is then one last step to do and that is to register the package on https://packagist.org\n. ",
    "tiagobrito": "@MarkBaker plz check http://www.youtube.com/watch?v=9A4XrB5g0fk&feature=player_embedded to learn more about composer\n. @MarkBaker plz check http://www.youtube.com/watch?v=9A4XrB5g0fk&feature=player_embedded to learn more about composer\n. ",
    "cyberwolf": "If I am correctly reading the code PHPExcel will also register its own autoloader in Classes/PHPExcel.php:\n\n``` php\n/** PHPExcel root directory */\nif (!defined('PHPEXCEL_ROOT')) {\n    define('PHPEXCEL_ROOT', dirname(__FILE__) . '/');\n    require(PHPEXCEL_ROOT . 'PHPExcel/Autoloader.php');\n}\n```\n\nIn PHPExcel/Autoloader.php:\n\n``` php\nPHPExcel_Autoloader::Register();\n```\n\nIf PHPExcel will support installation via Composer (+1 from me), is there a way to circumvent loading PHPExcel's own autoloader as well?\n. If I am correctly reading the code PHPExcel will also register its own autoloader in Classes/PHPExcel.php:\n\n``` php\n/** PHPExcel root directory */\nif (!defined('PHPEXCEL_ROOT')) {\n    define('PHPEXCEL_ROOT', dirname(__FILE__) . '/');\n    require(PHPEXCEL_ROOT . 'PHPExcel/Autoloader.php');\n}\n```\n\nIn PHPExcel/Autoloader.php:\n\n``` php\nPHPExcel_Autoloader::Register();\n```\n\nIf PHPExcel will support installation via Composer (+1 from me), is there a way to circumvent loading PHPExcel's own autoloader as well?\n. ",
    "robsonpeixoto": "+1\n. Some suggestion ...\n\n``` diff\ndiff --git a/composer.json b/composer.json\nindex c6ef49c..a547934 100644\n--- a/composer.json\n+++ b/composer.json\n@@ -4,7 +4,7 @@\n     \"keywords\": [\"PHP\",\"Excel\",\"OpenXML\",\"xlsx\",\"xls\",\"spreadsheet\"],\n     \"homepage\": \"http://phpexcel.codeplex.com\",\n     \"type\": \"library\",\n-    \"license\": \"LGPL\",\n+    \"license\": \"LGPL-2.1\",\n     \"authors\": [\n         {\n             \"name\": \"Maarten Balliauw\",\n@@ -22,15 +22,15 @@\n     ],\n     \"require\": {\n         \"php\": \">=5.2.0\",\n+        \"ext-gd\": \"*\",\n         \"ext-xml\": \"*\"\n     },\n-    \"recommend\": {\n-        \"ext-zip\": \"*\",\n-        \"ext-gd2\": \"*\"\n+    \"suggest\": {\n+        \"ext-zip\": \"Only needed by PHPExcel_Reader_Excel2007, PHPExcel_Writer_Excel2007, PHPExcel_Reader_OOCalc\"\n     },\n     \"autoload\": {\n         \"psr-0\": {\n-            \"PHPExcel\": \"\"\n+            \"PHPExcel\": \"Classes/\"\n         }\n     }\n }\n```\n. +1\n. Some suggestion ...\n\n``` diff\ndiff --git a/composer.json b/composer.json\nindex c6ef49c..a547934 100644\n--- a/composer.json\n+++ b/composer.json\n@@ -4,7 +4,7 @@\n     \"keywords\": [\"PHP\",\"Excel\",\"OpenXML\",\"xlsx\",\"xls\",\"spreadsheet\"],\n     \"homepage\": \"http://phpexcel.codeplex.com\",\n     \"type\": \"library\",\n-    \"license\": \"LGPL\",\n+    \"license\": \"LGPL-2.1\",\n     \"authors\": [\n         {\n             \"name\": \"Maarten Balliauw\",\n@@ -22,15 +22,15 @@\n     ],\n     \"require\": {\n         \"php\": \">=5.2.0\",\n+        \"ext-gd\": \"*\",\n         \"ext-xml\": \"*\"\n     },\n-    \"recommend\": {\n-        \"ext-zip\": \"*\",\n-        \"ext-gd2\": \"*\"\n+    \"suggest\": {\n+        \"ext-zip\": \"Only needed by PHPExcel_Reader_Excel2007, PHPExcel_Writer_Excel2007, PHPExcel_Reader_OOCalc\"\n     },\n     \"autoload\": {\n         \"psr-0\": {\n-            \"PHPExcel\": \"\"\n+            \"PHPExcel\": \"Classes/\"\n         }\n     }\n }\n```\n. ",
    "josecanciani": "Mark, I have a smaller .xlsx file that fails with this error. Can I send it over email?\n. Mark, I have a smaller .xlsx file that fails with this error. Can I send it over email?\n. ",
    "rvwoens": "same problem here. PHP 5.4 and PHP5.3 tested. \n\nUnhandled Exception\nMessage:\nUndefined variable: docSheet\nLocation:\n/Users/rvw/proj/websites/orweja/my.orweja/bundles/laravel-phpexcel/PHPExcel/Reader/Excel2007.php on line 1749\n\nProbably the foreachloop 738-1714 is never entered. But whatever reason, it is not OK to use docSheet outside of the loop where it is defined without testing its validity in case the loop is never entered.\n. same problem here. PHP 5.4 and PHP5.3 tested. \n\nUnhandled Exception\nMessage:\nUndefined variable: docSheet\nLocation:\n/Users/rvw/proj/websites/orweja/my.orweja/bundles/laravel-phpexcel/PHPExcel/Reader/Excel2007.php on line 1749\n\nProbably the foreachloop 738-1714 is never entered. But whatever reason, it is not OK to use docSheet outside of the loop where it is defined without testing its validity in case the loop is never entered.\n. ",
    "Quix0r": "`dataTypeForValue()` is currently (see line 75) static (no object reference). In your change you call it with `$this` which means with an object-reference (which is not static). I propose to either revert the change or also change `dataTypeForValue()` which needs feedback from other developers.. createReaderForFile() uses pathinfo() and then 'extension' from the resulting array. That should work (maybe worth to rewrite to OOP-ed way with SplFileInfo class but not needed so much).\n\nMaybe you can move that pathinfo() stuff in another (public?) method to get a more encapsulated code? Just an idea as I would do it.\n. Any logfile (e.g. error.log, php.log) output would be helpful. Without this, developers can only try to look into a magic marble ... ;-)\n. ## Steps to reproduce (other string offsets but same error):\n- load Excel file with e.g. Notepadd++\n- insert new-line characters anywhere in the binary parts of the file\n- insert random strings (e.g. abc123 is enough but add more to provoke bug)\n- try to use PHPExcel_IOFactory::identify($fileName)\n\n## Backtrace with xdebug:\n\n```\nCall Stack:\n    0.0006     220104   1. {main}() /.../bla.php:0\n  x.xyz  xyz   2. xxx() /.../bla.php:xx\n  x.xyz  xyz   3. yyy() /.../inc/functions.inc.php:xx\n  x.xyz  xyz   4. zzz() /.../inc/functions.inc.php:xx\n  x.xyz  xyz   5. foo->bar() /.../inc/functions.inc.php:xx\n  x.xyz  xyz   6. PHPExcel_IOFactory::identify() /.../inc/ParseableFileIterator.inc.php:xx\n  x.xyz  xyz   7. PHPExcel_IOFactory::createReaderForFile() /.../inc/third-party/PHPExcel/IOFactory.php:xx\n  x.xyz  xyz   8. PHPExcel_Reader_Excel5->canRead() /.../inc/third-party/PHPExcel/IOFactory.php:xx\n  x.xyz  xyz   9. PHPExcel_Shared_OLERead->read() /.../inc/third-party/PHPExcel/Reader/Excel5.php:xx\n  x.xyz  xyz  10. PHPExcel_Shared_OLERead->_readData() /.../inc/third-party/PHPExcel/Shared/OLERead.php:xx\n  x.xyz  xyz  11. PHPExcel_Shared_OLERead::getInt4d() /.../inc/third-party/PHPExcel/Shared/OLERead.php:xx\n```\n\nThe line numbers are not important here, important is that this bug should better end in a catchable exception.\n. Small recommendation (OT): Somtimes using double-quotes, sometimes single-quotes with . to concat strings is a bit confusing, better rewrite this to one style and keep it that way.\n. Maybe this will help?\nhttps://github.com/PHPOffice/PHPExcel/blob/7d1c140974a4988f8a9739d167335d24fb59955e/Examples/41password.php\n. Without a namespace, all sits in global space. Therefore it is accessible only with a back-slash in front of the class, e.g.: \\Exception for the generic (SPL) exception (see http://php.net/manual/en/class.exception.php for details of that exception).\n\nI would then recommend that PHPExcel has it's own namespace for all classes. This however requires some rewrites as many \"use Some\\Namespaces\\Class\" lines must be added to each script where it is used. And it make it incompatible with older versions as they simply don't support namespaces.\n\nSee here for more details:\nhttp://php.net/manual/en/language.namespaces.rationale.php\n\nSo 5.3 at least must be used which seems to be a bit out-dated: http://php.net/eol.php So it is a good idea to ask everyone to upgrade.\n. Sorry, short on hands here. :-(\n. No, he is not working with me on it.\n. Can't you maybe use FUSE or equivalents? Then you could simulate a \"local\" access.\n. @MarkBaker yes, correct. :-) That is why I have recommended FUSE to @wodka where the \"special\" file system can be wrapped through it.\n. You may be able to reproduce it with load() method but I like the \"externalized\" reader way better because then I can (I did for loading CSV files btw.) customize it a bit.\n. According to [documentation](http://php.net/manual/en/class.iterator.php) the next() method returns (or should return) nothing (void) and prev() seems to be no default method. In my view, PHPExcel's iterator should behave as expected, like the generic interface and not make own version.\n\nAdding an own method (prev()) is fine with me, but changing existing (well-known) method's behaviour could be a pontial source of bugs when you want to upgrade (e.g. later PHP versions may become stricter or finally have real return types which are type-safe as Java does).\n. @jbinfo welcome. :-)\n. It should not hard fail (unless configured, e.g. strict testing).. No, reducing logging means hiding bugs in application. I also see tons of E_NOTICE for missing array keys (-1, -x, y) and then ending up in a out-of-memory condition (memory leak). Hiding them (bugs) by e.g. reducing error verbosity level or by using \"@\" means they are still there (unfixed) and they will one day come back and cause trouble.\n\nI have seen this already: \"Hide E_NOTICE and my super-duper-application works with no error messages.\" or \"Your server environment is configured wrong, fix it (mostly by reducing error reporting) and my app works again.\"\n\nThis doesn't help much as described above it **hides bugs** and not **fixes** them.\n\nSo what I propose here is that PHPExcel is lesser error-tollerant becoming more robust.\n. Here are some of the lines that I mean:\n\n```\nPHP Notice:  Uninitialized string offset: -9 in a/some/path/bin/inc/third-party/PHPExcel/Shared/OLERead.php on line 309\nPHP Notice:  Uninitialized string offset: -12 in /some/path/bin/inc/third-party/PHPExcel/Shared/OLERead.php on line 316\nPHP Notice:  Uninitialized string offset: -11 in /some/path/bin/inc/third-party/PHPExcel/Shared/OLERead.php on line 316\nPHP Notice:  Uninitialized string offset: -10 in /some/path/bin/inc/third-party/PHPExcel/Shared/OLERead.php on line 316\nPHP Notice:  Uninitialized string offset: -9 in /some/path/bin/inc/third-party/PHPExcel/Shared/OLERead.php on line 309\nPHP Notice:  Uninitialized string offset: -12 in /some/path/bin/inc/third-party/PHPExcel/Shared/OLERead.php on line 316\nPHP Notice:  Uninitialized string offset: -11 in /some/path/bin/inc/third-party/PHPExcel/Shared/OLERead.php on line 316\nPHP Notice:  Uninitialized string offset: -10 in /some/path/bin/inc/third-party/PHPExcel/Shared/OLERead.php on line 316\nPHP Notice:  Uninitialized string offset: -9 in /some/path/bin/inc/third-party/PHPExcel/Shared/OLERead.php on line 309\n```\n\nIf PHPExcel sees some of those, it should treat is ad corrupted/damged input file and skip further loading attempts as with a valid file no such E_NOTICE is being shown.\n\nBack to my previous comment, if you hide E_NOTICE (e.g. via php.ini) you won't see this bug ...\n. Never mind. :-)\n. Is it not better to check for divide-by-zero condition and if so, throw an exception? Your proposed way means that such mistakes are being hidden (=ignored) and that should not be done. Every modern programming language (and libraries) are not hiding problematic data (e.g. divsion by zero ending up ignored), they instead expose it. For example Java is throwing an explicit exception, sure this is not Java itself but please take the advice from very long-term programming experiences: Only fixed bugs are good bugs. And hiding them won't fix them.\n. Then let's dump those old versions of PHP <5.3 as they are EOL anyway: http://php.net/eol.php\n\nSo that means you want to still support 5.2 and lower? Last release of 5.2 is 6 Jan 2011 ...\n. Here are some test files:\nhttps://owncloud.mxchange.org/index.php/s/us4RBigNqaqMdiO\n\nTry to convert them with PHPExcel to XLSX (none of them has that format) as I basically do here and compare the results with the original files.\n\nDates are converted to sometimes numbers, leading zeros removed.\n. So PHPExcel is out-dated? I may then have 2 options:\n- write a work-around that keeps track of each column's type and format so it can be set correctly again (bad, hard to maintain)\n- rewrite my whole application to PHPSpreadsheet (may take really long to become as before)\n\nIs there any other advantage than having a more updated code? E.g. speed improvement or memory footprint?\n. Here is my work-around:\n- added database column (`tinyint(1)`): 1= is date, 0= is other <- this tracks which column is a date and needs converting\n- used regex to check for German date-format\n- if valid, handle it over to `PHPExcel_Shared_Date::stringToExcel()` for converting\n- if no German date (such as the same float value `stringToExcel()` returns) use the value directly for next step:\n- save coordinate, value and format where to change format\n\nA bit hacky but works (with my testing files I linked here).\n. That work-around of mine seems to work. Now only removal of leading zeros (e.g. ZIP code or phone numbers have leading zeros, like here in Germany) is left (OT).\n. Thank you for clarification. It whould be still good to have a migration guideline (how to switch) for an easy (and hopefully painless) move.\n. Looks like the migration tool has been written. And I have taken @MarkBaker 's advice to write an own (custom) value binder, works nicely now. Closing ticket (please set proper status, maybe \"WONT FIX\"?). 1.8.1 is out. Is this still the case with the newer version? And please don't report bugs for old versions (I won't accept it).\n. Okay, was a bit confusing. :-)\n. I know, still I needed this change in PHPExcel to have the said speedup (some files may be larger than 100,000 rows). PHPSpreadsheet is currently causing to much errors (compared to PHPExel).. `dataTypeForValue()` is currently (see line 75) static (no object reference). In your change you call it with `$this` which means with an object-reference (which is not static). I propose to either revert the change or also change `dataTypeForValue()` which needs feedback from other developers.. createReaderForFile() uses pathinfo() and then 'extension' from the resulting array. That should work (maybe worth to rewrite to OOP-ed way with SplFileInfo class but not needed so much).\n\nMaybe you can move that pathinfo() stuff in another (public?) method to get a more encapsulated code? Just an idea as I would do it.\n. Any logfile (e.g. error.log, php.log) output would be helpful. Without this, developers can only try to look into a magic marble ... ;-)\n. ## Steps to reproduce (other string offsets but same error):\n- load Excel file with e.g. Notepadd++\n- insert new-line characters anywhere in the binary parts of the file\n- insert random strings (e.g. abc123 is enough but add more to provoke bug)\n- try to use PHPExcel_IOFactory::identify($fileName)\n\n## Backtrace with xdebug:\n\n```\nCall Stack:\n    0.0006     220104   1. {main}() /.../bla.php:0\n  x.xyz  xyz   2. xxx() /.../bla.php:xx\n  x.xyz  xyz   3. yyy() /.../inc/functions.inc.php:xx\n  x.xyz  xyz   4. zzz() /.../inc/functions.inc.php:xx\n  x.xyz  xyz   5. foo->bar() /.../inc/functions.inc.php:xx\n  x.xyz  xyz   6. PHPExcel_IOFactory::identify() /.../inc/ParseableFileIterator.inc.php:xx\n  x.xyz  xyz   7. PHPExcel_IOFactory::createReaderForFile() /.../inc/third-party/PHPExcel/IOFactory.php:xx\n  x.xyz  xyz   8. PHPExcel_Reader_Excel5->canRead() /.../inc/third-party/PHPExcel/IOFactory.php:xx\n  x.xyz  xyz   9. PHPExcel_Shared_OLERead->read() /.../inc/third-party/PHPExcel/Reader/Excel5.php:xx\n  x.xyz  xyz  10. PHPExcel_Shared_OLERead->_readData() /.../inc/third-party/PHPExcel/Shared/OLERead.php:xx\n  x.xyz  xyz  11. PHPExcel_Shared_OLERead::getInt4d() /.../inc/third-party/PHPExcel/Shared/OLERead.php:xx\n```\n\nThe line numbers are not important here, important is that this bug should better end in a catchable exception.\n. Small recommendation (OT): Somtimes using double-quotes, sometimes single-quotes with . to concat strings is a bit confusing, better rewrite this to one style and keep it that way.\n. Maybe this will help?\nhttps://github.com/PHPOffice/PHPExcel/blob/7d1c140974a4988f8a9739d167335d24fb59955e/Examples/41password.php\n. Without a namespace, all sits in global space. Therefore it is accessible only with a back-slash in front of the class, e.g.: \\Exception for the generic (SPL) exception (see http://php.net/manual/en/class.exception.php for details of that exception).\n\nI would then recommend that PHPExcel has it's own namespace for all classes. This however requires some rewrites as many \"use Some\\Namespaces\\Class\" lines must be added to each script where it is used. And it make it incompatible with older versions as they simply don't support namespaces.\n\nSee here for more details:\nhttp://php.net/manual/en/language.namespaces.rationale.php\n\nSo 5.3 at least must be used which seems to be a bit out-dated: http://php.net/eol.php So it is a good idea to ask everyone to upgrade.\n. Sorry, short on hands here. :-(\n. No, he is not working with me on it.\n. Can't you maybe use FUSE or equivalents? Then you could simulate a \"local\" access.\n. @MarkBaker yes, correct. :-) That is why I have recommended FUSE to @wodka where the \"special\" file system can be wrapped through it.\n. You may be able to reproduce it with load() method but I like the \"externalized\" reader way better because then I can (I did for loading CSV files btw.) customize it a bit.\n. According to [documentation](http://php.net/manual/en/class.iterator.php) the next() method returns (or should return) nothing (void) and prev() seems to be no default method. In my view, PHPExcel's iterator should behave as expected, like the generic interface and not make own version.\n\nAdding an own method (prev()) is fine with me, but changing existing (well-known) method's behaviour could be a pontial source of bugs when you want to upgrade (e.g. later PHP versions may become stricter or finally have real return types which are type-safe as Java does).\n. @jbinfo welcome. :-)\n. It should not hard fail (unless configured, e.g. strict testing).. No, reducing logging means hiding bugs in application. I also see tons of E_NOTICE for missing array keys (-1, -x, y) and then ending up in a out-of-memory condition (memory leak). Hiding them (bugs) by e.g. reducing error verbosity level or by using \"@\" means they are still there (unfixed) and they will one day come back and cause trouble.\n\nI have seen this already: \"Hide E_NOTICE and my super-duper-application works with no error messages.\" or \"Your server environment is configured wrong, fix it (mostly by reducing error reporting) and my app works again.\"\n\nThis doesn't help much as described above it **hides bugs** and not **fixes** them.\n\nSo what I propose here is that PHPExcel is lesser error-tollerant becoming more robust.\n. Here are some of the lines that I mean:\n\n```\nPHP Notice:  Uninitialized string offset: -9 in a/some/path/bin/inc/third-party/PHPExcel/Shared/OLERead.php on line 309\nPHP Notice:  Uninitialized string offset: -12 in /some/path/bin/inc/third-party/PHPExcel/Shared/OLERead.php on line 316\nPHP Notice:  Uninitialized string offset: -11 in /some/path/bin/inc/third-party/PHPExcel/Shared/OLERead.php on line 316\nPHP Notice:  Uninitialized string offset: -10 in /some/path/bin/inc/third-party/PHPExcel/Shared/OLERead.php on line 316\nPHP Notice:  Uninitialized string offset: -9 in /some/path/bin/inc/third-party/PHPExcel/Shared/OLERead.php on line 309\nPHP Notice:  Uninitialized string offset: -12 in /some/path/bin/inc/third-party/PHPExcel/Shared/OLERead.php on line 316\nPHP Notice:  Uninitialized string offset: -11 in /some/path/bin/inc/third-party/PHPExcel/Shared/OLERead.php on line 316\nPHP Notice:  Uninitialized string offset: -10 in /some/path/bin/inc/third-party/PHPExcel/Shared/OLERead.php on line 316\nPHP Notice:  Uninitialized string offset: -9 in /some/path/bin/inc/third-party/PHPExcel/Shared/OLERead.php on line 309\n```\n\nIf PHPExcel sees some of those, it should treat is ad corrupted/damged input file and skip further loading attempts as with a valid file no such E_NOTICE is being shown.\n\nBack to my previous comment, if you hide E_NOTICE (e.g. via php.ini) you won't see this bug ...\n. Never mind. :-)\n. Is it not better to check for divide-by-zero condition and if so, throw an exception? Your proposed way means that such mistakes are being hidden (=ignored) and that should not be done. Every modern programming language (and libraries) are not hiding problematic data (e.g. divsion by zero ending up ignored), they instead expose it. For example Java is throwing an explicit exception, sure this is not Java itself but please take the advice from very long-term programming experiences: Only fixed bugs are good bugs. And hiding them won't fix them.\n. Then let's dump those old versions of PHP <5.3 as they are EOL anyway: http://php.net/eol.php\n\nSo that means you want to still support 5.2 and lower? Last release of 5.2 is 6 Jan 2011 ...\n. Here are some test files:\nhttps://owncloud.mxchange.org/index.php/s/us4RBigNqaqMdiO\n\nTry to convert them with PHPExcel to XLSX (none of them has that format) as I basically do here and compare the results with the original files.\n\nDates are converted to sometimes numbers, leading zeros removed.\n. So PHPExcel is out-dated? I may then have 2 options:\n- write a work-around that keeps track of each column's type and format so it can be set correctly again (bad, hard to maintain)\n- rewrite my whole application to PHPSpreadsheet (may take really long to become as before)\n\nIs there any other advantage than having a more updated code? E.g. speed improvement or memory footprint?\n. Here is my work-around:\n- added database column (`tinyint(1)`): 1= is date, 0= is other <- this tracks which column is a date and needs converting\n- used regex to check for German date-format\n- if valid, handle it over to `PHPExcel_Shared_Date::stringToExcel()` for converting\n- if no German date (such as the same float value `stringToExcel()` returns) use the value directly for next step:\n- save coordinate, value and format where to change format\n\nA bit hacky but works (with my testing files I linked here).\n. That work-around of mine seems to work. Now only removal of leading zeros (e.g. ZIP code or phone numbers have leading zeros, like here in Germany) is left (OT).\n. Thank you for clarification. It whould be still good to have a migration guideline (how to switch) for an easy (and hopefully painless) move.\n. Looks like the migration tool has been written. And I have taken @MarkBaker 's advice to write an own (custom) value binder, works nicely now. Closing ticket (please set proper status, maybe \"WONT FIX\"?). 1.8.1 is out. Is this still the case with the newer version? And please don't report bugs for old versions (I won't accept it).\n. Okay, was a bit confusing. :-)\n. I know, still I needed this change in PHPExcel to have the said speedup (some files may be larger than 100,000 rows). PHPSpreadsheet is currently causing to much errors (compared to PHPExel).. ",
    "k1LoW": "+1\n. :+1: \n. +1\n. :+1: \n. ",
    "Gemorroj": "useful\n. :+1: \n. https://github.com/PHPOffice/PHPExcel/blob/develop/composer.json#L25\nphp 5.2 not support short array syntax\n. :+1:  auto height not working\n. @MarkBaker ping\n. #709 \n. #588\n. useful\n. :+1: \n. https://github.com/PHPOffice/PHPExcel/blob/develop/composer.json#L25\nphp 5.2 not support short array syntax\n. :+1:  auto height not working\n. @MarkBaker ping\n. #709 \n. #588\n. ",
    "alexx6x": "Thank you!\n. I don't know why maybe version, maybe config, but PHPExel work correctly one one server with old php version, but when i execute this on other, error has occurred, when load file template and even didn't this display error, output stopped on half. It was so because   $colourScheme in this file was as stdObject not array, and down there is foreach loop, but php can't do foreach for  stdObject \n. Thank you!\n. I don't know why maybe version, maybe config, but PHPExel work correctly one one server with old php version, but when i execute this on other, error has occurred, when load file template and even didn't this display error, output stopped on half. It was so because   $colourScheme in this file was as stdObject not array, and down there is foreach loop, but php can't do foreach for  stdObject \n. ",
    "markushausammann": "Hey Mark, you need to push a tag for each major version of PHPExcel, look at my repo! People are not interested in installing the dev master, they want to install tags. Make sure packagist shows each major version (again, look at my composer package). This means, don't create long verbose tag names but just 1.7.7, 1.7.8, etc. Hope that helps.\n. +1 very important, as I said in the past\neach version needs a simple tag\n1.7.6, 1.7.8, etc. not even the v in the beginning is needed.\n. Please provide tags for 1.7.7 and 1.7.8 as well so I can deprecate my mirror faster.\n. great, thanks Mark, now we can start telling people to use the official repo.\n. oh, but Mark, the tag doesn't show on packagist. are you using the hook to auto-update your tags? if not, please do so.\n. ok, maybe we need to wait a little...\n. Mark, this is still not working. Please remove the hook and place it again, then create and push a new milestone.\n. Hey Mark, you need to push a tag for each major version of PHPExcel, look at my repo! People are not interested in installing the dev master, they want to install tags. Make sure packagist shows each major version (again, look at my composer package). This means, don't create long verbose tag names but just 1.7.7, 1.7.8, etc. Hope that helps.\n. +1 very important, as I said in the past\neach version needs a simple tag\n1.7.6, 1.7.8, etc. not even the v in the beginning is needed.\n. Please provide tags for 1.7.7 and 1.7.8 as well so I can deprecate my mirror faster.\n. great, thanks Mark, now we can start telling people to use the official repo.\n. oh, but Mark, the tag doesn't show on packagist. are you using the hook to auto-update your tags? if not, please do so.\n. ok, maybe we need to wait a little...\n. Mark, this is still not working. Please remove the hook and place it again, then create and push a new milestone.\n. ",
    "lxg": "I have experimented a bit and found out that the overhead is not higher, even in situations where you have very long tables (> 10000 entries) or lots of sheets (> 50). And why should it, the lot of the data is created while filling the document \u2013 the difference between saving and buffering would be at most the total file size before compression.\n\nI agree that in some situations, the memory overhead might be higher. But these would only be situations where large new objects are created within the `save()` method, for example zipped images which are not instantly written down to disk. However, I would expect that an application which offers Excel exports does not run on a box with a memory_limit of lower than 64 MB (mine have at least 256 MB), so the peak usage will never hit the boundary.\n\nBesides, when using `php://output`, PHPExcel also writes temporary files. In some situations, this not desired, e.g. when trying to avoid any disk writes in an application.\n\nI understand if you're reluctant to make this change, as I understand the implications well (and would also be afraid of support requests where people running PHPExcel on their coffee machine rant about memory usage), but maybe you could think of a solution where PHPExcel is able to avoid any hard disk writes.\n. I have experimented a bit and found out that the overhead is not higher, even in situations where you have very long tables (> 10000 entries) or lots of sheets (> 50). And why should it, the lot of the data is created while filling the document \u2013 the difference between saving and buffering would be at most the total file size before compression.\n\nI agree that in some situations, the memory overhead might be higher. But these would only be situations where large new objects are created within the `save()` method, for example zipped images which are not instantly written down to disk. However, I would expect that an application which offers Excel exports does not run on a box with a memory_limit of lower than 64 MB (mine have at least 256 MB), so the peak usage will never hit the boundary.\n\nBesides, when using `php://output`, PHPExcel also writes temporary files. In some situations, this not desired, e.g. when trying to avoid any disk writes in an application.\n\nI understand if you're reluctant to make this change, as I understand the implications well (and would also be afraid of support requests where people running PHPExcel on their coffee machine rant about memory usage), but maybe you could think of a solution where PHPExcel is able to avoid any hard disk writes.\n. ",
    "dalecosp": "Thanks Andre and Mark!  Was definitely causing an issue in some backend production systems here at OMBE.. Hi lwoods.  I've successfully written large Excel files with PHPExcel on FreeBSD; I set PHP's \"max_execution_time\" high (I used 86400 [one hour]) in the script and memory_limit=1024M in PHP.ini.  \r\n\r\nIn PHPExcel, we use PHPExcel_CachedObjectStorageFactory::cache_to_discISAM, per the docs.  Problem there is that very large files fill up a lot of disk space (been working on one lately that's over 2GB, and that one is giving us some trouble).\r\n\r\nHope this helps ..... Hello, thanks for reporting.  Are you reading or writing the Excel file?  Also, please provide the @version string from near the top of the file?. Thanks Andre and Mark!  Was definitely causing an issue in some backend production systems here at OMBE.. Hi lwoods.  I've successfully written large Excel files with PHPExcel on FreeBSD; I set PHP's \"max_execution_time\" high (I used 86400 [one hour]) in the script and memory_limit=1024M in PHP.ini.  \r\n\r\nIn PHPExcel, we use PHPExcel_CachedObjectStorageFactory::cache_to_discISAM, per the docs.  Problem there is that very large files fill up a lot of disk space (been working on one lately that's over 2GB, and that one is giving us some trouble).\r\n\r\nHope this helps ..... Hello, thanks for reporting.  Are you reading or writing the Excel file?  Also, please provide the @version string from near the top of the file?. ",
    "kea": "Thanks for the merge\n. Thanks for the merge\n. ",
    "techhead": "Thanks for the merge!\n. Thanks for the merge!\n. ",
    "hpatoio": "Using IO Factory identify() things works a better even if template saved with Office Libre, in MS Excel format, have some problems. \n\nThanks\n. Using IO Factory identify() things works a better even if template saved with Office Libre, in MS Excel format, have some problems. \n\nThanks\n. ",
    "xrorox": "Hmmm, i didn't used the setCompatibilit(true), but was opening with excel 2003, compatibility pack. The cells was merged, and i was using richtext.  In the buggy case, i was setting some options on cells content, but with a null value.\n. Hmmm, i didn't used the setCompatibilit(true), but was opening with excel 2003, compatibility pack. The cells was merged, and i was using richtext.  In the buggy case, i was setting some options on cells content, but with a null value.\n. ",
    "fengkaijia": "1.8.1 downloaded from Github is unversioned. But PHPExcel on Codeplex is still 1.8.0. So anywhere to download a versioned 1.8.1?\n. 1.8.1 downloaded from Github is unversioned. But PHPExcel on Codeplex is still 1.8.0. So anywhere to download a versioned 1.8.1?\n. ",
    "dbonsch": "Happy to hear about that.\nCan i help? \n. Perfect. I'll take care of that and implement a clean Exception architecture.\nI think i've also found some methods that claim to throw an Exception without calling any method or having a throw statement in the method body. ( I need to check if they not call some hidden \"magic\" methods )\nI'm going to clean the apidoc too.\n. I've changed the inheritance of the PHPExcel_*_Exception Exceptions, they now all extend from PHPExcel_Exception. Now we can fetch PHPExcel_Exception instead of the base Exception.\nThat's better if somebody want to catch PHPExcel specific Exceptions in his own code.\n. Why are there Exceptions thrown in a catch bock of an Exceptions?  Example: https://gist.github.com/4112606\n. Your're welcome. \n\nI think i replaced all PHPExcel Exceptions. All the Exceptions inherit from a Base PHPExcel_Exception so users are able to catch just PHPExcel Exceptions. They should not need to catch a Graph, Writer or whatever Exception explicit.\nThey could, but they should not need to specify the type. For most cases just catching the PHPExcel_Exception will be good enough.\n\nI did not yet run the tests, but if've tested it in my Tool/FW and it was running without errors.\n\nOriginally i planned to extend the tests and merge them in the actual head, but because i changed so many files that i got constantly new conflicts and stopped trying. ( I got an idea how sisyphos must have felt ) \n\nMaybe i should have done it in smaller pieces and send several pull requests. I'm lacking the experience how to interact with \"non continuous integration models\". \nI'm used to commit directly in team repos and merge instantly.\n\nI have several proposal for architecture improvements.\nWhat would be the best way to participate without creating much effort on your side for the integration?\nShould i just create a feature branch for every \"proposal\", and send a merge request?\n. Done\n. is thrown in \nPHPExcel::removeSheetByIndex  line: 261\nPHPExcel::getSheet line: 283\n\n$this->_workSheetCollection was empty ( still not shure how that could happen ) and i searched for a long time which sheet was missing, just to realize that $this->_workSheetCollection was empty. \n\nI've commited a version with the extended messages in my fork.\n. You don't need to apologize. Thx for trying to help me. :-)\n. Ok sounds good :-).\nFrom my point of view it's not that important what we use as long it's good readable and consistent. \n\nBest would be to use something like a standard that's used also in many other projects.\nIt's easier to contribute when you don't need to take care for a new code convention for every new project.\n. Closed. \nAnd thx for the report.\n. Hm.\n\nseems that isset($dataValue->a) is always false cause $allCellDataText \"should\" always be a string after implode.\n\nI check if we can replace the loop and check by a xpath query.\n\nline: 538 /PHPExcel/Classes/PHPExcel/Reader/OOCalc.php\n\n``` php\n\n   $allCellDataText = implode($dataArray, \"\\n\");\n\n   // echo 'Value Type is '.$cellDataOfficeAttributes['value-type'].'<br />';\n   switch ($cellDataOfficeAttributes['value-type']) {\n     case 'string' :\n       $type = PHPExcel_Cell_DataType::TYPE_STRING;\n       $dataValue = $allCellDataText;\n       if (isset($dataValue->a)) {\n       $dataValue = $dataValue->a;\n       $cellXLinkAttributes = $dataValue->attributes($namespacesContent['xlink']);\n       $hyperlink = $cellXLinkAttributes['href'];\n   }\n   break;\n\n```\n. Hm yes it's a nice tool.\nI've tried it but it did not fix the 4 spaces when i used it. Even using the \"indentation\" flag.\n\nLooking at your commit it seems i did something wrong.\nI'll check if this is a decent candidate for a pre commit hook.\n\nThx for the hint.\n. I've checked out [PHP-CS-Fixer/issues](https://github.com/fabpot/PHP-CS-Fixer/issues)\n\nWell in theory it's a nice tool but i'm afraid this tool has to many bugs and could lead to many unexpected results.\n\nIt seems this beautifier has a problem with the tokenizer. \nThey even replaced code constructs in string tokens. This is a little terrifying.\n\nI tried it with my codegenerators and it killed the generator output completely. I got several bugs cause the tool changed the code templates. It even changed the format in normal strings not just in heredocs.\n\nIn theory that kind of tools are nice, but i've not yet found any beautifier which did not kill the code under several circumstances. \nAnd that's why wide-used open source projects should be very careful before they use tools that have a huge and hard to control impact to the code.\n\nAs long as we have no high test coverage we should be very careful with automanted code changes.\nEven eclipse/zend is not perfect configurable. It helps, but has some implicit wrong changes to the format that are not configurable.\n\nBut we can check if we find something based on [nikic/PHP-Parser](https://github.com/nikic/PHP-Parser)  that's something i would more rely on.\n. Well as if've said we should be very careful seems this tool is not yet stable. \nIt has broken the output of the code in my other project.\n\nWe can use it to fix \"experimental\" and check if everything works as expected but we should check if there's a more mature option or wait until it's more stable.\n\nIt doe's not hurt to much waiting until they fixed some of the annoying bugs. Until then i would not propose to use this tool in a pre commit hook.\n\nLets check it out in 2 or 3 month again. I think it has some potential.\n. Please don't get me wrong. We are really happy about help and would love to use a tool\nthat takes away the work of reformatting the code.\n\n_> Zend Framework 2 use it in production already._\n\ni don't say it must happen, but as i mentioned before it can. \nOne of my other Projects is a code generator  and PHP-CS-fixer changed the code in the templates what caused several syntax errors in the generated code.\n\nI think you can imagine that my first impression was a little negative.\n\nWe have several formulas in strings or some other constructs, that not should be changed. \nI'm not yet aware how big the risk is for PHPExcel, @MarkBaker should be able to evaluate that better than me.\n\nIf we can prevent that kind of error by not using some of the fixer adapters it's fine.\nIt's mainly the change of string values that scares me.\nI've tried it with all available fixer flags. Maybe that was the problem as you mentioned.\n\nHowever i would prefer to create a new branch so we can first test if everything works as expected before we change the complete develop branch. Just to be sure.\n. The templates are embeded in the codegen cartridges with heredoc syntax as you can see in the \n[Example](https://gist.github.com/anonymous/d77188b38258dba07662).\n\nPHP-CS-fixer changed the code inside of the the heredoc blocks. That caused several syntax errors in the generated PHP code. The generator it self was still running, but the output was broken.\n\nJust in case if you wonder about embeded templates in heredoc, the output itself is phpcode. That's only partial comparable to requirements for HTML templates.\n\nOk lets come back to the topic. Can you give us a hint which **fixers** we should avoid if we don't want to take any risk? So everything that could change the content of strings by chance should not be used. \n\nThx\n. I talked to some people seems but no one could give me a better alternative than the cs-fixer. \n\nYou are perfectly right when you say that this kind of work should not be done by hand. \nI'm going to learn what kind of side effects the could have, and need to discuss that with the team.\n\nI'll give you an update when we know what we are going to do.\nThx for your support. \n. Hi @Slamdunk just wanted to give you an update. \n\nI'm still playing with PHP-CS-fixer, meanwhile if found at least one critical \"code breaker\", for example: PHPExcel supports formulars with \"IF(\" which PHP-CS-fixer changed to \"IF (\" what breaked the code. \n. Thx\n. Well as a first quick Solution we can add a method:\n\n```\npublic function getRow($pos){\n  return new PHPExcel_Worksheet_Row($this, $pos);\n}\n```\n\nin the class PHPExcel_Worksheet.\n. Happy to hear about that.\nCan i help? \n. Perfect. I'll take care of that and implement a clean Exception architecture.\nI think i've also found some methods that claim to throw an Exception without calling any method or having a throw statement in the method body. ( I need to check if they not call some hidden \"magic\" methods )\nI'm going to clean the apidoc too.\n. I've changed the inheritance of the PHPExcel_*_Exception Exceptions, they now all extend from PHPExcel_Exception. Now we can fetch PHPExcel_Exception instead of the base Exception.\nThat's better if somebody want to catch PHPExcel specific Exceptions in his own code.\n. Why are there Exceptions thrown in a catch bock of an Exceptions?  Example: https://gist.github.com/4112606\n. Your're welcome. \n\nI think i replaced all PHPExcel Exceptions. All the Exceptions inherit from a Base PHPExcel_Exception so users are able to catch just PHPExcel Exceptions. They should not need to catch a Graph, Writer or whatever Exception explicit.\nThey could, but they should not need to specify the type. For most cases just catching the PHPExcel_Exception will be good enough.\n\nI did not yet run the tests, but if've tested it in my Tool/FW and it was running without errors.\n\nOriginally i planned to extend the tests and merge them in the actual head, but because i changed so many files that i got constantly new conflicts and stopped trying. ( I got an idea how sisyphos must have felt ) \n\nMaybe i should have done it in smaller pieces and send several pull requests. I'm lacking the experience how to interact with \"non continuous integration models\". \nI'm used to commit directly in team repos and merge instantly.\n\nI have several proposal for architecture improvements.\nWhat would be the best way to participate without creating much effort on your side for the integration?\nShould i just create a feature branch for every \"proposal\", and send a merge request?\n. Done\n. is thrown in \nPHPExcel::removeSheetByIndex  line: 261\nPHPExcel::getSheet line: 283\n\n$this->_workSheetCollection was empty ( still not shure how that could happen ) and i searched for a long time which sheet was missing, just to realize that $this->_workSheetCollection was empty. \n\nI've commited a version with the extended messages in my fork.\n. You don't need to apologize. Thx for trying to help me. :-)\n. Ok sounds good :-).\nFrom my point of view it's not that important what we use as long it's good readable and consistent. \n\nBest would be to use something like a standard that's used also in many other projects.\nIt's easier to contribute when you don't need to take care for a new code convention for every new project.\n. Closed. \nAnd thx for the report.\n. Hm.\n\nseems that isset($dataValue->a) is always false cause $allCellDataText \"should\" always be a string after implode.\n\nI check if we can replace the loop and check by a xpath query.\n\nline: 538 /PHPExcel/Classes/PHPExcel/Reader/OOCalc.php\n\n``` php\n\n   $allCellDataText = implode($dataArray, \"\\n\");\n\n   // echo 'Value Type is '.$cellDataOfficeAttributes['value-type'].'<br />';\n   switch ($cellDataOfficeAttributes['value-type']) {\n     case 'string' :\n       $type = PHPExcel_Cell_DataType::TYPE_STRING;\n       $dataValue = $allCellDataText;\n       if (isset($dataValue->a)) {\n       $dataValue = $dataValue->a;\n       $cellXLinkAttributes = $dataValue->attributes($namespacesContent['xlink']);\n       $hyperlink = $cellXLinkAttributes['href'];\n   }\n   break;\n\n```\n. Hm yes it's a nice tool.\nI've tried it but it did not fix the 4 spaces when i used it. Even using the \"indentation\" flag.\n\nLooking at your commit it seems i did something wrong.\nI'll check if this is a decent candidate for a pre commit hook.\n\nThx for the hint.\n. I've checked out [PHP-CS-Fixer/issues](https://github.com/fabpot/PHP-CS-Fixer/issues)\n\nWell in theory it's a nice tool but i'm afraid this tool has to many bugs and could lead to many unexpected results.\n\nIt seems this beautifier has a problem with the tokenizer. \nThey even replaced code constructs in string tokens. This is a little terrifying.\n\nI tried it with my codegenerators and it killed the generator output completely. I got several bugs cause the tool changed the code templates. It even changed the format in normal strings not just in heredocs.\n\nIn theory that kind of tools are nice, but i've not yet found any beautifier which did not kill the code under several circumstances. \nAnd that's why wide-used open source projects should be very careful before they use tools that have a huge and hard to control impact to the code.\n\nAs long as we have no high test coverage we should be very careful with automanted code changes.\nEven eclipse/zend is not perfect configurable. It helps, but has some implicit wrong changes to the format that are not configurable.\n\nBut we can check if we find something based on [nikic/PHP-Parser](https://github.com/nikic/PHP-Parser)  that's something i would more rely on.\n. Well as if've said we should be very careful seems this tool is not yet stable. \nIt has broken the output of the code in my other project.\n\nWe can use it to fix \"experimental\" and check if everything works as expected but we should check if there's a more mature option or wait until it's more stable.\n\nIt doe's not hurt to much waiting until they fixed some of the annoying bugs. Until then i would not propose to use this tool in a pre commit hook.\n\nLets check it out in 2 or 3 month again. I think it has some potential.\n. Please don't get me wrong. We are really happy about help and would love to use a tool\nthat takes away the work of reformatting the code.\n\n_> Zend Framework 2 use it in production already._\n\ni don't say it must happen, but as i mentioned before it can. \nOne of my other Projects is a code generator  and PHP-CS-fixer changed the code in the templates what caused several syntax errors in the generated code.\n\nI think you can imagine that my first impression was a little negative.\n\nWe have several formulas in strings or some other constructs, that not should be changed. \nI'm not yet aware how big the risk is for PHPExcel, @MarkBaker should be able to evaluate that better than me.\n\nIf we can prevent that kind of error by not using some of the fixer adapters it's fine.\nIt's mainly the change of string values that scares me.\nI've tried it with all available fixer flags. Maybe that was the problem as you mentioned.\n\nHowever i would prefer to create a new branch so we can first test if everything works as expected before we change the complete develop branch. Just to be sure.\n. The templates are embeded in the codegen cartridges with heredoc syntax as you can see in the \n[Example](https://gist.github.com/anonymous/d77188b38258dba07662).\n\nPHP-CS-fixer changed the code inside of the the heredoc blocks. That caused several syntax errors in the generated PHP code. The generator it self was still running, but the output was broken.\n\nJust in case if you wonder about embeded templates in heredoc, the output itself is phpcode. That's only partial comparable to requirements for HTML templates.\n\nOk lets come back to the topic. Can you give us a hint which **fixers** we should avoid if we don't want to take any risk? So everything that could change the content of strings by chance should not be used. \n\nThx\n. I talked to some people seems but no one could give me a better alternative than the cs-fixer. \n\nYou are perfectly right when you say that this kind of work should not be done by hand. \nI'm going to learn what kind of side effects the could have, and need to discuss that with the team.\n\nI'll give you an update when we know what we are going to do.\nThx for your support. \n. Hi @Slamdunk just wanted to give you an update. \n\nI'm still playing with PHP-CS-fixer, meanwhile if found at least one critical \"code breaker\", for example: PHPExcel supports formulars with \"IF(\" which PHP-CS-fixer changed to \"IF (\" what breaked the code. \n. Thx\n. Well as a first quick Solution we can add a method:\n\n```\npublic function getRow($pos){\n  return new PHPExcel_Worksheet_Row($this, $pos);\n}\n```\n\nin the class PHPExcel_Worksheet.\n. ",
    "drzraf": "this blocks the Reader too, when a file is to be imported...\n. this blocks the Reader too, when a file is to be imported...\n. ",
    "i4got10": "For example, my bank create reports in xls format with bills for the period. The file is generated programmatically and contains a title longer than 32 characters. When I import this xls, I can not open it and exception 'Maximum 31 characters allowed in sheet title.' thrown.\n\nIm simplify add `php $pValue = substr($pValue, 0, 31);` at phpexcel/PHPExcel/Worksheet.php:420 to prevent this exception but It a super dirty solution.\n. For example, my bank create reports in xls format with bills for the period. The file is generated programmatically and contains a title longer than 32 characters. When I import this xls, I can not open it and exception 'Maximum 31 characters allowed in sheet title.' thrown.\n\nIm simplify add `php $pValue = substr($pValue, 0, 31);` at phpexcel/PHPExcel/Worksheet.php:420 to prevent this exception but It a super dirty solution.\n. ",
    "frost-nzcr4": "There is no restriction on worksheet name length in the standard [ECMA-376 4th edition Part 1](http://www.ecma-international.org/publications/standards/Ecma-376.htm):\n\n```\n<xsd:complexType name=\"CT_Sheet\">\n    <xsd:attribute name=\"name\" type=\"s:ST_Xstring\" use=\"required\"/>\n    ...\n</xsd:complexType>\n```\n\nThat kind of restrictions should be implemented in the writers.\n. I've added the basic ODS writing, try it out.\n. Oh, there is another PR #352 that fix this issue.\n. Duplicate of #351 \n. I thought that OpenDocument is the most common name for all applications like OpenOffice.org Calc, LibreOffice Calc or AbiWord, but for BC I offer you, as maintainer, to decide which one is suits best.\n. @MarkBaker LGTM. I don't use method getCalculatedValue() because of `@deprecated` tag, but looking at other writers I can say that it used everywhere.\n. Duplicate of #339 \n. Since PHP 5.4.0 second parameter `options` was added (see http://php.net/manual/en/domdocument.loadhtmlfile.php). Related to #339\n. There is no restriction on worksheet name length in the standard [ECMA-376 4th edition Part 1](http://www.ecma-international.org/publications/standards/Ecma-376.htm):\n\n```\n<xsd:complexType name=\"CT_Sheet\">\n    <xsd:attribute name=\"name\" type=\"s:ST_Xstring\" use=\"required\"/>\n    ...\n</xsd:complexType>\n```\n\nThat kind of restrictions should be implemented in the writers.\n. I've added the basic ODS writing, try it out.\n. Oh, there is another PR #352 that fix this issue.\n. Duplicate of #351 \n. I thought that OpenDocument is the most common name for all applications like OpenOffice.org Calc, LibreOffice Calc or AbiWord, but for BC I offer you, as maintainer, to decide which one is suits best.\n. @MarkBaker LGTM. I don't use method getCalculatedValue() because of `@deprecated` tag, but looking at other writers I can say that it used everywhere.\n. Duplicate of #339 \n. Since PHP 5.4.0 second parameter `options` was added (see http://php.net/manual/en/domdocument.loadhtmlfile.php). Related to #339\n. ",
    "LoranRendel": "New versions of Excel supports longer names even for xls.\n. Oh, sorry, my mistake, actually there are 31 unicode symbols.\nBut if I write more symbols (Excel5, xls), MS Excel 2016 read first 31, and LibreOffice read entire string.\n. New versions of Excel supports longer names even for xls.\n. Oh, sorry, my mistake, actually there are 31 unicode symbols.\nBut if I write more symbols (Excel5, xls), MS Excel 2016 read first 31, and LibreOffice read entire string.\n. ",
    "53715": "I run excel 2003 on a Win XP box.\nOur pay roll vendor sends an excel spreadsheet after every payroll. \nIt consists of a single tab, with a 42 character name.\nexcel 2003 opens it without an issue.\nonce open, clicking on file->properties->contents show the first 37 characters and three dots because that is all the width they have for a display. In my mind they know that name is longer and are OK with it.\n\nI have been trying to figure out what application our payroll processor uses to create the .xls file. It is generated by a server, not a person so I am 99.9% certain that it was not created by excel. I don't see anything in the file that identifies the application or publisher.\n\nI have to find a way to read this file. The version of php excel that I used (2012 vintage according to the headers in the source files) stops dead (throws an exception) when it hits the 42 character sheet name.  I am certain that it is not used in formulas, I don't want to manually load it into excel, truncate it and save it. On that topic, you can rename the 42 character tab name but you are restricted when you do in that each intermediate name must result in a name of 31 characters or less. You can't type a letter (intermediate name length goes from 42 to 43, excel 2003 does not accept. You can't even press the delete key (intermediate name length goes from 42 to 41, excel 2003 does not accept. You can make a selection of 10 to 42 characters and press delete. the intermediate name will be between 0 and 31 characters and excel 2003 will accept that.\n\nSo what can we do to allow a sheet with a tab name longer than 31 to load? For my purposes it would be OK but less than desirable to name the tab \"Sheet 1\".  Truncating it to 30 characters with one reserved for a \"tie breaker\" could work as could some logic that would remover the common characters from the front tab names, be they at the front or the back, and leaving the unique parts of the names is another thought.\n\nThis is only tangentially related, I can not find the 31 character limit in this documentation: \nhttps://support.office.com/en-us/article/Excel-specifications-and-limits-16c69c74-3d6a-4aaf-ba35-e6eb276e8eaa\n\nIt lists every excel limit imaginable except a limit on tab name length.\nI guess I would be happy if they called it out and said \"not limited\" or \"limited by available memory\" or \"limited by file size limitations\" but I can not see where they say anything one way or the other on it and excel 2003 clearly has some limitations if not an outright ban on tab names longer than 32.\n\nI have to keep digging.\nI will post more as I learn more.\nIn the mean time if Mark can point me in the right direction, it would be helpful.\n. I was able to get the sheet from the payroll company loaded by going to the checkSheetTitle method in worksheet.php and changing the max title length from 31 to 131 which is not an ideal solution at all but it gets my employer off my back.\n\n@MarkBaker on Jul 23, 2013 while you may not be sure how, I just demonstrated that it can and I submit that it should. @dbonsch on Nov 16, 2012 suggested truncation, we could do truncation with a tie breaker, I just demonstrated that at least in certain cases, it can be left long. I agree strongly that the as long as banks and payroll companies send us workbooks that have tabs with long names that excel 2003 has no trouble reading, then phpexcel should be able to open and read them too. It should enforce the 31 character limit in the writers, not in the readers as proposed by issue #382. I routinely \"enhance\" phpexcel for our own purposes. Typically it is to avoid throwing exceptions that are not warranted, just like this one. The modified code runs with perfect reliability in our domain but I have no way to vet my code to make sure that it would run in all domains so I have not submitted it. I am sure that I could write code that would address this issue and test it here, but I have no idea what to do with the code after I test it locally so that others could benefit from it\n. @aloha0608 that is essentially that same work around described in the post of February 11th. It works but it is not a resolution of the issue.\n. I run excel 2003 on a Win XP box.\nOur pay roll vendor sends an excel spreadsheet after every payroll. \nIt consists of a single tab, with a 42 character name.\nexcel 2003 opens it without an issue.\nonce open, clicking on file->properties->contents show the first 37 characters and three dots because that is all the width they have for a display. In my mind they know that name is longer and are OK with it.\n\nI have been trying to figure out what application our payroll processor uses to create the .xls file. It is generated by a server, not a person so I am 99.9% certain that it was not created by excel. I don't see anything in the file that identifies the application or publisher.\n\nI have to find a way to read this file. The version of php excel that I used (2012 vintage according to the headers in the source files) stops dead (throws an exception) when it hits the 42 character sheet name.  I am certain that it is not used in formulas, I don't want to manually load it into excel, truncate it and save it. On that topic, you can rename the 42 character tab name but you are restricted when you do in that each intermediate name must result in a name of 31 characters or less. You can't type a letter (intermediate name length goes from 42 to 43, excel 2003 does not accept. You can't even press the delete key (intermediate name length goes from 42 to 41, excel 2003 does not accept. You can make a selection of 10 to 42 characters and press delete. the intermediate name will be between 0 and 31 characters and excel 2003 will accept that.\n\nSo what can we do to allow a sheet with a tab name longer than 31 to load? For my purposes it would be OK but less than desirable to name the tab \"Sheet 1\".  Truncating it to 30 characters with one reserved for a \"tie breaker\" could work as could some logic that would remover the common characters from the front tab names, be they at the front or the back, and leaving the unique parts of the names is another thought.\n\nThis is only tangentially related, I can not find the 31 character limit in this documentation: \nhttps://support.office.com/en-us/article/Excel-specifications-and-limits-16c69c74-3d6a-4aaf-ba35-e6eb276e8eaa\n\nIt lists every excel limit imaginable except a limit on tab name length.\nI guess I would be happy if they called it out and said \"not limited\" or \"limited by available memory\" or \"limited by file size limitations\" but I can not see where they say anything one way or the other on it and excel 2003 clearly has some limitations if not an outright ban on tab names longer than 32.\n\nI have to keep digging.\nI will post more as I learn more.\nIn the mean time if Mark can point me in the right direction, it would be helpful.\n. I was able to get the sheet from the payroll company loaded by going to the checkSheetTitle method in worksheet.php and changing the max title length from 31 to 131 which is not an ideal solution at all but it gets my employer off my back.\n\n@MarkBaker on Jul 23, 2013 while you may not be sure how, I just demonstrated that it can and I submit that it should. @dbonsch on Nov 16, 2012 suggested truncation, we could do truncation with a tie breaker, I just demonstrated that at least in certain cases, it can be left long. I agree strongly that the as long as banks and payroll companies send us workbooks that have tabs with long names that excel 2003 has no trouble reading, then phpexcel should be able to open and read them too. It should enforce the 31 character limit in the writers, not in the readers as proposed by issue #382. I routinely \"enhance\" phpexcel for our own purposes. Typically it is to avoid throwing exceptions that are not warranted, just like this one. The modified code runs with perfect reliability in our domain but I have no way to vet my code to make sure that it would run in all domains so I have not submitted it. I am sure that I could write code that would address this issue and test it here, but I have no idea what to do with the code after I test it locally so that others could benefit from it\n. @aloha0608 that is essentially that same work around described in the post of February 11th. It works but it is not a resolution of the issue.\n. ",
    "jdufresne": "I have created a minimal example repository that demonstrates this bug with the PHPExcel reader at https://github.com/jdufresne/phpexceltest.\n\nIn the repository is the file `test.xls` with a 50+ character sheet name. The file was created using LibreOffice. Other than changing the sheet name, nothing else was modified.\n\nThe test PHP file consists only of `PHPExcel_IOFactory::load('test.xls');`. When running `php test.php`, this fails with the following stack trace:\n\n```\nPHP Fatal error:  Uncaught exception 'PHPExcel_Exception' with message 'Maximum 31 characters allowed in sheet title.' in .../phpexceltest/vendor/phpoffice/phpexcel/Classes/PHPExcel/Worksheet.php:472\nStack trace:\n#0 .../phpexceltest/vendor/phpoffice/phpexcel/Classes/PHPExcel/Worksheet.php(841): PHPExcel_Worksheet::_checkSheetTitle('Lorem ipsum dol...')\n#1 .../phpexceltest/vendor/phpoffice/phpexcel/Classes/PHPExcel/Reader/Excel5.php(761): PHPExcel_Worksheet->setTitle('Lorem ipsum dol...', false)\n#2 .../phpexceltest/vendor/phpoffice/phpexcel/Classes/PHPExcel/IOFactory.php(192): PHPExcel_Reader_Excel5->load('test.xls')\n#3 .../phpexceltest/test.php(4): PHPExcel_IOFactory::load('test.xls')\n#4 {main}\n  thrown in .../phpexceltest/vendor/phpoffice/phpexcel/Classes/PHPExcel/Worksheet.php on line 472\n```\n. ping?\n\nRight now every time I download PHPExcel through composer, a large number of examples and unit tests come with it. It would be nice if these dev only items weren't distributed with the composer build.\n. I have created a minimal example repository that demonstrates this bug with the PHPExcel reader at https://github.com/jdufresne/phpexceltest.\n\nIn the repository is the file `test.xls` with a 50+ character sheet name. The file was created using LibreOffice. Other than changing the sheet name, nothing else was modified.\n\nThe test PHP file consists only of `PHPExcel_IOFactory::load('test.xls');`. When running `php test.php`, this fails with the following stack trace:\n\n```\nPHP Fatal error:  Uncaught exception 'PHPExcel_Exception' with message 'Maximum 31 characters allowed in sheet title.' in .../phpexceltest/vendor/phpoffice/phpexcel/Classes/PHPExcel/Worksheet.php:472\nStack trace:\n#0 .../phpexceltest/vendor/phpoffice/phpexcel/Classes/PHPExcel/Worksheet.php(841): PHPExcel_Worksheet::_checkSheetTitle('Lorem ipsum dol...')\n#1 .../phpexceltest/vendor/phpoffice/phpexcel/Classes/PHPExcel/Reader/Excel5.php(761): PHPExcel_Worksheet->setTitle('Lorem ipsum dol...', false)\n#2 .../phpexceltest/vendor/phpoffice/phpexcel/Classes/PHPExcel/IOFactory.php(192): PHPExcel_Reader_Excel5->load('test.xls')\n#3 .../phpexceltest/test.php(4): PHPExcel_IOFactory::load('test.xls')\n#4 {main}\n  thrown in .../phpexceltest/vendor/phpoffice/phpexcel/Classes/PHPExcel/Worksheet.php on line 472\n```\n. ping?\n\nRight now every time I download PHPExcel through composer, a large number of examples and unit tests come with it. It would be nice if these dev only items weren't distributed with the composer build.\n. ",
    "aloha0608": "Just go to phpoffice/phpexcel/classess/phpexcel/Worksheet.php file and comment the following line ,\n\nif (PHPExcel_Shared_String::CountCharacters($pValue) > 31) {\n            throw new PHPExcel_Exception('Maximum 31 characters allowed in sheet title.');\n        }\n. Just go to phpoffice/phpexcel/classess/phpexcel/Worksheet.php file and comment the following line ,\n\nif (PHPExcel_Shared_String::CountCharacters($pValue) > 31) {\n            throw new PHPExcel_Exception('Maximum 31 characters allowed in sheet title.');\n        }\n. ",
    "JaceTan": "Hi I've got this error too.\n\nHowever, commenting out lines 1717 to 1780 in PHPExcel/Reader/Excel2007.php (somewhat) solves this problem. We can now upload and process our sheets nicely.\n\nNot sure if the removal of these lines will affect future codes.\n\nIs there another fix? Possibly one that will be updated in the next version of PHPExcel?\n\nWe've also posted this in PHPExcel Codplex here: http://phpexcel.codeplex.com/discussions/249093\n\nWe're using version 1.7.8.\n\nThanks!\n. Hi I've got this error too.\n\nHowever, commenting out lines 1717 to 1780 in PHPExcel/Reader/Excel2007.php (somewhat) solves this problem. We can now upload and process our sheets nicely.\n\nNot sure if the removal of these lines will affect future codes.\n\nIs there another fix? Possibly one that will be updated in the next version of PHPExcel?\n\nWe've also posted this in PHPExcel Codplex here: http://phpexcel.codeplex.com/discussions/249093\n\nWe're using version 1.7.8.\n\nThanks!\n. ",
    "huanggaoyuan2016": "Completely ignorant than. Completely ignorant than. ",
    "iamMarkchu": "i use 1.7.4 version ,   the only way to solve 'Sheet index is out of bounds' this problem is to updated phpexcel?. i use 1.7.4 version ,   the only way to solve 'Sheet index is out of bounds' this problem is to updated phpexcel?. ",
    "amironov": "For applyFromArray() this technique is not applicable. Cloned $newStyle is new object and cellXfExists() will always return false.\n. Describe your use case. How do you create new styles? Once in program like in 40duplicateStyle.php or every time before duplicateStyle()?\n. @karak\nThe answer was in the first line of duplicateStyle(). See https://github.com/PHPOffice/PHPExcel/pull/101.\n. @karak & @MarkBaker \n\n> I adopted an altenative way to boost applyFromArray()...\n\nIt is better to extend the interface of PHPExcel_IComparable with equals() method and use it for styles searching.\n\nIn general use getHashCode() for equality is very strange.\n. In 40duplicateStyle-getStyle.xlsx styles changed only in first column, but all cell styles must be changed.\n\nAnd I don't fully understand supervisor styles. What problems they solve?\n. What I must say? Don`t use applyFromArray(), try following code:\n\n```\n$style = new PHPExcel_Style;\n$workbook->addCellXf($style);\n\nforeach (...) {\n    $cell = $worksheet->getCell(...);\n    $cell->setValue(...);\n    $cell->setXfIndex($style->getIndex());\n}\n```\n. Don't understand you.\n. No, this adapter implements SEW API for PHPExcel. It is only wrapper and use writers from PHPExcel.\n\nMay be useful for legacy code, that uses SEW library. Patch your old code:\n\n```\n-require_once 'Spreadsheet/Excel/Writer.php';\n+require_once 'PHPExcel.php';\n\n-$workbook = new Spreadsheet_Excel_Writer();\n+$workbook = new PHPExcel_Adapter_Spreadsheet_Excel_Writer();\n```\n\nAnd your programs will use PHPExcel.\n\nYou can customize PHPExcel cache and writer:\n\n```\n$peSettings = array(\n    'CachedObjectStorage' => array(\n        'type' => 'Memory',\n        'args' => array(),\n        ),\n    'Writer' => array(\n        'type' => 'Excel2007'\n        ),\n    );\n\n$workbook = new PHPExcel_Adapter_Spreadsheet_Excel_Writer('-', $peSettings);\n```\n\nThis version contains support code for [writer performance patches](https://github.com/amironov/PHPExcel/commits/writer-perf.private), which still untested, so branch is private.\nDefault CachedObjectStorage is PHPTemp.\n. You store styles hashes in $_appliedStyles, but what if the style will be changed from outside applyFromArray()? Then applyFromArray()  can  duplicate the style or can find the wrong style.\n\nSee also #103.\n. For applyFromArray() this technique is not applicable. Cloned $newStyle is new object and cellXfExists() will always return false.\n. Describe your use case. How do you create new styles? Once in program like in 40duplicateStyle.php or every time before duplicateStyle()?\n. @karak\nThe answer was in the first line of duplicateStyle(). See https://github.com/PHPOffice/PHPExcel/pull/101.\n. @karak & @MarkBaker \n\n> I adopted an altenative way to boost applyFromArray()...\n\nIt is better to extend the interface of PHPExcel_IComparable with equals() method and use it for styles searching.\n\nIn general use getHashCode() for equality is very strange.\n. In 40duplicateStyle-getStyle.xlsx styles changed only in first column, but all cell styles must be changed.\n\nAnd I don't fully understand supervisor styles. What problems they solve?\n. What I must say? Don`t use applyFromArray(), try following code:\n\n```\n$style = new PHPExcel_Style;\n$workbook->addCellXf($style);\n\nforeach (...) {\n    $cell = $worksheet->getCell(...);\n    $cell->setValue(...);\n    $cell->setXfIndex($style->getIndex());\n}\n```\n. Don't understand you.\n. No, this adapter implements SEW API for PHPExcel. It is only wrapper and use writers from PHPExcel.\n\nMay be useful for legacy code, that uses SEW library. Patch your old code:\n\n```\n-require_once 'Spreadsheet/Excel/Writer.php';\n+require_once 'PHPExcel.php';\n\n-$workbook = new Spreadsheet_Excel_Writer();\n+$workbook = new PHPExcel_Adapter_Spreadsheet_Excel_Writer();\n```\n\nAnd your programs will use PHPExcel.\n\nYou can customize PHPExcel cache and writer:\n\n```\n$peSettings = array(\n    'CachedObjectStorage' => array(\n        'type' => 'Memory',\n        'args' => array(),\n        ),\n    'Writer' => array(\n        'type' => 'Excel2007'\n        ),\n    );\n\n$workbook = new PHPExcel_Adapter_Spreadsheet_Excel_Writer('-', $peSettings);\n```\n\nThis version contains support code for [writer performance patches](https://github.com/amironov/PHPExcel/commits/writer-perf.private), which still untested, so branch is private.\nDefault CachedObjectStorage is PHPTemp.\n. You store styles hashes in $_appliedStyles, but what if the style will be changed from outside applyFromArray()? Then applyFromArray()  can  duplicate the style or can find the wrong style.\n\nSee also #103.\n. ",
    "DerDu": "The user is responsible?.. This can't be really a serious answer right?\nsee: #557\n. `UTF-8` isn't? ..\nNo question, but now the function at least will try to respond somewhat to the error instead of nothing and just dying with 'highway-to-hell'-@.\n\nThis sanitizing method indeed needs a big refactoring on encoding detection and >>error handling<<\n. i know its more like quick'n dirty but it only triggers if the value is not already `UTF-8` and most of the time the error occurs in combination with `\u00f6\u00e4\u00fc\u00df\u20ac` not correctly encoded as `UTF-8` so `WINDOWS-1252` can handle this quite well (including mac) \n;-)\n. The user is responsible?.. This can't be really a serious answer right?\nsee: #557\n. `UTF-8` isn't? ..\nNo question, but now the function at least will try to respond somewhat to the error instead of nothing and just dying with 'highway-to-hell'-@.\n\nThis sanitizing method indeed needs a big refactoring on encoding detection and >>error handling<<\n. i know its more like quick'n dirty but it only triggers if the value is not already `UTF-8` and most of the time the error occurs in combination with `\u00f6\u00e4\u00fc\u00df\u20ac` not correctly encoded as `UTF-8` so `WINDOWS-1252` can handle this quite well (including mac) \n;-)\n. ",
    "Slamdunk": "On my Linux there are a lot of failing tests, like https://github.com/PHPOffice/PHPExcel/blob/develop/unitTests/Classes/PHPExcel/Shared/FileTest.php#L40-L46\n\nOnce you've merged this PR, I'll help you to fix all the tests.\n. The tests are failing in all PHP versions because creators of the project tested it in a Windows environment.\nWith time, we will fix all the issues, but no one can fix all them at once.\n\nThe first step is to make the code compilant, the next steps will come with other PRs.\n\nMaybe you are able to fix 165 failing tests in a single day in a single PR, if so, please make that PR.\n. @MarkBaker is there a plan to make all tests passing in Travis? Except for the bunch of test I've already fixed (and another bunch) I'm unable to know if all other hundred failing tests are failing right or wrong. And I think no one is, except for who created that tests.\n. @MarkBaker any news on the plan I cited above?\n. Whichever decision you'll take about this PR or a particular tool, automated coding standard fixing is absolutely the way to go for a wide-used open-source project like this one.\n. Main bugs are in poor specified non-tokenized fixer, like `visibility` one, that I've intentionally left out.\n\n[Zend Framework 2](https://github.com/zendframework/zf2/blob/master/.php_cs) use it in production already.\n\nTests result with same output before and after this commit:\nhttps://travis-ci.org/PHPOffice/PHPExcel/jobs/4712075\nhttps://travis-ci.org/PHPOffice/PHPExcel/jobs/4742603\n\nPHP-CS-Fixer will not change within the next months (I know the maintainer), so no need to wait.\n\nIf you are scared about changes, what I can do is to regenerate this PR and commit each single fixers alone, so you can check the result step by step.\n\nFor what it's worth, I use this tool in our pure OOP company project of 3.000 classes since 6 months ago with no faults.\n. Which extension do you use for your templates? Most fixers check the estension must be php, considering by default the templates have phtml instead, to not fix them on purpose.\n. Well, the tool uses regex instead of tokenization, so it will always modify heredocs and strings. I tried to PR the project to use tokens, but no one cares.\n\nWhat we can do here is to keep only trivial fixers, like indentation, linefeed, php_closing_tag etc... ping me if you want me to open a new PR with only those fixers.\n. On my Linux there are a lot of failing tests, like https://github.com/PHPOffice/PHPExcel/blob/develop/unitTests/Classes/PHPExcel/Shared/FileTest.php#L40-L46\n\nOnce you've merged this PR, I'll help you to fix all the tests.\n. The tests are failing in all PHP versions because creators of the project tested it in a Windows environment.\nWith time, we will fix all the issues, but no one can fix all them at once.\n\nThe first step is to make the code compilant, the next steps will come with other PRs.\n\nMaybe you are able to fix 165 failing tests in a single day in a single PR, if so, please make that PR.\n. @MarkBaker is there a plan to make all tests passing in Travis? Except for the bunch of test I've already fixed (and another bunch) I'm unable to know if all other hundred failing tests are failing right or wrong. And I think no one is, except for who created that tests.\n. @MarkBaker any news on the plan I cited above?\n. Whichever decision you'll take about this PR or a particular tool, automated coding standard fixing is absolutely the way to go for a wide-used open-source project like this one.\n. Main bugs are in poor specified non-tokenized fixer, like `visibility` one, that I've intentionally left out.\n\n[Zend Framework 2](https://github.com/zendframework/zf2/blob/master/.php_cs) use it in production already.\n\nTests result with same output before and after this commit:\nhttps://travis-ci.org/PHPOffice/PHPExcel/jobs/4712075\nhttps://travis-ci.org/PHPOffice/PHPExcel/jobs/4742603\n\nPHP-CS-Fixer will not change within the next months (I know the maintainer), so no need to wait.\n\nIf you are scared about changes, what I can do is to regenerate this PR and commit each single fixers alone, so you can check the result step by step.\n\nFor what it's worth, I use this tool in our pure OOP company project of 3.000 classes since 6 months ago with no faults.\n. Which extension do you use for your templates? Most fixers check the estension must be php, considering by default the templates have phtml instead, to not fix them on purpose.\n. Well, the tool uses regex instead of tokenization, so it will always modify heredocs and strings. I tried to PR the project to use tokens, but no one cares.\n\nWhat we can do here is to keep only trivial fixers, like indentation, linefeed, php_closing_tag etc... ping me if you want me to open a new PR with only those fixers.\n. ",
    "Aeon": ":+1: would love to be able to use the official repository in composer.\n. :+1: would love to be able to use the official repository in composer.\n. ",
    "bretrzaun": "+1\n. +1\n. ",
    "antoniopaisfernandes": "Hello,\n\nHow is this issue?\n\nBest regards\n. Hello,\n\nHow is this issue?\n\nBest regards\n. ",
    "ccorliss": "@MarkBaker Is there anything I can do to help move this pull request along?  It's a simple fix, and we can't use the main PHPOffice/PHPExcel branch without it.\n. It was an empty string because that's the default for PHPExcel_Style_NumberFormat::toFormattedString\n\nie:\n\n``` php\npublic static function toFormattedString($value = '', $format = '', $callBack = null)\n```\n\nI just added a commit defaulting to PHPExcel_Style_NumberFormat::FORMAT_GENERAL if that is preferred.\n. @MarkBaker Is there anything I can do to help move this pull request along?  It's a simple fix, and we can't use the main PHPOffice/PHPExcel branch without it.\n. It was an empty string because that's the default for PHPExcel_Style_NumberFormat::toFormattedString\n\nie:\n\n``` php\npublic static function toFormattedString($value = '', $format = '', $callBack = null)\n```\n\nI just added a commit defaulting to PHPExcel_Style_NumberFormat::FORMAT_GENERAL if that is preferred.\n. ",
    "laurin1": "I'm confused. The fix applied here does not resolve the issue - at least, not as it's occurring for me. \n\n``` php\n                            $style = $this->_parent->getCellXfByIndex($cell->getXfIndex());\n                            $returnValue[$rRef][$cRef] = PHPExcel_Style_NumberFormat::toFormattedString(\n                                $returnValue[$rRef][$cRef],\n                                ($style->getNumberFormat()) ?\n                                    $style->getNumberFormat()->getFormatCode() :\n                                    PHPExcel_Style_NumberFormat::FORMAT_GENERAL\n                            );\n```\n\nBut the problem is that $style is null and so I get the same error.\n. I can change it to this and it works:\n\n``` php\n                            $style = $this->_parent->getCellXfByIndex($cell->getXfIndex());\n                            $returnValue[$rRef][$cRef] = PHPExcel_Style_NumberFormat::toFormattedString(\n                                $returnValue[$rRef][$cRef],\n                                ($style && $style->getNumberFormat()) ?\n                                    $style->getNumberFormat()->getFormatCode() :\n                                    PHPExcel_Style_NumberFormat::FORMAT_GENERAL\n                            );\n```\n. I'm confused. The fix applied here does not resolve the issue - at least, not as it's occurring for me. \n\n``` php\n                            $style = $this->_parent->getCellXfByIndex($cell->getXfIndex());\n                            $returnValue[$rRef][$cRef] = PHPExcel_Style_NumberFormat::toFormattedString(\n                                $returnValue[$rRef][$cRef],\n                                ($style->getNumberFormat()) ?\n                                    $style->getNumberFormat()->getFormatCode() :\n                                    PHPExcel_Style_NumberFormat::FORMAT_GENERAL\n                            );\n```\n\nBut the problem is that $style is null and so I get the same error.\n. I can change it to this and it works:\n\n``` php\n                            $style = $this->_parent->getCellXfByIndex($cell->getXfIndex());\n                            $returnValue[$rRef][$cRef] = PHPExcel_Style_NumberFormat::toFormattedString(\n                                $returnValue[$rRef][$cRef],\n                                ($style && $style->getNumberFormat()) ?\n                                    $style->getNumberFormat()->getFormatCode() :\n                                    PHPExcel_Style_NumberFormat::FORMAT_GENERAL\n                            );\n```\n. ",
    "dq7TP2kBAraH": "Same thing goes for this format code:  '#,##0.00_);(#,##0.00)'\n. Testing shows this is resolved in the master branch.  Thanks!\n. Same thing goes for this format code:  '#,##0.00_);(#,##0.00)'\n. Testing shows this is resolved in the master branch.  Thanks!\n. ",
    "thomas-grosse": "Thanks :-)\n. Thanks :-)\n. ",
    "GregMBS": "Same problem...still. Also happens writing both Excel2007 and Excel5.\n\nPHP Notice:  Undefined index: ` in /var/www/vendor/codeplex/phpexcel/PHPExcel/Cell.php on line 756, referer: {removed for client security}\n. Same problem...still. Also happens writing both Excel2007 and Excel5.\n\nPHP Notice:  Undefined index: ` in /var/www/vendor/codeplex/phpexcel/PHPExcel/Cell.php on line 756, referer: {removed for client security}\n. ",
    "NehaSharma29": "Same problem...still\n. Same problem...still\n. ",
    "AnkitKumar1993": "same problem\n. same problem\n. ",
    "olelis": "Same with following information:\r\n\r\nrate(36, -300, 11.42)\r\n\r\nExpected :89.64\r\nActual   :49.16. Same with following information:\r\n\r\nrate(36, -300, 11.42)\r\n\r\nExpected :89.64\r\nActual   :49.16. ",
    "SpartanWolf": "So doing more experimentation:\n\nlooks like Drawing.php could be the problem\n\nCode\n$objDrawing->setPath($_product->getThumbnailUrl());\n\nReturns\nFatal error: Uncaught exception 'Exception' with message 'File http://www.room31wholesale.co.uk/media/catalog/product/cache/1/thumbnail/75x75/9df78eab33525d08d6e5fb8d27136e95/o/4/o42583.jpeg not found!'\n\nWell it is there, and you can follow that link.\nhttp://www.room31wholesale.co.uk/media/catalog/product/cache/1/thumbnail/75x75/9df78eab33525d08d6e5fb8d27136e95/o/4/o42583.jpeg\n\nThis code is also in a while($row = mysql_fetch_array($result)){ statement.\n\n---\n\nRealised that phpexcel gets file paths not direct links\n. More testing:\n\nI am only able to produce 150 Images on my spreadsheet using the Draws GetPath method. (this is used in a loop with image links producing different image links every loop)\n\nWhen I have removed the draw method and simply do a 'insert information into cell' i am able to get all of the image links.\n\nPotentially looks like it is only holding 150 images before drawing.php stops(im new to phpexcel so not sure if this is the right file, but it is showing row 114 up)?\n\nCould it be the image verification process?\n\nI have tested 151, 152, 160 rows etc and different PHP.ini sizes. I have spoke to our server hosts and says that there is no problems running on our server the module just stops.\n\nAs i said, using a normal input information to a cell the image links work fine, actually producing the images i am limited to 150.\n\nIs there a way to get direct image links instead of file paths, I can then use thumbnails and dramatically lower filesize?\n. Problem Has been resolved.\n. Hi rcardona\n\ndrop me an email with some more info i have a working model i made that has no problem exporting\n\nadam@room31.co.uk\n. Any chance this can be viewed?\n. I think i may have to start small, maybe i can locally network the spreadsheet and in turn run it via an api script/upload phpreader to excecute lots too think about not an weekend job!\n. Hi Mark, thanks for getting back\n\nat the moment we are on an 8gb VPS, and to fully export our site I have to bump to this:\nini_set('memory_limit', '400M');\n\nObviously the more products, the more requirement of MB im going to need hence my help for improving the code.\n$cacheMethod = PHPExcel_CachedObjectStorageFactory::cache_in_memory_gzip;\nPHPExcel_Settings::setCacheStorageMethod($cacheMethod);\nthats the cache method im using.\n\nIve used one array for my column headers, but this will be the least of power drain, however the looping section of my code is where the problem is occuring I think, please see below:\n\n---\n\n$objDrawing = new PHPExcel_Worksheet_Drawing();\n$objDrawing->setName('')\n->setDescription('');\n\nif($_product->getThumbnail() == 'no_selection')\n{\n$objDrawing->setPath('../../media/catalog/product/cache/1/image/9df78eab33525d08d6e5fb8d27136e95/placeholder/default/default.png');\n}else {\n$objDrawing->setPath('../../media/catalog/product/cache/1/thumbnail/75x75/9df78eab33525d08d6e5fb8d27136e95'.$_product->getThumbnail());\n}\n\n$objDrawing->setCoordinates('A'.$sum_total)\n->setOffsetX(10)\n->setOffsetY(10)\n->setHeight(110);\n\n$objDrawing->setWorksheet($objPHPExcel->getActiveSheet());\n$objPHPExcel->getActiveSheet()->setCellValue('B'.$sum_total, $_product->getSku());\n$objPHPExcel->getActiveSheet()->setCellValue('E'.$sum_total, $_product->getName());\n$objPHPExcel->getActiveSheet()->setCellValue('C'.$sum_total, $_product->getAttributeText('manufacturer'));\n$objPHPExcel->getActiveSheet()->setCellValue('D'.$sum_total, $_product->getAttributeText('gender'));\n$objPHPExcel->getActiveSheet()->setCellValue('F'.$sum_total, '\u00a3'.number_format($_product->getPrice(),2));\n$objPHPExcel->getActiveSheet()->setCellValue('G'.$sum_total, '\u00a3'.number_format($_product->getMsrp(),2));\n$objPHPExcel->getActiveSheet()->setCellValue('I'.$sum_total, 'CLICK HERE TO BUY');\n$objPHPExcel->getActiveSheet()->getCell('I'.$sum_total)->getHyperlink()->setUrl('http://www.room31wholesale.co.uk/'.$_product->getUrlPath());\n$objPHPExcel->getActiveSheet()->getColumnDimension(\"A\")->setWidth(23);\n\n//breakdown\n$objPHPExcel->getActiveSheet()->setCellValue('K'.$sum_total, \"SIZE\\nQTY\");\n$objPHPExcel->getActiveSheet()->setCellValue('J'.$sum_total, $qtycount);\n\nforeach($selectionCollection as $option)\n    {\n$qty = Mage::getModel('cataloginventory/stock_item')->loadByProduct($option->getId())->getQty();\nif((int)$qty == 0) {continue;}\n\n$objPHPExcel->getActiveSheet()->getRowDimension($sum_total)->setRowHeight(100);\n\n//Grab Attributes of items\n$objPHPExcel->getActiveSheet()->setCellValue($colNumber.$sum_total, $option->getAttributeText('textile_size').$option->getAttributeText('shoe_size').$option->getAttributeText('cricket_size').\"\\n\".number_format(Mage::getModel('cataloginventory/stock_item')->loadByProduct($option->getId())->getQty(),0));\n$objPHPExcel->getActiveSheet()->getStyle($colNumber.$sum_total)->getAlignment()->setWrapText(true);\n\n$colNumber++;\n$colNumber2++;\n$colNumber3++;\n }\n$rowNumber++;\n$rowNumber2++;\n$rowNumber3++;\n$rowNumber4++;\n} \n\n---\n\nThis information pulls, image, product name, hyperlinks, costs and then another looping process into sizes and quantities.\n\nIf you would like a link to the working model please let me know.\n. So doing more experimentation:\n\nlooks like Drawing.php could be the problem\n\nCode\n$objDrawing->setPath($_product->getThumbnailUrl());\n\nReturns\nFatal error: Uncaught exception 'Exception' with message 'File http://www.room31wholesale.co.uk/media/catalog/product/cache/1/thumbnail/75x75/9df78eab33525d08d6e5fb8d27136e95/o/4/o42583.jpeg not found!'\n\nWell it is there, and you can follow that link.\nhttp://www.room31wholesale.co.uk/media/catalog/product/cache/1/thumbnail/75x75/9df78eab33525d08d6e5fb8d27136e95/o/4/o42583.jpeg\n\nThis code is also in a while($row = mysql_fetch_array($result)){ statement.\n\n---\n\nRealised that phpexcel gets file paths not direct links\n. More testing:\n\nI am only able to produce 150 Images on my spreadsheet using the Draws GetPath method. (this is used in a loop with image links producing different image links every loop)\n\nWhen I have removed the draw method and simply do a 'insert information into cell' i am able to get all of the image links.\n\nPotentially looks like it is only holding 150 images before drawing.php stops(im new to phpexcel so not sure if this is the right file, but it is showing row 114 up)?\n\nCould it be the image verification process?\n\nI have tested 151, 152, 160 rows etc and different PHP.ini sizes. I have spoke to our server hosts and says that there is no problems running on our server the module just stops.\n\nAs i said, using a normal input information to a cell the image links work fine, actually producing the images i am limited to 150.\n\nIs there a way to get direct image links instead of file paths, I can then use thumbnails and dramatically lower filesize?\n. Problem Has been resolved.\n. Hi rcardona\n\ndrop me an email with some more info i have a working model i made that has no problem exporting\n\nadam@room31.co.uk\n. Any chance this can be viewed?\n. I think i may have to start small, maybe i can locally network the spreadsheet and in turn run it via an api script/upload phpreader to excecute lots too think about not an weekend job!\n. Hi Mark, thanks for getting back\n\nat the moment we are on an 8gb VPS, and to fully export our site I have to bump to this:\nini_set('memory_limit', '400M');\n\nObviously the more products, the more requirement of MB im going to need hence my help for improving the code.\n$cacheMethod = PHPExcel_CachedObjectStorageFactory::cache_in_memory_gzip;\nPHPExcel_Settings::setCacheStorageMethod($cacheMethod);\nthats the cache method im using.\n\nIve used one array for my column headers, but this will be the least of power drain, however the looping section of my code is where the problem is occuring I think, please see below:\n\n---\n\n$objDrawing = new PHPExcel_Worksheet_Drawing();\n$objDrawing->setName('')\n->setDescription('');\n\nif($_product->getThumbnail() == 'no_selection')\n{\n$objDrawing->setPath('../../media/catalog/product/cache/1/image/9df78eab33525d08d6e5fb8d27136e95/placeholder/default/default.png');\n}else {\n$objDrawing->setPath('../../media/catalog/product/cache/1/thumbnail/75x75/9df78eab33525d08d6e5fb8d27136e95'.$_product->getThumbnail());\n}\n\n$objDrawing->setCoordinates('A'.$sum_total)\n->setOffsetX(10)\n->setOffsetY(10)\n->setHeight(110);\n\n$objDrawing->setWorksheet($objPHPExcel->getActiveSheet());\n$objPHPExcel->getActiveSheet()->setCellValue('B'.$sum_total, $_product->getSku());\n$objPHPExcel->getActiveSheet()->setCellValue('E'.$sum_total, $_product->getName());\n$objPHPExcel->getActiveSheet()->setCellValue('C'.$sum_total, $_product->getAttributeText('manufacturer'));\n$objPHPExcel->getActiveSheet()->setCellValue('D'.$sum_total, $_product->getAttributeText('gender'));\n$objPHPExcel->getActiveSheet()->setCellValue('F'.$sum_total, '\u00a3'.number_format($_product->getPrice(),2));\n$objPHPExcel->getActiveSheet()->setCellValue('G'.$sum_total, '\u00a3'.number_format($_product->getMsrp(),2));\n$objPHPExcel->getActiveSheet()->setCellValue('I'.$sum_total, 'CLICK HERE TO BUY');\n$objPHPExcel->getActiveSheet()->getCell('I'.$sum_total)->getHyperlink()->setUrl('http://www.room31wholesale.co.uk/'.$_product->getUrlPath());\n$objPHPExcel->getActiveSheet()->getColumnDimension(\"A\")->setWidth(23);\n\n//breakdown\n$objPHPExcel->getActiveSheet()->setCellValue('K'.$sum_total, \"SIZE\\nQTY\");\n$objPHPExcel->getActiveSheet()->setCellValue('J'.$sum_total, $qtycount);\n\nforeach($selectionCollection as $option)\n    {\n$qty = Mage::getModel('cataloginventory/stock_item')->loadByProduct($option->getId())->getQty();\nif((int)$qty == 0) {continue;}\n\n$objPHPExcel->getActiveSheet()->getRowDimension($sum_total)->setRowHeight(100);\n\n//Grab Attributes of items\n$objPHPExcel->getActiveSheet()->setCellValue($colNumber.$sum_total, $option->getAttributeText('textile_size').$option->getAttributeText('shoe_size').$option->getAttributeText('cricket_size').\"\\n\".number_format(Mage::getModel('cataloginventory/stock_item')->loadByProduct($option->getId())->getQty(),0));\n$objPHPExcel->getActiveSheet()->getStyle($colNumber.$sum_total)->getAlignment()->setWrapText(true);\n\n$colNumber++;\n$colNumber2++;\n$colNumber3++;\n }\n$rowNumber++;\n$rowNumber2++;\n$rowNumber3++;\n$rowNumber4++;\n} \n\n---\n\nThis information pulls, image, product name, hyperlinks, costs and then another looping process into sizes and quantities.\n\nIf you would like a link to the working model please let me know.\n. ",
    "rcardona8": "I'm having EXACTLY the same problem, word for word, how did you resolve it?\n\nI tried reducing image size by using a library named timthumb, it doesn't work though, it seems $objDrawing->setPath requires an actual file system path and cannot accept something like \"/timthumb/timthumb.php?src=../folder/image.jpg&w=100&h=100\".\n\nThe only short-term solution I can think of is exporting more than one sheet and have the results divided, far from ideal though.\n. I'm having EXACTLY the same problem, word for word, how did you resolve it?\n\nI tried reducing image size by using a library named timthumb, it doesn't work though, it seems $objDrawing->setPath requires an actual file system path and cannot accept something like \"/timthumb/timthumb.php?src=../folder/image.jpg&w=100&h=100\".\n\nThe only short-term solution I can think of is exporting more than one sheet and have the results divided, far from ideal though.\n. ",
    "ghost": "The issue happens on both my Ubuntu systems, but I just tested it on a Windows machine and the issue does not manifest itself.\n\nI'm looking at the differences in PHP configuration now. The Suhosin patch on both Ubuntu servers does stand out but I don't see how that might cause the issue. I'm looking deeper and will get back to you ASAP.\n. Hi Mark,\n\nThanks for your input!\n\nI've confirmed the file starts with an ASCII \"PK\". Here is a link to the file I'm using:\n\nhttp://www.conflictfreesmelter.org/documents/EICCGeSIDDtemplate.xlsx\n\nSo, I guess I've got both those issues still then.\n\nI suspect some environment type issue is in play because this is all working as expected on my development system (same files being read, same code etc). The issue is arising on the client's system which is a Windows IIS setup.\n\nPlease let me know if you need anything else! And thanks so much for your help!\n. Hi Mark,\n\nI've just checked the file is readable ( using is_readable() ) and it is readable on the local file system (it's an uploaded file in the $_FILES superglobal). The errors are all triggered when the file is loaded by the reader:\n\n$objReader = PHPExcel_IOFactory::createReader('Excel2007');\n$objReader->setReadDataOnly(true);\n$objPHPExcel = $objReader->load($_FILES['file']['tmp_name']);\n\nI'm not really sure where else to look at this point ...\n. Victory! Posting here to help the next person who hits this one ...\n\nhttp://ca2.php.net/manual/en/ziparchive.open.php#102849\n\n> As discussed in http://bugs.php.net/bug.php?id=54128 on Windows Server systems (2003, 2008) and IIS there is a problem when you want to unzip file stored in C:\\Windows\\Temp folder.\n> User of worker process IUSR_XXX has no directory listing right for C:\\Windows\\Temp and this is a reason why ZipArchive::open() fails with error 11 (error open). So it is not a good idea to store file for unzipping in folder defined by sys_get_temp_dir().\n\nSo the solution was to move the uploaded file to a new place before I tried to load it with the reader.\n\nThanks for your help Mark. It was very helpful to know I wasn't making any obvious rookie mistakes with the ExcelReader code itself and your corrections about the ZIPARCHIVE::CREATE || ZIPARCHIVE::OVERWRITE usage was very helpful too ... saved me from going down the wrong path fixing the symptoms instead of the disease!\n\nCheers.\n. Hello, I have to include PHPExcel.php for example. Even though the class is found, the other classes are not loaded using the autoloader if i don't use 'require'/'include'_once PHPExcel.php explicitely\n\nWhen I use the proposed solution, the classes are loaded without 'require' and excel is being generated\n\nThis seems to be working because:\nhttp://stackoverflow.com/questions/2755500/php-require-class-call-from-inside-method\n. It's work great.\n. Never mind. a VERY stupid mistake.\nI wrote: `ini_set('max_execution_time', 2000);` in capital letters on Linux machine.\n. @shaheenhashinclude \r\n \r\nI have faced the same issue but i got fixed\r\n\r\nStep1:\r\nsudo apt-get install php5.6-zip\r\n\r\nStep 2:\r\nsudo service apache2 restart\r\n\r\n\r\nIf there is any doubt on it please let me know......Happy coding !!!!!\r\n\r\n\r\n. PHPExcel_Settings::setZipClass(PHPExcel_Settings::PCLZIP);\r\n\r\nWorks!\r\nGood Job!. The issue happens on both my Ubuntu systems, but I just tested it on a Windows machine and the issue does not manifest itself.\n\nI'm looking at the differences in PHP configuration now. The Suhosin patch on both Ubuntu servers does stand out but I don't see how that might cause the issue. I'm looking deeper and will get back to you ASAP.\n. Hi Mark,\n\nThanks for your input!\n\nI've confirmed the file starts with an ASCII \"PK\". Here is a link to the file I'm using:\n\nhttp://www.conflictfreesmelter.org/documents/EICCGeSIDDtemplate.xlsx\n\nSo, I guess I've got both those issues still then.\n\nI suspect some environment type issue is in play because this is all working as expected on my development system (same files being read, same code etc). The issue is arising on the client's system which is a Windows IIS setup.\n\nPlease let me know if you need anything else! And thanks so much for your help!\n. Hi Mark,\n\nI've just checked the file is readable ( using is_readable() ) and it is readable on the local file system (it's an uploaded file in the $_FILES superglobal). The errors are all triggered when the file is loaded by the reader:\n\n$objReader = PHPExcel_IOFactory::createReader('Excel2007');\n$objReader->setReadDataOnly(true);\n$objPHPExcel = $objReader->load($_FILES['file']['tmp_name']);\n\nI'm not really sure where else to look at this point ...\n. Victory! Posting here to help the next person who hits this one ...\n\nhttp://ca2.php.net/manual/en/ziparchive.open.php#102849\n\n> As discussed in http://bugs.php.net/bug.php?id=54128 on Windows Server systems (2003, 2008) and IIS there is a problem when you want to unzip file stored in C:\\Windows\\Temp folder.\n> User of worker process IUSR_XXX has no directory listing right for C:\\Windows\\Temp and this is a reason why ZipArchive::open() fails with error 11 (error open). So it is not a good idea to store file for unzipping in folder defined by sys_get_temp_dir().\n\nSo the solution was to move the uploaded file to a new place before I tried to load it with the reader.\n\nThanks for your help Mark. It was very helpful to know I wasn't making any obvious rookie mistakes with the ExcelReader code itself and your corrections about the ZIPARCHIVE::CREATE || ZIPARCHIVE::OVERWRITE usage was very helpful too ... saved me from going down the wrong path fixing the symptoms instead of the disease!\n\nCheers.\n. Hello, I have to include PHPExcel.php for example. Even though the class is found, the other classes are not loaded using the autoloader if i don't use 'require'/'include'_once PHPExcel.php explicitely\n\nWhen I use the proposed solution, the classes are loaded without 'require' and excel is being generated\n\nThis seems to be working because:\nhttp://stackoverflow.com/questions/2755500/php-require-class-call-from-inside-method\n. It's work great.\n. Never mind. a VERY stupid mistake.\nI wrote: `ini_set('max_execution_time', 2000);` in capital letters on Linux machine.\n. @shaheenhashinclude \r\n \r\nI have faced the same issue but i got fixed\r\n\r\nStep1:\r\nsudo apt-get install php5.6-zip\r\n\r\nStep 2:\r\nsudo service apache2 restart\r\n\r\n\r\nIf there is any doubt on it please let me know......Happy coding !!!!!\r\n\r\n\r\n. PHPExcel_Settings::setZipClass(PHPExcel_Settings::PCLZIP);\r\n\r\nWorks!\r\nGood Job!. ",
    "Hilding76": "I've seen this problem sometimes when you are using a .xls saved as .xlsx, however the functions\n$reader = new PHPExcel_Reader_Excel2007();\n$working_sheet_name_list =$reader->listWorksheetNames(); \nGives the actual sheets and you can do some $objPHPExcel->removeSheetByIndex($index); inorder to correct it\n. In a while, the code i'm using is big so i need to prone it a bit, after I've updated gradientFill for handling missing type-attribute, breaking the ability to add gradientfils with code for a while.\nI won't commit my changes.\n. Oki here is some code Removerows_test.php opens template.xlsx , then removes row where the A-cell is '' until -1 is found.\nIn sheet one i remove one row at a time and in sheet to i remove more than one at a time when possible. My fix from above isn't active.   output_unfixed2.xlsx is the saved file.\nphpexcel 1.8.1\nThe error seems to be when a formula ends with the cell removed.\n[om_remove.zip](https://github.com/PHPOffice/PHPExcel/files/165974/om_remove.zip)\n. I've seen this problem sometimes when you are using a .xls saved as .xlsx, however the functions\n$reader = new PHPExcel_Reader_Excel2007();\n$working_sheet_name_list =$reader->listWorksheetNames(); \nGives the actual sheets and you can do some $objPHPExcel->removeSheetByIndex($index); inorder to correct it\n. In a while, the code i'm using is big so i need to prone it a bit, after I've updated gradientFill for handling missing type-attribute, breaking the ability to add gradientfils with code for a while.\nI won't commit my changes.\n. Oki here is some code Removerows_test.php opens template.xlsx , then removes row where the A-cell is '' until -1 is found.\nIn sheet one i remove one row at a time and in sheet to i remove more than one at a time when possible. My fix from above isn't active.   output_unfixed2.xlsx is the saved file.\nphpexcel 1.8.1\nThe error seems to be when a formula ends with the cell removed.\n[om_remove.zip](https://github.com/PHPOffice/PHPExcel/files/165974/om_remove.zip)\n. ",
    "ceeram": "Close to 2 years have past since? 71% now uses 5.3+\n. Closed and removed the fork.\n. Close to 2 years have past since? 71% now uses 5.3+\n. Closed and removed the fork.\n. ",
    "dereuromark": ":+1:  maybe for 1.9.0?\n. :+1:  maybe for 1.9.0?\n. ",
    "malgashe120": "<b>Indeed, in my logs, I am a memory error:</b>\n\n``` log\n[Tue Jan 08 14:15:52 2013] [error] [client 10.251.19.16] PHP Fatal error:  Allowed memory size of 134217728 bytes exhausted (tried to allocate 103 bytes) in /usr/local/capadispo/htdocs/capacitymanagement2/ADMIN/class/PHPExcel/Classes/PHPExcel/Worksheet.php on line 1123\n```\n\nThanks\n\n<b>SOLUTION: </b>\nIn PHP script: add `ini_set(\u2018memory_limit\u2019,\u201964M\u2019);`\n<i>64M = Maximum amount of memory the script may consume </i>\n. <b>Indeed, in my logs, I am a memory error:</b>\n\n``` log\n[Tue Jan 08 14:15:52 2013] [error] [client 10.251.19.16] PHP Fatal error:  Allowed memory size of 134217728 bytes exhausted (tried to allocate 103 bytes) in /usr/local/capadispo/htdocs/capacitymanagement2/ADMIN/class/PHPExcel/Classes/PHPExcel/Worksheet.php on line 1123\n```\n\nThanks\n\n<b>SOLUTION: </b>\nIn PHP script: add `ini_set(\u2018memory_limit\u2019,\u201964M\u2019);`\n<i>64M = Maximum amount of memory the script may consume </i>\n. ",
    "lokendra123": "Hello,\n\nI am using it and it does work on local but not live server, Actually i received reset connection timeout issue on Firefox browser.\n\nUsed lot of solution but still having issue, Please help me.\n. Hello,\n\nI am using it and it does work on local but not live server, Actually i received reset connection timeout issue on Firefox browser.\n\nUsed lot of solution but still having issue, Please help me.\n. ",
    "fabifilo": "Mark Thanks!\n\nIt\n\nOn Fri, Jan 11, 2013 at 5:36 AM, Mark Baker notifications@github.comwrote:\n\n> That sounds like the include_path isn't set on your production server, or\n> PHPExcel isn't installed, or is in a different directory to where you expect\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/PHPOffice/PHPExcel/issues/121#issuecomment-12134415.\n. Mark, thanks!\n\nIt's a stupid mistake!\n\nWindows is not case sensitive but Linux is.\n\nI suggest alter the example in the page\n\nFrom:\n\n//Include Joomla Classes\njimport('phpexcel.library.PHPExcel');\n\nTo:\n//Include Joomla Classes\njimport('phpexcel.library.phpexcel');\n\nThis solve my problem!\n\nSorry, it's a initiating's mistake!\n\nOn Fri, Jan 11, 2013 at 5:36 AM, Mark Baker notifications@github.comwrote:\n\n> That sounds like the include_path isn't set on your production server, or\n> PHPExcel isn't installed, or is in a different directory to where you expect\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/PHPOffice/PHPExcel/issues/121#issuecomment-12134415.\n. Mark Thanks!\n\nIt\n\nOn Fri, Jan 11, 2013 at 5:36 AM, Mark Baker notifications@github.comwrote:\n\n> That sounds like the include_path isn't set on your production server, or\n> PHPExcel isn't installed, or is in a different directory to where you expect\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/PHPOffice/PHPExcel/issues/121#issuecomment-12134415.\n. Mark, thanks!\n\nIt's a stupid mistake!\n\nWindows is not case sensitive but Linux is.\n\nI suggest alter the example in the page\n\nFrom:\n\n//Include Joomla Classes\njimport('phpexcel.library.PHPExcel');\n\nTo:\n//Include Joomla Classes\njimport('phpexcel.library.phpexcel');\n\nThis solve my problem!\n\nSorry, it's a initiating's mistake!\n\nOn Fri, Jan 11, 2013 at 5:36 AM, Mark Baker notifications@github.comwrote:\n\n> That sounds like the include_path isn't set on your production server, or\n> PHPExcel isn't installed, or is in a different directory to where you expect\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/PHPOffice/PHPExcel/issues/121#issuecomment-12134415.\n. ",
    "jimad": "This seems to be a problem in 1.7.8 - an attached chart opens properly in OpenOffice under Linux but fails with this drawing shape error in Excel 2007 under Windows 7.\n. This seems to be a problem in 1.7.8 - an attached chart opens properly in OpenOffice under Linux but fails with this drawing shape error in Excel 2007 under Windows 7.\n. ",
    "marthom": "Any news?\n\ntype \"dataBar\"\n\n```\n<conditionalFormatting sqref=\"A1:A3\">\n    <cfRule type=\"dataBar\" priority=\"1\">\n        <dataBar>\n            <cfvo type=\"min\" val=\"0\"/>\n            <cfvo type=\"max\" val=\"0\"/>\n            <color rgb=\"FFFF555A\"/>\n        </dataBar>\n    </cfRule>\n</conditionalFormatting>\n```\n. Any news?\n\ntype \"dataBar\"\n\n```\n<conditionalFormatting sqref=\"A1:A3\">\n    <cfRule type=\"dataBar\" priority=\"1\">\n        <dataBar>\n            <cfvo type=\"min\" val=\"0\"/>\n            <cfvo type=\"max\" val=\"0\"/>\n            <color rgb=\"FFFF555A\"/>\n        </dataBar>\n    </cfRule>\n</conditionalFormatting>\n```\n. ",
    "emilebourquin": "I should clarify, the ->save operation properly saves the spreadsheet, but if the PHP code is run via command line, a single '?' is output to the console, if run via web browser, a single '?' is output to the browser\n. My apologies, the bug does not occur in the latest dev code\n. I should clarify, the ->save operation properly saves the spreadsheet, but if the PHP code is run via command line, a single '?' is output to the console, if run via web browser, a single '?' is output to the browser\n. My apologies, the bug does not occur in the latest dev code\n. ",
    "der-On": "I've switched over to mpdf 5.6 and it solved my problem. Also the output was more reliably then with tcpdf.\n. I've switched over to mpdf 5.6 and it solved my problem. Also the output was more reliably then with tcpdf.\n. ",
    "char101": "Thanks for the bugfix.\n. Thanks for the bugfix.\n. ",
    "prolic": "@dbonsch Will you close this PR or should I do this myself?\n. @dbonsch Will you close this PR or should I do this myself?\n. ",
    "simkimsia": "Understood.\n\nThank you.\n\nPlease continue the great work you have with PHPExcel! It is awesome!!\n\nWith gratitude,\nKimSia\n\u91d1\u57ce\n\nOn Tue, Jan 29, 2013 at 6:54 PM, Mark Baker notifications@github.comwrote:\n\n> At this point in time, PHPExcel doesn't support secondary axes in charts\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/PHPOffice/PHPExcel/issues/134#issuecomment-12829487.\n. I apologized for not checking the examples first.\n\nKudos for the work done.\n. Understood.\n\nThank you.\n\nPlease continue the great work you have with PHPExcel! It is awesome!!\n\nWith gratitude,\nKimSia\n\u91d1\u57ce\n\nOn Tue, Jan 29, 2013 at 6:54 PM, Mark Baker notifications@github.comwrote:\n\n> At this point in time, PHPExcel doesn't support secondary axes in charts\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/PHPOffice/PHPExcel/issues/134#issuecomment-12829487.\n. I apologized for not checking the examples first.\n\nKudos for the work done.\n. ",
    "jeremyferrett": "Hi Mark\nThanks for the project it really is handy for reporting.\nIs there any plan to implement secondary axes any time soon?\nJeremy\n. Hi Mark\nThanks for the project it really is handy for reporting.\nIs there any plan to implement secondary axes any time soon?\nJeremy\n. ",
    "ConAntonakos": "Hi Mark,\n\nAny update on this? \n\nThank you for this incredibly awesome library.\n. Hi Mark,\n\nAny update on this? \n\nThank you for this incredibly awesome library.\n. ",
    "lynxtdc": "Hey Mark:\n\nAny update on being able to add a secondary y-axis to a chart?\n\nThanks again for your work on this library\n. Hey Mark:\n\nAny update on being able to add a secondary y-axis to a chart?\n\nThanks again for your work on this library\n. ",
    "eisberg": "Hi Mark,\n\nAny update on this?  :D\n. Also I look forward to!\nTell me what the problem is with the implementation of this feature?\n\nI think you need to take, and to resolve this issue!\n. Hi Mark,\n\nAny update on this?  :D\n. Also I look forward to!\nTell me what the problem is with the implementation of this feature?\n\nI think you need to take, and to resolve this issue!\n. ",
    "raisen": "I'm looking for this feature as well. Any updates?\n. Is this feature currently available? Is there an example showing how to use it?\n. I'm looking for this feature as well. Any updates?\n. Is this feature currently available? Is there an example showing how to use it?\n. ",
    "akelalix": "Hi all, i'm also looking for the secondary axis feature.. any updates ? thank you\n. Hi all, i'm also looking for the secondary axis feature.. any updates ? thank you\n. ",
    "betocantu93": "Hi Mark,\n\nAny updates? I'm looking as well.... Thanks\n.  If you give the data in a certain way, Excel will do it for you, maybe this tut can help you on how you should give the data, in phpexcel you could just then select all this data and excel will do the trick, this worked for me in a secondary x level... Here is the tut http://excelribbon.tips.net/T001188_Two-Level_Axis_Labels.html\n. Hi Mark,\n\nAny updates? I'm looking as well.... Thanks\n.  If you give the data in a certain way, Excel will do it for you, maybe this tut can help you on how you should give the data, in phpexcel you could just then select all this data and excel will do the trick, this worked for me in a secondary x level... Here is the tut http://excelribbon.tips.net/T001188_Two-Level_Axis_Labels.html\n. ",
    "harrati": "Hi Mark,\n\nI really appreciate this great library, And I'm using it for almost all projects where I have to deal with Excel files.\nFor my actual project I really need this secondary y-axis feature could you please provide me an alternative for this?\n\nyours, sincerely.\n. Hi Mark,\n\nI really appreciate this great library, And I'm using it for almost all projects where I have to deal with Excel files.\nFor my actual project I really need this secondary y-axis feature could you please provide me an alternative for this?\n\nyours, sincerely.\n. ",
    "Porrapat": "Hi, here, secondary axis chart on PHPExcel.\n\nIt's long time but my work required it. So I created this one. To give it back to community so I have to make pull request back to the original code.\n\nhttps://github.com/PHPOffice/PHPExcel/pull/1037\n\nThank you again.\n. I have tested it on PHP 5.4.7.\n. This one will be useful to help me test it.\nhttp://officeopenxml.com/anatomyofOOXML-xlsx.php\n\nThank you.\n. @TrieBr Happy to hear you can solve the same problem we face. \r\n\r\nThank you to you too!. Thank you for info.\n\n\u0e40\u0e21\u0e37\u0e48\u0e2d 14 \u0e18.\u0e04. 2016 19:45 \"Adrien Crivelli\" <notifications@github.com>\n\u0e40\u0e02\u0e35\u0e22\u0e19\u0e27\u0e48\u0e32\n\n> Closed #1037 <https://github.com/PHPOffice/PHPExcel/pull/1037>.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/PHPOffice/PHPExcel/pull/1037#event-893560745>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ADlO9CcO9SjCOwbPIKi13udwf_s_RqQbks5rH-UHgaJpZM4KYQS7>\n> .\n>\n. Hi, here, secondary axis chart on PHPExcel.\n\nIt's long time but my work required it. So I created this one. To give it back to community so I have to make pull request back to the original code.\n\nhttps://github.com/PHPOffice/PHPExcel/pull/1037\n\nThank you again.\n. I have tested it on PHP 5.4.7.\n. This one will be useful to help me test it.\nhttp://officeopenxml.com/anatomyofOOXML-xlsx.php\n\nThank you.\n. @TrieBr Happy to hear you can solve the same problem we face. \r\n\r\nThank you to you too!. Thank you for info.\n\n\u0e40\u0e21\u0e37\u0e48\u0e2d 14 \u0e18.\u0e04. 2016 19:45 \"Adrien Crivelli\" <notifications@github.com>\n\u0e40\u0e02\u0e35\u0e22\u0e19\u0e27\u0e48\u0e32\n\n> Closed #1037 <https://github.com/PHPOffice/PHPExcel/pull/1037>.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/PHPOffice/PHPExcel/pull/1037#event-893560745>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ADlO9CcO9SjCOwbPIKi13udwf_s_RqQbks5rH-UHgaJpZM4KYQS7>\n> .\n>\n. ",
    "anr-isu": "Hi\nI'm trying to get the solution Porrapat has made to work in Laravel 5.3 using PHP 5.6.23.\nBut I unfortunately, I cannot get it to work - I'm not sure if it's only me who has merged it in wrong or if it only work for older versions\n\nBut it would be great if his solution could be implemented!\n. Hi\nI'm trying to get the solution Porrapat has made to work in Laravel 5.3 using PHP 5.6.23.\nBut I unfortunately, I cannot get it to work - I'm not sure if it's only me who has merged it in wrong or if it only work for older versions\n\nBut it would be great if his solution could be implemented!\n. ",
    "TrieBr": "@Porrapat Excellent patch (#1037)! This just saved me. Works great on PHP 5.6.28.\r\n\r\nThank you!. @Porrapat Excellent patch (#1037)! This just saved me. Works great on PHP 5.6.28.\r\n\r\nThank you!. ",
    "apelliciari": "Thx for the reply.\n\nYes i ask if it was a bug because i know that the excel file was messy with the styles, but 220 mb seems so high.\n\nI'm running on 64-bit PHP.\n\nOperating system    CentOS Linux 6.3\nKernel and CPU  Linux 2.6.32-279.19.1.el6.x86_64 on x86_64\n\nI have the 1.7.6, 2011-02-27 PHPExcel version, now i'll try with the newest.\n. Thx for the reply.\n\nYes i ask if it was a bug because i know that the excel file was messy with the styles, but 220 mb seems so high.\n\nI'm running on 64-bit PHP.\n\nOperating system    CentOS Linux 6.3\nKernel and CPU  Linux 2.6.32-279.19.1.el6.x86_64 on x86_64\n\nI have the 1.7.6, 2011-02-27 PHPExcel version, now i'll try with the newest.\n. ",
    "Strate": "Something like:\n\n``` php\n$fetchTextFromChildren = function( SimpleXmlElement $el ) use( &$fetchTextFromChildren )\n{\n    $result = '';\n    if ( $el->count() )\n    {\n        foreach ( $el as $subElement ) {\n            $result .= $fetchTextFromChildren( $subElement );\n        }\n    }\n    else {\n        $result = (string) $el;\n    }\n    return $result;\n};\n$allCellDataText = $fetchTextFromChildren( $cellDataText );\n```\n. Something like:\n\n``` php\n$fetchTextFromChildren = function( SimpleXmlElement $el ) use( &$fetchTextFromChildren )\n{\n    $result = '';\n    if ( $el->count() )\n    {\n        foreach ( $el as $subElement ) {\n            $result .= $fetchTextFromChildren( $subElement );\n        }\n    }\n    else {\n        $result = (string) $el;\n    }\n    return $result;\n};\n$allCellDataText = $fetchTextFromChildren( $cellDataText );\n```\n. ",
    "losinggeneration": "I'm having pretty much the same issue with email links. libreOffice automatically created links for email addresses:\n\n``` xml\n  <office:body>\n    <office:spreadsheet>\n      <table:table table:name=\"Sheet1\" table:style-name=\"ta1\">\n        <table:table-column table:style-name=\"co1\" table:default-cell-style-name=\"Default\" />\n        <table:table-row table:style-name=\"ro1\">\n          <table:table-cell office:value-type=\"string\">\n            <text:p>\n              <text:a xlink:href=\"mailto:some@email.com\" xlink:type=\"simple\">some@email.com</text:a>\n            </text:p>\n          </table:table-cell>\n        </table:table-row>\n      </table:table>\n      <table:named-expressions />\n    </office:spreadsheet>\n  </office:body>\n```\n\nYou can see that libreOffice puts the text:a within a text:p. \n\nMy test case was basically this:\n\n``` php\n<?php\n/** Include PHPExcel */\nrequire_once '../Classes/PHPExcel.php';\n\nif (!file_exists(\"email.ods\")) {\n    exit(1);\n}\n$objPHPExcel = PHPExcel_IOFactory::load(\"email.ods\");\n\nforeach ($objPHPExcel->getAllSheets() as $s) {\n    foreach ($s->getRowIterator() as $r) {\n        foreach ($r->getCellIterator() as $c) {\n            echo \"| {$c->getValue()},{$c->getCalculatedValue()},{$c->getFormattedValue()} |\";\n        }\n        echo \"\\n\";\n    }\n}\n```\n\nAnd it outputs the following:\n\n```\n| ,, |\n\n```\n\nTested with PHPExcel 1.7.9 & PHP 5.4.4-15.1\n. I'm having pretty much the same issue with email links. libreOffice automatically created links for email addresses:\n\n``` xml\n  <office:body>\n    <office:spreadsheet>\n      <table:table table:name=\"Sheet1\" table:style-name=\"ta1\">\n        <table:table-column table:style-name=\"co1\" table:default-cell-style-name=\"Default\" />\n        <table:table-row table:style-name=\"ro1\">\n          <table:table-cell office:value-type=\"string\">\n            <text:p>\n              <text:a xlink:href=\"mailto:some@email.com\" xlink:type=\"simple\">some@email.com</text:a>\n            </text:p>\n          </table:table-cell>\n        </table:table-row>\n      </table:table>\n      <table:named-expressions />\n    </office:spreadsheet>\n  </office:body>\n```\n\nYou can see that libreOffice puts the text:a within a text:p. \n\nMy test case was basically this:\n\n``` php\n<?php\n/** Include PHPExcel */\nrequire_once '../Classes/PHPExcel.php';\n\nif (!file_exists(\"email.ods\")) {\n    exit(1);\n}\n$objPHPExcel = PHPExcel_IOFactory::load(\"email.ods\");\n\nforeach ($objPHPExcel->getAllSheets() as $s) {\n    foreach ($s->getRowIterator() as $r) {\n        foreach ($r->getCellIterator() as $c) {\n            echo \"| {$c->getValue()},{$c->getCalculatedValue()},{$c->getFormattedValue()} |\";\n        }\n        echo \"\\n\";\n    }\n}\n```\n\nAnd it outputs the following:\n\n```\n| ,, |\n\n```\n\nTested with PHPExcel 1.7.9 & PHP 5.4.4-15.1\n. ",
    "acelaya": "Hello. I have this same issue.\nI found someone who told how to fix this, but it implies to change PHPExcel's source code.\nhttps://phpexcel.codeplex.com/workitem/18957\n\nThe link says to place this in Classes\\PHPExcel\\Reader\\OOCalc.php, after line 487.\n\n``` php\nif (isset($cellDataText->p) && isset($cellDataText->p->a)) {\n    $cellDataText->p = $cellDataText->p->a;\n}\n```\n\nSince I'm handling dependencies with composer, I can't edit anything inside the vendor directory.\nI checked that modification and it works in my case (I'm not really sure what it does), but I don't know if it'll work in every use case.\nI could make some tests and open a pull request if you want.\n. Hello. I have this same issue.\nI found someone who told how to fix this, but it implies to change PHPExcel's source code.\nhttps://phpexcel.codeplex.com/workitem/18957\n\nThe link says to place this in Classes\\PHPExcel\\Reader\\OOCalc.php, after line 487.\n\n``` php\nif (isset($cellDataText->p) && isset($cellDataText->p->a)) {\n    $cellDataText->p = $cellDataText->p->a;\n}\n```\n\nSince I'm handling dependencies with composer, I can't edit anything inside the vendor directory.\nI checked that modification and it works in my case (I'm not really sure what it does), but I don't know if it'll work in every use case.\nI could make some tests and open a pull request if you want.\n. ",
    "kowach": "I can confirm this bug, $timezoneObj is producing wrong date/time.\n. I can confirm this bug, $timezoneObj is producing wrong date/time.\n. ",
    "ahgindia": "Hello,\nI am facing the same issue currently, but while downloading in Excel 2007 format with my custom reports.\nIs there any solution/fix for this particular issue ?\nAny help would be appreciated.\n. I have checked webserver logs, but I cannot see any errors in that neither it is restarting.\nI more thing is that I am able to download my report in pdf format using pdflib and also able to export the report in Excel2003 format, but just cannot export the same report in Excel2007 format.\nDoes this information help ?\n. Hello,\nI am facing the same issue currently, but while downloading in Excel 2007 format with my custom reports.\nIs there any solution/fix for this particular issue ?\nAny help would be appreciated.\n. I have checked webserver logs, but I cannot see any errors in that neither it is restarting.\nI more thing is that I am able to download my report in pdf format using pdflib and also able to export the report in Excel2003 format, but just cannot export the same report in Excel2007 format.\nDoes this information help ?\n. ",
    "onmytab": "hello, \nSame problem as StudioWerks. Every loading of a xls or xlsx file results into a \"reset\" error : have you found a solution ? \n. Thank you altogether for your answer !\n. I realize I have Studiowerk's \"connection reset\" issue only  on my distant environment (PHP Version 5.2.6-1+lenny16) and not on my local environment (WAMP, 5.4.3)\n\nSo I have to look for an environment issue on my server.\n\nIt seems I get the error everytime i use a loading function (ex : PHPExcel_IOFactory::load(\"myFile.xls\") on xls or xlsx files. If i delete these program lines on my scripts, regular errors are displayed of course, but not the \"connection reset\".\n\nThe only exception seems to be the xls or xlsx files that were created by the example scripts.\n\nFor example  the \"07reader.php\" example works fine when it is asked to load the \"05featuredemo.xlsx\" file written by the \"05featuredemo.php\" example. \n\nIf I try to make it work with another *.xlsx file, i get the \"connection reset\" issue again.\n\nSame thing if merely download \"05featuredemo.xlsx\", open it in Excel and resave it, then upload it again : connection reset. \n\nI've also noticed that the working readers examples are displayed only in black in my distant environment, but much more nicely displayed, with colors, on my local environment.\n\nWould you have any advice to  help me find what I have to change on my distant server ? Any help wildly appreciated, for PHPExcel seems the key to the project i'm on.\n\n(It seems to me the basic requirements are met : gd2, ZIP, xml. Here is what appears on my phpinfo on XML, GD2 and Zip.:\n\ngd\nGD Support  enabled\nGD Version  2.0 or higher\nFreeType Support    enabled\nFreeType Linkage    with freetype\nFreeType Version    2.3.7\nT1Lib Support   enabled\nGIF Read Support    enabled\nGIF Create Support  enabled\nJPG Support     enabled\nPNG Support     enabled\nWBMP Support    enabled\n\nzip\nZip     enabled\nExtension Version   $Id: php_zip.c,v 1.1.2.43 2008/01/18 00:51:38 pajoye Exp $\nZip version     1.8.11\nLibzip version  0.8.0-compatible\n\nxmlrpc_error_number 0   0\nxmlrpc_errors   Off Off\n\nDOM/XML     enabled\nDOM/XML API Version     20031129\nlibxml Version  2.6.32 \n\nlibxml\nlibXML support  active\nlibXML Version  2.6.32\nlibXML streams  enabled \n\nxml\nXML Support     active\nXML Namespace Support   active\nlibxml2 Version     2.6.32\n\nxmlreader\nXMLReader   enabled\n\nxmlwriter\nXMLWriter   enabled\n. hello, \nSame problem as StudioWerks. Every loading of a xls or xlsx file results into a \"reset\" error : have you found a solution ? \n. Thank you altogether for your answer !\n. I realize I have Studiowerk's \"connection reset\" issue only  on my distant environment (PHP Version 5.2.6-1+lenny16) and not on my local environment (WAMP, 5.4.3)\n\nSo I have to look for an environment issue on my server.\n\nIt seems I get the error everytime i use a loading function (ex : PHPExcel_IOFactory::load(\"myFile.xls\") on xls or xlsx files. If i delete these program lines on my scripts, regular errors are displayed of course, but not the \"connection reset\".\n\nThe only exception seems to be the xls or xlsx files that were created by the example scripts.\n\nFor example  the \"07reader.php\" example works fine when it is asked to load the \"05featuredemo.xlsx\" file written by the \"05featuredemo.php\" example. \n\nIf I try to make it work with another *.xlsx file, i get the \"connection reset\" issue again.\n\nSame thing if merely download \"05featuredemo.xlsx\", open it in Excel and resave it, then upload it again : connection reset. \n\nI've also noticed that the working readers examples are displayed only in black in my distant environment, but much more nicely displayed, with colors, on my local environment.\n\nWould you have any advice to  help me find what I have to change on my distant server ? Any help wildly appreciated, for PHPExcel seems the key to the project i'm on.\n\n(It seems to me the basic requirements are met : gd2, ZIP, xml. Here is what appears on my phpinfo on XML, GD2 and Zip.:\n\ngd\nGD Support  enabled\nGD Version  2.0 or higher\nFreeType Support    enabled\nFreeType Linkage    with freetype\nFreeType Version    2.3.7\nT1Lib Support   enabled\nGIF Read Support    enabled\nGIF Create Support  enabled\nJPG Support     enabled\nPNG Support     enabled\nWBMP Support    enabled\n\nzip\nZip     enabled\nExtension Version   $Id: php_zip.c,v 1.1.2.43 2008/01/18 00:51:38 pajoye Exp $\nZip version     1.8.11\nLibzip version  0.8.0-compatible\n\nxmlrpc_error_number 0   0\nxmlrpc_errors   Off Off\n\nDOM/XML     enabled\nDOM/XML API Version     20031129\nlibxml Version  2.6.32 \n\nlibxml\nlibXML support  active\nlibXML Version  2.6.32\nlibXML streams  enabled \n\nxml\nXML Support     active\nXML Namespace Support   active\nlibxml2 Version     2.6.32\n\nxmlreader\nXMLReader   enabled\n\nxmlwriter\nXMLWriter   enabled\n. ",
    "Harrrrry": "Hi, I am using phpexcel with zend framwork 1, when I trying to export data with more then 13 columns it show me the The connection was reset page but when I export the data in excel with 13 or less then 13 columns it working fine.\n\nHow can I solve this because I use columns more then 25\n. Hi, I am using phpexcel with zend framwork 1, when I trying to export data with more then 13 columns it show me the The connection was reset page but when I export the data in excel with 13 or less then 13 columns it working fine.\n\nHow can I solve this because I use columns more then 25\n. ",
    "Lou117": "Hi guys,\n\nI got the same error when parsing an Excel2007 (xlsx) file generated by the DFA Reporting API (https://developers.google.com/doubleclick-advertisers/reporting/)... I don't have any info about the spreadsheet program they actually use for generating the file.\n\nBest regards,\nLou\n. Hi guys,\n\nI got the same error when parsing an Excel2007 (xlsx) file generated by the DFA Reporting API (https://developers.google.com/doubleclick-advertisers/reporting/)... I don't have any info about the spreadsheet program they actually use for generating the file.\n\nBest regards,\nLou\n. ",
    "veena-udayabhanu": "This continues to be an issue even 3.5 years later :)\r\n\r\nI am trying to parse an xlsx file generated by the DFA reporting API and running in to the same issue. I could try and see if I can generate an empty report with no real data and attach it here if it will help debug this further.. This continues to be an issue even 3.5 years later :)\r\n\r\nI am trying to parse an xlsx file generated by the DFA reporting API and running in to the same issue. I could try and see if I can generate an empty report with no real data and attach it here if it will help debug this further.. ",
    "ducin": "Thanks for your reply. So if I need such feature, what is the best approach to do this (from the architectural point of view)? I wouldn't like to parse the final csv output from your lib :) Is there a hook slot I can implement or something like that?\n. I didn't mean that your CSV output is useless (it was not an offence, to be honest). Probably most of CSV outputs need precise rectangular shape, but in my case, it's not, unfortunately.\n\nIn my case both excel and CSV consist of headers (meta-information about the document) and the real data (numbers). Meta-data is not who created the document and who modified it last time, but things like categories, period of time the data relates to (these can be different), structure indicators, etc.\n\nIn excel spreadsheet an empty cell is just an empty cell. But in CSV it is a little difference whether there is a `,\"\",\"\"`, I hope you understand what I mean. Thanks you for instructions with the `trim` property!\n. Thanks for your reply. So if I need such feature, what is the best approach to do this (from the architectural point of view)? I wouldn't like to parse the final csv output from your lib :) Is there a hook slot I can implement or something like that?\n. I didn't mean that your CSV output is useless (it was not an offence, to be honest). Probably most of CSV outputs need precise rectangular shape, but in my case, it's not, unfortunately.\n\nIn my case both excel and CSV consist of headers (meta-information about the document) and the real data (numbers). Meta-data is not who created the document and who modified it last time, but things like categories, period of time the data relates to (these can be different), structure indicators, etc.\n\nIn excel spreadsheet an empty cell is just an empty cell. But in CSV it is a little difference whether there is a `,\"\",\"\"`, I hope you understand what I mean. Thanks you for instructions with the `trim` property!\n. ",
    "AndreKR": "So what is the officially supported way to iterate over the cells of a single column?\n. This is exactly how the row iterator returns a row and I don't see any problem with that solution.\n. @s-robertson Should be fixed by https://github.com/PHPOffice/PHPExcel/pull/674\n. It is still possible to use the calculation engine standalone. I didn't touch the singleton instance `self::$instance`, I only changed the `if` branch for when `getInstance()` is called _with_ a workbook.\n. So what is the officially supported way to iterate over the cells of a single column?\n. This is exactly how the row iterator returns a row and I don't see any problem with that solution.\n. @s-robertson Should be fixed by https://github.com/PHPOffice/PHPExcel/pull/674\n. It is still possible to use the calculation engine standalone. I didn't touch the singleton instance `self::$instance`, I only changed the `if` branch for when `getInstance()` is called _with_ a workbook.\n. ",
    "patricmutwiri": "I can't get it to work. I can't get it to work. ",
    "gorlovka": "Me too, it would be nice to have sample with already included Pdf library.\r\nThere must be some tricky detail which is hard to grasp if you are not author of it. Could you  please then just modify your data? I feel I got into the same problem\n. Cool, \nI still can reproduce it.\n\nIf I read excel file in the following way:\n\n  $phpExcel = new PHPExcel;\n  $fileType = PHPExcel_IOFactory::identify($fileTempName);\n  $reader = PHPExcel_IOFactory::createReader($fileType);\n  $objPHPExcel = $reader->load($fileTempName);\n $data = $objPHPExcel->getActiveSheet()->toArray();\n\nPHP runs out of memory limit consuming all available RAM (nearly 8GB on the development machine).\nThough excel file looks pretty ok.\n\nI \"fixed\" it by messing a bit with  toArray( ) function.\nNow I call it in the following way:\n$data = $objPHPExcel->getActiveSheet()->toArray(null, false, false);\n\nAnd it's new implementation is:\n                public function toArray($nullValue = null, $calculateFormulas = true, $formatData = true, $returnCellRef = false) {\n              // Garbage collect...\n\n```\n       $this->garbageCollect();\n\n\n    //    Identify the range that we need to extract from the worksheet\n    $maxCol = $this->getHighestColumn();\n\n    if (strlen($maxCol) > 2) {                        \n        $maxCol = PriceGenerator::EXCEL_MAX_COLUMN; // ZZ\n    }\n\n\n    $maxRow = $this->getHighestRow();\n\n    $maxRow = $maxRow > PriceGenerator::EXCEL_MAX_ROW ?  PriceGenerator::EXCEL_MAX_ROW : $maxRow; // 20000\n\n\n    // Return\n    return $this->rangeToArray('A1:'.$maxCol.$maxRow,\n                                $nullValue, $calculateFormulas, $formatData, $returnCellRef);\n\n}\n```\n\nI do understand that this is not applicable in general case.\nBut it does work in my particular case because I know some limits in advance.\n\nI guess the problem is that PHPExcel somehow supposed non-existing cells to be existing  and make it to loop forever. \n. Unfortunately  I can't try this solution now. Will it work if for example  file contains 50 filled rows , then 20 empty rows  and 10 filles rows again?      \r\n\r\nBy the way  in my case  a workaround was possible - after getting 1000-2000  empty rows (which have no data inside) I assume there are no data anymore in file and stop reading.   . yep, I got it, thanks . Me too, it would be nice to have sample with already included Pdf library.\r\nThere must be some tricky detail which is hard to grasp if you are not author of it. Could you  please then just modify your data? I feel I got into the same problem\n. Cool, \nI still can reproduce it.\n\nIf I read excel file in the following way:\n\n  $phpExcel = new PHPExcel;\n  $fileType = PHPExcel_IOFactory::identify($fileTempName);\n  $reader = PHPExcel_IOFactory::createReader($fileType);\n  $objPHPExcel = $reader->load($fileTempName);\n $data = $objPHPExcel->getActiveSheet()->toArray();\n\nPHP runs out of memory limit consuming all available RAM (nearly 8GB on the development machine).\nThough excel file looks pretty ok.\n\nI \"fixed\" it by messing a bit with  toArray( ) function.\nNow I call it in the following way:\n$data = $objPHPExcel->getActiveSheet()->toArray(null, false, false);\n\nAnd it's new implementation is:\n                public function toArray($nullValue = null, $calculateFormulas = true, $formatData = true, $returnCellRef = false) {\n              // Garbage collect...\n\n```\n       $this->garbageCollect();\n\n\n    //    Identify the range that we need to extract from the worksheet\n    $maxCol = $this->getHighestColumn();\n\n    if (strlen($maxCol) > 2) {                        \n        $maxCol = PriceGenerator::EXCEL_MAX_COLUMN; // ZZ\n    }\n\n\n    $maxRow = $this->getHighestRow();\n\n    $maxRow = $maxRow > PriceGenerator::EXCEL_MAX_ROW ?  PriceGenerator::EXCEL_MAX_ROW : $maxRow; // 20000\n\n\n    // Return\n    return $this->rangeToArray('A1:'.$maxCol.$maxRow,\n                                $nullValue, $calculateFormulas, $formatData, $returnCellRef);\n\n}\n```\n\nI do understand that this is not applicable in general case.\nBut it does work in my particular case because I know some limits in advance.\n\nI guess the problem is that PHPExcel somehow supposed non-existing cells to be existing  and make it to loop forever. \n. Unfortunately  I can't try this solution now. Will it work if for example  file contains 50 filled rows , then 20 empty rows  and 10 filles rows again?      \r\n\r\nBy the way  in my case  a workaround was possible - after getting 1000-2000  empty rows (which have no data inside) I assume there are no data anymore in file and stop reading.   . yep, I got it, thanks . ",
    "tesmojones": "I have same problem. My file is Excel5 too..\n. I have same problem. My file is Excel5 too..\n. ",
    "anais1477": "Up\n. Ok that's what i thought ! Thank you for giving the information.\nDoes it means that the file will only be readable by excel 2007+ ? Or Excel 2003 will be able to read it ?\nDo you have any idea about the period when this feature will be added ?\n. Ok. Thank you !\n. Up\n. Ok that's what i thought ! Thank you for giving the information.\nDoes it means that the file will only be readable by excel 2007+ ? Or Excel 2003 will be able to read it ?\nDo you have any idea about the period when this feature will be added ?\n. Ok. Thank you !\n. ",
    "MacGWik": "Is there's any update on this issue ?. Is there's any update on this issue ?. ",
    "rokcarl": "I also get Exception\n\n```\nCall to undefined method PHPExcel_Worksheet::getSheetByName()\nPHPExcel/Calculation/LookupRef.php on line 327\n```\n\nusing this code:\n\n```\n$excel_reader = new PHPExcel_Reader_Excel2007();\n$excel = $excel_reader->load($excel_path);\nvar_dump($excel->getSheet(5)->getCell(\"I26\")->getCalculatedValue());\n```\n\nwhile using getValue() in the last line works.\n. Sure, I've checked with _getSheetNames()_. I've also commented out the _setLoadSheetsOnly()_ call so that all the sheets are loaded.\n. I also get Exception\n\n```\nCall to undefined method PHPExcel_Worksheet::getSheetByName()\nPHPExcel/Calculation/LookupRef.php on line 327\n```\n\nusing this code:\n\n```\n$excel_reader = new PHPExcel_Reader_Excel2007();\n$excel = $excel_reader->load($excel_path);\nvar_dump($excel->getSheet(5)->getCell(\"I26\")->getCalculatedValue());\n```\n\nwhile using getValue() in the last line works.\n. Sure, I've checked with _getSheetNames()_. I've also commented out the _setLoadSheetsOnly()_ call so that all the sheets are loaded.\n. ",
    "derrimahendra": "did you have solution for this one?actually i've formula that referenced to other file,is it possible?\n. I tried using getOldCalculatedValue and save reference file in the same directory, but the value is blank, there are another way for this one?\n. did you have solution for this one?actually i've formula that referenced to other file,is it possible?\n. I tried using getOldCalculatedValue and save reference file in the same directory, but the value is blank, there are another way for this one?\n. ",
    "enboig": "New year, any news on this subject?\n. New year, any news on this subject?\n. ",
    "Shanto": "Let's go thorough this test:\n1. Insert hyperlinks to http://www.phpexcel.net in range A2:A5.\n2. Then, we delete row 1 which brings A2:A5 up by one row, i.e. A1:A4.\n3. At this point, you would expect all cells in range A1:A4 to contain the hyperlinks inserted earlier. Unfortunately, due to this bug, you are left with only one hyperlink at A1. Hyperlinks which are supposed to be present at A2:A4 are _gone_.\n\n#### Tests/161hyperlinks-after-add-del-rows.php (new file)\n\n``` php\n<?php\n\n/** Error reporting */\nerror_reporting(E_ALL);\nini_set('display_errors', TRUE);\nini_set('display_startup_errors', TRUE);\ndate_default_timezone_set('Europe/London');\n\ndefine('EOL',(PHP_SAPI == 'cli') ? PHP_EOL : '<br />');\n\ndate_default_timezone_set('Europe/London');\n\n/** Include path **/\nset_include_path(get_include_path() . PATH_SEPARATOR . '../Classes/');\n\n/** PHPExcel_IOFactory */\ninclude 'PHPExcel/IOFactory.php';\n\n$test = new PHPExcel();\n\n$tab1 = $test->getSheet(0);\nfor($i = 2; $i <=5; $i++) {\n    echo date('H:i:s') , \" Setting Hyperlink to www.phpexcel.net at cell A{$i}\" , EOL; \n    $cell = $tab1->getCell(\"A{$i}\");\n    $cell->setValue('www.phpexcel.net');\n    $cell->getHyperlink()->setUrl('http://www.phpexcel.net')->setTooltip('link to http://www.phpexcel.net');\n}\n\necho date('H:i:s') , \" HyperlinkCollection before removing row 1 \" , print_r($tab1->getHyperlinkCollection(), 1);\n\necho date('H:i:s') , \" Removing row 1\" , EOL;\n$tab1->removeRow(1);\n\necho date('H:i:s') , \" HyperlinkCollection after removing row 1 \" , print_r($tab1->getHyperlinkCollection(), 1);\n\n$out_file = str_replace('.php', '.xls', __FILE__);\necho date('H:i:s') , \" Writing output\" , EOL;\n$objWriter = PHPExcel_IOFactory::createWriter($test, 'Excel5')->save($out_file);\necho date('H:i:s') , \" File written to \" , basename($out_file), EOL;\n\n//system(\"open $out_file\");\n```\n\n#### Sample output\n\n```\n05:03:06 Setting Hyperlink to www.phpexcel.net at cell A2\n05:03:06 Setting Hyperlink to www.phpexcel.net at cell A3\n05:03:06 Setting Hyperlink to www.phpexcel.net at cell A4\n05:03:06 Setting Hyperlink to www.phpexcel.net at cell A5\n05:03:06 HyperlinkCollection before removing row 1 Array\n(\n    [A2] => PHPExcel_Cell_Hyperlink Object\n        (\n            [_url:PHPExcel_Cell_Hyperlink:private] => http://www.phpexcel.net\n            [_tooltip:PHPExcel_Cell_Hyperlink:private] => link to http://www.phpexcel.net\n        )\n\n    [A3] => PHPExcel_Cell_Hyperlink Object\n        (\n            [_url:PHPExcel_Cell_Hyperlink:private] => http://www.phpexcel.net\n            [_tooltip:PHPExcel_Cell_Hyperlink:private] => link to http://www.phpexcel.net\n        )\n\n    [A4] => PHPExcel_Cell_Hyperlink Object\n        (\n            [_url:PHPExcel_Cell_Hyperlink:private] => http://www.phpexcel.net\n            [_tooltip:PHPExcel_Cell_Hyperlink:private] => link to http://www.phpexcel.net\n        )\n\n    [A5] => PHPExcel_Cell_Hyperlink Object\n        (\n            [_url:PHPExcel_Cell_Hyperlink:private] => http://www.phpexcel.net\n            [_tooltip:PHPExcel_Cell_Hyperlink:private] => link to http://www.phpexcel.net\n        )\n\n)\n05:03:06 Removing row 1\n05:03:06 HyperlinkCollection after removing row 1 Array\n(\n    [A1] => PHPExcel_Cell_Hyperlink Object\n        (\n            [_url:PHPExcel_Cell_Hyperlink:private] => http://www.phpexcel.net\n            [_tooltip:PHPExcel_Cell_Hyperlink:private] => link to http://www.phpexcel.net\n        )\n\n)\n05:03:06 Writing output\n05:03:06 File written to 161hyperlinks-after-add-del-rows.xls\n```\n. How about this one?\n\n``` php\n// Update worksheet: hyperlinks\n$aHyperlinkCollection = $pSheet->getHyperlinkCollection();\n$aHyperlinkCollection_ = array();\nforeach ($aHyperlinkCollection as $key => $value) {\n    $newReference = $this->updateCellReference($key, $pBefore, $pNumCols, $pNumRows);\n    $pSheet->setHyperLink($key, null);\n    $aHyperlinkCollection_[$newReference] = $value;\n}\nforeach ($aHyperlinkCollection_ as $key => $value) {\n    $pSheet->setHyperLink($key, $value);\n}\nunset($aHyperlinkCollection, $aHyperlinkCollection_);\n```\n\nI guess, this should be done for all code blocks in ReferenceHelper.php which touch *collections.\n. Thanks for looking into this as well as other reference/collection alteration codes nearby. What you suggested above and later committed looks good, and seems to satisfy all 4 cases (Add|Remove x Row|Column) as in https://gist.github.com/Shanto/5430353.\n. Let's go thorough this test:\n1. Insert hyperlinks to http://www.phpexcel.net in range A2:A5.\n2. Then, we delete row 1 which brings A2:A5 up by one row, i.e. A1:A4.\n3. At this point, you would expect all cells in range A1:A4 to contain the hyperlinks inserted earlier. Unfortunately, due to this bug, you are left with only one hyperlink at A1. Hyperlinks which are supposed to be present at A2:A4 are _gone_.\n\n#### Tests/161hyperlinks-after-add-del-rows.php (new file)\n\n``` php\n<?php\n\n/** Error reporting */\nerror_reporting(E_ALL);\nini_set('display_errors', TRUE);\nini_set('display_startup_errors', TRUE);\ndate_default_timezone_set('Europe/London');\n\ndefine('EOL',(PHP_SAPI == 'cli') ? PHP_EOL : '<br />');\n\ndate_default_timezone_set('Europe/London');\n\n/** Include path **/\nset_include_path(get_include_path() . PATH_SEPARATOR . '../Classes/');\n\n/** PHPExcel_IOFactory */\ninclude 'PHPExcel/IOFactory.php';\n\n$test = new PHPExcel();\n\n$tab1 = $test->getSheet(0);\nfor($i = 2; $i <=5; $i++) {\n    echo date('H:i:s') , \" Setting Hyperlink to www.phpexcel.net at cell A{$i}\" , EOL; \n    $cell = $tab1->getCell(\"A{$i}\");\n    $cell->setValue('www.phpexcel.net');\n    $cell->getHyperlink()->setUrl('http://www.phpexcel.net')->setTooltip('link to http://www.phpexcel.net');\n}\n\necho date('H:i:s') , \" HyperlinkCollection before removing row 1 \" , print_r($tab1->getHyperlinkCollection(), 1);\n\necho date('H:i:s') , \" Removing row 1\" , EOL;\n$tab1->removeRow(1);\n\necho date('H:i:s') , \" HyperlinkCollection after removing row 1 \" , print_r($tab1->getHyperlinkCollection(), 1);\n\n$out_file = str_replace('.php', '.xls', __FILE__);\necho date('H:i:s') , \" Writing output\" , EOL;\n$objWriter = PHPExcel_IOFactory::createWriter($test, 'Excel5')->save($out_file);\necho date('H:i:s') , \" File written to \" , basename($out_file), EOL;\n\n//system(\"open $out_file\");\n```\n\n#### Sample output\n\n```\n05:03:06 Setting Hyperlink to www.phpexcel.net at cell A2\n05:03:06 Setting Hyperlink to www.phpexcel.net at cell A3\n05:03:06 Setting Hyperlink to www.phpexcel.net at cell A4\n05:03:06 Setting Hyperlink to www.phpexcel.net at cell A5\n05:03:06 HyperlinkCollection before removing row 1 Array\n(\n    [A2] => PHPExcel_Cell_Hyperlink Object\n        (\n            [_url:PHPExcel_Cell_Hyperlink:private] => http://www.phpexcel.net\n            [_tooltip:PHPExcel_Cell_Hyperlink:private] => link to http://www.phpexcel.net\n        )\n\n    [A3] => PHPExcel_Cell_Hyperlink Object\n        (\n            [_url:PHPExcel_Cell_Hyperlink:private] => http://www.phpexcel.net\n            [_tooltip:PHPExcel_Cell_Hyperlink:private] => link to http://www.phpexcel.net\n        )\n\n    [A4] => PHPExcel_Cell_Hyperlink Object\n        (\n            [_url:PHPExcel_Cell_Hyperlink:private] => http://www.phpexcel.net\n            [_tooltip:PHPExcel_Cell_Hyperlink:private] => link to http://www.phpexcel.net\n        )\n\n    [A5] => PHPExcel_Cell_Hyperlink Object\n        (\n            [_url:PHPExcel_Cell_Hyperlink:private] => http://www.phpexcel.net\n            [_tooltip:PHPExcel_Cell_Hyperlink:private] => link to http://www.phpexcel.net\n        )\n\n)\n05:03:06 Removing row 1\n05:03:06 HyperlinkCollection after removing row 1 Array\n(\n    [A1] => PHPExcel_Cell_Hyperlink Object\n        (\n            [_url:PHPExcel_Cell_Hyperlink:private] => http://www.phpexcel.net\n            [_tooltip:PHPExcel_Cell_Hyperlink:private] => link to http://www.phpexcel.net\n        )\n\n)\n05:03:06 Writing output\n05:03:06 File written to 161hyperlinks-after-add-del-rows.xls\n```\n. How about this one?\n\n``` php\n// Update worksheet: hyperlinks\n$aHyperlinkCollection = $pSheet->getHyperlinkCollection();\n$aHyperlinkCollection_ = array();\nforeach ($aHyperlinkCollection as $key => $value) {\n    $newReference = $this->updateCellReference($key, $pBefore, $pNumCols, $pNumRows);\n    $pSheet->setHyperLink($key, null);\n    $aHyperlinkCollection_[$newReference] = $value;\n}\nforeach ($aHyperlinkCollection_ as $key => $value) {\n    $pSheet->setHyperLink($key, $value);\n}\nunset($aHyperlinkCollection, $aHyperlinkCollection_);\n```\n\nI guess, this should be done for all code blocks in ReferenceHelper.php which touch *collections.\n. Thanks for looking into this as well as other reference/collection alteration codes nearby. What you suggested above and later committed looks good, and seems to satisfy all 4 cases (Add|Remove x Row|Column) as in https://gist.github.com/Shanto/5430353.\n. ",
    "dwiardhy": "ak yo ra mudeng jon...\nrep nyetak height ke autofit...\nono saran g bro..?\n. ak yo ra mudeng jon...\nrep nyetak height ke autofit...\nono saran g bro..?\n. ",
    "neclimdul": "Pushed fix of a random white space change from my IDE in the first commit.\n. Pushed fix of a random white space change from my IDE in the first commit.\n. ",
    "liuggio": "that's great, \nbut why you want to do it only for onwards releases?\nA lot of projects needs a stable version in their vendor.\n. mm have you already tried to click on update on https://packagist.org/packages/phpoffice/phpexcel page?\n. any news on it?\n. thanks for the quick and full answer :)\n. that's great, \nbut why you want to do it only for onwards releases?\nA lot of projects needs a stable version in their vendor.\n. mm have you already tried to click on update on https://packagist.org/packages/phpoffice/phpexcel page?\n. any news on it?\n. thanks for the quick and full answer :)\n. ",
    "sorpigal": "If you create a workbook with a large number of conditional formatting styles that apply to an expression or a set of cells and the ranges involved are very larget (encompassing hundreds or thousands of cells) and then load the XLSX file with PHPExcel and write it out again the resulting sheet.xml for the sheet containing the conditional formatting will be excessively large.\n\nIn my real world case where this issue was encountered a sheet.xml which was 2.2M in size as written by Excel 2010 became 230M+ when read and then written by PHPExcel.\n\nIt seems like PHPExcel is generally used either to create workbooks from scratch or to read them to extract values and is not often used in my scenario, which is to read a complex template, modify it and write it back out. It is only in this last scenario where the problem becomes obvious.\n\nIn the Excel2007 reader after conditional formatting is read each range is, for reasons I cannot identify, expanded into individual cell references and then each conditional formatting block is applied to each cell. This can be highly non-performant and does not appear to be necessary.\n. Looking at this further today I can say that it's definitely not right as it is. Splitting on space is wrong, instead the ref should be written as-is at read time and the write-time code must be updated to write the correct sort of cell ref. I have some code for this but it's not quite commit-ready. When it is I'll push to the same branch.\n. I can attest that conditional formatting for a large number of rows and a small number of columns is not hard in Excel2007. In the worksheet XML you write a conditionalFormatting stanza with an sqref that is a range (e.g. A1:B10).  Each actual cfRule formula should reference any row (doesn't matter) as if it applied just to one row. Getting them in the right order is something I haven't figured out (you'd think it was just straight priority= on the cfRule, but it doesn't seem to work to just write it out sequentially. Perhaps reverse-sequentially as seems common in Excel-made sheets? Needs investigation). Fortunately for most people the order in which distinct rulesets are tested is not important.\n\nPHPExcel at the moment is missing support for some formula types, but if you use each one systematically in an XLSX and then unpack the sheet1.xml (or whichever) you'll find the structure quite easy to duplicate.\n\nSadly the code for this that I have written is not redistributable. Anyone with a PHP dev environment and a copy of Excel 2007 or later should be able to implement this in a couple days. Keep in mind that older versions of Excel have a hard limit on the number of conditional formatting rules  for a worksheet(16, IIRC), but for Excel2007 the limit is much higher (or maybe gone).\n. So as it turns out I do have some improvements for this sitting in my local repo  but I have absolutely no way to verify correctness (no Excel2007) and don't have a php dev environment at the moment. I will commit this anyway in case someone with the wherewithal to look in to it wants to do so.\n. So, just to summarize: The first commit was wrong (split on space is wrong). The second commit fixes the reader and added some of the missing cfRule types (this works OK). The last commit just adds stopIfTrue and priority writing. Priority as it stands is wrong but not harmful. The assumption that the conditional string cell reference for the *ConditionalStyles functions would be a single cell has implicitly changed to allow it to be a single cell or a range of cells. In theory $_conditionalStylesCollection could contain any sort of cell ref (even a range), but I don't know if that would cause problems elsewhere in the code.\n\nYes, duplicateConditionalStyle doesn't match what Excel2007 expects from real range styles (it just copies cell styles around). It might be appropriate to update duplicateConditionalStyle to simply create one entry for the range in the conditionalStylesCollection, but at that point it would be no different than calling setConditionalStyles with the first param as a range string.\n\nI expect this all to work correctly but I just cannot test. Sorry.\n. If you create a workbook with a large number of conditional formatting styles that apply to an expression or a set of cells and the ranges involved are very larget (encompassing hundreds or thousands of cells) and then load the XLSX file with PHPExcel and write it out again the resulting sheet.xml for the sheet containing the conditional formatting will be excessively large.\n\nIn my real world case where this issue was encountered a sheet.xml which was 2.2M in size as written by Excel 2010 became 230M+ when read and then written by PHPExcel.\n\nIt seems like PHPExcel is generally used either to create workbooks from scratch or to read them to extract values and is not often used in my scenario, which is to read a complex template, modify it and write it back out. It is only in this last scenario where the problem becomes obvious.\n\nIn the Excel2007 reader after conditional formatting is read each range is, for reasons I cannot identify, expanded into individual cell references and then each conditional formatting block is applied to each cell. This can be highly non-performant and does not appear to be necessary.\n. Looking at this further today I can say that it's definitely not right as it is. Splitting on space is wrong, instead the ref should be written as-is at read time and the write-time code must be updated to write the correct sort of cell ref. I have some code for this but it's not quite commit-ready. When it is I'll push to the same branch.\n. I can attest that conditional formatting for a large number of rows and a small number of columns is not hard in Excel2007. In the worksheet XML you write a conditionalFormatting stanza with an sqref that is a range (e.g. A1:B10).  Each actual cfRule formula should reference any row (doesn't matter) as if it applied just to one row. Getting them in the right order is something I haven't figured out (you'd think it was just straight priority= on the cfRule, but it doesn't seem to work to just write it out sequentially. Perhaps reverse-sequentially as seems common in Excel-made sheets? Needs investigation). Fortunately for most people the order in which distinct rulesets are tested is not important.\n\nPHPExcel at the moment is missing support for some formula types, but if you use each one systematically in an XLSX and then unpack the sheet1.xml (or whichever) you'll find the structure quite easy to duplicate.\n\nSadly the code for this that I have written is not redistributable. Anyone with a PHP dev environment and a copy of Excel 2007 or later should be able to implement this in a couple days. Keep in mind that older versions of Excel have a hard limit on the number of conditional formatting rules  for a worksheet(16, IIRC), but for Excel2007 the limit is much higher (or maybe gone).\n. So as it turns out I do have some improvements for this sitting in my local repo  but I have absolutely no way to verify correctness (no Excel2007) and don't have a php dev environment at the moment. I will commit this anyway in case someone with the wherewithal to look in to it wants to do so.\n. So, just to summarize: The first commit was wrong (split on space is wrong). The second commit fixes the reader and added some of the missing cfRule types (this works OK). The last commit just adds stopIfTrue and priority writing. Priority as it stands is wrong but not harmful. The assumption that the conditional string cell reference for the *ConditionalStyles functions would be a single cell has implicitly changed to allow it to be a single cell or a range of cells. In theory $_conditionalStylesCollection could contain any sort of cell ref (even a range), but I don't know if that would cause problems elsewhere in the code.\n\nYes, duplicateConditionalStyle doesn't match what Excel2007 expects from real range styles (it just copies cell styles around). It might be appropriate to update duplicateConditionalStyle to simply create one entry for the range in the conditionalStylesCollection, but at that point it would be no different than calling setConditionalStyles with the first param as a range string.\n\nI expect this all to work correctly but I just cannot test. Sorry.\n. ",
    "syntax53": "Extremely interested in being able to apply conditional formatting at the worksheet level.  Has there been any more development on this?  I have a spreadsheet with conditional formatting on 5 columns of 3500 rows.  As you can imagine, applying CF to each cell of those columns is not pretty in many ways.\n. Briefly looking at that it looks like that will move the conditionals from the cells to the worksheet, but the larger issue is they need to be specified differently in the first place. e.g. Instead of applying 5000 conditional statements on 5000 cells, apply one conditional that covers the range of those cells.  I assume this wouldn't change the current behavior of the duplicateConditionalStyle function? \n. Extremely interested in being able to apply conditional formatting at the worksheet level.  Has there been any more development on this?  I have a spreadsheet with conditional formatting on 5 columns of 3500 rows.  As you can imagine, applying CF to each cell of those columns is not pretty in many ways.\n. Briefly looking at that it looks like that will move the conditionals from the cells to the worksheet, but the larger issue is they need to be specified differently in the first place. e.g. Instead of applying 5000 conditional statements on 5000 cells, apply one conditional that covers the range of those cells.  I assume this wouldn't change the current behavior of the duplicateConditionalStyle function? \n. ",
    "rentalhost": "After fix some fatal errors (cited above) it fixed a infinity looping ocurring on Writer.\nThanks!\n. It's a big problem here.\n\nWhy it happen/is need?\n. I found a solution. Just replace (file `Classes/PHPExcel/Reader/Excel2007.php`, line 985):\n\n```\n$aReferences = PHPExcel_Cell::extractAllCellReferencesInRange($ref);\nforeach ($aReferences as $reference) {\n    $docSheet->getStyle($ref)->setConditionalStyles($reference);\n}\n```\n\nBy:\n\n```\n$docSheet->getStyle($ref)->setConditionalStyles($conditionalStyles);\n```\n\nI don't know why the current method is used, because in this case, the conditional styles should be copied only. In current version, if you have a selected area with 100 cells, for instance, by with an unique conditional formatting, the result file will have 100 different definitions to this same conditional formatting.\n. This bugs affects too if references is described as `$A:$A`.\n. I should tell that all this phpunit erros are not my fault. I tried it locally too and I get 141 errors, after this fix, it continues in 141 errors. :)\n. I'll create a new PR.\n. After fix some fatal errors (cited above) it fixed a infinity looping ocurring on Writer.\nThanks!\n. It's a big problem here.\n\nWhy it happen/is need?\n. I found a solution. Just replace (file `Classes/PHPExcel/Reader/Excel2007.php`, line 985):\n\n```\n$aReferences = PHPExcel_Cell::extractAllCellReferencesInRange($ref);\nforeach ($aReferences as $reference) {\n    $docSheet->getStyle($ref)->setConditionalStyles($reference);\n}\n```\n\nBy:\n\n```\n$docSheet->getStyle($ref)->setConditionalStyles($conditionalStyles);\n```\n\nI don't know why the current method is used, because in this case, the conditional styles should be copied only. In current version, if you have a selected area with 100 cells, for instance, by with an unique conditional formatting, the result file will have 100 different definitions to this same conditional formatting.\n. This bugs affects too if references is described as `$A:$A`.\n. I should tell that all this phpunit erros are not my fault. I tried it locally too and I get 141 errors, after this fix, it continues in 141 errors. :)\n. I'll create a new PR.\n. ",
    "metfan": "I had this problem when I launch functionnal test under PHPUnit with @runTestsInSeparateProcesses\nI use PHPExcel in Symfony2 application with liuggio/ExcelBundle\n. Do you me to add defined() control on all constants?\n. I had this problem when I launch functionnal test under PHPUnit with @runTestsInSeparateProcesses\nI use PHPExcel in Symfony2 application with liuggio/ExcelBundle\n. Do you me to add defined() control on all constants?\n. ",
    "martenhz": "I'm sorry for bumping up this old ticket, but I noticed it is still open and the 'bug' is still present in the current version of PHPExcel 1.8.0. I've noticed that PHPExcel seems unable to handle 'compressed' xlsx files. The 'normal' xlsx files are working smoothly.\n\nWorkaround is to open the 'compressed' xlsx file in Excel or LibreOffice Calc and save the file again as xlsx. LibreOffice Calc will automatically save the xlsx file in a format readable by PHPExcel.\n\nSee: http://fileformats.archiveteam.org/wiki/XLSX\n. I'm sorry for bumping up this old ticket, but I noticed it is still open and the 'bug' is still present in the current version of PHPExcel 1.8.0. I've noticed that PHPExcel seems unable to handle 'compressed' xlsx files. The 'normal' xlsx files are working smoothly.\n\nWorkaround is to open the 'compressed' xlsx file in Excel or LibreOffice Calc and save the file again as xlsx. LibreOffice Calc will automatically save the xlsx file in a format readable by PHPExcel.\n\nSee: http://fileformats.archiveteam.org/wiki/XLSX\n. ",
    "qiuhaiyu": "you definde cell is too short, you can add some cells\r\nlike this:\r\n\r\n> $cell = array('A1','B1','C1','D1','E1','F1','G1','H1','I1','J1','K1','L1','M1','N1','O1','P1','Q1','R1','S1','T1','U1','V1','W1','X1','Y1','Z1');\r\n. you definde cell is too short, you can add some cells\r\nlike this:\r\n\r\n> $cell = array('A1','B1','C1','D1','E1','F1','G1','H1','I1','J1','K1','L1','M1','N1','O1','P1','Q1','R1','S1','T1','U1','V1','W1','X1','Y1','Z1');\r\n. ",
    "gkalpak": ":+1: Is there a known solution to this ?\n. :+1: Is there a known solution to this ?\n. ",
    "ValentinNikolaev": "Rly need this\n. 1.9\n. @Progi1984 Yeah, I can add it. What should I test there? Can I found some examples in current tests set?\n. Sorry for delay. Will be done very soon.\n. Hello! Just added new test for with patch. PhpOffice\\PhpPresentation tests was helpfull. Thank you. @Progi1984 \n. @Progi1984 we miss you :)\n. @Progi1984\n. @MarkBaker @maartenba somebody help me... I need this fix very much. \n. Guys, where are you? :D\n. @MarkBaker I'm sorry to disturb you again (I sent u email but still no response....). Will 1.9 branch be maintained? No repsonse from the whole team for a month. I'm confused little bit. Cant contact with anybody.\n. Rly need this\n. 1.9\n. @Progi1984 Yeah, I can add it. What should I test there? Can I found some examples in current tests set?\n. Sorry for delay. Will be done very soon.\n. Hello! Just added new test for with patch. PhpOffice\\PhpPresentation tests was helpfull. Thank you. @Progi1984 \n. @Progi1984 we miss you :)\n. @Progi1984\n. @MarkBaker @maartenba somebody help me... I need this fix very much. \n. Guys, where are you? :D\n. @MarkBaker I'm sorry to disturb you again (I sent u email but still no response....). Will 1.9 branch be maintained? No repsonse from the whole team for a month. I'm confused little bit. Cant contact with anybody.\n. ",
    "in-ilyas-kazi": "+1\n. +1\n. ",
    "alandoyle95": "+1 as well.. +1 as well.. ",
    "mnulph": "Thanks for the quick reply.  Any idea when or if this functionality will be supported?\n\nFrom: Mark Baker [mailto:notifications@github.com] \nSent: Friday, May 17, 2013 4:23 PM\nTo: PHPOffice/PHPExcel\nCc: Mike Nulph\nSubject: Re: [PHPExcel] Templates with Check Boxes (#181)\n\nForm elements such as check boxes are not supported by PHPExcel at this point\n\n\u2014\nReply to this email directly or view it on GitHub https://github.com/PHPOffice/PHPExcel/issues/181#issuecomment-18084020 . \n\nThis message (including any attachments) contains confidential information for a specific individual and purpose, and is protected by law.  If you are not the intended recipient, you should delete this message.  Any disclosure, copying, or distribution of this message, or the taking of any action based on it, by other than the intended recipient, is strictly prohibited. Northpointe Bank is a member FDIC and an Equal Housing Lender.\n. Thanks for the quick reply.  Any idea when or if this functionality will be supported?\n\nFrom: Mark Baker [mailto:notifications@github.com] \nSent: Friday, May 17, 2013 4:23 PM\nTo: PHPOffice/PHPExcel\nCc: Mike Nulph\nSubject: Re: [PHPExcel] Templates with Check Boxes (#181)\n\nForm elements such as check boxes are not supported by PHPExcel at this point\n\n\u2014\nReply to this email directly or view it on GitHub https://github.com/PHPOffice/PHPExcel/issues/181#issuecomment-18084020 . \n\nThis message (including any attachments) contains confidential information for a specific individual and purpose, and is protected by law.  If you are not the intended recipient, you should delete this message.  Any disclosure, copying, or distribution of this message, or the taking of any action based on it, by other than the intended recipient, is strictly prohibited. Northpointe Bank is a member FDIC and an Equal Housing Lender.\n. ",
    "e-oz": "come on, oldies, 5.2 is not supported anymore. It's very weird to see code without namespaces in 2015.\n. come on, oldies, 5.2 is not supported anymore. It's very weird to see code without namespaces in 2015.\n. ",
    "stchr": "+1\n. +1\n. ",
    "cbabos": "There is an example with it in the documentation. So I think there is a solution for it. (Documentation/Examples/Reader/exampleReader10.php) Btw, I still got the unfiltered results (trying to get only specific columns and specific lines). \nEdit: just checked, in the example, the data would be filtered to read just lines 9 - 15, and columns G-K. The result is all lines with A-K columns.\n. There is an example with it in the documentation. So I think there is a solution for it. (Documentation/Examples/Reader/exampleReader10.php) Btw, I still got the unfiltered results (trying to get only specific columns and specific lines). \nEdit: just checked, in the example, the data would be filtered to read just lines 9 - 15, and columns G-K. The result is all lines with A-K columns.\n. ",
    "ArvidEnbom": "I'm having the same problem\n\nTrying to write a condition that will highlight the whole row red if the cell begins with a \"-\". I tried the expression manually inside an excel document first, and it worked fine. When I went to implement the same condition in PHPExcel, I couldn't get it to work. I've tried copying many snippets posted by other users across the internet, and I couldn't get a single one of them to work. Many, many hours later, I've now given up hope and I'm resorting to posting this in the hopes that you can help me. I hope it's just something stupid I did wrong.\n\nRelevant code:\n\n```\n        $objConditional1 = new PHPExcel_Style_Conditional();\n        $objConditional1->setConditionType(PHPExcel_Style_Conditional::CONDITION_EXPRESSION);\n        $objConditional1->setOperatorType(PHPExcel_Style_Conditional::OPERATOR_EQUAL);\n        $objConditional1->addCondition('LEFT(J2)=\"-\"');\n        $objConditional1->getStyle()->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getStartColor()->setRGB('C00000');\n        $objConditional1->getStyle()->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getEndColor()->setRGB('C00000');\n\n        $sheet->duplicateConditionalStyle(\n                array($objConditional1), \n                'A2:J'.$excel_row\n            );\n```\n\nResult:\n![phpexcel not working](https://cloud.githubusercontent.com/assets/12509096/16302376/16d0d752-394b-11e6-8015-d8255944e1bf.png)\n\nas you can see, the expression is not saved at all (instead it just inserts \"=0\"), and the background color remains unchanged. You may have noticed I tried setting both the \"Start\" color and the \"End\" color (not sure what the difference is there).\n. I solved this now in my case by using PHP to calculate the values that would be in the cells, in addition to writing equations to the cells. Then I highlighted the rows red as necessary, using those calculdated values instead of the result of the formulas in the cells. This issue is still open, though.\n\nEDIT: My solution also means that the highlighted rows are not bound to the values in the cells any more, so if the user edits any of the cells after receiving the file, the row's highlightedness (that's totally a word) will not update.\n. I'm having the same problem\n\nTrying to write a condition that will highlight the whole row red if the cell begins with a \"-\". I tried the expression manually inside an excel document first, and it worked fine. When I went to implement the same condition in PHPExcel, I couldn't get it to work. I've tried copying many snippets posted by other users across the internet, and I couldn't get a single one of them to work. Many, many hours later, I've now given up hope and I'm resorting to posting this in the hopes that you can help me. I hope it's just something stupid I did wrong.\n\nRelevant code:\n\n```\n        $objConditional1 = new PHPExcel_Style_Conditional();\n        $objConditional1->setConditionType(PHPExcel_Style_Conditional::CONDITION_EXPRESSION);\n        $objConditional1->setOperatorType(PHPExcel_Style_Conditional::OPERATOR_EQUAL);\n        $objConditional1->addCondition('LEFT(J2)=\"-\"');\n        $objConditional1->getStyle()->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getStartColor()->setRGB('C00000');\n        $objConditional1->getStyle()->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getEndColor()->setRGB('C00000');\n\n        $sheet->duplicateConditionalStyle(\n                array($objConditional1), \n                'A2:J'.$excel_row\n            );\n```\n\nResult:\n![phpexcel not working](https://cloud.githubusercontent.com/assets/12509096/16302376/16d0d752-394b-11e6-8015-d8255944e1bf.png)\n\nas you can see, the expression is not saved at all (instead it just inserts \"=0\"), and the background color remains unchanged. You may have noticed I tried setting both the \"Start\" color and the \"End\" color (not sure what the difference is there).\n. I solved this now in my case by using PHP to calculate the values that would be in the cells, in addition to writing equations to the cells. Then I highlighted the rows red as necessary, using those calculdated values instead of the result of the formulas in the cells. This issue is still open, though.\n\nEDIT: My solution also means that the highlighted rows are not bound to the values in the cells any more, so if the user edits any of the cells after receiving the file, the row's highlightedness (that's totally a word) will not update.\n. ",
    "DarkSide666": "I'm not native English speaker, so my English spelling definitely will be worse than everyone else :)\nMaybe you can simply add side note telling that starting from PHP 5.3.x php_zip (not sure about php_xml) is already included into PHP and is no more found as extension.\n. I'm not native English speaker, so my English spelling definitely will be worse than everyone else :)\nMaybe you can simply add side note telling that starting from PHP 5.3.x php_zip (not sure about php_xml) is already included into PHP and is no more found as extension.\n. ",
    "mnapoli": "+1 on this, we have the same problem when using PHPExcel with [Xport](https://github.com/myclabs/Xport).\n. ping\n\nCan we get this merged and have Excel5 and Excel2007 work the same way?\n. +1 on this, we have the same problem when using PHPExcel with [Xport](https://github.com/myclabs/Xport).\n. ping\n\nCan we get this merged and have Excel5 and Excel2007 work the same way?\n. ",
    "eplaut": "this bug backtrace:\n#0  PHPExcel_CachedObjectStorage_MemoryGZip->_storeData() called at [C:\\Users\\eplaut\\Documents\\php\\PHPExcel-develop\\Classes\\PHPExcel\\CachedObjectStorage\\MemoryGZip.php:91]\n#1  PHPExcel_CachedObjectStorage_MemoryGZip->getCacheData(A1) called at [C:\\Users\\eplaut\\Documents\\php\\PHPExcel-develop\\Classes\\PHPExcel\\Worksheet.php:2552]\n#2  PHPExcel_Worksheet->garbageCollect() called at [C:\\Users\\eplaut\\Documents\\php\\PHPExcel-develop\\Classes\\PHPExcel.php:1121]\n#3  PHPExcel->garbageCollect() called at [C:\\Users\\eplaut\\Documents\\php\\PHPExcel-develop\\Classes\\PHPExcel\\Writer\\HTML.php:153]\n#4  PHPExcel_Writer_HTML->save(C:\\Users\\eplaut\\Documents\\php\\PHPExcel-develop\\Bugs/input1_Sheet1.html) called at [C:\\Users\\eplaut\\Documents\\php\\PHPExcel-develop\\Bugs\\bug_193.php:45]\n\nThe garbageCollect creates new PHPExcel_CachedObjectStorage_MemoryGZip class, instead of using the existing one.\nThe default value of $_currentCellIsDirty is \"true\" but $_currentObject in not set. so there is no option to deatach it.\nThe easy way is to change the default value to \"false\", but I don't know the reason it set to true.\n. Hi,\n\ndone some research here.\nThe problem is cell->getCoordinate() using the cache, which is shared to all cells (it is actually part of $cell->_parent which is the worksheet itself)\nmeaning while generating the rows cell (Writer_HTML:430-436) the \"pointer\" of the current row is progressing to the last cell in the row. later (at Writer_HTML->_generateRow()) when trying $cell->getCalculateValue() (line 1174) it always get the calculate value from the last cell.\n\nthere are two solutions:\n1. BAD ONE: for each cell on the constructor set $this->_parent as _clone_ of the instance $parent. (will take a lot of memory, and will lose the ability of really get to the parent).\n2. GOOD ONE: set the coordinate of the cell as new private parameter, and change getCoordinate/Row/Column (and maybe some more functions) to read from that parameter.\n\nPlease add your input.\n\nThanks,\nEli\n. Hi,\n\nI hadn't got to the root cause of the bug (yet), but it seems a very bad approach to use the save function twice with changes between them. the $writer instance has been \"dirty\" by the first save, and there is no garbage collector to clean it up.\n\nAnyway, I can't see any \"good\" output.\nIn any \"clean\" run I hadn't get the right cell to be bordered :(\nDo you have a working code (with the last commit?)\n. Good!\nI'm closing this issue.\n. fixes #278 \n. this bug backtrace:\n#0  PHPExcel_CachedObjectStorage_MemoryGZip->_storeData() called at [C:\\Users\\eplaut\\Documents\\php\\PHPExcel-develop\\Classes\\PHPExcel\\CachedObjectStorage\\MemoryGZip.php:91]\n#1  PHPExcel_CachedObjectStorage_MemoryGZip->getCacheData(A1) called at [C:\\Users\\eplaut\\Documents\\php\\PHPExcel-develop\\Classes\\PHPExcel\\Worksheet.php:2552]\n#2  PHPExcel_Worksheet->garbageCollect() called at [C:\\Users\\eplaut\\Documents\\php\\PHPExcel-develop\\Classes\\PHPExcel.php:1121]\n#3  PHPExcel->garbageCollect() called at [C:\\Users\\eplaut\\Documents\\php\\PHPExcel-develop\\Classes\\PHPExcel\\Writer\\HTML.php:153]\n#4  PHPExcel_Writer_HTML->save(C:\\Users\\eplaut\\Documents\\php\\PHPExcel-develop\\Bugs/input1_Sheet1.html) called at [C:\\Users\\eplaut\\Documents\\php\\PHPExcel-develop\\Bugs\\bug_193.php:45]\n\nThe garbageCollect creates new PHPExcel_CachedObjectStorage_MemoryGZip class, instead of using the existing one.\nThe default value of $_currentCellIsDirty is \"true\" but $_currentObject in not set. so there is no option to deatach it.\nThe easy way is to change the default value to \"false\", but I don't know the reason it set to true.\n. Hi,\n\ndone some research here.\nThe problem is cell->getCoordinate() using the cache, which is shared to all cells (it is actually part of $cell->_parent which is the worksheet itself)\nmeaning while generating the rows cell (Writer_HTML:430-436) the \"pointer\" of the current row is progressing to the last cell in the row. later (at Writer_HTML->_generateRow()) when trying $cell->getCalculateValue() (line 1174) it always get the calculate value from the last cell.\n\nthere are two solutions:\n1. BAD ONE: for each cell on the constructor set $this->_parent as _clone_ of the instance $parent. (will take a lot of memory, and will lose the ability of really get to the parent).\n2. GOOD ONE: set the coordinate of the cell as new private parameter, and change getCoordinate/Row/Column (and maybe some more functions) to read from that parameter.\n\nPlease add your input.\n\nThanks,\nEli\n. Hi,\n\nI hadn't got to the root cause of the bug (yet), but it seems a very bad approach to use the save function twice with changes between them. the $writer instance has been \"dirty\" by the first save, and there is no garbage collector to clean it up.\n\nAnyway, I can't see any \"good\" output.\nIn any \"clean\" run I hadn't get the right cell to be bordered :(\nDo you have a working code (with the last commit?)\n. Good!\nI'm closing this issue.\n. fixes #278 \n. ",
    "showcasefloyd": "Thanks for the feedback. But I posted this issue a while ago and was able to fix it by massaging the data with PHP.\n. Thanks for the feedback. But I posted this issue a while ago and was able to fix it by massaging the data with PHP.\n. ",
    "jebbench": "To get this fix in composer I used the line below in my require block; not 100% sure its the correct thing to do but it works.\n\n\"phpoffice/phpexcel\": \"dev-develop_1.7.9 as 1.7.9-dev\"\n. It looks like the filters may already exist in PHP; I'll try to get this working and report back :-)\nhttp://www.practicalweb.co.uk/blog/08/05/18/reading-unicode-excel-file-php\n. To get this fix in composer I used the line below in my require block; not 100% sure its the correct thing to do but it works.\n\n\"phpoffice/phpexcel\": \"dev-develop_1.7.9 as 1.7.9-dev\"\n. It looks like the filters may already exist in PHP; I'll try to get this working and report back :-)\nhttp://www.practicalweb.co.uk/blog/08/05/18/reading-unicode-excel-file-php\n. ",
    "donatj": "Looks like you indented with spaces and they use tabs.  Probably want to resolve that.\n. Looks like you indented with spaces and they use tabs.  Probably want to resolve that.\n. ",
    "daver182": "I understand but, why I see strpos('<', $data) in the source?. So '<' is the haystack and $data is the needle, it should be $data the haystack and '<' the needle, because you search the needle in the haystack, strpos($data, '<')\n. I understand but, why I see strpos('<', $data) in the source?. So '<' is the haystack and $data is the needle, it should be $data the haystack and '<' the needle, because you search the needle in the haystack, strpos($data, '<')\n. ",
    "cifren": "I added require_once but I'm not sure if it will work, i use those files with namespace in Symfony2, so I'm not an expert with autoloader. Everything is already done in Sf2, hihi :)\n. I didn't know about 'rowspan and colspan are used together'... and for the issue with Excel 2010, i think i generated files via Excel5 writer and the message diseappeared (if we talk about the same message, 'verify if the file is not corrupted...', same message when you try to open a html file with excel2010).\n\nI'm sorry but i can't modify anymore because i got rid of phpExcel in our project, it was too slow almost 60sec for apply style and write a file with 1 600 lines. Now i'm creating directly XML files for Excel.\n\nI thought it was a better idea to send you the code to improve it, instead of throw it away. ;)\n\n(i'm sorry i also reformated all the code with netbeans... hard merge...)\n. I added require_once but I'm not sure if it will work, i use those files with namespace in Symfony2, so I'm not an expert with autoloader. Everything is already done in Sf2, hihi :)\n. I didn't know about 'rowspan and colspan are used together'... and for the issue with Excel 2010, i think i generated files via Excel5 writer and the message diseappeared (if we talk about the same message, 'verify if the file is not corrupted...', same message when you try to open a html file with excel2010).\n\nI'm sorry but i can't modify anymore because i got rid of phpExcel in our project, it was too slow almost 60sec for apply style and write a file with 1 600 lines. Now i'm creating directly XML files for Excel.\n\nI thought it was a better idea to send you the code to improve it, instead of throw it away. ;)\n\n(i'm sorry i also reformated all the code with netbeans... hard merge...)\n. ",
    "bbrdaric": "Very nice work, @cifren!\n\nI have cloned your repo and put down one [test sample](http://html-tables.com/) to check how it works.\nIt seems that rowspan and colspan work fine when alone, but there is a problem when rowspan and colspan are used together.\n\nConsider this table\n\n```\n<table>\n    <tr>\n        <td colspan=\"5\">1</td>\n        <td>2</td>\n        <td>3</td>\n        <td>4</td>\n        <td>5</td>\n        <td>6</td>\n    </tr>\n    <tr>\n        <td colspan=\"5\" rowspan=\"2\">7</td>\n        <td>8</td>\n        <td>9</td>\n        <td>10</td>\n        <td>11</td>\n        <td>12</td>\n    </tr>\n    <tr>\n        <td>13</td>\n        <td>14</td>\n        <td>15</td>\n        <td>16</td>\n        <td>17</td>\n    </tr>\n    <tr>\n        <td rowspan=\"2\">18</td>\n        <td>19</td>\n        <td rowspan=\"2\">20</td>\n        <td>21</td>\n        <td rowspan=\"2\">22</td>\n        <td>23</td>\n        <td rowspan=\"2\">24</td>\n        <td>25</td>\n        <td rowspan=\"2\">26</td>\n        <td>27</td>\n    </tr>\n    <tr>\n        <td>28</td>\n        <td>29</td>\n        <td>30</td>\n        <td>31</td>\n        <td>32</td>\n    </tr>\n</table>\n```\n\n![test-table](https://f.cloud.github.com/assets/1290335/678719/e1907a3c-d941-11e2-9b92-a559f8e102a8.png)\n\n![result-table](https://f.cloud.github.com/assets/1290335/678722/fdcd202e-d941-11e2-8726-665c41dfb992.png)\n\nAs you can see, first and third row are okay, but second row isn't. `B3:F3` needs to be moved to `F3:J3` and `A2:B3` needs to be merged to become `A2:E3`.\nAlso, Excel 2010 complains about unreadable content when opening generated file.\n. Yes, this whole regex could all go to advanced value binder.\n\nI see there are comma separated format number constants in `NumberFormat.php`, but these are not used anywhere.\n\nNumberFormat.php\n\n``` php\nconst FORMAT_NUMBER_COMMA_SEPARATED1    = '#,##0.00';\nconst FORMAT_NUMBER_COMMA_SEPARATED2    = '#,##0.00_-';\n```\n\nOn the other hand, these are all valid numeric types \n- 5\n- .5\n- 5.5\n- ,5\n- 5,5\n- \u00b75\n- 5\u00b75\n\nI am just not sure if Excel supports raised dot symbol \"\u00b7\".\n\nIt just depends on Excel (Windows) Region and Language settings (Number format) so for reading HTML it may be good to support some Localization parameter / setting like element [lang attribute](http://www.w3.org/TR/html401/struct/dirlang.html).\n. Very nice work, @cifren!\n\nI have cloned your repo and put down one [test sample](http://html-tables.com/) to check how it works.\nIt seems that rowspan and colspan work fine when alone, but there is a problem when rowspan and colspan are used together.\n\nConsider this table\n\n```\n<table>\n    <tr>\n        <td colspan=\"5\">1</td>\n        <td>2</td>\n        <td>3</td>\n        <td>4</td>\n        <td>5</td>\n        <td>6</td>\n    </tr>\n    <tr>\n        <td colspan=\"5\" rowspan=\"2\">7</td>\n        <td>8</td>\n        <td>9</td>\n        <td>10</td>\n        <td>11</td>\n        <td>12</td>\n    </tr>\n    <tr>\n        <td>13</td>\n        <td>14</td>\n        <td>15</td>\n        <td>16</td>\n        <td>17</td>\n    </tr>\n    <tr>\n        <td rowspan=\"2\">18</td>\n        <td>19</td>\n        <td rowspan=\"2\">20</td>\n        <td>21</td>\n        <td rowspan=\"2\">22</td>\n        <td>23</td>\n        <td rowspan=\"2\">24</td>\n        <td>25</td>\n        <td rowspan=\"2\">26</td>\n        <td>27</td>\n    </tr>\n    <tr>\n        <td>28</td>\n        <td>29</td>\n        <td>30</td>\n        <td>31</td>\n        <td>32</td>\n    </tr>\n</table>\n```\n\n![test-table](https://f.cloud.github.com/assets/1290335/678719/e1907a3c-d941-11e2-9b92-a559f8e102a8.png)\n\n![result-table](https://f.cloud.github.com/assets/1290335/678722/fdcd202e-d941-11e2-8726-665c41dfb992.png)\n\nAs you can see, first and third row are okay, but second row isn't. `B3:F3` needs to be moved to `F3:J3` and `A2:B3` needs to be merged to become `A2:E3`.\nAlso, Excel 2010 complains about unreadable content when opening generated file.\n. Yes, this whole regex could all go to advanced value binder.\n\nI see there are comma separated format number constants in `NumberFormat.php`, but these are not used anywhere.\n\nNumberFormat.php\n\n``` php\nconst FORMAT_NUMBER_COMMA_SEPARATED1    = '#,##0.00';\nconst FORMAT_NUMBER_COMMA_SEPARATED2    = '#,##0.00_-';\n```\n\nOn the other hand, these are all valid numeric types \n- 5\n- .5\n- 5.5\n- ,5\n- 5,5\n- \u00b75\n- 5\u00b75\n\nI am just not sure if Excel supports raised dot symbol \"\u00b7\".\n\nIt just depends on Excel (Windows) Region and Language settings (Number format) so for reading HTML it may be good to support some Localization parameter / setting like element [lang attribute](http://www.w3.org/TR/html401/struct/dirlang.html).\n. ",
    "ericpedia": "Any idea if this can be fixed?\n\nEdit: I interpreted the Travis build fail as meaning @MarkBaker's fix was not merged, but maybe I misread that?\n. Any idea if this can be fixed?\n\nEdit: I interpreted the Travis build fail as meaning @MarkBaker's fix was not merged, but maybe I misread that?\n. ",
    "s21825": "In OpenOffice is says \"Microsoft Excel 2007/2010 XML Format\" is the current type. I'll have to check what Excel says when I get back to my Windows box.\n. I've just checked on Excel 2010 and the default save as type is \"Excel Workbook\" for the file.\n. In case it helps, here are the warnings etc that come up when I try to import as Excel2007 directly instead of using PHPExcel_IOFactory::identify() to determine the type:\n\nWarning (2): ZipArchive::getFromName(): Invalid or unitialized Zip object [APP/Vendor/PHPExcel/Classes/PHPExcel/Reader/Excel2007.php, line 428]\nWarning (2): ZipArchive::getFromName() [http://php.net/ziparchive.getfromname]: Invalid or unitialized Zip object [APP/Vendor/PHPExcel/Classes/PHPExcel/Reader/Excel2007.php, line 431]\nNotice (8): Trying to get property of non-object [APP/Vendor/PHPExcel/Classes/PHPExcel/Reader/Excel2007.php, line 502]\nWarning (2): Invalid argument supplied for foreach() [APP/Vendor/PHPExcel/Classes/PHPExcel/Reader/Excel2007.php, line 502]\nWarning (2): ZipArchive::getFromName() [http://php.net/ziparchive.getfromname]: Invalid or unitialized Zip object [APP/Vendor/PHPExcel/Classes/PHPExcel/Reader/Excel2007.php, line 428]\nWarning (2): ZipArchive::getFromName() [http://php.net/ziparchive.getfromname]: Invalid or unitialized Zip object [APP/Vendor/PHPExcel/Classes/PHPExcel/Reader/Excel2007.php, line 431]\nNotice (8): Trying to get property of non-object [APP/Vendor/PHPExcel/Classes/PHPExcel/Reader/Excel2007.php, line 539]\nWarning (2): Invalid argument supplied for foreach() [APP/Vendor/PHPExcel/Classes/PHPExcel/Reader/Excel2007.php, line 539]\nWarning (2): ZipArchive::close() [http://php.net/ziparchive.close]: Invalid or unitialized Zip object [APP/Vendor/PHPExcel/Classes/PHPExcel/Reader/Excel2007.php, line 1839]\n. Thanks Mark. Here is the link:\n\nhttps://www.codeplex.com/Download/AttachmentDownload.ashx?ProjectName=phpexcel&WorkItemId=10749&FileAttachmentId=7040\n\nI really appreciate your help with this!\n. Thanks Mark! That makes sense.\n\nI understand adding support for a whole new format may be a large undertaking. Do you have any thoughts on how someone could detect this format with PHP and then take appropriate action?\n\nIt would be awesome if the PHPExcel_IOFactory::identify() method could detect that format and maybe PHPExcel_IOFactory::createReader() could throw an \"Unsupported type\" exception or something if someone tries to create a reader for that format.\n\nCould you direct me to the documentation of that binary file type?\n. In OpenOffice is says \"Microsoft Excel 2007/2010 XML Format\" is the current type. I'll have to check what Excel says when I get back to my Windows box.\n. I've just checked on Excel 2010 and the default save as type is \"Excel Workbook\" for the file.\n. In case it helps, here are the warnings etc that come up when I try to import as Excel2007 directly instead of using PHPExcel_IOFactory::identify() to determine the type:\n\nWarning (2): ZipArchive::getFromName(): Invalid or unitialized Zip object [APP/Vendor/PHPExcel/Classes/PHPExcel/Reader/Excel2007.php, line 428]\nWarning (2): ZipArchive::getFromName() [http://php.net/ziparchive.getfromname]: Invalid or unitialized Zip object [APP/Vendor/PHPExcel/Classes/PHPExcel/Reader/Excel2007.php, line 431]\nNotice (8): Trying to get property of non-object [APP/Vendor/PHPExcel/Classes/PHPExcel/Reader/Excel2007.php, line 502]\nWarning (2): Invalid argument supplied for foreach() [APP/Vendor/PHPExcel/Classes/PHPExcel/Reader/Excel2007.php, line 502]\nWarning (2): ZipArchive::getFromName() [http://php.net/ziparchive.getfromname]: Invalid or unitialized Zip object [APP/Vendor/PHPExcel/Classes/PHPExcel/Reader/Excel2007.php, line 428]\nWarning (2): ZipArchive::getFromName() [http://php.net/ziparchive.getfromname]: Invalid or unitialized Zip object [APP/Vendor/PHPExcel/Classes/PHPExcel/Reader/Excel2007.php, line 431]\nNotice (8): Trying to get property of non-object [APP/Vendor/PHPExcel/Classes/PHPExcel/Reader/Excel2007.php, line 539]\nWarning (2): Invalid argument supplied for foreach() [APP/Vendor/PHPExcel/Classes/PHPExcel/Reader/Excel2007.php, line 539]\nWarning (2): ZipArchive::close() [http://php.net/ziparchive.close]: Invalid or unitialized Zip object [APP/Vendor/PHPExcel/Classes/PHPExcel/Reader/Excel2007.php, line 1839]\n. Thanks Mark. Here is the link:\n\nhttps://www.codeplex.com/Download/AttachmentDownload.ashx?ProjectName=phpexcel&WorkItemId=10749&FileAttachmentId=7040\n\nI really appreciate your help with this!\n. Thanks Mark! That makes sense.\n\nI understand adding support for a whole new format may be a large undertaking. Do you have any thoughts on how someone could detect this format with PHP and then take appropriate action?\n\nIt would be awesome if the PHPExcel_IOFactory::identify() method could detect that format and maybe PHPExcel_IOFactory::createReader() could throw an \"Unsupported type\" exception or something if someone tries to create a reader for that format.\n\nCould you direct me to the documentation of that binary file type?\n. ",
    "SheetJSDev": "@MarkBaker xlsb is a zipped collection of files, some of which are binary (but some elements, as specified by OPC, are still xml).  It shouldn't be _too_ hard to translate most of the xml logic (and rip the rest from xls).\n\n@s21825 [MS-XLSB] is the spec you are looking for.  It's a much easier read if you go through [MS-XLS] and ECMA-376 first, as it ends up drawing concepts from both: for example, formulae are represented as Ptgs like in XLS but the actual worksheet elements seem to match XLSX more closely\n. @wmwmwm @Niggler we've received similar reports with files generated by this library.  It's hard to say who is at fault since PHPExcel exploits nonconforming behavior that excel permits but technically is wrong.  On the one hand, PHPExcel probably should be fixed, but on the other hand the library that reads files should also be fixed.\n\nBasically, the BIFF5/BIFF8 excel files are really CFB containers where each file is a linked list of data blocks (each block contains a pointer to the next block).  I haven't looked into how PHPExcel decides to write the blocks, but it appears that there are chunks \"before the file\" pointing to the file.  The conformant way of deciding the blocks for the files is to start at the directory sector, follow the chunks, then start at the next free block and proceed.  However, in the case of blocks that appear logically before the start of the file, that process is not valid.  In this case, the file actually starts at block 3 but the chain logically starts at block 1 (so the maximal chain in the container is 1 -> 2 -> 3 -> 4 -> ... -> 166 -> 167 -> EOF but the directory claims that the file is 3 -> 4 -> 5 -> ... -> 167 -> EOF).  To fix the writer, the block should start at the logical beginning of the file rather than somewhere in the middle.\n\nTechnically this is not a valid file (for example, XLRD will fail), but since Excel parses it one could argue that the parser needs to be fixed.\n\n@sjmachin @cjw296 @Niggler I think this is also related to https://github.com/python-excel/xlrd/issues/66 .  runxlrd.py throws the error `CompDocError: Workbook corruption: seen[3] == 4` which appears to be the same class of problem as the aforementioned issue.  XLRD probably should rebuild the file structure in this case.  \n. @cjw296 I'd agree if the files in question could not be opened, but if Excel opens the file without breaking a sweat, it's hard to say if PHPExcel is truly doing something wrong or if it is exploiting a corner case that a competent parser should handle.\n. @MarkBaker xlsb is a zipped collection of files, some of which are binary (but some elements, as specified by OPC, are still xml).  It shouldn't be _too_ hard to translate most of the xml logic (and rip the rest from xls).\n\n@s21825 [MS-XLSB] is the spec you are looking for.  It's a much easier read if you go through [MS-XLS] and ECMA-376 first, as it ends up drawing concepts from both: for example, formulae are represented as Ptgs like in XLS but the actual worksheet elements seem to match XLSX more closely\n. @wmwmwm @Niggler we've received similar reports with files generated by this library.  It's hard to say who is at fault since PHPExcel exploits nonconforming behavior that excel permits but technically is wrong.  On the one hand, PHPExcel probably should be fixed, but on the other hand the library that reads files should also be fixed.\n\nBasically, the BIFF5/BIFF8 excel files are really CFB containers where each file is a linked list of data blocks (each block contains a pointer to the next block).  I haven't looked into how PHPExcel decides to write the blocks, but it appears that there are chunks \"before the file\" pointing to the file.  The conformant way of deciding the blocks for the files is to start at the directory sector, follow the chunks, then start at the next free block and proceed.  However, in the case of blocks that appear logically before the start of the file, that process is not valid.  In this case, the file actually starts at block 3 but the chain logically starts at block 1 (so the maximal chain in the container is 1 -> 2 -> 3 -> 4 -> ... -> 166 -> 167 -> EOF but the directory claims that the file is 3 -> 4 -> 5 -> ... -> 167 -> EOF).  To fix the writer, the block should start at the logical beginning of the file rather than somewhere in the middle.\n\nTechnically this is not a valid file (for example, XLRD will fail), but since Excel parses it one could argue that the parser needs to be fixed.\n\n@sjmachin @cjw296 @Niggler I think this is also related to https://github.com/python-excel/xlrd/issues/66 .  runxlrd.py throws the error `CompDocError: Workbook corruption: seen[3] == 4` which appears to be the same class of problem as the aforementioned issue.  XLRD probably should rebuild the file structure in this case.  \n. @cjw296 I'd agree if the files in question could not be opened, but if Excel opens the file without breaking a sweat, it's hard to say if PHPExcel is truly doing something wrong or if it is exploiting a corner case that a competent parser should handle.\n. ",
    "savdeep": "@MarkBaker @s21825 @SheetJSDev , hey, may i know that did we added support for xlsb in phpexcel? \n. @MarkBaker @s21825 @SheetJSDev , hey, may i know that did we added support for xlsb in phpexcel? \n. ",
    "px751": "up, any ETA for phpExcel supporting XLSB? :+1: \n. up, any ETA for phpExcel supporting XLSB? :+1: \n. ",
    "kordosoft": "simple answer: depends of your operating system ...\nround on linux return down when is .5 to 0 and windows return up to 1\n. I noticed this also... but not in this context... anway the quickest solution that worked for me was a custom round function:\n\nfunction mround($number, $precision=0) { \n\n```\n$precision = ($precision == 0 ? 1 : $precision);       \n\n$pow = pow(10, $precision); \n\n$ceil = ceil($number * $pow)/$pow; \n$floor = floor($number * $pow)/$pow; \n\n$pow = pow(10, $precision+1); \n\n$diffCeil     = $pow*($ceil-$number); \n$diffFloor     = $pow*($number-$floor)+($number < 0 ? -1 : 1); \n\nif($diffCeil >= $diffFloor) \n    $rez=$floor;\nelse \n    $rez=$ceil;\n$rez=number_format($rez,$precision,\".\",\"\");\nreturn $rez;\n```\n\n} \n\ncase round\nr: 68.35!return response 2.0980834960938E-5\ncase mround\nr: 68.35!return response 3.0994415283203E-5\n. simple answer: depends of your operating system ...\nround on linux return down when is .5 to 0 and windows return up to 1\n. I noticed this also... but not in this context... anway the quickest solution that worked for me was a custom round function:\n\nfunction mround($number, $precision=0) { \n\n```\n$precision = ($precision == 0 ? 1 : $precision);       \n\n$pow = pow(10, $precision); \n\n$ceil = ceil($number * $pow)/$pow; \n$floor = floor($number * $pow)/$pow; \n\n$pow = pow(10, $precision+1); \n\n$diffCeil     = $pow*($ceil-$number); \n$diffFloor     = $pow*($number-$floor)+($number < 0 ? -1 : 1); \n\nif($diffCeil >= $diffFloor) \n    $rez=$floor;\nelse \n    $rez=$ceil;\n$rez=number_format($rez,$precision,\".\",\"\");\nreturn $rez;\n```\n\n} \n\ncase round\nr: 68.35!return response 2.0980834960938E-5\ncase mround\nr: 68.35!return response 3.0994415283203E-5\n. ",
    "IndrekHaav": "Added another commit - fix for an issue originally reported here on Codeplex:\nhttp://phpexcel.codeplex.com/workitem/15884\n\nBasically, when a cell references another cell in a worksheet whose name begins with a digit, PHPExcel mistakenly identifies that reference as a numeric value, and the rest of the reference causes an error. This is because the more general `CALCULATION_REGEXP_NUMBER` pattern is checked before the more specific `CALCULATION_REGEXP_CELLREF` pattern. By simply moving the latter before the former, the references are resolved correctly.\n. Added another commit - fix for an issue originally reported here on Codeplex:\nhttp://phpexcel.codeplex.com/workitem/15884\n\nBasically, when a cell references another cell in a worksheet whose name begins with a digit, PHPExcel mistakenly identifies that reference as a numeric value, and the rest of the reference causes an error. This is because the more general `CALCULATION_REGEXP_NUMBER` pattern is checked before the more specific `CALCULATION_REGEXP_CELLREF` pattern. By simply moving the latter before the former, the references are resolved correctly.\n. ",
    "matthiaz": "@samuelgmartins \nI've tried out your code change, but this does **not** seem to fix the SUBTOTAL problem. \nTip: You might want to check out https://help.github.com/articles/creating-a-pull-request/ because this makes it a lot easier for a maintainer to review and merge your code changes.\n\nTo clarify the problem: \nSUBTOTAL(9,A1:A100) should SUM all items in the range A1:A100 except the cells that contain a SUBTOTAL formula themselves. \n\nPHPExcel does not ignore those SUBTOTALS making the grand total general twice as big. You can work around this by using setPreCalculateFormulas(false), but that isn't always a viable option.\n\nI wouldn't classify this as an Enhancement, it looks like a bug. I tried delving into the code myself, but I'm way over my head.\nMy understanding of the subject is that SUBTOTAL is calculated in **MathTrig**. When you use SUBTOTAL(9, ... ) it means SUM. \nPHPExcel processes this by linking straight to the MathTrig SUM function. So SUBTOTAL(9, is then an alias of SUM. See: https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Calculation/MathTrig.php#L1141\n\nUnfortunatly, SUBTOTAL(9,  does not work exactly the way SUM does. SUM does not ignore SUBTOTAL formulas, while SUBTOTAL itself, should.\n. @samuelgmartins \nI've tried out your code change, but this does **not** seem to fix the SUBTOTAL problem. \nTip: You might want to check out https://help.github.com/articles/creating-a-pull-request/ because this makes it a lot easier for a maintainer to review and merge your code changes.\n\nTo clarify the problem: \nSUBTOTAL(9,A1:A100) should SUM all items in the range A1:A100 except the cells that contain a SUBTOTAL formula themselves. \n\nPHPExcel does not ignore those SUBTOTALS making the grand total general twice as big. You can work around this by using setPreCalculateFormulas(false), but that isn't always a viable option.\n\nI wouldn't classify this as an Enhancement, it looks like a bug. I tried delving into the code myself, but I'm way over my head.\nMy understanding of the subject is that SUBTOTAL is calculated in **MathTrig**. When you use SUBTOTAL(9, ... ) it means SUM. \nPHPExcel processes this by linking straight to the MathTrig SUM function. So SUBTOTAL(9, is then an alias of SUM. See: https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Calculation/MathTrig.php#L1141\n\nUnfortunatly, SUBTOTAL(9,  does not work exactly the way SUM does. SUM does not ignore SUBTOTAL formulas, while SUBTOTAL itself, should.\n. ",
    "CaporalDead": "Duplicate, sry. > #223 \n. Duplicate, sry. > #223 \n. ",
    "omicode": "I try your method to save html table with cyrillic to xsl, but cyrillic word is broken.\n\n```\n    $table = $this->displayTable($rows);\n    $tmpfile = tempnam(sys_get_temp_dir(), \"html\");\n    file_put_contents($tmpfile, $table);\n```\n\ntry {\n        $excelHTMLReader = PHPExcel_IOFactory::createReader(\"HTML\");\n        // Set active sheet index to the first sheet, so Excel opens this as the first sheet\n        $excelHTMLReader->setReadDataOnly(false);\n        $objPHPExcel = $excelHTMLReader->load($tmpfile);\n} catch (Exception $e) {\n   die ('ERROR: ' . $e->getMessage());\n}\n\n```\n    $objPHPExcel->getProperties()->setCreator(\"BPage 2.0\")\n                                 ->setLastModifiedBy(\"BPage 2.0\")\n                                 ->setTitle($title);\n\n    // Rename worksheet\n    $objPHPExcel->getActiveSheet()->setTitle($title);\n\n    unlink($tmpfile);\n\n    if ($outputType == \"Excel5\") {\n        // Redirect output to a client\u2019s web browser (Excel5)\n        header(\"Content-Type: application/vnd.ms-excel\");\n        header(\"Content-Disposition: attachment;filename=\\\"rep-\".today(DATE_BG).\".xls\\\"\");\n    } else {\n        // Redirect output to a client\u2019s web browser (Excel2007)\n        header(\"Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet; charset=UTF-8;\"); // charset=UTF-8\n        header(\"Content-Disposition: attachment;filename=\\\"rep-\".today(DATE_BG).\".xlsx\\\"\");\n    }\n    header('Cache-Control: max-age=0');\n    header('Cache-Control: max-age=1');\n    header('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past\n    header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT'); // always modified\n    header('Cache-Control: cache, must-revalidate'); // HTTP/1.1\n    header('Pragma: public'); // HTTP/1.0\n\n    $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, $outputType);\n    $objWriter->save('php://output');\n```\n\nHow resolve my problem\nin Render/HTML.php\nreplase\n        $loaded = $dom->loadHTML($this->securityScanFile($pFilename));\nwith\n        $loaded = $dom->loadHTML(mb_convert_encoding($this->securityScanFile($pFilename), 'HTML-ENTITIES', 'UTF-8'));\nand all work correct.\n. I try your method to save html table with cyrillic to xsl, but cyrillic word is broken.\n\n```\n    $table = $this->displayTable($rows);\n    $tmpfile = tempnam(sys_get_temp_dir(), \"html\");\n    file_put_contents($tmpfile, $table);\n```\n\ntry {\n        $excelHTMLReader = PHPExcel_IOFactory::createReader(\"HTML\");\n        // Set active sheet index to the first sheet, so Excel opens this as the first sheet\n        $excelHTMLReader->setReadDataOnly(false);\n        $objPHPExcel = $excelHTMLReader->load($tmpfile);\n} catch (Exception $e) {\n   die ('ERROR: ' . $e->getMessage());\n}\n\n```\n    $objPHPExcel->getProperties()->setCreator(\"BPage 2.0\")\n                                 ->setLastModifiedBy(\"BPage 2.0\")\n                                 ->setTitle($title);\n\n    // Rename worksheet\n    $objPHPExcel->getActiveSheet()->setTitle($title);\n\n    unlink($tmpfile);\n\n    if ($outputType == \"Excel5\") {\n        // Redirect output to a client\u2019s web browser (Excel5)\n        header(\"Content-Type: application/vnd.ms-excel\");\n        header(\"Content-Disposition: attachment;filename=\\\"rep-\".today(DATE_BG).\".xls\\\"\");\n    } else {\n        // Redirect output to a client\u2019s web browser (Excel2007)\n        header(\"Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet; charset=UTF-8;\"); // charset=UTF-8\n        header(\"Content-Disposition: attachment;filename=\\\"rep-\".today(DATE_BG).\".xlsx\\\"\");\n    }\n    header('Cache-Control: max-age=0');\n    header('Cache-Control: max-age=1');\n    header('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past\n    header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT'); // always modified\n    header('Cache-Control: cache, must-revalidate'); // HTTP/1.1\n    header('Pragma: public'); // HTTP/1.0\n\n    $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, $outputType);\n    $objWriter->save('php://output');\n```\n\nHow resolve my problem\nin Render/HTML.php\nreplase\n        $loaded = $dom->loadHTML($this->securityScanFile($pFilename));\nwith\n        $loaded = $dom->loadHTML(mb_convert_encoding($this->securityScanFile($pFilename), 'HTML-ENTITIES', 'UTF-8'));\nand all work correct.\n. ",
    "loki36": "I 'm at your service for changes needed for a merge\n. I 'm at your service for changes needed for a merge\n. ",
    "shalinibajjuri": "Thanks for reply. But getting error at this line\n $cellData .= '<span style=\"' . $this->_assembleCSS($this->_createCSSStyleFont($element->getFont())) . '\">';\n\nwhat does $this represents?\n. $this should be as instant of some class ... \n$this is not defined.\n. Thanks for reply. But getting error at this line\n $cellData .= '<span style=\"' . $this->_assembleCSS($this->_createCSSStyleFont($element->getFont())) . '\">';\n\nwhat does $this represents?\n. $this should be as instant of some class ... \n$this is not defined.\n. ",
    "keshavtest": "How to read formatted text form Excel Column?In My Excel some part of text may be in bold,\n\nThanks in advanced.\n. How to read formatted text form Excel Column?In My Excel some part of text may be in bold,\n\nThanks in advanced.\n. ",
    "jackbraj": "@keshavtest  MarkBaker method works just fine, What problem do you have exactly?\n. @keshavtest  MarkBaker method works just fine, What problem do you have exactly?\n. ",
    "dbykadorov": "<del>I have same problem, in Excel file cell looks formatted (http://joxi.ru/L21jlX6F6Xp13A) but `$cell->getValue()` returns a string. Also `getType()` method returns 's' value (string). Is this problem of source excel file or this is a problem of my code?</del>\n\nSorry for dumb question. I simply load a file without formatting:\n\n``` php\n        /** @var \\PHPExcel_Reader_Excel2007 $objReader */\n        $objReader = \\PHPExcel_IOFactory::createReader($inputFileType);\n        $objReader->setReadDataOnly(true);\n```\n\nI just needed to call `$objReader->setReadDataOnly(false)` to get cells with formatting\n. <del>I have same problem, in Excel file cell looks formatted (http://joxi.ru/L21jlX6F6Xp13A) but `$cell->getValue()` returns a string. Also `getType()` method returns 's' value (string). Is this problem of source excel file or this is a problem of my code?</del>\n\nSorry for dumb question. I simply load a file without formatting:\n\n``` php\n        /** @var \\PHPExcel_Reader_Excel2007 $objReader */\n        $objReader = \\PHPExcel_IOFactory::createReader($inputFileType);\n        $objReader->setReadDataOnly(true);\n```\n\nI just needed to call `$objReader->setReadDataOnly(false)` to get cells with formatting\n. ",
    "jazeabby": "```\r\nif(!isset($cellData))\r\n                    $cellData = (string)\" \";\r\n```\r\nadd this before after foreach loop of elements, it will remove the error.\r\n. ```\r\nif(!isset($cellData))\r\n                    $cellData = (string)\" \";\r\n```\r\nadd this before after foreach loop of elements, it will remove the error.\r\n. ",
    "FrankAlexander": "Mmm...using dev-master via composer, updated this week but the issue is still in the branch...\n. Ok, thanks anyway. I also found the \"original\" ticket on git with this duplicate issue (#199).\n. Mmm...using dev-master via composer, updated this week but the issue is still in the branch...\n. Ok, thanks anyway. I also found the \"original\" ticket on git with this duplicate issue (#199).\n. ",
    "fridolin-koch": "I'm using the Excel2007 writer\n\n``` php\n\\PHPExcel_IOFactory::createWriter($document, 'Excel2007')\n```\n\nI've tried it form scratch and with an existing document but neither works. Further I figured out that the last value passed to `setFormatCode()` is used for all fields. \n\nThe whole loop looks like:\n\n``` php\nforeach ($data as $rowIndex => $row) {\n\n    foreach ($row as $columnIndex => $column) {\n\n        $sheet->setCellValue($columnIndex.$rowIndex, $column);\n\n        if ($rowIndex > 1) {\n\n            $sheet\n                ->getCell($columnIndex.$rowIndex)\n                ->getStyle()\n                ->getNumberFormat()\n                ->setFormatCode($format[$columnIndex]);\n            $sheet\n                ->getCell($columnIndex.$rowIndex)\n                ->getStyle()\n                ->getAlignment()\n                ->setHorizontal(null);\n            $sheet\n                ->getCell($columnIndex.$rowIndex)\n                ->getStyle()\n                ->getFont()\n                ->setName('Arial')\n                ->setSize(8);\n        }\n    }\n}\n```\n\nand `$data` is an 2 dimensional array:\n\n``` php\n$data[$row]['A'] = \\PHPExcel_Shared_Date::PHPToExcel($edi['822']->getAdviceOfCreditDate());\n$data[$row]['B'] = $edi['822']->getAdviceOfCreditId();\n...\n```\n. Using `$document->getActiveSheet()->getStyle()` fixed the Problem:\n\n``` php\n$document->getActiveSheet()\n    ->getStyle($columnIndex.$rowIndex)\n    ->getNumberFormat()\n    ->setFormatCode($format[$columnIndex]);\n```\n\nRegards Frido\n. I'm using the Excel2007 writer\n\n``` php\n\\PHPExcel_IOFactory::createWriter($document, 'Excel2007')\n```\n\nI've tried it form scratch and with an existing document but neither works. Further I figured out that the last value passed to `setFormatCode()` is used for all fields. \n\nThe whole loop looks like:\n\n``` php\nforeach ($data as $rowIndex => $row) {\n\n    foreach ($row as $columnIndex => $column) {\n\n        $sheet->setCellValue($columnIndex.$rowIndex, $column);\n\n        if ($rowIndex > 1) {\n\n            $sheet\n                ->getCell($columnIndex.$rowIndex)\n                ->getStyle()\n                ->getNumberFormat()\n                ->setFormatCode($format[$columnIndex]);\n            $sheet\n                ->getCell($columnIndex.$rowIndex)\n                ->getStyle()\n                ->getAlignment()\n                ->setHorizontal(null);\n            $sheet\n                ->getCell($columnIndex.$rowIndex)\n                ->getStyle()\n                ->getFont()\n                ->setName('Arial')\n                ->setSize(8);\n        }\n    }\n}\n```\n\nand `$data` is an 2 dimensional array:\n\n``` php\n$data[$row]['A'] = \\PHPExcel_Shared_Date::PHPToExcel($edi['822']->getAdviceOfCreditDate());\n$data[$row]['B'] = $edi['822']->getAdviceOfCreditId();\n...\n```\n. Using `$document->getActiveSheet()->getStyle()` fixed the Problem:\n\n``` php\n$document->getActiveSheet()\n    ->getStyle($columnIndex.$rowIndex)\n    ->getNumberFormat()\n    ->setFormatCode($format[$columnIndex]);\n```\n\nRegards Frido\n. ",
    "Doggie52": "You're certain there's absolutely no doubt the `$format[$columnIndex]` is, in every run of the loop, equal to what you think it is?\n. What's to say it's not the other way around; that `xls2csv` should be modified to be able to read XLS output by PHPExcel?\n. If not returning `true`/`false` but instead either triggering an exception or do nothing is part of some coding paradigm please let me know :) . I was unsure, and I would have needed it to return `true` in my application so I thought this may have been something overlooked, although I am not certain of this.\n. I see what you mean, but I doubt this is the right way to do things anyway so I've sort of given up hope on this request.\n. You're certain there's absolutely no doubt the `$format[$columnIndex]` is, in every run of the loop, equal to what you think it is?\n. What's to say it's not the other way around; that `xls2csv` should be modified to be able to read XLS output by PHPExcel?\n. If not returning `true`/`false` but instead either triggering an exception or do nothing is part of some coding paradigm please let me know :) . I was unsure, and I would have needed it to return `true` in my application so I thought this may have been something overlooked, although I am not certain of this.\n. I see what you mean, but I doubt this is the right way to do things anyway so I've sort of given up hope on this request.\n. ",
    "ChALkeR": "The question is: is PHPExcel supposed to manage such things or not?\n. No, it seems that I was wrong about how this is supposed to work.\nBetter look at the reference.\n. For example, PHPExcel_Writer_HTML does not merge such cells.\n. The question is: is PHPExcel supposed to manage such things or not?\n. No, it seems that I was wrong about how this is supposed to work.\nBetter look at the reference.\n. For example, PHPExcel_Writer_HTML does not merge such cells.\n. ",
    "MarcosBL": "That did the trick, thanks Mark !\n\n``` php\n$previous_precision = ini_get('precision');\necho round(68.3499,2).PHP_EOL; // Works\n$objPHPExcel = $objReader->setReadDataOnly(true)->load($inputFileName);\nini_set('precision',$previous_precision);\necho round(68.3499,2).PHP_EOL; // Works \n```\n. That did the trick, thanks Mark !\n\n``` php\n$previous_precision = ini_get('precision');\necho round(68.3499,2).PHP_EOL; // Works\n$objPHPExcel = $objReader->setReadDataOnly(true)->load($inputFileName);\nini_set('precision',$previous_precision);\necho round(68.3499,2).PHP_EOL; // Works \n```\n. ",
    "Lewiscowles1986": "or you could simply use sprintf as I do, which negates any issues with decimal places as it can be set as standard and just passed numbers....\n. btw on this, why are people using PHP floats for decimal precision??? Surely bcmath is geared towards producing more accurate results...\n. Still... do not use floating point numbers for spreadsheet numbers! Also do not follow my advices of sprintf unless you have a specific use-case...\n\nUse `bc_math` library, it's geared for this and does not involve any twiddling of php ini settings at runtime\n. Oh, I'm not sure if you missed it, the code above definitely fiddles with php precision using ini set (which AFAIK is not cacheable, and represents both bad practice, and concern if the code is run more than a few times)\n. @aleho please do not take this the wrong way, I respect that we all have our own path; but IMHO, you do not need to reproduce this bug. \n\nFirstly, it's not specifically a bug in PHPExcel, it's a side-effect of the data structures, and runtime used. I propose changing this. Secondly, there is already an external library that can mitigate this issue entirely without needing to run any new tests, maybe even being able to drop some.\n\nI Fully understand that reproducing bugs is part of the cycle of issuing fixes, and being a good developer; and that sometimes this can mean simplifying the representation to demonstrate an issue. \n\nThere are, a few select situations however (of which I am confident this represents at least two), where you can look at code, put down the tools, and issue a :warning: until the issue is resolved. \n- Floating point numbers are are problematic in terms of accuracy, and consistency\n\n**_See below**_\n\n``` php\n        $setPrecision = (PHP_INT_SIZE == 4) ? 14 : 16;\n```\n- You are modifying at runtime, the entire runtime-environment instance; for the duration of script execution, because floating-point-precision setting per-call, takes up more resources, and results in poorer performance. The problem is that you are trying to out-engineer an over-engineered solutions... Each time you address a different use-case, complexity will increase, and performance will fall; until you eventually have to settle for re-implementing an existing library. \n\nUsing `bc_math` is a drop-in for fixing this. This is my whole point.\n. @hmhofman I'm sure they would appreciate your fix submitted with tests via PR. Please do not treat this like a sweet-shop.. @MarkBaker any reason it hasn't been merged? That seems strange, like there could be issues. or you could simply use sprintf as I do, which negates any issues with decimal places as it can be set as standard and just passed numbers....\n. btw on this, why are people using PHP floats for decimal precision??? Surely bcmath is geared towards producing more accurate results...\n. Still... do not use floating point numbers for spreadsheet numbers! Also do not follow my advices of sprintf unless you have a specific use-case...\n\nUse `bc_math` library, it's geared for this and does not involve any twiddling of php ini settings at runtime\n. Oh, I'm not sure if you missed it, the code above definitely fiddles with php precision using ini set (which AFAIK is not cacheable, and represents both bad practice, and concern if the code is run more than a few times)\n. @aleho please do not take this the wrong way, I respect that we all have our own path; but IMHO, you do not need to reproduce this bug. \n\nFirstly, it's not specifically a bug in PHPExcel, it's a side-effect of the data structures, and runtime used. I propose changing this. Secondly, there is already an external library that can mitigate this issue entirely without needing to run any new tests, maybe even being able to drop some.\n\nI Fully understand that reproducing bugs is part of the cycle of issuing fixes, and being a good developer; and that sometimes this can mean simplifying the representation to demonstrate an issue. \n\nThere are, a few select situations however (of which I am confident this represents at least two), where you can look at code, put down the tools, and issue a :warning: until the issue is resolved. \n- Floating point numbers are are problematic in terms of accuracy, and consistency\n\n**_See below**_\n\n``` php\n        $setPrecision = (PHP_INT_SIZE == 4) ? 14 : 16;\n```\n- You are modifying at runtime, the entire runtime-environment instance; for the duration of script execution, because floating-point-precision setting per-call, takes up more resources, and results in poorer performance. The problem is that you are trying to out-engineer an over-engineered solutions... Each time you address a different use-case, complexity will increase, and performance will fall; until you eventually have to settle for re-implementing an existing library. \n\nUsing `bc_math` is a drop-in for fixing this. This is my whole point.\n. @hmhofman I'm sure they would appreciate your fix submitted with tests via PR. Please do not treat this like a sweet-shop.. @MarkBaker any reason it hasn't been merged? That seems strange, like there could be issues. ",
    "maliayas": "@MarkBaker Wow. Will you remove them from the source?\n. @MarkBaker Wow. Will you remove them from the source?\n. ",
    "aleho": "Adding my 2 cents: Do not set precision (or any ini values). It leads to all kinds of problems and awkward \"WTF?\" moments for users.\n\nTook us quite some time to find out what was failing us (first expected our code, then the database, then the ORM to be the culprit).\n\nSmall test case:\n\n``` php\n$float          = 5022 + 3570.21;\n$savedPrecision = ini_get('precision');\n$setPrecision   = (PHP_INT_SIZE == 4) ? 14 : 16;\n\necho \"current=$savedPrecision\\n\";          // current=14\necho $float . \"\\n\";                        // 8592.21\necho round($float, 2) . \"\\n\\n\";            // 8592.21\n\nif ($savedPrecision < $setPrecision) {\n    ini_set('precision', $setPrecision);\n}\n$iniSet = ini_get('precision');\n\necho \"set=$setPrecision, ini=$iniSet\\n\";   // set=16, ini=16\necho $float . \"\\n\";                        // 8592.209999999999\necho round($float, 2) . \"\\n\";              // 8592.209999999999\n```\n\nAs you can see in the comments, the output is completely wrong as `$float` should only be a float with 2 decimals. Obviously, a precision of 16 is too high to be handled by our x86_64 environment.\n. @Lewiscowles1986 I've never been fiddling with precision in php_ini. PHPExcel is.\nWhat I actually meant: As soon as you initialize a PHPExcel instance, code throughout your whole application may break (like adding two arbitrary numbers).\n. @Lewiscowles1986 The snippet I posted above? It's a short sample meant for reproducing the bugs we were facing. See [Calculation.php, line 2076](https://github.com/PHPOffice/PHPExcel/blob/681c30b2ea3871ba8d9e484b4400edccba377ee0/Classes/PHPExcel/Calculation.php#L2076).\n. The result of the operation `(5022 + 3570.21)` should always be `8592.21`. On 16, 32 and 64 bit systems. Float or none, we're not talking about ultra-high precision operations where errors are to be expected.\r\n\r\nIf you're using a PHP library that sets runtime so that arbitrary additions break in all code executed afterwards, this is a bug. This is not platform-specific breakage. It doesn't matter whether PHP allows you to change settings at runtime that break code. _Any_ code executed after modifying 'precision' in such a way demonstrated above will break, in any library or code you're using.\r\n\r\n`You are modifying at runtime, the entire runtime-environment instance; for the duration of script execution`\r\nNo. I'm not and we were not. PHPExcel is. Again, I'm not touching ini-settings. PHPExcel is, every time after instantiating.\r\n\r\nApart from that the code in PHPExcel is wrong anyway, the precision is set to a value that can't be satisfied correctly.\r\n. Adding my 2 cents: Do not set precision (or any ini values). It leads to all kinds of problems and awkward \"WTF?\" moments for users.\n\nTook us quite some time to find out what was failing us (first expected our code, then the database, then the ORM to be the culprit).\n\nSmall test case:\n\n``` php\n$float          = 5022 + 3570.21;\n$savedPrecision = ini_get('precision');\n$setPrecision   = (PHP_INT_SIZE == 4) ? 14 : 16;\n\necho \"current=$savedPrecision\\n\";          // current=14\necho $float . \"\\n\";                        // 8592.21\necho round($float, 2) . \"\\n\\n\";            // 8592.21\n\nif ($savedPrecision < $setPrecision) {\n    ini_set('precision', $setPrecision);\n}\n$iniSet = ini_get('precision');\n\necho \"set=$setPrecision, ini=$iniSet\\n\";   // set=16, ini=16\necho $float . \"\\n\";                        // 8592.209999999999\necho round($float, 2) . \"\\n\";              // 8592.209999999999\n```\n\nAs you can see in the comments, the output is completely wrong as `$float` should only be a float with 2 decimals. Obviously, a precision of 16 is too high to be handled by our x86_64 environment.\n. @Lewiscowles1986 I've never been fiddling with precision in php_ini. PHPExcel is.\nWhat I actually meant: As soon as you initialize a PHPExcel instance, code throughout your whole application may break (like adding two arbitrary numbers).\n. @Lewiscowles1986 The snippet I posted above? It's a short sample meant for reproducing the bugs we were facing. See [Calculation.php, line 2076](https://github.com/PHPOffice/PHPExcel/blob/681c30b2ea3871ba8d9e484b4400edccba377ee0/Classes/PHPExcel/Calculation.php#L2076).\n. The result of the operation `(5022 + 3570.21)` should always be `8592.21`. On 16, 32 and 64 bit systems. Float or none, we're not talking about ultra-high precision operations where errors are to be expected.\r\n\r\nIf you're using a PHP library that sets runtime so that arbitrary additions break in all code executed afterwards, this is a bug. This is not platform-specific breakage. It doesn't matter whether PHP allows you to change settings at runtime that break code. _Any_ code executed after modifying 'precision' in such a way demonstrated above will break, in any library or code you're using.\r\n\r\n`You are modifying at runtime, the entire runtime-environment instance; for the duration of script execution`\r\nNo. I'm not and we were not. PHPExcel is. Again, I'm not touching ini-settings. PHPExcel is, every time after instantiating.\r\n\r\nApart from that the code in PHPExcel is wrong anyway, the precision is set to a value that can't be satisfied correctly.\r\n. ",
    "atlantis": "This just bit us, too - after instantiating a single PHPExcel object, a few lines later round(85.43, 2) outputs 85.43000000000001.  I see the attempt to clean it up in the destructor, but the problem is that during the lifetime of any PHPExcel object, the state entire PHP engine is modified.  So rounding values you're feeding into PHPExcel isn't cool (once you've saved/outputted your spreadsheet and destroyed the PHPExcel object, everything's good again - but by then you're probably done processing the request anyway).\n\nInterestingly, on our particular version of PHP (5.6.14-0+deb8u1), the default precision is 14 and round() loses its :hankey: for any INI precision value greater than 15.  So for now we're just commenting out PHPExcel's modification of the precision.\n. This just bit us, too - after instantiating a single PHPExcel object, a few lines later round(85.43, 2) outputs 85.43000000000001.  I see the attempt to clean it up in the destructor, but the problem is that during the lifetime of any PHPExcel object, the state entire PHP engine is modified.  So rounding values you're feeding into PHPExcel isn't cool (once you've saved/outputted your spreadsheet and destroyed the PHPExcel object, everything's good again - but by then you're probably done processing the request anyway).\n\nInterestingly, on our particular version of PHP (5.6.14-0+deb8u1), the default precision is 14 and round() loses its :hankey: for any INI precision value greater than 15.  So for now we're just commenting out PHPExcel's modification of the precision.\n. ",
    "hmhofman": "So. It has been what? 3.6 years? Is this problem fixed already? \r\nMy database queries broke because of this error. \r\nReading the final comments are more than 1 year old, I figured this would be fixed.\r\nNot so for php 5.5.9 (Ubuntu 14.04) \r\nWait! Not for php 7.1.1 (Arch build: Jan 18 2017). As described in the commit message.\nI think it is the company logo. \n. So. It has been what? 3.6 years? Is this problem fixed already? \r\nMy database queries broke because of this error. \r\nReading the final comments are more than 1 year old, I figured this would be fixed.\r\nNot so for php 5.5.9 (Ubuntu 14.04) \r\nWait! Not for php 7.1.1 (Arch build: Jan 18 2017). As described in the commit message.\nI think it is the company logo. \n. ",
    "realtebo": "I still have the same issue, and we're at late september of 2015.\n. I've the same issue since first time I used this library and I've not found a solution.\n. I started using this project only in January of 2014, so I've not noticed this migrations alert. Also, you should close issue logging and update codeplex home page to be even more clear that source code REALLY is no more updated. In fact 1.8 version was updated also on code plex, so I was opening issues, and waiting for fixes on this site, and not here on github. \n\nNo problem. I upgraded to 1.8.1 now, from github repo.\n\nI read about breaking changes in 1.9, so can I suggest to avoid using a minor upgrade for braking changes?\n. @mdemori , @firegate666 : thanks for the idea. \n\nThis is the logged error (that was written at the very end of the .xlsx file)\n\n```\n<b>Notice</b>:  Undefined property:  PHPExcel_Calculation::$_savedPrecision in\n<b>vendor/PHPExcel/Calculation.php</b> on line <b>1743</b>\n```\n\nI'm quite sure that I've fight against this problem even in the 1.8, but actually I cannot find a track about the patch I've done to the lib. If I'll find, I'll send a PR about it.\n. See this Issue I opened in may of 2014, because I've not understand that project has been moved here yet: https://phpexcel.codeplex.com/workitem/20797\n. @MarkBaker Thanks for the honest reply.\nI totally agree with you. If something is a near totally a waste of time and memory, the task must be killed!\nI just released my code with a note for users: \"After opening the file, click on the filter icon on the column P and the order A to Z\"  \nIt has been approved, so I'm happy anyway. \nClosed.\n. I still have the same issue, and we're at late september of 2015.\n. I've the same issue since first time I used this library and I've not found a solution.\n. I started using this project only in January of 2014, so I've not noticed this migrations alert. Also, you should close issue logging and update codeplex home page to be even more clear that source code REALLY is no more updated. In fact 1.8 version was updated also on code plex, so I was opening issues, and waiting for fixes on this site, and not here on github. \n\nNo problem. I upgraded to 1.8.1 now, from github repo.\n\nI read about breaking changes in 1.9, so can I suggest to avoid using a minor upgrade for braking changes?\n. @mdemori , @firegate666 : thanks for the idea. \n\nThis is the logged error (that was written at the very end of the .xlsx file)\n\n```\n<b>Notice</b>:  Undefined property:  PHPExcel_Calculation::$_savedPrecision in\n<b>vendor/PHPExcel/Calculation.php</b> on line <b>1743</b>\n```\n\nI'm quite sure that I've fight against this problem even in the 1.8, but actually I cannot find a track about the patch I've done to the lib. If I'll find, I'll send a PR about it.\n. See this Issue I opened in may of 2014, because I've not understand that project has been moved here yet: https://phpexcel.codeplex.com/workitem/20797\n. @MarkBaker Thanks for the honest reply.\nI totally agree with you. If something is a near totally a waste of time and memory, the task must be killed!\nI just released my code with a note for users: \"After opening the file, click on the filter icon on the column P and the order A to Z\"  \nIt has been approved, so I'm happy anyway. \nClosed.\n. ",
    "nfork": "**3 YEARS AFTER** : \nI have the same **BIIIIG** bug !!\nWFT ?\n\n```\n$cacheMethod = PHPExcel_CachedObjectStorageFactory:: cache_to_phpTemp;\nPHPExcel_Settings::setCacheStorageMethod($cacheMethod, $cacheSettings);\n\n$inputFileName = 'file.xlsx';\n$inputFileType = PHPExcel_IOFactory::identify($inputFileName);\n$objReader = PHPExcel_IOFactory::createReader($inputFileType);\n$objReader->setReadDataOnly(true);\n$objReader->setLoadSheetsOnly( $worksheetSelected );\n$objPHPExcelReader = $objReader->load($inputFileName);\n\n$worksheet = $objPHPExcelReader->setActiveSheet(0);\n$worksheet->removeColumnByIndex(1, 2);\n\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcelReader, 'CSV');\n$objWriter->save('result.xlsx');\n```\n. **3 YEARS AFTER** : \nI have the same **BIIIIG** bug !!\nWFT ?\n\n```\n$cacheMethod = PHPExcel_CachedObjectStorageFactory:: cache_to_phpTemp;\nPHPExcel_Settings::setCacheStorageMethod($cacheMethod, $cacheSettings);\n\n$inputFileName = 'file.xlsx';\n$inputFileType = PHPExcel_IOFactory::identify($inputFileName);\n$objReader = PHPExcel_IOFactory::createReader($inputFileType);\n$objReader->setReadDataOnly(true);\n$objReader->setLoadSheetsOnly( $worksheetSelected );\n$objPHPExcelReader = $objReader->load($inputFileName);\n\n$worksheet = $objPHPExcelReader->setActiveSheet(0);\n$worksheet->removeColumnByIndex(1, 2);\n\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcelReader, 'CSV');\n$objWriter->save('result.xlsx');\n```\n. ",
    "Netmosfera": "well, i guess i should have read the documentation... anyway, more than likely that could have been written in a better way to fully take advantage of garbage collection, destructors etc... not suggesting or asking to change anything, but think about it ;) thank you\n. well, i guess i should have read the documentation... anyway, more than likely that could have been written in a better way to fully take advantage of garbage collection, destructors etc... not suggesting or asking to change anything, but think about it ;) thank you\n. ",
    "adamziel": "okay then it's great I guess :) \n. okay then it's great I guess :) \n. ",
    "abdulkader87": "I have same problem did you find a solution??\n. I have same problem did you find a solution??\n. ",
    "garethellis36": "I had the same issue. I have developed a workaround. In my code I am opening an existing template and writing data into it - saves time styling the spreadsheet with PHPExcel. I created an additional sheet called 'Hidden' and put cells pointing to the main, 'live' sheet within it. \nThen you just create the chart based off the hidden sheet, which should now have all the data you need in a contiguous range.\n. I had the same issue. I have developed a workaround. In my code I am opening an existing template and writing data into it - saves time styling the spreadsheet with PHPExcel. I created an additional sheet called 'Hidden' and put cells pointing to the main, 'live' sheet within it. \nThen you just create the chart based off the hidden sheet, which should now have all the data you need in a contiguous range.\n. ",
    "ComputerTinker": "@suseu , @abdulkader87 , and @garethellis36 , I just created PR #650 to fix the issue PHPExcel has with comma separated chart data source values. If you have your own fork of PHPExcel, you can merge the patch, otherwise feel free to download from https://github.com/ComputerTinker/PHPExcel, which is up-to-date with /PHPOffice/PHPExcel but has the new patch applied. Everything worked fine in my tests, but let me know if you run into any issues.\n. @Verwickler , the problem is that PHPExcel does not support non-contiguous chart data ranges at the moment. See issue #253. Commenting out the refresh function may work in your situation, but for others who are building new worksheets with charts from scratch, we need the refresh function to fire in order to paint the charts in the first place.\n. @Verwickler , I just created PR #650 to fix the issue PHPExcel has with comma separated chart data source values. If you have your own fork of PHPExcel, you can merge the patch, otherwise feel free to download from https://github.com/ComputerTinker/PHPExcel, which is up-to-date with /PHPOffice/PHPExcel but has the new patch applied. Everything worked fine in my tests, but let me know if you run into any issues.\n. No. Doesn't help that I have no real error messages to work off of. :-(\n. This patch is a fix for issue #625 and issue #253.\n. I just started using mPDF for my PDF renderer, and am having this same issue.\n. Incorrect HTML rendering is the cause of this issue, since the PDF is rendered from HTML output.  See https://github.com/PHPOffice/PHPExcel/issues/690 as a related bug report.\n. The /Examples and /unitTests directories were just recently marked as export-ignore in this commit:\n\nhttps://github.com/PHPOffice/PHPExcel/commit/875f92dac90e4569a6ea716d941cc0a089f36e38\n\nI would agree that /unitTests is not needed in the zip file, but would argue that /Examples should be left in the download file.  I had to undo the export-ignore of /Examples in my version of PHPExcel because my install instructions tell my end users to run one of the basic examples from the command line in order to ensure that PHPExcel is working correctly before moving on to the next step.\n. Googled on this a bit and found some people suggesting:\n\n``` php\n$objReader->setReadDataOnly(false);\n```\n\nbut that does not fix my issue.\n. Github is not letting me attach files to this issue at the moment, so I just emailed them to the email address shown on your profile.  The \"Date Issue.xlsx\" file is a stripped down and sanitized version of the file I'm trying to work with, provided to me by my client. The \"Date OK.xls\" was created simply by saving the file with a different format.  I'm using Office 2013.\n. Thanks for the quick response on this, I appreciate the patch. I'll give it shot tomorrow and let you know how it works out.\n. Just tried out the fix and it works perfectly. Thanks again.\n. @suseu , @abdulkader87 , and @garethellis36 , I just created PR #650 to fix the issue PHPExcel has with comma separated chart data source values. If you have your own fork of PHPExcel, you can merge the patch, otherwise feel free to download from https://github.com/ComputerTinker/PHPExcel, which is up-to-date with /PHPOffice/PHPExcel but has the new patch applied. Everything worked fine in my tests, but let me know if you run into any issues.\n. @Verwickler , the problem is that PHPExcel does not support non-contiguous chart data ranges at the moment. See issue #253. Commenting out the refresh function may work in your situation, but for others who are building new worksheets with charts from scratch, we need the refresh function to fire in order to paint the charts in the first place.\n. @Verwickler , I just created PR #650 to fix the issue PHPExcel has with comma separated chart data source values. If you have your own fork of PHPExcel, you can merge the patch, otherwise feel free to download from https://github.com/ComputerTinker/PHPExcel, which is up-to-date with /PHPOffice/PHPExcel but has the new patch applied. Everything worked fine in my tests, but let me know if you run into any issues.\n. No. Doesn't help that I have no real error messages to work off of. :-(\n. This patch is a fix for issue #625 and issue #253.\n. I just started using mPDF for my PDF renderer, and am having this same issue.\n. Incorrect HTML rendering is the cause of this issue, since the PDF is rendered from HTML output.  See https://github.com/PHPOffice/PHPExcel/issues/690 as a related bug report.\n. The /Examples and /unitTests directories were just recently marked as export-ignore in this commit:\n\nhttps://github.com/PHPOffice/PHPExcel/commit/875f92dac90e4569a6ea716d941cc0a089f36e38\n\nI would agree that /unitTests is not needed in the zip file, but would argue that /Examples should be left in the download file.  I had to undo the export-ignore of /Examples in my version of PHPExcel because my install instructions tell my end users to run one of the basic examples from the command line in order to ensure that PHPExcel is working correctly before moving on to the next step.\n. Googled on this a bit and found some people suggesting:\n\n``` php\n$objReader->setReadDataOnly(false);\n```\n\nbut that does not fix my issue.\n. Github is not letting me attach files to this issue at the moment, so I just emailed them to the email address shown on your profile.  The \"Date Issue.xlsx\" file is a stripped down and sanitized version of the file I'm trying to work with, provided to me by my client. The \"Date OK.xls\" was created simply by saving the file with a different format.  I'm using Office 2013.\n. Thanks for the quick response on this, I appreciate the patch. I'll give it shot tomorrow and let you know how it works out.\n. Just tried out the fix and it works perfectly. Thanks again.\n. ",
    "tomw1808": "There is another problem with the c:crossBetween element. If it is set to \"midCat\" then the values will be shifted to the left, leaving a bar-chart with more than one value-set so far left-shifted that the first value will disappear.\n\n```\nset following\n                        $objWriter->writeAttribute('val', \"midCat\");\nto\n\n                        $objWriter->writeAttribute('val', \"between\");\n```\n. There is another problem with the c:crossBetween element. If it is set to \"midCat\" then the values will be shifted to the left, leaving a bar-chart with more than one value-set so far left-shifted that the first value will disappear.\n\n```\nset following\n                        $objWriter->writeAttribute('val', \"midCat\");\nto\n\n                        $objWriter->writeAttribute('val', \"between\");\n```\n. ",
    "kossak": "How does it work? Will something happen with this issue? It's still there, as in first report.\n. How does it work? Will something happen with this issue? It's still there, as in first report.\n. ",
    "kaystrobach": "![image](https://f.cloud.github.com/assets/1185776/1326872/0b988766-34e6-11e3-810d-0f95b4443d8c.png)\n. how to get the version information from the package? most packages support the version in the composer json, atleast your powerpoint library does it as well.\nIs there any API which is partly consistent over all your office packages?\n\nI'd like to use that API to show credits in my TYPO3 Extension, which includes your genius office library in TYPO3 :D\n. the duplicate was already closed ... so i suggest closing this one as well ...\n. ![image](https://f.cloud.github.com/assets/1185776/1326872/0b988766-34e6-11e3-810d-0f95b4443d8c.png)\n. how to get the version information from the package? most packages support the version in the composer json, atleast your powerpoint library does it as well.\nIs there any API which is partly consistent over all your office packages?\n\nI'd like to use that API to show credits in my TYPO3 Extension, which includes your genius office library in TYPO3 :D\n. the duplicate was already closed ... so i suggest closing this one as well ...\n. ",
    "glensc": "versions are automatic in packagist if project makes releases (git tags).\n\nand so it is:\nhttps://packagist.org/packages/phpoffice/phpexcel\n\n i suggest to kill this issue\n. indeed, there's no ext-gd2\n. @PowerKiKi no it is not, there is still `\"*\"`. i'll submit PR to the new repo and rebase this one against current base. please reopen the PR\n. @PowerKiKi reopen. rebased against `develop` branch\n\nps: i don't actively use this project anymore\n. versions are automatic in packagist if project makes releases (git tags).\n\nand so it is:\nhttps://packagist.org/packages/phpoffice/phpexcel\n\n i suggest to kill this issue\n. indeed, there's no ext-gd2\n. @PowerKiKi no it is not, there is still `\"*\"`. i'll submit PR to the new repo and rebase this one against current base. please reopen the PR\n. @PowerKiKi reopen. rebased against `develop` branch\n\nps: i don't actively use this project anymore\n. ",
    "wmwmwm": "Any help appreciated.\n. @Niggler thank you for your response.\n\nAlso we are getting error messages when we try to validate excel file with ms excel validator.\n\nA sample file created by PhpExcel (Does not work with as3excel lib.)\nhttp://kodz.net/demo/share/sample_data_phpexcel.xls\n\nThe same sample file saved as with libre office (Works with as3excel lib.)\nhttp://kodz.net/demo/share/sample_data_libreoffice.xls\n\nI am using following code:\n\n```\n    $xl = array();\n    $xl[] = array('A' => 'string etc..', 'B' => 'string etc'); // Format example.\n    // Excel files that i posted here having different data than this code example.\n\n    $filename = 'file.xls';\n\n    $fileType = 'Excel5';\n\n    $objPHPExcel = new PHPExcel();\n\n    $objPHPExcel->setActiveSheetIndex(0)->setSelectedCell('A1')->setTitle('Sayfa1');\n\n    $objPHPExcel->getActiveSheet()->fromArray($xl, null, 'A1');\n\n    $objPHPExcel->getProperties()->setCreator(\"Kodz - Turbolist Opencart Modulu\")\n            ->setLastModifiedBy(\"Kodz - Turbolist Opencart Modulu\")\n            ->setTitle(\"Kodz - Turbolist Opencart Modulu\")\n            ->setSubject(\"Kodz - Turbolist Opencart Modulu\")\n            ->setDescription(\"Kodz - Turbolist Opencart Modulu tarafindan olusturulmustur.\")\n            ->setKeywords(\"PHPExcel php opencart gittigidiyor kodz\")\n            ->setCategory(\"Gittigidiyor import dosyasi\");\n\n    // Redirect output to a client\u2019s web browser (Excel5)\n    header('Content-Type: application/vnd.ms-excel');\n    header('Content-Disposition: attachment;filename=\"' . $filename . '\"');\n    header('Cache-Control: max-age=0');\n\n    $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, $fileType);\n    $objWriter->save('php://output');\n    exit;\n```\n\nThank you.\n. Any help appreciated.\n. @Niggler thank you for your response.\n\nAlso we are getting error messages when we try to validate excel file with ms excel validator.\n\nA sample file created by PhpExcel (Does not work with as3excel lib.)\nhttp://kodz.net/demo/share/sample_data_phpexcel.xls\n\nThe same sample file saved as with libre office (Works with as3excel lib.)\nhttp://kodz.net/demo/share/sample_data_libreoffice.xls\n\nI am using following code:\n\n```\n    $xl = array();\n    $xl[] = array('A' => 'string etc..', 'B' => 'string etc'); // Format example.\n    // Excel files that i posted here having different data than this code example.\n\n    $filename = 'file.xls';\n\n    $fileType = 'Excel5';\n\n    $objPHPExcel = new PHPExcel();\n\n    $objPHPExcel->setActiveSheetIndex(0)->setSelectedCell('A1')->setTitle('Sayfa1');\n\n    $objPHPExcel->getActiveSheet()->fromArray($xl, null, 'A1');\n\n    $objPHPExcel->getProperties()->setCreator(\"Kodz - Turbolist Opencart Modulu\")\n            ->setLastModifiedBy(\"Kodz - Turbolist Opencart Modulu\")\n            ->setTitle(\"Kodz - Turbolist Opencart Modulu\")\n            ->setSubject(\"Kodz - Turbolist Opencart Modulu\")\n            ->setDescription(\"Kodz - Turbolist Opencart Modulu tarafindan olusturulmustur.\")\n            ->setKeywords(\"PHPExcel php opencart gittigidiyor kodz\")\n            ->setCategory(\"Gittigidiyor import dosyasi\");\n\n    // Redirect output to a client\u2019s web browser (Excel5)\n    header('Content-Type: application/vnd.ms-excel');\n    header('Content-Disposition: attachment;filename=\"' . $filename . '\"');\n    header('Cache-Control: max-age=0');\n\n    $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, $fileType);\n    $objWriter->save('php://output');\n    exit;\n```\n\nThank you.\n. ",
    "Niggler": "@wmwmwm  can you post a sample file that you generated from phpexcel?\n. @wmwmwm  can you post a sample file that you generated from phpexcel?\n. ",
    "cjw296": "xlrd is _highly_ unlikely to be changed to deal with this bug in PHPExcel, I'd suggest fixing the bug at its source...\n. You're certainly entitled to that opinion, I refer you to @sjmachin's comments on python-excel/xlrd#66.\n. xlrd is _highly_ unlikely to be changed to deal with this bug in PHPExcel, I'd suggest fixing the bug at its source...\n. You're certainly entitled to that opinion, I refer you to @sjmachin's comments on python-excel/xlrd#66.\n. ",
    "trvrnrth": "Hi Mark,\n\nNot sure if you made any progress but I had a bit of time this evening so had a poke around and tracked the problem down to the rotate in the Excel MD5 lib. This stems from the lower max int size on 32 bit, and the bit shift was obviously not working as expected when given floats instead. Oddly, the remaining bit operations still seem to work just fine but I'll not complain about that.\n\nI've also done some general clean up to make the whole thing a bit more maintainable. As a point of interest I adapted the code from http://stackoverflow.com/a/1699199 originally although by this point the info there probably isn't of much use. It's annoying that the built in md5/hash functions don't expose the context as that would have saved a lot of hassle but such as life.\n\nI should note that I have only tested this on php-5.5.6-nts-Win32-VC11-x86/x64 on a 64 bit windows 7 machine as that's what happens to be on my lap. I'm hopeful that this does indeed work for other versions and linux 32 bit, and that I've not knackered it up for linux 64 bit, but I'll admit to not actually having checked. Let me know if I have and I can take another look.\n\nAnyway, enough talk, the commit is at https://github.com/trvrnrth/PHPExcel/commit/ee3ff2ebbdf6de53f2c0b31a8e409d81b4f95939\n\nCheers,\nTrevor\n. I hear you on the busy. I've just found time to get back to the project that we need this for and found that I had indeed broken things for 64 bit. On the plus side the fix is straightforward and at https://github.com/trvrnrth/PHPExcel/commit/ba3ac2075b75419986744dfa629d836cec05beb7. With a bit of luck that'll be that for the reader.\n. The functionality did make it into master yes. I never implemented the ability to use anything other than the default password for \"read only\" protected sheets (VelvetSweatshop) but I imagine it'd be possible to pass a different password in via the reader as an option or something and then make use of that.. @goosehub You know, I honestly couldn't tell you anymore it was so long ago now. The project I used the library for is no longer maintained by me. What I can tell you is that at the time this worked well for the read-only excel 5 files we had to deal with but we never had a use case for handling those with an actual password. I borrowed the approach from the perl Spreadsheet-ParseExcel lib so it might be worth you seeing if that can read your file first.. Hi Mark,\n\nNot sure if you made any progress but I had a bit of time this evening so had a poke around and tracked the problem down to the rotate in the Excel MD5 lib. This stems from the lower max int size on 32 bit, and the bit shift was obviously not working as expected when given floats instead. Oddly, the remaining bit operations still seem to work just fine but I'll not complain about that.\n\nI've also done some general clean up to make the whole thing a bit more maintainable. As a point of interest I adapted the code from http://stackoverflow.com/a/1699199 originally although by this point the info there probably isn't of much use. It's annoying that the built in md5/hash functions don't expose the context as that would have saved a lot of hassle but such as life.\n\nI should note that I have only tested this on php-5.5.6-nts-Win32-VC11-x86/x64 on a 64 bit windows 7 machine as that's what happens to be on my lap. I'm hopeful that this does indeed work for other versions and linux 32 bit, and that I've not knackered it up for linux 64 bit, but I'll admit to not actually having checked. Let me know if I have and I can take another look.\n\nAnyway, enough talk, the commit is at https://github.com/trvrnrth/PHPExcel/commit/ee3ff2ebbdf6de53f2c0b31a8e409d81b4f95939\n\nCheers,\nTrevor\n. I hear you on the busy. I've just found time to get back to the project that we need this for and found that I had indeed broken things for 64 bit. On the plus side the fix is straightforward and at https://github.com/trvrnrth/PHPExcel/commit/ba3ac2075b75419986744dfa629d836cec05beb7. With a bit of luck that'll be that for the reader.\n. The functionality did make it into master yes. I never implemented the ability to use anything other than the default password for \"read only\" protected sheets (VelvetSweatshop) but I imagine it'd be possible to pass a different password in via the reader as an option or something and then make use of that.. @goosehub You know, I honestly couldn't tell you anymore it was so long ago now. The project I used the library for is no longer maintained by me. What I can tell you is that at the time this worked well for the read-only excel 5 files we had to deal with but we never had a use case for handling those with an actual password. I borrowed the approach from the perl Spreadsheet-ParseExcel lib so it might be worth you seeing if that can read your file first.. ",
    "goosehub": "I found this pull request through https://stackoverflow.com/questions/19655690/how-to-read-password-protected-excel-files-using-phpexcel. I'm not clear on the result. I see this referenced commit, https://github.com/PHPOffice/PHPExcel/commit/c7a6431e099067becda33986ee664fe52ea10e33, appears to exist in master, but I'm not sure how to use the repo to pass a password to a password protected xls file.\r\n\r\nIn short, does this repo support opening password protected xls files, either in Master or in this branch? If so, where is an example, documentation on this feature. If not, how should I start on forking this repo so I can build the feature and possibly make a pull request back to the repo.. @trvrnrth Oh good. I'll have no problem changing the password in Excel5.php, as every file I'll receive will have the same password.\r\n\r\nCould you provide documentation or an example of how to open password protected files? This is what I have now, even after changing the password.\r\n\r\n    $excel_object = PHPExcel_IOFactory::load($xlsx_filepath);\r\n    $sheet_data = $excel_object->getActiveSheet()->toArray(null, false, true, true);\r\n\r\nI'm getting\r\n\r\n> Unexpected file pass record length. Yeah, it's not even getting to the `$this->verifyPassword('VelvetSweatshop', ...` (which I've updated to my password) line because it's failing at\r\n\r\n        $length = self::getInt2d($this->data, $this->pos + 2);\r\n\r\n        if ($length != 54) {\r\n            throw new PHPExcel_Reader_Exception('Unexpected file pass record length');\r\n        }\r\n\r\nAnd if I remove that exception, it fails at the verifyPassword line and throws this exception\r\n\r\n        throw new PHPExcel_Reader_Exception('Decryption password incorrect');\r\n\r\nAnd removing that exception just causes PHP errors.\r\n\r\nI'm guessing getting it to work will be non trivial. I'm waiting for a potential other option to get the data we need, but if that falls through, I'll probably have to make this work somehow.. @PowerKiKi so I fork PhpSpreadsheet and build the functionality into that? I assume both repos are able to parse xls files?. I found this pull request through https://stackoverflow.com/questions/19655690/how-to-read-password-protected-excel-files-using-phpexcel. I'm not clear on the result. I see this referenced commit, https://github.com/PHPOffice/PHPExcel/commit/c7a6431e099067becda33986ee664fe52ea10e33, appears to exist in master, but I'm not sure how to use the repo to pass a password to a password protected xls file.\r\n\r\nIn short, does this repo support opening password protected xls files, either in Master or in this branch? If so, where is an example, documentation on this feature. If not, how should I start on forking this repo so I can build the feature and possibly make a pull request back to the repo.. @trvrnrth Oh good. I'll have no problem changing the password in Excel5.php, as every file I'll receive will have the same password.\r\n\r\nCould you provide documentation or an example of how to open password protected files? This is what I have now, even after changing the password.\r\n\r\n    $excel_object = PHPExcel_IOFactory::load($xlsx_filepath);\r\n    $sheet_data = $excel_object->getActiveSheet()->toArray(null, false, true, true);\r\n\r\nI'm getting\r\n\r\n> Unexpected file pass record length. Yeah, it's not even getting to the `$this->verifyPassword('VelvetSweatshop', ...` (which I've updated to my password) line because it's failing at\r\n\r\n        $length = self::getInt2d($this->data, $this->pos + 2);\r\n\r\n        if ($length != 54) {\r\n            throw new PHPExcel_Reader_Exception('Unexpected file pass record length');\r\n        }\r\n\r\nAnd if I remove that exception, it fails at the verifyPassword line and throws this exception\r\n\r\n        throw new PHPExcel_Reader_Exception('Decryption password incorrect');\r\n\r\nAnd removing that exception just causes PHP errors.\r\n\r\nI'm guessing getting it to work will be non trivial. I'm waiting for a potential other option to get the data we need, but if that falls through, I'll probably have to make this work somehow.. @PowerKiKi so I fork PhpSpreadsheet and build the functionality into that? I assume both repos are able to parse xls files?. ",
    "lichtjager": "I figured out it goes wrong when I call this function:\n$objPHPExcel->getActiveSheet()->toArray(null,true,true,true);\n. I figured out it goes wrong when I call this function:\n$objPHPExcel->getActiveSheet()->toArray(null,true,true,true);\n. ",
    "ignace": "Nevermind. Apparently it's a problem with OpenOffice.\n. Nevermind. Apparently it's a problem with OpenOffice.\n. ",
    "syroeshko": "Merged.\n. FYI. [PhpWord](https://github.com/PHPOffice/PHPWord) is going to upgrade onto PHP 5.3 in the next release (0.9.0). So, the question is not actual anymore.\n. Merged.\n. FYI. [PhpWord](https://github.com/PHPOffice/PHPWord) is going to upgrade onto PHP 5.3 in the next release (0.9.0). So, the question is not actual anymore.\n. ",
    "MichalJanicki": "The solution to the problem: should add '<? Xml encoding = \"UTF-8\">' html code\n. The solution to the problem: should add '<? Xml encoding = \"UTF-8\">' html code\n. ",
    "crazyserb": "Wait, what do you mean by adding \"<? Xml encoding = \"UTF-8\">\"?\n\nWhere? How?\n\nHow does a \"fixed\" code in your example look like then?\n\nThanks.\n. Wait, what do you mean by adding \"<? Xml encoding = \"UTF-8\">\"?\n\nWhere? How?\n\nHow does a \"fixed\" code in your example look like then?\n\nThanks.\n. ",
    "gibito": "@MarkBaker \n\nPlease see commit https://github.com/GerHobbelt/PHPExcel/commit/7d6f6e038db6252a1056cf31525852db822a066e for an example of this bug: that commit edits the 03formulas.php example file that comes with PHPExcel to reproduce the error: the sum cell (B5=B2+B3+B4, all moved down one row by the InsertNewRowBefore() in the patched example) should read after the insert-row: B6=B3+B4+B5. However the actual result is B6=B5+B5+B5.\n\nWe have not investigated why the insertRow operation has this incorrect effect on the formula rewrite process.\n. Fixed in fcb794e2e210fd3d86cced37ad0105fe8da030ec\n. @MarkBaker \n\nPlease see commit https://github.com/GerHobbelt/PHPExcel/commit/7d6f6e038db6252a1056cf31525852db822a066e for an example of this bug: that commit edits the 03formulas.php example file that comes with PHPExcel to reproduce the error: the sum cell (B5=B2+B3+B4, all moved down one row by the InsertNewRowBefore() in the patched example) should read after the insert-row: B6=B3+B4+B5. However the actual result is B6=B5+B5+B5.\n\nWe have not investigated why the insertRow operation has this incorrect effect on the formula rewrite process.\n. Fixed in fcb794e2e210fd3d86cced37ad0105fe8da030ec\n. ",
    "GerHobbelt": "Tested with my patched 03formulas.php: that example now works okay. Looking good.\nGoing to test it on our (@gibito + @GerHobbelt) application code next...\n. Tested with my patched 03formulas.php: that example now works okay. Looking good.\nGoing to test it on our (@gibito + @GerHobbelt) application code next...\n. ",
    "laskolaskov": "Hello , I have the same issue. It is only when I read Open Office (.ods) files , and for  ALL cells the background color is set like : \nStart color: string(6) \"FFFFFF\"\nEnd color: string(6) \"000000\"\n\nWhen I convert the file to excel 97 / 2000 / xp format , the colors are OK.\n\nBut then some cells containing special and/or asian chars lose their value, and the cell value returned is not 'string' , but empty array. This however is maybe another issue , but still worth to mention I guess.\n\nI would greatly appreciate if someone can share thoughts about these issues.\nThanks in advance.\n. Hello , I have the same issue. It is only when I read Open Office (.ods) files , and for  ALL cells the background color is set like : \nStart color: string(6) \"FFFFFF\"\nEnd color: string(6) \"000000\"\n\nWhen I convert the file to excel 97 / 2000 / xp format , the colors are OK.\n\nBut then some cells containing special and/or asian chars lose their value, and the cell value returned is not 'string' , but empty array. This however is maybe another issue , but still worth to mention I guess.\n\nI would greatly appreciate if someone can share thoughts about these issues.\nThanks in advance.\n. ",
    "lushc": "+1\n. +1\n. ",
    "nouphaltklm": "+1\n. +1\n. ",
    "sbrowett": "+1 from me, this is causing me issues now on a project, which would otherwise be trivial!\n. +1 from me, this is causing me issues now on a project, which would otherwise be trivial!\n. ",
    "mvl22": "There is a pending pull request at #283.\n. Note: equivalent file is at:\nhttps://github.com/PHPOffice/PhpSpreadsheet/blob/develop/src/PhpSpreadsheet/Writer/CSV.php\n. There is a pending pull request at #283.\n. Note: equivalent file is at:\nhttps://github.com/PHPOffice/PhpSpreadsheet/blob/develop/src/PhpSpreadsheet/Writer/CSV.php\n. ",
    "chupacabrot": "Hmm.. so, is there any update on this one? \nStill can't find how to remove this enclosure.. it's making me a huge mess in one of my projects that is relying on google's adwords editor that for some reason refuses to import a CSV which includes these enclosures.. and i would really love to avoid the replace-all thingy every time.\n. Hmm.. so, is there any update on this one? \nStill can't find how to remove this enclosure.. it's making me a huge mess in one of my projects that is relying on google's adwords editor that for some reason refuses to import a CSV which includes these enclosures.. and i would really love to avoid the replace-all thingy every time.\n. ",
    "bodinsamuel": "Same problem but happen even faster.\n\nMany style applied to different cells (can't apply by column or row as it's very conditional). \nNo error, file is generated correctly but style are not applied anymore after the line 20\n\nIf I delete some style, the style is applied a little further in the document...\n\nThere is no way that I come from memory limit.\n. Same problem but happen even faster.\n\nMany style applied to different cells (can't apply by column or row as it's very conditional). \nNo error, file is generated correctly but style are not applied anymore after the line 20\n\nIf I delete some style, the style is applied a little further in the document...\n\nThere is no way that I come from memory limit.\n. ",
    "vdunaev": "Same problem\nDo you find a solution?\n. Same problem\nDo you find a solution?\n. ",
    "sokollondon": "Same problem. Same problem. ",
    "andrew-kzoo": ":+1:\n. :+1: for Composer support!\n. :+1:\n. :+1: for Composer support!\n. ",
    "jcbwlkr": ":+1: \n. :+1: \n. ",
    "damienfa": ":+1:\n. :+1:\n. ",
    "githack": "possible fix: https://github.com/githack/PHPExcel/commit/476161c68fc332fd3859f7d964112834d0d2b1d5\n. possible fix: https://github.com/githack/PHPExcel/commit/476161c68fc332fd3859f7d964112834d0d2b1d5\n. ",
    "saulob": "I'm looking for a function exactly like that. \n\nCan I use your file? \n\nThanks.\n\nEdit: not like that. I'm looking for something using '$objReader', when I'm reading a file, I would like to set the highest column and row.\n\nBut thanks :)\n. @MarkBaker , thank you for your reply. Good idea\n\nThe problem is that I'm not using any looping, but reading the file with PHPExcel to convert to CSV. Only that. \n\nUsing: \"PHPExcel_IOFactory::createWriter($objReader, 'CSV');\" \n\"$writer->save($file);\"\n\nI don't read the file on screen with loops... I would love that I could set only X columns to write to the CSV file.  Set the max column/line to be write\n\nThanks.\n. I'm looking for a function exactly like that. \n\nCan I use your file? \n\nThanks.\n\nEdit: not like that. I'm looking for something using '$objReader', when I'm reading a file, I would like to set the highest column and row.\n\nBut thanks :)\n. @MarkBaker , thank you for your reply. Good idea\n\nThe problem is that I'm not using any looping, but reading the file with PHPExcel to convert to CSV. Only that. \n\nUsing: \"PHPExcel_IOFactory::createWriter($objReader, 'CSV');\" \n\"$writer->save($file);\"\n\nI don't read the file on screen with loops... I would love that I could set only X columns to write to the CSV file.  Set the max column/line to be write\n\nThanks.\n. ",
    "kimegede": ":+1: What's status on this one?\n. Why the update in the `composer.json` file @fpasquet ?\n. :+1: \n. @dbonsch, @gmsantos, @maartenba, @MarkBaker, @Progi1984, @RomanSyroeshko : Any feedback from you guys or don't you take any issues or PR's???\n. :+1: What's status on this one?\n. Why the update in the `composer.json` file @fpasquet ?\n. :+1: \n. @dbonsch, @gmsantos, @maartenba, @MarkBaker, @Progi1984, @RomanSyroeshko : Any feedback from you guys or don't you take any issues or PR's???\n. ",
    "santarinto": "maybe add second parameter to stringFromColumnIndex function, example stringFromColumnIndex($pColumnIndex = 0, $isBaseColIndexIsOne = false)\n. maybe add second parameter to stringFromColumnIndex function, example stringFromColumnIndex($pColumnIndex = 0, $isBaseColIndexIsOne = false)\n. ",
    "joe15000": "stringFromColumnIndex is working correctly.\r\ncolumnIndexFromString is working incorrectly.\r\n\r\nAs written elsewhere in PHPExcel, columns start at 0, rows at 1.\r\n\r\nSo \r\nstringFromColumnIndex(0) = 'A' (expected 'A', correct) \r\ncolumnIndexFromString('A') = 1 (expected 0, incorrect)\r\n\r\nIf you don't know this and did not stumble across it in this bug report, the only way you have to find this out is by debugging it (this took me about 30 minutes to find out as this function was used as part of a larger loop and drove me nuts as it should have worked but didn't until I added \"-1\" to the end of it)\r\n\r\nMaybe to add a flag to columnIndexFromString for base 1 (default for legacy) or base 0?. stringFromColumnIndex is working correctly.\r\ncolumnIndexFromString is working incorrectly.\r\n\r\nAs written elsewhere in PHPExcel, columns start at 0, rows at 1.\r\n\r\nSo \r\nstringFromColumnIndex(0) = 'A' (expected 'A', correct) \r\ncolumnIndexFromString('A') = 1 (expected 0, incorrect)\r\n\r\nIf you don't know this and did not stumble across it in this bug report, the only way you have to find this out is by debugging it (this took me about 30 minutes to find out as this function was used as part of a larger loop and drove me nuts as it should have worked but didn't until I added \"-1\" to the end of it)\r\n\r\nMaybe to add a flag to columnIndexFromString for base 1 (default for legacy) or base 0?. ",
    "SiebelsTim": "possible duplicate of https://github.com/Maatwebsite/laravel4-PHPExcel/issues/16\n. possible duplicate of https://github.com/Maatwebsite/laravel4-PHPExcel/issues/16\n. ",
    "sannyodictajr": "bump ~\n. bump ~\n. ",
    "vlasvlasvlas": "bumping this also +1\n. bumping this also +1\n. ",
    "lusimeon": "+1\n. +1\n. ",
    "cons0l3": "+1\n. +1\n. ",
    "lioman": "same problem here. Pivot functionality is gone after PHPExcel save.\n. And there [is apache-poi](https://poi.apache.org/spreadsheet/index.html) wich handles pivot tables in a limited way. \n\n> XSSF has limited support for creating Pivot Tables, and very limited read/change support.\n\nBut you can create a Excelpivot template and write your Raw data to a given sheet and this works quit nice. And If you use SXSSF you can write large data sets into a file\n. same problem here. Pivot functionality is gone after PHPExcel save.\n. And there [is apache-poi](https://poi.apache.org/spreadsheet/index.html) wich handles pivot tables in a limited way. \n\n> XSSF has limited support for creating Pivot Tables, and very limited read/change support.\n\nBut you can create a Excelpivot template and write your Raw data to a given sheet and this works quit nice. And If you use SXSSF you can write large data sets into a file\n. ",
    "ashokgharpankar": "I am facing same problem. Pivot tables getting disappeared. Does anyone has solution on this?\n. @MarkBaker Thanks for quick reply, So, PHPEXcel library does not support pivot tables then I need to find other alternative, isn't it? \n. I am facing same problem. Pivot tables getting disappeared. Does anyone has solution on this?\n. @MarkBaker Thanks for quick reply, So, PHPEXcel library does not support pivot tables then I need to find other alternative, isn't it? \n. ",
    "nadler": "In Perl you can extract the VB pivot code from an existing spreadsheet and inject that into a new one that you create.  So by saving off the pivot ahead of time you can create a spreadsheet with a pivot table and data in one file from scratch.\n\nI'm not sure if this would be a potential solution in the future with PHPExcel.\n. In Perl you can extract the VB pivot code from an existing spreadsheet and inject that into a new one that you create.  So by saving off the pivot ahead of time you can create a spreadsheet with a pivot table and data in one file from scratch.\n\nI'm not sure if this would be a potential solution in the future with PHPExcel.\n. ",
    "egmen": "I make an investigation of generated and saved by excel files and I've found 2 differences between them.\nxl\\worksheets\\sheet1.xml\nWell working file has 2 additional values in <sheetProtection> tag. They are  objects=\"1\" scenarios=\"1\".\nValue objects=\"1\" is an important for fixing this bug. Could somebody make an patch for this bug?\n. I've found a decision.\n$objPHPExcel->getActiveSheet()->getProtection()->setObjects(true);\nThanks\n. I make an investigation of generated and saved by excel files and I've found 2 differences between them.\nxl\\worksheets\\sheet1.xml\nWell working file has 2 additional values in <sheetProtection> tag. They are  objects=\"1\" scenarios=\"1\".\nValue objects=\"1\" is an important for fixing this bug. Could somebody make an patch for this bug?\n. I've found a decision.\n$objPHPExcel->getActiveSheet()->getProtection()->setObjects(true);\nThanks\n. ",
    "treadmill": "Yes, it definitely is as It works fine for any new Excel spreadsheets I create, but for this particular one it doesn't work, even though it happily opens in Excel 2013.  Did you try the Excel spreadsheet I attached as a link?\n. Yes, it definitely is as It works fine for any new Excel spreadsheets I create, but for this particular one it doesn't work, even though it happily opens in Excel 2013.  Did you try the Excel spreadsheet I attached as a link?\n. ",
    "rophiroth": "did anybody workaround this?\n. did anybody workaround this?\n. ",
    "impb-ethz": "no workaround necessary.. check file permissions.\n. no workaround necessary.. check file permissions.\n. ",
    "sarciszewski": "I wonder if it's similar to https://github.com/PHPOffice/PHPExcel/issues/158 ?\n\nUPDATE: Yes. I created another test file at http://www.tempsend.com/9C6FB2AA87 using Microsoft Excel 2013 and it worked fine, but with LibreOffice it fails: http://tempsend.com/D85D19B574\n. Further testing:\n\n``` bash\n# This is the LibreOffice version: \nsarciszewski@sarciszewski-VirtualBox ~/code $ unzip -o -d test4 test4.xlsx\nArchive:  test4.xlsx\n  inflating: test4/_rels/.rels       \n  inflating: test4/docProps/app.xml  \n  inflating: test4/docProps/core.xml  \n  inflating: test4/xl/_rels/workbook.xml.rels  \n  inflating: test4/xl/sharedStrings.xml  \n  inflating: test4/xl/worksheets/sheet1.xml  \n  inflating: test4/xl/styles.xml     \n  inflating: test4/xl/workbook.xml   \n  inflating: test4/[Content_Types].xml  \n# This is the Excel 2013 version:\nsarciszewski@sarciszewski-VirtualBox ~/code $ unzip -o -d test3 test3.xlsx\nArchive:  test3.xlsx\n  inflating: test3/[Content_Types].xml  \n  inflating: test3/_rels/.rels       \n  inflating: test3/xl/_rels/workbook.xml.rels  \n  inflating: test3/xl/workbook.xml   \n  inflating: test3/xl/sharedStrings.xml  \n  inflating: test3/xl/worksheets/_rels/sheet1.xml.rels  \n  inflating: test3/xl/theme/theme1.xml  \n  inflating: test3/xl/styles.xml     \n  inflating: test3/xl/worksheets/sheet1.xml  \n  inflating: test3/docProps/core.xml  \n  inflating: test3/xl/calcChain.xml  \n  inflating: test3/xl/printerSettings/printerSettings1.bin  \n  inflating: test3/docProps/app.xml  \n```\n\nSo right away, there's an inconsistency that PHPExcel is probably not accounting for. Let's take a closer look: http://pastebin.com/F3R1s6B0\n. Excellent. Thank you :+1: :smile: \n. I wonder if it's similar to https://github.com/PHPOffice/PHPExcel/issues/158 ?\n\nUPDATE: Yes. I created another test file at http://www.tempsend.com/9C6FB2AA87 using Microsoft Excel 2013 and it worked fine, but with LibreOffice it fails: http://tempsend.com/D85D19B574\n. Further testing:\n\n``` bash\n# This is the LibreOffice version: \nsarciszewski@sarciszewski-VirtualBox ~/code $ unzip -o -d test4 test4.xlsx\nArchive:  test4.xlsx\n  inflating: test4/_rels/.rels       \n  inflating: test4/docProps/app.xml  \n  inflating: test4/docProps/core.xml  \n  inflating: test4/xl/_rels/workbook.xml.rels  \n  inflating: test4/xl/sharedStrings.xml  \n  inflating: test4/xl/worksheets/sheet1.xml  \n  inflating: test4/xl/styles.xml     \n  inflating: test4/xl/workbook.xml   \n  inflating: test4/[Content_Types].xml  \n# This is the Excel 2013 version:\nsarciszewski@sarciszewski-VirtualBox ~/code $ unzip -o -d test3 test3.xlsx\nArchive:  test3.xlsx\n  inflating: test3/[Content_Types].xml  \n  inflating: test3/_rels/.rels       \n  inflating: test3/xl/_rels/workbook.xml.rels  \n  inflating: test3/xl/workbook.xml   \n  inflating: test3/xl/sharedStrings.xml  \n  inflating: test3/xl/worksheets/_rels/sheet1.xml.rels  \n  inflating: test3/xl/theme/theme1.xml  \n  inflating: test3/xl/styles.xml     \n  inflating: test3/xl/worksheets/sheet1.xml  \n  inflating: test3/docProps/core.xml  \n  inflating: test3/xl/calcChain.xml  \n  inflating: test3/xl/printerSettings/printerSettings1.bin  \n  inflating: test3/docProps/app.xml  \n```\n\nSo right away, there's an inconsistency that PHPExcel is probably not accounting for. Let's take a closer look: http://pastebin.com/F3R1s6B0\n. Excellent. Thank you :+1: :smile: \n. ",
    "Daniel15": "My hacky workaround:\n\n``` php\n// ... output using PHP normally, save to $filename\n// ...\n// Read the file output by PHPExcel\n$zip = new ZipArchive();\n$zip->open($filename);\n\n// Retrieve sheets from file\n$sheet_file = $zip->getFromName('xl/worksheets/sheet1.xml');\n$sheet = simplexml_load_string($sheet_file);\n\n// Extend validation ranges for the whole column. Unfortunately PHPExcel\n// only supports per-cell validation. Just extend its validation ranges\n// all the way down. Assumes cell is in format \"A1\" - First character is\n// row. Converts the \"A2\" range to \"A2:A1048576\"\nif ($sheet->dataValidations && $sheet->dataValidations->dataValidation) {\n  foreach ($sheet->dataValidations->dataValidation as $validation) {\n    // First character is column letter\n    $row = substr($validation['sqref'], 0, 1);\n    $validation['sqref'] .= ':' . $row . static::EXCEL_MAX_ROWS;\n  }\n}\n\n// Replace files with modified versions\n$zip->addFromString('xl/worksheets/sheet1.xml', $sheet->asXML());\n$zip->close();\n```\n. I should have clarified: The `[Content_Types].xml` file is what needs the updated mimetype. I hacked around it by writing the .xlsx file with PHPExcel, then opening it with `ZipArchive` and modifying the [Content_Types].xml file directly.\n. It'd be nice to have a proper way to totally disable the autoloader. We use PHPExcel at Facebook and I needed to modify the code to disable the autoloader as it didn't work in our environment. We generally try to keep to non-modified upstream versions wherever possible as it makes it easier to upgrade in the future.\n\nAlternatively, if PHPExcel was packaged as a Composer package, this custom autoloader could be totally removed since Composer already handles autoloading.\n. Oh sorry, I didn't realise there was already a Composer package for PHPExcel. My mistake!\n\nIs PHPExcel 2.0 going to be fully backwards compatible, or will there be major changes? If there's major changes, I'd strongly suggest moving towards mainly supporting use via a Composer package and its autoloader, as most of the new PHP frameworks and libraries are doing. Better to have lots of changes at once and bundle them all together. For people not using Composer, they could just use whatever autoloader they're using or drop in one of the many PSR-0 compliant autoloaders. It's a bit messy using lots of libraries each with their own autoloader (and autoloading should be the responsibility of the root application, not the library).\n\nAt Facebook we don't use Composer but we do have a custom build environment and some things that PHPExcel does by default (like its autoloader and the `PHPEXCEL_ROOT` constant being defined in every file) weren't compatible so we had to patch it.\n. My hacky workaround:\n\n``` php\n// ... output using PHP normally, save to $filename\n// ...\n// Read the file output by PHPExcel\n$zip = new ZipArchive();\n$zip->open($filename);\n\n// Retrieve sheets from file\n$sheet_file = $zip->getFromName('xl/worksheets/sheet1.xml');\n$sheet = simplexml_load_string($sheet_file);\n\n// Extend validation ranges for the whole column. Unfortunately PHPExcel\n// only supports per-cell validation. Just extend its validation ranges\n// all the way down. Assumes cell is in format \"A1\" - First character is\n// row. Converts the \"A2\" range to \"A2:A1048576\"\nif ($sheet->dataValidations && $sheet->dataValidations->dataValidation) {\n  foreach ($sheet->dataValidations->dataValidation as $validation) {\n    // First character is column letter\n    $row = substr($validation['sqref'], 0, 1);\n    $validation['sqref'] .= ':' . $row . static::EXCEL_MAX_ROWS;\n  }\n}\n\n// Replace files with modified versions\n$zip->addFromString('xl/worksheets/sheet1.xml', $sheet->asXML());\n$zip->close();\n```\n. I should have clarified: The `[Content_Types].xml` file is what needs the updated mimetype. I hacked around it by writing the .xlsx file with PHPExcel, then opening it with `ZipArchive` and modifying the [Content_Types].xml file directly.\n. It'd be nice to have a proper way to totally disable the autoloader. We use PHPExcel at Facebook and I needed to modify the code to disable the autoloader as it didn't work in our environment. We generally try to keep to non-modified upstream versions wherever possible as it makes it easier to upgrade in the future.\n\nAlternatively, if PHPExcel was packaged as a Composer package, this custom autoloader could be totally removed since Composer already handles autoloading.\n. Oh sorry, I didn't realise there was already a Composer package for PHPExcel. My mistake!\n\nIs PHPExcel 2.0 going to be fully backwards compatible, or will there be major changes? If there's major changes, I'd strongly suggest moving towards mainly supporting use via a Composer package and its autoloader, as most of the new PHP frameworks and libraries are doing. Better to have lots of changes at once and bundle them all together. For people not using Composer, they could just use whatever autoloader they're using or drop in one of the many PSR-0 compliant autoloaders. It's a bit messy using lots of libraries each with their own autoloader (and autoloading should be the responsibility of the root application, not the library).\n\nAt Facebook we don't use Composer but we do have a custom build environment and some things that PHPExcel does by default (like its autoloader and the `PHPEXCEL_ROOT` constant being defined in every file) weren't compatible so we had to patch it.\n. ",
    "wernerkrauss": "You can already add validation to an area of the sheet:\r\n\r\n```\r\n$sheet->setDataValidation($rangeString, $validationObj);\r\n```. You can already add validation to an area of the sheet:\r\n\r\n```\r\n$sheet->setDataValidation($rangeString, $validationObj);\r\n```. ",
    "IvanSolovjev": "$this->_excel = PHPExcel_IOFactory::load( $excelPath );\n        try{\n                $sheetData = $this->_excel->getSheetByName($sheetName)->toArray();\n                foreach ( $sheetData AS $key => $row) {\n                    //here we process rows\n               }\n        } catch (Exception $e){\n            error_log($e->getMessage());\n        }\n. $this->_excel = PHPExcel_IOFactory::load( $excelPath );\n        try{\n                $sheetData = $this->_excel->getSheetByName($sheetName)->toArray();\n                foreach ( $sheetData AS $key => $row) {\n                    //here we process rows\n               }\n        } catch (Exception $e){\n            error_log($e->getMessage());\n        }\n. ",
    "CiTRO33": "Hey, there is also a \"bug\" in this file:\nthe function setWidthAndHeight  works only if resizeProportional is true:\n\nin my opinion this must be work:\n\npublic function setWidthAndHeight($width = 0, $height = 0) {\n        if ($this->_resizeProportional && ! ($width == 0 || $height == 0)) {\n            $xratio = $width / $this->_width;\n            $yratio = $height / $this->_height;\n            if (($xratio \\* $this->_height) < $height) {\n                $this->_height = ceil ( $xratio \\* $this->_height );\n                $this->_width = $width;\n            } else {\n                $this->_width = ceil ( $yratio \\* $this->_width );\n                $this->_height = $height;\n            }\n        } else {\n            $this->_width = $width;\n            $this->_height = $height;\n        }\n        return $this;\n    }\n. Hey, there is also a \"bug\" in this file:\nthe function setWidthAndHeight  works only if resizeProportional is true:\n\nin my opinion this must be work:\n\npublic function setWidthAndHeight($width = 0, $height = 0) {\n        if ($this->_resizeProportional && ! ($width == 0 || $height == 0)) {\n            $xratio = $width / $this->_width;\n            $yratio = $height / $this->_height;\n            if (($xratio \\* $this->_height) < $height) {\n                $this->_height = ceil ( $xratio \\* $this->_height );\n                $this->_width = $width;\n            } else {\n                $this->_width = ceil ( $yratio \\* $this->_width );\n                $this->_height = $height;\n            }\n        } else {\n            $this->_width = $width;\n            $this->_height = $height;\n        }\n        return $this;\n    }\n. ",
    "logindian": " I am unable to attach the xls file here. Please provide email id. How did i create the issue is, I had set up an validation on A1 cell from G1:G4 cells. Intially G1:G4 is empty so A1 will show one blank dropdown list. Then i am writing G1:G4 using PHPExcel , values are written but A1 cell does not have the validation.\n.  I am unable to attach the xls file here. Please provide email id. How did i create the issue is, I had set up an validation on A1 cell from G1:G4 cells. Intially G1:G4 is empty so A1 will show one blank dropdown list. Then i am writing G1:G4 using PHPExcel , values are written but A1 cell does not have the validation.\n. ",
    "GuillaumeRossolini": "Hi,\n\nI ran into this problem.\n\nTo reproduce:\n1. Create an empty workbook from Excel;\n2. The first and second sheets will be filled by end-users, while the third will be their datasource;\n3. Rename all three sheets;\n4. Fill some data in sheet 3;\n5. Set some cells or columns in sheets 1 and 2 as validated by validation lists from columns in sheet 3;\n6. Save the file;\n7. Update the data in Sheet 3 with a PHP script and save as a new file.\n\nNow open the new workbook with Excel: the cells that were list-validated are now just plain cells. All data validation parameters seem to be gone: title, error message, datasource.\n. Hi,\n\nI ran into this problem.\n\nTo reproduce:\n1. Create an empty workbook from Excel;\n2. The first and second sheets will be filled by end-users, while the third will be their datasource;\n3. Rename all three sheets;\n4. Fill some data in sheet 3;\n5. Set some cells or columns in sheets 1 and 2 as validated by validation lists from columns in sheet 3;\n6. Save the file;\n7. Update the data in Sheet 3 with a PHP script and save as a new file.\n\nNow open the new workbook with Excel: the cells that were list-validated are now just plain cells. All data validation parameters seem to be gone: title, error message, datasource.\n. ",
    "maxxer": "I've a demo file available on [Dropbox](https://dl.dropboxusercontent.com/u/706934/demo_file_for_issue_332.xls). \nThe tag in that file says _VRU-NAB-1.5.0.2_.\n. I've a demo file available on [Dropbox](https://dl.dropboxusercontent.com/u/706934/demo_file_for_issue_332.xls). \nThe tag in that file says _VRU-NAB-1.5.0.2_.\n. ",
    "tasso85": "Our fix was pretty simple, wrapping the call to the function around a function_exists() check.\n. This just happened to me also using Microsoft Office Excel 2007\n. Our fix was pretty simple, wrapping the call to the function around a function_exists() check.\n. This just happened to me also using Microsoft Office Excel 2007\n. ",
    "iftikhardirv": "I'm generating line chart on my local machine and its working. But when I upload it to live server its not generating chart and gives error on my server I've PHP version 5.2.17.\nPlease help me regards this\n. I'm generating line chart on my local machine and its working. But when I upload it to live server its not generating chart and gives error on my server I've PHP version 5.2.17.\nPlease help me regards this\n. ",
    "pnovotnak": "The script doesn't seem to have a BOM header. The script is called directly, but includes some external files. However, those don't seem to have BOM headers either.\n\nSame issue with Excel7 files. Any pointers on what I need to do to fix would be greatly appreciated.\n. I'll run a grep for those chars in our codebase as well.\nOn Apr 17, 2014 11:53 AM, \"Mark Baker\" notifications@github.com wrote:\n\n> The \"EF BB BF\" is definitely a UTF-8 BOM header; none of the PHPExcel\n> scripts should have any BOM header, but I can double check\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/PHPOffice/PHPExcel/issues/354#issuecomment-40736251\n> .\n\n## \n\n---\n\n_Notice_: The information contained in this message or any attached \ndocument is confidential and intended only for individuals to whom it is \naddressed. If you got this message in error, please inform me immediately \nusing one of the methods above. In some cases, I may ask you to return the \ndocuments at my expense. In general, please simply destroy the information \nat once. Any unauthorized use, distribution, or copying of this information \nis prohibited.\n. The script doesn't seem to have a BOM header. The script is called directly, but includes some external files. However, those don't seem to have BOM headers either.\n\nSame issue with Excel7 files. Any pointers on what I need to do to fix would be greatly appreciated.\n. I'll run a grep for those chars in our codebase as well.\nOn Apr 17, 2014 11:53 AM, \"Mark Baker\" notifications@github.com wrote:\n\n> The \"EF BB BF\" is definitely a UTF-8 BOM header; none of the PHPExcel\n> scripts should have any BOM header, but I can double check\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/PHPOffice/PHPExcel/issues/354#issuecomment-40736251\n> .\n\n## \n\n---\n\n_Notice_: The information contained in this message or any attached \ndocument is confidential and intended only for individuals to whom it is \naddressed. If you got this message in error, please inform me immediately \nusing one of the methods above. In some cases, I may ask you to return the \ndocuments at my expense. In general, please simply destroy the information \nat once. Any unauthorized use, distribution, or copying of this information \nis prohibited.\n. ",
    "aireol": "Can you try http://stackoverflow.com/questions/29131751/phpexcel-return-a-corrupted-binary-file\n. Can you try http://stackoverflow.com/questions/29131751/phpexcel-return-a-corrupted-binary-file\n. ",
    "Suvitruf": "https://stackoverflow.com/questions/34381816/phpexcel-return-a-corrupted-file\n\n`ob_end_clean();` doesn't help for me in this case...\n. https://stackoverflow.com/questions/34381816/phpexcel-return-a-corrupted-file\n\n`ob_end_clean();` doesn't help for me in this case...\n. ",
    "fjbatresv": "There are news about this?. There are news about this?. ",
    "akizor": "Changing application header from\r\n`header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');`\r\nto\r\n`header('Content-Type: application/vnd.ms-excel');`\r\ngave me the possibility to actualy open the excel file and see an error. `Uncaught Error: Class 'ZipArchive' not found in...`. It's an extension error, but manageable. I've setup a global `PHPExcel_Settings::setZipClass(PHPExcel_Settings::PCLZIP);` when firing excel generator to change the zipping method.\r\n\r\nAnyway, another way of making it work was changing from \".xlsx\" to \".xls\". It's because making 'xlsx' required the ZipArchive extension. This [post](https://stackoverflow.com/a/27405077/925058) helped me a lot.. Changing application header from\r\n`header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');`\r\nto\r\n`header('Content-Type: application/vnd.ms-excel');`\r\ngave me the possibility to actualy open the excel file and see an error. `Uncaught Error: Class 'ZipArchive' not found in...`. It's an extension error, but manageable. I've setup a global `PHPExcel_Settings::setZipClass(PHPExcel_Settings::PCLZIP);` when firing excel generator to change the zipping method.\r\n\r\nAnyway, another way of making it work was changing from \".xlsx\" to \".xls\". It's because making 'xlsx' required the ZipArchive extension. This [post](https://stackoverflow.com/a/27405077/925058) helped me a lot.. ",
    "harry-m": "Hi! I've only just got my head into this, but having thought about it, I do think this is an issue if an unsafe deserialization appears elsewhere. It's perhaps not a major issue because there are so many dangerous magic methods out there, but it's good not to be part of the problem. Incidentally, this isn't particularly specific to WordPress - any application using this library could have an unsafe deserialization in it. \n\nThat said, I'm also not sure what the best way is to fix this, beyond just not unlinking in your destructor. Is there any other (non-magic) method in the class that could delete files instead?\n. Hi! I've only just got my head into this, but having thought about it, I do think this is an issue if an unsafe deserialization appears elsewhere. It's perhaps not a major issue because there are so many dangerous magic methods out there, but it's good not to be part of the problem. Incidentally, this isn't particularly specific to WordPress - any application using this library could have an unsafe deserialization in it. \n\nThat said, I'm also not sure what the best way is to fix this, beyond just not unlinking in your destructor. Is there any other (non-magic) method in the class that could delete files instead?\n. ",
    "hazotran": "Thank you. It's work\n. Thank you. It's work\n. ",
    "billlater": "I think, your file was created in Office 2010. Excel 2010 writes \"data validations\" in another place.  I saw  a class PHPExcel_Reader_Excel2007. Class don't reads this place. I  created  the same file in Excel2007 and everything works\n. I think, your file was created in Office 2010. Excel 2010 writes \"data validations\" in another place.  I saw  a class PHPExcel_Reader_Excel2007. Class don't reads this place. I  created  the same file in Excel2007 and everything works\n. ",
    "harvindersingh115": "Things working now, should have read more documentation:\n\n$objReader->setInputEncoding('CP1252');\n- Columns with a price i.e. \"\u00a3321\" are read empty - working using the above encoding method\n- Columns that are empty i.e. \"\" are skipped - not a lot of problem for the time being, but would be nice to see it resolved.\n. Things working now, should have read more documentation:\n\n$objReader->setInputEncoding('CP1252');\n- Columns with a price i.e. \"\u00a3321\" are read empty - working using the above encoding method\n- Columns that are empty i.e. \"\" are skipped - not a lot of problem for the time being, but would be nice to see it resolved.\n. ",
    "peterthomashorn": "I stumbled over this one, too, while trying to read an OpenDocument Spreadsheet with PHPExcel running with PHP 5.5.9. I found out, that there is already an issue and pull request about this: #352 \n. I stumbled over this one, too, while trying to read an OpenDocument Spreadsheet with PHPExcel running with PHP 5.5.9. I found out, that there is already an issue and pull request about this: #352 \n. ",
    "victorjonsson": "Ok, closing this one!\n. Ok, closing this one!\n. ",
    "garygreen": "Whoops, seems I'm using an old version of PHPExcel -- looks like it would work in the new version. Will test.\n. Whoops, seems I'm using an old version of PHPExcel -- looks like it would work in the new version. Will test.\n. ",
    "dele454": "Have you tried rounding the value?\n\nhttp://www.php.net/manual/en/function.round.php\n. :+1: \n. Have you tried rounding the value?\n\nhttp://www.php.net/manual/en/function.round.php\n. :+1: \n. ",
    "duccoder": "Sorry, I want float value, I updated this issue, you can see this\n. @MarkBaker  Sorry, I updated this issue, you can see this, it may be bug\n$workSheet->setCellValue('F8', '=F3-0.03'); //= 7\n$workSheet->setCellValue('F7','=F8-F6'); // = 4 but return 3.999999999999999\n. Yes. Thank you so much\n. I think bug is in method static VLOOKUP\nline 739 to 742 in [LookupRef.php](https://github.com/PHPOffice/PHPExcel/blob/develop/Classes/PHPExcel/Calculation/LookupRef.php)\n\n``` php\nif ((is_numeric($lookup_value) && is_numeric($result)) ||\n    (!is_numeric($lookup_value) && !is_numeric($result))) {\n    return $result;\n}\n```\n\nSo with my example above, $lookup_value = \"M20\" => $result exactly is string(20)\nSo if $result is number so $lookup_value is number?\n. @AdwinTrave I hard code while I 'm waiting for a solution of my problem.\n\n``` php\n//if ((is_numeric($lookup_value) && is_numeric($result)) ||\n//    (!is_numeric($lookup_value) && !is_numeric($result))) {\n    return $result;\n//}\n```\n\nand this return result I need. You can see HLOOKUP function.\n. But if I change \n\n``` php\n$workSheet->setCellValue('F17', '=L8/F3+19'); // = 22\n```\n\n`F18` return TRUE value\n. Yeah. I had to open a `floating poin` issuse before (You suggested I switch to analog computer, but I can't). When work with PHPExcel, I often have trouble with this problem because it produces wrong results. Hopefully there are other way to completely overcome this problem\n. I 've test your lasted commit. It's work well. So this is good solution to problem?\nAnd I don't know why you use `$this->delta = 10^-$setPrecision` instead 0?\n. I understand. Thank you so much\n. Hi Mark.\nThere is a problem with Ubuntu 64-bit. `PHP_INT_SIZE`\n- With Ubuntu 32 bit, `$this->delta = 1.0E-14` => It work well\n- With Ubuntu 64 bit, `$this->delta = 1.0E-16`\n\n``` php\ncase '<=':\n    if (is_numeric($operand1) && is_numeric($operand2)) {\n        $result = ((abs($operand1 - $operand2) < $this->delta) || ($operand1 < $operand2));\n        echo '<pre>';\n        print_r(abs($operand1 - $operand2));\n        exit;\n    } elseif ($useLowercaseFirstComparison) {\n        $result = $this->strcmpLowercaseFirst($operand1, $operand2) <= 0;\n    } else {\n        $result = strcmp($operand1, $operand2) <= 0;\n    }\n    break;\n```\n\nWith input above, I see\n`abs($operand1 - $operand2) = 3.5527136788005E-15` > `1.0E-16` => FALSE.\nSo problem on 64 bit. Please check this\n. Hmm. So I think `$this->delta` should be > 1.0E-14. I' m not sure yet\n. @MarkBaker  Thank your reply, my job need change more string of formula. I think had util function support `rebuildFormularFromTokens`\n\nSo I should manually rebuild like:\n\n``` php\n/**\n * @param array $tokens\n * @return string\n */\npublic static function convertPHPExcelTokensToFormula(array $tokens)\n{\n    $formulaStack = ['='];\n    /** @var \\PHPExcel_Calculation_FormulaToken $token */\n    foreach ($tokens as $token) {\n        switch ($token->getTokenType()) {\n            case \\PHPExcel_Calculation_FormulaToken::TOKEN_TYPE_FUNCTION:\n                $formulaStack[] = $token->getValue();\n                $formulaStack[] = 'Start' === $token->getTokenSubType() ? '(' : ')';\n                break;\n            case \\PHPExcel_Calculation_FormulaToken::TOKEN_TYPE_OPERAND:\n                $value = $token->getValue();\n                if (\\PHPExcel_Calculation_FormulaToken::TOKEN_SUBTYPE_TEXT === $token->getTokenSubType()) {\n                    $value = '\"'.$value.'\"';\n                }\n                $formulaStack[] = $value;\n                break;\n            default:\n                $formulaStack[] = $token->getValue();\n                break;\n            # @TODO implement unit test with more case\n        }\n    }\n\n    return implode('', $formulaStack);\n}\n```\n. Sorry, I want float value, I updated this issue, you can see this\n. @MarkBaker  Sorry, I updated this issue, you can see this, it may be bug\n$workSheet->setCellValue('F8', '=F3-0.03'); //= 7\n$workSheet->setCellValue('F7','=F8-F6'); // = 4 but return 3.999999999999999\n. Yes. Thank you so much\n. I think bug is in method static VLOOKUP\nline 739 to 742 in [LookupRef.php](https://github.com/PHPOffice/PHPExcel/blob/develop/Classes/PHPExcel/Calculation/LookupRef.php)\n\n``` php\nif ((is_numeric($lookup_value) && is_numeric($result)) ||\n    (!is_numeric($lookup_value) && !is_numeric($result))) {\n    return $result;\n}\n```\n\nSo with my example above, $lookup_value = \"M20\" => $result exactly is string(20)\nSo if $result is number so $lookup_value is number?\n. @AdwinTrave I hard code while I 'm waiting for a solution of my problem.\n\n``` php\n//if ((is_numeric($lookup_value) && is_numeric($result)) ||\n//    (!is_numeric($lookup_value) && !is_numeric($result))) {\n    return $result;\n//}\n```\n\nand this return result I need. You can see HLOOKUP function.\n. But if I change \n\n``` php\n$workSheet->setCellValue('F17', '=L8/F3+19'); // = 22\n```\n\n`F18` return TRUE value\n. Yeah. I had to open a `floating poin` issuse before (You suggested I switch to analog computer, but I can't). When work with PHPExcel, I often have trouble with this problem because it produces wrong results. Hopefully there are other way to completely overcome this problem\n. I 've test your lasted commit. It's work well. So this is good solution to problem?\nAnd I don't know why you use `$this->delta = 10^-$setPrecision` instead 0?\n. I understand. Thank you so much\n. Hi Mark.\nThere is a problem with Ubuntu 64-bit. `PHP_INT_SIZE`\n- With Ubuntu 32 bit, `$this->delta = 1.0E-14` => It work well\n- With Ubuntu 64 bit, `$this->delta = 1.0E-16`\n\n``` php\ncase '<=':\n    if (is_numeric($operand1) && is_numeric($operand2)) {\n        $result = ((abs($operand1 - $operand2) < $this->delta) || ($operand1 < $operand2));\n        echo '<pre>';\n        print_r(abs($operand1 - $operand2));\n        exit;\n    } elseif ($useLowercaseFirstComparison) {\n        $result = $this->strcmpLowercaseFirst($operand1, $operand2) <= 0;\n    } else {\n        $result = strcmp($operand1, $operand2) <= 0;\n    }\n    break;\n```\n\nWith input above, I see\n`abs($operand1 - $operand2) = 3.5527136788005E-15` > `1.0E-16` => FALSE.\nSo problem on 64 bit. Please check this\n. Hmm. So I think `$this->delta` should be > 1.0E-14. I' m not sure yet\n. @MarkBaker  Thank your reply, my job need change more string of formula. I think had util function support `rebuildFormularFromTokens`\n\nSo I should manually rebuild like:\n\n``` php\n/**\n * @param array $tokens\n * @return string\n */\npublic static function convertPHPExcelTokensToFormula(array $tokens)\n{\n    $formulaStack = ['='];\n    /** @var \\PHPExcel_Calculation_FormulaToken $token */\n    foreach ($tokens as $token) {\n        switch ($token->getTokenType()) {\n            case \\PHPExcel_Calculation_FormulaToken::TOKEN_TYPE_FUNCTION:\n                $formulaStack[] = $token->getValue();\n                $formulaStack[] = 'Start' === $token->getTokenSubType() ? '(' : ')';\n                break;\n            case \\PHPExcel_Calculation_FormulaToken::TOKEN_TYPE_OPERAND:\n                $value = $token->getValue();\n                if (\\PHPExcel_Calculation_FormulaToken::TOKEN_SUBTYPE_TEXT === $token->getTokenSubType()) {\n                    $value = '\"'.$value.'\"';\n                }\n                $formulaStack[] = $value;\n                break;\n            default:\n                $formulaStack[] = $token->getValue();\n                break;\n            # @TODO implement unit test with more case\n        }\n    }\n\n    return implode('', $formulaStack);\n}\n```\n. ",
    "WanderingZombie": "I've been happily using this for some months\n\n``` json\n    \"repositories\": [\n        {\n            \"type\": \"vcs\",\n            \"url\": \"https://github.com/PHPOffice/PHPExcel\"\n        }\n    ],\n```\n\n``` json\n    \"require\": {\n        \"PHPOffice/PHPExcel\": \"*\"\n    }\n```\n. @MarkBaker for my 2p, you can't please all of the people all of the time.  Your code offering is currently (in my experience anyway using it with PHP 5.3.x, 5.4.x and now 5.5.14) very stable. If you wait until no-one complains about a jump to PHP 5.4, we'll probably be using PHP 6.x.  Even Zend Framework 2 has recently bumped it's minimum requirement from an early PHP 5.3 to a much later 5.3 release.\n\nI would therefore advocate creating a final release that's compatible with PHP 5.2-5.5 and then move on with a newer cleaner code base that requires 5.4 as a minimum.\n. All new development for us is now on PHP 5.6. Unless people using PHP 5.3 and PHPExcel pay you a handsome sum of money to maintain legacy code, move on and make your life easier.  After all, if anyone has to have PHP 5.3 compatibility, they can always fork the 1.x branch and maintain it themselves.\n. I've been happily using this for some months\n\n``` json\n    \"repositories\": [\n        {\n            \"type\": \"vcs\",\n            \"url\": \"https://github.com/PHPOffice/PHPExcel\"\n        }\n    ],\n```\n\n``` json\n    \"require\": {\n        \"PHPOffice/PHPExcel\": \"*\"\n    }\n```\n. @MarkBaker for my 2p, you can't please all of the people all of the time.  Your code offering is currently (in my experience anyway using it with PHP 5.3.x, 5.4.x and now 5.5.14) very stable. If you wait until no-one complains about a jump to PHP 5.4, we'll probably be using PHP 6.x.  Even Zend Framework 2 has recently bumped it's minimum requirement from an early PHP 5.3 to a much later 5.3 release.\n\nI would therefore advocate creating a final release that's compatible with PHP 5.2-5.5 and then move on with a newer cleaner code base that requires 5.4 as a minimum.\n. All new development for us is now on PHP 5.6. Unless people using PHP 5.3 and PHPExcel pay you a handsome sum of money to maintain legacy code, move on and make your life easier.  After all, if anyone has to have PHP 5.3 compatibility, they can always fork the 1.x branch and maintain it themselves.\n. ",
    "travispaul": "@MarkBaker Thanks for considering those of us that aren't using composer yet.\n. @MarkBaker Thanks for considering those of us that aren't using composer yet.\n. ",
    "FlameStorm": "Upvote for this request.\nI need be able to open http://example.com/filename.xls by PHPExcel too.\n\nMy version of this fix is https://github.com/FlameStorm/PHPExcel/commit/0d4a9a4efcb2150314169b471f9158dea9366eeb\nIt needs only 2 times to access the url, when zhibek's version needs 3 times.\n. Upvote for this request.\nI need be able to open http://example.com/filename.xls by PHPExcel too.\n\nMy version of this fix is https://github.com/FlameStorm/PHPExcel/commit/0d4a9a4efcb2150314169b471f9158dea9366eeb\nIt needs only 2 times to access the url, when zhibek's version needs 3 times.\n. ",
    "tinchoz49": "same error!!\n. same error!!\n. ",
    "StorytellerCZ": "The logic here seems to be flawed to me. In my case I have a string lookup value which will return a numeric value, but it will not make it through the test that @fabienzet pointed out. So in my case I just want to return the `$result` that the function has already found. Replacing the entire logic there with just `return $lookup_array[$rowNumber][$returnColumn];` worked for me, but I'm not sure that is the solution for more complex things.\n. @fabienzet Same thing I did :-)\n. The logic here seems to be flawed to me. In my case I have a string lookup value which will return a numeric value, but it will not make it through the test that @fabienzet pointed out. So in my case I just want to return the `$result` that the function has already found. Replacing the entire logic there with just `return $lookup_array[$rowNumber][$returnColumn];` worked for me, but I'm not sure that is the solution for more complex things.\n. @fabienzet Same thing I did :-)\n. ",
    "doofer": "It does not trigger an error but it does **not** register the Autoloader, so it fails with : \n**| Fatal error: Class 'PHPExcel_Shared_String' not found**\nUpon removing the prepend parameter it seems to work fine, my PHP version is **5.2.11** \n. It does not trigger an error but it does **not** register the Autoloader, so it fails with : \n**| Fatal error: Class 'PHPExcel_Shared_String' not found**\nUpon removing the prepend parameter it seems to work fine, my PHP version is **5.2.11** \n. ",
    "Kyaalena": "tengo el mismo error Fatal error: Class 'PHPExcel_Shared_String' not found in \\PHPExcel\\Autoloader.php on line 11 \r\n\r\nline 11 -> PHPExcel_Shared_String::buildCharacterSets(); \r\n\r\nHowever I see that already what they comment in the library, some other suggestion?\r\nclass PHPExcel_Autoloader\r\n{\r\n    /**\r\n     * Register the Autoloader with SPL\r\n     *\r\n     */\r\n    public static function register()\r\n    {\r\n        if (function_exists('__autoload')) {\r\n            // Register any existing autoloader function with SPL, so we don't get any clashes\r\n            spl_autoload_register('__autoload');\r\n            \r\n        }\r\n        // Register ourselves with SPL\r\n        if (version_compare(PHP_VERSION, '5.3.0') >= 0) {\r\n            return spl_autoload_register(array('PHPExcel_Autoloader', 'load'), true, true);\r\n        } else {\r\n            return spl_autoload_register(array('PHPExcel_Autoloader', 'load'));\r\n        }\r\n    } . tengo el mismo error Fatal error: Class 'PHPExcel_Shared_String' not found in \\PHPExcel\\Autoloader.php on line 11 \r\n\r\nline 11 -> PHPExcel_Shared_String::buildCharacterSets(); \r\n\r\nHowever I see that already what they comment in the library, some other suggestion?\r\nclass PHPExcel_Autoloader\r\n{\r\n    /**\r\n     * Register the Autoloader with SPL\r\n     *\r\n     */\r\n    public static function register()\r\n    {\r\n        if (function_exists('__autoload')) {\r\n            // Register any existing autoloader function with SPL, so we don't get any clashes\r\n            spl_autoload_register('__autoload');\r\n            \r\n        }\r\n        // Register ourselves with SPL\r\n        if (version_compare(PHP_VERSION, '5.3.0') >= 0) {\r\n            return spl_autoload_register(array('PHPExcel_Autoloader', 'load'), true, true);\r\n        } else {\r\n            return spl_autoload_register(array('PHPExcel_Autoloader', 'load'));\r\n        }\r\n    } . ",
    "zomberg": "I known that column addresses start at 0.\n\nBug with change $startCell coordinates after $endCell created.\nPlease, see code comments above.\n. I use default settings. \nWhen i enter in getCellByColumnAndRow() with debuger value for:\n\n``` php\n$endCell = $sheet->getCellByColumnAndRow(2, 1);\n```\n\nwas returned from Memory cache.\n. I known that column addresses start at 0.\n\nBug with change $startCell coordinates after $endCell created.\nPlease, see code comments above.\n. I use default settings. \nWhen i enter in getCellByColumnAndRow() with debuger value for:\n\n``` php\n$endCell = $sheet->getCellByColumnAndRow(2, 1);\n```\n\nwas returned from Memory cache.\n. ",
    "razonklnbd": "i also noticed that Method $sheet->getCoordinate() return wrong coordinates\n. in my case, i noticed that it happen when any cell has formulla\n. i also noticed that Method $sheet->getCoordinate() return wrong coordinates\n. in my case, i noticed that it happen when any cell has formulla\n. ",
    "SailorMax": "@MarkBaker So, cache is broken and broke the library. 3 years (from 1.7.9). Any plans to fix it?\n\nSample of confusing behavior:\n\n``` php\n$cell_1 = $worksheet->setCellValueExplicitByColumnAndRow(0, 2, \"col1\", PHPExcel_Cell_DataType::TYPE_STRING, true);\n$cell_2 = $worksheet->setCellValueExplicitByColumnAndRow(1, 2, \"col2\", PHPExcel_Cell_DataType::TYPE_STRING, true);\n$cell_3 = $worksheet->setCellValueExplicitByColumnAndRow(2, 2, \"col3\", PHPExcel_Cell_DataType::TYPE_STRING, true);\n\n$worksheet->getStyleByColumnAndRow(0, 2)->getFont()->setBold(true);\n$cell_2->setXfIndex( $cell_1->getXfIndex() );\n$cell_3->setXfIndex( $cell_1->getXfIndex() );\n```\n\nExpected: 3 bold cells: **col1**, **col2**, **col3**\nActual: 3 bold cells: **col3**, **col2**, **col3**\n\nProblem in setXfIndex() and setCellValueExplicitByColumnAndRow().\nThey call $this->notifyCacheController(),\n which call $this->parent->updateCacheData($this);\n which call CacheBase::updateCacheData($cell)\n which call $cell->getCoordinate()\n which call CacheBase::getCurrentAddress()\n  ^= here we lost the cell and return global $this->currentObjectID\n which was rewrited by previous $this->notifyCacheController()\n which also call CacheBase::addCacheData()\n which rewrite $currentObjectID\n\nWhy someone moved cell coordinates to Cache - for me question :)\nLooks like it has to be returned to Cell, but what does it mean for all library, I don't know => hope @MarkBaker or someone similar (who know the library) will fix it in near future.\n\nthank you.\n\nP.S. \"Are you using any form of cell caching?\" - Is it possible to turn cache off? I also using the library with default settings.\n. @MarkBaker Can you give the sample of code, where we lost something (memory?) if we add to `PHPExcel_Cell` property `cellAddress` as string (like \"A1\"), or 2 integers, and will use it for `PHPExcel_Cell::getCoordinate()`? On which operation current cache save the memory?\n. I can't fell free to change function `PHPExcel_Cell::getCoordinate()` because I don't know for which operation it was optimized by using worksheet cache. Why it start use worksheet cursor, instead of local property with its address.\nYou said:\n\n> otherwise caching becomes impossible, and there is no other way to save memory\n\nWhere yo trying to save memory? Sample of code, which I have to check after my modifies?\n. But address of the cell was moved to `PHPExcel_CachedObjectStorage_CacheBase` only in version 1.7.9 (year 2013). And I interested only about this move. What was optimized by this move?\n. I understood. Thank you.\n\nDon't thought that PHP take so many memory even for integers...\nWhat about some kind of buffer to remember addresses of last used 100 cells, for example? To fix upper samples. No record in buffer -- use current method + save new record in buffer. What do you think?\n. @MarkBaker So, cache is broken and broke the library. 3 years (from 1.7.9). Any plans to fix it?\n\nSample of confusing behavior:\n\n``` php\n$cell_1 = $worksheet->setCellValueExplicitByColumnAndRow(0, 2, \"col1\", PHPExcel_Cell_DataType::TYPE_STRING, true);\n$cell_2 = $worksheet->setCellValueExplicitByColumnAndRow(1, 2, \"col2\", PHPExcel_Cell_DataType::TYPE_STRING, true);\n$cell_3 = $worksheet->setCellValueExplicitByColumnAndRow(2, 2, \"col3\", PHPExcel_Cell_DataType::TYPE_STRING, true);\n\n$worksheet->getStyleByColumnAndRow(0, 2)->getFont()->setBold(true);\n$cell_2->setXfIndex( $cell_1->getXfIndex() );\n$cell_3->setXfIndex( $cell_1->getXfIndex() );\n```\n\nExpected: 3 bold cells: **col1**, **col2**, **col3**\nActual: 3 bold cells: **col3**, **col2**, **col3**\n\nProblem in setXfIndex() and setCellValueExplicitByColumnAndRow().\nThey call $this->notifyCacheController(),\n which call $this->parent->updateCacheData($this);\n which call CacheBase::updateCacheData($cell)\n which call $cell->getCoordinate()\n which call CacheBase::getCurrentAddress()\n  ^= here we lost the cell and return global $this->currentObjectID\n which was rewrited by previous $this->notifyCacheController()\n which also call CacheBase::addCacheData()\n which rewrite $currentObjectID\n\nWhy someone moved cell coordinates to Cache - for me question :)\nLooks like it has to be returned to Cell, but what does it mean for all library, I don't know => hope @MarkBaker or someone similar (who know the library) will fix it in near future.\n\nthank you.\n\nP.S. \"Are you using any form of cell caching?\" - Is it possible to turn cache off? I also using the library with default settings.\n. @MarkBaker Can you give the sample of code, where we lost something (memory?) if we add to `PHPExcel_Cell` property `cellAddress` as string (like \"A1\"), or 2 integers, and will use it for `PHPExcel_Cell::getCoordinate()`? On which operation current cache save the memory?\n. I can't fell free to change function `PHPExcel_Cell::getCoordinate()` because I don't know for which operation it was optimized by using worksheet cache. Why it start use worksheet cursor, instead of local property with its address.\nYou said:\n\n> otherwise caching becomes impossible, and there is no other way to save memory\n\nWhere yo trying to save memory? Sample of code, which I have to check after my modifies?\n. But address of the cell was moved to `PHPExcel_CachedObjectStorage_CacheBase` only in version 1.7.9 (year 2013). And I interested only about this move. What was optimized by this move?\n. I understood. Thank you.\n\nDon't thought that PHP take so many memory even for integers...\nWhat about some kind of buffer to remember addresses of last used 100 cells, for example? To fix upper samples. No record in buffer -- use current method + save new record in buffer. What do you think?\n. ",
    "dirtyrobinson": "I know its almost been a year since this was asked but I'm wondering is it possible to set the view area when the file is opened?\n. I'm really sorry, I'm not sure how I overlooked that in the documentation.  Anyways, I quickly ran into another issue.  The issue is freezing the first row of the worksheet.  If I freeze the first row using:\n\n```\n$objPHPExcel->getActiveSheet()->freezePane('A2');\n```\n\nThen the selected cell is A2 but if I comment out this line then the selected code is the one set using setSelectedCell('G340).\n\nIs this there a way around this or is that just how it is?\n. I know its almost been a year since this was asked but I'm wondering is it possible to set the view area when the file is opened?\n. I'm really sorry, I'm not sure how I overlooked that in the documentation.  Anyways, I quickly ran into another issue.  The issue is freezing the first row of the worksheet.  If I freeze the first row using:\n\n```\n$objPHPExcel->getActiveSheet()->freezePane('A2');\n```\n\nThen the selected cell is A2 but if I comment out this line then the selected code is the one set using setSelectedCell('G340).\n\nIs this there a way around this or is that just how it is?\n. ",
    "CasperLaiTW": "Thank you, @MarkBaker \nBut I have no idea about codepage 21010, I export the excel from other system.\n. @BobBarkre hope to helpful.\n\n[passbookInq.xls](https://www.dropbox.com/s/fubuqla710n64iz/passbookInq.xls)\n. Thank you, @MarkBaker \nBut I have no idea about codepage 21010, I export the excel from other system.\n. @BobBarkre hope to helpful.\n\n[passbookInq.xls](https://www.dropbox.com/s/fubuqla710n64iz/passbookInq.xls)\n. ",
    "BobBarkre": "It looks like something is being re-parsed: 21010 = 0x5212, which kinda looks like the windows 1252.\n\n@CasperLaiTW can you share the file?\n. @CasperLaiTW took a look at the file -- excel appears to treat this as UTF16LE (code page 1200)\n. It looks like something is being re-parsed: 21010 = 0x5212, which kinda looks like the windows 1252.\n\n@CasperLaiTW can you share the file?\n. @CasperLaiTW took a look at the file -- excel appears to treat this as UTF16LE (code page 1200)\n. ",
    "scannerGT": "As a user of this library, I can only say that for me, cutting off from the the old code, and thus improve the package would be great.\n. As a user of this library, I can only say that for me, cutting off from the the old code, and thus improve the package would be great.\n. ",
    "davidjdixon": "Can I just say that using the kind of stats shown above to indicate php version popularity is complete folly. These stats ONLY show the number of websites up and running. 99.9% of these websites will be complete websites with no ongoing development so why should the fact that these website not be able to run the latest version of a library matter?\n\nFocus should be on websites in development not sites already released, and trying to assume a correlation exists between the 2 will be fruitless, especially since 5.2's long usage history (eg 3 year gap between 5.2 and 5.3, many popular linux distros not adding default 5.3 installs for a good 1-2 years after release).\n\nGranted shared hosting is an issue as they are often slower to adopt new software, however that become less of an issue since 2011 when the PHP group put very hard limits on minor version lifetime.\n\nI'm not saying what version of php to set as minimum, what I am saying however is the justification given so far is not logical and focuses on very spurious statistics.\n. Can I just say that using the kind of stats shown above to indicate php version popularity is complete folly. These stats ONLY show the number of websites up and running. 99.9% of these websites will be complete websites with no ongoing development so why should the fact that these website not be able to run the latest version of a library matter?\n\nFocus should be on websites in development not sites already released, and trying to assume a correlation exists between the 2 will be fruitless, especially since 5.2's long usage history (eg 3 year gap between 5.2 and 5.3, many popular linux distros not adding default 5.3 installs for a good 1-2 years after release).\n\nGranted shared hosting is an issue as they are often slower to adopt new software, however that become less of an issue since 2011 when the PHP group put very hard limits on minor version lifetime.\n\nI'm not saying what version of php to set as minimum, what I am saying however is the justification given so far is not logical and focuses on very spurious statistics.\n. ",
    "jmleroux": "> So I wish people would only use supported versions of PHP, then we'd be able to say PHP 5.4 as a minimum version of PHP\n\n:+1: \n\n> The lack of backward compatibility with the version 1 branch is the biggest drawback, but does make for a clean break from a lot of the legacy problems, and allows me to clean up some of the incompatibilities as well.\n\n:+1: BC-breaks are inevitable, and the 2.0 version is the perfect time to introduce them.\nI look forward for v2.\nThanks for the work.\n. > So I wish people would only use supported versions of PHP, then we'd be able to say PHP 5.4 as a minimum version of PHP\n\n:+1: \n\n> The lack of backward compatibility with the version 1 branch is the biggest drawback, but does make for a clean break from a lot of the legacy problems, and allows me to clean up some of the incompatibilities as well.\n\n:+1: BC-breaks are inevitable, and the 2.0 version is the perfect time to introduce them.\nI look forward for v2.\nThanks for the work.\n. ",
    "KnightAR": "I've recently ran into this project after being stuck using Spreadsheet_Excel_Writer for the past few years looking for a possible replacement so I may generate proper .xlsx files so I thought i'd throw in my 2 cents. My thought is that 5.2 is just too outdated to support anymore so I agree a minimal version should be upped as 5.3 is a good version to support as the majority of major features happens starting at 5.3. \n. I've recently ran into this project after being stuck using Spreadsheet_Excel_Writer for the past few years looking for a possible replacement so I may generate proper .xlsx files so I thought i'd throw in my 2 cents. My thought is that 5.2 is just too outdated to support anymore so I agree a minimal version should be upped as 5.3 is a good version to support as the majority of major features happens starting at 5.3. \n. ",
    "flack": "@MarkBaker just FYI: PEAR components have been available on composer & gibthub for a while now: \n\nhttps://github.com/pear/OLE\n\nI don't know how maintained they are, but it might be worth a try to send them a PR with some of your changes and see what happens \n. @MarkBaker just FYI: PEAR components have been available on composer & gibthub for a while now: \n\nhttps://github.com/pear/OLE\n\nI don't know how maintained they are, but it might be worth a try to send them a PR with some of your changes and see what happens \n. ",
    "siwinski": "Upstream has this text @ http://pear.php.net/package/OLE :\n\n> This package is not maintained, if you would like to take over please go to [this page](http://pear.php.net/manual/en/newmaint.takingover.php).\n\nI'm not a license expert, but can all the OLE files (that were originally taken from the PEAR OLE project and modified for this library) have their license headers changed to match the rest of this library's license?  This would make the fork of the PEAR OLE package apparent and should bypass the \"no bundled libraries\" I need to conform to downstream when trying to package for Fedora/EPEL.\n. Upstream has this text @ http://pear.php.net/package/OLE :\n\n> This package is not maintained, if you would like to take over please go to [this page](http://pear.php.net/manual/en/newmaint.takingover.php).\n\nI'm not a license expert, but can all the OLE files (that were originally taken from the PEAR OLE project and modified for this library) have their license headers changed to match the rest of this library's license?  This would make the fork of the PEAR OLE package apparent and should bypass the \"no bundled libraries\" I need to conform to downstream when trying to package for Fedora/EPEL.\n. ",
    "capile": "Worth mentioning, this is a great project \u2014 I'd be glad to help if possible.\n\nThanks!\n. Still focusing the HTML Writer support, the styles generated are incompatible with the HTML structure used: at the  style element you set column widths to col.colX while the table structure used td with the class as .columnX\n\nAnother issue: setting the td width has no apparently effect, leaving the HTML cells plainly different than the Excel or PDF versions \u2014 but if you switch it to `min-width` then you have a fully compatible layout. Both these updates are at the commit https://github.com/capile/PHPExcel/commit/4673d188fd0fdc9ab9ce9f75ddcde9f962528a34 available at this pull request.\n\nCheers,\n\nGuilherme Capil\u00e9\n. Oops, sorry, I was working on a outdated copy \u2014 this issue was fixed 10 days ago: https://github.com/PHPOffice/PHPExcel/commit/5e703760187314e814d09af92a8dae144caaa134\n\nI'll close this issue, since it's not a bug anymore.\n\nCheers,\n\nGuilherme Capil\u00e9\n. Worth mentioning, this is a great project \u2014 I'd be glad to help if possible.\n\nThanks!\n. Still focusing the HTML Writer support, the styles generated are incompatible with the HTML structure used: at the  style element you set column widths to col.colX while the table structure used td with the class as .columnX\n\nAnother issue: setting the td width has no apparently effect, leaving the HTML cells plainly different than the Excel or PDF versions \u2014 but if you switch it to `min-width` then you have a fully compatible layout. Both these updates are at the commit https://github.com/capile/PHPExcel/commit/4673d188fd0fdc9ab9ce9f75ddcde9f962528a34 available at this pull request.\n\nCheers,\n\nGuilherme Capil\u00e9\n. Oops, sorry, I was working on a outdated copy \u2014 this issue was fixed 10 days ago: https://github.com/PHPOffice/PHPExcel/commit/5e703760187314e814d09af92a8dae144caaa134\n\nI'll close this issue, since it's not a bug anymore.\n\nCheers,\n\nGuilherme Capil\u00e9\n. ",
    "binli99": "Dear Progi1984,\n\nCould you please tell when this issue can be fixed? Thanks!\nOur web application is really affected by this issue. \n\nIn the page https://phpexcel.codeplex.com/, I notice that in the plan of PHPExcel 2.0, formula calculation Engine will be completely rewritten, to solve formula related issues. When will this release come out?\n\nThanks,\nBin\n. Dear Progi1984,\n\nCould you please tell when this issue can be fixed? Thanks!\nOur web application is really affected by this issue. \n\nIn the page https://phpexcel.codeplex.com/, I notice that in the plan of PHPExcel 2.0, formula calculation Engine will be completely rewritten, to solve formula related issues. When will this release come out?\n\nThanks,\nBin\n. ",
    "louking": "Thanks.  Does latest develop branch already have fix for garbled data after\nurl for hyperlink?\n\nOn Tue, Aug 5, 2014 at 8:02 PM, Mark Baker notifications@github.com wrote:\n\n> Please see latest develop branch using th tags in thead rather than td\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/PHPOffice/PHPExcel/issues/414#issuecomment-51277064.\n. I haven't tested yet, but I want to get this response to you quickly -- I\nnotice the editor you are using now seems to treat tab differently than\nwhat was used before, e.g., see\nhttps://github.com/PHPOffice/PHPExcel/commit/bdb8b501563a4c35c78ede20130a47b7139bb796\n.  The indenting looks different now.\n\nOn Wed, Aug 6, 2014 at 3:36 AM, Mark Baker notifications@github.com wrote:\n\n> Yes it does - 780cb74\n> https://github.com/PHPOffice/PHPExcel/commit/780cb7478209b82db236cb718f20f1e7850b3d5b\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/PHPOffice/PHPExcel/issues/414#issuecomment-51302713.\n. I have verified thead cells are handled properly now, and I confirmed URL behavior in this commit as well.  Thanks. \n\nNot sure your process, so I'll let you close the issue.\n. Thanks.  Does latest develop branch already have fix for garbled data after\nurl for hyperlink?\n\nOn Tue, Aug 5, 2014 at 8:02 PM, Mark Baker notifications@github.com wrote:\n\n> Please see latest develop branch using th tags in thead rather than td\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/PHPOffice/PHPExcel/issues/414#issuecomment-51277064.\n. I haven't tested yet, but I want to get this response to you quickly -- I\nnotice the editor you are using now seems to treat tab differently than\nwhat was used before, e.g., see\nhttps://github.com/PHPOffice/PHPExcel/commit/bdb8b501563a4c35c78ede20130a47b7139bb796\n.  The indenting looks different now.\n\nOn Wed, Aug 6, 2014 at 3:36 AM, Mark Baker notifications@github.com wrote:\n\n> Yes it does - 780cb74\n> https://github.com/PHPOffice/PHPExcel/commit/780cb7478209b82db236cb718f20f1e7850b3d5b\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/PHPOffice/PHPExcel/issues/414#issuecomment-51302713.\n. I have verified thead cells are handled properly now, and I confirmed URL behavior in this commit as well.  Thanks. \n\nNot sure your process, so I'll let you close the issue.\n. ",
    "roeycohen": "You're right, i've fixed my sample code but still things doesn't work.\n\nThe whole point of the test case is to show that without caching it is not possible to create sheets larger than 2MB, but when you turn caching on it should work - which is not...\n. Hi,\n\nI've changed my test to monitor the memory peak. The results were quite surprising:\n1. cache_in_memory_serialized & cache_to_phpTemp required MORE memory than cache_in_memory (the default).\n2. cache_in_memory_gzip required less (but not much less).\n\nDid you try running your test under php 5.5? this version has all kind of memory optimizations that might make some of the caching options Infelicitous...\n. Hi Mark, Thank you for your comments... now i can be sure i'm not hallucinating :)\nand it's not a war... just trying to make this excellent library better.\n\nso, that just leaves me with the question of why each method (that doesn't use the RAM) requires different amount of memory? what's the difference between SQLite3 and a temp file? how come the cache doesn't reduce the ram usage to 10%?\n\nalso, it can be interesting to write a writer that sends the data directly to stream instead of keeping the entire structure in memory.\n. I guess this is a closed issue, thank you mark for your time :+1: \n. You're right, i've fixed my sample code but still things doesn't work.\n\nThe whole point of the test case is to show that without caching it is not possible to create sheets larger than 2MB, but when you turn caching on it should work - which is not...\n. Hi,\n\nI've changed my test to monitor the memory peak. The results were quite surprising:\n1. cache_in_memory_serialized & cache_to_phpTemp required MORE memory than cache_in_memory (the default).\n2. cache_in_memory_gzip required less (but not much less).\n\nDid you try running your test under php 5.5? this version has all kind of memory optimizations that might make some of the caching options Infelicitous...\n. Hi Mark, Thank you for your comments... now i can be sure i'm not hallucinating :)\nand it's not a war... just trying to make this excellent library better.\n\nso, that just leaves me with the question of why each method (that doesn't use the RAM) requires different amount of memory? what's the difference between SQLite3 and a temp file? how come the cache doesn't reduce the ram usage to 10%?\n\nalso, it can be interesting to write a writer that sends the data directly to stream instead of keeping the entire structure in memory.\n. I guess this is a closed issue, thank you mark for your time :+1: \n. ",
    "mohs8421": "using something like this:\nPHPExcel_Settings::setCacheStorageMethod(PHPExcel_CachedObjectStorageFactory::cache_to_phpTemp);\nor\nPHPExcel_Settings::setCacheStorageMethod(PHPExcel_CachedObjectStorageFactory::cache_in_memory_gzip);\ndoes not really help solving the problem.\n. no, had a similar problem, but I was able to find a smaller scale solution for my task (converting a similary large xlsx to csv) which is better for further processing, please help improving this github project: https://github.com/enchance/xlsx2csv\n. using something like this:\nPHPExcel_Settings::setCacheStorageMethod(PHPExcel_CachedObjectStorageFactory::cache_to_phpTemp);\nor\nPHPExcel_Settings::setCacheStorageMethod(PHPExcel_CachedObjectStorageFactory::cache_in_memory_gzip);\ndoes not really help solving the problem.\n. no, had a similar problem, but I was able to find a smaller scale solution for my task (converting a similary large xlsx to csv) which is better for further processing, please help improving this github project: https://github.com/enchance/xlsx2csv\n. ",
    "jjrobinson": "Any idea if these cell cache methods can help deal with a 170MB xlsx file.  :-)\n. ok, that is what I was afraid of.  Thank you for the feedback.\n. Very true.  My 170MB file is a massive person registry with some demographic information. ~740k rows and 30 columns, no columns larger than 32 characters.\n\nI haven't yet investigated tuning apache / php and the allocated memory because my live site will be on a shared hosting environment where I likely don't have the ability to tune Apache / php.  My dev system has 16GB RAM and I can tune it however I like, but that would just be a waste of time if I do not mimic my live production environment.\n\nThank you very much for your responses and assistance.  I do plan to investigate this library once I get to the data import feature of my project.\n. Any idea if these cell cache methods can help deal with a 170MB xlsx file.  :-)\n. ok, that is what I was afraid of.  Thank you for the feedback.\n. Very true.  My 170MB file is a massive person registry with some demographic information. ~740k rows and 30 columns, no columns larger than 32 characters.\n\nI haven't yet investigated tuning apache / php and the allocated memory because my live site will be on a shared hosting environment where I likely don't have the ability to tune Apache / php.  My dev system has 16GB RAM and I can tune it however I like, but that would just be a waste of time if I do not mimic my live production environment.\n\nThank you very much for your responses and assistance.  I do plan to investigate this library once I get to the data import feature of my project.\n. ",
    "hooverweb": "Oh ok, thanks.\n. Oh ok, thanks.\n. ",
    "jumoel": "I agree: What is returned does not and should not depend in any way on the type of what is being looked for. The [documentation](http://office.microsoft.com/en-us/excel-help/vlookup-HP005209335.aspx) also doesn't mention anything about this.\n\nThe behaviour of `VLOOKUP` with this patch is now also matching the behaviour of `HLOOKUP`.\n. Hadn't seen #423, which is the exact same fix.\n. I agree: What is returned does not and should not depend in any way on the type of what is being looked for. The [documentation](http://office.microsoft.com/en-us/excel-help/vlookup-HP005209335.aspx) also doesn't mention anything about this.\n\nThe behaviour of `VLOOKUP` with this patch is now also matching the behaviour of `HLOOKUP`.\n. Hadn't seen #423, which is the exact same fix.\n. ",
    "8823-scholar": ":+1: \n. :+1: \n. ",
    "umpirsky": "Would be nice to tag/release `1.8.1` with this fix in place so we don't have to depend on `master`.\n. Would be nice to tag/release `1.8.1` with this fix in place so we don't have to depend on `master`.\n. ",
    "danielocdh": "Ouch, took me a while to figure the problem was vlookup in a complex document and I had the https://phpexcel.codeplex.com/ version without this fix. Glad I found this post fast after all that time, ty.\n. I understand, I was also surprised when I saw this.\nUsing the DATE() function was my suggestion too, thanks for answering.\n. Ouch, took me a while to figure the problem was vlookup in a complex document and I had the https://phpexcel.codeplex.com/ version without this fix. Glad I found this post fast after all that time, ty.\n. I understand, I was also surprised when I saw this.\nUsing the DATE() function was my suggestion too, thanks for answering.\n. ",
    "taylorren": " This issue is somehow resolved. I forgot to add: \n\n```\n        $writer->setIncludeCharts(true);\n```\n\nAnd the chart data is not saved into the final output. \n\nWe can close this issue. I will raise another issue. \n. ![ashampoo_snap_2014 08 20_07h39m05s_002_microsoft excel](https://cloud.githubusercontent.com/assets/3853711/3974766/1238cc0e-27fa-11e4-8876-de603aa52514.png)\n\nThe error message dialog when trying to open an Excel 2013 file with a pie chart. Basically it says:\n\n```\nSome contents in output.xlsx are errorneous. Shall we try to recover? If you trust this file, click \"Yes\". \n```\n\nAfter clicking YES, a error log will be filed, saying \"Component /xl/drawings/drawing1.xml\", which is the pie chart, has been deleted from the file. The rest of the file can still be opened. \n. https://phpexcel.codeplex.com/workitem/20399\n\nDid a search in Google. Possible duplicate issue as the link above.\n.  This issue is somehow resolved. I forgot to add: \n\n```\n        $writer->setIncludeCharts(true);\n```\n\nAnd the chart data is not saved into the final output. \n\nWe can close this issue. I will raise another issue. \n. ![ashampoo_snap_2014 08 20_07h39m05s_002_microsoft excel](https://cloud.githubusercontent.com/assets/3853711/3974766/1238cc0e-27fa-11e4-8876-de603aa52514.png)\n\nThe error message dialog when trying to open an Excel 2013 file with a pie chart. Basically it says:\n\n```\nSome contents in output.xlsx are errorneous. Shall we try to recover? If you trust this file, click \"Yes\". \n```\n\nAfter clicking YES, a error log will be filed, saying \"Component /xl/drawings/drawing1.xml\", which is the pie chart, has been deleted from the file. The rest of the file can still be opened. \n. https://phpexcel.codeplex.com/workitem/20399\n\nDid a search in Google. Possible duplicate issue as the link above.\n. ",
    "lode": "@taylorren, in case you were still wondering (I was), it is a bug in the example code. You should not use `PHPExcel_Chart_DataSeries::GROUPING_STANDARD` for pie charts, see https://github.com/PHPOffice/PHPExcel/pull/435.\n. :+1: I was just about to start a PR myself. Would love to see this fixed.\n. @taylorren, in case you were still wondering (I was), it is a bug in the example code. You should not use `PHPExcel_Chart_DataSeries::GROUPING_STANDARD` for pie charts, see https://github.com/PHPOffice/PHPExcel/pull/435.\n. :+1: I was just about to start a PR myself. Would love to see this fixed.\n. ",
    "warden1975": "Can anyone confirm that the bugfix did work? I just tried downloading the version release 1.8.1 but it doesn't seem working. Thanks in advance.\n. Can anyone confirm that the bugfix did work? I just tried downloading the version release 1.8.1 but it doesn't seem working. Thanks in advance.\n. ",
    "fiero300": "Hi, I have the same problem, someone solve this?, help please.\n. Hi, I have the same problem, someone solve this?, help please.\n. ",
    "necorobsd": "Same problem... https://github.com/affinitybridge/phpexcel/blob/master/Tests/33chartcreate-pie.php not working too.. Same problem... https://github.com/affinitybridge/phpexcel/blob/master/Tests/33chartcreate-pie.php not working too.. ",
    "axonaris": "Unfortunately setting PlotGrouping to NULL (or any other groupping type) doesn't help in **Excel 2016** (Office 365). Still error when opening file with pie chart.. Unfortunately setting PlotGrouping to NULL (or any other groupping type) doesn't help in **Excel 2016** (Office 365). Still error when opening file with pie chart.. ",
    "ThaDafinser": "@MarkBaker @pmeth got the same issue. Can we expect a release soon? \n\nAny parts we can help to get a release out?\n. @MarkBaker @pmeth got the same issue. Can we expect a release soon? \n\nAny parts we can help to get a release out?\n. ",
    "tomzx": "1.8.1 has been released May 1st, 2015.\n\nThis can be closed.\n. Duplicated by #716.\n. @SamHaitai Support for charts is not complete as of 1.8.1. If you are using certain features of the specification which are not implemented, you will end up with documents where the charts are invalid and thus Excel must remove them for the document to open up.\n\nAs of now there's only limited support for charts, so there's not any workaround for this.\n. I've been using 1.8.1 with PHP7 without any issues so far. I'm not using jpgraph nor any pdf rendering libraries though.\n\nIf you want more specific details about PHP7, I think it would be great to specify which features of PHPExcel you're making use of.\n. Duplicate of #719.\n. 1.8.1 has been released May 1st, 2015.\n\nThis can be closed.\n. Duplicated by #716.\n. @SamHaitai Support for charts is not complete as of 1.8.1. If you are using certain features of the specification which are not implemented, you will end up with documents where the charts are invalid and thus Excel must remove them for the document to open up.\n\nAs of now there's only limited support for charts, so there's not any workaround for this.\n. I've been using 1.8.1 with PHP7 without any issues so far. I'm not using jpgraph nor any pdf rendering libraries though.\n\nIf you want more specific details about PHP7, I think it would be great to specify which features of PHPExcel you're making use of.\n. Duplicate of #719.\n. ",
    "ddeboer": "Oops!\n. Oops!\n. ",
    "matmattia": "The same problem exists with PHPExcel 1.8.1.\n. The same problem exists with PHPExcel 1.8.1.\n. ",
    "Synchro": "That change does fix this problem for me. There's [a separate problem in LibreOffice](https://bugs.documentfoundation.org/show_bug.cgi?id=82135) caused by this bug that means it's reluctant to recalculate such formulae. Should you want a test case, I used this to demo the bug:\n\n``` php\n<?php\nrequire 'includes/vendor/autoload.php';\nPHPExcel_Cell::setValueBinder(new PHPExcel_Cell_AdvancedValueBinder());\n$PHPExcel = new PHPExcel;\n$PHPExcel->removeSheetByIndex(0);\n$sheet1 = $PHPExcel->createSheet();\n$sheet2 = $PHPExcel->createSheet();\n$sheet1->setTitle('sheet1');\n$sheet2->setTitle('sheet2');\n$sheet2->setCellValue('A1', 123);\n$sheet1->setCellValue('A1', \"='sheet2'!A1\");\n$objWriter = PHPExcel_IOFactory::createWriter($PHPExcel, 'Excel2007');\n$objWriter->save('exceltest.xlsx');\n```\n. The failures in this build don't appear to have anything to do with this PR. Could someone trigger  a rebuild please?\n. Hm. That didn't help - looks like the tests are a bit borked, failing over Travis config issues rather than anything in the code. Also noticed there's no PHP 7 test config.\n. You just need to set the MIME type correctly so the browser will handle it as a download. Try doing this before calling `save`:\r\n\r\n    header('Content-Type: application/vnd.ms-excel');. I don't see a problem here. Excel is a binary format that's not going to be readable in a plain-text context, so that kind of output is exactly what I'd expect to see. If it was going to show a pretty spreadsheet, the test tool would need to know how to render Excel files, which is not a small task. If you save the output and try to open it in Excel, does it work? If so, you don't have a problem.. That change does fix this problem for me. There's [a separate problem in LibreOffice](https://bugs.documentfoundation.org/show_bug.cgi?id=82135) caused by this bug that means it's reluctant to recalculate such formulae. Should you want a test case, I used this to demo the bug:\n\n``` php\n<?php\nrequire 'includes/vendor/autoload.php';\nPHPExcel_Cell::setValueBinder(new PHPExcel_Cell_AdvancedValueBinder());\n$PHPExcel = new PHPExcel;\n$PHPExcel->removeSheetByIndex(0);\n$sheet1 = $PHPExcel->createSheet();\n$sheet2 = $PHPExcel->createSheet();\n$sheet1->setTitle('sheet1');\n$sheet2->setTitle('sheet2');\n$sheet2->setCellValue('A1', 123);\n$sheet1->setCellValue('A1', \"='sheet2'!A1\");\n$objWriter = PHPExcel_IOFactory::createWriter($PHPExcel, 'Excel2007');\n$objWriter->save('exceltest.xlsx');\n```\n. The failures in this build don't appear to have anything to do with this PR. Could someone trigger  a rebuild please?\n. Hm. That didn't help - looks like the tests are a bit borked, failing over Travis config issues rather than anything in the code. Also noticed there's no PHP 7 test config.\n. You just need to set the MIME type correctly so the browser will handle it as a download. Try doing this before calling `save`:\r\n\r\n    header('Content-Type: application/vnd.ms-excel');. I don't see a problem here. Excel is a binary format that's not going to be readable in a plain-text context, so that kind of output is exactly what I'd expect to see. If it was going to show a pretty spreadsheet, the test tool would need to know how to render Excel files, which is not a small task. If you save the output and try to open it in Excel, does it work? If so, you don't have a problem.. ",
    "bonswouar": "Hello,\nAny news about the `1.8.1` release ?\nWe're currently using your library with [liuggio/ExcelBundle](https://github.com/liuggio/ExcelBundle), and having the `Undefined variable: options` problem.\nWould be nice to have a new stable version tag to be able to make a PR on this Bundle.\nThank you for your work !\n. Hello,\nAny news about the `1.8.1` release ?\nWe're currently using your library with [liuggio/ExcelBundle](https://github.com/liuggio/ExcelBundle), and having the `Undefined variable: options` problem.\nWould be nice to have a new stable version tag to be able to make a PR on this Bundle.\nThank you for your work !\n. ",
    "quimcalpe": "@MarkBaker Is 1.8.1 going to happen? Do you recommend to use master or develop branches instead?\n\nThanks\n. @MarkBaker Is 1.8.1 going to happen? Do you recommend to use master or develop branches instead?\n\nThanks\n. ",
    "GreeKatrina": "I am getting this issue as well. Is the 1.8.1 release happening soon? It's been ~6 months now.\n. Also, not sure if this is a good solution, but to anyone else who can't wait for the update. I changed the file from this:\n\n``` php\n    public static function getLibXmlLoaderOptions()\n    {\n        if (is_null(self::$_libXmlLoaderOptions)) {\n            self::setLibXmlLoaderOptions(LIBXML_DTDLOAD | LIBXML_DTDATTR);\n        }\n        @libxml_disable_entity_loader($options == (LIBXML_DTDLOAD | LIBXML_DTDATTR));\n        return self::$_libXmlLoaderOptions;\n    } // function getLibXmlLoaderOptions\n```\n\nto this:\n\n``` php\n    public static function getLibXmlLoaderOptions()\n    {\n        if (is_null(self::$_libXmlLoaderOptions)) {\n            self::setLibXmlLoaderOptions(LIBXML_DTDLOAD | LIBXML_DTDATTR);\n        }\n        @libxml_disable_entity_loader(self::$_libXmlLoaderOptions == (LIBXML_DTDLOAD | LIBXML_DTDATTR));\n        return self::$_libXmlLoaderOptions;\n    } // function getLibXmlLoaderOptions\n```\n\nSeemed to get rid of the error for me.\n. After digging some more, I realized that the outline borders are the issue. For some reason, the outline applies the default style borders, **only to the left-most and right-most columns within the outline**. This can be seen in the screenshot below. You can see the effect happening in my previous comment as well for the purple outline.\n\n![screen shot 2015-08-12 at 10 00 52 am](https://cloud.githubusercontent.com/assets/6021090/9227430/1f6259d8-40d9-11e5-91ce-4e67c4f420ca.png)\n\nWhen I get rid of the outlines, the borders are still the same color as the odd rows' fill color, instead of using the slightly darker default style that was set.\n\n![screen shot 2015-08-12 at 10 04 43 am](https://cloud.githubusercontent.com/assets/6021090/9227513/8d75c61c-40d9-11e5-99b2-28ef8b68ca45.png)\n\nI'm really just at a loss for what's going on here.\n. The only way I could figure out how to resolve this, was to not set a border style using the `->getDefaultStyle()` function. I set the border style for the cells separately using `->getStyle()` for a range of cells, and things started to work as expected.\n\nIf this is the result you're expecting from this, feel free to close it. If that isn't the result you would expect, let me know if you need anymore detail. \n\nThanks.\n. I am getting this issue as well. Is the 1.8.1 release happening soon? It's been ~6 months now.\n. Also, not sure if this is a good solution, but to anyone else who can't wait for the update. I changed the file from this:\n\n``` php\n    public static function getLibXmlLoaderOptions()\n    {\n        if (is_null(self::$_libXmlLoaderOptions)) {\n            self::setLibXmlLoaderOptions(LIBXML_DTDLOAD | LIBXML_DTDATTR);\n        }\n        @libxml_disable_entity_loader($options == (LIBXML_DTDLOAD | LIBXML_DTDATTR));\n        return self::$_libXmlLoaderOptions;\n    } // function getLibXmlLoaderOptions\n```\n\nto this:\n\n``` php\n    public static function getLibXmlLoaderOptions()\n    {\n        if (is_null(self::$_libXmlLoaderOptions)) {\n            self::setLibXmlLoaderOptions(LIBXML_DTDLOAD | LIBXML_DTDATTR);\n        }\n        @libxml_disable_entity_loader(self::$_libXmlLoaderOptions == (LIBXML_DTDLOAD | LIBXML_DTDATTR));\n        return self::$_libXmlLoaderOptions;\n    } // function getLibXmlLoaderOptions\n```\n\nSeemed to get rid of the error for me.\n. After digging some more, I realized that the outline borders are the issue. For some reason, the outline applies the default style borders, **only to the left-most and right-most columns within the outline**. This can be seen in the screenshot below. You can see the effect happening in my previous comment as well for the purple outline.\n\n![screen shot 2015-08-12 at 10 00 52 am](https://cloud.githubusercontent.com/assets/6021090/9227430/1f6259d8-40d9-11e5-91ce-4e67c4f420ca.png)\n\nWhen I get rid of the outlines, the borders are still the same color as the odd rows' fill color, instead of using the slightly darker default style that was set.\n\n![screen shot 2015-08-12 at 10 04 43 am](https://cloud.githubusercontent.com/assets/6021090/9227513/8d75c61c-40d9-11e5-99b2-28ef8b68ca45.png)\n\nI'm really just at a loss for what's going on here.\n. The only way I could figure out how to resolve this, was to not set a border style using the `->getDefaultStyle()` function. I set the border style for the cells separately using `->getStyle()` for a range of cells, and things started to work as expected.\n\nIf this is the result you're expecting from this, feel free to close it. If that isn't the result you would expect, let me know if you need anymore detail. \n\nThanks.\n. ",
    "isleshocky77": "I get this as a Fatal error on the develop branch but NOT on the 1.8.1 tag.\n. I would say this issue shouldn't be closed yet if this error is showing on the develop branch. From what I read on their [Contributing Instructions](https://github.com/PHPOffice/PHPExcel#want-to-contribute) develop is supposed to be the working copy to branch from and should be most up to date. If that's true it means that the next tag after 1.8.1 will contain this bug again.\n\nI didn't get to dig into what is actually happening there, but it may be something with switching from `$_libXmlLoaderOptions` to just `$libXmlLoaderOptions`. The error went away when I switched all instance of `$_libXmlLoaderOptions` to `$libXmlLoaderOptions`; however, I don't know what adverse effects this will have as I just had to do it to make a minor change to something unrelated.\n. @chordstricken Yes, that is what I was saying; however, I was worried why the variable names changed and if merely changing those three places would effect anything else.  \n\nAfter looking at that file I found the following commit 4f8c9bfc966c0b77a8353f422b8f485d035edd2a by @MarkBaker which is merely a PSR code change and seems to not catch all instances of the variable `$this->_libXmlLoaderOptions`.\n\nThis is a little scare because it makes me extremely weary of that commit and what else it may have broken.\n. I get this as a Fatal error on the develop branch but NOT on the 1.8.1 tag.\n. I would say this issue shouldn't be closed yet if this error is showing on the develop branch. From what I read on their [Contributing Instructions](https://github.com/PHPOffice/PHPExcel#want-to-contribute) develop is supposed to be the working copy to branch from and should be most up to date. If that's true it means that the next tag after 1.8.1 will contain this bug again.\n\nI didn't get to dig into what is actually happening there, but it may be something with switching from `$_libXmlLoaderOptions` to just `$libXmlLoaderOptions`. The error went away when I switched all instance of `$_libXmlLoaderOptions` to `$libXmlLoaderOptions`; however, I don't know what adverse effects this will have as I just had to do it to make a minor change to something unrelated.\n. @chordstricken Yes, that is what I was saying; however, I was worried why the variable names changed and if merely changing those three places would effect anything else.  \n\nAfter looking at that file I found the following commit 4f8c9bfc966c0b77a8353f422b8f485d035edd2a by @MarkBaker which is merely a PSR code change and seems to not catch all instances of the variable `$this->_libXmlLoaderOptions`.\n\nThis is a little scare because it makes me extremely weary of that commit and what else it may have broken.\n. ",
    "dinamic": "I am not working on a project that makes use of the library, so I cant test right now.\nCan someone else confirm it works, so we can thank the developer and close the issue?\n\nThanks!\n. @MarkBaker can you advise on that?\n. I am not working on a project that makes use of the library, so I cant test right now.\nCan someone else confirm it works, so we can thank the developer and close the issue?\n\nThanks!\n. @MarkBaker can you advise on that?\n. ",
    "chordstricken": "Open up the PHPExcel_Settings class (Classes/PHPExcel/Settings.php) and see lines `368`, `379`, and `385`. Change references of this:\n\n```\nself::$_libXmlLoaderOptions\n```\n\nto this\n\n```\nself::$libXmlLoaderOptions\n```\n\nThat seemed to solve the problem for me\n. Open up the PHPExcel_Settings class (Classes/PHPExcel/Settings.php) and see lines `368`, `379`, and `385`. Change references of this:\n\n```\nself::$_libXmlLoaderOptions\n```\n\nto this\n\n```\nself::$libXmlLoaderOptions\n```\n\nThat seemed to solve the problem for me\n. ",
    "marcelloitallo": "Change line 379 in Settings.php\n     public static function getLibXmlLoaderOptions()\nto \n     public static function getLibXmlLoaderOptions($options = null)\n\nThis worked for me!\n. Change line 379 in Settings.php\n     public static function getLibXmlLoaderOptions()\nto \n     public static function getLibXmlLoaderOptions($options = null)\n\nThis worked for me!\n. ",
    "seemas-grazitti": "Notice: Undefined variable: zipClass in /var/www/vhost/timesheet.grazitti.com/html/PHPExcel/Writer/Excel2007.php on line 227\r\n\r\n \r\nFatal error: Uncaught Error: Class name must be a valid object or a string in /var/www/vhost/timesheet.grazitti.com/html/PHPExcel/Writer/Excel2007.php:227 Stack trace: #0 /var/www/vhost/timesheet.grazitti.com/html/admin_report_specific_user.php(764): PHPExcel_Writer_Excel2007->save('/tmp/phpxltmpF0...') #1 {main} thrown in /var/www/vhost/timesheet.grazitti.com/html/PHPExcel/Writer/Excel2007.php on line 227\r\n\r\nI am getting this issue. Please let me know solution and i am using 1.8.1 version.. Now i have used same Upgrade to PHPExcel 1.8.1. code which u have send me link. I am getting following error.\r\n\r\nFatal error: Uncaught Error: Class 'ZipArchive' not found in /var/www/vhost/timesheet.grazitti.com/html/PHPExcel/Writer/Excel2007.php:227 Stack trace: #0 /var/www/vhost/timesheet.grazitti.com/html/admin_report_specific_user.php(765): PHPExcel_Writer_Excel2007->save('/tmp/phpxltmpr3...') #1 {main} thrown in /var/www/vhost/timesheet.grazitti.com/html/PHPExcel/Writer/Excel2007.php on line 227\r\n\r\n\r\n. Notice: Undefined variable: zipClass in /var/www/vhost/timesheet.grazitti.com/html/PHPExcel/Writer/Excel2007.php on line 227\r\n\r\n \r\nFatal error: Uncaught Error: Class name must be a valid object or a string in /var/www/vhost/timesheet.grazitti.com/html/PHPExcel/Writer/Excel2007.php:227 Stack trace: #0 /var/www/vhost/timesheet.grazitti.com/html/admin_report_specific_user.php(764): PHPExcel_Writer_Excel2007->save('/tmp/phpxltmpF0...') #1 {main} thrown in /var/www/vhost/timesheet.grazitti.com/html/PHPExcel/Writer/Excel2007.php on line 227\r\n\r\nI am getting this issue. Please let me know solution and i am using 1.8.1 version.. Now i have used same Upgrade to PHPExcel 1.8.1. code which u have send me link. I am getting following error.\r\n\r\nFatal error: Uncaught Error: Class 'ZipArchive' not found in /var/www/vhost/timesheet.grazitti.com/html/PHPExcel/Writer/Excel2007.php:227 Stack trace: #0 /var/www/vhost/timesheet.grazitti.com/html/admin_report_specific_user.php(765): PHPExcel_Writer_Excel2007->save('/tmp/phpxltmpr3...') #1 {main} thrown in /var/www/vhost/timesheet.grazitti.com/html/PHPExcel/Writer/Excel2007.php on line 227\r\n\r\n\r\n. ",
    "ncrypthic": "After digging around I found this \n\nWhen creating excel file using Ms Excel 2013, the sheet.xml looks like this\n\n``` xml\n<row r=\"1\" spans=\"1:2\" x14ac:dyDescent=\"0.25\">\n    <c r=\"A1\" s=\"1\">\n        <v>42095</v>\n    </c>\n    <c r=\"B1\" s=\"1\">\n        <f>A1+7</f>\n        <v>42102</v>\n    </c>\n</row>\n```\n\nWhile using Libreoffice Spreadsheet the sheet.xml looks this\n\n``` xml\n<row collapsed=\"false\" customFormat=\"false\" customHeight=\"false\" hidden=\"false\" ht=\"12.1\" outlineLevel=\"0\" r=\"1\">\n    <c r=\"A1\" s=\"1\" t=\"n\">\n        <v>42095</v>\n    </c>\n    <c r=\"B1\" s=\"1\" t=\"inlineStr\">\n        <f aca=\"false\">A1+7</f>\n        <is>\n            <t>\n            </t>\n        </is>\n    </c>\n</row>\n```\n\nThe attributes `t=\"inlineStr\"` in sheet.xml produces by Libreoffice spreadsheet makes PHPExcel loader read the cell as inline string and ignoring the ``<f/>`\n\nhttps://github.com/PHPOffice/PHPExcel/blob/develop/Classes/PHPExcel/Reader/Excel2007.php#L850-L853\n\nCan we check for `<f/>` element just to be sure before using `inlineStr` dataType like sample below ?\n\n``` php\ncase \"inlineStr\":\n    if(isset($c->f)) {\n        $this->_castToFormula($c,$r,$cellDataType,$value,$calculatedValue,$sharedFormulas,'_castToError');\n    } else {\n        $value = $this->_parseRichText($c->is);\n    }\n    break;\n```\n. After digging around I found this \n\nWhen creating excel file using Ms Excel 2013, the sheet.xml looks like this\n\n``` xml\n<row r=\"1\" spans=\"1:2\" x14ac:dyDescent=\"0.25\">\n    <c r=\"A1\" s=\"1\">\n        <v>42095</v>\n    </c>\n    <c r=\"B1\" s=\"1\">\n        <f>A1+7</f>\n        <v>42102</v>\n    </c>\n</row>\n```\n\nWhile using Libreoffice Spreadsheet the sheet.xml looks this\n\n``` xml\n<row collapsed=\"false\" customFormat=\"false\" customHeight=\"false\" hidden=\"false\" ht=\"12.1\" outlineLevel=\"0\" r=\"1\">\n    <c r=\"A1\" s=\"1\" t=\"n\">\n        <v>42095</v>\n    </c>\n    <c r=\"B1\" s=\"1\" t=\"inlineStr\">\n        <f aca=\"false\">A1+7</f>\n        <is>\n            <t>\n            </t>\n        </is>\n    </c>\n</row>\n```\n\nThe attributes `t=\"inlineStr\"` in sheet.xml produces by Libreoffice spreadsheet makes PHPExcel loader read the cell as inline string and ignoring the ``<f/>`\n\nhttps://github.com/PHPOffice/PHPExcel/blob/develop/Classes/PHPExcel/Reader/Excel2007.php#L850-L853\n\nCan we check for `<f/>` element just to be sure before using `inlineStr` dataType like sample below ?\n\n``` php\ncase \"inlineStr\":\n    if(isset($c->f)) {\n        $this->_castToFormula($c,$r,$cellDataType,$value,$calculatedValue,$sharedFormulas,'_castToError');\n    } else {\n        $value = $this->_parseRichText($c->is);\n    }\n    break;\n```\n. ",
    "reinaldorauch": "for the sizes of the documents that i work create rich text objects for each cell does not seems to be a good idea. I make a sugestion to someone add this feature if possible\n. for the sizes of the documents that i work create rich text objects for each cell does not seems to be a good idea. I make a sugestion to someone add this feature if possible\n. ",
    "jalind": "Yes, I now encounter this error with an Excel file generated for us by ADP and which we import. Apparently the default cell style in the XF record is not pointed to correctly and the subscript is invalid. In our case, it is zero when it should be 15. It is my understanding that the workbook/worksheet default is at fixed index key 15. My temporary fix in our library distribution is to check to see if the xfIndex derived from offsets 6 and 7 in the record data actually exists as an key in the _mapCellXfIndex array and, if not, then set xfIndex to 15 since that key should always exist. \n\nAs a bug fix, this would probably be a good idea to use the default workbook/worksheet formatting (xfIndex set to 15) as a last resort if the XF record doesn't contain a usable index into the _mapCellXfIndex array.\n. I have a patch for this in 1.8.0:\n\nThe Excel spreadsheets affected have no apparent problem in Excel.\n\nmodify the _readColInfo() method in Excel5 class between the offset: 6 and offset: 8 code to use index 15 if the XF index doesn't exist (is not defined):\n\n```\n        // offset: 6; size: 2; index to XF record for default column formatting\n        $xfIndex = self::_GetInt2d($recordData, 6);\n        // if the default format index doesn't exist in the XF record, the worksheet/workbook default format\n        // at fixed index 15 should always exist and can be used as the default cell format as a last resort\n        if (!isset($this->_mapCellXfIndex[$xfIndex]))\n        {\n            $xfIndex = 15;\n        }\n\n        // offset: 8; size: 2; option flags\n\n            // bit: 0; mask: 0x0001; 1= columns are hidden\n            $isHidden = (0x0001 & self::_GetInt2d($recordData, 8)) >> 0;\n\n            // bit: 10-8; mask: 0x0700; outline level of the columns (0 = no outline)\n            $level = (0x0700 & self::_GetInt2d($recordData, 8)) >> 8;\n\n            // bit: 12; mask: 0x1000; 1 = collapsed\n            $isCollapsed = (0x1000 & self::_GetInt2d($recordData, 8)) >> 12;\n```\n\nwhich will use a higher-level default as a last resort. According to the Excel documentation, index 15 should ALWAYS exist in a valid spreadsheet.\n. Yes, I now encounter this error with an Excel file generated for us by ADP and which we import. Apparently the default cell style in the XF record is not pointed to correctly and the subscript is invalid. In our case, it is zero when it should be 15. It is my understanding that the workbook/worksheet default is at fixed index key 15. My temporary fix in our library distribution is to check to see if the xfIndex derived from offsets 6 and 7 in the record data actually exists as an key in the _mapCellXfIndex array and, if not, then set xfIndex to 15 since that key should always exist. \n\nAs a bug fix, this would probably be a good idea to use the default workbook/worksheet formatting (xfIndex set to 15) as a last resort if the XF record doesn't contain a usable index into the _mapCellXfIndex array.\n. I have a patch for this in 1.8.0:\n\nThe Excel spreadsheets affected have no apparent problem in Excel.\n\nmodify the _readColInfo() method in Excel5 class between the offset: 6 and offset: 8 code to use index 15 if the XF index doesn't exist (is not defined):\n\n```\n        // offset: 6; size: 2; index to XF record for default column formatting\n        $xfIndex = self::_GetInt2d($recordData, 6);\n        // if the default format index doesn't exist in the XF record, the worksheet/workbook default format\n        // at fixed index 15 should always exist and can be used as the default cell format as a last resort\n        if (!isset($this->_mapCellXfIndex[$xfIndex]))\n        {\n            $xfIndex = 15;\n        }\n\n        // offset: 8; size: 2; option flags\n\n            // bit: 0; mask: 0x0001; 1= columns are hidden\n            $isHidden = (0x0001 & self::_GetInt2d($recordData, 8)) >> 0;\n\n            // bit: 10-8; mask: 0x0700; outline level of the columns (0 = no outline)\n            $level = (0x0700 & self::_GetInt2d($recordData, 8)) >> 8;\n\n            // bit: 12; mask: 0x1000; 1 = collapsed\n            $isCollapsed = (0x1000 & self::_GetInt2d($recordData, 8)) >> 12;\n```\n\nwhich will use a higher-level default as a last resort. According to the Excel documentation, index 15 should ALWAYS exist in a valid spreadsheet.\n. ",
    "KoIIIeY": "ErrorException in Excel5.php line 3555:\r\nUndefined offset: 15\r\n\r\n`if ($hasExplicitFormat) {\r\n\t\t\t\tif(isset($this->_mapCellXfIndex[$xfIndex])){\r\n\t\t\t\t\t$this->_phpSheet->getRowDimension($r + 1)->setXfIndex($this->_mapCellXfIndex[$xfIndex]);\r\n\t\t\t\t}\r\n\t\t\t}`\r\n\r\nI changed code like this and now it's work. But I don't think it right way.. ErrorException in Excel5.php line 3555:\r\nUndefined offset: 15\r\n\r\n`if ($hasExplicitFormat) {\r\n\t\t\t\tif(isset($this->_mapCellXfIndex[$xfIndex])){\r\n\t\t\t\t\t$this->_phpSheet->getRowDimension($r + 1)->setXfIndex($this->_mapCellXfIndex[$xfIndex]);\r\n\t\t\t\t}\r\n\t\t\t}`\r\n\r\nI changed code like this and now it's work. But I don't think it right way.. ",
    "cksachdev": "I am trying to achieve the same. I want entire workbook content to visible only once the right password is supplied. Is it possible with v1.8.1?\n. I am trying to achieve the same. I want entire workbook content to visible only once the right password is supplied. Is it possible with v1.8.1?\n. ",
    "bazo": "well i created the file in excel 2013.  the phpexcel identifies the file as excel2007 format as stated. problem is in this function https://github.com/PHPOffice/PHPExcel/blob/develop/Classes/PHPExcel/IOFactory.php#L161\n\nit creates instance of every reader class and returns the last which is html reader. the code is plain wrong.\n\nthen i decided to create instance of excel2007 reader manually. then it complains that the file is not a valid zip file or something like that. i also tried to save the file as 2003 xls format, got the same.\n\nso in result, phpexcel can't read excel files\n. well i don't have to fix every open source project i come because then i wouldn't be doing anything else. and i would have to completely rewrite phpexcel :D\n\ni opened the file in a text editor and it's binary. as expected. some old library we use in our project can read the files without problems. but i can't be found anymore on the internet so i wanted to change to something that gets updates and a lot of people use it. but i guess i'm stuck with it\n. yeah sure, just send me your email\n. well i created the file in excel 2013.  the phpexcel identifies the file as excel2007 format as stated. problem is in this function https://github.com/PHPOffice/PHPExcel/blob/develop/Classes/PHPExcel/IOFactory.php#L161\n\nit creates instance of every reader class and returns the last which is html reader. the code is plain wrong.\n\nthen i decided to create instance of excel2007 reader manually. then it complains that the file is not a valid zip file or something like that. i also tried to save the file as 2003 xls format, got the same.\n\nso in result, phpexcel can't read excel files\n. well i don't have to fix every open source project i come because then i wouldn't be doing anything else. and i would have to completely rewrite phpexcel :D\n\ni opened the file in a text editor and it's binary. as expected. some old library we use in our project can read the files without problems. but i can't be found anymore on the internet so i wanted to change to something that gets updates and a lot of people use it. but i guess i'm stuck with it\n. yeah sure, just send me your email\n. ",
    "rique": "Hi,\nHave you found the solution to your problem ?\nI'm having the exact same problem with my .xls files as soon as I try to encode the content to UTF-8 \n. Hi,\nHave you found the solution to your problem ?\nI'm having the exact same problem with my .xls files as soon as I try to encode the content to UTF-8 \n. ",
    "xywei0315": "I had the same problem.\nI tried to change the file path to absolute path like 'D:\\test.xlsx',then it worked!\nI don't know the reason why...\n. I had the same problem.\nI tried to change the file path to absolute path like 'D:\\test.xlsx',then it worked!\nI don't know the reason why...\n. ",
    "johntaylortoo": "I was having the same problem and came across this post attempting to resolve it.  Reading through the thread a key word sparked a thought, \"BINARY\".  I was pulling my xlsx file from an FTP server and it defaults to FTP_ASCII.  I changed that to FTP_BINARY and PHPEXCEL now reads the file properly.\n\nI hope that helps some of you.\n. I was having the same problem and came across this post attempting to resolve it.  Reading through the thread a key word sparked a thought, \"BINARY\".  I was pulling my xlsx file from an FTP server and it defaults to FTP_ASCII.  I changed that to FTP_BINARY and PHPEXCEL now reads the file properly.\n\nI hope that helps some of you.\n. ",
    "Snorvarg": "Hi, I have the same error message, so I have attached an example file here: \n[example.xlsx](https://github.com/PHPOffice/PHPExcel/files/423274/example.xlsx)\n\nThe file is created in Microsoft Office 365, version 16.0.7070.2033.\n\nIf I save the file as .xls (97-2003) PHPExcel can read the file with no problem. \n\nPlease advice. \n. > NOTE: I just realized the problem is limited to my Windows iis installation! .xlsx files works on our linux-server. So the stuff below only happens on my Windows iis. (Less important it is working there, but you might have an idea about why it is not working?)\n\nHi, I get the same error message with your code:\n\n`DOMDocument::loadHTMLFile() [domdocument.loadhtmlfile]: Invalid char in CDATA 0x4 in file:///C:/Windows/Temp/php6CF8.tmp, line: 1 [APP\\Vendor\\PHPExcel\\Classes\\PHPExcel\\Reader\\HTML.php, line 427]`\n\nHere is the callstack: (I am using cakephp, should not be important)\n\n```\nDOMDocument::loadHTMLFile() - [internal], line ??\nPHPExcel_Reader_HTML::loadIntoExisting() - APP\\Vendor\\PHPExcel\\Classes\\PHPExcel\\Reader\\HTML.php, line 427\nPHPExcel_Reader_HTML::load() - APP\\Vendor\\PHPExcel\\Classes\\PHPExcel\\Reader\\HTML.php, line 141\nPHPExcel_IOFactory::load() - APP\\Vendor\\PHPExcel\\Classes\\PHPExcel\\IOFactory.php, line 192\nStudentsController::teacher_import_class() - APP\\Controller\\StudentsController.php, line 113\nReflectionMethod::invokeArgs() - [internal], line ??\nController::invokeAction() - CORE\\Cake\\Controller\\Controller.php, line 486\nDispatcher::_invoke() - CORE\\Cake\\Routing\\Dispatcher.php, line 187\nDispatcher::dispatch() - CORE\\Cake\\Routing\\Dispatcher.php, line 162\nrequire - APP\\webroot\\index.php, line 119\n[main] - ROOT\\index.php, line 43\n\n```\n\nPlease note; I am uploading the file via the browsers file selector, so a temporary file is created. However, this should not be the case to the problem, since it works with an .xls file. \n\nAlso note; The web-server is a windows iis service, running on Windows 10.\n. I use v1.8.0 of cakePHP. I don't understand how I should do to reproduce outside of the web server? \n. I tried your code-example outside of cake, in its own file. It works. So it is some cake-settings interfering somehow. Do you have a clue of what settings I should look for? \n. Hi, I have the same error message, so I have attached an example file here: \n[example.xlsx](https://github.com/PHPOffice/PHPExcel/files/423274/example.xlsx)\n\nThe file is created in Microsoft Office 365, version 16.0.7070.2033.\n\nIf I save the file as .xls (97-2003) PHPExcel can read the file with no problem. \n\nPlease advice. \n. > NOTE: I just realized the problem is limited to my Windows iis installation! .xlsx files works on our linux-server. So the stuff below only happens on my Windows iis. (Less important it is working there, but you might have an idea about why it is not working?)\n\nHi, I get the same error message with your code:\n\n`DOMDocument::loadHTMLFile() [domdocument.loadhtmlfile]: Invalid char in CDATA 0x4 in file:///C:/Windows/Temp/php6CF8.tmp, line: 1 [APP\\Vendor\\PHPExcel\\Classes\\PHPExcel\\Reader\\HTML.php, line 427]`\n\nHere is the callstack: (I am using cakephp, should not be important)\n\n```\nDOMDocument::loadHTMLFile() - [internal], line ??\nPHPExcel_Reader_HTML::loadIntoExisting() - APP\\Vendor\\PHPExcel\\Classes\\PHPExcel\\Reader\\HTML.php, line 427\nPHPExcel_Reader_HTML::load() - APP\\Vendor\\PHPExcel\\Classes\\PHPExcel\\Reader\\HTML.php, line 141\nPHPExcel_IOFactory::load() - APP\\Vendor\\PHPExcel\\Classes\\PHPExcel\\IOFactory.php, line 192\nStudentsController::teacher_import_class() - APP\\Controller\\StudentsController.php, line 113\nReflectionMethod::invokeArgs() - [internal], line ??\nController::invokeAction() - CORE\\Cake\\Controller\\Controller.php, line 486\nDispatcher::_invoke() - CORE\\Cake\\Routing\\Dispatcher.php, line 187\nDispatcher::dispatch() - CORE\\Cake\\Routing\\Dispatcher.php, line 162\nrequire - APP\\webroot\\index.php, line 119\n[main] - ROOT\\index.php, line 43\n\n```\n\nPlease note; I am uploading the file via the browsers file selector, so a temporary file is created. However, this should not be the case to the problem, since it works with an .xls file. \n\nAlso note; The web-server is a windows iis service, running on Windows 10.\n. I use v1.8.0 of cakePHP. I don't understand how I should do to reproduce outside of the web server? \n. I tried your code-example outside of cake, in its own file. It works. So it is some cake-settings interfering somehow. Do you have a clue of what settings I should look for? \n. ",
    "r-aamir": "@PowerKiKi, issue still exists ) take a look at attached file, PHPExcel identifies this file as HTML.\n[psemf-2474-eiuyr.xlsx](https://github.com/PHPOffice/PHPExcel/files/454021/psemf-2474-eiuyr.xlsx)\n\nBut off course only works is the older format, can convert the same file here http://convertstandard.com/Xlsx2Xls.aspx and it works\n. @MarkBaker Yup I got that, what I meant is we have to have the issue open so more chances of a workaround or even better a PR may appear ) thanks anyways.\n. @PowerKiKi, issue still exists ) take a look at attached file, PHPExcel identifies this file as HTML.\n[psemf-2474-eiuyr.xlsx](https://github.com/PHPOffice/PHPExcel/files/454021/psemf-2474-eiuyr.xlsx)\n\nBut off course only works is the older format, can convert the same file here http://convertstandard.com/Xlsx2Xls.aspx and it works\n. @MarkBaker Yup I got that, what I meant is we have to have the issue open so more chances of a workaround or even better a PR may appear ) thanks anyways.\n. ",
    "uppfinnarjocke": "@MarkBaker  - I have a problem with PHP 7 since 7.0.12. I have no problem reading the xlsx file, but from a MS net share. I have to copy my file from it to a directory under C:\\\n\nIf I use PHP 5 everything PHPExcel is OK.\n\nI am using PHPExcel 1.8.1. I'm afraid it's a php problem more than PHPExcel (?)\n\n**My errors are these when reading from a MS net  share like //server/share/directory/file.xlsx** :\n\n```\nWarning: DOMDocument::loadHTML(): Invalid char in CDATA 0x3 in Entity, line: 1 in C:\\Apache24\\htdocs\\phpexcel\\Classes\\PHPExcel\\Reader\\HTML.php on line 478\n\nWarning: DOMDocument::loadHTML(): Invalid char in CDATA 0x4 in Entity, line: 1 in C:\\Apache24\\htdocs\\phpexcel\\Classes\\PHPExcel\\Reader\\HTML.php on line 478\n\nWarning: DOMDocument::loadHTML(): Invalid char in CDATA 0x14 in Entity, line: 1 in C:\\Apache24\\htdocs\\phpexcel\\Classes\\PHPExcel\\Reader\\HTML.php on line 478\n```\n. @MarkBaker  - I have a problem with PHP 7 since 7.0.12. I have no problem reading the xlsx file, but from a MS net share. I have to copy my file from it to a directory under C:\\\n\nIf I use PHP 5 everything PHPExcel is OK.\n\nI am using PHPExcel 1.8.1. I'm afraid it's a php problem more than PHPExcel (?)\n\n**My errors are these when reading from a MS net  share like //server/share/directory/file.xlsx** :\n\n```\nWarning: DOMDocument::loadHTML(): Invalid char in CDATA 0x3 in Entity, line: 1 in C:\\Apache24\\htdocs\\phpexcel\\Classes\\PHPExcel\\Reader\\HTML.php on line 478\n\nWarning: DOMDocument::loadHTML(): Invalid char in CDATA 0x4 in Entity, line: 1 in C:\\Apache24\\htdocs\\phpexcel\\Classes\\PHPExcel\\Reader\\HTML.php on line 478\n\nWarning: DOMDocument::loadHTML(): Invalid char in CDATA 0x14 in Entity, line: 1 in C:\\Apache24\\htdocs\\phpexcel\\Classes\\PHPExcel\\Reader\\HTML.php on line 478\n```\n. ",
    "wesood": "If you can catch the type before it processes it, it will work. \r\n\r\n`//XLSX import breaks on the server : this below fixes the error \r\nif($FileType == \"xlsx\"){\r\n\tPHPExcel_Settings::setZipClass(\\PHPExcel_Settings::PCLZIP);\r\n}\r\n$inputFileType = PHPExcel_IOFactory::identify($inputFileName);\r\n`\r\nFound the fix here\r\nhttp://stackoverflow.com/questions/40797346/yii2-phpoffice-phpexcel-identifies-xlsx-file-as-html. If you can catch the type before it processes it, it will work. \r\n\r\n`//XLSX import breaks on the server : this below fixes the error \r\nif($FileType == \"xlsx\"){\r\n\tPHPExcel_Settings::setZipClass(\\PHPExcel_Settings::PCLZIP);\r\n}\r\n$inputFileType = PHPExcel_IOFactory::identify($inputFileName);\r\n`\r\nFound the fix here\r\nhttp://stackoverflow.com/questions/40797346/yii2-phpoffice-phpexcel-identifies-xlsx-file-as-html. ",
    "Guicom": "@wesood thx for the fix, he save my time !!. @wesood thx for the fix, he save my time !!. ",
    "PontiacCZ": "In general getOldCalculatedValue() works, at least here on my side with 1.8.0. It works much better than getCalculatedValue().\n. In general getOldCalculatedValue() works, at least here on my side with 1.8.0. It works much better than getCalculatedValue().\n. ",
    "Tim-Erwin": "Sure, how? - Will mail you, found your address on your profile.\n. Current master does the trick. Thanks. Any plans on releasing that soon?\n. Ok, thanks again and have a save trip :)\n. Sorry, found that what's master in most projects is _dev-develop_ here. So just using that solves the issue.\n. Sure, how? - Will mail you, found your address on your profile.\n. Current master does the trick. Thanks. Any plans on releasing that soon?\n. Ok, thanks again and have a save trip :)\n. Sorry, found that what's master in most projects is _dev-develop_ here. So just using that solves the issue.\n. ",
    "AdriWild": "Worked!!!. Yes I've tried all of them but the problem remains for new versions (xlsx or xlsm), if I open the file with Excel, and I save it as a .xls works perfectly. . It happens to me also when the file contains some kind of images. To solve it I had to open the file manually delete those already identified images ( not all of them crashes), and save it again. I wonder if will be solved soon.. Worked!!!. Yes I've tried all of them but the problem remains for new versions (xlsx or xlsm), if I open the file with Excel, and I save it as a .xls works perfectly. . It happens to me also when the file contains some kind of images. To solve it I had to open the file manually delete those already identified images ( not all of them crashes), and save it again. I wonder if will be solved soon.. ",
    "bender270": "Hi, \nI have the same problem. Have you found any solutions to this problem?\n\nThank you in advance\n. Hi, \nI have the same problem. Have you found any solutions to this problem?\n\nThank you in advance\n. ",
    "mephir": "Ok, this is the info which I expected. Thank you ...  \n. Ok, this is the info which I expected. Thank you ...  \n. ",
    "jaesung2061": "Same issue for me. I went to the file/line he pointed out and replaced the string with the password and it unlocked. Why is this a hardcoded string and not a variable we can change?\n. Same issue for me. I went to the file/line he pointed out and replaced the string with the password and it unlocked. Why is this a hardcoded string and not a variable we can change?\n. ",
    "issamkhadiri1989": "Hello everyone. I could  find a solution of this issue. \r\nA simple modification in the main Class \"Excel5\" and then, you can pass the password used to encrypt the file. . Hello everyone. I could  find a solution of this issue. \r\nA simple modification in the main Class \"Excel5\" and then, you can pass the password used to encrypt the file. . ",
    "clarkk": "Sorry.. Delete this issue.. I was wrong :)\n. Sorry.. Delete this issue.. I was wrong :)\n. ",
    "versionii": "FYI: This same issue occurs with the protection example in the PhpExcel package. You can simply turn off the protection in Open Office without a password.\n. FYI: This same issue occurs with the protection example in the PhpExcel package. You can simply turn off the protection in Open Office without a password.\n. ",
    "jwegner": "Same issue here with Open Office 3.2 and Excel2007. Excel5 just works fine. I use PHPExcel 1.8.0.\n. Same issue here with Open Office 3.2 and Excel2007. Excel5 just works fine. I use PHPExcel 1.8.0.\n. ",
    "marlemion": "Hey. I ran in exactly the same problem. How did you solve it?. Hey. I ran in exactly the same problem. How did you solve it?. ",
    "kweber-tcc": "In the current version (1.8.1), the segmentation fault is happening at:\n\nhttps://github.com/PHPOffice/PHPExcel/blob/1.8.1/Classes/PHPExcel/Calculation.php#L1743\n\nHere are the final calls from XDebug:\n\n```\n1.9560   15151768   -> PHPExcel_Calculation->__destruct() .../vendor/phpoffice/phpexcel/Classes/PHPExcel/Calculation.php:0\n1.9560   15151992     -> ini_get() .../vendor/phpoffice/phpexcel/Classes/PHPExcel/Calculation.php:1742\n1.9561   15151992     -> ini_set() .../vendor/phpoffice/phpexcel/Classes/PHPExcel/Calculation.php:1743\n```\n\nI recommend that you do not change PHP settings at all.  There is no reason to be calling ini_set() in this program.\n. In the current version (1.8.1), the segmentation fault is happening at:\n\nhttps://github.com/PHPOffice/PHPExcel/blob/1.8.1/Classes/PHPExcel/Calculation.php#L1743\n\nHere are the final calls from XDebug:\n\n```\n1.9560   15151768   -> PHPExcel_Calculation->__destruct() .../vendor/phpoffice/phpexcel/Classes/PHPExcel/Calculation.php:0\n1.9560   15151992     -> ini_get() .../vendor/phpoffice/phpexcel/Classes/PHPExcel/Calculation.php:1742\n1.9561   15151992     -> ini_set() .../vendor/phpoffice/phpexcel/Classes/PHPExcel/Calculation.php:1743\n```\n\nI recommend that you do not change PHP settings at all.  There is no reason to be calling ini_set() in this program.\n. ",
    "cjmaio": "If I switch our application to the development branch, in theory this would stop happening?\n\nIs this fix documented anywhere so I can track when it will make it to the production version?\n. If it is something I have configured wrong within my Apache or PHP settings I'm more than happy to make configuration changes. However, this has been a show stopper for all of our applications that make use of this library, requiring us to restart our Apache daemon on a daily basis.\n. If I switch our application to the development branch, in theory this would stop happening?\n\nIs this fix documented anywhere so I can track when it will make it to the production version?\n. If it is something I have configured wrong within my Apache or PHP settings I'm more than happy to make configuration changes. However, this has been a show stopper for all of our applications that make use of this library, requiring us to restart our Apache daemon on a daily basis.\n. ",
    "dczaretsky": "I have been exhibiting apache crashing with a segmentation fault since updating to PHP 5.6. I have traced the error to the following code:\r\n\r\nPHPExcel/Classes/PHPExcel/Writer/Excel2007/ContentTypes.php (189)\r\n\r\n```\r\n    /**\r\n     * Get image mime type\r\n     *\r\n     * @param     string    $pFile    Filename\r\n     * @return     string    Mime Type\r\n     * @throws     PHPExcel_Writer_Exception\r\n     */\r\n    private function getImageMimeType($pFile = '')\r\n    {\r\n        if (PHPExcel_Shared_File::file_exists($pFile)) {\r\n            $image = getimagesize($pFile);                     // <-- CRASH OCCURS HERE\r\n            return image_type_to_mime_type($image[2]);\r\n        } else {\r\n            throw new PHPExcel_Writer_Exception(\"File $pFile does not exist\");\r\n        }\r\n    }\r\n\r\n``` \r\nIt appears as though the crash occurs when trying to get the image size for a compressed image. A fix for this that seems to work for me is changing the code to the following:\r\n\r\n//$image = getimagesize($pFile);   \r\n$image = getimagesizefromstring(file_get_contents($pFile));\r\n. I have been exhibiting apache crashing with a segmentation fault since updating to PHP 5.6. I have traced the error to the following code:\r\n\r\nPHPExcel/Classes/PHPExcel/Writer/Excel2007/ContentTypes.php (189)\r\n\r\n```\r\n    /**\r\n     * Get image mime type\r\n     *\r\n     * @param     string    $pFile    Filename\r\n     * @return     string    Mime Type\r\n     * @throws     PHPExcel_Writer_Exception\r\n     */\r\n    private function getImageMimeType($pFile = '')\r\n    {\r\n        if (PHPExcel_Shared_File::file_exists($pFile)) {\r\n            $image = getimagesize($pFile);                     // <-- CRASH OCCURS HERE\r\n            return image_type_to_mime_type($image[2]);\r\n        } else {\r\n            throw new PHPExcel_Writer_Exception(\"File $pFile does not exist\");\r\n        }\r\n    }\r\n\r\n``` \r\nIt appears as though the crash occurs when trying to get the image size for a compressed image. A fix for this that seems to work for me is changing the code to the following:\r\n\r\n//$image = getimagesize($pFile);   \r\n$image = getimagesizefromstring(file_get_contents($pFile));\r\n. ",
    "rushi": "Thanks @MarkBaker \n. Thanks @MarkBaker \n. ",
    "PatrickRose": "I've been looking at this because I'll be using this in an upcoming project.\n\nThe date tests seem to have some inconsistencies. 29th Feb 1900 is expected to return a 60, but 29th Feb 2007 is expected to return `#VALUE!`. Which should it be?\n\nThere's also oddities in how `date_parse` works - the test for 22/8/08 is returning the value for the date 8th August 2022 (instead of 22nd August 2008).\n\nIs there a good place I could collate these findings, or should I just put them on this ticket?\n. > The date tests seem to have some inconsistencies. 29th Feb 1900 is expected to return a 60, but 29th Feb 2007 is expected to return #VALUE!. Which should it be?\n\nIt's been pointed out to me today that 29th Feb 1900 should return 60 due to legacy Excel reasons...\n. See #483 \n\n@MarkBaker - I'm willing to help out with a concerted effort to clean up the test suite to pass. In the short time I looked at it, the issue was mostly errors in the test set up.\n. That makes some sense - but surely it doesn't make sense to then call `getHighestDataColumn` if there's a parameter?\n. That makes even less sense to me.\n\nIf there's an explicit difference between `getHighestDataColumn()` or `getHighestColumn()` then it doesn't make any sense to fall back to using `getHighestDataColumn()` if a parameter is passed to `getHighestColumn()`. It surely makes more sense to calculate the highest column on the given row which is part of a range reference or has formatting applied or whatever.\n\nI'm not sure that makes sense (and it's probably difficult to do efficiently) - so it might make more sense to just return the cached value.\n. I think you're misunderstanding:\n- `getHighestColumn()` should act as it currently does and get the highest column with formatting/references etc\n- `getHighestColumn($row)` should get the highest column with formatting/references on the given row (or shouldn't exist if calculating that is too expensive)\n- `getHighestDataColumn()` should act as it currently does and get the highest column with data\n- `getHighestDataColumn($row)` should act as it currently does and get the highest column with data s on the given row\n\nEssentially - `getHighestColumn($row)` should in theory equal `max(getHighestColumn(1), getHighestColumn(2), getHighestColumn(3), ..., getHighestColumn(n))`. Currently that's not the case.\n. @MarkBaker - it's marked as ignored in .gitattributes:\n\n```\n/Build export-ignore\n/Documentation export-ignore\n/Examples export-ignore\n/unitTests export-ignore\nREADME.md export-ignore\n```\n. Dupe of #661 \n. I've been looking at this because I'll be using this in an upcoming project.\n\nThe date tests seem to have some inconsistencies. 29th Feb 1900 is expected to return a 60, but 29th Feb 2007 is expected to return `#VALUE!`. Which should it be?\n\nThere's also oddities in how `date_parse` works - the test for 22/8/08 is returning the value for the date 8th August 2022 (instead of 22nd August 2008).\n\nIs there a good place I could collate these findings, or should I just put them on this ticket?\n. > The date tests seem to have some inconsistencies. 29th Feb 1900 is expected to return a 60, but 29th Feb 2007 is expected to return #VALUE!. Which should it be?\n\nIt's been pointed out to me today that 29th Feb 1900 should return 60 due to legacy Excel reasons...\n. See #483 \n\n@MarkBaker - I'm willing to help out with a concerted effort to clean up the test suite to pass. In the short time I looked at it, the issue was mostly errors in the test set up.\n. That makes some sense - but surely it doesn't make sense to then call `getHighestDataColumn` if there's a parameter?\n. That makes even less sense to me.\n\nIf there's an explicit difference between `getHighestDataColumn()` or `getHighestColumn()` then it doesn't make any sense to fall back to using `getHighestDataColumn()` if a parameter is passed to `getHighestColumn()`. It surely makes more sense to calculate the highest column on the given row which is part of a range reference or has formatting applied or whatever.\n\nI'm not sure that makes sense (and it's probably difficult to do efficiently) - so it might make more sense to just return the cached value.\n. I think you're misunderstanding:\n- `getHighestColumn()` should act as it currently does and get the highest column with formatting/references etc\n- `getHighestColumn($row)` should get the highest column with formatting/references on the given row (or shouldn't exist if calculating that is too expensive)\n- `getHighestDataColumn()` should act as it currently does and get the highest column with data\n- `getHighestDataColumn($row)` should act as it currently does and get the highest column with data s on the given row\n\nEssentially - `getHighestColumn($row)` should in theory equal `max(getHighestColumn(1), getHighestColumn(2), getHighestColumn(3), ..., getHighestColumn(n))`. Currently that's not the case.\n. @MarkBaker - it's marked as ignored in .gitattributes:\n\n```\n/Build export-ignore\n/Documentation export-ignore\n/Examples export-ignore\n/unitTests export-ignore\nREADME.md export-ignore\n```\n. Dupe of #661 \n. ",
    "gabrielrota": "I don't like add an invisible character to the text run ... I don't seem clean.\nLooking the code I think the easy way is throw an exception because the expected return is an PHPExcel_RichText_Run and I can't think how silently discard it.\n\nI haven't checked if createText suffer of the same issue.\n. I don't like add an invisible character to the text run ... I don't seem clean.\nLooking the code I think the easy way is throw an exception because the expected return is an PHPExcel_RichText_Run and I can't think how silently discard it.\n\nI haven't checked if createText suffer of the same issue.\n. ",
    "trd-vergel": "I tried to parse xlsx file on your examples \"05featuredemo.xlsx\" but it cant identify also.\n. PHPExcel is working fine if I use it in native php. But using our own framework its not working with xlsx. \n\n1.) Is there anything you we need in our xml configuration ?\n\n2.) PHPExcel classes are not autoloaded. So if I use PHPExcel_IOFactory i need first to load it.\n\n<pre>require PHPEXCEL_ROOT . 'PHPExcel/IOFactory.php';</pre>\n\nIs there a possibility that if PHPExcel classes are not autoloaded causes the problem ?\n. I tried to parse xlsx file on your examples \"05featuredemo.xlsx\" but it cant identify also.\n. PHPExcel is working fine if I use it in native php. But using our own framework its not working with xlsx. \n\n1.) Is there anything you we need in our xml configuration ?\n\n2.) PHPExcel classes are not autoloaded. So if I use PHPExcel_IOFactory i need first to load it.\n\n<pre>require PHPEXCEL_ROOT . 'PHPExcel/IOFactory.php';</pre>\n\nIs there a possibility that if PHPExcel classes are not autoloaded causes the problem ?\n. ",
    "patri0t86": "I had an issue with data validation in my spreadsheet as well, but only with certain cells. I did a whole lot of trial and error with various readers/writers just to test around. I even looked into using a different language to search for other packages.\n\nAfter days of messing with hacks and workarounds, I found a solution that works for all data validation for me. \n\nIt turns out, the only cells that were keeping data validation after reading from a template file, then writing data from a web input form, and writing to a new file were ones that had data validation lists from a **named range** of cells. If the data validation was from cells that were just selected (i.e. =$A$1,$A$2...) then it would not work, data validation would be stripped and there would be no drop down. This solution works across worksheets, so you can keep a hidden \"options\" sheet (like I have) to keep your \"database\" separate from your presentation.\n\nI'm not sure if this is a bug or issue, but it was a solution that I found, and hopefully could be helpful to others.\n. I had an issue with data validation in my spreadsheet as well, but only with certain cells. I did a whole lot of trial and error with various readers/writers just to test around. I even looked into using a different language to search for other packages.\n\nAfter days of messing with hacks and workarounds, I found a solution that works for all data validation for me. \n\nIt turns out, the only cells that were keeping data validation after reading from a template file, then writing data from a web input form, and writing to a new file were ones that had data validation lists from a **named range** of cells. If the data validation was from cells that were just selected (i.e. =$A$1,$A$2...) then it would not work, data validation would be stripped and there would be no drop down. This solution works across worksheets, so you can keep a hidden \"options\" sheet (like I have) to keep your \"database\" separate from your presentation.\n\nI'm not sure if this is a bug or issue, but it was a solution that I found, and hopefully could be helpful to others.\n. ",
    "sim642": "Fixed the little `?:` support issue, should be all good now.\n. Fixed the little `?:` support issue, should be all good now.\n. ",
    "svemir": "Any idea if this is getting rebased and merged eventually?\n. Any idea if this is getting rebased and merged eventually?\n. ",
    "huqa": "I have this same problem. Still have to comment line 399 out manually.\n. Oh sorry, I didn't notice. I'm using composer to fetch the dev-master branch. I'll switch to dev-develop then. Thanks!\n. I have this same problem. Still have to comment line 399 out manually.\n. Oh sorry, I didn't notice. I'm using composer to fetch the dev-master branch. I'll switch to dev-develop then. Thanks!\n. ",
    "dialogik": "Ah thanks a lot, I was actually not aware of that. I thought the `setFormatCode()` would also set the data type. Thanks for helping me here!\n. Is there a way to use `setCellValueExplicit()` on a range of existing cells instead of using it on one cell while setting the value? E.g.\n\n```\n$objPHPExcel->getActiveSheet()->setCellValueExplicit(\n    'A1:A200', \n    NULL, // Don't set the value here, only apply setCellValueExplicit to existing values\n    PHPExcel_Cell_DataType::TYPE_STRING\n);\n```\n\nBy the way: Applied like this, it throws error `Cell coordinate can not be a range of cells`.\n. I see. Thus I updated to the latest version. Works like charm. Thanks!\n. Ah thanks a lot, I was actually not aware of that. I thought the `setFormatCode()` would also set the data type. Thanks for helping me here!\n. Is there a way to use `setCellValueExplicit()` on a range of existing cells instead of using it on one cell while setting the value? E.g.\n\n```\n$objPHPExcel->getActiveSheet()->setCellValueExplicit(\n    'A1:A200', \n    NULL, // Don't set the value here, only apply setCellValueExplicit to existing values\n    PHPExcel_Cell_DataType::TYPE_STRING\n);\n```\n\nBy the way: Applied like this, it throws error `Cell coordinate can not be a range of cells`.\n. I see. Thus I updated to the latest version. Works like charm. Thanks!\n. ",
    "roguewavelimited": "I am not sure. It is sent to me by a product supplier. I can check on\nMonday and see if I can find out.\n\nRichard\n\nOn Saturday, January 10, 2015, Mark Baker notifications@github.com wrote:\n\n> Can you give me any additional background about this file? How it was\n> generated, etc?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub\n> https://github.com/PHPOffice/PHPExcel/issues/494#issuecomment-69471481.\n. Mark\n\nUnfortunately I am not able to get any more information about the problem.\n\nRichard\n\nOn Saturday, January 10, 2015, Richard Williams <\nrichard@roguewavelimited.com> wrote:\n\n> I am not sure. It is sent to me by a product supplier. I can check on\n> Monday and see if I can find out.\n> \n> Richard\n> \n> On Saturday, January 10, 2015, Mark Baker <notifications@github.com\n> <javascript:_e(%7B%7D,'cvml','notifications@github.com');>> wrote:\n> \n> > Can you give me any additional background about this file? How it was\n> > generated, etc?\n> > \n> > ## \n> > \n> > Reply to this email directly or view it on GitHub\n> > https://github.com/PHPOffice/PHPExcel/issues/494#issuecomment-69471481.\n. I will be happy to send the file via email. I don't see how to attach a file to this ticket.\n. I am not sure. It is sent to me by a product supplier. I can check on\nMonday and see if I can find out.\n\nRichard\n\nOn Saturday, January 10, 2015, Mark Baker notifications@github.com wrote:\n\n> Can you give me any additional background about this file? How it was\n> generated, etc?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub\n> https://github.com/PHPOffice/PHPExcel/issues/494#issuecomment-69471481.\n. Mark\n\nUnfortunately I am not able to get any more information about the problem.\n\nRichard\n\nOn Saturday, January 10, 2015, Richard Williams <\nrichard@roguewavelimited.com> wrote:\n\n> I am not sure. It is sent to me by a product supplier. I can check on\n> Monday and see if I can find out.\n> \n> Richard\n> \n> On Saturday, January 10, 2015, Mark Baker <notifications@github.com\n> <javascript:_e(%7B%7D,'cvml','notifications@github.com');>> wrote:\n> \n> > Can you give me any additional background about this file? How it was\n> > generated, etc?\n> > \n> > ## \n> > \n> > Reply to this email directly or view it on GitHub\n> > https://github.com/PHPOffice/PHPExcel/issues/494#issuecomment-69471481.\n. I will be happy to send the file via email. I don't see how to attach a file to this ticket.\n. ",
    "motin": "This seems to be related to https://github.com/PHPOffice/PHPExcel/issues/571\n. I found a workaround, it is ugly but works until this issue has been fixed...\n\nCreate a new class `PHPExcel_Reader_Excel2007_XNamespace.php`:\n\n```\n<?php\n\nclass PHPExcel_Reader_Excel2007_XNamespace extends PHPExcel_Reader_Excel2007\n{\n\n    public function securityScan($xml)\n    {\n        $xml = parent::securityScan($xml);\n        return str_replace(['<x:', '</x:'], ['<', '</'], $xml);\n    }\n\n}\n```\n\nThen load your excel file using this reader:\n\n```\n$excelReader = new PHPExcel_Reader_Excel2007_XNamespace();\n$objPHPExcel = $excelReader->load($inputFileName);\n```\n. Related: https://github.com/PHPOffice/PHPExcel/issues/571\n. I found the underlying issue. Your file (as well as my problematic files) uses an XML namespace \"d\" in `xl/styles.xml` (ie `<d:cellFx>`), while as ordinary Excel XML files do not use any XML namespace (just `<cellFx>`). This prevents PHPExcel from loading the style information (cellfx) in the workbook. PHPExcel has no sanity check against this case, so the loading continues without an error until the style information is requested the first time. \r\n\r\n. I don't have the necessary insight currently into the PhpSpreadsheet code strategy, testing set-up, Office XML specs and namespaces to perform a proper PR. I have deployed the following workaround locally which seems to work fine for now:\r\n\r\nCreate a new class `PHPExcel_Reader_Excel2007_NonStandardNamespacesWorkaround.php`:\r\n\r\n```\r\n<?php\r\n\r\nclass PHPExcel_Reader_Excel2007_NonStandardNamespacesWorkaround extends PHPExcel_Reader_Excel2007\r\n{\r\n\r\n    public function securityScan($xml)\r\n    {\r\n        $xml = parent::securityScan($xml);\r\n        return str_replace(\r\n            [\r\n                '<x:',\r\n                '</x:',\r\n                /*':x=',*/\r\n                '<d:',\r\n                '</d:'\r\n                /*, ':d='*/\r\n            ],\r\n            [\r\n                '<',\r\n                '</',\r\n                /*'=',*/\r\n                '<',\r\n                '</'\r\n                /*, '='*/\r\n            ],\r\n            $xml\r\n        );\r\n    }\r\n\r\n}\r\n```\r\n\r\nThen load your excel file using this reader:\r\n\r\n```\r\n$excelReader = new PHPExcel_Reader_Excel2007_NonStandardNamespacesWorkaround();\r\n$objPHPExcel = $excelReader->load($inputFileName);\r\n```\r\n\r\nI can however supply sample files with these non-standard namespaces in them to make TDD easier:\r\n - The file from #979 with \"d\"-namespace in xl/styles.xml: \r\n[file-with-d-namespace-in-styles-xml_Export-test.xlsx](https://github.com/PHPOffice/PHPExcel/files/931710/file-with-d-namespace-in-styles-xml_Export-test.xlsx) looks like this when opened with Excel: \r\n<img width=\"1680\" alt=\"fullscreen_2017-04-19__05_58\" src=\"https://cloud.githubusercontent.com/assets/793037/25162734/54f485c2-24c5-11e7-8f95-051e2d49dafe.png\">\r\n\r\n - A file, which similar to the report in #571 uses an x-namespace all over, causing even loading of worksheets to fail: \r\n[file-with-x-namespace-overall_Statement.xlsx](https://github.com/PHPOffice/PHPExcel/files/931711/file-with-x-namespace-overall_Statement.xlsx) looks like this when opened with Excel: \r\n<img width=\"1680\" alt=\"fullscreen_2017-04-19__06_00\" src=\"https://cloud.githubusercontent.com/assets/793037/25162764/7cb487ba-24c5-11e7-8e20-ec995a58168a.png\">\r\n (it is just a header row, no transactions in this file)\r\n\r\nHope this helps!. This seems to be related to https://github.com/PHPOffice/PHPExcel/issues/571\n. I found a workaround, it is ugly but works until this issue has been fixed...\n\nCreate a new class `PHPExcel_Reader_Excel2007_XNamespace.php`:\n\n```\n<?php\n\nclass PHPExcel_Reader_Excel2007_XNamespace extends PHPExcel_Reader_Excel2007\n{\n\n    public function securityScan($xml)\n    {\n        $xml = parent::securityScan($xml);\n        return str_replace(['<x:', '</x:'], ['<', '</'], $xml);\n    }\n\n}\n```\n\nThen load your excel file using this reader:\n\n```\n$excelReader = new PHPExcel_Reader_Excel2007_XNamespace();\n$objPHPExcel = $excelReader->load($inputFileName);\n```\n. Related: https://github.com/PHPOffice/PHPExcel/issues/571\n. I found the underlying issue. Your file (as well as my problematic files) uses an XML namespace \"d\" in `xl/styles.xml` (ie `<d:cellFx>`), while as ordinary Excel XML files do not use any XML namespace (just `<cellFx>`). This prevents PHPExcel from loading the style information (cellfx) in the workbook. PHPExcel has no sanity check against this case, so the loading continues without an error until the style information is requested the first time. \r\n\r\n. I don't have the necessary insight currently into the PhpSpreadsheet code strategy, testing set-up, Office XML specs and namespaces to perform a proper PR. I have deployed the following workaround locally which seems to work fine for now:\r\n\r\nCreate a new class `PHPExcel_Reader_Excel2007_NonStandardNamespacesWorkaround.php`:\r\n\r\n```\r\n<?php\r\n\r\nclass PHPExcel_Reader_Excel2007_NonStandardNamespacesWorkaround extends PHPExcel_Reader_Excel2007\r\n{\r\n\r\n    public function securityScan($xml)\r\n    {\r\n        $xml = parent::securityScan($xml);\r\n        return str_replace(\r\n            [\r\n                '<x:',\r\n                '</x:',\r\n                /*':x=',*/\r\n                '<d:',\r\n                '</d:'\r\n                /*, ':d='*/\r\n            ],\r\n            [\r\n                '<',\r\n                '</',\r\n                /*'=',*/\r\n                '<',\r\n                '</'\r\n                /*, '='*/\r\n            ],\r\n            $xml\r\n        );\r\n    }\r\n\r\n}\r\n```\r\n\r\nThen load your excel file using this reader:\r\n\r\n```\r\n$excelReader = new PHPExcel_Reader_Excel2007_NonStandardNamespacesWorkaround();\r\n$objPHPExcel = $excelReader->load($inputFileName);\r\n```\r\n\r\nI can however supply sample files with these non-standard namespaces in them to make TDD easier:\r\n - The file from #979 with \"d\"-namespace in xl/styles.xml: \r\n[file-with-d-namespace-in-styles-xml_Export-test.xlsx](https://github.com/PHPOffice/PHPExcel/files/931710/file-with-d-namespace-in-styles-xml_Export-test.xlsx) looks like this when opened with Excel: \r\n<img width=\"1680\" alt=\"fullscreen_2017-04-19__05_58\" src=\"https://cloud.githubusercontent.com/assets/793037/25162734/54f485c2-24c5-11e7-8f95-051e2d49dafe.png\">\r\n\r\n - A file, which similar to the report in #571 uses an x-namespace all over, causing even loading of worksheets to fail: \r\n[file-with-x-namespace-overall_Statement.xlsx](https://github.com/PHPOffice/PHPExcel/files/931711/file-with-x-namespace-overall_Statement.xlsx) looks like this when opened with Excel: \r\n<img width=\"1680\" alt=\"fullscreen_2017-04-19__06_00\" src=\"https://cloud.githubusercontent.com/assets/793037/25162764/7cb487ba-24c5-11e7-8e20-ec995a58168a.png\">\r\n (it is just a header row, no transactions in this file)\r\n\r\nHope this helps!. ",
    "trongdong": "@MarkBaker What would you suggest? If we use precision and scale 14/1.0E-14 for 64-bit system, would it be an issue? \n. @MarkBaker What do you think? is it ok to merge? \n. @MarkBaker What would you suggest? If we use precision and scale 14/1.0E-14 for 64-bit system, would it be an issue? \n. @MarkBaker What do you think? is it ok to merge? \n. ",
    "maxgalbu": "Related: http://stackoverflow.com/questions/21333143/phpexcel-setautosize-for-merged-cells\n. Related: http://stackoverflow.com/questions/21333143/phpexcel-setautosize-for-merged-cells\n. ",
    "haroonabbasi": "@maxgalbu thanks for answer, i opened this issue while back. i guess i was able to fix it in same way described in stack-overflow answer. but thanks going to close this thread. \n. @maxgalbu thanks for answer, i opened this issue while back. i guess i was able to fix it in same way described in stack-overflow answer. but thanks going to close this thread. \n. ",
    "robertharm": "thanks for the info - will have a look!\n. I also contacted VaultPress, thought I also let you know...\n. same issue here. When using SQLite3 as caching mechanism, I am getting the following error in my WordPress plugin \"Maps Marker Pro\":\r\n\r\n`Fatal error: Call to a member function setValue() on null in /PHPExcel/Worksheet.php on line 1095`\r\nor\r\n`Fatal error: Call to a member function getXfIndex() on null in /PHPExcel/Style.php on line 412`\r\n\r\nIf I try it again several times, sometimes these errors do not occur and a file is created - anyway as @lourdas describes, this file is also empty.\r\n\r\nAny input on how to solve this would be appreciated!\r\n. thanks for the info - will have a look!\n. I also contacted VaultPress, thought I also let you know...\n. same issue here. When using SQLite3 as caching mechanism, I am getting the following error in my WordPress plugin \"Maps Marker Pro\":\r\n\r\n`Fatal error: Call to a member function setValue() on null in /PHPExcel/Worksheet.php on line 1095`\r\nor\r\n`Fatal error: Call to a member function getXfIndex() on null in /PHPExcel/Style.php on line 412`\r\n\r\nIf I try it again several times, sometimes these errors do not occur and a file is created - anyway as @lourdas describes, this file is also empty.\r\n\r\nAny input on how to solve this would be appreciated!\r\n. ",
    "rm-fixeads": "I have the same problem. This error occurs before I execute any of my code.\r\nHere is an example:\r\n```\r\nrequire 'vendor/autoload.php';\r\n\r\n$xlsFile = __DIR__ . '/translations.xlsx';\r\n$sheetName = 'SITE Translations';\r\n\r\n$objReader = PHPExcel_IOFactory::createReader('Excel2007');\r\n$objPHPExcel = $objReader->load($xlsFile);\r\n```\r\nThe moment I execute `$objReader->load()` it throws this error:\r\n```\r\nPHP Notice:  Undefined index: $ in /home/path/translations/vendor/phpoffice/phpexcel/Classes/PHPExcel/Cell.php on line 809\r\nPHP Stack trace:\r\nPHP   1. {main}() /home/path/translations/index.php:0\r\nPHP   2. PHPExcel_Reader_Excel2007->load() /home/path/translations/index.php:15\r\nPHP   3. PHPExcel_Worksheet_AutoFilter->setRange() /home/path/translations/vendor/phpoffice/phpexcel/Classes/PHPExcel/Reader/Excel2007.php:1012\r\nPHP   4. PHPExcel_Cell::rangeBoundaries() /home/path/translations/vendor/phpoffice/phpexcel/Classes/PHPExcel/Worksheet/AutoFilter.php:131\r\nPHP   5. PHPExcel_Cell::columnIndexFromString() /home/path/translations/vendor/phpoffice/phpexcel/Classes/PHPExcel/Cell.php:729\r\nPHP Notice:  Undefined index: $ in /homepath/translations/vendor/phpoffice/phpexcel/Classes/PHPExcel/Cell.php on line 809\r\nPHP Stack trace:\r\nPHP   1. {main}() /home/path/translations/index.php:0\r\nPHP   2. PHPExcel_Reader_Excel2007->load() /home/path/translations/index.php:15\r\nPHP   3. PHPExcel_Worksheet_AutoFilter->setRange() /home/path/translations/vendor/phpoffice/phpexcel/Classes/PHPExcel/Reader/Excel2007.php:1012\r\nPHP   4. PHPExcel_Cell::rangeBoundaries() /home/path/translations/vendor/phpoffice/phpexcel/Classes/PHPExcel/Worksheet/AutoFilter.php:131\r\nPHP   5. PHPExcel_Cell::columnIndexFromString() /home/path/translations/vendor/phpoffice/phpexcel/Classes/PHPExcel/Cell.php:730\r\n```. I have the same problem. This error occurs before I execute any of my code.\r\nHere is an example:\r\n```\r\nrequire 'vendor/autoload.php';\r\n\r\n$xlsFile = __DIR__ . '/translations.xlsx';\r\n$sheetName = 'SITE Translations';\r\n\r\n$objReader = PHPExcel_IOFactory::createReader('Excel2007');\r\n$objPHPExcel = $objReader->load($xlsFile);\r\n```\r\nThe moment I execute `$objReader->load()` it throws this error:\r\n```\r\nPHP Notice:  Undefined index: $ in /home/path/translations/vendor/phpoffice/phpexcel/Classes/PHPExcel/Cell.php on line 809\r\nPHP Stack trace:\r\nPHP   1. {main}() /home/path/translations/index.php:0\r\nPHP   2. PHPExcel_Reader_Excel2007->load() /home/path/translations/index.php:15\r\nPHP   3. PHPExcel_Worksheet_AutoFilter->setRange() /home/path/translations/vendor/phpoffice/phpexcel/Classes/PHPExcel/Reader/Excel2007.php:1012\r\nPHP   4. PHPExcel_Cell::rangeBoundaries() /home/path/translations/vendor/phpoffice/phpexcel/Classes/PHPExcel/Worksheet/AutoFilter.php:131\r\nPHP   5. PHPExcel_Cell::columnIndexFromString() /home/path/translations/vendor/phpoffice/phpexcel/Classes/PHPExcel/Cell.php:729\r\nPHP Notice:  Undefined index: $ in /homepath/translations/vendor/phpoffice/phpexcel/Classes/PHPExcel/Cell.php on line 809\r\nPHP Stack trace:\r\nPHP   1. {main}() /home/path/translations/index.php:0\r\nPHP   2. PHPExcel_Reader_Excel2007->load() /home/path/translations/index.php:15\r\nPHP   3. PHPExcel_Worksheet_AutoFilter->setRange() /home/path/translations/vendor/phpoffice/phpexcel/Classes/PHPExcel/Reader/Excel2007.php:1012\r\nPHP   4. PHPExcel_Cell::rangeBoundaries() /home/path/translations/vendor/phpoffice/phpexcel/Classes/PHPExcel/Worksheet/AutoFilter.php:131\r\nPHP   5. PHPExcel_Cell::columnIndexFromString() /home/path/translations/vendor/phpoffice/phpexcel/Classes/PHPExcel/Cell.php:730\r\n```. ",
    "kamwoz": "@rm-fixeads My xlsx file had collapsed rows, when I expanded them, error dissapeared. @rm-fixeads My xlsx file had collapsed rows, when I expanded them, error dissapeared. ",
    "adaur": "Works great, thanks! :+1: \n. Works great, thanks! :+1: \n. ",
    "hackermz": "@adaur Thank you for your reply. Is there any issue while using this patch?\nI would love to discuss if you have any concern or idea.\n. @adaur Thank you for your reply. Is there any issue while using this patch?\nI would love to discuss if you have any concern or idea.\n. ",
    "Pashugan": "@MarkBaker Could you please review this very little and obvious fix? It might be very helpful for others.\n. Thank you.\n. @MarkBaker Could you please review this very little and obvious fix? It might be very helpful for others.\n. Thank you.\n. ",
    "izanev": "Sure thing, Mark.\n\nThe 'u' modifier successfully resolved the issue! Thank you ;)\n\nThis is the file name: cell_value_sometimes_false_utf8_preg_whitespace.html\n\nThe last cell will be FALSE.\n. Sure thing, Mark.\n\nThe 'u' modifier successfully resolved the issue! Thank you ;)\n\nThis is the file name: cell_value_sometimes_false_utf8_preg_whitespace.html\n\nThe last cell will be FALSE.\n. ",
    "firegate666": "I figured out that this works:\n\n```\nif ($column_data->getType() == PHPExcel_Cell_DataType::TYPE_NUMERIC) {\n    $sheet->getStyleByColumnAndRow($this->getCoordinates()[$column_no] . ($row_no + $this->getRowOffset()))->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);\n    $sheet->getStyleByColumnAndRow($this->getCoordinates()[$column_no] . ($row_no + $this->getRowOffset()))->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_TOP);\n} else {\n    $sheet->getStyleByColumnAndRow($this->getCoordinates()[$column_no] . ($row_no + $this->getRowOffset()))->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_LEFT);\n    $sheet->getStyleByColumnAndRow($this->getCoordinates()[$column_no] . ($row_no + $this->getRowOffset()))->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_TOP);\n}\n```\n. I have figured out that the internal caching is causing this issue. The more I use the sheet to retrieve the rows and cells over and over again, the less problems I have and the more it works but it awfully slows down the whole thing.\n. Or use register error and exception handler and write errors, warnings and notices to a log file.\n. I have no issues with Office 2013. Upload your file to dropbox, Google drive or any other free hoster\n. Works with my installation of excel 2013 (see screenshots https://www.dropbox.com/sh/pgyvmv6q8jf69qr/AACD_bDnn0Hp_l8ACQb0UYe_a?dl=0)\n\nDo you have any add ons installed? mac or windows? I am using windows\n. I figured out that this works:\n\n```\nif ($column_data->getType() == PHPExcel_Cell_DataType::TYPE_NUMERIC) {\n    $sheet->getStyleByColumnAndRow($this->getCoordinates()[$column_no] . ($row_no + $this->getRowOffset()))->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);\n    $sheet->getStyleByColumnAndRow($this->getCoordinates()[$column_no] . ($row_no + $this->getRowOffset()))->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_TOP);\n} else {\n    $sheet->getStyleByColumnAndRow($this->getCoordinates()[$column_no] . ($row_no + $this->getRowOffset()))->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_LEFT);\n    $sheet->getStyleByColumnAndRow($this->getCoordinates()[$column_no] . ($row_no + $this->getRowOffset()))->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_TOP);\n}\n```\n. I have figured out that the internal caching is causing this issue. The more I use the sheet to retrieve the rows and cells over and over again, the less problems I have and the more it works but it awfully slows down the whole thing.\n. Or use register error and exception handler and write errors, warnings and notices to a log file.\n. I have no issues with Office 2013. Upload your file to dropbox, Google drive or any other free hoster\n. Works with my installation of excel 2013 (see screenshots https://www.dropbox.com/sh/pgyvmv6q8jf69qr/AACD_bDnn0Hp_l8ACQb0UYe_a?dl=0)\n\nDo you have any add ons installed? mac or windows? I am using windows\n. ",
    "cherrador": "I have the same problem. I tried and (failed) to create one Regular Expression that match all the cases of Ranges on formulas. I run out of time.\n\nI need to revisit the problem, but now I want to create 3 cases and join them with '|' operator to consider these cases:\nSheet!A:A\nSheet!1:1\nSheet!A1:B2\n\nThe last case is the only one implemented that works so far. Later it will need to implement the handler of those other special cases.\n. I have the same problem. I tried and (failed) to create one Regular Expression that match all the cases of Ranges on formulas. I run out of time.\n\nI need to revisit the problem, but now I want to create 3 cases and join them with '|' operator to consider these cases:\nSheet!A:A\nSheet!1:1\nSheet!A1:B2\n\nThe last case is the only one implemented that works so far. Later it will need to implement the handler of those other special cases.\n. ",
    "sansanboy": "how to fix it. i using 1.8.0 . how to fix it. i using 1.8.0 . ",
    "jjhamilton": "I should have mentioned that I am using PHPExcel-master (so apparently v1.8.0) with PHP 5.3.3-40 on a machine running RedHat Linux.\n. Resolved. I had specified:\n        PHPExcel_Chart_DataSeries::TYPE_LINECHART,      // plotType\n        PHPExcel_Chart_DataSeries::GROUPING_CLUSTERED,  // plotGrouping\n\nThe problem went away when I changed the grouping to STANDARD:\n        PHPExcel_Chart_DataSeries::TYPE_LINECHART,      // plotType\n        PHPExcel_Chart_DataSeries::GROUPING_STANDARD,   // plotGrouping\n. I should have mentioned that I am using PHPExcel-master (so apparently v1.8.0) with PHP 5.3.3-40 on a machine running RedHat Linux.\n. Resolved. I had specified:\n        PHPExcel_Chart_DataSeries::TYPE_LINECHART,      // plotType\n        PHPExcel_Chart_DataSeries::GROUPING_CLUSTERED,  // plotGrouping\n\nThe problem went away when I changed the grouping to STANDARD:\n        PHPExcel_Chart_DataSeries::TYPE_LINECHART,      // plotType\n        PHPExcel_Chart_DataSeries::GROUPING_STANDARD,   // plotGrouping\n. ",
    "chrisgraham": "Non-ASCII strings are always gonna use _more_ bytes though, so the optimisation should be ok I think. The optimisation might not kick in, causing an unnecessary substring call anyway, but not introduce any actual bug. Correct me if I'm wrong, I do have a headache to day so who knows ;).\n\nstr_replace in PHP will always rewrite the string I think, it's pretty inefficient. strpos will do a simpler scan. Never over-estimate the smartness of PHP, if you look at the C code you'll see it rarely does clever stuff, and typically has various levels of abstraction making things worse.\n\nIf it's just default styling on a cell, the temporary cell I mentioned above would be able to pull that out. If the styling is then made explicit, the object of that temporary cell can then modify the sheet to insert an actual cell object with that actual style. I know it's a tricky thing to do, but benefit would be enormous.\n\nI tested setting my cell, then doing a var_dump of the object. I didn't see any references to caching, I saw the explicit value there. I couldn't see how the code could be doing it either. However, I did find the code a bit confusing, so I may have missed it. Perhaps it is changing what is in the sheet but leaving the cell object.\n. Non-ASCII strings are always gonna use _more_ bytes though, so the optimisation should be ok I think. The optimisation might not kick in, causing an unnecessary substring call anyway, but not introduce any actual bug. Correct me if I'm wrong, I do have a headache to day so who knows ;).\n\nstr_replace in PHP will always rewrite the string I think, it's pretty inefficient. strpos will do a simpler scan. Never over-estimate the smartness of PHP, if you look at the C code you'll see it rarely does clever stuff, and typically has various levels of abstraction making things worse.\n\nIf it's just default styling on a cell, the temporary cell I mentioned above would be able to pull that out. If the styling is then made explicit, the object of that temporary cell can then modify the sheet to insert an actual cell object with that actual style. I know it's a tricky thing to do, but benefit would be enormous.\n\nI tested setting my cell, then doing a var_dump of the object. I didn't see any references to caching, I saw the explicit value there. I couldn't see how the code could be doing it either. However, I did find the code a bit confusing, so I may have missed it. Perhaps it is changing what is in the sheet but leaving the cell object.\n. ",
    "sakibulalam": "any solution to this?\n. any solution to this?\n. ",
    "Holisollogistics": "Hi guys please help me out in this issue...\r\nthe following code returns the error in some cases...\r\n\r\nCode::\r\n\\Excel::load(public_path() . '/calculator/' . $name, function($results) { });\r\n\r\nError ::\r\nErrorException in ZipArchive.php line 173:\r\nUndefined variable: contents. I have already done this.... Yeah Thanks @PowerKiKi.....It's working now.... Hi guys please help me out in this issue...\r\nthe following code returns the error in some cases...\r\n\r\nCode::\r\n\\Excel::load(public_path() . '/calculator/' . $name, function($results) { });\r\n\r\nError ::\r\nErrorException in ZipArchive.php line 173:\r\nUndefined variable: contents. I have already done this.... Yeah Thanks @PowerKiKi.....It's working now.... ",
    "og3og": "Hey, this is solved in version 1.8.1 or you can use the fix I implemented here http://stackoverflow.com/questions/15241733/reading-phone-number-with-leading-zero-by-phpexcel/32619268#32619268\n. Got it! thanks a lot for pointing me in the right direction. \n. Hey, this is solved in version 1.8.1 or you can use the fix I implemented here http://stackoverflow.com/questions/15241733/reading-phone-number-with-leading-zero-by-phpexcel/32619268#32619268\n. Got it! thanks a lot for pointing me in the right direction. \n. ",
    "etomilin": "@MarkBaker Could you please review this?\n. @MarkBaker Could you please review this?\n. ",
    "loclamor": "thank you for `fputcsv`perhaps I'll use it\n\nI use PHPExcel because I have two services classes which inherit from a common parent, one to generate XLS files, and the other for CSV files. And PHPExcel allow me to not duplicate code, just change the writter. (Just CSV can contain geometries inside).\n\nIf there are not other solutions, i will use fputcsv for CSV service instead of PHPExcel.\nBut it would be great that this limitation in string length could be disabled in future version of PHPExcel when making CSV file or HTML file which don't have length limitation\n. thank you for `fputcsv`perhaps I'll use it\n\nI use PHPExcel because I have two services classes which inherit from a common parent, one to generate XLS files, and the other for CSV files. And PHPExcel allow me to not duplicate code, just change the writter. (Just CSV can contain geometries inside).\n\nIf there are not other solutions, i will use fputcsv for CSV service instead of PHPExcel.\nBut it would be great that this limitation in string length could be disabled in future version of PHPExcel when making CSV file or HTML file which don't have length limitation\n. ",
    "marvinGitHub": "It would make more sense to controll this character limitation in regard to the compatibilitiy modes.\n. It would make more sense to controll this character limitation in regard to the compatibilitiy modes.\n. ",
    "brunowego": "+1\n. +1\n. ",
    "phackwer": "I agree, but anyone who wants to insert any non-SPL object should be obligated to write a __toString method. It's not a bad habit.\n. Another thing that would be good is to be able to set date mask as a configuration item. So, I could do something like \n\nPHPExcel::setDateTimeMask('d/m/Y H:i:s');\n. Humm... The problem in this case is that I do not have a clue of what will come, since it's a generic export-to-excel function. Anything can come. So, we basically have these two options only.\n\nAlso, the __toString could be done by only serializing the object if __toString is not avaliable.\n\nBut the DateTime is a constant: we do have this issue and formating is not a problem, since people could set it later on  Excel.\n. The real problem is having an \\Exception throw due the lack of a default solution.\n. I agree, but anyone who wants to insert any non-SPL object should be obligated to write a __toString method. It's not a bad habit.\n. Another thing that would be good is to be able to set date mask as a configuration item. So, I could do something like \n\nPHPExcel::setDateTimeMask('d/m/Y H:i:s');\n. Humm... The problem in this case is that I do not have a clue of what will come, since it's a generic export-to-excel function. Anything can come. So, we basically have these two options only.\n\nAlso, the __toString could be done by only serializing the object if __toString is not avaliable.\n\nBut the DateTime is a constant: we do have this issue and formating is not a problem, since people could set it later on  Excel.\n. The real problem is having an \\Exception throw due the lack of a default solution.\n. ",
    "half2me": "#814 ext-gd2 will not be resolved. Only ext-gd is supported by composer, with a possible version constraint of ~2\n. #814 ext-gd2 will not be resolved. Only ext-gd is supported by composer, with a possible version constraint of ~2\n. ",
    "redcuillin": "Ok - I've worked it out. This will have been caused by a clash between the Composer-included version, and a call to the old PEAR library that still existed in the code. Apologies for wasting your time.\n. Ok - I've worked it out. This will have been caused by a clash between the Composer-included version, and a call to the old PEAR library that still existed in the code. Apologies for wasting your time.\n. ",
    "PriestVallon": "Instead of looping I get the rows 1-100 in one file and then get the rows 101-200 in a separate file they use the same amount of memory. But if I try to do it in a loop the second loop uses more memory than the first.\n. From the tests I'm running it appears as though the memory isn't increasing by as much as it was but it is still increasing slightly even with `$objPHPExcel->disconnectWorksheets();\n    unset($objPHPExcel);` so I don't know what could be causing it.\n. Instead of looping I get the rows 1-100 in one file and then get the rows 101-200 in a separate file they use the same amount of memory. But if I try to do it in a loop the second loop uses more memory than the first.\n. From the tests I'm running it appears as though the memory isn't increasing by as much as it was but it is still increasing slightly even with `$objPHPExcel->disconnectWorksheets();\n    unset($objPHPExcel);` so I don't know what could be causing it.\n. ",
    "s-robertson": "I was running into a similar issue and I believe I've tracked it down to the PHPExcel_Calculation class. In my testing, I'm seeing that its $_workbookSets array is never emptied out and continues to have more instances added to it with each chunk iteration. \n\nUnfortunately I haven't been able to track down the exact cause, but it seems that the unsetInstance() method is only called at the very end of script execution, when the PHPExcel class destructor is called. \n\nMy temporary solution has been to add a new unsetInstances() static method to the Calculation class, which sets $_workbookSets to an empty array, and then call that method at the end of my chunk loop.\n\nNote that calling disconnectWorksheets() does not seem to have any effect in correcting this, nor does forcing PHP's garbage collection via gc_collect_cycles().\n. I was running into a similar issue and I believe I've tracked it down to the PHPExcel_Calculation class. In my testing, I'm seeing that its $_workbookSets array is never emptied out and continues to have more instances added to it with each chunk iteration. \n\nUnfortunately I haven't been able to track down the exact cause, but it seems that the unsetInstance() method is only called at the very end of script execution, when the PHPExcel class destructor is called. \n\nMy temporary solution has been to add a new unsetInstances() static method to the Calculation class, which sets $_workbookSets to an empty array, and then call that method at the end of my chunk loop.\n\nNote that calling disconnectWorksheets() does not seem to have any effect in correcting this, nor does forcing PHP's garbage collection via gc_collect_cycles().\n. ",
    "max4ever": "Using phpoffice/phpexcel (1.8.x-dev 8af620f)\n\nSmaller, but still memory leak :\n\nLoading from 2 to 1002\nCurrent memory usage: **25.75 MB**\n\nLoading from 1002 to 2002\nCurrent memory usage: **26.75 MB**\n\nLoading from 2002 to 3002\nCurrent memory usage: **28.25 MB**\n...\n. Forgot, here is the code i used, as you can see i used `setReadDataOnly(true);`\n\n``` php\n$objReader = PHPExcel_IOFactory::createReaderForFile($fileName);\n /** @var PHPExcel_Reader_Excel2007 $objReader */\n\n$chunkSize = 1000;\n$chunkFilter = new chunkReadFilter();\n$objReader->setReadFilter($chunkFilter);\n$objReader->setReadDataOnly(true);\n\n$totalRows = 10000;\n/**  Loop to read our worksheet in \"chunk size\" blocks  * */\nfor ($startRow = 2; $startRow <= $totalRows; $startRow += $chunkSize) {\n    $this->log(\"Loading WorkSheet for rows \" . $startRow . \" to \" . ($startRow + $chunkSize - 1) . PHP_EOL );\n    $chunkFilter->setRows($startRow, $chunkSize);\n    $this->log(\"Loading from \" . $startRow . \" to \" . ($startRow + $chunkSize) );\n\n    $callStartTime = microtime(true);\n    $objPHPExcel = $objReader->load($fileName);\n    $callEndTime = microtime(true);\n\n    $callTime = $callEndTime - $callStartTime;\n    echo 'Call time to read Workbook was ' , sprintf('%.4f',$callTime) , \" seconds\" , PHP_EOL;// Echo memory usage\n    echo date('H:i:s') , ' Current memory usage: ' , (memory_get_usage(true) / 1024 / 1024) , \" MB\" , PHP_EOL;\n\n    $sheetData = $objPHPExcel->getActiveSheet()->toArray(null, false, false, false);\n    if (!empty($sheetData) && $startRow < $totalRows) {\n     //   call_user_func($rowCallback, $sheetData);\n    }\n\n    $objPHPExcel->disconnectWorksheets();\n    unset($objPHPExcel, $sheetData);\n}\n...\n```\n. Using phpoffice/phpexcel (1.8.x-dev 8af620f)\n\nSmaller, but still memory leak :\n\nLoading from 2 to 1002\nCurrent memory usage: **25.75 MB**\n\nLoading from 1002 to 2002\nCurrent memory usage: **26.75 MB**\n\nLoading from 2002 to 3002\nCurrent memory usage: **28.25 MB**\n...\n. Forgot, here is the code i used, as you can see i used `setReadDataOnly(true);`\n\n``` php\n$objReader = PHPExcel_IOFactory::createReaderForFile($fileName);\n /** @var PHPExcel_Reader_Excel2007 $objReader */\n\n$chunkSize = 1000;\n$chunkFilter = new chunkReadFilter();\n$objReader->setReadFilter($chunkFilter);\n$objReader->setReadDataOnly(true);\n\n$totalRows = 10000;\n/**  Loop to read our worksheet in \"chunk size\" blocks  * */\nfor ($startRow = 2; $startRow <= $totalRows; $startRow += $chunkSize) {\n    $this->log(\"Loading WorkSheet for rows \" . $startRow . \" to \" . ($startRow + $chunkSize - 1) . PHP_EOL );\n    $chunkFilter->setRows($startRow, $chunkSize);\n    $this->log(\"Loading from \" . $startRow . \" to \" . ($startRow + $chunkSize) );\n\n    $callStartTime = microtime(true);\n    $objPHPExcel = $objReader->load($fileName);\n    $callEndTime = microtime(true);\n\n    $callTime = $callEndTime - $callStartTime;\n    echo 'Call time to read Workbook was ' , sprintf('%.4f',$callTime) , \" seconds\" , PHP_EOL;// Echo memory usage\n    echo date('H:i:s') , ' Current memory usage: ' , (memory_get_usage(true) / 1024 / 1024) , \" MB\" , PHP_EOL;\n\n    $sheetData = $objPHPExcel->getActiveSheet()->toArray(null, false, false, false);\n    if (!empty($sheetData) && $startRow < $totalRows) {\n     //   call_user_func($rowCallback, $sheetData);\n    }\n\n    $objPHPExcel->disconnectWorksheets();\n    unset($objPHPExcel, $sheetData);\n}\n...\n```\n. ",
    "keeebs": "I found this issue because I was also suffering from this memory \"leakage\". From my tests, PHPExcel is not applying the chunk filter to the cell styles. Even though you are loading cell data from rows 2002 to 3002, my suspicion, based on the memory usage I am observing in my own tests, is that the cell style data is being loaded for rows 0 to 3002. If I specify \"$objectReader->setReadDataOnly(true);\" and then run my same chunk code, my memory \"leakage\" problem goes away.\n. I found this issue because I was also suffering from this memory \"leakage\". From my tests, PHPExcel is not applying the chunk filter to the cell styles. Even though you are loading cell data from rows 2002 to 3002, my suspicion, based on the memory usage I am observing in my own tests, is that the cell style data is being loaded for rows 0 to 3002. If I specify \"$objectReader->setReadDataOnly(true);\" and then run my same chunk code, my memory \"leakage\" problem goes away.\n. ",
    "alvaro-canepa": "Thanks @Faryshta \nThis save me a lot of testing hours...\n\nI use Laravel, and the same doc was download in xls or pdf. For xls the image inclusion must have the full path, but for pdf export, the image must have the public path.\n\nSo, I use this, and work fine for me.\n\n``` php\n// $file is an array with data to export XLS or PDF\n// $image was defined from one Laravel Model ($model->image)\n$image = ($file['ext'] == 'pdf') ? $image : base_path() . $image\n$logo = new PHPExcel_Worksheet_Drawing();\n$logo->setName('Logo')\n     ->setDescription('Logo')\n     ->setPath($image, false)\n```\n\nThanks and sorry my English.\n. Thanks @Faryshta \nThis save me a lot of testing hours...\n\nI use Laravel, and the same doc was download in xls or pdf. For xls the image inclusion must have the full path, but for pdf export, the image must have the public path.\n\nSo, I use this, and work fine for me.\n\n``` php\n// $file is an array with data to export XLS or PDF\n// $image was defined from one Laravel Model ($model->image)\n$image = ($file['ext'] == 'pdf') ? $image : base_path() . $image\n$logo = new PHPExcel_Worksheet_Drawing();\n$logo->setName('Logo')\n     ->setDescription('Logo')\n     ->setPath($image, false)\n```\n\nThanks and sorry my English.\n. ",
    "kayue": "We should merge this :+1: \n. @MarkBaker Did you have chance to test this yet? It would be lovely if you can merge this because some office software generate a lot of empty cells and rows.\n. ping @MarkBaker\n. ping @MarkBaker...\n. @MarkBaker any feedback?\n. ping @MarkBaker...\n. ping @MarkBaker \n. We should merge this :+1: \n. @MarkBaker Did you have chance to test this yet? It would be lovely if you can merge this because some office software generate a lot of empty cells and rows.\n. ping @MarkBaker\n. ping @MarkBaker...\n. @MarkBaker any feedback?\n. ping @MarkBaker...\n. ping @MarkBaker \n. ",
    "cevarief": "It's solved now. I don't know why after renaming the header column name manually in excel, it works good.\n. It's solved now. I don't know why after renaming the header column name manually in excel, it works good.\n. ",
    "rahmat1996": "are you sure? so how we can insert style(like bold or something) into getCellByColumnAndRow.\r\nthank's.. are you sure? so how we can insert style(like bold or something) into getCellByColumnAndRow.\r\nthank's.. ",
    "npap": "This problem seems that still exists. Is there any other way to center an image in a cell?. This problem seems that still exists. Is there any other way to center an image in a cell?. ",
    "FHenry": "Affect me also\nPHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);\nforeach ( $column_array as $columnID ) {            $objPHPExcel->getActiveSheet()->getColumnDimension($columnID)->setAutoSize(true);\n}\n. I try with removing caching method and the result is the same\n. May be a clue, the original Excel file build wit libreoffice but save as Excell 2007 document. I don't have MSoffice license to test if it is the source of the problem \n. Affect me also\nPHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);\nforeach ( $column_array as $columnID ) {            $objPHPExcel->getActiveSheet()->getColumnDimension($columnID)->setAutoSize(true);\n}\n. I try with removing caching method and the result is the same\n. May be a clue, the original Excel file build wit libreoffice but save as Excell 2007 document. I don't have MSoffice license to test if it is the source of the problem \n. ",
    "zekial": "I also had to go back to 1.8.0 because of this\n. I also had to go back to 1.8.0 because of this\n. ",
    "maxiwheat": "I have the same issue when I try to use PHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);\n. I have the same issue when I try to use PHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);\n. ",
    "Easthy": "version 1.8.0 has this error too.\n PHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);\n$objPHPExcel->getActiveSheet()->getColumnDimensionByColumn($col+1)->setAutoSize(true); \n\n[Sun Nov 22 20:18:40 2015] [error] [client 172.16.0.50] PHP PHPExcel_Exception:  Valid directory to TrueType Font files not specified in /srv/www/test/app/webroot/PHPExcelClasses/PHPExcel/Shared/Font.php on line 428,i$\n\nPRETTY_NAME=\"Debian GNU/Linux 7 (wheezy)\"\nNAME=\"Debian GNU/Linux\"\nVERSION_ID=\"7\"\nVERSION=\"7 (wheezy)\"\nID=debian\n\nphp --version\nPHP 5.4.45-0+deb7u2 (cli) (built: Oct 17 2015 08:26:31) \nCopyright (c) 1997-2014 The PHP Group\nZend Engine v2.4.0, Copyright (c) 1998-2014 Zend Technologies\n    with Xdebug v2.2.1, Copyright (c) 2002-2012, by Derick Rethans\n\nBut autoSize perfectly works on kubuntu 14.04 LTS\n. version 1.8.0 has this error too.\n PHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);\n$objPHPExcel->getActiveSheet()->getColumnDimensionByColumn($col+1)->setAutoSize(true); \n\n[Sun Nov 22 20:18:40 2015] [error] [client 172.16.0.50] PHP PHPExcel_Exception:  Valid directory to TrueType Font files not specified in /srv/www/test/app/webroot/PHPExcelClasses/PHPExcel/Shared/Font.php on line 428,i$\n\nPRETTY_NAME=\"Debian GNU/Linux 7 (wheezy)\"\nNAME=\"Debian GNU/Linux\"\nVERSION_ID=\"7\"\nVERSION=\"7 (wheezy)\"\nID=debian\n\nphp --version\nPHP 5.4.45-0+deb7u2 (cli) (built: Oct 17 2015 08:26:31) \nCopyright (c) 1997-2014 The PHP Group\nZend Engine v2.4.0, Copyright (c) 1998-2014 Zend Technologies\n    with Xdebug v2.2.1, Copyright (c) 2002-2012, by Derick Rethans\n\nBut autoSize perfectly works on kubuntu 14.04 LTS\n. ",
    "christhomas": "I'm having this exact problem now, I'm going to try a previous version\n. downgrading to 1.8.0 also solved the problem for me as well, I updated composer to use \n\n\"phpoffice/phpexcel\": \"1.8.0\"\n\nand the problem disappeared and files are rendering again\n. is this fix being merged anytime soon? I don't want to create a branch just to have this, but there is a bug in 1.8.0 because of issue: https://github.com/PHPOffice/PHPExcel/issues/434\n. I'm having this exact problem now, I'm going to try a previous version\n. downgrading to 1.8.0 also solved the problem for me as well, I updated composer to use \n\n\"phpoffice/phpexcel\": \"1.8.0\"\n\nand the problem disappeared and files are rendering again\n. is this fix being merged anytime soon? I don't want to create a branch just to have this, but there is a bug in 1.8.0 because of issue: https://github.com/PHPOffice/PHPExcel/issues/434\n. ",
    "sharpensteel": "hi guys!\ni debugged a bit, \nthere is exception at PHPExcel/Shared/Font.php, in line 272:\n\n``` php\n$columnWidthAdjust = ceil(self::getTextWidthPixelsExact('n', $font, 0) * 1.07);\n```\n\nin old versions this line was inside try/catch block, so exception was suppressed.\nexception:\n\n``` php\nif (!file_exists(self::$trueTypeFontPath) || !is_dir(self::$trueTypeFontPath)) {\n    throw new PHPExcel_Exception('Valid directory to TrueType Font files not specified');\n}\n```\n\nthe deep reason is that `PHPExcel_Shared_Font::$trueTypeFontPath` was newer set, `PHPExcel_Shared_Font::setTrueTypeFontPath()` never called\n. hi guys!\ni debugged a bit, \nthere is exception at PHPExcel/Shared/Font.php, in line 272:\n\n``` php\n$columnWidthAdjust = ceil(self::getTextWidthPixelsExact('n', $font, 0) * 1.07);\n```\n\nin old versions this line was inside try/catch block, so exception was suppressed.\nexception:\n\n``` php\nif (!file_exists(self::$trueTypeFontPath) || !is_dir(self::$trueTypeFontPath)) {\n    throw new PHPExcel_Exception('Valid directory to TrueType Font files not specified');\n}\n```\n\nthe deep reason is that `PHPExcel_Shared_Font::$trueTypeFontPath` was newer set, `PHPExcel_Shared_Font::setTrueTypeFontPath()` never called\n. ",
    "Pacoup": "**2016-05-05**  \nUpdated with strategies for using open fonts to calculate sizes and corrections about how fonts get rendered on different platforms (you can use Linux to reliably calculate column sizes for Windows), plus notes on uses of try catch blocks.\n\n---\n\nThis is not a bug. In order to calculate exact font widths, PHPExcel actually needs fonts to work with.\n\nBefore using `setAutoSizeMethod()`, you first need to call `setTrueTypeFontPath()`:\n\n``` PHP\nPHPExcel_Shared_Font::setTrueTypeFontPath('C:/Windows/Fonts/');\nPHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);\n\nforeach (range('A','L') as $column) {\n  $objPHPExcel->getActiveSheet()->getColumnDimension($column)->setAutoSize(TRUE);\n}\n```\n- You can use forward slashes, Windows doesn't care\n- Don't forget the last slash, PHPExcel does not automatically append it to the final path\n\nHowever, this is OS-specific, so you may also want to test for Linux, Windows, OS X, and so on:\n\n``` PHP\nswitch (PHP_OS) {\n  case 'WINNT':\n    PHPExcel_Shared_Font::setTrueTypeFontPath('C:/Windows/Fonts/');\n    PHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);\n    break;\n\n  case 'Darwin':\n    PHPExcel_Shared_Font::setTrueTypeFontPath('/Library/Fonts/');\n    PHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);\n    break;\n\n  case 'Linux':\n    PHPExcel_Shared_Font::setTrueTypeFontPath('/usr/share/fonts/truetype/');\n    PHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);\n    break;\n}\n\nforeach (range('A','L') as $column) {\n  $objPHPExcel->getActiveSheet()->getColumnDimension($column)->setAutoSize(TRUE);\n}\n```\n\nBut, this will not work, because:\n- Font names are different from platform to platform\n- PHPExcel expects Windows font names\n- PHPExcel expects fonts to be located directly in the specified directory, not in subfolders, as is the case on Linux\n- Typical Linux servers won't have fonts like Arial installed\n\nTherefore, a better strategy would be to set `AUTOSIZE_METHOD_EXACT` only on Windows (assuming your production machine runs it):\n\n``` PHP\nif (PHP_OS == 'WINNT') {\n  PHPExcel_Shared_Font::setTrueTypeFontPath('C:\\Windows\\Fonts');\n  PHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);\n}\n\nforeach (range('A','L') as $column) {\n  $objPHPExcel->getActiveSheet()->getColumnDimension($column)->setAutoSize(TRUE);\n}\n```\n\nAlso note that PHPExcel supports a limited set of fonts for this method:\n- Arial\n- Calibri\n- Courier New\n- Comic Sans MS\n- Georgia\n- Impact\n- Liberation Sans\n- Lucida Console\n- Lucida Sans Unicode\n- Microsoft Sans Serif\n- Palatino Linotype\n- Symbol\n- Tahoma\n- Times New Roman\n- Trebuchet MS\n- Verdana\n\nIf you try to use an unsupported font like Arial Narrow, the method will fail:\n\n```\nUnknown font name \"Arial Narrow\". Cannot map to TrueType font file - /PHPExcel/Classes/PHPExcel/Shared/Font.php:531\n```\n\nThe method will also fail if the font can't be found on the server. Not all fonts above come with Windows Server.\n\nYou can add new fonts by patching the PHPExcel code:\n\n``` diff\ndiff --git a/PHPExcel/Classes/PHPExcel/Shared/Font.php b/PHPExcel/Classes/PHPExcel/Shared/Font.php\nindex 8e5b27b..47b9eb6 100644\n--- a/PHPExcel/Classes/PHPExcel/Shared/Font.php\n+++ b/PHPExcel/Classes/PHPExcel/Shared/Font.php\n@@ -72,6 +72,11 @@ class PHPExcel_Shared_Font\n        const ARIAL_ITALIC                              = 'ariali.ttf';\n        const ARIAL_BOLD_ITALIC                         = 'arialbi.ttf';\n\n+       const ARIAL_NARROW                              = 'ARIALN.TTF';\n+       const ARIAL_NARROW_BOLD                         = 'ARIALNB.TTF';\n+       const ARIAL_NARROW_ITALIC                       = 'ARIALNI.TTF';\n+       const ARIAL_NARROW_BOLD_ITALIC                  = 'ARIALNBI.TTF';\n+\n        const CALIBRI                                   = 'CALIBRI.TTF';\n        const CALIBRI_BOLD                              = 'CALIBRIB.TTF';\n        const CALIBRI_ITALIC                            = 'CALIBRII.TTF';\n@@ -439,6 +444,13 @@ class PHPExcel_Shared_Font\n                                );\n                                break;\n\n+                       case 'Arial Narrow':\n+                               $fontFile = (\n+                                       $bold ? ($italic ? self::ARIAL_NARROW_BOLD_ITALIC : self::ARIAL_NARROW_BOLD)\n+                                                 : ($italic ? self::ARIAL_NARROW_ITALIC : self::ARIAL_NARROW)\n+                               );\n+                               break;\n+\n                        case 'Calibri':\n                                $fontFile = (\n                                        $bold ? ($italic ? self::CALIBRI_BOLD_ITALIC : self::CALIBRI_BOLD)\n```\n\nIn order to make this platform-independent, you would need to include the font with your application, for example, in a local directory:\n\n``` PHP\nPHPExcel_Shared_Font::setTrueTypeFontPath('fonts');\nPHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);\n```\n\nHowever, this approach would require licensing fonts like Arial for redistribution. To circumvent this, you can use open clone fonts and rename them to the expected Windows file name of their equivalent. [Liberation Sans](https://fedorahosted.org/liberation-fonts/), for instance, is a metrically compatible alternative to Arial, so the resulting autosizing should be the same.\n\nIt's also impossible to embed fonts in Excel documents, so open fonts are really only an option if you're using them for their metrical compatibility.\n\nNote that even though this functionality relies on GD's `imagettfbbox` function, which means font sizes will be calculated the same regardless of platforms, not all platforms render fonts the same. As an example, I have been able to reliably generate Excel documents on Linux which render correctly on both Windows and Android, but the sizing is all wrong on OS X. I'm guessing iOS suffers from the same issues (but I have no device to test this on), but this may be a problem with Microsoft's implementation of font rendering in Excel on these platforms, not the platforms themselves. This is also not a problem with the font itself. I have tried replacing OS X's Arial font with a copy from Windows, but to no avail, the font still renders wrong.\n\n## What about previous versions of PHPExcel?\n\nBefore 1.8.1, if you hadn't run `setTrueTypeFontPath()` before setting `setAutoSizeMethod()` to `AUTOSIZE_METHOD_EXACT`, the `getTextWidthPixelsExact()` method in Font.php would simply fail silently and `setAutoSize()` would apply approximate widths, as explained by @sharpensteel.\n\nThis is because the code for `PHPExcel_Shared_Font::calculateColumnWidth()`, a method called when calculating automatic column widths, looked like this:\n\n``` PHP\n// Try to get the exact text width in pixels\ntry {\n  // If autosize method is set to 'approx', use approximation\n  if (self::$autoSizeMethod == self::AUTOSIZE_METHOD_APPROX) {\n    throw new PHPExcel_Exception('AutoSize method is set to approx');\n  }\n\n  // Width of text in pixels excl. padding\n  $columnWidth = self::getTextWidthPixelsExact($cellText, $font, $rotation);\n\n  // Excel adds some padding, use 1.07 of the width of an 'n' glyph\n  $columnWidth += ceil(self::getTextWidthPixelsExact('0', $font, 0) * 1.07); // pixels incl. padding\n\n} catch (PHPExcel_Exception $e) {\n  // Width of text in pixels excl. padding, approximation\n  $columnWidth = self::getTextWidthPixelsApprox($cellText, $font, $rotation);\n\n  // Excel adds some padding, just use approx width of 'n' glyph\n  $columnWidth += self::getTextWidthPixelsApprox('n', $font, 0);\n}\n```\n\nAssuming we didn't run `setTrueTypeFontPath()`, the next method, `getTextWidthPixelsExact()`, would call `getTrueTypeFontFileFromFont()` which itself would `throw`, but because `getTextWidthPixelsExact()` is called from within a `try` block, PHP would catch the `throw` and the function would go on with `getTextWidthPixelsApprox()` in the `catch` block.\n\nSo even though you didn't get any errors, it didn't actually work and the column sizes would be approximate, which probably explains https://github.com/PHPOffice/PHPExcel/issues/853.\n\nIn 1.8.1, the code now looks like this:\n\n``` PHP\n// Try to get the exact text width in pixels\n$approximate = self::$autoSizeMethod == self::AUTOSIZE_METHOD_APPROX;\nif (!$approximate) {\n  $columnWidthAdjust = ceil(self::getTextWidthPixelsExact('n', $font, 0) * 1.07);\n  try {\n    // Width of text in pixels excl. padding\n    // and addition because Excel adds some padding, just use approx width of 'n' glyph\n    $columnWidth = self::getTextWidthPixelsExact($cellText, $font, $rotation) + $columnWidthAdjust;\n  } catch (PHPExcel_Exception $e) {\n    $approximate = true;\n  }\n}\n\nif ($approximate) {\n  $columnWidthAdjust = self::getTextWidthPixelsApprox('n', $font, 0);\n  // Width of text in pixels excl. padding, approximation\n  // and addition because Excel adds some padding, just use approx width of 'n' glyph\n  $columnWidth = self::getTextWidthPixelsApprox($cellText, $font, $rotation) + $columnWidthAdjust;\n}\n```\n\nAs you can see, the first call to `getTextWidthPixelsExact()` is not within a `try` block, so when `getTextWidthPixelsExact()` calls [`getTrueTypeFontFileFromFont()`](https://github.com/PHPOffice/PHPExcel/blob/372c7cbb695a6f6f1e62649381aeaa37e7e70b32/Classes/PHPExcel/Shared/Font.php#L311), the [throw](https://github.com/PHPOffice/PHPExcel/blob/372c7cbb695a6f6f1e62649381aeaa37e7e70b32/Classes/PHPExcel/Shared/Font.php#L425-L427) properly\\* halts execution and outputs an error.\n\n\\* Technically, this seems to have been \"fixed\" inadvertently: https://github.com/PHPOffice/PHPExcel/commit/ddec5e9 \nBesides, try catch blocks should not be used as conditionals because throw is dynamically scoped. Anything which throws within the execution context of a try catch block will be caught by the catch block, so if you don't handle it, the error gets lost. It's called catch because you're supposed to catch exceptions and do something with them. That $e parameter isn't allocated for nothing. But that's a note for @MarkBaker \n. Although all new development has moved to a new project (https://github.com/PHPOffice/PhpSpreadsheet), **this is not a bug**. If you're getting the error, your client code isn't using the API properly.\r\n\r\nYes, the error reporting to could be better. Yes, the API could assume some system defaults. But the point is, if you're not setting the font path, even if you had no error before, `setAutoSizeMethod()` never actually worked.\r\n\r\nYou can upgrade through Composer and fix the error by calling `setTrueTypeFontPath()` before you call `setAutoSizeMethod()`.\r\n\r\nHere's an excerpt from a Drupal module I work on:\r\n\r\n```PHP\r\n$objPHPExcel = new PHPExcel();\r\n$active_sheet = $objPHPExcel->getActiveSheet();\r\n\r\n// ...\r\n\r\nPHPExcel_Shared_Font::setTrueTypeFontPath(DRUPAL_ROOT . '/' . drupal_get_path('module', 'learning_app') . '/fonts/');\r\nPHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);\r\n\r\nforeach (range('A','O') as $column) {\r\n  $active_sheet->getColumnDimension($column)->setAutoSize(TRUE);\r\n}\r\n```\r\n\r\nThere's more details in the first part of my comment above.. **2016-05-05**  \nUpdated with strategies for using open fonts to calculate sizes and corrections about how fonts get rendered on different platforms (you can use Linux to reliably calculate column sizes for Windows), plus notes on uses of try catch blocks.\n\n---\n\nThis is not a bug. In order to calculate exact font widths, PHPExcel actually needs fonts to work with.\n\nBefore using `setAutoSizeMethod()`, you first need to call `setTrueTypeFontPath()`:\n\n``` PHP\nPHPExcel_Shared_Font::setTrueTypeFontPath('C:/Windows/Fonts/');\nPHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);\n\nforeach (range('A','L') as $column) {\n  $objPHPExcel->getActiveSheet()->getColumnDimension($column)->setAutoSize(TRUE);\n}\n```\n- You can use forward slashes, Windows doesn't care\n- Don't forget the last slash, PHPExcel does not automatically append it to the final path\n\nHowever, this is OS-specific, so you may also want to test for Linux, Windows, OS X, and so on:\n\n``` PHP\nswitch (PHP_OS) {\n  case 'WINNT':\n    PHPExcel_Shared_Font::setTrueTypeFontPath('C:/Windows/Fonts/');\n    PHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);\n    break;\n\n  case 'Darwin':\n    PHPExcel_Shared_Font::setTrueTypeFontPath('/Library/Fonts/');\n    PHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);\n    break;\n\n  case 'Linux':\n    PHPExcel_Shared_Font::setTrueTypeFontPath('/usr/share/fonts/truetype/');\n    PHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);\n    break;\n}\n\nforeach (range('A','L') as $column) {\n  $objPHPExcel->getActiveSheet()->getColumnDimension($column)->setAutoSize(TRUE);\n}\n```\n\nBut, this will not work, because:\n- Font names are different from platform to platform\n- PHPExcel expects Windows font names\n- PHPExcel expects fonts to be located directly in the specified directory, not in subfolders, as is the case on Linux\n- Typical Linux servers won't have fonts like Arial installed\n\nTherefore, a better strategy would be to set `AUTOSIZE_METHOD_EXACT` only on Windows (assuming your production machine runs it):\n\n``` PHP\nif (PHP_OS == 'WINNT') {\n  PHPExcel_Shared_Font::setTrueTypeFontPath('C:\\Windows\\Fonts');\n  PHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);\n}\n\nforeach (range('A','L') as $column) {\n  $objPHPExcel->getActiveSheet()->getColumnDimension($column)->setAutoSize(TRUE);\n}\n```\n\nAlso note that PHPExcel supports a limited set of fonts for this method:\n- Arial\n- Calibri\n- Courier New\n- Comic Sans MS\n- Georgia\n- Impact\n- Liberation Sans\n- Lucida Console\n- Lucida Sans Unicode\n- Microsoft Sans Serif\n- Palatino Linotype\n- Symbol\n- Tahoma\n- Times New Roman\n- Trebuchet MS\n- Verdana\n\nIf you try to use an unsupported font like Arial Narrow, the method will fail:\n\n```\nUnknown font name \"Arial Narrow\". Cannot map to TrueType font file - /PHPExcel/Classes/PHPExcel/Shared/Font.php:531\n```\n\nThe method will also fail if the font can't be found on the server. Not all fonts above come with Windows Server.\n\nYou can add new fonts by patching the PHPExcel code:\n\n``` diff\ndiff --git a/PHPExcel/Classes/PHPExcel/Shared/Font.php b/PHPExcel/Classes/PHPExcel/Shared/Font.php\nindex 8e5b27b..47b9eb6 100644\n--- a/PHPExcel/Classes/PHPExcel/Shared/Font.php\n+++ b/PHPExcel/Classes/PHPExcel/Shared/Font.php\n@@ -72,6 +72,11 @@ class PHPExcel_Shared_Font\n        const ARIAL_ITALIC                              = 'ariali.ttf';\n        const ARIAL_BOLD_ITALIC                         = 'arialbi.ttf';\n\n+       const ARIAL_NARROW                              = 'ARIALN.TTF';\n+       const ARIAL_NARROW_BOLD                         = 'ARIALNB.TTF';\n+       const ARIAL_NARROW_ITALIC                       = 'ARIALNI.TTF';\n+       const ARIAL_NARROW_BOLD_ITALIC                  = 'ARIALNBI.TTF';\n+\n        const CALIBRI                                   = 'CALIBRI.TTF';\n        const CALIBRI_BOLD                              = 'CALIBRIB.TTF';\n        const CALIBRI_ITALIC                            = 'CALIBRII.TTF';\n@@ -439,6 +444,13 @@ class PHPExcel_Shared_Font\n                                );\n                                break;\n\n+                       case 'Arial Narrow':\n+                               $fontFile = (\n+                                       $bold ? ($italic ? self::ARIAL_NARROW_BOLD_ITALIC : self::ARIAL_NARROW_BOLD)\n+                                                 : ($italic ? self::ARIAL_NARROW_ITALIC : self::ARIAL_NARROW)\n+                               );\n+                               break;\n+\n                        case 'Calibri':\n                                $fontFile = (\n                                        $bold ? ($italic ? self::CALIBRI_BOLD_ITALIC : self::CALIBRI_BOLD)\n```\n\nIn order to make this platform-independent, you would need to include the font with your application, for example, in a local directory:\n\n``` PHP\nPHPExcel_Shared_Font::setTrueTypeFontPath('fonts');\nPHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);\n```\n\nHowever, this approach would require licensing fonts like Arial for redistribution. To circumvent this, you can use open clone fonts and rename them to the expected Windows file name of their equivalent. [Liberation Sans](https://fedorahosted.org/liberation-fonts/), for instance, is a metrically compatible alternative to Arial, so the resulting autosizing should be the same.\n\nIt's also impossible to embed fonts in Excel documents, so open fonts are really only an option if you're using them for their metrical compatibility.\n\nNote that even though this functionality relies on GD's `imagettfbbox` function, which means font sizes will be calculated the same regardless of platforms, not all platforms render fonts the same. As an example, I have been able to reliably generate Excel documents on Linux which render correctly on both Windows and Android, but the sizing is all wrong on OS X. I'm guessing iOS suffers from the same issues (but I have no device to test this on), but this may be a problem with Microsoft's implementation of font rendering in Excel on these platforms, not the platforms themselves. This is also not a problem with the font itself. I have tried replacing OS X's Arial font with a copy from Windows, but to no avail, the font still renders wrong.\n\n## What about previous versions of PHPExcel?\n\nBefore 1.8.1, if you hadn't run `setTrueTypeFontPath()` before setting `setAutoSizeMethod()` to `AUTOSIZE_METHOD_EXACT`, the `getTextWidthPixelsExact()` method in Font.php would simply fail silently and `setAutoSize()` would apply approximate widths, as explained by @sharpensteel.\n\nThis is because the code for `PHPExcel_Shared_Font::calculateColumnWidth()`, a method called when calculating automatic column widths, looked like this:\n\n``` PHP\n// Try to get the exact text width in pixels\ntry {\n  // If autosize method is set to 'approx', use approximation\n  if (self::$autoSizeMethod == self::AUTOSIZE_METHOD_APPROX) {\n    throw new PHPExcel_Exception('AutoSize method is set to approx');\n  }\n\n  // Width of text in pixels excl. padding\n  $columnWidth = self::getTextWidthPixelsExact($cellText, $font, $rotation);\n\n  // Excel adds some padding, use 1.07 of the width of an 'n' glyph\n  $columnWidth += ceil(self::getTextWidthPixelsExact('0', $font, 0) * 1.07); // pixels incl. padding\n\n} catch (PHPExcel_Exception $e) {\n  // Width of text in pixels excl. padding, approximation\n  $columnWidth = self::getTextWidthPixelsApprox($cellText, $font, $rotation);\n\n  // Excel adds some padding, just use approx width of 'n' glyph\n  $columnWidth += self::getTextWidthPixelsApprox('n', $font, 0);\n}\n```\n\nAssuming we didn't run `setTrueTypeFontPath()`, the next method, `getTextWidthPixelsExact()`, would call `getTrueTypeFontFileFromFont()` which itself would `throw`, but because `getTextWidthPixelsExact()` is called from within a `try` block, PHP would catch the `throw` and the function would go on with `getTextWidthPixelsApprox()` in the `catch` block.\n\nSo even though you didn't get any errors, it didn't actually work and the column sizes would be approximate, which probably explains https://github.com/PHPOffice/PHPExcel/issues/853.\n\nIn 1.8.1, the code now looks like this:\n\n``` PHP\n// Try to get the exact text width in pixels\n$approximate = self::$autoSizeMethod == self::AUTOSIZE_METHOD_APPROX;\nif (!$approximate) {\n  $columnWidthAdjust = ceil(self::getTextWidthPixelsExact('n', $font, 0) * 1.07);\n  try {\n    // Width of text in pixels excl. padding\n    // and addition because Excel adds some padding, just use approx width of 'n' glyph\n    $columnWidth = self::getTextWidthPixelsExact($cellText, $font, $rotation) + $columnWidthAdjust;\n  } catch (PHPExcel_Exception $e) {\n    $approximate = true;\n  }\n}\n\nif ($approximate) {\n  $columnWidthAdjust = self::getTextWidthPixelsApprox('n', $font, 0);\n  // Width of text in pixels excl. padding, approximation\n  // and addition because Excel adds some padding, just use approx width of 'n' glyph\n  $columnWidth = self::getTextWidthPixelsApprox($cellText, $font, $rotation) + $columnWidthAdjust;\n}\n```\n\nAs you can see, the first call to `getTextWidthPixelsExact()` is not within a `try` block, so when `getTextWidthPixelsExact()` calls [`getTrueTypeFontFileFromFont()`](https://github.com/PHPOffice/PHPExcel/blob/372c7cbb695a6f6f1e62649381aeaa37e7e70b32/Classes/PHPExcel/Shared/Font.php#L311), the [throw](https://github.com/PHPOffice/PHPExcel/blob/372c7cbb695a6f6f1e62649381aeaa37e7e70b32/Classes/PHPExcel/Shared/Font.php#L425-L427) properly\\* halts execution and outputs an error.\n\n\\* Technically, this seems to have been \"fixed\" inadvertently: https://github.com/PHPOffice/PHPExcel/commit/ddec5e9 \nBesides, try catch blocks should not be used as conditionals because throw is dynamically scoped. Anything which throws within the execution context of a try catch block will be caught by the catch block, so if you don't handle it, the error gets lost. It's called catch because you're supposed to catch exceptions and do something with them. That $e parameter isn't allocated for nothing. But that's a note for @MarkBaker \n. Although all new development has moved to a new project (https://github.com/PHPOffice/PhpSpreadsheet), **this is not a bug**. If you're getting the error, your client code isn't using the API properly.\r\n\r\nYes, the error reporting to could be better. Yes, the API could assume some system defaults. But the point is, if you're not setting the font path, even if you had no error before, `setAutoSizeMethod()` never actually worked.\r\n\r\nYou can upgrade through Composer and fix the error by calling `setTrueTypeFontPath()` before you call `setAutoSizeMethod()`.\r\n\r\nHere's an excerpt from a Drupal module I work on:\r\n\r\n```PHP\r\n$objPHPExcel = new PHPExcel();\r\n$active_sheet = $objPHPExcel->getActiveSheet();\r\n\r\n// ...\r\n\r\nPHPExcel_Shared_Font::setTrueTypeFontPath(DRUPAL_ROOT . '/' . drupal_get_path('module', 'learning_app') . '/fonts/');\r\nPHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);\r\n\r\nforeach (range('A','O') as $column) {\r\n  $active_sheet->getColumnDimension($column)->setAutoSize(TRUE);\r\n}\r\n```\r\n\r\nThere's more details in the first part of my comment above.. ",
    "andrew-pause": "This appears to still be broken, at least in the tagged release for 1.8.1. I just attempted to upgrade with composer and was getting this error.. This appears to still be broken, at least in the tagged release for 1.8.1. I just attempted to upgrade with composer and was getting this error.. ",
    "markdegrootnl": "Can we merge this or submit a PR?. Can we merge this or submit a PR?. ",
    "gael-wogenstahl": ":+1: \n. Also very interested in that question since I face important performance issues with large files.\n. :+1: \n. Also very interested in that question since I face important performance issues with large files.\n. ",
    "arecaps": ":+1: \n. :+1: \n. ",
    "obojdi": ":+1: \n. :+1: \n. ",
    "stavros-liaskos": "that could be waaaay useful. that could be waaaay useful. ",
    "gmsantos": "@kimegede ??. @MarkBaker is possible to generate a new tag with that fix ? The last stable tag have more than a year (v1.8.1) and I think that a lot more bugs has fixed.\n. @kimegede ??. @MarkBaker is possible to generate a new tag with that fix ? The last stable tag have more than a year (v1.8.1) and I think that a lot more bugs has fixed.\n. ",
    "Stefanescul": "Is working or not?. You can do it like this with css. And then make in the body section a table with row from database. I hope is usefull. Depends of the shape of the table that you want.\r\n<style>\r\ntable {\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n}\r\n\r\nth, td {\r\n    text-align: left;\r\n    padding: 8px;\r\n}\r\n\r\ntr:nth-child(even){background-color: #f2f2f2}\r\n</style>\r\n. Is working or not?. You can do it like this with css. And then make in the body section a table with row from database. I hope is usefull. Depends of the shape of the table that you want.\r\n<style>\r\ntable {\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n}\r\n\r\nth, td {\r\n    text-align: left;\r\n    padding: 8px;\r\n}\r\n\r\ntr:nth-child(even){background-color: #f2f2f2}\r\n</style>\r\n. ",
    "Dfred": "What about that discrepancy?\r\n`$hr = $sheet->getHighestDataRow($column_id); // 0 if cell at $column_id.'1' is empty, or 1 if not`\r\n\r\nHowever this doesn't work!\r\n`$hc = $sheet->getHighestDataColumn($row_id); // 'A' if cell at 'A'.$row_id is empty or not`. Sorry, I missed an essential part of the bug report: clich\u00e9 is actually a named range, thus should not have double quotes. I updated the report specifying this point.. I guess this bug report will remain closed, so I've filed another one with explicit mention of a mbstring named range.. Is this good enough?\r\n```php\r\n$objPHPExcel = new PHPExcel();\r\n$objPHPExcel->setActiveSheetIndex(0);\r\n$objPHPExcel->getActiveSheet()->setCellValue('A1', 'kiki');\r\n$objPHPExcel->addNamedRange( new PHPExcel_NamedRange(html_entity_decode('clich&eacute;'), $objPHPExcel->getActiveSheet(), 'A1'));\r\nPHPExcel_Calculation::getInstance($objPHPExcel)->parseFormula(html_entity_decode('=clich&eacute;'));\r\n```. Good job with PhpSpreadsheet by the way, any release date in sight?. @PowerKiKi Did you file a bug report on PhpSpreadsheet as well? If so, can you provide a link ?. I copied this bug-report to PhpSpreadsheet, see it there: https://github.com/PHPOffice/PhpSpreadsheet/issues/179. What about that discrepancy?\r\n`$hr = $sheet->getHighestDataRow($column_id); // 0 if cell at $column_id.'1' is empty, or 1 if not`\r\n\r\nHowever this doesn't work!\r\n`$hc = $sheet->getHighestDataColumn($row_id); // 'A' if cell at 'A'.$row_id is empty or not`. Sorry, I missed an essential part of the bug report: clich\u00e9 is actually a named range, thus should not have double quotes. I updated the report specifying this point.. I guess this bug report will remain closed, so I've filed another one with explicit mention of a mbstring named range.. Is this good enough?\r\n```php\r\n$objPHPExcel = new PHPExcel();\r\n$objPHPExcel->setActiveSheetIndex(0);\r\n$objPHPExcel->getActiveSheet()->setCellValue('A1', 'kiki');\r\n$objPHPExcel->addNamedRange( new PHPExcel_NamedRange(html_entity_decode('clich&eacute;'), $objPHPExcel->getActiveSheet(), 'A1'));\r\nPHPExcel_Calculation::getInstance($objPHPExcel)->parseFormula(html_entity_decode('=clich&eacute;'));\r\n```. Good job with PhpSpreadsheet by the way, any release date in sight?. @PowerKiKi Did you file a bug report on PhpSpreadsheet as well? If so, can you provide a link ?. I copied this bug-report to PhpSpreadsheet, see it there: https://github.com/PHPOffice/PhpSpreadsheet/issues/179. ",
    "CJDennis": "Beware that PHP's truthy/falsy values are not always what you'd expect! String `\"0\"` is `false`, even though it is not empty, as are numerically zero values. `PHPExcel_Cell::getValue()` can also return `false` as a boolean value, which means that the cell has `FALSE` entered into it, so it is not empty.\r\n\r\nI believe something like this would work better:\r\n```PHP\r\nclass PHPExcel_Worksheet_Row {\r\n    //...\r\n\r\n    public function isRowEmpty() {\r\n        $is_row_empty = true;\r\n        foreach ($this->getCellIterator() as $cell) {\r\n            if ($cell->getValue() !== null && $cell->getValue() !== '') {\r\n                $is_row_empty = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return $is_row_empty;\r\n    }\r\n\r\n    public function getCellIterator() {\r\n        //....\r\n    }\r\n}\r\n```. If you originally had 320 rows and deleted 310 of them, you'd think you only have 10 remaining, but Excel can reserve the space previously used. See if the scroll bar (click on the scroll bar and drag it down as far as it will go, don't use page up/page down or the mouse wheel) takes you to row 320 as the last row.\r\n\r\nYour Excel file shows that you originally had 332 rows and deleted most of them. This is the way Excel works, and not a bug in PHPExcel.. @derekrprice The most efficient way is to ask Excel what the maximum row is. It has a time of O(1). Looping over each row has a time of O(n^2) because you have to check every cell in every row. If you know with 100% confidence that the file you're reading is compatible with the first way, you probably don't want to sacrifice the speed. However, if you could get the wrong result, you will want accuracy over speed.\r\n\r\nAs far as I'm aware, PHPExcel does not read every cell when you open the file (because that would add an unnecessary overhead), and instead relies on Excel's meta-data embedded within the file.. Beware that PHP's truthy/falsy values are not always what you'd expect! String `\"0\"` is `false`, even though it is not empty, as are numerically zero values. `PHPExcel_Cell::getValue()` can also return `false` as a boolean value, which means that the cell has `FALSE` entered into it, so it is not empty.\r\n\r\nI believe something like this would work better:\r\n```PHP\r\nclass PHPExcel_Worksheet_Row {\r\n    //...\r\n\r\n    public function isRowEmpty() {\r\n        $is_row_empty = true;\r\n        foreach ($this->getCellIterator() as $cell) {\r\n            if ($cell->getValue() !== null && $cell->getValue() !== '') {\r\n                $is_row_empty = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return $is_row_empty;\r\n    }\r\n\r\n    public function getCellIterator() {\r\n        //....\r\n    }\r\n}\r\n```. If you originally had 320 rows and deleted 310 of them, you'd think you only have 10 remaining, but Excel can reserve the space previously used. See if the scroll bar (click on the scroll bar and drag it down as far as it will go, don't use page up/page down or the mouse wheel) takes you to row 320 as the last row.\r\n\r\nYour Excel file shows that you originally had 332 rows and deleted most of them. This is the way Excel works, and not a bug in PHPExcel.. @derekrprice The most efficient way is to ask Excel what the maximum row is. It has a time of O(1). Looping over each row has a time of O(n^2) because you have to check every cell in every row. If you know with 100% confidence that the file you're reading is compatible with the first way, you probably don't want to sacrifice the speed. However, if you could get the wrong result, you will want accuracy over speed.\r\n\r\nAs far as I'm aware, PHPExcel does not read every cell when you open the file (because that would add an unnecessary overhead), and instead relies on Excel's meta-data embedded within the file.. ",
    "vkhramtsov": "Here fixed only syntax errors in files for php 5.2. This PR is not fix failed tests!\n. Here fixed only syntax errors in files for php 5.2. This PR is not fix failed tests!\n. ",
    "samwilson": "This can be closed; there's already a Gitter link in `README.md`\n. This can be closed; there's already a Gitter link in `README.md`\n. ",
    "rubenarslan": "Sorry, I realised this is really something for me to deal with, not PHPExcel.\n. Sorry, I realised this is really something for me to deal with, not PHPExcel.\n. ",
    "webdevilopers": ":+1: \n. :+1: \n. ",
    "radem205": "I think I figured it out what causes the problem. When I open the xlsx archive and looked at, for example, the file 'workbooks.xml' the following code is included in the generated xlsx file from the internet:\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?><x:workbook xmlns:x=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"><x:sheets><x:sheet name=\"Sheet1\" sheetId=\"1\" r:id=\"Rbcb16ba2d8a34231\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" /></x:sheets></x:workbook>\n```\n\nYour code is looking for the node 'sheets' and couldn't find any matches because of the 'x' namespace. If I remove the 'x' namespace and do a check with the code below, the list of worksheets is correct (earlier it wasn't).\n\n<?php\nvar_dump($objReader->listWorksheetNames($file_name));\n?>\n\nIt doesn't fix the problem completely, but maybe this helps you a little bit.\n. I think I figured it out what causes the problem. When I open the xlsx archive and looked at, for example, the file 'workbooks.xml' the following code is included in the generated xlsx file from the internet:\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?><x:workbook xmlns:x=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"><x:sheets><x:sheet name=\"Sheet1\" sheetId=\"1\" r:id=\"Rbcb16ba2d8a34231\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" /></x:sheets></x:workbook>\n```\n\nYour code is looking for the node 'sheets' and couldn't find any matches because of the 'x' namespace. If I remove the 'x' namespace and do a check with the code below, the list of worksheets is correct (earlier it wasn't).\n\n<?php\nvar_dump($objReader->listWorksheetNames($file_name));\n?>\n\nIt doesn't fix the problem completely, but maybe this helps you a little bit.\n. ",
    "adoerler": "Hey,\r\n\r\ntoday we faced this problem in one of our projects.\r\nXLSX files generated form Microsoft Dynamics CRM are namespaced, loading them in PHPExcel will lead to an empty dataset (one worksheet, with no contents).\r\nThis workaround fixed the problem for us - thank you!\r\n\r\nAre there any plans to integrate a solution for reading namespaced XLSX files in one of the upcomming releases?\r\n\r\nKind regards\r\nAndreas\r\n. Hey,\r\n\r\ntoday we faced this problem in one of our projects.\r\nXLSX files generated form Microsoft Dynamics CRM are namespaced, loading them in PHPExcel will lead to an empty dataset (one worksheet, with no contents).\r\nThis workaround fixed the problem for us - thank you!\r\n\r\nAre there any plans to integrate a solution for reading namespaced XLSX files in one of the upcomming releases?\r\n\r\nKind regards\r\nAndreas\r\n. ",
    "JosueMorales": "This workaround works like a charm!\r\n\r\nThank you!. This workaround works like a charm!\r\n\r\nThank you!. ",
    "BrandonNoad": "So I was able to modify the 'Normal' style by adding a few lines to the PHPExcel_Writer_Excel2007_Style::writeStyles() method\n\n```\n// cellStyleXfs\n$objWriter->startElement('cellStyleXfs');\n$objWriter->writeAttribute('count', 1);\n\n    // xf\n    $objWriter->startElement('xf');\n        $objWriter->writeAttribute('numFmtId',  0);\n        $objWriter->writeAttribute('fontId',    0);\n        $objWriter->writeAttribute('fillId',    0);\n        $objWriter->writeAttribute('borderId',  0);\n\n        /*\n         * modify the default 'Normal' cell style to turn OFF Protection => Locked\n         * https://superuser.com/questions/392528/why-does-pasting-into-an-unprotected-cell-in-excel-protect-it\n         */\n        $objWriter->startElement('protection');\n            $objWriter->writeAttribute('locked',    0);\n        $objWriter->endElement();\n\n    $objWriter->endElement();\n\n$objWriter->endElement();\n```\n\nThis change, however, didn't solve my problem. It seems, when you paste formatted text, the cell isn't given the 'Normal' style as described in the article. Instead, the cell gets the default workbook style, then the formatting is layered on top.\n\nSo, if I do the following:\n\n```\n$defaultWorkbookStyle = array(\n    'protection' => array(\n        'locked' => true\n    )\n);\n\n$phpExcel->getDefaultStyle()->applyFromArray($defaultWorkbookStyle);\n```\n\nIt solves my problem. However, I now how to explicitly lock any cells that I want to be locked inside the protected worksheets.\n. So I was able to modify the 'Normal' style by adding a few lines to the PHPExcel_Writer_Excel2007_Style::writeStyles() method\n\n```\n// cellStyleXfs\n$objWriter->startElement('cellStyleXfs');\n$objWriter->writeAttribute('count', 1);\n\n    // xf\n    $objWriter->startElement('xf');\n        $objWriter->writeAttribute('numFmtId',  0);\n        $objWriter->writeAttribute('fontId',    0);\n        $objWriter->writeAttribute('fillId',    0);\n        $objWriter->writeAttribute('borderId',  0);\n\n        /*\n         * modify the default 'Normal' cell style to turn OFF Protection => Locked\n         * https://superuser.com/questions/392528/why-does-pasting-into-an-unprotected-cell-in-excel-protect-it\n         */\n        $objWriter->startElement('protection');\n            $objWriter->writeAttribute('locked',    0);\n        $objWriter->endElement();\n\n    $objWriter->endElement();\n\n$objWriter->endElement();\n```\n\nThis change, however, didn't solve my problem. It seems, when you paste formatted text, the cell isn't given the 'Normal' style as described in the article. Instead, the cell gets the default workbook style, then the formatting is layered on top.\n\nSo, if I do the following:\n\n```\n$defaultWorkbookStyle = array(\n    'protection' => array(\n        'locked' => true\n    )\n);\n\n$phpExcel->getDefaultStyle()->applyFromArray($defaultWorkbookStyle);\n```\n\nIt solves my problem. However, I now how to explicitly lock any cells that I want to be locked inside the protected worksheets.\n. ",
    "otstrel": "Thank you for quick response, I really appreciate it. Single active cell makes perfect sense, my code works as expected now. That's a relief!\n\nWhat I'm still not getting is how single call to setValue changes two cells at once. If there is a single active cell which is being changed by every getCell call then only target cell should be changed by setValue call in my code, shouldn't it?\n\nRegarding documentation I totally welcome your approach. With your amazing activity on StackOverflow it is much easier to start quickly and then search for whatever I come to along the way. I've learned quite a bit from your detailed answers there, thank you very much for these!\n. Thank you for quick response, I really appreciate it. Single active cell makes perfect sense, my code works as expected now. That's a relief!\n\nWhat I'm still not getting is how single call to setValue changes two cells at once. If there is a single active cell which is being changed by every getCell call then only target cell should be changed by setValue call in my code, shouldn't it?\n\nRegarding documentation I totally welcome your approach. With your amazing activity on StackOverflow it is much easier to start quickly and then search for whatever I come to along the way. I've learned quite a bit from your detailed answers there, thank you very much for these!\n. ",
    "Vitexus": "17 rows and 18 columns xslx file causes:\n\nFatal error: Allowed memory size of 4244635648 bytes exhausted (tried to allocate 234881040 bytes) in (...)/classes/PHPExcel/Cell.php on line 909\n\n$returnValue  contain 14680064 items and array_unique can't handle it. \n. 17 rows and 18 columns xslx file causes:\n\nFatal error: Allowed memory size of 4244635648 bytes exhausted (tried to allocate 234881040 bytes) in (...)/classes/PHPExcel/Cell.php on line 909\n\n$returnValue  contain 14680064 items and array_unique can't handle it. \n. ",
    "dmeijboom": "If you only want to read the data you can use the following snippet (for the excel reader):\n\n``` php\n$objReader = PHPExcel_IOFactory::createReader(\"Excel2007\");\n$objReader->setReadDataOnly(true);\n```\n\nThis skips the formatting options and loads **a lot** faster!\nSince it skips formatting it doesn't freeze anymore.\n. If you only want to read the data you can use the following snippet (for the excel reader):\n\n``` php\n$objReader = PHPExcel_IOFactory::createReader(\"Excel2007\");\n$objReader->setReadDataOnly(true);\n```\n\nThis skips the formatting options and loads **a lot** faster!\nSince it skips formatting it doesn't freeze anymore.\n. ",
    "restyler": "here is the package on packagist with the fix implemented: \nhttps://packagist.org/packages/nekulin/phpexcel\n. here is the package on packagist with the fix implemented: \nhttps://packagist.org/packages/nekulin/phpexcel\n. ",
    "Rogier076": "Fixed the issue five minutes after posting by setting\n\n``` php\n$this->xr->setReadDataOnly(true);\n```\n\nto\n\n``` php\n$this->xr->setReadDataOnly(false);\n```\n\nThanks anyway :)\n. Fixed the issue five minutes after posting by setting\n\n``` php\n$this->xr->setReadDataOnly(true);\n```\n\nto\n\n``` php\n$this->xr->setReadDataOnly(false);\n```\n\nThanks anyway :)\n. ",
    "Serhioromano": "Would you please refer me to advanced binders example?\n. Would you please refer me to advanced binders example?\n. ",
    "zhenjie": "In some scenario the data fetched from database could have strings like '=.=' and is not meant to be a formula thus it's not necessary to be calculated? Or maybe there are other options we can use to avoid that? \n\nLooks like the unit test for v1.9 is not working? and I see lot's of failing in unit test for 1.8 as well.\n. Oh yes! That's the right one to use, should have gone through  documentation before coding. I was thinking if `preCalculateFormulas` is false(default value in Excel2007), it shouldn't calculate the formulas even at saving. `setCellValueExplicit` would be the right one to use. Thanks. \n. In some scenario the data fetched from database could have strings like '=.=' and is not meant to be a formula thus it's not necessary to be calculated? Or maybe there are other options we can use to avoid that? \n\nLooks like the unit test for v1.9 is not working? and I see lot's of failing in unit test for 1.8 as well.\n. Oh yes! That's the right one to use, should have gone through  documentation before coding. I was thinking if `preCalculateFormulas` is false(default value in Excel2007), it shouldn't calculate the formulas even at saving. `setCellValueExplicit` would be the right one to use. Thanks. \n. ",
    "mikehaertl": "I seem to suffer from the same problem. Any solutions so far? Here's the code I use:\n\nhttps://gist.github.com/mikehaertl/280455b503dc8c4ccddd\n. @MarkBaker Did you get a chance to look into this issue? It's too bad, that automatic line height in LibreOffice is broken for files generated with PHPExcel:\n\n![phpexcel_rowheight](https://cloud.githubusercontent.com/assets/675062/14640555/61bdea8e-0642-11e6-841a-faeb45fcd5b1.png)\n\nMaybe there's at least a workaround?\n. @MarkBaker Thanks. Could you maybe point us to any sources about this known issue in LibreOffice? I could not really find something.\n\nI also understand that your library focusses on Excel - but wouldn't it be great if it also worked flawlessly with the alternatives? I may be wrong, but I think Excel as well as other spreadsheet software should all comply with the open document format, right? If so, then couldn't phpoffice also be geared to that standard? Because I somehow feel, that LibreOffice is probably closer to the standard than Excel. So if auto lineheight is specified in that standard it would be great to see support in phpoffice for it - and rather build a workaround for MS office.\n\nI may be totally wrong with my assumptions, though.\n. Thanks :-1: \n. I seem to suffer from the same problem. Any solutions so far? Here's the code I use:\n\nhttps://gist.github.com/mikehaertl/280455b503dc8c4ccddd\n. @MarkBaker Did you get a chance to look into this issue? It's too bad, that automatic line height in LibreOffice is broken for files generated with PHPExcel:\n\n![phpexcel_rowheight](https://cloud.githubusercontent.com/assets/675062/14640555/61bdea8e-0642-11e6-841a-faeb45fcd5b1.png)\n\nMaybe there's at least a workaround?\n. @MarkBaker Thanks. Could you maybe point us to any sources about this known issue in LibreOffice? I could not really find something.\n\nI also understand that your library focusses on Excel - but wouldn't it be great if it also worked flawlessly with the alternatives? I may be wrong, but I think Excel as well as other spreadsheet software should all comply with the open document format, right? If so, then couldn't phpoffice also be geared to that standard? Because I somehow feel, that LibreOffice is probably closer to the standard than Excel. So if auto lineheight is specified in that standard it would be great to see support in phpoffice for it - and rather build a workaround for MS office.\n\nI may be totally wrong with my assumptions, though.\n. Thanks :-1: \n. ",
    "AdamReece-WebBox": "5.0.5.2, still not working.\n. 5.0.5.2, still not working.\n. ",
    "clay89": "A workaround would be very helpful.\n. A workaround would be very helpful.\n. ",
    "werwolf666": "Row auto height still not working.\n. Row auto height still not working.\n. ",
    "DaumantasUrb": "still have this issue\n. still have this issue\n. ",
    "hendricha": "Here's an xls file created with PhpExcel, similarly how the above bug report reported it.\nI attached a screenshot of it from LibreOffice Calc  4.2.8.2, and the preview with the expected behaviour from Google Drive.\n[phpexcel.zip](https://github.com/PHPOffice/PHPExcel/files/492931/phpexcel.zip)\n. Here's an xls file created with PhpExcel, similarly how the above bug report reported it.\nI attached a screenshot of it from LibreOffice Calc  4.2.8.2, and the preview with the expected behaviour from Google Drive.\n[phpexcel.zip](https://github.com/PHPOffice/PHPExcel/files/492931/phpexcel.zip)\n. ",
    "leoquijano": "Hi @MarkBaker , do you have the bug number in LibreOffice Calc so we can follow up there?\n. Hi @MarkBaker , do you have the bug number in LibreOffice Calc so we can follow up there?\n. ",
    "str": "Is it really a LibreOffice bug? Where can I verify it?. @MarkBaker That issue is related to column width, not row height.. Is it really a LibreOffice bug? Where can I verify it?. @MarkBaker That issue is related to column width, not row height.. ",
    "eltian": "I think this might be related: [https://bugs.documentfoundation.org/show_bug.cgi?id=62268](https://bugs.documentfoundation.org/show_bug.cgi?id=62268)\r\n\r\nthe height bug seems to be present since 2013... disappointing.. I think this might be related: [https://bugs.documentfoundation.org/show_bug.cgi?id=62268](https://bugs.documentfoundation.org/show_bug.cgi?id=62268)\r\n\r\nthe height bug seems to be present since 2013... disappointing.. ",
    "CrandellWS": "Fatal error: Uncaught exception 'PHPExcel_Exception' with message 'Maximum 31 characters allowed in sheet title.' in ~/Classes/PHPExcel/Worksheet.php:472 Stack trace: #0 ~/Classes/PHPExcel/Worksheet.php(841): PHPExcel_Worksheet::_checkSheetTitle('TotalEquipmentO...')\n. seems that it is not actually the $worksheet->getTitle(); call but this happens while loading...\n. turns out the problem is with gnumeric...\n. I am still not very good with git or github and I wanted to get my fork updated...I was trying through the web interface...\n. I wanted to pull your current updates and merge into my fork. I have a project that uses phpexcel that I plan to add this as a sub tree to\n. sorry\n. Fatal error: Uncaught exception 'PHPExcel_Exception' with message 'Maximum 31 characters allowed in sheet title.' in ~/Classes/PHPExcel/Worksheet.php:472 Stack trace: #0 ~/Classes/PHPExcel/Worksheet.php(841): PHPExcel_Worksheet::_checkSheetTitle('TotalEquipmentO...')\n. seems that it is not actually the $worksheet->getTitle(); call but this happens while loading...\n. turns out the problem is with gnumeric...\n. I am still not very good with git or github and I wanted to get my fork updated...I was trying through the web interface...\n. I wanted to pull your current updates and merge into my fork. I have a project that uses phpexcel that I plan to add this as a sub tree to\n. sorry\n. ",
    "shawpo": "I hava same problem, could you tell me how me solve it?. I hava same problem, could you tell me how me solve it?. ",
    "sidgwick": "After run `composer require phpoffice/phpexcel`, use code like this to autoload the PHPExcel library classes.\n\n``` php\nuse PHPExcel;\nuse PHPExcel_IOFactory;\n```\n. @royopa Thanks. I just didn't know how to autoload the library at the very beginning, so I left the comment to help people who have the same problem.\n. After run `composer require phpoffice/phpexcel`, use code like this to autoload the PHPExcel library classes.\n\n``` php\nuse PHPExcel;\nuse PHPExcel_IOFactory;\n```\n. @royopa Thanks. I just didn't know how to autoload the library at the very beginning, so I left the comment to help people who have the same problem.\n. ",
    "royopa": "@sidgwick Done changes at readme file.\nWhat do you think about the change?\n. @sidgwick Done changes at readme file.\nWhat do you think about the change?\n. ",
    "vas-and-tor": "I think we need some unit tests for this case. Not sure where to put it.\n. I think we need some unit tests for this case. Not sure where to put it.\n. ",
    "afbora": "+1\n. +1\n. ",
    "yj7": "Is there any way to set \"Move and size with cells\" property from code?. Related Discussion : http://stackoverflow.com/questions/12361627/phpexcel-export-xlsx-with-drawing-got-bug-in-width-and-height\r\n\r\nPossibly related discussion : phpexcel.codeplex.com/discussions/394404 (Link no longer working)\r\n\r\nIssue Number - 18596 on code plex\r\n\r\n. @MarkBaker . Is there any way to set \"Move and size with cells\" property from code?. Related Discussion : http://stackoverflow.com/questions/12361627/phpexcel-export-xlsx-with-drawing-got-bug-in-width-and-height\r\n\r\nPossibly related discussion : phpexcel.codeplex.com/discussions/394404 (Link no longer working)\r\n\r\nIssue Number - 18596 on code plex\r\n\r\n. @MarkBaker . ",
    "aimeos": "Then, maybe the `$iterator->valid()` returns false too early. The full source is available here:\nhttps://github.com/aimeos/ai-container/blob/master/lib/custom/src/MW/Container/Content/PHPExcel.php\n\nThe `testIterator()` test from https://github.com/aimeos/ai-container/blob/master/lib/custom/tests/MW/Container/Content/PHPExcelTest.php fails since 1.8.1\n. The row iterator only returns the first row since 1.8.1:\r\n```\r\n$expected = array(\r\n    array( 'test', 'file', 'data' ),\r\n    array( 'foo', 'bar', 'baz' ),\r\n    array( '1', '2', '3' ),\r\n);\r\n$sheet->fromArray( $expected );\r\n\r\n$actual = array();\r\nforeach( $this->object as $key => $values ) {\r\n\t$actual[] = $values;\r\n}\r\n\r\nprint_r( $actual );\r\n```\r\nResult:\r\n```\r\nArray\r\n(\r\n    [0] => Array\r\n    (\r\n        [0] => test\r\n        [1] => file\r\n        [2] => data\r\n    )\r\n)\r\n```\r\nThe reason seems to be the `$cachedHighestRow` property which isn't updated when new rows are added: https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Worksheet.php#L276. Tried to fix that yesterday but fail to do so. I don't know where the value must be updated and how. There's also an additional caching layer I don't understand yet.. Then, maybe the `$iterator->valid()` returns false too early. The full source is available here:\nhttps://github.com/aimeos/ai-container/blob/master/lib/custom/src/MW/Container/Content/PHPExcel.php\n\nThe `testIterator()` test from https://github.com/aimeos/ai-container/blob/master/lib/custom/tests/MW/Container/Content/PHPExcelTest.php fails since 1.8.1\n. The row iterator only returns the first row since 1.8.1:\r\n```\r\n$expected = array(\r\n    array( 'test', 'file', 'data' ),\r\n    array( 'foo', 'bar', 'baz' ),\r\n    array( '1', '2', '3' ),\r\n);\r\n$sheet->fromArray( $expected );\r\n\r\n$actual = array();\r\nforeach( $this->object as $key => $values ) {\r\n\t$actual[] = $values;\r\n}\r\n\r\nprint_r( $actual );\r\n```\r\nResult:\r\n```\r\nArray\r\n(\r\n    [0] => Array\r\n    (\r\n        [0] => test\r\n        [1] => file\r\n        [2] => data\r\n    )\r\n)\r\n```\r\nThe reason seems to be the `$cachedHighestRow` property which isn't updated when new rows are added: https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Worksheet.php#L276. Tried to fix that yesterday but fail to do so. I don't know where the value must be updated and how. There's also an additional caching layer I don't understand yet.. ",
    "cristian100": "The reason why I'm chunking it, is because, if I don't, memory usage continues to increase without stopping, even If I was reading 10 rows from the database at a time, eventually the script took over 8G of memory and then it died, the script was not able to finish.\n\nBecause of that, I added the \"close and open again\" of the file, somehow, that made the script not increase to crazy the script, at maximum it increased the memory usage at 110mb, but took almost 3 hours to finish the script.\n\nIm testing right now one of your suggestions to other post to see if it helps to make it faster:\nhttp://stackoverflow.com/questions/4666746/how-to-read-large-worksheets-from-large-excel-files-27mb-with-phpexcel#answer-4666824\n. The reason why I'm chunking it, is because, if I don't, memory usage continues to increase without stopping, even If I was reading 10 rows from the database at a time, eventually the script took over 8G of memory and then it died, the script was not able to finish.\n\nBecause of that, I added the \"close and open again\" of the file, somehow, that made the script not increase to crazy the script, at maximum it increased the memory usage at 110mb, but took almost 3 hours to finish the script.\n\nIm testing right now one of your suggestions to other post to see if it helps to make it faster:\nhttp://stackoverflow.com/questions/4666746/how-to-read-large-worksheets-from-large-excel-files-27mb-with-phpexcel#answer-4666824\n. ",
    "DenisAlliswell": "Ok, so how I can read and write the certain cell the in file with the chunk filter?\n. All right, thank you.\n. Ok, so how I can read and write the certain cell the in file with the chunk filter?\n. All right, thank you.\n. ",
    "wxb": "@MarkBaker Thank you !\nI just use `require` include a php file, the file difine an array! \n. @MarkBaker Thank you !\nI just use `require` include a php file, the file difine an array! \n. ",
    "sebathi": "+1\n. +1\n. ",
    "MauricioCid": "+2. +2. ",
    "maranqz": "In function _formatAsDate () file NumnerFormat using strtolower, that does not allow me to put the symbol \"T\". Plus in the documentation that you have got rid of me \"\\\" character, but it does not work either.\n. I may use \"some text\", but i not may use upper text. How do I get to was the letter T. \n. \\\nForces Access to display the character that immediately follows. This is the same as surrounding a character in double quotation marks. in https://support.office.com/en-sg/article/Add-and-customize-date-and-time-formats-763b9b04-ccf8-46a8-9ee3-6d8f6fb9e2f8\nset \"yyyy-mm-dd\"T\"hh:mm:ss\" get 2015-07-24\"MSK\"09:50:02\n\"MSK\" != \"T\"\nI did not get what I wanted\n. https://github.com/PHPOffice/PHPExcel/blob/7ced78b0be53cf11ba29b40f1176f8ba6e7b7db9/Classes/PHPExcel/Style/NumberFormat.php#L436\n. In function _formatAsDate () file NumnerFormat using strtolower, that does not allow me to put the symbol \"T\". Plus in the documentation that you have got rid of me \"\\\" character, but it does not work either.\n. I may use \"some text\", but i not may use upper text. How do I get to was the letter T. \n. \\\nForces Access to display the character that immediately follows. This is the same as surrounding a character in double quotation marks. in https://support.office.com/en-sg/article/Add-and-customize-date-and-time-formats-763b9b04-ccf8-46a8-9ee3-6d8f6fb9e2f8\nset \"yyyy-mm-dd\"T\"hh:mm:ss\" get 2015-07-24\"MSK\"09:50:02\n\"MSK\" != \"T\"\nI did not get what I wanted\n. https://github.com/PHPOffice/PHPExcel/blob/7ced78b0be53cf11ba29b40f1176f8ba6e7b7db9/Classes/PHPExcel/Style/NumberFormat.php#L436\n. ",
    "jarodium": "Hello, this may be off-topic, but, in https://github.com/PHPOffice/PHPExcel/blob/7ced78b0be53cf11ba29b40f1176f8ba6e7b7db9/Classes/PHPExcel/Style/NumberFormat.php#L436\n\nWhy not use php's createDatefromFormat and then reformat for excel friendly output?\nI am aware this will create an extra dependency, but it should provide a better handling of the date.\n. I see.\nPHPSpreadsheet? I shall take a look at it. xD\n\nThank you @MarkBaker  \n. Hello, this may be off-topic, but, in https://github.com/PHPOffice/PHPExcel/blob/7ced78b0be53cf11ba29b40f1176f8ba6e7b7db9/Classes/PHPExcel/Style/NumberFormat.php#L436\n\nWhy not use php's createDatefromFormat and then reformat for excel friendly output?\nI am aware this will create an extra dependency, but it should provide a better handling of the date.\n. I see.\nPHPSpreadsheet? I shall take a look at it. xD\n\nThank you @MarkBaker  \n. ",
    "zlatevbg": "I have the same problem. The active cell is always on the first column of the freeze pane row\n. I have the same problem. The active cell is always on the first column of the freeze pane row\n. ",
    "mrtndimitrov": "The thing is that $objPHPExcel->getActiveSheet()->freezePane('A2'); will move the active cell to A2 so first freeze the row then use setSelectedCell as:\r\n\r\n$objPHPExcel->getActiveSheet()->freezePane('A2');\r\n$objPHPExcel->getActiveSheet()->setSelectedCell('A1');. The thing is that $objPHPExcel->getActiveSheet()->freezePane('A2'); will move the active cell to A2 so first freeze the row then use setSelectedCell as:\r\n\r\n$objPHPExcel->getActiveSheet()->freezePane('A2');\r\n$objPHPExcel->getActiveSheet()->setSelectedCell('A1');. ",
    "ucheng": "Does the folder has write permission? This solve my problem: http://stackoverflow.com/questions/21436949/phpexcel-writer-exception-with-message-could-not-close-zip-file-php-output\n. Does the folder has write permission? This solve my problem: http://stackoverflow.com/questions/21436949/phpexcel-writer-exception-with-message-could-not-close-zip-file-php-output\n. ",
    "MHAPRR": "Hey,\n\nThx for the reply. I played a lot with folders permissions but did not managed to get better results.\n\nI have found a workaround by working on another server ( older IIS version and php version) and It worked correctly. \nRegards\n. Hey,\n\nThx for the reply. I played a lot with folders permissions but did not managed to get better results.\n\nI have found a workaround by working on another server ( older IIS version and php version) and It worked correctly. \nRegards\n. ",
    "Verwickler": "@ComputerTinker , thanks for the reply!\n\nIt would help to have all those private members in Writer protected, so we could easily use Inheritance and have some clean code.\nI don't challenge the refresh function, but due to private members I have to copy 2000+ lines of code (Chart class and Writer class) to have things work.\n. @ComputerTinker , thanks for the reply!\n\nIt would help to have all those private members in Writer protected, so we could easily use Inheritance and have some clean code.\nI don't challenge the refresh function, but due to private members I have to copy 2000+ lines of code (Chart class and Writer class) to have things work.\n. ",
    "mdemori": "just a quick tips, open damaged file with an editor capable to handle binary files (to see the hex version of the file) so you can check if there is something wrong with output file created from your tool with the new library version.\nI think that can be something related to some error or warning triggered by new library version. If there are errors these will be written at beginning of the files before the real binary excel file and you can receive the error described.\n. just a quick tips, open damaged file with an editor capable to handle binary files (to see the hex version of the file) so you can check if there is something wrong with output file created from your tool with the new library version.\nI think that can be something related to some error or warning triggered by new library version. If there are errors these will be written at beginning of the files before the real binary excel file and you can receive the error described.\n. ",
    "tostercx": "There is still something horribly wrong, if I set borders with `getDefaultStyle` for the whole workbook they aren't set and can't be overwritten by individual cell styles later on (tried with 2007 writer if that matters).\n\nIf I just use `getStyle` with ranges, everything works.\n. There is still something horribly wrong, if I set borders with `getDefaultStyle` for the whole workbook they aren't set and can't be overwritten by individual cell styles later on (tried with 2007 writer if that matters).\n\nIf I just use `getStyle` with ranges, everything works.\n. ",
    "doshimehul": "Hello ,\nEven I am trying to achieve this but facing problem, one additional step which I have tried as per documentation is to set Chart Renderer using following syntax,\n\n```\n$rendererName = PHPExcel_Settings::CHART_RENDERER_JPGRAPH;\n$rendererLibrary = 'jpgraph3.5.0b1/src';\n$rendererLibraryPath = '/php/libraries/Charts/' . $rendererLibrary;\n\n\nif (!PHPExcel_Settings::setChartRenderer(\n        $rendererName,\n        $rendererLibraryPath\n    )) {\n    die(\n        'NOTICE: Please set the $rendererName and $rendererLibraryPath values' .\n        EOL .\n        'at the top of this script as appropriate for your directory structure'\n    );\n}\n```\n\nyou can check file phpoffice/phpexcel/Examples/36chartreadwriteHTML.php\n\nLet me know if that works for you!!\n\nI am also looking to export chart into PDFs.\n. Hello ,\nEven I am trying to achieve this but facing problem, one additional step which I have tried as per documentation is to set Chart Renderer using following syntax,\n\n```\n$rendererName = PHPExcel_Settings::CHART_RENDERER_JPGRAPH;\n$rendererLibrary = 'jpgraph3.5.0b1/src';\n$rendererLibraryPath = '/php/libraries/Charts/' . $rendererLibrary;\n\n\nif (!PHPExcel_Settings::setChartRenderer(\n        $rendererName,\n        $rendererLibraryPath\n    )) {\n    die(\n        'NOTICE: Please set the $rendererName and $rendererLibraryPath values' .\n        EOL .\n        'at the top of this script as appropriate for your directory structure'\n    );\n}\n```\n\nyou can check file phpoffice/phpexcel/Examples/36chartreadwriteHTML.php\n\nLet me know if that works for you!!\n\nI am also looking to export chart into PDFs.\n. ",
    "liuyang1": "It doesn't work.\nerror msg:\n15:14:15 Load Test from Excel2007 file 36writeLineChart1.xlsx\n15:14:15 Iterate worksheets looking at the charts\nWorksheet: Data\n    chart1 - \"Sales\"\n             lineChart\n15:14:15 Write Tests to HTML file \n\nStrict Standards: Non-static method JpGraphError::Install() should not be called statically in /usr/share/jpgraph/jpgraph.php on line 243\n\nFatal error: Call to undefined method Legend::SetPos() in /home/liuyang/tars/PHPExcel/Classes/PHPExcel/Chart/Renderer/jpgraph.php on line 189\n\nAny suggestion?\n. It doesn't work.\nerror msg:\n15:14:15 Load Test from Excel2007 file 36writeLineChart1.xlsx\n15:14:15 Iterate worksheets looking at the charts\nWorksheet: Data\n    chart1 - \"Sales\"\n             lineChart\n15:14:15 Write Tests to HTML file \n\nStrict Standards: Non-static method JpGraphError::Install() should not be called statically in /usr/share/jpgraph/jpgraph.php on line 243\n\nFatal error: Call to undefined method Legend::SetPos() in /home/liuyang/tars/PHPExcel/Classes/PHPExcel/Chart/Renderer/jpgraph.php on line 189\n\nAny suggestion?\n. ",
    "blasto333": "php excel version 1.8.0 php 7 rc 4\n\nFatal error: 'break' not in the 'loop' or 'switch' context in /Applications/MAMP/htdocs/phppos/PHP-Point-Of-Sale/application/libraries/PHPExcel/PHPExcel/Calculation/Functions.php on line 581\nA PHP Error was encountered\n\nSeverity: Compile Error\n\nMessage: 'break' not in the 'loop' or 'switch' context\n\nFilename: Calculation/Functions.php\n\nLine Number: 581\n\nBacktrace:\n. php excel version 1.8.0 php 7 rc 4\n\nFatal error: 'break' not in the 'loop' or 'switch' context in /Applications/MAMP/htdocs/phppos/PHP-Point-Of-Sale/application/libraries/PHPExcel/PHPExcel/Calculation/Functions.php on line 581\nA PHP Error was encountered\n\nSeverity: Compile Error\n\nMessage: 'break' not in the 'loop' or 'switch' context\n\nFilename: Calculation/Functions.php\n\nLine Number: 581\n\nBacktrace:\n. ",
    "doniking82": "not sure what the break; on line 581 is for after a return statement.\nI would just remove it.\nPHP 7 is now stricter about the break not inside a loop/switch.\n. not sure what the break; on line 581 is for after a return statement.\nI would just remove it.\nPHP 7 is now stricter about the break not inside a loop/switch.\n. ",
    "jorddyrojas": "Estoy usando php 7 y me esta dando el mismo problema con respecto a la linea 581 y pues no se como solucionarlo quizas alguien me brinde algun ejemplo en el que pueda estudiarlo!\nSoy estudiante y estoy haciendo mi proyecto y lo que necesito es exportar datos desde postgresql a excel mediante phpexcel.\n. Ya e resuelto con la version de PhpExcel 1.8.1 thank\u00b4s!\n. Tienes raz\u00f3n me equivoque! PowerKiKi\n. Estoy usando php 7 y me esta dando el mismo problema con respecto a la linea 581 y pues no se como solucionarlo quizas alguien me brinde algun ejemplo en el que pueda estudiarlo!\nSoy estudiante y estoy haciendo mi proyecto y lo que necesito es exportar datos desde postgresql a excel mediante phpexcel.\n. Ya e resuelto con la version de PhpExcel 1.8.1 thank\u00b4s!\n. Tienes raz\u00f3n me equivoque! PowerKiKi\n. ",
    "thilina19": "i have this problem <b>Fatal error</b>: Class 'PHPExcel Writer Excel 2013' not found in <b>C:\\xampp\\htdocs\\excel\\Classes\\PHPExcel\\IOFactory.php</b> on line <b>141</b><br />. i have this problem <b>Fatal error</b>: Class 'PHPExcel Writer Excel 2013' not found in <b>C:\\xampp\\htdocs\\excel\\Classes\\PHPExcel\\IOFactory.php</b> on line <b>141</b><br />. ",
    "Jarvizx": "any solution? \n. nice, last update? \n. any solution? \n. nice, last update? \n. ",
    "sseffa": "![screenshot_21](https://cloud.githubusercontent.com/assets/2960378/11443968/692cb090-952a-11e5-85f5-e63ba83b5085.png)\n+1\n. no, it's working on 1.8.0 version\n![screenshot_23](https://cloud.githubusercontent.com/assets/2960378/11447729/e7324684-9553-11e5-9506-edac8eec86d4.png)\n. ![screenshot_21](https://cloud.githubusercontent.com/assets/2960378/11443968/692cb090-952a-11e5-85f5-e63ba83b5085.png)\n+1\n. no, it's working on 1.8.0 version\n![screenshot_23](https://cloud.githubusercontent.com/assets/2960378/11447729/e7324684-9553-11e5-9506-edac8eec86d4.png)\n. ",
    "petehenshall": "See https://github.com/PHPOffice/PHPExcel/issues/956\n. Similar to this issue: https://github.com/PHPOffice/PHPExcel/issues/645 but that reports that it is fixed but it isn't for Excel 2007.\n. Great stuff @TheoBaart can't believe I missed that!  I burnt about 8 hours looking in the end.. frustratingly it was opening in OpenOffice so I was looking way deeper than just the example in the source code file being fundamentally wrong!  \nI can't thank you enough sir.  \nKind regards!\n. p.s. to anyone else reading this obviously change:\n\n$series = new PHPExcel_Chart_DataSeries(\n    PHPExcel_Chart_DataSeries::TYPE_SCATTERCHART,   // plotType\n\nto \n\n$series = new PHPExcel_Chart_DataSeries(\n    PHPExcel_Chart_DataSeries::TYPE_TYPE_RADARCHART,   // plotType\n\nIf you want a RADAR chart.\n\nthen include the extra NULL in the constructor before \n    PHPExcel_Chart_DataSeries::STYLE_LINEMARKER     // plotStyle\n\nas thoebaart pointed out.\n\nThen it should all work.\n. See https://github.com/PHPOffice/PHPExcel/issues/956\n. Similar to this issue: https://github.com/PHPOffice/PHPExcel/issues/645 but that reports that it is fixed but it isn't for Excel 2007.\n. Great stuff @TheoBaart can't believe I missed that!  I burnt about 8 hours looking in the end.. frustratingly it was opening in OpenOffice so I was looking way deeper than just the example in the source code file being fundamentally wrong!  \nI can't thank you enough sir.  \nKind regards!\n. p.s. to anyone else reading this obviously change:\n\n$series = new PHPExcel_Chart_DataSeries(\n    PHPExcel_Chart_DataSeries::TYPE_SCATTERCHART,   // plotType\n\nto \n\n$series = new PHPExcel_Chart_DataSeries(\n    PHPExcel_Chart_DataSeries::TYPE_TYPE_RADARCHART,   // plotType\n\nIf you want a RADAR chart.\n\nthen include the extra NULL in the constructor before \n    PHPExcel_Chart_DataSeries::STYLE_LINEMARKER     // plotStyle\n\nas thoebaart pointed out.\n\nThen it should all work.\n. ",
    "enfoqueNativo": "Could this be a typo or is it missing a wrapper function?, there is a private method _getMatrixDimensions_ in PHPExcel_Calculation. Same fatal error when using **COLUMNS** function as well.. @PowerKiKi  You're right.. i'm on 1.8.x-dev(forgot to mentiion it). Requested code example:\r\n```\r\n<?php\r\n$objPHPExcel = new PHPExcel();\r\n$objPHPExcel->getActiveSheet()->setCellValue('A1', 'Range #1')\r\n                              ->setCellValue('A2', 3)\r\n                              ->setCellValue('A3', 7)\r\n                              ->setCellValue('A4', 13)\r\n                              ->setCellValue('A5', '=SUM(A2:A4)');\r\n\r\n$objPHPExcel->getActiveSheet()->setCellValue('B1', 'Range #2')\r\n                              ->setCellValue('B2', 5)\r\n                              ->setCellValue('B3', 11)\r\n                              ->setCellValue('B4', 17)\r\n                              ->setCellValue('B5', '=SUM(B2:B4)');\r\n\r\n$objPHPExcel->getActiveSheet()->setCellValue('C7', 'Total range:');\r\n$objPHPExcel->getActiveSheet()->setCellValue('D7', '=ROWS(A2:B5)');\r\n\r\n$objPHPExcel->setActiveSheetIndex(0);\r\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');\r\n$objWriter->save('example.xls');\r\n```\r\n\r\nRegards. Could this be a typo or is it missing a wrapper function?, there is a private method _getMatrixDimensions_ in PHPExcel_Calculation. Same fatal error when using **COLUMNS** function as well.. @PowerKiKi  You're right.. i'm on 1.8.x-dev(forgot to mentiion it). Requested code example:\r\n```\r\n<?php\r\n$objPHPExcel = new PHPExcel();\r\n$objPHPExcel->getActiveSheet()->setCellValue('A1', 'Range #1')\r\n                              ->setCellValue('A2', 3)\r\n                              ->setCellValue('A3', 7)\r\n                              ->setCellValue('A4', 13)\r\n                              ->setCellValue('A5', '=SUM(A2:A4)');\r\n\r\n$objPHPExcel->getActiveSheet()->setCellValue('B1', 'Range #2')\r\n                              ->setCellValue('B2', 5)\r\n                              ->setCellValue('B3', 11)\r\n                              ->setCellValue('B4', 17)\r\n                              ->setCellValue('B5', '=SUM(B2:B4)');\r\n\r\n$objPHPExcel->getActiveSheet()->setCellValue('C7', 'Total range:');\r\n$objPHPExcel->getActiveSheet()->setCellValue('D7', '=ROWS(A2:B5)');\r\n\r\n$objPHPExcel->setActiveSheetIndex(0);\r\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');\r\n$objWriter->save('example.xls');\r\n```\r\n\r\nRegards. ",
    "combatx007": "Case-sensitive, of course! Thank you very much!! My problem is solved now!\n. Case-sensitive, of course! Thank you very much!! My problem is solved now!\n. ",
    "wpsgit": "ok thanks for quick response, what is confusing is code works great if installed manually and if installed through composer it does not output graph. Anyways I will continue with the manual step for now.\n. ok thanks for quick response, what is confusing is code works great if installed manually and if installed through composer it does not output graph. Anyways I will continue with the manual step for now.\n. ",
    "scando1993": "Is this solved? or which engine works best?  I'm using dompdf and I can't get to render the graphs. Is this solved? or which engine works best?  I'm using dompdf and I can't get to render the graphs. ",
    "rdoursenaud": "IMHO You should rather contact vaultpress for them to flag this false positive.\n. IMHO You should rather contact vaultpress for them to flag this false positive.\n. ",
    "waitxd": "I have the same issue.\n. I have the same issue.\n. ",
    "dregad": "> Headers/Footers aren't implemented in the HTML or PDF Writers\n\n@MarkBaker is this by design ? In other words, are you planning to implement header/footer for (m)PDF at some point ? I can understand the logic for not having them in HTML output, but for PDFs, they really should be printed.\n. I faced the same behavior, and worked around the problem by setting\n\n``` php\n$xlWS->setShowGridlines(false);\n```\n\nIMHO, PDF should be considered a \"print\" media, and therefore rely on _PrintGridlines_ setting rather than _ShowGridlines_\n. > Headers/Footers aren't implemented in the HTML or PDF Writers\n\n@MarkBaker is this by design ? In other words, are you planning to implement header/footer for (m)PDF at some point ? I can understand the logic for not having them in HTML output, but for PDFs, they really should be printed.\n. I faced the same behavior, and worked around the problem by setting\n\n``` php\n$xlWS->setShowGridlines(false);\n```\n\nIMHO, PDF should be considered a \"print\" media, and therefore rely on _PrintGridlines_ setting rather than _ShowGridlines_\n. ",
    "Canta": "Ok. There's my PR. Sorry about the mistake in the ticket number.\n. Ironically, i had a typo in the description: it was not 633, but #663. My bad :/\n. Ok. There's my PR. Sorry about the mistake in the ticket number.\n. Ironically, i had a typo in the description: it was not 633, but #663. My bad :/\n. ",
    "abosio": "~~I'm having this problem as well. I put the Classes and Examples directories on my servers and attempted to browser to Examples/01simple.php and received the same error:~~\n\n~~Fatal error: Class 'PHPExcel_Shared_String' not found in /home/psi/public_html/ezcatalog/Classes/PHPExcel/Autoloader.php on line 36~~\n\nMy problem turned out to be that the upload was incomplete and I did not notice. The class was not found because the Autoloader literally could not find the class file.\n. ~~I'm having this problem as well. I put the Classes and Examples directories on my servers and attempted to browser to Examples/01simple.php and received the same error:~~\n\n~~Fatal error: Class 'PHPExcel_Shared_String' not found in /home/psi/public_html/ezcatalog/Classes/PHPExcel/Autoloader.php on line 36~~\n\nMy problem turned out to be that the upload was incomplete and I did not notice. The class was not found because the Autoloader literally could not find the class file.\n. ",
    "sarajoseph": "I installed the latest version from GitHub, but I have the same problem\n. I installed the latest version from GitHub, but I have the same problem\n. ",
    "jiangwei1995910": " I have the same problem\uff01\uff01\uff01\uff01\uff01\uff01.  I have the same problem\uff01\uff01\uff01\uff01\uff01\uff01. ",
    "valioDOTch": "Agreed; my human detection short-circuited as the license.md file missed the preamble of the original LPGL 2.1\n. Agreed; my human detection short-circuited as the license.md file missed the preamble of the original LPGL 2.1\n. ",
    "shawe": "The problem is that\n\n$objReader->setReadFilter($chunkFilter);\n$objReader->setReadDataOnly(true);\n$objPHPExcel = $objReader->load($inputFile);\n\nIs not chuncked, it contains the full list with NULL and the values are set from $startRow up to $chunkSize.\n\nThis function is using and array more big than the real needed for the setReadFilter specifications. The problem seems to be easy, because we only want and array with $chunkSize elements from $startRow providing from $objReader, that is a new array with length $chunkSize and NOT an array with same length from $objReader with only values from $startRow up to $chunkSize+$startRow.\n. Ok, the problem seems to be in the Example.\n\narray(12) { [1]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [2]=> array(3) { [\"A\"]=> string(5) \"10252\" [\"B\"]=> string(12) \"LOCTITE(648)\" [\"C\"]=> string(13) \"No disponible\" } [3]=> array(3) { [\"A\"]=> string(6) \"211537\" [\"B\"]=> string(12) \"NO COMERCIAL\" [\"C\"]=> string(13) \"No disponible\" } [4]=> array(3) { [\"A\"]=> string(6) \"217380\" [\"B\"]=> string(20) \"REGULADOR DE PRESION\" [\"C\"]=> string(5) \"79,00\" } [5]=> array(3) { [\"A\"]=> string(6) \"220222\" [\"B\"]=> string(21) \"SUSTITUIDO POR 217380\" [\"C\"]=> string(13) \"No disponible\" } [6]=> array(3) { [\"A\"]=> string(6) \"222697\" [\"B\"]=> string(21) \"SUSTITUIDO POR 217380\" [\"C\"]=> string(13) \"No disponible\" } [7]=> array(3) { [\"A\"]=> string(6) \"228078\" [\"B\"]=> string(21) \"SUSTITUIDO POR 217380\" [\"C\"]=> string(13) \"No disponible\" } [8]=> array(3) { [\"A\"]=> string(6) \"229501\" [\"B\"]=> string(20) \"VALVULA FRENO DE PIE\" [\"C\"]=> string(13) \"No disponible\" } [9]=> array(3) { [\"A\"]=> string(6) \"229800\" [\"B\"]=> string(16) \"VALVULA DE FRENO\" [\"C\"]=> string(6) \"315,00\" } [10]=> array(3) { [\"A\"]=> string(6) \"230049\" [\"B\"]=> string(9) \"Pipe plug\" [\"C\"]=> string(13) \"No disponible\" } [11]=> array(3) { [\"A\"]=> string(6) \"230935\" [\"B\"]=> string(12) \"NO COMERCIAL\" [\"C\"]=> string(13) \"No disponible\" } [12]=> array(3) { [\"A\"]=> string(6) \"233057\" [\"B\"]=> string(0) \"\" [\"C\"]=> string(13) \"No disponible\" } } \n\narray(22) { [1]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [2]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [3]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [4]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [5]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [6]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [7]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [8]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [9]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [10]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [11]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [12]=> array(3) { [\"A\"]=> string(6) \"233057\" [\"B\"]=> string(0) \"\" [\"C\"]=> string(13) \"No disponible\" } [13]=> array(3) { [\"A\"]=> string(6) \"234837\" [\"B\"]=> string(12) \"NO COMERCIAL\" [\"C\"]=> string(13) \"No disponible\" } [14]=> array(3) { [\"A\"]=> string(6) \"238956\" [\"B\"]=> string(12) \"NO COMERCIAL\" [\"C\"]=> string(13) \"No disponible\" } [15]=> array(3) { [\"A\"]=> string(6) \"239979\" [\"B\"]=> string(12) \"NO COMERCIAL\" [\"C\"]=> string(13) \"No disponible\" } [16]=> array(3) { [\"A\"]=> string(6) \"243709\" [\"B\"]=> string(12) \"NO COMERCIAL\" [\"C\"]=> string(13) \"No disponible\" } [17]=> array(3) { [\"A\"]=> string(6) \"257115\" [\"B\"]=> string(12) \"NO COMERCIAL\" [\"C\"]=> string(13) \"No disponible\" } [18]=> array(3) { [\"A\"]=> string(6) \"257209\" [\"B\"]=> string(0) \"\" [\"C\"]=> string(13) \"No disponible\" } [19]=> array(3) { [\"A\"]=> string(6) \"257243\" [\"B\"]=> string(0) \"\" [\"C\"]=> string(13) \"No disponible\" } [20]=> array(3) { [\"A\"]=> string(6) \"257245\" [\"B\"]=> string(8) \"Yoke pin\" [\"C\"]=> string(13) \"No disponible\" } [21]=> array(3) { [\"A\"]=> string(6) \"257362\" [\"B\"]=> string(3) \"Pin\" [\"C\"]=> string(13) \"No disponible\" } [22]=> array(3) { [\"A\"]=> string(6) \"259617\" [\"B\"]=> string(17) \"VALVULA SEGURIDAD\" [\"C\"]=> string(5) \"48,00\" } } \n\nUsing it like in the example, the array is growing on every iteration.\n. MarkBaker your solution replacing toArray for rangeToArray seems to solve this problem of memory exausted.\n\nIn my concept of what setReadFilter must do, I better understand that must be a rangeToArray for the result.\n\narray(11) { [0]=> array(4) { [0]=> string(5) \"10252\" [1]=> string(12) \"LOCTITE(648)\" [2]=> string(13) \"No disponible\" [3]=> NULL } [1]=> array(4) { [0]=> string(6) \"211537\" [1]=> string(12) \"NO COMERCIAL\" [2]=> string(13) \"No disponible\" [3]=> NULL } [2]=> array(4) { [0]=> string(6) \"217380\" [1]=> string(20) \"REGULADOR DE PRESION\" [2]=> string(5) \"79,00\" [3]=> NULL } [3]=> array(4) { [0]=> string(6) \"220222\" [1]=> string(21) \"SUSTITUIDO POR 217380\" [2]=> string(13) \"No disponible\" [3]=> NULL } [4]=> array(4) { [0]=> string(6) \"222697\" [1]=> string(21) \"SUSTITUIDO POR 217380\" [2]=> string(13) \"No disponible\" [3]=> NULL } [5]=> array(4) { [0]=> string(6) \"228078\" [1]=> string(21) \"SUSTITUIDO POR 217380\" [2]=> string(13) \"No disponible\" [3]=> NULL } [6]=> array(4) { [0]=> string(6) \"229501\" [1]=> string(20) \"VALVULA FRENO DE PIE\" [2]=> string(13) \"No disponible\" [3]=> NULL } [7]=> array(4) { [0]=> string(6) \"229800\" [1]=> string(16) \"VALVULA DE FRENO\" [2]=> string(6) \"315,00\" [3]=> NULL } [8]=> array(4) { [0]=> string(6) \"230049\" [1]=> string(9) \"Pipe plug\" [2]=> string(13) \"No disponible\" [3]=> NULL } [9]=> array(4) { [0]=> string(6) \"230935\" [1]=> string(12) \"NO COMERCIAL\" [2]=> string(13) \"No disponible\" [3]=> NULL } [10]=> array(4) { [0]=> string(6) \"233057\" [1]=> string(0) \"\" [2]=> string(13) \"No disponible\" [3]=> NULL } } \n\narray(11) { [0]=> array(4) { [0]=> string(6) \"233057\" [1]=> string(0) \"\" [2]=> string(13) \"No disponible\" [3]=> NULL } [1]=> array(4) { [0]=> string(6) \"234837\" [1]=> string(12) \"NO COMERCIAL\" [2]=> string(13) \"No disponible\" [3]=> NULL } [2]=> array(4) { [0]=> string(6) \"238956\" [1]=> string(12) \"NO COMERCIAL\" [2]=> string(13) \"No disponible\" [3]=> NULL } [3]=> array(4) { [0]=> string(6) \"239979\" [1]=> string(12) \"NO COMERCIAL\" [2]=> string(13) \"No disponible\" [3]=> NULL } [4]=> array(4) { [0]=> string(6) \"243709\" [1]=> string(12) \"NO COMERCIAL\" [2]=> string(13) \"No disponible\" [3]=> NULL } [5]=> array(4) { [0]=> string(6) \"257115\" [1]=> string(12) \"NO COMERCIAL\" [2]=> string(13) \"No disponible\" [3]=> NULL } [6]=> array(4) { [0]=> string(6) \"257209\" [1]=> string(0) \"\" [2]=> string(13) \"No disponible\" [3]=> NULL } [7]=> array(4) { [0]=> string(6) \"257243\" [1]=> string(0) \"\" [2]=> string(13) \"No disponible\" [3]=> NULL } [8]=> array(4) { [0]=> string(6) \"257245\" [1]=> string(8) \"Yoke pin\" [2]=> string(13) \"No disponible\" [3]=> NULL } [9]=> array(4) { [0]=> string(6) \"257362\" [1]=> string(3) \"Pin\" [2]=> string(13) \"No disponible\" [3]=> NULL } [10]=> array(4) { [0]=> string(6) \"259617\" [1]=> string(17) \"VALVULA SEGURIDAD\" [2]=> string(5) \"48,00\" [3]=> NULL } } \n. The problem is that\n\n$objReader->setReadFilter($chunkFilter);\n$objReader->setReadDataOnly(true);\n$objPHPExcel = $objReader->load($inputFile);\n\nIs not chuncked, it contains the full list with NULL and the values are set from $startRow up to $chunkSize.\n\nThis function is using and array more big than the real needed for the setReadFilter specifications. The problem seems to be easy, because we only want and array with $chunkSize elements from $startRow providing from $objReader, that is a new array with length $chunkSize and NOT an array with same length from $objReader with only values from $startRow up to $chunkSize+$startRow.\n. Ok, the problem seems to be in the Example.\n\narray(12) { [1]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [2]=> array(3) { [\"A\"]=> string(5) \"10252\" [\"B\"]=> string(12) \"LOCTITE(648)\" [\"C\"]=> string(13) \"No disponible\" } [3]=> array(3) { [\"A\"]=> string(6) \"211537\" [\"B\"]=> string(12) \"NO COMERCIAL\" [\"C\"]=> string(13) \"No disponible\" } [4]=> array(3) { [\"A\"]=> string(6) \"217380\" [\"B\"]=> string(20) \"REGULADOR DE PRESION\" [\"C\"]=> string(5) \"79,00\" } [5]=> array(3) { [\"A\"]=> string(6) \"220222\" [\"B\"]=> string(21) \"SUSTITUIDO POR 217380\" [\"C\"]=> string(13) \"No disponible\" } [6]=> array(3) { [\"A\"]=> string(6) \"222697\" [\"B\"]=> string(21) \"SUSTITUIDO POR 217380\" [\"C\"]=> string(13) \"No disponible\" } [7]=> array(3) { [\"A\"]=> string(6) \"228078\" [\"B\"]=> string(21) \"SUSTITUIDO POR 217380\" [\"C\"]=> string(13) \"No disponible\" } [8]=> array(3) { [\"A\"]=> string(6) \"229501\" [\"B\"]=> string(20) \"VALVULA FRENO DE PIE\" [\"C\"]=> string(13) \"No disponible\" } [9]=> array(3) { [\"A\"]=> string(6) \"229800\" [\"B\"]=> string(16) \"VALVULA DE FRENO\" [\"C\"]=> string(6) \"315,00\" } [10]=> array(3) { [\"A\"]=> string(6) \"230049\" [\"B\"]=> string(9) \"Pipe plug\" [\"C\"]=> string(13) \"No disponible\" } [11]=> array(3) { [\"A\"]=> string(6) \"230935\" [\"B\"]=> string(12) \"NO COMERCIAL\" [\"C\"]=> string(13) \"No disponible\" } [12]=> array(3) { [\"A\"]=> string(6) \"233057\" [\"B\"]=> string(0) \"\" [\"C\"]=> string(13) \"No disponible\" } } \n\narray(22) { [1]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [2]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [3]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [4]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [5]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [6]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [7]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [8]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [9]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [10]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [11]=> array(3) { [\"A\"]=> NULL [\"B\"]=> NULL [\"C\"]=> NULL } [12]=> array(3) { [\"A\"]=> string(6) \"233057\" [\"B\"]=> string(0) \"\" [\"C\"]=> string(13) \"No disponible\" } [13]=> array(3) { [\"A\"]=> string(6) \"234837\" [\"B\"]=> string(12) \"NO COMERCIAL\" [\"C\"]=> string(13) \"No disponible\" } [14]=> array(3) { [\"A\"]=> string(6) \"238956\" [\"B\"]=> string(12) \"NO COMERCIAL\" [\"C\"]=> string(13) \"No disponible\" } [15]=> array(3) { [\"A\"]=> string(6) \"239979\" [\"B\"]=> string(12) \"NO COMERCIAL\" [\"C\"]=> string(13) \"No disponible\" } [16]=> array(3) { [\"A\"]=> string(6) \"243709\" [\"B\"]=> string(12) \"NO COMERCIAL\" [\"C\"]=> string(13) \"No disponible\" } [17]=> array(3) { [\"A\"]=> string(6) \"257115\" [\"B\"]=> string(12) \"NO COMERCIAL\" [\"C\"]=> string(13) \"No disponible\" } [18]=> array(3) { [\"A\"]=> string(6) \"257209\" [\"B\"]=> string(0) \"\" [\"C\"]=> string(13) \"No disponible\" } [19]=> array(3) { [\"A\"]=> string(6) \"257243\" [\"B\"]=> string(0) \"\" [\"C\"]=> string(13) \"No disponible\" } [20]=> array(3) { [\"A\"]=> string(6) \"257245\" [\"B\"]=> string(8) \"Yoke pin\" [\"C\"]=> string(13) \"No disponible\" } [21]=> array(3) { [\"A\"]=> string(6) \"257362\" [\"B\"]=> string(3) \"Pin\" [\"C\"]=> string(13) \"No disponible\" } [22]=> array(3) { [\"A\"]=> string(6) \"259617\" [\"B\"]=> string(17) \"VALVULA SEGURIDAD\" [\"C\"]=> string(5) \"48,00\" } } \n\nUsing it like in the example, the array is growing on every iteration.\n. MarkBaker your solution replacing toArray for rangeToArray seems to solve this problem of memory exausted.\n\nIn my concept of what setReadFilter must do, I better understand that must be a rangeToArray for the result.\n\narray(11) { [0]=> array(4) { [0]=> string(5) \"10252\" [1]=> string(12) \"LOCTITE(648)\" [2]=> string(13) \"No disponible\" [3]=> NULL } [1]=> array(4) { [0]=> string(6) \"211537\" [1]=> string(12) \"NO COMERCIAL\" [2]=> string(13) \"No disponible\" [3]=> NULL } [2]=> array(4) { [0]=> string(6) \"217380\" [1]=> string(20) \"REGULADOR DE PRESION\" [2]=> string(5) \"79,00\" [3]=> NULL } [3]=> array(4) { [0]=> string(6) \"220222\" [1]=> string(21) \"SUSTITUIDO POR 217380\" [2]=> string(13) \"No disponible\" [3]=> NULL } [4]=> array(4) { [0]=> string(6) \"222697\" [1]=> string(21) \"SUSTITUIDO POR 217380\" [2]=> string(13) \"No disponible\" [3]=> NULL } [5]=> array(4) { [0]=> string(6) \"228078\" [1]=> string(21) \"SUSTITUIDO POR 217380\" [2]=> string(13) \"No disponible\" [3]=> NULL } [6]=> array(4) { [0]=> string(6) \"229501\" [1]=> string(20) \"VALVULA FRENO DE PIE\" [2]=> string(13) \"No disponible\" [3]=> NULL } [7]=> array(4) { [0]=> string(6) \"229800\" [1]=> string(16) \"VALVULA DE FRENO\" [2]=> string(6) \"315,00\" [3]=> NULL } [8]=> array(4) { [0]=> string(6) \"230049\" [1]=> string(9) \"Pipe plug\" [2]=> string(13) \"No disponible\" [3]=> NULL } [9]=> array(4) { [0]=> string(6) \"230935\" [1]=> string(12) \"NO COMERCIAL\" [2]=> string(13) \"No disponible\" [3]=> NULL } [10]=> array(4) { [0]=> string(6) \"233057\" [1]=> string(0) \"\" [2]=> string(13) \"No disponible\" [3]=> NULL } } \n\narray(11) { [0]=> array(4) { [0]=> string(6) \"233057\" [1]=> string(0) \"\" [2]=> string(13) \"No disponible\" [3]=> NULL } [1]=> array(4) { [0]=> string(6) \"234837\" [1]=> string(12) \"NO COMERCIAL\" [2]=> string(13) \"No disponible\" [3]=> NULL } [2]=> array(4) { [0]=> string(6) \"238956\" [1]=> string(12) \"NO COMERCIAL\" [2]=> string(13) \"No disponible\" [3]=> NULL } [3]=> array(4) { [0]=> string(6) \"239979\" [1]=> string(12) \"NO COMERCIAL\" [2]=> string(13) \"No disponible\" [3]=> NULL } [4]=> array(4) { [0]=> string(6) \"243709\" [1]=> string(12) \"NO COMERCIAL\" [2]=> string(13) \"No disponible\" [3]=> NULL } [5]=> array(4) { [0]=> string(6) \"257115\" [1]=> string(12) \"NO COMERCIAL\" [2]=> string(13) \"No disponible\" [3]=> NULL } [6]=> array(4) { [0]=> string(6) \"257209\" [1]=> string(0) \"\" [2]=> string(13) \"No disponible\" [3]=> NULL } [7]=> array(4) { [0]=> string(6) \"257243\" [1]=> string(0) \"\" [2]=> string(13) \"No disponible\" [3]=> NULL } [8]=> array(4) { [0]=> string(6) \"257245\" [1]=> string(8) \"Yoke pin\" [2]=> string(13) \"No disponible\" [3]=> NULL } [9]=> array(4) { [0]=> string(6) \"257362\" [1]=> string(3) \"Pin\" [2]=> string(13) \"No disponible\" [3]=> NULL } [10]=> array(4) { [0]=> string(6) \"259617\" [1]=> string(17) \"VALVULA SEGURIDAD\" [2]=> string(5) \"48,00\" [3]=> NULL } } \n. ",
    "jlherren": "Perhaps a solution involving `php://memory` or `php://temp` might be easier to implement. A user could open and write into an `php://memory` stream and then pass it on to PHPExcel. Note that opening `php://memory` will always create a new fresh temporary handle, this means that passing it to PHPExcel as a file name is not possible.\n. Perhaps a solution involving `php://memory` or `php://temp` might be easier to implement. A user could open and write into an `php://memory` stream and then pass it on to PHPExcel. Note that opening `php://memory` will always create a new fresh temporary handle, this means that passing it to PHPExcel as a file name is not possible.\n. ",
    "xyluet": "So what is the solution ? Everybody just referenced it all the way. So what is the solution ? Everybody just referenced it all the way. ",
    "robinkanters": "If the build always fails, what does it even mean?\n. If the build always fails, what does it even mean?\n. ",
    "3cees": "It should be the lkates from here. I will download it again and retry it.\nIf i take lesse then 10 values, it works as expected\n. Yes. Just checked. I use the lates version from github. Set the loop to 200 items and got the result in the attached file. https://wsi.li/DTo3psiE4cZ2/168001\n. Yes. 1.8.\nCould it be a server issue?\n. I am calling that function through an ajax call.\nIt runs inside a worpdress installation and it only happens when I use `$wizard->toRichTextObject()`.\nIf you need any more info, or should know any workaraund, let me know. Maybe there is an easy way, to debug this.\n. You can check it via TeamViewer. If you want.\n. By the way: this problem only appears, when the line break property is set.\n. It should be the lkates from here. I will download it again and retry it.\nIf i take lesse then 10 values, it works as expected\n. Yes. Just checked. I use the lates version from github. Set the loop to 200 items and got the result in the attached file. https://wsi.li/DTo3psiE4cZ2/168001\n. Yes. 1.8.\nCould it be a server issue?\n. I am calling that function through an ajax call.\nIt runs inside a worpdress installation and it only happens when I use `$wizard->toRichTextObject()`.\nIf you need any more info, or should know any workaraund, let me know. Maybe there is an easy way, to debug this.\n. You can check it via TeamViewer. If you want.\n. By the way: this problem only appears, when the line break property is set.\n. ",
    "ProfessorComputer": "Hi Mark!\n\nI've got a similar problem, too (PHPExcel 1.8, PHP 5.3.x, OpenOffice 4.1.2).\n\nYou may reproduce it by using the example \"42richText.php\". \nI used this modified version (no saving, just direct output):\n\n``` PHP\n<?php\nerror_reporting(E_ALL);\nini_set('display_errors', TRUE);\nini_set('display_startup_errors', TRUE);\ndate_default_timezone_set('Europe/London');\ndefine('EOL',(PHP_SAPI == 'cli') ? PHP_EOL : '<br />');\n/** Include PHPExcel */\nrequire_once dirname(__FILE__) . '/Classes/PHPExcel.php';\n// Create new PHPExcel object\n$objPHPExcel = new PHPExcel();\n// Set document properties\n$objPHPExcel->getProperties()->setCreator(\"Maarten Balliauw\")\n                             ->setLastModifiedBy(\"Maarten Balliauw\")\n                             ->setTitle(\"PHPExcel Test Document\")\n                             ->setSubject(\"PHPExcel Test Document\")\n                             ->setDescription(\"Test document for PHPExcel, generated using PHP classes.\")\n                             ->setKeywords(\"office PHPExcel php\")\n                             ->setCategory(\"Test result file\");\n// Add some data\n$html1 = '<font color=\"#0000ff\">\n<h1 align=\"center\">My very first example of rich text<br />generated from html markup</h1>\n<p>\n<font size=\"14\" COLOR=\"rgb(0,255,128)\">\n<b>This block</b> contains an <i>italicized</i> word;\nwhile this block uses an <u>underline</u>.\n</font>\n</p>\n<p align=\"right\"><font size=\"9\" color=\"red\">\nI want to eat <ins><del>healthy food</del> <strong>pizza</strong></ins>.\n</font>\n';\n$html2 = '<p>\n<font color=\"#ff0000\">\n    100&deg;C is a hot temperature\n</font>\n<br>\n<font color=\"#0080ff\">\n    10&deg;F is cold\n</font>\n</p>';\n$html3 = '2<sup>3</sup> equals 8';\n$html4 = 'H<sub>2</sub>SO<sub>4</sub> is the chemical formula for Sulphuric acid';\n$html5 = '<strong>bold</strong>, <em>italic</em>, <strong><em>bold+italic</em></strong>';\n$wizard = new PHPExcel_Helper_HTML;\n$richText = $wizard->toRichTextObject($html1);\n$objPHPExcel->setActiveSheetIndex(0)\n    ->setCellValue('A1', $richText);\n$objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(48);\n$objPHPExcel->getActiveSheet()->getRowDimension(1)->setRowHeight(-1);\n$objPHPExcel->getActiveSheet()->getStyle('A1')\n    ->getAlignment()\n    ->setWrapText(true);\n$richText = $wizard->toRichTextObject($html2);\n$objPHPExcel->getActiveSheet()\n    ->setCellValue('A2', $richText);\n$objPHPExcel->getActiveSheet()->getRowDimension(1)->setRowHeight(-1);\n$objPHPExcel->getActiveSheet()->getStyle('A2')\n    ->getAlignment()\n    ->setWrapText(true);\n$objPHPExcel->getActiveSheet()\n    ->setCellValue('A3', $wizard->toRichTextObject($html3));\n$objPHPExcel->getActiveSheet()\n    ->setCellValue('A4', $wizard->toRichTextObject($html4));\n$objPHPExcel->getActiveSheet()\n    ->setCellValue('A5', $wizard->toRichTextObject($html5));\n\n// Here comes the loop ;)\nfor($i = 6; $i<100; $i++){\n  $objPHPExcel->getActiveSheet()\n    ->setCellValue('A'.$i, $wizard->toRichTextObject('<strong>Test #'.$i.'</strong>bla<br>blubb'));\n}\n\n// Rename worksheet\n$objPHPExcel->getActiveSheet()->setTitle('Simple');\n// Set active sheet index to the first sheet, so Excel opens this as the first sheet\n$objPHPExcel->setActiveSheetIndex(0);\n\n// NEW\nheader('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\nheader('Content-Disposition: attachment;filename=\"Test\"');\nheader('Cache-Control: max-age=0');\n\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\n$objWriter->save('php://output');\nexit;\n?>\n```\n\nAny idea?\n. Hi Mark!\n\nI've got a similar problem, too (PHPExcel 1.8, PHP 5.3.x, OpenOffice 4.1.2).\n\nYou may reproduce it by using the example \"42richText.php\". \nI used this modified version (no saving, just direct output):\n\n``` PHP\n<?php\nerror_reporting(E_ALL);\nini_set('display_errors', TRUE);\nini_set('display_startup_errors', TRUE);\ndate_default_timezone_set('Europe/London');\ndefine('EOL',(PHP_SAPI == 'cli') ? PHP_EOL : '<br />');\n/** Include PHPExcel */\nrequire_once dirname(__FILE__) . '/Classes/PHPExcel.php';\n// Create new PHPExcel object\n$objPHPExcel = new PHPExcel();\n// Set document properties\n$objPHPExcel->getProperties()->setCreator(\"Maarten Balliauw\")\n                             ->setLastModifiedBy(\"Maarten Balliauw\")\n                             ->setTitle(\"PHPExcel Test Document\")\n                             ->setSubject(\"PHPExcel Test Document\")\n                             ->setDescription(\"Test document for PHPExcel, generated using PHP classes.\")\n                             ->setKeywords(\"office PHPExcel php\")\n                             ->setCategory(\"Test result file\");\n// Add some data\n$html1 = '<font color=\"#0000ff\">\n<h1 align=\"center\">My very first example of rich text<br />generated from html markup</h1>\n<p>\n<font size=\"14\" COLOR=\"rgb(0,255,128)\">\n<b>This block</b> contains an <i>italicized</i> word;\nwhile this block uses an <u>underline</u>.\n</font>\n</p>\n<p align=\"right\"><font size=\"9\" color=\"red\">\nI want to eat <ins><del>healthy food</del> <strong>pizza</strong></ins>.\n</font>\n';\n$html2 = '<p>\n<font color=\"#ff0000\">\n    100&deg;C is a hot temperature\n</font>\n<br>\n<font color=\"#0080ff\">\n    10&deg;F is cold\n</font>\n</p>';\n$html3 = '2<sup>3</sup> equals 8';\n$html4 = 'H<sub>2</sub>SO<sub>4</sub> is the chemical formula for Sulphuric acid';\n$html5 = '<strong>bold</strong>, <em>italic</em>, <strong><em>bold+italic</em></strong>';\n$wizard = new PHPExcel_Helper_HTML;\n$richText = $wizard->toRichTextObject($html1);\n$objPHPExcel->setActiveSheetIndex(0)\n    ->setCellValue('A1', $richText);\n$objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(48);\n$objPHPExcel->getActiveSheet()->getRowDimension(1)->setRowHeight(-1);\n$objPHPExcel->getActiveSheet()->getStyle('A1')\n    ->getAlignment()\n    ->setWrapText(true);\n$richText = $wizard->toRichTextObject($html2);\n$objPHPExcel->getActiveSheet()\n    ->setCellValue('A2', $richText);\n$objPHPExcel->getActiveSheet()->getRowDimension(1)->setRowHeight(-1);\n$objPHPExcel->getActiveSheet()->getStyle('A2')\n    ->getAlignment()\n    ->setWrapText(true);\n$objPHPExcel->getActiveSheet()\n    ->setCellValue('A3', $wizard->toRichTextObject($html3));\n$objPHPExcel->getActiveSheet()\n    ->setCellValue('A4', $wizard->toRichTextObject($html4));\n$objPHPExcel->getActiveSheet()\n    ->setCellValue('A5', $wizard->toRichTextObject($html5));\n\n// Here comes the loop ;)\nfor($i = 6; $i<100; $i++){\n  $objPHPExcel->getActiveSheet()\n    ->setCellValue('A'.$i, $wizard->toRichTextObject('<strong>Test #'.$i.'</strong>bla<br>blubb'));\n}\n\n// Rename worksheet\n$objPHPExcel->getActiveSheet()->setTitle('Simple');\n// Set active sheet index to the first sheet, so Excel opens this as the first sheet\n$objPHPExcel->setActiveSheetIndex(0);\n\n// NEW\nheader('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\nheader('Content-Disposition: attachment;filename=\"Test\"');\nheader('Cache-Control: max-age=0');\n\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\n$objWriter->save('php://output');\nexit;\n?>\n```\n\nAny idea?\n. ",
    "elondaits": "The documentation and examples are an important part of the release. Please include them in the .zip file otherwise they're rather hard to find unless you know to look for them.\n. The documentation and examples are an important part of the release. Please include them in the .zip file otherwise they're rather hard to find unless you know to look for them.\n. ",
    "hmishra1234": "Dear Sir \nI am facing the same issue ....the converted .csv file contains number instead of date..could u plz send me the patch as well. \n\n## my sample code is as following..\n\n $objReader = PHPExcel_IOFactory::createReader($fileType);\n    $objReader->setReadDataOnly(false);  \n    $objPHPExcel = $objReader->load($infile);  \n\n```\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'CSV');\n$objWriter->save($outfile);\n```\n\n---\n\n Thanks \n. Dear Sir \nThanks for the quick response.\nWhen i removed this line \n$objReader->setReadDataOnly(false);\n\nThe converted .csv file is completely empty. Don't know why this is happening\n. Dear Sir,\nI have data in excell format from telephone exchange, i have to convert it into .csv and upload on to mysql db, so that individual user can see their telephone bill accordingly  \n. and when i remove this line\n$objReader->setReadDataOnly(false);\n\nthe converted .csv file is of 0kb size\n. Dear Sir \nI am facing the same issue ....the converted .csv file contains number instead of date..could u plz send me the patch as well. \n\n## my sample code is as following..\n\n $objReader = PHPExcel_IOFactory::createReader($fileType);\n    $objReader->setReadDataOnly(false);  \n    $objPHPExcel = $objReader->load($infile);  \n\n```\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'CSV');\n$objWriter->save($outfile);\n```\n\n---\n\n Thanks \n. Dear Sir \nThanks for the quick response.\nWhen i removed this line \n$objReader->setReadDataOnly(false);\n\nThe converted .csv file is completely empty. Don't know why this is happening\n. Dear Sir,\nI have data in excell format from telephone exchange, i have to convert it into .csv and upload on to mysql db, so that individual user can see their telephone bill accordingly  \n. and when i remove this line\n$objReader->setReadDataOnly(false);\n\nthe converted .csv file is of 0kb size\n. ",
    "glady": "Ups. I just wanted to send the first commits with changing the travis-configuration because of their infrastructure changes. \n\nThe remaining commits containing some test provider comments, fixes and some trivial PSR-2 fixes. \n\nThere is also a fix within DateTime-Class (0 should be treated like NULL (failing sice change from May 2015) - defined by given test provider) - when the test provider is \"out of date\", this should be adapted again!\n\nThere were some trivial errors within provider-data. When there are tests, they should work correct or even give correct expected result.\n. Ups. I just wanted to send the first commits with changing the travis-configuration because of their infrastructure changes. \n\nThe remaining commits containing some test provider comments, fixes and some trivial PSR-2 fixes. \n\nThere is also a fix within DateTime-Class (0 should be treated like NULL (failing sice change from May 2015) - defined by given test provider) - when the test provider is \"out of date\", this should be adapted again!\n\nThere were some trivial errors within provider-data. When there are tests, they should work correct or even give correct expected result.\n. ",
    "niloyniloy": "I changed that to \"getCalculatedValue()\" .. but it gives me same zero \"0\" and two warning \n\n. Notice: Undefined offset: 1 in C:\\xampp\\htdocs\\excel_prac\\a\\Classes\\PHPExcel\\Calculation\\LookupRef.php on line 618 Notice: Undefined index: in C:\\xampp\\htdocs\\excel_prac\\a\\Classes\\PHPExcel\\Calculation\\LookupRef.php on line 625\n. I changed that to \"getCalculatedValue()\" .. but it gives me same zero \"0\" and two warning \n\n. Notice: Undefined offset: 1 in C:\\xampp\\htdocs\\excel_prac\\a\\Classes\\PHPExcel\\Calculation\\LookupRef.php on line 618 Notice: Undefined index: in C:\\xampp\\htdocs\\excel_prac\\a\\Classes\\PHPExcel\\Calculation\\LookupRef.php on line 625\n. ",
    "ger67": "I have this code (trying import a excel file)\r\n\r\nExcel::filter('chunk')\r\n                    ->selectSheets($sheetName)\r\n                    ->load($filepath)\r\n                    ->calculate(true)\r\n                    ->noHeading()\r\n                    ->chunk($chunkSize, function($rows) use($sheetData) {\r\n\r\n                        Log::notice('Import chunk');\r\n                        foreach ($rows as $index => $cells) {\r\n\r\n                            $attrs = $cells->toArray();\r\n\r\n                            dd($cells, $attrs);\r\n\r\n...\r\n\r\nand the columns that are calculated returns 0 (the function from the excel is: =ENTERO((G9*Valores!$C$2*100)+0,5)/100 ). I have this code (trying import a excel file)\r\n\r\nExcel::filter('chunk')\r\n                    ->selectSheets($sheetName)\r\n                    ->load($filepath)\r\n                    ->calculate(true)\r\n                    ->noHeading()\r\n                    ->chunk($chunkSize, function($rows) use($sheetData) {\r\n\r\n                        Log::notice('Import chunk');\r\n                        foreach ($rows as $index => $cells) {\r\n\r\n                            $attrs = $cells->toArray();\r\n\r\n                            dd($cells, $attrs);\r\n\r\n...\r\n\r\nand the columns that are calculated returns 0 (the function from the excel is: =ENTERO((G9*Valores!$C$2*100)+0,5)/100 ). ",
    "hernst42": "yes it's in the branch\n. yes it's in the branch\n. ",
    "Melindrea": "Sorry, I've divided it up a lot. it's in a different class, where if there is a chart:\n\nIn the construct:\n`$this->spreadsheet = new \\PHPExcel();`\n\nIn a function for populating each sheet (if there is a graph)\n\n```\n$sheet->addChart($chart);\n$this->includeCharts = true;\n```\n\nWhen saving\n\n```\npublic function save()\n    {\n        $filepath = sprintf('/tmp/%s%s.xls', $this->name, date('Ymd', time()));\n        $objWriter = \\PHPExcel_IOFactory::createWriter($this->spreadsheet, $this->type);\n        $objWriter->setIncludeCharts($this->includeCharts);\n        $objWriter->save($filepath);\n\n        return $filepath;\n    }\n```\n. Sorry, I've divided it up a lot. it's in a different class, where if there is a chart:\n\nIn the construct:\n`$this->spreadsheet = new \\PHPExcel();`\n\nIn a function for populating each sheet (if there is a graph)\n\n```\n$sheet->addChart($chart);\n$this->includeCharts = true;\n```\n\nWhen saving\n\n```\npublic function save()\n    {\n        $filepath = sprintf('/tmp/%s%s.xls', $this->name, date('Ymd', time()));\n        $objWriter = \\PHPExcel_IOFactory::createWriter($this->spreadsheet, $this->type);\n        $objWriter->setIncludeCharts($this->includeCharts);\n        $objWriter->save($filepath);\n\n        return $filepath;\n    }\n```\n. ",
    "willselby": "What's wrong with having an integer as a worksheet title?\n\nI need to create worksheets for years from the keys of an array as in; `[2001, 2002, 2003]`. Excel is perfectly happy with this, but this method causes them to throw an exception. I could go through the array and explicitly declare each as a string, but if the user checks the array of invalid characters then it isn't immediately obvious why this has failed.\n\nIf we insist on the title being a string then we could add; `$pValue = (string) $pValue;` within the method to take the responsibility of this away from the user.\n\nJust thought this would make the life of the end user easier.\n. Ah ok, I was assuming it was happy working with integers rather than converting them to strings. In that case I think you're right about casting to strings rather than loosening the validation.\n. What's wrong with having an integer as a worksheet title?\n\nI need to create worksheets for years from the keys of an array as in; `[2001, 2002, 2003]`. Excel is perfectly happy with this, but this method causes them to throw an exception. I could go through the array and explicitly declare each as a string, but if the user checks the array of invalid characters then it isn't immediately obvious why this has failed.\n\nIf we insist on the title being a string then we could add; `$pValue = (string) $pValue;` within the method to take the responsibility of this away from the user.\n\nJust thought this would make the life of the end user easier.\n. Ah ok, I was assuming it was happy working with integers rather than converting them to strings. In that case I think you're right about casting to strings rather than loosening the validation.\n. ",
    "PeterWVV": "Hello Mark,\n\nThank you for your quick answer.\n\nHere is the php script I use. As you can see, I changed the readers and writers in order to load and save graphs, but that doesn't change, they don't load\u2026\n\nFor the style, these are conditional styles. So i guess i have to investigate a bit more to set them manually.\n\nThanks again\n\nPeter\n\n<?php\nerror_reporting(E_ALL);\nini_set('display_errors', TRUE);\nini_set('display_startup_errors', TRUE);\ndate_default_timezone_set('Europe/Paris');\nrequire_once '/Users/petervanvliet/Desktop/D\u00e9veloppement/VMv3 4DV14/Resources/PHPExcel/PHPExcel.php';\n$objReader = PHPExcel_IOFactory::createReaderForFile('/Users/petervanvliet/Desktop/D\u00e9veloppement/VMv3 4DV14/DossierWeb/batigere/NERESTITUTIONG2.xls');\n$objReader->setIncludeCharts(TRUE);\n$objPHPExcel = $objReader->load('/Users/petervanvliet/Desktop/D\u00e9veloppement/VMv3 4DV14/DossierWeb/batigere/NERESTITUTIONG2.xls');\n$objPHPExcel->setActiveSheetIndex(0);\nPHPExcel_Cell::setValueBinder(new PHPExcel_Cell_AdvancedValueBinder());\n$format_date=array('numberformat'=>array('code'=>'DD/MM/YYYY',));\n$objWorksheet = $objPHPExcel->getActiveSheet();\n$objWorksheet->getStyle('C146')->getNumberFormat()->setFormatCode('#####0');\n$objWorksheet->getCell('C146')->setValueExplicit('16', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('C147')->getNumberFormat()->setFormatCode('#####0');\n$objWorksheet->getCell('C147')->setValueExplicit('1', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('C149')->getNumberFormat()->setFormatCode('#####0');\n$objWorksheet->getCell('C149')->setValueExplicit('6', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('C150')->getNumberFormat()->setFormatCode('#####0');\n$objWorksheet->getCell('C150')->setValueExplicit('0', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(0,1, 'AGENCE THIONVILLE');\n$objWorksheet->setCellValueByColumnAndRow(9,1, 'Enqu\u00eate Nouveaux Entrants - Janvier 2015');\n$objWorksheet->setCellValueByColumnAndRow(18,1, '17');\n$objWorksheet->setCellValueByColumnAndRow(18,2, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,7, 'Votre Agence');\n$objWorksheet->setCellValueByColumnAndRow(8,7, 'Soci\u00e9t\u00e9');\n$objWorksheet->setCellValueByColumnAndRow(3,8, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,8, '8,5');\n$objWorksheet->setCellValueByColumnAndRow(8,8, '8,5');\n$objWorksheet->setCellValueByColumnAndRow(11,8, '3');\n$objWorksheet->setCellValueByColumnAndRow(12,8, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(13,8, '3');\n$objWorksheet->setCellValueByColumnAndRow(14,8, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(15,8, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,8, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,8, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,8, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,15, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,15, '73 %');\n$objWorksheet->setCellValueByColumnAndRow(11,15, '3');\n$objWorksheet->setCellValueByColumnAndRow(12,15, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(13,15, '3');\n$objWorksheet->setCellValueByColumnAndRow(14,15, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(15,15, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,15, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,15, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,15, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,16, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,16, '80 %');\n$objWorksheet->setCellValueByColumnAndRow(11,16, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,16, '67 %');\n$objWorksheet->setCellValueByColumnAndRow(13,16, '2');\n$objWorksheet->setCellValueByColumnAndRow(14,16, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(15,16, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,16, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,16, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,16, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,17, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,17, '73 %');\n$objWorksheet->setCellValueByColumnAndRow(11,17, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,17, '67 %');\n$objWorksheet->setCellValueByColumnAndRow(13,17, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,17, '17 %');\n$objWorksheet->setCellValueByColumnAndRow(15,17, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,17, '17 %');\n$objWorksheet->setCellValueByColumnAndRow(17,17, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,17, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,24, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,24, '60 %');\n$objWorksheet->setCellValueByColumnAndRow(11,24, '2');\n$objWorksheet->setCellValueByColumnAndRow(12,24, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(13,24, '3');\n$objWorksheet->setCellValueByColumnAndRow(14,24, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(15,24, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,24, '17 %');\n$objWorksheet->setCellValueByColumnAndRow(17,24, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,24, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,25, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,25, '60 %');\n$objWorksheet->setCellValueByColumnAndRow(11,25, '2');\n$objWorksheet->setCellValueByColumnAndRow(12,25, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(13,25, '4');\n$objWorksheet->setCellValueByColumnAndRow(14,25, '67 %');\n$objWorksheet->setCellValueByColumnAndRow(15,25, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,25, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,25, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,25, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,26, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,26, '53 %');\n$objWorksheet->setCellValueByColumnAndRow(11,26, '2');\n$objWorksheet->setCellValueByColumnAndRow(12,26, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(13,26, '4');\n$objWorksheet->setCellValueByColumnAndRow(14,26, '67 %');\n$objWorksheet->setCellValueByColumnAndRow(15,26, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,26, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,26, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,26, '0 %');\n$objWorksheet->getStyle('V32')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V32')->setValueExplicit('0.5000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W32')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W32')->setValueExplicit('0.5000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('X32')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('X32')->setValueExplicit('0.0000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('V33')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V33')->setValueExplicit('0.5000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W33')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W33')->setValueExplicit('0.3000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('X33')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('X33')->setValueExplicit('0.2000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(7,36, '10');\n$objWorksheet->getStyle('V41')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V41')->setValueExplicit('0.8333', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W41')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W41')->setValueExplicit('0.1667', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(2,46, '6');\n$objWorksheet->getStyle('V42')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V42')->setValueExplicit('0.9333', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W42')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W42')->setValueExplicit('0.0667', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('V44')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V44')->setValueExplicit('1.0000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W44')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W44')->setValueExplicit('0.0000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(12,46, '5');\n$objWorksheet->getStyle('V45')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V45')->setValueExplicit('1.0000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W45')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W45')->setValueExplicit('0.0000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('V48')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V48')->setValueExplicit('0.6667', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W48')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W48')->setValueExplicit('0.3333', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(2,53, '6');\n$objWorksheet->getStyle('V49')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V49')->setValueExplicit('0.7333', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W49')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W49')->setValueExplicit('0.2667', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('V51')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V51')->setValueExplicit('0.8000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W51')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W51')->setValueExplicit('0.2000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(12,53, '5');\n$objWorksheet->getStyle('V52')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V52')->setValueExplicit('0.8571', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W52')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W52')->setValueExplicit('0.1429', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('V55')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V55')->setValueExplicit('0.8333', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W55')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W55')->setValueExplicit('0.1667', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(2,60, '6');\n$objWorksheet->getStyle('V56')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V56')->setValueExplicit('0.9333', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W56')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W56')->setValueExplicit('0.0667', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('V58')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V58')->setValueExplicit('0.8000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W58')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W58')->setValueExplicit('0.2000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(12,60, '5');\n$objWorksheet->getStyle('V59')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V59')->setValueExplicit('0.8571', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W59')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W59')->setValueExplicit('0.1429', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('V62')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V62')->setValueExplicit('1.0000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W62')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W62')->setValueExplicit('0.0000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(2,67, '6');\n$objWorksheet->getStyle('V63')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V63')->setValueExplicit('1.0000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W63')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W63')->setValueExplicit('0.0000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('V65')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V65')->setValueExplicit('0.6667', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W65')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W65')->setValueExplicit('0.3333', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(12,67, '6');\n$objWorksheet->getStyle('V66')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V66')->setValueExplicit('0.7857', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W66')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W66')->setValueExplicit('0.2143', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(3,72, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,72, '53 %');\n$objWorksheet->setCellValueByColumnAndRow(11,72, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,72, '67 %');\n$objWorksheet->setCellValueByColumnAndRow(13,72, '2');\n$objWorksheet->setCellValueByColumnAndRow(14,72, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(15,72, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,72, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,72, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,72, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,73, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,73, '53 %');\n$objWorksheet->setCellValueByColumnAndRow(11,73, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,73, '67 %');\n$objWorksheet->setCellValueByColumnAndRow(13,73, '2');\n$objWorksheet->setCellValueByColumnAndRow(14,73, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(15,73, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,73, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,73, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,73, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,74, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,74, '53 %');\n$objWorksheet->setCellValueByColumnAndRow(11,74, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,74, '67 %');\n$objWorksheet->setCellValueByColumnAndRow(13,74, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,74, '17 %');\n$objWorksheet->setCellValueByColumnAndRow(15,74, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,74, '17 %');\n$objWorksheet->setCellValueByColumnAndRow(17,74, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,74, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,75, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,75, '53 %');\n$objWorksheet->setCellValueByColumnAndRow(11,75, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,75, '67 %');\n$objWorksheet->setCellValueByColumnAndRow(13,75, '2');\n$objWorksheet->setCellValueByColumnAndRow(14,75, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(15,75, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,75, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,75, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,75, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,80, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,80, '46 %');\n$objWorksheet->setCellValueByColumnAndRow(11,80, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,80, '80 %');\n$objWorksheet->setCellValueByColumnAndRow(13,80, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,80, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(15,80, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,80, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,80, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,80, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,81, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,81, '23 %');\n$objWorksheet->setCellValueByColumnAndRow(11,81, '2');\n$objWorksheet->setCellValueByColumnAndRow(12,81, '40 %');\n$objWorksheet->setCellValueByColumnAndRow(13,81, '2');\n$objWorksheet->setCellValueByColumnAndRow(14,81, '40 %');\n$objWorksheet->setCellValueByColumnAndRow(15,81, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,81, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,81, '1');\n$objWorksheet->setCellValueByColumnAndRow(18,81, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(3,82, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,82, '38 %');\n$objWorksheet->setCellValueByColumnAndRow(11,82, '2');\n$objWorksheet->setCellValueByColumnAndRow(12,82, '40 %');\n$objWorksheet->setCellValueByColumnAndRow(13,82, '2');\n$objWorksheet->setCellValueByColumnAndRow(14,82, '40 %');\n$objWorksheet->setCellValueByColumnAndRow(15,82, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,82, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(17,82, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,82, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,83, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,83, '23 %');\n$objWorksheet->setCellValueByColumnAndRow(11,83, '3');\n$objWorksheet->setCellValueByColumnAndRow(12,83, '60 %');\n$objWorksheet->setCellValueByColumnAndRow(13,83, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,83, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(15,83, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,83, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(17,83, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,83, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,88, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,88, '40 %');\n$objWorksheet->setCellValueByColumnAndRow(11,88, '3');\n$objWorksheet->setCellValueByColumnAndRow(12,88, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(13,88, '3');\n$objWorksheet->setCellValueByColumnAndRow(14,88, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(15,88, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,88, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,88, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,88, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,97, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,97, '1');\n$objWorksheet->setCellValueByColumnAndRow(6,97, '16 %');\n$objWorksheet->setCellValueByColumnAndRow(7,97, '2');\n$objWorksheet->setCellValueByColumnAndRow(8,97, '13 %');\n$objWorksheet->setCellValueByColumnAndRow(10,97, '1');\n$objWorksheet->setCellValueByColumnAndRow(11,97, '100 %');\n$objWorksheet->setCellValueByColumnAndRow(12,97, '0');\n$objWorksheet->setCellValueByColumnAndRow(13,97, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,97, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,97, ' %');\n$objWorksheet->setCellValueByColumnAndRow(17,97, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,97, ' %');\n$objWorksheet->setCellValueByColumnAndRow(3,98, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,98, '0');\n$objWorksheet->setCellValueByColumnAndRow(6,98, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(7,98, '1');\n$objWorksheet->setCellValueByColumnAndRow(8,98, '7 %');\n$objWorksheet->setCellValueByColumnAndRow(10,98, '0');\n$objWorksheet->setCellValueByColumnAndRow(11,98, ' %');\n$objWorksheet->setCellValueByColumnAndRow(12,98, '0');\n$objWorksheet->setCellValueByColumnAndRow(13,98, ' %');\n$objWorksheet->setCellValueByColumnAndRow(15,98, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,98, ' %');\n$objWorksheet->setCellValueByColumnAndRow(17,98, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,98, ' %');\n$objWorksheet->setCellValueByColumnAndRow(3,99, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,99, '2');\n$objWorksheet->setCellValueByColumnAndRow(6,99, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(7,99, '5');\n$objWorksheet->setCellValueByColumnAndRow(8,99, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(10,99, '2');\n$objWorksheet->setCellValueByColumnAndRow(11,99, '100 %');\n$objWorksheet->setCellValueByColumnAndRow(12,99, '0');\n$objWorksheet->setCellValueByColumnAndRow(13,99, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,99, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,99, ' %');\n$objWorksheet->setCellValueByColumnAndRow(17,99, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,99, ' %');\n$objWorksheet->setCellValueByColumnAndRow(3,100, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,100, '0');\n$objWorksheet->setCellValueByColumnAndRow(6,100, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(7,100, '2');\n$objWorksheet->setCellValueByColumnAndRow(8,100, '13 %');\n$objWorksheet->setCellValueByColumnAndRow(10,100, '0');\n$objWorksheet->setCellValueByColumnAndRow(11,100, ' %');\n$objWorksheet->setCellValueByColumnAndRow(12,100, '0');\n$objWorksheet->setCellValueByColumnAndRow(13,100, ' %');\n$objWorksheet->setCellValueByColumnAndRow(15,100, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,100, ' %');\n$objWorksheet->setCellValueByColumnAndRow(17,100, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,100, ' %');\n$objWorksheet->setCellValueByColumnAndRow(3,101, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,101, '1');\n$objWorksheet->setCellValueByColumnAndRow(6,101, '16 %');\n$objWorksheet->setCellValueByColumnAndRow(7,101, '2');\n$objWorksheet->setCellValueByColumnAndRow(8,101, '13 %');\n$objWorksheet->setCellValueByColumnAndRow(10,101, '0');\n$objWorksheet->setCellValueByColumnAndRow(11,101, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(12,101, '1');\n$objWorksheet->setCellValueByColumnAndRow(13,101, '100 %');\n$objWorksheet->setCellValueByColumnAndRow(15,101, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,101, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,101, '1');\n$objWorksheet->setCellValueByColumnAndRow(18,101, '100 %');\n$objWorksheet->setCellValueByColumnAndRow(3,102, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,102, '2');\n$objWorksheet->setCellValueByColumnAndRow(6,102, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(7,102, '3');\n$objWorksheet->setCellValueByColumnAndRow(8,102, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(10,102, '0');\n$objWorksheet->setCellValueByColumnAndRow(11,102, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(12,102, '1');\n$objWorksheet->setCellValueByColumnAndRow(13,102, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(15,102, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,102, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,102, '1');\n$objWorksheet->setCellValueByColumnAndRow(18,102, '100 %');\n$objWorksheet->setCellValueByColumnAndRow(3,103, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,103, '3');\n$objWorksheet->setCellValueByColumnAndRow(6,103, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(7,103, '4');\n$objWorksheet->setCellValueByColumnAndRow(8,103, '27 %');\n$objWorksheet->setCellValueByColumnAndRow(10,103, '0');\n$objWorksheet->setCellValueByColumnAndRow(11,103, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(12,103, '2');\n$objWorksheet->setCellValueByColumnAndRow(13,103, '67 %');\n$objWorksheet->setCellValueByColumnAndRow(15,103, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,103, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,103, '2');\n$objWorksheet->setCellValueByColumnAndRow(18,103, '100 %');\n$objWorksheet->setCellValueByColumnAndRow(3,104, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,104, '0');\n$objWorksheet->setCellValueByColumnAndRow(6,104, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(7,104, '0');\n$objWorksheet->setCellValueByColumnAndRow(8,104, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(10,104, '0');\n$objWorksheet->setCellValueByColumnAndRow(11,104, ' %');\n$objWorksheet->setCellValueByColumnAndRow(12,104, '0');\n$objWorksheet->setCellValueByColumnAndRow(13,104, ' %');\n$objWorksheet->setCellValueByColumnAndRow(15,104, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,104, ' %');\n$objWorksheet->setCellValueByColumnAndRow(17,104, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,104, ' %');\n$objWorksheet->setCellValueByColumnAndRow(3,112, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,112, '69 %');\n$objWorksheet->setCellValueByColumnAndRow(11,112, '3');\n$objWorksheet->setCellValueByColumnAndRow(12,112, '60 %');\n$objWorksheet->setCellValueByColumnAndRow(13,112, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,112, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(15,112, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,112, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(17,112, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,112, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,113, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,113, '79 %');\n$objWorksheet->setCellValueByColumnAndRow(11,113, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,113, '80 %');\n$objWorksheet->setCellValueByColumnAndRow(13,113, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,113, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,113, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,113, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(17,113, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,113, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,114, '4');\n$objWorksheet->setCellValueByColumnAndRow(9,114, '62 %');\n$objWorksheet->setCellValueByColumnAndRow(11,114, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,114, '25 %');\n$objWorksheet->setCellValueByColumnAndRow(13,114, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,114, '25 %');\n$objWorksheet->setCellValueByColumnAndRow(15,114, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,114, '25 %');\n$objWorksheet->setCellValueByColumnAndRow(17,114, '1');\n$objWorksheet->setCellValueByColumnAndRow(18,114, '25 %');\n$objWorksheet->setCellValueByColumnAndRow(3,115, '4');\n$objWorksheet->setCellValueByColumnAndRow(9,115, '62 %');\n$objWorksheet->setCellValueByColumnAndRow(11,115, '2');\n$objWorksheet->setCellValueByColumnAndRow(12,115, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(13,115, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,115, '25 %');\n$objWorksheet->setCellValueByColumnAndRow(15,115, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,115, '25 %');\n$objWorksheet->setCellValueByColumnAndRow(17,115, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,115, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,116, '4');\n$objWorksheet->setCellValueByColumnAndRow(9,116, '69 %');\n$objWorksheet->setCellValueByColumnAndRow(11,116, '2');\n$objWorksheet->setCellValueByColumnAndRow(12,116, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(13,116, '2');\n$objWorksheet->setCellValueByColumnAndRow(14,116, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(15,116, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,116, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,116, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,116, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,121, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,121, '71 %');\n$objWorksheet->setCellValueByColumnAndRow(11,121, '3');\n$objWorksheet->setCellValueByColumnAndRow(12,121, '60 %');\n$objWorksheet->setCellValueByColumnAndRow(13,121, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,121, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,121, '2');\n$objWorksheet->setCellValueByColumnAndRow(16,121, '40 %');\n$objWorksheet->setCellValueByColumnAndRow(17,121, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,121, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,122, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,122, '57 %');\n$objWorksheet->setCellValueByColumnAndRow(11,122, '2');\n$objWorksheet->setCellValueByColumnAndRow(12,122, '40 %');\n$objWorksheet->setCellValueByColumnAndRow(13,122, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,122, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,122, '2');\n$objWorksheet->setCellValueByColumnAndRow(16,122, '40 %');\n$objWorksheet->setCellValueByColumnAndRow(17,122, '1');\n$objWorksheet->setCellValueByColumnAndRow(18,122, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(3,123, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,123, '57 %');\n$objWorksheet->setCellValueByColumnAndRow(11,123, '2');\n$objWorksheet->setCellValueByColumnAndRow(12,123, '40 %');\n$objWorksheet->setCellValueByColumnAndRow(13,123, '2');\n$objWorksheet->setCellValueByColumnAndRow(14,123, '40 %');\n$objWorksheet->setCellValueByColumnAndRow(15,123, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,123, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(17,123, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,123, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,124, '2');\n$objWorksheet->setCellValueByColumnAndRow(9,124, '88 %');\n$objWorksheet->setCellValueByColumnAndRow(11,124, '2');\n$objWorksheet->setCellValueByColumnAndRow(12,124, '100 %');\n$objWorksheet->setCellValueByColumnAndRow(13,124, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,124, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,124, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,124, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,124, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,124, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,125, '1');\n$objWorksheet->setCellValueByColumnAndRow(9,125, '63 %');\n$objWorksheet->setCellValueByColumnAndRow(11,125, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,125, '100 %');\n$objWorksheet->setCellValueByColumnAndRow(13,125, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,125, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,125, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,125, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,125, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,125, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,132, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,132, '60 %');\n$objWorksheet->setCellValueByColumnAndRow(11,132, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,132, '67 %');\n$objWorksheet->setCellValueByColumnAndRow(13,132, '2');\n$objWorksheet->setCellValueByColumnAndRow(14,132, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(15,132, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,132, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,132, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,132, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,133, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,133, '87 %');\n$objWorksheet->setCellValueByColumnAndRow(11,133, '5');\n$objWorksheet->setCellValueByColumnAndRow(12,133, '83 %');\n$objWorksheet->setCellValueByColumnAndRow(13,133, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,133, '17 %');\n$objWorksheet->setCellValueByColumnAndRow(15,133, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,133, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,133, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,133, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,134, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,134, '86 %');\n$objWorksheet->setCellValueByColumnAndRow(11,134, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,134, '80 %');\n$objWorksheet->setCellValueByColumnAndRow(13,134, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,134, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,134, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,134, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(17,134, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,134, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,135, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,135, '86 %');\n$objWorksheet->setCellValueByColumnAndRow(11,135, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,135, '80 %');\n$objWorksheet->setCellValueByColumnAndRow(13,135, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,135, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(15,135, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,135, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,135, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,135, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,136, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,136, '86 %');\n$objWorksheet->setCellValueByColumnAndRow(11,136, '5');\n$objWorksheet->setCellValueByColumnAndRow(12,136, '83 %');\n$objWorksheet->setCellValueByColumnAndRow(13,136, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,136, '17 %');\n$objWorksheet->setCellValueByColumnAndRow(15,136, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,136, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,136, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,136, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,142, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,142, '8,7');\n$objWorksheet->setCellValueByColumnAndRow(8,142, '8,9');\n$objWorksheet->setCellValueByColumnAndRow(11,142, '3');\n$objWorksheet->setCellValueByColumnAndRow(12,142, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(13,142, '3');\n$objWorksheet->setCellValueByColumnAndRow(14,142, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(15,142, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,142, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,142, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,142, '0 %');\n$objPHPExcel->setActiveSheetIndexByName('Vitraux');\n$objWorksheet = $objPHPExcel->getSheetByName('Vitraux');\n$objWorksheet->setCellValueByColumnAndRow(0,1, 'AGENCE THIONVILLE');\n$objWorksheet->setCellValueByColumnAndRow(24,1, '17');\n$objWorksheet->setCellValueByColumnAndRow(24,2, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,6, 'Global');\n$objWorksheet->setCellValueByColumnAndRow(7,6, 'AGENCE THIONVILLE');\n$objWorksheet->setCellValueByColumnAndRow(9,6, 'AGENCE FAMECK');\n$objWorksheet->setCellValueByColumnAndRow(11,6, 'AGENCE HAGONDANGE');\n$objWorksheet->setCellValueByColumnAndRow(13,6, 'AGENCE METZ');\n$objWorksheet->setCellValueByColumnAndRow(15,6, 'AGENCE THIONVILLE');\n$objWorksheet->setCellValueByColumnAndRow(5,8, '88,8%');\n$objWorksheet->setCellValueByColumnAndRow(7,8, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,8, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,8, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,8, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,8, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,8, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,8, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,8, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,8, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,10, '93,8%');\n$objWorksheet->setCellValueByColumnAndRow(7,10, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,10, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,10, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,10, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,10, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,10, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,10, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,10, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,10, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,11, '93,7%');\n$objWorksheet->setCellValueByColumnAndRow(7,11, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,11, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,11, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,11, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,11, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,11, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,11, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,11, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,11, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,12, '87,3%');\n$objWorksheet->setCellValueByColumnAndRow(7,12, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(9,12, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,12, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,12, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,12, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,12, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,12, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,12, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,12, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(5,14, '92,5%');\n$objWorksheet->setCellValueByColumnAndRow(7,14, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(9,14, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,14, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,14, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,14, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,14, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,14, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,14, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,14, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(5,15, '95,6%');\n$objWorksheet->setCellValueByColumnAndRow(7,15, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,15, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,15, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,15, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,15, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,15, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,15, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,15, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,15, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,16, '89,9%');\n$objWorksheet->setCellValueByColumnAndRow(7,16, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,16, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,16, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,16, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,16, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,16, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,16, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,16, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,16, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,18, '86,9%');\n$objWorksheet->setCellValueByColumnAndRow(7,18, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,18, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,18, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,18, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,18, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,18, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,18, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,18, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,18, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,20, '86,1%');\n$objWorksheet->setCellValueByColumnAndRow(7,20, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,20, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,20, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,20, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,20, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,20, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,20, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,20, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,20, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,21, '82,5%');\n$objWorksheet->setCellValueByColumnAndRow(7,21, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,21, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,21, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,21, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,21, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,21, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,21, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,21, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,21, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,22, '76,8%');\n$objWorksheet->setCellValueByColumnAndRow(7,22, '50,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,22, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,22, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,22, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,22, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,22, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,22, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,22, '4');\n$objWorksheet->setCellValueByColumnAndRow(16,22, '50,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,23, '79,7%');\n$objWorksheet->setCellValueByColumnAndRow(7,23, '75,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,23, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,23, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,23, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,23, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,23, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,23, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,23, '4');\n$objWorksheet->setCellValueByColumnAndRow(16,23, '75,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,24, '81,5%');\n$objWorksheet->setCellValueByColumnAndRow(7,24, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,24, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,24, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,24, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,24, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,24, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,24, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,24, '4');\n$objWorksheet->setCellValueByColumnAndRow(16,24, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,25, '81,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,25, '60,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,25, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,25, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,25, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,25, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,25, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,25, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,25, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,25, '60,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,26, '80,2%');\n$objWorksheet->setCellValueByColumnAndRow(7,26, '40,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,26, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,26, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,26, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,26, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,26, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,26, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,26, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,26, '40,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,27, '88,7%');\n$objWorksheet->setCellValueByColumnAndRow(7,27, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,27, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,27, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,27, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,27, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,27, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,27, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,27, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,27, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,28, '93,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,28, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,28, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,28, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,28, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,28, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,28, '5');\n$objWorksheet->setCellValueByColumnAndRow(14,28, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,28, '2');\n$objWorksheet->setCellValueByColumnAndRow(16,28, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,29, '85,7%');\n$objWorksheet->setCellValueByColumnAndRow(7,29, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,29, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,29, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,29, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,29, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,29, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,29, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,29, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,29, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,31, '93,1%');\n$objWorksheet->setCellValueByColumnAndRow(7,31, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,31, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,31, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,31, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,31, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,31, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,31, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,31, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,31, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,32, '91,4%');\n$objWorksheet->setCellValueByColumnAndRow(7,32, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,32, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,32, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,32, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,32, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,32, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,32, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,32, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,32, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,33, '93,1%');\n$objWorksheet->setCellValueByColumnAndRow(7,33, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,33, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,33, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,33, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,33, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,33, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,33, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,33, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,33, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,34, '95,5%');\n$objWorksheet->setCellValueByColumnAndRow(7,34, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,34, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,34, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,34, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,34, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,34, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,34, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,34, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,34, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,35, '93,7%');\n$objWorksheet->setCellValueByColumnAndRow(7,35, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,35, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,35, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,35, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,35, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,35, '5');\n$objWorksheet->setCellValueByColumnAndRow(14,35, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,35, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,35, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,36, '89,5%');\n$objWorksheet->setCellValueByColumnAndRow(7,36, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,36, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,36, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,36, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,36, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,36, '5');\n$objWorksheet->setCellValueByColumnAndRow(14,36, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,36, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,36, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,44, '44,6%');\n$objWorksheet->setCellValueByColumnAndRow(7,44, '50,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,44, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,44, '50,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,44, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,44, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,44, '3');\n$objWorksheet->setCellValueByColumnAndRow(14,44, '33,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,44, '4');\n$objWorksheet->setCellValueByColumnAndRow(16,44, '50,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,46, '90,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,46, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(9,46, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,46, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,46, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,46, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,46, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,46, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,46, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,46, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(5,47, '65,8%');\n$objWorksheet->setCellValueByColumnAndRow(7,47, '66,7 %');\n$objWorksheet->setCellValueByColumnAndRow(9,47, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,47, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,47, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,47, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,47, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,47, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,47, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,47, '66,7 %');\n$objWorksheet->setCellValueByColumnAndRow(5,48, '68,3%');\n$objWorksheet->setCellValueByColumnAndRow(7,48, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(9,48, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,48, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,48, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,48, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,48, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,48, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,48, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,48, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(5,49, '91,9%');\n$objWorksheet->setCellValueByColumnAndRow(7,49, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,49, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,49, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,49, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,49, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,49, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,49, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,49, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,49, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,50, '77,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,50, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,50, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,50, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,50, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,50, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,50, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,50, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,50, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,50, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,51, '74,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,51, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,51, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,51, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,51, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,51, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,51, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,51, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,51, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,51, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,52, '96,8%');\n$objWorksheet->setCellValueByColumnAndRow(7,52, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,52, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,52, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,52, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,52, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,52, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,52, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,52, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,52, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,53, '74,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,53, '66,7 %');\n$objWorksheet->setCellValueByColumnAndRow(9,53, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,53, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,53, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,53, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,53, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,53, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,53, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,53, '66,7 %');\n$objWorksheet->setCellValueByColumnAndRow(5,58, '73,8%');\n$objWorksheet->setCellValueByColumnAndRow(7,58, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,58, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,58, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,58, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,58, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,58, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,58, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,58, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,58, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,59, '80,9%');\n$objWorksheet->setCellValueByColumnAndRow(7,59, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,59, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,59, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,59, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,59, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,59, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,59, '66,7 %');\n$objWorksheet->setCellValueByColumnAndRow(15,59, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,59, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,60, '75,9%');\n$objWorksheet->setCellValueByColumnAndRow(7,60, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,60, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,60, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,60, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,60, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,60, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,60, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,60, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,60, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,61, '82,1%');\n$objWorksheet->setCellValueByColumnAndRow(7,61, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,61, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,61, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,61, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,61, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,61, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,61, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,61, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,61, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,62, '83,2%');\n$objWorksheet->setCellValueByColumnAndRow(7,62, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(9,62, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,62, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,62, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,62, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,62, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,62, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,62, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,62, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(5,63, '86,5%');\n$objWorksheet->setCellValueByColumnAndRow(7,63, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,63, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,63, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,63, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,63, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,63, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,63, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,63, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,63, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,64, '78,6%');\n$objWorksheet->setCellValueByColumnAndRow(7,64, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,64, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,64, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,64, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,64, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,64, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,64, '66,7 %');\n$objWorksheet->setCellValueByColumnAndRow(15,64, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,64, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,65, '76,9%');\n$objWorksheet->setCellValueByColumnAndRow(7,65, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,65, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,65, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,65, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,65, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,65, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,65, '50,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,65, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,65, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,71, '83,3%');\n$objWorksheet->setCellValueByColumnAndRow(7,71, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(9,71, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,71, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,71, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,71, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,71, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,71, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,71, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,71, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(5,72, '22,2%');\n$objWorksheet->setCellValueByColumnAndRow(7,72, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,72, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,72, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,72, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,72, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,72, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,72, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,72, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,72, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,73, '100,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,73, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(9,73, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,73, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,73, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,73, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,73, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,73, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,73, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,73, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(5,74, '83,8%');\n$objWorksheet->setCellValueByColumnAndRow(7,74, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,74, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,74, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,74, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,74, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,74, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,74, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,74, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,74, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,75, '32,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,75, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(9,75, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,75, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,75, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,75, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,75, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,75, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,75, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,75, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(5,76, '100,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,76, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(9,76, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,76, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,76, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,76, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,76, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,76, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,76, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,76, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(5,77, '73,5%');\n$objWorksheet->setCellValueByColumnAndRow(7,77, '60,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,77, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,77, '50,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,77, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,77, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,77, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,77, '66,7 %');\n$objWorksheet->setCellValueByColumnAndRow(15,77, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,77, '60,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,78, '17,9%');\n$objWorksheet->setCellValueByColumnAndRow(7,78, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,78, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,78, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,78, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,78, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,78, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,78, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,78, '2');\n$objWorksheet->setCellValueByColumnAndRow(16,78, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,79, '85,7%');\n$objWorksheet->setCellValueByColumnAndRow(7,79, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(9,79, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,79, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,79, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,79, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,79, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,79, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,79, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,79, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(5,80, '69,4%');\n$objWorksheet->setCellValueByColumnAndRow(7,80, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,80, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,80, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,80, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,80, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,80, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,80, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,80, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,80, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,81, '66,7%');\n$objWorksheet->setCellValueByColumnAndRow(7,81, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(9,81, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,81, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,81, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,81, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,81, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,81, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,81, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,81, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(5,82, '88,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,82, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(9,82, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,82, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,82, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,82, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,82, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,82, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,82, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,82, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(5,83, '80,6%');\n$objWorksheet->setCellValueByColumnAndRow(7,83, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(9,83, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,83, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,83, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,83, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,83, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,83, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,83, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,83, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(5,84, '53,6%');\n$objWorksheet->setCellValueByColumnAndRow(7,84, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,84, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,84, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,84, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,84, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,84, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,84, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,84, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,84, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,85, '92,3%');\n$objWorksheet->setCellValueByColumnAndRow(7,85, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,85, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,85, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,85, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,85, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,85, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,85, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,85, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,85, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,86, '87,2%');\n$objWorksheet->setCellValueByColumnAndRow(7,86, '60,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,86, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,86, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,86, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,86, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,86, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,86, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,86, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,86, '60,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,87, '77,8%');\n$objWorksheet->setCellValueByColumnAndRow(7,87, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,87, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,87, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,87, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,87, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,87, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,87, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,87, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,87, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,88, '92,3%');\n$objWorksheet->setCellValueByColumnAndRow(7,88, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,88, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,88, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,88, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,88, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,88, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,88, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,88, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,88, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,89, '76,8%');\n$objWorksheet->setCellValueByColumnAndRow(7,89, '40,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,89, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,89, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,89, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,89, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,89, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,89, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,89, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,89, '40,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,90, '48,5%');\n$objWorksheet->setCellValueByColumnAndRow(7,90, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,90, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,90, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,90, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,90, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,90, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,90, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,90, '2');\n$objWorksheet->setCellValueByColumnAndRow(16,90, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,91, '100,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,91, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,91, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,91, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,91, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,91, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,91, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,91, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,91, '2');\n$objWorksheet->setCellValueByColumnAndRow(16,91, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,92, '76,7%');\n$objWorksheet->setCellValueByColumnAndRow(7,92, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,92, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,92, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,92, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,92, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,92, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,92, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,92, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,92, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,93, '42,9%');\n$objWorksheet->setCellValueByColumnAndRow(7,93, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(9,93, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,93, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,93, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,93, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,93, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,93, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,93, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,93, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(5,94, '90,9%');\n$objWorksheet->setCellValueByColumnAndRow(7,94, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(9,94, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,94, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,94, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,94, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,94, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,94, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,94, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,94, 'n.c.');\n$objWriter=PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');\n$objWriter->setIncludeCharts(TRUE);\n$objWriter->save('/Users/petervanvliet/Desktop/D\u00e9veloppement/VMv3 4DV14/batigere/fichiers/restitsne/NE_UTHI_01012015_31012015.xls');\necho('/Users/petervanvliet/Desktop/D\u00e9veloppement/VMv3 4DV14/batigere/fichiers/restitsne/NE_UTHI_01012015_31012015.xls');\n?>\n. Hello Mark,\n\nWhilst writing this message, I thought about something\u2026 \nChanged Excel5 files for Excel 2007\u2026\nAnd then it works\u2026\n\nSo I guess it's the Excel5 reader that doesn't preserve graphics!\n\nIf that can help\n\nRegards\n\nPeter\n. Or the writer\u2026 only\nI tried opening an Excel 2007 file, and writing an Excel 5, graphs are not there\u2026\n. Hello Mark,\n\nThank you for your quick answer.\n\nHere is the php script I use. As you can see, I changed the readers and writers in order to load and save graphs, but that doesn't change, they don't load\u2026\n\nFor the style, these are conditional styles. So i guess i have to investigate a bit more to set them manually.\n\nThanks again\n\nPeter\n\n<?php\nerror_reporting(E_ALL);\nini_set('display_errors', TRUE);\nini_set('display_startup_errors', TRUE);\ndate_default_timezone_set('Europe/Paris');\nrequire_once '/Users/petervanvliet/Desktop/D\u00e9veloppement/VMv3 4DV14/Resources/PHPExcel/PHPExcel.php';\n$objReader = PHPExcel_IOFactory::createReaderForFile('/Users/petervanvliet/Desktop/D\u00e9veloppement/VMv3 4DV14/DossierWeb/batigere/NERESTITUTIONG2.xls');\n$objReader->setIncludeCharts(TRUE);\n$objPHPExcel = $objReader->load('/Users/petervanvliet/Desktop/D\u00e9veloppement/VMv3 4DV14/DossierWeb/batigere/NERESTITUTIONG2.xls');\n$objPHPExcel->setActiveSheetIndex(0);\nPHPExcel_Cell::setValueBinder(new PHPExcel_Cell_AdvancedValueBinder());\n$format_date=array('numberformat'=>array('code'=>'DD/MM/YYYY',));\n$objWorksheet = $objPHPExcel->getActiveSheet();\n$objWorksheet->getStyle('C146')->getNumberFormat()->setFormatCode('#####0');\n$objWorksheet->getCell('C146')->setValueExplicit('16', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('C147')->getNumberFormat()->setFormatCode('#####0');\n$objWorksheet->getCell('C147')->setValueExplicit('1', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('C149')->getNumberFormat()->setFormatCode('#####0');\n$objWorksheet->getCell('C149')->setValueExplicit('6', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('C150')->getNumberFormat()->setFormatCode('#####0');\n$objWorksheet->getCell('C150')->setValueExplicit('0', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(0,1, 'AGENCE THIONVILLE');\n$objWorksheet->setCellValueByColumnAndRow(9,1, 'Enqu\u00eate Nouveaux Entrants - Janvier 2015');\n$objWorksheet->setCellValueByColumnAndRow(18,1, '17');\n$objWorksheet->setCellValueByColumnAndRow(18,2, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,7, 'Votre Agence');\n$objWorksheet->setCellValueByColumnAndRow(8,7, 'Soci\u00e9t\u00e9');\n$objWorksheet->setCellValueByColumnAndRow(3,8, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,8, '8,5');\n$objWorksheet->setCellValueByColumnAndRow(8,8, '8,5');\n$objWorksheet->setCellValueByColumnAndRow(11,8, '3');\n$objWorksheet->setCellValueByColumnAndRow(12,8, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(13,8, '3');\n$objWorksheet->setCellValueByColumnAndRow(14,8, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(15,8, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,8, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,8, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,8, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,15, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,15, '73 %');\n$objWorksheet->setCellValueByColumnAndRow(11,15, '3');\n$objWorksheet->setCellValueByColumnAndRow(12,15, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(13,15, '3');\n$objWorksheet->setCellValueByColumnAndRow(14,15, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(15,15, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,15, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,15, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,15, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,16, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,16, '80 %');\n$objWorksheet->setCellValueByColumnAndRow(11,16, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,16, '67 %');\n$objWorksheet->setCellValueByColumnAndRow(13,16, '2');\n$objWorksheet->setCellValueByColumnAndRow(14,16, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(15,16, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,16, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,16, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,16, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,17, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,17, '73 %');\n$objWorksheet->setCellValueByColumnAndRow(11,17, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,17, '67 %');\n$objWorksheet->setCellValueByColumnAndRow(13,17, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,17, '17 %');\n$objWorksheet->setCellValueByColumnAndRow(15,17, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,17, '17 %');\n$objWorksheet->setCellValueByColumnAndRow(17,17, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,17, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,24, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,24, '60 %');\n$objWorksheet->setCellValueByColumnAndRow(11,24, '2');\n$objWorksheet->setCellValueByColumnAndRow(12,24, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(13,24, '3');\n$objWorksheet->setCellValueByColumnAndRow(14,24, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(15,24, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,24, '17 %');\n$objWorksheet->setCellValueByColumnAndRow(17,24, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,24, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,25, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,25, '60 %');\n$objWorksheet->setCellValueByColumnAndRow(11,25, '2');\n$objWorksheet->setCellValueByColumnAndRow(12,25, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(13,25, '4');\n$objWorksheet->setCellValueByColumnAndRow(14,25, '67 %');\n$objWorksheet->setCellValueByColumnAndRow(15,25, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,25, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,25, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,25, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,26, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,26, '53 %');\n$objWorksheet->setCellValueByColumnAndRow(11,26, '2');\n$objWorksheet->setCellValueByColumnAndRow(12,26, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(13,26, '4');\n$objWorksheet->setCellValueByColumnAndRow(14,26, '67 %');\n$objWorksheet->setCellValueByColumnAndRow(15,26, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,26, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,26, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,26, '0 %');\n$objWorksheet->getStyle('V32')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V32')->setValueExplicit('0.5000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W32')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W32')->setValueExplicit('0.5000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('X32')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('X32')->setValueExplicit('0.0000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('V33')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V33')->setValueExplicit('0.5000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W33')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W33')->setValueExplicit('0.3000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('X33')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('X33')->setValueExplicit('0.2000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(7,36, '10');\n$objWorksheet->getStyle('V41')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V41')->setValueExplicit('0.8333', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W41')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W41')->setValueExplicit('0.1667', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(2,46, '6');\n$objWorksheet->getStyle('V42')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V42')->setValueExplicit('0.9333', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W42')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W42')->setValueExplicit('0.0667', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('V44')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V44')->setValueExplicit('1.0000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W44')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W44')->setValueExplicit('0.0000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(12,46, '5');\n$objWorksheet->getStyle('V45')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V45')->setValueExplicit('1.0000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W45')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W45')->setValueExplicit('0.0000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('V48')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V48')->setValueExplicit('0.6667', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W48')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W48')->setValueExplicit('0.3333', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(2,53, '6');\n$objWorksheet->getStyle('V49')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V49')->setValueExplicit('0.7333', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W49')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W49')->setValueExplicit('0.2667', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('V51')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V51')->setValueExplicit('0.8000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W51')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W51')->setValueExplicit('0.2000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(12,53, '5');\n$objWorksheet->getStyle('V52')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V52')->setValueExplicit('0.8571', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W52')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W52')->setValueExplicit('0.1429', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('V55')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V55')->setValueExplicit('0.8333', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W55')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W55')->setValueExplicit('0.1667', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(2,60, '6');\n$objWorksheet->getStyle('V56')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V56')->setValueExplicit('0.9333', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W56')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W56')->setValueExplicit('0.0667', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('V58')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V58')->setValueExplicit('0.8000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W58')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W58')->setValueExplicit('0.2000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(12,60, '5');\n$objWorksheet->getStyle('V59')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V59')->setValueExplicit('0.8571', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W59')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W59')->setValueExplicit('0.1429', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('V62')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V62')->setValueExplicit('1.0000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W62')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W62')->setValueExplicit('0.0000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(2,67, '6');\n$objWorksheet->getStyle('V63')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V63')->setValueExplicit('1.0000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W63')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W63')->setValueExplicit('0.0000', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('V65')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V65')->setValueExplicit('0.6667', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W65')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W65')->setValueExplicit('0.3333', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(12,67, '6');\n$objWorksheet->getStyle('V66')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('V66')->setValueExplicit('0.7857', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->getStyle('W66')->getNumberFormat()->setFormatCode('%');\n$objWorksheet->getCell('W66')->setValueExplicit('0.2143', PHPExcel_Cell_DataType::TYPE_NUMERIC);\n$objWorksheet->setCellValueByColumnAndRow(3,72, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,72, '53 %');\n$objWorksheet->setCellValueByColumnAndRow(11,72, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,72, '67 %');\n$objWorksheet->setCellValueByColumnAndRow(13,72, '2');\n$objWorksheet->setCellValueByColumnAndRow(14,72, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(15,72, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,72, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,72, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,72, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,73, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,73, '53 %');\n$objWorksheet->setCellValueByColumnAndRow(11,73, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,73, '67 %');\n$objWorksheet->setCellValueByColumnAndRow(13,73, '2');\n$objWorksheet->setCellValueByColumnAndRow(14,73, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(15,73, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,73, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,73, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,73, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,74, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,74, '53 %');\n$objWorksheet->setCellValueByColumnAndRow(11,74, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,74, '67 %');\n$objWorksheet->setCellValueByColumnAndRow(13,74, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,74, '17 %');\n$objWorksheet->setCellValueByColumnAndRow(15,74, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,74, '17 %');\n$objWorksheet->setCellValueByColumnAndRow(17,74, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,74, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,75, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,75, '53 %');\n$objWorksheet->setCellValueByColumnAndRow(11,75, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,75, '67 %');\n$objWorksheet->setCellValueByColumnAndRow(13,75, '2');\n$objWorksheet->setCellValueByColumnAndRow(14,75, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(15,75, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,75, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,75, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,75, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,80, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,80, '46 %');\n$objWorksheet->setCellValueByColumnAndRow(11,80, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,80, '80 %');\n$objWorksheet->setCellValueByColumnAndRow(13,80, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,80, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(15,80, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,80, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,80, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,80, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,81, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,81, '23 %');\n$objWorksheet->setCellValueByColumnAndRow(11,81, '2');\n$objWorksheet->setCellValueByColumnAndRow(12,81, '40 %');\n$objWorksheet->setCellValueByColumnAndRow(13,81, '2');\n$objWorksheet->setCellValueByColumnAndRow(14,81, '40 %');\n$objWorksheet->setCellValueByColumnAndRow(15,81, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,81, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,81, '1');\n$objWorksheet->setCellValueByColumnAndRow(18,81, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(3,82, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,82, '38 %');\n$objWorksheet->setCellValueByColumnAndRow(11,82, '2');\n$objWorksheet->setCellValueByColumnAndRow(12,82, '40 %');\n$objWorksheet->setCellValueByColumnAndRow(13,82, '2');\n$objWorksheet->setCellValueByColumnAndRow(14,82, '40 %');\n$objWorksheet->setCellValueByColumnAndRow(15,82, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,82, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(17,82, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,82, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,83, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,83, '23 %');\n$objWorksheet->setCellValueByColumnAndRow(11,83, '3');\n$objWorksheet->setCellValueByColumnAndRow(12,83, '60 %');\n$objWorksheet->setCellValueByColumnAndRow(13,83, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,83, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(15,83, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,83, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(17,83, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,83, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,88, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,88, '40 %');\n$objWorksheet->setCellValueByColumnAndRow(11,88, '3');\n$objWorksheet->setCellValueByColumnAndRow(12,88, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(13,88, '3');\n$objWorksheet->setCellValueByColumnAndRow(14,88, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(15,88, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,88, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,88, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,88, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,97, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,97, '1');\n$objWorksheet->setCellValueByColumnAndRow(6,97, '16 %');\n$objWorksheet->setCellValueByColumnAndRow(7,97, '2');\n$objWorksheet->setCellValueByColumnAndRow(8,97, '13 %');\n$objWorksheet->setCellValueByColumnAndRow(10,97, '1');\n$objWorksheet->setCellValueByColumnAndRow(11,97, '100 %');\n$objWorksheet->setCellValueByColumnAndRow(12,97, '0');\n$objWorksheet->setCellValueByColumnAndRow(13,97, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,97, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,97, ' %');\n$objWorksheet->setCellValueByColumnAndRow(17,97, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,97, ' %');\n$objWorksheet->setCellValueByColumnAndRow(3,98, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,98, '0');\n$objWorksheet->setCellValueByColumnAndRow(6,98, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(7,98, '1');\n$objWorksheet->setCellValueByColumnAndRow(8,98, '7 %');\n$objWorksheet->setCellValueByColumnAndRow(10,98, '0');\n$objWorksheet->setCellValueByColumnAndRow(11,98, ' %');\n$objWorksheet->setCellValueByColumnAndRow(12,98, '0');\n$objWorksheet->setCellValueByColumnAndRow(13,98, ' %');\n$objWorksheet->setCellValueByColumnAndRow(15,98, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,98, ' %');\n$objWorksheet->setCellValueByColumnAndRow(17,98, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,98, ' %');\n$objWorksheet->setCellValueByColumnAndRow(3,99, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,99, '2');\n$objWorksheet->setCellValueByColumnAndRow(6,99, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(7,99, '5');\n$objWorksheet->setCellValueByColumnAndRow(8,99, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(10,99, '2');\n$objWorksheet->setCellValueByColumnAndRow(11,99, '100 %');\n$objWorksheet->setCellValueByColumnAndRow(12,99, '0');\n$objWorksheet->setCellValueByColumnAndRow(13,99, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,99, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,99, ' %');\n$objWorksheet->setCellValueByColumnAndRow(17,99, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,99, ' %');\n$objWorksheet->setCellValueByColumnAndRow(3,100, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,100, '0');\n$objWorksheet->setCellValueByColumnAndRow(6,100, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(7,100, '2');\n$objWorksheet->setCellValueByColumnAndRow(8,100, '13 %');\n$objWorksheet->setCellValueByColumnAndRow(10,100, '0');\n$objWorksheet->setCellValueByColumnAndRow(11,100, ' %');\n$objWorksheet->setCellValueByColumnAndRow(12,100, '0');\n$objWorksheet->setCellValueByColumnAndRow(13,100, ' %');\n$objWorksheet->setCellValueByColumnAndRow(15,100, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,100, ' %');\n$objWorksheet->setCellValueByColumnAndRow(17,100, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,100, ' %');\n$objWorksheet->setCellValueByColumnAndRow(3,101, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,101, '1');\n$objWorksheet->setCellValueByColumnAndRow(6,101, '16 %');\n$objWorksheet->setCellValueByColumnAndRow(7,101, '2');\n$objWorksheet->setCellValueByColumnAndRow(8,101, '13 %');\n$objWorksheet->setCellValueByColumnAndRow(10,101, '0');\n$objWorksheet->setCellValueByColumnAndRow(11,101, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(12,101, '1');\n$objWorksheet->setCellValueByColumnAndRow(13,101, '100 %');\n$objWorksheet->setCellValueByColumnAndRow(15,101, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,101, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,101, '1');\n$objWorksheet->setCellValueByColumnAndRow(18,101, '100 %');\n$objWorksheet->setCellValueByColumnAndRow(3,102, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,102, '2');\n$objWorksheet->setCellValueByColumnAndRow(6,102, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(7,102, '3');\n$objWorksheet->setCellValueByColumnAndRow(8,102, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(10,102, '0');\n$objWorksheet->setCellValueByColumnAndRow(11,102, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(12,102, '1');\n$objWorksheet->setCellValueByColumnAndRow(13,102, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(15,102, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,102, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,102, '1');\n$objWorksheet->setCellValueByColumnAndRow(18,102, '100 %');\n$objWorksheet->setCellValueByColumnAndRow(3,103, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,103, '3');\n$objWorksheet->setCellValueByColumnAndRow(6,103, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(7,103, '4');\n$objWorksheet->setCellValueByColumnAndRow(8,103, '27 %');\n$objWorksheet->setCellValueByColumnAndRow(10,103, '0');\n$objWorksheet->setCellValueByColumnAndRow(11,103, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(12,103, '2');\n$objWorksheet->setCellValueByColumnAndRow(13,103, '67 %');\n$objWorksheet->setCellValueByColumnAndRow(15,103, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,103, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,103, '2');\n$objWorksheet->setCellValueByColumnAndRow(18,103, '100 %');\n$objWorksheet->setCellValueByColumnAndRow(3,104, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,104, '0');\n$objWorksheet->setCellValueByColumnAndRow(6,104, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(7,104, '0');\n$objWorksheet->setCellValueByColumnAndRow(8,104, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(10,104, '0');\n$objWorksheet->setCellValueByColumnAndRow(11,104, ' %');\n$objWorksheet->setCellValueByColumnAndRow(12,104, '0');\n$objWorksheet->setCellValueByColumnAndRow(13,104, ' %');\n$objWorksheet->setCellValueByColumnAndRow(15,104, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,104, ' %');\n$objWorksheet->setCellValueByColumnAndRow(17,104, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,104, ' %');\n$objWorksheet->setCellValueByColumnAndRow(3,112, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,112, '69 %');\n$objWorksheet->setCellValueByColumnAndRow(11,112, '3');\n$objWorksheet->setCellValueByColumnAndRow(12,112, '60 %');\n$objWorksheet->setCellValueByColumnAndRow(13,112, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,112, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(15,112, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,112, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(17,112, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,112, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,113, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,113, '79 %');\n$objWorksheet->setCellValueByColumnAndRow(11,113, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,113, '80 %');\n$objWorksheet->setCellValueByColumnAndRow(13,113, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,113, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,113, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,113, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(17,113, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,113, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,114, '4');\n$objWorksheet->setCellValueByColumnAndRow(9,114, '62 %');\n$objWorksheet->setCellValueByColumnAndRow(11,114, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,114, '25 %');\n$objWorksheet->setCellValueByColumnAndRow(13,114, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,114, '25 %');\n$objWorksheet->setCellValueByColumnAndRow(15,114, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,114, '25 %');\n$objWorksheet->setCellValueByColumnAndRow(17,114, '1');\n$objWorksheet->setCellValueByColumnAndRow(18,114, '25 %');\n$objWorksheet->setCellValueByColumnAndRow(3,115, '4');\n$objWorksheet->setCellValueByColumnAndRow(9,115, '62 %');\n$objWorksheet->setCellValueByColumnAndRow(11,115, '2');\n$objWorksheet->setCellValueByColumnAndRow(12,115, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(13,115, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,115, '25 %');\n$objWorksheet->setCellValueByColumnAndRow(15,115, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,115, '25 %');\n$objWorksheet->setCellValueByColumnAndRow(17,115, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,115, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,116, '4');\n$objWorksheet->setCellValueByColumnAndRow(9,116, '69 %');\n$objWorksheet->setCellValueByColumnAndRow(11,116, '2');\n$objWorksheet->setCellValueByColumnAndRow(12,116, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(13,116, '2');\n$objWorksheet->setCellValueByColumnAndRow(14,116, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(15,116, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,116, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,116, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,116, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,121, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,121, '71 %');\n$objWorksheet->setCellValueByColumnAndRow(11,121, '3');\n$objWorksheet->setCellValueByColumnAndRow(12,121, '60 %');\n$objWorksheet->setCellValueByColumnAndRow(13,121, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,121, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,121, '2');\n$objWorksheet->setCellValueByColumnAndRow(16,121, '40 %');\n$objWorksheet->setCellValueByColumnAndRow(17,121, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,121, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,122, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,122, '57 %');\n$objWorksheet->setCellValueByColumnAndRow(11,122, '2');\n$objWorksheet->setCellValueByColumnAndRow(12,122, '40 %');\n$objWorksheet->setCellValueByColumnAndRow(13,122, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,122, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,122, '2');\n$objWorksheet->setCellValueByColumnAndRow(16,122, '40 %');\n$objWorksheet->setCellValueByColumnAndRow(17,122, '1');\n$objWorksheet->setCellValueByColumnAndRow(18,122, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(3,123, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,123, '57 %');\n$objWorksheet->setCellValueByColumnAndRow(11,123, '2');\n$objWorksheet->setCellValueByColumnAndRow(12,123, '40 %');\n$objWorksheet->setCellValueByColumnAndRow(13,123, '2');\n$objWorksheet->setCellValueByColumnAndRow(14,123, '40 %');\n$objWorksheet->setCellValueByColumnAndRow(15,123, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,123, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(17,123, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,123, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,124, '2');\n$objWorksheet->setCellValueByColumnAndRow(9,124, '88 %');\n$objWorksheet->setCellValueByColumnAndRow(11,124, '2');\n$objWorksheet->setCellValueByColumnAndRow(12,124, '100 %');\n$objWorksheet->setCellValueByColumnAndRow(13,124, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,124, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,124, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,124, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,124, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,124, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,125, '1');\n$objWorksheet->setCellValueByColumnAndRow(9,125, '63 %');\n$objWorksheet->setCellValueByColumnAndRow(11,125, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,125, '100 %');\n$objWorksheet->setCellValueByColumnAndRow(13,125, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,125, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,125, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,125, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,125, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,125, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,132, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,132, '60 %');\n$objWorksheet->setCellValueByColumnAndRow(11,132, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,132, '67 %');\n$objWorksheet->setCellValueByColumnAndRow(13,132, '2');\n$objWorksheet->setCellValueByColumnAndRow(14,132, '33 %');\n$objWorksheet->setCellValueByColumnAndRow(15,132, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,132, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,132, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,132, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,133, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,133, '87 %');\n$objWorksheet->setCellValueByColumnAndRow(11,133, '5');\n$objWorksheet->setCellValueByColumnAndRow(12,133, '83 %');\n$objWorksheet->setCellValueByColumnAndRow(13,133, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,133, '17 %');\n$objWorksheet->setCellValueByColumnAndRow(15,133, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,133, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,133, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,133, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,134, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,134, '86 %');\n$objWorksheet->setCellValueByColumnAndRow(11,134, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,134, '80 %');\n$objWorksheet->setCellValueByColumnAndRow(13,134, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,134, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,134, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,134, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(17,134, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,134, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,135, '5');\n$objWorksheet->setCellValueByColumnAndRow(9,135, '86 %');\n$objWorksheet->setCellValueByColumnAndRow(11,135, '4');\n$objWorksheet->setCellValueByColumnAndRow(12,135, '80 %');\n$objWorksheet->setCellValueByColumnAndRow(13,135, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,135, '20 %');\n$objWorksheet->setCellValueByColumnAndRow(15,135, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,135, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,135, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,135, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,136, '6');\n$objWorksheet->setCellValueByColumnAndRow(9,136, '86 %');\n$objWorksheet->setCellValueByColumnAndRow(11,136, '5');\n$objWorksheet->setCellValueByColumnAndRow(12,136, '83 %');\n$objWorksheet->setCellValueByColumnAndRow(13,136, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,136, '17 %');\n$objWorksheet->setCellValueByColumnAndRow(15,136, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,136, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,136, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,136, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(3,142, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,142, '8,7');\n$objWorksheet->setCellValueByColumnAndRow(8,142, '8,9');\n$objWorksheet->setCellValueByColumnAndRow(11,142, '3');\n$objWorksheet->setCellValueByColumnAndRow(12,142, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(13,142, '3');\n$objWorksheet->setCellValueByColumnAndRow(14,142, '50 %');\n$objWorksheet->setCellValueByColumnAndRow(15,142, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,142, '0 %');\n$objWorksheet->setCellValueByColumnAndRow(17,142, '0');\n$objWorksheet->setCellValueByColumnAndRow(18,142, '0 %');\n$objPHPExcel->setActiveSheetIndexByName('Vitraux');\n$objWorksheet = $objPHPExcel->getSheetByName('Vitraux');\n$objWorksheet->setCellValueByColumnAndRow(0,1, 'AGENCE THIONVILLE');\n$objWorksheet->setCellValueByColumnAndRow(24,1, '17');\n$objWorksheet->setCellValueByColumnAndRow(24,2, '6');\n$objWorksheet->setCellValueByColumnAndRow(5,6, 'Global');\n$objWorksheet->setCellValueByColumnAndRow(7,6, 'AGENCE THIONVILLE');\n$objWorksheet->setCellValueByColumnAndRow(9,6, 'AGENCE FAMECK');\n$objWorksheet->setCellValueByColumnAndRow(11,6, 'AGENCE HAGONDANGE');\n$objWorksheet->setCellValueByColumnAndRow(13,6, 'AGENCE METZ');\n$objWorksheet->setCellValueByColumnAndRow(15,6, 'AGENCE THIONVILLE');\n$objWorksheet->setCellValueByColumnAndRow(5,8, '88,8%');\n$objWorksheet->setCellValueByColumnAndRow(7,8, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,8, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,8, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,8, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,8, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,8, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,8, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,8, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,8, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,10, '93,8%');\n$objWorksheet->setCellValueByColumnAndRow(7,10, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,10, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,10, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,10, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,10, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,10, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,10, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,10, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,10, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,11, '93,7%');\n$objWorksheet->setCellValueByColumnAndRow(7,11, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,11, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,11, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,11, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,11, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,11, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,11, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,11, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,11, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,12, '87,3%');\n$objWorksheet->setCellValueByColumnAndRow(7,12, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(9,12, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,12, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,12, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,12, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,12, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,12, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,12, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,12, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(5,14, '92,5%');\n$objWorksheet->setCellValueByColumnAndRow(7,14, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(9,14, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,14, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,14, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,14, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,14, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,14, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,14, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,14, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(5,15, '95,6%');\n$objWorksheet->setCellValueByColumnAndRow(7,15, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,15, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,15, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,15, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,15, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,15, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,15, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,15, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,15, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,16, '89,9%');\n$objWorksheet->setCellValueByColumnAndRow(7,16, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,16, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,16, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,16, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,16, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,16, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,16, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,16, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,16, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,18, '86,9%');\n$objWorksheet->setCellValueByColumnAndRow(7,18, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,18, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,18, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,18, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,18, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,18, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,18, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,18, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,18, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,20, '86,1%');\n$objWorksheet->setCellValueByColumnAndRow(7,20, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,20, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,20, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,20, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,20, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,20, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,20, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,20, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,20, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,21, '82,5%');\n$objWorksheet->setCellValueByColumnAndRow(7,21, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,21, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,21, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,21, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,21, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,21, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,21, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,21, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,21, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,22, '76,8%');\n$objWorksheet->setCellValueByColumnAndRow(7,22, '50,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,22, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,22, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,22, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,22, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,22, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,22, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,22, '4');\n$objWorksheet->setCellValueByColumnAndRow(16,22, '50,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,23, '79,7%');\n$objWorksheet->setCellValueByColumnAndRow(7,23, '75,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,23, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,23, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,23, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,23, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,23, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,23, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,23, '4');\n$objWorksheet->setCellValueByColumnAndRow(16,23, '75,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,24, '81,5%');\n$objWorksheet->setCellValueByColumnAndRow(7,24, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,24, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,24, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,24, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,24, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,24, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,24, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,24, '4');\n$objWorksheet->setCellValueByColumnAndRow(16,24, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,25, '81,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,25, '60,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,25, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,25, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,25, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,25, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,25, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,25, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,25, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,25, '60,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,26, '80,2%');\n$objWorksheet->setCellValueByColumnAndRow(7,26, '40,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,26, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,26, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,26, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,26, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,26, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,26, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,26, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,26, '40,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,27, '88,7%');\n$objWorksheet->setCellValueByColumnAndRow(7,27, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,27, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,27, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,27, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,27, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,27, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,27, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,27, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,27, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,28, '93,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,28, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,28, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,28, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,28, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,28, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,28, '5');\n$objWorksheet->setCellValueByColumnAndRow(14,28, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,28, '2');\n$objWorksheet->setCellValueByColumnAndRow(16,28, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,29, '85,7%');\n$objWorksheet->setCellValueByColumnAndRow(7,29, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,29, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,29, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,29, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,29, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,29, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,29, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,29, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,29, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,31, '93,1%');\n$objWorksheet->setCellValueByColumnAndRow(7,31, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,31, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,31, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,31, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,31, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,31, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,31, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,31, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,31, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,32, '91,4%');\n$objWorksheet->setCellValueByColumnAndRow(7,32, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,32, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,32, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,32, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,32, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,32, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,32, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,32, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,32, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,33, '93,1%');\n$objWorksheet->setCellValueByColumnAndRow(7,33, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,33, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,33, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,33, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,33, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,33, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,33, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,33, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,33, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,34, '95,5%');\n$objWorksheet->setCellValueByColumnAndRow(7,34, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,34, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,34, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,34, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,34, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,34, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,34, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,34, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,34, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,35, '93,7%');\n$objWorksheet->setCellValueByColumnAndRow(7,35, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,35, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,35, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,35, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,35, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,35, '5');\n$objWorksheet->setCellValueByColumnAndRow(14,35, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,35, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,35, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,36, '89,5%');\n$objWorksheet->setCellValueByColumnAndRow(7,36, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,36, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,36, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,36, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,36, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,36, '5');\n$objWorksheet->setCellValueByColumnAndRow(14,36, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,36, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,36, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,44, '44,6%');\n$objWorksheet->setCellValueByColumnAndRow(7,44, '50,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,44, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,44, '50,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,44, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,44, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,44, '3');\n$objWorksheet->setCellValueByColumnAndRow(14,44, '33,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,44, '4');\n$objWorksheet->setCellValueByColumnAndRow(16,44, '50,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,46, '90,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,46, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(9,46, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,46, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,46, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,46, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,46, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,46, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,46, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,46, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(5,47, '65,8%');\n$objWorksheet->setCellValueByColumnAndRow(7,47, '66,7 %');\n$objWorksheet->setCellValueByColumnAndRow(9,47, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,47, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,47, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,47, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,47, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,47, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,47, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,47, '66,7 %');\n$objWorksheet->setCellValueByColumnAndRow(5,48, '68,3%');\n$objWorksheet->setCellValueByColumnAndRow(7,48, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(9,48, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,48, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,48, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,48, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,48, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,48, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,48, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,48, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(5,49, '91,9%');\n$objWorksheet->setCellValueByColumnAndRow(7,49, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,49, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,49, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,49, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,49, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,49, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,49, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,49, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,49, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,50, '77,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,50, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,50, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,50, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,50, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,50, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,50, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,50, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,50, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,50, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,51, '74,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,51, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,51, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,51, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,51, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,51, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,51, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,51, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,51, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,51, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,52, '96,8%');\n$objWorksheet->setCellValueByColumnAndRow(7,52, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,52, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,52, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,52, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,52, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,52, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,52, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,52, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,52, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,53, '74,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,53, '66,7 %');\n$objWorksheet->setCellValueByColumnAndRow(9,53, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,53, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,53, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,53, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,53, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,53, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,53, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,53, '66,7 %');\n$objWorksheet->setCellValueByColumnAndRow(5,58, '73,8%');\n$objWorksheet->setCellValueByColumnAndRow(7,58, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,58, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,58, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,58, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,58, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,58, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,58, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,58, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,58, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,59, '80,9%');\n$objWorksheet->setCellValueByColumnAndRow(7,59, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,59, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,59, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,59, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,59, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,59, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,59, '66,7 %');\n$objWorksheet->setCellValueByColumnAndRow(15,59, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,59, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,60, '75,9%');\n$objWorksheet->setCellValueByColumnAndRow(7,60, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,60, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,60, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,60, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,60, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,60, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,60, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,60, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,60, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,61, '82,1%');\n$objWorksheet->setCellValueByColumnAndRow(7,61, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,61, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,61, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,61, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,61, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,61, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,61, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,61, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,61, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,62, '83,2%');\n$objWorksheet->setCellValueByColumnAndRow(7,62, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(9,62, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,62, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,62, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,62, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,62, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,62, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,62, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,62, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(5,63, '86,5%');\n$objWorksheet->setCellValueByColumnAndRow(7,63, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,63, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,63, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,63, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,63, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,63, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,63, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,63, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,63, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,64, '78,6%');\n$objWorksheet->setCellValueByColumnAndRow(7,64, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,64, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,64, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,64, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,64, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,64, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,64, '66,7 %');\n$objWorksheet->setCellValueByColumnAndRow(15,64, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,64, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,65, '76,9%');\n$objWorksheet->setCellValueByColumnAndRow(7,65, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,65, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,65, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,65, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,65, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,65, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,65, '50,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,65, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,65, '80,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,71, '83,3%');\n$objWorksheet->setCellValueByColumnAndRow(7,71, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(9,71, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,71, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,71, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,71, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,71, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,71, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,71, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,71, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(5,72, '22,2%');\n$objWorksheet->setCellValueByColumnAndRow(7,72, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,72, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,72, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,72, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,72, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,72, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,72, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,72, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,72, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,73, '100,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,73, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(9,73, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,73, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,73, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,73, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,73, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,73, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,73, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,73, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(5,74, '83,8%');\n$objWorksheet->setCellValueByColumnAndRow(7,74, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,74, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,74, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,74, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,74, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,74, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,74, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,74, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,74, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,75, '32,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,75, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(9,75, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,75, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,75, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,75, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,75, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,75, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,75, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,75, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(5,76, '100,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,76, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(9,76, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,76, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,76, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,76, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,76, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,76, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,76, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,76, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(5,77, '73,5%');\n$objWorksheet->setCellValueByColumnAndRow(7,77, '60,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,77, '2');\n$objWorksheet->setCellValueByColumnAndRow(10,77, '50,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,77, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,77, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,77, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,77, '66,7 %');\n$objWorksheet->setCellValueByColumnAndRow(15,77, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,77, '60,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,78, '17,9%');\n$objWorksheet->setCellValueByColumnAndRow(7,78, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,78, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,78, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,78, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,78, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,78, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,78, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,78, '2');\n$objWorksheet->setCellValueByColumnAndRow(16,78, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,79, '85,7%');\n$objWorksheet->setCellValueByColumnAndRow(7,79, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(9,79, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,79, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,79, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,79, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,79, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,79, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,79, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,79, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(5,80, '69,4%');\n$objWorksheet->setCellValueByColumnAndRow(7,80, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,80, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,80, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,80, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,80, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,80, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,80, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,80, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,80, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,81, '66,7%');\n$objWorksheet->setCellValueByColumnAndRow(7,81, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(9,81, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,81, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,81, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,81, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,81, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,81, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,81, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,81, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(5,82, '88,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,82, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(9,82, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,82, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,82, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,82, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,82, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,82, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,82, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,82, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(5,83, '80,6%');\n$objWorksheet->setCellValueByColumnAndRow(7,83, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(9,83, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,83, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,83, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,83, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,83, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,83, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,83, '6');\n$objWorksheet->setCellValueByColumnAndRow(16,83, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(5,84, '53,6%');\n$objWorksheet->setCellValueByColumnAndRow(7,84, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,84, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,84, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,84, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,84, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,84, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,84, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,84, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,84, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,85, '92,3%');\n$objWorksheet->setCellValueByColumnAndRow(7,85, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,85, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,85, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,85, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,85, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,85, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,85, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,85, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,85, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,86, '87,2%');\n$objWorksheet->setCellValueByColumnAndRow(7,86, '60,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,86, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,86, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,86, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,86, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,86, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,86, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,86, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,86, '60,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,87, '77,8%');\n$objWorksheet->setCellValueByColumnAndRow(7,87, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,87, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,87, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,87, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,87, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,87, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,87, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,87, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,87, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,88, '92,3%');\n$objWorksheet->setCellValueByColumnAndRow(7,88, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,88, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,88, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,88, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,88, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,88, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,88, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,88, '1');\n$objWorksheet->setCellValueByColumnAndRow(16,88, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,89, '76,8%');\n$objWorksheet->setCellValueByColumnAndRow(7,89, '40,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,89, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,89, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,89, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,89, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,89, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,89, '83,3 %');\n$objWorksheet->setCellValueByColumnAndRow(15,89, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,89, '40,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,90, '48,5%');\n$objWorksheet->setCellValueByColumnAndRow(7,90, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,90, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,90, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,90, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,90, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,90, '1');\n$objWorksheet->setCellValueByColumnAndRow(14,90, '0,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,90, '2');\n$objWorksheet->setCellValueByColumnAndRow(16,90, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,91, '100,0%');\n$objWorksheet->setCellValueByColumnAndRow(7,91, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,91, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,91, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,91, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,91, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,91, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,91, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,91, '2');\n$objWorksheet->setCellValueByColumnAndRow(16,91, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,92, '76,7%');\n$objWorksheet->setCellValueByColumnAndRow(7,92, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(9,92, '1');\n$objWorksheet->setCellValueByColumnAndRow(10,92, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(11,92, '1');\n$objWorksheet->setCellValueByColumnAndRow(12,92, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(13,92, '6');\n$objWorksheet->setCellValueByColumnAndRow(14,92, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(15,92, '5');\n$objWorksheet->setCellValueByColumnAndRow(16,92, '100,0 %');\n$objWorksheet->setCellValueByColumnAndRow(5,93, '42,9%');\n$objWorksheet->setCellValueByColumnAndRow(7,93, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(9,93, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,93, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,93, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,93, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,93, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,93, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,93, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,93, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(5,94, '90,9%');\n$objWorksheet->setCellValueByColumnAndRow(7,94, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(9,94, '0');\n$objWorksheet->setCellValueByColumnAndRow(10,94, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(11,94, '0');\n$objWorksheet->setCellValueByColumnAndRow(12,94, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(13,94, '0');\n$objWorksheet->setCellValueByColumnAndRow(14,94, 'n.c.');\n$objWorksheet->setCellValueByColumnAndRow(15,94, '0');\n$objWorksheet->setCellValueByColumnAndRow(16,94, 'n.c.');\n$objWriter=PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');\n$objWriter->setIncludeCharts(TRUE);\n$objWriter->save('/Users/petervanvliet/Desktop/D\u00e9veloppement/VMv3 4DV14/batigere/fichiers/restitsne/NE_UTHI_01012015_31012015.xls');\necho('/Users/petervanvliet/Desktop/D\u00e9veloppement/VMv3 4DV14/batigere/fichiers/restitsne/NE_UTHI_01012015_31012015.xls');\n?>\n. Hello Mark,\n\nWhilst writing this message, I thought about something\u2026 \nChanged Excel5 files for Excel 2007\u2026\nAnd then it works\u2026\n\nSo I guess it's the Excel5 reader that doesn't preserve graphics!\n\nIf that can help\n\nRegards\n\nPeter\n. Or the writer\u2026 only\nI tried opening an Excel 2007 file, and writing an Excel 5, graphs are not there\u2026\n. ",
    "niklas-heer": "Since PHP7 is officially released now and out of interest - does it now work?\n. @MarkBaker this is what I thought. Thank you for the quick reply! :)\nI'm closing the ticket.\n. Since PHP7 is officially released now and out of interest - does it now work?\n. @MarkBaker this is what I thought. Thank you for the quick reply! :)\nI'm closing the ticket.\n. ",
    "iainfogg": "Hi @MarkBaker - just wondered if there are any more timescales for a release containing the PHP7 work that you've done?\n. Hi @MarkBaker - are you able to give any update on this please?\n\nIt'd be helpful to know if the PHP7 changes have made their way into the 1.8 branch, and also whether you feel it's all there now.\n. Thanks @tomzx and @Kelvinco \n\nIn truth, the application is huge, and has a lot of usages of PHPExcel which, in truth, I'm not familiar with.\n\nI appreciate the tweak suggested and your feedback about what you've used successfully, I was just hoping that @MarkBaker or someone could provide an update as to the developers' view of whether it's now compatible, and ideally sorted that line deletion that @Kelvinco suggested rather than me doing my own hacks.\n\nOtherwise, I have to do loads of digging myself into an application which is big and not that pretty!\n. PS the application I was referring to is ours, the one that uses PHPExcel - not slating PHPExcel!\n. Hi @MarkBaker - just wondered if there are any more timescales for a release containing the PHP7 work that you've done?\n. Hi @MarkBaker - are you able to give any update on this please?\n\nIt'd be helpful to know if the PHP7 changes have made their way into the 1.8 branch, and also whether you feel it's all there now.\n. Thanks @tomzx and @Kelvinco \n\nIn truth, the application is huge, and has a lot of usages of PHPExcel which, in truth, I'm not familiar with.\n\nI appreciate the tweak suggested and your feedback about what you've used successfully, I was just hoping that @MarkBaker or someone could provide an update as to the developers' view of whether it's now compatible, and ideally sorted that line deletion that @Kelvinco suggested rather than me doing my own hacks.\n\nOtherwise, I have to do loads of digging myself into an application which is big and not that pretty!\n. PS the application I was referring to is ours, the one that uses PHPExcel - not slating PHPExcel!\n. ",
    "Kelvinco": "Just delete the break on line 581, it has worked for me.\n. Just delete the break on line 581, it has worked for me.\n. ",
    "naturekzw": "where is the phpexcell 1.8.1? @tomzx \n. @Toooooony PHPExcel 1.8.0 word well in PHP 7.1.9 at my project. where is the phpexcell 1.8.1? @tomzx \n. @Toooooony PHPExcel 1.8.0 word well in PHP 7.1.9 at my project. ",
    "NazarenoMarzetti": "Hi.\n\nI've a problem with the command\n$objWriter->save('php://output');\n\nnot working in php7.\n\nThe same code workin in php5.5 but when i changed the version, the program die at this row.\n\nThanx.\n\nNazareno\n. Hi.\n\nI've a problem with the command\n$objWriter->save('php://output');\n\nnot working in php7.\n\nThe same code workin in php5.5 but when i changed the version, the program die at this row.\n\nThanx.\n\nNazareno\n. ",
    "efantinij": "Hi NazarenoMarzetti,\n\non Line 581 of file PHPExcel/Classes/PHPExcel/Calculation/Functions.php there is a \" break\" , simply comment.\n. Hi NazarenoMarzetti,\n\non Line 581 of file PHPExcel/Classes/PHPExcel/Calculation/Functions.php there is a \" break\" , simply comment.\n. ",
    "apurv195": "Just **comment** the \"break;\" statement in functions.php file on Line No 581 (**Working in PHP 7.1**).. Just **COMMENT** the \"break;\" statement in functions.php file on Line No 581. Just **comment** the \"break;\" statement in functions.php file on Line No 581 (**Working in PHP 7.1**).. Just **COMMENT** the \"break;\" statement in functions.php file on Line No 581. ",
    "xuxiaowenstyle": "not working with PHP 7.0.22 too,please tell me why?. not working with PHP 7.0.22 too,please tell me why?. ",
    "Toooooony": "@xuxiaowenstyle, I have no idea why. But a workaround is to go back to PHPExcel 1.8.0 and apply the manual fix on Functions.php.. @naturekzw Thanks, will keep it in mind. for now I have a site on AWS and some people has reported issues after updating to PHP7.1.x. So whatever works :)\r\n. @xuxiaowenstyle, I have no idea why. But a workaround is to go back to PHPExcel 1.8.0 and apply the manual fix on Functions.php.. @naturekzw Thanks, will keep it in mind. for now I have a site on AWS and some people has reported issues after updating to PHP7.1.x. So whatever works :)\r\n. ",
    "sideshowtoma": "okay guys i found a fix its dirty but it works,\r\ngo to Classes/PHPExcel/Writer/Excel2007.php\r\n\r\ncomment out the following lines, php 7 has a wierd return date type so doing this will enable php excel to work in php 7 pronto. any way\r\n\r\n $saveDateReturnType = PHPExcel_Calculation_Functions::getReturnDateType();\r\nPHPExcel_Calculation_Functions::setReturnDateType(PHPExcel_Calculation_Functions::RETURNDATE_EXCEL);\r\nPHPExcel_Calculation_Functions::setReturnDateType($saveDateReturnType);\r\n\r\nto \r\n\r\n //$saveDateReturnType = PHPExcel_Calculation_Functions::getReturnDateType();\r\n//PHPExcel_Calculation_Functions::setReturnDateType(PHPExcel_Calculation_Functions::RETURNDATE_EXCEL);\r\n//PHPExcel_Calculation_Functions::setReturnDateType($saveDateReturnType);\r\n\r\nworked for me.. okay guys i found a fix its dirty but it works,\r\ngo to Classes/PHPExcel/Writer/Excel2007.php\r\n\r\ncomment out the following lines, php 7 has a wierd return date type so doing this will enable php excel to work in php 7 pronto. any way\r\n\r\n $saveDateReturnType = PHPExcel_Calculation_Functions::getReturnDateType();\r\nPHPExcel_Calculation_Functions::setReturnDateType(PHPExcel_Calculation_Functions::RETURNDATE_EXCEL);\r\nPHPExcel_Calculation_Functions::setReturnDateType($saveDateReturnType);\r\n\r\nto \r\n\r\n //$saveDateReturnType = PHPExcel_Calculation_Functions::getReturnDateType();\r\n//PHPExcel_Calculation_Functions::setReturnDateType(PHPExcel_Calculation_Functions::RETURNDATE_EXCEL);\r\n//PHPExcel_Calculation_Functions::setReturnDateType($saveDateReturnType);\r\n\r\nworked for me.. ",
    "aaron-collier": "Github isn't allowing me to upload the file.\n\nBasically I had no problems with any files prior to being upgraded to 2013, and now my code crashes on getSheet(0). I have current examples that were created in 2010 that still work fine, but any new files created in 2013 the code just ends on the getSheet call. Even a try/catch block doesn't drop into the exception catch.\n. No doubt. I wouldn't go about mucking with it in this case. It's strange, as even a fresh mostly blank workbook is having problems. There may be something odd about the situation on our end. Any tips on diagnostics that the PHPExcel library may have available?\n. https://www.dropbox.com/s/e0a8eb5xtjill3w/metadata.xlsx?dl=0\n\nHere's a mostly blank file that crashes on me.\n. My apologies, I should clarify. The PHPExcel library is crashing when trying to open files created in Excel 2013, not vise versa. We have a metadata being submitted to use in a spreadsheet, and now opening these spreadsheets, when created in 2013 is causing the library to crash on getSheet.\n. Github isn't allowing me to upload the file.\n\nBasically I had no problems with any files prior to being upgraded to 2013, and now my code crashes on getSheet(0). I have current examples that were created in 2010 that still work fine, but any new files created in 2013 the code just ends on the getSheet call. Even a try/catch block doesn't drop into the exception catch.\n. No doubt. I wouldn't go about mucking with it in this case. It's strange, as even a fresh mostly blank workbook is having problems. There may be something odd about the situation on our end. Any tips on diagnostics that the PHPExcel library may have available?\n. https://www.dropbox.com/s/e0a8eb5xtjill3w/metadata.xlsx?dl=0\n\nHere's a mostly blank file that crashes on me.\n. My apologies, I should clarify. The PHPExcel library is crashing when trying to open files created in Excel 2013, not vise versa. We have a metadata being submitted to use in a spreadsheet, and now opening these spreadsheets, when created in 2013 is causing the library to crash on getSheet.\n. ",
    "ralplpcr": "Hi Mark,\nThanks for your reply. Yes, I know it's somewhat vague....I'm sorry I can't provide you direct access to upload/test, but I could provide you sample files if that'd help?  \n\nI'm currently using PHPExcel 1.78 on a Windows 2008 server running PHP/MySQL.  It works by taking an existing (working) file, uploading into a temporary database to enable manipulation of some of the data, then outputting to a new version for upload into the IT system.  I plan on updating to PHPExcel to version 1.80 tomorrow to see if that makes any difference.  It is quite frustrating, though, since the output seems identical in every way with the only difference being these \"mystery bits\" that change somehow when saved in Excel.  \nIf it helps any, the IT application is using a Java uploader - - but I've got no further info as to how it's coded or what it's checking that causes the failure.  I have also reached out to our IT department to ask if they could provide more info, but thus far have gotten very little useful from them.\n\nAnd yes, I do realize that Excel is proprietary code...and that you (& the other contributors) have done a truly remarkable job in making it work.  So thank you!  :) And please don't change anything to risk breaking things.  I just wish I knew what it is that's causing the error?  I wasn't sure if there was an alternate export method that might make a difference - - I'm currently using the following, which seems pretty straightforward:\n\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');\n$objWriter->save('php://output'); \n\nI'll post back after I can upgrade the PHPExcel, and see if that makes any difference.\n. Unfortunately, the change to the latest 1.8 (as downloaded by the ZIP from this site) did not make a difference.  :(  The upload still failed, with a very useless Java error.\n![uselessjavaerror](https://cloud.githubusercontent.com/assets/8869912/10999201/b6b906c4-8468-11e5-98c5-b85f38a23e43.jpg)\n\nTo look at the two files, they _seem_ identical - but there is obviously still something just different enough to prevent the BIFF output from working.  I've contacted our local IT in the hopes that they can provide more info.  \n\nI don't know that it'll help, but here are the two files I tested today.  The \"output_\" version is the PHPExcel output, while the other is after opening/saving.  It was created by doing nothing other than uploading and exporting - no other changes were made.\n![testfiles](https://cloud.githubusercontent.com/assets/8869912/10999399/b54e7ea8-8469-11e5-93b6-b1a845770847.png)  (Save, then rename as .ZIP to get the files)\n\nKeeping my fingers crossed IT can tell me why the Java code is failing (and hopefully fix it)!\n. FYI - I've managed to create a workaround for the time being using the \"unoconv\" functions in Libreoffice.  Basically, instead of creating a BIFF file, I now create an Excel2007 format file, save it, and run it through Libreoffice to convert to Excel5 before downloading.  It's a bit clunky, but it does the trick.\n\nIf the BIFF writer can be updated to fix the output, I'd much prefer to do that... but at least for now it's less critical.  Please let me know if any updates are made to the Excel5 writer - - I'd be more than happy to provide feedback?\n. Hi Mark,\nThanks for your reply. Yes, I know it's somewhat vague....I'm sorry I can't provide you direct access to upload/test, but I could provide you sample files if that'd help?  \n\nI'm currently using PHPExcel 1.78 on a Windows 2008 server running PHP/MySQL.  It works by taking an existing (working) file, uploading into a temporary database to enable manipulation of some of the data, then outputting to a new version for upload into the IT system.  I plan on updating to PHPExcel to version 1.80 tomorrow to see if that makes any difference.  It is quite frustrating, though, since the output seems identical in every way with the only difference being these \"mystery bits\" that change somehow when saved in Excel.  \nIf it helps any, the IT application is using a Java uploader - - but I've got no further info as to how it's coded or what it's checking that causes the failure.  I have also reached out to our IT department to ask if they could provide more info, but thus far have gotten very little useful from them.\n\nAnd yes, I do realize that Excel is proprietary code...and that you (& the other contributors) have done a truly remarkable job in making it work.  So thank you!  :) And please don't change anything to risk breaking things.  I just wish I knew what it is that's causing the error?  I wasn't sure if there was an alternate export method that might make a difference - - I'm currently using the following, which seems pretty straightforward:\n\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');\n$objWriter->save('php://output'); \n\nI'll post back after I can upgrade the PHPExcel, and see if that makes any difference.\n. Unfortunately, the change to the latest 1.8 (as downloaded by the ZIP from this site) did not make a difference.  :(  The upload still failed, with a very useless Java error.\n![uselessjavaerror](https://cloud.githubusercontent.com/assets/8869912/10999201/b6b906c4-8468-11e5-98c5-b85f38a23e43.jpg)\n\nTo look at the two files, they _seem_ identical - but there is obviously still something just different enough to prevent the BIFF output from working.  I've contacted our local IT in the hopes that they can provide more info.  \n\nI don't know that it'll help, but here are the two files I tested today.  The \"output_\" version is the PHPExcel output, while the other is after opening/saving.  It was created by doing nothing other than uploading and exporting - no other changes were made.\n![testfiles](https://cloud.githubusercontent.com/assets/8869912/10999399/b54e7ea8-8469-11e5-93b6-b1a845770847.png)  (Save, then rename as .ZIP to get the files)\n\nKeeping my fingers crossed IT can tell me why the Java code is failing (and hopefully fix it)!\n. FYI - I've managed to create a workaround for the time being using the \"unoconv\" functions in Libreoffice.  Basically, instead of creating a BIFF file, I now create an Excel2007 format file, save it, and run it through Libreoffice to convert to Excel5 before downloading.  It's a bit clunky, but it does the trick.\n\nIf the BIFF writer can be updated to fix the output, I'd much prefer to do that... but at least for now it's less critical.  Please let me know if any updates are made to the Excel5 writer - - I'd be more than happy to provide feedback?\n. ",
    "StefanGous": "Have you managed to find a solution to this? I am facing the same problem.\n. Have you managed to find a solution to this? I am facing the same problem.\n. ",
    "narainsagar": "Yeah, I did with just removed the \"Pound\" sign and it works fine.. Though if we remove the space between \"Pound\" and \"number\" it also works fine... Just make sure that the cell value should be string(text) with no spaces between, do apply trim() if it has spaces.... That's it.\nI didn't find any best solution so i did with that trick.. Hope this may helps you.\n\nThanks.\n. Yeah, I did with just removed the \"Pound\" sign and it works fine.. Though if we remove the space between \"Pound\" and \"number\" it also works fine... Just make sure that the cell value should be string(text) with no spaces between, do apply trim() if it has spaces.... That's it.\nI didn't find any best solution so i did with that trick.. Hope this may helps you.\n\nThanks.\n. ",
    "okneloper": "I confirm this. It's a shame the issue is more than a month old and no one has even commented on it.\n. Sorry, my composer was accidentally set to minimum stability dev, so it installed dev-master with \ncomposer require phpoffice/phpexcel which was essentially not functional. \n\nNo that critical then.\n. Sorry for the above, you're doing a great job! \nMake sure you backup your laptop frequently :)\nMaybe put it on bitbucket to be on the safe side.\n\nThank you.\n. I confirm this. It's a shame the issue is more than a month old and no one has even commented on it.\n. Sorry, my composer was accidentally set to minimum stability dev, so it installed dev-master with \ncomposer require phpoffice/phpexcel which was essentially not functional. \n\nNo that critical then.\n. Sorry for the above, you're doing a great job! \nMake sure you backup your laptop frequently :)\nMaybe put it on bitbucket to be on the safe side.\n\nThank you.\n. ",
    "aaesis": "do you have any idea on how do I determine or to look for that spurious thing in my page. Like what I am going to do to fix this issue. Please? I was working the whole night seems nothing working well. \n. Also I rewrite my code to a simple one.\n\n  include 'Classes/PHPExcel.php';\n  $phpExcel = new PHPExcel();\n  $phpExcel->setActiveSheetIndex(0);\n  $phpExcel->getActiveSheet()->getCell('A1')->setValue(\"Name\");\n  $phpExcel->getActiveSheet()->getCell('B1')->setValue(\"Address\");\n  $phpExcel->getActiveSheet()->getCell('A2')->setValue('a');\n  $phpExcel->getActiveSheet()->getCell('B2')->setValue('b');\n  $objWriter = PHPExcel_IOFactory::createWriter($phpExcel, 'Excel5');\n  header('Content-Type: application/vnd.ms-excel'); \n  header('Content-Disposition: attachment;filename=\"member_information.xls\"');\n  header('Cache-Control: max-age=0');\n  ob_end_clean();\n  $objWriter->save('php://output');\n  exit;\n\nbut still its corrupted.\n. Just wanted you to know my update:\n\nthis what I did temporarily, I have changed the header\n\nheader('Content-Type: application/vnd.ms-excel'); \nto \nheader(\"Content-Type: text/csv\");\n\nwhich it works fine. I dont know why application/vnd,ms-excel got corrupt.\n\nand I am not saving to .csv but .xls and worked fine als0\n. do you have any idea on how do I determine or to look for that spurious thing in my page. Like what I am going to do to fix this issue. Please? I was working the whole night seems nothing working well. \n. Also I rewrite my code to a simple one.\n\n  include 'Classes/PHPExcel.php';\n  $phpExcel = new PHPExcel();\n  $phpExcel->setActiveSheetIndex(0);\n  $phpExcel->getActiveSheet()->getCell('A1')->setValue(\"Name\");\n  $phpExcel->getActiveSheet()->getCell('B1')->setValue(\"Address\");\n  $phpExcel->getActiveSheet()->getCell('A2')->setValue('a');\n  $phpExcel->getActiveSheet()->getCell('B2')->setValue('b');\n  $objWriter = PHPExcel_IOFactory::createWriter($phpExcel, 'Excel5');\n  header('Content-Type: application/vnd.ms-excel'); \n  header('Content-Disposition: attachment;filename=\"member_information.xls\"');\n  header('Cache-Control: max-age=0');\n  ob_end_clean();\n  $objWriter->save('php://output');\n  exit;\n\nbut still its corrupted.\n. Just wanted you to know my update:\n\nthis what I did temporarily, I have changed the header\n\nheader('Content-Type: application/vnd.ms-excel'); \nto \nheader(\"Content-Type: text/csv\");\n\nwhich it works fine. I dont know why application/vnd,ms-excel got corrupt.\n\nand I am not saving to .csv but .xls and worked fine als0\n. ",
    "phansys": "@MarkBaker, any thoughts on this PR?\n. Thank you @PowerKiKi.. Thanks for the feedback @MarkBaker. I've updated the `branch-alias` directive to `1.8-dev`.\nBTW, please take into account that if you are trying to respect [semver](http://semver.org/), non backguard compatible changes must be introduced only in the next major release (in this case, `2.x`); while `1.9` is a `MINOR`.\n. @MarkBaker, any thoughts on this PR?\n. Thank you @PowerKiKi.. Thanks for the feedback @MarkBaker. I've updated the `branch-alias` directive to `1.8-dev`.\nBTW, please take into account that if you are trying to respect [semver](http://semver.org/), non backguard compatible changes must be introduced only in the next major release (in this case, `2.x`); while `1.9` is a `MINOR`.\n. ",
    "titom59280": "is it a new \\PHPExcel_Worsheet with the activeSheet in paramater that I need to do\n. Never mind I figured it out.\n\nThanks for your time\n. is it a new \\PHPExcel_Worsheet with the activeSheet in paramater that I need to do\n. Never mind I figured it out.\n\nThanks for your time\n. ",
    "sergeyklay": "@MarkBaker What with this PR?\n. +1\n. :smile: \nI fully agree with @SamMousa \n. @MarkBaker What with this PR?\n. +1\n. :smile: \nI fully agree with @SamMousa \n. ",
    "Vinksyunit": "The user changed the Excel file template, and I forgot to do a copy. I did not manage to reproduce the issue with a new one. I think it can be due to an old Excel version. None of our other users are impacted, so you can close the issue for the moment. \n\nI will re-open one with the model attached if it occurs again.\n. Today I got another similar issue with one spreadsheet made by one of our customer.\n\nAfter some research, I manage to reproduce the problem :\n\nIf the name of the sheet is `Fiche d'action`, there is an issue. But if we put `Fiche d'action par utilisateur`, everything if working fine.\n\nThe problem seems to be due to this line : [Excel 2007 reader](https://github.com/PHPOffice/PHPExcel/blob/c70e289dacc794ac37e11c4f5ee035b126aea8df/Classes/PHPExcel/Reader/Excel2007.php#L1562)\n\nI do not understand why this substitution is made and I do not want to cause more issues removing it. Generally, a line is here for a reason. Do you have any clue about the goal of this line and the best way to correct our issue ?\n\nHere is the result of the substitution :\n\n```\n'Fiche d''action'!$A$1:$N$19\n// Becomes\n'Fiche d'$A$1:$N$19\n// so no more \"!\" and the print area is now wrong resulting in a crash.\n```\n. @PowerKiKi, thank you for the answer. \n\nPull request submitted #990. I tried a few things but I did not manage to understand the purpose of this line. All cases where this regular expression was matching were causing the same type of issues.\n. Thanks for your work @PowerKiKi . I just find the sheet where we had the issue.\n\nSee below the error :\n\n```\nType: PHPExcel_Exception\nMessage: Invalid cell coordinate 'LIVRET D'A1\nFile: ****/PHPExcel-1.8.1/Classes/PHPExcel/Cell.php\nLine: 590\n```\n\n[sample_issue.xlsx](https://github.com/PHPOffice/PHPExcel/files/440564/sample_issue.xlsx)\n\nWe read the file and search for specific content in it. In case we found it, we replace it.\n\nI join you a short sample of the code linked to PHPExcel \n\n``` php\n$excelTemplate = \\PHPExcel_IOFactory::createReader('Excel2007');\n$excelTemplate->setIncludeCharts(true);\n$this->workbook = $excelTemplate->load($this->datum->getForm()->getExcelFileName());\n\n// Doing stuff not related to PHPExcel\n\nif ($this->workbook->getSheetCount() > 0) {\n    $this->workbook->setActiveSheetIndex(0);\n}\n// the issue occurs to the line below\n$objWriter = \\PHPExcel_IOFactory::createWriter($this->workbook, 'Excel2007');\n```\n. The user changed the Excel file template, and I forgot to do a copy. I did not manage to reproduce the issue with a new one. I think it can be due to an old Excel version. None of our other users are impacted, so you can close the issue for the moment. \n\nI will re-open one with the model attached if it occurs again.\n. Today I got another similar issue with one spreadsheet made by one of our customer.\n\nAfter some research, I manage to reproduce the problem :\n\nIf the name of the sheet is `Fiche d'action`, there is an issue. But if we put `Fiche d'action par utilisateur`, everything if working fine.\n\nThe problem seems to be due to this line : [Excel 2007 reader](https://github.com/PHPOffice/PHPExcel/blob/c70e289dacc794ac37e11c4f5ee035b126aea8df/Classes/PHPExcel/Reader/Excel2007.php#L1562)\n\nI do not understand why this substitution is made and I do not want to cause more issues removing it. Generally, a line is here for a reason. Do you have any clue about the goal of this line and the best way to correct our issue ?\n\nHere is the result of the substitution :\n\n```\n'Fiche d''action'!$A$1:$N$19\n// Becomes\n'Fiche d'$A$1:$N$19\n// so no more \"!\" and the print area is now wrong resulting in a crash.\n```\n. @PowerKiKi, thank you for the answer. \n\nPull request submitted #990. I tried a few things but I did not manage to understand the purpose of this line. All cases where this regular expression was matching were causing the same type of issues.\n. Thanks for your work @PowerKiKi . I just find the sheet where we had the issue.\n\nSee below the error :\n\n```\nType: PHPExcel_Exception\nMessage: Invalid cell coordinate 'LIVRET D'A1\nFile: ****/PHPExcel-1.8.1/Classes/PHPExcel/Cell.php\nLine: 590\n```\n\n[sample_issue.xlsx](https://github.com/PHPOffice/PHPExcel/files/440564/sample_issue.xlsx)\n\nWe read the file and search for specific content in it. In case we found it, we replace it.\n\nI join you a short sample of the code linked to PHPExcel \n\n``` php\n$excelTemplate = \\PHPExcel_IOFactory::createReader('Excel2007');\n$excelTemplate->setIncludeCharts(true);\n$this->workbook = $excelTemplate->load($this->datum->getForm()->getExcelFileName());\n\n// Doing stuff not related to PHPExcel\n\nif ($this->workbook->getSheetCount() > 0) {\n    $this->workbook->setActiveSheetIndex(0);\n}\n// the issue occurs to the line below\n$objWriter = \\PHPExcel_IOFactory::createWriter($this->workbook, 'Excel2007');\n```\n. ",
    "christianbundy": "Just to be clear, this is the code we're running:\n\n``` php\nPHPExcel_Cell::setValueBinder( new OurLeadingZeroValueBinder() );\n$objReader = PHPExcel_IOFactory::createReader('CSV')->setDelimiter(',')\n  ->setEnclosure('\"')\n  ->setLineEnding(\"\\r\\n\")\n  ->setSheetIndex(0);\n$objReader->setReadDataOnly(true);\n$readFilter = new csvPreviewReadFilter();\n$objReader->setReadFilter($readFilter);\n$objPHPExcelFromCSV = $objReader->load($this->getFullUploadFilePath());\n$objWorksheet = $objPHPExcelFromCSV->getActiveSheet();\n```\n\nWe're using XLXS for some files and CSV for others, so it would be great to be able to use the same library instead of using a similar workflow for both file types.\n. Sorry, this is all me. I misread our code and thought our database bug was being thrown from PHPExcel code. Nope.\n\nThanks for putting up with me, cheers!\n. Just to be clear, this is the code we're running:\n\n``` php\nPHPExcel_Cell::setValueBinder( new OurLeadingZeroValueBinder() );\n$objReader = PHPExcel_IOFactory::createReader('CSV')->setDelimiter(',')\n  ->setEnclosure('\"')\n  ->setLineEnding(\"\\r\\n\")\n  ->setSheetIndex(0);\n$objReader->setReadDataOnly(true);\n$readFilter = new csvPreviewReadFilter();\n$objReader->setReadFilter($readFilter);\n$objPHPExcelFromCSV = $objReader->load($this->getFullUploadFilePath());\n$objWorksheet = $objPHPExcelFromCSV->getActiveSheet();\n```\n\nWe're using XLXS for some files and CSV for others, so it would be great to be able to use the same library instead of using a similar workflow for both file types.\n. Sorry, this is all me. I misread our code and thought our database bug was being thrown from PHPExcel code. Nope.\n\nThanks for putting up with me, cheers!\n. ",
    "Tulvan": "I apologize Mark. In my zealous trimming, I removed that for the demonstration. It IS in my code and the example I created still has the same issue when I add it in there.\n. I know its been forever, but I wanted to see if there has been a solution to this problem. We have since updated to PHPExcel 1.8.1 and the problem still exists. I updated my original post attachments with Mark's comment to reflect the actual code I'm running and still seeing the problem.. I didn't find the bug you refer to, but you are correct. In the current version of Microsoft Office (Mac and PC), it does open correctly. That's good enough for my purposes. Thanks.. I apologize Mark. In my zealous trimming, I removed that for the demonstration. It IS in my code and the example I created still has the same issue when I add it in there.\n. I know its been forever, but I wanted to see if there has been a solution to this problem. We have since updated to PHPExcel 1.8.1 and the problem still exists. I updated my original post attachments with Mark's comment to reflect the actual code I'm running and still seeing the problem.. I didn't find the bug you refer to, but you are correct. In the current version of Microsoft Office (Mac and PC), it does open correctly. That's good enough for my purposes. Thanks.. ",
    "markyosefdancel": "this only occur when there is a negative value \n. this only occur when there is a negative value \n. ",
    "benbaylis": "If you are using 1.8 release, \nModify line 964 of PHPExcel/Writer/Excel2007/Chart.php so that the $id2 becomes $id1 \n\n`\n-            $objWriter->writeAttribute('val', $id2);\n-            $objWriter->writeAttribute('val', $id1);\n  `\n. If you are using 1.8 release, \nModify line 964 of PHPExcel/Writer/Excel2007/Chart.php so that the $id2 becomes $id1 \n\n`\n-            $objWriter->writeAttribute('val', $id2);\n-            $objWriter->writeAttribute('val', $id1);\n  `\n. ",
    "kenng": "Thanks! This will fix the y-axis, how about moving the x-axis to below the graph?\n\nupdate: \nThe post from below give a better solution, which shift both x- and y-axis nicely. \nhttp://stackoverflow.com/questions/19391525/phpexcel-y-axis-overlaps-data-chartarea\n. Thanks! This will fix the y-axis, how about moving the x-axis to below the graph?\n\nupdate: \nThe post from below give a better solution, which shift both x- and y-axis nicely. \nhttp://stackoverflow.com/questions/19391525/phpexcel-y-axis-overlaps-data-chartarea\n. ",
    "mborgraeve": "Yes, I can, but i would rather send it by email (or any sharing medium) to you, as it will contain some business data that i don't want on the web. How would you prefer to receive the file ?\nI updated my problem on stackoverflow. It seem to depend on the file, as well as the presence/absence of a breaking point, but i definitely see that the $k key does not get updated after the second iteration while stepping the code.\n. Hello,\nI'm really sorry, but i can't reproduce it now that i have made some modifications, both in my eclipse config and application...\nThe problem does not appear to occur anymore, not in debug nor in usual config.\n\nI'll sure let you know if i encounter it again !\n\nBest wishes for 2016 !\n. Yes, I can, but i would rather send it by email (or any sharing medium) to you, as it will contain some business data that i don't want on the web. How would you prefer to receive the file ?\nI updated my problem on stackoverflow. It seem to depend on the file, as well as the presence/absence of a breaking point, but i definitely see that the $k key does not get updated after the second iteration while stepping the code.\n. Hello,\nI'm really sorry, but i can't reproduce it now that i have made some modifications, both in my eclipse config and application...\nThe problem does not appear to occur anymore, not in debug nor in usual config.\n\nI'll sure let you know if i encounter it again !\n\nBest wishes for 2016 !\n. ",
    "TaronSaribekyan": "Problem connected with method **`getHighestColumn()`**. It calculates all columns in sheet _even thay haven't any data, but has some styling_ (e.g. default fixed with). If you will try to get highest column ( `$objPHPExcel->getActiveSheet()->getHighestColumn()`) you will see big number (e.g. AMK), which often happens when .xlsx document created with LibreOffice.\r\nTo solve that problem you can do one of such methods:\r\n\r\n1. fix you excel file (\"remove\" all empty columns/rows)\r\n2. instead of `$data = $objPHPExcel->getActiveSheet()->toArray()` use `$data = $objPHPExcel->getActiveSheet()->rangeToArray('A1:'.$objPHPExcel->getActiveSheet()->getHighestDataColumn().$objPHPExcel->getActiveSheet()->getHighestDataRow())`\r\n\r\nMethods **`getHighestDataColumn()`** and **`getHighestDataRow()`** are more slow, but they calculate only non empty columns/rows. I'm not sure that provided by me solution will work for empty rows in the middle of document. But if you sure that document can not have empty columns (not rows) in the middle, you can use `getHighestDataColumn()` and `getHighestRow()` at least to reduce memory usage.. Problem connected with method **`getHighestColumn()`**. It calculates all columns in sheet _even thay haven't any data, but has some styling_ (e.g. default fixed with). If you will try to get highest column ( `$objPHPExcel->getActiveSheet()->getHighestColumn()`) you will see big number (e.g. AMK), which often happens when .xlsx document created with LibreOffice.\r\nTo solve that problem you can do one of such methods:\r\n\r\n1. fix you excel file (\"remove\" all empty columns/rows)\r\n2. instead of `$data = $objPHPExcel->getActiveSheet()->toArray()` use `$data = $objPHPExcel->getActiveSheet()->rangeToArray('A1:'.$objPHPExcel->getActiveSheet()->getHighestDataColumn().$objPHPExcel->getActiveSheet()->getHighestDataRow())`\r\n\r\nMethods **`getHighestDataColumn()`** and **`getHighestDataRow()`** are more slow, but they calculate only non empty columns/rows. I'm not sure that provided by me solution will work for empty rows in the middle of document. But if you sure that document can not have empty columns (not rows) in the middle, you can use `getHighestDataColumn()` and `getHighestRow()` at least to reduce memory usage.. ",
    "shenka": "I've tried with xls and xlsx...\n. Sorry Mark,\n\nMy writer is \"PHPExcel_Writer_Excel2007\".\n\nam I right? is this the name of the writer?\n\nThanks in advance.\n. I've tried with xls and xlsx...\n. Sorry Mark,\n\nMy writer is \"PHPExcel_Writer_Excel2007\".\n\nam I right? is this the name of the writer?\n\nThanks in advance.\n. ",
    "llissssss": "+1\n. +1\n. ",
    "kna": "Original code is OK on PHP 7.\nPlease use this patch and run phpunit on PHP 7 & PHP 5.\n\n```\ndiff --git a/unitTests/Classes/PHPExcel/Worksheet/AutoFilter/ColumnTest.php b/unitTests/Classes/PHPExcel/Worksheet/AutoFilter/ColumnTest.php\nindex da6eef5..0d26bf9 100644\n--- a/unitTests/Classes/PHPExcel/Worksheet/AutoFilter/ColumnTest.php\n+++ b/unitTests/Classes/PHPExcel/Worksheet/AutoFilter/ColumnTest.php\n@@ -166,7 +166,10 @@ class AutofilterColumnTest extends PHPUnit_Framework_TestCase\n\n     public function testClone()\n     {\n+        $this->_testAutoFilterColumnObject->createRule();\n         $result = clone $this->_testAutoFilterColumnObject;\n         $this->assertInstanceOf('PHPExcel_Worksheet_AutoFilter_Column', $result);\n+        $this->assertCount(1, $result->getRules());\n+        $this->assertContainsOnlyInstancesOf('PHPExcel_Worksheet_AutoFilter_Column_Rule', $result->getRules());\n     }\n }\n```\n\nI think this bug should be fixed like #94\n. Original code is OK on PHP 7.\nPlease use this patch and run phpunit on PHP 7 & PHP 5.\n\n```\ndiff --git a/unitTests/Classes/PHPExcel/Worksheet/AutoFilter/ColumnTest.php b/unitTests/Classes/PHPExcel/Worksheet/AutoFilter/ColumnTest.php\nindex da6eef5..0d26bf9 100644\n--- a/unitTests/Classes/PHPExcel/Worksheet/AutoFilter/ColumnTest.php\n+++ b/unitTests/Classes/PHPExcel/Worksheet/AutoFilter/ColumnTest.php\n@@ -166,7 +166,10 @@ class AutofilterColumnTest extends PHPUnit_Framework_TestCase\n\n     public function testClone()\n     {\n+        $this->_testAutoFilterColumnObject->createRule();\n         $result = clone $this->_testAutoFilterColumnObject;\n         $this->assertInstanceOf('PHPExcel_Worksheet_AutoFilter_Column', $result);\n+        $this->assertCount(1, $result->getRules());\n+        $this->assertContainsOnlyInstancesOf('PHPExcel_Worksheet_AutoFilter_Column_Rule', $result->getRules());\n     }\n }\n```\n\nI think this bug should be fixed like #94\n. ",
    "kantsverma": "I am getting the same issues Error: Class 'PHPExcel_Calculation' not found. Firstly i was getting error of failed to open stream: No such file or directory [ROOT/vendor/PHPExcel/PHPExcel.php, line 5] i just comment it and then get this issues. Can we define it in the same class ? And after fixing it it start throwing error Class 'PHPExcel_Worksheet' not found . I am getting the same issues Error: Class 'PHPExcel_Calculation' not found. Firstly i was getting error of failed to open stream: No such file or directory [ROOT/vendor/PHPExcel/PHPExcel.php, line 5] i just comment it and then get this issues. Can we define it in the same class ? And after fixing it it start throwing error Class 'PHPExcel_Worksheet' not found . ",
    "sawmurai": "Hey,\n\ndo you need any more information? Or have any idea what I could try?\n\nI'd be really thankful for an answer :)\n\ncheers\n. All good ... :) Instead of modifying Examples/36chartreadwrite.php I ran Examples/36chartreadwritePDF.php. Worked like a charm!\n. Hey,\n\ndo you need any more information? Or have any idea what I could try?\n\nI'd be really thankful for an answer :)\n\ncheers\n. All good ... :) Instead of modifying Examples/36chartreadwrite.php I ran Examples/36chartreadwritePDF.php. Worked like a charm!\n. ",
    "SamMousa": "Well the most important one I noticed is increasing the major version number when you break backwards compatibility. Currently between 1.9 is not BC with 1.8 and thus should be numbered 2.x.y.\n. @MarkBaker don't get hit by a bus, there will be so much delay for the passengers!\n\nI have my minimum stability set to dev, since I do not mind having buggy code (ie code with possible regressions), which is the case for the 1.8.x-dev branch, but now composer will pick up 1.9.x-dev since it thinks it is a compatible dev release.\n\nAnyway, I've double checked and packagist correctly marks 1.8.1 as the latest stable.\nOf course others don't know about the plan to not ever release 1.9.x-dev as 1.9.x ;-) It would be more intuitive to either move it to a different repo, or name it 2.0.x-dev instead, so that we can see you're working on a new major release. \nIt would also help possible new contributors (I don't want to contribute to 1.8.x if instead I can help get a new major version out instead for example).\n\nAnyway, given the state of 1.9.x-dev it might not be so urgent!\n. Well the most important one I noticed is increasing the major version number when you break backwards compatibility. Currently between 1.9 is not BC with 1.8 and thus should be numbered 2.x.y.\n. @MarkBaker don't get hit by a bus, there will be so much delay for the passengers!\n\nI have my minimum stability set to dev, since I do not mind having buggy code (ie code with possible regressions), which is the case for the 1.8.x-dev branch, but now composer will pick up 1.9.x-dev since it thinks it is a compatible dev release.\n\nAnyway, I've double checked and packagist correctly marks 1.8.1 as the latest stable.\nOf course others don't know about the plan to not ever release 1.9.x-dev as 1.9.x ;-) It would be more intuitive to either move it to a different repo, or name it 2.0.x-dev instead, so that we can see you're working on a new major release. \nIt would also help possible new contributors (I don't want to contribute to 1.8.x if instead I can help get a new major version out instead for example).\n\nAnyway, given the state of 1.9.x-dev it might not be so urgent!\n. ",
    "ctrl-f5": "agree, I just installed using `composer require phpoffice/phpexcel` and was stumped that there was no PHPExcel class present... Major BC breaks call for major version changes.\n. agree, I just installed using `composer require phpoffice/phpexcel` and was stumped that there was no PHPExcel class present... Major BC breaks call for major version changes.\n. ",
    "MalibuMan": "I found it, it is not a problem in PHPExcel.\nApparently AMJ is the widest column that is displayed in my version of LibreOffice Calc, but in MS Office we saw it does continue until CHM.\n\nSo this is not a problem. Sorry for the confusion.\n. I found it, it is not a problem in PHPExcel.\nApparently AMJ is the widest column that is displayed in my version of LibreOffice Calc, but in MS Office we saw it does continue until CHM.\n\nSo this is not a problem. Sorry for the confusion.\n. ",
    "fanglijun": "+1\n. +1\n. ",
    "shaqman": "+1. +1. ",
    "halaei": "@MarkBaker\nAll the cells, except the first two, are empty. Everything is fine with xls and csv, but when I save the same data as xlsx, that happens-- 2 cells with data, followed by 1022 cells being null.\n\nAs far as I can guess, PHPExcel_Worksheet_CellIterator::setIterateOnlyExistingCells() is called with false, but again, that does not cause any problem when reading xls.\n\nSorry that I could not provide detailed information to reproduce the situation.\n. The value of the cells are null. The way I created the file is just by saving an xls as an xlsx. No style is given. The xls has no problem. I believe it is a bug, either in PHPExcel, or in the way LibreOffice saves xlsx files.\n\n_Having said that, I think setting IterateOnlyExistingCells to false is a bad idea for my use-case_. But that is mainly because iterators on laravel-excel package don't give me the column of each cell,  as far as I know. So I had no choice. Here is my test code. I know the code is beyond the scope of PHPExcel, but it uses PHPExcel. Sorry for that.\n\n``` php\n<?php\n\nuse Maatwebsite\\Excel\\Excel;\n\nclass ExcelText extends IntegrationTestCase\n{\n    /**\n     * @var Excel\n     */\n    private $excel;\n\n    public function setUp()\n    {\n        parent::setUp();\n        $this->excel = $this->app->make(Excel::class);\n    }\n\n    public function test_read_cells_from_xlsx()\n    {\n        $fName = __DIR__ . '/resources/test_slow_xlsx.xls';\n        $sheets = $this->excel->load($fName)->select([1, 2])->get();\n        foreach ($sheets as $rows) {\n            foreach ($rows as $cells) {\n                foreach ($cells as $i => $cell) {\n//                    echo $cell . \",\";\n                }\n//                echo \"\\n\";\n            }\n        }\n    }\n}\n\n```\n\nThis code takes 8.73 seconds for 500 rows. By ommiting `select([1, 2])` the times goes up to 25.05 seconds. Loading an xls on the other hand, takes less that 0.2 sec, with or without `select([1,2])`.\nAgain with xlsx, setting `ignoreEmpty` to `true` (which means `IterateOnlyExistingCells` being `true`), the runtime is around 2.7 with or without `select([1,2])`, which is not ideal either.\n. @MarkBaker\nAll the cells, except the first two, are empty. Everything is fine with xls and csv, but when I save the same data as xlsx, that happens-- 2 cells with data, followed by 1022 cells being null.\n\nAs far as I can guess, PHPExcel_Worksheet_CellIterator::setIterateOnlyExistingCells() is called with false, but again, that does not cause any problem when reading xls.\n\nSorry that I could not provide detailed information to reproduce the situation.\n. The value of the cells are null. The way I created the file is just by saving an xls as an xlsx. No style is given. The xls has no problem. I believe it is a bug, either in PHPExcel, or in the way LibreOffice saves xlsx files.\n\n_Having said that, I think setting IterateOnlyExistingCells to false is a bad idea for my use-case_. But that is mainly because iterators on laravel-excel package don't give me the column of each cell,  as far as I know. So I had no choice. Here is my test code. I know the code is beyond the scope of PHPExcel, but it uses PHPExcel. Sorry for that.\n\n``` php\n<?php\n\nuse Maatwebsite\\Excel\\Excel;\n\nclass ExcelText extends IntegrationTestCase\n{\n    /**\n     * @var Excel\n     */\n    private $excel;\n\n    public function setUp()\n    {\n        parent::setUp();\n        $this->excel = $this->app->make(Excel::class);\n    }\n\n    public function test_read_cells_from_xlsx()\n    {\n        $fName = __DIR__ . '/resources/test_slow_xlsx.xls';\n        $sheets = $this->excel->load($fName)->select([1, 2])->get();\n        foreach ($sheets as $rows) {\n            foreach ($rows as $cells) {\n                foreach ($cells as $i => $cell) {\n//                    echo $cell . \",\";\n                }\n//                echo \"\\n\";\n            }\n        }\n    }\n}\n\n```\n\nThis code takes 8.73 seconds for 500 rows. By ommiting `select([1, 2])` the times goes up to 25.05 seconds. Loading an xls on the other hand, takes less that 0.2 sec, with or without `select([1,2])`.\nAgain with xlsx, setting `ignoreEmpty` to `true` (which means `IterateOnlyExistingCells` being `true`), the runtime is around 2.7 with or without `select([1,2])`, which is not ideal either.\n. ",
    "conway-chris": "Yea it's very strange.\n\nBest way to describe it is to give you the steps to recreate it.  If you open the sample I attached and then change one of the values in the EOB1 column you will see the cell at the bottom of the column which is the SUM act like it's just overwriting the current value instead of erasing it first.\n. Any idea about this problem?\n. Yea it's very strange.\n\nBest way to describe it is to give you the steps to recreate it.  If you open the sample I attached and then change one of the values in the EOB1 column you will see the cell at the bottom of the column which is the SUM act like it's just overwriting the current value instead of erasing it first.\n. Any idea about this problem?\n. ",
    "antoinedeschenes": "Similar PR here: https://github.com/PHPOffice/PHPExcel/pull/793\nThis problem causes PHP to shutdown with an unrecoverable error when attempting to load some seemingly normal XLS files.\n. Same fix as https://github.com/PHPOffice/PHPExcel/issues/464 \n. Same issue here: https://github.com/PHPOffice/PHPExcel/issues/464\n\n$BSEindex can be 0, which can reference to $BSECollection[-1], which is invalid.\n. Similar PR here: https://github.com/PHPOffice/PHPExcel/pull/793\nThis problem causes PHP to shutdown with an unrecoverable error when attempting to load some seemingly normal XLS files.\n. Same fix as https://github.com/PHPOffice/PHPExcel/issues/464 \n. Same issue here: https://github.com/PHPOffice/PHPExcel/issues/464\n\n$BSEindex can be 0, which can reference to $BSECollection[-1], which is invalid.\n. ",
    "brainfoolong": "Holy moly, nevermind.It is already fixed in 1.8.1 and higher.\nI just searched for updates on the old codeplex page for PHPExcel.\nSorry for that :)\n. Holy moly, nevermind.It is already fixed in 1.8.1 and higher.\nI just searched for updates on the old codeplex page for PHPExcel.\nSorry for that :)\n. ",
    "stefandoorn": "I would be happy to start using this feature. Does it need polishing or any additional changes?\n. @PowerKiKi Is that the successor of this library? Or is this one based on that one?\n. I would be happy to start using this feature. Does it need polishing or any additional changes?\n. @PowerKiKi Is that the successor of this library? Or is this one based on that one?\n. ",
    "bangdingow": "+1 clients are sending XLSB files and it would be nice to be able to work with them in PHPExcel. +1 clients are sending XLSB files and it would be nice to be able to work with them in PHPExcel. ",
    "micaeldias": "+1\n. +1\n. ",
    "yassine-ah": "+1. +1. ",
    "agopaul": "@MarkBaker I see that you have a few PRs pending. Can I do anything for helping merge this?\n. Just to clarify, it's not a bug, it's just not implemented yet.\nI had the same problem myself and I've implemented basic styling support (see the PR https://github.com/PHPOffice/PHPExcel/pull/785)\n\nNumber formatting is not implemented yet in the ODS writer, but feel free to contribute.\n. @MarkBaker I see that you have a few PRs pending. Can I do anything for helping merge this?\n. Just to clarify, it's not a bug, it's just not implemented yet.\nI had the same problem myself and I've implemented basic styling support (see the PR https://github.com/PHPOffice/PHPExcel/pull/785)\n\nNumber formatting is not implemented yet in the ODS writer, but feel free to contribute.\n. ",
    "dems59": "Update: This actually had nothing to do with phpexcel, but rather some sort of change to PHP when dealing with a preg_replace in our script.\n\nIf anyone runs across this in the future, here is where the problem was:\n\npreg_replace('/[^A-Za-z0-9_-\\s\\/+\\$.]/', '', $input)\n\nIn 5.6, the 4th dash (-) needs to be escaped.  I don't know why, but it fixed our problem.\n\nedit: github wont show the escaped dash, but if you count over to the 4th dash it needs to have a backslash in front of it.\n. Update: This actually had nothing to do with phpexcel, but rather some sort of change to PHP when dealing with a preg_replace in our script.\n\nIf anyone runs across this in the future, here is where the problem was:\n\npreg_replace('/[^A-Za-z0-9_-\\s\\/+\\$.]/', '', $input)\n\nIn 5.6, the 4th dash (-) needs to be escaped.  I don't know why, but it fixed our problem.\n\nedit: github wont show the escaped dash, but if you count over to the 4th dash it needs to have a backslash in front of it.\n. ",
    "paedae93": "Sorry I found the solution. \n. The problem was that I used the wrong folder structure. The structure has to be like in the documentation. You can send me a Screenshot of your folderstructure than I could help you. \n. Sorry I found the solution. \n. The problem was that I used the wrong folder structure. The structure has to be like in the documentation. You can send me a Screenshot of your folderstructure than I could help you. \n. ",
    "tuanth89": "@paedae93 \nHow to resolve this solution ??\n. @paedae93 \nHow to resolve this solution ??\n. ",
    "Golovior": "Ahh.. In that case it will probably be best to use the Excel2007 option.  \nNow gonna try to make that work. Changing Excel5 to Excel2007 and changing the header element gives an error of \"file format or file extension not valid\".  \n\nThank you.\n. Found the reason for this (not working of excel2007). XMLWriter isn't installed on this CentOS server.\n. Ahh.. In that case it will probably be best to use the Excel2007 option.  \nNow gonna try to make that work. Changing Excel5 to Excel2007 and changing the header element gives an error of \"file format or file extension not valid\".  \n\nThank you.\n. Found the reason for this (not working of excel2007). XMLWriter isn't installed on this CentOS server.\n. ",
    "KinnaT": "Is this not just PHPExcel running through its loop? It looks like it's grabbing each cell (by hash code, so unique ID), then pulling the HashCode (ID) for the object, then acting on it as a unique entity before moving on to the next. I would assume the time comes from running through the loop to find which is the next cell. \nIf you try it with a very short file (~50 rows), does it still act up?\n. So I found this: [http://stackoverflow.com/questions/5983845/phpexcel-very-slow-ways-to-improve](url) which discusses performance issues.\nThere's a suggestion of this near the top: \n\n> If you're setting values for every individual cell in a sheet using\n> \n> ```\n> $objPHPExcel->getActiveSheet()->setCellValue('A1',$x);\n> $objPHPExcel->getActiveSheet()->setCellValue('B1',$y);\n> ```\n> \n> use\n> \n> ```\n> $sheet = $objPHPExcel->getActiveSheet();\n> $sheet->setCellValue('A1',$x);\n> $sheet->setCellValue('B1',$y);\n> ```\n> \n> so that you're only accessing the getActiveSheet() method once; or take advantage of the fluent interface to set multiple cells with only a single call to $objPHPExcel->getActiveSheet()\n> \n> ```\n> $objPHPExcel->getActiveSheet()->setCellValue('A1',$x)\n>                            ->setCellValue('B1',$y);\n> ```\n\nConsidering the code you gave as an example above, it might be worth a shot.\n. Is this not just PHPExcel running through its loop? It looks like it's grabbing each cell (by hash code, so unique ID), then pulling the HashCode (ID) for the object, then acting on it as a unique entity before moving on to the next. I would assume the time comes from running through the loop to find which is the next cell. \nIf you try it with a very short file (~50 rows), does it still act up?\n. So I found this: [http://stackoverflow.com/questions/5983845/phpexcel-very-slow-ways-to-improve](url) which discusses performance issues.\nThere's a suggestion of this near the top: \n\n> If you're setting values for every individual cell in a sheet using\n> \n> ```\n> $objPHPExcel->getActiveSheet()->setCellValue('A1',$x);\n> $objPHPExcel->getActiveSheet()->setCellValue('B1',$y);\n> ```\n> \n> use\n> \n> ```\n> $sheet = $objPHPExcel->getActiveSheet();\n> $sheet->setCellValue('A1',$x);\n> $sheet->setCellValue('B1',$y);\n> ```\n> \n> so that you're only accessing the getActiveSheet() method once; or take advantage of the fluent interface to set multiple cells with only a single call to $objPHPExcel->getActiveSheet()\n> \n> ```\n> $objPHPExcel->getActiveSheet()->setCellValue('A1',$x)\n>                            ->setCellValue('B1',$y);\n> ```\n\nConsidering the code you gave as an example above, it might be worth a shot.\n. ",
    "Gemineye": "Hi,\n\nI tried to figure it out a bit.  If I hash out all the Styling my Excel gets generated in a few seconds. But when I enable it it takes 45 Seconds. So it seems that there is a poor performance when styling a bigger Excel file. \n\nHere is an example that takes 30 seconds (I style some result rows with colored background)\n\n``` php\n        $xls = new \\PHPExcel();\n\n        $thinBlackBorders = array(\n            'borders' => array(\n                'allborders' => array(\n                    'style' => \\PHPExcel_Style_Border::BORDER_THIN,\n                    'color' => array('argb' => 'FF000000'),\n                ),\n            ),\n        );\n\n        for ($i = 0; $i < 1000; $i++)\n        {\n            if ($i % 2 === 0) {\n                $xls->getActiveSheet()->getStyle('A'.$i.':IZ'.$i)->getFill()->getStartColor()->setARGB('FF0000FF');\n                $xls->getActiveSheet()->getStyle('A'.$i.':IZ'.$i)->getFill()->setFillType(\\PHPExcel_Style_Fill::FILL_SOLID);\n                $xls->getActiveSheet()->getStyle('A'.$i.':IZ'.$i)->applyFromArray($thinBlackBorders);\n            }\n        }\n```\n. Hi,\n\nI did some tests but your mentioned change does not bring any performance boost :(\n. Hi,\n\nI tried to figure it out a bit.  If I hash out all the Styling my Excel gets generated in a few seconds. But when I enable it it takes 45 Seconds. So it seems that there is a poor performance when styling a bigger Excel file. \n\nHere is an example that takes 30 seconds (I style some result rows with colored background)\n\n``` php\n        $xls = new \\PHPExcel();\n\n        $thinBlackBorders = array(\n            'borders' => array(\n                'allborders' => array(\n                    'style' => \\PHPExcel_Style_Border::BORDER_THIN,\n                    'color' => array('argb' => 'FF000000'),\n                ),\n            ),\n        );\n\n        for ($i = 0; $i < 1000; $i++)\n        {\n            if ($i % 2 === 0) {\n                $xls->getActiveSheet()->getStyle('A'.$i.':IZ'.$i)->getFill()->getStartColor()->setARGB('FF0000FF');\n                $xls->getActiveSheet()->getStyle('A'.$i.':IZ'.$i)->getFill()->setFillType(\\PHPExcel_Style_Fill::FILL_SOLID);\n                $xls->getActiveSheet()->getStyle('A'.$i.':IZ'.$i)->applyFromArray($thinBlackBorders);\n            }\n        }\n```\n. Hi,\n\nI did some tests but your mentioned change does not bring any performance boost :(\n. ",
    "KoulSlou": "I think I have faced with the same issue. In code I read template file that have background colors for the first 3 rows. This is how original template looks like:\n\n![original_template](https://cloud.githubusercontent.com/assets/5540550/14437240/4e78408c-ffee-11e5-9563-5af8dac4781b.png)\n\nHere is a sample code - I just open and save file:\n\n```\n`  //Template from VitalSource\n    $template = APPLICATION_PATH.'/../public/VitalSourceTemplate.xlsx';\n\n    // Read the file\n    $fileType = PHPExcel_IOFactory::identify($template);\n    $objReader = PHPExcel_IOFactory::createReader($fileType);\n    $objPHPExcel = $objReader->load($template);\n\n    $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, $fileType);\n    $objWriter->save('checkColor.xlsx');\n    die('finish');`\n```\n\nAnd now if you look into created file - checkColor.xlxs - you will see that colors are totally different. \n\n![after open](https://cloud.githubusercontent.com/assets/5540550/14437344/c752b5aa-ffee-11e5-950c-1817b1f534f8.png)\n\nMy question is why colors are changing? Is there any way to prevent it? So far all I can do is specify correct colors before calling \"createWriter\"\n. I think I have faced with the same issue. In code I read template file that have background colors for the first 3 rows. This is how original template looks like:\n\n![original_template](https://cloud.githubusercontent.com/assets/5540550/14437240/4e78408c-ffee-11e5-9563-5af8dac4781b.png)\n\nHere is a sample code - I just open and save file:\n\n```\n`  //Template from VitalSource\n    $template = APPLICATION_PATH.'/../public/VitalSourceTemplate.xlsx';\n\n    // Read the file\n    $fileType = PHPExcel_IOFactory::identify($template);\n    $objReader = PHPExcel_IOFactory::createReader($fileType);\n    $objPHPExcel = $objReader->load($template);\n\n    $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, $fileType);\n    $objWriter->save('checkColor.xlsx');\n    die('finish');`\n```\n\nAnd now if you look into created file - checkColor.xlxs - you will see that colors are totally different. \n\n![after open](https://cloud.githubusercontent.com/assets/5540550/14437344/c752b5aa-ffee-11e5-950c-1817b1f534f8.png)\n\nMy question is why colors are changing? Is there any way to prevent it? So far all I can do is specify correct colors before calling \"createWriter\"\n. ",
    "dsepulveda": "@KoulSlou did you find a solution for this?  this is driving me crazy!. @Bird87ZA  did you find a solution to this?  this is driving me crazy!. @KoulSlou did you find a solution for this?  this is driving me crazy!. @Bird87ZA  did you find a solution to this?  this is driving me crazy!. ",
    "bloomort": "I guessed as much. Thanks for a great utility.\nI'm not so skilled as to be able to contribute. Please keep up the good work.\n. I guessed as much. Thanks for a great utility.\nI'm not so skilled as to be able to contribute. Please keep up the good work.\n. ",
    "delockdown": "I have done this. \n\n```\n$objReader = PHPExcel_IOFactory::createReader('Excel5');\n$objPHPExcel = $objReader->load(\"tempalate.xls\");\n$objPHPExcel->getActiveSheet()->insertNewColumnBefore('AD', 1);\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');\n$objWriter->save(str_replace('.php', '.xls', __FILE__));\n```\n\nI can't attach the file, it is not supported by github Sorry \n![screenshot from 2016-01-26 22 59 03](https://cloud.githubusercontent.com/assets/1327120/12588811/7162fad2-c480-11e5-9f21-64b8ed29ec6c.png)\n\nTemplate look like above\n. Issue with excel file \n. Yes, those are images\n. I have done this. \n\n```\n$objReader = PHPExcel_IOFactory::createReader('Excel5');\n$objPHPExcel = $objReader->load(\"tempalate.xls\");\n$objPHPExcel->getActiveSheet()->insertNewColumnBefore('AD', 1);\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');\n$objWriter->save(str_replace('.php', '.xls', __FILE__));\n```\n\nI can't attach the file, it is not supported by github Sorry \n![screenshot from 2016-01-26 22 59 03](https://cloud.githubusercontent.com/assets/1327120/12588811/7162fad2-c480-11e5-9f21-64b8ed29ec6c.png)\n\nTemplate look like above\n. Issue with excel file \n. Yes, those are images\n. ",
    "stormbreakers": "hi, \ni am trying to read images from the excel file, however all i get is an ArrayObject\n`$reader->getActiveSheet()->getDrawingCollection()\n`\nyour input would be of great help, as i am not sure if i am doing something wrong\n. hi, \ni am trying to read images from the excel file, however all i get is an ArrayObject\n`$reader->getActiveSheet()->getDrawingCollection()\n`\nyour input would be of great help, as i am not sure if i am doing something wrong\n. ",
    "mspacemedia": "Just come across the same issue, template has a header and in the header s an &[Image] reference, this is being lost when using the file as a base template with PHPExcel - is it the header just not being written or something else more sinister ;). Just come across the same issue, template has a header and in the header s an &[Image] reference, this is being lost when using the file as a base template with PHPExcel - is it the header just not being written or something else more sinister ;). ",
    "gguerrerolara": "I had same problem.\r\n\r\nMy problem: format, previously using Excel5, but using Excel2007 works well.\r\n\r\nAfter changing the format to Excel2007, loaded the template correctly.\r\n\r\nGood luck. Oh I forgot comment.\r\n\r\nCan t did using native functionality, in another session perhaps, but creating the template in excel and opening in ExcelPHP works well.\r\n. I had same problem.\r\n\r\nMy problem: format, previously using Excel5, but using Excel2007 works well.\r\n\r\nAfter changing the format to Excel2007, loaded the template correctly.\r\n\r\nGood luck. Oh I forgot comment.\r\n\r\nCan t did using native functionality, in another session perhaps, but creating the template in excel and opening in ExcelPHP works well.\r\n. ",
    "rohan-deshpande": "There's no valid HTML markup in the csv at all. Some stuff is in there that is in a tag like format, but it isn't valid HTML. The tags look like `<MTH>stuff</MTH>` for example. \n\nNuovo Reader reads it just fine, PHPExcel doesn't, because Nuovo does a file extension check as well as a file type check. I would prefer to use one library though. \n. But if you check the file type AND the extension have you not got basically two step verification that the file is a CSV?\n. There's no valid HTML markup in the csv at all. Some stuff is in there that is in a tag like format, but it isn't valid HTML. The tags look like `<MTH>stuff</MTH>` for example. \n\nNuovo Reader reads it just fine, PHPExcel doesn't, because Nuovo does a file extension check as well as a file type check. I would prefer to use one library though. \n. But if you check the file type AND the extension have you not got basically two step verification that the file is a CSV?\n. ",
    "Calorus": "Would it not be best to use the extension as the type, then check the markup to validate it?\nPeople understand file extensions, and importantly, if you had a text file with an .xls extension, it would be invalid anyway?\n. Would it not be best to use the extension as the type, then check the markup to validate it?\nPeople understand file extensions, and importantly, if you had a text file with an .xls extension, it would be invalid anyway?\n. ",
    "kamazee": "I tried a naive approach that barely changes anything but addresses my specific issue: https://github.com/PHPOffice/PhpSpreadsheet/pull/34\n\nI'll be glad to hear some feedback and backport it into this project it it's OK.\n. I tried a naive approach that barely changes anything but addresses my specific issue: https://github.com/PHPOffice/PhpSpreadsheet/pull/34\n\nI'll be glad to hear some feedback and backport it into this project it it's OK.\n. ",
    "Tomino2112": "Created pull request #839 \n. Created pull request #839 \n. ",
    "brad13x": "I have this same error but the file is not corrupted as far as I know. It does have 30k+ rows.\n. Yes\n\nOn Wed, Jul 27, 2016 at 1:26 AM, Rinse M. notifications@github.com wrote:\n\n> Is someone still having this issue?\n> \n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> https://github.com/PHPOffice/PHPExcel/issues/811#issuecomment-235520074,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ACKBiNvIgpCLzggKGIXQ-ukGUJzLIRolks5qZxZCgaJpZM4HTX0u\n> .\n. I have this same error but the file is not corrupted as far as I know. It does have 30k+ rows.\n. Yes\n\nOn Wed, Jul 27, 2016 at 1:26 AM, Rinse M. notifications@github.com wrote:\n\n> Is someone still having this issue?\n> \n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> https://github.com/PHPOffice/PHPExcel/issues/811#issuecomment-235520074,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ACKBiNvIgpCLzggKGIXQ-ukGUJzLIRolks5qZxZCgaJpZM4HTX0u\n> .\n. ",
    "titansupport": "@MarkBaker would it be possible to get your opinion on the above?\n. No response received for more than 2 months, closing and opening a new issue\n. @MarkBaker would it be possible to get your opinion on the above?\n. No response received for more than 2 months, closing and opening a new issue\n. ",
    "reense": "Is someone still having this issue?\n. @brad13x  I managed to fix it.\n\nI removed the \"=\" strings from the .csv file, and then, it parsed.\n. @ilyago  Do you have \"=\" signs in your CSV?\n. Is someone still having this issue?\n. @brad13x  I managed to fix it.\n\nI removed the \"=\" strings from the .csv file, and then, it parsed.\n. @ilyago  Do you have \"=\" signs in your CSV?\n. ",
    "ilyago": "Notice: Uninitialized string offset: -1298297751 in /Classes/PHPExcel/Reader/Excel5.php on line 7562\nNotice: Uninitialized string offset: -1298297750 in /Classes/PHPExcel/Reader/Excel5.php on line 7562\nNotice: Uninitialized string offset: -1298297753 in /Classes/PHPExcel/Reader/Excel5.php on line 7562\nNotice: Uninitialized string offset: -1298297752 in /Classes/PHPExcel/Reader/Excel5.php on line 7562\nLoops......\n. @TheRinseM Its XLS large trx report. No \"=\" sign.\n. Notice: Uninitialized string offset: -1298297751 in /Classes/PHPExcel/Reader/Excel5.php on line 7562\nNotice: Uninitialized string offset: -1298297750 in /Classes/PHPExcel/Reader/Excel5.php on line 7562\nNotice: Uninitialized string offset: -1298297753 in /Classes/PHPExcel/Reader/Excel5.php on line 7562\nNotice: Uninitialized string offset: -1298297752 in /Classes/PHPExcel/Reader/Excel5.php on line 7562\nLoops......\n. @TheRinseM Its XLS large trx report. No \"=\" sign.\n. ",
    "pgjsmith": "Remove the grouping. It doesn't work with the PIE charts.\n\n``` PHP\n//  Build the dataseries\n$series1 = new PHPExcel_Chart_DataSeries(\n    PHPExcel_Chart_DataSeries::TYPE_PIECHART,               // plotType\n    PHPExcel_Chart_DataSeries::GROUPING_STANDARD,           // plotGrouping\n    range(0, count($dataSeriesValues1)-1),                  // plotOrder\n    $dataseriesLabels1,                                     // plotLabel\n    $xAxisTickValues1,                                      // plotCategory\n    $dataSeriesValues1                                      // plotValues\n);\n```\n\nShould be \n\n``` PHP\n//  Build the dataseries\n$series1 = new PHPExcel_Chart_DataSeries(\n    PHPExcel_Chart_DataSeries::TYPE_PIECHART,               // plotType\n    null,           // plotGrouping\n    range(0, count($dataSeriesValues1)-1),                  // plotOrder\n    $dataseriesLabels1,                                     // plotLabel\n    $xAxisTickValues1,                                      // plotCategory\n    $dataSeriesValues1                                      // plotValues\n);\n```\n. Remove the grouping. It doesn't work with the PIE charts.\n\n``` PHP\n//  Build the dataseries\n$series1 = new PHPExcel_Chart_DataSeries(\n    PHPExcel_Chart_DataSeries::TYPE_PIECHART,               // plotType\n    PHPExcel_Chart_DataSeries::GROUPING_STANDARD,           // plotGrouping\n    range(0, count($dataSeriesValues1)-1),                  // plotOrder\n    $dataseriesLabels1,                                     // plotLabel\n    $xAxisTickValues1,                                      // plotCategory\n    $dataSeriesValues1                                      // plotValues\n);\n```\n\nShould be \n\n``` PHP\n//  Build the dataseries\n$series1 = new PHPExcel_Chart_DataSeries(\n    PHPExcel_Chart_DataSeries::TYPE_PIECHART,               // plotType\n    null,           // plotGrouping\n    range(0, count($dataSeriesValues1)-1),                  // plotOrder\n    $dataseriesLabels1,                                     // plotLabel\n    $xAxisTickValues1,                                      // plotCategory\n    $dataSeriesValues1                                      // plotValues\n);\n```\n. ",
    "vponomarev": "Sure, you can download file from here:\nhttps://drive.google.com/file/d/0B5ROXTqHE9XZc3VSMEpINlpjYWs/view?usp=sharing\nor from here: [price1.xlsx](https://github.com/PHPOffice/PHPExcel/files/124610/price1.xlsx)\n\nFile was originally in .xls format, but is converted into .xlsx by MS Excel 2007.\n\nThis is pricelist with embedded images, please look into image in cell M44 - it contains several nested GroupShapes one into another.\nEven more - there is at least one image, that have single id \"rId93\" but used several times. As i understand, this is not expected behaviuor.\n\nBy the way, my patch covers only 1 level GroupShape, so it don't cover all cases.\nRight now i'm making another patch, that should correctly load all images with correct rowOffset / colOffset. I'll publish it as soon as it will be ready, but it will need some time. I suppose that for this case we should add new fields with row/col Offset of 1st level GroupShape to understand in which column original grouped image is located.\n\nIt's up to you what should we do with this pull request. You can either accept it (it covers at least some cases) or reject until i'll prepare new one.\n. Sure, you can download file from here:\nhttps://drive.google.com/file/d/0B5ROXTqHE9XZc3VSMEpINlpjYWs/view?usp=sharing\nor from here: [price1.xlsx](https://github.com/PHPOffice/PHPExcel/files/124610/price1.xlsx)\n\nFile was originally in .xls format, but is converted into .xlsx by MS Excel 2007.\n\nThis is pricelist with embedded images, please look into image in cell M44 - it contains several nested GroupShapes one into another.\nEven more - there is at least one image, that have single id \"rId93\" but used several times. As i understand, this is not expected behaviuor.\n\nBy the way, my patch covers only 1 level GroupShape, so it don't cover all cases.\nRight now i'm making another patch, that should correctly load all images with correct rowOffset / colOffset. I'll publish it as soon as it will be ready, but it will need some time. I suppose that for this case we should add new fields with row/col Offset of 1st level GroupShape to understand in which column original grouped image is located.\n\nIt's up to you what should we do with this pull request. You can either accept it (it covers at least some cases) or reject until i'll prepare new one.\n. ",
    "roger21": "Yes, this is a real concern, PHPExcel cannot be compatible with PHP7 (at least) because of that\r\n\r\nall the code lines:\r\n\r\n`class::$foo['bar']`\r\n`$variable->$foo['bar']`\r\n\r\nmust be fixed into:\r\n\r\n`class::{$foo['bar']}`\r\n`$variable->{$foo['bar']}`\r\n\r\naccording to this http://php.net/manual/en/migration70.incompatible.php#migration70.incompatible.variable-handling.indirect\r\n\r\ni used the following grep commands :\r\n\r\n`grep -riP -- '->\\$[a-zA-Z0-9]+\\[' *`\r\n`grep -riP -- '::\\$[a-zA-Z0-9]+\\[' *`\r\n. Yes, this is a real concern, PHPExcel cannot be compatible with PHP7 (at least) because of that\r\n\r\nall the code lines:\r\n\r\n`class::$foo['bar']`\r\n`$variable->$foo['bar']`\r\n\r\nmust be fixed into:\r\n\r\n`class::{$foo['bar']}`\r\n`$variable->{$foo['bar']}`\r\n\r\naccording to this http://php.net/manual/en/migration70.incompatible.php#migration70.incompatible.variable-handling.indirect\r\n\r\ni used the following grep commands :\r\n\r\n`grep -riP -- '->\\$[a-zA-Z0-9]+\\[' *`\r\n`grep -riP -- '::\\$[a-zA-Z0-9]+\\[' *`\r\n. ",
    "Gn13l": "My apologies, I was testing PHPExcel version 1.9. In that case, array shorthand notation is used in /src/Autoloader.php on line 62, among other places.\n. My apologies, I was testing PHPExcel version 1.9. In that case, array shorthand notation is used in /src/Autoloader.php on line 62, among other places.\n. ",
    "agiratech-mani": "I had a same problem. Can you help to solve this problem?\n. I had a same problem. Can you help to solve this problem?\n. ",
    "fazalsandhi": "I Have a same problem too. I Have a same problem too. ",
    "hstonge": "... ok, I feel stupid. Wrong project. Sorry for the brain fart.\n. ... ok, I feel stupid. Wrong project. Sorry for the brain fart.\n. ",
    "Norcoen": "``` php\nclass exampleClass {\n\n  protected $styleWalkFunctionList;\n\n  __construct() {\n        $colorShortcut = array(\n                'argb' => 'ARGB',\n                'rgb' => 'RGB'\n        );\n        $borderShortcut = array(\n                'color' => $colorShortcut,\n                'style' => 'borderStyle'\n        );\n        $this->styleWalkFunctionList = array(\n                'font' => array(\n                        'bold',\n                        'color' => $colorShortcut,\n                        'italic',\n                        'name',\n                        'size',\n                        'strike' => 'strikethrough',\n                        'subscript',\n                        'superscript',\n                        'underline'\n                ),\n                'fill' => array(\n                        'startColor' => $colorShortcut,\n                        'endColor' => $colorShortcut,\n                        'rotation',\n                        'type' => 'fillType'\n                ),\n                'borders' => array(\n                        'left' => $borderShortcut,\n                        'right' => $borderShortcut,\n                        'top' => $borderShortcut,\n                        'bottom' => $borderShortcut,\n                        'diagonal' => $borderShortcut,\n                        /*'allBorders' => $borderShortcut,\n                        'outline',\n                        'inside',\n                        'vertical' => $borderShortcut, \n                        'horizontal' => $borderShortcut,*/\n                        'diagonaldirection' => 'diagonalDirection',\n\n                ),\n                'alignment' => array(\n                        'horizontal',\n                        'indent',\n                        'readorder',\n                        'shrinkToFit',\n                        'rotation' => 'textRotation',\n                        'vertical',\n                        'wrap' => 'wrapText'\n                ),\n                'numberFormat' => array(\n                        'arrKeyFix' => 'numberformat',\n                        'builtInFormatCode',\n                        'code' => 'formatCode',\n                ),\n                'protection' => array(\n                        'locked',\n                        'hidden'\n                ),\n                'quotePrefix'\n                /*'conditionalStyles' => array(\n                        'style' => &$this->styleWalkFunctionList\n                )*/\n        );\n  }\n\n  /**\n     * \n     * @param PHPExcel_Style $styleObj\n     */\n    function getStyleArray($styleObj, $functions) {\n        $styleArray = array();\n        if (is_object($styleObj)) {\n            foreach ($functions as $key => $value) {\n                if ($key === 'arrKeyFix') {\n                    continue;\n                }\n                $funcNameTpl = $key;\n                $arraykeyTpl = $key;\n                if (!is_array($value)) {\n                    $funcNameTpl = $value;\n                    if (is_int($key)) {\n                        $arraykeyTpl = $value;\n                    }\n                }\n                elseif (array_key_exists('arrKeyFix', $value)) {\n                    $arraykeyTpl = $value['arrKeyFix'];\n                }\n\n                $funcName = 'get' . ucfirst($funcNameTpl);\n\n                if (method_exists($styleObj, $funcName)) {\n                    $tmpResult = $styleObj->$funcName();\n\n                    if (is_object($tmpResult) && is_array($value)) {\n                        $subFunctionList = $functions[$key];\n                        $tmpResult = $this->getStyleArray($tmpResult, $subFunctionList);\n                    }\n                    $styleArray[$arraykeyTpl] = $tmpResult;\n                }\n            }\n        }\n        return $styleArray;\n    }\n\n  function exampleFunction($excelObj) {\n      $startCellCoord = 'A2';\n      $endCellCoord = 'A5';\n      $styleObj = $excelObj->getActiveSheet()->getStyle($startCellCoord.':'.$endCellCoord);\n      $styleArray = $this->getStyleArray($styleObj, $this->styleWalkFunctionList);\n  }\n}\n```\n\nMaybe someone is fighting with the same problem, this is what I came up with. After blood and tears, trying to get it done automatically, I just hardcodet it, since there seems to be absolute zero reasoning in names and conventions. After adding \"arrKeyFix\" to support \"numberformat\" instead of \"numberFormat\" I just laughed it off instead off crying about it...\n\nSrsly, fuck this library, if I had to do it again, I'd just pump the raw data into an excel sheet and do all the work with VBA.\n. ``` php\nclass exampleClass {\n\n  protected $styleWalkFunctionList;\n\n  __construct() {\n        $colorShortcut = array(\n                'argb' => 'ARGB',\n                'rgb' => 'RGB'\n        );\n        $borderShortcut = array(\n                'color' => $colorShortcut,\n                'style' => 'borderStyle'\n        );\n        $this->styleWalkFunctionList = array(\n                'font' => array(\n                        'bold',\n                        'color' => $colorShortcut,\n                        'italic',\n                        'name',\n                        'size',\n                        'strike' => 'strikethrough',\n                        'subscript',\n                        'superscript',\n                        'underline'\n                ),\n                'fill' => array(\n                        'startColor' => $colorShortcut,\n                        'endColor' => $colorShortcut,\n                        'rotation',\n                        'type' => 'fillType'\n                ),\n                'borders' => array(\n                        'left' => $borderShortcut,\n                        'right' => $borderShortcut,\n                        'top' => $borderShortcut,\n                        'bottom' => $borderShortcut,\n                        'diagonal' => $borderShortcut,\n                        /*'allBorders' => $borderShortcut,\n                        'outline',\n                        'inside',\n                        'vertical' => $borderShortcut, \n                        'horizontal' => $borderShortcut,*/\n                        'diagonaldirection' => 'diagonalDirection',\n\n                ),\n                'alignment' => array(\n                        'horizontal',\n                        'indent',\n                        'readorder',\n                        'shrinkToFit',\n                        'rotation' => 'textRotation',\n                        'vertical',\n                        'wrap' => 'wrapText'\n                ),\n                'numberFormat' => array(\n                        'arrKeyFix' => 'numberformat',\n                        'builtInFormatCode',\n                        'code' => 'formatCode',\n                ),\n                'protection' => array(\n                        'locked',\n                        'hidden'\n                ),\n                'quotePrefix'\n                /*'conditionalStyles' => array(\n                        'style' => &$this->styleWalkFunctionList\n                )*/\n        );\n  }\n\n  /**\n     * \n     * @param PHPExcel_Style $styleObj\n     */\n    function getStyleArray($styleObj, $functions) {\n        $styleArray = array();\n        if (is_object($styleObj)) {\n            foreach ($functions as $key => $value) {\n                if ($key === 'arrKeyFix') {\n                    continue;\n                }\n                $funcNameTpl = $key;\n                $arraykeyTpl = $key;\n                if (!is_array($value)) {\n                    $funcNameTpl = $value;\n                    if (is_int($key)) {\n                        $arraykeyTpl = $value;\n                    }\n                }\n                elseif (array_key_exists('arrKeyFix', $value)) {\n                    $arraykeyTpl = $value['arrKeyFix'];\n                }\n\n                $funcName = 'get' . ucfirst($funcNameTpl);\n\n                if (method_exists($styleObj, $funcName)) {\n                    $tmpResult = $styleObj->$funcName();\n\n                    if (is_object($tmpResult) && is_array($value)) {\n                        $subFunctionList = $functions[$key];\n                        $tmpResult = $this->getStyleArray($tmpResult, $subFunctionList);\n                    }\n                    $styleArray[$arraykeyTpl] = $tmpResult;\n                }\n            }\n        }\n        return $styleArray;\n    }\n\n  function exampleFunction($excelObj) {\n      $startCellCoord = 'A2';\n      $endCellCoord = 'A5';\n      $styleObj = $excelObj->getActiveSheet()->getStyle($startCellCoord.':'.$endCellCoord);\n      $styleArray = $this->getStyleArray($styleObj, $this->styleWalkFunctionList);\n  }\n}\n```\n\nMaybe someone is fighting with the same problem, this is what I came up with. After blood and tears, trying to get it done automatically, I just hardcodet it, since there seems to be absolute zero reasoning in names and conventions. After adding \"arrKeyFix\" to support \"numberformat\" instead of \"numberFormat\" I just laughed it off instead off crying about it...\n\nSrsly, fuck this library, if I had to do it again, I'd just pump the raw data into an excel sheet and do all the work with VBA.\n. ",
    "pr0fess0r": "Thanks for quick response Mark, unfortunately that hasn't helped. D6 on the first sheet is still empty, but I can paste the VLOOKUP formula into that cell in Excell and it works fine. Even this results in an empty cell:\n\n`$objPHPExcel->getActiveSheet()->setCellValue('D6', '=IFERROR(VLOOKUP(A'.$j.',\\''.$lytabname.'\\'!$A$6:$E$2000,5,FALSE),\"ERROR\")');`\n\nIs it because PHPExcel is not seeing the newly created tab? That's why I put some dummy content in it. Is there a way to debug this?\n\nCheers\n. Thanks for this. I simplified everything and used your tool like this:\n- After the \"Add some data\" section:\n\n```\n$objPHPExcel->setActiveSheetIndex(0);\n$objPHPExcel->getActiveSheet()->setTitle('Original');\n\n// Rename worksheet\n$newsheet = $objPHPExcel->createSheet();\n$objPHPExcel->setActiveSheetIndex(1);\n$lytabname = 'Vlookup';\n$newsheet->setTitle($lytabname);\n\n$objPHPExcel->getActiveSheet()->setCellValue('A1','16965');\n$objPHPExcel->getActiveSheet()->setCellValue('B1','100');\n$objPHPExcel->setActiveSheetIndex(0);\n$objPHPExcel->getActiveSheet()->setCellValue('A1','16965');\n$objPHPExcel->getActiveSheet()->setCellValue('A2', '=VLOOKUP(A1,\\''.$lytabname.'\\'!$A$1:$B$2,2,FALSE)');\n```\n\nand then just before the testFormula() call:\n\n```\n$objPHPExcel->setActiveSheetIndex(0);\n$sheet = $objPHPExcel->getActiveSheet();\ntestFormula($sheet,'A2');\n```\n\nThe debug output is:\n\n> 00:25:13 Create new PHPExcel object\n> 00:25:13 Add some data\n> Formula Value is=VLOOKUP(A1,'2015 Wk 5 Input data'!$A$1:$B$2,2,FALSE) Expected Value is UNKNOWN Parser Stack :- Array ( [0] => Array ( [type] => Cell Reference [value] => A1 [reference] => A1 ) [1] => Array ( [type] => Cell Reference [value] => '2015 Wk 5 Input data'!$A$1 [reference] => '2015 Wk 5 Input data'!$A$1 ) [2] => Array ( [type] => Cell Reference [value] => '2015 Wk 5 Input data'!$B$2 [reference] => '2015 Wk 5 Input data'!$B$2 ) [3] => Array ( [type] => Binary Operator [value] => : [reference] => ) [4] => Array ( [type] => Value [value] => 2 [reference] => ) [5] => Array ( [type] => Value [value] => [reference] => ) [6] => Array ( [type] => Operand Count for Function VLOOKUP() [value] => 4 [reference] => ) [7] => Array ( [type] => Function [value] => VLOOKUP( [reference] => ) ) Calculated Value is 100 Evaluation Log: Array ( [0] => Testing cache value for cell Big W!A2 [1] => Big W!A2 => Evaluating Cell A1 in current worksheet [2] => Big W!A2 => Evaluation Result for cell Big W!A1 is a floating point number with a value of 16965 [3] => Big W!A2 => Evaluating Cell A1 in worksheet 2015 Wk 5 Input data [4] => Big W!A2 => Evaluation Result for cell 2015 Wk 5 Input data!A1 in worksheet 2015 Wk 5 Input data is a floating point number with a value of 16965 [5] => Big W!A2 => Evaluating Cell B2 in worksheet 2015 Wk 5 Input data [6] => Big W!A2 => Evaluation Result for cell B2 in worksheet 2015 Wk 5 Input data is a NULL value [7] => Big W!A2 => Evaluating Range \"2015 Wk 5 Input data!A1\" : \"B2\" [8] => Big W!A2 => Evaluating Function VLOOKUP() with 4 arguments [9] => Big W!A2 => Evaluating VLOOKUP( 16965, { 16965, 100; , }, 2, FALSE ) [10] => Big W!A2 => Evaluation Result for VLOOKUP() function call is a floating point number with a value of 100 )\n\nWhich is recovering the right value.\nBut if I output the workbook like this:\n\n```\nheader('Content-Type: application/vnd.ms-excel');\nheader('Content-Disposition: attachment;filename=\"test.xls\"');\nheader ('Expires: Mon, 26 Jul 1997 05:00:00 GMT');\nheader ('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');\nheader ('Cache-Control: cache, must-revalidate');\nheader ('Pragma: public');\n\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');\n$objWriter->setTempDir('/tmp');\n$objWriter->save('php://output');\nexit();\n```\n\nI get a file with all the values in both sheets as expected except in A2 on the Original sheet there is neither the result of the vlookup (100), or the actual formula itself (which is what I wanted). Very odd! Could it be the way I've formatted the formula?\n\nThanks again for all your help and quicj response with this :)\n. Thanks for quick response Mark, unfortunately that hasn't helped. D6 on the first sheet is still empty, but I can paste the VLOOKUP formula into that cell in Excell and it works fine. Even this results in an empty cell:\n\n`$objPHPExcel->getActiveSheet()->setCellValue('D6', '=IFERROR(VLOOKUP(A'.$j.',\\''.$lytabname.'\\'!$A$6:$E$2000,5,FALSE),\"ERROR\")');`\n\nIs it because PHPExcel is not seeing the newly created tab? That's why I put some dummy content in it. Is there a way to debug this?\n\nCheers\n. Thanks for this. I simplified everything and used your tool like this:\n- After the \"Add some data\" section:\n\n```\n$objPHPExcel->setActiveSheetIndex(0);\n$objPHPExcel->getActiveSheet()->setTitle('Original');\n\n// Rename worksheet\n$newsheet = $objPHPExcel->createSheet();\n$objPHPExcel->setActiveSheetIndex(1);\n$lytabname = 'Vlookup';\n$newsheet->setTitle($lytabname);\n\n$objPHPExcel->getActiveSheet()->setCellValue('A1','16965');\n$objPHPExcel->getActiveSheet()->setCellValue('B1','100');\n$objPHPExcel->setActiveSheetIndex(0);\n$objPHPExcel->getActiveSheet()->setCellValue('A1','16965');\n$objPHPExcel->getActiveSheet()->setCellValue('A2', '=VLOOKUP(A1,\\''.$lytabname.'\\'!$A$1:$B$2,2,FALSE)');\n```\n\nand then just before the testFormula() call:\n\n```\n$objPHPExcel->setActiveSheetIndex(0);\n$sheet = $objPHPExcel->getActiveSheet();\ntestFormula($sheet,'A2');\n```\n\nThe debug output is:\n\n> 00:25:13 Create new PHPExcel object\n> 00:25:13 Add some data\n> Formula Value is=VLOOKUP(A1,'2015 Wk 5 Input data'!$A$1:$B$2,2,FALSE) Expected Value is UNKNOWN Parser Stack :- Array ( [0] => Array ( [type] => Cell Reference [value] => A1 [reference] => A1 ) [1] => Array ( [type] => Cell Reference [value] => '2015 Wk 5 Input data'!$A$1 [reference] => '2015 Wk 5 Input data'!$A$1 ) [2] => Array ( [type] => Cell Reference [value] => '2015 Wk 5 Input data'!$B$2 [reference] => '2015 Wk 5 Input data'!$B$2 ) [3] => Array ( [type] => Binary Operator [value] => : [reference] => ) [4] => Array ( [type] => Value [value] => 2 [reference] => ) [5] => Array ( [type] => Value [value] => [reference] => ) [6] => Array ( [type] => Operand Count for Function VLOOKUP() [value] => 4 [reference] => ) [7] => Array ( [type] => Function [value] => VLOOKUP( [reference] => ) ) Calculated Value is 100 Evaluation Log: Array ( [0] => Testing cache value for cell Big W!A2 [1] => Big W!A2 => Evaluating Cell A1 in current worksheet [2] => Big W!A2 => Evaluation Result for cell Big W!A1 is a floating point number with a value of 16965 [3] => Big W!A2 => Evaluating Cell A1 in worksheet 2015 Wk 5 Input data [4] => Big W!A2 => Evaluation Result for cell 2015 Wk 5 Input data!A1 in worksheet 2015 Wk 5 Input data is a floating point number with a value of 16965 [5] => Big W!A2 => Evaluating Cell B2 in worksheet 2015 Wk 5 Input data [6] => Big W!A2 => Evaluation Result for cell B2 in worksheet 2015 Wk 5 Input data is a NULL value [7] => Big W!A2 => Evaluating Range \"2015 Wk 5 Input data!A1\" : \"B2\" [8] => Big W!A2 => Evaluating Function VLOOKUP() with 4 arguments [9] => Big W!A2 => Evaluating VLOOKUP( 16965, { 16965, 100; , }, 2, FALSE ) [10] => Big W!A2 => Evaluation Result for VLOOKUP() function call is a floating point number with a value of 100 )\n\nWhich is recovering the right value.\nBut if I output the workbook like this:\n\n```\nheader('Content-Type: application/vnd.ms-excel');\nheader('Content-Disposition: attachment;filename=\"test.xls\"');\nheader ('Expires: Mon, 26 Jul 1997 05:00:00 GMT');\nheader ('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');\nheader ('Cache-Control: cache, must-revalidate');\nheader ('Pragma: public');\n\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');\n$objWriter->setTempDir('/tmp');\n$objWriter->save('php://output');\nexit();\n```\n\nI get a file with all the values in both sheets as expected except in A2 on the Original sheet there is neither the result of the vlookup (100), or the actual formula itself (which is what I wanted). Very odd! Could it be the way I've formatted the formula?\n\nThanks again for all your help and quicj response with this :)\n. ",
    "Webistry": "Hi, is anyone else having this problem with VLOOKUP?\n. Having this problem also\n. Hi, is anyone else having this problem with VLOOKUP?\n. Having this problem also\n. ",
    "Nicolai-": "I'm having the same issue with VLOOKUP, i think the issue is with the FALSE param\r\nThe formula looks like this: \r\n\r\n```\r\n=IF(C8=\"\";\"\";VLOOKUP(C8;Butiksoversigt!A3:C194;2;FALSE))\r\n```\r\n\r\nI get the correct value if i debug the calculation engine.\r\n\r\nWhenever i want to save the file with the writer it hits the catch statement here: [file](https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Writer/Excel5/Worksheet.php#L889)\r\n\r\nWith the following error: `Syntax error: FALSE), lookahead: ), current char: 56`\r\n\r\nIf i remove the FALSE param then it works fine, except the range i'm searching is not sorted ascending\r\n\r\n. I'm having the same issue with VLOOKUP, i think the issue is with the FALSE param\r\nThe formula looks like this: \r\n\r\n```\r\n=IF(C8=\"\";\"\";VLOOKUP(C8;Butiksoversigt!A3:C194;2;FALSE))\r\n```\r\n\r\nI get the correct value if i debug the calculation engine.\r\n\r\nWhenever i want to save the file with the writer it hits the catch statement here: [file](https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Writer/Excel5/Worksheet.php#L889)\r\n\r\nWith the following error: `Syntax error: FALSE), lookahead: ), current char: 56`\r\n\r\nIf i remove the FALSE param then it works fine, except the range i'm searching is not sorted ascending\r\n\r\n. ",
    "steenbag": "For those of you still experiencing this issue, for us it appears to be possible to replace FALSE with 0 (PHPExcel v 1.8.1). This makes the formula show up when viewed in Excel, and correctly disables the range lookup.. For those of you still experiencing this issue, for us it appears to be possible to replace FALSE with 0 (PHPExcel v 1.8.1). This makes the formula show up when viewed in Excel, and correctly disables the range lookup.. ",
    "Squee3P0": "I've found the source of this problem and a workaround you can use until it is fixed. See issue #1094 for details.. I've found the source of this problem and a workaround you can use until it is fixed.  See issue #1094 for details.. I've found the source of this problem and a workaround you can use until it is fixed. See issue #1094 for details.. I've found the source of this problem and a workaround you can use until it is fixed.  See issue #1094 for details.. ",
    "gmmarc": "Hi, I can confirm this bug too. It happens to me converting from a CSV which contains an emoji to XLS (Excel5). I'll try to post steps to reproduce the issue later.\r\n\r\nIt can't be opened on Microsoft Excel. It can be opened in LibreOffice but text gets garbled from the emoji position on.\r\n\r\nAs a workaround, you can remove emojis easily from the original data: \r\n`$csvData = preg_replace('/[\\xF0-\\xF7].../s', ' ', $csvData);`\r\n\r\nNote: actually this code removes every 4-bytes chars, which I suspect could be the real problem (all emojis are 4 bytes long). Can confirm that emojis work using XLSX (Excel2007). Hi, I can confirm this bug too. It happens to me converting from a CSV which contains an emoji to XLS (Excel5). I'll try to post steps to reproduce the issue later.\r\n\r\nIt can't be opened on Microsoft Excel. It can be opened in LibreOffice but text gets garbled from the emoji position on.\r\n\r\nAs a workaround, you can remove emojis easily from the original data: \r\n`$csvData = preg_replace('/[\\xF0-\\xF7].../s', ' ', $csvData);`\r\n\r\nNote: actually this code removes every 4-bytes chars, which I suspect could be the real problem (all emojis are 4 bytes long). Can confirm that emojis work using XLSX (Excel2007). ",
    "jayhbb": "What is this a good solution?. xls itself have emoji support;I use PHPExcel lib to create a xls and xlsx file in same way, xlsx file can open, xls file can not open! Error message is xls file has unreadable content, can not open it. @MarkBaker . What is this a good solution?. xls itself have emoji support;I use PHPExcel lib to create a xls and xlsx file in same way, xlsx file can open, xls file can not open! Error message is xls file has unreadable content, can not open it. @MarkBaker . ",
    "pzzdvd": "I've got the same problem. \n. I've got the same problem. \n. ",
    "si3u": "I've got the same problem. I've got the same problem. ",
    "johnboy55": "Just a note, we're finding the same issue.\n. The problem is in the /_rels/.rels file in the xlsx document (really a zip file).\n\nopenpyxl adds a namespace to the Relationships tag, \u2018ns0:\u2019. For example, nso:Relationship vs <Relationship>\n\nwithin PHPExcel, in Clases/PHPExcel/Reader/Excel2007.php, on line 133, when they load the relationship file, I have this code,\n\n```\n $rels_xml = $this->securityScan($this->getFromZipArchive($zip, \"_rels/.rels\"), 'SimpleXMLElement', PHPExcel_Settings::getLibXmlLoaderOptions());\n    str_replace(\"ns0:\", \"\", $rels_xml);\n\n    $rels = simplexml_load_string(\n        $rels_xml\n    ); //~ http://schemas.openxmlformats.org/package/2006/relationships\u201d\n```\n\n);\n\nThis fixes the issue in a very very hacky way. \n\n> On Apr 20, 2016, at 8:32 AM, shulogsm notifications@github.com wrote:\n> \n> Hi Nelson, \n> \n> Still looking for fail. I can not find where is the problem on code.\n> \n> > El 20 abr 2016, a las 17:27, John Nelson notifications@github.com escribi\u00f3:\n> > \n> > Just a note, we're finding the same issue\n> \n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly or view it on GitHub https://github.com/PHPOffice/PHPExcel/issues/842#issuecomment-212479145\n. I might have been premature in my 'fix', working on it.\n. Just a note, we're finding the same issue.\n. The problem is in the /_rels/.rels file in the xlsx document (really a zip file).\n\nopenpyxl adds a namespace to the Relationships tag, \u2018ns0:\u2019. For example, nso:Relationship vs <Relationship>\n\nwithin PHPExcel, in Clases/PHPExcel/Reader/Excel2007.php, on line 133, when they load the relationship file, I have this code,\n\n```\n $rels_xml = $this->securityScan($this->getFromZipArchive($zip, \"_rels/.rels\"), 'SimpleXMLElement', PHPExcel_Settings::getLibXmlLoaderOptions());\n    str_replace(\"ns0:\", \"\", $rels_xml);\n\n    $rels = simplexml_load_string(\n        $rels_xml\n    ); //~ http://schemas.openxmlformats.org/package/2006/relationships\u201d\n```\n\n);\n\nThis fixes the issue in a very very hacky way. \n\n> On Apr 20, 2016, at 8:32 AM, shulogsm notifications@github.com wrote:\n> \n> Hi Nelson, \n> \n> Still looking for fail. I can not find where is the problem on code.\n> \n> > El 20 abr 2016, a las 17:27, John Nelson notifications@github.com escribi\u00f3:\n> > \n> > Just a note, we're finding the same issue\n> \n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly or view it on GitHub https://github.com/PHPOffice/PHPExcel/issues/842#issuecomment-212479145\n. I might have been premature in my 'fix', working on it.\n. ",
    "shulogsm": "Hi Nelson, \n\nStill looking for fail. I can not find where is the problem on code.\n\n> El 20 abr 2016, a las 17:27, John Nelson notifications@github.com escribi\u00f3:\n> \n> Just a note, we're finding the same issue\n. Hello and thanks all for your help and interest!\n\nI\u00b4m testing this solution and it is not working for me:\n\n> within PHPExcel, in Clases/PHPExcel/Reader/Excel2007.php, on line 133, when they load the relationship file, I have this code,\n> \n> ```\n>  $rels_xml = $this->securityScan($this->getFromZipArchive($zip, \"_rels/.rels\"), 'SimpleXMLElement', PHPExcel_Settings::getLibXmlLoaderOptions());\n>     str_replace(\"ns0:\", \"\", $rels_xml);\n> \n>     $rels = simplexml_load_string(\n>         $rels_xml\n>     ); //~ http://schemas.openxmlformats.org/package/2006/relationships\u201d\n> ```\n> \n> );\n. Problem solved creating file with openpyxl-2.4.0-a1. Now phpexcel is reading file without problems!!\n. Hi Nelson, \n\nStill looking for fail. I can not find where is the problem on code.\n\n> El 20 abr 2016, a las 17:27, John Nelson notifications@github.com escribi\u00f3:\n> \n> Just a note, we're finding the same issue\n. Hello and thanks all for your help and interest!\n\nI\u00b4m testing this solution and it is not working for me:\n\n> within PHPExcel, in Clases/PHPExcel/Reader/Excel2007.php, on line 133, when they load the relationship file, I have this code,\n> \n> ```\n>  $rels_xml = $this->securityScan($this->getFromZipArchive($zip, \"_rels/.rels\"), 'SimpleXMLElement', PHPExcel_Settings::getLibXmlLoaderOptions());\n>     str_replace(\"ns0:\", \"\", $rels_xml);\n> \n>     $rels = simplexml_load_string(\n>         $rels_xml\n>     ); //~ http://schemas.openxmlformats.org/package/2006/relationships\u201d\n> ```\n> \n> );\n. Problem solved creating file with openpyxl-2.4.0-a1. Now phpexcel is reading file without problems!!\n. ",
    "Themanwithoutaplan": "Sounds like whichever XML library is being used doesn't know how to handle namespaces properly. \n\n`<nso:Relationship xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\" />` and `<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\" />` and `<r:Relationships xmlns:r=\"http://schemas.openxmlformats.org/package/2006/relationships\" />`are exactly the same in XML with `ns0`, `ns1`, etc. being the convention for so-called anonymous namespaces.\n\nYou can probably work around this if you switch to using openpyxl 2.4 which handles the generation of rels.xml slightly differently.\n. I suspect that PHPExcel is struggling with the [Content-Types].xml part generated on systems without lxml installed. Where this is the case an anonymous namespace is automatically added. You can workaround this by installing lxml on the system creating the file.\n\nopenpyxl 2.4 creates this file slightly differently without using anonymous namespaces. But these are perfectly correct XML.\n. Sounds like whichever XML library is being used doesn't know how to handle namespaces properly. \n\n`<nso:Relationship xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\" />` and `<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\" />` and `<r:Relationships xmlns:r=\"http://schemas.openxmlformats.org/package/2006/relationships\" />`are exactly the same in XML with `ns0`, `ns1`, etc. being the convention for so-called anonymous namespaces.\n\nYou can probably work around this if you switch to using openpyxl 2.4 which handles the generation of rels.xml slightly differently.\n. I suspect that PHPExcel is struggling with the [Content-Types].xml part generated on systems without lxml installed. Where this is the case an anonymous namespace is automatically added. You can workaround this by installing lxml on the system creating the file.\n\nopenpyxl 2.4 creates this file slightly differently without using anonymous namespaces. But these are perfectly correct XML.\n. ",
    "lemoney": "How are you implementing the query? And what is the DB you are using?\n. Are you inserting data through a loop or PHPExcel's fromArray?\n. @shreygokani the fromArray method allows you to easily put data into a sheet at volume. Like this example:\n\n``` php\n// example PDO Object\n$PDO = new PDO('Connection String');\n// Query database for 4000 rows of data\n$PDO->query('SELECT * FROM example_table LIMIT 4000');\n// Fetch data into an array NOTE: I use FETCH_ASSOC so only one copy returns \n$Data = $PDO->fetchAll(PDO::FETCH_ASSOC);\n// Start PHPExcel Object\n$wb = new PHPExcel();\n// ... setting up wb ...\n$sheet = $wb->getSheet(0);\n/* Take $Data and just dump the array into the table. This would output a\nthe result in each column by row. EX:\ncolumn 1  | column 2  | column 3\n-----------------------------------\nRow 1       | Row 1      | Row 1\n-----------------------------------\nRow 2       | Row 2      | Row 2\n\netc....\n*/\n$sheet->fromArray($Data, '', 'A2');\n```\n\nDoes this solution fix the issue?\n. Ah, Okay. I wasn't understanding correctly. My apologies. Okay first question is how many columns are you generating? the full 4000+?\n. Person I am so sorry for not responding sooner! Friday's are crazy. Are you watching resources while running the script (*nix systems [h]top) or task manager in windows?\n. @shreygokani I am so sorry for the last response. If you are on a shared host try \n\n``` php\n// default\nmemory_get_usage();\n// all memory\nmemory_get_usage();\n```\n\nI would do them before trying the insert, then use \n\n``` php\ntry {\n} catch ( /* Enter the exception type */ $e {\nmemory_get_usage();\nprint_r($e);\n}\nmemory_get_usage();\n```\n\nTo see what the differences are. You will need to echo out or insert into a DB. You could be maxing out your VPS. Have you tried \n\n``` php\nini_set()\n```\n\n to increase PHP available memory?\n. You shouldn't. Without exposing sensitive source code is it possible for you to share the method you are trying to execute?\n. @shreygokani good to hear! In the future if you are running chrome if you type in the address bar:\n\n```\nphp.net\n```\n\nhit space and then type you can query the documentation directly, especially if you are already on the PHP.net homepage. You can find just about any language function/feature that way with a few characters\n. How much data are you dealing with? I can go into 6 figures no problem. Perhaps you aren't configuring the object fully?\n. How are you implementing the query? And what is the DB you are using?\n. Are you inserting data through a loop or PHPExcel's fromArray?\n. @shreygokani the fromArray method allows you to easily put data into a sheet at volume. Like this example:\n\n``` php\n// example PDO Object\n$PDO = new PDO('Connection String');\n// Query database for 4000 rows of data\n$PDO->query('SELECT * FROM example_table LIMIT 4000');\n// Fetch data into an array NOTE: I use FETCH_ASSOC so only one copy returns \n$Data = $PDO->fetchAll(PDO::FETCH_ASSOC);\n// Start PHPExcel Object\n$wb = new PHPExcel();\n// ... setting up wb ...\n$sheet = $wb->getSheet(0);\n/* Take $Data and just dump the array into the table. This would output a\nthe result in each column by row. EX:\ncolumn 1  | column 2  | column 3\n-----------------------------------\nRow 1       | Row 1      | Row 1\n-----------------------------------\nRow 2       | Row 2      | Row 2\n\netc....\n*/\n$sheet->fromArray($Data, '', 'A2');\n```\n\nDoes this solution fix the issue?\n. Ah, Okay. I wasn't understanding correctly. My apologies. Okay first question is how many columns are you generating? the full 4000+?\n. Person I am so sorry for not responding sooner! Friday's are crazy. Are you watching resources while running the script (*nix systems [h]top) or task manager in windows?\n. @shreygokani I am so sorry for the last response. If you are on a shared host try \n\n``` php\n// default\nmemory_get_usage();\n// all memory\nmemory_get_usage();\n```\n\nI would do them before trying the insert, then use \n\n``` php\ntry {\n} catch ( /* Enter the exception type */ $e {\nmemory_get_usage();\nprint_r($e);\n}\nmemory_get_usage();\n```\n\nTo see what the differences are. You will need to echo out or insert into a DB. You could be maxing out your VPS. Have you tried \n\n``` php\nini_set()\n```\n\n to increase PHP available memory?\n. You shouldn't. Without exposing sensitive source code is it possible for you to share the method you are trying to execute?\n. @shreygokani good to hear! In the future if you are running chrome if you type in the address bar:\n\n```\nphp.net\n```\n\nhit space and then type you can query the documentation directly, especially if you are already on the PHP.net homepage. You can find just about any language function/feature that way with a few characters\n. How much data are you dealing with? I can go into 6 figures no problem. Perhaps you aren't configuring the object fully?\n. ",
    "dunebaud": "I would like to add the following as I have made some other tests\n\nIf I use:\n\n```\n$cacheMethod = PHPExcel_CachedObjectStorageFactory::cache_in_memory_gzip;\nPHPExcel_Settings::setCacheStorageMethod($cacheMethod,array()); \n```\n\nor\n\n```\n$cacheMethod = PHPExcel_CachedObjectStorageFactory::cache_in_memory_serialized;\nPHPExcel_Settings::setCacheStorageMethod($cacheMethod,array());\n```\n\nthen insertNewRowBefore is not working\n\nBut, with \n\n```\n$cacheMethod = PHPExcel_CachedObjectStorageFactory::cache_in_memory;\nPHPExcel_Settings::setCacheStorageMethod($cacheMethod,array());\n```\n\nit is fine like for the APC\nLast but not least, if I use\n\n```\n$cacheMethod = PHPExcel_CachedObjectStorageFactory::cache_to_phpTemp;\nPHPExcel_Settings::setCacheStorageMethod($cacheMethod,array( 'memoryCacheSize' => '1MB'));\n```\n\nIt is crashing with this error:\n`Call to a member function attach() on a non-object in /PHPExcel/Classes/PHPExcel/CachedObjectStorage/PHPTemp.php on line 115`\n\nI must remoce the array( 'memoryCacheSize' => '1MB') arg like I did in first post (but anyway, insertNewRowBefore will not work)\n. I forgor to mention it is phpExcel (v1.8.1)\n. ...I click post to early... Here is the end:\nBut If I use PHPExcel_Writer_Excel5, everything is fine\n. I would like to add the following as I have made some other tests\n\nIf I use:\n\n```\n$cacheMethod = PHPExcel_CachedObjectStorageFactory::cache_in_memory_gzip;\nPHPExcel_Settings::setCacheStorageMethod($cacheMethod,array()); \n```\n\nor\n\n```\n$cacheMethod = PHPExcel_CachedObjectStorageFactory::cache_in_memory_serialized;\nPHPExcel_Settings::setCacheStorageMethod($cacheMethod,array());\n```\n\nthen insertNewRowBefore is not working\n\nBut, with \n\n```\n$cacheMethod = PHPExcel_CachedObjectStorageFactory::cache_in_memory;\nPHPExcel_Settings::setCacheStorageMethod($cacheMethod,array());\n```\n\nit is fine like for the APC\nLast but not least, if I use\n\n```\n$cacheMethod = PHPExcel_CachedObjectStorageFactory::cache_to_phpTemp;\nPHPExcel_Settings::setCacheStorageMethod($cacheMethod,array( 'memoryCacheSize' => '1MB'));\n```\n\nIt is crashing with this error:\n`Call to a member function attach() on a non-object in /PHPExcel/Classes/PHPExcel/CachedObjectStorage/PHPTemp.php on line 115`\n\nI must remoce the array( 'memoryCacheSize' => '1MB') arg like I did in first post (but anyway, insertNewRowBefore will not work)\n. I forgor to mention it is phpExcel (v1.8.1)\n. ...I click post to early... Here is the end:\nBut If I use PHPExcel_Writer_Excel5, everything is fine\n. ",
    "jacksnodgrass": "I confirm this issue. If you open the PHPExcel_Writer_Excel2007 formatted .xlsx file in open office, you see the cell value of: =SUM(K4:K18) BUT the spreadsheet does not automatically run that calculation. If you edit the field.. re-type the = or : for example..and press enter, THEN the spredsheet runs the calculation.  It's as if the character encoding treats the =SUM(K4:K18) data as a string and not function and it has to be re-encoded when you edit it on the live document. Storing the file in PHPExcel_Writer_Excel5 format does not have this issue. \n. I confirm this issue. If you open the PHPExcel_Writer_Excel2007 formatted .xlsx file in open office, you see the cell value of: =SUM(K4:K18) BUT the spreadsheet does not automatically run that calculation. If you edit the field.. re-type the = or : for example..and press enter, THEN the spredsheet runs the calculation.  It's as if the character encoding treats the =SUM(K4:K18) data as a string and not function and it has to be re-encoded when you edit it on the live document. Storing the file in PHPExcel_Writer_Excel5 format does not have this issue. \n. ",
    "ttitus54": "Mark, I am having the same issue I tried adding the below line and it didn\u2019t help at all. Here is the code that I use:\n\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPWrite,\"Excel2007\");\n\n$objWriter->setPreCalculateFormulas(true);\n\necho '<br />' . date('H:i:s') . ' Writing Non-Exception File<br>';\n\necho 'Output file is: ' . $outputFile . '<br>';\n\n$objWriter->save(str_replace('.php', '.xlsx', $outputFile));\n\nThank-You\n\nTerry Titus\n\nIT Support\n\nSeattle Bulk Shipping, Inc\n\nEmail: terry@seattlebulkshipping.com\n\nPhone: 206-652-1356 ext 111\n\nCell 206-423-9547\n\nFrom: Mark Baker [mailto:notifications@github.com] \nSent: Friday, March 25, 2016 10:53 AM\nTo: PHPOffice/PHPExcel\nSubject: Re: [PHPExcel] Impossible to have calculated cells (formulas) with PHPExcel_Writer_Excel2007 (#846)\n\nTry setting $objWriter->setPreCalculateFormulas(true); before saving\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub https://github.com/PHPOffice/PHPExcel/issues/846#issuecomment-201386128   https://github.com/notifications/beacon/ABX8y_17VFFNBxFd8tD_CQBjW7jqLrlNks5pxCEVgaJpZM4Hn8Ii.gif \n\n---\n\nThis email has been checked for viruses by Avast antivirus software.\nhttps://www.avast.com/antivirus\n. Mark, I am having the same issue I tried adding the below line and it didn\u2019t help at all. Here is the code that I use:\n\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPWrite,\"Excel2007\");\n\n$objWriter->setPreCalculateFormulas(true);\n\necho '<br />' . date('H:i:s') . ' Writing Non-Exception File<br>';\n\necho 'Output file is: ' . $outputFile . '<br>';\n\n$objWriter->save(str_replace('.php', '.xlsx', $outputFile));\n\nThank-You\n\nTerry Titus\n\nIT Support\n\nSeattle Bulk Shipping, Inc\n\nEmail: terry@seattlebulkshipping.com\n\nPhone: 206-652-1356 ext 111\n\nCell 206-423-9547\n\nFrom: Mark Baker [mailto:notifications@github.com] \nSent: Friday, March 25, 2016 10:53 AM\nTo: PHPOffice/PHPExcel\nSubject: Re: [PHPExcel] Impossible to have calculated cells (formulas) with PHPExcel_Writer_Excel2007 (#846)\n\nTry setting $objWriter->setPreCalculateFormulas(true); before saving\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub https://github.com/PHPOffice/PHPExcel/issues/846#issuecomment-201386128   https://github.com/notifications/beacon/ABX8y_17VFFNBxFd8tD_CQBjW7jqLrlNks5pxCEVgaJpZM4Hn8Ii.gif \n\n---\n\nThis email has been checked for viruses by Avast antivirus software.\nhttps://www.avast.com/antivirus\n. ",
    "kmakarem": "I second what they say. Same issue arises for me. As well as that,\nWhen i call for ->setPreCalculateFormulas(true) before saving, the page returns with a 500 error. My workbook is a 17 page book. The formulas have been checked many times and our team is sure that the workbook is running smoothly. When i open it and hard save it and refresh, the values are shown! Any advice would be greatly appreciated. I also took your code function testFormula from stack to debug my cell errors more, but detailed error log wasn't showing and i was getting a $token error. Thank you very much.\n. I second what they say. Same issue arises for me. As well as that,\nWhen i call for ->setPreCalculateFormulas(true) before saving, the page returns with a 500 error. My workbook is a 17 page book. The formulas have been checked many times and our team is sure that the workbook is running smoothly. When i open it and hard save it and refresh, the values are shown! Any advice would be greatly appreciated. I also took your code function testFormula from stack to debug my cell errors more, but detailed error log wasn't showing and i was getting a $token error. Thank you very much.\n. ",
    "guarly": "With the  $objWriter->setPreCalculateFormulas(true); it partially works for me.\nBut there is an issue whenever a formula depends on the cell which itself is another formula.\nOversimplified Example:\nCell A1: Value 1\nCell A2: Value 2\nCell A3: =SUM(A4/A1); => Openoffice opens the .xlsx file and shows a 0.\nCell A4: =SUM(A2); => Openoffice opens the .xlsx file and shows a 2.\n\nIt seems as if there is some issue with the order of calculations.\n. I've tried with composer latest version: 1.8.1\n. With the  $objWriter->setPreCalculateFormulas(true); it partially works for me.\nBut there is an issue whenever a formula depends on the cell which itself is another formula.\nOversimplified Example:\nCell A1: Value 1\nCell A2: Value 2\nCell A3: =SUM(A4/A1); => Openoffice opens the .xlsx file and shows a 0.\nCell A4: =SUM(A2); => Openoffice opens the .xlsx file and shows a 2.\n\nIt seems as if there is some issue with the order of calculations.\n. I've tried with composer latest version: 1.8.1\n. ",
    "guidsen": "I'm having the same issue. The calculation is just being rendered as plain text.\n. I've got it working now, but the PDF that's being generated is really small. Have to zoom 5000% or something to actually make it fit my screen.\n. I'm having the same issue. The calculation is just being rendered as plain text.\n. I've got it working now, but the PDF that's being generated is really small. Have to zoom 5000% or something to actually make it fit my screen.\n. ",
    "Fluf22": "Since I was facing the same error, I followed what you said on this issue, and here are my two cents :\n- \"=SUM(1, 1)\" gives 0, if the file is saved with PHPExcel_IOFactory::createWriter($excel_app, 'Excel2007'); and opened with LibreOffice5, but works normally with Office Excel 2007\n- \"=SUM(1, 1)\" gives 2, if the file is saved with PHPExcel_IOFactory::createWriter($excel_app, 'Excel5'); and opened with LibreOffice5 or Office Excel 2007\n\n(=SUM() formula is an example. I also tried with =DATE() and the results are the same)\n\nBut : if saved with \"Excel2007\" option, you have to set \".xlsx\" as the extension, and if it's saved with \"Excel5\" option, you have to set \".xls\" as the extension, or you'll have a warning box from Office Excel 2007 (but not from LibreOffice5).\n\nPHPExcel version : 1.8.1 (installed with composer)\n. Since I was facing the same error, I followed what you said on this issue, and here are my two cents :\n- \"=SUM(1, 1)\" gives 0, if the file is saved with PHPExcel_IOFactory::createWriter($excel_app, 'Excel2007'); and opened with LibreOffice5, but works normally with Office Excel 2007\n- \"=SUM(1, 1)\" gives 2, if the file is saved with PHPExcel_IOFactory::createWriter($excel_app, 'Excel5'); and opened with LibreOffice5 or Office Excel 2007\n\n(=SUM() formula is an example. I also tried with =DATE() and the results are the same)\n\nBut : if saved with \"Excel2007\" option, you have to set \".xlsx\" as the extension, and if it's saved with \"Excel5\" option, you have to set \".xls\" as the extension, or you'll have a warning box from Office Excel 2007 (but not from LibreOffice5).\n\nPHPExcel version : 1.8.1 (installed with composer)\n. ",
    "gnumoksha": "I had the same issue using the PHPOffice v1.8.1 and LibreOffice 5.1.4.2.\n\nI'm also confirming that  MarkBaker's comment works:\n\n``` php\n$excel = new PHPExcel();\n[...]\n$objWriter = PHPExcel_IOFactory::createWriter($excel, 'Excel2007');\n$objWriter->setPreCalculateFormulas(true);\n$objWriter->save($path);\n```\n. I had the same issue using the PHPOffice v1.8.1 and LibreOffice 5.1.4.2.\n\nI'm also confirming that  MarkBaker's comment works:\n\n``` php\n$excel = new PHPExcel();\n[...]\n$objWriter = PHPExcel_IOFactory::createWriter($excel, 'Excel2007');\n$objWriter->setPreCalculateFormulas(true);\n$objWriter->save($path);\n```\n. ",
    "lscgzwd": "I have replace it to Str. it works\n. I have replace it to Str. it works\n. ",
    "aqeel-legalinc": "Oh No problem, I just wanted to get your attention on this. Thanks a lot. \n. Oh No problem, I just wanted to get your attention on this. Thanks a lot. \n. ",
    "neuro-sys": "@marcoflorian Thanks, your fix has worked for me.\n. @marcoflorian Thanks, your fix has worked for me.\n. ",
    "marcoflorian": "https://github.com/PHPOffice/PHPExcel/pull/1097. https://github.com/PHPOffice/PHPExcel/pull/1097. ",
    "shaheenhashinclude": "I got an error\r\nMessage: Class 'ZipArchive' not found\r\nFilename: Reader/Excel2007.php\r\nLine Number: 86\r\n\r\nAny help. Hi\r\nI am attached  PHPExcel/Reader/Excel2007.php \r\n[Excel2007.zip](https://github.com/PHPOffice/PHPExcel/files/773660/Excel2007.zip)\r\n\r\nsame error occurs\r\nMessage: Class 'ZipArchive' not found\r\n\r\nFilename: Reader/Excel2007.php\r\n\r\nLine Number: 94\r\n\r\nThis file is working on localhost(php version 7.0). And not working in server(php version 5.4.45)\r\n. Same error. var_dump(extension_loaded ('zip')) returns bool(false)\r\nwhere to place this code PHPExcel_Settings::setZipClass(PHPExcel_Settings::PCLZIP);. I am using linke this\r\nPHPExcel_Settings::setZipClass(PHPExcel_Settings::PCLZIP);\r\n\t\t\t\t$objPHPExcel = PHPExcel_IOFactory::load($inputFileName);\r\n\t\t\t\t\r\n    \t\t\t/*$inputFileType = PHPExcel_IOFactory::identify($inputFileName);\r\n    \t\t\t$objReader = PHPExcel_IOFactory::createReader($inputFileType);\r\n    \t\t\t$objPHPExcel = $objReader->load($inputFileName);*/\r\n\t\t\r\n\t\t\r\n\t\r\n    \t\t\t$sheet = $objPHPExcel->getSheet(0); \r\n\t\t\t\t$highestRow = $sheet->getHighestRow(); \r\n\t\t\t\t$highestColumn = $sheet->getHighestColumn();\r\n\r\nThat time somany errors occurs in localhost. I cant' solve . Pls help\r\n[error.txt](https://github.com/PHPOffice/PHPExcel/files/782294/error.txt)\r\n. I got an error\r\nMessage: Class 'ZipArchive' not found\r\nFilename: Reader/Excel2007.php\r\nLine Number: 86\r\n\r\nAny help. Hi\r\nI am attached  PHPExcel/Reader/Excel2007.php \r\n[Excel2007.zip](https://github.com/PHPOffice/PHPExcel/files/773660/Excel2007.zip)\r\n\r\nsame error occurs\r\nMessage: Class 'ZipArchive' not found\r\n\r\nFilename: Reader/Excel2007.php\r\n\r\nLine Number: 94\r\n\r\nThis file is working on localhost(php version 7.0). And not working in server(php version 5.4.45)\r\n. Same error. var_dump(extension_loaded ('zip')) returns bool(false)\r\nwhere to place this code PHPExcel_Settings::setZipClass(PHPExcel_Settings::PCLZIP);. I am using linke this\r\nPHPExcel_Settings::setZipClass(PHPExcel_Settings::PCLZIP);\r\n\t\t\t\t$objPHPExcel = PHPExcel_IOFactory::load($inputFileName);\r\n\t\t\t\t\r\n    \t\t\t/*$inputFileType = PHPExcel_IOFactory::identify($inputFileName);\r\n    \t\t\t$objReader = PHPExcel_IOFactory::createReader($inputFileType);\r\n    \t\t\t$objPHPExcel = $objReader->load($inputFileName);*/\r\n\t\t\r\n\t\t\r\n\t\r\n    \t\t\t$sheet = $objPHPExcel->getSheet(0); \r\n\t\t\t\t$highestRow = $sheet->getHighestRow(); \r\n\t\t\t\t$highestColumn = $sheet->getHighestColumn();\r\n\r\nThat time somany errors occurs in localhost. I cant' solve . Pls help\r\n[error.txt](https://github.com/PHPOffice/PHPExcel/files/782294/error.txt)\r\n. ",
    "rcarvello": "Tnx..This worked form me. PHP 5.2. Tnx..This worked form me. PHP 5.2. ",
    "rckjairath": "I am getting error in above code in $archive->getFromIndex\r\nUndefined variable: archive in \r\nCall to a member function getFromIndex() on null in . I am getting error in above code in $archive->getFromIndex\r\nUndefined variable: archive in \r\nCall to a member function getFromIndex() on null in . ",
    "it2semi": "Hi! Same problem here. My columns have too much extra white spaces. There are no differences in setting PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT or not. What was the soloution? Please give me an advice... . Hi! Same problem here. My columns have too much extra white spaces. There are no differences in setting PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT or not. What was the soloution? Please give me an advice... . ",
    "ArtisanTinkerer": "I only want a couple of columns from the first sheet, is there a way I can limit what I load?\n\nDo I need to this:\n\nExcel::load('file.xls', function($\n\n});\n\nbefore I can use;\n\n$reader->first();\n. Ahhh.\n\nYes, sorry. I am using this:\n\nhttps://github.com/Maatwebsite/Laravel-Excel\n\nI'm going to ditch that and use PHPExcel directly.\n. I have this working now with your package! It is incredible, thank-you!\n. I only want a couple of columns from the first sheet, is there a way I can limit what I load?\n\nDo I need to this:\n\nExcel::load('file.xls', function($\n\n});\n\nbefore I can use;\n\n$reader->first();\n. Ahhh.\n\nYes, sorry. I am using this:\n\nhttps://github.com/Maatwebsite/Laravel-Excel\n\nI'm going to ditch that and use PHPExcel directly.\n. I have this working now with your package! It is incredible, thank-you!\n. ",
    "Methos76": "Hello @sabardotnet.\n\nas the php documentation states here: http://php.net/manual/en/function.getimagesize.php\nunder \"Errors/Exceptions\" \nOn read error, getimagesize() will generate an error of level E_NOTICE\n\nso it seems the problem occurs because the file was not found or could no be read anyway.\n\nAre you sure the path you provided for the calling function is correct?\nCould you eventually provide more code, that produces the mentioned error?\n. Hello @sabardotnet.\n\nas the php documentation states here: http://php.net/manual/en/function.getimagesize.php\nunder \"Errors/Exceptions\" \nOn read error, getimagesize() will generate an error of level E_NOTICE\n\nso it seems the problem occurs because the file was not found or could no be read anyway.\n\nAre you sure the path you provided for the calling function is correct?\nCould you eventually provide more code, that produces the mentioned error?\n. ",
    "sabardotnet": "yes i just set error reporting 0 in my php..so fix it.\n. yes i just set error reporting 0 in my php..so fix it.\n. ",
    "lyf845990516": "hi, I'm having the same problem. Do you have a solution now?. hi, I'm having the same problem. Do you have a solution now?. ",
    "wisercapital": "Will there be an update to this? I would really like to see this resolve as my current goalSeek is running very slow due to clearing calculation cache for each iteration. Will there be an update to this? I would really like to see this resolve as my current goalSeek is running very slow due to clearing calculation cache for each iteration. ",
    "adminmoodle": ":( what can i do?, i really need to do, any suggestion \n. ok, its what i had planned to do, but first wanted to try with phpexcel \n\nthanks \n. :( what can i do?, i really need to do, any suggestion \n. ok, its what i had planned to do, but first wanted to try with phpexcel \n\nthanks \n. ",
    "Hak4Kidz": "Hi Everyone,\r\n\r\nHas there been an update to PHPExcel or PHPSpreadsheet that can handle reading a CSV, sorting the data, and writing it to a template XLSX file?\r\n\r\nBTW, great work here at PHPOffice!\r\n\r\nTIA!\r\nDave. Hi Everyone,\r\n\r\nHas there been an update to PHPExcel or PHPSpreadsheet that can handle reading a CSV, sorting the data, and writing it to a template XLSX file?\r\n\r\nBTW, great work here at PHPOffice!\r\n\r\nTIA!\r\nDave. ",
    "zubanst": "Any chance someone looking into this? Additional information: regular Office 2010 native excel file readed correctly.\n. Any chance someone looking into this? Additional information: regular Office 2010 native excel file readed correctly.\n. ",
    "daniel-jann": "I am facing the exact same issue (updating an Excel file having a reference to another excel file) !\n. I am facing the exact same issue (updating an Excel file having a reference to another excel file) !\n. ",
    "hepm860904hsprrr04": "Hi Friend !,\n\nI\u00b4m Marco, I was reading your post and  I have the same problem, I\u00b4d like to know, did you resolve it ?\n\nThanks \n. Hi Friend !,\n\nI\u00b4m Marco, I was reading your post and  I have the same problem, I\u00b4d like to know, did you resolve it ?\n\nThanks \n. ",
    "tangix": "1.7.8 was the last version I had working charts in.\n. @MarkBaker I have a project where I open a template  Excel-file created in Excel. I add some values and setup the graph in it. Save it back to Excel. \nThis works just fine with 1.7.8. In 1.7.9 and 1.8.0 the resulting file is corrupt and the Excel diagnostics points to the chart.\n\nI have sent you some example files.\n. This is the code I am running.\n\n``` php\n$objReader = PHPExcel_IOFactory::createReader(\"Excel2007\");\n\n/** @var PHPExcel $excel */\n$excel = $objReader->load('template_swe.xlsx');\n\n$excel->getActiveSheet()->setCellValue('B19', 193000);\n$excel->getActiveSheet()->setCellValue('B26', 34, 45);\n$excel->getActiveSheet()->setCellValue('B25', 65445);\n$excel->getActiveSheet()->setCellValue('B27', 47600);\n$excel->getActiveSheet()->getStyle('B26')->getNumberFormat()->setFormatCode('0.00');\n$excel->getActiveSheet()->getStyle('B25')->getNumberFormat()->setFormatCode('0');\n\n$excel->getActiveSheet()->setCellValue('F19', 'Ber\u00e4knat i COPCALC. Ort ' . $stadmodell['namn']);\n$excel->getActiveSheet()->setCellValue('F25', 'Ber\u00e4knat i COPCALC. V\u00e4rmepump ');\n$excel->getActiveSheet()->setCellValue('F26', 'Ber\u00e4knat i COPCALC');\n$excel->getActiveSheet()->setCellValue('F27', 'Uppskattat som 17000 * maximal eleffekt');\n$excel->getActiveSheet()->setCellValue('A2', 'COPCALC referens: ');\n\n$excel->getProperties()->setCreator(\"COPCALC \" . \"SED_DEV_ID\")\n    ->setLastModifiedBy(\"Mattias Sandstr\u00f6m\")\n    ->setTitle(\"Ekonomisk Ber\u00e4kning\")\n    ->setSubject(\"Ekonomisk Ber\u00e4kning\")\n    ->setDescription(\"Ekonomisk ber\u00e4kning baserat p\u00e5 resultatet fr\u00e5n COPCALC\");\n\n$excel->getSecurity()->setLockWindows(TRUE);\n$excel->getSecurity()->setLockStructure(TRUE);\n$excel->getSecurity()->setWorkbookPassword(\"PHPExcel\");\n\n// Set sheet security\n\n$excel->getActiveSheet()->getProtection()->setPassword('PHPExcel');\n$excel->getActiveSheet()->getProtection()->setSheet(TRUE); // This should be enabled in order to enable any of the following!\n$excel->getActiveSheet()->getProtection()->setSort(TRUE);\n$excel->getActiveSheet()->getProtection()->setInsertRows(TRUE);\n$excel->getActiveSheet()->getProtection()->setFormatCells(TRUE);\n$excel->getActiveSheet()->getStyle('B10:B15')->getProtection()->setLocked(PHPExcel_Style_Protection::PROTECTION_UNPROTECTED);\n$excel->getActiveSheet()->getStyle('B17:B18')->getProtection()->setLocked(PHPExcel_Style_Protection::PROTECTION_UNPROTECTED);\n$excel->getActiveSheet()->getStyle('B22:B24')->getProtection()->setLocked(PHPExcel_Style_Protection::PROTECTION_UNPROTECTED);\n$excel->getActiveSheet()->getStyle('B27')->getProtection()->setLocked(PHPExcel_Style_Protection::PROTECTION_UNPROTECTED);\n$excel->getActiveSheet()->getStyle('B29')->getProtection()->setLocked(PHPExcel_Style_Protection::PROTECTION_UNPROTECTED);\n\n$excel->setActiveSheetIndex(1);\n$excel->getActiveSheet()->getProtection()->setSheet(TRUE); // This should be enabled in order to enable any of the following!\n$excel->getActiveSheet()->getProtection()->setSort(TRUE);\n$excel->getActiveSheet()->getProtection()->setInsertRows(TRUE);\n$excel->getActiveSheet()->getProtection()->setFormatCells(TRUE);\n\n$excel->setActiveSheetIndex(0);\n\n// Rita upp diagrammet\n$objWorksheet = $excel->getActiveSheet();\n$dataseriesLabels = array(\n    new PHPExcel_Chart_DataSeriesValues('String', 'Kalkyl!$P$3', NULL, 1),\n    new PHPExcel_Chart_DataSeriesValues('String', 'Kalkyl!$Q$3', NULL, 1)\n);\n\n$xAxisTickValues = array(new PHPExcel_Chart_DataSeriesValues('Number', 'Kalkyl!$A$5:$A$54', NULL, 50),);\n$dataSeriesValues = array(\n    new PHPExcel_Chart_DataSeriesValues('Number', 'Kalkyl!$P$5:$P$54', NULL, 50),\n    new PHPExcel_Chart_DataSeriesValues('Number', 'Kalkyl!$Q$5:$Q$54', NULL, 50)\n);\n$dataSeriesValues[0]->setPointMarker('none');\n$dataSeriesValues[1]->setPointMarker('none');\n\n$series1 = new PHPExcel_Chart_DataSeries(\n    PHPExcel_Chart_DataSeries::TYPE_SCATTERCHART,       // plotType\n    NULL,  // plotGrouping\n    range(0, count($dataSeriesValues) - 1),          // plotOrder\n    $dataseriesLabels,                             // plotLabel\n    $xAxisTickValues,                               // plotCategory\n    $dataSeriesValues,                              // plotValues\n    TRUE,\n    PHPExcel_Chart_DataSeries::STYLE_SMOOTHMARKER\n);\n\n$plotarea = new PHPExcel_Chart_PlotArea(NULL, array($series1));\n$legend = new PHPExcel_Chart_Legend(PHPExcel_Chart_Legend::POSITION_RIGHT, NULL, FALSE);\n$title = new PHPExcel_Chart_Title('Real vinst per \u00e5r');\n\n$chart = new PHPExcel_Chart(\n    'chart1',       // name\n    $title,         // title\n    $legend,        // legend\n    $plotarea,      // plotArea\n    TRUE,           // plotVisibleOnly\n    0,              // displayBlanksAs\n    new PHPExcel_Chart_Title('\u00c5r'),           // xAxisLabel\n    new PHPExcel_Chart_Title('Kronor')            // yAxisLabel\n);\n\n$chart->setTopLeftPosition('A32');\n$chart->setBottomRightPosition('M50');\n$objWorksheet->addChart($chart);\n\n$excel->setActiveSheetIndex(0);\n\n$objWriter = PHPExcel_IOFactory::createWriter($excel, \"Excel2007\");\n$objWriter->setIncludeCharts(TRUE);\n$ContentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n$filename = \"output_$v.xlsx\";\n\n$objWriter->save($filename);\n```\n. It's available at the old codeplex site: https://phpexcel.codeplex.com/releases/view/96183\n. 1.7.8 was the last version I had working charts in.\n. @MarkBaker I have a project where I open a template  Excel-file created in Excel. I add some values and setup the graph in it. Save it back to Excel. \nThis works just fine with 1.7.8. In 1.7.9 and 1.8.0 the resulting file is corrupt and the Excel diagnostics points to the chart.\n\nI have sent you some example files.\n. This is the code I am running.\n\n``` php\n$objReader = PHPExcel_IOFactory::createReader(\"Excel2007\");\n\n/** @var PHPExcel $excel */\n$excel = $objReader->load('template_swe.xlsx');\n\n$excel->getActiveSheet()->setCellValue('B19', 193000);\n$excel->getActiveSheet()->setCellValue('B26', 34, 45);\n$excel->getActiveSheet()->setCellValue('B25', 65445);\n$excel->getActiveSheet()->setCellValue('B27', 47600);\n$excel->getActiveSheet()->getStyle('B26')->getNumberFormat()->setFormatCode('0.00');\n$excel->getActiveSheet()->getStyle('B25')->getNumberFormat()->setFormatCode('0');\n\n$excel->getActiveSheet()->setCellValue('F19', 'Ber\u00e4knat i COPCALC. Ort ' . $stadmodell['namn']);\n$excel->getActiveSheet()->setCellValue('F25', 'Ber\u00e4knat i COPCALC. V\u00e4rmepump ');\n$excel->getActiveSheet()->setCellValue('F26', 'Ber\u00e4knat i COPCALC');\n$excel->getActiveSheet()->setCellValue('F27', 'Uppskattat som 17000 * maximal eleffekt');\n$excel->getActiveSheet()->setCellValue('A2', 'COPCALC referens: ');\n\n$excel->getProperties()->setCreator(\"COPCALC \" . \"SED_DEV_ID\")\n    ->setLastModifiedBy(\"Mattias Sandstr\u00f6m\")\n    ->setTitle(\"Ekonomisk Ber\u00e4kning\")\n    ->setSubject(\"Ekonomisk Ber\u00e4kning\")\n    ->setDescription(\"Ekonomisk ber\u00e4kning baserat p\u00e5 resultatet fr\u00e5n COPCALC\");\n\n$excel->getSecurity()->setLockWindows(TRUE);\n$excel->getSecurity()->setLockStructure(TRUE);\n$excel->getSecurity()->setWorkbookPassword(\"PHPExcel\");\n\n// Set sheet security\n\n$excel->getActiveSheet()->getProtection()->setPassword('PHPExcel');\n$excel->getActiveSheet()->getProtection()->setSheet(TRUE); // This should be enabled in order to enable any of the following!\n$excel->getActiveSheet()->getProtection()->setSort(TRUE);\n$excel->getActiveSheet()->getProtection()->setInsertRows(TRUE);\n$excel->getActiveSheet()->getProtection()->setFormatCells(TRUE);\n$excel->getActiveSheet()->getStyle('B10:B15')->getProtection()->setLocked(PHPExcel_Style_Protection::PROTECTION_UNPROTECTED);\n$excel->getActiveSheet()->getStyle('B17:B18')->getProtection()->setLocked(PHPExcel_Style_Protection::PROTECTION_UNPROTECTED);\n$excel->getActiveSheet()->getStyle('B22:B24')->getProtection()->setLocked(PHPExcel_Style_Protection::PROTECTION_UNPROTECTED);\n$excel->getActiveSheet()->getStyle('B27')->getProtection()->setLocked(PHPExcel_Style_Protection::PROTECTION_UNPROTECTED);\n$excel->getActiveSheet()->getStyle('B29')->getProtection()->setLocked(PHPExcel_Style_Protection::PROTECTION_UNPROTECTED);\n\n$excel->setActiveSheetIndex(1);\n$excel->getActiveSheet()->getProtection()->setSheet(TRUE); // This should be enabled in order to enable any of the following!\n$excel->getActiveSheet()->getProtection()->setSort(TRUE);\n$excel->getActiveSheet()->getProtection()->setInsertRows(TRUE);\n$excel->getActiveSheet()->getProtection()->setFormatCells(TRUE);\n\n$excel->setActiveSheetIndex(0);\n\n// Rita upp diagrammet\n$objWorksheet = $excel->getActiveSheet();\n$dataseriesLabels = array(\n    new PHPExcel_Chart_DataSeriesValues('String', 'Kalkyl!$P$3', NULL, 1),\n    new PHPExcel_Chart_DataSeriesValues('String', 'Kalkyl!$Q$3', NULL, 1)\n);\n\n$xAxisTickValues = array(new PHPExcel_Chart_DataSeriesValues('Number', 'Kalkyl!$A$5:$A$54', NULL, 50),);\n$dataSeriesValues = array(\n    new PHPExcel_Chart_DataSeriesValues('Number', 'Kalkyl!$P$5:$P$54', NULL, 50),\n    new PHPExcel_Chart_DataSeriesValues('Number', 'Kalkyl!$Q$5:$Q$54', NULL, 50)\n);\n$dataSeriesValues[0]->setPointMarker('none');\n$dataSeriesValues[1]->setPointMarker('none');\n\n$series1 = new PHPExcel_Chart_DataSeries(\n    PHPExcel_Chart_DataSeries::TYPE_SCATTERCHART,       // plotType\n    NULL,  // plotGrouping\n    range(0, count($dataSeriesValues) - 1),          // plotOrder\n    $dataseriesLabels,                             // plotLabel\n    $xAxisTickValues,                               // plotCategory\n    $dataSeriesValues,                              // plotValues\n    TRUE,\n    PHPExcel_Chart_DataSeries::STYLE_SMOOTHMARKER\n);\n\n$plotarea = new PHPExcel_Chart_PlotArea(NULL, array($series1));\n$legend = new PHPExcel_Chart_Legend(PHPExcel_Chart_Legend::POSITION_RIGHT, NULL, FALSE);\n$title = new PHPExcel_Chart_Title('Real vinst per \u00e5r');\n\n$chart = new PHPExcel_Chart(\n    'chart1',       // name\n    $title,         // title\n    $legend,        // legend\n    $plotarea,      // plotArea\n    TRUE,           // plotVisibleOnly\n    0,              // displayBlanksAs\n    new PHPExcel_Chart_Title('\u00c5r'),           // xAxisLabel\n    new PHPExcel_Chart_Title('Kronor')            // yAxisLabel\n);\n\n$chart->setTopLeftPosition('A32');\n$chart->setBottomRightPosition('M50');\n$objWorksheet->addChart($chart);\n\n$excel->setActiveSheetIndex(0);\n\n$objWriter = PHPExcel_IOFactory::createWriter($excel, \"Excel2007\");\n$objWriter->setIncludeCharts(TRUE);\n$ContentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n$filename = \"output_$v.xlsx\";\n\n$objWriter->save($filename);\n```\n. It's available at the old codeplex site: https://phpexcel.codeplex.com/releases/view/96183\n. ",
    "ZoliQua": "Hi,\n\nCan I try & test the version 1.7.8, whether it works?\n\nThank you,\nZoltan \n. Hi,\n\nCan I try & test the version 1.7.8, whether it works?\n\nThank you,\nZoltan \n. ",
    "PowerGamer1": "@MarkBaker\n\n> If cell A10 contains a dropdown list, then this is cell content, whether you have actively selected an entry from that list or not; therefore row 10 is the highest data row because row 10 contains a dropdown\n\nIn my opinion `getHighestDataRow` should check for an actual \"data\" in the cell, not a \"non-data content\", because there is already a `getHighestColumn` method to check for \"non-data content\".\n. ``` PHP\n    /**\n     * Get highest worksheet row\n     *\n     * @param   string     $column     Return the highest data row for the specified column,\n     *                                     or the highest row of any column if no column letter is passed\n     * @return int Highest row number\n     */\n    public function getHighestRow($column = null)\n\n    /**\n     * Get highest worksheet row that contains data\n     *\n     * @param   string     $column     Return the highest data row for the specified column,\n     *                                     or the highest data row of any column if no column letter is passed\n     * @return string Highest row number that contains data\n     */\n    public function getHighestDataRow($column = null)\n```\n\nNothing in the naming and description (PHPDoc comment) of  `getHighestRow` and `getHighestDataRow` suggests there is a difference based on when it is calculated (during file load or not - why would there be any difference like that anyway?). But instead the current method naming and description suggests that the difference between two methods is in what they check - for any (non-data) content of cell or for actual data within a cell.\n\nSo no wonder there is a confusion - which is yet another reason to do something about it. For example, change the methods to behave as named and described.\n. Since you will not break backward compatibility this cannot be fixed nicely and the only thing that should be done - is properly document existing methods in PHPDoc comments - mentioning there stuff like \"AsReadFromFileThatIsReferencedByAnything\" and \"WhereACellActuallyExists\".\n. @MarkBaker\n\n> If cell A10 contains a dropdown list, then this is cell content, whether you have actively selected an entry from that list or not; therefore row 10 is the highest data row because row 10 contains a dropdown\n\nIn my opinion `getHighestDataRow` should check for an actual \"data\" in the cell, not a \"non-data content\", because there is already a `getHighestColumn` method to check for \"non-data content\".\n. ``` PHP\n    /**\n     * Get highest worksheet row\n     *\n     * @param   string     $column     Return the highest data row for the specified column,\n     *                                     or the highest row of any column if no column letter is passed\n     * @return int Highest row number\n     */\n    public function getHighestRow($column = null)\n\n    /**\n     * Get highest worksheet row that contains data\n     *\n     * @param   string     $column     Return the highest data row for the specified column,\n     *                                     or the highest data row of any column if no column letter is passed\n     * @return string Highest row number that contains data\n     */\n    public function getHighestDataRow($column = null)\n```\n\nNothing in the naming and description (PHPDoc comment) of  `getHighestRow` and `getHighestDataRow` suggests there is a difference based on when it is calculated (during file load or not - why would there be any difference like that anyway?). But instead the current method naming and description suggests that the difference between two methods is in what they check - for any (non-data) content of cell or for actual data within a cell.\n\nSo no wonder there is a confusion - which is yet another reason to do something about it. For example, change the methods to behave as named and described.\n. Since you will not break backward compatibility this cannot be fixed nicely and the only thing that should be done - is properly document existing methods in PHPDoc comments - mentioning there stuff like \"AsReadFromFileThatIsReferencedByAnything\" and \"WhereACellActuallyExists\".\n. ",
    "derekrprice": "I understand what @MarkBaker is saying about backwards compatibility, but I have to agree with @PowerGamer1 (and a number of StackOverflow and other net users), that what `getHighestDataRow` actually does is practically useless.  I don't care if I've applied formatting to the row, I want an efficient way to grab the last one that contains non-blank data without calling getCell 1000 x 26 times myself.  I want the row that a user opening the spreadsheet and just visually looking at it would say is the last row.\r\n\r\nSurely there is an efficient way to do this.  At load time, you must already know if each cell is blank or not, so increment a `MAXNONEMPTYROW` entry appropriately there.  Also easy to update when setting a cell's data.  When clearing cell data, it's a little trickier.  Perhaps set a `RECHECKMAXNONEMPTYROW` flag and lazily calculate a new value for `MAXNONEMPTYROW` when `RECHECKMAXNONEMPTYROW` is set and `getHighestNonEmptyRow` is called?  And similar for `getMaxNonEmptyColumn`, of course.. I copied my last comment to the more recent, still open issue #1302, which is basically about the same problem.. Per issue #874 (I am commenting here because that ticket is closed already), I understand what @MarkBaker is saying about backwards compatibility, but I have to agree with @PowerGamer1 (and a number of StackOverflow and other net users), that what `getHighestDataRow` actually does is practically useless.  I don't care if I've applied formatting to the row, I want an efficient way to grab the last one that contains non-blank data without calling getCell 1000 x 26 times myself.  I want the row that a user opening the spreadsheet and just visually looking at it would say is the last row.\r\n\r\nSurely there is an efficient way to do this.  At load time, you must already know if each cell is blank or not, so increment a `MAXNONEMPTYROW` entry appropriately there.  Also easy to update when setting a cell's data.  When clearing cell data, it's a little trickier.  Perhaps set a `RECHECKMAXNONEMPTYROW` flag and lazily calculate a new value for `MAXNONEMPTYROW` when `RECHECKMAXNONEMPTYROW` is set and `getHighestNonEmptyRow` is called?  And similar for `getMaxNonEmptyColumn`, of course.. @CJDennis Actually, PHPExcel does read the entire file when opened, as I\nsurmised, and we\u2019ve managed to use that fact to write a patch which\nimplements the algorithm I\u2019ve described above to cache the maximum\nnon-empty row. As far as asking PHPExcel for the maximum row using the old\nway goes, it may be O(1), but it counts empty cells which only have\nformatting applied, which, I believe, is the problem that this bug report\nand the other I linked originally attempted to describe.\n\nAnyhow, my algorithm is O(1) most of the time (all the time in our use\ncase) and only O(n^2) in the worst (and unavoidable case). Even then,\nunless the worksheet is totally empty, working backwards from the previous\nmaximum means that it should use many fewer resources than that.\n\nWe\u2019re still testing, but we should be able to submit a pull request next\nweek sometime. Our initial results are that it speeds up our use case by a\nfactor of 10 since we only need to parse cells in a much smaller section of\neach sheet when we can ignore cells with only formatting that was applied\nto empty ranges. Previously, profiling revealed that 60% of our app\u2019s time\nwas spent in getCell and 5/6 of getCell\u2019s time was spent in the Cell\nconstructor. Anyhow, not calling getCell to check whether a cell was empty\nsaved a LOT of time.\n\nOn Fri, Sep 29, 2017 at 6:46 PM CJDennis <notifications@github.com> wrote:\n\n> @derekrprice <https://github.com/derekrprice> The most efficient way is\n> to ask Excel what the maximum row is. It has a time of O(1). Looping over\n> each row has a time of O(n^2) because you have to check every cell in every\n> row. If you know with 100% confidence that the file you're reading is\n> compatible with the first way, you probably don't want to sacrifice the\n> speed. However, if you could get the wrong result, you will want accuracy\n> over speed.\n>\n> As far as I'm aware, PHPExcel does not read every cell when you open the\n> file (because that would add an unnecessary overhead), and instead relies\n> on Excel's meta-data embedded within the file.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/PHPOffice/PHPExcel/issues/1302#issuecomment-333256232>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AFKbAK4r_zQOzTGY4gBAesNL9zwH4DeAks5snXM8gaJpZM4PG_Pp>\n> .\n>\n. I understand what @MarkBaker is saying about backwards compatibility, but I have to agree with @PowerGamer1 (and a number of StackOverflow and other net users), that what `getHighestDataRow` actually does is practically useless.  I don't care if I've applied formatting to the row, I want an efficient way to grab the last one that contains non-blank data without calling getCell 1000 x 26 times myself.  I want the row that a user opening the spreadsheet and just visually looking at it would say is the last row.\r\n\r\nSurely there is an efficient way to do this.  At load time, you must already know if each cell is blank or not, so increment a `MAXNONEMPTYROW` entry appropriately there.  Also easy to update when setting a cell's data.  When clearing cell data, it's a little trickier.  Perhaps set a `RECHECKMAXNONEMPTYROW` flag and lazily calculate a new value for `MAXNONEMPTYROW` when `RECHECKMAXNONEMPTYROW` is set and `getHighestNonEmptyRow` is called?  And similar for `getMaxNonEmptyColumn`, of course.. I copied my last comment to the more recent, still open issue #1302, which is basically about the same problem.. Per issue #874 (I am commenting here because that ticket is closed already), I understand what @MarkBaker is saying about backwards compatibility, but I have to agree with @PowerGamer1 (and a number of StackOverflow and other net users), that what `getHighestDataRow` actually does is practically useless.  I don't care if I've applied formatting to the row, I want an efficient way to grab the last one that contains non-blank data without calling getCell 1000 x 26 times myself.  I want the row that a user opening the spreadsheet and just visually looking at it would say is the last row.\r\n\r\nSurely there is an efficient way to do this.  At load time, you must already know if each cell is blank or not, so increment a `MAXNONEMPTYROW` entry appropriately there.  Also easy to update when setting a cell's data.  When clearing cell data, it's a little trickier.  Perhaps set a `RECHECKMAXNONEMPTYROW` flag and lazily calculate a new value for `MAXNONEMPTYROW` when `RECHECKMAXNONEMPTYROW` is set and `getHighestNonEmptyRow` is called?  And similar for `getMaxNonEmptyColumn`, of course.. @CJDennis Actually, PHPExcel does read the entire file when opened, as I\nsurmised, and we\u2019ve managed to use that fact to write a patch which\nimplements the algorithm I\u2019ve described above to cache the maximum\nnon-empty row. As far as asking PHPExcel for the maximum row using the old\nway goes, it may be O(1), but it counts empty cells which only have\nformatting applied, which, I believe, is the problem that this bug report\nand the other I linked originally attempted to describe.\n\nAnyhow, my algorithm is O(1) most of the time (all the time in our use\ncase) and only O(n^2) in the worst (and unavoidable case). Even then,\nunless the worksheet is totally empty, working backwards from the previous\nmaximum means that it should use many fewer resources than that.\n\nWe\u2019re still testing, but we should be able to submit a pull request next\nweek sometime. Our initial results are that it speeds up our use case by a\nfactor of 10 since we only need to parse cells in a much smaller section of\neach sheet when we can ignore cells with only formatting that was applied\nto empty ranges. Previously, profiling revealed that 60% of our app\u2019s time\nwas spent in getCell and 5/6 of getCell\u2019s time was spent in the Cell\nconstructor. Anyhow, not calling getCell to check whether a cell was empty\nsaved a LOT of time.\n\nOn Fri, Sep 29, 2017 at 6:46 PM CJDennis <notifications@github.com> wrote:\n\n> @derekrprice <https://github.com/derekrprice> The most efficient way is\n> to ask Excel what the maximum row is. It has a time of O(1). Looping over\n> each row has a time of O(n^2) because you have to check every cell in every\n> row. If you know with 100% confidence that the file you're reading is\n> compatible with the first way, you probably don't want to sacrifice the\n> speed. However, if you could get the wrong result, you will want accuracy\n> over speed.\n>\n> As far as I'm aware, PHPExcel does not read every cell when you open the\n> file (because that would add an unnecessary overhead), and instead relies\n> on Excel's meta-data embedded within the file.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/PHPOffice/PHPExcel/issues/1302#issuecomment-333256232>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AFKbAK4r_zQOzTGY4gBAesNL9zwH4DeAks5snXM8gaJpZM4PG_Pp>\n> .\n>\n. ",
    "tzfrs": "Hi,\n\nok. I read on Stackoverflow, that this problem exists, because I'm using Excel5 and I should Use Excel2007. The problem with Excel2007 however is, that everytime I open the `.xlsx` I'm getting an error that the file is not readable and needs to be repaired. How can I fix this?\n. Ok. This problem has been fixed. I didn't use exit after creating the sheet. \n. Hi,\n\nok. I read on Stackoverflow, that this problem exists, because I'm using Excel5 and I should Use Excel2007. The problem with Excel2007 however is, that everytime I open the `.xlsx` I'm getting an error that the file is not readable and needs to be repaired. How can I fix this?\n. Ok. This problem has been fixed. I didn't use exit after creating the sheet. \n. ",
    "salarmehr": "@MarkBaker  yes it is. So, do you confirm the issue? any workaround? \n. @MarkBaker  yes it is. So, do you confirm the issue? any workaround? \n. ",
    "lourdas": "Same here, I want to write some properties in Greek and I get characters like '\u00ce\u0161\u00cf\u201e\u00ce\u00b7\u00ce\u00bd\u00ce\u00bf\u00cf\u201e\u00cf\uf181\u00ce\u00bf\u00cf\u2020\u00ce\u00b9\u00ce\u00ba\u00cf\u0152 \u00ce\u0153\u00ce\u00b7\u00cf\u201e\u00cf\uf181\u00cf\u017d\u00ce\u00bf - \u00ce\u2022\u00ce\u00ba\u00ce\u00bc\u00ce\u00b5\u00cf\u201e\u00ce\u00b1\u00ce\u00bb\u00ce\u00bb\u00ce\u00b5\u00cf\uf18d\u00cf\u0192\u00ce\u00b5\u00ce\u00b9\u00cf\u201a \u00ce\u00b1\u00ce\u00bd\u00ce\u00ac \u00ce\u00a0.\u00ce\u2022.'.\n. I agree with @schultz-it-solutions. PHP is now on 5.6.30. A warning message in the documentation/guide should be enough.. Same here, I want to write some properties in Greek and I get characters like '\u00ce\u0161\u00cf\u201e\u00ce\u00b7\u00ce\u00bd\u00ce\u00bf\u00cf\u201e\u00cf\uf181\u00ce\u00bf\u00cf\u2020\u00ce\u00b9\u00ce\u00ba\u00cf\u0152 \u00ce\u0153\u00ce\u00b7\u00cf\u201e\u00cf\uf181\u00cf\u017d\u00ce\u00bf - \u00ce\u2022\u00ce\u00ba\u00ce\u00bc\u00ce\u00b5\u00cf\u201e\u00ce\u00b1\u00ce\u00bb\u00ce\u00bb\u00ce\u00b5\u00cf\uf18d\u00cf\u0192\u00ce\u00b5\u00ce\u00b9\u00cf\u201a \u00ce\u00b1\u00ce\u00bd\u00ce\u00ac \u00ce\u00a0.\u00ce\u2022.'.\n. I agree with @schultz-it-solutions. PHP is now on 5.6.30. A warning message in the documentation/guide should be enough.. ",
    "Verevival": "Not defined separator in file :)\n[46.zip](https://github.com/PHPOffice/PHPExcel/files/215536/46.zip)\n. Perhaps more correctly be so?\n    protected function checkSeparator()\n    {\n        $line = fgets($this->fileHandle);\n        if ($line === false) {\n            return;\n        }\n$line = trim($line);\n        if ((strlen($line) == 5) && (strpos($line, 'sep=') === 0)) {\n            $this->delimiter = substr($line, 4, 1);\n        } else {\n            return $this->skipBOM();\n       }\n    }\n. Not defined separator in file :)\n[46.zip](https://github.com/PHPOffice/PHPExcel/files/215536/46.zip)\n. Perhaps more correctly be so?\n    protected function checkSeparator()\n    {\n        $line = fgets($this->fileHandle);\n        if ($line === false) {\n            return;\n        }\n$line = trim($line);\n        if ((strlen($line) == 5) && (strpos($line, 'sep=') === 0)) {\n            $this->delimiter = substr($line, 4, 1);\n        } else {\n            return $this->skipBOM();\n       }\n    }\n. ",
    "AndreyNazarchuk": "It happens anytime the save() or fopen() functions run, so I am thinking it has something to do with write permissions, even though i set the perms to 777 for the whole web directory. maybe its some sort of Apache or php config setting that needs to be changed?\n. Nevermind, I forgot to include the current directory\n. It happens anytime the save() or fopen() functions run, so I am thinking it has something to do with write permissions, even though i set the perms to 777 for the whole web directory. maybe its some sort of Apache or php config setting that needs to be changed?\n. Nevermind, I forgot to include the current directory\n. ",
    "BlackBacker": "this solve problem for me -> \n`mb_convert_encoding(html_entity_decode($html_utf8_value), 'HTML-ENTITIES', 'UTF-8')`\n\n`$value = $wizard->toRichTextObject(mb_convert_encoding(html_entity_decode($value), 'HTML-ENTITIES', 'UTF-8'));`\n. this solve problem for me -> \n`mb_convert_encoding(html_entity_decode($html_utf8_value), 'HTML-ENTITIES', 'UTF-8')`\n\n`$value = $wizard->toRichTextObject(mb_convert_encoding(html_entity_decode($value), 'HTML-ENTITIES', 'UTF-8'));`\n. ",
    "pierresh": "@BlackBacker Thanks a lot BlackBacker, your solution solved my issue I faced with Chinese characters.. @BlackBacker Thanks a lot BlackBacker, your solution solved my issue I faced with Chinese characters.. ",
    "zecho": "Sorry, my fault. The extension was installed only on php5. Close the issue. Thank you!\n. Sorry, my fault. The extension was installed only on php5. Close the issue. Thank you!\n. ",
    "LunchBox14": "I just tried that; it didn't make a difference in the output. Same problem.\n. I just tried that; it didn't make a difference in the output. Same problem.\n. ",
    "ivokund": "It seems that the error occurs if filter is applied to the worksheet. \n. It seems that the error occurs if filter is applied to the worksheet. \n. ",
    "dmelk": "Also sometimes BstoreContainer is null and getBSECollection() method produce fatal error. Another workaround is:\n\n```\n$BSEindex = $spContainer->getOPT(0x0104);\nif ($escherWorkbook->getDggContainer()->getBstoreContainer() == null) {\n    break;\n}\n$BSECollection = $escherWorkbook->getDggContainer()->getBstoreContainer()->getBSECollection();\n$BSE = $BSECollection[$BSEindex - 1];\n$blipType = $BSE->getBlipType();\n```\n. Also sometimes BstoreContainer is null and getBSECollection() method produce fatal error. Another workaround is:\n\n```\n$BSEindex = $spContainer->getOPT(0x0104);\nif ($escherWorkbook->getDggContainer()->getBstoreContainer() == null) {\n    break;\n}\n$BSECollection = $escherWorkbook->getDggContainer()->getBstoreContainer()->getBSECollection();\n$BSE = $BSECollection[$BSEindex - 1];\n$blipType = $BSE->getBlipType();\n```\n. ",
    "marcosgdf": "That makes much more sense than I thought.\n\nThanks for the explanation.\n. That makes much more sense than I thought.\n\nThanks for the explanation.\n. ",
    "InstanceOfMichael": "Looks like its an internal library to me.\n. My issue was actually solved by something like `sudo apt-get install zip` if anyone else stumbles upon this. Thank you!\n. Looks like its an internal library to me.\n. My issue was actually solved by something like `sudo apt-get install zip` if anyone else stumbles upon this. Thank you!\n. ",
    "eko3alpha": "I'm seeing this same issue on both PHP5.6 and PHP7.0.9.  I'm using composer and PHPOffice v1.8.1\r\n\r\n    Deprecated: Methods with the same name as their class will not be constructors in a future version of PHP; PclZip has a deprecated constructor in /media/psf/Local/vendor/phpoffice/phpexcel/Classes/PHPExcel/Shared/PCLZip/pclzip.lib.php on line 190\r\n\r\nEven though Im using v 1.8.1 in my project, the code from composer differs from the one available as a zip file.  If you download the zip you will see that this has been fixed.  However in composer it has not.\r\n\r\n\r\n. I'm having the same problem after upgrading to PHP 7.1.2. I needed to increase the memory limit for one of my scripts and ran into this issue the moment we upgraded to PHP 7.1\r\n\r\n@PowerKiKi as much as I would love to use PhpSpreadsheet, that is not an option because of\r\n\r\n```\r\nCould not find package phpoffice/phpspreadsheet at any version for your minimum-stability (stable).\r\n```\r\nAnd also [this](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute)\r\n\r\n````\r\nHowever PhpSpreadsheet is still unstable and not yet released. So if you need stability stick to PHPExcel until this project is released.\r\n````\r\n\r\nThat doesn't leave me much choice but to stick with PHPExcel as much as I'd love to jump to PhpSpreadsheet.  This is a very trivial request, please accept this PR so this could work for all of us that use the latest php version.  I can confirmed that PR will fix the following error on PHP 7.1.2.\r\n\r\n````\r\nA non well formed numeric value encountered in file /vendor/phpoffice/phpexcel/Classes/PHPExcel/Shared/PCLZip/pclzip.lib.php\r\n````\r\n\r\nIn the meantime I've downloaded the package and manually patched it until this issue is fixed.. Yes but the docs even state PhpSpreadsheets is not PRODUCTION ready, where as PHPExcel is.  As per the PhpSpreadsheets doc:\r\n\r\n```\r\nHowever PhpSpreadsheet is still unstable and not yet released. So if you need stability stick to PHPExcel until this project is released.\r\n```\r\n\r\nThis is a very minor PR that would make us PHP 7.1 adopters very happy until PhpSpreadsheets is available for production.. @rachidtarsimi - This is the same issue as\r\n\r\nhttps://github.com/PHPOffice/PHPExcel/pull/1168\r\n\r\nYour only option will be to download and patch this yourself until PhpSpreadsheet is production ready.. I'm seeing this same issue on both PHP5.6 and PHP7.0.9.  I'm using composer and PHPOffice v1.8.1\r\n\r\n    Deprecated: Methods with the same name as their class will not be constructors in a future version of PHP; PclZip has a deprecated constructor in /media/psf/Local/vendor/phpoffice/phpexcel/Classes/PHPExcel/Shared/PCLZip/pclzip.lib.php on line 190\r\n\r\nEven though Im using v 1.8.1 in my project, the code from composer differs from the one available as a zip file.  If you download the zip you will see that this has been fixed.  However in composer it has not.\r\n\r\n\r\n. I'm having the same problem after upgrading to PHP 7.1.2. I needed to increase the memory limit for one of my scripts and ran into this issue the moment we upgraded to PHP 7.1\r\n\r\n@PowerKiKi as much as I would love to use PhpSpreadsheet, that is not an option because of\r\n\r\n```\r\nCould not find package phpoffice/phpspreadsheet at any version for your minimum-stability (stable).\r\n```\r\nAnd also [this](https://github.com/PHPOffice/PhpSpreadsheet#want-to-contribute)\r\n\r\n````\r\nHowever PhpSpreadsheet is still unstable and not yet released. So if you need stability stick to PHPExcel until this project is released.\r\n````\r\n\r\nThat doesn't leave me much choice but to stick with PHPExcel as much as I'd love to jump to PhpSpreadsheet.  This is a very trivial request, please accept this PR so this could work for all of us that use the latest php version.  I can confirmed that PR will fix the following error on PHP 7.1.2.\r\n\r\n````\r\nA non well formed numeric value encountered in file /vendor/phpoffice/phpexcel/Classes/PHPExcel/Shared/PCLZip/pclzip.lib.php\r\n````\r\n\r\nIn the meantime I've downloaded the package and manually patched it until this issue is fixed.. Yes but the docs even state PhpSpreadsheets is not PRODUCTION ready, where as PHPExcel is.  As per the PhpSpreadsheets doc:\r\n\r\n```\r\nHowever PhpSpreadsheet is still unstable and not yet released. So if you need stability stick to PHPExcel until this project is released.\r\n```\r\n\r\nThis is a very minor PR that would make us PHP 7.1 adopters very happy until PhpSpreadsheets is available for production.. @rachidtarsimi - This is the same issue as\r\n\r\nhttps://github.com/PHPOffice/PHPExcel/pull/1168\r\n\r\nYour only option will be to download and patch this yourself until PhpSpreadsheet is production ready.. ",
    "danielgp": "> Are they really uppercase characters? Or simply lowercase characters styled as uppercase?\n> I meant superscript, not uppercase, apologies for my bad/rushed English.\n. > Are they really uppercase characters? Or simply lowercase characters styled as uppercase?\n> I meant superscript, not uppercase, apologies for my bad/rushed English.\n. ",
    "Bird87ZA": "Well it's just styling that's been added in this case. As soon as I find a case where styling is changed, I'll add it here as well. However it has happened before.\n\nHere is the [original file](https://www.dropbox.com/s/bzb2oynuj996551/DFM%20Cleaning.Weekly%20Leave.xlsx?dl=0)\n. Any ideas on this? Is it a PHPExcel issue or is it the way the excel sheet is set up?\n. Nothing Yet. I haven't had any feedback from @MarkBaker but I've given up on looking for the issue. I can't pinpoint whether it's a PHPExcel issue or the way the Excel sheet is set up.. Well it's just styling that's been added in this case. As soon as I find a case where styling is changed, I'll add it here as well. However it has happened before.\n\nHere is the [original file](https://www.dropbox.com/s/bzb2oynuj996551/DFM%20Cleaning.Weekly%20Leave.xlsx?dl=0)\n. Any ideas on this? Is it a PHPExcel issue or is it the way the excel sheet is set up?\n. Nothing Yet. I haven't had any feedback from @MarkBaker but I've given up on looking for the issue. I can't pinpoint whether it's a PHPExcel issue or the way the Excel sheet is set up.. ",
    "selva987": "I have the same issue when I try to copy the sheet from [this file](https://github.com/PHPOffice/PHPExcel/files/1246918/3.xlsx)\r\n\r\n. I have the same issue when I try to copy the sheet from [this file](https://github.com/PHPOffice/PHPExcel/files/1246918/3.xlsx)\r\n\r\n. ",
    "KKSzymanowski": "Hello?\n\nShould I create a Pull Request? Would you merge it?\n. Hello?\n\nShould I create a Pull Request? Would you merge it?\n. ",
    "egroj55": "Ok, thanks for the explanation.\nChanged to \"phpoffice/phpexcel\": \"^1.8\",\nWorks great!\n. Ok, thanks for the explanation.\nChanged to \"phpoffice/phpexcel\": \"^1.8\",\nWorks great!\n. ",
    "gvanbeck": "+1. +1. ",
    "jeroencornelissen": "+1. +1. ",
    "Kleppo": "+1. +1. ",
    "MichielDilissen": "+1. +1. ",
    "cvoysey": "You're right. How would you typically deal with a version issue like this? In this case it could check for both, which would work, but add code that would be redundant if the project were to ever drop support for older PHP versions.\n. You're right. How would you typically deal with a version issue like this? In this case it could check for both, which would work, but add code that would be redundant if the project were to ever drop support for older PHP versions.\n. ",
    "jurchiks": "5.3 and 5.4 are both expired, and 5.5 support ends in 1 month (http://php.net/supported-versions.php), you shouldn't support expired versions of PHP. If everyone supports outdated versions, then crappy developers have no incentive to upgrade.\n\nI have long switched to PHP7 for all my projects, but apparently your library is not forward-compatible (https://github.com/PHPOffice/PHPExcel/issues/890). This constructor syntax was introduced in PHP 5.0, so it can easily be upgraded to fix this issue.\n. 5.3 and 5.4 are both expired, and 5.5 support ends in 1 month (http://php.net/supported-versions.php), you shouldn't support expired versions of PHP. If everyone supports outdated versions, then crappy developers have no incentive to upgrade.\n\nI have long switched to PHP7 for all my projects, but apparently your library is not forward-compatible (https://github.com/PHPOffice/PHPExcel/issues/890). This constructor syntax was introduced in PHP 5.0, so it can easily be upgraded to fix this issue.\n. ",
    "tiria": "Adding `$displayBlanksAs = self::DISPLAY_BLANKS_AS_GAP` is necessary to not break the modified Excel2007 writer (reader is not a problem cause already retrieve the good `$displayBlanksAs` value, but this value was never write with the old Excel2007 writer), if previous default value `$displayBlanksAs = '0'` is passed to the writer, an error occur cause `'0'` is not a valid displayBlanksAs value for excel. However, to maintain backward compatibility, I force value to be a valid string for excel chart (`'gap'`,`'span'` or `'zero'`), see [ST_DispBlanksAs details](https://msdn.microsoft.com/en-us/library/dd943839%28v=office.12%29.aspx) and [dispBlanksAs default values](https://msdn.microsoft.com/en-us/library/ff529640%28v=office.12%29.aspx).\n\nAlso, I see that i pulled a bad version of PHPExcel_Chart class with a basic error in it (fixed).\n. Adding `$displayBlanksAs = self::DISPLAY_BLANKS_AS_GAP` is necessary to not break the modified Excel2007 writer (reader is not a problem cause already retrieve the good `$displayBlanksAs` value, but this value was never write with the old Excel2007 writer), if previous default value `$displayBlanksAs = '0'` is passed to the writer, an error occur cause `'0'` is not a valid displayBlanksAs value for excel. However, to maintain backward compatibility, I force value to be a valid string for excel chart (`'gap'`,`'span'` or `'zero'`), see [ST_DispBlanksAs details](https://msdn.microsoft.com/en-us/library/dd943839%28v=office.12%29.aspx) and [dispBlanksAs default values](https://msdn.microsoft.com/en-us/library/ff529640%28v=office.12%29.aspx).\n\nAlso, I see that i pulled a bad version of PHPExcel_Chart class with a basic error in it (fixed).\n. ",
    "decadence": "@Ashok2507 \r\nThe same issue for me, have you any solution?. @Ashok2507 \r\nThe same issue for me, have you any solution?. ",
    "erheme318": "Thanks for your quick reply.\nOk, I see.\n\n> that's why I opened up the call for comments on gitter about a minimum 5.5 version for the 1.9 branch\n\nSo that means, I should request this PR for `1.9`, right ?\n. So what do you think about a dedicated branch (for example `php5.5+`) for this problem ?\nHave you guys already  discussed about it, or not ? Otherwise, IMO it's quiet hard to maintain conflict between versions.\n. Thanks for your quick reply.\nOk, I see.\n\n> that's why I opened up the call for comments on gitter about a minimum 5.5 version for the 1.9 branch\n\nSo that means, I should request this PR for `1.9`, right ?\n. So what do you think about a dedicated branch (for example `php5.5+`) for this problem ?\nHave you guys already  discussed about it, or not ? Otherwise, IMO it's quiet hard to maintain conflict between versions.\n. ",
    "patchlog": "I'm having the same problem. Setting the size to something above 0 works but setting to -1 doesn't set it to auto. \n. I'm having the same problem. Setting the size to something above 0 works but setting to -1 doesn't set it to auto. \n. ",
    "fitorec": "[:+1: This feature is already implemented.](https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Reader/HTML.php#L495)\n\n``` php\n$loaded = $dom->loadHTML(mb_convert_encoding($this->securityScanFile($pFilename), 'HTML-ENTITIES', 'UTF-8'));\n```\n. [:+1: This feature is already implemented.](https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Reader/HTML.php#L495)\n\n``` php\n$loaded = $dom->loadHTML(mb_convert_encoding($this->securityScanFile($pFilename), 'HTML-ENTITIES', 'UTF-8'));\n```\n. ",
    "Aligan": "Help me! round() not working\n. Help me! round() not working\n. ",
    "brutalcrozt": "My idea is to write monthly report, so i use excel file to create the new one.\r\nBut this is what i got\r\n![untitled](https://user-images.githubusercontent.com/3001652/29870674-9e5115f6-8d3d-11e7-8081-c1e76ee06f3f.png)\r\n. My idea is to write monthly report, so i use excel file to create the new one.\r\nBut this is what i got\r\n![untitled](https://user-images.githubusercontent.com/3001652/29870674-9e5115f6-8d3d-11e7-8081-c1e76ee06f3f.png)\r\n. ",
    "MichaelTayeprime012": "![a](https://user-images.githubusercontent.com/32354254/32330524-9a91c036-bf9d-11e7-97bd-bcd39a4e2ad5.PNG)\r\n. same problem Bro how to solve it and i need to add 3291 row and it add 1149 only how to solve this one also. ![a](https://user-images.githubusercontent.com/32354254/32330524-9a91c036-bf9d-11e7-97bd-bcd39a4e2ad5.PNG)\r\n. same problem Bro how to solve it and i need to add 3291 row and it add 1149 only how to solve this one also. ",
    "marcellribeiro": "I have a same problem.. Help please!\n. I have a same problem.. Help please!\n. ",
    "cdburgess": "Not required.\n. Not required.\n. ",
    "Oluwafemikorede": "This is my code\n\n```\n$objPHPExcel->getActiveSheet()->setCellValueExplicit('E5', ' ',  PHPExcel_Cell_DataType::TYPE_STRING);\n```\n. This is my code\n\n```\n$objPHPExcel->getActiveSheet()->setCellValueExplicit('E5', ' ',  PHPExcel_Cell_DataType::TYPE_STRING);\n```\n. ",
    "johnkary": "In 1.8 this constant is here: https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Style/NumberFormat.php#L45\n\nIn 1.9 this constant is here:\nhttps://github.com/PHPOffice/PHPExcel/blob/1.9/src/PhpSpreadsheet/Style/NumberFormat.php#L47\n\nIn my opinion changing this would be a backwards compatibility break if done in the 1.8 branch. If a developer used the constant `FORMAT_DATE_DDMMYYYY` they should expect it to remain the same within a single version.\n\nSince 1.9 is still in development this change could be made and documented as a BC break.\n. The [Open Document Format for Office Applications (OpenDocument) Version 1.2 Specification](http://docs.oasis-open.org/office/v1.2/OpenDocument-v1.2.html) contains [Section 3.4 Encryption](http://docs.oasis-open.org/office/v1.2/os/OpenDocument-v1.2-os-part3.html#__RefHeading__752811_826425813) which appears to outline how this feature could be implemented by someone adding features to PHPExcel.\n\nAs of 1.8.1 it doesn't look like PHPExcel supports this functionality, and this ticket should be its feature request.\n. Hi @sirio3mil. Thanks for updating your ticket that the problem was fixed in a later version. This will probably help someone in the future! What would you think about closing this issue since it has been fixed?\n. @PatrickRose The large log file may be due to your PHP configuration's logging verbosity. The PHP configuration is often in a `php.ini` file whose location varies according to SAPI. Check PHP's [The configuration file](http://php.net/manual/en/configuration.file.php) documentation for more info.\n\nLook for the directive [`error_reporting`](http://php.net/manual/en/function.error-reporting.php) for more information. This isn't something controlled specifically by PHPExcel but something you control in your environment.\n\nWhere PHPExcel might be able to change is instead using code that does not emit warning/error messages. Could you supply some of the warning messages?\n. In 1.8 this constant is here: https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Style/NumberFormat.php#L45\n\nIn 1.9 this constant is here:\nhttps://github.com/PHPOffice/PHPExcel/blob/1.9/src/PhpSpreadsheet/Style/NumberFormat.php#L47\n\nIn my opinion changing this would be a backwards compatibility break if done in the 1.8 branch. If a developer used the constant `FORMAT_DATE_DDMMYYYY` they should expect it to remain the same within a single version.\n\nSince 1.9 is still in development this change could be made and documented as a BC break.\n. The [Open Document Format for Office Applications (OpenDocument) Version 1.2 Specification](http://docs.oasis-open.org/office/v1.2/OpenDocument-v1.2.html) contains [Section 3.4 Encryption](http://docs.oasis-open.org/office/v1.2/os/OpenDocument-v1.2-os-part3.html#__RefHeading__752811_826425813) which appears to outline how this feature could be implemented by someone adding features to PHPExcel.\n\nAs of 1.8.1 it doesn't look like PHPExcel supports this functionality, and this ticket should be its feature request.\n. Hi @sirio3mil. Thanks for updating your ticket that the problem was fixed in a later version. This will probably help someone in the future! What would you think about closing this issue since it has been fixed?\n. @PatrickRose The large log file may be due to your PHP configuration's logging verbosity. The PHP configuration is often in a `php.ini` file whose location varies according to SAPI. Check PHP's [The configuration file](http://php.net/manual/en/configuration.file.php) documentation for more info.\n\nLook for the directive [`error_reporting`](http://php.net/manual/en/function.error-reporting.php) for more information. This isn't something controlled specifically by PHPExcel but something you control in your environment.\n\nWhere PHPExcel might be able to change is instead using code that does not emit warning/error messages. Could you supply some of the warning messages?\n. ",
    "mmiat": "and how to print date as \"dd/mm/yyyy\" ? can I set a custom format? thanks\n\nEDIT: solved adding \n    const FORMAT_DATE_DDMMYYYY2           = 'dd/mm/yyyy';\nin NumberFormat.php\n. and how to print date as \"dd/mm/yyyy\" ? can I set a custom format? thanks\n\nEDIT: solved adding \n    const FORMAT_DATE_DDMMYYYY2           = 'dd/mm/yyyy';\nin NumberFormat.php\n. ",
    "DavidGarciaCat": "@Quix0r That may help, yes, thanks for the link.\nI'll run some tests, and let's see if is enough for our CEO.\n\nCheers,\n. I have been testing this feature, based on the example file, but unfortunately is not working: when we generate the Excel file, this one is not asking for the Password to open the file and display all details. Any other idea to solve this problem? Thanks,\n. Hi @LauraBa given the ticket is still open and there are no comments from a PHPOffice/PHPExcel member team about this implementation we must assume it's still pending.\n. @Quix0r That may help, yes, thanks for the link.\nI'll run some tests, and let's see if is enough for our CEO.\n\nCheers,\n. I have been testing this feature, based on the example file, but unfortunately is not working: when we generate the Excel file, this one is not asking for the Password to open the file and display all details. Any other idea to solve this problem? Thanks,\n. Hi @LauraBa given the ticket is still open and there are no comments from a PHPOffice/PHPExcel member team about this implementation we must assume it's still pending.\n. ",
    "ranieresantos": "Ol\u00e1, \n\nSabem me responder quando a nova vers\u00e3o estar\u00e1 dispon\u00edvel para download ?\n. Ol\u00e1, \n\nSabem me responder quando a nova vers\u00e3o estar\u00e1 dispon\u00edvel para download ?\n. ",
    "LauraBa": "Hi,\nsomething new about this functionality?\n. Hi,\nsomething new about this functionality?\n. ",
    "RubenMartins": "Any updates on this feature?. Any updates on this feature?. ",
    "Antoniossss": "hard tomnsay, but if I open generated file in LibreOffice and save it in\nthe same format without any changes, internaln structure of the file is\nverh different then the generated one\n\n13.08.2016 13:12 \"Mark Baker\" notifications@github.com napisa\u0142(a):\n\n> Well perhaps there is a problem with the 3rd party invoicing application?\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n. hard tomnsay, but if I open generated file in LibreOffice and save it in\nthe same format without any changes, internaln structure of the file is\nverh different then the generated one\n\n13.08.2016 13:12 \"Mark Baker\" notifications@github.com napisa\u0142(a):\n\n> Well perhaps there is a problem with the 3rd party invoicing application?\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n. ",
    "nelem": "This is a date and was entered as a date by the user. It show as dataType=n with decimal value 42337. In Excel the format is a Date formatted in a regional date time setting. I believe it was created in Excel (on customer's site) but not certain. I cannot send the original sheet and only have Excel 2007 which would re-write the file if I edited it.\n. Is this what you need? [$-F800]dddd, mmmm dd, yyyy\n. This is a date and was entered as a date by the user. It show as dataType=n with decimal value 42337. In Excel the format is a Date formatted in a regional date time setting. I believe it was created in Excel (on customer's site) but not certain. I cannot send the original sheet and only have Excel 2007 which would re-write the file if I edited it.\n. Is this what you need? [$-F800]dddd, mmmm dd, yyyy\n. ",
    "ratenfanger": "I have exactly the same problem. I did some digging and found out that the problem is introduced in commit [31d60ad524e6d6351af44019518cef58aea48a6c](https://github.com/PHPOffice/PHPExcel/commit/31d60ad524e6d6351af44019518cef58aea48a6c) by @MarkBaker. When reverting the change in the getStyle method the problem went away.\n\nI have absolutely no background in the PHPExcel library so I can't see if the reverting is a good or bad thing. It looks like it is a problem with the getStyle method on the worksheet. \n\nMy sheet is also confidential so I can't send it for debugging purposes. I would be glad if I can help you with some debugging.\n. I have exactly the same problem. I did some digging and found out that the problem is introduced in commit [31d60ad524e6d6351af44019518cef58aea48a6c](https://github.com/PHPOffice/PHPExcel/commit/31d60ad524e6d6351af44019518cef58aea48a6c) by @MarkBaker. When reverting the change in the getStyle method the problem went away.\n\nI have absolutely no background in the PHPExcel library so I can't see if the reverting is a good or bad thing. It looks like it is a problem with the getStyle method on the worksheet. \n\nMy sheet is also confidential so I can't send it for debugging purposes. I would be glad if I can help you with some debugging.\n. ",
    "Amamatthew": "The Newest bug:\nI add this line below to set the default font for $objPHPExcel\n**$objPHPExcel->getDefaultStyle()->getFont()->setName('simsun');**\nBut there's something wrong strange\u2014\u2014 the headline of column name was goned.\n. The Newest bug:\nI add this line below to set the default font for $objPHPExcel\n**$objPHPExcel->getDefaultStyle()->getFont()->setName('simsun');**\nBut there's something wrong strange\u2014\u2014 the headline of column name was goned.\n. ",
    "DawTaylor": "I have the following error on Mautic. But that may be due to a faulty implementation on their parts, since there were another errors after trying this out.\n\nI thought it would fix the problem, but it didn't\n\n```\n[Tue Jul 19 16:47:28.732454 2016] [:error] [pid 5525] [client 189.127.247.48:63012] PHP Fatal error:  require_once(): Failed opening required 'PHPEXCEL_ROOTPHPExcel/Shared/PCLZip/pclzip.lib.php' (include_path='/var/www/html/mautic/vendor/phpunit/php-file-iterator:.:/usr/share/php') in /var/www/html/mautic/vendor/phpoffice/phpexcel/Classes/PHPExcel/Shared/ZipArchive.php on line 31, referer: http://relacionamento.aptec.com.br/s/config/edit\n```\n. I have the following error on Mautic. But that may be due to a faulty implementation on their parts, since there were another errors after trying this out.\n\nI thought it would fix the problem, but it didn't\n\n```\n[Tue Jul 19 16:47:28.732454 2016] [:error] [pid 5525] [client 189.127.247.48:63012] PHP Fatal error:  require_once(): Failed opening required 'PHPEXCEL_ROOTPHPExcel/Shared/PCLZip/pclzip.lib.php' (include_path='/var/www/html/mautic/vendor/phpunit/php-file-iterator:.:/usr/share/php') in /var/www/html/mautic/vendor/phpoffice/phpexcel/Classes/PHPExcel/Shared/ZipArchive.php on line 31, referer: http://relacionamento.aptec.com.br/s/config/edit\n```\n. ",
    "TheoBaart": "I  was experiencing the same issues with my scatterplots. I think I found a solution to it:\n\nIn `33chartcreate-scatter.php` building the dataseries is given as follows:\n\n``` php\n$series = new PHPExcel_Chart_DataSeries(\n    PHPExcel_Chart_DataSeries::TYPE_SCATTERCHART,   // plotType\n    NULL,                                           // plotGrouping (Scatter charts don't have any grouping)\n    range(0, count($dataSeriesValues)-1),           // plotOrder\n    $dataSeriesLabels,                              // plotLabel\n    $xAxisTickValues,                               // plotCategory\n    $dataSeriesValues,                              // plotValues\n    NULL,                                           // smooth line\n    PHPExcel_Chart_DataSeries::STYLE_LINEMARKER     // plotStyle\n);\n```\n\nHowever, if you look in the source code `PHPExcel/Chart/DataSeries.php` shows that the constructor for a `PHPExcel_Chart_DataSeries` has an extra element (`$plotDirection`) between `$plotValues` and `$smootLine`\n\n``` php\npublic function __construct(\n    $plotType = null, \n    $plotGrouping = null, \n    $plotOrder = array(), \n    $plotLabel = array(),\n    $plotCategory = array(), \n    $plotValues = array(), \n    $plotDirection = null, \n    $smoothLine = null, \n    $plotStyle = null)\n    {\n   /* The constructor code */\n}\n```\n\nSo if you update your `$series` to look as follows (note the inserted `plotDirection` )it should work:\n\n``` php\n$series = new PHPExcel_Chart_DataSeries(\n    PHPExcel_Chart_DataSeries::TYPE_SCATTERCHART,   // plotType\n    NULL,                                           // plotGrouping (Scatter charts don't have any grouping)\n    range(0, count($dataSeriesValues)-1),           // plotOrder\n    $dataSeriesLabels,                              // plotLabel\n    $xAxisTickValues,                               // plotCategory\n    $dataSeriesValues,                              // plotValues\n    NULL,                                           // plotDirection\n    NULL,                                           // smooth line\n    PHPExcel_Chart_DataSeries::STYLE_LINEMARKER     // plotStyle\n);\n```\n\nI quickly looked at `33chartcreate-radar.php` and it is also missing the `$plotDirection` field, so I believe the same fix should work for radar plots as well. \n. I  was experiencing the same issues with my scatterplots. I think I found a solution to it:\n\nIn `33chartcreate-scatter.php` building the dataseries is given as follows:\n\n``` php\n$series = new PHPExcel_Chart_DataSeries(\n    PHPExcel_Chart_DataSeries::TYPE_SCATTERCHART,   // plotType\n    NULL,                                           // plotGrouping (Scatter charts don't have any grouping)\n    range(0, count($dataSeriesValues)-1),           // plotOrder\n    $dataSeriesLabels,                              // plotLabel\n    $xAxisTickValues,                               // plotCategory\n    $dataSeriesValues,                              // plotValues\n    NULL,                                           // smooth line\n    PHPExcel_Chart_DataSeries::STYLE_LINEMARKER     // plotStyle\n);\n```\n\nHowever, if you look in the source code `PHPExcel/Chart/DataSeries.php` shows that the constructor for a `PHPExcel_Chart_DataSeries` has an extra element (`$plotDirection`) between `$plotValues` and `$smootLine`\n\n``` php\npublic function __construct(\n    $plotType = null, \n    $plotGrouping = null, \n    $plotOrder = array(), \n    $plotLabel = array(),\n    $plotCategory = array(), \n    $plotValues = array(), \n    $plotDirection = null, \n    $smoothLine = null, \n    $plotStyle = null)\n    {\n   /* The constructor code */\n}\n```\n\nSo if you update your `$series` to look as follows (note the inserted `plotDirection` )it should work:\n\n``` php\n$series = new PHPExcel_Chart_DataSeries(\n    PHPExcel_Chart_DataSeries::TYPE_SCATTERCHART,   // plotType\n    NULL,                                           // plotGrouping (Scatter charts don't have any grouping)\n    range(0, count($dataSeriesValues)-1),           // plotOrder\n    $dataSeriesLabels,                              // plotLabel\n    $xAxisTickValues,                               // plotCategory\n    $dataSeriesValues,                              // plotValues\n    NULL,                                           // plotDirection\n    NULL,                                           // smooth line\n    PHPExcel_Chart_DataSeries::STYLE_LINEMARKER     // plotStyle\n);\n```\n\nI quickly looked at `33chartcreate-radar.php` and it is also missing the `$plotDirection` field, so I believe the same fix should work for radar plots as well. \n. ",
    "pavankumarkatakam": "I too changed the file path but after that it is saying another error.\n\n`\nFailed opening required '/var/www/api.elivio/releases/20151228212939/vendor/dompdf/dompdf/lib/php-font-lib/src/FontLib/Autoloader.php' (include_path='.:/usr/share/php:/usr/share/pear::/var/www/api.elivio/releases/20151228212939/vendor/dompdf/dompdf/') 64 32 /var/www/api.elivio/releases/20151228212939/vendor/dompdf/dompdf/autoload.inc.php`\n. Dom pdf lib with 0.7.0 version is not compatible with this package.\n. I too changed the file path but after that it is saying another error.\n\n`\nFailed opening required '/var/www/api.elivio/releases/20151228212939/vendor/dompdf/dompdf/lib/php-font-lib/src/FontLib/Autoloader.php' (include_path='.:/usr/share/php:/usr/share/pear::/var/www/api.elivio/releases/20151228212939/vendor/dompdf/dompdf/') 64 32 /var/www/api.elivio/releases/20151228212939/vendor/dompdf/dompdf/autoload.inc.php`\n. Dom pdf lib with 0.7.0 version is not compatible with this package.\n. ",
    "ellej16": "@pavankumarkatakam with regards to your another error I think it has something to do with this issue ..?\r\n\r\nEncountered this snag while playing around with maatwebsites export to pdf too:\r\nhttps://github.com/dompdf/dompdf/issues/636. @pavankumarkatakam with regards to your another error I think it has something to do with this issue ..?\r\n\r\nEncountered this snag while playing around with maatwebsites export to pdf too:\r\nhttps://github.com/dompdf/dompdf/issues/636. ",
    "lubberscorrado": "if you don't want to fork PhpExcel just to fix that and have Dompdf also included via composer, i solved it by creating file \"dompdf_config.inc.php\" (containing the following code) manually somewhere in your own repo-folder (not within the dompdf composer package)  and set the $rendererLibraryPath to my folder where that file resides. Everything else is handled by composer anyway\r\n\r\n```php\r\n<?php\r\n//it's just here to make the composer package of phpexcel work with the composer package of dompdf flawlessly\r\n\r\n//php excel has Uppercase class hardcoded ...\r\nclass DOMPDF extends \\Dompdf\\Dompdf{\r\n\r\n}\r\n\r\n```. if you don't want to fork PhpExcel just to fix that and have Dompdf also included via composer, i solved it by creating file \"dompdf_config.inc.php\" (containing the following code) manually somewhere in your own repo-folder (not within the dompdf composer package)  and set the $rendererLibraryPath to my folder where that file resides. Everything else is handled by composer anyway\r\n\r\n```php\r\n<?php\r\n//it's just here to make the composer package of phpexcel work with the composer package of dompdf flawlessly\r\n\r\n//php excel has Uppercase class hardcoded ...\r\nclass DOMPDF extends \\Dompdf\\Dompdf{\r\n\r\n}\r\n\r\n```. ",
    "JanGalek": "I have too this problem, but when you use AllBorders, you will have bordered aside cell only.\n. I have too this problem, but when you use AllBorders, you will have bordered aside cell only.\n. ",
    "woodzeng": "sorry,I imported more than 1 thousand data, but some of the data is wrong, what is the reason for it?\n. I put the Excel data into the database, most of them are correct, but some of the data error, as shown in the picture, the sixth line of data is not always correct, thank you for your reply.\n. The first picture is the data in the excel, the second picture is the data in the database after import ,thank you~\n. sorry\uff0cIs the fifth line\n-1930.50|0.00|\u501f|40050.31\nBecome this way after import\n0.00|-1930.50|0|0\n. Strangely, most of the data are correct.\n. Have done\uff0cThank you\n. sorry,I imported more than 1 thousand data, but some of the data is wrong, what is the reason for it?\n. I put the Excel data into the database, most of them are correct, but some of the data error, as shown in the picture, the sixth line of data is not always correct, thank you for your reply.\n. The first picture is the data in the excel, the second picture is the data in the database after import ,thank you~\n. sorry\uff0cIs the fifth line\n-1930.50|0.00|\u501f|40050.31\nBecome this way after import\n0.00|-1930.50|0|0\n. Strangely, most of the data are correct.\n. Have done\uff0cThank you\n. ",
    "wskeee": "I found Zip is included by default.\nuse class_exists('ZipArchive'); //result true\nBut I don't know how to check whether the php_xml.dll is normal or not.\n. I had found the question! =_=!\n. I found Zip is included by default.\nuse class_exists('ZipArchive'); //result true\nBut I don't know how to check whether the php_xml.dll is normal or not.\n. I had found the question! =_=!\n. ",
    "shubaivan": "I find :)\n\n```\nconvert boolean Whether to convert this file to the corresponding Google Docs format. (Default: false)\n\n    $insertArray = [\n        'mimeType' => $fileUpload->getMimeType(),\n        'uploadType' => 'media',\n        'data' => file_get_contents($fileUpload),\n        'convert' => true\n    ];\n```\n. I find :)\n\n```\nconvert boolean Whether to convert this file to the corresponding Google Docs format. (Default: false)\n\n    $insertArray = [\n        'mimeType' => $fileUpload->getMimeType(),\n        'uploadType' => 'media',\n        'data' => file_get_contents($fileUpload),\n        'convert' => true\n    ];\n```\n. ",
    "Gigabyte1979": "Hi,\nThank you, All, for your Help!\nEverything works fine!\n\nHave a nice day!\n. Hi,\nThank you, All, for your Help!\nEverything works fine!\n\nHave a nice day!\n. ",
    "chictom": "When will this change be updated?. When will this change be updated?. ",
    "NoMan2000": "Just so you can close this issue out, the issue was that the file was being delivered via stream, so it is only in PHPs temp storage.  This has no data for what file type, the name will be one of PHPs like `tmp/foo`, so without an extension, the `PHPExcel_Autoloader::load()` went through a loop trying to check everything to see what it could load successfully.  \r\n\r\nThe solution for us was simply to append the file type as a separate field before sending it to process like this.\r\n\r\n```\r\n    /**\r\n     * @param  FileUploader $file\r\n     * @return ImportUsers\r\n     */\r\n    public function setReader(FileUploader $file)\r\n    {\r\n        $extension = mb_strtolower(array_get(pathinfo($file->getNewName()), 'extension'));\r\n        if ($extension) {\r\n            $this->reader = $this->checkExtensionBeforeLoading($extension, $file->getRealPath());\r\n        }\r\n        if (!$this->reader) {\r\n            $this->reader = PHPExcel_IOFactory::load($file->getRealPath());\r\n        }\r\n        return $this;\r\n    }\r\n\r\n/**\r\n     * @param  $extension\r\n     * @param  $file\r\n     * @return null|PHPExcel\r\n     */\r\n    public function checkExtensionBeforeLoading($extension, $file)\r\n    {\r\n        $extensionType = $reader = null;\r\n        switch ($extension) {\r\n            case 'xlsx': //    Excel (OfficeOpenXML) Spreadsheet\r\n            case 'xlsm': //    Excel (OfficeOpenXML) Macro Spreadsheet (macros will be discarded)\r\n            case 'xltx': //    Excel (OfficeOpenXML) Template\r\n            case 'xltm': //    Excel (OfficeOpenXML) Macro Template (macros will be discarded)\r\n                $extensionType = 'Excel2007';\r\n                break;\r\n            case 'xls': //    Excel (BIFF) Spreadsheet\r\n            case 'xlt': //    Excel (BIFF) Template\r\n                $extensionType = 'Excel5';\r\n                break;\r\n            case 'ods': //    Open/Libre Offic Calc\r\n            case 'ots': //    Open/Libre Offic Calc Template\r\n                $extensionType = 'OOCalc';\r\n                break;\r\n            case 'slk':\r\n                $extensionType = 'SYLK';\r\n                break;\r\n            case 'xml': //    Excel 2003 SpreadSheetML\r\n                $extensionType = 'Excel2003XML';\r\n                break;\r\n            case 'gnumeric':\r\n                $extensionType = 'Gnumeric';\r\n                break;\r\n            case 'htm':\r\n            case 'html':\r\n                $extensionType = 'HTML';\r\n                break;\r\n            case 'csv':\r\n                // Do nothing\r\n                // We must not try to use CSV reader since it loads\r\n                // all files including Excel files etc.\r\n                break;\r\n            default:\r\n                $extensionType = null;\r\n                break;\r\n        }\r\n\r\n        if (null !== $extensionType) {\r\n            $testReader = PHPExcel_IOFactory::createReader($extensionType);\r\n            // Let's see if we are lucky\r\n            if (isset($testReader) && $testReader->canRead($file)) {\r\n                $reader = $testReader->load($file);\r\n            }\r\n        }\r\n        return $reader;\r\n    }\r\n```\r\n\r\n. Just so you can close this issue out, the issue was that the file was being delivered via stream, so it is only in PHPs temp storage.  This has no data for what file type, the name will be one of PHPs like `tmp/foo`, so without an extension, the `PHPExcel_Autoloader::load()` went through a loop trying to check everything to see what it could load successfully.  \r\n\r\nThe solution for us was simply to append the file type as a separate field before sending it to process like this.\r\n\r\n```\r\n    /**\r\n     * @param  FileUploader $file\r\n     * @return ImportUsers\r\n     */\r\n    public function setReader(FileUploader $file)\r\n    {\r\n        $extension = mb_strtolower(array_get(pathinfo($file->getNewName()), 'extension'));\r\n        if ($extension) {\r\n            $this->reader = $this->checkExtensionBeforeLoading($extension, $file->getRealPath());\r\n        }\r\n        if (!$this->reader) {\r\n            $this->reader = PHPExcel_IOFactory::load($file->getRealPath());\r\n        }\r\n        return $this;\r\n    }\r\n\r\n/**\r\n     * @param  $extension\r\n     * @param  $file\r\n     * @return null|PHPExcel\r\n     */\r\n    public function checkExtensionBeforeLoading($extension, $file)\r\n    {\r\n        $extensionType = $reader = null;\r\n        switch ($extension) {\r\n            case 'xlsx': //    Excel (OfficeOpenXML) Spreadsheet\r\n            case 'xlsm': //    Excel (OfficeOpenXML) Macro Spreadsheet (macros will be discarded)\r\n            case 'xltx': //    Excel (OfficeOpenXML) Template\r\n            case 'xltm': //    Excel (OfficeOpenXML) Macro Template (macros will be discarded)\r\n                $extensionType = 'Excel2007';\r\n                break;\r\n            case 'xls': //    Excel (BIFF) Spreadsheet\r\n            case 'xlt': //    Excel (BIFF) Template\r\n                $extensionType = 'Excel5';\r\n                break;\r\n            case 'ods': //    Open/Libre Offic Calc\r\n            case 'ots': //    Open/Libre Offic Calc Template\r\n                $extensionType = 'OOCalc';\r\n                break;\r\n            case 'slk':\r\n                $extensionType = 'SYLK';\r\n                break;\r\n            case 'xml': //    Excel 2003 SpreadSheetML\r\n                $extensionType = 'Excel2003XML';\r\n                break;\r\n            case 'gnumeric':\r\n                $extensionType = 'Gnumeric';\r\n                break;\r\n            case 'htm':\r\n            case 'html':\r\n                $extensionType = 'HTML';\r\n                break;\r\n            case 'csv':\r\n                // Do nothing\r\n                // We must not try to use CSV reader since it loads\r\n                // all files including Excel files etc.\r\n                break;\r\n            default:\r\n                $extensionType = null;\r\n                break;\r\n        }\r\n\r\n        if (null !== $extensionType) {\r\n            $testReader = PHPExcel_IOFactory::createReader($extensionType);\r\n            // Let's see if we are lucky\r\n            if (isset($testReader) && $testReader->canRead($file)) {\r\n                $reader = $testReader->load($file);\r\n            }\r\n        }\r\n        return $reader;\r\n    }\r\n```\r\n\r\n. ",
    "nathanh0": "Getting this as well.\r\n\r\nIt only happens when using ->toArray() iterating sheets.\r\n\r\nWas attempting to prevent 984,000 \"null\" rows from being imported. Kind of having a time figuring this out.\r\n\r\n. Getting this as well.\r\n\r\nIt only happens when using ->toArray() iterating sheets.\r\n\r\nWas attempting to prevent 984,000 \"null\" rows from being imported. Kind of having a time figuring this out.\r\n\r\n. ",
    "shreygokani": "by default, it throws this fatal error. \n\ntried sqlite and phpTemp. page becomes unresponsive in both caching method.\n. upon using these 2 caching methods, browser says \"site is unresponsive\"\n. @Lemoney I am inserting through loop. because I have to insert data vertically. \n. sorry for late response. I was unavailable.\n. @Lemoney fromArray method inputs data row wise. I wish to add data column wise. do you get that? My program is not fetching row from a table. it is doing a file conversion. logic is complex. If I can add my array into column directly, I would not have used loop.\n. @Lemoney Max columns are 20. \nits rows, sometimes go more than 4000.\n. @lemoney sorry for late reply. i was experimenting with fromArray. but that too fails!\nhow do i watch resources in php? i m on shared hosting\n. @lemoney i am allocating 256mb. do i need more than that? I guess not. \n. Hey! memory_get_usage(); was really helpful. also fromArray()\nit works fine now. issue was with multiple looping. fromArray reduces loops. also, i used function to clear garbage at regular interval. and unset unnecessary variables. \n. by default, it throws this fatal error. \n\ntried sqlite and phpTemp. page becomes unresponsive in both caching method.\n. upon using these 2 caching methods, browser says \"site is unresponsive\"\n. @Lemoney I am inserting through loop. because I have to insert data vertically. \n. sorry for late response. I was unavailable.\n. @Lemoney fromArray method inputs data row wise. I wish to add data column wise. do you get that? My program is not fetching row from a table. it is doing a file conversion. logic is complex. If I can add my array into column directly, I would not have used loop.\n. @Lemoney Max columns are 20. \nits rows, sometimes go more than 4000.\n. @lemoney sorry for late reply. i was experimenting with fromArray. but that too fails!\nhow do i watch resources in php? i m on shared hosting\n. @lemoney i am allocating 256mb. do i need more than that? I guess not. \n. Hey! memory_get_usage(); was really helpful. also fromArray()\nit works fine now. issue was with multiple looping. fromArray reduces loops. also, i used function to clear garbage at regular interval. and unset unnecessary variables. \n. ",
    "ajoah": "Thank you for your answer.\nBut there is a way to get a cell value without modify the pointer ? Why it worked on 1.7.7 version ?\n. Because i need a value which is in a lower cell compared to cell from iterator to know if i must save it or no.\n(English is not my native language, i hope i am understandable :})\n. Yes that's what I'll do. Thank you for taking the time to answer me :)\n. Thank you for your answer.\nBut there is a way to get a cell value without modify the pointer ? Why it worked on 1.7.7 version ?\n. Because i need a value which is in a lower cell compared to cell from iterator to know if i must save it or no.\n(English is not my native language, i hope i am understandable :})\n. Yes that's what I'll do. Thank you for taking the time to answer me :)\n. ",
    "bevss": "Im using Ajax post to generate and export excel. My data could range up to 2000+ records. I ended up letting the Route to not check the Csrf in my Laravel and now it is working. \n. Im using Ajax post to generate and export excel. My data could range up to 2000+ records. I ended up letting the Route to not check the Csrf in my Laravel and now it is working. \n. ",
    "githubjeka": "Any news?. Ok, macros have been saved. \r\nBut running of macros by hotkey is available only. Shapes with macros or images doesn't work.\r\n\r\nREF #928 REF #473. Any news?. Ok, macros have been saved. \r\nBut running of macros by hotkey is available only. Shapes with macros or images doesn't work.\r\n\r\nREF #928 REF #473. ",
    "dan0203": "I'm not sure, it was a long time ago... But from what I remember, I have an .xslm file containing the macro and parameter 'Excel2007' in this line :\r\n\r\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\r\n\r\nHope this helps.. Sorry I can't help you, I have no idea... Open your own topic. Someone will help you.. I'm not sure, it was a long time ago... But from what I remember, I have an .xslm file containing the macro and parameter 'Excel2007' in this line :\r\n\r\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\r\n\r\nHope this helps.. Sorry I can't help you, I have no idea... Open your own topic. Someone will help you.. ",
    "gustavobeavis": "No, I don't, I try to use this repository, If there are any problems I make a new contribution.\n tks,\n. No, I don't, I try to use this repository, If there are any problems I make a new contribution.\n tks,\n. ",
    "rudyZanotti": "I just found a similar issue : https://github.com/PHPOffice/PHPExcel/issues/740\n. I just found a similar issue : https://github.com/PHPOffice/PHPExcel/issues/740\n. ",
    "wodka": "Hi, fuse won't help in my case because the file system information (if it be S3 / FTP / etc) is stored in a database and can change frequently. But thanks for pointing out that this cannot work :/\n\nI'll stay with my \"create a local copy\" approach.\n. Hi, fuse won't help in my case because the file system information (if it be S3 / FTP / etc) is stored in a database and can change frequently. But thanks for pointing out that this cannot work :/\n\nI'll stay with my \"create a local copy\" approach.\n. ",
    "radosavljevic": "I found out that when I remove this line\n\n``` php\n$ews->getCellByColumnAndRow(1, 1)->getHyperlink()->setUrl($url);\n```\n\nIt works correctly.\n\nHere's the entire code:\n\n``` php\n<?php\n\nrequire_once __DIR__ . '/../common.php';\nrequire_once __DIR__ . '/../include/PHPExcel.php';\n\n$ea = new \\PHPExcel();\n\n$ea->getProperties()\n   ->setCreator('Direct services')\n   ->setTitle('PHPExcel')\n   ->setLastModifiedBy('Direct services')\n   ->setDescription('Tracking report')\n   ->setSubject('Tracking report')\n   ->setKeywords('')\n   ->setCategory('tracking')\n   ;\n\n$ews = $ea->getSheet(0);\n\n$sql = 'SELECT url.url as url_name, emotion.name as emotion_name, COUNT(emotion.name) as count FROM voting LEFT JOIN url ON voting.url_code=url.code LEFT JOIN emotion ON voting.emotion_id=emotion.id GROUP BY emotion_name, url_name ORDER BY url_name';\n\n$basicQuery = $connect->query($sql);\n\n$data = array(array());\n\n\nif ($basicQuery) {\n    $columnNames = array('URL', 'Love', 'Like', 'Neutral', 'Confused', 'Bored', 'Dislike');\n\n    $ews->fromArray($columnNames, NULL, 'A1');\n\n    $numRows = $basicQuery->num_rows;\n\n    $i = 0;\n    while($row = $basicQuery->fetch_array(MYSQL_ASSOC)) {\n\n      end($data);         // move the internal pointer to the end of the array\n      $key = key($data);  // fetches the key of the element pointed to by the internal pointer\n\n      if (!in_array($row['url_name'], $data[$key])) {\n        $i++;\n        $ews->setCellValueByColumnAndRow(0, $i + 1, $row['url_name']);\n        // $url = str_replace('http://', '', $row['url_name']);\n        // $ews->getCellByColumnAndRow(0, $i + 1)->getHyperlink()->setUrl($url);\n\n        switch ($row['emotion_name']) {\n          case 'Love':\n            $ews->setCellValueByColumnAndRow(1, $i + 1, $row['count']);\n            break;\n          case 'Like':\n            $ews->setCellValueByColumnAndRow(2, $i + 1, $row['count']);\n            break;\n          case 'Neutral':\n            $ews->setCellValueByColumnAndRow(3, $i + 1, $row['count']);\n            break;\n          case 'Confused':\n            $ews->setCellValueByColumnAndRow(4, $i + 1, $row['count']);\n            break;\n          case 'Bored':\n            $ews->setCellValueByColumnAndRow(5, $i + 1, $row['count']);\n            break;\n          case 'Dislike':\n            $ews->setCellValueByColumnAndRow(6, $i + 1, $row['count']);\n            break;\n          default:\n            # code...\n            break;\n        }\n      } else {\n        switch ($row['emotion_name']) {\n          case 'Love':\n            $ews->setCellValueByColumnAndRow(1, $i + 1, $row['count']);\n            break;\n          case 'Like':\n            $ews->setCellValueByColumnAndRow(2, $i + 1, $row['count']);\n            break;\n          case 'Neutral':\n            $ews->setCellValueByColumnAndRow(3, $i + 1, $row['count']);\n            break;\n          case 'Confused':\n            $ews->setCellValueByColumnAndRow(4, $i + 1, $row['count']);\n            break;\n          case 'Bored':\n            $ews->setCellValueByColumnAndRow(5, $i + 1, $row['count']);\n            break;\n          case 'Dislike':\n            $ews->setCellValueByColumnAndRow(6, $i + 1, $row['count']);\n            break;\n          default:\n            # code...\n            break;\n        }\n      }\n      $data[] = $row;\n    }\n\n    // Fill color for columnNames\n    $ews->getStyle('A1:G1')->getFill()\n    ->setFillType(PHPExcel_Style_Fill::FILL_SOLID)\n    ->getStartColor()->setARGB('FFEAF1DD');\n\n    $ews->getColumnDimension('A')\n    ->setAutoSize(true);\n\n    header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n    header(\"Content-Disposition: attachment;filename=report.xlsx\");\n    header('Cache-Control: max-age=0');\n\n    $writer = PHPExcel_IOFactory::createWriter($ea, 'Excel2007');\n\n    $writer->save('php://output');\n\n    exit();\n\n}\n```\n. I found out that when I remove this line\n\n``` php\n$ews->getCellByColumnAndRow(1, 1)->getHyperlink()->setUrl($url);\n```\n\nIt works correctly.\n\nHere's the entire code:\n\n``` php\n<?php\n\nrequire_once __DIR__ . '/../common.php';\nrequire_once __DIR__ . '/../include/PHPExcel.php';\n\n$ea = new \\PHPExcel();\n\n$ea->getProperties()\n   ->setCreator('Direct services')\n   ->setTitle('PHPExcel')\n   ->setLastModifiedBy('Direct services')\n   ->setDescription('Tracking report')\n   ->setSubject('Tracking report')\n   ->setKeywords('')\n   ->setCategory('tracking')\n   ;\n\n$ews = $ea->getSheet(0);\n\n$sql = 'SELECT url.url as url_name, emotion.name as emotion_name, COUNT(emotion.name) as count FROM voting LEFT JOIN url ON voting.url_code=url.code LEFT JOIN emotion ON voting.emotion_id=emotion.id GROUP BY emotion_name, url_name ORDER BY url_name';\n\n$basicQuery = $connect->query($sql);\n\n$data = array(array());\n\n\nif ($basicQuery) {\n    $columnNames = array('URL', 'Love', 'Like', 'Neutral', 'Confused', 'Bored', 'Dislike');\n\n    $ews->fromArray($columnNames, NULL, 'A1');\n\n    $numRows = $basicQuery->num_rows;\n\n    $i = 0;\n    while($row = $basicQuery->fetch_array(MYSQL_ASSOC)) {\n\n      end($data);         // move the internal pointer to the end of the array\n      $key = key($data);  // fetches the key of the element pointed to by the internal pointer\n\n      if (!in_array($row['url_name'], $data[$key])) {\n        $i++;\n        $ews->setCellValueByColumnAndRow(0, $i + 1, $row['url_name']);\n        // $url = str_replace('http://', '', $row['url_name']);\n        // $ews->getCellByColumnAndRow(0, $i + 1)->getHyperlink()->setUrl($url);\n\n        switch ($row['emotion_name']) {\n          case 'Love':\n            $ews->setCellValueByColumnAndRow(1, $i + 1, $row['count']);\n            break;\n          case 'Like':\n            $ews->setCellValueByColumnAndRow(2, $i + 1, $row['count']);\n            break;\n          case 'Neutral':\n            $ews->setCellValueByColumnAndRow(3, $i + 1, $row['count']);\n            break;\n          case 'Confused':\n            $ews->setCellValueByColumnAndRow(4, $i + 1, $row['count']);\n            break;\n          case 'Bored':\n            $ews->setCellValueByColumnAndRow(5, $i + 1, $row['count']);\n            break;\n          case 'Dislike':\n            $ews->setCellValueByColumnAndRow(6, $i + 1, $row['count']);\n            break;\n          default:\n            # code...\n            break;\n        }\n      } else {\n        switch ($row['emotion_name']) {\n          case 'Love':\n            $ews->setCellValueByColumnAndRow(1, $i + 1, $row['count']);\n            break;\n          case 'Like':\n            $ews->setCellValueByColumnAndRow(2, $i + 1, $row['count']);\n            break;\n          case 'Neutral':\n            $ews->setCellValueByColumnAndRow(3, $i + 1, $row['count']);\n            break;\n          case 'Confused':\n            $ews->setCellValueByColumnAndRow(4, $i + 1, $row['count']);\n            break;\n          case 'Bored':\n            $ews->setCellValueByColumnAndRow(5, $i + 1, $row['count']);\n            break;\n          case 'Dislike':\n            $ews->setCellValueByColumnAndRow(6, $i + 1, $row['count']);\n            break;\n          default:\n            # code...\n            break;\n        }\n      }\n      $data[] = $row;\n    }\n\n    // Fill color for columnNames\n    $ews->getStyle('A1:G1')->getFill()\n    ->setFillType(PHPExcel_Style_Fill::FILL_SOLID)\n    ->getStartColor()->setARGB('FFEAF1DD');\n\n    $ews->getColumnDimension('A')\n    ->setAutoSize(true);\n\n    header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n    header(\"Content-Disposition: attachment;filename=report.xlsx\");\n    header('Cache-Control: max-age=0');\n\n    $writer = PHPExcel_IOFactory::createWriter($ea, 'Excel2007');\n\n    $writer->save('php://output');\n\n    exit();\n\n}\n```\n. ",
    "alexlcdee": "Rigth. Corrected.\n. Rigth. Corrected.\n. ",
    "jbinfo": "@Quix0r You're right, thank you.\n. @Quix0r You're right, thank you.\n. ",
    "Whissi": "While we can mirror https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Style/NumberFormat.php#L406-L410 we don't have a real representation for minutes without a leading zero in PHP...\n. While we can mirror https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Style/NumberFormat.php#L406-L410 we don't have a real representation for minutes without a leading zero in PHP...\n. ",
    "lenoxzzedwin": "Hello @hardikpoojara \nWhat version of PHPExcel is using?\n. Hi.\ni solved this problem \n\ndowngrade ubuntu to version 14 and php 5.9\n. Hello @hardikpoojara \nWhat version of PHPExcel is using?\n. Hi.\ni solved this problem \n\ndowngrade ubuntu to version 14 and php 5.9\n. ",
    "hardikpoojara": "Hello Developer,\n\nI am apologized for delay in reply.I am using Excel 2016. @lenoxzzedwin \nKindly help me .\n\nThanks !\n. Hello Developer,\n\nThank you for your response but issue is not solved and @lenoxzzedwin brother it's not possible for me to change version of PHP. Right now i'm converting excel files data before upload.\n\nI will really appreciate if it works for me.\n\nThank you so much guys @ohano & @lenoxzzedwin  !\n\nKind regards.\nHardik Poojara\nhardik_poojara2000@yahoo.com  \n. Hello Developer,\n\nI am apologized for delay in reply.I am using Excel 2016. @lenoxzzedwin \nKindly help me .\n\nThanks !\n. Hello Developer,\n\nThank you for your response but issue is not solved and @lenoxzzedwin brother it's not possible for me to change version of PHP. Right now i'm converting excel files data before upload.\n\nI will really appreciate if it works for me.\n\nThank you so much guys @ohano & @lenoxzzedwin  !\n\nKind regards.\nHardik Poojara\nhardik_poojara2000@yahoo.com  \n. ",
    "ohano": "@hardikpoojara \nHello , Have you solved this problem?\nI need the answer\n. @hardikpoojara \nHello , Have you solved this problem?\nI need the answer\n. ",
    "JefferyHus": "Yes I display it as UTF-8, I read the file then I display the content inside my view.\n. Yes I display it as UTF-8, I read the file then I display the content inside my view.\n. ",
    "vnellin": "I had I think\nin _rels/workbook.xml.rels we have Target=\"**s**haredStrings.xml\" \nbut in ZIP for some reason that file called xl/**S**haredStrings.xml\nIn older version there was a part in Excel2007.php in _getFromZipArchive which fix this.\nBut now it's gone.\n\n```\npublic function _getFromZipArchive($archive, $fileName = '')\n{\n    // Root-relative paths\n    if (strpos($fileName, '//') !== false)\n    {\n        $fileName = substr($fileName, strpos($fileName, '//') + 1);\n    }\n    $fileName = PHPExcel_Shared_File::realpath($fileName);\n    // Apache POI fixes\n    $contents = $archive->getFromName($fileName);\n    if ($contents === false)\n    {\n        $contents = $archive->getFromName(substr($fileName, 1));\n    }\n        /* THIS PART IS ABSENT IN CURRENT VERSION */\n        if ($contents === false) { \n            for ($i = 0; $i < $archive->numFiles; $i++) {\n                 $filename = $archive->getNameIndex($i);\n                 if (stristr($fileName,$filename)!==false) {\n                     $contents = $archive->getFromName($filename);\n                     if ($contents === false) die (\"even from $filename !\") ;\n                    break ;\n                 }\n             }\n        }\n    return $contents;\n}\n```\n. I had I think\nin _rels/workbook.xml.rels we have Target=\"**s**haredStrings.xml\" \nbut in ZIP for some reason that file called xl/**S**haredStrings.xml\nIn older version there was a part in Excel2007.php in _getFromZipArchive which fix this.\nBut now it's gone.\n\n```\npublic function _getFromZipArchive($archive, $fileName = '')\n{\n    // Root-relative paths\n    if (strpos($fileName, '//') !== false)\n    {\n        $fileName = substr($fileName, strpos($fileName, '//') + 1);\n    }\n    $fileName = PHPExcel_Shared_File::realpath($fileName);\n    // Apache POI fixes\n    $contents = $archive->getFromName($fileName);\n    if ($contents === false)\n    {\n        $contents = $archive->getFromName(substr($fileName, 1));\n    }\n        /* THIS PART IS ABSENT IN CURRENT VERSION */\n        if ($contents === false) { \n            for ($i = 0; $i < $archive->numFiles; $i++) {\n                 $filename = $archive->getNameIndex($i);\n                 if (stristr($fileName,$filename)!==false) {\n                     $contents = $archive->getFromName($filename);\n                     if ($contents === false) die (\"even from $filename !\") ;\n                    break ;\n                 }\n             }\n        }\n    return $contents;\n}\n```\n. ",
    "lahdekorpi": "What do you mean by client-side? The browser?\nThen obviously you can't.\n\nA standalone application? You could theoretically pack it in with PHP and the required extensions. But probably there is a better library for that use case.\n. Well, don't use PHP for a desktop application.\n. What do you mean by client-side? The browser?\nThen obviously you can't.\n\nA standalone application? You could theoretically pack it in with PHP and the required extensions. But probably there is a better library for that use case.\n. Well, don't use PHP for a desktop application.\n. ",
    "chengtie": "I mean \"standalone application\" or \"desktop application\". Will that be complicated to do with PHPExcel? Do you have any better library to recommend?\n\nCheers\n. I mean \"standalone application\" or \"desktop application\". Will that be complicated to do with PHPExcel? Do you have any better library to recommend?\n\nCheers\n. ",
    "tasselchof": "Removed comment about require.\n\nNo, I am using only composer to autoload classes.\n. Seems like I used branch with other namespaces and it's making a conflict.\n. Removed comment about require.\n\nNo, I am using only composer to autoload classes.\n. Seems like I used branch with other namespaces and it's making a conflict.\n. ",
    "pounard": "<strike>Beware that behaviour is not the same, array_key_exists() returns TRUE for NULL values, whereas isset() returns FALSE for existing keys with NULL values. This is a common source of errors.</strike>\n\nEDIT: Sorry, I didn't read fully your original post.\n. <strike>Beware that behaviour is not the same, array_key_exists() returns TRUE for NULL values, whereas isset() returns FALSE for existing keys with NULL values. This is a common source of errors.</strike>\n\nEDIT: Sorry, I didn't read fully your original post.\n. ",
    "pcollinson": "True - but where this bit me, suppressing the problem wasn't a mistake or an error. The data was a list of phone numbers separated by / - and how is it to know? So in this case I was happy to leave this as text and I do want to use the value binder to pick up dates elsewhere in the data.\n\nPerhaps the binder needs to be somewhat more configurable about what it sees. My applications never actually have fractions, they are usually information about people.\n\nAlternatively, I could supply a private value binder without the fraction test.\n\nJust thought this hack would be useful to people.\n. True - but where this bit me, suppressing the problem wasn't a mistake or an error. The data was a list of phone numbers separated by / - and how is it to know? So in this case I was happy to leave this as text and I do want to use the value binder to pick up dates elsewhere in the data.\n\nPerhaps the binder needs to be somewhat more configurable about what it sees. My applications never actually have fractions, they are usually information about people.\n\nAlternatively, I could supply a private value binder without the fraction test.\n\nJust thought this hack would be useful to people.\n. ",
    "Enyby": "I think this is weird \"feature\" from Excel for break compatibility. I do not imagine any code make this output. Even ms xml parser failed to parse it.\n\nIn this case this is not corrupted file.\n. No. Because Excel open this file without problem.\n. It is not invalid input file. It is valid conditional comment for IE (and for Excel of course), but for any XML parser it is error.  \n\nSee msdn: https://msdn.microsoft.com/en-us/library/ms537512(v=vs.85).aspx\n\n```\ndownlevel-revealed  <![if expression]> HTML <![endif]>\n```\n. Does not matter what version of IE is supported because Excel stay generate code like this:\n\n```\n <![if supportMisalignedColumns]>\n <tr height=0 style='display:none'>\n  <td width=100 style='width:75pt'></td>\n  <td width=99 style='width:74pt'></td>\n  <td width=256 style='width:192pt'></td>\n  <td width=63 style='width:47pt'></td>\n  <td width=77 style='width:58pt'></td>\n  <td width=57 style='width:43pt'></td>\n  <td width=256 style='width:192pt'></td>\n  <td width=256 style='width:192pt'></td>\n  <td width=256 style='width:192pt'></td>\n </tr>\n <![endif]>\n```\n\nFor HTML table.\n\nPHPExcel must support this formats because Excel make it.\n. I think this is weird \"feature\" from Excel for break compatibility. I do not imagine any code make this output. Even ms xml parser failed to parse it.\n\nIn this case this is not corrupted file.\n. No. Because Excel open this file without problem.\n. It is not invalid input file. It is valid conditional comment for IE (and for Excel of course), but for any XML parser it is error.  \n\nSee msdn: https://msdn.microsoft.com/en-us/library/ms537512(v=vs.85).aspx\n\n```\ndownlevel-revealed  <![if expression]> HTML <![endif]>\n```\n. Does not matter what version of IE is supported because Excel stay generate code like this:\n\n```\n <![if supportMisalignedColumns]>\n <tr height=0 style='display:none'>\n  <td width=100 style='width:75pt'></td>\n  <td width=99 style='width:74pt'></td>\n  <td width=256 style='width:192pt'></td>\n  <td width=63 style='width:47pt'></td>\n  <td width=77 style='width:58pt'></td>\n  <td width=57 style='width:43pt'></td>\n  <td width=256 style='width:192pt'></td>\n  <td width=256 style='width:192pt'></td>\n  <td width=256 style='width:192pt'></td>\n </tr>\n <![endif]>\n```\n\nFor HTML table.\n\nPHPExcel must support this formats because Excel make it.\n. ",
    "CrazyBite": "PowerKiKi, sorry. Why phpspreadsheet, not phpexcel?\n. PowerKiKi, sorry. Why phpspreadsheet, not phpexcel?\n. ",
    "neoacevedo": "I'd use `setlocale(LC_ALL, 'es_CO');` for instance before setCellValue or before assign a value to a string variable.. Recomiendo hacer la pregunta en StackOverflow en Espa\u00f1ol, pero el mensaje exactamente dice que el archivo no tiene una hoja que se llame COTIZACION TERRESTRE. I'd use `setlocale(LC_ALL, 'es_CO');` for instance before setCellValue or before assign a value to a string variable.. Recomiendo hacer la pregunta en StackOverflow en Espa\u00f1ol, pero el mensaje exactamente dice que el archivo no tiene una hoja que se llame COTIZACION TERRESTRE. ",
    "miguelangelss4": "Thanks you both!\r\nI solved my problem by using `$mysqli->set_charset('utf8');` before query for my data to be printed in the Excel, maybe I must change to your answers.. Thanks you both!\r\nI solved my problem by using `$mysqli->set_charset('utf8');` before query for my data to be printed in the Excel, maybe I must change to your answers.. ",
    "demontiejr": "Well... I'm basically creating a sheet from a matrix containing my data. Something like this:\n\n``` php\n        $spreadsheet = Excel::create($template['reference'], function($excel) use($variableGroups) {\n            $excel->sheet('Questionario', function($sheet) use($variableGroups) {\n                $sheet->setAutoSize(true);\n                $column = 0;\n                $allVars = [];\n                $allQuestions = [];\n                foreach ($variableGroups as $group => $variables) {\n                    $numVariables = count($variables);\n                    $sheet->mergeCells($this->getColumnName($column).'1'\n                        .':'.\n                        $this->getColumnName($column + $numVariables - 1).'1');\n                    $sheet->cell($this->getColumnName($column).'1', function($cell) use($group) {\n                        $cell->setValue($group);\n                    });\n\n                    foreach ($variables as $variable => $details) {\n                        $allVars[] = $variable;\n                        $allQuestions[] = $details['question'];\n\n                        $this->createValidation($sheet, $this->getColumnName($column), $details);\n\n                        $column++;\n                    }\n                }\n\n                $sheet->row(2, $allVars);\n                $sheet->row(3, $allQuestions);\n            });\n        });\n\n        return $spreadsheet->download('xlsx');\n```\n\nMy createValidation method basically decides what's the type of validation and the prompt message and calls the method which actually creates the validation for a thousand cells in the specified column. The method which creates the list validation is the one I sent in the question.\n\nAnd I'm using PHPExcel 1.8.*.\n. Well, the first code snippet I sent seems to be independent of Laravel and I'm pretty sure this is the part that is breaking the spreadsheet (since I could generate valid spreadsheets without the validation). Actually, even this part of the code works normally (just the prompt message without any validation):\n\n```\n$objValidation = $cell->getDataValidation();\n$objValidation->setAllowBlank(false);\n$objValidation->setShowInputMessage(true);\n$objValidation->setPromptTitle($promptTitle);\n$objValidation->setPrompt($prompt);\n```\n\nBut anyway, unfortunately I won't have time to try to reproduce it without using Laravel. I just thought someone could have a thought about whether I could be doing something wrong.\n. Just for the benefit of others, I decided to take another look at this problem today and I found these examples: https://github.com/PHPOffice/PHPExcel/blob/master/Examples/15datavalidation.php#L102.\n\nIt says that the hole list of comma-separated values should be between quotes. As I didn't know about it, I was having each individual value between quotes and it was breaking the spreadsheet. The weird thing is that it still opens normally with LibreOffice. \n. Well... I'm basically creating a sheet from a matrix containing my data. Something like this:\n\n``` php\n        $spreadsheet = Excel::create($template['reference'], function($excel) use($variableGroups) {\n            $excel->sheet('Questionario', function($sheet) use($variableGroups) {\n                $sheet->setAutoSize(true);\n                $column = 0;\n                $allVars = [];\n                $allQuestions = [];\n                foreach ($variableGroups as $group => $variables) {\n                    $numVariables = count($variables);\n                    $sheet->mergeCells($this->getColumnName($column).'1'\n                        .':'.\n                        $this->getColumnName($column + $numVariables - 1).'1');\n                    $sheet->cell($this->getColumnName($column).'1', function($cell) use($group) {\n                        $cell->setValue($group);\n                    });\n\n                    foreach ($variables as $variable => $details) {\n                        $allVars[] = $variable;\n                        $allQuestions[] = $details['question'];\n\n                        $this->createValidation($sheet, $this->getColumnName($column), $details);\n\n                        $column++;\n                    }\n                }\n\n                $sheet->row(2, $allVars);\n                $sheet->row(3, $allQuestions);\n            });\n        });\n\n        return $spreadsheet->download('xlsx');\n```\n\nMy createValidation method basically decides what's the type of validation and the prompt message and calls the method which actually creates the validation for a thousand cells in the specified column. The method which creates the list validation is the one I sent in the question.\n\nAnd I'm using PHPExcel 1.8.*.\n. Well, the first code snippet I sent seems to be independent of Laravel and I'm pretty sure this is the part that is breaking the spreadsheet (since I could generate valid spreadsheets without the validation). Actually, even this part of the code works normally (just the prompt message without any validation):\n\n```\n$objValidation = $cell->getDataValidation();\n$objValidation->setAllowBlank(false);\n$objValidation->setShowInputMessage(true);\n$objValidation->setPromptTitle($promptTitle);\n$objValidation->setPrompt($prompt);\n```\n\nBut anyway, unfortunately I won't have time to try to reproduce it without using Laravel. I just thought someone could have a thought about whether I could be doing something wrong.\n. Just for the benefit of others, I decided to take another look at this problem today and I found these examples: https://github.com/PHPOffice/PHPExcel/blob/master/Examples/15datavalidation.php#L102.\n\nIt says that the hole list of comma-separated values should be between quotes. As I didn't know about it, I was having each individual value between quotes and it was breaking the spreadsheet. The weird thing is that it still opens normally with LibreOffice. \n. ",
    "neil-amp": "I've written a small test script to show the problem with the attached file, I've set the chunk size to 20 rows, from rows 21 you will notice in the output that the value of column 6 (the one containing the formula) returns blank. For some reason it starts working again at row 66.\n\nTest script:\n\n``` php\n// TODO: change paths on these two lines to point to local files\n    require 'pathtophpexcel/Classes/PHPExcel.php';\n    $filename = \"pathtofile/phpexcel_calc_test.xlsx\";\n\n    ini_set('display_errors',1);\n    error_reporting(E_ALL|E_STRICT);\n\n    set_time_limit(0);\n\n    class chunkReadFilter implements PHPExcel_Reader_IReadFilter \n    { \n        private $_startRow = 0; \n        private $_endRow = 0; \n\n        /**  Set the list of rows that we want to read  */ \n        public function setRows($startRow, $chunkSize) { \n            $this->_startRow    = $startRow; \n            $this->_endRow      = $startRow + $chunkSize; \n        } \n        public function readCell($column, $row, $worksheetName = '') { \n            //  Only read the heading row, and the rows that are configured in $this->_startRow and $this->_endRow \n            if (($row == 1) || ($row >= $this->_startRow && $row < $this->_endRow)) { \n                return true; \n            } \n            return false; \n        } \n    } \n\n    try {\n        $objPHPExcel = new PHPExcel();\n        $inputFileType = PHPExcel_IOFactory::identify($filename);\n        $reader = PHPExcel_IOFactory::createReader($inputFileType);  \n\n        PHPExcel_Calculation::getInstance()->setCalculationCacheEnabled(false);\n    } catch(PHPExcel_Reader_Exception\u00a0$e) {\n        echo \"ERROR: \".$e->getMessage();\n    }\n\n    $info = $reader->listWorksheetInfo($filename);\n\n    $highestRow = $info[0]['totalRows'];\n    $highestColumn = $info[0]['totalColumns'];\n\n    $chunkSize = 20; \n    $chunkFilter = new chunkReadFilter(); \n    $reader->setReadFilter($chunkFilter); \n\n    for ($startRow = 1; $startRow <= $highestRow; $startRow += $chunkSize) { \n\n        echo \"ROW: $startRow \\n\";\n\n        $chunkFilter->setRows($startRow,$chunkSize); \n        $excelObj = $reader->load($filename);\n        $worksheet = $excelObj->getSheet(0); \n        //PHPExcel_Calculation::getInstance( $worksheet->getParent() )->flushInstance();\n\n        // Process each row of the spreadsheet    \n        for($z=$startRow; $z<= min(array($startRow + $chunkSize, $highestRow)); $z++) \n        {           \n            $params = array();\n            $blank_row = true;\n\n            for($i=0; $i < 8; $i++) {\n\n                $value = trim($worksheet->getCellByColumnAndRow($i, $z)->getValue());\n\n                if(trim($value)!='') {\n                    PHPExcel_Calculation::getInstance( $worksheet->getParent() )->flushInstance();\n                    $value = $worksheet->getCellByColumnAndRow($i, $z)->getCalculatedValue();\n                    echo \"VALUE $i $z = $value \\n\";\n                }\n            }\n        }\n\n        $excelObj->disconnectWorksheets(); \n        unset($excelObj); \n        unset($worksheet);\n    }\n```\n\n[phpexcel_calc_test.xlsx](https://github.com/PHPOffice/PHPExcel/files/522931/phpexcel_calc_test.xlsx)\n. I know this isn't a particularly active project now but is anyone actually responding to issues still??. Ok no worries, thanks for the reply.. I've written a small test script to show the problem with the attached file, I've set the chunk size to 20 rows, from rows 21 you will notice in the output that the value of column 6 (the one containing the formula) returns blank. For some reason it starts working again at row 66.\n\nTest script:\n\n``` php\n// TODO: change paths on these two lines to point to local files\n    require 'pathtophpexcel/Classes/PHPExcel.php';\n    $filename = \"pathtofile/phpexcel_calc_test.xlsx\";\n\n    ini_set('display_errors',1);\n    error_reporting(E_ALL|E_STRICT);\n\n    set_time_limit(0);\n\n    class chunkReadFilter implements PHPExcel_Reader_IReadFilter \n    { \n        private $_startRow = 0; \n        private $_endRow = 0; \n\n        /**  Set the list of rows that we want to read  */ \n        public function setRows($startRow, $chunkSize) { \n            $this->_startRow    = $startRow; \n            $this->_endRow      = $startRow + $chunkSize; \n        } \n        public function readCell($column, $row, $worksheetName = '') { \n            //  Only read the heading row, and the rows that are configured in $this->_startRow and $this->_endRow \n            if (($row == 1) || ($row >= $this->_startRow && $row < $this->_endRow)) { \n                return true; \n            } \n            return false; \n        } \n    } \n\n    try {\n        $objPHPExcel = new PHPExcel();\n        $inputFileType = PHPExcel_IOFactory::identify($filename);\n        $reader = PHPExcel_IOFactory::createReader($inputFileType);  \n\n        PHPExcel_Calculation::getInstance()->setCalculationCacheEnabled(false);\n    } catch(PHPExcel_Reader_Exception\u00a0$e) {\n        echo \"ERROR: \".$e->getMessage();\n    }\n\n    $info = $reader->listWorksheetInfo($filename);\n\n    $highestRow = $info[0]['totalRows'];\n    $highestColumn = $info[0]['totalColumns'];\n\n    $chunkSize = 20; \n    $chunkFilter = new chunkReadFilter(); \n    $reader->setReadFilter($chunkFilter); \n\n    for ($startRow = 1; $startRow <= $highestRow; $startRow += $chunkSize) { \n\n        echo \"ROW: $startRow \\n\";\n\n        $chunkFilter->setRows($startRow,$chunkSize); \n        $excelObj = $reader->load($filename);\n        $worksheet = $excelObj->getSheet(0); \n        //PHPExcel_Calculation::getInstance( $worksheet->getParent() )->flushInstance();\n\n        // Process each row of the spreadsheet    \n        for($z=$startRow; $z<= min(array($startRow + $chunkSize, $highestRow)); $z++) \n        {           \n            $params = array();\n            $blank_row = true;\n\n            for($i=0; $i < 8; $i++) {\n\n                $value = trim($worksheet->getCellByColumnAndRow($i, $z)->getValue());\n\n                if(trim($value)!='') {\n                    PHPExcel_Calculation::getInstance( $worksheet->getParent() )->flushInstance();\n                    $value = $worksheet->getCellByColumnAndRow($i, $z)->getCalculatedValue();\n                    echo \"VALUE $i $z = $value \\n\";\n                }\n            }\n        }\n\n        $excelObj->disconnectWorksheets(); \n        unset($excelObj); \n        unset($worksheet);\n    }\n```\n\n[phpexcel_calc_test.xlsx](https://github.com/PHPOffice/PHPExcel/files/522931/phpexcel_calc_test.xlsx)\n. I know this isn't a particularly active project now but is anyone actually responding to issues still??. Ok no worries, thanks for the reply.. ",
    "NekuroEngeru": "A possible correction for my case is to change constant REFHELPER_REGEXP_CELLREF in ReferenceHelper.php, line 32, from :\nconst REFHELPER_REGEXP_CELLREF      = '((\\w_|\\'[^!]_\\')!)?(?<![:a-z\\$])(\\$?[a-z]{1,3}\\$?\\d+)(?=[^:!\\d\\'])';\nto\nconst REFHELPER_REGEXP_CELLREF      = '((\\w_|\\'[^!]_\\')!)?(?<![:a-z\\$])(\\$?[a-z]{1,3}\\$?\\d+(?![a-z]))(?=[^:!\\d\\'])';\nHowever, I am concerned of possible side-effects, and I do not as of yet know enough about Excel or the PHPExcel library to negate those concerns.\n. A possible correction for my case is to change constant REFHELPER_REGEXP_CELLREF in ReferenceHelper.php, line 32, from :\nconst REFHELPER_REGEXP_CELLREF      = '((\\w_|\\'[^!]_\\')!)?(?<![:a-z\\$])(\\$?[a-z]{1,3}\\$?\\d+)(?=[^:!\\d\\'])';\nto\nconst REFHELPER_REGEXP_CELLREF      = '((\\w_|\\'[^!]_\\')!)?(?<![:a-z\\$])(\\$?[a-z]{1,3}\\$?\\d+(?![a-z]))(?=[^:!\\d\\'])';\nHowever, I am concerned of possible side-effects, and I do not as of yet know enough about Excel or the PHPExcel library to negate those concerns.\n. ",
    "PhilETaylor": "This may seem the same as the other PR but this is in a different file :) \n. Thanks :) \n. This may seem the same as the other PR but this is in a different file :) \n. Thanks :) \n. ",
    "psam44": "Confusion, by 'old' I meant this issue is there at least since 1.7.6, **and** still there in 1.8.1 (as my two other issues submitted the same day as this one).\n. Confusion, by 'old' I meant this issue is there at least since 1.7.6, **and** still there in 1.8.1 (as my two other issues submitted the same day as this one).\n. ",
    "treadyaparna": "Thank you for the response.\n. Thank you for the response.\n. ",
    "a3aakash": "So is there is any solution to get being supported? I urgently need the solution.. @PowerKiKi I couldn't understand your comment. And why this issue get closed if this is not been resolved at your end? . @PowerKiKi thanks for the explanation. I am newbie to these things but I will try locally if I also get the time and I have posted the comment because I urgently needed this feature to deploy for my client project by which I couldn't able to find the solution. But I got one extension for this library supported by LibXL which is a C++ module. You can also look into it for reference.. So is there is any solution to get being supported? I urgently need the solution.. @PowerKiKi I couldn't understand your comment. And why this issue get closed if this is not been resolved at your end? . @PowerKiKi thanks for the explanation. I am newbie to these things but I will try locally if I also get the time and I have posted the comment because I urgently needed this feature to deploy for my client project by which I couldn't able to find the solution. But I got one extension for this library supported by LibXL which is a C++ module. You can also look into it for reference.. ",
    "Co0olCat": "Images are supported. One can link to image macros -> At the moment when I link macros to image in template -> The link is lost when passed through  PHPOffice/PhpSpreadsheet. Any ideas how to preserve the link? Thank you.. Found this workaround: https://www.extendoffice.com/documents/excel/4422-excel-run-macro-from-hyperlink.html\r\n\r\nIt brings another issue -> enabling macros from downloaded files...\r\n\r\nUpdate: My template is .xlsm -> I am reading it as 'Xlsx' -> adding data -> saving as .xlsm. On my side I had to disable security for macros. After running the macros it is passed to end users. -> End users do not need macros since they are required only to update pivot tables and format complex charts. Thank you.. Images are supported. One can link to image macros -> At the moment when I link macros to image in template -> The link is lost when passed through  PHPOffice/PhpSpreadsheet. Any ideas how to preserve the link? Thank you.. Found this workaround: https://www.extendoffice.com/documents/excel/4422-excel-run-macro-from-hyperlink.html\r\n\r\nIt brings another issue -> enabling macros from downloaded files...\r\n\r\nUpdate: My template is .xlsm -> I am reading it as 'Xlsx' -> adding data -> saving as .xlsm. On my side I had to disable security for macros. After running the macros it is passed to end users. -> End users do not need macros since they are required only to update pivot tables and format complex charts. Thank you.. ",
    "karoldabro": "Same problem here. Have you find an answer?. Same problem here. Have you find an answer?. ",
    "tboztuna": "same here. Any solution ?. same here. Any solution ?. ",
    "kae14": "phpoffice\\phpexcel\\Classes\\PHPExcel\\Style\\NumberFormat.php\n$_dateFormatReplacements not work for format that have double quote.\nI add this to array it's work. '\":\"mm' => '\":\"i',\n. phpoffice\\phpexcel\\Classes\\PHPExcel\\Style\\NumberFormat.php\n$_dateFormatReplacements not work for format that have double quote.\nI add this to array it's work. '\":\"mm' => '\":\"i',\n. ",
    "teynon": "I see now that PHPExcel has moved to PHPSpreadsheet. Closing.\n. I see now that PHPExcel has moved to PHPSpreadsheet. Closing.\n. ",
    "dannyZhou": "@MarkBaker  this is patch. Please review. \r\n\r\n```patch\r\n\r\nFrom 9d8794eb8d4ba8f3b47a210f355a45db37bd4d8f Mon Sep 17 00:00:00 2001\r\nFrom: \"danny.zhou\" <15725040705@126.com>\r\nDate: Mon, 21 Nov 2016 20:00:15 +0800\r\nSubject: [PATCH] Fix sometimes memory exhausted\r\n\r\n---\r\n Classes/PHPExcel/Worksheet.php | 2 +-\r\n 1 file changed, 1 insertion(+), 1 deletion(-)\r\n\r\ndiff --git a/Classes/PHPExcel/Worksheet.php b/Classes/PHPExcel/Worksheet.php\r\nindex 483aa00..d712f78 100644\r\n--- a/Classes/PHPExcel/Worksheet.php\r\n+++ b/Classes/PHPExcel/Worksheet.php\r\n@@ -2797,7 +2797,7 @@ class PHPExcel_Worksheet implements PHPExcel_IComparable\r\n         $maxRow = $this->getHighestRow();\r\n         $maxCol = PHPExcel_Cell::columnIndexFromString($maxCol);\r\n \r\n-        $rangeBlocks = explode(' ', $range);\r\n+        $rangeBlocks = explode(' ', str_replace('$', '', strtoupper($range)));\r\n         foreach ($rangeBlocks as &$rangeSet) {\r\n             $rangeBoundaries = PHPExcel_Cell::getRangeBoundaries($rangeSet);\r\n \r\n-- \r\n2.10.2\r\n\r\n```. @MarkBaker Reference: https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Cell.php#L868. ![screenshot from 2016-11-21 16-41-01](https://cloud.githubusercontent.com/assets/6329191/20482277/c86240e4-b026-11e6-96d2-38ca1c549b8c.png)\r\n\r\nActually I only have one cell data. (See [Excel.zip](https://github.com/PHPOffice/PHPExcel/files/603051/a.zip) )\r\n\r\nSee `sqref` of  `dataValidation`, when it has `$` for example like this, `F$1:F$1048576` , `Worksheet.php::shrinkRangeToFit` cannot compare with `maxRow` and `maxCol`.\r\n\r\n`Worksheet.php::shrinkRangeToFit` will return `F$1:F$1048576` directly.\r\n\r\nAfter this\r\n\r\nIn `Call::extractAllCellReferencesInRange`  https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Cell.php#L896\r\nhas a loop, it will loop from `1 -> 1048576`\r\n . @MarkBaker  I am sorry I forget to tell you what methods I am using. \r\n\r\n```php\r\n$phpreader = new \\PHPExcel_Reader_Excel2007();\r\n$phpexcel = $phpreader->load($filePath);\r\n```\r\n\r\nWhen execute `load`, memory exhausted occur. . @MarkBaker  this is patch. Please review. \r\n\r\n```patch\r\n\r\nFrom 9d8794eb8d4ba8f3b47a210f355a45db37bd4d8f Mon Sep 17 00:00:00 2001\r\nFrom: \"danny.zhou\" <15725040705@126.com>\r\nDate: Mon, 21 Nov 2016 20:00:15 +0800\r\nSubject: [PATCH] Fix sometimes memory exhausted\r\n\r\n---\r\n Classes/PHPExcel/Worksheet.php | 2 +-\r\n 1 file changed, 1 insertion(+), 1 deletion(-)\r\n\r\ndiff --git a/Classes/PHPExcel/Worksheet.php b/Classes/PHPExcel/Worksheet.php\r\nindex 483aa00..d712f78 100644\r\n--- a/Classes/PHPExcel/Worksheet.php\r\n+++ b/Classes/PHPExcel/Worksheet.php\r\n@@ -2797,7 +2797,7 @@ class PHPExcel_Worksheet implements PHPExcel_IComparable\r\n         $maxRow = $this->getHighestRow();\r\n         $maxCol = PHPExcel_Cell::columnIndexFromString($maxCol);\r\n \r\n-        $rangeBlocks = explode(' ', $range);\r\n+        $rangeBlocks = explode(' ', str_replace('$', '', strtoupper($range)));\r\n         foreach ($rangeBlocks as &$rangeSet) {\r\n             $rangeBoundaries = PHPExcel_Cell::getRangeBoundaries($rangeSet);\r\n \r\n-- \r\n2.10.2\r\n\r\n```. @MarkBaker Reference: https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Cell.php#L868. ![screenshot from 2016-11-21 16-41-01](https://cloud.githubusercontent.com/assets/6329191/20482277/c86240e4-b026-11e6-96d2-38ca1c549b8c.png)\r\n\r\nActually I only have one cell data. (See [Excel.zip](https://github.com/PHPOffice/PHPExcel/files/603051/a.zip) )\r\n\r\nSee `sqref` of  `dataValidation`, when it has `$` for example like this, `F$1:F$1048576` , `Worksheet.php::shrinkRangeToFit` cannot compare with `maxRow` and `maxCol`.\r\n\r\n`Worksheet.php::shrinkRangeToFit` will return `F$1:F$1048576` directly.\r\n\r\nAfter this\r\n\r\nIn `Call::extractAllCellReferencesInRange`  https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Cell.php#L896\r\nhas a loop, it will loop from `1 -> 1048576`\r\n . @MarkBaker  I am sorry I forget to tell you what methods I am using. \r\n\r\n```php\r\n$phpreader = new \\PHPExcel_Reader_Excel2007();\r\n$phpexcel = $phpreader->load($filePath);\r\n```\r\n\r\nWhen execute `load`, memory exhausted occur. . ",
    "a-n-dcruz": "Yes, I tried renaming them both and the file renamed as aaaa.xlsx is read but \u753b\u9762.xlsx still returns the same error. I've ran the md5sum command for both files and they are exactly the same so I still don't know what is going on. I've also tested at least 5 other files with english and japanese filenames. All files with english names were read but none of the japanese files.. Further info, not sure if it helps:\r\n\r\nI try to upload the xlsx files first into a folder called uploads then read the uploaded file. I am using UploadedFile extension on Yii2 Framework.\r\n\r\nAlso, I've tried investigating IOFactory class. When checking the $readerType inside the createReader function, for the english-named files, I get Excel2007 but for the japanese-named files, I get basically all possible types defined in IOFactory (Excel2007, Excel5, Excel2003XML, OOCal, SYLKreader, Gnumericreader, HTML, HTML) in that order and so the $instance variable ends up getting the last type which is HTML. still don't understand why it returning all those readerTypes for this file.. Yes, here's the exact snippet from my code:\r\n`$encoded_filename = iconv('UTF-8', 'CP932', $filename);`\r\n`$inputFileType = \\PHPExcel_IOFactory::identify('uploads/' . $encoded_filename);`\r\n`$objReader = \\PHPExcel_IOFactory::createReader($inputFileType);`\r\n`$objPHPExcel = $objReader->load('uploads/' . $encoded_filename);`\r\n\r\n`var_dump(is_readable($pFilename));` -- Yes, this returns true.\r\n\r\nMy OS is Windows 7 64-bit.\r\n. I used the iconv snippet for retaining the original filename when uploading the file. Without it, the filename turns to garbage characters.\r\n\r\nAnyway, it seems that the encoding within the archive was the issue as well on my part. `\\PHPExcel_Settings::setZipClass(\\PHPExcel_Settings::PCLZIP);` fixed it.\r\n\r\nThanks!. Yes, I tried renaming them both and the file renamed as aaaa.xlsx is read but \u753b\u9762.xlsx still returns the same error. I've ran the md5sum command for both files and they are exactly the same so I still don't know what is going on. I've also tested at least 5 other files with english and japanese filenames. All files with english names were read but none of the japanese files.. Further info, not sure if it helps:\r\n\r\nI try to upload the xlsx files first into a folder called uploads then read the uploaded file. I am using UploadedFile extension on Yii2 Framework.\r\n\r\nAlso, I've tried investigating IOFactory class. When checking the $readerType inside the createReader function, for the english-named files, I get Excel2007 but for the japanese-named files, I get basically all possible types defined in IOFactory (Excel2007, Excel5, Excel2003XML, OOCal, SYLKreader, Gnumericreader, HTML, HTML) in that order and so the $instance variable ends up getting the last type which is HTML. still don't understand why it returning all those readerTypes for this file.. Yes, here's the exact snippet from my code:\r\n`$encoded_filename = iconv('UTF-8', 'CP932', $filename);`\r\n`$inputFileType = \\PHPExcel_IOFactory::identify('uploads/' . $encoded_filename);`\r\n`$objReader = \\PHPExcel_IOFactory::createReader($inputFileType);`\r\n`$objPHPExcel = $objReader->load('uploads/' . $encoded_filename);`\r\n\r\n`var_dump(is_readable($pFilename));` -- Yes, this returns true.\r\n\r\nMy OS is Windows 7 64-bit.\r\n. I used the iconv snippet for retaining the original filename when uploading the file. Without it, the filename turns to garbage characters.\r\n\r\nAnyway, it seems that the encoding within the archive was the issue as well on my part. `\\PHPExcel_Settings::setZipClass(\\PHPExcel_Settings::PCLZIP);` fixed it.\r\n\r\nThanks!. ",
    "echterhoff": "Oh, by the way... Seems like Excel can't handle the combination of the probably wrong firstSheet=\"0\" plus the veryHidden-State of the first worksheet in combination with the print document initialization.\r\nIf there is no veryHidden sheet present, the document prints out of the box, just as intended.. Oh, by the way... Seems like Excel can't handle the combination of the probably wrong firstSheet=\"0\" plus the veryHidden-State of the first worksheet in combination with the print document initialization.\r\nIf there is no veryHidden sheet present, the document prints out of the box, just as intended.. ",
    "marcelod": "Sorry, but I'm not sure how this will change the background color of a chart, but I'll try something. Thank you. Sorry, but I'm not sure how this will change the background color of a chart, but I'll try something. Thank you. ",
    "acfkv": "I have the Excel file: about 50000 rows and 10 columns. Need to get particular element(string) defined by RegExp, generated from PHP file. Or how can i connect RegEx statement to PHPExcel?. I have the Excel file: about 50000 rows and 10 columns. Need to get particular element(string) defined by RegExp, generated from PHP file. Or how can i connect RegEx statement to PHPExcel?. ",
    "kondonator": "Thanks to your feedbacks, I modified the code as below:\r\n\r\n```php\r\n$mimetype = $file->getClientMimeType();\r\n$filetype = PHPExcel_IOFactory::identify($dirpath . '/', $filename);\r\necho 'Mime Type: ' . $mimetype . '<br>';\r\necho 'File Type: ' . $filetype . '<br>';\r\necho 'File Path: ' . $dirpath . '/', $filename . '<br>';\r\n\\PHPExcel_Settings::setZipClass(\\PHPExcel_Settings::PCLZIP);\r\n$objReader = PHPExcel_IOFactory::createReader($filetype);\r\n\r\n$objPHPExcel = $objReader->load($dirpath . '/', $filename);\r\nvar_dump($objPHPExcel->getActiveSheet()->toArray(null,true,true,true));\r\n```\r\n\r\nWhat I saw on the browser is like this:\r\n\r\n```\r\nMime Type: application/vnd.ms-excel\r\nFile Type: CSV\r\nFile Path: /Users/kondonator/Documents/htdocs/payroll/storage/records/10/example1.xls\r\narray(1) { [1]=> array(1) { [\"A\"]=> NULL } }\r\n```\r\n\r\nFile Path is the correct value but the system still could not get the correct file type.\r\nWhat can I do next?\r\nThanks.. Thanks. When I uploaded  \"**PHPExcel_1.8.0_pdf/Documentation/Examples/Reading WorkBook Data/sampleData/example1.xls**\" I got the following error.\r\n\r\n```\r\nErrorException in ZipArchive.php line 173:\r\nUndefined variable: contents\r\nin ZipArchive.php line 173\r\nat HandleExceptions->handleError('8', 'Undefined variable: contents', '/Users/kondonator/Documents/htdocs/payroll/vendor/phpoffice/phpexcel/Classes/PHPExcel/Shared/ZipArchive.php', '173', array('fileName' => '_rels/.rels', 'list' => '0', 'listCount' => '1', 'list_index' => '-1', 'i' => '1', 'extracted' => '0', 'filename' => 'rels/.rels')) in ZipArchive.php line 173\r\nat PHPExcel_Shared_ZipArchive->getFromName('_rels/.rels') in Excel2007.php line 327\r\nat PHPExcel_Reader_Excel2007->_getFromZipArchive(object(PHPExcel_Shared_ZipArchive), '_rels/.rels') in Excel2007.php line 97\r\nat PHPExcel_Reader_Excel2007->canRead('/Users/kondonator/Documents/htdocs/payroll/storage/records/10/') in IOFactory.php line 280\r\nat PHPExcel_IOFactory::createReaderForFile('/Users/kondonator/Documents/htdocs/payroll/storage/records/10/') in IOFactory.php line 205\r\nat PHPExcel_IOFactory::identify('/Users/kondonator/Documents/htdocs/payroll/storage/records/10/', 'example1.xls') in TimecardsController.php line 149\r\nat TimecardsController->doUpload(object(Request))\r\n:\r\n```\r\n\r\nI found the similar problem on https://github.com/PHPOffice/PHPExcel/issues/535 but it was not solved.\r\n\r\nI examined the differences of the files between the file that composer installed and that I downloaded.\r\n \r\n``` diff\r\n$ diff -bc vendor/phpoffice/phpexcel/Classes/PHPExcel/Shared/ZipArchive.php ~/Downloads/PHPExcel_1.8.0_pdf/Classes/PHPExcel/Shared/ZipArchive.php\r\n*** vendor/phpoffice/phpexcel/Classes/PHPExcel/Shared/ZipArchive.php\tFri May  1 15:00:55 2015\r\n--- /Users/kondonator/Downloads/PHPExcel_1.8.0_pdf/Classes/PHPExcel/Shared/ZipArchive.php\tSun Mar  2 15:32:50 2014\r\n***************\r\n*** 22,32 ****\r\n   * @package    PHPExcel_Shared_ZipArchive\r\n   * @copyright  Copyright (c) 2006 - 2014 PHPExcel (http://www.codeplex.com/PHPExcel)\r\n   * @license    http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt\tLGPL\r\n!  * @version    ##VERSION##, ##DATE##\r\n   */\r\n\r\n  if (!defined('PCLZIP_TEMPORARY_DIR')) {\r\n! \tdefine('PCLZIP_TEMPORARY_DIR', PHPExcel_Shared_File::sys_get_temp_dir() . DIRECTORY_SEPARATOR);\r\n  }\r\n  require_once PHPEXCEL_ROOT . 'PHPExcel/Shared/PCLZip/pclzip.lib.php';\r\n\r\n--- 22,32 ----\r\n   * @package    PHPExcel_Shared_ZipArchive\r\n   * @copyright  Copyright (c) 2006 - 2014 PHPExcel (http://www.codeplex.com/PHPExcel)\r\n   * @license    http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt\tLGPL\r\n!  * @version    1.8.0, 2014-03-02\r\n   */\r\n\r\n  if (!defined('PCLZIP_TEMPORARY_DIR')) {\r\n! \tdefine('PCLZIP_TEMPORARY_DIR', PHPExcel_Shared_File::sys_get_temp_dir());\r\n  }\r\n  require_once PHPEXCEL_ROOT . 'PHPExcel/Shared/PCLZip/pclzip.lib.php';\r\n$\r\n```\r\nWhat should I do next?\r\nThanks for your help.. Thank you for your support.\r\nI got the following:\r\n\r\n```\r\n$ composer show phpoffice/phpexcel\r\nname     : phpoffice/phpexcel\r\ndescrip. : PHPExcel - OpenXML - Read, Create and Write Spreadsheet documents in PHP - Spreadsheet engine\r\nkeywords : OpenXML, excel, php, spreadsheet, xls, xlsx\r\nversions : * 1.8.1\r\ntype     : library\r\nlicense  : LGPL\r\nsource   : [git] https://github.com/PHPOffice/PHPExcel.git 372c7cbb695a6f6f1e62649381aeaa37e7e70b32\r\ndist     : [zip] https://api.github.com/repos/PHPOffice/PHPExcel/zipball/372c7cbb695a6f6f1e62649381aeaa37e7e70b32 372c7cbb695a6f6f1e62649381aeaa37e7e70b32\r\nnames    : phpoffice/phpexcel\r\n\r\nautoload\r\npsr-0\r\nPHPExcel => Classes/\r\n\r\nrequires\r\next-xml *\r\next-xmlwriter *\r\nphp >=5.2.0\r\n```\r\n\r\nCould this information be helpful to you?. Finally I found the cause.\r\n\r\n`$filetype = PHPExcel_IOFactory::identify($dirpath . '/', $filename);`\r\nshould be \r\n`$filetype = PHPExcel_IOFactory::identify($dirpath . '/' . $filename);`\r\n\r\nEverything works after I modified the code.\r\nThanks a million for your kind support.\r\n. Thanks to your feedbacks, I modified the code as below:\r\n\r\n```php\r\n$mimetype = $file->getClientMimeType();\r\n$filetype = PHPExcel_IOFactory::identify($dirpath . '/', $filename);\r\necho 'Mime Type: ' . $mimetype . '<br>';\r\necho 'File Type: ' . $filetype . '<br>';\r\necho 'File Path: ' . $dirpath . '/', $filename . '<br>';\r\n\\PHPExcel_Settings::setZipClass(\\PHPExcel_Settings::PCLZIP);\r\n$objReader = PHPExcel_IOFactory::createReader($filetype);\r\n\r\n$objPHPExcel = $objReader->load($dirpath . '/', $filename);\r\nvar_dump($objPHPExcel->getActiveSheet()->toArray(null,true,true,true));\r\n```\r\n\r\nWhat I saw on the browser is like this:\r\n\r\n```\r\nMime Type: application/vnd.ms-excel\r\nFile Type: CSV\r\nFile Path: /Users/kondonator/Documents/htdocs/payroll/storage/records/10/example1.xls\r\narray(1) { [1]=> array(1) { [\"A\"]=> NULL } }\r\n```\r\n\r\nFile Path is the correct value but the system still could not get the correct file type.\r\nWhat can I do next?\r\nThanks.. Thanks. When I uploaded  \"**PHPExcel_1.8.0_pdf/Documentation/Examples/Reading WorkBook Data/sampleData/example1.xls**\" I got the following error.\r\n\r\n```\r\nErrorException in ZipArchive.php line 173:\r\nUndefined variable: contents\r\nin ZipArchive.php line 173\r\nat HandleExceptions->handleError('8', 'Undefined variable: contents', '/Users/kondonator/Documents/htdocs/payroll/vendor/phpoffice/phpexcel/Classes/PHPExcel/Shared/ZipArchive.php', '173', array('fileName' => '_rels/.rels', 'list' => '0', 'listCount' => '1', 'list_index' => '-1', 'i' => '1', 'extracted' => '0', 'filename' => 'rels/.rels')) in ZipArchive.php line 173\r\nat PHPExcel_Shared_ZipArchive->getFromName('_rels/.rels') in Excel2007.php line 327\r\nat PHPExcel_Reader_Excel2007->_getFromZipArchive(object(PHPExcel_Shared_ZipArchive), '_rels/.rels') in Excel2007.php line 97\r\nat PHPExcel_Reader_Excel2007->canRead('/Users/kondonator/Documents/htdocs/payroll/storage/records/10/') in IOFactory.php line 280\r\nat PHPExcel_IOFactory::createReaderForFile('/Users/kondonator/Documents/htdocs/payroll/storage/records/10/') in IOFactory.php line 205\r\nat PHPExcel_IOFactory::identify('/Users/kondonator/Documents/htdocs/payroll/storage/records/10/', 'example1.xls') in TimecardsController.php line 149\r\nat TimecardsController->doUpload(object(Request))\r\n:\r\n```\r\n\r\nI found the similar problem on https://github.com/PHPOffice/PHPExcel/issues/535 but it was not solved.\r\n\r\nI examined the differences of the files between the file that composer installed and that I downloaded.\r\n \r\n``` diff\r\n$ diff -bc vendor/phpoffice/phpexcel/Classes/PHPExcel/Shared/ZipArchive.php ~/Downloads/PHPExcel_1.8.0_pdf/Classes/PHPExcel/Shared/ZipArchive.php\r\n*** vendor/phpoffice/phpexcel/Classes/PHPExcel/Shared/ZipArchive.php\tFri May  1 15:00:55 2015\r\n--- /Users/kondonator/Downloads/PHPExcel_1.8.0_pdf/Classes/PHPExcel/Shared/ZipArchive.php\tSun Mar  2 15:32:50 2014\r\n***************\r\n*** 22,32 ****\r\n   * @package    PHPExcel_Shared_ZipArchive\r\n   * @copyright  Copyright (c) 2006 - 2014 PHPExcel (http://www.codeplex.com/PHPExcel)\r\n   * @license    http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt\tLGPL\r\n!  * @version    ##VERSION##, ##DATE##\r\n   */\r\n\r\n  if (!defined('PCLZIP_TEMPORARY_DIR')) {\r\n! \tdefine('PCLZIP_TEMPORARY_DIR', PHPExcel_Shared_File::sys_get_temp_dir() . DIRECTORY_SEPARATOR);\r\n  }\r\n  require_once PHPEXCEL_ROOT . 'PHPExcel/Shared/PCLZip/pclzip.lib.php';\r\n\r\n--- 22,32 ----\r\n   * @package    PHPExcel_Shared_ZipArchive\r\n   * @copyright  Copyright (c) 2006 - 2014 PHPExcel (http://www.codeplex.com/PHPExcel)\r\n   * @license    http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt\tLGPL\r\n!  * @version    1.8.0, 2014-03-02\r\n   */\r\n\r\n  if (!defined('PCLZIP_TEMPORARY_DIR')) {\r\n! \tdefine('PCLZIP_TEMPORARY_DIR', PHPExcel_Shared_File::sys_get_temp_dir());\r\n  }\r\n  require_once PHPEXCEL_ROOT . 'PHPExcel/Shared/PCLZip/pclzip.lib.php';\r\n$\r\n```\r\nWhat should I do next?\r\nThanks for your help.. Thank you for your support.\r\nI got the following:\r\n\r\n```\r\n$ composer show phpoffice/phpexcel\r\nname     : phpoffice/phpexcel\r\ndescrip. : PHPExcel - OpenXML - Read, Create and Write Spreadsheet documents in PHP - Spreadsheet engine\r\nkeywords : OpenXML, excel, php, spreadsheet, xls, xlsx\r\nversions : * 1.8.1\r\ntype     : library\r\nlicense  : LGPL\r\nsource   : [git] https://github.com/PHPOffice/PHPExcel.git 372c7cbb695a6f6f1e62649381aeaa37e7e70b32\r\ndist     : [zip] https://api.github.com/repos/PHPOffice/PHPExcel/zipball/372c7cbb695a6f6f1e62649381aeaa37e7e70b32 372c7cbb695a6f6f1e62649381aeaa37e7e70b32\r\nnames    : phpoffice/phpexcel\r\n\r\nautoload\r\npsr-0\r\nPHPExcel => Classes/\r\n\r\nrequires\r\next-xml *\r\next-xmlwriter *\r\nphp >=5.2.0\r\n```\r\n\r\nCould this information be helpful to you?. Finally I found the cause.\r\n\r\n`$filetype = PHPExcel_IOFactory::identify($dirpath . '/', $filename);`\r\nshould be \r\n`$filetype = PHPExcel_IOFactory::identify($dirpath . '/' . $filename);`\r\n\r\nEverything works after I modified the code.\r\nThanks a million for your kind support.\r\n. ",
    "KedyCZ": "Thank you for your advice, I've used iconv() to translate path from utf-8 to windows-1250. It seems this solved the problem.\r\n\r\nMy corrected code:\r\n```\r\n$path = '\\\\\\\\server-cz\\\\01_pcz\\\\14_Odkladaci_prostor\\\\Luk\u00e1\u0161 Mouca\\\\FO-R-03-048_Pr\u016fvodka_d\u00edlu.xlsx';\r\n$encodedPath = iconv(\"UTF-8\", \"Windows-1250\", $path);\r\n$excel = PHPExcel_IOFactory::createReader('Excel2007');\r\n$excel = $excel->load($encodedPath);\r\n```\r\n\r\nThank you very much. :-) . Thank you for your advice, I've used iconv() to translate path from utf-8 to windows-1250. It seems this solved the problem.\r\n\r\nMy corrected code:\r\n```\r\n$path = '\\\\\\\\server-cz\\\\01_pcz\\\\14_Odkladaci_prostor\\\\Luk\u00e1\u0161 Mouca\\\\FO-R-03-048_Pr\u016fvodka_d\u00edlu.xlsx';\r\n$encodedPath = iconv(\"UTF-8\", \"Windows-1250\", $path);\r\n$excel = PHPExcel_IOFactory::createReader('Excel2007');\r\n$excel = $excel->load($encodedPath);\r\n```\r\n\r\nThank you very much. :-) . ",
    "Golodnyi": "Okay, I'll do it later. Okay, I'll do it later. ",
    "hrnmodi": "Is there any demo or example I can convert PDF to excel? after that I'll manage. Is there any demo or example I can convert PDF to excel? after that I'll manage. ",
    "Aliance": "Everything's easy \u2013 people usually do not need documentation in the `vendor` folder. They use it on package website or other remote places. The same for other files.\r\nThis lets decrease the total library size.\r\n\r\nShould I need to make pr to PhpSpreadsheet or you are still do not accept this pint of view?. > IMHO docs and tests are very useful to learn how a lib works, and I often have a look at them when developing.\r\n\r\nOf course they does, but where are you looking for them? In `vendor` dir or on official site?\r\nTests needs for developer (someone who clones the repo & makes changes), but not for users, who require your package via composer.. Everything's easy \u2013 people usually do not need documentation in the `vendor` folder. They use it on package website or other remote places. The same for other files.\r\nThis lets decrease the total library size.\r\n\r\nShould I need to make pr to PhpSpreadsheet or you are still do not accept this pint of view?. > IMHO docs and tests are very useful to learn how a lib works, and I often have a look at them when developing.\r\n\r\nOf course they does, but where are you looking for them? In `vendor` dir or on official site?\r\nTests needs for developer (someone who clones the repo & makes changes), but not for users, who require your package via composer.. ",
    "tombombadilll": "My bad then, downloaded the code from https://phpexcel.codeplex.com/ and saw the same version on github and didn't find any issue with the error.\r\nThanks!. My bad then, downloaded the code from https://phpexcel.codeplex.com/ and saw the same version on github and didn't find any issue with the error.\r\nThanks!. ",
    "schultz-it-solutions": "same here - this took me days to pin down!\r\n\r\nPHP 5.6.29 with\r\nSQLite3 support\tenabled\r\nSQLite3 module version \t0.7-dev\r\nSQLite Library \t3.8.10.2 \r\n\r\nCreating worksheets with Caching method SQLite3 produces the correct number of colums and rows, but each cell is empty. When I switch to method \"in PHP memory\" all runs as expected.\r\n\r\nIf requested, I can provide an showcase environment\r\n\r\nBest regards\r\nRuediger Schultz\r\n. I'll try to investigate and see what I can do.... Seems to me to be caused by\r\nhttps://bugs.php.net/bug.php?id=73530 , which is scheduled to be reverted in PHP 5.6.30:\r\n\r\n[2017-01-13 10:39 UTC] cmb@php.net\r\nThe revert of the BC breaking commit is already in PHP 5.6.30RC1,\r\nand as such is supposed to be shipped with PHP 5.6.30.\r\n\r\nSo I will evaluate this PHP release and get back here...\r\n. In my environment the PHP 5.6.30 **successfully fixes this issue** (although PHP 5.6.30RC1 seemed not to).\r\nso I suggest to close this issue. @PowerKiKi: just a thought on this CLOSED issue here.\r\nCould there be a respective note in PHPExcel and PhpSpreadsheet, that with PHP 5.6.29 there is a bug regarding the caching method SQLite3, so people do not tap into this trap?\r\nWarm regards\r\nRuediger. To be frank, I do not think we need some messures \"within the code\". PHP 5.6.29 is already \"not-the-latest-one\", so the issue will occur \"less-and-less\". \r\nmaybe a note in **readme.md in the \"Requirements\" section** would be enough? \r\nI know you are already fully focused on PhpSpreadsheet, but as long as there is no stable release (do you have a timeframe for this by the way???), copying such a note back to PHPExcel would be great...\r\n . I'm afraid I am not very knowledgable about the processes here on github. I tried to create an PR, but am not sure whether this was correctly done...\r\n\r\n. same here - this took me days to pin down!\r\n\r\nPHP 5.6.29 with\r\nSQLite3 support\tenabled\r\nSQLite3 module version \t0.7-dev\r\nSQLite Library \t3.8.10.2 \r\n\r\nCreating worksheets with Caching method SQLite3 produces the correct number of colums and rows, but each cell is empty. When I switch to method \"in PHP memory\" all runs as expected.\r\n\r\nIf requested, I can provide an showcase environment\r\n\r\nBest regards\r\nRuediger Schultz\r\n. I'll try to investigate and see what I can do.... Seems to me to be caused by\r\nhttps://bugs.php.net/bug.php?id=73530 , which is scheduled to be reverted in PHP 5.6.30:\r\n\r\n[2017-01-13 10:39 UTC] cmb@php.net\r\nThe revert of the BC breaking commit is already in PHP 5.6.30RC1,\r\nand as such is supposed to be shipped with PHP 5.6.30.\r\n\r\nSo I will evaluate this PHP release and get back here...\r\n. In my environment the PHP 5.6.30 **successfully fixes this issue** (although PHP 5.6.30RC1 seemed not to).\r\nso I suggest to close this issue. @PowerKiKi: just a thought on this CLOSED issue here.\r\nCould there be a respective note in PHPExcel and PhpSpreadsheet, that with PHP 5.6.29 there is a bug regarding the caching method SQLite3, so people do not tap into this trap?\r\nWarm regards\r\nRuediger. To be frank, I do not think we need some messures \"within the code\". PHP 5.6.29 is already \"not-the-latest-one\", so the issue will occur \"less-and-less\". \r\nmaybe a note in **readme.md in the \"Requirements\" section** would be enough? \r\nI know you are already fully focused on PhpSpreadsheet, but as long as there is no stable release (do you have a timeframe for this by the way???), copying such a note back to PHPExcel would be great...\r\n . I'm afraid I am not very knowledgable about the processes here on github. I tried to create an PR, but am not sure whether this was correctly done...\r\n\r\n. ",
    "SpringsTea": "My confusion comes from reading somewhere that \"getHighestDataColumn() returns the highest column that contains actual data in the cell\". If not for situations like this, when does this actually produce different results than getHighestColumn().\r\n\r\nI guess I just don't know about how excel stores it's data. This would mean you can have a cell exist, but have no data, ie no empty string?. ahh, I understand.\r\nOk, well thats lame. I guess I'll just check the cell data for blanks to verify.. My confusion comes from reading somewhere that \"getHighestDataColumn() returns the highest column that contains actual data in the cell\". If not for situations like this, when does this actually produce different results than getHighestColumn().\r\n\r\nI guess I just don't know about how excel stores it's data. This would mean you can have a cell exist, but have no data, ie no empty string?. ahh, I understand.\r\nOk, well thats lame. I guess I'll just check the cell data for blanks to verify.. ",
    "githubyyf": "![image](https://cloud.githubusercontent.com/assets/21100974/21258905/1fbbb5ae-c3ba-11e6-91ad-99346682a9f3.png)\r\n![image](https://cloud.githubusercontent.com/assets/21100974/21258918/2e188d48-c3ba-11e6-8517-c7c1563b08b4.png)\r\n@Synchro. Or test tool problem?. ![image](https://cloud.githubusercontent.com/assets/21100974/21258905/1fbbb5ae-c3ba-11e6-91ad-99346682a9f3.png)\r\n![image](https://cloud.githubusercontent.com/assets/21100974/21258918/2e188d48-c3ba-11e6-8517-c7c1563b08b4.png)\r\n@Synchro. Or test tool problem?. ",
    "jseliga": "@githubyyf You have to set response format to \"raw\":\r\n```php\r\nYii::$app->response->format = yii\\web\\Response::FORMAT_RAW;\r\n```\r\nAnd send response headers right before printing output:\r\n```php\r\nYii::$app->response->send();\r\n\r\n$objWriter->save('php://output');\r\n```. @githubyyf You have to set response format to \"raw\":\r\n```php\r\nYii::$app->response->format = yii\\web\\Response::FORMAT_RAW;\r\n```\r\nAnd send response headers right before printing output:\r\n```php\r\nYii::$app->response->send();\r\n\r\n$objWriter->save('php://output');\r\n```. ",
    "LorisZ": "Hi, I think i found the reason: I ask for the generation of the HTML seperately for each sheet. For the first sheet it checks if spans are calculated, which they are not and calculates the spans for the first sheet only. Then on the second sheet it checks if spans are calculated and it returns true, so the spans for the second sheet are not calculated anymore. I managed to work around this issue by first generating the HTML for all sheets (with `setSheetIndex(null)`) which calculates the spans for ALL sheets and then i can pick my sheets one by one.\r\n\r\nthe respective sections of code in Writer/HTML.php:\r\n\r\nin function `generateSheetData`:\r\n```php\r\n        if (!$this->_spansAreCalculated) {\r\n            $this->_calculateSpans();\r\n        }\r\n```\r\n\r\nin function `_calculateSpans`:\r\n```php\r\n        $sheetIndexes = $this->_sheetIndex !== null ?\r\n            array($this->_sheetIndex) : range(0, $this->_phpExcel->getSheetCount() - 1);\r\n```\r\n\r\nI can create an Issue on PhpSpreadsheet if you want, but I have no Php 5.5 available right now, so I have some difficulties to create a working example.. Okay, here's what I got for PHPExcel 1.8.1:\r\n\r\n```php\r\n<?php\r\n\r\nrequire_once __DIR__ . '/PHPExcel/Classes/PhpExcel.php';\r\nrequire_once __DIR__ . '/PHPExcel/Classes/PHPExcel/IOFactory.php';\r\n\r\n$objPHPExcel = new PhpExcel();\r\n$filename = __DIR__ . \"/TwoWorksheetsWithMergedCells.xlsx\";\r\n$objReader = PHPExcel_IOFactory::createReaderForFile($filename);\r\n$objPHPExcel = $objReader->load($filename);\r\n\r\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'HTML');\r\n\r\n/*// This commented block is a workaround\r\n$objWriter->setSheetIndex(null);\r\n$html = $objWriter->generateSheetData();*/\r\n\r\n$sheetHtml = [];\r\n$sheets = $objPHPExcel->getAllSheets();\r\nforeach ($sheets as $key => $sheet) {\r\n    $objWriter->setSheetIndex($key);\r\n    $sheetHtml[$key] = $objWriter->generateSheetData();\r\n    \r\n    echo \"<!--- start ----->\\n\";\r\n    echo $sheetHtml[$key];\r\n    echo \"<!--- end ----->\\n\";\r\n}\r\n```. Hi, I think i found the reason: I ask for the generation of the HTML seperately for each sheet. For the first sheet it checks if spans are calculated, which they are not and calculates the spans for the first sheet only. Then on the second sheet it checks if spans are calculated and it returns true, so the spans for the second sheet are not calculated anymore. I managed to work around this issue by first generating the HTML for all sheets (with `setSheetIndex(null)`) which calculates the spans for ALL sheets and then i can pick my sheets one by one.\r\n\r\nthe respective sections of code in Writer/HTML.php:\r\n\r\nin function `generateSheetData`:\r\n```php\r\n        if (!$this->_spansAreCalculated) {\r\n            $this->_calculateSpans();\r\n        }\r\n```\r\n\r\nin function `_calculateSpans`:\r\n```php\r\n        $sheetIndexes = $this->_sheetIndex !== null ?\r\n            array($this->_sheetIndex) : range(0, $this->_phpExcel->getSheetCount() - 1);\r\n```\r\n\r\nI can create an Issue on PhpSpreadsheet if you want, but I have no Php 5.5 available right now, so I have some difficulties to create a working example.. Okay, here's what I got for PHPExcel 1.8.1:\r\n\r\n```php\r\n<?php\r\n\r\nrequire_once __DIR__ . '/PHPExcel/Classes/PhpExcel.php';\r\nrequire_once __DIR__ . '/PHPExcel/Classes/PHPExcel/IOFactory.php';\r\n\r\n$objPHPExcel = new PhpExcel();\r\n$filename = __DIR__ . \"/TwoWorksheetsWithMergedCells.xlsx\";\r\n$objReader = PHPExcel_IOFactory::createReaderForFile($filename);\r\n$objPHPExcel = $objReader->load($filename);\r\n\r\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'HTML');\r\n\r\n/*// This commented block is a workaround\r\n$objWriter->setSheetIndex(null);\r\n$html = $objWriter->generateSheetData();*/\r\n\r\n$sheetHtml = [];\r\n$sheets = $objPHPExcel->getAllSheets();\r\nforeach ($sheets as $key => $sheet) {\r\n    $objWriter->setSheetIndex($key);\r\n    $sheetHtml[$key] = $objWriter->generateSheetData();\r\n    \r\n    echo \"<!--- start ----->\\n\";\r\n    echo $sheetHtml[$key];\r\n    echo \"<!--- end ----->\\n\";\r\n}\r\n```. ",
    "christian-06": "```php\r\n<?php\r\nerror_reporting(E_ALL);\r\nini_set('display_errors', true);\r\nrequire_once 'PHPExcel-1.8/Classes/PHPExcel.php';\r\n\r\n$objPHPExcel = new PHPExcel();\r\n$objPHPExcel->setActiveSheetIndex(0)\r\n            ->setCellValue('A1', 'Title 1')->setCellValue('B1', 'AT1234')\r\n            ->setCellValue('A2', 'Title 2')->setCellValue('B2', 'AT3456')\r\n            ->setCellValue('A3', 'Title 3')->setCellValue('B3', 'AT5678')\r\n            ->setCellValue('A4', 'Title 4')->setCellValue('B4', 'AT8875')\r\n            ->setCellValue('A5', 'Title 5')->setCellValue('B5', 'AT5457')\r\n            ->setCellValue('A7', '2')      ->setCellValue('B7', '=INDEX(A1:B5,A7,2)');\r\n            // In Excel, parameters must be per ; separated here by ,\r\n\r\nvar_dump($objPHPExcel->getActiveSheet()->getCell('B7')->getValue()); # Return String '=INDEX(A1:C5,A7,2)'\r\nvar_dump($objPHPExcel->getActiveSheet()->getCell('B7')->getCalculatedValue()); # Return String '#VALUE!'\r\n```\r\n\r\nExample without xlsx file purely created in code, comes to the same error.\r\nWhat am I doing wrong?\r\nI think the error in file \"PHPExcel / Calculation / LookupRef.php\" found in line 635?\r\nAn array is compare to an integer value\r\nArray > int. ```php\r\n<?php\r\nerror_reporting(E_ALL);\r\nini_set('display_errors', true);\r\nrequire_once 'PHPExcel-1.8/Classes/PHPExcel.php';\r\n\r\n$objPHPExcel = new PHPExcel();\r\n$objPHPExcel->setActiveSheetIndex(0)\r\n            ->setCellValue('A1', 'Title 1')->setCellValue('B1', 'AT1234')\r\n            ->setCellValue('A2', 'Title 2')->setCellValue('B2', 'AT3456')\r\n            ->setCellValue('A3', 'Title 3')->setCellValue('B3', 'AT5678')\r\n            ->setCellValue('A4', 'Title 4')->setCellValue('B4', 'AT8875')\r\n            ->setCellValue('A5', 'Title 5')->setCellValue('B5', 'AT5457')\r\n            ->setCellValue('A7', '2')      ->setCellValue('B7', '=INDEX(A1:B5,A7,2)');\r\n            // In Excel, parameters must be per ; separated here by ,\r\n\r\nvar_dump($objPHPExcel->getActiveSheet()->getCell('B7')->getValue()); # Return String '=INDEX(A1:C5,A7,2)'\r\nvar_dump($objPHPExcel->getActiveSheet()->getCell('B7')->getCalculatedValue()); # Return String '#VALUE!'\r\n```\r\n\r\nExample without xlsx file purely created in code, comes to the same error.\r\nWhat am I doing wrong?\r\nI think the error in file \"PHPExcel / Calculation / LookupRef.php\" found in line 635?\r\nAn array is compare to an integer value\r\nArray > int. ",
    "gintsmurans": "Ooh, sorry about that... Ooh, sorry about that... ",
    "freiwerk": "Thanks. Just wanted to let you know that the default branch is 1.8. here - would be good if it would be 1.8.1 (this is why the upgrade to the \"latest\" version didnt solve my issue).... Thanks. Just wanted to let you know that the default branch is 1.8. here - would be good if it would be 1.8.1 (this is why the upgrade to the \"latest\" version didnt solve my issue).... ",
    "sdespont": "Ok, I understand. \r\n\r\nYou should specify this limitation in the documentation.\r\n\r\nThank you for your quick answer.. Ok, I understand. \r\n\r\nYou should specify this limitation in the documentation.\r\n\r\nThank you for your quick answer.. ",
    "nickvellios": "Thanks.  I appreciate everything you and your team do in the name of opensource, but I am sure I am no the only one suffering from PHPOffice not bringing PHPExcel up to current PHP version compatibility before finishing a stable version of its replacement.. I fully understand.  Once it's stable we will be migrating to it and hopefully submitting patches.  Thanks again. Thanks.  I appreciate everything you and your team do in the name of opensource, but I am sure I am no the only one suffering from PHPOffice not bringing PHPExcel up to current PHP version compatibility before finishing a stable version of its replacement.. I fully understand.  Once it's stable we will be migrating to it and hopefully submitting patches.  Thanks again. ",
    "mnvx": "@MarkBaker Are there really no plans to support PHP 7.1?. @PowerKiKi Thanks for information. Also I found that new branch of Maatwebsite/Laravel-Excel use PhpSpreadsheet: https://github.com/Maatwebsite/Laravel-Excel/blob/3.0/composer.json#L25. @MarkBaker Are there really no plans to support PHP 7.1?. @PowerKiKi Thanks for information. Also I found that new branch of Maatwebsite/Laravel-Excel use PhpSpreadsheet: https://github.com/Maatwebsite/Laravel-Excel/blob/3.0/composer.json#L25. ",
    "max21": "I found the solution. The following line was the problem, anyone know why ?\r\n\r\n`setlocale(LC_ALL, array('fr', 'fr_FR', 'french', 'fra', 'fra_FRA', 'fr_FR.utf8', 'fr_FR.utf-8', 'fra_FRA.utf8', 'fra_FRA.utf-8'));`\r\n\r\nThanks :). Thanks for your help.\r\nAll float in xml draws files are written with coma instead of dot.\r\n\r\nFor example with the setlocale :\r\n\r\n` <c:pageMargins b=\"0,75\" footer=\"0,3\" header=\"0,3\" l=\"0,7\" r=\"0,7\" t=\"0,75\"/>`\r\n\r\nWithout the setlocale :\r\n\r\n`<c:pageMargins b=\"0.75\" footer=\"0.3\" header=\"0.3\" l=\"0.7\" r=\"0.7\" t=\"0.75\"/>`. I found the solution. The following line was the problem, anyone know why ?\r\n\r\n`setlocale(LC_ALL, array('fr', 'fr_FR', 'french', 'fra', 'fra_FRA', 'fr_FR.utf8', 'fr_FR.utf-8', 'fra_FRA.utf8', 'fra_FRA.utf-8'));`\r\n\r\nThanks :). Thanks for your help.\r\nAll float in xml draws files are written with coma instead of dot.\r\n\r\nFor example with the setlocale :\r\n\r\n` <c:pageMargins b=\"0,75\" footer=\"0,3\" header=\"0,3\" l=\"0,7\" r=\"0,7\" t=\"0,75\"/>`\r\n\r\nWithout the setlocale :\r\n\r\n`<c:pageMargins b=\"0.75\" footer=\"0.3\" header=\"0.3\" l=\"0.7\" r=\"0.7\" t=\"0.75\"/>`. ",
    "mmuman": "Hmm, from looking at the code the getter looks suspiciously like a bad copy-paste:\r\n\r\n```php\r\n\t\t\t\t$type = $dataValidation->getType();\r\n\u2026\r\n\t\t\t\t$errorStyle = $dataValidation->getType();\r\n```\r\n\r\nShouldn't it be getErrorStyle() the second time? \ud83d\ude14. Nice, one less !\r\nI still have a bug in my case here, it just strips some cells either with CONCATENATE() in LO (it ends up as _xlfn.CONCAT) or with the concatenation operator & used more than once, but that's probably something else.\r\nI should probably try PhpSpreadsheet..... Aren't we all? \ud83d\ude0a\r\nOh but this means I need to upgrade PHP on my server.... Hmm, from looking at the code the getter looks suspiciously like a bad copy-paste:\r\n\r\n```php\r\n\t\t\t\t$type = $dataValidation->getType();\r\n\u2026\r\n\t\t\t\t$errorStyle = $dataValidation->getType();\r\n```\r\n\r\nShouldn't it be getErrorStyle() the second time? \ud83d\ude14. Nice, one less !\r\nI still have a bug in my case here, it just strips some cells either with CONCATENATE() in LO (it ends up as _xlfn.CONCAT) or with the concatenation operator & used more than once, but that's probably something else.\r\nI should probably try PhpSpreadsheet..... Aren't we all? \ud83d\ude0a\r\nOh but this means I need to upgrade PHP on my server.... ",
    "MosheHarush": "I get this error also.\r\nIts trigger when data type column empty or cell with text define as date type, The script try to convert as date and got an errors.. I get this error also.\r\nIts trigger when data type column empty or cell with text define as date type, The script try to convert as date and got an errors.. ",
    "thomasdominic": "In the file Excel5.php https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Writer/Excel5.php#L372 ; \r\n\r\nThe method stringFromColumnIndex The method expects an integer  while a string is given because this method return a string\r\n\t\t\t\t\t`. In the file Excel5.php https://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Writer/Excel5.php#L372 ; \r\n\r\nThe method stringFromColumnIndex The method expects an integer  while a string is given because this method return a string\r\n\t\t\t\t\t`. ",
    "chamath": "Is there any update for this issue? we are using phpoffice/phpexcel 1.8 for yii2. I have updated it to 1.8.1 but issue is still there.. Is there any update for this issue? we are using phpoffice/phpexcel 1.8 for yii2. I have updated it to 1.8.1 but issue is still there.. ",
    "hawkthor": "Unfortunately there was no time for more debugging, it was a production system that needed a fast fix and I switched to SpreadsheetReader.\r\n\r\nI'm looking forward to the release of PHPSpreadsheet.. Unfortunately there was no time for more debugging, it was a production system that needed a fast fix and I switched to SpreadsheetReader.\r\n\r\nI'm looking forward to the release of PHPSpreadsheet.. ",
    "kevingatp": "Thanks for the knowledge  \ud83d\udc4d \r\nI've try your suggestion, but I got nothing. \r\nAnd if I `echo` the data of column A9 above, it will display 8.0000315147692E+14.\r\n\r\nThanks :). Thanks for the knowledge  \ud83d\udc4d \r\nI've try your suggestion, but I got nothing. \r\nAnd if I `echo` the data of column A9 above, it will display 8.0000315147692E+14.\r\n\r\nThanks :). ",
    "nathanc85": "Thanks @MarkBaker the ```$worksheet->getStyle($entire_column)\r\n      ->getNumberFormat()\r\n      ->setFormatCode('0');``` \r\nworked for me.... Thanks @MarkBaker the ```$worksheet->getStyle($entire_column)\r\n      ->getNumberFormat()\r\n      ->setFormatCode('0');``` \r\nworked for me.... ",
    "sebardo": "Same problem here ...\r\nI update \"liuggio/excelbundle\" from 2.0 to 2.1 and all work well ... zip and excel.\r\n\r\nVersion 2.0 of \"liuggio/excelbundle\" use an old version of phpexcel with ZipArchive inside and PHPEXCEL_ROOT constant .\r\n\r\nThank for your help @cirovargas \r\n. Same problem here ...\r\nI update \"liuggio/excelbundle\" from 2.0 to 2.1 and all work well ... zip and excel.\r\n\r\nVersion 2.0 of \"liuggio/excelbundle\" use an old version of phpexcel with ZipArchive inside and PHPEXCEL_ROOT constant .\r\n\r\nThank for your help @cirovargas \r\n. ",
    "AmazingDreams": "Here is a snippet from my code, which should only load the data that is actually written. Maybe it will be of help to you:\r\n\r\n```php\r\n/**\r\n * Reads the data from the file\r\n *\r\n * @return  array  Excel data\r\n */\r\npublic function getData()\r\n{\r\n    $loader = \\PHPExcel_IOFactory::createReaderForFile($this->filename);\r\n    $loader->setReadDataOnly(true);\r\n\r\n    // Load only the first sheet\r\n    $worksheets = $loader->listWorkSheetNames($this->filename);\r\n    $loader->setLoadSheetsOnly($worksheets[0]);\r\n\r\n    $reader = $loader->load($this->filename);\r\n    $sheet = $reader->getActiveSheet();\r\n\r\n    $highestRow = $sheet->getHighestRow();\r\n    $highestCol = $sheet->getHighestColumn();\r\n\r\n    return $sheet->rangeToArray(\"A1:$highestCol$highestRow\", null, true, false, false);\r\n}\r\n```. Here is a snippet from my code, which should only load the data that is actually written. Maybe it will be of help to you:\r\n\r\n```php\r\n/**\r\n * Reads the data from the file\r\n *\r\n * @return  array  Excel data\r\n */\r\npublic function getData()\r\n{\r\n    $loader = \\PHPExcel_IOFactory::createReaderForFile($this->filename);\r\n    $loader->setReadDataOnly(true);\r\n\r\n    // Load only the first sheet\r\n    $worksheets = $loader->listWorkSheetNames($this->filename);\r\n    $loader->setLoadSheetsOnly($worksheets[0]);\r\n\r\n    $reader = $loader->load($this->filename);\r\n    $sheet = $reader->getActiveSheet();\r\n\r\n    $highestRow = $sheet->getHighestRow();\r\n    $highestCol = $sheet->getHighestColumn();\r\n\r\n    return $sheet->rangeToArray(\"A1:$highestCol$highestRow\", null, true, false, false);\r\n}\r\n```. ",
    "eehmke": "That is the PHP compatibility checker plugin in the WordPress plugin collection. \n\nAm 11. Februar 2017 04:29:35 MEZ schrieb Adrien Crivelli <notifications@github.com>:\n>Can you please let me know what tool you used to check compatibility ?\n>\n>\n>-- \n>You are receiving this because you authored the thread.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/PHPOffice/PHPExcel/issues/1129#issuecomment-279117825\n\n-- \nDiese Nachricht wurde von meinem Android-Mobiltelefon mit K-9 Mail gesendet.. https://de.wordpress.org/plugins/php-compatibility-checker/\r\nExcuse me, I was on the road today.. That is the PHP compatibility checker plugin in the WordPress plugin collection. \n\nAm 11. Februar 2017 04:29:35 MEZ schrieb Adrien Crivelli <notifications@github.com>:\n>Can you please let me know what tool you used to check compatibility ?\n>\n>\n>-- \n>You are receiving this because you authored the thread.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/PHPOffice/PHPExcel/issues/1129#issuecomment-279117825\n\n-- \nDiese Nachricht wurde von meinem Android-Mobiltelefon mit K-9 Mail gesendet.. https://de.wordpress.org/plugins/php-compatibility-checker/\r\nExcuse me, I was on the road today.. ",
    "cdmathukiya": "you just need to add zip module in server from cpanel\r\nyou can set it from here \r\n\r\n> cpanel -> Select PHP version -> check zip module in this page\r\n. you just need to add zip module in server from cpanel\r\nyou can set it from here \r\n\r\n> cpanel -> Select PHP version -> check zip module in this page\r\n. ",
    "KaiJiaBrother": "ths. ths. ",
    "cocoya23": "Where can I find the PHPExcel_Settings class?\r\nwhats the use statement?. Where can I find the PHPExcel_Settings class?\r\nwhats the use statement?. ",
    "molimpio": "sudo apt-get install php7.0-zip. sudo apt-get install php7.0-zip. ",
    "mattiasghodsian": "I updated my first post. I updated my first post. ",
    "filipposisti": "Hi, i did solve by putting a try{}catch{} at line 555 of Excel2007.php (located at /vendor/phpoffice/phpexcel/Classes/PHPExcel/Reader/Excel2007.php) file where the\r\n\r\n`foreach ($xmlStyles->cellStyleXfs->xf as $xf) {`\r\n\r\nstarts. The xlsx style xml does not contain cellStyleXfs  tag.\r\n\r\nThe issue is caused by a wrong interpretation of ISO/IEC 29500-1 standard. The minOccurs=\"0\" for cellStyleXfs which indicates that this element is not required. The application should handle a non-existent cellStyleXfs element. My file was created by fileMaker.. Hi, i did solve by putting a try{}catch{} at line 555 of Excel2007.php (located at /vendor/phpoffice/phpexcel/Classes/PHPExcel/Reader/Excel2007.php) file where the\r\n\r\n`foreach ($xmlStyles->cellStyleXfs->xf as $xf) {`\r\n\r\nstarts. The xlsx style xml does not contain cellStyleXfs  tag.\r\n\r\nThe issue is caused by a wrong interpretation of ISO/IEC 29500-1 standard. The minOccurs=\"0\" for cellStyleXfs which indicates that this element is not required. The application should handle a non-existent cellStyleXfs element. My file was created by fileMaker.. ",
    "jishvi": "It worked. Thanks. . It worked. Thanks. . ",
    "lando212": "Hi Mark, \r\n\r\nYes, I should have pointed out I'm very new to this, so I've not altered the HTML Writer, I was just using it as such...\r\n\r\n`            $i = 0;\r\n                while ($objPHPExcel->setActiveSheetIndex($i)){\r\n\r\n                $objWorksheet = $objPHPExcel->getActiveSheet();\r\n                $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'HTML');\r\n                $objWriter->save('php://output');\r\n                $i++;\r\n\r\n            }`. Hi Mark, thanks for this, but won't that just write all the sheets to one HTML page, which would be fine if I had some way to separate them, with a tab or something.\r\n\r\nEven if there was some way to separate each sheet into a separate DIV I could then handle them separately within the page I think?\r\n. Ok, I'll give that a try and let you know, thanks very much for your help Mark.. Hi Mark, just to give you a quick update, that's a lot closer to what I'm looking for, but it's still putting all the sheets on the same page, but it just puts a list of hyperlinks at the top of the page so you can jump to the correct sheet. \r\n\r\nBut you've definitely pointed me in the right direction as I assume I can now edit the HTML.php file to display the output the way I'd like it.\r\n\r\nThanks again for your help!. Hi Mark, \r\n\r\nYes, I should have pointed out I'm very new to this, so I've not altered the HTML Writer, I was just using it as such...\r\n\r\n`            $i = 0;\r\n                while ($objPHPExcel->setActiveSheetIndex($i)){\r\n\r\n                $objWorksheet = $objPHPExcel->getActiveSheet();\r\n                $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'HTML');\r\n                $objWriter->save('php://output');\r\n                $i++;\r\n\r\n            }`. Hi Mark, thanks for this, but won't that just write all the sheets to one HTML page, which would be fine if I had some way to separate them, with a tab or something.\r\n\r\nEven if there was some way to separate each sheet into a separate DIV I could then handle them separately within the page I think?\r\n. Ok, I'll give that a try and let you know, thanks very much for your help Mark.. Hi Mark, just to give you a quick update, that's a lot closer to what I'm looking for, but it's still putting all the sheets on the same page, but it just puts a list of hyperlinks at the top of the page so you can jump to the correct sheet. \r\n\r\nBut you've definitely pointed me in the right direction as I assume I can now edit the HTML.php file to display the output the way I'd like it.\r\n\r\nThanks again for your help!. ",
    "ReinierB": "Hi Lando212,\r\nI worked on the same requirement yesterday. \r\n\r\nI found the solution on: \r\nhttps://docs.typo3.org/typo3cms/extensions/phpexcel_library/1.7.4/manual.html#_Toc237519966\r\n\r\nMy testing code in Laravel 5.4:\r\n\r\n    Route::get('/xls', function() {\r\n        //this works (native PHPExcel), it does not work with the maatwebsite object:\r\n        $template = base_path().'/excel_templates/report.xlsx';\r\n\r\n        $ReadObj = new PHPExcel_Reader_Excel2007();\r\n        $objPHPExcel = $ReadObj->load($template);\r\n\r\n        $sheet = $objPHPExcel->getActiveSheet();\r\n        $sheet->getCell('B2')->setValue('Reinier');\r\n        $sheet->getCell('B3')->setValue('Bastiaan');\r\n        $sheet->getCell('G7')->setValue('Same text');\r\n\r\n        $objPHPExcel->setActiveSheetIndexByName('data');\r\n        $sheet = $objPHPExcel->getActiveSheet();\r\n        $sheet->getCell('B2')->setValue('DATA');\r\n        $sheet->getCell('B3')->setValue('More information here');\r\n        $sheet->getCell('G7')->setValue('Say hi');\r\n\r\n        $writeObj = new PHPExcel_Writer_HTML($objPHPExcel);\r\n        //to do: define in system vars the sheet names to report to the customer\r\n        //$writeObj->writeAllSheets();\r\n        //$output = $writeObj->generateHTMLHeader();\r\n        $output  = \"Here is a first line of text<br><br>\";\r\n        $writeObj->setSheetIndex(0);\r\n        $output .= $writeObj->generateStyles(true);  // write <style> and </style>\r\n        $output .= $writeObj->generateSheetData();        //$writeObj->save('php://output');\r\n        $output .= \"Another line of text<br><br>\";\r\n        $writeObj->setSheetIndex(1);\r\n        //$output .= $writeObj->generateStyles(true);  // write <style> and </style>\r\n        $output .= $writeObj->generateSheetData();\r\n        //$writeObj->save('php://output');\r\n        $output .= \"This is the last line of text\";\r\n      //  $output = htmlspecialchars($output);\r\n        //$output .= $writeObj->generateHTMLFooter();\r\n\r\n        return view('report.output',array('output'=> $output));\r\n    });\r\n\r\nI have this issue to resolve: the generateStyles(true) seems to use the style of the SheetIndex(0) (the first), the second generateStyles() does not take the formatting of the second sheet. Furthermore, the CSS code of the master blade overrides the CSS code that in the $output.. Hi Lando212,\r\nI worked on the same requirement yesterday. \r\n\r\nI found the solution on: \r\nhttps://docs.typo3.org/typo3cms/extensions/phpexcel_library/1.7.4/manual.html#_Toc237519966\r\n\r\nMy testing code in Laravel 5.4:\r\n\r\n    Route::get('/xls', function() {\r\n        //this works (native PHPExcel), it does not work with the maatwebsite object:\r\n        $template = base_path().'/excel_templates/report.xlsx';\r\n\r\n        $ReadObj = new PHPExcel_Reader_Excel2007();\r\n        $objPHPExcel = $ReadObj->load($template);\r\n\r\n        $sheet = $objPHPExcel->getActiveSheet();\r\n        $sheet->getCell('B2')->setValue('Reinier');\r\n        $sheet->getCell('B3')->setValue('Bastiaan');\r\n        $sheet->getCell('G7')->setValue('Same text');\r\n\r\n        $objPHPExcel->setActiveSheetIndexByName('data');\r\n        $sheet = $objPHPExcel->getActiveSheet();\r\n        $sheet->getCell('B2')->setValue('DATA');\r\n        $sheet->getCell('B3')->setValue('More information here');\r\n        $sheet->getCell('G7')->setValue('Say hi');\r\n\r\n        $writeObj = new PHPExcel_Writer_HTML($objPHPExcel);\r\n        //to do: define in system vars the sheet names to report to the customer\r\n        //$writeObj->writeAllSheets();\r\n        //$output = $writeObj->generateHTMLHeader();\r\n        $output  = \"Here is a first line of text<br><br>\";\r\n        $writeObj->setSheetIndex(0);\r\n        $output .= $writeObj->generateStyles(true);  // write <style> and </style>\r\n        $output .= $writeObj->generateSheetData();        //$writeObj->save('php://output');\r\n        $output .= \"Another line of text<br><br>\";\r\n        $writeObj->setSheetIndex(1);\r\n        //$output .= $writeObj->generateStyles(true);  // write <style> and </style>\r\n        $output .= $writeObj->generateSheetData();\r\n        //$writeObj->save('php://output');\r\n        $output .= \"This is the last line of text\";\r\n      //  $output = htmlspecialchars($output);\r\n        //$output .= $writeObj->generateHTMLFooter();\r\n\r\n        return view('report.output',array('output'=> $output));\r\n    });\r\n\r\nI have this issue to resolve: the generateStyles(true) seems to use the style of the SheetIndex(0) (the first), the second generateStyles() does not take the formatting of the second sheet. Furthermore, the CSS code of the master blade overrides the CSS code that in the $output.. ",
    "TaurusQ": "I have the same problem,is there any solution?. I have the same problem,is there any solution?. ",
    "junphp": "check white space in your code. error reads your code white space make xml error. . check white space in your code. error reads your code white space make xml error. . ",
    "EnVy28": "Hello fellow human,\r\n\r\nAre you also experiencing some random column width resize?\r\nAlso what version of excel are you using? (I'll guess, office 365?)\r\n\r\nPS: I'm not a contributor or something, I'm also looking for answers, in fact. . Hello fellow human,\r\n\r\nAre you also experiencing some random column width resize?\r\nAlso what version of excel are you using? (I'll guess, office 365?)\r\n\r\nPS: I'm not a contributor or something, I'm also looking for answers, in fact. . ",
    "oveach": "@PowerKiKi Here you are:\r\n\r\n```php\r\n$data = array('foo' => '150000197301');\r\n$phpExcel = new PHPExcel();\r\n$sheet = $phpExcel->getSheet(0);\r\n$sheet->fromArray($data, null, 'A1');\r\n$sheet->getStyle('A1:A1')\r\n    ->getNumberFormat()\r\n    ->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_TEXT);\r\n$writer = PHPExcel_IOFactory::createWriter($phpExcel, 'Excel2007');\r\n$writer->save('test.xlsx');\r\n```\r\n\r\nWith PHP 5.6 we had a cell with \"150000197301\".\r\nWith PHP 7.1 we have a cell with \"1,5E+11\".\r\nYou can notice I force the format to \"text\"...\r\n\r\nI presume this is an issue related to the \"Numerical string conversions now respect scientific notation\" BC break introduced in 7.1:\r\nhttps://secure.php.net/manual/en/migration71.incompatible.php#migration71.incompatible.numerical-strings-scientific-notation\r\n\r\nNote : PHPExcel 1.8.1, PHP 7.1.2 on Windows and tested in Excel 2010 in french.. @PowerKiKi Here you are:\r\n\r\n```php\r\n$data = array('foo' => '150000197301');\r\n$phpExcel = new PHPExcel();\r\n$sheet = $phpExcel->getSheet(0);\r\n$sheet->fromArray($data, null, 'A1');\r\n$sheet->getStyle('A1:A1')\r\n    ->getNumberFormat()\r\n    ->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_TEXT);\r\n$writer = PHPExcel_IOFactory::createWriter($phpExcel, 'Excel2007');\r\n$writer->save('test.xlsx');\r\n```\r\n\r\nWith PHP 5.6 we had a cell with \"150000197301\".\r\nWith PHP 7.1 we have a cell with \"1,5E+11\".\r\nYou can notice I force the format to \"text\"...\r\n\r\nI presume this is an issue related to the \"Numerical string conversions now respect scientific notation\" BC break introduced in 7.1:\r\nhttps://secure.php.net/manual/en/migration71.incompatible.php#migration71.incompatible.numerical-strings-scientific-notation\r\n\r\nNote : PHPExcel 1.8.1, PHP 7.1.2 on Windows and tested in Excel 2010 in french.. ",
    "Taebu": "thank you for advice\r\nset range how to this way ?\r\n```php\r\nfunction createColumnsArray($end_column, $first_letters = '')\r\n{\r\n  $columns = array();\r\n  $length = strlen($end_column);\r\n  $letters = range('A', 'Z');\r\n\r\n  // Iterate over 26 letters.\r\n  foreach ($letters as $letter) {\r\n      // Paste the $first_letters before the next.\r\n      $column = $first_letters . $letter;\r\n\r\n      // Add the column to the final array.\r\n      $columns[] = $column;\r\n\r\n      // If it was the end column that was added, return the columns.\r\n      if ($column == $end_column)\r\n          return $columns;\r\n  }\r\n\r\n  // Add the column children.\r\n  foreach ($columns as $column) {\r\n      // Don't itterate if the $end_column was already set in a previous itteration.\r\n      // Stop iterating if you've reached the maximum character length.\r\n      if (!in_array($end_column, $columns) && strlen($column) < $length) {\r\n          $new_columns = createColumnsArray($end_column, $column);\r\n          // Merge the new columns which were created with the final columns array.\r\n          $columns = array_merge($columns, $new_columns);\r\n      }\r\n  }\r\n\r\n  return $columns;\r\n}\r\n\r\necho \"<pre>\";\r\nprint_r( createColumnsArray('BZ'));\r\n```\r\n\r\nhttp://stackoverflow.com/questions/14278603/php-range-from-a-to-zz. thank you for advice\r\nset range how to this way ?\r\n```php\r\nfunction createColumnsArray($end_column, $first_letters = '')\r\n{\r\n  $columns = array();\r\n  $length = strlen($end_column);\r\n  $letters = range('A', 'Z');\r\n\r\n  // Iterate over 26 letters.\r\n  foreach ($letters as $letter) {\r\n      // Paste the $first_letters before the next.\r\n      $column = $first_letters . $letter;\r\n\r\n      // Add the column to the final array.\r\n      $columns[] = $column;\r\n\r\n      // If it was the end column that was added, return the columns.\r\n      if ($column == $end_column)\r\n          return $columns;\r\n  }\r\n\r\n  // Add the column children.\r\n  foreach ($columns as $column) {\r\n      // Don't itterate if the $end_column was already set in a previous itteration.\r\n      // Stop iterating if you've reached the maximum character length.\r\n      if (!in_array($end_column, $columns) && strlen($column) < $length) {\r\n          $new_columns = createColumnsArray($end_column, $column);\r\n          // Merge the new columns which were created with the final columns array.\r\n          $columns = array_merge($columns, $new_columns);\r\n      }\r\n  }\r\n\r\n  return $columns;\r\n}\r\n\r\necho \"<pre>\";\r\nprint_r( createColumnsArray('BZ'));\r\n```\r\n\r\nhttp://stackoverflow.com/questions/14278603/php-range-from-a-to-zz. ",
    "zmiter": "got the same.... got the same.... ",
    "Francesco-1277": "solved with another approach\r\n\r\n`function eXtoJSON($id) {\r\n\r\n  $listino = \\App\\manage_list::find($id);\r\n\r\n  if ( $list->tipo_list='interpolated' ) {\r\n\r\n    require(\"PHPExcel.php\");\r\n    require_once(\"PHPExcel/IOFactory.php\");\r\n\r\n    $path = \"interpolated.ods\";\r\n    $fileObj = PHPExcel_IOFactory::load( $path );\r\n    $sheetObj = $fileObj->getActiveSheet();\r\n\r\n    //$highestColumm = $fileObj->setActiveSheetIndex(0)->getHighestColumn();\r\n    $highestRow = $fileObj->setActiveSheetIndex(0)->getHighestRow();\r\n\r\n    $number_of_columns = 2;\r\n    for ($row = 1; $row < $highestRow + 1; $row++) {\r\n        $dataset = array();\r\n        for ($column = 0; $column < $number_of_columns; $column++) {\r\n            $dataset[] = $fileObj->setActiveSheetIndex(0)->getCellByColumnAndRow($column, $row)->getValue();\r\n        }\r\n        $datasets[] = $dataset;\r\n    }\r\n\r\n    $header = $datasets[0];\r\n    $a = $header[0];\r\n    $b = $header[1];\r\n\r\n    $blocco = array();\r\n\r\n    for ($i=1; $i<count($datasets); $i++ ) {\r\n\r\n       $parte = array();\r\n\r\n       $parte = $datasets[$i];\r\n\r\n       $blocco[] = array($a =>$parte[0], $b =>$parte[1] );\r\n\r\n       unset($parte);\r\n\r\n     }\r\n\r\n    $structure  = array ('article'=>$list->id, 'list'=> $blocco);\r\n\r\n    $json = json_encode($structure );\r\n\r\n   }`. solved with another approach\r\n\r\n`function eXtoJSON($id) {\r\n\r\n  $listino = \\App\\manage_list::find($id);\r\n\r\n  if ( $list->tipo_list='interpolated' ) {\r\n\r\n    require(\"PHPExcel.php\");\r\n    require_once(\"PHPExcel/IOFactory.php\");\r\n\r\n    $path = \"interpolated.ods\";\r\n    $fileObj = PHPExcel_IOFactory::load( $path );\r\n    $sheetObj = $fileObj->getActiveSheet();\r\n\r\n    //$highestColumm = $fileObj->setActiveSheetIndex(0)->getHighestColumn();\r\n    $highestRow = $fileObj->setActiveSheetIndex(0)->getHighestRow();\r\n\r\n    $number_of_columns = 2;\r\n    for ($row = 1; $row < $highestRow + 1; $row++) {\r\n        $dataset = array();\r\n        for ($column = 0; $column < $number_of_columns; $column++) {\r\n            $dataset[] = $fileObj->setActiveSheetIndex(0)->getCellByColumnAndRow($column, $row)->getValue();\r\n        }\r\n        $datasets[] = $dataset;\r\n    }\r\n\r\n    $header = $datasets[0];\r\n    $a = $header[0];\r\n    $b = $header[1];\r\n\r\n    $blocco = array();\r\n\r\n    for ($i=1; $i<count($datasets); $i++ ) {\r\n\r\n       $parte = array();\r\n\r\n       $parte = $datasets[$i];\r\n\r\n       $blocco[] = array($a =>$parte[0], $b =>$parte[1] );\r\n\r\n       unset($parte);\r\n\r\n     }\r\n\r\n    $structure  = array ('article'=>$list->id, 'list'=> $blocco);\r\n\r\n    $json = json_encode($structure );\r\n\r\n   }`. ",
    "codreanulaurentiu": "Unfortunately no, actually i increased the memory using a swp file to write on the disk just to avoid oom problems (and this is done asynchronous so the browser doesn't cut my connection either). The problem from I can tell is the fact that XLS doesn't know how to handle >60k data validations and i haven't found a way to use cell ranges for data validations instead of single cells\r\n. Unfortunately no, actually i increased the memory using a swp file to write on the disk just to avoid oom problems (and this is done asynchronous so the browser doesn't cut my connection either). The problem from I can tell is the fact that XLS doesn't know how to handle >60k data validations and i haven't found a way to use cell ranges for data validations instead of single cells\r\n. ",
    "msukhov": "Most probably this file wrongly generated (unable to check this point)...\r\nBut MS Excel 2013 displays the suffix from XLSX-file, instead of standart one.\r\nOO Calc displays '\u0440.' as well.\r\n. Ok. Most probably this file wrongly generated (unable to check this point)...\r\nBut MS Excel 2013 displays the suffix from XLSX-file, instead of standart one.\r\nOO Calc displays '\u0440.' as well.\r\n. Ok. ",
    "cinco-de-mauro": "Also having this issue. Any solutions or suggestions?. Also having this issue. Any solutions or suggestions?. ",
    "aHxShUM": "Having the same issue.\r\n\r\nIt seems something related to the filter on Google spreadsheet because errors disappear when I download with filter OFF.. Having the same issue.\r\n\r\nIt seems something related to the filter on Google spreadsheet because errors disappear when I download with filter OFF.. ",
    "jleahy7711": "I too have ran into this issue and I do hope it gets resolved.  I rely very heavily upon PHPExcel for several different projects.  I've run into a similar issue while trying to utilize PhpSpreadsheet as a replacement.  It is not a viable option.  Can we please patch this?. I too have ran into this issue and I do hope it gets resolved.  I rely very heavily upon PHPExcel for several different projects.  I've run into a similar issue while trying to utilize PhpSpreadsheet as a replacement.  It is not a viable option.  Can we please patch this?. ",
    "johnrembo": "May be saving breaks it down. I get an empty sell there at A1. May be saving breaks it down. I get an empty sell there at A1. ",
    "jogi-skills": "Got solution : \r\nhttp://stackoverflow.com/questions/37998179/phpexcel-how-to-get-cell-value-even-with-special-characters. Got solution : \r\nhttp://stackoverflow.com/questions/37998179/phpexcel-how-to-get-cell-value-even-with-special-characters. ",
    "jaapio": "Looks like that doesn't solve my issue. The memory usage is a bit lower during the first seconds but still very high. 500 MB for a file of 25MB. \r\nAfter a minute the memory usage was up to 4Gb. \r\n\r\nTried it with phpspreadsheets which seems to be better that phpexcel :+1: but still 2Gb was required to open this file. \r\n\r\nMy script:\r\n```php\r\n<?php\r\n\r\nrequire __DIR__ . '/../vendor/autoload.php';\r\n\r\nini_set('pcre.backtrack_limit', 100000000);\r\nini_set('pcre.jit', 0);\r\n\r\n$reader = PHPExcel_IOFactory::createReader('Excel2007');\r\n$reader->setReadDataOnly(true); // else memory usage explodes\r\n\r\n$phpExcel = $reader->load(__DIR__ . '/../files/test.xlsx');\r\necho \"Done\" . PHP_EOL;\r\n```. Looks like that doesn't solve my issue. The memory usage is a bit lower during the first seconds but still very high. 500 MB for a file of 25MB. \r\nAfter a minute the memory usage was up to 4Gb. \r\n\r\nTried it with phpspreadsheets which seems to be better that phpexcel :+1: but still 2Gb was required to open this file. \r\n\r\nMy script:\r\n```php\r\n<?php\r\n\r\nrequire __DIR__ . '/../vendor/autoload.php';\r\n\r\nini_set('pcre.backtrack_limit', 100000000);\r\nini_set('pcre.jit', 0);\r\n\r\n$reader = PHPExcel_IOFactory::createReader('Excel2007');\r\n$reader->setReadDataOnly(true); // else memory usage explodes\r\n\r\n$phpExcel = $reader->load(__DIR__ . '/../files/test.xlsx');\r\necho \"Done\" . PHP_EOL;\r\n```. ",
    "ScorpioRen": "ok, this upload file is my use excel file i read is sheet index of 11  cell D28 and E28,  Thank you for your reply\r\n[modeData.zip](https://github.com/PHPOffice/PHPExcel/files/905165/modeData.zip)\r\n\r\n. Hi,MarkBaker  I use the java poi to read the excel from give you excel file ,I get a right result, so i think is bug? i don't no ,so ...... import org.apache.poi.xssf.usermodel.XSSFFormulaEvaluator;\r\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\r\nimport org.apache.poi.xssf.usermodel.XSSFSheet;\r\nimport org.apache.poi.xssf.usermodel.XSSFCell;\r\n<pre>         \r\n        File file = new File(path);\r\n\tFileInputStream fis = new FileInputStream(file);`\r\n\t//XSSF\r\n\tXSSFWorkbook xssfWorkBook = new XSSFWorkbook(fis);\r\n\tXSSFSheet sheet0 = xssfWorkBook.getSheetAt(0);\r\n\tXSSFCell  xssfCell = sheet0.getRow(26).getCell(2);\r\n\tswitch (xssfCell.getCellType()) {\r\n\t\t case HSSFCell.CELL_TYPE_NUMERIC:\r\n\t\t\tdouble  val = xssfCell.getNumericCellValue();\r\n\t\t\tSystem.out.println(val);\r\n\t                break;\r\n                case HSSFCell.CELL_TYPE_STRING:\r\n\t\t\tString val2 = xssfCell.getStringCellValue() + \"\";\r\n\t\t    \tSystem.out.println(val2);\r\n\t\t    \tbreak;\r\n\t        default:\r\n\t\t    \tString val3 = \"\";\r\n\t\t    \tSystem.out.println(val3);\r\n\t\t}\r\n\t\t//xssfCell.setCellValue(3.0);\r\n\t\tXSSFSheet sheet11 = xssfWorkBook.getSheetAt(11);\r\n\t\tXSSFFormulaEvaluator eva = new XSSFFormulaEvaluator(xssfWorkBook);\r\n\t\tdouble result = eva.evaluate(sheet11.getRow(24).getCell(3)).getNumberValue();\r\n\t\tSystem.out.println(result);\r\n</pre>. this is PhpSpreadsheet code  but this result is same to phpExcel\r\n`$filename = __DIR__ . '/templates/modeData.xlsx';`\r\n`$reader = \\PhpOffice\\PhpSpreadsheet\\IOFactory::createReaderForFile($filename);`\r\n`$reader->setReadDataOnly(true);`\r\n`$excel = $reader->load($filename);`\r\n\r\n`$sheet = $excel->getSheet(11);`\r\n\r\n\r\n`$val = $sheet->getCell('D28')->getCalculatedValue();`\r\n`echo $val. \"\\n\";`\r\n\r\n`$val = $sheet->getCell('E28')->getCalculatedValue();`\r\n`echo $val,PHP_EOL;\r\n`exit();`\r\n. hi, @MarkBaker  I'm looking forward to your reply. ok, this upload file is my use excel file i read is sheet index of 11  cell D28 and E28,  Thank you for your reply\r\n[modeData.zip](https://github.com/PHPOffice/PHPExcel/files/905165/modeData.zip)\r\n\r\n. Hi,MarkBaker  I use the java poi to read the excel from give you excel file ,I get a right result, so i think is bug? i don't no ,so ...... import org.apache.poi.xssf.usermodel.XSSFFormulaEvaluator;\r\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\r\nimport org.apache.poi.xssf.usermodel.XSSFSheet;\r\nimport org.apache.poi.xssf.usermodel.XSSFCell;\r\n<pre>         \r\n        File file = new File(path);\r\n\tFileInputStream fis = new FileInputStream(file);`\r\n\t//XSSF\r\n\tXSSFWorkbook xssfWorkBook = new XSSFWorkbook(fis);\r\n\tXSSFSheet sheet0 = xssfWorkBook.getSheetAt(0);\r\n\tXSSFCell  xssfCell = sheet0.getRow(26).getCell(2);\r\n\tswitch (xssfCell.getCellType()) {\r\n\t\t case HSSFCell.CELL_TYPE_NUMERIC:\r\n\t\t\tdouble  val = xssfCell.getNumericCellValue();\r\n\t\t\tSystem.out.println(val);\r\n\t                break;\r\n                case HSSFCell.CELL_TYPE_STRING:\r\n\t\t\tString val2 = xssfCell.getStringCellValue() + \"\";\r\n\t\t    \tSystem.out.println(val2);\r\n\t\t    \tbreak;\r\n\t        default:\r\n\t\t    \tString val3 = \"\";\r\n\t\t    \tSystem.out.println(val3);\r\n\t\t}\r\n\t\t//xssfCell.setCellValue(3.0);\r\n\t\tXSSFSheet sheet11 = xssfWorkBook.getSheetAt(11);\r\n\t\tXSSFFormulaEvaluator eva = new XSSFFormulaEvaluator(xssfWorkBook);\r\n\t\tdouble result = eva.evaluate(sheet11.getRow(24).getCell(3)).getNumberValue();\r\n\t\tSystem.out.println(result);\r\n</pre>. this is PhpSpreadsheet code  but this result is same to phpExcel\r\n`$filename = __DIR__ . '/templates/modeData.xlsx';`\r\n`$reader = \\PhpOffice\\PhpSpreadsheet\\IOFactory::createReaderForFile($filename);`\r\n`$reader->setReadDataOnly(true);`\r\n`$excel = $reader->load($filename);`\r\n\r\n`$sheet = $excel->getSheet(11);`\r\n\r\n\r\n`$val = $sheet->getCell('D28')->getCalculatedValue();`\r\n`echo $val. \"\\n\";`\r\n\r\n`$val = $sheet->getCell('E28')->getCalculatedValue();`\r\n`echo $val,PHP_EOL;\r\n`exit();`\r\n. hi, @MarkBaker  I'm looking forward to your reply. ",
    "shinijaQB": "Am using php 7.1 and excel 2007 version. . When I add dob in my excel as 12/01/1890 saving DOB in the table as the year 1990. 1900-01-05. Why this is happening?\r\n\r\n\r\nIn my code \r\n\r\n```php\r\n//  Get worksheet dimensions\r\n                $sheet = $objPHPExcel->getSheet(0);\r\n                $highestRow = $sheet->getHighestRow();\r\n                $highestColumn = $sheet->getHighestColumn();\r\n                //  Loop through each row of the worksheet in turn\r\n                $headers = $sheet->rangeToArray('A' . 1 . ':' . $highestColumn . 1, NULL, TRUE, FALSE);\r\n                if (!isset($headers[0][8]) || $headers[0][8] == \"\") {\r\n                    $this->session->set_flashdata('field_empty_message', $this->lang->line('excel_field_empty_error'));\r\n                    redirect('/excel/excel_upload');\r\n                }\r\n                $rowData = array();\r\n                for ($row = 2; $row <= $highestRow; $row++) {\r\n                    //  Read a row of data into an array\r\n                    $rowData[] = $sheet->rangeToArray('A' . $row . ':' . $highestColumn . $row, NULL, TRUE, FALSE);\r\n                }\r\n                //  Insert row data array into your database of choice here\r\n                $count = 1;\r\n                $error_count = 0;\r\n                foreach ($rowData as $row) {\r\n                    $_tmp = array();\r\n                    $cw_id = $_tmp['member_cw_id'] = $post['cw_id'];\r\n                    $_tmp['membership_id'] = $row[0][0];\r\n                    $_tmp['member_firstname'] = isset($row[0][1]) ? trim($row[0][1]) : '';\r\n                    $_tmp['member_lastname'] = isset($row[0][2]) ? trim($row[0][2]) :'';\r\n                    $_tmp['member_id'] = $row[0][3];\r\n                    $dob = isset($row[0][4]) ? $row[0][4] : '';\r\n                    if (isset($dob) && $dob != '' && $dob != NULL) {\r\n                     $_tmp['member_dob'] = date('Y-m-d', PHPExcel_Shared_Date::ExcelToPHP($dob));\r\n```. Am using php 7.1 and excel 2007 version. . When I add dob in my excel as 12/01/1890 saving DOB in the table as the year 1990. 1900-01-05. Why this is happening?\r\n\r\n\r\nIn my code \r\n\r\n```php\r\n//  Get worksheet dimensions\r\n                $sheet = $objPHPExcel->getSheet(0);\r\n                $highestRow = $sheet->getHighestRow();\r\n                $highestColumn = $sheet->getHighestColumn();\r\n                //  Loop through each row of the worksheet in turn\r\n                $headers = $sheet->rangeToArray('A' . 1 . ':' . $highestColumn . 1, NULL, TRUE, FALSE);\r\n                if (!isset($headers[0][8]) || $headers[0][8] == \"\") {\r\n                    $this->session->set_flashdata('field_empty_message', $this->lang->line('excel_field_empty_error'));\r\n                    redirect('/excel/excel_upload');\r\n                }\r\n                $rowData = array();\r\n                for ($row = 2; $row <= $highestRow; $row++) {\r\n                    //  Read a row of data into an array\r\n                    $rowData[] = $sheet->rangeToArray('A' . $row . ':' . $highestColumn . $row, NULL, TRUE, FALSE);\r\n                }\r\n                //  Insert row data array into your database of choice here\r\n                $count = 1;\r\n                $error_count = 0;\r\n                foreach ($rowData as $row) {\r\n                    $_tmp = array();\r\n                    $cw_id = $_tmp['member_cw_id'] = $post['cw_id'];\r\n                    $_tmp['membership_id'] = $row[0][0];\r\n                    $_tmp['member_firstname'] = isset($row[0][1]) ? trim($row[0][1]) : '';\r\n                    $_tmp['member_lastname'] = isset($row[0][2]) ? trim($row[0][2]) :'';\r\n                    $_tmp['member_id'] = $row[0][3];\r\n                    $dob = isset($row[0][4]) ? $row[0][4] : '';\r\n                    if (isset($dob) && $dob != '' && $dob != NULL) {\r\n                     $_tmp['member_dob'] = date('Y-m-d', PHPExcel_Shared_Date::ExcelToPHP($dob));\r\n```. ",
    "chenyongwei": "@PowerKiKi so how to free the memory after we read the excel?. @PowerKiKi so how to free the memory after we read the excel?. ",
    "digjack": "@PowerKiKi   I have try to unset the object . it doesn't work . seem  the most memory doesn't costed by  the object,   but the cache it take  inner  the object.  . I   have find a function it provide named disconnect()  to  free most memory  between every loop .  but not free all,   after many loops , it still  reach  the machine  limitation.  . @PowerKiKi   I have try to unset the object . it doesn't work . seem  the most memory doesn't costed by  the object,   but the cache it take  inner  the object.  . I   have find a function it provide named disconnect()  to  free most memory  between every loop .  but not free all,   after many loops , it still  reach  the machine  limitation.  . ",
    "zouhuigang": "+1@digjack. +1@digjack. ",
    "tacsheaven": "I tried...\r\n\r\n```PHP\r\n\\PHPExcel_Settings::setZipClass(\\PHPExcel_Settings::ZIPARCHIVE);\r\n$excel = new \\PHPExcel();\r\n...\r\n```\r\ndon't work. causes same error.\r\n\r\n```PHP\r\n\\PHPExcel_Settings::setZipClass(\\PHPExcel_Settings::PCLZIP);\r\n$excel = new \\PHPExcel();\r\n...\r\n```\r\nis worked correctly.\r\n\r\non namespace, don't use ZIPARCHIVE?. I tried...\r\n\r\n```PHP\r\n\\PHPExcel_Settings::setZipClass(\\PHPExcel_Settings::ZIPARCHIVE);\r\n$excel = new \\PHPExcel();\r\n...\r\n```\r\ndon't work. causes same error.\r\n\r\n```PHP\r\n\\PHPExcel_Settings::setZipClass(\\PHPExcel_Settings::PCLZIP);\r\n$excel = new \\PHPExcel();\r\n...\r\n```\r\nis worked correctly.\r\n\r\non namespace, don't use ZIPARCHIVE?. ",
    "prifulnath": "Why no one is replying for the issue? Is it not an issue?. Why no one is replying for the issue? Is it not an issue?. ",
    "peterrehm": "Thanks for the workaround, this helped me quite much! I ported it therefore to PHPSpreadsheet.. Thanks for the workaround, this helped me quite much! I ported it therefore to PHPSpreadsheet.. ",
    "hsol": "You should set startcolor and endcolor also.\r\nI found that style conditional only work when both is not null.. You should set startcolor and endcolor also.\r\nI found that style conditional only work when both is not null.. ",
    "pwsdotru": "Can you please make small code example for reproduce this error?. Can you please make small code example for reproduce this error?. ",
    "danwguy": "Actually what I found out was it wasn't including the PHPExcel.php file, it was using the PHPExcel_IOFactory::load\r\nSo I have a SvcApiFedEx class, that calls \r\n`$this->client = new SoapClient(\"/var/www/html/myapp/lib/api/fedex/wsdl/RateService_v16.wsdl\", array('trace' => 1);`\r\n\r\nNow it works just fine normally, but if I add...\r\n`PHPExcel_IOFactory::load(\"input_weights.xlsx\");`\r\nbefore I call the new SoapClient I will get the SoapFault Exception. If I remove the PHPExcel_IOFactory::load(\"input_weights.xlsx\"); it will work fine again. I tried to track down exactly what was going on but I couldn't and ended up re-saving the xlsx file as a csv file and reading it in with ...\r\n`$csv = array_map(\"str_getcsv\", file(\"input_weights.csv\");`\r\n\r\nThe following code should break it, create a folder in /var/www/html (I'm on linux if you didn't know), called \"myapp\"\r\nso you have /var/www/html/myapp\r\nInside myapp create an index.php file, contents...\r\n`require_once(\"PHPExcel.php\");\r\n    \r\n    class LoadTest {\r\n\r\n        public $data;\r\n\r\n        public $csv;\r\n        public function __construct() {\r\n            $obj = PHPExcel_IOFactory::load(\"weights.xlsx\");\r\n            $call = new SoapClient(\"/var/www/html/myapp/RateService_v16.wsdl\", array('trace' => 1));\r\n        }\r\n    }\r\n`\r\n\r\nObviously you need a weights.xlsx file and a RateService_v16.wsdl file in the same directory. I am running PHP 5.3.29 (My company forces this, so I cannot change that.\r\n\r\nI hope this helps. I will be more than happy to upload a tiny app that will demonstrate this happening if need be. Thank you for your help.. Only problem is I can't upgrade to PHPSpreadsheet. I HAVE to use PHP 5.3.29, my company will not allow us to upgrade. Is there any possible fix for it for the version I am forced to use? Please.. Actually what I found out was it wasn't including the PHPExcel.php file, it was using the PHPExcel_IOFactory::load\r\nSo I have a SvcApiFedEx class, that calls \r\n`$this->client = new SoapClient(\"/var/www/html/myapp/lib/api/fedex/wsdl/RateService_v16.wsdl\", array('trace' => 1);`\r\n\r\nNow it works just fine normally, but if I add...\r\n`PHPExcel_IOFactory::load(\"input_weights.xlsx\");`\r\nbefore I call the new SoapClient I will get the SoapFault Exception. If I remove the PHPExcel_IOFactory::load(\"input_weights.xlsx\"); it will work fine again. I tried to track down exactly what was going on but I couldn't and ended up re-saving the xlsx file as a csv file and reading it in with ...\r\n`$csv = array_map(\"str_getcsv\", file(\"input_weights.csv\");`\r\n\r\nThe following code should break it, create a folder in /var/www/html (I'm on linux if you didn't know), called \"myapp\"\r\nso you have /var/www/html/myapp\r\nInside myapp create an index.php file, contents...\r\n`require_once(\"PHPExcel.php\");\r\n    \r\n    class LoadTest {\r\n\r\n        public $data;\r\n\r\n        public $csv;\r\n        public function __construct() {\r\n            $obj = PHPExcel_IOFactory::load(\"weights.xlsx\");\r\n            $call = new SoapClient(\"/var/www/html/myapp/RateService_v16.wsdl\", array('trace' => 1));\r\n        }\r\n    }\r\n`\r\n\r\nObviously you need a weights.xlsx file and a RateService_v16.wsdl file in the same directory. I am running PHP 5.3.29 (My company forces this, so I cannot change that.\r\n\r\nI hope this helps. I will be more than happy to upload a tiny app that will demonstrate this happening if need be. Thank you for your help.. Only problem is I can't upgrade to PHPSpreadsheet. I HAVE to use PHP 5.3.29, my company will not allow us to upgrade. Is there any possible fix for it for the version I am forced to use? Please.. ",
    "RoccoMarco": "Ok. it was my bad. I was trying lo launch header in body. Result was a corrupted file.. Ok. it was my bad. I was trying lo launch header in body. Result was a corrupted file.. ",
    "midistation": "Hi as it sounds, I am unsure which part is causing the issue, hence I asked\nit. Being locked out, Is being unable to login in. I am getting PHPExcel\nusername errors, and its pointing back to the native.php line 21 ( which is\nan opencart file)\nThis happens only when I am trying to use SSL, not normal http\n\nIs this clearer?\n\nOn 28 April 2017 at 02:01, Adrien Crivelli <notifications@github.com> wrote:\n\n> This is a bit vague. What is \"part of the program\", PHPExcel, Opencart,\n> custom code? What does \"locking me out of the site\" mean? And what is the\n> full error message and trace ?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/PHPOffice/PHPExcel/issues/1199#issuecomment-297879292>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/Aa0AK8v2vZ7U6x5eDIIDpvvcGRuHs4PQks5r0TpNgaJpZM4NKqXq>\n> .\n>\n\n\n\n-- \nMusicMasterXC\nMaking the Impossible........... Possible\nhttps://soundcloud.com/musicmasterxc\n. OK no worries, maybe I will just switch platforms and try another shop\n\nThanks too for your time\n\nChris\n\nOn 28 April 2017 at 16:45, Adrien Crivelli <notifications@github.com> wrote:\n\n> Closed #1199 <https://github.com/PHPOffice/PHPExcel/issues/1199>.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/PHPOffice/PHPExcel/issues/1199#event-1062358143>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/Aa0AKwXsOGdb8LyzTXRi988kQfV9V0Akks5r0gm3gaJpZM4NKqXq>\n> .\n>\n\n\n\n-- \nMusicMasterXC\nMaking the Impossible........... Possible\nhttps://soundcloud.com/musicmasterxc\n. Hi as it sounds, I am unsure which part is causing the issue, hence I asked\nit. Being locked out, Is being unable to login in. I am getting PHPExcel\nusername errors, and its pointing back to the native.php line 21 ( which is\nan opencart file)\nThis happens only when I am trying to use SSL, not normal http\n\nIs this clearer?\n\nOn 28 April 2017 at 02:01, Adrien Crivelli <notifications@github.com> wrote:\n\n> This is a bit vague. What is \"part of the program\", PHPExcel, Opencart,\n> custom code? What does \"locking me out of the site\" mean? And what is the\n> full error message and trace ?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/PHPOffice/PHPExcel/issues/1199#issuecomment-297879292>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/Aa0AK8v2vZ7U6x5eDIIDpvvcGRuHs4PQks5r0TpNgaJpZM4NKqXq>\n> .\n>\n\n\n\n-- \nMusicMasterXC\nMaking the Impossible........... Possible\nhttps://soundcloud.com/musicmasterxc\n. OK no worries, maybe I will just switch platforms and try another shop\n\nThanks too for your time\n\nChris\n\nOn 28 April 2017 at 16:45, Adrien Crivelli <notifications@github.com> wrote:\n\n> Closed #1199 <https://github.com/PHPOffice/PHPExcel/issues/1199>.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/PHPOffice/PHPExcel/issues/1199#event-1062358143>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/Aa0AKwXsOGdb8LyzTXRi988kQfV9V0Akks5r0gm3gaJpZM4NKqXq>\n> .\n>\n\n\n\n-- \nMusicMasterXC\nMaking the Impossible........... Possible\nhttps://soundcloud.com/musicmasterxc\n. ",
    "Flo-Slv": "I already tried but doesn't work.. I solved this problem in my prod server:\r\n- sudo apt-get install zip php-7.0-zip\r\n^^' ..... I already tried but doesn't work.. I solved this problem in my prod server:\r\n- sudo apt-get install zip php-7.0-zip\r\n^^' ..... ",
    "PastisD": "I have this in my Symfony application\r\n\r\n```\r\n<?php\r\n\r\nnamespace My\\Bundle\\Controller;\r\n\r\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller;\r\n\r\n\\PhpOffice\\PhpWord\\Autoloader::register();\r\n\r\nclass MyController extends Controller\r\n{\r\n}\r\n```. I have this in my Symfony application\r\n\r\n```\r\n<?php\r\n\r\nnamespace My\\Bundle\\Controller;\r\n\r\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller;\r\n\r\n\\PhpOffice\\PhpWord\\Autoloader::register();\r\n\r\nclass MyController extends Controller\r\n{\r\n}\r\n```. ",
    "digitalmanagerit": "Excuse me so does this have to do with the PHP version?. Fixed it easily :) Just added the extension in the PHP Version area in cPanel. Thanks.. Excuse me so does this have to do with the PHP version?. Fixed it easily :) Just added the extension in the PHP Version area in cPanel. Thanks.. ",
    "Hectic247": "I gather you are referring to Conditional Formatting Rules in Excel? I had the same same problem reading/writing the Excel5 format. Switched to Excel2007 (Office Open XML) instead of Excel5 and it resolved it.. @PowerKiKi I would, but the folder structure is unrecognizable in PhpSpreadsheet from PHPExcel, Where is the equivalent of  /Classes/PHPExcel/Reader/Excel2007.php ? without having to spend too long searching for it.. I gather you are referring to Conditional Formatting Rules in Excel? I had the same same problem reading/writing the Excel5 format. Switched to Excel2007 (Office Open XML) instead of Excel5 and it resolved it.. @PowerKiKi I would, but the folder structure is unrecognizable in PhpSpreadsheet from PHPExcel, Where is the equivalent of  /Classes/PHPExcel/Reader/Excel2007.php ? without having to spend too long searching for it.. ",
    "noetherien": "Bug resolved\r\nI installed php7.0-zip, now it works:\r\n\r\n`$ sudo apt-get install php7.0-zip`\r\n\r\nThank you. Bug resolved\r\nI installed php7.0-zip, now it works:\r\n\r\n`$ sudo apt-get install php7.0-zip`\r\n\r\nThank you. ",
    "adatta02": "This is still broken from an operational perspective. \r\n\r\nThe package should really have the zip extension as a dependency since you wouldn't know you're missing it until trying to use any code that uses the loaders.. This is still broken from an operational perspective. \r\n\r\nThe package should really have the zip extension as a dependency since you wouldn't know you're missing it until trying to use any code that uses the loaders.. ",
    "TZubiri": "https://github.com/PHPOffice/PHPExcel/pull/917. https://github.com/PHPOffice/PHPExcel/pull/917. ",
    "Bhoft": "`Cell::stringFromColumnIndex()` is somwhere called with an $pColumnIndex which is already an Named Column index e.g. ('A'). In this case pColumnIndex is not an integer.\r\n\r\nif the function is extended with\r\n\r\n    if (!is_int($pColumnIndex)) {\r\n            return $pColumnIndex;\r\n    }\r\n\r\nThe issue seems to be fixed or the check is added where the function is called.\r\n. found the error \r\nhttps://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Writer/Excel5.php#L372\r\n\r\n    $endCoordinates = PHPExcel_Cell::stringFromColumnIndex(PHPExcel_Cell::stringFromColumnIndex($iInc - 1));\r\n\r\nshould only be:\r\n\r\n     $endCoordinates = PHPExcel_Cell::stringFromColumnIndex($iInc - 1);\r\n\r\n\r\n. So you say that wrong code isn't fixed in PHPExcel any more at all?\r\n\r\nI mean this line is wrong if it is executed in php5 or php7.\r\nWrong is wrong in my opinion.\r\n\r\n\r\nIt is also only 1 line of code and it is clearly visible that the function shouldn't be called twice.\r\nBut i understand that all efforts are put into PHPSpreadsheet, but how much effort is it to change this one line. I could also do a pull request if its to much work.\r\n\r\nI would be pleased if this line is fixed because many used extensions still using PHPExcel.\r\nI haven't looked into PHPSpreadsheet myself because it is still marked as unstable, so i don't know how much effort it take to switch the libary.\r\n\r\nAs it is written on the github page itself.\r\n `However PhpSpreadsheet is still unstable and not yet released.`\r\n. `Cell::stringFromColumnIndex()` is somwhere called with an $pColumnIndex which is already an Named Column index e.g. ('A'). In this case pColumnIndex is not an integer.\r\n\r\nif the function is extended with\r\n\r\n    if (!is_int($pColumnIndex)) {\r\n            return $pColumnIndex;\r\n    }\r\n\r\nThe issue seems to be fixed or the check is added where the function is called.\r\n. found the error \r\nhttps://github.com/PHPOffice/PHPExcel/blob/1.8/Classes/PHPExcel/Writer/Excel5.php#L372\r\n\r\n    $endCoordinates = PHPExcel_Cell::stringFromColumnIndex(PHPExcel_Cell::stringFromColumnIndex($iInc - 1));\r\n\r\nshould only be:\r\n\r\n     $endCoordinates = PHPExcel_Cell::stringFromColumnIndex($iInc - 1);\r\n\r\n\r\n. So you say that wrong code isn't fixed in PHPExcel any more at all?\r\n\r\nI mean this line is wrong if it is executed in php5 or php7.\r\nWrong is wrong in my opinion.\r\n\r\n\r\nIt is also only 1 line of code and it is clearly visible that the function shouldn't be called twice.\r\nBut i understand that all efforts are put into PHPSpreadsheet, but how much effort is it to change this one line. I could also do a pull request if its to much work.\r\n\r\nI would be pleased if this line is fixed because many used extensions still using PHPExcel.\r\nI haven't looked into PHPSpreadsheet myself because it is still marked as unstable, so i don't know how much effort it take to switch the libary.\r\n\r\nAs it is written on the github page itself.\r\n `However PhpSpreadsheet is still unstable and not yet released.`\r\n. ",
    "karlpatrickespiritu": "Oh damn. Wrong repo. Sorry. Maybe I should get some sleep. \ud83d\ude04 . Oh damn. Wrong repo. Sorry. Maybe I should get some sleep. \ud83d\ude04 . ",
    "carloscarucce": "@PowerKiKi Is that fix released?. @PowerKiKi Is that fix released?. ",
    "phpexcel": "That's strange. It should export within a minute.. That's strange. It should export within a minute.. ",
    "s1lver": "Really!\r\n\r\nGiven:\r\n```\r\nExcel ~ 6mb\r\n570 rows, columns A through BZ\r\n```\r\nphp 5.6 ~ 10 min\r\nphp 7.1 ~ 2min\r\n\r\nRight now there is no way to update. But I really want to somehow speed up the process.\r\n\r\nThanks!. Really!\r\n\r\nGiven:\r\n```\r\nExcel ~ 6mb\r\n570 rows, columns A through BZ\r\n```\r\nphp 5.6 ~ 10 min\r\nphp 7.1 ~ 2min\r\n\r\nRight now there is no way to update. But I really want to somehow speed up the process.\r\n\r\nThanks!. ",
    "tuna-mms-dev-2k16": "Can you please explain for me what do you mean by\r\n\r\n>  you need to have mPDF itself installed on your server\r\n\r\n?\r\n\r\nIs there anything else that I should do to get this works? Please explain more for me. Thanks.. By the way, can you please reopen this ticket for me? I asked my questions because I need help in using the library. . Can you please explain for me what do you mean by\r\n\r\n>  you need to have mPDF itself installed on your server\r\n\r\n?\r\n\r\nIs there anything else that I should do to get this works? Please explain more for me. Thanks.. By the way, can you please reopen this ticket for me? I asked my questions because I need help in using the library. . ",
    "liakong": "anyone can help? . @msvendsen thanks very much for you suggestion. I will try it.. @msvendsen I have tried and it works. Thanks very much.. anyone can help? . @msvendsen thanks very much for you suggestion. I will try it.. @msvendsen I have tried and it works. Thanks very much.. ",
    "msvendsen": "Same bug for getTop() :-(\r\nI found that when instead using code like below, it works:\r\n\r\n```php\r\n$objPHPExcel->getActiveSheet()->getStyle('A1:U1')->applyFromArray(\r\n\tarray('borders' => array('top' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM))));\r\n```\r\n\r\nI have tried to see if I can locate the bug, but I'm quite new to PHPExcel so haven't been able to... Same bug for getTop() :-(\r\nI found that when instead using code like below, it works:\r\n\r\n```php\r\n$objPHPExcel->getActiveSheet()->getStyle('A1:U1')->applyFromArray(\r\n\tarray('borders' => array('top' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM))));\r\n```\r\n\r\nI have tried to see if I can locate the bug, but I'm quite new to PHPExcel so haven't been able to... ",
    "robbiedr": "I need this one for our thesis. Can you please teach me? We also need a cron task.. I need this one for our thesis. Can you please teach me? We also need a cron task.. ",
    "amjo": "when coding for Cron jobs, you should include/require the full directory path from the server root...\r\n\r\nfor example:\r\n`require_once \"/var/www/vhosts/example.com/assets/PHPExcel/Classes/PHPExcel.php\";`\r\n\r\nhope this helps. when coding for Cron jobs, you should include/require the full directory path from the server root...\r\n\r\nfor example:\r\n`require_once \"/var/www/vhosts/example.com/assets/PHPExcel/Classes/PHPExcel.php\";`\r\n\r\nhope this helps. ",
    "502923093": "@PowerKiKi Thanks ,but It not resolved.i configed it like this: memory_limit = 128M;\r\nbut the file is 11KB ,so the proble still happen.. @PowerKiKi i add it in class PHPExcel_Worksheet function: public function shrinkRangeToFit $range = str_replace('$', '', strtoupper($range)); it fixed the bug,but i don't know it can take other bugs?. @PowerKiKi Thanks ,but It not resolved.i configed it like this: memory_limit = 128M;\r\nbut the file is 11KB ,so the proble still happen.. @PowerKiKi i add it in class PHPExcel_Worksheet function: public function shrinkRangeToFit $range = str_replace('$', '', strtoupper($range)); it fixed the bug,but i don't know it can take other bugs?. ",
    "rhdelaney": "I think I may be able to help. We are using laravel but this solution helped our team out greatly. Change your \\PHPExcel\\Writer\\PDF\\DomPDF.php file to this and let me know if this works:\r\n\r\n```php\r\n<?php\r\n/**\r\n *  PHPExcel\r\n *\r\n *  Copyright (c) 2006 - 2014 PHPExcel\r\n *\r\n *  This library is free software; you can redistribute it and/or\r\n *  modify it under the terms of the GNU Lesser General Public\r\n *  License as published by the Free Software Foundation; either\r\n *  version 2.1 of the License, or (at your option) any later version.\r\n *\r\n *  This library is distributed in the hope that it will be useful,\r\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n *  Lesser General Public License for more details.\r\n *\r\n *  You should have received a copy of the GNU Lesser General Public\r\n *  License along with this library; if not, write to the Free Software\r\n *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\r\n *\r\n *  @category    PHPExcel\r\n *  @package     PHPExcel_Writer_PDF\r\n *  @copyright   Copyright (c) 2006 - 2014 PHPExcel (http://www.codeplex.com/PHPExcel)\r\n *  @license     http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt    LGPL\r\n *  @version     ##VERSION##, ##DATE##\r\n */\r\n\r\n\r\n/**  Require DomPDF library */\r\n//$pdfRendererClassFile = PHPExcel_Settings::getPdfRendererPath() . '/dompdf_config.inc.php';\r\n$pdfRendererClassFile = PHPExcel_Settings::getPdfRendererPath() . '/autoload.inc.php';\r\nif (file_exists($pdfRendererClassFile)) {\r\n    require_once $pdfRendererClassFile;\r\n} else {\r\n    throw new PHPExcel_Writer_Exception('Unable to load PDF Rendering library');\r\n}\r\n\r\n/**\r\n *  PHPExcel_Writer_PDF_DomPDF\r\n *\r\n *  @category    PHPExcel\r\n *  @package     PHPExcel_Writer_PDF\r\n *  @copyright   Copyright (c) 2006 - 2014 PHPExcel (http://www.codeplex.com/PHPExcel)\r\n */\r\nclass PHPExcel_Writer_PDF_DomPDF extends PHPExcel_Writer_PDF_Core implements PHPExcel_Writer_IWriter\r\n{\r\n    /**\r\n     *  Create a new PHPExcel_Writer_PDF\r\n     *\r\n     *  @param   PHPExcel    $phpExcel    PHPExcel object\r\n     */\r\n    public function __construct(PHPExcel $phpExcel)\r\n    {\r\n        parent::__construct($phpExcel);\r\n    }\r\n\r\n    /**\r\n     *  Save PHPExcel to file\r\n     *\r\n     *  @param   string     $pFilename   Name of the file to save as\r\n     *  @throws  PHPExcel_Writer_Exception\r\n     */\r\n    public function save($pFilename = NULL)\r\n    {\r\n        $fileHandle = parent::prepareForSave($pFilename);\r\n\r\n        //  Default PDF paper size\r\n        $paperSize = 'LETTER';    //    Letter    (8.5 in. by 11 in.)\r\n\r\n        //  Check for paper size and page orientation\r\n        if (is_null($this->getSheetIndex())) {\r\n            $orientation = ($this->_phpExcel->getSheet(0)->getPageSetup()->getOrientation()\r\n                == PHPExcel_Worksheet_PageSetup::ORIENTATION_LANDSCAPE)\r\n                    ? 'L'\r\n                    : 'P';\r\n            $printPaperSize = $this->_phpExcel->getSheet(0)->getPageSetup()->getPaperSize();\r\n            $printMargins = $this->_phpExcel->getSheet(0)->getPageMargins();\r\n        } else {\r\n            $orientation = ($this->_phpExcel->getSheet($this->getSheetIndex())->getPageSetup()->getOrientation()\r\n                == PHPExcel_Worksheet_PageSetup::ORIENTATION_LANDSCAPE)\r\n                    ? 'L'\r\n                    : 'P';\r\n            $printPaperSize = $this->_phpExcel->getSheet($this->getSheetIndex())->getPageSetup()->getPaperSize();\r\n            $printMargins = $this->_phpExcel->getSheet($this->getSheetIndex())->getPageMargins();\r\n        }\r\n\r\n\r\n        $orientation = ($orientation == 'L') ? 'landscape' : 'portrait';\r\n\r\n        //  Override Page Orientation\r\n        if (!is_null($this->getOrientation())) {\r\n            $orientation = ($this->getOrientation() == PHPExcel_Worksheet_PageSetup::ORIENTATION_DEFAULT)\r\n                ? PHPExcel_Worksheet_PageSetup::ORIENTATION_PORTRAIT\r\n                : $this->getOrientation();\r\n        }\r\n        //  Override Paper Size\r\n        if (!is_null($this->getPaperSize())) {\r\n            $printPaperSize = $this->getPaperSize();\r\n        }\r\n\r\n        if (isset(self::$_paperSizes[$printPaperSize])) {\r\n            $paperSize = self::$_paperSizes[$printPaperSize];\r\n        }\r\n\r\n\r\n        //  Create PDF\r\n        //$pdf = new DOMPDF();\r\n        $pdf = new \\Dompdf\\Dompdf();\r\n        $pdf->set_paper(strtolower($paperSize), $orientation);\r\n\r\n        $pdf->load_html(\r\n            $this->generateHTMLHeader(FALSE) .\r\n            $this->generateSheetData() .\r\n            $this->generateHTMLFooter()\r\n        );\r\n        $pdf->render();\r\n\r\n        //  Write to file\r\n        fwrite($fileHandle, $pdf->output());\r\n\r\n\t\tparent::restoreStateAfterSave($fileHandle);\r\n    }\r\n\r\n}\r\n```. Basically under Create PDF you have $pdf=new DOMPDF(); where you should instead call $pdf=new \\Dompdf\\Dompdf(); I think. I think I may be able to help. We are using laravel but this solution helped our team out greatly. Change your \\PHPExcel\\Writer\\PDF\\DomPDF.php file to this and let me know if this works:\r\n\r\n```php\r\n<?php\r\n/**\r\n *  PHPExcel\r\n *\r\n *  Copyright (c) 2006 - 2014 PHPExcel\r\n *\r\n *  This library is free software; you can redistribute it and/or\r\n *  modify it under the terms of the GNU Lesser General Public\r\n *  License as published by the Free Software Foundation; either\r\n *  version 2.1 of the License, or (at your option) any later version.\r\n *\r\n *  This library is distributed in the hope that it will be useful,\r\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n *  Lesser General Public License for more details.\r\n *\r\n *  You should have received a copy of the GNU Lesser General Public\r\n *  License along with this library; if not, write to the Free Software\r\n *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\r\n *\r\n *  @category    PHPExcel\r\n *  @package     PHPExcel_Writer_PDF\r\n *  @copyright   Copyright (c) 2006 - 2014 PHPExcel (http://www.codeplex.com/PHPExcel)\r\n *  @license     http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt    LGPL\r\n *  @version     ##VERSION##, ##DATE##\r\n */\r\n\r\n\r\n/**  Require DomPDF library */\r\n//$pdfRendererClassFile = PHPExcel_Settings::getPdfRendererPath() . '/dompdf_config.inc.php';\r\n$pdfRendererClassFile = PHPExcel_Settings::getPdfRendererPath() . '/autoload.inc.php';\r\nif (file_exists($pdfRendererClassFile)) {\r\n    require_once $pdfRendererClassFile;\r\n} else {\r\n    throw new PHPExcel_Writer_Exception('Unable to load PDF Rendering library');\r\n}\r\n\r\n/**\r\n *  PHPExcel_Writer_PDF_DomPDF\r\n *\r\n *  @category    PHPExcel\r\n *  @package     PHPExcel_Writer_PDF\r\n *  @copyright   Copyright (c) 2006 - 2014 PHPExcel (http://www.codeplex.com/PHPExcel)\r\n */\r\nclass PHPExcel_Writer_PDF_DomPDF extends PHPExcel_Writer_PDF_Core implements PHPExcel_Writer_IWriter\r\n{\r\n    /**\r\n     *  Create a new PHPExcel_Writer_PDF\r\n     *\r\n     *  @param   PHPExcel    $phpExcel    PHPExcel object\r\n     */\r\n    public function __construct(PHPExcel $phpExcel)\r\n    {\r\n        parent::__construct($phpExcel);\r\n    }\r\n\r\n    /**\r\n     *  Save PHPExcel to file\r\n     *\r\n     *  @param   string     $pFilename   Name of the file to save as\r\n     *  @throws  PHPExcel_Writer_Exception\r\n     */\r\n    public function save($pFilename = NULL)\r\n    {\r\n        $fileHandle = parent::prepareForSave($pFilename);\r\n\r\n        //  Default PDF paper size\r\n        $paperSize = 'LETTER';    //    Letter    (8.5 in. by 11 in.)\r\n\r\n        //  Check for paper size and page orientation\r\n        if (is_null($this->getSheetIndex())) {\r\n            $orientation = ($this->_phpExcel->getSheet(0)->getPageSetup()->getOrientation()\r\n                == PHPExcel_Worksheet_PageSetup::ORIENTATION_LANDSCAPE)\r\n                    ? 'L'\r\n                    : 'P';\r\n            $printPaperSize = $this->_phpExcel->getSheet(0)->getPageSetup()->getPaperSize();\r\n            $printMargins = $this->_phpExcel->getSheet(0)->getPageMargins();\r\n        } else {\r\n            $orientation = ($this->_phpExcel->getSheet($this->getSheetIndex())->getPageSetup()->getOrientation()\r\n                == PHPExcel_Worksheet_PageSetup::ORIENTATION_LANDSCAPE)\r\n                    ? 'L'\r\n                    : 'P';\r\n            $printPaperSize = $this->_phpExcel->getSheet($this->getSheetIndex())->getPageSetup()->getPaperSize();\r\n            $printMargins = $this->_phpExcel->getSheet($this->getSheetIndex())->getPageMargins();\r\n        }\r\n\r\n\r\n        $orientation = ($orientation == 'L') ? 'landscape' : 'portrait';\r\n\r\n        //  Override Page Orientation\r\n        if (!is_null($this->getOrientation())) {\r\n            $orientation = ($this->getOrientation() == PHPExcel_Worksheet_PageSetup::ORIENTATION_DEFAULT)\r\n                ? PHPExcel_Worksheet_PageSetup::ORIENTATION_PORTRAIT\r\n                : $this->getOrientation();\r\n        }\r\n        //  Override Paper Size\r\n        if (!is_null($this->getPaperSize())) {\r\n            $printPaperSize = $this->getPaperSize();\r\n        }\r\n\r\n        if (isset(self::$_paperSizes[$printPaperSize])) {\r\n            $paperSize = self::$_paperSizes[$printPaperSize];\r\n        }\r\n\r\n\r\n        //  Create PDF\r\n        //$pdf = new DOMPDF();\r\n        $pdf = new \\Dompdf\\Dompdf();\r\n        $pdf->set_paper(strtolower($paperSize), $orientation);\r\n\r\n        $pdf->load_html(\r\n            $this->generateHTMLHeader(FALSE) .\r\n            $this->generateSheetData() .\r\n            $this->generateHTMLFooter()\r\n        );\r\n        $pdf->render();\r\n\r\n        //  Write to file\r\n        fwrite($fileHandle, $pdf->output());\r\n\r\n\t\tparent::restoreStateAfterSave($fileHandle);\r\n    }\r\n\r\n}\r\n```. Basically under Create PDF you have $pdf=new DOMPDF(); where you should instead call $pdf=new \\Dompdf\\Dompdf(); I think. ",
    "felipph": "This library has no intention to do such think. It's easy:\r\n\r\n```php\r\n$arq = file(\"PATH TO YOUR FILE\");\r\n\r\n            $csv = array_map(function($v) {\r\n                $v = trim($v);    \r\n                return str_getcsv($v, \",\"); //REPLACE comma with your separator(In PT_BR is semicollon (;)\r\n            }, $arq);\r\nprint_r($csv);\r\n```\r\nRegards.\r\n. This library has no intention to do such think. It's easy:\r\n\r\n```php\r\n$arq = file(\"PATH TO YOUR FILE\");\r\n\r\n            $csv = array_map(function($v) {\r\n                $v = trim($v);    \r\n                return str_getcsv($v, \",\"); //REPLACE comma with your separator(In PT_BR is semicollon (;)\r\n            }, $arq);\r\nprint_r($csv);\r\n```\r\nRegards.\r\n. ",
    "heiglandreas": "OK: While I **do** understand that PHPExcel is no longer maintained, it would be pretty cool for all those folks that stumble over it to know **that** it is no longer maintained and that it was replaced by PHPSpreadsheet\u2026\r\n\r\nAnd exactly **that** information is missing on the PHPExcel-README. \r\n\r\nAnd closing this PR that tried to fix that (yes, using the wrong URL) instead of changing the URL is\u2026 interesting\u2026\r\n\r\nI mean, **I** now know\u2026 But others might not\u2026. OK: While I **do** understand that PHPExcel is no longer maintained, it would be pretty cool for all those folks that stumble over it to know **that** it is no longer maintained and that it was replaced by PHPSpreadsheet\u2026\r\n\r\nAnd exactly **that** information is missing on the PHPExcel-README. \r\n\r\nAnd closing this PR that tried to fix that (yes, using the wrong URL) instead of changing the URL is\u2026 interesting\u2026\r\n\r\nI mean, **I** now know\u2026 But others might not\u2026. ",
    "Spartacus2018": "Hello, \r\nof cours works with all major software, but we need o way to change the line format\r\n\r\ni m still stuck with that\r\n\r\ni have to open my files with libreOffice and savez the files in XLS format to change the UNIX stuff line.\r\n\r\ncan we make it direct with PHPExcel ?\r\n\r\nWhat means : \r\n\r\n> thus end of lines are not relevant ?\r\n\r\n\r\nit' will be interesting to have an option when  u save files to know what is the line using by phpExcell to save files ?\r\n\r\n\r\n. thanks to you\r\n\r\nthe way is, \r\n\r\nwhen u create XLS files with PHPExell, and when u edit the files created with notepad++ u can see the end of line is Macintosh (CR) , and this is my problem.\r\n![image](https://user-images.githubusercontent.com/301074/27955950-9f1558da-6317-11e7-823b-023f4e403bf6.png)\r\n\r\nbut when u create a XLS files with libreOffice (using it in windows 10)\r\nSo the XLS files editing in notepad++ says the files is UNIX (LF) \r\n![image](https://user-images.githubusercontent.com/301074/27955956-a8e6c79a-6317-11e7-9ff6-d46dd50318f9.png)\r\n\r\ni need some PHPExcell files with UNix (LF) files and not Macintosh (CR).\r\n\r\ni think, i need to found in the source code of PHPExcell where u create this endOfLine and get a way to change it\r\n\r\nthanks\r\n. Yes th files works perftcly in Microsoft EXCELL or libreOffice.\r\n\r\n. Hello, \r\nof cours works with all major software, but we need o way to change the line format\r\n\r\ni m still stuck with that\r\n\r\ni have to open my files with libreOffice and savez the files in XLS format to change the UNIX stuff line.\r\n\r\ncan we make it direct with PHPExcel ?\r\n\r\nWhat means : \r\n\r\n> thus end of lines are not relevant ?\r\n\r\n\r\nit' will be interesting to have an option when  u save files to know what is the line using by phpExcell to save files ?\r\n\r\n\r\n. thanks to you\r\n\r\nthe way is, \r\n\r\nwhen u create XLS files with PHPExell, and when u edit the files created with notepad++ u can see the end of line is Macintosh (CR) , and this is my problem.\r\n![image](https://user-images.githubusercontent.com/301074/27955950-9f1558da-6317-11e7-823b-023f4e403bf6.png)\r\n\r\nbut when u create a XLS files with libreOffice (using it in windows 10)\r\nSo the XLS files editing in notepad++ says the files is UNIX (LF) \r\n![image](https://user-images.githubusercontent.com/301074/27955956-a8e6c79a-6317-11e7-9ff6-d46dd50318f9.png)\r\n\r\ni need some PHPExcell files with UNix (LF) files and not Macintosh (CR).\r\n\r\ni think, i need to found in the source code of PHPExcell where u create this endOfLine and get a way to change it\r\n\r\nthanks\r\n. Yes th files works perftcly in Microsoft EXCELL or libreOffice.\r\n\r\n. ",
    "pelydas": "Thanks PowerKiKi, i found the issue adding the code below, first was memory_limit, i changed into php.ini from 128 to 256 but after appearsd another error about max_execution_time that i also changed from 30 to 60 seconds\r\n\r\nini_set('display_errors', 1);\r\nini_set('display_startup_errors', 1);\r\nerror_reporting(E_ALL);. Thanks PowerKiKi, i found the issue adding the code below, first was memory_limit, i changed into php.ini from 128 to 256 but after appearsd another error about max_execution_time that i also changed from 30 to 60 seconds\r\n\r\nini_set('display_errors', 1);\r\nini_set('display_startup_errors', 1);\r\nerror_reporting(E_ALL);. ",
    "wudi": "invalid branch. invalid branch. ",
    "robregonm": "Not sure if that's a related issue, however, my bin file starts like this (the one I generated locally and open without issues):\r\n\r\n<pre>\r\n50 4B 03 04 14 00 00 00  08 00 <b><i>D9 5A</i></b> F5 4A 19 39  PK...... ...Z.J.9\r\nE2 60 93 01 00 00 EF <b><i>0C</i></b>  00 00 13 00 00 00 5B 43  .`...... ......[C</pre>\r\n\r\nBut the corrupted file starts like this:\r\n\r\n<pre>\r\n50 4B 03 04 14 00 00 00  08 00 <b><i>97 5C</i></b> F5 4A 19 39  PK...... ...\\.J.9\r\nE2 60 93 01 00 00 EF <b><i>20</i></b>  00 00 13 00 00 00 5B 43  .`.....  ......[C\r\n</pre>\r\n\r\nThe differences are highlighted <b><i>like this</i></b>\r\n\r\nThought? Ideas?. Notice that this is not happening to ALL the exported files, but just one of them (when it generates files more than 65kB: not exactly but estimated). I checked that no HTML code is injected or something like that, because I compared the files at a binary level, and the changes are very subtle (those I highlighted in my previous post)\r\n\r\nI'm using PHP 7.1 (in both local and prod)\r\nAnd the installed extensions look similar. The only noticeable differences are the Ubuntu version (16.04 in my local environment and 14.04 in production) and the available memory (16GB local env, 512 MB in production). I tried to open and unzip both files (the good and the corrupted one) and they unzip correctly (which is very curious). After many tests, combination of formats (it was happening with all formats) and debugging, I found that It was due to Cloudflare minification script, it seems that Cloudflare doesn't detect the content of the files based on MIME type headers, but it minifies all the files (it doesn't care the format)\r\nSo, I disabled HTML minification and everything is working back again.. Not sure if that's a related issue, however, my bin file starts like this (the one I generated locally and open without issues):\r\n\r\n<pre>\r\n50 4B 03 04 14 00 00 00  08 00 <b><i>D9 5A</i></b> F5 4A 19 39  PK...... ...Z.J.9\r\nE2 60 93 01 00 00 EF <b><i>0C</i></b>  00 00 13 00 00 00 5B 43  .`...... ......[C</pre>\r\n\r\nBut the corrupted file starts like this:\r\n\r\n<pre>\r\n50 4B 03 04 14 00 00 00  08 00 <b><i>97 5C</i></b> F5 4A 19 39  PK...... ...\\.J.9\r\nE2 60 93 01 00 00 EF <b><i>20</i></b>  00 00 13 00 00 00 5B 43  .`.....  ......[C\r\n</pre>\r\n\r\nThe differences are highlighted <b><i>like this</i></b>\r\n\r\nThought? Ideas?. Notice that this is not happening to ALL the exported files, but just one of them (when it generates files more than 65kB: not exactly but estimated). I checked that no HTML code is injected or something like that, because I compared the files at a binary level, and the changes are very subtle (those I highlighted in my previous post)\r\n\r\nI'm using PHP 7.1 (in both local and prod)\r\nAnd the installed extensions look similar. The only noticeable differences are the Ubuntu version (16.04 in my local environment and 14.04 in production) and the available memory (16GB local env, 512 MB in production). I tried to open and unzip both files (the good and the corrupted one) and they unzip correctly (which is very curious). After many tests, combination of formats (it was happening with all formats) and debugging, I found that It was due to Cloudflare minification script, it seems that Cloudflare doesn't detect the content of the files based on MIME type headers, but it minifies all the files (it doesn't care the format)\r\nSo, I disabled HTML minification and everything is working back again.. ",
    "juliogm12": "Hello robregonm. The funny thing is that for me the writer doesn't write anything to the file, yet the file is still corrupted. Not only that but when I tell the file generating the file to echo something usually that thing is echoed along with gibberish which represents the data written on the file. Not anymore and when I open the .xlsx file on Notepad++ the file is blank.. Also, for me at least, this happens to all files that worked pre-PHP7. @PowerKiKi Pardon my ignorance, but when you say \"HTMl writer\" do you mean the program I use to code or a built in writer on HTML code?. I did as you suggested and the data is displayed beautifully. Before I had\r\n\r\n`$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');`. Hello again @PowerKiKi , I was wondering how I could use this to debug. Thanks!. If anyone is interested to know: I fixed the issue. It seems the files that create the file became corrupted to I downloaded them again and overwrote them. Thank you all for your help. Hello robregonm. The funny thing is that for me the writer doesn't write anything to the file, yet the file is still corrupted. Not only that but when I tell the file generating the file to echo something usually that thing is echoed along with gibberish which represents the data written on the file. Not anymore and when I open the .xlsx file on Notepad++ the file is blank.. Also, for me at least, this happens to all files that worked pre-PHP7. @PowerKiKi Pardon my ignorance, but when you say \"HTMl writer\" do you mean the program I use to code or a built in writer on HTML code?. I did as you suggested and the data is displayed beautifully. Before I had\r\n\r\n`$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');`. Hello again @PowerKiKi , I was wondering how I could use this to debug. Thanks!. If anyone is interested to know: I fixed the issue. It seems the files that create the file became corrupted to I downloaded them again and overwrote them. Thank you all for your help. ",
    "thoced": "To be more precise, if the temporary file is based on a file of type xls, odt, ... it works but if the tmp file is for example PNG type, it will consider it as an html file then. To be more precise, if the temporary file is based on a file of type xls, odt, ... it works but if the tmp file is for example PNG type, it will consider it as an html file then. ",
    "dnsBlah": "Nevermind I solved it using a 'unique' delimter and lineEnding\r\nand just process it from there.\r\n\r\nHowever it would be nice to have better support for linebreaks in within excel cells.. Nevermind I solved it using a 'unique' delimter and lineEnding\r\nand just process it from there.\r\n\r\nHowever it would be nice to have better support for linebreaks in within excel cells.. ",
    "wakikuk": "but normal on format xls or save excel \r\n![image](https://user-images.githubusercontent.com/25858135/28741924-c3fb9c8c-744b-11e7-9877-efe14a728a56.png)\r\n. sorry this is my first port , what mean of topics on here?. i understand , thank you PowerKiKi , i had been read that documentation , just use script html only, for show the image thank you..\r\n![image](https://user-images.githubusercontent.com/25858135/28806179-bea4fda6-7698-11e7-8923-a0ea23565cf5.png)\r\n. but normal on format xls or save excel \r\n![image](https://user-images.githubusercontent.com/25858135/28741924-c3fb9c8c-744b-11e7-9877-efe14a728a56.png)\r\n. sorry this is my first port , what mean of topics on here?. i understand , thank you PowerKiKi , i had been read that documentation , just use script html only, for show the image thank you..\r\n![image](https://user-images.githubusercontent.com/25858135/28806179-bea4fda6-7698-11e7-8923-a0ea23565cf5.png)\r\n. ",
    "Adorfer": "choosing non-clickbait topics wouldn't scare off who could help. just saying . making new releases does not mean that it's forbidden to fix bugs in old releases.\r\nthis is especially if new releases are still in status \"not for production\". sorry, but there is -afaik- none. You need aprox. 4-6 times the memory as the size of the uncompressed file. . @kalimputhawala \r\n\"timeout\" sounds like a different issue than \"out of memory\". \r\ni can't follow your recommendations. \r\n. choosing non-clickbait topics wouldn't scare off who could help. just saying . making new releases does not mean that it's forbidden to fix bugs in old releases.\r\nthis is especially if new releases are still in status \"not for production\". sorry, but there is -afaik- none. You need aprox. 4-6 times the memory as the size of the uncompressed file. . @kalimputhawala \r\n\"timeout\" sounds like a different issue than \"out of memory\". \r\ni can't follow your recommendations. \r\n. ",
    "the-red-one": "My bad, extensive debugging showed it was my oversight. Everything works perfectly.. My bad, extensive debugging showed it was my oversight. Everything works perfectly.. ",
    "gbutiri": "right after you create the object, add this:\r\n\r\n$objWriter->setPreCalculateFormulas(false);\t\t. right after you create the object, add this:\r\n\r\n$objWriter->setPreCalculateFormulas(false);\t\t. ",
    "jirkasemmler": "I think this can help you. https://stackoverflow.com/questions/21599221/phpexcel-save-pdf. I think this can help you. https://stackoverflow.com/questions/21599221/phpexcel-save-pdf. ",
    "socialpixe": "WORST LIBRARY ... SEEMS LIKE IT IS DEVELOPED FOR READING NOT WRITTING. WORST LIBRARY ... SEEMS LIKE IT IS DEVELOPED FOR READING NOT WRITTING. ",
    "brian-lamb-software-engineer": "Well, you can pretty much disregard, I found I should have probably been using composer.json anyway, this is a laravel project.  This is what i had to add to my laravel composer.json file to get the package nested safely into my vendors.   Hope it helps someone. \r\n```\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"vcs\",\r\n            \"name\": \"phpoffice/phpexcel\",\r\n            \"url\":  \"git@github.com:PHPOffice/PHPExcel.git\"\r\n        }\r\n    ],\r\n    \"require-dev\": {\r\n        \"phpoffice/phpexcel\": \"*\"\r\n    },\r\n```. Well, you can pretty much disregard, I found I should have probably been using composer.json anyway, this is a laravel project.  This is what i had to add to my laravel composer.json file to get the package nested safely into my vendors.   Hope it helps someone. \r\n```\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"vcs\",\r\n            \"name\": \"phpoffice/phpexcel\",\r\n            \"url\":  \"git@github.com:PHPOffice/PHPExcel.git\"\r\n        }\r\n    ],\r\n    \"require-dev\": {\r\n        \"phpoffice/phpexcel\": \"*\"\r\n    },\r\n```. ",
    "gamevnlc": "Oh thank you,In my case some cells have property like border or background so It seem that PHPExcel detects cell contain property background color/ border is not empty. Is it right . Oh thank you,In my case some cells have property like border or background so It seem that PHPExcel detects cell contain property background color/ border is not empty. Is it right . ",
    "squatto": "I'm having this exact same issue. I've had no problems reading files with images previously, and now I'm getting these errors.. On one of my worksheets, in Excel I went to \"View > Header and Footer...\" and displayed the headers/footers. The header had an image in it. When I removed the image this error went away.. I'm having this exact same issue. I've had no problems reading files with images previously, and now I'm getting these errors.. On one of my worksheets, in Excel I went to \"View > Header and Footer...\" and displayed the headers/footers. The header had an image in it. When I removed the image this error went away.. ",
    "chandni21": "Well, It's not like I have copy paste whole code.  As there are many calculation on the column ,, Is that the reason downloading 1 KB file or what ?\r\n. Well, It's not like I have copy paste whole code.  As there are many calculation on the column ,, Is that the reason downloading 1 KB file or what ?\r\n. ",
    "nslocomotives": "@chandni21 your probelm may be:\r\n$objPHPExcel->getActiveSheet()->setCellValue('A1', \"ID\")\r\ntry changing it to lowercase \"id\".\r\n$objPHPExcel->getActiveSheet()->setCellValue('A1', \"id\")\r\n\r\nthis is the case for CSV i don't know if its the same in this case but worth a try i think.. \r\nhttps://support.microsoft.com/en-us/help/323626/-sylk-file-format-is-not-valid-error-message-when-you-open-file. @chandni21 your probelm may be:\r\n$objPHPExcel->getActiveSheet()->setCellValue('A1', \"ID\")\r\ntry changing it to lowercase \"id\".\r\n$objPHPExcel->getActiveSheet()->setCellValue('A1', \"id\")\r\n\r\nthis is the case for CSV i don't know if its the same in this case but worth a try i think.. \r\nhttps://support.microsoft.com/en-us/help/323626/-sylk-file-format-is-not-valid-error-message-when-you-open-file. ",
    "yedort": "I had the same issue. Maybe it helps you.\r\n\r\nI already had the htmlspecialchars_decode and the strip_tags functions wrapped around the string I wanted to write to the document, then added the trim function and the problem was solved.. I had the same issue. Maybe it helps you.\r\n\r\nI already had the htmlspecialchars_decode and the strip_tags functions wrapped around the string I wanted to write to the document, then added the trim function and the problem was solved.. ",
    "xweeta1986": "Same problem... :s anyone found an answer?. Same problem... :s anyone found an answer?. ",
    "pokemon001": "No, no fix for this has been found for this.\n\nOn Nov 7, 2017 9:21 PM, \"xweeta1986\" <notifications@github.com> wrote:\n\n> Same problem... :s anyone found an answer?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/PHPOffice/PHPExcel/issues/1315#issuecomment-342526130>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AM-h9piHR9t3CVh2honC76lbIWU-29O3ks5s0HyBgaJpZM4PgPOM>\n> .\n>\n. No, no fix for this has been found for this.\n\nOn Nov 7, 2017 9:21 PM, \"xweeta1986\" <notifications@github.com> wrote:\n\n> Same problem... :s anyone found an answer?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/PHPOffice/PHPExcel/issues/1315#issuecomment-342526130>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AM-h9piHR9t3CVh2honC76lbIWU-29O3ks5s0HyBgaJpZM4PgPOM>\n> .\n>\n. ",
    "ComServ": "I'm having the same Problem\r\n. After a bit of hacking.... commented out line 178 in PHPExcel/shared/file.php and lo the file is written.\r\n        // use ordinary built-in PHP function\r\n        //    There should be no problem with the 5.2.4 Suhosin realpath() bug, because this line should only\r\n        //        be called if we're running 5.2.1 or earlier\r\n        //**myhack**\r\n        //**  Running PHP 7.0.24 and receiving Error 'File(/tmp) is not within the allowed path(s)'\r\n        //**  Commented out the following line and the Error disappears.... why? Who knows.\r\n        //return realpath(sys_get_temp_dir());. The real cause of the Problem: temp_dir not set in php.ini.\r\nIf you have no access to php.ini you can try to set the variable on runtime with\r\nputenv('TMPDIR=/foo/bar');\r\n(Works only if php not in safe mode)\r\n. I'm having the same Problem\r\n. After a bit of hacking.... commented out line 178 in PHPExcel/shared/file.php and lo the file is written.\r\n        // use ordinary built-in PHP function\r\n        //    There should be no problem with the 5.2.4 Suhosin realpath() bug, because this line should only\r\n        //        be called if we're running 5.2.1 or earlier\r\n        //**myhack**\r\n        //**  Running PHP 7.0.24 and receiving Error 'File(/tmp) is not within the allowed path(s)'\r\n        //**  Commented out the following line and the Error disappears.... why? Who knows.\r\n        //return realpath(sys_get_temp_dir());. The real cause of the Problem: temp_dir not set in php.ini.\r\nIf you have no access to php.ini you can try to set the variable on runtime with\r\nputenv('TMPDIR=/foo/bar');\r\n(Works only if php not in safe mode)\r\n. ",
    "jleslie": "Closing as we are forking.  Will re-submit PR from a clean branch. Closing as we are forking.  Will re-submit PR from a clean branch. ",
    "juan-nunez": "I figured out the problem. If you look at my code, I have the following line:\r\n```\r\n$condition = '=MATCH($' . \"$startCell,'$connectSheetName'!$\" . $column . ':$' . $column . \",0)>0\";\r\n```\r\n\r\nThe equal sign is not needed. . I figured out the problem. If you look at my code, I have the following line:\r\n```\r\n$condition = '=MATCH($' . \"$startCell,'$connectSheetName'!$\" . $column . ':$' . $column . \",0)>0\";\r\n```\r\n\r\nThe equal sign is not needed. . ",
    "ekosutopo": "`commit`. `commit`. ",
    "trgreen17": "I forgot to add that I'm working in Drupal 7, using the [PHPExcel ](https://www.drupal.org/project/phpexcel) module.\r\n\r\nThe code I'm using is:\r\n\r\n`$excelData = phpexcel_import( $uploadedFile, FALSE, FALSE, array());`. Never mind, I figured it out. There was data validation that referenced a list in Excel. As soon as I removed that and entered dropdown choices manually it worked fine.. I forgot to add that I'm working in Drupal 7, using the [PHPExcel ](https://www.drupal.org/project/phpexcel) module.\r\n\r\nThe code I'm using is:\r\n\r\n`$excelData = phpexcel_import( $uploadedFile, FALSE, FALSE, array());`. Never mind, I figured it out. There was data validation that referenced a list in Excel. As soon as I removed that and entered dropdown choices manually it worked fine.. ",
    "Manmohan7": "I've just started using php so I won't be able to contribute much. But I wish someone fixes it soon.. I've just started using php so I won't be able to contribute much. But I wish someone fixes it soon.. ",
    "stellarore": "It would be the same error if the known_xs were all the same number, not necessarily just zero. For all these cases, it's trying to calculate the slope/intercept of a vertical line.. It would be the same error if the known_xs were all the same number, not necessarily just zero. For all these cases, it's trying to calculate the slope/intercept of a vertical line.. ",
    "aliusa": "I don't think it's possible in Excel. It's Google Docs feature.. I don't think it's possible in Excel. It's Google Docs feature.. ",
    "boonstoppel": "Found a solution.\r\n\r\n$list = trim(implode(',', [\r\n  'foo',\r\n  'bar,\r\n  'baz'\r\n]));\r\n\r\n$cell\r\n            ->getDataValidation()\r\n            ->setType(PHPExcel_Cell_DataValidation::TYPE_LIST)\r\n            ->setErrorStyle(PHPExcel_Cell_DataValidation::STYLE_INFORMATION)\r\n            ->setAllowBlank(true)\r\n            ->setShowDropDown(true)\r\n            ->setErrorTitle('Input error')\r\n            ->setError('Value is not in list')\r\n            ->setFormula1(sprintf('\"%s\"', $list));\r\n\r\n. Found a solution.\r\n\r\n$list = trim(implode(',', [\r\n  'foo',\r\n  'bar,\r\n  'baz'\r\n]));\r\n\r\n$cell\r\n            ->getDataValidation()\r\n            ->setType(PHPExcel_Cell_DataValidation::TYPE_LIST)\r\n            ->setErrorStyle(PHPExcel_Cell_DataValidation::STYLE_INFORMATION)\r\n            ->setAllowBlank(true)\r\n            ->setShowDropDown(true)\r\n            ->setErrorTitle('Input error')\r\n            ->setError('Value is not in list')\r\n            ->setFormula1(sprintf('\"%s\"', $list));\r\n\r\n. ",
    "mgnshawn": "Solved!  A non-display include file had a trailing LF after the closing tag.  I found this quick command in a Google search which worked well in finding these:\r\n```for f in `find . -type f`; do                          \r\n  for t in head tail; do\r\n    $t -1 $f  |egrep '^[  ]*$' >/dev/null && echo \"blank line at the $t of $f\";\r\n  done;\r\ndone```. Solved!  A non-display include file had a trailing LF after the closing tag.  I found this quick command in a Google search which worked well in finding these:\r\n```for f in `find . -type f`; do                          \r\n  for t in head tail; do\r\n    $t -1 $f  |egrep '^[  ]*$' >/dev/null && echo \"blank line at the $t of $f\";\r\n  done;\r\ndone```. ",
    "seltix5": "Hi,\r\nBut this is just a warning duo to directly converting a string to a int, it could be easly fixed. PhpSpreadsheet  has dependencies and uses composer, i do not :/. Hi,\r\nBut this is just a warning duo to directly converting a string to a int, it could be easly fixed. PhpSpreadsheet  has dependencies and uses composer, i do not :/. ",
    "FabiGjuzi": "None of the above worked for me.. None of the above worked for me.. ",
    "kalimputhawala": "You should use Java Libraries for handling with Large files. Most of the servers would time-out.. No, I mean you should take the process offline (on your local pc) and not on the server.  I hope it helps.\r\n\r\n\r\n\r\n\r\n\r\n\r\nSent from Windows Mail\r\n\r\n\r\n\r\n\r\n\r\nFrom: lwoods\r\nSent: \u200eWednesday\u200e, \u200eNovember\u200e \u200e8\u200e, \u200e2017 \u200e2\u200e:\u200e21\u200e \u200eAM\r\nTo: PHPOffice/PHPExcel\r\nCc: Kalim M Puthawala, Comment\r\n\r\n\r\n\r\n\r\nSorry. Gotta' plead dumb, here. I am running on a public hosting site (\r\nGoDaddy ). Are your \"Java Libraries\" running on the server and, if so, do\r\nI load them or what?\r\n\r\nOn Tue, Nov 7, 2017 at 1:40 PM, Kalim M Puthawala <notifications@github.com>\r\nwrote:\r\n\r\n> You should use Java Libraries for handling with Large files. Most of the\r\n> servers would time-out.\r\n>\r\n> \u2014\r\n> You are receiving this because you authored the thread.\r\n> Reply to this email directly, view it on GitHub\r\n> <https://mailtrack.io/trace/link/e08cce337d837f219bccd6165b4d87051d2cb0f5?url=https%3A%2F%2Fgithub.com%2FPHPOffice%2FPHPExcel%2Fissues%2F1344%23issuecomment-342614946&userId=1611542&signature=1cdbde00e3deb78a>,\r\n> or mute the thread\r\n> <https://mailtrack.io/trace/link/78152be880d1fd93109a655c20c813330142b33f?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAALE2SuInLhw-tzv6vGn5xAui8NQvtJeks5s0MA-gaJpZM4QSEjr&userId=1611542&signature=4146dfb0d25e0d8c>\r\n> .\r\n>\r\n\r\n\r\n\r\n-- \r\n\r\nOffice: 623-556-8949\r\nCell: 602-369-5049\r\n\r\n\r\n--- NOTICE ---\r\n\r\n\r\nThis message is for the designated recipient only and may contain\r\nconfidential, privileged or proprietary information. If you have received\r\nit in error, please notify the sender immediately and delete the original\r\nand any copy or printout. Unintended recipients are prohibited from making\r\nany other use of this e-mail. Although we have taken reasonable\r\nprecautions to ensure no viruses are present in this e-mail, we accept no\r\nliability for any loss or damage arising from the use of this e-mail or\r\nattachments, or for any delay or errors or omissions in the contents which\r\nresult from e-mail transmission.\r\n\r\n\u2014\r\nYou are receiving this because you commented.\r\nReply to this email directly, view it on GitHub, or mute the thread.. In php.ini file  increase the memory, memory_limit= 64M  \r\n\r\n\r\nhttps://www.drupal.org/docs/7/managing-site-performance-and-scalability/changing-php-memory-limits\r\n\r\n\r\n\r\n\r\n\r\n\r\nSent from Windows Mail\r\n\r\n\r\n\r\n\r\n\r\nFrom: lwoods\r\nSent: \u200eWednesday\u200e, \u200eNovember\u200e \u200e8\u200e, \u200e2017 \u200e2\u200e:\u200e33\u200e \u200eAM\r\nTo: PHPOffice/PHPExcel\r\nCc: Kalim M Puthawala, Comment\r\n\r\n\r\n\r\n\r\nThat would defeat the purpose. I am trying to take all action away from\r\nthe client because they are not computer-literate. My goal was \"Click, and\r\nDone!\"\r\n\r\nOn Tue, Nov 7, 2017 at 1:54 PM, Kalim M Puthawala <notifications@github.com>\r\nwrote:\r\n\r\n> No, I mean you should take the process offline (on your local pc) and not\r\n> on the server. I hope it helps.\r\n>\r\n>\r\n>\r\n>\r\n>\r\n>\r\n> Sent from Windows Mail\r\n>\r\n>\r\n>\r\n>\r\n>\r\n> From: lwoods\r\n> Sent: \u200eWednesday\u200e, \u200eNovember\u200e \u200e8\u200e, \u200e2017 \u200e2\u200e:\u200e21\u200e \u200eAM\r\n> To: PHPOffice/PHPExcel\r\n> Cc: Kalim M Puthawala, Comment\r\n>\r\n>\r\n>\r\n>\r\n> Sorry. Gotta' plead dumb, here. I am running on a public hosting site (\r\n> GoDaddy ). Are your \"Java Libraries\" running on the server and, if so, do\r\n> I load them or what?\r\n>\r\n> On Tue, Nov 7, 2017 at 1:40 PM, Kalim M Puthawala <\r\n> notifications@github.com>\r\n> wrote:\r\n>\r\n> > You should use Java Libraries for handling with Large files. Most of the\r\n> > servers would time-out.\r\n> >\r\n> > \u2014\r\n> > You are receiving this because you authored the thread.\r\n> > Reply to this email directly, view it on GitHub\r\n> > <https://mailtrack.io/trace/link/e08cce337d837f219bccd6165b4d87\r\n> 051d2cb0f5?url=https%3A%2F%2Fgithub.com%2FPHPOffice%\r\n> 2FPHPExcel%2Fissues%2F1344%23issuecomment-342614946&\r\n> userId=1611542&signature=1cdbde00e3deb78a\r\n> <https://mailtrack.io/trace/link/4acabdf6071bd2ab1592e53daf62ed1002c3f290?url=https%3A%2F%2Fgithub.com%2FPHPOffice%2FPHPExcel%2Fissues%2F1344%23issuecomment-342614946&userId=1611542&signature=1d628469fcabe9d7>>,\r\n>\r\n> > or mute the thread\r\n> > <https://mailtrack.io/trace/link/78152be880d1fd93109a655c20c813\r\n> 330142b33f?url=https%3A%2F%2Fgithub.com%2Fnotifications%\r\n> 2Funsubscribe-auth%2FAALE2SuInLhw-tzv6vGn5xAui8NQvtJeks5s0MA-\r\n> gaJpZM4QSEjr&userId=1611542&signature=4146dfb0d25e0d8c\r\n> <https://mailtrack.io/trace/link/68c3735e2e20992581b453de02ade04b7fcd87a0?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAALE2SuInLhw-tzv6vGn5xAui8NQvtJeks5s0MA-gaJpZM4QSEjr&userId=1611542&signature=17c37078f902f6c8>>\r\n>\r\n> > .\r\n> >\r\n>\r\n>\r\n>\r\n> --\r\n>\r\n> Office: 623-556-8949 <(623)%20556-8949>\r\n> Cell: 602-369-5049 <(602)%20369-5049>\r\n>\r\n>\r\n> --- NOTICE ---\r\n>\r\n>\r\n> This message is for the designated recipient only and may contain\r\n> confidential, privileged or proprietary information. If you have received\r\n> it in error, please notify the sender immediately and delete the original\r\n> and any copy or printout. Unintended recipients are prohibited from making\r\n> any other use of this e-mail. Although we have taken reasonable\r\n> precautions to ensure no viruses are present in this e-mail, we accept no\r\n> liability for any loss or damage arising from the use of this e-mail or\r\n> attachments, or for any delay or errors or omissions in the contents which\r\n> result from e-mail transmission.\r\n>\r\n> \u2014\r\n> You are receiving this because you commented.\r\n> Reply to this email directly, view it on GitHub, or mute the thread.\r\n>\r\n> \u2014\r\n> You are receiving this because you authored the thread.\r\n> Reply to this email directly, view it on GitHub\r\n> <https://mailtrack.io/trace/link/05c863566f6e062e4d8cecd599899b85d36c6e5f?url=https%3A%2F%2Fgithub.com%2FPHPOffice%2FPHPExcel%2Fissues%2F1344%23issuecomment-342618851&userId=1611542&signature=9f73780c19e2212d>,\r\n> or mute the thread\r\n> <https://mailtrack.io/trace/link/076f828e5befcdaaa810029290720aaa22c2a64f?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAALE2fRQBSjKErCYKpYf8qf7M4wAa5rsks5s0MOggaJpZM4QSEjr&userId=1611542&signature=301b563a8b741aca>\r\n> .\r\n>\r\n\r\n\r\n\r\n-- \r\n\r\nOffice: 623-556-8949\r\nCell: 602-369-5049\r\n\r\n\r\n--- NOTICE ---\r\n\r\n\r\nThis message is for the designated recipient only and may contain\r\nconfidential, privileged or proprietary information. If you have received\r\nit in error, please notify the sender immediately and delete the original\r\nand any copy or printout. Unintended recipients are prohibited from making\r\nany other use of this e-mail. Although we have taken reasonable\r\nprecautions to ensure no viruses are present in this e-mail, we accept no\r\nliability for any loss or damage arising from the use of this e-mail or\r\nattachments, or for any delay or errors or omissions in the contents which\r\nresult from e-mail transmission.\r\n\r\n\u2014\r\nYou are receiving this because you commented.\r\nReply to this email directly, view it on GitHub, or mute the thread.. You should use Java Libraries for handling with Large files. Most of the servers would time-out.. No, I mean you should take the process offline (on your local pc) and not on the server.  I hope it helps.\r\n\r\n\r\n\r\n\r\n\r\n\r\nSent from Windows Mail\r\n\r\n\r\n\r\n\r\n\r\nFrom: lwoods\r\nSent: \u200eWednesday\u200e, \u200eNovember\u200e \u200e8\u200e, \u200e2017 \u200e2\u200e:\u200e21\u200e \u200eAM\r\nTo: PHPOffice/PHPExcel\r\nCc: Kalim M Puthawala, Comment\r\n\r\n\r\n\r\n\r\nSorry. Gotta' plead dumb, here. I am running on a public hosting site (\r\nGoDaddy ). Are your \"Java Libraries\" running on the server and, if so, do\r\nI load them or what?\r\n\r\nOn Tue, Nov 7, 2017 at 1:40 PM, Kalim M Puthawala <notifications@github.com>\r\nwrote:\r\n\r\n> You should use Java Libraries for handling with Large files. Most of the\r\n> servers would time-out.\r\n>\r\n> \u2014\r\n> You are receiving this because you authored the thread.\r\n> Reply to this email directly, view it on GitHub\r\n> <https://mailtrack.io/trace/link/e08cce337d837f219bccd6165b4d87051d2cb0f5?url=https%3A%2F%2Fgithub.com%2FPHPOffice%2FPHPExcel%2Fissues%2F1344%23issuecomment-342614946&userId=1611542&signature=1cdbde00e3deb78a>,\r\n> or mute the thread\r\n> <https://mailtrack.io/trace/link/78152be880d1fd93109a655c20c813330142b33f?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAALE2SuInLhw-tzv6vGn5xAui8NQvtJeks5s0MA-gaJpZM4QSEjr&userId=1611542&signature=4146dfb0d25e0d8c>\r\n> .\r\n>\r\n\r\n\r\n\r\n-- \r\n\r\nOffice: 623-556-8949\r\nCell: 602-369-5049\r\n\r\n\r\n--- NOTICE ---\r\n\r\n\r\nThis message is for the designated recipient only and may contain\r\nconfidential, privileged or proprietary information. If you have received\r\nit in error, please notify the sender immediately and delete the original\r\nand any copy or printout. Unintended recipients are prohibited from making\r\nany other use of this e-mail. Although we have taken reasonable\r\nprecautions to ensure no viruses are present in this e-mail, we accept no\r\nliability for any loss or damage arising from the use of this e-mail or\r\nattachments, or for any delay or errors or omissions in the contents which\r\nresult from e-mail transmission.\r\n\r\n\u2014\r\nYou are receiving this because you commented.\r\nReply to this email directly, view it on GitHub, or mute the thread.. In php.ini file  increase the memory, memory_limit= 64M  \r\n\r\n\r\nhttps://www.drupal.org/docs/7/managing-site-performance-and-scalability/changing-php-memory-limits\r\n\r\n\r\n\r\n\r\n\r\n\r\nSent from Windows Mail\r\n\r\n\r\n\r\n\r\n\r\nFrom: lwoods\r\nSent: \u200eWednesday\u200e, \u200eNovember\u200e \u200e8\u200e, \u200e2017 \u200e2\u200e:\u200e33\u200e \u200eAM\r\nTo: PHPOffice/PHPExcel\r\nCc: Kalim M Puthawala, Comment\r\n\r\n\r\n\r\n\r\nThat would defeat the purpose. I am trying to take all action away from\r\nthe client because they are not computer-literate. My goal was \"Click, and\r\nDone!\"\r\n\r\nOn Tue, Nov 7, 2017 at 1:54 PM, Kalim M Puthawala <notifications@github.com>\r\nwrote:\r\n\r\n> No, I mean you should take the process offline (on your local pc) and not\r\n> on the server. I hope it helps.\r\n>\r\n>\r\n>\r\n>\r\n>\r\n>\r\n> Sent from Windows Mail\r\n>\r\n>\r\n>\r\n>\r\n>\r\n> From: lwoods\r\n> Sent: \u200eWednesday\u200e, \u200eNovember\u200e \u200e8\u200e, \u200e2017 \u200e2\u200e:\u200e21\u200e \u200eAM\r\n> To: PHPOffice/PHPExcel\r\n> Cc: Kalim M Puthawala, Comment\r\n>\r\n>\r\n>\r\n>\r\n> Sorry. Gotta' plead dumb, here. I am running on a public hosting site (\r\n> GoDaddy ). Are your \"Java Libraries\" running on the server and, if so, do\r\n> I load them or what?\r\n>\r\n> On Tue, Nov 7, 2017 at 1:40 PM, Kalim M Puthawala <\r\n> notifications@github.com>\r\n> wrote:\r\n>\r\n> > You should use Java Libraries for handling with Large files. Most of the\r\n> > servers would time-out.\r\n> >\r\n> > \u2014\r\n> > You are receiving this because you authored the thread.\r\n> > Reply to this email directly, view it on GitHub\r\n> > <https://mailtrack.io/trace/link/e08cce337d837f219bccd6165b4d87\r\n> 051d2cb0f5?url=https%3A%2F%2Fgithub.com%2FPHPOffice%\r\n> 2FPHPExcel%2Fissues%2F1344%23issuecomment-342614946&\r\n> userId=1611542&signature=1cdbde00e3deb78a\r\n> <https://mailtrack.io/trace/link/4acabdf6071bd2ab1592e53daf62ed1002c3f290?url=https%3A%2F%2Fgithub.com%2FPHPOffice%2FPHPExcel%2Fissues%2F1344%23issuecomment-342614946&userId=1611542&signature=1d628469fcabe9d7>>,\r\n>\r\n> > or mute the thread\r\n> > <https://mailtrack.io/trace/link/78152be880d1fd93109a655c20c813\r\n> 330142b33f?url=https%3A%2F%2Fgithub.com%2Fnotifications%\r\n> 2Funsubscribe-auth%2FAALE2SuInLhw-tzv6vGn5xAui8NQvtJeks5s0MA-\r\n> gaJpZM4QSEjr&userId=1611542&signature=4146dfb0d25e0d8c\r\n> <https://mailtrack.io/trace/link/68c3735e2e20992581b453de02ade04b7fcd87a0?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAALE2SuInLhw-tzv6vGn5xAui8NQvtJeks5s0MA-gaJpZM4QSEjr&userId=1611542&signature=17c37078f902f6c8>>\r\n>\r\n> > .\r\n> >\r\n>\r\n>\r\n>\r\n> --\r\n>\r\n> Office: 623-556-8949 <(623)%20556-8949>\r\n> Cell: 602-369-5049 <(602)%20369-5049>\r\n>\r\n>\r\n> --- NOTICE ---\r\n>\r\n>\r\n> This message is for the designated recipient only and may contain\r\n> confidential, privileged or proprietary information. If you have received\r\n> it in error, please notify the sender immediately and delete the original\r\n> and any copy or printout. Unintended recipients are prohibited from making\r\n> any other use of this e-mail. Although we have taken reasonable\r\n> precautions to ensure no viruses are present in this e-mail, we accept no\r\n> liability for any loss or damage arising from the use of this e-mail or\r\n> attachments, or for any delay or errors or omissions in the contents which\r\n> result from e-mail transmission.\r\n>\r\n> \u2014\r\n> You are receiving this because you commented.\r\n> Reply to this email directly, view it on GitHub, or mute the thread.\r\n>\r\n> \u2014\r\n> You are receiving this because you authored the thread.\r\n> Reply to this email directly, view it on GitHub\r\n> <https://mailtrack.io/trace/link/05c863566f6e062e4d8cecd599899b85d36c6e5f?url=https%3A%2F%2Fgithub.com%2FPHPOffice%2FPHPExcel%2Fissues%2F1344%23issuecomment-342618851&userId=1611542&signature=9f73780c19e2212d>,\r\n> or mute the thread\r\n> <https://mailtrack.io/trace/link/076f828e5befcdaaa810029290720aaa22c2a64f?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAALE2fRQBSjKErCYKpYf8qf7M4wAa5rsks5s0MOggaJpZM4QSEjr&userId=1611542&signature=301b563a8b741aca>\r\n> .\r\n>\r\n\r\n\r\n\r\n-- \r\n\r\nOffice: 623-556-8949\r\nCell: 602-369-5049\r\n\r\n\r\n--- NOTICE ---\r\n\r\n\r\nThis message is for the designated recipient only and may contain\r\nconfidential, privileged or proprietary information. If you have received\r\nit in error, please notify the sender immediately and delete the original\r\nand any copy or printout. Unintended recipients are prohibited from making\r\nany other use of this e-mail. Although we have taken reasonable\r\nprecautions to ensure no viruses are present in this e-mail, we accept no\r\nliability for any loss or damage arising from the use of this e-mail or\r\nattachments, or for any delay or errors or omissions in the contents which\r\nresult from e-mail transmission.\r\n\r\n\u2014\r\nYou are receiving this because you commented.\r\nReply to this email directly, view it on GitHub, or mute the thread.. ",
    "lwoods": "Sorry.  Gotta' plead dumb, here.  I am running on a public hosting site (\nGoDaddy ).  Are your \"Java Libraries\" running on the server and, if so, do\nI load them or what?\n\nOn Tue, Nov 7, 2017 at 1:40 PM, Kalim M Puthawala <notifications@github.com>\nwrote:\n\n> You should use Java Libraries for handling with Large files. Most of the\n> servers would time-out.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://mailtrack.io/trace/link/e08cce337d837f219bccd6165b4d87051d2cb0f5?url=https%3A%2F%2Fgithub.com%2FPHPOffice%2FPHPExcel%2Fissues%2F1344%23issuecomment-342614946&userId=1611542&signature=1cdbde00e3deb78a>,\n> or mute the thread\n> <https://mailtrack.io/trace/link/78152be880d1fd93109a655c20c813330142b33f?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAALE2SuInLhw-tzv6vGn5xAui8NQvtJeks5s0MA-gaJpZM4QSEjr&userId=1611542&signature=4146dfb0d25e0d8c>\n> .\n>\n\n\n\n-- \n\nOffice:  623-556-8949\nCell:     602-369-5049\n\n\n--- NOTICE ---\n\n\nThis message is for the designated recipient only and may contain\nconfidential, privileged or proprietary information.  If you have received\nit in error, please notify the sender immediately and delete the original\nand any copy or printout.  Unintended recipients are prohibited from making\nany other use of this e-mail.  Although we have taken reasonable\nprecautions to ensure no viruses are present in this e-mail, we accept no\nliability for any loss or damage arising from the use of this e-mail or\nattachments, or for any delay or errors or omissions in the contents which\nresult from e-mail transmission.\n. That would defeat the purpose.  I am trying to take all action away from\nthe client because they are not computer-literate.  My goal was \"Click, and\nDone!\"\n\nOn Tue, Nov 7, 2017 at 1:54 PM, Kalim M Puthawala <notifications@github.com>\nwrote:\n\n> No, I mean you should take the process offline (on your local pc) and not\n> on the server. I hope it helps.\n>\n>\n>\n>\n>\n>\n> Sent from Windows Mail\n>\n>\n>\n>\n>\n> From: lwoods\n> Sent: \u200eWednesday\u200e, \u200eNovember\u200e \u200e8\u200e, \u200e2017 \u200e2\u200e:\u200e21\u200e \u200eAM\n> To: PHPOffice/PHPExcel\n> Cc: Kalim M Puthawala, Comment\n>\n>\n>\n>\n> Sorry. Gotta' plead dumb, here. I am running on a public hosting site (\n> GoDaddy ). Are your \"Java Libraries\" running on the server and, if so, do\n> I load them or what?\n>\n> On Tue, Nov 7, 2017 at 1:40 PM, Kalim M Puthawala <\n> notifications@github.com>\n> wrote:\n>\n> > You should use Java Libraries for handling with Large files. Most of the\n> > servers would time-out.\n> >\n> > \u2014\n> > You are receiving this because you authored the thread.\n> > Reply to this email directly, view it on GitHub\n> > <https://mailtrack.io/trace/link/e08cce337d837f219bccd6165b4d87\n> 051d2cb0f5?url=https%3A%2F%2Fgithub.com%2FPHPOffice%\n> 2FPHPExcel%2Fissues%2F1344%23issuecomment-342614946&\n> userId=1611542&signature=1cdbde00e3deb78a\n> <https://mailtrack.io/trace/link/4acabdf6071bd2ab1592e53daf62ed1002c3f290?url=https%3A%2F%2Fgithub.com%2FPHPOffice%2FPHPExcel%2Fissues%2F1344%23issuecomment-342614946&userId=1611542&signature=1d628469fcabe9d7>>,\n>\n> > or mute the thread\n> > <https://mailtrack.io/trace/link/78152be880d1fd93109a655c20c813\n> 330142b33f?url=https%3A%2F%2Fgithub.com%2Fnotifications%\n> 2Funsubscribe-auth%2FAALE2SuInLhw-tzv6vGn5xAui8NQvtJeks5s0MA-\n> gaJpZM4QSEjr&userId=1611542&signature=4146dfb0d25e0d8c\n> <https://mailtrack.io/trace/link/68c3735e2e20992581b453de02ade04b7fcd87a0?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAALE2SuInLhw-tzv6vGn5xAui8NQvtJeks5s0MA-gaJpZM4QSEjr&userId=1611542&signature=17c37078f902f6c8>>\n>\n> > .\n> >\n>\n>\n>\n> --\n>\n> Office: 623-556-8949 <(623)%20556-8949>\n> Cell: 602-369-5049 <(602)%20369-5049>\n>\n>\n> --- NOTICE ---\n>\n>\n> This message is for the designated recipient only and may contain\n> confidential, privileged or proprietary information. If you have received\n> it in error, please notify the sender immediately and delete the original\n> and any copy or printout. Unintended recipients are prohibited from making\n> any other use of this e-mail. Although we have taken reasonable\n> precautions to ensure no viruses are present in this e-mail, we accept no\n> liability for any loss or damage arising from the use of this e-mail or\n> attachments, or for any delay or errors or omissions in the contents which\n> result from e-mail transmission.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://mailtrack.io/trace/link/05c863566f6e062e4d8cecd599899b85d36c6e5f?url=https%3A%2F%2Fgithub.com%2FPHPOffice%2FPHPExcel%2Fissues%2F1344%23issuecomment-342618851&userId=1611542&signature=9f73780c19e2212d>,\n> or mute the thread\n> <https://mailtrack.io/trace/link/076f828e5befcdaaa810029290720aaa22c2a64f?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAALE2fRQBSjKErCYKpYf8qf7M4wAa5rsks5s0MOggaJpZM4QSEjr&userId=1611542&signature=301b563a8b741aca>\n> .\n>\n\n\n\n-- \n\nOffice:  623-556-8949\nCell:     602-369-5049\n\n\n--- NOTICE ---\n\n\nThis message is for the designated recipient only and may contain\nconfidential, privileged or proprietary information.  If you have received\nit in error, please notify the sender immediately and delete the original\nand any copy or printout.  Unintended recipients are prohibited from making\nany other use of this e-mail.  Although we have taken reasonable\nprecautions to ensure no viruses are present in this e-mail, we accept no\nliability for any loss or damage arising from the use of this e-mail or\nattachments, or for any delay or errors or omissions in the contents which\nresult from e-mail transmission.\n. Thanks for the reply, Kevin,\n\nMy file is 6 Meg!!!\n\nOn Thu, Nov 16, 2017 at 1:12 PM, Kevin Kinsey <notifications@github.com>\nwrote:\n\n> Hi lwoods. I've successfully written Excel files in excess of 1GB with\n> PHPExcel on FreeBSD; I set PHP's \"max_execution_time\" high (I used 86400\n> [one hour]) in the script and memory_limit=1024M in PHP.ini.\n>\n> In PHPExcel, we use PHPExcel_CachedObjectStorageFactory::cache_to_discISAM,\n> per the docs.\n>\n> I have had trouble with a TWO GB file though ;-)\n>\n> Hope this helps ....\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://mailtrack.io/trace/link/ed1a71a1c3d47c42736bea48de7ca7099e8421f1?url=https%3A%2F%2Fgithub.com%2FPHPOffice%2FPHPExcel%2Fissues%2F1344%23issuecomment-345048447&userId=1611542&signature=d8c04235c41bd80d>,\n> or mute the thread\n> <https://mailtrack.io/trace/link/3a8d7eb22397d65ffd49804162a1380c1f1d3482?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAALE2UwVZOOGwdwFGQwabRyjygrHCoL6ks5s3JdBgaJpZM4QSEjr&userId=1611542&signature=5cbd189d5e35ce05>\n> .\n>\n\n\n\n-- \n\nOffice:  623-556-8949\nCell:     602-369-5049\n\n\n--- NOTICE ---\n\n\nThis message is for the designated recipient only and may contain\nconfidential, privileged or proprietary information.  If you have received\nit in error, please notify the sender immediately and delete the original\nand any copy or printout.  Unintended recipients are prohibited from making\nany other use of this e-mail.  Although we have taken reasonable\nprecautions to ensure no viruses are present in this e-mail, we accept no\nliability for any loss or damage arising from the use of this e-mail or\nattachments, or for any delay or errors or omissions in the contents which\nresult from e-mail transmission.\n. I guess I was trying to be lazy.  I used to tear about Access databases at\nthe hex level so I guess ripping up an Excel spreadsheet will not be much\nharder.  Here I go!\n\nOn Thu, Nov 16, 2017 at 1:12 PM, Kevin Kinsey <notifications@github.com>\nwrote:\n\n> Hi lwoods. I've successfully written Excel files in excess of 1GB with\n> PHPExcel on FreeBSD; I set PHP's \"max_execution_time\" high (I used 86400\n> [one hour]) in the script and memory_limit=1024M in PHP.ini.\n>\n> In PHPExcel, we use PHPExcel_CachedObjectStorageFactory::cache_to_discISAM,\n> per the docs.\n>\n> I have had trouble with a TWO GB file though ;-)\n>\n> Hope this helps ....\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://mailtrack.io/trace/link/2e2e414c28f656ef98d6cc41c20cfb76bf2b3356?url=https%3A%2F%2Fgithub.com%2FPHPOffice%2FPHPExcel%2Fissues%2F1344%23issuecomment-345048447&userId=1611542&signature=8ba5d1adc439a4b4>,\n> or mute the thread\n> <https://mailtrack.io/trace/link/58eecc57d79177b210be3ae8eb802c7d4e700faf?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAALE2UwVZOOGwdwFGQwabRyjygrHCoL6ks5s3JdBgaJpZM4QSEjr&userId=1611542&signature=0266f40f267ee5e6>\n> .\n>\n\n\n\n-- \n\nOffice:  623-556-8949\nCell:     602-369-5049\n\n\n--- NOTICE ---\n\n\nThis message is for the designated recipient only and may contain\nconfidential, privileged or proprietary information.  If you have received\nit in error, please notify the sender immediately and delete the original\nand any copy or printout.  Unintended recipients are prohibited from making\nany other use of this e-mail.  Although we have taken reasonable\nprecautions to ensure no viruses are present in this e-mail, we accept no\nliability for any loss or damage arising from the use of this e-mail or\nattachments, or for any delay or errors or omissions in the contents which\nresult from e-mail transmission.\n. Sorry.  Gotta' plead dumb, here.  I am running on a public hosting site (\nGoDaddy ).  Are your \"Java Libraries\" running on the server and, if so, do\nI load them or what?\n\nOn Tue, Nov 7, 2017 at 1:40 PM, Kalim M Puthawala <notifications@github.com>\nwrote:\n\n> You should use Java Libraries for handling with Large files. Most of the\n> servers would time-out.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://mailtrack.io/trace/link/e08cce337d837f219bccd6165b4d87051d2cb0f5?url=https%3A%2F%2Fgithub.com%2FPHPOffice%2FPHPExcel%2Fissues%2F1344%23issuecomment-342614946&userId=1611542&signature=1cdbde00e3deb78a>,\n> or mute the thread\n> <https://mailtrack.io/trace/link/78152be880d1fd93109a655c20c813330142b33f?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAALE2SuInLhw-tzv6vGn5xAui8NQvtJeks5s0MA-gaJpZM4QSEjr&userId=1611542&signature=4146dfb0d25e0d8c>\n> .\n>\n\n\n\n-- \n\nOffice:  623-556-8949\nCell:     602-369-5049\n\n\n--- NOTICE ---\n\n\nThis message is for the designated recipient only and may contain\nconfidential, privileged or proprietary information.  If you have received\nit in error, please notify the sender immediately and delete the original\nand any copy or printout.  Unintended recipients are prohibited from making\nany other use of this e-mail.  Although we have taken reasonable\nprecautions to ensure no viruses are present in this e-mail, we accept no\nliability for any loss or damage arising from the use of this e-mail or\nattachments, or for any delay or errors or omissions in the contents which\nresult from e-mail transmission.\n. That would defeat the purpose.  I am trying to take all action away from\nthe client because they are not computer-literate.  My goal was \"Click, and\nDone!\"\n\nOn Tue, Nov 7, 2017 at 1:54 PM, Kalim M Puthawala <notifications@github.com>\nwrote:\n\n> No, I mean you should take the process offline (on your local pc) and not\n> on the server. I hope it helps.\n>\n>\n>\n>\n>\n>\n> Sent from Windows Mail\n>\n>\n>\n>\n>\n> From: lwoods\n> Sent: \u200eWednesday\u200e, \u200eNovember\u200e \u200e8\u200e, \u200e2017 \u200e2\u200e:\u200e21\u200e \u200eAM\n> To: PHPOffice/PHPExcel\n> Cc: Kalim M Puthawala, Comment\n>\n>\n>\n>\n> Sorry. Gotta' plead dumb, here. I am running on a public hosting site (\n> GoDaddy ). Are your \"Java Libraries\" running on the server and, if so, do\n> I load them or what?\n>\n> On Tue, Nov 7, 2017 at 1:40 PM, Kalim M Puthawala <\n> notifications@github.com>\n> wrote:\n>\n> > You should use Java Libraries for handling with Large files. Most of the\n> > servers would time-out.\n> >\n> > \u2014\n> > You are receiving this because you authored the thread.\n> > Reply to this email directly, view it on GitHub\n> > <https://mailtrack.io/trace/link/e08cce337d837f219bccd6165b4d87\n> 051d2cb0f5?url=https%3A%2F%2Fgithub.com%2FPHPOffice%\n> 2FPHPExcel%2Fissues%2F1344%23issuecomment-342614946&\n> userId=1611542&signature=1cdbde00e3deb78a\n> <https://mailtrack.io/trace/link/4acabdf6071bd2ab1592e53daf62ed1002c3f290?url=https%3A%2F%2Fgithub.com%2FPHPOffice%2FPHPExcel%2Fissues%2F1344%23issuecomment-342614946&userId=1611542&signature=1d628469fcabe9d7>>,\n>\n> > or mute the thread\n> > <https://mailtrack.io/trace/link/78152be880d1fd93109a655c20c813\n> 330142b33f?url=https%3A%2F%2Fgithub.com%2Fnotifications%\n> 2Funsubscribe-auth%2FAALE2SuInLhw-tzv6vGn5xAui8NQvtJeks5s0MA-\n> gaJpZM4QSEjr&userId=1611542&signature=4146dfb0d25e0d8c\n> <https://mailtrack.io/trace/link/68c3735e2e20992581b453de02ade04b7fcd87a0?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAALE2SuInLhw-tzv6vGn5xAui8NQvtJeks5s0MA-gaJpZM4QSEjr&userId=1611542&signature=17c37078f902f6c8>>\n>\n> > .\n> >\n>\n>\n>\n> --\n>\n> Office: 623-556-8949 <(623)%20556-8949>\n> Cell: 602-369-5049 <(602)%20369-5049>\n>\n>\n> --- NOTICE ---\n>\n>\n> This message is for the designated recipient only and may contain\n> confidential, privileged or proprietary information. If you have received\n> it in error, please notify the sender immediately and delete the original\n> and any copy or printout. Unintended recipients are prohibited from making\n> any other use of this e-mail. Although we have taken reasonable\n> precautions to ensure no viruses are present in this e-mail, we accept no\n> liability for any loss or damage arising from the use of this e-mail or\n> attachments, or for any delay or errors or omissions in the contents which\n> result from e-mail transmission.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://mailtrack.io/trace/link/05c863566f6e062e4d8cecd599899b85d36c6e5f?url=https%3A%2F%2Fgithub.com%2FPHPOffice%2FPHPExcel%2Fissues%2F1344%23issuecomment-342618851&userId=1611542&signature=9f73780c19e2212d>,\n> or mute the thread\n> <https://mailtrack.io/trace/link/076f828e5befcdaaa810029290720aaa22c2a64f?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAALE2fRQBSjKErCYKpYf8qf7M4wAa5rsks5s0MOggaJpZM4QSEjr&userId=1611542&signature=301b563a8b741aca>\n> .\n>\n\n\n\n-- \n\nOffice:  623-556-8949\nCell:     602-369-5049\n\n\n--- NOTICE ---\n\n\nThis message is for the designated recipient only and may contain\nconfidential, privileged or proprietary information.  If you have received\nit in error, please notify the sender immediately and delete the original\nand any copy or printout.  Unintended recipients are prohibited from making\nany other use of this e-mail.  Although we have taken reasonable\nprecautions to ensure no viruses are present in this e-mail, we accept no\nliability for any loss or damage arising from the use of this e-mail or\nattachments, or for any delay or errors or omissions in the contents which\nresult from e-mail transmission.\n. Thanks for the reply, Kevin,\n\nMy file is 6 Meg!!!\n\nOn Thu, Nov 16, 2017 at 1:12 PM, Kevin Kinsey <notifications@github.com>\nwrote:\n\n> Hi lwoods. I've successfully written Excel files in excess of 1GB with\n> PHPExcel on FreeBSD; I set PHP's \"max_execution_time\" high (I used 86400\n> [one hour]) in the script and memory_limit=1024M in PHP.ini.\n>\n> In PHPExcel, we use PHPExcel_CachedObjectStorageFactory::cache_to_discISAM,\n> per the docs.\n>\n> I have had trouble with a TWO GB file though ;-)\n>\n> Hope this helps ....\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://mailtrack.io/trace/link/ed1a71a1c3d47c42736bea48de7ca7099e8421f1?url=https%3A%2F%2Fgithub.com%2FPHPOffice%2FPHPExcel%2Fissues%2F1344%23issuecomment-345048447&userId=1611542&signature=d8c04235c41bd80d>,\n> or mute the thread\n> <https://mailtrack.io/trace/link/3a8d7eb22397d65ffd49804162a1380c1f1d3482?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAALE2UwVZOOGwdwFGQwabRyjygrHCoL6ks5s3JdBgaJpZM4QSEjr&userId=1611542&signature=5cbd189d5e35ce05>\n> .\n>\n\n\n\n-- \n\nOffice:  623-556-8949\nCell:     602-369-5049\n\n\n--- NOTICE ---\n\n\nThis message is for the designated recipient only and may contain\nconfidential, privileged or proprietary information.  If you have received\nit in error, please notify the sender immediately and delete the original\nand any copy or printout.  Unintended recipients are prohibited from making\nany other use of this e-mail.  Although we have taken reasonable\nprecautions to ensure no viruses are present in this e-mail, we accept no\nliability for any loss or damage arising from the use of this e-mail or\nattachments, or for any delay or errors or omissions in the contents which\nresult from e-mail transmission.\n. I guess I was trying to be lazy.  I used to tear about Access databases at\nthe hex level so I guess ripping up an Excel spreadsheet will not be much\nharder.  Here I go!\n\nOn Thu, Nov 16, 2017 at 1:12 PM, Kevin Kinsey <notifications@github.com>\nwrote:\n\n> Hi lwoods. I've successfully written Excel files in excess of 1GB with\n> PHPExcel on FreeBSD; I set PHP's \"max_execution_time\" high (I used 86400\n> [one hour]) in the script and memory_limit=1024M in PHP.ini.\n>\n> In PHPExcel, we use PHPExcel_CachedObjectStorageFactory::cache_to_discISAM,\n> per the docs.\n>\n> I have had trouble with a TWO GB file though ;-)\n>\n> Hope this helps ....\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://mailtrack.io/trace/link/2e2e414c28f656ef98d6cc41c20cfb76bf2b3356?url=https%3A%2F%2Fgithub.com%2FPHPOffice%2FPHPExcel%2Fissues%2F1344%23issuecomment-345048447&userId=1611542&signature=8ba5d1adc439a4b4>,\n> or mute the thread\n> <https://mailtrack.io/trace/link/58eecc57d79177b210be3ae8eb802c7d4e700faf?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAALE2UwVZOOGwdwFGQwabRyjygrHCoL6ks5s3JdBgaJpZM4QSEjr&userId=1611542&signature=0266f40f267ee5e6>\n> .\n>\n\n\n\n-- \n\nOffice:  623-556-8949\nCell:     602-369-5049\n\n\n--- NOTICE ---\n\n\nThis message is for the designated recipient only and may contain\nconfidential, privileged or proprietary information.  If you have received\nit in error, please notify the sender immediately and delete the original\nand any copy or printout.  Unintended recipients are prohibited from making\nany other use of this e-mail.  Although we have taken reasonable\nprecautions to ensure no viruses are present in this e-mail, we accept no\nliability for any loss or damage arising from the use of this e-mail or\nattachments, or for any delay or errors or omissions in the contents which\nresult from e-mail transmission.\n. ",
    "lcollong": "Ok. Thanks. However phpSpreadSheet seems to not be ready for a production site ? Currently only using reader features.. Ok. Thanks. However phpSpreadSheet seems to not be ready for a production site ? Currently only using reader features.. ",
    "andyspb2017": "any suggestions?. any suggestions?. ",
    "LukasGI": "I have finally managed to solve this problem, although it is rather \"hack\" than a proper solution. \r\n\r\nFirst of all, a had to comment out these lince in method `PHPExcel_Shared_File::realpath`:\r\n`/*if (file_exists($pFilename)) {\r\n\t\t\t$returnValue = realpath($pFilename);\r\n}*/`\r\n\r\nNext, I had to adjust the result of the method `PHPExcel_Reader_Excel2007::_getFromZipArchive`:\r\n`$contents = str_replace('x:', '', $contents);`\r\n\r\nNow, if someone could please look into this and propose a real solution to this problem.. I have finally managed to solve this problem, although it is rather \"hack\" than a proper solution. \r\n\r\nFirst of all, a had to comment out these lince in method `PHPExcel_Shared_File::realpath`:\r\n`/*if (file_exists($pFilename)) {\r\n\t\t\t$returnValue = realpath($pFilename);\r\n}*/`\r\n\r\nNext, I had to adjust the result of the method `PHPExcel_Reader_Excel2007::_getFromZipArchive`:\r\n`$contents = str_replace('x:', '', $contents);`\r\n\r\nNow, if someone could please look into this and propose a real solution to this problem.. "
}