{
    "johannilsson": "Great job! This looks awesome. Now we just need to port smoothScrollBy :)\n. When reaching the top it should bounce back. That's a bug.\n\nSecond issue I'm not sure, I do think that's expected at least that is how the Twitter implementation works which is our current reference.\n. @mattg1981, @MantaMay Thank you, seems like SCROLL_STATE_FLING solves the problem with the view being visible. Will wrap it up during the weekend.\n\n@MantaMay I've done some test with TouchEvent to simulate a smooth scroll, but never got it to behave as good as I wanted so I gave up and just used scrollBy if smoothScrollBy does not exist. Think it works fairly good but smooth scroll would be preferred though.\n. Hide the pull to fresh label in a fling, its now only visible when pulling the list down. Thank you mattg1981 and MantaMay for this. Closed by f69140d6ae9b69678c63b32735e85e8730e97992.\n. Thank you!\n. I've seen this too, I thought that it should work out of the box with the fallback to scrollBy but it looks like it didn't. I added the scrollListBy method to be able to support lower versions than 2.2 and that intention is definitely still there, but current support is only for 2.2 though. \n. Oh that explains the strange behaviour thanks for the clarification. Will experiment with setSelection as soon as I find the time. I'll open this issue again so we have an issue to track this with.\n. Closed by e06ad15a275ed8827237ef2106a68e8fd42b5277\n. Wow, this works great!\n\nI will soon push this, I've made a small change though. I've moved the drawables back to drawables-hdpi for the library project, but added them to drawables folder in the example project. Because of the small percentage of 1.5 I don't think it worth to support 1.5 direct from the library. Instead 1.5 users need to move the drawables them self to the drawable folder for their projects.\n\nThank you again, I know this will be very appreciated by many users.\n. No problem, this was a very welcomed contribution.\n\nIt looks like the top padding is not longer divided with two any more, this was there to simulate a more resistant drag, that might be one of the glitches you're experienced?\n. Hi, just tried to apply this patch but I didn't managed to get it work. You don't happen to still have it around? A bit hard to see what's going on when githubs removes some of the tags.\n. Thanks for the report! I had the image replaced and added versions for mdpi and ldpi, could be that the old image had a padding included. I quickly fixed it for now by used adding a arbitrary value, guess we can tweak that until we're satisfied.\n. Thank you. I haven't though of doing it that way, will start to experiment with this as soon as I can. Until then I believe we can check the state much earlier so we don't go into the reflection parts if we're don't need too.\n\nI haven't experienced that it causes lag on any of the devices I've tested it on yet, but the amount of devices out there and that there might be better alternatives is definitely an argument to investigate this further.\n. Merged and pushed from a train with bad wifi. Thank you!\n. This is being worked on in #40.\n. Make sure that it's setup as a [library project](http://developer.android.com/guide/developing/projects/projects-eclipse.html#SettingUpLibraryProject), if you're using Eclipse you might need to do clean on both the example project and the library project.\n. Happy to hear, you're right the `+` is not needed for lists.\n. Hi, this is being worked on in #11.\n. Thank you, will fix as soon as possible.\n. Hi, sorry for not commenting on this earlier. I have no plans to add support for `ExpandableListView` at the moment.\n. Thank you for the report. This is strange, I can clearly see it now when you mentioned it but haven't seen it before though.\n. Fixed in #18, thank you.\n. Better late than never I guess, now merged. Thank you!\n. Hi, thank you for the report.\n\nFrom the exception it looks like it origins from Androids internal and is not related to the pull to refresh view. I've seen some strange behavior with the list view on honeycomb before, but I'm not sure if they have change something or if we're doing it wrong. I don't have any Honeycomb device so please tell if you find out what is causing it.\n. Please re-open if this is still an issue.\n. Sorry for commenting on this earlier. I can reproduce the error, however this seems to be a problem with the list view in general and not actually related to the pull to refresh widget even if it manifest it self quite bad here. I plan to rewrite some parts of how the header is added which will remove the need for a \"tap to refresh\" view. I'm sorry but I will not fix this issue now, but if you like you can patch it yourself by calling `scrollListBy(1, 0);` from setAdapter and `onAttachedToWindow`.\n. Good catch, thank you.\n. Thank you for the report. I hope this fixes the problem.\n. Hi, thank you for this pull request. It seems like the indentation has changed which makes it quite hard to see what has changed and a lot harder to merge, would you mind opening a new pull request with changed indentation (4 spaces)?\n\nI'm not sure about having the vibrate thing implemented in this widget, I would rather see this being handled in a callback and be left to the implementer to decide if one want to vibrate, play a sound or whatever.\n. Thank you for the report. I'll be going away on vacation a couple of weeks, if you come up with an solution during that time please send a pull request. Sorry for not being able to look at this right away.\n. Thank you. What we need to do is to implement the pull functionality when there's no or just a few items in the list. This is why we need the tap functionality today. This is doable but requires a little more work.\n. Don't get me wrong I would also like to get rid of the tap to refresh but by removing it this way it removes the functionality to refresh the list completely. There's [another pull request](https://github.com/johannilsson/android-pulltorefresh/pull/11) that attempts to fix this problem. Maybe you can try that branch and see how that works for you? I would also like to do some experiments by adding extra space at the bottom to fill up the whole screen to trick the regular pull to refresh to kick in.\n. There used to be a `scrollListBy` that used `smoothScrollBy` if available but has been [removed](https://github.com/johannilsson/android-pulltorefresh/commit/17e1db9e9e5c8ba4c12d1924834502b67a060fa8) since I think `setSelection` works just as good which is also called within the method `resetHeader` so the tap to refresh mode should go away if there's enough items in the list. But there's more work to it if we want to completely remove this mode.\n. That's true we can probably target api level 8 or greater soon, but I don't see how `smoothScroll*` is better to use here than `setSelection` does it behave differently except from the smooth part?\n. It's still to early to target 2.2. Here in Sweden my statistics for my apps tells me that it still quite a lot that is below this level (more than googles stats tells) so I don't want to drop it either.\n. No news yet. I guess what we can do is to give an option to disable the \"tap to refresh\" for now. Then we can implement this properly later on. So what I would like to see is an attribute added to layout and a method on the `PullToFreshListView` which can disable \"tap to refresh\", I don't want it to be completely removed.\n. There's a new pull request for this in #40. Please comment on how it works and test it if you like.\n. Thank you for the report. This is strange, it's using `setSelection` internally to hide the header. Will investigate.\n. I did notice that calling `setSelection` within `onCreate` had no effect even though this works fine using the standardl `ListView`. But this works fine in the example app;\n\n```\n@Override\nprotected void onListItemClick(ListView l, View v, int position, long id) {\n    super.onListItemClick(l, v, position, id);\n    setSelection(5);\n}\n```\n\nIf i remove the method `onAttachedToWindow` in `PullToRefreshListView` the call from `onCreate` works as expected. I can't remember why I needed to override `onAttachedToWindow` now though. But please test by removing that and if nothing else breaks or anyone else have any problem with removing that method I'm happy to do it.\n. Ah that's why we needed it. Well then I don't want to remove it until that problem is solved. If you want to play around with it you can experiment by calling `setSelection(1)` from other places internally in the widget.\n. Hi. Could it be that you're trying to comple with Java 5 instead of Java 6? Seems like it's complains on some interfaces, annotations on interface was introduced in Java 6 if I recall correct.\n. Sweet, glad I could help.\n. I don't have access to this device. Any help to fix this issue is very appreciated.\n. There's a draft implementation of this in the short list branch. Thank.\n. Hi, I haven't had time to read up much on Fragments. What would be the benefits to use fragments here? Sorry if it's obvious but I guess it would get me started faster if I can get the big picture direct. \n. Thank you Jake, will look into it and see if there's a point wrapping it, just don't want to end up wrapping it and maintaining something that's not really a part of this project.\n\nHowever reading the [docs for `ListFragment`](http://developer.android.com/reference/android/app/ListFragment.html) there's seems to be an example on how to provide your own layout. It might work to just provide a layout with the `PullToRefreshListView` since it's compatible with `ListView`.\n. Thanks for the heads up it seems like you have to use `@id/android:list` when using a custom layout. Have you or someone else done a write up of the problems using this ID with `ListFragment`?\n. Thank you for the update. Would you mind setting up the needed fixes in a pull request and I would be happy to merge it.\n. Thank you, good catch.\n. Hi,thank you! The current implementation depends on`ListView` so I'm afraid this is not possible or planned at this moment.\n. Hi @amokrane there's a recently released [library](https://github.com/chrisbanes/Android-PullToRefresh/) that has support for `GridView`S, you might want to give that a try. Haven't looked at the source code (that much) for that project yet, but it might be possible to port that into this library as well.\n. Pull request welcomed though :)\n. I've only seen this on a Samsung (if I recall correct) device that had bouncing list implemented everywhere. I can't reproduce this on any of my other devices and I currently don't own a Samsung device. So any help with fixing this issue is very appreciated.\n. Great work @chrisbanes, I'm closing this issue.\n. Hi, thank you for the report. It's hard to tell from the crash why this occurs. Can you provide an example app that triggers this or a description of how to trigger it in the example app?\n. Closing this for now.\n. @AllenCoder Thanks for the report, this library is deprecated though so keeping this as closed. I would suggest you to migrate to one of the alternative libraries listed in the readme instead.\n. Great finding. Would you like to send a pull request with the change or would you like me to just patch it?\n. If it's enough to use `getHistorySize` I guess we can skip the reflection part as well. Need to investigate that further. \n. Hi, thank you for the report. I don't have access to any tablet I'm afraid, and the emulator is terrible slow. Can you reproduce the crash in the example app too?\n. Thank you, this looks related to #37. Could you try the patch that's posted on that issue and see how that works for you?\n. Closed with bef2a2ad0e14f544fd12043f21b6c76853ba08a9\n. Thank you. This looks good will test and merge it later this week.\n. Awesome, merged now. Thank you.\n. Awesome, did some modifications in c64b4e29b044c9148808e4a55fbae99fce583703\n\nCurrently in the [scrollfix_for_short_list](https://github.com/johannilsson/android-pulltorefresh/tree/scrollfix_for_short_list) branch.\n. Hi, thank you for the report. Sorry for being lazy here but can this be reproduced in the example app as well?\n\nYou could also try the [scrollfix_for_short_list](https://github.com/johannilsson/android-pulltorefresh/tree/scrollfix_for_short_list) which initializes itself a little bit different.\n. Thank you for testing, will have a look at it and see if we can remove `onAttachedToWindow`.\n. @since2006 you're right that should be there, good catch.\n. Hi, could you try the [scrollfix_for_short_list](https://github.com/johannilsson/android-pulltorefresh/tree/scrollfix_for_short_list) branch, I believe this was fixed in that branch too.\n. Ah, when scrolling fast I can reproduce it too. \n. Hi, sorry for the late reply to this. Just had a test at it looks good. Will need to change the code style to adapt to previous style though but that's a minor. Would have preferred to have upgrade of sdk and adt in separate commits but it's def fine for now.\n\nWhen there's very few items the `OnEndOfListListener` is triggered for every interaction with the list, like adding and removing items. Guess this is what's expected and up to the client to handle the event that's triggered.\n\nThank you, will merge later on today.\n. It's intended to be used with an `ListActivity` which would allow you to use `(PullToRefreshListView) getListView()` on 3.x as well I believe.\n. Hmm, can you reproduce this in the example app as well? Is it that you're using it with a `ListFragment` then this post might be helpful, https://github.com/johannilsson/android-pulltorefresh/issues/30#issuecomment-3284246\n. Closing this for now.\n. Are you testing the example project, is the library referenced correct and on which device and Android version is this on?\n. Have you changed the XML to reference the new package name as well? I've noticed that you renamed the package so I just want to be sure.\n. The sample works fine here from 1.6 to 4.0+. Since you've changed the package there might be something else you've missed to change. Not sure how you've set up the project but from the screenshot it looks like the library isn't linked correctly as a library project.\n. Well I have the same code running fine here, might be an issue with the environment? Tried with the latest Eclipse plugin? Here's a shot of my project setup in Eclipse, http://oi43.tinypic.com/otg7l0.jpg.\n. Awesome! For the package name, it has always been com.markupartist. Maybe you based your initial work on a fork that changed the package? Closing this ticket now.\n. You probably using Java 1.5, try with 1.6 instead.\n. Sweet! That sounds awesome - haven't seen Mono for Android before, please let us know how the progress goes.\n. Tack tack :)\n. Hi, I'm not merging this since I don't use maven myself and want to avoid extra maintenance work. Sorry.\n. Sweet thanks. Sorry for the late response to this.\n. It will stop when onRefreshComplete is called.\n. Hi, I believe #53 solved the issue.\n. This is not a bug, this is by design. There's a separate [branch](https://github.com/johannilsson/android-pulltorefresh/tree/scrollfix_for_short_list) which aims to implement an alternative approach that removes the Tap to refresh view. @chrisbanes also have a more [updated version](https://github.com/chrisbanes/Android-PullToRefresh) of an Pull to Refresh implementation that might be a better fit for your project.\n. Link to the none deprecated version, https://github.com/chrisbanes/ActionBar-PullToRefresh\n. Hey, you should be able to style the various elements using standard styles.\n. Maybe this [SO question](http://stackoverflow.com/questions/7858860/android-change-font-type-of-application) could help.\n. You need to modify the related `TextView`s manually to get this to run.\n. Thank you! This makes sense, cheers!\n. Hi thanks for the report. Do you have a fix for this running in a fork? Would love to see a pull request for this.\n. Hi @kalvish21, I don't plan to add it as it is now. However I would accept any pull request that implements this behaviour. I believe @chrisbanes version do support this though, https://github.com/chrisbanes/ActionBar-PullToRefresh.\n. I believe this is by design since it is using a header view which will take up one position in the list. I believe your best option is to provide your own ids of the list that you feed through your adapter instead.\n. Thanks @keverets, great work!\n\n@ru-alxr would you like to send a PR with the russian translations?\n. I see, you need to fork the repository first.\n\nFrom github.com there's an fork button on the top right corner, next to star and watch. When you hit that button a copy of the current source/repo will be copied to a new repository to your account. This is the library you clone, commit and push your changes to. When that is done you can create a pull request. GitHub will automatically suggest this to you if you visit the repository through a browser. When that is done I can merge the changes into this repo.\n\nI can do the changes if you want, but it's always fun to get a pull request accepted on a project :)\n. Thank you! :+1: \n. Hi @lugenvn, thanks for the report. I'm closing this issue since it seems like it's related to @chrisbanes project rather than this implementation.\n. Cheers!\n. :+1: \n. :+1: Thanks!\n. I'm happy to add the resources but I don't want a method for a specific theme, e.g. the setLightArrow. I think it is better to extend the class and handle this yourself. Maybe refactor your setLightArrow into a setArrow or similar to allow easier overriding and configuration?\n. This looks good, can't test it at the moment. Will review properly the next days. Cheers!\n. Thanks for your comment, is this related to #88?\n. This is by design, there's an alternative implementation that @chrisbanes have done that you can get from here, https://github.com/chrisbanes/ActionBar-PullToRefresh/\n\nThanks for the report.\n. This is by design, it should show a tap to refresh otherwise.\n. Hi, I would suggest to migrate over to the SwipeRefreshLayout that's available in the support library for doing pull to refresh.\n. Hi thanks,\n\nI think this would be best handled by extending the widget or calling prepare & onRefresh direct rather than having it as an implementation within it. The `addHeaderView` is only supposed to be added once which is within the init method and should not be needed iirc.\n. Hi @leafseelight this library is over 6 years old and is not maintained anymore, a modern approach to this pattern is instead available in the Android support libraries.. Great job! This looks awesome. Now we just need to port smoothScrollBy :)\n. When reaching the top it should bounce back. That's a bug.\n\nSecond issue I'm not sure, I do think that's expected at least that is how the Twitter implementation works which is our current reference.\n. @mattg1981, @MantaMay Thank you, seems like SCROLL_STATE_FLING solves the problem with the view being visible. Will wrap it up during the weekend.\n\n@MantaMay I've done some test with TouchEvent to simulate a smooth scroll, but never got it to behave as good as I wanted so I gave up and just used scrollBy if smoothScrollBy does not exist. Think it works fairly good but smooth scroll would be preferred though.\n. Hide the pull to fresh label in a fling, its now only visible when pulling the list down. Thank you mattg1981 and MantaMay for this. Closed by f69140d6ae9b69678c63b32735e85e8730e97992.\n. Thank you!\n. I've seen this too, I thought that it should work out of the box with the fallback to scrollBy but it looks like it didn't. I added the scrollListBy method to be able to support lower versions than 2.2 and that intention is definitely still there, but current support is only for 2.2 though. \n. Oh that explains the strange behaviour thanks for the clarification. Will experiment with setSelection as soon as I find the time. I'll open this issue again so we have an issue to track this with.\n. Closed by e06ad15a275ed8827237ef2106a68e8fd42b5277\n. Wow, this works great!\n\nI will soon push this, I've made a small change though. I've moved the drawables back to drawables-hdpi for the library project, but added them to drawables folder in the example project. Because of the small percentage of 1.5 I don't think it worth to support 1.5 direct from the library. Instead 1.5 users need to move the drawables them self to the drawable folder for their projects.\n\nThank you again, I know this will be very appreciated by many users.\n. No problem, this was a very welcomed contribution.\n\nIt looks like the top padding is not longer divided with two any more, this was there to simulate a more resistant drag, that might be one of the glitches you're experienced?\n. Hi, just tried to apply this patch but I didn't managed to get it work. You don't happen to still have it around? A bit hard to see what's going on when githubs removes some of the tags.\n. Thanks for the report! I had the image replaced and added versions for mdpi and ldpi, could be that the old image had a padding included. I quickly fixed it for now by used adding a arbitrary value, guess we can tweak that until we're satisfied.\n. Thank you. I haven't though of doing it that way, will start to experiment with this as soon as I can. Until then I believe we can check the state much earlier so we don't go into the reflection parts if we're don't need too.\n\nI haven't experienced that it causes lag on any of the devices I've tested it on yet, but the amount of devices out there and that there might be better alternatives is definitely an argument to investigate this further.\n. Merged and pushed from a train with bad wifi. Thank you!\n. This is being worked on in #40.\n. Make sure that it's setup as a [library project](http://developer.android.com/guide/developing/projects/projects-eclipse.html#SettingUpLibraryProject), if you're using Eclipse you might need to do clean on both the example project and the library project.\n. Happy to hear, you're right the `+` is not needed for lists.\n. Hi, this is being worked on in #11.\n. Thank you, will fix as soon as possible.\n. Hi, sorry for not commenting on this earlier. I have no plans to add support for `ExpandableListView` at the moment.\n. Thank you for the report. This is strange, I can clearly see it now when you mentioned it but haven't seen it before though.\n. Fixed in #18, thank you.\n. Better late than never I guess, now merged. Thank you!\n. Hi, thank you for the report.\n\nFrom the exception it looks like it origins from Androids internal and is not related to the pull to refresh view. I've seen some strange behavior with the list view on honeycomb before, but I'm not sure if they have change something or if we're doing it wrong. I don't have any Honeycomb device so please tell if you find out what is causing it.\n. Please re-open if this is still an issue.\n. Sorry for commenting on this earlier. I can reproduce the error, however this seems to be a problem with the list view in general and not actually related to the pull to refresh widget even if it manifest it self quite bad here. I plan to rewrite some parts of how the header is added which will remove the need for a \"tap to refresh\" view. I'm sorry but I will not fix this issue now, but if you like you can patch it yourself by calling `scrollListBy(1, 0);` from setAdapter and `onAttachedToWindow`.\n. Good catch, thank you.\n. Thank you for the report. I hope this fixes the problem.\n. Hi, thank you for this pull request. It seems like the indentation has changed which makes it quite hard to see what has changed and a lot harder to merge, would you mind opening a new pull request with changed indentation (4 spaces)?\n\nI'm not sure about having the vibrate thing implemented in this widget, I would rather see this being handled in a callback and be left to the implementer to decide if one want to vibrate, play a sound or whatever.\n. Thank you for the report. I'll be going away on vacation a couple of weeks, if you come up with an solution during that time please send a pull request. Sorry for not being able to look at this right away.\n. Thank you. What we need to do is to implement the pull functionality when there's no or just a few items in the list. This is why we need the tap functionality today. This is doable but requires a little more work.\n. Don't get me wrong I would also like to get rid of the tap to refresh but by removing it this way it removes the functionality to refresh the list completely. There's [another pull request](https://github.com/johannilsson/android-pulltorefresh/pull/11) that attempts to fix this problem. Maybe you can try that branch and see how that works for you? I would also like to do some experiments by adding extra space at the bottom to fill up the whole screen to trick the regular pull to refresh to kick in.\n. There used to be a `scrollListBy` that used `smoothScrollBy` if available but has been [removed](https://github.com/johannilsson/android-pulltorefresh/commit/17e1db9e9e5c8ba4c12d1924834502b67a060fa8) since I think `setSelection` works just as good which is also called within the method `resetHeader` so the tap to refresh mode should go away if there's enough items in the list. But there's more work to it if we want to completely remove this mode.\n. That's true we can probably target api level 8 or greater soon, but I don't see how `smoothScroll*` is better to use here than `setSelection` does it behave differently except from the smooth part?\n. It's still to early to target 2.2. Here in Sweden my statistics for my apps tells me that it still quite a lot that is below this level (more than googles stats tells) so I don't want to drop it either.\n. No news yet. I guess what we can do is to give an option to disable the \"tap to refresh\" for now. Then we can implement this properly later on. So what I would like to see is an attribute added to layout and a method on the `PullToFreshListView` which can disable \"tap to refresh\", I don't want it to be completely removed.\n. There's a new pull request for this in #40. Please comment on how it works and test it if you like.\n. Thank you for the report. This is strange, it's using `setSelection` internally to hide the header. Will investigate.\n. I did notice that calling `setSelection` within `onCreate` had no effect even though this works fine using the standardl `ListView`. But this works fine in the example app;\n\n```\n@Override\nprotected void onListItemClick(ListView l, View v, int position, long id) {\n    super.onListItemClick(l, v, position, id);\n    setSelection(5);\n}\n```\n\nIf i remove the method `onAttachedToWindow` in `PullToRefreshListView` the call from `onCreate` works as expected. I can't remember why I needed to override `onAttachedToWindow` now though. But please test by removing that and if nothing else breaks or anyone else have any problem with removing that method I'm happy to do it.\n. Ah that's why we needed it. Well then I don't want to remove it until that problem is solved. If you want to play around with it you can experiment by calling `setSelection(1)` from other places internally in the widget.\n. Hi. Could it be that you're trying to comple with Java 5 instead of Java 6? Seems like it's complains on some interfaces, annotations on interface was introduced in Java 6 if I recall correct.\n. Sweet, glad I could help.\n. I don't have access to this device. Any help to fix this issue is very appreciated.\n. There's a draft implementation of this in the short list branch. Thank.\n. Hi, I haven't had time to read up much on Fragments. What would be the benefits to use fragments here? Sorry if it's obvious but I guess it would get me started faster if I can get the big picture direct. \n. Thank you Jake, will look into it and see if there's a point wrapping it, just don't want to end up wrapping it and maintaining something that's not really a part of this project.\n\nHowever reading the [docs for `ListFragment`](http://developer.android.com/reference/android/app/ListFragment.html) there's seems to be an example on how to provide your own layout. It might work to just provide a layout with the `PullToRefreshListView` since it's compatible with `ListView`.\n. Thanks for the heads up it seems like you have to use `@id/android:list` when using a custom layout. Have you or someone else done a write up of the problems using this ID with `ListFragment`?\n. Thank you for the update. Would you mind setting up the needed fixes in a pull request and I would be happy to merge it.\n. Thank you, good catch.\n. Hi,thank you! The current implementation depends on`ListView` so I'm afraid this is not possible or planned at this moment.\n. Hi @amokrane there's a recently released [library](https://github.com/chrisbanes/Android-PullToRefresh/) that has support for `GridView`S, you might want to give that a try. Haven't looked at the source code (that much) for that project yet, but it might be possible to port that into this library as well.\n. Pull request welcomed though :)\n. I've only seen this on a Samsung (if I recall correct) device that had bouncing list implemented everywhere. I can't reproduce this on any of my other devices and I currently don't own a Samsung device. So any help with fixing this issue is very appreciated.\n. Great work @chrisbanes, I'm closing this issue.\n. Hi, thank you for the report. It's hard to tell from the crash why this occurs. Can you provide an example app that triggers this or a description of how to trigger it in the example app?\n. Closing this for now.\n. @AllenCoder Thanks for the report, this library is deprecated though so keeping this as closed. I would suggest you to migrate to one of the alternative libraries listed in the readme instead.\n. Great finding. Would you like to send a pull request with the change or would you like me to just patch it?\n. If it's enough to use `getHistorySize` I guess we can skip the reflection part as well. Need to investigate that further. \n. Hi, thank you for the report. I don't have access to any tablet I'm afraid, and the emulator is terrible slow. Can you reproduce the crash in the example app too?\n. Thank you, this looks related to #37. Could you try the patch that's posted on that issue and see how that works for you?\n. Closed with bef2a2ad0e14f544fd12043f21b6c76853ba08a9\n. Thank you. This looks good will test and merge it later this week.\n. Awesome, merged now. Thank you.\n. Awesome, did some modifications in c64b4e29b044c9148808e4a55fbae99fce583703\n\nCurrently in the [scrollfix_for_short_list](https://github.com/johannilsson/android-pulltorefresh/tree/scrollfix_for_short_list) branch.\n. Hi, thank you for the report. Sorry for being lazy here but can this be reproduced in the example app as well?\n\nYou could also try the [scrollfix_for_short_list](https://github.com/johannilsson/android-pulltorefresh/tree/scrollfix_for_short_list) which initializes itself a little bit different.\n. Thank you for testing, will have a look at it and see if we can remove `onAttachedToWindow`.\n. @since2006 you're right that should be there, good catch.\n. Hi, could you try the [scrollfix_for_short_list](https://github.com/johannilsson/android-pulltorefresh/tree/scrollfix_for_short_list) branch, I believe this was fixed in that branch too.\n. Ah, when scrolling fast I can reproduce it too. \n. Hi, sorry for the late reply to this. Just had a test at it looks good. Will need to change the code style to adapt to previous style though but that's a minor. Would have preferred to have upgrade of sdk and adt in separate commits but it's def fine for now.\n\nWhen there's very few items the `OnEndOfListListener` is triggered for every interaction with the list, like adding and removing items. Guess this is what's expected and up to the client to handle the event that's triggered.\n\nThank you, will merge later on today.\n. It's intended to be used with an `ListActivity` which would allow you to use `(PullToRefreshListView) getListView()` on 3.x as well I believe.\n. Hmm, can you reproduce this in the example app as well? Is it that you're using it with a `ListFragment` then this post might be helpful, https://github.com/johannilsson/android-pulltorefresh/issues/30#issuecomment-3284246\n. Closing this for now.\n. Are you testing the example project, is the library referenced correct and on which device and Android version is this on?\n. Have you changed the XML to reference the new package name as well? I've noticed that you renamed the package so I just want to be sure.\n. The sample works fine here from 1.6 to 4.0+. Since you've changed the package there might be something else you've missed to change. Not sure how you've set up the project but from the screenshot it looks like the library isn't linked correctly as a library project.\n. Well I have the same code running fine here, might be an issue with the environment? Tried with the latest Eclipse plugin? Here's a shot of my project setup in Eclipse, http://oi43.tinypic.com/otg7l0.jpg.\n. Awesome! For the package name, it has always been com.markupartist. Maybe you based your initial work on a fork that changed the package? Closing this ticket now.\n. You probably using Java 1.5, try with 1.6 instead.\n. Sweet! That sounds awesome - haven't seen Mono for Android before, please let us know how the progress goes.\n. Tack tack :)\n. Hi, I'm not merging this since I don't use maven myself and want to avoid extra maintenance work. Sorry.\n. Sweet thanks. Sorry for the late response to this.\n. It will stop when onRefreshComplete is called.\n. Hi, I believe #53 solved the issue.\n. This is not a bug, this is by design. There's a separate [branch](https://github.com/johannilsson/android-pulltorefresh/tree/scrollfix_for_short_list) which aims to implement an alternative approach that removes the Tap to refresh view. @chrisbanes also have a more [updated version](https://github.com/chrisbanes/Android-PullToRefresh) of an Pull to Refresh implementation that might be a better fit for your project.\n. Link to the none deprecated version, https://github.com/chrisbanes/ActionBar-PullToRefresh\n. Hey, you should be able to style the various elements using standard styles.\n. Maybe this [SO question](http://stackoverflow.com/questions/7858860/android-change-font-type-of-application) could help.\n. You need to modify the related `TextView`s manually to get this to run.\n. Thank you! This makes sense, cheers!\n. Hi thanks for the report. Do you have a fix for this running in a fork? Would love to see a pull request for this.\n. Hi @kalvish21, I don't plan to add it as it is now. However I would accept any pull request that implements this behaviour. I believe @chrisbanes version do support this though, https://github.com/chrisbanes/ActionBar-PullToRefresh.\n. I believe this is by design since it is using a header view which will take up one position in the list. I believe your best option is to provide your own ids of the list that you feed through your adapter instead.\n. Thanks @keverets, great work!\n\n@ru-alxr would you like to send a PR with the russian translations?\n. I see, you need to fork the repository first.\n\nFrom github.com there's an fork button on the top right corner, next to star and watch. When you hit that button a copy of the current source/repo will be copied to a new repository to your account. This is the library you clone, commit and push your changes to. When that is done you can create a pull request. GitHub will automatically suggest this to you if you visit the repository through a browser. When that is done I can merge the changes into this repo.\n\nI can do the changes if you want, but it's always fun to get a pull request accepted on a project :)\n. Thank you! :+1: \n. Hi @lugenvn, thanks for the report. I'm closing this issue since it seems like it's related to @chrisbanes project rather than this implementation.\n. Cheers!\n. :+1: \n. :+1: Thanks!\n. I'm happy to add the resources but I don't want a method for a specific theme, e.g. the setLightArrow. I think it is better to extend the class and handle this yourself. Maybe refactor your setLightArrow into a setArrow or similar to allow easier overriding and configuration?\n. This looks good, can't test it at the moment. Will review properly the next days. Cheers!\n. Thanks for your comment, is this related to #88?\n. This is by design, there's an alternative implementation that @chrisbanes have done that you can get from here, https://github.com/chrisbanes/ActionBar-PullToRefresh/\n\nThanks for the report.\n. This is by design, it should show a tap to refresh otherwise.\n. Hi, I would suggest to migrate over to the SwipeRefreshLayout that's available in the support library for doing pull to refresh.\n. Hi thanks,\n\nI think this would be best handled by extending the widget or calling prepare & onRefresh direct rather than having it as an implementation within it. The `addHeaderView` is only supposed to be added once which is within the init method and should not be needed iirc.\n. Hi @leafseelight this library is over 6 years old and is not maintained anymore, a modern approach to this pattern is instead available in the Android support libraries.. ",
    "tomoyuki28jp": "I found another issue. If there is only one row in ListView, the refresh view never disappear. Is this expected behavior?\n. I found another issue. If there is only one row in ListView, the refresh view never disappear. Is this expected behavior?\n. ",
    "mattg1981": "Add the following code to onScroll(AbsListView, int, int, int) within PullToRefreshListView.java to fix the issue of the refresh view remaining visibly at the top after a fling scroll:\n\n```\nif ( mCurrentScrollState == SCROLL_STATE_TOUCH_SCROLL && mRefreshState != REFRESHING )     {\n..\n}\n\n// add this code\n\n    else if ( mCurrentScrollState == SCROLL_STATE_FLING && firstVisibleItem == 0 ) {\n        scrollListTo( mRefreshViewHeight , 1250 );\n    }\n```\n\nEDIT: refined the code a little to take out unneeded statements\n. Instead of editing my previous post, I thought this was worthy of a new one.  To make it feel even more like the Twitter Pull-To-Refresh (ie, on a fling, it is not visible at all when hitting the top, it is only visible when pulling the list down), make these adjustments:\n\n```\nif ( mCurrentScrollState == SCROLL_STATE_TOUCH_SCROLL && mRefreshState != REFRESHING )     {\n    mRefreshView.setVisibility( View.VISIBLE );\n    ...\n}\nelse if ( mCurrentScrollState == SCROLL_STATE_FLING && firstVisibleItem == 0 ) {\n        mRefreshView.setVisibility( View.GONE );\n        scrollListTo( mRefreshViewHeight , 1250 );\n}\n```\n. Add the following code to onScroll(AbsListView, int, int, int) within PullToRefreshListView.java to fix the issue of the refresh view remaining visibly at the top after a fling scroll:\n\n```\nif ( mCurrentScrollState == SCROLL_STATE_TOUCH_SCROLL && mRefreshState != REFRESHING )     {\n..\n}\n\n// add this code\n\n    else if ( mCurrentScrollState == SCROLL_STATE_FLING && firstVisibleItem == 0 ) {\n        scrollListTo( mRefreshViewHeight , 1250 );\n    }\n```\n\nEDIT: refined the code a little to take out unneeded statements\n. Instead of editing my previous post, I thought this was worthy of a new one.  To make it feel even more like the Twitter Pull-To-Refresh (ie, on a fling, it is not visible at all when hitting the top, it is only visible when pulling the list down), make these adjustments:\n\n```\nif ( mCurrentScrollState == SCROLL_STATE_TOUCH_SCROLL && mRefreshState != REFRESHING )     {\n    mRefreshView.setVisibility( View.VISIBLE );\n    ...\n}\nelse if ( mCurrentScrollState == SCROLL_STATE_FLING && firstVisibleItem == 0 ) {\n        mRefreshView.setVisibility( View.GONE );\n        scrollListTo( mRefreshViewHeight , 1250 );\n}\n```\n. ",
    "MantaMay": "You can use the SCROLL_STATE_FLING to detect when a fling has occurred, and set a flag that you reset once SCROLL_STATE_FLING has ended. Place this in the onScroll as a conditional, and you will fix this issue. Also you will probably want to impement the same logic in a onTrackBallEvent and setOnKeyListener to make sure the user only fires this with a scroll rather d-pad or track ball.\n\nTo make this Android 2.1 compatible use setSelection(int) instead of smoothScrollBy. If you still want a smooth scrolling you can take the time to dispatch a TouchEvent, but this can get ugly. Sorry I haven't provided any code, if you have troubles implementing this yourself let me know and I'll finish it and upload the code.\n\nEDIT: whoops, someone beat me to the SCROLL_STATE_FLING, must've missed this, should've refreshed comments before posting.\n. Found the answer ScrollBy and ScrollTo aren't supported in ListViews pre Froyo, you will need to use setSelection(int)... This was confirmed by Romain Guy. This may not be ideal, but it will work... currently the way ScrollBy and ScrollTo work in pre Froyo ListView is that it will shift the entire View, not the items inside the list!!!\n. You can use the SCROLL_STATE_FLING to detect when a fling has occurred, and set a flag that you reset once SCROLL_STATE_FLING has ended. Place this in the onScroll as a conditional, and you will fix this issue. Also you will probably want to impement the same logic in a onTrackBallEvent and setOnKeyListener to make sure the user only fires this with a scroll rather d-pad or track ball.\n\nTo make this Android 2.1 compatible use setSelection(int) instead of smoothScrollBy. If you still want a smooth scrolling you can take the time to dispatch a TouchEvent, but this can get ugly. Sorry I haven't provided any code, if you have troubles implementing this yourself let me know and I'll finish it and upload the code.\n\nEDIT: whoops, someone beat me to the SCROLL_STATE_FLING, must've missed this, should've refreshed comments before posting.\n. Found the answer ScrollBy and ScrollTo aren't supported in ListViews pre Froyo, you will need to use setSelection(int)... This was confirmed by Romain Guy. This may not be ideal, but it will work... currently the way ScrollBy and ScrollTo work in pre Froyo ListView is that it will shift the entire View, not the items inside the list!!!\n. ",
    "chdorner": "Oh, and I also moved the drawables from drawable-hdpi to the drawable folder (for Android 1.5)\n. Thanks for adding the chances and the promotion on Twitter :)\n\nI began implementing it into the WordPress for Android app and discovered some glitched, will check in the next days if those are problems on the PullToRefresh or WordPress side.\n. Oh, and I also moved the drawables from drawable-hdpi to the drawable folder (for Android 1.5)\n. Thanks for adding the chances and the promotion on Twitter :)\n\nI began implementing it into the WordPress for Android app and discovered some glitched, will check in the next days if those are problems on the PullToRefresh or WordPress side.\n. ",
    "jonschmidt": "> Then, when calculations are done, that value is simply subtracted.\n\nJust curious about this implementation. What do you mean by \"when calculations are done\". Since you can't override the getTop method of a view, which is what the listview motion handler uses, you are forced to either implement your own custom touch handling or set your own measured dimensions and request layout everytime?\n. > Then, when calculations are done, that value is simply subtracted.\n\nJust curious about this implementation. What do you mean by \"when calculations are done\". Since you can't override the getTop method of a view, which is what the listview motion handler uses, you are forced to either implement your own custom touch handling or set your own measured dimensions and request layout everytime?\n. ",
    "lbt05": "this case is  issued 2 years ago and never fixed!!! \n. this case is  issued 2 years ago and never fixed!!! \n. ",
    "mathiasconradt": "Thanks, yes got it working now. Some project dependency settings were wrong in IntelliJ. Was a bit confused by the @+id/android:list, instead of (@id/android:list), why there was a + in it, so I first dumped everything into one project. But it seems to work ok anyhow. Closing this one.\n. Thanks, yes got it working now. Some project dependency settings were wrong in IntelliJ. Was a bit confused by the @+id/android:list, instead of (@id/android:list), why there was a + in it, so I first dumped everything into one project. But it seems to work ok anyhow. Closing this one.\n. ",
    "sahib20": "i try all way but it still  give an error. how to resolve this. please give brief example or solution. why it should give error in list fragment.\n. i try all way but it still  give an error. how to resolve this. please give brief example or solution. why it should give error in list fragment.\n. ",
    "heliodor": "You're welcome. Awesome component!\n. You're welcome. Awesome component!\n. ",
    "hades-6": "That's ok. I got it working :)\n. That's ok. I got it working :)\n. ",
    "timbaloney": "Fixed and submitted a pull request.\n\n```\nprivate boolean mBounceHack;\n\n....in onScroll\n\nelse if (mCurrentScrollState == SCROLL_STATE_FLING && firstVisibleItem == 0 && mRefreshState != REFRESHING) {\n    setSelection(1);\n    mBounceHack = true;\n} else if (mBounceHack) {\n    setSelection(1);\n}\n\n\n... in onScrollStateChanged\n\nif (mCurrentScrollState == SCROLL_STATE_IDLE) {\n    mBounceHack = false;\n}\n```\n\nThen, in public void onScrollStateChanged, when the scroll state changes to SCROLL_STATE_IDLE, we turn that mBounceHack flag back to false.\n. Actually. This didn't fix it compeltely. It introduces new bugs. You can't scroll back down until the internal fling has completed because this still thinks we need the hack.\n. No problem, and thanks for the library! I think I fixed the problem with that latest pull request. The first pull request didn't work completely.\n. The list used to bounce after a fling to the top and a slight delay.\n. Fixed and submitted a pull request.\n\n```\nprivate boolean mBounceHack;\n\n....in onScroll\n\nelse if (mCurrentScrollState == SCROLL_STATE_FLING && firstVisibleItem == 0 && mRefreshState != REFRESHING) {\n    setSelection(1);\n    mBounceHack = true;\n} else if (mBounceHack) {\n    setSelection(1);\n}\n\n\n... in onScrollStateChanged\n\nif (mCurrentScrollState == SCROLL_STATE_IDLE) {\n    mBounceHack = false;\n}\n```\n\nThen, in public void onScrollStateChanged, when the scroll state changes to SCROLL_STATE_IDLE, we turn that mBounceHack flag back to false.\n. Actually. This didn't fix it compeltely. It introduces new bugs. You can't scroll back down until the internal fling has completed because this still thinks we need the hack.\n. No problem, and thanks for the library! I think I fixed the problem with that latest pull request. The first pull request didn't work completely.\n. The list used to bounce after a fling to the top and a slight delay.\n. ",
    "flyouting": "you can patch it by calling scrollListBy(1, 0); before setSelection(1); in the method onTouchEvent()\n. you can patch it by calling scrollListBy(1, 0); before setSelection(1); in the method onTouchEvent()\n. ",
    "hunterpp": "Ah, then maybe I can adjust my patch for the small list size case.  I really like my change because it completely gets rid of the tap-to-refresh button in the normal list size case.\n. an alternative: smoothScrollToPosition  is api level 8 \n. http://developer.android.com/resources/dashboard/platform-versions.html   Less than 20% of Android is below 2.2  \n\nThe 80/20 rule dictates this will be fine. \n. Not as far as I can tel, see the twitter app. \n. Ah, then maybe I can adjust my patch for the small list size case.  I really like my change because it completely gets rid of the tap-to-refresh button in the normal list size case.\n. an alternative: smoothScrollToPosition  is api level 8 \n. http://developer.android.com/resources/dashboard/platform-versions.html   Less than 20% of Android is below 2.2  \n\nThe 80/20 rule dictates this will be fine. \n. Not as far as I can tel, see the twitter app. \n. ",
    "frenkel": "smoothScrollBy only works on 2.2 and up...\n. Api level 8 = Android 2.2\n. My customers want their apps to work on 2.1+, so I won't be using this if you target level 8.\n. smoothScrollBy only works on 2.2 and up...\n. Api level 8 = Android 2.2\n. My customers want their apps to work on 2.1+, so I won't be using this if you target level 8.\n. ",
    "jonasbark": "Any news here? It's the only thing that keeps me from using it.\n. Any news here? It's the only thing that keeps me from using it.\n. ",
    "almozavr": "Sorry, I found a similar issue being closed later. \n. Sorry, I found a similar issue being closed later. \n. ",
    "yava555": "I also found this problem, use the latest source code.\n\nwhen you first click list item,\"Tap to refresh\" will be shown.\n\nAndroid 2.3.7\n. I also found this problem, use the latest source code.\n\nwhen you first click list item,\"Tap to refresh\" will be shown.\n\nAndroid 2.3.7\n. ",
    "bostone": "Hey, why this is closed? In my app when I load the list this \"Tap to refresh\" is showing almost constantly. It is shown on the start and after the refresh. Any way to get rid of it? I'm using build johannilsson-android-pulltorefresh-f090768\n. Hey, why this is closed? In my app when I load the list this \"Tap to refresh\" is showing almost constantly. It is shown on the start and after the refresh. Any way to get rid of it? I'm using build johannilsson-android-pulltorefresh-f090768\n. ",
    "avolovoy": "Hm worked for me. Could you try it in the test app ?\n. Hm worked for me. Could you try it in the test app ?\n. ",
    "realjax": "Great! Using it in the onCreate method was also where I ran into problems. I removed the onAttachToWindow method and now everything works  fine. I could see no downsides or other affects from removing the method other then the list starting out with the 'touch to refresh' message being displayed by default. A setSelection(1) in my onCreate solved this. \n\nMany thanks for your quick response!!\n. Great! Using it in the onCreate method was also where I ran into problems. I removed the onAttachToWindow method and now everything works  fine. I could see no downsides or other affects from removing the method other then the list starting out with the 'touch to refresh' message being displayed by default. A setSelection(1) in my onCreate solved this. \n\nMany thanks for your quick response!!\n. ",
    "SlawpLabs": "Hi guys.\nI was having the same problem, and I also managed to fix it with your solution!\nI simply had to remove the setSelection() call in the onAttachedToWindow() (or actually remove the onAttachedToWindow overriding).\n\nThanks guys.\n\nOut of curiosity, do you remember why you called setSelection() in that method in the first place?\n. Hi guys.\nI was having the same problem, and I also managed to fix it with your solution!\nI simply had to remove the setSelection() call in the onAttachedToWindow() (or actually remove the onAttachedToWindow overriding).\n\nThanks guys.\n\nOut of curiosity, do you remember why you called setSelection() in that method in the first place?\n. ",
    "yochiro": "I ran into the same problem, and after investigation I found out the issue, as explained below by Romain Guy https://groups.google.com/forum/?fromgroups=#!topic/android-developers/EnyldBQDUwE\n\nI created a new method : \n\n``` java\nprivate void resetPosition() {\n  this.post(new Runnable() {\n    @Override\n    public void run() {\n      setSelection(1);\n    }\n  }\n}\n```\n\nand replaced all references of `setSelection(1)` to `resetPosition()`\n\nand it worked!\n. I ran into the same problem, and after investigation I found out the issue, as explained below by Romain Guy https://groups.google.com/forum/?fromgroups=#!topic/android-developers/EnyldBQDUwE\n\nI created a new method : \n\n``` java\nprivate void resetPosition() {\n  this.post(new Runnable() {\n    @Override\n    public void run() {\n      setSelection(1);\n    }\n  }\n}\n```\n\nand replaced all references of `setSelection(1)` to `resetPosition()`\n\nand it worked!\n. ",
    "Arthur83": "I have the same problem, anyone here can help me?\n. I have the same problem, anyone here can help me?\n. ",
    "neekers": "It built! I will let you know when I can test this on my dev build later tonight.  Thanks a bunch for the quick response\n. It built! I will let you know when I can test this on my dev build later tonight.  Thanks a bunch for the quick response\n. ",
    "ovy9086": "I would like this to. Any ideas/news?\n. I would like this to. Any ideas/news?\n. ",
    "amiga": "Ive just spent an entire day trying to get rid of this and cant do it - I simply dont want it to appear !! when i drag list down it disappears and all is perfect, so why the hell is it even there in the first place and why cant I even hack this to hide it!? Any ideas.... very frustrated\n. Ive just spent an entire day trying to get rid of this and cant do it - I simply dont want it to appear !! when i drag list down it disappears and all is perfect, so why the hell is it even there in the first place and why cant I even hack this to hide it!? Any ideas.... very frustrated\n. ",
    "dmitriykrivoshey": "did you solve the issue? i have similar problem\n. did you solve the issue? i have similar problem\n. ",
    "tobiasheine": "me too, would be great if anyone could post a solution...\n. me too, would be great if anyone could post a solution...\n. ",
    "mattgapadmi": "Use the scrollfix_for_short_list branch, but if you'll need to apply this patch to it so that scrolling works on Jelly Bean (4.1):\n\nhttps://github.com/johannilsson/android-pulltorefresh/commit/16484755e56aeb5fd06494a88e3e61a4d932a066\n. Use the scrollfix_for_short_list branch, but if you'll need to apply this patch to it so that scrolling works on Jelly Bean (4.1):\n\nhttps://github.com/johannilsson/android-pulltorefresh/commit/16484755e56aeb5fd06494a88e3e61a4d932a066\n. ",
    "Chirag-Shah": " i have similar problem amd worked for a day ,but can't find any solution.\nplease post a solution if anyone have.\n\ni found this: but dont know how to use\n\nhttp://www.joshdale.net/2012/03/01/hiding-pulltorefreshlistview-headers/\n\nplease let me know if anyone can do something.\n.  i have similar problem amd worked for a day ,but can't find any solution.\nplease post a solution if anyone have.\n\ni found this: but dont know how to use\n\nhttp://www.joshdale.net/2012/03/01/hiding-pulltorefreshlistview-headers/\n\nplease let me know if anyone can do something.\n. ",
    "JakeWharton": "`ListFragment` (like `ListActivity`) is just a thin veil around a `ListView` with some helper methods so providing your own pull refresh version is probably outside the scope of this library.\n\nThat's not so say that it wouldn't be useful for an individual making an app. To roll your own, copy the source of `ListFragment` from the compatibility library and replace its `ListView` instantiation with this library. It should be fairly easy.\n. That's true and a good solution for using native Fragments on 3.0+. If you are using the compatibility library a word of caution: make sure you are using the IDs defined in the `ListFragment` class and not `android.R.id.list` or you'll get some wonky errors.\n. `ListFragment` (like `ListActivity`) is just a thin veil around a `ListView` with some helper methods so providing your own pull refresh version is probably outside the scope of this library.\n\nThat's not so say that it wouldn't be useful for an individual making an app. To roll your own, copy the source of `ListFragment` from the compatibility library and replace its `ListView` instantiation with this library. It should be fairly easy.\n. That's true and a good solution for using native Fragments on 3.0+. If you are using the compatibility library a word of caution: make sure you are using the IDs defined in the `ListFragment` class and not `android.R.id.list` or you'll get some wonky errors.\n. ",
    "taterbase": "Hey, I was able to use your library in a fragment using the method described in this post. Thanks for the great lib! http://stackoverflow.com/questions/8648040/how-to-implement-pull-to-refresh-on-a-listfragment\n. Hey, I was able to use your library in a fragment using the method described in this post. Thanks for the great lib! http://stackoverflow.com/questions/8648040/how-to-implement-pull-to-refresh-on-a-listfragment\n. ",
    "ened": "Hi,\n\nIt's not that simple unfortunately.\nListFragment comes with methods to hide/show the list when busy and show a progress indicator while loading.\nThis mechanism requires a custom view hierarchy returned from the 'onCreateView' method. In fact it's a FrameLayout with views for the progress, empty text etc.\n\nThe idea is to override that onCreateView and replace the default ListView with a PullToRefresh ListView.\n\nHere is the code that works now:\n\n``` java\n@Override\npublic View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n    ViewGroup viewGroup = (ViewGroup) super.onCreateView(inflater, container, savedInstanceState);\n\n    View lvOld = viewGroup.findViewById(android.R.id.list);\n\n    final PullToRefreshListView listView = new PullToRefreshListView(getActivity());\n    listView.setId(android.R.id.list);\n    listView.setLayoutParams(new FrameLayout.LayoutParams(\n            ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));\n    listView.setDrawSelectorOnTop(false);\n\n    FrameLayout parent = (FrameLayout) lvOld.getParent();\n\n    parent.removeView(lvOld);\n    lvOld.setVisibility(View.GONE);\n\n    parent.addView(listView, new FrameLayout.LayoutParams(\n            ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));\n\n    return viewGroup;\n}\n```\n\n@johannilsson You could ship with a sample PullToRefreshListFragment that inherits from ListFragment. People could change the import or switch to SherlockListFragment if they want. \n. Or maybe keep it simply as a Gist. :) Understand it's not in the scope of this project.\n. Hi,\n\nIt's not that simple unfortunately.\nListFragment comes with methods to hide/show the list when busy and show a progress indicator while loading.\nThis mechanism requires a custom view hierarchy returned from the 'onCreateView' method. In fact it's a FrameLayout with views for the progress, empty text etc.\n\nThe idea is to override that onCreateView and replace the default ListView with a PullToRefresh ListView.\n\nHere is the code that works now:\n\n``` java\n@Override\npublic View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n    ViewGroup viewGroup = (ViewGroup) super.onCreateView(inflater, container, savedInstanceState);\n\n    View lvOld = viewGroup.findViewById(android.R.id.list);\n\n    final PullToRefreshListView listView = new PullToRefreshListView(getActivity());\n    listView.setId(android.R.id.list);\n    listView.setLayoutParams(new FrameLayout.LayoutParams(\n            ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));\n    listView.setDrawSelectorOnTop(false);\n\n    FrameLayout parent = (FrameLayout) lvOld.getParent();\n\n    parent.removeView(lvOld);\n    lvOld.setVisibility(View.GONE);\n\n    parent.addView(listView, new FrameLayout.LayoutParams(\n            ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));\n\n    return viewGroup;\n}\n```\n\n@johannilsson You could ship with a sample PullToRefreshListFragment that inherits from ListFragment. People could change the import or switch to SherlockListFragment if they want. \n. Or maybe keep it simply as a Gist. :) Understand it's not in the scope of this project.\n. ",
    "kidfolk": "my pleasure.\n. my pleasure.\n. ",
    "Amokrane": "The issue is that the `GridView` widget does not provide any `addHeaderView` method. This is pissing me off, as my app relies heavily on `GridViews`.  Johan, have you thought on any trick that would solve this issue?\n. Thank you so much for showing me this project. I almost added a refresh button to the _actionbar_ in desperation.  \n. I will seriously consider it, thanks :)\n. The issue is that the `GridView` widget does not provide any `addHeaderView` method. This is pissing me off, as my app relies heavily on `GridViews`.  Johan, have you thought on any trick that would solve this issue?\n. Thank you so much for showing me this project. I almost added a refresh button to the _actionbar_ in desperation.  \n. I will seriously consider it, thanks :)\n. ",
    "paradoxxjm": "First, thank you for a great library!\n\nSecondly, I think being able to have pulltorefresh work from the bottom, which I guess makes it pushtorefresh, would be a great development. Keep up the work! \n. First, thank you for a great library!\n\nSecondly, I think being able to have pulltorefresh work from the bottom, which I guess makes it pushtorefresh, would be a great development. Keep up the work! \n. ",
    "chrisbanes": "I recently added this to my Pull to Refresh library: http://www.senab.co.uk/2011/12/23/pull-up-to-refresh/\n. I recently added this to my Pull to Refresh library: http://www.senab.co.uk/2011/12/23/pull-up-to-refresh/\n. ",
    "anticafe": "Thanks man ^^. It looks great ;)\n\nBtw, merry Christmas.\n. Thanks man ^^. It looks great ;)\n\nBtw, merry Christmas.\n. ",
    "dmarcato": "Well I have investigate more and it seems that the problems occurs when i wrap my adapter into an EndlessAdapter from CWAC (https://github.com/commonsguy/cwac-endless) and give it to the PullToRefresh view, so I'm not sure if it's a problem of Endless wrapper or a problem of PullToRefresh.\nI will try to report more info and log...\n. Well I have investigate more and it seems that the problems occurs when i wrap my adapter into an EndlessAdapter from CWAC (https://github.com/commonsguy/cwac-endless) and give it to the PullToRefresh view, so I'm not sure if it's a problem of Endless wrapper or a problem of PullToRefresh.\nI will try to report more info and log...\n. ",
    "AllenCoder": "FATAL EXCEPTION: main\n                                                                      Process: com.juyoulicai.debug, PID: 11699\n                                                                      java.lang.IndexOutOfBoundsException: Invalid index 13, size is 1\n                                                                          at java.util.ArrayList.throwIndexOutOfBoundsException(ArrayList.java:255)\n                                                                          at java.util.ArrayList.get(ArrayList.java:308)\n                                                                          at android.widget.HeaderViewListAdapter.getView(HeaderViewListAdapter.java:237)\n                                                                          at android.widget.AbsListView.obtainView(AbsListView.java:2361)\n                                                                          at android.widget.ListView.makeAndAddView(ListView.java:1868)\n                                                                          at android.widget.ListView.fillDown(ListView.java:702)\n                                                                          at android.widget.ListView.fillGap(ListView.java:666)\n                                                                          at android.widget.AbsListView.trackMotionScroll(AbsListView.java:5063)\n                                                                          at android.widget.AbsListView$FlingRunnable.run(AbsListView.java:4607)\n                                                                          at android.view.Choreographer$CallbackRecord.run(Choreographer.java:793)\n                                                                          at android.view.Choreographer.doCallbacks(Choreographer.java:606)\n                                                                          at android.view.Choreographer.doFrame(Choreographer.java:574)\n                                                                          at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:779)\n                                                                          at android.os.Handler.handleCallback(Handler.java:739)\n                                                                          at android.os.Handler.dispatchMessage(Handler.java:95)\n                                                                          at android.os.Looper.loop(Looper.java:135)\n                                                                          at android.app.ActivityThread.main(ActivityThread.java:5595)\n                                                                          at java.lang.reflect.Method.invoke(Native Method)\n                                                                          at java.lang.reflect.Method.invoke(Method.java:372)\n                                                                          at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:960)\n                                                                          at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:755)\n. FATAL EXCEPTION: main\n                                                                      Process: com.juyoulicai.debug, PID: 11699\n                                                                      java.lang.IndexOutOfBoundsException: Invalid index 13, size is 1\n                                                                          at java.util.ArrayList.throwIndexOutOfBoundsException(ArrayList.java:255)\n                                                                          at java.util.ArrayList.get(ArrayList.java:308)\n                                                                          at android.widget.HeaderViewListAdapter.getView(HeaderViewListAdapter.java:237)\n                                                                          at android.widget.AbsListView.obtainView(AbsListView.java:2361)\n                                                                          at android.widget.ListView.makeAndAddView(ListView.java:1868)\n                                                                          at android.widget.ListView.fillDown(ListView.java:702)\n                                                                          at android.widget.ListView.fillGap(ListView.java:666)\n                                                                          at android.widget.AbsListView.trackMotionScroll(AbsListView.java:5063)\n                                                                          at android.widget.AbsListView$FlingRunnable.run(AbsListView.java:4607)\n                                                                          at android.view.Choreographer$CallbackRecord.run(Choreographer.java:793)\n                                                                          at android.view.Choreographer.doCallbacks(Choreographer.java:606)\n                                                                          at android.view.Choreographer.doFrame(Choreographer.java:574)\n                                                                          at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:779)\n                                                                          at android.os.Handler.handleCallback(Handler.java:739)\n                                                                          at android.os.Handler.dispatchMessage(Handler.java:95)\n                                                                          at android.os.Looper.loop(Looper.java:135)\n                                                                          at android.app.ActivityThread.main(ActivityThread.java:5595)\n                                                                          at java.lang.reflect.Method.invoke(Native Method)\n                                                                          at java.lang.reflect.Method.invoke(Method.java:372)\n                                                                          at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:960)\n                                                                          at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:755)\n. ",
    "quiffman": "FWIW - I wonder if `applyHeaderPadding` should check `getHistorySize` - the following patch appears to solve the issue for me.\n\n```\ndiff --git a/pulltorefresh/src/com/markupartist/android/widget/PullToRefreshListView.java b/pulltorefresh/src/com/markupartist/android/widget/PullToRefreshL\nindex e44db80..5ae52cc 100644\n--- a/pulltorefresh/src/com/markupartist/android/widget/PullToRefreshListView.java\n+++ b/pulltorefresh/src/com/markupartist/android/widget/PullToRefreshListView.java\n@@ -203,7 +203,7 @@ public class PullToRefreshListView extends ListView implements OnScrollListener\n         // (it's always 1 in 1.5)\n         int pointerCount = 1;\n         try {\n-            Method method = MotionEvent.class.getMethod(\"getPointerCount\");\n+            Method method = MotionEvent.class.getMethod(\"getHistorySize\");\n             pointerCount = (Integer)method.invoke(ev);\n         } catch (NoSuchMethodException e) {\n             pointerCount = 1;\n```\n. FWIW - I wonder if `applyHeaderPadding` should check `getHistorySize` - the following patch appears to solve the issue for me.\n\n```\ndiff --git a/pulltorefresh/src/com/markupartist/android/widget/PullToRefreshListView.java b/pulltorefresh/src/com/markupartist/android/widget/PullToRefreshL\nindex e44db80..5ae52cc 100644\n--- a/pulltorefresh/src/com/markupartist/android/widget/PullToRefreshListView.java\n+++ b/pulltorefresh/src/com/markupartist/android/widget/PullToRefreshListView.java\n@@ -203,7 +203,7 @@ public class PullToRefreshListView extends ListView implements OnScrollListener\n         // (it's always 1 in 1.5)\n         int pointerCount = 1;\n         try {\n-            Method method = MotionEvent.class.getMethod(\"getPointerCount\");\n+            Method method = MotionEvent.class.getMethod(\"getHistorySize\");\n             pointerCount = (Integer)method.invoke(ev);\n         } catch (NoSuchMethodException e) {\n             pointerCount = 1;\n```\n. ",
    "MikeBannion": "Goot catch! but do you know if this fix only applies to tablets, or only from a specific Android version up? I just received a report on the market with this error and I'd like to apply the fix, but since my app is available for 1.6 devices as well I don't want to cause a break for other people...\n. Goot catch! but do you know if this fix only applies to tablets, or only from a specific Android version up? I just received a report on the market with this error and I'd like to apply the fix, but since my app is available for 1.6 devices as well I don't want to cause a break for other people...\n. ",
    "baris3437": "Full Exception output :\n\n10-31 14:04:20.730: E/AndroidRuntime(6179): FATAL EXCEPTION: main\n10-31 14:04:20.730: E/AndroidRuntime(6179): java.lang.IllegalArgumentException: historyPos out of range\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.MotionEvent.nativeGetAxisValue(Native Method)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.MotionEvent.getHistoricalY(MotionEvent.java:1828)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at com.markupartist.android.widget.PullToRefreshListView.applyHeaderPadding(PullToRefreshListView.java:224)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at com.markupartist.android.widget.PullToRefreshListView.onTouchEvent(PullToRefreshListView.java:195)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.View.dispatchTouchEvent(View.java:4621)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:1554)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1320)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:1560)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1333)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:1560)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1333)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:1560)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1333)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:1560)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1333)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at com.android.internal.policy.impl.PhoneWindow$DecorView.superDispatchTouchEvent(PhoneWindow.java:1863)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at com.android.internal.policy.impl.PhoneWindow.superDispatchTouchEvent(PhoneWindow.java:1287)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.app.Activity.dispatchTouchEvent(Activity.java:2309)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at com.android.internal.policy.impl.PhoneWindow$DecorView.dispatchTouchEvent(PhoneWindow.java:1836)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.View.dispatchPointerEvent(View.java:4689)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewRoot.deliverPointerEvent(ViewRoot.java:2365)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewRoot.handleMessage(ViewRoot.java:2034)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.os.Handler.dispatchMessage(Handler.java:99)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.os.Looper.loop(Looper.java:132)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.app.ActivityThread.main(ActivityThread.java:4028)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at java.lang.reflect.Method.invokeNative(Native Method)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at java.lang.reflect.Method.invoke(Method.java:491)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:844)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:602)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at dalvik.system.NativeStart.main(Native Method)\n\nSample Project\nhttps://rapidshare.com/files/1926490470/PullToRefreshListViewTest.rar\n. Thanks, this patch fixed the issue..\n. Full Exception output :\n\n10-31 14:04:20.730: E/AndroidRuntime(6179): FATAL EXCEPTION: main\n10-31 14:04:20.730: E/AndroidRuntime(6179): java.lang.IllegalArgumentException: historyPos out of range\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.MotionEvent.nativeGetAxisValue(Native Method)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.MotionEvent.getHistoricalY(MotionEvent.java:1828)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at com.markupartist.android.widget.PullToRefreshListView.applyHeaderPadding(PullToRefreshListView.java:224)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at com.markupartist.android.widget.PullToRefreshListView.onTouchEvent(PullToRefreshListView.java:195)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.View.dispatchTouchEvent(View.java:4621)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:1554)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1320)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:1560)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1333)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:1560)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1333)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:1560)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1333)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:1560)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1333)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at com.android.internal.policy.impl.PhoneWindow$DecorView.superDispatchTouchEvent(PhoneWindow.java:1863)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at com.android.internal.policy.impl.PhoneWindow.superDispatchTouchEvent(PhoneWindow.java:1287)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.app.Activity.dispatchTouchEvent(Activity.java:2309)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at com.android.internal.policy.impl.PhoneWindow$DecorView.dispatchTouchEvent(PhoneWindow.java:1836)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.View.dispatchPointerEvent(View.java:4689)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewRoot.deliverPointerEvent(ViewRoot.java:2365)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.view.ViewRoot.handleMessage(ViewRoot.java:2034)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.os.Handler.dispatchMessage(Handler.java:99)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.os.Looper.loop(Looper.java:132)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at android.app.ActivityThread.main(ActivityThread.java:4028)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at java.lang.reflect.Method.invokeNative(Native Method)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at java.lang.reflect.Method.invoke(Method.java:491)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:844)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:602)\n10-31 14:04:20.730: E/AndroidRuntime(6179):     at dalvik.system.NativeStart.main(Native Method)\n\nSample Project\nhttps://rapidshare.com/files/1926490470/PullToRefreshListViewTest.rar\n. Thanks, this patch fixed the issue..\n. ",
    "asfman": "why \"mRefreshViewHeight - mRefreshOriginalTopPadding\" when calculate the headerview's height? i think  mRefreshViewHeight is the headerview's real height\n. why \"mRefreshViewHeight - mRefreshOriginalTopPadding\" when calculate the headerview's height? i think  mRefreshViewHeight is the headerview's real height\n. ",
    "ToYonos": "Yes, I tried the example app, without any modification, and the bug still appeared.\n\nActually, I don't really know if it's linked to the android version. Anyway, this trick works for me :)\n. And thank you for the lib\n. @since2006 I tried this already and it didn't work at all.\n\nRemoving the overrided method was the only solution for me. (onAttachedToWindow() is still called but from the ListView class)\n. Yes, I tried the example app, without any modification, and the bug still appeared.\n\nActually, I don't really know if it's linked to the android version. Anyway, this trick works for me :)\n. And thank you for the lib\n. @since2006 I tried this already and it didn't work at all.\n\nRemoving the overrided method was the only solution for me. (onAttachedToWindow() is still called but from the ListView class)\n. ",
    "since2006": "try to add a line in onAttachedToWindow:\n\nsuper.onAttachedToWindow();\n\nit's work fine to me with 2.2. :-)\n. try to add a line in onAttachedToWindow:\n\nsuper.onAttachedToWindow();\n\nit's work fine to me with 2.2. :-)\n. ",
    "jkguang": "Thank you.\nBut still have that problem.\nScroll down for some positions, and then Scroll up fast until the first item is visible (Do not show the refreshView).\nThen click any list item, You will find the problem.\nI test in my Moto MB525 (Android 2.3.7)\n. Thank you.\nBut still have that problem.\nScroll down for some positions, and then Scroll up fast until the first item is visible (Do not show the refreshView).\nThen click any list item, You will find the problem.\nI test in my Moto MB525 (Android 2.3.7)\n. ",
    "pathakashish": "Thank you jasonsutor for these changes.\n\nBut I have one issue with this. When the list does not occupy whole screen(consider that list has only 0 or 1 or 2 elements) it constantly shows \"Pull To Refresh...\". Can you tell me how to handle this so that \"Pull To Refresh...\" will only be shown when user pulls the list down?\n. If we set the PullToRefreshListView height to wrap_content, the above mentioned issue occurs.\nWhen I tried setting the height to fill_parent, it worked fine.\n\nThank you jasonsutor for this modifications.\n. Thank you jasonsutor for these changes.\n\nBut I have one issue with this. When the list does not occupy whole screen(consider that list has only 0 or 1 or 2 elements) it constantly shows \"Pull To Refresh...\". Can you tell me how to handle this so that \"Pull To Refresh...\" will only be shown when user pulls the list down?\n. If we set the PullToRefreshListView height to wrap_content, the above mentioned issue occurs.\nWhen I tried setting the height to fill_parent, it worked fine.\n\nThank you jasonsutor for this modifications.\n. ",
    "jasonsutor": "It shouldn't, it only shows the \"Pull To Refresh...\" text when I haven't set the adapter. Once I set the adapter the footer view is adjusted to cover enough to scroll the text off screen. If your adapter views start out defaulted to a large size and then shrink as data is loaded then I can see that messing up the footer view calculation.\n. Are your LayoutParams set for the new list elements? On line 428 (in API 2.2, other versions have no code on that line) of RelativeLayout.java it is checking mLayoutParams.width, it appears that isn't set which causes the null pointer exception\n. What about the list items though? The exception would be due to the item's layoutparams not being set.\n. It shouldn't, it only shows the \"Pull To Refresh...\" text when I haven't set the adapter. Once I set the adapter the footer view is adjusted to cover enough to scroll the text off screen. If your adapter views start out defaulted to a large size and then shrink as data is loaded then I can see that messing up the footer view calculation.\n. Are your LayoutParams set for the new list elements? On line 428 (in API 2.2, other versions have no code on that line) of RelativeLayout.java it is checking mLayoutParams.width, it appears that isn't set which causes the null pointer exception\n. What about the list items though? The exception would be due to the item's layoutparams not being set.\n. ",
    "alexfu": "Hi, I get the following errors when my adapter calls notifyDataSetChanged: http://pastebin.com/hDZJAiJF It seems like there's an issue with measuring the height of all the items in the list view? I'm not sure but that is where the error is pointing to. Any ideas as to how to fix this?\n. Yes, I have the list view fill_parent both width and height.\n. The list items layout width & height are set.. This error only comes up when I am on this branch. Master branch doesn't have this issue. I can show you the XML code for my list items? \n\nIt seems as though it doesn't like RelativeLayout being the child. I switched the list items layout to a LinearLayout and the error is gone.\n. Yes... It is the example project. I am targeting 2.3.3 in the Eclipse project, I have it referencing the library correctly. I also targeted other API levels and that didnt do anything. It works if I change the ID (so that it'll show up when looking it up via R.id) of the PullToRefreshListView and get it via findViewById()\n\nI have a screen shot here: http://i43.tinypic.com/29c86f8.png\n. Yes, package names & references are correct.\n. The pulltorefresh project is setup to be a library project in my setup. I'm not sure what else there needs to be done. I haven't changed the package names in anyway, just the project name, which shouldn't have any effect on the library.\n. I figured out the problem... The original package was named: com.hallmark... but now it has completely changed to com.markupartist.... \n\nWhen did this happen?\n. Hm.. oh well haha. That was my fault.\n. Hi, I get the following errors when my adapter calls notifyDataSetChanged: http://pastebin.com/hDZJAiJF It seems like there's an issue with measuring the height of all the items in the list view? I'm not sure but that is where the error is pointing to. Any ideas as to how to fix this?\n. Yes, I have the list view fill_parent both width and height.\n. The list items layout width & height are set.. This error only comes up when I am on this branch. Master branch doesn't have this issue. I can show you the XML code for my list items? \n\nIt seems as though it doesn't like RelativeLayout being the child. I switched the list items layout to a LinearLayout and the error is gone.\n. Yes... It is the example project. I am targeting 2.3.3 in the Eclipse project, I have it referencing the library correctly. I also targeted other API levels and that didnt do anything. It works if I change the ID (so that it'll show up when looking it up via R.id) of the PullToRefreshListView and get it via findViewById()\n\nI have a screen shot here: http://i43.tinypic.com/29c86f8.png\n. Yes, package names & references are correct.\n. The pulltorefresh project is setup to be a library project in my setup. I'm not sure what else there needs to be done. I haven't changed the package names in anyway, just the project name, which shouldn't have any effect on the library.\n. I figured out the problem... The original package was named: com.hallmark... but now it has completely changed to com.markupartist.... \n\nWhen did this happen?\n. Hm.. oh well haha. That was my fault.\n. ",
    "monsif": "hello everyone, firstofall thank you for this librery it wors fine ;) but i found some trouble when trying to integrate a menu on the top, there is no way to inflate the menu class O_o !! can you hep me with this please . thanks a lot\n. hello everyone, firstofall thank you for this librery it wors fine ;) but i found some trouble when trying to integrate a menu on the top, there is no way to inflate the menu class O_o !! can you hep me with this please . thanks a lot\n. ",
    "kittcoldfire": "but when trying to call that method \"sections_list = (PullToRefreshListView) getListView();\" I get the error \n\n\"java.lang.RuntimeException: Your content must have a ListView whose id attribute is 'android.R.id.list'\"\n\nI changed the XML to have \n\n<com.evolusent.lifestyler2.pulltorefresh.PullToRefreshListView\n                android:id=\"@android:id/list\"\n                android:layout_width=\"fill_parent\"\n                android:layout_height=\"fill_parent\"\n                android:layout_margin=\"0px\"\n                android:layout_below=\"@id/contents_header\"\n                android:scrollbars=\"none\"\n                />\n(this is the way developer.android has specified for declaring the layout)\n\nand it is still not finding it\n. but when trying to call that method \"sections_list = (PullToRefreshListView) getListView();\" I get the error \n\n\"java.lang.RuntimeException: Your content must have a ListView whose id attribute is 'android.R.id.list'\"\n\nI changed the XML to have \n\n<com.evolusent.lifestyler2.pulltorefresh.PullToRefreshListView\n                android:id=\"@android:id/list\"\n                android:layout_width=\"fill_parent\"\n                android:layout_height=\"fill_parent\"\n                android:layout_margin=\"0px\"\n                android:layout_below=\"@id/contents_header\"\n                android:scrollbars=\"none\"\n                />\n(this is the way developer.android has specified for declaring the layout)\n\nand it is still not finding it\n. ",
    "efontana": "That was it, thanks.  BTW: I'm porting this to Mono for Android.\n. I just finished it!\n\n-----Original Message-----\nFrom: Johan Nilsson [mailto:reply@reply.github.com] \nSent: Wednesday, January 04, 2012 4:16 PM\nTo: efontana\nSubject: Re: [android-pulltorefresh] Tried to build with Eclipse, getting errors? (#46)\n\nSweet! That sounds awesome - haven't seen Mono for Android before, please let us know how the progress goes.\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/johannilsson/android-pulltorefresh/issues/46#issuecomment-3361271\n\n---\n\nNo virus found in this message.\nChecked by AVG - www.avg.com\nVersion: 2012.0.1901 / Virus Database: 2109/4722 - Release Date: 01/04/12\n. That was it, thanks.  BTW: I'm porting this to Mono for Android.\n. I just finished it!\n\n-----Original Message-----\nFrom: Johan Nilsson [mailto:reply@reply.github.com] \nSent: Wednesday, January 04, 2012 4:16 PM\nTo: efontana\nSubject: Re: [android-pulltorefresh] Tried to build with Eclipse, getting errors? (#46)\n\nSweet! That sounds awesome - haven't seen Mono for Android before, please let us know how the progress goes.\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/johannilsson/android-pulltorefresh/issues/46#issuecomment-3361271\n\n---\n\nNo virus found in this message.\nChecked by AVG - www.avg.com\nVersion: 2012.0.1901 / Virus Database: 2109/4722 - Release Date: 01/04/12\n. ",
    "mercurymod": "NIR\n. NIR\n. ",
    "code2hackon": "android:layout_marginBottom=\"?attr/actionBarSize\"   add this to viewpager\n. android:layout_marginBottom=\"?attr/actionBarSize\"   add this to viewpager\n. ",
    "jawad-aziz-farhad": "@stubbornish it worked \ud83d\udc4d  Thanks  . @stubbornish it worked \ud83d\udc4d  Thanks  . ",
    "crossle": "How do I manually call onRefresh\uff1f\n. I have used setSelection(1) ,but failed!\n. How do I manually call onRefresh\uff1f\n. I have used setSelection(1) ,but failed!\n. ",
    "Trinea": "no, it,s maybe caused by call adapter.notifyDataSetChanged(); u can call setSelection(1) to sovle it.\nu can use like function setSecondPositionVisible in http://code.google.com/p/trinea-android-common/source/browse/trunk/src/com/trinea/common/view/DropDownToRefreshListView.java\n. no, it,s maybe caused by call adapter.notifyDataSetChanged(); u can call setSelection(1) to sovle it.\nu can use like function setSecondPositionVisible in http://code.google.com/p/trinea-android-common/source/browse/trunk/src/com/trinea/common/view/DropDownToRefreshListView.java\n. ",
    "aheuermann": "Closing issue.  Submitted another issue with code attached : https://github.com/johannilsson/android-pulltorefresh/pull/53\n. Closing issue.  Submitted another issue with code attached : https://github.com/johannilsson/android-pulltorefresh/pull/53\n. ",
    "lavoy": "Seeing same bug, this line of code fixed it.\n\n+1 to this pull request.\n. Seeing same bug, this line of code fixed it.\n\n+1 to this pull request.\n. ",
    "stevenhaley": "Yep, this was a nice simple fix for a problem that was perplexing me.\n. Yep, this was a nice simple fix for a problem that was perplexing me.\n. ",
    "jitesh-dedhiya": "I was facing this issue too. Now its fixed by adding this line \"super.onAttachedToWindow()\". Thanks @aheuermann for the fix.\n. I was facing this issue too. Now its fixed by adding this line \"super.onAttachedToWindow()\". Thanks @aheuermann for the fix.\n. ",
    "jdale38": "https://github.com/johannilsson/android-pulltorefresh/pull/53 - need to call super.onAttachedToWindow();\n. https://github.com/johannilsson/android-pulltorefresh/pull/53 - need to call super.onAttachedToWindow();\n. ",
    "YidongZheng": "Thx!\n. Thx!\n. ",
    "doridori": "Why not?! More info would be useful\n. Why not?! More info would be useful\n. ",
    "mplatov": "fix/workaround suggested in this pull request:\nhttps://github.com/chrisbanes/Android-PullToRefresh/pull/228\n. fix/workaround suggested in this pull request:\nhttps://github.com/chrisbanes/Android-PullToRefresh/pull/228\n. ",
    "lhhGit": "This issue bothers me too. \n. This issue bothers me too. \n. ",
    "vinceyuan": "My walkaround is adding a big empty footer view into the list view. Note that you have to add the footer view before setting the list adapter.\n. @danwebanddev The tricky thing is we must add an inner layout otherwise the customized height does not work.\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" >\n\n```\n<!--Must add an inner layout otherwise the customized height does not work--> \n<FrameLayout\n    android:id=\"@+id/frameLayout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"@dimen/footer_view_small_height\" >\n</FrameLayout>\n```\n\n</RelativeLayout>\n. Correct code:\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"wrap_content\" >\n\n<!--Must add an inner layout otherwise the customized height does not work--> \n<FrameLayout\n    android:id=\"@+id/frameLayout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"@dimen/footer_view_small_height\" >\n</FrameLayout>\n\n</RelativeLayout>\n```\n. My walkaround is adding a big empty footer view into the list view. Note that you have to add the footer view before setting the list adapter.\n. @danwebanddev The tricky thing is we must add an inner layout otherwise the customized height does not work.\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" >\n\n```\n<!--Must add an inner layout otherwise the customized height does not work--> \n<FrameLayout\n    android:id=\"@+id/frameLayout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"@dimen/footer_view_small_height\" >\n</FrameLayout>\n```\n\n</RelativeLayout>\n. Correct code:\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"wrap_content\" >\n\n<!--Must add an inner layout otherwise the customized height does not work--> \n<FrameLayout\n    android:id=\"@+id/frameLayout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"@dimen/footer_view_small_height\" >\n</FrameLayout>\n\n</RelativeLayout>\n```\n. ",
    "danwebanddev": "I get this issue too.\n@vinceyuan your workaround doesn't work for me, could you post the xml of your footer view, please?\n. @vinceyuan\nThank you very much, I will try!\n. I get this issue too.\n@vinceyuan your workaround doesn't work for me, could you post the xml of your footer view, please?\n. @vinceyuan\nThank you very much, I will try!\n. ",
    "DanteNguyen1008": "Thank you very much :dancer: \n. Thank you very much :dancer: \n. ",
    "LaSprezz": "Hi,\nI took the changes, but it seems to remove the functionality to refresh the list completely as I still can't pull my list.\nTherefore nothing happens...\n. @DavidTPate Thanks for your quick feedback.\nI'm quite new here, therefore I'm not exactly sure on which sample I should provide nor how; here is what I think should do : \n\nMy listView (@ style containing a background image) :\n\n``` xml\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    style=\"@style/generic\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\" >\n\n    <com.markupartist.android.widget.PullToRefreshListView\n        android:id=\"@+id/listview\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\" />\n\n</RelativeLayout>\n```\n\nI then use another .xml to format each line of my list, but I don't think that matter.\n\nThen on my Activity (extends SherlockActivity) I just do : \n\n``` java\nlistview = (ListView) findViewById(R.id.listview);\n// pull-to-refresh\n((PullToRefreshListView) listview)\n    .setOnRefreshListener(new OnRefreshListener() {\n        @ Override\n        public void onRefresh() {\n                // Do work to refresh the list here.\n                new RefreshDataTask().execute();\n        }\n    });\n```\n\nThen I pass my datas through a custom adapter.\n\nSorry if anything sounds dumb, I may have missed something somewhere...\n. @DavidTPate Thanks for the insights. I'll take notes and modify.\n\nI use the master branch and tried to substitute the 2 files that can be found on top on this discussion (your modifications, if my understanding's right).\nI tested with 4 elements in the list (approximately half the size of the screen), and I can\u2019t pull my screen down so nothing happen, as if nothing was implemented. With 11 elements the scroll bar appears and it works.\n. @DavidTPate Sorry for the late feedback, I was working on the migration from ABS to ActionBarCompat.\nOnce done, I did as you said -which is grabbing all from your branch- and it works. Thanks.\n. Hi,\nI took the changes, but it seems to remove the functionality to refresh the list completely as I still can't pull my list.\nTherefore nothing happens...\n. @DavidTPate Thanks for your quick feedback.\nI'm quite new here, therefore I'm not exactly sure on which sample I should provide nor how; here is what I think should do : \n\nMy listView (@ style containing a background image) :\n\n``` xml\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    style=\"@style/generic\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\" >\n\n    <com.markupartist.android.widget.PullToRefreshListView\n        android:id=\"@+id/listview\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\" />\n\n</RelativeLayout>\n```\n\nI then use another .xml to format each line of my list, but I don't think that matter.\n\nThen on my Activity (extends SherlockActivity) I just do : \n\n``` java\nlistview = (ListView) findViewById(R.id.listview);\n// pull-to-refresh\n((PullToRefreshListView) listview)\n    .setOnRefreshListener(new OnRefreshListener() {\n        @ Override\n        public void onRefresh() {\n                // Do work to refresh the list here.\n                new RefreshDataTask().execute();\n        }\n    });\n```\n\nThen I pass my datas through a custom adapter.\n\nSorry if anything sounds dumb, I may have missed something somewhere...\n. @DavidTPate Thanks for the insights. I'll take notes and modify.\n\nI use the master branch and tried to substitute the 2 files that can be found on top on this discussion (your modifications, if my understanding's right).\nI tested with 4 elements in the list (approximately half the size of the screen), and I can\u2019t pull my screen down so nothing happen, as if nothing was implemented. With 11 elements the scroll bar appears and it works.\n. @DavidTPate Sorry for the late feedback, I was working on the migration from ABS to ActionBarCompat.\nOnce done, I did as you said -which is grabbing all from your branch- and it works. Thanks.\n. ",
    "DavidTPate": "@LaSprezz Can you please provide some code samples of what you are doing? I currently use this in a couple Production applications and have no issues.\n. Well, welcome to GitHub!\n\nA couple notes, I'd definitely take a look at the \"GitHub Flavored Markdown\" to learn some of the tags and such. For example, using an accent (`) three times above and below code will create a code block, like so:\n\n``` xml\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\nstyle=\"@style/generic\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\nandroid:orientation=\"vertical\" >\n\n<com.markupartist.android.widget.PullToRefreshListView\n    android:id=\"@+id/listview\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\" />\n</RelativeLayout>\n```\n\n``` java\nlistview = (ListView) findViewById(R.id.listview);\n// pull-to-refresh\n((PullToRefreshListView) listview)\n.setOnRefreshListener(new OnRefreshListener() {\n@ Override\npublic void onRefresh() {\n// Do work to refresh the list here.\nnew RefreshDataTask().execute();\n}\n});\n```\n. @LaSprezz From the looks of it what you are doing is correct and should work without issue. Does your list have at least one item in it? I would also suggest modifying your Java code slightly so you aren't having to cast once more to PullToRefreshListView, so it would like the following:\n\n``` java\nlistview = (PullToRefreshListView) findViewById(R.id.listview);\nlistview.setOnRefreshListener(new OnRefreshListener() {\n@Override\npublic void onRefresh() {\n// Do work to refresh the list here.\nnew RefreshDataTask().execute();\n}\n});\n```\n\nWhich version of the project are you using? Are you using the one from my branch or the main project? How many items does your list have? Can you post a screenshot of what you are seeing?\n. I would suggest grabbing all of the files from my branch https://github.com/DavidTPate/android-pulltorefresh-1 and giving it a quick try. \n. Glad to help!\n. @LaSprezz Can you please provide some code samples of what you are doing? I currently use this in a couple Production applications and have no issues.\n. Well, welcome to GitHub!\n\nA couple notes, I'd definitely take a look at the \"GitHub Flavored Markdown\" to learn some of the tags and such. For example, using an accent (`) three times above and below code will create a code block, like so:\n\n``` xml\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\nstyle=\"@style/generic\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\nandroid:orientation=\"vertical\" >\n\n<com.markupartist.android.widget.PullToRefreshListView\n    android:id=\"@+id/listview\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\" />\n</RelativeLayout>\n```\n\n``` java\nlistview = (ListView) findViewById(R.id.listview);\n// pull-to-refresh\n((PullToRefreshListView) listview)\n.setOnRefreshListener(new OnRefreshListener() {\n@ Override\npublic void onRefresh() {\n// Do work to refresh the list here.\nnew RefreshDataTask().execute();\n}\n});\n```\n. @LaSprezz From the looks of it what you are doing is correct and should work without issue. Does your list have at least one item in it? I would also suggest modifying your Java code slightly so you aren't having to cast once more to PullToRefreshListView, so it would like the following:\n\n``` java\nlistview = (PullToRefreshListView) findViewById(R.id.listview);\nlistview.setOnRefreshListener(new OnRefreshListener() {\n@Override\npublic void onRefresh() {\n// Do work to refresh the list here.\nnew RefreshDataTask().execute();\n}\n});\n```\n\nWhich version of the project are you using? Are you using the one from my branch or the main project? How many items does your list have? Can you post a screenshot of what you are seeing?\n. I would suggest grabbing all of the files from my branch https://github.com/DavidTPate/android-pulltorefresh-1 and giving it a quick try. \n. Glad to help!\n. ",
    "suarkadipa": "it works, thanks!\n. it works, thanks!\n. ",
    "6epreu": "Hey, have you solved your problem? \n. You need to add method to interface ILoadingLayout like setHeaderColor(int color) and then implement it in the abstract class LoadingLayout.java. F.e. \npublic void setHeaderTextColor( int color ){\n        if (mHeaderText != null ) {\n            mHeaderText.setTextColor(color);\n        }\n    }\n. Hey, have you solved your problem? \n. You need to add method to interface ILoadingLayout like setHeaderColor(int color) and then implement it in the abstract class LoadingLayout.java. F.e. \npublic void setHeaderTextColor( int color ){\n        if (mHeaderText != null ) {\n            mHeaderText.setTextColor(color);\n        }\n    }\n. ",
    "cesvi87": "Same bug. I've got 3 listviews. The first one works well, but the other two listviews show \"Tap to refresh\". (The code is the same for the 3 items)\n. Same bug. I've got 3 listviews. The first one works well, but the other two listviews show \"Tap to refresh\". (The code is the same for the 3 items)\n. ",
    "signalarun": "I want to set a font for Indian languages.\n. I want to set it in pulltorefreshlist\n. What is the id for textview in list of pulltorefreshlist\n. I want to set a font for Indian languages.\n. I want to set it in pulltorefreshlist\n. What is the id for textview in list of pulltorefreshlist\n. ",
    "ssevening": "i am not the anther, i copy other\u2019s code.\n\u5728 2013\u5e7410\u670825\u65e5\uff0c\u4e0b\u53485:02\uff0cDinopis notifications@github.com \u5199\u9053\uff1a\n\n> Pull the bottom listview? How can I do?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. i am not the anther, i copy other\u2019s code.\n\u5728 2013\u5e7410\u670825\u65e5\uff0c\u4e0b\u53485:02\uff0cDinopis notifications@github.com \u5199\u9053\uff1a\n\n> Pull the bottom listview? How can I do?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ",
    "mrleolink": "I just occurred this issue when I tried to run the example, it happened after a few consecutive pulls to refresh.\n. I just occurred this issue when I tried to run the example, it happened after a few consecutive pulls to refresh.\n. ",
    "GaneshB-Extentia": "Hello,\nI am also facing this problem, any one got solution?\n. Hello,\nI am also facing this problem, any one got solution?\n. ",
    "kalvish21": "I'm having the same issue... Seems like this is from a few months ago. Is this library deprecated or still active?\n. I don't think this project is maintained any longer. Best is to move away from it or to fork the repo and continue from there.\n. I'm having the same issue... Seems like this is from a few months ago. Is this library deprecated or still active?\n. I don't think this project is maintained any longer. Best is to move away from it or to fork the repo and continue from there.\n. ",
    "rakey": "You can print the position in the method.Did you use the wrong param? the param type long or int ? \n\n2014-01-16\n\nRakey Zhao\n\n\u53d1\u4ef6\u4eba\uff1aAmish Patel notifications@github.com\n\u53d1\u9001\u65f6\u95f4\uff1a2014-01-16 17:32\n\u4e3b\u9898\uff1a[android-pulltorefresh] Listview on ItemClick gives wrong position (#76)\n\u6536\u4ef6\u4eba\uff1a\"johannilsson/android-pulltorefresh\"android-pulltorefresh@noreply.github.com\n\u6284\u9001\uff1a\n\nWhen i click on item position it gives wrong position.for example i am clicking on position no 2 the it give the value of position 3.let me know how can i resolve this issue please\n\u2014\nReply to this email directly or view it on GitHub.\n. I didn`t find this bug in my project , it runs well . What`s your OS version?\n2014-01-17\n\nRakey Zhao\n\n\u53d1\u4ef6\u4eba\uff1aAmish Patel notifications@github.com\n\u53d1\u9001\u65f6\u95f4\uff1a2014-01-16 18:55\n\u4e3b\u9898\uff1aRe: [android-pulltorefresh] Listview on ItemClick gives wrong position (#76)\n\u6536\u4ef6\u4eba\uff1a\"johannilsson/android-pulltorefresh\"android-pulltorefresh@noreply.github.com\n\u6284\u9001\uff1a\"rakey\"benhare005@126.com\n\n01-16 16:21:38.635: I/System.out(11122): ------------ Position int ::1\n01-16 16:21:38.635: I/System.out(11122): ------------ Position long ::48\n01-16 16:21:38.635: I/System.out(11122): ------------ Product Id ::52\ni have print log but on zero position it gives 1 poition\n\u2014\nReply to this email directly or view it on GitHub.\n. Oh i`m sorry .I didn`t use this widget in my project. I review the source. You are right. The auther used the position 0 as refresh view,. Then, set the selection at position 1 when the listView show . you can see the source.  @Override    protected void onAttachedToWindow() {        super.onAttachedToWindow();        setSelection(1);  //here     }    @Override    public void setAdapter(ListAdapter adapter) {        super.setAdapter(adapter);        setSelection(1); // here override the method setAdapter    }\nMy solution is very easy. In the method change the value of param\npublic void onItemClick(AdapterView<?> arg0, View view, int arg2,\nlong arg3) {\n// arg2 is the position you can use (arg2 - 1) \n}\n\n2014-01-17\n\nRakey Zhao\n\n\u53d1\u4ef6\u4eba\uff1aAmish Patel notifications@github.com\n\u53d1\u9001\u65f6\u95f4\uff1a2014-01-16 17:32\n\u4e3b\u9898\uff1a[android-pulltorefresh] Listview on ItemClick gives wrong position (#76)\n\u6536\u4ef6\u4eba\uff1a\"johannilsson/android-pulltorefresh\"android-pulltorefresh@noreply.github.com\n\u6284\u9001\uff1a\n\nWhen i click on item position it gives wrong position.for example i am clicking on position no 2 the it give the value of position 3.let me know how can i resolve this issue please\n\u2014\nReply to this email directly or view it on GitHub.\n. Are you American?\n\n2014-01-20\n\nRakey Zhao\n\n\u53d1\u4ef6\u4eba\uff1aAmish Patel notifications@github.com\n\u53d1\u9001\u65f6\u95f4\uff1a2014-01-17 21:34\n\u4e3b\u9898\uff1aRe: [android-pulltorefresh] Listview on ItemClick gives wrong position (#76)\n\u6536\u4ef6\u4eba\uff1a\"johannilsson/android-pulltorefresh\"android-pulltorefresh@noreply.github.com\n\u6284\u9001\uff1a\"rakey\"benhare005@126.com\n\nyes i find the way.i have write click event on view in adapter and remove listview onitemclick event.now its working good.\n\u2014\nReply to this email directly or view it on GitHub.\n. You can print the position in the method.Did you use the wrong param? the param type long or int ? \n\n2014-01-16\n\nRakey Zhao\n\n\u53d1\u4ef6\u4eba\uff1aAmish Patel notifications@github.com\n\u53d1\u9001\u65f6\u95f4\uff1a2014-01-16 17:32\n\u4e3b\u9898\uff1a[android-pulltorefresh] Listview on ItemClick gives wrong position (#76)\n\u6536\u4ef6\u4eba\uff1a\"johannilsson/android-pulltorefresh\"android-pulltorefresh@noreply.github.com\n\u6284\u9001\uff1a\n\nWhen i click on item position it gives wrong position.for example i am clicking on position no 2 the it give the value of position 3.let me know how can i resolve this issue please\n\u2014\nReply to this email directly or view it on GitHub.\n. I didn`t find this bug in my project , it runs well . What`s your OS version?\n2014-01-17\n\nRakey Zhao\n\n\u53d1\u4ef6\u4eba\uff1aAmish Patel notifications@github.com\n\u53d1\u9001\u65f6\u95f4\uff1a2014-01-16 18:55\n\u4e3b\u9898\uff1aRe: [android-pulltorefresh] Listview on ItemClick gives wrong position (#76)\n\u6536\u4ef6\u4eba\uff1a\"johannilsson/android-pulltorefresh\"android-pulltorefresh@noreply.github.com\n\u6284\u9001\uff1a\"rakey\"benhare005@126.com\n\n01-16 16:21:38.635: I/System.out(11122): ------------ Position int ::1\n01-16 16:21:38.635: I/System.out(11122): ------------ Position long ::48\n01-16 16:21:38.635: I/System.out(11122): ------------ Product Id ::52\ni have print log but on zero position it gives 1 poition\n\u2014\nReply to this email directly or view it on GitHub.\n. Oh i`m sorry .I didn`t use this widget in my project. I review the source. You are right. The auther used the position 0 as refresh view,. Then, set the selection at position 1 when the listView show . you can see the source.  @Override    protected void onAttachedToWindow() {        super.onAttachedToWindow();        setSelection(1);  //here     }    @Override    public void setAdapter(ListAdapter adapter) {        super.setAdapter(adapter);        setSelection(1); // here override the method setAdapter    }\nMy solution is very easy. In the method change the value of param\npublic void onItemClick(AdapterView<?> arg0, View view, int arg2,\nlong arg3) {\n// arg2 is the position you can use (arg2 - 1) \n}\n\n2014-01-17\n\nRakey Zhao\n\n\u53d1\u4ef6\u4eba\uff1aAmish Patel notifications@github.com\n\u53d1\u9001\u65f6\u95f4\uff1a2014-01-16 17:32\n\u4e3b\u9898\uff1a[android-pulltorefresh] Listview on ItemClick gives wrong position (#76)\n\u6536\u4ef6\u4eba\uff1a\"johannilsson/android-pulltorefresh\"android-pulltorefresh@noreply.github.com\n\u6284\u9001\uff1a\n\nWhen i click on item position it gives wrong position.for example i am clicking on position no 2 the it give the value of position 3.let me know how can i resolve this issue please\n\u2014\nReply to this email directly or view it on GitHub.\n. Are you American?\n\n2014-01-20\n\nRakey Zhao\n\n\u53d1\u4ef6\u4eba\uff1aAmish Patel notifications@github.com\n\u53d1\u9001\u65f6\u95f4\uff1a2014-01-17 21:34\n\u4e3b\u9898\uff1aRe: [android-pulltorefresh] Listview on ItemClick gives wrong position (#76)\n\u6536\u4ef6\u4eba\uff1a\"johannilsson/android-pulltorefresh\"android-pulltorefresh@noreply.github.com\n\u6284\u9001\uff1a\"rakey\"benhare005@126.com\n\nyes i find the way.i have write click event on view in adapter and remove listview onitemclick event.now its working good.\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "payraj143": "01-16 16:21:38.635: I/System.out(11122): ------------ Position int ::1\n01-16 16:21:38.635: I/System.out(11122): ------------ Position long ::48\n01-16 16:21:38.635: I/System.out(11122): ------------ Product Id ::52\ni have print log but on zero position it gives 1 poition\n. yes i find the way.i have write click event on view in adapter and remove listview onitemclick event.now its working good.\n. no my friend i am from india........\n. 01-16 16:21:38.635: I/System.out(11122): ------------ Position int ::1\n01-16 16:21:38.635: I/System.out(11122): ------------ Position long ::48\n01-16 16:21:38.635: I/System.out(11122): ------------ Product Id ::52\ni have print log but on zero position it gives 1 poition\n. yes i find the way.i have write click event on view in adapter and remove listview onitemclick event.now its working good.\n. no my friend i am from india........\n. ",
    "ru-alxr": "please add Russian:\n\n```\n./values-ru/\n    <string name=\"app_name\">pulltorefresh</string>\n    <string name=\"pull_to_refresh_pull_label\">\u041f\u043e\u0442\u044f\u043d\u0438\u0442\u0435 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f&#8230;</string>\n    <string name=\"pull_to_refresh_release_label\">\u041e\u0442\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f&#8230;</string>\n    <string name=\"pull_to_refresh_refreshing_label\">\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430&#8230;</string>\n    <string name=\"pull_to_refresh_tap_label\">\u041a\u043b\u0438\u043a\u043d\u0438\u0442\u0435 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f&#8230;</string>\n```\n. @johannilsson sorry, I cannot:\naleksandr@workstation:~/android-pulltorefresh$ git push origin russian\n\n```\naleksandr@workstation:~/android-pulltorefresh$ git push origin russian\nUsername for 'https://github.com': ru-alxr\nPassword for 'https://ru-alxr@github.com': \nerror: The requested URL returned error: 403 while accessing https://github.com/johannilsson/android-pulltorefresh.git/info/refs\nfatal: HTTP request failed\n```\n\nand here git config\n\n```\n[core]\n    repositoryformatversion = 0\n    filemode = true\n    bare = false\n    logallrefupdates = true\n[remote \"origin\"]\n    fetch = +refs/heads/*:refs/remotes/origin/*\n    url = https://github.com/johannilsson/android-pulltorefresh.git\n[branch \"master\"]\n    remote = origin\n    merge = refs/heads/master\n```\n. @johannilsson  Thanks a lot! I'll try to do this way.\n. @johannilsson  Hello, apply please this - https://github.com/johannilsson/android-pulltorefresh/pull/79\n. @vinceyuan Have you got solution?\n. please add Russian:\n\n```\n./values-ru/\n    <string name=\"app_name\">pulltorefresh</string>\n    <string name=\"pull_to_refresh_pull_label\">\u041f\u043e\u0442\u044f\u043d\u0438\u0442\u0435 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f&#8230;</string>\n    <string name=\"pull_to_refresh_release_label\">\u041e\u0442\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f&#8230;</string>\n    <string name=\"pull_to_refresh_refreshing_label\">\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430&#8230;</string>\n    <string name=\"pull_to_refresh_tap_label\">\u041a\u043b\u0438\u043a\u043d\u0438\u0442\u0435 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f&#8230;</string>\n```\n. @johannilsson sorry, I cannot:\naleksandr@workstation:~/android-pulltorefresh$ git push origin russian\n\n```\naleksandr@workstation:~/android-pulltorefresh$ git push origin russian\nUsername for 'https://github.com': ru-alxr\nPassword for 'https://ru-alxr@github.com': \nerror: The requested URL returned error: 403 while accessing https://github.com/johannilsson/android-pulltorefresh.git/info/refs\nfatal: HTTP request failed\n```\n\nand here git config\n\n```\n[core]\n    repositoryformatversion = 0\n    filemode = true\n    bare = false\n    logallrefupdates = true\n[remote \"origin\"]\n    fetch = +refs/heads/*:refs/remotes/origin/*\n    url = https://github.com/johannilsson/android-pulltorefresh.git\n[branch \"master\"]\n    remote = origin\n    merge = refs/heads/master\n```\n. @johannilsson  Thanks a lot! I'll try to do this way.\n. @johannilsson  Hello, apply please this - https://github.com/johannilsson/android-pulltorefresh/pull/79\n. @vinceyuan Have you got solution?\n. ",
    "Anearion": "Was a personal problem, sorry about that.\n. Was a personal problem, sorry about that.\n. ",
    "WKBae": "Real-time commit! Nice :+1: \n. Thank you for fast response, and I've just thought about that too, right after the poll request!\nI'm commiting the fixed one now :)\n. Oops, I've just noticed that I dropped imports:\n\n``` java\nimport android.graphics.Bitmap;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.graphics.drawable.Drawable;\n```\n\nfrom the code!\nI will request pull again :P\n. Real-time commit! Nice :+1: \n. Thank you for fast response, and I've just thought about that too, right after the poll request!\nI'm commiting the fixed one now :)\n. Oops, I've just noticed that I dropped imports:\n\n``` java\nimport android.graphics.Bitmap;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.graphics.drawable.Drawable;\n```\n\nfrom the code!\nI will request pull again :P\n. ",
    "saritagandhi": "Thanks, yes. It is working with large number of item.\n. Thanks for reply this code helps me a lot in implementation in my app .\n\nOn Wed, Apr 16, 2014 at 12:09 PM, Johan Nilsson notifications@github.comwrote:\n\n> Closed #87https://github.com/johannilsson/android-pulltorefresh/issues/87\n> .\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/johannilsson/android-pulltorefresh/issues/87\n> .\n. Thanks, yes. It is working with large number of item.\n. Thanks for reply this code helps me a lot in implementation in my app .\n\nOn Wed, Apr 16, 2014 at 12:09 PM, Johan Nilsson notifications@github.comwrote:\n\n> Closed #87https://github.com/johannilsson/android-pulltorefresh/issues/87\n> .\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/johannilsson/android-pulltorefresh/issues/87\n> .\n. ",
    "foxty": "Maybe you can use mListView.onRefresh() to auto load when activity start up.\n. Maybe you can use mListView.onRefresh() to auto load when activity start up.\n. ",
    "RajivDaffodil": "I am also facing this prob.\nthis tap to refresh looks very bad please guide to remove it entirely. \n. I am also facing this prob.\nthis tap to refresh looks very bad please guide to remove it entirely. \n. ",
    "msaudicse": "Same problem\n. Same problem\n. ",
    "leafseelight": "Nice to receive your reply ! Thank you ! This issue is found from a old project.Now I have been used recycleview for instead. I just want to know to  whether someone have encountered or solve this problem.Best wishes !\uff08Ps:Forgive me for my weak English\uff09. Nice to receive your reply ! Thank you ! This issue is found from a old project.Now I have been used recycleview for instead. I just want to know to  whether someone have encountered or solve this problem.Best wishes !\uff08Ps:Forgive me for my weak English\uff09. "
}