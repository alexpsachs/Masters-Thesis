{
    "mlmorg": "This looks like a good start to me.\n. :+1: \n. :+1: \n. :+1: \n. :+1: \n. Can we rebase and squash into a single commit? Thanks!\n. Sounds reasonable. I'm also happy to update the changelog too. We'll need to update the npm collaborators.\n. Should we update the `package.json`?\n. :+1: \n. Thanks @twolfson!\n. Sorry for the delay. Thanks!\n. :+1: \n. No problem!\n. Sorry for the delay! Merged.\n. Oops... updating now.\n. Hey @twolfson, we've moved this to `uber-archive` as you suggested. Let me know if you want to update the readme, or if you'd like me to.. Sorry for the delay! The PR is now merged!. This looks like a good start to me.\n. :+1: \n. :+1: \n. :+1: \n. :+1: \n. Can we rebase and squash into a single commit? Thanks!\n. Sounds reasonable. I'm also happy to update the changelog too. We'll need to update the npm collaborators.\n. Should we update the `package.json`?\n. :+1: \n. Thanks @twolfson!\n. Sorry for the delay. Thanks!\n. :+1: \n. No problem!\n. Sorry for the delay! Merged.\n. Oops... updating now.\n. Hey @twolfson, we've moved this to `uber-archive` as you suggested. Let me know if you want to update the readme, or if you'd like me to.. Sorry for the delay! The PR is now merged!. ",
    "faizandfurious": "Yeah seriously what is this\n. Yeah seriously what is this\n. ",
    "twolfson": "Resolved in `1.0.1`\n. For reference, the original never used `gm` =/\n\nhttps://github.com/twolfson/twolfson.com/blob/3.4.0/test/perceptual-tests/twolfson.com_test.js#L50-L162\n. Where are you seeing these file be created and where are the images which are being asserted against stored?\n\nI have a feeling this has something to do with the way we use add to temporary's filepath but would like to confirm.\n\nhttps://github.com/uber/image-diff/blob/0.2.0/lib/image-diff.js#L78\n. More proof that it looks like what we are seeing:\n\nhttps://github.com/vesln/temporary/blob/0.0.8/lib/file.js#L36-L38\n. ...and I have confirmed the behavior inside of `/tmp` locally.\n. It does but I am stumped how those local files are getting introduced. I have created a PR (#6) to deal with the ones in `/tmp`. Hopefully, it takes care of that local set as well.\n\nThe PR itself is awaiting code review. If you want to try it out locally, you can use:\n\n``` bash\nnpm install git://github.com/uber/image-diff#dev/cleanup.tempfiles.sqwished\n```\n. Alright, the PR has been merged and this was relased in `0.3.0`. Please verify everything is fixed. Thanks for the bug report!\n. Another tell tale sign will be that the `diffImage` does not exist on disk. However, I am not sure that will always be a required parameter so we should not assert against it.\n. Resolved in `0.5.0`\n. Resolved in `1.0.0`\n. /cc @mlmorg @Raynos \n. Currently, it is a strict comparison to `0`. However, we should be able to adjust the threshold up/down based on an option:\n\nhttps://github.com/uber/image-diff/blob/1.0.1/lib/image-diff.js#L85\n\n``` js\nimageDiff({\n  actualImage: 'checkerboard.png',\n  expectedImage: 'white.png',\n  diffImage: 'difference.png',\n  threshold: 20  // percentage of 100\n}, ...\n```\n\nWould that work for your case?\n. Cool. I am pretty busy with some other things at the moment but I will take a look by the end of next weekend. Feel free to open a PR to beat me to the punch =)\n. Nah, `40131.8` was an example. Although, I could see how it could be misconstrued. I believe the second value is the percentage. Another option is to use whatever absolute difference there is (first value). To see the limits, probably comparing a black square to a white square would work.\n. Not a problem. My ETA still stands. Fwiw, the approach would be something like change the regexp grouping to evaluate the perecentage, parse it to a float, and perform a comparison. The partially tedious part would be writing a test.\n\nhttps://github.com/uber/image-diff/blob/1.0.1/lib/image-diff.js#L76-L85\n\n``` js\n// Parse the percentage difference\nvar percentDifference = parseFloat(resultInfo[2], 10);\nif (isNaN(percentDifference)) {\n  return cb(new Error('Attempted to parse percentage difference from `image-diff\\'s stderr` but got `NaN` from \"' + resultInfo[2] + '\"'));\n}\n\n// Callback with pass/fail\nreturn cb(null, percentageDifference <= thresholdDifference);\n```\n. More GitHub related info can be found here:\n\nhttps://help.github.com/\n. @corysimmons It looks like #15 was ready to be merged but we never got a squash so we closed it due to inactivity =/ You can probably reuse that code or start fresh. The gist is here but we need tests. Can you add some?\n. I can't see your changes. Please push them to update the PR (pull request).\n. Getting closer, still needs tests though =/\n. Everything looks fine. Mostly fine tuning things now.\n. There seem to still be a few lingering inline comments that I would like to get sorted out. Can we take care of those?\n. Nope, I am referring to these:\n\nhttps://github.com/uber/image-diff/pull/15/files#r27454478\n\nhttps://github.com/uber/image-diff/pull/15/files#r27454735\n\nhttps://github.com/uber/image-diff/pull/15/files#r27454747\n. There is still this trailing comma comment left =/\n\nhttps://github.com/uber/image-diff/pull/15/files#r27454478\n\nAdditionally, we seem to be blocked by #16. I will bump the issue so it can be addressed.\n. Sweet, everything looks great now. Still waiting on a reply in #16 \n. This PR hasn't been active in over 1 year. We can probably close it due to inactivity\n. Any word on this? PR #15 is more/less ready and we should get this sorted out =/\n. Yea, definitely. I will take a look at adding a PR for this workflow by the end of this weekend. Who should I update the collaborators to?\n. Ah, right. I think I was waiting on input on #16. Can you provide feedback on that?\n\nhttps://github.com/uber/image-diff/issues/16\n. To prevent stacking PRs, I will make these comments inline. Once #18 has been landed, this should be landed with a patch bump in the semver and something in the CHANGELOG like:\n\n``` md\n1.0.3 - Repaired Travis CI tests by dropping `node@0.8` and adding `node@0.12`/`iojs`\n```\n. This PR will fail Travis CI due to #17 not being landed.\n. Awesome, thanks @mlmorg!\n. Can you please provide more explanation for the introduction of these changes? To me, I see mostly noise of different development styles and would prefer more context.\n. Ah, I see what's going on now.\n\nRegarding the `/* mocha: true */` option, I prefer to keep all the files running under the same lint conditions; one-off settings on a per-file basis makes the project feel inconsistent (because it is).\n\nFor `fs` interactions, `node` automatically coerces `/` to `\\` for Windows (similar to how it's doing it for the strings that include `/` in the `path.join` when they should be different parameters).\n\n``` js\n// Should really need to move to\npath.join(__dirname, 'test-files', 'checkerboard.png');\n// not\npath.join(__dirname, '/test-files/checkerboard.png');\n```\n\nhttps://github.com/joyent/node/blob/v0.12.2/lib/fs.js#L482-L491\n\nhttps://github.com/joyent/node/blob/v0.12.2/lib/path.js#L305-L327\n\nhttps://github.com/joyent/node/blob/v0.12.2/lib/path.js#L531-L533\n\nI am fine with upgrading `mocha` for the sake of more up to date dependencies but I think the other changes aren't a problem and causing PR noise.\n. Looks good :+1: \n. I disagree with this PR. `sudo: false` is fine but `fast_finish` are for maintainers to choose. When I do development, I prefer to see all failing builds. `node@0.11` was out as the latest for a very long time, I think it would be negligent to remove it from Travis CI entirely.\n. Can you elaborate more on the reason behind these changes? Also, can you squash this down to 1 commit?\n. After doing some research, it looks like `imagemagick` supports outputting the `diffImage` to `stdout`:\n\n``` bash\n# No output image is generated but piped to `/dev/null`\n compare -verbose -metric RMSE -highlight-color RED -compose Src checkerboard.png white.png - 1> /dev/null\n```\n\nWe can prob coerce `options.diffImage` to `-` when it's falsy to handle this case. However, then we will start to generate a buffer of the diff image which is wasteful (`child_process.exec` doesn't support ignoring this):\n\nhttps://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback\n\nAs a result, we should switch to `child_process.spawn` and use `ignore` for `stdio` on `stdout`:\n\nhttps://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options\n\nhttps://nodejs.org/api/child_process.html#child_process_options_stdio\n. @LinusU I have opened #24 which should fix this issue\n. @LinusU This has been patched/released in 1.1.0.\n\n@mlmorg I forgot to add a \"Fixes #23\" to the PR, can we close this issue? =/\n. bower/buffered-spawn#5 was landed/released and this PR is now on top of the patched version. This PR is good to be reviewed/landed.\n. Woot, thanks for the quick land @mlmorg =)\n. I don't understand this PR. Can you please explain it?\n. Left some comments on how to better structure the code. As far as naming goes with \"shadow\", I don't feel like that gives me the right idea. How about something more focused at opacity or averaging the images? (e.g. `underlayImagesAverage`)\n. Ah, k. I guess we should keep `shadow` for consistency in naming then. Thanks for pointing that out =)\n. Our dissimilarity threshold comments are getting buried due to a shifting diff. Previous to this PR, both locally and Travis CI have been passing without `dissimilarity-threshold`. What version of ImageMagick are you running?\n\n``` bash\ncompare --version\n```\n. One more thing to note is that typically PRs need to be squashed to 1 commit to be landed so we should start squashing on each update to this PR =/\n. I am running `6.7.7-10` locally and Travis CI is on `6.6.9-7` (seen from the logs). Can you try upgrading?\n\nhttps://travis-ci.org/uber/image-diff/jobs/67943987\n. Sweet, everything looks good. I am going to open up a follow up PR with an updated README/CHANGELOG to get this landed (weird process due to leaving the organization). I will post here with the PR number to subscribe but this should auto-close when it's landed.\n. Alright, #26 has been opened and hopefully this will be published soon =)\n. @064678147 You should be good to go. This has been landed/released in `1.2.0`\n. Awesome, thanks for the quick land @mlmorg =)\n. Yep, I don't think this is possible with imagemagick; either we provide an outfile or we don't (and ignore stdout/stderr). Can you explain your use case more? Typically people want consistent behavior for a low level library like this =/\n. Ah, alright. Thanks for the clarification. Since there is a workaround and no easy/performant support, I think it's prob best to close this issue.\n\n@mlmorg Can we close this issue?\n. Thanks @mlmorg =)\n. This is a duplicate of #27. The reason is our underlying engine (ImageMagick) has no options to perform this action. In the future, please be sure to search issues (both opened and closed) to prevent using unnecessary time.\n\n@mlmorg Can we please close this issue?\n. Can we add a test case for this comment? Maybe we should break out the extraction method so we can test it more independently (i.e. without needing an image)\n. Nah, I imagine that would require very large images to be stored in the repo. We should relocate the `.match` into its own function so it can be tested independently\n. Yea, but this will also put us in a more flexible state for the future. I am going to open a secondary PR to add that functionality. This PR looks good for now.\n. I have opened up #30 which brings this PR over the finish line and ready for landing.\n. Woot, thanks @mlmorg =)\n. Why did you open a duplicate issue for this? Please close it =/\n. Every repo does this differently -- for me, I think a PR can be considered as an issue tracker. This one can be closed =/\n. Can you explain how you used `gm` with Graphics Magick? I want to make sure I'm not assuming anything\n. Cool, thought so but wanted to make sure it wasn't you running `gm compare` on the CLI =P\n\nI think adding an option for disabling ImageMagick sounds reasonable. Let's go with the name `imageMagick` for consistency with `gm` (we can make it default to `true` for backwards compatibility).\n\n``` js\nimageDiff({imageMagick: false, actualImage, ...})\n```\n\nWould you be interested in writing a PR for this?\n. After getting the problematic images, we were able to track down the source of the problem and open a PR that seems to patch the issue. More specific details can be found on the PR itself\n\n#34 \n\nIf you would like to try out the PR locally, then it can be installed via a `git` URL via `npm`:\n\nhttps://docs.npmjs.com/files/package.json#git-urls-as-dependencies\n\n``` bash\n\"image-diff\": \"git://github.com/twolfson/image-diff#ef3aa9f\"\n```\n. Ah, I'm realizing that there is a very specific way I want #32 done. Effectively, if I tell you how to do it, then I will be writing the code so I guess I should just write the damn code.\n\nSorry for wasting your time on this x_x\n. For reference, problems in this current iteration:\n- All instances of `ImageDiff` are using a common global `gm` (should be per-instance)\n- We have a `require` inlined in a method, not done at load time which causes sync loading =(\n- We are still using `compare` instead of `gm` in a location\n. Alright, I can do that\n. Left some comments to resolve, additionally we need to take care of the `compare` call. We should be able to do something like:\n\n``` js\nthis.diffCmd = useImageMagick ? 'compare' : 'gm';\nthis.baseDiffArgs = useImageMagick ? [] : ['compare'];\n\n// Then in the compare call\nvar diffArgs = this.baseDiffArgs.concat([\n  '-verbose',\n  // ...\n])\n```\n. Can you upload the images you are comparing?\n. So does that mean everything is working as expected?\n. Ah, sorry. I meant on the unaltered `master` branch of this project (i.e. tag `1.3.0`/commit `d9dc82030b5d77d829c484151b7716290177175e`)\n. Ah, I have created a gist to reproduce the issue. It looks like a problem with the library, not your OS nor ImageMagick nor GraphicsMagick.\n\nhttps://gist.github.com/twolfson/710485d2941d0e19b5d5\n. After a bit of digging, it looks like we were using `this.crop` instead of `this.extent` x_x After making that change, everything seems to work as expected\n. I got something working locally but it broke again with the example images you provided. Unfortunately, I have to take off for the night. I will take a look at getting it resolved by the end of the weekend.\n. A replacement PR has been opened in #33, can you please close this PR?\n. Sorry, I meant #34\n. Awesome, thanks for the fast merge @mlmorg =)\n. Fortunately we are using our own `compare` invocation with `buffered-spawn` so we don't have that vulnerability.\n\nhttps://github.com/uber/image-diff/blob/1.5.0/lib/image-diff.js#L70-L96\n\nHowever, I agree that an upgrade would be best to prevent potential future regressions. Would you be interested in opening a PR?\n. @jacobp100 This should be resolved now that #38 has been landed and released in `1.5.1`. Can you please close this issue? (I no longer have write access on the repo despite being the author =/)\n. Looks good to me. @mlmorg Can we land this?\n\nProposed CHANGELOG message and release command:\n\n```\n1.5.1 - Upgraded to `gm@1.21.1` to resolve security advisory via @jacobp100 in #38\n```\n\n``` bash\n./release 1.5.1\n```\n. Sweet, thanks for the quick merge @mlmorg =)\n. We should be able to add a new function or option to expose that. I think a new function would be ideal so we can keep our types consistent. I will whip up a PR to get your feedback.\n. Alright, I have created a branch with my proposed content. Before I submit it as a PR though, I want to verify it will work for you. Can you look over the README changes here?\n\nhttps://github.com/twolfson/image-diff/tree/dev/add.result.callback.sqwished#imagediffgetfullresultoptions-cb\n. Yep, it should be the new method. Nice catch :+1: I will open a PR shortly\n. Alright, PR #40 has been opened up\n. No worries, thanks @mlmorg! =)\n. Looks like too much was fixed in that last commit. Left another comment. Can you please squash the commits into 1 commit as well?\n. Run `git rebase -i master` and change all commits except for the first 1 to \"squash\". Here's a demonstration:\n\nhttps://ariejan.net/2011/07/05/git-squash-your-latests-commits-into-one/\n\nOnce the commits are squashed into 1, you will need to force push the update. That can be done via:\n\n``` bash\ngit push origin patch-1 --force\n```\n. It is in this PR, maybe you are viewing a subset of the commits?\n\nhttps://github.com/uber/image-diff/pull/41/files#diff-354f30a63fb0907d4ad57269548329e3R3\n\nhttps://travis-ci.org/uber/image-diff/jobs/145087157\n. You need to run the `git rebase -i master` first and choose \"squash\" for all but the first commit as instructed =/\n. Also, make sure you are on the `patch-1` branch when running `git rebase`\n. You can but you should be able to do everything on this branch/PR =/\n. Looks good to me. Can someone land this as a patch revision and add to the CHANGELOG:\n\n```\n1.6.1 - Updated Node.js versions in Travis CI via @amilajack in #42\n```\n\nTo release, it should be:\n\n``` bash\n./release.sh 1.6.1\n```\n\n/cc @mlmorg \n. Awesome, thanks @mlmorg =D\n. AppVeyor support sounds reasonable but it can be time consuming to set up (i.e. push, wait for AppVeyor to fail for a trivial mistake, rinse, and repeat). I would be up for setting it up but I would need repo access again =/\n\nThat being said @amilajack, you didn't answer the question about if `image-diff` fails/throws an error on Windows right now =/\n. Sooo we could be fine on Windows then? This is more about getting 1 more system that we automatically check via CI?\n. Fwiw, Microsoft offers Windows VMs for testing Internet Explorer which can be reused for testing on Windows:\n\nhttps://developer.microsoft.com/en-us/microsoft-edge/tools/vms/\n. Looks good to me. Notes for release process:\n\nPatch version release should be fine. Here's some notes for the `CHANGELOG`:\n\n``` md\n1.6.2 - Updated Travis CI badge from PNG to SVG via @amilajack in #44\n```\n\nCommands for new release:\n\n``` bash\n./release.sh 1.6.2\n```\n\n/cc @mlmorg \n. Thanks @mlmorg! It looks like we forgot to update the CHANGELOG though =/\n. Libraries like `bluebird` offer `promisify` which should resolve this issue.\n\nhttp://bluebirdjs.com/docs/api/promise.promisify.html\n\n``` js\nvar imageDiff = Promise.promisify(require('image-diff'));\n```\n\n@mlmorg Can we please close this issue?\n. Looks good to me. Here's the CHANGELOG and release command:\n\n``` md\n1.6.3 - Fixed word splitting in `release.sh` via @andlrc in #47\n```\n\n``` bash\n./release.sh 1.6.3\n```\n. Thanks @mlmorg =)\n. Yea, we are open to supporting GraphicsMagick. In fact, #33 was working on this but it turned out to be the wrong solution to a different problem. The PR is rather incomplete but it's a good starting point for parameters and edge cases to handle\n. What happens when you run the command outside of `image-diff`?\n\n```\nidentify -ping -format %wx%h run-first/login-2-after.png\n```\n. That's peculiar; ImageMagick never has a prefix and GraphicsMagick typically uses `gm` as its prefix. Can you link us to where you installed ImageMagick from?\n\nhttp://www.imagemagick.org/script/command-line-processing.php\n\nhttp://www.graphicsmagick.org/convert.html\n. Ah, interesting. After doing some research on the `gm` repo, this is due to name conflicts with some Windows executables.\n\nhttps://github.com/aheckmann/gm/issues/559\n\nIt still isn't patched in `gm` so we can't upgrade to anything newer. For now, the workaround from that linked issue is to use \"Install legacy utilities\" during installation\n. @mlmorg Can we add a new label named \"blocked\" with color `#000000` and add it to this issue?\n\nhttps://github.com/uber/image-diff/labels\n. @dawsonbotsford `gm` is a dependency of our repo =/ It's going async which is why we don't see the rest of the stacktrace leading back to `image-diff`\r\n\r\nFor example: https://github.com/uber/image-diff/blob/1.6.3/lib/image-diff.js#L50-L55\r\n\r\n@feistar It looks like something killed the ImageMagick process which was performing the diff (or resizing an image), e.g. `kill -9 <imagemagick_process_id>`. Did you kill anything locally?. @feistar There are a bunch of asynchronous functions being called in a synchronous manner (e.g. `mkdirp` should be using `mkdirp.sync` or placing the rest of the code in its callback to verify the directory exists). However, none of them seem to look like they would cause a `SIGKILL` =/\r\n\r\nIs it possible that there are multiples of the same image being downloaded? If so, then ImageMagick might self terminate when the file it was talking to vanishes\r\n\r\nVarious notes on the race conditions:\r\n\r\n- `imagesAreSame` should use a callback with the boolean result from `imageDiff.getFullResult`. The current setup is attempting to use it synchronously when it doesn't/can't return anything; it can only callback =/\r\n- `request.head` and `request().pipe()` aren't doing any error checking\r\n- `mkdirp` should be `mkdirp.sync` or use a callback before getting to the `setInterval` piece\r\n\r\nI should also note that if you are doing image comparison for images that consistently the same size, you can skip `image-diff` and use `pixelmatch` which does everything in memory so you won't need to manage files:\r\n\r\nhttps://github.com/mapbox/pixelmatch. 1. No, `mkdirp` was designed after `coreutils' mkdir` which won't error out on `mkdir -p`:\r\n    - https://github.com/substack/node-mkdirp/blob/0.5.1/index.js#L27-L52\r\n    - In the case a directory already exists, Node.js would callback with the error code `EEXIST` (which means the file/folder already exists). `mkdirp` jumps to its `default` error case which verifies it is in fact a directory (which is it) and calls back with no error\r\n\r\n2/3. Okay, sounds good :+1: . I think we can close this issue due to inactivity. I'm down for supporting this but it seems strange there is no environment variable to do that (e.g. libraries will often allow `PHANTOMJS_BIN` or similar to specify the executable path). I'm going to open an issue on `gm` to see if we can add that support so all dependent libraries don't need to support passing in `appPath`. Ah, good eye. I'm sure we can replace that with `gm's _exec` or `_spawn` when the upstream issue is settled and we upgrade for support\r\n\r\nhttps://github.com/aheckmann/gm/blob/1.23.0/lib/command.js#L180-L208. I appreciate the consideration but it's an unnecessary change. We should only make such updates when the entire repo is on ES6. Unfortunately, that's far down on my priorities list due to everything working fine as is =/. Great, thanks @mlmorg. I've opened #56 to complete the README updates for GitHub and `npm`. This library is no longer supported. Please see the following alternatives:\r\n\r\n- https://github.com/gemini-testing/looks-same\r\n- https://github.com/mapbox/pixelmatch. This project is no longer supported. Please see the README. Resolved in `1.0.1`\n. For reference, the original never used `gm` =/\n\nhttps://github.com/twolfson/twolfson.com/blob/3.4.0/test/perceptual-tests/twolfson.com_test.js#L50-L162\n. Where are you seeing these file be created and where are the images which are being asserted against stored?\n\nI have a feeling this has something to do with the way we use add to temporary's filepath but would like to confirm.\n\nhttps://github.com/uber/image-diff/blob/0.2.0/lib/image-diff.js#L78\n. More proof that it looks like what we are seeing:\n\nhttps://github.com/vesln/temporary/blob/0.0.8/lib/file.js#L36-L38\n. ...and I have confirmed the behavior inside of `/tmp` locally.\n. It does but I am stumped how those local files are getting introduced. I have created a PR (#6) to deal with the ones in `/tmp`. Hopefully, it takes care of that local set as well.\n\nThe PR itself is awaiting code review. If you want to try it out locally, you can use:\n\n``` bash\nnpm install git://github.com/uber/image-diff#dev/cleanup.tempfiles.sqwished\n```\n. Alright, the PR has been merged and this was relased in `0.3.0`. Please verify everything is fixed. Thanks for the bug report!\n. Another tell tale sign will be that the `diffImage` does not exist on disk. However, I am not sure that will always be a required parameter so we should not assert against it.\n. Resolved in `0.5.0`\n. Resolved in `1.0.0`\n. /cc @mlmorg @Raynos \n. Currently, it is a strict comparison to `0`. However, we should be able to adjust the threshold up/down based on an option:\n\nhttps://github.com/uber/image-diff/blob/1.0.1/lib/image-diff.js#L85\n\n``` js\nimageDiff({\n  actualImage: 'checkerboard.png',\n  expectedImage: 'white.png',\n  diffImage: 'difference.png',\n  threshold: 20  // percentage of 100\n}, ...\n```\n\nWould that work for your case?\n. Cool. I am pretty busy with some other things at the moment but I will take a look by the end of next weekend. Feel free to open a PR to beat me to the punch =)\n. Nah, `40131.8` was an example. Although, I could see how it could be misconstrued. I believe the second value is the percentage. Another option is to use whatever absolute difference there is (first value). To see the limits, probably comparing a black square to a white square would work.\n. Not a problem. My ETA still stands. Fwiw, the approach would be something like change the regexp grouping to evaluate the perecentage, parse it to a float, and perform a comparison. The partially tedious part would be writing a test.\n\nhttps://github.com/uber/image-diff/blob/1.0.1/lib/image-diff.js#L76-L85\n\n``` js\n// Parse the percentage difference\nvar percentDifference = parseFloat(resultInfo[2], 10);\nif (isNaN(percentDifference)) {\n  return cb(new Error('Attempted to parse percentage difference from `image-diff\\'s stderr` but got `NaN` from \"' + resultInfo[2] + '\"'));\n}\n\n// Callback with pass/fail\nreturn cb(null, percentageDifference <= thresholdDifference);\n```\n. More GitHub related info can be found here:\n\nhttps://help.github.com/\n. @corysimmons It looks like #15 was ready to be merged but we never got a squash so we closed it due to inactivity =/ You can probably reuse that code or start fresh. The gist is here but we need tests. Can you add some?\n. I can't see your changes. Please push them to update the PR (pull request).\n. Getting closer, still needs tests though =/\n. Everything looks fine. Mostly fine tuning things now.\n. There seem to still be a few lingering inline comments that I would like to get sorted out. Can we take care of those?\n. Nope, I am referring to these:\n\nhttps://github.com/uber/image-diff/pull/15/files#r27454478\n\nhttps://github.com/uber/image-diff/pull/15/files#r27454735\n\nhttps://github.com/uber/image-diff/pull/15/files#r27454747\n. There is still this trailing comma comment left =/\n\nhttps://github.com/uber/image-diff/pull/15/files#r27454478\n\nAdditionally, we seem to be blocked by #16. I will bump the issue so it can be addressed.\n. Sweet, everything looks great now. Still waiting on a reply in #16 \n. This PR hasn't been active in over 1 year. We can probably close it due to inactivity\n. Any word on this? PR #15 is more/less ready and we should get this sorted out =/\n. Yea, definitely. I will take a look at adding a PR for this workflow by the end of this weekend. Who should I update the collaborators to?\n. Ah, right. I think I was waiting on input on #16. Can you provide feedback on that?\n\nhttps://github.com/uber/image-diff/issues/16\n. To prevent stacking PRs, I will make these comments inline. Once #18 has been landed, this should be landed with a patch bump in the semver and something in the CHANGELOG like:\n\n``` md\n1.0.3 - Repaired Travis CI tests by dropping `node@0.8` and adding `node@0.12`/`iojs`\n```\n. This PR will fail Travis CI due to #17 not being landed.\n. Awesome, thanks @mlmorg!\n. Can you please provide more explanation for the introduction of these changes? To me, I see mostly noise of different development styles and would prefer more context.\n. Ah, I see what's going on now.\n\nRegarding the `/* mocha: true */` option, I prefer to keep all the files running under the same lint conditions; one-off settings on a per-file basis makes the project feel inconsistent (because it is).\n\nFor `fs` interactions, `node` automatically coerces `/` to `\\` for Windows (similar to how it's doing it for the strings that include `/` in the `path.join` when they should be different parameters).\n\n``` js\n// Should really need to move to\npath.join(__dirname, 'test-files', 'checkerboard.png');\n// not\npath.join(__dirname, '/test-files/checkerboard.png');\n```\n\nhttps://github.com/joyent/node/blob/v0.12.2/lib/fs.js#L482-L491\n\nhttps://github.com/joyent/node/blob/v0.12.2/lib/path.js#L305-L327\n\nhttps://github.com/joyent/node/blob/v0.12.2/lib/path.js#L531-L533\n\nI am fine with upgrading `mocha` for the sake of more up to date dependencies but I think the other changes aren't a problem and causing PR noise.\n. Looks good :+1: \n. I disagree with this PR. `sudo: false` is fine but `fast_finish` are for maintainers to choose. When I do development, I prefer to see all failing builds. `node@0.11` was out as the latest for a very long time, I think it would be negligent to remove it from Travis CI entirely.\n. Can you elaborate more on the reason behind these changes? Also, can you squash this down to 1 commit?\n. After doing some research, it looks like `imagemagick` supports outputting the `diffImage` to `stdout`:\n\n``` bash\n# No output image is generated but piped to `/dev/null`\n compare -verbose -metric RMSE -highlight-color RED -compose Src checkerboard.png white.png - 1> /dev/null\n```\n\nWe can prob coerce `options.diffImage` to `-` when it's falsy to handle this case. However, then we will start to generate a buffer of the diff image which is wasteful (`child_process.exec` doesn't support ignoring this):\n\nhttps://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback\n\nAs a result, we should switch to `child_process.spawn` and use `ignore` for `stdio` on `stdout`:\n\nhttps://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options\n\nhttps://nodejs.org/api/child_process.html#child_process_options_stdio\n. @LinusU I have opened #24 which should fix this issue\n. @LinusU This has been patched/released in 1.1.0.\n\n@mlmorg I forgot to add a \"Fixes #23\" to the PR, can we close this issue? =/\n. bower/buffered-spawn#5 was landed/released and this PR is now on top of the patched version. This PR is good to be reviewed/landed.\n. Woot, thanks for the quick land @mlmorg =)\n. I don't understand this PR. Can you please explain it?\n. Left some comments on how to better structure the code. As far as naming goes with \"shadow\", I don't feel like that gives me the right idea. How about something more focused at opacity or averaging the images? (e.g. `underlayImagesAverage`)\n. Ah, k. I guess we should keep `shadow` for consistency in naming then. Thanks for pointing that out =)\n. Our dissimilarity threshold comments are getting buried due to a shifting diff. Previous to this PR, both locally and Travis CI have been passing without `dissimilarity-threshold`. What version of ImageMagick are you running?\n\n``` bash\ncompare --version\n```\n. One more thing to note is that typically PRs need to be squashed to 1 commit to be landed so we should start squashing on each update to this PR =/\n. I am running `6.7.7-10` locally and Travis CI is on `6.6.9-7` (seen from the logs). Can you try upgrading?\n\nhttps://travis-ci.org/uber/image-diff/jobs/67943987\n. Sweet, everything looks good. I am going to open up a follow up PR with an updated README/CHANGELOG to get this landed (weird process due to leaving the organization). I will post here with the PR number to subscribe but this should auto-close when it's landed.\n. Alright, #26 has been opened and hopefully this will be published soon =)\n. @064678147 You should be good to go. This has been landed/released in `1.2.0`\n. Awesome, thanks for the quick land @mlmorg =)\n. Yep, I don't think this is possible with imagemagick; either we provide an outfile or we don't (and ignore stdout/stderr). Can you explain your use case more? Typically people want consistent behavior for a low level library like this =/\n. Ah, alright. Thanks for the clarification. Since there is a workaround and no easy/performant support, I think it's prob best to close this issue.\n\n@mlmorg Can we close this issue?\n. Thanks @mlmorg =)\n. This is a duplicate of #27. The reason is our underlying engine (ImageMagick) has no options to perform this action. In the future, please be sure to search issues (both opened and closed) to prevent using unnecessary time.\n\n@mlmorg Can we please close this issue?\n. Can we add a test case for this comment? Maybe we should break out the extraction method so we can test it more independently (i.e. without needing an image)\n. Nah, I imagine that would require very large images to be stored in the repo. We should relocate the `.match` into its own function so it can be tested independently\n. Yea, but this will also put us in a more flexible state for the future. I am going to open a secondary PR to add that functionality. This PR looks good for now.\n. I have opened up #30 which brings this PR over the finish line and ready for landing.\n. Woot, thanks @mlmorg =)\n. Why did you open a duplicate issue for this? Please close it =/\n. Every repo does this differently -- for me, I think a PR can be considered as an issue tracker. This one can be closed =/\n. Can you explain how you used `gm` with Graphics Magick? I want to make sure I'm not assuming anything\n. Cool, thought so but wanted to make sure it wasn't you running `gm compare` on the CLI =P\n\nI think adding an option for disabling ImageMagick sounds reasonable. Let's go with the name `imageMagick` for consistency with `gm` (we can make it default to `true` for backwards compatibility).\n\n``` js\nimageDiff({imageMagick: false, actualImage, ...})\n```\n\nWould you be interested in writing a PR for this?\n. After getting the problematic images, we were able to track down the source of the problem and open a PR that seems to patch the issue. More specific details can be found on the PR itself\n\n#34 \n\nIf you would like to try out the PR locally, then it can be installed via a `git` URL via `npm`:\n\nhttps://docs.npmjs.com/files/package.json#git-urls-as-dependencies\n\n``` bash\n\"image-diff\": \"git://github.com/twolfson/image-diff#ef3aa9f\"\n```\n. Ah, I'm realizing that there is a very specific way I want #32 done. Effectively, if I tell you how to do it, then I will be writing the code so I guess I should just write the damn code.\n\nSorry for wasting your time on this x_x\n. For reference, problems in this current iteration:\n- All instances of `ImageDiff` are using a common global `gm` (should be per-instance)\n- We have a `require` inlined in a method, not done at load time which causes sync loading =(\n- We are still using `compare` instead of `gm` in a location\n. Alright, I can do that\n. Left some comments to resolve, additionally we need to take care of the `compare` call. We should be able to do something like:\n\n``` js\nthis.diffCmd = useImageMagick ? 'compare' : 'gm';\nthis.baseDiffArgs = useImageMagick ? [] : ['compare'];\n\n// Then in the compare call\nvar diffArgs = this.baseDiffArgs.concat([\n  '-verbose',\n  // ...\n])\n```\n. Can you upload the images you are comparing?\n. So does that mean everything is working as expected?\n. Ah, sorry. I meant on the unaltered `master` branch of this project (i.e. tag `1.3.0`/commit `d9dc82030b5d77d829c484151b7716290177175e`)\n. Ah, I have created a gist to reproduce the issue. It looks like a problem with the library, not your OS nor ImageMagick nor GraphicsMagick.\n\nhttps://gist.github.com/twolfson/710485d2941d0e19b5d5\n. After a bit of digging, it looks like we were using `this.crop` instead of `this.extent` x_x After making that change, everything seems to work as expected\n. I got something working locally but it broke again with the example images you provided. Unfortunately, I have to take off for the night. I will take a look at getting it resolved by the end of the weekend.\n. A replacement PR has been opened in #33, can you please close this PR?\n. Sorry, I meant #34\n. Awesome, thanks for the fast merge @mlmorg =)\n. Fortunately we are using our own `compare` invocation with `buffered-spawn` so we don't have that vulnerability.\n\nhttps://github.com/uber/image-diff/blob/1.5.0/lib/image-diff.js#L70-L96\n\nHowever, I agree that an upgrade would be best to prevent potential future regressions. Would you be interested in opening a PR?\n. @jacobp100 This should be resolved now that #38 has been landed and released in `1.5.1`. Can you please close this issue? (I no longer have write access on the repo despite being the author =/)\n. Looks good to me. @mlmorg Can we land this?\n\nProposed CHANGELOG message and release command:\n\n```\n1.5.1 - Upgraded to `gm@1.21.1` to resolve security advisory via @jacobp100 in #38\n```\n\n``` bash\n./release 1.5.1\n```\n. Sweet, thanks for the quick merge @mlmorg =)\n. We should be able to add a new function or option to expose that. I think a new function would be ideal so we can keep our types consistent. I will whip up a PR to get your feedback.\n. Alright, I have created a branch with my proposed content. Before I submit it as a PR though, I want to verify it will work for you. Can you look over the README changes here?\n\nhttps://github.com/twolfson/image-diff/tree/dev/add.result.callback.sqwished#imagediffgetfullresultoptions-cb\n. Yep, it should be the new method. Nice catch :+1: I will open a PR shortly\n. Alright, PR #40 has been opened up\n. No worries, thanks @mlmorg! =)\n. Looks like too much was fixed in that last commit. Left another comment. Can you please squash the commits into 1 commit as well?\n. Run `git rebase -i master` and change all commits except for the first 1 to \"squash\". Here's a demonstration:\n\nhttps://ariejan.net/2011/07/05/git-squash-your-latests-commits-into-one/\n\nOnce the commits are squashed into 1, you will need to force push the update. That can be done via:\n\n``` bash\ngit push origin patch-1 --force\n```\n. It is in this PR, maybe you are viewing a subset of the commits?\n\nhttps://github.com/uber/image-diff/pull/41/files#diff-354f30a63fb0907d4ad57269548329e3R3\n\nhttps://travis-ci.org/uber/image-diff/jobs/145087157\n. You need to run the `git rebase -i master` first and choose \"squash\" for all but the first commit as instructed =/\n. Also, make sure you are on the `patch-1` branch when running `git rebase`\n. You can but you should be able to do everything on this branch/PR =/\n. Looks good to me. Can someone land this as a patch revision and add to the CHANGELOG:\n\n```\n1.6.1 - Updated Node.js versions in Travis CI via @amilajack in #42\n```\n\nTo release, it should be:\n\n``` bash\n./release.sh 1.6.1\n```\n\n/cc @mlmorg \n. Awesome, thanks @mlmorg =D\n. AppVeyor support sounds reasonable but it can be time consuming to set up (i.e. push, wait for AppVeyor to fail for a trivial mistake, rinse, and repeat). I would be up for setting it up but I would need repo access again =/\n\nThat being said @amilajack, you didn't answer the question about if `image-diff` fails/throws an error on Windows right now =/\n. Sooo we could be fine on Windows then? This is more about getting 1 more system that we automatically check via CI?\n. Fwiw, Microsoft offers Windows VMs for testing Internet Explorer which can be reused for testing on Windows:\n\nhttps://developer.microsoft.com/en-us/microsoft-edge/tools/vms/\n. Looks good to me. Notes for release process:\n\nPatch version release should be fine. Here's some notes for the `CHANGELOG`:\n\n``` md\n1.6.2 - Updated Travis CI badge from PNG to SVG via @amilajack in #44\n```\n\nCommands for new release:\n\n``` bash\n./release.sh 1.6.2\n```\n\n/cc @mlmorg \n. Thanks @mlmorg! It looks like we forgot to update the CHANGELOG though =/\n. Libraries like `bluebird` offer `promisify` which should resolve this issue.\n\nhttp://bluebirdjs.com/docs/api/promise.promisify.html\n\n``` js\nvar imageDiff = Promise.promisify(require('image-diff'));\n```\n\n@mlmorg Can we please close this issue?\n. Looks good to me. Here's the CHANGELOG and release command:\n\n``` md\n1.6.3 - Fixed word splitting in `release.sh` via @andlrc in #47\n```\n\n``` bash\n./release.sh 1.6.3\n```\n. Thanks @mlmorg =)\n. Yea, we are open to supporting GraphicsMagick. In fact, #33 was working on this but it turned out to be the wrong solution to a different problem. The PR is rather incomplete but it's a good starting point for parameters and edge cases to handle\n. What happens when you run the command outside of `image-diff`?\n\n```\nidentify -ping -format %wx%h run-first/login-2-after.png\n```\n. That's peculiar; ImageMagick never has a prefix and GraphicsMagick typically uses `gm` as its prefix. Can you link us to where you installed ImageMagick from?\n\nhttp://www.imagemagick.org/script/command-line-processing.php\n\nhttp://www.graphicsmagick.org/convert.html\n. Ah, interesting. After doing some research on the `gm` repo, this is due to name conflicts with some Windows executables.\n\nhttps://github.com/aheckmann/gm/issues/559\n\nIt still isn't patched in `gm` so we can't upgrade to anything newer. For now, the workaround from that linked issue is to use \"Install legacy utilities\" during installation\n. @mlmorg Can we add a new label named \"blocked\" with color `#000000` and add it to this issue?\n\nhttps://github.com/uber/image-diff/labels\n. @dawsonbotsford `gm` is a dependency of our repo =/ It's going async which is why we don't see the rest of the stacktrace leading back to `image-diff`\r\n\r\nFor example: https://github.com/uber/image-diff/blob/1.6.3/lib/image-diff.js#L50-L55\r\n\r\n@feistar It looks like something killed the ImageMagick process which was performing the diff (or resizing an image), e.g. `kill -9 <imagemagick_process_id>`. Did you kill anything locally?. @feistar There are a bunch of asynchronous functions being called in a synchronous manner (e.g. `mkdirp` should be using `mkdirp.sync` or placing the rest of the code in its callback to verify the directory exists). However, none of them seem to look like they would cause a `SIGKILL` =/\r\n\r\nIs it possible that there are multiples of the same image being downloaded? If so, then ImageMagick might self terminate when the file it was talking to vanishes\r\n\r\nVarious notes on the race conditions:\r\n\r\n- `imagesAreSame` should use a callback with the boolean result from `imageDiff.getFullResult`. The current setup is attempting to use it synchronously when it doesn't/can't return anything; it can only callback =/\r\n- `request.head` and `request().pipe()` aren't doing any error checking\r\n- `mkdirp` should be `mkdirp.sync` or use a callback before getting to the `setInterval` piece\r\n\r\nI should also note that if you are doing image comparison for images that consistently the same size, you can skip `image-diff` and use `pixelmatch` which does everything in memory so you won't need to manage files:\r\n\r\nhttps://github.com/mapbox/pixelmatch. 1. No, `mkdirp` was designed after `coreutils' mkdir` which won't error out on `mkdir -p`:\r\n    - https://github.com/substack/node-mkdirp/blob/0.5.1/index.js#L27-L52\r\n    - In the case a directory already exists, Node.js would callback with the error code `EEXIST` (which means the file/folder already exists). `mkdirp` jumps to its `default` error case which verifies it is in fact a directory (which is it) and calls back with no error\r\n\r\n2/3. Okay, sounds good :+1: . I think we can close this issue due to inactivity. I'm down for supporting this but it seems strange there is no environment variable to do that (e.g. libraries will often allow `PHANTOMJS_BIN` or similar to specify the executable path). I'm going to open an issue on `gm` to see if we can add that support so all dependent libraries don't need to support passing in `appPath`. Ah, good eye. I'm sure we can replace that with `gm's _exec` or `_spawn` when the upstream issue is settled and we upgrade for support\r\n\r\nhttps://github.com/aheckmann/gm/blob/1.23.0/lib/command.js#L180-L208. I appreciate the consideration but it's an unnecessary change. We should only make such updates when the entire repo is on ES6. Unfortunately, that's far down on my priorities list due to everything working fine as is =/. Great, thanks @mlmorg. I've opened #56 to complete the README updates for GitHub and `npm`. This library is no longer supported. Please see the following alternatives:\r\n\r\n- https://github.com/gemini-testing/looks-same\r\n- https://github.com/mapbox/pixelmatch. This project is no longer supported. Please see the README. ",
    "jkphl": "Yes, you might be right! I'm also using image-diff in another module, but there it's from within a nodeunit test case (it's a Grunt plugin), and no temporary files remain lying around. Instead, there are lots of them in the `/tmp` folder.\n\nThis is my directory and file setup (in case you still need it):\n\n``` bash\nmodule-root\n\\- 1391906572581.8438\n\\- 1391906572586.279\n\\- test\n|   \\- testcase.js\n|   \\- expected\n|       \\- sprite.png\n\\- tmp\n    \\- css\n        \\- svg\n            \\- sprite.png\n```\n\nI'm running the test from the module root folder per `npm test`. The test case `test/testcase.js` issues:\n\n``` javascript\nimageDiff({\n  actualImage: path.join(__dirname, '..', 'tmp', 'css', 'svg', 'sprite.png'),\n  expectedImage: path.join(__dirname, 'expected', 'sprite.png'),\n  diffImage: path.join(__dirname, '..', 'tmp', 'css', 'svg', 'sprite.diff.png'),\n  function(err, imagesAreSame) { /* ... */ }\n});\n```\n\nDoes this help?\n. Great, thanks for your efforts! As it's Sunday and I'm not at my office, I'm not sure if I manage to test it today. I'll try later and get back to you then. Cheers, Joschi\n. Thanks, works like a charm now! :)\n. Yes, you might be right! I'm also using image-diff in another module, but there it's from within a nodeunit test case (it's a Grunt plugin), and no temporary files remain lying around. Instead, there are lots of them in the `/tmp` folder.\n\nThis is my directory and file setup (in case you still need it):\n\n``` bash\nmodule-root\n\\- 1391906572581.8438\n\\- 1391906572586.279\n\\- test\n|   \\- testcase.js\n|   \\- expected\n|       \\- sprite.png\n\\- tmp\n    \\- css\n        \\- svg\n            \\- sprite.png\n```\n\nI'm running the test from the module root folder per `npm test`. The test case `test/testcase.js` issues:\n\n``` javascript\nimageDiff({\n  actualImage: path.join(__dirname, '..', 'tmp', 'css', 'svg', 'sprite.png'),\n  expectedImage: path.join(__dirname, 'expected', 'sprite.png'),\n  diffImage: path.join(__dirname, '..', 'tmp', 'css', 'svg', 'sprite.diff.png'),\n  function(err, imagesAreSame) { /* ... */ }\n});\n```\n\nDoes this help?\n. Great, thanks for your efforts! As it's Sunday and I'm not at my office, I'm not sure if I manage to test it today. I'll try later and get back to you then. Cheers, Joschi\n. Thanks, works like a charm now! :)\n. ",
    "Raynos": "Rest looks fine.\n. looks good\n. Lookgs good.\n. Looks good.\n. Rest looks fine.\n. looks good\n. Lookgs good.\n. Looks good.\n. ",
    "joysamcyborg": "Never mind. On windows u just have add location of ImageMagic executable to the PATH.\n. Never mind. On windows u just have add location of ImageMagic executable to the PATH.\n. ",
    "corysimmons": "@twolfson Absolutely! This would be perfect and I'd implement it in testing suites across a couple of my libraries immediately! :dancer: \n. https://github.com/uber/image-diff/blob/1.0.1/lib/image-diff.js#L72 `40131.8` is the end of the range? So I'd just need to write something that converted `40131.8` to `100`?\n. I think this is probably out of my JS skill range and I'm in no big rush so I'm happy to wait on your expertise to implement this the correct way. =)\n\n<sup>Pretty professional way of saying, \"I R DUM.\"</sup>\n. Well, I'll wait until it's implemented then I'll tackle the issue of coming up with a nice standard way to do visual tests with it.\n\nReally appreciate your work on this.\n. @nikchosh \n1. Fork the repo to your own account\n2. Clone that repo to your machine `git clone`\n3. Make changes and create commits https://github.com/erlang/otp/wiki/Writing-good-commit-messages (I use a tool called GitX to do this http://rowanj.github.io/gitx/)\n4. `git push` those commits to your fork\n5. Open a Pull Request between the original repo and your fork\n\nIf you have problems, can you just https://gist.github.com your updated code?\n. @bevacqua Nice! Thanks for pinging me. =)\n. Can you open Issues on your fork?\n. Was just gonna ask for some docs.\n. :+1: \n. Reopening this in hopes of uniting the two libraries. I can open a proper PR for this if you'd be interested in merging.. @twolfson Absolutely! This would be perfect and I'd implement it in testing suites across a couple of my libraries immediately! :dancer: \n. https://github.com/uber/image-diff/blob/1.0.1/lib/image-diff.js#L72 `40131.8` is the end of the range? So I'd just need to write something that converted `40131.8` to `100`?\n. I think this is probably out of my JS skill range and I'm in no big rush so I'm happy to wait on your expertise to implement this the correct way. =)\n\n<sup>Pretty professional way of saying, \"I R DUM.\"</sup>\n. Well, I'll wait until it's implemented then I'll tackle the issue of coming up with a nice standard way to do visual tests with it.\n\nReally appreciate your work on this.\n. @nikchosh \n1. Fork the repo to your own account\n2. Clone that repo to your machine `git clone`\n3. Make changes and create commits https://github.com/erlang/otp/wiki/Writing-good-commit-messages (I use a tool called GitX to do this http://rowanj.github.io/gitx/)\n4. `git push` those commits to your fork\n5. Open a Pull Request between the original repo and your fork\n\nIf you have problems, can you just https://gist.github.com your updated code?\n. @bevacqua Nice! Thanks for pinging me. =)\n. Can you open Issues on your fork?\n. Was just gonna ask for some docs.\n. :+1: \n. Reopening this in hopes of uniting the two libraries. I can open a proper PR for this if you'd be interested in merging.. ",
    "nikchosh": "@twolfson I am new to git and cannot push but here is the diff output of what I have done which works perfectly by providing a threshold and also returns the path+name of the diff image (so, that the user may delete if blank)\n@corysimmons this should solve your issue.\n\ndiff --git a/lib/image-diff.js b/lib/image-diff.js\nindex 1c6441e..b0c0f7e 100644\n--- a/lib/image-diff.js\n+++ b/lib/image-diff.js\n@@ -73,7 +73,7 @@ ImageDiff.createDiff = function (options, cb) {\n     // DEV: According to http://www.imagemagick.org/discourse-server/viewtopic.php?f=1&t=17284\n     // DEV: These values are the total square root mean square (RMSE) pixel difference across all pixels and its percentage\n     // TODO: This is not very multi-lengual =(\n-    var resultInfo = stderr.match(/all: (\\d+.?\\d_) ((\\d+.?\\d_))/);\n-    var resultInfo = stderr.match(/all: (\\d+.?\\d_) ((._?))/);\n  \n   // If there was no resultInfo, throw a fit\n   if (!resultInfo) {\n  @@ -81,8 +81,8 @@ ImageDiff.createDiff = function (options, cb) {\n   }\n  \n   // Callback with pass/fail\n-    var totalDifference = resultInfo[1];\n-    return cb(null, totalDifference === '0');\n-    var totalDifference = resultInfo[2]; // this is the percentage difference\n-    return cb(null, parseFloat(totalDifference) <= options.threshold, options.diffPath);\n  });\n  };\n  ImageDiff.prototype = {\n  @@ -91,6 +91,7 @@ ImageDiff.prototype = {\n   var actualPath = options.actualImage;\n   var expectedPath = options.expectedImage;\n   var diffPath = options.diffImage;\n-    var threshold = options.threshold;\n  \n   // Assert our options are passed in\n   if (!actualPath) {\n  @@ -187,9 +188,11 @@ ImageDiff.prototype = {\n       ImageDiff.createDiff({\n         actualPath: actualTmpPath,\n         expectedPath: expectedTmpPath,\n-          diffPath: diffPath\n-        }, function saveResult (err, _imagesAreSame) {\n-          diffPath: diffPath,\n-          threshold: threshold\n-        }, function saveResult (err, _imagesAreSame, _diffPath) {\n         imagesAreSame = _imagesAreSame;\n-          diffPath = _diffPath;\n         cb(err);\n       });\n     }\n  @@ -202,7 +205,7 @@ ImageDiff.prototype = {\n       fs.unlink(filepath, cb);\n     }, function callOriginalCallback (_err) {\n       // Callback with the imagesAreSame\n-        callback(err, imagesAreSame);\n-        callback(err, imagesAreSame, diffPath);\n     });\n   });\n  }\n. Ok, the diff does not appear properly with \"plus\" and \"minus\" signs - I have to see how to properly branch and submit\n. Ok done, thanks.\n\nNick\n\nOn Mon, Mar 30, 2015 at 8:48 AM, Cory Simmons notifications@github.com\nwrote:\n\n> @nikchosh https://github.com/nikchosh\n> 1. Fork the repo to your own account\n> 2. Clone that repo to your machine git clone\n> 3. Make changes and create commits\n>    https://github.com/erlang/otp/wiki/Writing-good-commit-messages (I use\n>    a tool called GitX to do this http://rowanj.github.io/gitx/)\n> 4. git push those commits to your fork\n> 5. Open a Pull Request between the original repo and your fork\n> \n> If you have problems, can you just https://gist.github.com your updated\n> code?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/uber/image-diff/issues/14#issuecomment-87462162.\n. I have included all your suggestions (ultra new to git -- sorry to make you my mentor :) ) I need to look at the tests. I am tester, and getting feet wet in Node development\n. Tests added - probably documentation needs to be updated too\n. Taken all your comments into account - please review\n. Would you like me to remove all // comments DEV: etc.\n. Hi Todd, any way to merge the changes? :)\n. Commas fixed\n. @twolfson I am new to git and cannot push but here is the diff output of what I have done which works perfectly by providing a threshold and also returns the path+name of the diff image (so, that the user may delete if blank)\n@corysimmons this should solve your issue.\n\ndiff --git a/lib/image-diff.js b/lib/image-diff.js\nindex 1c6441e..b0c0f7e 100644\n--- a/lib/image-diff.js\n+++ b/lib/image-diff.js\n@@ -73,7 +73,7 @@ ImageDiff.createDiff = function (options, cb) {\n     // DEV: According to http://www.imagemagick.org/discourse-server/viewtopic.php?f=1&t=17284\n     // DEV: These values are the total square root mean square (RMSE) pixel difference across all pixels and its percentage\n     // TODO: This is not very multi-lengual =(\n-    var resultInfo = stderr.match(/all: (\\d+.?\\d_) ((\\d+.?\\d_))/);\n-    var resultInfo = stderr.match(/all: (\\d+.?\\d_) ((._?))/);\n  \n   // If there was no resultInfo, throw a fit\n   if (!resultInfo) {\n  @@ -81,8 +81,8 @@ ImageDiff.createDiff = function (options, cb) {\n   }\n  \n   // Callback with pass/fail\n-    var totalDifference = resultInfo[1];\n-    return cb(null, totalDifference === '0');\n-    var totalDifference = resultInfo[2]; // this is the percentage difference\n-    return cb(null, parseFloat(totalDifference) <= options.threshold, options.diffPath);\n  });\n  };\n  ImageDiff.prototype = {\n  @@ -91,6 +91,7 @@ ImageDiff.prototype = {\n   var actualPath = options.actualImage;\n   var expectedPath = options.expectedImage;\n   var diffPath = options.diffImage;\n-    var threshold = options.threshold;\n  \n   // Assert our options are passed in\n   if (!actualPath) {\n  @@ -187,9 +188,11 @@ ImageDiff.prototype = {\n       ImageDiff.createDiff({\n         actualPath: actualTmpPath,\n         expectedPath: expectedTmpPath,\n-          diffPath: diffPath\n-        }, function saveResult (err, _imagesAreSame) {\n-          diffPath: diffPath,\n-          threshold: threshold\n-        }, function saveResult (err, _imagesAreSame, _diffPath) {\n         imagesAreSame = _imagesAreSame;\n-          diffPath = _diffPath;\n         cb(err);\n       });\n     }\n  @@ -202,7 +205,7 @@ ImageDiff.prototype = {\n       fs.unlink(filepath, cb);\n     }, function callOriginalCallback (_err) {\n       // Callback with the imagesAreSame\n-        callback(err, imagesAreSame);\n-        callback(err, imagesAreSame, diffPath);\n     });\n   });\n  }\n. Ok, the diff does not appear properly with \"plus\" and \"minus\" signs - I have to see how to properly branch and submit\n. Ok done, thanks.\n\nNick\n\nOn Mon, Mar 30, 2015 at 8:48 AM, Cory Simmons notifications@github.com\nwrote:\n\n> @nikchosh https://github.com/nikchosh\n> 1. Fork the repo to your own account\n> 2. Clone that repo to your machine git clone\n> 3. Make changes and create commits\n>    https://github.com/erlang/otp/wiki/Writing-good-commit-messages (I use\n>    a tool called GitX to do this http://rowanj.github.io/gitx/)\n> 4. git push those commits to your fork\n> 5. Open a Pull Request between the original repo and your fork\n> \n> If you have problems, can you just https://gist.github.com your updated\n> code?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/uber/image-diff/issues/14#issuecomment-87462162.\n. I have included all your suggestions (ultra new to git -- sorry to make you my mentor :) ) I need to look at the tests. I am tester, and getting feet wet in Node development\n. Tests added - probably documentation needs to be updated too\n. Taken all your comments into account - please review\n. Would you like me to remove all // comments DEV: etc.\n. Hi Todd, any way to merge the changes? :)\n. Commas fixed\n. ",
    "bevacqua": "@corysimmons Just FYI, use it today with `image-diff-2` on npm. https://github.com/bevacqua/image-diff-2. The merge was taking way too long for my needs.\n. Sure but I won't be improving it, it's just temporary because I needed it asap\n. Ah, that I can do\n. https://github.com/bevacqua/image-diff-2/commit/32ef6b261857911b5348ea3323cc56db6d04f278\n. @corysimmons Just FYI, use it today with `image-diff-2` on npm. https://github.com/bevacqua/image-diff-2. The merge was taking way too long for my needs.\n. Sure but I won't be improving it, it's just temporary because I needed it asap\n. Ah, that I can do\n. https://github.com/bevacqua/image-diff-2/commit/32ef6b261857911b5348ea3323cc56db6d04f278\n. ",
    "XhmikosR": "I honestly don't see where you see style changes.\n\nBut, anyway, `mocha` is a JSHint option which adds the needed predefined variables; it wasn't present in the ancient version currently used, hence the accompanied JSHint version update.\n\nAs for `path.join` it's the only cross-platform way to do things like that in node:\n\n```\n__dirname + '/actual-files':  C:\\Users\\xmr\\Desktop\\image-diff\\test/actual-files\npath.join(__dirname, '/actual-files'):  C:\\Users\\xmr\\Desktop\\image-diff\\test\\actual-files\n```\n. It's not the same conditions, though. You are polluting all the files with useless globals when they are only needed in one test file...\n\nAnyway, I disagree with your whole PR noise; I find these changes consistent and cleaner, so closing this.\n. 0.11 was never stable and if people use it for production there are being ignorant to say the least.\n\nAs for `fast_finish`, you will see the failures when they happen. But anyway, no point in trying to convince anyone.\n. I honestly don't see where you see style changes.\n\nBut, anyway, `mocha` is a JSHint option which adds the needed predefined variables; it wasn't present in the ancient version currently used, hence the accompanied JSHint version update.\n\nAs for `path.join` it's the only cross-platform way to do things like that in node:\n\n```\n__dirname + '/actual-files':  C:\\Users\\xmr\\Desktop\\image-diff\\test/actual-files\npath.join(__dirname, '/actual-files'):  C:\\Users\\xmr\\Desktop\\image-diff\\test\\actual-files\n```\n. It's not the same conditions, though. You are polluting all the files with useless globals when they are only needed in one test file...\n\nAnyway, I disagree with your whole PR noise; I find these changes consistent and cleaner, so closing this.\n. 0.11 was never stable and if people use it for production there are being ignorant to say the least.\n\nAs for `fast_finish`, you will see the failures when they happen. But anyway, no point in trying to convince anyone.\n. ",
    "LinusU": ":+1: Thank you, looks good\n. :+1: Thank you, looks good\n. ",
    "richardmcsong": "Sorry! forgot to add a description. I've updated it.\n. Thanks for the comments! I'll take them into account.\nI used the term shadow because that's the term imagemagick used on this page: http://www.imagemagick.org/Usage/compare/ \n. the version of imagemagick im running is:\nVersion: ImageMagick 6.5.4-7 2014-02-10 Q16 OpenMP http://www.imagemagick.org\nCopyright: Copyright (C) 1999-2009 ImageMagick Studio LLC\n. whoops wrong button\n. I shouldve squashed everything. I upgraded to 6.9, and found the dissimilarity threshold unnecessary, so thats good.\n. Sorry! forgot to add a description. I've updated it.\n. Thanks for the comments! I'll take them into account.\nI used the term shadow because that's the term imagemagick used on this page: http://www.imagemagick.org/Usage/compare/ \n. the version of imagemagick im running is:\nVersion: ImageMagick 6.5.4-7 2014-02-10 Q16 OpenMP http://www.imagemagick.org\nCopyright: Copyright (C) 1999-2009 ImageMagick Studio LLC\n. whoops wrong button\n. I shouldve squashed everything. I upgraded to 6.9, and found the dissimilarity threshold unnecessary, so thats good.\n. ",
    "mike-engel": "I'm currently writing a CLI tool to take a bunch of screenshots on various webpages, and then compare them against a set of base images to catch any visual regressions from CSS/HTML changes. It's misleading to me to output an image to the `diff` directory, when there's actually no diff. I'm taking care of this on my end by watching for `imagesAreSame` and deleting it if they are the same, but I thought it would be nice to have an option here to not produce a blank image with no diff. \n\nSorry if that doesn't make sense, it's early :smile: \n. I'm currently writing a CLI tool to take a bunch of screenshots on various webpages, and then compare them against a set of base images to catch any visual regressions from CSS/HTML changes. It's misleading to me to output an image to the `diff` directory, when there's actually no diff. I'm taking care of this on my end by watching for `imagesAreSame` and deleting it if they are the same, but I thought it would be nice to have an option here to not produce a blank image with no diff. \n\nSorry if that doesn't make sense, it's early :smile: \n. ",
    "tinganho": "@twolfson oops sorry for duplication.\n. @twolfson oops sorry for duplication.\n. ",
    "jacobp100": "Do you want a test with two images that are so similar to cause this scenario?\n. It\u2019s certainly possible to add these tests. Although Imagemagick is pretty bad for maintaining compatibility, so it might not be the best use of time.\n. The other is a PR. This is to track the issue.\n. Do you want a test with two images that are so similar to cause this scenario?\n. It\u2019s certainly possible to add these tests. Although Imagemagick is pretty bad for maintaining compatibility, so it might not be the best use of time.\n. The other is a PR. This is to track the issue.\n. ",
    "x3au": "Just had to change the line\n**var gm = require('gm').subClass({imageMagick: true});**\nto\n**var gm = require('gm');**\n\nThanks!\n. Sounds good, will do, thanks!\n. Thanks for the feedback. To be honest, I am new to javascript/node, so would be happy to use this opportunity to learn. If it's convenient for you to make changes, that's great as well.\n. Cool, will give a try, thanks!\n. I made all the changes except the \"compare\" call. When I test locally with imageMagick set to false, I stumbled on the same issue that I had faced earlier which triggered this change. The call below creates a one pixel file for expectedTmpPath and actualTmpPath:\n\n```\nfillFromTo(this.gm(actualPath), {\n                fromWidth: actualSize.width,\n                fromHeight: actualSize.height,\n                toWidth: maxWidth,\n                toHeight: maxHeight\n              }).write(actualTmpPath, cb);\n```\n\nAny ideas what could cause this issue? Before these changes, the problem occurred only for ImageMagick library, now I see it happening for GraphicsMagick as well.\n\nThanks. (pushing the code changes for you to get an idea)\n. ![copyrights](https://cloud.githubusercontent.com/assets/12519177/13760709/b8f09058-e9f1-11e5-8fb2-fc14d6914fb8.png)\n![copyrights2](https://cloud.githubusercontent.com/assets/12519177/13760710/b8f1a272-e9f1-11e5-8e3a-c1b4bce35f9c.png)\n. Uploaded the images. What I had discovered was the crop function creates one pixel file if parameters passed are incorrect.\n. I don't think so. Image comparison always succeeds no matter what images are because the comparison is taking place between expectedTmpPath and actualTmpPath, both of which are 1 pixel file. This happens in following scenarios:\n\nimage-diff 1.3.0 on master - issue occurs\nchangeset [579fb8c](https://github.com/x3au/image-diff/commit/579fb8c7815b4753390020ea1cc59532ab158a47) with imageMagick set to false - does not occur\nchangeset [84a6ef4](https://github.com/x3au/image-diff/commit/84a6ef496bd826c540dc508bd7c1aaff1c39f44a) with imageMagick set to false or true - issue occurs\n\nNot sure what the root cause is.\n. _1.3.0/commit d9dc82030b5d77d829c484151b7716290177175e_ has the issue, which is why I started with this approach.\n. Great, hope you can get this into master soon. Thanks again!\n. Sounds good, thanks!\n. Thanks for the fix!\n. Diff shows as attached\n![difimage](https://cloud.githubusercontent.com/assets/12519177/13891318/a1420292-ed0d-11e5-8f6b-58a4a3a39715.png)\n. Never mind, probably I am doing something wrong.\n. Just had to change the line\n**var gm = require('gm').subClass({imageMagick: true});**\nto\n**var gm = require('gm');**\n\nThanks!\n. Sounds good, will do, thanks!\n. Thanks for the feedback. To be honest, I am new to javascript/node, so would be happy to use this opportunity to learn. If it's convenient for you to make changes, that's great as well.\n. Cool, will give a try, thanks!\n. I made all the changes except the \"compare\" call. When I test locally with imageMagick set to false, I stumbled on the same issue that I had faced earlier which triggered this change. The call below creates a one pixel file for expectedTmpPath and actualTmpPath:\n\n```\nfillFromTo(this.gm(actualPath), {\n                fromWidth: actualSize.width,\n                fromHeight: actualSize.height,\n                toWidth: maxWidth,\n                toHeight: maxHeight\n              }).write(actualTmpPath, cb);\n```\n\nAny ideas what could cause this issue? Before these changes, the problem occurred only for ImageMagick library, now I see it happening for GraphicsMagick as well.\n\nThanks. (pushing the code changes for you to get an idea)\n. ![copyrights](https://cloud.githubusercontent.com/assets/12519177/13760709/b8f09058-e9f1-11e5-8fb2-fc14d6914fb8.png)\n![copyrights2](https://cloud.githubusercontent.com/assets/12519177/13760710/b8f1a272-e9f1-11e5-8e3a-c1b4bce35f9c.png)\n. Uploaded the images. What I had discovered was the crop function creates one pixel file if parameters passed are incorrect.\n. I don't think so. Image comparison always succeeds no matter what images are because the comparison is taking place between expectedTmpPath and actualTmpPath, both of which are 1 pixel file. This happens in following scenarios:\n\nimage-diff 1.3.0 on master - issue occurs\nchangeset [579fb8c](https://github.com/x3au/image-diff/commit/579fb8c7815b4753390020ea1cc59532ab158a47) with imageMagick set to false - does not occur\nchangeset [84a6ef4](https://github.com/x3au/image-diff/commit/84a6ef496bd826c540dc508bd7c1aaff1c39f44a) with imageMagick set to false or true - issue occurs\n\nNot sure what the root cause is.\n. _1.3.0/commit d9dc82030b5d77d829c484151b7716290177175e_ has the issue, which is why I started with this approach.\n. Great, hope you can get this into master soon. Thanks again!\n. Sounds good, thanks!\n. Thanks for the fix!\n. Diff shows as attached\n![difimage](https://cloud.githubusercontent.com/assets/12519177/13891318/a1420292-ed0d-11e5-8f6b-58a4a3a39715.png)\n. Never mind, probably I am doing something wrong.\n. ",
    "ghost": "wow!  that was fast!  Thank you.\n\nYes, that looks to be exactly what we need.  One minor thing in the README example, should the new method be invoked?  e.g.\n\n```\nvar imageDiff = require('image-diff');\nimageDiff.getFullResult({   // <~ new method here\n  actualImage: 'checkerboard.png',\n  expectedImage: 'white.png',\n  diffImage: 'difference.png',\n}, function (err, result) {\n  // result = {total: 46340.2, difference: 0.707107}\n});\n```\n. wow!  that was fast!  Thank you.\n\nYes, that looks to be exactly what we need.  One minor thing in the README example, should the new method be invoked?  e.g.\n\n```\nvar imageDiff = require('image-diff');\nimageDiff.getFullResult({   // <~ new method here\n  actualImage: 'checkerboard.png',\n  expectedImage: 'white.png',\n  diffImage: 'difference.png',\n}, function (err, result) {\n  // result = {total: 46340.2, difference: 0.707107}\n});\n```\n. ",
    "amilajack": "Sure thing! Fixed.\n. I haven't squashed a commit before. How would I do that?\n. The command\n\n```\ngit push origin patch-1 --force\n```\n\nisnt working for me. It's returning `Everything up-to-date` but the squash doesnt seem to be pushed.\n. I see. Can I close this PR and make a new one with these revisions?\n. I actually dont use windows directly. But my app uses image-diff to test differences. It would be nice if the same tests could run on windows.\n. I can't test on windows because I dont have a windows machine.\n. Sure\n. Sure thing! Fixed.\n. I haven't squashed a commit before. How would I do that?\n. The command\n\n```\ngit push origin patch-1 --force\n```\n\nisnt working for me. It's returning `Everything up-to-date` but the squash doesnt seem to be pushed.\n. I see. Can I close this PR and make a new one with these revisions?\n. I actually dont use windows directly. But my app uses image-diff to test differences. It would be nice if the same tests could run on windows.\n. I can't test on windows because I dont have a windows machine.\n. Sure\n. ",
    "dawsbot": "Why don't we have node v6 being tested in this PR? Just joining this discussion.\n. Since we don't have Windows machines, it's not likely that Windows will be tested on. Although, It might be worth it to ensure the current functions are Windows safe.\n\n@amilajack, does it already work for you on Windows? If so, what versions of things are you running? Consider using [`sist shell node`](https://github.com/dawsonbotsford/sist) to quickly achieve that info.\n. Since y'all aren't in immediate need of Windows support, and it's not the standard to run Windows CI on Uber Open-Source repo's, I'm closing this. Feel free to re-open if the need for Windows support/testing becomes more important.\n. LGTM!\n. Can you link to the full repository? This line makes it look like the error is in another dependency: \r\n\r\n`at ChildProcess.onExit (/root/workspace/node.js-crawler-master/node_modules/gm/lib/command.js:289:17)`. Why don't we have node v6 being tested in this PR? Just joining this discussion.\n. Since we don't have Windows machines, it's not likely that Windows will be tested on. Although, It might be worth it to ensure the current functions are Windows safe.\n\n@amilajack, does it already work for you on Windows? If so, what versions of things are you running? Consider using [`sist shell node`](https://github.com/dawsonbotsford/sist) to quickly achieve that info.\n. Since y'all aren't in immediate need of Windows support, and it's not the standard to run Windows CI on Uber Open-Source repo's, I'm closing this. Feel free to re-open if the need for Windows support/testing becomes more important.\n. LGTM!\n. Can you link to the full repository? This line makes it look like the error is in another dependency: \r\n\r\n`at ChildProcess.onExit (/root/workspace/node.js-crawler-master/node_modules/gm/lib/command.js:289:17)`. ",
    "paolo-tanium": "```\npaolo.delmundo@WLREM1611473 MINGW64 ~/Code/discover/e2e/test-reports (discoverjs)\n$ imagemagick identify -ping -format %wx%h run-first/login-2-after.png\nbash: imagemagick: command not found\n```\n\nPrepending with imagemagic works:\n\n```\npaolo.delmundo@WLREM1611473 MINGW64 ~/Code/discover/e2e/test-reports (discoverjs)\n$ magick identify -ping -format %wx%h run-first/login-2-after.png\n1008x675\n```\n. http://www.imagemagick.org/script/binary-releases.php in the Windows binaries section\n. ```\npaolo.delmundo@WLREM1611473 MINGW64 ~/Code/discover/e2e/test-reports (discoverjs)\n$ imagemagick identify -ping -format %wx%h run-first/login-2-after.png\nbash: imagemagick: command not found\n```\n\nPrepending with imagemagic works:\n\n```\npaolo.delmundo@WLREM1611473 MINGW64 ~/Code/discover/e2e/test-reports (discoverjs)\n$ magick identify -ping -format %wx%h run-first/login-2-after.png\n1008x675\n```\n. http://www.imagemagick.org/script/binary-releases.php in the Windows binaries section\n. ",
    "feistar": "Ubuntu 12.04.5 LTS and node v7.2.1\r\n. Thank you guys, @dawsonbotsford @twolfson , here is the code:\r\nhttps://github.com/feistar/AirImageDownloader\r\nvery simple, and I think nothing is killing the process, and I can run example correctly in this environment. Thank you very much,\n\n1. the folder is already existed, will the mkdirp still cause the SIGKILL?\n2. I returned a boolean in imageDiff.getFullResult in last version but it\nlooks like the error cannot be printed correctly, so I just use console.log\ntemporary.\n3. let me try to make other thins sync and see what's going on.\n\nThank you very much for send me pixelmatch. It's very helpful\n\nOn Wed, Dec 14, 2016 at 1:37 PM, Todd Wolfson <notifications@github.com>\nwrote:\n\n> @feistar <https://github.com/feistar> There are a bunch of asynchronous\n> functions being called in a synchronous manner (e.g. mkdirp should be\n> using mkdirp.sync or placing the rest of the code in its callback to\n> verify the directory exists). However, none of them seem to look like they\n> would cause a SIGKILL =/\n>\n> Is it possible that there are multiples of the same image being\n> downloaded? If so, then ImageMagick might self terminate when the file it\n> was talking to vanishes\n>\n> Various notes on the race conditions:\n>\n>    - imagesAreSame should use a callback with the boolean result from\n>    imageDiff.getFullResult. The current setup is attempting to use it\n>    synchronously when it doesn't/can't return anything; it can only callback =/\n>    - request.head and request().pipe() aren't doing any error checking\n>    - mkdirp should be mkdirp.sync or use a callback before getting to the\n>    setInterval piece\n>\n> I should also note that if you are doing image comparison for images that\n> consistently the same size, you can skip image-diff and use pixelmatch\n> which does everything in memory so you won't need to manage files:\n>\n> https://github.com/mapbox/pixelmatch\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/uber/image-diff/issues/50#issuecomment-266947291>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABL4hL5BG8iSJ0X755iEIcibdfZ20NN3ks5rH4CcgaJpZM4LMB-Q>\n> .\n>\n\n\n\n-- \nBest regards,\nFei Wen\n\n\nTel: (+1) 4154128873\n. Ubuntu 12.04.5 LTS and node v7.2.1\r\n. Thank you guys, @dawsonbotsford @twolfson , here is the code:\r\nhttps://github.com/feistar/AirImageDownloader\r\nvery simple, and I think nothing is killing the process, and I can run example correctly in this environment. Thank you very much,\n\n1. the folder is already existed, will the mkdirp still cause the SIGKILL?\n2. I returned a boolean in imageDiff.getFullResult in last version but it\nlooks like the error cannot be printed correctly, so I just use console.log\ntemporary.\n3. let me try to make other thins sync and see what's going on.\n\nThank you very much for send me pixelmatch. It's very helpful\n\nOn Wed, Dec 14, 2016 at 1:37 PM, Todd Wolfson <notifications@github.com>\nwrote:\n\n> @feistar <https://github.com/feistar> There are a bunch of asynchronous\n> functions being called in a synchronous manner (e.g. mkdirp should be\n> using mkdirp.sync or placing the rest of the code in its callback to\n> verify the directory exists). However, none of them seem to look like they\n> would cause a SIGKILL =/\n>\n> Is it possible that there are multiples of the same image being\n> downloaded? If so, then ImageMagick might self terminate when the file it\n> was talking to vanishes\n>\n> Various notes on the race conditions:\n>\n>    - imagesAreSame should use a callback with the boolean result from\n>    imageDiff.getFullResult. The current setup is attempting to use it\n>    synchronously when it doesn't/can't return anything; it can only callback =/\n>    - request.head and request().pipe() aren't doing any error checking\n>    - mkdirp should be mkdirp.sync or use a callback before getting to the\n>    setInterval piece\n>\n> I should also note that if you are doing image comparison for images that\n> consistently the same size, you can skip image-diff and use pixelmatch\n> which does everything in memory so you won't need to manage files:\n>\n> https://github.com/mapbox/pixelmatch\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/uber/image-diff/issues/50#issuecomment-266947291>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABL4hL5BG8iSJ0X755iEIcibdfZ20NN3ks5rH4CcgaJpZM4LMB-Q>\n> .\n>\n\n\n\n-- \nBest regards,\nFei Wen\n\n\nTel: (+1) 4154128873\n. ",
    "shukriadams": "Thanks - that sounds like a better approach. Also, I noticed that your createDiff flow calls imageMagic directly, instead of via gm, and it also assumes imageMagic is added to PATH.. Thanks - that sounds like a better approach. Also, I noticed that your createDiff flow calls imageMagic directly, instead of via gm, and it also assumes imageMagic is added to PATH.. ",
    "CLAassistant": "[![CLA assistant check](https://cla-assistant.io/pull/badge/not_signed)](https://cla-assistant.io/uber-archive/image-diff?pullRequest=53) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla-assistant.io/uber-archive/image-diff?pullRequest=53) before we can accept your contribution.<br/><sub>You have signed the CLA already but the status is still pending? Let us [recheck](https://cla-assistant.io/check/uber-archive/image-diff?pullRequest=53) it.</sub>. [![CLA assistant check](https://cla-assistant.io/pull/badge/not_signed)](https://cla-assistant.io/uber-archive/image-diff?pullRequest=53) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla-assistant.io/uber-archive/image-diff?pullRequest=53) before we can accept your contribution.<br/><sub>You have signed the CLA already but the status is still pending? Let us [recheck](https://cla-assistant.io/check/uber-archive/image-diff?pullRequest=53) it.</sub>. ",
    "epexa": "I also got an error in Node 7.0.0:\r\n\r\n> DeprecationWarning: os.tmpDir() is deprecated. Use os.tmpdir() instead.\r\n\r\nVariable in file image-diff\\node_modules\\tmp\\lib\\tmp.js in 17 line: `tmpDir = os.tmpDir || _getTMPDir,`. I also got an error in Node 7.0.0:\r\n\r\n> DeprecationWarning: os.tmpDir() is deprecated. Use os.tmpdir() instead.\r\n\r\nVariable in file image-diff\\node_modules\\tmp\\lib\\tmp.js in 17 line: `tmpDir = os.tmpDir || _getTMPDir,`. ",
    "oliviertassinari": "for what that's worth, I have forked this repository as [image-difference](https://github.com/argos-ci/image-difference#benchmark) modernizing it (ES2015, async/await, jest, benchmark, multiple implementations).. for what that's worth, I have forked this repository as [image-difference](https://github.com/argos-ci/image-difference#benchmark) modernizing it (ES2015, async/await, jest, benchmark, multiple implementations).. ",
    "jasperkuperus": "What's the status on this PR? Would be nice to merge it, will save people who stumble upon this library some time.. What's the status on this PR? Would be nice to merge it, will save people who stumble upon this library some time.. ",
    "ccpandhare": "Thanks a lot!. Thanks a lot!. ",
    "wildlyinaccurate": "Yeah, I saw. I was seeing if any maintainers were around to merge and release this before creating a fork.. Yeah, I saw. I was seeing if any maintainers were around to merge and release this before creating a fork.. "
}