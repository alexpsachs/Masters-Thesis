{
    "utahta": "Hi gpherguson,\n\n> How can I tell pythonbrew to ignore the test's results and continue on?\n\nTry something like this in your shell:\n\n<pre>\n$ pythonbrew install --force Python-2.6.6\n</pre>\n\n\n> Also, I'm seeing the following tests skipped. I'm not sure which, if any, I should be worried about. Got some insight?\n\nI'm sorry, but I'm not sure too.\n. Hello bcroq,\nThis issues fixed at version 0.6.2.\nThank you for reporting it.\n. Hi, Thank you for the great suggestions. :)\n\nIt is supported in version 0.6.5.\n\n<pre>\npythonbrew install -f file:///path/to/Python-<version>.tgz\n</pre>\n\n<pre>\npythonbrew install -f /path/to/Python-<version>.tgz\n</pre>\n. I fixed this bug in 0.6.7.\nThanks for finding it! :)\n. Close this issues.\n. Python-2.6.6 successfully build but Python-2.5.5 and 2.4.6 failed to build on Snow Leopard.\n\nThe following error:\n\n<pre>\nchecking size of wchar_t... configure: error: cannot compute sizeof (wchar_t)\n</pre>\n\n\nI could not solve this.\nDo you have any ideas?\n. I'm sorry for late reply.\nI'm not planning to support Windows...\n. Sure.\nCould you wait for a little while.\n. Yes, I was just thinking the same thing :)\nI will do what you say soon.\n. The fix for this issue is included in 0.6.9 release.\n. \"pybrew switch 2.5.5\" does not work?\nlike this:\n\n<pre>\n$ python -V\nPython 2.6.6\n$ pybrew switch 2.5.5\nSwitched to Python-2.5.5\n$ python -V\nPython 2.6.6\n</pre>\n\nIf you mean the above,  it has been fixed in 0.6.9 release.\nBTW, I think symlink command is good idea. \nI'm planning to implement it.\n. Hi,\nThe pythonbrew has been updated.\nv0.7 now supports symlink command :).\n\nExample:\n\n<pre>\n$ pybrew symlink # Create symlinks to all installed pythons.\n$ pybrew symlink -p 2.5.5 # Create a symlink to python2.5.5, like \"py2.5.5\"\n$ pybrew symlink -r # Remove all symlinks.\n</pre>\n. Yes, I completely agree with you :)\nI will implement it.\n. The fix for this issue is included in 0.6.9 release.\n. The fix for this issue is included in 0.7 release.\n. Hi,\nRight now `pythonbrew install --force 2.5.5` in the documentation is just an example.\n\nIt does not mean issue 4188: http://bugs.python.org/issue4188\n\nEventually, I plan to create faq with wiki and  take care of this issue.\n. Hi,\nIt seems like curl command failed.\nWhat will be the result of the following command?\n\n<pre>\n$ curl --head -skL http://www.python.org/ftp/python/2.5.5/Python-2.5.5.tgz\n</pre>\n\nIf you are using a proxy, the environment variable HTTP_proxy must be set.\n. Ah sorry...maybe I misunderstood this issues.\nHow did you interrupt an installation? Ctrl-C?\nI wonder why KeyboardInterrupt is not working.\n\nbut anyways, I think it is a bug. I will fix it.\n. Hi,\nYes, it is correct way of uninstalling pythonbrew. :)\n. Thank you for adding a reference to the wiki! :)\n. Hi,\nI could not reproduce this issue.\nCan you tell me about your environment?\n. now supported.\n. Hi,\nI will think about it. :-)\n. Hi,\nThe pythonbrew has been updated.\nv0.7.1 now supports the -b option on symlink command.\nThe -b option can create a symbolic link to the specified script in bin directory.\nYou can try it with the following command. :)\n\n<pre>\n$ pybrew symlink -b pip\n</pre>\n\nIt will create symlink like 'pip2.5.5'.\n. Hi,\nThere was no reason.\nFrom now on, The pythonbrew-install script accepts python 2.7.\n. Hi,\nI fixed this issue and released as version 0.7.2.\n. Thanks!\n. Yep, I will add it. ;)\n. I want to make sure that you want the following behavior?\n\n<pre>\n$ pybrew symlink -b hg -d 2.7.1\n$ ls -l ~/.pythonbrew/bin\nhg -> /Users/name/.pythonbrew/pythons/Python-2.7.1/bin/hg\n</pre>\n. The pythonbrew has been updated.\nSymlink command now takes new -d option.\n\nIn version 0.7.3, the -b option has been removed from \"symlink\" command.\nYou can use new syntax instead of -b option.\nLike this:\n\n<pre>\n* until version 0.7.2\n$ pybrew symlink -b pip\n\n* version 0.7.3 or later\n$ pybrew symlink pip\n$ pybrew symlink pip -d 2.7.1\n</pre>\n. Great thanks!\n. I think I want to implement it, but it will take some time.\nSo for now, I recommend to use virtualenv.\n. oops, I will fix it soon.\n. I've merged this pull request.\nThanks!\n. Hi, I added ChangeLog to PKG-INFO.\nThanks!\n. Hi, I fixed it.\nThanks :)\n. I got same error now.\nMaybe, this error caused because python.org is down.\nPlease wait until python.org recovered and try again.\n. Hi,\n`venv` command does not have a way to detect Python installed without pythonbrew.\n\n`venv` command is an intended feature to create a virtual environment using Python installed with pythonbrew.\n`venv` uses `virtualenv` and `virtualenvwrapper`, but in many cases they are not installed in environment of `/usr/bin/python` and general user is not allowed to install them.\n\nPlease install Python-2.x(2.4 or higher) using pythonbrew and try again.\n(If you have a better solution, please let me know)\n. > Systemwide install does not manage permissions well with virtualenv's\n\nYes, you're right.\nI'm not implement/test systemwide install yet.\nI will implement a systemwide multi-user system in the near future.\n\n> Misleading error returned\n\nIt's not good, so I will correct it. Thanks for the mention!\n\n> How does this currently work?\n> What is the rationale behind using the venv.run script?\n\nThe venv.run script is run in bashrc (~/.pythonbrew/etc/[bashrc](https://github.com/utahta/pythonbrew/blob/master/pythonbrew/etc/bashrc#L64)).\nIt's because I can't change my shell's environment from a child process (such as Python's VenvCommand).\n(the `workon environment_name`(virtualenvwrapper's command) affects the current shell)\n\n> Do you have any ideas on how to best implement the venv functionality ( maybe also other functions that a normal user should be able to do with pythonbrew ) so it will work in 'userspace' for a systemwide install?\n\nI'm considering best implement the venv functionality.\nI think this will take some time...\n\nThanks :)\n. Thanks for the suggestion :).\nI plan to implement it in the next version!\n. Thanks!\n. Thanks!\n. Thanks!!\n. same issue #46\nThanks!\n. same issue #44\nThanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. OK\u305d\u3046\u306b\u601d\u3044\u307e\u3059\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059mm\n. Hi gpherguson,\n\n> How can I tell pythonbrew to ignore the test's results and continue on?\n\nTry something like this in your shell:\n\n<pre>\n$ pythonbrew install --force Python-2.6.6\n</pre>\n\n\n> Also, I'm seeing the following tests skipped. I'm not sure which, if any, I should be worried about. Got some insight?\n\nI'm sorry, but I'm not sure too.\n. Hello bcroq,\nThis issues fixed at version 0.6.2.\nThank you for reporting it.\n. Hi, Thank you for the great suggestions. :)\n\nIt is supported in version 0.6.5.\n\n<pre>\npythonbrew install -f file:///path/to/Python-<version>.tgz\n</pre>\n\n<pre>\npythonbrew install -f /path/to/Python-<version>.tgz\n</pre>\n. I fixed this bug in 0.6.7.\nThanks for finding it! :)\n. Close this issues.\n. Python-2.6.6 successfully build but Python-2.5.5 and 2.4.6 failed to build on Snow Leopard.\n\nThe following error:\n\n<pre>\nchecking size of wchar_t... configure: error: cannot compute sizeof (wchar_t)\n</pre>\n\n\nI could not solve this.\nDo you have any ideas?\n. I'm sorry for late reply.\nI'm not planning to support Windows...\n. Sure.\nCould you wait for a little while.\n. Yes, I was just thinking the same thing :)\nI will do what you say soon.\n. The fix for this issue is included in 0.6.9 release.\n. \"pybrew switch 2.5.5\" does not work?\nlike this:\n\n<pre>\n$ python -V\nPython 2.6.6\n$ pybrew switch 2.5.5\nSwitched to Python-2.5.5\n$ python -V\nPython 2.6.6\n</pre>\n\nIf you mean the above,  it has been fixed in 0.6.9 release.\nBTW, I think symlink command is good idea. \nI'm planning to implement it.\n. Hi,\nThe pythonbrew has been updated.\nv0.7 now supports symlink command :).\n\nExample:\n\n<pre>\n$ pybrew symlink # Create symlinks to all installed pythons.\n$ pybrew symlink -p 2.5.5 # Create a symlink to python2.5.5, like \"py2.5.5\"\n$ pybrew symlink -r # Remove all symlinks.\n</pre>\n. Yes, I completely agree with you :)\nI will implement it.\n. The fix for this issue is included in 0.6.9 release.\n. The fix for this issue is included in 0.7 release.\n. Hi,\nRight now `pythonbrew install --force 2.5.5` in the documentation is just an example.\n\nIt does not mean issue 4188: http://bugs.python.org/issue4188\n\nEventually, I plan to create faq with wiki and  take care of this issue.\n. Hi,\nIt seems like curl command failed.\nWhat will be the result of the following command?\n\n<pre>\n$ curl --head -skL http://www.python.org/ftp/python/2.5.5/Python-2.5.5.tgz\n</pre>\n\nIf you are using a proxy, the environment variable HTTP_proxy must be set.\n. Ah sorry...maybe I misunderstood this issues.\nHow did you interrupt an installation? Ctrl-C?\nI wonder why KeyboardInterrupt is not working.\n\nbut anyways, I think it is a bug. I will fix it.\n. Hi,\nYes, it is correct way of uninstalling pythonbrew. :)\n. Thank you for adding a reference to the wiki! :)\n. Hi,\nI could not reproduce this issue.\nCan you tell me about your environment?\n. now supported.\n. Hi,\nI will think about it. :-)\n. Hi,\nThe pythonbrew has been updated.\nv0.7.1 now supports the -b option on symlink command.\nThe -b option can create a symbolic link to the specified script in bin directory.\nYou can try it with the following command. :)\n\n<pre>\n$ pybrew symlink -b pip\n</pre>\n\nIt will create symlink like 'pip2.5.5'.\n. Hi,\nThere was no reason.\nFrom now on, The pythonbrew-install script accepts python 2.7.\n. Hi,\nI fixed this issue and released as version 0.7.2.\n. Thanks!\n. Yep, I will add it. ;)\n. I want to make sure that you want the following behavior?\n\n<pre>\n$ pybrew symlink -b hg -d 2.7.1\n$ ls -l ~/.pythonbrew/bin\nhg -> /Users/name/.pythonbrew/pythons/Python-2.7.1/bin/hg\n</pre>\n. The pythonbrew has been updated.\nSymlink command now takes new -d option.\n\nIn version 0.7.3, the -b option has been removed from \"symlink\" command.\nYou can use new syntax instead of -b option.\nLike this:\n\n<pre>\n* until version 0.7.2\n$ pybrew symlink -b pip\n\n* version 0.7.3 or later\n$ pybrew symlink pip\n$ pybrew symlink pip -d 2.7.1\n</pre>\n. Great thanks!\n. I think I want to implement it, but it will take some time.\nSo for now, I recommend to use virtualenv.\n. oops, I will fix it soon.\n. I've merged this pull request.\nThanks!\n. Hi, I added ChangeLog to PKG-INFO.\nThanks!\n. Hi, I fixed it.\nThanks :)\n. I got same error now.\nMaybe, this error caused because python.org is down.\nPlease wait until python.org recovered and try again.\n. Hi,\n`venv` command does not have a way to detect Python installed without pythonbrew.\n\n`venv` command is an intended feature to create a virtual environment using Python installed with pythonbrew.\n`venv` uses `virtualenv` and `virtualenvwrapper`, but in many cases they are not installed in environment of `/usr/bin/python` and general user is not allowed to install them.\n\nPlease install Python-2.x(2.4 or higher) using pythonbrew and try again.\n(If you have a better solution, please let me know)\n. > Systemwide install does not manage permissions well with virtualenv's\n\nYes, you're right.\nI'm not implement/test systemwide install yet.\nI will implement a systemwide multi-user system in the near future.\n\n> Misleading error returned\n\nIt's not good, so I will correct it. Thanks for the mention!\n\n> How does this currently work?\n> What is the rationale behind using the venv.run script?\n\nThe venv.run script is run in bashrc (~/.pythonbrew/etc/[bashrc](https://github.com/utahta/pythonbrew/blob/master/pythonbrew/etc/bashrc#L64)).\nIt's because I can't change my shell's environment from a child process (such as Python's VenvCommand).\n(the `workon environment_name`(virtualenvwrapper's command) affects the current shell)\n\n> Do you have any ideas on how to best implement the venv functionality ( maybe also other functions that a normal user should be able to do with pythonbrew ) so it will work in 'userspace' for a systemwide install?\n\nI'm considering best implement the venv functionality.\nI think this will take some time...\n\nThanks :)\n. Thanks for the suggestion :).\nI plan to implement it in the next version!\n. Thanks!\n. Thanks!\n. Thanks!!\n. same issue #46\nThanks!\n. same issue #44\nThanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. OK\u305d\u3046\u306b\u601d\u3044\u307e\u3059\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059mm\n. ",
    "gpherguson": "I triangulated the problem using my machine at home and my Linux box and decided that it's something in our DHCP or DNS at work keeping the socket tests from succeeding. I decided to use the --force flag for the entire install, and it appears to be fine. \n. I triangulated the problem using my machine at home and my Linux box and decided that it's something in our DHCP or DNS at work keeping the socket tests from succeeding. I decided to use the --force flag for the entire install, and it appears to be fine. \n. ",
    "bcroq": "I confirm this is fixed in 0.6.2.\n\nThanks\n. Thanks!\n. I confirm this is fixed in 0.6.2.\n\nThanks\n. Thanks!\n. ",
    "thulio": "It seems I was too hurry. I'm gonna cancel the pull request and work a little more on this. Thanks for the reply!\n. It seems I was too hurry. I'm gonna cancel the pull request and work a little more on this. Thanks for the reply!\n. ",
    "sdouche": "Thanks!\n. Cool, thanks!\n. Thanks!\n. Hi,\nI cannot use multiple Python versions in the same time. I need 2.5 for some code (Zope related), 2.6 / 2.7 for others and 3.2 for testing. It's a pity to switch all the time :).\n\n> BTW, I think symlink command is good idea.\n> I'm planning to implement it.\n\nCool!\n. Great! pythonbrew is now sweet :).\n. Thanks.\n. Works great! Thanks.\n. Good job! Works well with Python 3.2 and Python 2.5.6.\n. Right :)\n. yeah! Very usable now. Thanks.\n. +10: very good suggestion!\n. You are too fast. But you missed my point, the goal was to use the power of symlink (-p, -d) with venv. Ok ok, it's my fault, the description is not complete :). Good job!\n. Thanks!\n. Cool, thanks!\n. Thanks!\n. Hi,\nI cannot use multiple Python versions in the same time. I need 2.5 for some code (Zope related), 2.6 / 2.7 for others and 3.2 for testing. It's a pity to switch all the time :).\n\n> BTW, I think symlink command is good idea.\n> I'm planning to implement it.\n\nCool!\n. Great! pythonbrew is now sweet :).\n. Thanks.\n. Works great! Thanks.\n. Good job! Works well with Python 3.2 and Python 2.5.6.\n. Right :)\n. yeah! Very usable now. Thanks.\n. +10: very good suggestion!\n. You are too fast. But you missed my point, the goal was to use the power of symlink (-p, -d) with venv. Ok ok, it's my fault, the description is not complete :). Good job!\n. ",
    "charlax": "```\n% curl --head -skL http://www.python.org/ftp/python/2.5.5/Python-2.5.5.tgz\nHTTP/1.1 200 OK\nDate: Fri, 25 Mar 2011 07:17:35 GMT\nServer: Apache/2.2.16 (Debian)\nLast-Modified: Sun, 31 Jan 2010 12:41:57 GMT\nETag: \"14f0006-b11962-47e7531b40f40\"\nAccept-Ranges: bytes\nContent-Length: 11606370\nContent-Type: application/x-tar\nContent-Encoding: x-gzip\n```\n. I did not explained it rightfully.\n\n1- I tried to install python-2.5.5, yet it was hanging on test_threading, so I interrupted it with ctrl-c (https://github.com/utahta/pythonbrew/issues#issue/12)\n2- I tried `pythonbrew install --force 2.5.5`, and now I get this `TypeError`\n\nI guess I will delete everything and reinstall pythonbrew.\n. ```\n% curl --head -skL http://www.python.org/ftp/python/2.5.5/Python-2.5.5.tgz\nHTTP/1.1 200 OK\nDate: Fri, 25 Mar 2011 07:17:35 GMT\nServer: Apache/2.2.16 (Debian)\nLast-Modified: Sun, 31 Jan 2010 12:41:57 GMT\nETag: \"14f0006-b11962-47e7531b40f40\"\nAccept-Ranges: bytes\nContent-Length: 11606370\nContent-Type: application/x-tar\nContent-Encoding: x-gzip\n```\n. I did not explained it rightfully.\n\n1- I tried to install python-2.5.5, yet it was hanging on test_threading, so I interrupted it with ctrl-c (https://github.com/utahta/pythonbrew/issues#issue/12)\n2- I tried `pythonbrew install --force 2.5.5`, and now I get this `TypeError`\n\nI guess I will delete everything and reinstall pythonbrew.\n. ",
    "oloviv": "no,  it is not correct at all  if you install at other dir with root.\n. for example, if you sudo su into root user. and \nexport PYTHONBREW_ROOT=/usr/local/pythonbrew\n/usr/local/bin/pythonbrew_install\n\nthen if you just delete the install directionary only, you will get the followings:\n\nroot@lambda:~# /usr/local/bin/pythonbrew_install \nTraceback (most recent call last):\n  File \"/usr/local/bin/pythonbrew_install\", line 5, in <module>\n    from pkg_resources import load_entry_point\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 2707, in <module>\n    working_set.require(**requires**)\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 686, in require\n    needed = self.resolve(parse_requirements(requirements))\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 584, in resolve\n    raise DistributionNotFound(req)\npkg_resources.DistributionNotFound: pythonbrew==1.3.5\n. no,  it is not correct at all  if you install at other dir with root.\n. for example, if you sudo su into root user. and \nexport PYTHONBREW_ROOT=/usr/local/pythonbrew\n/usr/local/bin/pythonbrew_install\n\nthen if you just delete the install directionary only, you will get the followings:\n\nroot@lambda:~# /usr/local/bin/pythonbrew_install \nTraceback (most recent call last):\n  File \"/usr/local/bin/pythonbrew_install\", line 5, in <module>\n    from pkg_resources import load_entry_point\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 2707, in <module>\n    working_set.require(**requires**)\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 686, in require\n    needed = self.resolve(parse_requirements(requirements))\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 584, in resolve\n    raise DistributionNotFound(req)\npkg_resources.DistributionNotFound: pythonbrew==1.3.5\n. ",
    "HounD": "I've tried to use pythonbrew on shared hosting. What do you want to learn about environment? \n. I've tried to use pythonbrew on shared hosting. What do you want to learn about environment? \n. ",
    "adamv": "On OS X `/usr/sbin/sysctl -n hw.ncpu` - on Linux, probably something from procfs.\n. On OS X `/usr/sbin/sysctl -n hw.ncpu` - on Linux, probably something from procfs.\n. ",
    "sanemat": "Great job!\nI can install python 2.6.6 on Mac OS X by pythonbrew 0.7.2. Thanks!\n. Great job!\nI can install python 2.6.6 on Mac OS X by pythonbrew 0.7.2. Thanks!\n. ",
    "pvaret": "Seconded.\n\nI just had to recompile an existing Python install after adding some headers I'd left out, and couldn't find a way to let Pythonbrew do that. I had to take note of everything installed in that install's site-packages, delete it, and reinstall everything from scratch. Painful; I would have liked to recompile this Python install while leaving its site-packages in place.\n. Seconded.\n\nI just had to recompile an existing Python install after adding some headers I'd left out, and couldn't find a way to let Pythonbrew do that. I had to take note of everything installed in that install's site-packages, delete it, and reinstall everything from scratch. Painful; I would have liked to recompile this Python install while leaving its site-packages in place.\n. ",
    "npinto": "This is also confusing to me. Any update on this?\n. This is also confusing to me. Any update on this?\n. ",
    "kmwhite": "I got the same error on mine. I'm assuming that the test_tcl and test_dl tests were skipped because libraries needed didn't exist. Trying to find the appropriate library paths to add so that it can build against them. TCL (iirc) is used for IDLE, so if it isn't found, it'd make sense to exit.\n. I got the same error on mine. I'm assuming that the test_tcl and test_dl tests were skipped because libraries needed didn't exist. Trying to find the appropriate library paths to add so that it can build against them. TCL (iirc) is used for IDLE, so if it isn't found, it'd make sense to exit.\n. ",
    "blahed": "same thing here.\n. same thing here.\n. ",
    "adamlwgriffiths": "I get this to.\nIMO this is a bad test. The pythonbrew docs themselves point to far more platforms than just ppc and i386 (the only 2 values the test accepts)\nSee my comment here.\nhttps://github.com/utahta/pythonbrew/issues/37#issuecomment-3504849\n\nThis specific test failure should be safe to ignore as long as it isn't hiding any others.\n. Can you provide a list of the flags that you set to build on OS X?\n. Same issue here.\nAdded info to a Gist here: https://gist.github.com/1618234\n. Obviously the test_platform is wrong.\n\n```\n        if sys.byteorder == 'little':\n            self.assertEqual(res[2], 'i386')\n        else:\n            self.assertEqual(res[2], 'PowerPC')\n```\n\nThe platform is listed as x86_64, so this is just a bad test.\nThe pythonbrew docs even show that this test is wrong.\n\n```\nIt is possible to build a number of flavours of the universal binary build,\nthe default is a 32-bit only binary (i386 and ppc). The flavour can be\nspecified using the option ``--with-universal-archs=VALUE``. The following\nvalues are available:\n * ``32-bit``:   ``ppc``, ``i386``\n * ``64-bit``:   ``ppc64``, ``x86_64``\n * ``all``:      ``ppc``, ``ppc64``, ``i386``, ``x86_64``\n * ``3-way``:    ``ppc``, ``i386`` and ``x86_64``\n * ``intel``:    ``i386``, ``x86_64``\n```\n\nThere are also a few patches floating around the internet.\nHere is one that explicitely fixes the test_platform error: http://mail.python.org/pipermail//python-checkins/2011-July/106590.html\n\nand discussion on applying the patch here: http://bugs.python.org/issue12549\n. This test is... strange...\n\ntest_distutils\ni686-apple-darwin11-llvm-gcc-4.2: /private/var/folders/bz/9564twzd2f95kgzvzvt1w1yr0000gn/T/tmpL4I5DR/foo.so: No such file or directory\ntest test_distutils failed -- Traceback (most recent call last):\n\nThe directories exist down to /T which does _not_ have a /tmp subdirectory.\n. The more I look at the logs, the more it looks like there are just bad tests in Python. The code built successfully, it's just the tests failing.\nI think the best course of action is to just `--force` install it.\nI'm curious to see if anything from this issue helps: https://github.com/utahta/pythonbrew/issues/27\n. I get this to.\nIMO this is a bad test. The pythonbrew docs themselves point to far more platforms than just ppc and i386 (the only 2 values the test accepts)\nSee my comment here.\nhttps://github.com/utahta/pythonbrew/issues/37#issuecomment-3504849\n\nThis specific test failure should be safe to ignore as long as it isn't hiding any others.\n. Can you provide a list of the flags that you set to build on OS X?\n. Same issue here.\nAdded info to a Gist here: https://gist.github.com/1618234\n. Obviously the test_platform is wrong.\n\n```\n        if sys.byteorder == 'little':\n            self.assertEqual(res[2], 'i386')\n        else:\n            self.assertEqual(res[2], 'PowerPC')\n```\n\nThe platform is listed as x86_64, so this is just a bad test.\nThe pythonbrew docs even show that this test is wrong.\n\n```\nIt is possible to build a number of flavours of the universal binary build,\nthe default is a 32-bit only binary (i386 and ppc). The flavour can be\nspecified using the option ``--with-universal-archs=VALUE``. The following\nvalues are available:\n * ``32-bit``:   ``ppc``, ``i386``\n * ``64-bit``:   ``ppc64``, ``x86_64``\n * ``all``:      ``ppc``, ``ppc64``, ``i386``, ``x86_64``\n * ``3-way``:    ``ppc``, ``i386`` and ``x86_64``\n * ``intel``:    ``i386``, ``x86_64``\n```\n\nThere are also a few patches floating around the internet.\nHere is one that explicitely fixes the test_platform error: http://mail.python.org/pipermail//python-checkins/2011-July/106590.html\n\nand discussion on applying the patch here: http://bugs.python.org/issue12549\n. This test is... strange...\n\ntest_distutils\ni686-apple-darwin11-llvm-gcc-4.2: /private/var/folders/bz/9564twzd2f95kgzvzvt1w1yr0000gn/T/tmpL4I5DR/foo.so: No such file or directory\ntest test_distutils failed -- Traceback (most recent call last):\n\nThe directories exist down to /T which does _not_ have a /tmp subdirectory.\n. The more I look at the logs, the more it looks like there are just bad tests in Python. The code built successfully, it's just the tests failing.\nI think the best course of action is to just `--force` install it.\nI'm curious to see if anything from this issue helps: https://github.com/utahta/pythonbrew/issues/27\n. ",
    "jessevogt": "Same problem with 2.5.5 on SL 10.6.8.\n\n``` Summary:\n282 tests OK.\n3 tests failed:\n    test_aepack test_macfs test_macostools\n37 tests skipped:\n    test_al test_bsddb test_bsddb3 test_cd test_cl test_codecmaps_cn\n    test_codecmaps_hk test_codecmaps_jp test_codecmaps_kr\n    test_codecmaps_tw test_ctypes test_curses test_dl test_gdbm\n    test_gl test_imageop test_imgfile test_largefile\n    test_linuxaudiodev test_locale test_nis test_normalization\n    test_ossaudiodev test_pep277 test_rgbimg test_scriptpackages\n    test_socket_ssl test_socketserver test_startfile test_sunaudiodev\n    test_tcl test_timeout test_urllib2net test_urllibnet test_winreg\n    test_winsound test_zipfile64\n4 skips unexpected on darwin:\n    test_tcl test_dl test_scriptpackages test_ctypes\nmake: *** [test] Error 1\n```\n\nUPDATE:\nLooks like this is a known issue (https://github.com/utahta/pythonbrew/issues/12). Using the force option\n. Same problem with 2.5.5 on SL 10.6.8.\n\n``` Summary:\n282 tests OK.\n3 tests failed:\n    test_aepack test_macfs test_macostools\n37 tests skipped:\n    test_al test_bsddb test_bsddb3 test_cd test_cl test_codecmaps_cn\n    test_codecmaps_hk test_codecmaps_jp test_codecmaps_kr\n    test_codecmaps_tw test_ctypes test_curses test_dl test_gdbm\n    test_gl test_imageop test_imgfile test_largefile\n    test_linuxaudiodev test_locale test_nis test_normalization\n    test_ossaudiodev test_pep277 test_rgbimg test_scriptpackages\n    test_socket_ssl test_socketserver test_startfile test_sunaudiodev\n    test_tcl test_timeout test_urllib2net test_urllibnet test_winreg\n    test_winsound test_zipfile64\n4 skips unexpected on darwin:\n    test_tcl test_dl test_scriptpackages test_ctypes\nmake: *** [test] Error 1\n```\n\nUPDATE:\nLooks like this is a known issue (https://github.com/utahta/pythonbrew/issues/12). Using the force option\n. ",
    "vonbirdie": "You mean which args i used to override the ones pythonbrew uses so i could build it successfully? This was a long time ago so i i'm sorry but i don't remember everything about it. My guess is that i used the default ones to build python and simply overrode the ones pythonbrew tried to use.\n. You mean which args i used to override the ones pythonbrew uses so i could build it successfully? This was a long time ago so i i'm sorry but i don't remember everything about it. My guess is that i used the default ones to build python and simply overrode the ones pythonbrew tried to use.\n. ",
    "andreif": "One can use\n\n> Create isolated python environments (uses virtualenv):\n> \n> ```\n> pythonbrew venv init\n> pythonbrew venv create proj\n> pythonbrew venv list\n> pythonbrew venv use proj\n> pythonbrew venv delete proj\n> ```\n\nFor example\n\n```\n$ pythonbrew venv create heroku\nCreating `heroku` environment into /Users/andrei/.pythonbrew/venvs/Python-2.7.2\nAlready using interpreter /Users/andrei/.pythonbrew/pythons/Python-2.7.2/bin/python\nNew python executable in /Users/andrei/.pythonbrew/venvs/Python-2.7.2/heroku/bin/python\nInstalling setuptools.............done.\nInstalling pip...............done.\n```\n. The following tests has failed for me on Lion: `test_ctypes`, `test_platform`\n. One can use\n\n> Create isolated python environments (uses virtualenv):\n> \n> ```\n> pythonbrew venv init\n> pythonbrew venv create proj\n> pythonbrew venv list\n> pythonbrew venv use proj\n> pythonbrew venv delete proj\n> ```\n\nFor example\n\n```\n$ pythonbrew venv create heroku\nCreating `heroku` environment into /Users/andrei/.pythonbrew/venvs/Python-2.7.2\nAlready using interpreter /Users/andrei/.pythonbrew/pythons/Python-2.7.2/bin/python\nNew python executable in /Users/andrei/.pythonbrew/venvs/Python-2.7.2/heroku/bin/python\nInstalling setuptools.............done.\nInstalling pip...............done.\n```\n. The following tests has failed for me on Lion: `test_ctypes`, `test_platform`\n. ",
    "figure002": "I use an up-to-date Ubuntu 11.10 system with Python 2.7.2. As far as I know I do not use Pythonbrew. However, I do use the argparse module and it does not accept arguments with spaces (as described on the Stack Overflow issue). Should utahta's fix have solved this issue? If yes, how can I obtain the fix? Shouldn't it automatically arrive in Ubuntu?\n. I use an up-to-date Ubuntu 11.10 system with Python 2.7.2. As far as I know I do not use Pythonbrew. However, I do use the argparse module and it does not accept arguments with spaces (as described on the Stack Overflow issue). Should utahta's fix have solved this issue? If yes, how can I obtain the fix? Shouldn't it automatically arrive in Ubuntu?\n. ",
    "SimonHova": "In my limited understanding of the Pythonbrew bug, it was limited to\nPythonbrew. Argparse should have no problems with spaces, and I've used it\na bunch. That said, if there are spaces in the actual arguments, I remember\nthat the arguments themselves will have to be delimited with quotes.\n\nSpecifically, if I was trying to execute a program _foo_ with arguments _bar\n*, you can type *python_ _foo --bar_. Pythonbrew replaces the python\ncommand with the shorthand argument py, and that's where the bug\nhappened; _pythonbrew\npy foo --bar_ would lose the _bar_ argument.\n\nOn Fri, Apr 27, 2012 at 6:34 PM, Serrano Pereira <\nreply@reply.github.com\n\n> wrote:\n> \n> I use an up-to-date Ubuntu 11.10 system with Python 2.7.2. As far as I\n> know I do not use Pythonbrew. However, I do use the argparse module and it\n> does not accept arguments with spaces (as described on the Stack Overflow\n> issue). Should utahta's fix have solved this issue? If yes, how can I\n> obtain the fix? Shouldn't it automatically arrive in Ubuntu?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/utahta/pythonbrew/issues/30#issuecomment-5391775\n. In my limited understanding of the Pythonbrew bug, it was limited to\nPythonbrew. Argparse should have no problems with spaces, and I've used it\na bunch. That said, if there are spaces in the actual arguments, I remember\nthat the arguments themselves will have to be delimited with quotes.\n\nSpecifically, if I was trying to execute a program _foo_ with arguments _bar\n*, you can type *python_ _foo --bar_. Pythonbrew replaces the python\ncommand with the shorthand argument py, and that's where the bug\nhappened; _pythonbrew\npy foo --bar_ would lose the _bar_ argument.\n\nOn Fri, Apr 27, 2012 at 6:34 PM, Serrano Pereira <\nreply@reply.github.com\n\n> wrote:\n> \n> I use an up-to-date Ubuntu 11.10 system with Python 2.7.2. As far as I\n> know I do not use Pythonbrew. However, I do use the argparse module and it\n> does not accept arguments with spaces (as described on the Stack Overflow\n> issue). Should utahta's fix have solved this issue? If yes, how can I\n> obtain the fix? Shouldn't it automatically arrive in Ubuntu?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/utahta/pythonbrew/issues/30#issuecomment-5391775\n. ",
    "oinopion": "That would be awesome.\n. That would be awesome.\n. ",
    "kenneth-reitz": "+100 for PyPy. \n. +1000000 for PyPy.\n. +100 for PyPy. \n. +1000000 for PyPy.\n. ",
    "jupp0r": "+10000000000000 for PyPy\n. +10000000000000 for PyPy\n. ",
    "slikts": "+Infinity for PyPy\n. +Infinity for PyPy\n. ",
    "agapow": "\"Borrowing\" pythonz's implementation for installing all of these is an obvious easy win.\n. \"Borrowing\" pythonz's implementation for installing all of these is an obvious easy win.\n. ",
    "fgimian": "+1 on this one, would love both PyPy and Jython support for pythonbrew :)\n. +1 would love this too :)\n. +1\n. +1 on this one, would love both PyPy and Jython support for pythonbrew :)\n. +1 would love this too :)\n. +1\n. ",
    "Kroisse": ":+1: for PyPy\n. :+1: for PyPy\n. ",
    "trinitronx": "This shouldn't be too much of an issue.  It looks like most of pythonbrew is written in python, with the exception of the install script and the bashrc file.  It also looks like Virtualenv and virtualenv wrapper should support other shells too.\n\nIs there anything that is currently broken when using /bin/sh instead of bash?\n\nEDIT: It looks like there are some places in the installer functions where the shebang lines are hardcoded as: `#!/usr/bin/env bash` too\n. So, I took some time today to look at this.  The VenvCommand class does some funny stuff that essentially changes a template for the `venv.run` script, and then writes to it.\n\nHowever, I can't seem to find where exactly the venv.run script or `workon` is executed.  I've got a couple questions:\n- How does this currently work?\n- What is the rationale behind using the `venv.run` script?\n- Do you have any ideas on how to best implement the venv functionality ( maybe also other functions that a normal user should be able to do with pythonbrew ) so it will work in 'userspace' for a systemwide install?\n. This shouldn't be too much of an issue.  It looks like most of pythonbrew is written in python, with the exception of the install script and the bashrc file.  It also looks like Virtualenv and virtualenv wrapper should support other shells too.\n\nIs there anything that is currently broken when using /bin/sh instead of bash?\n\nEDIT: It looks like there are some places in the installer functions where the shebang lines are hardcoded as: `#!/usr/bin/env bash` too\n. So, I took some time today to look at this.  The VenvCommand class does some funny stuff that essentially changes a template for the `venv.run` script, and then writes to it.\n\nHowever, I can't seem to find where exactly the venv.run script or `workon` is executed.  I've got a couple questions:\n- How does this currently work?\n- What is the rationale behind using the `venv.run` script?\n- Do you have any ideas on how to best implement the venv functionality ( maybe also other functions that a normal user should be able to do with pythonbrew ) so it will work in 'userspace' for a systemwide install?\n. ",
    "azec-pdx": "Did anyone manage to install pythonbrew on cygwin? Thanks!\n. I have failed to get setuptools instaled for 2.7.x versions of brewed pythons. No matter if I do it manually or omitting --no-setuptools command I get this output on my environment:\n\nInstalling Python-2.7.3 into /home/amer/.pythonbrew/pythons/Python-2.7.3\nDownloading distribute_setup.py as /home/amer/.pythonbrew/dists/distribute_setup.py\n######################################################################## 100,0%\nInstalling distribute into /home/amer/.pythonbrew/pythons/Python-2.7.3\nERROR: Failed to install setuptools. See /home/amer/.pythonbrew/build.log to see why.\nSkip installation of setuptools.\n\nInstalled Python-2.7.3 successfully. Run the following command to switch to Python-2.7.3.\n  pythonbrew switch 2.7.3\nSwitched to Python-2.7.3\nasking libproxy about url 'http://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg'\nlibproxy suggest to use 'direct://'\n--2012-08-05 21:51:02--  http://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg\nResolving pypi.python.org (pypi.python.org)... 82.94.164.168\nConnecting to pypi.python.org (pypi.python.org)|82.94.164.168|:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 332005 (324K) [application/octet-stream]\nSaving to: `setuptools-0.6c11-py2.7.egg'\n\n100%[===================================================================================================================================================>] 332.005      541K/s   in 0,6s    \n\n2012-08-05 21:51:02 (541 KB/s) - `setuptools-0.6c11-py2.7.egg' saved [332005/332005]\n\nsh: ./setuptools--0.6c9-py2.7.egg: No such file or directory\nCould not find platform dependent libraries <exec_prefix>\nConsider setting $PYTHONHOME to <prefix>[:<exec_prefix>]\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0Traceback (most recent call last):\n  File \"/home/amer/.pythonbrew/pythons/Python-2.7.3/lib/python2.7/site.py\", line 563, in <module>\n    main()\n  File \"/home/amer/.pythonbrew/pythons/Python-2.7.3/lib/python2.7/site.py\", line 545, in main\n    known_paths = addusersitepackages(known_paths)\n  File \"/home/amer/.pythonbrew/pythons/Python-2.7.3/lib/python2.7/site.py\", line 278, in addusersitepackages\n    user_site = getusersitepackages()\n  File \"/home/amer/.pythonbrew/pythons/Python-2.7.3/lib/python2.7/site.py\", line 253, in getusersitepackages\n    user_base = getuserbase() # this will also set USER_BASE\n  File \"/home/amer/.pythonbrew/pythons/Python-2.7.3/lib/python2.7/site.py\", line 243, in getuserbase\n    USER_BASE = get_config_var('userbase')\n  File \"/home/amer/.pythonbrew/pythons/Python-2.7.3/lib/python2.7/sysconfig.py\", line 521, in get_config_var\n    return get_config_vars().get(name)\n  File \"/home/amer/.pythonbrew/pythons/Python-2.7.3/lib/python2.7/sysconfig.py\", line 420, in get_config_vars\n    _init_posix(_CONFIG_VARS)\n  File \"/home/amer/.pythonbrew/pythons/Python-2.7.3/lib/python2.7/sysconfig.py\", line 288, in _init_posix\n    raise IOError(msg)\nIOError: invalid Python installation: unable to open /home/amer/.pythonbrew/pythons/Python-2.7.3/lib/python2.7/config/Makefile (No such file or directory)\n. Did anyone manage to install pythonbrew on cygwin? Thanks!\n. I have failed to get setuptools instaled for 2.7.x versions of brewed pythons. No matter if I do it manually or omitting --no-setuptools command I get this output on my environment:\n\nInstalling Python-2.7.3 into /home/amer/.pythonbrew/pythons/Python-2.7.3\nDownloading distribute_setup.py as /home/amer/.pythonbrew/dists/distribute_setup.py\n######################################################################## 100,0%\nInstalling distribute into /home/amer/.pythonbrew/pythons/Python-2.7.3\nERROR: Failed to install setuptools. See /home/amer/.pythonbrew/build.log to see why.\nSkip installation of setuptools.\n\nInstalled Python-2.7.3 successfully. Run the following command to switch to Python-2.7.3.\n  pythonbrew switch 2.7.3\nSwitched to Python-2.7.3\nasking libproxy about url 'http://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg'\nlibproxy suggest to use 'direct://'\n--2012-08-05 21:51:02--  http://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg\nResolving pypi.python.org (pypi.python.org)... 82.94.164.168\nConnecting to pypi.python.org (pypi.python.org)|82.94.164.168|:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 332005 (324K) [application/octet-stream]\nSaving to: `setuptools-0.6c11-py2.7.egg'\n\n100%[===================================================================================================================================================>] 332.005      541K/s   in 0,6s    \n\n2012-08-05 21:51:02 (541 KB/s) - `setuptools-0.6c11-py2.7.egg' saved [332005/332005]\n\nsh: ./setuptools--0.6c9-py2.7.egg: No such file or directory\nCould not find platform dependent libraries <exec_prefix>\nConsider setting $PYTHONHOME to <prefix>[:<exec_prefix>]\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0Traceback (most recent call last):\n  File \"/home/amer/.pythonbrew/pythons/Python-2.7.3/lib/python2.7/site.py\", line 563, in <module>\n    main()\n  File \"/home/amer/.pythonbrew/pythons/Python-2.7.3/lib/python2.7/site.py\", line 545, in main\n    known_paths = addusersitepackages(known_paths)\n  File \"/home/amer/.pythonbrew/pythons/Python-2.7.3/lib/python2.7/site.py\", line 278, in addusersitepackages\n    user_site = getusersitepackages()\n  File \"/home/amer/.pythonbrew/pythons/Python-2.7.3/lib/python2.7/site.py\", line 253, in getusersitepackages\n    user_base = getuserbase() # this will also set USER_BASE\n  File \"/home/amer/.pythonbrew/pythons/Python-2.7.3/lib/python2.7/site.py\", line 243, in getuserbase\n    USER_BASE = get_config_var('userbase')\n  File \"/home/amer/.pythonbrew/pythons/Python-2.7.3/lib/python2.7/sysconfig.py\", line 521, in get_config_var\n    return get_config_vars().get(name)\n  File \"/home/amer/.pythonbrew/pythons/Python-2.7.3/lib/python2.7/sysconfig.py\", line 420, in get_config_vars\n    _init_posix(_CONFIG_VARS)\n  File \"/home/amer/.pythonbrew/pythons/Python-2.7.3/lib/python2.7/sysconfig.py\", line 288, in _init_posix\n    raise IOError(msg)\nIOError: invalid Python installation: unable to open /home/amer/.pythonbrew/pythons/Python-2.7.3/lib/python2.7/config/Makefile (No such file or directory)\n. ",
    "chrisledet": "Try using `--force` when installing.\n. I also did a fresh OS X Lion install and doing `pythonbrew install --force 2.7.2` worked for me. It still runs all the tests. You can see `tail -f` the build.log file to see if it installs with a failing test. Worst case scenario, if something really messes up, delete pythonbrew, update pythonbrew with the latest patches, or grab python sources from the site and install it that way.\n. Try using `--force` when installing.\n. I also did a fresh OS X Lion install and doing `pythonbrew install --force 2.7.2` worked for me. It still runs all the tests. You can see `tail -f` the build.log file to see if it installs with a failing test. Worst case scenario, if something really messes up, delete pythonbrew, update pythonbrew with the latest patches, or grab python sources from the site and install it that way.\n. ",
    "spkane": "So, are you saying that the error, or failed test, is harmless? I don't really want to force something that is going to cause me issues in the future, and be much harder to track down.\n\nSean\n. I ended up using --force for python 2.7.2 and that worked fine. --force for python 3 only sort of worked. There was an issue installing setuptools. I don't have more details at the moment, as I am travelling, but I'll try to post more information when I get back.\n. So, are you saying that the error, or failed test, is harmless? I don't really want to force something that is going to cause me issues in the future, and be much harder to track down.\n\nSean\n. I ended up using --force for python 2.7.2 and that worked fine. --force for python 3 only sort of worked. There was an issue installing setuptools. I don't have more details at the moment, as I am travelling, but I'll try to post more information when I get back.\n. ",
    "ghost": "I have the same issue. Freshly installed OS X Lion + XCode 4.1 + Pythonbrew 0.9. The build will only complete if I use --force, otherwise it will fail on some tests.\n. FYI - I confirmed these dependencies also solve the problem set on Ubuntu 12.04 \n. Correction - from the source code of pythonbrew following packages need to be installed \nsimply save them to a list and do a \nfor i in `cat list`; do apt-get -y install $i; done\n\ncurl\nbuild-essential\nlibbz2-dev\nlibsqlite3-dev\nzlib1g-dev\nlibxml2-dev\nlibxslt1-dev\nlibreadline5\nlibreadline5-dev\nlibgdbm-dev\nlibgdb-dev\nlibxml2\nlibssl-dev\ntk-dev\nlibgdbm-dev\nlibexpat1-dev\nlibncursesw5-dev\n. confirmed this solves this problem set \n\nalienone@DragonFly:~$ pythonbrew install 2.7.3\nUse the previously fetched /home/alienone/.pythonbrew/dists/Python-2.7.3.tgz\nExtracting Python-2.7.3.tgz into /home/alienone/.pythonbrew/build/Python-2.7.3\n\nThis could take a while. You can run the following command on another shell to track the status:\n  tail -f \"/home/alienone/.pythonbrew/log/build.log\"\n\nInstalling Python-2.7.3 into /home/alienone/.pythonbrew/pythons/Python-2.7.3\nDownloading distribute_setup.py as /home/alienone/.pythonbrew/dists/distribute_setup.py\n######################################################################## 100.0%\nInstalling distribute into /home/alienone/.pythonbrew/pythons/Python-2.7.3\nInstalling pip into /home/alienone/.pythonbrew/pythons/Python-2.7.3\n\nInstalled Python-2.7.3 successfully. Run the following command to switch to Python-2.7.3.\n  pythonbrew switch 2.7.3\n. I have the same issue. Freshly installed OS X Lion + XCode 4.1 + Pythonbrew 0.9. The build will only complete if I use --force, otherwise it will fail on some tests.\n. FYI - I confirmed these dependencies also solve the problem set on Ubuntu 12.04 \n. Correction - from the source code of pythonbrew following packages need to be installed \nsimply save them to a list and do a \nfor i in `cat list`; do apt-get -y install $i; done\n\ncurl\nbuild-essential\nlibbz2-dev\nlibsqlite3-dev\nzlib1g-dev\nlibxml2-dev\nlibxslt1-dev\nlibreadline5\nlibreadline5-dev\nlibgdbm-dev\nlibgdb-dev\nlibxml2\nlibssl-dev\ntk-dev\nlibgdbm-dev\nlibexpat1-dev\nlibncursesw5-dev\n. confirmed this solves this problem set \n\nalienone@DragonFly:~$ pythonbrew install 2.7.3\nUse the previously fetched /home/alienone/.pythonbrew/dists/Python-2.7.3.tgz\nExtracting Python-2.7.3.tgz into /home/alienone/.pythonbrew/build/Python-2.7.3\n\nThis could take a while. You can run the following command on another shell to track the status:\n  tail -f \"/home/alienone/.pythonbrew/log/build.log\"\n\nInstalling Python-2.7.3 into /home/alienone/.pythonbrew/pythons/Python-2.7.3\nDownloading distribute_setup.py as /home/alienone/.pythonbrew/dists/distribute_setup.py\n######################################################################## 100.0%\nInstalling distribute into /home/alienone/.pythonbrew/pythons/Python-2.7.3\nInstalling pip into /home/alienone/.pythonbrew/pythons/Python-2.7.3\n\nInstalled Python-2.7.3 successfully. Run the following command to switch to Python-2.7.3.\n  pythonbrew switch 2.7.3\n. ",
    "shurane": "Which test fails for you guys? For me, it's `test_dl`. Guess it's `force` time.\n. Have you looked at saghul/pythonz? He's added support for Stackless, PyPy, and Jython. His project is at https://github.com/saghul/pythonz\n. Which test fails for you guys? For me, it's `test_dl`. Guess it's `force` time.\n. Have you looked at saghul/pythonz? He's added support for Stackless, PyPy, and Jython. His project is at https://github.com/saghul/pythonz\n. ",
    "Emerson": "Failing for me also.\n. Failing for me also.\n. ",
    "nerduno": "pythonbrew install 3.2.1 yields 4 failed tests:\n    test_ctypes test_dbm test_distutils test_platform\n. pythonbrew install 3.2.1 yields 4 failed tests:\n    test_ctypes test_dbm test_distutils test_platform\n. ",
    "steakknife": "+1 \n\npythonbrew install 2.7.2 \nOS X 10.7.2\nXcode 4.2 upgraded from 4.1 \n. +1 \n\npythonbrew install 2.7.2 \nOS X 10.7.2\nXcode 4.2 upgraded from 4.1 \n. ",
    "dergraf": "I upgraded to OS X 10.7.3 yesterday, through AppStore I installed XCode 4.3 (you need to start XCode which triggers the 'real' installer. However, <code>pythonbrew install 2.7.2</code> was still not working.. so I learned about the trick that will do it (not sure about earlier versions of OSX/XCode though). you need to install the <b>Command Line Tools for XCode</b> then everything seems to work nicely. You can download them either on the http://developer.apple.com website or over the Downloads pane in XCode's preferences.  \n\nBut the mentioned problem with the test cases remains but <code>pythonbrew install --no-test 2.7.2</code>  works.\n. <code>pythonbrew install --no-test 2.7.2</code> does the trick\n. I upgraded to OS X 10.7.3 yesterday, through AppStore I installed XCode 4.3 (you need to start XCode which triggers the 'real' installer. However, <code>pythonbrew install 2.7.2</code> was still not working.. so I learned about the trick that will do it (not sure about earlier versions of OSX/XCode though). you need to install the <b>Command Line Tools for XCode</b> then everything seems to work nicely. You can download them either on the http://developer.apple.com website or over the Downloads pane in XCode's preferences.  \n\nBut the mentioned problem with the test cases remains but <code>pythonbrew install --no-test 2.7.2</code>  works.\n. <code>pythonbrew install --no-test 2.7.2</code> does the trick\n. ",
    "justquick": "yup, python.org is def still having problems. if you look at the src, that command attempts to download Python-2.7.2.tgz from python.org. I tried doing a wget on the source url and it keeps timing out and retrying and never succeeds:\n\n```\nJquick7490MLA:~ jquick$ wget http://www.python.org/ftp/python/2.7.2/Python-2.7.2.tgz\n--2011-07-24 11:02:55--  http://www.python.org/ftp/python/2.7.2/Python-2.7.2.tgz\nResolving www.python.org... 2001:888:2000:d::a2, 82.94.164.162\nConnecting to www.python.org|2001:888:2000:d::a2|:80... failed: No route to host.\nConnecting to www.python.org|82.94.164.162|:80... failed: Operation timed out.\nRetrying.\n\n```\n. yup, python.org is def still having problems. if you look at the src, that command attempts to download Python-2.7.2.tgz from python.org. I tried doing a wget on the source url and it keeps timing out and retrying and never succeeds:\n\n```\nJquick7490MLA:~ jquick$ wget http://www.python.org/ftp/python/2.7.2/Python-2.7.2.tgz\n--2011-07-24 11:02:55--  http://www.python.org/ftp/python/2.7.2/Python-2.7.2.tgz\nResolving www.python.org... 2001:888:2000:d::a2, 82.94.164.162\nConnecting to www.python.org|2001:888:2000:d::a2|:80... failed: No route to host.\nConnecting to www.python.org|82.94.164.162|:80... failed: Operation timed out.\nRetrying.\n\n```\n. ",
    "bow": "Hi utahta,\n\nI did get it working if I install another Python under `.pythonbrew`. I don't have anything to add for now, but I'll be sure to let you know when I do.\n\nThanks (for the answer & the writing module) :)!\n. Hi utahta,\n\nI did get it working if I install another Python under `.pythonbrew`. I don't have anything to add for now, but I'll be sure to let you know when I do.\n\nThanks (for the answer & the writing module) :)!\n. ",
    "hisnameisjimmy": "Issue is simply related to patch not being installed by default on some systems, and users will need it to install Python 3.2\n. Issue is simply related to patch not being installed by default on some systems, and users will need it to install Python 3.2\n. ",
    "fjordan": "Thank you for this. Was helpful for Amazon linux on EC2.\n. Thank you for this. Was helpful for Amazon linux on EC2.\n. ",
    "seanfisk": "I can confirm this issue when using the same exact command line.\n. Thanks, ashwoods, this finally makes sense to me now. Your proposed solution seems sensible.\n. Personally, I'd rather not have this. I've never liked the fact that RVM hijacks cd and I'm not sure there is any other way to do it.\n. I can confirm this issue when using the same exact command line.\n. Thanks, ashwoods, this finally makes sense to me now. Your proposed solution seems sensible.\n. Personally, I'd rather not have this. I've never liked the fact that RVM hijacks cd and I'm not sure there is any other way to do it.\n. ",
    "ashwoods": "I've posted a workaround here: http://stackoverflow.com/questions/6377921/problems-compiling-python-3-2-and-2-7-using-pythonbrew/8324176#8324176\n\na fix could look like \"pythonbrew use\" checking if the shared lib exists and add it to LD_LIBRARY_PATH \"automagically\".\nNot sure if this could be a problem with other apps if its not empty and the app is relying on it.\n. did you install all the header files?\n. some info that might help: http://stackoverflow.com/questions/6377921/problems-compiling-python-3-2-and-2-7-using-pythonbrew\n. I've posted a workaround here: http://stackoverflow.com/questions/6377921/problems-compiling-python-3-2-and-2-7-using-pythonbrew/8324176#8324176\n\na fix could look like \"pythonbrew use\" checking if the shared lib exists and add it to LD_LIBRARY_PATH \"automagically\".\nNot sure if this could be a problem with other apps if its not empty and the app is relying on it.\n. did you install all the header files?\n. some info that might help: http://stackoverflow.com/questions/6377921/problems-compiling-python-3-2-and-2-7-using-pythonbrew\n. ",
    "DarwinAwardWinner": "I found a way to do this without having to set `LD_LIBRARY_PATH` permanently in your shell init files. Basically, you can use `LD_RUN_PATH` at build-time instead of `LD_LIBRARY_PATH` at run-time. This is good because pythonbrew could set `LD_RUN_PATH` while building Python, and then users would not have to do anything special to make the installed python work.\n\nhttp://stackoverflow.com/questions/6377921/problems-compiling-python-3-2-and-2-7-using-pythonbrew/10455502#10455502\n. I found a way to do this without having to set `LD_LIBRARY_PATH` permanently in your shell init files. Basically, you can use `LD_RUN_PATH` at build-time instead of `LD_LIBRARY_PATH` at run-time. This is good because pythonbrew could set `LD_RUN_PATH` while building Python, and then users would not have to do anything special to make the installed python work.\n\nhttp://stackoverflow.com/questions/6377921/problems-compiling-python-3-2-and-2-7-using-pythonbrew/10455502#10455502\n. ",
    "anthonyrisinger": "If you instead use `LD_RUN_PATH='$ORIGIN/../lib'`, the installation won't be tied to a specific path.  `$ORIGIN` is the `PWD` of the running binary (see linked SO page)\n\n**EDIT:** sadly venvs breaks because virtualenv copies the `python` binary (changing `$ORIGIN`), but does _not_ copy (or symlink) the library, so C/builtin dynamic modules in the venv end up linking to the system python ... ungood :-( ...\n\n... IMO this is a bug to be fixed (in virtualenv?), but an easy workaround is to manually copy/symlink `libpythonX.Y.so*` into the lib/ dir of the venv ... or do something a little yucky looking like (note X.Y.Z):\n\n`LD_RUN_PATH='$ORIGIN/../lib:$ORIGIN/../../../../pythons/Python-X.Y.Z/lib'`\n\n... pick whatever is less nasty to you; both verified to work.\n\n**EDIT:** see: https://github.com/pypa/virtualenv/issues/216#issuecomment-8568603\n. is there a technical reason for avoiding this? if its a matter of patches welcome just say so, and thy will may likely be done ;-) it's a sore spot in my build process right now -- i'd like to remedy ASAP.\n\nwhat is the action plan here?  while i'd rather not delve into the source ATM, it's a small enough change that i can probably submit a proper patch ... but i need status.\n. If you instead use `LD_RUN_PATH='$ORIGIN/../lib'`, the installation won't be tied to a specific path.  `$ORIGIN` is the `PWD` of the running binary (see linked SO page)\n\n**EDIT:** sadly venvs breaks because virtualenv copies the `python` binary (changing `$ORIGIN`), but does _not_ copy (or symlink) the library, so C/builtin dynamic modules in the venv end up linking to the system python ... ungood :-( ...\n\n... IMO this is a bug to be fixed (in virtualenv?), but an easy workaround is to manually copy/symlink `libpythonX.Y.so*` into the lib/ dir of the venv ... or do something a little yucky looking like (note X.Y.Z):\n\n`LD_RUN_PATH='$ORIGIN/../lib:$ORIGIN/../../../../pythons/Python-X.Y.Z/lib'`\n\n... pick whatever is less nasty to you; both verified to work.\n\n**EDIT:** see: https://github.com/pypa/virtualenv/issues/216#issuecomment-8568603\n. is there a technical reason for avoiding this? if its a matter of patches welcome just say so, and thy will may likely be done ;-) it's a sore spot in my build process right now -- i'd like to remedy ASAP.\n\nwhat is the action plan here?  while i'd rather not delve into the source ATM, it's a small enough change that i can probably submit a proper patch ... but i need status.\n. ",
    "xenoterracide": "definitely still a problem. I tried installing pyside before doing `--enabled-shared` and that didn't work, tried `--enable-shared` and encountered this.\n. definitely still a problem. I tried installing pyside before doing `--enabled-shared` and that didn't work, tried `--enable-shared` and encountered this.\n. ",
    "limeyd": "this issue is that get_using_python_pkgname only checks against PATH_PYTHONS so the venv get skipped. recommend adding case for checking against PATH_VENVS\n. this issue is that get_using_python_pkgname only checks against PATH_PYTHONS so the venv get skipped. recommend adding case for checking against PATH_VENVS\n. ",
    "suvash": "Sweet ! Hope this gets merged soon. \n\nI've used the snippet to also fix the issue of `pythonbrew off` not deactivating the virtual env.\nI have opened an issue#54 ( https://github.com/utahta/pythonbrew/issues/54)\nand submitted a pull request ( https://github.com/utahta/pythonbrew/pull/55 ) for the issue.\n\nThanks a lot Limeyd ! this was buggin me a lot.\n. just ran into pythonbrew, I'd love to have the rvmrc like feature as well.\nbecause one has to explicitly create the file for auto venv switching,\nit shouldn't be a problem to the ones who chose not to use it.\n. I'm not sure what the dependencies are, so I haven't installed any other headers.\nwould sure give it a try if I did know what the headers are.\n\nCan you explain a little bit more, when you say \"all the header files\" ?\n. Solves the issue #54 I've opened ( https://github.com/utahta/pythonbrew/issues/54 )\n. Sweet ! Hope this gets merged soon. \n\nI've used the snippet to also fix the issue of `pythonbrew off` not deactivating the virtual env.\nI have opened an issue#54 ( https://github.com/utahta/pythonbrew/issues/54)\nand submitted a pull request ( https://github.com/utahta/pythonbrew/pull/55 ) for the issue.\n\nThanks a lot Limeyd ! this was buggin me a lot.\n. just ran into pythonbrew, I'd love to have the rvmrc like feature as well.\nbecause one has to explicitly create the file for auto venv switching,\nit shouldn't be a problem to the ones who chose not to use it.\n. I'm not sure what the dependencies are, so I haven't installed any other headers.\nwould sure give it a try if I did know what the headers are.\n\nCan you explain a little bit more, when you say \"all the header files\" ?\n. Solves the issue #54 I've opened ( https://github.com/utahta/pythonbrew/issues/54 )\n. ",
    "djv": "This should be fixed in 40e9550\n. Also added a rename command for venv. Issue #47\n. This should be fixed in 40e9550\n. Also added a rename command for venv. Issue #47\n. ",
    "cloudartisan": "I'd love the same thing.  Heck, if I wasn't under the pump right now at work I'd offer to code it up.\n\nps.  Loving pythonbrew so far!\n. I'd love the same thing.  Heck, if I wasn't under the pump right now at work I'd offer to code it up.\n\nps.  Loving pythonbrew so far!\n. ",
    "iwinux": "I'm gonna take a look at RVM's code some time. Hope that I can learn the idea from RVM and implement it for pythonbrew.\n. I'm gonna take a look at RVM's code some time. Hope that I can learn the idea from RVM and implement it for pythonbrew.\n. ",
    "bkad": "they hijack `cd`\n\n``` bash\ncd () \n{ \n    builtin cd \"$@\";\n    local result=$?;\n    __rvm_project_rvmrc;\n    __rvm_after_cd;\n    return $result\n}\n```\n. they hijack `cd`\n\n``` bash\ncd () \n{ \n    builtin cd \"$@\";\n    local result=$?;\n    __rvm_project_rvmrc;\n    __rvm_after_cd;\n    return $result\n}\n```\n. ",
    "akhil": "+1\n. +1\n. ",
    "ypandit": "This can work too: https://github.com/cxreg/smartcd\n. This can work too: https://github.com/cxreg/smartcd\n. ",
    "andrewcrook": "+1\n. +1\n. ",
    "jukeks": "+1\n. +1\n. ",
    "stefanor": "BTW, there's an easy workaround: `VIRTUALENV_USE_DISTRIBUTE=1 pythonbrew venv create FOO`\n. BTW, there's an easy workaround: `VIRTUALENV_USE_DISTRIBUTE=1 pythonbrew venv create FOO`\n. ",
    "mactkg": "It looks that installing python require the package included \"dpkg-architecture\".\nSo please try installing the package of \"dpkg-dev\".\n\"dpkg-dev\" might be including \"dpkg-architecture\".\n. It looks that installing python require the package included \"dpkg-architecture\".\nSo please try installing the package of \"dpkg-dev\".\n\"dpkg-dev\" might be including \"dpkg-architecture\".\n. ",
    "kylegibson": "dpkg-architecture is provided by dpkg-dev, but that isn't what is causing this error. I'm facing this same issue. After having spent an hour trying to figure out what was going on, I've finally discovered the cause.\n\nWhen pythonbrew installs a python distribution, it will do the following:\n1) Download the tarball\n2) Extract the tarball\n3) Apply patches\n4) Configure\n5) Make\n... etc\n\nThis error doesn't manifest until after everything is done and the setup.py is run, but it comes back to when the file is patched in step 3. \n\nThe patch that is being applied to 2.6.5 is all/common/patch-setup.py.diff. If you examine this patch, you will note that although it makes use of \"find_executable\" it does not explicitly import the function.\n\nIf you examine another patch, all/python25/patch-setup.py.diff, you will note that \"from distutils.spawn import find_executable\" is provided at the top. It is this import that is not being patched for 2.6.5 that is causing this error with setup. \n. dpkg-architecture is provided by dpkg-dev, but that isn't what is causing this error. I'm facing this same issue. After having spent an hour trying to figure out what was going on, I've finally discovered the cause.\n\nWhen pythonbrew installs a python distribution, it will do the following:\n1) Download the tarball\n2) Extract the tarball\n3) Apply patches\n4) Configure\n5) Make\n... etc\n\nThis error doesn't manifest until after everything is done and the setup.py is run, but it comes back to when the file is patched in step 3. \n\nThe patch that is being applied to 2.6.5 is all/common/patch-setup.py.diff. If you examine this patch, you will note that although it makes use of \"find_executable\" it does not explicitly import the function.\n\nIf you examine another patch, all/python25/patch-setup.py.diff, you will note that \"from distutils.spawn import find_executable\" is provided at the top. It is this import that is not being patched for 2.6.5 that is causing this error with setup. \n. ",
    "mattlangeman": "Did anyone figure this one out? I'm having the same issue installing python via pythonbrew on Ubuntu 12.04 on Amazon EC2. It hangs at the same spot as mentioned above. I've installed dependencies with apt-get build-dep python2.7 and I've tried installing both python2.6.5 and python 2.7, but no luck.\n. Just an update... it seems like it's probably an issue with my instance being a t1.micro. I started up an m1.small and didn't have the issue. Any workarounds to make this work on a t1.micro instance?\n. Did anyone figure this one out? I'm having the same issue installing python via pythonbrew on Ubuntu 12.04 on Amazon EC2. It hangs at the same spot as mentioned above. I've installed dependencies with apt-get build-dep python2.7 and I've tried installing both python2.6.5 and python 2.7, but no luck.\n. Just an update... it seems like it's probably an issue with my instance being a t1.micro. I started up an m1.small and didn't have the issue. Any workarounds to make this work on a t1.micro instance?\n. ",
    "rengler": "I got stuck here as well when it had worked for me before. I found that the AMI had changed at some point when using the easy instance builder menu. If you specify ami-0d153248 (Ubuntu 12.04 LTS 64-bit) on a t1.micro and then set up the prereqs then try to build Python, everything works fine. Does that help you?\n. I got stuck here as well when it had worked for me before. I found that the AMI had changed at some point when using the easy instance builder menu. If you specify ami-0d153248 (Ubuntu 12.04 LTS 64-bit) on a t1.micro and then set up the prereqs then try to build Python, everything works fine. Does that help you?\n. ",
    "wting": "The pythonbrew code is pretty easily understandable, so you just need to check the source code for the [`switch` command](https://github.com/utahta/pythonbrew/blob/master/pythonbrew/commands/switch.py).\n\nUsing `pythonbrew switch` will add `~/.pythonbrew/bin`, `~/.pythonbrew/pythons/Python-3.2.3/bin` to your $PATH, as well as _override_ your $PYTHONPATH with `~/.pythonbrew/pythons/Python-3.2.3/lib`. Replace 3.2.3 with whichever Python version you switched to.\n. Pythonbrew is not made for this purpose. Your solution is to either:\n- Install both 2.7.3 and 3.2.3 and use them as part of PythonBrew at all times.\n- Or delete /usr/bin/python and recreate the symlink to /usr/bin/python2\n\nI run Arch x64, and have taken the 2nd option. It was a bad decision on Arch's part to move to Python 3 so soon when most popular modules (numpy, django, etc) don't provide v3 support.\n. I had troubles installing pip because apparently I don't have setuptools / distribute installed.\n. I just wanted to point out that I took the shortcut and merely replaced `$PYTHON_PATH` with a path to the current pythonbrew library. The more elegant solution in the future would be to prepend the path with the current pythonbrew library so that Python checks that first before moving on to system library modules.\n\nHowever this could also cause unintended side effects so it's up for discussion.\n. I traced the prompt into the virtualenv package. A simple `export VIRTUAL_ENV_DISABLE_PROMPT=1` disables this behavior.\n. Yes you can use it with zsh (I am). FYI, in general zshrc can be thought of as a superset of bash except for niche constructs (e.g. regex conditional matching, tab completion is different).\n. The pythonbrew code is pretty easily understandable, so you just need to check the source code for the [`switch` command](https://github.com/utahta/pythonbrew/blob/master/pythonbrew/commands/switch.py).\n\nUsing `pythonbrew switch` will add `~/.pythonbrew/bin`, `~/.pythonbrew/pythons/Python-3.2.3/bin` to your $PATH, as well as _override_ your $PYTHONPATH with `~/.pythonbrew/pythons/Python-3.2.3/lib`. Replace 3.2.3 with whichever Python version you switched to.\n. Pythonbrew is not made for this purpose. Your solution is to either:\n- Install both 2.7.3 and 3.2.3 and use them as part of PythonBrew at all times.\n- Or delete /usr/bin/python and recreate the symlink to /usr/bin/python2\n\nI run Arch x64, and have taken the 2nd option. It was a bad decision on Arch's part to move to Python 3 so soon when most popular modules (numpy, django, etc) don't provide v3 support.\n. I had troubles installing pip because apparently I don't have setuptools / distribute installed.\n. I just wanted to point out that I took the shortcut and merely replaced `$PYTHON_PATH` with a path to the current pythonbrew library. The more elegant solution in the future would be to prepend the path with the current pythonbrew library so that Python checks that first before moving on to system library modules.\n\nHowever this could also cause unintended side effects so it's up for discussion.\n. I traced the prompt into the virtualenv package. A simple `export VIRTUAL_ENV_DISABLE_PROMPT=1` disables this behavior.\n. Yes you can use it with zsh (I am). FYI, in general zshrc can be thought of as a superset of bash except for niche constructs (e.g. regex conditional matching, tab completion is different).\n. ",
    "jamesgecko": "I somehow missed that. Thanks!\n. I somehow missed that. Thanks!\n. ",
    "nerdfiles": "Likely not!\n\nBefore installing python (even through pythonbrew): http://stackoverflow.com/questions/812781/pythons-bz2-module-not-compiled-by-default\n\nOtherwise you'll most certainly run into git/hg/svn+compressed files issues.\n. Likely not!\n\nBefore installing python (even through pythonbrew): http://stackoverflow.com/questions/812781/pythons-bz2-module-not-compiled-by-default\n\nOtherwise you'll most certainly run into git/hg/svn+compressed files issues.\n. ",
    "ichernev": "Thanks! I used the second approach also, but with a script that can change the versions and then bring them back to stock.\n. Thanks! I used the second approach also, but with a script that can change the versions and then bring them back to stock.\n. ",
    "thedrow": "Turns out that on Ubuntu you have to run the following script:\n\n```\nsudo apt-get install build-essential\nsudo apt-get install libncursesw5-dev\nsudo apt-get install libreadline-gplv2-dev\nsudo apt-get install libssl-dev\nsudo apt-get install libgdbm-dev\nsudo apt-get install libbz2-dev\nsudo apt-get install libc6-dev\nsudo apt-get install libsqlite3-dev\nsudo apt-get install tk-dev\n```\n\nThis gets all the dependencies that python uses to build itself. You can cherrypick them but for distribute zlib and bz2 (I'm not sure about bz2) are a must. **This should be specified in the docs.**\n\nIf python still doesn't recognize zlib and fails to install distribute try installing dpkg-dev as the python install script uses it to find out where libz.so is.\n\n```\nsudo apt-get install dpkg-dev\n```\n. Turns out that on Ubuntu you have to run the following script:\n\n```\nsudo apt-get install build-essential\nsudo apt-get install libncursesw5-dev\nsudo apt-get install libreadline-gplv2-dev\nsudo apt-get install libssl-dev\nsudo apt-get install libgdbm-dev\nsudo apt-get install libbz2-dev\nsudo apt-get install libc6-dev\nsudo apt-get install libsqlite3-dev\nsudo apt-get install tk-dev\n```\n\nThis gets all the dependencies that python uses to build itself. You can cherrypick them but for distribute zlib and bz2 (I'm not sure about bz2) are a must. **This should be specified in the docs.**\n\nIf python still doesn't recognize zlib and fails to install distribute try installing dpkg-dev as the python install script uses it to find out where libz.so is.\n\n```\nsudo apt-get install dpkg-dev\n```\n. ",
    "mbenedettini": "On Debian Squeeze, installing libbz2-dev and zlib1g-dev (and rebuilding 2.7.3) solved the issue.\n. libssl-dev is also needed for httplib to support https connections\n. On Debian Squeeze, installing libbz2-dev and zlib1g-dev (and rebuilding 2.7.3) solved the issue.\n. libssl-dev is also needed for httplib to support https connections\n. ",
    "hartmut27": "Can confirm that installing libbz2-dev zlib1g-dev has fixed the problem.\n. Can confirm that installing libbz2-dev zlib1g-dev has fixed the problem.\n. ",
    "cristiandreica": "I have the same problem when installing Python 2.5 with --configure=\"--enable-shared\", even after installing all those dependencies. I'm running Debian GNU/Linus 5.0.\n\nRunning python distribute_setup.py works OK.\n. I have the same problem when installing Python 2.5 with --configure=\"--enable-shared\", even after installing all those dependencies. I'm running Debian GNU/Linus 5.0.\n\nRunning python distribute_setup.py works OK.\n. ",
    "anisse": "Well, it's officially out now:\nhttp://python.org/download/releases/2.7.3/\n. Oh. Indeed.\n. On Linux, too.\nIt seems like it tries to check if the file is a tarfile before downloading it. (That's because first test on content_type is failing)\n. @dahjelle : it's not the same. In one case a tar.gz archive is downloaded, in the other, it's over git.\n. You know you can use \"pybrew\" ?\n. Well, it's officially out now:\nhttp://python.org/download/releases/2.7.3/\n. Oh. Indeed.\n. On Linux, too.\nIt seems like it tries to check if the file is a tarfile before downloading it. (That's because first test on content_type is failing)\n. @dahjelle : it's not the same. In one case a tar.gz archive is downloaded, in the other, it's over git.\n. You know you can use \"pybrew\" ?\n. ",
    "socketbox": "In the future, you could always just add the necessary lines to ~/.pythonbrew/etc/config.cfg\n. Results in the same error. Using the --master flag seems to help, oddly. Though that, too, seems buggy.\n\n``` bash\nsb [ ~/foo ]$ pythonbrew update\nTraceback (most recent call last):\n  File \"/Users/sb/.pythonbrew/scripts/pythonbrew_main.py\", line 3, in <module>\n    pythonbrew.main()\n  File \"/Users/sb/.pythonbrew/scripts/pythonbrew/__init__.py\", line 27, in main\n    command.run(args[1:])\n  File \"/Users/sb/.pythonbrew/scripts/pythonbrew/basecommand.py\", line 21, in run\n    self.run_command(options, args)\n  File \"/Users/sb/.pythonbrew/scripts/pythonbrew/commands/update.py\", line 52, in run_command\n    self._update_pythonbrew(options, args)\n  File \"/Users/sb/.pythonbrew/scripts/pythonbrew/commands/update.py\", line 91, in _update_pythonbrew\n    if not is_gzip(content_type, Link(download_url).filename):\n  File \"/Users/sb/.pythonbrew/scripts/pythonbrew/util.py\", line 60, in is_gzip\n    or tarfile.is_tarfile(filename)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/tarfile.py\", line 2583, in is_tarfile\n    t = open(name)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/tarfile.py\", line 1658, in open\n    return func(name, \"r\", fileobj, **kwargs)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/tarfile.py\", line 1720, in gzopen\n    fileobj = bltn_open(name, mode + \"b\")\nIOError: [Errno 2] No such file or directory: u'pythonbrew-1.3.tar.gz'\nsb [ ~/foo ]$ pythonbrew --version\n1.1\nsb [ ~/foo ]$ pythonbrew update --master\nDownloading pythonbrew-master.tgz as /Users/sb/.pythonbrew/dists/pythonbrew-master.tgz\n######################################################################## 100.0%\nExtracting pythonbrew-master.tgz into /Users/sb/.pythonbrew/build/pythonbrew-master\nInstalling /Users/sb/.pythonbrew/build/pythonbrew-master into /Users/sb/.pythonbrew\nThe pythonbrew has been updated.\n/Users/sb/.pythonbrew/bin/pythonbrew: line 3: unexpected EOF while looking for matching `\"'\n/Users/sb/.pythonbrew/bin/pythonbrew: line 4: syntax error: unexpected end of file\nsb [ ~/.virtualenvs/tagonomy ]$ pythonbrew --version\n1.3\n```\n. I thought the 1.3 update had resolved this issue, but it seems I was wrong.\n\nThe problem has to do with a Makefile in the `Mac/PythonLauncher` directory of the source tarball:\n\n``` bash\n$ head -n 32 Python-2.7.3/Mac/PythonLauncher/Makefile.in | tail -n 4\ninstall: Python\\ Launcher.app\n        test -d \"$(DESTDIR)$(PYTHONAPPSDIR)\" || mkdir -p \"$(DESTDIR)$(PYTHONAPPSDIR)\"\n        -test -d \"$(DESTDIR)$(PYTHONAPPSDIR)/Python Launcher.app\" && rm -r \"$(DESTDIR)$(PYTHONAPPSDIR)/Python Launcher.app\"\n        /bin/cp -r \"Python Launcher.app\" \"$(DESTDIR)$(PYTHONAPPSDIR)\"\n```\n\nMore specifically, `$(DESTDIR)` is not properly set to the subdirectory within ~/.pythonbrew where the framework assets will be installed. This variable is passed as empty to `make` when it's called after the installation changes into the `Mac` subdirectory.\n. It seems like the makefile vars that are appended to $(DESTDIR) are incorrect in that they are absolute. More specifically, I'm talking about $(APPINSTALLDIR), $(PYTHONAPPSDIR) in <distro root>/Mac/Makefile.in and a host of other vars ( $(BINDIR) or $(LIBDIR), $(MANDIR), $(LIBDEST), etc) in the root Makefile (Makefile.pre.in)\n\n$(DESTDIR) is prepended to all of them, without exception, so it should be set to an absolute path itself, allowing variations on that base path to occur without fear of an attempted overwrite.\n. What platform are you on and which version of pythonbrew are you using?\n. As a workaround that might resolve the problem, you could try installing pip, then using that to install virtualenv and virtualenvwrapper, thereby circumventing the use of pythonbrew's `virtualenv.py` module.\n\nJust a suggestion. I've no idea whether it will work or not.\n. In the future, you could always just add the necessary lines to ~/.pythonbrew/etc/config.cfg\n. Results in the same error. Using the --master flag seems to help, oddly. Though that, too, seems buggy.\n\n``` bash\nsb [ ~/foo ]$ pythonbrew update\nTraceback (most recent call last):\n  File \"/Users/sb/.pythonbrew/scripts/pythonbrew_main.py\", line 3, in <module>\n    pythonbrew.main()\n  File \"/Users/sb/.pythonbrew/scripts/pythonbrew/__init__.py\", line 27, in main\n    command.run(args[1:])\n  File \"/Users/sb/.pythonbrew/scripts/pythonbrew/basecommand.py\", line 21, in run\n    self.run_command(options, args)\n  File \"/Users/sb/.pythonbrew/scripts/pythonbrew/commands/update.py\", line 52, in run_command\n    self._update_pythonbrew(options, args)\n  File \"/Users/sb/.pythonbrew/scripts/pythonbrew/commands/update.py\", line 91, in _update_pythonbrew\n    if not is_gzip(content_type, Link(download_url).filename):\n  File \"/Users/sb/.pythonbrew/scripts/pythonbrew/util.py\", line 60, in is_gzip\n    or tarfile.is_tarfile(filename)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/tarfile.py\", line 2583, in is_tarfile\n    t = open(name)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/tarfile.py\", line 1658, in open\n    return func(name, \"r\", fileobj, **kwargs)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/tarfile.py\", line 1720, in gzopen\n    fileobj = bltn_open(name, mode + \"b\")\nIOError: [Errno 2] No such file or directory: u'pythonbrew-1.3.tar.gz'\nsb [ ~/foo ]$ pythonbrew --version\n1.1\nsb [ ~/foo ]$ pythonbrew update --master\nDownloading pythonbrew-master.tgz as /Users/sb/.pythonbrew/dists/pythonbrew-master.tgz\n######################################################################## 100.0%\nExtracting pythonbrew-master.tgz into /Users/sb/.pythonbrew/build/pythonbrew-master\nInstalling /Users/sb/.pythonbrew/build/pythonbrew-master into /Users/sb/.pythonbrew\nThe pythonbrew has been updated.\n/Users/sb/.pythonbrew/bin/pythonbrew: line 3: unexpected EOF while looking for matching `\"'\n/Users/sb/.pythonbrew/bin/pythonbrew: line 4: syntax error: unexpected end of file\nsb [ ~/.virtualenvs/tagonomy ]$ pythonbrew --version\n1.3\n```\n. I thought the 1.3 update had resolved this issue, but it seems I was wrong.\n\nThe problem has to do with a Makefile in the `Mac/PythonLauncher` directory of the source tarball:\n\n``` bash\n$ head -n 32 Python-2.7.3/Mac/PythonLauncher/Makefile.in | tail -n 4\ninstall: Python\\ Launcher.app\n        test -d \"$(DESTDIR)$(PYTHONAPPSDIR)\" || mkdir -p \"$(DESTDIR)$(PYTHONAPPSDIR)\"\n        -test -d \"$(DESTDIR)$(PYTHONAPPSDIR)/Python Launcher.app\" && rm -r \"$(DESTDIR)$(PYTHONAPPSDIR)/Python Launcher.app\"\n        /bin/cp -r \"Python Launcher.app\" \"$(DESTDIR)$(PYTHONAPPSDIR)\"\n```\n\nMore specifically, `$(DESTDIR)` is not properly set to the subdirectory within ~/.pythonbrew where the framework assets will be installed. This variable is passed as empty to `make` when it's called after the installation changes into the `Mac` subdirectory.\n. It seems like the makefile vars that are appended to $(DESTDIR) are incorrect in that they are absolute. More specifically, I'm talking about $(APPINSTALLDIR), $(PYTHONAPPSDIR) in <distro root>/Mac/Makefile.in and a host of other vars ( $(BINDIR) or $(LIBDIR), $(MANDIR), $(LIBDEST), etc) in the root Makefile (Makefile.pre.in)\n\n$(DESTDIR) is prepended to all of them, without exception, so it should be set to an absolute path itself, allowing variations on that base path to occur without fear of an attempted overwrite.\n. What platform are you on and which version of pythonbrew are you using?\n. As a workaround that might resolve the problem, you could try installing pip, then using that to install virtualenv and virtualenvwrapper, thereby circumventing the use of pythonbrew's `virtualenv.py` module.\n\nJust a suggestion. I've no idea whether it will work or not.\n. ",
    "lorin": "I believe that [pythonz](https://github.com/saghul/pythonz) is a fork with more active development, although I haven't personally used either pythonbrew or pythonz.\n. I believe that [pythonz](https://github.com/saghul/pythonz) is a fork with more active development, although I haven't personally used either pythonbrew or pythonz.\n. ",
    "xuhdev": "Thanks!\n. Thanks!\n. ",
    "dahjelle": "I'm not sure if it is equivalent, but I was able to do a `pythonbrew update --master` to update via git. It now reports version 1.2, though I'm not sure if the master branch here on github tracks the release versions exactly or not.\n. I'm not sure if it is equivalent, but I was able to do a `pythonbrew update --master` to update via git. It now reports version 1.2, though I'm not sure if the master branch here on github tracks the release versions exactly or not.\n. ",
    "gitBugReportAccount": "hi, I'm using ubuntu 11.10, pythonbrew 1.2 and I have the latest distribute installed (0.6.26)\n. hi, I'm using ubuntu 11.10, pythonbrew 1.2 and I have the latest distribute installed (0.6.26)\n. ",
    "januz": "Hi, did this problem get fixed? I experience the same on Debian...\n. Hi, did this problem get fixed? I experience the same on Debian...\n. ",
    "ragerri": "Hi \n\nPython3X has been installed although setuptools has not. Setuptools does not work with python3, you have to use distribute instead. \n\nFirst you need to correct the usage error: go to your .pythonbrew/pythons/Python-3X/bin/\n\nand substitute the symbolic link \"python\" so that it points to .pythonbrew/pythons/Python-3.2/bin/python3\n\nInstall distribute: \n\ncurl -O http://python-distribute.org/distribute_setup.py\npython distribute_setup.py\n\ninstall pip for your brew\n\ncurl https://raw.github.com/pypa/pip/master/contrib/get-pip.py | python\n\nCheers, \n\nR\n. Hi \n\nPython3X has been installed although setuptools has not. Setuptools does not work with python3, you have to use distribute instead. \n\nFirst you need to correct the usage error: go to your .pythonbrew/pythons/Python-3X/bin/\n\nand substitute the symbolic link \"python\" so that it points to .pythonbrew/pythons/Python-3.2/bin/python3\n\nInstall distribute: \n\ncurl -O http://python-distribute.org/distribute_setup.py\npython distribute_setup.py\n\ninstall pip for your brew\n\ncurl https://raw.github.com/pypa/pip/master/contrib/get-pip.py | python\n\nCheers, \n\nR\n. ",
    "ichord": "@anisse nope... maybe just me don't know it.\nAnd I just change it for fun. \nI can put this \"alisas pvm pythonbrew\" in .bashrc actually. :smaile:\n. @anisse nope... maybe just me don't know it.\nAnd I just change it for fun. \nI can put this \"alisas pvm pythonbrew\" in .bashrc actually. :smaile:\n. ",
    "gregkrsak": "This issue is probably related to the problem I came here to talk about, so I'll post a pastebin of a terminal session reproducing it: http://pastebin.com/3AGnp1En\n. This issue is probably related to the problem I came here to talk about, so I'll post a pastebin of a terminal session reproducing it: http://pastebin.com/3AGnp1En\n. ",
    "christianpbrink": "Same problem as gregkrsak\n. Same problem as gregkrsak\n. ",
    "mwaterfall": "Yep I've got the same problem! Worrying that the issue has been open for 6 months.\n. Yep I've got the same problem! Worrying that the issue has been open for 6 months.\n. ",
    "deutrino": "Similar bug on Debian Squeeze 6.0.5.\n\nNot a problem on Mac OS X 10.6.8.\n\nOn Squeeze, this appears in build.log:\n\n```\nPython build finished, but the necessary bits to build these modules were not found:\n_bsddb             _curses            _curses_panel   \n_sqlite3           _ssl               _tkinter        \nbsddb185           bz2                dbm             \ngdbm               readline           sunaudiodev     \nzlib                                                  \nTo find the necessary bits, look in setup.py in detect_modules() for the module's name.\n```\n\nAnd this is the end result, due to zlib I presume, see also http://bugs.python.org/issue8978\n\n```\nCreating directory /home/gmuser/.pythonbrew/pythons/Python-2.7.3/share/man/man1\n/usr/bin/install -c -m 644 ./Misc/python.man \\\n                /home/gmuser/.pythonbrew/pythons/Python-2.7.3/share/man/man1/python2.7.1\nExtracting in /tmp/tmpQHTScR\nTraceback (most recent call last):\n  File \"distribute_setup.py\", line 515, in <module>\n    main(sys.argv[1:])\n  File \"distribute_setup.py\", line 511, in main\n    _install(tarball, _build_install_args(argv))\n  File \"distribute_setup.py\", line 73, in _install\n    tar = tarfile.open(tarball)\n  File \"/home/gmuser/.pythonbrew/pythons/Python-2.7.3/lib/python2.7/tarfile.py\", line 1665, in open\n    raise ReadError(\"file could not be opened successfully\")\ntarfile.ReadError: file could not be opened successfully\n```\n. Here are dependencies for optimal functioning of pythonbrew on Debian Squeeze 6.0.5.  Note that this list may be incomplete, as I didn't install any my (fairly barebones) install didn't already have.\n\n```\napt-get install zlib1g-dev libbz2-dev libreadline-dev libgdbm-dev libssl-dev libsqlite3-dev \n```\n. Verified working with Python 2.7.3 under pythonbrew (after a reinstall of 2.7.3) on Debian GNU/Linux 6.0.5.\n. Similar bug on Debian Squeeze 6.0.5.\n\nNot a problem on Mac OS X 10.6.8.\n\nOn Squeeze, this appears in build.log:\n\n```\nPython build finished, but the necessary bits to build these modules were not found:\n_bsddb             _curses            _curses_panel   \n_sqlite3           _ssl               _tkinter        \nbsddb185           bz2                dbm             \ngdbm               readline           sunaudiodev     \nzlib                                                  \nTo find the necessary bits, look in setup.py in detect_modules() for the module's name.\n```\n\nAnd this is the end result, due to zlib I presume, see also http://bugs.python.org/issue8978\n\n```\nCreating directory /home/gmuser/.pythonbrew/pythons/Python-2.7.3/share/man/man1\n/usr/bin/install -c -m 644 ./Misc/python.man \\\n                /home/gmuser/.pythonbrew/pythons/Python-2.7.3/share/man/man1/python2.7.1\nExtracting in /tmp/tmpQHTScR\nTraceback (most recent call last):\n  File \"distribute_setup.py\", line 515, in <module>\n    main(sys.argv[1:])\n  File \"distribute_setup.py\", line 511, in main\n    _install(tarball, _build_install_args(argv))\n  File \"distribute_setup.py\", line 73, in _install\n    tar = tarfile.open(tarball)\n  File \"/home/gmuser/.pythonbrew/pythons/Python-2.7.3/lib/python2.7/tarfile.py\", line 1665, in open\n    raise ReadError(\"file could not be opened successfully\")\ntarfile.ReadError: file could not be opened successfully\n```\n. Here are dependencies for optimal functioning of pythonbrew on Debian Squeeze 6.0.5.  Note that this list may be incomplete, as I didn't install any my (fairly barebones) install didn't already have.\n\n```\napt-get install zlib1g-dev libbz2-dev libreadline-dev libgdbm-dev libssl-dev libsqlite3-dev \n```\n. Verified working with Python 2.7.3 under pythonbrew (after a reinstall of 2.7.3) on Debian GNU/Linux 6.0.5.\n. ",
    "jmoz": "Confirmed, installing deps allows modules to compile, no more errors. Thanks @gordon-morehouse \n. Confirmed, installing deps allows modules to compile, no more errors. Thanks @gordon-morehouse \n. ",
    "briancline": "Confirmed here as well on Squeeze. Thanks to both @gordon-morehouse and @alienone for the solution.\n. Confirmed here as well on Squeeze. Thanks to both @gordon-morehouse and @alienone for the solution.\n. ",
    "arcanosam": "much thanks for all. works perfect on gNewSense 2.3 - deltah\n. just note now that you want to merge with master utatah... sorry...\n\n---\n\nbut, this update it isn't in master, is?\n\nwhen I list my install options, not show 3.3.1 or 2.7.4, 3.2.4\n\nand I have the last update...\n\nsome sugestion about?\n\ncan I update this file manually?\n. I update manually and works perfect in that time, no problem at all...\n. much thanks for all. works perfect on gNewSense 2.3 - deltah\n. just note now that you want to merge with master utatah... sorry...\n\n---\n\nbut, this update it isn't in master, is?\n\nwhen I list my install options, not show 3.3.1 or 2.7.4, 3.2.4\n\nand I have the last update...\n\nsome sugestion about?\n\ncan I update this file manually?\n. I update manually and works perfect in that time, no problem at all...\n. ",
    "onkarnath89": "I am getting the same error with any version I try using pythonbrew.\nBut As I do not have admin rights so it is not possible to install these packages. is there a way to install it locally. Installing So many packages one by one manually will be very tedious.\nI need pip installed as many of my softwares require many python packages and many other softwares which come through pip. due to this instead of python being installed pip don't install.\nKindly suggest me a solution\n. I am getting the same error with any version I try using pythonbrew.\nBut As I do not have admin rights so it is not possible to install these packages. is there a way to install it locally. Installing So many packages one by one manually will be very tedious.\nI need pip installed as many of my softwares require many python packages and many other softwares which come through pip. due to this instead of python being installed pip don't install.\nKindly suggest me a solution\n. ",
    "blaix": ":+1: for this. I wasn't able to get ssl in 2.6.5 on ubuntu 12.04. I applied this pull as a patch to my ~/.pythonbrew and it worked great.\n. For anyone else with this problem, here's the exact steps I had to use:\n\n```\n$ wget https://github.com/utahta/pythonbrew/pull/86.diff\n$ cd ./pythonbrew/scripts\n$ patch -p1 < ~/86.diff\n$ mv pythonbrew/patches/all/python26/patch-_ssl.c-for-ubuntu-oneiric-and-later.diff ~/.pythonbrew/patches/all/python26/\n```\n. :+1: for this. I wasn't able to get ssl in 2.6.5 on ubuntu 12.04. I applied this pull as a patch to my ~/.pythonbrew and it worked great.\n. For anyone else with this problem, here's the exact steps I had to use:\n\n```\n$ wget https://github.com/utahta/pythonbrew/pull/86.diff\n$ cd ./pythonbrew/scripts\n$ patch -p1 < ~/86.diff\n$ mv pythonbrew/patches/all/python26/patch-_ssl.c-for-ubuntu-oneiric-and-later.diff ~/.pythonbrew/patches/all/python26/\n```\n. ",
    "ancho": "Hi. I wrote a first draft of a bash_completion script for pythonbrew.\n\nhttps://github.com/ancho/pythonbrew_completion\n\nIt's working for me. Give it a try. I would apriciate some feedback.\n. good to know. thanks for the feedback.\n. Hi. I wrote a first draft of a bash_completion script for pythonbrew.\n\nhttps://github.com/ancho/pythonbrew_completion\n\nIt's working for me. Give it a try. I would apriciate some feedback.\n. good to know. thanks for the feedback.\n. ",
    "Hubro": "Works perfectly as far as I've been able to test it.\n. Works perfectly as far as I've been able to test it.\n. ",
    "lisongx": "wait for merge\n. wait for merge\n. ",
    "mariuz": "I have tried pythonbrew install 3.3 didn't worked only with 3.3.0 added worked \n. I have tried pythonbrew install 3.3 didn't worked only with 3.3.0 added worked \n. ",
    "areski": "same here, 3.3 doesn't work but 3.3.0 does\n. same here, 3.3 doesn't work but 3.3.0 does\n. ",
    "lyndsysimon": "I tried this today with the current master branch, and `3.3` didn't work, nor did `3.3.2`. `3.3.0` did.\n. :+1:\n. I've since moved to [pythonz](http://saghul.github.io/pythonz/) - or at least, I had until my upgrade to Mavericks broke Python :)\n\nFor running multiple versions, I'm looking into making a Linux VM with multiple interpreters running on a host-only network.\n. I tried this today with the current master branch, and `3.3` didn't work, nor did `3.3.2`. `3.3.0` did.\n. :+1:\n. I've since moved to [pythonz](http://saghul.github.io/pythonz/) - or at least, I had until my upgrade to Mavericks broke Python :)\n\nFor running multiple versions, I'm looking into making a Linux VM with multiple interpreters running on a host-only network.\n. ",
    "rjfv": "Thank you very much! :)\n. Thank you very much! :)\n. ",
    "jmagnusson": "https://github.com/utahta/pythonbrew/pull/96\n. https://github.com/utahta/pythonbrew/pull/96\n. Yeah pythonz looks really good, but as you said, looks a bit abandoned too. 3.3 is still not supported in pythonz. Sounds great, I could help out on my spare time, though it's not a lot at the moment.\n. Wihooo!\n. https://github.com/utahta/pythonbrew/pull/96\n. https://github.com/utahta/pythonbrew/pull/96\n. Yeah pythonz looks really good, but as you said, looks a bit abandoned too. 3.3 is still not supported in pythonz. Sounds great, I could help out on my spare time, though it's not a lot at the moment.\n. Wihooo!\n. ",
    "none-da": ":+1: \n. :+1: \n. ",
    "motiteux": "I am all for it. I had to fork the project in order to incorporate some (very light) changes. But I would definitely prefer a community solution. And be glad to be part of it.\n\nThe author had put a link on the README to [another fork](https://github.com/saghul/pythonz) which has other interesting features. However, this one seems also to be unmaintained (I might be wrong).\n\nI have just started the process to review some of the pull request of this repo to be added back in [my fork](https://github.com/motiteux/pythonbrew). Would you (anyone else too) be interested in doing it with me? I will add as collaborators.\n. good news!\n. There is a pythonbrew.sh in /etc/profile.d/ on my CentOS box after installing pythonbrew systemwide. Debian does not usually has it. But from [this line](https://github.com/utahta/pythonbrew/blob/master/pythonbrew/installer/pythonbrewinstaller.py#L83), it seems that if it exists,  the installer would put there anyway first (instead of /etc/profile).\n. `pythonbrew use 2.7.3` sets the pythonpath and some other environment variables only for the current session. For a set of persistent environment variables, you need to use `pythonbrew switch 2.7.3`. This command will change files in your ~/.pythonbrew/etc folder.\n. I am all for it. I had to fork the project in order to incorporate some (very light) changes. But I would definitely prefer a community solution. And be glad to be part of it.\n\nThe author had put a link on the README to [another fork](https://github.com/saghul/pythonz) which has other interesting features. However, this one seems also to be unmaintained (I might be wrong).\n\nI have just started the process to review some of the pull request of this repo to be added back in [my fork](https://github.com/motiteux/pythonbrew). Would you (anyone else too) be interested in doing it with me? I will add as collaborators.\n. good news!\n. There is a pythonbrew.sh in /etc/profile.d/ on my CentOS box after installing pythonbrew systemwide. Debian does not usually has it. But from [this line](https://github.com/utahta/pythonbrew/blob/master/pythonbrew/installer/pythonbrewinstaller.py#L83), it seems that if it exists,  the installer would put there anyway first (instead of /etc/profile).\n. `pythonbrew use 2.7.3` sets the pythonpath and some other environment variables only for the current session. For a set of persistent environment variables, you need to use `pythonbrew switch 2.7.3`. This command will change files in your ~/.pythonbrew/etc folder.\n. ",
    "MichaelMartinez": "It seems like @utahta is updating again!!!! So awesome!!!! I've used vanilla virtualenv += wrapper, virtualenv-burrito and pythonbrew. I really like pythonbrew as it seems most like rvm. keeping everything separated is ideal... \n. It seems like @utahta is updating again!!!! So awesome!!!! I've used vanilla virtualenv += wrapper, virtualenv-burrito and pythonbrew. I really like pythonbrew as it seems most like rvm. keeping everything separated is ideal... \n. ",
    "mendoncakr": "I am having the same issue. Any luck?\n. I am having the same issue. Any luck?\n. ",
    "yanjost": "Please ignore this pull request\n. Please ignore this pull request\n. ",
    "gkze": "Awesome, I'm `source`ing it with `zsh` with no errors. Thanks\n. Awesome, I'm `source`ing it with `zsh` with no errors. Thanks\n. ",
    "brandon-m-skinner": "You should try doing a pull request with your proposed changes.\n. Right now it's based around bash, so you could  potentially use it with cygwin. You could add Windows-based functionality. It is open source after all.\n. All well and good, but what about people who don't want these things. The three reasons why this shouldn't be added:\n- Excessive warning/failures.\n- Not everyone needs or wants these.\n- This tool automates the building/installation of python, but doesn't hold your hand. For example, it also doesn't tell you to install build utilities.\n\nAll in all, this seems a bit iffy and I don't think this sort of thing should be in the main pythonbrew. However it is open source, you're free to fork and add these features and put in a pull request or have your own version of pythonbrew.  \n. You should try doing a pull request with your proposed changes.\n. Right now it's based around bash, so you could  potentially use it with cygwin. You could add Windows-based functionality. It is open source after all.\n. All well and good, but what about people who don't want these things. The three reasons why this shouldn't be added:\n- Excessive warning/failures.\n- Not everyone needs or wants these.\n- This tool automates the building/installation of python, but doesn't hold your hand. For example, it also doesn't tell you to install build utilities.\n\nAll in all, this seems a bit iffy and I don't think this sort of thing should be in the main pythonbrew. However it is open source, you're free to fork and add these features and put in a pull request or have your own version of pythonbrew.  \n. ",
    "moto2002": "ok.thanks very much\uff01\n\nBrandon Skinner notifications@github.com\u7f16\u5199\uff1a\n\n> Right now it's based around bash, so you could  potentially use it with cygwin. You could add Windows-based functionality. It is open source after all.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/utahta/pythonbrew/issues/114#issuecomment-13083896\n. ok.thanks very much\uff01\n\nBrandon Skinner notifications@github.com\u7f16\u5199\uff1a\n\n> Right now it's based around bash, so you could  potentially use it with cygwin. You could add Windows-based functionality. It is open source after all.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/utahta/pythonbrew/issues/114#issuecomment-13083896\n. ",
    "gthb": "Maybe just emit to the console this bit from the build output:\n\n```\nFailed to find the necessary bits to build these modules:\n_bsddb             _curses            _curses_panel   \n_sqlite3           _tkinter           bsddb185        \nbz2                dbm                dl              \ngdbm               imageop            readline        \nsunaudiodev\n```\n. Maybe just emit to the console this bit from the build output:\n\n```\nFailed to find the necessary bits to build these modules:\n_bsddb             _curses            _curses_panel   \n_sqlite3           _tkinter           bsddb185        \nbz2                dbm                dl              \ngdbm               imageop            readline        \nsunaudiodev\n```\n. ",
    "metcalfc": "Doesn't hold your hand? Thats the biggest pile I've ever heard. If software fails and doesn't tell you why thats a bug. The doc also doesn't mention requirements. Also a bug. \n\nI don't suggest pythonbrew go full meta like rvm --autolibs but documenting requirements is just good software practice. Either improve the doc or fix the tool.\n. Doesn't hold your hand? Thats the biggest pile I've ever heard. If software fails and doesn't tell you why thats a bug. The doc also doesn't mention requirements. Also a bug. \n\nI don't suggest pythonbrew go full meta like rvm --autolibs but documenting requirements is just good software practice. Either improve the doc or fix the tool.\n. ",
    "cpenner461": "+1 on comment from @gthb, would be convenient to have that info bubbled up to the console.\n. +1 on comment from @gthb, would be convenient to have that info bubbled up to the console.\n. ",
    "swiftarrow": "+1 for this.  I'm a beginner, following the Tango with Dango web book, and used pythonbrew in a virtual machine to install 2.7.5.  I've spent the last two days trying to figure out why sqlite3 didn't work, and came here to file a bug, that these packages should be required before python runs:\n\n```\nlibbz2-dev libdb5.1-dev libexpat1-dev libncurses5-dev libreadline6-dev libssl-dev libsqlite3-dev libxml2-dev libxslt-dev \n```\n\nNow I see that you're not going to fix it?  I think that Pythonbrew is awesome, especially for beginners like me, but hiding this requirement and not echoing the results of make back to the console (or even to the log file) have very frustrating results.\n\nFor beginners like me, please let the pythonbrew install script AT LEAST warn users that these packages should be installed for full functionality.\n\nThanks!\n\nPS for other django beginners following the Tango with Django, please see Adorno; it's a script that will help you set up a virtual machine with virtual environments and python all set up to follow the tango with Django web series:\nhttps://github.com/swiftarrow/Adorno\n. 2.7.5 does seem to work, I used pythonbrew to install it.  Shouldn't this be closed?\n. +1 for this.  I'm a beginner, following the Tango with Dango web book, and used pythonbrew in a virtual machine to install 2.7.5.  I've spent the last two days trying to figure out why sqlite3 didn't work, and came here to file a bug, that these packages should be required before python runs:\n\n```\nlibbz2-dev libdb5.1-dev libexpat1-dev libncurses5-dev libreadline6-dev libssl-dev libsqlite3-dev libxml2-dev libxslt-dev \n```\n\nNow I see that you're not going to fix it?  I think that Pythonbrew is awesome, especially for beginners like me, but hiding this requirement and not echoing the results of make back to the console (or even to the log file) have very frustrating results.\n\nFor beginners like me, please let the pythonbrew install script AT LEAST warn users that these packages should be installed for full functionality.\n\nThanks!\n\nPS for other django beginners following the Tango with Django, please see Adorno; it's a script that will help you set up a virtual machine with virtual environments and python all set up to follow the tango with Django web series:\nhttps://github.com/swiftarrow/Adorno\n. 2.7.5 does seem to work, I used pythonbrew to install it.  Shouldn't this be closed?\n. ",
    "Accessory": "Ok, found out the PYTHONBREW_ROOT environment variable was still set. So I used \n\n\"unset PYTHONBREW_ROOT\"\n\nto unset it. But after relogin it reappears \n. Thanks for the help. There was a pythonbrew.sh in my /etc/profile.d/ folder. After deleting it the problem was gone.\n. Ok, found out the PYTHONBREW_ROOT environment variable was still set. So I used \n\n\"unset PYTHONBREW_ROOT\"\n\nto unset it. But after relogin it reappears \n. Thanks for the help. There was a pythonbrew.sh in my /etc/profile.d/ folder. After deleting it the problem was gone.\n. ",
    "brunogama": "thanks\n. thanks\n. ",
    "georgedorn": "+1\n. +1\n. ",
    "samuraisam": "+1\n. +1\n. ",
    "tritium21": "its in the master branch... in my github.  This is a pull request to put it into the main distro.\n. Works fine for me, then again, I have absolutely no access to Crapintosh.\n. its in the master branch... in my github.  This is a pull request to put it into the main distro.\n. Works fine for me, then again, I have absolutely no access to Crapintosh.\n. ",
    "lemuelf": "It doesn't seem to work for me.  Is the patch still needed for 2.7.4, @tritium21?\n\n```\nDownloading Python-2.7.4.tgz as /Users/lemuelf/.pythonbrew/dists/Python-2.7.4.tgz\n######################################################################## 100.0%\nExtracting Python-2.7.4.tgz into /Users/lemuelf/.pythonbrew/build/Python-2.7.4\n\nThis could take a while. You can run the following command on another shell to track the status:\n  tail -f \"/Users/lemuelf/.pythonbrew/log/build.log\"\n\nPatching Python-2.7.4\nERROR: Failed to patch `/Users/lemuelf/.pythonbrew/build/Python-2.7.4`.\n1: failed to `(patch -p0 < \"/Users/lemuelf/.pythonbrew/patches/macosx/python27/patch-Modules-posixmodule.diff\") >> '/Users/lemuelf/.pythonbrew/log/build.log' 2>&1`\n```\n. It doesn't seem to work for me.  Is the patch still needed for 2.7.4, @tritium21?\n\n```\nDownloading Python-2.7.4.tgz as /Users/lemuelf/.pythonbrew/dists/Python-2.7.4.tgz\n######################################################################## 100.0%\nExtracting Python-2.7.4.tgz into /Users/lemuelf/.pythonbrew/build/Python-2.7.4\n\nThis could take a while. You can run the following command on another shell to track the status:\n  tail -f \"/Users/lemuelf/.pythonbrew/log/build.log\"\n\nPatching Python-2.7.4\nERROR: Failed to patch `/Users/lemuelf/.pythonbrew/build/Python-2.7.4`.\n1: failed to `(patch -p0 < \"/Users/lemuelf/.pythonbrew/patches/macosx/python27/patch-Modules-posixmodule.diff\") >> '/Users/lemuelf/.pythonbrew/log/build.log' 2>&1`\n```\n. ",
    "thensgens": "Would be great to see \"official\" support in the main pythonbrew repository for newer python versions, like 2.7.[4,5].\n. Would be great to see \"official\" support in the main pythonbrew repository for newer python versions, like 2.7.[4,5].\n. ",
    "brecke": "hi there,\n\nThis didn't work for me. I mean, no errors show up but I still can't access the `pythonbrew` command. Any tips? thanks.\n\nEDIT: Also, which file are you supposed to copy that snippet into? I've found two `config.fish` files:  `/usr/local/etc/fish/config.fish` and `/usr/local/share/fish/config.fish`\n. Hmmm... It does make the `pythonbrew` command available, but with a lot of errors:\n\n![loading fish shell](http://d.pr/i/kcLi+)\n. Well, I just updated pythonbrew using `pythonbrew update` and it's working now, somehow. Perfect. Thank you for your help anyway!\n. hi there,\n\nThis didn't work for me. I mean, no errors show up but I still can't access the `pythonbrew` command. Any tips? thanks.\n\nEDIT: Also, which file are you supposed to copy that snippet into? I've found two `config.fish` files:  `/usr/local/etc/fish/config.fish` and `/usr/local/share/fish/config.fish`\n. Hmmm... It does make the `pythonbrew` command available, but with a lot of errors:\n\n![loading fish shell](http://d.pr/i/kcLi+)\n. Well, I just updated pythonbrew using `pythonbrew update` and it's working now, somehow. Perfect. Thank you for your help anyway!\n. ",
    "eburley": "I'm using ~/.config/fish/config.fish\n\nthat file won't exist initially,\n. There's something different between our two environments.  The __bash_as_set is trying to evaluate the 'current' file in the ~/.pythonbrew/etc directory and take a typical bash set command:\n\nfoo=bar\nand turn it into a setting.\n\nwhat's the contents of your 'current' file look like?\n. I'm using ~/.config/fish/config.fish\n\nthat file won't exist initially,\n. There's something different between our two environments.  The __bash_as_set is trying to evaluate the 'current' file in the ~/.pythonbrew/etc directory and take a typical bash set command:\n\nfoo=bar\nand turn it into a setting.\n\nwhat's the contents of your 'current' file look like?\n. ",
    "JeffSpies": "+1 I'd like to see active development resume as well, and it seems maintainers are ready and willing.\n. I've been very happy with https://github.com/yyuu/pyenv.\n\nJ.\n\nOn Wed, Nov 13, 2013 at 10:15 AM, Lyndsy Simon notifications@github.comwrote:\n\n> I've since moved to pythonz http://saghul.github.io/pythonz/ - or at\n> least, I had until my upgrade to Mavericks broke Python :)\n> \n> For running multiple versions, I'm looking into making a Linux VM with\n> multiple interpreters running on a host-only network.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/utahta/pythonbrew/issues/129#issuecomment-28402363\n> .\n. +1 I'd like to see active development resume as well, and it seems maintainers are ready and willing.\n. I've been very happy with https://github.com/yyuu/pyenv.\n\nJ.\n\nOn Wed, Nov 13, 2013 at 10:15 AM, Lyndsy Simon notifications@github.comwrote:\n\n> I've since moved to pythonz http://saghul.github.io/pythonz/ - or at\n> least, I had until my upgrade to Mavericks broke Python :)\n> \n> For running multiple versions, I'm looking into making a Linux VM with\n> multiple interpreters running on a host-only network.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/utahta/pythonbrew/issues/129#issuecomment-28402363\n> .\n. ",
    "unbalancedparentheses": "+1\n. +1\n. ",
    "OldhamMade": "Maybe someone could fork under a different project name (pybrew?) and the community could move there?\n. Maybe someone could fork under a different project name (pybrew?) and the community could move there?\n. ",
    "brodul": "https://github.com/wting/pythonbrew/commit/2ecb507226bf21f6aaf469028d620dac86d5fe9c\n. https://github.com/wting/pythonbrew/commit/2ecb507226bf21f6aaf469028d620dac86d5fe9c\n. ",
    "cburmeister": ":thumbsup:\n. :thumbsup:\n. ",
    "robsonpeixoto": "+1\n. The project is deprecated: https://github.com/utahta/pythonbrew#deprecated\n. +1\n. The project is deprecated: https://github.com/utahta/pythonbrew#deprecated\n. ",
    "smoothdvd": "Meet errors:\n\nPatching Python-2.7.5\nERROR: Failed to patch `/Users/alexgao/.pythonbrew/build/Python-2.7.5`.\n1: failed to `(patch -p0 < \"/Users/alexgao/.pythonbrew/patches/macosx/python27/patch-Modules-posixmodule.diff\") >> '/Users/alexgao/.pythonbrew/log/build.log' 2>&1`\n. Meet errors:\n\nPatching Python-2.7.5\nERROR: Failed to patch `/Users/alexgao/.pythonbrew/build/Python-2.7.5`.\n1: failed to `(patch -p0 < \"/Users/alexgao/.pythonbrew/patches/macosx/python27/patch-Modules-posixmodule.diff\") >> '/Users/alexgao/.pythonbrew/log/build.log' 2>&1`\n. ",
    "iamsc": "I also have the same problem.\n. I also have the same problem.\n. ",
    "gardiner": "Same problem here. Apparently the mentioned patch does not apply any more. This is a conservative fix:\n\nFile: `~/.pythonbrew/scripts/installer/pythoninstaller.py`, line 339 (see [here](/utahta/pythonbrew/blob/master/pythonbrew/installer/pythoninstaller.py#L339))\n\nreplace:\n\n``` python\n    elif is_python27(version):\n        patch_dir = PATH_PATCHES_MACOSX_PYTHON27\n        self._add_patches_to_list(patch_dir, ['patch-Modules-posixmodule.diff'])\n```\n\nwith:\n\n``` python\n    elif is_python27(version):\n        if version != '2.7.5':\n            patch_dir = PATH_PATCHES_MACOSX_PYTHON27\n            self._add_patches_to_list(patch_dir, ['patch-Modules-posixmodule.diff'])\n```\n\nOle.\n. Same problem here. Apparently the mentioned patch does not apply any more. This is a conservative fix:\n\nFile: `~/.pythonbrew/scripts/installer/pythoninstaller.py`, line 339 (see [here](/utahta/pythonbrew/blob/master/pythonbrew/installer/pythoninstaller.py#L339))\n\nreplace:\n\n``` python\n    elif is_python27(version):\n        patch_dir = PATH_PATCHES_MACOSX_PYTHON27\n        self._add_patches_to_list(patch_dir, ['patch-Modules-posixmodule.diff'])\n```\n\nwith:\n\n``` python\n    elif is_python27(version):\n        if version != '2.7.5':\n            patch_dir = PATH_PATCHES_MACOSX_PYTHON27\n            self._add_patches_to_list(patch_dir, ['patch-Modules-posixmodule.diff'])\n```\n\nOle.\n. ",
    "scottjbarr": "@gardiner This worked for me. Thanks.\n\nCan you submit the patch?\n. @gardiner This worked for me. Thanks.\n\nCan you submit the patch?\n. ",
    "beelit94": "Hi, will someone submit this? I also experience same problem here\n. Hi, will someone submit this? I also experience same problem here\n. ",
    "natoinet": "Wow it's a pity, I really liked the project and used it so often!\n. Wow it's a pity, I really liked the project and used it so often!\n. ",
    "douglarek": "This project is no longer under active development.\n. This project is no longer under active development.\n. ",
    "mdippery": "Sure. I'm a big fan of pythonbrew and would love to lend a hand.\n. I don't know if we'd necessarily have to change the name. The installs would be disconnected from a forked repo, so there shouldn't be a danger of a user accidentally updating if they didn't intentionally choose to do so. The only technical issue would be the PyPI upload, but maybe utahta would be okay if we took that over, too. I'd say that if he's fine turning over maintainership, we keep the same name.\n\nOtherwise, I vote for **pbr**. :wink: Just kidding, I don't have any good ideas for names.\n. We should probably skip anything with \"2\" in the name\u2014what happens if we get up to v3.0? But we could work with the suggestions given otherwise.\n. Sure. I'm a big fan of pythonbrew and would love to lend a hand.\n. I don't know if we'd necessarily have to change the name. The installs would be disconnected from a forked repo, so there shouldn't be a danger of a user accidentally updating if they didn't intentionally choose to do so. The only technical issue would be the PyPI upload, but maybe utahta would be okay if we took that over, too. I'd say that if he's fine turning over maintainership, we keep the same name.\n\nOtherwise, I vote for **pbr**. :wink: Just kidding, I don't have any good ideas for names.\n. We should probably skip anything with \"2\" in the name\u2014what happens if we get up to v3.0? But we could work with the suggestions given otherwise.\n. ",
    "Kentoseth": "Should we fork it and call it something like \"pythonbrew2\" ?\n\nWe will need some type of name that people can identify with, so that they know that we are maintaining this, but it is separate from utahas pythonbrew and will follow its own direction.\n. It doesn't look like he's even active here anymore. Maybe forking and getting him to just put a link to the new version is the least we could ask him to do without any interruptions.\n\nPlus we'll need to consider possibly rewriting it for Python 3 (far-off thought).\n\nAlthough names aren't important, we have:\n\npythonbrew2\npybrew2\npybro??\npb2\npybr2\n\nI'm leaning towards something where the name distinctly exists so that people can identify that it is from the previous project (and works, mostly).\n\nLets see if utaha responds (i'm not exactly sure how to connect with someone directly on GitHub)\n. Very valid point indeed. Okay, so anything with 2 or any number is out.\n\nAny suggestions?\n\nOtherwise we could just move ahead with \"pybrew\" or the original name itself.\n. You need to install pip together with Python instead of Python alone.\n\nSo try this instead:\n\n> pythonbrew uninstall 2.7.7\n> pythonbrew install --configure=\"--with-zlib\" 2.7.7\n\nAlso, I request that you try supporting us at: https://github.com/pybank/pythonbrew\n\nAs we are maintaining the project now.\n. Hello, what system are you using?\n\nAlso, is python 2.7.7 available in the config file? \n\nIf using a *nix distribution, you can check here: home/.pythonbrew/etc/config.cfg\n\nIf there is no 2.7.7 here, add it and then try running the commands (above) again.\n. Hi there,\n\nYes, I see now that Python successfully downloaded, so my mistake on the config part.\n\nI think this might work also:\n\nFirstly, I recommended that you uninstall 2.7.7 from pythonbrew (hopefully this is done)\n\nNow see which python you are using by typing:\n\n> python\n\nI'm not sure which version you might be on now, but try switching pythonbrew off at this point.\n\n(I think it is something like:\n\n> pythonbrew off\n\n)\n\nNow try this command:\n\n> pythonbrew install --configure=\"--with-zlib\" 2.7.7\n\nTell me the outcome of this.\n. Hi there,\n\nMy apologies for the back and forth.\n\nCan you try running this command:\n\n> pythonbrew install --configure=\"--with-zlib\" 2.7.6\n\nThis problem is very unusual, as I managed to get 2.7.8 running with pip.\n. Should we fork it and call it something like \"pythonbrew2\" ?\n\nWe will need some type of name that people can identify with, so that they know that we are maintaining this, but it is separate from utahas pythonbrew and will follow its own direction.\n. It doesn't look like he's even active here anymore. Maybe forking and getting him to just put a link to the new version is the least we could ask him to do without any interruptions.\n\nPlus we'll need to consider possibly rewriting it for Python 3 (far-off thought).\n\nAlthough names aren't important, we have:\n\npythonbrew2\npybrew2\npybro??\npb2\npybr2\n\nI'm leaning towards something where the name distinctly exists so that people can identify that it is from the previous project (and works, mostly).\n\nLets see if utaha responds (i'm not exactly sure how to connect with someone directly on GitHub)\n. Very valid point indeed. Okay, so anything with 2 or any number is out.\n\nAny suggestions?\n\nOtherwise we could just move ahead with \"pybrew\" or the original name itself.\n. You need to install pip together with Python instead of Python alone.\n\nSo try this instead:\n\n> pythonbrew uninstall 2.7.7\n> pythonbrew install --configure=\"--with-zlib\" 2.7.7\n\nAlso, I request that you try supporting us at: https://github.com/pybank/pythonbrew\n\nAs we are maintaining the project now.\n. Hello, what system are you using?\n\nAlso, is python 2.7.7 available in the config file? \n\nIf using a *nix distribution, you can check here: home/.pythonbrew/etc/config.cfg\n\nIf there is no 2.7.7 here, add it and then try running the commands (above) again.\n. Hi there,\n\nYes, I see now that Python successfully downloaded, so my mistake on the config part.\n\nI think this might work also:\n\nFirstly, I recommended that you uninstall 2.7.7 from pythonbrew (hopefully this is done)\n\nNow see which python you are using by typing:\n\n> python\n\nI'm not sure which version you might be on now, but try switching pythonbrew off at this point.\n\n(I think it is something like:\n\n> pythonbrew off\n\n)\n\nNow try this command:\n\n> pythonbrew install --configure=\"--with-zlib\" 2.7.7\n\nTell me the outcome of this.\n. Hi there,\n\nMy apologies for the back and forth.\n\nCan you try running this command:\n\n> pythonbrew install --configure=\"--with-zlib\" 2.7.6\n\nThis problem is very unusual, as I managed to get 2.7.8 running with pip.\n. ",
    "n00bsys0p": "Fix patch tested and working for me. Not sure why this hasn't been merged or even commented on after 6 weeks...\n. Fix patch tested and working for me. Not sure why this hasn't been merged or even commented on after 6 weeks...\n. ",
    "twmht": "hi,\n\nThe installation failed when I run\n\n```\npythonbrew install --configure=\"--with-zlib\" 2.7.7\n```\n\nThe error messages are\n\n```\nDownloading distribute_setup.py as /home/tumh/.pythonbrew/dists/distribute_setup.py\n######################################################################## 100.0%\nInstalling distribute into /home/tumh/.pythonbrew/pythons/Python-2.7.7\nERROR: Failed to install setuptools. See /home/tumh/.pythonbrew/log/build.log to see why.\nSkip installation of setuptools.\n```\n\n.pythonbrew/log/build.log shows\n\n```\n(cd /home/tumh/.pythonbrew/pythons/Python-2.7.7/share/man/man1; ln -s python2.1 python.1)\n  File \"distribute_setup.py\", line 1\n    <HTML><TITLE>504 Gateway Timeout</TITLE>\n    ^\nSyntaxError: invalid syntax\n```\n\nAny suggestions?\n\nThank you!\n. hi @Kentoseth ,\n\nI am using Lubuntu 14.04\n\nThe config.cfg has configured Python 2.7.7 before.\n\n```\n[Python-2.7.7]\nurl = http://www.python.org/ftp/python/2.7.7/Python-2.7.7.tgz\nlatest = True\n```\n\nInstalling setup-tool always encounters the problem.\n\nI have installed all the dependencies as other similar issues suggest.\n\nAny other suggestions?\n\nThank you!\n. hi @Kentoseth,\n\nThe python version is 2.7.6 after I uninstall 2.7.7. And 2.7.6 is my system-wide python version.\n\nAfter I retry the command \n\n```\npythonbrew install --configure=\"--with-zlib\" 2.7.7\n```\n\nThe problem still exists and the error message does not change.\n\nThank you.\n. hi,\n\nThe installation failed when I run\n\n```\npythonbrew install --configure=\"--with-zlib\" 2.7.7\n```\n\nThe error messages are\n\n```\nDownloading distribute_setup.py as /home/tumh/.pythonbrew/dists/distribute_setup.py\n######################################################################## 100.0%\nInstalling distribute into /home/tumh/.pythonbrew/pythons/Python-2.7.7\nERROR: Failed to install setuptools. See /home/tumh/.pythonbrew/log/build.log to see why.\nSkip installation of setuptools.\n```\n\n.pythonbrew/log/build.log shows\n\n```\n(cd /home/tumh/.pythonbrew/pythons/Python-2.7.7/share/man/man1; ln -s python2.1 python.1)\n  File \"distribute_setup.py\", line 1\n    <HTML><TITLE>504 Gateway Timeout</TITLE>\n    ^\nSyntaxError: invalid syntax\n```\n\nAny suggestions?\n\nThank you!\n. hi @Kentoseth ,\n\nI am using Lubuntu 14.04\n\nThe config.cfg has configured Python 2.7.7 before.\n\n```\n[Python-2.7.7]\nurl = http://www.python.org/ftp/python/2.7.7/Python-2.7.7.tgz\nlatest = True\n```\n\nInstalling setup-tool always encounters the problem.\n\nI have installed all the dependencies as other similar issues suggest.\n\nAny other suggestions?\n\nThank you!\n. hi @Kentoseth,\n\nThe python version is 2.7.6 after I uninstall 2.7.7. And 2.7.6 is my system-wide python version.\n\nAfter I retry the command \n\n```\npythonbrew install --configure=\"--with-zlib\" 2.7.7\n```\n\nThe problem still exists and the error message does not change.\n\nThank you.\n. ",
    "ysakasin": "Hi @twmht,\n\nI get the solution.\nIt is shown at https://github.com/pybank/pythonbrew/pull/7/files .\nPip will be installed if you do the same modifying after that install python 2.7.7 by pythonbrew.\nLet's try it!\n. Hi @twmht,\n\nI get the solution.\nIt is shown at https://github.com/pybank/pythonbrew/pull/7/files .\nPip will be installed if you do the same modifying after that install python 2.7.7 by pythonbrew.\nLet's try it!\n. ",
    "tomoyan596": "\u30de\u30fc\u30b8\u3057\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u3066\u3001\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\n\u4eca\u5f8c\u3068\u3082\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059(^^)\n. \u30de\u30fc\u30b8\u3057\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u3066\u3001\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\n\u4eca\u5f8c\u3068\u3082\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059(^^)\n. ",
    "lgg": "Same error.\r\n`ERROR: Unknown python version: `Python-2.6.6``. Same error.\r\n`ERROR: Unknown python version: `Python-2.6.6``. ",
    "EasonWang01": "Same error.. Same error.. "
}