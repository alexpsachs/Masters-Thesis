{
    "callumboddy": "No worries, cool thanks for updating that\n. yeah I like this, nice addition. \n\nthanks Maz\n. Yep, I do like this idea. There is no need to worry about overhauling, it is one of the reasons the Pod is still 0.1.1. I think it is a really good idea as we should be able to mimic the twitter animation exactly.\n\nI am happy for you to go ahead with either of these approaches. \n. A couple of other features to consider as well:\n- adding a background image/pattern behind\n- not masking the icon\n\nwhat is your opinion here?\n. I am also going to have a look at creating some new unique transition styles the user can then select from. \n. This looks good to me, although I imagine the iconColor is also not working either now as it is only assigned in the init method as well. Ill have a look and if all good will merge this and update. \nthank aldrincb\n. Yep good spot akiroom, ill merge this in, thanks\n. Ill update this asap, although I will be quite busy until this evening (GMT) thanks\n. Thanks for raising this, something that slipped under the radar. will get this patched asap,\nthank you\n. thanks for your implementation rvirin, ill review your changes later and let you know.\nit's a good idea to allow the user to change the size of the scaling.. \n. awesome thanks for this, i will sort this out when i get some time.\n. Hi Alex, I think the cocoapod is currently not the latest.. I do mean to update this but I haven't had the time recently, the files in the Classes/ directory are up to date.. you could create a PR that would be great, but if not, ill try and update this soon. cheers\n. Sorry have been away guys, also very busy at work atm.. thank you very much for doing that @Mazyod . I think it should be fine. \n. Hi mate, which bit exactly is not working? no icon? its not purple?\n. No worries, cool thanks for updating that\n. yeah I like this, nice addition. \n\nthanks Maz\n. Yep, I do like this idea. There is no need to worry about overhauling, it is one of the reasons the Pod is still 0.1.1. I think it is a really good idea as we should be able to mimic the twitter animation exactly.\n\nI am happy for you to go ahead with either of these approaches. \n. A couple of other features to consider as well:\n- adding a background image/pattern behind\n- not masking the icon\n\nwhat is your opinion here?\n. I am also going to have a look at creating some new unique transition styles the user can then select from. \n. This looks good to me, although I imagine the iconColor is also not working either now as it is only assigned in the init method as well. Ill have a look and if all good will merge this and update. \nthank aldrincb\n. Yep good spot akiroom, ill merge this in, thanks\n. Ill update this asap, although I will be quite busy until this evening (GMT) thanks\n. Thanks for raising this, something that slipped under the radar. will get this patched asap,\nthank you\n. thanks for your implementation rvirin, ill review your changes later and let you know.\nit's a good idea to allow the user to change the size of the scaling.. \n. awesome thanks for this, i will sort this out when i get some time.\n. Hi Alex, I think the cocoapod is currently not the latest.. I do mean to update this but I haven't had the time recently, the files in the Classes/ directory are up to date.. you could create a PR that would be great, but if not, ill try and update this soon. cheers\n. Sorry have been away guys, also very busy at work atm.. thank you very much for doing that @Mazyod . I think it should be fine. \n. Hi mate, which bit exactly is not working? no icon? its not purple?\n. ",
    "Mazyod": "So, the first issue I came across is: How to handle the current implementation?\n\nI think the current implementation is useful by itself, and could be used, so I won't be replacing it. I am, however, seeing two possible approaches:\n\n1) Add a new init method that takes a `UIBezierPath`, and save the bezier path.\n\nThe issue here is, everywhere in the code, we have to add if statements. Check if we are using the bezier path, then do this, otherwise do nothing. Same thing for the image.\n\nHere is an example:\n\n``` objc\n- (void)drawRect:(CGRect)rect\n{\n  /* Only override draw rect for vectorized splash screen */\n  if (!self.bezierPath) {\n    return [super drawRect:rect];\n  }\n\n  CGContextRef context = UIGraphicsGetCurrentContext();\n  CGContextAddRect(context, self.bounds);\n  CGContextAddPath(context, self.bezierPath.CGPath);\n\n  [self.backgroundViewColor setFill];\n  CGContextEOFillPath(context);\n}\n```\n\n2) Provide an abstract superclass interface, and have different implementations in two subclasses.\n\nI think this is a better approach, since it modularly separates the two functionalities. We should also hide those classes from the user, and provide a convenient \"factory\" method, since the user doesn't need to worry about the exact subclass he is using.\n\nFrom this, I realized there will be some major overhauls to the component, but it will be hidden within the component.\n\nMaz\n. I love the transitions idea! Maybe you can create a new issue for each feature/bug?\n. Thanks for the PR. Yup, totally missed that issue. The vector counterpart needs the same fix, but we can create a separate issue for that.\n\nWill wait for @callumboddy to review this.\n. Arigato gozaimasu, kansha shimasu :)\n\nYeah, I think @callumboddy can merge this one :+1: \n. Related to #15, you may want to follow that PR instead.\n. Hey guys, I'm late to the party as usual, but I have some time on my hands now. I'll try to update the cocoapods today if that works for you\n. in case you are interested, he is alive and well :) You may not be reaching him, or he's probably just too busy to look into this repo for the time being https://twitter.com/callumboddy/status/606405392873193473\n. @pjebs As it says, I am a collaborator on this repo, callumboddy agreed to add me when I contributed the bezier path approach.\n. Well, I tried to make a new cocoapods release, just to be safe, but that didn't work because apparently I don't have permissions to make a new cocoapods release. I updated the `1.0.0` tag reference, but that is sub optimal, because some cache may exist somewhere, and also might break stuff for existing users of the `1.0.0` version...\n\n`\u00af\\_(\u30c4)_/\u00af`\n. Anytime @callumboddy~! I'll try to help out, feel free to assign me to stuff if you find an urgent issue.\n\n@pjebs Yes, I created it, then removed it since I didn't have permission to bump the project version. You should clear your Cocoapods cache, and try to install v1.0.0 again.\n. So, the first issue I came across is: How to handle the current implementation?\n\nI think the current implementation is useful by itself, and could be used, so I won't be replacing it. I am, however, seeing two possible approaches:\n\n1) Add a new init method that takes a `UIBezierPath`, and save the bezier path.\n\nThe issue here is, everywhere in the code, we have to add if statements. Check if we are using the bezier path, then do this, otherwise do nothing. Same thing for the image.\n\nHere is an example:\n\n``` objc\n- (void)drawRect:(CGRect)rect\n{\n  /* Only override draw rect for vectorized splash screen */\n  if (!self.bezierPath) {\n    return [super drawRect:rect];\n  }\n\n  CGContextRef context = UIGraphicsGetCurrentContext();\n  CGContextAddRect(context, self.bounds);\n  CGContextAddPath(context, self.bezierPath.CGPath);\n\n  [self.backgroundViewColor setFill];\n  CGContextEOFillPath(context);\n}\n```\n\n2) Provide an abstract superclass interface, and have different implementations in two subclasses.\n\nI think this is a better approach, since it modularly separates the two functionalities. We should also hide those classes from the user, and provide a convenient \"factory\" method, since the user doesn't need to worry about the exact subclass he is using.\n\nFrom this, I realized there will be some major overhauls to the component, but it will be hidden within the component.\n\nMaz\n. I love the transitions idea! Maybe you can create a new issue for each feature/bug?\n. Thanks for the PR. Yup, totally missed that issue. The vector counterpart needs the same fix, but we can create a separate issue for that.\n\nWill wait for @callumboddy to review this.\n. Arigato gozaimasu, kansha shimasu :)\n\nYeah, I think @callumboddy can merge this one :+1: \n. Related to #15, you may want to follow that PR instead.\n. Hey guys, I'm late to the party as usual, but I have some time on my hands now. I'll try to update the cocoapods today if that works for you\n. in case you are interested, he is alive and well :) You may not be reaching him, or he's probably just too busy to look into this repo for the time being https://twitter.com/callumboddy/status/606405392873193473\n. @pjebs As it says, I am a collaborator on this repo, callumboddy agreed to add me when I contributed the bezier path approach.\n. Well, I tried to make a new cocoapods release, just to be safe, but that didn't work because apparently I don't have permissions to make a new cocoapods release. I updated the `1.0.0` tag reference, but that is sub optimal, because some cache may exist somewhere, and also might break stuff for existing users of the `1.0.0` version...\n\n`\u00af\\_(\u30c4)_/\u00af`\n. Anytime @callumboddy~! I'll try to help out, feel free to assign me to stuff if you find an urgent issue.\n\n@pjebs Yes, I created it, then removed it since I didn't have permission to bump the project version. You should clear your Cocoapods cache, and try to install v1.0.0 again.\n. ",
    "blwinters": "Any updates on a fix for this issue?\n. Any updates on a fix for this issue?\n. ",
    "hansemannn": "Hi @callumboddy, this lib is lit! But this PR should really be integrated, using it in production and it works like a charm.. Hi @callumboddy, this lib is lit! But this PR should really be integrated, using it in production and it works like a charm.. ",
    "akiroom": "Thank you for your gentle message! I'm very happy.\nI'm looking forward to reviewing by callumboddy.\nHave a nice day!\n. Thank you for your very fast response!\n\n`1.0.0` tag still points the old commit (10c3c4b), so I can't use your great latest.\nCould you put `1.0.0` tag to the latest commit(8507998)?\n. I've got it. Thank you so much:smiley:\n. Thank you for your gentle message! I'm very happy.\nI'm looking forward to reviewing by callumboddy.\nHave a nice day!\n. Thank you for your very fast response!\n\n`1.0.0` tag still points the old commit (10c3c4b), so I can't use your great latest.\nCould you put `1.0.0` tag to the latest commit(8507998)?\n. I've got it. Thank you so much:smiley:\n. ",
    "Dids": "The tag still needs to be updated. You can do this quickly from the command line by browsing to the project directory, then running: git tag -f -a 1.0.0 -m '' && git push --tags --force\n\nThat will effectively recreate the tag using the current commit and push the tag to the repo.\n. The tag still needs to be updated. You can do this quickly from the command line by browsing to the project directory, then running: git tag -f -a 1.0.0 -m '' && git push --tags --force\n\nThat will effectively recreate the tag using the current commit and push the tag to the repo.\n. ",
    "rvi": "Thanks. :beer: \n. Thanks. :beer: \n. ",
    "alexsaidani": "I ended up just importing the files from the example project. Although for some reason the splash view doesn't appear above the content in the view, whereas it does in the example - odd. I'll see if I can update the CocoaPod though.\n. I ended up just importing the files from the example project. Although for some reason the splash view doesn't appear above the content in the view, whereas it does in the example - odd. I'll see if I can update the CocoaPod though.\n. ",
    "pjebs": "The pod specs seems to set up correctly: \"s.source_files  = 'Pod/Classes', '*.{h,m}'\"\nFor some reason, only CBZSplashView gets downloaded and loaded\n. That's what I did but obviously it's nice to operate as much as possible in the CocoaPods world.\n. I sent him an email. The issue is the pod spec file links to the \"1.0.0\" tag in his repository. In that tag, only CBZSplashView.h and CBZSplashView.m exist so that is all CocoaPods downloads.\n. I sent him an email but no response.\nIt's possible he may have passed away :( RIP\n\nI'll make a fork and add it to cocoapods soon\n. Ok with me.\n\nHow did you get permission to add bug label?\n. The 1.0.1 tag hasn't been created. The git repository tag should point to where the master branch is currently.\n. The pod specs seems to set up correctly: \"s.source_files  = 'Pod/Classes', '*.{h,m}'\"\nFor some reason, only CBZSplashView gets downloaded and loaded\n. That's what I did but obviously it's nice to operate as much as possible in the CocoaPods world.\n. I sent him an email. The issue is the pod spec file links to the \"1.0.0\" tag in his repository. In that tag, only CBZSplashView.h and CBZSplashView.m exist so that is all CocoaPods downloads.\n. I sent him an email but no response.\nIt's possible he may have passed away :( RIP\n\nI'll make a fork and add it to cocoapods soon\n. Ok with me.\n\nHow did you get permission to add bug label?\n. The 1.0.1 tag hasn't been created. The git repository tag should point to where the master branch is currently.\n. ",
    "jamesanse": "same problem\n. same problem\n. ",
    "tbaranes": "+1\n. +1\n. ",
    "cwveysey": "I was able to get things working by manually adding CBZRasterSplashView.h, CBZRasterSplashView.m,\nCBZVectorSplashView.h, and CBZVectorSplashView.m to my project (I cloned the example project / grabbed em from there - I already had CBZSplashView.h and CBZSplashView.m via the CocoaPod).\n. I was able to get things working by manually adding CBZRasterSplashView.h, CBZRasterSplashView.m,\nCBZVectorSplashView.h, and CBZVectorSplashView.m to my project (I cloned the example project / grabbed em from there - I already had CBZSplashView.h and CBZSplashView.m via the CocoaPod).\n. ",
    "akshitzaveri": "It's already loading UIViewController. It has UIView and it has imageview as child. Lookup in the view hierarchy.\n. It's already loading UIViewController. It has UIView and it has imageview as child. Lookup in the view hierarchy.\n. ",
    "suhailrashidbhat": "Hi, \nI think it is related with #15 . iconSize and iconColor cannot be set as they are called only in initialisation. \n. Hi, \nI think it is related with #15 . iconSize and iconColor cannot be set as they are called only in initialisation. \n. ",
    "L4grange": "On my app, the icon is appearing in the centre of the view *inside* the Navigation Controller. I believe that this is happening in your case as well. The offset is the height of your navigationController.\r\n\r\nI don't know how to fix it, if anyone can help, please do. Thank you!\r\n\r\nEDIT: Solved it by adding the splashView as a subview of the Window and not my main view. Try it and let me know if it fixes your problem:\r\n\r\n```swift\r\nif let appDel = UIApplication.shared.delegate as? AppDelegate {\r\n\tappDel.window?.addSubview(splashView)\r\n\tsplashView.startAnimation()\r\n}\r\n```. On my app, the icon is appearing in the centre of the view *inside* the Navigation Controller. I believe that this is happening in your case as well. The offset is the height of your navigationController.\r\n\r\nI don't know how to fix it, if anyone can help, please do. Thank you!\r\n\r\nEDIT: Solved it by adding the splashView as a subview of the Window and not my main view. Try it and let me know if it fixes your problem:\r\n\r\n```swift\r\nif let appDel = UIApplication.shared.delegate as? AppDelegate {\r\n\tappDel.window?.addSubview(splashView)\r\n\tsplashView.startAnimation()\r\n}\r\n```. "
}