{
    "wldcordeiro": "I don't want to see any css classes. I want a framework that is Sass first and foremost. If this is how Foundation is going to keep pushing itself I'm going to use combinations of Sass libraries like Jeet, Bourbon, Breakpoint and Compass because these presentational classes are lazy and antiquated when mixins and extends do much better. \n. @winghouchan I agree about the comment you made regarding CSS classes being faster to learn/code, especially in the prototyping stage. My main issue with this current alpha is that rather than coding the framework with mixins and then applying the mixins to the CSS classes, it's all CSS classes.\n\nLet me make a simple example.\n\n``` scss\n.frame {\n  margin: 0;\n  height: 100vh;\n  display: flex;\n  flex-flow: row nowrap;\n\n  &.stack, &.small-stack {\n    flex-flow: column nowrap;\n  }\n\n  &.unstack, &.small-unstack {\n    flex-flow: row nowrap;\n  }\n\n  @media #{$medium-up} {\n    &.medium-stack { flex-flow: column nowrap; }\n    &.medium-unstack { flex-flow: row nowrap; }\n  }\n  @media #{$large-up} {\n    &.large-stack { flex-flow: column nowrap; }\n    &.large-unstack { flex-flow: row nowrap; }\n  }\n}\n```\n\nThis block of code comes from the _grid.scss file within the source. To me it would make sense to write this as a set of mixin called frame, stack and unstack and then apply those to the .frame/.stack and .unstack classes. Something like.\n\n``` scss\n@mixin frame($margin:0, $height:100vh, $wrap:nowrap) {\n  margin: $margin;\n  height: $height;\n  display: flex;\n  flex-flow: row $wrap;\n}\n\n@mixin stack($wrap:nowrap) {\n  flex-flow: column $wrap\n}\n\n@mixin unstack($wrap:nowrap) {\n  flex-flow: row $wrap;\n}\n\n.frame {\n  @include frame;\n\n  &.stack, &.small-stack {\n    @include stack;\n  }\n\n  &.unstack, &.small-unstack {\n    @include unstack;\n  }\n\n  @media #{$medium-up} {\n    &.medium-stack { @include stack; }\n    &.medium-unstack { @include unstack; }\n  }\n  @media #{$large-up} {\n    &.large-stack { @include stack; }\n    &.large-unstack { @include unstack; }\n  }\n}\n```\n\nI do agree though we have kind of taken this issue off-topic (apologies Zurb people!) but I really like Foundation and wasn't sure where else to make the comments. When it comes down to it, at least in my workflow I try to write as little vanilla CSS and instead use as much of Sass on my own BEM naming classes. I have made a fork of this repo and I was working on making changes like the ones I outlined but I'd like to get feedback from the Zurb people. \n. Sorry guys, didn't mean to add a separate issue.\n. @zurbrandon This is the best thing I've done for Sublime. :) https://sublime.wbond.net/docs/syncing\n. I don't want to see any css classes. I want a framework that is Sass first and foremost. If this is how Foundation is going to keep pushing itself I'm going to use combinations of Sass libraries like Jeet, Bourbon, Breakpoint and Compass because these presentational classes are lazy and antiquated when mixins and extends do much better. \n. @winghouchan I agree about the comment you made regarding CSS classes being faster to learn/code, especially in the prototyping stage. My main issue with this current alpha is that rather than coding the framework with mixins and then applying the mixins to the CSS classes, it's all CSS classes.\n\nLet me make a simple example.\n\n``` scss\n.frame {\n  margin: 0;\n  height: 100vh;\n  display: flex;\n  flex-flow: row nowrap;\n\n  &.stack, &.small-stack {\n    flex-flow: column nowrap;\n  }\n\n  &.unstack, &.small-unstack {\n    flex-flow: row nowrap;\n  }\n\n  @media #{$medium-up} {\n    &.medium-stack { flex-flow: column nowrap; }\n    &.medium-unstack { flex-flow: row nowrap; }\n  }\n  @media #{$large-up} {\n    &.large-stack { flex-flow: column nowrap; }\n    &.large-unstack { flex-flow: row nowrap; }\n  }\n}\n```\n\nThis block of code comes from the _grid.scss file within the source. To me it would make sense to write this as a set of mixin called frame, stack and unstack and then apply those to the .frame/.stack and .unstack classes. Something like.\n\n``` scss\n@mixin frame($margin:0, $height:100vh, $wrap:nowrap) {\n  margin: $margin;\n  height: $height;\n  display: flex;\n  flex-flow: row $wrap;\n}\n\n@mixin stack($wrap:nowrap) {\n  flex-flow: column $wrap\n}\n\n@mixin unstack($wrap:nowrap) {\n  flex-flow: row $wrap;\n}\n\n.frame {\n  @include frame;\n\n  &.stack, &.small-stack {\n    @include stack;\n  }\n\n  &.unstack, &.small-unstack {\n    @include unstack;\n  }\n\n  @media #{$medium-up} {\n    &.medium-stack { @include stack; }\n    &.medium-unstack { @include unstack; }\n  }\n  @media #{$large-up} {\n    &.large-stack { @include stack; }\n    &.large-unstack { @include unstack; }\n  }\n}\n```\n\nI do agree though we have kind of taken this issue off-topic (apologies Zurb people!) but I really like Foundation and wasn't sure where else to make the comments. When it comes down to it, at least in my workflow I try to write as little vanilla CSS and instead use as much of Sass on my own BEM naming classes. I have made a fork of this repo and I was working on making changes like the ones I outlined but I'd like to get feedback from the Zurb people. \n. Sorry guys, didn't mean to add a separate issue.\n. @zurbrandon This is the best thing I've done for Sublime. :) https://sublime.wbond.net/docs/syncing\n. ",
    "gosupernova": "Just a general note layouts/default line 7 needs the href to be     \n\n href=\"{{assets}}/css/src/app.css\"\n. Just a general note layouts/default line 7 needs the href to be     \n\n href=\"{{assets}}/css/src/app.css\"\n. ",
    "winghouchan": "Heyo @wldcordeiro!\n\nNow I haven't actually taken a look a Foundation 6 yet since my current hardware setup is crap and I can't do anything with it, but I thought I might give my thoughts on your comment.\n\nFirst I'm going to make a few assumptions. I'm going to assume that two principles from previous versions of Foundation remain the same:\n- Faster to code\n- Faster to learn\n\nBased on these principles and experience I think presentational classes are useful for faster prototyping and faster learning.\n\nFrom experience I find coding a quick prototype is quicker with presentational classes. I don't have to delve straight into Sass because I don't need to yet. I'm just doing a quick prototype and not the actual production site.\n\nAlso for learning, presentational classes help new users to Foundation to grasp the idea of responsive web design (if they haven't already) and helps them visualize and build sites with Foundation.\n\nHowever I agree that presentational classes are lazy to a certain extent. That extent goes as far as the production site. A production site definitely cannot have presentational classes.\n\nFoundation also focuses in semantics as well. Along side your CSS classes there will be SCSS mixins and extends for you to use, which although does not appear in this WIP repo, I'm sure it will as F6 develops to be more similar to implement as F5.\n\nI would also like to focus on this:\n\n> I want a framework that is Sass first and foremost.\n\nI've already given my opinion on Sass above. I agree that Foundation 6 should have more focus on Sass. Looking at the current documentation for Foundation 5, I do think there is a heavy focus on CSS, with only a small section on Sass at the end of each page.\n\nPerhaps to solve that problem two version of documentation are produced. One version for Foundation with CSS and one version for Foundation with Sass. However I realize that there may be difficulties maintaining two versions of documentation.\n\nSo to conclude what is probably my longest GitHub comment, mixins and extends are 100% the way forward and should be used in production sites, however for prototyping and learning CSS classes are extremely useful so should be kept.\n\nPS As you can see I'm basing most opinion on experience of Foundation 5, however I think the principle still stands no matter what front-end framework you are using.\n\nPPS Sorry if it's slightly off topic from the discussion of vertical grids.\n. @wldcordeiro Yes, certainly writing it similar to that would be great. Thank you for clarifying that. I'm sure as F6 develops, this way of writing it will certainly be used, matching the current production F5. From your first comment, it appeared as though you had a vendetta against CSS classes :laughing: \n. :+1: And I was thinking I'm the only one with #OCD\n. Heyo @wldcordeiro!\n\nNow I haven't actually taken a look a Foundation 6 yet since my current hardware setup is crap and I can't do anything with it, but I thought I might give my thoughts on your comment.\n\nFirst I'm going to make a few assumptions. I'm going to assume that two principles from previous versions of Foundation remain the same:\n- Faster to code\n- Faster to learn\n\nBased on these principles and experience I think presentational classes are useful for faster prototyping and faster learning.\n\nFrom experience I find coding a quick prototype is quicker with presentational classes. I don't have to delve straight into Sass because I don't need to yet. I'm just doing a quick prototype and not the actual production site.\n\nAlso for learning, presentational classes help new users to Foundation to grasp the idea of responsive web design (if they haven't already) and helps them visualize and build sites with Foundation.\n\nHowever I agree that presentational classes are lazy to a certain extent. That extent goes as far as the production site. A production site definitely cannot have presentational classes.\n\nFoundation also focuses in semantics as well. Along side your CSS classes there will be SCSS mixins and extends for you to use, which although does not appear in this WIP repo, I'm sure it will as F6 develops to be more similar to implement as F5.\n\nI would also like to focus on this:\n\n> I want a framework that is Sass first and foremost.\n\nI've already given my opinion on Sass above. I agree that Foundation 6 should have more focus on Sass. Looking at the current documentation for Foundation 5, I do think there is a heavy focus on CSS, with only a small section on Sass at the end of each page.\n\nPerhaps to solve that problem two version of documentation are produced. One version for Foundation with CSS and one version for Foundation with Sass. However I realize that there may be difficulties maintaining two versions of documentation.\n\nSo to conclude what is probably my longest GitHub comment, mixins and extends are 100% the way forward and should be used in production sites, however for prototyping and learning CSS classes are extremely useful so should be kept.\n\nPS As you can see I'm basing most opinion on experience of Foundation 5, however I think the principle still stands no matter what front-end framework you are using.\n\nPPS Sorry if it's slightly off topic from the discussion of vertical grids.\n. @wldcordeiro Yes, certainly writing it similar to that would be great. Thank you for clarifying that. I'm sure as F6 develops, this way of writing it will certainly be used, matching the current production F5. From your first comment, it appeared as though you had a vendetta against CSS classes :laughing: \n. :+1: And I was thinking I'm the only one with #OCD\n. ",
    "smileyj68": "@wldcordeiro We do plan for this to all be written as mixins or extends, but given the very...let's go with experimental nature of the grid right now we opted for the simpler to show people version (presentational). Don't worry, we don't like it for everything either. Your version is rad, so pretend we did that initially :)\n. Pulled in the PR. Thanks!\n. Looks good, I like it. Thanks @wldcordeiro \n. @wldcordeiro We do plan for this to all be written as mixins or extends, but given the very...let's go with experimental nature of the grid right now we opted for the simpler to show people version (presentational). Don't worry, we don't like it for everything either. Your version is rad, so pretend we did that initially :)\n. Pulled in the PR. Thanks!\n. Looks good, I like it. Thanks @wldcordeiro \n. ",
    "rafibomb": "@gosupernova Thanks Steve, we'll fix that link.\n. The best way to share for now is through Bitballon. https://www.bitballoon.com/. Just drag the project folder into the browser. It's free and built on Foundation.\n. @Vheissu Thanks. We knew people would be concerned about browser support. The framework will support IE10 and up, and mobile devices (iphone, android). \n\nThis new grid, which does NOT replace the current grid, will still use the notion of a 12 column grid as a simple way divide up the grid. The row element is replaced by a 'group' element that contains the blocks (which can sized 1-12).\n. The best way to share for now is through Bitballon. https://www.bitballoon.com/. Just drag the project folder into the browser. It's free and built on Foundation.\n. @HansUXdev emailed us a good question about Motion UI: \"Mainly, are you planning to expand the range of animations available as it currently relies heavily on css transitions and only 4 keyframes?\"\n. @hansuxdev - We are planning to add more to the library. What kinds of animations or interactions do you suggest?\n. @AntJanus Jordan on our team had an observation. Not sure if we should change this: \"Controllers should be in their own directory, not in a controllers.js file.\"\n. You should be able to view the index file https://github.com/zurb/foundation-apps/blob/master/docs/pages/index.html\n\nWe're building the docs out now so you're not doing anything wrong. In fact by tomorrow morning we'll have pushed an update that links the updated nav to all the docs pages. Of-course, feedback is welcome in that update. Thanks!\n. @gabysbrain Thanks! email foundation at zurb .com for some sweet Yeti stickers!\n. @blacklizard Thanks! email foundation at zurb .com for some sweet Yeti stickers!\n. BTW: the CLI has been updated so the client _settings file is king.\n. This feature hasn't been added yet but it is on our roadmap for the next release.\n. @gjungb Can you help out here? http://foundation.zurb.com/forum/posts/26117-how-to-use-of-iconicprovider  Thanks!\n. The <a href=\"http://foundation.zurb.com/forum\">Foundation forum</a> would be a great place to seek some help. Jeanie from our team responded to your question there: http://foundation.zurb.com/forum/posts/23322-open-apps-modal-on-page-load\n\nWe're trying to keep the issue list focused on confirmed defects in Foundation, so any help everyone can provide to differentiate between usage / troubleshooting and actual defects is appreciated!\n. We think that apps usually need a more robust table solution and the regular table form the Sites framework wouldn't be useful. \n\nThere are some good plugins out there:\nhttp://blog.werlangtecnologia.com.br/angular-responsive-tables/\nhttp://angularjs4u.com/tables/top-10-angularjs-table-demos/\n. We've seen this - though it's a tough one unless you add a border to the regular button. Because border-box puts the border on the outside this happens.\n\nCan you think of a better way to do it?\n. Not sure on this one - @colin-marshall are you familiar with what's happening here?\n. @gosupernova Thanks Steve, we'll fix that link.\n. The best way to share for now is through Bitballon. https://www.bitballoon.com/. Just drag the project folder into the browser. It's free and built on Foundation.\n. @Vheissu Thanks. We knew people would be concerned about browser support. The framework will support IE10 and up, and mobile devices (iphone, android). \n\nThis new grid, which does NOT replace the current grid, will still use the notion of a 12 column grid as a simple way divide up the grid. The row element is replaced by a 'group' element that contains the blocks (which can sized 1-12).\n. The best way to share for now is through Bitballon. https://www.bitballoon.com/. Just drag the project folder into the browser. It's free and built on Foundation.\n. @HansUXdev emailed us a good question about Motion UI: \"Mainly, are you planning to expand the range of animations available as it currently relies heavily on css transitions and only 4 keyframes?\"\n. @hansuxdev - We are planning to add more to the library. What kinds of animations or interactions do you suggest?\n. @AntJanus Jordan on our team had an observation. Not sure if we should change this: \"Controllers should be in their own directory, not in a controllers.js file.\"\n. You should be able to view the index file https://github.com/zurb/foundation-apps/blob/master/docs/pages/index.html\n\nWe're building the docs out now so you're not doing anything wrong. In fact by tomorrow morning we'll have pushed an update that links the updated nav to all the docs pages. Of-course, feedback is welcome in that update. Thanks!\n. @gabysbrain Thanks! email foundation at zurb .com for some sweet Yeti stickers!\n. @blacklizard Thanks! email foundation at zurb .com for some sweet Yeti stickers!\n. BTW: the CLI has been updated so the client _settings file is king.\n. This feature hasn't been added yet but it is on our roadmap for the next release.\n. @gjungb Can you help out here? http://foundation.zurb.com/forum/posts/26117-how-to-use-of-iconicprovider  Thanks!\n. The <a href=\"http://foundation.zurb.com/forum\">Foundation forum</a> would be a great place to seek some help. Jeanie from our team responded to your question there: http://foundation.zurb.com/forum/posts/23322-open-apps-modal-on-page-load\n\nWe're trying to keep the issue list focused on confirmed defects in Foundation, so any help everyone can provide to differentiate between usage / troubleshooting and actual defects is appreciated!\n. We think that apps usually need a more robust table solution and the regular table form the Sites framework wouldn't be useful. \n\nThere are some good plugins out there:\nhttp://blog.werlangtecnologia.com.br/angular-responsive-tables/\nhttp://angularjs4u.com/tables/top-10-angularjs-table-demos/\n. We've seen this - though it's a tough one unless you add a border to the regular button. Because border-box puts the border on the outside this happens.\n\nCan you think of a better way to do it?\n. Not sure on this one - @colin-marshall are you familiar with what's happening here?\n. ",
    "Vheissu": "I am not a Zurb Foundation core contributor, but emailed Brandon about contributing in some form or another maybe just in terms of discussion for the moment. I am going to assume that the grid system will still use row and column classes for markup and better compatibility in my thoughts below.\n\nWhen it comes to the actual dimensions of the grid columns themselves, width will be determined by the flex-basis property. However, the spec recommends using the shorthand version of this property which is \"flex\" this property specifies how available whitespace is distributed within a Flexbox parent element, by default it is auto. Support for the flex-basis property is a little flaky in regards to IE support, using widths is probably a better idea after further consideration.\n\nAnother idea for the Flexbox based grid could also be layout modes. Using a class on the parent item that allow you to transform your items into different layout modes like; masonry, vertical, horizontal, evenly distributed and so on.\n. I am not a Zurb Foundation core contributor, but emailed Brandon about contributing in some form or another maybe just in terms of discussion for the moment. I am going to assume that the grid system will still use row and column classes for markup and better compatibility in my thoughts below.\n\nWhen it comes to the actual dimensions of the grid columns themselves, width will be determined by the flex-basis property. However, the spec recommends using the shorthand version of this property which is \"flex\" this property specifies how available whitespace is distributed within a Flexbox parent element, by default it is auto. Support for the flex-basis property is a little flaky in regards to IE support, using widths is probably a better idea after further consideration.\n\nAnother idea for the Flexbox based grid could also be layout modes. Using a class on the parent item that allow you to transform your items into different layout modes like; masonry, vertical, horizontal, evenly distributed and so on.\n. ",
    "gakimball": "We currently have a class to switch from horizontal to vertical, but masonry is definitely an interesting idea. One goal of the grid is to sort of wrap up the complexity of flexbox in a handful of easy to understand classes. So if the user could switch from horizontal to vertical to masonry, with options for even spacing and so on, that would be great!\n. We're about to redo a large chunk of this repo to incorporate the Angular stuff that's in development, so this probably won't be relevant after that.\n. We're using a handful of new features in Sass 3.3 and 3.4, so you'll need your Sass gem up to date to get everything working. We don't plan on having libsass support for the time being.\n. If you can, I'd recommend upgrading to at least Sass 3.3, which adds support for the `!global` keyword but doesn't actually change how variable scope works. 3.4 implements the [changes to variable scope](http://blog.sass-lang.com/posts/184094-sass-33-is-released).\n\nThe changes from 3.2 to 3.3 shouldn't break your codebase or any libraries you use.\n\nEdit: just realized this issue is in the Foundation for Apps repo. This library requires 3.4, while Foundation 5 requires at least 3.3 but we recommend 3.4.\n. Are y'alls having an issue with Foundation 5? This repo is for Foundation for Apps, which is still in alpha.\n\nBut we are indeed having issues with Sass compatibility right now in Foundation 5 due to a very small disparity between Sass 3.4 and libsass. See [this discussion](https://github.com/zurb/foundation/issues/5811).\n. Looks good, thanks! Although you spelled ZURB wrong ;)\n. Are you running Sass 3.4 and Compass 1.0?\n. We updated the readme to note that you need Sass 3.4 to make this all work.\n. You guys are the best, thanks so much for your input! To respond to a few points brought up here:\n\n**Using maps for their map-ness:** As Hugo and Ben said, the main reason we'd want to use arrays is to loop through their values, or perhaps be able to call variable variables. We're definitely using maps to make managing breakpoints more flexible; it makes outputting those `small-`, `medium-` etc. classes more manageable. I had also messed around with [putting CSS properties in maps](https://github.com/zurb/foundation-apps/blob/037f13fa364f19b5f3f108b37639155cdcf66a10/scss/foundation/foundation.scss#L45) and then outputting them with a mixin, but it seems too restrictive. The map can't reference other values in the map because it's not done being created yet, you can't add mixins, and so on. Maps have also been useful for a lot of little things, like [outputting values in mixins based on user input](https://github.com/zurb/foundation-apps/blob/037f13fa364f19b5f3f108b37639155cdcf66a10/scss/foundation/components/_grid.scss#L80).\n\nThe thing we're getting hung up on is where using maps gets us _structure_, but not _utility_. A few of you touched on this point. Ultimately grouping all button settings into one variable is nice because it gives our code a little more structure, but we would never need to iterate through the values of that map, and we would never need to dynamically access any value in the map. So that means the map exists _purely_ for structure.\n\n**The map accessing syntax:** As a few of you mentioned, the difference between `$button-background` and `foundation(button, background)` is almost nil in terms of remembering, but perhaps our audience will better understand what's happening with a variable. The average user of Sass probably understands (or in my opinion, only needs to understand) nesting, variables, partials, and maybe mixins and a few other things. Those core concepts get you most of the awesome functionality out of Sass, and they're relatively easy concepts to pick up. If you're a library author, then you understand all the more complicated bits, like functions, lists, maps, and so on.\n\nWe don't usually assume our audience understands the complexities behind our tools. (And that's not meant to be an insult, we just want our framework to be accessible!) The theory behind tools like Foundation and Bootstrap is that you can prototype a website without writing any CSS. With Foundation for Apps we're taking that a step further: you can protoype a single page web app without writing any JavaScript. Abstracting complexity is the name of the game here. Of course, it's not cutting advanced users out of the loop; if you know Angular you'll be able to take something from static prototype to functioning web app.\n\nAnd that brings us back to the point that _the map access syntax is awkward_. By using maps in this library we're passing along a bit of the complexity of maps on to the user in some small way. Of course they don't have to directly manipulate maps, but they have to access them using the map syntax, which is awkward, even for people who know what they're doing. I think accessing arrays in an entirely functional manner is just super weird, but I guess I understand why Sass was written that way.\n\nThere are also some little things that make maps a hassle. For example, we often have variables that are interdependent to make theming a little easier.\n\n``` scss\n$button-background: $primary-color;\n$button-text-color: if(lightness($button-background) > 50%, #000, #fff);\n```\n\nYou can't do this in a map, because you can't reference another place in the map while it's still being defined.\n\n``` scss\n$button: (\n  background: $primary-color,\n  color: map-get($button, background), // Nope\n);\n```\n\nThe solution we land on will probably be a more balanced approach to the \"super map\" I was discussing initially. If we use maps for components, each component might get a separate map. There's still an issue of access, though, and I think this syntax would be really awkward for users:\n\n``` scss\ncolor: map-get($f-button, color);\n```\n\nAlso I'm now going to try to wrap this up so I can stop typing. We're trying to figure out a solution soon, so just picking one will be more useful than our team endlessly speculating about different solutions. It doesn't even affect how we develop our components that much, it more affects how our users manipulate them. And I don't know that our users have ever run into problems with our variables interfering with other libraries, so if we just stuck with the \"old way\" of a million variables in a well-organized list, I don't know that people would complain.\n\nBut thank you so much @HugoGiraudel, @xzyfer, @Undistraction, and @benfrain for giving your input!\n. @AshleyAitken I think some settings will definitely use maps, like breakpoints. It makes outputting, say, [visibility classes here](https://github.com/zurb/foundation-apps/blob/037f13fa364f19b5f3f108b37639155cdcf66a10/scss/foundation/components/_utilities.scss#L41) way easier, and adding new breakpoints would be super simple. Component settings are the bigger concern. Let's say three big benefits of having arrays are _structure_, _looping_, and _variable access_. For component settings, you only get the first benefit, not the other two. There would never be a need to write an `@each` loop for button settings, nor would accessing the properties dynamically ever be useful. So you mostly get the benefit of hierarchy, and the question is if that benefit is worth the overhead.\n. @Undistraction I think I know what you're getting at when it comes to defining versus setting configuration. There's a question of usage, also.\n\nWe know our users are way into the settings file. A common criticism of front-end frameworks is that they're hard to override, so our settings file makes theming the framework components easier.\n\nSo _setting_ variables is a common practice for our user. But _accessing_ variables is probably a less common practice. There are common ones that people use a lot, like `$primary-color` or `$column-gutter`. It's mostly the more high-level settings that allow you to keep your designs aligned with the framework that people use a lot. But, for example, I doubt people often reference `$topbar-dropdown-link-color` in their custom CSS. They might set that variable to customize the framework, but they'll never reference it again.\n. @DerFrenk You make a good point, although we can't quite assume people are using an IDE with our library. But you're definitely right, since the accessor syntax is a function, an IDE can't intelligently make suggestions for you.\n. @viztastic Since we had this initial discussion, we have found maps to be most useful when used for a very specific purpose. Being able to write loops to output certain classes is super nice. It's especially going to make editing and adding new breakpoints super easy.\n\nThe variable dump solution isn't ideal, but it's still going to be easiest for our users to wrap their heads around. As for namespacing, we haven't encountered many conflicts with other libraries, although it's possible that really generic mixins and functions can fight with each other.\n. Did you run `bower install` to get the dependencies?\n\n**Edit:** Looks like that `postinstall` thing that runs `bower install` automatically disappeared from our `package.json`. So yeah, that might be your issue.\n. For sure, the repo is undergoing major surgery right now but it'll be back in soon.\n. Back in as of fd18b286fd9d15088e5da7b4ae054f34d6d7ebee.\n. Looks hot! Brandon and I will talk about how we want to shift over our docs pages. There's only a handful of essential ones, but they don't really fit into a single template right now.\n\n**Edit:** And of course eventually they'll go away in favor of actual documentation.\n. It'll probably help if we're more explicit about how we want the modal to work. Brandon and I are still learning Angular so the technical bits are still over our heads ;) But there are some specifics related to functionality we didn't get into.\n\nIn general, I don't think we're going to leverage any of the templating features of custom elements. (I don't think you implemented any of that but just so you know.) In general, layout components like grid blocks, modals, panels, and off-canvas are meant to handle basically any HTML, so I think we just want the fancy tags.\n\nFor components that have interactivity (i.e. modals, but not buttons), we need the basic functionality to be plug-and-play. So if you drop in the right HTML, it just works, and if you want to dive into advanced configuration (i.e. programmatically opening a modal, or adding an `onOpen` event listener) you have to write actual JS. It would also be great if we could mask as much of the event handling stuff as possible. So for example, where you have:\n\n``` html\n<span href=\"#\" class=\"close-button\" ng-click=\"dismiss()\">&times;</span>\n```\n\nIt would be great if the click event was attached automatically instead of being an attribute here.\n\nI talked with Brandon and we decided for now, modals should work like this:\n- Modals have to sit on the page they're being called in, kinda like how they work in Foundation 5. Ideally the user has the choice between doing that and referencing an external partial, that would be loaded in when the modal is triggered.\n- Triggering a modal doesn't change the route, and there's no animation configuration yet.\n\nSo here's an example of what we would like the HTML itself to look like.\n\n``` html\n<!-- Modal trigger -->\n<a fa-modal-open=\"theModal\">Open Modal</a>\n\n<!-- Modal -->\n<fa-modal id=\"theModal\">\n  <!-- Modal content -->\n</fa-modal>\n```\n\nThe idea being if you write this code, the plugin just works. Like I said, Brandon and I are still in the learning process, so we still need to learn how Angular directives differ from your usual JavaScript plugin, which is what we're used to working with.\n\nLet us know if you have any questions.\n. For now the code is separated by \"this is library code\" (at the root) \"this is stuff the user would edit\" (client/assets). I know it looks odd, but it was meant to be a stopgap measure. I was curious to get your thoughts on this too, like how we eventually distribute the code.\n\nWe thought it would be cool to distribute the code as the repo itself, so you could just clone it and get going. In this case everything would be inside the client folder. The problem is that it makes it kind of a hassle to update, because to update the core library you'd have to download new files and cut and paste them over the old ones (or we'd automate that with the CLI we eventually build), unless you can think of a clever way to handle versioning and updating.\n\nThe other option, which mimics how Foundation 5 works, is that we separate the library code and the stack into separate repos. (Admittedly this is how it was set up before.) So to create a project you clone the stack and then install the library code using Bower. This makes updating a lot easier, and also keeps the library files out of version control. If we go this route, we can quickly set it up by (force) pushing all the code on this repo back into `foundation-angular`, and stripping out the library code and using Bower to install the Sass and JS from this repo.\n\nAlso whichever route we take, we'll write a CLI in node that handles it all for the user; it's just a matter of how we handle it.\n. Yeah all the Angular directives would be part of the library stuff as well. So the Foundation Bower package would deliver the `scss` and `js` folders, along with all of our other dependencies.\n\nMaybe we could eventually also condense the partial stuff (routing, animation, etc.) into a single Gulp plugin as well, but that's probably a more complex process so we can look at that later.\n. A generic `fa-open` is a really good idea. The spec we're writing up uses targeted attributes, but we like this idea more from a user perspective. We also like the option of having a generic `fa-close` inside an element with state, or a targeted `fa-close` for closing something outside of the element. A third option we'd also like is `fa-toggle`, and you can probably guess what that does. So that gives developers the flexibility to define open, close, and open/close functionality on controls.\n. @AntJanus Foundation 5's JavaScript suffers from a crippling lack of documentation, so if you could help us get off on the right foot that would be fantastic :)\n. Just internal documentation. For external documentation we'll just want to explain the basics of each API, like how do you open something, close something, etc. And yeah, we won't use JSDoc or anything like that, since we write out own docs. You're free to write that style of documentation (with `@param` and all that) if you want but we won't run it through any of those doc generators. It's more important that future generations understand how it works when they have to dive in and fix bugs and such.\n. Sweeeeeeet.\n. Regarding the docs, we'd like to slip a Markdown parser into the template pipe so we can write documentation in Markdown, as it just makes things a lot faster to write and maintain. Some Markdown parsers can also detect the three backticks for a code block and wrap it properly and add syntax highlighting. We use marked on Foundation 5, which also has a [gulp plugin](https://www.npmjs.org/package/gulp-marked).\n. @whodidthis The basic components will work fine, but the ones that require JavaScript (panels, popups, dropdowns, etc.) will be written as Angular directives. For now Foundation for Apps and Angular will be tightly coupled, although we do expect people to try and port it to Ember or other frameworks.\n\nA core idea behind this framework is that you won't need an understanding of Angular or even JavaScript to get started prototyping single-page web apps. We're abstracting out some of the complexity of routing and so on, so you'll only need to understand some of the basics, like what a template is, or why links use the attribute `ui-sref` instead of `href`.\n. @davidkpiano As far as choice of framework, you're right that technologies come and go, and maybe in a year people won't care about Angular. But in the short-term, being opinionated makes this thing easier for us to build, and easier for our users to develop on. More portability could be a long-term goal, but it could end up being a hassle to maintain.\n\nAs far as the active state idea, we've got you covered! Our components all use the class `is-active` to denote an active state, and we can make that a customizable class most likely. When it comes down to it, most of our plugins are just different ways of showing and hiding things, so they all use the same active class.\n. @HansUXdev Regarding our motion components, currently each one is a mixin that allows you to write a custom animation with specific timing, delays, etc. The code should also only output the keyframe animations you need, so if you don't use our prebuilt classes, it should only output one set of keyframes per mixin called.\n\nAs far as animated pagination, we're thinking we could accomplish something similar by allowing animation classes to be used on tabs. So when tabs change they play an in/out animation defined by the developer.\n. @HansUXdev @zurbrandon Yep, using UI Router's sub-views you could accomplish something similar. The main difference is if you want each tab to have its own URL or not.\n. @dipongkor We've had some issues with view animation, so for now, try animating your views with just in, not out. Like so:\n\n```\n---\nname: profile.personalSettings\nurl: /personalSettings\ncontroller: PersonalSettingsCtrl\nanimationIn: fadeIn\n---\n```\n\nThe animations are fast enough that it will still work pretty good. We're working on an overhaul of view animations, which will make simultaneous in/out animations for views work well: #386 \n. @jmkenz Opened an issue at zurb/front-router#4 to track this.\n. @davidkpiano We do want to add sizing classes for panels, it's just a matter of how. Right now panels work off of a maximum width or height, rather than a percentage. Using the `panel()` mixin (which still needs a lot of adjustment) you can define this size yourself, but we'll also want a few sizing classes for rapid prototyping. We could also allow for percentage sizing, using the same 12-column grid, but you still need to cap the size or it's going to get hilariously tiny on small screens.\n\nPerhaps the sizing classes can apply to panels and columns? So given an element with these classes:\n\n``` html\n<div class=\"\n  small-12\n  medium-6\n  large-4\n\n  panel\n  large-block\n\"></div>\n```\n\nThis element is a 12/12 width panel on small screens, a 6/12 width panel on medium screens, and a 4/12 width panel on large screens. It is a lot of classes, though, and you still have to specify `large-block` to indicate at what breakpoint the element morphs.\n\nWe had looked at turning panel into a sizing class itself, like this:\n\n``` html\n<div class=\"\n  small-panel\n  medium-4\n  block\n\"></div>\n```\n\nThis element would be a panel on small, and a 4/12 block on medium and up. The shift from panel to block is inferred due to the use of a sizing class. But this might also cut out the ability to resize panels at different breakpoints, unless you make the classes even longer, like `small-panel-4`, `medium-panel-6`, etc.\n. @jwvanderbeck Oh you'll definitely be able to use panels on any screen size, the question is if you'd ever want a grid element that is inline on a small screen to then transform into a hidden panel on a large screen.\n\nFor now we're assuming that's not a common use-case and not supporting it initially. The opposite will be the far more common scenario: you have a hidden off-canvas panel on small screens, that becomes an inline grid element on a larger screen.\n. @jwvanderbeck Your first use case should be possible in JS, as all of the openable/closable plugins emit open and close events that you can hook into.\n\nThe second use case is a little more tricky, and may just need to be custom-coded. Panels are positioned using `position: absolute`, and then transitioned in and out using `transform: translate()`. There's a global active state class (right now it's `is-active`, but we should probably make it user-configurable) you can hook into to override the default behavior of panels when they're toggled. It is something that's come up for an internal project ZURB is working on that's using Foundation for Apps, so we're looking into it.\n\nHm.. _maybe_ we can tweak the panel mixin to accept custom \"in\" and \"out\" states to make that functionality easier to write. But I can't promise that for 1.0, which is in a few weeks ;)\n. Yeah, we've run into quite a few problems with the grid on mobile which we've spent a while researching.\n\nAnother big one is scrolling panes. The grid does \"fixed positioning\" with a vertical flex container, and the middle area is just scrollable. Problem is, iOS loves to get finicky with this, trying to scroll the whole window instead of the inner container. The way around it is JavaScript hacks that selectively disable scrolling or prevent the propagation of the various `touch` events and so on. It kinda sucks that our grid will probably have a JS dependency, but y'know, _mobile browsers_.\n\nIf you or anyone else has experience with it, let us know!\n. @Martinspire We spent a while butting our heads against this scrolling issue in iOS7 on Friday, and today we opened the same demo page in iOS8 and it worked just fine. So Apple fixed it! But we still need to make sure it works in iOS7 and Android 4. (And Windows Phone 8, let's say.)\n. You're right, a month from now iOS8 adoption will probably be high enough for it to not matter, although it has been slower than past releases.\n. @Bernardao I do think that was a point in favor of `group` and `block`, they both had more distinct meanings. The main issue is they're both short, one-syllable words, and we routinely confused them in conversation, especially because they overlap in functionality. (For example, unlike Foundation 5 rows, F4A's groups can have sizing classes just like blocks.)\n\nSome other folks have also pointed out that `block` and `content` are used by CMSes, so we might need more specific classes. Maybe `grid-block` and `grid-content`? That uses the existing terms we have, but namespaces them to make them more distinct.\n. @Bernardao @Failcookie Also, it will be possible to change the column count from the default of 12, but you'll probably also want to disable the grid classes then, or you're going to have _like a billion_. So your semantic, percentage-based grid would work like:\n\n``` scss\n$total-columns: 100;\n\n// Full width on small, 50% on medium and up\n.some-column {\n  @include grid-block;\n\n  @include breakpoint(medium) {\n    @include grid-size(50);\n  }\n}\n```\n\nThere is potential for us to build percentage- and ratio-based grids later and let people pick, but I doubt it will be a 1.0 feature.\n. @kenwheeler We considered using an attribute like `data-layout` to store the grid classes, but ultimately we decided we were solving a problem better solved by just using mixins. The documentation for this framework will emphasize the Sass way of building components much more than the Foundation 5 docs, which puts all of the Sass stuff at the bottom.\n\nThe two classes we settled on for the grid are `grid-block` and `grid-content`. This naming convention fits better with existing components, since the name of the component is actually in the class. The namespacing prevents any conflicts with frameworks like Drupal, which use the classes `block` or `content`.\n\nWe still need to work out a few other naming conventions. One of them is related to the default behavior of the grid. Flexbox can make all of your grid columns equal height, but then none of the boxes will wrap, which is required for a traditional responsive layout. Right now wrapping is the default, and you can add the class `stretch` to disable wrapping and stretch the columns out. However, in our development we've found stretching to be a more common behavior and we're adding `stretch` to our grid blocks all the time.\n\n**So here's the question: should the default behavior be stretching or wrapping?** We'll make one the default behavior, and add a class for the other.\n. @kenwheeler We tend to agree, and also `stretch` is a problematic class name because a block can have a `shrink` class, which auto-sizes it to its natural width or height. But those are two totally separate behaviors with similar names.\n\nI think the main distinction is that stretching makes sense for the big structural components of your app, like the panes and so on. But once you get to a content area, maybe you have a grid of cards that you need to collapse from 3-up to 2-up to 1-up. In that case you need wrapping because everything has to stack. (Although for even-width layouts like that, we have `[size]-up-[n]` classes that do that for you.)\n. @jwvanderbeck, thanks so much for your feedback!\n\nTo your point about \"groups\" as a concept, you're totally right, and that's why we scrapped them in favor of having just blocks. The two layout objects shared a lot of similar features, which is why we ended up merging them. The reason we're shying away from `content` as a standalone class is because it's a very generic term, and some CMSes (such as Drupal) use `block` and `content` classes already. Of course, class collision will always be a potential issue when you mix libraries, the word \"block\" is _so_ generic that we're probably better off prefixing it with the word \"grid\", just to be safe.\n\nAs for scrolling, what browser are you using? We're having some troubles with Safari right now, but the newest versions of Chrome and Firefox should handle scrolling content just fine. All grid blocks will scroll by default if their content overflows.\n. @jwvanderbeck Unfortunately vertical sizing is not as full-featured as horizontal sizing, which is a quirk of flexbox. You can size vertical grid units these ways:\n- **Stretching:** this is the default behavior; the block takes up all the leftover space it can.\n- **Shrinking:** add the class `shrink` and the block will only take up as much vertical space as its content needs.\n- **Manual sizing:** use the `flex-basis` property to set a px, em, rem, vh, etc. value to size the block.\n\nI'm sure what you're trying to do is size with percents, and unfortunately you can't. We were hoping to make the behavior of the horizontal and vertical grid identical, but that's the one place where they aren't.\n. @jwvanderbeck So one thing to understand is that you don't need to alternate blocks and content blocks. It's not like rows and columns in Foundation, where they have to alternate. So your last example can be condensed down like this:\n\n```\n.frame.vertical\n    .block.content.shrink\n    .block.stretch\n        .block.content.small-3\n        .block.content.small-3\n        .block.content.small-3\n```\n\nBlocks always move horizontally by default, and that behavior doesn't cascade down to nested grid elements. So you always need to define a vertical grid on every block that you want to have vertical children. In the above example, only the highest-level grid element (the app frame) is vertical. Those `small-3` blocks will be arranged horizontally.\n\nThe grid is still missing formal documentation (and will soon be [refactored slightly](https://github.com/zurb/foundation-apps/pull/78)), so props to you for trying to figure it out :)\n. @djgadd We do need responsive versions of the `shrink` class, and also probably an `expand` class to revert a grid element back to the default behavior, with responsive versions of that class as well.\n. I think switching to libsass would be ideal, and we'll probably do it pretty soon, since they just recently implemented maps. I'd like to see if proper `@each` functionality will make it in soon, which so far is the main way we access maps in our codebase.\n\nA common complaint about Foundation 5 is that it takes a long time to set up: Node, Git, Ruby, Bower, Grunt, and our gem are all dependencies. With libsass we can cut out the Ruby dependency, with libgit we can git out the Git dependency (we use it in F5 to download the stack), and with a bit of finagling we can run locally-installed copies of Bower and Gulp instead of requiring them globally.\n\nIf we work at it we can have a pure JS stack, which would be real nice.\n. So Foundation 5 downloads the Compass and Libsass stacks using Git, just cloning the repos we have set up. The problem is, you need Git installed on your system beforehand, so that adds another dependency. We can use libgit2, which is a portable, C implementation of Git to do that instead. There's a node version called [nodegit](https://github.com/nodegit/nodegit), so we can basically run `git clone` using JavaScript instead of the user's command line.\n\nAs for the `@each` thing, what I'm talking about is doing:\n\n``` scss\n@each $key, $value in $map {\n}\n```\n\nThere is another way to do this in libsass, but we might hold out a _little_ longer and see if proper `@each` support gets in there, instead of refactoring what we have right now.\n. We've moved the codebase to libsass; it should be merged into the master branch tomorrow.\n. @Martinspire It's not. Our [starter template](https://github.com/zurb/foundation-apps-template) for Apps uses Libsass.\n. @ilanbiala Which specific part do you feel is too opinionated? Our stack, our Angular helpers, or Angular itself?\n. @ilanbiala Ah yeah, understandable. I think the eventual plan before the first release is to split up the codebases, so the library itself stays here, and the actual stack moves to another repo and becomes the template project. The Sass, JS, and maybe the Angular helpers will be distributed through Bower. That way you can use our components and directives any way you'd like.\n. @viztastic The documentation is currently being written, but not all of the pages are on the master branch yet.\n. Closing this as we are **_mere days from release :O**_\n. @ilanbiala We'll have a few template projects ready for people to look at and download.\n. @AntJanus Sweeeet. Would it make sense to eventually package these as Gulp tasks? I've been looking into writing Sass unit tests and I could run those just by using a separate Sass task in Gulp.\n. Yep, we have plans to improve menu bar, namely by adding support for sub-menus and improving the switch to mobile.\n\nThat being said, we're also working on Foundation for Sites 6 right now, and we're trying to overhaul the top bar. We think it's inflexible and hard to customize, since it's basically designed to do one thing well. We're trying to unify patterns between the two frameworks, so whatever ideas we have for Sites will likely make it back to Apps. The main difference is that the Apps menu bar will be written in Flexbox.\n. @philippeluickx We'll need to take a hard look at the keyboard thing pretty soon here, because it does seem to work poorly with certain layouts, especially ones with a fixed footer and header. It's also possible that different mobile platforms handle the keyboard different with regards to calculated screen size, how it overlays the page, and so on.\n. Yeah, the codebase is still sort of in a \"random things are broken\" state, although the plan this week is to start scaffolding out the documentation, so that should change soon.\n\nAll of the components on the Playground page should work. Notifications don't work anymore because they haven't been converted into an Angular directive yet; it's still just a vanilla jQuery plugin. As for the links, they do work, they're just aren't very many yet. You probably tried clicking on the things in that component list off to the left... secretly, they aren't links, just some weird, deceptive table of contents ;)\n. @ilanbiala A lot of the code is still in flux, so we probably won't accept any pull requests until 1.0 is out. However, we would _love_ your feedback on any of the existing components or features. Ask us questions, make suggestions, tell us we're wrong, etcetera. (Me, I'd like to see more people comment on our [grid classes](https://github.com/zurb/foundation-apps/issues/36), because we need some feedback on them.)\n. Hard to say, but it won't be more than a few weeks until 1.0 is out, so we'll let y'alls know closer to the ship date :)\n. I've noticed the Angular error too, but the page loads fine for me. Are you accessing the site on port 3001?\n. @YuriGor @mehlah What OS are you guys on?\n. @YuriGor The server we're using is just for testing, but it will probably make it into our template stack as well. It's a little easier than configuring the routing to work in a sub-directory.\n\nHowever, you'll be free to run your code in any environment you like.\n. @t1mmen There's been an \"angular is not defined\" error for a while, but it was actually unrelated to the core Angular functionality. Either way the code causing that issue has been removed (9f55f8a9901ceda84e12bf2d0bd7a0b48499e9b8).\n\nAs for the Sass, do you have Ruby and Sass 3.4 installed?\n. @YuriGor If you're running the code in a subdirectory (i.e. `localhost/foundation-apps/build`) it won't work out of the box\u2014you have to tell the UI router what directory the app is in (see [here](https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions#issue-my-assets-and-templates-are-not-loading) for a solution).\n\nIt's also possible your xampp setup is messing with Gulp's server, so instead, you can run `gulp build` to build the site once without running a server.\n. Just a heads up, friends, we're trying a different server plugin for Gulp that seems to generate less errors and just work better.\n\n**The port number is different\u2014it's 8080** instead of 3001.\n. When we first started planning the plugins, we made a bunch of really basic ones as a proof-of-concept, using jQuery and basic DOM manipulation. Our ace engineer @AntJanus has spent the last few weeks converting them all into actual Angular plugins. Notifications, popups, and action sheets still haven't been converted into Angular. Once that's done we'll drop jQuery and just use what Angular has built-in.\n\nThe real plugins are under `js/angular`, while the old plugins are under `js/foundation`.\n. @ilanbiala No problem, just looking at the code it probably looks weird :)\n. @Failcookie The JS plugins are being developed in `js/angular`. (The old plugins are in `js/foundation`, and they're still being converted to Angular directives.) Our Angular guy is out for the week, and he's the most equipped to explain that stuff ;)\n\nYou might also be interested in looking at our Angular helpers, which are in `gulpfile.js` under the `copy-templates` task. This bit of code converts configuration data stored at the top of every template file (under `client/templates`) into routing, animation, and controller configuration for Angular. It allows us to quickly define URLs for pages, how those pages animate, and what Angular controllers they use, without writing any JavaScript.\n. I was able to write a basic controller that pulled data from an API and spit it out. After writing the controller, I added it to the template like this:\n\n```\n---\nname: page\nurl: /page\ncontroller: PageControllerName\n---\n```\n\nThe only things we're \"enforcing\" with Angular so far are the use of ui-router and ng-animate, but even that stuff you could rip out if you knew what you were doing.\n. @ilanbiala You can see all of the animation mixins under `scss/components/_motion.scss`, but we haven't yet properly implemented them with all the Angular stuff. We were using animate.css to do basic testing of the concept.\n. There are two kinds of `block`s in the grid system: ones used for layout and ones used for content. To use a block for content, add the class `content` to the block. This turns off the flexbox functionality and adds gutters. So they're like columns, more or less.\n\nSecond, I'd recommend not using set heights for your elements if you can help it\u2014let the content dictate the height instead. A block will automatically scroll if its content is too tall for the box, but you can add `overflow: hidden` to the block to disable that. We should probably add a no-scrolling class.\n\n**Edit:** Here's how I would modify your markup:\n\n``` html\n<div class=\"block\" style=\"padding-top:7.5px; padding-bottom:7.5px\">\n  <a href=\"#\">\n    <div class=\"medium-1 content block\" style=\"background-color:gray;margin:0 10px;overflow: hidden;padding:0;-webkit-box-shadow: 0px 2px 5px 1px rgba(0, 0, 0, .50);-moz-box-shadow: 0px 2px 5px 1px rgba(0, 0, 0, .50);box-shadow: 0px 2px 5px 1px rgba(0, 0, 0, .50);\">\n      <img src=\"http://placehold.it/100x100\" style=\"width:100%;position: relative;\">\n    </div>\n  </a>\n  <div class=\"medium-10 content block\" style=\"-webkit-box-shadow: 0px 2px 5px 1px rgba(0, 0, 0, .50);-moz-box-shadow: 0px 2px 5px 1px rgba(0, 0, 0, .50);box-shadow: 0px 2px 5px 1px rgba(0, 0, 0, .50);\">\n    <h4 style=\"margin-top:9px;line-height: 1.2\">Title <small>(Platform)</small></h4>\n    <p style=\"font-size: .7rem;line-height: 1.3;\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolore quaerat, assumenda natus! Amet numquam praesentium ab molestiae, excepturi minus dignissimos nemo, quam magnam tempore fugiat, sit reprehenderit laborum perspiciatis atque?</p>\n  </div>\n</div>\n```\n. Brandon and I are going to review all of the components today, so we'll get back to you soon.\n\nOne thing we were wondering is if there would be a way to add onOpen and onClose events to these components, or at least a way callbacks to specific directives. This was something I was trying to implement in my test plugins, but Angular isn't really into the jQuery `on` method. Most of the Foundation 5 JS plugins fire events when plugins do things, and for the ones that don't it's a commonly-requested feature to add.\n. Go for it!\n. If it works standalone then we could put it on NPM. If it's not, that's also probably fine too, since at the moment it's probably somewhat tightly coupled to our stack and our JS anyway.\n. If it requires some of our own code to work, it might make more sense to keep the plugin in this repo for now. It's very Foundation for Apps + Angular specific at the moment, so at least if we keep it here all of our development can stay mostly in this one repo. I guess I don't have a huge preference though ;)\n. I guess the stack will have to pull the Gulp plugin out of the Bower package, I don't know if that's a bad practice or not. Dev tools typically come from NPM.\n. @rafibomb is writing our documentation, so all of this stuff will be super useful. Once we're done moving it to our formal docs we can just remove the file.\n. Can you show an example of how to open/close/toggle components in JS?\n. Other things I thought of:\n- How to set up a base URL if the app is running in a subdirectory (in case you're uploading code to a server)\n- How to set up rewrite rules if you aren't using the test server\n\nThese things are already covered in the UI Router wiki ([here](https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions#solution) and [here](https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions#how-to-configure-your-server-to-work-with-html5mode)), so we can probably just explain the basics and then link to this. As long as people are aware that those things come up we should be good.\n. You can merge it in and we can take it from there while you work on other things.\n. Oh one thing we'll need to document is how you as the Angular engineer properly import these modules if you're building your own project. Or whatever typical boilerplate stuff you think is necessary to properly document an Angular module.\n. Good catch, that's a holdover from Foundation 5. At the moment the global Sass file is being imported in `foundation.scss`, not inside individual files.\n. Totally! The official release is next month. By next week we should have the template project set up, which will make installing and updating a project much easier.\n. We're actually going to switch the compiler to libsass 3.0.1 in the next week, although I don't know if it will make a difference or not.\n. @jpdesigndev It will be an entertaining ride, but with libsass's commitment to catching up with Ruby Sass, it has a good future ahead of it.\n. We've found it easier to use and understand than Grunt, and it's reached a point where a lot of the big Grunt plugins also have Gulp versions.\n\nOur template project will use Gulp, but it will be possible to use our components with pretty much any other build system. The main thing you're going to lose for now is use of our Angular helpers, which do the routing and animation stuff. People are already talking about trying to port this to Ember when it comes out, so I could see people recreating the Angular helpers as a Grunt task.\n. Once you've installed everything, run `npm test` to get the test server going, and then go to `http://localhost:8080` in your browser. If you specifically go to `localhost:8080/home`, you can see a kitchen sink with most of the components we have.\n\nWe're working on the formal documentation right now, but it hasn't yet made it into the master branch.\n. Oh, I totally missed that leftover code. You can remove all of that stuff under the `@import` statements.\n. @jwvanderbeck Oh yeah, our stack is just a starting point, and we don't intend to prescribe exactly how to use our components, so the choice is more for what our stack should use as a default. Ideally the codebase works with Ruby Sass 3.4 and libsass 3.0+, which I think is doable, but little things keep coming up.\n\nThe main goal for the stack would be that it's effective as a rapid prototyping tool. As for taking code to production, we expect developers to mess with the structure of their app a lot more.\n. @AntJanus The docs folder should be all lowercase, or it's going to bug me ;) It was made capitalized on accident it would seem.\n. @AntJanus Oh well it wasn't you who renamed the folder, but I haphazardly changed all instances of \"Docs\" in the gulpfile to \"docs\" not thinking it mattered, so that was my bad.\n. @AntJanus Can you remove the whole folder from version control in one commit, and then re-add it in a second one? Just renaming the folder destroys the history anyway so it's probably not a huge deal. Sweeping structural changes are probably still okay before 1.0.\n. Is there not a clever/really irresponsible way to transfer all of the attributes of the `<img>` tag to the `<svg>` tag that's injected?\n\nIf not I think telling people \"don't get fancy with these\" is fine. Put your click events on anchors outside the icon, etc.\n. Sounds good. I'm trying to think, what are common things people might try to put directly on icons? Click events seem like an obvious one. But we'll probably just train our users to only put icons inside of other interactive things. Like if you have a button with an icon, make a `.button` element and put your directives on that.\n. Great! As for the actual icons, Brandon and I have a list of the ones we've agreed with the Iconic folks to use, so we'll get those in version control soon.\n. Yeah, we can probably put them in a folder at the root of the repo. So in production you copy them out of `bower_components/foundation-apps/iconic`. I'ma go figure out which icons those are today and I can push them to this branch.\n. Merge'd\n. Yep, they definitely should. The user should be able to change the names and values of the breakpoints as they please.\n. Yep, looks like they're hardcoded right now. We'll resolve that soon.\n. The grid classes just had a lot of work done to them, and proper support for the `$breakpoint-classes` variable was a part of that.\n. I haven't had time to work on it; we're finishing up a few final components (typography, forms, and menu bar namely) first. This PR should be ready by the end of the week, though.\n. Grid classes successfully refactored, and surprisingly working right in the newest Chrome, Safari, and Firefox, and IE10. Just working out some final kinks.\n. Boy howdy do I love this chain of dependencies haha. I guess this is another compelling reason to use Ruby as the default Sass compiler; nothing is changing on that front for a while.\n. We'd like to tag something as a release candidate next week, we just have a small number of components that still need finished.\n. We have [this template](https://github.com/zurb/foundation-apps-template) that pulls in the Apps codebase through Bower. This is what our end users will eventually use.\n\nIf you want to incorporate the code now, you can run `bower install zurb/foundation-apps --save` to get the code in your own stack. The bower package includes the Sass, JavaScript, and Gulp plugin for routing.\n. Ah, well we just got it working in the past few days. :)\n. Strange, I'm not sure why it's looking for a repo called \"bower-foundation-apps\". When I run the same command it gets this repo. You can also try being more explicit:\n\n``` bash\nbower install https://github.com/zurb/foundation-apps.git\n```\n. @jwvanderbeck How do you think we should change the delivery of the files?\n\nFor now it's likely that the Angular helpers will require a somewhat specific build process, but we also don't expect many Angular developers to take them to production, so they can just be removed in that case.\n. @jwvanderbeck Our documentation will have a getting started page that outlines these two options\u2014using our pre-made template, versus installing the components yourself using Bower.\n. We're planning on tagging a release candidate tomorrow, and we can try to outline what's left for the 1.0 release. I can tell you that the codebase is more or less feature-complete, so our big focus for the next few weeks is code cleanup, writing documentation/tests, and bug-fixing.\n\nWhen 1.0 is out, we also plan to maintain a roadmap of planned new features. We know there will be a lot of holes in the feature set, or people are going to try to do things we didn't anticipate, so we already have ideas for new features and components that we don't have time to get in for 1.0. \n. @viztastic We want to do tutorial videos, it's just a matter of if we have time before 1.0. But this grid is so different that we obviously need to educate people on how it works.\n\nWhat we will have for 1.0 is a handful of templates that use all of the different components in various ways.\n. [Yay release candidate!](https://github.com/zurb/foundation-apps/releases/tag/v1.0.0-rc.1)\n. I'll see if I can mess around with your markup, but here's a few things:\n\nYour first panel has two classes that conflict: `shrink` and `xxlarge-1`. `shrink` reduces the panel's width (in a horizontal grid) or height (in a vertical grid) to whatever the size of the content inside the panel is. `xxlarge-1` sizes the column equal to 1/12 of the parent.\n\nThe panel should also be written as an Angular directive to get the proper functionality:\n\n``` html\n<div fa-panel position=\"left\" class=\"no-scroll xxlarge-block xxlarge-1 shrink\" id=\"statspanel\">\n</div>\n```\n\nIt can then be opened and closed by adding the attribute `fa-toggle=\"statspanel\"` to any other element.\n\nTo your last point about alignment, unfortunately you can't align individual children in a grid, only the grid parent. So when you set `align-right` on a block, your aligning all of the blocks _inside_ that one to the right.\n. I just removed that code since we aren't using it anymore. ce6dac4d497c10d13551c382380ae4d5c7c6bbab\n. Can we include both tasks, using Ruby Sass as the default one? It would be useful if Travis could try compiling with both so we can check for errors.\n. If Ruby Sass works, you can merge it in and I'll make it work in libsass eventually.\n. I removed a few older branches, and it looks like all the ones leftover are in active development, even if they don't have PRs.\n. I don't see those on GitHub, so if you happen to have them on your local machine, then yeah, they can be deleted.\n. Yeah I just added that and didn't update the documentation to specify that you now need Bundler.\n\nIf possible we'd like to avoid what happened with Foundation 5, where Sass 3.4 introduced a breaking change and none of the existing Foundation projects out there had a Gemfile, so anyone who upgraded their system-wide Sass was screwed. And of course, it's always worthwhile to specify your dependencies.\n. I was updating the readme on Friday but didn't finish it. I'll get that change in today.\n. Instructions to install Bundler were added here: 78e1b0a38e2ac7fcfa907968d71a13b9838bb83f\n. [We have styles](https://github.com/zurb/foundation-apps/blob/master/scss/components/_forms.scss#L234) for the native `<progress>` and `<meter>` elements, although the styles aren't yet finalized, and they still need mixins. The `<meter>` element is cool because it can automatically change between high, medium, and low colors based on its current and max value. Unfortunately it's not supported in IE10.\n. The component hasn't changed since it was originally written a few months ago, so it should still be working. The `<meter>` element in particular has a lot of options, though, so it is kinda confusing; [here's](http://css-tricks.com/html5-meter-element/) some good documentation on it.\n. The codebase will indeed be compatible with Ruby Sass and libsass, but since libsass is in active development it will be something of an entertaining ride making sure the codebase works with it. That being said, we're big libsass fans so we'd like the framework to work with it.\n. So, because of some quirks with how CSS handles vertical alignment, it's not possible to size vertical grid elements with percentages. Your options are:\n- Have the block fill all leftover space; this is the default\n- Have the block shrink with the `shrink` class; this means it will only take up as much space as it needs. This is useful for headers and footers, which tend to be thinner anyway.\n- Size the block explicitly with the `flex-basis` property. It has to be an explicit unit like `px`, `rem`, `em`, or `vh`; it can't be percentage.\n\nIt is a weird inconsistency to be sure, but it will be reflected in our documentation.\n. Blocks use `overflow: auto`, which means they only show scroll bars if there's too much content in the element. There's currently no class to change that, but you could add `overflow: hidden` to a grid element to stop it from happening.\n\nTo achieve the layout you're describing, here's the layout I'd suggest:\n\n``` slim\n.vertical.grid-frame\n  .shrink.grid-block.header\n    p Header\n  .grid-content\n    .grid-block#row\n      .grid-content.small-3.sidebar\n      .grid-content.small-6#main\n      .grid-content.small-3.sidebar\n    .footer\n```\n\nOnce you're inside a `grid-content` element, the grid changes slightly to act more like the Foundation 5 grid. This is what you want, because you don't want that sub-grid to try and stretch the length of its parent\u2014you just want the whole parent to scroll like a normal container.\n\nIn the above example, fill `#main` with sample content and you'll see that the whole lower container will scroll, not just the center area.\n\nNow, can you make the sidebars, which have a gray background, stretch to the bottom of the parent until it starts overflowing? Not easily. Unfortunately vertical sizing is still a hassle in some scenarios.\n. Awesome! Glad I can help. We know the grid is kind of confusing; we've got some good documentation in the works that we should have in the master branch soon.\n. One of our guys has that issue also, where `bower install` is putting things in `app/bower_components` or something like that. I tried searching around for where a system-level setting for that exists but I couldn't find anything. So we can just add a `.bowerrc` to lock that down.\n. Do you have a visible example in the repo? Or is it similar to the panel thing we were talking about on the phone yesterday?\n. I can't test it right now, but there might be a quick fix we can do. It seems like the issue is that \"hidden\" components like panels are briefly being exposed while views shift around.\n\n``` scss\n// Select all views\n[ui-view] {\n  // Only select views being transitioned\n  .ng-enter-active, .ng-leave-active {\n    // Only select components inside those transitioning views\n    [fa-panel], [fa-offcanvas] { // Etc.\n      // Now hide those suckers\n      display: none !important;\n    }\n  }\n}\n```\n. @ilanbiala The animations will follow the format prescribed by Angular's animation module, where transitions are structured like this:\n\n``` scss\n.transitionName {\n  &.ng-enter {\n    // Before state\n    &.ng-enter-active {\n      // After state\n    }\n  }\n}\n```\n\nOur transition mixins will allow you to create animations with more nuance, by adjusting direction, origin, timing, and so on.\n\n``` scss\n.customTransition {\n  @include slide($args...);\n}\n```\n\nBut if you want to write your own totally different transitions, they'll work as long as they use the `ng-` classes.\n. :+1: \n. That was my concern, I'm not sure if there are any minor structural differences in output, but I don't think there are.\n\nSo yeah, a diff check would definitely be useful, although I know right now that libsass doesn't work, so initially it shouldn't be required for a passing build. I think 1.0 will be Ruby Sass only, but the gap in features is pretty small, so either we can work our codebase backwards slightly or wait for libsass to add a handful of new features and fix a few bugs.\n\nLet's add tasks for it but not build it into the initial test suite. Once we're more confident libsass will work consistently, we can add libsass compilation and diff checking to the formal test process.\n. Yeah, that's fine. Our main tests will be the JS and the Sass, compiled with Ruby.\n. In progress here: #146\n. Merged here: 459c49ce522d7a82fc65e3cb15879ed657fcbfaf\n. The `close` directive is triggering an error and not functioning. This happens whether or not the attribute has a value. Try messing with it in the index file in our documentation, which uses a panel for the sidebar nav.\n. :+1: \n. Pretty sure this commit inadvertently fixed this: daa858918ca4dd6c32d3648ff127e5ffea0cebfb\n. :+1:\n. I just added `bundle` to npm's post-install process, which will properly set up the gems for you. You're supposed to run `bundle` once as a apart of the setup process, but that wasn't in the documentation. So now it does it for you!\n. The revamped classes that use `ng-enter`, `ng-enter-active`, et al. were merged in here: 1f222b694d3ed3ae91aba101c32a666fdacbc689\n. Added in this commit: cfa79f97352eae00cdea9b318e7657a6932d32fe\n. Talked with @zurbrandon and we agree, the directive name should be the same, making the revised syntax:\n\n``` html\n<zf-accordion>\n  <zf-accordion-item></zf-accordion-item>\n</zf-accordion>\n```\n. I'M ON THE CASE\n. Looks like the last thing to do would be to add plain English descriptions for each page, so it doesn't just show a raw view name with hyphens in the search results.\n. I'm doing a sweep right now. You think it's okay to delete your test pages? We've got live examples (mostly) working on the pages for each component.\n. Talked to @zurbrandon, we'll go without notification support for now.\n. Fixed with: 7632696c4925c614d9f5560904e81f9ac733b3d1\n. Okay, confusingly this bug stopped happening.\n. Yep, I tried to do it last night but I got errors, so I must not have configured it properly. The pristine `app.js` doesn't need the markdown or hljs modules.\n. @viztastic For the code samples, we're shifting from using a Markdown parser to using an Angular implementation of highlight.js, but not every sample has been fixed yet.\n\n@AntJanus Ah okay, so this is like the other animation stuff where you need an in-between setup phase. Normally the overlay is `display: none`, and then when a modal is called in, it needs to be set to `display: flex` and `opacity: 0`, _first_, and then set to `opacity: 1` to trigger the transition.\n\nThe modal overlay doesn't need any animation support\u2014it should just be hardcoded to fade in and out. So if I add those two states (probably just with `ng-enter` and `ng-enter` active to keep it consistent, and scrap `is-active`) would that work?\n\nUnfortunately we can't do the lazy method with `pointer-events: none`, because IE10 confusingly doesn't support it.\n. Fixed in this commit: 63fb722c13d1317a6bc20d1c03ebd74501ffd615\n. `padding` class added here: fdbff5d248b5889c29653eb06b775226fd89cf20\nRemoved padding from container components here: daa858918ca4dd6c32d3648ff127e5ffea0cebfb\n. :+1: \n. Pull request in progress here: #269\n. `display: block` is what makes the element show. The `!important`, although a bit annoying, is necessary because a single class can easily be overridden by most other selectors. And there's no other quick way to show/hide elements\u2014you can't use `visibility: hidden` or `opacity: 0`.\n\nWe don't currently have a solution for using these classes with inline or inline-block elements in Foundation 5, either. We'd either have to add modifier classes (`show-for-medium inline`) or create new ones (`show-for-medium-inline`), which will add a ton of code.\n\nIf we added the option to specify your visible state in the mixins, would that be helpful? We have mixin versions of the visibility classes now:\n\n``` scss\n.thing {\n  @include show-for(medium)\n}\n```\n\nWhat if you could change the `block` to another value like `inline-block` or `table-cell`?\n\n``` scss\n.thing {\n  @include show-for(medium, inline-block)\n}\n```\n. Alrighty, we updated the visibility classes to use `flex` instead of `block` when the element has `grid-block` in its `class` attribute.\n\nThe visibility mixins were also updated, so you can override the use of `block`, like so:\n\n``` scss\n.thing {\n  @include show-for(medium, table-cell);\n}\n```\n. @jmkenz For Foundation 6 we're going to switch to `max-width` media queries to avoid the `display: block` issue altogether. I think eventually we'll transplant that fix to Apps as well.\n\nSee zurb/foundation#6687\n. @jmkenz It's only for `.show-for-*` classes, so that you never need to assign `display: block` to an element. We can refactor the visibility classes to only apply `display: none` to an element, negating the need for element-specific visibility classes (`table.show-for-medium` and so on).\n\nIt does break our mobile-first rule, which is sort of a tough call to make, but we've only made that call for this specific feature. The class itself still follows mobile first logic: \"show this on x size and up\", even if the rule in the background is `max-width`.\n. Fixed in this commit: 63fb722c13d1317a6bc20d1c03ebd74501ffd615\n. Fixed here: b4aed57c33fdb9561663c3dad24dfdac019f56e8\n. Doesn't appear to be an issue anymore.\n. Done!\n. Closing and adding to our list of known issues.\n. This is being fixed [in Firefox 35](https://gist.github.com/joaocunha/6273016/), which will be out in January. It will be a momentous occasion.\n. I think you were looking at that page while I was doing a rebase, so that nonsense ain't there anymore.\n. Fixed in this commit: b18f48fab0f302d4f08a50d6ca525cb4d273294c\n. Doesn't seem to be an issue anymore.\n. Good idea, we'll get somebody on it.\n. Site just went live so the 401 is gone, and I just updated the readme: 7d1c876956182fa2a4a2f8f133fb69aa83e55552\n. Went ahead and converted them to anchors. As far as accessibility, it's something we'll have to wait to look at farther down the road when the framework is more solid.\n. No, we love nitpicking! :) Thanks.\n. [Here you are.](https://github.com/zurb/foundation-apps/blob/master/CONTRIBUTING.md) May need some fleshing out but it's a start.\n. What version of Sass are you compiling with?\n. Oh! Yes. I didn't look close enough at the code sample.\n\n`foundation.scss` imports the entire framework at once, so you don't need to import `_global.scss` after it. And the settings file should be imported before the Foundation libraries, so it can be used to override variables.\n. Yes, there should be one. We'll get one in there shortly.\n. I moved the settings file to the `scss` folder so it'll show up in the Bower package. Just need to do some testing with the [template stack](https://github.com/zurb/foundation-apps-template), which already has a settings file. It needs to import the settings file _not_ in the Bower package, but the one in the `client/assets/scss` folder instead.\n. I'll look into it, but thankfully that step of the process is just a welcome message\u2014it doesn't set anything up.\n. That might work. Also, the source code for the CLI is here, in case anyone who knows more about Node than me can help :)\n\nhttps://github.com/zurb/foundation-cli\n. @jsmreese I can see in your screenshot that it's connecting the CLI's main JavaScript file to a command on your system (`C:\\Users\\John...\\npm\\foundation-apps`), is that command there at that path?\n. @peterblazejewicz I implemented your fix, which should solve the problem.\n\n```\nnpm update -g foundation-cli\n```\n. Awesome! @jsmreese @dhye360 @peterblazejewicz let me know if it works for y'alls.\n. Alright, I'll look into it. Thanks so much for being helpful and patient, guys :)\n\nIn the mean time, you can do what the installer does by hand:\n\n```\nnpm install\nbower install\nbundle\n```\n. @narration The initial hope was to use more portable libraries, but it didn't totally pan out. For example, we were going to use nodegit, which is a portable version of Git for Node, but it wasn't able to clone over HTTPS, so we couldn't use it. Some of the Node-based tools we use or have considered using are in active development, so sometimes things get weird.\n\nSeeing the issues that have cropped up, though, I think we'll take another look at it. Bower and NPM both have programmatic APIs, although Bower's isn't too thoroughly documented from what I can tell. But we can make it work! The only odd bird is Bundler, although the codebase is very close to working with libsass, at which point we can just drop Ruby from the stack entirely.\n. @viztastic Well, the framework came in a little hot last week, so we'd just like to get a slightly more stable version out for people using the framework this early. It's just a lot of little bug fixes.\n\nThe Bower package is also currently missing the `_settings.scss` file, so if you install the framework standalone that file isn't as easy to find.\n. Can any Windows users help us test a new build of the CLI? We're working on improving error-handling and cross platform support.\n\nHere's how to run the test install:\n\n```\ngit clone https://github.com/zurb/foundation-cli.git\ncd foundation-cli\nnpm install\nnpm test\n```\n\nIf all goes well, you'll see three green check marks at the end of the install. If you get an error, please paste it in here so we can take a look. Thanks!\n. @tnedich Fixed that: [3d9b47](https://github.com/zurb/foundation-cli/commit/3d9b4737d80205311ac58364f4ea8ecc462b8acb)\n\nThe command should at least start now.\n. Hmm, well luckily we're going to remove Ruby from the install process entirely, so I won't stress about that. The Git, npm, and Bower parts working are the most critical.\n. @jgamao Which error are you getting? And is it with the current CLI or this test version?\n. @fhassan2014 Ah, sorry about that, there was a line of debugging code I left uncommented that forces an error to happen. If you have time, could you try testing it again? I'd appreciate it :)\n- Delete the `test` folder the CLI created\n- Run `git pull`\n- `npm test` again\n. @fhassan2014 The template project uses Bundler to install the right version of Sass for you. Run `bundle install` and then try compiling again.\n\nThe next version of the CLI won't require Ruby or Bundler, thankfully :)\n. @fhassan2014 Ah that's fantastic :) Thanks again for trying it out.\n. @fhassan2014 You can just run `gulp` if you have it installed globally. The way the `watch` and `build` commands work changed slightly in the new CLI, although the functionality is the same.\n\n`foundation-apps watch` is identical to `npm start` which is identical to `gulp`.\n. @fhassan2014 Try just running `gulp` inside your project folder instead, since that's what the `watch` command is running. (If you don't have Gulp: `npm install -g gulp`)\n\nThe `watch` command will make more sense once all three of the Foundation frameworks use the CLI, and then `watch` becomes a shorthand for \"run whatever this project needs to run\".\n. @soumak77 [Ink](http://zurb.com/ink/) is the third one, which is being rebranded as Foundation for Emails when v2.0 comes out in a few months. Unifying the branding partially represents our push to share more code, styles, and best practices between the three frameworks.\n. @fhassan2014 The second error `EADDRINUSE` means you already have a server for another Apps project running, or at least you have something else running on port 8080. Close out your other build process, run `gulp` again, and then it should work.\n. @fhassan2014 It looks like the Sass isn't compiling to CSS; that's why there's a \"Not Found\" error in the console, for `css/app.css`. Are you still getting the same `gulp-ruby-sass` error in your other screenshots?\n. @fhassan2014 I just noticed you're running a pre-release build of JRuby, so I think that's the issue. The error is being generated by the Sass executable, meaning it's a Ruby error, not a JavaScript one. You might need to switch to a stable version of JRuby, or file an issue with their team.\n. This is a somewhat older issue, so I'm going to close it out. The original issue filed has been fixed, and version 1.1 of the CLI, which we published last month, greatly improves the stability and error-handling of the project creation process.\n\nIf y'alls have any more issues with the CLI in the future, do let us know :)\n. Doesn't look like it says ZMusic anymore. http://foundation.zurb.com/apps/app-templates/travel/#!/\n. Fix'd.\n. Thanks!\n. There's a Markdown parser in our docs still, so it's converting that URL into an anchor. We should be able to remove that pretty soon, because all of our docs are written in pure HTML now.\n. Fixed with #208.\n. Thanks!\n. I had noticed an issue with the `get-border-value()` function not returning values properly, but that's a small problem. I think there are also a few places in the code where we use `@if not`, and libsass doesn't properly support `not`. So you'd have to change any statements like that to be more specific, i.e. `@if $val == false`.\n. Alright, I'm going to call libsass support _official_.\n\nOur plan is to eventually compile the documentation and the template stack with libsass by default, and drop our Ruby dependency, but of course we'll keep testing in Ruby Sass as well.\n\nThe Foundation 5 CLI gives the user the option to pick their compiler. Would people care if we dropped that choice and just made libsass the default? I feel like if you're savvy enough to want to use the new Sass 3.4 features, you're savvy enough to know how to switch a Sass compiler ;)\n. It'll definitely be in 1.0.3 :)\n. I think that would be a better option, changing the `$orientation` parameter of the `grid-frame` and `grid-block` mixins. The default should be `horizontal` to match how the class system works.\n\nIf you'd like to make the change I can merge it in :)\n. Ah yeah, good catch. Let's say `$orientation`, because that same term is used for menu bar and tabs as well.\n. Awesome, thanks!\n. We added a fix to the template repo: [cf139fc51fea7df85268c8b35425ab0014342d26](https://github.com/zurb/foundation-apps-template/commit/cf139fc51fea7df85268c8b35425ab0014342d26)\n. Whenever you see a \"Cannot find module\" error, it means you're missing an npm package, so you can run `npm install` to get the package. So this is likely an issue with the CLI.\n\nHere's a question, @shanecarmody: do you typically run `sudo npm install` versus just a regular `npm install`? The CLI currently has issues with people who have Node configured to where you need `sudo` to install things.\n. I noticed that the Yeoman CLI, which I borrowed a few libraries from, doesn't directly address this issue\u2014they link you to tutorials on how to properly configure Node instead. Possibly because it's a tricky problem to solve.\n\nIt's tricky because you have to detect that a normal `npm install` is failing, and then follow it up with a `sudo npm install`. I think the error is usually `EACCESS`, so you can probably catch that, but maybe there are other random ways an `npm install` can fail also.\n\nIt's also tricky for me to test because I don't have access to a machine that requires `sudo` when you install things, and I'm not sure if there's a way to fake that environment. I'd have to borrow a coworker's computer instead ;)\n. I think as a stopgap we can add a check to see if you ran `sudo npm install -g foundation-cli`, and then every time you build a new project tack on a warning saying \"you might need to run these commands by hand\" or something like that.\n. The issue with machines that require `sudo` is a known one, and we're looking to fix it shortly.\n. Ah, we need to remove those, as the framework doesn't currently support RTL. It's on the list of things we want to add in the future.\n\nInstead of using the `$default-dir` and `$opposite-dir` variables, we might look into using [css-flip](https://www.npmjs.org/package/css-flip) instead, which would automate a lot of that process.\n\nAnother request we had for Foundation 5 is better support for bi-directionality, which seems like a trickier problem. If anyone has input on that, or the use of CSS Flip (or similar tools), let us know!\n. RTL support is now on our roadmap, but it probably won't happen until we're a few patches in.\n. @jahtalab We don't have a specific timeline right now, but now's a good a time as any to examine our approach to RTL. We're also working on Foundation 6 right now, which will continue to have RTL support, so we should use the same approach for both.\n\nWe had looked at using [css-flip](https://github.com/twitter/css-flip) to make the process more automated, but I don't think it will cover every use-case we have in our codebase. It also only works with CSS, not Sass.\n\nIf you're interested in contributing, that would be great! We're currently figuring out if there's a more elegant way to implement RTL than our current setup with the `$default-float` and `$opposite-direction` variables. Maybe a more generic `flip()` function that converts from left to right, and can reverse percentages automatically?\n. Did you create your project yesterday by chance? The template stack was briefly missing autoprefixer, so Safari wouldn't have the `-webkit` prefixes it needs to work. Try pasting this code into your existing `gulpfile.js`, where the `sass` task is. It's from lines 72 to 83:\n\n``` js\ngulp.task('sass', function() {\n  return gulp.src('docs/assets/scss/app.scss')\n    .pipe(sass({\n      loadPath: ['scss'],\n      style: 'nested',\n      bundleExec: true\n    }))\n    .pipe(autoprefixer({\n      browsers: ['last 2 versions', 'ie 10']\n    }))\n    .pipe(gulp.dest('./build/assets/css/'));\n});\n```\n\nProjects created now shouldn't have this problem.\n. Thanks!\n. Thanks!\n. Looks like the partial for the off-canvas plugin is missing. Check your `build` folder; do you see a folder called `partials` with a bunch of HTML files inside?\n. Scratch that, it was an issue with the Gulpfile. [This pull request](https://github.com/zurb/foundation-apps-template/pull/6) fixes the problem.\n\nIf you haven't made any changes to your Gulpfile, just **paste in the [fixed file](https://raw.githubusercontent.com/zurb/foundation-apps-template/master/gulpfile.js)** and you'll be set.\n. I'm still learning Angular, but one thing I've been wondering is if it makes sense to write each module's template HTML in the JavaScript itself, instead of in a separate file. On the one hand, it would make integrating modules into your project easier, as you'd only need to copy on file, instead of two files from two different folders.\n\nOn the other hand, it becomes more of a hassle to maintain because all your HTML ends up in strings instead of a nice, easily-indentable HTML file.. What I don't know is if it's considered a bad practice like it is in jQuery, where it's considered a better idea to use native DOM manipulation (`$(document.createElement())`) or use a templating engine like Handlebars, than have jQuery parse an entire string into a DOM tree.\n\nTo be sure some of our components are more complex than others. Action sheets, tabs, and notifications probably have the most complex markup. Other components like panel and off-canvas are a single line of simple HTML.\n. @AntJanus That makes sense, I've worked with giant strings of HTML so I know it's not really a best practice. I'd be in favor of the folder approach, then, since that would better segment each directive as an actual plugin that you can choose to either import or not.\n. When I landed on this page I didn't realize it was a PR so I changed it myself :P And made a few formatting tweaks also. Thanks for catching it!\n. We're working on a fix to make the menu auto-close.\n. This has been fixed, but it also spawned this issue: #278\n. :+1:\n. I added it to the template repo also: [cf139fc51fea7df85268c8b35425ab0014342d26](https://github.com/zurb/foundation-apps-template/commit/cf139fc51fea7df85268c8b35425ab0014342d26)\n. I'm working on it right now, but in the mean time, you can read [the Sass file itself](https://github.com/zurb/foundation-apps/blob/master/scss/components/_grid.scss), which is very thoroughly documented.\n. And done! The grid page still needs further iteration, but the mixins are now documented.\n. Good catch, thanks!\n. Are you using our template stack or your own build process? See if `js/vendor/iconic.min.js` is being compiled into your JavaScript.\n. Yeah, it looks like the Gulpfile in our template stack is out of sync with what's in the docs. I'll make a few changes and then it will work.\n. Fixed that business with [this commit](https://github.com/zurb/foundation-apps-template/commit/aba7b096f9d7e28969663dc7f24fdcb8b4b3cbe3) on the template repo. You can either cut and paste the **[fixed Gulpfile](https://raw.githubusercontent.com/zurb/foundation-apps-template/aba7b096f9d7e28969663dc7f24fdcb8b4b3cbe3/gulpfile.js)** into your existing project or create a new project with `foundation-apps new project`.\n. Thanks!\n. Definitely! We have a few ideas for this, maybe you can see about implementing.\n- Create a motion stagger mixin so people can set the timing of the stagger.\n- Put the `ng-enter-stagger` class in a variable so people can change it.\n- Create a few classes that use the mixin, like `short-stagger` or `long-stagger`.\n. Merged in #394.\n. Merged in #247 which implements this.\n. This is probably an issue with your build process; you'll need add a copy task to your Gruntfile or Gulpfile that copies everything from `bower_components/foundation-apps/js/partials/` to `build/partials/`, where `build` is the name of your distribution folder.\n. Actually, we recently fixed an issue with the template's Gulpfile not properly copying the framework's partials. Try copying and pasting **[the new Gulpfile](https://raw.githubusercontent.com/zurb/foundation-apps-template/master/gulpfile.js)** into your existing project, or make a new project with `foundation-apps new appName` and it should work.\n\nLet us know if you run into any issues!\n. Is there a way we can handle the dependencies without creating a separate repo? We handle our front-end dependencies through Bower, so we can't add them to this repo's `package.json` necessarily, unless there's a way we can have two package files in this repo\u2014one for compiling the documentation and one for people installing the package.\n. Foundation for Apps is now on npm as `foundation-apps`.\n. Thanks!\n. Since you can see the function call right there, it should be enough to be able to change the percentage value right in the function call (or scrap it entirely if you want to use a different color). Otherwise we'd need extra variables for every variable that used color scaling.\n. @AntJanus `npm start` should use the Gulp executable file inside the user's `node_modules` directory, which is why you don't need it installed globally (npm scripts check inside `node_modules/.bin` before the user's path). However, it seems like this sometimes doesn't work on people's machines for some reason.\n\n@erredeco Looking at that log file, the actual error would have been output in your command line. Could you try re-running the command and paste whatever comes up in the command line?\n. We're working on a fix to detect when the user has multiple servers running and warn them with a more friendly error.\n. Yep, we're pretty close. Although the fact that every tool in the chain (libsass, node-sass, and gulp-sass) is in active development is occasionally problematic. If one library in the chain breaks it will cause problems for our users. This came up a few times during development. Once, a minor patch of gulp-sass caused our build process to fail every time, so we had to lock it at a specific version number. libsass on Windows is also a little weird because node-sass will try to compile a new binary, which requires Visual Studio to be installed on the user's machine.\n\nThe Ruby version of Sass may be slow, but it's definitely more stable. Of course, over time that will likely become less of an issue, which is why we definitely want the codebase to be compatible with both flavors of Sass.\n\nBut just to get some clarity, do you think our template stack should not require Ruby? Because the framework in general technically doesn't require Ruby; you can use libsass also. Like I said, it's close, and it does compile, but I think a handful of minor functions output values incorrectly.\n. @ilanbiala Yep, I think that's what we would end up doing. Sass remained unchanged for so long we weren't used to having to manage our dependencies this carefully with Foundation 5 ;)\n\nA pure JS stack was our initial goal, so we'll get there soon enough.\n\nThe Visual Studio thing threw me for a loop though, I didn't know about it until a few months ago. From what I've learned, node-sass will try to install a pre-compiled binary on your machine (it has two for Windows, 32-bit and 64-bit), but if it fails, it will try to compile a new binary, and on Windows that requires Visual Studio to be installed.\n\nGranted, if you use Windows for web development you're probably used to having a more involved setup process, but ideally the CLI has as little overhead as possible to get going.\n. Closing this as libsass is definitely in the cards for us soon.\n. We're pushing out some updates this week. Specifically, once we get a 1.0.1 release out the door, we'll update the templates to have the new files.\n. We'll likely put out a minor patch this week, and when we do the templates will get a ton of bugfixes.\n. Thanks!\n. Looks like it was an issue with selector specificity; the `is-active` class was targeting other components inside the accordion. #259 should fix it.\n. Typically we don't want hover states to override active states, as the extra affordance isn't necessary. It's a relatively easy feature for individual developers to override if they want it, though.\n. Should be fixed with #258 and #300.\n. There may be cases where you want to force at least one tab in an accordion to stay open, so most likely we're going to introduce a new attribute to this directive that lets you adjust that setting. We just need to figure out what to call it.\n. If you use the two attributes (`multi-open` and `collapsible`) in any combination that would be good. And `false` should be the default for `collapsible`, so by default, there's always at least one open item in an accordion.\n. Thanks!\n. Thanks!\n. Are you using `ui-sref` to create links? That's how you make links with UI Router, not using `href`.\n\nIf you have a view called \"about\":\n\n```\n---\nname: about\nurl: /about\n---\n```\n\nLink to it using this code:\n\n``` html\n<a ui-sref=\"about\">About</a>\n```\n. @tomasbana After reading your comment more closely, I realized you're clicking the example links in the starter template. Those are deliberately not functional, but we could take the `href=\"#\"` out of the menu items so that error doesn't come up.\n. No they aren't, and I'm not sure how that happened. We'll get it fixed shortly.\n. Alright, we updated the panel documentation to be more detailed. It's been deployed to the live site\u2014enjoy!\n. Any version of Ruby that supports Bundler and Sass will be fine, but I'm not sure what the minimum version would be, so we'll look into it.\n. Looks like they're both 1.8.7, so we can make a note of it. We won't likely get into the nuance of managing Ruby versions in our documentation, because the user doesn't need to write any Ruby to work with our template stack; Ruby just needs to work. If you're incorporating our codebase into your own stack, you're probably savvy enough to handle the dependency stuff yourself.\n. Yes, that's how it should be. We've already fixed that issue in the template's gulpfile, so new projects won't have this issue.\n. The data still has to be serialized somehow in the Sass to get it to the JavaScript, but to be sure maybe trying to format it as actual JSON isn't the best idea. Ruby Sass has an `inspect()` function, which will create a string representation of any data type, but it isn't in libsass yet. So there's no way to natively serialize a map in libsass for now, which is why I wrote this function.\n\nSince this function is basically just to transmit a list of basic key/value pairs (always a string paired with another string), it doesn't necessarily need to be output as actual JSON; it could have been something closer to a CSV.\n\n@AntJanus was able to work out the cross-browser quirks with parsing the JSON, but libsass does mess it up because it outputs with different quotes. libsass support is a short-term goal, so we'll probably need to revisit how we pass these media queries around then.\n\nI don't see us dropping Ruby Sass until the two libraries are totally in sync, and when that happens we won't necessarily need to drop one or the other, because they should work the same. Ruby Sass is still the \"canonical\" version.\n. I like this idea, since `&` and `=` can't be in the keys or values, which means you can easily split the string by those characters. I'll put this in a branch and @AntJanus can finish the implementation on the JS end.\n\n**Edit:** Oh, sorry, I didn't realize _you_ already did it for us :) We'll just make sure this works cross-browser then.\n. A null link will generate an Angular error.\n\nTo make it easy, I just brute-forced it and used the live URL of the link, like all the other links. 7baa963d8070fc5715c3c4de48eacaa21aa3f106\n. @wtfribley Yep, the dream was to have a purely CSS-positioned dropdown, but it opens you up to a few weird issues.\n\nTether is a really nice plugin, but it has one blind spot that's unique to our situation: it doesn't work great with elements inside multiple scrolling containers. This is critical for us, with the way our grid system works.\n\nAlso, from what I can tell, it would be difficult to add custom animation to Tether elements, because they're positioned with a `transform`. With Tether using that property, we can't override it to do any animation in and out. That's not super critical, though, since for popups having a fade in and out is probably good enough for now.\n. I'll sidestep the issue for now by just center-aligning the demo button.\n\nThere's a few more things we'd like to do with Tether, like creating a generic `pin` directive to attach any element to any other element, but that's farther down the road. We'll need to figure out how to better make Tether work with our stuff. At that point we'd probably just make the action sheet use that same code, and then it would be way more flexible.\n. Ah, that's because the grid elements inside the modal only have left and right padding. The bottommost element of each modal has a bottom margin, which is what creates that extra space. We'll update our examples to look better.\n. Looks like it's failing on the `git clone` step; do you have Git installed on your machine and a `git` command in your path?\n. It's written in the readme that you need it, but we should probably still add a warning when that error comes up. Never hurts to streamline things!\n. This is the change that introduced the issue: d1ce6aa6e9b6c4e544ba9a0a14cb3518f174d630\n\nThe intent was to have links in panels close the panels when you click on them, so we'll need to rework the directive slightly.\n\nMaybe that code should only be in our documentation-specific JS? That's why it was added, to close our nav menu when you click on something.\n. Yep, panels and off-canvas menus are meant to be totally general-purpose.\n. Yep, we can definitely look into it.\n. Are you building the documentation (this repo) or the template stack? And is there any other output in the command line you can paste?\n. Do you use JRuby? I did some research and it sounds like this is an issue with that. Another Apps user [had this problem](https://github.com/sass/sass/issues/1551) and was able to solve it by downgrading to version 1.7.15 of JRuby.\n. This is a side request, but since you're working on the refactor I'll ask: is it possible to grab the breakpoint list through a service or something? We have the code to grab them from the Sass for Interchange to use, but we had a request to make that list something you can access from anywhere. It might already be in there but I'm not sure.\n. Waiting until later makes sense I'd say.\n. Yep, 1.1 should be out before we're gone for the holidays.\n. @jaysonminard This refactor has been in place since 1.0.2. A big thing to put in a patch number, yes, but it was very early in the framework's life, and we needed it out anyway. We're putting out 1.1 tomorrow most likely.\n. There's another Webkit-specific option called `-webkit-transform-style: preserve-3d`. Is there an example I can test this on?\n. Ah okay, no problem. There's a few things we need to make more clear in the documentation, like how a prefixing tool is required.\n\nCurious, did you make a Grunt version of our Gulp plugin that generates routes?\n. Well if you ever have time to put together a clean scaffold that uses Grunt instead of Gulp, throw it up on GitHub and we can link to it on our resources page.\n. Thanks, the Less detection was really confusing.\n. Yep, we need to look into it, I noticed the same issue with modals.\n. @AntJanus Looking at `index.html`, there are two example modals, both with `overlay=\"false\"`, but an overlay still appears on the first one, `#mainModal`.\n. @AntJanus Ah okay, I guess I assumed that you could turn on and off clicking to close outside of a modal, independent of if the modal has a visible overlay or not. We don't need to change that right now, though.\n. [This commit](https://github.com/zurb/foundation-apps/commit/cf4b0b41dcd68cf9182e95cbc45f609653163fb8) swaps the defaults for the modal parameters. Now by default, modals will have an overlay and clicking the overlay will close it. These two properties can be independently overridden with `overlay=\"false\"` and `overlay-close=\"false\"`.\n. We haven't worked out all of the kinks with libsass quite yet, but we're working on it. Is there any more to the error you got or is that it?\n. Alright, we'll do some testing.\n. Are you importing the settings file before the main framework files? I think it's trying to find a variable called `$include-css` that's in `_settings.scss`.\n. Yep, that was the issue. We'll make sure to include the settings file in the Bower package in a future update.\n\nWe're also working on better documentation on how to use Foundation for Apps as a dependency.\n. How does removing the dot change the logic?\n. Ah, I see. So all of our globs shouldn't lead with `./`?\n. We had this issue with panels as well, and solved it by removing the hardcoded transitions from the panel Sass, and instead having the directive automatically add a default animation. So we can do the same thing for notifications, where it just picks a good default based on the position (e.g., a top-right notification will slide in from the right).\n. @AntJanus Ah, well that actually sounds fine as a default. I can just remove the hard-coded `transform` on notifications (they're positioned with `position: absolute` and aligned with negative margins so it'll be good), allowing the motion classes to take over.\n. Our original plan was to put `is-active` in a variable, so you could change the active class on the entire framework, but do you think each component's specific active class should be customizable as well?\n. Right, I wasn't going to implement that until we had it working on the JS end too. But people like being able to change any class name we set, so we should look into it. It could be another parameter we serialize into that `meta` tag. Maybe we can set that up in 1.1.\n. You can reset the change and then force push the branch back to GitHub. Messy, yes, but it works. Just copy the text of the file you changed first so you don't lose it.\n\n```\ngit reset --hard aca168f0b825d50dfbc13e0b3dc9bb0169f5c69f\ngit push origin master --force\n```\n\nThat will overwrite your fork's master branch so it doesn't have that last commit.\n\nAnd to be sure, I would **_never**_ recommend force pushing to the main repo's master branch ;)\n\n**Edit:** Your other option is to run `revert` on the commit, but that creates a _new_ commit that says \"I reverted this other one\".\n. Closing this, as we're instead going to change `is-active` on every component to be referenced by a variable.\n. The CLI is trying to find the `bundle` command. You should have Ruby on your machine, so run `gem install bundler` and then try again.\n. Hm, we'll look into it. Either way, if it got that far your project is fine. Just run `bundle` inside your project and it will be finished.\n. @cshenry13 Do you mean the contents of the new app's folder is empty?\n. Hm, that would suggest the `git clone` failed, but it should have tossed an error of some kind.\n\nCould you try running `git clone https://github.com/zurb/foundation-apps-template.git myApp` and see if it works? That's the exact command the CLI is running to initially set up the project.\n\nBy the way, we're working on a [big update](https://github.com/zurb/foundation-cli/pull/6) to the CLI which will drastically improve error-handling, so working through these errors is super helpful :)\n\n**Edit:** And for reference, this is the entire manual install process:\n\n```\ngit clone https://github.com/zurb/foundation-apps-template.git myApp\ncd myApp\nnpm install\nbower install\nbundle\nnpm start\n```\n. Alright, looks like it's an issue with your machine's Git installation then. If you Google that error there are a few Stack Overflow discussions with possible fixes.\n. @iamontheinet @bclinkinbeard Have y'alls had the time to figure out the issue with your installs? One possibility is that Bundler is failing because it needs admin privileges. So if it fails on line 141 again, try running `bundle` manually, and if that fails, run `sudo bundle` instead. Some environments require admin privileges to install gems.\n. @anevaude Strange, do you see the steps underneath `\"Installing dependencies...\"`, like `npm => bower => bundler`?\n\n`npm install` would be the first command it's running, so it must be freezing there.\n. @spsaucier Ah yeah, that would be an issue. We should be able to force each install command to be non-interactive.\n\nWhen you did a manual install, did you ever need to use `sudo`?\n. @spsaucier Hmm, well maybe Bower was the only issue. Did you get hangups in any other step of the process when using `foundation-apps new`, like the `npm` step?\n. @spsaucier Hm, alrighty then. We're working on [some upgrades](https://github.com/zurb/foundation-cli/pull/6) to the CLI, the last thing we're doing is some Windows testing. I'll add a note to make NPM and Bower noninteractive.\n. Awesome! Happy to help. :)\n. Looks good, so if you write `@include breakpoint(xxlarge only)` and `xxlarge` is the last breakpoint in your list, the output should just be `@media screen and (min-width: 120em)`, right?\n\n**Edit:** Tested myself, indeed that's what it does. Thanks!\n. We're in talks with a CDN right now; the plan is to try and get something up tomorrow, after we tag a 1.0.1 release.\n. #463 addresses this. We'd like it in the codebase for version 1.1.\n. What browser and OS are you seeing it in?\n. @AntJanus That sounds good, since the user doesn't really need to interact with an element while it's moving anyway. You could add that class to the motion of `_motion.scss`.\n. Relative positioning is necessary to position a panel, because they use `position: absolute`. That doesn't mean _every_ block needs relative positioning though, as that would cause weird issues.\n. This is an older issue, but we think it's been resolved, partially through moving the HTML of the panels to the right position in the markup: 6aed7d5e654daa5a11e82a89f59ebd406c49e2a1\n\nIf you want panels to overlap a grid element, the panels should be _siblings_ of the grid block, not _inside_ the grid block. This was causing a flicker on some platforms; I saw it on iOS specifically before this fix.\n\nIf you see anything else odd let us know.\n. #312 should fix this; it was an issue with the capitalization of folders.\n. We just fixed the capitalization issue with the `docs` folder (#312) so this shouldn't be a problem anymore. You may need to delete your repo and re-clone it, though.\n. Go for it! I'll make sure everyone sitting around me knows :)\n. @mrsafraz It doesn't, all of the Apps-specific stuff is in the same package for now.\n\nWe've had some internal conversations about this, and if we decide to segment the libraries it likely won't be until a version 2. Mainly we'd need to know that there's a group of folks willing to dedicate time to maintaining ports of the framework, so we could potentially have versions for Angular, Ember, Durandal, etc. That will give us extra incentive to split our codebase in two.\n\nFor now, we just recommend folks include the Bower package and ignore the JavaScript files in there. Where we can we'll see about keeping the Sass flexible enough to work with other frameworks.\n. @mrsafraz When you have something good to show, put it on GitHub and we can feature it! We're looking to promote ports of the framework to other SPA tools.\n. @mrsafraz Those view animations are super slick. That's something built into Durandal?\n. Ah okay. Just in general though the act of view transitioning seems to work really well. UI Router doesn't really do it out of the box, and we've had a lot of... _fun_ trying to make it work without any visual bugs.\n. So from the Sass end, the main hassle is getting the codebase to where it supports the `ng-enter`-style transitions and the class-based transitions, ideally without a ton of code bloat. Each style has a setup class and a transition class, but they don't work the same.\n\nWith `ng-enter`, you define the transition on the setup class; with `*-add`, you define the transition on the finishing class. So it's not as easy as just adding a comma to insert support for `-add` and `-add-active`, but I think there's still a way.\n. @stryju We won't need to change any styles, really, just class output, but that's what's tricky. Ideally we don't have to refactor the Sass a ton. Although i guess there are only five transition mixins right now.\n. Alright, [here's](http://sassmeister.com/gist/f556a36a95f4ea1ed6c7) roughly what the Sass would look like. And I think that's properly following the unique rules of both animation styles.\n- `ng-enter` gets transition definitions and the \"before\" state.\n- `ng-enter-active` gets the \"after\" state.\n- `*-add` gets a `0s` transition and the \"before\" state.\n- `*-add-active` gets transition definitions and the \"after\" state.\n\nThe final code would use `@content` instead of `@extend`.\n. @AntJanus You can use [this code](http://sassmeister.com/gist/f556a36a95f4ea1ed6c7) which has an example `fadeIn` that should work with `ng-enter` and `-add`. What I wasn't sure about is if there's an opposite of `-add`, or if you use `-add` in both directions, in and out.\n. Yep, that should be a `font-size` property, good catch.\n. I think that's an issue with Autoprefixer, but I'm not getting the same error on a fresh clone. We'll look into it, though.\n. A few of us have been getting intermittent errors with Autoprefixer. Sometimes Autoprefixer tries to parse raw Sass files instead of compiled CSS, and if it does it'll freak out.\n\nMaybe it happens if Sass encounters an error, so instead of piping CSS to Autoprefixer it pipes Sass files? I'm not totally sure how that specific plugin works.\n\nEither way, if you keep having issues let us know. At the moment we aren't seeing any errors with compiling the docs.\n. @etcook This is a fun bug. Go into the Gulpfile and comment out the lines that run Autoprefixer.\n\n``` js\n// Compile stylesheets with Ruby Sass\ngulp.task('sass', function() {\n  return sass('docs/assets/scss/', {\n      loadPath: ['scss'],\n      style: 'nested',\n      bundleExec: true\n    })\n    .on('error', function(err) {\n      console.log(err.message);\n    })\n    // .pipe(autoprefixer({\n    //   browsers: ['last 2 versions', 'ie 10']\n    // }))\n    .pipe(gulp.dest('./build/assets/css/'));\n});\n```\n\nNow run `npm start` and let it compile\u2014it will run fine. Now quit the process, _uncomment_ those lines, and run `npm start` again. It will magically work this time. We're not really sure why.\n. @etcook I think it's an issue with Sass sourcemap files being piped to the `autoprefixer()` function, but I'm not sure why it only sometimes happens.\n. The `primary` class is just for color scheming (it uses the `$primary-color` variable as a base), it doesn't mean \"primary\" as in \"main\". Also, in this case, there shouldn't be any classes in the mixin itself, only in the CSS output at the bottom.\n\nIt was sort of a coin toss for us if menu bar should have a bottom margin or not. There are plenty of cases where you don't want a margin on it, like if it's being used as a toolbar, but if it's being used inline, or in a sidebar with more content, you'd want that spacing at the bottom. We could look again at just making it `margin: 0` by default.\n. If you're using the most recent build of the template stack, which defines all import paths near the top of the file, you can fix this by swapping the two paths in the `sassPaths` variable so they look like this:\n\n``` scss\n// Line 26\nvar sassPaths = [\n  'client/assets/scss',\n  'bower_components/foundation-apps/scss'\n];\n```\n\nThis will grab the `_settings.scss` in your `client` folder instead of `bower_components`. I [made the change](https://github.com/zurb/foundation-apps-template/commit/d54dba07f3c13e53fb896787a2b33d4b73616ce9) in the template stack as well.\n\nThe next version of the CLI will automatically copy the settings file out of the Bower package into your client folder when a new project is made.\n. This change to the detached off-canvas mixin should fix the issue:\n\n``` scss\n@mixin off-canvas-detached {\n  z-index: 0;\n  box-shadow: none;\n  // Hide the menu when it's not active\n  display: none;\n\n  &, &.is-active {\n    transform: none;\n    // Show the menu when it's active\n    display: block;\n  }\n\n  & ~ #{$offcanvas-frame-selector} {\n    z-index: 1;\n    box-shadow: 0 0 15px rgba(0,0,0,0.5);\n  }\n}\n```\n\nI tried adding the `detached` class to one of the sample off-canvas menus in the docs, but the `is-active` class was always there for some reason, even when the menu wasn't supposed to be open.\n. _Actually_, the method above should work, but slightly different.\n\nThe issue is that a detached off-canvas doesn't hide off the screen when it isn't active; it just sits there. This means if you open a _different_ off-canvas on another side of the screen, you'll see that first detached menu just sitting there. We don't want that.\n\nI tried making the detached menu `display: none`, and then switching to `display: block` when it's active. This sort of works, because it means the detached menu is hidden until it's made active, and since it doesn't ever animate, flipping from `none` to `block` instantly is okay.\n\nHowever, when you go to close the detached menu, it disappears instantly. This is because the `is-active` class is being removed as the app frame starts to slide back into place.\n\nThere's probably a few ways to solve the problem, but it would need to happen with JavaScript. There's two ways I can think to do it:\n- When a detached off-canvas menu is closing, wait until the `grid-frame` is done transitioning to hide the menu.\n- When an off-canvas menu is open, force all the others to hide.\n. _Actually again_, @jeaniec and I were working on a JS-based solution when we came up with something simpler: just make the z-index of detached menus lower than the others. That covers them up. Problem solved!\n. Closing in favor of #386.\n. Far easier said than done :) We don't currently have any plans to port Foundation for Apps to other JavaScript frameworks, but we'll [certainly support anyone](https://github.com/zurb/foundation-apps/wiki/Contributing) in the community who wants to write a port.\n\nIt's also possible to [use Angular and Meteor in tandem](https://github.com/Urigo/angular-meteor), so there's probably a way to put Meteor on top of our code, instead of actually porting everything.\n. Ah, the functions aren't yet imported when the settings file is being processed. We'll put in a fix, but you can work around it for now by importing the functions file before your settings file:\n\n``` scss\n@import \"helpers/functions\";\n@import \"settings\";\n@import \"foundation\";\n```\n. This commit fixes the issue: 339f164ea4ac030ad4dd12dfbe2c02085e7b83df\n. We replaced the string interpolation with a mixin. It works like this:\n\n``` scss\n@include breakpoint(medium) {\n  /* ... */\n}\n\n@include breakpoint(large only) {\n  /* ... */\n}\n```\n\nThe list of breakpoints are in the `$breakpoints` variable in your settings file. This mixin will also take pixel and em values as well.\n\n``` scss\n@include breakpoint(200px) {\n  /* ... */\n}\n```\n. Very good point. I went ahead and [replaced](https://github.com/zurb/foundation-apps-template/commit/7cea3ad1794eae0f095dbc3099f933297d6c5d00) the `href` attributes with `ui-sref`, to emphasize that it's the actual way links are written when using Angular + UI Router.\n\nWe won't add more pages most likely, because the template stack should be as stripped down as possible. If you had pages for about, news, contact, etc., you'd just end up deleting or renaming them for every new project.\n. Hey, sorry for getting to this late. We definitely want to start using the template cache, since we're already running into problems with the hardcoded template paths we have, and it would also just make distributing our code easier.\n\nWe're trying to get 1.0.3 out the door today, but it would be nice to have this functionality in place for our next version, which will probably be 1.1. 1.0.3 will introduce a `dist` folder into the Bower package which has compiled CSS and JavaScript. For future versions it would make sense for the templates file to be in there as well.\n\nSince the Gulpfile has been refactored quite a bit recently, would you like to re-do your PR against the new codebase? And thanks for your work! :)\n. Awesome, thank you. You'll see that the new Gulpfile has a task called `deploy:dist`, which generates compiled assets for Bower and npm.\n. Sounds like we can keep the functionality as it is, but add information about the directive to the documentation.\n. Yep, looks like `$small-font-color` wasn't being applied to the `small` selector.\n. We made the call to not include `radius` and `rounded` classes in Foundation for Apps, and it's possible we'll do the same thing for version 6 of Foundation for Sites. It does make it look like the two frameworks are out of sync in some ways, but Foundation 5 is also more than a year old, so there were plenty of new ideas we've had that are being implemented first here, and eventually will with Sites as well.\n\nThe reason we got rid of the `radius` and `rounded` classes is because they serve a purpose better filled by Sass. Most components, including buttons, have a border radius variable, which allows you to globally modify the radius on that component. This is a much easier and more sustainable approach than adding `radius` and `rounded` to every button. Coloring and sizing also change the meaning and purpose of your buttons; the border radius tends to be just a stylistic choice.\n. The standalone framework files (all Sass, JS, and Iconic assets) are distributed through Bower and NPM. If you want to use our components in a Rails project, you'll want to add the framework to your asset pipeline. There are a few tools that connect Bower and Rails, including [rails-assets](https://github.com/rails-assets/rails-assets/) and [bower-rails](https://github.com/42dev/bower-rails).\n. Sorry, I know this is an older issue, but the markup for this panel is incorrect. Panels should never go inside `.grid-content` elements; they should always anchor to a `.grid-block` element instead. This means a panel and the content it overlaps are sibling elements in the DOM.\n\nHere's how to fix your example:\n\n``` html\n<div class='grid-block'>\n  <!-- Moved the panel up one level -->\n  <zf-panel id='bp' position='bottom'>\n    <a zf-close='' class='close-button'>&times;</a>\n    panel content\n  </zf-panel>\n  <!-- The sidebar and main content are siblings of the panel -->\n  <div class='grid-content'>sidebar</div>\n  <div class='small-8 grid-content'>\n    <a class='button' zf-toggle='bp'>Panel</a>\n  </div>\n</div>\n```\n\nI added a section to the panel documentation that clarifies this rule.\n. @mikehuebner Yep, that's it! To expand on what @AntJanus said, Gulp, Grunt, et al. are build tools that are meant to be run in a development environment only, and are primarily used to deliver static code. The servers that you can run with Gulp and Grunt (and even frameworks like Django and Rails) are meant for convenience and testing only, not production.\n\nYou could automate this process in Gulp by creating a deployment task that uses rsync, FTP, SSH, etc. to upload the `build` folder for you. [We do this](https://github.com/zurb/foundation-apps/blob/ff33e2da2e0413d4ec9d5fade525c840094e0444/gulpfile.js#L277) to deploy the documentation.\n. We have a refactor of the animation libraries in progress (#386) so we'll make sure this issue is covered there.\n. We merged in #386, which does address the scenario where the user clicks to another state mid-transition. The other two states will disappear, and the new one will animate in.\n\nThese changes will be in for version 1.1 of the framework, which we're hoping to have out by the end of the week.\n. Try running `npm start build` manually in your command line and see if that works. Occasionally we've had issues where, for some reason, the user's machine freaks out if you add more arguments after `npm start`.\n. Yep, it looks like version 2.0.0 of npm introduced that change. I added a remark to the Install & Update page advising users to update their system's npm if they aren't installing a new copy of Node.\n. Awesome, glad to hear it!\n. You shouldn't have to copy those files yourself out of `bower_components`; Gulp does that for you. However, there was an issue with the template stack's `Gulpfile` not properly copying HTML partials. [This pull request](https://github.com/zurb/foundation-apps-template/pull/18/files) fixed the problem; if you look at how the `Gulpfile` was changed, you can fix the issue in your project.\n. The first issue is one of selector specificity, so adding a bunch of `>`s should help, and won't break any existing code. We had this issue with another component where `is-active` was cascading down too far.\n. Going to close this, if the problem still persists let us know. :)\n. It's a known issue with Orbit, our slider plugin that comes with Foundation 5.\n. @AntJanus We can take a look on our end. As for the height thing, in most cases, the view will be a flex child, which means its width and height are automatically calculated. The whole point of this framework is that it's responsive, so if you're setting a fixed height you're probably gonna have a bad time. Although I could see people using for nested views.\n. I pushed a small update to the CSS for transitioning views, and it seems to work pretty well, although I didn't test it extensively. If you pull down the branch and click between the Install/Update and Sass pages, you can see it working.\n\nI'm not sure if these updates cover it, but the module needs to account for any combination of views missing and in/out animation. Like this:\n\n| Old View | New View | Result |\n| --- | --- | --- |\n| has out | has in | Both animate at the same time |\n| has out | no in | New view immediately appears, old view animates out |\n|  |  | Old view gets higher z-index |\n| no out | has in | New view animates in, old view immediately disappears |\n|  |  | New view gets higher z-index |\n| no out | no in | Both swap immediately |\n\nIn the last use case, the module shouldn't do _any_ of this logic, like adding `position: absolute` classes and so on. That should all be bypassed so the views animate immediately. It seems like right now there's a small delay because all of the same stuff is happening even though it's not needed.\n. Just hacked together a basic test app for the motion stuff. It has four views, which have every possible combination of in/out animations, so you can test, say, what happens if an exiting view has an out animation, but the new view has no in animation. Run `gulp test:motion` to turn it on.\n. If you're adding the components to your own stack, you need to make sure the HTML templates for each directive are being picked up by Angular. In our [template stack](https://github.com/zurb/foundation-apps-template), we copy the partials from `bower_components/foundation-apps/js/angular/components/**/*.html` to `build/components`.\n. Going to close this, let me know if the above was able to solve your issue, or if you still have problems.\n. @gjungb @zavan Yep, until we have a templates JavaScript file in a stable version, you'll have to use a task runner to pull the templates out of the framework files. Below is an example of using the [ng-html2js](https://www.npmjs.com/package/ng-html2js) library with Gulp. There's a Grunt version of the plugin as well.\n\n``` js\nvar partials = gulp.src('bower_components/js/angular/components/**/*.html')\n  .pipe($.ngHtml2js({\n    prefix: 'components/',\n    moduleName: 'foundation',\n    declareModule: false\n  }))\n  .pipe($.concat('templates.js'))\n  .pipe($.uglify())\n  .pipe(gulp.dest('./dist/js'));\n```\n. @zavan Glad to hear it! If you make anything interesting with it, let us know. We're building some stuff internally (even for clients now!) so we're learning a lot about how fully-responsive web apps would work. and we'd love to hear what design/technical challenges other developers are running into.\n. Nice! We'd like to see this functionality added for notifications too, if possible. Right now there are programmatic notifications, but you need an empty element with the `zf-notification-set` directive to make them work.\n. :+1: Awesome! We'll take a look!\n. Looks good! A few comments:\n- All three of the stagger mixins could likely be combined into one, unless you think there's a chance any of the three would be used in another context. But as it is they're fairly tightly coupled anyway.\n- It may not be necessary to call `stagger()` inside each motion mixin, as the stagger functionality exists independent of whatever motion is happening. Instead you could call `stagger()` three times at the bottom of the file where all the CSS classes are, once for each stagger length.\n. Awesome work, James! :) We can include it in version 1.1.\n. Merge'd. 9fc2f16721ed47a19a919c6ae0565d0d633a575d\n. The classes that apply those visual styles to the grid examples were overriding the offset class, so I fixed that. The actual grid won't have that issue under normal circumstances.\n. This error doesn't seem to be cropping up anymore, but if you have any more issues compiling the docs locally, let us know.\n. This is the intended behavior, although you could make the case that it doesn't need to be full height. Full width seems sensible, however. Modals are kind of like grid rows in that they have a max width.\n. [This commit](75ec5dacfdc8c2c440ed6576fc1c413a434a4014) adds a `.dialog` class which turns off the full-bleed functionality of mobile modals.\n. As a temporary workaround, you can comment out the uglify step of the JavaScript build process. It's in the `uglify` task in `Gulpfile.js`:\n\n``` js\ngulp.src(foundationJS)\n    // .pipe(uglify({\n    //   beautify: true,\n    //   mangle: false\n    // }).on('error', function(e) {\n    //   console.log(e);\n    // }))\n    .pipe(concat('foundation.js'))\n    .pipe(gulp.dest('./build/assets/js/'))\n  ;\n```\n\nBut, we can look into modifying the Gulpfile to have separate processes for development and production. I'll add it to our internal roadmap.\n. You might be interested in [gulp-if](https://github.com/robrich/gulp-if), which can conditionally run files through a pipe. So only pipe to `uglify()` if `production = true` or something like that.\n. @etcook Oh! Sorry about that, skipped right over it when I loaded the page. But yes, we'd be interested in seeing what that would look like. A `production` flag should compress the Sass as well, while keeping it expanded while in development. The flag should probably be `false` by default, so that when you download the template you're already in development mode.\n. Just got this implemented in the template project, using the code @etcook wrote. [Check it out!](https://github.com/zurb/foundation-apps-template/commit/1a9f6a7fed9ac68f753d6a7e98aada88b0e51b24)\n\nAdding the `--production` flag to `gulp` or `gulp build` will enable compressed mode in node-sass, and Uglify for JavaScript.\n. Right when the framework launched we were seeing a bizarre bug in just IE10/11 where, when `autoscroll` was on the view container, the entire left-hand sidebar was misaligned. And when you took it off, everything went back to normal.\n\nBut I tried adding the attribute back and everything works fine now. Not sure what that was! So we can definitely merge this.\n. We closed out the PR related to this issue last week; you can read [my comment](https://github.com/zurb/foundation-apps-template/pull/23#issuecomment-95379959) on why we closed it. Basically we're trying to keep the template stack as slim on features as possible, to reduce the number of moving parts. It's meant to be a baseline that more experienced users can build on.\n. No, pedantry is great :) Thanks for catching it!\n. Good catch, they should all be singular.\n. The issue is trying to interconnect the components when you don't know what the class names could be. Because we allow the user to write their own class names with the mixins, you don't know if that button will actually be `.button`, or `.custom-button-class` or something else.\n\nIn this specific case, it's probably fine to modify the selector to also look for `input[type=\"submit\"]`, `input[type=\"button\"]`, and `button` as well, because the use case of the `.inline-label` element is _very_ specific\u2014it's meant for inputs, buttons, labels, and nothing else.\n. Yeah, button groups would need updating, and there may be a few other edge cases as well. Foundation 5 has a few blind spots like that actually. It's _really_ hard sometimes to combine UI components when you don't know what their class name is ;)\n\nIconic is a unique case because the JavaScript always adds the `.iconic` class, so we don't have to worry about that one changing.\n. You can use any existing Angular library with Foundation for Apps. As you've figured out, normal JavaScript libraries don't work because single-page app frameworks are always swapping in and out HTML. Most plugins are designed to be initialized once, when the page loads and all the HTML is assumed to be there.\n\nThe Angular UI project has a lot of good libraries, including a [Google Maps](http://angular-ui.github.io/angular-google-maps/#!/) one you may be interested in.\n. The CSS classes are written to use Angular's [animation module](https://docs.angularjs.org/guide/animations). So to make the animations work, you either need to use a directive that supports animation (like `ng-show`, `ng-repeat`, etc.) or use the `$animate` service to trigger them yourself.\n. @saviour123 There aren't any tutorials that I know of specifically about Foundation for Apps's motion library, but our [documentation](http://foundation.zurb.com/apps/docs/#!/motion-ui) does a good job of explaining all of the key pieces: directive/view animation and using the Sass mixins.\n\nEventually the [new Motion UI](https://github.com/zurb/motion-ui) library will be plugged into this one. We'll likely do that at 1.2 and then remove the existing transition mixins for 1.3.\n. Closing in favor of #417.\n. Take a look at [this CSS Tricks article](http://css-tricks.com/restart-css-animation/), which gets into a few methods for restarting animations. The two solutions it references are:\n1. **Remove the animation class, _force a reflow_, and then re-add the class.** If you just remove the class and then immediately re-add it, the browser doesn't perceive it as an actual change in state. There are a few ways to do this\u2014the one referenced in the article is `element.offsetWidth = element.offsetWidth;`.\n2. **Reset the play state.** The CSS property is called `animation-play-state`, and the JavaScript version is `animationPlayState`. Change it to `paused`, and then immediately change it to `running`, and the animation will play again. Of course, the property is vendor prefixed, so you'll need to modify `webkitAnimationPlayState` and so on.\n\nHope that helps!\n. There is an `infinite` class you can apply to an animating element, and that will make the animation play forever. It seemed like your use case, though, was needing to get the animation to play again at some point. But, if you just need the animation to play forever without stopping, you can just add the class `infinite`.\n. Merged #421 which fixes this.\n. Like the others have said, this doesn't seem to be an issue with our Bower package. Stack Overflow or Super User should be better equipped to help you :)\n. The template stack doesn't come with any unit tests; are you writing your own?\n. Hm, could you post the tests you've written?\n. Thanks for the repo link; taking a look at this today.\n. Well, I got a totally different set of errors when I tried to run the tests, but either way I think I might know the problem.\n\nWhen the Sass is compiled to CSS, it drops the media query list into a property with a `meta` selector. The JavaScript then injects a `<meta>` tag with the same class and parses the value. If the test suite doesn't have a finished CSS file to reference, it can't read those values, which is why the `mediaQueries` object comes up null.\n. You'd need to compile the Sass files to CSS so that the test browser can see them.\n\nThis is the error I get. I think it's happening because the Gulp plugin that generates routes isn't being run, so the `foundationRoutes` variable is never being created.\n\n```\nChrome 40.0.2214 (Mac OS X 10.10.1) AboutController should create \"phones\" model with 3 phones FAILED\n    Error: [$injector:modulerr] Failed to instantiate module wxPortal due to:\n    Error: [$injector:modulerr] Failed to instantiate module foundation.dynamicRouting due to:\n    ReferenceError: foundationRoutes is not defined\n```\n. If needed, you can also get away with less than that. This is the only line you need:\n\n``` css\nmeta.foundation-mq {\n  font-family: \"small=0&medium=40rem&large=75rem&xlarge=90rem&xxlarge=120rem\"; }\n```\n\nThis style could also be added programmatically before Foundation initializes, using the [CSSStyleSheet.insertRule()](https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet/insertRule) method.\n. True that; if you want to put HTML examples in a `<code>` element, you need to escape the angle brackets. So `<div>` becomes `&lt;div&gt;`.\n\nFor code blocks, our documentation uses an Angular port of highlight.js. It handles the escaping and syntax highlighting for us.\n. 1.0.2 is the newest version of the framework. We're looking to put another version out next week.\n. We can add those missing files to the `bower.json`. Should that property also include every Sass file?\n. @joshuajohnson814 I agree, and in fact it shouldn't be there anymore. Our documentation uses a different entry file, and the template stack also uses it's own. If you're incorporating the source files into your own build process, that file is unnecessary, although it does serve as a useful template.\n\nAs for including distribution files, we can look at it for the next patch. We're considering including a `dist` folder on the same repo, for this and perhaps also Foundation for Sites, to avoid the hassle of having a separate repo just for the Bower install.\n. @joshuajohnson814 The main issue we've had with the file is that some folks assumed it was a module to be included as a dependency, when it's just meant to be boilerplate. Also, since it's in the `bower_components` folder, which means it probably isn't in version control, you can't edit it.\n\n_But_ we haven't heard anything recently, so we can let it sit for now :)\n. So for JavaScript you just add every file, but how does it work with Sass files? I was looking at wiredep (which is what @laurent-le-graverend is using) but I couldn't figure out exactly how it works with Sass. Since Sass files are pre-compiled, it's not like you're concatenating them all together; you just need an import path. So I'm wondering if the `main` property of `bower.json` needs every Sass file or just the entry point.\n. I see, so it's not for source files. Thanks! We'll set up a `dist` folder for the next patch.\n. Alright, this commit adds a Gulp task to create a `dist` folder with minified and un-minified CSS and JS: e6aab4e097abafce1ccce6586f0bd5d7726dde97\n\nAnd this commit is me forgetting to update the `main` entry in `bower.json` ;) f5e33b0d3abf8d3817555c7b5a7361902794f1a7\n\nWe're trying to put out 1.0.3 this week, which will be the first version with the `dist` folder.\n. @joshuajohnson814 Ah, okay. In that case, what would be the best way to package the other dependencies for distribution? Maybe just bundle all of the external libraries into one file?\n\nObviously wiredep helps with this dependency resolution, but not everyone will be using that. Some folks will just want to drop in finished files to get going.\n. @laurent-le-graverend The way you described module loading already works with our current file structure. Originally you had to add each UI component's module separately, but in version 1.0.2 we added a `foundation` module which is just a shorthand for all of the UI components.\n\nBut as far as the compilation step, it sounds like the dist file should just be _our_ framework files, and not any of the five or so libraries we rely on. So we'll make that change. (This also brings into stark relief how many dependencies this library has right now. Maybe for version 2 we'll look at separating modules that have dependencies, like our touch stuff.)\n\nAs far as using template caching, we've gotten that request before, so we'll look into it.\n. Merged in #433 which addresses this. Thanks for your help, friends!\n. Material Design is a very opinionated style guide, which is good for what it's doing, but it's not the role of our framework to make all of those decisions related to layout, hierarchy, and styling. Because of that, we won't be skinning any of the Foundation frameworks to look like Material.\n\nHowever, if _you_ would like to write a Material theme and open source it, we can promote it for you :)\n. Definitely, we need this functionality for off-canvas and panels.\n. @maxcook We'd like to do this and the darkened overlay, but we haven't done any work on it yet. We'd certainly welcome a pull request if anyone wants to take a crack at it.\n\n@soumak77 We have `zfClosable`, would it be possible to bake any hooks into that?\n. What you're thinking of is the [template stack](https://github.com/zurb/foundation-apps-template), which is a separate repo. However, we're trying to keep the build process on that thing as slim as possible, or at least as slim as a complete build process can be. With that in mind, we don't want to add any more plugins to that thing at the moment.\n\nThat being said, _this_ repo would certainly benefit from having linters to check the Sass and JavaScript. I started fixing up the Sass to conform to one standard, but I haven't finished it yet.\n. @escapedcat Right now we don't have a good way to update the Gulpfile. The problem is, if you've changed it at all, how are we supposed to effectively update it? The hope was to get the framework and stack to the point that we don't need to update the Gulpfile for a while.\n\nThis template is significantly more complex than the ones we use for Foundation 5, but for better or worse it kinda has to be.\n\nIf a patch ever mandates a change in the Gulpfile (which we'll try hard to avoid going forward), the changelog will include instructions on how to update an existing project.\n. Hey, thanks for putting this together. One issue is that we're deploying files to a CDN for use in CodePens and such, and those files should probably include all of the JavaScript in one big file, while the `dist` folder should be just the framework files. I can implement that myself, though.\n. After doing some research, we found that the solution might have to be iPad-specific CSS that uses `calc()` to cut those extra pixels off the height of the grid frame. So, hooray for user agent sniffing?\n. #456 could solve this, basically using `height: 100%` instead of `height: 100vh` to size things. It needs more testing, though.\n. I've got a new PR open (#603) which appears to be a better solution.\n\nWe _will_ make iOS play nice with web apps.\n. Last solution, promise! bc01826c7bd1eb8e4ed6fb3bf293fcb0aebcaf9f fixes this issue. Tested in iOS 7 and 8 on the iPhone and iPad, and it works great.\n. Could you use the plain `justify-content` property instead? Using a grid mixin here means the menu bar would have a dependency on the grid component, and ideally no component is dependent on another (unless it's a sub-component, like button group).\n. Ah yeah, it's a typo in the `node-sass` task. Changing [this line](https://github.com/zurb/foundation-apps/blob/18b168b9f1f9c74aa4a25b65cc421722505eaacf/gulpfile.js#L150) of the code will fix it. `autoprefixer` should be `$.autoprefixer`.\n. Thanks for making the changes. :)\n. As of Firefox 35 this doesn't appear to be an issue anymore. Since Firefox auto-updates, this shouldn't be a huge problem.\n. Alright, fixed it by converting the hex value to an RGB one on the fly.\n. Do these sorts of techniques negatively affect the cascade at all?\n. In theory any of the basic Sites components that don't require any JavaScript will work just fine, since it's just CSS. There's also an [Angular library](http://pineconellc.github.io/angular-foundation/) for the Foundation 5 JS plugins, written as Angular directives.\n\nBut yeah, we're definitely looking into ways to make the components more consistent between the two frameworks.\n. Obviously components with the same names conflict (labels, tabs, etc.), but there is one example of a component with the same name but two very different purposes in the two frameworks: panels. In Sites, `.panel` is just a colored box, but in Apps, it's the off-canvas component.\n\nTo get around this, we're looking for a name to replace \"panel\" in the next version of Sites. It's probably going to be \"callout\", since we're also combining panels and alerts into one CSS component.\n. Containers should be nested inside content blocks. Using your existing code, I can just swap out the first `grid-block` and make it `grid-content` instead. The two are totally interchangeable.\n\n``` html\n<body>\n<div class=\"grid-frame vertical\">\n  <div class=\"grid-content\" style=\"background-color: green;\">\n    <div class=\"grid-container\">\n      <div class=\"grid-block\" style=\"background-color: yellow;\">\n        Yellow\n      </div>\n      <div class=\"grid-block\" style=\"background-color: blue;\">\n        Blue\n      </div>\n    </div>\n  </div>\n  <div class=\"grid-block\" style=\"background-color: black;\">\n    <div class=\"grid-container\">\n      <div class=\"grid-block\" style=\"background-color: yellow;\">\n        Yellow\n      </div>\n      <div class=\"grid-block\" style=\"background-color: blue;\">\n        Blue\n      </div>\n    </div>\n  </div>\n</body>\n```\n\nSince `grid-block` is a flex container, it's children don't behave like normal flow content. `grid-content` is _not_ a flex container, which means its children will function normally. `grid-container` is just a `margin: 0 auto;` container with a maximum width, so it has to be inside `grid-content` to function properly.\n. We're working on an official tutorial for the framework, which clarifies these concepts, and then some of that should make it back into the main documentation.\n\nThis grid is a complex beast, so questions like this are very helpful to us :) Thanks!\n. Going to test this and merge it today for 1.2.\n. We have the pieces in place, so for future releases the compiled CSS and JS will be available in a `dist` directory of the Bower folder. (It's [here](https://github.com/zurb/foundation-apps/blob/master/gulpfile.js#L316) in the Gulpfile.) We're planning on releasing version 1.0.3 by the end of the week, which will be the first version of the framework to include distribution files.\n\nIn the mean time, the source Sass files are available in the Bower package. A good number of them, most importantly the Flexbox grid, can be used without any JavaScript.\n. We have a [contributing document](https://github.com/zurb/foundation-apps/blob/master/CONTRIBUTING.md) which has some recommendations for how to submit issues and pull requests. We don't currently have any Angular-specific guidelines, though. Was there a question you had on how to modify the codebase?\n. We really need to set up linters for this codebase, we just haven't gotten to it yet. The broad strokes are already there; all of our Angular modules are written in the same style, so following those general conventions is a good start. As far as specifics, hopefully we can get JSHint set up at some point, but in the mean time, just try to match our coding style as best you can. If we think something is suspect in a PR, we'll point it out :)\n. They'll work just fine! Since there's no JavaScript component to them, like with Iconic, you can just drop in the Sass and the icon fonts no problem.\n. After some internal chit-chat we decided to leave this as-is, so you can style a modal overlay and the modal itself with one class. This commit updates the documentation to explain what's up: 96e80a59b9f45c06c98f54a51cb34d8c92b0f15e\n. Closing in favor of #603.\n. Menu bar includes an `.is-active` class which can highlight an active item.\n\nYou can also use `ui-sref-active` to apply a class when a specific state is the current one.\n\n``` html\n<ul class=\"menu-bar\">\n  <li ui-sref-active=\"is-active\"><a ui-sref=\"home\">Home</a></li>\n  <li ui-sref-active=\"is-active\"><a ui-sref=\"about\">About</a></li>\n</ul>\n```\n. The off-canvas menu has no built-in styles; it's just an empty box. If you're nesting a vertical menu bar inside of it, you can do what I described above. If you have your own custom component, you can use `ui-sref-active` and make your own custom active state class.\n. @akiran, I think `ui-sref-active` would cover the use-case you're describing, where you have a menu and the current item (the current view) is highlighted. If it's not a state-specific thing you're targeting, you can still use the `is-active` class to highlight things based on other criteria.\n\nLet us know if you have any more questions :)\n. For sure, I'm going to write one today. Here's a very brief overview.\n\n``` scss\n// You can use any named breakpoint in the $breakpoints map\n@include breakpoint(small) { } // Small and up\n@include breakpoint(medium only) { }\n@include breakpoint(medium down) { }\n\n// You can also use px, rem, or em values, which are all converted to em\n@include breakpoint(400px) { }\n@include breakpoint(60rem down) { }\n```\n\nAs for your grid issues, what version of iOS are you on? We just had a round of QA for iOS 7 and 8, and everything seemed fine.\n. About half of the components, most importantly the grid, will work without Angular or even JavaScript. So you could drop in the CSS for the basic components and it would work fine.\n\nIt's also possible to use Angular without any of the routing stuff, which is to say you can use Angular for things that aren't single-page apps. If you want to keep your backend largely the same, where ASP.Net is generating and serving HTML to the client, that's the way to go.\n\nIf you still wanted the single-page app feel, you'd have to do a fair amount of refactoring on the back-end. To make a SPA framework work with APS.Net, Rails, etc., the server-side framework has to essentially become an API. Because Angular does all of the templating work, the server then just serves up data as JSON, which the client compiles into HTML.\n. Here's the page: http://foundation.zurb.com/apps/docs/#!/media-queries\n. We've talked about it, we just need to decide how to implement it. We don't have access to jQuery's `slideToggle` in Angular, and animating `max-height` isn't a sustainable way to do it.\n\nMost likely we'll need to write our own thing to do it properly.\n. What's the purpose of running the uncompressed file through css-condense? Is it just for stripping out comments?\n. Actually, I'd like the CSS-style comments to be stripped out as well if that's possible. We're looking to get into automatically-generated documentation, and for doing HTML-specific documentation we might use [Hologram](https://github.com/trulia/hologram), which requires you to use CSS-style comments to enclose documentation.\n\nI was actually looking for a CSS minifying tool that would _just_ strip out comments and not do any other compression. Sass won't remove them unless it's also compressing the file.\n. Are you trying to write the theme just with the settings variables, or are you adding your own CSS overrides as well?\n. Totally! We'll look into it.\n. Awesome, thank you!\n\nHow do you think we should handle this in the [template stack](https://github.com/zurb/foundation-apps-template)? Ideally the build process on that thing stays as simple as possible, although we're doing a lot of building from source at the moment.\n\nWe can either copy the finished file from `dist`, or add `ng2HtmlJs` to the process. The former is quicker to implement and is one less piece of machinery, but the latter is more customizable.\n\nIn general that's a balancing act we're trying to strike. Like, we could have the template stack just copy all of the compiled files, but then you can't later pick and choose which ones you want to include. On the other hand, if you actually _know_ how this stuff works, you're probably smart enough to just do it yourself. The template stack is meant to be a baseline, and ideally it has as few moving parts as possible, to make it less error-prone and easy for beginners to understand.\n. Every Angular engineer we've talked to before and after this thing came out has asked \"can I just use it in my own project?\" Our template stack is definitely just meant to be a baseline, so maybe in the interest of reducing its complexity we cut out some of the choice. Of course the choice is still _there_, if you know what you're doing. But if you know what you're doing, you might just be ditching our entire build process anyway in favor of your own. If you don't know what you're doing, you're probably designing a prototype, so optimal delivery of files isn't yet a concern.\n. Related: #397\n. Hey, sorry for not getting back to you sooner!\n\nElement queries are definitely interesting, we just need to find the right way to implement them. As far as adding new libraries, we're trying to be really cautious about it right now, since the framework already has seven dependencies. If we add anything new, it probably won't be until a v2, when we can take a step back and figure out what libraries we're using.\n\nI'm going to close this and continue the discussion in #538, since you seem to have honed in on an possible solution.\n. Looks to be a side effect of how our settings parser works, since it prints out each set of variables in the order the files come. Thankfully button group is the only component with a dependency on another component's variables.\n. The container is just meant to center content inside a `grid-content` element. It shouldn't be a flex container, because it's just supposed to contain plain-old flow content. We might need to update the documentation to make this more clear, though.\n\nAn example of its use would be:\n\n``` html\n<div class=\"grid-frame\">\n  <div class=\"grid-content\">\n    <div class=\"grid-container\"></div>\n  </div>\n</div>\n```\n. Yep, that should work. If not, I can try to make a more complete example.\n. Yeah, that's a really tricky thing. We want mixins for all of our components so they'll be more flexible, but at some point you still need to mimic our markup structure to an extent for it to work. This grid in particular is that way because of how flexbox works, and because it's new.\n. We fixed this in 1.0.3 (53d5952802e7d7da667c3fb19f73e0a39bc0591e), so now all `<a>` elements, not just ones with an `href` attribute, get the pointer cursor. Since there are no `href`s in Angular apps, browsers weren't applying the proper cursor to elements that are technically links.\n\nThe templates are all being updated right now, and they'll use the latest version of the framework when they're done.\n. We've gotten a lot of requests to create a datepicker for Foundation for Sites, so for version 6 of that framework we're going to do it, as an external plugin. Once that work is done, we could definitely wrap that functionality in an Angular module.\n. http://caniuse.com/#feat=input-datetime\n. Going to close this as a known feature request. We're working on a date/time picker for Foundation 6, and whatever we come up with there, we could definitely port over to Angular.\n. Nice, thanks for the work!\n. Hey, sorry for getting to this issue late. I tried your second code example verbatim and it worked for me on desktop and on iPad. I also removed all of the JavaScript like you described, and it still works. (Which makes sense, because none of the components you're using have JS elements.) Is it possible you got a Sass error or something?\n. Fixed with this pull request: #478 Sorry for the hassle!\n. Have you written any jQuery code related to panels? If you just remove jQuery, do the animations start working again?\n. Hey guys, sorry for the late response, but let's try to untangle this web of fun. Things that cause panels to unintentionally close are:\n- Having jQuery loaded\n- An element with a transition inside of the panel\n- Nested panels\n\nSeems like the last two happen because `transitionend` bubbles up unintentionally. #547 fixes this, so we'll bring in that change once we've reviewed it. Will that also fix the first issue with jQuery?\n. Alright, luckily this is an easy fix. You're passing the wrong parameter to the `grid-frame()` mixin.\n\n``` scss\n// Wrong\n@include grid-frame(vertical);\n\n// Right\n@include grid-frame($orientation: vertical);\n```\n\nMaking this one change fixes the issue, so the layout looks like the first screenshot, including on the iPad. The documentation was incorrect, as the first parameter of that mixin is `$size`, not `$orientation`. Size shouldn't even be an option, though, since you shouldn't be changing the width or height of the app frame, so we need to refactor that mixin slightly.\n. It's definitely something we should address in more detail. The main points of interest are Angular (IE9+ as of Angular 1.3, which we're using) and flexbox (IE10+), but there are lots of little things in the CSS and JS where we get to cut corners because we're only accounting for modern browsers. Like using modern CSS selectors, or DOM features only in newer browsers.\n\nIn terms of how to detect it, I think flexbox, like you said, is the most obvious way to check for general compatibility. Flexbox support was our original metric for browser support, so once we knew we were cutting IE9 and Android 2 as a result, we just went from there.\n\nPerhaps we could come up with a small, non-Angular script to drop in a Modernizr-like CSS class to detect lack of support.\n\nAnd to your point about separate module support, that's possible right now! Our sample bootstrapping code imports every UI plugin at once with the `foundation` module, but that's just a shorthand to import everything at the same time. You can also import each UI component separately, like `foundation.tabs` or `foundation.accordion`.\n. To come back to this, do you think a CSS class on `<html>` is enough, or would having one of the Foundation services expose an `isCompatible` parameter be more useful? Or both.\n. All of the classes are built using the mixins. Could you give some specific examples of mixins that don't work? I'm also taking a look at your other issue (#482) today, so I'll see what's up there.\n. We're working on improving the grid documentation, and we'll also be releasing a tutorial soon which will describe certain elements of the grid in better detail. If you have any specific feedback or issues with a Sass mixin, let us know in a new issue. :)\n. We've talked about it internally, but it's not of a huge interest to us at the moment. There is a [good Angular module](http://itslenny.github.io/angular-pretty-checkable/), though, that has very similar features to the jQuery one you linked to.\n. Ah, that's a legacy variable and shouldn't be in the codebase anymore. You can control the speed of animations with our built-in classes, or with your own CSS.\n\nWith our classes:\n\n``` html\n<div zf-panel animation-in=\"slideInUp\" class=\"[fast slow]\"></div>\n```\n\nWith your own code:\n\n``` html\n<div zf-panel animation-in=\"slideInUp\" class=\"panel-thing\"></div>\n```\n\n``` scss\n.panel-thing {\n  transition-duration: 500ms;\n}\n```\n. I think I know what you're describing, but there's another use case you might be talking about as well.\n\n`align-items` and `align-self` align elements on the _cross-axis_ of the flex container. So if you have a horizontal grid, your cross-axis goes up and down, and so the `align-` properties shift elements up and down. If you had four elements on your horizontal grid, there's no way to make two stick to the left and two stick to the right. The `justify-content` property controls that behavior, and it can't be set on individual flex children.\n\nI _think_ that's the behavior you're describing. But you're right that we don't currently have an abstraction for the `align-items` and `align-self` properties in the grid.\n. There is, but there are two caveats. [Here's a Codepen](http://codepen.io/gakimball/pen/ZYogmK) that illustrates it.\n\nThe entire container flows as columns, and it's told to wrap, hence `flex-flow: column wrap`. Note the numbering of the items: it goes _vertical_, not _horizontal_. You can't make the HTML order horizontally, because the flex container is flowing vertically.\n\nThe other caveat is that the container in this example has a defined height. This creates the boundary that forces the child elements to wrap to the next column. Try removing `height: 350px;` from the `.box` selector\u2014all of the child elements will just stack vertically, because now they have no reason to wrap.\n\nSo yes, there is a way to do a Masonry layout in Flexbox, but unfortunately it isn't perfect.\n. We're trying to find a good solution for that right now, as there are plenty of components you could see being identical between the two frameworks, like panels, pagination, tables, and so on.\n\nWe're working on Foundation 6 right now, where we're trying to simplify a lot of components, so at the very least I think we'll wait until that framework is closer to completion. I wouldn't necessarily want to import any Foundation 5 components, since the codebase for them is a year and a half old.\n. Might be fixed by #478\n. Yep, right now you're supposed to copy the partials as a part of your build process\u2014that's what we do in our [template stack](https://github.com/zurb/foundation-apps-template/blob/master/gulpfile.js#L69), using a glob that only targets HTML files.\n\nStarting with 1.1, though, we're going to be distributing a compiled templates file (#463), so then you can just add one JavaScript file and get all of the templates. We're hoping to have 1.1 out in a week or so.\n. Is it possible to change a state after it's already been defined? The `foundation.dynamicRouting` module will create a set of states, and then in your bootstrapping code you'll define the states again. Can they be overwritten?\n. What @escapedcat said will work. The module `foundation.dynamicRouting` is what handles the creation of states from Front Matter, so if you don't include it, no states will be generated. We're doing exactly that for a client right now at ZURB\u2014using all of the framework's UI components, but writing our own states.\n\nThere's one caveat right now, which is that view animation doesn't work without the `foundation.dynamicRouting` module. This will change in version 1.1 of the framework, which we're hoping to have out soon. Then you'll be able to add animation to your states like this:\n\n``` js\n$stateProvider\n  .state('home', {\n    url: '/',\n    templateUrl: 'templates/home.html',\n    animation: {\n      enter: 'slideInDown',\n      leave: 'fadeOut'\n    }\n  });\n```\n\nThe change is already in master if you want to mess around with it.\n. @mikestecker The front matter routing is totally optional, and we took out the line saying it's required from the documentation.\n\nWe're trying to put out v1.1 today, which will make view animation work without the router plugin, so you can write your own states but still set up transitions between them.\n. @olegpolyakov So, the awkward thing right now is that you still need those modules enabled to make view animation work, even if you're not using the Front Matter stuff. We were able to separate the functionality, but we haven't yet separated the modules themselves, to maintain backwards compatibility. We'll do that in a future version when we can properly deprecate it.\n. The `app.js` in the `docs` folder is just for our documentation. It includes a bunch of modules that aren't dependencies of the framework, including hljs, autocomplete, and so on.\n\nIf you're looking for boilerplate code to bootstrap a Foundation for Apps project, I'd suggest taking a look at the [`app.js` file](https://github.com/zurb/foundation-apps-template/blob/master/client/assets/js/app.js) we use in our template stack.\n\n**Edit:** to be more specific, are you interested in mimicking the functionality of our search with autocomplete?\n. This is an issue with how iOS interprets the viewport height (`vh`) unit. Mobile Safari calculates `100vh` without taking into account the height of the tabstrip. On iPhone, it doesn't account for the height of the status bar. So in both cases, the grid frame exceeds the \"real\" height of the viewport.\n\nWe're working on a solution but we don't have anything concrete yet. #456 addresses the issue by ditching the `vh` unit entirely, but it also introduces problems related to scrolling.\n. I'm going to close this in favor of #434, which is very similar. We definitely need a solution to this, so we'll find one.\n. This change fixes a pretty bad issue with images and flexbox in Firefox, but you're right that it may be too sweeping of a change, especially since the specificity is higher than one class (`.grid-content img`).\n\nWe've seen the issue crop up multiple times now, but we can also just implement the fix manually in those areas.\n. Reverted with this commit: f9dafb5527c08910d97b4b53fa92aef573c2fab9\n. What OS are you using?\n. @calmass It must have been an oversight. Blocks and panels use `overflow: auto`, which prevents scroll bars from showing up by default, so off-canvas should as well. Off-canvas and panel are more or less the same component, just positioned differently.\n. There's no reason you can't use all of the framework files in another build process. The Foundation CLI is just running `gulp`, so you could look at the [template stack's Gulpfile](https://github.com/zurb/foundation-apps-template/blob/master/gulpfile.js) and just re-fit that for Grunt.\n\nOur build process:\n- Copies static content like HTML partials, images, etc.\n- Copies HTML view templates and generates routes\n- Compiles Sass\n- Ugilifies and concatenates JavaScript\n\nThe only thing you can't do without Gulp is use our routing plugin, which allows you to generate ui.router-compatible states from Yaml in each view template. But that's largely optional; if you're writing your own states in the JavaScript you don't need it.\n. At the end of the day the Foundation frameworks are just a collection of CSS/JS components, which means they can pretty much go anywhere. Foundation for Apps gets more restrictive because it requires Angular, but if you're just using our CSS components then you're probably fine. And we _definitely_ want people to abuse the framework, because we need it to be as flexible as possible. :) We don't have a lot of experience here with doing web-to-native ports, but your build process seems totally fine.\n. If you build something cool that you can publish, send it our way! We're starting to develop internal projects and do work for clients with the framework, and we're learning a lot about how a fully-responsive web app is built.\n. Block lists are for menus, so each `<li>` should hold a single menu item. Putting an inline list inside a single menu item (essentially nesting the menus) turns it into something of a non-standard pattern, so we probably won't add CSS to make this work out of the box. But of course, you can definitely write those overrides yourself for your own project.\n. Angular converts those attributes into more standard HTML, which you can then style. It looks like this:\n\n``` html\n<div class=\"accordion\">\n  <div class=\"accordion-item\">\n    <div class=\"accordion-title\"></div>\n    <div class=\"accordion-content\"></div>\n  </div>\n</div>\n```\n\nSo you can select `.accordion-title` in CSS to change the styles.\n\nWe probably need to make this more clear in the documentation, though. Developers who haven't used Angular might not know that it renders these directives as HTML templates.\n. Could you explain in more detail what you want to do? Do you want to style individual items in an accordion?\n. Right! Yes, we need to add this, because right now accordion titles only support plain text. If you're just doing, say, an image, you could use a pseudo-element to add an icon.\n\n``` scss\n.accordion-title::before {\n  content: url('');\n}\n```\n\nThis won't work if you need to add dynamic content, though, like an unread count or a label. It's on our list of things to add.\n. Going to close this out, but it's still on our list of things to do. :)\n. We'd like to do more with the touch gestures, so this is definitely an interesting idea. Unfortunately we can't do the 1:1 swipe/reveal that a native app can, but I think most developers who work on web apps understand that. (The libraries do exist but they're fairly complex, and might not work well in a framework where we have to provide generic solutions.)\n. So most touch libraries like Hammer, or the stuff built into Angular or Zepto, are not 1:1, which means you can't hold your finger mid-swipe, and move it around and have the UI element move with it. That requires a lot of math and DOM manipulation that's kind of expensive to calculate.\n\nFor example, we have the `zf-swipe-close` directive in Foundation for Apps, which lets you close a modal, panel, etc. with a swipe instead of a click/tap. It's a one-time action, though\u2014you do the swipe, and then the element animates out. You can't swipe slower or faster to change how the animation plays; it just runs in response to the swipe.\n\nCompare this to iOS or Android, which has a lot of those more fluid gestures built-in. And there are plenty of developers who write their own custom animations for their apps. Tweetbot for iOS is a great example. The web doesn't quite yet have the means to get that kind of fidelity out of motion. There are folks who are trying really hard, but the performance isn't quite there.\n. @soumak77 If you have the feature in a different branch of your fork, you should be able to open a PR with that specific branch.\n\nIf you don't have them in separate branches, I'd recommend making a new branch that compares against _this_ repo's master branch, and cutting/pasting the feature in there, just so the PR is as clean as possible.\n. We do test on Android 4 devices, phone and tablet. What device, version of Android, and browser are you using?\n. We've got a big improvement coming in v1.1, which will hopefully be out tomorrow. For the directive templates, we're using ng-html2js to pack them all into a single JavaScript file, meaning you won't need to copy those HTML files from the Bower package.\n\nWe also added a new feature to the Iconic directive which allows you to specify the path your icon files are in.\n\nAre there any other specific concerns you have related to directory structure?\n. Definitely! Thanks for your feedback. Other than which Angular add-ons we use (namely ui-router and ngAnimate), we want to avoid being prescriptive with regards to how people design or code. That'll always be a goal for all three of the Foundation frameworks.\n\nAlso, 1.1 got pushed to tomorrow (Monday), but it'll get there.\n. You can still install the package and just ignore everything in the `js` folder. If you're using a tool like wiredep, you can configure it to ignore all of the JavaScript that our library depends on.\n\nTo be sure, Foundation for Apps has _quite a few_ dependencies, so it is sort of lame that you have to install seven other things you probably won't use. (Although FastClick and the viewport units buggyfill are both nice.) If you check your dependencies into version control, you can ignore them in `.gitignore`, and if you don't, simply ignoring the folders is easy enough.\n\nBower 1.4 might add the ability to ignore dependencies, although there's been no word on it recently. Here's the pull request: bower/bower#1394\n. The `icon-*` classes should be used on the menu bar itself, not the menu group. However, a selector specificity issue was preventing the class from being applied properly. Fixed!\n. Here are the problems:\n- The menu bar is hiding overflowing content. We can fix that with `overflow-y: hidden`, and it shouldn't break anything else.\n- The action sheet container isn't centered within the menu bar item. It's anchored to the right instead, like a normal element would be. You can fix that with `position: relative; left: 50%;`. I'm not sure how to elegantly build that fix into the framework.\n\nApplying those fixes will make the action sheet visible.\n\n![screen shot 2015-04-22 at 6 37 05 pm](https://cloud.githubusercontent.com/assets/1142001/7288993/9e9fe7c8-e91e-11e4-8c06-2a697b43b51e.png)\n\nHowever, since it's anchored so far to the right it will be cut off, which is a known issue. We need to add some kind of edge detection to the action sheet. (Or rethink it entirely at some point, because it's a super unwieldy component right now, and probably overlaps in functionality with the popup.)\n. That Firefox `<input>` line height issue, what a fun one.\n. Could you describe the issue you're having in more detail? Maybe include a screenshot?\n. Also, does the error happen when you change to a new view, or when you perform some other action like a click?\n\n```\n\"Uncaught TypeError: Cannot read property '$$phase' of null\" (foundation.js line 29)\n```\n. Yeah, let us know if the changes on the master branch fix your issue.\n\nBut just so we're sure, the series of events that cause the error are:\n- Navigate to a state that has modals inside it\n- Navigate away from that state\n- Navigate back to the state\n- Click the modal open trigger\n- Error\n\nWe had bugs reported related to modals that are inside of a `ui-view`, and we were able to implement some fixes. See: #464\n. Do you use Bower to manage dependencies? If you do, switching to the master branch is easy. Just make this change in your `bower.json`.\n\n``` js\n{\n  \"dependencies\": {\n    \"foundation-apps\": \"master\"\n  }\n}\n```\n. We don't recommend it, because we actively develop on it. We maintain a `stable` branch as well that's always pointed at the last version we released.\n\nHowever, we're releasing v1.1 tomorrow, which will include this fix, so you can just upgrade when that comes out. Glad we could help!\n. View animation recently got an overhaul (#386), and it's now way more robust and stable. We were able to pretty thoroughly test it in all of the browsers we support as well. It'll be in version 1.1, which we're trying to get out on Friday.\n\nThe `align-items: stretch` thing is interesting. We use that to ensure that columns in a horizontal grid are all equal-height, since `height: 100%` tends to not cut it. But we could give it another look, also, if it's a performance hit.\n. There's a [gulp-compass](https://www.npmjs.com/package/gulp-compass) plugin that you can swap into your project. Run `npm install gulp-compass --save-dev` to get it in your project, and then follow the instructions on the readme to get it set up. You'll be replacing the call to `$.rubySass` in the Gulpfile to `$.compass`, under the `sass` task.\n\nYour project will also need a `config.rb` file, like a normal Compass project would. The config file needs to reference the Foundation for Apps Sass as an import path:\n\n``` ruby\nadd_import_path \"bower_components/foundation-apps/scss\"\n```\n. @soumak77 The classes follow ngAnimate's format; what would we need to change to make them work? I know they work with `ng-repeat`.\n. @soumak77 Okay, so the reason is that there are five types of Angular transition classes: enter, leave, move, add, and remove. Our motion classes support the first two: enter and leave. We should be able to add support for the rest just by chaining those other classes to the existing selectors. By adding at least add/remove, we get support for `ng-show` and `ng-hide`.\n. @soumak77 It's possible, I'll see how quickly we can put together a test case. It's a relatively simple Sass change, though.\n. @soumak77 And done!\n. Definitely, we'll see about getting it in soon.\n. Merged with 40abb575efde27fcff8c59b8ee18fff417a9919c\n\nThanks! :)\n. Nice, thanks!\n. Yep, #483 fixes this I believe. We're trying to put out a 1.1 tomorrow, so stay tuned!\n. You think there's any way to make improvements that are backwards-compatible, or would we need to wait for a major release to work on this?\n\nIt's also likely that v2 of this framework will be written in Angular 2, so then all of this is out the window anyway ;)\n. Sounds solid. We have no timeline for a v2 of Foundation for Apps, but there's also no real timeline for Angular 2's release. We're keeping a close eye on it, though.\n\nWith that in mind, I'm going to close this out. There are some big things that we have to wait until a major version to change. But we're always keeping track of this stuff, so we love the feedback. Keep it coming! :)\n. Merged with this commit: ab6303639d8b2bc26dd77d758d91746111c3996b\n. Closing in favor of #549.\n. Looks like some weird network issue. Can you try running everything manually? `cd` into the folder for the project that was created and run:\n\n``` bash\nnpm install\nbower install\ngulp\n```\n. Did you get any errors when you ran `npm install`?\n. Hmm, well you got an error the first time, so let's try again.\n\n``` bash\nrm -rf node_modules\nnpm cache clean\nnpm install\n```\n\nSee if you get the same errors with node-sass. Also, what version of Node are you running?\n\nIf this doesn't work, you'll likely need to ask the folks at [node-sass](https://github.com/sass/node-sass/issues) for some help.\n. Swapping for Ruby Sass is fairly easy. Install the `gulp-ruby-sass` library and then replace the code in the `sass` task of your Gulpfile with this code:\n\n``` js\nreturn gulp.src('client/assets/scss/app.scss')\n  .pipe($.rubySass({\n    loadPath: paths.sass,\n    style: 'nested'\n  })).on('error', function (e) {\n    console.log(e);\n  })\n  .pipe($.autoprefixer({\n    browsers: ['last 2 versions', 'ie 10']\n  }))\n  .pipe(gulp.dest('./build/assets/css/'));\n```\n. Right! Forgot they have a new 1.0 alpha branch. One more thing, if you want to lock in the version of Sass you're using with a Gemfile, you can add one to the project root, run `bundle install`, and then add the setting `bundleExec: true` to the `$.rubySass` config object.\n. @Joe-5mith Were you able to get gulp-ruby-sass working properly?\n. Can you try using the directive as an attribute instead of an element?\n. Well, unfortunately it was an oversight, but it's been fixed now. No CSS output in the framework should be hardcoded, except the `<meta>` styles we use to pass the media queries to the JavaScript.\n. We try to put out patches every few weeks, depending on how many crazy bug fixes we need to get out the door. So at best I can say \"a week or two\", but we don't have a date right now.\n. The move process seems to be very similar to enter, except that the class is different. Is there any real difference, or can we just chain `.ng-move` to `.ng-enter` and `.ng-show`?\n. Ah I see, so we need to prevent collision between enter/show and move. Ideally we find a way to do that without outputting a ton of extra CSS. Or we relegate it to a mixin-only feature, to keep our file size down.\n\nI also need to eventually take a look at how we store all these animation classes, if there has to be three sets of them. It would be better if the Sass variables looked like this:\n\n``` scss\n$motion-classes-enter: 'ng-enter', 'ng-show', 'ng-move';\n$motion-classes-leave: 'ng-leave', 'ng-hide';\n```\n\nThere are some nice selector manipulation functions in Sass 3.4 that would probably help, but they aren't in libsass yet (and probably won't be for a while), so I might write something that recreates what I need.\n. I opened a pull request that implements `ng-move` here: #560 \n\nThe Sass variable situation is becoming messy, but we'll roll with it for now. You can test this branch on an existing project with `bower install foundation-apps#ng-move-motion`\n. Yep, that should be `e.target` instead of `e.srcElement`.\n. The team looked over this today, good stuff!\n\nWe like the `zf-if` concept as a different way to do visibility, but not necessarily as a replacement for Interchange. The benefit of Interchange is that visibility within a set of elements is mutually-exclusive\u2014only one element within an Interchange element can be displayed. In some of your examples, each element in a set needs to use an `only` version of a media query, otherwise every element would appear at once on a large screen.\n\nOur main piece of feedback for the `zf-if` concept is that you could simplify the directive by having just one, called `zf-if`, and then read the name of the media query off of the value of the directive, like so:\n\n``` html\n<div zf-if=\"medium\"></div>\n<div zf-if=\"small only\"></div>\n```\n\nThis solves another issue which this feature would need to address, which is that the breakpoint names are hard-coded. Right now small, medium, and large are built-in, but the framework also has xlarge and xxlarge, _and_ the user can change the names of the media queries, or add new ones. You can access them through the `foundation.mediaqueries` module. With this in mind, a more generic `zf-if` directive makes sense, because then you're just parsing a string and checking it against the global media query list.\n\nAs for element queries, we're not sure we're ready to implement them quite yet. Also, we don't want to add another external library to the framework right now. Foundation for Apps already has seven dependencies, so we'd like to hold off on adding any new ones until we're ready for a v2 of the framework.\n. Our next release will be a patch, and then probably a minor release after that (1.2). Sorry for making you wait so long! :) The work you're doing is fantastic.\n. Could you give an example of how you'd use this new feature?\n. @soumak77 So what we're trying to solve is the issue of incremental builds, where you may not be passing every file through the router. Your use case seems somewhat specific, but from a Gulp perspective, being able to support partial builds (like using `gulp-cached` to only pass modified files through a stream) would be useful.\n\nOne issue I see with your current approach is that the more you append, the more `foundationRoutes.concat` calls you get in your code, and the plugin right now probably can't differentiate between a route being _added_ versus _changed_, so if you ran it too many times the file would become larger than necessary. To be sure, though, actually reaching into the existing file and modifying the JS object in there would be tricky, as you wouldn't know the exact formatting (uglified or not? etc.)\n\nI wonder if you can store the routes in memory and just reference that when re-generating the routes file. There are some Node modules that would let you store the data after the process exists.\n\nI like the idea of using module configuration, since that will pull that `foundationRoutes` variable out of the global scope. It's worth noting that we'd like to move the routing plugin into its own npm module in a future version of the framework, because we realized having a node module in a Bower package is a little weird. I'll take the blame for initially suggesting that ;)\n\nTo do it right, we would probably introduce the module in 1.2, but keep the old one in place until 1.3, when we formally deprecate it by removing the `bin` folder from the repo. Your idea requires changing the order in which files are loaded in the HTML (libraries, then routes, then boostrap), so a new version of the plugin could introduce these breaking changes.\n\nIf you're interested in working on those bigger changes to the plugin, I can set up the new repo with some test files set up and you can hack away at it.\n. @soumak77 You're the best! Thanks so much for your interest in contributing to the framework. Once again, we don't have a timeline for 1.2, so don't fret about getting it done right now.\n\n[Here's the standalone module.](https://github.com/zurb/front-router) To recap, here are the goals of a new version:\n- Support incremental builds: the parser needs to be able to print a routes object without passing every file through every time.\n- Use module configuration instead of a global variable to print routes.\n- Keep it backwards-compatible! For version 1.2, the `foundation.dynamicRouting` module should work with the old _and_ new router. For version 1.3 we can drop support for the old router.\n. @soumak77 Hey, no problem! We're going to try and square away some of the bigger Apps issues and pull requests this week.\n. @soumak77 Since it's a feature, we can save it for 1.2. We don't have a timeline for a 1.2 right now, but you'll have plenty of time to work on it. We weren't planning on implementing this feature specifically, so you can definitely own it.\n\nIf you give me one more day to review this with the team, I'll get you some feedback. :)\n. The CLI will work with your current projects, so you can update it no problem.\n\nAs you correctly guessed, most of the CLI's commands are wrappers for Bower and npm functions. So `foundation-apps update` is the same as `bower update`, and `foundation-apps watch` is running `npm start`, which runs a local copy of Gulp. (This means you don't need Gulp installed globally for it to work.)\n\nThis abstraction will make more sense when we move Foundation 6 and Ink 2 onto this CLI, and then all three frameworks will use the same tool. The command name will also change to just `foundation`.\n\nGlad you're loving it! We feel really good about 1.1, it's _way_ more stable than 1.0. :)\n. Could you `cd` into the folder created and run `bower install` manually? That's the step of the install process that it's failing on.\n. Hmm, could have been a temporary network hiccup or an issue with proxies, depending on the kind of network you're on. If it happens again let us know. :)\n. This will fix components not loading properly in HTML5 mode, but it would affect apps that still use hash bangs, but also run in a subdirectory. In hash bang mode, the relative component paths are always relative to the `index.html` file of the app, no matter what route you're on. If this was changed to an absolute path, it would look be looking in the wrong place.\n\n**Edit:** Actually, might need to look into that again. I was trying to figure it out a few weeks ago, what the root directory is when a directive template is being loaded.\n\nWe've started distributing a pre-compiled templates file, and our project template now pre-compiles templates instead of loading all those HTML files separately. Would that method get around this issue?\n. Yep, the Travis file has been updated so that won't happen.\n. If you're fine with it not being a single-page app, then you should be able to just drop in the CSS, and the JavaScript for Angular and Foundation and it'll work. We distribute the files on npm and Bower, so you can get the compiled CSS and JS from there.\n\nIf you want it to be an actual single-page app, though, that's a whole new can of worms. Normally Rails handles your URL routing, and serves up all the HTML. With Angular, however, your app has to have one entry point (an `index.html` file), and Angular handles all of the routing and rendering of HTML.\n\nWe recently redesigned the [ZURB Library](http://zurb.com/library), which is a Rails application that uses Angular on the front-end. The server redirects all requests to `index.html`, and Angular handles the route from there. Also, Rails doesn't serve up any HTML; the backend is just an API that sends data to the client as JSON, and Angular uses it to write the HTML for each page.\n. @soumak77 Ah yeah. So `move` only happens on `ng-repeat`, which also uses `enter` and `leave`. So is the main concern getting `move` to work with those two specifically? If that's the case, then can `move` be the only animation event (of the five there are) that gets its own unique classes?\n. @soumak77 Do you think the move animations are needed for every type of transition? There's slide, fade, hinge, zoom, and spin.\n. @soumak77 Yeah, CSS output is a concern, but I think the move classes specifically will go behind a Sass variable. I was also wondering if the effects were practical for this specific type of transition. But I'll just add all of them! No problem.\n. Going to close this and open a new PR later when I've implemented it properly.\n. Do you want the panel to be open as long as the `vehicles` state is active? Maybe you could drop the `zf-open` and use ui-router's state events to open/close the panel. The [ui-router wiki](https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions#how-to-open-a-dialogmodal-at-a-certain-state) goes into more detail, but here's a (possible) code example:\n\n``` js\n$stateProvider.state(\"items.add\", {\n  url: \"/add\",\n  onEnter: ['$stateParams', '$state', 'foundationApi', function($stateParams, $state, FoundationApi) {\n    foundationApi.publish('#detail-panel', 'show');\n  }],\n  onExit: ['$stateParams', '$state', 'foundationApi', function($stateParams, $state, FoundationApi) {\n    foundationApi.publish('#detail-panel', 'hide');\n  }]\n});\n```\n. The grid classes only apply to a panel when it's turned back into a block. Although maybe folks are expecting the classes to work with both components?\n\nWe could probably use more built-in classes for panel sizing. In the mean time, you can use the `panel-layout()` mixin to create a panel with a custom orientation and size.\n\n``` scss\n.custom-panel {\n  // The second parameter can be a percentage or absolute width\n  @include panel-layout(left, 100%);\n}\n```\n. Do you think a handful of pixel-based sizing classes are enough, or are folks expecting a range of percentage-based classes on par with the grid? It could end up being a lot of extra code if we have twelve sizing classes, and actually twice that because you need different ones for horizontal and vertical panels.\n. I'm amazed how complicated the math for this turned out to be.\n. You can just drop an image into the `<a>` and it will work just fine. There is an issue right now where the image still has a bottom margin, because it's expecting text to be below it. You can fix it for now with this selector:\n\n``` css\n.menu-bar > li > a > img:first-child:last-child {\n  margin: 0;\n}\n```\n. There shouldn't be a scroll bar if a grid element is shrunk, because \"shrink\" means \"this element should only take up the space it needs\". So using `overflow: hidden` (or `overflow: visible` to make using dropdown menus easier) as a default would make sense.\n. This is really interesting, do you think you could add a section to the Iconic documentation page that explains this, with a live demo and code example?\n. Thanks!\n. One last question, the last section, \"Delay Loaded Icon\" shows two code examples, one where the icon doesn't render and one where it does. Is it possible to just have the second example, since it's the one that implements the fix you describe? Our documentation should skew towards having one example to show how to do something. If you'd never use the first example, then we can probably drop it.\n. Sounds good, I'll update it.\n. This should be fine, although one thing we want to avoid in the future is hard-coding class names. All of the Foundation frameworks are written in Sass mixins, which means you can rip out our entire class structure and replace it with your own if you want. With that in mind, JS plugins should avoid adding or referencing built-in classes, because we can't guarantee that the user is using them.\n\nTo be sure, though, we do this a lot in Foundation for Apps right now. It's also trickier with Angular, because our components are these templates that you just drop in. In Foundation for Sites it's easier, because the user just drops a bunch of data attributes onto existing markup.\n\nThe framework is very new, though, and for specific components like this not many people are probably using the mixins yet. They're most commonly-used for the grid, and that's also arguably the place they're most valuable.\n\nSo if we merge in #561, will this work as-is, or will you need to make another change?\n. @soumak77 If we pull in #561, could you merge/rebase this PR and get the proper fix in to we can reconcile the two?\n. Alright, merged in #561.\n. Nice, so it's solid, then?\n. Awesome, thanks!\n. Thanks!\n. There weren't any big changes to the grid from 1.0.3 to 1.1 (just two commits from what I can tell), but this may have been introduced in 1.0.3.\n\nI think the fix is changing the default sizing behavior of grid elements.\n\n``` scss\n.grid-block,\n.grid-content {\n  // Old\n  flex: 1 1 auto;\n  // New\n  flex: 1 1 0;\n}\n```\n\nSetting the preferred size to `0` instead of `auto` ensures that the blocks actually take up even amounts of space and don't vary in their widths. We initially thought that `auto` did the same thing, but sometimes column widths still find ways to vary. It seems like setting it to `0` is the right thing.\n\nWe'll need to test it in every browser, of course, since they're all implementing Flexbox a little differently, and test the change in any existing codebases to make sure it's not a breaking change. I don't think it is, though, especially since it's the behavior we wanted all along.\n. @etcook Awesome! Originally grid elements just used `flex: 1 1`, but then we added `auto` to the end because different browsers used different defaults for the last property (`flex-basis`). But it sounds like setting it to `0` across the board will get us the result we want. We'll do some testing on it.\n. Hm, if you have time can you drum up a more isolated test case?\n\nOmitting the last value of `flex`, which is `flex-basis`, is problematic because IE10/11 have a different default value, so you have to be explicit with it. IE10/11 _also_ miscalculates the width/height of any element with a `flex-basis` other than `auto`, so that's fun. [Learn more here.](https://github.com/philipwalton/flexbugs#7-flex-basis-doesnt-account-for-box-sizingborder-box)\n. The plugin is called [allmighty-autocomplete](https://github.com/JustGoscha/allmighty-autocomplete) if you want to use it. It's not developed by us; we just use it in our documentation.\n. We don't plan to include it with the framework by default, but it's pretty easy to integrate into an existing project. Run `bower install allmighty-autocomplete --save`, then add the path to the array of JavaScript paths in your Gulpfile. The library also includes a CSS file with some default styles you can use.\n. Generally grid blocks don't scroll, only content blocks. Looking at your markup, I would expect the first element (with the `<h2>` and `<h4>`) to be fixed at the left, the last element (with `Go code!`) to be fixed at the bottom right, and the middle element to be fixed at the top right, _and scrollable_. What's your intended behavior?\n\n**Edit:** Unless the entire modal is a vertical grid, in which case I would expect all three elements to stack vertically. The top and bottom ones don't move, and the middle one scrolls. This is the intended behavior of the grid.\n. I wouldn't expect the `.grid-block.vertical` element to scroll, just the `.grid-content` areas. I think the HTML of this modal can be refactored.\n\nAssuming you want to anchor elements at the top and bottom, and keep the middle open to show content, you can do this:\n\n``` html\n<div class=\"grid-block vertical\">\n  <div class=\"grid-content shrink text-center\">\n    <h2>Modal Header</h2>\n  </div>\n  <div class=\"grid-content\">\n    <div ng-repeat=\"x in [1,2,3,4,5,6,7,8,9,10,11,12,13]\">\n      <p>Content {{ x }}</p>\n    </div>\n  </div>\n  <div class=\"grid-content shrink text-center\">\n    <a class=\"button primary\">Next</a>\n  </div>\n</div>\n```\n\nThe top and bottom have `.shrink`, so the middle section is expanded. The elements added with `ng-repeat` fill in the middle space.\n. There needs to be a distinction between modals that use the grid and ones that don't. A plain modal has padding and is `display: block`, while a grid modal has no padding and is `display: flex`. If we consider a plain modal to be the default (which is sensible, since it's the simpler form of a modal), then we need a class, maybe `.grid`, for modals to shift them into grid mode.\n\nWhatever solution we use here should be applied to panels and off-canvas as well, which are two other components that have these two modes.\n. We're working on improvements to the grid documentation, namely using... y'know, _actual examples_, so look forward to that.\n\nWe've had some trouble explaining the difference between the three grid elements\u2014the frame, block, and content block. Recently though, we've found an easier way to frame it. (But you're right, `.grid-content` is always the lowest-level.)\n\nHere's a no-frills grid. It only uses two of the elements.\n\n``` html\n<div class=\"grid-frame\">\n  <div class=\"small-3 grid-content\"></div>\n  <div class=\"small-3 grid-content\"></div>\n  <div class=\"small-6 grid-content\"></div>\n</div>\n```\n\nHere's that same grid if we nested a new grid inside the first element. It adds a new, third element for nesting purposes.\n\n``` html\n<div class=\"grid-frame\">\n  <div class=\"small-3 grid-block\">\n    <div class=\"grid-content\"></div>\n    <div class=\"grid-content\"></div>\n  </div>\n  <div class=\"small-3 grid-content\"></div>\n  <div class=\"small-6 grid-content\"></div>\n</div>\n```\n\nThe main difference from a typical float grid is that you can add sizing, source ordering, etc. classes to block _and_ content.\n. This is something we haven't fully addressed yet, so now's a good time to. Some of the components have default classes and animations applied. Panels will have this issue also.\n\nMaybe we can switch up the logic so that if you omit the `position` attribute, it doesn't add anything? In our examples we always include it, even though it does have a default value of `left`.\n. Opened #589 since this is relevant to multiple components.\n. It's a little awkward right now, but you do need both the `foundation.dynamicRouting` and `foundation.dynamicRouting.animations` modules to make it work, even if you're not using our routing plugin.\n\nWhen we released 1.0, view animations only worked with the routing plugin. We fixed this in 1.1, but to maintain backwards compatibility, we didn't want to change the names of the modules. Unless there's a way for us to create a module alias, so we can change the name, we'll have to keep the naming convention as-is for the time being.\n. Seems like that fix will work fine for now. [There's been talk](https://github.com/zurb/foundation-apps/pull/550#issuecomment-88192466) about making the routing plugin's process a little more robust than dropping an array into the `window` object, so look forward to that!\n. The ghosting issue is a WebKit bug, but we have a workaround in the CSS. However, the setup for the animation isn't working properly. The first parent of the views should temporarily get a class called `.position-absolute`, but here it's not. We'll look into it.\n. Could you try reworking your HTML so that the `ui-view` element is wrapped by a `grid-block`? So it would look something like this:\n\n``` slim\n.grid-frame.vertical\n  .grid-content.shrink\n  .grid-block\n    .grid-content ui-view\n      .grid-container\n```\n. Try adding the class `.ui-animation` to the view and see if that fixes it. That won't be necessary in the next version of the framework (e64d2eee89ac7f4b7e9b5cecea17b68d2b6c460c).\n. This happens because both views are temporarily `position: absolute`. But the wrapper element around the `ui-view` container is what should prevent the two views from shifting around. If the wrapper and the view are the same size, you shouldn't be able to tell.\n. Nice! We know it's a little confusing ;) In a future version of the framework we'll just build in the container class, like `.ui-view-container` or something like that. We're also currently writing a tutorial on Foundation for Apps that will cover view animation.\n\n@huphtur, let me know if these fixes work. There's two parts to setting up view animation:\n1. Give the `ui-view` a class of `.ui-animation`.\n2. Wrap the view in a parent container that has the same size. Usually this is just another `.grid-block`.\n. The markup @DeanSolecki wrote is the right way to do it. If anyone has any more problems let me know!\n. Can you try running `npm start` and see if that works?\n. `npm start` is what the CLI runs in the background, so until we get this fixed you can use that command and it'll work just fine.\n\nWhat versions of Node and npm are you running? Use `node -v` and `npm -v` to find out. **Edit:** never mind, you totally already said :)\n. @quook What version of Node are you on? Maybe it's an issue with 0.12; most of us here are still running 0.10.\n. Alright, I was able to recreate it in Node 0.12.2, so it's an issue with Node 0.12.x.\n. Just published [version 1.1](https://github.com/zurb/foundation-cli/releases/tag/v1.1.1) of the CLI which addresses this issue. Run `npm update -g foundation-cli` to get it.\n. I don't know that you can definitively _prove_ that Angular is on its way out just yet ;) Either way, a v2 of this framework is still a way off, so we'll cross that bridge when we get there. But to be sure, the opportunity cost of sticking with Angular vs. switching to another framework are about the same, because either way we have to learn something new.\n. @zimt28 Are there any examples in the wild of people doing this? Writing pure classes and then hooking them into multiple libraries?\n. Sass can't import plain CSS files using `@import`, only other Sass files. Thankfully, it's pretty easy in Gulp to just insert those extra CSS files.\n\nTo add external CSS to your main CSS file (which was compiled from Sass), there's two steps to take.\n\nFirst, add the plain CSS files to `gulp.src`. The files will be combined in the order you list them.\n\n``` js\nreturn gulp.src(['path/to/file.css', 'path/to/sass.scss'])\n  .pipe(/* ... */)\n```\n\nNext, add a concatenation step to the stream. gulp-sass will ignore your plain CSS, only processing the Sass files. But now we have two CSS files, and we need to combine them into one. gulp-concat will do this for us, and the template project includes it.\n\nYou can insert concat before or after autoprefixer, just make sure you do it before `gulp.dest()`.\n\n``` js\n// Compiles Sass\ngulp.task('sass', function () {\n  gulp.src(['path/to/other/file.css', 'client/assets/scss/app.scss'])\n    .pipe($.sass({\n      includePaths: paths.sass,\n      outputStyle: (isProduction ? 'compressed' : 'nested'),\n      errLogToConsole: true\n    }))\n    .pipe($.autoprefixer({\n      browsers: ['last 2 versions', 'ie 10']\n    }))\n    .pipe($.concat('app.css'))\n    .pipe(gulp.dest('./build/assets/css/'))\n  ;\n});\n```\n\nIn the future we'll see about adding more documentation on how the template stack actually works. The Gulp team itself doesn't publish any best practices for how to structure a Gulpfile, but if you want to see how \"the big kids\" do it, I'd recommend you check out Google's [Web Starter Kit](https://github.com/google/web-starter-kit/blob/master/gulpfile.js) and the [HTML5 Boilerplate](https://github.com/h5bp/html5-boilerplate/blob/master/gulpfile.js).\n\nHope this helps!\n. Like @AntJanus said, all of the components are generally framework-agnostic. Half of them also work without any JavaScript, most critically the Flexbox grid. You can install the Bower or npm package and just drop in the Sass files (or compiled CSS).\n\nThe reason we didn't write a wrapper around plain JS plugins is because then we lose some of the benefits of the framework itself. That being said, hopefully our components can be flexible enough to be dropped into any JS framework. For example, Motion UI will eventually be a standalone library, and it'll be way more configurable. Then you could use it with, say, Ember's Liquid Fire, in addition to ngAnimate.\n\nWe don't have a timeline for a v2 of a framework, but when that time rolls around we'll probably be reassessing how the framework is built, since Angular 2 is a thing.\n. Which control on the page should open the modal? And could you post the code for the modal and the element with `zf-open` that triggers the modal?\n. Try using `.grid-content` instead of `.grid-block` for the inner elements. Blocks are just for layout, while content blocks are for actual content. The main difference is that one is `display: flex` and the other is `display: block`. The flexbox behavior is interfering with the display of the images.\n. Ah yeah, I just remembered that we've run into this, so I think you're right. For a while we had a fix in place that just applied `width: 100%` to all images within a grid, but it was reverted.\n. @tatemz That second issue was fixed a few weeks ago, it just hasn't landed in a stable version yet. (caaf800f21cf4750b534709d1e0371a9a2152105)\n\nAs for the main issue, I wonder if applying `min-width: 1px` to flex children across the board would work.\n. A few remarks about your markup:\n- You don't need the `panel-bottom` class on the panel; the `position` attribute adds it for you.\n- The `zf-panel` attribute doesn't need a value. Since you have an ID on there, you're good.\n\nThe layout for panels is a little tricky; the panel should never be _inside_ any content blocks (`.grid-content`), just _adjacent_ to them in the HTML. So a super basic layout would look like this:\n\n``` html\n<div class=\"grid-block\">\n  <div zf-panel></div>\n  <div class=\"grid-content\">\n    <p>Content!</p>\n  </div>\n</div>\n```\n\nIn this example, there's one main content area that spans the entire width, along with the panel, and both of them share a container. This ensures that the panel appears on top of the main content, and avoids issues with scrolling containers and `position: absolute` elements.\n\nThat might be your issue. If not, could you post a larger code example for us to take a look at? Thanks!\n. Awesome, thanks!\n. So it looks like you're trying to run unit tests with PhantomJS?\n\nHere's the key error: `TypeError: 'null' is not an object (evaluating 'mediaQueries[key].replace')`\n\nMedia query settings are stored in a Sass variable, which we pass to the JS by serializing it and attaching it to a specific `<meta>` tag. The JavaScript reads the style attribute of this special meta tag, and turns it into an object of breakpoints.\n\nWe've seen this before, and the reason it's happening is because the PhantomJS instance isn't referencing any compiled CSS. We probably need a workaround for this, but Interchange specifically needs this breakpoints. Maybe we can get around it by just loading in a default set if it can't find any.\n. I think this is something we can fix, by dropping in a pre-set list of media queries if pulling from the `<meta>` tag doesn't work. We had this issue with the routing plugin as well, and we were able to fix that.\n. Do you get any JavaScript errors?\n. We don't support Browserify, or any other module loaders right now, but it's something we'll look into eventually. In the mean time, the correct name of the Angular module is just `foundation`, not `foundation-apps`.\n\nThe `foundation` module gets you every UI component at once, but you can also only import individual elements, like `foundation.panel` or `foundation.accordion`. The [Angular modules](http://foundation.zurb.com/apps/docs/#!/angular-modules) page in our documentation breaks down every module and what they all do. You can also check out the [bootstrapping code](https://github.com/zurb/foundation-apps-template/blob/master/client/assets/js/app.js) for our template project to see what we're loading specifically.\n. What problem does this fix?\n. I see, thanks for clarifying :)\n. It might be possible to make the body of the switch a pseudo-element, and then the text just sits after it. The thing is that the switch itself needs to be clickable, _and_ not require any JavaScript, which is why it's always been structured how it is.\n\nHowever, people have also asked that we support text _inside_ the switch, although it might be possible to support both. Inner text isn't a label, anyway, it's a state.\n. Because the framework is geared towards responsive web apps, in general we assume that any pane of content _could_ need to scroll, as its dimensions will change wildly between mobile and desktop. But you're right that the overflow issue has come up multiple times.\n\nWe have a `.noscroll` class for grid elements, but right now it actually applies `overflow: hidden`, which is also problematic. So I just added a change to make it `overflow: visible` instead.\n\nWe've had a number of issues with overflows and scrolling, so we're definitely looking at ways to better handle that stuff. For example, most JavaScript plugins assume the window is always the thing scrolling, not some nested scrolling panel, and F4A projects are made entirely out of those. (Tether has been problematic in this regard.)\n. Definitely, it's actually in the docs-specific bootstrapping code, so it'll be moved before it's merged.\n. Closing in favor of bc01826c7bd1eb8e4ed6fb3bf293fcb0aebcaf9f which solves the same issue without extra CSS.\n. Thanks for the GIF, and also revealing to me that Chrome DevTools can _slow down animations_. That's awesome!\n\nBefore we merge this, we'll make sure it works in other browsers.\n. Actually, looking closer, I don't think this is the right fix. The issue is specificity:\n\n``` scss\n// Defined by switches\n.switch > label {\n  margin: 0;\n}\n\n// Defined by forms\ninput[type=\"checkbox\"] + label {\n  // This is overriding the margin: 0; above\n  margin-left: 0.5rem;\n}\n```\n\nMatching the specificity within the switch class fixes the issue. This commit implements the fix: 951eeadd343e0b7fdf9482987d9d9f9e7349b318\n. I'm fine with one less deploy step. Thanks for spreading the word. :)\n. Browser compatibility is the _best_. Thanks!\n. We're about ready for a patch release, just need to close down a few of the more pressing issues. View animation specifically is something we want a little more solid.\n. Definitely, we'll see about getting that in shortly.\n. Add the `--production` flag to the command you're running. This enables compression for the CSS and JavaScript.\n\nThe plugin gulp-if controls the process of compression. If it sees the `--production` flag, the JavaScript runs through the `uglify` transform. Otherwise, it skips over it.\n. You'd need to use an iframe inside of a modal, but I don't know that Facebook allows their share screens to be loaded in iframes\u2014they have to be in their own window. (See more [here](http://stackoverflow.com/questions/9302023/load-facebook-sharer-in-iframe).)\n\nThere are a few ways to trigger this screen, which Facebook details in their [developer documentation](https://developers.facebook.com/docs/sharing/reference/share-dialog).\n. It's a known issue, @jeanieshark and I spent a while looking at it but couldn't figure it out. I'll double-check on how far we got in diagnosing the problem.\n. Fixed via a685cccf2a13dff77cdd728f41f9dbbbefbdf643. It'll be in the next patch release.\n. The Git clone may have failed. Can you try running the command manually?\n\n```\ngit clone https://github.com/zurb/foundation-apps-template.git mwepd2\n```\n. Oh! You're on an old version of the CLI\u2014it doesn't use Ruby at all now. Run `npm update -g foundation-cli`. **Edit:** Maybe. We should have scrubbed any Ruby-related instructions from our docs and readmes, but if we missed something, let us know.\n. @soulstyle Do you see a project folder being created after running `foundation-apps new`? The folder should still be there even if the install fails.\n. If you want open elements to close when a toggle is fired, use `zf-hard-toggle`. It toggles the element with the ID you specify, and also closes other open elements. Does that sound like what you need?\n. What version of Node and npm are you running?\n\n```\nnode -v\nnpm -v\n```\n\nAs for the project you tried to make, the files are all there. Can you try running `npm install` manually from within the project's folder?\n. The commands are identical. `foundation-apps watch` is just running `npm start`. But for the sake of consistency we'll make sure that it lists the same command.\n\nJust so we can close this out, could you try running the `foundation-apps new` command again? You should get a list npm errors above the text at the end where it says \"There were some problems during the installation.\"\n. Ah okay, it's a permissions issue with your computer. [Here's an npm issue comment](https://github.com/npm/npm/issues/4815#issuecomment-48080140) that details a fix. (Specifically it's the `sudo chown` commands halfway down the comment.)\n. The `$order` parameter in the mixin has an extra comma. Remove that last comma and you'll be good.\n\nIt looks like our documentation has a few formatting issues like these, so we'll make sure they get fixed.\n. Can you describe in more detail the problem this creates? What do you mean that the Angular application is loading multiple times?\n\nAlso, are you using our Gulp routing plugin or writing your own routes?\n. The Iconic file hasn't changed since version 1.0; is this a problem you encountered starting with a specific version?\n. Since it's an issue with Acorn, we'll close this out.\n. We patched the shrink behavior of grid elements to be `overflow: visible`, meaning they'll never have a scroll bar (see here: b44df9ee31e899a74a2dd2ff2d61e4b3fb096b58). The fix is in master, but hasn't landed in a stable release yet. We should have a patch version out soon.\n\nIn the mean time, you can patch this behavior yourself by adding `overflow: visible` to grid elements you know are shrinking.\n\nContent blocks are always `overflow: auto`, meaning they get a scrollbar if the content is taller than the container. If your blocks are really short (which it looks like they might be, based on the screenshot), there's a good chance they get a scroll bar. You can disable scrolling by adding the `.noscroll` class to the element.\n. Thanks! :)\n. This might be fixed on the master branch, where we've prevented the minimal UI from displaying, which gets around the weird height calculations Mobile Safari does. See #603, and the commit that replaced it, bc01826c7bd1eb8e4ed6fb3bf293fcb0aebcaf9f.\n. We tested this in multiple browsers to be sure, and I don't think anything we can do will fix it. Foundation for Apps projects are built with a series of scrolling boxes\u2014the window itself never scrolls.\n\nIt seems that when you try to scroll a box in a direction it can't scroll, that scroll event goes straight to the window, instead of the next scrollable parent. If you're on a Mac, you can see the rubber-banding effect when you scroll a code example in the docs up and down. It's trying to scroll the window, instead of the scrolling box its inside.\n\nSo we determined this to be a browser issue, and there isn't really anything we can do about it.\n. Right, inner containers with a vertical scroll will continue scrolling the next parent up when they reach the bottom. The same doesn't apply to horizontal scrolling containers.\n\nAre you saying ui-grid fixes the horizontal scrolling issue?\n. @sgraham3311 Hm, well let me know if you come across a solution that gets around this, because it seems like a browser or operating system issue.\n. Two weeks is a good estimate. A few of us on the team are out of the office next week (vacation, off-site training), but the week _after_ we can put out a patch.\n\nThanks for continuing to use the framework! The work you've contributed so far is fantastic :)\n. What version of Android are you using, and what web browser?\n. Hmm, interesting. Have you noticed any performance differences between the two, or any other gotchas that would be worth knowing about?\n\nEither way we probably won't swap out a dependency until a v2 of the framework.\n. @soumak77, you're the best! You seem to have adequately answered this question, but @vincentmorneau, if you need any more clarification, let us know.\n. There is documentation on our modules [here](http://foundation.zurb.com/apps/docs/#!/angular-modules), but we could be doing a better job. There were talks to write more wrapper methods to make the API a bit less terse (see #390), but there's nobody working on it right now.\n. As for the event firing, a modal should always fire an event when it closes, no matter how the close happened. That makes sense.\n. That's for popups, not modals. But your issue is fixed in master?\n. Gotcha. Looks like this is fixed, then.\n. How does this interact with #640? Can we merge both?\n. Nice, thanks for implementing it!\n. Hm, try running `bower update` manually and see what happens. You might be asked to manually select a version of Angular to install\u2014just pick the latest one along the 1.3.x line and you should be fine.\n. Yep, you need to manually type in 1.1. Since minor versions can add new features or introduce deprecations, package managers like to safeguard you from making big version leaps automatically.\n\nBut if you're cool with that, you can edit your `bower.json` to look like this:\n\n```\n\"foundation-apps\": \"~1.1\"\n```\n\nBy taking out the last number, Bower will automatically update the package to 1.1, 1.2, and beyond.\n\nLet us know if you're able to upgrade properly. Unfortunately we introduced a bunch of big structural changes to our code in 1.0.2, which doesn't change how you use the framework, but does affect how your Gulpfile needs to work. The [release notes](https://github.com/zurb/foundation-apps/releases/tag/v1.0.2) for 1.0.2 cover the upgrade process.\n. Yep, that's a bug, see zurb/foundation-cli#11. The CLI is overdue for a new patch, so when that gets out it'll have this fix.\n\nGlad the upgrade process worked, though! We don't plan on requiring anything substantial like that again for the v1.x line.\n. We prefer using single quotes for all Sass/CSS values. What's the error you're getting?\n. Could you give us any more info on your Webpack setup, or a full console log? I'm trying to figure out if this is an issue specific to sass-loader. If we change these quotes, there's always the chance that a different processor could break, so I'd like to figure out if it's a problem on our end or not.\n. Ah yeah, the 1.0.2 upgrade guide was written before we introduced those two libraries to the template.\n\nAlso, since you've upgraded, you can remove `front-matter` and `through2` from your dependencies. Those are wrapped up in the `front-router` package.\n. It is `gulp-if`, see if that's missing.\n. Yeah, maybe try cleaning out your folder and starting again. The error here is related to through2 being used by vinyl-fs, which is being used by gulp. Dependencies get _complicated_. But it doesn't appear to be related to the instance of through2 that was being used at the top level.\n\nTo start over, try:\n\n``` bash\nrm -rf node_modules\nnpm cache clean\nnpm install\n```\n\nAlso, when you run `npm uninstall`, you need to add `--save` or `--save-dev` to make the change stick in your `package.json` file.\n. Nice! If you have any suggestions for Front Router, let us know.\n. Can you post a stack trace for that error, so we can see where in the code it's being generated?\n. Just published version 1.1.2 of the CLI which fixes this. See zurb/foundation-apps#11\n. We don't have any documentation for it, but we aren't doing anything weird with Angular, so there's no reason it wouldn't work.\n\nWe don't plan on writing anything in the near future. We're mainly focused on pure web apps, not web-to-native ports.\n. Which template are you using? Is it one from our resources page or the [official starter template](https://github.com/zurb/foundation-apps-template)?\n. Okay, are you running the downloadable templates or the one that's created when you run `foundation-apps new app`?\n\nAfter that, what command do you run and what's the error you get?\n. What's the error?\n. The setup for those templates is admittedly fairly messy\u2014we don't even have a good process for updating their dependencies. I can't say this will be fixed soon unfortunately, but we know it's something we need to do.\n\nI can ask today if we can carve out some time to change those ZIP files.\n. I believe [wiredep](https://github.com/taptapship/wiredep) is the more popular solution these days, but it's also in a state of flux because the Bower community is in the middle of an ongoing discussion on how the `main` field in `bower.json` works, so I'm not sure how reliable it is right now.\n. Updated all of the devDependencies in the template, and everything looks solid. [Here's the commit.](https://github.com/zurb/foundation-apps-template/commit/d1e0409954aee3cdf19c90d7ca57a719806e73bb)\n. It's in there right now, but not in a stable release. We'll see about getting a patch release out in the next week.\n. Do you mean flagging components that require JavaScript?\n. Are you seeing this in your own project, or just our template?\n. Alright, then it's probably an issue with how the templates are configured rather than the framework. We'll look into it.\n. If the plugin attaches the smooth scrolling behavior to the window, nothing will happen, because Foundation apps don't scroll on the window\u2014they scroll on inner `<div>` elements.\n\nPresumably you'd need to configure the plugin to attach to grid elements. You can target `.grid-content` specifically, because these are the scrolling elements.\n. Is this an accidental PR by chance? The package name has been changed to `foundation-apps-custom`, so this can't be pulled in as-is.\n\nAs for Angular 1.4, we haven't tested the framework with it yet, so we're staying on 1.3 for now.\n. Did you get any errors when running `npm install -g foundation-cli`?\n. Alright, in this case I think the Git clone failed. Does the `git` command work properly in your environment?\n. I see. The CLI is failing on `process.chdir()`, which is when it changes directory to the folder that `git clone` just created. Do you see that folder after running `foundation-apps new`?\n. Ah, so the issue is Node not being able to shell out to the `git` command. In that case I assume the CLI would report an error relating to `exec('git clone')`, but in this case it's not.\n. We haven't tested the framework on 1.4 yet, so stick with 1.3.x if you can. Although there's a decent chance it'll work with 1.4 right away.\n. @soumak77 If you haven't seen any issues, we could introduce a range of 1.3.x to 1.4.x for the Angular dependency.\n. @kuatsure Yes! I want to sweep the recent pull requests soon.\n. @sjenkinsdc Check to see if you have anything else on the port that's running. You can also change the port number on line 148 of `gulpfile.js`:\n\n``` js\ngulp.task('server', ['build'], function() {\n  gulp.src('./build')\n    .pipe($.webserver({\n      port: 8079, // Right here!\n      host: 'localhost',\n      fallback: 'index.html',\n      livereload: true,\n      open: true\n    }))\n  ;\n});\n```\n. Are you referring to deploying this repo, or a project you've created with our [project template](https://github.com/zurb/foundation-apps-template)?\n. Sounds good! zurb/foundation-apps-template#26\n. @soumak77 Thanks for putting this together :) Could you apply these features to the [external Front Router plugin](https://github.com/zurb/front-router) as well? We won't be dropping the built-in plugin until after 1.2, but new projects are referencing the external plugin.\n. The current version (1.1) is the correct one, it's just been a _while_ since we put out a patch.\n\nWe're trying to get one out in the next week or two, but the Foundation team is fairly resource-constrained right now working on Foundation for Sites 6, which is launching very soon.\n. Hey friends, we're going to be releasing version 1.2.0 on Friday. This week we're going to be asking the community what issues are most critical to get resolved this week, and we'll be reviewing every pull request. On Thursday we're QAing the release, and then on Friday we're tagging and deploying it.\n\nWith Foundation 6 out, we're about to shift our focus back to Foundation for Apps. We're thinking about what version 2.0 will be, but we aren't done with version 1.x by any means. I'm opening a new issue to track what people feel is critical to address this week: #725 Thanks for your patience :)\n. Done!\n. CC @rafibomb \n. The command is now just `foundation new`, as the CLI has been expanded to support the entire Foundation family. I updated the [installation docs](http://foundation.zurb.com/apps/docs/#!/installation) to reflect this. Sorry for the hassle!\n. Fixed now, sorry for the confusion.\n. @soumak77 Thoughts?\n. @soumak77 Awesome, thank you! We plan on reviewing every PR before Friday. Are there any particular bugs that you think would be critical? (Granted, this isn't a one-and-done thing, we'll be doing more bug-fixing in the future. But this is our first patch in a _while_ so we want to make it count.)\n. @agianikas Yes, we'll be testing in Angular 1.4. The `bower.json` will likely be a version range, to allow for 1.3 or 1.4.\n. We put out 1.2.0 on Friday. Thanks so much everyone for recommending bugs and pull requests for us to look at! [The changelog](https://github.com/zurb/foundation-apps/releases/tag/v1.2.0) includes an overview of our plans for 1.3, which will include a few deprecations, so be sure to take a look.\n\nIf there's anything that needs done for a patch to 1.2, let us know and we'll get to it. Thanks! :)\n. @soyuka I'd hold off on that for now, although we really appreciate the interest :)\n\nWe're in the early planning stages of Foundation for Apps 2, and we know we need to do a better job of sharing components between frameworks. So we're currently looking at which components are worth sharing, and how exactly we want to share them.\n\nHowever, we want to keep the community in the loop so they can contribute, so we'll try to publish our thoughts on that soon.\n. @soyuka I'm interested in exploring this option, although it begs the question \"just _how many_ of those jQuery plugins will we be rewriting in Angular?\"\n. @soumak77 I think @zurbchris (who wrote most all of the JavaScript for Sites 6) is very interested in this idea. You can probably count on two hands the number of jQuery functions that are useful when you need to support IE9: addClass, removeClass, hasClass, extend, on/off (not just for the easier syntax, but for event namespacing also).\n\nOver time the F4S codebase will rely on jQuery less and less, mostly for speed reasons.\n\nI think wrapping a series of plain JavaScript plugins in jQuery/Angular is sensible, but I've always wondered: are you losing a core benefit of Angular/React/etc., which is more efficient DOM manipulation? Presumably our plain JS plugin is going to be doing its own manual DOM manipulation, and the wrapper will just be calling those methods. So is it that problematic or not? Or is there a different way to address it that I'm not thinking of?\n. @marleneclayton You can rip the CSS out no problem, if you're fine writing your own JavaScript. There are _some_ `.ng-` classes in the code, but I think over time we can try to make that stuff more library-agnostic.\n. @hguiney It would be relatively straightforward to import any of the Foundation 5/6 CSS components into an apps project, especially the ones that don't share a name with an Apps component, like flex video.\n\nWe're currently working on the next iteration of Foundation for Apps, and looking at how we can better share CSS between the two frameworks. Because ultimately, a _lot_ of it is the same.\n. @soyuka We need to solidify some of our thinking before we can announce anything, but we can say Apps 2 will be built on Angular 2.\n\nI'd like to bring people in as soon as possible to get feedback on our ideas, but we probably won't have anything solid to show for another month.\n. @hguiney Yep, you can install the `foundation-sites` Bower or npm package alongside `foundation-apps`. In your Sass file, you'll need to selectively `@import` things, and then also add the `@include`s to print the CSS of those components. Looking at the 6 component list, you could bring in:\n- Top bar\n- Callout\n- Media object\n- Table\n\nOr if you turn off any Apps components, you could bring in the Sites equivalent.\n. @cfator We realized this, which is why Sites and Apps will be more tightly coupled in the future. The two frameworks will share most of their CSS, and the main differentiator will be how the JavaScript is implemented. Apps will still have some special components, like it's unique grid, notifications, etc. And of course Apps will be written in Angular.\n. @soyuka You'll use the two grids in tandem. So in Apps, we have `.grid-frame`, `.grid-block` and all that, and that will still exist, but the naming scheme will be different. And we'll do a better job of explaining it so it's not crazy confusing.\n\nThat grid will be used to carve up the sections of your app, and make your fixed headers and sidebars and so on. And then inside _that_ grid (which we're calling a frame right now), you'll use the traditional 12-column grid.\n\nWe tried overloading the two core apps grid classes, `.grid-block` and `.grid-content`, with these two kinds of functionality, but the more we built with it the more of a hassle we realized it was. So now there will be two grids.\n\nHere's a possible example. Note that `.row` replaces `.grid-container`.\n\n``` html\n<div class=\"frame vertical\">\n  <div class=\"frame-block shrink\"></div>\n  <div class=\"frame-block\">\n    <div class=\"row\"><!-- ... --></div>\n  </div>\n</div>\n```\n. @edhatricksmith I'm no longer with ZURB, so unfortunately I couldn't tell you :< But FYI for y'alls, ZURB is [hiring a senior engineer](http://zurb.com/about/talent/engineer) if you want to be a part of the process!\n. This is a newer library, so nobody has written any type definitions for us yet. We don't use TypeScript here at ZURB, so we don't have the knowledge (or time) to put one together ourselves.\n\nIf _you_ are interested in putting one together, we can promote it on our [Resources wiki page](https://github.com/zurb/foundation-apps/wiki/Resources). :)\n. We currently have a class to switch from horizontal to vertical, but masonry is definitely an interesting idea. One goal of the grid is to sort of wrap up the complexity of flexbox in a handful of easy to understand classes. So if the user could switch from horizontal to vertical to masonry, with options for even spacing and so on, that would be great!\n. We're about to redo a large chunk of this repo to incorporate the Angular stuff that's in development, so this probably won't be relevant after that.\n. We're using a handful of new features in Sass 3.3 and 3.4, so you'll need your Sass gem up to date to get everything working. We don't plan on having libsass support for the time being.\n. If you can, I'd recommend upgrading to at least Sass 3.3, which adds support for the `!global` keyword but doesn't actually change how variable scope works. 3.4 implements the [changes to variable scope](http://blog.sass-lang.com/posts/184094-sass-33-is-released).\n\nThe changes from 3.2 to 3.3 shouldn't break your codebase or any libraries you use.\n\nEdit: just realized this issue is in the Foundation for Apps repo. This library requires 3.4, while Foundation 5 requires at least 3.3 but we recommend 3.4.\n. Are y'alls having an issue with Foundation 5? This repo is for Foundation for Apps, which is still in alpha.\n\nBut we are indeed having issues with Sass compatibility right now in Foundation 5 due to a very small disparity between Sass 3.4 and libsass. See [this discussion](https://github.com/zurb/foundation/issues/5811).\n. Looks good, thanks! Although you spelled ZURB wrong ;)\n. Are you running Sass 3.4 and Compass 1.0?\n. We updated the readme to note that you need Sass 3.4 to make this all work.\n. You guys are the best, thanks so much for your input! To respond to a few points brought up here:\n\n**Using maps for their map-ness:** As Hugo and Ben said, the main reason we'd want to use arrays is to loop through their values, or perhaps be able to call variable variables. We're definitely using maps to make managing breakpoints more flexible; it makes outputting those `small-`, `medium-` etc. classes more manageable. I had also messed around with [putting CSS properties in maps](https://github.com/zurb/foundation-apps/blob/037f13fa364f19b5f3f108b37639155cdcf66a10/scss/foundation/foundation.scss#L45) and then outputting them with a mixin, but it seems too restrictive. The map can't reference other values in the map because it's not done being created yet, you can't add mixins, and so on. Maps have also been useful for a lot of little things, like [outputting values in mixins based on user input](https://github.com/zurb/foundation-apps/blob/037f13fa364f19b5f3f108b37639155cdcf66a10/scss/foundation/components/_grid.scss#L80).\n\nThe thing we're getting hung up on is where using maps gets us _structure_, but not _utility_. A few of you touched on this point. Ultimately grouping all button settings into one variable is nice because it gives our code a little more structure, but we would never need to iterate through the values of that map, and we would never need to dynamically access any value in the map. So that means the map exists _purely_ for structure.\n\n**The map accessing syntax:** As a few of you mentioned, the difference between `$button-background` and `foundation(button, background)` is almost nil in terms of remembering, but perhaps our audience will better understand what's happening with a variable. The average user of Sass probably understands (or in my opinion, only needs to understand) nesting, variables, partials, and maybe mixins and a few other things. Those core concepts get you most of the awesome functionality out of Sass, and they're relatively easy concepts to pick up. If you're a library author, then you understand all the more complicated bits, like functions, lists, maps, and so on.\n\nWe don't usually assume our audience understands the complexities behind our tools. (And that's not meant to be an insult, we just want our framework to be accessible!) The theory behind tools like Foundation and Bootstrap is that you can prototype a website without writing any CSS. With Foundation for Apps we're taking that a step further: you can protoype a single page web app without writing any JavaScript. Abstracting complexity is the name of the game here. Of course, it's not cutting advanced users out of the loop; if you know Angular you'll be able to take something from static prototype to functioning web app.\n\nAnd that brings us back to the point that _the map access syntax is awkward_. By using maps in this library we're passing along a bit of the complexity of maps on to the user in some small way. Of course they don't have to directly manipulate maps, but they have to access them using the map syntax, which is awkward, even for people who know what they're doing. I think accessing arrays in an entirely functional manner is just super weird, but I guess I understand why Sass was written that way.\n\nThere are also some little things that make maps a hassle. For example, we often have variables that are interdependent to make theming a little easier.\n\n``` scss\n$button-background: $primary-color;\n$button-text-color: if(lightness($button-background) > 50%, #000, #fff);\n```\n\nYou can't do this in a map, because you can't reference another place in the map while it's still being defined.\n\n``` scss\n$button: (\n  background: $primary-color,\n  color: map-get($button, background), // Nope\n);\n```\n\nThe solution we land on will probably be a more balanced approach to the \"super map\" I was discussing initially. If we use maps for components, each component might get a separate map. There's still an issue of access, though, and I think this syntax would be really awkward for users:\n\n``` scss\ncolor: map-get($f-button, color);\n```\n\nAlso I'm now going to try to wrap this up so I can stop typing. We're trying to figure out a solution soon, so just picking one will be more useful than our team endlessly speculating about different solutions. It doesn't even affect how we develop our components that much, it more affects how our users manipulate them. And I don't know that our users have ever run into problems with our variables interfering with other libraries, so if we just stuck with the \"old way\" of a million variables in a well-organized list, I don't know that people would complain.\n\nBut thank you so much @HugoGiraudel, @xzyfer, @Undistraction, and @benfrain for giving your input!\n. @AshleyAitken I think some settings will definitely use maps, like breakpoints. It makes outputting, say, [visibility classes here](https://github.com/zurb/foundation-apps/blob/037f13fa364f19b5f3f108b37639155cdcf66a10/scss/foundation/components/_utilities.scss#L41) way easier, and adding new breakpoints would be super simple. Component settings are the bigger concern. Let's say three big benefits of having arrays are _structure_, _looping_, and _variable access_. For component settings, you only get the first benefit, not the other two. There would never be a need to write an `@each` loop for button settings, nor would accessing the properties dynamically ever be useful. So you mostly get the benefit of hierarchy, and the question is if that benefit is worth the overhead.\n. @Undistraction I think I know what you're getting at when it comes to defining versus setting configuration. There's a question of usage, also.\n\nWe know our users are way into the settings file. A common criticism of front-end frameworks is that they're hard to override, so our settings file makes theming the framework components easier.\n\nSo _setting_ variables is a common practice for our user. But _accessing_ variables is probably a less common practice. There are common ones that people use a lot, like `$primary-color` or `$column-gutter`. It's mostly the more high-level settings that allow you to keep your designs aligned with the framework that people use a lot. But, for example, I doubt people often reference `$topbar-dropdown-link-color` in their custom CSS. They might set that variable to customize the framework, but they'll never reference it again.\n. @DerFrenk You make a good point, although we can't quite assume people are using an IDE with our library. But you're definitely right, since the accessor syntax is a function, an IDE can't intelligently make suggestions for you.\n. @viztastic Since we had this initial discussion, we have found maps to be most useful when used for a very specific purpose. Being able to write loops to output certain classes is super nice. It's especially going to make editing and adding new breakpoints super easy.\n\nThe variable dump solution isn't ideal, but it's still going to be easiest for our users to wrap their heads around. As for namespacing, we haven't encountered many conflicts with other libraries, although it's possible that really generic mixins and functions can fight with each other.\n. Did you run `bower install` to get the dependencies?\n\n**Edit:** Looks like that `postinstall` thing that runs `bower install` automatically disappeared from our `package.json`. So yeah, that might be your issue.\n. For sure, the repo is undergoing major surgery right now but it'll be back in soon.\n. Back in as of fd18b286fd9d15088e5da7b4ae054f34d6d7ebee.\n. Looks hot! Brandon and I will talk about how we want to shift over our docs pages. There's only a handful of essential ones, but they don't really fit into a single template right now.\n\n**Edit:** And of course eventually they'll go away in favor of actual documentation.\n. It'll probably help if we're more explicit about how we want the modal to work. Brandon and I are still learning Angular so the technical bits are still over our heads ;) But there are some specifics related to functionality we didn't get into.\n\nIn general, I don't think we're going to leverage any of the templating features of custom elements. (I don't think you implemented any of that but just so you know.) In general, layout components like grid blocks, modals, panels, and off-canvas are meant to handle basically any HTML, so I think we just want the fancy tags.\n\nFor components that have interactivity (i.e. modals, but not buttons), we need the basic functionality to be plug-and-play. So if you drop in the right HTML, it just works, and if you want to dive into advanced configuration (i.e. programmatically opening a modal, or adding an `onOpen` event listener) you have to write actual JS. It would also be great if we could mask as much of the event handling stuff as possible. So for example, where you have:\n\n``` html\n<span href=\"#\" class=\"close-button\" ng-click=\"dismiss()\">&times;</span>\n```\n\nIt would be great if the click event was attached automatically instead of being an attribute here.\n\nI talked with Brandon and we decided for now, modals should work like this:\n- Modals have to sit on the page they're being called in, kinda like how they work in Foundation 5. Ideally the user has the choice between doing that and referencing an external partial, that would be loaded in when the modal is triggered.\n- Triggering a modal doesn't change the route, and there's no animation configuration yet.\n\nSo here's an example of what we would like the HTML itself to look like.\n\n``` html\n<!-- Modal trigger -->\n<a fa-modal-open=\"theModal\">Open Modal</a>\n\n<!-- Modal -->\n<fa-modal id=\"theModal\">\n  <!-- Modal content -->\n</fa-modal>\n```\n\nThe idea being if you write this code, the plugin just works. Like I said, Brandon and I are still in the learning process, so we still need to learn how Angular directives differ from your usual JavaScript plugin, which is what we're used to working with.\n\nLet us know if you have any questions.\n. For now the code is separated by \"this is library code\" (at the root) \"this is stuff the user would edit\" (client/assets). I know it looks odd, but it was meant to be a stopgap measure. I was curious to get your thoughts on this too, like how we eventually distribute the code.\n\nWe thought it would be cool to distribute the code as the repo itself, so you could just clone it and get going. In this case everything would be inside the client folder. The problem is that it makes it kind of a hassle to update, because to update the core library you'd have to download new files and cut and paste them over the old ones (or we'd automate that with the CLI we eventually build), unless you can think of a clever way to handle versioning and updating.\n\nThe other option, which mimics how Foundation 5 works, is that we separate the library code and the stack into separate repos. (Admittedly this is how it was set up before.) So to create a project you clone the stack and then install the library code using Bower. This makes updating a lot easier, and also keeps the library files out of version control. If we go this route, we can quickly set it up by (force) pushing all the code on this repo back into `foundation-angular`, and stripping out the library code and using Bower to install the Sass and JS from this repo.\n\nAlso whichever route we take, we'll write a CLI in node that handles it all for the user; it's just a matter of how we handle it.\n. Yeah all the Angular directives would be part of the library stuff as well. So the Foundation Bower package would deliver the `scss` and `js` folders, along with all of our other dependencies.\n\nMaybe we could eventually also condense the partial stuff (routing, animation, etc.) into a single Gulp plugin as well, but that's probably a more complex process so we can look at that later.\n. A generic `fa-open` is a really good idea. The spec we're writing up uses targeted attributes, but we like this idea more from a user perspective. We also like the option of having a generic `fa-close` inside an element with state, or a targeted `fa-close` for closing something outside of the element. A third option we'd also like is `fa-toggle`, and you can probably guess what that does. So that gives developers the flexibility to define open, close, and open/close functionality on controls.\n. @AntJanus Foundation 5's JavaScript suffers from a crippling lack of documentation, so if you could help us get off on the right foot that would be fantastic :)\n. Just internal documentation. For external documentation we'll just want to explain the basics of each API, like how do you open something, close something, etc. And yeah, we won't use JSDoc or anything like that, since we write out own docs. You're free to write that style of documentation (with `@param` and all that) if you want but we won't run it through any of those doc generators. It's more important that future generations understand how it works when they have to dive in and fix bugs and such.\n. Sweeeeeeet.\n. Regarding the docs, we'd like to slip a Markdown parser into the template pipe so we can write documentation in Markdown, as it just makes things a lot faster to write and maintain. Some Markdown parsers can also detect the three backticks for a code block and wrap it properly and add syntax highlighting. We use marked on Foundation 5, which also has a [gulp plugin](https://www.npmjs.org/package/gulp-marked).\n. @whodidthis The basic components will work fine, but the ones that require JavaScript (panels, popups, dropdowns, etc.) will be written as Angular directives. For now Foundation for Apps and Angular will be tightly coupled, although we do expect people to try and port it to Ember or other frameworks.\n\nA core idea behind this framework is that you won't need an understanding of Angular or even JavaScript to get started prototyping single-page web apps. We're abstracting out some of the complexity of routing and so on, so you'll only need to understand some of the basics, like what a template is, or why links use the attribute `ui-sref` instead of `href`.\n. @davidkpiano As far as choice of framework, you're right that technologies come and go, and maybe in a year people won't care about Angular. But in the short-term, being opinionated makes this thing easier for us to build, and easier for our users to develop on. More portability could be a long-term goal, but it could end up being a hassle to maintain.\n\nAs far as the active state idea, we've got you covered! Our components all use the class `is-active` to denote an active state, and we can make that a customizable class most likely. When it comes down to it, most of our plugins are just different ways of showing and hiding things, so they all use the same active class.\n. @HansUXdev Regarding our motion components, currently each one is a mixin that allows you to write a custom animation with specific timing, delays, etc. The code should also only output the keyframe animations you need, so if you don't use our prebuilt classes, it should only output one set of keyframes per mixin called.\n\nAs far as animated pagination, we're thinking we could accomplish something similar by allowing animation classes to be used on tabs. So when tabs change they play an in/out animation defined by the developer.\n. @HansUXdev @zurbrandon Yep, using UI Router's sub-views you could accomplish something similar. The main difference is if you want each tab to have its own URL or not.\n. @dipongkor We've had some issues with view animation, so for now, try animating your views with just in, not out. Like so:\n\n```\n---\nname: profile.personalSettings\nurl: /personalSettings\ncontroller: PersonalSettingsCtrl\nanimationIn: fadeIn\n---\n```\n\nThe animations are fast enough that it will still work pretty good. We're working on an overhaul of view animations, which will make simultaneous in/out animations for views work well: #386 \n. @jmkenz Opened an issue at zurb/front-router#4 to track this.\n. @davidkpiano We do want to add sizing classes for panels, it's just a matter of how. Right now panels work off of a maximum width or height, rather than a percentage. Using the `panel()` mixin (which still needs a lot of adjustment) you can define this size yourself, but we'll also want a few sizing classes for rapid prototyping. We could also allow for percentage sizing, using the same 12-column grid, but you still need to cap the size or it's going to get hilariously tiny on small screens.\n\nPerhaps the sizing classes can apply to panels and columns? So given an element with these classes:\n\n``` html\n<div class=\"\n  small-12\n  medium-6\n  large-4\n\n  panel\n  large-block\n\"></div>\n```\n\nThis element is a 12/12 width panel on small screens, a 6/12 width panel on medium screens, and a 4/12 width panel on large screens. It is a lot of classes, though, and you still have to specify `large-block` to indicate at what breakpoint the element morphs.\n\nWe had looked at turning panel into a sizing class itself, like this:\n\n``` html\n<div class=\"\n  small-panel\n  medium-4\n  block\n\"></div>\n```\n\nThis element would be a panel on small, and a 4/12 block on medium and up. The shift from panel to block is inferred due to the use of a sizing class. But this might also cut out the ability to resize panels at different breakpoints, unless you make the classes even longer, like `small-panel-4`, `medium-panel-6`, etc.\n. @jwvanderbeck Oh you'll definitely be able to use panels on any screen size, the question is if you'd ever want a grid element that is inline on a small screen to then transform into a hidden panel on a large screen.\n\nFor now we're assuming that's not a common use-case and not supporting it initially. The opposite will be the far more common scenario: you have a hidden off-canvas panel on small screens, that becomes an inline grid element on a larger screen.\n. @jwvanderbeck Your first use case should be possible in JS, as all of the openable/closable plugins emit open and close events that you can hook into.\n\nThe second use case is a little more tricky, and may just need to be custom-coded. Panels are positioned using `position: absolute`, and then transitioned in and out using `transform: translate()`. There's a global active state class (right now it's `is-active`, but we should probably make it user-configurable) you can hook into to override the default behavior of panels when they're toggled. It is something that's come up for an internal project ZURB is working on that's using Foundation for Apps, so we're looking into it.\n\nHm.. _maybe_ we can tweak the panel mixin to accept custom \"in\" and \"out\" states to make that functionality easier to write. But I can't promise that for 1.0, which is in a few weeks ;)\n. Yeah, we've run into quite a few problems with the grid on mobile which we've spent a while researching.\n\nAnother big one is scrolling panes. The grid does \"fixed positioning\" with a vertical flex container, and the middle area is just scrollable. Problem is, iOS loves to get finicky with this, trying to scroll the whole window instead of the inner container. The way around it is JavaScript hacks that selectively disable scrolling or prevent the propagation of the various `touch` events and so on. It kinda sucks that our grid will probably have a JS dependency, but y'know, _mobile browsers_.\n\nIf you or anyone else has experience with it, let us know!\n. @Martinspire We spent a while butting our heads against this scrolling issue in iOS7 on Friday, and today we opened the same demo page in iOS8 and it worked just fine. So Apple fixed it! But we still need to make sure it works in iOS7 and Android 4. (And Windows Phone 8, let's say.)\n. You're right, a month from now iOS8 adoption will probably be high enough for it to not matter, although it has been slower than past releases.\n. @Bernardao I do think that was a point in favor of `group` and `block`, they both had more distinct meanings. The main issue is they're both short, one-syllable words, and we routinely confused them in conversation, especially because they overlap in functionality. (For example, unlike Foundation 5 rows, F4A's groups can have sizing classes just like blocks.)\n\nSome other folks have also pointed out that `block` and `content` are used by CMSes, so we might need more specific classes. Maybe `grid-block` and `grid-content`? That uses the existing terms we have, but namespaces them to make them more distinct.\n. @Bernardao @Failcookie Also, it will be possible to change the column count from the default of 12, but you'll probably also want to disable the grid classes then, or you're going to have _like a billion_. So your semantic, percentage-based grid would work like:\n\n``` scss\n$total-columns: 100;\n\n// Full width on small, 50% on medium and up\n.some-column {\n  @include grid-block;\n\n  @include breakpoint(medium) {\n    @include grid-size(50);\n  }\n}\n```\n\nThere is potential for us to build percentage- and ratio-based grids later and let people pick, but I doubt it will be a 1.0 feature.\n. @kenwheeler We considered using an attribute like `data-layout` to store the grid classes, but ultimately we decided we were solving a problem better solved by just using mixins. The documentation for this framework will emphasize the Sass way of building components much more than the Foundation 5 docs, which puts all of the Sass stuff at the bottom.\n\nThe two classes we settled on for the grid are `grid-block` and `grid-content`. This naming convention fits better with existing components, since the name of the component is actually in the class. The namespacing prevents any conflicts with frameworks like Drupal, which use the classes `block` or `content`.\n\nWe still need to work out a few other naming conventions. One of them is related to the default behavior of the grid. Flexbox can make all of your grid columns equal height, but then none of the boxes will wrap, which is required for a traditional responsive layout. Right now wrapping is the default, and you can add the class `stretch` to disable wrapping and stretch the columns out. However, in our development we've found stretching to be a more common behavior and we're adding `stretch` to our grid blocks all the time.\n\n**So here's the question: should the default behavior be stretching or wrapping?** We'll make one the default behavior, and add a class for the other.\n. @kenwheeler We tend to agree, and also `stretch` is a problematic class name because a block can have a `shrink` class, which auto-sizes it to its natural width or height. But those are two totally separate behaviors with similar names.\n\nI think the main distinction is that stretching makes sense for the big structural components of your app, like the panes and so on. But once you get to a content area, maybe you have a grid of cards that you need to collapse from 3-up to 2-up to 1-up. In that case you need wrapping because everything has to stack. (Although for even-width layouts like that, we have `[size]-up-[n]` classes that do that for you.)\n. @jwvanderbeck, thanks so much for your feedback!\n\nTo your point about \"groups\" as a concept, you're totally right, and that's why we scrapped them in favor of having just blocks. The two layout objects shared a lot of similar features, which is why we ended up merging them. The reason we're shying away from `content` as a standalone class is because it's a very generic term, and some CMSes (such as Drupal) use `block` and `content` classes already. Of course, class collision will always be a potential issue when you mix libraries, the word \"block\" is _so_ generic that we're probably better off prefixing it with the word \"grid\", just to be safe.\n\nAs for scrolling, what browser are you using? We're having some troubles with Safari right now, but the newest versions of Chrome and Firefox should handle scrolling content just fine. All grid blocks will scroll by default if their content overflows.\n. @jwvanderbeck Unfortunately vertical sizing is not as full-featured as horizontal sizing, which is a quirk of flexbox. You can size vertical grid units these ways:\n- **Stretching:** this is the default behavior; the block takes up all the leftover space it can.\n- **Shrinking:** add the class `shrink` and the block will only take up as much vertical space as its content needs.\n- **Manual sizing:** use the `flex-basis` property to set a px, em, rem, vh, etc. value to size the block.\n\nI'm sure what you're trying to do is size with percents, and unfortunately you can't. We were hoping to make the behavior of the horizontal and vertical grid identical, but that's the one place where they aren't.\n. @jwvanderbeck So one thing to understand is that you don't need to alternate blocks and content blocks. It's not like rows and columns in Foundation, where they have to alternate. So your last example can be condensed down like this:\n\n```\n.frame.vertical\n    .block.content.shrink\n    .block.stretch\n        .block.content.small-3\n        .block.content.small-3\n        .block.content.small-3\n```\n\nBlocks always move horizontally by default, and that behavior doesn't cascade down to nested grid elements. So you always need to define a vertical grid on every block that you want to have vertical children. In the above example, only the highest-level grid element (the app frame) is vertical. Those `small-3` blocks will be arranged horizontally.\n\nThe grid is still missing formal documentation (and will soon be [refactored slightly](https://github.com/zurb/foundation-apps/pull/78)), so props to you for trying to figure it out :)\n. @djgadd We do need responsive versions of the `shrink` class, and also probably an `expand` class to revert a grid element back to the default behavior, with responsive versions of that class as well.\n. I think switching to libsass would be ideal, and we'll probably do it pretty soon, since they just recently implemented maps. I'd like to see if proper `@each` functionality will make it in soon, which so far is the main way we access maps in our codebase.\n\nA common complaint about Foundation 5 is that it takes a long time to set up: Node, Git, Ruby, Bower, Grunt, and our gem are all dependencies. With libsass we can cut out the Ruby dependency, with libgit we can git out the Git dependency (we use it in F5 to download the stack), and with a bit of finagling we can run locally-installed copies of Bower and Gulp instead of requiring them globally.\n\nIf we work at it we can have a pure JS stack, which would be real nice.\n. So Foundation 5 downloads the Compass and Libsass stacks using Git, just cloning the repos we have set up. The problem is, you need Git installed on your system beforehand, so that adds another dependency. We can use libgit2, which is a portable, C implementation of Git to do that instead. There's a node version called [nodegit](https://github.com/nodegit/nodegit), so we can basically run `git clone` using JavaScript instead of the user's command line.\n\nAs for the `@each` thing, what I'm talking about is doing:\n\n``` scss\n@each $key, $value in $map {\n}\n```\n\nThere is another way to do this in libsass, but we might hold out a _little_ longer and see if proper `@each` support gets in there, instead of refactoring what we have right now.\n. We've moved the codebase to libsass; it should be merged into the master branch tomorrow.\n. @Martinspire It's not. Our [starter template](https://github.com/zurb/foundation-apps-template) for Apps uses Libsass.\n. @ilanbiala Which specific part do you feel is too opinionated? Our stack, our Angular helpers, or Angular itself?\n. @ilanbiala Ah yeah, understandable. I think the eventual plan before the first release is to split up the codebases, so the library itself stays here, and the actual stack moves to another repo and becomes the template project. The Sass, JS, and maybe the Angular helpers will be distributed through Bower. That way you can use our components and directives any way you'd like.\n. @viztastic The documentation is currently being written, but not all of the pages are on the master branch yet.\n. Closing this as we are **_mere days from release :O**_\n. @ilanbiala We'll have a few template projects ready for people to look at and download.\n. @AntJanus Sweeeet. Would it make sense to eventually package these as Gulp tasks? I've been looking into writing Sass unit tests and I could run those just by using a separate Sass task in Gulp.\n. Yep, we have plans to improve menu bar, namely by adding support for sub-menus and improving the switch to mobile.\n\nThat being said, we're also working on Foundation for Sites 6 right now, and we're trying to overhaul the top bar. We think it's inflexible and hard to customize, since it's basically designed to do one thing well. We're trying to unify patterns between the two frameworks, so whatever ideas we have for Sites will likely make it back to Apps. The main difference is that the Apps menu bar will be written in Flexbox.\n. @philippeluickx We'll need to take a hard look at the keyboard thing pretty soon here, because it does seem to work poorly with certain layouts, especially ones with a fixed footer and header. It's also possible that different mobile platforms handle the keyboard different with regards to calculated screen size, how it overlays the page, and so on.\n. Yeah, the codebase is still sort of in a \"random things are broken\" state, although the plan this week is to start scaffolding out the documentation, so that should change soon.\n\nAll of the components on the Playground page should work. Notifications don't work anymore because they haven't been converted into an Angular directive yet; it's still just a vanilla jQuery plugin. As for the links, they do work, they're just aren't very many yet. You probably tried clicking on the things in that component list off to the left... secretly, they aren't links, just some weird, deceptive table of contents ;)\n. @ilanbiala A lot of the code is still in flux, so we probably won't accept any pull requests until 1.0 is out. However, we would _love_ your feedback on any of the existing components or features. Ask us questions, make suggestions, tell us we're wrong, etcetera. (Me, I'd like to see more people comment on our [grid classes](https://github.com/zurb/foundation-apps/issues/36), because we need some feedback on them.)\n. Hard to say, but it won't be more than a few weeks until 1.0 is out, so we'll let y'alls know closer to the ship date :)\n. I've noticed the Angular error too, but the page loads fine for me. Are you accessing the site on port 3001?\n. @YuriGor @mehlah What OS are you guys on?\n. @YuriGor The server we're using is just for testing, but it will probably make it into our template stack as well. It's a little easier than configuring the routing to work in a sub-directory.\n\nHowever, you'll be free to run your code in any environment you like.\n. @t1mmen There's been an \"angular is not defined\" error for a while, but it was actually unrelated to the core Angular functionality. Either way the code causing that issue has been removed (9f55f8a9901ceda84e12bf2d0bd7a0b48499e9b8).\n\nAs for the Sass, do you have Ruby and Sass 3.4 installed?\n. @YuriGor If you're running the code in a subdirectory (i.e. `localhost/foundation-apps/build`) it won't work out of the box\u2014you have to tell the UI router what directory the app is in (see [here](https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions#issue-my-assets-and-templates-are-not-loading) for a solution).\n\nIt's also possible your xampp setup is messing with Gulp's server, so instead, you can run `gulp build` to build the site once without running a server.\n. Just a heads up, friends, we're trying a different server plugin for Gulp that seems to generate less errors and just work better.\n\n**The port number is different\u2014it's 8080** instead of 3001.\n. When we first started planning the plugins, we made a bunch of really basic ones as a proof-of-concept, using jQuery and basic DOM manipulation. Our ace engineer @AntJanus has spent the last few weeks converting them all into actual Angular plugins. Notifications, popups, and action sheets still haven't been converted into Angular. Once that's done we'll drop jQuery and just use what Angular has built-in.\n\nThe real plugins are under `js/angular`, while the old plugins are under `js/foundation`.\n. @ilanbiala No problem, just looking at the code it probably looks weird :)\n. @Failcookie The JS plugins are being developed in `js/angular`. (The old plugins are in `js/foundation`, and they're still being converted to Angular directives.) Our Angular guy is out for the week, and he's the most equipped to explain that stuff ;)\n\nYou might also be interested in looking at our Angular helpers, which are in `gulpfile.js` under the `copy-templates` task. This bit of code converts configuration data stored at the top of every template file (under `client/templates`) into routing, animation, and controller configuration for Angular. It allows us to quickly define URLs for pages, how those pages animate, and what Angular controllers they use, without writing any JavaScript.\n. I was able to write a basic controller that pulled data from an API and spit it out. After writing the controller, I added it to the template like this:\n\n```\n---\nname: page\nurl: /page\ncontroller: PageControllerName\n---\n```\n\nThe only things we're \"enforcing\" with Angular so far are the use of ui-router and ng-animate, but even that stuff you could rip out if you knew what you were doing.\n. @ilanbiala You can see all of the animation mixins under `scss/components/_motion.scss`, but we haven't yet properly implemented them with all the Angular stuff. We were using animate.css to do basic testing of the concept.\n. There are two kinds of `block`s in the grid system: ones used for layout and ones used for content. To use a block for content, add the class `content` to the block. This turns off the flexbox functionality and adds gutters. So they're like columns, more or less.\n\nSecond, I'd recommend not using set heights for your elements if you can help it\u2014let the content dictate the height instead. A block will automatically scroll if its content is too tall for the box, but you can add `overflow: hidden` to the block to disable that. We should probably add a no-scrolling class.\n\n**Edit:** Here's how I would modify your markup:\n\n``` html\n<div class=\"block\" style=\"padding-top:7.5px; padding-bottom:7.5px\">\n  <a href=\"#\">\n    <div class=\"medium-1 content block\" style=\"background-color:gray;margin:0 10px;overflow: hidden;padding:0;-webkit-box-shadow: 0px 2px 5px 1px rgba(0, 0, 0, .50);-moz-box-shadow: 0px 2px 5px 1px rgba(0, 0, 0, .50);box-shadow: 0px 2px 5px 1px rgba(0, 0, 0, .50);\">\n      <img src=\"http://placehold.it/100x100\" style=\"width:100%;position: relative;\">\n    </div>\n  </a>\n  <div class=\"medium-10 content block\" style=\"-webkit-box-shadow: 0px 2px 5px 1px rgba(0, 0, 0, .50);-moz-box-shadow: 0px 2px 5px 1px rgba(0, 0, 0, .50);box-shadow: 0px 2px 5px 1px rgba(0, 0, 0, .50);\">\n    <h4 style=\"margin-top:9px;line-height: 1.2\">Title <small>(Platform)</small></h4>\n    <p style=\"font-size: .7rem;line-height: 1.3;\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolore quaerat, assumenda natus! Amet numquam praesentium ab molestiae, excepturi minus dignissimos nemo, quam magnam tempore fugiat, sit reprehenderit laborum perspiciatis atque?</p>\n  </div>\n</div>\n```\n. Brandon and I are going to review all of the components today, so we'll get back to you soon.\n\nOne thing we were wondering is if there would be a way to add onOpen and onClose events to these components, or at least a way callbacks to specific directives. This was something I was trying to implement in my test plugins, but Angular isn't really into the jQuery `on` method. Most of the Foundation 5 JS plugins fire events when plugins do things, and for the ones that don't it's a commonly-requested feature to add.\n. Go for it!\n. If it works standalone then we could put it on NPM. If it's not, that's also probably fine too, since at the moment it's probably somewhat tightly coupled to our stack and our JS anyway.\n. If it requires some of our own code to work, it might make more sense to keep the plugin in this repo for now. It's very Foundation for Apps + Angular specific at the moment, so at least if we keep it here all of our development can stay mostly in this one repo. I guess I don't have a huge preference though ;)\n. I guess the stack will have to pull the Gulp plugin out of the Bower package, I don't know if that's a bad practice or not. Dev tools typically come from NPM.\n. @rafibomb is writing our documentation, so all of this stuff will be super useful. Once we're done moving it to our formal docs we can just remove the file.\n. Can you show an example of how to open/close/toggle components in JS?\n. Other things I thought of:\n- How to set up a base URL if the app is running in a subdirectory (in case you're uploading code to a server)\n- How to set up rewrite rules if you aren't using the test server\n\nThese things are already covered in the UI Router wiki ([here](https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions#solution) and [here](https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions#how-to-configure-your-server-to-work-with-html5mode)), so we can probably just explain the basics and then link to this. As long as people are aware that those things come up we should be good.\n. You can merge it in and we can take it from there while you work on other things.\n. Oh one thing we'll need to document is how you as the Angular engineer properly import these modules if you're building your own project. Or whatever typical boilerplate stuff you think is necessary to properly document an Angular module.\n. Good catch, that's a holdover from Foundation 5. At the moment the global Sass file is being imported in `foundation.scss`, not inside individual files.\n. Totally! The official release is next month. By next week we should have the template project set up, which will make installing and updating a project much easier.\n. We're actually going to switch the compiler to libsass 3.0.1 in the next week, although I don't know if it will make a difference or not.\n. @jpdesigndev It will be an entertaining ride, but with libsass's commitment to catching up with Ruby Sass, it has a good future ahead of it.\n. We've found it easier to use and understand than Grunt, and it's reached a point where a lot of the big Grunt plugins also have Gulp versions.\n\nOur template project will use Gulp, but it will be possible to use our components with pretty much any other build system. The main thing you're going to lose for now is use of our Angular helpers, which do the routing and animation stuff. People are already talking about trying to port this to Ember when it comes out, so I could see people recreating the Angular helpers as a Grunt task.\n. Once you've installed everything, run `npm test` to get the test server going, and then go to `http://localhost:8080` in your browser. If you specifically go to `localhost:8080/home`, you can see a kitchen sink with most of the components we have.\n\nWe're working on the formal documentation right now, but it hasn't yet made it into the master branch.\n. Oh, I totally missed that leftover code. You can remove all of that stuff under the `@import` statements.\n. @jwvanderbeck Oh yeah, our stack is just a starting point, and we don't intend to prescribe exactly how to use our components, so the choice is more for what our stack should use as a default. Ideally the codebase works with Ruby Sass 3.4 and libsass 3.0+, which I think is doable, but little things keep coming up.\n\nThe main goal for the stack would be that it's effective as a rapid prototyping tool. As for taking code to production, we expect developers to mess with the structure of their app a lot more.\n. @AntJanus The docs folder should be all lowercase, or it's going to bug me ;) It was made capitalized on accident it would seem.\n. @AntJanus Oh well it wasn't you who renamed the folder, but I haphazardly changed all instances of \"Docs\" in the gulpfile to \"docs\" not thinking it mattered, so that was my bad.\n. @AntJanus Can you remove the whole folder from version control in one commit, and then re-add it in a second one? Just renaming the folder destroys the history anyway so it's probably not a huge deal. Sweeping structural changes are probably still okay before 1.0.\n. Is there not a clever/really irresponsible way to transfer all of the attributes of the `<img>` tag to the `<svg>` tag that's injected?\n\nIf not I think telling people \"don't get fancy with these\" is fine. Put your click events on anchors outside the icon, etc.\n. Sounds good. I'm trying to think, what are common things people might try to put directly on icons? Click events seem like an obvious one. But we'll probably just train our users to only put icons inside of other interactive things. Like if you have a button with an icon, make a `.button` element and put your directives on that.\n. Great! As for the actual icons, Brandon and I have a list of the ones we've agreed with the Iconic folks to use, so we'll get those in version control soon.\n. Yeah, we can probably put them in a folder at the root of the repo. So in production you copy them out of `bower_components/foundation-apps/iconic`. I'ma go figure out which icons those are today and I can push them to this branch.\n. Merge'd\n. Yep, they definitely should. The user should be able to change the names and values of the breakpoints as they please.\n. Yep, looks like they're hardcoded right now. We'll resolve that soon.\n. The grid classes just had a lot of work done to them, and proper support for the `$breakpoint-classes` variable was a part of that.\n. I haven't had time to work on it; we're finishing up a few final components (typography, forms, and menu bar namely) first. This PR should be ready by the end of the week, though.\n. Grid classes successfully refactored, and surprisingly working right in the newest Chrome, Safari, and Firefox, and IE10. Just working out some final kinks.\n. Boy howdy do I love this chain of dependencies haha. I guess this is another compelling reason to use Ruby as the default Sass compiler; nothing is changing on that front for a while.\n. We'd like to tag something as a release candidate next week, we just have a small number of components that still need finished.\n. We have [this template](https://github.com/zurb/foundation-apps-template) that pulls in the Apps codebase through Bower. This is what our end users will eventually use.\n\nIf you want to incorporate the code now, you can run `bower install zurb/foundation-apps --save` to get the code in your own stack. The bower package includes the Sass, JavaScript, and Gulp plugin for routing.\n. Ah, well we just got it working in the past few days. :)\n. Strange, I'm not sure why it's looking for a repo called \"bower-foundation-apps\". When I run the same command it gets this repo. You can also try being more explicit:\n\n``` bash\nbower install https://github.com/zurb/foundation-apps.git\n```\n. @jwvanderbeck How do you think we should change the delivery of the files?\n\nFor now it's likely that the Angular helpers will require a somewhat specific build process, but we also don't expect many Angular developers to take them to production, so they can just be removed in that case.\n. @jwvanderbeck Our documentation will have a getting started page that outlines these two options\u2014using our pre-made template, versus installing the components yourself using Bower.\n. We're planning on tagging a release candidate tomorrow, and we can try to outline what's left for the 1.0 release. I can tell you that the codebase is more or less feature-complete, so our big focus for the next few weeks is code cleanup, writing documentation/tests, and bug-fixing.\n\nWhen 1.0 is out, we also plan to maintain a roadmap of planned new features. We know there will be a lot of holes in the feature set, or people are going to try to do things we didn't anticipate, so we already have ideas for new features and components that we don't have time to get in for 1.0. \n. @viztastic We want to do tutorial videos, it's just a matter of if we have time before 1.0. But this grid is so different that we obviously need to educate people on how it works.\n\nWhat we will have for 1.0 is a handful of templates that use all of the different components in various ways.\n. [Yay release candidate!](https://github.com/zurb/foundation-apps/releases/tag/v1.0.0-rc.1)\n. I'll see if I can mess around with your markup, but here's a few things:\n\nYour first panel has two classes that conflict: `shrink` and `xxlarge-1`. `shrink` reduces the panel's width (in a horizontal grid) or height (in a vertical grid) to whatever the size of the content inside the panel is. `xxlarge-1` sizes the column equal to 1/12 of the parent.\n\nThe panel should also be written as an Angular directive to get the proper functionality:\n\n``` html\n<div fa-panel position=\"left\" class=\"no-scroll xxlarge-block xxlarge-1 shrink\" id=\"statspanel\">\n</div>\n```\n\nIt can then be opened and closed by adding the attribute `fa-toggle=\"statspanel\"` to any other element.\n\nTo your last point about alignment, unfortunately you can't align individual children in a grid, only the grid parent. So when you set `align-right` on a block, your aligning all of the blocks _inside_ that one to the right.\n. I just removed that code since we aren't using it anymore. ce6dac4d497c10d13551c382380ae4d5c7c6bbab\n. Can we include both tasks, using Ruby Sass as the default one? It would be useful if Travis could try compiling with both so we can check for errors.\n. If Ruby Sass works, you can merge it in and I'll make it work in libsass eventually.\n. I removed a few older branches, and it looks like all the ones leftover are in active development, even if they don't have PRs.\n. I don't see those on GitHub, so if you happen to have them on your local machine, then yeah, they can be deleted.\n. Yeah I just added that and didn't update the documentation to specify that you now need Bundler.\n\nIf possible we'd like to avoid what happened with Foundation 5, where Sass 3.4 introduced a breaking change and none of the existing Foundation projects out there had a Gemfile, so anyone who upgraded their system-wide Sass was screwed. And of course, it's always worthwhile to specify your dependencies.\n. I was updating the readme on Friday but didn't finish it. I'll get that change in today.\n. Instructions to install Bundler were added here: 78e1b0a38e2ac7fcfa907968d71a13b9838bb83f\n. [We have styles](https://github.com/zurb/foundation-apps/blob/master/scss/components/_forms.scss#L234) for the native `<progress>` and `<meter>` elements, although the styles aren't yet finalized, and they still need mixins. The `<meter>` element is cool because it can automatically change between high, medium, and low colors based on its current and max value. Unfortunately it's not supported in IE10.\n. The component hasn't changed since it was originally written a few months ago, so it should still be working. The `<meter>` element in particular has a lot of options, though, so it is kinda confusing; [here's](http://css-tricks.com/html5-meter-element/) some good documentation on it.\n. The codebase will indeed be compatible with Ruby Sass and libsass, but since libsass is in active development it will be something of an entertaining ride making sure the codebase works with it. That being said, we're big libsass fans so we'd like the framework to work with it.\n. So, because of some quirks with how CSS handles vertical alignment, it's not possible to size vertical grid elements with percentages. Your options are:\n- Have the block fill all leftover space; this is the default\n- Have the block shrink with the `shrink` class; this means it will only take up as much space as it needs. This is useful for headers and footers, which tend to be thinner anyway.\n- Size the block explicitly with the `flex-basis` property. It has to be an explicit unit like `px`, `rem`, `em`, or `vh`; it can't be percentage.\n\nIt is a weird inconsistency to be sure, but it will be reflected in our documentation.\n. Blocks use `overflow: auto`, which means they only show scroll bars if there's too much content in the element. There's currently no class to change that, but you could add `overflow: hidden` to a grid element to stop it from happening.\n\nTo achieve the layout you're describing, here's the layout I'd suggest:\n\n``` slim\n.vertical.grid-frame\n  .shrink.grid-block.header\n    p Header\n  .grid-content\n    .grid-block#row\n      .grid-content.small-3.sidebar\n      .grid-content.small-6#main\n      .grid-content.small-3.sidebar\n    .footer\n```\n\nOnce you're inside a `grid-content` element, the grid changes slightly to act more like the Foundation 5 grid. This is what you want, because you don't want that sub-grid to try and stretch the length of its parent\u2014you just want the whole parent to scroll like a normal container.\n\nIn the above example, fill `#main` with sample content and you'll see that the whole lower container will scroll, not just the center area.\n\nNow, can you make the sidebars, which have a gray background, stretch to the bottom of the parent until it starts overflowing? Not easily. Unfortunately vertical sizing is still a hassle in some scenarios.\n. Awesome! Glad I can help. We know the grid is kind of confusing; we've got some good documentation in the works that we should have in the master branch soon.\n. One of our guys has that issue also, where `bower install` is putting things in `app/bower_components` or something like that. I tried searching around for where a system-level setting for that exists but I couldn't find anything. So we can just add a `.bowerrc` to lock that down.\n. Do you have a visible example in the repo? Or is it similar to the panel thing we were talking about on the phone yesterday?\n. I can't test it right now, but there might be a quick fix we can do. It seems like the issue is that \"hidden\" components like panels are briefly being exposed while views shift around.\n\n``` scss\n// Select all views\n[ui-view] {\n  // Only select views being transitioned\n  .ng-enter-active, .ng-leave-active {\n    // Only select components inside those transitioning views\n    [fa-panel], [fa-offcanvas] { // Etc.\n      // Now hide those suckers\n      display: none !important;\n    }\n  }\n}\n```\n. @ilanbiala The animations will follow the format prescribed by Angular's animation module, where transitions are structured like this:\n\n``` scss\n.transitionName {\n  &.ng-enter {\n    // Before state\n    &.ng-enter-active {\n      // After state\n    }\n  }\n}\n```\n\nOur transition mixins will allow you to create animations with more nuance, by adjusting direction, origin, timing, and so on.\n\n``` scss\n.customTransition {\n  @include slide($args...);\n}\n```\n\nBut if you want to write your own totally different transitions, they'll work as long as they use the `ng-` classes.\n. :+1: \n. That was my concern, I'm not sure if there are any minor structural differences in output, but I don't think there are.\n\nSo yeah, a diff check would definitely be useful, although I know right now that libsass doesn't work, so initially it shouldn't be required for a passing build. I think 1.0 will be Ruby Sass only, but the gap in features is pretty small, so either we can work our codebase backwards slightly or wait for libsass to add a handful of new features and fix a few bugs.\n\nLet's add tasks for it but not build it into the initial test suite. Once we're more confident libsass will work consistently, we can add libsass compilation and diff checking to the formal test process.\n. Yeah, that's fine. Our main tests will be the JS and the Sass, compiled with Ruby.\n. In progress here: #146\n. Merged here: 459c49ce522d7a82fc65e3cb15879ed657fcbfaf\n. The `close` directive is triggering an error and not functioning. This happens whether or not the attribute has a value. Try messing with it in the index file in our documentation, which uses a panel for the sidebar nav.\n. :+1: \n. Pretty sure this commit inadvertently fixed this: daa858918ca4dd6c32d3648ff127e5ffea0cebfb\n. :+1:\n. I just added `bundle` to npm's post-install process, which will properly set up the gems for you. You're supposed to run `bundle` once as a apart of the setup process, but that wasn't in the documentation. So now it does it for you!\n. The revamped classes that use `ng-enter`, `ng-enter-active`, et al. were merged in here: 1f222b694d3ed3ae91aba101c32a666fdacbc689\n. Added in this commit: cfa79f97352eae00cdea9b318e7657a6932d32fe\n. Talked with @zurbrandon and we agree, the directive name should be the same, making the revised syntax:\n\n``` html\n<zf-accordion>\n  <zf-accordion-item></zf-accordion-item>\n</zf-accordion>\n```\n. I'M ON THE CASE\n. Looks like the last thing to do would be to add plain English descriptions for each page, so it doesn't just show a raw view name with hyphens in the search results.\n. I'm doing a sweep right now. You think it's okay to delete your test pages? We've got live examples (mostly) working on the pages for each component.\n. Talked to @zurbrandon, we'll go without notification support for now.\n. Fixed with: 7632696c4925c614d9f5560904e81f9ac733b3d1\n. Okay, confusingly this bug stopped happening.\n. Yep, I tried to do it last night but I got errors, so I must not have configured it properly. The pristine `app.js` doesn't need the markdown or hljs modules.\n. @viztastic For the code samples, we're shifting from using a Markdown parser to using an Angular implementation of highlight.js, but not every sample has been fixed yet.\n\n@AntJanus Ah okay, so this is like the other animation stuff where you need an in-between setup phase. Normally the overlay is `display: none`, and then when a modal is called in, it needs to be set to `display: flex` and `opacity: 0`, _first_, and then set to `opacity: 1` to trigger the transition.\n\nThe modal overlay doesn't need any animation support\u2014it should just be hardcoded to fade in and out. So if I add those two states (probably just with `ng-enter` and `ng-enter` active to keep it consistent, and scrap `is-active`) would that work?\n\nUnfortunately we can't do the lazy method with `pointer-events: none`, because IE10 confusingly doesn't support it.\n. Fixed in this commit: 63fb722c13d1317a6bc20d1c03ebd74501ffd615\n. `padding` class added here: fdbff5d248b5889c29653eb06b775226fd89cf20\nRemoved padding from container components here: daa858918ca4dd6c32d3648ff127e5ffea0cebfb\n. :+1: \n. Pull request in progress here: #269\n. `display: block` is what makes the element show. The `!important`, although a bit annoying, is necessary because a single class can easily be overridden by most other selectors. And there's no other quick way to show/hide elements\u2014you can't use `visibility: hidden` or `opacity: 0`.\n\nWe don't currently have a solution for using these classes with inline or inline-block elements in Foundation 5, either. We'd either have to add modifier classes (`show-for-medium inline`) or create new ones (`show-for-medium-inline`), which will add a ton of code.\n\nIf we added the option to specify your visible state in the mixins, would that be helpful? We have mixin versions of the visibility classes now:\n\n``` scss\n.thing {\n  @include show-for(medium)\n}\n```\n\nWhat if you could change the `block` to another value like `inline-block` or `table-cell`?\n\n``` scss\n.thing {\n  @include show-for(medium, inline-block)\n}\n```\n. Alrighty, we updated the visibility classes to use `flex` instead of `block` when the element has `grid-block` in its `class` attribute.\n\nThe visibility mixins were also updated, so you can override the use of `block`, like so:\n\n``` scss\n.thing {\n  @include show-for(medium, table-cell);\n}\n```\n. @jmkenz For Foundation 6 we're going to switch to `max-width` media queries to avoid the `display: block` issue altogether. I think eventually we'll transplant that fix to Apps as well.\n\nSee zurb/foundation#6687\n. @jmkenz It's only for `.show-for-*` classes, so that you never need to assign `display: block` to an element. We can refactor the visibility classes to only apply `display: none` to an element, negating the need for element-specific visibility classes (`table.show-for-medium` and so on).\n\nIt does break our mobile-first rule, which is sort of a tough call to make, but we've only made that call for this specific feature. The class itself still follows mobile first logic: \"show this on x size and up\", even if the rule in the background is `max-width`.\n. Fixed in this commit: 63fb722c13d1317a6bc20d1c03ebd74501ffd615\n. Fixed here: b4aed57c33fdb9561663c3dad24dfdac019f56e8\n. Doesn't appear to be an issue anymore.\n. Done!\n. Closing and adding to our list of known issues.\n. This is being fixed [in Firefox 35](https://gist.github.com/joaocunha/6273016/), which will be out in January. It will be a momentous occasion.\n. I think you were looking at that page while I was doing a rebase, so that nonsense ain't there anymore.\n. Fixed in this commit: b18f48fab0f302d4f08a50d6ca525cb4d273294c\n. Doesn't seem to be an issue anymore.\n. Good idea, we'll get somebody on it.\n. Site just went live so the 401 is gone, and I just updated the readme: 7d1c876956182fa2a4a2f8f133fb69aa83e55552\n. Went ahead and converted them to anchors. As far as accessibility, it's something we'll have to wait to look at farther down the road when the framework is more solid.\n. No, we love nitpicking! :) Thanks.\n. [Here you are.](https://github.com/zurb/foundation-apps/blob/master/CONTRIBUTING.md) May need some fleshing out but it's a start.\n. What version of Sass are you compiling with?\n. Oh! Yes. I didn't look close enough at the code sample.\n\n`foundation.scss` imports the entire framework at once, so you don't need to import `_global.scss` after it. And the settings file should be imported before the Foundation libraries, so it can be used to override variables.\n. Yes, there should be one. We'll get one in there shortly.\n. I moved the settings file to the `scss` folder so it'll show up in the Bower package. Just need to do some testing with the [template stack](https://github.com/zurb/foundation-apps-template), which already has a settings file. It needs to import the settings file _not_ in the Bower package, but the one in the `client/assets/scss` folder instead.\n. I'll look into it, but thankfully that step of the process is just a welcome message\u2014it doesn't set anything up.\n. That might work. Also, the source code for the CLI is here, in case anyone who knows more about Node than me can help :)\n\nhttps://github.com/zurb/foundation-cli\n. @jsmreese I can see in your screenshot that it's connecting the CLI's main JavaScript file to a command on your system (`C:\\Users\\John...\\npm\\foundation-apps`), is that command there at that path?\n. @peterblazejewicz I implemented your fix, which should solve the problem.\n\n```\nnpm update -g foundation-cli\n```\n. Awesome! @jsmreese @dhye360 @peterblazejewicz let me know if it works for y'alls.\n. Alright, I'll look into it. Thanks so much for being helpful and patient, guys :)\n\nIn the mean time, you can do what the installer does by hand:\n\n```\nnpm install\nbower install\nbundle\n```\n. @narration The initial hope was to use more portable libraries, but it didn't totally pan out. For example, we were going to use nodegit, which is a portable version of Git for Node, but it wasn't able to clone over HTTPS, so we couldn't use it. Some of the Node-based tools we use or have considered using are in active development, so sometimes things get weird.\n\nSeeing the issues that have cropped up, though, I think we'll take another look at it. Bower and NPM both have programmatic APIs, although Bower's isn't too thoroughly documented from what I can tell. But we can make it work! The only odd bird is Bundler, although the codebase is very close to working with libsass, at which point we can just drop Ruby from the stack entirely.\n. @viztastic Well, the framework came in a little hot last week, so we'd just like to get a slightly more stable version out for people using the framework this early. It's just a lot of little bug fixes.\n\nThe Bower package is also currently missing the `_settings.scss` file, so if you install the framework standalone that file isn't as easy to find.\n. Can any Windows users help us test a new build of the CLI? We're working on improving error-handling and cross platform support.\n\nHere's how to run the test install:\n\n```\ngit clone https://github.com/zurb/foundation-cli.git\ncd foundation-cli\nnpm install\nnpm test\n```\n\nIf all goes well, you'll see three green check marks at the end of the install. If you get an error, please paste it in here so we can take a look. Thanks!\n. @tnedich Fixed that: [3d9b47](https://github.com/zurb/foundation-cli/commit/3d9b4737d80205311ac58364f4ea8ecc462b8acb)\n\nThe command should at least start now.\n. Hmm, well luckily we're going to remove Ruby from the install process entirely, so I won't stress about that. The Git, npm, and Bower parts working are the most critical.\n. @jgamao Which error are you getting? And is it with the current CLI or this test version?\n. @fhassan2014 Ah, sorry about that, there was a line of debugging code I left uncommented that forces an error to happen. If you have time, could you try testing it again? I'd appreciate it :)\n- Delete the `test` folder the CLI created\n- Run `git pull`\n- `npm test` again\n. @fhassan2014 The template project uses Bundler to install the right version of Sass for you. Run `bundle install` and then try compiling again.\n\nThe next version of the CLI won't require Ruby or Bundler, thankfully :)\n. @fhassan2014 Ah that's fantastic :) Thanks again for trying it out.\n. @fhassan2014 You can just run `gulp` if you have it installed globally. The way the `watch` and `build` commands work changed slightly in the new CLI, although the functionality is the same.\n\n`foundation-apps watch` is identical to `npm start` which is identical to `gulp`.\n. @fhassan2014 Try just running `gulp` inside your project folder instead, since that's what the `watch` command is running. (If you don't have Gulp: `npm install -g gulp`)\n\nThe `watch` command will make more sense once all three of the Foundation frameworks use the CLI, and then `watch` becomes a shorthand for \"run whatever this project needs to run\".\n. @soumak77 [Ink](http://zurb.com/ink/) is the third one, which is being rebranded as Foundation for Emails when v2.0 comes out in a few months. Unifying the branding partially represents our push to share more code, styles, and best practices between the three frameworks.\n. @fhassan2014 The second error `EADDRINUSE` means you already have a server for another Apps project running, or at least you have something else running on port 8080. Close out your other build process, run `gulp` again, and then it should work.\n. @fhassan2014 It looks like the Sass isn't compiling to CSS; that's why there's a \"Not Found\" error in the console, for `css/app.css`. Are you still getting the same `gulp-ruby-sass` error in your other screenshots?\n. @fhassan2014 I just noticed you're running a pre-release build of JRuby, so I think that's the issue. The error is being generated by the Sass executable, meaning it's a Ruby error, not a JavaScript one. You might need to switch to a stable version of JRuby, or file an issue with their team.\n. This is a somewhat older issue, so I'm going to close it out. The original issue filed has been fixed, and version 1.1 of the CLI, which we published last month, greatly improves the stability and error-handling of the project creation process.\n\nIf y'alls have any more issues with the CLI in the future, do let us know :)\n. Doesn't look like it says ZMusic anymore. http://foundation.zurb.com/apps/app-templates/travel/#!/\n. Fix'd.\n. Thanks!\n. There's a Markdown parser in our docs still, so it's converting that URL into an anchor. We should be able to remove that pretty soon, because all of our docs are written in pure HTML now.\n. Fixed with #208.\n. Thanks!\n. I had noticed an issue with the `get-border-value()` function not returning values properly, but that's a small problem. I think there are also a few places in the code where we use `@if not`, and libsass doesn't properly support `not`. So you'd have to change any statements like that to be more specific, i.e. `@if $val == false`.\n. Alright, I'm going to call libsass support _official_.\n\nOur plan is to eventually compile the documentation and the template stack with libsass by default, and drop our Ruby dependency, but of course we'll keep testing in Ruby Sass as well.\n\nThe Foundation 5 CLI gives the user the option to pick their compiler. Would people care if we dropped that choice and just made libsass the default? I feel like if you're savvy enough to want to use the new Sass 3.4 features, you're savvy enough to know how to switch a Sass compiler ;)\n. It'll definitely be in 1.0.3 :)\n. I think that would be a better option, changing the `$orientation` parameter of the `grid-frame` and `grid-block` mixins. The default should be `horizontal` to match how the class system works.\n\nIf you'd like to make the change I can merge it in :)\n. Ah yeah, good catch. Let's say `$orientation`, because that same term is used for menu bar and tabs as well.\n. Awesome, thanks!\n. We added a fix to the template repo: [cf139fc51fea7df85268c8b35425ab0014342d26](https://github.com/zurb/foundation-apps-template/commit/cf139fc51fea7df85268c8b35425ab0014342d26)\n. Whenever you see a \"Cannot find module\" error, it means you're missing an npm package, so you can run `npm install` to get the package. So this is likely an issue with the CLI.\n\nHere's a question, @shanecarmody: do you typically run `sudo npm install` versus just a regular `npm install`? The CLI currently has issues with people who have Node configured to where you need `sudo` to install things.\n. I noticed that the Yeoman CLI, which I borrowed a few libraries from, doesn't directly address this issue\u2014they link you to tutorials on how to properly configure Node instead. Possibly because it's a tricky problem to solve.\n\nIt's tricky because you have to detect that a normal `npm install` is failing, and then follow it up with a `sudo npm install`. I think the error is usually `EACCESS`, so you can probably catch that, but maybe there are other random ways an `npm install` can fail also.\n\nIt's also tricky for me to test because I don't have access to a machine that requires `sudo` when you install things, and I'm not sure if there's a way to fake that environment. I'd have to borrow a coworker's computer instead ;)\n. I think as a stopgap we can add a check to see if you ran `sudo npm install -g foundation-cli`, and then every time you build a new project tack on a warning saying \"you might need to run these commands by hand\" or something like that.\n. The issue with machines that require `sudo` is a known one, and we're looking to fix it shortly.\n. Ah, we need to remove those, as the framework doesn't currently support RTL. It's on the list of things we want to add in the future.\n\nInstead of using the `$default-dir` and `$opposite-dir` variables, we might look into using [css-flip](https://www.npmjs.org/package/css-flip) instead, which would automate a lot of that process.\n\nAnother request we had for Foundation 5 is better support for bi-directionality, which seems like a trickier problem. If anyone has input on that, or the use of CSS Flip (or similar tools), let us know!\n. RTL support is now on our roadmap, but it probably won't happen until we're a few patches in.\n. @jahtalab We don't have a specific timeline right now, but now's a good a time as any to examine our approach to RTL. We're also working on Foundation 6 right now, which will continue to have RTL support, so we should use the same approach for both.\n\nWe had looked at using [css-flip](https://github.com/twitter/css-flip) to make the process more automated, but I don't think it will cover every use-case we have in our codebase. It also only works with CSS, not Sass.\n\nIf you're interested in contributing, that would be great! We're currently figuring out if there's a more elegant way to implement RTL than our current setup with the `$default-float` and `$opposite-direction` variables. Maybe a more generic `flip()` function that converts from left to right, and can reverse percentages automatically?\n. Did you create your project yesterday by chance? The template stack was briefly missing autoprefixer, so Safari wouldn't have the `-webkit` prefixes it needs to work. Try pasting this code into your existing `gulpfile.js`, where the `sass` task is. It's from lines 72 to 83:\n\n``` js\ngulp.task('sass', function() {\n  return gulp.src('docs/assets/scss/app.scss')\n    .pipe(sass({\n      loadPath: ['scss'],\n      style: 'nested',\n      bundleExec: true\n    }))\n    .pipe(autoprefixer({\n      browsers: ['last 2 versions', 'ie 10']\n    }))\n    .pipe(gulp.dest('./build/assets/css/'));\n});\n```\n\nProjects created now shouldn't have this problem.\n. Thanks!\n. Thanks!\n. Looks like the partial for the off-canvas plugin is missing. Check your `build` folder; do you see a folder called `partials` with a bunch of HTML files inside?\n. Scratch that, it was an issue with the Gulpfile. [This pull request](https://github.com/zurb/foundation-apps-template/pull/6) fixes the problem.\n\nIf you haven't made any changes to your Gulpfile, just **paste in the [fixed file](https://raw.githubusercontent.com/zurb/foundation-apps-template/master/gulpfile.js)** and you'll be set.\n. I'm still learning Angular, but one thing I've been wondering is if it makes sense to write each module's template HTML in the JavaScript itself, instead of in a separate file. On the one hand, it would make integrating modules into your project easier, as you'd only need to copy on file, instead of two files from two different folders.\n\nOn the other hand, it becomes more of a hassle to maintain because all your HTML ends up in strings instead of a nice, easily-indentable HTML file.. What I don't know is if it's considered a bad practice like it is in jQuery, where it's considered a better idea to use native DOM manipulation (`$(document.createElement())`) or use a templating engine like Handlebars, than have jQuery parse an entire string into a DOM tree.\n\nTo be sure some of our components are more complex than others. Action sheets, tabs, and notifications probably have the most complex markup. Other components like panel and off-canvas are a single line of simple HTML.\n. @AntJanus That makes sense, I've worked with giant strings of HTML so I know it's not really a best practice. I'd be in favor of the folder approach, then, since that would better segment each directive as an actual plugin that you can choose to either import or not.\n. When I landed on this page I didn't realize it was a PR so I changed it myself :P And made a few formatting tweaks also. Thanks for catching it!\n. We're working on a fix to make the menu auto-close.\n. This has been fixed, but it also spawned this issue: #278\n. :+1:\n. I added it to the template repo also: [cf139fc51fea7df85268c8b35425ab0014342d26](https://github.com/zurb/foundation-apps-template/commit/cf139fc51fea7df85268c8b35425ab0014342d26)\n. I'm working on it right now, but in the mean time, you can read [the Sass file itself](https://github.com/zurb/foundation-apps/blob/master/scss/components/_grid.scss), which is very thoroughly documented.\n. And done! The grid page still needs further iteration, but the mixins are now documented.\n. Good catch, thanks!\n. Are you using our template stack or your own build process? See if `js/vendor/iconic.min.js` is being compiled into your JavaScript.\n. Yeah, it looks like the Gulpfile in our template stack is out of sync with what's in the docs. I'll make a few changes and then it will work.\n. Fixed that business with [this commit](https://github.com/zurb/foundation-apps-template/commit/aba7b096f9d7e28969663dc7f24fdcb8b4b3cbe3) on the template repo. You can either cut and paste the **[fixed Gulpfile](https://raw.githubusercontent.com/zurb/foundation-apps-template/aba7b096f9d7e28969663dc7f24fdcb8b4b3cbe3/gulpfile.js)** into your existing project or create a new project with `foundation-apps new project`.\n. Thanks!\n. Definitely! We have a few ideas for this, maybe you can see about implementing.\n- Create a motion stagger mixin so people can set the timing of the stagger.\n- Put the `ng-enter-stagger` class in a variable so people can change it.\n- Create a few classes that use the mixin, like `short-stagger` or `long-stagger`.\n. Merged in #394.\n. Merged in #247 which implements this.\n. This is probably an issue with your build process; you'll need add a copy task to your Gruntfile or Gulpfile that copies everything from `bower_components/foundation-apps/js/partials/` to `build/partials/`, where `build` is the name of your distribution folder.\n. Actually, we recently fixed an issue with the template's Gulpfile not properly copying the framework's partials. Try copying and pasting **[the new Gulpfile](https://raw.githubusercontent.com/zurb/foundation-apps-template/master/gulpfile.js)** into your existing project, or make a new project with `foundation-apps new appName` and it should work.\n\nLet us know if you run into any issues!\n. Is there a way we can handle the dependencies without creating a separate repo? We handle our front-end dependencies through Bower, so we can't add them to this repo's `package.json` necessarily, unless there's a way we can have two package files in this repo\u2014one for compiling the documentation and one for people installing the package.\n. Foundation for Apps is now on npm as `foundation-apps`.\n. Thanks!\n. Since you can see the function call right there, it should be enough to be able to change the percentage value right in the function call (or scrap it entirely if you want to use a different color). Otherwise we'd need extra variables for every variable that used color scaling.\n. @AntJanus `npm start` should use the Gulp executable file inside the user's `node_modules` directory, which is why you don't need it installed globally (npm scripts check inside `node_modules/.bin` before the user's path). However, it seems like this sometimes doesn't work on people's machines for some reason.\n\n@erredeco Looking at that log file, the actual error would have been output in your command line. Could you try re-running the command and paste whatever comes up in the command line?\n. We're working on a fix to detect when the user has multiple servers running and warn them with a more friendly error.\n. Yep, we're pretty close. Although the fact that every tool in the chain (libsass, node-sass, and gulp-sass) is in active development is occasionally problematic. If one library in the chain breaks it will cause problems for our users. This came up a few times during development. Once, a minor patch of gulp-sass caused our build process to fail every time, so we had to lock it at a specific version number. libsass on Windows is also a little weird because node-sass will try to compile a new binary, which requires Visual Studio to be installed on the user's machine.\n\nThe Ruby version of Sass may be slow, but it's definitely more stable. Of course, over time that will likely become less of an issue, which is why we definitely want the codebase to be compatible with both flavors of Sass.\n\nBut just to get some clarity, do you think our template stack should not require Ruby? Because the framework in general technically doesn't require Ruby; you can use libsass also. Like I said, it's close, and it does compile, but I think a handful of minor functions output values incorrectly.\n. @ilanbiala Yep, I think that's what we would end up doing. Sass remained unchanged for so long we weren't used to having to manage our dependencies this carefully with Foundation 5 ;)\n\nA pure JS stack was our initial goal, so we'll get there soon enough.\n\nThe Visual Studio thing threw me for a loop though, I didn't know about it until a few months ago. From what I've learned, node-sass will try to install a pre-compiled binary on your machine (it has two for Windows, 32-bit and 64-bit), but if it fails, it will try to compile a new binary, and on Windows that requires Visual Studio to be installed.\n\nGranted, if you use Windows for web development you're probably used to having a more involved setup process, but ideally the CLI has as little overhead as possible to get going.\n. Closing this as libsass is definitely in the cards for us soon.\n. We're pushing out some updates this week. Specifically, once we get a 1.0.1 release out the door, we'll update the templates to have the new files.\n. We'll likely put out a minor patch this week, and when we do the templates will get a ton of bugfixes.\n. Thanks!\n. Looks like it was an issue with selector specificity; the `is-active` class was targeting other components inside the accordion. #259 should fix it.\n. Typically we don't want hover states to override active states, as the extra affordance isn't necessary. It's a relatively easy feature for individual developers to override if they want it, though.\n. Should be fixed with #258 and #300.\n. There may be cases where you want to force at least one tab in an accordion to stay open, so most likely we're going to introduce a new attribute to this directive that lets you adjust that setting. We just need to figure out what to call it.\n. If you use the two attributes (`multi-open` and `collapsible`) in any combination that would be good. And `false` should be the default for `collapsible`, so by default, there's always at least one open item in an accordion.\n. Thanks!\n. Thanks!\n. Are you using `ui-sref` to create links? That's how you make links with UI Router, not using `href`.\n\nIf you have a view called \"about\":\n\n```\n---\nname: about\nurl: /about\n---\n```\n\nLink to it using this code:\n\n``` html\n<a ui-sref=\"about\">About</a>\n```\n. @tomasbana After reading your comment more closely, I realized you're clicking the example links in the starter template. Those are deliberately not functional, but we could take the `href=\"#\"` out of the menu items so that error doesn't come up.\n. No they aren't, and I'm not sure how that happened. We'll get it fixed shortly.\n. Alright, we updated the panel documentation to be more detailed. It's been deployed to the live site\u2014enjoy!\n. Any version of Ruby that supports Bundler and Sass will be fine, but I'm not sure what the minimum version would be, so we'll look into it.\n. Looks like they're both 1.8.7, so we can make a note of it. We won't likely get into the nuance of managing Ruby versions in our documentation, because the user doesn't need to write any Ruby to work with our template stack; Ruby just needs to work. If you're incorporating our codebase into your own stack, you're probably savvy enough to handle the dependency stuff yourself.\n. Yes, that's how it should be. We've already fixed that issue in the template's gulpfile, so new projects won't have this issue.\n. The data still has to be serialized somehow in the Sass to get it to the JavaScript, but to be sure maybe trying to format it as actual JSON isn't the best idea. Ruby Sass has an `inspect()` function, which will create a string representation of any data type, but it isn't in libsass yet. So there's no way to natively serialize a map in libsass for now, which is why I wrote this function.\n\nSince this function is basically just to transmit a list of basic key/value pairs (always a string paired with another string), it doesn't necessarily need to be output as actual JSON; it could have been something closer to a CSV.\n\n@AntJanus was able to work out the cross-browser quirks with parsing the JSON, but libsass does mess it up because it outputs with different quotes. libsass support is a short-term goal, so we'll probably need to revisit how we pass these media queries around then.\n\nI don't see us dropping Ruby Sass until the two libraries are totally in sync, and when that happens we won't necessarily need to drop one or the other, because they should work the same. Ruby Sass is still the \"canonical\" version.\n. I like this idea, since `&` and `=` can't be in the keys or values, which means you can easily split the string by those characters. I'll put this in a branch and @AntJanus can finish the implementation on the JS end.\n\n**Edit:** Oh, sorry, I didn't realize _you_ already did it for us :) We'll just make sure this works cross-browser then.\n. A null link will generate an Angular error.\n\nTo make it easy, I just brute-forced it and used the live URL of the link, like all the other links. 7baa963d8070fc5715c3c4de48eacaa21aa3f106\n. @wtfribley Yep, the dream was to have a purely CSS-positioned dropdown, but it opens you up to a few weird issues.\n\nTether is a really nice plugin, but it has one blind spot that's unique to our situation: it doesn't work great with elements inside multiple scrolling containers. This is critical for us, with the way our grid system works.\n\nAlso, from what I can tell, it would be difficult to add custom animation to Tether elements, because they're positioned with a `transform`. With Tether using that property, we can't override it to do any animation in and out. That's not super critical, though, since for popups having a fade in and out is probably good enough for now.\n. I'll sidestep the issue for now by just center-aligning the demo button.\n\nThere's a few more things we'd like to do with Tether, like creating a generic `pin` directive to attach any element to any other element, but that's farther down the road. We'll need to figure out how to better make Tether work with our stuff. At that point we'd probably just make the action sheet use that same code, and then it would be way more flexible.\n. Ah, that's because the grid elements inside the modal only have left and right padding. The bottommost element of each modal has a bottom margin, which is what creates that extra space. We'll update our examples to look better.\n. Looks like it's failing on the `git clone` step; do you have Git installed on your machine and a `git` command in your path?\n. It's written in the readme that you need it, but we should probably still add a warning when that error comes up. Never hurts to streamline things!\n. This is the change that introduced the issue: d1ce6aa6e9b6c4e544ba9a0a14cb3518f174d630\n\nThe intent was to have links in panels close the panels when you click on them, so we'll need to rework the directive slightly.\n\nMaybe that code should only be in our documentation-specific JS? That's why it was added, to close our nav menu when you click on something.\n. Yep, panels and off-canvas menus are meant to be totally general-purpose.\n. Yep, we can definitely look into it.\n. Are you building the documentation (this repo) or the template stack? And is there any other output in the command line you can paste?\n. Do you use JRuby? I did some research and it sounds like this is an issue with that. Another Apps user [had this problem](https://github.com/sass/sass/issues/1551) and was able to solve it by downgrading to version 1.7.15 of JRuby.\n. This is a side request, but since you're working on the refactor I'll ask: is it possible to grab the breakpoint list through a service or something? We have the code to grab them from the Sass for Interchange to use, but we had a request to make that list something you can access from anywhere. It might already be in there but I'm not sure.\n. Waiting until later makes sense I'd say.\n. Yep, 1.1 should be out before we're gone for the holidays.\n. @jaysonminard This refactor has been in place since 1.0.2. A big thing to put in a patch number, yes, but it was very early in the framework's life, and we needed it out anyway. We're putting out 1.1 tomorrow most likely.\n. There's another Webkit-specific option called `-webkit-transform-style: preserve-3d`. Is there an example I can test this on?\n. Ah okay, no problem. There's a few things we need to make more clear in the documentation, like how a prefixing tool is required.\n\nCurious, did you make a Grunt version of our Gulp plugin that generates routes?\n. Well if you ever have time to put together a clean scaffold that uses Grunt instead of Gulp, throw it up on GitHub and we can link to it on our resources page.\n. Thanks, the Less detection was really confusing.\n. Yep, we need to look into it, I noticed the same issue with modals.\n. @AntJanus Looking at `index.html`, there are two example modals, both with `overlay=\"false\"`, but an overlay still appears on the first one, `#mainModal`.\n. @AntJanus Ah okay, I guess I assumed that you could turn on and off clicking to close outside of a modal, independent of if the modal has a visible overlay or not. We don't need to change that right now, though.\n. [This commit](https://github.com/zurb/foundation-apps/commit/cf4b0b41dcd68cf9182e95cbc45f609653163fb8) swaps the defaults for the modal parameters. Now by default, modals will have an overlay and clicking the overlay will close it. These two properties can be independently overridden with `overlay=\"false\"` and `overlay-close=\"false\"`.\n. We haven't worked out all of the kinks with libsass quite yet, but we're working on it. Is there any more to the error you got or is that it?\n. Alright, we'll do some testing.\n. Are you importing the settings file before the main framework files? I think it's trying to find a variable called `$include-css` that's in `_settings.scss`.\n. Yep, that was the issue. We'll make sure to include the settings file in the Bower package in a future update.\n\nWe're also working on better documentation on how to use Foundation for Apps as a dependency.\n. How does removing the dot change the logic?\n. Ah, I see. So all of our globs shouldn't lead with `./`?\n. We had this issue with panels as well, and solved it by removing the hardcoded transitions from the panel Sass, and instead having the directive automatically add a default animation. So we can do the same thing for notifications, where it just picks a good default based on the position (e.g., a top-right notification will slide in from the right).\n. @AntJanus Ah, well that actually sounds fine as a default. I can just remove the hard-coded `transform` on notifications (they're positioned with `position: absolute` and aligned with negative margins so it'll be good), allowing the motion classes to take over.\n. Our original plan was to put `is-active` in a variable, so you could change the active class on the entire framework, but do you think each component's specific active class should be customizable as well?\n. Right, I wasn't going to implement that until we had it working on the JS end too. But people like being able to change any class name we set, so we should look into it. It could be another parameter we serialize into that `meta` tag. Maybe we can set that up in 1.1.\n. You can reset the change and then force push the branch back to GitHub. Messy, yes, but it works. Just copy the text of the file you changed first so you don't lose it.\n\n```\ngit reset --hard aca168f0b825d50dfbc13e0b3dc9bb0169f5c69f\ngit push origin master --force\n```\n\nThat will overwrite your fork's master branch so it doesn't have that last commit.\n\nAnd to be sure, I would **_never**_ recommend force pushing to the main repo's master branch ;)\n\n**Edit:** Your other option is to run `revert` on the commit, but that creates a _new_ commit that says \"I reverted this other one\".\n. Closing this, as we're instead going to change `is-active` on every component to be referenced by a variable.\n. The CLI is trying to find the `bundle` command. You should have Ruby on your machine, so run `gem install bundler` and then try again.\n. Hm, we'll look into it. Either way, if it got that far your project is fine. Just run `bundle` inside your project and it will be finished.\n. @cshenry13 Do you mean the contents of the new app's folder is empty?\n. Hm, that would suggest the `git clone` failed, but it should have tossed an error of some kind.\n\nCould you try running `git clone https://github.com/zurb/foundation-apps-template.git myApp` and see if it works? That's the exact command the CLI is running to initially set up the project.\n\nBy the way, we're working on a [big update](https://github.com/zurb/foundation-cli/pull/6) to the CLI which will drastically improve error-handling, so working through these errors is super helpful :)\n\n**Edit:** And for reference, this is the entire manual install process:\n\n```\ngit clone https://github.com/zurb/foundation-apps-template.git myApp\ncd myApp\nnpm install\nbower install\nbundle\nnpm start\n```\n. Alright, looks like it's an issue with your machine's Git installation then. If you Google that error there are a few Stack Overflow discussions with possible fixes.\n. @iamontheinet @bclinkinbeard Have y'alls had the time to figure out the issue with your installs? One possibility is that Bundler is failing because it needs admin privileges. So if it fails on line 141 again, try running `bundle` manually, and if that fails, run `sudo bundle` instead. Some environments require admin privileges to install gems.\n. @anevaude Strange, do you see the steps underneath `\"Installing dependencies...\"`, like `npm => bower => bundler`?\n\n`npm install` would be the first command it's running, so it must be freezing there.\n. @spsaucier Ah yeah, that would be an issue. We should be able to force each install command to be non-interactive.\n\nWhen you did a manual install, did you ever need to use `sudo`?\n. @spsaucier Hmm, well maybe Bower was the only issue. Did you get hangups in any other step of the process when using `foundation-apps new`, like the `npm` step?\n. @spsaucier Hm, alrighty then. We're working on [some upgrades](https://github.com/zurb/foundation-cli/pull/6) to the CLI, the last thing we're doing is some Windows testing. I'll add a note to make NPM and Bower noninteractive.\n. Awesome! Happy to help. :)\n. Looks good, so if you write `@include breakpoint(xxlarge only)` and `xxlarge` is the last breakpoint in your list, the output should just be `@media screen and (min-width: 120em)`, right?\n\n**Edit:** Tested myself, indeed that's what it does. Thanks!\n. We're in talks with a CDN right now; the plan is to try and get something up tomorrow, after we tag a 1.0.1 release.\n. #463 addresses this. We'd like it in the codebase for version 1.1.\n. What browser and OS are you seeing it in?\n. @AntJanus That sounds good, since the user doesn't really need to interact with an element while it's moving anyway. You could add that class to the motion of `_motion.scss`.\n. Relative positioning is necessary to position a panel, because they use `position: absolute`. That doesn't mean _every_ block needs relative positioning though, as that would cause weird issues.\n. This is an older issue, but we think it's been resolved, partially through moving the HTML of the panels to the right position in the markup: 6aed7d5e654daa5a11e82a89f59ebd406c49e2a1\n\nIf you want panels to overlap a grid element, the panels should be _siblings_ of the grid block, not _inside_ the grid block. This was causing a flicker on some platforms; I saw it on iOS specifically before this fix.\n\nIf you see anything else odd let us know.\n. #312 should fix this; it was an issue with the capitalization of folders.\n. We just fixed the capitalization issue with the `docs` folder (#312) so this shouldn't be a problem anymore. You may need to delete your repo and re-clone it, though.\n. Go for it! I'll make sure everyone sitting around me knows :)\n. @mrsafraz It doesn't, all of the Apps-specific stuff is in the same package for now.\n\nWe've had some internal conversations about this, and if we decide to segment the libraries it likely won't be until a version 2. Mainly we'd need to know that there's a group of folks willing to dedicate time to maintaining ports of the framework, so we could potentially have versions for Angular, Ember, Durandal, etc. That will give us extra incentive to split our codebase in two.\n\nFor now, we just recommend folks include the Bower package and ignore the JavaScript files in there. Where we can we'll see about keeping the Sass flexible enough to work with other frameworks.\n. @mrsafraz When you have something good to show, put it on GitHub and we can feature it! We're looking to promote ports of the framework to other SPA tools.\n. @mrsafraz Those view animations are super slick. That's something built into Durandal?\n. Ah okay. Just in general though the act of view transitioning seems to work really well. UI Router doesn't really do it out of the box, and we've had a lot of... _fun_ trying to make it work without any visual bugs.\n. So from the Sass end, the main hassle is getting the codebase to where it supports the `ng-enter`-style transitions and the class-based transitions, ideally without a ton of code bloat. Each style has a setup class and a transition class, but they don't work the same.\n\nWith `ng-enter`, you define the transition on the setup class; with `*-add`, you define the transition on the finishing class. So it's not as easy as just adding a comma to insert support for `-add` and `-add-active`, but I think there's still a way.\n. @stryju We won't need to change any styles, really, just class output, but that's what's tricky. Ideally we don't have to refactor the Sass a ton. Although i guess there are only five transition mixins right now.\n. Alright, [here's](http://sassmeister.com/gist/f556a36a95f4ea1ed6c7) roughly what the Sass would look like. And I think that's properly following the unique rules of both animation styles.\n- `ng-enter` gets transition definitions and the \"before\" state.\n- `ng-enter-active` gets the \"after\" state.\n- `*-add` gets a `0s` transition and the \"before\" state.\n- `*-add-active` gets transition definitions and the \"after\" state.\n\nThe final code would use `@content` instead of `@extend`.\n. @AntJanus You can use [this code](http://sassmeister.com/gist/f556a36a95f4ea1ed6c7) which has an example `fadeIn` that should work with `ng-enter` and `-add`. What I wasn't sure about is if there's an opposite of `-add`, or if you use `-add` in both directions, in and out.\n. Yep, that should be a `font-size` property, good catch.\n. I think that's an issue with Autoprefixer, but I'm not getting the same error on a fresh clone. We'll look into it, though.\n. A few of us have been getting intermittent errors with Autoprefixer. Sometimes Autoprefixer tries to parse raw Sass files instead of compiled CSS, and if it does it'll freak out.\n\nMaybe it happens if Sass encounters an error, so instead of piping CSS to Autoprefixer it pipes Sass files? I'm not totally sure how that specific plugin works.\n\nEither way, if you keep having issues let us know. At the moment we aren't seeing any errors with compiling the docs.\n. @etcook This is a fun bug. Go into the Gulpfile and comment out the lines that run Autoprefixer.\n\n``` js\n// Compile stylesheets with Ruby Sass\ngulp.task('sass', function() {\n  return sass('docs/assets/scss/', {\n      loadPath: ['scss'],\n      style: 'nested',\n      bundleExec: true\n    })\n    .on('error', function(err) {\n      console.log(err.message);\n    })\n    // .pipe(autoprefixer({\n    //   browsers: ['last 2 versions', 'ie 10']\n    // }))\n    .pipe(gulp.dest('./build/assets/css/'));\n});\n```\n\nNow run `npm start` and let it compile\u2014it will run fine. Now quit the process, _uncomment_ those lines, and run `npm start` again. It will magically work this time. We're not really sure why.\n. @etcook I think it's an issue with Sass sourcemap files being piped to the `autoprefixer()` function, but I'm not sure why it only sometimes happens.\n. The `primary` class is just for color scheming (it uses the `$primary-color` variable as a base), it doesn't mean \"primary\" as in \"main\". Also, in this case, there shouldn't be any classes in the mixin itself, only in the CSS output at the bottom.\n\nIt was sort of a coin toss for us if menu bar should have a bottom margin or not. There are plenty of cases where you don't want a margin on it, like if it's being used as a toolbar, but if it's being used inline, or in a sidebar with more content, you'd want that spacing at the bottom. We could look again at just making it `margin: 0` by default.\n. If you're using the most recent build of the template stack, which defines all import paths near the top of the file, you can fix this by swapping the two paths in the `sassPaths` variable so they look like this:\n\n``` scss\n// Line 26\nvar sassPaths = [\n  'client/assets/scss',\n  'bower_components/foundation-apps/scss'\n];\n```\n\nThis will grab the `_settings.scss` in your `client` folder instead of `bower_components`. I [made the change](https://github.com/zurb/foundation-apps-template/commit/d54dba07f3c13e53fb896787a2b33d4b73616ce9) in the template stack as well.\n\nThe next version of the CLI will automatically copy the settings file out of the Bower package into your client folder when a new project is made.\n. This change to the detached off-canvas mixin should fix the issue:\n\n``` scss\n@mixin off-canvas-detached {\n  z-index: 0;\n  box-shadow: none;\n  // Hide the menu when it's not active\n  display: none;\n\n  &, &.is-active {\n    transform: none;\n    // Show the menu when it's active\n    display: block;\n  }\n\n  & ~ #{$offcanvas-frame-selector} {\n    z-index: 1;\n    box-shadow: 0 0 15px rgba(0,0,0,0.5);\n  }\n}\n```\n\nI tried adding the `detached` class to one of the sample off-canvas menus in the docs, but the `is-active` class was always there for some reason, even when the menu wasn't supposed to be open.\n. _Actually_, the method above should work, but slightly different.\n\nThe issue is that a detached off-canvas doesn't hide off the screen when it isn't active; it just sits there. This means if you open a _different_ off-canvas on another side of the screen, you'll see that first detached menu just sitting there. We don't want that.\n\nI tried making the detached menu `display: none`, and then switching to `display: block` when it's active. This sort of works, because it means the detached menu is hidden until it's made active, and since it doesn't ever animate, flipping from `none` to `block` instantly is okay.\n\nHowever, when you go to close the detached menu, it disappears instantly. This is because the `is-active` class is being removed as the app frame starts to slide back into place.\n\nThere's probably a few ways to solve the problem, but it would need to happen with JavaScript. There's two ways I can think to do it:\n- When a detached off-canvas menu is closing, wait until the `grid-frame` is done transitioning to hide the menu.\n- When an off-canvas menu is open, force all the others to hide.\n. _Actually again_, @jeaniec and I were working on a JS-based solution when we came up with something simpler: just make the z-index of detached menus lower than the others. That covers them up. Problem solved!\n. Closing in favor of #386.\n. Far easier said than done :) We don't currently have any plans to port Foundation for Apps to other JavaScript frameworks, but we'll [certainly support anyone](https://github.com/zurb/foundation-apps/wiki/Contributing) in the community who wants to write a port.\n\nIt's also possible to [use Angular and Meteor in tandem](https://github.com/Urigo/angular-meteor), so there's probably a way to put Meteor on top of our code, instead of actually porting everything.\n. Ah, the functions aren't yet imported when the settings file is being processed. We'll put in a fix, but you can work around it for now by importing the functions file before your settings file:\n\n``` scss\n@import \"helpers/functions\";\n@import \"settings\";\n@import \"foundation\";\n```\n. This commit fixes the issue: 339f164ea4ac030ad4dd12dfbe2c02085e7b83df\n. We replaced the string interpolation with a mixin. It works like this:\n\n``` scss\n@include breakpoint(medium) {\n  /* ... */\n}\n\n@include breakpoint(large only) {\n  /* ... */\n}\n```\n\nThe list of breakpoints are in the `$breakpoints` variable in your settings file. This mixin will also take pixel and em values as well.\n\n``` scss\n@include breakpoint(200px) {\n  /* ... */\n}\n```\n. Very good point. I went ahead and [replaced](https://github.com/zurb/foundation-apps-template/commit/7cea3ad1794eae0f095dbc3099f933297d6c5d00) the `href` attributes with `ui-sref`, to emphasize that it's the actual way links are written when using Angular + UI Router.\n\nWe won't add more pages most likely, because the template stack should be as stripped down as possible. If you had pages for about, news, contact, etc., you'd just end up deleting or renaming them for every new project.\n. Hey, sorry for getting to this late. We definitely want to start using the template cache, since we're already running into problems with the hardcoded template paths we have, and it would also just make distributing our code easier.\n\nWe're trying to get 1.0.3 out the door today, but it would be nice to have this functionality in place for our next version, which will probably be 1.1. 1.0.3 will introduce a `dist` folder into the Bower package which has compiled CSS and JavaScript. For future versions it would make sense for the templates file to be in there as well.\n\nSince the Gulpfile has been refactored quite a bit recently, would you like to re-do your PR against the new codebase? And thanks for your work! :)\n. Awesome, thank you. You'll see that the new Gulpfile has a task called `deploy:dist`, which generates compiled assets for Bower and npm.\n. Sounds like we can keep the functionality as it is, but add information about the directive to the documentation.\n. Yep, looks like `$small-font-color` wasn't being applied to the `small` selector.\n. We made the call to not include `radius` and `rounded` classes in Foundation for Apps, and it's possible we'll do the same thing for version 6 of Foundation for Sites. It does make it look like the two frameworks are out of sync in some ways, but Foundation 5 is also more than a year old, so there were plenty of new ideas we've had that are being implemented first here, and eventually will with Sites as well.\n\nThe reason we got rid of the `radius` and `rounded` classes is because they serve a purpose better filled by Sass. Most components, including buttons, have a border radius variable, which allows you to globally modify the radius on that component. This is a much easier and more sustainable approach than adding `radius` and `rounded` to every button. Coloring and sizing also change the meaning and purpose of your buttons; the border radius tends to be just a stylistic choice.\n. The standalone framework files (all Sass, JS, and Iconic assets) are distributed through Bower and NPM. If you want to use our components in a Rails project, you'll want to add the framework to your asset pipeline. There are a few tools that connect Bower and Rails, including [rails-assets](https://github.com/rails-assets/rails-assets/) and [bower-rails](https://github.com/42dev/bower-rails).\n. Sorry, I know this is an older issue, but the markup for this panel is incorrect. Panels should never go inside `.grid-content` elements; they should always anchor to a `.grid-block` element instead. This means a panel and the content it overlaps are sibling elements in the DOM.\n\nHere's how to fix your example:\n\n``` html\n<div class='grid-block'>\n  <!-- Moved the panel up one level -->\n  <zf-panel id='bp' position='bottom'>\n    <a zf-close='' class='close-button'>&times;</a>\n    panel content\n  </zf-panel>\n  <!-- The sidebar and main content are siblings of the panel -->\n  <div class='grid-content'>sidebar</div>\n  <div class='small-8 grid-content'>\n    <a class='button' zf-toggle='bp'>Panel</a>\n  </div>\n</div>\n```\n\nI added a section to the panel documentation that clarifies this rule.\n. @mikehuebner Yep, that's it! To expand on what @AntJanus said, Gulp, Grunt, et al. are build tools that are meant to be run in a development environment only, and are primarily used to deliver static code. The servers that you can run with Gulp and Grunt (and even frameworks like Django and Rails) are meant for convenience and testing only, not production.\n\nYou could automate this process in Gulp by creating a deployment task that uses rsync, FTP, SSH, etc. to upload the `build` folder for you. [We do this](https://github.com/zurb/foundation-apps/blob/ff33e2da2e0413d4ec9d5fade525c840094e0444/gulpfile.js#L277) to deploy the documentation.\n. We have a refactor of the animation libraries in progress (#386) so we'll make sure this issue is covered there.\n. We merged in #386, which does address the scenario where the user clicks to another state mid-transition. The other two states will disappear, and the new one will animate in.\n\nThese changes will be in for version 1.1 of the framework, which we're hoping to have out by the end of the week.\n. Try running `npm start build` manually in your command line and see if that works. Occasionally we've had issues where, for some reason, the user's machine freaks out if you add more arguments after `npm start`.\n. Yep, it looks like version 2.0.0 of npm introduced that change. I added a remark to the Install & Update page advising users to update their system's npm if they aren't installing a new copy of Node.\n. Awesome, glad to hear it!\n. You shouldn't have to copy those files yourself out of `bower_components`; Gulp does that for you. However, there was an issue with the template stack's `Gulpfile` not properly copying HTML partials. [This pull request](https://github.com/zurb/foundation-apps-template/pull/18/files) fixed the problem; if you look at how the `Gulpfile` was changed, you can fix the issue in your project.\n. The first issue is one of selector specificity, so adding a bunch of `>`s should help, and won't break any existing code. We had this issue with another component where `is-active` was cascading down too far.\n. Going to close this, if the problem still persists let us know. :)\n. It's a known issue with Orbit, our slider plugin that comes with Foundation 5.\n. @AntJanus We can take a look on our end. As for the height thing, in most cases, the view will be a flex child, which means its width and height are automatically calculated. The whole point of this framework is that it's responsive, so if you're setting a fixed height you're probably gonna have a bad time. Although I could see people using for nested views.\n. I pushed a small update to the CSS for transitioning views, and it seems to work pretty well, although I didn't test it extensively. If you pull down the branch and click between the Install/Update and Sass pages, you can see it working.\n\nI'm not sure if these updates cover it, but the module needs to account for any combination of views missing and in/out animation. Like this:\n\n| Old View | New View | Result |\n| --- | --- | --- |\n| has out | has in | Both animate at the same time |\n| has out | no in | New view immediately appears, old view animates out |\n|  |  | Old view gets higher z-index |\n| no out | has in | New view animates in, old view immediately disappears |\n|  |  | New view gets higher z-index |\n| no out | no in | Both swap immediately |\n\nIn the last use case, the module shouldn't do _any_ of this logic, like adding `position: absolute` classes and so on. That should all be bypassed so the views animate immediately. It seems like right now there's a small delay because all of the same stuff is happening even though it's not needed.\n. Just hacked together a basic test app for the motion stuff. It has four views, which have every possible combination of in/out animations, so you can test, say, what happens if an exiting view has an out animation, but the new view has no in animation. Run `gulp test:motion` to turn it on.\n. If you're adding the components to your own stack, you need to make sure the HTML templates for each directive are being picked up by Angular. In our [template stack](https://github.com/zurb/foundation-apps-template), we copy the partials from `bower_components/foundation-apps/js/angular/components/**/*.html` to `build/components`.\n. Going to close this, let me know if the above was able to solve your issue, or if you still have problems.\n. @gjungb @zavan Yep, until we have a templates JavaScript file in a stable version, you'll have to use a task runner to pull the templates out of the framework files. Below is an example of using the [ng-html2js](https://www.npmjs.com/package/ng-html2js) library with Gulp. There's a Grunt version of the plugin as well.\n\n``` js\nvar partials = gulp.src('bower_components/js/angular/components/**/*.html')\n  .pipe($.ngHtml2js({\n    prefix: 'components/',\n    moduleName: 'foundation',\n    declareModule: false\n  }))\n  .pipe($.concat('templates.js'))\n  .pipe($.uglify())\n  .pipe(gulp.dest('./dist/js'));\n```\n. @zavan Glad to hear it! If you make anything interesting with it, let us know. We're building some stuff internally (even for clients now!) so we're learning a lot about how fully-responsive web apps would work. and we'd love to hear what design/technical challenges other developers are running into.\n. Nice! We'd like to see this functionality added for notifications too, if possible. Right now there are programmatic notifications, but you need an empty element with the `zf-notification-set` directive to make them work.\n. :+1: Awesome! We'll take a look!\n. Looks good! A few comments:\n- All three of the stagger mixins could likely be combined into one, unless you think there's a chance any of the three would be used in another context. But as it is they're fairly tightly coupled anyway.\n- It may not be necessary to call `stagger()` inside each motion mixin, as the stagger functionality exists independent of whatever motion is happening. Instead you could call `stagger()` three times at the bottom of the file where all the CSS classes are, once for each stagger length.\n. Awesome work, James! :) We can include it in version 1.1.\n. Merge'd. 9fc2f16721ed47a19a919c6ae0565d0d633a575d\n. The classes that apply those visual styles to the grid examples were overriding the offset class, so I fixed that. The actual grid won't have that issue under normal circumstances.\n. This error doesn't seem to be cropping up anymore, but if you have any more issues compiling the docs locally, let us know.\n. This is the intended behavior, although you could make the case that it doesn't need to be full height. Full width seems sensible, however. Modals are kind of like grid rows in that they have a max width.\n. [This commit](75ec5dacfdc8c2c440ed6576fc1c413a434a4014) adds a `.dialog` class which turns off the full-bleed functionality of mobile modals.\n. As a temporary workaround, you can comment out the uglify step of the JavaScript build process. It's in the `uglify` task in `Gulpfile.js`:\n\n``` js\ngulp.src(foundationJS)\n    // .pipe(uglify({\n    //   beautify: true,\n    //   mangle: false\n    // }).on('error', function(e) {\n    //   console.log(e);\n    // }))\n    .pipe(concat('foundation.js'))\n    .pipe(gulp.dest('./build/assets/js/'))\n  ;\n```\n\nBut, we can look into modifying the Gulpfile to have separate processes for development and production. I'll add it to our internal roadmap.\n. You might be interested in [gulp-if](https://github.com/robrich/gulp-if), which can conditionally run files through a pipe. So only pipe to `uglify()` if `production = true` or something like that.\n. @etcook Oh! Sorry about that, skipped right over it when I loaded the page. But yes, we'd be interested in seeing what that would look like. A `production` flag should compress the Sass as well, while keeping it expanded while in development. The flag should probably be `false` by default, so that when you download the template you're already in development mode.\n. Just got this implemented in the template project, using the code @etcook wrote. [Check it out!](https://github.com/zurb/foundation-apps-template/commit/1a9f6a7fed9ac68f753d6a7e98aada88b0e51b24)\n\nAdding the `--production` flag to `gulp` or `gulp build` will enable compressed mode in node-sass, and Uglify for JavaScript.\n. Right when the framework launched we were seeing a bizarre bug in just IE10/11 where, when `autoscroll` was on the view container, the entire left-hand sidebar was misaligned. And when you took it off, everything went back to normal.\n\nBut I tried adding the attribute back and everything works fine now. Not sure what that was! So we can definitely merge this.\n. We closed out the PR related to this issue last week; you can read [my comment](https://github.com/zurb/foundation-apps-template/pull/23#issuecomment-95379959) on why we closed it. Basically we're trying to keep the template stack as slim on features as possible, to reduce the number of moving parts. It's meant to be a baseline that more experienced users can build on.\n. No, pedantry is great :) Thanks for catching it!\n. Good catch, they should all be singular.\n. The issue is trying to interconnect the components when you don't know what the class names could be. Because we allow the user to write their own class names with the mixins, you don't know if that button will actually be `.button`, or `.custom-button-class` or something else.\n\nIn this specific case, it's probably fine to modify the selector to also look for `input[type=\"submit\"]`, `input[type=\"button\"]`, and `button` as well, because the use case of the `.inline-label` element is _very_ specific\u2014it's meant for inputs, buttons, labels, and nothing else.\n. Yeah, button groups would need updating, and there may be a few other edge cases as well. Foundation 5 has a few blind spots like that actually. It's _really_ hard sometimes to combine UI components when you don't know what their class name is ;)\n\nIconic is a unique case because the JavaScript always adds the `.iconic` class, so we don't have to worry about that one changing.\n. You can use any existing Angular library with Foundation for Apps. As you've figured out, normal JavaScript libraries don't work because single-page app frameworks are always swapping in and out HTML. Most plugins are designed to be initialized once, when the page loads and all the HTML is assumed to be there.\n\nThe Angular UI project has a lot of good libraries, including a [Google Maps](http://angular-ui.github.io/angular-google-maps/#!/) one you may be interested in.\n. The CSS classes are written to use Angular's [animation module](https://docs.angularjs.org/guide/animations). So to make the animations work, you either need to use a directive that supports animation (like `ng-show`, `ng-repeat`, etc.) or use the `$animate` service to trigger them yourself.\n. @saviour123 There aren't any tutorials that I know of specifically about Foundation for Apps's motion library, but our [documentation](http://foundation.zurb.com/apps/docs/#!/motion-ui) does a good job of explaining all of the key pieces: directive/view animation and using the Sass mixins.\n\nEventually the [new Motion UI](https://github.com/zurb/motion-ui) library will be plugged into this one. We'll likely do that at 1.2 and then remove the existing transition mixins for 1.3.\n. Closing in favor of #417.\n. Take a look at [this CSS Tricks article](http://css-tricks.com/restart-css-animation/), which gets into a few methods for restarting animations. The two solutions it references are:\n1. **Remove the animation class, _force a reflow_, and then re-add the class.** If you just remove the class and then immediately re-add it, the browser doesn't perceive it as an actual change in state. There are a few ways to do this\u2014the one referenced in the article is `element.offsetWidth = element.offsetWidth;`.\n2. **Reset the play state.** The CSS property is called `animation-play-state`, and the JavaScript version is `animationPlayState`. Change it to `paused`, and then immediately change it to `running`, and the animation will play again. Of course, the property is vendor prefixed, so you'll need to modify `webkitAnimationPlayState` and so on.\n\nHope that helps!\n. There is an `infinite` class you can apply to an animating element, and that will make the animation play forever. It seemed like your use case, though, was needing to get the animation to play again at some point. But, if you just need the animation to play forever without stopping, you can just add the class `infinite`.\n. Merged #421 which fixes this.\n. Like the others have said, this doesn't seem to be an issue with our Bower package. Stack Overflow or Super User should be better equipped to help you :)\n. The template stack doesn't come with any unit tests; are you writing your own?\n. Hm, could you post the tests you've written?\n. Thanks for the repo link; taking a look at this today.\n. Well, I got a totally different set of errors when I tried to run the tests, but either way I think I might know the problem.\n\nWhen the Sass is compiled to CSS, it drops the media query list into a property with a `meta` selector. The JavaScript then injects a `<meta>` tag with the same class and parses the value. If the test suite doesn't have a finished CSS file to reference, it can't read those values, which is why the `mediaQueries` object comes up null.\n. You'd need to compile the Sass files to CSS so that the test browser can see them.\n\nThis is the error I get. I think it's happening because the Gulp plugin that generates routes isn't being run, so the `foundationRoutes` variable is never being created.\n\n```\nChrome 40.0.2214 (Mac OS X 10.10.1) AboutController should create \"phones\" model with 3 phones FAILED\n    Error: [$injector:modulerr] Failed to instantiate module wxPortal due to:\n    Error: [$injector:modulerr] Failed to instantiate module foundation.dynamicRouting due to:\n    ReferenceError: foundationRoutes is not defined\n```\n. If needed, you can also get away with less than that. This is the only line you need:\n\n``` css\nmeta.foundation-mq {\n  font-family: \"small=0&medium=40rem&large=75rem&xlarge=90rem&xxlarge=120rem\"; }\n```\n\nThis style could also be added programmatically before Foundation initializes, using the [CSSStyleSheet.insertRule()](https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet/insertRule) method.\n. True that; if you want to put HTML examples in a `<code>` element, you need to escape the angle brackets. So `<div>` becomes `&lt;div&gt;`.\n\nFor code blocks, our documentation uses an Angular port of highlight.js. It handles the escaping and syntax highlighting for us.\n. 1.0.2 is the newest version of the framework. We're looking to put another version out next week.\n. We can add those missing files to the `bower.json`. Should that property also include every Sass file?\n. @joshuajohnson814 I agree, and in fact it shouldn't be there anymore. Our documentation uses a different entry file, and the template stack also uses it's own. If you're incorporating the source files into your own build process, that file is unnecessary, although it does serve as a useful template.\n\nAs for including distribution files, we can look at it for the next patch. We're considering including a `dist` folder on the same repo, for this and perhaps also Foundation for Sites, to avoid the hassle of having a separate repo just for the Bower install.\n. @joshuajohnson814 The main issue we've had with the file is that some folks assumed it was a module to be included as a dependency, when it's just meant to be boilerplate. Also, since it's in the `bower_components` folder, which means it probably isn't in version control, you can't edit it.\n\n_But_ we haven't heard anything recently, so we can let it sit for now :)\n. So for JavaScript you just add every file, but how does it work with Sass files? I was looking at wiredep (which is what @laurent-le-graverend is using) but I couldn't figure out exactly how it works with Sass. Since Sass files are pre-compiled, it's not like you're concatenating them all together; you just need an import path. So I'm wondering if the `main` property of `bower.json` needs every Sass file or just the entry point.\n. I see, so it's not for source files. Thanks! We'll set up a `dist` folder for the next patch.\n. Alright, this commit adds a Gulp task to create a `dist` folder with minified and un-minified CSS and JS: e6aab4e097abafce1ccce6586f0bd5d7726dde97\n\nAnd this commit is me forgetting to update the `main` entry in `bower.json` ;) f5e33b0d3abf8d3817555c7b5a7361902794f1a7\n\nWe're trying to put out 1.0.3 this week, which will be the first version with the `dist` folder.\n. @joshuajohnson814 Ah, okay. In that case, what would be the best way to package the other dependencies for distribution? Maybe just bundle all of the external libraries into one file?\n\nObviously wiredep helps with this dependency resolution, but not everyone will be using that. Some folks will just want to drop in finished files to get going.\n. @laurent-le-graverend The way you described module loading already works with our current file structure. Originally you had to add each UI component's module separately, but in version 1.0.2 we added a `foundation` module which is just a shorthand for all of the UI components.\n\nBut as far as the compilation step, it sounds like the dist file should just be _our_ framework files, and not any of the five or so libraries we rely on. So we'll make that change. (This also brings into stark relief how many dependencies this library has right now. Maybe for version 2 we'll look at separating modules that have dependencies, like our touch stuff.)\n\nAs far as using template caching, we've gotten that request before, so we'll look into it.\n. Merged in #433 which addresses this. Thanks for your help, friends!\n. Material Design is a very opinionated style guide, which is good for what it's doing, but it's not the role of our framework to make all of those decisions related to layout, hierarchy, and styling. Because of that, we won't be skinning any of the Foundation frameworks to look like Material.\n\nHowever, if _you_ would like to write a Material theme and open source it, we can promote it for you :)\n. Definitely, we need this functionality for off-canvas and panels.\n. @maxcook We'd like to do this and the darkened overlay, but we haven't done any work on it yet. We'd certainly welcome a pull request if anyone wants to take a crack at it.\n\n@soumak77 We have `zfClosable`, would it be possible to bake any hooks into that?\n. What you're thinking of is the [template stack](https://github.com/zurb/foundation-apps-template), which is a separate repo. However, we're trying to keep the build process on that thing as slim as possible, or at least as slim as a complete build process can be. With that in mind, we don't want to add any more plugins to that thing at the moment.\n\nThat being said, _this_ repo would certainly benefit from having linters to check the Sass and JavaScript. I started fixing up the Sass to conform to one standard, but I haven't finished it yet.\n. @escapedcat Right now we don't have a good way to update the Gulpfile. The problem is, if you've changed it at all, how are we supposed to effectively update it? The hope was to get the framework and stack to the point that we don't need to update the Gulpfile for a while.\n\nThis template is significantly more complex than the ones we use for Foundation 5, but for better or worse it kinda has to be.\n\nIf a patch ever mandates a change in the Gulpfile (which we'll try hard to avoid going forward), the changelog will include instructions on how to update an existing project.\n. Hey, thanks for putting this together. One issue is that we're deploying files to a CDN for use in CodePens and such, and those files should probably include all of the JavaScript in one big file, while the `dist` folder should be just the framework files. I can implement that myself, though.\n. After doing some research, we found that the solution might have to be iPad-specific CSS that uses `calc()` to cut those extra pixels off the height of the grid frame. So, hooray for user agent sniffing?\n. #456 could solve this, basically using `height: 100%` instead of `height: 100vh` to size things. It needs more testing, though.\n. I've got a new PR open (#603) which appears to be a better solution.\n\nWe _will_ make iOS play nice with web apps.\n. Last solution, promise! bc01826c7bd1eb8e4ed6fb3bf293fcb0aebcaf9f fixes this issue. Tested in iOS 7 and 8 on the iPhone and iPad, and it works great.\n. Could you use the plain `justify-content` property instead? Using a grid mixin here means the menu bar would have a dependency on the grid component, and ideally no component is dependent on another (unless it's a sub-component, like button group).\n. Ah yeah, it's a typo in the `node-sass` task. Changing [this line](https://github.com/zurb/foundation-apps/blob/18b168b9f1f9c74aa4a25b65cc421722505eaacf/gulpfile.js#L150) of the code will fix it. `autoprefixer` should be `$.autoprefixer`.\n. Thanks for making the changes. :)\n. As of Firefox 35 this doesn't appear to be an issue anymore. Since Firefox auto-updates, this shouldn't be a huge problem.\n. Alright, fixed it by converting the hex value to an RGB one on the fly.\n. Do these sorts of techniques negatively affect the cascade at all?\n. In theory any of the basic Sites components that don't require any JavaScript will work just fine, since it's just CSS. There's also an [Angular library](http://pineconellc.github.io/angular-foundation/) for the Foundation 5 JS plugins, written as Angular directives.\n\nBut yeah, we're definitely looking into ways to make the components more consistent between the two frameworks.\n. Obviously components with the same names conflict (labels, tabs, etc.), but there is one example of a component with the same name but two very different purposes in the two frameworks: panels. In Sites, `.panel` is just a colored box, but in Apps, it's the off-canvas component.\n\nTo get around this, we're looking for a name to replace \"panel\" in the next version of Sites. It's probably going to be \"callout\", since we're also combining panels and alerts into one CSS component.\n. Containers should be nested inside content blocks. Using your existing code, I can just swap out the first `grid-block` and make it `grid-content` instead. The two are totally interchangeable.\n\n``` html\n<body>\n<div class=\"grid-frame vertical\">\n  <div class=\"grid-content\" style=\"background-color: green;\">\n    <div class=\"grid-container\">\n      <div class=\"grid-block\" style=\"background-color: yellow;\">\n        Yellow\n      </div>\n      <div class=\"grid-block\" style=\"background-color: blue;\">\n        Blue\n      </div>\n    </div>\n  </div>\n  <div class=\"grid-block\" style=\"background-color: black;\">\n    <div class=\"grid-container\">\n      <div class=\"grid-block\" style=\"background-color: yellow;\">\n        Yellow\n      </div>\n      <div class=\"grid-block\" style=\"background-color: blue;\">\n        Blue\n      </div>\n    </div>\n  </div>\n</body>\n```\n\nSince `grid-block` is a flex container, it's children don't behave like normal flow content. `grid-content` is _not_ a flex container, which means its children will function normally. `grid-container` is just a `margin: 0 auto;` container with a maximum width, so it has to be inside `grid-content` to function properly.\n. We're working on an official tutorial for the framework, which clarifies these concepts, and then some of that should make it back into the main documentation.\n\nThis grid is a complex beast, so questions like this are very helpful to us :) Thanks!\n. Going to test this and merge it today for 1.2.\n. We have the pieces in place, so for future releases the compiled CSS and JS will be available in a `dist` directory of the Bower folder. (It's [here](https://github.com/zurb/foundation-apps/blob/master/gulpfile.js#L316) in the Gulpfile.) We're planning on releasing version 1.0.3 by the end of the week, which will be the first version of the framework to include distribution files.\n\nIn the mean time, the source Sass files are available in the Bower package. A good number of them, most importantly the Flexbox grid, can be used without any JavaScript.\n. We have a [contributing document](https://github.com/zurb/foundation-apps/blob/master/CONTRIBUTING.md) which has some recommendations for how to submit issues and pull requests. We don't currently have any Angular-specific guidelines, though. Was there a question you had on how to modify the codebase?\n. We really need to set up linters for this codebase, we just haven't gotten to it yet. The broad strokes are already there; all of our Angular modules are written in the same style, so following those general conventions is a good start. As far as specifics, hopefully we can get JSHint set up at some point, but in the mean time, just try to match our coding style as best you can. If we think something is suspect in a PR, we'll point it out :)\n. They'll work just fine! Since there's no JavaScript component to them, like with Iconic, you can just drop in the Sass and the icon fonts no problem.\n. After some internal chit-chat we decided to leave this as-is, so you can style a modal overlay and the modal itself with one class. This commit updates the documentation to explain what's up: 96e80a59b9f45c06c98f54a51cb34d8c92b0f15e\n. Closing in favor of #603.\n. Menu bar includes an `.is-active` class which can highlight an active item.\n\nYou can also use `ui-sref-active` to apply a class when a specific state is the current one.\n\n``` html\n<ul class=\"menu-bar\">\n  <li ui-sref-active=\"is-active\"><a ui-sref=\"home\">Home</a></li>\n  <li ui-sref-active=\"is-active\"><a ui-sref=\"about\">About</a></li>\n</ul>\n```\n. The off-canvas menu has no built-in styles; it's just an empty box. If you're nesting a vertical menu bar inside of it, you can do what I described above. If you have your own custom component, you can use `ui-sref-active` and make your own custom active state class.\n. @akiran, I think `ui-sref-active` would cover the use-case you're describing, where you have a menu and the current item (the current view) is highlighted. If it's not a state-specific thing you're targeting, you can still use the `is-active` class to highlight things based on other criteria.\n\nLet us know if you have any more questions :)\n. For sure, I'm going to write one today. Here's a very brief overview.\n\n``` scss\n// You can use any named breakpoint in the $breakpoints map\n@include breakpoint(small) { } // Small and up\n@include breakpoint(medium only) { }\n@include breakpoint(medium down) { }\n\n// You can also use px, rem, or em values, which are all converted to em\n@include breakpoint(400px) { }\n@include breakpoint(60rem down) { }\n```\n\nAs for your grid issues, what version of iOS are you on? We just had a round of QA for iOS 7 and 8, and everything seemed fine.\n. About half of the components, most importantly the grid, will work without Angular or even JavaScript. So you could drop in the CSS for the basic components and it would work fine.\n\nIt's also possible to use Angular without any of the routing stuff, which is to say you can use Angular for things that aren't single-page apps. If you want to keep your backend largely the same, where ASP.Net is generating and serving HTML to the client, that's the way to go.\n\nIf you still wanted the single-page app feel, you'd have to do a fair amount of refactoring on the back-end. To make a SPA framework work with APS.Net, Rails, etc., the server-side framework has to essentially become an API. Because Angular does all of the templating work, the server then just serves up data as JSON, which the client compiles into HTML.\n. Here's the page: http://foundation.zurb.com/apps/docs/#!/media-queries\n. We've talked about it, we just need to decide how to implement it. We don't have access to jQuery's `slideToggle` in Angular, and animating `max-height` isn't a sustainable way to do it.\n\nMost likely we'll need to write our own thing to do it properly.\n. What's the purpose of running the uncompressed file through css-condense? Is it just for stripping out comments?\n. Actually, I'd like the CSS-style comments to be stripped out as well if that's possible. We're looking to get into automatically-generated documentation, and for doing HTML-specific documentation we might use [Hologram](https://github.com/trulia/hologram), which requires you to use CSS-style comments to enclose documentation.\n\nI was actually looking for a CSS minifying tool that would _just_ strip out comments and not do any other compression. Sass won't remove them unless it's also compressing the file.\n. Are you trying to write the theme just with the settings variables, or are you adding your own CSS overrides as well?\n. Totally! We'll look into it.\n. Awesome, thank you!\n\nHow do you think we should handle this in the [template stack](https://github.com/zurb/foundation-apps-template)? Ideally the build process on that thing stays as simple as possible, although we're doing a lot of building from source at the moment.\n\nWe can either copy the finished file from `dist`, or add `ng2HtmlJs` to the process. The former is quicker to implement and is one less piece of machinery, but the latter is more customizable.\n\nIn general that's a balancing act we're trying to strike. Like, we could have the template stack just copy all of the compiled files, but then you can't later pick and choose which ones you want to include. On the other hand, if you actually _know_ how this stuff works, you're probably smart enough to just do it yourself. The template stack is meant to be a baseline, and ideally it has as few moving parts as possible, to make it less error-prone and easy for beginners to understand.\n. Every Angular engineer we've talked to before and after this thing came out has asked \"can I just use it in my own project?\" Our template stack is definitely just meant to be a baseline, so maybe in the interest of reducing its complexity we cut out some of the choice. Of course the choice is still _there_, if you know what you're doing. But if you know what you're doing, you might just be ditching our entire build process anyway in favor of your own. If you don't know what you're doing, you're probably designing a prototype, so optimal delivery of files isn't yet a concern.\n. Related: #397\n. Hey, sorry for not getting back to you sooner!\n\nElement queries are definitely interesting, we just need to find the right way to implement them. As far as adding new libraries, we're trying to be really cautious about it right now, since the framework already has seven dependencies. If we add anything new, it probably won't be until a v2, when we can take a step back and figure out what libraries we're using.\n\nI'm going to close this and continue the discussion in #538, since you seem to have honed in on an possible solution.\n. Looks to be a side effect of how our settings parser works, since it prints out each set of variables in the order the files come. Thankfully button group is the only component with a dependency on another component's variables.\n. The container is just meant to center content inside a `grid-content` element. It shouldn't be a flex container, because it's just supposed to contain plain-old flow content. We might need to update the documentation to make this more clear, though.\n\nAn example of its use would be:\n\n``` html\n<div class=\"grid-frame\">\n  <div class=\"grid-content\">\n    <div class=\"grid-container\"></div>\n  </div>\n</div>\n```\n. Yep, that should work. If not, I can try to make a more complete example.\n. Yeah, that's a really tricky thing. We want mixins for all of our components so they'll be more flexible, but at some point you still need to mimic our markup structure to an extent for it to work. This grid in particular is that way because of how flexbox works, and because it's new.\n. We fixed this in 1.0.3 (53d5952802e7d7da667c3fb19f73e0a39bc0591e), so now all `<a>` elements, not just ones with an `href` attribute, get the pointer cursor. Since there are no `href`s in Angular apps, browsers weren't applying the proper cursor to elements that are technically links.\n\nThe templates are all being updated right now, and they'll use the latest version of the framework when they're done.\n. We've gotten a lot of requests to create a datepicker for Foundation for Sites, so for version 6 of that framework we're going to do it, as an external plugin. Once that work is done, we could definitely wrap that functionality in an Angular module.\n. http://caniuse.com/#feat=input-datetime\n. Going to close this as a known feature request. We're working on a date/time picker for Foundation 6, and whatever we come up with there, we could definitely port over to Angular.\n. Nice, thanks for the work!\n. Hey, sorry for getting to this issue late. I tried your second code example verbatim and it worked for me on desktop and on iPad. I also removed all of the JavaScript like you described, and it still works. (Which makes sense, because none of the components you're using have JS elements.) Is it possible you got a Sass error or something?\n. Fixed with this pull request: #478 Sorry for the hassle!\n. Have you written any jQuery code related to panels? If you just remove jQuery, do the animations start working again?\n. Hey guys, sorry for the late response, but let's try to untangle this web of fun. Things that cause panels to unintentionally close are:\n- Having jQuery loaded\n- An element with a transition inside of the panel\n- Nested panels\n\nSeems like the last two happen because `transitionend` bubbles up unintentionally. #547 fixes this, so we'll bring in that change once we've reviewed it. Will that also fix the first issue with jQuery?\n. Alright, luckily this is an easy fix. You're passing the wrong parameter to the `grid-frame()` mixin.\n\n``` scss\n// Wrong\n@include grid-frame(vertical);\n\n// Right\n@include grid-frame($orientation: vertical);\n```\n\nMaking this one change fixes the issue, so the layout looks like the first screenshot, including on the iPad. The documentation was incorrect, as the first parameter of that mixin is `$size`, not `$orientation`. Size shouldn't even be an option, though, since you shouldn't be changing the width or height of the app frame, so we need to refactor that mixin slightly.\n. It's definitely something we should address in more detail. The main points of interest are Angular (IE9+ as of Angular 1.3, which we're using) and flexbox (IE10+), but there are lots of little things in the CSS and JS where we get to cut corners because we're only accounting for modern browsers. Like using modern CSS selectors, or DOM features only in newer browsers.\n\nIn terms of how to detect it, I think flexbox, like you said, is the most obvious way to check for general compatibility. Flexbox support was our original metric for browser support, so once we knew we were cutting IE9 and Android 2 as a result, we just went from there.\n\nPerhaps we could come up with a small, non-Angular script to drop in a Modernizr-like CSS class to detect lack of support.\n\nAnd to your point about separate module support, that's possible right now! Our sample bootstrapping code imports every UI plugin at once with the `foundation` module, but that's just a shorthand to import everything at the same time. You can also import each UI component separately, like `foundation.tabs` or `foundation.accordion`.\n. To come back to this, do you think a CSS class on `<html>` is enough, or would having one of the Foundation services expose an `isCompatible` parameter be more useful? Or both.\n. All of the classes are built using the mixins. Could you give some specific examples of mixins that don't work? I'm also taking a look at your other issue (#482) today, so I'll see what's up there.\n. We're working on improving the grid documentation, and we'll also be releasing a tutorial soon which will describe certain elements of the grid in better detail. If you have any specific feedback or issues with a Sass mixin, let us know in a new issue. :)\n. We've talked about it internally, but it's not of a huge interest to us at the moment. There is a [good Angular module](http://itslenny.github.io/angular-pretty-checkable/), though, that has very similar features to the jQuery one you linked to.\n. Ah, that's a legacy variable and shouldn't be in the codebase anymore. You can control the speed of animations with our built-in classes, or with your own CSS.\n\nWith our classes:\n\n``` html\n<div zf-panel animation-in=\"slideInUp\" class=\"[fast slow]\"></div>\n```\n\nWith your own code:\n\n``` html\n<div zf-panel animation-in=\"slideInUp\" class=\"panel-thing\"></div>\n```\n\n``` scss\n.panel-thing {\n  transition-duration: 500ms;\n}\n```\n. I think I know what you're describing, but there's another use case you might be talking about as well.\n\n`align-items` and `align-self` align elements on the _cross-axis_ of the flex container. So if you have a horizontal grid, your cross-axis goes up and down, and so the `align-` properties shift elements up and down. If you had four elements on your horizontal grid, there's no way to make two stick to the left and two stick to the right. The `justify-content` property controls that behavior, and it can't be set on individual flex children.\n\nI _think_ that's the behavior you're describing. But you're right that we don't currently have an abstraction for the `align-items` and `align-self` properties in the grid.\n. There is, but there are two caveats. [Here's a Codepen](http://codepen.io/gakimball/pen/ZYogmK) that illustrates it.\n\nThe entire container flows as columns, and it's told to wrap, hence `flex-flow: column wrap`. Note the numbering of the items: it goes _vertical_, not _horizontal_. You can't make the HTML order horizontally, because the flex container is flowing vertically.\n\nThe other caveat is that the container in this example has a defined height. This creates the boundary that forces the child elements to wrap to the next column. Try removing `height: 350px;` from the `.box` selector\u2014all of the child elements will just stack vertically, because now they have no reason to wrap.\n\nSo yes, there is a way to do a Masonry layout in Flexbox, but unfortunately it isn't perfect.\n. We're trying to find a good solution for that right now, as there are plenty of components you could see being identical between the two frameworks, like panels, pagination, tables, and so on.\n\nWe're working on Foundation 6 right now, where we're trying to simplify a lot of components, so at the very least I think we'll wait until that framework is closer to completion. I wouldn't necessarily want to import any Foundation 5 components, since the codebase for them is a year and a half old.\n. Might be fixed by #478\n. Yep, right now you're supposed to copy the partials as a part of your build process\u2014that's what we do in our [template stack](https://github.com/zurb/foundation-apps-template/blob/master/gulpfile.js#L69), using a glob that only targets HTML files.\n\nStarting with 1.1, though, we're going to be distributing a compiled templates file (#463), so then you can just add one JavaScript file and get all of the templates. We're hoping to have 1.1 out in a week or so.\n. Is it possible to change a state after it's already been defined? The `foundation.dynamicRouting` module will create a set of states, and then in your bootstrapping code you'll define the states again. Can they be overwritten?\n. What @escapedcat said will work. The module `foundation.dynamicRouting` is what handles the creation of states from Front Matter, so if you don't include it, no states will be generated. We're doing exactly that for a client right now at ZURB\u2014using all of the framework's UI components, but writing our own states.\n\nThere's one caveat right now, which is that view animation doesn't work without the `foundation.dynamicRouting` module. This will change in version 1.1 of the framework, which we're hoping to have out soon. Then you'll be able to add animation to your states like this:\n\n``` js\n$stateProvider\n  .state('home', {\n    url: '/',\n    templateUrl: 'templates/home.html',\n    animation: {\n      enter: 'slideInDown',\n      leave: 'fadeOut'\n    }\n  });\n```\n\nThe change is already in master if you want to mess around with it.\n. @mikestecker The front matter routing is totally optional, and we took out the line saying it's required from the documentation.\n\nWe're trying to put out v1.1 today, which will make view animation work without the router plugin, so you can write your own states but still set up transitions between them.\n. @olegpolyakov So, the awkward thing right now is that you still need those modules enabled to make view animation work, even if you're not using the Front Matter stuff. We were able to separate the functionality, but we haven't yet separated the modules themselves, to maintain backwards compatibility. We'll do that in a future version when we can properly deprecate it.\n. The `app.js` in the `docs` folder is just for our documentation. It includes a bunch of modules that aren't dependencies of the framework, including hljs, autocomplete, and so on.\n\nIf you're looking for boilerplate code to bootstrap a Foundation for Apps project, I'd suggest taking a look at the [`app.js` file](https://github.com/zurb/foundation-apps-template/blob/master/client/assets/js/app.js) we use in our template stack.\n\n**Edit:** to be more specific, are you interested in mimicking the functionality of our search with autocomplete?\n. This is an issue with how iOS interprets the viewport height (`vh`) unit. Mobile Safari calculates `100vh` without taking into account the height of the tabstrip. On iPhone, it doesn't account for the height of the status bar. So in both cases, the grid frame exceeds the \"real\" height of the viewport.\n\nWe're working on a solution but we don't have anything concrete yet. #456 addresses the issue by ditching the `vh` unit entirely, but it also introduces problems related to scrolling.\n. I'm going to close this in favor of #434, which is very similar. We definitely need a solution to this, so we'll find one.\n. This change fixes a pretty bad issue with images and flexbox in Firefox, but you're right that it may be too sweeping of a change, especially since the specificity is higher than one class (`.grid-content img`).\n\nWe've seen the issue crop up multiple times now, but we can also just implement the fix manually in those areas.\n. Reverted with this commit: f9dafb5527c08910d97b4b53fa92aef573c2fab9\n. What OS are you using?\n. @calmass It must have been an oversight. Blocks and panels use `overflow: auto`, which prevents scroll bars from showing up by default, so off-canvas should as well. Off-canvas and panel are more or less the same component, just positioned differently.\n. There's no reason you can't use all of the framework files in another build process. The Foundation CLI is just running `gulp`, so you could look at the [template stack's Gulpfile](https://github.com/zurb/foundation-apps-template/blob/master/gulpfile.js) and just re-fit that for Grunt.\n\nOur build process:\n- Copies static content like HTML partials, images, etc.\n- Copies HTML view templates and generates routes\n- Compiles Sass\n- Ugilifies and concatenates JavaScript\n\nThe only thing you can't do without Gulp is use our routing plugin, which allows you to generate ui.router-compatible states from Yaml in each view template. But that's largely optional; if you're writing your own states in the JavaScript you don't need it.\n. At the end of the day the Foundation frameworks are just a collection of CSS/JS components, which means they can pretty much go anywhere. Foundation for Apps gets more restrictive because it requires Angular, but if you're just using our CSS components then you're probably fine. And we _definitely_ want people to abuse the framework, because we need it to be as flexible as possible. :) We don't have a lot of experience here with doing web-to-native ports, but your build process seems totally fine.\n. If you build something cool that you can publish, send it our way! We're starting to develop internal projects and do work for clients with the framework, and we're learning a lot about how a fully-responsive web app is built.\n. Block lists are for menus, so each `<li>` should hold a single menu item. Putting an inline list inside a single menu item (essentially nesting the menus) turns it into something of a non-standard pattern, so we probably won't add CSS to make this work out of the box. But of course, you can definitely write those overrides yourself for your own project.\n. Angular converts those attributes into more standard HTML, which you can then style. It looks like this:\n\n``` html\n<div class=\"accordion\">\n  <div class=\"accordion-item\">\n    <div class=\"accordion-title\"></div>\n    <div class=\"accordion-content\"></div>\n  </div>\n</div>\n```\n\nSo you can select `.accordion-title` in CSS to change the styles.\n\nWe probably need to make this more clear in the documentation, though. Developers who haven't used Angular might not know that it renders these directives as HTML templates.\n. Could you explain in more detail what you want to do? Do you want to style individual items in an accordion?\n. Right! Yes, we need to add this, because right now accordion titles only support plain text. If you're just doing, say, an image, you could use a pseudo-element to add an icon.\n\n``` scss\n.accordion-title::before {\n  content: url('');\n}\n```\n\nThis won't work if you need to add dynamic content, though, like an unread count or a label. It's on our list of things to add.\n. Going to close this out, but it's still on our list of things to do. :)\n. We'd like to do more with the touch gestures, so this is definitely an interesting idea. Unfortunately we can't do the 1:1 swipe/reveal that a native app can, but I think most developers who work on web apps understand that. (The libraries do exist but they're fairly complex, and might not work well in a framework where we have to provide generic solutions.)\n. So most touch libraries like Hammer, or the stuff built into Angular or Zepto, are not 1:1, which means you can't hold your finger mid-swipe, and move it around and have the UI element move with it. That requires a lot of math and DOM manipulation that's kind of expensive to calculate.\n\nFor example, we have the `zf-swipe-close` directive in Foundation for Apps, which lets you close a modal, panel, etc. with a swipe instead of a click/tap. It's a one-time action, though\u2014you do the swipe, and then the element animates out. You can't swipe slower or faster to change how the animation plays; it just runs in response to the swipe.\n\nCompare this to iOS or Android, which has a lot of those more fluid gestures built-in. And there are plenty of developers who write their own custom animations for their apps. Tweetbot for iOS is a great example. The web doesn't quite yet have the means to get that kind of fidelity out of motion. There are folks who are trying really hard, but the performance isn't quite there.\n. @soumak77 If you have the feature in a different branch of your fork, you should be able to open a PR with that specific branch.\n\nIf you don't have them in separate branches, I'd recommend making a new branch that compares against _this_ repo's master branch, and cutting/pasting the feature in there, just so the PR is as clean as possible.\n. We do test on Android 4 devices, phone and tablet. What device, version of Android, and browser are you using?\n. We've got a big improvement coming in v1.1, which will hopefully be out tomorrow. For the directive templates, we're using ng-html2js to pack them all into a single JavaScript file, meaning you won't need to copy those HTML files from the Bower package.\n\nWe also added a new feature to the Iconic directive which allows you to specify the path your icon files are in.\n\nAre there any other specific concerns you have related to directory structure?\n. Definitely! Thanks for your feedback. Other than which Angular add-ons we use (namely ui-router and ngAnimate), we want to avoid being prescriptive with regards to how people design or code. That'll always be a goal for all three of the Foundation frameworks.\n\nAlso, 1.1 got pushed to tomorrow (Monday), but it'll get there.\n. You can still install the package and just ignore everything in the `js` folder. If you're using a tool like wiredep, you can configure it to ignore all of the JavaScript that our library depends on.\n\nTo be sure, Foundation for Apps has _quite a few_ dependencies, so it is sort of lame that you have to install seven other things you probably won't use. (Although FastClick and the viewport units buggyfill are both nice.) If you check your dependencies into version control, you can ignore them in `.gitignore`, and if you don't, simply ignoring the folders is easy enough.\n\nBower 1.4 might add the ability to ignore dependencies, although there's been no word on it recently. Here's the pull request: bower/bower#1394\n. The `icon-*` classes should be used on the menu bar itself, not the menu group. However, a selector specificity issue was preventing the class from being applied properly. Fixed!\n. Here are the problems:\n- The menu bar is hiding overflowing content. We can fix that with `overflow-y: hidden`, and it shouldn't break anything else.\n- The action sheet container isn't centered within the menu bar item. It's anchored to the right instead, like a normal element would be. You can fix that with `position: relative; left: 50%;`. I'm not sure how to elegantly build that fix into the framework.\n\nApplying those fixes will make the action sheet visible.\n\n![screen shot 2015-04-22 at 6 37 05 pm](https://cloud.githubusercontent.com/assets/1142001/7288993/9e9fe7c8-e91e-11e4-8c06-2a697b43b51e.png)\n\nHowever, since it's anchored so far to the right it will be cut off, which is a known issue. We need to add some kind of edge detection to the action sheet. (Or rethink it entirely at some point, because it's a super unwieldy component right now, and probably overlaps in functionality with the popup.)\n. That Firefox `<input>` line height issue, what a fun one.\n. Could you describe the issue you're having in more detail? Maybe include a screenshot?\n. Also, does the error happen when you change to a new view, or when you perform some other action like a click?\n\n```\n\"Uncaught TypeError: Cannot read property '$$phase' of null\" (foundation.js line 29)\n```\n. Yeah, let us know if the changes on the master branch fix your issue.\n\nBut just so we're sure, the series of events that cause the error are:\n- Navigate to a state that has modals inside it\n- Navigate away from that state\n- Navigate back to the state\n- Click the modal open trigger\n- Error\n\nWe had bugs reported related to modals that are inside of a `ui-view`, and we were able to implement some fixes. See: #464\n. Do you use Bower to manage dependencies? If you do, switching to the master branch is easy. Just make this change in your `bower.json`.\n\n``` js\n{\n  \"dependencies\": {\n    \"foundation-apps\": \"master\"\n  }\n}\n```\n. We don't recommend it, because we actively develop on it. We maintain a `stable` branch as well that's always pointed at the last version we released.\n\nHowever, we're releasing v1.1 tomorrow, which will include this fix, so you can just upgrade when that comes out. Glad we could help!\n. View animation recently got an overhaul (#386), and it's now way more robust and stable. We were able to pretty thoroughly test it in all of the browsers we support as well. It'll be in version 1.1, which we're trying to get out on Friday.\n\nThe `align-items: stretch` thing is interesting. We use that to ensure that columns in a horizontal grid are all equal-height, since `height: 100%` tends to not cut it. But we could give it another look, also, if it's a performance hit.\n. There's a [gulp-compass](https://www.npmjs.com/package/gulp-compass) plugin that you can swap into your project. Run `npm install gulp-compass --save-dev` to get it in your project, and then follow the instructions on the readme to get it set up. You'll be replacing the call to `$.rubySass` in the Gulpfile to `$.compass`, under the `sass` task.\n\nYour project will also need a `config.rb` file, like a normal Compass project would. The config file needs to reference the Foundation for Apps Sass as an import path:\n\n``` ruby\nadd_import_path \"bower_components/foundation-apps/scss\"\n```\n. @soumak77 The classes follow ngAnimate's format; what would we need to change to make them work? I know they work with `ng-repeat`.\n. @soumak77 Okay, so the reason is that there are five types of Angular transition classes: enter, leave, move, add, and remove. Our motion classes support the first two: enter and leave. We should be able to add support for the rest just by chaining those other classes to the existing selectors. By adding at least add/remove, we get support for `ng-show` and `ng-hide`.\n. @soumak77 It's possible, I'll see how quickly we can put together a test case. It's a relatively simple Sass change, though.\n. @soumak77 And done!\n. Definitely, we'll see about getting it in soon.\n. Merged with 40abb575efde27fcff8c59b8ee18fff417a9919c\n\nThanks! :)\n. Nice, thanks!\n. Yep, #483 fixes this I believe. We're trying to put out a 1.1 tomorrow, so stay tuned!\n. You think there's any way to make improvements that are backwards-compatible, or would we need to wait for a major release to work on this?\n\nIt's also likely that v2 of this framework will be written in Angular 2, so then all of this is out the window anyway ;)\n. Sounds solid. We have no timeline for a v2 of Foundation for Apps, but there's also no real timeline for Angular 2's release. We're keeping a close eye on it, though.\n\nWith that in mind, I'm going to close this out. There are some big things that we have to wait until a major version to change. But we're always keeping track of this stuff, so we love the feedback. Keep it coming! :)\n. Merged with this commit: ab6303639d8b2bc26dd77d758d91746111c3996b\n. Closing in favor of #549.\n. Looks like some weird network issue. Can you try running everything manually? `cd` into the folder for the project that was created and run:\n\n``` bash\nnpm install\nbower install\ngulp\n```\n. Did you get any errors when you ran `npm install`?\n. Hmm, well you got an error the first time, so let's try again.\n\n``` bash\nrm -rf node_modules\nnpm cache clean\nnpm install\n```\n\nSee if you get the same errors with node-sass. Also, what version of Node are you running?\n\nIf this doesn't work, you'll likely need to ask the folks at [node-sass](https://github.com/sass/node-sass/issues) for some help.\n. Swapping for Ruby Sass is fairly easy. Install the `gulp-ruby-sass` library and then replace the code in the `sass` task of your Gulpfile with this code:\n\n``` js\nreturn gulp.src('client/assets/scss/app.scss')\n  .pipe($.rubySass({\n    loadPath: paths.sass,\n    style: 'nested'\n  })).on('error', function (e) {\n    console.log(e);\n  })\n  .pipe($.autoprefixer({\n    browsers: ['last 2 versions', 'ie 10']\n  }))\n  .pipe(gulp.dest('./build/assets/css/'));\n```\n. Right! Forgot they have a new 1.0 alpha branch. One more thing, if you want to lock in the version of Sass you're using with a Gemfile, you can add one to the project root, run `bundle install`, and then add the setting `bundleExec: true` to the `$.rubySass` config object.\n. @Joe-5mith Were you able to get gulp-ruby-sass working properly?\n. Can you try using the directive as an attribute instead of an element?\n. Well, unfortunately it was an oversight, but it's been fixed now. No CSS output in the framework should be hardcoded, except the `<meta>` styles we use to pass the media queries to the JavaScript.\n. We try to put out patches every few weeks, depending on how many crazy bug fixes we need to get out the door. So at best I can say \"a week or two\", but we don't have a date right now.\n. The move process seems to be very similar to enter, except that the class is different. Is there any real difference, or can we just chain `.ng-move` to `.ng-enter` and `.ng-show`?\n. Ah I see, so we need to prevent collision between enter/show and move. Ideally we find a way to do that without outputting a ton of extra CSS. Or we relegate it to a mixin-only feature, to keep our file size down.\n\nI also need to eventually take a look at how we store all these animation classes, if there has to be three sets of them. It would be better if the Sass variables looked like this:\n\n``` scss\n$motion-classes-enter: 'ng-enter', 'ng-show', 'ng-move';\n$motion-classes-leave: 'ng-leave', 'ng-hide';\n```\n\nThere are some nice selector manipulation functions in Sass 3.4 that would probably help, but they aren't in libsass yet (and probably won't be for a while), so I might write something that recreates what I need.\n. I opened a pull request that implements `ng-move` here: #560 \n\nThe Sass variable situation is becoming messy, but we'll roll with it for now. You can test this branch on an existing project with `bower install foundation-apps#ng-move-motion`\n. Yep, that should be `e.target` instead of `e.srcElement`.\n. The team looked over this today, good stuff!\n\nWe like the `zf-if` concept as a different way to do visibility, but not necessarily as a replacement for Interchange. The benefit of Interchange is that visibility within a set of elements is mutually-exclusive\u2014only one element within an Interchange element can be displayed. In some of your examples, each element in a set needs to use an `only` version of a media query, otherwise every element would appear at once on a large screen.\n\nOur main piece of feedback for the `zf-if` concept is that you could simplify the directive by having just one, called `zf-if`, and then read the name of the media query off of the value of the directive, like so:\n\n``` html\n<div zf-if=\"medium\"></div>\n<div zf-if=\"small only\"></div>\n```\n\nThis solves another issue which this feature would need to address, which is that the breakpoint names are hard-coded. Right now small, medium, and large are built-in, but the framework also has xlarge and xxlarge, _and_ the user can change the names of the media queries, or add new ones. You can access them through the `foundation.mediaqueries` module. With this in mind, a more generic `zf-if` directive makes sense, because then you're just parsing a string and checking it against the global media query list.\n\nAs for element queries, we're not sure we're ready to implement them quite yet. Also, we don't want to add another external library to the framework right now. Foundation for Apps already has seven dependencies, so we'd like to hold off on adding any new ones until we're ready for a v2 of the framework.\n. Our next release will be a patch, and then probably a minor release after that (1.2). Sorry for making you wait so long! :) The work you're doing is fantastic.\n. Could you give an example of how you'd use this new feature?\n. @soumak77 So what we're trying to solve is the issue of incremental builds, where you may not be passing every file through the router. Your use case seems somewhat specific, but from a Gulp perspective, being able to support partial builds (like using `gulp-cached` to only pass modified files through a stream) would be useful.\n\nOne issue I see with your current approach is that the more you append, the more `foundationRoutes.concat` calls you get in your code, and the plugin right now probably can't differentiate between a route being _added_ versus _changed_, so if you ran it too many times the file would become larger than necessary. To be sure, though, actually reaching into the existing file and modifying the JS object in there would be tricky, as you wouldn't know the exact formatting (uglified or not? etc.)\n\nI wonder if you can store the routes in memory and just reference that when re-generating the routes file. There are some Node modules that would let you store the data after the process exists.\n\nI like the idea of using module configuration, since that will pull that `foundationRoutes` variable out of the global scope. It's worth noting that we'd like to move the routing plugin into its own npm module in a future version of the framework, because we realized having a node module in a Bower package is a little weird. I'll take the blame for initially suggesting that ;)\n\nTo do it right, we would probably introduce the module in 1.2, but keep the old one in place until 1.3, when we formally deprecate it by removing the `bin` folder from the repo. Your idea requires changing the order in which files are loaded in the HTML (libraries, then routes, then boostrap), so a new version of the plugin could introduce these breaking changes.\n\nIf you're interested in working on those bigger changes to the plugin, I can set up the new repo with some test files set up and you can hack away at it.\n. @soumak77 You're the best! Thanks so much for your interest in contributing to the framework. Once again, we don't have a timeline for 1.2, so don't fret about getting it done right now.\n\n[Here's the standalone module.](https://github.com/zurb/front-router) To recap, here are the goals of a new version:\n- Support incremental builds: the parser needs to be able to print a routes object without passing every file through every time.\n- Use module configuration instead of a global variable to print routes.\n- Keep it backwards-compatible! For version 1.2, the `foundation.dynamicRouting` module should work with the old _and_ new router. For version 1.3 we can drop support for the old router.\n. @soumak77 Hey, no problem! We're going to try and square away some of the bigger Apps issues and pull requests this week.\n. @soumak77 Since it's a feature, we can save it for 1.2. We don't have a timeline for a 1.2 right now, but you'll have plenty of time to work on it. We weren't planning on implementing this feature specifically, so you can definitely own it.\n\nIf you give me one more day to review this with the team, I'll get you some feedback. :)\n. The CLI will work with your current projects, so you can update it no problem.\n\nAs you correctly guessed, most of the CLI's commands are wrappers for Bower and npm functions. So `foundation-apps update` is the same as `bower update`, and `foundation-apps watch` is running `npm start`, which runs a local copy of Gulp. (This means you don't need Gulp installed globally for it to work.)\n\nThis abstraction will make more sense when we move Foundation 6 and Ink 2 onto this CLI, and then all three frameworks will use the same tool. The command name will also change to just `foundation`.\n\nGlad you're loving it! We feel really good about 1.1, it's _way_ more stable than 1.0. :)\n. Could you `cd` into the folder created and run `bower install` manually? That's the step of the install process that it's failing on.\n. Hmm, could have been a temporary network hiccup or an issue with proxies, depending on the kind of network you're on. If it happens again let us know. :)\n. This will fix components not loading properly in HTML5 mode, but it would affect apps that still use hash bangs, but also run in a subdirectory. In hash bang mode, the relative component paths are always relative to the `index.html` file of the app, no matter what route you're on. If this was changed to an absolute path, it would look be looking in the wrong place.\n\n**Edit:** Actually, might need to look into that again. I was trying to figure it out a few weeks ago, what the root directory is when a directive template is being loaded.\n\nWe've started distributing a pre-compiled templates file, and our project template now pre-compiles templates instead of loading all those HTML files separately. Would that method get around this issue?\n. Yep, the Travis file has been updated so that won't happen.\n. If you're fine with it not being a single-page app, then you should be able to just drop in the CSS, and the JavaScript for Angular and Foundation and it'll work. We distribute the files on npm and Bower, so you can get the compiled CSS and JS from there.\n\nIf you want it to be an actual single-page app, though, that's a whole new can of worms. Normally Rails handles your URL routing, and serves up all the HTML. With Angular, however, your app has to have one entry point (an `index.html` file), and Angular handles all of the routing and rendering of HTML.\n\nWe recently redesigned the [ZURB Library](http://zurb.com/library), which is a Rails application that uses Angular on the front-end. The server redirects all requests to `index.html`, and Angular handles the route from there. Also, Rails doesn't serve up any HTML; the backend is just an API that sends data to the client as JSON, and Angular uses it to write the HTML for each page.\n. @soumak77 Ah yeah. So `move` only happens on `ng-repeat`, which also uses `enter` and `leave`. So is the main concern getting `move` to work with those two specifically? If that's the case, then can `move` be the only animation event (of the five there are) that gets its own unique classes?\n. @soumak77 Do you think the move animations are needed for every type of transition? There's slide, fade, hinge, zoom, and spin.\n. @soumak77 Yeah, CSS output is a concern, but I think the move classes specifically will go behind a Sass variable. I was also wondering if the effects were practical for this specific type of transition. But I'll just add all of them! No problem.\n. Going to close this and open a new PR later when I've implemented it properly.\n. Do you want the panel to be open as long as the `vehicles` state is active? Maybe you could drop the `zf-open` and use ui-router's state events to open/close the panel. The [ui-router wiki](https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions#how-to-open-a-dialogmodal-at-a-certain-state) goes into more detail, but here's a (possible) code example:\n\n``` js\n$stateProvider.state(\"items.add\", {\n  url: \"/add\",\n  onEnter: ['$stateParams', '$state', 'foundationApi', function($stateParams, $state, FoundationApi) {\n    foundationApi.publish('#detail-panel', 'show');\n  }],\n  onExit: ['$stateParams', '$state', 'foundationApi', function($stateParams, $state, FoundationApi) {\n    foundationApi.publish('#detail-panel', 'hide');\n  }]\n});\n```\n. The grid classes only apply to a panel when it's turned back into a block. Although maybe folks are expecting the classes to work with both components?\n\nWe could probably use more built-in classes for panel sizing. In the mean time, you can use the `panel-layout()` mixin to create a panel with a custom orientation and size.\n\n``` scss\n.custom-panel {\n  // The second parameter can be a percentage or absolute width\n  @include panel-layout(left, 100%);\n}\n```\n. Do you think a handful of pixel-based sizing classes are enough, or are folks expecting a range of percentage-based classes on par with the grid? It could end up being a lot of extra code if we have twelve sizing classes, and actually twice that because you need different ones for horizontal and vertical panels.\n. I'm amazed how complicated the math for this turned out to be.\n. You can just drop an image into the `<a>` and it will work just fine. There is an issue right now where the image still has a bottom margin, because it's expecting text to be below it. You can fix it for now with this selector:\n\n``` css\n.menu-bar > li > a > img:first-child:last-child {\n  margin: 0;\n}\n```\n. There shouldn't be a scroll bar if a grid element is shrunk, because \"shrink\" means \"this element should only take up the space it needs\". So using `overflow: hidden` (or `overflow: visible` to make using dropdown menus easier) as a default would make sense.\n. This is really interesting, do you think you could add a section to the Iconic documentation page that explains this, with a live demo and code example?\n. Thanks!\n. One last question, the last section, \"Delay Loaded Icon\" shows two code examples, one where the icon doesn't render and one where it does. Is it possible to just have the second example, since it's the one that implements the fix you describe? Our documentation should skew towards having one example to show how to do something. If you'd never use the first example, then we can probably drop it.\n. Sounds good, I'll update it.\n. This should be fine, although one thing we want to avoid in the future is hard-coding class names. All of the Foundation frameworks are written in Sass mixins, which means you can rip out our entire class structure and replace it with your own if you want. With that in mind, JS plugins should avoid adding or referencing built-in classes, because we can't guarantee that the user is using them.\n\nTo be sure, though, we do this a lot in Foundation for Apps right now. It's also trickier with Angular, because our components are these templates that you just drop in. In Foundation for Sites it's easier, because the user just drops a bunch of data attributes onto existing markup.\n\nThe framework is very new, though, and for specific components like this not many people are probably using the mixins yet. They're most commonly-used for the grid, and that's also arguably the place they're most valuable.\n\nSo if we merge in #561, will this work as-is, or will you need to make another change?\n. @soumak77 If we pull in #561, could you merge/rebase this PR and get the proper fix in to we can reconcile the two?\n. Alright, merged in #561.\n. Nice, so it's solid, then?\n. Awesome, thanks!\n. Thanks!\n. There weren't any big changes to the grid from 1.0.3 to 1.1 (just two commits from what I can tell), but this may have been introduced in 1.0.3.\n\nI think the fix is changing the default sizing behavior of grid elements.\n\n``` scss\n.grid-block,\n.grid-content {\n  // Old\n  flex: 1 1 auto;\n  // New\n  flex: 1 1 0;\n}\n```\n\nSetting the preferred size to `0` instead of `auto` ensures that the blocks actually take up even amounts of space and don't vary in their widths. We initially thought that `auto` did the same thing, but sometimes column widths still find ways to vary. It seems like setting it to `0` is the right thing.\n\nWe'll need to test it in every browser, of course, since they're all implementing Flexbox a little differently, and test the change in any existing codebases to make sure it's not a breaking change. I don't think it is, though, especially since it's the behavior we wanted all along.\n. @etcook Awesome! Originally grid elements just used `flex: 1 1`, but then we added `auto` to the end because different browsers used different defaults for the last property (`flex-basis`). But it sounds like setting it to `0` across the board will get us the result we want. We'll do some testing on it.\n. Hm, if you have time can you drum up a more isolated test case?\n\nOmitting the last value of `flex`, which is `flex-basis`, is problematic because IE10/11 have a different default value, so you have to be explicit with it. IE10/11 _also_ miscalculates the width/height of any element with a `flex-basis` other than `auto`, so that's fun. [Learn more here.](https://github.com/philipwalton/flexbugs#7-flex-basis-doesnt-account-for-box-sizingborder-box)\n. The plugin is called [allmighty-autocomplete](https://github.com/JustGoscha/allmighty-autocomplete) if you want to use it. It's not developed by us; we just use it in our documentation.\n. We don't plan to include it with the framework by default, but it's pretty easy to integrate into an existing project. Run `bower install allmighty-autocomplete --save`, then add the path to the array of JavaScript paths in your Gulpfile. The library also includes a CSS file with some default styles you can use.\n. Generally grid blocks don't scroll, only content blocks. Looking at your markup, I would expect the first element (with the `<h2>` and `<h4>`) to be fixed at the left, the last element (with `Go code!`) to be fixed at the bottom right, and the middle element to be fixed at the top right, _and scrollable_. What's your intended behavior?\n\n**Edit:** Unless the entire modal is a vertical grid, in which case I would expect all three elements to stack vertically. The top and bottom ones don't move, and the middle one scrolls. This is the intended behavior of the grid.\n. I wouldn't expect the `.grid-block.vertical` element to scroll, just the `.grid-content` areas. I think the HTML of this modal can be refactored.\n\nAssuming you want to anchor elements at the top and bottom, and keep the middle open to show content, you can do this:\n\n``` html\n<div class=\"grid-block vertical\">\n  <div class=\"grid-content shrink text-center\">\n    <h2>Modal Header</h2>\n  </div>\n  <div class=\"grid-content\">\n    <div ng-repeat=\"x in [1,2,3,4,5,6,7,8,9,10,11,12,13]\">\n      <p>Content {{ x }}</p>\n    </div>\n  </div>\n  <div class=\"grid-content shrink text-center\">\n    <a class=\"button primary\">Next</a>\n  </div>\n</div>\n```\n\nThe top and bottom have `.shrink`, so the middle section is expanded. The elements added with `ng-repeat` fill in the middle space.\n. There needs to be a distinction between modals that use the grid and ones that don't. A plain modal has padding and is `display: block`, while a grid modal has no padding and is `display: flex`. If we consider a plain modal to be the default (which is sensible, since it's the simpler form of a modal), then we need a class, maybe `.grid`, for modals to shift them into grid mode.\n\nWhatever solution we use here should be applied to panels and off-canvas as well, which are two other components that have these two modes.\n. We're working on improvements to the grid documentation, namely using... y'know, _actual examples_, so look forward to that.\n\nWe've had some trouble explaining the difference between the three grid elements\u2014the frame, block, and content block. Recently though, we've found an easier way to frame it. (But you're right, `.grid-content` is always the lowest-level.)\n\nHere's a no-frills grid. It only uses two of the elements.\n\n``` html\n<div class=\"grid-frame\">\n  <div class=\"small-3 grid-content\"></div>\n  <div class=\"small-3 grid-content\"></div>\n  <div class=\"small-6 grid-content\"></div>\n</div>\n```\n\nHere's that same grid if we nested a new grid inside the first element. It adds a new, third element for nesting purposes.\n\n``` html\n<div class=\"grid-frame\">\n  <div class=\"small-3 grid-block\">\n    <div class=\"grid-content\"></div>\n    <div class=\"grid-content\"></div>\n  </div>\n  <div class=\"small-3 grid-content\"></div>\n  <div class=\"small-6 grid-content\"></div>\n</div>\n```\n\nThe main difference from a typical float grid is that you can add sizing, source ordering, etc. classes to block _and_ content.\n. This is something we haven't fully addressed yet, so now's a good time to. Some of the components have default classes and animations applied. Panels will have this issue also.\n\nMaybe we can switch up the logic so that if you omit the `position` attribute, it doesn't add anything? In our examples we always include it, even though it does have a default value of `left`.\n. Opened #589 since this is relevant to multiple components.\n. It's a little awkward right now, but you do need both the `foundation.dynamicRouting` and `foundation.dynamicRouting.animations` modules to make it work, even if you're not using our routing plugin.\n\nWhen we released 1.0, view animations only worked with the routing plugin. We fixed this in 1.1, but to maintain backwards compatibility, we didn't want to change the names of the modules. Unless there's a way for us to create a module alias, so we can change the name, we'll have to keep the naming convention as-is for the time being.\n. Seems like that fix will work fine for now. [There's been talk](https://github.com/zurb/foundation-apps/pull/550#issuecomment-88192466) about making the routing plugin's process a little more robust than dropping an array into the `window` object, so look forward to that!\n. The ghosting issue is a WebKit bug, but we have a workaround in the CSS. However, the setup for the animation isn't working properly. The first parent of the views should temporarily get a class called `.position-absolute`, but here it's not. We'll look into it.\n. Could you try reworking your HTML so that the `ui-view` element is wrapped by a `grid-block`? So it would look something like this:\n\n``` slim\n.grid-frame.vertical\n  .grid-content.shrink\n  .grid-block\n    .grid-content ui-view\n      .grid-container\n```\n. Try adding the class `.ui-animation` to the view and see if that fixes it. That won't be necessary in the next version of the framework (e64d2eee89ac7f4b7e9b5cecea17b68d2b6c460c).\n. This happens because both views are temporarily `position: absolute`. But the wrapper element around the `ui-view` container is what should prevent the two views from shifting around. If the wrapper and the view are the same size, you shouldn't be able to tell.\n. Nice! We know it's a little confusing ;) In a future version of the framework we'll just build in the container class, like `.ui-view-container` or something like that. We're also currently writing a tutorial on Foundation for Apps that will cover view animation.\n\n@huphtur, let me know if these fixes work. There's two parts to setting up view animation:\n1. Give the `ui-view` a class of `.ui-animation`.\n2. Wrap the view in a parent container that has the same size. Usually this is just another `.grid-block`.\n. The markup @DeanSolecki wrote is the right way to do it. If anyone has any more problems let me know!\n. Can you try running `npm start` and see if that works?\n. `npm start` is what the CLI runs in the background, so until we get this fixed you can use that command and it'll work just fine.\n\nWhat versions of Node and npm are you running? Use `node -v` and `npm -v` to find out. **Edit:** never mind, you totally already said :)\n. @quook What version of Node are you on? Maybe it's an issue with 0.12; most of us here are still running 0.10.\n. Alright, I was able to recreate it in Node 0.12.2, so it's an issue with Node 0.12.x.\n. Just published [version 1.1](https://github.com/zurb/foundation-cli/releases/tag/v1.1.1) of the CLI which addresses this issue. Run `npm update -g foundation-cli` to get it.\n. I don't know that you can definitively _prove_ that Angular is on its way out just yet ;) Either way, a v2 of this framework is still a way off, so we'll cross that bridge when we get there. But to be sure, the opportunity cost of sticking with Angular vs. switching to another framework are about the same, because either way we have to learn something new.\n. @zimt28 Are there any examples in the wild of people doing this? Writing pure classes and then hooking them into multiple libraries?\n. Sass can't import plain CSS files using `@import`, only other Sass files. Thankfully, it's pretty easy in Gulp to just insert those extra CSS files.\n\nTo add external CSS to your main CSS file (which was compiled from Sass), there's two steps to take.\n\nFirst, add the plain CSS files to `gulp.src`. The files will be combined in the order you list them.\n\n``` js\nreturn gulp.src(['path/to/file.css', 'path/to/sass.scss'])\n  .pipe(/* ... */)\n```\n\nNext, add a concatenation step to the stream. gulp-sass will ignore your plain CSS, only processing the Sass files. But now we have two CSS files, and we need to combine them into one. gulp-concat will do this for us, and the template project includes it.\n\nYou can insert concat before or after autoprefixer, just make sure you do it before `gulp.dest()`.\n\n``` js\n// Compiles Sass\ngulp.task('sass', function () {\n  gulp.src(['path/to/other/file.css', 'client/assets/scss/app.scss'])\n    .pipe($.sass({\n      includePaths: paths.sass,\n      outputStyle: (isProduction ? 'compressed' : 'nested'),\n      errLogToConsole: true\n    }))\n    .pipe($.autoprefixer({\n      browsers: ['last 2 versions', 'ie 10']\n    }))\n    .pipe($.concat('app.css'))\n    .pipe(gulp.dest('./build/assets/css/'))\n  ;\n});\n```\n\nIn the future we'll see about adding more documentation on how the template stack actually works. The Gulp team itself doesn't publish any best practices for how to structure a Gulpfile, but if you want to see how \"the big kids\" do it, I'd recommend you check out Google's [Web Starter Kit](https://github.com/google/web-starter-kit/blob/master/gulpfile.js) and the [HTML5 Boilerplate](https://github.com/h5bp/html5-boilerplate/blob/master/gulpfile.js).\n\nHope this helps!\n. Like @AntJanus said, all of the components are generally framework-agnostic. Half of them also work without any JavaScript, most critically the Flexbox grid. You can install the Bower or npm package and just drop in the Sass files (or compiled CSS).\n\nThe reason we didn't write a wrapper around plain JS plugins is because then we lose some of the benefits of the framework itself. That being said, hopefully our components can be flexible enough to be dropped into any JS framework. For example, Motion UI will eventually be a standalone library, and it'll be way more configurable. Then you could use it with, say, Ember's Liquid Fire, in addition to ngAnimate.\n\nWe don't have a timeline for a v2 of a framework, but when that time rolls around we'll probably be reassessing how the framework is built, since Angular 2 is a thing.\n. Which control on the page should open the modal? And could you post the code for the modal and the element with `zf-open` that triggers the modal?\n. Try using `.grid-content` instead of `.grid-block` for the inner elements. Blocks are just for layout, while content blocks are for actual content. The main difference is that one is `display: flex` and the other is `display: block`. The flexbox behavior is interfering with the display of the images.\n. Ah yeah, I just remembered that we've run into this, so I think you're right. For a while we had a fix in place that just applied `width: 100%` to all images within a grid, but it was reverted.\n. @tatemz That second issue was fixed a few weeks ago, it just hasn't landed in a stable version yet. (caaf800f21cf4750b534709d1e0371a9a2152105)\n\nAs for the main issue, I wonder if applying `min-width: 1px` to flex children across the board would work.\n. A few remarks about your markup:\n- You don't need the `panel-bottom` class on the panel; the `position` attribute adds it for you.\n- The `zf-panel` attribute doesn't need a value. Since you have an ID on there, you're good.\n\nThe layout for panels is a little tricky; the panel should never be _inside_ any content blocks (`.grid-content`), just _adjacent_ to them in the HTML. So a super basic layout would look like this:\n\n``` html\n<div class=\"grid-block\">\n  <div zf-panel></div>\n  <div class=\"grid-content\">\n    <p>Content!</p>\n  </div>\n</div>\n```\n\nIn this example, there's one main content area that spans the entire width, along with the panel, and both of them share a container. This ensures that the panel appears on top of the main content, and avoids issues with scrolling containers and `position: absolute` elements.\n\nThat might be your issue. If not, could you post a larger code example for us to take a look at? Thanks!\n. Awesome, thanks!\n. So it looks like you're trying to run unit tests with PhantomJS?\n\nHere's the key error: `TypeError: 'null' is not an object (evaluating 'mediaQueries[key].replace')`\n\nMedia query settings are stored in a Sass variable, which we pass to the JS by serializing it and attaching it to a specific `<meta>` tag. The JavaScript reads the style attribute of this special meta tag, and turns it into an object of breakpoints.\n\nWe've seen this before, and the reason it's happening is because the PhantomJS instance isn't referencing any compiled CSS. We probably need a workaround for this, but Interchange specifically needs this breakpoints. Maybe we can get around it by just loading in a default set if it can't find any.\n. I think this is something we can fix, by dropping in a pre-set list of media queries if pulling from the `<meta>` tag doesn't work. We had this issue with the routing plugin as well, and we were able to fix that.\n. Do you get any JavaScript errors?\n. We don't support Browserify, or any other module loaders right now, but it's something we'll look into eventually. In the mean time, the correct name of the Angular module is just `foundation`, not `foundation-apps`.\n\nThe `foundation` module gets you every UI component at once, but you can also only import individual elements, like `foundation.panel` or `foundation.accordion`. The [Angular modules](http://foundation.zurb.com/apps/docs/#!/angular-modules) page in our documentation breaks down every module and what they all do. You can also check out the [bootstrapping code](https://github.com/zurb/foundation-apps-template/blob/master/client/assets/js/app.js) for our template project to see what we're loading specifically.\n. What problem does this fix?\n. I see, thanks for clarifying :)\n. It might be possible to make the body of the switch a pseudo-element, and then the text just sits after it. The thing is that the switch itself needs to be clickable, _and_ not require any JavaScript, which is why it's always been structured how it is.\n\nHowever, people have also asked that we support text _inside_ the switch, although it might be possible to support both. Inner text isn't a label, anyway, it's a state.\n. Because the framework is geared towards responsive web apps, in general we assume that any pane of content _could_ need to scroll, as its dimensions will change wildly between mobile and desktop. But you're right that the overflow issue has come up multiple times.\n\nWe have a `.noscroll` class for grid elements, but right now it actually applies `overflow: hidden`, which is also problematic. So I just added a change to make it `overflow: visible` instead.\n\nWe've had a number of issues with overflows and scrolling, so we're definitely looking at ways to better handle that stuff. For example, most JavaScript plugins assume the window is always the thing scrolling, not some nested scrolling panel, and F4A projects are made entirely out of those. (Tether has been problematic in this regard.)\n. Definitely, it's actually in the docs-specific bootstrapping code, so it'll be moved before it's merged.\n. Closing in favor of bc01826c7bd1eb8e4ed6fb3bf293fcb0aebcaf9f which solves the same issue without extra CSS.\n. Thanks for the GIF, and also revealing to me that Chrome DevTools can _slow down animations_. That's awesome!\n\nBefore we merge this, we'll make sure it works in other browsers.\n. Actually, looking closer, I don't think this is the right fix. The issue is specificity:\n\n``` scss\n// Defined by switches\n.switch > label {\n  margin: 0;\n}\n\n// Defined by forms\ninput[type=\"checkbox\"] + label {\n  // This is overriding the margin: 0; above\n  margin-left: 0.5rem;\n}\n```\n\nMatching the specificity within the switch class fixes the issue. This commit implements the fix: 951eeadd343e0b7fdf9482987d9d9f9e7349b318\n. I'm fine with one less deploy step. Thanks for spreading the word. :)\n. Browser compatibility is the _best_. Thanks!\n. We're about ready for a patch release, just need to close down a few of the more pressing issues. View animation specifically is something we want a little more solid.\n. Definitely, we'll see about getting that in shortly.\n. Add the `--production` flag to the command you're running. This enables compression for the CSS and JavaScript.\n\nThe plugin gulp-if controls the process of compression. If it sees the `--production` flag, the JavaScript runs through the `uglify` transform. Otherwise, it skips over it.\n. You'd need to use an iframe inside of a modal, but I don't know that Facebook allows their share screens to be loaded in iframes\u2014they have to be in their own window. (See more [here](http://stackoverflow.com/questions/9302023/load-facebook-sharer-in-iframe).)\n\nThere are a few ways to trigger this screen, which Facebook details in their [developer documentation](https://developers.facebook.com/docs/sharing/reference/share-dialog).\n. It's a known issue, @jeanieshark and I spent a while looking at it but couldn't figure it out. I'll double-check on how far we got in diagnosing the problem.\n. Fixed via a685cccf2a13dff77cdd728f41f9dbbbefbdf643. It'll be in the next patch release.\n. The Git clone may have failed. Can you try running the command manually?\n\n```\ngit clone https://github.com/zurb/foundation-apps-template.git mwepd2\n```\n. Oh! You're on an old version of the CLI\u2014it doesn't use Ruby at all now. Run `npm update -g foundation-cli`. **Edit:** Maybe. We should have scrubbed any Ruby-related instructions from our docs and readmes, but if we missed something, let us know.\n. @soulstyle Do you see a project folder being created after running `foundation-apps new`? The folder should still be there even if the install fails.\n. If you want open elements to close when a toggle is fired, use `zf-hard-toggle`. It toggles the element with the ID you specify, and also closes other open elements. Does that sound like what you need?\n. What version of Node and npm are you running?\n\n```\nnode -v\nnpm -v\n```\n\nAs for the project you tried to make, the files are all there. Can you try running `npm install` manually from within the project's folder?\n. The commands are identical. `foundation-apps watch` is just running `npm start`. But for the sake of consistency we'll make sure that it lists the same command.\n\nJust so we can close this out, could you try running the `foundation-apps new` command again? You should get a list npm errors above the text at the end where it says \"There were some problems during the installation.\"\n. Ah okay, it's a permissions issue with your computer. [Here's an npm issue comment](https://github.com/npm/npm/issues/4815#issuecomment-48080140) that details a fix. (Specifically it's the `sudo chown` commands halfway down the comment.)\n. The `$order` parameter in the mixin has an extra comma. Remove that last comma and you'll be good.\n\nIt looks like our documentation has a few formatting issues like these, so we'll make sure they get fixed.\n. Can you describe in more detail the problem this creates? What do you mean that the Angular application is loading multiple times?\n\nAlso, are you using our Gulp routing plugin or writing your own routes?\n. The Iconic file hasn't changed since version 1.0; is this a problem you encountered starting with a specific version?\n. Since it's an issue with Acorn, we'll close this out.\n. We patched the shrink behavior of grid elements to be `overflow: visible`, meaning they'll never have a scroll bar (see here: b44df9ee31e899a74a2dd2ff2d61e4b3fb096b58). The fix is in master, but hasn't landed in a stable release yet. We should have a patch version out soon.\n\nIn the mean time, you can patch this behavior yourself by adding `overflow: visible` to grid elements you know are shrinking.\n\nContent blocks are always `overflow: auto`, meaning they get a scrollbar if the content is taller than the container. If your blocks are really short (which it looks like they might be, based on the screenshot), there's a good chance they get a scroll bar. You can disable scrolling by adding the `.noscroll` class to the element.\n. Thanks! :)\n. This might be fixed on the master branch, where we've prevented the minimal UI from displaying, which gets around the weird height calculations Mobile Safari does. See #603, and the commit that replaced it, bc01826c7bd1eb8e4ed6fb3bf293fcb0aebcaf9f.\n. We tested this in multiple browsers to be sure, and I don't think anything we can do will fix it. Foundation for Apps projects are built with a series of scrolling boxes\u2014the window itself never scrolls.\n\nIt seems that when you try to scroll a box in a direction it can't scroll, that scroll event goes straight to the window, instead of the next scrollable parent. If you're on a Mac, you can see the rubber-banding effect when you scroll a code example in the docs up and down. It's trying to scroll the window, instead of the scrolling box its inside.\n\nSo we determined this to be a browser issue, and there isn't really anything we can do about it.\n. Right, inner containers with a vertical scroll will continue scrolling the next parent up when they reach the bottom. The same doesn't apply to horizontal scrolling containers.\n\nAre you saying ui-grid fixes the horizontal scrolling issue?\n. @sgraham3311 Hm, well let me know if you come across a solution that gets around this, because it seems like a browser or operating system issue.\n. Two weeks is a good estimate. A few of us on the team are out of the office next week (vacation, off-site training), but the week _after_ we can put out a patch.\n\nThanks for continuing to use the framework! The work you've contributed so far is fantastic :)\n. What version of Android are you using, and what web browser?\n. Hmm, interesting. Have you noticed any performance differences between the two, or any other gotchas that would be worth knowing about?\n\nEither way we probably won't swap out a dependency until a v2 of the framework.\n. @soumak77, you're the best! You seem to have adequately answered this question, but @vincentmorneau, if you need any more clarification, let us know.\n. There is documentation on our modules [here](http://foundation.zurb.com/apps/docs/#!/angular-modules), but we could be doing a better job. There were talks to write more wrapper methods to make the API a bit less terse (see #390), but there's nobody working on it right now.\n. As for the event firing, a modal should always fire an event when it closes, no matter how the close happened. That makes sense.\n. That's for popups, not modals. But your issue is fixed in master?\n. Gotcha. Looks like this is fixed, then.\n. How does this interact with #640? Can we merge both?\n. Nice, thanks for implementing it!\n. Hm, try running `bower update` manually and see what happens. You might be asked to manually select a version of Angular to install\u2014just pick the latest one along the 1.3.x line and you should be fine.\n. Yep, you need to manually type in 1.1. Since minor versions can add new features or introduce deprecations, package managers like to safeguard you from making big version leaps automatically.\n\nBut if you're cool with that, you can edit your `bower.json` to look like this:\n\n```\n\"foundation-apps\": \"~1.1\"\n```\n\nBy taking out the last number, Bower will automatically update the package to 1.1, 1.2, and beyond.\n\nLet us know if you're able to upgrade properly. Unfortunately we introduced a bunch of big structural changes to our code in 1.0.2, which doesn't change how you use the framework, but does affect how your Gulpfile needs to work. The [release notes](https://github.com/zurb/foundation-apps/releases/tag/v1.0.2) for 1.0.2 cover the upgrade process.\n. Yep, that's a bug, see zurb/foundation-cli#11. The CLI is overdue for a new patch, so when that gets out it'll have this fix.\n\nGlad the upgrade process worked, though! We don't plan on requiring anything substantial like that again for the v1.x line.\n. We prefer using single quotes for all Sass/CSS values. What's the error you're getting?\n. Could you give us any more info on your Webpack setup, or a full console log? I'm trying to figure out if this is an issue specific to sass-loader. If we change these quotes, there's always the chance that a different processor could break, so I'd like to figure out if it's a problem on our end or not.\n. Ah yeah, the 1.0.2 upgrade guide was written before we introduced those two libraries to the template.\n\nAlso, since you've upgraded, you can remove `front-matter` and `through2` from your dependencies. Those are wrapped up in the `front-router` package.\n. It is `gulp-if`, see if that's missing.\n. Yeah, maybe try cleaning out your folder and starting again. The error here is related to through2 being used by vinyl-fs, which is being used by gulp. Dependencies get _complicated_. But it doesn't appear to be related to the instance of through2 that was being used at the top level.\n\nTo start over, try:\n\n``` bash\nrm -rf node_modules\nnpm cache clean\nnpm install\n```\n\nAlso, when you run `npm uninstall`, you need to add `--save` or `--save-dev` to make the change stick in your `package.json` file.\n. Nice! If you have any suggestions for Front Router, let us know.\n. Can you post a stack trace for that error, so we can see where in the code it's being generated?\n. Just published version 1.1.2 of the CLI which fixes this. See zurb/foundation-apps#11\n. We don't have any documentation for it, but we aren't doing anything weird with Angular, so there's no reason it wouldn't work.\n\nWe don't plan on writing anything in the near future. We're mainly focused on pure web apps, not web-to-native ports.\n. Which template are you using? Is it one from our resources page or the [official starter template](https://github.com/zurb/foundation-apps-template)?\n. Okay, are you running the downloadable templates or the one that's created when you run `foundation-apps new app`?\n\nAfter that, what command do you run and what's the error you get?\n. What's the error?\n. The setup for those templates is admittedly fairly messy\u2014we don't even have a good process for updating their dependencies. I can't say this will be fixed soon unfortunately, but we know it's something we need to do.\n\nI can ask today if we can carve out some time to change those ZIP files.\n. I believe [wiredep](https://github.com/taptapship/wiredep) is the more popular solution these days, but it's also in a state of flux because the Bower community is in the middle of an ongoing discussion on how the `main` field in `bower.json` works, so I'm not sure how reliable it is right now.\n. Updated all of the devDependencies in the template, and everything looks solid. [Here's the commit.](https://github.com/zurb/foundation-apps-template/commit/d1e0409954aee3cdf19c90d7ca57a719806e73bb)\n. It's in there right now, but not in a stable release. We'll see about getting a patch release out in the next week.\n. Do you mean flagging components that require JavaScript?\n. Are you seeing this in your own project, or just our template?\n. Alright, then it's probably an issue with how the templates are configured rather than the framework. We'll look into it.\n. If the plugin attaches the smooth scrolling behavior to the window, nothing will happen, because Foundation apps don't scroll on the window\u2014they scroll on inner `<div>` elements.\n\nPresumably you'd need to configure the plugin to attach to grid elements. You can target `.grid-content` specifically, because these are the scrolling elements.\n. Is this an accidental PR by chance? The package name has been changed to `foundation-apps-custom`, so this can't be pulled in as-is.\n\nAs for Angular 1.4, we haven't tested the framework with it yet, so we're staying on 1.3 for now.\n. Did you get any errors when running `npm install -g foundation-cli`?\n. Alright, in this case I think the Git clone failed. Does the `git` command work properly in your environment?\n. I see. The CLI is failing on `process.chdir()`, which is when it changes directory to the folder that `git clone` just created. Do you see that folder after running `foundation-apps new`?\n. Ah, so the issue is Node not being able to shell out to the `git` command. In that case I assume the CLI would report an error relating to `exec('git clone')`, but in this case it's not.\n. We haven't tested the framework on 1.4 yet, so stick with 1.3.x if you can. Although there's a decent chance it'll work with 1.4 right away.\n. @soumak77 If you haven't seen any issues, we could introduce a range of 1.3.x to 1.4.x for the Angular dependency.\n. @kuatsure Yes! I want to sweep the recent pull requests soon.\n. @sjenkinsdc Check to see if you have anything else on the port that's running. You can also change the port number on line 148 of `gulpfile.js`:\n\n``` js\ngulp.task('server', ['build'], function() {\n  gulp.src('./build')\n    .pipe($.webserver({\n      port: 8079, // Right here!\n      host: 'localhost',\n      fallback: 'index.html',\n      livereload: true,\n      open: true\n    }))\n  ;\n});\n```\n. Are you referring to deploying this repo, or a project you've created with our [project template](https://github.com/zurb/foundation-apps-template)?\n. Sounds good! zurb/foundation-apps-template#26\n. @soumak77 Thanks for putting this together :) Could you apply these features to the [external Front Router plugin](https://github.com/zurb/front-router) as well? We won't be dropping the built-in plugin until after 1.2, but new projects are referencing the external plugin.\n. The current version (1.1) is the correct one, it's just been a _while_ since we put out a patch.\n\nWe're trying to get one out in the next week or two, but the Foundation team is fairly resource-constrained right now working on Foundation for Sites 6, which is launching very soon.\n. Hey friends, we're going to be releasing version 1.2.0 on Friday. This week we're going to be asking the community what issues are most critical to get resolved this week, and we'll be reviewing every pull request. On Thursday we're QAing the release, and then on Friday we're tagging and deploying it.\n\nWith Foundation 6 out, we're about to shift our focus back to Foundation for Apps. We're thinking about what version 2.0 will be, but we aren't done with version 1.x by any means. I'm opening a new issue to track what people feel is critical to address this week: #725 Thanks for your patience :)\n. Done!\n. CC @rafibomb \n. The command is now just `foundation new`, as the CLI has been expanded to support the entire Foundation family. I updated the [installation docs](http://foundation.zurb.com/apps/docs/#!/installation) to reflect this. Sorry for the hassle!\n. Fixed now, sorry for the confusion.\n. @soumak77 Thoughts?\n. @soumak77 Awesome, thank you! We plan on reviewing every PR before Friday. Are there any particular bugs that you think would be critical? (Granted, this isn't a one-and-done thing, we'll be doing more bug-fixing in the future. But this is our first patch in a _while_ so we want to make it count.)\n. @agianikas Yes, we'll be testing in Angular 1.4. The `bower.json` will likely be a version range, to allow for 1.3 or 1.4.\n. We put out 1.2.0 on Friday. Thanks so much everyone for recommending bugs and pull requests for us to look at! [The changelog](https://github.com/zurb/foundation-apps/releases/tag/v1.2.0) includes an overview of our plans for 1.3, which will include a few deprecations, so be sure to take a look.\n\nIf there's anything that needs done for a patch to 1.2, let us know and we'll get to it. Thanks! :)\n. @soyuka I'd hold off on that for now, although we really appreciate the interest :)\n\nWe're in the early planning stages of Foundation for Apps 2, and we know we need to do a better job of sharing components between frameworks. So we're currently looking at which components are worth sharing, and how exactly we want to share them.\n\nHowever, we want to keep the community in the loop so they can contribute, so we'll try to publish our thoughts on that soon.\n. @soyuka I'm interested in exploring this option, although it begs the question \"just _how many_ of those jQuery plugins will we be rewriting in Angular?\"\n. @soumak77 I think @zurbchris (who wrote most all of the JavaScript for Sites 6) is very interested in this idea. You can probably count on two hands the number of jQuery functions that are useful when you need to support IE9: addClass, removeClass, hasClass, extend, on/off (not just for the easier syntax, but for event namespacing also).\n\nOver time the F4S codebase will rely on jQuery less and less, mostly for speed reasons.\n\nI think wrapping a series of plain JavaScript plugins in jQuery/Angular is sensible, but I've always wondered: are you losing a core benefit of Angular/React/etc., which is more efficient DOM manipulation? Presumably our plain JS plugin is going to be doing its own manual DOM manipulation, and the wrapper will just be calling those methods. So is it that problematic or not? Or is there a different way to address it that I'm not thinking of?\n. @marleneclayton You can rip the CSS out no problem, if you're fine writing your own JavaScript. There are _some_ `.ng-` classes in the code, but I think over time we can try to make that stuff more library-agnostic.\n. @hguiney It would be relatively straightforward to import any of the Foundation 5/6 CSS components into an apps project, especially the ones that don't share a name with an Apps component, like flex video.\n\nWe're currently working on the next iteration of Foundation for Apps, and looking at how we can better share CSS between the two frameworks. Because ultimately, a _lot_ of it is the same.\n. @soyuka We need to solidify some of our thinking before we can announce anything, but we can say Apps 2 will be built on Angular 2.\n\nI'd like to bring people in as soon as possible to get feedback on our ideas, but we probably won't have anything solid to show for another month.\n. @hguiney Yep, you can install the `foundation-sites` Bower or npm package alongside `foundation-apps`. In your Sass file, you'll need to selectively `@import` things, and then also add the `@include`s to print the CSS of those components. Looking at the 6 component list, you could bring in:\n- Top bar\n- Callout\n- Media object\n- Table\n\nOr if you turn off any Apps components, you could bring in the Sites equivalent.\n. @cfator We realized this, which is why Sites and Apps will be more tightly coupled in the future. The two frameworks will share most of their CSS, and the main differentiator will be how the JavaScript is implemented. Apps will still have some special components, like it's unique grid, notifications, etc. And of course Apps will be written in Angular.\n. @soyuka You'll use the two grids in tandem. So in Apps, we have `.grid-frame`, `.grid-block` and all that, and that will still exist, but the naming scheme will be different. And we'll do a better job of explaining it so it's not crazy confusing.\n\nThat grid will be used to carve up the sections of your app, and make your fixed headers and sidebars and so on. And then inside _that_ grid (which we're calling a frame right now), you'll use the traditional 12-column grid.\n\nWe tried overloading the two core apps grid classes, `.grid-block` and `.grid-content`, with these two kinds of functionality, but the more we built with it the more of a hassle we realized it was. So now there will be two grids.\n\nHere's a possible example. Note that `.row` replaces `.grid-container`.\n\n``` html\n<div class=\"frame vertical\">\n  <div class=\"frame-block shrink\"></div>\n  <div class=\"frame-block\">\n    <div class=\"row\"><!-- ... --></div>\n  </div>\n</div>\n```\n. @edhatricksmith I'm no longer with ZURB, so unfortunately I couldn't tell you :< But FYI for y'alls, ZURB is [hiring a senior engineer](http://zurb.com/about/talent/engineer) if you want to be a part of the process!\n. This is a newer library, so nobody has written any type definitions for us yet. We don't use TypeScript here at ZURB, so we don't have the knowledge (or time) to put one together ourselves.\n\nIf _you_ are interested in putting one together, we can promote it on our [Resources wiki page](https://github.com/zurb/foundation-apps/wiki/Resources). :)\n. ",
    "lozandier": "@Vheissu Being familiar with the spec\u2014and having opportunities to talk to  the spec writer(s) of Flexbox\u2014using _intrinsic_  values with a class for the items _within_ the box, as well as pragmatic use of _flex-wrap_, you easily can achieve a \"masonry look without needing a class to have a \"masonry\" layout mode. \n\nWhen it comes the `flex` property, you have to be very careful on the implications of providing a single argument that then causes the defaults to be changed to `0`; Flexbox does not mind shrinking something to practically nothing.  For example, `flex: 2` means `flex: 2 1 0px` \n\nI assume flex-basis was used to avoid cognitive overhead of the implications of using `flex` when you don't have to have that much granular control. \n\nI haven't had issues with the use of `flex-basis`, can you provide examples? Otherwise, I don't think it makes much sense to over depend on `min-width`, `width` and `max-width` when there's a much higher chance of getting unexpected results using them instead of `flex-basis`. \n\nAnyhow,  _autoprefixer_ will be used to address the in-between IE Flexbox syntax and other older variations of Flexbox. This of course doesn't magically make very old versions of browsers of Firefox, Chrome, IE magically support `flex-wrap` or the `flex-flow` shorthand. \n. I'm assuming things will be rewritten to be Vanilla JS soon? `classList`, `dataset` and so on should be used instead of what's there now (unless it's a fascade heavily inspired by the jQuery API). \n\n`setTimeOut` should be avoided as much as possible (replaced with _promises_ and `animate()` where applicable; if necessary, the duration should be changeable. This can be done a variety of ways:\n- Through the class name itself with a class that analyzes such things with `regex`\n- Through the class name with changeable values that can be configurable through a `JSON` file, having animation that can be generated with additional classes of things that inherit from the original animation with custom parameters. \n. @Vheissu Being familiar with the spec\u2014and having opportunities to talk to  the spec writer(s) of Flexbox\u2014using _intrinsic_  values with a class for the items _within_ the box, as well as pragmatic use of _flex-wrap_, you easily can achieve a \"masonry look without needing a class to have a \"masonry\" layout mode. \n\nWhen it comes the `flex` property, you have to be very careful on the implications of providing a single argument that then causes the defaults to be changed to `0`; Flexbox does not mind shrinking something to practically nothing.  For example, `flex: 2` means `flex: 2 1 0px` \n\nI assume flex-basis was used to avoid cognitive overhead of the implications of using `flex` when you don't have to have that much granular control. \n\nI haven't had issues with the use of `flex-basis`, can you provide examples? Otherwise, I don't think it makes much sense to over depend on `min-width`, `width` and `max-width` when there's a much higher chance of getting unexpected results using them instead of `flex-basis`. \n\nAnyhow,  _autoprefixer_ will be used to address the in-between IE Flexbox syntax and other older variations of Flexbox. This of course doesn't magically make very old versions of browsers of Firefox, Chrome, IE magically support `flex-wrap` or the `flex-flow` shorthand. \n. I'm assuming things will be rewritten to be Vanilla JS soon? `classList`, `dataset` and so on should be used instead of what's there now (unless it's a fascade heavily inspired by the jQuery API). \n\n`setTimeOut` should be avoided as much as possible (replaced with _promises_ and `animate()` where applicable; if necessary, the duration should be changeable. This can be done a variety of ways:\n- Through the class name itself with a class that analyzes such things with `regex`\n- Through the class name with changeable values that can be configurable through a `JSON` file, having animation that can be generated with additional classes of things that inherit from the original animation with custom parameters. \n. ",
    "joeworkman": "Looks like the merge conflicts are with the .gitignore file. A previous PR added the docs directory as well.\n. SWEET!!!! I was thinking that this would be a separate repo that I could include into Foundation for Sites. Do you think that would be possible?\n. Looks like the merge conflicts are with the .gitignore file. A previous PR added the docs directory as well.\n. SWEET!!!! I was thinking that this would be a separate repo that I could include into Foundation for Sites. Do you think that would be possible?\n. ",
    "ilanbiala": "@smileyj68 any movement gonna happen on this...it's been a couple months.\n. @gakimball oh haha, I did. Let me know if there's anything else I can do to contribute, I'm pretty familiar with Angular and Foundation.\n. Ah I didn't notice that it disappeared from the package.json, I'll retry later today, but do you think you could add it back at some point for convenience sake?\n. Cool!\n. @MichaelFBA refer to #136, it's better to keep separate issues separate.\n. Unrelated, but that thing looks cool. What's it for?\n. Or instead a free heroku instance can just pull the latest every time a commit is made, and rebuild and serve the WIP automatically for anyone to see. Makes experimenting with mobile a lot easier, not to mention the fact that you don't need to clone the repo anymore.\n. Okay. The other thing is maybe trying to make this a little less opinionated. Right now it seems like static serving, and the angular is pretty strict structure. Any thoughts on that?\n. The stack. I would prefer something like foundation-app.min.js with the helpers, and I set it up how I like. The helpers need to be somewhat opinionated to start, until people start using it and suggesting changes. Angular is somewhat opinionated, but it's a really good framework and it seems to be opinionated for the right reasons.\n. @gakimball @zurbrandon since an official release is coming down the pipes in a couple weeks, do you think now would be a good time to throw a website online to start gaining attention and allowing more people to see how it works not just on desktop?\n. YES! Will we be seeing a sample F-apps SPA in addition to some sort of marketing website?\n. Sweet! Thanks guys for all the hard work.\n. @gakimball when can we start contributing to the Foundation CSS and JS parts?\n. Okay. How close would you say it is to having some prereleases/candidates/final builds before 1.0?\n. Okay, I'll start looking over the Angular code, because I'm more experienced with that nowadays.\n. @gakimball Ah okay, I didn't understand, so I just assumed foundation was what was planned to be used.\n. It doesn't really make sense for F-apps to handle how you get data, because that can be done so many different ways and it really depends on what makes the most sense given a current setup that could easily be used. Also, there isn't much of a wrapper that can be written around $resource, $http, and data embedding. It really depends what is easiest to use in F-Apps.\n. @gakimball are there any examples of the Motion UI you guys blogged about earlier in the development process of F-apps?\n. @AntJanus @gakimball For OSX using node-sass is as easy as using ruby sass, much easier for me anyway. There doesn't seem to be one canonical way to manage Ruby gems, and that makes doing the research really annoying and leaves me with no real answer as to what I should do. Setting up Ruby is also much more complicated than Node in my opinion. I prefer node-sass because of that and because it's faster.\n. Also getting this error.\n. The author of gulp-sass advises moving back to 1.1 until 1.2 is stable.\n. I wouldn't close this issue yet, so the f-apps team can keep track of what to do with their deps.\n. Nice.\n. @AntJanus there should be a fix in 1.2.3, so look out to see if it works again.\n. Awesome.\n. Sounds good, I'm looking forward to starting to play around with the framework. Are you guys planning on separating the router and server from f-apps for the RC next week?\n. @AntJanus I'm going to propose something a little different and might mean more work for the developers at Zurb, but I think that it means the work is easier and helps more people at the same time.\n\nI would set up 2 repos, one just with f-apps split into all the JS files fit for developers who would like to handle the Angular themselves, and one for rapid prototyping that has some structure to it. Then I would set up something like the [Bootstrap customize](http://getbootstrap.com/customize/) page that would say: \"Rapid prototyping or Minimal F-apps\", and clicking minimal f-apps opens a modal or accordion or something like that which shows the user all the components, and they can select which ones they want, click download, and it will give them a .zip of the customized F-apps. If they select everything (pretty much the whole repo for Angular people), then they would get that with a bower.json inside the .zip or installation instructions from Git so they can update easily if they want to.\n\nIn the repo made for Angular users, I would probably also put a foundation.min.js, which contains all the JS and can just be put in as a script tag and included as a module in whatever I'm doing.\n\nI think this satisfies a couple usecases:\n- People who are rapid prototyping and need some guidance\n- People who are doing one-off rapid prototyping with Angular and don't care to Update F-apps, so they just download all the Angular code each time they have a new project\n- People who work on longer Angular projects that would benefit from just being able to do `bower update` instead of having to compare files from each .zip and cut/copy/paste/delete.\n\nThe separation probably makes it easier for you guys to develop because you don't need to try to make one codebase work for 2 different types of people. The harder part I think would be the customize page, just because it's a little bit of client work and server work, but I think it should be simple to implement once you know what you want.\n\nThere are probably still some edge cases, but I think this could be a good starting point for discussion.\n. To make the release process more transparent, can you guys set up some milestones with alpha/beta/rc/1.0 milestones showing what needs to be done by when? That way people can also see how far along things are and if they can start using this in soon-to-be-production projects.\n. Awesome, can't wait!\n. :+1: :) can't wait for 1.0.0\n. @lukens I'm thinking this is a dupe of #79.\n. Awesome, thanks guys! It helps me (probably other people) keep track of what's going on.\n. Can `rest-of-components` and `directive-plugin-migration` also be removed?\n. I don't see Bundler mentioned anywhere @gakimball..? Did I miss a spot?\n. Okay I found part of the issue. `bower_components` seems to actually be `public/lib` on my computer. So in the gulpfile, all references to `bower_components` had to be changed, and then the page worked.\n. There's also an error in the parsing of #markdown on the motion-ui page.\n. @AntJanus this is the error I saw.\n. What about JS animation event hooks? Do those help at all?\n. @JamesDullaghan still getting the same 2 errors, though the styles are slightly different. Are you cloning master?\n. The issue is that `bower_components` hasn't been changed to public/lib in the gulpfile, once I changed that, 0 errors.\n\n@gakimball @AntJanus why do I need to change it? Is it specific to f-apps, or something in my Bower?\n. thoughts on original issue with bower_components?\n. For some reason that's where Bower downloads the dependencies to in this repository for me. You'll probably want to add a `.bowerrc` to the template project with some directory set so it overrides everything else, because obviously something is getting overridden for me...\n. Is this using rAF, web animations, pure JS, or something else?\n. Ah okay. Are these for the motion-ui? How would someone add to the set of pre-existing animations? Is it just add the animation to a CSS file, and add the data-motion attribute wherever?\n. Sounds good!\n. Cool, will this fix/make working the motion-ui on the docs?\n. You can just compare straight up file contents to make sure they are equal. I don't think libsass and ruby sass produce different but equivalent css, but if they do, then that might not work.\n. Looks pretty good to me, but I would get a second opinion just to do another look-through.\n. What about whitespace-insensitive diffing? If you ignore all the spaces and new lines, the css should be the same, right?\n. @AntJanus I was playing around, and you could probably just drop the `href=\"#\"` from all the `<a>` tags, no? Clicks still work, and the whole routing scheme isn't messed up.\n. The biggest issue I see is that Angular offers a data-binding system and the ability to build \"elements\". Even though those features are coming to HTML and JS soon, not many browsers support it and Vanilla JS might exclude even big browsers like IE, Safari, and possibly Firefox/Chrome in some edge cases. \n. It may be ported afterwards, but for now, let them finish v1 in the first framework until you ask them to make it compatible with the 50+ other ones. I think it's nice enough that they do this to begin with, and anyone who wants it sooner can start porting it themselves and helping Foundation out a little...it is open source after all.\n. I think that adding a `<base href=\"/\">` will fix the issue, and it won't be used if HTML5Mode if is turned off.\n. i don't think that's a double. One is rc and one is 1.0.0.\n. Hmm, some conflicts going on here. @gakimball changelog.md also only has RC1 it seems. I think that it's easier for a collaborator to update everything than having @jcs224 change things just in case you guys want them to look a little different or maybe some files are not needed anymore.\n. Ng-cloak should do some good too.\n. programmatic support would be awesome.\n. probably a result of `$scope.$apply` being called without being inside of a `if (!$scope.$$phase)`?\n. @gakimball what about locking down sass deps for everything to work, and about every month/minor release, just update and lock to the next stable version until we can do something like `~2.1.2` safely? It makes it much easier to keep the stack all in Node especially because setting up Ruby is pretty complicated if you haven't done it before.\n. @smileyj68 any movement gonna happen on this...it's been a couple months.\n. @gakimball oh haha, I did. Let me know if there's anything else I can do to contribute, I'm pretty familiar with Angular and Foundation.\n. Ah I didn't notice that it disappeared from the package.json, I'll retry later today, but do you think you could add it back at some point for convenience sake?\n. Cool!\n. @MichaelFBA refer to #136, it's better to keep separate issues separate.\n. Unrelated, but that thing looks cool. What's it for?\n. Or instead a free heroku instance can just pull the latest every time a commit is made, and rebuild and serve the WIP automatically for anyone to see. Makes experimenting with mobile a lot easier, not to mention the fact that you don't need to clone the repo anymore.\n. Okay. The other thing is maybe trying to make this a little less opinionated. Right now it seems like static serving, and the angular is pretty strict structure. Any thoughts on that?\n. The stack. I would prefer something like foundation-app.min.js with the helpers, and I set it up how I like. The helpers need to be somewhat opinionated to start, until people start using it and suggesting changes. Angular is somewhat opinionated, but it's a really good framework and it seems to be opinionated for the right reasons.\n. @gakimball @zurbrandon since an official release is coming down the pipes in a couple weeks, do you think now would be a good time to throw a website online to start gaining attention and allowing more people to see how it works not just on desktop?\n. YES! Will we be seeing a sample F-apps SPA in addition to some sort of marketing website?\n. Sweet! Thanks guys for all the hard work.\n. @gakimball when can we start contributing to the Foundation CSS and JS parts?\n. Okay. How close would you say it is to having some prereleases/candidates/final builds before 1.0?\n. Okay, I'll start looking over the Angular code, because I'm more experienced with that nowadays.\n. @gakimball Ah okay, I didn't understand, so I just assumed foundation was what was planned to be used.\n. It doesn't really make sense for F-apps to handle how you get data, because that can be done so many different ways and it really depends on what makes the most sense given a current setup that could easily be used. Also, there isn't much of a wrapper that can be written around $resource, $http, and data embedding. It really depends what is easiest to use in F-Apps.\n. @gakimball are there any examples of the Motion UI you guys blogged about earlier in the development process of F-apps?\n. @AntJanus @gakimball For OSX using node-sass is as easy as using ruby sass, much easier for me anyway. There doesn't seem to be one canonical way to manage Ruby gems, and that makes doing the research really annoying and leaves me with no real answer as to what I should do. Setting up Ruby is also much more complicated than Node in my opinion. I prefer node-sass because of that and because it's faster.\n. Also getting this error.\n. The author of gulp-sass advises moving back to 1.1 until 1.2 is stable.\n. I wouldn't close this issue yet, so the f-apps team can keep track of what to do with their deps.\n. Nice.\n. @AntJanus there should be a fix in 1.2.3, so look out to see if it works again.\n. Awesome.\n. Sounds good, I'm looking forward to starting to play around with the framework. Are you guys planning on separating the router and server from f-apps for the RC next week?\n. @AntJanus I'm going to propose something a little different and might mean more work for the developers at Zurb, but I think that it means the work is easier and helps more people at the same time.\n\nI would set up 2 repos, one just with f-apps split into all the JS files fit for developers who would like to handle the Angular themselves, and one for rapid prototyping that has some structure to it. Then I would set up something like the [Bootstrap customize](http://getbootstrap.com/customize/) page that would say: \"Rapid prototyping or Minimal F-apps\", and clicking minimal f-apps opens a modal or accordion or something like that which shows the user all the components, and they can select which ones they want, click download, and it will give them a .zip of the customized F-apps. If they select everything (pretty much the whole repo for Angular people), then they would get that with a bower.json inside the .zip or installation instructions from Git so they can update easily if they want to.\n\nIn the repo made for Angular users, I would probably also put a foundation.min.js, which contains all the JS and can just be put in as a script tag and included as a module in whatever I'm doing.\n\nI think this satisfies a couple usecases:\n- People who are rapid prototyping and need some guidance\n- People who are doing one-off rapid prototyping with Angular and don't care to Update F-apps, so they just download all the Angular code each time they have a new project\n- People who work on longer Angular projects that would benefit from just being able to do `bower update` instead of having to compare files from each .zip and cut/copy/paste/delete.\n\nThe separation probably makes it easier for you guys to develop because you don't need to try to make one codebase work for 2 different types of people. The harder part I think would be the customize page, just because it's a little bit of client work and server work, but I think it should be simple to implement once you know what you want.\n\nThere are probably still some edge cases, but I think this could be a good starting point for discussion.\n. To make the release process more transparent, can you guys set up some milestones with alpha/beta/rc/1.0 milestones showing what needs to be done by when? That way people can also see how far along things are and if they can start using this in soon-to-be-production projects.\n. Awesome, can't wait!\n. :+1: :) can't wait for 1.0.0\n. @lukens I'm thinking this is a dupe of #79.\n. Awesome, thanks guys! It helps me (probably other people) keep track of what's going on.\n. Can `rest-of-components` and `directive-plugin-migration` also be removed?\n. I don't see Bundler mentioned anywhere @gakimball..? Did I miss a spot?\n. Okay I found part of the issue. `bower_components` seems to actually be `public/lib` on my computer. So in the gulpfile, all references to `bower_components` had to be changed, and then the page worked.\n. There's also an error in the parsing of #markdown on the motion-ui page.\n. @AntJanus this is the error I saw.\n. What about JS animation event hooks? Do those help at all?\n. @JamesDullaghan still getting the same 2 errors, though the styles are slightly different. Are you cloning master?\n. The issue is that `bower_components` hasn't been changed to public/lib in the gulpfile, once I changed that, 0 errors.\n\n@gakimball @AntJanus why do I need to change it? Is it specific to f-apps, or something in my Bower?\n. thoughts on original issue with bower_components?\n. For some reason that's where Bower downloads the dependencies to in this repository for me. You'll probably want to add a `.bowerrc` to the template project with some directory set so it overrides everything else, because obviously something is getting overridden for me...\n. Is this using rAF, web animations, pure JS, or something else?\n. Ah okay. Are these for the motion-ui? How would someone add to the set of pre-existing animations? Is it just add the animation to a CSS file, and add the data-motion attribute wherever?\n. Sounds good!\n. Cool, will this fix/make working the motion-ui on the docs?\n. You can just compare straight up file contents to make sure they are equal. I don't think libsass and ruby sass produce different but equivalent css, but if they do, then that might not work.\n. Looks pretty good to me, but I would get a second opinion just to do another look-through.\n. What about whitespace-insensitive diffing? If you ignore all the spaces and new lines, the css should be the same, right?\n. @AntJanus I was playing around, and you could probably just drop the `href=\"#\"` from all the `<a>` tags, no? Clicks still work, and the whole routing scheme isn't messed up.\n. The biggest issue I see is that Angular offers a data-binding system and the ability to build \"elements\". Even though those features are coming to HTML and JS soon, not many browsers support it and Vanilla JS might exclude even big browsers like IE, Safari, and possibly Firefox/Chrome in some edge cases. \n. It may be ported afterwards, but for now, let them finish v1 in the first framework until you ask them to make it compatible with the 50+ other ones. I think it's nice enough that they do this to begin with, and anyone who wants it sooner can start porting it themselves and helping Foundation out a little...it is open source after all.\n. I think that adding a `<base href=\"/\">` will fix the issue, and it won't be used if HTML5Mode if is turned off.\n. i don't think that's a double. One is rc and one is 1.0.0.\n. Hmm, some conflicts going on here. @gakimball changelog.md also only has RC1 it seems. I think that it's easier for a collaborator to update everything than having @jcs224 change things just in case you guys want them to look a little different or maybe some files are not needed anymore.\n. Ng-cloak should do some good too.\n. programmatic support would be awesome.\n. probably a result of `$scope.$apply` being called without being inside of a `if (!$scope.$$phase)`?\n. @gakimball what about locking down sass deps for everything to work, and about every month/minor release, just update and lock to the next stable version until we can do something like `~2.1.2` safely? It makes it much easier to keep the stack all in Node especially because setting up Ruby is pretty complicated if you haven't done it before.\n. ",
    "zurbrandon": "Yeah, that was my bad. Had a fresh install of sublime and forgot :/ Sorry about that :) \n. We'll be integrating some sweet transitions later this week and then eventually integrating these with our angular work. \n. @joeworkman We don't plan on having it as a separate repo, but feel free to pull out what you need to add into your Rapid Weaver work.  The animations will be pretty heavily integrated into the core of our JS work, so they need to live side by side in the same repo. \n. First Pass done\n. Great discussions on this, we took a lot of these ideas and stayed with an approach with less friction for the end user. Thanks for the killer discussion. \n. @HansUXdev and @gakimball This could also be accomplished with the Angular view swapping pretty easily. Just animate in and out separate template partials and you're done.\n. We loved all the feedback on this so far, we'll close this out, but after launch keep sending us issues and PRs :) \n. @davidkpiano Hm yeah i see how that can be useful. We had defaulted to having separate sizing classes from element classes i think solely because Foundation has always had that, however i see a good reason to switch it if it helps solve this problem. \n\nI guess the overall problem with adding sizing classes to panels it what are you sizing for them, if they slide from the left or right, then sizing the width? If they slide from the top or bottom are you sizing height? While we have options for some height baked into the grid it's not percentage based. \n\nAny thoughts on how sizing effects grids in this instance? We were hoping they'd work more on a custom sized basis or using a sass variable. \n. @jwvanderbeck and @jpdesigndev If you guys come up with anything that you think would fit well with us we'd love to see this as a PR to add functionality :) \n\nI'll close this now, but keep the ideas and code coming. \n. Thanks for the grid feedback! Lots of awesome stuff and we had a ton of debate on most of these topics. Thanks all!!!!! \n. We want to get it to a point where we have more direction in what we're presenting before we do something like that. Still kinda the wild west in that repo, but we're making a sprint this week to get it under control. \n. Oops\n. Thanks for the angular discussion, We talked about a lot of these points, but i'll close this for now :) \n. This seems fair. Closed :) \n. Gotchya, makes sense. \n. Great! Looks good to me, lets get it merged in! \n. Adding Title Bar to this list\n. We should also have the ability to disable the overlay, any thoughts on how we could get these as the same option?\n. This may help http://stackoverflow.com/questions/25679210/how-to-deal-with-extra-markup-used-for-angular-directives\n. Great Answer @AntJanus! \n\nI'll close this for now, but feel free to open it back up if that didn't answer fully. \n. Thanks @AntJanus Yeah, thats sums it up pretty well. In the future we're already talking about other JS options, but for V1 we knew we needed to choose. \n\nThanks for the discussion all, we'll close this for now because as of today this won't change for the launch. \n\nWe'd LOVE to see a vanilla port however :) \n. Oops this was already an issue. Closing \n. // sounds good\n. This should have been fixed today for the most part, when you upgrade let us know? I'll close this for now. \n. We caught it in QA and totally forgot to make an issue for it. Thanks :) We'll get working on it. \n. This is a firefox issue that they're fixing in January, other tha  that we can't do anything about it. \n. Hey @jamesstoneco Did you still want to take a stab at this or should we try and get a resource to do it this week? \n\nLet us know :) \n. If you just open a PR thats perfect. Thanks! \n. @AntJanus Looks like the close when you click outside the modal is different than the actual close for the modal. \n. Tabs could use some love for sure, any thoughts or code you'd use would be appreciated. Do you have a specific idea in mind for a PR? \n. I like the ideas on here! We're working on some ideas to give tabs more love, If anyone has a specific idea, we'd love a PR, but for now i'll close this. \n. Thanks! \n. @laurent-le-graverend Sorry about the lack of activity. We're still very committed to making Foundation for apps awesome! We're a little diostarcted with the next versions of Foundation for Sites and Emails, but are so amped and appreciative of the work you've been doing! \n. Thanks for the follow through on this! \n. Yeah, that was my bad. Had a fresh install of sublime and forgot :/ Sorry about that :) \n. We'll be integrating some sweet transitions later this week and then eventually integrating these with our angular work. \n. @joeworkman We don't plan on having it as a separate repo, but feel free to pull out what you need to add into your Rapid Weaver work.  The animations will be pretty heavily integrated into the core of our JS work, so they need to live side by side in the same repo. \n. First Pass done\n. Great discussions on this, we took a lot of these ideas and stayed with an approach with less friction for the end user. Thanks for the killer discussion. \n. @HansUXdev and @gakimball This could also be accomplished with the Angular view swapping pretty easily. Just animate in and out separate template partials and you're done.\n. We loved all the feedback on this so far, we'll close this out, but after launch keep sending us issues and PRs :) \n. @davidkpiano Hm yeah i see how that can be useful. We had defaulted to having separate sizing classes from element classes i think solely because Foundation has always had that, however i see a good reason to switch it if it helps solve this problem. \n\nI guess the overall problem with adding sizing classes to panels it what are you sizing for them, if they slide from the left or right, then sizing the width? If they slide from the top or bottom are you sizing height? While we have options for some height baked into the grid it's not percentage based. \n\nAny thoughts on how sizing effects grids in this instance? We were hoping they'd work more on a custom sized basis or using a sass variable. \n. @jwvanderbeck and @jpdesigndev If you guys come up with anything that you think would fit well with us we'd love to see this as a PR to add functionality :) \n\nI'll close this now, but keep the ideas and code coming. \n. Thanks for the grid feedback! Lots of awesome stuff and we had a ton of debate on most of these topics. Thanks all!!!!! \n. We want to get it to a point where we have more direction in what we're presenting before we do something like that. Still kinda the wild west in that repo, but we're making a sprint this week to get it under control. \n. Oops\n. Thanks for the angular discussion, We talked about a lot of these points, but i'll close this for now :) \n. This seems fair. Closed :) \n. Gotchya, makes sense. \n. Great! Looks good to me, lets get it merged in! \n. Adding Title Bar to this list\n. We should also have the ability to disable the overlay, any thoughts on how we could get these as the same option?\n. This may help http://stackoverflow.com/questions/25679210/how-to-deal-with-extra-markup-used-for-angular-directives\n. Great Answer @AntJanus! \n\nI'll close this for now, but feel free to open it back up if that didn't answer fully. \n. Thanks @AntJanus Yeah, thats sums it up pretty well. In the future we're already talking about other JS options, but for V1 we knew we needed to choose. \n\nThanks for the discussion all, we'll close this for now because as of today this won't change for the launch. \n\nWe'd LOVE to see a vanilla port however :) \n. Oops this was already an issue. Closing \n. // sounds good\n. This should have been fixed today for the most part, when you upgrade let us know? I'll close this for now. \n. We caught it in QA and totally forgot to make an issue for it. Thanks :) We'll get working on it. \n. This is a firefox issue that they're fixing in January, other tha  that we can't do anything about it. \n. Hey @jamesstoneco Did you still want to take a stab at this or should we try and get a resource to do it this week? \n\nLet us know :) \n. If you just open a PR thats perfect. Thanks! \n. @AntJanus Looks like the close when you click outside the modal is different than the actual close for the modal. \n. Tabs could use some love for sure, any thoughts or code you'd use would be appreciated. Do you have a specific idea in mind for a PR? \n. I like the ideas on here! We're working on some ideas to give tabs more love, If anyone has a specific idea, we'd love a PR, but for now i'll close this. \n. Thanks! \n. @laurent-le-graverend Sorry about the lack of activity. We're still very committed to making Foundation for apps awesome! We're a little diostarcted with the next versions of Foundation for Sites and Emails, but are so amped and appreciative of the work you've been doing! \n. Thanks for the follow through on this! \n. ",
    "sheixt": "I think I experienced this issue when first downloading the repo. I think running `npm update`, `bower update` and updating the SASS gem will fix it.\n\nThat being said, I don't have a fully working local version to confirm... I'm still getting an `uncaught TypeError` within `all.js` so I think there is something else that needs updating!\n. I think I experienced this issue when first downloading the repo. I think running `npm update`, `bower update` and updating the SASS gem will fix it.\n\nThat being said, I don't have a fully working local version to confirm... I'm still getting an `uncaught TypeError` within `all.js` so I think there is something else that needs updating!\n. ",
    "GregRR": "Just started getting this error yesterday on one machine at work. \n\nLooks like our SASS version (3.2.16) became an issue once we upgraded to Foundation v5.4.3 which added use of !global in _functions.scss.\n. Just started getting this error yesterday on one machine at work. \n\nLooks like our SASS version (3.2.16) became an issue once we upgraded to Foundation v5.4.3 which added use of !global in _functions.scss.\n. ",
    "christophergregory": "Just ran into the same issue, looks like upgrading to Sass 3.4 works\n\n```\ngem update --system && gem install compass\n```\n. Just ran into the same issue, looks like upgrading to Sass 3.4 works\n\n```\ngem update --system && gem install compass\n```\n. ",
    "dmuso": "Using Sass 3.4 breaks the current version of Rails 4.1.x. The sass-rails gem is tied to an older version of Sass.\n. Using Sass 3.4 breaks the current version of Rails 4.1.x. The sass-rails gem is tied to an older version of Sass.\n. ",
    "tirdadc": "Ran into this issue when upgrading foundation-rails from 5.4.3.1 to 5.4.4.0, had to roll back.\n. Ran into this issue when upgrading foundation-rails from 5.4.3.1 to 5.4.4.0, had to roll back.\n. ",
    "ashes999": "+1 @tirdadc rolling back to 5.4.3.1 works for me too\n. Yes, I got this issue when generating a new Rails + Foundation 5 + Devise app using [these instructions](https://github.com/RailsApps/rails-devise): \n\n```\nrails new rails-devise -m https://raw.github.com/RailsApps/rails-composer/master/composer.rb\n```\n. +1 @tirdadc rolling back to 5.4.3.1 works for me too\n. Yes, I got this issue when generating a new Rails + Foundation 5 + Devise app using [these instructions](https://github.com/RailsApps/rails-devise): \n\n```\nrails new rails-devise -m https://raw.github.com/RailsApps/rails-composer/master/composer.rb\n```\n. ",
    "kayzee": "+1 as well.  Had to use 5.4.3.1.\n. +1 as well.  Had to use 5.4.3.1.\n. ",
    "fakhrizaki": "Thanks Geoff :)\n. When are we getting the official release of \"Foundation for Apps\"? \nAnxiously waiting...\n. Thanks Geoff :)\n. When are we getting the official release of \"Foundation for Apps\"? \nAnxiously waiting...\n. ",
    "t1mmen": "I ran into a similar issue. Fresh checkout (minutes ago), followed up `bower install`, `npm install` and finally `grunt`.\n\nManually installing Sass 3.4 & Compass (`gem install sass` & `gem install compass`) did the trick, though \u2013 maybe update the quickstart section to include these steps? (I'd submit a PR, but since I'm not a contributor or core member... :)\n\nThe error I got:\n\n```\nRunning \"sass:dist\" (sass) task\nSyntax error: Invalid CSS after \"   grid\": expected \")\", was \": (\"\n        on line 41 of src/assets/scss/foundation-6-alpha/_foundation-6-alpha.scss\n        from line 7 of src/assets/scss/app.scss\n  Use --trace for backtrace.\nWarning: Exited with error code 1 Use --force to continue.\n```\n. I am having a similar issue. Angular doesn't load, and Sass doesn't compile.\n\nConsole says:\n\n```\n[ERROR] GET http://localhost:3001/assets/css/app.css\n[ERROR] Uncaught ReferenceError: angular is not defined \n```\n\nGulp says (after `npm install`, `npm update`, `grunt` and finally, `gulp` on OSX Yosemite)\n\n`gulp-ruby-sass: stderr: NoMethodError: undefined method `<<' for nil:NilClass`\n\nI tried a few different branches & went back to earlier commits, but nothing worked. Deleting `client/assets/scss/app.scss` made the error go away, but didn't produce any CSS either obviously. Somehow removing all content from `app.scss` still produces the error (but that might be a Gulp/Sass thing? I'm only familiar with Grunt/LESS so far).\n. I ran into a similar issue. Fresh checkout (minutes ago), followed up `bower install`, `npm install` and finally `grunt`.\n\nManually installing Sass 3.4 & Compass (`gem install sass` & `gem install compass`) did the trick, though \u2013 maybe update the quickstart section to include these steps? (I'd submit a PR, but since I'm not a contributor or core member... :)\n\nThe error I got:\n\n```\nRunning \"sass:dist\" (sass) task\nSyntax error: Invalid CSS after \"   grid\": expected \")\", was \": (\"\n        on line 41 of src/assets/scss/foundation-6-alpha/_foundation-6-alpha.scss\n        from line 7 of src/assets/scss/app.scss\n  Use --trace for backtrace.\nWarning: Exited with error code 1 Use --force to continue.\n```\n. I am having a similar issue. Angular doesn't load, and Sass doesn't compile.\n\nConsole says:\n\n```\n[ERROR] GET http://localhost:3001/assets/css/app.css\n[ERROR] Uncaught ReferenceError: angular is not defined \n```\n\nGulp says (after `npm install`, `npm update`, `grunt` and finally, `gulp` on OSX Yosemite)\n\n`gulp-ruby-sass: stderr: NoMethodError: undefined method `<<' for nil:NilClass`\n\nI tried a few different branches & went back to earlier commits, but nothing worked. Deleting `client/assets/scss/app.scss` made the error go away, but didn't produce any CSS either obviously. Somehow removing all content from `app.scss` still produces the error (but that might be a Gulp/Sass thing? I'm only familiar with Grunt/LESS so far).\n. ",
    "HugoGiraudel": "Hey. Allow me to give my opinion here since you asked for it.\n\nLet me break the ice to get things started: people don't think maps are weird. It's been months if not a year since maps have been first introduced to Sass so it's safe to tell things are well set up at this point.\n\nSo the question isn't \"should you be using maps ?\" but \"what for ?\". \n\n---\n\nWhat is interesting with having a map (or maps), is that you can loop over it, which is obviously not possible with variables. Actually, that's the main reason why maps have been introduced to Sass in the first place: to provide a solution to variable variables. \n\nHaving an ability to loop over a map is a huge plus when you come to build a living styleguide or basically anything that comes around the project (documentation, exports, ...). It's much more convenient than having a handful of variables to move over.\n\nAlso as you said, and I fully share your opinion, maps make your code more structured. For instance, [this](https://gist.github.com/HugoGiraudel/5d6a12b71992abfb2f6a) is what our `_variables.scss` file looks like at work. Definitely easier to read than countless variables in my opinion.\n\n---\n\nLet me warn you against having a super map. This is indisputably a bad idea.\n\nFor starter, deep maps can be a pain to update (reading is and will always be the easy part). Updating a 2-levels map is a pain to update manually. Needless to say building a function to dynamically update a nested map is a nightmare...\n\nMoreover, deep maps tend to be slow. Everything is relative at this point of course but very dense maps can bring some slowness to your app. I'd warn against having more than 3 or 4 nested levels, it's probably too much.\n\nInstead, try breaking your map into several smaller items. For instance, instead of:\n\n``` scss\n$foundation: (\n  button: (\n    // ...\n  ),\n  carousel: (\n    // ...\n  ),\n  dropdown: (\n    // ...\n  )\n);\n```\n\n... try something like this:\n\n``` scss\n$foundation-button: ( ... );\n$foundation-carousel: ( ... );\n$foundation-dropdown: ( ... );\n```\n\nNot only does it avoid having to deal with deeply nested maps, but it also allows you to move each configuration to its own relevant partial rather than storing everything in the same file (which may or may not be what you want).\n\n---\n\nAgain, I think I'd advise against using a single function. Actually the name is the biggest flaw here. `foundation` means nothing (sorry). Pick something that actually makes sense, like `map-fetch`, then alias it with custom functions. Like so:\n\n``` scss\n/// Helper function\n/// @access private\n/// @param {Map} $map - Map to parse\n/// @param {Arglist} $keys - Series of keys\n/// @return {*} Value at `$keys...` in `$map`\n/// @todo Write input validations\n@function map-fetch($map, $keys...) {\n  @each $key in $keys {\n    $map: map-get($map, $key);\n  }\n  @return $map;\n}\n\n/// Get color from palette\n/// @access public\n/// @param {Arglist} $kets - Series of keys\n/// @return {Color}\n@function color($keys...) {\n  @return map-fetch('color', $keys...);\n}\n\n// Usage\n$foundation-colors: (\n  \"primary\": (\n    \"light\": lightgreen,\n    \"normal\": green,\n    \"dark\": darkgreen\n  )\n);\n\n$color: color(primary, light);\n```\n\nConsider using `f-color` or `foundation-color` (although that's a bit long) to avoid any naming conflict. If you want to stay consistent and avoid any possible confusion, you might want to consider using `get-*` name (e.g. `get-color()`).\n\nWhile multiplying frameworks isn't a good idea, using external libs can totally happen. You don't want those libs to mess with the framework, do you?\n\nMy 2 cents. If you need any more help, be sure to ask.\n. @Undistraction Did you have a look at the function you are talking about? It is almost 40 lines of logic, index manipulation, and conditional statements. \n\nI wrote [one](http://sassmeister.com/gist/9838432) myself a while back, and couldn't come with something much better, only slightly more readable. \n\nAnyway, deep setting is a pain because of the way Sass works. You cannot update a map. You can just create a slightly different one. \n. > If a multi-dimensional map is easier for the average designer to understand or interact with\n\nI really don't think an insanely huge map is any better than small ones, in any way (readability, maintainability, simplicity, and a buch of other words ending with _-ty_).\n. > I fail to see how that makes life any easier for the author\n\nAll colors are gathered in a single entity rather than existing individually. It's a matter of preference at this point. Also, using a function allows you to do some error handling (which is discutable since Sass basically crashes when referencing an invalid variable), deprecation, and what else.\n. Hey. Allow me to give my opinion here since you asked for it.\n\nLet me break the ice to get things started: people don't think maps are weird. It's been months if not a year since maps have been first introduced to Sass so it's safe to tell things are well set up at this point.\n\nSo the question isn't \"should you be using maps ?\" but \"what for ?\". \n\n---\n\nWhat is interesting with having a map (or maps), is that you can loop over it, which is obviously not possible with variables. Actually, that's the main reason why maps have been introduced to Sass in the first place: to provide a solution to variable variables. \n\nHaving an ability to loop over a map is a huge plus when you come to build a living styleguide or basically anything that comes around the project (documentation, exports, ...). It's much more convenient than having a handful of variables to move over.\n\nAlso as you said, and I fully share your opinion, maps make your code more structured. For instance, [this](https://gist.github.com/HugoGiraudel/5d6a12b71992abfb2f6a) is what our `_variables.scss` file looks like at work. Definitely easier to read than countless variables in my opinion.\n\n---\n\nLet me warn you against having a super map. This is indisputably a bad idea.\n\nFor starter, deep maps can be a pain to update (reading is and will always be the easy part). Updating a 2-levels map is a pain to update manually. Needless to say building a function to dynamically update a nested map is a nightmare...\n\nMoreover, deep maps tend to be slow. Everything is relative at this point of course but very dense maps can bring some slowness to your app. I'd warn against having more than 3 or 4 nested levels, it's probably too much.\n\nInstead, try breaking your map into several smaller items. For instance, instead of:\n\n``` scss\n$foundation: (\n  button: (\n    // ...\n  ),\n  carousel: (\n    // ...\n  ),\n  dropdown: (\n    // ...\n  )\n);\n```\n\n... try something like this:\n\n``` scss\n$foundation-button: ( ... );\n$foundation-carousel: ( ... );\n$foundation-dropdown: ( ... );\n```\n\nNot only does it avoid having to deal with deeply nested maps, but it also allows you to move each configuration to its own relevant partial rather than storing everything in the same file (which may or may not be what you want).\n\n---\n\nAgain, I think I'd advise against using a single function. Actually the name is the biggest flaw here. `foundation` means nothing (sorry). Pick something that actually makes sense, like `map-fetch`, then alias it with custom functions. Like so:\n\n``` scss\n/// Helper function\n/// @access private\n/// @param {Map} $map - Map to parse\n/// @param {Arglist} $keys - Series of keys\n/// @return {*} Value at `$keys...` in `$map`\n/// @todo Write input validations\n@function map-fetch($map, $keys...) {\n  @each $key in $keys {\n    $map: map-get($map, $key);\n  }\n  @return $map;\n}\n\n/// Get color from palette\n/// @access public\n/// @param {Arglist} $kets - Series of keys\n/// @return {Color}\n@function color($keys...) {\n  @return map-fetch('color', $keys...);\n}\n\n// Usage\n$foundation-colors: (\n  \"primary\": (\n    \"light\": lightgreen,\n    \"normal\": green,\n    \"dark\": darkgreen\n  )\n);\n\n$color: color(primary, light);\n```\n\nConsider using `f-color` or `foundation-color` (although that's a bit long) to avoid any naming conflict. If you want to stay consistent and avoid any possible confusion, you might want to consider using `get-*` name (e.g. `get-color()`).\n\nWhile multiplying frameworks isn't a good idea, using external libs can totally happen. You don't want those libs to mess with the framework, do you?\n\nMy 2 cents. If you need any more help, be sure to ask.\n. @Undistraction Did you have a look at the function you are talking about? It is almost 40 lines of logic, index manipulation, and conditional statements. \n\nI wrote [one](http://sassmeister.com/gist/9838432) myself a while back, and couldn't come with something much better, only slightly more readable. \n\nAnyway, deep setting is a pain because of the way Sass works. You cannot update a map. You can just create a slightly different one. \n. > If a multi-dimensional map is easier for the average designer to understand or interact with\n\nI really don't think an insanely huge map is any better than small ones, in any way (readability, maintainability, simplicity, and a buch of other words ending with _-ty_).\n. > I fail to see how that makes life any easier for the author\n\nAll colors are gathered in a single entity rather than existing individually. It's a matter of preference at this point. Also, using a function allows you to do some error handling (which is discutable since Sass basically crashes when referencing an invalid variable), deprecation, and what else.\n. ",
    "xzyfer": "We use maps for configuration in our internal framework and it's been incredible. We started off with something similar to what @HugoGiraudel suggested with `f-color` but found this didn't scale out to well, and lead to developer confusion. In the developers mind they set all their config in one map and got confused/frustrated around needing multiple sass functions to extract those settings. In the end we opted for a rather naive `get()` function that added sugar over sass' `map-get()`.\n\nI'm happy to elaborate further on how we currently deal with settings maps now.\n\nMore importantly I wanted to point you at https://github.com/sass/libsass/pull/481. Map support will be landing in libsass shortly, largely because it's so important to how we manage our sass settings map.\n. We use maps for configuration in our internal framework and it's been incredible. We started off with something similar to what @HugoGiraudel suggested with `f-color` but found this didn't scale out to well, and lead to developer confusion. In the developers mind they set all their config in one map and got confused/frustrated around needing multiple sass functions to extract those settings. In the end we opted for a rather naive `get()` function that added sugar over sass' `map-get()`.\n\nI'm happy to elaborate further on how we currently deal with settings maps now.\n\nMore importantly I wanted to point you at https://github.com/sass/libsass/pull/481. Map support will be landing in libsass shortly, largely because it's so important to how we manage our sass settings map.\n. ",
    "Undistraction": "@HugoGiraudel Whilst I agree with a lot of what you've said, I'm interested in the following:\n\n> Updating a 2-levels map is a pain to update manually. Needless to say building a function to dynamically update a nested map is a nightmare...\n\nI've not found this at all, so I'm wondering what kind of edge-cases and strangeness I'm missing. Sass Maps has a `map-set-deep` function which I've found effective and it's relatively trivial to write a function to recursively merge two maps.\n. @HugoGiraudel No arguments from me on the clunkiness of the logic, and the immutability of maps is a big pain the arse.  I think in many ways, both are reflections of the strange place Sass is at. Personally I keep flipping between wanting to use it minimally and wanting to push it as far as it can go. After working in JavaScript or Ruby I come back to Sass and doing anything beyond simple functional stuff seems ludicrously awkward. And given that an awful lot of designers coming from CSS have no programming chops at all, their exposure to the clunky functional elements of Sass is not an ideal first experience. Don't get me wrong; I love Sass, but it seems to be growing into a strange frankenstein's monster.\n\nI guess my point is that most designers using Sass don't care about the implementation of things like `map-get-deep`. They do care about simple tools that make writing CSS easier. If a multi-dimensional map is easier for the average designer to understand or interact with through a simple abstracted API that hides at least some of Sass's less pleasant functional aspects, then that is the best option. Though I'm currently up-in the air on the matter and I find deeply nested maps can be pretty confusing compared to a stack of well named variables.\n. @HugoGiraudel Obviously an 'insanely huge map' is not a great idea, and I never suggested it was, but storing related values in a single location has a lot of advantages, for example debugging and looking for duplications/optimisations. The way I get around this issue is to store the values in a large map and then have a function/mixin that allows me to register elements to that map, for example:\n\n```\n@include register-palette(brand,\n  (\n    primary: $dark-blue,\n    secondary: $mid-blue,\n    tertiary: $light-blue\n  )\n);\n```\n\nThat way I only need to think in small chunks but everything is stored in a single place. With some intelligent merging allowing for optional overwriting of existing values, I've found this a really flexible solution.\n. @benfrain I think in that example, pulling colours from a map is pointless, because you get nothing from it you don't get from variables. When you abstract the colour names to something more semantic though is when this kind of thing becomes interesting. However, I'm not convinced that just having a button (for example) do `button: palette(button, color)` is much better. It still atomises the colour configuration so that maybe button, tab, badge and whatever else are all making separate calls to pull in the same colour value. This _does_ make more sense if there is a system in place to inject theme values into all components so that this duplication becomes a product of the theming, not a maintenance pain.\n\nTo be honest, I'm feeling more and more that breaking out colours like this is fine for examples of what can be done with Sass maps, but is really only part of a wider issue. If we are going to configure colours, then why not background images, border-styles, text-shadow and other decorative styles (as opposed to behavioural or layout styles) that are widely used in theming components. What I think everyone is looking for is a way to theme every component in a project and colour is just one strand of this. Why should setting a `background-color` be treated any differently than setting a gradient background?\n\nI also think if you are going down a settings route, media queries have to be factored in. This can be true of decorative styles and is absolutely true of layout.\n. @gakimball I think you're bang on the money when you make that distinction between those that know Sass and those that know CSS. Once of the projects I'm currently involved in involves on-boarding designers to a Sassy codebase and I've really had to take a step back and look at it from their perspective and it's quite shockingly complex. It's easy to sell variables, but when you start explaining a mixin that calls a function that does a lookup on a map using a strange functional style to someone who is used to pure CSS you can hear the gears grinding to a halt. \n\nThat said, there has to be a way to leverage Sass to make setting properties across breakpoints cleaner. I'm currently experimenting with using a rhythm unit; single, double, half, quarter etc that can be dropped in as a value for padding or margin and is adjusted automatically across breakpoints from a centralised configuration. For example, by default, single might equate to rem(10), but at medium it opens out to rem(13). This is massively reducing the number of disparate and repeated values through a project and greatly encourages consistency. \n\n> because you can't reference another place in the map while it's still being defined.\n\nThis is indeed a real drag, but if you break the mega-map into multiple maps including a few base maps, this can be (largely) negated. It is also worth thinking about these maps as a point where configuration is stored as opposed to a place where configuration is defined. This ties into my comments earlier on theming. \n\nI think this (configuration and it's half-brother setting properties across breakpoints) is currently an unsolved problem but I think there is enough flexibility in Sass that there is a good solution out there.\n. @AshleyAitken Where do you draw the line though between what should and shouldn't be configured on a breakpoint by breakpoint basis? Font-size, line-height, box-properties, offsets, sizes and even things like background image, font-smoothing are all props which often need to change at different breakpoints. The real advantage of using maps is that they allow relationships and nesting and more importantly, they don't rely on predefined keys / names. This is absolutely critical when you get into breakpoints which are arbitrary. The idea that there are 4 or 5 predefined breakpoints seems increasingly inadequate and therefore so does the idea that you can create variables to cope with all possibilities. \n. @HugoGiraudel Whilst I agree with a lot of what you've said, I'm interested in the following:\n\n> Updating a 2-levels map is a pain to update manually. Needless to say building a function to dynamically update a nested map is a nightmare...\n\nI've not found this at all, so I'm wondering what kind of edge-cases and strangeness I'm missing. Sass Maps has a `map-set-deep` function which I've found effective and it's relatively trivial to write a function to recursively merge two maps.\n. @HugoGiraudel No arguments from me on the clunkiness of the logic, and the immutability of maps is a big pain the arse.  I think in many ways, both are reflections of the strange place Sass is at. Personally I keep flipping between wanting to use it minimally and wanting to push it as far as it can go. After working in JavaScript or Ruby I come back to Sass and doing anything beyond simple functional stuff seems ludicrously awkward. And given that an awful lot of designers coming from CSS have no programming chops at all, their exposure to the clunky functional elements of Sass is not an ideal first experience. Don't get me wrong; I love Sass, but it seems to be growing into a strange frankenstein's monster.\n\nI guess my point is that most designers using Sass don't care about the implementation of things like `map-get-deep`. They do care about simple tools that make writing CSS easier. If a multi-dimensional map is easier for the average designer to understand or interact with through a simple abstracted API that hides at least some of Sass's less pleasant functional aspects, then that is the best option. Though I'm currently up-in the air on the matter and I find deeply nested maps can be pretty confusing compared to a stack of well named variables.\n. @HugoGiraudel Obviously an 'insanely huge map' is not a great idea, and I never suggested it was, but storing related values in a single location has a lot of advantages, for example debugging and looking for duplications/optimisations. The way I get around this issue is to store the values in a large map and then have a function/mixin that allows me to register elements to that map, for example:\n\n```\n@include register-palette(brand,\n  (\n    primary: $dark-blue,\n    secondary: $mid-blue,\n    tertiary: $light-blue\n  )\n);\n```\n\nThat way I only need to think in small chunks but everything is stored in a single place. With some intelligent merging allowing for optional overwriting of existing values, I've found this a really flexible solution.\n. @benfrain I think in that example, pulling colours from a map is pointless, because you get nothing from it you don't get from variables. When you abstract the colour names to something more semantic though is when this kind of thing becomes interesting. However, I'm not convinced that just having a button (for example) do `button: palette(button, color)` is much better. It still atomises the colour configuration so that maybe button, tab, badge and whatever else are all making separate calls to pull in the same colour value. This _does_ make more sense if there is a system in place to inject theme values into all components so that this duplication becomes a product of the theming, not a maintenance pain.\n\nTo be honest, I'm feeling more and more that breaking out colours like this is fine for examples of what can be done with Sass maps, but is really only part of a wider issue. If we are going to configure colours, then why not background images, border-styles, text-shadow and other decorative styles (as opposed to behavioural or layout styles) that are widely used in theming components. What I think everyone is looking for is a way to theme every component in a project and colour is just one strand of this. Why should setting a `background-color` be treated any differently than setting a gradient background?\n\nI also think if you are going down a settings route, media queries have to be factored in. This can be true of decorative styles and is absolutely true of layout.\n. @gakimball I think you're bang on the money when you make that distinction between those that know Sass and those that know CSS. Once of the projects I'm currently involved in involves on-boarding designers to a Sassy codebase and I've really had to take a step back and look at it from their perspective and it's quite shockingly complex. It's easy to sell variables, but when you start explaining a mixin that calls a function that does a lookup on a map using a strange functional style to someone who is used to pure CSS you can hear the gears grinding to a halt. \n\nThat said, there has to be a way to leverage Sass to make setting properties across breakpoints cleaner. I'm currently experimenting with using a rhythm unit; single, double, half, quarter etc that can be dropped in as a value for padding or margin and is adjusted automatically across breakpoints from a centralised configuration. For example, by default, single might equate to rem(10), but at medium it opens out to rem(13). This is massively reducing the number of disparate and repeated values through a project and greatly encourages consistency. \n\n> because you can't reference another place in the map while it's still being defined.\n\nThis is indeed a real drag, but if you break the mega-map into multiple maps including a few base maps, this can be (largely) negated. It is also worth thinking about these maps as a point where configuration is stored as opposed to a place where configuration is defined. This ties into my comments earlier on theming. \n\nI think this (configuration and it's half-brother setting properties across breakpoints) is currently an unsolved problem but I think there is enough flexibility in Sass that there is a good solution out there.\n. @AshleyAitken Where do you draw the line though between what should and shouldn't be configured on a breakpoint by breakpoint basis? Font-size, line-height, box-properties, offsets, sizes and even things like background image, font-smoothing are all props which often need to change at different breakpoints. The real advantage of using maps is that they allow relationships and nesting and more importantly, they don't rely on predefined keys / names. This is absolutely critical when you get into breakpoints which are arbitrary. The idea that there are 4 or 5 predefined breakpoints seems increasingly inadequate and therefore so does the idea that you can create variables to cope with all possibilities. \n. ",
    "benfrain": "I have tried this both ways. I find myself in agreement and disagreement with Hugo at the same time.\n\nAs @HugoGiraudel says, I've found enormous utility in maps for looping over things. Big list of colours you want to spit out into rules \u2013 perfect! Couldn't be without maps in that scenario.\n\nHowever, when it comes to variables for colours and z-index, I'm yet to be convinced (although I welcome any further input) they offer anything for the end user - what are the actually buying you? Instead of\n\n```\ncolor: $color-grey-66;\n```\n\nYou write:\n\n```\ncolor: color(grey, 66);\n```\n\nI fail to see how that makes life any easier for the author - they just want to pick the right colour and this seems a needless complication.\n\nA good naming convention for these variables seems to get me just as much and makes them easier to work with. If I want to `lighten($color-grey-66, 10%)` - that's far easier to grasp than the map based alternative.\n\nHaving the variables as merely variables also makes things more portable if the project ever needs to switch to another pre-processor.\n\nGreat discussion so far though - keen to hear more :)\n. I have tried this both ways. I find myself in agreement and disagreement with Hugo at the same time.\n\nAs @HugoGiraudel says, I've found enormous utility in maps for looping over things. Big list of colours you want to spit out into rules \u2013 perfect! Couldn't be without maps in that scenario.\n\nHowever, when it comes to variables for colours and z-index, I'm yet to be convinced (although I welcome any further input) they offer anything for the end user - what are the actually buying you? Instead of\n\n```\ncolor: $color-grey-66;\n```\n\nYou write:\n\n```\ncolor: color(grey, 66);\n```\n\nI fail to see how that makes life any easier for the author - they just want to pick the right colour and this seems a needless complication.\n\nA good naming convention for these variables seems to get me just as much and makes them easier to work with. If I want to `lighten($color-grey-66, 10%)` - that's far easier to grasp than the map based alternative.\n\nHaving the variables as merely variables also makes things more portable if the project ever needs to switch to another pre-processor.\n\nGreat discussion so far though - keen to hear more :)\n. ",
    "AshleyAitken": "Would it be worth doing both, i.e. having maps and structured variable names? The best of both worlds with a small price to pay in size.=\n. Would it be worth doing both, i.e. having maps and structured variable names? The best of both worlds with a small price to pay in size.=\n. ",
    "DerFrenk": "I'm surprised that nobody mentioned it earlier: IDE code completion. When I type `$topbar-color` in PhpStorm, it automatically shows a list of all available colors for the topbar. This list contains all available colors for the component like `$topbar-bg-color`, `$topbar-link-color`, `$topbar-dropdown-link-color`, etc.\n\nI don't have to remember any of those variables, because they're autocompleted for me. I'm afraid that won't happen when using the `foundation()` function ;)\n. I'm surprised that nobody mentioned it earlier: IDE code completion. When I type `$topbar-color` in PhpStorm, it automatically shows a list of all available colors for the topbar. This list contains all available colors for the component like `$topbar-bg-color`, `$topbar-link-color`, `$topbar-dropdown-link-color`, etc.\n\nI don't have to remember any of those variables, because they're autocompleted for me. I'm afraid that won't happen when using the `foundation()` function ;)\n. ",
    "viztastic": "@gakimball If I may, I am a classic example of a designer who uses Sass for its simplicity rather than its ability to provide architectural elegance.\n\nI think you guys have done an amazing job with making your variables meaningful and accessible. I would certainly encourage the notion of prefixing with 'foundation' to avoid namespace collisions, but overall I am a big fan of simple variable lists and don't see any real value in maps beyond grouping tightly related variables together to facilitate simple looping.\n\nIDE auto completion is also important to me.\n\nMy 2c... and very excited about Foundation Apps!\n. @antjanus Just a note that the readme is now looking really good, thanks! Now looking forward to reviewing the docs when they become available :)\n. Hi, not sure if this is helpful feedback or a distraction,\n\nI am able to install bower/gulp fine and get localhost:8080 running fine. The issue is that the demos on the LHS mostly don't seem to point anywhere, see screenshot below, is this just a wip thing?\n\n![image](https://cloud.githubusercontent.com/assets/8556736/4861201/67d21898-6100-11e4-802b-f2483cd29cae.png)\n. @gakimball @AntJanus  Not sure if this is related but getting the following error on the latest master-clone on windows when I run npm install \n\n![141106232158](https://cloud.githubusercontent.com/assets/8556736/4935662/c022787c-65af-11e4-8697-e6957e1ed87b.png)\n. Very exciting news @gakimball \n\nAre there plans for a video tutorial or two to give foundation-app noobs a test-drive on best practice approaches on developing angular apps with foundation? I noticed a few discussions around parts of foundation-apps being suitable only for prototyping and others for production purposes.. would be great to somehow consolidate the ideas in to a \"Let's take foundation 6 for a quick spin\" video of sorts.\n. Further to this, I have noticed that the lines of code now all display cramped together. See screenshot below (this isn't only for the modal pages, seems to be across all the docs)\n\n![image](https://cloud.githubusercontent.com/assets/8556736/5257941/90ad468a-7a36-11e4-9c79-d6a7bc560248.png)\n\n(using Chrome)\n. @gakimball When do you expect a 1.0.1 release could be ready to address ^? \n\nThanks!\n. @gakimball If I may, I am a classic example of a designer who uses Sass for its simplicity rather than its ability to provide architectural elegance.\n\nI think you guys have done an amazing job with making your variables meaningful and accessible. I would certainly encourage the notion of prefixing with 'foundation' to avoid namespace collisions, but overall I am a big fan of simple variable lists and don't see any real value in maps beyond grouping tightly related variables together to facilitate simple looping.\n\nIDE auto completion is also important to me.\n\nMy 2c... and very excited about Foundation Apps!\n. @antjanus Just a note that the readme is now looking really good, thanks! Now looking forward to reviewing the docs when they become available :)\n. Hi, not sure if this is helpful feedback or a distraction,\n\nI am able to install bower/gulp fine and get localhost:8080 running fine. The issue is that the demos on the LHS mostly don't seem to point anywhere, see screenshot below, is this just a wip thing?\n\n![image](https://cloud.githubusercontent.com/assets/8556736/4861201/67d21898-6100-11e4-802b-f2483cd29cae.png)\n. @gakimball @AntJanus  Not sure if this is related but getting the following error on the latest master-clone on windows when I run npm install \n\n![141106232158](https://cloud.githubusercontent.com/assets/8556736/4935662/c022787c-65af-11e4-8697-e6957e1ed87b.png)\n. Very exciting news @gakimball \n\nAre there plans for a video tutorial or two to give foundation-app noobs a test-drive on best practice approaches on developing angular apps with foundation? I noticed a few discussions around parts of foundation-apps being suitable only for prototyping and others for production purposes.. would be great to somehow consolidate the ideas in to a \"Let's take foundation 6 for a quick spin\" video of sorts.\n. Further to this, I have noticed that the lines of code now all display cramped together. See screenshot below (this isn't only for the modal pages, seems to be across all the docs)\n\n![image](https://cloud.githubusercontent.com/assets/8556736/5257941/90ad468a-7a36-11e4-9c79-d6a7bc560248.png)\n\n(using Chrome)\n. @gakimball When do you expect a 1.0.1 release could be ready to address ^? \n\nThanks!\n. ",
    "AntJanus": "@gakimball glad I read this! I already started migrating stuff over, I'll hold off until we can talk about it.\n. @gakimball I think that we can safely merge this down now. \n. @gakimball I'll go ahead and give that a shot. It makes sense to mask all of that functionality, I just keep thinking ahead programmatically, not in terms of simplicity! :) \n\nI think that behind the scenes, I'll run an angular modal service that will broadcast to all the modal directives via the `fa-model-open` and similar directives. When the name matches, an action will be triggered. That'll make it much easier for everyone to use (since they won't have to touch angular) and will allow us to sidestep controllers.\n\nHopefully that won't be too difficult! :)\n. @gakimball so the directive is ready to go in but I noticed some structural changes that we should probably discuss.\n\nWe currently have two folders for both styling and JS. One at the root of the folder, and one inside the client folder. We should probably decide firmly where we want to put the files permanently. I think we could argue both ways.\n\nPros&Cons of having it in the client folder:\n- The client folder speaks for itself and is the entire project in its raw form\n- it makes it clear that anything outside of the `client` folder is a supporting file (Gulp, readme, etc.)\n- the con is that you have to go 4 directories deep in order to open a single file (`client/assets/js/;angular`)\n\nHaving it at the root:\n- easier to access\n- easy to find files at a glance in the repo\n- source is intermixed with supporting files\n\nI'm not sure which way I lean. If we had a back-end, I'd definitely throw everything in the client folder but we don't, and this is a front-end only framework. On the other hand, if anyone wants to implement a back-end, it'd make more sense if everything was in the client folder (and the back-end in a `server` folder).\n\nThoughts on this?\n. @gakimball Alright, so in that case, I'll keep things as they are since the Angular stuff is mostly a \"library\" sort of thing rather than something I'd let users dig around in. \n. @gakimball Awesome, then, I'll restructure the listeners array to favor access by ID. I'm sure if we stumble on an edge-case where we need the deep structure, I'll just refactor it. Luckily, it's all behind-the-scenes stuff. :) \n\nAnyways, cool, I'll add that functionality right away. \n. For anyone wondering, I've finally implemented the template loading for interchange. This means that all the scenarios within an interchange directive get collected, saved, and the appropriate partial/template gets loaded (initially).\n\nJust an FYI, this is a huge breakthrough since the directive has essentially replaced `ng-if` and `ng-include` and even uses the `templateCache`. Now I just need to find a way to fire off the `resize` hook every time the window resizes! :) Shouldn't be an issue!\n. And interchange is officially working! Some features that are missing (but will be available):\n1. [x]  compiling prebuilt media queries the same way that foundation does it (by creating a meta element and checking its `font-family` property)\n2. adding custom media queries programmatically (will probably be part of `FoundationApi`)\n3. implement the matchMedia library as an AngularJS injectable module\n\nAt this point, I'm thinking that there needs to be better organization to the template files. I'm pretty much just throwing each directive I add on there without any documentation or without any clue as to how it works.\n\nOn top of that, it'll be a good idea to implement testing! ProtractorJS should be sufficient for that :)\n. @gakimball you mean comment-like internal documentation, external documentation (similar to how Angular's docs work) or something like Javadoc (<- not a big fan of those).\n. Sounds good. I'm continuously refactoring to make things more sensible but I'll definitely comment the code better. I'm really not a big fan of JSDoc so I'm glad we're on the same page! :)\n. @t1mmen just fixed it! :)\n. @gakimball I'm trying to decide on something here. Should the directive add all the necessary classes? That way you have to only write:\n\n``` html\n<div>\n   <div fa-tab-href=\"tabId\">Tab 1</div>\n</div>\n<div fa-tab-content>\n   <div fa-tab id=\"tabId\">Tab content!</div>\n</div>\n```\n\nOr should the user be allowed to pick their own classes and thus they'd have to add all the necessary classes. I'm on the fence. \n\nOn the one hand, I feel like the mechanism of tab switching should be free of styling (so that it could be used anywhere else with different classes, and even different purposes), on the other hand, it'd be nice to have everything neatly packaged.\n\nWith classes:\n\n``` html\n<div class=\"tabs\">\n  <div  fa-tab-href=\"tabId\" class=\"tab-item\">Tab 1 </div>\n</div>\n<div fa-tab-content class=\"tab-content\">\n  <div fa-tab id=\"tabId\" class=\"tab-pane\">\n    Test content\n  </div>\n</div>\n```\n. If anyone is wondering why the tons of commits and the hold-ups, it's because of a bug that sets an ID across all `tabs` directives rather than just for one specific one. This causes all tabs to update from a single tab navigation.\n\nIt's, safe to say, frustrating.\n. @gakimball @zurbrandon this is ready, w0000t! :) I had to change the syntax a bit but everything works as it should. \n. More improvements (internal):\n- [x] switch `is-active` DOM manipulation with `ng-class={is-active: active}` for a more \"angular-like solution\"\n- [x] enable non-hash URLs (requires the use of historyApi middleware).\n- [x] enable \"E\" restriction on component directives, no need to restrict to \"attribute\"\n- [ ] ~~update docs with new elements (might be worth it to add a code directive for displaying code snippets)~~\n. @davidkpiano the animations are class-based but for the `fade` example, everything is simple, just append an \"in\" and an \"out\". It gets more complicated for your second example:\n\n```\nanimation: slide\n```\n\nWould this mean that you're sliding in from the left/right/top/bottom? Would you slide out the same way? Or would you slide out the opposite way? The example in the docs is probably not a real-world example, the real world example would be:\n\n```\nanimationIn: slideInLeft\nanimationOut: slideOutRight\n```\n\nTo simulate a slideshow or something.\n. @richbai90 for a large-scale application, I'm not sure if I would recommend using the routing method in FA since it's aimed at designers and developers that aren't entirely familiar with Angular. However, i think it's an interesting concept: having a JS object define all of the routes and dynamically injected into the application at run time. I'd say it makes it easier to edit routes and have a quick overview since the default ui-router declaration requires a ton of piping of `state`. \n\nBut obviously, in the case of the JS object, you can't take advantage of `resolve` or other similar features.\n. @kenwheeler I've been following the discussion and it looks like Angular 2.0 is not even close to ready. The announcement was made around a spec rather than an actual working prototype. There has been a lot of interesting discussion about it! :)\n. @rafibomb I already considered that but since we have only two controllers and they need each other, I found no reason to separate them. Plus, since we're not adding any additional controllers (and probably won't be), I can't justify making a folder with two controller files and adding those into dependencies, and try to cross-dependency them as well.\n. @gakimball this branch was supposed to allow non-hash URLs but it seems like we're testing out a new server. Kudos on that since we can use that plugin and my solution together. I made a couple of adjustments and this branch will be able to enable that feature plus clean up a bunch of stuff.\n\nWe can merge this in ASAP! :)\n. @gakimball can you look over this real quick? :) We got a working accordion directive! w00t!\n. @Martinspire there was a discussion on it and the thing is that SASS for Ruby is ahead of libsass (the cross-platform version of Sass used with Node) which means that Foundation for Apps can stay more cutting edge; however, some of the necessary features ARE getting implemented into Libsass so hopefully, we'll be able to switch right back! :)\n\nAnd again, I'm a Windows dev too so I feel you on the speed thing, Sass takes somewhere between 2-15 seconds to compile depending on Ruby's mood.\n. @Martinspire just as a sidenote, I'm a window guy, developing the angular side solely on a windows machine.  :)\n\nAs far as `sudo`, you're right, it should be \"open a CMD with administrative privileges\". I can go ahead and add some of this information to the readme. However, I'm not entirely sure what the entire process would be as I'm using a combination of Cmder (which comes with Msysgit), Chocolatey (a package manager), Unix tools for Windows and JRuby instead of Ruby (I've heard it has better support). \n\nUsing the Node installer though is pretty much the right way to go, I believe it sets the correct environment variable during install (so you can use it in the command line).\n\nSo how does this sound?\n1. Install Ruby with the official installer or use JRuby alternative.\n2. Install Msysgit to get Git. It might be worth looking into using Cygwin or Cmder both of which come with Msysgit and offer more feature-full console/terminal experience\n3. Since Windows does not have a `sudo` command, make sure your command line is running with administrative priveleges (right-click or shift-right-click and select \"Run as administrator...\")\n\nGood? If you have any input on the process, let me know! \n. I've just updated the README with these notes.\n. I generally never have to run as Admin and I will admit that I have a bad habit of doing so. I set u my CMD shortcut to automatically prompt administrative rights. Mainly because I hate having to relaunch my command prompt. I use CMDer and pretty much live in the command prompt so I don't ever open a prompt from a directory.\n. @gakimball I was working on a few tests this morning and found myself refactoring a bunch of the code and fixing several bugs (yay for somewhat TDD). I'd like to merge this in by the end of the week to get those bugs resolved if that's cool. We'd also have some initial tests to setup and work on in the future when necessary :)\n. @gakimball yep! I'll integrate the gulp-karma plugin when I get a chance.\n. @jakeleboeuf thanks! It turns out that I committed on master rather than a feature branch >.< so there's a half-built module with syntax issues. I deleted it and everything is in order now. \n. @jakeleboeuf Ahh! I issued a fix for that yesterday, it looks like it was overwritten by accident. Pull the latest master and you'll see it working!\n\nThe issue was that I was concating all the output css files and what that did was merge the `app.css.map` into the `app.css`.\n\nThanks for reporting these errors! :)\n. Issues:\n- [x] actionsheet causes block to scroll (possibly wrong class usage on the parent element on my end) \n- [x] popup shows up in the wrong place\n- [x] popup does not stay in place when scrolling - tether does not watch for scroll events in successive parents. (tether behavior mentioned in docs)\n- [x] custom actionsheet button causes actionsheet to show up in the wrong place. - tether doesn't seem to be the right solution for this (solved by allowing custom trigger elements within the container).\n. @gakimball I think this is just about ready to go if you want to do some peer review on it. I changed the actionsheet to work like so:\n\n``` html\n<fa-action-sheet>\n   <fa-as-button title=\"My button title\"></fa-as-button>\n   <fa-as-content position=\"bottom\">My content!</fa-as-content>\n</fa-action-sheet>\n\n<!-- custom buttons -->\n<fa-action-sheet>\n   <fa-as-button><a href=\"#\" class=\"button secondary\">My better button</a></fa-as-button>\n   <fa-as-content position=\"bottom\">My content!</fa-as-content>\n</fa-action-sheet>\n```\n. @gakimball \n\nI can make sure that each directive accepts a \"onOpen\" and \"onClose\" function in the declaration. So as long as you specify a function in your controller, you can pass it along and have it fired like so:\n\n``` js\n//within controller\nscope.onModalClose = function() {\n  alert('are you sure?');\n}\n\n//on a directive\n<fa-modal onClose=\"onModalClose\">\n```\n\nThis is how some other angular libraries solve the issue. Internally, the directive will make sure that `onModalClose()` gets run when its deactivating itself.\n\nI think that would be the best solution.\n\nOutside of that, there are some other things we can do:\n1. We can use a common FoundationApi emitter. So for example, each directive, on any action would publish through the API a generic \"event\" with a payload that describes the event like so ['modal', 'my-id', 'close']. That way anyone can just add a listener for the generic `event` and check `if(whateverId == payload[1] && payload[2] == 'close') { }`.\n2. We could also create non-generic events. So for instance, there could be a generic `modal` event which would tell us what the actual event was (like `close`). Or even more specifically a `modal-close`. All running through the FoundationApi\n3. We can use Angular's built-in event system described [in this neat stackoverflow answer](http://stackoverflow.com/questions/19446755/on-and-broadcast-in-angular), which would mean that someone could hook into these events WITHOUT having to use FoundationApi. This is, obviously, not a great idea for any internal functionality but for something that's publicly exposed, might be worth looking into\n\nWhat do you think?\n\n**note** there IS another option and it's already functional. Since anyone can hook into FoundationApi, they can just do this:\n\n``` js\nfoundationApi.subscribe('id-of-an-element-they-watch-for', function(payload) {\n   if(payload == 'active') {\n    //perform some logic\n  }\n});\n```\n. @gakimball I merged in some of the branches, cool if I merge in this one? I'm not sure if there is any more work to be done here.\n. @gakimball So here's the gulp plugin. We'll have to move this to another repo if we want to push this out to NPM!\n. @gakimball well, it requires the `foundation.init.js` package that initializes the routing for it to work. I can keep it in a /bin folder for the time being or I can open a new repo (though I'm not good with names so I'll need some help!) and push it out to NPM, put it down as a dependency.\n. @gakimball I'll go ahead and merge this in then, and keep the plugin in a /bin directory for now. We can move it and change it as we go.\n. @gakimball I know we were going to create an markdown-based site docs, but would this suffice for the time being? I can even leave a note in the main README.md or I can rename it to ANGULAR.md and leave it at the root.\n\nThoughts?\n. @gakimball added, as far as the first link with the asset/template loading, that bug was fixed in the core library over a year ago.\n. @gakimball I keep seeing people wondering about the Angular documentation, would it make sense to merge this down? Or should I rewrite as part of all of the docs templates?\n. @gakimball sure thing. \n. PR is up\n. @zurbrandon do you mean in this case:\n\n``` html\n<fa-action-sheet>\n   <fa-as-button></fa-as-button>\n</fa-action-sheet>\n```\n\nI can't replace it with `fa-toggle` since that directive already has certain logic that is generalized to work with all directives. The `fa-as-button` is a directive that handles the default button logic and templating. Unfortunately, I can't merge the logic of the two without adding lots of complexity.\n. @zurbrandon I didn't realize there were options for that but I'm adding them now, can you give me an example of the color class and the class that pins the notification in different places?\n\nAlso, as far as the static vs. dynamic notifications go, the reason the directives don't look the same is because the directive that fires a dynamic notifications has to contain all of the notification information while not being the notification itself while the static notification is just that, and can be toggled just like many of the other directives we have. I can't really make it more consistent than it is.\n\nOtherwise, there has to be some kind of a directive tag on the page to serve as an endpoint for the notifications. I don't really see a way around it, it's the container for the internal logic.\n. @zurbrandon andddd behavior standardized with #69 \n. Crap, I'll need to wait for the libsass branch to merge in -.-\n. @gakimball phew, that worked. Unfortunately, I have to keep this issue open until node-sass gets a fix. Gulp-sass doesn't even require a specific node-sass version so I can't even downgrade that to get the right node-sass version :/\n. @viztastic somewhat related. Unfortunately, node-sass requires both Python to be installed and Visual Studio (the express version at least). Here's the link to installation requirements: https://github.com/sass/node-sass#install\n\n@gakimball I'm thinking that this is getting a little crazy. Installing Ruby + Sass is much faster and easier than having to install Python and all this other crap. I'm not sure how the requirements are for OS X but since OS X already has Ruby pre-installed, this avenue may prove easier for both systems.\n. @jwvanderbeck I would definitely expect people to use Express with proper configuration for production and something like Forever to run the Node process rather than Gulp. That'd be non-nonsensical. You're on the right track. \n\nI would say that this stack is great for rapid prototyping and developing though :) \n. Did bower install all of your components correctly? That'd be the first place to check. Open up `bower_components` in your folder and check to see if those files are there or not.\n. @3lfist just fixed it, do a `git pull` to get the fix. Not sure why `bower install` wasn't run. The reason it's not in the docs is because it should run automatically with `npm install` (it's specified to do so in the package.json).\n\nLet me know if you hit on any other errors. I'm already aware of some issues for Windows users regarding libsass. \n. hmmm...strange. Okay. Can you give me the output of Gulp? Were there any errors? If you're getting a \"Cannot GET /\", that sounds like the `copy` task failed.\n. @3lfist hmm.. okay. Can you check if you have a build folder? And if you do, check if everything is in there (like `index.html`, `assets/`, etc.). If it's there, try to kill the gulp process and refresh `localhost:8080`. I wonder if there is a stray Node process that might be running and giving you trouble.\n\nIf you get the same message, that means you have a Node process running interfering with your new server. If you have a Mac, use the Activity Monitor and look for a \"node\" process and kill it. And try again.\n\nLastly, at the risk of sounding like a typical IT person, would you mind deleting all the node_modules and bower_components, doing a git pull again and rerunning the install process?\n. @3lfist you shouldn't have to `sudo` it. I see one problem already: there is no `index.html`. So for some reason, that's not getting copied. That's the heart of the issue.\n\nI'm on a Ubuntu VM and am experiencing the same problem so I'll go ahead and troubleshoot this on my machine and let you know how I got it resolved.\n. @3lfist issue is fixed. Just do a `git pull`. It seems like both OS X and Windows are forgiving when it comes to capitalizing folder names. Ubuntu, however, is not :)\n. @gakimball ah....well then, I'll go undo my work and rename the folder!\n. @gakimball urgh, so, changing uppercase to lowercase is turning out to be quite a task. \n. @gakimball phew, a few rebases, and forceful git pushes and it's good to go. :)\n. @jwvanderbeck please do a `git pull`, this issue has been resolved: https://github.com/zurb/foundation-apps/blob/master/js/angular/app.js#L24-L26\n. @jwvanderbeck :) everything is still being worked on quickly so things are bound to break once in a while.\n. @jwvanderbeck if you do a `git pull`, the issue will resolve itself, everything is set to 1.3.1 now.\n. On a sidenote, yay for automated testing! \n. Issues so far:\n- [x] interchange no longer renders on-page partials\n- [x] displaced tabs don't show up\n- [x] static notification doesn't fire.\n- [x] popup doesn't work\n. It looks liek\n. @gakimball btw, so here is the Iconic wrapper. It works simply:\n\n```\n<div iconic>\n    <img data-src=\"#\" data-fallback=\"#\" ... /> // regular iconic declaration\n</div>\n```\n\nThe Iconic directive fires an \"inject\"' on its child when invoked which makes Iconic register the icon and replace the `<img>` tag with its SVG declaration. \n\nThe reason a parent element is required is because the second the `img` gets replaced with an `svg` and kills all the bindings, including the directive and any other directives. The issue with that is that if we use `ng-if` or even `ng-class` on it, those will cease to function. This approach was recommended on the forums for this specific reason.\n\nI think the only way we could side-step this is to inform users that they cannot apply any logic to the icon img files. This would lead to a cleaner syntax:\n\n```\n<img iconic data-src=\"#\" data-fallback=\"#\" ... /> //standard iconic declaration\n```\n. @gakimball unfortunately, no, not without a parent element to keep track of it. I'll go ahead and make the change. \n. Right, the entire idea is to wrap it with whatever you want to use it for. But yeah, if you have a click event, it'd make more sense to wrap an `img` with an anchor.\n. @gakimball sweet! So those will be part of this repo?\n. I'm aware of the issue, the CI currently tries to run gulp-sass on the latest version on every test. We've got our first passing build today so this issue has been resolved.\n. Yep, the master branch is passing. I'll have to test it on my machine and solidify the dependency when I get a chance.\n\nThanks for the heads up!\n. Anddd updated.\n. @jwvanderbeck You're on the right track. In fact, the `app.js` is meant for the rapid prototyping for users that don't want to learn/use angular explicitly. If you're not a fan and want to run your own code, or get rid of the dynamic routing, just erase this line:\n\n```\nFoundationStateProvider.registerDynamicRoutes();\n```\n\nThis is part of the `foundation.init` module, which also runs this line in `app.js`:\n\n```\nfoundationInit.init();\n```\n\nYou're welcome to delete those and run your own thing. Unfortunately, `foundationInit.init()` initializes some things, and one of them is the setup for `interchange` so without the module, interchange won't work.\n\nOne thing is clear, I really need to add all the inter-dependencies so that Angular can warn you if you're missing something. Pretty much all directives depend on `common.*` for FoundationApi and all of the basic `fa-open/fa-close` directives. These are located in `js/angular/common`.\n\nI started on _some_ documentation, and you can check it out [here](https://github.com/zurb/foundation-apps/blob/directive-documentation/js/angular/README.md), it's on another branch and should answer most of your questions.\n\nThe point of this entire thing was actually not to make it dependent on the structure. Everything should be portable, everything should be a module that you can easily inject. \n\nLet me know if that makes any sense! :)\n. @ilanbiala @jwvanderbeck I don't have time right now to write out a full response but both of what you are proposing we're already doing:\n- https://github.com/zurb/foundation-apps-template <- this is a startup repo that's meant to be a full-on solution for someone that doesn't want to mess with things. Though, they still can.\n- https://github.com/zurb/foundation-apps <- this is the main code repository. Bower install it, use what you want to use.\n\nNothing is tied to the app.js nor anything else. You can carry over whatever files you want to use. The `app.js` is a full-on solution but there is nothing forcing you to use it or even reference it. Use bower install, use gulp to include all of the files in the subfolders of js/angular: common, directives, partials, etc. and build your own App.js. DI is there for a reason, so that you don't have to use everything but only what you want/need. If you only need modals, use those, and don't include any of the other components in your build process, and just reference it in your app.js DI so that they're loaded into your app. \n\nWant to update? No problem, do a bower update and you'll get fresh everything (once there is a release and proper versions).\n\nMeanwhile, designers can indulge in f-apps-template which brings over all the logic from f-apps but with your own templates to use. And you still get the updates via bower install. \n\nI'll have to get back to everyone when I have time for it (probably on Monday). But does that not cover it? \n. Very exciting! :)\n. @ilanbiala I was under the impression that a native `forEach` loop wasn't fully supported across browsers. I'll keep angular.forEach for the time being.\n. @ilanbiala I checked the [es5 support chart](http://kangax.github.io/compat-table/es5/), looks like I'm a little behind times. Thanks for that catch! :)\n. Try using the Angular directives:\n\n``` html\n<div fa-panel id=\"my-panel\">panel content</div>\n<a href=\"#\" fa-toggle=\"my-panel\">toggle panel</a>\n```\n. @jwvanderbeck hmm. What does your `app.js` look like? I wonder if you're missing a dependency or something. Did any errors show up in your console?\n\nCase #2 is the correct usage so I'm wondering why it's not firing. it works fine on this end.\n. Ah, yeah, that was a bug that was fixed some time ago. The `has` function is part of jQuery and was replaced with another. \n. @jwvanderbeck sure thing. It's a little difficult since f-apps hasn't had a first release yet so it's one of those \"move fast, break things\" situations. \n. @jwvanderbeck the app is not broken. I just did a `git clone` and started a brand new project, the panel works as it should. \n\nI think the confusion comes from the docs files that are currently not up to date. When you're running the base app, check out `localhost:8080/playground` or the `docs/templates/page.html` file to see how it's supposed to work in Angular. That's the working version. \n\nIf that doesn't help, please, either create a repo for your app so I can check it out and troubleshoot it or post your application bootstrap file or html. I'm not entirely sure where things could have gone wrong.\n. Yep, duplicate. Closing it out. \n. good idea, I'll set that up\n. Anddd done. Perfect, it errored because `gulp-sass` could not compile the SASS correctly.\n. yep, it works. I'll go ahead and merge this in. We'll have a broken build, however, until node-sass gets a fix. \n. yeah, I just removed some of the other older branches that I kept up.\n. Whoops, i deleted them this morning, forgot to mention it!\n. @ilanbiala can you elaborate on the error? I'm not seeing it.\n. Since this was already fixed in another issue, I'm closing it. Let me know if you have any further trouble.\n. I've identified the issue, the fix should be out tomorrow. \n. The docs aren't fully finished but the issue is fixed.\n. The problem is how Angular handles its animations and how the UI Router delegates it. Angular has some cool helper classes like `.ng-enter` and `.ng-enter-active`. The animate module is as close you as you can get. It works..well, mostly. \n. @gakimball In a moment of epiphany, I realized why the \"flashing\" issues might be here (add `fadeIn` and the content fade outs and fades back in). One of them is that the transition timing and controls are on that element itself. That means that to get to an initial state, `fadeIn` will fade the element back out.\n\nIf there was a way to add an intermediate step, we could have our cake and eat it, too. Meaning that we could have an \"initial state\" (which would be `opacity:0`), an animated state (`transition-*` properties) and finally a final state (`opacity: 1`). I don't want to get into a class-itis type of deal but that seems to be a good way to solve the issue: go immediately to initial state, add transition timing and properties, animate to final state. Perhaps we could have a `fadeIn` class, a `fadeIn-transitions` class, and a `is-active` to activate the animation.\n\nThoughts?\n. @jpdesigndev I'd remove all of those classes once the animation is done. I'm not sure how the repaint works but I'm guessing the browser is forced to do so during the animation anyways. \n. @gakimball this seems to be working. well, mostly. For the active classes, there's a space between class selectors so that instead of `.fadeIn.ng-enter.ng-enter-active`, there's `.fadeIn.ng-enter .ng-enter-active`. I add the enter/enter-active classes manually which makes me wonder why having the previous `is-active` way of initializing animations didn't work. \n\nThe enter/enter-active classes don't get automatically added for programmatic solutions.\n. Yeah, the CSS looks a bit wonky:\n\n```\n.fadeIn.ng-enter {\n  opacity: 0;\n  transition-property: -webkit-transform, opacity;\n  transition-property: transform, opacity;\n  transition-duration: 700ms;\n  transition-timing-function: ease;\n  transition-delay: 0; }\n  .fadeIn.ng-enter.ng-enter-active, .fadeIn.ng-enter .ng-leave-active {\n    opacity: 1; }\n\n.fadeOut.ng-leave {\n  opacity: 1;\n  transition-property: -webkit-transform, opacity;\n  transition-property: transform, opacity;\n  transition-duration: 700ms;\n  transition-timing-function: ease;\n  transition-delay: 0; }\n  .fadeOut.ng-leave.ng-enter-active, .fadeOut.ng-leave .ng-leave-active {\n    opacity: 0; }\n```\n\nNow if only I understood SASS as much as I would like to, lol\n. Anddd done. I used a trick from Angular's internal ngAnimate code to stop the transition from happening internally, using a `$rootScope.$digest` to force a reflow/repaint, removing the transition block, and appending an end-state class to trigger the transition. Sweet.\n. This should be ready to merge. :)\n. Gulp-sass gets continually tested by Travis-CI every time we push a commit. It's a good gauge as to what version currently works. I'm thinking of locking it down once we get a green light from Travis.\n. Ah.. makes sense. Thanks I'll get that fixed.\n. Got a fix in the works.\n. Hmm, it looks like a deeper issue based on your screenshot. Can you show me the output of gulp? Some of the files seem like never compiled.\n. I don't believe the docs have live examples at the moment. Go to `http://localhost:8080/playground` to see all the components in action! :)\n. So, are you still having the same trouble? If you are, when gulp is done building, check the `build/assets/js` folder and see if there is a `routes.js` file. If it is, check it out inside and see if there is a `var foundationRoutes` in there with a long object definition.\n. Hmm, that's strange, removing `foundationRoutes` should make the application unusable. Are you on the latest commit? \n. @mikehuebner can you confirm if this is still an issue or not? Some things have changed in the codebase. If the problem still persists, I can try helping you troubleshoot it further.\n\nI'll go ahead and reopen this when you let me know.\n. Yay! =D\n. That last error means that you have another process running under port 8080. If you have WAMP or Ruby or any other server running on that port, shut it down. \n\nExit out of any Node processes as well and if you do, check your task manager (advanced view) to see if Node is still running. This can happen once in a while and used to be happen to me all the time on a Mac. \n\nIf you STILL can't make it work and still get the same error, check out this [stackoverflow question](http://stackoverflow.com/questions/48198/how-can-you-find-out-which-process-is-listening-on-a-port-on-windows) and scroll down to the Resource Monitor answer and run that. And again, check port 8080 for what could be blocking your Node process.\n. @ilanbiala can you clarify for me the following comment:\n\n> The issue is that bower_components hasn't been changed to public/lib in the gulpfile, once I changed that, 0 errors.\n\nwhere is `public/lib` coming from?\n. @jpdesigndev do you mean dynamically? It wouldn't scale plus it's no simple task hunting down all of the possible absolutely-positioned objects in the view to move it outside of the view while trying to make sure the view animations don't happen until all of the objects have been moved.\n\nNon-dynamically? (as in, actually just change the DOM so I don't have to deal with the problem) Yeah, that can be done but that's just avoiding a problem, plus it introduces a slew of other issues (like having to force users to declare off-canvas, panels, and other elements in their `index.html`).\n. No problem :)\n. that panel thing we talked about yesterday is exactly it!\n. yep, that'd work. I'll test it out.\n. Fixed\n. @gakimball I've written a pretty neat `animate` service that lives under the `foundationApi` (I might move it, not sure) but it has two methods:\n1. animate - which works VERY similarly to how our view animation works\n2. toggleAnimate - which works how our element animation works -> by toggling the active class\n\nI'm hoping to use these two methods to replace how animation works on the elements we discussed: panel, offcanvas, and notification. However, I can't append any extra animation information to these elements since these elements have built-in animation (`.panel.is-active` for instance). I'd love to get these out of the standard definition and into the service I've written.\n\nSo, for instance for panel, I could write in the directive definition that `slideFromLeft` (or wherever) is the default animation and to use toggleAnimation to activated it or deactivate it. If the user declares both `animationIn` and `animationOut`, we'd use that animation instead.\n\nWhat do you think?\n\n**EDIT** And we could add this logic to any element that uses foundationApi (most directives) and allow these options. It's a 4-5 liner in terms of directive logic.\n. @ilanbiala angular and the foundation structure to trigger animation. Plain JS and Angular's built-in features to add and remove CSS classes, do resets, and reflows. And finally, CSS transformations for the animation itself.\n. @gakimball this is pretty much ready to go. I'll fix the merge conflicts and we can get this into master! :)\n. @gakimball there are plenty of Node libraries that do very quick diffing. I can wire up some rudimentary unit test that will import the `gulp-sass` and `gulp-ruby-sass` stylesheets and see if they're equal. We can employ that. It'd be an interesting test to see what the differences between the libraries are. \n. @gakimball I got the test prototype setup, not sure how well it's working but I'll get it working. For now though, I'm going to push this off as a low priority?\n. @gakimball whoops, look like one place I forgot to change fa to zf. I'll  check the rest of the project.\n. @gakimball this is ready :)\n. The docs aren't functional yet. Clicking on a link that has a `href=\"#\"` causes that error. It'll be fixed once the docs are finished.\n. To explain what's happening here (and explain why the test is set to automatically pass):\n1. the two CSS files differ greatly. According to JsDiff, there are ~300 CSS rules that do not match. On top of that, libsass likes to list selectors in a single line while ruby-sass likes to list them vertically (one selector per line).\n2. Because I'm on windows, and libsass uses windows executable, line endings are Windows style (`^M` if you view it in VIM), this means that this is probably throwing off the diffing lib. For some reason, these line-endings are present only in comments.\n3. The diffing lib sometimes fails. I haven't found a library that could diff everything correctly. The JsDiff comes close by being able to do a `diffCss` rather than line-by-line or whatever else.\n\nI'd love to see if there is any work done on this elsewhere because it seems like a big problem if you have up to 300 mismatched CSS rules. (or they could be false positives).\n\nI'll be merging this in as is until a better solution is presented.\n. Dead links in the docs will do that. That will be fixed by v1 I believe. I made an off-shoot from the docs for testing and developing all of the components: http://localhost:8080/#!/playground if you go through there, you'll see the Angular components right at work. if you check out the corresponding raw files, you'll find the syntax to use. \n. @ilanbiala the `href=\"#\"` is there in order to have a regular link pointer. If it still goes through and messes up, there's something wrong in the way it's setup so that's a good thing to keep in mind. Is it still messing up somewhere?\n\n@goids the playground was deleted upon release. It was a place for me to rapidly develop and since everything is now in the docs, there was no need for it anymore.\n. What we can do is setting overlay to exist when `overlay-close` is set to true (no sense in allowing overlay-close if there's no overlay), and allow independent setting of the overlay with `overlay=\"true\"`\n. @zurbrandon problem, so I made the change but without the overlay, the modal doesn't show up correctly. Is there any other class I can substitute to make it work correctly?\n. @zurbrandon can you give me the proper markup for a modal? I think it's changed way too much since I originally wrote the directive.\n. @zurbrandon I have a (potential) fix in one of the other branches, hopefully it'll work! :)\n. @ilanbiala thanks for the catch. It looks like I left the scope.apply in the wrong place. It was supposed to be run after FoundationApi informs the tab that it needs to activate. It's required there because when FoundationApi triggers an update within a directive, AngularJS doesn't go through its regular digest cycle (no DOM changes happen).\n. This is a duplicate of #122.\n\n Some of the Docs aren't completely ready. This should be fixed in v1. Check out the playground: http://localhost:8080/#!/playground  It's a place where I test all of the Angular development and all of the directives work there.\n. Thanks for the catch! I'll get on it.\n. @josteinhanssen so I fixed the programming error; however, I haven't gotten to the styles.\n\nI'll have to leave in the skilled hands of @gakimball. There seem to be some IE CSS bugs. \n. @antjanus note to self: get this done. \n. Sure thing. If you check out the [angular readme](https://github.com/zurb/foundation-apps/blob/master/js/angular/README.md) for FA, you'll find some examples there. But here's how it works in a nutshell.\n\nYou have to have a parent view, let's call it `mail` and it'd have a declaration like so:\n\n``` html\n---\nname: mail\nurl: /mail\n---\n<h3>This is your mail!</h3>\n<div ng-class=\"[currentSlug, 'ui-animation']\" ui-view>\n</div>\n```\n\nThen you can have a child view. Let's say, it's out inbox:\n\n``` html\n---\nname: mail.inbox\nurl: /inbox\n---\n<h3> This is your inbox!</h3>\n```\n\nAnd that it's. It'll be now accessible via the composed url of `/mail/inbox`. To access inbox, you'd do a `<a href=\"#\" ui-sref=\"mail.inbox\">Inbox!</a>`, no matter where you're at, even if you're in the parent view. Ui-router may have a shorthand if you're accessing a child view, but stick to putting down the full name.\n\nDoes that make sense? \n\n**EDIT**\n\nThere are also other ways to create a child with a different naming scheme. Let me redo the `inbox` with it:\n\n``` html\n---\nname: inbox\nurl: /inbox\nparent: mail\n---\n```\n\nThis way, you can use ui-sref like so `ui-sref=\"inbox\"`. I could be wrong (I'm not near my code right now) but test it out! :)\n. Foundation for Apps is all Angular with nothing back-end falling into it so it should fit neatly into MEAN. Since, doesn't MEAN stand for: Mongo, Express, **Angular**, Node? All of the components are decoupled and have a single dependency necessary to function correctly, the FoundationApi service. You can also import the common directives module which houses some hookups for FoundationApi that you'd probably have to write yourself anyways (like a event handlers that open/close/toggle foundation components).\n\nThe ui router components of FA aren't necessary for any of the components to work; however, they are necessary to work with the templating system we created which is almost jekyll-like with front matter deciding routes, child/parent relationships, title, and animations. Along with that, there's an animation component which depends on this front matter templating. However, all of that is optional. And if you DO want to use it, you can still plug in most of that logic to any other Angular project; however, it WILL take some work.\n\nOutside of that, you're free to do whatever with it and should work with any Angular setup. \n\nAs far as MeteorJS/Blaze, I'm not aware of either of those playing well with Angular but I'm not well versed in using either technology. So, shortly said, it's the same deal as MEAN with the added complexity of \"does Angular at all work well with Meteor?\"\n. V1 is focused on Angular. It's the most proliferate MVC framework out there by far. It also fits the prototype paradigm really well. If you're venturing out beyond Angular, you should be able to port the interactions by yourself without a problem (it's easy to do with jQuery, easy with VanillaJS, should be simple enough with everything else); Angular is used to add a bunch of sugar on top for Angular devs and for designers that don't want to deal with programming but want better prototyping tools.\n\nRegular foundation includes a jQuery version.\n\nAs far as VanillaJS:\n1. the styling is already all there so you can create all of the components without interaction.\n2. most components are class-driven. Meaning that you just need to add a class for it to be enabled. For instance, to enable a modal, just add `is-active` to it. If you want to enable an accordion item, add `is-active` to it. This is pretty simple to do in Vanillajs.\n3. if you have jQuery, then you can rely on the jQuery version of the Foundation components.\n\nI think this is all pretty self-explanatory.\n\n**EDIT** As an FYI, I've no idea what's in store for FA for the future, just wanted to add my 2 cents.\n. @zimt28 no work has been done on it. \n. Awesome! Thanks! :)\n. I decided to add titles to all of the docs pages. I think it'd be worth the time to go through and figure out which docs pages need to be deleted.\n. Yep! Plus it'll force me to actually use the Docs over my playground! ;)\n. @jcs224 Please run Gulp and post the output, and run `npm install` before that if you haven't already.\n. Using relative templates runs into a lot of issues with HTML5Mode (which would then require a base). I guess anyone that uses HTML5mode (and turns it on), will have to figure out the `requireBase` thing.\n\nI'll go ahead and have the fix on master.\n. I just checked it. The `config.path` always comes out as a relative path for me in every instance. Console.log out the entire config (check the endstream and console log out `configs`) to see if the `path` is the issue.\n\nIf you're talking about the URLs themselves, the ui-router has a list of solutions for that: https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions#solution\n\nHowever, I'm not sure if that's the issue.\n. @mrsweaters could be a difference in the way the OS handles filesystems and it might not make a difference in the way the app works when it's in the root but it might in a subdirectory (I'm running Windows so I can't see how it behaves on OSX or Linux). Can you try to console log out the relativePath and the other variables just in case? I can go ahead and implement a cross-platform fix once I know what to look for.\n. Ah crap. @gakimball can you confirm this is still an issue? The thing with the double/single quotes is that IE, FF, AND Chrome parse this crap differently. I added some logic earlier today when FF started to fail again. I wonder if it got resolved.\n. I'm hoping my last fix attempt resolved this. I'm going to close this out until it comes up again.\n. @gakimball we can't have two config files loaded into the app though. Should we then keep the `js/angular/app.js` pristine and not even loaded while the `docs/assets/js/app.js` does all the work with the extra modules?\n\nNor can we add dependencies after the configuration.\n. @zurbrandon it seems to be a modal overlay issue. It has a `display:none` attached to it but it also has a `display:flex` which overrides the display none. Since it has a transition on it, it flashes in-n-out. It seems that the `display: flex` should be part of the `is-active` declaration.\n\nBecause otherwise, for some reason, it simply fades out to `opacity: 0`.\n\nI'm not sure if this is entirely correct but that seems to be what's currently happening. However, if we do add `display: flex` on `is-active`, the entire thing will not animate :/\n. @gakimball so I finished the directive animations so yes, this should work. The overlay uses the same custom animations logic with hard-coded fadeIn and fadeOut values. So, if you get rid of the transitions attached directly to the overlay, everything should work correctly! :)\n. no clue why I reopened this.\n. The path should be relative to the site itself. The contents of the docs get copied to build which is the root of the site (so, docs itself does not get copied). Try the URLs without `/Docs` and see if that works.\n. I made a fix in the docs and the interchange logic. All working now! :)\n. I actually have no way of closing it out. The scroll event doesn't bubble up so if the user scrolls any container within the window, the popup will stay there.\n\n And attaching a scroll event listener to every container in the window is impractical and would mess up performance.\n. Urgh. I've been struggling with that bug for a long time, thought I had it solved!\n\nThanks for the heads up. Do you know which FF version you're using?\n. Fixed anyways.\n. Fixed.\n. This is related to #156. The modal overlay does not have a `display: none` set to it when it's not active and it has a transition attached to it, that causes it (on modern browsers) to do a \"flash\" when it's loaded. On IE10, the overlay also registers click events which cause it to appear and disappear (flash).\n\n@gakimball can you implement the logic we discussed where `.modal-overlay` has a `display:none` and no transitions and then `is-active` adds the `display: flex`? That way my animation logic can fade it in using the regular `fadeIn` class and we can bypass all these problems?\n. I'll give this a shot. If it still doesn't work, we might want to consider rolling back to the original way we got all those styles with meta elements being added one by one.\n. FF is being ridiculous. It works fine if you:\n1. double parse it. Seriously. First time around, it becomes a proper \"string\", second time around, it's an object\n2. eval it and then parse it. Same result. Wtf?\n. Fixed it -.- logic looks way better now too. Yay.\n. @cvrebert those are all good points. Currently, the branch I just merged in will change focus to the modal but not back. This is because there may be numerous originating elements and there is currently no implementation to send the origin element to the modal in order to send the focus back.\n\nI'd like to definitely get that on the way though.\n. hmm.. I'm not entirely sure how to prevent that. ideas?\n. I'll check out their code. Thanks for the tip!\n. Phew, so this is becoming more difficult than I thought. Just some notes to myself:\n1. when a tether is activated, it's moved outside of the view and attached to the body. When a view changes and comes back, it's still present and the view creates a second copy\n2. destroying the tether when view changes works; however, if one does not change the view, the tether destruction is irreversible and creates errors (**edit** nvr mind, it doesn't actually destroy it, wtf).\n3. unless there is a dependency on $state or a similar service, there's no way to distinguish between a view change and hiding the element regularly.\n. @gakimball I fixed 2/3rd of the commands so that most of them _should_ work now. The problem is on the Node side (or perhaps Windows side?) where `exec` only runs executables, not scripts or whatever else. For some reason npm works with `npm.cmd` and bower works with `bower.cmd`. However, I couldn't get `bundle` to work at all. I'm not a 100% sure why.\n\nI noticed that the `gulp-ruby-sass` package uses [win spawn](https://www.npmjs.org/package/win-spawn) which allows for cross-platform exec and spawn. I'll give regular spawn a shot as it might work better.\n. I changed a few things around. As long as bundler and ruby are installed correctly, the cli should work right (note that it hasn't been tagged and released yet). I changed a few things around, implemented a few fixes from `win spawn` and successfully installed several apps (just to make sure it works!).\n\n@jsmreese I'm running a similar setup (jruby 1.7.15, Sass 3.4.7 and I'm on Windows 8, best windows there is). Sass was installed via bundler (the gulpfile specifies `bundleExec` on the command too). I wonder if _that_ makes a difference?\n. @gakimball The bundler thing is weird since the method I used should have covered every case. It literally uses a secondary process to run a command. Should've been foolproof, It's what ruby-sass uses to run their command so I'm pretty surprised it doesn't work! O.O I can try to integrate the `win-spawn` package that has a more robust cross-platform solution. I can't test it for others though so it'd be a hit/miss situation.\n\n@narration I have Windows 8.1 64-bit just as you do. The weird thing is, I _tried_ `bundle.bat` and it failed that's why I resorted to the solution I have which really should have been a slam dunk, a last resort that _should_ work no matter what. This discrepancy among the same operating systems sucks. Can't imagine why.\n\nOut of curiosity what version of Ruby are you using?\n. @FlatspinZA thanks for posting that! \n. @narration using a table of possibilities could end with a lot of issues. However, I retested your solution this morning and it seems to work. Not sure why it didn't work me earlier. Definitely much simpler than my solution. \n\nAlso, much to my displeasure, it looks like I never published the bundler fix in the first place -.- >.<\n\nEverything is updated now and working.\n. :+1: \n. @JeroenNoten one thing about using the `application` module is that it doesn't work well with other angular apps. It sets routing so that would most likely break your existing app. Thus the name `application`, as a standalone app. I did open an issue for possibly transforming it into a dependency.\n\nIt's much better to take the application dependencies and import everything module by module (or whatever you'd use) rather than trying to integrate the entire structure. That would make more sense to me. Most of them have internal dependencies set so you'd know what you need to import in order to make it work.\n\nThe only exceptions are `foundation.common.directives` module which has all the directive helpers (`zf-close`, `zf-open`, etc.), and the `foundation.init` module which is required by Interchange (you'll have to check the `app.js` to see how it's used there) for media query extraction and resize event listener\n. I'm going to close this out to continue the discussion in #223 \n. Try doing a manual `npm install`\n. @stryju there are some issues with your code:\n1. there are numerous comments and JSHint declarations that currently do not match the code style of the rest of the application. \n2. you're also using function declarations instead of function expressions. I will eventually move the codebase to function declarations in self-invoking blocks (as per certain AngularJS style guides) but until then, I'd like to keep everything coherent\n3. there's also the case of `this` vs `$scope`. I'm not a fan of using `this` at all in JS since it changes context so fluidly. [SO](http://stackoverflow.com/questions/11605917/this-vs-scope-in-angularjs-controllers) has a good discussion on the $scope. vs this topic, but overall, using `this` is dangerous. \n4. Lastly, the NavController is unrelated to the dynamic routing. In fact, I moved it straight to the actual docs app and outside of the rest of FAs stuff. It's used to generate `autocomplete` for the docs and nothing else. That's why it binds a bunch of stuff to the $scope directly.\n. @stryju the idea is sound and lends extra functionality to AngularJS devs. I like that a lot though I imagine that Angular devs would rather use their own routing rather than use FAs dynamic routing; however, I'd like to add this to the app!\n\nThanks for all the work!\n. @stryju you make a good case for the usage of `this`. I just opened an issue #262 to discuss style guidelines. Once that is in order (and I get the go ahead), I'll start refactoring everything.\n\nAs far as the usage of `this`, I'll go one step further to embrace what the style guides recommend: assigning `this` to a variable in order to prevent context-switching `this`. That would definitely solve the issues I could see propping up while solving the issues you're discussing as well.\n\nIf you can go ahead and refactor your branch to follow the _current_ guide lines and make it mergeable, I can go ahead and merge it in. Let me know if that's cool with you.\n. use $scope for now until the refactor and discussion on guidelines take place.\n. @codymorgan if you use the framework, you can specify a title per view (you'll have to add some logic, check out the docs). It looks like in this case, the different child views were not given separate titles, that's all.\n\nThe history is an intended effect so you can go back through your browsing history of the app.\n. Hmmm, not that I'm aware of. It should be the equivalent of clicking on a link and going to a different page on a static website.\n. Seems to be an error that only props up with non-functioning URLs that don't use the regular `ui-sref` but instead link to nowhere `href=\"#\"`. This causes a JS error (as it should) and will not cause any issues in production. The 2 history states are probably, one to an invalid state and one back to a valid state.\n. @gakimball the template files should be separate 90% of the time. The only exception is for templates that are (literally) one-liners that can be easily read. I'm wary of inlining some and not others. The ones I've inlined so far are usually placeholder templates (like `<div></div>`).\n\n@BraunreutherA I opened an issue to discuss the practices. It may make more sense to have a folder based separation so that `/accordion` has the HTML templates and the JS file together. It'll be easier to import.\n. @davidgeary right, the `app.js` is more of an example. The original point was to have people import everything module-by-module and use `app.js` as a reference on how to initialize everything.\n\nAs far as the folder structure, are you suggesting something like `/zf-components/` with all of the components in there? So `/zf-components/panel` and `/zf-components/interchange`?\n. @kathyqian this should already be implemented. Can you double-check it on your device?\n. There's a Utils factory in https://github.com/zurb/foundation-apps/blob/master/js/angular/common/common.services.js#L120 which holds a throttle. Check FoundationApi for getSettings (https://github.com/zurb/foundation-apps/blob/master/js/angular/common/common.services.js#L29) which will return a list of settings, including the queries.\n. since this is a ruby gem issue and not an issue with FA, I'll go ahead and close this out. If you still need help, you can go ahead and still comment. I know that things are a bit confusing with Ruby on Windows.\n. The router DOES allow named views. I'll definitely look into using that for this applicaiton.\n. @davidkpiano I'll go ahead and use your solution since the dynamic router is currently not setup to support named views on the root template\n. Open up `localhost:8080` and see what shows up. The error basically means that another process is running at the same port. Whether it's a Node process or otherwise. I know that, for instance, Skype runs on port 80 on Windows, and WAMP and sometimes MAMP run on 8080 which would create a conflict.\n\nIf you're on a Mac, go to your activity manager (I think that's what it's called) and search for Node. Kill all that process and try again.\n. This is an unrelated error the to the one in the issue.\n\n Try running `npm install` in the directory. And try to do an `npm install -g gulp` as well to make sure you have gulp installed.\n. @circlingthesun I'm not sure about the value, BUT, it is VERY easy to trigger a modal. And, in fact, you can trigger 90% of the components out of the box. How? `FoundationApi`.\n\nIf you're using a controller, include `FoundationApi` as a dependency (and let's say, name it `fa`). And then just do this:\n\n`fa.publish('id-of-my-modal', 'show')`  and it will show up immediately. If you want to hook into the process, just add another subscriber:\n\n`fa.subscribe('id-of-my-modal', function(msg) { console.log(msg); });` and whenever someone sends a message to the modal (to open it or otherwise), your function will be run as well.\n. @maxcook this is a bug, not something you should have to worry about, you're right.\n. @ilanbiala can you be more specific?\n\n The only errors I've seen are related to the use of `href=\"#\"` which will not show up once the sample apps are implemented into your application.\n. Are you running your application in a subfolder on your app server? That may cause the issue. There are some workarounds for that in order for Angular to know to look into a subfolder rather than root. Might be worth looking into.\n. I implemented all of the features on #300. \n. @akiran have you tested that it still works as an element?\n. @akiran I'll have to change the snippet itself. This directive does not play well with element-style declarations because of its controller and require structure.\n\nIn fact, doing attribute-only or element-only structures work; however, mix and matching will produce errors (so `zf-action-sheet` with a child of `div zf-as-button`. I'd rather stick to one that works than both and have users open up issues that seem to be directly with Angular rather than with FA.\n\nWhat do you think?\n. What I meant was that AngularJS is pretty moody. If you create an entire declaration in elements, it works. If you create it in attributes, it works. You can test it out with the Action Sheet.\n\nTry to use your fix and create one which mix/matches the element/attribute declaration (not restriction, but the actual markup you put on your site) like s;\n\n``` html\n<a href=\"#\" zf-toggle=\"my-actionsheet\">toggle</a>\n<div zf-action-sheet id=\"my-actionsheet\">\n<zf-as-button>my button goes here</zf-as-button>\n<zf-as-content position=\"bottom\">\nMy content goes here\n</zf-as-content>\n</div>\n```\n\nIt immediately fails for some reason, can't figure out why.\n\nAs far as long-term, not sure what I'll decide to do.\n. @stryju right, the problem is the different ways to declare elements. Some people don't feel comfortable creating an `Element` over an `Attribute`. It would make sense to me that both would work the same way but when you mix them, they don't.\n. @akiran i kept running into issues but I'll give it another shot tomorrow. It has happened more than I'd like to admit where something didn't work, and the next day, there were no issues at all.\n. Well, what do you know, it works. I'll go ahead and merge this in! :)\n. ha! Good catch.\n. That happens when a link points to `href=\"#\"` without an event listener to stop its default action. Can you tell me what you clicked on to get this error?\n. Check out the controller code. It stores front matter vars in `scope.vars`. Go ahead and apply the same logic to your own controller. \n. @gakimball I changed a few things around so that the regular JS dependencies (tether, fastclick, etc.) get compiled into `dependencies.js` while all the angular stuff + the `app.js` get compiled to `app.js`. \n\nI'm wanting to do the same thing on this repo (i already did it on the templates). What do you think?\n. Everything should work now.\n. Fixed via #302 \n\nIt currently checks that the click originated from an element that has an `href`. That would make much more sense.\n. Finally fix.\n. Very good to know. I was about to upgrade too. I'm using 1.7.15 as well.\n. @stryju @davidgeary @gakimball I got the initial new structure in place. I was wondering if I could get some feedback! Here are some things:\n1. all components are now in `components/` separated by folder according to what they are.\n2. routing is now separated into `foundation.dynamicRouting` and `foundation.dynamicRouting.animations`. Adding `foundation.dynamicRouting` as a dependency automatically runs the correct initializations. It also contains the `DefaultController` which is used by the dynamicRouting module. \n3. all the components can be imported via `foundation.components` (without importing dynamicRouting).\n4. `foundation.interchange` configuration is now run from the module and does not have to be manually run outside of there.\n5. Everything should be MUCH easier to run and use.\n\nI'll continue with the rest of the changes but would love to get the new structure in place first.\n. One more note, I'm pretty set on the naming scheme which is a combination of namespacing and camelCase. So, for instance, `foundation` is our main namespace. All of our components go under `foundation.components`. \n\nI'm thinking of breaking apart the components and placing them under that naming scheme so there'd be a `foundation.components.accordion`, `foundation.components.common` (for `zf-toggle`, etc.), `foundation.components.modal`. I'm not sure if that's better or using the easier namespacing with `foundation.modal`, `foundation.accordion`, etc.\n\nDynamic routing is under `foundation.dynamicRouting`, which makes sense and its additional animation module can be imported with another `foundation.dynamicRouting.animations`. Though, again, I'm wondering if `dynamicRouting` should be the main import and then split up the rest into `foundation.dynamicRouting.init` (or `.main`) and `foundation.dynamicRouting.animations`. I can see lots of situations where animations would not be necessary. I like that it's camelCase since `foundation.dynamic.routing` just doesn't make sense.\n\nI'd love some feedback on this too.\n. I think I'll make it part of the `foundation.services` module which includes the FoundationApi which houses `globalSettings` that interchange uses to access the media queries and that others can use as well.\n. Urgh, I'm afraid to merge master into this\n. @stryju you're right! I'll go ahead and add that.\n. no, no, the other way, just to resolve conflicts. With all the bug-fixes I've done since I started this branch, I'm a little afraid! :)\n. Urgh, so I am _not_ looking forward to fast forwarding this. it'll probably involve a lot of copy-pasting, and figuring out conflicts. But anyways, other than the require part, this is ready to go.\n. @gakimball how should we proceed with this? We can release this today or with the a future version bump. I'd prefer the latter since there may be some Gulp change this will require\n. Andddd this is ready to go. The only part that I have skimmed on was the `require` part which I feel like is not 100% necessary.\n\nI'd like to merge this in ASAP to master so that any subsequent PRs won't interfere with it!\n\nThanks everyone for all the help!\n. @stryju we'll be releasing a bump this or next week. Next week most likely.\n. @japhar81 I'm not sure why you'd get the error. Have you tried tracking it down the stack? I'll look at it sometime tomorrow or this upcoming week and will let you know what I come up with.\n. Strange. Maybe @gakimball can shed some light on this as well. It seems to work correctly on Firefox and when I inspected this step-by-step, there is only ONE element. It seems like Chrome keeps a second rendered copy for some reason, that's not present in the DOM.\n\nI tested this out several times and at certain times, I had only half the element showing (the one in place, not the animating one), and sometimes it worked just as expected.\n. I think a `-webkit-backface-visibility: hidden;` added to the animation elements (and possibly the parent) will fix the problem.\n. @wtfribley can you tell me which ones you experience this behavior with? Perhaps I can translate the class from the initial directive declaration to a more suitable target element\n\n@gakimball where do you see that? I might have fixed this bug with refactor because the overlays don't appear for me in the examples. (except where they should)\n. @gakimball if you remember, setting `overlay-close` automatically overrides `overlay=\"false\"` so that the overlay show ups. I can change that if you want.\n\n@wtfribley thanks! I'll get that taken care of.\n. @gakimball sounds good! \n. @gakimball the built-in animation is `fadeIn` and `fadeOut`. If it slides, that means that there is an animation defined directly on the `notification` element. And indeed, there is a transition: transform on it and translation. We'd need to cut that out, and it should work as intended! :)\n. sounds good!\n. @gakimball we're using this class, hardcoded, as part of all the directives. Since we `globalSettings` is available via the FoundationApi, perhaps we can use it to specify custom active classes on the front-end, too.\n. @gakimball sure thing\n. @gakimball I keep getting an error when running Gulp:\n\n`Error: app.scss:1:1: Unclosed block`\n. I was going to open the same issue this morning! :) Glad to see others thinking along the same lines.\n. Does the panel itself flash or are you talking about the how the scrollbar shows up on the side?\n\nI'm on Ubuntu 14.04 Chrome 38 and couldn't replicate the issue (might be the version bump).\n. @gakimball I was thinking of modifying the animation method in FoundationApi (how our various elements animated) to add an `animating` class or similar. Would it make sense so that we can prevent issues like this?\n\nFor instance, we could do:\n\n``` css\n.animating {\n  overflow: hidden;\n}\n```\n. Urgh, so it turns out it's not a panel issue. There's something about the animation that makes the `grid-block` several parents up get a scroll bar. Removing the `relative` declaration on grid-block fixes this problem; however, I'm not sure how that would play out with the rest of the CSS so I can't foresee a solution to this.\n. Right right, that makes sense. So what would you propose as a solution?\n. @akiran I'd like to merge your PR in; however, it looks like we merged in some changes that makes yours unmergeable. Can you make the proper changes to make it mergeable? I'll go ahead and merge it in then.\n. sounds good!\n. @akiran there's a pull request #282 that I'll be merging in this week (as soon as possible). It'll do all kinds of cool stuff. One of the major changes is changing the root module's name.\n. I'm working on a refactor #282 that will package most of foundation configurations and dependencies into a module called `foundation` that you can include and it'll already set a bunch of stuff up for you. There's also `foundation.dynamicRoutes` and `foundation.dynamicRoutes.animation` and those are for the dynamic routing.\n\nWhen working on your own project, just include these dependencies as well as their dependencies just like you listed. You'll also need to setup your $locationProvider; however, all of these settings are trivial to create and should not be dependent on FA, if that makes sense. So any changes to your `app.js` will come from you while any changes to configuration, directives, directive templates, etc. will come from the FA repository/package.\n\nDoes that make sense? \n. @micjamking the CLI tool is not necessary for this process. You can do exactly what you said, and use Gulp or other build tool to pull in all the necessary files and include them.\n. Since Foundation became a module in itself, this topic is a little moot. Closing it out.\n. Not a JS error, we literally have two modals with the same name and markup. One of them has an overlay, the other doesn't. So both get activated and then on-click, the only one of them turns off. On a secondary close, they both try to \"animate out\".\n. @gakimball seems like Windows has issues with it. Whenever I git clone it, it comes back with `Docs` only while my regular repo has `docs` and will pull all changes there.\n. Nvr mind Fixed.\n\nWe really need to avoid having this happen again because it essentially overwrites the history of `docs` each time.\n. Well, that's why there is vanilla [Foundation](https://github.com/zurb/foundation) that you can use purely for the styling. It's just about the same when it comes to markup and the way it looks. Durandal even mentions the integration.\n\nHowever, when Bower installing FA, you can still just compile the CSS and work with that. FA is supposed to be a full-package: CSS + JS, not one or the other even though it _can_ be used that way too.\n. @stryju thanks for looking through it. `ngAnimate` is used in the `foundation.dynamicRouting.animations` in the form of an animation. And even then, I use ngAnimate-like logic within the animation. There are several reasons for that and if you can think of a way to avoid using it this way, I'm all ears:\n1. in the `.ui-animation`, we're using animation information that's contained in the scope via the `DefaultController`. The animation information is dynamic since it comes from the templates and is injected at runtime into the router as view information. Because of this, I had issues setting up an animation using regular classes. Instead, the `ui-animation` animation replicates the ng animate behavior. And unfortunately, using `ng-class` would trigger the wrong transition as the class would not be immediately rendered and thus cause a \"flash\". \n2. the reason for the `animate` service in FoundationApi is pretty much the same except that it's used within directives. The reason for that is two-fold. One is that we use an `is-active` class for non-animated toggling, this class is necessary and there seems to be no way to time the correct addition/removal of the class using `ngAnimate` and the second is that we activate the directives at various times in the runtime. Meaning that it's not a simple animation that shows up whenever the directive is rendered.\n\nDoes that make sense?\n. @stryju yeah, go ahead and setup a feature branch and I'd be more than happy to discuss it and find the right solution. There are some issues I see with `$animate`. It seems like all it does is add a class and nothing else. But I could be wrong. The documentation is a little fuzzy to me on that.\n. @stryju The cut off is there to prevent any animation misfires from keeping the element in place. IIRC, Angular sets this to 10000ms. I can go ahead and increase the timeout.\n. There was also another reason for custom animations and that was the addition of a class to absolutely position the transitioning views. \n. Hmm.. I'm not sure of the benefit here. While we'd save on JS, we'd end up having to write twice as much CSS just to accommodate this new style of animations. \n\nI do like how much JS it saves and offloads the animation logic back to Angular. Idk. I feel like I'm on the fence with this. It _seems_ like the right solution for the obvious use-case (views, and we could make this work for the various directives as well) but we wouldn't be able to make this work for regular ng-enter/enter-active and ng-leave/leave-active use-cases.\n\nIdk, I'd like a third/fourth opinion on this. \n\n@jeaniec @gakimball what do you think of this?\n\nTo summarize:\n1. we'd replace all of my custom animation logic (that's almost just like Angular's animation logic) with Angular's built-in `$animate` service, this would offload our logic back to Angular.\n2. The change would require changing all of the MotionUI classes to work with `.[animation]-add` and `.[animation]-add-active`.\n3. We would either have to double up our CSS to work with `.ng-enter` and `.ng-leave` or drop those altogether. This would mean, built-in animation support for `ng-if`, `ng-repeat`, etc. would be dropped as well.\n\nThe change in JS is trivial to make (at least by the looks of it).\n. @stryju I'm not sure what you mean by those two bulletpoints. Can you elaborate? And what do you mean by \"hacky\" states transition? \n\nI understand your point, unfortunately Angular doesn't have an easy way of specifying custom enter/leave classes, otherwise we could emulate `ng-enter` and `ng-leave` just like in my original code. Without it, we'd have to double up our work in the CSS instead of JS. And since our JS does almost the same thing that Angular does (with WAY less code), we wouldn't lose much on that side. \n\n@gakimball suggested that we can just extend the selectors. If that works, I'll go ahead and test all this out. That could benefit all of us :)\n. @stryju a `zf-view` was part of my original solution but what we had then didn't work with it. Go for it and make sure to submit a PR so I can easily pull that in and test it out as well.\n\nI'll go ahead and use your example to test out the new SASS class-system that Geoff is working on and see if we can make THAT change without affecting much of anything else.\n. @gakimball will do!\n. @stryju go ahead and submit this as a PR so we can comment and discuss the code straight on there. \n\nOther than that and some code stylistic changes, this looks mighty impressive. If it works as you describe, I'd love to get this merged in. \n. sweet! Thanks!\n. @stryju it's always on the list. I totally agree. \n. If you look through the code, you'll notice that whenever I inject `FoundationApi`, I inject as `foundationApi`; however, to avoid confusion, I'll go ahead and merge your PR. It makes more sense that way in an example! :)\n. The `zf-as-button` directive _has_ to be inside the `zf-action-sheet` directive. It's not a separate directive but rather a part of the `zf-action-sheet` directive. Hope that makes sense.\n\nHowever, you _can_ use your `zf-hard-toggle` the way you're using it. In that case, the `zf-as-button` directive is superfluous..\n. It's because actionsheet is currently not \"closeable\". I'll go ahead and get that fixed up.\n. Good catch. I'm submitting a fix.\n. Fixed\n. @akiran good point!\n. @akiran good catch on this!\n. @stryju I'm liking this. Once we make the CSS changes, I'd like to get this launched for v1.1 and then start work on getting this working with the various directives.\n. oh, awesome\n. @stryju so I'm having some issues with this, same ones I had when I initially worked on the animations.\n\nHere are some things:\n1. the animations experience a flash when loading up. Meaning that the element shows up, disappears, and then animates in.\n2. the \"out\" animation sometimes works and sometimes doesn't. It looks like it stops working if the other view is not animating. It also simply cuts short for no reason.\n\nHowever, I do like the fact that we got rid of the whole-page animations that used to happen whenever you'd load up the page.\n. @stryju can you tell me what your testing setup was? I simply added `animationIn: fadeIn` and `animationOut: fadeOut` to a couple of the pages and switched between them, that was it.\n. You can go ahead and remove them. Try running in these on the docs and you'll see what I mean. I wonder why it works in your example and why it would fail on the Docs.\n. Damn, this is bizarre.\n. merge in our newest master and comment out the prefixer, that should solve your problem for the time being.\n. go to any of the page templates (like `angular.html` or `motionui.html`) and add the animations to the front matter. Open up the docs, and switch between those two pages. \n\nBtw, @stryju I'm wondering about using these animations on directives. I had this idea to do the following:\n1. use `ng-if` on all the directives instead of the `is-active` classes. This would ensure that elements _can_ be animated if they have animation-enabled classes attached to those elements.\n2. add `animation-in` and `animation-out` classes to the directive. Since they only get triggered when `ng-[leave/enter]` is added, they won't wreck havoc. \n\nThis would make sure that the regular ngAnimate module would animate everything without our help. What do you think?\n. @stryju let's leave the component animation for later. We can convert those for the next version after 1.1. I'd like to get these view animations fully ready. They seem to be 99% there, except for the issues on Chrome on Windows.\n. I don't understand. So if the entire page is not animating, the view animation breaks? Or are there specific elements that mess up the view animation?\n. @stryju hmm. The animation does seem to stop working for the text element. I'm still having problems with the animations not working when switching to a non-animated view. \n\n@gakimball I had some success with the solutions we came up with for #283. \n\nI'm thinking that this change might not make it to the next version because of these issues.\n. In that case, we'll need to add the `position-absolute` class to the parent until the view that's entering is done entering. But that's a good point, I didn't think about that, thanks.\n. Right. So that's a good thing. I'd rather not deal with that. \n. @stryju I'm gonna go ahead and pull this locally and try to do some work on it. I'm not sure how I can work on this collaboratively since this is off your repo but I'll give it a shot.\n\nJust some notes and todos:\n- [ ] absolute positioning of parents\n- [ ] backface visibility in animation\n- [ ] testing on various browsers\n- [ ] move absolute positioning to utilities (this is my fault, I've no idea why i didn't move it)\n. That's what I'll do! :) I've no idea if I'll have to open up a PR for it on your project or what. This stuff is pretty confusing.\n\nI guess we'll deal with that as we go.\n. Good idea on that. There's somewhat of a rift between the element usage since we want to support both developers that don't know Angular well but want to use the more dynamic features like modals, notifications, etc. and developers that already know Angular want more power-user features.\n\nFeatures for the latter type of a user are definitely lacking because, as you said, pretty much all the components should have services that create them and don't require in-template directives. If I have time, I'll go ahead and prototype a modal service that we can also port to other components.\n. Modal factory is now available in the code under, you guessed it, `ModalFactory`\n. wohoo! :) :+1: \n. @akiran I'm working on a method to queue animations, that would allow us to send a message to toggle an element but it won't toggle until an animation is done. \n. If you pressed toggle mid-animation, the animation would finish before it toggles back out. I think that'd be desired behavior.\n\nThere's also something else I thought about, and that's running `$scope.apply()` BEFORE the animation is run. I wonder if that'd make a difference since it seems that the issue is that the wrong animation gets run and when it finishes, the wrong state gets applied.\n\n**EDIT** Makes no difference.\n. @akiran makes sense. I think that long-term, I'll have to implement angular's built-in animations. That's being done as part of #330. I think for v1.1, I'll go ahead and use the queue work-around.\n. Fixed with #341\n. #388 fixed this! :)\n. O.O I got the animation cancellation working. This should fix a bunch of issues.\n. @akiran can you test this out and see if this fixes the animation problems and works as you would expect? It works for me but I wanted to make sure before I merge it in! :)\n. As long as you use the Iconic directive, it should work as described. Are your icons showing up when they're not dynamically injected?\n. Hmm.. that's an interesting use case. I'll open up a PR for Iconic to allow dynamic injection.\n. Look out for another this weekend! Thank you! :)\n. Foundation 5 and Foundation for Apps have a difference codebase. If you check out the `scss/helpers/_breakpoints.scss`, you'll notice that on line 166 that we'll eventually have those breakpoints implemented.\n\n@gakimball can shed some light as to when (and if) that will happen.\n. The CLI actually pulls in a copy of the [Foundation for Apps Template](https://github.com/zurb/foundation-apps-template) which has a bower file that gets installed. By default, it pulls in v1.0.0. You can change this to pull in specifically the latest version by copy/pasting the zip-file download link: https://github.com/zurb/foundation-apps/archive/master.zip <- note that this is not the preferred way of doing things and bower will NOT cache this file (whenever bower installs dependencies it saves them in case another project will need them or you need to reinstall).\n\nYou can go ahead and use this method. There _were_ some file structure changes since the last version update so make sure to update your Gulpfile with what's in the v1.1 branch of FA Template repo: https://github.com/zurb/foundation-apps-template/pull/15/files Also, if you're not using your own custom `app.js`, take a look at the one in that branch.\n\nHope this helps! Again, it's not the preferred way of doing things (we'll be coming out with a new version soon) but you can get up to speed that way.\n. I did a huge refactor last week that allows for FA to be used as a dependency to your own application. That would probably fix some of your issues.\n\nHowever, can you provide us with your controller definition and the error you're getting? There might be something else you're missing or that I may help you with. Also, are you using your own custom `app.js` that defines the entire application or are you using what's in bower_components?\n. Hmm. it worked for me.\n\nAre you sure it's being loaded after Foundation? And does everything else from Foundation work for you?\n. You shouldn't need to put it in app.js as long as your controllers file is loaded after Foundation and Angular (which seems to be the case). :/ Hmm.\n\nCan you by chance put this up on Plunkr or a git repo?\n. So I got it. The `controller.js` file doesn't get included anywhere nor does it get compiled down. Go to your Gulpfile line 43, and change `client/assets/js/app.js` to `client/assets/js/*.js`. I tested it and it fixed the problem.\n\nMake sure you reload your gulp process and don't forget to post back when it works! :)\n. Also, thank you for posting the repo up, debugging was _much_ easier that way.\n. Just keep the `*.js` in there :)\n. @thylo I encountered a bunch of bugs with the notification not responding. I'll have to look into creating a more permanent solution. \n\nCan you give me an example of how you used this in a way that created the original error? Because I can't seem to recreate it at any point.\n. @thylo thanks. So, I'd like to propose two other possible solutions:\n\n``` js\nif(!scope.$$phase) $scope.$apply();\n```\n\nor\n\n``` js\nscope.$apply(controller.addNotification(msg))\n```\n\nCan you try either of these and see if they work for you? If they do, just change the code to work with _one_ of these (I'd prefer the bottom solution) and I'll go ahead and merge it in.\n\nThanks for your help with solving this issue! :)\n. @maxcook I wasn't aware of any issues there. Can you open a new issue and describe the problem? \n. @akiran I don't understand. You're using the `src` attribute to be applied to `data-src` but in your example you're only using `data-src`.\n\n Either way, I think it'd make sense to have a `dyn-src` that you can send a variable to without having to use `{{ }}` inside an attribute (something I'm not a fan of). But to make sure we can cover as many developers as possible, I'd like to have both. \n\nCan you change the file to not delete the `dyn-src` but keep your fix as well?\n. I would NOT recommend running Gulp in a production environment. Gulp and even a Node process can crash without being restarted because of all kinds of different errors. Instead, if you want to run a Node process, use `forever` and build your own `app.js` to run a static server (because that's all you really need). There are some other configurations you'll need to figure out (such as if you'll run `forever` on port 80, or use Apache/Nginx to point to the forever process port).\n\nWhen you upload the files to your server, running Gulp once should setup all the production files (the `/build` folder).\n\nHowever, you can make your life much easier by running any kind of a basic static server such as with Apache or Nginx and just run everything static, pre-build the files locally and FTP it up. Or install Node and build files after deployment. \n\nThere's really not a need for anything outside of static file serving.\n. @LuminusDev not a bad idea. Would you mind writing out some docs on this process [here](https://github.com/zurb/foundation-apps/blob/master/docs/templates/angular.html#L327)? I think a lot of users would appreciate it. If you can't, I can go ahead and write it out. \n. That basically means that another Node processing is running or another application is using the port `8080`. See if you have WAMP or similar running on your machine and turn it off. If not, check the Gulpfile JS and see if you can change the NodeJS port from `8080` to something else (`3000` is a standard)\n. Hey guys, can you show me the entire controller or whatever that you used to run this? It's possible it wasn't injected properly. Also, does anything else run for you? Popups? etc?\n\nFoundationApi is a service part of the `foundation.core` module which is included in the `foundation` module. It includes a pub/sub system that ties all of the foundation components together. It has to be injected into something else to use it (like a controller or your own custom directive).\n\n@vincentmorneau \nAs far as the link you sent over, I didn't experience any of those issues when I went to it. Can you give me your OS and Chrome version? Thanks!\n. @vincentmorneau FoundationApi is not globally available. It's a service that has to be injected into an angular module to be used so it cannot be run globally the way you did in the console. This is part of AngularJS basics.\n\nCheck out, for instance, the modal component and its `modal.js`: https://github.com/zurb/foundation-apps/blob/master/js/angular/components/modal/modal.js\n\n``` js\n  angular.module('foundation.modal', ['foundation.core'])\n    .directive('zfModal', modalDirective);\n\n  modalDirective.$inject = ['FoundationApi'];\n\n  function modalDirective(foundationApi) {\n   //directive code\n  }\n```\n\nThe modal module itself requires the `foundation.core` which includes our FoundationApi service. Then the FoundationApi is injected into our directive. This could be rewritten in a more familiar form as:\n\n``` js\nangular.module('foundation.modal', ['foundation.core'])\n  .directive('zfModal', ['FoundationApi', function(foundationApi) {\n     //directive code\n  }]);\n```\n\nYou can create a new directive or trigger a modal opening (or whatever action) via a controller or another different programmatic way but it has to be through AngularJS conventions so that it gets injected and properly used.\n. @vincentmorneau have you had a chance to look over what I wrote and try it out?\n. @vincentmorneau yes, there is a way to launch a modal page and just about every other FA component programmatically.\n\nUnfortunately, it _does_ require more thorough AngularJS knowledge especially of controllers. I wrote a [beginner's guide to angular](http://antjanus.com/blog/web-development-tutorials/front-end-development/comprehensive-beginner-guide-angularjs/) last year that can give you a quick crash-course to everything Angular. That may help you out.\n\nHere's a sample controller that may do what you're thinking of and once you grasp the basics of Angular, you'll have an easier time understanding what's going on and figuring out better ways of opening modals, etc. :\n\n``` js\nangular.module('application')\n   .controller('MyController', ['FoundationApi', function(FoundationApi) {\n     this.openModal = function() {\n      FoundationApi.publish('my-modal-id', 'show');\n    };\n}]);\n```\n\nand with accompanying HTML:\n\n``` html\n<div ng-controller=\"MyController as myCtrl\">\n   <a href=\"#\" ng-click=\"myCtrl.openModal()\">open modal</a>\n</div>\n```\n\nSince this is no longer an issue on a bug, I'll go ahead and close this out but feel free to comment on the issues with any further questions.\n. huh, didn't realize. Thanks!\n. @akiran I can take care of that part.\n. Hmm, I'll look into it further. Thanks for researching this issue.\n. Can anyone test if this issue is still there? I'm 99% sure I already applied a fix. \n. Not a bad idea. How would you want to structure it? As a separate service maybe? `foundation.interchange.service` that'd be required by `foundation.interchange` by default but could be used separately?\n\nI don't think I'd want to bundle it into FoundationApi (that one has quickly become a bloated service).\n. If you can put together a PR, that'd be fantastic. We can further discuss it there and refine it. \n. @nathanmarks yep! There are several reasons:\n1. This is how it works in Foundation, and the original implementation was a _bitch_ to port over.\n2. I had _just_ found out about this feature\n3. By the time I ported it over, I found out about the listeners portion\n4. I told myself, \"I'll definitely rewrite it and use these fancy listeners!\" but forgot.\n\n:) In short, yeah, this is definitely on a list somewhere and thank you for mentioning it!\n\n_edit:_ There was also the the problem of picking only the last available selector in the list so that if you write down:\n\n```\n<div media=\"default\"></div>\n<div media=\"small\"></div>\n<div media=\"large\"></div>\n```\n\nThe last matching one on the list would show. Because of the mobile-first approach, all 3 of those would match a full-sized window but only `large` _should_ show; however, the re-evaluation of what I called \"scenarios\" in the code, could be done every time `matchMedia` fires one of the listeners.\n. I'd love to see your code! I'm about to merge some refactors in, nothing major but it separates the Media query stuff into its own service (literally just cut/paste code from interchange into a service).\n\nIf you already have a working mechanism, it'd be awesome if you could submit a PR. We can either merge that in, or I can take that over.\n. @nathanmarks Awesome! :) I just merged it in so you're welcome to go off master. \n. Current issue:\n- [x] scrollbar appears on animation change. I tried to do overflow hidden, I'm probably screwing something up.\n. Seems like I worked out the issue. @stryju can you test this out and let me know how it works for you? I'll go ahead and start on a refactor when everything's up and running correctly.\n\nI also have some reservations about the code style so I'll update that to fit the rest of the codebase without touching the experimental code. \n. Alright, so I found _no way_ to store reliably _if_ a height was preset or not, nor setting an initiator due to some scoping or variable issues. I decided to go against it and am thinking that we can just merge this in _as is_ and deal with the height issue at some later point.\n\nI considered having a specific `ui-view-container` directive which would store height and temporarily change it upon request. Not sure if that's too much.\n\n@gakimball what do you think about getting this merged in? The only remaining issue is that if the `ui-view` parent has a `style=\"height: whateverpx;\"`, the height would get erased.\n. @gakimball the `ui-view` will be positioned absolutely which means that any elements after them will _jump up_. This is why we can set a height to the parent in order to prevent the jump. This height is set via `style=\"height: Whateverpx;` and then unset (just as the absolute positioning is unset). \n\nThe problem is with people who may set a height on the parent via the style attribute because it'll get overriden by the animating `ui-views`. Does that make sense?\n. Ah, hell, This is by far the most frustrating PR I've worked on. Current status: does not animate correctly -.-\n. I ended up in a dead-end. For some reason, certain animations work perfectly while others don't. For instance, I applied a `fadeIn` and `fadeOut` to Angular and Angular-modules pages to test them out.\n\nThey work 100% correctly one way but the other way they fail. Which is bizarre since they both have the same animation applied to them. Then there are issues with several views (during my test), simply _not_ animating despite following the proper animation procedure which makes me think that this might be a browser thing? But I'm not sure.\n\nEverything is as close to being done as possibly except for these few kinks.\n\n**EDIT** I'm thinking that this might be a better alternative to what we have anyways but idk.\n. Currently there is no way to do this; however, the dynamic routing in FA is meant to be used in the most basic sense and for rapid prototyping. More advanced features should be left to a more conventional routing built out the angular way.\n. UI Router does support it; however, we have not exposed that functionality in the dynamic routing scheme so you can't do something like this:\n\n``` yaml\nname: mypage\nurl: /home\ncontroller: MyPageController\nresolve: function() { var some; code() };\n```\n. You don't have to deal with the core at all, just disable the dynamicRouting function and use your own router declaration. \n. Hmm, I'm not sure if I'm understanding correctly. Are you talking about building out a separate service per module that could activate/deactivate them instead of a service that can activate any module?\n\nI'm also working on a factory for modals that would allow us to create modals programmatically (rather than with separate markup) and that one _will_ have an activate/deactivate member built in; however, it will have the ability to be activated/deactivated via FoundationApi as well. Is that more along the lines of what you're thinking?\n. Hmm.. I'm not sure if I agree with creating a separate service for each module. I kind of like the idea of having a central adapter that activates/deactivates components and then the components themselves handle how that happens. \n\nThis is so that the existing implementation of components and their activation stays intact and still available to new users. It also follows the way the components talk to each other behind the scenes.\n\nHowever, I think that once I'm done with the prototype ModalFactory, you'll see something more angular-like behavior with the factory creating the component directives and controlling its activation state.\n. Hmm. Alright. That's a fair point. I'll prototype something out and see how it looks.\n. Perfect!\n. That's already part of the directive! You can call `scope.hide`, `scope.show`, and `scope.toggle`.\n\n@circlingthesun what do you mean by results? Oh, and some code has already changed since this last commit. I'll definitely add the custom scope option.\n. @gakimball That's where I was headed with this next! =D Currently, the prototype already attaches but does not activate, no clue why. But I'm sure I'll get that resolved tomorrow.\n. Alright, so I ran into a big-time snag that would prevent the factory from firing off proper `activate` on the modal after its initialization if the code was synchronous. Basically, if we want to default fire the modal by a controller right after it's created, the modal won't even be ready at that point.\n\nI already asked about it on SO since there's not much documentation on it and no SO questions. http://stackoverflow.com/questions/27869320/how-do-you-create-compile-a-directive-via-a-factory\n. Phew, got this resolved. For anyone wondering:\n\n$compile seems to run async and thus it's possible to run into severe race conditions. It's possible to preload `scope` for compile with initial data such as activation right from the start. This way, we can tell the modal to compile as an active element! The `foundation.publish()` function will initially publish to an empty subscriber (if the `activate`, `deactivate`, and `toggle` methods were run too early in the app cycle) but that's totally fine! :)\n. Improvements:\n- [x] pass data with scope rather than poorly formatted HTML string.\n- [x] create an `init()` function for the modal itself to run against itself at the end of a compilation.\n. @circlingthesun The code is pretty much done, can you suggest a way to add this additional functionality? I'm imagining using `$q` and `deffer`; however, if one was to _not_ use `then`, I still need the activate function to fire.\n. There were some fixes that went out the door a few weeks back, and one specifically regarding this issue, are you on v1.0.2?\n. I'll be adding these to all the pertinent directives as I build factories for them.\n. It's been added to notification and modal. We'll add it as needed. I'll close this out.\n. @etcook I'm currently off the project. I'll go ahead and reopen this issue for someone to check up on this.\n. I've changed some things around. Can you do a pull and test it out?\n. Yay, age old bug fixed.\n. @circlingthesun this is the start of the adapter I was thinking about and I'll start porting it to the facades (I still want to have a central adapter). So the facade would look something like:\n\n``` js\n  FoundationModal.$inject = ['FoundationApi', 'ModalFactory'];\n\n  function FoundationModal(foundationApi, ModalFactory) {\n\n    var service    = {};\n\n    service.activate = activate;\n    service.deactivate = deactivate;\n    service.newModal = newModal;\n\n    return service;\n\n    function activate(target) {\n      foundationApi.publish(target, 'show');\n    }\n\n    function deactivate(target) {\n      foundationApi.publish(target, 'hide');\n    }\n\n   //sugar for ModalFactory so that it doesn't have to be accessed directly\n   function newModal(config) {\n     return new ModalFactory(config); \n   }\n  }\n```\n. I'd like to keep them separate just in case. But cool. I'll go ahead and code all this up.\n. Hey guys, this is good to be merged in if anyone wants to go ahead and do it :)\n. So this is just a light refactor that was meant to make things a little cleaner. I started working on the #382 abstract matching service, mainly by taking some of the interchange logic out and throwing it into the FoundationMQ service (though, I'd like to find a better long-term solution for this!).\n\nAnimation is in its own module as well.\n. @naneer that feature is already available! :) The front matter works off basic [YAML syntax](http://yaml.org/) so what you can do is: \n\n``` yaml\ndata:\n    requiresLogin: true\n```\n\nThat should work.\n\nI made a video demonstrating some of these features, [check it out](http://youtu.be/Vf8Ucn67flI?t=17m52s) (make sure to watch it far enough where I demonstrate that it works, I fumble a few times).\n. @soumak77 if I understand this correctly you're proposing the plugin:\n1. creates a module that sets up the routes\n2. appends the routing to an existing file rather than creating a new one that just holds the routes.\n\nIs that correct?\n\nOn the first point, I saw that you're using `fs.appendFile` for both non-module and module declaration. Does append file write a file if it doesn't exist?\n\nThe code looks sound. I'd suggest that the `writeData` function gets the `appendingToFile` option passed in order to avoid scoping problems.\n. @listepo 90% of the functionality in FA is very simple: add \"is-active\" to active an element, and use other classes to modify component behavior. You can easily rip out the styling from FA and wire it up with any other framework.\n\nAs far as routing goes, that's Angular specific; however, you could still use the front-end router (the Gulp plugin) to create an object and parse it for your favorite router as well.\n\nHowever, there are some forks that work with other frameworks in the [resource section](https://github.com/zurb/foundation-apps/wiki/Resources) if you'd like to check that out.\n. @romainfrancez will this change prevent any bugs? If not, it looks like the check alone will require way more code than it's worth.\n. @tvuotila after a quick `git blame`, it looks like I'm responsible for that code. I believe everything works as it should, and if it does, let me offer a quick explanation as far JS goes:\n\nUsing `||` is a shorthand to create a fallback in variable declaration. For instance, check out this code:\n\n``` js\nvar myArr;\n\nvar newArr = myArr || [];\n```\n\nThis code will check if `myArr` is defined and not null. If it is undefined, it'll fallback to the `[]` value. \n\nUnfortunately for me, now that I'm looking at it, there's no way to actually set this value to `false` because this simply gets evaluated and will always end up as `true`. It's definitely bug-causing code which makes me wonder how come it seems to work. One possible explanation is that the Controller gets evaluated _before_ the `zf-accordion` directive. This would mean that it's using strings to create defaults. So rather than:\n\n``` js\nscope.multiOpen = false || undefined || true; // which would default to true\n```\n\nWe're evaluating what users pass in as a string:\n\n``` js\nscope.multiOpen = \"false\" || undefined || true; // which would evaluate to \"false\"\n```\n\nSince all of the variables are just references to the `scope` object, our directive than converts that string into a boolean. The fickle thing is that one simply can't do a `!!$scope.multiOpen` because in that case, the string \"false\" would equal to \"true\".\n\nPerhaps a good solution would be a helper function in this module that converts strings to booleans:\n\n``` js\nfunction booleanize(val) {\n  if(typeof val === 'string') {\n     return val.toLowerCase() === 'true';\n  }\n\n  return !!val; //default boolean coercion\n}\n```\n\nAnd then replace some of the logic in the controller. This brings up another issue though, we want to make sure that if a value is _actually_ set and no undefined, we want to use that value. So perhaps, the best way to approach this would be:\n\n``` js\nvar collapsible = controller.collapsible = $scope.collapsible = booleanize(pickDefined([$scope.multiOpen, $scope.collapsible], true));\n\nfunction pickDefined(valueList, default) {\n  for(val in valueList) {\n   if(typeof val !== 'undefined') {\n     return val; //break loop, exits out of function\n   }\n  }\n\n  return default;\n}\n```\n\nI hope that whoever works on this PR can use some of this code and can follow my logic!\n. The `EADDRINUSE` is an error telling you that something is sitting on your port 8080. It looks like you might be on OSX so I quickly looked up how to determine what's running on port 8080:\n\n```\n sudo lsof -i :8080\n```\n\nIf it says `node`, you can go into your activity manager and kill it and try again.\n. @mattgrande I had no idea about geoff leaving. I was a contractor so it was kind of understood that I'd work on this only for a short amount of time.\n. The SASS part can be used without Angular; however, the JS interactions are Angular based.\n. related to #812 \n. I wonder how this will go. I really enjoyed developing the original base Angular for the library. \n. @tolyo I still have rights to the project but I don't believe it'd be appropriate for me to contribute.\n\nI think an open-source fork would do it. Just do a fork, call it \"open-foundation-apps\" or `base-apps`, replace the prefix `zf` with `of/ba` and go for it. I'm not sure if `foundation` is trademarked but I doubt it. \n\nIf no one is interested in taking on that responsibility, I'd be happy to fork it under a new org name, publish the new packages to bower/npm, manage rights to the new repo and open it to you guys, etc. I just don't have time to actively contribute. \n\nIn fact, if I can get at least a few people to support  showand help me come with a name, we can do this ASAP that way the project can live on in true open source fashion. \n\nI have an org that I haven't used in forever called [Lernaean](https://github.com/orgs/Lernaean/dashboard) and I can fork `foundation-apps` and the entire suite (the CLI, gulp plugin, etc.) there replacing the word `foundation` with `base` just to avoid confusion, give proper credit, and we can all get going from there. But I'm open to other suggestions (a new org name, naming conventions, etc.).\n\n@soumak77, @tolyo, @HoldenCreative, @tunecino , what do you guys think?\n. @soumak77 @tolyo I'd be more keen on starting a new org and giving a few key people org rights. If you fork it to a personal/work org, same thing can happen as it did in this repo: you stop using it and the repo gets stuck in a commercial organization. I think it's a better idea to have a new org that anyone, including the original creator, can give up rights to without minding it. \n\n@Gambero81 no one in this thread as far as I know.\n\n@HoldenCreative I agree we just need to agree where to fork it and under what name so that we can get started. \n\nAs the saying goes:\n\n> There are only two hard things in Computer Science: cache invalidation and naming things\n\nAs far as the organization name, here are some of my ideas (mainly bouncing off the idea of using \"base\" and \"open\"):\n- `base-apps`\n- `open-modules`\n- `baseware`\n\nAnd for the actual repo, we can do \"Angular for Apps\" though that seems a little redundant. If any of you guys can vote on these or come up with new names:\n1. `base-apps/angular-apps`\n2. `open-modules/angular-apps`\n3. `baseware/angular-apps`\n. @soumak77 I'd do a clean fork and start a community around it. I realize that you're using the new framework but honestly, I did a diff between your fork and the official repo and it's only 300 line addition / 150 line deletions which is pretty skimmable.\n\nWhat we can easily do is when we do the new fork, open a pull request from your repo, and start discussing the changes and if they work for the community. That way some/most/all of your changes can exist in the new official repo and your fork can just get the updates from the new official repo as it needs them. \n\nWhat do you think about the names?\n. Basically, guys, I'm thinking of an IO.js-style fork of this repo. All I want is a name and we can start the work on this. \n. my bad! :)\n\nI'm not a fan of tying it to just angular in case people with alternatives in other frameworks want to contribute and add. I guess I'm trying to think of having a long-term org that can house dead projects that the community still wants to support.\n. Alright, done. https://github.com/base-apps/angular-base\n\nI also opened an issue [what needs to be done for initial release](https://github.com/base-apps/angular-base/issues/1) where we can discuss publishing this.\n. @gakimball glad I read this! I already started migrating stuff over, I'll hold off until we can talk about it.\n. @gakimball I think that we can safely merge this down now. \n. @gakimball I'll go ahead and give that a shot. It makes sense to mask all of that functionality, I just keep thinking ahead programmatically, not in terms of simplicity! :) \n\nI think that behind the scenes, I'll run an angular modal service that will broadcast to all the modal directives via the `fa-model-open` and similar directives. When the name matches, an action will be triggered. That'll make it much easier for everyone to use (since they won't have to touch angular) and will allow us to sidestep controllers.\n\nHopefully that won't be too difficult! :)\n. @gakimball so the directive is ready to go in but I noticed some structural changes that we should probably discuss.\n\nWe currently have two folders for both styling and JS. One at the root of the folder, and one inside the client folder. We should probably decide firmly where we want to put the files permanently. I think we could argue both ways.\n\nPros&Cons of having it in the client folder:\n- The client folder speaks for itself and is the entire project in its raw form\n- it makes it clear that anything outside of the `client` folder is a supporting file (Gulp, readme, etc.)\n- the con is that you have to go 4 directories deep in order to open a single file (`client/assets/js/;angular`)\n\nHaving it at the root:\n- easier to access\n- easy to find files at a glance in the repo\n- source is intermixed with supporting files\n\nI'm not sure which way I lean. If we had a back-end, I'd definitely throw everything in the client folder but we don't, and this is a front-end only framework. On the other hand, if anyone wants to implement a back-end, it'd make more sense if everything was in the client folder (and the back-end in a `server` folder).\n\nThoughts on this?\n. @gakimball Alright, so in that case, I'll keep things as they are since the Angular stuff is mostly a \"library\" sort of thing rather than something I'd let users dig around in. \n. @gakimball Awesome, then, I'll restructure the listeners array to favor access by ID. I'm sure if we stumble on an edge-case where we need the deep structure, I'll just refactor it. Luckily, it's all behind-the-scenes stuff. :) \n\nAnyways, cool, I'll add that functionality right away. \n. For anyone wondering, I've finally implemented the template loading for interchange. This means that all the scenarios within an interchange directive get collected, saved, and the appropriate partial/template gets loaded (initially).\n\nJust an FYI, this is a huge breakthrough since the directive has essentially replaced `ng-if` and `ng-include` and even uses the `templateCache`. Now I just need to find a way to fire off the `resize` hook every time the window resizes! :) Shouldn't be an issue!\n. And interchange is officially working! Some features that are missing (but will be available):\n1. [x]  compiling prebuilt media queries the same way that foundation does it (by creating a meta element and checking its `font-family` property)\n2. adding custom media queries programmatically (will probably be part of `FoundationApi`)\n3. implement the matchMedia library as an AngularJS injectable module\n\nAt this point, I'm thinking that there needs to be better organization to the template files. I'm pretty much just throwing each directive I add on there without any documentation or without any clue as to how it works.\n\nOn top of that, it'll be a good idea to implement testing! ProtractorJS should be sufficient for that :)\n. @gakimball you mean comment-like internal documentation, external documentation (similar to how Angular's docs work) or something like Javadoc (<- not a big fan of those).\n. Sounds good. I'm continuously refactoring to make things more sensible but I'll definitely comment the code better. I'm really not a big fan of JSDoc so I'm glad we're on the same page! :)\n. @t1mmen just fixed it! :)\n. @gakimball I'm trying to decide on something here. Should the directive add all the necessary classes? That way you have to only write:\n\n``` html\n<div>\n   <div fa-tab-href=\"tabId\">Tab 1</div>\n</div>\n<div fa-tab-content>\n   <div fa-tab id=\"tabId\">Tab content!</div>\n</div>\n```\n\nOr should the user be allowed to pick their own classes and thus they'd have to add all the necessary classes. I'm on the fence. \n\nOn the one hand, I feel like the mechanism of tab switching should be free of styling (so that it could be used anywhere else with different classes, and even different purposes), on the other hand, it'd be nice to have everything neatly packaged.\n\nWith classes:\n\n``` html\n<div class=\"tabs\">\n  <div  fa-tab-href=\"tabId\" class=\"tab-item\">Tab 1 </div>\n</div>\n<div fa-tab-content class=\"tab-content\">\n  <div fa-tab id=\"tabId\" class=\"tab-pane\">\n    Test content\n  </div>\n</div>\n```\n. If anyone is wondering why the tons of commits and the hold-ups, it's because of a bug that sets an ID across all `tabs` directives rather than just for one specific one. This causes all tabs to update from a single tab navigation.\n\nIt's, safe to say, frustrating.\n. @gakimball @zurbrandon this is ready, w0000t! :) I had to change the syntax a bit but everything works as it should. \n. More improvements (internal):\n- [x] switch `is-active` DOM manipulation with `ng-class={is-active: active}` for a more \"angular-like solution\"\n- [x] enable non-hash URLs (requires the use of historyApi middleware).\n- [x] enable \"E\" restriction on component directives, no need to restrict to \"attribute\"\n- [ ] ~~update docs with new elements (might be worth it to add a code directive for displaying code snippets)~~\n. @davidkpiano the animations are class-based but for the `fade` example, everything is simple, just append an \"in\" and an \"out\". It gets more complicated for your second example:\n\n```\nanimation: slide\n```\n\nWould this mean that you're sliding in from the left/right/top/bottom? Would you slide out the same way? Or would you slide out the opposite way? The example in the docs is probably not a real-world example, the real world example would be:\n\n```\nanimationIn: slideInLeft\nanimationOut: slideOutRight\n```\n\nTo simulate a slideshow or something.\n. @richbai90 for a large-scale application, I'm not sure if I would recommend using the routing method in FA since it's aimed at designers and developers that aren't entirely familiar with Angular. However, i think it's an interesting concept: having a JS object define all of the routes and dynamically injected into the application at run time. I'd say it makes it easier to edit routes and have a quick overview since the default ui-router declaration requires a ton of piping of `state`. \n\nBut obviously, in the case of the JS object, you can't take advantage of `resolve` or other similar features.\n. @kenwheeler I've been following the discussion and it looks like Angular 2.0 is not even close to ready. The announcement was made around a spec rather than an actual working prototype. There has been a lot of interesting discussion about it! :)\n. @rafibomb I already considered that but since we have only two controllers and they need each other, I found no reason to separate them. Plus, since we're not adding any additional controllers (and probably won't be), I can't justify making a folder with two controller files and adding those into dependencies, and try to cross-dependency them as well.\n. @gakimball this branch was supposed to allow non-hash URLs but it seems like we're testing out a new server. Kudos on that since we can use that plugin and my solution together. I made a couple of adjustments and this branch will be able to enable that feature plus clean up a bunch of stuff.\n\nWe can merge this in ASAP! :)\n. @gakimball can you look over this real quick? :) We got a working accordion directive! w00t!\n. @Martinspire there was a discussion on it and the thing is that SASS for Ruby is ahead of libsass (the cross-platform version of Sass used with Node) which means that Foundation for Apps can stay more cutting edge; however, some of the necessary features ARE getting implemented into Libsass so hopefully, we'll be able to switch right back! :)\n\nAnd again, I'm a Windows dev too so I feel you on the speed thing, Sass takes somewhere between 2-15 seconds to compile depending on Ruby's mood.\n. @Martinspire just as a sidenote, I'm a window guy, developing the angular side solely on a windows machine.  :)\n\nAs far as `sudo`, you're right, it should be \"open a CMD with administrative privileges\". I can go ahead and add some of this information to the readme. However, I'm not entirely sure what the entire process would be as I'm using a combination of Cmder (which comes with Msysgit), Chocolatey (a package manager), Unix tools for Windows and JRuby instead of Ruby (I've heard it has better support). \n\nUsing the Node installer though is pretty much the right way to go, I believe it sets the correct environment variable during install (so you can use it in the command line).\n\nSo how does this sound?\n1. Install Ruby with the official installer or use JRuby alternative.\n2. Install Msysgit to get Git. It might be worth looking into using Cygwin or Cmder both of which come with Msysgit and offer more feature-full console/terminal experience\n3. Since Windows does not have a `sudo` command, make sure your command line is running with administrative priveleges (right-click or shift-right-click and select \"Run as administrator...\")\n\nGood? If you have any input on the process, let me know! \n. I've just updated the README with these notes.\n. I generally never have to run as Admin and I will admit that I have a bad habit of doing so. I set u my CMD shortcut to automatically prompt administrative rights. Mainly because I hate having to relaunch my command prompt. I use CMDer and pretty much live in the command prompt so I don't ever open a prompt from a directory.\n. @gakimball I was working on a few tests this morning and found myself refactoring a bunch of the code and fixing several bugs (yay for somewhat TDD). I'd like to merge this in by the end of the week to get those bugs resolved if that's cool. We'd also have some initial tests to setup and work on in the future when necessary :)\n. @gakimball yep! I'll integrate the gulp-karma plugin when I get a chance.\n. @jakeleboeuf thanks! It turns out that I committed on master rather than a feature branch >.< so there's a half-built module with syntax issues. I deleted it and everything is in order now. \n. @jakeleboeuf Ahh! I issued a fix for that yesterday, it looks like it was overwritten by accident. Pull the latest master and you'll see it working!\n\nThe issue was that I was concating all the output css files and what that did was merge the `app.css.map` into the `app.css`.\n\nThanks for reporting these errors! :)\n. Issues:\n- [x] actionsheet causes block to scroll (possibly wrong class usage on the parent element on my end) \n- [x] popup shows up in the wrong place\n- [x] popup does not stay in place when scrolling - tether does not watch for scroll events in successive parents. (tether behavior mentioned in docs)\n- [x] custom actionsheet button causes actionsheet to show up in the wrong place. - tether doesn't seem to be the right solution for this (solved by allowing custom trigger elements within the container).\n. @gakimball I think this is just about ready to go if you want to do some peer review on it. I changed the actionsheet to work like so:\n\n``` html\n<fa-action-sheet>\n   <fa-as-button title=\"My button title\"></fa-as-button>\n   <fa-as-content position=\"bottom\">My content!</fa-as-content>\n</fa-action-sheet>\n\n<!-- custom buttons -->\n<fa-action-sheet>\n   <fa-as-button><a href=\"#\" class=\"button secondary\">My better button</a></fa-as-button>\n   <fa-as-content position=\"bottom\">My content!</fa-as-content>\n</fa-action-sheet>\n```\n. @gakimball \n\nI can make sure that each directive accepts a \"onOpen\" and \"onClose\" function in the declaration. So as long as you specify a function in your controller, you can pass it along and have it fired like so:\n\n``` js\n//within controller\nscope.onModalClose = function() {\n  alert('are you sure?');\n}\n\n//on a directive\n<fa-modal onClose=\"onModalClose\">\n```\n\nThis is how some other angular libraries solve the issue. Internally, the directive will make sure that `onModalClose()` gets run when its deactivating itself.\n\nI think that would be the best solution.\n\nOutside of that, there are some other things we can do:\n1. We can use a common FoundationApi emitter. So for example, each directive, on any action would publish through the API a generic \"event\" with a payload that describes the event like so ['modal', 'my-id', 'close']. That way anyone can just add a listener for the generic `event` and check `if(whateverId == payload[1] && payload[2] == 'close') { }`.\n2. We could also create non-generic events. So for instance, there could be a generic `modal` event which would tell us what the actual event was (like `close`). Or even more specifically a `modal-close`. All running through the FoundationApi\n3. We can use Angular's built-in event system described [in this neat stackoverflow answer](http://stackoverflow.com/questions/19446755/on-and-broadcast-in-angular), which would mean that someone could hook into these events WITHOUT having to use FoundationApi. This is, obviously, not a great idea for any internal functionality but for something that's publicly exposed, might be worth looking into\n\nWhat do you think?\n\n**note** there IS another option and it's already functional. Since anyone can hook into FoundationApi, they can just do this:\n\n``` js\nfoundationApi.subscribe('id-of-an-element-they-watch-for', function(payload) {\n   if(payload == 'active') {\n    //perform some logic\n  }\n});\n```\n. @gakimball I merged in some of the branches, cool if I merge in this one? I'm not sure if there is any more work to be done here.\n. @gakimball So here's the gulp plugin. We'll have to move this to another repo if we want to push this out to NPM!\n. @gakimball well, it requires the `foundation.init.js` package that initializes the routing for it to work. I can keep it in a /bin folder for the time being or I can open a new repo (though I'm not good with names so I'll need some help!) and push it out to NPM, put it down as a dependency.\n. @gakimball I'll go ahead and merge this in then, and keep the plugin in a /bin directory for now. We can move it and change it as we go.\n. @gakimball I know we were going to create an markdown-based site docs, but would this suffice for the time being? I can even leave a note in the main README.md or I can rename it to ANGULAR.md and leave it at the root.\n\nThoughts?\n. @gakimball added, as far as the first link with the asset/template loading, that bug was fixed in the core library over a year ago.\n. @gakimball I keep seeing people wondering about the Angular documentation, would it make sense to merge this down? Or should I rewrite as part of all of the docs templates?\n. @gakimball sure thing. \n. PR is up\n. @zurbrandon do you mean in this case:\n\n``` html\n<fa-action-sheet>\n   <fa-as-button></fa-as-button>\n</fa-action-sheet>\n```\n\nI can't replace it with `fa-toggle` since that directive already has certain logic that is generalized to work with all directives. The `fa-as-button` is a directive that handles the default button logic and templating. Unfortunately, I can't merge the logic of the two without adding lots of complexity.\n. @zurbrandon I didn't realize there were options for that but I'm adding them now, can you give me an example of the color class and the class that pins the notification in different places?\n\nAlso, as far as the static vs. dynamic notifications go, the reason the directives don't look the same is because the directive that fires a dynamic notifications has to contain all of the notification information while not being the notification itself while the static notification is just that, and can be toggled just like many of the other directives we have. I can't really make it more consistent than it is.\n\nOtherwise, there has to be some kind of a directive tag on the page to serve as an endpoint for the notifications. I don't really see a way around it, it's the container for the internal logic.\n. @zurbrandon andddd behavior standardized with #69 \n. Crap, I'll need to wait for the libsass branch to merge in -.-\n. @gakimball phew, that worked. Unfortunately, I have to keep this issue open until node-sass gets a fix. Gulp-sass doesn't even require a specific node-sass version so I can't even downgrade that to get the right node-sass version :/\n. @viztastic somewhat related. Unfortunately, node-sass requires both Python to be installed and Visual Studio (the express version at least). Here's the link to installation requirements: https://github.com/sass/node-sass#install\n\n@gakimball I'm thinking that this is getting a little crazy. Installing Ruby + Sass is much faster and easier than having to install Python and all this other crap. I'm not sure how the requirements are for OS X but since OS X already has Ruby pre-installed, this avenue may prove easier for both systems.\n. @jwvanderbeck I would definitely expect people to use Express with proper configuration for production and something like Forever to run the Node process rather than Gulp. That'd be non-nonsensical. You're on the right track. \n\nI would say that this stack is great for rapid prototyping and developing though :) \n. Did bower install all of your components correctly? That'd be the first place to check. Open up `bower_components` in your folder and check to see if those files are there or not.\n. @3lfist just fixed it, do a `git pull` to get the fix. Not sure why `bower install` wasn't run. The reason it's not in the docs is because it should run automatically with `npm install` (it's specified to do so in the package.json).\n\nLet me know if you hit on any other errors. I'm already aware of some issues for Windows users regarding libsass. \n. hmmm...strange. Okay. Can you give me the output of Gulp? Were there any errors? If you're getting a \"Cannot GET /\", that sounds like the `copy` task failed.\n. @3lfist hmm.. okay. Can you check if you have a build folder? And if you do, check if everything is in there (like `index.html`, `assets/`, etc.). If it's there, try to kill the gulp process and refresh `localhost:8080`. I wonder if there is a stray Node process that might be running and giving you trouble.\n\nIf you get the same message, that means you have a Node process running interfering with your new server. If you have a Mac, use the Activity Monitor and look for a \"node\" process and kill it. And try again.\n\nLastly, at the risk of sounding like a typical IT person, would you mind deleting all the node_modules and bower_components, doing a git pull again and rerunning the install process?\n. @3lfist you shouldn't have to `sudo` it. I see one problem already: there is no `index.html`. So for some reason, that's not getting copied. That's the heart of the issue.\n\nI'm on a Ubuntu VM and am experiencing the same problem so I'll go ahead and troubleshoot this on my machine and let you know how I got it resolved.\n. @3lfist issue is fixed. Just do a `git pull`. It seems like both OS X and Windows are forgiving when it comes to capitalizing folder names. Ubuntu, however, is not :)\n. @gakimball ah....well then, I'll go undo my work and rename the folder!\n. @gakimball urgh, so, changing uppercase to lowercase is turning out to be quite a task. \n. @gakimball phew, a few rebases, and forceful git pushes and it's good to go. :)\n. @jwvanderbeck please do a `git pull`, this issue has been resolved: https://github.com/zurb/foundation-apps/blob/master/js/angular/app.js#L24-L26\n. @jwvanderbeck :) everything is still being worked on quickly so things are bound to break once in a while.\n. @jwvanderbeck if you do a `git pull`, the issue will resolve itself, everything is set to 1.3.1 now.\n. On a sidenote, yay for automated testing! \n. Issues so far:\n- [x] interchange no longer renders on-page partials\n- [x] displaced tabs don't show up\n- [x] static notification doesn't fire.\n- [x] popup doesn't work\n. It looks liek\n. @gakimball btw, so here is the Iconic wrapper. It works simply:\n\n```\n<div iconic>\n    <img data-src=\"#\" data-fallback=\"#\" ... /> // regular iconic declaration\n</div>\n```\n\nThe Iconic directive fires an \"inject\"' on its child when invoked which makes Iconic register the icon and replace the `<img>` tag with its SVG declaration. \n\nThe reason a parent element is required is because the second the `img` gets replaced with an `svg` and kills all the bindings, including the directive and any other directives. The issue with that is that if we use `ng-if` or even `ng-class` on it, those will cease to function. This approach was recommended on the forums for this specific reason.\n\nI think the only way we could side-step this is to inform users that they cannot apply any logic to the icon img files. This would lead to a cleaner syntax:\n\n```\n<img iconic data-src=\"#\" data-fallback=\"#\" ... /> //standard iconic declaration\n```\n. @gakimball unfortunately, no, not without a parent element to keep track of it. I'll go ahead and make the change. \n. Right, the entire idea is to wrap it with whatever you want to use it for. But yeah, if you have a click event, it'd make more sense to wrap an `img` with an anchor.\n. @gakimball sweet! So those will be part of this repo?\n. I'm aware of the issue, the CI currently tries to run gulp-sass on the latest version on every test. We've got our first passing build today so this issue has been resolved.\n. Yep, the master branch is passing. I'll have to test it on my machine and solidify the dependency when I get a chance.\n\nThanks for the heads up!\n. Anddd updated.\n. @jwvanderbeck You're on the right track. In fact, the `app.js` is meant for the rapid prototyping for users that don't want to learn/use angular explicitly. If you're not a fan and want to run your own code, or get rid of the dynamic routing, just erase this line:\n\n```\nFoundationStateProvider.registerDynamicRoutes();\n```\n\nThis is part of the `foundation.init` module, which also runs this line in `app.js`:\n\n```\nfoundationInit.init();\n```\n\nYou're welcome to delete those and run your own thing. Unfortunately, `foundationInit.init()` initializes some things, and one of them is the setup for `interchange` so without the module, interchange won't work.\n\nOne thing is clear, I really need to add all the inter-dependencies so that Angular can warn you if you're missing something. Pretty much all directives depend on `common.*` for FoundationApi and all of the basic `fa-open/fa-close` directives. These are located in `js/angular/common`.\n\nI started on _some_ documentation, and you can check it out [here](https://github.com/zurb/foundation-apps/blob/directive-documentation/js/angular/README.md), it's on another branch and should answer most of your questions.\n\nThe point of this entire thing was actually not to make it dependent on the structure. Everything should be portable, everything should be a module that you can easily inject. \n\nLet me know if that makes any sense! :)\n. @ilanbiala @jwvanderbeck I don't have time right now to write out a full response but both of what you are proposing we're already doing:\n- https://github.com/zurb/foundation-apps-template <- this is a startup repo that's meant to be a full-on solution for someone that doesn't want to mess with things. Though, they still can.\n- https://github.com/zurb/foundation-apps <- this is the main code repository. Bower install it, use what you want to use.\n\nNothing is tied to the app.js nor anything else. You can carry over whatever files you want to use. The `app.js` is a full-on solution but there is nothing forcing you to use it or even reference it. Use bower install, use gulp to include all of the files in the subfolders of js/angular: common, directives, partials, etc. and build your own App.js. DI is there for a reason, so that you don't have to use everything but only what you want/need. If you only need modals, use those, and don't include any of the other components in your build process, and just reference it in your app.js DI so that they're loaded into your app. \n\nWant to update? No problem, do a bower update and you'll get fresh everything (once there is a release and proper versions).\n\nMeanwhile, designers can indulge in f-apps-template which brings over all the logic from f-apps but with your own templates to use. And you still get the updates via bower install. \n\nI'll have to get back to everyone when I have time for it (probably on Monday). But does that not cover it? \n. Very exciting! :)\n. @ilanbiala I was under the impression that a native `forEach` loop wasn't fully supported across browsers. I'll keep angular.forEach for the time being.\n. @ilanbiala I checked the [es5 support chart](http://kangax.github.io/compat-table/es5/), looks like I'm a little behind times. Thanks for that catch! :)\n. Try using the Angular directives:\n\n``` html\n<div fa-panel id=\"my-panel\">panel content</div>\n<a href=\"#\" fa-toggle=\"my-panel\">toggle panel</a>\n```\n. @jwvanderbeck hmm. What does your `app.js` look like? I wonder if you're missing a dependency or something. Did any errors show up in your console?\n\nCase #2 is the correct usage so I'm wondering why it's not firing. it works fine on this end.\n. Ah, yeah, that was a bug that was fixed some time ago. The `has` function is part of jQuery and was replaced with another. \n. @jwvanderbeck sure thing. It's a little difficult since f-apps hasn't had a first release yet so it's one of those \"move fast, break things\" situations. \n. @jwvanderbeck the app is not broken. I just did a `git clone` and started a brand new project, the panel works as it should. \n\nI think the confusion comes from the docs files that are currently not up to date. When you're running the base app, check out `localhost:8080/playground` or the `docs/templates/page.html` file to see how it's supposed to work in Angular. That's the working version. \n\nIf that doesn't help, please, either create a repo for your app so I can check it out and troubleshoot it or post your application bootstrap file or html. I'm not entirely sure where things could have gone wrong.\n. Yep, duplicate. Closing it out. \n. good idea, I'll set that up\n. Anddd done. Perfect, it errored because `gulp-sass` could not compile the SASS correctly.\n. yep, it works. I'll go ahead and merge this in. We'll have a broken build, however, until node-sass gets a fix. \n. yeah, I just removed some of the other older branches that I kept up.\n. Whoops, i deleted them this morning, forgot to mention it!\n. @ilanbiala can you elaborate on the error? I'm not seeing it.\n. Since this was already fixed in another issue, I'm closing it. Let me know if you have any further trouble.\n. I've identified the issue, the fix should be out tomorrow. \n. The docs aren't fully finished but the issue is fixed.\n. The problem is how Angular handles its animations and how the UI Router delegates it. Angular has some cool helper classes like `.ng-enter` and `.ng-enter-active`. The animate module is as close you as you can get. It works..well, mostly. \n. @gakimball In a moment of epiphany, I realized why the \"flashing\" issues might be here (add `fadeIn` and the content fade outs and fades back in). One of them is that the transition timing and controls are on that element itself. That means that to get to an initial state, `fadeIn` will fade the element back out.\n\nIf there was a way to add an intermediate step, we could have our cake and eat it, too. Meaning that we could have an \"initial state\" (which would be `opacity:0`), an animated state (`transition-*` properties) and finally a final state (`opacity: 1`). I don't want to get into a class-itis type of deal but that seems to be a good way to solve the issue: go immediately to initial state, add transition timing and properties, animate to final state. Perhaps we could have a `fadeIn` class, a `fadeIn-transitions` class, and a `is-active` to activate the animation.\n\nThoughts?\n. @jpdesigndev I'd remove all of those classes once the animation is done. I'm not sure how the repaint works but I'm guessing the browser is forced to do so during the animation anyways. \n. @gakimball this seems to be working. well, mostly. For the active classes, there's a space between class selectors so that instead of `.fadeIn.ng-enter.ng-enter-active`, there's `.fadeIn.ng-enter .ng-enter-active`. I add the enter/enter-active classes manually which makes me wonder why having the previous `is-active` way of initializing animations didn't work. \n\nThe enter/enter-active classes don't get automatically added for programmatic solutions.\n. Yeah, the CSS looks a bit wonky:\n\n```\n.fadeIn.ng-enter {\n  opacity: 0;\n  transition-property: -webkit-transform, opacity;\n  transition-property: transform, opacity;\n  transition-duration: 700ms;\n  transition-timing-function: ease;\n  transition-delay: 0; }\n  .fadeIn.ng-enter.ng-enter-active, .fadeIn.ng-enter .ng-leave-active {\n    opacity: 1; }\n\n.fadeOut.ng-leave {\n  opacity: 1;\n  transition-property: -webkit-transform, opacity;\n  transition-property: transform, opacity;\n  transition-duration: 700ms;\n  transition-timing-function: ease;\n  transition-delay: 0; }\n  .fadeOut.ng-leave.ng-enter-active, .fadeOut.ng-leave .ng-leave-active {\n    opacity: 0; }\n```\n\nNow if only I understood SASS as much as I would like to, lol\n. Anddd done. I used a trick from Angular's internal ngAnimate code to stop the transition from happening internally, using a `$rootScope.$digest` to force a reflow/repaint, removing the transition block, and appending an end-state class to trigger the transition. Sweet.\n. This should be ready to merge. :)\n. Gulp-sass gets continually tested by Travis-CI every time we push a commit. It's a good gauge as to what version currently works. I'm thinking of locking it down once we get a green light from Travis.\n. Ah.. makes sense. Thanks I'll get that fixed.\n. Got a fix in the works.\n. Hmm, it looks like a deeper issue based on your screenshot. Can you show me the output of gulp? Some of the files seem like never compiled.\n. I don't believe the docs have live examples at the moment. Go to `http://localhost:8080/playground` to see all the components in action! :)\n. So, are you still having the same trouble? If you are, when gulp is done building, check the `build/assets/js` folder and see if there is a `routes.js` file. If it is, check it out inside and see if there is a `var foundationRoutes` in there with a long object definition.\n. Hmm, that's strange, removing `foundationRoutes` should make the application unusable. Are you on the latest commit? \n. @mikehuebner can you confirm if this is still an issue or not? Some things have changed in the codebase. If the problem still persists, I can try helping you troubleshoot it further.\n\nI'll go ahead and reopen this when you let me know.\n. Yay! =D\n. That last error means that you have another process running under port 8080. If you have WAMP or Ruby or any other server running on that port, shut it down. \n\nExit out of any Node processes as well and if you do, check your task manager (advanced view) to see if Node is still running. This can happen once in a while and used to be happen to me all the time on a Mac. \n\nIf you STILL can't make it work and still get the same error, check out this [stackoverflow question](http://stackoverflow.com/questions/48198/how-can-you-find-out-which-process-is-listening-on-a-port-on-windows) and scroll down to the Resource Monitor answer and run that. And again, check port 8080 for what could be blocking your Node process.\n. @ilanbiala can you clarify for me the following comment:\n\n> The issue is that bower_components hasn't been changed to public/lib in the gulpfile, once I changed that, 0 errors.\n\nwhere is `public/lib` coming from?\n. @jpdesigndev do you mean dynamically? It wouldn't scale plus it's no simple task hunting down all of the possible absolutely-positioned objects in the view to move it outside of the view while trying to make sure the view animations don't happen until all of the objects have been moved.\n\nNon-dynamically? (as in, actually just change the DOM so I don't have to deal with the problem) Yeah, that can be done but that's just avoiding a problem, plus it introduces a slew of other issues (like having to force users to declare off-canvas, panels, and other elements in their `index.html`).\n. No problem :)\n. that panel thing we talked about yesterday is exactly it!\n. yep, that'd work. I'll test it out.\n. Fixed\n. @gakimball I've written a pretty neat `animate` service that lives under the `foundationApi` (I might move it, not sure) but it has two methods:\n1. animate - which works VERY similarly to how our view animation works\n2. toggleAnimate - which works how our element animation works -> by toggling the active class\n\nI'm hoping to use these two methods to replace how animation works on the elements we discussed: panel, offcanvas, and notification. However, I can't append any extra animation information to these elements since these elements have built-in animation (`.panel.is-active` for instance). I'd love to get these out of the standard definition and into the service I've written.\n\nSo, for instance for panel, I could write in the directive definition that `slideFromLeft` (or wherever) is the default animation and to use toggleAnimation to activated it or deactivate it. If the user declares both `animationIn` and `animationOut`, we'd use that animation instead.\n\nWhat do you think?\n\n**EDIT** And we could add this logic to any element that uses foundationApi (most directives) and allow these options. It's a 4-5 liner in terms of directive logic.\n. @ilanbiala angular and the foundation structure to trigger animation. Plain JS and Angular's built-in features to add and remove CSS classes, do resets, and reflows. And finally, CSS transformations for the animation itself.\n. @gakimball this is pretty much ready to go. I'll fix the merge conflicts and we can get this into master! :)\n. @gakimball there are plenty of Node libraries that do very quick diffing. I can wire up some rudimentary unit test that will import the `gulp-sass` and `gulp-ruby-sass` stylesheets and see if they're equal. We can employ that. It'd be an interesting test to see what the differences between the libraries are. \n. @gakimball I got the test prototype setup, not sure how well it's working but I'll get it working. For now though, I'm going to push this off as a low priority?\n. @gakimball whoops, look like one place I forgot to change fa to zf. I'll  check the rest of the project.\n. @gakimball this is ready :)\n. The docs aren't functional yet. Clicking on a link that has a `href=\"#\"` causes that error. It'll be fixed once the docs are finished.\n. To explain what's happening here (and explain why the test is set to automatically pass):\n1. the two CSS files differ greatly. According to JsDiff, there are ~300 CSS rules that do not match. On top of that, libsass likes to list selectors in a single line while ruby-sass likes to list them vertically (one selector per line).\n2. Because I'm on windows, and libsass uses windows executable, line endings are Windows style (`^M` if you view it in VIM), this means that this is probably throwing off the diffing lib. For some reason, these line-endings are present only in comments.\n3. The diffing lib sometimes fails. I haven't found a library that could diff everything correctly. The JsDiff comes close by being able to do a `diffCss` rather than line-by-line or whatever else.\n\nI'd love to see if there is any work done on this elsewhere because it seems like a big problem if you have up to 300 mismatched CSS rules. (or they could be false positives).\n\nI'll be merging this in as is until a better solution is presented.\n. Dead links in the docs will do that. That will be fixed by v1 I believe. I made an off-shoot from the docs for testing and developing all of the components: http://localhost:8080/#!/playground if you go through there, you'll see the Angular components right at work. if you check out the corresponding raw files, you'll find the syntax to use. \n. @ilanbiala the `href=\"#\"` is there in order to have a regular link pointer. If it still goes through and messes up, there's something wrong in the way it's setup so that's a good thing to keep in mind. Is it still messing up somewhere?\n\n@goids the playground was deleted upon release. It was a place for me to rapidly develop and since everything is now in the docs, there was no need for it anymore.\n. What we can do is setting overlay to exist when `overlay-close` is set to true (no sense in allowing overlay-close if there's no overlay), and allow independent setting of the overlay with `overlay=\"true\"`\n. @zurbrandon problem, so I made the change but without the overlay, the modal doesn't show up correctly. Is there any other class I can substitute to make it work correctly?\n. @zurbrandon can you give me the proper markup for a modal? I think it's changed way too much since I originally wrote the directive.\n. @zurbrandon I have a (potential) fix in one of the other branches, hopefully it'll work! :)\n. @ilanbiala thanks for the catch. It looks like I left the scope.apply in the wrong place. It was supposed to be run after FoundationApi informs the tab that it needs to activate. It's required there because when FoundationApi triggers an update within a directive, AngularJS doesn't go through its regular digest cycle (no DOM changes happen).\n. This is a duplicate of #122.\n\n Some of the Docs aren't completely ready. This should be fixed in v1. Check out the playground: http://localhost:8080/#!/playground  It's a place where I test all of the Angular development and all of the directives work there.\n. Thanks for the catch! I'll get on it.\n. @josteinhanssen so I fixed the programming error; however, I haven't gotten to the styles.\n\nI'll have to leave in the skilled hands of @gakimball. There seem to be some IE CSS bugs. \n. @antjanus note to self: get this done. \n. Sure thing. If you check out the [angular readme](https://github.com/zurb/foundation-apps/blob/master/js/angular/README.md) for FA, you'll find some examples there. But here's how it works in a nutshell.\n\nYou have to have a parent view, let's call it `mail` and it'd have a declaration like so:\n\n``` html\n---\nname: mail\nurl: /mail\n---\n<h3>This is your mail!</h3>\n<div ng-class=\"[currentSlug, 'ui-animation']\" ui-view>\n</div>\n```\n\nThen you can have a child view. Let's say, it's out inbox:\n\n``` html\n---\nname: mail.inbox\nurl: /inbox\n---\n<h3> This is your inbox!</h3>\n```\n\nAnd that it's. It'll be now accessible via the composed url of `/mail/inbox`. To access inbox, you'd do a `<a href=\"#\" ui-sref=\"mail.inbox\">Inbox!</a>`, no matter where you're at, even if you're in the parent view. Ui-router may have a shorthand if you're accessing a child view, but stick to putting down the full name.\n\nDoes that make sense? \n\n**EDIT**\n\nThere are also other ways to create a child with a different naming scheme. Let me redo the `inbox` with it:\n\n``` html\n---\nname: inbox\nurl: /inbox\nparent: mail\n---\n```\n\nThis way, you can use ui-sref like so `ui-sref=\"inbox\"`. I could be wrong (I'm not near my code right now) but test it out! :)\n. Foundation for Apps is all Angular with nothing back-end falling into it so it should fit neatly into MEAN. Since, doesn't MEAN stand for: Mongo, Express, **Angular**, Node? All of the components are decoupled and have a single dependency necessary to function correctly, the FoundationApi service. You can also import the common directives module which houses some hookups for FoundationApi that you'd probably have to write yourself anyways (like a event handlers that open/close/toggle foundation components).\n\nThe ui router components of FA aren't necessary for any of the components to work; however, they are necessary to work with the templating system we created which is almost jekyll-like with front matter deciding routes, child/parent relationships, title, and animations. Along with that, there's an animation component which depends on this front matter templating. However, all of that is optional. And if you DO want to use it, you can still plug in most of that logic to any other Angular project; however, it WILL take some work.\n\nOutside of that, you're free to do whatever with it and should work with any Angular setup. \n\nAs far as MeteorJS/Blaze, I'm not aware of either of those playing well with Angular but I'm not well versed in using either technology. So, shortly said, it's the same deal as MEAN with the added complexity of \"does Angular at all work well with Meteor?\"\n. V1 is focused on Angular. It's the most proliferate MVC framework out there by far. It also fits the prototype paradigm really well. If you're venturing out beyond Angular, you should be able to port the interactions by yourself without a problem (it's easy to do with jQuery, easy with VanillaJS, should be simple enough with everything else); Angular is used to add a bunch of sugar on top for Angular devs and for designers that don't want to deal with programming but want better prototyping tools.\n\nRegular foundation includes a jQuery version.\n\nAs far as VanillaJS:\n1. the styling is already all there so you can create all of the components without interaction.\n2. most components are class-driven. Meaning that you just need to add a class for it to be enabled. For instance, to enable a modal, just add `is-active` to it. If you want to enable an accordion item, add `is-active` to it. This is pretty simple to do in Vanillajs.\n3. if you have jQuery, then you can rely on the jQuery version of the Foundation components.\n\nI think this is all pretty self-explanatory.\n\n**EDIT** As an FYI, I've no idea what's in store for FA for the future, just wanted to add my 2 cents.\n. @zimt28 no work has been done on it. \n. Awesome! Thanks! :)\n. I decided to add titles to all of the docs pages. I think it'd be worth the time to go through and figure out which docs pages need to be deleted.\n. Yep! Plus it'll force me to actually use the Docs over my playground! ;)\n. @jcs224 Please run Gulp and post the output, and run `npm install` before that if you haven't already.\n. Using relative templates runs into a lot of issues with HTML5Mode (which would then require a base). I guess anyone that uses HTML5mode (and turns it on), will have to figure out the `requireBase` thing.\n\nI'll go ahead and have the fix on master.\n. I just checked it. The `config.path` always comes out as a relative path for me in every instance. Console.log out the entire config (check the endstream and console log out `configs`) to see if the `path` is the issue.\n\nIf you're talking about the URLs themselves, the ui-router has a list of solutions for that: https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions#solution\n\nHowever, I'm not sure if that's the issue.\n. @mrsweaters could be a difference in the way the OS handles filesystems and it might not make a difference in the way the app works when it's in the root but it might in a subdirectory (I'm running Windows so I can't see how it behaves on OSX or Linux). Can you try to console log out the relativePath and the other variables just in case? I can go ahead and implement a cross-platform fix once I know what to look for.\n. Ah crap. @gakimball can you confirm this is still an issue? The thing with the double/single quotes is that IE, FF, AND Chrome parse this crap differently. I added some logic earlier today when FF started to fail again. I wonder if it got resolved.\n. I'm hoping my last fix attempt resolved this. I'm going to close this out until it comes up again.\n. @gakimball we can't have two config files loaded into the app though. Should we then keep the `js/angular/app.js` pristine and not even loaded while the `docs/assets/js/app.js` does all the work with the extra modules?\n\nNor can we add dependencies after the configuration.\n. @zurbrandon it seems to be a modal overlay issue. It has a `display:none` attached to it but it also has a `display:flex` which overrides the display none. Since it has a transition on it, it flashes in-n-out. It seems that the `display: flex` should be part of the `is-active` declaration.\n\nBecause otherwise, for some reason, it simply fades out to `opacity: 0`.\n\nI'm not sure if this is entirely correct but that seems to be what's currently happening. However, if we do add `display: flex` on `is-active`, the entire thing will not animate :/\n. @gakimball so I finished the directive animations so yes, this should work. The overlay uses the same custom animations logic with hard-coded fadeIn and fadeOut values. So, if you get rid of the transitions attached directly to the overlay, everything should work correctly! :)\n. no clue why I reopened this.\n. The path should be relative to the site itself. The contents of the docs get copied to build which is the root of the site (so, docs itself does not get copied). Try the URLs without `/Docs` and see if that works.\n. I made a fix in the docs and the interchange logic. All working now! :)\n. I actually have no way of closing it out. The scroll event doesn't bubble up so if the user scrolls any container within the window, the popup will stay there.\n\n And attaching a scroll event listener to every container in the window is impractical and would mess up performance.\n. Urgh. I've been struggling with that bug for a long time, thought I had it solved!\n\nThanks for the heads up. Do you know which FF version you're using?\n. Fixed anyways.\n. Fixed.\n. This is related to #156. The modal overlay does not have a `display: none` set to it when it's not active and it has a transition attached to it, that causes it (on modern browsers) to do a \"flash\" when it's loaded. On IE10, the overlay also registers click events which cause it to appear and disappear (flash).\n\n@gakimball can you implement the logic we discussed where `.modal-overlay` has a `display:none` and no transitions and then `is-active` adds the `display: flex`? That way my animation logic can fade it in using the regular `fadeIn` class and we can bypass all these problems?\n. I'll give this a shot. If it still doesn't work, we might want to consider rolling back to the original way we got all those styles with meta elements being added one by one.\n. FF is being ridiculous. It works fine if you:\n1. double parse it. Seriously. First time around, it becomes a proper \"string\", second time around, it's an object\n2. eval it and then parse it. Same result. Wtf?\n. Fixed it -.- logic looks way better now too. Yay.\n. @cvrebert those are all good points. Currently, the branch I just merged in will change focus to the modal but not back. This is because there may be numerous originating elements and there is currently no implementation to send the origin element to the modal in order to send the focus back.\n\nI'd like to definitely get that on the way though.\n. hmm.. I'm not entirely sure how to prevent that. ideas?\n. I'll check out their code. Thanks for the tip!\n. Phew, so this is becoming more difficult than I thought. Just some notes to myself:\n1. when a tether is activated, it's moved outside of the view and attached to the body. When a view changes and comes back, it's still present and the view creates a second copy\n2. destroying the tether when view changes works; however, if one does not change the view, the tether destruction is irreversible and creates errors (**edit** nvr mind, it doesn't actually destroy it, wtf).\n3. unless there is a dependency on $state or a similar service, there's no way to distinguish between a view change and hiding the element regularly.\n. @gakimball I fixed 2/3rd of the commands so that most of them _should_ work now. The problem is on the Node side (or perhaps Windows side?) where `exec` only runs executables, not scripts or whatever else. For some reason npm works with `npm.cmd` and bower works with `bower.cmd`. However, I couldn't get `bundle` to work at all. I'm not a 100% sure why.\n\nI noticed that the `gulp-ruby-sass` package uses [win spawn](https://www.npmjs.org/package/win-spawn) which allows for cross-platform exec and spawn. I'll give regular spawn a shot as it might work better.\n. I changed a few things around. As long as bundler and ruby are installed correctly, the cli should work right (note that it hasn't been tagged and released yet). I changed a few things around, implemented a few fixes from `win spawn` and successfully installed several apps (just to make sure it works!).\n\n@jsmreese I'm running a similar setup (jruby 1.7.15, Sass 3.4.7 and I'm on Windows 8, best windows there is). Sass was installed via bundler (the gulpfile specifies `bundleExec` on the command too). I wonder if _that_ makes a difference?\n. @gakimball The bundler thing is weird since the method I used should have covered every case. It literally uses a secondary process to run a command. Should've been foolproof, It's what ruby-sass uses to run their command so I'm pretty surprised it doesn't work! O.O I can try to integrate the `win-spawn` package that has a more robust cross-platform solution. I can't test it for others though so it'd be a hit/miss situation.\n\n@narration I have Windows 8.1 64-bit just as you do. The weird thing is, I _tried_ `bundle.bat` and it failed that's why I resorted to the solution I have which really should have been a slam dunk, a last resort that _should_ work no matter what. This discrepancy among the same operating systems sucks. Can't imagine why.\n\nOut of curiosity what version of Ruby are you using?\n. @FlatspinZA thanks for posting that! \n. @narration using a table of possibilities could end with a lot of issues. However, I retested your solution this morning and it seems to work. Not sure why it didn't work me earlier. Definitely much simpler than my solution. \n\nAlso, much to my displeasure, it looks like I never published the bundler fix in the first place -.- >.<\n\nEverything is updated now and working.\n. :+1: \n. @JeroenNoten one thing about using the `application` module is that it doesn't work well with other angular apps. It sets routing so that would most likely break your existing app. Thus the name `application`, as a standalone app. I did open an issue for possibly transforming it into a dependency.\n\nIt's much better to take the application dependencies and import everything module by module (or whatever you'd use) rather than trying to integrate the entire structure. That would make more sense to me. Most of them have internal dependencies set so you'd know what you need to import in order to make it work.\n\nThe only exceptions are `foundation.common.directives` module which has all the directive helpers (`zf-close`, `zf-open`, etc.), and the `foundation.init` module which is required by Interchange (you'll have to check the `app.js` to see how it's used there) for media query extraction and resize event listener\n. I'm going to close this out to continue the discussion in #223 \n. Try doing a manual `npm install`\n. @stryju there are some issues with your code:\n1. there are numerous comments and JSHint declarations that currently do not match the code style of the rest of the application. \n2. you're also using function declarations instead of function expressions. I will eventually move the codebase to function declarations in self-invoking blocks (as per certain AngularJS style guides) but until then, I'd like to keep everything coherent\n3. there's also the case of `this` vs `$scope`. I'm not a fan of using `this` at all in JS since it changes context so fluidly. [SO](http://stackoverflow.com/questions/11605917/this-vs-scope-in-angularjs-controllers) has a good discussion on the $scope. vs this topic, but overall, using `this` is dangerous. \n4. Lastly, the NavController is unrelated to the dynamic routing. In fact, I moved it straight to the actual docs app and outside of the rest of FAs stuff. It's used to generate `autocomplete` for the docs and nothing else. That's why it binds a bunch of stuff to the $scope directly.\n. @stryju the idea is sound and lends extra functionality to AngularJS devs. I like that a lot though I imagine that Angular devs would rather use their own routing rather than use FAs dynamic routing; however, I'd like to add this to the app!\n\nThanks for all the work!\n. @stryju you make a good case for the usage of `this`. I just opened an issue #262 to discuss style guidelines. Once that is in order (and I get the go ahead), I'll start refactoring everything.\n\nAs far as the usage of `this`, I'll go one step further to embrace what the style guides recommend: assigning `this` to a variable in order to prevent context-switching `this`. That would definitely solve the issues I could see propping up while solving the issues you're discussing as well.\n\nIf you can go ahead and refactor your branch to follow the _current_ guide lines and make it mergeable, I can go ahead and merge it in. Let me know if that's cool with you.\n. use $scope for now until the refactor and discussion on guidelines take place.\n. @codymorgan if you use the framework, you can specify a title per view (you'll have to add some logic, check out the docs). It looks like in this case, the different child views were not given separate titles, that's all.\n\nThe history is an intended effect so you can go back through your browsing history of the app.\n. Hmmm, not that I'm aware of. It should be the equivalent of clicking on a link and going to a different page on a static website.\n. Seems to be an error that only props up with non-functioning URLs that don't use the regular `ui-sref` but instead link to nowhere `href=\"#\"`. This causes a JS error (as it should) and will not cause any issues in production. The 2 history states are probably, one to an invalid state and one back to a valid state.\n. @gakimball the template files should be separate 90% of the time. The only exception is for templates that are (literally) one-liners that can be easily read. I'm wary of inlining some and not others. The ones I've inlined so far are usually placeholder templates (like `<div></div>`).\n\n@BraunreutherA I opened an issue to discuss the practices. It may make more sense to have a folder based separation so that `/accordion` has the HTML templates and the JS file together. It'll be easier to import.\n. @davidgeary right, the `app.js` is more of an example. The original point was to have people import everything module-by-module and use `app.js` as a reference on how to initialize everything.\n\nAs far as the folder structure, are you suggesting something like `/zf-components/` with all of the components in there? So `/zf-components/panel` and `/zf-components/interchange`?\n. @kathyqian this should already be implemented. Can you double-check it on your device?\n. There's a Utils factory in https://github.com/zurb/foundation-apps/blob/master/js/angular/common/common.services.js#L120 which holds a throttle. Check FoundationApi for getSettings (https://github.com/zurb/foundation-apps/blob/master/js/angular/common/common.services.js#L29) which will return a list of settings, including the queries.\n. since this is a ruby gem issue and not an issue with FA, I'll go ahead and close this out. If you still need help, you can go ahead and still comment. I know that things are a bit confusing with Ruby on Windows.\n. The router DOES allow named views. I'll definitely look into using that for this applicaiton.\n. @davidkpiano I'll go ahead and use your solution since the dynamic router is currently not setup to support named views on the root template\n. Open up `localhost:8080` and see what shows up. The error basically means that another process is running at the same port. Whether it's a Node process or otherwise. I know that, for instance, Skype runs on port 80 on Windows, and WAMP and sometimes MAMP run on 8080 which would create a conflict.\n\nIf you're on a Mac, go to your activity manager (I think that's what it's called) and search for Node. Kill all that process and try again.\n. This is an unrelated error the to the one in the issue.\n\n Try running `npm install` in the directory. And try to do an `npm install -g gulp` as well to make sure you have gulp installed.\n. @circlingthesun I'm not sure about the value, BUT, it is VERY easy to trigger a modal. And, in fact, you can trigger 90% of the components out of the box. How? `FoundationApi`.\n\nIf you're using a controller, include `FoundationApi` as a dependency (and let's say, name it `fa`). And then just do this:\n\n`fa.publish('id-of-my-modal', 'show')`  and it will show up immediately. If you want to hook into the process, just add another subscriber:\n\n`fa.subscribe('id-of-my-modal', function(msg) { console.log(msg); });` and whenever someone sends a message to the modal (to open it or otherwise), your function will be run as well.\n. @maxcook this is a bug, not something you should have to worry about, you're right.\n. @ilanbiala can you be more specific?\n\n The only errors I've seen are related to the use of `href=\"#\"` which will not show up once the sample apps are implemented into your application.\n. Are you running your application in a subfolder on your app server? That may cause the issue. There are some workarounds for that in order for Angular to know to look into a subfolder rather than root. Might be worth looking into.\n. I implemented all of the features on #300. \n. @akiran have you tested that it still works as an element?\n. @akiran I'll have to change the snippet itself. This directive does not play well with element-style declarations because of its controller and require structure.\n\nIn fact, doing attribute-only or element-only structures work; however, mix and matching will produce errors (so `zf-action-sheet` with a child of `div zf-as-button`. I'd rather stick to one that works than both and have users open up issues that seem to be directly with Angular rather than with FA.\n\nWhat do you think?\n. What I meant was that AngularJS is pretty moody. If you create an entire declaration in elements, it works. If you create it in attributes, it works. You can test it out with the Action Sheet.\n\nTry to use your fix and create one which mix/matches the element/attribute declaration (not restriction, but the actual markup you put on your site) like s;\n\n``` html\n<a href=\"#\" zf-toggle=\"my-actionsheet\">toggle</a>\n<div zf-action-sheet id=\"my-actionsheet\">\n<zf-as-button>my button goes here</zf-as-button>\n<zf-as-content position=\"bottom\">\nMy content goes here\n</zf-as-content>\n</div>\n```\n\nIt immediately fails for some reason, can't figure out why.\n\nAs far as long-term, not sure what I'll decide to do.\n. @stryju right, the problem is the different ways to declare elements. Some people don't feel comfortable creating an `Element` over an `Attribute`. It would make sense to me that both would work the same way but when you mix them, they don't.\n. @akiran i kept running into issues but I'll give it another shot tomorrow. It has happened more than I'd like to admit where something didn't work, and the next day, there were no issues at all.\n. Well, what do you know, it works. I'll go ahead and merge this in! :)\n. ha! Good catch.\n. That happens when a link points to `href=\"#\"` without an event listener to stop its default action. Can you tell me what you clicked on to get this error?\n. Check out the controller code. It stores front matter vars in `scope.vars`. Go ahead and apply the same logic to your own controller. \n. @gakimball I changed a few things around so that the regular JS dependencies (tether, fastclick, etc.) get compiled into `dependencies.js` while all the angular stuff + the `app.js` get compiled to `app.js`. \n\nI'm wanting to do the same thing on this repo (i already did it on the templates). What do you think?\n. Everything should work now.\n. Fixed via #302 \n\nIt currently checks that the click originated from an element that has an `href`. That would make much more sense.\n. Finally fix.\n. Very good to know. I was about to upgrade too. I'm using 1.7.15 as well.\n. @stryju @davidgeary @gakimball I got the initial new structure in place. I was wondering if I could get some feedback! Here are some things:\n1. all components are now in `components/` separated by folder according to what they are.\n2. routing is now separated into `foundation.dynamicRouting` and `foundation.dynamicRouting.animations`. Adding `foundation.dynamicRouting` as a dependency automatically runs the correct initializations. It also contains the `DefaultController` which is used by the dynamicRouting module. \n3. all the components can be imported via `foundation.components` (without importing dynamicRouting).\n4. `foundation.interchange` configuration is now run from the module and does not have to be manually run outside of there.\n5. Everything should be MUCH easier to run and use.\n\nI'll continue with the rest of the changes but would love to get the new structure in place first.\n. One more note, I'm pretty set on the naming scheme which is a combination of namespacing and camelCase. So, for instance, `foundation` is our main namespace. All of our components go under `foundation.components`. \n\nI'm thinking of breaking apart the components and placing them under that naming scheme so there'd be a `foundation.components.accordion`, `foundation.components.common` (for `zf-toggle`, etc.), `foundation.components.modal`. I'm not sure if that's better or using the easier namespacing with `foundation.modal`, `foundation.accordion`, etc.\n\nDynamic routing is under `foundation.dynamicRouting`, which makes sense and its additional animation module can be imported with another `foundation.dynamicRouting.animations`. Though, again, I'm wondering if `dynamicRouting` should be the main import and then split up the rest into `foundation.dynamicRouting.init` (or `.main`) and `foundation.dynamicRouting.animations`. I can see lots of situations where animations would not be necessary. I like that it's camelCase since `foundation.dynamic.routing` just doesn't make sense.\n\nI'd love some feedback on this too.\n. I think I'll make it part of the `foundation.services` module which includes the FoundationApi which houses `globalSettings` that interchange uses to access the media queries and that others can use as well.\n. Urgh, I'm afraid to merge master into this\n. @stryju you're right! I'll go ahead and add that.\n. no, no, the other way, just to resolve conflicts. With all the bug-fixes I've done since I started this branch, I'm a little afraid! :)\n. Urgh, so I am _not_ looking forward to fast forwarding this. it'll probably involve a lot of copy-pasting, and figuring out conflicts. But anyways, other than the require part, this is ready to go.\n. @gakimball how should we proceed with this? We can release this today or with the a future version bump. I'd prefer the latter since there may be some Gulp change this will require\n. Andddd this is ready to go. The only part that I have skimmed on was the `require` part which I feel like is not 100% necessary.\n\nI'd like to merge this in ASAP to master so that any subsequent PRs won't interfere with it!\n\nThanks everyone for all the help!\n. @stryju we'll be releasing a bump this or next week. Next week most likely.\n. @japhar81 I'm not sure why you'd get the error. Have you tried tracking it down the stack? I'll look at it sometime tomorrow or this upcoming week and will let you know what I come up with.\n. Strange. Maybe @gakimball can shed some light on this as well. It seems to work correctly on Firefox and when I inspected this step-by-step, there is only ONE element. It seems like Chrome keeps a second rendered copy for some reason, that's not present in the DOM.\n\nI tested this out several times and at certain times, I had only half the element showing (the one in place, not the animating one), and sometimes it worked just as expected.\n. I think a `-webkit-backface-visibility: hidden;` added to the animation elements (and possibly the parent) will fix the problem.\n. @wtfribley can you tell me which ones you experience this behavior with? Perhaps I can translate the class from the initial directive declaration to a more suitable target element\n\n@gakimball where do you see that? I might have fixed this bug with refactor because the overlays don't appear for me in the examples. (except where they should)\n. @gakimball if you remember, setting `overlay-close` automatically overrides `overlay=\"false\"` so that the overlay show ups. I can change that if you want.\n\n@wtfribley thanks! I'll get that taken care of.\n. @gakimball sounds good! \n. @gakimball the built-in animation is `fadeIn` and `fadeOut`. If it slides, that means that there is an animation defined directly on the `notification` element. And indeed, there is a transition: transform on it and translation. We'd need to cut that out, and it should work as intended! :)\n. sounds good!\n. @gakimball we're using this class, hardcoded, as part of all the directives. Since we `globalSettings` is available via the FoundationApi, perhaps we can use it to specify custom active classes on the front-end, too.\n. @gakimball sure thing\n. @gakimball I keep getting an error when running Gulp:\n\n`Error: app.scss:1:1: Unclosed block`\n. I was going to open the same issue this morning! :) Glad to see others thinking along the same lines.\n. Does the panel itself flash or are you talking about the how the scrollbar shows up on the side?\n\nI'm on Ubuntu 14.04 Chrome 38 and couldn't replicate the issue (might be the version bump).\n. @gakimball I was thinking of modifying the animation method in FoundationApi (how our various elements animated) to add an `animating` class or similar. Would it make sense so that we can prevent issues like this?\n\nFor instance, we could do:\n\n``` css\n.animating {\n  overflow: hidden;\n}\n```\n. Urgh, so it turns out it's not a panel issue. There's something about the animation that makes the `grid-block` several parents up get a scroll bar. Removing the `relative` declaration on grid-block fixes this problem; however, I'm not sure how that would play out with the rest of the CSS so I can't foresee a solution to this.\n. Right right, that makes sense. So what would you propose as a solution?\n. @akiran I'd like to merge your PR in; however, it looks like we merged in some changes that makes yours unmergeable. Can you make the proper changes to make it mergeable? I'll go ahead and merge it in then.\n. sounds good!\n. @akiran there's a pull request #282 that I'll be merging in this week (as soon as possible). It'll do all kinds of cool stuff. One of the major changes is changing the root module's name.\n. I'm working on a refactor #282 that will package most of foundation configurations and dependencies into a module called `foundation` that you can include and it'll already set a bunch of stuff up for you. There's also `foundation.dynamicRoutes` and `foundation.dynamicRoutes.animation` and those are for the dynamic routing.\n\nWhen working on your own project, just include these dependencies as well as their dependencies just like you listed. You'll also need to setup your $locationProvider; however, all of these settings are trivial to create and should not be dependent on FA, if that makes sense. So any changes to your `app.js` will come from you while any changes to configuration, directives, directive templates, etc. will come from the FA repository/package.\n\nDoes that make sense? \n. @micjamking the CLI tool is not necessary for this process. You can do exactly what you said, and use Gulp or other build tool to pull in all the necessary files and include them.\n. Since Foundation became a module in itself, this topic is a little moot. Closing it out.\n. Not a JS error, we literally have two modals with the same name and markup. One of them has an overlay, the other doesn't. So both get activated and then on-click, the only one of them turns off. On a secondary close, they both try to \"animate out\".\n. @gakimball seems like Windows has issues with it. Whenever I git clone it, it comes back with `Docs` only while my regular repo has `docs` and will pull all changes there.\n. Nvr mind Fixed.\n\nWe really need to avoid having this happen again because it essentially overwrites the history of `docs` each time.\n. Well, that's why there is vanilla [Foundation](https://github.com/zurb/foundation) that you can use purely for the styling. It's just about the same when it comes to markup and the way it looks. Durandal even mentions the integration.\n\nHowever, when Bower installing FA, you can still just compile the CSS and work with that. FA is supposed to be a full-package: CSS + JS, not one or the other even though it _can_ be used that way too.\n. @stryju thanks for looking through it. `ngAnimate` is used in the `foundation.dynamicRouting.animations` in the form of an animation. And even then, I use ngAnimate-like logic within the animation. There are several reasons for that and if you can think of a way to avoid using it this way, I'm all ears:\n1. in the `.ui-animation`, we're using animation information that's contained in the scope via the `DefaultController`. The animation information is dynamic since it comes from the templates and is injected at runtime into the router as view information. Because of this, I had issues setting up an animation using regular classes. Instead, the `ui-animation` animation replicates the ng animate behavior. And unfortunately, using `ng-class` would trigger the wrong transition as the class would not be immediately rendered and thus cause a \"flash\". \n2. the reason for the `animate` service in FoundationApi is pretty much the same except that it's used within directives. The reason for that is two-fold. One is that we use an `is-active` class for non-animated toggling, this class is necessary and there seems to be no way to time the correct addition/removal of the class using `ngAnimate` and the second is that we activate the directives at various times in the runtime. Meaning that it's not a simple animation that shows up whenever the directive is rendered.\n\nDoes that make sense?\n. @stryju yeah, go ahead and setup a feature branch and I'd be more than happy to discuss it and find the right solution. There are some issues I see with `$animate`. It seems like all it does is add a class and nothing else. But I could be wrong. The documentation is a little fuzzy to me on that.\n. @stryju The cut off is there to prevent any animation misfires from keeping the element in place. IIRC, Angular sets this to 10000ms. I can go ahead and increase the timeout.\n. There was also another reason for custom animations and that was the addition of a class to absolutely position the transitioning views. \n. Hmm.. I'm not sure of the benefit here. While we'd save on JS, we'd end up having to write twice as much CSS just to accommodate this new style of animations. \n\nI do like how much JS it saves and offloads the animation logic back to Angular. Idk. I feel like I'm on the fence with this. It _seems_ like the right solution for the obvious use-case (views, and we could make this work for the various directives as well) but we wouldn't be able to make this work for regular ng-enter/enter-active and ng-leave/leave-active use-cases.\n\nIdk, I'd like a third/fourth opinion on this. \n\n@jeaniec @gakimball what do you think of this?\n\nTo summarize:\n1. we'd replace all of my custom animation logic (that's almost just like Angular's animation logic) with Angular's built-in `$animate` service, this would offload our logic back to Angular.\n2. The change would require changing all of the MotionUI classes to work with `.[animation]-add` and `.[animation]-add-active`.\n3. We would either have to double up our CSS to work with `.ng-enter` and `.ng-leave` or drop those altogether. This would mean, built-in animation support for `ng-if`, `ng-repeat`, etc. would be dropped as well.\n\nThe change in JS is trivial to make (at least by the looks of it).\n. @stryju I'm not sure what you mean by those two bulletpoints. Can you elaborate? And what do you mean by \"hacky\" states transition? \n\nI understand your point, unfortunately Angular doesn't have an easy way of specifying custom enter/leave classes, otherwise we could emulate `ng-enter` and `ng-leave` just like in my original code. Without it, we'd have to double up our work in the CSS instead of JS. And since our JS does almost the same thing that Angular does (with WAY less code), we wouldn't lose much on that side. \n\n@gakimball suggested that we can just extend the selectors. If that works, I'll go ahead and test all this out. That could benefit all of us :)\n. @stryju a `zf-view` was part of my original solution but what we had then didn't work with it. Go for it and make sure to submit a PR so I can easily pull that in and test it out as well.\n\nI'll go ahead and use your example to test out the new SASS class-system that Geoff is working on and see if we can make THAT change without affecting much of anything else.\n. @gakimball will do!\n. @stryju go ahead and submit this as a PR so we can comment and discuss the code straight on there. \n\nOther than that and some code stylistic changes, this looks mighty impressive. If it works as you describe, I'd love to get this merged in. \n. sweet! Thanks!\n. @stryju it's always on the list. I totally agree. \n. If you look through the code, you'll notice that whenever I inject `FoundationApi`, I inject as `foundationApi`; however, to avoid confusion, I'll go ahead and merge your PR. It makes more sense that way in an example! :)\n. The `zf-as-button` directive _has_ to be inside the `zf-action-sheet` directive. It's not a separate directive but rather a part of the `zf-action-sheet` directive. Hope that makes sense.\n\nHowever, you _can_ use your `zf-hard-toggle` the way you're using it. In that case, the `zf-as-button` directive is superfluous..\n. It's because actionsheet is currently not \"closeable\". I'll go ahead and get that fixed up.\n. Good catch. I'm submitting a fix.\n. Fixed\n. @akiran good point!\n. @akiran good catch on this!\n. @stryju I'm liking this. Once we make the CSS changes, I'd like to get this launched for v1.1 and then start work on getting this working with the various directives.\n. oh, awesome\n. @stryju so I'm having some issues with this, same ones I had when I initially worked on the animations.\n\nHere are some things:\n1. the animations experience a flash when loading up. Meaning that the element shows up, disappears, and then animates in.\n2. the \"out\" animation sometimes works and sometimes doesn't. It looks like it stops working if the other view is not animating. It also simply cuts short for no reason.\n\nHowever, I do like the fact that we got rid of the whole-page animations that used to happen whenever you'd load up the page.\n. @stryju can you tell me what your testing setup was? I simply added `animationIn: fadeIn` and `animationOut: fadeOut` to a couple of the pages and switched between them, that was it.\n. You can go ahead and remove them. Try running in these on the docs and you'll see what I mean. I wonder why it works in your example and why it would fail on the Docs.\n. Damn, this is bizarre.\n. merge in our newest master and comment out the prefixer, that should solve your problem for the time being.\n. go to any of the page templates (like `angular.html` or `motionui.html`) and add the animations to the front matter. Open up the docs, and switch between those two pages. \n\nBtw, @stryju I'm wondering about using these animations on directives. I had this idea to do the following:\n1. use `ng-if` on all the directives instead of the `is-active` classes. This would ensure that elements _can_ be animated if they have animation-enabled classes attached to those elements.\n2. add `animation-in` and `animation-out` classes to the directive. Since they only get triggered when `ng-[leave/enter]` is added, they won't wreck havoc. \n\nThis would make sure that the regular ngAnimate module would animate everything without our help. What do you think?\n. @stryju let's leave the component animation for later. We can convert those for the next version after 1.1. I'd like to get these view animations fully ready. They seem to be 99% there, except for the issues on Chrome on Windows.\n. I don't understand. So if the entire page is not animating, the view animation breaks? Or are there specific elements that mess up the view animation?\n. @stryju hmm. The animation does seem to stop working for the text element. I'm still having problems with the animations not working when switching to a non-animated view. \n\n@gakimball I had some success with the solutions we came up with for #283. \n\nI'm thinking that this change might not make it to the next version because of these issues.\n. In that case, we'll need to add the `position-absolute` class to the parent until the view that's entering is done entering. But that's a good point, I didn't think about that, thanks.\n. Right. So that's a good thing. I'd rather not deal with that. \n. @stryju I'm gonna go ahead and pull this locally and try to do some work on it. I'm not sure how I can work on this collaboratively since this is off your repo but I'll give it a shot.\n\nJust some notes and todos:\n- [ ] absolute positioning of parents\n- [ ] backface visibility in animation\n- [ ] testing on various browsers\n- [ ] move absolute positioning to utilities (this is my fault, I've no idea why i didn't move it)\n. That's what I'll do! :) I've no idea if I'll have to open up a PR for it on your project or what. This stuff is pretty confusing.\n\nI guess we'll deal with that as we go.\n. Good idea on that. There's somewhat of a rift between the element usage since we want to support both developers that don't know Angular well but want to use the more dynamic features like modals, notifications, etc. and developers that already know Angular want more power-user features.\n\nFeatures for the latter type of a user are definitely lacking because, as you said, pretty much all the components should have services that create them and don't require in-template directives. If I have time, I'll go ahead and prototype a modal service that we can also port to other components.\n. Modal factory is now available in the code under, you guessed it, `ModalFactory`\n. wohoo! :) :+1: \n. @akiran I'm working on a method to queue animations, that would allow us to send a message to toggle an element but it won't toggle until an animation is done. \n. If you pressed toggle mid-animation, the animation would finish before it toggles back out. I think that'd be desired behavior.\n\nThere's also something else I thought about, and that's running `$scope.apply()` BEFORE the animation is run. I wonder if that'd make a difference since it seems that the issue is that the wrong animation gets run and when it finishes, the wrong state gets applied.\n\n**EDIT** Makes no difference.\n. @akiran makes sense. I think that long-term, I'll have to implement angular's built-in animations. That's being done as part of #330. I think for v1.1, I'll go ahead and use the queue work-around.\n. Fixed with #341\n. #388 fixed this! :)\n. O.O I got the animation cancellation working. This should fix a bunch of issues.\n. @akiran can you test this out and see if this fixes the animation problems and works as you would expect? It works for me but I wanted to make sure before I merge it in! :)\n. As long as you use the Iconic directive, it should work as described. Are your icons showing up when they're not dynamically injected?\n. Hmm.. that's an interesting use case. I'll open up a PR for Iconic to allow dynamic injection.\n. Look out for another this weekend! Thank you! :)\n. Foundation 5 and Foundation for Apps have a difference codebase. If you check out the `scss/helpers/_breakpoints.scss`, you'll notice that on line 166 that we'll eventually have those breakpoints implemented.\n\n@gakimball can shed some light as to when (and if) that will happen.\n. The CLI actually pulls in a copy of the [Foundation for Apps Template](https://github.com/zurb/foundation-apps-template) which has a bower file that gets installed. By default, it pulls in v1.0.0. You can change this to pull in specifically the latest version by copy/pasting the zip-file download link: https://github.com/zurb/foundation-apps/archive/master.zip <- note that this is not the preferred way of doing things and bower will NOT cache this file (whenever bower installs dependencies it saves them in case another project will need them or you need to reinstall).\n\nYou can go ahead and use this method. There _were_ some file structure changes since the last version update so make sure to update your Gulpfile with what's in the v1.1 branch of FA Template repo: https://github.com/zurb/foundation-apps-template/pull/15/files Also, if you're not using your own custom `app.js`, take a look at the one in that branch.\n\nHope this helps! Again, it's not the preferred way of doing things (we'll be coming out with a new version soon) but you can get up to speed that way.\n. I did a huge refactor last week that allows for FA to be used as a dependency to your own application. That would probably fix some of your issues.\n\nHowever, can you provide us with your controller definition and the error you're getting? There might be something else you're missing or that I may help you with. Also, are you using your own custom `app.js` that defines the entire application or are you using what's in bower_components?\n. Hmm. it worked for me.\n\nAre you sure it's being loaded after Foundation? And does everything else from Foundation work for you?\n. You shouldn't need to put it in app.js as long as your controllers file is loaded after Foundation and Angular (which seems to be the case). :/ Hmm.\n\nCan you by chance put this up on Plunkr or a git repo?\n. So I got it. The `controller.js` file doesn't get included anywhere nor does it get compiled down. Go to your Gulpfile line 43, and change `client/assets/js/app.js` to `client/assets/js/*.js`. I tested it and it fixed the problem.\n\nMake sure you reload your gulp process and don't forget to post back when it works! :)\n. Also, thank you for posting the repo up, debugging was _much_ easier that way.\n. Just keep the `*.js` in there :)\n. @thylo I encountered a bunch of bugs with the notification not responding. I'll have to look into creating a more permanent solution. \n\nCan you give me an example of how you used this in a way that created the original error? Because I can't seem to recreate it at any point.\n. @thylo thanks. So, I'd like to propose two other possible solutions:\n\n``` js\nif(!scope.$$phase) $scope.$apply();\n```\n\nor\n\n``` js\nscope.$apply(controller.addNotification(msg))\n```\n\nCan you try either of these and see if they work for you? If they do, just change the code to work with _one_ of these (I'd prefer the bottom solution) and I'll go ahead and merge it in.\n\nThanks for your help with solving this issue! :)\n. @maxcook I wasn't aware of any issues there. Can you open a new issue and describe the problem? \n. @akiran I don't understand. You're using the `src` attribute to be applied to `data-src` but in your example you're only using `data-src`.\n\n Either way, I think it'd make sense to have a `dyn-src` that you can send a variable to without having to use `{{ }}` inside an attribute (something I'm not a fan of). But to make sure we can cover as many developers as possible, I'd like to have both. \n\nCan you change the file to not delete the `dyn-src` but keep your fix as well?\n. I would NOT recommend running Gulp in a production environment. Gulp and even a Node process can crash without being restarted because of all kinds of different errors. Instead, if you want to run a Node process, use `forever` and build your own `app.js` to run a static server (because that's all you really need). There are some other configurations you'll need to figure out (such as if you'll run `forever` on port 80, or use Apache/Nginx to point to the forever process port).\n\nWhen you upload the files to your server, running Gulp once should setup all the production files (the `/build` folder).\n\nHowever, you can make your life much easier by running any kind of a basic static server such as with Apache or Nginx and just run everything static, pre-build the files locally and FTP it up. Or install Node and build files after deployment. \n\nThere's really not a need for anything outside of static file serving.\n. @LuminusDev not a bad idea. Would you mind writing out some docs on this process [here](https://github.com/zurb/foundation-apps/blob/master/docs/templates/angular.html#L327)? I think a lot of users would appreciate it. If you can't, I can go ahead and write it out. \n. That basically means that another Node processing is running or another application is using the port `8080`. See if you have WAMP or similar running on your machine and turn it off. If not, check the Gulpfile JS and see if you can change the NodeJS port from `8080` to something else (`3000` is a standard)\n. Hey guys, can you show me the entire controller or whatever that you used to run this? It's possible it wasn't injected properly. Also, does anything else run for you? Popups? etc?\n\nFoundationApi is a service part of the `foundation.core` module which is included in the `foundation` module. It includes a pub/sub system that ties all of the foundation components together. It has to be injected into something else to use it (like a controller or your own custom directive).\n\n@vincentmorneau \nAs far as the link you sent over, I didn't experience any of those issues when I went to it. Can you give me your OS and Chrome version? Thanks!\n. @vincentmorneau FoundationApi is not globally available. It's a service that has to be injected into an angular module to be used so it cannot be run globally the way you did in the console. This is part of AngularJS basics.\n\nCheck out, for instance, the modal component and its `modal.js`: https://github.com/zurb/foundation-apps/blob/master/js/angular/components/modal/modal.js\n\n``` js\n  angular.module('foundation.modal', ['foundation.core'])\n    .directive('zfModal', modalDirective);\n\n  modalDirective.$inject = ['FoundationApi'];\n\n  function modalDirective(foundationApi) {\n   //directive code\n  }\n```\n\nThe modal module itself requires the `foundation.core` which includes our FoundationApi service. Then the FoundationApi is injected into our directive. This could be rewritten in a more familiar form as:\n\n``` js\nangular.module('foundation.modal', ['foundation.core'])\n  .directive('zfModal', ['FoundationApi', function(foundationApi) {\n     //directive code\n  }]);\n```\n\nYou can create a new directive or trigger a modal opening (or whatever action) via a controller or another different programmatic way but it has to be through AngularJS conventions so that it gets injected and properly used.\n. @vincentmorneau have you had a chance to look over what I wrote and try it out?\n. @vincentmorneau yes, there is a way to launch a modal page and just about every other FA component programmatically.\n\nUnfortunately, it _does_ require more thorough AngularJS knowledge especially of controllers. I wrote a [beginner's guide to angular](http://antjanus.com/blog/web-development-tutorials/front-end-development/comprehensive-beginner-guide-angularjs/) last year that can give you a quick crash-course to everything Angular. That may help you out.\n\nHere's a sample controller that may do what you're thinking of and once you grasp the basics of Angular, you'll have an easier time understanding what's going on and figuring out better ways of opening modals, etc. :\n\n``` js\nangular.module('application')\n   .controller('MyController', ['FoundationApi', function(FoundationApi) {\n     this.openModal = function() {\n      FoundationApi.publish('my-modal-id', 'show');\n    };\n}]);\n```\n\nand with accompanying HTML:\n\n``` html\n<div ng-controller=\"MyController as myCtrl\">\n   <a href=\"#\" ng-click=\"myCtrl.openModal()\">open modal</a>\n</div>\n```\n\nSince this is no longer an issue on a bug, I'll go ahead and close this out but feel free to comment on the issues with any further questions.\n. huh, didn't realize. Thanks!\n. @akiran I can take care of that part.\n. Hmm, I'll look into it further. Thanks for researching this issue.\n. Can anyone test if this issue is still there? I'm 99% sure I already applied a fix. \n. Not a bad idea. How would you want to structure it? As a separate service maybe? `foundation.interchange.service` that'd be required by `foundation.interchange` by default but could be used separately?\n\nI don't think I'd want to bundle it into FoundationApi (that one has quickly become a bloated service).\n. If you can put together a PR, that'd be fantastic. We can further discuss it there and refine it. \n. @nathanmarks yep! There are several reasons:\n1. This is how it works in Foundation, and the original implementation was a _bitch_ to port over.\n2. I had _just_ found out about this feature\n3. By the time I ported it over, I found out about the listeners portion\n4. I told myself, \"I'll definitely rewrite it and use these fancy listeners!\" but forgot.\n\n:) In short, yeah, this is definitely on a list somewhere and thank you for mentioning it!\n\n_edit:_ There was also the the problem of picking only the last available selector in the list so that if you write down:\n\n```\n<div media=\"default\"></div>\n<div media=\"small\"></div>\n<div media=\"large\"></div>\n```\n\nThe last matching one on the list would show. Because of the mobile-first approach, all 3 of those would match a full-sized window but only `large` _should_ show; however, the re-evaluation of what I called \"scenarios\" in the code, could be done every time `matchMedia` fires one of the listeners.\n. I'd love to see your code! I'm about to merge some refactors in, nothing major but it separates the Media query stuff into its own service (literally just cut/paste code from interchange into a service).\n\nIf you already have a working mechanism, it'd be awesome if you could submit a PR. We can either merge that in, or I can take that over.\n. @nathanmarks Awesome! :) I just merged it in so you're welcome to go off master. \n. Current issue:\n- [x] scrollbar appears on animation change. I tried to do overflow hidden, I'm probably screwing something up.\n. Seems like I worked out the issue. @stryju can you test this out and let me know how it works for you? I'll go ahead and start on a refactor when everything's up and running correctly.\n\nI also have some reservations about the code style so I'll update that to fit the rest of the codebase without touching the experimental code. \n. Alright, so I found _no way_ to store reliably _if_ a height was preset or not, nor setting an initiator due to some scoping or variable issues. I decided to go against it and am thinking that we can just merge this in _as is_ and deal with the height issue at some later point.\n\nI considered having a specific `ui-view-container` directive which would store height and temporarily change it upon request. Not sure if that's too much.\n\n@gakimball what do you think about getting this merged in? The only remaining issue is that if the `ui-view` parent has a `style=\"height: whateverpx;\"`, the height would get erased.\n. @gakimball the `ui-view` will be positioned absolutely which means that any elements after them will _jump up_. This is why we can set a height to the parent in order to prevent the jump. This height is set via `style=\"height: Whateverpx;` and then unset (just as the absolute positioning is unset). \n\nThe problem is with people who may set a height on the parent via the style attribute because it'll get overriden by the animating `ui-views`. Does that make sense?\n. Ah, hell, This is by far the most frustrating PR I've worked on. Current status: does not animate correctly -.-\n. I ended up in a dead-end. For some reason, certain animations work perfectly while others don't. For instance, I applied a `fadeIn` and `fadeOut` to Angular and Angular-modules pages to test them out.\n\nThey work 100% correctly one way but the other way they fail. Which is bizarre since they both have the same animation applied to them. Then there are issues with several views (during my test), simply _not_ animating despite following the proper animation procedure which makes me think that this might be a browser thing? But I'm not sure.\n\nEverything is as close to being done as possibly except for these few kinks.\n\n**EDIT** I'm thinking that this might be a better alternative to what we have anyways but idk.\n. Currently there is no way to do this; however, the dynamic routing in FA is meant to be used in the most basic sense and for rapid prototyping. More advanced features should be left to a more conventional routing built out the angular way.\n. UI Router does support it; however, we have not exposed that functionality in the dynamic routing scheme so you can't do something like this:\n\n``` yaml\nname: mypage\nurl: /home\ncontroller: MyPageController\nresolve: function() { var some; code() };\n```\n. You don't have to deal with the core at all, just disable the dynamicRouting function and use your own router declaration. \n. Hmm, I'm not sure if I'm understanding correctly. Are you talking about building out a separate service per module that could activate/deactivate them instead of a service that can activate any module?\n\nI'm also working on a factory for modals that would allow us to create modals programmatically (rather than with separate markup) and that one _will_ have an activate/deactivate member built in; however, it will have the ability to be activated/deactivated via FoundationApi as well. Is that more along the lines of what you're thinking?\n. Hmm.. I'm not sure if I agree with creating a separate service for each module. I kind of like the idea of having a central adapter that activates/deactivates components and then the components themselves handle how that happens. \n\nThis is so that the existing implementation of components and their activation stays intact and still available to new users. It also follows the way the components talk to each other behind the scenes.\n\nHowever, I think that once I'm done with the prototype ModalFactory, you'll see something more angular-like behavior with the factory creating the component directives and controlling its activation state.\n. Hmm. Alright. That's a fair point. I'll prototype something out and see how it looks.\n. Perfect!\n. That's already part of the directive! You can call `scope.hide`, `scope.show`, and `scope.toggle`.\n\n@circlingthesun what do you mean by results? Oh, and some code has already changed since this last commit. I'll definitely add the custom scope option.\n. @gakimball That's where I was headed with this next! =D Currently, the prototype already attaches but does not activate, no clue why. But I'm sure I'll get that resolved tomorrow.\n. Alright, so I ran into a big-time snag that would prevent the factory from firing off proper `activate` on the modal after its initialization if the code was synchronous. Basically, if we want to default fire the modal by a controller right after it's created, the modal won't even be ready at that point.\n\nI already asked about it on SO since there's not much documentation on it and no SO questions. http://stackoverflow.com/questions/27869320/how-do-you-create-compile-a-directive-via-a-factory\n. Phew, got this resolved. For anyone wondering:\n\n$compile seems to run async and thus it's possible to run into severe race conditions. It's possible to preload `scope` for compile with initial data such as activation right from the start. This way, we can tell the modal to compile as an active element! The `foundation.publish()` function will initially publish to an empty subscriber (if the `activate`, `deactivate`, and `toggle` methods were run too early in the app cycle) but that's totally fine! :)\n. Improvements:\n- [x] pass data with scope rather than poorly formatted HTML string.\n- [x] create an `init()` function for the modal itself to run against itself at the end of a compilation.\n. @circlingthesun The code is pretty much done, can you suggest a way to add this additional functionality? I'm imagining using `$q` and `deffer`; however, if one was to _not_ use `then`, I still need the activate function to fire.\n. There were some fixes that went out the door a few weeks back, and one specifically regarding this issue, are you on v1.0.2?\n. I'll be adding these to all the pertinent directives as I build factories for them.\n. It's been added to notification and modal. We'll add it as needed. I'll close this out.\n. @etcook I'm currently off the project. I'll go ahead and reopen this issue for someone to check up on this.\n. I've changed some things around. Can you do a pull and test it out?\n. Yay, age old bug fixed.\n. @circlingthesun this is the start of the adapter I was thinking about and I'll start porting it to the facades (I still want to have a central adapter). So the facade would look something like:\n\n``` js\n  FoundationModal.$inject = ['FoundationApi', 'ModalFactory'];\n\n  function FoundationModal(foundationApi, ModalFactory) {\n\n    var service    = {};\n\n    service.activate = activate;\n    service.deactivate = deactivate;\n    service.newModal = newModal;\n\n    return service;\n\n    function activate(target) {\n      foundationApi.publish(target, 'show');\n    }\n\n    function deactivate(target) {\n      foundationApi.publish(target, 'hide');\n    }\n\n   //sugar for ModalFactory so that it doesn't have to be accessed directly\n   function newModal(config) {\n     return new ModalFactory(config); \n   }\n  }\n```\n. I'd like to keep them separate just in case. But cool. I'll go ahead and code all this up.\n. Hey guys, this is good to be merged in if anyone wants to go ahead and do it :)\n. So this is just a light refactor that was meant to make things a little cleaner. I started working on the #382 abstract matching service, mainly by taking some of the interchange logic out and throwing it into the FoundationMQ service (though, I'd like to find a better long-term solution for this!).\n\nAnimation is in its own module as well.\n. @naneer that feature is already available! :) The front matter works off basic [YAML syntax](http://yaml.org/) so what you can do is: \n\n``` yaml\ndata:\n    requiresLogin: true\n```\n\nThat should work.\n\nI made a video demonstrating some of these features, [check it out](http://youtu.be/Vf8Ucn67flI?t=17m52s) (make sure to watch it far enough where I demonstrate that it works, I fumble a few times).\n. @soumak77 if I understand this correctly you're proposing the plugin:\n1. creates a module that sets up the routes\n2. appends the routing to an existing file rather than creating a new one that just holds the routes.\n\nIs that correct?\n\nOn the first point, I saw that you're using `fs.appendFile` for both non-module and module declaration. Does append file write a file if it doesn't exist?\n\nThe code looks sound. I'd suggest that the `writeData` function gets the `appendingToFile` option passed in order to avoid scoping problems.\n. @listepo 90% of the functionality in FA is very simple: add \"is-active\" to active an element, and use other classes to modify component behavior. You can easily rip out the styling from FA and wire it up with any other framework.\n\nAs far as routing goes, that's Angular specific; however, you could still use the front-end router (the Gulp plugin) to create an object and parse it for your favorite router as well.\n\nHowever, there are some forks that work with other frameworks in the [resource section](https://github.com/zurb/foundation-apps/wiki/Resources) if you'd like to check that out.\n. @romainfrancez will this change prevent any bugs? If not, it looks like the check alone will require way more code than it's worth.\n. @tvuotila after a quick `git blame`, it looks like I'm responsible for that code. I believe everything works as it should, and if it does, let me offer a quick explanation as far JS goes:\n\nUsing `||` is a shorthand to create a fallback in variable declaration. For instance, check out this code:\n\n``` js\nvar myArr;\n\nvar newArr = myArr || [];\n```\n\nThis code will check if `myArr` is defined and not null. If it is undefined, it'll fallback to the `[]` value. \n\nUnfortunately for me, now that I'm looking at it, there's no way to actually set this value to `false` because this simply gets evaluated and will always end up as `true`. It's definitely bug-causing code which makes me wonder how come it seems to work. One possible explanation is that the Controller gets evaluated _before_ the `zf-accordion` directive. This would mean that it's using strings to create defaults. So rather than:\n\n``` js\nscope.multiOpen = false || undefined || true; // which would default to true\n```\n\nWe're evaluating what users pass in as a string:\n\n``` js\nscope.multiOpen = \"false\" || undefined || true; // which would evaluate to \"false\"\n```\n\nSince all of the variables are just references to the `scope` object, our directive than converts that string into a boolean. The fickle thing is that one simply can't do a `!!$scope.multiOpen` because in that case, the string \"false\" would equal to \"true\".\n\nPerhaps a good solution would be a helper function in this module that converts strings to booleans:\n\n``` js\nfunction booleanize(val) {\n  if(typeof val === 'string') {\n     return val.toLowerCase() === 'true';\n  }\n\n  return !!val; //default boolean coercion\n}\n```\n\nAnd then replace some of the logic in the controller. This brings up another issue though, we want to make sure that if a value is _actually_ set and no undefined, we want to use that value. So perhaps, the best way to approach this would be:\n\n``` js\nvar collapsible = controller.collapsible = $scope.collapsible = booleanize(pickDefined([$scope.multiOpen, $scope.collapsible], true));\n\nfunction pickDefined(valueList, default) {\n  for(val in valueList) {\n   if(typeof val !== 'undefined') {\n     return val; //break loop, exits out of function\n   }\n  }\n\n  return default;\n}\n```\n\nI hope that whoever works on this PR can use some of this code and can follow my logic!\n. The `EADDRINUSE` is an error telling you that something is sitting on your port 8080. It looks like you might be on OSX so I quickly looked up how to determine what's running on port 8080:\n\n```\n sudo lsof -i :8080\n```\n\nIf it says `node`, you can go into your activity manager and kill it and try again.\n. @mattgrande I had no idea about geoff leaving. I was a contractor so it was kind of understood that I'd work on this only for a short amount of time.\n. The SASS part can be used without Angular; however, the JS interactions are Angular based.\n. related to #812 \n. I wonder how this will go. I really enjoyed developing the original base Angular for the library. \n. @tolyo I still have rights to the project but I don't believe it'd be appropriate for me to contribute.\n\nI think an open-source fork would do it. Just do a fork, call it \"open-foundation-apps\" or `base-apps`, replace the prefix `zf` with `of/ba` and go for it. I'm not sure if `foundation` is trademarked but I doubt it. \n\nIf no one is interested in taking on that responsibility, I'd be happy to fork it under a new org name, publish the new packages to bower/npm, manage rights to the new repo and open it to you guys, etc. I just don't have time to actively contribute. \n\nIn fact, if I can get at least a few people to support  showand help me come with a name, we can do this ASAP that way the project can live on in true open source fashion. \n\nI have an org that I haven't used in forever called [Lernaean](https://github.com/orgs/Lernaean/dashboard) and I can fork `foundation-apps` and the entire suite (the CLI, gulp plugin, etc.) there replacing the word `foundation` with `base` just to avoid confusion, give proper credit, and we can all get going from there. But I'm open to other suggestions (a new org name, naming conventions, etc.).\n\n@soumak77, @tolyo, @HoldenCreative, @tunecino , what do you guys think?\n. @soumak77 @tolyo I'd be more keen on starting a new org and giving a few key people org rights. If you fork it to a personal/work org, same thing can happen as it did in this repo: you stop using it and the repo gets stuck in a commercial organization. I think it's a better idea to have a new org that anyone, including the original creator, can give up rights to without minding it. \n\n@Gambero81 no one in this thread as far as I know.\n\n@HoldenCreative I agree we just need to agree where to fork it and under what name so that we can get started. \n\nAs the saying goes:\n\n> There are only two hard things in Computer Science: cache invalidation and naming things\n\nAs far as the organization name, here are some of my ideas (mainly bouncing off the idea of using \"base\" and \"open\"):\n- `base-apps`\n- `open-modules`\n- `baseware`\n\nAnd for the actual repo, we can do \"Angular for Apps\" though that seems a little redundant. If any of you guys can vote on these or come up with new names:\n1. `base-apps/angular-apps`\n2. `open-modules/angular-apps`\n3. `baseware/angular-apps`\n. @soumak77 I'd do a clean fork and start a community around it. I realize that you're using the new framework but honestly, I did a diff between your fork and the official repo and it's only 300 line addition / 150 line deletions which is pretty skimmable.\n\nWhat we can easily do is when we do the new fork, open a pull request from your repo, and start discussing the changes and if they work for the community. That way some/most/all of your changes can exist in the new official repo and your fork can just get the updates from the new official repo as it needs them. \n\nWhat do you think about the names?\n. Basically, guys, I'm thinking of an IO.js-style fork of this repo. All I want is a name and we can start the work on this. \n. my bad! :)\n\nI'm not a fan of tying it to just angular in case people with alternatives in other frameworks want to contribute and add. I guess I'm trying to think of having a long-term org that can house dead projects that the community still wants to support.\n. Alright, done. https://github.com/base-apps/angular-base\n\nI also opened an issue [what needs to be done for initial release](https://github.com/base-apps/angular-base/issues/1) where we can discuss publishing this.\n. ",
    "ZachMoreno": "+1 on the syntax highlighting directive\n. +1 on the syntax highlighting directive\n. ",
    "davidkpiano": "**If you do develop in Angular, would you just rip this stuff out when you went to production?**\nI do develop in AngularJS and I can see the utility of using this in development, but yeah, I'd rip it out in production.\n\nSuggestion: why not group animations? If I do this:\n\n```\n---\nanimation: fade\n---\n```\n\nthen that would signify that I want a simple fade in/out animation for entrance/exit. It's unlikely that I'm going to do anything crazy like:\n\n```\n---\nanimationIn: fadeIn\nanimationOut: slideOutLeft\n---\n```\n\nbut I do appreciate the option to do that.\n. @gakimball @whodidthis brings up a valid concern. I know that AngularJS is the current hotness, but coupling components strongly to AngularJS directives makes them very inflexible for other framerworks, such as Ember, Knockout, etc., and even jQuery (not a framework, but still).\n\nIf the components uniformly reacted to change of state (and this can be an attribute or class, doesn't matter), it would make integration into other frameworks (or even vanilla JS) much, much simpler. Here's a semi-pseudocode example:\n\n``` html\n<div class=\"panel\">This panel won't slide out, yet.</div>\n<div class=\"panel active\">This panel will slide out, since its state is now active.</div>\n```\n\n``` scss\n@mixin panel(... $active: '.active') {\n  // inactive transform state; e.g. transform: translateX(-300px);\n\n  #{$active} {\n    // active transform state; e.g. transform: translateX(0);\n  }\n}\n```\n\nAnd then in JS, you can use _any_ framework/library to simply activate the state of the component by adding a class/changing an attribute, and let the CSS take care of the rest.\n. **In general, do you think the panel/block hybrid will be useful?**\nSort of. The concept of a block responsively becoming a \"panel\" and vice-versa is very useful, and a great alternative to stacking. However, to me, the off-canvas component and panel are very similar, and having two separate components describe similar functionality and presentation (correct me if I'm wrong) seems redundant. A panel can be thought of as an off-canvas component that doesn't push its sibling, and relative to either the viewport or its parent.\n\n**Are the extra classes required confusing?**\nProbably confusing, probably a bit unnecessary, and a little too restrictive. A simple set of style rules inside `.panel.block` would be sufficient to \"cancel out\" block/panel styles for specified media queries. And now for the \"restrictive\" part...\n\n**Would you ever want a block on a smaller screen and a panel on a larger screen?**\nYes, and more (sorry for being greedy). Here are some scenarios:\n- I want a panel that's almost full width in mobile portrait mode, but only half width in landscape mode. (this is the standard, I believe, for Google Android apps)\n- I want a panel in desktop mode because, now that I have more real estate, I can do two important sections side-by-side, so the respective viewports for those sections might still be small.\n- Continuing the above, those two side-by-side important sections are _stacked_ in mobile, so it's more appropriate to display the medium-panels as a block in mobile.\n- I want a panel in mobile portrait mode, but a side-by-side block in landscape mode.\n\nAnd I'm sure I can think of others. These scenarios hint that panels could be breakpoint-aware, just like grid blocks:\n- `small-panel` - 90% (or 11/12 or whatever) width panel for a small breakpoint\n- `medium-panel` - 50% width panel for a medium breakpoint\n\nAnd since specificity would be determined by the respective media queries, the `panel`s would easily override `.block` styling.\n. Have you guys considered consolidating classes? Let's say you wanted a 6-column `panel` when small and a 4-column `block` when medium. That sounds like only two classes to me:\n\n``` html\n<div class=\"\n  panel-small-6\n  block-medium-4\n\"></div>\n```\n\nTo not produce an extreme amount of raw CSS output in order to accomplish this, you can use what I call \"prefix selectors\" to define the base styles for the _parent_ components:\n\n``` css\n[class^=\"panel-\"], [class*=\" panel-\"] {\n  // base panel styles go here\n}\n\n@media ... {\n  [class^=\"panel-small-\"], [class*=\" panel-small-\"] {\n    // media query specific panel styles go here\n  }\n\n  .panel-small-6 { ... }\n  .panel-small-7 { ... }\n}\n```\n\nI've had no specificity issues when doing this in personal projects. Let me know what you think!\n. @zurbrandon You're right, as the panels don't necessarily interact with the grid, maybe having their sizes grid-based is a bit excessive. I like the idea of them being on a custom-sized basis (using SASS variables) with three (proposed) standard sizes:\n- `$panel-length`: 300px or whatever the default size is\n- `$panel-full-length`: 90% (or 11/12) of width/height by default\n- `$panel-half-length`: 50% of width/height by default\n\nSo you'll have that standard size unless the user specifies if it should be a full- or half-length panel. So here would be an example mixin:\n\n``` scss\n@mixin panel(\n    $length: $panel-length,\n    $position: left,\n    $active-selector: '.is-active',\n    $breakpoint: all\n) {\n    @include breakpoint($breakpoint) { // or any media-query mixin\n        position: absolute;\n\n        @if $position == left or $position == right {\n            width: $length;\n        @else if $position == top or $position == bottom {\n            height: $length;\n        }\n\n        @if $position == left {\n            top: 0;\n            left: 0;\n            transform: translateX(-100%);\n        } // etc. for right, top, bottom\n\n        &#{$active-selector} {\n            transform: translate(0, 0);\n        }\n    }\n}\n```\n. Just clone the repo, follow the instructions in the readme, and you'll be able to view it locally on your own machine.\n. You did everything fine. Those parts just weren't implemented into that page yet (correct me if I'm wrong).\n. Check that you have the latest version of Sass installed.\n. Ah, gotcha. I was thinking something like this:\n\n``` scss\n$active-selector: '.ng-enter' !default;\n$inactive-selector: '.ng-leave' !default;\n\n@keyframes fadeIn {\n    from { opacity: 0; }\n    to { opacity: 1; }\n}\n@keyframes fadeOut {\n    from { opacity: 1; }\n    to { opacity: 0; }\n}\n\n.fadeInOut { // or .fade, .animate-fade, etc.\n  // animation properties...\n\n  &#{$active-selector} {\n    animation-name: fadeIn;\n  }\n\n  &#{$inactive-selector} {\n    animation-name: fadeOut;\n  }\n}\n```\n. If I'm not mistaken you can just use LibSass (`gulp node-sass`), which doesn't require Ruby. Besides that, there are many advantages over LESS that Sass has, especially for building out frameworks like this.\n. You might need to update your SSL certificates.\n\nhttp://railsapps.github.io/openssl-certificate-verify-failed.html\n. Not in this case, @ilanbiala . Whereas `ngCloak` hides a DOM node until the application is loaded, the need here is for a DOM node to be hidden until a _template_ is loaded asynchronously.\n. Should `3%` be hardcoded, or referenced via a variable, something like `$accordion-title-background-active-scale: 3% !default;`?\n. Seems impossible to fix, as long as `overflow-y: auto`.\n\nAccording to the [W3C Spec](http://www.w3.org/TR/css3-box/#the-overflow-x):\n\n> The computed values of \u2018overflow-x\u2019 and \u2018overflow-y\u2019 are the same as their specified values, except that some combinations with \u2018visible\u2019 are not possible: if one is specified as \u2018visible\u2019 and the other is \u2018scroll\u2019 or \u2018auto\u2019, then \u2018visible\u2019 is set to \u2018auto\u2019.\n. EDIT: Should have read the thread first, haha.\n. **If you do develop in Angular, would you just rip this stuff out when you went to production?**\nI do develop in AngularJS and I can see the utility of using this in development, but yeah, I'd rip it out in production.\n\nSuggestion: why not group animations? If I do this:\n\n```\n---\nanimation: fade\n---\n```\n\nthen that would signify that I want a simple fade in/out animation for entrance/exit. It's unlikely that I'm going to do anything crazy like:\n\n```\n---\nanimationIn: fadeIn\nanimationOut: slideOutLeft\n---\n```\n\nbut I do appreciate the option to do that.\n. @gakimball @whodidthis brings up a valid concern. I know that AngularJS is the current hotness, but coupling components strongly to AngularJS directives makes them very inflexible for other framerworks, such as Ember, Knockout, etc., and even jQuery (not a framework, but still).\n\nIf the components uniformly reacted to change of state (and this can be an attribute or class, doesn't matter), it would make integration into other frameworks (or even vanilla JS) much, much simpler. Here's a semi-pseudocode example:\n\n``` html\n<div class=\"panel\">This panel won't slide out, yet.</div>\n<div class=\"panel active\">This panel will slide out, since its state is now active.</div>\n```\n\n``` scss\n@mixin panel(... $active: '.active') {\n  // inactive transform state; e.g. transform: translateX(-300px);\n\n  #{$active} {\n    // active transform state; e.g. transform: translateX(0);\n  }\n}\n```\n\nAnd then in JS, you can use _any_ framework/library to simply activate the state of the component by adding a class/changing an attribute, and let the CSS take care of the rest.\n. **In general, do you think the panel/block hybrid will be useful?**\nSort of. The concept of a block responsively becoming a \"panel\" and vice-versa is very useful, and a great alternative to stacking. However, to me, the off-canvas component and panel are very similar, and having two separate components describe similar functionality and presentation (correct me if I'm wrong) seems redundant. A panel can be thought of as an off-canvas component that doesn't push its sibling, and relative to either the viewport or its parent.\n\n**Are the extra classes required confusing?**\nProbably confusing, probably a bit unnecessary, and a little too restrictive. A simple set of style rules inside `.panel.block` would be sufficient to \"cancel out\" block/panel styles for specified media queries. And now for the \"restrictive\" part...\n\n**Would you ever want a block on a smaller screen and a panel on a larger screen?**\nYes, and more (sorry for being greedy). Here are some scenarios:\n- I want a panel that's almost full width in mobile portrait mode, but only half width in landscape mode. (this is the standard, I believe, for Google Android apps)\n- I want a panel in desktop mode because, now that I have more real estate, I can do two important sections side-by-side, so the respective viewports for those sections might still be small.\n- Continuing the above, those two side-by-side important sections are _stacked_ in mobile, so it's more appropriate to display the medium-panels as a block in mobile.\n- I want a panel in mobile portrait mode, but a side-by-side block in landscape mode.\n\nAnd I'm sure I can think of others. These scenarios hint that panels could be breakpoint-aware, just like grid blocks:\n- `small-panel` - 90% (or 11/12 or whatever) width panel for a small breakpoint\n- `medium-panel` - 50% width panel for a medium breakpoint\n\nAnd since specificity would be determined by the respective media queries, the `panel`s would easily override `.block` styling.\n. Have you guys considered consolidating classes? Let's say you wanted a 6-column `panel` when small and a 4-column `block` when medium. That sounds like only two classes to me:\n\n``` html\n<div class=\"\n  panel-small-6\n  block-medium-4\n\"></div>\n```\n\nTo not produce an extreme amount of raw CSS output in order to accomplish this, you can use what I call \"prefix selectors\" to define the base styles for the _parent_ components:\n\n``` css\n[class^=\"panel-\"], [class*=\" panel-\"] {\n  // base panel styles go here\n}\n\n@media ... {\n  [class^=\"panel-small-\"], [class*=\" panel-small-\"] {\n    // media query specific panel styles go here\n  }\n\n  .panel-small-6 { ... }\n  .panel-small-7 { ... }\n}\n```\n\nI've had no specificity issues when doing this in personal projects. Let me know what you think!\n. @zurbrandon You're right, as the panels don't necessarily interact with the grid, maybe having their sizes grid-based is a bit excessive. I like the idea of them being on a custom-sized basis (using SASS variables) with three (proposed) standard sizes:\n- `$panel-length`: 300px or whatever the default size is\n- `$panel-full-length`: 90% (or 11/12) of width/height by default\n- `$panel-half-length`: 50% of width/height by default\n\nSo you'll have that standard size unless the user specifies if it should be a full- or half-length panel. So here would be an example mixin:\n\n``` scss\n@mixin panel(\n    $length: $panel-length,\n    $position: left,\n    $active-selector: '.is-active',\n    $breakpoint: all\n) {\n    @include breakpoint($breakpoint) { // or any media-query mixin\n        position: absolute;\n\n        @if $position == left or $position == right {\n            width: $length;\n        @else if $position == top or $position == bottom {\n            height: $length;\n        }\n\n        @if $position == left {\n            top: 0;\n            left: 0;\n            transform: translateX(-100%);\n        } // etc. for right, top, bottom\n\n        &#{$active-selector} {\n            transform: translate(0, 0);\n        }\n    }\n}\n```\n. Just clone the repo, follow the instructions in the readme, and you'll be able to view it locally on your own machine.\n. You did everything fine. Those parts just weren't implemented into that page yet (correct me if I'm wrong).\n. Check that you have the latest version of Sass installed.\n. Ah, gotcha. I was thinking something like this:\n\n``` scss\n$active-selector: '.ng-enter' !default;\n$inactive-selector: '.ng-leave' !default;\n\n@keyframes fadeIn {\n    from { opacity: 0; }\n    to { opacity: 1; }\n}\n@keyframes fadeOut {\n    from { opacity: 1; }\n    to { opacity: 0; }\n}\n\n.fadeInOut { // or .fade, .animate-fade, etc.\n  // animation properties...\n\n  &#{$active-selector} {\n    animation-name: fadeIn;\n  }\n\n  &#{$inactive-selector} {\n    animation-name: fadeOut;\n  }\n}\n```\n. If I'm not mistaken you can just use LibSass (`gulp node-sass`), which doesn't require Ruby. Besides that, there are many advantages over LESS that Sass has, especially for building out frameworks like this.\n. You might need to update your SSL certificates.\n\nhttp://railsapps.github.io/openssl-certificate-verify-failed.html\n. Not in this case, @ilanbiala . Whereas `ngCloak` hides a DOM node until the application is loaded, the need here is for a DOM node to be hidden until a _template_ is loaded asynchronously.\n. Should `3%` be hardcoded, or referenced via a variable, something like `$accordion-title-background-active-scale: 3% !default;`?\n. Seems impossible to fix, as long as `overflow-y: auto`.\n\nAccording to the [W3C Spec](http://www.w3.org/TR/css3-box/#the-overflow-x):\n\n> The computed values of \u2018overflow-x\u2019 and \u2018overflow-y\u2019 are the same as their specified values, except that some combinations with \u2018visible\u2019 are not possible: if one is specified as \u2018visible\u2019 and the other is \u2018scroll\u2019 or \u2018auto\u2019, then \u2018visible\u2019 is set to \u2018auto\u2019.\n. EDIT: Should have read the thread first, haha.\n. ",
    "whodidthis": "Out of a non-angular interest:\n\nThis must be useful for prototyping and angular people, but will Foundation for apps work in Javascript without Angular or jQuery?\n. Ah ok, I think the new grid and whatever ideas you have for transitions should still be usable at least.\n. Out of a non-angular interest:\n\nThis must be useful for prototyping and angular people, but will Foundation for apps work in Javascript without Angular or jQuery?\n. Ah ok, I think the new grid and whatever ideas you have for transitions should still be usable at least.\n. ",
    "HansUXdev": "Hey thanks. So there are a couple things I had to suggest and I have a few examples some of which may require new angular directives. \n\nOn the directive side I think would be really cool to see is an \"icon-bar\" or \"pagination\" like slider that is similar to the facebook app where you slide between different views such as the feed, messages, etc... Here's an example on ionc's framework: \nhttp://ionic-sarav.rhcloud.com/ionic/tabbedSlideBox/slidingTabsAtBottom.html#/\n\nOn the animation side more specifically it be nice to see it as almost a separate scss component library where you import the animations you want and comment out the animations you don't want (and reduce the file size of css). As an example, button animations, menu, page transitions, etc...\n\nIf you check out Effeckts http://h5bp.github.io/Effeckt.css/ they have some good examples. The scrolling animations would be neat to see with the action panel and page transitions for opening/closing views. \n\nIn terms of menus and animations it would be nice to see different menus beyond topbar and offcanvas such as overlay and boarder for more flat UI and possibly 3D perspective or multilevel menus.\nhttp://tympanus.net/Development/FullscreenOverlayStyles/\nhttp://tympanus.net/Tutorials/AnimatedBorderMenus/\nhttp://tympanus.net/Development/PerspectivePageViewNavigation/\nhttp://tympanus.net/Development/OffCanvasMenuEffects/\nhttp://tympanus.net/Development/MultiLevelPushMenu/\n. Yeah I saw the mixins. @gakimball @zurbrandon cool i'll try that out.\n. Love the new flexbox grid. But I was wondering have you considered swapping out autoprefixer for \"pleeease\" as a post processor? I've been testing it out and it seems to have better support for vendor prefixes and it also could eliminate the need for rem calc and some of the other mixins. I've only noticed a few minor issues when you compile the scss.\n. It would also be cool to see touch finally added to tabs and or be able to use them for views (swipe between them).\n. Hey thanks. So there are a couple things I had to suggest and I have a few examples some of which may require new angular directives. \n\nOn the directive side I think would be really cool to see is an \"icon-bar\" or \"pagination\" like slider that is similar to the facebook app where you slide between different views such as the feed, messages, etc... Here's an example on ionc's framework: \nhttp://ionic-sarav.rhcloud.com/ionic/tabbedSlideBox/slidingTabsAtBottom.html#/\n\nOn the animation side more specifically it be nice to see it as almost a separate scss component library where you import the animations you want and comment out the animations you don't want (and reduce the file size of css). As an example, button animations, menu, page transitions, etc...\n\nIf you check out Effeckts http://h5bp.github.io/Effeckt.css/ they have some good examples. The scrolling animations would be neat to see with the action panel and page transitions for opening/closing views. \n\nIn terms of menus and animations it would be nice to see different menus beyond topbar and offcanvas such as overlay and boarder for more flat UI and possibly 3D perspective or multilevel menus.\nhttp://tympanus.net/Development/FullscreenOverlayStyles/\nhttp://tympanus.net/Tutorials/AnimatedBorderMenus/\nhttp://tympanus.net/Development/PerspectivePageViewNavigation/\nhttp://tympanus.net/Development/OffCanvasMenuEffects/\nhttp://tympanus.net/Development/MultiLevelPushMenu/\n. Yeah I saw the mixins. @gakimball @zurbrandon cool i'll try that out.\n. Love the new flexbox grid. But I was wondering have you considered swapping out autoprefixer for \"pleeease\" as a post processor? I've been testing it out and it seems to have better support for vendor prefixes and it also could eliminate the need for rem calc and some of the other mixins. I've only noticed a few minor issues when you compile the scss.\n. It would also be cool to see touch finally added to tabs and or be able to use them for views (swipe between them).\n. ",
    "richbai90": "Personally as an angular developer I wouldn't even use the custom routing features.  I can see how it would be helpful for users unfamiliar with angular to rapidly prototype, however I tend to like control when I'm developing, certainly if I did use these routing features I wouldn't keep it in production.\n. Personally as an angular developer I wouldn't even use the custom routing features.  I can see how it would be helpful for users unfamiliar with angular to rapidly prototype, however I tend to like control when I'm developing, certainly if I did use these routing features I wouldn't keep it in production.\n. ",
    "kenwheeler": "With the announcement of Angular 2.0, what does that mean for these features? I personally used Backbone and now I use React, but only prototyped with Angular. \n. @AntJanus despite it's timeline and actual final state, I think you'll see somewhat of an exodus towards other frameworks in the coming months.\n. I think 12 columns is pretty standard and encompasses most designs. That said, if you were to go the percentage route, I think increments of 5 would be ideal. \n\nIn regards to naming, I'm the worlds biggest hater of \"classitis\". I typically do this sort of thing using sass includes just to avoid it. However, a declarative approach is really helpful for non sass users, and for people who didn't write the code initially. They can tell how big it is gonna be, approximately, just by looking at it.\n\nMy proposal is a little crazy. Attribute selectors.  I know, it sounds absolutely bananas but hear me out.\n\nInstead of loading up the class name with structural classes, delegate that to attributes. I suppose if it HAS to be valid markup, you could prefix it with data-, but this _is_ Foundation for **Apps**.\n\nSee below:\n\nhttp://jsfiddle.net/ku76xzLz/\n\nPerformance? Not that bad, roughly 83% of the speed of a single class selector:\n\nhttp://benfrain.com/css-performance-revisited-selectors-bloat-expensive-styles/\n. Because it's \"for Apps\", my vote is for stretching as the default.\n. With the announcement of Angular 2.0, what does that mean for these features? I personally used Backbone and now I use React, but only prototyped with Angular. \n. @AntJanus despite it's timeline and actual final state, I think you'll see somewhat of an exodus towards other frameworks in the coming months.\n. I think 12 columns is pretty standard and encompasses most designs. That said, if you were to go the percentage route, I think increments of 5 would be ideal. \n\nIn regards to naming, I'm the worlds biggest hater of \"classitis\". I typically do this sort of thing using sass includes just to avoid it. However, a declarative approach is really helpful for non sass users, and for people who didn't write the code initially. They can tell how big it is gonna be, approximately, just by looking at it.\n\nMy proposal is a little crazy. Attribute selectors.  I know, it sounds absolutely bananas but hear me out.\n\nInstead of loading up the class name with structural classes, delegate that to attributes. I suppose if it HAS to be valid markup, you could prefix it with data-, but this _is_ Foundation for **Apps**.\n\nSee below:\n\nhttp://jsfiddle.net/ku76xzLz/\n\nPerformance? Not that bad, roughly 83% of the speed of a single class selector:\n\nhttp://benfrain.com/css-performance-revisited-selectors-bloat-expensive-styles/\n. Because it's \"for Apps\", my vote is for stretching as the default.\n. ",
    "MichaelFBA": "I'm coming from a Metoerjs / blaze background, will the current components of foundation for apps still be available in vanilla js with it being so tightly coupled with Angular?\nIt would be great if the angular parts could be a feature that is included/excluded as required.\n\nFor me that makes more sense as you would be inadvertantly creating a walled garden in which only angular apps benefit from the framework.\n. Or Meterojs / blaze for example?\n. +1 vanilla.js\n. Also just a quick note, angular has 32k stars whilst meteorjs has 20k on github. Seems a shame to build for a single platform\n. I'm coming from a Metoerjs / blaze background, will the current components of foundation for apps still be available in vanilla js with it being so tightly coupled with Angular?\nIt would be great if the angular parts could be a feature that is included/excluded as required.\n\nFor me that makes more sense as you would be inadvertantly creating a walled garden in which only angular apps benefit from the framework.\n. Or Meterojs / blaze for example?\n. +1 vanilla.js\n. Also just a quick note, angular has 32k stars whilst meteorjs has 20k on github. Seems a shame to build for a single platform\n. ",
    "dipongkor": "where is the definition of  fadeIn class. I have added it in templates like following \n\nname: profile.personalSettings\nurl: /personalSettings\ncontroller: PersonalSettingsCtrl\nanimationIn: slideInLeft\nanimationOut: slideOutRight\n\nBut not working.\n. Shall we get it from you in any upcoming update?\n. where is the definition of  fadeIn class. I have added it in templates like following \n\nname: profile.personalSettings\nurl: /personalSettings\ncontroller: PersonalSettingsCtrl\nanimationIn: slideInLeft\nanimationOut: slideOutRight\n\nBut not working.\n. Shall we get it from you in any upcoming update?\n. ",
    "vincentmorneau": "@gakimball I am a not an angular developer, although I know JavaScript well, and one thing I'm missing from the documentation is how do you get the value of your parameters once you've branched to the ui-sref links?\n\nFor instance:\n\n```\n---\nname: blogPost\nurl: /post/:id\n---\n```\n\nHow do I get the value of `:id`?\n\nAlso, can we pass multiple parameters? What would be the syntax?\n\nThank you and amazing work on FFA.\n. Nah, I put it on hold and wait for a fix.\n. Thanks but it doesn't work for me. I still get \n\n Uncaught ReferenceError: FoundationApi is not defined\n. I have exactly that, except that I use the original app.js sample code below:\n\n```\n(function() {\n  'use strict';\n\n  angular.module('application', [\n    'ui.router',\n    'ngAnimate',\n\n    //foundation\n    'foundation',\n    'foundation.dynamicRouting',\n    'foundation.dynamicRouting.animations'\n  ])\n    .config(config)\n    .run(run)\n  ;\n\n  config.$inject = ['$urlRouterProvider', '$locationProvider'];\n\n  function config($urlProvider, $locationProvider) {\n    $urlProvider.otherwise('/');\n\n    $locationProvider.html5Mode({\n      enabled:false,\n      requireBase: false\n    });\n\n    $locationProvider.hashPrefix('!');\n  }\n\n  function run() {\n    FastClick.attach(document.body);\n  }\n\n})();\n```\n\nStill not working :(\n\nWhat exactly is \"FoundationAPI\", is it a JS function? I don't seem to understand how it is instantiated.\n. Thank you for your help.\n\nI went for a clean start with a new app and I still have the issue (With the original foundation.js and app.js). \n\nAlso, I wasn't able to run \n`foundationApi.publish('main-notifications', { title: 'Test', content: 'Test2' });`\nor\n`FoundationApi.publish('main-notifications', { title: 'Test', content: 'Test2' });`\n\ndirectly in the browser console from http://foundation.zurb.com/apps/docs/#!/notification\n\nSee screenshot.\n\n![image](https://cloud.githubusercontent.com/assets/5391291/5574407/4586f5d2-8f8c-11e4-9bf1-c9763a1825a0.png)\n\nI really do believe there is a problem now and it's not just on my side.\n. @AntJanus Every component works when calling it with the `zf-` directive. The problem occurs when I try to manually \"activate\" the notification component with this JavaScript command:\n\n`FoundationApi.publish('main-notifications', { title: 'Test', content: 'Test2' });`\n\ni don't think it's related to that specific component, since every call to FoundationApi is undefined. When you went to the link, did you try running the JavaScript command above?\n\nI am on Windows 10 Tech Preview with Chrome 39 (up to date). What exactly should I send you as my \"entire controller\"?\n\nThanks!\n\nPS: I may not have understand how FoundationApi works, but the documentations leads to believe that it can be used as a simple JavaScript command.\n\nEDIT: Firefox 36 (Developer edition) returns \"FoundationApi is not defined\" as well.\n\n![image](https://cloud.githubusercontent.com/assets/5391291/5575683/a1e8dec8-8fb2-11e4-81ed-3af8f3aff698.png)\n. @AntJanus Not yet but I will tonight or tomorrow! I will write back then.\n. @AntJanus I can't get my head around it. I feel like I need to learn all of AngularJS to achieve this.\n\nLet me simplify my question: is there a way through Foundation for Apps to programmatically launch a modal page (or a notification message)? I think that we, developers, need to use those components  without having to click on a zf-open button.\n\nIf it's not globally available, could there be a step-by-step example in the docs on how to implement it through AngularJS?\n\nThank you again, and I'm sorry that my Angular skills are not on-par here.\n. @gakimball I am a not an angular developer, although I know JavaScript well, and one thing I'm missing from the documentation is how do you get the value of your parameters once you've branched to the ui-sref links?\n\nFor instance:\n\n```\n---\nname: blogPost\nurl: /post/:id\n---\n```\n\nHow do I get the value of `:id`?\n\nAlso, can we pass multiple parameters? What would be the syntax?\n\nThank you and amazing work on FFA.\n. Nah, I put it on hold and wait for a fix.\n. Thanks but it doesn't work for me. I still get \n\n Uncaught ReferenceError: FoundationApi is not defined\n. I have exactly that, except that I use the original app.js sample code below:\n\n```\n(function() {\n  'use strict';\n\n  angular.module('application', [\n    'ui.router',\n    'ngAnimate',\n\n    //foundation\n    'foundation',\n    'foundation.dynamicRouting',\n    'foundation.dynamicRouting.animations'\n  ])\n    .config(config)\n    .run(run)\n  ;\n\n  config.$inject = ['$urlRouterProvider', '$locationProvider'];\n\n  function config($urlProvider, $locationProvider) {\n    $urlProvider.otherwise('/');\n\n    $locationProvider.html5Mode({\n      enabled:false,\n      requireBase: false\n    });\n\n    $locationProvider.hashPrefix('!');\n  }\n\n  function run() {\n    FastClick.attach(document.body);\n  }\n\n})();\n```\n\nStill not working :(\n\nWhat exactly is \"FoundationAPI\", is it a JS function? I don't seem to understand how it is instantiated.\n. Thank you for your help.\n\nI went for a clean start with a new app and I still have the issue (With the original foundation.js and app.js). \n\nAlso, I wasn't able to run \n`foundationApi.publish('main-notifications', { title: 'Test', content: 'Test2' });`\nor\n`FoundationApi.publish('main-notifications', { title: 'Test', content: 'Test2' });`\n\ndirectly in the browser console from http://foundation.zurb.com/apps/docs/#!/notification\n\nSee screenshot.\n\n![image](https://cloud.githubusercontent.com/assets/5391291/5574407/4586f5d2-8f8c-11e4-9bf1-c9763a1825a0.png)\n\nI really do believe there is a problem now and it's not just on my side.\n. @AntJanus Every component works when calling it with the `zf-` directive. The problem occurs when I try to manually \"activate\" the notification component with this JavaScript command:\n\n`FoundationApi.publish('main-notifications', { title: 'Test', content: 'Test2' });`\n\ni don't think it's related to that specific component, since every call to FoundationApi is undefined. When you went to the link, did you try running the JavaScript command above?\n\nI am on Windows 10 Tech Preview with Chrome 39 (up to date). What exactly should I send you as my \"entire controller\"?\n\nThanks!\n\nPS: I may not have understand how FoundationApi works, but the documentations leads to believe that it can be used as a simple JavaScript command.\n\nEDIT: Firefox 36 (Developer edition) returns \"FoundationApi is not defined\" as well.\n\n![image](https://cloud.githubusercontent.com/assets/5391291/5575683/a1e8dec8-8fb2-11e4-81ed-3af8f3aff698.png)\n. @AntJanus Not yet but I will tonight or tomorrow! I will write back then.\n. @AntJanus I can't get my head around it. I feel like I need to learn all of AngularJS to achieve this.\n\nLet me simplify my question: is there a way through Foundation for Apps to programmatically launch a modal page (or a notification message)? I think that we, developers, need to use those components  without having to click on a zf-open button.\n\nIf it's not globally available, could there be a step-by-step example in the docs on how to implement it through AngularJS?\n\nThank you again, and I'm sorry that my Angular skills are not on-par here.\n. ",
    "jamieshark": "@vincentmorneau -\n\nYou can access your :id params by injecting the '$stateParams' as a dependency of your controller.\n\nhttps://github.com/angular-ui/ui-router/wiki/URL-Routing#stateparams-service\n\nAs you can see in the example, each additional parameter that you add on the url will be available in the object as well. \n. @AntJanus, I fixed this by changing the slideDown class. Geoff had changed it with another commit. Will close this issue with my next commit.\n. Hey Antonin-\n\nI tried tackling this by pure brute force string formatting. :/ I got about this far and I just kept running into formatting errors.\n// this is some bruteforce shit\n// strip the quotations that FF adds\n        if (clean.charAt(0) === '\"') {\n          var pretty = clean.substr(2, clean.length-5);\n          pretty = pretty.replace('\\\"', '\"');\n          pretty = eval('{'+pretty+'}');\n          // clean = pretty;\n        }\n. Fixed with @AntJanus's help.\n. Closed with 91c375f\n. I think this has been fixed with updated mark up.\n. Hey @akiran -\n\nAs you found, the esc-close is actually behaving as expected and it is indeed supposed to close all active elements. I sort of meant it as a directive that is similar to a listener on the body. I can certainly update the documentation so that the directive is only included on the body or a main element. \n\nIn my opinion, I think that the cases in which esc-to-close certain elements might be few and far between and sort of defeats the purpose of the idea of escape to close. But maybe @gakimball and @zurbrandon can weigh in as well.\n. I'll look into this, thanks for catching it!\n. Fixed with 23fee8743590058f4b084393fd15d593c54d8e7e\n. Hey @etcook , I went ahead and added the additional conditional checks. This error is no longer showing up for me, but let me know if it still persists for you.\n. I think the latest commit https://github.com/zurb/foundation-apps/commit/e5a0580718c8ae12482c5f958e6df30c5ce5c982 should help with this bug. Marking it closed for now.\n. @jjn2009 the motion ui docs are mainly targeting using foundation animations with the foundation components, we haven't exactly integrated the animation directives with any selectable DOM element.\n\nThe easiest way for you to accomplish what you're thinking of is the following:\n\nChange the main animation class to be one \"fade\" class.\n\n```\nClick me: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n\n<div ng-show=\"checked\" class=\"fadeAnimation linear\">\n  <h1>Welcome to Foundation for Apps!</h1>\n</div>\n\n<p class=\"lead\">This is version <strong>1.0.2 Matterhorn</strong>.</p>\n```\n\nand your (s)css file should look something like this:\n\n```\n.fade-animation {\n  opacity: 1;\n}\n\n.fade-animation.ng-hide-add.ng-hide-add-active,\n.fade-animation.ng-hide-remove.ng-hide-remove-active {\n  -webkit-transition: all linear 0.5s;\n  transition: all linear 0.5s;\n}\n\n.fade-animation.ng-hide {\n  opacity: 0;\n}\n```\n\nThe reason for this is because we haven't been able to account for all of the different ng-animation classes that Angular includes, we've only so far accounted for enter/leave. But this work around should be the behavior that you're looking for. Sorry for the misdirection.\n. @robotaoyuan This workaround is fine, but you can also create your own controller specific to that view and extend the default controller to access the params that way by using the $stateParams scope variable.\n\n```\n---\nname: algo\ncontroller: MyAlgoController\n---\nparams: {{params}}\n```\n\n```\nMyAlgoController.$inject = ['$scope', '$stateParams', '$state'];\n\nfunction MyAlgoController($scope, $stateParams, $state) {\n    $scope.params = $stateParams;\n}\n```\n. @quook the notifications are already being style with position: relative. Or are you talking about the notification-container class? \n. @quook Ah, I see. Since the last release, I've updated the notifications to stack as of https://github.com/zurb/foundation-apps/commit/adeee3439a8e8e409fccc2e5e8e024614935b456 . You could either pull down the latest repo to see if that will fix your current problem or wait until we release our next stable patch! :)\n. At the moment, we're still discussion the option of including that in our next release, but you might be able to abstract the alerts from Foundation for Sites as a temporary workaround (http://foundation.zurb.com/docs/components/alert_boxes.html).\n\nWe will look into making a configurable option. :)\n. Closed with #386.\n. Hey @maxcook, do you have a code snippet to show the callback you're trying to use with the directive?\n. @maxcook should be solved with https://github.com/zurb/foundation-apps/commit/05663c96b2dc538959342fffdfe4dbe9e8892531. Let me know if this issue is still persisting for you.\n. Hmm this is a really tricky bug to narrow down the source... Will be taking a closer look at this. \n. I've merged in #547 and did some basic testing and it seems to be working out okay. Please let me know if there is specific case that this PR didn't address.\n. Hey @soumak77, if I'm reading this correctly, you've taken out the scope.active check out altogether, which we need to prevent a case of the notification reappearing if someone swiped it closed before the autoclose timer ran out. So I'm going to include the changes with the commit from https://github.com/zurb/foundation-apps/commit/4b6a3fd70bca6f3c669f4205968ea7ea5e01b992 if you don't mind!\n\ncc: @gakimball \n. I am now finding this error fixed. @bdavidsonnyl please let me know if this issue still persists with you.\n. @mearleycf You don't need the top part of the app.js document, only the lower part. So your code for app.js will end up looking something like this:\n\n```\nangular.module('application')\n  .controller('NavController', ['$scope', '$state', function($scope, $state) {\n    $scope.current = $state.current.name;\n\n    var routes = angular.copy(foundationRoutes);\n\n    //setup autocomplete\n    $scope.routing = [];\n    $scope.typedText = '';\n\n    if(foundationRoutes) {\n      angular.forEach(routes, function(r) {\n        var title = r.title || r.name.replace('.', ' '); //use title if possible\n        $scope.routing.push(title);\n      });\n    }\n\n    $scope.selectRoute = function(routeName) {\n      var title = routeName;\n      var name = routeName.replace(' ', '.');\n\n      //search for route\n      angular.forEach(routes, function(r) {\n        if(r.title && r.title === routeName) {\n          $state.go(r.name);\n          return;\n        } else if (name === r.name) {\n          $state.go(r.name);\n          return;\n        }\n      });\n    }\n  }]);\n```\n\nThis includes the functionality you're looking for (to display {{ routing }} on your view) but avoids the dependency conflict for autocomplete. \n. I'm closing this issue for now in favor of #477. I've updated the docs for now to reflect a more accurate version of how to use the directive as is, but I'll look into the issue of an outside anchor not triggering the action sheet to toggle.\n. For now, the way to do it would be to set your `option` variable as an object of $rootScope.\n\nYour controller would look something like this. ('stuffffffffff' being your other dependency injections)\n\n```\nMyController.$inject = ['stuffffffff', 'ModalFactory', '$rootScope'];\n\n  function MyController(stuffffffff, ModalFactory, $rootScope) {\n\n    $rootScope.option ={\n      id:'12312313123',\n      name:'optionname'\n    };\n    var modal = new ModalFactory({\n          id: $rootScope.option.id + '-modal',\n          templateUrl: '../../templates/test-modal.html'\n    });\n    modal.activate();\n```\n. @alejandro-londono are you experiencing this using the up-to-date master branch of Foundation for Apps? I'm going to try to recreate the issue you're having, but in the meantime, if you're not currently on the most recent commit, can you pull down from there? I think we recently fixed an issue similar to this.\n. Is this on the current master branch? This issue was previously reported (https://github.com/zurb/foundation-apps/issues/472) and fixed. But let me know if the issue still persists on the current branch! :)\n. @excessivedemon This issue is currently fixed in master, so you are free to pull that down and see if your controller is functioning as expected there.\n\nOtherwise, we're releasing our 1.1 patch today that resolves this issue and will have a new foundation-apps.js file available.\n\nThanks!\n. @spsaucier Are you still getting this issue after including the templates.js file in your index.html file?\n. @soumak77 The swipe configuration is hooked up to the hide method, so if you set the attributes of animation-in/animation-out to the desired animations, the notifications should use those animations to hide.\n\nLet me know if this isn't the case!\n. @Teun87, can i have the exact CSS that you're using for the component as well?\n. @mattgrande I think that the way that we're compiling the templates now using the $templateCache provider solves your issue. Can you make you're including `<script src=\"assets/js/templates.js\"></script>\n` in your index.html file and see if you're still running into the same issue?\n. Closing this issue since it seems like it had something to do with the ng-token-auth API usage. :)\n. Hey @ryanburnett -\n\nIt's working for me using the latest version of the Foundation for Apps CLI client. \n\nHere are the steps I took:\n\n1) I made a new file \"home.js\" under client/assets/js/controllers and copied line for line the snippet you provided.\n2) I went into gulpfile.js and added `client/assets/js/controllers/home.js` to the appJS array. \n3) I went to my home template and set the front-matter parameter \"Controller\" to \"HomeCtrl\" and added the scope variable `{{hello}}` to the page.\n4) I ran `foundation-apps watch`. You can also run the commands `npm start` or `gulp` to build the app.\n\nI did NOT include the home.js file in my index.html, because that already gets included and compiled in your build folder into app.js (lines 132-143 in gulpfile.js).\n\nLet me know if that works for you.\n. For some of the other components, I've started adding in a way to \"funnel\" in your parent scope, and I'll look into doing this for tabs as well. Closing this issue for now. \n. I'm seeing this fixed as of #547. Please let me know otherwise and I'll reopen!\n. Closing in favor of #645 \n. @vincentmorneau -\n\nYou can access your :id params by injecting the '$stateParams' as a dependency of your controller.\n\nhttps://github.com/angular-ui/ui-router/wiki/URL-Routing#stateparams-service\n\nAs you can see in the example, each additional parameter that you add on the url will be available in the object as well. \n. @AntJanus, I fixed this by changing the slideDown class. Geoff had changed it with another commit. Will close this issue with my next commit.\n. Hey Antonin-\n\nI tried tackling this by pure brute force string formatting. :/ I got about this far and I just kept running into formatting errors.\n// this is some bruteforce shit\n// strip the quotations that FF adds\n        if (clean.charAt(0) === '\"') {\n          var pretty = clean.substr(2, clean.length-5);\n          pretty = pretty.replace('\\\"', '\"');\n          pretty = eval('{'+pretty+'}');\n          // clean = pretty;\n        }\n. Fixed with @AntJanus's help.\n. Closed with 91c375f\n. I think this has been fixed with updated mark up.\n. Hey @akiran -\n\nAs you found, the esc-close is actually behaving as expected and it is indeed supposed to close all active elements. I sort of meant it as a directive that is similar to a listener on the body. I can certainly update the documentation so that the directive is only included on the body or a main element. \n\nIn my opinion, I think that the cases in which esc-to-close certain elements might be few and far between and sort of defeats the purpose of the idea of escape to close. But maybe @gakimball and @zurbrandon can weigh in as well.\n. I'll look into this, thanks for catching it!\n. Fixed with 23fee8743590058f4b084393fd15d593c54d8e7e\n. Hey @etcook , I went ahead and added the additional conditional checks. This error is no longer showing up for me, but let me know if it still persists for you.\n. I think the latest commit https://github.com/zurb/foundation-apps/commit/e5a0580718c8ae12482c5f958e6df30c5ce5c982 should help with this bug. Marking it closed for now.\n. @jjn2009 the motion ui docs are mainly targeting using foundation animations with the foundation components, we haven't exactly integrated the animation directives with any selectable DOM element.\n\nThe easiest way for you to accomplish what you're thinking of is the following:\n\nChange the main animation class to be one \"fade\" class.\n\n```\nClick me: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n\n<div ng-show=\"checked\" class=\"fadeAnimation linear\">\n  <h1>Welcome to Foundation for Apps!</h1>\n</div>\n\n<p class=\"lead\">This is version <strong>1.0.2 Matterhorn</strong>.</p>\n```\n\nand your (s)css file should look something like this:\n\n```\n.fade-animation {\n  opacity: 1;\n}\n\n.fade-animation.ng-hide-add.ng-hide-add-active,\n.fade-animation.ng-hide-remove.ng-hide-remove-active {\n  -webkit-transition: all linear 0.5s;\n  transition: all linear 0.5s;\n}\n\n.fade-animation.ng-hide {\n  opacity: 0;\n}\n```\n\nThe reason for this is because we haven't been able to account for all of the different ng-animation classes that Angular includes, we've only so far accounted for enter/leave. But this work around should be the behavior that you're looking for. Sorry for the misdirection.\n. @robotaoyuan This workaround is fine, but you can also create your own controller specific to that view and extend the default controller to access the params that way by using the $stateParams scope variable.\n\n```\n---\nname: algo\ncontroller: MyAlgoController\n---\nparams: {{params}}\n```\n\n```\nMyAlgoController.$inject = ['$scope', '$stateParams', '$state'];\n\nfunction MyAlgoController($scope, $stateParams, $state) {\n    $scope.params = $stateParams;\n}\n```\n. @quook the notifications are already being style with position: relative. Or are you talking about the notification-container class? \n. @quook Ah, I see. Since the last release, I've updated the notifications to stack as of https://github.com/zurb/foundation-apps/commit/adeee3439a8e8e409fccc2e5e8e024614935b456 . You could either pull down the latest repo to see if that will fix your current problem or wait until we release our next stable patch! :)\n. At the moment, we're still discussion the option of including that in our next release, but you might be able to abstract the alerts from Foundation for Sites as a temporary workaround (http://foundation.zurb.com/docs/components/alert_boxes.html).\n\nWe will look into making a configurable option. :)\n. Closed with #386.\n. Hey @maxcook, do you have a code snippet to show the callback you're trying to use with the directive?\n. @maxcook should be solved with https://github.com/zurb/foundation-apps/commit/05663c96b2dc538959342fffdfe4dbe9e8892531. Let me know if this issue is still persisting for you.\n. Hmm this is a really tricky bug to narrow down the source... Will be taking a closer look at this. \n. I've merged in #547 and did some basic testing and it seems to be working out okay. Please let me know if there is specific case that this PR didn't address.\n. Hey @soumak77, if I'm reading this correctly, you've taken out the scope.active check out altogether, which we need to prevent a case of the notification reappearing if someone swiped it closed before the autoclose timer ran out. So I'm going to include the changes with the commit from https://github.com/zurb/foundation-apps/commit/4b6a3fd70bca6f3c669f4205968ea7ea5e01b992 if you don't mind!\n\ncc: @gakimball \n. I am now finding this error fixed. @bdavidsonnyl please let me know if this issue still persists with you.\n. @mearleycf You don't need the top part of the app.js document, only the lower part. So your code for app.js will end up looking something like this:\n\n```\nangular.module('application')\n  .controller('NavController', ['$scope', '$state', function($scope, $state) {\n    $scope.current = $state.current.name;\n\n    var routes = angular.copy(foundationRoutes);\n\n    //setup autocomplete\n    $scope.routing = [];\n    $scope.typedText = '';\n\n    if(foundationRoutes) {\n      angular.forEach(routes, function(r) {\n        var title = r.title || r.name.replace('.', ' '); //use title if possible\n        $scope.routing.push(title);\n      });\n    }\n\n    $scope.selectRoute = function(routeName) {\n      var title = routeName;\n      var name = routeName.replace(' ', '.');\n\n      //search for route\n      angular.forEach(routes, function(r) {\n        if(r.title && r.title === routeName) {\n          $state.go(r.name);\n          return;\n        } else if (name === r.name) {\n          $state.go(r.name);\n          return;\n        }\n      });\n    }\n  }]);\n```\n\nThis includes the functionality you're looking for (to display {{ routing }} on your view) but avoids the dependency conflict for autocomplete. \n. I'm closing this issue for now in favor of #477. I've updated the docs for now to reflect a more accurate version of how to use the directive as is, but I'll look into the issue of an outside anchor not triggering the action sheet to toggle.\n. For now, the way to do it would be to set your `option` variable as an object of $rootScope.\n\nYour controller would look something like this. ('stuffffffffff' being your other dependency injections)\n\n```\nMyController.$inject = ['stuffffffff', 'ModalFactory', '$rootScope'];\n\n  function MyController(stuffffffff, ModalFactory, $rootScope) {\n\n    $rootScope.option ={\n      id:'12312313123',\n      name:'optionname'\n    };\n    var modal = new ModalFactory({\n          id: $rootScope.option.id + '-modal',\n          templateUrl: '../../templates/test-modal.html'\n    });\n    modal.activate();\n```\n. @alejandro-londono are you experiencing this using the up-to-date master branch of Foundation for Apps? I'm going to try to recreate the issue you're having, but in the meantime, if you're not currently on the most recent commit, can you pull down from there? I think we recently fixed an issue similar to this.\n. Is this on the current master branch? This issue was previously reported (https://github.com/zurb/foundation-apps/issues/472) and fixed. But let me know if the issue still persists on the current branch! :)\n. @excessivedemon This issue is currently fixed in master, so you are free to pull that down and see if your controller is functioning as expected there.\n\nOtherwise, we're releasing our 1.1 patch today that resolves this issue and will have a new foundation-apps.js file available.\n\nThanks!\n. @spsaucier Are you still getting this issue after including the templates.js file in your index.html file?\n. @soumak77 The swipe configuration is hooked up to the hide method, so if you set the attributes of animation-in/animation-out to the desired animations, the notifications should use those animations to hide.\n\nLet me know if this isn't the case!\n. @Teun87, can i have the exact CSS that you're using for the component as well?\n. @mattgrande I think that the way that we're compiling the templates now using the $templateCache provider solves your issue. Can you make you're including `<script src=\"assets/js/templates.js\"></script>\n` in your index.html file and see if you're still running into the same issue?\n. Closing this issue since it seems like it had something to do with the ng-token-auth API usage. :)\n. Hey @ryanburnett -\n\nIt's working for me using the latest version of the Foundation for Apps CLI client. \n\nHere are the steps I took:\n\n1) I made a new file \"home.js\" under client/assets/js/controllers and copied line for line the snippet you provided.\n2) I went into gulpfile.js and added `client/assets/js/controllers/home.js` to the appJS array. \n3) I went to my home template and set the front-matter parameter \"Controller\" to \"HomeCtrl\" and added the scope variable `{{hello}}` to the page.\n4) I ran `foundation-apps watch`. You can also run the commands `npm start` or `gulp` to build the app.\n\nI did NOT include the home.js file in my index.html, because that already gets included and compiled in your build folder into app.js (lines 132-143 in gulpfile.js).\n\nLet me know if that works for you.\n. For some of the other components, I've started adding in a way to \"funnel\" in your parent scope, and I'll look into doing this for tabs as well. Closing this issue for now. \n. I'm seeing this fixed as of #547. Please let me know otherwise and I'll reopen!\n. Closing in favor of #645 \n. ",
    "jmkenz": "I'd like to pass a parameter without making it appear in the URL.  This is supported by ui-router using the 'params' key.  I'd like to request adding support for that into the foundationRoutes logic.\n\nE.g to use a parameter 'portfolioId' that won't appear in the URL:\n\nstate('new-nonurl', {\n  url: '/new',\n  params: {\n    portfolioId: null,\n  },\n  templateUrl: 'new.html'\n. Ah ha! So helpful :) This mixin update just saved my life.\n. Max-width media queries - does that mean developing CSS rules desktop-first?\n\nOn Wed, Sep 2, 2015 at 10:59 AM, Geoff Kimball notifications@github.com\nwrote:\n\n> @jmkenz https://github.com/jmkenz For Foundation 6 we're going to\n> switch to max-width media queries to avoid the display: block issue\n> altogether. I think eventually we'll transplant that fix to Apps as well.\n> \n> See zurb/foundation#6687 https://github.com/zurb/foundation/issues/6687\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/170#issuecomment-137144016\n> .\n\n## \n\nJames McKenzie\nCommunications Designer\njamesmckenzie.ca\n. That's brilliant - thanks for confirming :)\n\nOn Sat, Sep 5, 2015 at 8:31 PM, Geoff Kimball notifications@github.com\nwrote:\n\n> @jmkenz https://github.com/jmkenz It's only for .show-for-\\* classes, so\n> that you never need to assign display: block to an element. We can\n> refactor the visibility classes to only apply display: none to an\n> element, negating the need for element-specific visibility classes (\n> table.show-for-medium and so on).\n> \n> It does break our mobile-first rule, which is sort of a tough call to\n> make, but we've only made that call for this specific feature. The class\n> itself still follows mobile first logic: \"show this on x size and up\", even\n> if the rule in the background is max-width.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/170#issuecomment-138017785\n> .\n\n## \n\nJames McKenzie\nCommunications Designer\njamesmckenzie.ca\n. Is it possible to limit the number of visible notifications? I want to show only 1 at a time.  I've tried the clearAll() method before each new notification is published, but it has a delayed reaction, leaving both notifications visible at the same time for a full second.\n. Another fix is to wrap the publish in a $timeout. The time can be set to 0.\n\n$timeout(function(){\n  FoundationApi.publish('static-alert-message', 'open')\n}, 0);\n. I'd like to pass a parameter without making it appear in the URL.  This is supported by ui-router using the 'params' key.  I'd like to request adding support for that into the foundationRoutes logic.\n\nE.g to use a parameter 'portfolioId' that won't appear in the URL:\n\nstate('new-nonurl', {\n  url: '/new',\n  params: {\n    portfolioId: null,\n  },\n  templateUrl: 'new.html'\n. Ah ha! So helpful :) This mixin update just saved my life.\n. Max-width media queries - does that mean developing CSS rules desktop-first?\n\nOn Wed, Sep 2, 2015 at 10:59 AM, Geoff Kimball notifications@github.com\nwrote:\n\n> @jmkenz https://github.com/jmkenz For Foundation 6 we're going to\n> switch to max-width media queries to avoid the display: block issue\n> altogether. I think eventually we'll transplant that fix to Apps as well.\n> \n> See zurb/foundation#6687 https://github.com/zurb/foundation/issues/6687\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/170#issuecomment-137144016\n> .\n\n## \n\nJames McKenzie\nCommunications Designer\njamesmckenzie.ca\n. That's brilliant - thanks for confirming :)\n\nOn Sat, Sep 5, 2015 at 8:31 PM, Geoff Kimball notifications@github.com\nwrote:\n\n> @jmkenz https://github.com/jmkenz It's only for .show-for-\\* classes, so\n> that you never need to assign display: block to an element. We can\n> refactor the visibility classes to only apply display: none to an\n> element, negating the need for element-specific visibility classes (\n> table.show-for-medium and so on).\n> \n> It does break our mobile-first rule, which is sort of a tough call to\n> make, but we've only made that call for this specific feature. The class\n> itself still follows mobile first logic: \"show this on x size and up\", even\n> if the rule in the background is max-width.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/170#issuecomment-138017785\n> .\n\n## \n\nJames McKenzie\nCommunications Designer\njamesmckenzie.ca\n. Is it possible to limit the number of visible notifications? I want to show only 1 at a time.  I've tried the clearAll() method before each new notification is published, but it has a delayed reaction, leaving both notifications visible at the same time for a full second.\n. Another fix is to wrap the publish in a $timeout. The time can be set to 0.\n\n$timeout(function(){\n  FoundationApi.publish('static-alert-message', 'open')\n}, 0);\n. ",
    "jwvanderbeck": "\"Would you ever want a block on a smaller screen and a panel on a larger screen?\"\n\nDefinitely want to be able to use panels on a large screen.  In fact the app i'm building right now is built around the concept of panels that slide in and out as needed, even on a large screen.\n. Ah I misread that as a two part question rather than one. \n. I have two basic use cases for Panels in my app.  I don't know if either of this is currently support, on a roadmap, or just plain will not be supported, but I think both of these cases are things that will commonly come up if you are targeting Web Applications.\n\n## Case 1 - Panel Exclusive Visibility\n\nIt would be nice to be able to make it so that when a user opens a panel, that may cause other panels to close.  This can get into some pretty complex visibility rules, but here is a basic one that I am looking at.  Given an example page of a center main content, and panels on the left and right.  On large and medium screens, the user can have both left and right panels open at the same time if they choose, but on small screens opening one side should auto close the other side to prevent panel overlap.\n\n## Case 2 - Panel \"stops\" or, not always open or closed panels\n\nI need to be able to make panels that don't fully slide in or out, but rather have predefined stop points based on the panel itself.  When \"closed\" in my case, a panel should actually still have a small portion of itself exposed, say about 60 pixels, where there will be icons for quick actions the user can select without opening the panel.  Then if the user \"opens\" the panel, I want it to only open about 50%, exposing the common actions in that panel.  Then if the user chooses, they can open it all the way to get at even more features.  Even when fully open though it should not fully slide in for visual reasons.  Another panel I want only two states, open and close, but closed should only retract the panel about 50%.\n\nI can probably find a way to hack both these cases in Javascript, but it seems to me that they are both cases that would see use in a wide variety of web based applications so might be something to consider if not being considered already.\n. I figured i'd be hacking my own at this stage, but its great to hear you guys are considering this functionality.  I think as we shift more into the application state of mind, things like this will become more common place scenarios.\n\nI haven't looked at your code yet for open and closing the panels, but it should be almost as simple as being able to pass an argument to open/close t indicate a stop point which would then be translated into the amount of translation.\n. I hope you don't mind some feedback by a relatively newbie designer.  My strong suit is in programming, not web design.  That said I think you will find that people like me are a strong core of the new \"web app\" developer crowd.\n\nI am really excited by what Zurb is doing with this new Foundation for Apps.  I am building a new website that I want to give the user the same experience that they get on native device, and web apps is where it is at.  The ability to have independent blocks of content that can each individually scroll, move, etc, as need is vital.  \n\nI am not a fan of the classic 12 column layout.  I know really talented people can do some amazing things with it, but i'm not one of them.  To me it feels like only a small step of from the 90's where you would take a Photoshop image and slice it up into cells and plop it into a webpage with a table.\n\nScreen resolution has exploded recently, and we have websites that use 50% of the available screen size.  It looks silly.  I want to build web apps that can scale and become a fun, interactive experience that fills the browser window no matter how small or how large.  We've gotten so good at dealing with small screens, but it feels like large screens have fallen behind.  Look at the new iMac 5k display.  People are going to be viewing websites on that thing that look like a sliver in the middle of the screen.\n\nThis new flex based layout system really intrigues me and I can't wait to figure it all out so that I can make amazing apps with it.  I have a design that i'm prototyping right now that needs the ability to have panels of content that can move separately from everything else.  Sliding in and out as needed, and scrolling as needed to deal with expanding content.\n\nNow with all that high brow feedback out of the way, a few pieces of concrete feedback.  \n- From your example above I find myself at a loss as to what the point of Group is.  It looks like you are just making an entire layout in blocks.\n- Blocks that scroll independently from other blocks.  You have talked about this before, but I can't seem to figure out how to do it.  \n\nI think the concept of modifiers like 'content' are good.  I personally think they are better than entirely new classes.  Though it is obviously a conceptual thing, but I find it makes more sense to me.  I have a block with or without content.  .block.content, or .block  - Maybe if there was a layout modifier, it would be a bit more symmetrical and clear (/block.content vs .block.layout), but that isn't a huge thing.\n\nAnyway, there is my 2 cents.  Now i'm off to keep beating on this to try and figure out how to make it do what I need :)\n. The scrolling is just something i'm doing wrong on my markup i'm sure.  The demos scroll properly.  I just need to sit down and see what markup i'm missing.\n. How does this system work for vertical spacing control? I'm currently finding it hard to control what would have been row heights between my blocks.\n. The manual sizing method should work fine for my current needs.  I'll look into that.  Thanks.\n. Actually let me follow up on this.  In looking at my markup, i'm finding I am having trouble understanding where a `block` is defining a horizontally oriented block and when it is defining a vertical oriented block.\nI guess i'm still having issues translating from rows & columns.\n\n```\n.frame.vertical\n    .block.shrink\n        .block.content\n    .block.stretch\n        .block.content\n```\n\nSo that is defining two blocks of content, **stacked vertically** on each other, filling the width of the browser window.  I'm not sure entirely why that is, but I know it is because that is what i'm seeing.\n\nNow I expand that:\n\n```\n.frame.vertical\n    .block.shrink\n        .block.content\n    .block.stretch\n        .block.small-3\n            .block.content\n        .block.small-3\n            .block.content\n        .block.small-3\n            .block.content\n```\n\nAnd suddenly I have 3 columns in the second of the rows.  But I don't understand why, and I don't understand the distinction that is specifying how a block is working.  So yeah i'm still having a lot of confusion with the generic `block` terminology here.\n\nBut if I go with the flow of that doing what it does, then to me the following markup should give me a stack of 2 blocks in the 3rd column, 2nd row.  But it doesn't appear to.\n\n```\n.frame.vertical\n    .block.shrink\n        .block.content\n    .block.stretch\n        .block.small-3\n            .block.content\n        .block.small-3\n            .block.content\n        .block.small-3\n            .block.shrink\n                .block.content\n            .block.stretch\n                .block.content\n```\n\n**edit** - Ok it looks like my problem was missing some content blocks.  That works now but I still am finding it difficult to grasp what is happening.\n. @gakimball thanks for that.  I'm starting to see it, but i'm still failing at getting what i'm after.  What I am trying to do is Panel on the left that is always a panel.  Center content.  Then on the right, two _vertically stacked_ Panels that become blocks on large screens.\n\nNo matter what I do though I can't get those two panels on the right to sit on top of each other vertically.  This is the mockup i'm trying to reproduce:\n![ssb-new-holo-mockup](https://cloud.githubusercontent.com/assets/161126/4948084/a0d148a8-65ec-11e4-80da-403afcaeb5c9.png)\n\nI can't for the life of me find a way to do the two panels on the right.  Here is my current test markup\n\n```\n.frame.vertical\n    .block.content.shrink\n        h1 This is a Header\n    .block.stretch\n        .panel.panel-left#panel\n            p This is a panel\n        .block.content\n            p This is some content\n        .block\n            .panel.panel-right.large-block\n                p This is some more content\n                button(data-panel-toggle=\"panel\") Toggle Panel\n            .panel.panel-right.large-block\n                p Panel content\n```\n\nNo matter what I try though, the two right panels always end up next to each other horizontally rather than stacked vertically.\n. @ilanbiala It is a planned rebuild of [this site](https://www.stantonspacebarn.com) which is based on [this upcoming video game](https://robertsspaceindustries.com/about-the-game)\n\n@gakimball Any thoughts on getting vertically stacked panels like above?\n\n**EDIT** Ok yay! I got it working.  I was apparently only missing one tiny piece.  In my markup above, I just needed to make the block that my two panels were in, into a content block and boom it all works now.  And it is a thing of beauty.\n. Actually it looks like making that parent block a content block doesn't quite fix my issue.  It does allow the two panels to stack vertically like I want, but it also is constricting the panels to the space of that block, which means I really lose the benefit of them being panels because I can't slide them open properly.  They get cut off by the size of the parent.\n\nSo i'm still looking for a way to have two vertically stacked panels that operate like standard panels, open and close on top of the content underneath.\n\n[My Markup](https://github.com/jwvanderbeck/ssb-webapp/blob/master/app/components/docs/grid.jade)\n[My CSS](https://github.com/jwvanderbeck/ssb-webapp/tree/master/source/scss)\n. You guys are only using node-sass for your gulp compiles.  Are you looking to provide a full stack for the final release of Foundation for Apps? I always assumed you just had it all wrapped it for ease of testing and quick start.\n\nSeems to me in the end just leave the choice of sass compilation to the user.  Some prefer node-sass others prefer ruby-sass.  Sometimes one of the other is required based on the host.\n\nPersonally i'm not using any of your stack at all.  I'm using an Express server, my own Gulp configs, and node-sass.  \n. Ah my bad.  I had pulled early in the day.  I didn't realize you were working that fast!\n. You shouldn't be needing to modify a gulp component as that doesn't even belong to Foundation.\n\nI am not seeing this error with a fresh pull as of this morning.  Very you are all up to date and do an `npm install` to be sure you have all up to date dependencies.\n. Well my point was that I didn't need to make that change, and everything runs fine for me using the latest Foundation pull.\n\nIf you look at that code in gulp-sass, `addedLocalDirPath` is only set to `true` **after** looking for the path in `opts.includePaths` so the error on line 95 should be impossible.  Obviously it isn't, since you are getting it, but the oddness makes me think you somehow have something out of whack which is why I suggested a clean pull of everything and an `npm install` to ensure everything is completely up to date.\n. Now that I say all that, I see that Zurb's own CI is getting the same error as you guys are, so that is very odd.  I am totally not having that problem :(\n. Ok the _problem_ of not seeing the problem was apparently on my side.  I deleted my repo and re-pulled and now I am seeing the issue as well.\n. At a quick glance what I see is the call from gulp-sass to node-sass is causing the opts.includePaths to get wiped out.\n\nLooking at my own project which I setup a few days ago, and the current state of the repo, I am seeing that node-sass is a newer version now than it was before.\n. Looks like Zurb may need to punt this one up to gulp-sass & node-sass.\n\nAs far as I can tell with a cursory look, it appears that node-sass has changed the way it handles the options sent to it.  The way it _used_ to work is it made a deep copy of the options and worked on its own copy.  Now it appears to use the options sent to it directly.  And gulp-sass uses internally a part of the options that nonde-sass doesn't, and that key is being lost.\n\nIdeally this **should** be fixed in gulp-sass as @blazuka mentioned\n. FYI there is an already an issue opened with gulp-sass for this.\n. It is pretty simple to separate them on your own.  That is how i'm using it.\n\n**edit** To clarify i'm not using Foundation's dynamic routing.  I just removed the connect server stuff in gulp and am using my own express server.\n. Heh wish I had noticed that.  It would have been a bit quicker :)\n. Ah then it wouldn't have mattered :)  Think i'll switch everything over to that now though.  Should be a bit cleaner and definitely easier to update.\n. `bower install zurb/foundation-apps` This repo doesn't seem to exist\n\n```\n$ bower install\nbower foundation#*          not-cached git://github.com/zurb/bower-foundation-apps.git#*\nbower foundation#*             resolve git://github.com/zurb/bower-foundation-apps.git#*\nbower foundation#*             ECMDERR Failed to execute \"git ls-remote --tags --heads git://github.com/zurb/bower-foundation-apps.git\", exit code of #128\n\nAdditional error details:\nfatal: remote error: \n  Repository not found.\n```\n. Ok I got it working now.  But there are some serious issues installing it as a part of your own stack.  Some pieces need to be pulled apart some more.  It is still making assumptions about the end stack.  Should those be reported somewhere or..?\n. First off, I haven't touched a line of Angular in over 6 months, so I'm a bit on the rusty side, but the main problem seems to stem from how the dependency of Foundation for Apps is exposed.  The install includes an app.js which defines an Angular application inside of the Foundation for Apps codebase which seems a bit odd to me.  Furthermore, if you use that but don't use your quick routing system, it will outright fail with a syntax error due to the expected routes variable not being present.\n\nI'm not sure the best way is to deliver a large service like Foundation, but typically services for Angular won't declare their own apps or have assumptions on things like routing.  Is it possible to simply expose all of Foundation as  standard service to be injected into the user's app?  \n\nThe flip side is maybe it is a matter of documentation.  Remove app.js, remove Foundation's own declaration of an App and document all those individual services so that the user knows what they can/should inject into their own app, as well as any other required initialization that needs to be called.\n\nThe underlying issue as I see it now is that a dependency of my project, Foundation for Apps, is essentially trying to make its own ng-app rather than exposing a module or service for my own app to inject.  \n\nLike I said I think it may just be a matter of going one step too far.  Instead of making that app, just document the services exposed so that the user knows what to inject.\n\nOr maybe Foundation is too complicated for all that -- i've never worked with an Angular service as large as this before.\n\nDoes my rambling make any sense?\n. @AntJanus It makes sense, but what you suggest means modifying the Foundation code that lives in your bower install, which is IMHO a bad thing.  I should never have to touch a line of code in there.\n\nWhich is why I suggested pulling the app.js out and documenting how to do it yourself for the user.  Which is pretty much what I ended up doing.  Rather than modifying the app.js in Foundation, I removed it from my Sass compile, and made my own version of it in my code.\n\nI guess the issue comes down to how to you satisfy both the Designer who wants to rapidly prototype something, and the Developer who is building a production ready website. IMHO the bower dependency should cater to the Developer, and you should provide a full stacked install separately or as a second bower install, for the Designer.\n. @AntJanus As I said, that is pretty much what I did.  Just ignored your app,js and made my own.  I think this route is fine as long as there is good documentation both on choosing which way to go, and informing the user of what they need to do in their own app module, as well as what is optional, and explaining it all.\n. Ok apparently in a completely non-intuitive manner, if I specify `shrink` on the last block, then it scoots over to where I want.\n. Woops.  Didn't mean to close this.  I've reworked my markup a bit, and I can get it working properly with a single right panel, but with two right panels it acts a bit weird.  If the overall browser width is wide enough that the two panels can fit side by side, then they will do that, rather than stack vertically like I want.  If I reduce the browser width enough, then they stack vertically exactly like I want.\n\nAs for `fa-panel` i'm a bit confused.  The slim docs you have in place now are just using a standard div.  I tried using an Angular directive, but the panel doesn't work properly when I do that.\n\n```\n<fa-panel position=\"left\" class=\"no-scroll id=\"statspanel\">\n```\n\nDoes not work for me(even if I do it the div way like you show, which isn't my preferred way of using directives - but regardless they are equal to Angular), but if I replace it with\n\n```\n<div class=\"panel panel-left noscroll\" id=\"statspanel\">\n```\n\nThen it works fine.\n**edit** Actually the `fa-panel` directive seems to work if instead of using `position=\"left\"` I simply add the `panel-left` class.\n. Actually just ignore everything i'm saying right now.  I'm getting totally inconsistent results from changes and tests i'm doing.  I'm going to close this for now until i'm more confident in my markup.\n. @AntJanus Case 2 & 3 both use the angular directive to describe the panel.  As for the button, I just tried fa-toggle and it does nothing. In all 3 cases.\n. Ah you know what.  I hadn't looked at the console in a while, been so focused on just my HTML.  It looks like an error is being thrown in Foundation.init() which would of course prevent everything from starting up properly.\n`TypeError: head.has is not a function  angular-app.js:31289`\n\nLet me finish the work I was doing to separate my project from F-Apps so that I can get completely up to date on the repo then check back.\n. Ok sorry about that.  I'm about 2 days behind on the F-Apps repo as it got a bit hard to update.  I'm pulling it out of my project now and putting it in as a simple bower dependency now that that option is available.  \n\nAssuming that fixes it I will close this.\n. Well I separated everything out, had a few issues installing foundation-apps standalone, but that isn't for this ticket.  Finally got it all setup properly, but panels still don't work.\n\nI then did a completely fresh pull of this repo, changed nothing but to fix the gulp-sass error, and ran it.  Panels aren't working in the demo either.  The demo is still trying to use the standard div way, but that isn't working in the demo.  I then changed the demo to use the angular directive and that isn't working either.\n\nSo at this stage all I can do is assume things are in a broken state and try it again later.\n. @AntJanus I was simply clicking on Panel on the left navbar which goes to localhost:8080/panel and that is where it was not working.\n\nI just tried /playground and yes that is working correctly, so let me look at that code and dig it apart.  Thanks.\n. I actually was trying those, but not getting much back.  No matter what I did I always ended up with a solid 100% bar, and always the same color.  Maybe i'm just using it wrong, since there is no documentation.\n\nAuto color changing is awesome.  My current site has a whole chunk of code for doing that, so be nice to have it automatic!\n. \"Would you ever want a block on a smaller screen and a panel on a larger screen?\"\n\nDefinitely want to be able to use panels on a large screen.  In fact the app i'm building right now is built around the concept of panels that slide in and out as needed, even on a large screen.\n. Ah I misread that as a two part question rather than one. \n. I have two basic use cases for Panels in my app.  I don't know if either of this is currently support, on a roadmap, or just plain will not be supported, but I think both of these cases are things that will commonly come up if you are targeting Web Applications.\n\n## Case 1 - Panel Exclusive Visibility\n\nIt would be nice to be able to make it so that when a user opens a panel, that may cause other panels to close.  This can get into some pretty complex visibility rules, but here is a basic one that I am looking at.  Given an example page of a center main content, and panels on the left and right.  On large and medium screens, the user can have both left and right panels open at the same time if they choose, but on small screens opening one side should auto close the other side to prevent panel overlap.\n\n## Case 2 - Panel \"stops\" or, not always open or closed panels\n\nI need to be able to make panels that don't fully slide in or out, but rather have predefined stop points based on the panel itself.  When \"closed\" in my case, a panel should actually still have a small portion of itself exposed, say about 60 pixels, where there will be icons for quick actions the user can select without opening the panel.  Then if the user \"opens\" the panel, I want it to only open about 50%, exposing the common actions in that panel.  Then if the user chooses, they can open it all the way to get at even more features.  Even when fully open though it should not fully slide in for visual reasons.  Another panel I want only two states, open and close, but closed should only retract the panel about 50%.\n\nI can probably find a way to hack both these cases in Javascript, but it seems to me that they are both cases that would see use in a wide variety of web based applications so might be something to consider if not being considered already.\n. I figured i'd be hacking my own at this stage, but its great to hear you guys are considering this functionality.  I think as we shift more into the application state of mind, things like this will become more common place scenarios.\n\nI haven't looked at your code yet for open and closing the panels, but it should be almost as simple as being able to pass an argument to open/close t indicate a stop point which would then be translated into the amount of translation.\n. I hope you don't mind some feedback by a relatively newbie designer.  My strong suit is in programming, not web design.  That said I think you will find that people like me are a strong core of the new \"web app\" developer crowd.\n\nI am really excited by what Zurb is doing with this new Foundation for Apps.  I am building a new website that I want to give the user the same experience that they get on native device, and web apps is where it is at.  The ability to have independent blocks of content that can each individually scroll, move, etc, as need is vital.  \n\nI am not a fan of the classic 12 column layout.  I know really talented people can do some amazing things with it, but i'm not one of them.  To me it feels like only a small step of from the 90's where you would take a Photoshop image and slice it up into cells and plop it into a webpage with a table.\n\nScreen resolution has exploded recently, and we have websites that use 50% of the available screen size.  It looks silly.  I want to build web apps that can scale and become a fun, interactive experience that fills the browser window no matter how small or how large.  We've gotten so good at dealing with small screens, but it feels like large screens have fallen behind.  Look at the new iMac 5k display.  People are going to be viewing websites on that thing that look like a sliver in the middle of the screen.\n\nThis new flex based layout system really intrigues me and I can't wait to figure it all out so that I can make amazing apps with it.  I have a design that i'm prototyping right now that needs the ability to have panels of content that can move separately from everything else.  Sliding in and out as needed, and scrolling as needed to deal with expanding content.\n\nNow with all that high brow feedback out of the way, a few pieces of concrete feedback.  \n- From your example above I find myself at a loss as to what the point of Group is.  It looks like you are just making an entire layout in blocks.\n- Blocks that scroll independently from other blocks.  You have talked about this before, but I can't seem to figure out how to do it.  \n\nI think the concept of modifiers like 'content' are good.  I personally think they are better than entirely new classes.  Though it is obviously a conceptual thing, but I find it makes more sense to me.  I have a block with or without content.  .block.content, or .block  - Maybe if there was a layout modifier, it would be a bit more symmetrical and clear (/block.content vs .block.layout), but that isn't a huge thing.\n\nAnyway, there is my 2 cents.  Now i'm off to keep beating on this to try and figure out how to make it do what I need :)\n. The scrolling is just something i'm doing wrong on my markup i'm sure.  The demos scroll properly.  I just need to sit down and see what markup i'm missing.\n. How does this system work for vertical spacing control? I'm currently finding it hard to control what would have been row heights between my blocks.\n. The manual sizing method should work fine for my current needs.  I'll look into that.  Thanks.\n. Actually let me follow up on this.  In looking at my markup, i'm finding I am having trouble understanding where a `block` is defining a horizontally oriented block and when it is defining a vertical oriented block.\nI guess i'm still having issues translating from rows & columns.\n\n```\n.frame.vertical\n    .block.shrink\n        .block.content\n    .block.stretch\n        .block.content\n```\n\nSo that is defining two blocks of content, **stacked vertically** on each other, filling the width of the browser window.  I'm not sure entirely why that is, but I know it is because that is what i'm seeing.\n\nNow I expand that:\n\n```\n.frame.vertical\n    .block.shrink\n        .block.content\n    .block.stretch\n        .block.small-3\n            .block.content\n        .block.small-3\n            .block.content\n        .block.small-3\n            .block.content\n```\n\nAnd suddenly I have 3 columns in the second of the rows.  But I don't understand why, and I don't understand the distinction that is specifying how a block is working.  So yeah i'm still having a lot of confusion with the generic `block` terminology here.\n\nBut if I go with the flow of that doing what it does, then to me the following markup should give me a stack of 2 blocks in the 3rd column, 2nd row.  But it doesn't appear to.\n\n```\n.frame.vertical\n    .block.shrink\n        .block.content\n    .block.stretch\n        .block.small-3\n            .block.content\n        .block.small-3\n            .block.content\n        .block.small-3\n            .block.shrink\n                .block.content\n            .block.stretch\n                .block.content\n```\n\n**edit** - Ok it looks like my problem was missing some content blocks.  That works now but I still am finding it difficult to grasp what is happening.\n. @gakimball thanks for that.  I'm starting to see it, but i'm still failing at getting what i'm after.  What I am trying to do is Panel on the left that is always a panel.  Center content.  Then on the right, two _vertically stacked_ Panels that become blocks on large screens.\n\nNo matter what I do though I can't get those two panels on the right to sit on top of each other vertically.  This is the mockup i'm trying to reproduce:\n![ssb-new-holo-mockup](https://cloud.githubusercontent.com/assets/161126/4948084/a0d148a8-65ec-11e4-80da-403afcaeb5c9.png)\n\nI can't for the life of me find a way to do the two panels on the right.  Here is my current test markup\n\n```\n.frame.vertical\n    .block.content.shrink\n        h1 This is a Header\n    .block.stretch\n        .panel.panel-left#panel\n            p This is a panel\n        .block.content\n            p This is some content\n        .block\n            .panel.panel-right.large-block\n                p This is some more content\n                button(data-panel-toggle=\"panel\") Toggle Panel\n            .panel.panel-right.large-block\n                p Panel content\n```\n\nNo matter what I try though, the two right panels always end up next to each other horizontally rather than stacked vertically.\n. @ilanbiala It is a planned rebuild of [this site](https://www.stantonspacebarn.com) which is based on [this upcoming video game](https://robertsspaceindustries.com/about-the-game)\n\n@gakimball Any thoughts on getting vertically stacked panels like above?\n\n**EDIT** Ok yay! I got it working.  I was apparently only missing one tiny piece.  In my markup above, I just needed to make the block that my two panels were in, into a content block and boom it all works now.  And it is a thing of beauty.\n. Actually it looks like making that parent block a content block doesn't quite fix my issue.  It does allow the two panels to stack vertically like I want, but it also is constricting the panels to the space of that block, which means I really lose the benefit of them being panels because I can't slide them open properly.  They get cut off by the size of the parent.\n\nSo i'm still looking for a way to have two vertically stacked panels that operate like standard panels, open and close on top of the content underneath.\n\n[My Markup](https://github.com/jwvanderbeck/ssb-webapp/blob/master/app/components/docs/grid.jade)\n[My CSS](https://github.com/jwvanderbeck/ssb-webapp/tree/master/source/scss)\n. You guys are only using node-sass for your gulp compiles.  Are you looking to provide a full stack for the final release of Foundation for Apps? I always assumed you just had it all wrapped it for ease of testing and quick start.\n\nSeems to me in the end just leave the choice of sass compilation to the user.  Some prefer node-sass others prefer ruby-sass.  Sometimes one of the other is required based on the host.\n\nPersonally i'm not using any of your stack at all.  I'm using an Express server, my own Gulp configs, and node-sass.  \n. Ah my bad.  I had pulled early in the day.  I didn't realize you were working that fast!\n. You shouldn't be needing to modify a gulp component as that doesn't even belong to Foundation.\n\nI am not seeing this error with a fresh pull as of this morning.  Very you are all up to date and do an `npm install` to be sure you have all up to date dependencies.\n. Well my point was that I didn't need to make that change, and everything runs fine for me using the latest Foundation pull.\n\nIf you look at that code in gulp-sass, `addedLocalDirPath` is only set to `true` **after** looking for the path in `opts.includePaths` so the error on line 95 should be impossible.  Obviously it isn't, since you are getting it, but the oddness makes me think you somehow have something out of whack which is why I suggested a clean pull of everything and an `npm install` to ensure everything is completely up to date.\n. Now that I say all that, I see that Zurb's own CI is getting the same error as you guys are, so that is very odd.  I am totally not having that problem :(\n. Ok the _problem_ of not seeing the problem was apparently on my side.  I deleted my repo and re-pulled and now I am seeing the issue as well.\n. At a quick glance what I see is the call from gulp-sass to node-sass is causing the opts.includePaths to get wiped out.\n\nLooking at my own project which I setup a few days ago, and the current state of the repo, I am seeing that node-sass is a newer version now than it was before.\n. Looks like Zurb may need to punt this one up to gulp-sass & node-sass.\n\nAs far as I can tell with a cursory look, it appears that node-sass has changed the way it handles the options sent to it.  The way it _used_ to work is it made a deep copy of the options and worked on its own copy.  Now it appears to use the options sent to it directly.  And gulp-sass uses internally a part of the options that nonde-sass doesn't, and that key is being lost.\n\nIdeally this **should** be fixed in gulp-sass as @blazuka mentioned\n. FYI there is an already an issue opened with gulp-sass for this.\n. It is pretty simple to separate them on your own.  That is how i'm using it.\n\n**edit** To clarify i'm not using Foundation's dynamic routing.  I just removed the connect server stuff in gulp and am using my own express server.\n. Heh wish I had noticed that.  It would have been a bit quicker :)\n. Ah then it wouldn't have mattered :)  Think i'll switch everything over to that now though.  Should be a bit cleaner and definitely easier to update.\n. `bower install zurb/foundation-apps` This repo doesn't seem to exist\n\n```\n$ bower install\nbower foundation#*          not-cached git://github.com/zurb/bower-foundation-apps.git#*\nbower foundation#*             resolve git://github.com/zurb/bower-foundation-apps.git#*\nbower foundation#*             ECMDERR Failed to execute \"git ls-remote --tags --heads git://github.com/zurb/bower-foundation-apps.git\", exit code of #128\n\nAdditional error details:\nfatal: remote error: \n  Repository not found.\n```\n. Ok I got it working now.  But there are some serious issues installing it as a part of your own stack.  Some pieces need to be pulled apart some more.  It is still making assumptions about the end stack.  Should those be reported somewhere or..?\n. First off, I haven't touched a line of Angular in over 6 months, so I'm a bit on the rusty side, but the main problem seems to stem from how the dependency of Foundation for Apps is exposed.  The install includes an app.js which defines an Angular application inside of the Foundation for Apps codebase which seems a bit odd to me.  Furthermore, if you use that but don't use your quick routing system, it will outright fail with a syntax error due to the expected routes variable not being present.\n\nI'm not sure the best way is to deliver a large service like Foundation, but typically services for Angular won't declare their own apps or have assumptions on things like routing.  Is it possible to simply expose all of Foundation as  standard service to be injected into the user's app?  \n\nThe flip side is maybe it is a matter of documentation.  Remove app.js, remove Foundation's own declaration of an App and document all those individual services so that the user knows what they can/should inject into their own app, as well as any other required initialization that needs to be called.\n\nThe underlying issue as I see it now is that a dependency of my project, Foundation for Apps, is essentially trying to make its own ng-app rather than exposing a module or service for my own app to inject.  \n\nLike I said I think it may just be a matter of going one step too far.  Instead of making that app, just document the services exposed so that the user knows what to inject.\n\nOr maybe Foundation is too complicated for all that -- i've never worked with an Angular service as large as this before.\n\nDoes my rambling make any sense?\n. @AntJanus It makes sense, but what you suggest means modifying the Foundation code that lives in your bower install, which is IMHO a bad thing.  I should never have to touch a line of code in there.\n\nWhich is why I suggested pulling the app.js out and documenting how to do it yourself for the user.  Which is pretty much what I ended up doing.  Rather than modifying the app.js in Foundation, I removed it from my Sass compile, and made my own version of it in my code.\n\nI guess the issue comes down to how to you satisfy both the Designer who wants to rapidly prototype something, and the Developer who is building a production ready website. IMHO the bower dependency should cater to the Developer, and you should provide a full stacked install separately or as a second bower install, for the Designer.\n. @AntJanus As I said, that is pretty much what I did.  Just ignored your app,js and made my own.  I think this route is fine as long as there is good documentation both on choosing which way to go, and informing the user of what they need to do in their own app module, as well as what is optional, and explaining it all.\n. Ok apparently in a completely non-intuitive manner, if I specify `shrink` on the last block, then it scoots over to where I want.\n. Woops.  Didn't mean to close this.  I've reworked my markup a bit, and I can get it working properly with a single right panel, but with two right panels it acts a bit weird.  If the overall browser width is wide enough that the two panels can fit side by side, then they will do that, rather than stack vertically like I want.  If I reduce the browser width enough, then they stack vertically exactly like I want.\n\nAs for `fa-panel` i'm a bit confused.  The slim docs you have in place now are just using a standard div.  I tried using an Angular directive, but the panel doesn't work properly when I do that.\n\n```\n<fa-panel position=\"left\" class=\"no-scroll id=\"statspanel\">\n```\n\nDoes not work for me(even if I do it the div way like you show, which isn't my preferred way of using directives - but regardless they are equal to Angular), but if I replace it with\n\n```\n<div class=\"panel panel-left noscroll\" id=\"statspanel\">\n```\n\nThen it works fine.\n**edit** Actually the `fa-panel` directive seems to work if instead of using `position=\"left\"` I simply add the `panel-left` class.\n. Actually just ignore everything i'm saying right now.  I'm getting totally inconsistent results from changes and tests i'm doing.  I'm going to close this for now until i'm more confident in my markup.\n. @AntJanus Case 2 & 3 both use the angular directive to describe the panel.  As for the button, I just tried fa-toggle and it does nothing. In all 3 cases.\n. Ah you know what.  I hadn't looked at the console in a while, been so focused on just my HTML.  It looks like an error is being thrown in Foundation.init() which would of course prevent everything from starting up properly.\n`TypeError: head.has is not a function  angular-app.js:31289`\n\nLet me finish the work I was doing to separate my project from F-Apps so that I can get completely up to date on the repo then check back.\n. Ok sorry about that.  I'm about 2 days behind on the F-Apps repo as it got a bit hard to update.  I'm pulling it out of my project now and putting it in as a simple bower dependency now that that option is available.  \n\nAssuming that fixes it I will close this.\n. Well I separated everything out, had a few issues installing foundation-apps standalone, but that isn't for this ticket.  Finally got it all setup properly, but panels still don't work.\n\nI then did a completely fresh pull of this repo, changed nothing but to fix the gulp-sass error, and ran it.  Panels aren't working in the demo either.  The demo is still trying to use the standard div way, but that isn't working in the demo.  I then changed the demo to use the angular directive and that isn't working either.\n\nSo at this stage all I can do is assume things are in a broken state and try it again later.\n. @AntJanus I was simply clicking on Panel on the left navbar which goes to localhost:8080/panel and that is where it was not working.\n\nI just tried /playground and yes that is working correctly, so let me look at that code and dig it apart.  Thanks.\n. I actually was trying those, but not getting much back.  No matter what I did I always ended up with a solid 100% bar, and always the same color.  Maybe i'm just using it wrong, since there is no documentation.\n\nAuto color changing is awesome.  My current site has a whole chunk of code for doing that, so be nice to have it automatic!\n. ",
    "jpdesigndev": "I'm rolling my own for your _Case 2_ as we speak. It's a bit premature, but I second your use case.\n. Cool. I'm planning on moving forward with this project in a large application. I understand everything is in flux and/or incomplete. Hopefully, you will be ok with some of the things I can contribute over the next few months.\n. Woah! Sweet. That's sooner than I had expected even. All the better.\n. Although I can't speak to libsass, if they are following the Sass spec/docs, my PR should be good. \n\nhttp://sass-lang.com/documentation/file.SASS_REFERENCE.html#each-directive\n\nAlso, kudos for making the switch to libsass. I suppose that decision will, finally, push me over the edge.\n. Sweet! Can't wait for this to land.\n. Is there anything keeping this PR from being merged? Waiting on refactored grid code?\n. I've yet to find anything that is remotely as reliable as [Famous](http://famo.us/) unfortunately. This is going to be a difficult problem to solve. I feel for you @AntJanus \n. I too, think intermediary classes will prove useful. The potential issue is that each time you add/remove a class, the browser repaints. \n. @AntJanus Sure thing. The one thing you don't want to do is repaint (change class name) during an animation. \n\nI'm sure you weren't thinking of doing that, but I figured I would point that out.\n\nOne thing that may prove useful is `$timeout`. One thing that has been a problem for me, in the past, when adding/removing class names as fast as JS runs, you'll get something that resembles a race condition. Often these issue are intermittent and depend on which browser you are in (pay careful attention to iOS Webkit). Sometimes, $timeout isn't all that's required and what you want is the force the browser to repaint before adding the next class.\n\nUnfortunately, I don't have answers. Just suggestions and prayers that you have the patience to sort these things out once and for all :)\n. This may be a bit simplistic, but have you tried moving the _\"other absolutely positioned objects (like off-canvas)\"_ outside the _\"views' parent\"_ in the DOM?\n\nSorry, I just saw who was posting this, @AntJanus, I'm quite certain your not talking about a specific issue, rather, a a framework level issue.\n. Non-dynamically. I thought you were having a specific issue for a specific edge case. Wasn't thinking in framework terms. My bad.\n. I'm rolling my own for your _Case 2_ as we speak. It's a bit premature, but I second your use case.\n. Cool. I'm planning on moving forward with this project in a large application. I understand everything is in flux and/or incomplete. Hopefully, you will be ok with some of the things I can contribute over the next few months.\n. Woah! Sweet. That's sooner than I had expected even. All the better.\n. Although I can't speak to libsass, if they are following the Sass spec/docs, my PR should be good. \n\nhttp://sass-lang.com/documentation/file.SASS_REFERENCE.html#each-directive\n\nAlso, kudos for making the switch to libsass. I suppose that decision will, finally, push me over the edge.\n. Sweet! Can't wait for this to land.\n. Is there anything keeping this PR from being merged? Waiting on refactored grid code?\n. I've yet to find anything that is remotely as reliable as [Famous](http://famo.us/) unfortunately. This is going to be a difficult problem to solve. I feel for you @AntJanus \n. I too, think intermediary classes will prove useful. The potential issue is that each time you add/remove a class, the browser repaints. \n. @AntJanus Sure thing. The one thing you don't want to do is repaint (change class name) during an animation. \n\nI'm sure you weren't thinking of doing that, but I figured I would point that out.\n\nOne thing that may prove useful is `$timeout`. One thing that has been a problem for me, in the past, when adding/removing class names as fast as JS runs, you'll get something that resembles a race condition. Often these issue are intermittent and depend on which browser you are in (pay careful attention to iOS Webkit). Sometimes, $timeout isn't all that's required and what you want is the force the browser to repaint before adding the next class.\n\nUnfortunately, I don't have answers. Just suggestions and prayers that you have the patience to sort these things out once and for all :)\n. This may be a bit simplistic, but have you tried moving the _\"other absolutely positioned objects (like off-canvas)\"_ outside the _\"views' parent\"_ in the DOM?\n\nSorry, I just saw who was posting this, @AntJanus, I'm quite certain your not talking about a specific issue, rather, a a framework level issue.\n. Non-dynamically. I thought you were having a specific issue for a specific edge case. Wasn't thinking in framework terms. My bad.\n. ",
    "Martinspire": "Nice to see you guys going for flexbox. Been using it myself for a while now. One problem i had quite a few times was getting minimum height for the box. The height that makes sure the content fits and not  breaks any overflow or whatever. Especially when on mobile with those virtual-keyboards you will get in trouble because the content won't fit and will either overflow incorrectly or gives you tiny scrollbars with too much content to scroll.\n\nExample to mess around with: http://jsfiddle.net/wnu18w4g/ . I'm forcing a height on that which is clearly to small but think of it as the body of your product when a keyboard is up and you are using flexbox.\n. Hmm, i didn't have issues with scrolling inside flexbox on iOS and others. I did it with css only and that seemed to work. Although i don't recall if i might have had the outer or inner container to display:block\n\nI did have an issue with the iOS keyboard and rotating the device while it is shown, but that seems fixed on iOS 8. But that wasn't related to flexbox but to fixed elements.\n\nPerhaps we should separate devices which require Javascript for legacy-support by an external dependency. I don't think iOS8, Android 4.4 (or 5 even) and WP8.1 require a lot of Javascript fallback. Older devices do but using Flexbox is already separating a few and i even feel that devices that require `display:box` or `-webkit-display:box` instead of `display:flex` should already be separated.\nOr keep the 5.x branch for older devices and go for true next-gen support on 6.x Much like jQuery did with their 2.x branch (albeit they still support IE9 and stuff).\n\nIf you are going for Foundation for Apps, you are probably better off supporting latest iOS, Android and WP than going for older support. On iOS and WP you can be sure that most users (those that buy stuff at least) will use latest OS. On Android you are already fine with 4.4. Even if that doesn't have most devices, it will increase big time in the next couple of months as devices get updated. I'm not sure what the release would be of this, but apps developed with this will already be months apart from that anyways.\n. Why iOS 7? Doesn't seem to be needed since people will be updating in the next few weeks. And the ones who don't aren't going to be big customers anyways (stats prove that).\n\nAnd WP8.0 also is going to be replaced by 8.1 for most users. Since 8.0 has IE10 and 8.1 has IE11 i would drop 8.0 support asap. Takes way too long to implement legacysupport. Especially with grids and other new HTML5 stuff\n. Libgit? As for using with bower? Or how do you mean to replace what?\n\nI'm not sure about the `@each` function but if you mean SASS maps to refer your browser to a map-file then yes thats already possible with this. Although i must add that i've been using `Grunt`, not `Gulp` myself with `Node-Sass` (and thus `Grunt-Sass` instead of `Grunt-Contrib-Sass` which uses Ruby). \n. Nice! Thanks for the change\n. So Foundation 6 is released, but Ruby is still a requirement for Foundation for Apps?\n. Sounds good. I've used Rubyinstaller.org myself which also has the \"add to $PATH\" function in the installer.\nI've never had to use administrator capabilities in my CMD. Plus i normally open it from the directory i wanna work in by going to the folder in Windows Explorer and type `cmd` in the location-bar which will then open Command Prompt in the location i wanna work in.\nOn OSX i've got the XtraFinder tool for Finder which allows me to \"open a terminal here\" by adding the feature and just use sudo commands. I don't think you should remove the \"use sudo\" or whatever from the readme, but just state that it is required on OSX.\n\nBut thanks for changing the readme ;)\n. I would like to point out that you don't need WAMP or anything to act as a server because Grunt (and thus Node.JS) will do that for you. So you can just put it in something like C:/Development/Mystuff and run it from there.\n. AngularJS should come from the bower_components directory, so can you see it there?\n\nAlso, no need for putting it inside public_html or whatever, you will run a server using Grunt (and thus Node.JS). Therefor you will also need to use that port and not your local server. This might seem weird at first but you simply don't need to boot up a server for a node application. Node can do that for you with very little configuration.\n\nYou can change the gruntfile (or where the port is defined) if you want to use it on port 80 (and thus can just use localhost). But i won't recommend that for running it locally. Just stick to the script and you'll be fine\n. Yeah you have to build your files first before you can serve them on your own server. Foundation Apps are standalone in the sense that after you create a production version, you can run in from pretty much anywhere. But you do need to run grunt and gulp at least once to get all the files going. If those tasks fail (like when SASS fails) you need to check whatever that error is. Double check if ruby and sass are working from Terminal or Command Prompt by typing `ruby -v` and `sass -v` in that window. This will print the versions they are using so you know they are active on your system. If they aren't, the problem isn't with foundation.\n. Isn't it easier to have grunt/gulp look for an available port itself and not have it hardcoded? Especially if you are going to open the browser with a task, you can just point it to whatever port you are using. There are modules to deal with those 2 things.\n. +1\n\nIs this ever coming in? And how would you work around this untill its added?\n. Nice to see you guys going for flexbox. Been using it myself for a while now. One problem i had quite a few times was getting minimum height for the box. The height that makes sure the content fits and not  breaks any overflow or whatever. Especially when on mobile with those virtual-keyboards you will get in trouble because the content won't fit and will either overflow incorrectly or gives you tiny scrollbars with too much content to scroll.\n\nExample to mess around with: http://jsfiddle.net/wnu18w4g/ . I'm forcing a height on that which is clearly to small but think of it as the body of your product when a keyboard is up and you are using flexbox.\n. Hmm, i didn't have issues with scrolling inside flexbox on iOS and others. I did it with css only and that seemed to work. Although i don't recall if i might have had the outer or inner container to display:block\n\nI did have an issue with the iOS keyboard and rotating the device while it is shown, but that seems fixed on iOS 8. But that wasn't related to flexbox but to fixed elements.\n\nPerhaps we should separate devices which require Javascript for legacy-support by an external dependency. I don't think iOS8, Android 4.4 (or 5 even) and WP8.1 require a lot of Javascript fallback. Older devices do but using Flexbox is already separating a few and i even feel that devices that require `display:box` or `-webkit-display:box` instead of `display:flex` should already be separated.\nOr keep the 5.x branch for older devices and go for true next-gen support on 6.x Much like jQuery did with their 2.x branch (albeit they still support IE9 and stuff).\n\nIf you are going for Foundation for Apps, you are probably better off supporting latest iOS, Android and WP than going for older support. On iOS and WP you can be sure that most users (those that buy stuff at least) will use latest OS. On Android you are already fine with 4.4. Even if that doesn't have most devices, it will increase big time in the next couple of months as devices get updated. I'm not sure what the release would be of this, but apps developed with this will already be months apart from that anyways.\n. Why iOS 7? Doesn't seem to be needed since people will be updating in the next few weeks. And the ones who don't aren't going to be big customers anyways (stats prove that).\n\nAnd WP8.0 also is going to be replaced by 8.1 for most users. Since 8.0 has IE10 and 8.1 has IE11 i would drop 8.0 support asap. Takes way too long to implement legacysupport. Especially with grids and other new HTML5 stuff\n. Libgit? As for using with bower? Or how do you mean to replace what?\n\nI'm not sure about the `@each` function but if you mean SASS maps to refer your browser to a map-file then yes thats already possible with this. Although i must add that i've been using `Grunt`, not `Gulp` myself with `Node-Sass` (and thus `Grunt-Sass` instead of `Grunt-Contrib-Sass` which uses Ruby). \n. Nice! Thanks for the change\n. So Foundation 6 is released, but Ruby is still a requirement for Foundation for Apps?\n. Sounds good. I've used Rubyinstaller.org myself which also has the \"add to $PATH\" function in the installer.\nI've never had to use administrator capabilities in my CMD. Plus i normally open it from the directory i wanna work in by going to the folder in Windows Explorer and type `cmd` in the location-bar which will then open Command Prompt in the location i wanna work in.\nOn OSX i've got the XtraFinder tool for Finder which allows me to \"open a terminal here\" by adding the feature and just use sudo commands. I don't think you should remove the \"use sudo\" or whatever from the readme, but just state that it is required on OSX.\n\nBut thanks for changing the readme ;)\n. I would like to point out that you don't need WAMP or anything to act as a server because Grunt (and thus Node.JS) will do that for you. So you can just put it in something like C:/Development/Mystuff and run it from there.\n. AngularJS should come from the bower_components directory, so can you see it there?\n\nAlso, no need for putting it inside public_html or whatever, you will run a server using Grunt (and thus Node.JS). Therefor you will also need to use that port and not your local server. This might seem weird at first but you simply don't need to boot up a server for a node application. Node can do that for you with very little configuration.\n\nYou can change the gruntfile (or where the port is defined) if you want to use it on port 80 (and thus can just use localhost). But i won't recommend that for running it locally. Just stick to the script and you'll be fine\n. Yeah you have to build your files first before you can serve them on your own server. Foundation Apps are standalone in the sense that after you create a production version, you can run in from pretty much anywhere. But you do need to run grunt and gulp at least once to get all the files going. If those tasks fail (like when SASS fails) you need to check whatever that error is. Double check if ruby and sass are working from Terminal or Command Prompt by typing `ruby -v` and `sass -v` in that window. This will print the versions they are using so you know they are active on your system. If they aren't, the problem isn't with foundation.\n. Isn't it easier to have grunt/gulp look for an available port itself and not have it hardcoded? Especially if you are going to open the browser with a task, you can just point it to whatever port you are using. There are modules to deal with those 2 things.\n. +1\n\nIs this ever coming in? And how would you work around this untill its added?\n. ",
    "CalebJTSmith": "I just want to say that I love the new grid system. It's quick and easy - once you transfer some of the logic from F-Sites and keep yourself from nesting rows like a mad person. In response to the columns question - I like the 12 columns and I have become very adjusted to it as quick creation. As you mentioned, changing the variable to 100 would accomplish the same thing and I think that could be an option that people could take if they want a percentage column. I know that would be helpful on some occasions, but it's much quicker math (for me) with 12 as the total.\n\nIt did take me while to figure out why I was seeing extra whitespace outside of the main container for the default content.. found out it was a \"container\" class so that is good to know!\n\nKeep up the great work! I am enjoying it so far and I look forward to playing with it even more.\n. That makes me feel a lot better now! ;) It was starting to worry me that I kept missing something small.\n. Thanks for letting me know, @gakimball ! I am excited to start testing out the framework this week. I am looking at ways to integrate it into my current Laravel backend setup - should be a fun challenge!\n. I didn't have any problems with the latest commit. I started it up fresh on my machine.\n. I am an Angular noob, but I am excited to dig right into this and see what I can create with it. Any tips on what I should start studying up on first?\n. Just got the API working! I was missing the `controller: MyController` frontend and I had a typo... oh those typos... \n. Perfect. Thank you @gakimball for answering all of my small questions!\n. I just want to say that I love the new grid system. It's quick and easy - once you transfer some of the logic from F-Sites and keep yourself from nesting rows like a mad person. In response to the columns question - I like the 12 columns and I have become very adjusted to it as quick creation. As you mentioned, changing the variable to 100 would accomplish the same thing and I think that could be an option that people could take if they want a percentage column. I know that would be helpful on some occasions, but it's much quicker math (for me) with 12 as the total.\n\nIt did take me while to figure out why I was seeing extra whitespace outside of the main container for the default content.. found out it was a \"container\" class so that is good to know!\n\nKeep up the great work! I am enjoying it so far and I look forward to playing with it even more.\n. That makes me feel a lot better now! ;) It was starting to worry me that I kept missing something small.\n. Thanks for letting me know, @gakimball ! I am excited to start testing out the framework this week. I am looking at ways to integrate it into my current Laravel backend setup - should be a fun challenge!\n. I didn't have any problems with the latest commit. I started it up fresh on my machine.\n. I am an Angular noob, but I am excited to dig right into this and see what I can create with it. Any tips on what I should start studying up on first?\n. Just got the API working! I was missing the `controller: MyController` frontend and I had a typo... oh those typos... \n. Perfect. Thank you @gakimball for answering all of my small questions!\n. ",
    "Bernardao": "I agree with @Failcookie, allowing the option to changing the variable to 100 would let us an easier way to create 5 columns, harder with a system of 12 columns.\n\nAbout the class names I would prefer to stay with .group better than .block, since .group means for me that are more elements inside as columns, while a block means more about a final class with content inside but nothing else.\nAlso imho using .content-block or .layout-block could have more sense, inside a .group always a .x-block (content or layout). Not sure if that helps you.\n\n> ```\n>  <div class=\"group\" id=\"container\">\n>    <div class=\"vertical large-4 layout-block\" id=\"sidebar\">\n>      <!-- This two blocks are for content, not layout -->\n>      <div class=\"shrink content-block\" id=\"sidebarTitle\"></div>\n>      <div class=\"content-block\" id=\"sidebarContent\"></div>\n>    </div>\n>    <!-- Same with this one -->\n>    <div class=\"large-8 layout-block\" id=\"main\"></div>\n>  <div>\n> ```\n. @gakimball what about using .wall and .bricks or maybe .building .floor or .doors?\nOr you could use .block and .group in spanish that are very similars .grupo and .bloque?\n\nJust some brainstorming\n. I yesterday also had some errors getting a fresh installation.\nMy problem was with SASS version, I had updated to 3.4.8 and seems requires 3.4.7\nSo I followed http://stackoverflow.com/questions/10199965/remove-uninstall-old-version-of-ruby-gem and \nuninstalled last version and worked.\nsudo gem uninstall sass\nthen you select which version you want to uninstall and worked.\nCheck you have Ruby and SASS installed with\nsass -v\nruby -v\n. It works now, I had some error on my code,\nThank you\n. I agree with @ilanbiala , they are still in production, once they launch v1 and fix some bugs, sure they will listen and also they will be glad from receiving help in making it compatible.\n. I agree with @Failcookie, allowing the option to changing the variable to 100 would let us an easier way to create 5 columns, harder with a system of 12 columns.\n\nAbout the class names I would prefer to stay with .group better than .block, since .group means for me that are more elements inside as columns, while a block means more about a final class with content inside but nothing else.\nAlso imho using .content-block or .layout-block could have more sense, inside a .group always a .x-block (content or layout). Not sure if that helps you.\n\n> ```\n>  <div class=\"group\" id=\"container\">\n>    <div class=\"vertical large-4 layout-block\" id=\"sidebar\">\n>      <!-- This two blocks are for content, not layout -->\n>      <div class=\"shrink content-block\" id=\"sidebarTitle\"></div>\n>      <div class=\"content-block\" id=\"sidebarContent\"></div>\n>    </div>\n>    <!-- Same with this one -->\n>    <div class=\"large-8 layout-block\" id=\"main\"></div>\n>  <div>\n> ```\n. @gakimball what about using .wall and .bricks or maybe .building .floor or .doors?\nOr you could use .block and .group in spanish that are very similars .grupo and .bloque?\n\nJust some brainstorming\n. I yesterday also had some errors getting a fresh installation.\nMy problem was with SASS version, I had updated to 3.4.8 and seems requires 3.4.7\nSo I followed http://stackoverflow.com/questions/10199965/remove-uninstall-old-version-of-ruby-gem and \nuninstalled last version and worked.\nsudo gem uninstall sass\nthen you select which version you want to uninstall and worked.\nCheck you have Ruby and SASS installed with\nsass -v\nruby -v\n. It works now, I had some error on my code,\nThank you\n. I agree with @ilanbiala , they are still in production, once they launch v1 and fix some bugs, sure they will listen and also they will be glad from receiving help in making it compatible.\n. ",
    "Pushplaybang": "Hi There,\n\nThis project looks amazing, thought I'd throw in my 2c **about grids**.  Honestly when ever I've used bootstrap or given foundation a go one of the first things I sidestep is the grid in favour of something a lot more flexible.\n\nI've been working with the (Susy SCSS grid system)[http://susy.oddbird.net/] a lot over the last year and the flexibility it gives you is incredible.  Using this or something similar would allow you to setup a default to ship with foundation for apps, but not lock anyone down, allowing them to open it up on the fly.  I'm not sure that you'd ever consider using a third party library like this, but conceptually I think it makes a whole lot of sense for foundation-apps.\n\nKind Regards\n\nPaul\n. Hi There,\n\nThis project looks amazing, thought I'd throw in my 2c **about grids**.  Honestly when ever I've used bootstrap or given foundation a go one of the first things I sidestep is the grid in favour of something a lot more flexible.\n\nI've been working with the (Susy SCSS grid system)[http://susy.oddbird.net/] a lot over the last year and the flexibility it gives you is incredible.  Using this or something similar would allow you to setup a default to ship with foundation for apps, but not lock anyone down, allowing them to open it up on the fly.  I'm not sure that you'd ever consider using a third party library like this, but conceptually I think it makes a whole lot of sense for foundation-apps.\n\nKind Regards\n\nPaul\n. ",
    "maxcook": "Hi guys,\n\nfor obvious reasons i would be useful to have a dropdown (actionsheet) in a menu bar, e.g. for user short links. \nHowever, the actionsheet is bound by the menu bar boundaries  and makes it scrollable instead of hovering it.\n. Please make this an optional feature (or optionally deactivatable), since e.g. on mobile phones with small screen the use case may require to see only the titles before opening a content (as it currently is).\n. I guess we interpret that class(-es) in different ways. \nIMO the -only suffix makes (should make) the class only touching the respective size context (in contrast to e.g. `hide-for-small`, which touches all bigger sizes too).\n\n> `display: block` is what makes the element show. The !important, although a bit annoying, is necessary because a single class can easily be overridden by most other selectors. \n\nThis is only true if you interpret the class as  `force visible in other sizes at all cost`. In my interpretation the media(max-width) is enough protects the element from the display:none in other sizes.\n\nMy interpretation has the pro arg that it can be applied to the use case: `have a button with icon and text( the latter wrapped in a span), but hide the text on phones because of space`\n. By the way, the (in-)visibility classes can also not be used on grid-blocks since they overwrite the display:flex \n. Could you explain please best practice to call the Api then?\nIMHO if one uses a Provider in an angular controller one should not worry about digest cycles....\n. @AntJanus your fix did only fix the problem for the 'clearall' message. Normal notifications still get this error...\n. great :) now it would be awesome to apply the same patch to modal\n.  #381 caused menu bar links to be in color of links instead of black color on white bg\n. Often if i open the same modal a second time, after a few seconds only the black overlay is visible, but the modal itself gets its class \"is-active' removed and hides.\n. I am pretty sure that this is an issue with the animation settimeout. There should be an option in foundationapi to disable those animation\n. any progress on this?\n. Hi guys,\n\nfor obvious reasons i would be useful to have a dropdown (actionsheet) in a menu bar, e.g. for user short links. \nHowever, the actionsheet is bound by the menu bar boundaries  and makes it scrollable instead of hovering it.\n. Please make this an optional feature (or optionally deactivatable), since e.g. on mobile phones with small screen the use case may require to see only the titles before opening a content (as it currently is).\n. I guess we interpret that class(-es) in different ways. \nIMO the -only suffix makes (should make) the class only touching the respective size context (in contrast to e.g. `hide-for-small`, which touches all bigger sizes too).\n\n> `display: block` is what makes the element show. The !important, although a bit annoying, is necessary because a single class can easily be overridden by most other selectors. \n\nThis is only true if you interpret the class as  `force visible in other sizes at all cost`. In my interpretation the media(max-width) is enough protects the element from the display:none in other sizes.\n\nMy interpretation has the pro arg that it can be applied to the use case: `have a button with icon and text( the latter wrapped in a span), but hide the text on phones because of space`\n. By the way, the (in-)visibility classes can also not be used on grid-blocks since they overwrite the display:flex \n. Could you explain please best practice to call the Api then?\nIMHO if one uses a Provider in an angular controller one should not worry about digest cycles....\n. @AntJanus your fix did only fix the problem for the 'clearall' message. Normal notifications still get this error...\n. great :) now it would be awesome to apply the same patch to modal\n.  #381 caused menu bar links to be in color of links instead of black color on white bg\n. Often if i open the same modal a second time, after a few seconds only the black overlay is visible, but the modal itself gets its class \"is-active' removed and hides.\n. I am pretty sure that this is an issue with the animation settimeout. There should be an option in foundationapi to disable those animation\n. any progress on this?\n. ",
    "djgadd": "Realise I'm late to give feedback but I figure it would be better here than opening a new issue.\n\nWould quite like to see a {size}-shrink-only set of classes (and ideally that kind of convention echoed across most of the utility classes). I find myself writing a lot of boiler code for that at the moment because my layouts go from vertical to horizontal when moving between small/medium, and shrink is overriding the classic columns syntax.\n. It's still early doors with the project, but I've not noticed any problems.\n\nPerhaps a better compromise would be forking FastClick? \n. Realise I'm late to give feedback but I figure it would be better here than opening a new issue.\n\nWould quite like to see a {size}-shrink-only set of classes (and ideally that kind of convention echoed across most of the utility classes). I find myself writing a lot of boiler code for that at the moment because my layouts go from vertical to horizontal when moving between small/medium, and shrink is overriding the classic columns syntax.\n. It's still early doors with the project, but I've not noticed any problems.\n\nPerhaps a better compromise would be forking FastClick? \n. ",
    "etcook": "Do you see the menu bar in F4A coming into parity with topbar from F4S? There isn't much in the way of built in navigation capability in F4A.\n\nThoughts?\n. @gakimball Thanks for the update. You've whet my palette. Looking forward to it!\n. I've tried to clone and build 3 times now, and each time receive the following error:\n\n```\nevents.js:72\n        throw er; // Unhandled 'error' event\n              ^\nError: app.scss:9:25: Unexpected { in decls\n```\n. @gakimball What in the world? Is it a timing issue of sorts?\n. @AntJanus I'm getting this error when trying to open and close a panel.\n. @AntJanus I'm consistently getting this error when I use\n\n`FoundationApi.publish('id', 'show');`\n\nIs there a workaround in the interim that I can use to squelch the errors?\n\nEdit: It's a panel.\n. @AntJanus Any update on this? I'm really sorry to keep bothering you.\n. @gakimball Would you guys be receptive to a PR that puts uglify in a gulp-if, and only uglifies with a --production flag? This was a pain point for me too. As a js framework, the default behavior of uglification is really limiting. I'd venture to say a good portion of the users are all commenting out the uglification step or something similar during dev.\n. @gakimball Did you see my message earlier? That's exactly what I suggested. Does that mean you'd be receptive?\n. @gakimball I have this working with gulp, but it doesn't seem like foundation-cli properly passes the param if you use it. Do you want me to do a pull request for the gulpfile changes in anticipation of a change in foundation-cli, or just assume they'll use the gulp commands directly?\n\n```\ngulp --production\n```\n. @Dillie-O Just use the changes I made in the PR I referenced.\n. That's not an issue with the bower package. It sounds like you have a local routing error, firewall or ssh configuration issue (like perms) that is preventing you from connecting to github.\n. @gakimball Are there no conflicts in terms of naming, etc? Can I really just include the entire F4S CSS, or are you meaning to add it component by component manually?\n\nThanks!\n. @gakimball Good to know! The docs might do well with a slight amount of clarification both as to how grid-container works, as well as the fact that they are interchangeable. Although you describe what grid-container should be used for, it isn't clear what it actually does, or how it relates to grid-block. Thanks a million!\n. @gakimball I can confirm that setting the flex box to 0 instead of auto reverts to the previous (and my preferred) behavior.\n. @gakimball I have another odd issue now with flexbox.\n\nWhen grid-block is set to flex: 1 1 0; there are certain instances when the vertical height of the block collapses, and doesn't display the content. However, if I sent flex 1 1; without the 0 or auto, it works fine.\n\n![2015-04-08 at 12 28 pm](https://cloud.githubusercontent.com/assets/2329397/7051024/dfd68646-ddea-11e4-8b52-ade9315df430.png)\n\nvs\n\n![2015-04-08 at 12 30 pm](https://cloud.githubusercontent.com/assets/2329397/7051065/20902ab6-ddeb-11e4-9372-b60b97babd21.png)\n\nAny suggestions? I currently have it overridden like so:\n\n.grid-block,\n.grid-content {\n  -webkit-flex: 1 1 0;\n  -ms-flex: 1 1 0;\n  flex: 1 1 0;\n}\n. Foundation for Apps is an AngularJS framework. It's database/model agnostic.\n. Yes sir!\n. @dredgerman @LittleHendrix @jessepinuelas \n\nIf you're on a mac, do this\n\n``` bash\ncd /usr/local/bin\nln -s /usr/local/lib/node_modules/foundation-cli/bin/cli.js foundation-apps\n```\n\nUpdate the paths so they're appropriate for your system\n. Can you check to see if /usr/local/bin/foundation-apps exists?\n. Do you see the menu bar in F4A coming into parity with topbar from F4S? There isn't much in the way of built in navigation capability in F4A.\n\nThoughts?\n. @gakimball Thanks for the update. You've whet my palette. Looking forward to it!\n. I've tried to clone and build 3 times now, and each time receive the following error:\n\n```\nevents.js:72\n        throw er; // Unhandled 'error' event\n              ^\nError: app.scss:9:25: Unexpected { in decls\n```\n. @gakimball What in the world? Is it a timing issue of sorts?\n. @AntJanus I'm getting this error when trying to open and close a panel.\n. @AntJanus I'm consistently getting this error when I use\n\n`FoundationApi.publish('id', 'show');`\n\nIs there a workaround in the interim that I can use to squelch the errors?\n\nEdit: It's a panel.\n. @AntJanus Any update on this? I'm really sorry to keep bothering you.\n. @gakimball Would you guys be receptive to a PR that puts uglify in a gulp-if, and only uglifies with a --production flag? This was a pain point for me too. As a js framework, the default behavior of uglification is really limiting. I'd venture to say a good portion of the users are all commenting out the uglification step or something similar during dev.\n. @gakimball Did you see my message earlier? That's exactly what I suggested. Does that mean you'd be receptive?\n. @gakimball I have this working with gulp, but it doesn't seem like foundation-cli properly passes the param if you use it. Do you want me to do a pull request for the gulpfile changes in anticipation of a change in foundation-cli, or just assume they'll use the gulp commands directly?\n\n```\ngulp --production\n```\n. @Dillie-O Just use the changes I made in the PR I referenced.\n. That's not an issue with the bower package. It sounds like you have a local routing error, firewall or ssh configuration issue (like perms) that is preventing you from connecting to github.\n. @gakimball Are there no conflicts in terms of naming, etc? Can I really just include the entire F4S CSS, or are you meaning to add it component by component manually?\n\nThanks!\n. @gakimball Good to know! The docs might do well with a slight amount of clarification both as to how grid-container works, as well as the fact that they are interchangeable. Although you describe what grid-container should be used for, it isn't clear what it actually does, or how it relates to grid-block. Thanks a million!\n. @gakimball I can confirm that setting the flex box to 0 instead of auto reverts to the previous (and my preferred) behavior.\n. @gakimball I have another odd issue now with flexbox.\n\nWhen grid-block is set to flex: 1 1 0; there are certain instances when the vertical height of the block collapses, and doesn't display the content. However, if I sent flex 1 1; without the 0 or auto, it works fine.\n\n![2015-04-08 at 12 28 pm](https://cloud.githubusercontent.com/assets/2329397/7051024/dfd68646-ddea-11e4-8b52-ade9315df430.png)\n\nvs\n\n![2015-04-08 at 12 30 pm](https://cloud.githubusercontent.com/assets/2329397/7051065/20902ab6-ddeb-11e4-9372-b60b97babd21.png)\n\nAny suggestions? I currently have it overridden like so:\n\n.grid-block,\n.grid-content {\n  -webkit-flex: 1 1 0;\n  -ms-flex: 1 1 0;\n  flex: 1 1 0;\n}\n. Foundation for Apps is an AngularJS framework. It's database/model agnostic.\n. Yes sir!\n. @dredgerman @LittleHendrix @jessepinuelas \n\nIf you're on a mac, do this\n\n``` bash\ncd /usr/local/bin\nln -s /usr/local/lib/node_modules/foundation-cli/bin/cli.js foundation-apps\n```\n\nUpdate the paths so they're appropriate for your system\n. Can you check to see if /usr/local/bin/foundation-apps exists?\n. ",
    "philippeluickx": "Design suggestion:\n\nI currently have a top navigation section (homepage, profile link, etc.) and a footer navigation section (blog, contact, privacy,...). They are sticky and this works fine on large screens.\nOn mobile it is horrible, as together they already take up almost half of the screen. When keyboard opens, nothing of the actual site is left.\n\nWould it be possible to have menu(s) on large screens transform to drawers (the mobile paradigm)? Sideways swipe and a sandwich button would bring that drawer up. Bonus if both menus would be combined in one drawer.\n. +1\n. +1\n. +1\n. +1, looking forward to the guide!\n. That makes sense, thanks for sharing!\nThe alternative for explicitely including the css files in the index.html is to import them in the app.scss.\n\nKeeping this open still, would like to know if there are any best practices. Should css be minified and compiled into one giant css file, incl. 3rd party styles? Or copy the minified css files from the 3rd packages and then referencing them (either in css or html)?\n. Great, thanks for the info!\n. Just checked, the shrink has nothing to do with it. When I remove the shrink from the other grid-content elements, they all get a scrollbar.\n. Thanks for the elaborate explanation, solutions and pointer to patch! Good job on the framework, loving it!\n. +1, quite some stuff going funky on android browsers\n. Yup, that seems to work! Thanks for the pointer.\nHaving a grid-content inside a grid-container didn't work. Having the scroll-container at the encompassing grid-content seemed to do the trick!\n. So what is happening in the network trace on IE is that the location of the template is wrong. It should be abc.com/templates/template_b.html. Instead it asks for abc.com/a/1/templates/template_b.html.\n\nStill scratching my head on this one...\n\nUpdate:\nI do have my\n\n``` html\n<base href=\"/\" />\n```\n\ndefined in the index.html\n. Is it possible that the $http.get in the this.fromUrl ($TemplateFactory) is misbehaving? Everything seems fine and is identical between Chrome (where it works) and IE (where it breaks) up to that point.\nBoth have the relative url passed to $http.get, so without the base url.\n\nUpdate:\nWhen adding the base url in front of the url parameter, IE works (and Chrome does not break).\n\nso:\n\n``` javascript\nelse return $http\n.get(\"http://localhost:8079/\" + url,\n...\n\n```\n\nSome more info on http://stackoverflow.com/questions/6541721/ie-doesnt-support-relative-paths-in-the-base-element-when-referencing-css-files\n. Allright, so the one thing that seems to do the trick, is to put the <base href=\"/\"> inside the <head> and NOT the <body>.\n\nMagic... also not sure if there is anything that should be done about this (and upstream or here?). Maybe mention this in the docs?\n. Design suggestion:\n\nI currently have a top navigation section (homepage, profile link, etc.) and a footer navigation section (blog, contact, privacy,...). They are sticky and this works fine on large screens.\nOn mobile it is horrible, as together they already take up almost half of the screen. When keyboard opens, nothing of the actual site is left.\n\nWould it be possible to have menu(s) on large screens transform to drawers (the mobile paradigm)? Sideways swipe and a sandwich button would bring that drawer up. Bonus if both menus would be combined in one drawer.\n. +1\n. +1\n. +1\n. +1, looking forward to the guide!\n. That makes sense, thanks for sharing!\nThe alternative for explicitely including the css files in the index.html is to import them in the app.scss.\n\nKeeping this open still, would like to know if there are any best practices. Should css be minified and compiled into one giant css file, incl. 3rd party styles? Or copy the minified css files from the 3rd packages and then referencing them (either in css or html)?\n. Great, thanks for the info!\n. Just checked, the shrink has nothing to do with it. When I remove the shrink from the other grid-content elements, they all get a scrollbar.\n. Thanks for the elaborate explanation, solutions and pointer to patch! Good job on the framework, loving it!\n. +1, quite some stuff going funky on android browsers\n. Yup, that seems to work! Thanks for the pointer.\nHaving a grid-content inside a grid-container didn't work. Having the scroll-container at the encompassing grid-content seemed to do the trick!\n. So what is happening in the network trace on IE is that the location of the template is wrong. It should be abc.com/templates/template_b.html. Instead it asks for abc.com/a/1/templates/template_b.html.\n\nStill scratching my head on this one...\n\nUpdate:\nI do have my\n\n``` html\n<base href=\"/\" />\n```\n\ndefined in the index.html\n. Is it possible that the $http.get in the this.fromUrl ($TemplateFactory) is misbehaving? Everything seems fine and is identical between Chrome (where it works) and IE (where it breaks) up to that point.\nBoth have the relative url passed to $http.get, so without the base url.\n\nUpdate:\nWhen adding the base url in front of the url parameter, IE works (and Chrome does not break).\n\nso:\n\n``` javascript\nelse return $http\n.get(\"http://localhost:8079/\" + url,\n...\n\n```\n\nSome more info on http://stackoverflow.com/questions/6541721/ie-doesnt-support-relative-paths-in-the-base-element-when-referencing-css-files\n. Allright, so the one thing that seems to do the trick, is to put the <base href=\"/\"> inside the <head> and NOT the <body>.\n\nMagic... also not sure if there is anything that should be done about this (and upstream or here?). Maybe mention this in the docs?\n. ",
    "mehlah": "Same thing for me, when accessing it through localhost:3001\n. Same thing for me, when accessing it through localhost:3001\n. ",
    "YuriGor": "@gakimball\nPage loads, but nothing works, clicks on left vertical menu has no effect,\ni see only 'Sample Component' page in the right side. \nAnd i see errors in chrome console: no angular.js found.\n\nI didn't specify any port, it's just virtual host under apache web-server, i think it's :80\n&lt;VirtualHost *:80&gt;\n\nMy OS is Ubuntu 14.04.\n\nI has this directory structure:\n_public_html/foundation-apps/build/...._\nso i copied contents of 'build' directory to the root of my virtual host just in 'public_html' directory.\n\nIt was little issue in installation process: \ni used command \n_git clone https://github.com/zurb/foundation-apps.git_\ninstead of \n_git clone git@github.com:zurb/foundation-apps.git_\nbecause last one didn't work because of my github account permissions. \nI don't think it does matter but..\n\nhere is my build directory:\n![image](https://cloud.githubusercontent.com/assets/6861317/4713486/1c7cf294-58e2-11e4-9789-a80a25ae8cb3.png)\n. So F-apps can run only on top of node.js web server? \nWhat if i need classic apache/nginx/whatever + php backend? \nI had impression, that F-apps is pure client framework, such as F5 \nand it doesn't have any hard server dependencies, am i wrong?\n\nYes there is angular.js lib in bower_components. So i should not move contents of build?\nI may direct apache to the build directory, but there willl be no bower_components inside..\n. So may i keep trying to test F-apps in my xampp environment (and keep reporting problems with it)\nor it's not actual task for you to keep F-apps environment-independent at this stage of development?\n\nAnyway, does my build directory looks ok?\n. @gakimball\nPage loads, but nothing works, clicks on left vertical menu has no effect,\ni see only 'Sample Component' page in the right side. \nAnd i see errors in chrome console: no angular.js found.\n\nI didn't specify any port, it's just virtual host under apache web-server, i think it's :80\n&lt;VirtualHost *:80&gt;\n\nMy OS is Ubuntu 14.04.\n\nI has this directory structure:\n_public_html/foundation-apps/build/...._\nso i copied contents of 'build' directory to the root of my virtual host just in 'public_html' directory.\n\nIt was little issue in installation process: \ni used command \n_git clone https://github.com/zurb/foundation-apps.git_\ninstead of \n_git clone git@github.com:zurb/foundation-apps.git_\nbecause last one didn't work because of my github account permissions. \nI don't think it does matter but..\n\nhere is my build directory:\n![image](https://cloud.githubusercontent.com/assets/6861317/4713486/1c7cf294-58e2-11e4-9789-a80a25ae8cb3.png)\n. So F-apps can run only on top of node.js web server? \nWhat if i need classic apache/nginx/whatever + php backend? \nI had impression, that F-apps is pure client framework, such as F5 \nand it doesn't have any hard server dependencies, am i wrong?\n\nYes there is angular.js lib in bower_components. So i should not move contents of build?\nI may direct apache to the build directory, but there willl be no bower_components inside..\n. So may i keep trying to test F-apps in my xampp environment (and keep reporting problems with it)\nor it's not actual task for you to keep F-apps environment-independent at this stage of development?\n\nAnyway, does my build directory looks ok?\n. ",
    "jakeleboeuf": "I'm running into a JS_Parse_Error during the Gulp `uglify-angular` task... Anybody else having this issue?\n\n[Gulp Output](https://gist.github.com/jakeleboeuf/537101b90c6e9dbad742)\n. Found my issue... For anybody else running into the JS_Parse_Error, here's a fix, and how I found it.\n\nLooks like a trailing `.` made it's way into the bottom of `js/angular/directives/notifications.js`. Simply removing that `.` on line 61 solved my build issue.\n\nI used gulp-util to find it:\n1. Install [Gulp-util](https://github.com/gulpjs/gulp-util)\n2. Import the Gulp-util by adding `gutil = require('gulp-util'),` to the var declarations in your `gulpfile.js`\n3. Attach the error handler to the uglify task: `.on('error', gutil.log)`. The updated task looks like this:\n\n``` javascript\n// Process Angular JS\ngulp.task('uglify-angular', function() {\n  var libs = [\n    'bower_components/angular/angular.js',\n    'bower_components/angular-animate/angular-animate.js',\n    'bower_components/ui-router/release/angular-ui-router.js',\n    'js/angular/**/*.js',\n  ];\n\n  return gulp.src(libs)\n    .pipe(uglify({\n      beautify: true,\n      mangle: false\n    })).on('error', gutil.log)\n    .pipe(concat('angular-app.js'))\n    .pipe(gulp.dest('./build/assets/js/'))\n  ;\n\n});\n```\n\nHope this helps... And hopefully that trailing `.` was not intentional and just not parsing correctly on my machine :bow:\n. @AntJanus no problem!\n\nI just checked my console to see if any errors are throwing, and I am seeing that `GET http://localhost:8080/assets/css/app.css.map 404 (Not Found)` issue that @YuriGor first mentioned... Gulp build appears to run succesfully, however that `app.css.map` is not getting generated. Did you guys ever track down what's causing that issue?\n. @AntJanus Awesome, thanks!\n. I'm running into a JS_Parse_Error during the Gulp `uglify-angular` task... Anybody else having this issue?\n\n[Gulp Output](https://gist.github.com/jakeleboeuf/537101b90c6e9dbad742)\n. Found my issue... For anybody else running into the JS_Parse_Error, here's a fix, and how I found it.\n\nLooks like a trailing `.` made it's way into the bottom of `js/angular/directives/notifications.js`. Simply removing that `.` on line 61 solved my build issue.\n\nI used gulp-util to find it:\n1. Install [Gulp-util](https://github.com/gulpjs/gulp-util)\n2. Import the Gulp-util by adding `gutil = require('gulp-util'),` to the var declarations in your `gulpfile.js`\n3. Attach the error handler to the uglify task: `.on('error', gutil.log)`. The updated task looks like this:\n\n``` javascript\n// Process Angular JS\ngulp.task('uglify-angular', function() {\n  var libs = [\n    'bower_components/angular/angular.js',\n    'bower_components/angular-animate/angular-animate.js',\n    'bower_components/ui-router/release/angular-ui-router.js',\n    'js/angular/**/*.js',\n  ];\n\n  return gulp.src(libs)\n    .pipe(uglify({\n      beautify: true,\n      mangle: false\n    })).on('error', gutil.log)\n    .pipe(concat('angular-app.js'))\n    .pipe(gulp.dest('./build/assets/js/'))\n  ;\n\n});\n```\n\nHope this helps... And hopefully that trailing `.` was not intentional and just not parsing correctly on my machine :bow:\n. @AntJanus no problem!\n\nI just checked my console to see if any errors are throwing, and I am seeing that `GET http://localhost:8080/assets/css/app.css.map 404 (Not Found)` issue that @YuriGor first mentioned... Gulp build appears to run succesfully, however that `app.css.map` is not getting generated. Did you guys ever track down what's causing that issue?\n. @AntJanus Awesome, thanks!\n. ",
    "ghost": ":+1: \n. Thanks. That did it but `gem update sass` did not work. I found a working solution in this SO answer:\n\nhttp://stackoverflow.com/questions/25534484/cant-update-sass-to-3-4\n. Yes I see the docs nav at `localhost:8080/home`. Looking forward to seeing it all linked up and will send feedback. Thanks. So what is really the best way for a beginner to get started with Foundation for Apps?\n. Oh dear. `bower_components` was not even there. I had to run `bower install` to get the packages installed. The `README.md` did not say to run `bower install`. \n\nWell now Angular and Fastclick are loading but I have the following Uncaught Error:\n\n```\nUncaught Error: [$location:nobase] $location in HTML5 mode requires a <base> tag to be present!\nhttp://errors.angularjs.org/1.3.1/$location/nobase \n```\n\nI'm wondering if this is bug or it's my fault.\n. Ok so I did a `git pull` in the root directory and now when I run `gulp` and go to `http://localhost:8080/` the page markup is literally\n\n```\n<html hc=\"a3\">\n  <head></head>\n  <body>Cannot GET /</body>\n</html>\n```\n\nAlso I had to run `bower install` again but that did not change anything.\n. here is the gulp output\n\n```\n$ gulp\n[14:49:40] Using gulpfile ~/dev/fa-test/foundation-apps/gulpfile.js\n[14:49:40] Starting 'build'...\n[14:49:40] Starting 'clean'...\n[14:49:40] Starting 'server:start'...\n[14:49:40] Finished 'server:start' after 240 ms\n[14:49:40] Server started http://localhost:8080\n[14:49:40] Finished 'clean' after 293 ms\n[14:49:40] Starting 'copy'...\n[14:49:40] Starting 'clean-partials'...\n[14:49:40] Starting 'sass'...\n[14:49:40] Starting 'uglify-angular'...\n[14:49:40] Finished 'copy' after 36 ms\n[14:49:40] Finished 'clean-partials' after 16 ms\n[14:49:40] Starting 'copy-partials'...\n[14:49:40] Finished 'sass' after 19 ms\n[14:49:45] Finished 'copy-partials' after 4.7 s\n[14:49:46] Finished 'uglify-angular' after 5.17 s\n[14:49:46] Starting 'uglify'...\n[14:49:49] Finished 'uglify' after 3.58 s\n[14:49:49] Starting 'copy'...\n[14:49:49] Finished 'copy' after 2.48 ms\n[14:49:49] Starting 'copy-templates'...\n[14:49:49] Finished 'copy-templates' after 3.8 ms\nSuccessfully built.\n[14:49:49] Finished 'build' after 9.09 s\n[14:49:49] Starting 'default'...\n[14:49:49] Finished 'default' after 118 ms\n```\n. yes I have a build dir and here is the structure of it \n\n```\n$ tree\n.\n\u251c\u2500\u2500 assets\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 js\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 angular-app.js\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 app.js\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 routes.js\n\u2514\u2500\u2500 partials\n    \u251c\u2500\u2500 accordion.html\n    \u251c\u2500\u2500 accordion-set.html\n    \u251c\u2500\u2500 actionsheet-button.html\n    \u251c\u2500\u2500 actionsheet-content.html\n    \u251c\u2500\u2500 actionsheet.html\n    \u251c\u2500\u2500 interchange-element.html\n    \u251c\u2500\u2500 modal.html\n    \u251c\u2500\u2500 notification.html\n    \u251c\u2500\u2500 notification-set.html\n    \u251c\u2500\u2500 offcanvas.html\n    \u251c\u2500\u2500 panel.html\n    \u251c\u2500\u2500 popup.html\n    \u251c\u2500\u2500 tab-content.html\n    \u251c\u2500\u2500 tab.html\n    \u2514\u2500\u2500 tabs.html\n```\n\nSo I killed the gulp process and refresh `localhost:8080` but since no server is running at that point I get the Chromium _The webpage is not available_ message.\n\nOk I deleted `node_modules/` and `bower_components` dirs and ran `git pull` and then `sudo npm install`. Here is a gist of my terminal output https://gist.github.com/3lfist/8f51f7550d9eeb8a5d39 and I am on Ubuntu 14.04.\n\nThe running `gulp` gives me this \n\n```\n$ gulp\n[22:04:50] Using gulpfile ~/dev/fa-test/foundation-apps/gulpfile.js\n[22:04:50] Starting 'build'...\n[22:04:50] Starting 'clean'...\n[22:04:50] Starting 'server:start'...\n[22:04:50] Finished 'server:start' after 99 ms\n[22:04:50] Server started http://localhost:8080\n[22:04:50] Finished 'clean' after 105 ms\n[22:04:50] Starting 'copy'...\n[22:04:50] Starting 'clean-partials'...\n[22:04:50] Starting 'sass'...\n[22:04:50] Starting 'uglify-angular'...\n[22:04:50] Finished 'copy' after 33 ms\n[22:04:50] Finished 'clean-partials' after 20 ms\n[22:04:50] Starting 'copy-partials'...\n[22:04:50] Finished 'sass' after 22 ms\n[22:04:54] Finished 'copy-partials' after 4.65 s\n[22:04:54] Finished 'uglify-angular' after 4.67 s\n[22:04:54] Starting 'uglify'...\n[22:04:55] Finished 'uglify' after 858 ms\n[22:04:55] Starting 'copy'...\n[22:04:55] Finished 'copy' after 1.87 ms\n[22:04:55] Starting 'copy-templates'...\n[22:04:55] Finished 'copy-templates' after 3.72 ms\nSuccessfully built.\n[22:04:55] Finished 'build' after 5.66 s\n[22:04:55] Starting 'default'...\n[22:04:55] Finished 'default' after 120 ms\n```\n\nSo the same results are showing up in the browser. The _Cannot GET /_ message on the page. \n. @AntJanus Yes it works great. Nice to see the docs working now. Can't wait for the official release. :+1: \n. switching gulp-sass back to 1.1.0. solves the problem. thanx!\n. Ok...\n. Is there any quickfix for this issue? I'am using jasmine/karma/phantom.js.\n\n@iotaweb where do you add this line?\n. @tolyo @gakimball Thanks a lot. This works for me.\n. @mattgrande just add it to your Stylesheet and add the file to your Karma conf\n. I was looking for a style guide and restrictions for code, to make the potential contributions consistent with the project's code style. Do you follow any guide lines?\n. We are also seeing the same behavior as described above when jQuery is loaded. When jQuery is removed the odd behavior discontinues. Unfortunately jQuery is required for our project. Has there been any updates on this issue?\n. Hi, I also encountered this error. I have to run unit tests with jasmine/karma. I really need a quickfix for this issue. Does anyone have a solution for this yet?\n. :+1: \n. Thanks. That did it but `gem update sass` did not work. I found a working solution in this SO answer:\n\nhttp://stackoverflow.com/questions/25534484/cant-update-sass-to-3-4\n. Yes I see the docs nav at `localhost:8080/home`. Looking forward to seeing it all linked up and will send feedback. Thanks. So what is really the best way for a beginner to get started with Foundation for Apps?\n. Oh dear. `bower_components` was not even there. I had to run `bower install` to get the packages installed. The `README.md` did not say to run `bower install`. \n\nWell now Angular and Fastclick are loading but I have the following Uncaught Error:\n\n```\nUncaught Error: [$location:nobase] $location in HTML5 mode requires a <base> tag to be present!\nhttp://errors.angularjs.org/1.3.1/$location/nobase \n```\n\nI'm wondering if this is bug or it's my fault.\n. Ok so I did a `git pull` in the root directory and now when I run `gulp` and go to `http://localhost:8080/` the page markup is literally\n\n```\n<html hc=\"a3\">\n  <head></head>\n  <body>Cannot GET /</body>\n</html>\n```\n\nAlso I had to run `bower install` again but that did not change anything.\n. here is the gulp output\n\n```\n$ gulp\n[14:49:40] Using gulpfile ~/dev/fa-test/foundation-apps/gulpfile.js\n[14:49:40] Starting 'build'...\n[14:49:40] Starting 'clean'...\n[14:49:40] Starting 'server:start'...\n[14:49:40] Finished 'server:start' after 240 ms\n[14:49:40] Server started http://localhost:8080\n[14:49:40] Finished 'clean' after 293 ms\n[14:49:40] Starting 'copy'...\n[14:49:40] Starting 'clean-partials'...\n[14:49:40] Starting 'sass'...\n[14:49:40] Starting 'uglify-angular'...\n[14:49:40] Finished 'copy' after 36 ms\n[14:49:40] Finished 'clean-partials' after 16 ms\n[14:49:40] Starting 'copy-partials'...\n[14:49:40] Finished 'sass' after 19 ms\n[14:49:45] Finished 'copy-partials' after 4.7 s\n[14:49:46] Finished 'uglify-angular' after 5.17 s\n[14:49:46] Starting 'uglify'...\n[14:49:49] Finished 'uglify' after 3.58 s\n[14:49:49] Starting 'copy'...\n[14:49:49] Finished 'copy' after 2.48 ms\n[14:49:49] Starting 'copy-templates'...\n[14:49:49] Finished 'copy-templates' after 3.8 ms\nSuccessfully built.\n[14:49:49] Finished 'build' after 9.09 s\n[14:49:49] Starting 'default'...\n[14:49:49] Finished 'default' after 118 ms\n```\n. yes I have a build dir and here is the structure of it \n\n```\n$ tree\n.\n\u251c\u2500\u2500 assets\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 js\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 angular-app.js\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 app.js\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 routes.js\n\u2514\u2500\u2500 partials\n    \u251c\u2500\u2500 accordion.html\n    \u251c\u2500\u2500 accordion-set.html\n    \u251c\u2500\u2500 actionsheet-button.html\n    \u251c\u2500\u2500 actionsheet-content.html\n    \u251c\u2500\u2500 actionsheet.html\n    \u251c\u2500\u2500 interchange-element.html\n    \u251c\u2500\u2500 modal.html\n    \u251c\u2500\u2500 notification.html\n    \u251c\u2500\u2500 notification-set.html\n    \u251c\u2500\u2500 offcanvas.html\n    \u251c\u2500\u2500 panel.html\n    \u251c\u2500\u2500 popup.html\n    \u251c\u2500\u2500 tab-content.html\n    \u251c\u2500\u2500 tab.html\n    \u2514\u2500\u2500 tabs.html\n```\n\nSo I killed the gulp process and refresh `localhost:8080` but since no server is running at that point I get the Chromium _The webpage is not available_ message.\n\nOk I deleted `node_modules/` and `bower_components` dirs and ran `git pull` and then `sudo npm install`. Here is a gist of my terminal output https://gist.github.com/3lfist/8f51f7550d9eeb8a5d39 and I am on Ubuntu 14.04.\n\nThe running `gulp` gives me this \n\n```\n$ gulp\n[22:04:50] Using gulpfile ~/dev/fa-test/foundation-apps/gulpfile.js\n[22:04:50] Starting 'build'...\n[22:04:50] Starting 'clean'...\n[22:04:50] Starting 'server:start'...\n[22:04:50] Finished 'server:start' after 99 ms\n[22:04:50] Server started http://localhost:8080\n[22:04:50] Finished 'clean' after 105 ms\n[22:04:50] Starting 'copy'...\n[22:04:50] Starting 'clean-partials'...\n[22:04:50] Starting 'sass'...\n[22:04:50] Starting 'uglify-angular'...\n[22:04:50] Finished 'copy' after 33 ms\n[22:04:50] Finished 'clean-partials' after 20 ms\n[22:04:50] Starting 'copy-partials'...\n[22:04:50] Finished 'sass' after 22 ms\n[22:04:54] Finished 'copy-partials' after 4.65 s\n[22:04:54] Finished 'uglify-angular' after 4.67 s\n[22:04:54] Starting 'uglify'...\n[22:04:55] Finished 'uglify' after 858 ms\n[22:04:55] Starting 'copy'...\n[22:04:55] Finished 'copy' after 1.87 ms\n[22:04:55] Starting 'copy-templates'...\n[22:04:55] Finished 'copy-templates' after 3.72 ms\nSuccessfully built.\n[22:04:55] Finished 'build' after 5.66 s\n[22:04:55] Starting 'default'...\n[22:04:55] Finished 'default' after 120 ms\n```\n\nSo the same results are showing up in the browser. The _Cannot GET /_ message on the page. \n. @AntJanus Yes it works great. Nice to see the docs working now. Can't wait for the official release. :+1: \n. switching gulp-sass back to 1.1.0. solves the problem. thanx!\n. Ok...\n. Is there any quickfix for this issue? I'am using jasmine/karma/phantom.js.\n\n@iotaweb where do you add this line?\n. @tolyo @gakimball Thanks a lot. This works for me.\n. @mattgrande just add it to your Stylesheet and add the file to your Karma conf\n. I was looking for a style guide and restrictions for code, to make the potential contributions consistent with the project's code style. Do you follow any guide lines?\n. We are also seeing the same behavior as described above when jQuery is loaded. When jQuery is removed the odd behavior discontinues. Unfortunately jQuery is required for our project. Has there been any updates on this issue?\n. Hi, I also encountered this error. I have to run unit tests with jasmine/karma. I really need a quickfix for this issue. Does anyone have a solution for this yet?\n. ",
    "blazuka": "I worked around this issue by changing line 95 in node_modules/gulp-sass/index.js to\nif (addedLocalDirPath && opts.includePaths) opts.includePaths.pop();\n\nIt seems to have done the trick - the build completes, and I'm able to view the example. It appears a lot of the functionality doesn't work (panel examples, etc), but I'm not sure if they are supposed to work at this point (this is the first time I've played with this code).\n. I agree - shouldn't be needed. gulp-sass is at version 1.2.2 with this issue. Which version are you running?\n. I worked around this issue by changing line 95 in node_modules/gulp-sass/index.js to\nif (addedLocalDirPath && opts.includePaths) opts.includePaths.pop();\n\nIt seems to have done the trick - the build completes, and I'm able to view the example. It appears a lot of the functionality doesn't work (panel examples, etc), but I'm not sure if they are supposed to work at this point (this is the first time I've played with this code).\n. I agree - shouldn't be needed. gulp-sass is at version 1.2.2 with this issue. Which version are you running?\n. ",
    "blacksonic": "If Ruby is not needed for the project then it is okay :) I was mistaken then by the Readme\n. If Ruby is not needed for the project then it is okay :) I was mistaken then by the Readme\n. ",
    "peterblazejewicz": "+1 `node + libsass [gulp-sass]`\n[Switching Ghost From Ruby Sass to Libsass](http://pad.gs/2014/09/04/switching-ghost-from-ruby-sass-to-libsass/)\n. @gakimball will this help?\nhttps://github.com/roots/roots/commit/97f5f34b0378f95d6da8c162de884364c6e6101c\nsomething like:\n\n``` json\n\"postinstall\": \"node lib/welcome.js\"\n```\n. +1 `node + libsass [gulp-sass]`\n[Switching Ghost From Ruby Sass to Libsass](http://pad.gs/2014/09/04/switching-ghost-from-ruby-sass-to-libsass/)\n. @gakimball will this help?\nhttps://github.com/roots/roots/commit/97f5f34b0378f95d6da8c162de884364c6e6101c\nsomething like:\n\n``` json\n\"postinstall\": \"node lib/welcome.js\"\n```\n. ",
    "mikehuebner": "![image](https://cloud.githubusercontent.com/assets/6125123/5052643/24c1911c-6bf7-11e4-811f-f76bdb35238a.png)\n\nIt started to work fine after some tweaking and just messing around, I don't know how functional the docs are at the time but stuff was showing but nothing really happening.\n. Alright! Thanks, really excited for what you guys have planned haha.\n\nBut if you need any other information (logs, etc), feel free to let me know. Could be an install issue on my side with npm or maybe something more.\n. It is in there now, and it was there when this error happened. It was a weird error that was fixed by removing the `var foundationRoutes` from the Angular-App.js file. Once I did that everything was fine.\n. Just downloaded it, did the installation, did a `gem update` and ran it.\n. I went ahead and pulled the most recent version and everything seemed to flow much better. I came across one hiccup when I didn't run npm install, but did not get the same issue as last time.\n\n> On Nov 26, 2014, at 8:31 AM, Antonin Januska notifications@github.com wrote:\n> \n> @mikehuebner can you confirm if this is still an issue or not? Some things have changed in the codebase. If the problem still persists, I can try helping you troubleshoot it further.\n> \n> I'll go ahead and reopen this when you let me know.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. I got dynamic routing working by simply adding `application` as a dependency to all modules, which is painful. Having that going though and building an app from scratch it works well. Having issues with other controllers still, but overall I can reference foundation easily and it seems to work for the most part.\n. There really are no best practices with the notifications system. I can't seem to figure it out myself.\nHere is what I'm trying.\n\nHTML\n\n```\n<zf-notification-set id=\"main-notifications\"></zf-notification-set>\n```\n\nJS (after login)\n\n```\nif (res.data.status == ERROR.USER_PASS_INVALID) {\n                        foundationApi.publish('main-notifications', {\n                            title: ERROR.USER_PASS_INVALID_TEXT,\n                            content: 'Please try again'\n                        });\n}\n```\n. So pretty much you can avoid using gulp all together and just transfer the build folder to whatever production server there is? \n\nSent from my iPhone\n\n> On Dec 27, 2014, at 5:32 PM, Antonin Januska notifications@github.com wrote:\n> \n> I would NOT recommend running Gulp in a production environment. Gulp and even a Node process can crash without being restarted because of all kinds of different errors. Instead, if you want to run a Node process, use forever and build your own app.js to run a static server (because that's all you really need). There are some other configurations you'll need to figure out (such as if you'll run forever on port 80, or use Apache/Nginx to point to the forever process port).\n> \n> When you upload the files to your server, running Gulp once should setup all the production files (the /build folder).\n> \n> However, you can make your life much easier by running any kind of a basic static server such as with Apache or Nginx and just run everything static, pre-build the files locally and FTP it up. Or install Node and build files after deployment.\n> \n> There's really not a need for anything outside of static file serving.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. I was getting a similar error when doing this, a friend of mine tested it using a capital F (`FoundationApi`) and it worked fine. I could be crazy and coming up with stuff, but it worked for me! I would give it a shot.\n. Here is my code I used to call it, see if maybe this helps at all.\n\nJS\n\n```\nFoundationApi.publish('login-fail', {\n                        title: 'Login Failed!',\n                        content: user.msg,\n                        color: 'alert'\n                    });\n```\n\nHTML\n\n```\n<zf-notification-set id=\"login-fail\"></zf-notification-set>\n```\n\nIt works for me, do you have foundation declared in your app.js? Should look something like this, from 1.0.2 at least.\n\n```\n(function () {\n    'use strict';\n\n    angular.module('applicationName', [\n            'ui.router',\n            'ngAnimate',\n            'ngCookies',\n            'ngSanitize',\n\n            //foundation\n            'foundation',\n            'foundation.dynamicRouting',\n            'foundation.dynamicRouting.animations',\n\n            // Controllers for your app as well\n            'user.controllers'\n        ])\n        .config(config)\n        .run(run);\n\n    config.$inject = ['$urlRouterProvider', '$locationProvider'];\n\n    function config($urlProvider, $locationProvider) {\n        $urlProvider.otherwise('/');\n\n        $locationProvider.html5Mode({\n            enabled: true,\n            requireBase: false\n        });\n\n        $locationProvider.hashPrefix('!');\n    }\n\n    function run($rootScope, $cookieStore, $location) {\n        FastClick.attach(document.body);\n    }\n\n})();\n```\n\nThere isn't much detail on what the proper use for these items are in the docs so I am making due with what was given to me and just reading through their code as well. I figured out most of this by breaking down how the Foundation for Apps JS works.\n. Its initiated due to the `foundation.js` with the `app.js` files. I didn't do anything to initialize them, I just saw they were included when you `gulp` all the files together. In the actual Foundation source I saw how they exampled and initialized the actual pieces of the API. I just kinda copied that and made it do what I wanted. Didn't modify anything besides what I already posted. It could be the way your gulp file is set up and you are compiling? I'm not sure, could be a few factors.\n\nBT DUBS!\nThe source file I'm talking about is in `bower_components/foundation-apps/js/angular/notification/notification.js`. You can see all the functions that Foundation for Apps uses. And as for the gulp file, I'll post the top part of that to show how I'm doing things for this.\n\n```\nvar sassPaths = [\n    'client/assets/scss',\n    'bower_components/foundation-apps/scss'\n];\n// These files include Foundation for Apps and its dependencies\nvar foundationJS = [\n    'bower_components/fastclick/lib/fastclick.js',\n    'bower_components/viewport-units-buggyfill/viewport-units-buggyfill.js',\n    'bower_components/tether/tether.js',\n    'bower_components/hammerjs/hammer.js',\n    'bower_components/angular/angular.js',\n    'bower_components/angular-cookies/angular-cookies.js',\n    'bower_components/angular-animate/angular-animate.js',\n    'bower_components/angular-touch/angular-touch.js',\n    'bower_components/angular-sanitize/angular-sanitize.js',\n    'bower_components/angular-ui-grid/ui-grid.js',\n    'bower_components/angular-ui-select/dist/select.js',\n    'bower_components/ui-router/release/angular-ui-router.js',\n    'bower_components/foundation-apps/js/vendor/**/*.js',\n    'bower_components/foundation-apps/js/angular/**/*.js'\n    // 'bower_components/foundation-apps/js/angular/**/app.js',\n];\n// These files are for your app's JavaScript\nvar appJS = [\n    'client/assets/js/**/*.js'\n];\n```\n\nIts the same as the initial one for Foundation for Apps, but different with the items and what I use. Such as I comment out their `app.js` so I can call my own.\n. Yea this is deeper than your side, I'm pretty sure it just has to do with the movement of files to the `build` folder when being pushed to production. I came across this problem a while back when I first used it but fixed it by editing the gulpfile to include those assets properly. But this should be marked as a bug.\n. Yea I'm on latest!\n\nSent from my iPhone\n\n> On Jan 8, 2015, at 8:59 PM, Antonin Januska notifications@github.com wrote:\n> \n> There were some fixes that went out the door a few weeks back, and one specifically regarding this issue, are you on v1.0.2?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ![image](https://cloud.githubusercontent.com/assets/6125123/5052643/24c1911c-6bf7-11e4-811f-f76bdb35238a.png)\n\nIt started to work fine after some tweaking and just messing around, I don't know how functional the docs are at the time but stuff was showing but nothing really happening.\n. Alright! Thanks, really excited for what you guys have planned haha.\n\nBut if you need any other information (logs, etc), feel free to let me know. Could be an install issue on my side with npm or maybe something more.\n. It is in there now, and it was there when this error happened. It was a weird error that was fixed by removing the `var foundationRoutes` from the Angular-App.js file. Once I did that everything was fine.\n. Just downloaded it, did the installation, did a `gem update` and ran it.\n. I went ahead and pulled the most recent version and everything seemed to flow much better. I came across one hiccup when I didn't run npm install, but did not get the same issue as last time.\n\n> On Nov 26, 2014, at 8:31 AM, Antonin Januska notifications@github.com wrote:\n> \n> @mikehuebner can you confirm if this is still an issue or not? Some things have changed in the codebase. If the problem still persists, I can try helping you troubleshoot it further.\n> \n> I'll go ahead and reopen this when you let me know.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. I got dynamic routing working by simply adding `application` as a dependency to all modules, which is painful. Having that going though and building an app from scratch it works well. Having issues with other controllers still, but overall I can reference foundation easily and it seems to work for the most part.\n. There really are no best practices with the notifications system. I can't seem to figure it out myself.\nHere is what I'm trying.\n\nHTML\n\n```\n<zf-notification-set id=\"main-notifications\"></zf-notification-set>\n```\n\nJS (after login)\n\n```\nif (res.data.status == ERROR.USER_PASS_INVALID) {\n                        foundationApi.publish('main-notifications', {\n                            title: ERROR.USER_PASS_INVALID_TEXT,\n                            content: 'Please try again'\n                        });\n}\n```\n. So pretty much you can avoid using gulp all together and just transfer the build folder to whatever production server there is? \n\nSent from my iPhone\n\n> On Dec 27, 2014, at 5:32 PM, Antonin Januska notifications@github.com wrote:\n> \n> I would NOT recommend running Gulp in a production environment. Gulp and even a Node process can crash without being restarted because of all kinds of different errors. Instead, if you want to run a Node process, use forever and build your own app.js to run a static server (because that's all you really need). There are some other configurations you'll need to figure out (such as if you'll run forever on port 80, or use Apache/Nginx to point to the forever process port).\n> \n> When you upload the files to your server, running Gulp once should setup all the production files (the /build folder).\n> \n> However, you can make your life much easier by running any kind of a basic static server such as with Apache or Nginx and just run everything static, pre-build the files locally and FTP it up. Or install Node and build files after deployment.\n> \n> There's really not a need for anything outside of static file serving.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. I was getting a similar error when doing this, a friend of mine tested it using a capital F (`FoundationApi`) and it worked fine. I could be crazy and coming up with stuff, but it worked for me! I would give it a shot.\n. Here is my code I used to call it, see if maybe this helps at all.\n\nJS\n\n```\nFoundationApi.publish('login-fail', {\n                        title: 'Login Failed!',\n                        content: user.msg,\n                        color: 'alert'\n                    });\n```\n\nHTML\n\n```\n<zf-notification-set id=\"login-fail\"></zf-notification-set>\n```\n\nIt works for me, do you have foundation declared in your app.js? Should look something like this, from 1.0.2 at least.\n\n```\n(function () {\n    'use strict';\n\n    angular.module('applicationName', [\n            'ui.router',\n            'ngAnimate',\n            'ngCookies',\n            'ngSanitize',\n\n            //foundation\n            'foundation',\n            'foundation.dynamicRouting',\n            'foundation.dynamicRouting.animations',\n\n            // Controllers for your app as well\n            'user.controllers'\n        ])\n        .config(config)\n        .run(run);\n\n    config.$inject = ['$urlRouterProvider', '$locationProvider'];\n\n    function config($urlProvider, $locationProvider) {\n        $urlProvider.otherwise('/');\n\n        $locationProvider.html5Mode({\n            enabled: true,\n            requireBase: false\n        });\n\n        $locationProvider.hashPrefix('!');\n    }\n\n    function run($rootScope, $cookieStore, $location) {\n        FastClick.attach(document.body);\n    }\n\n})();\n```\n\nThere isn't much detail on what the proper use for these items are in the docs so I am making due with what was given to me and just reading through their code as well. I figured out most of this by breaking down how the Foundation for Apps JS works.\n. Its initiated due to the `foundation.js` with the `app.js` files. I didn't do anything to initialize them, I just saw they were included when you `gulp` all the files together. In the actual Foundation source I saw how they exampled and initialized the actual pieces of the API. I just kinda copied that and made it do what I wanted. Didn't modify anything besides what I already posted. It could be the way your gulp file is set up and you are compiling? I'm not sure, could be a few factors.\n\nBT DUBS!\nThe source file I'm talking about is in `bower_components/foundation-apps/js/angular/notification/notification.js`. You can see all the functions that Foundation for Apps uses. And as for the gulp file, I'll post the top part of that to show how I'm doing things for this.\n\n```\nvar sassPaths = [\n    'client/assets/scss',\n    'bower_components/foundation-apps/scss'\n];\n// These files include Foundation for Apps and its dependencies\nvar foundationJS = [\n    'bower_components/fastclick/lib/fastclick.js',\n    'bower_components/viewport-units-buggyfill/viewport-units-buggyfill.js',\n    'bower_components/tether/tether.js',\n    'bower_components/hammerjs/hammer.js',\n    'bower_components/angular/angular.js',\n    'bower_components/angular-cookies/angular-cookies.js',\n    'bower_components/angular-animate/angular-animate.js',\n    'bower_components/angular-touch/angular-touch.js',\n    'bower_components/angular-sanitize/angular-sanitize.js',\n    'bower_components/angular-ui-grid/ui-grid.js',\n    'bower_components/angular-ui-select/dist/select.js',\n    'bower_components/ui-router/release/angular-ui-router.js',\n    'bower_components/foundation-apps/js/vendor/**/*.js',\n    'bower_components/foundation-apps/js/angular/**/*.js'\n    // 'bower_components/foundation-apps/js/angular/**/app.js',\n];\n// These files are for your app's JavaScript\nvar appJS = [\n    'client/assets/js/**/*.js'\n];\n```\n\nIts the same as the initial one for Foundation for Apps, but different with the items and what I use. Such as I comment out their `app.js` so I can call my own.\n. Yea this is deeper than your side, I'm pretty sure it just has to do with the movement of files to the `build` folder when being pushed to production. I came across this problem a while back when I first used it but fixed it by editing the gulpfile to include those assets properly. But this should be marked as a bug.\n. Yea I'm on latest!\n\nSent from my iPhone\n\n> On Jan 8, 2015, at 8:59 PM, Antonin Januska notifications@github.com wrote:\n> \n> There were some fixes that went out the door a few weeks back, and one specifically regarding this issue, are you on v1.0.2?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ",
    "akiran": "Thanks.\n\nSetting flex-basis alone didn't work.\nI had to use shrink class and flex-basis  or  use entire flex property  flex: 0 0 100px;\n\nI still couldn't achieve the layout I am trying.\nI want the header to be fixed and main body and footer to be scrollable.\nWhen main body text is long, it is becoming  scrollable and footer is still staying on the screen. \n\nI think, in new grid system, every block is scrollable.\nWill there be an option to turn this off, if we want to, and have a single scrollbar for entire page \n. @gakimball  Thanks \nIts Working.\nhttp://codepen.io/akiran/pen/XJJdQw\n\nSidebars got stretched without adding any additional css. \n. Foundation 5 supports hover effect on active items.\nEven Tabs in foundation-apps support hover effect on active items.\n. I agree, additional attribute is required to force atleast one accordion item to be open.\n\nIn the current codebase, \nif multi-open = true, all items are collapsible.\nif multi-open = flase, one item is always active.\n\nFixed this inconsistency in this pull request \n. Can we call the new option \"collapsible\"\n\ncollapsible = true  ->  All accordion items can be collapsed\ncollapsible = false  -> Atleast one accordion item will be open\n. So, do you want to have auto-open option or can we merge its functionality with collapsible and remove auto-open option\n\ncollapsible = true  -> all items are collapsed initially (auto-open=false functionality) and all items can be collapsed later \n\ncollapsibe = false -> first item will be open initially (auto-open=true functionality) and atleast one item will be open later.\n. Yes, It should work both as element and attribute.\n\nI changed \n\n``` bash\nrestrict: 'A'\n```\n\nto\n\n``` bash\nrestrict: 'EA`\n```\n\nto make zf-action-sheet directive work as both element and attribute\n. Before this fix, the below code snippet from docs is giving error\n\n``` html\n<a href=\"#\" zf-toggle=\"my-actionsheet\">toggle</a>\n<zf-action-sheet id=\"my-actionsheet\">\n<zf-as-button>my button goes here</zf-as-button>\n<zf-as-content position=\"bottom\">\nMy content goes here\n</zf-as-content>\n</zf-action-sheet>\n```\n\nbecause  zf-action-sheet directive is not defined to be used as element\n. I agree.\nMaking directives attribute-only or element-only will be easy to remember.\n\nIt will be confusing If some directives are attribute only and some directives can be either element or attribute.\n\nDo you want make this change for all components ?\n. @AntJanus  Mixing  attributes and elements is working for me. I don't know what problem you are facing\nAll the four scenarios below are working with this fix.\n\n``` html\n<zf-action-sheet>\n  <zf-as-button>my button goes here</zf-as-button>\n  <zf-as-content position=\"bottom\">\n    My content goes here\n  </zf-as-content>\n</zf-action-sheet>\n<hr />\n\n<div zf-action-sheet>\n  <div zf-as-button>my button goes here</div>\n  <div zf-as-content position=\"bottom\">\n    My content goes here\n  </div>\n</div>\n<hr />\n\n<div zf-action-sheet>\n  <zf-as-button>my button goes here</zf-as-button>\n  <zf-as-content position=\"bottom\">\n    My content goes here\n  </zf-as-content>\n</div>\n<hr />\n\n<zf-action-sheet>\n  <div zf-as-button>my button goes here</div>\n  <div zf-as-content position=\"bottom\">\n    My content goes here\n  </div>\n</zf-action-sheet>\n```\n. Adding template cache will further cleanup the build process  https://github.com/zurb/foundation-apps/issues/298\n. Check this [pull request to  foundation-apps-template](https://github.com/zurb/foundation-apps-template/pull/11)\n. Thanks @AntJanus \n. Ubuntu 14.04.1 LTS OS and Chrome Version 37.0\n. When  we click on bottom panel, extra scrollbar appears and then disappears after the animation of panel is completed. This spoils the smooth animation effect.\n\nI could see this in latest version of docs also.\n. Since there are lot of chages, I could not merge these changes.\nSo, I create a new pull request https://github.com/zurb/foundation-apps/pull/317\nYou can close this and merge https://github.com/zurb/foundation-apps/pull/317\n. I clone the repo today again and its working fine.\nI don't know what happened before.\n\nClosing this issue\n. This issue is strange.\n\nIt works some times and  it fails some times in the repo.\n\nNow I am getting below error\n\n```\nevents.js:72\n        throw er; // Unhandled 'error' event\n              ^\n/home/kiran/work/opensource/foundation-apps/base.scss:8:21: Unclosed quote\n\n// // Libraries (let's make Normalize an external dependency eventually)\n                    ^\n// @import \"foundation-apps/scss/vendor/normalize\";\n```\n. One issue with zf-hard-toggle is fixed in https://github.com/zurb/foundation-apps/pull/317\n\nIf we click before the animation  of previous click is completed, I am seeing unexpected behavior.\n. @AntJanus  This is a tricky problem.\nWouldn't it delay the response of last click, if we queue animations\n. These are my thoughts on expected behavior.\n\nSuppose if a user clicks on left panel button, left panel starts sliding in.\nIf user clicks on right panel when left panel slides in 50%,\nleft panel should start sliding out from halfway and right panel should start sliding in simultaneously.\n. cool\n. Animation cancellation is working fine few cases.\nStill there are few edge cases where animation behavior is unexpected  \n. If we pass an expression to data-src, angular evaluates it and pass its value to src (Similar to ng-src).\n\nDevelopers can pass a path or path expression to data-src with this fix.\n\n``` html\n<img zf-iconic=\"\" data-src=\"iconic/thumb.svg \" class=\"iconic-sm\" >\n<img zf-iconic=\"\" data-src=\"iconic/{{name}}.svg\"  class=\"iconic-sm\" >\n```\n\nAngular evaluates data-src and pass it to src.\nIn the directive, src value is again set to data-src because iconic.js uses the value on data-src attribute.\n. Added back dynSrc  option\n. After posting this issue, I found that esc-close should not be used on `a` tags.\nEsc button works only if elements on which esc-close attribute is mentioned is on focus.\n\nGenerally esc event listeners are added on body or document.\nNow I am doubtful about the usefulness of this feature I am proposing.\n\nWhat do you think ?\n. @jeaniec,  I agree . Updating the that esc-close should be used on body will be usefull\n. While debugging this issue, I found name mismatch between css classes and angular directives\n\nmap of css classes names to angular directives\n.action-sheet-container -> zf-action-sheet\n.action-sheet                -> zf-as-content\n\nThere is no is-active class for action-sheet-container, but it is considered in angular directive.\nThis is the main reason for this issue. \n.\n. It also need cleanup in angular directive because it is adding is-active class for div containing action-sheet-container class.\n. @AntJanus, Still few more things need to be taken care of to support this usecase.\nActionsheet is slightly different from other components.\nIn all other components, zf-closable, id, is-active class is applied on element that is shown/hidden with events.\nBut in actionsheet, zf-closable and id is applied in zf-action-sheet which is always shown and\nis-active is applied on zf-as-content which is shown/hidden with events. Because of this zf-hard-toggle is not working as expected.\n\nI tried to submit a PR for this issue, but couldn't do because of these issues.\n. Yes,  modal content is appearing on the top in mobile devices instead of center, which doesn't look good\nDoes it need to occupy full width on tablets ? \nCan we let grid classes on modal content decide the width of the modal ?\n\nIf modal is used as a confirm dialog, it would be nice if users can see overlay, and model content is not occupying entire width and height. User will clearly understand that this is dialog and more content is behind it.\n. @gakimball, I am doing both: setting variables and writing custom css.\n$button-background-hover will be helpful for customizing buttons.\n. Thanks.\n\nSetting flex-basis alone didn't work.\nI had to use shrink class and flex-basis  or  use entire flex property  flex: 0 0 100px;\n\nI still couldn't achieve the layout I am trying.\nI want the header to be fixed and main body and footer to be scrollable.\nWhen main body text is long, it is becoming  scrollable and footer is still staying on the screen. \n\nI think, in new grid system, every block is scrollable.\nWill there be an option to turn this off, if we want to, and have a single scrollbar for entire page \n. @gakimball  Thanks \nIts Working.\nhttp://codepen.io/akiran/pen/XJJdQw\n\nSidebars got stretched without adding any additional css. \n. Foundation 5 supports hover effect on active items.\nEven Tabs in foundation-apps support hover effect on active items.\n. I agree, additional attribute is required to force atleast one accordion item to be open.\n\nIn the current codebase, \nif multi-open = true, all items are collapsible.\nif multi-open = flase, one item is always active.\n\nFixed this inconsistency in this pull request \n. Can we call the new option \"collapsible\"\n\ncollapsible = true  ->  All accordion items can be collapsed\ncollapsible = false  -> Atleast one accordion item will be open\n. So, do you want to have auto-open option or can we merge its functionality with collapsible and remove auto-open option\n\ncollapsible = true  -> all items are collapsed initially (auto-open=false functionality) and all items can be collapsed later \n\ncollapsibe = false -> first item will be open initially (auto-open=true functionality) and atleast one item will be open later.\n. Yes, It should work both as element and attribute.\n\nI changed \n\n``` bash\nrestrict: 'A'\n```\n\nto\n\n``` bash\nrestrict: 'EA`\n```\n\nto make zf-action-sheet directive work as both element and attribute\n. Before this fix, the below code snippet from docs is giving error\n\n``` html\n<a href=\"#\" zf-toggle=\"my-actionsheet\">toggle</a>\n<zf-action-sheet id=\"my-actionsheet\">\n<zf-as-button>my button goes here</zf-as-button>\n<zf-as-content position=\"bottom\">\nMy content goes here\n</zf-as-content>\n</zf-action-sheet>\n```\n\nbecause  zf-action-sheet directive is not defined to be used as element\n. I agree.\nMaking directives attribute-only or element-only will be easy to remember.\n\nIt will be confusing If some directives are attribute only and some directives can be either element or attribute.\n\nDo you want make this change for all components ?\n. @AntJanus  Mixing  attributes and elements is working for me. I don't know what problem you are facing\nAll the four scenarios below are working with this fix.\n\n``` html\n<zf-action-sheet>\n  <zf-as-button>my button goes here</zf-as-button>\n  <zf-as-content position=\"bottom\">\n    My content goes here\n  </zf-as-content>\n</zf-action-sheet>\n<hr />\n\n<div zf-action-sheet>\n  <div zf-as-button>my button goes here</div>\n  <div zf-as-content position=\"bottom\">\n    My content goes here\n  </div>\n</div>\n<hr />\n\n<div zf-action-sheet>\n  <zf-as-button>my button goes here</zf-as-button>\n  <zf-as-content position=\"bottom\">\n    My content goes here\n  </zf-as-content>\n</div>\n<hr />\n\n<zf-action-sheet>\n  <div zf-as-button>my button goes here</div>\n  <div zf-as-content position=\"bottom\">\n    My content goes here\n  </div>\n</zf-action-sheet>\n```\n. Adding template cache will further cleanup the build process  https://github.com/zurb/foundation-apps/issues/298\n. Check this [pull request to  foundation-apps-template](https://github.com/zurb/foundation-apps-template/pull/11)\n. Thanks @AntJanus \n. Ubuntu 14.04.1 LTS OS and Chrome Version 37.0\n. When  we click on bottom panel, extra scrollbar appears and then disappears after the animation of panel is completed. This spoils the smooth animation effect.\n\nI could see this in latest version of docs also.\n. Since there are lot of chages, I could not merge these changes.\nSo, I create a new pull request https://github.com/zurb/foundation-apps/pull/317\nYou can close this and merge https://github.com/zurb/foundation-apps/pull/317\n. I clone the repo today again and its working fine.\nI don't know what happened before.\n\nClosing this issue\n. This issue is strange.\n\nIt works some times and  it fails some times in the repo.\n\nNow I am getting below error\n\n```\nevents.js:72\n        throw er; // Unhandled 'error' event\n              ^\n/home/kiran/work/opensource/foundation-apps/base.scss:8:21: Unclosed quote\n\n// // Libraries (let's make Normalize an external dependency eventually)\n                    ^\n// @import \"foundation-apps/scss/vendor/normalize\";\n```\n. One issue with zf-hard-toggle is fixed in https://github.com/zurb/foundation-apps/pull/317\n\nIf we click before the animation  of previous click is completed, I am seeing unexpected behavior.\n. @AntJanus  This is a tricky problem.\nWouldn't it delay the response of last click, if we queue animations\n. These are my thoughts on expected behavior.\n\nSuppose if a user clicks on left panel button, left panel starts sliding in.\nIf user clicks on right panel when left panel slides in 50%,\nleft panel should start sliding out from halfway and right panel should start sliding in simultaneously.\n. cool\n. Animation cancellation is working fine few cases.\nStill there are few edge cases where animation behavior is unexpected  \n. If we pass an expression to data-src, angular evaluates it and pass its value to src (Similar to ng-src).\n\nDevelopers can pass a path or path expression to data-src with this fix.\n\n``` html\n<img zf-iconic=\"\" data-src=\"iconic/thumb.svg \" class=\"iconic-sm\" >\n<img zf-iconic=\"\" data-src=\"iconic/{{name}}.svg\"  class=\"iconic-sm\" >\n```\n\nAngular evaluates data-src and pass it to src.\nIn the directive, src value is again set to data-src because iconic.js uses the value on data-src attribute.\n. Added back dynSrc  option\n. After posting this issue, I found that esc-close should not be used on `a` tags.\nEsc button works only if elements on which esc-close attribute is mentioned is on focus.\n\nGenerally esc event listeners are added on body or document.\nNow I am doubtful about the usefulness of this feature I am proposing.\n\nWhat do you think ?\n. @jeaniec,  I agree . Updating the that esc-close should be used on body will be usefull\n. While debugging this issue, I found name mismatch between css classes and angular directives\n\nmap of css classes names to angular directives\n.action-sheet-container -> zf-action-sheet\n.action-sheet                -> zf-as-content\n\nThere is no is-active class for action-sheet-container, but it is considered in angular directive.\nThis is the main reason for this issue. \n.\n. It also need cleanup in angular directive because it is adding is-active class for div containing action-sheet-container class.\n. @AntJanus, Still few more things need to be taken care of to support this usecase.\nActionsheet is slightly different from other components.\nIn all other components, zf-closable, id, is-active class is applied on element that is shown/hidden with events.\nBut in actionsheet, zf-closable and id is applied in zf-action-sheet which is always shown and\nis-active is applied on zf-as-content which is shown/hidden with events. Because of this zf-hard-toggle is not working as expected.\n\nI tried to submit a PR for this issue, but couldn't do because of these issues.\n. Yes,  modal content is appearing on the top in mobile devices instead of center, which doesn't look good\nDoes it need to occupy full width on tablets ? \nCan we let grid classes on modal content decide the width of the modal ?\n\nIf modal is used as a confirm dialog, it would be nice if users can see overlay, and model content is not occupying entire width and height. User will clearly understand that this is dialog and more content is behind it.\n. @gakimball, I am doing both: setting variables and writing custom css.\n$button-background-hover will be helpful for customizing buttons.\n. ",
    "JamesDullaghan": "I would try again in a fresh repository. I just cloned into a new folder and it's running fine.\n\nThe only issue I ran into was not having the specific version of sass installed, which is `3.4.7`. Running `bundle update` will install `3.4.8` which causes compilation errors.\n\nRunning:\n\n``` powershell\ngem install sass -v 3.4.7\n```\n. I would try again in a fresh repository. I just cloned into a new folder and it's running fine.\n\nThe only issue I ran into was not having the specific version of sass installed, which is `3.4.7`. Running `bundle update` will install `3.4.8` which causes compilation errors.\n\nRunning:\n\n``` powershell\ngem install sass -v 3.4.7\n```\n. ",
    "pascaloliv": "I also have errors after fresh install:\n\nAfter  \n- git clone\n- npm install\n- bower install\n- npm start\n\nnpm ERR! foundation-apps-template@0.0.1 start: `gulp`\nnpm ERR! Exit status 8\nnpm ERR!\nnpm ERR! Failed at the foundation-apps-template@0.0.1 start script.\nnpm ERR! This is most likely a problem with the foundation-apps-template package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     gulp\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls foundation-apps-template\nnpm ERR! There is likely additional logging output above.\nnpm ERR! System Windows_NT 6.2.9200\nnpm ERR! command \"C:\\Program Files\\nodejs\\\\node.exe\" \"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js\" \"start\"\nnpm ERR! cwd C:\\Users\\opascal\\Documents\\foundationapps\nnpm ERR! node -v v0.10.29\nnpm ERR! npm -v 1.4.14\nnpm ERR! code ELIFECYCLE\nnpm ERR!\nnpm ERR! Additional logging details can be found in:\nnpm ERR!     C:\\Users\\opascal\\Documents\\foundationapps\\npm-debug.log\nnpm ERR! not ok code 0\n. Hello again, thanks for the advice!\n\nI've removed my actual sass gem, then installed the 3.4.7 version.\nSame for Ruby, I'm now running the 2.1.3-p242 version.\n\nStill having weird behaviour : \n\n\u03bb npm start\n\n> foundation-apps-template@0.0.1 start C:\\Users\\opascal\\Documents\\foundationapps\n> gulp\n\n[10:41:24] Using gulpfile ~\\Documents\\foundationapps\\gulpfile.js\n[10:41:24] Starting 'build'...\n[10:41:24] Starting 'clean'...\n[10:41:24] Starting 'server:start'...\n[10:41:24] Finished 'server:start' after 8.35 ms\n[10:41:24] Finished 'build' after 11 ms\n[10:41:24] Starting 'default'...\n[10:41:25] Finished 'default' after 10 ms\n\nevents.js:72\n        throw er; // Unhandled 'error' event\n              ^\nError: listen EADDRINUSE\n    at errnoException (net.js:904:11)\n    at Server._listen2 (net.js:1042:14)\n    at listen (net.js:1064:10)\n    at Server.listen (net.js:1138:5)\n    at ConnectApp.server (C:\\Users\\opascal\\Documents\\foundationapps\\node_modules\\gulp-connect\\index.js:57:19)\n    at new ConnectApp (C:\\Users\\opascal\\Documents\\foundationapps\\node_modules\\gulp-connect\\index.js:37:10)\n    at Object.module.exports.server (C:\\Users\\opascal\\Documents\\foundationapps\\node_modules\\gulp-connect\\index.\njs:170:12)\n    at Gulp.<anonymous> (C:\\Users\\opascal\\Documents\\foundationapps\\gulpfile.js:108:11)\n    at module.exports (C:\\Users\\opascal\\Documents\\foundationapps\\node_modules\\gulp\\node_modules\\orchestrator\\li\nb\\runTask.js:34:7)\n    at Gulp.Orchestrator._runTask (C:\\Users\\opascal\\Documents\\foundationapps\\node_modules\\gulp\\node_modules\\orc\nhestrator\\index.js:273:3)\n\nnpm ERR! foundation-apps-template@0.0.1 start: `gulp`\nnpm ERR! Exit status 8\nnpm ERR!\nnpm ERR! Failed at the foundation-apps-template@0.0.1 start script.\nnpm ERR! This is most likely a problem with the foundation-apps-template package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     gulp\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls foundation-apps-template\nnpm ERR! There is likely additional logging output above.\nnpm ERR! System Windows_NT 6.2.9200\nnpm ERR! command \"C:\\Program Files\\nodejs\\\\node.exe\" \"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\np\nm-cli.js\" \"start\"\nnpm ERR! cwd C:\\Users\\opascal\\Documents\\foundationapps\nnpm ERR! node -v v0.10.29\nnpm ERR! npm -v 1.4.14\nnpm ERR! code ELIFECYCLE\nnpm ERR!\nnpm ERR! Additional logging details can be found in:\nnpm ERR!     C:\\Users\\opascal\\Documents\\foundationapps\\npm-debug.log\nnpm ERR! not ok code 0\n. Thanks a lot!\nThat workaround solved my 'issue'.\n. I also have errors after fresh install:\n\nAfter  \n- git clone\n- npm install\n- bower install\n- npm start\n\nnpm ERR! foundation-apps-template@0.0.1 start: `gulp`\nnpm ERR! Exit status 8\nnpm ERR!\nnpm ERR! Failed at the foundation-apps-template@0.0.1 start script.\nnpm ERR! This is most likely a problem with the foundation-apps-template package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     gulp\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls foundation-apps-template\nnpm ERR! There is likely additional logging output above.\nnpm ERR! System Windows_NT 6.2.9200\nnpm ERR! command \"C:\\Program Files\\nodejs\\\\node.exe\" \"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js\" \"start\"\nnpm ERR! cwd C:\\Users\\opascal\\Documents\\foundationapps\nnpm ERR! node -v v0.10.29\nnpm ERR! npm -v 1.4.14\nnpm ERR! code ELIFECYCLE\nnpm ERR!\nnpm ERR! Additional logging details can be found in:\nnpm ERR!     C:\\Users\\opascal\\Documents\\foundationapps\\npm-debug.log\nnpm ERR! not ok code 0\n. Hello again, thanks for the advice!\n\nI've removed my actual sass gem, then installed the 3.4.7 version.\nSame for Ruby, I'm now running the 2.1.3-p242 version.\n\nStill having weird behaviour : \n\n\u03bb npm start\n\n> foundation-apps-template@0.0.1 start C:\\Users\\opascal\\Documents\\foundationapps\n> gulp\n\n[10:41:24] Using gulpfile ~\\Documents\\foundationapps\\gulpfile.js\n[10:41:24] Starting 'build'...\n[10:41:24] Starting 'clean'...\n[10:41:24] Starting 'server:start'...\n[10:41:24] Finished 'server:start' after 8.35 ms\n[10:41:24] Finished 'build' after 11 ms\n[10:41:24] Starting 'default'...\n[10:41:25] Finished 'default' after 10 ms\n\nevents.js:72\n        throw er; // Unhandled 'error' event\n              ^\nError: listen EADDRINUSE\n    at errnoException (net.js:904:11)\n    at Server._listen2 (net.js:1042:14)\n    at listen (net.js:1064:10)\n    at Server.listen (net.js:1138:5)\n    at ConnectApp.server (C:\\Users\\opascal\\Documents\\foundationapps\\node_modules\\gulp-connect\\index.js:57:19)\n    at new ConnectApp (C:\\Users\\opascal\\Documents\\foundationapps\\node_modules\\gulp-connect\\index.js:37:10)\n    at Object.module.exports.server (C:\\Users\\opascal\\Documents\\foundationapps\\node_modules\\gulp-connect\\index.\njs:170:12)\n    at Gulp.<anonymous> (C:\\Users\\opascal\\Documents\\foundationapps\\gulpfile.js:108:11)\n    at module.exports (C:\\Users\\opascal\\Documents\\foundationapps\\node_modules\\gulp\\node_modules\\orchestrator\\li\nb\\runTask.js:34:7)\n    at Gulp.Orchestrator._runTask (C:\\Users\\opascal\\Documents\\foundationapps\\node_modules\\gulp\\node_modules\\orc\nhestrator\\index.js:273:3)\n\nnpm ERR! foundation-apps-template@0.0.1 start: `gulp`\nnpm ERR! Exit status 8\nnpm ERR!\nnpm ERR! Failed at the foundation-apps-template@0.0.1 start script.\nnpm ERR! This is most likely a problem with the foundation-apps-template package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     gulp\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls foundation-apps-template\nnpm ERR! There is likely additional logging output above.\nnpm ERR! System Windows_NT 6.2.9200\nnpm ERR! command \"C:\\Program Files\\nodejs\\\\node.exe\" \"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\np\nm-cli.js\" \"start\"\nnpm ERR! cwd C:\\Users\\opascal\\Documents\\foundationapps\nnpm ERR! node -v v0.10.29\nnpm ERR! npm -v 1.4.14\nnpm ERR! code ELIFECYCLE\nnpm ERR!\nnpm ERR! Additional logging details can be found in:\nnpm ERR!     C:\\Users\\opascal\\Documents\\foundationapps\\npm-debug.log\nnpm ERR! not ok code 0\n. Thanks a lot!\nThat workaround solved my 'issue'.\n. ",
    "dougmacklin": "cool thanks!\n. cool thanks!\n. ",
    "goids": "I have the same error, i run http://localhost:8080/#!/playground and no work. \n![captura de pantalla de 2014-12-06 13 29 22](https://cloud.githubusercontent.com/assets/3965091/5328452/f1849fd6-7d4b-11e4-94a7-af2072cc83c9.png)\n. I have the same error, i run http://localhost:8080/#!/playground and no work. \n![captura de pantalla de 2014-12-06 13 29 22](https://cloud.githubusercontent.com/assets/3965091/5328452/f1849fd6-7d4b-11e4-94a7-af2072cc83c9.png)\n. ",
    "minwe": "> Your gulp-ruby-sass task is probably configured to execute SASS using Bundler (a gem dependency manager). When you don't have Bundler installed, that execution will fail with the error message you've quoted. Check your task configuration for the parameter \"bundleExec\" and make sure it's set to false, that way gulp-ruby-sass will run the SASS command directly.\n\nThe first error is resolved:\n\n```\ngem install bundler\n```\n. It works after installing  `bundler`.\n. > Your gulp-ruby-sass task is probably configured to execute SASS using Bundler (a gem dependency manager). When you don't have Bundler installed, that execution will fail with the error message you've quoted. Check your task configuration for the parameter \"bundleExec\" and make sure it's set to false, that way gulp-ruby-sass will run the SASS command directly.\n\nThe first error is resolved:\n\n```\ngem install bundler\n```\n. It works after installing  `bundler`.\n. ",
    "zimt28": "For me the point is, that a (design) front-end framework should work with any JavaScript framework. This should still be the case if the framework offers some functionality that goes beyond design and needs scripts\n. Has anyone started porting it to plain old JavaScript?\n. Sure? I'm not just thinking about Zurb but the community members as well :)\n. I'm sure it would be possible to port the code to another framework. What I find so bad about this decision is, that everyone who doesn't or even can't use Angular will not be able to use it. If they had just used JavaScript, Angular people could still use it, but _everyone else_ could, too.\n. V2 would be a chance to make foundation for apps as framework agnostic as possible (https://github.com/zurb/foundation-apps/issues/136). Having such a version would make it easy to build Angular and React versions upon.\n. For me the point is, that a (design) front-end framework should work with any JavaScript framework. This should still be the case if the framework offers some functionality that goes beyond design and needs scripts\n. Has anyone started porting it to plain old JavaScript?\n. Sure? I'm not just thinking about Zurb but the community members as well :)\n. I'm sure it would be possible to port the code to another framework. What I find so bad about this decision is, that everyone who doesn't or even can't use Angular will not be able to use it. If they had just used JavaScript, Angular people could still use it, but _everyone else_ could, too.\n. V2 would be a chance to make foundation for apps as framework agnostic as possible (https://github.com/zurb/foundation-apps/issues/136). Having such a version would make it easy to build Angular and React versions upon.\n. ",
    "teejten9": "Yeah I don't agree with the decision either, especially after announcing this in the initial blog post and I quote...\n\"If your stack isn't Angular don't worry \u2014 we won't be making any decisions or assumptions about your model or your controller, and we expect the directives and affordances we build into Foundation for Apps will port nicely to other technology\"\n( ref May 23 2014 | http://zurb.com/article/1312/the-next-foundation)\n. Yeah I don't agree with the decision either, especially after announcing this in the initial blog post and I quote...\n\"If your stack isn't Angular don't worry \u2014 we won't be making any decisions or assumptions about your model or your controller, and we expect the directives and affordances we build into Foundation for Apps will port nicely to other technology\"\n( ref May 23 2014 | http://zurb.com/article/1312/the-next-foundation)\n. ",
    "alexprice1": "Of course everyone not using angular will be upset, but I am immensely grateful. Thank you zurb!!!! \n. You can pull out the css and it should work fine.\n\nI imagine that they started using angular because foundation for apps was a concept, and the easiest way to deliver on that concept was using angular. It would be very difficult to reproduce what they did in vanilla javascript without: loosing key features, relying on a different framework, or creating their own framework.\n. 'npm start' runs a script that runs Gulp. \n\nTo see the actual error, just run 'gulp'. \n. Run bower install\n. You get this error when the port is being used by another process. You may already be running the Gulp process? Or a Node sever on the same port?\u00a0\n\nSent on a Sprint Samsung Galaxy S\u00ae 5\n\n-------- Original message --------\nFrom: Tuly- notifications@github.com \nDate:12/20/2014  11:51 AM  (GMT-06:00) \nTo: zurb/foundation-apps foundation-apps@noreply.github.com \nCc: Alexander Price price.alex@yahoo.com \nSubject: Re: [foundation-apps] Trouble starting with npm (#147) \n\nI've a problem doing the same thing, but it's a bit different. If I run \"gulp\" in my app dir, it returns this\n\nroot@ubuntu:~/myApp# gulp\n[18:49:58] Using gulpfile ~/myApp/gulpfile.js\n[18:49:58] Starting 'build'...\n[18:49:58] Starting 'clean'...\n[18:49:58] Starting 'server:start'...\n[18:49:58] Finished 'server:start' after 6.29 ms\n[18:49:58] Finished 'build' after 7.9 ms\n[18:49:58] Starting 'default'...\n[18:49:58] Finished 'default' after 7.87 ms\n\nevents.js:72\nthrow er; // Unhandled 'error' event\n^\nError: listen EADDRINUSE\nat errnoException (net.js:901:11)\nat Server._listen2 (net.js:1039:14)\nat listen (net.js:1061:10)\nat Server.listen (net.js:1135:5)\nat ConnectApp.server (/home/tuly/myApp/node_modules/gulp-connect/index.js:57:19)\nat new ConnectApp (/home/tuly/myApp/node_modules/gulp-connect/index.js:37:10)\nat Object.module.exports.server (/home/tuly/myApp/node_modules/gulp-connect/index.js:170:12)\nat Gulp. (/home/tuly/myApp/gulpfile.js:134:11)\nat module.exports (/home/tuly/myApp/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:34:7)\nat Gulp.Orchestrator._runTask (/home/tuly/myApp/node_modules/gulp/node_modules/orchestrator/index.js:273:3)\n\nWhat can I do ?\nThanks\n\n\u2014\nReply to this email directly or view it on GitHub.\n. Are you trying to run it locally?\u00a0\n\n-------- Original message --------\nFrom: Tuly- notifications@github.com \nDate:12/21/2014  4:31 AM  (GMT-06:00) \nTo: zurb/foundation-apps foundation-apps@noreply.github.com \nCc: Alexander Price price.alex@yahoo.com \nSubject: Re: [foundation-apps] Trouble starting with npm (#147) \n\nHi, \nThanks for the attention, I don't know why but it's now working ! \n\n2014-12-20 20:18 GMT+01:00 Alexander Price notifications@github.com: \n\n> You get this error when the port is being used by another process. You may \n> already be running the Gulp process? Or a Node sever on the same port? \n> \n> Sent on a Sprint Samsung Galaxy S\u00ae 5 \n> \n> -------- Original message -------- \n> From: Tuly- notifications@github.com \n> Date:12/20/2014 11:51 AM (GMT-06:00) \n> To: zurb/foundation-apps foundation-apps@noreply.github.com \n> Cc: Alexander Price price.alex@yahoo.com \n> Subject: Re: [foundation-apps] Trouble starting with npm (#147) \n> \n> I've a problem doing the same thing, but it's a bit different. If I run \n> \"gulp\" in my app dir, it returns this \n> \n> root@ubuntu:~/myApp# gulp \n> [18:49:58] Using gulpfile ~/myApp/gulpfile.js \n> [18:49:58] Starting 'build'... \n> [18:49:58] Starting 'clean'... \n> [18:49:58] Starting 'server:start'... \n> [18:49:58] Finished 'server:start' after 6.29 ms \n> [18:49:58] Finished 'build' after 7.9 ms \n> [18:49:58] Starting 'default'... \n> [18:49:58] Finished 'default' after 7.87 ms \n> \n> events.js:72 \n> throw er; // Unhandled 'error' event \n> ^ \n> Error: listen EADDRINUSE \n> at errnoException (net.js:901:11) \n> at Server._listen2 (net.js:1039:14) \n> at listen (net.js:1061:10) \n> at Server.listen (net.js:1135:5) \n> at ConnectApp.server \n> (/home/tuly/myApp/node_modules/gulp-connect/index.js:57:19) \n> at new ConnectApp \n> (/home/tuly/myApp/node_modules/gulp-connect/index.js:37:10) \n> at Object.module.exports.server \n> (/home/tuly/myApp/node_modules/gulp-connect/index.js:170:12) \n> at Gulp. (/home/tuly/myApp/gulpfile.js:134:11) \n> at module.exports \n> (/home/tuly/myApp/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:34:7) \n> at Gulp.Orchestrator._runTask \n> (/home/tuly/myApp/node_modules/gulp/node_modules/orchestrator/index.js:273:3) \n> \n> What can I do ? \n> Thanks \n> \n> \u2014 \n> Reply to this email directly or view it on GitHub. \n> \n> \u2014 \n> Reply to this email directly or view it on GitHub \n> https://github.com/zurb/foundation-apps/issues/147#issuecomment-67746469 \n> . \n\n## \n\n_Andrea Tulimiero_\n\u2014\nReply to this email directly or view it on GitHub.\n. Make sure you are in the correct directory.\u00a0\n\nRun npm install.\u00a0\nRun bower install\u00a0\n\nSent on a Sprint Samsung Galaxy S\u00ae 5\n\n-------- Original message --------\nFrom: Nick notifications@github.com \nDate:12/21/2014  6:28 PM  (GMT-06:00) \nTo: zurb/foundation-apps foundation-apps@noreply.github.com \nCc: Alexander Price price.alex@yahoo.com \nSubject: Re: [foundation-apps] Trouble starting with npm (#147) \n\n@chapinkapa I have a similar problem.\nWhen I run gulp:\n\nError: Cannot find module 'core-util-is'\nat Function.Module._resolveFilename (module.js:338:15)\nat Function.Module._load (module.js:280:25)\nat Module.require (module.js:364:17)\nat require (module.js:380:17)\nat Object. (/Users/NickWong/Desktop/Projects/FoundationApp/node_modules/through2/node_modules/readable-stream/lib/_stream_duplex.js:39:12)\nat Module._compile (module.js:456:26)\nat Object.Module._extensions..js (module.js:474:10)\nat Module.load (module.js:356:32)\nat Function.Module._load (module.js:312:12)\nat Module.require (module.js:364:17)\n\n\u2014\nReply to this email directly or view it on GitHub.\n. Awesome! Merry Christmas!\n. Turn2norm,\nI have not worked with this enough to know how to get this working with an existing project, but I really suggest starting a new project and get a hang of it.\n. You can do something like this in your gulpfile.js evidently:\n\n```\ngulp.task('copy-templates-jade', function() {\n  var YOUR_LOCALS = {};\n\n  return gulp.src('./jade/*.jade')\n    .pipe(dynamicRouting({\n      path: 'build/assets/js/routes.js',\n      root: 'client'\n    }))\n    .pipe(jade({\n      locals: YOUR_LOCALS\n    }))\n    .pipe(gulp.dest('./dist/'))\n});\n```\n\nAnd then modify /bower_components/foundation-apps/bin/gulp-dynamic-routing.js by adding the replace function:\n\n```\nconfig.path = relativePath.split(path.sep).join('/').replace(/\\.[^\\.]+$/, '.html');\n```\n. Of course everyone not using angular will be upset, but I am immensely grateful. Thank you zurb!!!! \n. You can pull out the css and it should work fine.\n\nI imagine that they started using angular because foundation for apps was a concept, and the easiest way to deliver on that concept was using angular. It would be very difficult to reproduce what they did in vanilla javascript without: loosing key features, relying on a different framework, or creating their own framework.\n. 'npm start' runs a script that runs Gulp. \n\nTo see the actual error, just run 'gulp'. \n. Run bower install\n. You get this error when the port is being used by another process. You may already be running the Gulp process? Or a Node sever on the same port?\u00a0\n\nSent on a Sprint Samsung Galaxy S\u00ae 5\n\n-------- Original message --------\nFrom: Tuly- notifications@github.com \nDate:12/20/2014  11:51 AM  (GMT-06:00) \nTo: zurb/foundation-apps foundation-apps@noreply.github.com \nCc: Alexander Price price.alex@yahoo.com \nSubject: Re: [foundation-apps] Trouble starting with npm (#147) \n\nI've a problem doing the same thing, but it's a bit different. If I run \"gulp\" in my app dir, it returns this\n\nroot@ubuntu:~/myApp# gulp\n[18:49:58] Using gulpfile ~/myApp/gulpfile.js\n[18:49:58] Starting 'build'...\n[18:49:58] Starting 'clean'...\n[18:49:58] Starting 'server:start'...\n[18:49:58] Finished 'server:start' after 6.29 ms\n[18:49:58] Finished 'build' after 7.9 ms\n[18:49:58] Starting 'default'...\n[18:49:58] Finished 'default' after 7.87 ms\n\nevents.js:72\nthrow er; // Unhandled 'error' event\n^\nError: listen EADDRINUSE\nat errnoException (net.js:901:11)\nat Server._listen2 (net.js:1039:14)\nat listen (net.js:1061:10)\nat Server.listen (net.js:1135:5)\nat ConnectApp.server (/home/tuly/myApp/node_modules/gulp-connect/index.js:57:19)\nat new ConnectApp (/home/tuly/myApp/node_modules/gulp-connect/index.js:37:10)\nat Object.module.exports.server (/home/tuly/myApp/node_modules/gulp-connect/index.js:170:12)\nat Gulp. (/home/tuly/myApp/gulpfile.js:134:11)\nat module.exports (/home/tuly/myApp/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:34:7)\nat Gulp.Orchestrator._runTask (/home/tuly/myApp/node_modules/gulp/node_modules/orchestrator/index.js:273:3)\n\nWhat can I do ?\nThanks\n\n\u2014\nReply to this email directly or view it on GitHub.\n. Are you trying to run it locally?\u00a0\n\n-------- Original message --------\nFrom: Tuly- notifications@github.com \nDate:12/21/2014  4:31 AM  (GMT-06:00) \nTo: zurb/foundation-apps foundation-apps@noreply.github.com \nCc: Alexander Price price.alex@yahoo.com \nSubject: Re: [foundation-apps] Trouble starting with npm (#147) \n\nHi, \nThanks for the attention, I don't know why but it's now working ! \n\n2014-12-20 20:18 GMT+01:00 Alexander Price notifications@github.com: \n\n> You get this error when the port is being used by another process. You may \n> already be running the Gulp process? Or a Node sever on the same port? \n> \n> Sent on a Sprint Samsung Galaxy S\u00ae 5 \n> \n> -------- Original message -------- \n> From: Tuly- notifications@github.com \n> Date:12/20/2014 11:51 AM (GMT-06:00) \n> To: zurb/foundation-apps foundation-apps@noreply.github.com \n> Cc: Alexander Price price.alex@yahoo.com \n> Subject: Re: [foundation-apps] Trouble starting with npm (#147) \n> \n> I've a problem doing the same thing, but it's a bit different. If I run \n> \"gulp\" in my app dir, it returns this \n> \n> root@ubuntu:~/myApp# gulp \n> [18:49:58] Using gulpfile ~/myApp/gulpfile.js \n> [18:49:58] Starting 'build'... \n> [18:49:58] Starting 'clean'... \n> [18:49:58] Starting 'server:start'... \n> [18:49:58] Finished 'server:start' after 6.29 ms \n> [18:49:58] Finished 'build' after 7.9 ms \n> [18:49:58] Starting 'default'... \n> [18:49:58] Finished 'default' after 7.87 ms \n> \n> events.js:72 \n> throw er; // Unhandled 'error' event \n> ^ \n> Error: listen EADDRINUSE \n> at errnoException (net.js:901:11) \n> at Server._listen2 (net.js:1039:14) \n> at listen (net.js:1061:10) \n> at Server.listen (net.js:1135:5) \n> at ConnectApp.server \n> (/home/tuly/myApp/node_modules/gulp-connect/index.js:57:19) \n> at new ConnectApp \n> (/home/tuly/myApp/node_modules/gulp-connect/index.js:37:10) \n> at Object.module.exports.server \n> (/home/tuly/myApp/node_modules/gulp-connect/index.js:170:12) \n> at Gulp. (/home/tuly/myApp/gulpfile.js:134:11) \n> at module.exports \n> (/home/tuly/myApp/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:34:7) \n> at Gulp.Orchestrator._runTask \n> (/home/tuly/myApp/node_modules/gulp/node_modules/orchestrator/index.js:273:3) \n> \n> What can I do ? \n> Thanks \n> \n> \u2014 \n> Reply to this email directly or view it on GitHub. \n> \n> \u2014 \n> Reply to this email directly or view it on GitHub \n> https://github.com/zurb/foundation-apps/issues/147#issuecomment-67746469 \n> . \n\n## \n\n_Andrea Tulimiero_\n\u2014\nReply to this email directly or view it on GitHub.\n. Make sure you are in the correct directory.\u00a0\n\nRun npm install.\u00a0\nRun bower install\u00a0\n\nSent on a Sprint Samsung Galaxy S\u00ae 5\n\n-------- Original message --------\nFrom: Nick notifications@github.com \nDate:12/21/2014  6:28 PM  (GMT-06:00) \nTo: zurb/foundation-apps foundation-apps@noreply.github.com \nCc: Alexander Price price.alex@yahoo.com \nSubject: Re: [foundation-apps] Trouble starting with npm (#147) \n\n@chapinkapa I have a similar problem.\nWhen I run gulp:\n\nError: Cannot find module 'core-util-is'\nat Function.Module._resolveFilename (module.js:338:15)\nat Function.Module._load (module.js:280:25)\nat Module.require (module.js:364:17)\nat require (module.js:380:17)\nat Object. (/Users/NickWong/Desktop/Projects/FoundationApp/node_modules/through2/node_modules/readable-stream/lib/_stream_duplex.js:39:12)\nat Module._compile (module.js:456:26)\nat Object.Module._extensions..js (module.js:474:10)\nat Module.load (module.js:356:32)\nat Function.Module._load (module.js:312:12)\nat Module.require (module.js:364:17)\n\n\u2014\nReply to this email directly or view it on GitHub.\n. Awesome! Merry Christmas!\n. Turn2norm,\nI have not worked with this enough to know how to get this working with an existing project, but I really suggest starting a new project and get a hang of it.\n. You can do something like this in your gulpfile.js evidently:\n\n```\ngulp.task('copy-templates-jade', function() {\n  var YOUR_LOCALS = {};\n\n  return gulp.src('./jade/*.jade')\n    .pipe(dynamicRouting({\n      path: 'build/assets/js/routes.js',\n      root: 'client'\n    }))\n    .pipe(jade({\n      locals: YOUR_LOCALS\n    }))\n    .pipe(gulp.dest('./dist/'))\n});\n```\n\nAnd then modify /bower_components/foundation-apps/bin/gulp-dynamic-routing.js by adding the replace function:\n\n```\nconfig.path = relativePath.split(path.sep).join('/').replace(/\\.[^\\.]+$/, '.html');\n```\n. ",
    "johntron": "I'll always appreciate an open-source project like this (thanks and congrats on 1.0!), but let's be honest:\n\n> you should be able to port the interactions by yourself without a problem\n\nIf you mean the work is trivial, then yes, but it's still a ton of work.\n\nHere's just the beginning:\n1. Almost completely refactor the Angular controllers. Unfortunately, this would be pretty difficult, because of the heavy reliance on Angular idioms like $scope, resource loading, dependency management, templating, object lifecycles, etc.\n2. Remove some angular-specific markup from templates or find a template library that works. You could leave a lot of the markup in if you don't mind the clutter. Projects with existing template libraries may have a hard time with this.\n3. Incorporate a builder or resource loader that will work with 1 and 2. This would take some work, but could be done on new projects; however, existing projects probably already have tools like this, and integrating the two may be nearly impossible.\n4. Incorporate your own SASS transpiler - not so bad.\n5. (optional) Update dependencies/skeletons to make the CLI tools work. Probably not too bad if you don't mind using gulp and npm.\n\nIndividual components could be converted as needed, but for someone like me it would probably be easier (and preferred) to just write the component from scratch.\n\nIf this project intends to support vanilla JavaScript it should start now, because continuing to rely on Angular will make it harder with each commit. It's fine if you don't want to support it, just don't mislead people. Maybe try organizing a team to port the framework? \n\nJS will be around for years to come, but it's frameworks and tools rise and fall very quickly, so starting with a good foundation (get it?) seems like a better strategy.\n. Oh, here's another idea - document how to use  some of the key components in isolation - vertical grids alone would be killer.\n. I'll always appreciate an open-source project like this (thanks and congrats on 1.0!), but let's be honest:\n\n> you should be able to port the interactions by yourself without a problem\n\nIf you mean the work is trivial, then yes, but it's still a ton of work.\n\nHere's just the beginning:\n1. Almost completely refactor the Angular controllers. Unfortunately, this would be pretty difficult, because of the heavy reliance on Angular idioms like $scope, resource loading, dependency management, templating, object lifecycles, etc.\n2. Remove some angular-specific markup from templates or find a template library that works. You could leave a lot of the markup in if you don't mind the clutter. Projects with existing template libraries may have a hard time with this.\n3. Incorporate a builder or resource loader that will work with 1 and 2. This would take some work, but could be done on new projects; however, existing projects probably already have tools like this, and integrating the two may be nearly impossible.\n4. Incorporate your own SASS transpiler - not so bad.\n5. (optional) Update dependencies/skeletons to make the CLI tools work. Probably not too bad if you don't mind using gulp and npm.\n\nIndividual components could be converted as needed, but for someone like me it would probably be easier (and preferred) to just write the component from scratch.\n\nIf this project intends to support vanilla JavaScript it should start now, because continuing to rely on Angular will make it harder with each commit. It's fine if you don't want to support it, just don't mislead people. Maybe try organizing a team to port the framework? \n\nJS will be around for years to come, but it's frameworks and tools rise and fall very quickly, so starting with a good foundation (get it?) seems like a better strategy.\n. Oh, here's another idea - document how to use  some of the key components in isolation - vertical grids alone would be killer.\n. ",
    "btknorr": "Why is issue closed?  Please reopen.  We a are big fans of Foundation but do not like Angular at all.  Please provide a vanilla js version.\n. Why is issue closed?  Please reopen.  We a are big fans of Foundation but do not like Angular at all.  Please provide a vanilla js version.\n. ",
    "tatemz": "@chapinkapa I also think the mentality/philosophy shift from raw JS to frontend frameworks is the idea they are trying to share with the world. Just like they are trying to shift the philosophy on browser support (by supporting only IE 10+).\n\nI believe Zurb's goal is to lead, not necessarily to follow. Thus far, they have shown good faith in balancing quality innovation with standard practices/procedure.\n. Darn git-flow...\n. Understandable. Thanks for the tip. Will update.\n. Looks like you guys have a bad gulpfile... `ReferenceError: autoprefixer is not defined`\n\nPerhaps add `var autoprefixer = require('gulp-autoprefixer');`\n. Not certain, but probably, the developer says that there is a `--safe-mode` that will aid in most scenarios, but it would be ideal to structure the project in such a way to compress without safe mode in order to combine media queries.\n\nI'll throw a test scenario together and see if I can duplicate the docs without error.\n. Looks like you guys are already using the `gulp-minify-css` package (which uses clean-css), but is not at it's latest version (which contains ~~considerable~~ enhancements).\n. I have put together ~~a [gulp plugin](https://github.com/tatemz/gulp-css-condense/tree/develop) as well as~~ a [feature branch](https://github.com/tatemz/foundation-apps/tree/feature/css-condense) that uses this [gulp plugin](https://www.npmjs.com/package/gulp-css-condense) to show how `css-condense` could be used.\n\nFor now, the functionality is only applied to the `dist` set of tasks, but a quick test condensed the 121 media queries from Foundation down to 17. Also, the rest of the css-condense [features](https://github.com/rstacruz/css-condense/#what-it-does) were applied.\n\nQuickly glancing at the compiled docs, I did not see any initial problems, but this is a good place for us to start. Anyone want to audit this for us?\n\nIt would be great if someone could also run a few browser speed tests to see if this is even worth it.\n. Here's a gist of css-condense in action. I have turned on line break, but the styles are still mangled.\n\nhttps://gist.github.com/tatemz/bde16d9fa5f75ff6091c\n. While exploring some benchmarking techniques (that go beyond browser inspectors), I found this:\n\nhttps://github.com/axemclion/perfjankie \n\nAny thoughts on implementing this CSS (and AngularJS component) performance tool into a gulp task and travis test?\n. Here's a first attempt at some browser testing. Looks like `perfjankie` is a pretty good browser testing tool, but looks like there are some errors to get sorted out.\n\nSince this is off this issue's topic, I'll open a pull request and get started on a gulp module as well as a a test config for `perfjankie` tests.\n\n![perfjankie test example](http://ibin.co/1rn2YP4ag8u1)\n\nAs to this issue's topic, I have tested `css-condense` locally and have found that there are no css errors I have run into. If there is interest in using the proposed gulp task to condense and optimize media queries and css rulesets then I suppose I can open up a PR for that as well, else this issue may be closed.\n. Not sure if it's best practice to merge from master. Maybe I should have plucked the gulp/travis tests only?\n. Just run this command and change `~/Development/your-project/vendor/`:\n\n```\ngit clone https://github.com/zurb/foundation-apps.git && cd foundation-apps && npm install && bower install && gulp deploy:dist && cp dist/css/foundation-apps.css ~/Development/your-project/vendor/\n```\n\nI agree that there needs to be a foundation apps bower for dist css, but it's still under development and not fully implemented as a standalone library. That is what Foundation Sites is for.\n. Agreed. Maybe further implementation of the Foundation Sites concepts will be integrated into Foundation Apps. Though #441 is primarily referring to CSS modules, I think implementation techniques ~~might~~ could be beneficial if merged.\n. We can leave comments in as well. Primarily, it condenses media queries (though performance doesn't really matter on a `build` version).\n. That'd be a good feature. Along with stripping out comments, `css-condense` does rearrange the order of sass styles that are imported due to the fact that it assumes media queries should be at the bottom of the stylesheet. It also reorders the selectors in by order of character limits (`a` takes less processing than `div` and therefore should be first to end a query sooner).\n. So, assuming I am wanting the proposed scenario to have a max-width and center up, I would have to do something like this?\n\n```\n<div class=\"grid-container\">\n    <div class=\"grid-block small-up-3\">\n        <div>Item 1</div>\n        <div>Item 2</div>\n        <div>Item 3</div>\n    </div>\n</div>\n```\n. Understood. The [circumstance I was in](http://pastebin.com/artMjv4Z) looked something like this and I just thought it looked redundant at first glance as I assumed `grid-container` was just a `grid-block` with a max-width:\n\n```\n<div class=\"grid-block\">\n  <div class=\"grid-container\">\n    <div class=\"grid-block small-up-3\">\n      <div>Item</div>\n      <div>Item</div>\n      <div>Item</div>\n    </div>\n  </div>\n</div>\n```\n\n_Edit_: I suppose this is where we could begin to see the obvious setbacks of having to match markup to class bindings vs. sass mixin implementation\n. I'm fairly certain that the problem persists with grid-content as well - will confirm...\n. Well, I seem to have got it working with the above SASS snippet, but it's not working IE10 due to the fact that IE10 still uses 2012 syntax, I believe?\n\n**Edit**:\nAdditionally, IE does not take `box-sizing: border-box` into account when adjusting flexible widths... so this block grid `#{$size}-up-#{$i}` syntax will generate and appear like it has overlapping boxes. The `max-width: percentage(1 / $i);` fixes that...\n. @chapinkapa I also think the mentality/philosophy shift from raw JS to frontend frameworks is the idea they are trying to share with the world. Just like they are trying to shift the philosophy on browser support (by supporting only IE 10+).\n\nI believe Zurb's goal is to lead, not necessarily to follow. Thus far, they have shown good faith in balancing quality innovation with standard practices/procedure.\n. Darn git-flow...\n. Understandable. Thanks for the tip. Will update.\n. Looks like you guys have a bad gulpfile... `ReferenceError: autoprefixer is not defined`\n\nPerhaps add `var autoprefixer = require('gulp-autoprefixer');`\n. Not certain, but probably, the developer says that there is a `--safe-mode` that will aid in most scenarios, but it would be ideal to structure the project in such a way to compress without safe mode in order to combine media queries.\n\nI'll throw a test scenario together and see if I can duplicate the docs without error.\n. Looks like you guys are already using the `gulp-minify-css` package (which uses clean-css), but is not at it's latest version (which contains ~~considerable~~ enhancements).\n. I have put together ~~a [gulp plugin](https://github.com/tatemz/gulp-css-condense/tree/develop) as well as~~ a [feature branch](https://github.com/tatemz/foundation-apps/tree/feature/css-condense) that uses this [gulp plugin](https://www.npmjs.com/package/gulp-css-condense) to show how `css-condense` could be used.\n\nFor now, the functionality is only applied to the `dist` set of tasks, but a quick test condensed the 121 media queries from Foundation down to 17. Also, the rest of the css-condense [features](https://github.com/rstacruz/css-condense/#what-it-does) were applied.\n\nQuickly glancing at the compiled docs, I did not see any initial problems, but this is a good place for us to start. Anyone want to audit this for us?\n\nIt would be great if someone could also run a few browser speed tests to see if this is even worth it.\n. Here's a gist of css-condense in action. I have turned on line break, but the styles are still mangled.\n\nhttps://gist.github.com/tatemz/bde16d9fa5f75ff6091c\n. While exploring some benchmarking techniques (that go beyond browser inspectors), I found this:\n\nhttps://github.com/axemclion/perfjankie \n\nAny thoughts on implementing this CSS (and AngularJS component) performance tool into a gulp task and travis test?\n. Here's a first attempt at some browser testing. Looks like `perfjankie` is a pretty good browser testing tool, but looks like there are some errors to get sorted out.\n\nSince this is off this issue's topic, I'll open a pull request and get started on a gulp module as well as a a test config for `perfjankie` tests.\n\n![perfjankie test example](http://ibin.co/1rn2YP4ag8u1)\n\nAs to this issue's topic, I have tested `css-condense` locally and have found that there are no css errors I have run into. If there is interest in using the proposed gulp task to condense and optimize media queries and css rulesets then I suppose I can open up a PR for that as well, else this issue may be closed.\n. Not sure if it's best practice to merge from master. Maybe I should have plucked the gulp/travis tests only?\n. Just run this command and change `~/Development/your-project/vendor/`:\n\n```\ngit clone https://github.com/zurb/foundation-apps.git && cd foundation-apps && npm install && bower install && gulp deploy:dist && cp dist/css/foundation-apps.css ~/Development/your-project/vendor/\n```\n\nI agree that there needs to be a foundation apps bower for dist css, but it's still under development and not fully implemented as a standalone library. That is what Foundation Sites is for.\n. Agreed. Maybe further implementation of the Foundation Sites concepts will be integrated into Foundation Apps. Though #441 is primarily referring to CSS modules, I think implementation techniques ~~might~~ could be beneficial if merged.\n. We can leave comments in as well. Primarily, it condenses media queries (though performance doesn't really matter on a `build` version).\n. That'd be a good feature. Along with stripping out comments, `css-condense` does rearrange the order of sass styles that are imported due to the fact that it assumes media queries should be at the bottom of the stylesheet. It also reorders the selectors in by order of character limits (`a` takes less processing than `div` and therefore should be first to end a query sooner).\n. So, assuming I am wanting the proposed scenario to have a max-width and center up, I would have to do something like this?\n\n```\n<div class=\"grid-container\">\n    <div class=\"grid-block small-up-3\">\n        <div>Item 1</div>\n        <div>Item 2</div>\n        <div>Item 3</div>\n    </div>\n</div>\n```\n. Understood. The [circumstance I was in](http://pastebin.com/artMjv4Z) looked something like this and I just thought it looked redundant at first glance as I assumed `grid-container` was just a `grid-block` with a max-width:\n\n```\n<div class=\"grid-block\">\n  <div class=\"grid-container\">\n    <div class=\"grid-block small-up-3\">\n      <div>Item</div>\n      <div>Item</div>\n      <div>Item</div>\n    </div>\n  </div>\n</div>\n```\n\n_Edit_: I suppose this is where we could begin to see the obvious setbacks of having to match markup to class bindings vs. sass mixin implementation\n. I'm fairly certain that the problem persists with grid-content as well - will confirm...\n. Well, I seem to have got it working with the above SASS snippet, but it's not working IE10 due to the fact that IE10 still uses 2012 syntax, I believe?\n\n**Edit**:\nAdditionally, IE does not take `box-sizing: border-box` into account when adjusting flexible widths... so this block grid `#{$size}-up-#{$i}` syntax will generate and appear like it has overlapping boxes. The `max-width: percentage(1 / $i);` fixes that...\n. ",
    "antonkand": "Np. Figured it was better to just PR and fix it then to wait :) \n. Np. Figured it was better to just PR and fix it then to wait :) \n. ",
    "jcs224": "```\nError: Cannot find module './bower_components/foundation-apps/bin/gulp-dynamic-routing'\n    at Function.Module._resolveFilename (module.js:338:15)\n    at Function.Module._load (module.js:280:25)\n    at Module.require (module.js:364:17)\n    at require (module.js:380:17)\n    at Object.<anonymous> (/Users/sweeney/Dropbox/Websites/foundation_app/gulpfile.js:12:22)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.require (module.js:364:17)\n```\n. Looks like it's working now. Thank you!\n. Nope, I quadruple-checked. If you look closely, you will notice the contents include:\n\n1.0.0 Matterhorn\n1.0.0 Matterhorn\n1.0.0 RC1 Mont Blanc\n\nThe content is identical in the Matterhorn announcements.\n. Wait, looks like didn't run `foundation-apps watch`, that seems to be the new way of doing it.\n. Yeah, now it uses Gulp to compile SCSS by default (basically, node instead of ruby). It's the only way I've been able to get it to work, anyway.\n. I did find a workaround, although I'm not sure it's that clean of a solution.  In bower_components/foundation-apps/bin/gulp-dynamic-routing.js, I found the line\n\n``` javascript\nconfig.path = relativePath.split(path.sep).join('/');\n```\n\nand changed it to\n\n``` javascript\nconfig.path = \"http://laravelfoundationapps.app:8000/foundation/build/\" + relativePath.split(path.sep).join('/');\n```\n\nThis is just fine for development, but this isn't a suitable solution for deployment since I will not be able to compile a new path with Gulp on the deployment server.\n. I'll give it a look and update. I'm not very experienced with Angular. Thanks!\n. ```\nError: Cannot find module './bower_components/foundation-apps/bin/gulp-dynamic-routing'\n    at Function.Module._resolveFilename (module.js:338:15)\n    at Function.Module._load (module.js:280:25)\n    at Module.require (module.js:364:17)\n    at require (module.js:380:17)\n    at Object.<anonymous> (/Users/sweeney/Dropbox/Websites/foundation_app/gulpfile.js:12:22)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.require (module.js:364:17)\n```\n. Looks like it's working now. Thank you!\n. Nope, I quadruple-checked. If you look closely, you will notice the contents include:\n\n1.0.0 Matterhorn\n1.0.0 Matterhorn\n1.0.0 RC1 Mont Blanc\n\nThe content is identical in the Matterhorn announcements.\n. Wait, looks like didn't run `foundation-apps watch`, that seems to be the new way of doing it.\n. Yeah, now it uses Gulp to compile SCSS by default (basically, node instead of ruby). It's the only way I've been able to get it to work, anyway.\n. I did find a workaround, although I'm not sure it's that clean of a solution.  In bower_components/foundation-apps/bin/gulp-dynamic-routing.js, I found the line\n\n``` javascript\nconfig.path = relativePath.split(path.sep).join('/');\n```\n\nand changed it to\n\n``` javascript\nconfig.path = \"http://laravelfoundationapps.app:8000/foundation/build/\" + relativePath.split(path.sep).join('/');\n```\n\nThis is just fine for development, but this isn't a suitable solution for deployment since I will not be able to compile a new path with Gulp on the deployment server.\n. I'll give it a look and update. I'm not very experienced with Angular. Thanks!\n. ",
    "andreatulimiero": "Hi,\nThanks for the attention, I don't know why but it's now working !\n\n2014-12-20 20:18 GMT+01:00 Alexander Price notifications@github.com:\n\n> You get this error when the port is being used by another process. You may\n> already be running the Gulp process? Or a Node sever on the same port?\n> \n> Sent on a Sprint Samsung Galaxy S\u00ae 5\n> \n> -------- Original message --------\n> From: Tuly- notifications@github.com\n> Date:12/20/2014 11:51 AM (GMT-06:00)\n> To: zurb/foundation-apps foundation-apps@noreply.github.com\n> Cc: Alexander Price price.alex@yahoo.com\n> Subject: Re: [foundation-apps] Trouble starting with npm (#147)\n> \n> I've a problem doing the same thing, but it's a bit different. If I run\n> \"gulp\" in my app dir, it returns this\n> \n> root@ubuntu:~/myApp# gulp\n> [18:49:58] Using gulpfile ~/myApp/gulpfile.js\n> [18:49:58] Starting 'build'...\n> [18:49:58] Starting 'clean'...\n> [18:49:58] Starting 'server:start'...\n> [18:49:58] Finished 'server:start' after 6.29 ms\n> [18:49:58] Finished 'build' after 7.9 ms\n> [18:49:58] Starting 'default'...\n> [18:49:58] Finished 'default' after 7.87 ms\n> \n> events.js:72\n> throw er; // Unhandled 'error' event\n> ^\n> Error: listen EADDRINUSE\n> at errnoException (net.js:901:11)\n> at Server._listen2 (net.js:1039:14)\n> at listen (net.js:1061:10)\n> at Server.listen (net.js:1135:5)\n> at ConnectApp.server\n> (/home/tuly/myApp/node_modules/gulp-connect/index.js:57:19)\n> at new ConnectApp\n> (/home/tuly/myApp/node_modules/gulp-connect/index.js:37:10)\n> at Object.module.exports.server\n> (/home/tuly/myApp/node_modules/gulp-connect/index.js:170:12)\n> at Gulp. (/home/tuly/myApp/gulpfile.js:134:11)\n> at module.exports\n> (/home/tuly/myApp/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:34:7)\n> at Gulp.Orchestrator._runTask\n> (/home/tuly/myApp/node_modules/gulp/node_modules/orchestrator/index.js:273:3)\n> \n> What can I do ?\n> Thanks\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/147#issuecomment-67746469\n> .\n\n## \n\n_Andrea Tulimiero_\n. Hi,\nThanks for the attention, I don't know why but it's now working !\n\n2014-12-20 20:18 GMT+01:00 Alexander Price notifications@github.com:\n\n> You get this error when the port is being used by another process. You may\n> already be running the Gulp process? Or a Node sever on the same port?\n> \n> Sent on a Sprint Samsung Galaxy S\u00ae 5\n> \n> -------- Original message --------\n> From: Tuly- notifications@github.com\n> Date:12/20/2014 11:51 AM (GMT-06:00)\n> To: zurb/foundation-apps foundation-apps@noreply.github.com\n> Cc: Alexander Price price.alex@yahoo.com\n> Subject: Re: [foundation-apps] Trouble starting with npm (#147)\n> \n> I've a problem doing the same thing, but it's a bit different. If I run\n> \"gulp\" in my app dir, it returns this\n> \n> root@ubuntu:~/myApp# gulp\n> [18:49:58] Using gulpfile ~/myApp/gulpfile.js\n> [18:49:58] Starting 'build'...\n> [18:49:58] Starting 'clean'...\n> [18:49:58] Starting 'server:start'...\n> [18:49:58] Finished 'server:start' after 6.29 ms\n> [18:49:58] Finished 'build' after 7.9 ms\n> [18:49:58] Starting 'default'...\n> [18:49:58] Finished 'default' after 7.87 ms\n> \n> events.js:72\n> throw er; // Unhandled 'error' event\n> ^\n> Error: listen EADDRINUSE\n> at errnoException (net.js:901:11)\n> at Server._listen2 (net.js:1039:14)\n> at listen (net.js:1061:10)\n> at Server.listen (net.js:1135:5)\n> at ConnectApp.server\n> (/home/tuly/myApp/node_modules/gulp-connect/index.js:57:19)\n> at new ConnectApp\n> (/home/tuly/myApp/node_modules/gulp-connect/index.js:37:10)\n> at Object.module.exports.server\n> (/home/tuly/myApp/node_modules/gulp-connect/index.js:170:12)\n> at Gulp. (/home/tuly/myApp/gulpfile.js:134:11)\n> at module.exports\n> (/home/tuly/myApp/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:34:7)\n> at Gulp.Orchestrator._runTask\n> (/home/tuly/myApp/node_modules/gulp/node_modules/orchestrator/index.js:273:3)\n> \n> What can I do ?\n> Thanks\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/147#issuecomment-67746469\n> .\n\n## \n\n_Andrea Tulimiero_\n. ",
    "niwong": "@chapinkapa I have a similar problem.\nWhen I run gulp:\n\nError: Cannot find module 'core-util-is'\n    at Function.Module._resolveFilename (module.js:338:15)\n    at Function.Module._load (module.js:280:25)\n    at Module.require (module.js:364:17)\n    at require (module.js:380:17)\n    at Object.<anonymous> (/Users/NickWong/Desktop/Projects/FoundationApp/node_modules/through2/node_modules/readable-stream/lib/_stream_duplex.js:39:12)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.require (module.js:364:17)\n. I followed those directions, then ran 'npm start' in the directory.\n\nnpm ERR! foundation-apps-template@0.0.1 start: `gulp`\nnpm ERR! Exit status 8\nnpm ERR! \nnpm ERR! Failed at the foundation-apps-template@0.0.1 start script.\nnpm ERR! This is most likely a problem with the foundation-apps-template package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     gulp\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls foundation-apps-template\nnpm ERR! There is likely additional logging output above.\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"/usr/local/bin/node\" \"/usr/local/bin/npm\" \"start\"\nnpm ERR! cwd /Users/NickWong/Desktop/Projects/FoundationApp\nnpm ERR! node -v v0.10.32\nnpm ERR! npm -v 1.4.28\nnpm ERR! code ELIFECYCLE\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/NickWong/Desktop/Projects/FoundationApp/npm-debug.log\nnpm ERR! not ok code 0\n\nTried \"sudo'ing'\" it.\n\nNicks-MacBook-Pro:FoundationApp NickWong$ sudo npm start\n\n> foundation-apps-template@0.0.1 start /Users/NickWong/Desktop/Projects/FoundationApp\n> gulp\n\nmodule.js:340\n    throw err;\n          ^\nError: Cannot find module 'core-util-is'\n    at Function.Module._resolveFilename (module.js:338:15)\n    at Function.Module._load (module.js:280:25)\n    at Module.require (module.js:364:17)\n    at require (module.js:380:17)\n    at Object.<anonymous> (/Users/NickWong/Desktop/Projects/FoundationApp/node_modules/through2/node_modules/readable-stream/lib/_stream_duplex.js:39:12)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.require (module.js:364:17)\n\nnpm ERR! foundation-apps-template@0.0.1 start: `gulp`\nnpm ERR! Exit status 8\nnpm ERR! \nnpm ERR! Failed at the foundation-apps-template@0.0.1 start script.\nnpm ERR! This is most likely a problem with the foundation-apps-template package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     gulp\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls foundation-apps-template\nnpm ERR! There is likely additional logging output above.\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"/usr/local/bin/node\" \"/usr/local/bin/npm\" \"start\"\nnpm ERR! cwd /Users/NickWong/Desktop/Projects/FoundationApp\nnpm ERR! node -v v0.10.32\nnpm ERR! npm -v 1.4.28\nnpm ERR! code ELIFECYCLE\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/NickWong/Desktop/Projects/FoundationApp/npm-debug.log\nnpm ERR! not ok code 0\n. I figured it out, thank you for your help!!! Merry Christmas\n. @chapinkapa I have a similar problem.\nWhen I run gulp:\n\nError: Cannot find module 'core-util-is'\n    at Function.Module._resolveFilename (module.js:338:15)\n    at Function.Module._load (module.js:280:25)\n    at Module.require (module.js:364:17)\n    at require (module.js:380:17)\n    at Object.<anonymous> (/Users/NickWong/Desktop/Projects/FoundationApp/node_modules/through2/node_modules/readable-stream/lib/_stream_duplex.js:39:12)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.require (module.js:364:17)\n. I followed those directions, then ran 'npm start' in the directory.\n\nnpm ERR! foundation-apps-template@0.0.1 start: `gulp`\nnpm ERR! Exit status 8\nnpm ERR! \nnpm ERR! Failed at the foundation-apps-template@0.0.1 start script.\nnpm ERR! This is most likely a problem with the foundation-apps-template package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     gulp\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls foundation-apps-template\nnpm ERR! There is likely additional logging output above.\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"/usr/local/bin/node\" \"/usr/local/bin/npm\" \"start\"\nnpm ERR! cwd /Users/NickWong/Desktop/Projects/FoundationApp\nnpm ERR! node -v v0.10.32\nnpm ERR! npm -v 1.4.28\nnpm ERR! code ELIFECYCLE\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/NickWong/Desktop/Projects/FoundationApp/npm-debug.log\nnpm ERR! not ok code 0\n\nTried \"sudo'ing'\" it.\n\nNicks-MacBook-Pro:FoundationApp NickWong$ sudo npm start\n\n> foundation-apps-template@0.0.1 start /Users/NickWong/Desktop/Projects/FoundationApp\n> gulp\n\nmodule.js:340\n    throw err;\n          ^\nError: Cannot find module 'core-util-is'\n    at Function.Module._resolveFilename (module.js:338:15)\n    at Function.Module._load (module.js:280:25)\n    at Module.require (module.js:364:17)\n    at require (module.js:380:17)\n    at Object.<anonymous> (/Users/NickWong/Desktop/Projects/FoundationApp/node_modules/through2/node_modules/readable-stream/lib/_stream_duplex.js:39:12)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.require (module.js:364:17)\n\nnpm ERR! foundation-apps-template@0.0.1 start: `gulp`\nnpm ERR! Exit status 8\nnpm ERR! \nnpm ERR! Failed at the foundation-apps-template@0.0.1 start script.\nnpm ERR! This is most likely a problem with the foundation-apps-template package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     gulp\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls foundation-apps-template\nnpm ERR! There is likely additional logging output above.\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"/usr/local/bin/node\" \"/usr/local/bin/npm\" \"start\"\nnpm ERR! cwd /Users/NickWong/Desktop/Projects/FoundationApp\nnpm ERR! node -v v0.10.32\nnpm ERR! npm -v 1.4.28\nnpm ERR! code ELIFECYCLE\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/NickWong/Desktop/Projects/FoundationApp/npm-debug.log\nnpm ERR! not ok code 0\n. I figured it out, thank you for your help!!! Merry Christmas\n. ",
    "marbio": "\"npm install\" works for me\n. \"npm install\" works for me\n. ",
    "mrsweaters": "I made a change earlier to remove the slash from `config.path` but I'm not sure if this is the best solution. That's why I brought it to your attention. If everything appears to be working on your end then I'll just go ahead and close the issue. \n\nAs far as HTML5Mode, seeing as that requires additional server side configuration to make work, I would assume that the user is going to be more experienced. Maybe we could cover HTML5Mode with just some good documentation.\n\nThanks for looking into it!\n. I made a change earlier to remove the slash from `config.path` but I'm not sure if this is the best solution. That's why I brought it to your attention. If everything appears to be working on your end then I'll just go ahead and close the issue. \n\nAs far as HTML5Mode, seeing as that requires additional server side configuration to make work, I would assume that the user is going to be more experienced. Maybe we could cover HTML5Mode with just some good documentation.\n\nThanks for looking into it!\n. ",
    "shadyendless": "I modified my file to use display:flex instead of display:block seeing as I am using an entirely flexbox layout. It's curious that you guys are really trying to push the boundaries of a grid by using flexbox, then removing it in your visibility classes (by using box instead of flex). It was an easy fix for me, though.\n. I modified my file to use display:flex instead of display:block seeing as I am using an entirely flexbox layout. It's curious that you guys are really trying to push the boundaries of a grid by using flexbox, then removing it in your visibility classes (by using box instead of flex). It was an easy fix for me, though.\n. ",
    "FranzZemen": "Is this in Foundation 1.1.0?  Because something similar happens.  After first use, if the modal is brought up again, it  flickers off immediately.  Then the third time it comes up.  Similar with panel.\n. I pulled master.  I then removed jquery per the open thread at:  https://github.com/zurb/foundation-apps/issues/481\n\nModal seems to behave now.  Not sure if I'll need full jquery (481 is still open), but angular's lite version is enough for now.\n\nSince 481 is open, closing this one.\n. Is this in Foundation 1.1.0?  Because something similar happens.  After first use, if the modal is brought up again, it  flickers off immediately.  Then the third time it comes up.  Similar with panel.\n. I pulled master.  I then removed jquery per the open thread at:  https://github.com/zurb/foundation-apps/issues/481\n\nModal seems to behave now.  Not sure if I'll need full jquery (481 is still open), but angular's lite version is enough for now.\n\nSince 481 is open, closing this one.\n. ",
    "nathanjessen": "Appears to be an issue with specificity on a segmented button group.\n![screen shot 2014-12-07 at 6 11 39 pm](https://cloud.githubusercontent.com/assets/1830690/5333990/bac56c9a-7e3c-11e4-8315-7ebfbbbf0f71.png)\n. Appears to be an issue with specificity on a segmented button group.\n![screen shot 2014-12-07 at 6 11 39 pm](https://cloud.githubusercontent.com/assets/1830690/5333990/bac56c9a-7e3c-11e4-8315-7ebfbbbf0f71.png)\n. ",
    "cvrebert": "@AntJanus That still leaves the problem of the user being able to tab away to stuff behind the modal though, right?\n. Bootstrap's modal seems to do it somehow.\n. @jeaniec What do icon paths (91c375ff1e65c872ebfedb783781bced2dbe4aac) have to do with FastClick?\n. @AntJanus That still leaves the problem of the user being able to tab away to stuff behind the modal though, right?\n. Bootstrap's modal seems to do it somehow.\n. @jeaniec What do icon paths (91c375ff1e65c872ebfedb783781bced2dbe4aac) have to do with FastClick?\n. ",
    "WojciechLuczkow": "Hi, I faced similiar issue, thats how I got it fixed:\n\nIn popup directive add another function destroy:\n\n``` javascript\nscope.destroy = function() {\n    scope.active = false;\n    if(tetherInit) {\n        tether.destroy();\n        $(element[0]).remove();\n        tetherInit = false;\n    }\n};\n```\n\nalso in `postLink` I have added cleanup(should be there anyway):\n\n``` javascript\nelement.on('$destroy', function() {\n    foundationApi.unsubscribe(attrs.id);\n});\n```\n\nNow when I switch view using UI router in onExit I am publishing 'destroy' message to the popup\n. Hi, I faced similiar issue, thats how I got it fixed:\n\nIn popup directive add another function destroy:\n\n``` javascript\nscope.destroy = function() {\n    scope.active = false;\n    if(tetherInit) {\n        tether.destroy();\n        $(element[0]).remove();\n        tetherInit = false;\n    }\n};\n```\n\nalso in `postLink` I have added cleanup(should be there anyway):\n\n``` javascript\nelement.on('$destroy', function() {\n    foundationApi.unsubscribe(attrs.id);\n});\n```\n\nNow when I switch view using UI router in onExit I am publishing 'destroy' message to the popup\n. ",
    "drdrak3": "I have created a pull request #824 with my fix for the issue\n(based on the comment by @WojciechLuczkow)\n. I have created a pull request #824 with my fix for the issue\n(based on the comment by @WojciechLuczkow)\n. ",
    "FezVrasta": "How about replacing Tether with Popper.js? In this way the tooltip elements shouldn't be child of body and everything would be easier.\n. How about replacing Tether with Popper.js? In this way the tooltip elements shouldn't be child of body and everything would be easier.\n. ",
    "soumak77": "these issues should be resolved as of v1.2.5 of the community fork for this repo: https://github.com/base-apps/angular-base-apps\n\n@FezVrasta if you want to play around with popper.js integration then feel free to submit a PR against the fork above\n. @gakimball Just as curiosity, what are those three frameworks?  Foundation for Apps, Foundation for Sites, and ...?\n. @gakimball Oh ok, yeah I new about Ink and the rebranding to Foundation for Emails, but didn't realize there was a need for a CLI for that framework.  I thought it was just templates you copied and manually injected whatever content you needed into the provided areas.  I haven't used F4E yet (which may be clear by my last statement), though that is definitely something I want to get started with as my company emails need some much loving care.\n. @hshepherd @vincentmorneau Not sure if either of you have solved this already, but I encountered the same issue and resolved it by adding SCSS similar to what's shown below:\n\n``` scss\n#my-actionsheet .action-sheet {\n  transform: translateX(-70px) translateY(107px);\n\n  &::before, &::after {\n    left: 10%;\n  }\n}\n```\n\nCouple things to note:\n1. Transform will only move the body of the action sheet.  The other styling will move the attached arrow.\n2. The exact numbers (-70px, 107px, 10%) were determine through trial and error, and based on personal preference\n3. This fix is very fragile and will likely need to be updated if ANY changes are made to the action sheet (e.g. adding more options) or if changes are made to the title bar.\n\nLive Example: https://parents.fiboart.com (click Art or Coding at top left)\n. +1\n. @gakimball I believe the same solution used for auto-closing of action sheets when clicked outside should also work for closing of off-canvas and panels.  Perhaps refactor the code into a reusable service to be used for any component?\n. @gakimball did you mean `zfClose`?  That could be used on the body with an element ID and if any click event reaches the body, it would be closed.  There are a couple problems with that approach: \n1. You cannot specify more than one element to close, thus you cannot close the off-canvas AND panels with this method.\n2. All click events that open/toggle a component must now trap the event or else it'll bubble up to the body and close the component.\n3. Any click event inside the component must be trapped or it'll cause the component to close (for same reason as 2).\n4. The body element is usually defined in an index.html, where as all other components are defined else where (i.e. in views).  Forcing a declaration on the body would cause a developer to have to know the id for every component used in their app, which becomes difficult once you start developing a large application.\n\nI prefer the approach used by the actionsheets wherein the developer does not need to set anything up for the auto-close functionality to work as it's just part of the component (solves 4).  It's basically doing the same thing as `zfClose` would be doing if added to the body, but works for multiple elements (solves 1).  The slight difference is that the actionsheet logic checks to see if the click was within the actionsheet, and if so, it doesn't close the actionsheet (solves 3).  This logic seems useful for off-canvas and panels as well.  It also checks to make sure that the click didn't originate from an element used to open or close the component (solves 2).  With some refactoring, the code used for actionsheets could also be used for off-canvas and panels.  Any opposition to taking this approach?\n\nThe only thing I could think of for why this approach may not work is if a developer didn't want the auto-close functionality for that component.  In this case an attribute could be added to the element which is read during the compile phase of the directive.  If the attribute is present, the auto-close functionality is disabled, otherwise it is enabled by default.\n\nI'll take a go at the PR since it should be fairly straightforward.\n. I was searching for zfClosable instead of zf-closable in the code base.  Let me see what can be done with `zf-closable`.\n. Ok, so I think `FoundationApi.closeActiveElements()` (the code that makes use of the `zf-closable` attributes) could be used to solve this issue.  At its most basic, one could expose `FoundationApi` in the scope and add the following to an element: `ng-click=\"FoundationApi.closeActiveElements()\"`.  Adding that to the body element would solve this issue.  This approach will still cause the component to close if the click originated from inside the component.  To solve this, one could add `ng-click=\"$event.stopPropagation()\"` to their component.  I tested this with off-canvas and the off-canvas closes when clicked outside, but stays open when clicked inside.  I don't have any panels in my app to test this with, but I'm sure it would work just the same.\n\nI'm not a huge fan of this approach as it will not work for everyone.  From what I can tell, F4A is being designed so that it could be used by anyone, regardless of how little or how much they know about angular.  The solution above will require the FoundationApi to be exposed in the scope, which will require defining your own angular code (unless this can be done in the front matter, which I'm not sure it should be).  To solve this, a reference to the FoundationApi service could be added to the $rootScope on loading of foundation so that the following could be used `ng-click=\"$root.$foundation.closeActiveElements()\"` instead of `ng-click=\"FoundationApi.closeActiveElements()\"`.  While most of the time adding something to the $rootScope is a bad design pattern, I think this will be ok as the foundation api is a core service that should be available everywhere.\n. After thinking about it, I still would prefer this feature to work out of the box with no additional code required, meaning the code to resolve this issue should reside inside the foundation code base, versus requiring additional angular directives to use this feature.  Perhaps foundation could add a default click handler to the body which always calls `closeActiveElements`.  The click handler could be smart and check where the click originated from and not close a component if the click was inside it.  If a developer doesn't want their component auto-closed when clicked outside, they could add an attribute `zf-auto-close-ignore` or something of the like, so that the component is not closed by the body click handler, but would still be closed by usage of the `zf-hard-toggle` directive (which internally calls `closeActiveElements`).\n. @Martinspire You can implement this feature my adding the following attribute to any element you want to have close the off canvas (in my example the off canvas has id **app-menu**).\n\n`ng-click=\"closeAppMenu()\"`\n\nWhere **closeAppMenu** is the following function on the scope.  You might not need the $timeout anymore.  It was originally added before some of the $$phase bugs were fixed in the framework.\n\n``` js\n$scope.closeAppMenu = function() {\n  $timeout(function() {\n    FoundationApi.publish('app-menu', 'close');\n  });\n};\n```\n\nNote that I did not add the click handler to the body as the body also contains the off canvas menu.  I added the click handler to the root element containing my views so that clicking inside the off canvas does not lose the menu.  In some cases where I need the menu to close when I click a link inside the off canvas, I've added the following element to the link:\n\n`zf-toggle=\"app-menu\"`\n. ZURB has basically dropped support for this framework and it is now being developed by the community here: https://github.com/base-apps/angular-base-apps\n\nFeel free to submit a PR to improve the documentation\n. I did forget to comment on one other thing.  There are changes made to the default app.js file which are to highlight the changes required if using HTML5 mode.  Those changes can be commented out or reverted.\n. I've come to realized that it may be best for the iconic directive to simply call $compile at all times after injecting the svg.  The reasoning is because $compile is required for the dynSrc attribute to operate properly.  Currently the dynSrc attribute is evaluated in the prelinking phase and sets the source.  If the interoplated dynSrc attribute were to change, the change is not propagated to the iconic directive and the icon is not updated.  In order for the icon to update after the source change, the directive needs to be recompiled using the original content prior to first compile.  I'm working on a solution now that I'll share once complete.\n\nIf the above change is made and $compile is already being called in the directive, then IMO $compile should be called after injecting the svg to make the solution complete.\n. I just added the changes required to make the iconic directive truly dynamic.  The directive is now recompiled when dynSrc is updated.  I've also added an additional attribute, dynIcon, which provides the same functionality as data-icon, but dynamically recompiles upon changes.\n. +1 for this feature.  I've found myself needing it a time or two.\n. @gakimball would you or someone on your team be able to look over this request to see if it's possible?  I just did some research and stumbled across this library: https://github.com/marcj/css-element-queries.  I think if that library were integrated into the foundation-apps framework, I could achieve my goal.  I haven't mastered sass yet, so I'm not sure if it'll work by just looking at the code, but I think if the code was updated to extend the breakpoint mixin (or create a separate but similar one), the css output could include [min-width=\"###px\"] or [max-width=\"###px\"] instead of the media query containing (min-width: ###px) or (max-width: ###px).  Then if you added a new class (e.g. responsive-block) to specify a \"new device\", css selectors could be constructed such that the following would cause the child elements of the responsive-block to only switch to medium-6, once the width of the responsive-block exceeded the medium threshold (e.g. 640px) versus when the device exceeded the medium threshold (e.g. 640px).\n\n``` html\n<div class=\"grid-frame\">\n  <div class=\"grid-block\"></div>\n  <div class=\"grid-block responsive-block\">\n    <div class=\"grid-block small-12 medium-6\"></div>\n    <div class=\"grid-block small-12 medium-6\"></div>\n  </div>\n</div>\n```\n. @gakimball would you be opposed to including the library above? I wouldn't mind getting started on the integration to see if it would work. I'm starting to build out more of my company apps with foundation and having the ability to share responsive directives across apps will be key to fast paced development.\n. Here's an article I came across that better sums up my point: http://ianstormtaylor.com/media-queries-are-a-hack\n\nI'm not sure if there is an optimal element query library out there yet.  The one I proposed using is clearly marked \"proof of concept\", so might not be ready to include in any framework quite yet, though it might be something to base a similar solution of off.  After working on the zf-if-\\* directives and getting the media queries hooked up through a directive, I wonder if there is a similar way that element queries could be achieved.  It might be able to work if you just strip the min/max width from the media query and do a sizing check on the element attached to the directive.  I'll play around with it in the future and see what I come up with.  So long as it's in a directive, the code won't get run if you don't use it, so even a \"use sparingly\" notice in the docs could warn people if the directive doesn't perform well enough, though I don't think it should be an issue since we'd only do the sizing checks on the resize event.  How the responsive sizing behavior will cascades down to child elements is another story.\n. @gakimball I think it did it!  By making some modifications to the **zf-if** directives I added, you can now specify a **zf-if-type** attribute that, if set to \"element\", will perform the query on the element.  Here's an example of how it works:\n\n``` html\n<div class=\"grid-frame wrap align-center\">\n   <div class=\"grid-block small-12\">\n      <span zf-if-small=\"\" zf-if-type=\"element\">SMALL</span>\n      <span zf-if-medium=\"\" zf-if-type=\"element\">MEDIUM</span>\n      <span zf-if-large=\"\" zf-if-type=\"element\">LARGE</span>\n      <span zf-if-small-only=\"\" zf-if-type=\"element\">SMALL ONLY</span>\n      <span zf-if-medium-only=\"\" zf-if-type=\"element\">MEDIUM ONLY</span>\n      <span zf-if-large-only=\"\" zf-if-type=\"element\">LARGE ONLY</span>\n      <span zf-if-not-small=\"\" zf-if-type=\"element\">NOT SMALL</span>\n      <span zf-if-not-medium=\"\" zf-if-type=\"element\">NOT ONLY</span>\n      <span zf-if-not-large=\"\" zf-if-type=\"element\">NOT ONLY</span>\n   </div>\n   <div class=\"grid-block small-6\">\n      <span zf-if-small=\"\" zf-if-type=\"element\">SMALL</span>\n      <span zf-if-medium=\"\" zf-if-type=\"element\">MEDIUM</span>\n      <span zf-if-large=\"\" zf-if-type=\"element\">LARGE</span>\n      <span zf-if-small-only=\"\" zf-if-type=\"element\">SMALL ONLY</span>\n      <span zf-if-medium-only=\"\" zf-if-type=\"element\">MEDIUM ONLY</span>\n      <span zf-if-large-only=\"\" zf-if-type=\"element\">LARGE ONLY</span>\n      <span zf-if-not-small=\"\" zf-if-type=\"element\">NOT SMALL</span>\n      <span zf-if-not-medium=\"\" zf-if-type=\"element\">NOT ONLY</span>\n      <span zf-if-not-large=\"\" zf-if-type=\"element\">NOT ONLY</span>\n   </div>\n</div>\n```\n\nWhen resizing your browser, the set of **zf-if-**\\* child elements under the **grid-block.small-12** will perform element queries that result in the same outcome as running media queries since that element takes up the entire width of the screen.  The set of **zf-if-**\\* child elements under the **grid-block.small-6** element will show different results as the queries are run against the element which is half the size of the device.\n\nng-hide/ng-show style directives are not needed for media queries since that is hooked up through CSS, however, ng-hide/ng-show style directives would be needed for element queries.  Using the template for the **zf-if** directives, one could easily create zf-hide/zf-show directives matching all the **zf-if** directives above.  I'd be happy to add those if my changes are accepted.\n. @gakimball Awesome, looking forward to hearing your thoughts on my implementation.  BTW I did some refactoring since that last post.  The attribute to define the query type is now **zf-query-type**.\n. Perhaps this is just my lack of knowledge speaking, but isn't this already achievable by the date and month HTML5 input types?\n. +1\n\nFound a breaking change in 1.0.3 (#477) that would have likely been caught with testing.\n. I currently have code in production that uses this functionality and would really like to consume the 1.0.3 changes, so I need this to be fixed or find an alternate solution.  I need to publish an update tonight, so I'm looking into a fix for this right now.  I'll post back to this thread with my findings.\n. Just found a hotfix.  Adding the **action-sheet-container** class to the element that toggles the actionsheet will allow it to work.  The one caveat is that I have two dropdowns in my titlebar, so if I click the second dropdown trigger while the first actionsheet is displayed, the second actionsheet is displayed as well without hiding the first actionsheet.  This happens regardless of whether I use zf-toggle or zf-hard-toggle.  I'll see if I can fix that, though regardless of what hotfix I come up with, a robust solution to this issue will still be needed.\n. Ok found the final hotfix I'll be using until this gets fixed.  In addition to adding the **action-sheet-container** class, I added a click handler to the dropdown trigger which closes all other dropdowns:\n\n```\nfoundationApi.publish(dropdown, 'close');\n```\n\nNow if you try to click the second dropdown while the first is open, it will close the first and vice versa.  The hotfix doesn't require any changes to the framework, so I'm happy with this for now.\n. @jeaniec please check whether this change conflicts with your changes made by 4b6a3fd70bca6f3c669f4205968ea7ea5e01b992 \n. @jeaniec That's not entirely true (at least as I understand the code, which isn't to say correctly) but as long as the solution you coded up works for dynamically adding of notifications (which at first glance it should) then I'm all good!\n. Good call on the support already existing for FA component selection.  One more thing to add to my backlog.\n. An exposed service property would be exactly what I need for my solution (see below).  Since I'm using ng-if, the element will be shown if angular is not supported as the ng-if attribute will have no effect and thus still show the element.  If angular is supported, the result of the expression will be used and since angular is supported, the expression will have access to the exposed service property.\n\nHere's the overlay solution I used (note that `Modernizr` was added to the scope for this to work):\n\n``` html\n<div class=\"browser-not-supported\" ng-if=\"!Modernizr.flexbox\">\n  <div class=\"error-message\">\n    <p>\n      We're sorry, but your browser does not support all required functionality needed to run our app.\n      Please update your browser by clicking <a href=\"http://www.browsehappy.com\">here</a> or \n      switch to a different device before continuing.  If you're using Internet Explorer, try turning off\n      Compatibility View.\n    </p>\n    <br/>\n    <p>\n      We apologize for the inconvenience.  If you have any questions, please call us at \n      <a href=\"tel:+15555555555\">555-555-5555</a> or email us at \n      <a href=\"mailto:test@test.com\">test@test.com</a>.\n    </p>\n  </div>\n</div>\n```\n\nAnd here's the accompanying SCSS\n\n``` scss\n.browser-not-supported {\n    .error-message {\n        a {\n            color: #fff;\n            font-weight: bold;\n        }\n\n        p, a {\n            font-family: Arial, Helvetica, sans-serif !important;\n        }\n\n        background: $alert-color;\n        color: #fff;\n        padding: 1%;\n        width: 50%;\n        position: absolute;\n        top: 15%;\n        left: 50%;\n        margin: 0 0 0 -25%; /* add negative left margin for half the width to center the div */\n        cursor: default;\n        z-index: 10001;\n        border-radius: 4px;\n        box-shadow: 0 0 5px rgba(0,0,0,0.9);\n    }\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%; \n    width: 100%; \n    z-index: 10000;\n    background: #000; /* fallback */\n    background: rgba(0,0,0,0.75);\n}\n```\n. @gakimball It doesn't appear as though states can be redefined.  I get this error when I tried to define a state with the same name as the front matter:\n\n```\nError: State 'home' is already defined\n```\n\nI think you may be able to extend the states using the [$stateProvider.decorator](http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider) method.  In my case it's just easier for me to remove the front matter and manage the states myself when I need a more complex state, though the decorator may be a solution for @mannyhenri's use case.\n. Related: #477\n. @gakimball I would like to have a panel that is converted into a block still animate as shown in the code for #572.  Would a slight change to this fix be better for allowing that (i.e. make the disabling configurable) or should I stick with the approach I'm going with in #572?  \n\nThe annoying part of the approach I'm taking is that when the panel is a block, I must track the visibility of it using some variable and use ng-if/ng-show/ng-hide to animate it.  It would be nice to be able to simply call `FoundationApi('panel-id', ...)` and have the panel OR block animate in/out.  Otherwise I need to ensure I set the visibility variable to true BEFORE calling `FoundationApi('panel-id', 'open')` or else the panel will not display.  Similarly I must set the visibility to false AFTER the animation out plays on the panel or else the panel will not animate.  The fix for #572 could make this a bit easier, but I would still need to track the visibility of the block in my own code versus using the already existing code provided by the panel directive.\n\nThe one advantage of doing it the way I describe in the issue is that I could use different animations for the panel and block, however, I don't need that.  If someone did want that, a small addition to the panel directive could allow configuring different animations when the element is a panel or block.\n. @gakimball Could you explain the challenges with web apps just for my own understanding?\n. @gakimball Thanks for the breakdown.  I'm not quite sure you need that functionality to implement the swipe/reveal feature I have in mind, though if you do, perhaps you could help me understand.  What I have in mind is that you would swipe in one direction on an element, that element would then move in the direction swiped and stop after a specified distance.  The ability to swipe/reveal is an all or nothing action, so your top element either doesn't move or animates a specified distance and stops.  Under that element is another hidden element which is revealed.  It's basically an off-canvas for a single block.\n. BTW, the link provided in my original post was just to visually demonstrate what I was implying with my feature request and why the feature might be useful.  The link was not meant to provide details in terms of implementation, though I'm glad you provided clarity on the subject for my understanding.\n. I think this can be achieved fairly easily with just one more addition to F4A.  With v1.1 I can make it so that on the click of an element a menu option animates in from the right.  I just need the ability to make it so that on the swipe of the element in a specific direction, the same thing happens as if it were clicked.  I created 4 directives to achieve this: **zf-swipe-left**, **zf-swipe-right**, **zf-swipe-up**, **zf-swipe-down**.  Each directive takes an expression like ng-click and runs the expression when the element is swiped in the specified direction.\n\nHow do I create a PR for this without it combining with my existing PR?\n. @gakimball I'm doing everything on one branch (thus the reason 2e14f63c57e4541f30f62e65d4e0b6ecec68a8f0 was added to #539 instead of its own PR).  I'll move this code over to another branch and submit the PR when I find the time.  Thanks!\n. As alluded to above, are there plans to integrate animations with ng-show or ng-hide?  So far everything I want to use animations on requires using ng-if.\n. @gakimball I started using F4A when it first came out and couldn't get the ng-show or ng-hide animations to work out of the box like I did with ng-if.  The apps I build are used to run my business and being the only developer at my company, I haven't had much time to investigate alternate solutions. Animations are not critical to my apps since I just need them to work and not necessarily be flashy (though that is always a plus).  I'll let you know when I find the time to investigate this issue more in detail.\n\n@Joe-5mith Do you have any examples you can share that showcase ng-show animations not working?  If so, could you create another issue with those details?  I'd do this myself at some point, but I don't foresee being able to get around to it in the near future.\n. @gakimball In your testing of v1.1 and the rework done to animations, did you try using ng-show or ng-hide in any of your tests/examples?  I know this is a lot to ask, but it would be extremely helpful if there was a page in the docs that showed how to integrate the Motion UI into angular, with examples of ng-if, ng-show, ng-hide, ng-repeat, and others if there are more.  Perhaps just integrating some animations into the existing [examples](http://foundation.zurb.com/apps/resources.html) would help to clarify exactly how the Motion UI classes should be used with angular directives.\n. @gakimball Awesome!  Thanks for figuring that out!  Are you thinking that could get into v1.1 or is it too close to your desired deadline?\n. @gakimball If only they were all that easy!  Can't wait to get my hands on v1.1!\n. My original title was correct, this also doesn't work for hide-for-*.  I added the changes to my PR.\n. this will be addressed with https://github.com/base-apps/angular-base-apps/issues/25\n. I agree with @circlingthesun.  I recently switched all the internal messaging in my apps to use the angular pub/sub method as it greatly simplified sending messages and data from one part of the app to another.  One additional benefit of using the angular sub/pub, is that you can broadcast messages to your children elements only as well as emit from your child elements to the parent, which could be useful in some of the foundation components.\n. I think it is possible to come up with a solution for backward compatibility (e.g. turn foundation sub/pub into wrapper for $rootScope $on/$broadcast and internally switch to using only angular sub/pub), however, in agreement with your last statement, it's all throw away work if the framework is converted to angular 2 (which I'm all for!).  Unless there are limitations in the foundation sub/pub that must be fixed to develop certain features, I'm not sure converting to use the angular sub/pub system would be worth the cost.  Having used F4A for awhile now, I rarely use the foundation sub/pub in my JS code as the F4A directives take care of most cases where it's needed, so being required to continue to use the foundation sub/pub in those rare cases isn't a huge deal for me.\n. I got the following directives to work: **zf-if-small**, **zf-if-medium**, **zf-if-large**, **zf-if-portrait**, **zf-if-landscape**, **zf-if-retina**.  I designed it so that as long as there is a named query, a one line change can be made to add a new directive for that query.  I'll get it working with '-only' next.  Stay tuned...\n. **zf-if-small-only**, **zf-if-medium-only**, and **zf-if-large-only** directive have been added\n. **zf-if-not-small**, **zf-if-not-medium**, and **zf-if-not-large** directives have been added\n. idk if I did that PR correctly.  I only wanted to include commit 119b6b4939dc43bca01c09e598dbc5413c9c6d27\n. I used logic similar to that in the sass code for handling of the **only** case.  I get the next media size up and subtract a little from its min-width to get the max-width for the current named query.  Seems to work great, though it assumes at the moment that all queries will have **em** as their units.  \n\nThe robustness of the code needs to be built out as it should be able to handle any units and the logic should ideally match exactly with the sass code.  The logic for determining **only** should probably be moved to the media query service versus inside my directive as it'll be easier to maintain if it's with all the other media query code.\n. Here's how interchange works now:\n\n```\n<zf-interchange>\n  <div media=\"small\">SHOWN ON SMALL ONLY</div>\n  <div media=\"medium\">SHOWN ON MEDIUM ONLY</div>\n  <div media=\"large\">SHOWN ON LARGE ONLY</div>\n</zf-interchange>\n```\n\nHere's how you can achieve the same things with the new directives:\n\n```\n<div zf-if-small-only=\"\">SHOWN ON SMALL ONLY</div>\n<div zf-if-medium-only=\"\">SHOWN ON MEDIUM ONLY</div>\n<div zf-if-large-only=\"\">SHOWN ON LARGE ONLY</div>\n```\n\nHere is a complete list of the added directives which match the [available visibility classes](http://foundation.zurb.com/apps/docs/#!/utilities):\n\n```\n<p zf-if-small=\"\">You are on a small or larger device.</p>\n<p zf-if-medium=\"\">You are on a medium or larger device.</p>\n<p zf-if-large=\"\">You are on a large or larger device.</p>\n<p zf-if-small-only=\"\">You are on a small device.</p>\n<p zf-if-medium-only=\"\">You are on a medium device.</p>\n<p zf-if-large-only=\"\">You are on a large device.</p>\n<p zf-if-landscape=\"\">You are in a landscape orientation.</p>\n<p zf-if-portrait=\"\">You are in a portrait orientation.</p>\n```\n\n+1 Bonus\n\n```\n<p zf-if-retina=\"\">You are on a retina device.</p>\n```\n. More directives!\n\n```\n<p zf-if-not-small=\"\">You are not on small device.</p>\n<p zf-if-not-medium=\"\">You are not on medium device.</p>\n<p zf-if-not-large=\"\">You are not on large device.</p>\n```\n. I had to make some changes to how the zf-if-\\* directives were being compiled.  The existing method was causing exceptions to occur when using it on an element with other directives like ng-transclude.  The updated method will compile the zf-if-\\* directives into a zf-if directive with the appropriate configuration.  The solution was based on this stack overflow post: http://stackoverflow.com/a/19228302\n. I'm not exactly sure how to do this, but 2e14f63c57e4541f30f62e65d4e0b6ecec68a8f0 should be in its own PR.  Is there a way to create two separate PRs at the same time both being from the same branch?\n. I see that swipe close is already hooked up for all notifications.  Unfortunately there doesn't seem to be a way to configure the animation, though it nicely defaults to fadeIn/fadeOut.\n. Yeah you should be able to hook it up the same way as ng-enter and ng-show.  I did that and it worked when I gave a fake class for the out animation in the SCSS, but I didn't take it future as some redesign is needed since you'll have to require another animation class.  As I mentioned in my example, I want to be able to use a different animation for move than in/out as the move animation is along a different axis than the in/out animation.\n. @DAmatheson nice catch!  I've submitted a PR for the fix.\n. One thing to point out here is that this solution does NOT provide a way to make the sizing classes (i.e. _small-#_, _medium-vertical_, _large-horizontal_, etc) work off element queries instead of media queries.  So if you use one of the added directives as an element query and the attached element contains a child grid-block with one of the sizing classes, the sizing of that block is based on the media and not the element.\n\nGetting the sizing classes to work off element queries is the key to getting a truly responsive framework.  I played around with it last night and found a way I can get it so that if you add a specific directive to an element (e.g. _zf-responsive-block_), it can update all child elements within it, so that each of those elements are configured to perform element queries.  The directive recursively travels down the DOM until all elements within the original _zf-responsive-block_ have been configured.  The result of running the element query will cause a class to get added to the element (e.g. _is-small_, _is-medium_, _is-large_).  I now need to figure out how to get the breakpoint mixin to respect these classes so that the media query is not run if an element has one of those classes since the presence of those classes indicate an element query was already run and a media query is not required.\n\nThe above is going to take a lot of effort to get right, so I'll continue that effort in a separate PR (which will be posted once I have something worth sharing).\n. @gakimball Turns out it wasn't too difficult to get the sizing classes to work based off element queries instead of media queries (at least for the use cases I tried).  I included those changes in this PR so that they could be reviewed along with the interchange directives as both rely heavily on the media query service.  Both changes still need some cleaning up as they are hard coded to only work with _small_, _medium_, and _large_ named classes, versus dynamically adjusting to whatever the developer chooses to use as their named breakpoints.  I think the code should also be refactored into different files as everything currently resides in the interchange js and html file.  I'm not sure of the desired workflow for such changes so I'll wait to hear back on your guidelines.\n. @gakimball I've been using the `zf-if-*` directives throughout my code in place of `zf-interchange` and really like how easy it is to specify exactly when to show something based off a media query.  It also removes the extra parent element (e.g. `<div>`) added by `zf-interchange`.  If there is any desire to pull in those changes without element query support, let me know and I can split up the PR.  I've noticed some issues with element queries while playing around with them (specifically that the element query is not rerun in some cases), so it would probably be better left for a 1.3 or 2.0 release since a lot of testing will be required to ensure it's fully working.  I have a future project in mind that would greatly benefit from element queries so I hope I can get that feature stabilized at some point so it can be included in F4A.\n. @gakimball I stabilized the element queries by including this library: https://github.com/sdecima/javascript-detect-element-resize\n. @gakimball thanks for the feedback.  I'll revert that code related to element queries from this PR.\n\nI like the idea of having a string passed in to specify the media queries for all the reasons you called out.  I'll make the necessary changes to the `zf-if`, `zf-hide` and `zf-show` directives.\n. Is this something that could get into the next release or does it need to wait until a major release?\n. @gakimball After making the updates to the directives and integrating them into my existing published app, I noticed an issue with the following markup I had that worked with my old implementation:\n\n``` html\n<div zf-if=\"not large\"/>\n<div zf-if=\"large\"/>\n```\n\nThe `large` will display on large **or larger** screens and the `not large` will show if the device is **not** large.  \n\nThis works great so long as you're on a large or smaller device.  If you go into xlarge, both will end up being displayed.  What I really need is for the `not large` to display if the device is **medium or smaller**.  As you mentioned in one of your comments, the existing interchange mechanism supports this, however, I still would prefer to use the zf-if style, so to accommodate that use case, there needs to be a way to specify that I want something to show up if the device is _____ or smaller.\n\nDo you have any preference on the verbiage used to specify something is _____ or smaller?  Possible solutions for declaring something be shown for large or smaller could be: `<= medium`, `less than or equal to medium`, `medium or smaller`, `< large`, `less than large`, or something else.\n\nAs of now the following verbiage exists.  Placement of `not` and `only` do not matter (i.e. can be before or after named breakpoint):\n`large`: Show for large or larger (shown for large, xlarge, xxlarge)\n`not large`: Show if not large (shown for small, medium, xlarge, xxlarge)\n`large only`: Show if large only (shown for large)\n. I added what I needed to the directives.  I used the \"or smaller\" verbiage, though that can be changed if desired.  I also moved all media query logic out of the directives and into the service for easier reusability.\n. First off, I switched to using F4A for all apps I develop at my company.  In order to make reusing modules across apps easy, I created a single module to store all common app logic and components.  Since I use F4A as the core of my apps, this single module is allowed to also contain front matter to pass through the dynamic routing F4A provides.  An example of this is my shared account module which houses all components for account management and is set up so that it uses the url /account/... for all the states in that module.  Some of the views in that module use front matter to define their states.\n\nI wrote a small shell script which is used to build any of my apps.  That script first builds the shared module then builds the desired app.  The way my build is set up, it requires running the dynamic routing against the shared module code first, then later against the app code.  I needed a way such that I could combine the output of the two runs, thus my proposed PR.\n. I'm wondering maybe a different approach could be used.  Currently a global variable is used to hold the routes and it is used in the config function of the foundation.dynamicRouting module js file.  I think it could be changed so that the module config call is removed from the js file and each run of the dynamic routing plugin produces the following snippet of code:\n\n``` js\nangular.module('foundation.dynamicRouting').config(['FoundationStateProvider',\n  function(FoundationStateProvider) {\n    FoundationStateProvider.registerDynamicRoutes(/* routes */);\n  }\n]);\n```\n\nThis way regardless of how many times one needs to run the plugin, the code outputted is always the same.  It'll also remove the need for a global variable.\n. @AntJanus Yes `fs.appendFile` will write the file if it doesn't exist ([see the docs](https://nodejs.org/api/fs.html#fs_fs_appendfile_filename_data_options_callback)).\n\nThe suggestion in my last comment was not to have the plugin create a module that sets up the routes as that module already exists with **foundation.dynamicRouting**.  The suggestion is to simply have the plugin output code that calls the config method on this existing module versus storing the routes in a global variable and using that variable in the config call in _foundation.dynamicRouting.js_.  This does not require appending to an existing file, though it would change the workflow and require the routes js file(s) be included AFTER the foundation js files, as the routes js file(s) would require the **foundation.dynamicRouting** module to exist.  The code as is in my PR does not require this workflow change since it still uses the global variable.\n. After reviewing the code again, I believe the **append** option I added to the plugin is misleading as the code is now using `fs.appendFile` instead of `fs.writeFile`.  This means that if I pass false for the append option (or don't specify it at all) and the file I provide exists, the file is still going to be appended, however, since the appended code will include the `var` statement, it will act the same as if the file was overridden, but have useless code at the top of it.  Is there any reason to believe someone would want to have an existing routes file overridden versus always appending to it if it exists?  The only thing I could think of is if they don't clear their build output directory and the routes files from a previous build still exists when running the next build.\n. @gakimball sure, I don't mind working on those plugin changes\n. Implements #513\n. @gakimball After playing around with this feature I feel there needs to be a way to configure the directives to allow changing of the threshold and velocity values passed to Hammer.  There are a couple of ways this can be achieved.  First off, default settings should be configured via a provider, not hard coded in the directive, to allow application wide overrides for the swipe directives.  Fine tuning specific uses of the swipe directives can be done via element attributes (**zf-swipe-threshold** and **zf-swipe-velocity**).  In both cases, I'm thinking there needs to be some abstraction so that users don't need to know the exact values to pass to Hammer.  For instance we could allow passing of values **_slow_, _normal_, and _fast_ for zf-swipe-velocity**, which are converted to Hammer values under the hood (similar to how Motion UI abstracts the exact values used in the CSS animations).  Similarly to express distance, we could use **_short_, _normal_, and _far_ for zf-swipe-threshold**.  Both the provider and attribute solutions should allow passing of numerical values that get directly passed to Hammer, in the event the named options don't fit a developer's needs.  The provider can also allow a developer to change the meaning of the string values or add their own.  This way I can change _slow_, _normal_ and _fast_ to fit the needs of my application as well as add _super slow_ and _super fast_ as additional options.\n\nI'll work on the updates above once an interface has been agreed upon.\n. @gakimball Sorry to be a pest, but any thoughts on this feature?  I'd like to finalize the PR so it can be in an upcoming release.\n. @gakimball I wasn't trying to get it into the next release, just something in the future like 1.2 or 1.3.  Do you or your team already have something in mind for this type of feature or can I take it further and implement the things I noted above?\n. @gakimball sounds good, thanks!\n. @gakimball any feedback on this?  I'll implement my ideas above for you and your team to review when you find the time\n. I know you guys are working on 1.1.1 right now so no rush, but when you find the time please provide some feedback on this PR so we can get it stabilized for 1.2.  The code is stable, but the exact values to use for named distances and named velocities need some work (if in fact that ends up being the way the swipe directives are configured).\n. @gakimball Won't this solution still have an issue if trying to use enter/leave/move all on the same element?\n. @gakimball Yes the concern is getting `move`, `enter`, and `leave` all to work on a single element with `ng-repeat`.  As an example, I want the following behavior to be achievable:\n1. **slideInLeft**, which will animate `enter`\n2. **slideOutRight**, which will animate `leave`\n3. **slideMoveUp** (or w/e you want to call it), which will animate `move`\n. @gakimball Hmm, I think slide and fade for sure.  Hinge might be a neat effect and possibly zoom.  Spin might work also, but would probably get annoying.  Is your worry the size of the CSS file?  If so, could you make the output of the classes be based on scss variables in the `_settings.scss` file?  This way you can only output what you need in your app.\n. +1 for the overlayClose change.\n\nThe code needs to be updated to allow passing false for that value.  The if statement should change from:\n\n``` js\nif(config[prop]) {\n  ...\n}\n```\n\nto:\n\n``` js\nif(!angular.isUndefined(config[prop])) {\n  ...\n}\n```\n. @foobarth Couldn't you just change the code you added to this:\n\n``` js\nelement.attr('overlay-close', config[prop] ? 'true' : 'false');\n```\n. A similar change will be needed for #571 as it should not add the dialog class if the config value is `false`\n. @mkrakowski thanks for the tip!  Luckily I had control over the module I was using so I could change the state references to use data.authRequired instead. BTW, in order to get it working I had to use the following notation in my front matter:\n\n```\n---\nname: app.search\nurl: /search\ncontroller: SearchCtrl\ndata: { authRequired: true }\n---\n```\n. +1\n. @gakimball I would prefer to have the same grid size classes as it would make it easier to work with panel <--> block transforms\n. perhaps you could just provide a mixin for the ability to add grid size classes for panels and require those mixins to be used if you want the functionality?\n. I was going to write up another PR for a068352b59e8549152ca4bbeedce8be03e60fd51, however, a fix was required in this PR to get the changes working so I figured I would just combine them.  The latest change adds the ability to provide dynamic icon attributes.  Here's an example of its usage:\n\n``` js\n$scope.actions = [{\n  icon: 'account',\n  iconAttrs: {\n    state: 'login'\n  }\n},{\n  icon: 'account',\n  iconAttrs: {\n    state: 'logout'\n  }\n},{\n  icon: 'chevron',\n  iconAttrs: {\n    direction: 'right'\n  }\n},{\n  icon: 'chevron',\n  iconAttrs: {\n    direction: 'left'\n  }\n}];\n\n// this is just to showcase the dynamic icons working, though a more common case would\n// have some trigger which changes the icon (e.g. once you logout, switch icon to login)\nvar actionNum = 0;\n$scope.action = $scope.actions[0];\n\n$scope.updateAction = function() {\n  $timeout(function() {\n    actionNum++;\n    if (actionNum == $scope.actions.length) {\n      actionNum = 0;\n    }\n    $scope.action = $scope.actions[actionNum];\n    $scope.updateAction();\n  },3000);\n};\n$scope.updateAction();\n```\n\nNow you can use a dynamically updating icon in your view!\n\n``` html\n<img zf-iconic=\"\" dyn-icon=\"action.icon\" dyn-icon-attrs=\"action.iconAttrs\"></img>\n```\n\nThis also works for static icons as shown below (though it would probably make more sense just use to use appropriate 'data-' classes specific to the icon in this case).\n\n``` html\n<img zf-iconic=\"\" icon=\"chevron\" icon-attrs=\"{ 'direction': 'left' }\"></img>\n```\n\nIf you have a static icon, but still want to use the scope to store your icon info, you could also do this:\n\n``` html\n<img zf-iconic=\"\" icon=\"{{ action.icon }}\" icon-attrs=\"{{ action.iconAttrs }}\"></img>\n```\n\nWhile **dyn-icon** and **dyn-icon-attrs** would work in the above case, if you know your icon will never change, the above method is preferred as using dyn-\\* will cause watchers to be set up, which are not needed if the icon never changes.\n. @gakimball Sure no problem, I'll knock that out right now!\n. Yeah I'm fine dropping the first example\n. @gakimball after thinking it over, I think there is an issue with #561 in that it would overwrite any existing classes on the element.  Perhaps switch the `config['class']` prop from being a string to being an array of strings and add all classes provided versus just overwriting the class attribute.\n. @gakimball Sure no problem\n. Still familiarizing myself with git, but I think I did that correctly\n. Just noticed I messed up the merge for the switch statement, fixing now\n. Yeah, tested after merging and works greats.  Docs might need a little cleanup, but framework functionality is good.\n. Any update on this?\n. @gakimball I'm going to look into fixing this issue today, so if you could provide any feedback that would be helpful.\n\nThe whole reason I had to implement what is now the zf-advise feature was due to this issue. I use the zf-advise directive to track the active state of the panel and apply various CSS to the parent containers of the panel when it is open/opening/closing/closed.  I'm basically trying to achieve what the panel grid block should be giving me when it is working properly.\n. @gakimball Yes this is for a vertical grid.  The intended behavior is what I'm after, however, the grid system experiences this bug only when inside a modal.  Let me find a smaller example to showcase my issue.\n. @gakimball Here's a smaller example:\n\n``` html\n<div class=\"grid-block vertical\">\n  <div class=\"grid-content shrink text-center\">\n    <h2>Modal Header</h2>\n  </div>\n  <div class=\"grid-block vertical\">\n    <div class=\"grid-block shrink\" ng-repeat=\"x in [1,2,3,4,5,6,7,8,9,10,11,12,13]\">\n      <div class=\"grid-content\">\n        <p>Content {{ x }}</p>\n      </div>\n    </div>\n  </div>\n  <div class=\"grid-content shrink text-center\">\n    <a class=\"button primary\">Next</a>\n  </div>\n</div>\n```\n\nUsing the above modal template along with `ModalFactory`, the middle `.grid-block.vertical` element is not scrollable as expected.\n. @gakimball Using the exact markup you provided does not work as expected.  Have you tried doing this inside a modal?  All examples I've tried which have scrollable grid elements work as expected on a basic page, but not when inside a modal.\n\nI think I may have found the issue.  The two root elements for a modal are shown below:\n\n``` html\n<div class=\"modal-overlay\" ...>\n  <aside class=\"modal\" ...>\n  </aside>\n</div>\n```\n\nThe `modal` class provides the flex styling as `flex: 0 0 auto`, however, the `aside` element is styled to be `display: block`.  Since the element is being displayed as a block, it is not respecting the flex styling.  If I add the following css, the scrolling behavior works as expected:\n\n``` css\naside.modal {\n  display: flex;\n}\n```\n. @gakimball do you think my proposed change to add `display: flex` to the modal class is acceptable?  I made the change locally in the framework and noticed the example modals in the docs were then being displayed as a horizontal grid.  I'm not sure if there is a non-breaking change that can be made to fix this issue, though if there is please let me know.\n. This hasn't been addressed yet. You'll have to apply the fix yourself with CSS.\n. @gakimball I believe the design of the library doesn't really matter so long as there is a standard API. Integrating the library into angular, react or anything else would be the same has having to integrate a JS library like hammer, iconic or any others that F4A uses. Not everything would need to be converted to pure JS. Some features like tabs don't really make sense to convert the JS code since most of it is framework dependent. The styling would be provided by the SCSS library and animations with the motion UI module.\n. @philippeluickx I recently had to do this with my own project when incorporating [Prism](http://prismjs.com/).  My build is more complex than the one that ships with F4A, however, I took the relevant parts related to copying 3rd party CSS and pasted them below.  No guarantee the code works as is, but should give you enough info to do the same in your project.\n\nFirst I added a new variable to hold raw CSS files like so:\n\n``` js\nvar appCss = [\n    './bower_components/prism/themes/prism.css',\n    './bower_components/prism/plugins/line-numbers/prism-line-numbers.css',\n    './bower_components/prism/plugins/line-highlight/prism-line-highlight.css'\n];\n```\n\nThen I used this new variable in a separate gulp task:\n\n``` js\ngulp.task('css', function() {\n  return gulp.src(appCss)\n    .pipe(gulp.dest('./build/assets/css/'));\n});\n```\n\nFinally I added the new task to be run as part of the existing build task:\n\n``` js\ngulp.task('build', function() {\n  runSequence('clean', 'jshint', ['copy', 'sass', 'css', 'uglify'], 'copy-templates', function() {\n    console.log(\"Successfully built.\");\n  })\n});\n```\n\nThe above does not combine the 3rd party css into the app.css file generated by the `sass task`.  As such, **you'll need to explicitly include the 3rd party css in your index.html file**.  You could easily rewrite the gulp task that combines the app.css with your 3rd party css so you only need to have a single css file referenced in your index.html.  If you did do this, you would have to make sure to run the `css task` AFTER the `sass task`, which could easily be done by changing the location of the `css task` in the `runSequence` call like so:\n\n``` js\ngulp.task('build', function() {\n  runSequence('clean', 'jshint', ['copy', 'sass', 'uglify'], 'css', 'copy-templates', function() {\n    console.log(\"Successfully built.\");\n  })\n});\n```\n. I'm having the same issue with the tabs directive.  A similar issue was observed with the zf-iconic directive (#569) and was resolved with change cce52b4aef7b49ac9d07ff60c85d700ce4fe6af8.  I'm seeing the same root cause in that the directives are not copied to the element, though I'm not sure if it's the same issue.  I think the problem revolves around the usage of transclude in the tabs.  I think a solution similar to the one I used for developing the interchange directives might be needed (https://github.com/zurb/foundation-apps/pull/549/files).  I'll play around with it for awhile and see what I can figure out.\n. The tabs are transclusion hell!  The attribute issue was part, but not the whole story.  The root problem is that all tab trancludes are done during the post link operation on the element.  The post link of an element occurs after all children elements have been post linked.  What this means is, any directives within a tab are being run **before** the raw content is transcluded into the tab causing angular to be unaware that a directive exists within the tab.\n\nAs I mentioned, transferring attributes is another issue with the tabs. This can be fixed similar to cce52b4aef7b49ac9d07ff60c85d700ce4fe6af8, however, it must be noted that if directives are used on the same element as the `zf-tab` directive, the `zf-tab` directive will need to be recompiled after copying the attributes.  If the directives are used in children of the `zf-tab` directive, no recompile will needed as children directives will be compiled **after** the `zf-tab` directive once the tab directives are fixed to transclude the correct data.\n. this issue with be addressed with https://github.com/base-apps/angular-base-apps/issues/24\n. My app uses the ModalFactory to create a modal on the fly when a new level is started.  The modal is opened and closed programmatically as you progress through the level and finally destroyed once the level is completed.  While developing the app I noticed cases when the modal was not being opened or closed when specified.  This fix solves those issues and I haven't experienced any issues since implementing this fix.\n. The answer you're looking for is the [$stateParams service](https://github.com/angular-ui/ui-router/wiki/URL-Routing#stateparams-service).  The link should give you all the info you need regarding how to use the params.\n\nIn your example, the id would be accessible via `$stateParams.id`.  I don't believe the front matter provides a way to access the state params in your scope without wiring it through a controller.  I've seen others speak of a DefaultController which can be extended to add custom behavior, however, if I ever need any specific behavior from my controller I write my own versus extending the DefaultController provided by F4A, so you'd have to get info on how to do that from someone else.\n\nIn short, here is the code you'll need:\n**Front Matter:**\n\n```\n---\nname: inbox.message\nurl: inbox/:id\ncontroller: InboxController\n---\n```\n\n**Controller:**\n\n``` js\nangular.module('application').controller('InboxController', \n  ['$scope', '$stateParams', function($scope, $stateParams) {\n    $scope.msgId = $stateParams.id;\n  }]\n);\n```\n\n**View:**\n\n``` html\nYou're viewing message with id: {{ msgId }}\n```\n. This was fixed with e70eff2d17a5de409e4a58d259c7c8a7e076ee7e.  It'll be in the next release.\n. Posted PR from wrong repo, will close and reopen\n. @imjoeco I noticed you closed this PR but do agree with using $timeout instead of setTimeout.  Should I make those changes in my PR?\n. @imjoeco I combined your changes into #640\n. I included the changes from this PR in #640 when #644 was closed without realizing @imjoeco was planning to open a new PR with the same changes.  I can revert d37786b1c8f39b173f5ef3ef89f3a1bff7b23d7d so that this PR can be merged or you can just accept both PRs as is though this PR has the same changes as d37786b1c8f39b173f5ef3ef89f3a1bff7b23d7d.  \n\n@gakimball Let me know how you want to handle it.\n. @Joe-5mith Have you tried using the ModalFactory (http://foundation.zurb.com/apps/docs/#!/angular-modules)?  If so, are there some feature you're looking for that it's missing?  I use it for all my dynamically generated modals and it seems to work great (some issues aside which are being tracked).\n. @Joe-5mith You can create an angular service to encapsulate the logic for generating a modal (an angular factory would work as well)\n\n``` javascript\nangular.module('mymodule').factory('ModalService', function (ModalFactory) {\n    return {\n      createModalXYZ: createModalXYZ\n    };\n\n   function createModalXYZ() {\n      return new ModalFactory({\n          ...\n      });\n    }\n});\n```\n\nThere are some pending changes for modals that are waiting for the next release of the framework.  One such change was how to configure the classes for a modal pragmatically.  An example was added to the docs for how to use the ModalFactory (https://github.com/zurb/foundation-apps/blob/master/docs/templates/modal.html).  The `class` config property will be available in the next release.\n. Do you have a specific use case?  Not sure if this will help, but you can also attach functions to the modal scope via the contentScope property.  So if you need to do something with the click of a button, you can have the following:\n\n``` javascript\n$scope.foo = \"Bloop!\";\n$scope.bar = \"Blee!\";\nvar config = {\n    id: 'your optional id here',\n    templateUrl: 'path/to/template',\n    contentScope: {\n        foo: $scope.foo,\n        bar: $scope.bar,\n        clicked: function() {\n          // do something with foo and bar\n        }\n    },\n    animationIn: 'slideInFromTop'\n}\n$scope.modal = new ModalFactory(config);\n```\n\nIn your template you can use `ng-click=\"clicked()\"` to trigger the scope method on the click of the button.\n. @zurbchris @valorekhov \n\nI'm going to add similar functionality to the `zf-panel` directive.  I'll add it to other directives that would benefit with this change including the `zf-accordion-item`.\n. I've implemented PR #740 to handle triggering active state messages for components that use the foundation sub/pub system to show/hide components.  Accordions and Tabs do not use the foundation sub/pub system to handle changing active state of elements.  In these cases, two-way binding of `scope.active` would have to be used to be notified of active state changes.  The two-way bound value should be readonly until support is added to the Accordion and Tabs to allow changing active state outside of the directive.\n. BTW in terms of #536, here is a case where using the angular pub/sub would help as it also allows passing data, so we could just fire one event in the `promise.finally` block and pass along the success/error info instead of having to fire specific events for success/error\n. I made the changes necessary for my app in my forked repo: 84fe2e23ece29aa5a90283961af3f609d7b5210a\n\nI realized that having a success/error for each action wasn't going to really help me do what I needed.  Instead what I was really after was knowing the active state of an element once the animation was complete on that element.  So I instead added two new messages **active-true** and **active-false** which are sent once the open/show animation is complete or the close/hide animation is complete, respectively.  Let me know if you want me to work on a PR for integration of these changes.\n. this will be addressed with https://github.com/base-apps/angular-base-apps/issues/25\n. Feel free to submit this PR against the [new fork](https://github.com/base-apps/angular-base-apps)\n. Turns out there was just a bug in my code :/\n. For what it's worth, I've been using F4A with angular 1.4.x in production code for a few months now.  There were a couple problems I had to address in my own code due upgrading angular, but no issues were found in F4A.\n. @kuatsure I use nearly every part of the F4A framework.  It should also be noted that I run a custom build of the framework (https://github.com/fiboacademy/foundation-apps/tree/fibo-master).  Some of my fixes/features have made there way into the F4A master and some haven't.  The forked repo is set to angular 1.4.4, however, my build system is set to use angular 1.4.7 and I haven't noticed any issues.\n. @gakimball that would be best\n. I was able to reproduce this issue in my app using the same markup as in the docs `<input type=\"range\"/>`.  This issue is intermittent as it works sometimes in my app, but more often than not the slider gets stuck and requires refreshing the browser.\n. Appears to be due to another library I'm using not handling mouse events correctly\n. I should mention that if run with angular support enabled, the need for the global variable `foundationRoutes` is removed.  Backwards compatibility is also maintained as angular support is disabled by default.\n. Yes I can get to that at some point\n\nOn Fri, Dec 4, 2015 at 1:35 PM, Geoff Kimball notifications@github.com\nwrote:\n\n> @soumak77 https://github.com/soumak77 Thanks for putting this together\n> :) Could you apply these features to the external Front Router plugin\n> https://github.com/zurb/front-router as well? We won't be dropping the\n> built-in plugin until after 1.2, but new projects are referencing the\n> external plugin.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/pull/704#issuecomment-162088077.\n. I should mention that the optimized css worked on Chrome and Safari for OS X 1.9.5, but did not work for Chrome and Safari for iOS 8.3\n. I started using foundation from the beginning and really love what they did.  I was in the early stages of my company when I decided to go with foundation for apps and now all my apps run on this framework.  It is unfortunate to see the lack of support at this time, however, I foresee being able to do some amazing things with this framework in the future.  Seeing as I am reliant on the framework to maintain my business, I created a [fork](https://github.com/fiboacademy/foundation-apps/tree/fibo-master) where I make necessary updates to the framework to support my needs.  Most of these changes I'm hoping to get merged into foundation for apps once the project picks back up.  Some of which are pending PRs.\n\nWhile it may not be a viable option to use my forked repo in production, you can try it out by adding the following to your bower file:\n`\"foundation-apps\": \"git@github.com:fiboacademy/foundation-apps#fibo-master\"`\n\nThe fork should be a drop-in replacement with no additional configuration needed, though you will need to build from source.\n. I would love to see the following changes in 1.2.  I've been using all these changes in production code for the past 6+ months.  All changes to exposed APIs are backwards compatible:\n- PR #549 - Interchange Directives\n  - `FoundationMQ` service changes\n    - The changes I've made to the `FoundationMQ` service have proven to be quite useful so that I can perform media queries in code as shown below.  The methods use named queries so to allow user defined values.\n      - `FoundationMQ.matchesMediaOnly(\"small\"); // checks if device is small only`\n      - `FoundationMQ.matchesMedia(\"medium\"); // checks if device is medium or higher`\n  - Interchange Directives\n    - I absolutely love how these directives work.  It makes it so simple to tag an element with a specific media query.  It also removes the need for additional DOM elements as is required by the current interchange mechanism `zf-interchange`.\n- PR #730 - Animation Promises \n  - Changes allow chaining animations so they can be performed one after another.  The changes use the `$q` service to handle the promises.\n- PR #704 - Add angular support and multiple runs to dynamic routing gulp plugin\n  - Allows dynamic routing module to be run multiple times by appending to the routes file if it already exists.  File will be created if it doesn't already exist.\n  - Removes the dependency on the global variable `foundationRoutes` when angular support is enabled.  Uses the `angular.module('foundation.dynamicRouting').config()` method to add routes.\n\nThose have proven to be the most useful changes I've made to the framework.  While I think PR #551 (Swipe Directives) is a really promising feature, there is much work to do still to get it working flawlessly, so I wouldn't suggest merging the PR for 1.2. I don't currently use those directives in production code, though I will need to for a product I have to release by September, so by then I'll have all the kinks worked out.\n. @gakimball There aren't any critical bugs that I've seen that I haven't already fixed myself in the framework.  I think for the most part I've created PRs for things I've fixed in the framework along the way.  I'll go through the changes I've committed to my company's forked repo of F4A that we use in production and reply shortly with the changes that haven't made it into the F4A master yet.\n. These are the only two bug fixes I've made that aren't yet in the framework:\n- Check for null scope during SVG injection\n  - https://github.com/fiboacademy/foundation-apps/commit/2acffdc845e4f662c04fa2ad1a0e6f8290e66a4b\n- Check scope and element during modal destroy\n  - https://github.com/fiboacademy/foundation-apps/commit/d6273a97ef299b8600cbe4f5db237aec19620761\n  - there was a discussion as to whether or not these checks were needed when https://github.com/zurb/foundation-apps/pull/645 was merged and it was determined they were not, however, in practice, I've found they are needed\n. In terms of existing issues, it would be nice to see the following resolved:\n- https://github.com/zurb/foundation-apps/issues/430\n  - This is specific for off-canvas, though I've found it would be useful for panels as well.  I simply add the necessary click handlers to other elements in the app so clicking on them cause the panel/off-canvas to close, but it would be nice to see an integrated option so I don't have to worry about which exact elements need the click handlers.  I would like to be able to simply flag the off-canvas/panel component as needing to close when clicked outside.\n- https://github.com/zurb/foundation-apps/issues/484\n  - It would be nice to remove my dependency on `Modernizr` as I'm only using it for F4A support detection.\n- https://github.com/zurb/foundation-apps/issues/578\n  - This is easily solved by adding one line of css in my app, though a solution via a framework css class would be nice\n- https://github.com/zurb/foundation-apps/issues/672\n  - This one is just plain annoying\n- https://github.com/zurb/foundation-apps/issues/699\n  - I had to remove all range sliders in my app due to this issue.  Still can't figure out what exactly is happening.\n- #572 \n  - I ended up getting the functionality I needed, but my solution is a hack at best.\n. @zurbchris Please disregard my comments about that change.  The head of my repo has the same code for modal destroy as F4A master and I haven't experienced any issues.\n. I would like to see https://github.com/zurb/foundation-apps/issues/572 resolved at some point as well.  I ended up getting the functionality I needed, but my solution is a hack at best.\n. This PR didn't get created correctly. I'll create a new branch with the isolated changes.\n. There is one key feature to this PR that I should explain and that is the `FoundationApi.animateAndNotify` method.  This method internally calls `FoundationApi.animate`, which has been updated in this PR to return a promise.  `animateAndNotify` waits on the promise to be completed and then fires off a notification via `FoundationApi.publish` stating whether the component was just activated or deactivated.  \n\n`FoundationApi.animateAndNotify` is not used in the foundation codebase as of this PR.  In my fork, I have replaced all usage of `FoundationApi.animate` in the panels component with `FoundationApi.animateAndNotify`.  This allows me to perform code immediately after the panel has closed or immediately after the panel has opened.\n\nSince `FoundationApi.animateAndNotify` is not used in this PR, it could be removed from the API, however, I would not only suggest keeping the method, but would suggest using it in place of `FoundationApi.animate` for various components (panels being one example).\n. addresses https://github.com/zurb/foundation-apps/issues/674\n. @zurbchris do you plan on adding the anitmateAndNotify to any components so they can alert subscribers when the component has fully opened or fully closed? Perhaps an additional attribute can be added to the directive so these new messages only get sent when enabled.\n. Awesome!  Not sure what else you have planned for this feature, but feel free to change anything I've done to better suit the framework.\n. fix has been made in https://github.com/base-apps/angular-base-apps\n. This has been resolved for ui-sref elements in PR https://github.com/zurb/foundation-apps/pull/736 with change https://github.com/fiboacademy/foundation-apps/commit/8922ec4215c5340bb5b3c8b64a904cb308b01d51.  I'll update the code to check if click originated within an element that has an href tag.\n. The specific code that needs to be updated is https://github.com/fiboacademy/foundation-apps/blob/8922ec4215c5340bb5b3c8b64a904cb308b01d51/js/angular/components/common/common.js#L208-L211\n\nRight now it doesn't call `event.preventDefault()` if the click originated within an element with `ui-sref`.  I'll change that to a list of attributes with `ui-sref` and `href`.  What other attributes should be added to the list to resolve your issue?\n. @zurbchris @gakimball \nLet me know your thoughts on this.  I'll be making these changes in my fork.  I can get a PR submitted today if you provide feedback.\n. I know both show/hide and open/close are used in messages, but which is the preferred standard so the animation messages can use those values?\n. I made this comment on #670, but should include it here for completeness:\n\nAccordions and Tabs do not use the foundation sub/pub system to handle changing active state of elements. In these cases, two-way binding of `scope.active` would have to be used to be notified of active state changes. The two-way bound value should be readonly until support is added to the Accordion and Tabs to support changing to active state outside of the directive.\n. this has been completed in https://github.com/base-apps/angular-base-apps\n. fix has been made in https://github.com/base-apps/angular-base-apps\n. Changes allow grid-block panels to animate properly.  Also adds supports for a `force-animation` attribute on the panel directive (when provided, allows animations to run on large devices).\n. fix has been made in https://github.com/base-apps/angular-base-apps\n. @gakimball\n\nHow heavily is jQuery used in foundation for sites?  Is it unthinkable to try to remove that dependency?\n\nFrom an architecture standpoint, you shouldn't be writing core functionality in angular.  Any components shared between F4S and F4A should be part of a shared core framework.  This core framework should be javascript only with minimal dependencies.  This will enable the framework to be used by ANY javascript framework and not just F4S and F4A (#587).\n\nF4A is already in a predicament with angular in that angular 2.0 is stated to not be backwards compatible with angular 1.0.  A ton of effort will need to be spent migrating the code to work with angular 2.0, so rather than making EVERYTHING angular, now would be a great time to figure out which code is not angular dependent and put that into the core JS framework.  The core JS framework can then be wrapped by F4A to provide an angular solution and wrapped by F4S to provide a jQuery solution.  The core JS framework can also be wrapped by others to provide similar functionality for other common web frameworks.\n. You can do something similar to angular 1.0 (likely the same in 2.0, but haven't looked into it), where they use jqLite and allow for dropping in your own implementation if needed. This allows angular to work with jQuery without having to change any internal functionality as the drop in replacement (jQuery) is a superset of the required framework (jqLite). So if you want to use this new foundation core JS in angular, you could drop in angular.element and the framework should work. You can also drop in jQuery when using it for F4S and it should work as well.\n\nI don't think there is a major issue here so long as the core JS is properly wrapped. So for instance with angular, you'll still want to use directives as much as possible as they are extremely powerful, but you'll need to ensure $scope.digest or $scope.apply is called in the correct locations after DOM manipulation is done via the core JS framework so the directive (and other scopes) reflect the changes.\n. @gakimball @zurbchris \n\nHere's an [interesting article on Angular 2](https://www.airpair.com/angularjs/posts/preparing-for-the-future-of-angularjs) I found that relates directly to this conversation.  I would suggest reading the entire article as it mentions some good points you'll want to keep in mind when developing a plain JS UI framework.  Here are some snippets:\n\n2.3.6 jqLite\n\njQuery has been supported in Angular since day one. That support isn't going away, but Angular will no longer include it's own miniature version (jqLite). It's also in line with how Angular prefers declarative over imperative (as discussed in 2.1.2).\n\n2.1.2 Controllers, providers, and directives\n\nOne of the most common use cases in web development is creating custom pieces of elements on a page, like tabs or buttons with spinners in them. Today the web lacks a good way to separate concerns and easily manipulate the DOM. While things are on their way (see section 2.2) we've had the need for some time.\n\njQuery is great for controlling the DOM in a direct way. We call that an imperative model. To help developers transition to Angular it has supported that way of thinking. But Angular has at the same time tried to give us a more declarative model where we're more concerned with what, rather than how. Data binding is probably the most notable of these features as we can just use our JS data in the HTML, rather than grabbing the element and pushing in the value ourselves.\n. Feel free to submit this PR against the [new fork](https://github.com/base-apps/angular-base-apps)\n. fix has been made in https://github.com/base-apps/angular-base-apps\n. This was incorrectly reported.  I had the markup within a form that was not tagged as `grid-block`, causing issues on iOS.\n. I believe this is addressed with PR https://github.com/zurb/foundation-apps/pull/670, however per [my comments](https://github.com/zurb/foundation-apps/pull/670#issuecomment-162749577), some standardization of how active state is handled should be addressed before making these one off changes.  I'll leave it up to the folks at zurb as to whether or not this advice is taken into consideration.\n. Correct, adding optional two way binding would require checking if the active attribute was set on the element. If so, the code does not need to set scope.active as the initial value was provided by the user. If the active attribute is not set, the code would have to set scope.active = false by default as the active property on the scope will not exist since it was not provided by the user.\n. this will be addressed with https://github.com/base-apps/angular-base-apps/issues/25\n. this issue with be addressed with https://github.com/base-apps/angular-base-apps/issues/24\n. @rafibomb I was thinking you could adjust the padding to account for the 1 px border, however, this is a bit complicated by how foundation uses the button padding\n\n``` sass\n$button-padding: 0.85em 1em !default;\n\n%button {\n   padding: $button-padding;\n   ...\n}\n```\n\nThe `$button-padding` variable allows css shorthand format to be used, thus the value must be parsed to figure out exactly what padding the user has configured for each side.  I found an example of how css shorthand can be parsed in SASS: https://gist.github.com/pixelwhip/8428447\n\nOnce the individual padding values are known for each side, the `calc()` method can be used to adjust the padding by 1px.\n\n``` sass\n@mixin button-style(...) {\n  @if $style == hollow {\n    border: 1px solid $background;\n    padding-top: calc(#{$button-padding-top} - 1px);\n    padding-right: calc(#{$button-padding-right} - 1px);\n    padding-bottom: calc(#{$button-padding-bottom} - 1px);\n    padding-left: calc(#{$button-padding-left} - 1px);\n    ...\n}\n```\n. Perhaps I should have just scrolled a bit lower in the file before writing my comment.  Seems there already exists a method for getting the value for a specific side `get-side($padding, right)`\n. @MiguelMike @rafibomb fixed!\n. will replace with new PR\n. this issue with be addressed with https://github.com/base-apps/angular-base-apps/issues/24\n. Feel free to contribute to the documentation in the [new fork](https://github.com/base-apps/angular-base-apps)\n. @mattgrande I'm not sure if it would help, but I made some changes to how zf-advise works in the framework (https://github.com/zurb/foundation-apps/pull/741).  I've only ever needed to use zf-advise for panels, not modals, so these changes may not fix your issue.\n. fix has been made in https://github.com/base-apps/angular-base-apps\n. ZURB has basically dropped support for this framework and it is now being maintained by the community as https://github.com/base-apps/angular-base-apps.\n\nI've gone through the entire codebase and wrote an unsubscribed method for every subscribe method.  Feel free to run the same analytics against v1.2.5 and create issues as needed.\n. this issue with be addressed with https://github.com/base-apps/angular-base-apps/issues/24\n. fix has been made in https://github.com/base-apps/angular-base-apps\n. Feel free to submit this PR against the [new fork](https://github.com/base-apps/angular-base-apps)\n. It's unfortunate this framework isn't receiving the attention it needs.  My company is heavily invested in Foundation 4 Apps and there is no way of switching away from it. Because of this, I've had to take the initiative of fixing framework related issues myself. A large number of these fixes have been sitting in PRs for months.\n\nIn order to release quality apps, I've had to use a fork of this framework where I can make necessary fixes. That fork is https://github.com/fiboacademy/foundation-apps/tree/fibo-master.  I've been using the framework in production for over a year and really love it, just wish I didn't have to maintain the framework myself.\n. From what I've heard, they are working on a V2 which will integrate with Angular 2 and share styling from Foundation for Sites 6 as @DaSchTour stated.  I completely agree with the approach, but that doesn't mean to abandon V1.  For those like me that are using V1 in production code, it is important that bug fixes are still made to the framework (especially when some of these fixes are already done and just waiting to be merged).\n. Sounds like it's time for the community to take it over?  I'm heavily reliant on the framework and can't give it up, so I'll need to maintain it myself anyway.  The framework is pretty solid for what its worth (after all the bug fixes I've made).\n. I'm all for getting the process started on migrating this framework away from ZURB.  If we're going to maintain an open source version, I wouldn't mind taking that over.  I'm actively working on apps which fully depend on the framework, so I would love to see it get the attention it needs.\n\nI've been maintaining my own [custom build](https://github.com/fiboacademy/foundation-apps/tree/fibo-master) of the framework which is used in all apps I develop at Fibo.  These apps have been running in production for over a year and a half, so I trust this build of the framework far more than the current state of the foundation apps master.  As such, I would highly suggest using this build as the base for the framework going forward.\n\nIn terms of org, we could use the [FiboAcademy](https://github.com/fiboacademy) organization where I maintain my custom build and apps.  I'm fine with whatever name is chosen, though perhaps something with angular would be appropriate, maybe `angular-apps`.  I'm not too keen on changing the naming convention from `zf` to something else.  It would be a real pain for those of us trying to migrate to the new framework.  It would also be annoying for those that start using foundation apps thinking it is still being maintained, then find this new open source version that requires them to change all the code they wrote.  I think a drop in replacement for 1.2 (or as close to it as possible) should be the first version of this new framework.\n. @AntJanus I've fine with a new org, though foundation (or whatever the next iteration becomes) will never be moved away from in the FiboAcademy org.  I've spent the last year and a half building out a custom angular suite on top of foundation which integrates with our backend infrastructure.  All business operations apps have been fully switched over to the new framework as of a couple months ago, so trying to reverse that or go in a different direction would be a vast waste of resources.\n. The fibo-apps framework is in a private repo. You were just looking at the custom build of foundation which is foundation with my pending PRs accepted.\n\nAs for name, I'd prefer base over open.\n. What about angular-base?\n. I was specifically just speaking for the fork name which should always stay angular.  Perhaps something like `base-apps` as you suggested would work for the naming of the org and `angular-base` for the fork.  Foundation for Apps is really just a styling framework at it's core, so I see your point in thinking about other front end frameworks.  We could use the same convention of `-base` for other frameworks like `react-base` and `ember-base`.\n. It would be a good idea to continue with the decoupling of the framework that was started with https://github.com/zurb/front-router and https://github.com/zurb/motion-ui.  This would help move in the direction of enabling other front end frameworks, though angular should be the primary focus for now.\n. If architected properly, the thing that would set this new framework apart from Angular Material, and others, is to enable cross-framework integration.  This way the framework just supports styling and can be leveraged by any javascript framework.  If framework specific logic is needed to power the library, which in most cases it will, a `*-base` repo can be created which provides the integration.\n. The majority of the issues with this framework have been resolved as of v1.2.5 from https://github.com/base-apps/angular-base-apps\n. Similar to https://github.com/zurb/foundation-apps/issues/804\n. will replace with corrected PR\n. fix has been made in https://github.com/base-apps/angular-base-apps\n. fix has been made in https://github.com/base-apps/angular-base-apps\n. The modal overlay close triggers the `deactivate` method to be called on the modal which simply hide the modal.  You'll need to call `destroy` to have the modal removed from the DOM.  If you give your modal a hard-coded ID, you can then subscribe to messages for the modal.  When you get the `close` message, call `modal.destroy()` like in the examples.\n\nBy the way, this repo has been dead for awhile and is now being maintained in https://github.com/base-apps/angular-base-apps.  If you want, you can create a PR to introduce the concept of `overlayDestroy`.  Similar to `overlayClose`, it would cause the modal to close when clicking on the overlay, however, once the animation is completed, the modal would be destroyed.\n. @cisdev739 I added a `destroy-on-close` attribute for modals with https://github.com/base-apps/angular-base-apps/issues/16.  It will be part of the 1.3 release.\n. Feel free to submit this PR against the [new fork](https://github.com/base-apps/angular-base-apps)\n. @HuemanF I believe this is simply due to how the SCSS is structured.  The resulting behavior for grid-block (`flex-flow: row nowrap`) is intended.  If you wish to have `flex-flow: row wrap`, you can use the `wrap` class in combination with the `grid-block` class.  You can review the [docs for grid-block](https://base-apps.github.io/angular-base-apps/#!/grid) to get a better understand of the functionality.\n\nZURB has basically dropped support for this framework and it is now being maintained by the community as https://github.com/base-apps/angular-base-apps.\n. ZURB has unofficially dropped support for this framework and it is now being maintained by the community.  The docs can be found here: https://base-apps.github.io/angular-base-apps\n. @Seb- Yes the fork is production ready.  I use it for all apps in my company.  I even have them running the v2.0 prerelease without issues.\n. @kobekoto I suggest trying out Angular Base Apps if you want to use this framework (see https://github.com/zurb/foundation-apps/issues/829 for more info)\n. these issues should be resolved as of v1.2.5 of the community fork for this repo: https://github.com/base-apps/angular-base-apps\n\n@FezVrasta if you want to play around with popper.js integration then feel free to submit a PR against the fork above\n. @gakimball Just as curiosity, what are those three frameworks?  Foundation for Apps, Foundation for Sites, and ...?\n. @gakimball Oh ok, yeah I new about Ink and the rebranding to Foundation for Emails, but didn't realize there was a need for a CLI for that framework.  I thought it was just templates you copied and manually injected whatever content you needed into the provided areas.  I haven't used F4E yet (which may be clear by my last statement), though that is definitely something I want to get started with as my company emails need some much loving care.\n. @hshepherd @vincentmorneau Not sure if either of you have solved this already, but I encountered the same issue and resolved it by adding SCSS similar to what's shown below:\n\n``` scss\n#my-actionsheet .action-sheet {\n  transform: translateX(-70px) translateY(107px);\n\n  &::before, &::after {\n    left: 10%;\n  }\n}\n```\n\nCouple things to note:\n1. Transform will only move the body of the action sheet.  The other styling will move the attached arrow.\n2. The exact numbers (-70px, 107px, 10%) were determine through trial and error, and based on personal preference\n3. This fix is very fragile and will likely need to be updated if ANY changes are made to the action sheet (e.g. adding more options) or if changes are made to the title bar.\n\nLive Example: https://parents.fiboart.com (click Art or Coding at top left)\n. +1\n. @gakimball I believe the same solution used for auto-closing of action sheets when clicked outside should also work for closing of off-canvas and panels.  Perhaps refactor the code into a reusable service to be used for any component?\n. @gakimball did you mean `zfClose`?  That could be used on the body with an element ID and if any click event reaches the body, it would be closed.  There are a couple problems with that approach: \n1. You cannot specify more than one element to close, thus you cannot close the off-canvas AND panels with this method.\n2. All click events that open/toggle a component must now trap the event or else it'll bubble up to the body and close the component.\n3. Any click event inside the component must be trapped or it'll cause the component to close (for same reason as 2).\n4. The body element is usually defined in an index.html, where as all other components are defined else where (i.e. in views).  Forcing a declaration on the body would cause a developer to have to know the id for every component used in their app, which becomes difficult once you start developing a large application.\n\nI prefer the approach used by the actionsheets wherein the developer does not need to set anything up for the auto-close functionality to work as it's just part of the component (solves 4).  It's basically doing the same thing as `zfClose` would be doing if added to the body, but works for multiple elements (solves 1).  The slight difference is that the actionsheet logic checks to see if the click was within the actionsheet, and if so, it doesn't close the actionsheet (solves 3).  This logic seems useful for off-canvas and panels as well.  It also checks to make sure that the click didn't originate from an element used to open or close the component (solves 2).  With some refactoring, the code used for actionsheets could also be used for off-canvas and panels.  Any opposition to taking this approach?\n\nThe only thing I could think of for why this approach may not work is if a developer didn't want the auto-close functionality for that component.  In this case an attribute could be added to the element which is read during the compile phase of the directive.  If the attribute is present, the auto-close functionality is disabled, otherwise it is enabled by default.\n\nI'll take a go at the PR since it should be fairly straightforward.\n. I was searching for zfClosable instead of zf-closable in the code base.  Let me see what can be done with `zf-closable`.\n. Ok, so I think `FoundationApi.closeActiveElements()` (the code that makes use of the `zf-closable` attributes) could be used to solve this issue.  At its most basic, one could expose `FoundationApi` in the scope and add the following to an element: `ng-click=\"FoundationApi.closeActiveElements()\"`.  Adding that to the body element would solve this issue.  This approach will still cause the component to close if the click originated from inside the component.  To solve this, one could add `ng-click=\"$event.stopPropagation()\"` to their component.  I tested this with off-canvas and the off-canvas closes when clicked outside, but stays open when clicked inside.  I don't have any panels in my app to test this with, but I'm sure it would work just the same.\n\nI'm not a huge fan of this approach as it will not work for everyone.  From what I can tell, F4A is being designed so that it could be used by anyone, regardless of how little or how much they know about angular.  The solution above will require the FoundationApi to be exposed in the scope, which will require defining your own angular code (unless this can be done in the front matter, which I'm not sure it should be).  To solve this, a reference to the FoundationApi service could be added to the $rootScope on loading of foundation so that the following could be used `ng-click=\"$root.$foundation.closeActiveElements()\"` instead of `ng-click=\"FoundationApi.closeActiveElements()\"`.  While most of the time adding something to the $rootScope is a bad design pattern, I think this will be ok as the foundation api is a core service that should be available everywhere.\n. After thinking about it, I still would prefer this feature to work out of the box with no additional code required, meaning the code to resolve this issue should reside inside the foundation code base, versus requiring additional angular directives to use this feature.  Perhaps foundation could add a default click handler to the body which always calls `closeActiveElements`.  The click handler could be smart and check where the click originated from and not close a component if the click was inside it.  If a developer doesn't want their component auto-closed when clicked outside, they could add an attribute `zf-auto-close-ignore` or something of the like, so that the component is not closed by the body click handler, but would still be closed by usage of the `zf-hard-toggle` directive (which internally calls `closeActiveElements`).\n. @Martinspire You can implement this feature my adding the following attribute to any element you want to have close the off canvas (in my example the off canvas has id **app-menu**).\n\n`ng-click=\"closeAppMenu()\"`\n\nWhere **closeAppMenu** is the following function on the scope.  You might not need the $timeout anymore.  It was originally added before some of the $$phase bugs were fixed in the framework.\n\n``` js\n$scope.closeAppMenu = function() {\n  $timeout(function() {\n    FoundationApi.publish('app-menu', 'close');\n  });\n};\n```\n\nNote that I did not add the click handler to the body as the body also contains the off canvas menu.  I added the click handler to the root element containing my views so that clicking inside the off canvas does not lose the menu.  In some cases where I need the menu to close when I click a link inside the off canvas, I've added the following element to the link:\n\n`zf-toggle=\"app-menu\"`\n. ZURB has basically dropped support for this framework and it is now being developed by the community here: https://github.com/base-apps/angular-base-apps\n\nFeel free to submit a PR to improve the documentation\n. I did forget to comment on one other thing.  There are changes made to the default app.js file which are to highlight the changes required if using HTML5 mode.  Those changes can be commented out or reverted.\n. I've come to realized that it may be best for the iconic directive to simply call $compile at all times after injecting the svg.  The reasoning is because $compile is required for the dynSrc attribute to operate properly.  Currently the dynSrc attribute is evaluated in the prelinking phase and sets the source.  If the interoplated dynSrc attribute were to change, the change is not propagated to the iconic directive and the icon is not updated.  In order for the icon to update after the source change, the directive needs to be recompiled using the original content prior to first compile.  I'm working on a solution now that I'll share once complete.\n\nIf the above change is made and $compile is already being called in the directive, then IMO $compile should be called after injecting the svg to make the solution complete.\n. I just added the changes required to make the iconic directive truly dynamic.  The directive is now recompiled when dynSrc is updated.  I've also added an additional attribute, dynIcon, which provides the same functionality as data-icon, but dynamically recompiles upon changes.\n. +1 for this feature.  I've found myself needing it a time or two.\n. @gakimball would you or someone on your team be able to look over this request to see if it's possible?  I just did some research and stumbled across this library: https://github.com/marcj/css-element-queries.  I think if that library were integrated into the foundation-apps framework, I could achieve my goal.  I haven't mastered sass yet, so I'm not sure if it'll work by just looking at the code, but I think if the code was updated to extend the breakpoint mixin (or create a separate but similar one), the css output could include [min-width=\"###px\"] or [max-width=\"###px\"] instead of the media query containing (min-width: ###px) or (max-width: ###px).  Then if you added a new class (e.g. responsive-block) to specify a \"new device\", css selectors could be constructed such that the following would cause the child elements of the responsive-block to only switch to medium-6, once the width of the responsive-block exceeded the medium threshold (e.g. 640px) versus when the device exceeded the medium threshold (e.g. 640px).\n\n``` html\n<div class=\"grid-frame\">\n  <div class=\"grid-block\"></div>\n  <div class=\"grid-block responsive-block\">\n    <div class=\"grid-block small-12 medium-6\"></div>\n    <div class=\"grid-block small-12 medium-6\"></div>\n  </div>\n</div>\n```\n. @gakimball would you be opposed to including the library above? I wouldn't mind getting started on the integration to see if it would work. I'm starting to build out more of my company apps with foundation and having the ability to share responsive directives across apps will be key to fast paced development.\n. Here's an article I came across that better sums up my point: http://ianstormtaylor.com/media-queries-are-a-hack\n\nI'm not sure if there is an optimal element query library out there yet.  The one I proposed using is clearly marked \"proof of concept\", so might not be ready to include in any framework quite yet, though it might be something to base a similar solution of off.  After working on the zf-if-\\* directives and getting the media queries hooked up through a directive, I wonder if there is a similar way that element queries could be achieved.  It might be able to work if you just strip the min/max width from the media query and do a sizing check on the element attached to the directive.  I'll play around with it in the future and see what I come up with.  So long as it's in a directive, the code won't get run if you don't use it, so even a \"use sparingly\" notice in the docs could warn people if the directive doesn't perform well enough, though I don't think it should be an issue since we'd only do the sizing checks on the resize event.  How the responsive sizing behavior will cascades down to child elements is another story.\n. @gakimball I think it did it!  By making some modifications to the **zf-if** directives I added, you can now specify a **zf-if-type** attribute that, if set to \"element\", will perform the query on the element.  Here's an example of how it works:\n\n``` html\n<div class=\"grid-frame wrap align-center\">\n   <div class=\"grid-block small-12\">\n      <span zf-if-small=\"\" zf-if-type=\"element\">SMALL</span>\n      <span zf-if-medium=\"\" zf-if-type=\"element\">MEDIUM</span>\n      <span zf-if-large=\"\" zf-if-type=\"element\">LARGE</span>\n      <span zf-if-small-only=\"\" zf-if-type=\"element\">SMALL ONLY</span>\n      <span zf-if-medium-only=\"\" zf-if-type=\"element\">MEDIUM ONLY</span>\n      <span zf-if-large-only=\"\" zf-if-type=\"element\">LARGE ONLY</span>\n      <span zf-if-not-small=\"\" zf-if-type=\"element\">NOT SMALL</span>\n      <span zf-if-not-medium=\"\" zf-if-type=\"element\">NOT ONLY</span>\n      <span zf-if-not-large=\"\" zf-if-type=\"element\">NOT ONLY</span>\n   </div>\n   <div class=\"grid-block small-6\">\n      <span zf-if-small=\"\" zf-if-type=\"element\">SMALL</span>\n      <span zf-if-medium=\"\" zf-if-type=\"element\">MEDIUM</span>\n      <span zf-if-large=\"\" zf-if-type=\"element\">LARGE</span>\n      <span zf-if-small-only=\"\" zf-if-type=\"element\">SMALL ONLY</span>\n      <span zf-if-medium-only=\"\" zf-if-type=\"element\">MEDIUM ONLY</span>\n      <span zf-if-large-only=\"\" zf-if-type=\"element\">LARGE ONLY</span>\n      <span zf-if-not-small=\"\" zf-if-type=\"element\">NOT SMALL</span>\n      <span zf-if-not-medium=\"\" zf-if-type=\"element\">NOT ONLY</span>\n      <span zf-if-not-large=\"\" zf-if-type=\"element\">NOT ONLY</span>\n   </div>\n</div>\n```\n\nWhen resizing your browser, the set of **zf-if-**\\* child elements under the **grid-block.small-12** will perform element queries that result in the same outcome as running media queries since that element takes up the entire width of the screen.  The set of **zf-if-**\\* child elements under the **grid-block.small-6** element will show different results as the queries are run against the element which is half the size of the device.\n\nng-hide/ng-show style directives are not needed for media queries since that is hooked up through CSS, however, ng-hide/ng-show style directives would be needed for element queries.  Using the template for the **zf-if** directives, one could easily create zf-hide/zf-show directives matching all the **zf-if** directives above.  I'd be happy to add those if my changes are accepted.\n. @gakimball Awesome, looking forward to hearing your thoughts on my implementation.  BTW I did some refactoring since that last post.  The attribute to define the query type is now **zf-query-type**.\n. Perhaps this is just my lack of knowledge speaking, but isn't this already achievable by the date and month HTML5 input types?\n. +1\n\nFound a breaking change in 1.0.3 (#477) that would have likely been caught with testing.\n. I currently have code in production that uses this functionality and would really like to consume the 1.0.3 changes, so I need this to be fixed or find an alternate solution.  I need to publish an update tonight, so I'm looking into a fix for this right now.  I'll post back to this thread with my findings.\n. Just found a hotfix.  Adding the **action-sheet-container** class to the element that toggles the actionsheet will allow it to work.  The one caveat is that I have two dropdowns in my titlebar, so if I click the second dropdown trigger while the first actionsheet is displayed, the second actionsheet is displayed as well without hiding the first actionsheet.  This happens regardless of whether I use zf-toggle or zf-hard-toggle.  I'll see if I can fix that, though regardless of what hotfix I come up with, a robust solution to this issue will still be needed.\n. Ok found the final hotfix I'll be using until this gets fixed.  In addition to adding the **action-sheet-container** class, I added a click handler to the dropdown trigger which closes all other dropdowns:\n\n```\nfoundationApi.publish(dropdown, 'close');\n```\n\nNow if you try to click the second dropdown while the first is open, it will close the first and vice versa.  The hotfix doesn't require any changes to the framework, so I'm happy with this for now.\n. @jeaniec please check whether this change conflicts with your changes made by 4b6a3fd70bca6f3c669f4205968ea7ea5e01b992 \n. @jeaniec That's not entirely true (at least as I understand the code, which isn't to say correctly) but as long as the solution you coded up works for dynamically adding of notifications (which at first glance it should) then I'm all good!\n. Good call on the support already existing for FA component selection.  One more thing to add to my backlog.\n. An exposed service property would be exactly what I need for my solution (see below).  Since I'm using ng-if, the element will be shown if angular is not supported as the ng-if attribute will have no effect and thus still show the element.  If angular is supported, the result of the expression will be used and since angular is supported, the expression will have access to the exposed service property.\n\nHere's the overlay solution I used (note that `Modernizr` was added to the scope for this to work):\n\n``` html\n<div class=\"browser-not-supported\" ng-if=\"!Modernizr.flexbox\">\n  <div class=\"error-message\">\n    <p>\n      We're sorry, but your browser does not support all required functionality needed to run our app.\n      Please update your browser by clicking <a href=\"http://www.browsehappy.com\">here</a> or \n      switch to a different device before continuing.  If you're using Internet Explorer, try turning off\n      Compatibility View.\n    </p>\n    <br/>\n    <p>\n      We apologize for the inconvenience.  If you have any questions, please call us at \n      <a href=\"tel:+15555555555\">555-555-5555</a> or email us at \n      <a href=\"mailto:test@test.com\">test@test.com</a>.\n    </p>\n  </div>\n</div>\n```\n\nAnd here's the accompanying SCSS\n\n``` scss\n.browser-not-supported {\n    .error-message {\n        a {\n            color: #fff;\n            font-weight: bold;\n        }\n\n        p, a {\n            font-family: Arial, Helvetica, sans-serif !important;\n        }\n\n        background: $alert-color;\n        color: #fff;\n        padding: 1%;\n        width: 50%;\n        position: absolute;\n        top: 15%;\n        left: 50%;\n        margin: 0 0 0 -25%; /* add negative left margin for half the width to center the div */\n        cursor: default;\n        z-index: 10001;\n        border-radius: 4px;\n        box-shadow: 0 0 5px rgba(0,0,0,0.9);\n    }\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%; \n    width: 100%; \n    z-index: 10000;\n    background: #000; /* fallback */\n    background: rgba(0,0,0,0.75);\n}\n```\n. @gakimball It doesn't appear as though states can be redefined.  I get this error when I tried to define a state with the same name as the front matter:\n\n```\nError: State 'home' is already defined\n```\n\nI think you may be able to extend the states using the [$stateProvider.decorator](http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider) method.  In my case it's just easier for me to remove the front matter and manage the states myself when I need a more complex state, though the decorator may be a solution for @mannyhenri's use case.\n. Related: #477\n. @gakimball I would like to have a panel that is converted into a block still animate as shown in the code for #572.  Would a slight change to this fix be better for allowing that (i.e. make the disabling configurable) or should I stick with the approach I'm going with in #572?  \n\nThe annoying part of the approach I'm taking is that when the panel is a block, I must track the visibility of it using some variable and use ng-if/ng-show/ng-hide to animate it.  It would be nice to be able to simply call `FoundationApi('panel-id', ...)` and have the panel OR block animate in/out.  Otherwise I need to ensure I set the visibility variable to true BEFORE calling `FoundationApi('panel-id', 'open')` or else the panel will not display.  Similarly I must set the visibility to false AFTER the animation out plays on the panel or else the panel will not animate.  The fix for #572 could make this a bit easier, but I would still need to track the visibility of the block in my own code versus using the already existing code provided by the panel directive.\n\nThe one advantage of doing it the way I describe in the issue is that I could use different animations for the panel and block, however, I don't need that.  If someone did want that, a small addition to the panel directive could allow configuring different animations when the element is a panel or block.\n. @gakimball Could you explain the challenges with web apps just for my own understanding?\n. @gakimball Thanks for the breakdown.  I'm not quite sure you need that functionality to implement the swipe/reveal feature I have in mind, though if you do, perhaps you could help me understand.  What I have in mind is that you would swipe in one direction on an element, that element would then move in the direction swiped and stop after a specified distance.  The ability to swipe/reveal is an all or nothing action, so your top element either doesn't move or animates a specified distance and stops.  Under that element is another hidden element which is revealed.  It's basically an off-canvas for a single block.\n. BTW, the link provided in my original post was just to visually demonstrate what I was implying with my feature request and why the feature might be useful.  The link was not meant to provide details in terms of implementation, though I'm glad you provided clarity on the subject for my understanding.\n. I think this can be achieved fairly easily with just one more addition to F4A.  With v1.1 I can make it so that on the click of an element a menu option animates in from the right.  I just need the ability to make it so that on the swipe of the element in a specific direction, the same thing happens as if it were clicked.  I created 4 directives to achieve this: **zf-swipe-left**, **zf-swipe-right**, **zf-swipe-up**, **zf-swipe-down**.  Each directive takes an expression like ng-click and runs the expression when the element is swiped in the specified direction.\n\nHow do I create a PR for this without it combining with my existing PR?\n. @gakimball I'm doing everything on one branch (thus the reason 2e14f63c57e4541f30f62e65d4e0b6ecec68a8f0 was added to #539 instead of its own PR).  I'll move this code over to another branch and submit the PR when I find the time.  Thanks!\n. As alluded to above, are there plans to integrate animations with ng-show or ng-hide?  So far everything I want to use animations on requires using ng-if.\n. @gakimball I started using F4A when it first came out and couldn't get the ng-show or ng-hide animations to work out of the box like I did with ng-if.  The apps I build are used to run my business and being the only developer at my company, I haven't had much time to investigate alternate solutions. Animations are not critical to my apps since I just need them to work and not necessarily be flashy (though that is always a plus).  I'll let you know when I find the time to investigate this issue more in detail.\n\n@Joe-5mith Do you have any examples you can share that showcase ng-show animations not working?  If so, could you create another issue with those details?  I'd do this myself at some point, but I don't foresee being able to get around to it in the near future.\n. @gakimball In your testing of v1.1 and the rework done to animations, did you try using ng-show or ng-hide in any of your tests/examples?  I know this is a lot to ask, but it would be extremely helpful if there was a page in the docs that showed how to integrate the Motion UI into angular, with examples of ng-if, ng-show, ng-hide, ng-repeat, and others if there are more.  Perhaps just integrating some animations into the existing [examples](http://foundation.zurb.com/apps/resources.html) would help to clarify exactly how the Motion UI classes should be used with angular directives.\n. @gakimball Awesome!  Thanks for figuring that out!  Are you thinking that could get into v1.1 or is it too close to your desired deadline?\n. @gakimball If only they were all that easy!  Can't wait to get my hands on v1.1!\n. My original title was correct, this also doesn't work for hide-for-*.  I added the changes to my PR.\n. this will be addressed with https://github.com/base-apps/angular-base-apps/issues/25\n. I agree with @circlingthesun.  I recently switched all the internal messaging in my apps to use the angular pub/sub method as it greatly simplified sending messages and data from one part of the app to another.  One additional benefit of using the angular sub/pub, is that you can broadcast messages to your children elements only as well as emit from your child elements to the parent, which could be useful in some of the foundation components.\n. I think it is possible to come up with a solution for backward compatibility (e.g. turn foundation sub/pub into wrapper for $rootScope $on/$broadcast and internally switch to using only angular sub/pub), however, in agreement with your last statement, it's all throw away work if the framework is converted to angular 2 (which I'm all for!).  Unless there are limitations in the foundation sub/pub that must be fixed to develop certain features, I'm not sure converting to use the angular sub/pub system would be worth the cost.  Having used F4A for awhile now, I rarely use the foundation sub/pub in my JS code as the F4A directives take care of most cases where it's needed, so being required to continue to use the foundation sub/pub in those rare cases isn't a huge deal for me.\n. I got the following directives to work: **zf-if-small**, **zf-if-medium**, **zf-if-large**, **zf-if-portrait**, **zf-if-landscape**, **zf-if-retina**.  I designed it so that as long as there is a named query, a one line change can be made to add a new directive for that query.  I'll get it working with '-only' next.  Stay tuned...\n. **zf-if-small-only**, **zf-if-medium-only**, and **zf-if-large-only** directive have been added\n. **zf-if-not-small**, **zf-if-not-medium**, and **zf-if-not-large** directives have been added\n. idk if I did that PR correctly.  I only wanted to include commit 119b6b4939dc43bca01c09e598dbc5413c9c6d27\n. I used logic similar to that in the sass code for handling of the **only** case.  I get the next media size up and subtract a little from its min-width to get the max-width for the current named query.  Seems to work great, though it assumes at the moment that all queries will have **em** as their units.  \n\nThe robustness of the code needs to be built out as it should be able to handle any units and the logic should ideally match exactly with the sass code.  The logic for determining **only** should probably be moved to the media query service versus inside my directive as it'll be easier to maintain if it's with all the other media query code.\n. Here's how interchange works now:\n\n```\n<zf-interchange>\n  <div media=\"small\">SHOWN ON SMALL ONLY</div>\n  <div media=\"medium\">SHOWN ON MEDIUM ONLY</div>\n  <div media=\"large\">SHOWN ON LARGE ONLY</div>\n</zf-interchange>\n```\n\nHere's how you can achieve the same things with the new directives:\n\n```\n<div zf-if-small-only=\"\">SHOWN ON SMALL ONLY</div>\n<div zf-if-medium-only=\"\">SHOWN ON MEDIUM ONLY</div>\n<div zf-if-large-only=\"\">SHOWN ON LARGE ONLY</div>\n```\n\nHere is a complete list of the added directives which match the [available visibility classes](http://foundation.zurb.com/apps/docs/#!/utilities):\n\n```\n<p zf-if-small=\"\">You are on a small or larger device.</p>\n<p zf-if-medium=\"\">You are on a medium or larger device.</p>\n<p zf-if-large=\"\">You are on a large or larger device.</p>\n<p zf-if-small-only=\"\">You are on a small device.</p>\n<p zf-if-medium-only=\"\">You are on a medium device.</p>\n<p zf-if-large-only=\"\">You are on a large device.</p>\n<p zf-if-landscape=\"\">You are in a landscape orientation.</p>\n<p zf-if-portrait=\"\">You are in a portrait orientation.</p>\n```\n\n+1 Bonus\n\n```\n<p zf-if-retina=\"\">You are on a retina device.</p>\n```\n. More directives!\n\n```\n<p zf-if-not-small=\"\">You are not on small device.</p>\n<p zf-if-not-medium=\"\">You are not on medium device.</p>\n<p zf-if-not-large=\"\">You are not on large device.</p>\n```\n. I had to make some changes to how the zf-if-\\* directives were being compiled.  The existing method was causing exceptions to occur when using it on an element with other directives like ng-transclude.  The updated method will compile the zf-if-\\* directives into a zf-if directive with the appropriate configuration.  The solution was based on this stack overflow post: http://stackoverflow.com/a/19228302\n. I'm not exactly sure how to do this, but 2e14f63c57e4541f30f62e65d4e0b6ecec68a8f0 should be in its own PR.  Is there a way to create two separate PRs at the same time both being from the same branch?\n. I see that swipe close is already hooked up for all notifications.  Unfortunately there doesn't seem to be a way to configure the animation, though it nicely defaults to fadeIn/fadeOut.\n. Yeah you should be able to hook it up the same way as ng-enter and ng-show.  I did that and it worked when I gave a fake class for the out animation in the SCSS, but I didn't take it future as some redesign is needed since you'll have to require another animation class.  As I mentioned in my example, I want to be able to use a different animation for move than in/out as the move animation is along a different axis than the in/out animation.\n. @DAmatheson nice catch!  I've submitted a PR for the fix.\n. One thing to point out here is that this solution does NOT provide a way to make the sizing classes (i.e. _small-#_, _medium-vertical_, _large-horizontal_, etc) work off element queries instead of media queries.  So if you use one of the added directives as an element query and the attached element contains a child grid-block with one of the sizing classes, the sizing of that block is based on the media and not the element.\n\nGetting the sizing classes to work off element queries is the key to getting a truly responsive framework.  I played around with it last night and found a way I can get it so that if you add a specific directive to an element (e.g. _zf-responsive-block_), it can update all child elements within it, so that each of those elements are configured to perform element queries.  The directive recursively travels down the DOM until all elements within the original _zf-responsive-block_ have been configured.  The result of running the element query will cause a class to get added to the element (e.g. _is-small_, _is-medium_, _is-large_).  I now need to figure out how to get the breakpoint mixin to respect these classes so that the media query is not run if an element has one of those classes since the presence of those classes indicate an element query was already run and a media query is not required.\n\nThe above is going to take a lot of effort to get right, so I'll continue that effort in a separate PR (which will be posted once I have something worth sharing).\n. @gakimball Turns out it wasn't too difficult to get the sizing classes to work based off element queries instead of media queries (at least for the use cases I tried).  I included those changes in this PR so that they could be reviewed along with the interchange directives as both rely heavily on the media query service.  Both changes still need some cleaning up as they are hard coded to only work with _small_, _medium_, and _large_ named classes, versus dynamically adjusting to whatever the developer chooses to use as their named breakpoints.  I think the code should also be refactored into different files as everything currently resides in the interchange js and html file.  I'm not sure of the desired workflow for such changes so I'll wait to hear back on your guidelines.\n. @gakimball I've been using the `zf-if-*` directives throughout my code in place of `zf-interchange` and really like how easy it is to specify exactly when to show something based off a media query.  It also removes the extra parent element (e.g. `<div>`) added by `zf-interchange`.  If there is any desire to pull in those changes without element query support, let me know and I can split up the PR.  I've noticed some issues with element queries while playing around with them (specifically that the element query is not rerun in some cases), so it would probably be better left for a 1.3 or 2.0 release since a lot of testing will be required to ensure it's fully working.  I have a future project in mind that would greatly benefit from element queries so I hope I can get that feature stabilized at some point so it can be included in F4A.\n. @gakimball I stabilized the element queries by including this library: https://github.com/sdecima/javascript-detect-element-resize\n. @gakimball thanks for the feedback.  I'll revert that code related to element queries from this PR.\n\nI like the idea of having a string passed in to specify the media queries for all the reasons you called out.  I'll make the necessary changes to the `zf-if`, `zf-hide` and `zf-show` directives.\n. Is this something that could get into the next release or does it need to wait until a major release?\n. @gakimball After making the updates to the directives and integrating them into my existing published app, I noticed an issue with the following markup I had that worked with my old implementation:\n\n``` html\n<div zf-if=\"not large\"/>\n<div zf-if=\"large\"/>\n```\n\nThe `large` will display on large **or larger** screens and the `not large` will show if the device is **not** large.  \n\nThis works great so long as you're on a large or smaller device.  If you go into xlarge, both will end up being displayed.  What I really need is for the `not large` to display if the device is **medium or smaller**.  As you mentioned in one of your comments, the existing interchange mechanism supports this, however, I still would prefer to use the zf-if style, so to accommodate that use case, there needs to be a way to specify that I want something to show up if the device is _____ or smaller.\n\nDo you have any preference on the verbiage used to specify something is _____ or smaller?  Possible solutions for declaring something be shown for large or smaller could be: `<= medium`, `less than or equal to medium`, `medium or smaller`, `< large`, `less than large`, or something else.\n\nAs of now the following verbiage exists.  Placement of `not` and `only` do not matter (i.e. can be before or after named breakpoint):\n`large`: Show for large or larger (shown for large, xlarge, xxlarge)\n`not large`: Show if not large (shown for small, medium, xlarge, xxlarge)\n`large only`: Show if large only (shown for large)\n. I added what I needed to the directives.  I used the \"or smaller\" verbiage, though that can be changed if desired.  I also moved all media query logic out of the directives and into the service for easier reusability.\n. First off, I switched to using F4A for all apps I develop at my company.  In order to make reusing modules across apps easy, I created a single module to store all common app logic and components.  Since I use F4A as the core of my apps, this single module is allowed to also contain front matter to pass through the dynamic routing F4A provides.  An example of this is my shared account module which houses all components for account management and is set up so that it uses the url /account/... for all the states in that module.  Some of the views in that module use front matter to define their states.\n\nI wrote a small shell script which is used to build any of my apps.  That script first builds the shared module then builds the desired app.  The way my build is set up, it requires running the dynamic routing against the shared module code first, then later against the app code.  I needed a way such that I could combine the output of the two runs, thus my proposed PR.\n. I'm wondering maybe a different approach could be used.  Currently a global variable is used to hold the routes and it is used in the config function of the foundation.dynamicRouting module js file.  I think it could be changed so that the module config call is removed from the js file and each run of the dynamic routing plugin produces the following snippet of code:\n\n``` js\nangular.module('foundation.dynamicRouting').config(['FoundationStateProvider',\n  function(FoundationStateProvider) {\n    FoundationStateProvider.registerDynamicRoutes(/* routes */);\n  }\n]);\n```\n\nThis way regardless of how many times one needs to run the plugin, the code outputted is always the same.  It'll also remove the need for a global variable.\n. @AntJanus Yes `fs.appendFile` will write the file if it doesn't exist ([see the docs](https://nodejs.org/api/fs.html#fs_fs_appendfile_filename_data_options_callback)).\n\nThe suggestion in my last comment was not to have the plugin create a module that sets up the routes as that module already exists with **foundation.dynamicRouting**.  The suggestion is to simply have the plugin output code that calls the config method on this existing module versus storing the routes in a global variable and using that variable in the config call in _foundation.dynamicRouting.js_.  This does not require appending to an existing file, though it would change the workflow and require the routes js file(s) be included AFTER the foundation js files, as the routes js file(s) would require the **foundation.dynamicRouting** module to exist.  The code as is in my PR does not require this workflow change since it still uses the global variable.\n. After reviewing the code again, I believe the **append** option I added to the plugin is misleading as the code is now using `fs.appendFile` instead of `fs.writeFile`.  This means that if I pass false for the append option (or don't specify it at all) and the file I provide exists, the file is still going to be appended, however, since the appended code will include the `var` statement, it will act the same as if the file was overridden, but have useless code at the top of it.  Is there any reason to believe someone would want to have an existing routes file overridden versus always appending to it if it exists?  The only thing I could think of is if they don't clear their build output directory and the routes files from a previous build still exists when running the next build.\n. @gakimball sure, I don't mind working on those plugin changes\n. Implements #513\n. @gakimball After playing around with this feature I feel there needs to be a way to configure the directives to allow changing of the threshold and velocity values passed to Hammer.  There are a couple of ways this can be achieved.  First off, default settings should be configured via a provider, not hard coded in the directive, to allow application wide overrides for the swipe directives.  Fine tuning specific uses of the swipe directives can be done via element attributes (**zf-swipe-threshold** and **zf-swipe-velocity**).  In both cases, I'm thinking there needs to be some abstraction so that users don't need to know the exact values to pass to Hammer.  For instance we could allow passing of values **_slow_, _normal_, and _fast_ for zf-swipe-velocity**, which are converted to Hammer values under the hood (similar to how Motion UI abstracts the exact values used in the CSS animations).  Similarly to express distance, we could use **_short_, _normal_, and _far_ for zf-swipe-threshold**.  Both the provider and attribute solutions should allow passing of numerical values that get directly passed to Hammer, in the event the named options don't fit a developer's needs.  The provider can also allow a developer to change the meaning of the string values or add their own.  This way I can change _slow_, _normal_ and _fast_ to fit the needs of my application as well as add _super slow_ and _super fast_ as additional options.\n\nI'll work on the updates above once an interface has been agreed upon.\n. @gakimball Sorry to be a pest, but any thoughts on this feature?  I'd like to finalize the PR so it can be in an upcoming release.\n. @gakimball I wasn't trying to get it into the next release, just something in the future like 1.2 or 1.3.  Do you or your team already have something in mind for this type of feature or can I take it further and implement the things I noted above?\n. @gakimball sounds good, thanks!\n. @gakimball any feedback on this?  I'll implement my ideas above for you and your team to review when you find the time\n. I know you guys are working on 1.1.1 right now so no rush, but when you find the time please provide some feedback on this PR so we can get it stabilized for 1.2.  The code is stable, but the exact values to use for named distances and named velocities need some work (if in fact that ends up being the way the swipe directives are configured).\n. @gakimball Won't this solution still have an issue if trying to use enter/leave/move all on the same element?\n. @gakimball Yes the concern is getting `move`, `enter`, and `leave` all to work on a single element with `ng-repeat`.  As an example, I want the following behavior to be achievable:\n1. **slideInLeft**, which will animate `enter`\n2. **slideOutRight**, which will animate `leave`\n3. **slideMoveUp** (or w/e you want to call it), which will animate `move`\n. @gakimball Hmm, I think slide and fade for sure.  Hinge might be a neat effect and possibly zoom.  Spin might work also, but would probably get annoying.  Is your worry the size of the CSS file?  If so, could you make the output of the classes be based on scss variables in the `_settings.scss` file?  This way you can only output what you need in your app.\n. +1 for the overlayClose change.\n\nThe code needs to be updated to allow passing false for that value.  The if statement should change from:\n\n``` js\nif(config[prop]) {\n  ...\n}\n```\n\nto:\n\n``` js\nif(!angular.isUndefined(config[prop])) {\n  ...\n}\n```\n. @foobarth Couldn't you just change the code you added to this:\n\n``` js\nelement.attr('overlay-close', config[prop] ? 'true' : 'false');\n```\n. A similar change will be needed for #571 as it should not add the dialog class if the config value is `false`\n. @mkrakowski thanks for the tip!  Luckily I had control over the module I was using so I could change the state references to use data.authRequired instead. BTW, in order to get it working I had to use the following notation in my front matter:\n\n```\n---\nname: app.search\nurl: /search\ncontroller: SearchCtrl\ndata: { authRequired: true }\n---\n```\n. +1\n. @gakimball I would prefer to have the same grid size classes as it would make it easier to work with panel <--> block transforms\n. perhaps you could just provide a mixin for the ability to add grid size classes for panels and require those mixins to be used if you want the functionality?\n. I was going to write up another PR for a068352b59e8549152ca4bbeedce8be03e60fd51, however, a fix was required in this PR to get the changes working so I figured I would just combine them.  The latest change adds the ability to provide dynamic icon attributes.  Here's an example of its usage:\n\n``` js\n$scope.actions = [{\n  icon: 'account',\n  iconAttrs: {\n    state: 'login'\n  }\n},{\n  icon: 'account',\n  iconAttrs: {\n    state: 'logout'\n  }\n},{\n  icon: 'chevron',\n  iconAttrs: {\n    direction: 'right'\n  }\n},{\n  icon: 'chevron',\n  iconAttrs: {\n    direction: 'left'\n  }\n}];\n\n// this is just to showcase the dynamic icons working, though a more common case would\n// have some trigger which changes the icon (e.g. once you logout, switch icon to login)\nvar actionNum = 0;\n$scope.action = $scope.actions[0];\n\n$scope.updateAction = function() {\n  $timeout(function() {\n    actionNum++;\n    if (actionNum == $scope.actions.length) {\n      actionNum = 0;\n    }\n    $scope.action = $scope.actions[actionNum];\n    $scope.updateAction();\n  },3000);\n};\n$scope.updateAction();\n```\n\nNow you can use a dynamically updating icon in your view!\n\n``` html\n<img zf-iconic=\"\" dyn-icon=\"action.icon\" dyn-icon-attrs=\"action.iconAttrs\"></img>\n```\n\nThis also works for static icons as shown below (though it would probably make more sense just use to use appropriate 'data-' classes specific to the icon in this case).\n\n``` html\n<img zf-iconic=\"\" icon=\"chevron\" icon-attrs=\"{ 'direction': 'left' }\"></img>\n```\n\nIf you have a static icon, but still want to use the scope to store your icon info, you could also do this:\n\n``` html\n<img zf-iconic=\"\" icon=\"{{ action.icon }}\" icon-attrs=\"{{ action.iconAttrs }}\"></img>\n```\n\nWhile **dyn-icon** and **dyn-icon-attrs** would work in the above case, if you know your icon will never change, the above method is preferred as using dyn-\\* will cause watchers to be set up, which are not needed if the icon never changes.\n. @gakimball Sure no problem, I'll knock that out right now!\n. Yeah I'm fine dropping the first example\n. @gakimball after thinking it over, I think there is an issue with #561 in that it would overwrite any existing classes on the element.  Perhaps switch the `config['class']` prop from being a string to being an array of strings and add all classes provided versus just overwriting the class attribute.\n. @gakimball Sure no problem\n. Still familiarizing myself with git, but I think I did that correctly\n. Just noticed I messed up the merge for the switch statement, fixing now\n. Yeah, tested after merging and works greats.  Docs might need a little cleanup, but framework functionality is good.\n. Any update on this?\n. @gakimball I'm going to look into fixing this issue today, so if you could provide any feedback that would be helpful.\n\nThe whole reason I had to implement what is now the zf-advise feature was due to this issue. I use the zf-advise directive to track the active state of the panel and apply various CSS to the parent containers of the panel when it is open/opening/closing/closed.  I'm basically trying to achieve what the panel grid block should be giving me when it is working properly.\n. @gakimball Yes this is for a vertical grid.  The intended behavior is what I'm after, however, the grid system experiences this bug only when inside a modal.  Let me find a smaller example to showcase my issue.\n. @gakimball Here's a smaller example:\n\n``` html\n<div class=\"grid-block vertical\">\n  <div class=\"grid-content shrink text-center\">\n    <h2>Modal Header</h2>\n  </div>\n  <div class=\"grid-block vertical\">\n    <div class=\"grid-block shrink\" ng-repeat=\"x in [1,2,3,4,5,6,7,8,9,10,11,12,13]\">\n      <div class=\"grid-content\">\n        <p>Content {{ x }}</p>\n      </div>\n    </div>\n  </div>\n  <div class=\"grid-content shrink text-center\">\n    <a class=\"button primary\">Next</a>\n  </div>\n</div>\n```\n\nUsing the above modal template along with `ModalFactory`, the middle `.grid-block.vertical` element is not scrollable as expected.\n. @gakimball Using the exact markup you provided does not work as expected.  Have you tried doing this inside a modal?  All examples I've tried which have scrollable grid elements work as expected on a basic page, but not when inside a modal.\n\nI think I may have found the issue.  The two root elements for a modal are shown below:\n\n``` html\n<div class=\"modal-overlay\" ...>\n  <aside class=\"modal\" ...>\n  </aside>\n</div>\n```\n\nThe `modal` class provides the flex styling as `flex: 0 0 auto`, however, the `aside` element is styled to be `display: block`.  Since the element is being displayed as a block, it is not respecting the flex styling.  If I add the following css, the scrolling behavior works as expected:\n\n``` css\naside.modal {\n  display: flex;\n}\n```\n. @gakimball do you think my proposed change to add `display: flex` to the modal class is acceptable?  I made the change locally in the framework and noticed the example modals in the docs were then being displayed as a horizontal grid.  I'm not sure if there is a non-breaking change that can be made to fix this issue, though if there is please let me know.\n. This hasn't been addressed yet. You'll have to apply the fix yourself with CSS.\n. @gakimball I believe the design of the library doesn't really matter so long as there is a standard API. Integrating the library into angular, react or anything else would be the same has having to integrate a JS library like hammer, iconic or any others that F4A uses. Not everything would need to be converted to pure JS. Some features like tabs don't really make sense to convert the JS code since most of it is framework dependent. The styling would be provided by the SCSS library and animations with the motion UI module.\n. @philippeluickx I recently had to do this with my own project when incorporating [Prism](http://prismjs.com/).  My build is more complex than the one that ships with F4A, however, I took the relevant parts related to copying 3rd party CSS and pasted them below.  No guarantee the code works as is, but should give you enough info to do the same in your project.\n\nFirst I added a new variable to hold raw CSS files like so:\n\n``` js\nvar appCss = [\n    './bower_components/prism/themes/prism.css',\n    './bower_components/prism/plugins/line-numbers/prism-line-numbers.css',\n    './bower_components/prism/plugins/line-highlight/prism-line-highlight.css'\n];\n```\n\nThen I used this new variable in a separate gulp task:\n\n``` js\ngulp.task('css', function() {\n  return gulp.src(appCss)\n    .pipe(gulp.dest('./build/assets/css/'));\n});\n```\n\nFinally I added the new task to be run as part of the existing build task:\n\n``` js\ngulp.task('build', function() {\n  runSequence('clean', 'jshint', ['copy', 'sass', 'css', 'uglify'], 'copy-templates', function() {\n    console.log(\"Successfully built.\");\n  })\n});\n```\n\nThe above does not combine the 3rd party css into the app.css file generated by the `sass task`.  As such, **you'll need to explicitly include the 3rd party css in your index.html file**.  You could easily rewrite the gulp task that combines the app.css with your 3rd party css so you only need to have a single css file referenced in your index.html.  If you did do this, you would have to make sure to run the `css task` AFTER the `sass task`, which could easily be done by changing the location of the `css task` in the `runSequence` call like so:\n\n``` js\ngulp.task('build', function() {\n  runSequence('clean', 'jshint', ['copy', 'sass', 'uglify'], 'css', 'copy-templates', function() {\n    console.log(\"Successfully built.\");\n  })\n});\n```\n. I'm having the same issue with the tabs directive.  A similar issue was observed with the zf-iconic directive (#569) and was resolved with change cce52b4aef7b49ac9d07ff60c85d700ce4fe6af8.  I'm seeing the same root cause in that the directives are not copied to the element, though I'm not sure if it's the same issue.  I think the problem revolves around the usage of transclude in the tabs.  I think a solution similar to the one I used for developing the interchange directives might be needed (https://github.com/zurb/foundation-apps/pull/549/files).  I'll play around with it for awhile and see what I can figure out.\n. The tabs are transclusion hell!  The attribute issue was part, but not the whole story.  The root problem is that all tab trancludes are done during the post link operation on the element.  The post link of an element occurs after all children elements have been post linked.  What this means is, any directives within a tab are being run **before** the raw content is transcluded into the tab causing angular to be unaware that a directive exists within the tab.\n\nAs I mentioned, transferring attributes is another issue with the tabs. This can be fixed similar to cce52b4aef7b49ac9d07ff60c85d700ce4fe6af8, however, it must be noted that if directives are used on the same element as the `zf-tab` directive, the `zf-tab` directive will need to be recompiled after copying the attributes.  If the directives are used in children of the `zf-tab` directive, no recompile will needed as children directives will be compiled **after** the `zf-tab` directive once the tab directives are fixed to transclude the correct data.\n. this issue with be addressed with https://github.com/base-apps/angular-base-apps/issues/24\n. My app uses the ModalFactory to create a modal on the fly when a new level is started.  The modal is opened and closed programmatically as you progress through the level and finally destroyed once the level is completed.  While developing the app I noticed cases when the modal was not being opened or closed when specified.  This fix solves those issues and I haven't experienced any issues since implementing this fix.\n. The answer you're looking for is the [$stateParams service](https://github.com/angular-ui/ui-router/wiki/URL-Routing#stateparams-service).  The link should give you all the info you need regarding how to use the params.\n\nIn your example, the id would be accessible via `$stateParams.id`.  I don't believe the front matter provides a way to access the state params in your scope without wiring it through a controller.  I've seen others speak of a DefaultController which can be extended to add custom behavior, however, if I ever need any specific behavior from my controller I write my own versus extending the DefaultController provided by F4A, so you'd have to get info on how to do that from someone else.\n\nIn short, here is the code you'll need:\n**Front Matter:**\n\n```\n---\nname: inbox.message\nurl: inbox/:id\ncontroller: InboxController\n---\n```\n\n**Controller:**\n\n``` js\nangular.module('application').controller('InboxController', \n  ['$scope', '$stateParams', function($scope, $stateParams) {\n    $scope.msgId = $stateParams.id;\n  }]\n);\n```\n\n**View:**\n\n``` html\nYou're viewing message with id: {{ msgId }}\n```\n. This was fixed with e70eff2d17a5de409e4a58d259c7c8a7e076ee7e.  It'll be in the next release.\n. Posted PR from wrong repo, will close and reopen\n. @imjoeco I noticed you closed this PR but do agree with using $timeout instead of setTimeout.  Should I make those changes in my PR?\n. @imjoeco I combined your changes into #640\n. I included the changes from this PR in #640 when #644 was closed without realizing @imjoeco was planning to open a new PR with the same changes.  I can revert d37786b1c8f39b173f5ef3ef89f3a1bff7b23d7d so that this PR can be merged or you can just accept both PRs as is though this PR has the same changes as d37786b1c8f39b173f5ef3ef89f3a1bff7b23d7d.  \n\n@gakimball Let me know how you want to handle it.\n. @Joe-5mith Have you tried using the ModalFactory (http://foundation.zurb.com/apps/docs/#!/angular-modules)?  If so, are there some feature you're looking for that it's missing?  I use it for all my dynamically generated modals and it seems to work great (some issues aside which are being tracked).\n. @Joe-5mith You can create an angular service to encapsulate the logic for generating a modal (an angular factory would work as well)\n\n``` javascript\nangular.module('mymodule').factory('ModalService', function (ModalFactory) {\n    return {\n      createModalXYZ: createModalXYZ\n    };\n\n   function createModalXYZ() {\n      return new ModalFactory({\n          ...\n      });\n    }\n});\n```\n\nThere are some pending changes for modals that are waiting for the next release of the framework.  One such change was how to configure the classes for a modal pragmatically.  An example was added to the docs for how to use the ModalFactory (https://github.com/zurb/foundation-apps/blob/master/docs/templates/modal.html).  The `class` config property will be available in the next release.\n. Do you have a specific use case?  Not sure if this will help, but you can also attach functions to the modal scope via the contentScope property.  So if you need to do something with the click of a button, you can have the following:\n\n``` javascript\n$scope.foo = \"Bloop!\";\n$scope.bar = \"Blee!\";\nvar config = {\n    id: 'your optional id here',\n    templateUrl: 'path/to/template',\n    contentScope: {\n        foo: $scope.foo,\n        bar: $scope.bar,\n        clicked: function() {\n          // do something with foo and bar\n        }\n    },\n    animationIn: 'slideInFromTop'\n}\n$scope.modal = new ModalFactory(config);\n```\n\nIn your template you can use `ng-click=\"clicked()\"` to trigger the scope method on the click of the button.\n. @zurbchris @valorekhov \n\nI'm going to add similar functionality to the `zf-panel` directive.  I'll add it to other directives that would benefit with this change including the `zf-accordion-item`.\n. I've implemented PR #740 to handle triggering active state messages for components that use the foundation sub/pub system to show/hide components.  Accordions and Tabs do not use the foundation sub/pub system to handle changing active state of elements.  In these cases, two-way binding of `scope.active` would have to be used to be notified of active state changes.  The two-way bound value should be readonly until support is added to the Accordion and Tabs to allow changing active state outside of the directive.\n. BTW in terms of #536, here is a case where using the angular pub/sub would help as it also allows passing data, so we could just fire one event in the `promise.finally` block and pass along the success/error info instead of having to fire specific events for success/error\n. I made the changes necessary for my app in my forked repo: 84fe2e23ece29aa5a90283961af3f609d7b5210a\n\nI realized that having a success/error for each action wasn't going to really help me do what I needed.  Instead what I was really after was knowing the active state of an element once the animation was complete on that element.  So I instead added two new messages **active-true** and **active-false** which are sent once the open/show animation is complete or the close/hide animation is complete, respectively.  Let me know if you want me to work on a PR for integration of these changes.\n. this will be addressed with https://github.com/base-apps/angular-base-apps/issues/25\n. Feel free to submit this PR against the [new fork](https://github.com/base-apps/angular-base-apps)\n. Turns out there was just a bug in my code :/\n. For what it's worth, I've been using F4A with angular 1.4.x in production code for a few months now.  There were a couple problems I had to address in my own code due upgrading angular, but no issues were found in F4A.\n. @kuatsure I use nearly every part of the F4A framework.  It should also be noted that I run a custom build of the framework (https://github.com/fiboacademy/foundation-apps/tree/fibo-master).  Some of my fixes/features have made there way into the F4A master and some haven't.  The forked repo is set to angular 1.4.4, however, my build system is set to use angular 1.4.7 and I haven't noticed any issues.\n. @gakimball that would be best\n. I was able to reproduce this issue in my app using the same markup as in the docs `<input type=\"range\"/>`.  This issue is intermittent as it works sometimes in my app, but more often than not the slider gets stuck and requires refreshing the browser.\n. Appears to be due to another library I'm using not handling mouse events correctly\n. I should mention that if run with angular support enabled, the need for the global variable `foundationRoutes` is removed.  Backwards compatibility is also maintained as angular support is disabled by default.\n. Yes I can get to that at some point\n\nOn Fri, Dec 4, 2015 at 1:35 PM, Geoff Kimball notifications@github.com\nwrote:\n\n> @soumak77 https://github.com/soumak77 Thanks for putting this together\n> :) Could you apply these features to the external Front Router plugin\n> https://github.com/zurb/front-router as well? We won't be dropping the\n> built-in plugin until after 1.2, but new projects are referencing the\n> external plugin.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/pull/704#issuecomment-162088077.\n. I should mention that the optimized css worked on Chrome and Safari for OS X 1.9.5, but did not work for Chrome and Safari for iOS 8.3\n. I started using foundation from the beginning and really love what they did.  I was in the early stages of my company when I decided to go with foundation for apps and now all my apps run on this framework.  It is unfortunate to see the lack of support at this time, however, I foresee being able to do some amazing things with this framework in the future.  Seeing as I am reliant on the framework to maintain my business, I created a [fork](https://github.com/fiboacademy/foundation-apps/tree/fibo-master) where I make necessary updates to the framework to support my needs.  Most of these changes I'm hoping to get merged into foundation for apps once the project picks back up.  Some of which are pending PRs.\n\nWhile it may not be a viable option to use my forked repo in production, you can try it out by adding the following to your bower file:\n`\"foundation-apps\": \"git@github.com:fiboacademy/foundation-apps#fibo-master\"`\n\nThe fork should be a drop-in replacement with no additional configuration needed, though you will need to build from source.\n. I would love to see the following changes in 1.2.  I've been using all these changes in production code for the past 6+ months.  All changes to exposed APIs are backwards compatible:\n- PR #549 - Interchange Directives\n  - `FoundationMQ` service changes\n    - The changes I've made to the `FoundationMQ` service have proven to be quite useful so that I can perform media queries in code as shown below.  The methods use named queries so to allow user defined values.\n      - `FoundationMQ.matchesMediaOnly(\"small\"); // checks if device is small only`\n      - `FoundationMQ.matchesMedia(\"medium\"); // checks if device is medium or higher`\n  - Interchange Directives\n    - I absolutely love how these directives work.  It makes it so simple to tag an element with a specific media query.  It also removes the need for additional DOM elements as is required by the current interchange mechanism `zf-interchange`.\n- PR #730 - Animation Promises \n  - Changes allow chaining animations so they can be performed one after another.  The changes use the `$q` service to handle the promises.\n- PR #704 - Add angular support and multiple runs to dynamic routing gulp plugin\n  - Allows dynamic routing module to be run multiple times by appending to the routes file if it already exists.  File will be created if it doesn't already exist.\n  - Removes the dependency on the global variable `foundationRoutes` when angular support is enabled.  Uses the `angular.module('foundation.dynamicRouting').config()` method to add routes.\n\nThose have proven to be the most useful changes I've made to the framework.  While I think PR #551 (Swipe Directives) is a really promising feature, there is much work to do still to get it working flawlessly, so I wouldn't suggest merging the PR for 1.2. I don't currently use those directives in production code, though I will need to for a product I have to release by September, so by then I'll have all the kinks worked out.\n. @gakimball There aren't any critical bugs that I've seen that I haven't already fixed myself in the framework.  I think for the most part I've created PRs for things I've fixed in the framework along the way.  I'll go through the changes I've committed to my company's forked repo of F4A that we use in production and reply shortly with the changes that haven't made it into the F4A master yet.\n. These are the only two bug fixes I've made that aren't yet in the framework:\n- Check for null scope during SVG injection\n  - https://github.com/fiboacademy/foundation-apps/commit/2acffdc845e4f662c04fa2ad1a0e6f8290e66a4b\n- Check scope and element during modal destroy\n  - https://github.com/fiboacademy/foundation-apps/commit/d6273a97ef299b8600cbe4f5db237aec19620761\n  - there was a discussion as to whether or not these checks were needed when https://github.com/zurb/foundation-apps/pull/645 was merged and it was determined they were not, however, in practice, I've found they are needed\n. In terms of existing issues, it would be nice to see the following resolved:\n- https://github.com/zurb/foundation-apps/issues/430\n  - This is specific for off-canvas, though I've found it would be useful for panels as well.  I simply add the necessary click handlers to other elements in the app so clicking on them cause the panel/off-canvas to close, but it would be nice to see an integrated option so I don't have to worry about which exact elements need the click handlers.  I would like to be able to simply flag the off-canvas/panel component as needing to close when clicked outside.\n- https://github.com/zurb/foundation-apps/issues/484\n  - It would be nice to remove my dependency on `Modernizr` as I'm only using it for F4A support detection.\n- https://github.com/zurb/foundation-apps/issues/578\n  - This is easily solved by adding one line of css in my app, though a solution via a framework css class would be nice\n- https://github.com/zurb/foundation-apps/issues/672\n  - This one is just plain annoying\n- https://github.com/zurb/foundation-apps/issues/699\n  - I had to remove all range sliders in my app due to this issue.  Still can't figure out what exactly is happening.\n- #572 \n  - I ended up getting the functionality I needed, but my solution is a hack at best.\n. @zurbchris Please disregard my comments about that change.  The head of my repo has the same code for modal destroy as F4A master and I haven't experienced any issues.\n. I would like to see https://github.com/zurb/foundation-apps/issues/572 resolved at some point as well.  I ended up getting the functionality I needed, but my solution is a hack at best.\n. This PR didn't get created correctly. I'll create a new branch with the isolated changes.\n. There is one key feature to this PR that I should explain and that is the `FoundationApi.animateAndNotify` method.  This method internally calls `FoundationApi.animate`, which has been updated in this PR to return a promise.  `animateAndNotify` waits on the promise to be completed and then fires off a notification via `FoundationApi.publish` stating whether the component was just activated or deactivated.  \n\n`FoundationApi.animateAndNotify` is not used in the foundation codebase as of this PR.  In my fork, I have replaced all usage of `FoundationApi.animate` in the panels component with `FoundationApi.animateAndNotify`.  This allows me to perform code immediately after the panel has closed or immediately after the panel has opened.\n\nSince `FoundationApi.animateAndNotify` is not used in this PR, it could be removed from the API, however, I would not only suggest keeping the method, but would suggest using it in place of `FoundationApi.animate` for various components (panels being one example).\n. addresses https://github.com/zurb/foundation-apps/issues/674\n. @zurbchris do you plan on adding the anitmateAndNotify to any components so they can alert subscribers when the component has fully opened or fully closed? Perhaps an additional attribute can be added to the directive so these new messages only get sent when enabled.\n. Awesome!  Not sure what else you have planned for this feature, but feel free to change anything I've done to better suit the framework.\n. fix has been made in https://github.com/base-apps/angular-base-apps\n. This has been resolved for ui-sref elements in PR https://github.com/zurb/foundation-apps/pull/736 with change https://github.com/fiboacademy/foundation-apps/commit/8922ec4215c5340bb5b3c8b64a904cb308b01d51.  I'll update the code to check if click originated within an element that has an href tag.\n. The specific code that needs to be updated is https://github.com/fiboacademy/foundation-apps/blob/8922ec4215c5340bb5b3c8b64a904cb308b01d51/js/angular/components/common/common.js#L208-L211\n\nRight now it doesn't call `event.preventDefault()` if the click originated within an element with `ui-sref`.  I'll change that to a list of attributes with `ui-sref` and `href`.  What other attributes should be added to the list to resolve your issue?\n. @zurbchris @gakimball \nLet me know your thoughts on this.  I'll be making these changes in my fork.  I can get a PR submitted today if you provide feedback.\n. I know both show/hide and open/close are used in messages, but which is the preferred standard so the animation messages can use those values?\n. I made this comment on #670, but should include it here for completeness:\n\nAccordions and Tabs do not use the foundation sub/pub system to handle changing active state of elements. In these cases, two-way binding of `scope.active` would have to be used to be notified of active state changes. The two-way bound value should be readonly until support is added to the Accordion and Tabs to support changing to active state outside of the directive.\n. this has been completed in https://github.com/base-apps/angular-base-apps\n. fix has been made in https://github.com/base-apps/angular-base-apps\n. Changes allow grid-block panels to animate properly.  Also adds supports for a `force-animation` attribute on the panel directive (when provided, allows animations to run on large devices).\n. fix has been made in https://github.com/base-apps/angular-base-apps\n. @gakimball\n\nHow heavily is jQuery used in foundation for sites?  Is it unthinkable to try to remove that dependency?\n\nFrom an architecture standpoint, you shouldn't be writing core functionality in angular.  Any components shared between F4S and F4A should be part of a shared core framework.  This core framework should be javascript only with minimal dependencies.  This will enable the framework to be used by ANY javascript framework and not just F4S and F4A (#587).\n\nF4A is already in a predicament with angular in that angular 2.0 is stated to not be backwards compatible with angular 1.0.  A ton of effort will need to be spent migrating the code to work with angular 2.0, so rather than making EVERYTHING angular, now would be a great time to figure out which code is not angular dependent and put that into the core JS framework.  The core JS framework can then be wrapped by F4A to provide an angular solution and wrapped by F4S to provide a jQuery solution.  The core JS framework can also be wrapped by others to provide similar functionality for other common web frameworks.\n. You can do something similar to angular 1.0 (likely the same in 2.0, but haven't looked into it), where they use jqLite and allow for dropping in your own implementation if needed. This allows angular to work with jQuery without having to change any internal functionality as the drop in replacement (jQuery) is a superset of the required framework (jqLite). So if you want to use this new foundation core JS in angular, you could drop in angular.element and the framework should work. You can also drop in jQuery when using it for F4S and it should work as well.\n\nI don't think there is a major issue here so long as the core JS is properly wrapped. So for instance with angular, you'll still want to use directives as much as possible as they are extremely powerful, but you'll need to ensure $scope.digest or $scope.apply is called in the correct locations after DOM manipulation is done via the core JS framework so the directive (and other scopes) reflect the changes.\n. @gakimball @zurbchris \n\nHere's an [interesting article on Angular 2](https://www.airpair.com/angularjs/posts/preparing-for-the-future-of-angularjs) I found that relates directly to this conversation.  I would suggest reading the entire article as it mentions some good points you'll want to keep in mind when developing a plain JS UI framework.  Here are some snippets:\n\n2.3.6 jqLite\n\njQuery has been supported in Angular since day one. That support isn't going away, but Angular will no longer include it's own miniature version (jqLite). It's also in line with how Angular prefers declarative over imperative (as discussed in 2.1.2).\n\n2.1.2 Controllers, providers, and directives\n\nOne of the most common use cases in web development is creating custom pieces of elements on a page, like tabs or buttons with spinners in them. Today the web lacks a good way to separate concerns and easily manipulate the DOM. While things are on their way (see section 2.2) we've had the need for some time.\n\njQuery is great for controlling the DOM in a direct way. We call that an imperative model. To help developers transition to Angular it has supported that way of thinking. But Angular has at the same time tried to give us a more declarative model where we're more concerned with what, rather than how. Data binding is probably the most notable of these features as we can just use our JS data in the HTML, rather than grabbing the element and pushing in the value ourselves.\n. Feel free to submit this PR against the [new fork](https://github.com/base-apps/angular-base-apps)\n. fix has been made in https://github.com/base-apps/angular-base-apps\n. This was incorrectly reported.  I had the markup within a form that was not tagged as `grid-block`, causing issues on iOS.\n. I believe this is addressed with PR https://github.com/zurb/foundation-apps/pull/670, however per [my comments](https://github.com/zurb/foundation-apps/pull/670#issuecomment-162749577), some standardization of how active state is handled should be addressed before making these one off changes.  I'll leave it up to the folks at zurb as to whether or not this advice is taken into consideration.\n. Correct, adding optional two way binding would require checking if the active attribute was set on the element. If so, the code does not need to set scope.active as the initial value was provided by the user. If the active attribute is not set, the code would have to set scope.active = false by default as the active property on the scope will not exist since it was not provided by the user.\n. this will be addressed with https://github.com/base-apps/angular-base-apps/issues/25\n. this issue with be addressed with https://github.com/base-apps/angular-base-apps/issues/24\n. @rafibomb I was thinking you could adjust the padding to account for the 1 px border, however, this is a bit complicated by how foundation uses the button padding\n\n``` sass\n$button-padding: 0.85em 1em !default;\n\n%button {\n   padding: $button-padding;\n   ...\n}\n```\n\nThe `$button-padding` variable allows css shorthand format to be used, thus the value must be parsed to figure out exactly what padding the user has configured for each side.  I found an example of how css shorthand can be parsed in SASS: https://gist.github.com/pixelwhip/8428447\n\nOnce the individual padding values are known for each side, the `calc()` method can be used to adjust the padding by 1px.\n\n``` sass\n@mixin button-style(...) {\n  @if $style == hollow {\n    border: 1px solid $background;\n    padding-top: calc(#{$button-padding-top} - 1px);\n    padding-right: calc(#{$button-padding-right} - 1px);\n    padding-bottom: calc(#{$button-padding-bottom} - 1px);\n    padding-left: calc(#{$button-padding-left} - 1px);\n    ...\n}\n```\n. Perhaps I should have just scrolled a bit lower in the file before writing my comment.  Seems there already exists a method for getting the value for a specific side `get-side($padding, right)`\n. @MiguelMike @rafibomb fixed!\n. will replace with new PR\n. this issue with be addressed with https://github.com/base-apps/angular-base-apps/issues/24\n. Feel free to contribute to the documentation in the [new fork](https://github.com/base-apps/angular-base-apps)\n. @mattgrande I'm not sure if it would help, but I made some changes to how zf-advise works in the framework (https://github.com/zurb/foundation-apps/pull/741).  I've only ever needed to use zf-advise for panels, not modals, so these changes may not fix your issue.\n. fix has been made in https://github.com/base-apps/angular-base-apps\n. ZURB has basically dropped support for this framework and it is now being maintained by the community as https://github.com/base-apps/angular-base-apps.\n\nI've gone through the entire codebase and wrote an unsubscribed method for every subscribe method.  Feel free to run the same analytics against v1.2.5 and create issues as needed.\n. this issue with be addressed with https://github.com/base-apps/angular-base-apps/issues/24\n. fix has been made in https://github.com/base-apps/angular-base-apps\n. Feel free to submit this PR against the [new fork](https://github.com/base-apps/angular-base-apps)\n. It's unfortunate this framework isn't receiving the attention it needs.  My company is heavily invested in Foundation 4 Apps and there is no way of switching away from it. Because of this, I've had to take the initiative of fixing framework related issues myself. A large number of these fixes have been sitting in PRs for months.\n\nIn order to release quality apps, I've had to use a fork of this framework where I can make necessary fixes. That fork is https://github.com/fiboacademy/foundation-apps/tree/fibo-master.  I've been using the framework in production for over a year and really love it, just wish I didn't have to maintain the framework myself.\n. From what I've heard, they are working on a V2 which will integrate with Angular 2 and share styling from Foundation for Sites 6 as @DaSchTour stated.  I completely agree with the approach, but that doesn't mean to abandon V1.  For those like me that are using V1 in production code, it is important that bug fixes are still made to the framework (especially when some of these fixes are already done and just waiting to be merged).\n. Sounds like it's time for the community to take it over?  I'm heavily reliant on the framework and can't give it up, so I'll need to maintain it myself anyway.  The framework is pretty solid for what its worth (after all the bug fixes I've made).\n. I'm all for getting the process started on migrating this framework away from ZURB.  If we're going to maintain an open source version, I wouldn't mind taking that over.  I'm actively working on apps which fully depend on the framework, so I would love to see it get the attention it needs.\n\nI've been maintaining my own [custom build](https://github.com/fiboacademy/foundation-apps/tree/fibo-master) of the framework which is used in all apps I develop at Fibo.  These apps have been running in production for over a year and a half, so I trust this build of the framework far more than the current state of the foundation apps master.  As such, I would highly suggest using this build as the base for the framework going forward.\n\nIn terms of org, we could use the [FiboAcademy](https://github.com/fiboacademy) organization where I maintain my custom build and apps.  I'm fine with whatever name is chosen, though perhaps something with angular would be appropriate, maybe `angular-apps`.  I'm not too keen on changing the naming convention from `zf` to something else.  It would be a real pain for those of us trying to migrate to the new framework.  It would also be annoying for those that start using foundation apps thinking it is still being maintained, then find this new open source version that requires them to change all the code they wrote.  I think a drop in replacement for 1.2 (or as close to it as possible) should be the first version of this new framework.\n. @AntJanus I've fine with a new org, though foundation (or whatever the next iteration becomes) will never be moved away from in the FiboAcademy org.  I've spent the last year and a half building out a custom angular suite on top of foundation which integrates with our backend infrastructure.  All business operations apps have been fully switched over to the new framework as of a couple months ago, so trying to reverse that or go in a different direction would be a vast waste of resources.\n. The fibo-apps framework is in a private repo. You were just looking at the custom build of foundation which is foundation with my pending PRs accepted.\n\nAs for name, I'd prefer base over open.\n. What about angular-base?\n. I was specifically just speaking for the fork name which should always stay angular.  Perhaps something like `base-apps` as you suggested would work for the naming of the org and `angular-base` for the fork.  Foundation for Apps is really just a styling framework at it's core, so I see your point in thinking about other front end frameworks.  We could use the same convention of `-base` for other frameworks like `react-base` and `ember-base`.\n. It would be a good idea to continue with the decoupling of the framework that was started with https://github.com/zurb/front-router and https://github.com/zurb/motion-ui.  This would help move in the direction of enabling other front end frameworks, though angular should be the primary focus for now.\n. If architected properly, the thing that would set this new framework apart from Angular Material, and others, is to enable cross-framework integration.  This way the framework just supports styling and can be leveraged by any javascript framework.  If framework specific logic is needed to power the library, which in most cases it will, a `*-base` repo can be created which provides the integration.\n. The majority of the issues with this framework have been resolved as of v1.2.5 from https://github.com/base-apps/angular-base-apps\n. Similar to https://github.com/zurb/foundation-apps/issues/804\n. will replace with corrected PR\n. fix has been made in https://github.com/base-apps/angular-base-apps\n. fix has been made in https://github.com/base-apps/angular-base-apps\n. The modal overlay close triggers the `deactivate` method to be called on the modal which simply hide the modal.  You'll need to call `destroy` to have the modal removed from the DOM.  If you give your modal a hard-coded ID, you can then subscribe to messages for the modal.  When you get the `close` message, call `modal.destroy()` like in the examples.\n\nBy the way, this repo has been dead for awhile and is now being maintained in https://github.com/base-apps/angular-base-apps.  If you want, you can create a PR to introduce the concept of `overlayDestroy`.  Similar to `overlayClose`, it would cause the modal to close when clicking on the overlay, however, once the animation is completed, the modal would be destroyed.\n. @cisdev739 I added a `destroy-on-close` attribute for modals with https://github.com/base-apps/angular-base-apps/issues/16.  It will be part of the 1.3 release.\n. Feel free to submit this PR against the [new fork](https://github.com/base-apps/angular-base-apps)\n. @HuemanF I believe this is simply due to how the SCSS is structured.  The resulting behavior for grid-block (`flex-flow: row nowrap`) is intended.  If you wish to have `flex-flow: row wrap`, you can use the `wrap` class in combination with the `grid-block` class.  You can review the [docs for grid-block](https://base-apps.github.io/angular-base-apps/#!/grid) to get a better understand of the functionality.\n\nZURB has basically dropped support for this framework and it is now being maintained by the community as https://github.com/base-apps/angular-base-apps.\n. ZURB has unofficially dropped support for this framework and it is now being maintained by the community.  The docs can be found here: https://base-apps.github.io/angular-base-apps\n. @Seb- Yes the fork is production ready.  I use it for all apps in my company.  I even have them running the v2.0 prerelease without issues.\n. @kobekoto I suggest trying out Angular Base Apps if you want to use this framework (see https://github.com/zurb/foundation-apps/issues/829 for more info)\n. ",
    "nerdgrass": "3.4.9\n. That did the trick! Thanks :D \n\nSo as best I can tell, the bower package doesn't have a _settings.scss that I can copy into wherever. I initially thought that's what _global.scss was and why I imported it (clearly didn't look too closely). Is it intentional to not have a copy of it in the bower package? I might be nice to have it in there somewhere and mention its purpose on the readme.\n. Sweet :D Thanks!\n. 3.4.9\n. That did the trick! Thanks :D \n\nSo as best I can tell, the bower package doesn't have a _settings.scss that I can copy into wherever. I initially thought that's what _global.scss was and why I imported it (clearly didn't look too closely). Is it intentional to not have a copy of it in the bower package? I might be nice to have it in there somewhere and mention its purpose on the readme.\n. Sweet :D Thanks!\n. ",
    "SolenO-N": "Fixed by importing settings.scss before foundation.scss.\n. Fixed by importing settings.scss before foundation.scss.\n. ",
    "gerrytucker": "Same here on Windows 8.1 64-bit.\n. Now working after 1.0.2 update, thanks very much everyone!\n. I spoke too soon!\n\n![image](https://cloud.githubusercontent.com/assets/243116/5308093/80810bbc-7c0b-11e4-80cf-a38ebc414e3a.png)\n. Had to downgrade my Sass gem to 3.4.7 before I could complete the manual commands but now have a newly created app :-)\n. @nandroid Which version of the Sass gem do you have? `gem list sass`\n\nTo install Sass@3.4.7:\n\n```\ngem install sass -v \"3.4.7\"\n```\n\nI was on sass@3.4.9 which I uninstalled as follows:\n\n```\ngem uninstall sass -v \"3.4.9\"\n```\n\nHope this helps.\n\nGerry\n. @dhye360 ensure you've got the sass gem installed, required version as mentioned above is 3.4.7:\n\n```\ngem install sass -v \"3.4.7\"\n```\n. Same here on Windows 8.1 64-bit.\n. Now working after 1.0.2 update, thanks very much everyone!\n. I spoke too soon!\n\n![image](https://cloud.githubusercontent.com/assets/243116/5308093/80810bbc-7c0b-11e4-80cf-a38ebc414e3a.png)\n. Had to downgrade my Sass gem to 3.4.7 before I could complete the manual commands but now have a newly created app :-)\n. @nandroid Which version of the Sass gem do you have? `gem list sass`\n\nTo install Sass@3.4.7:\n\n```\ngem install sass -v \"3.4.7\"\n```\n\nI was on sass@3.4.9 which I uninstalled as follows:\n\n```\ngem uninstall sass -v \"3.4.9\"\n```\n\nHope this helps.\n\nGerry\n. @dhye360 ensure you've got the sass gem installed, required version as mentioned above is 3.4.7:\n\n```\ngem install sass -v \"3.4.7\"\n```\n. ",
    "jsmreese": "@gakimball It might not set anything up, but I'm still unable to use the cli after that step.\n`foundation-apps new myApp` just returns `sh: foundation-apps: command not found`.\nNot sure if I'm missing something obvious...\n. I had both sass 3.4.7 and 3.4.9 installed.\nUninstalled both, reinstalled 3.4.7.\n\nAlmost there...\nI'm seeing this error from gulp's output (added `trace: true` to the sass call):\n![image](https://cloud.githubusercontent.com/assets/1275528/5318340/27c75a6e-7c6d-11e4-9f7d-30ea7d5cbf27.png)\n. Booya.\n\nI uninstalled jruby 1.7.16.1 and installed jruby 1.7.15.\n\n`gem install bundler sass` as instructed, but that installs sass 3.4.9, which doesn't work with gulp-ruby-sass.\n\n`gem uninstall sass`\n`gem install sass -v \"3.4.7\"`\n`npm start`\n\nAnd it builds.\n\nThanks for the help @AntJanus @gakimball @gerrytucker!\n. Thanks!\n\nRecording the details here because it wasn't obvious how to get there in code for someone who's new to angular.\n\n```\n// media_queries\nangular.element(document).injector().get(\"FoundationApi\").getSettings();\n\n// throttle\nangular.element(document).injector().get(\"Utils\");\n```\n. @gakimball It might not set anything up, but I'm still unable to use the cli after that step.\n`foundation-apps new myApp` just returns `sh: foundation-apps: command not found`.\nNot sure if I'm missing something obvious...\n. I had both sass 3.4.7 and 3.4.9 installed.\nUninstalled both, reinstalled 3.4.7.\n\nAlmost there...\nI'm seeing this error from gulp's output (added `trace: true` to the sass call):\n![image](https://cloud.githubusercontent.com/assets/1275528/5318340/27c75a6e-7c6d-11e4-9f7d-30ea7d5cbf27.png)\n. Booya.\n\nI uninstalled jruby 1.7.16.1 and installed jruby 1.7.15.\n\n`gem install bundler sass` as instructed, but that installs sass 3.4.9, which doesn't work with gulp-ruby-sass.\n\n`gem uninstall sass`\n`gem install sass -v \"3.4.7\"`\n`npm start`\n\nAnd it builds.\n\nThanks for the help @AntJanus @gakimball @gerrytucker!\n. Thanks!\n\nRecording the details here because it wasn't obvious how to get there in code for someone who's new to angular.\n\n```\n// media_queries\nangular.element(document).injector().get(\"FoundationApi\").getSettings();\n\n// throttle\nangular.element(document).injector().get(\"Utils\");\n```\n. ",
    "dhye360": "Same problem here on windows as admin.  Error must interrupt install as foundation-apps isn't found installed locally or globally.  \n\n@jsmreese do you have Ruby? I was trying to get as far as I could without it, but if it won't even install....\n. @gakimball  Same error as @gerrytucker  for me \n. I caved and installed Ruby, but `gem install bundler` doesn't work so while I could _install_ **foundation for apps**; I can't successfully _bootstrap_ one\n\nbut i'm Ruby/Sass ignorant and an overall foundation N00B\n. Same problem here on windows as admin.  Error must interrupt install as foundation-apps isn't found installed locally or globally.  \n\n@jsmreese do you have Ruby? I was trying to get as far as I could without it, but if it won't even install....\n. @gakimball  Same error as @gerrytucker  for me \n. I caved and installed Ruby, but `gem install bundler` doesn't work so while I could _install_ **foundation for apps**; I can't successfully _bootstrap_ one\n\nbut i'm Ruby/Sass ignorant and an overall foundation N00B\n. ",
    "benjaminzanatta": "Same for me on Windows 7 64bits\n\n![capture](https://cloud.githubusercontent.com/assets/3354272/5308132/4a4df268-7c14-11e4-987f-d329dd510ec1.PNG)\n. Same for me on Windows 7 64bits\n\n![capture](https://cloud.githubusercontent.com/assets/3354272/5308132/4a4df268-7c14-11e4-987f-d329dd510ec1.PNG)\n. ",
    "nandroid": "Same error. I don't know how to downgrade...\n. Thanks, @gerrytucker.\nBut I started from scratch, and now I can't install bundler or downgrade SASS.\n\nC:\\Users\\nandell>gem install bundler\nERROR:  Could not find a valid gem 'bundler' (>= 0), here is why:\n          Unable to download data from https://rubygems.org/ - SSL_connect retur\nned=1 errno=0 state=SSLv3 read server certificate B: certificate verify failed (\nhttps://api.rubygems.org/latest_specs.4.8.gz)\n\nC:\\Users\\nandell>gem uninstall sass -v \"3.4.9\"\n\nC:\\Users\\nandell>gem install sass -v \"3.4.7\"\nERROR:  Could not find a valid gem 'sass' (= 3.4.7), here is why:\n          Unable to download data from https://rubygems.org/ - SSL_connect retur\nned=1 errno=0 state=SSLv3 read server certificate B: certificate verify failed (\nhttps://api.rubygems.org/specs.4.8.gz)\n\nC:\\Users\\nandell>gem install builder\nERROR:  Could not find a valid gem 'builder' (>= 0), here is why:\n          Unable to download data from https://rubygems.org/ - SSL_connect retur\nned=1 errno=0 state=SSLv3 read server certificate B: certificate verify failed (\nhttps://api.rubygems.org/latest_specs.4.8.gz)\n. Same error. I don't know how to downgrade...\n. Thanks, @gerrytucker.\nBut I started from scratch, and now I can't install bundler or downgrade SASS.\n\nC:\\Users\\nandell>gem install bundler\nERROR:  Could not find a valid gem 'bundler' (>= 0), here is why:\n          Unable to download data from https://rubygems.org/ - SSL_connect retur\nned=1 errno=0 state=SSLv3 read server certificate B: certificate verify failed (\nhttps://api.rubygems.org/latest_specs.4.8.gz)\n\nC:\\Users\\nandell>gem uninstall sass -v \"3.4.9\"\n\nC:\\Users\\nandell>gem install sass -v \"3.4.7\"\nERROR:  Could not find a valid gem 'sass' (= 3.4.7), here is why:\n          Unable to download data from https://rubygems.org/ - SSL_connect retur\nned=1 errno=0 state=SSLv3 read server certificate B: certificate verify failed (\nhttps://api.rubygems.org/specs.4.8.gz)\n\nC:\\Users\\nandell>gem install builder\nERROR:  Could not find a valid gem 'builder' (>= 0), here is why:\n          Unable to download data from https://rubygems.org/ - SSL_connect retur\nned=1 errno=0 state=SSLv3 read server certificate B: certificate verify failed (\nhttps://api.rubygems.org/latest_specs.4.8.gz)\n. ",
    "FlatspinZA": "I tried everything - the only way I could get this working was the manual installation, and that was after having to sort my SSL certificates to install the Bundler gem.\n\nThanks for the help, guys. \n. As far as correcting the native Foundation-Apps installer is concerned, I can only go with narration. http://railsinstaller.org/en Rails Installer installs Bundler on Windows. \n. For anyone battling with the SSL certification problem:\n\nYou need to specify the location of your SSL Certificate.\n\nThe solution is provided here: https://gist.github.com/fnichol/867550\n. I tried everything - the only way I could get this working was the manual installation, and that was after having to sort my SSL certificates to install the Bundler gem.\n\nThanks for the help, guys. \n. As far as correcting the native Foundation-Apps installer is concerned, I can only go with narration. http://railsinstaller.org/en Rails Installer installs Bundler on Windows. \n. For anyone battling with the SSL certification problem:\n\nYou need to specify the location of your SSL Certificate.\n\nThe solution is provided here: https://gist.github.com/fnichol/867550\n. ",
    "cjwilson252": "I've managed to get it running by downgrading my sass to 3.4.7 and it worked, thanks gerrytucker .\n. I've managed to get it running by downgrading my sass to 3.4.7 and it worked, thanks gerrytucker .\n. ",
    "narration-sd": "AntJanus, I reinstalled foundation-apps on Windows 8.1 about 4 hours ago, I think with your changes as it acted differently. This time it worked until the bundle step.\n\nI experimented to see what bundler command was actually available, and found that bundler.bat was.\n\nI changed line 97 of foundation-cli.js as follows, to suit:\n\nvar bundleInstall = ['bundle.bat'];\n\nNow everything works. I could run foundation-apps new myApp, and then after, go to the myApp folder and successfully run foundation-apps watch, which compiled all and launched the localhost:8080 miniserver so could see it.\n\nHope this suggests how you can finish the update, if not just use.\n\nThanks for the work,\nClive\n. Great, Flatspin. \n\ni was thinking this morning that the way Zurb could write code like this to be robust would be to make it adaptive. Instead of assuming executable names, a search could uncover what is actually available. Then plug the values into code like this one.\n\nIt's a tried and true way - a natural language system I wrote for Bell Laboratories worked for an additional 18 years, partly because it was in its framework adaptive this way.\n. @gakimball - good to understand. Of course libsass has had its innings vs. others lately, as you'll know well at Zurb. Frankly the whole arena is fraught, but it is what we have, isn't it ;)  I was starting to agree with going away from Ruby, but frankly it's involved in so many of these tools that if I were doing it, I think I'd rather fish out the variation parts between the Rubys, and adapt as above. Just an opinion.\n\n@AntJanus - in answer, ruby -v says ruby 2.0.0p481 (2014-05-08) [x64-mingw32]. Note the MinGW, which I am running rather than cygwin, on basis of sorting out another one of these layered tool  problems. I suspect the difference in recognizing executables might be at that level, the pseudo-OS, rather than Ruby. Why that Ruby? Its line was recommended I think by Zurb a while ago, and although I saw the local hint that maybe JRuby might work and even downloaded it, I have too many other gems running on this Ruby to want to bother them. Perils of Pauline for anyone who tries.\n\nThen, as above, I'd rather adapt within your Zurb scripts to handle the permuted combinations of pseudo-OS and Ruby arrangements. Just looking for what you need, like an executable name for bundle. It seems likely the most fun and least trouble, and may be thought to be more stable also as the other packages aren't likely to change their ways of working, while swapping out packages as Zurb has been doing on the main Foundation line almost guarantees user shock and troubles, no?\n\np.s. if you did it the adaptive way, the proposed stability of the individual package layer calling conventions might say you could just make a table of the relevant ways to call, based on the environment of  systems. That way you can do what  I did and try things from shell within the environment to discover what's accepted, thus wouldn't have to have seeking code within your script library. Rough but maybe ready enough here?\n. @AntJanus, of course that's so, as far as a table. I was just trying to suggest something easy as an entry point to adaptive approaches. There is of course a 'table of one' at present ;)\n\nDynamic checking of what's available will be the robust approach, seems sure. I think we really need to do things like this to release a dependable product, when it depends on a host of individual and dynamic external tools, especially those that take unusual freedoms because they are not corporate. Also because people are naturally going to have their own mixes of available tools.\n\nGiving something to gain the advantages, and also will help in those last minute times, where quite appreciated that you stuck with it.\n\nCheers from San Diego, environs anyway.\n. Thanks, Geoff.\n\n> On Apr 20, 2015, at 11:21, Geoff Kimball notifications@github.com wrote:\n> \n> This is a somewhat older issue, so I'm going to close it out. The original issue filed has been fixed, and version 1.1 of the CLI, which we published last month, greatly improves the stability and error-handling of the project creation process.\n> \n> If y'alls have any more issues with the CLI in the future, do let us know :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. AntJanus, I reinstalled foundation-apps on Windows 8.1 about 4 hours ago, I think with your changes as it acted differently. This time it worked until the bundle step.\n\nI experimented to see what bundler command was actually available, and found that bundler.bat was.\n\nI changed line 97 of foundation-cli.js as follows, to suit:\n\nvar bundleInstall = ['bundle.bat'];\n\nNow everything works. I could run foundation-apps new myApp, and then after, go to the myApp folder and successfully run foundation-apps watch, which compiled all and launched the localhost:8080 miniserver so could see it.\n\nHope this suggests how you can finish the update, if not just use.\n\nThanks for the work,\nClive\n. Great, Flatspin. \n\ni was thinking this morning that the way Zurb could write code like this to be robust would be to make it adaptive. Instead of assuming executable names, a search could uncover what is actually available. Then plug the values into code like this one.\n\nIt's a tried and true way - a natural language system I wrote for Bell Laboratories worked for an additional 18 years, partly because it was in its framework adaptive this way.\n. @gakimball - good to understand. Of course libsass has had its innings vs. others lately, as you'll know well at Zurb. Frankly the whole arena is fraught, but it is what we have, isn't it ;)  I was starting to agree with going away from Ruby, but frankly it's involved in so many of these tools that if I were doing it, I think I'd rather fish out the variation parts between the Rubys, and adapt as above. Just an opinion.\n\n@AntJanus - in answer, ruby -v says ruby 2.0.0p481 (2014-05-08) [x64-mingw32]. Note the MinGW, which I am running rather than cygwin, on basis of sorting out another one of these layered tool  problems. I suspect the difference in recognizing executables might be at that level, the pseudo-OS, rather than Ruby. Why that Ruby? Its line was recommended I think by Zurb a while ago, and although I saw the local hint that maybe JRuby might work and even downloaded it, I have too many other gems running on this Ruby to want to bother them. Perils of Pauline for anyone who tries.\n\nThen, as above, I'd rather adapt within your Zurb scripts to handle the permuted combinations of pseudo-OS and Ruby arrangements. Just looking for what you need, like an executable name for bundle. It seems likely the most fun and least trouble, and may be thought to be more stable also as the other packages aren't likely to change their ways of working, while swapping out packages as Zurb has been doing on the main Foundation line almost guarantees user shock and troubles, no?\n\np.s. if you did it the adaptive way, the proposed stability of the individual package layer calling conventions might say you could just make a table of the relevant ways to call, based on the environment of  systems. That way you can do what  I did and try things from shell within the environment to discover what's accepted, thus wouldn't have to have seeking code within your script library. Rough but maybe ready enough here?\n. @AntJanus, of course that's so, as far as a table. I was just trying to suggest something easy as an entry point to adaptive approaches. There is of course a 'table of one' at present ;)\n\nDynamic checking of what's available will be the robust approach, seems sure. I think we really need to do things like this to release a dependable product, when it depends on a host of individual and dynamic external tools, especially those that take unusual freedoms because they are not corporate. Also because people are naturally going to have their own mixes of available tools.\n\nGiving something to gain the advantages, and also will help in those last minute times, where quite appreciated that you stuck with it.\n\nCheers from San Diego, environs anyway.\n. Thanks, Geoff.\n\n> On Apr 20, 2015, at 11:21, Geoff Kimball notifications@github.com wrote:\n> \n> This is a somewhat older issue, so I'm going to close it out. The original issue filed has been fixed, and version 1.1 of the CLI, which we published last month, greatly improves the stability and error-handling of the project creation process.\n> \n> If y'alls have any more issues with the CLI in the future, do let us know :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ",
    "tnedich": "I have installed dependencys manualy:\nnpm install\nbower install-\nbundle   ---------------- > SSL certification problem\n\nThen used:\n\n> gem install sass -v \"3.4.7\"\n\nNow everything works !  :) \n. Win 7 Ultimate 64-bit\nio.js platform\n\n> foundation-cli@1.0.4 test C:\\Users\\Admin\\Desktop\\zurb-test\\foundation-cli\n> ./bin/cli.js new test\n> \n> '.' is not recognized as an internal or external command,\n> operable program or batch file.\n> npm ERR! Test failed.  See above for more details.\n. Now it starts and there is one red mark :)\n\nWin 7 Ultimate 64-bit\nio.js platform\n\n> \u2717 Ruby gems not installed. Try running bundle manually.\n. I have installed dependencys manualy:\nnpm install\nbower install-\nbundle   ---------------- > SSL certification problem\n\nThen used:\n\n> gem install sass -v \"3.4.7\"\n\nNow everything works !  :) \n. Win 7 Ultimate 64-bit\nio.js platform\n\n> foundation-cli@1.0.4 test C:\\Users\\Admin\\Desktop\\zurb-test\\foundation-cli\n> ./bin/cli.js new test\n> \n> '.' is not recognized as an internal or external command,\n> operable program or batch file.\n> npm ERR! Test failed.  See above for more details.\n. Now it starts and there is one red mark :)\n\nWin 7 Ultimate 64-bit\nio.js platform\n\n> \u2717 Ruby gems not installed. Try running bundle manually.\n. ",
    "Nielstm": "@gerrytucker @benjaminzanatta @dhye360 @gakimball \n\nIk had the same error on Windows:\nError: spawn ENOENT\n    at errnoException (child_process.js:1011:11)\n\nThe solution for me was to install git for Windows on http://git-scm.com/ en restart my pc.\n. @gerrytucker @benjaminzanatta @dhye360 @gakimball \n\nIk had the same error on Windows:\nError: spawn ENOENT\n    at errnoException (child_process.js:1011:11)\n\nThe solution for me was to install git for Windows on http://git-scm.com/ en restart my pc.\n. ",
    "jgamao": "I am using Ubuntu 14.04 LTS in releasing my game but I also have this error.\n\nI am also using nodejs.. Can you help me to solve this?\n. I am using Ubuntu 14.04 LTS in releasing my game but I also have this error.\n\nI am also using nodejs.. Can you help me to solve this?\n. ",
    "fhassan2014": "Here is the error for above test install.\n\n![error](https://cloud.githubusercontent.com/assets/8864393/6381120/c503e2e0-bd0c-11e4-8333-84bb038bbed2.jpg)\n. Hi There, \n\nI'm new on Foundation-apps, Creating new app and install dependencies all are fine but when I gulp(build) the project it gives me some errors and this css file \" assets/css/app.css \" is missing. \n\nhere are errors while building project.\n\n![image](https://cloud.githubusercontent.com/assets/8864393/6381263/c36261b8-bd0d-11e4-86cb-03734030e096.png)\n. @gakimball here I tested again. looks fine your test build:\n\n![image](https://cloud.githubusercontent.com/assets/8864393/6381339/6b20f54a-bd0e-11e4-9bf7-cf1d9fb330f6.png)\n. Hi @gakimball getting these errors while watch command. Any suggestion would be appreciated. Need to test one project to see how Foundation for apps works. Thanks.\n\n![image](https://cloud.githubusercontent.com/assets/8864393/6396097/98b17c04-bdaa-11e4-95d8-7c28073269f7.png)\n. @gakimball now getting this final page. Not sure it suppose to be like this. \n![result](https://cloud.githubusercontent.com/assets/8864393/6398770/e1d7479a-bdbb-11e4-9221-a1b89e343dd5.jpg)\n\nand got this error before building project:\n![image](https://cloud.githubusercontent.com/assets/8864393/6398790/0f17a376-bdbc-11e4-8b52-ea470e75f0b7.png)\n\nBefore all this I had this Warning Engin: foundation-cli@1.0.4: wanted: <\"node\":\">=0.10.33\"> <current: 0.10.32, npm: 1.4.28\n\nI hope you'll find any solution on this. I also tried running gulp and gave me this screen: \n![image](https://cloud.githubusercontent.com/assets/8864393/6398861/8ee3701c-bdbc-11e4-85d5-805635101a3c.png)\n. @gakimball Thanks! it's fine, the only thing lift is browser is looking these missing files. any thoughts.\n\n![result](https://cloud.githubusercontent.com/assets/8864393/6398998/b1177916-bdbd-11e4-9650-8d4d6518577f.jpg)\n. @gakimball Yes. Any solution.\n. Here is the error for above test install.\n\n![error](https://cloud.githubusercontent.com/assets/8864393/6381120/c503e2e0-bd0c-11e4-8333-84bb038bbed2.jpg)\n. Hi There, \n\nI'm new on Foundation-apps, Creating new app and install dependencies all are fine but when I gulp(build) the project it gives me some errors and this css file \" assets/css/app.css \" is missing. \n\nhere are errors while building project.\n\n![image](https://cloud.githubusercontent.com/assets/8864393/6381263/c36261b8-bd0d-11e4-86cb-03734030e096.png)\n. @gakimball here I tested again. looks fine your test build:\n\n![image](https://cloud.githubusercontent.com/assets/8864393/6381339/6b20f54a-bd0e-11e4-9bf7-cf1d9fb330f6.png)\n. Hi @gakimball getting these errors while watch command. Any suggestion would be appreciated. Need to test one project to see how Foundation for apps works. Thanks.\n\n![image](https://cloud.githubusercontent.com/assets/8864393/6396097/98b17c04-bdaa-11e4-95d8-7c28073269f7.png)\n. @gakimball now getting this final page. Not sure it suppose to be like this. \n![result](https://cloud.githubusercontent.com/assets/8864393/6398770/e1d7479a-bdbb-11e4-9221-a1b89e343dd5.jpg)\n\nand got this error before building project:\n![image](https://cloud.githubusercontent.com/assets/8864393/6398790/0f17a376-bdbc-11e4-8b52-ea470e75f0b7.png)\n\nBefore all this I had this Warning Engin: foundation-cli@1.0.4: wanted: <\"node\":\">=0.10.33\"> <current: 0.10.32, npm: 1.4.28\n\nI hope you'll find any solution on this. I also tried running gulp and gave me this screen: \n![image](https://cloud.githubusercontent.com/assets/8864393/6398861/8ee3701c-bdbc-11e4-85d5-805635101a3c.png)\n. @gakimball Thanks! it's fine, the only thing lift is browser is looking these missing files. any thoughts.\n\n![result](https://cloud.githubusercontent.com/assets/8864393/6398998/b1177916-bdbd-11e4-9650-8d4d6518577f.jpg)\n. @gakimball Yes. Any solution.\n. ",
    "circlingthesun": "The only issue that I've experienced was that `map-serialize` returns double quoted strings in libsass and single quoted strings in ruby-sass. Are there many other issues?\n. Thanks! `@if not(variable)` works just as well. There is only one instance of `@if not` in `_button-group.scss`.  \n. +1 for dropping it\n\nOn Sun, 8 Feb 2015 6:50 pm Karl Johan Kleist notifications@github.com\nwrote:\n\n> The Foundation 5 CLI gives the user the option to pick their compiler.\n> Would people care if we dropped that choice and just made libsass the\n> default?\n> \n> Just drop it. Defaulting to libsass is a major step forward for ZFA indeed.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/209#issuecomment-73419127\n> .\n. +1\n. They seem to be working towards this. See #209\n. +1 for ng-animate\n. +1\n. This is because the depricated `replace: true` option (see: https://docs.angularjs.org/api/ng/service/$compile) is used on the off canvas directive (at https://github.com/zurb/foundation-apps/blob/master/js/angular/components/offcanvas/offcanvas.js#L18) and you likely modified the template at `components/offcanvas/offcanvas.html` to have more than one top level element.\n. Well, if you didn't modify the template then the error shouldn't occur. You could be missing a closing tag somewhere.\n. Ui router supports resolve. This should not be an issue. Unless I'm missing\nsomething.\n\nOn Thu, 15 Jan 2015 2:42 pm Felipe Marcos notifications@github.com wrote:\n\n> I'm look for a way to do that as well\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/387#issuecomment-70080161\n> .\n. Having used other angular UI modules, its indeed not very intuitive needing a `foundationApi` service is for component specific actions. What makes most sense to me is exposing component specific functionality in a separate service. For instance a `fzModal` service could simply have an `activate` member. Then as you suggest  `foundationModal` could depend on `foundationApi`. The same would apply for say `zfNotifications`.\n. Yeah, that's exactly what I meant. Sorry for being unclear. Exposing components in a separate service seems like a much more angular way of doing things. The way things are now feels reminiscent to the way things work in Foundation 5/JQuery. Just my 2c.\n. Well, you could still dependency inject the central service into each component service and keep the way components talk to each other. For backwards compatibility I can see why you would prefer keeping the current architecture. However if you intend to create a proxy for communicating with the central service, perhaps its a good idea to create a decentralised facade and give every component its own proxy.\n. So if I read this right this will allow you to dynamically create a modal and let the calling code open and close the modal. What if I need the modal to close itself from a button inside the modal or something more complex? One way of allowing that to happen is setting `deactivate` function on the scope before linking the modal. This way I can call ``$scope.deactivate()` inside the modal.\n. It would also be nice to return results from a modal. You can do this by having the `activate()` function return a promise and have the `dismiss(result)` function take one parameter that resolves that promise.\n. If I had to select my favourite color inside the modal I need a way of returning it to the calling code.\n. It would be nice to do\n\n```\nmyColorPickerModal.activate().then(function(favouriteColour){\n...\n});\n```\n. That looks good. You could also add the code from ModalFactory into the adaptor.\n. @joshuajohnson814 +1\n. I can't speak for others but I have no need for 3rd party dependencies to\nbe bundled with foundation. In general its often problematic if they are.\nSurely people that have trouble with dependencies are the same people that\nwill be using the foundation boilerplate which do deal with them?\n\nOn Tue, 3 Feb 2015 7:57 pm Geoff Kimball notifications@github.com wrote:\n\n> @joshuajohnson814 https://github.com/joshuajohnson814 Ah, okay. In that\n> case, what would be the best way to package the other dependencies for\n> distribution? Maybe just bundle all of the external libraries into one file?\n> \n> Obviously wiredep helps with this dependency resolution, but not everyone\n> will be using that. Some folks will just want to drop in finished files to\n> get going.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/428#issuecomment-72700429\n> .\n. +1\n. Not in all browsers. Last time I checked it only worked on Chrome.\n. Also, if every angular library implemented its own pub/sub system, using more than a few in a project would quickly become a headache.\n. That error happens when the template specified for directive does not have\na single root and the deprecated `replace: true` option is used.\n\nOn Thu, Mar 19, 2015 at 10:42 PM Geoff Kimball notifications@github.com\nwrote:\n\n> Can you try using the directive as an attribute instead of an element?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/542#issuecomment-83755197\n> .\n. Well, there is an quick way to find out. Inject `$templateCache` and then run `console.log($templateCache.get('components/offcanvas/offcanvas.html'))`\n. Yeah, ng-nnotate would fix it. But you could also do what is suggested under the 'A Note on Minification' section at https://docs.angularjs.org/tutorial/step_05\n. You can only inject providers in the config function. Inject it to a controller or run function.\n. It may be worth placing the sniffing code elsewhere as not everyone will use foundation's app.js.\n. Try: https://www.npmjs.com/package/gulp-autoprefixer\n\nOn Sat, 20 Feb 2016, 8:22 p.m. Andrey Konstantinov notifications@github.com\nwrote:\n\n> Please, help me to understand one thing. Only in case you have time for\n> it.\n> \n> The page http://foundation.zurb.com/apps/docs/#!/off-canvas works perfect\n> on all my mobile devices.\n> But when I check out the latest foundation for apps version I have broken\n> layout (on some mobile browsers) and widgets because of missing of\n> vendor-prefixed css rules like:\n> -webkit-transform: translateX(-100%);\n> \n> [image: _067]\n> https://cloud.githubusercontent.com/assets/1685654/13198335/2bbfb6dc-d817-11e5-9f94-eb132c5a761c.png\n> \n> What should I do - manually extend your scss files and use them, or wait\n> until you will publish the same version as used for\n> http://foundation.zurb.com/apps/docs/.\n> \n> Thanks in advance.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/779.\n. I've ported most of angular-foundation to foundation 6: http://circlingthesun.github.io/angular-foundation-6/\n. @napcat, most angular-foundation components have now been ported to angular-foundation-6. Only ones outstanding is interchange and typeahead. Typeahead was never implemented in the original foundation and interchange should not be big deal. I ported angular-foundation for use in bookem.co.za. I've been running it in production for the last 2 weeks with only minor issues thats now been fixed.\n\nIf you are looking for another framework, angular-bootstrap (https://angular-ui.github.io/bootstrap/) is quite solid. I can't comment on how malleable the bootstrap css is though.\n. The only issue that I've experienced was that `map-serialize` returns double quoted strings in libsass and single quoted strings in ruby-sass. Are there many other issues?\n. Thanks! `@if not(variable)` works just as well. There is only one instance of `@if not` in `_button-group.scss`.  \n. +1 for dropping it\n\nOn Sun, 8 Feb 2015 6:50 pm Karl Johan Kleist notifications@github.com\nwrote:\n\n> The Foundation 5 CLI gives the user the option to pick their compiler.\n> Would people care if we dropped that choice and just made libsass the\n> default?\n> \n> Just drop it. Defaulting to libsass is a major step forward for ZFA indeed.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/209#issuecomment-73419127\n> .\n. +1\n. They seem to be working towards this. See #209\n. +1 for ng-animate\n. +1\n. This is because the depricated `replace: true` option (see: https://docs.angularjs.org/api/ng/service/$compile) is used on the off canvas directive (at https://github.com/zurb/foundation-apps/blob/master/js/angular/components/offcanvas/offcanvas.js#L18) and you likely modified the template at `components/offcanvas/offcanvas.html` to have more than one top level element.\n. Well, if you didn't modify the template then the error shouldn't occur. You could be missing a closing tag somewhere.\n. Ui router supports resolve. This should not be an issue. Unless I'm missing\nsomething.\n\nOn Thu, 15 Jan 2015 2:42 pm Felipe Marcos notifications@github.com wrote:\n\n> I'm look for a way to do that as well\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/387#issuecomment-70080161\n> .\n. Having used other angular UI modules, its indeed not very intuitive needing a `foundationApi` service is for component specific actions. What makes most sense to me is exposing component specific functionality in a separate service. For instance a `fzModal` service could simply have an `activate` member. Then as you suggest  `foundationModal` could depend on `foundationApi`. The same would apply for say `zfNotifications`.\n. Yeah, that's exactly what I meant. Sorry for being unclear. Exposing components in a separate service seems like a much more angular way of doing things. The way things are now feels reminiscent to the way things work in Foundation 5/JQuery. Just my 2c.\n. Well, you could still dependency inject the central service into each component service and keep the way components talk to each other. For backwards compatibility I can see why you would prefer keeping the current architecture. However if you intend to create a proxy for communicating with the central service, perhaps its a good idea to create a decentralised facade and give every component its own proxy.\n. So if I read this right this will allow you to dynamically create a modal and let the calling code open and close the modal. What if I need the modal to close itself from a button inside the modal or something more complex? One way of allowing that to happen is setting `deactivate` function on the scope before linking the modal. This way I can call ``$scope.deactivate()` inside the modal.\n. It would also be nice to return results from a modal. You can do this by having the `activate()` function return a promise and have the `dismiss(result)` function take one parameter that resolves that promise.\n. If I had to select my favourite color inside the modal I need a way of returning it to the calling code.\n. It would be nice to do\n\n```\nmyColorPickerModal.activate().then(function(favouriteColour){\n...\n});\n```\n. That looks good. You could also add the code from ModalFactory into the adaptor.\n. @joshuajohnson814 +1\n. I can't speak for others but I have no need for 3rd party dependencies to\nbe bundled with foundation. In general its often problematic if they are.\nSurely people that have trouble with dependencies are the same people that\nwill be using the foundation boilerplate which do deal with them?\n\nOn Tue, 3 Feb 2015 7:57 pm Geoff Kimball notifications@github.com wrote:\n\n> @joshuajohnson814 https://github.com/joshuajohnson814 Ah, okay. In that\n> case, what would be the best way to package the other dependencies for\n> distribution? Maybe just bundle all of the external libraries into one file?\n> \n> Obviously wiredep helps with this dependency resolution, but not everyone\n> will be using that. Some folks will just want to drop in finished files to\n> get going.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/428#issuecomment-72700429\n> .\n. +1\n. Not in all browsers. Last time I checked it only worked on Chrome.\n. Also, if every angular library implemented its own pub/sub system, using more than a few in a project would quickly become a headache.\n. That error happens when the template specified for directive does not have\na single root and the deprecated `replace: true` option is used.\n\nOn Thu, Mar 19, 2015 at 10:42 PM Geoff Kimball notifications@github.com\nwrote:\n\n> Can you try using the directive as an attribute instead of an element?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/542#issuecomment-83755197\n> .\n. Well, there is an quick way to find out. Inject `$templateCache` and then run `console.log($templateCache.get('components/offcanvas/offcanvas.html'))`\n. Yeah, ng-nnotate would fix it. But you could also do what is suggested under the 'A Note on Minification' section at https://docs.angularjs.org/tutorial/step_05\n. You can only inject providers in the config function. Inject it to a controller or run function.\n. It may be worth placing the sniffing code elsewhere as not everyone will use foundation's app.js.\n. Try: https://www.npmjs.com/package/gulp-autoprefixer\n\nOn Sat, 20 Feb 2016, 8:22 p.m. Andrey Konstantinov notifications@github.com\nwrote:\n\n> Please, help me to understand one thing. Only in case you have time for\n> it.\n> \n> The page http://foundation.zurb.com/apps/docs/#!/off-canvas works perfect\n> on all my mobile devices.\n> But when I check out the latest foundation for apps version I have broken\n> layout (on some mobile browsers) and widgets because of missing of\n> vendor-prefixed css rules like:\n> -webkit-transform: translateX(-100%);\n> \n> [image: _067]\n> https://cloud.githubusercontent.com/assets/1685654/13198335/2bbfb6dc-d817-11e5-9f94-eb132c5a761c.png\n> \n> What should I do - manually extend your scss files and use them, or wait\n> until you will publish the same version as used for\n> http://foundation.zurb.com/apps/docs/.\n> \n> Thanks in advance.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/779.\n. I've ported most of angular-foundation to foundation 6: http://circlingthesun.github.io/angular-foundation-6/\n. @napcat, most angular-foundation components have now been ported to angular-foundation-6. Only ones outstanding is interchange and typeahead. Typeahead was never implemented in the original foundation and interchange should not be big deal. I ported angular-foundation for use in bookem.co.za. I've been running it in production for the last 2 weeks with only minor issues thats now been fixed.\n\nIf you are looking for another framework, angular-bootstrap (https://angular-ui.github.io/bootstrap/) is quite solid. I can't comment on how malleable the bootstrap css is though.\n. ",
    "listepo": "+1\n. +1\n. thanks for an answer\n. +1\n. +1\n. thanks for an answer\n. ",
    "k-j-kleist": "> The Foundation 5 CLI gives the user the option to pick their compiler. Would people care if we dropped that choice and just made libsass the default?\n\nJust drop it. Defaulting to libsass is a major step forward for ZFA indeed.\n. Has obviously already been taken care of: https://github.com/zurb/foundation-cli/pull/6 (check mark 3).\n. But for God's sake: never, never, never run \"npm update npm -g\" :\n\nhttps://github.com/npm/npm/issues/4099\nhttps://github.com/npm/npm/issues/6247\n. Sorry for misreading you. However:\n\nQuoting from https://docs.npmjs.com/misc/faq:\n\n### How do I update npm?\n\n`npm install npm -g`\n. > The Foundation 5 CLI gives the user the option to pick their compiler. Would people care if we dropped that choice and just made libsass the default?\n\nJust drop it. Defaulting to libsass is a major step forward for ZFA indeed.\n. Has obviously already been taken care of: https://github.com/zurb/foundation-cli/pull/6 (check mark 3).\n. But for God's sake: never, never, never run \"npm update npm -g\" :\n\nhttps://github.com/npm/npm/issues/4099\nhttps://github.com/npm/npm/issues/6247\n. Sorry for misreading you. However:\n\nQuoting from https://docs.npmjs.com/misc/faq:\n\n### How do I update npm?\n\n`npm install npm -g`\n. ",
    "DiodeDan": "Libsass all the way. +1 for no more ~ 20 second sass compile times! \n\nWhen can we start using this? Will it be in v 1.0.3?\n. Libsass all the way. +1 for no more ~ 20 second sass compile times! \n\nWhen can we start using this? Will it be in v 1.0.3?\n. ",
    "jeroennoten": "Yep, I also thought about that, but it is more work than just including everything. And I did not discover any problems, I can just set up routes. I'm not sure why it wouldn't work, because it does not add routes when you do not use dynamic routing.\n. Yeah, just like basically any 3rd party AngularJS plugin/module/..\n. Totally agree with @davidgeary. Today, I tried to add Foundation For Apps as a dependency for an existing project, that already had a number of JavaScript files, SCSS files and HTML templates. It also had already a Gulpfile that builds everything into a `dist` directory.\n\nActually it worked out pretty fine, I added `application` as a dependency to my existing angular main module. And I looked in the Gulpfile of foundations-apps-template which JS dependencies I had to add to my Gulpfile. Finally, I imported the `foundation.scss` file into my main SCSS file and also copied the `_settings.scss` file from foundations-apps-template and included it in my main SCSS file. It was not hard to figure all this out by myself, but it would be very nice if this was documented or more automated.\n\nThe biggest disadvantage is that the name of the foundation module is `application`, because now my main module called `app` depends on `application`. But as long as you do not use this name as your own main module, it works.\n\nI have not tested everything, but I found no problems so far. I did not include dynamic routing in my Gulpfile, so that will obviously not work. But I do not need that, so that is fine for me (for now at least).\n. For HTML that consists of more than a few lines, it is advisable to use a separate HTML template file. What I always do is placing the HTML and JavaScript within the same folder in order to improve reusability. John Papa has a very good AngularJS style guide, that also discuss folder structure (points 14 and 15): https://github.com/johnpapa/angularjs-styleguide\n. Yep, I also thought about that, but it is more work than just including everything. And I did not discover any problems, I can just set up routes. I'm not sure why it wouldn't work, because it does not add routes when you do not use dynamic routing.\n. Yeah, just like basically any 3rd party AngularJS plugin/module/..\n. Totally agree with @davidgeary. Today, I tried to add Foundation For Apps as a dependency for an existing project, that already had a number of JavaScript files, SCSS files and HTML templates. It also had already a Gulpfile that builds everything into a `dist` directory.\n\nActually it worked out pretty fine, I added `application` as a dependency to my existing angular main module. And I looked in the Gulpfile of foundations-apps-template which JS dependencies I had to add to my Gulpfile. Finally, I imported the `foundation.scss` file into my main SCSS file and also copied the `_settings.scss` file from foundations-apps-template and included it in my main SCSS file. It was not hard to figure all this out by myself, but it would be very nice if this was documented or more automated.\n\nThe biggest disadvantage is that the name of the foundation module is `application`, because now my main module called `app` depends on `application`. But as long as you do not use this name as your own main module, it works.\n\nI have not tested everything, but I found no problems so far. I did not include dynamic routing in my Gulpfile, so that will obviously not work. But I do not need that, so that is fine for me (for now at least).\n. For HTML that consists of more than a few lines, it is advisable to use a separate HTML template file. What I always do is placing the HTML and JavaScript within the same folder in order to improve reusability. John Papa has a very good AngularJS style guide, that also discuss folder structure (points 14 and 15): https://github.com/johnpapa/angularjs-styleguide\n. ",
    "liamfd": "I second this. It feels strange to me that the bower component wants to be driving the app. Doesn't not playing nicely with existing apps somewhat defeat the point of a component? It would be nice if it just worked like the Angular Foundation project, which lets you include a single file and then import the service, with the routing stuff maybe broken out as a second, optional service or component.\n. Hey guys, sorry, didn't mean to orphan this. It turns out I had missed the inliner when converting the gulpfile to a gruntfile, so some of the transitions weren't working properly. Didn't figure it out until I tried running my app in safari and noticed a lot of layout issues.\n\nAnyways, apologies, this was on my end.\n. Unfortunately no, I was working with a pre-existing project and didn't need them, so I just did the sass compilation, copying, uglifying and prefixing.\n\nA section in the docs would be useful, or even an example Gruntfile (mine works, though there's probably some things that could be optimized.) I can post a cleaned up version of mine if that's helpful.\n. Just curious, will this be merged in for a future release? It seems to work well, and not having callbacks fired when people use the overlay close is somewhat of an issue. Just wondering if I should temporarily just use his fix, or create a directive to handle this case long term.\n. I second this. It feels strange to me that the bower component wants to be driving the app. Doesn't not playing nicely with existing apps somewhat defeat the point of a component? It would be nice if it just worked like the Angular Foundation project, which lets you include a single file and then import the service, with the routing stuff maybe broken out as a second, optional service or component.\n. Hey guys, sorry, didn't mean to orphan this. It turns out I had missed the inliner when converting the gulpfile to a gruntfile, so some of the transitions weren't working properly. Didn't figure it out until I tried running my app in safari and noticed a lot of layout issues.\n\nAnyways, apologies, this was on my end.\n. Unfortunately no, I was working with a pre-existing project and didn't need them, so I just did the sass compilation, copying, uglifying and prefixing.\n\nA section in the docs would be useful, or even an example Gruntfile (mine works, though there's probably some things that could be optimized.) I can post a cleaned up version of mine if that's helpful.\n. Just curious, will this be merged in for a future release? It seems to work well, and not having callbacks fired when people use the overlay close is somewhat of an issue. Just wondering if I should temporarily just use his fix, or create a directive to handle this case long term.\n. ",
    "gabysbrain": "Sure, that's easy to change.  However, the parameter is called $direction in grid-orient.  Shouldn't the parameter name be consistent across the 3 mixins?  Would you prefer $orientation or $direction?\n. ok, sounds good.\n. Sure, that's easy to change.  However, the parameter is called $direction in grid-orient.  Shouldn't the parameter name be consistent across the 3 mixins?  Would you prefer $orientation or $direction?\n. ok, sounds good.\n. ",
    "imaginethepoet": "I had the same issue. It seems like a step may be missing from the instructions. \n. I had the same issue. It seems like a step may be missing from the instructions. \n. ",
    "shanecarmody": "@gakimball I usually use `sudo npm install`. I will reconfigure Node and report back here to tell you if it works.\n\nThanks for your help.\n. @gakimball yeah I ran `sudo npm install` when I was in the project directory basically doing what @AntJanus suggested to do and it installed everything fine. Thanks.\n\nShould this be added as an extra step in the README or should the node modules be installed when `npm start` or `foundation-apps watch` are run?\n. @gakimball I usually use `sudo npm install`. I will reconfigure Node and report back here to tell you if it works.\n\nThanks for your help.\n. @gakimball yeah I ran `sudo npm install` when I was in the project directory basically doing what @AntJanus suggested to do and it installed everything fine. Thanks.\n\nShould this be added as an extra step in the README or should the node modules be installed when `npm start` or `foundation-apps watch` are run?\n. ",
    "Edward-Shaw": "\" Whenever you see a \"Cannot find module\" error, it means you're missing an npm package, so you can run npm install to get the package.\"\n. \" Whenever you see a \"Cannot find module\" error, it means you're missing an npm package, so you can run npm install to get the package.\"\n. ",
    "jahtalab": "could you give an estimate for when ril direction will be supported.\nalso I'm willing to contribute.\n. could you give an estimate for when ril direction will be supported.\nalso I'm willing to contribute.\n. ",
    "Nirlah": "Yep, that fixed it.\nThanks :smile:\n. Yep, that fixed it.\nThanks :smile:\n. ",
    "stryju": "just FYI:\n\nthis is the first of few PRs i want to submit - just wanted to see if they would make sense :-)\n. @AntJanus \n\nre1: no .jshint present, so didn't know what the rules were :-) i'd appreciate adding .jshint file to the repo\n\nre2: understand - when will the process start?\n\nre3: I would strongly advise to user `this` for controllers, as multiple controllers sharing context could mess things up. it also keeps the logic separated. I go with simple rule - $scope for any data that is \"safe\" to keep \"public\" for controllers to share, controller for any logic. The developer should be aware of the context and scoping itself, so i don't see using `this` as any threat, as long as you know what you're doing.\n\nre4: didn't know about that ;-)\n. a thing to add @ re3\n\nwhen you declare `controllerAs`, the controller will be assigned to given name in the scope, so given controller looking like so:\n\n``` js\nfunction someCtrl($scope) {\n  this.foo = function (xx) {\n    $scope.foo = xx;\n  };\n}\n```\n\nand directive `foo` looking like so:\n\n``` js\n{\n  // ...\n  controller: someCtrl,\n  controllerAs: 'FooCtrl'\n}\n```\n\none can use it like so:\n\n``` html\n<p ng-bind=\"foo\"></p>\n<button type=\"button\" ng-click=\"FooCtrl.foo('hello')\">set foo</button>\n```\n\nas you can see, `$scope.foo` and `controller.foo` are (and most likely should be) two different things.\n\n---\n\nsome good reasons for using that:\nhttps://github.com/johnpapa/angularjs-styleguide#controlleras-with-vm\nhttps://github.com/toddmotto/angularjs-styleguide#controllers\n. just to be sure - what do we do with `$scope vs this` topic?\n. If I may chime in for a sec\n\nIMO it's wise to take single-responsibility approach, when it comes to defining directives:\n- if directive **creates** a context, it should be an `Element` directive,\n- if it **extends** functionality, it should be an `Attribute` directive.\n\nWDYT?\n. can you create a plunker with described behavior? from my experience, mixed works just fine :-)\n. In  the worst case scenario, you can create a \"proxy directive\", like so:\n\n``` js\ndirective('foo', function () {\n  return {\n    restrict : 'A',\n    template : '<foo prop=\"foo\">...</foo>',\n    scope : {\n      foo : '=',\n      // ...\n    },\n    // ...\n  }\n})\n```\n\nbut creating an isolated scope for Attribute directives is not \"ideal\"...\n. :+1: \n\n---\n- [x] add `.jshintrc` file to provide global hint style\n- [ ] define directory structure\n- [ ] strict mode\n- [ ] IIFE + function declarations\n- [ ] usage of `require` for directives, where it makes sense\n. also, a typo\n\n`Tod Motto`, not `Todd Mottor` ;-)\n. nice work!\n\ni'm a bit on the fence with the namespace of `foundation.components`\n\ni'd go with something like:\n\nglobal: `foundation`\n\n`foundation.core`\n`foundation.accordion`\n`foundation.modal`\n...\n\nWDYT?\n. @gakimball a service would suit best for that imo, maybe a part of `foundation.core` module :-)\n. I'd try to stay away from creating `*.services`, `*.factories`, `*.*-ies` modules, tbh\n\n`*.core` says a bit more and all the core services can be a part of this module.\n. don't merge it into master yet :-)\n. hehe - we're here to help, if you need some ;-)\n\ngoing over the code - good transfer, but still way to go - esp in the controllers-land ;-)\n. that calls for `minor` bump, at least ;-)\n. can't find the issue, @japhar81 - will check out later :)\n. @japhar81 it seems that the issue you're having is related to `mqInit.init();` call - this fails, not your tests :-)\n. Hm, did you try using the [`$animate`](https://docs.angularjs.org/api/ngAnimate/service/$animate) service directly?\n\nLooks to me like `$animate.addClass`,  `$animate.removeClass` and `$animate.setClass` would solve most of your issues here (even when classes were to be defined dynamically).\n\nDo you think creating a feature branch would make sense here? We could address your points there and maybe remove the `animate` service, thus reducing the codebase :-)\n\nWDYT?\n. it does waaay more than just add/remove class :-)\n. quick question regarding the 'animate' service's [timeout](https://github.com/zurb/foundation-apps/blob/master/js/angular/services/foundation.core.js#L250)\n\nwhy the 3000? will any animation that goes beyond 3s be cut off @ ~3000ms? :-)\n. i think I've also found a scope leakage (from state to scope)...\n. check out https://github.com/stryju/foundation-apps/commit/96df886cf5d4eb4743d9998df236608487868c20\n\njust make sure your animations follow `addClass` naming convention\n\nsample animation class:\n\n``` scss\n\n$duration: 2000ms;\n\n.getIn-add {\n  position: absolute;\n  transition: 0 all; // instant styles\n\n  opacity: 0;\n  transform: translate3d(0, -50%, 0);\n\n  &.getIn-add-active {\n    transition: $duration cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n\n    opacity: 1;\n    transform: translate3d(0, 0%, 0);\n  }\n}\n\n.getIn {\n  opacity: 1;\n}\n\n\n.getOut-add {\n  position: absolute;\n  transition: 0 all; // instant styles\n\n  opacity: 1;\n  transform: translate3d(0, 0%, 0);\n\n  &.getOut-add-active {\n    transition: $duration cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n\n    opacity: 0;\n    transform: translate3d(0, 50%, 0);\n  }\n}\n\n.getOut {\n  opacity: 0;\n}\n```\n. this was just to show that's possible and with fairly little effort. I'd dive a bit deeper and see how we can tackle that so:\n- only states are affected and follow state-defined classes for animations\n- no state data leaks to state\n\nWDYT?\n\n---\n\n**currently**, the `.[animation]-add` and `.[animation]-add-active` is required only for the \"hacky\" states transition\n\nthe other animations stay intact\n. also, my point is: we should not duplicate the work that's already been done :)\n. what i mean is that the current solution for state transitions is \"not ideal\"\n\nthe way i see it, we have two (if not more) options:\n- the proposed one (not ideal either)\n- dig deeper into `uiRouter` and find a way to add given class to state's element - this will follow normal `$animate.enter()` behavior, birds will sing, rainbows... you get the picture ;-)\n\nI just wanted to check if going further makes sense - maybe you had more reasons behind your own \"animate\" solutions\n\n---\n\nnot a huge fan of the `animation` solution - I'd go for tighter coupling of `ui-view` life-cycle and the animations\n. @AntJanus \nand to elaborate on my 2nd bullet-point:\n\nadd following snippet to any of your \"states\":\n\n``` html\n{{ vars | json }}\n```\n\neach state should use it's own \"data\" property, not to pollute the scope (ofc, we need to cater for data's inheritance, but that we can take care of in your \"states builder\")\n. @gakimball I'm aiming for little to no changes in your current styles (maybe a small reduction, if possible)\n. well, to be honest\n\n`ng-enter` == `X-add`\n`ng-enter-active` == `X-add-active`\n\n`X` - unique style, that can have it's own additional magic\n\n---\n\nif bad comes to worse, all you would need to do is to add styles like\n\n```\nui-view, [ui-view] {\n // -add classes magic\n}\n```\n\nthis might bloat the output, tho\n. :+1: but if my other solution won't work (and I feel it will)\n. @AntJanus I'm thinking about writing a small directive that would pair with `ui-view` directive (`fa-view`?) that would use the given animation classes for given state - WDYT?\n. @gakimball  @AntJanus  we can make \"the hack\" work with `-remove` - simple change for \"remove\" on custom animation\n\na \"normal\" timeline of toggling class with `$animate`:\n\nadd:\n- (stop, no `X` class)\n- `ng-animate`\n- `ng-animate X-add` (plain added class)\n- `ng-animate X-add X-add-active` (transition)\n- `X` (stop, class `X` added)\n\nremove:\n- `X` (stop, `X` class)\n- `X ng-animate`\n- `X ng-animate X-remove` (plain added/removed class)\n- `ng-animate X-remove X-remove-active` (transition)\n- (stop, class `X` removed)\n. @davidkpiano I think that you are missing the core concept of the issue at hand :-)\n\nit's about custom animations for states (each state should have possibility to define it's own animation class for showing and hiding respectivelly) @ ui router - please read the thread first ;-)\n. ok, so here's my take:\n\nhttps://github.com/stryju/foundation-apps/commit/4ddfbfbeeae27fc9fd5db37098d1b2e7f06ce226\n- dropped the animation\n- augmented the uiView directive\n\nhttps://github.com/stryju/foundation-apps/commit/5a75a2415e2ea7cdb629bb1712dbc91c5ffa14ea\n- changed the way animations are bound to the state\n\nso the \"new\" form of animation definitions should look like:\n\n``` js\n{\n  url : '/greetings',\n  template : '<h1>hi there</h1>',\n  animation : {\n    enter : 'fadeIn',\n    leave : 'zoomOut'\n  }\n}\n```\n\nlet me know if that works for you\n. https://github.com/zurb/foundation-apps/pull/330\n. on the side-note: this repo is in a **dire** need for tests... big changes require integrity :)\n. any feedback is greatly appreciated :-)\n. ui router uses `$animate.enter()` and `$animate.leave()` so no css changes needed, as long as they follow the normal `ng-enter` / `ng-leave` structure :)\n. _off-topic_:\n\nMaybe it would be a wise idea to make all the angular-related animations a separate module or something?\nAs I understand, there will be different flavors of `foundation-apps` (react, ember, ...) and having one huge css file with all the flavors of animations (class names and so on) might generate quite an overhead\n. when testing on local foundation-apps instance i didn't come across those issues...\n\ncan you prepare a small repo / plunker with the code?\n. sorry for heavy gifs - let me know, when i can remove them\n\n---\n\ntested on chrome, firefox, safari (os x)\n\n---\n\ntested animation:\n\n``` scss\n\n$duration: 2000ms;\n\n.getIn.ng-enter {\n  transition: $duration cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n\n  position: absolute;\n  opacity: 0;\n  transform: translate3d(0, -50%, 0);\n\n  &.ng-enter-active {\n    opacity: 1;\n    transform: translate3d(0, 0%, 0);\n  }\n}\n\n.getOut.ng-leave {\n  transition: $duration cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n\n  position: absolute;\n  opacity: 1;\n  transform: translate3d(0, 0%, 0);\n\n  &.ng-leave-active {\n    opacity: 0;\n    transform: translate3d(0, 50%, 0);\n  }\n}\n```\n. trying to run docs locally - failing @ sass... :-|\n\ni keep getting \n\n```\nError: app.scss:14:21: Unexpected { in decls\n```\n\neven with empty `app.scss` file :O\n. ok, that worked - ~~somehow animations are not being merged~~...\n\ngot it\n. :+1: that's the way to go\n\njust be careful with `ng-if` - it can cause a weird jank on some directives :-)\n. ok, so got the animations up and running - smooth...\n\nbut the issue is with the animated elements - fadeout leaves some element visible (style override, it seems)\n. ![f-apps-3](https://cloud.githubusercontent.com/assets/25367/5493210/e61c0796-86e8-11e4-8a41-2e94bf641d15.gif)\n\nthat's with manual class toggle...\n\nadded `ng-leave ng-leave-active`\n\n---\n\ncc @gakimball \n. this was a view (and view IS a component :wink:) animation - elements that are left seem to break the animation :-)\n\ntake a look at the frame with selector on top :-)\n. set the `fadeOut` animation for motionUi page and observe what happens when transitioning FROM that page (that's the gif I've attached)\n\nonly text elements don't fade out (weirdly)\n. keep in mind, that the way `ui.router`'s `uiView` directives work is that it creates a new `uiView` element BEFORE the current view, like so:\n\n### state1 idle\n\n``` html\n<uiView>state1</uiView>\n```\n\n### state2 loading, state1 unloading\n\n``` html\n<uiView class=\"ng-animate ng-enter\">state2</uiView>\n<uiView class=\"ng-animate ng-leave\">state1</uiView>\n```\n\n### state 2 loaded, state1 unloaded\n\n``` html\n<uiView class=\"ng-animate ng-enter ng-enter-active\">state2</uiView>\n<uiView class=\"ng-animate ng-leave ng-leave-active\">state1</uiView>\n```\n\n### state 2 idle\n\n``` html\n<uiView>state2</uiView>\n```\n\n---\n\nso what you might be referring to is the fact, that the state that's being animated out jumps below the new one, which is not animated - hm?\n. what's more, if transitions take, let's say `1s`, and you switch between states 5 times within this `1s`, it will create that many `ngView`s and just let them animate properly\n\nso, the DOM-situation like this is possible:\n\n``` html\n<uiView class=\"ng-animate ng-leave ng-leave-active\">state1</uiView>\n<uiView class=\"ng-animate ng-leave ng-leave-active\">state2</uiView>\n<uiView class=\"ng-animate ng-leave ng-leave-active\">state3</uiView>\n<uiView class=\"ng-animate ng-leave ng-leave-active\">state1</uiView>\n<uiView class=\"ng-animate ng-enter ng-enter-active\">state2</uiView> <!-- the state we're finally getting to -->\n```\n. yeah, it is a good thing, but one needs to be aware of that ;-)\n. well, since it's OS, just branch of my branch? :D\n. :+1: \n. sorry, I have not as much time to spare as I'd like to have to spend on this at this time - how's the work going?\n. just FYI:\n\nthis is the first of few PRs i want to submit - just wanted to see if they would make sense :-)\n. @AntJanus \n\nre1: no .jshint present, so didn't know what the rules were :-) i'd appreciate adding .jshint file to the repo\n\nre2: understand - when will the process start?\n\nre3: I would strongly advise to user `this` for controllers, as multiple controllers sharing context could mess things up. it also keeps the logic separated. I go with simple rule - $scope for any data that is \"safe\" to keep \"public\" for controllers to share, controller for any logic. The developer should be aware of the context and scoping itself, so i don't see using `this` as any threat, as long as you know what you're doing.\n\nre4: didn't know about that ;-)\n. a thing to add @ re3\n\nwhen you declare `controllerAs`, the controller will be assigned to given name in the scope, so given controller looking like so:\n\n``` js\nfunction someCtrl($scope) {\n  this.foo = function (xx) {\n    $scope.foo = xx;\n  };\n}\n```\n\nand directive `foo` looking like so:\n\n``` js\n{\n  // ...\n  controller: someCtrl,\n  controllerAs: 'FooCtrl'\n}\n```\n\none can use it like so:\n\n``` html\n<p ng-bind=\"foo\"></p>\n<button type=\"button\" ng-click=\"FooCtrl.foo('hello')\">set foo</button>\n```\n\nas you can see, `$scope.foo` and `controller.foo` are (and most likely should be) two different things.\n\n---\n\nsome good reasons for using that:\nhttps://github.com/johnpapa/angularjs-styleguide#controlleras-with-vm\nhttps://github.com/toddmotto/angularjs-styleguide#controllers\n. just to be sure - what do we do with `$scope vs this` topic?\n. If I may chime in for a sec\n\nIMO it's wise to take single-responsibility approach, when it comes to defining directives:\n- if directive **creates** a context, it should be an `Element` directive,\n- if it **extends** functionality, it should be an `Attribute` directive.\n\nWDYT?\n. can you create a plunker with described behavior? from my experience, mixed works just fine :-)\n. In  the worst case scenario, you can create a \"proxy directive\", like so:\n\n``` js\ndirective('foo', function () {\n  return {\n    restrict : 'A',\n    template : '<foo prop=\"foo\">...</foo>',\n    scope : {\n      foo : '=',\n      // ...\n    },\n    // ...\n  }\n})\n```\n\nbut creating an isolated scope for Attribute directives is not \"ideal\"...\n. :+1: \n\n---\n- [x] add `.jshintrc` file to provide global hint style\n- [ ] define directory structure\n- [ ] strict mode\n- [ ] IIFE + function declarations\n- [ ] usage of `require` for directives, where it makes sense\n. also, a typo\n\n`Tod Motto`, not `Todd Mottor` ;-)\n. nice work!\n\ni'm a bit on the fence with the namespace of `foundation.components`\n\ni'd go with something like:\n\nglobal: `foundation`\n\n`foundation.core`\n`foundation.accordion`\n`foundation.modal`\n...\n\nWDYT?\n. @gakimball a service would suit best for that imo, maybe a part of `foundation.core` module :-)\n. I'd try to stay away from creating `*.services`, `*.factories`, `*.*-ies` modules, tbh\n\n`*.core` says a bit more and all the core services can be a part of this module.\n. don't merge it into master yet :-)\n. hehe - we're here to help, if you need some ;-)\n\ngoing over the code - good transfer, but still way to go - esp in the controllers-land ;-)\n. that calls for `minor` bump, at least ;-)\n. can't find the issue, @japhar81 - will check out later :)\n. @japhar81 it seems that the issue you're having is related to `mqInit.init();` call - this fails, not your tests :-)\n. Hm, did you try using the [`$animate`](https://docs.angularjs.org/api/ngAnimate/service/$animate) service directly?\n\nLooks to me like `$animate.addClass`,  `$animate.removeClass` and `$animate.setClass` would solve most of your issues here (even when classes were to be defined dynamically).\n\nDo you think creating a feature branch would make sense here? We could address your points there and maybe remove the `animate` service, thus reducing the codebase :-)\n\nWDYT?\n. it does waaay more than just add/remove class :-)\n. quick question regarding the 'animate' service's [timeout](https://github.com/zurb/foundation-apps/blob/master/js/angular/services/foundation.core.js#L250)\n\nwhy the 3000? will any animation that goes beyond 3s be cut off @ ~3000ms? :-)\n. i think I've also found a scope leakage (from state to scope)...\n. check out https://github.com/stryju/foundation-apps/commit/96df886cf5d4eb4743d9998df236608487868c20\n\njust make sure your animations follow `addClass` naming convention\n\nsample animation class:\n\n``` scss\n\n$duration: 2000ms;\n\n.getIn-add {\n  position: absolute;\n  transition: 0 all; // instant styles\n\n  opacity: 0;\n  transform: translate3d(0, -50%, 0);\n\n  &.getIn-add-active {\n    transition: $duration cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n\n    opacity: 1;\n    transform: translate3d(0, 0%, 0);\n  }\n}\n\n.getIn {\n  opacity: 1;\n}\n\n\n.getOut-add {\n  position: absolute;\n  transition: 0 all; // instant styles\n\n  opacity: 1;\n  transform: translate3d(0, 0%, 0);\n\n  &.getOut-add-active {\n    transition: $duration cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n\n    opacity: 0;\n    transform: translate3d(0, 50%, 0);\n  }\n}\n\n.getOut {\n  opacity: 0;\n}\n```\n. this was just to show that's possible and with fairly little effort. I'd dive a bit deeper and see how we can tackle that so:\n- only states are affected and follow state-defined classes for animations\n- no state data leaks to state\n\nWDYT?\n\n---\n\n**currently**, the `.[animation]-add` and `.[animation]-add-active` is required only for the \"hacky\" states transition\n\nthe other animations stay intact\n. also, my point is: we should not duplicate the work that's already been done :)\n. what i mean is that the current solution for state transitions is \"not ideal\"\n\nthe way i see it, we have two (if not more) options:\n- the proposed one (not ideal either)\n- dig deeper into `uiRouter` and find a way to add given class to state's element - this will follow normal `$animate.enter()` behavior, birds will sing, rainbows... you get the picture ;-)\n\nI just wanted to check if going further makes sense - maybe you had more reasons behind your own \"animate\" solutions\n\n---\n\nnot a huge fan of the `animation` solution - I'd go for tighter coupling of `ui-view` life-cycle and the animations\n. @AntJanus \nand to elaborate on my 2nd bullet-point:\n\nadd following snippet to any of your \"states\":\n\n``` html\n{{ vars | json }}\n```\n\neach state should use it's own \"data\" property, not to pollute the scope (ofc, we need to cater for data's inheritance, but that we can take care of in your \"states builder\")\n. @gakimball I'm aiming for little to no changes in your current styles (maybe a small reduction, if possible)\n. well, to be honest\n\n`ng-enter` == `X-add`\n`ng-enter-active` == `X-add-active`\n\n`X` - unique style, that can have it's own additional magic\n\n---\n\nif bad comes to worse, all you would need to do is to add styles like\n\n```\nui-view, [ui-view] {\n // -add classes magic\n}\n```\n\nthis might bloat the output, tho\n. :+1: but if my other solution won't work (and I feel it will)\n. @AntJanus I'm thinking about writing a small directive that would pair with `ui-view` directive (`fa-view`?) that would use the given animation classes for given state - WDYT?\n. @gakimball  @AntJanus  we can make \"the hack\" work with `-remove` - simple change for \"remove\" on custom animation\n\na \"normal\" timeline of toggling class with `$animate`:\n\nadd:\n- (stop, no `X` class)\n- `ng-animate`\n- `ng-animate X-add` (plain added class)\n- `ng-animate X-add X-add-active` (transition)\n- `X` (stop, class `X` added)\n\nremove:\n- `X` (stop, `X` class)\n- `X ng-animate`\n- `X ng-animate X-remove` (plain added/removed class)\n- `ng-animate X-remove X-remove-active` (transition)\n- (stop, class `X` removed)\n. @davidkpiano I think that you are missing the core concept of the issue at hand :-)\n\nit's about custom animations for states (each state should have possibility to define it's own animation class for showing and hiding respectivelly) @ ui router - please read the thread first ;-)\n. ok, so here's my take:\n\nhttps://github.com/stryju/foundation-apps/commit/4ddfbfbeeae27fc9fd5db37098d1b2e7f06ce226\n- dropped the animation\n- augmented the uiView directive\n\nhttps://github.com/stryju/foundation-apps/commit/5a75a2415e2ea7cdb629bb1712dbc91c5ffa14ea\n- changed the way animations are bound to the state\n\nso the \"new\" form of animation definitions should look like:\n\n``` js\n{\n  url : '/greetings',\n  template : '<h1>hi there</h1>',\n  animation : {\n    enter : 'fadeIn',\n    leave : 'zoomOut'\n  }\n}\n```\n\nlet me know if that works for you\n. https://github.com/zurb/foundation-apps/pull/330\n. on the side-note: this repo is in a **dire** need for tests... big changes require integrity :)\n. any feedback is greatly appreciated :-)\n. ui router uses `$animate.enter()` and `$animate.leave()` so no css changes needed, as long as they follow the normal `ng-enter` / `ng-leave` structure :)\n. _off-topic_:\n\nMaybe it would be a wise idea to make all the angular-related animations a separate module or something?\nAs I understand, there will be different flavors of `foundation-apps` (react, ember, ...) and having one huge css file with all the flavors of animations (class names and so on) might generate quite an overhead\n. when testing on local foundation-apps instance i didn't come across those issues...\n\ncan you prepare a small repo / plunker with the code?\n. sorry for heavy gifs - let me know, when i can remove them\n\n---\n\ntested on chrome, firefox, safari (os x)\n\n---\n\ntested animation:\n\n``` scss\n\n$duration: 2000ms;\n\n.getIn.ng-enter {\n  transition: $duration cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n\n  position: absolute;\n  opacity: 0;\n  transform: translate3d(0, -50%, 0);\n\n  &.ng-enter-active {\n    opacity: 1;\n    transform: translate3d(0, 0%, 0);\n  }\n}\n\n.getOut.ng-leave {\n  transition: $duration cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n\n  position: absolute;\n  opacity: 1;\n  transform: translate3d(0, 0%, 0);\n\n  &.ng-leave-active {\n    opacity: 0;\n    transform: translate3d(0, 50%, 0);\n  }\n}\n```\n. trying to run docs locally - failing @ sass... :-|\n\ni keep getting \n\n```\nError: app.scss:14:21: Unexpected { in decls\n```\n\neven with empty `app.scss` file :O\n. ok, that worked - ~~somehow animations are not being merged~~...\n\ngot it\n. :+1: that's the way to go\n\njust be careful with `ng-if` - it can cause a weird jank on some directives :-)\n. ok, so got the animations up and running - smooth...\n\nbut the issue is with the animated elements - fadeout leaves some element visible (style override, it seems)\n. ![f-apps-3](https://cloud.githubusercontent.com/assets/25367/5493210/e61c0796-86e8-11e4-8a41-2e94bf641d15.gif)\n\nthat's with manual class toggle...\n\nadded `ng-leave ng-leave-active`\n\n---\n\ncc @gakimball \n. this was a view (and view IS a component :wink:) animation - elements that are left seem to break the animation :-)\n\ntake a look at the frame with selector on top :-)\n. set the `fadeOut` animation for motionUi page and observe what happens when transitioning FROM that page (that's the gif I've attached)\n\nonly text elements don't fade out (weirdly)\n. keep in mind, that the way `ui.router`'s `uiView` directives work is that it creates a new `uiView` element BEFORE the current view, like so:\n\n### state1 idle\n\n``` html\n<uiView>state1</uiView>\n```\n\n### state2 loading, state1 unloading\n\n``` html\n<uiView class=\"ng-animate ng-enter\">state2</uiView>\n<uiView class=\"ng-animate ng-leave\">state1</uiView>\n```\n\n### state 2 loaded, state1 unloaded\n\n``` html\n<uiView class=\"ng-animate ng-enter ng-enter-active\">state2</uiView>\n<uiView class=\"ng-animate ng-leave ng-leave-active\">state1</uiView>\n```\n\n### state 2 idle\n\n``` html\n<uiView>state2</uiView>\n```\n\n---\n\nso what you might be referring to is the fact, that the state that's being animated out jumps below the new one, which is not animated - hm?\n. what's more, if transitions take, let's say `1s`, and you switch between states 5 times within this `1s`, it will create that many `ngView`s and just let them animate properly\n\nso, the DOM-situation like this is possible:\n\n``` html\n<uiView class=\"ng-animate ng-leave ng-leave-active\">state1</uiView>\n<uiView class=\"ng-animate ng-leave ng-leave-active\">state2</uiView>\n<uiView class=\"ng-animate ng-leave ng-leave-active\">state3</uiView>\n<uiView class=\"ng-animate ng-leave ng-leave-active\">state1</uiView>\n<uiView class=\"ng-animate ng-enter ng-enter-active\">state2</uiView> <!-- the state we're finally getting to -->\n```\n. yeah, it is a good thing, but one needs to be aware of that ;-)\n. well, since it's OS, just branch of my branch? :D\n. :+1: \n. sorry, I have not as much time to spare as I'd like to have to spend on this at this time - how's the work going?\n. ",
    "JeromeClerc": "Hi gakimball,\n\nThanks a lot for your answer, it work perfectly :)\n\nHave a nice day\n. Hi gakimball,\n\nThanks a lot for your answer, it work perfectly :)\n\nHave a nice day\n. ",
    "codymorgan": "just out of curiosity though, should every click on an actionable element be registering 2 history affecting events? again, i know these are templates, just posing the question to assure it's not a deeper rooted issue\n. just out of curiosity though, should every click on an actionable element be registering 2 history affecting events? again, i know these are templates, just posing the question to assure it's not a deeper rooted issue\n. ",
    "davidgeary": "I'm not an expert on Angular, but I think you were spot on with your comment that it would [\"allow foundation to serve more as a dependency than a framework\"](https://github.com/zurb/foundation-apps-template/issues/3#issuecomment-65793590).\n\nAs someone developing an application using Angular, I see Angular as the primary framework and FoundationForApps simply as a dependency that is using Angular to provide extra UI functionality.  As such, I think I would normally expect to include as a module in my own application's dependencies, just like any other third-party library.  I imagine that most developers using Angular would probably not _need_ the routing, but there's no reason why that couldn't then be provided as another module that also uses FoundationForApps (or the common parts of it, at least) as a dependency.\n\nFor people using FoundationForApps for prototyping though, Angular is probably not something they want to have to deal with directly.  So providing an application around it via the FoundationForApps Template could mean that between the template's _app.js_ and dynamic routing, most of the heavy lifting is done and they're good to go.\n. @JeroenNoten I can see the confusion with using `application` for the module name, but is that really intended to be included as the all-encompassing FoundationForApps module?  I assumed that was more of an example of the modules you need to import into your own project, so you wouldn't actually load Foundation's `app.js` file.\n\n@AntJanus I agree with the idea of using a 'folders-by-feature' structure as that supports the inclusion of Foundation on a module-by-module basis, only including what your application needs rather than everything in one go.  (The dynamic routing is definitely one I'd want to exclude.)\n\nBut in doing that, consider that the locations of the partials are hardcoded in their corresponding directives, so you'd need to ensure that they didn't clash with the application's own structure - perhaps they should be prefixed 'zf-' or something?\n. No, having everything under a `/components` folder seems to be one of the common guidelines, so I'd stick with that.\n\nI was actually thinking of the prefix on the module-specific folders, so you'd have `/components/zf-panel` and `/components/zf-interchange`.  That would also mean that it matched up with the actual directive name, which is `zfPanel`, `zfInterchange` and so on (allowing for Angular's auto-translation between hyphenated and camel-cased naming).\n\nOf course, whether it should match the directive or its defining module is another argument altogether.  The modules are `foundation.panel` and `foundation.interchange`, suggesting that you'd use `foundation.` as your folder prefix.  But then again, I've already found out that the [module naming isn't considered correct](https://github.com/zurb/foundation-apps/issues/262#issuecomment-66454628) anyway! So maybe that will be changing too.\n. [Batarang](https://chrome.google.com/webstore/detail/ighdmehidhipcmcojjgiloacoafjmpfk) also provides some guidelines, logging breaches of what it considers best practice as warnings to the browser console.\n\nI don't know how these compare to those of John Papa and Todd Motto (I haven't seen them documented anywhere yet), but many developers will use Batarang for debugging, so any warnings issued for Foundation code are likely to end up being reported as issues.  It's already warning about the module names, which is going to get tiresome pretty quickly!\n\n> The best practice for module names is to use lowerCamelCase. Check the name\n> of \"foundation.common.services\".\n\n**UPDATE** Looks like Batarang is auto-including `hint.js` from the [angular-hint](https://github.com/angular/angular-hint) project, which is defining the rules.\n. I agree - the first set of changes are all sensible and the foundation.components module provides additional flexibility in which components you import.  I can still see some preference for importing individual components, but that's easy enough too - it just needs some documentation in the [Getting Started](http://foundation.zurb.com/apps/getting-started.html) page.\n\nI'm with @stryju on the `foundation.components` namespace though.  Unless you can foresee a reasonable number of other related namespaces that would follow that convention, it seems overkill to me, given that most of the modules will be components, almost by definition.\n. Of course!  Good point - I'd overlooked the use of custom button classes replacing `.button`.\n\nButton groups would need updating too though (and possibly iconic?).\n. I'm not an expert on Angular, but I think you were spot on with your comment that it would [\"allow foundation to serve more as a dependency than a framework\"](https://github.com/zurb/foundation-apps-template/issues/3#issuecomment-65793590).\n\nAs someone developing an application using Angular, I see Angular as the primary framework and FoundationForApps simply as a dependency that is using Angular to provide extra UI functionality.  As such, I think I would normally expect to include as a module in my own application's dependencies, just like any other third-party library.  I imagine that most developers using Angular would probably not _need_ the routing, but there's no reason why that couldn't then be provided as another module that also uses FoundationForApps (or the common parts of it, at least) as a dependency.\n\nFor people using FoundationForApps for prototyping though, Angular is probably not something they want to have to deal with directly.  So providing an application around it via the FoundationForApps Template could mean that between the template's _app.js_ and dynamic routing, most of the heavy lifting is done and they're good to go.\n. @JeroenNoten I can see the confusion with using `application` for the module name, but is that really intended to be included as the all-encompassing FoundationForApps module?  I assumed that was more of an example of the modules you need to import into your own project, so you wouldn't actually load Foundation's `app.js` file.\n\n@AntJanus I agree with the idea of using a 'folders-by-feature' structure as that supports the inclusion of Foundation on a module-by-module basis, only including what your application needs rather than everything in one go.  (The dynamic routing is definitely one I'd want to exclude.)\n\nBut in doing that, consider that the locations of the partials are hardcoded in their corresponding directives, so you'd need to ensure that they didn't clash with the application's own structure - perhaps they should be prefixed 'zf-' or something?\n. No, having everything under a `/components` folder seems to be one of the common guidelines, so I'd stick with that.\n\nI was actually thinking of the prefix on the module-specific folders, so you'd have `/components/zf-panel` and `/components/zf-interchange`.  That would also mean that it matched up with the actual directive name, which is `zfPanel`, `zfInterchange` and so on (allowing for Angular's auto-translation between hyphenated and camel-cased naming).\n\nOf course, whether it should match the directive or its defining module is another argument altogether.  The modules are `foundation.panel` and `foundation.interchange`, suggesting that you'd use `foundation.` as your folder prefix.  But then again, I've already found out that the [module naming isn't considered correct](https://github.com/zurb/foundation-apps/issues/262#issuecomment-66454628) anyway! So maybe that will be changing too.\n. [Batarang](https://chrome.google.com/webstore/detail/ighdmehidhipcmcojjgiloacoafjmpfk) also provides some guidelines, logging breaches of what it considers best practice as warnings to the browser console.\n\nI don't know how these compare to those of John Papa and Todd Motto (I haven't seen them documented anywhere yet), but many developers will use Batarang for debugging, so any warnings issued for Foundation code are likely to end up being reported as issues.  It's already warning about the module names, which is going to get tiresome pretty quickly!\n\n> The best practice for module names is to use lowerCamelCase. Check the name\n> of \"foundation.common.services\".\n\n**UPDATE** Looks like Batarang is auto-including `hint.js` from the [angular-hint](https://github.com/angular/angular-hint) project, which is defining the rules.\n. I agree - the first set of changes are all sensible and the foundation.components module provides additional flexibility in which components you import.  I can still see some preference for importing individual components, but that's easy enough too - it just needs some documentation in the [Getting Started](http://foundation.zurb.com/apps/getting-started.html) page.\n\nI'm with @stryju on the `foundation.components` namespace though.  Unless you can foresee a reasonable number of other related namespaces that would follow that convention, it seems overkill to me, given that most of the modules will be components, almost by definition.\n. Of course!  Good point - I'd overlooked the use of custom button classes replacing `.button`.\n\nButton groups would need updating too though (and possibly iconic?).\n. ",
    "BraunreutherA": "I follow john papa's best practices aswell and strongly recommend them. Actually I would like start to work on a modification for foundation for apps that brings his best practices in. It would be very nice to make a module out of it so you jut have to include it in your angular app. Aswell I would make it optional to pull in what you need, for example I want to write the ui router functionality on my own.\n. I follow john papa's best practices aswell and strongly recommend them. Actually I would like start to work on a modification for foundation for apps that brings his best practices in. It would be very nice to make a module out of it so you jut have to include it in your angular app. Aswell I would make it optional to pull in what you need, for example I want to write the ui router functionality on my own.\n. ",
    "zurbchris": "Closing due to inactivity. If you get back to this @AntJanus, please reopen.\n. Nearly done with this feature...\n. Done. Add `zf-close-all` to the `body` tag in your markup.\nAt least with 1.2 release :laughing: \n. Closing this due to lack of feedback. If anyone else is having an issue with relative/absolute pathing, please open a new issue.\n. Can you clean this up to only alter relevant individual files? We'll handle creating the /dist versions.\n. Can you clean this up and only submit changes to relevant individual files? We'll handle creating the /dist files.\n. @soumak77 in reference to [fiboacademy@d6273a9](https://github.com/fiboacademy/foundation-apps/commit/d6273a97ef299b8600cbe4f5db237aec19620761) and #645, with the `$timeout` method you were still having errors if `!scope` or `!element`?\n. awesome\n. Yes. I'm adding a new attribute `zf-advise`, as an option for the built in plugins. If present in the attrs it will use animateAndNotify, which may get renamed to animateAndAdvise for consistency.\n. I really like the addition of promises to animations too, bravo. I checked it out and you can easily to a `.then(fn)` on animations, so I tweaked your work a bit to return the element and active boolean on `deferred.resolve`. :+1: :+1:  \n. Are you on gitter? I have a question you might be able to answer.\n. I'm afraid the port is required if using our dev environment. It's part of the gulp-connect plugin.\n. Locally, it's working just fine, which is on master. In fact we're browser testing right now.\n. makes sense to me.\n. Closing due to inactivity. If you get back to this @AntJanus, please reopen.\n. Nearly done with this feature...\n. Done. Add `zf-close-all` to the `body` tag in your markup.\nAt least with 1.2 release :laughing: \n. Closing this due to lack of feedback. If anyone else is having an issue with relative/absolute pathing, please open a new issue.\n. Can you clean this up to only alter relevant individual files? We'll handle creating the /dist versions.\n. Can you clean this up and only submit changes to relevant individual files? We'll handle creating the /dist files.\n. @soumak77 in reference to [fiboacademy@d6273a9](https://github.com/fiboacademy/foundation-apps/commit/d6273a97ef299b8600cbe4f5db237aec19620761) and #645, with the `$timeout` method you were still having errors if `!scope` or `!element`?\n. awesome\n. Yes. I'm adding a new attribute `zf-advise`, as an option for the built in plugins. If present in the attrs it will use animateAndNotify, which may get renamed to animateAndAdvise for consistency.\n. I really like the addition of promises to animations too, bravo. I checked it out and you can easily to a `.then(fn)` on animations, so I tweaked your work a bit to return the element and active boolean on `deferred.resolve`. :+1: :+1:  \n. Are you on gitter? I have a question you might be able to answer.\n. I'm afraid the port is required if using our dev environment. It's part of the gulp-connect plugin.\n. Locally, it's working just fine, which is on master. In fact we're browser testing right now.\n. makes sense to me.\n. ",
    "yashiel": "thanks for the quick response.\n. Thanks can't wait to see the complete guide. i'm having those issues for iOS 8.1.3. and its all messed up. but for the desktop it's all good like charm..and one thing i want to know. i'm a UI/UX and frontend developer. currently i'm evolving to make and develop a Big Enterprise grade application by using foundation for apps. the reason is it's grid system. i like the way it works. using flex box and other stuff. but i have one problem. in our company backend developers are using ASP.Net MVC for the server site data and communication. so they want to use this grid system without angular ui routing but take all other angular awesome features. and they want to use ASP.Net MVC routing. so my question is how to use this framework without angular ui routing. or is it ok to use css grid only. or is there any other solution to fix this. \n. Thanks\n. thanks for the quick response.\n. Thanks can't wait to see the complete guide. i'm having those issues for iOS 8.1.3. and its all messed up. but for the desktop it's all good like charm..and one thing i want to know. i'm a UI/UX and frontend developer. currently i'm evolving to make and develop a Big Enterprise grade application by using foundation for apps. the reason is it's grid system. i like the way it works. using flex box and other stuff. but i have one problem. in our company backend developers are using ASP.Net MVC for the server site data and communication. so they want to use this grid system without angular ui routing but take all other angular awesome features. and they want to use ASP.Net MVC routing. so my question is how to use this framework without angular ui routing. or is it ok to use css grid only. or is there any other solution to fix this. \n. Thanks\n. ",
    "jamesstoneco": "1st line is related to a link I added directly to the library in vendor, hoping that would resolve the issue. Error is the same linking that library or not. I installed via the cli and was running via npm start.\n. I was able to get this working locally, sass only and can be enabled by adding class .stagger. Please let me know if you want me to post or send a PR.\n. Sorry for the delay @zurbrandon ( cc: @gakimball ). Is there a specific branch you want me to send a PR to? \n\nHere is [my WIP](https://github.com/jamesstoneco/foundation-apps/commits/motion-stagger)\n\nNOTE: you may have to apply ng-animate-children depending on your use case.\n\nHere is a small example:\n\n``` html\n<div ng-init=\"users=['Commander Adama','Apollo','Zac','Starbuck','Boomer']\"></div>\n<div ng-init=\"staggerClasses=['short-stagger','stagger','long-stagger']\"></div>\n<div ng-init=\"motionIn=['slideInDown','slideInLeft','slideInUp','slideInRight','fadeIn','hingeInFromTop','hingeInFromRight','hingeInFromBottom','hingeInFromLeft','hingeInFromMiddleX','hingeInFromMiddleY','zoomIn']\"></div>\n<div ng-animate-children ng-repeat=\"motionClass in motionIn\">\n  <div ng-repeat=\"staggerClass in staggerClasses\">\n    {{ motionClass }} -> {{ staggerClass }}\n    <div class=\"float-right\">\n      <span ng-class=\"[motionClass , staggerClass]\" class=\"label\" ng-repeat=\"user in users\" style=\"margin:0.2rem;\">\n        {{ user }}\n      </span>\n    </div>\n    <div class=\"clearfix\"></div>\n  </div>\n</div>\n```\n. I have done exactly as you suggest, removing the foundation-apps/js/angular/app.js and copied that code and modified it in the client app.js.\n\nI don't see by what other means you would be able to easily change this because modifications would likely go beyond just the module deps anyways.\n\nPerhaps it could be more clear in the built in grunt file about how and why to make this modification.\n. Refactored per your suggestions.\n. 1st line is related to a link I added directly to the library in vendor, hoping that would resolve the issue. Error is the same linking that library or not. I installed via the cli and was running via npm start.\n. I was able to get this working locally, sass only and can be enabled by adding class .stagger. Please let me know if you want me to post or send a PR.\n. Sorry for the delay @zurbrandon ( cc: @gakimball ). Is there a specific branch you want me to send a PR to? \n\nHere is [my WIP](https://github.com/jamesstoneco/foundation-apps/commits/motion-stagger)\n\nNOTE: you may have to apply ng-animate-children depending on your use case.\n\nHere is a small example:\n\n``` html\n<div ng-init=\"users=['Commander Adama','Apollo','Zac','Starbuck','Boomer']\"></div>\n<div ng-init=\"staggerClasses=['short-stagger','stagger','long-stagger']\"></div>\n<div ng-init=\"motionIn=['slideInDown','slideInLeft','slideInUp','slideInRight','fadeIn','hingeInFromTop','hingeInFromRight','hingeInFromBottom','hingeInFromLeft','hingeInFromMiddleX','hingeInFromMiddleY','zoomIn']\"></div>\n<div ng-animate-children ng-repeat=\"motionClass in motionIn\">\n  <div ng-repeat=\"staggerClass in staggerClasses\">\n    {{ motionClass }} -> {{ staggerClass }}\n    <div class=\"float-right\">\n      <span ng-class=\"[motionClass , staggerClass]\" class=\"label\" ng-repeat=\"user in users\" style=\"margin:0.2rem;\">\n        {{ user }}\n      </span>\n    </div>\n    <div class=\"clearfix\"></div>\n  </div>\n</div>\n```\n. I have done exactly as you suggest, removing the foundation-apps/js/angular/app.js and copied that code and modified it in the client app.js.\n\nI don't see by what other means you would be able to easily change this because modifications would likely go beyond just the module deps anyways.\n\nPerhaps it could be more clear in the built in grunt file about how and why to make this modification.\n. Refactored per your suggestions.\n. ",
    "tagazok": "I have the same issue. I have installed foundation for apps with bower install as I am using grunt on my project.\n. I have the same issue. I have installed foundation for apps with bower install as I am using grunt on my project.\n. ",
    "slowbot": "I think you may already be running the app. The way the instructions are written in confusing Check the view in the browser. \n. I think you may already be running the app. The way the instructions are written in confusing Check the view in the browser. \n. ",
    "mrsteveheyes": "+1 for this problem. Has anyone got any suggestions?\n\nThanks.\n. +1 for this problem. Has anyone got any suggestions?\n\nThanks.\n. ",
    "erredeco": "I am on Mac (Maverick); I stopped MAMP; I have no processes named \"Node\"; the error log says:\n\n0 info it worked if it ends with ok\n1 verbose cli [ 'node', '/usr/local/bin/npm', 'start' ]\n2 info using npm@1.4.16\n3 info using node@v0.10.24\n4 verbose run-script [ 'prestart', 'start', 'poststart' ]\n5 info prestart foundation-apps-template@0.0.1\n6 info start foundation-apps-template@0.0.1\n7 verbose unsafe-perm in lifecycle true\n8 info foundation-apps-template@0.0.1 Failed to exec start script\n9 error foundation-apps-template@0.0.1 start: `gulp`\n9 error Exit status 8\n10 error Failed at the foundation-apps-template@0.0.1 start script.\n10 error This is most likely a problem with the foundation-apps-template package,\n10 error not with npm itself.\n10 error Tell the author that this fails on your system:\n10 error     gulp\n10 error You can get their info via:\n10 error     npm owner ls foundation-apps-template\n10 error There is likely additional logging output above.\n11 error System Darwin 13.4.0\n12 error command \"node\" \"/usr/local/bin/npm\" \"start\"\n13 error cwd /Users/riccardo/Progetti/fou-app-prova1/myApp\n14 error node -v v0.10.24\n15 error npm -v 1.4.16\n16 error code ELIFECYCLE\n17 verbose exit [ 1, true ]\n. @AntJanus : I followed the instructions on Zurb site; using npm install did the trick :)\n. I am on Mac (Maverick); I stopped MAMP; I have no processes named \"Node\"; the error log says:\n\n0 info it worked if it ends with ok\n1 verbose cli [ 'node', '/usr/local/bin/npm', 'start' ]\n2 info using npm@1.4.16\n3 info using node@v0.10.24\n4 verbose run-script [ 'prestart', 'start', 'poststart' ]\n5 info prestart foundation-apps-template@0.0.1\n6 info start foundation-apps-template@0.0.1\n7 verbose unsafe-perm in lifecycle true\n8 info foundation-apps-template@0.0.1 Failed to exec start script\n9 error foundation-apps-template@0.0.1 start: `gulp`\n9 error Exit status 8\n10 error Failed at the foundation-apps-template@0.0.1 start script.\n10 error This is most likely a problem with the foundation-apps-template package,\n10 error not with npm itself.\n10 error Tell the author that this fails on your system:\n10 error     gulp\n10 error You can get their info via:\n10 error     npm owner ls foundation-apps-template\n10 error There is likely additional logging output above.\n11 error System Darwin 13.4.0\n12 error command \"node\" \"/usr/local/bin/npm\" \"start\"\n13 error cwd /Users/riccardo/Progetti/fou-app-prova1/myApp\n14 error node -v v0.10.24\n15 error npm -v 1.4.16\n16 error code ELIFECYCLE\n17 verbose exit [ 1, true ]\n. @AntJanus : I followed the instructions on Zurb site; using npm install did the trick :)\n. ",
    "mattgrande": "Where is the documentation for `FoundationApi`? I'm not seeing any references to it here: http://foundation.zurb.com/apps/docs/#!/\n. Yes; Jasmine tests being run with Karma (although the results are the same with or without Karma).\n. I'll do you one better. You can clone this repo to reproduce the issue:  \nhttps://github.com/mattgrande/foundation-apps-unit-test-issue\n\n```\n$ git clone https://github.com/mattground/foundation-apps-unit-test-issue.git\n$ cd foundation-apps-unit-test-issue\n$ npm install\n$ gulp test\n```\n. So... is there anything I should do about this from a test point of view, or should I just not reference Foundation in my tests (I'm not sure if the dependencies will work out for that)?\n\nAlso, if you could let me know what errors you got, that would help me out a lot!\n. Ah right, I came across that as well... I'll have to remember what I did to fix that! Thanks for your help.\n. @herrreiprich - Where did you end up adding the `insertRule` call? I've tried a couple places, and it seems to either be too early or too late...\n. Has anyone had a chance to take a look at this?\n. I'm not sure if that would get around that issue (still haven't had my morning coffee), but could you make the root configurable? Have it `''` by default, so others can override it to `'/'` if necessary?\n. The failed check is `Task 'sass:node' is not in your gulpfile`. I don't think that's anything that I've done.\n. Thanks, I'll try that out. For the time being, I decided to make my buttons look like tabs (which is probably a better idea in my case regardless).\n. Wow, so @gakimball and @AntJanus are both no longer with Zurb? No wonder this project died, it seemed like they were the driving force behind it...\n. @AntJanus - Ahh, didn't realise you were a contractor. That makes sense.\n. Thanks @soumak77! I'll check that out in awhile!\n. It's ugly as hell, but you basically need to call `$parent` for every zf-directive you're in, so your new `ng-click` would be `$parent.$parent.test()`.\n\n(This is from memory; It might only be one `$parent`)\n. This project hasn't been updated since early December... I'm starting to get worried about it as well.\n. The lack of response has me worried.\n. If they're working on V2, that's fine... But the lack of communication is extremely unprofessional.\n. And now we play the waiting game... https://twitter.com/ZURBfoundation/status/730905798465871874\n. This project has the MIT License. That just means we need to include the Zurb copyright in the updated license file, correct?\n. If migrating to Angular Material isn't an option for you, and you want something similar to this, there's a community driven fork here:\n\nhttps://github.com/base-apps/angular-base\n. Love that they show up, make five tiny commits, and don't address this at all...\n. No one from the Zurb team has looked at this in awhile. Consider applying this patch to the community-driven fork, here: https://github.com/base-apps/angular-base\n. Where is the documentation for `FoundationApi`? I'm not seeing any references to it here: http://foundation.zurb.com/apps/docs/#!/\n. Yes; Jasmine tests being run with Karma (although the results are the same with or without Karma).\n. I'll do you one better. You can clone this repo to reproduce the issue:  \nhttps://github.com/mattgrande/foundation-apps-unit-test-issue\n\n```\n$ git clone https://github.com/mattground/foundation-apps-unit-test-issue.git\n$ cd foundation-apps-unit-test-issue\n$ npm install\n$ gulp test\n```\n. So... is there anything I should do about this from a test point of view, or should I just not reference Foundation in my tests (I'm not sure if the dependencies will work out for that)?\n\nAlso, if you could let me know what errors you got, that would help me out a lot!\n. Ah right, I came across that as well... I'll have to remember what I did to fix that! Thanks for your help.\n. @herrreiprich - Where did you end up adding the `insertRule` call? I've tried a couple places, and it seems to either be too early or too late...\n. Has anyone had a chance to take a look at this?\n. I'm not sure if that would get around that issue (still haven't had my morning coffee), but could you make the root configurable? Have it `''` by default, so others can override it to `'/'` if necessary?\n. The failed check is `Task 'sass:node' is not in your gulpfile`. I don't think that's anything that I've done.\n. Thanks, I'll try that out. For the time being, I decided to make my buttons look like tabs (which is probably a better idea in my case regardless).\n. Wow, so @gakimball and @AntJanus are both no longer with Zurb? No wonder this project died, it seemed like they were the driving force behind it...\n. @AntJanus - Ahh, didn't realise you were a contractor. That makes sense.\n. Thanks @soumak77! I'll check that out in awhile!\n. It's ugly as hell, but you basically need to call `$parent` for every zf-directive you're in, so your new `ng-click` would be `$parent.$parent.test()`.\n\n(This is from memory; It might only be one `$parent`)\n. This project hasn't been updated since early December... I'm starting to get worried about it as well.\n. The lack of response has me worried.\n. If they're working on V2, that's fine... But the lack of communication is extremely unprofessional.\n. And now we play the waiting game... https://twitter.com/ZURBfoundation/status/730905798465871874\n. This project has the MIT License. That just means we need to include the Zurb copyright in the updated license file, correct?\n. If migrating to Angular Material isn't an option for you, and you want something similar to this, there's a community driven fork here:\n\nhttps://github.com/base-apps/angular-base\n. Love that they show up, make five tiny commits, and don't address this at all...\n. No one from the Zurb team has looked at this in awhile. Consider applying this patch to the community-driven fork, here: https://github.com/base-apps/angular-base\n. ",
    "thylo": "@AntJanus any update on this issue with the addNotification error ?\n. I use it inside a directive to trigger a notification after a promise resolves\n\n``` javascript\n(function(){\n\n    angular.module('acmeModule', [])\n        .directive('fooDirective', ['$http','FoundationApi',function($http,FoundationApi){\n            return {\n                restrict: 'E',\n                transclude : true,\n                templateUrl : 'components/sm-async-form.html',\n                link:function(scope, element, attrs){\n\n                    scope.data = {};\n                    scope.formId = FoundationApi.generateUuid();\n                    scope.submit = function(){\n                        $http.put(attrs.action, scope.data)\n                            .then(function(result){\n                                scope.data = result.data[attrs.key];\n                                FoundationApi.publish(scope.formId, { content: 'Succes' });\n                            });\n                    };\n                }\n            };\n        }]);\n    ;\n\n})();\n```\n. I also liked solution 2 better, but saddly it doesn't work as expected. So back with solution 1 wich solves my bug.\n\nThanks for the good work @AntJanus \n. @AntJanus any update on this issue with the addNotification error ?\n. I use it inside a directive to trigger a notification after a promise resolves\n\n``` javascript\n(function(){\n\n    angular.module('acmeModule', [])\n        .directive('fooDirective', ['$http','FoundationApi',function($http,FoundationApi){\n            return {\n                restrict: 'E',\n                transclude : true,\n                templateUrl : 'components/sm-async-form.html',\n                link:function(scope, element, attrs){\n\n                    scope.data = {};\n                    scope.formId = FoundationApi.generateUuid();\n                    scope.submit = function(){\n                        $http.put(attrs.action, scope.data)\n                            .then(function(result){\n                                scope.data = result.data[attrs.key];\n                                FoundationApi.publish(scope.formId, { content: 'Succes' });\n                            });\n                    };\n                }\n            };\n        }]);\n    ;\n\n})();\n```\n. I also liked solution 2 better, but saddly it doesn't work as expected. So back with solution 1 wich solves my bug.\n\nThanks for the good work @AntJanus \n. ",
    "tomasbana": "After installation on page localhost:8080 the menu and click on any link I get this error\n. After installation on page localhost:8080 the menu and click on any link I get this error\n. ",
    "zfrankdesign": "Awesome! Thanks! Love the work you all are doing.\n. I changed this: (what was originally in the gulp file)\ngulp.task('copy-partials', ['clean-partials'], function() {\n  return gulp.src(['js/angular/partials/*_._'])\n    .pipe(gulp.dest('./build/partials/'));\n});\n\nto this\n\ngulp.task('copy-partials', ['clean-partials'], function() {\n  return gulp.src(['bower_components/foundation-apps/js/angular/partials/*_._'])\n    .pipe(gulp.dest('./build/partials/'));\n});\n\nAnd it works now. Is this okay??\n. That's what I thought. Thanks again!\n. Awesome! Thanks! Love the work you all are doing.\n. I changed this: (what was originally in the gulp file)\ngulp.task('copy-partials', ['clean-partials'], function() {\n  return gulp.src(['js/angular/partials/*_._'])\n    .pipe(gulp.dest('./build/partials/'));\n});\n\nto this\n\ngulp.task('copy-partials', ['clean-partials'], function() {\n  return gulp.src(['bower_components/foundation-apps/js/angular/partials/*_._'])\n    .pipe(gulp.dest('./build/partials/'));\n});\n\nAnd it works now. Is this okay??\n. That's what I thought. Thanks again!\n. ",
    "wtfribley": "Also (not sure if this is best place to mention this), it feels a bit odd to me to use JSON in a font-family declaration to pass data from CSS to Javascript... It seems it may be safer to implement any serialization / parsing wholly on the javascript side -- rather than serializing in sass, then parsing in javascript. It might help prevent weird sass issues (especially considering there are two major sass compilers in use and their behavior isn't always identical -- not to mention how different browsers may handle escaped quotes, single vs. double, etc.)\n\nOr, perhaps the simple solution, if the eventual goal is for foundation-apps to drop the Ruby dependency entirely, the sass could just be tailored to only support libsass' behavior.\n\nThis PR is also related to #168 and #152 \n. Yeah, perhaps URL encoding may work better as it doesn't rely on quotes.\n\n``` css\n.foundation-mq {\n  content: \"small=0&medium=40rem&large=75rem\"\n}\n```\n. This is just an implementation suggestion.\n. It would be more involved, but perhaps the positioning of the action sheet (on medium+ screens) should be governed by its Javascript, not its styling -- that way it can be positioned such that it respects the bounderies of its scroll container (I have an action sheet now that's half hidden off the screen).\n\nIt sounds like a giant pain (although I feel like Tether could really help here), but if it sounds like a plausible solution I'd be willing to take a stab.\n\n...I guess the simpler solution would be to add a few more positioning styles - `align-left` for example, to align the left side of the content to the left side of the button.\n. Cool, yeah, sounds good - having a `pin` directive would be pretty neat.\n. Looks like it's been addressed, just not released.\n. Maybe I should open a separate issue, but I'll jump on with a general modal bug: the sizing classes are currently applied to the `.modal-overlay` element, NOT the `.modal` aside itself... so sizing modals using those predefined classes doesn't work at the moment.\n. (in general, I've noticed a few cases in which classes I apply to foundation directives don't behave the way I would expect because they're not being applied to the expected element in the directive's template -- this isn't necessarily an issue, just maybe a chance to provide clearer documentation)\n. @AntJanus well, so far just two that I've noticed:\n1. classes applied to `zf-modal` aren't applied to `.modal` (mentioned above)\n2. classes applied to `zf-as-button` aren't applied to `.button` (the workaround here is to transclude your own button, although it feels a little cumbersome if all you want to do is add a class like `.warning` or something)\n. Ah, apparently this may be just a Firefox issue -- the behavior is as-expected in Chrome.\n. Yeah, sounds like a good fix -- sounds like it would allow for greater extensibility as well.\n. Also (not sure if this is best place to mention this), it feels a bit odd to me to use JSON in a font-family declaration to pass data from CSS to Javascript... It seems it may be safer to implement any serialization / parsing wholly on the javascript side -- rather than serializing in sass, then parsing in javascript. It might help prevent weird sass issues (especially considering there are two major sass compilers in use and their behavior isn't always identical -- not to mention how different browsers may handle escaped quotes, single vs. double, etc.)\n\nOr, perhaps the simple solution, if the eventual goal is for foundation-apps to drop the Ruby dependency entirely, the sass could just be tailored to only support libsass' behavior.\n\nThis PR is also related to #168 and #152 \n. Yeah, perhaps URL encoding may work better as it doesn't rely on quotes.\n\n``` css\n.foundation-mq {\n  content: \"small=0&medium=40rem&large=75rem\"\n}\n```\n. This is just an implementation suggestion.\n. It would be more involved, but perhaps the positioning of the action sheet (on medium+ screens) should be governed by its Javascript, not its styling -- that way it can be positioned such that it respects the bounderies of its scroll container (I have an action sheet now that's half hidden off the screen).\n\nIt sounds like a giant pain (although I feel like Tether could really help here), but if it sounds like a plausible solution I'd be willing to take a stab.\n\n...I guess the simpler solution would be to add a few more positioning styles - `align-left` for example, to align the left side of the content to the left side of the button.\n. Cool, yeah, sounds good - having a `pin` directive would be pretty neat.\n. Looks like it's been addressed, just not released.\n. Maybe I should open a separate issue, but I'll jump on with a general modal bug: the sizing classes are currently applied to the `.modal-overlay` element, NOT the `.modal` aside itself... so sizing modals using those predefined classes doesn't work at the moment.\n. (in general, I've noticed a few cases in which classes I apply to foundation directives don't behave the way I would expect because they're not being applied to the expected element in the directive's template -- this isn't necessarily an issue, just maybe a chance to provide clearer documentation)\n. @AntJanus well, so far just two that I've noticed:\n1. classes applied to `zf-modal` aren't applied to `.modal` (mentioned above)\n2. classes applied to `zf-as-button` aren't applied to `.button` (the workaround here is to transclude your own button, although it feels a little cumbersome if all you want to do is add a class like `.warning` or something)\n. Ah, apparently this may be just a Firefox issue -- the behavior is as-expected in Chrome.\n. Yeah, sounds like a good fix -- sounds like it would allow for greater extensibility as well.\n. ",
    "clintonhalpin": "Agreed. Maybe this could be a global mixin or variable? `$layer1: 0; $layer2: 1;` etc...\n. Agreed. Maybe this could be a global mixin or variable? `$layer1: 0; $layer2: 1;` etc...\n. ",
    "identor": "positive, git is not installed\n\nthanks :+1: \n. positive, git is not installed\n\nthanks :+1: \n. ",
    "arjendeblok": "If you use panels only for navigation menus then I agree.\nBut I was assuming that panels were more general purpose.\nI wanted to use a panel with a search input that slides in form the left for small devices.\n. If you use panels only for navigation menus then I agree.\nBut I was assuming that panels were more general purpose.\nI wanted to use a panel with a search input that slides in form the left for small devices.\n. ",
    "seanmavley": "You're on which box? I'm on Ubuntu and no issues running 1.0.4 foundation-apps.\n. I wish I knew so much now to perhaps send in a PR, but gradually lifting myself off the ground with this foundation apps.\n. You're on which box? I'm on Ubuntu and no issues running 1.0.4 foundation-apps.\n. I wish I knew so much now to perhaps send in a PR, but gradually lifting myself off the ground with this foundation apps.\n. ",
    "alkaithil": "@seanmavley You're right, it runs fine now. Must have been something else, sorry about that. I'll close the issue.\n. @seanmavley You're right, it runs fine now. Must have been something else, sorry about that. I'll close the issue.\n. ",
    "ismaelaarab10": "the themplate stack.\n\n$ foundation-apps watch\n\n> foundation-apps-template@0.0.1 start c:\\Users\\Ismael\\myApp\n> gulp\n\n[19:52:31] Using gulpfile c:\\Users\\Ismael\\myApp\\gulpfile.js\n[19:52:31] Starting 'build'...\n[19:52:31] Starting 'clean'...\n[19:52:31] Starting 'server:start'...\n[19:52:31] Finished 'server:start' after 16 ms\n[19:52:31] Finished 'build' after 18 ms\n[19:52:31] Starting 'default'...\n[19:52:31] Finished 'default' after 22 ms\n[19:52:31] Server started http://localhost:8080\n[19:52:31] Finished 'clean' after 43 ms\n[19:52:31] Starting 'copy'...\n[19:52:31] Starting 'clean-partials'...\n[19:52:31] Starting 'sass'...\n[19:52:31] Starting 'uglify-angular'...\n[19:52:31] Finished 'clean-partials' after 20 ms\n[19:52:31] Starting 'copy-partials'...\n[19:52:35] Finished 'copy-partials' after 3.86 s\n[19:52:35] Finished 'copy' after 3.93 s\n[19:52:35] Finished 'uglify-angular' after 3.92 s\n[19:52:35] Starting 'uglify'...\n[19:52:37] Finished 'uglify' after 1.86 s\n[19:52:44] gulp-ruby-sass: stderr: Errno::ESRCH:\n[19:52:44] gulp-ruby-sass: stderr: No such process - app.css\n  Use --trace for backtrace.\n[19:52:44] Finished 'sass' after 13 s\n[19:52:44] Starting 'copy'...\n[19:52:44] Finished 'copy' after 67 ms\n[19:52:44] Starting 'copy-templates'...\n[19:52:45] Finished 'copy-templates' after 16 ms\nSuccessfully built.\n. Downgrading to JRuby 1.7.15 helped me out.\n\nThank You!\n. the themplate stack.\n\n$ foundation-apps watch\n\n> foundation-apps-template@0.0.1 start c:\\Users\\Ismael\\myApp\n> gulp\n\n[19:52:31] Using gulpfile c:\\Users\\Ismael\\myApp\\gulpfile.js\n[19:52:31] Starting 'build'...\n[19:52:31] Starting 'clean'...\n[19:52:31] Starting 'server:start'...\n[19:52:31] Finished 'server:start' after 16 ms\n[19:52:31] Finished 'build' after 18 ms\n[19:52:31] Starting 'default'...\n[19:52:31] Finished 'default' after 22 ms\n[19:52:31] Server started http://localhost:8080\n[19:52:31] Finished 'clean' after 43 ms\n[19:52:31] Starting 'copy'...\n[19:52:31] Starting 'clean-partials'...\n[19:52:31] Starting 'sass'...\n[19:52:31] Starting 'uglify-angular'...\n[19:52:31] Finished 'clean-partials' after 20 ms\n[19:52:31] Starting 'copy-partials'...\n[19:52:35] Finished 'copy-partials' after 3.86 s\n[19:52:35] Finished 'copy' after 3.93 s\n[19:52:35] Finished 'uglify-angular' after 3.92 s\n[19:52:35] Starting 'uglify'...\n[19:52:37] Finished 'uglify' after 1.86 s\n[19:52:44] gulp-ruby-sass: stderr: Errno::ESRCH:\n[19:52:44] gulp-ruby-sass: stderr: No such process - app.css\n  Use --trace for backtrace.\n[19:52:44] Finished 'sass' after 13 s\n[19:52:44] Starting 'copy'...\n[19:52:44] Finished 'copy' after 67 ms\n[19:52:44] Starting 'copy-templates'...\n[19:52:45] Finished 'copy-templates' after 16 ms\nSuccessfully built.\n. Downgrading to JRuby 1.7.15 helped me out.\n\nThank You!\n. ",
    "apatrida": "And the status of this then is \"on hold\" or \"forgotten\" ?\n. And the status of this then is \"on hold\" or \"forgotten\" ?\n. ",
    "japhar81": "@AntJanus nice work! One question, how the heck does one write unit tests for custom controllers? I wrote a dead-simple controller;\n\n```\n(function () {\n    'use strict';\n    angular.module('application')\n        .controller('HomeController', HomeController)\n    ;\n    HomeController.$inject = ['$scope', '$stateParams', '$state', '$controller'];\n    function HomeController($scope, $stateParams, $state, $controller) {\n        angular.extend(this, $controller('DefaultController', {\n            $scope: $scope,\n            $stateParams: $stateParams,\n            $state: $state\n        }));\n        $scope.test = \"test1\";\n    }\n})();\n```\n\nAnd what I thought was an appropriate karma test to match;\n\n```\n'use strict';\n\ndescribe('Unit: HomeController', function() {\n    beforeEach(module('application'));\n\n    it('should exist', inject(function(FoundationApi) {\n        expect(FoundationApi).not.toEqual(null);\n    }));\n\n    var ctrl, scope;\n\n    beforeEach(inject(function($controller, $rootScope) {\n        scope = $rootScope.$new();\n        ctrl = $controller('HomeController', {\n            $scope: scope\n        });\n    }));\n\n    it('should have $scope.test set to test1',\n        function() {\n            expect(scope.test).toEqual(\"test1\");\n        });\n});\n```\n\nHowever, I always get; \n\n```\nTypeError: Cannot read property 'replace' of null\n        at Object.init (/Users/hzektser/IdeaProjects/foundationTemplate/bower_components/foundation-apps/dist/js/foundation-apps.js:630:79)\n        at mqInitRun (/Users/hzektser/IdeaProjects/foundationTemplate/bower_components/foundation-apps/dist/js/foundation-apps.js:596:12)\n        at Object.invoke (/Users/hzektser/IdeaProjects/foundationTemplate/bower_components/angular/angular.js:4203:17)\n        at /Users/hzektser/IdeaProjects/foundationTemplate/bower_components/angular/angular.js:4025:71\n        at forEach (/Users/hzektser/IdeaProjects/foundationTemplate/bower_components/angular/angular.js:323:20)\n        at Object.createInjector [as injector] (/Users/hzektser/IdeaProjects/foundationTemplate/bower_components/angular/angular.js:4025:3)\n        at Object.workFn (/Users/hzektser/IdeaProjects/foundationTemplate/bower_components/angular-mocks/angular-mocks.js:2425:52)\n    TypeError: Cannot read property 'test' of undefined\n        at Object.<anonymous> (/Users/hzektser/IdeaProjects/foundationTemplate/tests/components/home/HomeController.tests.js:21:25)\n```\n. If a repro case will help, here's my repo: https://github.com/japhar81/foundationTemplate\n\n```\ngit clone https://github.com/japhar81/foundationTemplate\ncd foundationTemplate\nnpm install\nbower install\ngulp\nnode_modules/karma/bin/karma start karma.config.js --log-level debug --single-run\n```\n. @stryju that's good to know, but.. how do i make the tests work :)\n. @AntJanus nice work! One question, how the heck does one write unit tests for custom controllers? I wrote a dead-simple controller;\n\n```\n(function () {\n    'use strict';\n    angular.module('application')\n        .controller('HomeController', HomeController)\n    ;\n    HomeController.$inject = ['$scope', '$stateParams', '$state', '$controller'];\n    function HomeController($scope, $stateParams, $state, $controller) {\n        angular.extend(this, $controller('DefaultController', {\n            $scope: $scope,\n            $stateParams: $stateParams,\n            $state: $state\n        }));\n        $scope.test = \"test1\";\n    }\n})();\n```\n\nAnd what I thought was an appropriate karma test to match;\n\n```\n'use strict';\n\ndescribe('Unit: HomeController', function() {\n    beforeEach(module('application'));\n\n    it('should exist', inject(function(FoundationApi) {\n        expect(FoundationApi).not.toEqual(null);\n    }));\n\n    var ctrl, scope;\n\n    beforeEach(inject(function($controller, $rootScope) {\n        scope = $rootScope.$new();\n        ctrl = $controller('HomeController', {\n            $scope: scope\n        });\n    }));\n\n    it('should have $scope.test set to test1',\n        function() {\n            expect(scope.test).toEqual(\"test1\");\n        });\n});\n```\n\nHowever, I always get; \n\n```\nTypeError: Cannot read property 'replace' of null\n        at Object.init (/Users/hzektser/IdeaProjects/foundationTemplate/bower_components/foundation-apps/dist/js/foundation-apps.js:630:79)\n        at mqInitRun (/Users/hzektser/IdeaProjects/foundationTemplate/bower_components/foundation-apps/dist/js/foundation-apps.js:596:12)\n        at Object.invoke (/Users/hzektser/IdeaProjects/foundationTemplate/bower_components/angular/angular.js:4203:17)\n        at /Users/hzektser/IdeaProjects/foundationTemplate/bower_components/angular/angular.js:4025:71\n        at forEach (/Users/hzektser/IdeaProjects/foundationTemplate/bower_components/angular/angular.js:323:20)\n        at Object.createInjector [as injector] (/Users/hzektser/IdeaProjects/foundationTemplate/bower_components/angular/angular.js:4025:3)\n        at Object.workFn (/Users/hzektser/IdeaProjects/foundationTemplate/bower_components/angular-mocks/angular-mocks.js:2425:52)\n    TypeError: Cannot read property 'test' of undefined\n        at Object.<anonymous> (/Users/hzektser/IdeaProjects/foundationTemplate/tests/components/home/HomeController.tests.js:21:25)\n```\n. If a repro case will help, here's my repo: https://github.com/japhar81/foundationTemplate\n\n```\ngit clone https://github.com/japhar81/foundationTemplate\ncd foundationTemplate\nnpm install\nbower install\ngulp\nnode_modules/karma/bin/karma start karma.config.js --log-level debug --single-run\n```\n. @stryju that's good to know, but.. how do i make the tests work :)\n. ",
    "vanthiyathevan": "So far that is all the error i got.\n. I was not including the `_settings.scss` file because it was missing in the folder created by `bower install`\nI've copied the file the repo and it works now.\n. So far that is all the error i got.\n. I was not including the `_settings.scss` file because it was missing in the folder created by `bower install`\nI've copied the file the repo and it works now.\n. ",
    "blacklizard": "By default watch() won't be triggered for addition or deletion of file if we use absolute path, it's will be triggered if we use relative path.. Removing the dot makes it a relative path.\n\nOther people who having similar problem: http://foundation.zurb.com/forum/posts/21204-f4a-npm-start-not-picking-up-all-changes\n. personally for all my projects, in gulpfile I use relative paths.. Works.well for me so far.\n\nWhat I can suggest is, use absolute path if you don't want to detect addition or deletion of files, if you want to detect addition or deletion use relative path. :)\n. More detailed information why this is happening: https://github.com/shama/gaze/issues/84\n. `<code>` dosen't work with HTML elements \n. By default watch() won't be triggered for addition or deletion of file if we use absolute path, it's will be triggered if we use relative path.. Removing the dot makes it a relative path.\n\nOther people who having similar problem: http://foundation.zurb.com/forum/posts/21204-f4a-npm-start-not-picking-up-all-changes\n. personally for all my projects, in gulpfile I use relative paths.. Works.well for me so far.\n\nWhat I can suggest is, use absolute path if you don't want to detect addition or deletion of files, if you want to detect addition or deletion use relative path. :)\n. More detailed information why this is happening: https://github.com/shama/gaze/issues/84\n. `<code>` dosen't work with HTML elements \n. ",
    "maikelvl": "Accidentally commited what had to be a separate pull request :(\n. Thanks @gakimball\n. Great! :D\n. This could fix also #77\n. Yes, that's correct :D Thanks for testing.\n. Accidentally commited what had to be a separate pull request :(\n. Thanks @gakimball\n. Great! :D\n. This could fix also #77\n. Yes, that's correct :D Thanks for testing.\n. ",
    "iamontheinet": "Forgot to mention my OS: Mac OS X Yosemite 10.10.1\n. @gakimball Sorry for the late response. Your first suggestion to install bundler via `gem install bundler` before running **_foundation-apps new**_ did it for me! \n\n```\nDownloading the Foundation for Apps template...\nDone downloading!\n\nInstalling dependencies...\nnpm  =>  bower  =>  bundler\n\nYou're all set! Now run foundation-apps watch while inside the app folder\n```\n\nThanks!\n. Forgot to mention my OS: Mac OS X Yosemite 10.10.1\n. @gakimball Sorry for the late response. Your first suggestion to install bundler via `gem install bundler` before running **_foundation-apps new**_ did it for me! \n\n```\nDownloading the Foundation for Apps template...\nDone downloading!\n\nInstalling dependencies...\nnpm  =>  bower  =>  bundler\n\nYou're all set! Now run foundation-apps watch while inside the app folder\n```\n\nThanks!\n. ",
    "bclinkinbeard": "I have bundler installed and get the same error.\n. I have bundler installed and get the same error.\n. ",
    "cshenry13": "I've installed bundler with `gem install bundler`, and then tried to create a new project with `foundation-apps new myApp`, but am getting the same error message.\n\nI looked at the contents of the folder as the next step directs and there isn't anything there. My error is exactly the same as the one posted above, and I'm on Windows 7.\n\nIs there something else I need to do?\n. @gakimball I mean it doesn't show me a folder in the directory where I did `foundation-apps new myApp`\n\nI was expecting a new subfolder titled \"myApp\", but it isn't where I'd expect it to be at least.\n. It returns an error:\n`error launching git: The system cannot find the file specified.`\n. Ah, okay. Thank you.\n. I've installed bundler with `gem install bundler`, and then tried to create a new project with `foundation-apps new myApp`, but am getting the same error message.\n\nI looked at the contents of the folder as the next step directs and there isn't anything there. My error is exactly the same as the one posted above, and I'm on Windows 7.\n\nIs there something else I need to do?\n. @gakimball I mean it doesn't show me a folder in the directory where I did `foundation-apps new myApp`\n\nI was expecting a new subfolder titled \"myApp\", but it isn't where I'd expect it to be at least.\n. It returns an error:\n`error launching git: The system cannot find the file specified.`\n. Ah, okay. Thank you.\n. ",
    "anevaude": "Hey there. Just reaching out to say I am experiencing the same error. When trying to install, Terminal just freezes at\n\n`Downloading the Foundation for Apps template...\nDone downloading!\n\nInstalling dependencies...`\n\nBut doing a direct Git Clone seemed successful. Will keep an eye on this thread. Good luck :)\n. Hey there. Just reaching out to say I am experiencing the same error. When trying to install, Terminal just freezes at\n\n`Downloading the Foundation for Apps template...\nDone downloading!\n\nInstalling dependencies...`\n\nBut doing a direct Git Clone seemed successful. Will keep an eye on this thread. Good luck :)\n. ",
    "bstankowski": "Hey,\n\nI\u2019ve got similar problems. Running `foundation-apps new myApp` freezes on:\n\n```\nInstalling dependencies...\nnpm  =>  bower  =>  bundler\n```\n\n`npm` highlighted and it doesn\u2019t move to `bower`. I let it run for 20 minutes but no change. \n\nI tried the manual install you suggested @gakimball and `npm install` goes fine until what you can find in [npm_install_err.log](https://dl.dropboxusercontent.com/u/69822/foundation-apps/npm_install_err.log) (too long to paste here). And here\u2019s my [npm-debug.log](https://dl.dropboxusercontent.com/u/69822/foundation-apps/npm-debug.log).\n\nDon\u2019t know why, I\u2019ve never had any problems installing npm stuff.\nI\u2019m on OS X 10.10.1.\n\nI tried several times, it worked just once, but then I got this after `foundation-apps watch`:\n\n```\n> foundation-apps-template@1.0.2 start /Applications/MAMP/htdocs/dev/foundation/apps/myApp\n> gulp\n\n\nmodule.js:340\n    throw err;\n          ^\nError: Cannot find module 'core-util-is'\n    at Function.Module._resolveFilename (module.js:338:15)\n    at Function.Module._load (module.js:280:25)\n    at Module.require (module.js:364:17)\n    at require (module.js:380:17)\n    at Object.<anonymous> (/Applications/MAMP/htdocs/dev/foundation/apps/myApp/node_modules/gulp-util/node_modules/multipipe/node_modules/duplexer2/node_modules/readable-stream/lib/_stream_readable.js:46:12)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.require (module.js:364:17)\n\nnpm ERR! foundation-apps-template@1.0.2 start: `gulp`\nnpm ERR! Exit status 8\nnpm ERR!\nnpm ERR! Failed at the foundation-apps-template@1.0.2 start script.\nnpm ERR! This is most likely a problem with the foundation-apps-template package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     gulp\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls foundation-apps-template\nnpm ERR! There is likely additional logging output above.\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"start\"\nnpm ERR! cwd /Applications/MAMP/htdocs/dev/foundation/apps/myApp\nnpm ERR! node -v v0.10.30\nnpm ERR! npm -v 1.4.9\nnpm ERR! code ELIFECYCLE\nnpm ERR!\nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Applications/MAMP/htdocs/dev/foundation/apps/myApp/npm-debug.log\nnpm ERR! not ok code 0\n```\n\nAnd I\u2019m stuck here. \n. Well, as usual, found the issue after posting. I noticed a bunch of other things stopped working, so I eventually updated npm to 2.1.18 and it\u2019s all good now. \n\nSo if anyone has similar problems\u2013start with updating your npm. \n. Hey,\n\nI\u2019ve got similar problems. Running `foundation-apps new myApp` freezes on:\n\n```\nInstalling dependencies...\nnpm  =>  bower  =>  bundler\n```\n\n`npm` highlighted and it doesn\u2019t move to `bower`. I let it run for 20 minutes but no change. \n\nI tried the manual install you suggested @gakimball and `npm install` goes fine until what you can find in [npm_install_err.log](https://dl.dropboxusercontent.com/u/69822/foundation-apps/npm_install_err.log) (too long to paste here). And here\u2019s my [npm-debug.log](https://dl.dropboxusercontent.com/u/69822/foundation-apps/npm-debug.log).\n\nDon\u2019t know why, I\u2019ve never had any problems installing npm stuff.\nI\u2019m on OS X 10.10.1.\n\nI tried several times, it worked just once, but then I got this after `foundation-apps watch`:\n\n```\n> foundation-apps-template@1.0.2 start /Applications/MAMP/htdocs/dev/foundation/apps/myApp\n> gulp\n\n\nmodule.js:340\n    throw err;\n          ^\nError: Cannot find module 'core-util-is'\n    at Function.Module._resolveFilename (module.js:338:15)\n    at Function.Module._load (module.js:280:25)\n    at Module.require (module.js:364:17)\n    at require (module.js:380:17)\n    at Object.<anonymous> (/Applications/MAMP/htdocs/dev/foundation/apps/myApp/node_modules/gulp-util/node_modules/multipipe/node_modules/duplexer2/node_modules/readable-stream/lib/_stream_readable.js:46:12)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.require (module.js:364:17)\n\nnpm ERR! foundation-apps-template@1.0.2 start: `gulp`\nnpm ERR! Exit status 8\nnpm ERR!\nnpm ERR! Failed at the foundation-apps-template@1.0.2 start script.\nnpm ERR! This is most likely a problem with the foundation-apps-template package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     gulp\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls foundation-apps-template\nnpm ERR! There is likely additional logging output above.\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"start\"\nnpm ERR! cwd /Applications/MAMP/htdocs/dev/foundation/apps/myApp\nnpm ERR! node -v v0.10.30\nnpm ERR! npm -v 1.4.9\nnpm ERR! code ELIFECYCLE\nnpm ERR!\nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Applications/MAMP/htdocs/dev/foundation/apps/myApp/npm-debug.log\nnpm ERR! not ok code 0\n```\n\nAnd I\u2019m stuck here. \n. Well, as usual, found the issue after posting. I noticed a bunch of other things stopped working, so I eventually updated npm to 2.1.18 and it\u2019s all good now. \n\nSo if anyone has similar problems\u2013start with updating your npm. \n. ",
    "spsaucier": "Same issue on multiple machines, but when going through your manual install process instead, there were no errors & it worked fine.\n\nIt did require my input in bower asking whether it could monitor data anonymously - could that be holding it up?\n. No, no sudo was required.\n. Nope, that was the only one, & it seems like that was the part that hung in the automated version.\n. I've modified mine to include an optional `class` value, which makes it much more useful in dynamic applications.\n\nThe biggest problem for me now is that variables aren't rendered inside the `tab-content` - anything like `{{ $index }}` is simply blank.\n. @gakimball yes, using `<div zf-offcanvas position=\"left\" id=\"menu\"></div>` shows the same error.\n@circlingthesun Right, that's where I'm guessing `ngHtml2js` is mis-formatting the built-in offcanvas.html, which is this:\n`<div class=\"off-canvas {{ position }}\" ng-class=\"{'is-active': active}\" ng-transclude></div>`\n. @circlingthesun Inject into the `run()` function?\n`function run($templateCache) {`\n`FastClick.attach(document.body);`\n`console.log($templateCache.get('components/offcanvas/offcanvas.html'));`\n`}`\nThis results in `Uncaught Error: [$injector:unpr] Unknown provider: tProvider <- t`, which also seems to be a product of minification - I don't know of an alternate format for injecting ng variables in functions. Trying to inject $templateCache into controllers or `config.$inject` & use it results in `ReferenceError: $templateCache is not defined`\n\nSide note: would something like [ng-annotate](https://github.com/olov/ng-annotate) in the build process improve this situation?\n. Hmm, well I did that here:\n`config.$inject = ['$urlRouterProvider', '$locationProvider', '$templateCache'];`\n`function config($urlProvider, $locationProvider, $templateCache) {`\n`console.log($templateCache.get('components/offcanvas/offcanvas.html'));`\n`...`\n`});`\n\nand got `Unknown provider: $templateCache`. Is $templateCache built-in or do I need to add a module?\n. Ah, I see.\nWell, that console.log results in `undefined`.\n. This error is still persisting in the most up-to-date version of Foundation for Apps. The `undefined` console.log message means that the built-in template for zfOffcanvas is not being loaded into the app correctly, right?\n. Same issue on multiple machines, but when going through your manual install process instead, there were no errors & it worked fine.\n\nIt did require my input in bower asking whether it could monitor data anonymously - could that be holding it up?\n. No, no sudo was required.\n. Nope, that was the only one, & it seems like that was the part that hung in the automated version.\n. I've modified mine to include an optional `class` value, which makes it much more useful in dynamic applications.\n\nThe biggest problem for me now is that variables aren't rendered inside the `tab-content` - anything like `{{ $index }}` is simply blank.\n. @gakimball yes, using `<div zf-offcanvas position=\"left\" id=\"menu\"></div>` shows the same error.\n@circlingthesun Right, that's where I'm guessing `ngHtml2js` is mis-formatting the built-in offcanvas.html, which is this:\n`<div class=\"off-canvas {{ position }}\" ng-class=\"{'is-active': active}\" ng-transclude></div>`\n. @circlingthesun Inject into the `run()` function?\n`function run($templateCache) {`\n`FastClick.attach(document.body);`\n`console.log($templateCache.get('components/offcanvas/offcanvas.html'));`\n`}`\nThis results in `Uncaught Error: [$injector:unpr] Unknown provider: tProvider <- t`, which also seems to be a product of minification - I don't know of an alternate format for injecting ng variables in functions. Trying to inject $templateCache into controllers or `config.$inject` & use it results in `ReferenceError: $templateCache is not defined`\n\nSide note: would something like [ng-annotate](https://github.com/olov/ng-annotate) in the build process improve this situation?\n. Hmm, well I did that here:\n`config.$inject = ['$urlRouterProvider', '$locationProvider', '$templateCache'];`\n`function config($urlProvider, $locationProvider, $templateCache) {`\n`console.log($templateCache.get('components/offcanvas/offcanvas.html'));`\n`...`\n`});`\n\nand got `Unknown provider: $templateCache`. Is $templateCache built-in or do I need to add a module?\n. Ah, I see.\nWell, that console.log results in `undefined`.\n. This error is still persisting in the most up-to-date version of Foundation for Apps. The `undefined` console.log message means that the built-in template for zfOffcanvas is not being loaded into the app correctly, right?\n. ",
    "bbodine1": "I had an issue with the CLI locking up trying to install NPM. I deleted what the CLI had made and re ran with the manual process and it worked like a champ. Wrote a post about it [on Codepen](http://codepen.io/bbodine1/blog/how-to-install-foundation-for-apps-manually).\n. I had an issue with the CLI locking up trying to install NPM. I deleted what the CLI had made and re ran with the manual process and it worked like a champ. Wrote a post about it [on Codepen](http://codepen.io/bbodine1/blog/how-to-install-foundation-for-apps-manually).\n. ",
    "resistdesign": "### What I've found is that sometimes gem doesn't install bundler right and it gets \"le broke\". So...\n\n**I did the following:**\n1. Install bundler again with `sudo`.\n2. Uninstall bundler with `sudo`.\n3. Install bundler again, but normally.\n4. Close and reopen my terminal app. (It seems there is a bash session sourcing issue as well.)\n. ### What I've found is that sometimes gem doesn't install bundler right and it gets \"le broke\". So...\n\n**I did the following:**\n1. Install bundler again with `sudo`.\n2. Uninstall bundler with `sudo`.\n3. Install bundler again, but normally.\n4. Close and reopen my terminal app. (It seems there is a bash session sourcing issue as well.)\n. ",
    "micjamking": "@AntJanus That makes sense, however it seems more practical for development to use FA via `bower install --save foundation-apps` and wire up the needed dependencies rather than the CLI tool.\n. @AntJanus That makes sense, however it seems more practical for development to use FA via `bower install --save foundation-apps` and wire up the needed dependencies rather than the CLI tool.\n. ",
    "safrazik": "Does foundation have motion ui too?\n. Thanks @AntJanus and @gakimball for the detailed answer. I have worked with Foundation 2 and 3 in the past and then moved to different UI frameworks as I was no longer developing websites but Single page Apps. I really like the conventions used in Foundation. `Foundation for Apps` made a comeback for me. Flex box based grid system is awesome. Motion UI is great. Adding the animation and `ng-enter`, `ng-leave(-active)` classes at the right time just works. I have tried a similar approach with frameworks like [ionic](http://ionicframework.com) too. But they didn't work as expected. \n\nFor Durandal, I have done all the integration parts for modal dialogs, MessageBox, notification, panel, off canvas, action sheet and **transitions** with MotionUI classes - in Durandal way. Once I finalize the API, I shall open source it. I am so confident that Durandal community will like it. I will keep an eye on this project and explore more. And will try to contribute, if I can.\n\nI don't have any problem about those extra JavaScript files as long as the internal CSS API doesn't change. I hope you understand my concern.\n\nKeep up the great work. Thank you for the awesome framework.\n. Sure! I'll be back here when I'm done. Soon!\n. @gakimball I have setup a github project for Durandal for Foundation Apps \n\nProject URL: https://github.com/DurandalForge/durandal-foundation-starterkit\nLIVE DEMO: http://durandalforge.github.io/durandal-foundation-starterkit/\n\nPlease take a look and give me your feedback. Thanks\n. The `entrance` transition is part of Durandal. Everything else is from Foundation (Motion UI). If you just open the console, you can see the Foundation's animation classes being switched with the interactions\n. Does foundation have motion ui too?\n. Thanks @AntJanus and @gakimball for the detailed answer. I have worked with Foundation 2 and 3 in the past and then moved to different UI frameworks as I was no longer developing websites but Single page Apps. I really like the conventions used in Foundation. `Foundation for Apps` made a comeback for me. Flex box based grid system is awesome. Motion UI is great. Adding the animation and `ng-enter`, `ng-leave(-active)` classes at the right time just works. I have tried a similar approach with frameworks like [ionic](http://ionicframework.com) too. But they didn't work as expected. \n\nFor Durandal, I have done all the integration parts for modal dialogs, MessageBox, notification, panel, off canvas, action sheet and **transitions** with MotionUI classes - in Durandal way. Once I finalize the API, I shall open source it. I am so confident that Durandal community will like it. I will keep an eye on this project and explore more. And will try to contribute, if I can.\n\nI don't have any problem about those extra JavaScript files as long as the internal CSS API doesn't change. I hope you understand my concern.\n\nKeep up the great work. Thank you for the awesome framework.\n. Sure! I'll be back here when I'm done. Soon!\n. @gakimball I have setup a github project for Durandal for Foundation Apps \n\nProject URL: https://github.com/DurandalForge/durandal-foundation-starterkit\nLIVE DEMO: http://durandalforge.github.io/durandal-foundation-starterkit/\n\nPlease take a look and give me your feedback. Thanks\n. The `entrance` transition is part of Durandal. Everything else is from Foundation (Motion UI). If you just open the console, you can see the Foundation's animation classes being switched with the interactions\n. ",
    "the-ult": "Maybe you could ask @Matso of the AngularJS team for his view/opinion on this matter? \nSince wrote/rewrote and perfected ngAnimate. \n\nI'm definitely for using ngAnimate as much as possible. \n\nBTW. Really looking forward at working with foundation apps\n. Maybe you could ask @Matso of the AngularJS team for his view/opinion on this matter? \nSince wrote/rewrote and perfected ngAnimate. \n\nI'm definitely for using ngAnimate as much as possible. \n\nBTW. Really looking forward at working with foundation apps\n. ",
    "shoveland": "This works perfectly, thank you. I've also found that zf-hard-toggle does not appear to work for action sheets (https://github.com/zurb/foundation-apps/issues/321) - they will close the called element but not close other open elements as hard-toggle is supposed to. Any ideas there? \n. This works perfectly, thank you. I've also found that zf-hard-toggle does not appear to work for action sheets (https://github.com/zurb/foundation-apps/issues/321) - they will close the called element but not close other open elements as hard-toggle is supposed to. Any ideas there? \n. ",
    "myqroft": "They are. \n\nTo be clear, I'm using ng-repeat on an li to create a nav menu, and am using {{item.url}}, {{item.name}}, and am trying to use {{item.icon}} to output the name of the icon into the data-src. \n\neg. < img zf-iconic=\"\" data-src=\"bower_components/foundation-apps/iconic/{{item.icon}}.svg\" class=\"iconic-md\" >\n\n(This is all currently taking place within the home.html partial)\n. Sweet! Glad I didn't waste your time. :) Also, thanks for your video, 'twas helpful in getting me started.\n. Sweet! I look forward to it!\n\nI'll keep trying to tackle this and see if I can come up with a solution worth submitting a PR for.\n. They are. \n\nTo be clear, I'm using ng-repeat on an li to create a nav menu, and am using {{item.url}}, {{item.name}}, and am trying to use {{item.icon}} to output the name of the icon into the data-src. \n\neg. < img zf-iconic=\"\" data-src=\"bower_components/foundation-apps/iconic/{{item.icon}}.svg\" class=\"iconic-md\" >\n\n(This is all currently taking place within the home.html partial)\n. Sweet! Glad I didn't waste your time. :) Also, thanks for your video, 'twas helpful in getting me started.\n. Sweet! I look forward to it!\n\nI'll keep trying to tackle this and see if I can come up with a solution worth submitting a PR for.\n. ",
    "designchief": "Here is an example of the error I get when I try to change the breakpoints in the settings file:\n\n[01:15:02] Starting 'sass'...\n[01:15:04] gulp-ruby-sass: directory\n{ [Error: error /Users/kieran/../AI-App-Beta-01/bower_components/foundation-apps/scss/helpers/_breakpoints.scss (Line 79: $number: \"rem-calc(440)\" is not a number for `unit')]\n  message: 'error /Users/kieran/../AI-App-Beta-01/bower_components/foundation-apps/scss/helpers/_breakpoints.scss (Line 79: $number: \"rem-calc(440)\" is not a number for`unit\\')',\n  showStack: false,\n  showProperties: true,\n  plugin: 'gulp-ruby-sass',\n  __safety: { toString: [Function] } }\n[01:15:04] Finished 'sass' after 2.13 s\n. When I just use pixel units, everything works as expected\n\n$breakpoints: (\n   small: 0,\n   medium: 440,\n  large: 640,\n    xlarge: 800, \n   xxlarge: 1200,\n );\n. Thanks, this is working fine for me now\n. I hadn\u2019t understood from the docs that I needed to copy the components folder from the bower folder to the client folder. I did that and the zf-panel now appears\n. Thanks for the reply, I know it wasn\u2019t really an issue with the Apps code. \n\ni would love to see some more granular explanation of the Angular JS and examples on how to use this for us JS newbies...\n\nI will check out the library you mentioned, thanks again.\n. Thanks escapedcat,\n\nI have seen the Controllers documentation but the JS is beyond my understanding,\nI have been trying to get it to work but not having any joy.\nSo I would need to create a custom controller for my Start page?\nIs there somehwere in my JS that I could grab the current controller for that page so i can see what I need to do?\n\nSorry, JS novice here!!\n. I tried the custom controller and got it to work ok - \"StartController\". My Modal is #tcModal\n\nangular.module('application')\n.controller('StartController', StartController)\n;\nStartController.$inject = ['$scope', '$stateParams', '$state', '$controller'];\nfunction StartController($scope, $stateParams, $state, $controller) {\nangular.extend(this, $controller('DefaultController', {$scope: $scope, $stateParams: $stateParams, $state: $state}));\n  // your code...\n}\n\nBut when I add the \"FoundationApi.publish('tcModal', 'open');\" line below\nit does not work, I just get a page with some elements missing which makes me think it is breaking the controller\n\nangular.module('application')\n.controller('StartController', StartController)\n;\nStartController.$inject = ['$scope', '$stateParams', '$state', '$controller'];\nfunction StartController($scope, $stateParams, $state, $controller) {\nangular.extend(this, $controller('DefaultController', {$scope: $scope, $stateParams: $stateParams, $state: $state}));\n  // your code...\n  FoundationApi.publish('tcModal', 'open');\n}\n. Hi, I meant to say i had tried that, and then i had tried one like the one in the docs\n\nHere is the code that I tried first that is the same as yours..\n\nangular.module('application')\n.controller('StartController', StartController)\n;\nStartController.$inject = ['$scope', '$stateParams', '$state', '$controller', 'FoundationApi'];\nfunction StartController($scope, $stateParams, $state, $controller, fa) {\nangular.extend(this, $controller('DefaultController', {$scope: $scope, $stateParams: $stateParams, $state: $state}));\n  // your code...\n  foundationApi.publish('tcModal', 'open');\n}\n. Wow, thanks for that,\nit is loading up fine on startup now\n. Only problem now is that \n- the Modal content does not scroll (thought I fixed this with overflow:scroll) but obviously not so i cannot actually scroll to the end of the content \n  and\n- it looks like the Modal will show now every time that page is loaded, whereas I want the modal to only appear until the user presses the close button, in which case it will not appear again when they open or re-launch the app\n\nI really appreciate your help, \nI have not been able to find an answer to this anywhere.\n\nI was told on the Forum (Rafi) that the Modal was the best way to go for a Mandatory Terms and Conditions Page (user clicks to agree and then they don\u2019t see the modal again unless we change something like update the app etc)\n\nI thought that some of this functionality was built into the Modals? but I\u201dm not sure how to do it\n. Hi webnugget, thanks for your comment.\nI really dont know how to implement what you have there, and how it applies to my issue.\n\nI am not familiar with JS and saving results etc,\nso I guess I need more \"How to..\" type help...\n\nthanks again\n. Hi Rafi, thanks for your comment, I saw Jeanies\u2019s comment and I have replied.\n\nI know this has drifted off the original topic, but is there a defect with the Modal that prevents the scrolling of content that is larger than the height of the device. My modal wont scroll at all, so is that a defect?\n. Here is an example of the error I get when I try to change the breakpoints in the settings file:\n\n[01:15:02] Starting 'sass'...\n[01:15:04] gulp-ruby-sass: directory\n{ [Error: error /Users/kieran/../AI-App-Beta-01/bower_components/foundation-apps/scss/helpers/_breakpoints.scss (Line 79: $number: \"rem-calc(440)\" is not a number for `unit')]\n  message: 'error /Users/kieran/../AI-App-Beta-01/bower_components/foundation-apps/scss/helpers/_breakpoints.scss (Line 79: $number: \"rem-calc(440)\" is not a number for`unit\\')',\n  showStack: false,\n  showProperties: true,\n  plugin: 'gulp-ruby-sass',\n  __safety: { toString: [Function] } }\n[01:15:04] Finished 'sass' after 2.13 s\n. When I just use pixel units, everything works as expected\n\n$breakpoints: (\n   small: 0,\n   medium: 440,\n  large: 640,\n    xlarge: 800, \n   xxlarge: 1200,\n );\n. Thanks, this is working fine for me now\n. I hadn\u2019t understood from the docs that I needed to copy the components folder from the bower folder to the client folder. I did that and the zf-panel now appears\n. Thanks for the reply, I know it wasn\u2019t really an issue with the Apps code. \n\ni would love to see some more granular explanation of the Angular JS and examples on how to use this for us JS newbies...\n\nI will check out the library you mentioned, thanks again.\n. Thanks escapedcat,\n\nI have seen the Controllers documentation but the JS is beyond my understanding,\nI have been trying to get it to work but not having any joy.\nSo I would need to create a custom controller for my Start page?\nIs there somehwere in my JS that I could grab the current controller for that page so i can see what I need to do?\n\nSorry, JS novice here!!\n. I tried the custom controller and got it to work ok - \"StartController\". My Modal is #tcModal\n\nangular.module('application')\n.controller('StartController', StartController)\n;\nStartController.$inject = ['$scope', '$stateParams', '$state', '$controller'];\nfunction StartController($scope, $stateParams, $state, $controller) {\nangular.extend(this, $controller('DefaultController', {$scope: $scope, $stateParams: $stateParams, $state: $state}));\n  // your code...\n}\n\nBut when I add the \"FoundationApi.publish('tcModal', 'open');\" line below\nit does not work, I just get a page with some elements missing which makes me think it is breaking the controller\n\nangular.module('application')\n.controller('StartController', StartController)\n;\nStartController.$inject = ['$scope', '$stateParams', '$state', '$controller'];\nfunction StartController($scope, $stateParams, $state, $controller) {\nangular.extend(this, $controller('DefaultController', {$scope: $scope, $stateParams: $stateParams, $state: $state}));\n  // your code...\n  FoundationApi.publish('tcModal', 'open');\n}\n. Hi, I meant to say i had tried that, and then i had tried one like the one in the docs\n\nHere is the code that I tried first that is the same as yours..\n\nangular.module('application')\n.controller('StartController', StartController)\n;\nStartController.$inject = ['$scope', '$stateParams', '$state', '$controller', 'FoundationApi'];\nfunction StartController($scope, $stateParams, $state, $controller, fa) {\nangular.extend(this, $controller('DefaultController', {$scope: $scope, $stateParams: $stateParams, $state: $state}));\n  // your code...\n  foundationApi.publish('tcModal', 'open');\n}\n. Wow, thanks for that,\nit is loading up fine on startup now\n. Only problem now is that \n- the Modal content does not scroll (thought I fixed this with overflow:scroll) but obviously not so i cannot actually scroll to the end of the content \n  and\n- it looks like the Modal will show now every time that page is loaded, whereas I want the modal to only appear until the user presses the close button, in which case it will not appear again when they open or re-launch the app\n\nI really appreciate your help, \nI have not been able to find an answer to this anywhere.\n\nI was told on the Forum (Rafi) that the Modal was the best way to go for a Mandatory Terms and Conditions Page (user clicks to agree and then they don\u2019t see the modal again unless we change something like update the app etc)\n\nI thought that some of this functionality was built into the Modals? but I\u201dm not sure how to do it\n. Hi webnugget, thanks for your comment.\nI really dont know how to implement what you have there, and how it applies to my issue.\n\nI am not familiar with JS and saving results etc,\nso I guess I need more \"How to..\" type help...\n\nthanks again\n. Hi Rafi, thanks for your comment, I saw Jeanies\u2019s comment and I have replied.\n\nI know this has drifted off the original topic, but is there a defect with the Modal that prevents the scrolling of content that is larger than the height of the device. My modal wont scroll at all, so is that a defect?\n. ",
    "Dillie-O": "I didn't do a full redefine of the application in my custom app.js when I came across the problem, I simply defined my controller in there like this:\n\n``` js\nangular.module('application')\n.controller('NewsController', ['$scope', '$stateParams', '$state', '$http', function ($scope, $stateParams, $state, $http) {\n   $scope.newsTime = 'Not retrieved yet.';\n   $scope.getTime = function () {\n\n   var responsePromise = $http.get(\"/api/info\");\n\n   responsePromise.success(function (data, status, headers, config) {\n      $scope.newsTime = data;\n   });\n\n   responsePromise.error(function (data, status, headers, config) {\n      $scope.newsTime = 'Failed to get time: ' + data;\n   });\n};\n}\n]);\n```\n\nI tried putting this in my own controllers.js, and even directly in the page template. The error I got when doing this was:\n\n```\n\"Error: [ng:areq] Argument 'NewsController' is not a function, got undefined\nhttp://errors.angularjs.org/1.3.6/ng/areq?p0=NewsController&p1=not%20a            1.#QNAN0unction%2C%20got%20undefined\nminErr/<@http://localhost:54195/assets/js/app.js:1:654\nassertArg@http://localhost:54195/assets/js/app.js:1:12046\nassertArgFn@http://localhost:54195/assets/js/app.js:1:12248\n$ControllerProvider/this.$get</<@http://localhost:54195/assets/js/app.js:3:10472\n$ViewDirectiveFill/<.compile/<@http://localhost:54195/assets/js/app.js:11:4165\ninvokeLinkFn@http://localhost:54195/assets/js/app.js:3:5296\nnodeLinkFn@http://localhost:54195/assets/js/app.js:2:23568\ncompositeLinkFn@http://localhost:54195/assets/js/app.js:2:13408\ncompile/<@http://localhost:54195/assets/js/app.js:2:12079\nupdateView@http://localhost:54195/assets/js/app.js:11:2951\n$ViewDirective/directive.compile/</<@http://localhost:54195/assets/js/app.js:11:3511\n$RootScopeProvider/this.$get</Scope.prototype.$broadcast@http://localhost:54195/assets/js/app.js:4:29271\n$get/$state.transitionTo/$state.transition<@http://localhost:54195/assets/js/app.js:10:28592\nprocessQueue@http://localhost:54195/assets/js/app.js:4:14675\nscheduleProcessQueue/<@http://localhost:54195/assets/js/app.js:4:14939\n$RootScopeProvider/this.$get</Scope.prototype.$eval@http://localhost:54195/assets/js/app.js:4:27049\n$RootScopeProvider/this.$get</Scope.prototype.$digest@http://localhost:54195/assets/js/app.js:4:24924\n$RootScopeProvider/this.$get</Scope.prototype.$apply@http://localhost:54195/assets/js/app.js:4:27434\ndone@http://localhost:54195/assets/js/app.js:3:16426\ncompleteRequest@http://localhost:54195/assets/js/app.js:3:20115\ncreateHttpBackend/</xhr.onload@http://localhost:54195/assets/js/app.js:3:21037\n\" app.js:4:3721\n```\n\nLet me know if you need any other details.\n. Yes. I haven't done any of the major components, but the basic ones work. Should I be putting my controller definitions in the app.js file instead maybe? This code is still running out of the stable branch (1.0 or maybe 1.0.1) so I don't know if that matters or not. If it is in some updated code that is being released, I can update via CLI or manually update and try again.\n. I did a fresh build from scratch and verified the bug. You can grab the repo here:\n\nhttps://github.com/Dillie-O/z4a-controller-bug\n\nThe default .gitignore seems to not have included the build folder, so if you want me to update that to include the node modules and all that, I can do that.\n\nJust to make sure I'm not doing something wrong, here's how I get to this point.\n1. At terminal, run foundation-apps new z4a-controller-bug\n2. Nav into z4a-conroller-bug folder\n3. At terminal, run npm install\n4. At terminal, run bower install\n5. At terminal, run bundle\n6. At terminal, run gulp build (just to get things in place)\n7. Create client/templates/news.html\n8. Create client/assets/js/controllers.js\n9. Update client/index.html file to have proper angular routing URLs (maybe update template for this?)\n10. At terminal, run gulp - builds and starts test server\n11. Open browser and navigate to news page.\n12. See that angular brackets are there instead of the \"Not retrieved yet.\" message in the controller.\n    13, Open up web console, you should see the error message there.\n\nThanks guys! Let me know if you need any more details.\n. Hazzah! That did the trick for me!\n\nThank YOU for putting together such a great framework!\n\nSo moving forward, would it be worthwhile to keep the *.js or maybe account for a controllers.js file too?\n. I don't mind a production default, but having a gulp command build-debug or something like that would be great. I might have to try that out myself!\n. Oooh! I like that idea a lot! Thanks for that!\n. Hey guys! I really appreciate you taking the idea and running with it. I'm still figuring all this out myself and it would have taken a lot longer for me to piece it altogether.\n. Okay, I ran bower update, and specified 1.3.16 as the new option. That seemed to update a lot of things. I also was informed I was running an older version of bower, so I updated bower, ran bower update again, and got the same results. \n\nLooking at my bower.json file, my dependencies section still has `foundation-apps ~1.0.2` listed in the dependencies. Is this the latest version allowed through this process still? I thought 1.1 was released. Or do I need to update the bower.json file to require a newer version?\n. Good to know. I remember seeing the gulp updates (all good ones) so I'm not too worried about that.\n\nI was able to get things updated. For kicks I ran `foundation-apps update` and after a moment the command prompt returned to me, but nothing seemed to have occurred. So I ran `bower update` again and saw a lot of updates, and it looks like foundation is updated.\n\nI think it's safe to say at this point that I'm updated, now I'll just see if I need to make any tweaks to my code. Thanks!\n\nOne final note, running `foundation-apps -v` doesn't seem to return anything but a list of commands to run, I was expecting to see the version somewhere. Is that a bug?\n. Oooh, good to know. I'll update that now.\n\nSince I have you here, I'm seeing this error now when I try `foundationapps-build`\n\n> [09:37:02] 'uglify:foundation' errored after 1.1 ms\n> [09:37:02] TypeError: Object #<Object> has no method 'if'\n>     at Gulp.gulp.task.gulp.src.pipe.$.webserver.port (C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\gulpfile.js:152\n> :19)\n>     at module.exports (C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\node_modules\\gulp\\node_modules\\orchestrator\\li\n> b\\runTask.js:34:7)\n>     at Gulp.Orchestrator._runTask (C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\node_modules\\gulp\\node_modules\\orc\n> hestrator\\index.js:273:3)\n>     at Gulp.Orchestrator._runStep (C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\node_modules\\gulp\\node_modules\\orc\n> hestrator\\index.js:214:10)\n>     at C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\node_modules\\gulp\\node_modules\\orchestrator\\index.js:279:18\n>     at finish (C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\node_modules\\gulp\\node_modules\\orchestrator\\lib\\runTas\n> k.js:21:8)\n>     at cb (C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\node_modules\\gulp\\node_modules\\orchestrator\\lib\\runTask.js\n> :29:3)\n>     at Gulp.gulp.task.gulp.src.pipe.$.sass.includePaths (C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\gulpfile.js:\n> 130:2)\n>     at module.exports (C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\node_modules\\gulp\\node_modules\\orchestrator\\li\n> b\\runTask.js:34:7)\n>     at Gulp.Orchestrator._runTask (C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\node_modules\\gulp\\node_modules\\orc\n> hestrator\\index.js:273:3)\n\nAm I missing a library for that? I saw a gulp-if library out there, but the syntax seems different.\n. Good to know about removing those libraries. I did so and added gulp-if\n\nIt appears that through2 might still be needed even though front-router is in place? Here's my npm install warning:\n\n> npm WARN unmet dependency C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\node_modules\\gulp-ruby-sass\\node_modules\\vi\n> nyl-fs\\node_modules\\glob-stream requires through2@'^0.6.1' but will load\n> npm WARN unmet dependency undefined,\n> npm WARN unmet dependency which is version undefined\n\nand my foundation-apps build has this error now\n\n> npm WARN unmet dependency C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\node_modules\\gulp-ruby-sass\\node_modules\\vi\n> nyl-fs\\node_modules\\glob-stream requires through2@'^0.6.1' but will load\n> npm WARN unmet dependency undefined,\n> npm WARN unmet dependency which is version undefined\n\nMaybe I need to npm uninstall to flush everything and do a fresh npm install? Previously I did `npm uninstall front-matter` and `npm uninstall through2` to remove those libraries.\n\nI greatly appreciate your time!\n. Hazzah! That seemed to do the trick! I have a successful build and all.\n\nI have some custom front-matter issues now to resolve, but that's on me to fix 8^D\n\nThanks again!\n. Interestingly enough, a single click triggered the error twice:\n\n> Error: Hammer is not defined\n> link@http://prayerjournal.dev/assets/js/foundation.js:34:1388\n> cloneAndAnnotateFn/<@http://prayerjournal.dev/assets/js/foundation.js:9:6028\n> invokeLinkFn@http://prayerjournal.dev/assets/js/foundation.js:9:6149\n> nodeLinkFn@http://prayerjournal.dev/assets/js/foundation.js:8:24405\n> compileTemplateUrl/<@http://prayerjournal.dev/assets/js/foundation.js:9:1995\n> compositeLinkFn@http://prayerjournal.dev/assets/js/foundation.js:8:14121\n> compile/<@http://prayerjournal.dev/assets/js/foundation.js:8:12792\n> createBoundTranscludeFn/boundTranscludeFn@http://prayerjournal.dev/assets/js/foundation.js:8:15476\n> controllersBoundTransclude@http://prayerjournal.dev/assets/js/foundation.js:8:20509\n> ngRepeatDirective</<.compile/</<@http://prayerjournal.dev/assets/js/foundation.js:13:29493\n> $watchCollectionAction@http://prayerjournal.dev/assets/js/foundation.js:10:25791\n> $RootScopeProvider/this.$get</Scope.prototype.$digest@http://prayerjournal.dev/assets/js/foundation.js:10:27348\n> $RootScopeProvider/this.$get</Scope.prototype.$apply@http://prayerjournal.dev/assets/js/foundation.js:10:29370\n> done@http://prayerjournal.dev/assets/js/foundation.js:9:17667\n> completeRequest@http://prayerjournal.dev/assets/js/foundation.js:9:21382\n> createHttpBackend/</xhr.onload@http://prayerjournal.dev/assets/js/foundation.js:9:22304\n>  <div zf-closable=\"notification\" ng-repeat=\"notification in notifications\" title=\"notification.title\" image=\"notification.image\" notif-id=\"notification.id\" color=\"notification.color\" autoclose=\"notification.autoclose\" zf-swipe-close=\"swipe\" class=\"notification {{ color }} ng-isolate-scope\"> foundation.js:10:5014\n> \n> Error: Hammer is not defined\n> postLink@http://prayerjournal.dev/assets/js/foundation.js:38:2082\n> cloneAndAnnotateFn/<@http://prayerjournal.dev/assets/js/foundation.js:9:6028\n> invokeLinkFn@http://prayerjournal.dev/assets/js/foundation.js:9:6149\n> nodeLinkFn@http://prayerjournal.dev/assets/js/foundation.js:8:24405\n> compileTemplateUrl/<@http://prayerjournal.dev/assets/js/foundation.js:9:1995\n> compositeLinkFn@http://prayerjournal.dev/assets/js/foundation.js:8:14121\n> compile/<@http://prayerjournal.dev/assets/js/foundation.js:8:12792\n> createBoundTranscludeFn/boundTranscludeFn@http://prayerjournal.dev/assets/js/foundation.js:8:15476\n> controllersBoundTransclude@http://prayerjournal.dev/assets/js/foundation.js:8:20509\n> ngRepeatDirective</<.compile/</<@http://prayerjournal.dev/assets/js/foundation.js:13:29493\n> $watchCollectionAction@http://prayerjournal.dev/assets/js/foundation.js:10:25791\n> $RootScopeProvider/this.$get</Scope.prototype.$digest@http://prayerjournal.dev/assets/js/foundation.js:10:27348\n> $RootScopeProvider/this.$get</Scope.prototype.$apply@http://prayerjournal.dev/assets/js/foundation.js:10:29370\n> done@http://prayerjournal.dev/assets/js/foundation.js:9:17667\n> completeRequest@http://prayerjournal.dev/assets/js/foundation.js:9:21382\n> createHttpBackend/</xhr.onload@http://prayerjournal.dev/assets/js/foundation.js:9:22304\n>  <div zf-closable=\"notification\" ng-repeat=\"notification in notifications\" title=\"notification.title\" image=\"notification.image\" notif-id=\"notification.id\" color=\"notification.color\" autoclose=\"notification.autoclose\" zf-swipe-close=\"swipe\" class=\"notification {{ color }} ng-isolate-scope\"> foundation.js:10:5014\n\nHere's a screenshot if it helps any better:\n\n![hammererror](https://cloud.githubusercontent.com/assets/991466/8419517/261619e0-1e6f-11e5-856c-af95fca63e2a.png)\n. Hey guys,\n\nSorry about this. Turns out this was a non-issue. I had a custom build script (for my .Net project) and so my updated copy of foundation wasn't going to the properly location. I was still loading old foundation code. Once I fixed this and ran it, things were good.\n\nSorry for the hassle.\n. I didn't do a full redefine of the application in my custom app.js when I came across the problem, I simply defined my controller in there like this:\n\n``` js\nangular.module('application')\n.controller('NewsController', ['$scope', '$stateParams', '$state', '$http', function ($scope, $stateParams, $state, $http) {\n   $scope.newsTime = 'Not retrieved yet.';\n   $scope.getTime = function () {\n\n   var responsePromise = $http.get(\"/api/info\");\n\n   responsePromise.success(function (data, status, headers, config) {\n      $scope.newsTime = data;\n   });\n\n   responsePromise.error(function (data, status, headers, config) {\n      $scope.newsTime = 'Failed to get time: ' + data;\n   });\n};\n}\n]);\n```\n\nI tried putting this in my own controllers.js, and even directly in the page template. The error I got when doing this was:\n\n```\n\"Error: [ng:areq] Argument 'NewsController' is not a function, got undefined\nhttp://errors.angularjs.org/1.3.6/ng/areq?p0=NewsController&p1=not%20a            1.#QNAN0unction%2C%20got%20undefined\nminErr/<@http://localhost:54195/assets/js/app.js:1:654\nassertArg@http://localhost:54195/assets/js/app.js:1:12046\nassertArgFn@http://localhost:54195/assets/js/app.js:1:12248\n$ControllerProvider/this.$get</<@http://localhost:54195/assets/js/app.js:3:10472\n$ViewDirectiveFill/<.compile/<@http://localhost:54195/assets/js/app.js:11:4165\ninvokeLinkFn@http://localhost:54195/assets/js/app.js:3:5296\nnodeLinkFn@http://localhost:54195/assets/js/app.js:2:23568\ncompositeLinkFn@http://localhost:54195/assets/js/app.js:2:13408\ncompile/<@http://localhost:54195/assets/js/app.js:2:12079\nupdateView@http://localhost:54195/assets/js/app.js:11:2951\n$ViewDirective/directive.compile/</<@http://localhost:54195/assets/js/app.js:11:3511\n$RootScopeProvider/this.$get</Scope.prototype.$broadcast@http://localhost:54195/assets/js/app.js:4:29271\n$get/$state.transitionTo/$state.transition<@http://localhost:54195/assets/js/app.js:10:28592\nprocessQueue@http://localhost:54195/assets/js/app.js:4:14675\nscheduleProcessQueue/<@http://localhost:54195/assets/js/app.js:4:14939\n$RootScopeProvider/this.$get</Scope.prototype.$eval@http://localhost:54195/assets/js/app.js:4:27049\n$RootScopeProvider/this.$get</Scope.prototype.$digest@http://localhost:54195/assets/js/app.js:4:24924\n$RootScopeProvider/this.$get</Scope.prototype.$apply@http://localhost:54195/assets/js/app.js:4:27434\ndone@http://localhost:54195/assets/js/app.js:3:16426\ncompleteRequest@http://localhost:54195/assets/js/app.js:3:20115\ncreateHttpBackend/</xhr.onload@http://localhost:54195/assets/js/app.js:3:21037\n\" app.js:4:3721\n```\n\nLet me know if you need any other details.\n. Yes. I haven't done any of the major components, but the basic ones work. Should I be putting my controller definitions in the app.js file instead maybe? This code is still running out of the stable branch (1.0 or maybe 1.0.1) so I don't know if that matters or not. If it is in some updated code that is being released, I can update via CLI or manually update and try again.\n. I did a fresh build from scratch and verified the bug. You can grab the repo here:\n\nhttps://github.com/Dillie-O/z4a-controller-bug\n\nThe default .gitignore seems to not have included the build folder, so if you want me to update that to include the node modules and all that, I can do that.\n\nJust to make sure I'm not doing something wrong, here's how I get to this point.\n1. At terminal, run foundation-apps new z4a-controller-bug\n2. Nav into z4a-conroller-bug folder\n3. At terminal, run npm install\n4. At terminal, run bower install\n5. At terminal, run bundle\n6. At terminal, run gulp build (just to get things in place)\n7. Create client/templates/news.html\n8. Create client/assets/js/controllers.js\n9. Update client/index.html file to have proper angular routing URLs (maybe update template for this?)\n10. At terminal, run gulp - builds and starts test server\n11. Open browser and navigate to news page.\n12. See that angular brackets are there instead of the \"Not retrieved yet.\" message in the controller.\n    13, Open up web console, you should see the error message there.\n\nThanks guys! Let me know if you need any more details.\n. Hazzah! That did the trick for me!\n\nThank YOU for putting together such a great framework!\n\nSo moving forward, would it be worthwhile to keep the *.js or maybe account for a controllers.js file too?\n. I don't mind a production default, but having a gulp command build-debug or something like that would be great. I might have to try that out myself!\n. Oooh! I like that idea a lot! Thanks for that!\n. Hey guys! I really appreciate you taking the idea and running with it. I'm still figuring all this out myself and it would have taken a lot longer for me to piece it altogether.\n. Okay, I ran bower update, and specified 1.3.16 as the new option. That seemed to update a lot of things. I also was informed I was running an older version of bower, so I updated bower, ran bower update again, and got the same results. \n\nLooking at my bower.json file, my dependencies section still has `foundation-apps ~1.0.2` listed in the dependencies. Is this the latest version allowed through this process still? I thought 1.1 was released. Or do I need to update the bower.json file to require a newer version?\n. Good to know. I remember seeing the gulp updates (all good ones) so I'm not too worried about that.\n\nI was able to get things updated. For kicks I ran `foundation-apps update` and after a moment the command prompt returned to me, but nothing seemed to have occurred. So I ran `bower update` again and saw a lot of updates, and it looks like foundation is updated.\n\nI think it's safe to say at this point that I'm updated, now I'll just see if I need to make any tweaks to my code. Thanks!\n\nOne final note, running `foundation-apps -v` doesn't seem to return anything but a list of commands to run, I was expecting to see the version somewhere. Is that a bug?\n. Oooh, good to know. I'll update that now.\n\nSince I have you here, I'm seeing this error now when I try `foundationapps-build`\n\n> [09:37:02] 'uglify:foundation' errored after 1.1 ms\n> [09:37:02] TypeError: Object #<Object> has no method 'if'\n>     at Gulp.gulp.task.gulp.src.pipe.$.webserver.port (C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\gulpfile.js:152\n> :19)\n>     at module.exports (C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\node_modules\\gulp\\node_modules\\orchestrator\\li\n> b\\runTask.js:34:7)\n>     at Gulp.Orchestrator._runTask (C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\node_modules\\gulp\\node_modules\\orc\n> hestrator\\index.js:273:3)\n>     at Gulp.Orchestrator._runStep (C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\node_modules\\gulp\\node_modules\\orc\n> hestrator\\index.js:214:10)\n>     at C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\node_modules\\gulp\\node_modules\\orchestrator\\index.js:279:18\n>     at finish (C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\node_modules\\gulp\\node_modules\\orchestrator\\lib\\runTas\n> k.js:21:8)\n>     at cb (C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\node_modules\\gulp\\node_modules\\orchestrator\\lib\\runTask.js\n> :29:3)\n>     at Gulp.gulp.task.gulp.src.pipe.$.sass.includePaths (C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\gulpfile.js:\n> 130:2)\n>     at module.exports (C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\node_modules\\gulp\\node_modules\\orchestrator\\li\n> b\\runTask.js:34:7)\n>     at Gulp.Orchestrator._runTask (C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\node_modules\\gulp\\node_modules\\orc\n> hestrator\\index.js:273:3)\n\nAm I missing a library for that? I saw a gulp-if library out there, but the syntax seems different.\n. Good to know about removing those libraries. I did so and added gulp-if\n\nIt appears that through2 might still be needed even though front-router is in place? Here's my npm install warning:\n\n> npm WARN unmet dependency C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\node_modules\\gulp-ruby-sass\\node_modules\\vi\n> nyl-fs\\node_modules\\glob-stream requires through2@'^0.6.1' but will load\n> npm WARN unmet dependency undefined,\n> npm WARN unmet dependency which is version undefined\n\nand my foundation-apps build has this error now\n\n> npm WARN unmet dependency C:\\Users\\Sean\\Projects\\prayerjournal\\prayerjournal\\node_modules\\gulp-ruby-sass\\node_modules\\vi\n> nyl-fs\\node_modules\\glob-stream requires through2@'^0.6.1' but will load\n> npm WARN unmet dependency undefined,\n> npm WARN unmet dependency which is version undefined\n\nMaybe I need to npm uninstall to flush everything and do a fresh npm install? Previously I did `npm uninstall front-matter` and `npm uninstall through2` to remove those libraries.\n\nI greatly appreciate your time!\n. Hazzah! That seemed to do the trick! I have a successful build and all.\n\nI have some custom front-matter issues now to resolve, but that's on me to fix 8^D\n\nThanks again!\n. Interestingly enough, a single click triggered the error twice:\n\n> Error: Hammer is not defined\n> link@http://prayerjournal.dev/assets/js/foundation.js:34:1388\n> cloneAndAnnotateFn/<@http://prayerjournal.dev/assets/js/foundation.js:9:6028\n> invokeLinkFn@http://prayerjournal.dev/assets/js/foundation.js:9:6149\n> nodeLinkFn@http://prayerjournal.dev/assets/js/foundation.js:8:24405\n> compileTemplateUrl/<@http://prayerjournal.dev/assets/js/foundation.js:9:1995\n> compositeLinkFn@http://prayerjournal.dev/assets/js/foundation.js:8:14121\n> compile/<@http://prayerjournal.dev/assets/js/foundation.js:8:12792\n> createBoundTranscludeFn/boundTranscludeFn@http://prayerjournal.dev/assets/js/foundation.js:8:15476\n> controllersBoundTransclude@http://prayerjournal.dev/assets/js/foundation.js:8:20509\n> ngRepeatDirective</<.compile/</<@http://prayerjournal.dev/assets/js/foundation.js:13:29493\n> $watchCollectionAction@http://prayerjournal.dev/assets/js/foundation.js:10:25791\n> $RootScopeProvider/this.$get</Scope.prototype.$digest@http://prayerjournal.dev/assets/js/foundation.js:10:27348\n> $RootScopeProvider/this.$get</Scope.prototype.$apply@http://prayerjournal.dev/assets/js/foundation.js:10:29370\n> done@http://prayerjournal.dev/assets/js/foundation.js:9:17667\n> completeRequest@http://prayerjournal.dev/assets/js/foundation.js:9:21382\n> createHttpBackend/</xhr.onload@http://prayerjournal.dev/assets/js/foundation.js:9:22304\n>  <div zf-closable=\"notification\" ng-repeat=\"notification in notifications\" title=\"notification.title\" image=\"notification.image\" notif-id=\"notification.id\" color=\"notification.color\" autoclose=\"notification.autoclose\" zf-swipe-close=\"swipe\" class=\"notification {{ color }} ng-isolate-scope\"> foundation.js:10:5014\n> \n> Error: Hammer is not defined\n> postLink@http://prayerjournal.dev/assets/js/foundation.js:38:2082\n> cloneAndAnnotateFn/<@http://prayerjournal.dev/assets/js/foundation.js:9:6028\n> invokeLinkFn@http://prayerjournal.dev/assets/js/foundation.js:9:6149\n> nodeLinkFn@http://prayerjournal.dev/assets/js/foundation.js:8:24405\n> compileTemplateUrl/<@http://prayerjournal.dev/assets/js/foundation.js:9:1995\n> compositeLinkFn@http://prayerjournal.dev/assets/js/foundation.js:8:14121\n> compile/<@http://prayerjournal.dev/assets/js/foundation.js:8:12792\n> createBoundTranscludeFn/boundTranscludeFn@http://prayerjournal.dev/assets/js/foundation.js:8:15476\n> controllersBoundTransclude@http://prayerjournal.dev/assets/js/foundation.js:8:20509\n> ngRepeatDirective</<.compile/</<@http://prayerjournal.dev/assets/js/foundation.js:13:29493\n> $watchCollectionAction@http://prayerjournal.dev/assets/js/foundation.js:10:25791\n> $RootScopeProvider/this.$get</Scope.prototype.$digest@http://prayerjournal.dev/assets/js/foundation.js:10:27348\n> $RootScopeProvider/this.$get</Scope.prototype.$apply@http://prayerjournal.dev/assets/js/foundation.js:10:29370\n> done@http://prayerjournal.dev/assets/js/foundation.js:9:17667\n> completeRequest@http://prayerjournal.dev/assets/js/foundation.js:9:21382\n> createHttpBackend/</xhr.onload@http://prayerjournal.dev/assets/js/foundation.js:9:22304\n>  <div zf-closable=\"notification\" ng-repeat=\"notification in notifications\" title=\"notification.title\" image=\"notification.image\" notif-id=\"notification.id\" color=\"notification.color\" autoclose=\"notification.autoclose\" zf-swipe-close=\"swipe\" class=\"notification {{ color }} ng-isolate-scope\"> foundation.js:10:5014\n\nHere's a screenshot if it helps any better:\n\n![hammererror](https://cloud.githubusercontent.com/assets/991466/8419517/261619e0-1e6f-11e5-856c-af95fca63e2a.png)\n. Hey guys,\n\nSorry about this. Turns out this was a non-issue. I had a custom build script (for my .Net project) and so my updated copy of foundation wasn't going to the properly location. I was still loading old foundation code. Once I fixed this and ran it, things were good.\n\nSorry for the hassle.\n. ",
    "hshepherd": "I'm having the same issue. Did you end up fixing this manually?\n.  I see, thank you.\n. I'm having the same issue. Did you end up fixing this manually?\n.  I see, thank you.\n. ",
    "MikaAK": "Sure thing!\n. That's a good question, on one hand giving template stack users one file with all the templates makes it easy and a quick drop in but you might end up with unnecessary templates. On the other hand giving users the options to choose templates adds the potential risk for errors though it's a seemingly basic task. \n\nAs it currently stands I don't see the problem with keeping it as one file since there aren't that many directives, however should more come up it might be a good idea to allow more of a pick and choose. \n. Sure thing!\n. That's a good question, on one hand giving template stack users one file with all the templates makes it easy and a quick drop in but you might end up with unnecessary templates. On the other hand giving users the options to choose templates adds the potential risk for errors though it's a seemingly basic task. \n\nAs it currently stands I don't see the problem with keeping it as one file since there aren't that many directives, however should more come up it might be a good idea to allow more of a pick and choose. \n. ",
    "nathanmarks": "@HansUXdev What do you mean touch finally added? Are touch events not working? \n\n+1 on swiping.\n. @gakimball I believe this is because of a change in the \"npm start\" command in a somewhat recent version. @kencrismontp is likely running an older version of NPM and should update to the latest using `sudo npm update npm -g`.\n\nSee this commit for more details: https://github.com/npm/npm/commit/df4b0e7fc1abd9a54f98db75ec9e4d03d37d125b\n. @k-j-kleist Aren't those issues referring to running `npm update -g` not `npm update npm -g`?\n\nI said to run `sudo npm update npm -g`, which for me recently was the only way I could update NPM **without** it breaking.\n. Yeah, I did that and it spat an error and broke npm! Hence eventually settling on the other command.\n. Yep as a separate service. Might be useful having a factory for matching and a service leveraging it that provides the on resize foundationapi subscription so that functionality is optional. \n\nI'm happy to put this together and make a pull request. And I agree foundationapi service shouldn't be allowed to get too bloated or we lose the modularity and dependency injection benefits.\n. @AntJanus [window.matchMedia](https://developer.mozilla.org/en-US/docs/Web/API/Window.matchMedia) has a lot of useful built in functionality via the [MediaQueryList](https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList) objects returned from calling the `window.matchMedia(mediaQueryString)` function.\n\nIs there a specific reason why you're using your own resize listener (which at the moment looks to be only being used for interchange) vs the `MediaQueryList` object's listener handlers? You're already returning those objects from the matchMedia browser API in [interchange](https://github.com/zurb/foundation-apps/blob/master/js/angular/components/interchange/interchange.js#L104).\n\nCurious to hear what you think or if there's some drawback I'm not aware of.\n. @AntJanus That really is `interchange` specific logic that should be handled separately. The logic doesn't have to be so tightly coupled. With the `MediaQueryListListener` callback we use whatever logic we want based on what's returned.\n\nFor `interchange` what we can do is have a `scenarios` array containing an object for each scenario to track the status of the and use the `MediaQueryListListener` callbacks to update the status of these scenarios.\n\n`MediaQueryListListener` callbacks only fire when a media query **matches** or **unmatches**, and for initialization we can just check the `matches` property of the `MediaQueryList` object returned from `matchMedia()` for scenario after registering our listeners. \n\nWhen changes are made to the scenario array we can notify `interchange` via a function in the directive controller. \n\nOptionally, to try and avoid any unnecessary processing we could trigger a function on a small asynchronous timer when the first listener callback is fired. We can keep track of whether this timer is currently in progress to catch the other listener callbacks.\n. @AntJanus To play around with this, I setup a factory and a service that you use by injecting the factory `mqFactory` as a dependency to your controller/service/whatever. There is no use of resize here -- just using the matchMedia API.\n\nThe first parameter is a single string or an array of queries to match (names or rule strings) and the 2nd/3rd are the match/unmatch callbacks (optional).\n\n```\nvar mediumLargeTest = mqFactory( ['medium','large'], function() {\n    console.log('matched medium and large');\n}, function() {\n    console.log('unmatched medium and large');\n} );\n```\n\nThe listeners are registered by a function called by the factory, and what's returned is an object created from the service containing the mql objects and some related functions. The service (used by the factory) is the prototype of the object returned.\n\nThe Media queries are setup by the service and can be get/set at any time using the service or an object created via the factory.\n. @AntJanus Happy to submit a PR, will prepare it very soon! Do you want me to branch it off your feature branch? When are you planning on merging that to master?\n. @AntJanus Sweet. Will do.\n. @HansUXdev What do you mean touch finally added? Are touch events not working? \n\n+1 on swiping.\n. @gakimball I believe this is because of a change in the \"npm start\" command in a somewhat recent version. @kencrismontp is likely running an older version of NPM and should update to the latest using `sudo npm update npm -g`.\n\nSee this commit for more details: https://github.com/npm/npm/commit/df4b0e7fc1abd9a54f98db75ec9e4d03d37d125b\n. @k-j-kleist Aren't those issues referring to running `npm update -g` not `npm update npm -g`?\n\nI said to run `sudo npm update npm -g`, which for me recently was the only way I could update NPM **without** it breaking.\n. Yeah, I did that and it spat an error and broke npm! Hence eventually settling on the other command.\n. Yep as a separate service. Might be useful having a factory for matching and a service leveraging it that provides the on resize foundationapi subscription so that functionality is optional. \n\nI'm happy to put this together and make a pull request. And I agree foundationapi service shouldn't be allowed to get too bloated or we lose the modularity and dependency injection benefits.\n. @AntJanus [window.matchMedia](https://developer.mozilla.org/en-US/docs/Web/API/Window.matchMedia) has a lot of useful built in functionality via the [MediaQueryList](https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList) objects returned from calling the `window.matchMedia(mediaQueryString)` function.\n\nIs there a specific reason why you're using your own resize listener (which at the moment looks to be only being used for interchange) vs the `MediaQueryList` object's listener handlers? You're already returning those objects from the matchMedia browser API in [interchange](https://github.com/zurb/foundation-apps/blob/master/js/angular/components/interchange/interchange.js#L104).\n\nCurious to hear what you think or if there's some drawback I'm not aware of.\n. @AntJanus That really is `interchange` specific logic that should be handled separately. The logic doesn't have to be so tightly coupled. With the `MediaQueryListListener` callback we use whatever logic we want based on what's returned.\n\nFor `interchange` what we can do is have a `scenarios` array containing an object for each scenario to track the status of the and use the `MediaQueryListListener` callbacks to update the status of these scenarios.\n\n`MediaQueryListListener` callbacks only fire when a media query **matches** or **unmatches**, and for initialization we can just check the `matches` property of the `MediaQueryList` object returned from `matchMedia()` for scenario after registering our listeners. \n\nWhen changes are made to the scenario array we can notify `interchange` via a function in the directive controller. \n\nOptionally, to try and avoid any unnecessary processing we could trigger a function on a small asynchronous timer when the first listener callback is fired. We can keep track of whether this timer is currently in progress to catch the other listener callbacks.\n. @AntJanus To play around with this, I setup a factory and a service that you use by injecting the factory `mqFactory` as a dependency to your controller/service/whatever. There is no use of resize here -- just using the matchMedia API.\n\nThe first parameter is a single string or an array of queries to match (names or rule strings) and the 2nd/3rd are the match/unmatch callbacks (optional).\n\n```\nvar mediumLargeTest = mqFactory( ['medium','large'], function() {\n    console.log('matched medium and large');\n}, function() {\n    console.log('unmatched medium and large');\n} );\n```\n\nThe listeners are registered by a function called by the factory, and what's returned is an object created from the service containing the mql objects and some related functions. The service (used by the factory) is the prototype of the object returned.\n\nThe Media queries are setup by the service and can be get/set at any time using the service or an object created via the factory.\n. @AntJanus Happy to submit a PR, will prepare it very soon! Do you want me to branch it off your feature branch? When are you planning on merging that to master?\n. @AntJanus Sweet. Will do.\n. ",
    "asonnenshine": "@spsaucier I agree with you. Currently, I'm not able to \"set\" values in tabs, however, I was able to \"get\" values by using $parent\n. @spsaucier I agree with you. Currently, I'm not able to \"set\" values in tabs, however, I was able to \"get\" values by using $parent\n. ",
    "ahmed1490": "@gakimball \nI used `bower-rails` to get ready the foundation-app node components in my `vendor/assets/bower-components` folder.\n\nWhere can i specify which particular foundation components to be included & where should `_settings.scss` reside...?\n\nI am not sure, if i should be creation a new issue for this..\n\n@turn2norm Did you figured this out yet..?\n\nPS: I am on a new project..\n. @jacquesachille Okay cool! I left foundation-apps for now.\n. @gakimball \nI used `bower-rails` to get ready the foundation-app node components in my `vendor/assets/bower-components` folder.\n\nWhere can i specify which particular foundation components to be included & where should `_settings.scss` reside...?\n\nI am not sure, if i should be creation a new issue for this..\n\n@turn2norm Did you figured this out yet..?\n\nPS: I am on a new project..\n. @jacquesachille Okay cool! I left foundation-apps for now.\n. ",
    "jacquesachille": "@ahmed1490 we actually put this on the back burner for now. We have everything set already with standard foundation and will look into foundation-apps a little later.\n. @ahmed1490 we actually put this on the back burner for now. We have everything set already with standard foundation and will look into foundation-apps a little later.\n. ",
    "msuzoagu": "hi @jacquesachille and @ahmed1490: Did you guys figure this out?\n. @tunecino: understand your point but need to get this out asap and don't want to wangle with Angular right now. \n. hi @jacquesachille and @ahmed1490: Did you guys figure this out?\n. @tunecino: understand your point but need to get this out asap and don't want to wangle with Angular right now. \n. ",
    "tunecino": "why not keeping front and back totally separated and use REST ? Rails and Angular are great with REST\n. When worked with bootstrap's modal before i remember having used a provider for it :\n\n<pre>\n.provider('modalState', function($stateProvider) {\n    var provider = this;\n    this.$get = function() {\n        return provider;\n    }\n    this.state = function(stateName, options) {\n        var modalInstance;\n        $stateProvider.state(stateName, {\n            url: options.url,\n            onEnter: function($modal, $state) {\n                modalInstance = $modal.open(options);\n                modalInstance.result['finally'](function() {\n                    modalInstance = null;\n                    if ($state.$current.name === stateName) {\n                        $state.go('^');\n                    }\n                });\n            },\n            onExit: function() {\n                if (modalInstance) {\n                    modalInstance.close();\n                }\n            }\n        });\n    };\n})\n</pre>\n\nThen on my router configs I just had to to use it as a page wrapper when needed like this : \n\n<pre>\nmodalStateProvider\n    .state('app.campaign.new', {\n         url: '/new',\n         templateUrl: 'partials/campaign/campaign.new.html',\n         controller: 'CampaignCreateController'\n    });\n</pre> \n\nIt was elegant as solution to me while It meant to satisfy a Restful CRUD app where each page had it's own controller and i needed that easy access with a <code>/new</code> link any way. \nNow with Foundation for apps doing almost the same CRUD thing, i just assigned my Edit page to a parent one and wrapped it into modal then replaced Cancel and Close buttons with go back links : http://foundation.zurb.com/forum/posts/23322-open-apps-modal-on-page-load?page=2#comment-21214\nSo I'm sharing this just to point to one more possible use of modals, I mean why not add an optional wrapper parameter to pages like : \n\n<pre>\n---\nname: edit\nurl: /edit\nparent: items\ncontroller: EditlCtrl\nwrapper: zf-modal\n---\n</pre>\n\nwhere page will be initialised inside a modal with its own controller if provided, otherwise it will share parent's controller and $scope (if possible).\n. +1\n. why not a child page with its own controller where html content will just be inserted inside a modal, it worked for me, i just replaced the Close and/or Cancel button with a go back to parent link, check this: \nhttp://foundation.zurb.com/forum/posts/23322-open-apps-modal-on-page-load?page=2#comment-21214\n. F4A is built with angularJs which is one of the best on designing single page applications. If your laravel app is not yet made then I would recommend building a backend server API that communicates with the F4A frontend app using REST. check [this SO post](http://stackoverflow.com/questions/31989384/yii2-angularjs-in-a-single-application-how) it is about the Yii Framework but applies to Laravel too. \n\nHere is also a not yet finished but working [example](https://github.com/tunecino/Yii2_foundation-apps) (at least in chrome for now) The Yii app is stored in the `backend` folder and has nothing to do with the front app except dilevering & treating data in the way it was designed to. you can replace that folder with a Laravel app without modifying the frontend and you'll steal getting the same results.\n. Angular 2 ?! Great News :+1: just take the time it needs. I'm sure a solid framework will came out when Angular2 & F4A are combined :+1: \n. also @zurbchris: https://github.com/zurb/foundation-sites/commit/fcb6c15e2194b29d08641405deaeccf4095e1bcb\n. @fortuneteller You don't have to install it. it is already installed. just use it or maybe you'll need to upgrade it first. here is the installed version : https://github.com/zurb/foundation-apps/blob/master/package.json#L30\n. truth is this is a company owned open-source project and most of contributors behind this project, even contributors who worked in the last released version (1.3) or talked about angular2 are not working with ZURB anymore according to their public personal pages or last github public activities. sadly this is the best front-end framework I ever used but it doesn't belong to its creators or any community. I just wish the owners to not let it die.\n. great news. thanks @AntJanus for coming back to this and thanks @soumak77 for having kept working on it.\n. why not keeping front and back totally separated and use REST ? Rails and Angular are great with REST\n. When worked with bootstrap's modal before i remember having used a provider for it :\n\n<pre>\n.provider('modalState', function($stateProvider) {\n    var provider = this;\n    this.$get = function() {\n        return provider;\n    }\n    this.state = function(stateName, options) {\n        var modalInstance;\n        $stateProvider.state(stateName, {\n            url: options.url,\n            onEnter: function($modal, $state) {\n                modalInstance = $modal.open(options);\n                modalInstance.result['finally'](function() {\n                    modalInstance = null;\n                    if ($state.$current.name === stateName) {\n                        $state.go('^');\n                    }\n                });\n            },\n            onExit: function() {\n                if (modalInstance) {\n                    modalInstance.close();\n                }\n            }\n        });\n    };\n})\n</pre>\n\nThen on my router configs I just had to to use it as a page wrapper when needed like this : \n\n<pre>\nmodalStateProvider\n    .state('app.campaign.new', {\n         url: '/new',\n         templateUrl: 'partials/campaign/campaign.new.html',\n         controller: 'CampaignCreateController'\n    });\n</pre> \n\nIt was elegant as solution to me while It meant to satisfy a Restful CRUD app where each page had it's own controller and i needed that easy access with a <code>/new</code> link any way. \nNow with Foundation for apps doing almost the same CRUD thing, i just assigned my Edit page to a parent one and wrapped it into modal then replaced Cancel and Close buttons with go back links : http://foundation.zurb.com/forum/posts/23322-open-apps-modal-on-page-load?page=2#comment-21214\nSo I'm sharing this just to point to one more possible use of modals, I mean why not add an optional wrapper parameter to pages like : \n\n<pre>\n---\nname: edit\nurl: /edit\nparent: items\ncontroller: EditlCtrl\nwrapper: zf-modal\n---\n</pre>\n\nwhere page will be initialised inside a modal with its own controller if provided, otherwise it will share parent's controller and $scope (if possible).\n. +1\n. why not a child page with its own controller where html content will just be inserted inside a modal, it worked for me, i just replaced the Close and/or Cancel button with a go back to parent link, check this: \nhttp://foundation.zurb.com/forum/posts/23322-open-apps-modal-on-page-load?page=2#comment-21214\n. F4A is built with angularJs which is one of the best on designing single page applications. If your laravel app is not yet made then I would recommend building a backend server API that communicates with the F4A frontend app using REST. check [this SO post](http://stackoverflow.com/questions/31989384/yii2-angularjs-in-a-single-application-how) it is about the Yii Framework but applies to Laravel too. \n\nHere is also a not yet finished but working [example](https://github.com/tunecino/Yii2_foundation-apps) (at least in chrome for now) The Yii app is stored in the `backend` folder and has nothing to do with the front app except dilevering & treating data in the way it was designed to. you can replace that folder with a Laravel app without modifying the frontend and you'll steal getting the same results.\n. Angular 2 ?! Great News :+1: just take the time it needs. I'm sure a solid framework will came out when Angular2 & F4A are combined :+1: \n. also @zurbchris: https://github.com/zurb/foundation-sites/commit/fcb6c15e2194b29d08641405deaeccf4095e1bcb\n. @fortuneteller You don't have to install it. it is already installed. just use it or maybe you'll need to upgrade it first. here is the installed version : https://github.com/zurb/foundation-apps/blob/master/package.json#L30\n. truth is this is a company owned open-source project and most of contributors behind this project, even contributors who worked in the last released version (1.3) or talked about angular2 are not working with ZURB anymore according to their public personal pages or last github public activities. sadly this is the best front-end framework I ever used but it doesn't belong to its creators or any community. I just wish the owners to not let it die.\n. great news. thanks @AntJanus for coming back to this and thanks @soumak77 for having kept working on it.\n. ",
    "LuminusDev": "I try using my own controller too, and I extend my controller with DefaultController used by Foundation. Everything seems to work.\nHow I create my controller :\n\n``` JavaScript\nangular.module('application')\n    .controller('RandomController', RandomController)\n;\n\nRandomController.$inject = ['$scope', '$stateParams', '$state', '$controller'];\n\nfunction RandomController($scope, $stateParams, $state, $controller) {\n\n    angular.extend(this, $controller('DefaultController', {$scope: $scope, $stateParams: $stateParams, $state: $state}));\n    // what you want now...\n}\n```\n. I try using my own controller too, and I extend my controller with DefaultController used by Foundation. Everything seems to work.\nHow I create my controller :\n\n``` JavaScript\nangular.module('application')\n    .controller('RandomController', RandomController)\n;\n\nRandomController.$inject = ['$scope', '$stateParams', '$state', '$controller'];\n\nfunction RandomController($scope, $stateParams, $state, $controller) {\n\n    angular.extend(this, $controller('DefaultController', {$scope: $scope, $stateParams: $stateParams, $state: $state}));\n    // what you want now...\n}\n```\n. ",
    "shalaby": "This is great LuminusDev , very clever, thank you.\n. This is great LuminusDev , very clever, thank you.\n. ",
    "candidosales": "I checked the doors and the 8080 is not being used ...\n\n![Problem](http://s10.postimg.org/5dd0yxhg9/image.jpg)\n\nBut I changed the port on Gulpfile setting to 8888 and worked.\n\n``` javascript\n// Starts a test server, which you can view at http://localhost:8080\ngulp.task('server:start', function() {\n  connect.server({\n    root: './build',\n    port: 8888,\n    livereload: true,\n    middleware: function() {\n      return [\n        modRewrite(['^[^\\\\.]*$ /index.html [L]'])\n      ];\n    },\n  });\n});\n```\n\nHint, it is good to keep defaults to gulp-connect with livereload.\n\nThank you =]\n. I checked the doors and the 8080 is not being used ...\n\n![Problem](http://s10.postimg.org/5dd0yxhg9/image.jpg)\n\nBut I changed the port on Gulpfile setting to 8888 and worked.\n\n``` javascript\n// Starts a test server, which you can view at http://localhost:8080\ngulp.task('server:start', function() {\n  connect.server({\n    root: './build',\n    port: 8888,\n    livereload: true,\n    middleware: function() {\n      return [\n        modRewrite(['^[^\\\\.]*$ /index.html [L]'])\n      ];\n    },\n  });\n});\n```\n\nHint, it is good to keep defaults to gulp-connect with livereload.\n\nThank you =]\n. ",
    "beepiams": "+1 w/ Vincent Morneau, as I just ran into problems initializing any of the components.\n. +1 w/ Vincent Morneau, as I just ran into problems initializing any of the components.\n. ",
    "kencrismontp": "Thanks for looking into this!\n\nAll is better.\n. Thanks for looking into this!\n\nAll is better.\n. ",
    "cgreening": "I don't think I've touched the offcanvas.html - here's what mine contains:\n\n``` html\n<div\n  class=\"off-canvas {{ position }}\"\n  ng-class=\"{'is-active': active}\"\n  ng-transclude>\n</div>\n```\n. Found the problem. There is an error in the new gulpfile from here:\n\nhttps://github.com/zurb/foundation-apps-template/blob/master/gulpfile.js\n\nLine 74\n\n``` js\n  // Foundation's Angular partials\n  return gulp.src(['./bower_components/foundation-apps/js/angular/components/**.*'])\n    .pipe(gulp.dest('./build/components/'));\n```\n\nThe \n\n```\n**.*\n```\n\nshould be \n\n```\n**/*\n```\n\nNot sure why the error was a bit odd - on a fresh app I got the real error about it not being able to find the component.\n\nLooks like someone else has already found this issue:\n\nhttps://github.com/zurb/foundation-apps-template/issues/16\n. I don't think I've touched the offcanvas.html - here's what mine contains:\n\n``` html\n<div\n  class=\"off-canvas {{ position }}\"\n  ng-class=\"{'is-active': active}\"\n  ng-transclude>\n</div>\n```\n. Found the problem. There is an error in the new gulpfile from here:\n\nhttps://github.com/zurb/foundation-apps-template/blob/master/gulpfile.js\n\nLine 74\n\n``` js\n  // Foundation's Angular partials\n  return gulp.src(['./bower_components/foundation-apps/js/angular/components/**.*'])\n    .pipe(gulp.dest('./build/components/'));\n```\n\nThe \n\n```\n**.*\n```\n\nshould be \n\n```\n**/*\n```\n\nNot sure why the error was a bit odd - on a fresh app I got the real error about it not being able to find the component.\n\nLooks like someone else has already found this issue:\n\nhttps://github.com/zurb/foundation-apps-template/issues/16\n. ",
    "FelipeMarcos": "I'm looking for a way to do that as well\n. @AntJanus Are there any alternatives without modifying foundation's core directly?\nThanks\n. I'm looking for a way to do that as well\n. @AntJanus Are there any alternatives without modifying foundation's core directly?\nThanks\n. ",
    "escapedcat": "For whoever is looking at this as well:\n[Disabling Front Matter so Developer Can Use Own Routing #501](https://github.com/zurb/foundation-apps/issues/501#issuecomment-76715381)\nThe resolve entry is shown there as well.\n. This would be sweet!\n. That's exactly where I modified it:\n[https://github.com/zurb/foundation-apps-template/blob/master/gulpfile.js](https://github.com/zurb/foundation-apps-template/blob/master/gulpfile.js)\nBut yeah, I get it, no need to overcomplicate things.\n\nRegarding linting in general, I agree, a default way of linting JS and Sass would be great.\nI will add [scss-lint](https://github.com/causes/scss-lint) as well to our own stack.\n. I would try something like this:\n1. update the cli\n2. bump the foundation-apps version in the the [bower file](https://github.com/zurb/foundation-apps-template/blob/master/bower.json) of your project and do `bower update`, which should update the bower components\n3. check the changes for the gulpfile etc. directly at the updated [template stack](https://github.com/zurb/foundation-apps-template) or by creating a new test project and diff that.\n\nHow do you solve this at the moment @gakimball ?\nIs there a tutorial or a threat for this already?\n. All good, I don't think it's a big problem either. Just wanted to ask to see if there's something already.\nYou're right, mentioning it in the changelog is enough.\n. FYI\nSomehow this breaks/stops the watch process, which is annoying. I might try to add plumber as well. Keep you posted.\n. Good idea, would also be great to have that kind of class on the buttons for components like [off-canvas](http://foundation.zurb.com/apps/docs/#!/off-canvas).\n. Just found #249. I think adding the `FoundationApi` to your controller could solve this, but I think it would be great to handle this within the framework.\n. Right, that works.\nAny idea for the the off-canvas menu?\n. Cool, thanks. Will check.\n. Yay! Related issue here.\n\nWe have a `button` (`<a class=\"button\" ...`) within a `panel`.\nA `toggle`-button is outside of the panel.\nIf I toggle it 1-3 times and move the mouse over the `button`, the `is-active` class is removed and the `panel` disappears.\n\nIf I remove the `button` class from the `<a>` it works though.\n\nTo reproduce:\n- create a new foundation app project\n- bower install jquery\n- add jquery to the `gulpfile.js`\n\n``` js\nvar foundationJS = [\n  'bower_components/jquery/dist/jquery.js',\n  'bower_components/fastclick/lib/fastclick.js',\n  ...\n```\n- replace content of `templates/home.html` with:\n\n``` html\n---\nname: home\nurl: /\n---\n\n<h1>Welcome to Foundation for Apps!</h1>\n<p class=\"lead\">This is version <strong>1.0.3 Matterhorn</strong>.</p>\n\n<a zf-toggle=\"js-zf-panel\">\n    Toggle Panel</a>\n\n\n\n<zf-panel position=\"right\" id=\"js-zf-panel\">\n    <div class=\"grid-content\">\n\n        <a ui-sref=\"about\" class=\"button expand\">\n            First button</a>\n\n    </div>\n</zf-panel>\n```\n\np.s.\nChrom: Version 42.0.2299.0 canary (64-bit)\nFoundation for apps: 1.0.3\njQuery: 2.1.3 (I tried 2.0.x and 1.x as well)\n. We had a similar issue after accidentally upgrading from 1.0.2 to 1.0.3.\nSeems to be the same issue here.\n\nCheck the path to ui-router in:\nhttps://codio.com/kevinhorek/emw-prototype/tree/gulpfile.js\nto this file:\nhttps://codio.com/kevinhorek/emw-prototype/tree/bower_components/angular-ui-router/release/angular-ui-router.js\n. Make sure the path to your `angular-ui-router.js` is correct.\n. Maybe someone from this issue knows:\n[Is it possible to use the resolve functionality of angular routes #387](https://github.com/zurb/foundation-apps/issues/387)\n. This works for me:\n\n`gulpfile.js`: comment out the FA router part:\n\n``` js\n// Copies your app's page templates and generates URLs for them\ngulp.task('copy-templates', ['copy'], function() {\n  return gulp.src('./client/templates/**/*.html')\n    // .pipe(router({ \n    //   path: 'build/assets/js/routes.js',\n    //   root: 'client'\n    // }))\n    .pipe(gulp.dest('./build/templates'))\n  ;\n});\n```\n\n`index.html`: remove the `routes.js`\n\n``` html\n    <script src=\"/assets/js/foundation.js\"></script>\n    <!-- <script src=\"/assets/js/routes.js\"></script> -->\n    <script src='//maps.googleapis.com/maps/api/js?sensor=false'></script>\n    <script src=\"/assets/js/app.js\"></script>\n```\n\n`app.js`: comment out the `dynamicRouting` modules and modify the config part:\n\n``` js\n angular.module('application', [\n    ...\n    //foundation\n    'foundation',\n    // 'foundation.dynamicRouting',\n    // 'foundation.dynamicRouting.animations',\n    ...\n    ])\n    .config(\n      function($stateProvider, $urlRouterProvider) {\n        $stateProvider\n          .state('yourstate', {\n              url: '/yoururl',\n              templateUrl: 'templates/yourTemplate.html',\n              controller: 'YourController',\n              resolve: {\n                  // you can use resolve here, yay!\n                  // promiseFooData: ['Restangular', function(Restangular) {\n                  //     return Restangular.one('foo').get();\n                  // }]\n              }\n          });\n    })\n  .run(run)\n;\n```\n\nYou need a `.state` entry for each route/template you had before.\nIn this example the part before looked like this:\n\n``` html\n---\nname: yourstate\nurl: /yoururl\ncontroller: YourController\n---\n```\n\nHope this helps.\n. But what if I want to split things into spans with classes to style these differently?\n\nfrom the mobile\n. I would like to have the option to achieve something like this (for example):\n\n``` html\n<div class=\"accordion-title\">\n  <span class=\"badge\">B</span>\n  <span class=\"item\">My item</span>\n</div>\n```\n. Cool!\nYeah, also a good idea to use `:before`.\nFor now we just use HTML characters like `title=\"&radic; {{::foo.bar}}\"`. It's ok for prototyping.\n. I just tried http://foundation.zurb.com/apps/docs/#!/off-canvas on my Nexus 5 and can't reproduce the problem. Feels fluid.\nAndroid 5.0.1\nChrome 40.0.x\nNexus 5\n. https://github.com/zurb/foundation-apps/issues/249\nThis might help.\n\nShould work if you use your own controller instead of the default one.\nRead 'Controllers' here http://foundation.zurb.com/apps/docs/#!/angular\n. No time come up with a full example at the moment, but I think this could work:\n\n`app.js` add:\n\n``` js\nangular.module('application')\n.controller('MyController', MyController)\n;\nMyController.$inject = ['$scope', '$stateParams', '$state', '$controller', 'FoundationApi'];\nfunction MyController($scope, $stateParams, $state, $controller, fa) {\nangular.extend(this, $controller('DefaultController', {$scope: $scope, $stateParams: $stateParams, $state: $state}));\n  // your code...\n  // using the fa.publish() method described in issue #249\n}\n```\n\nIn your Start page template you add this to the `front matter` part:\n\n``` html\ncontroller: MyController\n```\n\nGive it a try.\nWhen I have time I might do a full example.\n. Well done!\nCompare the code I pasted to your code :)\nYou missed the reference to `FoundationApi`.\nInside the code you use `fa`.\nLook at my code in detail. It's a bit different from the code of the docs. Just a bit.\n. Within the controller you should use `fa` not `foundationApi`\n. What functionality do you need/miss from Compass?\n. Just use default CSS to achieve this and use [Autoprefixer](https://github.com/sindresorhus/gulp-autoprefixer) if you need to support older browsers with prefixes or different syntax.\n\nHere is a good article about what it does:\nhttps://css-tricks.com/autoprefixer\n\nIf those mixins are the only functions you use from Compass I'm sure you can stop using it after this.\n. Hm, yes, I try to avoid Compass.\nThe last time I actually used old school png sprites I used https://github.com/Ensighten/spritesmith\nFor things like icons nowadays I would [use SVGs](https://css-tricks.com/svg-sprites-use-better-icon-fonts). \n. For whoever is looking at this as well:\n[Disabling Front Matter so Developer Can Use Own Routing #501](https://github.com/zurb/foundation-apps/issues/501#issuecomment-76715381)\nThe resolve entry is shown there as well.\n. This would be sweet!\n. That's exactly where I modified it:\n[https://github.com/zurb/foundation-apps-template/blob/master/gulpfile.js](https://github.com/zurb/foundation-apps-template/blob/master/gulpfile.js)\nBut yeah, I get it, no need to overcomplicate things.\n\nRegarding linting in general, I agree, a default way of linting JS and Sass would be great.\nI will add [scss-lint](https://github.com/causes/scss-lint) as well to our own stack.\n. I would try something like this:\n1. update the cli\n2. bump the foundation-apps version in the the [bower file](https://github.com/zurb/foundation-apps-template/blob/master/bower.json) of your project and do `bower update`, which should update the bower components\n3. check the changes for the gulpfile etc. directly at the updated [template stack](https://github.com/zurb/foundation-apps-template) or by creating a new test project and diff that.\n\nHow do you solve this at the moment @gakimball ?\nIs there a tutorial or a threat for this already?\n. All good, I don't think it's a big problem either. Just wanted to ask to see if there's something already.\nYou're right, mentioning it in the changelog is enough.\n. FYI\nSomehow this breaks/stops the watch process, which is annoying. I might try to add plumber as well. Keep you posted.\n. Good idea, would also be great to have that kind of class on the buttons for components like [off-canvas](http://foundation.zurb.com/apps/docs/#!/off-canvas).\n. Just found #249. I think adding the `FoundationApi` to your controller could solve this, but I think it would be great to handle this within the framework.\n. Right, that works.\nAny idea for the the off-canvas menu?\n. Cool, thanks. Will check.\n. Yay! Related issue here.\n\nWe have a `button` (`<a class=\"button\" ...`) within a `panel`.\nA `toggle`-button is outside of the panel.\nIf I toggle it 1-3 times and move the mouse over the `button`, the `is-active` class is removed and the `panel` disappears.\n\nIf I remove the `button` class from the `<a>` it works though.\n\nTo reproduce:\n- create a new foundation app project\n- bower install jquery\n- add jquery to the `gulpfile.js`\n\n``` js\nvar foundationJS = [\n  'bower_components/jquery/dist/jquery.js',\n  'bower_components/fastclick/lib/fastclick.js',\n  ...\n```\n- replace content of `templates/home.html` with:\n\n``` html\n---\nname: home\nurl: /\n---\n\n<h1>Welcome to Foundation for Apps!</h1>\n<p class=\"lead\">This is version <strong>1.0.3 Matterhorn</strong>.</p>\n\n<a zf-toggle=\"js-zf-panel\">\n    Toggle Panel</a>\n\n\n\n<zf-panel position=\"right\" id=\"js-zf-panel\">\n    <div class=\"grid-content\">\n\n        <a ui-sref=\"about\" class=\"button expand\">\n            First button</a>\n\n    </div>\n</zf-panel>\n```\n\np.s.\nChrom: Version 42.0.2299.0 canary (64-bit)\nFoundation for apps: 1.0.3\njQuery: 2.1.3 (I tried 2.0.x and 1.x as well)\n. We had a similar issue after accidentally upgrading from 1.0.2 to 1.0.3.\nSeems to be the same issue here.\n\nCheck the path to ui-router in:\nhttps://codio.com/kevinhorek/emw-prototype/tree/gulpfile.js\nto this file:\nhttps://codio.com/kevinhorek/emw-prototype/tree/bower_components/angular-ui-router/release/angular-ui-router.js\n. Make sure the path to your `angular-ui-router.js` is correct.\n. Maybe someone from this issue knows:\n[Is it possible to use the resolve functionality of angular routes #387](https://github.com/zurb/foundation-apps/issues/387)\n. This works for me:\n\n`gulpfile.js`: comment out the FA router part:\n\n``` js\n// Copies your app's page templates and generates URLs for them\ngulp.task('copy-templates', ['copy'], function() {\n  return gulp.src('./client/templates/**/*.html')\n    // .pipe(router({ \n    //   path: 'build/assets/js/routes.js',\n    //   root: 'client'\n    // }))\n    .pipe(gulp.dest('./build/templates'))\n  ;\n});\n```\n\n`index.html`: remove the `routes.js`\n\n``` html\n    <script src=\"/assets/js/foundation.js\"></script>\n    <!-- <script src=\"/assets/js/routes.js\"></script> -->\n    <script src='//maps.googleapis.com/maps/api/js?sensor=false'></script>\n    <script src=\"/assets/js/app.js\"></script>\n```\n\n`app.js`: comment out the `dynamicRouting` modules and modify the config part:\n\n``` js\n angular.module('application', [\n    ...\n    //foundation\n    'foundation',\n    // 'foundation.dynamicRouting',\n    // 'foundation.dynamicRouting.animations',\n    ...\n    ])\n    .config(\n      function($stateProvider, $urlRouterProvider) {\n        $stateProvider\n          .state('yourstate', {\n              url: '/yoururl',\n              templateUrl: 'templates/yourTemplate.html',\n              controller: 'YourController',\n              resolve: {\n                  // you can use resolve here, yay!\n                  // promiseFooData: ['Restangular', function(Restangular) {\n                  //     return Restangular.one('foo').get();\n                  // }]\n              }\n          });\n    })\n  .run(run)\n;\n```\n\nYou need a `.state` entry for each route/template you had before.\nIn this example the part before looked like this:\n\n``` html\n---\nname: yourstate\nurl: /yoururl\ncontroller: YourController\n---\n```\n\nHope this helps.\n. But what if I want to split things into spans with classes to style these differently?\n\nfrom the mobile\n. I would like to have the option to achieve something like this (for example):\n\n``` html\n<div class=\"accordion-title\">\n  <span class=\"badge\">B</span>\n  <span class=\"item\">My item</span>\n</div>\n```\n. Cool!\nYeah, also a good idea to use `:before`.\nFor now we just use HTML characters like `title=\"&radic; {{::foo.bar}}\"`. It's ok for prototyping.\n. I just tried http://foundation.zurb.com/apps/docs/#!/off-canvas on my Nexus 5 and can't reproduce the problem. Feels fluid.\nAndroid 5.0.1\nChrome 40.0.x\nNexus 5\n. https://github.com/zurb/foundation-apps/issues/249\nThis might help.\n\nShould work if you use your own controller instead of the default one.\nRead 'Controllers' here http://foundation.zurb.com/apps/docs/#!/angular\n. No time come up with a full example at the moment, but I think this could work:\n\n`app.js` add:\n\n``` js\nangular.module('application')\n.controller('MyController', MyController)\n;\nMyController.$inject = ['$scope', '$stateParams', '$state', '$controller', 'FoundationApi'];\nfunction MyController($scope, $stateParams, $state, $controller, fa) {\nangular.extend(this, $controller('DefaultController', {$scope: $scope, $stateParams: $stateParams, $state: $state}));\n  // your code...\n  // using the fa.publish() method described in issue #249\n}\n```\n\nIn your Start page template you add this to the `front matter` part:\n\n``` html\ncontroller: MyController\n```\n\nGive it a try.\nWhen I have time I might do a full example.\n. Well done!\nCompare the code I pasted to your code :)\nYou missed the reference to `FoundationApi`.\nInside the code you use `fa`.\nLook at my code in detail. It's a bit different from the code of the docs. Just a bit.\n. Within the controller you should use `fa` not `foundationApi`\n. What functionality do you need/miss from Compass?\n. Just use default CSS to achieve this and use [Autoprefixer](https://github.com/sindresorhus/gulp-autoprefixer) if you need to support older browsers with prefixes or different syntax.\n\nHere is a good article about what it does:\nhttps://css-tricks.com/autoprefixer\n\nIf those mixins are the only functions you use from Compass I'm sure you can stop using it after this.\n. Hm, yes, I try to avoid Compass.\nThe last time I actually used old school png sprites I used https://github.com/Ensighten/spritesmith\nFor things like icons nowadays I would [use SVGs](https://css-tricks.com/svg-sprites-use-better-icon-fonts). \n. ",
    "GaryWenneker": "Maybe a little late to ask this but is FA going to support resolvement in the dynamic routing scheme? Or maybe in the future? Love the dynamic routing because the designer can start working woth templates and define all paths without asking me all the time to do it. Afterwards I'll implement the controllers. Problem I'm having is that I get to many issues when scope data is nog set and directives try to fire\n. Maybe a little late to ask this but is FA going to support resolvement in the dynamic routing scheme? Or maybe in the future? Love the dynamic routing because the designer can start working woth templates and define all paths without asking me all the time to do it. Afterwards I'll implement the controllers. Problem I'm having is that I get to many issues when scope data is nog set and directives try to fire\n. ",
    "zavan": "@gakimball I had the same issue and your solution works, Thanks!\n\nBut on every foundation-apps update, I have to do this manual copy+pasting :/\n\nIs there any way to make my already-pretty-big angular app to pickup up these templates without the manual work? (I know gulp can do this, but I don't think this is ideal)\n. @gjungb @gakimball That's not ideal, but it's good enough for now. I'm glad to know that there are more plans about integration with pre-existent projects! \nThank you, guys! I'm loving foundation for apps.\n. @gakimball Sure! I'm pretty new to front-end frameworks, most of my experience is in the back-end, with PHP and Ruby frameworks, but I tend to contribute in every way I can to the projects I use and love.\nSee ya!\n. @gakimball I had the same issue and your solution works, Thanks!\n\nBut on every foundation-apps update, I have to do this manual copy+pasting :/\n\nIs there any way to make my already-pretty-big angular app to pickup up these templates without the manual work? (I know gulp can do this, but I don't think this is ideal)\n. @gjungb @gakimball That's not ideal, but it's good enough for now. I'm glad to know that there are more plans about integration with pre-existent projects! \nThank you, guys! I'm loving foundation for apps.\n. @gakimball Sure! I'm pretty new to front-end frameworks, most of my experience is in the back-end, with PHP and Ruby frameworks, but I tend to contribute in every way I can to the projects I use and love.\nSee ya!\n. ",
    "gjungb": "@zavan A possible and in my eyes nice solution via Gulp is provided via #463. \n. And as `JSHint` made some complaints I added minor stylistic changes.\n. also see #534 \n. +1 for this\n\nAre there any plans to merge this pull request? Unfortunately the `zf-panel` is too buggy to be used even with a single `.button` inside of it.\n. @NicoBleh If you do not want / need to use the `foundation.dynamicRouting` module, there is not need at all to extend the `DefaultController` which is part of the above mentioned module. So simply delete the `angular.extend(...)` rows and everything should work fine.\nBTW: you forgot to include `$auth` as last element in the `$inject` array.\n. @mattgrande this is due to the transclusion hell caused by the nesting of `zf-tabs`, `zf-tab` and `zf-tab-individual`. For a quick and dirty solution try this:\n`Content for {{ $parent.key }}. {{ $parent.data.length }} tabs found.`\n. @ViniciusTavares @gakimball this is related to #547 and #481 due to the animation of the `button`\n. @huphtur What CSS changes did you make to get the expected result?\n. Additionally the switch does not work if the label is set (at least on Chrome / Win7)\n. :+1: \n. Thanks for keeping us updated!\n. What do you see when you visit http://localhost:8079 in your browser?\n. @zavan A possible and in my eyes nice solution via Gulp is provided via #463. \n. And as `JSHint` made some complaints I added minor stylistic changes.\n. also see #534 \n. +1 for this\n\nAre there any plans to merge this pull request? Unfortunately the `zf-panel` is too buggy to be used even with a single `.button` inside of it.\n. @NicoBleh If you do not want / need to use the `foundation.dynamicRouting` module, there is not need at all to extend the `DefaultController` which is part of the above mentioned module. So simply delete the `angular.extend(...)` rows and everything should work fine.\nBTW: you forgot to include `$auth` as last element in the `$inject` array.\n. @mattgrande this is due to the transclusion hell caused by the nesting of `zf-tabs`, `zf-tab` and `zf-tab-individual`. For a quick and dirty solution try this:\n`Content for {{ $parent.key }}. {{ $parent.data.length }} tabs found.`\n. @ViniciusTavares @gakimball this is related to #547 and #481 due to the animation of the `button`\n. @huphtur What CSS changes did you make to get the expected result?\n. Additionally the switch does not work if the label is set (at least on Chrome / Win7)\n. :+1: \n. Thanks for keeping us updated!\n. What do you see when you visit http://localhost:8079 in your browser?\n. ",
    "michaeldavidtodd": "Also, there is a resource that fails to load:\nhttp://foundation.zurb.com/apps/docs/partials/scss/grid.html\n. Also, there is a resource that fails to load:\nhttp://foundation.zurb.com/apps/docs/partials/scss/grid.html\n. ",
    "ProLoser": "@jeanieshark @AntJanus this is now how you fix this sort of bug. You are fixing symptoms instead of problems. \n\nYou should hoist the `$scope.$apply()` to the top of the stack trace.\n. @jeanieshark @AntJanus this is now how you fix this sort of bug. You are fixing symptoms instead of problems. \n\nYou should hoist the `$scope.$apply()` to the top of the stack trace.\n. ",
    "thatguynamedandy": "I had the same issue, it was resolved by a `bower install`. Not sure if this is a bug, or just a missing step in the documentation.\n. Good knowledge, that could of slipped through again otherwise.\n:thumbsup:\n. Sorry to be so pedantic, but at some stage this may help someone who doesn't notice the issue straightaway.\n. I had the same issue, it was resolved by a `bower install`. Not sure if this is a bug, or just a missing step in the documentation.\n. Good knowledge, that could of slipped through again otherwise.\n:thumbsup:\n. Sorry to be so pedantic, but at some stage this may help someone who doesn't notice the issue straightaway.\n. ",
    "toranaga": "True. There is a problem. I noticed that import jquery breaks the modal window chrome, safari.\nsrc=\"http://code.jquery.com/jquery-2.1.3.min.js\"\nsrc=\"/assets/js/foundation.js\"\n\nfoundation.js ==>\n'bower_components/fastclick/lib/fastclick.js',\n'bower_components/viewport-units-buggyfill/viewport-units-buggyfill.js',\n'bower_components/tether/tether.js',\n'bower_components/angular/angular.js',\n'bower_components/angular-animate/angular-animate.js',\n'bower_components/ui-router/release/angular-ui-router.js',\n'bower_components/foundation-apps/js/vendor/**/*.js',\n'bower_components/foundation-apps/js/angular/**/*.js',\n'!bower_components/foundation-apps/js/angular/app.js'\n. I checked with new version 1.0.3 still the same for chrome 40, safari.\nJQuery import( <script src=\"https://code.jquery.com/jquery-2.1.3.min.js\"></script>) before the foundation.js causes it.\nFor me the problem is not solved.\n. True. There is a problem. I noticed that import jquery breaks the modal window chrome, safari.\nsrc=\"http://code.jquery.com/jquery-2.1.3.min.js\"\nsrc=\"/assets/js/foundation.js\"\n\nfoundation.js ==>\n'bower_components/fastclick/lib/fastclick.js',\n'bower_components/viewport-units-buggyfill/viewport-units-buggyfill.js',\n'bower_components/tether/tether.js',\n'bower_components/angular/angular.js',\n'bower_components/angular-animate/angular-animate.js',\n'bower_components/ui-router/release/angular-ui-router.js',\n'bower_components/foundation-apps/js/vendor/**/*.js',\n'bower_components/foundation-apps/js/angular/**/*.js',\n'!bower_components/foundation-apps/js/angular/app.js'\n. I checked with new version 1.0.3 still the same for chrome 40, safari.\nJQuery import( <script src=\"https://code.jquery.com/jquery-2.1.3.min.js\"></script>) before the foundation.js causes it.\nFor me the problem is not solved.\n. ",
    "joshuajohnson814": "There is a similar issue with panel. Opening/closing fast causes issues where it randomly closes after opening.\n. +1\n. I think this should be handled the same way that the bower distribution of Foundation for sites is handled. They are exposing the concatenated JS and CSS files along with all the source.\n\nhttps://github.com/zurb/bower-foundation\n\nSomething like this\n\n\"main\": [\n    \"css/foundation-apps.css\",\n    \"css/foundation-apps.css.map\",\n    \"js/foundation-apps.js\"\n  ],\n\nThis seutp gives users the flexibility to use these files and get things working out of the box or ignore these files and override SCSS/JS files in their own build process.\n. I don't think you should expose the actual app.js file through bower. If someone wishes to use this framework as a bower dependency then they will already have their own Angular app file. Thoughts?\n. @gakimball I definitely think having the app.js file in there adds value as a template like you said. \n\nCurrently I'm using this bower module in my project and I'm referencing the SCSS files directly so that I can override the styling in my own process. It will be awesome when I can just reference the foundation-apps.js file directly and not have to build those out in my process.\n\nI'm really excited about the future of this framework! Great work guys.\n. You shouldn't be adding every file to main in bower. You should add the dist versions in the form of a single js file and CSS file. \n. Yeah exactly. Wiredep is looking for the files it can take and inject straight into index.HTML. I like that you have the source in bower though so we can override\n. I noticed that you were including the bower_components dependencies in the dist JS file. The dist should only include foundation specific JS files.\n\nhttps://github.com/zurb/foundation-apps/pull/433\n. You shouldn't package the dependencies for distribution. Your bower.json file lists the dependencies so when a user adds foundation-apps with bower it will automatically install the dependencies for them.\n\nIf you have users that wish to use this framework without using wiredep then they will have to add the bower_components dependencies themselves. All other bower components work in this manner.\n\nTake a look at my pull request. I separated the bower components into a separate array just to load for testing. The gulp watch task should only be watching your foundation-app files and gulp dist should only distribute foundation-app files.\n. I thought of something else.... In order to properly distribute foundation-apps.js you will also need to add the component HTML files as angular templates to the javascript file using templateCache.\n\nThis is exactly how Angular UI Bootstrap distributes their framework.\n\nhttps://github.com/angular-ui/bootstrap-bower\n. Bower Recap:\ndist/foundation-app.js, dist/foundation-app.min.js (concat all foundation angular JS files except app.js with HTML templates using templateCache)\ndist/foundation-app.css, dist/foundation-app.min.css\njs/\nscss/ \n\nDo you want me to open up a separate issue for this request?\n. There is a similar issue with panel. Opening/closing fast causes issues where it randomly closes after opening.\n. +1\n. I think this should be handled the same way that the bower distribution of Foundation for sites is handled. They are exposing the concatenated JS and CSS files along with all the source.\n\nhttps://github.com/zurb/bower-foundation\n\nSomething like this\n\n\"main\": [\n    \"css/foundation-apps.css\",\n    \"css/foundation-apps.css.map\",\n    \"js/foundation-apps.js\"\n  ],\n\nThis seutp gives users the flexibility to use these files and get things working out of the box or ignore these files and override SCSS/JS files in their own build process.\n. I don't think you should expose the actual app.js file through bower. If someone wishes to use this framework as a bower dependency then they will already have their own Angular app file. Thoughts?\n. @gakimball I definitely think having the app.js file in there adds value as a template like you said. \n\nCurrently I'm using this bower module in my project and I'm referencing the SCSS files directly so that I can override the styling in my own process. It will be awesome when I can just reference the foundation-apps.js file directly and not have to build those out in my process.\n\nI'm really excited about the future of this framework! Great work guys.\n. You shouldn't be adding every file to main in bower. You should add the dist versions in the form of a single js file and CSS file. \n. Yeah exactly. Wiredep is looking for the files it can take and inject straight into index.HTML. I like that you have the source in bower though so we can override\n. I noticed that you were including the bower_components dependencies in the dist JS file. The dist should only include foundation specific JS files.\n\nhttps://github.com/zurb/foundation-apps/pull/433\n. You shouldn't package the dependencies for distribution. Your bower.json file lists the dependencies so when a user adds foundation-apps with bower it will automatically install the dependencies for them.\n\nIf you have users that wish to use this framework without using wiredep then they will have to add the bower_components dependencies themselves. All other bower components work in this manner.\n\nTake a look at my pull request. I separated the bower components into a separate array just to load for testing. The gulp watch task should only be watching your foundation-app files and gulp dist should only distribute foundation-app files.\n. I thought of something else.... In order to properly distribute foundation-apps.js you will also need to add the component HTML files as angular templates to the javascript file using templateCache.\n\nThis is exactly how Angular UI Bootstrap distributes their framework.\n\nhttps://github.com/angular-ui/bootstrap-bower\n. Bower Recap:\ndist/foundation-app.js, dist/foundation-app.min.js (concat all foundation angular JS files except app.js with HTML templates using templateCache)\ndist/foundation-app.css, dist/foundation-app.min.css\njs/\nscss/ \n\nDo you want me to open up a separate issue for this request?\n. ",
    "robotaoyuan": "Does anyone have a good workaround for this bug? \n. Does anyone have a good workaround for this bug? \n. ",
    "hal0gen": "Same here, I am using 1.1.1 and I have to import jQuery before Foundation Apps, otherwise I'll break another plugin in my project (ngJcrop). Any ideas?\n. I looked into it and got some more info on what happens, I think @maxcook was right. Reproduced the bug on both modal and panel: if jQuery is imported first, hovering the mouse on any element with a zf-toggle or zf-close fires an event which bubbles up to FoundationAnimation.animate and kills the modal/panel (disappears without animation and never opens again). A quick fix is to execute finishAnimation() only if timedOut is true, just like in setTimeout:\n\n```\n//activate\nelement[0].style.transitionDuration = '';\nelement.addClass(activeClass);\n\nelement.one(events.join(' '), function() {\n\n    if (timedOut) {\n        finishAnimation();\n    }\n});\n```\n\nI don't know if this breaks some other functionality but apparently it works for me\n. Same here, I am using 1.1.1 and I have to import jQuery before Foundation Apps, otherwise I'll break another plugin in my project (ngJcrop). Any ideas?\n. I looked into it and got some more info on what happens, I think @maxcook was right. Reproduced the bug on both modal and panel: if jQuery is imported first, hovering the mouse on any element with a zf-toggle or zf-close fires an event which bubbles up to FoundationAnimation.animate and kills the modal/panel (disappears without animation and never opens again). A quick fix is to execute finishAnimation() only if timedOut is true, just like in setTimeout:\n\n```\n//activate\nelement[0].style.transitionDuration = '';\nelement.addClass(activeClass);\n\nelement.one(events.join(' '), function() {\n\n    if (timedOut) {\n        finishAnimation();\n    }\n});\n```\n\nI don't know if this breaks some other functionality but apparently it works for me\n. ",
    "webnugget": "i made a [Pull Request](https://github.com/zurb/foundation-apps-template/pull/23) for this issue\n. i solved this problem by using [angular-modal-service](https://github.com/dwmkerr/angular-modal-service) instead of ModalFactory, because i didn't like the idea to add everything to $rootScope.\n\nAngular-Modal-Service is able to provide inputvalues, a modalController and can return a result.\n\n```\nvar modalOptions = {\n                templateUrl: 'templates/auth/login-modal.html',\n                controller: 'LoginModalController',\n                inputs: {\n                    roles: requiredRoles\n                }\n            };\n\n            ModalService.showModal(modalOptions).then(function(modal) {\n\n                modal.close.then(function(result) {\n\n                    if (result === 'signup') {\n                        $state.go('signup');\n                    } else if (result) {\n                        $state.go(toState.name);\n                    } else {\n                        $state.go(fromState.name);\n                    }\n                });\n            });\n```\n\n[LoginModalController](https://github.com/webnugget/fapp-stack/blob/master/client/assets/modules/auth/controller/LoginModalController.js)\n[LoginModalTemplate](https://github.com/webnugget/fapp-stack/blob/master/client/assets/modules/auth/templates/login-modal.html)\n. If you wan't to save the result of the modal check out my issue on that topic.\n[#515](https://github.com/zurb/foundation-apps/issues/515)\n\nJust include [Angular-Modal-Service](https://github.com/dwmkerr/angular-modal-service) , open a new modal in your Controller with:\n\n```\nModalService.showModal({\n  templateUrl: \"yesno/yesno.html\",\n  controller: \"YesNoController\"\n}).then(function(modal) {\n  modal.element.modal();\n  modal.close.then(function(result) {\n    $scope.yesNoResult = result ? \"You said Yes\" : \"You said No\";\n  });\n});\n```\n\nModalcontroller:\n\n```\n var app = angular.module('sampleapp');\n app.controller('YesNoController', ['$scope', 'close', function($scope, close) {\n $scope.close = function(result) {\n      close(result); \n  };\n }]);\n```\n\nModalTemplate:\n\n```\n<div class=\"modal-overlay is-active\" id=\"modal\"  >\n    <aside class=\"modal is-active\">\n        <a data-ng-click=\"closeModal()\" class=\"close-button\">\u00d7</a>\n            <div class=\"grid-content\">\n              <p> your terms and conditions</p>\n              <button type=\"submit\" class=\"button medium\" ng-click=\"close(true)\">Submit</button>\n           </div>\n        </div>\n     </aside>\n  </div>\n```\n. i made a [Pull Request](https://github.com/zurb/foundation-apps-template/pull/23) for this issue\n. i solved this problem by using [angular-modal-service](https://github.com/dwmkerr/angular-modal-service) instead of ModalFactory, because i didn't like the idea to add everything to $rootScope.\n\nAngular-Modal-Service is able to provide inputvalues, a modalController and can return a result.\n\n```\nvar modalOptions = {\n                templateUrl: 'templates/auth/login-modal.html',\n                controller: 'LoginModalController',\n                inputs: {\n                    roles: requiredRoles\n                }\n            };\n\n            ModalService.showModal(modalOptions).then(function(modal) {\n\n                modal.close.then(function(result) {\n\n                    if (result === 'signup') {\n                        $state.go('signup');\n                    } else if (result) {\n                        $state.go(toState.name);\n                    } else {\n                        $state.go(fromState.name);\n                    }\n                });\n            });\n```\n\n[LoginModalController](https://github.com/webnugget/fapp-stack/blob/master/client/assets/modules/auth/controller/LoginModalController.js)\n[LoginModalTemplate](https://github.com/webnugget/fapp-stack/blob/master/client/assets/modules/auth/templates/login-modal.html)\n. If you wan't to save the result of the modal check out my issue on that topic.\n[#515](https://github.com/zurb/foundation-apps/issues/515)\n\nJust include [Angular-Modal-Service](https://github.com/dwmkerr/angular-modal-service) , open a new modal in your Controller with:\n\n```\nModalService.showModal({\n  templateUrl: \"yesno/yesno.html\",\n  controller: \"YesNoController\"\n}).then(function(modal) {\n  modal.element.modal();\n  modal.close.then(function(result) {\n    $scope.yesNoResult = result ? \"You said Yes\" : \"You said No\";\n  });\n});\n```\n\nModalcontroller:\n\n```\n var app = angular.module('sampleapp');\n app.controller('YesNoController', ['$scope', 'close', function($scope, close) {\n $scope.close = function(result) {\n      close(result); \n  };\n }]);\n```\n\nModalTemplate:\n\n```\n<div class=\"modal-overlay is-active\" id=\"modal\"  >\n    <aside class=\"modal is-active\">\n        <a data-ng-click=\"closeModal()\" class=\"close-button\">\u00d7</a>\n            <div class=\"grid-content\">\n              <p> your terms and conditions</p>\n              <button type=\"submit\" class=\"button medium\" ng-click=\"close(true)\">Submit</button>\n           </div>\n        </div>\n     </aside>\n  </div>\n```\n. ",
    "jjn2009": "I tried this with a fresh project and a few changes to /client/templates/home.html\nThis doesn't seem to work. Am I missing a class?\nAnimations seem to work but transitions do not, as per the motion-ui documentation \"Motion Classes\":\nhttp://foundation.zurb.com/apps/docs/#!/motion-ui\n\n```\n---\nname: home\nurl: /\n---\nClick me: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n\n<div ng-show=\"checked\" class=\"fadeIn fadeOut linear\">\n  <h1>Welcome to Foundation for Apps!</h1>\n</div>\n\n<p class=\"lead\">This is version <strong>1.0.2 Matterhorn</strong>.</p>\n```\n. > the motion ui docs are mainly targeting using foundation animations with the foundation components, we haven't exactly integrated the animation directives with any selectable DOM element.\n\nFoundation components? So custom foundation html elements like so: `<foundation-xyz>`?\n\nAlso is that to say my original code will hopefully work in future releases? Not that changing it is a problem I'm just curious about the direction of the project and how I can expect motion-ui to work in the future.\n. I see, I'm more of a back-end javascript developer myself so I wasn't aware of these options. That helps a lot, thanks for the thorough response. My issue personal issue is resolved but do you see something like a `wiggle-once` and a `wiggle` class being implemented to automate this? \n. I tried this with a fresh project and a few changes to /client/templates/home.html\nThis doesn't seem to work. Am I missing a class?\nAnimations seem to work but transitions do not, as per the motion-ui documentation \"Motion Classes\":\nhttp://foundation.zurb.com/apps/docs/#!/motion-ui\n\n```\n---\nname: home\nurl: /\n---\nClick me: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n\n<div ng-show=\"checked\" class=\"fadeIn fadeOut linear\">\n  <h1>Welcome to Foundation for Apps!</h1>\n</div>\n\n<p class=\"lead\">This is version <strong>1.0.2 Matterhorn</strong>.</p>\n```\n. > the motion ui docs are mainly targeting using foundation animations with the foundation components, we haven't exactly integrated the animation directives with any selectable DOM element.\n\nFoundation components? So custom foundation html elements like so: `<foundation-xyz>`?\n\nAlso is that to say my original code will hopefully work in future releases? Not that changing it is a problem I'm just curious about the direction of the project and how I can expect motion-ui to work in the future.\n. I see, I'm more of a back-end javascript developer myself so I wasn't aware of these options. That helps a lot, thanks for the thorough response. My issue personal issue is resolved but do you see something like a `wiggle-once` and a `wiggle` class being implemented to automate this? \n. ",
    "saviour123": "Where can i get a cool tutorial on just motion UI\n. Where can i get a cool tutorial on just motion UI\n. ",
    "xml": "@mik01aj You likely have the git: protocol blocked on your firewall. Replace it with https:\n\nhttp://stackoverflow.com/a/11383587/800457\n. OK. Super odd. I see that in https://github.com/zurb/foundation-apps/commit/88067743053aee4ff5395dbae5bd26e3607eaa10, this was already patched. But when I installed foundation-apps through bower this week, I'm still getting the old bower.json on 1.0.2:\n\n```\n  \"name\": \"foundation-apps\",\n  \"version\": \"1.0.2\",\n  \"main\": [\n    \"scss/foundation.scss\",\n    \"js/angular/app.js\"\n  ],\n  \"dependencies\": {\n    \"viewport-units-buggyfill\": \"~0.4.1\",\n    \"tether\": \"~0.6.5\",\n    \"fastclick\": \"~1.0.3\",\n    \"angular\": \"~1.3.4\",\n    \"ui-router\": \"~0.2.12\",\n    \"angular-animate\": \"~1.3.4\",\n    \"angular-touch\": \"~1.3.7\",\n    \"hammerjs\": \"~2.0.4\"\n  },\n```\n\nI just deleted the files for foundation-apps, did `bower cache clean` and re-ran `bower install`, and I still get the old version above, listing `ui-router`. \n. The short-term solution to the templates problem seems to be copying `/components` to my project's root. I can leave the JS where it is, managed by Bower. But, anyone else using generator-gulp-angular will want to delete all the .js from the copy of /components, or generator-gulp-angular's build scripts will hoover it all up and duplicate what you already have.\n. @mik01aj You likely have the git: protocol blocked on your firewall. Replace it with https:\n\nhttp://stackoverflow.com/a/11383587/800457\n. OK. Super odd. I see that in https://github.com/zurb/foundation-apps/commit/88067743053aee4ff5395dbae5bd26e3607eaa10, this was already patched. But when I installed foundation-apps through bower this week, I'm still getting the old bower.json on 1.0.2:\n\n```\n  \"name\": \"foundation-apps\",\n  \"version\": \"1.0.2\",\n  \"main\": [\n    \"scss/foundation.scss\",\n    \"js/angular/app.js\"\n  ],\n  \"dependencies\": {\n    \"viewport-units-buggyfill\": \"~0.4.1\",\n    \"tether\": \"~0.6.5\",\n    \"fastclick\": \"~1.0.3\",\n    \"angular\": \"~1.3.4\",\n    \"ui-router\": \"~0.2.12\",\n    \"angular-animate\": \"~1.3.4\",\n    \"angular-touch\": \"~1.3.7\",\n    \"hammerjs\": \"~2.0.4\"\n  },\n```\n\nI just deleted the files for foundation-apps, did `bower cache clean` and re-ran `bower install`, and I still get the old version above, listing `ui-router`. \n. The short-term solution to the templates problem seems to be copying `/components` to my project's root. I can leave the JS where it is, managed by Bower. But, anyone else using generator-gulp-angular will want to delete all the .js from the copy of /components, or generator-gulp-angular's build scripts will hoover it all up and duplicate what you already have.\n. ",
    "mik01aj": "You were right, it was a problem with my company's firewall. The solution was:\n\n```\ngit config --global url.https://github.com/.insteadOf git://github.com/\n```\n\n(as suggested by @xmlilley)\n. You were right, it was a problem with my company's firewall. The solution was:\n\n```\ngit config --global url.https://github.com/.insteadOf git://github.com/\n```\n\n(as suggested by @xmlilley)\n. ",
    "slmingol": "We were bit by this issue as well, our corporate firewall was blocking the GIT protocol's port 9418, changing to https:/// solved it.\n\n```\nfatal: unable to connect to github.com and github.com[0: 192.30.252.129]: errno=Operation timed out\n```\n. We were bit by this issue as well, our corporate firewall was blocking the GIT protocol's port 9418, changing to https:/// solved it.\n\n```\nfatal: unable to connect to github.com and github.com[0: 192.30.252.129]: errno=Operation timed out\n```\n. ",
    "iotaweb": "I also encountered this error when trying to run jasmine with a spec runner file. As I didn't want to reference foundation's `app.css` as it would then override jasmine's styling, I added the following to my specrunner file:\n\n```\n<style>meta.foundation-mq { font-family: \"small=&medium=&large=&xlarge=&xxlarge=\"; }</style>\n```\n. Actually, this may have been fixed - I was pulling from bower ~1.0.x which resolved to 1.0.3. It seems to work if I pull from the latest on #master. Please feel free to close if you're happy it has been addressed. Tx.\n. I also encountered this error when trying to run jasmine with a spec runner file. As I didn't want to reference foundation's `app.css` as it would then override jasmine's styling, I added the following to my specrunner file:\n\n```\n<style>meta.foundation-mq { font-family: \"small=&medium=&large=&xlarge=&xxlarge=\"; }</style>\n```\n. Actually, this may have been fixed - I was pulling from bower ~1.0.x which resolved to 1.0.3. It seems to work if I pull from the latest on #master. Please feel free to close if you're happy it has been addressed. Tx.\n. ",
    "tolyo": "Quickfix for this is to load your css build before your scripts in the karma config file\n\n```\n// list of files / patterns to load in the browser\nfiles: [\n        'build/css/app.css',\n        'build/js/vendor.js',\n        'build/js/app.js',\n        'bower_components/angular-mocks/angular-mocks.js',\n        'app/**/*.spec.js'\n      ],\n```\n. This is such a great and unique framework. Fell in love with it at first sight. Now the Web will look all the more like Material Design...\n. I second @DaSchTour. This repo needs a big DEPRECATED warning sign slapped on its description and, as a community, we need to start a new fork without the Foundation tag in its name. \n. Does someone from the community have commit rights? Otherwise, its a new fork under a new name. Something with Angular in it.\n. A simple fork won't do as we need new npm and bower packages.\n. Can't use 'foundation' as its used by Zurb. For sake of continuity, I second @soumak77  - we can make it generic along the lines of 'Angular For Apps'. Naming convention should be changed if we expect this to evolve beyond the existing API and not simply be a bug patch project.  `nga-`?\n. What is it that set this project apart that it deserves a chance to live on? Its a combination of Angular, a flexbox grid and set of animation components for desktop and mobile. Its primary competitor is Angular Material, which sets a damn high quality bar. So Angular Base it is.   \n. This project has thought and imagination put into it. It can use additional components, some tests, some architectural changes, a new build and it will scale quite well in the future for dashboard-like apps. Angular Material will just make your app look like a failed implementation of Material design specs, which is btw what most Google sites are. \n. Quickfix for this is to load your css build before your scripts in the karma config file\n\n```\n// list of files / patterns to load in the browser\nfiles: [\n        'build/css/app.css',\n        'build/js/vendor.js',\n        'build/js/app.js',\n        'bower_components/angular-mocks/angular-mocks.js',\n        'app/**/*.spec.js'\n      ],\n```\n. This is such a great and unique framework. Fell in love with it at first sight. Now the Web will look all the more like Material Design...\n. I second @DaSchTour. This repo needs a big DEPRECATED warning sign slapped on its description and, as a community, we need to start a new fork without the Foundation tag in its name. \n. Does someone from the community have commit rights? Otherwise, its a new fork under a new name. Something with Angular in it.\n. A simple fork won't do as we need new npm and bower packages.\n. Can't use 'foundation' as its used by Zurb. For sake of continuity, I second @soumak77  - we can make it generic along the lines of 'Angular For Apps'. Naming convention should be changed if we expect this to evolve beyond the existing API and not simply be a bug patch project.  `nga-`?\n. What is it that set this project apart that it deserves a chance to live on? Its a combination of Angular, a flexbox grid and set of animation components for desktop and mobile. Its primary competitor is Angular Material, which sets a damn high quality bar. So Angular Base it is.   \n. This project has thought and imagination put into it. It can use additional components, some tests, some architectural changes, a new build and it will scale quite well in the future for dashboard-like apps. Angular Material will just make your app look like a failed implementation of Material design specs, which is btw what most Google sites are. \n. ",
    "naneer": "Thanks for the response, I switched to YAML syntax!!!  Though the issue I have is that I need the authentication system to be able to access the State `data` property directly.  The properties in front matter will be placed in `data.vars`, so the location of the property would be in `state.data.vars.data.requireLogin`. \n\nI apologize, in the effort to be frank, I missed a few key reasons why I had to do this.  I should have clarified better, the story is that I'm trying to use another third-party system that listens for $stateChangeStart and checks if authentication is needed by looking for `to.data.requireLogin`.  \n\nI'd imagine that there could be other external assets out there that follow this specification to store  [custom data](https://github.com/angular-ui/ui-router/wiki#attach-custom-data-to-state-objects) in the data property.  \n\nBut rather than attempting to change the way the other systems checks `$state.data`, (there could be many) I was hoping Foundation-apps could be able to pass in data properties entered in front matter and then add that to the `state.data` along with the properties that will be placed in `state.data.vars`.\n\nI expanded my initial workaround to compensate some edge cases, here's my attempt at this:  \n\n``` javascript\n    var state = {\n      data: getData(page),\n    }\n    function getData(page) {\n      var data = { vars: {} };\n      if (page.data) {\n        if (typeof page.data.vars === \"object\") {\n          data.vars = page.data.vars;\n        }\n        delete page.data.vars;\n        angular.extend(data, page.data);\n      }\n      delete page.data;\n      angular.extend(data.vars, page);\n      return data;\n    }\n```\n\nIt considers that there could be valid `data.vars` properties from within and merge it with the rest of the properties in the page, but ultimately overwriting same name values in favor of the page properties.\n\n```\n---\nname: post\nurl: /post\nanimationIn: fadeIn\ndata:\n    requiresLogin: true\n    vars:   // not recommended but will support provided properties are unique\n        cards:\n            -\n                name: \"Card in data vars\"\n                description: \"I shouldn't be here, but I'll still work {{ vars.cards[0].name }}\"\n---\n```\n\n```\n---\nname: post\nurl: /post\nanimationIn: fadeIn\ndata:\n    requiresLogin: true\n    vars:  // not recommended but will support provided properties are unique\n        cards:\n            -\n                name: \"Card in data vars\"\n                description: \"I won't work now cause I'm not favored\"\ncards:\n    -\n         name: \"Card in vars\"\n         description:  \"I will work cause I'm favored!\"\n---\n```\n\nOverlooks any properties with the key name as `vars`\n\n```\n---\nname: post\nurl: /post\nanimationIn: fadeIn\ndata:\n    requiresLogin: true\n    vars: \"will be overwritten cause I'm not an object\"\n---\n```\n\nI hope this isn't beyond the scope of Foundation-apps, I think being able to integrate with other third-party systems will be vital.\n\nThe result would be: \n\n```\n state.data = { \n    requireLogin: true,\n    vars: {\n       name: \"post\",\n       animationIn: fadeIn,\n       ...\n    }\n}\n```\n. Edit: Using negative values for position elements, instead of negative margin values.\n\nI had the same issue by nesting panels and closing them with a Hard-Toggle.  I don't have jQuery.  It happens in Chrome and IE.  \n\nWhen placing the zf-open button for the child panel inside the parent panel, do the following:\n1. Open Parent Panel\n2. Open Child Panel\n3. Press Hard-Toggle\n4. Wait for more than 3 seconds\n5. Open Parent Panel\n6. Open Child Panel\n\nThe child panel disappears on the second run.  I traced the problem down to this [bug](https://bugs.webkit.org/show_bug.cgi?id=51945).  Essentially what's happening is that the `transitionend` event is not fired for the child panel since the transition was canceled out because the parent element (parent panel) has a style of `display:none` from the base panel class.  Then, after 3 seconds, the setTimeout function runs removing left over style classes.  \n\nThe problem now though is that the event listener is still listening for the event, and so when the `transitionend` occurs for the second 'Open', the finishAnimation runs again for the previous 'Close'.  \n\nThe possible solution would be to avoid using `display: none`.  By using a negative left, top, right, bottom values for each respective panel position and removing the values for display in the 'base' and  `is-active` class, and the setTimeout function,  I was able to do it with the following edits to the panel.scss:\n\n``` css\n%panel-base {\n  position: absolute;\n  z-index: 100;\n  overflow-y: auto;\n}\n```\n\nFor hidden panels:\n\n``` css\n  /*\n    Direction\n  */\n  @if $position == top {\n    top: -9999px;\n    width: 100%;\n  }\n  @else if $position == right {\n    right: -9999px;\n    height: 100%;\n  }\n  @else if $position == bottom {\n    bottom: -9999px;\n    width: 100%;\n  }\n  @else if $position == left {\n    left: -9999px;\n    height: 100%;\n  }\n```\n\nFor displayed panels:\n\n``` css\n  &.is-active {\n    @if $position == left        { box-shadow: $shadow-distance 0 $shadow-size $shadow-color; top: 0; left: 0; }\n    @else if $position == right  { box-shadow: (-$shadow-distance) 0 $shadow-size $shadow-color; top: 0; right: 0;}\n    @else if $position == top    { box-shadow: 0 $shadow-distance $shadow-size $shadow-color; top: 0; left: 0;}\n    @else if $position == bottom { box-shadow: 2px (-$shadow-distance) $shadow-size $shadow-color; bottom: 0; left: 0;}\n  }\n```\n\nThen in motions.scss, added left, top, right, and bottom to transition-property (especially needed for firefox):\n\n``` css\n  // CSS Output\n  @include transition-start($dir) {\n    @include transition-basics($duration, $timing, $delay);\n    transition-property: transform, opacity,  left, top, bottom, right;\n    backface-visibility: hidden;\n    transform: $start;\n\n    @if $fade { opacity: if($dir == in, 0, 1); }\n  }\n```\n\n It no longer has to rely on the a timeout function to cleanup the styles.  Also I've read online that the display:none isn't friendly with on-screen readers.  Anyways, just dropping this in hoping this could be of any help.  If it works for others and the zurb team likes it, I was hoping to submit a pull request :). \n. On a second trial, I think the root cause was the event listener in animations, I made a pull request.\nhttps://github.com/zurb/foundation-apps/pull/547\n. Hey, the PR fixes the first issue with jQuery, I had some time today to test it out.  Used the same html provided above and added jquery to the top of the foundationJS array in the gulp file.  Disappears without the PR, works with it.  Thanks\n. Thanks for the response, I switched to YAML syntax!!!  Though the issue I have is that I need the authentication system to be able to access the State `data` property directly.  The properties in front matter will be placed in `data.vars`, so the location of the property would be in `state.data.vars.data.requireLogin`. \n\nI apologize, in the effort to be frank, I missed a few key reasons why I had to do this.  I should have clarified better, the story is that I'm trying to use another third-party system that listens for $stateChangeStart and checks if authentication is needed by looking for `to.data.requireLogin`.  \n\nI'd imagine that there could be other external assets out there that follow this specification to store  [custom data](https://github.com/angular-ui/ui-router/wiki#attach-custom-data-to-state-objects) in the data property.  \n\nBut rather than attempting to change the way the other systems checks `$state.data`, (there could be many) I was hoping Foundation-apps could be able to pass in data properties entered in front matter and then add that to the `state.data` along with the properties that will be placed in `state.data.vars`.\n\nI expanded my initial workaround to compensate some edge cases, here's my attempt at this:  \n\n``` javascript\n    var state = {\n      data: getData(page),\n    }\n    function getData(page) {\n      var data = { vars: {} };\n      if (page.data) {\n        if (typeof page.data.vars === \"object\") {\n          data.vars = page.data.vars;\n        }\n        delete page.data.vars;\n        angular.extend(data, page.data);\n      }\n      delete page.data;\n      angular.extend(data.vars, page);\n      return data;\n    }\n```\n\nIt considers that there could be valid `data.vars` properties from within and merge it with the rest of the properties in the page, but ultimately overwriting same name values in favor of the page properties.\n\n```\n---\nname: post\nurl: /post\nanimationIn: fadeIn\ndata:\n    requiresLogin: true\n    vars:   // not recommended but will support provided properties are unique\n        cards:\n            -\n                name: \"Card in data vars\"\n                description: \"I shouldn't be here, but I'll still work {{ vars.cards[0].name }}\"\n---\n```\n\n```\n---\nname: post\nurl: /post\nanimationIn: fadeIn\ndata:\n    requiresLogin: true\n    vars:  // not recommended but will support provided properties are unique\n        cards:\n            -\n                name: \"Card in data vars\"\n                description: \"I won't work now cause I'm not favored\"\ncards:\n    -\n         name: \"Card in vars\"\n         description:  \"I will work cause I'm favored!\"\n---\n```\n\nOverlooks any properties with the key name as `vars`\n\n```\n---\nname: post\nurl: /post\nanimationIn: fadeIn\ndata:\n    requiresLogin: true\n    vars: \"will be overwritten cause I'm not an object\"\n---\n```\n\nI hope this isn't beyond the scope of Foundation-apps, I think being able to integrate with other third-party systems will be vital.\n\nThe result would be: \n\n```\n state.data = { \n    requireLogin: true,\n    vars: {\n       name: \"post\",\n       animationIn: fadeIn,\n       ...\n    }\n}\n```\n. Edit: Using negative values for position elements, instead of negative margin values.\n\nI had the same issue by nesting panels and closing them with a Hard-Toggle.  I don't have jQuery.  It happens in Chrome and IE.  \n\nWhen placing the zf-open button for the child panel inside the parent panel, do the following:\n1. Open Parent Panel\n2. Open Child Panel\n3. Press Hard-Toggle\n4. Wait for more than 3 seconds\n5. Open Parent Panel\n6. Open Child Panel\n\nThe child panel disappears on the second run.  I traced the problem down to this [bug](https://bugs.webkit.org/show_bug.cgi?id=51945).  Essentially what's happening is that the `transitionend` event is not fired for the child panel since the transition was canceled out because the parent element (parent panel) has a style of `display:none` from the base panel class.  Then, after 3 seconds, the setTimeout function runs removing left over style classes.  \n\nThe problem now though is that the event listener is still listening for the event, and so when the `transitionend` occurs for the second 'Open', the finishAnimation runs again for the previous 'Close'.  \n\nThe possible solution would be to avoid using `display: none`.  By using a negative left, top, right, bottom values for each respective panel position and removing the values for display in the 'base' and  `is-active` class, and the setTimeout function,  I was able to do it with the following edits to the panel.scss:\n\n``` css\n%panel-base {\n  position: absolute;\n  z-index: 100;\n  overflow-y: auto;\n}\n```\n\nFor hidden panels:\n\n``` css\n  /*\n    Direction\n  */\n  @if $position == top {\n    top: -9999px;\n    width: 100%;\n  }\n  @else if $position == right {\n    right: -9999px;\n    height: 100%;\n  }\n  @else if $position == bottom {\n    bottom: -9999px;\n    width: 100%;\n  }\n  @else if $position == left {\n    left: -9999px;\n    height: 100%;\n  }\n```\n\nFor displayed panels:\n\n``` css\n  &.is-active {\n    @if $position == left        { box-shadow: $shadow-distance 0 $shadow-size $shadow-color; top: 0; left: 0; }\n    @else if $position == right  { box-shadow: (-$shadow-distance) 0 $shadow-size $shadow-color; top: 0; right: 0;}\n    @else if $position == top    { box-shadow: 0 $shadow-distance $shadow-size $shadow-color; top: 0; left: 0;}\n    @else if $position == bottom { box-shadow: 2px (-$shadow-distance) $shadow-size $shadow-color; bottom: 0; left: 0;}\n  }\n```\n\nThen in motions.scss, added left, top, right, and bottom to transition-property (especially needed for firefox):\n\n``` css\n  // CSS Output\n  @include transition-start($dir) {\n    @include transition-basics($duration, $timing, $delay);\n    transition-property: transform, opacity,  left, top, bottom, right;\n    backface-visibility: hidden;\n    transform: $start;\n\n    @if $fade { opacity: if($dir == in, 0, 1); }\n  }\n```\n\n It no longer has to rely on the a timeout function to cleanup the styles.  Also I've read online that the display:none isn't friendly with on-screen readers.  Anyways, just dropping this in hoping this could be of any help.  If it works for others and the zurb team likes it, I was hoping to submit a pull request :). \n. On a second trial, I think the root cause was the event listener in animations, I made a pull request.\nhttps://github.com/zurb/foundation-apps/pull/547\n. Hey, the PR fixes the first issue with jQuery, I had some time today to test it out.  Used the same html provided above and added jquery to the top of the foundationJS array in the gulp file.  Disappears without the PR, works with it.  Thanks\n. ",
    "laurent-le-graverend": "Having a `dist` is definitely a must when we install it with bower as a dependency, so everyone can quickly start with all necessary files.\n\nThen if they want to customise their build and have only specific modules (JS and SCSS) from Foundation for Apps, they can use Gulp or Grunt to exclude `dist` files and include what they need.\n\nThis last part would be nice to be documented later, using Gulp for example to make clear for everyone that they have different options to work with Foundation.\n. +1 for the templates into the JS directly, they are really small HTML files and it's better to avoid unnecessary http requests.\n\nBut the distribution with bower also needs to have uncompiled SCSS and JS files in order to let you make your own 'build' (select only the JS and SCSS components you needs).\n. How about this (similar as jQuery)\n- bower.json (`\"main\"` will reference both JS and CSS min files)\n- dist/\n  - foundation-app.css\n  - foundation-app.min.css\n  - foundation-app.js\n  - foundation-app.min.js\n- src/\n  - js/ \n  - scss/\n\nThen, in your own top module\n\n### Choice 1: use all components (using min files)\n\n```\n  angular\n    .module('myApp', [\n      'foundation',\n      'ui.router',\n      ...\n  ])\n```\n\n### Choice 2: pick your own\n\n```\n  angular\n    .module('myApp', [\n      'foundation.core',\n      'foundation.common',\n      'foundation.offcanvas',\n      ...,\n      'ui.router',\n      ...\n  ])\n```\n\nLast thing to solve for this second choice would be also to use have components templates in the JS templateCache.\nThis could be a part of your own build documented.\n. Facing same issue, with the current code, there is no way to set `overlay-close` attribute to `false`.\n\n```\n if(config[prop]) {\n   switch (prop) {\n     [...]\n     case 'overlayClose':\n       element.attr('overlay-close', config[prop] ? 'true' : 'false'); // must be string, see postLink() above\n```\n\nMaybe the line should be simply replaced by\n`element.attr('overlay-close', config[prop]);`\n\nhttps://github.com/zurb/foundation-apps/blob/master/js/angular/components/modal/modal.js#L279\n. This was merged and fixed @chr22 \nAny example of code where it does not work for you?\n. Set it as a string `'false'`?\n. Not sure anyone would merge your PR soon or later @vincentpalita , this repo seems be dead.\n\nIn case of... you might probably also want to apply this logic to `notification-static.html`\n. Still, as a company who relies on a framework to work, it's not convenient to don't have any update for weeks while some many PRs are pending and are simple to integrate.\n\nRegarding yours @vincentpalita, I didn't made it work with a ui router anchor URL, it might be related to `$sce` while getting a clean html string.\n\nTo me, the link would be more needed:\n\na/ As a full notification link (anywhere you click but the close button)\nb/ As html anchor(s) within the `content`\n. Also commented \"this repo seems to be dead\", back in October in https://github.com/zurb/foundation-apps/pull/710#issuecomment-150998651\n\nAt the time we had been waiting for months to see basic fixes being merged.\n\nThey are good at promoting their framework and making parties to launch it, but maintaining it is another story... Also invested way too much time to switch to it, now trying to get rid of it since last summer.\n. Good to know, thanks!\n\nWhile most of us were waiting for months for updates, the project was already dead... It will be hard to trust Zurb in the future...\n\nThe Open Source world drawbacks!\n. Having a `dist` is definitely a must when we install it with bower as a dependency, so everyone can quickly start with all necessary files.\n\nThen if they want to customise their build and have only specific modules (JS and SCSS) from Foundation for Apps, they can use Gulp or Grunt to exclude `dist` files and include what they need.\n\nThis last part would be nice to be documented later, using Gulp for example to make clear for everyone that they have different options to work with Foundation.\n. +1 for the templates into the JS directly, they are really small HTML files and it's better to avoid unnecessary http requests.\n\nBut the distribution with bower also needs to have uncompiled SCSS and JS files in order to let you make your own 'build' (select only the JS and SCSS components you needs).\n. How about this (similar as jQuery)\n- bower.json (`\"main\"` will reference both JS and CSS min files)\n- dist/\n  - foundation-app.css\n  - foundation-app.min.css\n  - foundation-app.js\n  - foundation-app.min.js\n- src/\n  - js/ \n  - scss/\n\nThen, in your own top module\n\n### Choice 1: use all components (using min files)\n\n```\n  angular\n    .module('myApp', [\n      'foundation',\n      'ui.router',\n      ...\n  ])\n```\n\n### Choice 2: pick your own\n\n```\n  angular\n    .module('myApp', [\n      'foundation.core',\n      'foundation.common',\n      'foundation.offcanvas',\n      ...,\n      'ui.router',\n      ...\n  ])\n```\n\nLast thing to solve for this second choice would be also to use have components templates in the JS templateCache.\nThis could be a part of your own build documented.\n. Facing same issue, with the current code, there is no way to set `overlay-close` attribute to `false`.\n\n```\n if(config[prop]) {\n   switch (prop) {\n     [...]\n     case 'overlayClose':\n       element.attr('overlay-close', config[prop] ? 'true' : 'false'); // must be string, see postLink() above\n```\n\nMaybe the line should be simply replaced by\n`element.attr('overlay-close', config[prop]);`\n\nhttps://github.com/zurb/foundation-apps/blob/master/js/angular/components/modal/modal.js#L279\n. This was merged and fixed @chr22 \nAny example of code where it does not work for you?\n. Set it as a string `'false'`?\n. Not sure anyone would merge your PR soon or later @vincentpalita , this repo seems be dead.\n\nIn case of... you might probably also want to apply this logic to `notification-static.html`\n. Still, as a company who relies on a framework to work, it's not convenient to don't have any update for weeks while some many PRs are pending and are simple to integrate.\n\nRegarding yours @vincentpalita, I didn't made it work with a ui router anchor URL, it might be related to `$sce` while getting a clean html string.\n\nTo me, the link would be more needed:\n\na/ As a full notification link (anywhere you click but the close button)\nb/ As html anchor(s) within the `content`\n. Also commented \"this repo seems to be dead\", back in October in https://github.com/zurb/foundation-apps/pull/710#issuecomment-150998651\n\nAt the time we had been waiting for months to see basic fixes being merged.\n\nThey are good at promoting their framework and making parties to launch it, but maintaining it is another story... Also invested way too much time to switch to it, now trying to get rid of it since last summer.\n. Good to know, thanks!\n\nWhile most of us were waiting for months for updates, the project was already dead... It will be hard to trust Zurb in the future...\n\nThe Open Source world drawbacks!\n. ",
    "rmilushev": "The link for polymer-project:\nhttps://elements.polymer-project.org/elements/paper-button?view=demo:demo/index.html\n. The link for polymer-project:\nhttps://elements.polymer-project.org/elements/paper-button?view=demo:demo/index.html\n. ",
    "thumbsized": "Yes, I would also like some style that would extend the basic foundation styling with MD. Not just buttons.\n. Yes, I would also like some style that would extend the basic foundation styling with MD. Not just buttons.\n. ",
    "rbecheras": "Thanks @rmilushev for the link to the polymer project. \n\nAnd here the foundation theme project:\n\n> Material Design version of Foudation for Sites by Zurb\n> http://eucalyptuss.github.io/material-foundation/\n. Thanks @rmilushev for the link to the polymer project. \n\nAnd here the foundation theme project:\n\n> Material Design version of Foudation for Sites by Zurb\n> http://eucalyptuss.github.io/material-foundation/\n. ",
    "moondawg69": "+1\n. Ah that's annoying, I was planning to do the same until such functionality was implemented. Big issue for me and my planning/wireframing :(\n. Ok thanks, appreciated.\n. Completely agree, as I had one for 'settings' and one for changing views based on context. What a pain. \n. Cool, good work :+1: \n. +1\n. Ah that's annoying, I was planning to do the same until such functionality was implemented. Big issue for me and my planning/wireframing :(\n. Ok thanks, appreciated.\n. Completely agree, as I had one for 'settings' and one for changing views based on context. What a pain. \n. Cool, good work :+1: \n. ",
    "jonathanmendes": "+1, especially for panels!\n. +1, especially for panels!\n. ",
    "juniorgodoi": "+1\n. +1\n. ",
    "ksr583": "+1\nI suppose an ng-if or ng-show on a fixed element that covers the rest of the content and has a zf-toggle would work, just need to figure out how to based that ng-if/ng-show on the state of the off-canvas menu. (Just downloaded foundation-apps for the first time tonight)\n. Hmm I tried those changes and am seeing the same behavior. I will prepare a larger code example and post it soon.\n. I'm still getting this error all over the place when using panels as well. If someone finds an answer to this, I'd love to hear about it.\n. I stupidly chose this framework to make a soon-to-be production app with, and I'm definitely upset that it basically hasn't been touched.\n. In my case it's an <a> attribute with no href or ui-sref (switching between tabs on an ng-switch)\n. +1\nI suppose an ng-if or ng-show on a fixed element that covers the rest of the content and has a zf-toggle would work, just need to figure out how to based that ng-if/ng-show on the state of the off-canvas menu. (Just downloaded foundation-apps for the first time tonight)\n. Hmm I tried those changes and am seeing the same behavior. I will prepare a larger code example and post it soon.\n. I'm still getting this error all over the place when using panels as well. If someone finds an answer to this, I'd love to hear about it.\n. I stupidly chose this framework to make a soon-to-be production app with, and I'm definitely upset that it basically hasn't been touched.\n. In my case it's an <a> attribute with no href or ui-sref (switching between tabs on an ng-switch)\n. ",
    "sjoerdvanhal": "+1\n. +1\n. ",
    "ViniciusTavares": "+1\n. I updated my foundation-apps source but the problem continues with modals. \nWhen I have a modal with a button then it is closing automatically.\n\nPanels are ok.\n. +1\n. I updated my foundation-apps source but the problem continues with modals. \nWhen I have a modal with a button then it is closing automatically.\n\nPanels are ok.\n. ",
    "BrendonPierson": "+1\n. +1\n. ",
    "rockinrocco": "This should really be somewhere in the offcanvas menu or panel documentation - this is something almost every designing for mobile will want.\n. This should really be somewhere in the offcanvas menu or panel documentation - this is something almost every designing for mobile will want.\n. ",
    "birchcode": "Newb question here.\n\nIf I add the jslint like above, or other changes to my gulpfile.js -- like other files to watch such as my own JS files -- when FA updates (I haven't done this yet - I don't know if there are updates), what happens? Does my gulpfile.js get overridden? \n. Newb question here.\n\nIf I add the jslint like above, or other changes to my gulpfile.js -- like other files to watch such as my own JS files -- when FA updates (I haven't done this yet - I don't know if there are updates), what happens? Does my gulpfile.js get overridden? \n. ",
    "iandanforth": "For reference, the buggy fill did not work for me, however I am not using the angular components of the framework (I am using the CSS with React). The fix from #456 did however. iOS / Mobile Safari now has the correct height for the grid-frame.\n. For posterity, this fix is a viable one and worked for my usecase where the merged fix did not.\n. For reference, the buggy fill did not work for me, however I am not using the angular components of the framework (I am using the CSS with React). The fix from #456 did however. iOS / Mobile Safari now has the correct height for the grid-frame.\n. For posterity, this fix is a viable one and worked for my usecase where the merged fix did not.\n. ",
    "quook": "Sorry\u2014the defect report contained a typo. This does occur in Firefox 35.0.1 (latest version) on OS X Mavericks and OS X Yosemite.\n\n> On Feb 6, 2015, at 8:16 PM, Geoff Kimball notifications@github.com wrote:\n> \n> Closed #438 https://github.com/zurb/foundation-apps/issues/438.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub https://github.com/zurb/foundation-apps/issues/438#event-231869013.\n. In F4Apps notifications are pinned to the corner of the viewport with position: fixed and I don't see a notification-container class. With position: fixed, multiple notifications are layered on top of each other, and if we override the position and transform attributes to allow inline or stacked notifications, each notification must be closed twice. This is one of the variations of SCSS we have tried:\n\n.custom-notification {\n    @extend %notification;\n\n```\n> .notification {\n    @include notification-layout(\n        $x: left,\n        $y: top,\n        $size: auto,\n        $offset: $spacevar-1\n    );\n    @include notification-style(\n        $background: $color-5,\n        $color: $color-1,\n        $padding: 1rem,\n        $radius: 0px\n    );\n\n    /* Restting position or transform causes double-close defect\n        position: relative;\n        display: block;\n        top: 0 !important;\n        left: 0 !important;\n        margin-top: $spacevar-1;\n        transform: none !important;\n    */\n\n    /* Restting position or transform causes double-close defect \n        &.is-active {\n            transform: none !important;\n        }\n    */\n}\n```\n\n}\n\n> On Feb 9, 2015, at 9:02 PM, jeaniec notifications@github.com wrote:\n> \n> @quook https://github.com/quook the notifications are already being style with position: relative. Or are you talking about the notification-container class?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub https://github.com/zurb/foundation-apps/issues/439#issuecomment-73630997.\n. We'll wait for the stable patch, thanks :-) Will this allow true inline notifications (inserted anywhere in the DOM)? Looks like position: fixed is still the default, just bumped up to the new notification-container parent.\n\n> On Feb 10, 2015, at 12:14 PM, jeaniec notifications@github.com wrote:\n> \n> @quook https://github.com/quook Ah, I see. Since the last release, I've updated the notifications to stack as of adeee34 https://github.com/zurb/foundation-apps/commit/adeee3439a8e8e409fccc2e5e8e024614935b456 . You could either pull down the latest repo to see if that will fix your current problem or wait until we release our next stable patch! :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub https://github.com/zurb/foundation-apps/issues/439#issuecomment-73740440.\n. @gakimball Node v0.12.2 (new machine, fresh install so latest version of everything). I can run the gulpfile directly with no trouble.\n. Sorry\u2014the defect report contained a typo. This does occur in Firefox 35.0.1 (latest version) on OS X Mavericks and OS X Yosemite.\n\n> On Feb 6, 2015, at 8:16 PM, Geoff Kimball notifications@github.com wrote:\n> \n> Closed #438 https://github.com/zurb/foundation-apps/issues/438.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub https://github.com/zurb/foundation-apps/issues/438#event-231869013.\n. In F4Apps notifications are pinned to the corner of the viewport with position: fixed and I don't see a notification-container class. With position: fixed, multiple notifications are layered on top of each other, and if we override the position and transform attributes to allow inline or stacked notifications, each notification must be closed twice. This is one of the variations of SCSS we have tried:\n\n.custom-notification {\n    @extend %notification;\n\n```\n> .notification {\n    @include notification-layout(\n        $x: left,\n        $y: top,\n        $size: auto,\n        $offset: $spacevar-1\n    );\n    @include notification-style(\n        $background: $color-5,\n        $color: $color-1,\n        $padding: 1rem,\n        $radius: 0px\n    );\n\n    /* Restting position or transform causes double-close defect\n        position: relative;\n        display: block;\n        top: 0 !important;\n        left: 0 !important;\n        margin-top: $spacevar-1;\n        transform: none !important;\n    */\n\n    /* Restting position or transform causes double-close defect \n        &.is-active {\n            transform: none !important;\n        }\n    */\n}\n```\n\n}\n\n> On Feb 9, 2015, at 9:02 PM, jeaniec notifications@github.com wrote:\n> \n> @quook https://github.com/quook the notifications are already being style with position: relative. Or are you talking about the notification-container class?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub https://github.com/zurb/foundation-apps/issues/439#issuecomment-73630997.\n. We'll wait for the stable patch, thanks :-) Will this allow true inline notifications (inserted anywhere in the DOM)? Looks like position: fixed is still the default, just bumped up to the new notification-container parent.\n\n> On Feb 10, 2015, at 12:14 PM, jeaniec notifications@github.com wrote:\n> \n> @quook https://github.com/quook Ah, I see. Since the last release, I've updated the notifications to stack as of adeee34 https://github.com/zurb/foundation-apps/commit/adeee3439a8e8e409fccc2e5e8e024614935b456 . You could either pull down the latest repo to see if that will fix your current problem or wait until we release our next stable patch! :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub https://github.com/zurb/foundation-apps/issues/439#issuecomment-73740440.\n. @gakimball Node v0.12.2 (new machine, fresh install so latest version of everything). I can run the gulpfile directly with no trouble.\n. ",
    "kurt-integral": "Yes\nOn Feb 15, 2015 2:37 PM, \"tatemz\" notifications@github.com wrote:\n\n> While exploring some benchmarking techniques (that go beyond browser\n> inspectors), I found this:\n> \n> https://github.com/axemclion/perfjankie\n> \n> Any thoughts on implementing this CSS (and AngularJS component)\n> performance tool into a gulp task and travis test?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/440#issuecomment-74432808\n> .\n. Yes\nOn Feb 15, 2015 2:37 PM, \"tatemz\" notifications@github.com wrote:\n\n> While exploring some benchmarking techniques (that go beyond browser\n> inspectors), I found this:\n> \n> https://github.com/axemclion/perfjankie\n> \n> Any thoughts on implementing this CSS (and AngularJS component)\n> performance tool into a gulp task and travis test?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/440#issuecomment-74432808\n> .\n. ",
    "rmsint": "I have been giving this more thought and I could think of several options to solve this.\n- group actions sheets/ popup or modals that belong together\n- or do this globally, ie. Extjs has a window manager\n- or add a manager to the existing services lile `FoundationPopUpManager`, then each instance can be tracked there and a method `FoundationPopUpManager::getActive` could already solve my use case\n. Solved in a similar way as `foundationApi.closeActiveElements`\n. I have been giving this more thought and I could think of several options to solve this.\n- group actions sheets/ popup or modals that belong together\n- or do this globally, ie. Extjs has a window manager\n- or add a manager to the existing services lile `FoundationPopUpManager`, then each instance can be tracked there and a method `FoundationPopUpManager::getActive` could already solve my use case\n. Solved in a similar way as `foundationApi.closeActiveElements`\n. ",
    "agibalov": "@tatemz , thank you for responding. I believe that the \"regular\" Foundation doesn't provide any tools for full-window layouts like Foundation for Apps does, that's why I'm curious about having Foundation for Apps available via Bower. I sure can git clone and build it manually, but there's quite a large difference between `bower install --save ...` and the `... && ... && ...` thing you've suggested. And I sure don't mean the number of keystrokes.\n. @gakimball Thank you - that's a good news. Waiting for the release.\n. @tatemz , thank you for responding. I believe that the \"regular\" Foundation doesn't provide any tools for full-window layouts like Foundation for Apps does, that's why I'm curious about having Foundation for Apps available via Bower. I sure can git clone and build it manually, but there's quite a large difference between `bower install --save ...` and the `... && ... && ...` thing you've suggested. And I sure don't mean the number of keystrokes.\n. @gakimball Thank you - that's a good news. Waiting for the release.\n. ",
    "jcallery": "I'm interested in this, too. I can't seem to find an easy way to change the background color without creating custom CSS overrides.\n. I'm interested in this, too. I can't seem to find an easy way to change the background color without creating custom CSS overrides.\n. ",
    "austbot": ":+1: :+1: :+1: \nI just ran into this!\n. Amazing \nHere are my suggestions. And I'm willing to help a bit. Not too critical.\n- Angular Mocks\n. :+1: :+1: :+1: \nI just ran into this!\n. Amazing \nHere are my suggestions. And I'm willing to help a bit. Not too critical.\n- Angular Mocks\n. ",
    "bastienJS": "+1 and do not forget the timepicker for v6.0 ;-)\n. +1 and do not forget the timepicker for v6.0 ;-)\n. ",
    "manfrin": "This doesn't appear to have made it in to Foundation 6. +1ing the feature request. \n. This doesn't appear to have made it in to Foundation 6. +1ing the feature request. \n. ",
    "jimmypoms": "So I did some further investigating on the issue :)\n- There is no jQuery code related to panels.\n- If I remove jQuery it does work as expected \n\nI did strip my project from all dependencies in order to confirm.\nHere's the html i used to confirm the issue:\n\n``` html\n<!doctype html>\n<html class=\"no-js\" ng-app=\"app\">\n<head>\n<meta charset=\"utf-8\">\n<title>Project</title>\n<meta name=\"description\" content=\"Description\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\n<link rel=\"stylesheet\" href=\"../bower_components/foundation-apps/dist/css/foundation-apps.css\" />\n</head>\n<body>\n    <!--[if lt IE 9]>\n      <p class=\"browsehappy\">You are using an <strong>outdated</strong> browser. Please <a href=\"http://browsehappy.com/\">upgrade your browser</a> to improve your experience.</p>\n    <![endif]-->\n\n    <div class=\"grid-frame\">\n        <zf-panel id=\"sidebar\" class=\"medium-grid-block fast shrink vertical\" position=\"left\">\n            <div class=\"brand-area\">\n                <a class=\"hide-for-medium mobile-header-nav-btn-close\" zf-toggle=\"sidebar\" href=\"#\">\n                    <span class=\"nav-burger\"></span>\n                    <span class=\"nav-burger\"></span>\n                    <span class=\"nav-burger\"></span>\n                </a>\n            </div>\n            <div class=\"grid-content\"></div>\n        </zf-panel>\n\n        <zf-panel id=\"user-settings\" class=\"fast user-settings\" position=\"right\">\n            <div class=\"grid-block shrink\">\n                <a href=\"#\" class=\"user-settings-close\" zf-close=\"user-settings\">close</a>\n            </div>\n            <div class=\"grid-content\"></div>\n        </zf-panel>\n\n        <div class=\"grid-block collapse vertical\">\n            <div id=\"header\" class=\"collapse\" es-header>\n                <a href=\"#\" zf-toggle=\"user-settings\">\n                    <span>toggle</span>\n                </a>\n            </div>\n\n            <div class=\"grid-content vertical\" ng-class=\"['ui-animation']\" ui-view=\"\">\n            </div>\n        </div>\n    </div>\n\n    <script src=\"../bower_components/viewport-units-buggyfill/viewport-units-buggyfill.js\"></script>\n    <script src=\"../bower_components/viewport-units-buggyfill/viewport-units-buggyfill.hacks.js\"></script>\n    <script src=\"../bower_components/tether/tether.js\"></script>\n    <script src=\"../bower_components/fastclick/lib/fastclick.js\"></script>\n    <script src=\"../bower_components/angular/angular.js\"></script>\n    <script src=\"../bower_components/angular-ui-router/release/angular-ui-router.js\"></script>\n    <script src=\"../bower_components/angular-animate/angular-animate.js\"></script>\n    <script src=\"../bower_components/hammerjs/hammer.js\"></script>\n    <script src=\"../bower_components/foundation-apps/dist/js/foundation-apps.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/vendor/iconic.min.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/services/foundation.core.animation.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/services/foundation.core.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/services/foundation.dynamicRouting.animations.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/services/foundation.dynamicRouting.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/services/foundation.mediaquery.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/vendor/markdown.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/vendor/svgDirs.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/accordion/accordion.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/actionsheet/actionsheet.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/iconic/iconic.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/common/common.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/interchange/interchange.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/modal/modal.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/notification/notification.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/offcanvas/offcanvas.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/popup/popup.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/tabs/tabs.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/panel/panel.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/foundation.js\"></script>\n\n    <script src=\"app/app.module.js\"></script>\n</body>\n</html>\n```\n\nmy bower.json:\n\n``` json\n{\n  \"name\": \"unicorn\",\n  \"version\": \"0.0.0\",\n  \"dependencies\": {\n    \"foundation-apps\": \"~1.0.2\",\n    \"angular\": \"~1.3.4\"\n  },\n  \"devDependencies\": {}\n}\n```\n\nand finally my app.module.js\n\n``` javascript\n(function() {\n    'use strict';\n\n    angular.module('app', [\n            'foundation',\n        ]);\n\n})();\n```\n\nNow if I add jquery and include it before `angular.js`, the panel stops working correctly.\nNot working correctly means: \n- first open and close works\n- subsequent toggles animate opening the panel, hiding the panel after the animation has finished\n\nSomewhat related: CSSO also breaks the module, just FYI ;).\n\nRight now we can live with not including jQuery, it is however a bug worth investigating.\n. So I did some further investigating on the issue :)\n- There is no jQuery code related to panels.\n- If I remove jQuery it does work as expected \n\nI did strip my project from all dependencies in order to confirm.\nHere's the html i used to confirm the issue:\n\n``` html\n<!doctype html>\n<html class=\"no-js\" ng-app=\"app\">\n<head>\n<meta charset=\"utf-8\">\n<title>Project</title>\n<meta name=\"description\" content=\"Description\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\n<link rel=\"stylesheet\" href=\"../bower_components/foundation-apps/dist/css/foundation-apps.css\" />\n</head>\n<body>\n    <!--[if lt IE 9]>\n      <p class=\"browsehappy\">You are using an <strong>outdated</strong> browser. Please <a href=\"http://browsehappy.com/\">upgrade your browser</a> to improve your experience.</p>\n    <![endif]-->\n\n    <div class=\"grid-frame\">\n        <zf-panel id=\"sidebar\" class=\"medium-grid-block fast shrink vertical\" position=\"left\">\n            <div class=\"brand-area\">\n                <a class=\"hide-for-medium mobile-header-nav-btn-close\" zf-toggle=\"sidebar\" href=\"#\">\n                    <span class=\"nav-burger\"></span>\n                    <span class=\"nav-burger\"></span>\n                    <span class=\"nav-burger\"></span>\n                </a>\n            </div>\n            <div class=\"grid-content\"></div>\n        </zf-panel>\n\n        <zf-panel id=\"user-settings\" class=\"fast user-settings\" position=\"right\">\n            <div class=\"grid-block shrink\">\n                <a href=\"#\" class=\"user-settings-close\" zf-close=\"user-settings\">close</a>\n            </div>\n            <div class=\"grid-content\"></div>\n        </zf-panel>\n\n        <div class=\"grid-block collapse vertical\">\n            <div id=\"header\" class=\"collapse\" es-header>\n                <a href=\"#\" zf-toggle=\"user-settings\">\n                    <span>toggle</span>\n                </a>\n            </div>\n\n            <div class=\"grid-content vertical\" ng-class=\"['ui-animation']\" ui-view=\"\">\n            </div>\n        </div>\n    </div>\n\n    <script src=\"../bower_components/viewport-units-buggyfill/viewport-units-buggyfill.js\"></script>\n    <script src=\"../bower_components/viewport-units-buggyfill/viewport-units-buggyfill.hacks.js\"></script>\n    <script src=\"../bower_components/tether/tether.js\"></script>\n    <script src=\"../bower_components/fastclick/lib/fastclick.js\"></script>\n    <script src=\"../bower_components/angular/angular.js\"></script>\n    <script src=\"../bower_components/angular-ui-router/release/angular-ui-router.js\"></script>\n    <script src=\"../bower_components/angular-animate/angular-animate.js\"></script>\n    <script src=\"../bower_components/hammerjs/hammer.js\"></script>\n    <script src=\"../bower_components/foundation-apps/dist/js/foundation-apps.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/vendor/iconic.min.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/services/foundation.core.animation.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/services/foundation.core.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/services/foundation.dynamicRouting.animations.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/services/foundation.dynamicRouting.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/services/foundation.mediaquery.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/vendor/markdown.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/vendor/svgDirs.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/accordion/accordion.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/actionsheet/actionsheet.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/iconic/iconic.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/common/common.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/interchange/interchange.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/modal/modal.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/notification/notification.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/offcanvas/offcanvas.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/popup/popup.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/tabs/tabs.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/components/panel/panel.js\"></script>\n    <script src=\"../bower_components/foundation-apps/js/angular/foundation.js\"></script>\n\n    <script src=\"app/app.module.js\"></script>\n</body>\n</html>\n```\n\nmy bower.json:\n\n``` json\n{\n  \"name\": \"unicorn\",\n  \"version\": \"0.0.0\",\n  \"dependencies\": {\n    \"foundation-apps\": \"~1.0.2\",\n    \"angular\": \"~1.3.4\"\n  },\n  \"devDependencies\": {}\n}\n```\n\nand finally my app.module.js\n\n``` javascript\n(function() {\n    'use strict';\n\n    angular.module('app', [\n            'foundation',\n        ]);\n\n})();\n```\n\nNow if I add jquery and include it before `angular.js`, the panel stops working correctly.\nNot working correctly means: \n- first open and close works\n- subsequent toggles animate opening the panel, hiding the panel after the animation has finished\n\nSomewhat related: CSSO also breaks the module, just FYI ;).\n\nRight now we can live with not including jQuery, it is however a bug worth investigating.\n. ",
    "josteinhanssen": "Yeah, I'm having the same issue (button within a panel). I'm dependent jQuery, so this is a rather big issue for me. It seems to work fine in Firefox and IE though, but in Chrome (40.0.2214.115) and Vivaldi the issue remains. As escapedcat, I tried with a older version of jQuery (1.7.2), but the issue was the same (as far as I could tell).\n. Yeah, I'm having the same issue (button within a panel). I'm dependent jQuery, so this is a rather big issue for me. It seems to work fine in Firefox and IE though, but in Chrome (40.0.2214.115) and Vivaldi the issue remains. As escapedcat, I tried with a older version of jQuery (1.7.2), but the issue was the same (as far as I could tell).\n. ",
    "mannyhenri": "closing as this is an old request. Here is the code...\n\n```\n<div ng-repeat=\"servicesItem in servicesItems\">\n    <a zf-open=\"#{{$index}}\">\n      <div class=\"grid-content\">\n        <img src=\"http://cpanel.mannydesigns.co:3000/api/containers/container4/download/{{servicesItem.image}}\"\n             class=\"imgTeam\">\n      </div>\n      <div class=\"grid-content textBlock\">\n        <div class=\"grid-container\">\n          <h3>{{servicesItem.title}}</h3>\n\n          <p>{{servicesItem.details | limitTo: 125}}...(Plus d'info cliquez)</p>\n        </div>\n      </div>\n    </a>\n\n    <div zf-modal=\"\" id=\"#{{$index}}\">\n      <a zf-close=\"#{{$index}}\" class=\"close-button\">\u00d7</a>\n\n      <h3>{{servicesItem.title}}</h3>\n\n      <p>{{servicesItem.details}}</p>\n    </div>\n  </div>\n```\n. closing as this is an old request. Here is the code...\n\n```\n<div ng-repeat=\"servicesItem in servicesItems\">\n    <a zf-open=\"#{{$index}}\">\n      <div class=\"grid-content\">\n        <img src=\"http://cpanel.mannydesigns.co:3000/api/containers/container4/download/{{servicesItem.image}}\"\n             class=\"imgTeam\">\n      </div>\n      <div class=\"grid-content textBlock\">\n        <div class=\"grid-container\">\n          <h3>{{servicesItem.title}}</h3>\n\n          <p>{{servicesItem.details | limitTo: 125}}...(Plus d'info cliquez)</p>\n        </div>\n      </div>\n    </a>\n\n    <div zf-modal=\"\" id=\"#{{$index}}\">\n      <a zf-close=\"#{{$index}}\" class=\"close-button\">\u00d7</a>\n\n      <h3>{{servicesItem.title}}</h3>\n\n      <p>{{servicesItem.details}}</p>\n    </div>\n  </div>\n```\n. ",
    "kevinhorek": "@escapedcat Thanks so much! That fixed my issue.\n. @escapedcat Thanks so much! That fixed my issue.\n. ",
    "gabrielacosta": "I'm having this issue and the project was removed from codio. Could you please tell me how to fix it.\n. I checked the configuration in gulpfile.js\n\n// These files include Foundation for Apps and its dependencies\nvar foundationJS = [\n  'bower_components/fastclick/lib/fastclick.js',\n  'bower_components/viewport-units-buggyfill/viewport-units-buggyfill.js',\n  'bower_components/tether/tether.js',\n  'bower_components/angular/angular.js',\n  'bower_components/angular-animate/angular-animate.js',\n  'bower_components/ui-router/release/angular-ui-router.js',\n  'bower_components/angular-local-storage/dist/angular-local-storage.js',\n  'bower_components/foundation-apps/js/vendor/**/*.js',\n  'bower_components/foundation-apps/js/angular/**/*.js',\n  '!bower_components/foundation-apps/js/angular/app.js'\n];\n\nI compared with the code in https://github.com/Dillie-O/z4a-dotnet-scaffold-auth\n\ngulpfile.js\n\n// These files include Foundation for Apps and its dependencies\nvar foundationJS = [\n  'bower_components/fastclick/lib/fastclick.js',\n  'bower_components/viewport-units-buggyfill/viewport-units-buggyfill.js',\n  'bower_components/tether/tether.js',\n  'bower_components/angular/angular.js',\n  'bower_components/angular-animate/angular-animate.js',\n  'bower_components/ui-router/release/angular-ui-router.js',\n  'bower_components/angular-local-storage/dist/angular-local-storage.js',\n  'bower_components/foundation-apps/js/vendor/**/*.js',\n  'bower_components/foundation-apps/js/angular/**/*.js',\n  '!bower_components/foundation-apps/js/angular/app.js'\n];\n\nThey are the same and the second project works fine.\n\nCould you please take a look and give me some feedback.\n\nKind regards, \n\nJuan \n. I'm having this issue and the project was removed from codio. Could you please tell me how to fix it.\n. I checked the configuration in gulpfile.js\n\n// These files include Foundation for Apps and its dependencies\nvar foundationJS = [\n  'bower_components/fastclick/lib/fastclick.js',\n  'bower_components/viewport-units-buggyfill/viewport-units-buggyfill.js',\n  'bower_components/tether/tether.js',\n  'bower_components/angular/angular.js',\n  'bower_components/angular-animate/angular-animate.js',\n  'bower_components/ui-router/release/angular-ui-router.js',\n  'bower_components/angular-local-storage/dist/angular-local-storage.js',\n  'bower_components/foundation-apps/js/vendor/**/*.js',\n  'bower_components/foundation-apps/js/angular/**/*.js',\n  '!bower_components/foundation-apps/js/angular/app.js'\n];\n\nI compared with the code in https://github.com/Dillie-O/z4a-dotnet-scaffold-auth\n\ngulpfile.js\n\n// These files include Foundation for Apps and its dependencies\nvar foundationJS = [\n  'bower_components/fastclick/lib/fastclick.js',\n  'bower_components/viewport-units-buggyfill/viewport-units-buggyfill.js',\n  'bower_components/tether/tether.js',\n  'bower_components/angular/angular.js',\n  'bower_components/angular-animate/angular-animate.js',\n  'bower_components/ui-router/release/angular-ui-router.js',\n  'bower_components/angular-local-storage/dist/angular-local-storage.js',\n  'bower_components/foundation-apps/js/vendor/**/*.js',\n  'bower_components/foundation-apps/js/angular/**/*.js',\n  '!bower_components/foundation-apps/js/angular/app.js'\n];\n\nThey are the same and the second project works fine.\n\nCould you please take a look and give me some feedback.\n\nKind regards, \n\nJuan \n. ",
    "mikestecker": "I'm interested in this also. I have Foundation Apps integrated into a Rails project, and I would like to use all of the UI components but continue to use the Rails routing functionality and HAML templates, at least through initial development, after which I'll probably want to build out the Rails app's API and convert over to Angular for all front-end.\n. @gakimball great thanks. I'll wait for v1.1 today and see how I can modify the project to only use the UI components.\n. @gakimball I haven't seen the v1.1 update yet today but I did pull the latest from the repo. This on it's own still didn't work the way I want it to, but removing `$urlProvider.otherwise('/');` from the app.js file allowed me to click around (kind of). It would change the URL in the browser and I would have to reload my browser to load the new page.\n. I'm interested in this also. I have Foundation Apps integrated into a Rails project, and I would like to use all of the UI components but continue to use the Rails routing functionality and HAML templates, at least through initial development, after which I'll probably want to build out the Rails app's API and convert over to Angular for all front-end.\n. @gakimball great thanks. I'll wait for v1.1 today and see how I can modify the project to only use the UI components.\n. @gakimball I haven't seen the v1.1 update yet today but I did pull the latest from the repo. This on it's own still didn't work the way I want it to, but removing `$urlProvider.otherwise('/');` from the app.js file allowed me to click around (kind of). It would change the URL in the browser and I would have to reload my browser to load the new page.\n. ",
    "olegpolyakov": "I have disabled the dynamicRouting and dynamicRouting.animations modules and configured my own states with the animation property, but there are no animations. Any advice?\n. I have disabled the dynamicRouting and dynamicRouting.animations modules and configured my own states with the animation property, but there are no animations. Any advice?\n. ",
    "mearleycf": "I'm working through the Using Foundation For Apps tutorial on youtube. Here: https://www.youtube.com/watch?v=UmUE_-LE-0k\nBy Antonin Januska. I'm trying to duplicate what he's doing about 17m in. \n. Still can't get the actual URLs to write, but it isn't throwing errors : )\n. I was able to clone it manually, but once I clone it manually, and run npm install, bower install, and bundle, it's failing on bundle--no gemfile. \n. I'm working through the Using Foundation For Apps tutorial on youtube. Here: https://www.youtube.com/watch?v=UmUE_-LE-0k\nBy Antonin Januska. I'm trying to duplicate what he's doing about 17m in. \n. Still can't get the actual URLs to write, but it isn't throwing errors : )\n. I was able to clone it manually, but once I clone it manually, and run npm install, bower install, and bundle, it's failing on bundle--no gemfile. \n. ",
    "CAH-MikeEarley": "```\n(function() {\n  'use strict';\n\n  angular.module('application', [\n    'ui.router',\n    'ngAnimate',\n\n    //foundation\n    'foundation',\n    'foundation.dynamicRouting',\n    'foundation.dynamicRouting.animations'\n  ])\n    .config(config)\n    .run(run)\n    .controller('NavController', ['$scope','$state',function($scope,$state) {\n      $scope.current = $state.current.name;\n\n      var routes = angular.copy(foundationRoutes);\n\n      //setup autocomplete\n      $scope.routing = [];\n      $scope.typedText = '';\n\n      if(foundationRoutes) {\n        angular.forEach(routes, function(r) {\n          var title = r.title || r.name.replace('.', ' '); //use title if possible\n          $scope.routing.push(title);\n        });\n      }\n\n      $scope.selectRoute = function(routeName) {\n        var title = routeName;\n        var name = routeName.replace(' ', '.');\n\n        //search for route\n        angular.forEach(routes, function(r) {\n          if(r.title && r.title === routeName) {\n            $state.go(r.name);\n            return;\n          } else if (name === r.name) {\n            $state.go(r.name);\n            return;\n          }\n        });\n      }\n    }]);\n  ;\n\n  config.$inject = ['$urlRouterProvider', '$locationProvider'];\n\n  function config($urlProvider, $locationProvider) {\n    $urlProvider.otherwise('/');\n\n    $locationProvider.html5Mode({\n      enabled: false,\n      requireBase: false\n    });\n\n    $locationProvider.hashPrefix('!');\n  }\n\n\n  function run() {\n    FastClick.attach(document.body);\n  }\n\n})();\n```\n. ```\n(function() {\n  'use strict';\n\n  angular.module('application', [\n    'ui.router',\n    'ngAnimate',\n\n    //foundation\n    'foundation',\n    'foundation.dynamicRouting',\n    'foundation.dynamicRouting.animations'\n  ])\n    .config(config)\n    .run(run)\n    .controller('NavController', ['$scope','$state',function($scope,$state) {\n      $scope.current = $state.current.name;\n\n      var routes = angular.copy(foundationRoutes);\n\n      //setup autocomplete\n      $scope.routing = [];\n      $scope.typedText = '';\n\n      if(foundationRoutes) {\n        angular.forEach(routes, function(r) {\n          var title = r.title || r.name.replace('.', ' '); //use title if possible\n          $scope.routing.push(title);\n        });\n      }\n\n      $scope.selectRoute = function(routeName) {\n        var title = routeName;\n        var name = routeName.replace(' ', '.');\n\n        //search for route\n        angular.forEach(routes, function(r) {\n          if(r.title && r.title === routeName) {\n            $state.go(r.name);\n            return;\n          } else if (name === r.name) {\n            $state.go(r.name);\n            return;\n          }\n        });\n      }\n    }]);\n  ;\n\n  config.$inject = ['$urlRouterProvider', '$locationProvider'];\n\n  function config($urlProvider, $locationProvider) {\n    $urlProvider.otherwise('/');\n\n    $locationProvider.html5Mode({\n      enabled: false,\n      requireBase: false\n    });\n\n    $locationProvider.hashPrefix('!');\n  }\n\n\n  function run() {\n    FastClick.attach(document.body);\n  }\n\n})();\n```\n. ",
    "calmass": "Sorry, I should have been more specific:\n\nOS: Both Windows 7 and Windows 8.1,\non Mozilla Firefox 36, and Chrome 39.xxxxx, 40.xxxxxx\n. I don't know why I didn't see it earlier, but the .off-canvas class extends the only-extendable %off-canvas, which has it's overflow explicitly set:\n\n```\noverflow: scroll;\n```\n\nTherefore, in my foundation-overrides.scss I added a simple: \n\n```\n.off-canvas {\n    overflow: auto;\n}\n```\n\nThis removed the greyed-out scroll-bars and has the desired behavior (active scrolling) on a resized-to-smaller off-canvas container.   How come the \"overflow: scroll\" was chosen as a default?  Will this modification produce unexpected or odd behavior in a non-obvious way?  Thanks.\n. Sorry, I should have been more specific:\n\nOS: Both Windows 7 and Windows 8.1,\non Mozilla Firefox 36, and Chrome 39.xxxxx, 40.xxxxxx\n. I don't know why I didn't see it earlier, but the .off-canvas class extends the only-extendable %off-canvas, which has it's overflow explicitly set:\n\n```\noverflow: scroll;\n```\n\nTherefore, in my foundation-overrides.scss I added a simple: \n\n```\n.off-canvas {\n    overflow: auto;\n}\n```\n\nThis removed the greyed-out scroll-bars and has the desired behavior (active scrolling) on a resized-to-smaller off-canvas container.   How come the \"overflow: scroll\" was chosen as a default?  Will this modification produce unexpected or odd behavior in a non-obvious way?  Thanks.\n. ",
    "marnen": "Waitaminute...I had missed the `includePaths` option on node-sass. That might help.\n. Still leaving this open till I get a better answer or figure this out myself, though.\n. @gakimball I'll take a look at the `Gulpfile`; thanks. I've actually been thinking of a much simpler build process; does the following seem practical to you, or am I abusing foundation-apps if I try to shoehorn it in like this? (I hope I'm not being too long-winded; feel free to ignore or tell me to shut up. :) )\n\nBackground information:\n- ~~node-webkit~~ NW.js runs Node and a Webkit browser on a directory or zipfile of HTML/CSS/JS files.\n- I'm writing everything in Haml, Sass, and CoffeeScript.\n\nCurrent setup:\n- grunt-contrib-watch continuously watches `source` and compiles `source/*.[haml,scss,coffee]` to `build/*.[html,css,js]` (and I have a `grunt build` task to do the same thing in batch mode, in case I don't run the watcher).\n- The NW application loads content from the `build` directory when it runs.\n\nFoundation additions:\n- **Already implemented**: node-sass/grunt-sass uses option `includePaths: ['node_modules/foundation-apps/scss/']` so that `@import` statements from Foundation work pretty much as if the Sass files were in the local directory.\n- **Not implemented**: create `grunt dist` task that basically duplicates the `build` directory but then runs `npm install`. This would make `require('some-foundation-module')` work right in the compiled JS files, I think. Alternative idea: use Mincer or something to get Sprockets-like behavior in my CoffeeScript files. Hmm. Now that I write this, I realize that I don't know if Node `require` works on the Webkit side of NW.js, so I may _have_ to use Mincer.\n\nYou're right that I probably don't need Foundation's Angular front-matter routing, but I'm not sure. Actually, I wasn't necessarily going to use Angular at all for this project, but foundation-apps is the only decent preprocessed app CSS framework I was able to find. (I don't like Bootstrap's class naming conventions.)\n\nBTW, minification would be nice (but not essential); concatenation isn't an issue. I don't like to concatenate all my JavaScript or CSS into one file even for Web applications; I certainly see no need to do so for a desktop application.\n. Yeah, the CSS is the easy part. I guess I'll play around with the JS and see what works. \n\nI'm not sure anyone has much experience with things like NW; it's a fairly new niche and I think we're all making it up as we go along. \n. I certainly will! I've already offered my app as an example to the NW team of how I got Cucumber and Mocha.js working. Hopefully I'll have the patience to stick with this project... :)\n. Waitaminute...I had missed the `includePaths` option on node-sass. That might help.\n. Still leaving this open till I get a better answer or figure this out myself, though.\n. @gakimball I'll take a look at the `Gulpfile`; thanks. I've actually been thinking of a much simpler build process; does the following seem practical to you, or am I abusing foundation-apps if I try to shoehorn it in like this? (I hope I'm not being too long-winded; feel free to ignore or tell me to shut up. :) )\n\nBackground information:\n- ~~node-webkit~~ NW.js runs Node and a Webkit browser on a directory or zipfile of HTML/CSS/JS files.\n- I'm writing everything in Haml, Sass, and CoffeeScript.\n\nCurrent setup:\n- grunt-contrib-watch continuously watches `source` and compiles `source/*.[haml,scss,coffee]` to `build/*.[html,css,js]` (and I have a `grunt build` task to do the same thing in batch mode, in case I don't run the watcher).\n- The NW application loads content from the `build` directory when it runs.\n\nFoundation additions:\n- **Already implemented**: node-sass/grunt-sass uses option `includePaths: ['node_modules/foundation-apps/scss/']` so that `@import` statements from Foundation work pretty much as if the Sass files were in the local directory.\n- **Not implemented**: create `grunt dist` task that basically duplicates the `build` directory but then runs `npm install`. This would make `require('some-foundation-module')` work right in the compiled JS files, I think. Alternative idea: use Mincer or something to get Sprockets-like behavior in my CoffeeScript files. Hmm. Now that I write this, I realize that I don't know if Node `require` works on the Webkit side of NW.js, so I may _have_ to use Mincer.\n\nYou're right that I probably don't need Foundation's Angular front-matter routing, but I'm not sure. Actually, I wasn't necessarily going to use Angular at all for this project, but foundation-apps is the only decent preprocessed app CSS framework I was able to find. (I don't like Bootstrap's class naming conventions.)\n\nBTW, minification would be nice (but not essential); concatenation isn't an issue. I don't like to concatenate all my JavaScript or CSS into one file even for Web applications; I certainly see no need to do so for a desktop application.\n. Yeah, the CSS is the easy part. I guess I'll play around with the JS and see what works. \n\nI'm not sure anyone has much experience with things like NW; it's a fairly new niche and I think we're all making it up as we go along. \n. I certainly will! I've already offered my app as an example to the NW team of how I got Cucumber and Mocha.js working. Hopefully I'll have the patience to stick with this project... :)\n. ",
    "ruid0": "I test on HTC One m7 and XAOMI also on Nexus 5 the version of chrome is 40.\n. Problem was with ngTouch not with foundation.\nSorry!\n. I test on HTC One m7 and XAOMI also on Nexus 5 the version of chrome is 40.\n. Problem was with ngTouch not with foundation.\nSorry!\n. ",
    "unkmas": "@gakimball @escapedcat - same here. Canvas itself works great, but every interactive element on it - button, checkbox, switch, e.t.c. - works strange and slow - for example checkbox \"freezes\", and I need to touch it 6-7 times to check/uncheck it.\n\nLenovo P780, android 4.2\n. @gakimball @escapedcat - same here. Canvas itself works great, but every interactive element on it - button, checkbox, switch, e.t.c. - works strange and slow - for example checkbox \"freezes\", and I need to touch it 6-7 times to check/uncheck it.\n\nLenovo P780, android 4.2\n. ",
    "anik786": "Awesome. Please do. I think FA can be a really good project, but there's definitely a lot of improvements that can be made, and not forcing how the user uses FA I think is key! \n. Awesome. Please do. I think FA can be a really good project, but there's definitely a lot of improvements that can be made, and not forcing how the user uses FA I think is key! \n. ",
    "Joe-5mith": "Setting `overflow-y: hidden` on the `.menu-bar` class and `position: relative; left: 50%;` on the `.action-sheet-container` class did not work for me.\n\nThe following has worked (written in SASS):\n\n```\n.menu-bar {\n    overflow-x: visible;\n    .action-sheet-container {\n        display: block;\n    }\n}\n```\n. @bbcreatv, did you try using the SASS I wrote out in my previous comment above? That SASS has worked for me so far.\n. For example, I am using `ng-show` and I would like the elements to fade in and out (or slide in and slide out etc). I am thus using an approach similar to that described in issue [#414](https://github.com/zurb/foundation-apps/issues/414) by [jeanieshark](https://github.com/jeanieshark). In essence, I am overriding the angularjs-provided css classes: `.ng-hide-add` and `.ng-hide-remove`.\n\nI would like to use compass to describe the transition/animation. Examples of mixins I might use are:\n\n```\n@include transition-property(left);\n@include transition-duration(1s);\n@include transition-timing-function(ease)\n```\n\nI might also wish to style my pages using compass mixins  - do you think there is a better way or do you think this is a bad idea?\n. I'm happy using Autoprefixer for vendor prefixes but I do use many other Compass functions like Compass Sprites. Are you suggesting one should avoid Compass if possible, generally speaking, in your opinion?\n. Okay, I understand why you wouldn't post how to add Compass to FA then. I might do without it anyway.\n\nThanks for your quick replies.\n\nReferring to the example I gave above, it would be great if the Foundation for Apps Motion UI classes could be used with directives like `ng-show`.\n. After running those commands in the project folder, I get:\n\n```\nError: `libsass` bindings not found. Try reinstalling `node-sass`?\n    at getBinding (/.../my_project/node_modules/gulp-sass/node_modules/node-sass/lib/index.js:22:11)\n    at Object.<anonymous> (/.../my_project/node_modules/gulp-sass/node_modules/node-sass/lib/index.js:188:23)\n    at Module._compile (module.js:460:26)\n    at Object.Module._extensions..js (module.js:478:10)\n    at Module.load (module.js:355:32)\n    at Function.Module._load (module.js:310:12)\n    at Module.require (module.js:365:17)\n    at require (module.js:384:17)\n    at Object.<anonymous> (/.../my_project/node_modules/gulp-sass/index.js:3:17)\n    at Module._compile (module.js:460:26)\nError running task sequence: { task: 'sass',\n  message: 'sass catch',\n  duration: 0.012710486,\n  hrDuration: [ 0, 12710486 ],\n  err: [Error: `libsass` bindings not found. Try reinstalling `node-sass`?] }\n\n```\n. No errors on `npm install` or on `bower install`.\n. It seems from some node-sass forum posts that node-sass does not support older operating systems.\n\nHow can I compile with Ruby instead of libsass?\n\nAfter running the commands suggested, I got the same error as I listed in the original post of this issue.\n\nMy node version is: 0.12.0.\n. When I try that and I use `foundation-apps watch` in Terminal, I get the following error:\n\n```\n[17:06:35] Starting 'sass'...\n[17:06:35] 'sass' errored after 51 ms\n[17:06:35] TypeError: Arguments to path.join must be strings\n    at Object.posix.join (path.js:471:13)\n    at Object.module.exports (/.../my_project/node_modules/gulp-ruby-sass/index.js:65:15)\n    at Gulp.<anonymous> (/.../my_project/gulpfile.js:66:13)\n    at module.exports (/.../my_project/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:34:7)\n    at Gulp.Orchestrator._runTask (/.../my_project/node_modules/gulp/node_modules/orchestrator/index.js:273:3)\n    at Gulp.Orchestrator._runStep (/.../my_project/node_modules/gulp/node_modules/orchestrator/index.js:214:10)\n    at /.../my_project/node_modules/gulp/node_modules/orchestrator/index.js:279:18\n    at finish (/.../my_project/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:21:8)\n    at cb (/.../my_project/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:29:3)\n    at Gulp.<anonymous> (/.../my_project/gulpfile.js:133:3)\nError running task sequence: { task: 'sass',\n  message: 'sass catch',\n  duration: 0.050536951,\n  hrDuration: [ 0, 50536951 ],\n  err: [TypeError: Arguments to path.join must be strings] }\nSuccessfully built.\n\n```\n\nI used `npm install gulp-ruby-sass`.\n. New syntax was introduced for gulp-ruby-sass 1.x. This looks like it might be working:\n\n```\ngulp.task('sass', function() {\n    return $.rubySass('client/assets/scss/app.scss', {\n            loadPath: paths.sass,\n            style: 'nested'\n        })\n        .pipe($.autoprefixer({\n             browsers: ['last 2 versions', 'ie 10']\n        }))\n        .pipe(gulp.dest('./build/assets/css/'));\n});\n```\n\nI'll post back with results.\n. Excuse me for the delay. Yes, the above steps work. Thank you for your rapid responses.\n\nFor those who use haven't used the older version of Foundation for Apps, here are the two Gemfiles that I placed in the root folder of my  Foundation for apps project and the final gulpfile.js code:\n\nThe `Gemfile.lock` file:\n\n```\nGEM\n  remote: https://rubygems.org/\n  specs:\n    sass (3.4.9)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  sass (~> 3.4.0)\n```\n\nThe `Gemfile` file:\n\n```\nsource \"https://rubygems.org\"\n\ngem \"sass\", \"~> 3.4.0\"\n\n```\n\nThe final code in `gulpfile.js` was:\n\n```\ngulp.task('sass', function() {\n    return $.rubySass('client/assets/scss/app.scss', {\n            loadPath: paths.sass,\n            style: 'nested',\n            bundleExec: true\n        })\n        .pipe($.autoprefixer({\n             browsers: ['last 2 versions', 'ie 10']\n        }))\n        .pipe(gulp.dest('./build/assets/css/'));\n});\n```\n. No, I don't want the panel to be open as long as the vehicles state is active. Hopefully, the following explanation of what is not working for me will be clearer.\n\nThe state is defined like this:\n\n```\n$stateProvider.state('vehicles', {\n    url: '/vehicles/{vehicleType}',\n    templateUrl: 'templates/dev/vehicles.html'\n});\n```\n\nWhen I go to `http://localhost:8080/#!/vehicles/cars` I see the block list:\n\n```\n<div class=\"grid-content\">\n    <div class=\"block-list\">\n        <ul>\n            <li><a zf-open=\"detail-panel\" ui-sref=\"vehicles({vehicleType:'cars'})\">Cars</a></li>\n            <li> <a zf-open=\"detail-panel\" ui-sref=\"vehicles({vehicleType:'bikes'})\">Bikes</a></li>\n        </ul>\n    </div>\n</div>\n```\n\nThis is what I want to see.\n\nThen, when I click on the `<a zf-open=\"detail-panel\" ui-sref=\"vehicles({vehicleType:'bikes'})\">Bikes</a>` link, I want the panel to open up and show the word `<h3>Bikes</h3>`.\n\nHowever, `ui-sref=\"vehicles({vehicleType:'bikes'})\"` appears to conflict with `zf-open=\"detail-panel\"` and the panel does not open until the `<a zf-open=\"detail-panel\" ui-sref=\"vehicles({vehicleType:'bikes'})\">Bikes</a>` link is clicked twice.\n. Is there a workaround for this - I see the post has been labelled as a 'feature' request?\n. Thanks @soumak77. The ModalFactory does indeed take care of a lot of it.\n\nHowever, take the example of a modal that contains a lot of controller logic, such as a modal with a web form. I wish to reuse that modal form. Using ModalFactory, I can write the template html once and reuse it as many times as I like. However, each time I want to use the modal on a state, I would have to rewrite all the controller javascript. Is that right? Is there a way around that?\n\nAlso, how does one set the class size of the modal like `tiny`, `large` etc?\n. Thanks for the quick reply - I'll look the idea of a service that produces a ModalFactory and post back.\n. I still find a major flaw with this approach (although there are messy workarounds). The basic issue is that one cannot access the scope variables for the modal template in the factory. So there should be an option to include a controller for the template like: \n\n```\n$scope.foo = \"Bloop!\";\n$scope.bar = \"Blee!\";\nvar config = {\n    id: 'your optional id here',\n    templateUrl: 'path/to/template',\n    controller: 'path/to/controller',      // <-- this is needed\n    controllerAs: 'modalCtrl',             // <-- this is needed\n    contentScope: {\n        foo: $scope.foo,\n        bar: $scope.bar\n    },\n    animationIn: 'slideInFromTop'\n}\n$scope.modal = new ModalFactory(config);\n```\n\nThe need for a controller here is the same as the need for a controller anywhere.\n\nHaving said that, I have found the functionality of `ModalFactory` that does exist good so far.\n. Setting `overflow-y: hidden` on the `.menu-bar` class and `position: relative; left: 50%;` on the `.action-sheet-container` class did not work for me.\n\nThe following has worked (written in SASS):\n\n```\n.menu-bar {\n    overflow-x: visible;\n    .action-sheet-container {\n        display: block;\n    }\n}\n```\n. @bbcreatv, did you try using the SASS I wrote out in my previous comment above? That SASS has worked for me so far.\n. For example, I am using `ng-show` and I would like the elements to fade in and out (or slide in and slide out etc). I am thus using an approach similar to that described in issue [#414](https://github.com/zurb/foundation-apps/issues/414) by [jeanieshark](https://github.com/jeanieshark). In essence, I am overriding the angularjs-provided css classes: `.ng-hide-add` and `.ng-hide-remove`.\n\nI would like to use compass to describe the transition/animation. Examples of mixins I might use are:\n\n```\n@include transition-property(left);\n@include transition-duration(1s);\n@include transition-timing-function(ease)\n```\n\nI might also wish to style my pages using compass mixins  - do you think there is a better way or do you think this is a bad idea?\n. I'm happy using Autoprefixer for vendor prefixes but I do use many other Compass functions like Compass Sprites. Are you suggesting one should avoid Compass if possible, generally speaking, in your opinion?\n. Okay, I understand why you wouldn't post how to add Compass to FA then. I might do without it anyway.\n\nThanks for your quick replies.\n\nReferring to the example I gave above, it would be great if the Foundation for Apps Motion UI classes could be used with directives like `ng-show`.\n. After running those commands in the project folder, I get:\n\n```\nError: `libsass` bindings not found. Try reinstalling `node-sass`?\n    at getBinding (/.../my_project/node_modules/gulp-sass/node_modules/node-sass/lib/index.js:22:11)\n    at Object.<anonymous> (/.../my_project/node_modules/gulp-sass/node_modules/node-sass/lib/index.js:188:23)\n    at Module._compile (module.js:460:26)\n    at Object.Module._extensions..js (module.js:478:10)\n    at Module.load (module.js:355:32)\n    at Function.Module._load (module.js:310:12)\n    at Module.require (module.js:365:17)\n    at require (module.js:384:17)\n    at Object.<anonymous> (/.../my_project/node_modules/gulp-sass/index.js:3:17)\n    at Module._compile (module.js:460:26)\nError running task sequence: { task: 'sass',\n  message: 'sass catch',\n  duration: 0.012710486,\n  hrDuration: [ 0, 12710486 ],\n  err: [Error: `libsass` bindings not found. Try reinstalling `node-sass`?] }\n\n```\n. No errors on `npm install` or on `bower install`.\n. It seems from some node-sass forum posts that node-sass does not support older operating systems.\n\nHow can I compile with Ruby instead of libsass?\n\nAfter running the commands suggested, I got the same error as I listed in the original post of this issue.\n\nMy node version is: 0.12.0.\n. When I try that and I use `foundation-apps watch` in Terminal, I get the following error:\n\n```\n[17:06:35] Starting 'sass'...\n[17:06:35] 'sass' errored after 51 ms\n[17:06:35] TypeError: Arguments to path.join must be strings\n    at Object.posix.join (path.js:471:13)\n    at Object.module.exports (/.../my_project/node_modules/gulp-ruby-sass/index.js:65:15)\n    at Gulp.<anonymous> (/.../my_project/gulpfile.js:66:13)\n    at module.exports (/.../my_project/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:34:7)\n    at Gulp.Orchestrator._runTask (/.../my_project/node_modules/gulp/node_modules/orchestrator/index.js:273:3)\n    at Gulp.Orchestrator._runStep (/.../my_project/node_modules/gulp/node_modules/orchestrator/index.js:214:10)\n    at /.../my_project/node_modules/gulp/node_modules/orchestrator/index.js:279:18\n    at finish (/.../my_project/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:21:8)\n    at cb (/.../my_project/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:29:3)\n    at Gulp.<anonymous> (/.../my_project/gulpfile.js:133:3)\nError running task sequence: { task: 'sass',\n  message: 'sass catch',\n  duration: 0.050536951,\n  hrDuration: [ 0, 50536951 ],\n  err: [TypeError: Arguments to path.join must be strings] }\nSuccessfully built.\n\n```\n\nI used `npm install gulp-ruby-sass`.\n. New syntax was introduced for gulp-ruby-sass 1.x. This looks like it might be working:\n\n```\ngulp.task('sass', function() {\n    return $.rubySass('client/assets/scss/app.scss', {\n            loadPath: paths.sass,\n            style: 'nested'\n        })\n        .pipe($.autoprefixer({\n             browsers: ['last 2 versions', 'ie 10']\n        }))\n        .pipe(gulp.dest('./build/assets/css/'));\n});\n```\n\nI'll post back with results.\n. Excuse me for the delay. Yes, the above steps work. Thank you for your rapid responses.\n\nFor those who use haven't used the older version of Foundation for Apps, here are the two Gemfiles that I placed in the root folder of my  Foundation for apps project and the final gulpfile.js code:\n\nThe `Gemfile.lock` file:\n\n```\nGEM\n  remote: https://rubygems.org/\n  specs:\n    sass (3.4.9)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  sass (~> 3.4.0)\n```\n\nThe `Gemfile` file:\n\n```\nsource \"https://rubygems.org\"\n\ngem \"sass\", \"~> 3.4.0\"\n\n```\n\nThe final code in `gulpfile.js` was:\n\n```\ngulp.task('sass', function() {\n    return $.rubySass('client/assets/scss/app.scss', {\n            loadPath: paths.sass,\n            style: 'nested',\n            bundleExec: true\n        })\n        .pipe($.autoprefixer({\n             browsers: ['last 2 versions', 'ie 10']\n        }))\n        .pipe(gulp.dest('./build/assets/css/'));\n});\n```\n. No, I don't want the panel to be open as long as the vehicles state is active. Hopefully, the following explanation of what is not working for me will be clearer.\n\nThe state is defined like this:\n\n```\n$stateProvider.state('vehicles', {\n    url: '/vehicles/{vehicleType}',\n    templateUrl: 'templates/dev/vehicles.html'\n});\n```\n\nWhen I go to `http://localhost:8080/#!/vehicles/cars` I see the block list:\n\n```\n<div class=\"grid-content\">\n    <div class=\"block-list\">\n        <ul>\n            <li><a zf-open=\"detail-panel\" ui-sref=\"vehicles({vehicleType:'cars'})\">Cars</a></li>\n            <li> <a zf-open=\"detail-panel\" ui-sref=\"vehicles({vehicleType:'bikes'})\">Bikes</a></li>\n        </ul>\n    </div>\n</div>\n```\n\nThis is what I want to see.\n\nThen, when I click on the `<a zf-open=\"detail-panel\" ui-sref=\"vehicles({vehicleType:'bikes'})\">Bikes</a>` link, I want the panel to open up and show the word `<h3>Bikes</h3>`.\n\nHowever, `ui-sref=\"vehicles({vehicleType:'bikes'})\"` appears to conflict with `zf-open=\"detail-panel\"` and the panel does not open until the `<a zf-open=\"detail-panel\" ui-sref=\"vehicles({vehicleType:'bikes'})\">Bikes</a>` link is clicked twice.\n. Is there a workaround for this - I see the post has been labelled as a 'feature' request?\n. Thanks @soumak77. The ModalFactory does indeed take care of a lot of it.\n\nHowever, take the example of a modal that contains a lot of controller logic, such as a modal with a web form. I wish to reuse that modal form. Using ModalFactory, I can write the template html once and reuse it as many times as I like. However, each time I want to use the modal on a state, I would have to rewrite all the controller javascript. Is that right? Is there a way around that?\n\nAlso, how does one set the class size of the modal like `tiny`, `large` etc?\n. Thanks for the quick reply - I'll look the idea of a service that produces a ModalFactory and post back.\n. I still find a major flaw with this approach (although there are messy workarounds). The basic issue is that one cannot access the scope variables for the modal template in the factory. So there should be an option to include a controller for the template like: \n\n```\n$scope.foo = \"Bloop!\";\n$scope.bar = \"Blee!\";\nvar config = {\n    id: 'your optional id here',\n    templateUrl: 'path/to/template',\n    controller: 'path/to/controller',      // <-- this is needed\n    controllerAs: 'modalCtrl',             // <-- this is needed\n    contentScope: {\n        foo: $scope.foo,\n        bar: $scope.bar\n    },\n    animationIn: 'slideInFromTop'\n}\n$scope.modal = new ModalFactory(config);\n```\n\nThe need for a controller here is the same as the need for a controller anywhere.\n\nHaving said that, I have found the functionality of `ModalFactory` that does exist good so far.\n. ",
    "bbcreatv": "I have tried this but it doesnt work me also. Anyone have any idea what to do?\n. I actually figured it after. I had to set overflow-x and y visible on my grid-block as well as the menu :)\n. I have tried this but it doesnt work me also. Anyone have any idea what to do?\n. I actually figured it after. I had to set overflow-x and y visible on my grid-block as well as the menu :)\n. ",
    "lucafabbri": "Hi,\n\nSass above works well.\nI've figured out that using an icon within the anchor makes toggle trigger twice, so that action sheet open and close immediatelly.\n. Hi,\n\nSass above works well.\nI've figured out that using an icon within the anchor makes toggle trigger twice, so that action sheet open and close immediatelly.\n. ",
    "gohandrogo": "![screen shot 2015-03-12 at 4 56 18 pm](https://cloud.githubusercontent.com/assets/10235887/6628111/43e3db60-c8d9-11e4-87b2-a269fa268293.png)\n\nthis is a feed i am working on for an app. I have nested the card component inside an ng-repeat which prints each post as a card. at the bottom of the card I have nested a modal so i can show the information in more detail. \n![screen shot 2015-03-12 at 4 58 19 pm](https://cloud.githubusercontent.com/assets/10235887/6628113/465752c8-c8d9-11e4-8985-58d9b13cd7ff.png)\nthis is the index file that includes the ui-view where all of my routes show up. this is where i placed the off canvas menu. \n\n![screen shot 2015-03-07 at 10 50 05 pm](https://cloud.githubusercontent.com/assets/10235887/6628312/bf5845e6-c8da-11e4-827e-8dc9c050ba11.png)\n\nhere is a rendering of the user profile area of the site. I have the offcanvas menu open and you can see one of the posts that uses the card component and the option to use open the model by clicking on the icon in the lower left corner. \n\nMY ISSUE\n\nI found that when I navigated the off canvas menu from the feed to the user profile page, the modals work. but when I navigate back to the feed, the reveal modals stop working. i receive an error \n\n\"Uncaught TypeError: Cannot read property '$$phase' of null\" (foundation.js line 29)\n\nThe same thing occurs when I navigate from the user profile page and back again If I navigate to any other area of the website actually, I get the same error. I am unsure is this is something that i have missed in my own code or if its an issue with F4A. \n\nI am referencing javascript objects that contains the fake data that you see. Could it be an issue with the way I am referencing my objects? \n\n![screen shot 2015-03-12 at 5 23 52 pm](https://cloud.githubusercontent.com/assets/10235887/6628528/a7258ff4-c8dc-11e4-8faa-a817e81de382.png)\n\nhere is the code i have added to the app js file. its just a few controllers and the javascript objects i created to emulate a database. \n\nI hope i was more clear. if there is some way I can provide more resources i would be happy to do so as this issue is a big problem in my app development. \n. it happens when the event is a click. when i click to open a modal I recieve that error. \n\nI am about to pull from the most recent commit. \n. I followed the instructions on the read me file and installed the app in a different folder, however I think can't tell if I am pulling from the correct branch or not. I also tried cloning the repo but had trouble installing it. I think i need further instruction to make sure I am correctly pulling from the master repo. please excuse my ignorance. \n. Fantastic! my issue was resolved! should I just stay on the master branch from now on?\n. I look forward to v1.1!  \n. ![screen shot 2015-03-12 at 4 56 18 pm](https://cloud.githubusercontent.com/assets/10235887/6628111/43e3db60-c8d9-11e4-87b2-a269fa268293.png)\n\nthis is a feed i am working on for an app. I have nested the card component inside an ng-repeat which prints each post as a card. at the bottom of the card I have nested a modal so i can show the information in more detail. \n![screen shot 2015-03-12 at 4 58 19 pm](https://cloud.githubusercontent.com/assets/10235887/6628113/465752c8-c8d9-11e4-8985-58d9b13cd7ff.png)\nthis is the index file that includes the ui-view where all of my routes show up. this is where i placed the off canvas menu. \n\n![screen shot 2015-03-07 at 10 50 05 pm](https://cloud.githubusercontent.com/assets/10235887/6628312/bf5845e6-c8da-11e4-827e-8dc9c050ba11.png)\n\nhere is a rendering of the user profile area of the site. I have the offcanvas menu open and you can see one of the posts that uses the card component and the option to use open the model by clicking on the icon in the lower left corner. \n\nMY ISSUE\n\nI found that when I navigated the off canvas menu from the feed to the user profile page, the modals work. but when I navigate back to the feed, the reveal modals stop working. i receive an error \n\n\"Uncaught TypeError: Cannot read property '$$phase' of null\" (foundation.js line 29)\n\nThe same thing occurs when I navigate from the user profile page and back again If I navigate to any other area of the website actually, I get the same error. I am unsure is this is something that i have missed in my own code or if its an issue with F4A. \n\nI am referencing javascript objects that contains the fake data that you see. Could it be an issue with the way I am referencing my objects? \n\n![screen shot 2015-03-12 at 5 23 52 pm](https://cloud.githubusercontent.com/assets/10235887/6628528/a7258ff4-c8dc-11e4-8faa-a817e81de382.png)\n\nhere is the code i have added to the app js file. its just a few controllers and the javascript objects i created to emulate a database. \n\nI hope i was more clear. if there is some way I can provide more resources i would be happy to do so as this issue is a big problem in my app development. \n. it happens when the event is a click. when i click to open a modal I recieve that error. \n\nI am about to pull from the most recent commit. \n. I followed the instructions on the read me file and installed the app in a different folder, however I think can't tell if I am pulling from the correct branch or not. I also tried cloning the repo but had trouble installing it. I think i need further instruction to make sure I am correctly pulling from the master repo. please excuse my ignorance. \n. Fantastic! my issue was resolved! should I just stay on the master branch from now on?\n. I look forward to v1.1!  \n. ",
    "gusbicalho": "Sorry, I'm working on the stable release. I had not seen that #472 report.\n. Sorry, I'm working on the stable release. I had not seen that #472 report.\n. ",
    "aga-glabala": "Hi, \nthat's good news :) For now, I pulled newest master and that fixed my issue! Thank you :)\n. Hi, \nthat's good news :) For now, I pulled newest master and that fixed my issue! Thank you :)\n. ",
    "Globegitter": "Thank you - very much appreciated.\n. Since this will probably be fixed with the next libsass release, closing here.\n. Thanks for the clarification @gakimball and that is great news! Keep up the good work :)\n. Thank you - very much appreciated.\n. Since this will probably be fixed with the next libsass release, closing here.\n. Thanks for the clarification @gakimball and that is great news! Keep up the good work :)\n. ",
    "leptest": "This might not be related, but there aren't many foundation-app specific resources on this topic.\n\nI was having a similar problem with all the components, turns out I was missing a link to the compiled templates.js file.\n\n`<script src=\"/assets/js/templates.js\"></script>`\n. This might not be related, but there aren't many foundation-app specific resources on this topic.\n\nI was having a similar problem with all the components, turns out I was missing a link to the compiled templates.js file.\n\n`<script src=\"/assets/js/templates.js\"></script>`\n. ",
    "falldowngoboone": "Including the templates.js file in index.html got rid of the error for me.\n. Including the templates.js file in index.html got rid of the error for me.\n. ",
    "mattfili": "+1 Template for directive 'zfPanel' must have exactly one root element.\n\nI didn't compile the templates.js file because I bootstrapped the app and compiled with Grunt, but even including the foundation-apps-templates.js and foundation-apps.js didn't fix anything.\n. +1 Template for directive 'zfPanel' must have exactly one root element.\n\nI didn't compile the templates.js file because I bootstrapped the app and compiled with Grunt, but even including the foundation-apps-templates.js and foundation-apps.js didn't fix anything.\n. ",
    "fortuneteller": "If you encounter this problem, make sure you have a correct order of foundation scripts on your page:\n\n``` html\n<script type=\"text/javascript\" src=\"path/to/foundations/apps/dist/js/foundation-apps.js\"></script>\n<script type=\"text/javascript\" src=\"path/to/foundations/apps/js/angular/foundation.js\"></script>\n<script type=\"text/javascript\" src=\"path/to/foundations/apps/js/angular/foundation-apps-templates.js\"></script>\n```\n. Thank you very much.\n\nThis is exaclty what I need.\n\n2016-02-20 23:03 GMT+03:00 Rickert Mulder notifications@github.com:\n\n> Try: https://www.npmjs.com/package/gulp-autoprefixer\n> \n> On Sat, 20 Feb 2016, 8:22 p.m. Andrey Konstantinov <\n> notifications@github.com>\n> wrote:\n> \n> > Please, help me to understand one thing. Only in case you have time for\n> > it.\n> > \n> > The page http://foundation.zurb.com/apps/docs/#!/off-canvas works\n> > perfect\n> > on all my mobile devices.\n> > But when I check out the latest foundation for apps version I have broken\n> > layout (on some mobile browsers) and widgets because of missing of\n> > vendor-prefixed css rules like:\n> > -webkit-transform: translateX(-100%);\n> > \n> > [image: _067]\n> > <\n> > https://cloud.githubusercontent.com/assets/1685654/13198335/2bbfb6dc-d817-11e5-9f94-eb132c5a761c.png\n> > \n> > What should I do - manually extend your scss files and use them, or wait\n> > until you will publish the same version as used for\n> > http://foundation.zurb.com/apps/docs/.\n> > \n> > Thanks in advance.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/zurb/foundation-apps/issues/779.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/779#issuecomment-186674878\n> .\n\n## \n\n\u0410\u043d\u0434\u0440\u0435\u0439\n\u0442\u0435\u043b.: +7 906 7649153\n. Thank you. I haven't mention it.\n\n2016-02-23 11:29 GMT+03:00 Salem Ouerdani notifications@github.com:\n\n> @fortuneteller https://github.com/fortuneteller You don't have to\n> install it. it is already installed. or maybe you just need to upgrade it.\n> see this :\n> https://github.com/zurb/foundation-apps/blob/master/package.json#L30\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/779#issuecomment-187600379\n> .\n\n## \n\n\u0410\u043d\u0434\u0440\u0435\u0439\n\u0442\u0435\u043b.: +7 906 7649153\n. If you encounter this problem, make sure you have a correct order of foundation scripts on your page:\n\n``` html\n<script type=\"text/javascript\" src=\"path/to/foundations/apps/dist/js/foundation-apps.js\"></script>\n<script type=\"text/javascript\" src=\"path/to/foundations/apps/js/angular/foundation.js\"></script>\n<script type=\"text/javascript\" src=\"path/to/foundations/apps/js/angular/foundation-apps-templates.js\"></script>\n```\n. Thank you very much.\n\nThis is exaclty what I need.\n\n2016-02-20 23:03 GMT+03:00 Rickert Mulder notifications@github.com:\n\n> Try: https://www.npmjs.com/package/gulp-autoprefixer\n> \n> On Sat, 20 Feb 2016, 8:22 p.m. Andrey Konstantinov <\n> notifications@github.com>\n> wrote:\n> \n> > Please, help me to understand one thing. Only in case you have time for\n> > it.\n> > \n> > The page http://foundation.zurb.com/apps/docs/#!/off-canvas works\n> > perfect\n> > on all my mobile devices.\n> > But when I check out the latest foundation for apps version I have broken\n> > layout (on some mobile browsers) and widgets because of missing of\n> > vendor-prefixed css rules like:\n> > -webkit-transform: translateX(-100%);\n> > \n> > [image: _067]\n> > <\n> > https://cloud.githubusercontent.com/assets/1685654/13198335/2bbfb6dc-d817-11e5-9f94-eb132c5a761c.png\n> > \n> > What should I do - manually extend your scss files and use them, or wait\n> > until you will publish the same version as used for\n> > http://foundation.zurb.com/apps/docs/.\n> > \n> > Thanks in advance.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/zurb/foundation-apps/issues/779.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/779#issuecomment-186674878\n> .\n\n## \n\n\u0410\u043d\u0434\u0440\u0435\u0439\n\u0442\u0435\u043b.: +7 906 7649153\n. Thank you. I haven't mention it.\n\n2016-02-23 11:29 GMT+03:00 Salem Ouerdani notifications@github.com:\n\n> @fortuneteller https://github.com/fortuneteller You don't have to\n> install it. it is already installed. or maybe you just need to upgrade it.\n> see this :\n> https://github.com/zurb/foundation-apps/blob/master/package.json#L30\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/779#issuecomment-187600379\n> .\n\n## \n\n\u0410\u043d\u0434\u0440\u0435\u0439\n\u0442\u0435\u043b.: +7 906 7649153\n. ",
    "pilapila": "inside your directive's templateUrl you should use `<div></div>` instead of something like this \r\n```\r\n<p>...</p>\r\n<div>...</div>\r\n<div</div>\r\n```\r\njust this... :). inside your directive's templateUrl you should use `<div></div>` instead of something like this \r\n```\r\n<p>...</p>\r\n<div>...</div>\r\n<div</div>\r\n```\r\njust this... :). ",
    "localnerve": "Excellent. Thank you. I noticed you did not update the package semver. Any idea when this update will be available via npm?\n. Excellent. Thank you. I noticed you did not update the package semver. Any idea when this update will be available via npm?\n. ",
    "rvanhoepen": "I thought this behavior was odd, so I assumed the error must be on my side. I had node v0.10 installed and an older npm as well, I updated both. node is now at v0.12.0 and npm is also at latest, reinstalled foundation for apps, made a new project. Had a couple of packages that didn't install, installed them manually again and now everything is working perfectly.\n\nIf you experience an error like this I recommend you check your installation.\n\nMy goal was to see if the error can be reproduced, but since I couldn't reproduce it I will close this\nissue and reopen if it bugs out on me again.\n. The problem was that I commented out templates.js in the index file because I assumed at first that it was part of the whole dynamic routing system. This is in fact the javascript file that houses all the templates generated from the directives.\n. I thought this behavior was odd, so I assumed the error must be on my side. I had node v0.10 installed and an older npm as well, I updated both. node is now at v0.12.0 and npm is also at latest, reinstalled foundation for apps, made a new project. Had a couple of packages that didn't install, installed them manually again and now everything is working perfectly.\n\nIf you experience an error like this I recommend you check your installation.\n\nMy goal was to see if the error can be reproduced, but since I couldn't reproduce it I will close this\nissue and reopen if it bugs out on me again.\n. The problem was that I commented out templates.js in the index file because I assumed at first that it was part of the whole dynamic routing system. This is in fact the javascript file that houses all the templates generated from the directives.\n. ",
    "heppy83": "I'm still experiencing this problem both with panels and modals.\nMore precisely, if I have a panel (or modal) with a button inside, when I:\n1. open the panel (with zf-open directive or using the FoudationApi methods )\n2. close the panel - with zf-close directive or with a custom close link (using the FoudationApi methods)\n3. reopen the panel \n4. hover the button inside the panel\n\nAt this point (i.e., as soon as I hover the button), the panel disappears (is closed with no animation), and cannot be reopened even triggering the open button used to open it the first time.\n\nI see this issue is closed and issue #598 references to this issue, but still I have this problem.\n\nIs there a a workaround for this? Or perhaps are you currently working on it and it is expected to be fixed in next releases?\n\nIMPORTANT NOTE: I DO see the problems on Chrome ( 45.0.2454.101) and NOT on Firefox (41.0.2).\n. Hi,\nI want to let you know that this issue is still happening.\nI posted a comment in #547 but no reply yet.\n\nIt would be wonderful if could suggest a solution for this, since it's impossible to use the framework with this happening systematically.\n\nThank you very much!\n. I still get the same error with a publish for show/hide/toggle a POPUP.\n\nAlso tried to update to version 1.2.0 but it did not solve the issue.\nImpossible to programmatically manage a Popup.\n\nThe fix to wrap in a $timeout did not work for me. I don't get the error anymore, but the publish doesn't have any effect (nothing gets opened/closed)\n. I'm still experiencing this problem both with panels and modals.\nMore precisely, if I have a panel (or modal) with a button inside, when I:\n1. open the panel (with zf-open directive or using the FoudationApi methods )\n2. close the panel - with zf-close directive or with a custom close link (using the FoudationApi methods)\n3. reopen the panel \n4. hover the button inside the panel\n\nAt this point (i.e., as soon as I hover the button), the panel disappears (is closed with no animation), and cannot be reopened even triggering the open button used to open it the first time.\n\nI see this issue is closed and issue #598 references to this issue, but still I have this problem.\n\nIs there a a workaround for this? Or perhaps are you currently working on it and it is expected to be fixed in next releases?\n\nIMPORTANT NOTE: I DO see the problems on Chrome ( 45.0.2454.101) and NOT on Firefox (41.0.2).\n. Hi,\nI want to let you know that this issue is still happening.\nI posted a comment in #547 but no reply yet.\n\nIt would be wonderful if could suggest a solution for this, since it's impossible to use the framework with this happening systematically.\n\nThank you very much!\n. I still get the same error with a publish for show/hide/toggle a POPUP.\n\nAlso tried to update to version 1.2.0 but it did not solve the issue.\nImpossible to programmatically manage a Popup.\n\nThe fix to wrap in a $timeout did not work for me. I don't get the error anymore, but the publish doesn't have any effect (nothing gets opened/closed)\n. ",
    "DAmatheson": "I've just run into what I think is this issue myself. \n\nThis root cause of the issue seen [here at lines 158-159](https://github.com/zurb/foundation-apps/blob/master/js/angular/components/panel/panel.js#L158-L159) in `panel.js`.\n\nIn my case, it is caused by `FoundationAnimation.animate`'s `run()` being called twice. This means the `animationTimeout` for the first run isn't cancelled by `eventHandler()` when it finishes. \n\nThe first call is coming from `scope.hide` in the `postlink` of `zfPanel`. The second call is coming from `element.on('click' ...)` which is also the original caller to `scope.hide`. As both `scope.hide` and `element.on` call animate, you get two animations running and the second one overrides the `animationTimeout` token for the first one which means the first one can't be cancelled.\n\nShort version: zfPanel's on click calls both `scope.hide()` and `animate`. This is bad as the animations overlap and the first one's timeout fails to cancel.\n. I've just run into what I think is this issue myself. \n\nThis root cause of the issue seen [here at lines 158-159](https://github.com/zurb/foundation-apps/blob/master/js/angular/components/panel/panel.js#L158-L159) in `panel.js`.\n\nIn my case, it is caused by `FoundationAnimation.animate`'s `run()` being called twice. This means the `animationTimeout` for the first run isn't cancelled by `eventHandler()` when it finishes. \n\nThe first call is coming from `scope.hide` in the `postlink` of `zfPanel`. The second call is coming from `element.on('click' ...)` which is also the original caller to `scope.hide`. As both `scope.hide` and `element.on` call animate, you get two animations running and the second one overrides the `animationTimeout` token for the first one which means the first one can't be cancelled.\n\nShort version: zfPanel's on click calls both `scope.hide()` and `animate`. This is bad as the animations overlap and the first one's timeout fails to cancel.\n. ",
    "NicoBleh": "That works!\n\nI'm trying to reproduce on a different machine. \n. @gjungb thanks i really forgot to inject $auth. I deleted the extend rows and moved on.\n\nThe main problem was that\n\n```\n$scope.handleLoginBtnClick = function () {\n...\n}\n```\n\nwas not handled. So i guessed that it had something to do with not extending the SignIn controller with the DefaultController.\nI turns out that it has to be done like that:\n\n```\n$scope.$on('auth:login-success'), function (ev, user) {\n...\n}\n```\n. That works!\n\nI'm trying to reproduce on a different machine. \n. @gjungb thanks i really forgot to inject $auth. I deleted the extend rows and moved on.\n\nThe main problem was that\n\n```\n$scope.handleLoginBtnClick = function () {\n...\n}\n```\n\nwas not handled. So i guessed that it had something to do with not extending the SignIn controller with the DefaultController.\nI turns out that it has to be done like that:\n\n```\n$scope.$on('auth:login-success'), function (ev, user) {\n...\n}\n```\n. ",
    "foobarth": "Sorry for including another, maybe related commit. I'll seperate concerns into separate branches in the future.\n. You're right - but then we would have to remove the typecheck in modal.js / line 68:\n`scope.overlayClose = attrs.overlayClose === 'false' ? false : true;` and switch to a falsy/truthy check. Simply allowing boolean false would fail here otherwise. Suggestions ?\n. I guess that would fix it, yes - will add another commit.\n. Sorry for including another, maybe related commit. I'll seperate concerns into separate branches in the future.\n. You're right - but then we would have to remove the typecheck in modal.js / line 68:\n`scope.overlayClose = attrs.overlayClose === 'false' ? false : true;` and switch to a falsy/truthy check. Simply allowing boolean false would fail here otherwise. Suggestions ?\n. I guess that would fix it, yes - will add another commit.\n. ",
    "mkrakowski": "I'm assuming that what you're asking is how to pick up the authRequired variable from the front matter within your app. \n\n## Front matter,\n\nname: secure=page\nurl: /secure/page\nanimationIn: fadeIn\ndata:\n\n##   authRequired: true\n\nThen in \"$rootScope.$on\" you can grab the authRequired param, \"toState.data.authRequired\".  Be sure to pass in toState into the .$on function,\n\n$rootScope.$on('$stateChangeStart', function (event, toState, toParams, sessionService) { \n  toState.data.authRequired\n});\n. Found the issue.  Removing the following resolved the issue,\n\n```\nng-checked=\"updateChecklist()\"\n```\n. I'm assuming that what you're asking is how to pick up the authRequired variable from the front matter within your app. \n\n## Front matter,\n\nname: secure=page\nurl: /secure/page\nanimationIn: fadeIn\ndata:\n\n##   authRequired: true\n\nThen in \"$rootScope.$on\" you can grab the authRequired param, \"toState.data.authRequired\".  Be sure to pass in toState into the .$on function,\n\n$rootScope.$on('$stateChangeStart', function (event, toState, toParams, sessionService) { \n  toState.data.authRequired\n});\n. Found the issue.  Removing the following resolved the issue,\n\n```\nng-checked=\"updateChecklist()\"\n```\n. ",
    "sgentile": "Having the same issue - modal doesn't respect scrollable content.\n. Having the same issue - modal doesn't respect scrollable content.\n. ",
    "neoighodaro": "Was this ever fixed? Still having this issue.\n. Was this ever fixed? Still having this issue.\n. ",
    "vincentpalita": "I think that would be also great to have a class on a higher DOM element such as <body> in order to be able to style stuff differently.\n\nFor example, if you are on mobile, best would be to hide the overflow on the main view but not on the modal, so scrolling would only have effect on the modal.\n. Hello there !\n@jeanieshark : did you make any progress on this ?\nI am using the zf-tabs and the way we access the parent scope can be disturbing.\nAlso, maybe I am wrong, but we cannot use the controllerAs alias inside a tab. That makes the whole thing really hard to track and to maintain.\n\nWould love to hear from you about this.\nCheers,\nVincent\n. I am running into the same issue.\nIt does open the tab though!\n\nIf you enclose the publish call in a $timeout, it will not throw the error.\n\n$timeout(function(){\n        FoundationApi.publish('TAB_ID', 'activate');\n});\n. :+1: \n. @laurent-le-graverend : you can move the title attribute in the notification.html inside the directive ng-bind-html.\n\n``` html\n<div zf-swipe-close=\"swipe\" class=\"notification {{ color }}\">\n  <a href=\"#\"\n    class=\"close-button\"\n    ng-click=\"hide(); $event.preventDefault(); $event.stopPropagation()\">&times;</a>\n  <div class=\"notification-icon\" ng-if=\"image\">\n    <img ng-src=\"{{ image }}\"/>\n  </div>\n  <div class=\"notification-content\">\n    <h1 ng-bind-html=\"title\"></h1>\n    <p ng-transclude></p>\n  </div>\n</div>\n```\n. Hello,\n\nWell the repo is not dead. I contacted them a few weeks ago and their team @zurb is really busy working on Foundation 6. \n\nMoreover @gakimball tags all issue very fast.\nLet's all be positive! \n\nFinally, both notification templates were modified in my pull request!\n\nCheers\nVincent\n. I think that would be also great to have a class on a higher DOM element such as <body> in order to be able to style stuff differently.\n\nFor example, if you are on mobile, best would be to hide the overflow on the main view but not on the modal, so scrolling would only have effect on the modal.\n. Hello there !\n@jeanieshark : did you make any progress on this ?\nI am using the zf-tabs and the way we access the parent scope can be disturbing.\nAlso, maybe I am wrong, but we cannot use the controllerAs alias inside a tab. That makes the whole thing really hard to track and to maintain.\n\nWould love to hear from you about this.\nCheers,\nVincent\n. I am running into the same issue.\nIt does open the tab though!\n\nIf you enclose the publish call in a $timeout, it will not throw the error.\n\n$timeout(function(){\n        FoundationApi.publish('TAB_ID', 'activate');\n});\n. :+1: \n. @laurent-le-graverend : you can move the title attribute in the notification.html inside the directive ng-bind-html.\n\n``` html\n<div zf-swipe-close=\"swipe\" class=\"notification {{ color }}\">\n  <a href=\"#\"\n    class=\"close-button\"\n    ng-click=\"hide(); $event.preventDefault(); $event.stopPropagation()\">&times;</a>\n  <div class=\"notification-icon\" ng-if=\"image\">\n    <img ng-src=\"{{ image }}\"/>\n  </div>\n  <div class=\"notification-content\">\n    <h1 ng-bind-html=\"title\"></h1>\n    <p ng-transclude></p>\n  </div>\n</div>\n```\n. Hello,\n\nWell the repo is not dead. I contacted them a few weeks ago and their team @zurb is really busy working on Foundation 6. \n\nMoreover @gakimball tags all issue very fast.\nLet's all be positive! \n\nFinally, both notification templates were modified in my pull request!\n\nCheers\nVincent\n. ",
    "alexandreogrodovski": "I guess it is the solution @gakimball.\n\nThank you for your reply.\n. I guess it is the solution @gakimball.\n\nThank you for your reply.\n. ",
    "DevanB": "I too am trying to figure out how to use external Javascript files (/assets/js/*_/_.js) to house controllers, filters, services, etc. Any guidance would be greatly appreciated as I am finding my app.js file to be too bulky now.\n. `npm start` does work and is what I've been using. Is the Zurb documentation incorrect and I should be using npm start instead?\n. Thanks for the information @gakimball \n\nI'll leave the issue in your all hands then.\n. Additionally, I may be misunderstanding how panels work. I'm making the assumption that panels (even ones that conform to a grid) can be toggled in and out. So I can have multiple panels on a page, and toggle them in (they conform to the grid I tell it) then I can toggle it out.\n. I just decided to ng-init a variable and on tap to show the panel the variable is assigned the panel name then panel will show if variable == panel's name. I understand why panels are treated the way they are treated, just curious if y'all have a more precise way to toggle panels on larger screens that may have [size]-grid-block transformation.\n. I am using `zf-hard-toggle` to toggle the panel, but when the page is loaded the first panel in HTML is displayed. I added `medium-5` to the panel and could see all the other panels loaded into the view also. When I try to toggle the element with `zf-hard-toggle`, it does nothing. The panel is still visible, doesn't go away.\n. > Also, are you using our Gulp routing plugin or writing your own routes?\n\nI am using the Gulp routing\n\n> Can you describe in more detail the problem this creates? What do you mean that the Angular application is loading multiple times?\n\nWhen I load the template that is nested deeply, the page is rendered, but within where the template is being rendered you can see another application is being loaded (another navbar is being loaded into the template). Console shows the error: `WARNING: Tried to Load Angular More Than Once`\n\nAnyway to make a plunkr or anything as an example to show you the error I'm seeing?\n. I too am trying to figure out how to use external Javascript files (/assets/js/*_/_.js) to house controllers, filters, services, etc. Any guidance would be greatly appreciated as I am finding my app.js file to be too bulky now.\n. `npm start` does work and is what I've been using. Is the Zurb documentation incorrect and I should be using npm start instead?\n. Thanks for the information @gakimball \n\nI'll leave the issue in your all hands then.\n. Additionally, I may be misunderstanding how panels work. I'm making the assumption that panels (even ones that conform to a grid) can be toggled in and out. So I can have multiple panels on a page, and toggle them in (they conform to the grid I tell it) then I can toggle it out.\n. I just decided to ng-init a variable and on tap to show the panel the variable is assigned the panel name then panel will show if variable == panel's name. I understand why panels are treated the way they are treated, just curious if y'all have a more precise way to toggle panels on larger screens that may have [size]-grid-block transformation.\n. I am using `zf-hard-toggle` to toggle the panel, but when the page is loaded the first panel in HTML is displayed. I added `medium-5` to the panel and could see all the other panels loaded into the view also. When I try to toggle the element with `zf-hard-toggle`, it does nothing. The panel is still visible, doesn't go away.\n. > Also, are you using our Gulp routing plugin or writing your own routes?\n\nI am using the Gulp routing\n\n> Can you describe in more detail the problem this creates? What do you mean that the Angular application is loading multiple times?\n\nWhen I load the template that is nested deeply, the page is rendered, but within where the template is being rendered you can see another application is being loaded (another navbar is being loaded into the template). Console shows the error: `WARNING: Tried to Load Angular More Than Once`\n\nAnyway to make a plunkr or anything as an example to show you the error I'm seeing?\n. ",
    "ryanburnett": "@jeanieshark Thank you! Stopping and restarting `npm start` did the trick!\n. @jeanieshark Thank you! Stopping and restarting `npm start` did the trick!\n. ",
    "dioklecijan": "Thank you for the quick answer. \nHowever, I still have to define global `foundationRoutes` array to prevent an error. \n\nIt would eliminate need for this weird array definition (and spare some time investigating why code recipe from official documentation does not work) if you test is `foundationRoutes`array defined before using it in registering dynamic routes .\n\nSomething like:\n\n``` javascript\nfunction DynamicRoutingConfig(FoundationStateProvider) {\n    if(typeof foundationRoutes === 'undefined') {\n      foundationRoutes = [];\n    }\n    FoundationStateProvider.registerDynamicRoutes(foundationRoutes);\n  }\n```\n. Thank you for the quick answer. \nHowever, I still have to define global `foundationRoutes` array to prevent an error. \n\nIt would eliminate need for this weird array definition (and spare some time investigating why code recipe from official documentation does not work) if you test is `foundationRoutes`array defined before using it in registering dynamic routes .\n\nSomething like:\n\n``` javascript\nfunction DynamicRoutingConfig(FoundationStateProvider) {\n    if(typeof foundationRoutes === 'undefined') {\n      foundationRoutes = [];\n    }\n    FoundationStateProvider.registerDynamicRoutes(foundationRoutes);\n  }\n```\n. ",
    "huphtur": "[Same result](http://foundation-apps-motion-ui.s3-website-us-east-1.amazonaws.com/#!/).\n\nChrome seems to mimic Firefox behavior more, however Firefox now shows a scrollbar for a brief moment.\n. Sorry, forgot to mention I created the expected results image in Photoshop. Label text before the switch would also be a good solution for both UX and accessibility.\n. [Same result](http://foundation-apps-motion-ui.s3-website-us-east-1.amazonaws.com/#!/).\n\nChrome seems to mimic Firefox behavior more, however Firefox now shows a scrollbar for a brief moment.\n. Sorry, forgot to mention I created the expected results image in Photoshop. Label text before the switch would also be a good solution for both UX and accessibility.\n. ",
    "austinmbrown": "I'm running into this same issue. Anyone turn up a good workaround? Or is a fix close?\n. Cool, thanks. That resolved the overlap issue, but now it seems like the view gets taken out of the flow while the animation runs - it jumps up to the top of the screen while running. I'll see if I can sort out why. Really appreciate the quick help :)\n. Aha - wrapped it in a .grid-block and now it's perfect. Thank you so much! :rocket: \n. I'm running into this same issue. Anyone turn up a good workaround? Or is a fix close?\n. Cool, thanks. That resolved the overlap issue, but now it seems like the view gets taken out of the flow while the animation runs - it jumps up to the top of the screen while running. I'll see if I can sort out why. Really appreciate the quick help :)\n. Aha - wrapped it in a .grid-block and now it's perfect. Thank you so much! :rocket: \n. ",
    "DeanSolecki": "Could someone post a working example of this somewhere?  I get different types of inexplicable behavior no matter what sequence of block/container/content/frame I use.  It either stacks during the animation, falls in from the top left corner, or shifts violently left to right after the animation runs.\n. Nevermind, this pattern works.\n\n``` slim\n.div class=\"grid-frame vertical\"\n    .div class=\"grid-block\"\n        .div class=\"grid-content ui-animation\" ui-view\n```\n. Could someone post a working example of this somewhere?  I get different types of inexplicable behavior no matter what sequence of block/container/content/frame I use.  It either stacks during the animation, falls in from the top left corner, or shifts violently left to right after the animation runs.\n. Nevermind, this pattern works.\n\n``` slim\n.div class=\"grid-frame vertical\"\n    .div class=\"grid-block\"\n        .div class=\"grid-content ui-animation\" ui-view\n```\n. ",
    "heysailor": "Same error for me, node 0.12.2\n. Same error for me, node 0.12.2\n. ",
    "maman": "still affected by this issue ... why this is issue is closed?\n. still affected by this issue ... why this is issue is closed?\n. ",
    "makas2": "Why it's close?\nI have the same problem. And way use $parent daoesn't work any where.\nangular ui-select component can't find model inside zf-tabs.\n. I have found solution.\nFirst way we can set for every tab separeate controller.\nThe second way is to find scope for each tab item and set up data model.\nTo realaize second way firs of all you have to get DOM element of zf-tabs - angular.element(document.getElementbyId('zf-tabs element id'))\nget child elements and getting scope() of them.\n. Why it's close?\nI have the same problem. And way use $parent daoesn't work any where.\nangular ui-select component can't find model inside zf-tabs.\n. I have found solution.\nFirst way we can set for every tab separeate controller.\nThe second way is to find scope for each tab item and set up data model.\nTo realaize second way firs of all you have to get DOM element of zf-tabs - angular.element(document.getElementbyId('zf-tabs element id'))\nget child elements and getting scope() of them.\n. ",
    "paper-coffee": "very poor design of zf-tabs! \n. I guess this plugin was written by some interns. maybe even whole foundation for apps!\n. very poor design of zf-tabs! \n. I guess this plugin was written by some interns. maybe even whole foundation for apps!\n. ",
    "HoldenCreative": "ksr583, this is an issue I'm seeing (in my case, with modals).\n\nI can't say if it is applicable to the problem you are experiencing, but it did seem like a possibility.\n\nBlog post describing the core issue:\nhttps://miketaylr.com/posts/2015/06/position-fixed-overflow-hidden.html\n. Hi Geoff, Andreas,\n\nI've found what appears to be a secondary issue with the (very understandable) existing use of the overflow property on grid-block and grid-content elements.\n\nOn iOS (iPad, touch) a modal may be visually \"clipped\" by the overflow property of the parent container, if  the parent container has a style of overflow auto or hidden AND -webkit-overflow-scrolling: touch.\n\nReproduce case: go to the modal documentation at http://foundation.zurb.com/apps/docs/#!/modal and add the following inline styles to the ng-include for 'partials/examples-modal.html'.\n\n```\noverflow: auto;\n-webkit-overflow-scrolling: touch;\n```\n\nYou should see the modal become 100% \"clipped\" (it will look like a z-index issue.)  The modal is still \"there\" and correctly fixed to the viewport - but it isn't displayed.\n\nI did some research into this, the better, albeit somewhat old posts I found describe the problem:\n- https://miketaylr.com/posts/2015/06/position-fixed-overflow-hidden.html\n- https://benfrain.com/z-index-stacking-contexts-experimental-css-and-ios-safari/\n\nI realize at first this may seem a bit like an edge case, but as we work on our (significantly complex) F4A-based web application we're finding that the need to include modals via the ui-view template files is pretty frequent.  We don't want a large set of empty modals sitting on a page which cannot use them.\n\nThe approach we've taken to date is:\n- Use a replacement for the modal factory, a \"master modal\" when possible for generic cases\n- Use specific CSS styles (overflow: visible) for specific or semi-generic cases\n- Where possible, move the modals \"up\" a level or two in the template tree\n\nThat said, we've already seen some self-contained conflicts, for example a page that has:\n- A menu bar\n- A content area, template based, which requires overflow: auto - and also includes a modal\n\nIf it wasn't so damn ugly, one potential quick fix would be to target the parent container of any modal and set it to overflow: visible while said modal was active.  I'm not sure if something like that can be done in a performant way.\n\nAnyway - that's my report.  Hope it helps and wish I could include an elegant solution as well :)\n\nAndrew H.\n. Clearly quite a few of us love the framework overall and want to see it continue.  Perhaps we could take it over if Zurb isn't behind it any more...\n. @mattgrande and I are trying to get in touch with Zurb and give everyone an update ...stay tuned.\n. I agree the general sentiment here.  The right process, from my perspective, is to fork the current version (with some basic renaming).  Let's start there - and then make some community decisions about the project/code/process moving forward.\n. Nice to see this moving forward.\n\n@tolyo - I'll add as a UI designer, IMHO the frontend responsive user-flow pattern of modals/overlays/etc. is a particularly good one. I don't see Materialize, Ionic, etc. as a competitor in this regard.\n\nThanks everyone.  @mattgrande and I will follow up next week.\n. @btwolfe79 - Angular Material is a lovely framework, but there are some definitive UI and workflow benefits in F4A.  I'm not ready to scrap (all) of yet.  Requirements vary.\n. Appreciate the update - thanks.\n. ksr583, this is an issue I'm seeing (in my case, with modals).\n\nI can't say if it is applicable to the problem you are experiencing, but it did seem like a possibility.\n\nBlog post describing the core issue:\nhttps://miketaylr.com/posts/2015/06/position-fixed-overflow-hidden.html\n. Hi Geoff, Andreas,\n\nI've found what appears to be a secondary issue with the (very understandable) existing use of the overflow property on grid-block and grid-content elements.\n\nOn iOS (iPad, touch) a modal may be visually \"clipped\" by the overflow property of the parent container, if  the parent container has a style of overflow auto or hidden AND -webkit-overflow-scrolling: touch.\n\nReproduce case: go to the modal documentation at http://foundation.zurb.com/apps/docs/#!/modal and add the following inline styles to the ng-include for 'partials/examples-modal.html'.\n\n```\noverflow: auto;\n-webkit-overflow-scrolling: touch;\n```\n\nYou should see the modal become 100% \"clipped\" (it will look like a z-index issue.)  The modal is still \"there\" and correctly fixed to the viewport - but it isn't displayed.\n\nI did some research into this, the better, albeit somewhat old posts I found describe the problem:\n- https://miketaylr.com/posts/2015/06/position-fixed-overflow-hidden.html\n- https://benfrain.com/z-index-stacking-contexts-experimental-css-and-ios-safari/\n\nI realize at first this may seem a bit like an edge case, but as we work on our (significantly complex) F4A-based web application we're finding that the need to include modals via the ui-view template files is pretty frequent.  We don't want a large set of empty modals sitting on a page which cannot use them.\n\nThe approach we've taken to date is:\n- Use a replacement for the modal factory, a \"master modal\" when possible for generic cases\n- Use specific CSS styles (overflow: visible) for specific or semi-generic cases\n- Where possible, move the modals \"up\" a level or two in the template tree\n\nThat said, we've already seen some self-contained conflicts, for example a page that has:\n- A menu bar\n- A content area, template based, which requires overflow: auto - and also includes a modal\n\nIf it wasn't so damn ugly, one potential quick fix would be to target the parent container of any modal and set it to overflow: visible while said modal was active.  I'm not sure if something like that can be done in a performant way.\n\nAnyway - that's my report.  Hope it helps and wish I could include an elegant solution as well :)\n\nAndrew H.\n. Clearly quite a few of us love the framework overall and want to see it continue.  Perhaps we could take it over if Zurb isn't behind it any more...\n. @mattgrande and I are trying to get in touch with Zurb and give everyone an update ...stay tuned.\n. I agree the general sentiment here.  The right process, from my perspective, is to fork the current version (with some basic renaming).  Let's start there - and then make some community decisions about the project/code/process moving forward.\n. Nice to see this moving forward.\n\n@tolyo - I'll add as a UI designer, IMHO the frontend responsive user-flow pattern of modals/overlays/etc. is a particularly good one. I don't see Materialize, Ionic, etc. as a competitor in this regard.\n\nThanks everyone.  @mattgrande and I will follow up next week.\n. @btwolfe79 - Angular Material is a lovely framework, but there are some definitive UI and workflow benefits in F4A.  I'm not ready to scrap (all) of yet.  Requirements vary.\n. Appreciate the update - thanks.\n. ",
    "34r7h": "thank ya.. that makes sense and it doesn't seem to affect the app, outside of 10-20 seconds of terminal throwing that error after an edit. Do you suggest that we should make an empty object as default so that it doesn't go for the null and if so, where should that get defined?\n. orite, thank you.! looking forward to testing the patch when it's ready.\n. thanks.. no javascript errors in the browser console. the inspector shows the map directive being there but not rendering the map tiles. \n. +1 $compile ftw\n. Cheers\n. thank ya.. that makes sense and it doesn't seem to affect the app, outside of 10-20 seconds of terminal throwing that error after an edit. Do you suggest that we should make an empty object as default so that it doesn't go for the null and if so, where should that get defined?\n. orite, thank you.! looking forward to testing the patch when it's ready.\n. thanks.. no javascript errors in the browser console. the inspector shows the map directive being there but not rendering the map tiles. \n. +1 $compile ftw\n. Cheers\n. ",
    "playnox": "Confirming... none of the angular directories work inside zf-\\*  directories I tried to use simple ng-repeat, ng-click and etc. inside zf-tabs (no luck). Console doesn't provide any errors since it's simply missing a $scope data, looks like zf directories are using it's own scope. \n. Confirming... none of the angular directories work inside zf-\\*  directories I tried to use simple ng-repeat, ng-click and etc. inside zf-tabs (no luck). Console doesn't provide any errors since it's simply missing a $scope data, looks like zf directories are using it's own scope. \n. ",
    "gaboratorium": "Is there a solution for this? I am having this problem as well and it is really annoying indeed. I would like to use directives inside zf-tabs, but they don't work (and they don't even throw any errors). Of course I can write my own directives for tabs, but this makes zf-tabs completely useless.\n. Is there a solution for this? I am having this problem as well and it is really annoying indeed. I would like to use directives inside zf-tabs, but they don't work (and they don't even throw any errors). Of course I can write my own directives for tabs, but this makes zf-tabs completely useless.\n. ",
    "mrova": "I have code like this, with components (sessions-one-list, sessions-group-list) and it works just fine with zf-tabs.\n\n```\n.main_section-aside-inner\n    div.tabs_nav(zf-tabs=\"\")\n        div(zf-tab=\"\", title=\"1:1 SESSIONS\" ng-mousedown=\"$ctrl.changeLink(true)\")\n            sessions-one-list(\n                mom=\"$parent.$ctrl.mom\",\n                one=\"$parent.$ctrl.sessionsOne.present\",\n                one-past=\"$parent.$ctrl.sessionsOne.past\"\n                active-edit-session=\"$parent.$ctrl.activeEditSession\"\n                show-modal=\"$parent.$ctrl.showModal\"\n            )\n        div(zf-tab=\"\", title=\"GROUP SESSIONS\" ng-mousedown=\"$ctrl.changeLink(false)\")\n            sessions-group-list(\n                mom=\"$parent.$ctrl.mom\", \n                group=\"$parent.$ctrl.sessionsGroup.present\",\n                group-past=\"$parent.$ctrl.sessionsGroup.past\",\n            )\n```\n. I have code like this, with components (sessions-one-list, sessions-group-list) and it works just fine with zf-tabs.\n\n```\n.main_section-aside-inner\n    div.tabs_nav(zf-tabs=\"\")\n        div(zf-tab=\"\", title=\"1:1 SESSIONS\" ng-mousedown=\"$ctrl.changeLink(true)\")\n            sessions-one-list(\n                mom=\"$parent.$ctrl.mom\",\n                one=\"$parent.$ctrl.sessionsOne.present\",\n                one-past=\"$parent.$ctrl.sessionsOne.past\"\n                active-edit-session=\"$parent.$ctrl.activeEditSession\"\n                show-modal=\"$parent.$ctrl.showModal\"\n            )\n        div(zf-tab=\"\", title=\"GROUP SESSIONS\" ng-mousedown=\"$ctrl.changeLink(false)\")\n            sessions-group-list(\n                mom=\"$parent.$ctrl.mom\", \n                group=\"$parent.$ctrl.sessionsGroup.present\",\n                group-past=\"$parent.$ctrl.sessionsGroup.past\",\n            )\n```\n. ",
    "joeoftheforsythe": "For anyone who is running into this issue, I was able to get around this by effectively changing [this line](https://github.com/zurb/foundation-apps/blob/master/js/angular/components/tabs/tabs.js#L204) from\n\n`element.append(tabContent);`\n\nto\n\n`element.append($compile(tabContent)(scope));`\n. For anyone who is running into this issue, I was able to get around this by effectively changing [this line](https://github.com/zurb/foundation-apps/blob/master/js/angular/components/tabs/tabs.js#L204) from\n\n`element.append(tabContent);`\n\nto\n\n`element.append($compile(tabContent)(scope));`\n. ",
    "betommy23": "Using $parent should let you access to the parental scope outside of zf-tabs. It will be nice if the documentation is more clear on these details.\n. Using $parent should let you access to the parental scope outside of zf-tabs. It will be nice if the documentation is more clear on these details.\n. ",
    "sametjan": "You can have more than one label associated with a form input. Try using this:\n\n``` html\n<div class=\"switch\">\n  <input id=\"switch-example\" type=\"checkbox\">\n  <label for=\"switch-example\"></label>\n</div>\n<label for=\"switch-example\">Subscribe to our weekly newsletter</label>\n```\n\n``` css\n.switch {\n  float: left;\n  margin-right: .5rem;\n}\n.switch + label {\n  line-height: rem-calc(34);\n}\n```\n. You can have more than one label associated with a form input. Try using this:\n\n``` html\n<div class=\"switch\">\n  <input id=\"switch-example\" type=\"checkbox\">\n  <label for=\"switch-example\"></label>\n</div>\n<label for=\"switch-example\">Subscribe to our weekly newsletter</label>\n```\n\n``` css\n.switch {\n  float: left;\n  margin-right: .5rem;\n}\n.switch + label {\n  line-height: rem-calc(34);\n}\n```\n. ",
    "AndyOGo": "thanks for your quick reply. I see your point.\n\nI would suggest to make this scrolling feature it's own module, which has to be set explicitly.\nThis separation will avoid messing up with overflow styles by default and will give you much more control.\n\nTargeting devices would be possible with classes like say .scroll-small (if that makes sence in practice...)\n. thanks for your quick reply. I see your point.\n\nI would suggest to make this scrolling feature it's own module, which has to be set explicitly.\nThis separation will avoid messing up with overflow styles by default and will give you much more control.\n\nTargeting devices would be possible with classes like say .scroll-small (if that makes sence in practice...)\n. ",
    "yarrow": "I'm seeing this as well.\n. I'm seeing this as well.\n. ",
    "fabiosussetto": "- 1, this is still an issue with the latest version.\n. - 1, this is still an issue with the latest version.\n. ",
    "soulstyle": "Im still experiencing this issue after updating foundation-cli.\n\n```\nDownloading the Foundation for Apps template.../usr/local/lib/node_modules/foundation-cli/node_modules/update-notifier/node_modules/configstore/node_modules/graceful-fs/polyfills.js:14\n  chdir.call(process, d)\n        ^\nError: ENOENT, no such file or directory\n    at Error (native)\n    at process.chdir (/usr/local/lib/node_modules/foundation-cli/node_modules/update-notifier/node_modules/configstore/node_modules/graceful-fs/polyfills.js:14:9)\n    at process.chdir (/usr/local/lib/node_modules/bower/node_modules/bower-config/node_modules/graceful-fs/polyfills.js:14:9)\n    at process.chdir (/usr/local/lib/node_modules/bower/node_modules/graceful-fs/polyfills.js:14:9)\n    at process.chdir (/usr/local/lib/node_modules/foundation-cli/node_modules/npm/node_modules/graceful-fs/polyfills.js:18:9)\n    at process.chdir (/usr/local/lib/node_modules/foundation-cli/node_modules/npm/node_modules/npm-registry-client/node_modules/graceful-fs/polyfills.js:14:9)\n    at process.chdir (/usr/local/lib/node_modules/foundation-cli/node_modules/npm/node_modules/write-file-atomic/node_modules/graceful-fs/polyfills.js:14:9)\n    at /usr/local/lib/node_modules/foundation-cli/lib/commands/new.js:63:13\n    at ChildProcess.<anonymous> (/usr/local/lib/node_modules/foundation-cli/node_modules/exec/exec.js:90:5)\n    at ChildProcess.emit (events.js:110:17)\n```\n. Im still experiencing this issue after updating foundation-cli.\n\n```\nDownloading the Foundation for Apps template.../usr/local/lib/node_modules/foundation-cli/node_modules/update-notifier/node_modules/configstore/node_modules/graceful-fs/polyfills.js:14\n  chdir.call(process, d)\n        ^\nError: ENOENT, no such file or directory\n    at Error (native)\n    at process.chdir (/usr/local/lib/node_modules/foundation-cli/node_modules/update-notifier/node_modules/configstore/node_modules/graceful-fs/polyfills.js:14:9)\n    at process.chdir (/usr/local/lib/node_modules/bower/node_modules/bower-config/node_modules/graceful-fs/polyfills.js:14:9)\n    at process.chdir (/usr/local/lib/node_modules/bower/node_modules/graceful-fs/polyfills.js:14:9)\n    at process.chdir (/usr/local/lib/node_modules/foundation-cli/node_modules/npm/node_modules/graceful-fs/polyfills.js:18:9)\n    at process.chdir (/usr/local/lib/node_modules/foundation-cli/node_modules/npm/node_modules/npm-registry-client/node_modules/graceful-fs/polyfills.js:14:9)\n    at process.chdir (/usr/local/lib/node_modules/foundation-cli/node_modules/npm/node_modules/write-file-atomic/node_modules/graceful-fs/polyfills.js:14:9)\n    at /usr/local/lib/node_modules/foundation-cli/lib/commands/new.js:63:13\n    at ChildProcess.<anonymous> (/usr/local/lib/node_modules/foundation-cli/node_modules/exec/exec.js:90:5)\n    at ChildProcess.emit (events.js:110:17)\n```\n. ",
    "nroper": "Hi,\n\nVersions as follows:\n\nnode: v0.12..3\nnpm: 2.9.1\n\nI ran npm install from inside the project directory and then npm start and I've got the index page up OK now. It says \n\nWelcome to Foundation for Apps!\nThis is version 1.1 Weisshorn.\n\nI assume that's what I should be seeing?\n\nQuestion:\n\nOn this page: http://foundation.zurb.com/apps/docs/#!/installation\n\nIt says to run:  $ foundation-apps watch\n\nbut on this page: http://foundation.zurb.com/apps/getting-started.html\n\nit says: $ npm start\n\nWhat's the difference?\n\nThanks\n. HI\n\nJust tried `foundation-apps new testApp` and got this:\n\n```\nfoundation-apps new testApp\n\n           /|\n          | |  /| .\n     .  /\\|  \\/ |/|\n     |\\/          |\n     ||\\__/\\____/||         Thanks for using Foundation for Apps!\n  ___|| ======== ||___      -------------------------------------\n /___||  O    O  ||___\\     Let's set up a new project.\n     ||  ______, ||         It shouldn't take more than a minute.\n     /|          |\\ \n    /_/\\\\/\\  /\\//\\_\\ \n        \\/\\\\//\\/\n           \\/\n\n\nDownloading the Foundation for Apps template...\nDone downloading!\n\nInstalling dependencies...\n\n/usr/local/lib/node_modules/foundation-cli/node_modules/npm/lib/utils/locker.js:66\n    throw new Error(\n          ^\nError: Attempt to unlock /Library/WebServer/Documents/vhosts/foundation4apps/testApp/node_modules/gulp, which hasn't been locked\n    at unlock (/usr/local/lib/node_modules/foundation-cli/node_modules/npm/lib/utils/locker.js:66:11)\n    at cb (/usr/local/lib/node_modules/foundation-cli/node_modules/npm/lib/install.js:1017:5)\n    at /usr/local/lib/node_modules/foundation-cli/node_modules/npm/lib/install.js:1021:20\n    at /usr/local/lib/node_modules/foundation-cli/node_modules/npm/lib/utils/locker.js:40:9\n    at cb (/usr/local/lib/node_modules/foundation-cli/node_modules/npm/node_modules/lockfile/lockfile.js:149:38)\n    at /usr/local/lib/node_modules/foundation-cli/node_modules/npm/node_modules/lockfile/lockfile.js:177:38\n    at OpenReq.Req.done (/usr/local/lib/node_modules/bower/node_modules/bower-json/node_modules/graceful-fs/graceful-fs.js:143:5)\n    at OpenReq.done (/usr/local/lib/node_modules/bower/node_modules/bower-json/node_modules/graceful-fs/graceful-fs.js:63:22)\n    at OpenReq.Req.done (/usr/local/lib/node_modules/bower/node_modules/bower-registry-client/node_modules/graceful-fs/graceful-fs.js:143:5)\n    at OpenReq.done (/usr/local/lib/node_modules/bower/node_modules/bower-registry-client/node_modules/graceful-fs/graceful-fs.js:63:22)\nNicks-MBP:foundation4apps nickroper$ \n\n```\n. Hi,\n\nVersions as follows:\n\nnode: v0.12..3\nnpm: 2.9.1\n\nI ran npm install from inside the project directory and then npm start and I've got the index page up OK now. It says \n\nWelcome to Foundation for Apps!\nThis is version 1.1 Weisshorn.\n\nI assume that's what I should be seeing?\n\nQuestion:\n\nOn this page: http://foundation.zurb.com/apps/docs/#!/installation\n\nIt says to run:  $ foundation-apps watch\n\nbut on this page: http://foundation.zurb.com/apps/getting-started.html\n\nit says: $ npm start\n\nWhat's the difference?\n\nThanks\n. HI\n\nJust tried `foundation-apps new testApp` and got this:\n\n```\nfoundation-apps new testApp\n\n           /|\n          | |  /| .\n     .  /\\|  \\/ |/|\n     |\\/          |\n     ||\\__/\\____/||         Thanks for using Foundation for Apps!\n  ___|| ======== ||___      -------------------------------------\n /___||  O    O  ||___\\     Let's set up a new project.\n     ||  ______, ||         It shouldn't take more than a minute.\n     /|          |\\ \n    /_/\\\\/\\  /\\//\\_\\ \n        \\/\\\\//\\/\n           \\/\n\n\nDownloading the Foundation for Apps template...\nDone downloading!\n\nInstalling dependencies...\n\n/usr/local/lib/node_modules/foundation-cli/node_modules/npm/lib/utils/locker.js:66\n    throw new Error(\n          ^\nError: Attempt to unlock /Library/WebServer/Documents/vhosts/foundation4apps/testApp/node_modules/gulp, which hasn't been locked\n    at unlock (/usr/local/lib/node_modules/foundation-cli/node_modules/npm/lib/utils/locker.js:66:11)\n    at cb (/usr/local/lib/node_modules/foundation-cli/node_modules/npm/lib/install.js:1017:5)\n    at /usr/local/lib/node_modules/foundation-cli/node_modules/npm/lib/install.js:1021:20\n    at /usr/local/lib/node_modules/foundation-cli/node_modules/npm/lib/utils/locker.js:40:9\n    at cb (/usr/local/lib/node_modules/foundation-cli/node_modules/npm/node_modules/lockfile/lockfile.js:149:38)\n    at /usr/local/lib/node_modules/foundation-cli/node_modules/npm/node_modules/lockfile/lockfile.js:177:38\n    at OpenReq.Req.done (/usr/local/lib/node_modules/bower/node_modules/bower-json/node_modules/graceful-fs/graceful-fs.js:143:5)\n    at OpenReq.done (/usr/local/lib/node_modules/bower/node_modules/bower-json/node_modules/graceful-fs/graceful-fs.js:63:22)\n    at OpenReq.Req.done (/usr/local/lib/node_modules/bower/node_modules/bower-registry-client/node_modules/graceful-fs/graceful-fs.js:143:5)\n    at OpenReq.done (/usr/local/lib/node_modules/bower/node_modules/bower-registry-client/node_modules/graceful-fs/graceful-fs.js:63:22)\nNicks-MBP:foundation4apps nickroper$ \n\n```\n. ",
    "josephfinlayson": "it's because it's accessing the literal regex like so:  `/iconic-bg-/.test`\n\nfixed by:\n\n```\n                    var bgRegex = new RegExp(/iconic-bg-/);\n                    bgRegex.test(a.getAttribute(\"class\")) && g.addBackground(a), m(a), k++, b && b.each && \"function\" == typeof b.each && b.each(a)\n```\n\nnot sure if this is a bug in browserify or iconic\n. Good investigation @onelson +1. Finding bugs in babel should be hard\n. it's because it's accessing the literal regex like so:  `/iconic-bg-/.test`\n\nfixed by:\n\n```\n                    var bgRegex = new RegExp(/iconic-bg-/);\n                    bgRegex.test(a.getAttribute(\"class\")) && g.addBackground(a), m(a), k++, b && b.each && \"function\" == typeof b.each && b.each(a)\n```\n\nnot sure if this is a bug in browserify or iconic\n. Good investigation @onelson +1. Finding bugs in babel should be hard\n. ",
    "onelson": "Just ran into this myself. Not super sure I want to patch this dep in place... looking for a workaround now.\n. Eh, ok. I am bad and I feel bad but here's what I came up with to get my app bundling again...\n\nI added the following to my `package.json` then immediately balled up and started to cry.\n\n```\n+  \"scripts\": {\n+    \"postinstall\": \"sed --in-place=.tmp 's|/iconic-bg-/.test|new RegExp(\\\"iconic-bg-\\\").test|' ./node_modules/react-foundation-apps/lib/vendor/iconic.min.js\"\n+  },\n```\n. So, I reported the issue to the babel folks, and I guess the parser they depend on is a separate project called acorn. Issue was re-reported on this other project: marijnh/acorn#289\n. Just ran into this myself. Not super sure I want to patch this dep in place... looking for a workaround now.\n. Eh, ok. I am bad and I feel bad but here's what I came up with to get my app bundling again...\n\nI added the following to my `package.json` then immediately balled up and started to cry.\n\n```\n+  \"scripts\": {\n+    \"postinstall\": \"sed --in-place=.tmp 's|/iconic-bg-/.test|new RegExp(\\\"iconic-bg-\\\").test|' ./node_modules/react-foundation-apps/lib/vendor/iconic.min.js\"\n+  },\n```\n. So, I reported the issue to the babel folks, and I guess the parser they depend on is a separate project called acorn. Issue was re-reported on this other project: marijnh/acorn#289\n. ",
    "zorrobyte": "Ah, so basically I would follow the same workflow to integrate Foundation for Apps into something like Sails.js just as I would straight Angular.js? I feel like an idiot.\n. Thanks! I just found Yeoman which should make this easy!\n\nCheers.\n. Foundation for MeteorJS is broken due to a tiny dependency version needing changed in the package file, however my GH ticket has been sitting for months now. I can't say that I trust Zurb at all.\n. Ah, so basically I would follow the same workflow to integrate Foundation for Apps into something like Sails.js just as I would straight Angular.js? I feel like an idiot.\n. Thanks! I just found Yeoman which should make this easy!\n\nCheers.\n. Foundation for MeteorJS is broken due to a tiny dependency version needing changed in the package file, however my GH ticket has been sitting for months now. I can't say that I trust Zurb at all.\n. ",
    "sgraham3311": "ui-grid seems to have figured out how to bubble the event up to the parent when you reach the end of a vertical scroll in a child container. I am using that with foundation-apps, although I am not sure if it will have the same problem when the child container has only a horizontal scroll. \n\nI guess the issue is foundation doesn't scroll the window it self just the grid-frame and grid-blocks.\n\nthanks\n. No I have not confirmed this yet. \n. ui-grid seems to have figured out how to bubble the event up to the parent when you reach the end of a vertical scroll in a child container. I am using that with foundation-apps, although I am not sure if it will have the same problem when the child container has only a horizontal scroll. \n\nI guess the issue is foundation doesn't scroll the window it self just the grid-frame and grid-blocks.\n\nthanks\n. No I have not confirmed this yet. \n. ",
    "93design": "Those templates don't have any functionaly behind them its just about the ui.\n. Those templates don't have any functionaly behind them its just about the ui.\n. ",
    "PoyangLiu": "I should mention that this was discovered in Chrome v43. I did not test it on other browser.\n. I should mention that this was discovered in Chrome v43. I did not test it on other browser.\n. ",
    "chr22": "This is still an issue. Any timeframe for when this will be fixed?\n. ``` typescript\nvar modal = new this.ModalFactory({\n                overlay: true,\n                overlayClose: false,\n                templateUrl: \"Web/Areas/FarmTaskList/FarmTaskAddDialog.html\",\n                contentScope: {\n                    close: () => {\n                        modal.destroy();\n                    },\n                    farmTask: farmTask,\n                    farmTasks: this.Tasks\n                }\n            });\n\n            modal.activate();\n```\n\nThe problem is that the the overlayClose attribute won't be added because of the \"if\" in the picture below when the value is false.\n\n![image](https://cloud.githubusercontent.com/assets/3649594/14139005/b25ca46c-f670-11e5-8ed1-4c588ce30705.png)\n\nAnd this line only checks if the value is \"false\", but it will never be false because it will never be added when it is false.\n\n![image](https://cloud.githubusercontent.com/assets/3649594/14139062/0acba5f8-f671-11e5-9c46-2d8f6d54408c.png)\n. Thanks it works.\n\nThe documentation should be updated to reflect that. The current documentation uses a boolean value.\n\nhttp://foundation.zurb.com/apps/docs/#!/modal\n. This is still an issue. Any timeframe for when this will be fixed?\n. ``` typescript\nvar modal = new this.ModalFactory({\n                overlay: true,\n                overlayClose: false,\n                templateUrl: \"Web/Areas/FarmTaskList/FarmTaskAddDialog.html\",\n                contentScope: {\n                    close: () => {\n                        modal.destroy();\n                    },\n                    farmTask: farmTask,\n                    farmTasks: this.Tasks\n                }\n            });\n\n            modal.activate();\n```\n\nThe problem is that the the overlayClose attribute won't be added because of the \"if\" in the picture below when the value is false.\n\n![image](https://cloud.githubusercontent.com/assets/3649594/14139005/b25ca46c-f670-11e5-8ed1-4c588ce30705.png)\n\nAnd this line only checks if the value is \"false\", but it will never be false because it will never be added when it is false.\n\n![image](https://cloud.githubusercontent.com/assets/3649594/14139062/0acba5f8-f671-11e5-9c46-2d8f6d54408c.png)\n. Thanks it works.\n\nThe documentation should be updated to reflect that. The current documentation uses a boolean value.\n\nhttp://foundation.zurb.com/apps/docs/#!/modal\n. ",
    "jakob-o": "FYI: In the current master 36383ace3ae20c5e447da75005ea5a09a69ffa5a it looks like the 'hide' event changed to 'close' and is reliably firing.\n. I didn't mean the commit itself, rather wanted to point to the current head in master. It is fixed there. You can easily test it by changing the dependency in the bower.json of the test project (see the first post) to:\n\n``` javascript\n  \"dependencies\": {\n    \"foundation-apps\": \"https://github.com/zurb/foundation-apps.git#36383ace3ae20c5e447da75005ea5a09a69ffa5a\"\n  }\n```\n\nAnd double checking it seems to have been a \"close\" event before (could have sworn it issued a \"hide\"). So in a nutshell, with 1.1.0 close on button issues a 'close' event, click on backdrop does not. In current master both seem to work.\n. I guess this is the commit, which fixed it 8b0b5bbf5637192dcbdaa542dbace0dad3b03473.\n. FYI: In the current master 36383ace3ae20c5e447da75005ea5a09a69ffa5a it looks like the 'hide' event changed to 'close' and is reliably firing.\n. I didn't mean the commit itself, rather wanted to point to the current head in master. It is fixed there. You can easily test it by changing the dependency in the bower.json of the test project (see the first post) to:\n\n``` javascript\n  \"dependencies\": {\n    \"foundation-apps\": \"https://github.com/zurb/foundation-apps.git#36383ace3ae20c5e447da75005ea5a09a69ffa5a\"\n  }\n```\n\nAnd double checking it seems to have been a \"close\" event before (could have sworn it issued a \"hide\"). So in a nutshell, with 1.1.0 close on button issues a 'close' event, click on backdrop does not. In current master both seem to work.\n. I guess this is the commit, which fixed it 8b0b5bbf5637192dcbdaa542dbace0dad3b03473.\n. ",
    "julioasoares": "That happens to me in one form only... it behaves nicely in all forms (many) but this one where it keeps showing the little arrow...\n. That happens to me in one form only... it behaves nicely in all forms (many) but this one where it keeps showing the little arrow...\n. ",
    "imjoeco": "The checks that soumak77 added in 640 shouldn't conflict, but when changing the setTimeout to $timeout and invoking the function immediately, the safeguards that soumak77 added don't appear necessary as they seemed to be the byproduct of working with a stale scope state. Not sure whether or not it's better with soumak77's safeguard fix as the scope and element variables not being available to the destroy function appears to be a bug that the safeguards would stop the app from correctly erroring on.\n. The checks that soumak77 added in 640 shouldn't conflict, but when changing the setTimeout to $timeout and invoking the function immediately, the safeguards that soumak77 added don't appear necessary as they seemed to be the byproduct of working with a stale scope state. Not sure whether or not it's better with soumak77's safeguard fix as the scope and element variables not being available to the destroy function appears to be a bug that the safeguards would stop the app from correctly erroring on.\n. ",
    "MiguelMike": "Here's a use case.\n\nI have a page where pressing ESC should display, modal dialog requesting user to confirm. I can see that the modal pops up briefly, for less than a second and goes away again. Not giving the user a chance to react.\n\nI wonder if there's a decent workaround.\n. Turns out there was a not very smart listener forcing all elements with `zf-closable` to close on Esc. That's what was causing the problem I described above.\n\nClosing this issue.\n\nNext step: Find and punish the person responsible for this.\n. Here's a use case.\n\nI have a page where pressing ESC should display, modal dialog requesting user to confirm. I can see that the modal pops up briefly, for less than a second and goes away again. Not giving the user a chance to react.\n\nI wonder if there's a decent workaround.\n. Turns out there was a not very smart listener forcing all elements with `zf-closable` to close on Esc. That's what was causing the problem I described above.\n\nClosing this issue.\n\nNext step: Find and punish the person responsible for this.\n. ",
    "ruifortes": "I'm getting \"SyntaxError: Unexpected token h\"\nI'm on windows.\n. I'm getting \"SyntaxError: Unexpected token h\"\nI'm on windows.\n. ",
    "alper": "Ok, so it turns out that the development server isn't actually serving the linked javascript files:\n\nhttp://localhost:8080/assets/js/angular.js\n\nJust returns the default HTML.\n. Ok, it turns out that this file is in the client/assets/js directory but is not carried over to the build directory for some reason. Removing it fixes at least the error message. I don't know whether it's intended.\n. It's the templates for these preboiled apps: http://foundation.zurb.com/apps/\n. The template I get when I run newapp does work for some reason.\n. I'm using the downloadable ones. The browser gives an error message when trying to run those.\n. One of the sources for a js file does not return javascript but HTML instead and it chokes on that.\n. Ok, so it turns out that the development server isn't actually serving the linked javascript files:\n\nhttp://localhost:8080/assets/js/angular.js\n\nJust returns the default HTML.\n. Ok, it turns out that this file is in the client/assets/js directory but is not carried over to the build directory for some reason. Removing it fixes at least the error message. I don't know whether it's intended.\n. It's the templates for these preboiled apps: http://foundation.zurb.com/apps/\n. The template I get when I run newapp does work for some reason.\n. I'm using the downloadable ones. The browser gives an error message when trying to run those.\n. One of the sources for a js file does not return javascript but HTML instead and it chokes on that.\n. ",
    "jmatthiesen": "I was having this issue as well, using a download of the [email app template](http://foundation.zurb.com/apps/app-templates/email/#!/). angular.js shows in Chrome as having the same source as index.html.\n\nIt looks like the issue is that the I first created an app using the foundation CLI, then copied the source for the email app template into the client directory and just tried to use it. The default gulpfile.js doesn't automatically scrape all the files from the client directory upon build; and so angular.js doesn't appear in the build folder for the app. When the build folder is served in the browser, there's no angular.js file to load and instead the default root file for the site is served (index.html).\n. Upon closer inspection, the issues are definitely related to trying to copy the sample app template files (e.g. the email template) into a project that was build with the Foundation CLI. My throught that some files were missing was wrong, I see in the build scripts how Angular gets pulled in to foundation.js for the built app.\n\nTo ease working with the email template (from this site: http://foundation.zurb.com/apps/resources.html), is there a place to get the un-compiled source for the templates? I'd like to be able to work with a version of the actual client folder for the template, including the SCSS used to build the template.\n. I was having this issue as well, using a download of the [email app template](http://foundation.zurb.com/apps/app-templates/email/#!/). angular.js shows in Chrome as having the same source as index.html.\n\nIt looks like the issue is that the I first created an app using the foundation CLI, then copied the source for the email app template into the client directory and just tried to use it. The default gulpfile.js doesn't automatically scrape all the files from the client directory upon build; and so angular.js doesn't appear in the build folder for the app. When the build folder is served in the browser, there's no angular.js file to load and instead the default root file for the site is served (index.html).\n. Upon closer inspection, the issues are definitely related to trying to copy the sample app template files (e.g. the email template) into a project that was build with the Foundation CLI. My throught that some files were missing was wrong, I see in the build scripts how Angular gets pulled in to foundation.js for the built app.\n\nTo ease working with the email template (from this site: http://foundation.zurb.com/apps/resources.html), is there a place to get the un-compiled source for the templates? I'd like to be able to work with a version of the actual client folder for the template, including the SCSS used to build the template.\n. ",
    "matiasinsaurralde": "Same problem :+1: \n. Same problem :+1: \n. ",
    "lunks": "I also would like something similar to what `angular-foundation` and `angular-bootstrap` do.\nMain problems with just passing things over `contentScope`:\n-  A [common practice](https://github.com/johnpapa/angular-styleguide#controllers) in the angular community is to encapsulate my function calls in a controller and define it as a `vm` (see link for more info). Currently I can't do anything similar due to how `ModalFactory` creates new modals. I _have to_ use scope functions.\n\n``` javascript\n// controller.js\nfunction MyCtrl(modalInstance) {\n  var vm = this;\n  var vm.close = function() {\n    modalInstance.close()\n  };\n};\n```\n\n``` html\n<!-- template.html -->\n<button ng-click=\"vm.close()\">\n```\n- All logic is defined in the parent controller responsible for creating the modal, not in the modal controller itself. This makes complex modals harder to implement.\n\nA concrete use case:\nI have a list of `course`s in a page, with a `New Course` button to create a new modal using a `courseForm` directive, which binds to a function from the current scope on the `onSave` attribute. On this specific case, I want to track the event using a `TrackerService` and then close the modal. I'd like to define bind a `trackAndClose` function to the `onSave` attribute.\n\nBecause I have to pass any functions I'd like to use via the `contentScope`, this `trackAndClose` function would be in the wrong place (my `course`s list controller) instead of in my `NewCourseCtrl` I'd like to use when instantiating the modal.\n. I've created a PR for this, see #689\n. I left the previous company I was using foundation-apps and forgot about this. I'll do what @zurbchris asked so we can move forward.\n. I also would like something similar to what `angular-foundation` and `angular-bootstrap` do.\nMain problems with just passing things over `contentScope`:\n-  A [common practice](https://github.com/johnpapa/angular-styleguide#controllers) in the angular community is to encapsulate my function calls in a controller and define it as a `vm` (see link for more info). Currently I can't do anything similar due to how `ModalFactory` creates new modals. I _have to_ use scope functions.\n\n``` javascript\n// controller.js\nfunction MyCtrl(modalInstance) {\n  var vm = this;\n  var vm.close = function() {\n    modalInstance.close()\n  };\n};\n```\n\n``` html\n<!-- template.html -->\n<button ng-click=\"vm.close()\">\n```\n- All logic is defined in the parent controller responsible for creating the modal, not in the modal controller itself. This makes complex modals harder to implement.\n\nA concrete use case:\nI have a list of `course`s in a page, with a `New Course` button to create a new modal using a `courseForm` directive, which binds to a function from the current scope on the `onSave` attribute. On this specific case, I want to track the event using a `TrackerService` and then close the modal. I'd like to define bind a `trackAndClose` function to the `onSave` attribute.\n\nBecause I have to pass any functions I'd like to use via the `contentScope`, this `trackAndClose` function would be in the wrong place (my `course`s list controller) instead of in my `NewCourseCtrl` I'd like to use when instantiating the modal.\n. I've created a PR for this, see #689\n. I left the previous company I was using foundation-apps and forgot about this. I'll do what @zurbchris asked so we can move forward.\n. ",
    "AliAkbarLatifi": "@Joe-5mith you can use it https://github.com/ivnivnch/foundation-apps-modal\n. @Joe-5mith you can use it https://github.com/ivnivnch/foundation-apps-modal\n. ",
    "janusch": "@gakimball Yes, that would be very useful. What do you think is that something you will add?\nI think it is relevant for users that would like to use foundation-apps without adding angular to their apps.\nFoundation-apps offers many very nice forward thinking solutions to app design without using angular.\nIn my case I am already using the grid, would be sweet if there are other parts that I can use as well without adding angular.\nThanks for your quick reply!\nKeep up the excellent work!\n. @gakimball Yes, that would be very useful. What do you think is that something you will add?\nI think it is relevant for users that would like to use foundation-apps without adding angular to their apps.\nFoundation-apps offers many very nice forward thinking solutions to app design without using angular.\nIn my case I am already using the grid, would be sweet if there are other parts that I can use as well without adding angular.\nThanks for your quick reply!\nKeep up the excellent work!\n. ",
    "superkeil": "reproduced in Chrome for Android in version 1.2\n. At this day, i had to remove the swipe close.\nActually i manage to scroll if the touchstart event was being done on an input element.\nBut this is just not user friendly\n. reproduced in Chrome for Android in version 1.2\n. At this day, i had to remove the swipe close.\nActually i manage to scroll if the touchstart event was being done on an input element.\nBut this is just not user friendly\n. ",
    "ainsophical": "i have the same problem in android 4.4.2 webkit. a little help please! :D\n. i have the same problem in android 4.4.2 webkit. a little help please! :D\n. ",
    "psolidgold": "In the JS console of this page specifically: http://foundation.zurb.com/apps/app-templates/music/#!/\n. In the JS console of this page specifically: http://foundation.zurb.com/apps/app-templates/music/#!/\n. ",
    "romainfrancez": "I can't say 100% this change will prevent any bugs, however if we drop that change we need to make sure that on this line\nhttps://github.com/zurb/foundation-apps/blob/master/js/angular/services/foundation.mediaquery.js#L52\nwe check for `mediaQueries[key]` being a string or not (it can be `null` per the `helpers.parseStyleToObject` function, hence not working with `.replace`), which I'll PR soon.\n. I can't say 100% this change will prevent any bugs, however if we drop that change we need to make sure that on this line\nhttps://github.com/zurb/foundation-apps/blob/master/js/angular/services/foundation.mediaquery.js#L52\nwe check for `mediaQueries[key]` being a string or not (it can be `null` per the `helpers.parseStyleToObject` function, hence not working with `.replace`), which I'll PR soon.\n. ",
    "johnbocook": "I tried on another VM and was able to run the command. Here is the output, http://pastebin.com/KhLS8JPQ\n. It does. I as able to clone the manual install repo. I have the\ncli functioning in OSX but both windows machines are still giving errors.\nI've followed a bunch of different tutorials but no luck yet.\n\n_John Bocook_Full Stack Developer\n\n\u260e (614) 779-2670\n\u2605 JohnBocook.com\n [image: LinkedIn] http://www.linkedin.com/in/johnbocook/ [image: Twitter]\nhttps://twitter.com/johnbocook [image: Facebook]\nhttps://www.facebook.com/john.bocook [image: Google Plus]\nhttps://plus.google.com/+JohnBocook/posts\n\nOn Thu, Sep 3, 2015 at 5:54 PM, Geoff Kimball notifications@github.com\nwrote:\n\n> Alright, in this case I think the Git clone failed. Does the git command\n> work properly in your environment?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/685#issuecomment-137584945\n> .\n. I'm using cyg-win. I just read an issue with grunt. cyg-win installs an outdated version of node and some issue with git being locked into the cyg-win directory. I wonder if that stops git from having certain permissions needed.\n I'll try again with the windows command prompt and power shell to see if I can replicate the issue.\n. I tried on another VM and was able to run the command. Here is the output, http://pastebin.com/KhLS8JPQ\n. It does. I as able to clone the manual install repo. I have the\ncli functioning in OSX but both windows machines are still giving errors.\nI've followed a bunch of different tutorials but no luck yet.\n\n_John Bocook_Full Stack Developer\n\n\u260e (614) 779-2670\n\u2605 JohnBocook.com\n [image: LinkedIn] http://www.linkedin.com/in/johnbocook/ [image: Twitter]\nhttps://twitter.com/johnbocook [image: Facebook]\nhttps://www.facebook.com/john.bocook [image: Google Plus]\nhttps://plus.google.com/+JohnBocook/posts\n\nOn Thu, Sep 3, 2015 at 5:54 PM, Geoff Kimball notifications@github.com\nwrote:\n\n> Alright, in this case I think the Git clone failed. Does the git command\n> work properly in your environment?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/685#issuecomment-137584945\n> .\n. I'm using cyg-win. I just read an issue with grunt. cyg-win installs an outdated version of node and some issue with git being locked into the cyg-win directory. I wonder if that stops git from having certain permissions needed.\n I'll try again with the windows command prompt and power shell to see if I can replicate the issue.\n. ",
    "gruberb": "What's the status on this?\n. What's the status on this?\n. ",
    "kuatsure": "@gakimball any movement on this issue? my team is also running in to an issue with the lower bound being 1.3.x ... it's the main hurdle for us to move our angular app to foundation-apps away from foundation-sites.\n. @soumak77 how much of the angular modules do you use? \n. @gakimball + @soumak77 :: let's do that :) are pr's welcome?\n. @gakimball any movement on this issue? my team is also running in to an issue with the lower bound being 1.3.x ... it's the main hurdle for us to move our angular app to foundation-apps away from foundation-sites.\n. @soumak77 how much of the angular modules do you use? \n. @gakimball + @soumak77 :: let's do that :) are pr's welcome?\n. ",
    "dragthor": "Mine is also dying on\"git ls-remote --tags --heads git://github.com/zurb/foundation-apps.git\"\n. Thanks @AntJanus It could be anything... IIS, Apache, Google App Engine, etc.\n. Mine is also dying on\"git ls-remote --tags --heads git://github.com/zurb/foundation-apps.git\"\n. Thanks @AntJanus It could be anything... IIS, Apache, Google App Engine, etc.\n. ",
    "stephaniepurvis": "You need to add the font-awesome folder to the gulp.js file.  Look for this in that file and make sure you add the line for font-awesome:\n\n```\n  // Sass will check these folders for files when you use @import.\n  sass: [\n    'client/assets/scss',\n    'bower_components/foundation-apps/scss',\n    'bower_components/font-awesome/scss'\n  ],\n```\n. You need to add the font-awesome folder to the gulp.js file.  Look for this in that file and make sure you add the line for font-awesome:\n\n```\n  // Sass will check these folders for files when you use @import.\n  sass: [\n    'client/assets/scss',\n    'bower_components/foundation-apps/scss',\n    'bower_components/font-awesome/scss'\n  ],\n```\n. ",
    "Cethy": "On the current version (or only on the \"advanced template\", idk I only use this one), the sass config should be modified in config.yml.\n\nAdditionally, you need to modify or create a new gulp task to handle the copy of the fonts in the `dist/` directory. \nSomething like this :\n\n``` js\n// Copy fonts to the \"dist\" folder\nfunction fonts() {\n  return gulp.src(\"bower_components/font-awesome/fonts/**.*\")\n    .pipe(gulp.dest(PATHS.dist + '/assets/fonts'));\n}\n```\n. On the current version (or only on the \"advanced template\", idk I only use this one), the sass config should be modified in config.yml.\n\nAdditionally, you need to modify or create a new gulp task to handle the copy of the fonts in the `dist/` directory. \nSomething like this :\n\n``` js\n// Copy fonts to the \"dist\" folder\nfunction fonts() {\n  return gulp.src(\"bower_components/font-awesome/fonts/**.*\")\n    .pipe(gulp.dest(PATHS.dist + '/assets/fonts'));\n}\n```\n. ",
    "STRd6": "I had a similar problem and it was due to an event handler on document mouseup calling preventDefault, hope this might help.\n. I had a similar problem and it was due to an event handler on document mouseup calling preventDefault, hope this might help.\n. ",
    "jviotti": "I've un-minified the part of the script throwing the error and I see the following invalid JavaScript:\n\n``` js\ncase \"iconic-fluid\":\n    d.push(a), e.push(a.replace(/-/, \"-bg-\"));\n    break;\n```\n. The actual error is being thrown in this part:\n\n``` js\nf.each = function(a) {\n    if (a)\n        if (\"string\" == typeof a) h.debug(a);\n        else if (a instanceof SVGSVGElement) {\n        var c = a.getAttribute(\"data-icon\");\n        if (c && j[c]) {\n            var d = j[c](a);\n            for (var e in d) a[e] = d[e]\n        }\n        /iconic-bg-/.test(a.getAttribute(\"class\")) && g.addBackground(a), m(a), k++, b && b.each && \"function\" == typeof b.each && b.each(a)\n    }\n}, \"string\" == typeof a && (a = document.querySelectorAll(a)), c(a, f, e)\n```\n\nI believe this comes from Iconic, but has a lot of syntax issues.\n. I've un-minified the part of the script throwing the error and I see the following invalid JavaScript:\n\n``` js\ncase \"iconic-fluid\":\n    d.push(a), e.push(a.replace(/-/, \"-bg-\"));\n    break;\n```\n. The actual error is being thrown in this part:\n\n``` js\nf.each = function(a) {\n    if (a)\n        if (\"string\" == typeof a) h.debug(a);\n        else if (a instanceof SVGSVGElement) {\n        var c = a.getAttribute(\"data-icon\");\n        if (c && j[c]) {\n            var d = j[c](a);\n            for (var e in d) a[e] = d[e]\n        }\n        /iconic-bg-/.test(a.getAttribute(\"class\")) && g.addBackground(a), m(a), k++, b && b.each && \"function\" == typeof b.each && b.each(a)\n    }\n}, \"string\" == typeof a && (a = document.querySelectorAll(a)), c(a, f, e)\n```\n\nI believe this comes from Iconic, but has a lot of syntax issues.\n. ",
    "dbartholomae": "It's issue #625 \n. It's issue #625 \n. ",
    "lee-40square": "My mistake, I am more interested in the process of building and deploying a complete Foundations for Apps project for which the documentation is thin. I'll head over to the project template repo. Thanks.\n. My mistake, I am more interested in the process of building and deploying a complete Foundations for Apps project for which the documentation is thin. I'll head over to the project template repo. Thanks.\n. ",
    "jbruni": "Oh, well... the build fail seems to be completely unrelated to the change... all builds are failing since a commit a few minutes ago...\n. Oh, well... the build fail seems to be completely unrelated to the change... all builds are failing since a commit a few minutes ago...\n. ",
    "bionicbrian": "This is not the way to do this. I do suggest adding this, but not in the spot this PR has it. I'll be back. ha. Thanks. ;)\n. This is not the way to do this. I do suggest adding this, but not in the spot this PR has it. I'll be back. ha. Thanks. ;)\n. ",
    "jeffreznik": "Agreed!  I can't even add angular-resource because angular-resource wants angular 1.4.7 and foundation-apps is stuck on ~1.3.4.  If I force 1.4.7, foundation-apps errors out when the page loads.\n\nEdit: My site was created using the foundation-apps generator, so when I forced angular 1.4.7, I also had to force angular-animate to 1.4.7, this solved the issue.\n. Agreed!  I can't even add angular-resource because angular-resource wants angular 1.4.7 and foundation-apps is stuck on ~1.3.4.  If I force 1.4.7, foundation-apps errors out when the page loads.\n\nEdit: My site was created using the foundation-apps generator, so when I forced angular 1.4.7, I also had to force angular-animate to 1.4.7, this solved the issue.\n. ",
    "btwolfe79": "I was able to force use of the latest via:\n\"foundation-apps\": \"git://github.com/zurb/foundation-apps.git#d5cebfaffe4395ccfc8dd5d6435f427fdb8c290b\"\n\nand using\n\"resolutions\": {\n  \"angular\": \"1.4.7\"\n}\n\nUnfortunately I think we need to start investigating alternative frameworks... I love Zurb but I think they have too much on their plate to support foundation-apps.\n. Thanks so much for the update - glad to hear it will be resurrected!  \n. After about a year of no activity after the first major release, I asked this:\nhttps://github.com/zurb/foundation-apps/issues/715\n\nAbout six months ago they said priorities would shift back to Foundation for Apps but we never saw a release after that. \n\nI'm not confident this will go anywhere... will need to transition my project to something else before we release.  Anyone have any good suggestions?\n. Thanks!  I'm trying to decide in the next 30 days if I should jump ship to http://circlingthesun.github.io/angular-foundation-6/  or see if this will be brought back from the dead.  Sadly it was pretty much dead immediately after the initial announcement years ago... \n. Yes, it's dead.  \n. They have been nearly silent since the first day this was released... and now won't provide updates via direct twitter request and (obviously) the frustration on github.  So no, they refuse to respond but happily sucker people in via their website that don't realize that it's been dead since it was released.\n\nSo it would be great if someone could fork it and at least apply all of the recent pull requests. Was a big Foundation for Sites supporter, but obviously this behavior has soured the angular community....\n. Just wanted to update that I've migrated to Angular Material and have no regrets... there honestly is no need for foundation-apps at this point!  Do yourself a favor and start migrating today... and hope that _someone_ actually replies and deprecates this project to avoid suckering anyone else in.  Goodbye Zurb!\n. I was able to force use of the latest via:\n\"foundation-apps\": \"git://github.com/zurb/foundation-apps.git#d5cebfaffe4395ccfc8dd5d6435f427fdb8c290b\"\n\nand using\n\"resolutions\": {\n  \"angular\": \"1.4.7\"\n}\n\nUnfortunately I think we need to start investigating alternative frameworks... I love Zurb but I think they have too much on their plate to support foundation-apps.\n. Thanks so much for the update - glad to hear it will be resurrected!  \n. After about a year of no activity after the first major release, I asked this:\nhttps://github.com/zurb/foundation-apps/issues/715\n\nAbout six months ago they said priorities would shift back to Foundation for Apps but we never saw a release after that. \n\nI'm not confident this will go anywhere... will need to transition my project to something else before we release.  Anyone have any good suggestions?\n. Thanks!  I'm trying to decide in the next 30 days if I should jump ship to http://circlingthesun.github.io/angular-foundation-6/  or see if this will be brought back from the dead.  Sadly it was pretty much dead immediately after the initial announcement years ago... \n. Yes, it's dead.  \n. They have been nearly silent since the first day this was released... and now won't provide updates via direct twitter request and (obviously) the frustration on github.  So no, they refuse to respond but happily sucker people in via their website that don't realize that it's been dead since it was released.\n\nSo it would be great if someone could fork it and at least apply all of the recent pull requests. Was a big Foundation for Sites supporter, but obviously this behavior has soured the angular community....\n. Just wanted to update that I've migrated to Angular Material and have no regrets... there honestly is no need for foundation-apps at this point!  Do yourself a favor and start migrating today... and hope that _someone_ actually replies and deprecates this project to avoid suckering anyone else in.  Goodbye Zurb!\n. ",
    "budiadiono": "I only changed one line, from this:\n`if(config[prop]) {`\nto be like this:\n`if(config[prop] !== undefined) {`\n\nbut Travis giving a lot of scary error messages, was that by me?\n. I only changed one line, from this:\n`if(config[prop]) {`\nto be like this:\n`if(config[prop] !== undefined) {`\n\nbut Travis giving a lot of scary error messages, was that by me?\n. ",
    "LittleHendrix": "Same issue on Windows 7 x64\n![capture](https://cloud.githubusercontent.com/assets/1037065/11342002/fe95e678-91fc-11e5-8277-38d52cbf2430.PNG)\n\nEverything installed (and accessible via CMD) on system as follows:\nfoundation-cli@2.0.0\nbundler 1.10.6\nsass 3.4.19\nnode v0.10.36\nnpm 1.4.28\nruby 2.1.7p400\n. Same issue on Windows 7 x64\n![capture](https://cloud.githubusercontent.com/assets/1037065/11342002/fe95e678-91fc-11e5-8277-38d52cbf2430.PNG)\n\nEverything installed (and accessible via CMD) on system as follows:\nfoundation-cli@2.0.0\nbundler 1.10.6\nsass 3.4.19\nnode v0.10.36\nnpm 1.4.28\nruby 2.1.7p400\n. ",
    "dredgerman": "Same in windows x64, installed all dependencies, foundation upgraded and followed instructions to letter in readme, makes software useless as can't even start a project!\n\n[tom@server ~]$ foundation-apps new myapp\nbash: foundation-apps: command not found\n[tom@server ~]$\n. Hi,\n\nThanks,\n\nAfter tearing my hair out for a number of days am moving to meteor instead,\n\nAppreciate the help,\n\nOn 26 November 2015 at 02:08, jimmycliff obonyo notifications@github.com\nwrote:\n\n> @dredgerman https://github.com/dredgerman @LittleHendrix\n> https://github.com/LittleHendrix @jessepinuelas\n> https://github.com/jessepinuelas Try including an alias for '\n> foundation-apps ' to the bash(CLI) config ,Do a simple google search on how\n> to !\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/718#issuecomment-159781867\n> .\n. how can a piece of software be developed as simple to use when following elementary steps will not allow use of the software? if it is not possible to get past install the its of no value, this is probably 3rd webapp framework I've trialed and not one of them works as advertised all are buggy and have undeclared hidden dependencies and can only be actually used if you wish to spend at least 3 days + troubleshooting the install and setup process which is hugely inefficient\n. Hi thankyou,  no there is no foundation apps at that location\nOn 24 Nov 2015 17:36, \"E.T.Cook\" notifications@github.com wrote:\n\n> Can you check to see if /usr/local/bin/foundation-apps exists?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/720#issuecomment-159328537\n> .\n> my node files are not installed by default for my user at /usr/local/bin this produces errors when using a normal user on server ssh, I have changed prefix (as instructed) to ensure I do not have to run sudo to install node which is incorrect way of doing things and causes permission errors. \n\nmy path is for example /home/tom/.nodemodglobal/bin/foundation which is a shortcut file of some kind, also the only foundation apps folders are in bower_components folders....\n. Hi,  I think someone replied to my other post and they have changed command\nto\n\n# foundation new\n\nThen a menu should pop up,\nIv moved to meteor now instead as its bit easier to implement and has\nbetter community around it,  especially angular meteor...\nOn 26 Nov 2015 18:35, \"Driglou\" notifications@github.com wrote:\n\n> I have exactly same problem.\n> \n> bash: foundation-apps: command not found\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/720#issuecomment-159965130\n> .\n. https://github.com/zurb/foundation-apps/issues/718\nOn 26 Nov 2015 19:56, \"Thomas Branley\" tombranley@googlemail.com wrote:\n\n> Hi,  I think someone replied to my other post and they have changed\n> command to\n> \n> # foundation new\n> \n> Then a menu should pop up,\n> Iv moved to meteor now instead as its bit easier to implement and has\n> better community around it,  especially angular meteor...\n> On 26 Nov 2015 18:35, \"Driglou\" notifications@github.com wrote:\n> \n> > I have exactly same problem.\n> > \n> > bash: foundation-apps: command not found\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/zurb/foundation-apps/issues/720#issuecomment-159965130\n> > .\n. it will not load that page at all in any browser, running apache server on centos with webmin/virtualmin interface, tried various methods of accessing that page and nothing works it should load in browser anyway automatically I thought?\n. when searching version, using foundation version, foundation -v or foundation --version or foundation-cli version or any of these variants get\n\n[tom@server myApp]$ foundation version\n\nmodule.js:340\n    throw err;\n          ^\nError: Cannot find module 'config-chain'\n    at Function.Module._resolveFilename (module.js:338:15)\n    at Function.Module._load (module.js:280:25)\n    at Module.require (module.js:364:17)\n    at require (module.js:380:17)\n    at Object.<anonymous> (/home/tom/.nodemodglobal/lib/node_modules/foundation-cli/node_modules/npm/lib/config/core.js:2:10)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.require (module.js:364:17)\n[tom@server myApp]$\n. The browser tries to load then times out and says could not load this\npage...\nOn 24 Nov 2015 16:45, \"Gerd Jungbluth\" notifications@github.com wrote:\n\n> What do you see when you visit http://localhost:8079 in your browser?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/721#issuecomment-159309042\n> .\n. latest attempt to run, checked iptables, port 8079 open, and server listening at this port on localhost but no joy...\n\n> foundation-apps-template@1.1.0 start /home/tom/myApp\n> gulp\n\n[14:42:45] Using gulpfile ~/myApp/gulpfile.js\n[14:42:45] Starting 'build'...\n[14:42:45] Starting 'clean'...\n[14:42:45] Finished 'clean' after 22 ms\n[14:42:45] Starting 'copy'...\n[14:42:45] Starting 'copy:foundation'...\n[14:42:46] Finished 'copy:foundation' after 398 ms\n[14:42:46] Starting 'sass'...\n[14:42:46] Starting 'uglify:foundation'...\n[14:42:46] Starting 'uglify:app'...\n[14:42:47] Finished 'copy' after 1.44 s\n[14:42:47] Finished 'uglify:app' after 205 ms\n[14:42:47] Finished 'uglify:foundation' after 628 ms\n[14:42:47] Starting 'uglify'...\n[14:42:47] Finished 'uglify' after 12 \u03bcs\n[14:42:47] Finished 'sass' after 1.74 s\n[14:42:47] Starting 'copy:templates'...\n[14:42:47] Finished 'copy:templates' after 16 ms\n[14:42:47] Finished 'build' after 2.2 s\n[14:42:47] Starting 'server'...\n[14:42:49] Webserver started at http://localhost:8079\n[14:42:49] Finished 'server' after 1.23 s\n[14:42:49] Starting 'default'...\n[14:42:49] Finished 'default' after 22 ms\n\nevents.js:72\n        throw er; // Unhandled 'error' event\n              ^\nError: listen EADDRINUSE\n    at errnoException (net.js:905:11)\n    at Server._listen2 (net.js:1043:14)\n    at listen (net.js:1065:10)\n    at net.js:1147:9\n    at asyncCallback (dns.js:68:16)\n    at Object.onanswer [as oncomplete](dns.js:121:9)\n\nnpm ERR! Linux 2.6.32-042stab108.2\nnpm ERR! argv \"node\" \"/home/tom/.nodemodglobal/bin/npm\" \"start\"\nnpm ERR! node v0.10.40\nnpm ERR! npm  v3.5.0\nnpm ERR! code ELIFECYCLE\nnpm ERR! foundation-apps-template@1.1.0 start: `gulp`\nnpm ERR! Exit status 8\nnpm ERR!\nnpm ERR! Failed at the foundation-apps-template@1.1.0 start script 'gulp'.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the foundation-apps-template package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     gulp\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls foundation-apps-template\nnpm ERR! There is likely additional logging output above.\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /home/tom/myApp/npm-debug.log\n[tom@server myApp]$\n\n[npm-debug.txt](https://github.com/zurb/foundation-apps/files/43128/npm-debug.txt)\n. https://github.com/zurb/foundation-apps/issues/147\n\nSee issue from almost exactly one year ago no resolution then either at least not one that helps... Carried out All these steps and no use,  running as su do is not a solution... \n. Get started building amazing websites with Foundation. We want to get you up and running as quickly as possible so you can build great things! \n\nWhat a joke.... \n. Same in windows x64, installed all dependencies, foundation upgraded and followed instructions to letter in readme, makes software useless as can't even start a project!\n\n[tom@server ~]$ foundation-apps new myapp\nbash: foundation-apps: command not found\n[tom@server ~]$\n. Hi,\n\nThanks,\n\nAfter tearing my hair out for a number of days am moving to meteor instead,\n\nAppreciate the help,\n\nOn 26 November 2015 at 02:08, jimmycliff obonyo notifications@github.com\nwrote:\n\n> @dredgerman https://github.com/dredgerman @LittleHendrix\n> https://github.com/LittleHendrix @jessepinuelas\n> https://github.com/jessepinuelas Try including an alias for '\n> foundation-apps ' to the bash(CLI) config ,Do a simple google search on how\n> to !\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/718#issuecomment-159781867\n> .\n. how can a piece of software be developed as simple to use when following elementary steps will not allow use of the software? if it is not possible to get past install the its of no value, this is probably 3rd webapp framework I've trialed and not one of them works as advertised all are buggy and have undeclared hidden dependencies and can only be actually used if you wish to spend at least 3 days + troubleshooting the install and setup process which is hugely inefficient\n. Hi thankyou,  no there is no foundation apps at that location\nOn 24 Nov 2015 17:36, \"E.T.Cook\" notifications@github.com wrote:\n\n> Can you check to see if /usr/local/bin/foundation-apps exists?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/720#issuecomment-159328537\n> .\n> my node files are not installed by default for my user at /usr/local/bin this produces errors when using a normal user on server ssh, I have changed prefix (as instructed) to ensure I do not have to run sudo to install node which is incorrect way of doing things and causes permission errors. \n\nmy path is for example /home/tom/.nodemodglobal/bin/foundation which is a shortcut file of some kind, also the only foundation apps folders are in bower_components folders....\n. Hi,  I think someone replied to my other post and they have changed command\nto\n\n# foundation new\n\nThen a menu should pop up,\nIv moved to meteor now instead as its bit easier to implement and has\nbetter community around it,  especially angular meteor...\nOn 26 Nov 2015 18:35, \"Driglou\" notifications@github.com wrote:\n\n> I have exactly same problem.\n> \n> bash: foundation-apps: command not found\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/720#issuecomment-159965130\n> .\n. https://github.com/zurb/foundation-apps/issues/718\nOn 26 Nov 2015 19:56, \"Thomas Branley\" tombranley@googlemail.com wrote:\n\n> Hi,  I think someone replied to my other post and they have changed\n> command to\n> \n> # foundation new\n> \n> Then a menu should pop up,\n> Iv moved to meteor now instead as its bit easier to implement and has\n> better community around it,  especially angular meteor...\n> On 26 Nov 2015 18:35, \"Driglou\" notifications@github.com wrote:\n> \n> > I have exactly same problem.\n> > \n> > bash: foundation-apps: command not found\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/zurb/foundation-apps/issues/720#issuecomment-159965130\n> > .\n. it will not load that page at all in any browser, running apache server on centos with webmin/virtualmin interface, tried various methods of accessing that page and nothing works it should load in browser anyway automatically I thought?\n. when searching version, using foundation version, foundation -v or foundation --version or foundation-cli version or any of these variants get\n\n[tom@server myApp]$ foundation version\n\nmodule.js:340\n    throw err;\n          ^\nError: Cannot find module 'config-chain'\n    at Function.Module._resolveFilename (module.js:338:15)\n    at Function.Module._load (module.js:280:25)\n    at Module.require (module.js:364:17)\n    at require (module.js:380:17)\n    at Object.<anonymous> (/home/tom/.nodemodglobal/lib/node_modules/foundation-cli/node_modules/npm/lib/config/core.js:2:10)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.require (module.js:364:17)\n[tom@server myApp]$\n. The browser tries to load then times out and says could not load this\npage...\nOn 24 Nov 2015 16:45, \"Gerd Jungbluth\" notifications@github.com wrote:\n\n> What do you see when you visit http://localhost:8079 in your browser?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/721#issuecomment-159309042\n> .\n. latest attempt to run, checked iptables, port 8079 open, and server listening at this port on localhost but no joy...\n\n> foundation-apps-template@1.1.0 start /home/tom/myApp\n> gulp\n\n[14:42:45] Using gulpfile ~/myApp/gulpfile.js\n[14:42:45] Starting 'build'...\n[14:42:45] Starting 'clean'...\n[14:42:45] Finished 'clean' after 22 ms\n[14:42:45] Starting 'copy'...\n[14:42:45] Starting 'copy:foundation'...\n[14:42:46] Finished 'copy:foundation' after 398 ms\n[14:42:46] Starting 'sass'...\n[14:42:46] Starting 'uglify:foundation'...\n[14:42:46] Starting 'uglify:app'...\n[14:42:47] Finished 'copy' after 1.44 s\n[14:42:47] Finished 'uglify:app' after 205 ms\n[14:42:47] Finished 'uglify:foundation' after 628 ms\n[14:42:47] Starting 'uglify'...\n[14:42:47] Finished 'uglify' after 12 \u03bcs\n[14:42:47] Finished 'sass' after 1.74 s\n[14:42:47] Starting 'copy:templates'...\n[14:42:47] Finished 'copy:templates' after 16 ms\n[14:42:47] Finished 'build' after 2.2 s\n[14:42:47] Starting 'server'...\n[14:42:49] Webserver started at http://localhost:8079\n[14:42:49] Finished 'server' after 1.23 s\n[14:42:49] Starting 'default'...\n[14:42:49] Finished 'default' after 22 ms\n\nevents.js:72\n        throw er; // Unhandled 'error' event\n              ^\nError: listen EADDRINUSE\n    at errnoException (net.js:905:11)\n    at Server._listen2 (net.js:1043:14)\n    at listen (net.js:1065:10)\n    at net.js:1147:9\n    at asyncCallback (dns.js:68:16)\n    at Object.onanswer [as oncomplete](dns.js:121:9)\n\nnpm ERR! Linux 2.6.32-042stab108.2\nnpm ERR! argv \"node\" \"/home/tom/.nodemodglobal/bin/npm\" \"start\"\nnpm ERR! node v0.10.40\nnpm ERR! npm  v3.5.0\nnpm ERR! code ELIFECYCLE\nnpm ERR! foundation-apps-template@1.1.0 start: `gulp`\nnpm ERR! Exit status 8\nnpm ERR!\nnpm ERR! Failed at the foundation-apps-template@1.1.0 start script 'gulp'.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the foundation-apps-template package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     gulp\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls foundation-apps-template\nnpm ERR! There is likely additional logging output above.\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /home/tom/myApp/npm-debug.log\n[tom@server myApp]$\n\n[npm-debug.txt](https://github.com/zurb/foundation-apps/files/43128/npm-debug.txt)\n. https://github.com/zurb/foundation-apps/issues/147\n\nSee issue from almost exactly one year ago no resolution then either at least not one that helps... Carried out All these steps and no use,  running as su do is not a solution... \n. Get started building amazing websites with Foundation. We want to get you up and running as quickly as possible so you can build great things! \n\nWhat a joke.... \n. ",
    "obonyojimmy": "@dredgerman @LittleHendrix  @jessepinuelas  Try including an alias for  ' foundation-apps ' to the bash(CLI) config ,Do a simple google search on how to !\n. @ansorg you need to build you project before you see any changes on your app , did you do `gulp` in CLI ?\n. #SOLVED \ni solved this in Laravel by using `php artisan serve` which basically run the php based server and configures server links automatically\n. @dredgerman @LittleHendrix  @jessepinuelas  Try including an alias for  ' foundation-apps ' to the bash(CLI) config ,Do a simple google search on how to !\n. @ansorg you need to build you project before you see any changes on your app , did you do `gulp` in CLI ?\n. #SOLVED \ni solved this in Laravel by using `php artisan serve` which basically run the php based server and configures server links automatically\n. ",
    "myhusam": "Hi guys, \n\nI think you just need to type `foundation new'  then you'll choose the one you need App, Site or Mail.\n\n![foundation-cli](https://dl.dropboxusercontent.com/u/25503484/foundationApp.png)\n. Hi guys, \n\nI think you just need to type `foundation new'  then you'll choose the one you need App, Site or Mail.\n\n![foundation-cli](https://dl.dropboxusercontent.com/u/25503484/foundationApp.png)\n. ",
    "jessepinuelas": "@obonyojimmy @etcook creating the alias to foundation-apps did the trick.  \n. @obonyojimmy @etcook creating the alias to foundation-apps did the trick.  \n. ",
    "ansorg": "Ok, I get the menu. But arrow keys don't allow to select an option, they work on the underlying command line instead (bring up previously entered commands)\nThis is on Windows 10\n. Ok, I get the menu. But arrow keys don't allow to select an option, they work on the underlying command line instead (bring up previously entered commands)\nThis is on Windows 10\n. ",
    "lanluu": "I face the same problem like ansorg's one where I cannot select the second option \"A web app\" with arrow keys. It is on Windows 8. Do you guys have any tip for me?\n. I face the same problem like ansorg's one where I cannot select the second option \"A web app\" with arrow keys. It is on Windows 8. Do you guys have any tip for me?\n. ",
    "lorenjerickson": "Same arrow key problem here, windows 10.  not a good first impression....\n. Same arrow key problem here, windows 10.  not a good first impression....\n. ",
    "danielemanca1983": "I am having the same silly problem, I have the foundation cli installed globally, but when I try to run the command foundation-apps new, to create a new project, the command line tells me the command cannot be found, this is on Windows 10 too\n. I am having the same silly problem, I have the foundation cli installed globally, but when I try to run the command foundation-apps new, to create a new project, the command line tells me the command cannot be found, this is on Windows 10 too\n. ",
    "Sfathy": "the command changed to foundation not foundation-app\n. the command changed to foundation not foundation-app\n. ",
    "cmyk": "Just installed node 6.11 and did a ```npm install --global foundation-cli```.\r\nThe ```foundation``` command is not found.\r\nThis is on Sierra 10.12.5.. Just installed node 6.11 and did a ```npm install --global foundation-cli```.\r\nThe ```foundation``` command is not found.\r\nThis is on Sierra 10.12.5.. ",
    "driglou": "I have exactly same problem.\n\nbash: foundation-apps: command not found\n. oh. Thanks. Anyway I still had problems with old cli of Foundation, so if anyone has problems, just make sure you clean any cli from foundation 5.\n. I have exactly same problem.\n\nbash: foundation-apps: command not found\n. oh. Thanks. Anyway I still had problems with old cli of Foundation, so if anyone has problems, just make sure you clean any cli from foundation 5.\n. ",
    "waterlink": "Installation docs still say `foundation-apps new myApp`..\n. @gakimball Thanks!\n. Installation docs still say `foundation-apps new myApp`..\n. @gakimball Thanks!\n. ",
    "blackhoundlabs": "@dredgerman you are so right!!!\nsecond day with correction of their npm dependencies - as quickly as possible\n. @dredgerman you are so right!!!\nsecond day with correction of their npm dependencies - as quickly as possible\n. ",
    "seckt0r": "I second that question.\n. I second that question.\n. ",
    "dmgctrlr": "Third\n. Third\n. ",
    "tlkiong": "This happens because one of your dependencies uses angular version < 1.4 (which is the prerequisite for foundation to work on).\n\nHow I solved it was by using [bower resolutions](http://jaketrent.com/post/bower-resolutions/).\nCheck it out. \nEg:\n\n``` json\n\"resolutions\": {\n      \"angular\": \"1.4.6\"\n}\n```\n. This happens because one of your dependencies uses angular version < 1.4 (which is the prerequisite for foundation to work on).\n\nHow I solved it was by using [bower resolutions](http://jaketrent.com/post/bower-resolutions/).\nCheck it out. \nEg:\n\n``` json\n\"resolutions\": {\n      \"angular\": \"1.4.6\"\n}\n```\n. ",
    "jose-nunez": "Magically it's working now without this solution... another mystery of the universe I guess.\nThank you for your help\n. Magically it's working now without this solution... another mystery of the universe I guess.\nThank you for your help\n. ",
    "dexster": "Would love to see this one fixed. Annoying that I have to handle animations manually when this is built-in  \n- Modal animation-in motion class not animating #616\n. Would love to see this one fixed. Annoying that I have to handle animations manually when this is built-in  \n- Modal animation-in motion class not animating #616\n. ",
    "agianikas": "Will this update include Angular 1.4?\n. Will this update include Angular 1.4?\n. ",
    "soyuka": "What could prevent it from working? I'll try again locally!\n. It works well, I'm building with `node-sass` by including both `foundation-sites` and `foundation-apps` directories to the `includePaths` option. \n\nFor now I'm only using table, breadcrumbs and the [`form-middle-label`](https://github.com/zurb/foundation-sites/blob/57311d764b163d37e31c9df29d971ae01a4524a7/scss/forms/_label.scss#L34) mixin. Using the `foundation-forms` mixin will fail, as stated above.\n\nMaybe that those components will get into `foundation-apps`?\n\nWhat are you trying to include on top of what's already available with `foundation-apps`?\n. You can use the action sheet for the Tooltip.\nFor the top bar I use a mix of title bar and menu (_'d have to check_). \n\nFor the rest :+1: \n. @gakimball I'd be glad to make a Pull request about those missing components if you need me to.\n. +1 would love to see those\n\nI think that the list from @marleneclayton is a good start, IMHO most of foundation-sites components could be reused, except those that really belong to a \"website\" (orbit, slider, flex-video). \nAlso, I really like what you've achieved with the action sheet that can easily be used for dropdowns, tooltips, typeahed (made a small proto and it did well) etc.\n\nFor the integration, I don't see why foundation-apps could not depend on the foundation-sites scss :).\n. Indeed @gakimball, that was also my thought while going through both docs. There is also [angular-foundation](https://github.com/pineconellc/angular-foundation), but I prefer your work, it feels more \"natural\". Also, angular v2 is now in beta stage.\n\nMay I ask why you build `foundation-apps` in the first place?\n. @gakimball is it possible to follow discussions/ideas somewhere?\n. Is the grid not the same as the new `flex` grid from Sites? \n\n+1 about the shared scss base components ofc.\n. They should really mention on the docs that one should not use foundation-apps... Last update 9 dec 2015, issues count is growing and using a specific JS (read forcing the use of) framework on a front-end framework (read css) isn't a good idea (see good comments above).\n. About tests `npm install` fails. #747 fix those errors.\n. #747 \n. What could prevent it from working? I'll try again locally!\n. It works well, I'm building with `node-sass` by including both `foundation-sites` and `foundation-apps` directories to the `includePaths` option. \n\nFor now I'm only using table, breadcrumbs and the [`form-middle-label`](https://github.com/zurb/foundation-sites/blob/57311d764b163d37e31c9df29d971ae01a4524a7/scss/forms/_label.scss#L34) mixin. Using the `foundation-forms` mixin will fail, as stated above.\n\nMaybe that those components will get into `foundation-apps`?\n\nWhat are you trying to include on top of what's already available with `foundation-apps`?\n. You can use the action sheet for the Tooltip.\nFor the top bar I use a mix of title bar and menu (_'d have to check_). \n\nFor the rest :+1: \n. @gakimball I'd be glad to make a Pull request about those missing components if you need me to.\n. +1 would love to see those\n\nI think that the list from @marleneclayton is a good start, IMHO most of foundation-sites components could be reused, except those that really belong to a \"website\" (orbit, slider, flex-video). \nAlso, I really like what you've achieved with the action sheet that can easily be used for dropdowns, tooltips, typeahed (made a small proto and it did well) etc.\n\nFor the integration, I don't see why foundation-apps could not depend on the foundation-sites scss :).\n. Indeed @gakimball, that was also my thought while going through both docs. There is also [angular-foundation](https://github.com/pineconellc/angular-foundation), but I prefer your work, it feels more \"natural\". Also, angular v2 is now in beta stage.\n\nMay I ask why you build `foundation-apps` in the first place?\n. @gakimball is it possible to follow discussions/ideas somewhere?\n. Is the grid not the same as the new `flex` grid from Sites? \n\n+1 about the shared scss base components ofc.\n. They should really mention on the docs that one should not use foundation-apps... Last update 9 dec 2015, issues count is growing and using a specific JS (read forcing the use of) framework on a front-end framework (read css) isn't a good idea (see good comments above).\n. About tests `npm install` fails. #747 fix those errors.\n. #747 \n. ",
    "rcpaul": "Currently, panels only close automatically when links are clicked when the window is small. See https://github.com/zurb/foundation-apps/blob/master/js/angular/components/panel/panel.js#L156.\n. Currently, panels only close automatically when links are clicked when the window is small. See https://github.com/zurb/foundation-apps/blob/master/js/angular/components/panel/panel.js#L156.\n. ",
    "marleneclayton": "I've run into a similar issue. I want to use components from Foundation Sites on Apps. Did you run into a lot of problems bringing components from Sites into Apps? Or was it only specific components that didn't work for you? \n\nHope we learn a solution to this soon!\n. I'll have to give that a try. I wasn't sure where I could include those files where there wouldn't be a conflict or if including any foreign components would be problematic.\n\nI would hope that Foundation Apps gets more components like Sites. Things still feel a little limited on this release, but I think it's a good start for building responsive web apps.\n\nI'm working on a dashboard so presenting data is a big part of it. I found that some of the components are categorized a little bit on Sites and Apps, but similar function.\n\nFoundation Sites components that\u2019s not in Foundation Apps\n- Top bar menu (I think Apps has something similar)\n- Responsive Navigation\n- Dropdown Menu (I think Apps uses action sheet)\n- Pagination\n- Breadcrumbs\n- Table\n- Progress Bar\n- Tooltip\n- Form validation (this is a big one)\n. This is a great discussion! Thanks for your insight @soumak77, @gakimball, and @soyuka!\nI am trying to build a dashboard with Foundation 6 Apps as my base and then integrating Rails into the app. I'm trying to see if I can just \"rip\" out the components that I need from Foundation 6 Sites without breaking dependencies, if any.\n. I've run into a similar issue. I want to use components from Foundation Sites on Apps. Did you run into a lot of problems bringing components from Sites into Apps? Or was it only specific components that didn't work for you? \n\nHope we learn a solution to this soon!\n. I'll have to give that a try. I wasn't sure where I could include those files where there wouldn't be a conflict or if including any foreign components would be problematic.\n\nI would hope that Foundation Apps gets more components like Sites. Things still feel a little limited on this release, but I think it's a good start for building responsive web apps.\n\nI'm working on a dashboard so presenting data is a big part of it. I found that some of the components are categorized a little bit on Sites and Apps, but similar function.\n\nFoundation Sites components that\u2019s not in Foundation Apps\n- Top bar menu (I think Apps has something similar)\n- Responsive Navigation\n- Dropdown Menu (I think Apps uses action sheet)\n- Pagination\n- Breadcrumbs\n- Table\n- Progress Bar\n- Tooltip\n- Form validation (this is a big one)\n. This is a great discussion! Thanks for your insight @soumak77, @gakimball, and @soyuka!\nI am trying to build a dashboard with Foundation 6 Apps as my base and then integrating Rails into the app. I'm trying to see if I can just \"rip\" out the components that I need from Foundation 6 Sites without breaking dependencies, if any.\n. ",
    "hguiney": "@soyuka I would actually like flex-video in foundation-apps. I am surprised and annoyed that the two don't share UI components 100%. I feel the components from sites should at least be optional includes in apps.\n\nThis makes the choice between the two especially difficult for me, because I want the sites components but in Angular. There is [Foundation Ultra](https://github.com/RelutionDev/foundationUltra), but I am implementing Foundation for a client and I don't want them to be stuck with an unofficial, immature, spin-off project that lacks documentation (and is possibly at risk of becoming unmaintained).\n. @gakimball Thanks for your reply. What would be the recommended way of importing F6S components into F6A using Sass currently, and preserving my ability to upgrade? Do I just install F6S into a separate folder, and then `@import` certain SCSS files? I take it there would be clashes if I blindly imported everything?\n. @metal-gogo No, I had to use an alternative mixin, [sass-burger](https://github.com/jorenvanhee/sass-burger).\n. @soyuka I would actually like flex-video in foundation-apps. I am surprised and annoyed that the two don't share UI components 100%. I feel the components from sites should at least be optional includes in apps.\n\nThis makes the choice between the two especially difficult for me, because I want the sites components but in Angular. There is [Foundation Ultra](https://github.com/RelutionDev/foundationUltra), but I am implementing Foundation for a client and I don't want them to be stuck with an unofficial, immature, spin-off project that lacks documentation (and is possibly at risk of becoming unmaintained).\n. @gakimball Thanks for your reply. What would be the recommended way of importing F6S components into F6A using Sass currently, and preserving my ability to upgrade? Do I just install F6S into a separate folder, and then `@import` certain SCSS files? I take it there would be clashes if I blindly imported everything?\n. @metal-gogo No, I had to use an alternative mixin, [sass-burger](https://github.com/jorenvanhee/sass-burger).\n. ",
    "cfator": "What is this foundation-sites vs. foundation-apps? \n\nThis is a really odd naming scheme given the continued grey area expanding between the concept of \"sites\" and \"apps\".  I'm am building an App (with Ember) yet I find myself using \"sites\" (with ember-cli-foundation-6-sass).\n. What is this foundation-sites vs. foundation-apps? \n\nThis is a really odd naming scheme given the continued grey area expanding between the concept of \"sites\" and \"apps\".  I'm am building an App (with Ember) yet I find myself using \"sites\" (with ember-cli-foundation-6-sass).\n. ",
    "tinyfly": "Excited about version 2. It be nice to have this be basically a wrapper around Foundation for Sites with angular compatible widgets.\n. Excited about version 2. It be nice to have this be basically a wrapper around Foundation for Sites with angular compatible widgets.\n. ",
    "GCheung55": "I'm interested in using Foundation with Ember. While it's possible to use F4S, F4A definitely not. As @soumak77 mentioned earlier, it would be great if F4A was agnostic in such a way that it could be wrapped by other frameworks, such as Ember. This would enable Foundation to be even more widely used.\n. I'm interested in using Foundation with Ember. While it's possible to use F4S, F4A definitely not. As @soumak77 mentioned earlier, it would be great if F4A was agnostic in such a way that it could be wrapped by other frameworks, such as Ember. This would enable Foundation to be even more widely used.\n. ",
    "edhatricksmith": "@gakimball - any update on a rough release estimate for Foundation Apps/Sites for Angular 2? We've started a project where we may need to work on some form of polyfill to get the Foundation JS dependancies working for us in the short term. However if a release is on the horizon that would save us a fair bit of work.\n. @gakimball - fair enough, thanks anyway.\n\nAnyone else have any info?\n. @gakimball - any update on a rough release estimate for Foundation Apps/Sites for Angular 2? We've started a project where we may need to work on some form of polyfill to get the Foundation JS dependancies working for us in the short term. However if a release is on the horizon that would save us a fair bit of work.\n. @gakimball - fair enough, thanks anyway.\n\nAnyone else have any info?\n. ",
    "MartinDann": "Have you set the sass variable below in your _settings.scss?\n`$offcanvas-frame-selector: '.grid-frame';`\n. Have you set the sass variable below in your _settings.scss?\n`$offcanvas-frame-selector: '.grid-frame';`\n. ",
    "svajiraya": "Not sure if issue was resolved. Closing as this is not relevant to the project anymore. moved it to a different framework. . Not sure if issue was resolved. Closing as this is not relevant to the project anymore. moved it to a different framework. . ",
    "alexkushner": "Cool! Thanks for the pointer! I missed that PR somehow.  Model binding is even better, although I suppose it's incomplete as scope.active = false in the link function would always override whatever is passed in, no?\n. Cool! Thanks for the pointer! I missed that PR somehow.  Model binding is even better, although I suppose it's incomplete as scope.active = false in the link function would always override whatever is passed in, no?\n. ",
    "subpublic": "Sorry, just forgot to include the javascript!\n. Sorry, just forgot to include the javascript!\n. ",
    "givan2code": "Thank you for this. You've helped!\n. Thank you for this. You've helped!\n. ",
    "weagle08": "ok, thanks for the info\n. ok, thanks for the info\n. ",
    "gorelog": "Running `bower install` revealed permission issues with /home/vagrant/.local/share/bower.\n\n`Error: EACCES: permission denied, mkdir '/home/vagrant/.local/share/bower/empty'`\n\nCreating the following directories: /home/vagrant/.local/share/bower and /home/vagrant/.local/share/bower/empty and then running `bower install --allow-root` fixed me up.\n. Running `bower install` revealed permission issues with /home/vagrant/.local/share/bower.\n\n`Error: EACCES: permission denied, mkdir '/home/vagrant/.local/share/bower/empty'`\n\nCreating the following directories: /home/vagrant/.local/share/bower and /home/vagrant/.local/share/bower/empty and then running `bower install --allow-root` fixed me up.\n. ",
    "edyonil": "I did not understand. This is a problem in travis?\n. Where is this in the documentation? @JoshEllinger . \n. I did not understand. This is a problem in travis?\n. Where is this in the documentation? @JoshEllinger . \n. ",
    "JoshEllinger": "This already exists you can use the format:\ncontroller: AtivacaoController as ativacaoCtrl\n. Trial and error is your friend :) don't think it's documented.\n. This already exists you can use the format:\ncontroller: AtivacaoController as ativacaoCtrl\n. Trial and error is your friend :) don't think it's documented.\n. ",
    "rachelreveley": "**This also works**\n\n```\n            <div zf-panel=\"\" id=\"help\" position=\"bottom\">\n                <a zf-close=\"\" class=\"close-button\">\u00d7</a>\n                <div>\n                    <div class=\"grid-content\">\n                        <h3>Get help</h3>\n                    </div>\n                </div>\n            </div>\n```\n\n**But not this**\n\n```\n            <div zf-panel=\"\" id=\"help\" position=\"bottom\">\n                <a zf-close=\"\" class=\"close-button\">\u00d7</a>\n                <div>\n                    <div class=\"grid-block\">\n                        <div class=\"grid-content\">\n                            <h3>Get help</h3>\n                        </div>\n                    </div>\n                </div>\n            </div>\n```\n\nMy conclusion is that it only breaks when there are 2 levels of nested divs with classes. Unfortunately you need 2 levels for the grid to work.\n. **This also works**\n\n```\n            <div zf-panel=\"\" id=\"help\" position=\"bottom\">\n                <a zf-close=\"\" class=\"close-button\">\u00d7</a>\n                <div>\n                    <div class=\"grid-content\">\n                        <h3>Get help</h3>\n                    </div>\n                </div>\n            </div>\n```\n\n**But not this**\n\n```\n            <div zf-panel=\"\" id=\"help\" position=\"bottom\">\n                <a zf-close=\"\" class=\"close-button\">\u00d7</a>\n                <div>\n                    <div class=\"grid-block\">\n                        <div class=\"grid-content\">\n                            <h3>Get help</h3>\n                        </div>\n                    </div>\n                </div>\n            </div>\n```\n\nMy conclusion is that it only breaks when there are 2 levels of nested divs with classes. Unfortunately you need 2 levels for the grid to work.\n. ",
    "metal-gogo": "Same issue here... @hguiney did you find a solution?\n. There was an issue that was created by the way the sass code for the text alignment utilities. It compiled the left alignment in all the breakpoints, then the right alignment in all the breakpoints, and so on.\n. No one with write access merged the pull request.. Same issue here... @hguiney did you find a solution?\n. There was an issue that was created by the way the sass code for the text alignment utilities. It compiled the left alignment in all the breakpoints, then the right alignment in all the breakpoints, and so on.\n. No one with write access merged the pull request.. ",
    "aptogo": "You can demonstrate the leak from zfIconic by using the Chrome Dev timeline while viewing http://foundation.zurb.com/apps/docs and repeatedly switching between the Iconic tab and the Typography tab.\n\n<img width=\"1022\" alt=\"screenshot 2016-04-09 11 18 52\" src=\"https://cloud.githubusercontent.com/assets/442016/14403166/26fb0b66-fe45-11e5-8d4a-0efbce245f7f.png\">\n. You can demonstrate the leak from zfIconic by using the Chrome Dev timeline while viewing http://foundation.zurb.com/apps/docs and repeatedly switching between the Iconic tab and the Typography tab.\n\n<img width=\"1022\" alt=\"screenshot 2016-04-09 11 18 52\" src=\"https://cloud.githubusercontent.com/assets/442016/14403166/26fb0b66-fe45-11e5-8d4a-0efbce245f7f.png\">\n. ",
    "Silur": "Thank you :)\n I came up with this solution too, but if we are using angular, what can handle nested directives then an angular-based framework should be able to handle it too. That's what I mean under \"fixed\"\n. Thank you :)\n I came up with this solution too, but if we are using angular, what can handle nested directives then an angular-based framework should be able to handle it too. That's what I mean under \"fixed\"\n. ",
    "TravisMullen": "Fun Fact: This uses CSS `calc()` to achieve the desired results. [caniuse.com/calc](http://caniuse.com/#feat=calc)\n. Fun Fact: This uses CSS `calc()` to achieve the desired results. [caniuse.com/calc](http://caniuse.com/#feat=calc)\n. ",
    "ashitanojoe": "Our UX designer used foundation for apps to prototype our latest app. Imagine my excitement when I realized I could just use these prototypes pretty much as-is, saving me a lot of work. This excitement was short lived though, as I quickly began to run into a lot of the same issues that have been submitted here.\n\nFive months without a commit is not a good sign. It's unfortunate because there is so much potential here.\n. Our UX designer used foundation for apps to prototype our latest app. Imagine my excitement when I realized I could just use these prototypes pretty much as-is, saving me a lot of work. This excitement was short lived though, as I quickly began to run into a lot of the same issues that have been submitted here.\n\nFive months without a commit is not a good sign. It's unfortunate because there is so much potential here.\n. ",
    "DaSchTour": "Somewhere I heard a rumor about a version 2 that they heavily work on, that should be more compatible with foundation-sites 6 and use angular 2. But maybe this also was just something of a dream :D\n. I think the best would be to start an Angular 2 Implementation f\u00fcr Foundation 6 jQuery Components. Biggest benefit with very few CSS-Work.\n. Somewhere I heard a rumor about a version 2 that they heavily work on, that should be more compatible with foundation-sites 6 and use angular 2. But maybe this also was just something of a dream :D\n. I think the best would be to start an Angular 2 Implementation f\u00fcr Foundation 6 jQuery Components. Biggest benefit with very few CSS-Work.\n. ",
    "napcat": "I was about to start a really big project with this, but I looked at the git changes history and I was scared...\n\nThe circlingthesun suggestion, looks a good bet, but is not yet fully converted.\n\nI think I will need to find another framework to work with. Does any one recommend any using angularjs? I'm looking for something not \"close\", flexible, with all the basic components and that could be easily editable...\n. I was about to start a really big project with this, but I looked at the git changes history and I was scared...\n\nThe circlingthesun suggestion, looks a good bet, but is not yet fully converted.\n\nI think I will need to find another framework to work with. Does any one recommend any using angularjs? I'm looking for something not \"close\", flexible, with all the basic components and that could be easily editable...\n. ",
    "Gambero81": "we need official news from ZURB... we have this framework on production projects...\n. There is an official communication from zurb about project state?\n. someone have commercial support from zurb? can try to contact for official news?\n. we need official news from ZURB... we have this framework on production projects...\n. There is an official communication from zurb about project state?\n. someone have commercial support from zurb? can try to contact for official news?\n. ",
    "SCKelemen": "It's dead, Jim.\n. It's dead, Jim.\n. ",
    "svstartuplab": "I talked to Zurb\u2019s lead engineer yesterday evening at a Meetup at Zurb.  Foundation for Apps is deprecated.  The people who were working on it left the company about a year ago.  They are discussing making Foundation 6 plug-ins for Angular, Ember, and React but development is sometime in the future, at least a year away. \n\nZurb\u2019s main product for their clients is design and they deliver 5 html pages with a style guide.  They don\u2019t seem to be developing single page apps and didn\u2019t discuss that during the Meetup.\n\nI'll move over to Angular Base as others here have done.\n. As of yesterday Zurb is looking for someone to lead Foundation dev.  My guess is that they are losing talent to Google, et al.  Not a small issue here in Silicon Valley.  They've had to narrow their focus to fit their current resources.\n. I talked to Zurb\u2019s lead engineer yesterday evening at a Meetup at Zurb.  Foundation for Apps is deprecated.  The people who were working on it left the company about a year ago.  They are discussing making Foundation 6 plug-ins for Angular, Ember, and React but development is sometime in the future, at least a year away. \n\nZurb\u2019s main product for their clients is design and they deliver 5 html pages with a style guide.  They don\u2019t seem to be developing single page apps and didn\u2019t discuss that during the Meetup.\n\nI'll move over to Angular Base as others here have done.\n. As of yesterday Zurb is looking for someone to lead Foundation dev.  My guess is that they are losing talent to Google, et al.  Not a small issue here in Silicon Valley.  They've had to narrow their focus to fit their current resources.\n. ",
    "danieldalonzo": "Looks like you and Andrew have some automation setup that is triggering\nprematurely! That could have been your strategy, though.\n\nDaniel D'Alonzo | 908-836-4383 http://danieldalonzo.com\n\nOn Fri, Aug 19, 2016 9:20 PM, Laurent Le Graverend notifications@github.com wrote:\nGood to know, thanks!\n\nWhile most of us were waiting for months for updates, the project was already\ndead... It will be hard to trust Zurb in the future...\n\nThe Open Source world drawbacks!\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub , or mute the thread .\n. Looks like you and Andrew have some automation setup that is triggering\nprematurely! That could have been your strategy, though.\n\nDaniel D'Alonzo | 908-836-4383 http://danieldalonzo.com\n\nOn Fri, Aug 19, 2016 9:20 PM, Laurent Le Graverend notifications@github.com wrote:\nGood to know, thanks!\n\nWhile most of us were waiting for months for updates, the project was already\ndead... It will be hard to trust Zurb in the future...\n\nThe Open Source world drawbacks!\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub , or mute the thread .\n. ",
    "andrewbiddinger": "Ok, so I was able to do \"npm install\" by editing package.json file, under devDependencies change \"gulp\": \"gulpjs/gulp#4.0\u201d, to \"gulp\": \"gulpjs/gulp\u201d, and \"gulp-cli\": \"gulpjs/gulp-cli#4.0\u201d to \"gulp-cli\": \"gulpjs/gulp-cli\u201d See: \nhttp://stackoverflow.com/questions/37829902/foundation-project-creation-fails-with-npm-err-git-rev-list-on-debian-8-5-0/37867250#37867250\n\nAnd: http://foundation.zurb.com/forum/posts/44400-foundation-new-with-zurb-template-fails-with-npm-err-on-debian-850\n\nI wonder why the 4.0 is causing it to fail? Maybe this is something in the package that needs to change?\n. Ok, so I was able to do \"npm install\" by editing package.json file, under devDependencies change \"gulp\": \"gulpjs/gulp#4.0\u201d, to \"gulp\": \"gulpjs/gulp\u201d, and \"gulp-cli\": \"gulpjs/gulp-cli#4.0\u201d to \"gulp-cli\": \"gulpjs/gulp-cli\u201d See: \nhttp://stackoverflow.com/questions/37829902/foundation-project-creation-fails-with-npm-err-git-rev-list-on-debian-8-5-0/37867250#37867250\n\nAnd: http://foundation.zurb.com/forum/posts/44400-foundation-new-with-zurb-template-fails-with-npm-err-on-debian-850\n\nI wonder why the 4.0 is causing it to fail? Maybe this is something in the package that needs to change?\n. ",
    "jarrydfillmore": "Thanks!\n. Strange..\n. Thanks!\n. Strange..\n. ",
    "sstativa": "I've also noticed this issue. In addition to this, `overlay` and `overlayClose` don't work for me as expected. No matter what value I set, the behaviour is like `overlay: true, overlayClose: true`.\n\nUpdated:\nApparently, this is documentation error because the source code has a comment that states the value should be a string \n. I suppose the issue is not a bug, but it was originally designed like that, however, I cannot prove it. I personally prefer when the modal is added into DOM then removed from DOM after close.\n\nIf you look at [foundation.modal](http://foundation.zurb.com/apps/docs/#!/angular-modules) section you will find a kind of interesting example. It looks like the purpose of the factory is to create the modal when controller is initialised, then access the modal as a regular object.\n\nThat's just my thoughts. \n. I've also noticed this issue. In addition to this, `overlay` and `overlayClose` don't work for me as expected. No matter what value I set, the behaviour is like `overlay: true, overlayClose: true`.\n\nUpdated:\nApparently, this is documentation error because the source code has a comment that states the value should be a string \n. I suppose the issue is not a bug, but it was originally designed like that, however, I cannot prove it. I personally prefer when the modal is added into DOM then removed from DOM after close.\n\nIf you look at [foundation.modal](http://foundation.zurb.com/apps/docs/#!/angular-modules) section you will find a kind of interesting example. It looks like the purpose of the factory is to create the modal when controller is initialised, then access the modal as a regular object.\n\nThat's just my thoughts. \n. ",
    "sumit-cis": "Yeah,\nvalue   `js overlay`  adn `js overlay` value should be string , but I dont wanna false `js overlayClose` disable.\n. I have already created Service for open & close model.  yeah already gone through the documents,  but its not work, means Model element not removed from DOM After close it \n. Thanks for providing the requested information :)\n. Yeah,\nvalue   `js overlay`  adn `js overlay` value should be string , but I dont wanna false `js overlayClose` disable.\n. I have already created Service for open & close model.  yeah already gone through the documents,  but its not work, means Model element not removed from DOM After close it \n. Thanks for providing the requested information :)\n. ",
    "DecentGradient": "Thank?\n\nOn Fri, Jul 29, 2016, 7:52 PM Brian Soumakian notifications@github.com\nwrote:\n\n> @HuemanF https://github.com/HuemanF I believe this is simply due to how\n> the SCSS is structured. The resulting behavior for grid-block (flex-flow:\n> row nowrap) is intended. If you wish to have flex-flow: row wrap, you can\n> use the wrap class in combination with the grid-block class. You can\n> review the docs for grid-block\n> https://base-apps.github.io/angular-base-apps/#!/grid to get a better\n> understand of the functionality.\n> \n> ZURB has basically dropped support for this framework and it is now being\n> maintained by the community as\n> https://github.com/base-apps/angular-base-apps.\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/827#issuecomment-236321493,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AEZlcMNdxmRg9zJpCnxyb6vTuqVEZXNyks5qapJUgaJpZM4JVZpc\n> .\n. Thank?\n\nOn Fri, Jul 29, 2016, 7:52 PM Brian Soumakian notifications@github.com\nwrote:\n\n> @HuemanF https://github.com/HuemanF I believe this is simply due to how\n> the SCSS is structured. The resulting behavior for grid-block (flex-flow:\n> row nowrap) is intended. If you wish to have flex-flow: row wrap, you can\n> use the wrap class in combination with the grid-block class. You can\n> review the docs for grid-block\n> https://base-apps.github.io/angular-base-apps/#!/grid to get a better\n> understand of the functionality.\n> \n> ZURB has basically dropped support for this framework and it is now being\n> maintained by the community as\n> https://github.com/base-apps/angular-base-apps.\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/zurb/foundation-apps/issues/827#issuecomment-236321493,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AEZlcMNdxmRg9zJpCnxyb6vTuqVEZXNyks5qapJUgaJpZM4JVZpc\n> .\n. ",
    "JonathenYgrene": "Yeah Hella broke!\n. Yeah Hella broke!\n. ",
    "Seb-": "@soumak77  Thanks for the link and the heads up. Is it the best (production ready) fork available? I'm currently reading the \"why\" issue but this is rather long.\n. @soumak77  Thanks for the link and the heads up. Is it the best (production ready) fork available? I'm currently reading the \"why\" issue but this is rather long.\n. ",
    "wicktus": "Maybe they have other priorities (new framework...) or maybe they're developing it for angularjs v2 who knows...thing is they didn't explicitely state that they indeed abandoned but it's clear that they're not working at all on it. Let's see but this lack of communication is unhealthy for Zurb's reputation, you can deprecate this framework but say it at least ;).\n. There you go...I think they're hard at work on too many things, foundation for app might not be the top 1 priority but again even angular-material is now in maintenance mode because they're developing the angularjs 2 version so I won't judge zurb too fast. I'm pretty sure they will release a new foundation app version in the future.\n. The page is fixed now ;). Also foundation app is apparently going to be replaced by a foundation site framework that will support angular, react and vanilla js...hence the silence around foundation app. It's not really abandonned it's just going to be replaced by a more complete unified foundation site framework.\n. Maybe they have other priorities (new framework...) or maybe they're developing it for angularjs v2 who knows...thing is they didn't explicitely state that they indeed abandoned but it's clear that they're not working at all on it. Let's see but this lack of communication is unhealthy for Zurb's reputation, you can deprecate this framework but say it at least ;).\n. There you go...I think they're hard at work on too many things, foundation for app might not be the top 1 priority but again even angular-material is now in maintenance mode because they're developing the angularjs 2 version so I won't judge zurb too fast. I'm pretty sure they will release a new foundation app version in the future.\n. The page is fixed now ;). Also foundation app is apparently going to be replaced by a foundation site framework that will support angular, react and vanilla js...hence the silence around foundation app. It's not really abandonned it's just going to be replaced by a more complete unified foundation site framework.\n. ",
    "Opticsponge": "I did hear from Zurb last march when I emailed them about angular 2 support. They responded with this [link](https://zurb.createsend.com/campaigns/reports/viewCampaign.aspx?d=y&c=D1DB5D1EACAC32B4&ID=D0031E1D4F9F755C&temp=False&tx=0) and mentioned a rough timeline for later this year. That was months ago, would be nice to get update.\n. I did hear from Zurb last march when I emailed them about angular 2 support. They responded with this [link](https://zurb.createsend.com/campaigns/reports/viewCampaign.aspx?d=y&c=D1DB5D1EACAC32B4&ID=D0031E1D4F9F755C&temp=False&tx=0) and mentioned a rough timeline for later this year. That was months ago, would be nice to get update.\n. ",
    "franbenz": "Please consider using Angular Base Apps if you want to use this framework (see #829 for more info). . Please consider using Angular Base Apps if you want to use this framework (see #829 for more info). . Please consider using Angular Base Apps if you want to use this framework (see #829 for more info). . Please consider using Angular Base Apps if you want to use this framework (see #829 for more info). . ",
    "jorgedanoz": "I've seen that it has been moved to playground/experimental.\r\n\r\nThanks. I've seen that it has been moved to playground/experimental.\r\n\r\nThanks. "
}