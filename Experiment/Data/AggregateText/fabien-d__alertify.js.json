{
    "fabien-d": "Thanks for submitting the issue. Fixed with ^ pull request.\n. Thanks for the note, testing is high on the priority list at the moment... \n. Resolved with ^ pull request\n. Resolved with ^ pull request\n. fixed with ^ pull request\n. I currently don't have access to Ubuntu - and I'm not fully clear on the issue you're having. Could you provide a screenshot(s)?\n. I was able to recreate it - sort of ... If I click on the first pixel (top) of the button, it moves down by 1px (:active state) which most likely moves the hit state as well, so on release it's no longer on the button and the click doesn't get triggered.\n\nI'll look at it some more -\n. Closing with ^ pull request will be part of release `0.4.0`\n. Moved to `0.3.5` release\n. Currently the pull request can't be merged automatically - \n\nI haven't updated/written the documentation for code updates yet, but changes should be made in the 'src/' folder. The 'lib/' files get automatically created by grunt after the lint and tests (tests incomplete at the moment) run successfully.\n\nAs for the functionality, I'm currently on the fence with this one. I may reconsider if this becomes a common issue. But I'd rather stick with inserting JS files at the bottom of the page.\n. Maybe as an alternative, it shouldn't initialize automatically. It could expose the init method and force the user to initialize...\n\n``` js\n// setup once\nalertify.init();\n\n// and then use\nalertify.alert(\"...\");\n```\n\nThat way it's only trying to access the DOM to create the elements when required. I'm still not sure if a DOM loaded event is the way to go for this issue.\n. Thanks for the request, it did surface an issue - however I went with a different approach (https://github.com/fabien-d/alertify.js/pull/22 initialize on first use) instead of the DOM loaded event.\n. Fixed with ^^ pull request\n. Closing with ^ pull request\n. I've split the core and theme CSS into separate files. For this one, I'm leaning towards simply adding a alertify.bootstrap.css file which would style the dialogs in a bootstrap look and feel.\n. New CSS file was created to support a bootstrap look and feel. Will be part of 0.3.0 release.\n. Resolved with ^ pull request.\n. Thanks for the update, I'd prefer you kept the align as it was (values aligned), and make sure it doesn't break the grunt concat/min process. In the root of the directory, the grunt.js uses this file to generate the banner comment and some of the object keys it's looking for have been removed.\n. I like it - could you squash your commits and then I'll merge?\n. It is not standard behaviour of native alert() dialogs... but I'm still leaning towards it. I think it makes sense from a user perspective (even if it's not a modal window, which are what people tend to close with ESC)\n. I generally rebase (if the code hasn't be pushed - otherwise conflicts can occur)\n\n```\ngit rebase -i HEAD~3\n```\n\n3 is the number of commits to go back on. http://git-scm.com/book/en/Git-Tools-Rewriting-History#Changing-Multiple-Commit-Messages\n\nthen squash comits onto each other\n\n```\npick ...\nsquash ...\nsquash ...\n```\n\nhttp://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits\n. You're testing changes got pushed and added to the pull request and also it can no longer be merged automatically. If you want to clean the commits and only leave 2fc2a2f - I'll merge (w/ fixed indentation)\n. This was being discussed in pull request https://github.com/fabien-d/alertify.js/pull/10. The request was to add a DOM loaded event, which I'm still not sure is the right approach for this project since most people already have a library to do this (e.g. jQuery)...\n\nI was thinking of 2 options (code examples are just for visual purposes):\n- expose the init method in the API meaning it would have to be initiated before use\n\n``` js\n// initialize after DOM ready\nalertify.init();\n\n// use\nalertify.alert(\"...\");\n```\n- check the first time alertify is used to see if it's already been initialized. That way it doesn't change the current usage but prevents alertify from trying to create DOM elements before it's told to.\n\n``` js\n// maybe in the dialog method\nif (typeof init === \"function\") init();\n\n// and have the init method delete itself after first use\ninit = function () {\n    ...\n    delete this.init;\n}\n```\n\nI'd love to get some input on it.\n. Documentation updates are a priority this weekend - mainly around usage, code contribution guidelines ... \n. Fixed with ^ pull request\n. Should be fixed with ^ pull request\n. Fixed with ^^ pull request\n. I removed it since it made sense to bind the enter key to the buttons instead of the document (keyboard accessibility purposes).\n\nValid point for the prompt dialog though, it should behave like a form (submit from input field)... I opened a new issue for it https://github.com/fabien-d/alertify.js/issues/28.\n. Fixed with ^ pull request\n. fixed with ^ pull request\n. Hitting ENTER multiple times (after closing a dialog) triggers the href=\"#\" on the button link... resetting the focus to the trigger element will resolve this issue\n. Fixed with ^^ pull request\n. Thanks for the fix! Added a few minor spacing comments... also ~~could you update the version in the package.json to 0.2.3~~ I'll update this after merging... \n. Good catch. I'm wondering if it makes sense to keep  the same functionality and fix the browser navigation issue or move towards the native implementation of dialogs (no callbacks). There's no validation in native dialogs, it simply does its job and lets the code figure out what to do with it... \n\ne.g.\n\n``` js\nvar string = alertify.prompt(\"name?\");\n// string equals the input value... \n// continue code\n\nif (alertify.confirm(\"sure?\")) {\n// true\n} else {\n// false\n}\n```\n\nThis would make it resemble the native dialogs but would take away the benefits of callbacks and chaining.\n. Fixed with ^^ pull request\n. This looks good. Just need to apply the same \"wait\" parameter to the \"extend\" method.\n\ne.g. This should work... \n\n``` js\nalertify.custom = alertify.extend(\"custom\");\nalertify.custom( message, wait );\n```\n. I'm not sure about this. The goal is to mimic browsers native behaviour as much as possible, but still keep UX in mind. IMO an \"undefined\" value for a message doesn't seem to benefit the user in any way where as a error tells the developer what is wrong during dev.\n\nI'm open to the discussion and if I get good argument to go down this road - I'm open to implementing.\n\nAs for issue https://github.com/fabien-d/alertify.js/issues/24, it's more about a optional prompt value (the default value that shows in the input field).\n. Closing this pull request. For the time being, I'm going to leave the message as required. Thanks\n. I'm with @abrkn. The prompt dialog is intended to access a value and pass it to a callback - nothing more, nothing less. It's the callbacks job to handle validation.\n\nI'll leave issue open and hear other opinions, but at this time I'm not inclined to implement.\n. I'll leave the issue open as a discussion and if the features gets a lot of interest I will reconsider.\n. I wouldn't say that a prompt dialog is a typical use-case for a login box. Not very secure. \n\nHowever, I'm considering adding an [HTTP Authentication dialog](http://www.httpwatch.com/httpgallery/authentication/). \n\n## Screenshot\n\n![HTTPAuth](https://f.cloud.github.com/assets/747616/57245/c8d7bf02-5b40-11e2-8852-7165637a429d.png)\nScreenshot below is from above link under example 10, by clicking `Display Image` button.\n. I just don't like passwords getting passed around unencrypted.\n\nThe idea for the auth dialog would need to be flushed, but at first thought I'm seeing it tied to a form element. It wouldn't provide the login functionality, just a wrapper to point to an end point that would. That form could get be intercepted using JS to prevent post back.\n\nJust thinking out loud, if I decide to implement an auth dialog in alertify, it needs to be flexible, easily extendible without adding unnecessary bloat.\n. I'm not opposed to adding types, still not convinced on attributes (that is getting into a lot of bloat) - but it may have to wait for the `0.4`. \n\nThe way the prompt dialog API is setup already has 3 optional parameters and would have to be reworked. \n\n**From:**\n\n``` js\nprompt( text [, callback, value, classes ] );\n```\n\n**To:**\n\n``` js\nprompt( text [, callback, options ] );\n\n// where options contains (variable names for demonstration):\noptions = {\n    value: '',\n    classes: '',\n    type: ''\n};\n```\n\n**Instead of:**\n\n``` js\nprompt( text [, callback, value, classes, TYPE ] );\n```\n\nand I don't want to change the API (to break existing functionality) within a minor release. The `0.4` is based on a very similar API but since it's a release candidate I don't have an issue updating it to reflect a better approach.\n. Closing this issue - it's been sitting for a long time\n. I agree this could be a nice feature since it would mimic the native dialogs - but from a user experience, I'd rather have consistency. The goal is to mimic the native dialogs as much as possible, but also aim to improve the user experience where possible.\n\nI'll leave open for discussion - and see where this goes.\n. I'm not opposed to the `reverse` option. It could be part of the `set` method.\ne.g. `alertify.set({ buttonReverse: true });`\n\nor even more specific\n`alertify.set({ buttonOrder: 'win' });`, `alertify.set({ buttonOrder: 'mac' });`\n\nSomething along those lines. I'm opposed to adding the user agent sniffing code in alertify... \n. @stuartkeith looks good. I left a comment on 1 line... but if you want to open a PR for it, I'll merge\n. Closed with ^ pull request. Will be part of release 0.3.1.\n. I'm assuming (don't have the device to test) that it's a `position: fixed` support issue. I'll keep this on the radar and look for a valid fallback! \n. Sure - that would be great. Feel free to open a PR and we can start a discussion in there.\n. @javizarza any update on the fix? \n. You're in the right direction - the two main issues I have with this approach are:\n1. Agent detection instead of feature detection (I'd rather test against position fixed versus trying to determine all agent that don't support it)\n2. It's adding quite a bit of bloat calculating the position and adding inline styles\n\nI'm leaning towards checking what the modernizr test for position fixed is and see if that's a small enough test to add to the library. Then if the current device doesn't support position fixed, fallback to the default browser dialogs.\n\nmy 2 cents\n. It's a regression, I've resolved the labels property earlier (https://github.com/fabien-d/alertify.js/pull/45), the same will be applied to the delay property.\n\nFor now, you can specify the wait parameter individually...\n\n``` js\nalertify.success(\"message\", wait); // optional time in ms\n```\n. Fixed with ^^ pull request\n. you can call any of the alertify methods (e.g. alert, confirm, log...) on page load. \n\nIf you have a DOM ready function... e.g. jQuery\n\n``` js\n$(function() {\n    alertify.alert(\"Test\");\n});\n```\n\nor you can load the library at the end of the html page and call it from there (inline script is not ideal - just for demonstration purposes).\n\n``` html\n    <script src=\"path_to_file/alertify.min.js\"></script>\n    <script>alertify.alert(\"test\");</script>\n</body>\n```\n. it's hard to help with the information you're providing. It seems like you're looking for more help than just implementing this plugin.\n\nIf you linked the alertify.js file like option 2 from the comment above (and replace the path_to_file with the actual path to the image) it should work. \n. This hasn't had any activity in a while, closing.\n. Is this a unique instance request, where you can use multiple alerts but change/override any specific one OR a generic override for all buttons?\n\nif the latter, a CSS overwrite would do\n\n``` css\n.alertify-button-ok { ... }\n```\n\notherwise, maybe adding an optional parameter that allows a custom class for any dialog would be beneficial?\n\n### JavaScript\n\n``` js\nalertify.alert(\"Message\", callback, \"custom-class\");\n```\n\n### CSS\n\n``` css\n.alertify-dialog-custom-call { ... }\n```\n. I can see this being useful, I'll have to think about the approach/implementation that makes the most sense... I want to be careful not overdoing the optional parameters.\n\nSuggestions are welcomed.\n. will be part of the 0.3.0 release. usage:\n\n``` js\nalertify.alert(\"message\", function () {}, \"css_class\");\nalertify.confirm(\"message\", function () {}, \"css_class\");\nalertify.prompt(\"message\", function () {}, \"placeholder\", \"css_class\");\n```\n. This would be a nice feature - it's already possible to use with bower without the component.json, you just need the full git url, which I know isn't ideal.\n\n```\n$ bower install git://github.com/fabien-d/alertify.js.git\n```\n\nThe bower documentation says [there should only be at most one file per file type in the main list](https://github.com/twitter/bower#defining-a-package).\n\nI'm thinking I may create a separate shim repo similar to what the [github components](https://github.com/components) has, and serve alertify from there. That way it's separate and only serves the files needed. \n\nIt would require a bit of thinking since I'm hoping to expand the theme options to more than just the alertify.default.css.\n\nI've assigned this to the 0.3.0 milestone.\n. Closing this pull request. I've registered `alertify` as a bower package and pointed it to the shim repo https://github.com/fabien-d/alertify.js-shim.\n\nThanks for the suggestion.\n. rest looks good. I need to pay more attention to this!\n. this can no longer be merged automatically.\n\nCould you also provide some info (or link to info) on this? Just for my benefit. I get removing the gist of it, but would like to get more background!\n. The intention is to animate in/out. It's using CSS3 transitions so it requires a bit more logic to only remove the element after the transition is done.\n\nI will be implementing using the `transitionend` event. The fallback for [browsers that don't support the event](https://developer.mozilla.org/en-US/docs/CSS/Using_CSS_transitions#Browser_compatibility) will simply remove the element right away - as it currently does. \n. resolved with ^ pull request. Will be part of 0.3.1\n. I appreciate the pull request... but I'm not really for this feature at this time. I don't believe it's the job of alertify to prevent it. And while I love customization - I want to limit the options and not have alertify try to do everything!\n. I like the feature, but please read the [coding standards](https://github.com/fabien-d/alertify.js/wiki/Coding-Standards) and [Submitting a Pull Request](https://github.com/fabien-d/alertify.js/wiki/Submitting-a-Pull-Request).\n\nChanges should be made to the `src/alertify.js` file.\n. Status update? Looking to merge this in.\n. Opened new pull request ^ with same functionality.\n. alertify has a transparent cover element (which prevents clicking on elements behind the dialog) that can be styled as @RiderSx mentioned.\n\n``` css\n.alertify-cover {\n    // can use an image\n    background: url( path_to_transparent_image );\n    // or can use RGBA\n    // this won't work for IE8- and would require a fallback\n    background: rgba(255,255,255,.5);\n}\n```\n. you can apply the element.style to the `.alertify-cover` element.\n\n``` css\n.alertify-cover {\n    background-color: #777777;\n    // untested but prefix and filter must be used\n    // for IE opacity support\n    -moz-opacity: .7;\n    -ms-filter: \"alpha(opacity=70)\";\n    filter: alpha(opacity=70);\n    opacity: .7;\n}\n```\n. I'm going to close this issue. If you have other questions/comment, just reopen the issue or create a new one.\n. I already have a [shim repo for packages](https://github.com/fabien-d/alertify.js-shim). I hadn't included it to the NPM registry yet, but was in the plans. I wanted to make alertify a node module before that happened though. Currently not setup or tested to be used as one.\n\nThe reason behind the shim repo, is that it serves only the files needed. Not the unnecessary bloat that comes with the core.\n. Closing this based on [comment above](https://github.com/fabien-d/alertify.js/pull/67#issuecomment-11485922)\n. It almost sounds like a conflict... If possible, I'd say disable any other plugins or JavaScript just as a preliminary ruling out whether it's a conflict or not (since it can't be reproduce on the example site)\n\nWhen all JS is removed except for alertify, if the issue is gone, it will come down to finding out where the conflict is occurring and if it's an issue with alertify or not.\n\nIf that doesn't solve the issue would you be able to provide more info, e.g. steps to reproduce, screenshots, anything that could help.\n\nIt's hard to debug an issue when it's unreproducible.\n. If you need more info/help simply reopen or log a new issue... if it happens to be a conflict, if you could post info about it, it'd be helpful. It'd be nice to see if it's something that alertify could prevent... \n. I still can't reproduce this in any browser on my mac (don't have access to a PC ATM)\n\nA couple things:\n1. I'd add a doctype - your page may be in quirks mode `<!doctype html>`\n2. How are you calling the `gotoButtonClick` function? Maybe that's where the issue happens.\n\nIt's very strange, all the button styles are simply CSS\n. Awesome. Any chance you could squash your commits? And feel free to throw your information in the Contributors doc!\n. Alertify is more aimed at replicating the native dialog which is why the public API is limited and only exposes the absolute required methods. I'm not sure if extending fits the description of what alertify.js tries to achieve.\n\nFor custom HTML or close buttons (to reuse your examples) falls more under a modal pattern, which many great libraries already offer.\n. Could you provide more info? I tried the same code on my end and it works properly.\n1. Browser/OS it's happening?\n2. How do you call the confirmDelete method?\n3. Is there any other JS that could create a conflict?\n. Has this been resolved? Looking to close this issue.\n. Closing - If more help is required, reopen or log a new issue\n. Never considered that use case. An extra class would be a viable option. \n\nA quick workaround, until a solution for all targeted browsers is available, is to use the `:empty` CSS selector [(browser support)](https://developer.mozilla.org/en-US/docs/CSS/:empty#Browser_compatibility).\n\n``` css\n.alertify-logs:empty {\n    display: none;\n}\n```\n. Fixed with ^ pull request. Will be part of release `0.4.0`\n. Moved to `0.3.5` release\n. I'll keep this on the back burner and I'll try to take a look at it when I have access to a windows machine but it appears that Apple has (silently) stopped developing Safari for Windows. The last update (5.1.7) was in May 2012 and they've removed all direct download links on their website. With browser shares the way they are, unless it's an obvious error - I won't be spending too much time on it.\n\nI'll gladly accept a PR with a fix (if it doesn't require a safari specific hack) but otherwise, unfortunately for the time being, it's going to be low on the list of priorities.\n. Don't quote me on \"no longer supported\"... but certainly appears going in that direction\n. This issue should now be fixed. There was a CSS property that was conflicting with older versions of Safari. I've restructured a few things in ^ pull request.\n. Great! Closing issue\n. The elements get removed once the `transitionend` event is triggered. There was a [bug regarding this issue](https://bugs.webkit.org/show_bug.cgi?id=105647) reported. At a quick glance it appears that it had been resolved in the canary build, but I'll take a closer look when I have a chance.\n\nI wouldn't consider this a critical issue since the canary is an early adoption version and things may still change.\n. Definitely worth mentioning. I'll be keeping an eye on it. Cheers! \n. Appears to be resolved with stable release of chrome 26. Closing.\n. It's weird since the page shouldn't scroll, like you said it's simply a position fix. Sounds like it may not prevent the default event on the button click.\n- Does it happen with all three dialogs, or just prompt?\n- Can you recreate on the [example site](http://fabien-d.github.com/alertify.js/)?\n- Does it append a blank anchor `#` to URL after button click?\n\nIf you could provide screenshots and/or post more info (code sample to recreate) I can try to debug. \n. yeah, fair enough... What OS? And can you reproduce on any other browsers (or are other browsers good like FF)?\n. I think I was able to reproduce, I'll look into it some more shortly and hopefully get this resolved soon.\n. Tied to this https://github.com/fabien-d/alertify.js/issues/81 - I can reproduce the Safari 5.1.\\* issue where the dialogs don't show which I believe is what you mean by freezes up (dialog doesn't show, but cover does - meaning you can't click on anything)\n\nStill investigating the jump to top issue.\n. #### Jump to Top\n\nThis is a result of setting focus to the OK button or input focus before the animation is complete. Currently a `setTimeout` with a `50ms` delay is used which resolves issues with certain browsers that weren't setting focus at all. Setting a higher delay, e.g. `1000ms` resolved the jump but is really ugly. Looking for a cleaner more reliable approach. (Thinking of using the `transitionend` instead of `setTimeout` to set focus)\n\n#### Dialogs not Showing\n\nThere is a parameter of `visibility: hidden` in the `.alertify-hidden` class in the core `alertify.core.css` file. Removing this resolves the dialogs not showing but causes a failure in IE8-. Looking for a solution that will work cross browser.\n\nThanks for logging the issue - this will help solve major flaws.\n. Issues should be resolved with ^ pull request.\n. Awesome. Closing this issue. If anything comes up simply re-open or log a new one. Cheers\n. There's more to it than simply removing focus on the button (from a code's perspective). The ENTER and ESC keys are also bound to the buttons. This means you can click OK and Cancel via the ENTER and ESC respectively even if the buttons don't have focus.\n\n> I am making double sure the user wants to take the action they just indicated, \n\nAgreed, that's fair and a common use case\n\n> as I want the user to do extra work to complete the action\n\nNot sure I agree with this. Having to click twice (once for the initial action and once to confirm in the dialog) seems sufficient and standard practice. Taking away the ENTER key event, to me seems to go against best UX practices.\n\nI'd love to hear people's opinion...\n. @quasipickle \n\n> With focus on the OK button, they only need click once, then hit enter once\n\nI still think less savvy users (if primarily a mouse user) would not necessarily assume a focus state to the ENTER key and go from clicking a button with the mouse followed by an immediate ENTER key just because the button is focused.\n\nThe implementation of the native confirm dialog has OK focused by default. Maybe @dparlevliet is on to something. An extension of the confirm prompt which requires an actionable item (e.g. checkbox) before a user can confirm or deny.\n\nStill not sure it's needed, alertify is already rapidly growing in size (want to optimize and shrink it) and want to make sure that all features implemented into the core are valuable to the majority of users and not unique cases.\n\nMaybe starting an extension library would make sense and would also provide options for https://github.com/fabien-d/alertify.js/issues/39 and https://github.com/fabien-d/alertify.js/issues/70. Doesn't ship out with the core but extensions could be added as dependencies for users you want extra features/dialogs. Just a thought...\n. Feel free to open a PR, it's usually easier to have a discussion around physical code! Just follow the info on [submitting a PR](https://github.com/fabien-d/alertify.js/wiki/Submitting-a-Pull-Request)!\n. Awesome @dparlevliet. \n\nMore food for thought, maybe instead of an extension library, a custom build would be better? Ala [Modernizr](http://modernizr.com/download/).\n\nThat way you could essentially just include the exact functionality that is needed and nothing else. (e.g. just dialogs, just logs, add extras...)\n. Closing with ^ pull request\n. Functional testing is far from up to date in alertify - so I wouldn't necessarily worry about it. I'm still new to testing so I've been focusing more on unit testing than functional testing. If you can sort it out, and more functional test can be based off of it that would be fantastic.\n\nI'm assuming since PhantomJS uses WebKit, it most likely detects the `transitionend` property and focus isn't set when you attempt to grab the active element. Since in the test there is no trigger element, you get back the `body` element.\n\nIn the jsfiddle you sent, the focus element is the `trigger` element and not the OK button. I'm assuming it's the same issue, focus isn't set until the transition is done, and therefore the active element remains the trigger button.\n. Overall I like it... a couple of minor code styling. My biggest concern is the focus state when set to `none`. If we can sort that out, I'll merge this in. \n. Tying to issue https://github.com/fabien-d/alertify.js/issues/86\n. I've update to 0.3.4 to resolve another issue. Just an FYI that you'll need to merge master into your branch so it can be automatically merged.\n. The inability to tab is a browser setting which (I believe) is off (mac webkit only?) by default.\n\n## Safari Preferences\n\nPress Tab option \n![Safari](https://f.cloud.github.com/assets/747616/65043/1c2a7f9a-5e67-11e2-9aea-b9841b49c2a6.png)\n\n## Chrome Settings\n\nPressing Tab option\n![Chrome](https://f.cloud.github.com/assets/747616/65042/1bb92ffc-5e67-11e2-81f4-180a66d754d1.png)\n\nI don't have an issue tabbing through the links in the dialogs. The idea to not set the focus inside the dialog means that as a keyboard user (I rarely use the mouse) I have to tab through the entire page. I understand that the idea is to avoid (as much as possible) a user from doing something they didn't want.\n\nBut I won't sacrifice accessibility for it. I like the concept here - setting which button has focus, but still need a solution for null.\n\nAlso as an alternative, have you considered changing the labels on the button to be more descriptive? E.g. \"Disconnect Account\" and \"Cancel\" instead of a simple \"OK\", \"Cancel\" to re-enforce the action they will be taking?\n. The resetFocus element is at the end to keep the focus inside the dialog. When it receives focus, it automatically resets it to the first element so you can tab all you want and never leave the dialog\n. Option 1 works for me. Also for commit 077b28b, did you by chance remove the wrong file?\n. it seems like the 2 test files have been removed...Make sure these are still included and that you merge with master. I've made a few updates since you started this branch and it can no longer be automatically merged.\n. Actually that may be better - just link it to this one so the conversation doesn't get lost. And make sure you pull my master into your branch so it can be merged automatically.\n\nAlso, send the PR to the branch `staging`. I'm going to update documentation, that way I can do a code review, merge, pull down that branch, do the testing (without setting new remotes to pull down the PR branch) and so on... Just going to be a new process.\n. This is off the top of my head, so may want to just research and read up and confirm the syntax:\n\nSetup an upstream, a link so you can access my repo\n`git remote add upstream git://github.com/fabien-d/alertify.js.git`\n\nthen you can fetch, which will pull down the latest code from this repo\n`git fetch upstream`\n\nand then you can pull the changes from this repos master into your branch (may want to create a test branch to do this just to see what happens)\n`git pull upstream master`\n\nYou can read a bit on it here... http://gun.io/blog/how-to-github-fork-branch-and-pull-request/ under Make Your Fork Track the Original Upstream Repo\n\nThe article suggests doing a `git merge upstream/master` (from your master branch) which should make your repos master match my repos master... and then you would be able switch back to your dev branch, and do a `git pull origin master` and it should pull my changes into it.\n\nAgain, I would suggest you try it out in a test branch, so if anything goes wrong, you can just trash and move on.\n. The reason I can't accept it now is that it can't be automatically merged. The whole process of setting up an `upstream` doesn't normally get into play when submitting a quick patch, the problem here is that I've made some updates to master since you created your branch.\n\nCurrently your code base is out of date with mine, and some of your changes are conflicting with the updated master branch in my repo, so git doesn't know how to merge. Setting up an `upstream` simply allows you to pull in the latest update from my repo into yours, so that your pull request can be automatically merged.\n\nI appreciate your patience, and if you can set it up into another PR which includes the latest code from my master branch so it can be automatically merged, I'll merge, otherwise I can't... actually can't, I don't get the merge button.\n\nIt can sound like a lot, but it's really not that bad when you get a hang of git. \n. Do you mean log messages? And what exactly are you trying to do, add/pass custom HTML to a log message?\n. Close this - dup of #89. The dialog box is always the same - and can already be targeted. The log messages will be returned when issue #89 is resolved.\n. From code, no. You can click to close, plus it automatically closes after set time. Can you provide a use case for this? \n. I see your point. I'm thinking I may return the log message instead of the alertify object... This would take away chaining on log messages, but would return the newly created log message.\n\nI'll have to consider a few options, see what makes the most sense.\n. @simonwade this is a good approach. I was thinking of separating the log message and the dialog message into [separate modules](https://github.com/fabien-d/alertify.js/issues/90). I would keep the dialog module as a singleton and restructure the log module as a factory.\n\nThe idea would be to offer a custom build option for alertify to only include the parts needed.\n. The custom build would be optional - similar to [Modernizr](http://modernizr.com/download/).\n\nBower would still pull in the full core library (no extension). The custom build option would simply be available for extensions that shouldn't be in the core library, but could be useful to some.\n. This issue is resolved in `0.4.0rc1`. You can now do:\n\n``` js\nvar log = Alertify.log.info(\"Notification Message\", 0);\n\n// close\nlog.close();\n\n// after closing, you can recreate and reshow\nlog.create();\nlog.show();\n\n// you can also get the log element\n// returns DOM element\nlog.el\n```\n\nYou can try it out on the [demo site](http://fabien-d.github.com/alertify.js/0.4.0rc1/)\n. I'm still looking for the ideal build to make it easy for users to use and for developers to extend/customize. I've started modularizing it for `0.4.0`. You can check it out at http://fabien-d.github.com/alertify.js/0.4.0rc1 and the source code is the master branch.\n\nStill not perfect, but much more structured and a step in the right direction. I'm hoping by the release of 0.4.0 to have an extendable library but also one that can be added to the site in no time.\n. Merged. Issue resolved in `0.3.9`. Branch `0.3` of repo or can be downloaded for the [demo site](http://fabien-d.github.io/alertify.js/).\n\nLeaving opening because it's still an issue for `0.4`.\n. `0.4` is deprecated - closing\n. Great catch! Resolved with ^ pull request\n. @dparlevliet gave you good advice. I haven't tested the code, but it makes sense. For me, I would have asked why you wanted to do it this way? The only 2 things I can think of:\n1. You don't like writing `alertify.` everytime, or you wish to replace all existing native dialogs without changing any of the code base.\n2. You like that the native dialogs return a value  \n\n``` js\nalert(...)   // returns undefined\nconfirm(...) // returns true/false\nprompt(...)  // returns input value/null\n```\n\nBoth of which are very hard to deal with.\n\n> because the very nature of JavaScript is non-blocking\n\nThis is it. A user can't interact with a piece of UI while the script is executing, so if a user has to interact with UI before the script finishes, and the script has to finish before the user can interact with the UI... the browser would hang.\n\nThis is why alertify is using callbacks. It ensures that the script is only executed after the interaction has been made, but it doesn't block the execution of the rest of the code.\n\nI would consider changing the implementation and adding a `finally` function as a parameter. I'm not sure if it adds too much value, but could be worth exploring.\n\n``` js\nalertify.alert(\"string\", fnYes, fnFinally);\nalertify.confirm(\"string\", fnYes, fnNo, fnFinally);\nalertify.prompt(\"string\", fnYes, fnNo, fnFinally); \n```\n\nAbove is very rough, but the `fnFinally` method would be called after the `fnYes` or `fnNo` to continue with your next code block.\n. As @dparlevliet mentioned, JavaScript is non-blocking by design. The idea that `alertify.` can simply be thrown in front of native dialog and everything just works is flawed.\n\nI also get that it would be nice if it could, but it's just not possible. It's just a matter of separating the code a little bit.\n\nStep 1: Current code\n\n``` js\n// using native dialogs\nfunction init () {\n    var answer = prompt(\"question\");\n    // do something with answer\n}\n```\n\nStep 2: Separate the dialog from the rest of the code\n\n``` js\n// change to\nfunction init () {\n    var answer = prompt(\"question\");\n    handleAnswer(answer);\n}\n\nfunction handleAnswer (answer) {\n    // do something with answer\n}\n```\n\nStep 3: using alertify\n\n``` js\n// alertify 0.3.8\nfunction init () {\n    alertify.prompt(\"question\", function (e, answer) {\n        if (e) {\n            handleAnswer(answer);\n        }\n    });\n}\n\nfunction handleAnswer (answer) {\n    // do something with answer\n}\n```\n\n``` js\n// alertify 0.4.0rc1\nfunction init () {\n    Alertify.dialog.prompt(\"question\", function (answer) {\n        handleAnswer(answer);\n    });\n}\n\nfunction handleAnswer (answer) {\n    // do something with answer\n}\n```\n. Tying to https://github.com/fabien-d/alertify.js/pull/87 to keep the conversation around this PR. Two quick things (and then I'm done - I swear):\n1. Could you re-insert https://github.com/fabien-d/alertify.js/pull/87/files#L0R36 back? That was a great catch\n2. Could you update your single quotes to double quotes (for consistency)\n\nDon't worry about squashing - 2 commits is fine. Also feel free to add your info in the Contributors.md file in the root.\n\nOnce that's in - I'll merge! \n\nCheers\n. Appreciate the back and forth... I'm going to test it when I get home, and it will be part of the next minor version bump. Cheers\n. Strange... can you try pasting the following in the console on http://fabien-d.github.com/alertify.js/ and see if you can reproduce?\n\n``` js\ndata = { name: \"test\" }\nalertify.log(data.name + ' has disconnected!', 'error', 5000);\n```\n\nor using the `error` shorthand.\n\n``` js\ndata = { name: \"test\" }\nalertify.error(data.name + ' has disconnected!', 5000);\n```\n\nI've tried both in chrome on OS X and don't have an issue clicking to close, or changing the `5000` to any value.\n. If you're using chrome.. you can hit `cmd+alt+j` to pull up the console or View > Developer > JavaScript Console. You'll be able to use the console there.\n\nBut it does sound like a conflict... if you have a hard time debugging, you can post (or send me a DM) with more code, I can take a look.\n. No problem, glad you were able to sort it out.\n. What version of alertify are you using? I fixed a similar issue at `0.3.3` so it may simply be an outdated version.\n\nAlso, could you double check the behaviour on the [demo page](http://fabien-d.github.com/alertify.js/) (in IE9) to see if you can reproduce the same functionality (I wasn't able to)? I added a return false at the bottom of the function to prevent the default event from firing for browsers that don't support `event.preventDefault`. If a piece of code in your callback is causing an error, the return false would never be reached and the default event would be fired.\n\nI will look into the `returnValue` property... so instead of just testing against `event.preventDefault`... do something along the lines of `event.preventDefault ? event.preventDefault() : event.returnValue = false;` to try and prevent the default event from ever firing.\n. `0.4.0` isn't out yet, latest is `0.3.7` as of today! But glad to hear the issue is resolved. Cheers\n. I noticed this issue when building the new site yesterday - link styles from the site can conflict with the link styles in alertify.js, not just the bootstrap theme.\n\nThe direction I'm looking for is to reset all `a` styles in the `alertify.core.css` to ensure no conflict happens. That way, any styles in the site will be reset to none (e.g. `background`, `border`, `text-decoration`...) and only the styles defined in alertify.js will be shown.\n. I've updated the CSS to avoid (as much as possible) any conflicts in ^ PR. Thanks for submitting.\n. Could you provide a code sample (reproducible example)? Currently alertify dialogs are queued and shouldn't overlap. Also, the cover element should show up blocking any interaction with the page. I'm attempting to double click buttons on the example site and can't encounter the issue.\n\nIs there a JS error? There could be a conflict.\n\nAs a side note, something to consider. A user shouldn't be able to re-submit a form.\n. > it will show other alerts\n\nMy bad, I misunderstood this part. I was thinking dialogs and not log messages.\n\nFor log messages, currently there is no way to only open them once, or only if they are not currently open. The thought behind logs was always a 1:1, every time you take an action the corresponding log is shown.\n\nI feel like multiple log messages is still better than no logs at all. That way a user is aware that he's taken another action. If a user clicks a button and there's a log tied to it, then it should show a new one every time that button is clicked. If you don't want it to show more than once, the button should get disabled.\n\nA form for example, I still believe the best approach is to disable the submit button until the form action is completed.\n\nI personally feel like removing the log notification is a workaround the problem... and not really a solution to the problem.\n. Thanks for the PR but IE6 is not on my browser support list and I'd rather not include hacks (more so `expression`) in the css.\n\nI'm still planning on [having support for devices](https://github.com/fabien-d/alertify.js/issues/42) (mainly handhelds) that don't support `position: fixed` so maybe that fix will make IE6 work.\n. > How do I create an external alertify.js using tools provided in the web.\n\nNot sure what you mean?\n\nFrom what I get you should be able to just run `alertify.alert(\"You have...\");`\n. In order to redirect to a different URL, you need to use the callback function, see below:\n\n``` js\n$(document).ready(function() {\n    // alert dialog\n    alertify.alert(\"<b>You have reached the WW Network.<Br>The WW Network uses state-of-art<a href=\\\"http://www.hasoffers.com/customer-satisfaction/\\\">tracking</a> from our private domain tracker.ww.com.<br><i>We are only accepting<a href=\\\"http://network.w-wnetwork.com/signup\\\">*10* new affiliates for January, so join today!</i>\", function () {\n        window.location = \"http://google.ca\";\n    });\n});\n```\n\nnote: you have to escape `\\\"` quotes or use single quotes.\n. I pasted the exact code you need to run what you're asking for in the comment above. You just need to replace the `window.location` with `window.open(URL)`.\n\nI'd rather you not post signup links in the comments for self promotion. I'm glad to help hooking up the functionality you need - but that doesn't require you posting the actual URL.\n\nCheers,\n. Please don't open new issue when you already have one open. Closing, dup of #110\n. Currently there is no setting/config for it. I'm working on making the log messages more flexible (individually control the position of each). In the meantime you can overwrite the CSS to control the position of the logs.\n\n``` css\n.alertify-logs {\n    top: 10px;\n    right: 10px;\n}\n```\n. For now I'd like to keep the look & feel and placement of the elements to be controlled via CSS. I will not implement this functionality into alertify.js.\n\nI may create more themes - with time - that will have elements placed in different location, but these will all be through CSS.\n. Thanks for the PR, I like it.\n\nCould you update the single quotes to double quotes (code consistency) and change the PR to merge into `staging` to follow the [pull request guidelines](https://github.com/fabien-d/alertify.js/wiki/Submitting-a-Pull-Request).\n. You'll need to update your codebase so it can merge automatically. And you'll need to follow the [pull request guidelines](https://github.com/fabien-d/alertify.js/wiki/Submitting-a-Pull-Request).\n\nMainly open the PR to the `staging` branch.\n. Hmm, I like the idea of the buttons. Not sure about the `tabindex` attribute though. It would have to be dynamic because of the `buttonReverse` property. Also, the JS already handles this, sets focus on the proper button and keeps focus inside the dialog while it's open. Not sure how much value the `tabindex` add since it's a dynamically created element.\n\nSide note: you'd need to clean your commits. I would only want the actual code changes, not the merges in ideally 1 squashed commit.\n. The tests don't run because of linting errors. If you fix the quotes issue the tests should pass.\n. I released `0.4.0rc1` and I've included this as part of it. If you want to submit another PR so it's part of the `0.3.*` release, fix the escaping and submit to the `0.3` branch.\n. Mainly fixed in #154 \n. @Martinho0330 This is not the right place for that question. I opened a [new issue](https://github.com/fabien-d/alertify.js/issues/125)\n. Thanks for the note, I've been meaning to update the docs, but haven't had time to fully do them. The master branch is currently at `0.4.0rc1` and the API has changed which is why it doesn't work as expected.\n\nThe `master` branch is tagged at versions to ensure it works as expected at that point, but using `master` as in may sometimes result in unexpected behaviour.\n\nTo use the master branch, you need to follow the new [API documentation](https://github.com/fabien-d/alertify.js/wiki/0.4.*-API-Documentation) which currently isn't available (in progress), but you can checkout the [example site](http://fabien-d.github.com/alertify.js/0.4.0rc1/) to see the usage.\n. @Martinho0330: Could you be more specific? I'm not sure exactly what you mean?\n. If I understand correctly, you want to display the text as it goes down? e.g. 10... 9... 8... until the notification is closed?\n\nIf that's the case, you cannot. The new version `0.4.0rc1`, not yet stable, does offer an API to the log elements, so it's something that could be added on your end.\n\n``` js\n// using 0.4.0rc1\n// this will not work with 0.3.8\nvar log = Alertify.log.info(\"Notification Message\", 10000);\n\n// will return the log DOM element which you can manipulate\nconsole.log(log.el);\n```\n. I'll have investigate this one. I'm currently away at a conference but will take a look when I get back. \n\nAny reason why you're running compatibility mode? Just curious!\n. I got to test it and was able to recreate the issue.\n\n![Compatibility](https://f.cloud.github.com/assets/747616/205365/1e003820-81a6-11e2-820c-63a8e45edcca.png)\n\nIt's something to do with the `:focus` state. If you hit the tab key to cycle through the button, whichever one has focus doesn't show. First thing you could try is to remove the `:focus` state in the CSS. See if that works.\n\nI'll will look at it this weekend, just don't have time while at the conference to debug.\n\nCheers,\n. I just tested the 0.4.0 release candidate version - tag `0.4.0rc1` and it works. I'll sort out what the differences are between the 2 and get a fix in for the `0.3.*` stable release. 0.3.\\* will be deprecated shortly as 0.4.0 approaches.\n\n![Compatibility0 4 0rc1](https://f.cloud.github.com/assets/747616/206580/0e9483cc-81d4-11e2-8f23-3c1e3db7f250.png)\n. You can grab the source [on the tags page](https://github.com/fabien-d/alertify.js/tags).\n\nJust a word of warning, 0.4.0rc1 is a release candidate, so everything may not be stable, and also the API has changed quite a bit from 0.3.*.\n\nFeel free to look at the demo site at http://fabien-d.github.com/alertify.js/0.4.0rc1\n. Fixed with ^ PR\n. I'll be investigating this. The answer provided does makes sense (as a workaround) since `transitionend` can be a bit buggy. I will try to find a more elegant solution to include as part of alertify.\n. Closing this issue - if it's still a problem feel free to reopen or open a new issue.\n. I don't have that combination to test with. I did pull up a Android 2.3 emulator on browserstack and wasn't able to recreate the issue.\n\nI was able to create new logs while the page showed other logs. And I also couldn't recreate the page jump. Any chance you could provide steps to recreate or a demo link - can direct message a link if you don't want to post public.\n\n![MulitpleLog](https://f.cloud.github.com/assets/747616/281728/caee95b2-917e-11e2-917f-8522b160206b.png)\n\nCould you also test the demo site (http://fabien-d.github.com/alertify.js/) with the Android device see if you can reproduce? It may be a conflict between alertify.js and something in phonegap.\n. any updates on this? If it's no longer an issue I will be closing the issue.\n. You have to provide more information in order for someone to help you out. You should check the [opening issues wiki entry](https://github.com/fabien-d/alertify.js/wiki/Opening-Issues)\n\n## Short version of the wiki entry\n- Please list the exact steps required to reproduce the issue.\n- Include versions of your OS, browser, etc.\n- Include relevant sample code. The less code you include, the easier/faster the problem can be found. Try to only include the bare minimum code required to reproduce the error.\n. See [caniuse](http://caniuse.com/css-transitions) and [MDN](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_transitions?redirectlocale=en-US&redirectslug=CSS%2FTutorials%2FUsing_CSS_transitions#Browser_compatibility)\n. Good catch... agreed that I don't really like having `-show` and `-hide` at the same time. Will look for a more elegant solution.\n. Good catch - thanks.\n. There's nothing there that should create an issue outside of `Alertify` should be `alertify`.\n\nCan you reproduce it on the [example site](http://fabien-d.github.io/alertify.js/)? If so, can you provide the steps to reproduce. I've just tested it with the latest version of Chrome (Version 26.0.1410.65, Mac 10.8.3) and in Safari on my iPhone and everything worked fine.\n\nIf you can't reproduce on example site [example site](http://fabien-d.github.io/alertify.js/), could you provide sample code with the issue being reproduced?\n. I don't have an iPad first generation to test, but I'll fire up browserstack to test it and see if I can recreate/debug it. I'll update with my findings.\n. I'm looking at it now - so far I'm able to open 1 dialog (iOS 5.1, iOS 4.3.2) with weird behaviour (jumps to the top of the page) but can't open any other afterwards.\n\nI've tested the `0.4.0rc1` version, and it appears to work on both of these. Could you confirm? Test the [0.4.0rc1 demo site](http://fabien-d.github.com/alertify.js/0.4.0rc1). I'll start seeing what the differences are and see what I can do.\n. That's correct. There's an issue with the transition properties at the moment, which I've resolved, causing the cover to show, but not the dialog (\"hang\" mode).\n\nI'm close - I have resolved the issue with the dialog not showing after the first time (2nd time onward dialogs show perfectly), but the first item still causes the page to jump to the top. Need to sort that out and I'll push an update.\n. @janroesner Any chance you could take a look at the above PR and test the new source with your iPad to ensure the fix does indeed work? I was seeing the behaviour in the simulator and the changes resolved the issue, but getting confirmation on the actual device is always better.\n\nedit:\nthe 2 files to look at are [alertify.js](https://github.com/fabien-d/alertify.js/blob/9f17921af380a84ab114b237380d1f4656a78fd5/lib/alertify.js) and [core css](https://github.com/fabien-d/alertify.js/blob/9f17921af380a84ab114b237380d1f4656a78fd5/themes/alertify.core.css)\n. I had to remove the transitions - that's what was causing the issue. It supports an older syntax for CSS transitions but doesn't do so very reliability. \n\nI will look for a workaround but that will be for the 0.4 release. \n\nThanks for the help. I'll merge/release/update docs when I get a chance. \n\nSent from my iPhone\n\nOn 2013-04-20, at 4:20 PM, Jan Roesner notifications@github.com wrote:\n\n> @fabien-d It works like a charme. I tested alert, confirm and prompt. Transitions are missing, but thats IMHO fine. Everything else seems to work fine as well. Thx.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Merged. Issue resolved in `0.3.9`. Branch `0.3` of repo or can be downloaded for the [demo site](http://fabien-d.github.io/alertify.js/).\n. I'm not really sure what the issue is - any chance you could provide a working code sample of the issue? \n. [Tag was added](https://github.com/fabien-d/alertify.js/tags). Thanks\n. alertify.js 0.4 appears to be tied to -> https://github.com/fabien-d/alertify.js/pull/158\n\nSeems like the issue is also happening in `0.3`? I'm not familiar with turbolinks so hopefully someone can provide more insight. \n. Fixed with #161 \n. Fixed with ^ PR\n. I'm hoping to get a fix in for this shortly.\n\nduplicate of https://github.com/fabien-d/alertify.js/issues/137\n. as a quick workaround you can add the following line in `alertify.core.css` if you're using `0.3.*` or  in `alertify.css` if you're using `0.4.0rc1`.\n\nI'd need to test that this doesn't create issues elsewhere, but it could be a hot fix in the meantime.\n\n``` css\n:root *> .alertify-hidden {\n    display: block;\n    visibility: hidden; /* <-- add this line */\n}\n```\n. Have you had any luck with this? I haven't been able to reproduce and if it's still an issue with the latest `0.3.10`?\n. Closing this issue - if it's still a problem feel free to reopen or open a new issue.\n. duplicate of #138.\n\nSetting it to `display: none` prevents the CSS animation from running. A temporary workaround is to add `visibility: hidden;`.\n\nWill be looking for a better solution.\n. Thanks for the report/fix. Would you mind opening a PR? \n. Fixed with ^ PR\n. There is no Metro theme with the plugin, but it would just be creating a new theme in CSS. I'll accept a PR! \n\nI don't have an outloook account, I sort of understand the request, which would require quite a bit of tweaking - but could you provide a screenshot just to confirm.\n. Initializing on a specific DOM element would require some tweaking. I can mark it as a nice to have or accept a PR if anyone wants to implement.\n\nClicking through is a [known issue](https://github.com/fabien-d/alertify.js/issues/141). There is a fix in the issue details, which I will implement soon.\n. Could you try the [demo page](http://fabien-d.github.io/alertify.js/) with the same browser? Generally this issue happens when the browser supports `transitionend` but the event is not firing properly.\n\nIf the issue can be reproduced on the demo page, I'll try to debug, if it doesn't happen on the demo page, maybe you could provide a code sample from your project so I can take a look.\n. any updates on this?\n. Closing this issue - if it's still a problem feel free to reopen or open a new issue.\n. The alertify confirm method does not work the same as the native confirm. It does not return true or false. JavaScript is non-blocking meaning the `if (s == true) {` will get tested before the user clicks on ok or cancel.\n\nalertify uses callbacks to get around this problem...\n\n``` js\n$(\"#Button1\").on(\"click\", function () {\n    alertify.confirm(\"This is an alert dialog\", function (e) {\n        if (e) {\n            // user clicked ok\n        } else {\n            // user clicked cancel\n        }\n    });\n});\n```\n. sorry for the delay - any progress on this? If not, any chance you could provide more info on the issue. I'm not sure what you mean by\n\n> button click event on the server side is not being fired.\n. Closing this issue - if it's still a problem feel free to reopen or open a new issue.\n. Unfortunately JavaScript is a non-blocking language and this is not possible. You'd have to adjust the code to use the callback.\n\n``` js\nalertify.confirm( 'question', function ( e ) {\n    if ( e ) {\n        // the code to execute after a user choice\n    }\n});\n```\n. Closing - if you have more questions/comments, feel free to reopen.\n. Looks like a duplicate of #138. See if the workaround in that issue works for you. Still haven't had a chance to implement a fix.\n. Fixed with ^ PR\n. This seems like it may be an event bubbling issue. I remember having something similar with chaining alertify dialogs but has been fixed.\n\nInstead of using `event.stopPropagation()` try replacing it with `event.preventDefault()` and/or a `return false` at the bottom of the function.\n\n> Since the .live() method handles events once they have propagated to the top of the document, it is not possible to stop propagation of live events\n\n^ from the jQuery docs. And the `live()` method simply calls the `on()` method.\n\nIf that doesn't work - could you try providing a working demo?\n\nI've tried calling, on the docs page, an alert dialog after the confirm without issues (w and w/o delay)\n\n``` js\nalertify.confirm('test', function (e) {\n    if (e) {\n        setTimeout( function () { alertify.alert('blah'); }, 1000);\n    } else {\n        alertify.alert('cancel');\n    }\n});\n```\n. Could you confirm if this is only happening using the keyboard? It's the only way I have been able to reproduce...\n\nI haven't been able to reproduce in `0.4.0rc1` (keyboard or mouse), so I'll see about implementing the fix in `0.3.*`.\n. the clicking once is another issue - there is a temporary fix at issue #138.\n\nSo there is a bug in the alertify code. In the hide method, I set `isOpen` to false immediately and I believe since there is a small delay between the ajax request and the next call, the new dialog gets confused for the existing one and also closes. \n\nI'll have to dig a bit more and tweak some of the functionality around this.\n. I wasn't able to reproduce - but I haven't tested it with your example so I can say for sure it will work.\n\n0.4 is in release candidate, so it hasn't been fully tested and it's a completely new API (can't just swap 0.3 for 0.4). You can see the [demo site](http://fabien-d.github.io/alertify.js/0.4.0rc1/) and see if you want to give it a go.\n\nI'm hoping to get more time to work on alertify and get `0.3` stable and then leave it as a legacy as I bring `0.4` stable and onto a `1.0`\n. Sounds similar to #166. Should be fixed with #176 which will be in `0.3.11`\n. thanks for the fix\n. I'm going to keep alertify in front end package managers.\n. Thanks for the PR. I don't really know much about composer or Packagist - so I'm just going to do a bit of research on it before merging.\n. Do you have any arguments on why a JS plugin should be part of a PHP package manager? I'm hesitant on whether it makes sense...\n. I'm going to pass on this for now. Since you can still use it with composer without the `composer.json` file. Also, `0.4` has been deprecated. Cheers,\n. Resolved with #155 \n. The build was fix with #154 so you can pull down the latest master branch and should be able to run grunt.\n\nAlso, this functionality exists in `0.3.*`, it just hasn't been ported over to `0.4` yet, so I would like to keep it consistent with where the type gets appended.\n\nSee https://github.com/fabien-d/alertify.js/blob/0.3/src/alertify.js#L286 and screenshot:\n\n![image](https://f.cloud.github.com/assets/747616/758309/8b1e0580-e728-11e2-8de9-7d1613af3e4d.png)\n. There's conflicts in the PR. The change looks good, I would just rather have spacing around the blocks for legibility and consistency. Also, once the conflict is resolved, could you squash your commits?\n\n``` js\n// from:\nclsElShow+\" \"+\"alertify-\"+item.type \n// to:\nclsElShow + \" \" + \"alertify-\" + item.type\n```\n. committing minified source shouldn't create conflicts - but it can be a pain. I've been debatting whether to remove them from source control and I think I will. Closing since you opened a new PR\n. Could you provide more information? I'm not able to reproduce this issue as it's something I know has been implemented.\n- Which alertify.js version are you using?\n- Do you have custom code interacting with it? \n- Browser/OS?\n\nCan you reproduce on the [demo site](http://fabien-d.github.io/alertify.js/)?\n. If you're able to isolate the problem - or can replicate the bug with sample code, feel free to pass it along and I'll be glad to help out. \n\nSent from my iPhone\n\nOn 2013-07-10, at 9:49 PM, devanddesign notifications@github.com wrote:\n\n> Yeah, you're right. It works fine on the demo site so I must be doing something wrong. I'll have to do some digging since there's a lot of functionality on my page but I just figured the simple alertify.confirm should work since there's not much to it.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Closing - feel free to reopen if you need more help.\n. Thanks for the update... any chance you tested alertify.js version `0.3.*` (on branch `0.3`) with turbolinks?\n. Thanks for the fix\n. Both issues were fixed with `0.3.10`. I just forgot to update the version of alertify.js on the demo page.\n\nTied to #146. \n. Is this only happening with the `master` branch (release `0.4.*`)?\n\nThe `0.4` is only a release candidate so bugs are to be expected. I will listed as an 0.4 bug and look at it for the next RC.\n\nWhat was the unrelated issue with 0.3? \n. I'll be looking at why this is happening in `0.3.*`. I'm getting close to releasing the next [version of alertify - 0.5.0](https://github.com/fabien-d/alertify.js/tree/wip.0.5.0) and this issue has been resolved.\n\nI'll look into backporting to `0.3.*` \n. Fixed with ^. Will be part of `0.3.11`\n. Available now: \n- Source code: https://github.com/fabien-d/alertify.js/releases/tag/0.3.11 or\n- Install via bower: `bower install alertify.js` (note this was previously `alertify`)\n\nI will be updating the demo page and docs shortly.\n. Closing\n. The goal of the project is to mimic native dialogs. Adding multiple buttons would go against this.\n\nClosing this issue - if you want to have more discussion feel free to reopen or open a new issue.\n. Fixed with ^. Will be part of `0.3.11`\n. Available now: \n- Source code: https://github.com/fabien-d/alertify.js/releases/tag/0.3.11 or\n- Install via bower: `bower install alertify.js` (note this was previously `alertify`)\n\nI will be updating the demo page and docs shortly. Closing\n. Closing this issue - `0.4` is deprecated, if it's a problem in `0.3` feel free to reopen or open a new issue.\n. Closing this issue since `0.4` is deprecated \n. I don't intend on making it a full bootstrap module. If someone wants to fork it and develop/maintain it - that's great! I'll link to it. But the main repo will remain a stand alone widget. I don't want to tie it to any framework in any way. \n\nThe bootstrap CSS was to show that it could easily be made to look and fit in a bootstrap project with little effort.\n. Closing this issue - if it's still a problem feel free to reopen or open a new issue.\n. And could you confirm this is with alertify.js `0.3.*`...\n. I'm closing this since `0.4` is deprecated. If it happens with `0.3` or `0.5wip` then feel free to reopen or log a new issue\n. any chance you can provide a demo of this not working? I haven't been able to reproduce...\n. I never got any emails with attachments - \n. still nothing - send me a DM `fabiend.github [at] gmail`\n. > Any idea to make a dialog which provides certain items to select\n\nThat's more of a modal than a dialog. The intention of this library is to replace the native dialogs so at this time that would not really be possible.\n. I'm going to try to get some bug fixes for `0.3` today and if I get a chance I'll try to release a `0.5.0rc1` as well.\n. there is no way to unregister at this time, see: https://github.com/bower/bower/issues/120\n. Closing. Created - [0.5 branch](https://github.com/fabien-d/alertify.js/tree/0.5)\n. Released `0.5.0rc1`. Usage example can be found [here](https://github.com/fabien-d/alertify.js/wiki/0.5----Usage).\n\nMore documentation and an example site will be up shortly\n. > I find the new dialog is too white\n\nAgreed. I have an issue opened for it (https://github.com/fabien-d/alertify.js/issues/187) was hoping to get a designer to coming in and help out. Even if only with a visual and not code\n. > such as changing the animation style, customizing alert positioning\n\nalertify.js was built so only the core was in the JS. These two items are controlled via CSS. The original goal was to build a theme library which would cover various animations and positions but I just never had time or contributions for it -\n. @Alex-Sokolov I haven't been able to reproduce this - any chance you could put a demo together recreating (as basic as possible) the issue.\n\nI tried including a `window.open` in a `alertify.confirm` and after closing the new window and going back to the original page, the dialog was gone and the page was fully usable.\n\nIf you can't provide a demo, any chance you can provide more info? Browser/OS, does it still happen with `0.3.11` ...\n\n---\n\n@wizonesolutions, the `0.3.11` fix was for back to back dialogs using AJAX https://github.com/fabien-d/alertify.js/issues/166 - not this one.\n. @wizonesolutions: could you put a demo together that reproduces the error? \n. Can you provide more info (browser, OS, steps to reproduce, code sample)? I've tried using the following code sample and am unable to recreate it:\n\n``` js\nalertify.prompt( 'test', function (e) {\n    if (e) {\n        window.open( 'http://google.com' );\n    }\n});\n```\n. Fixed and reset the 0.3.11 tag to include this. Thanks\n. Care to elaborate...\n. Can you provide more info? A demo page, code samples... \n. the library detects if `define` is used and doesn't expose `alertify` globally. If you want to use with AMD, you need to include it as a dependency:\n\n``` js\ndefine( [ PATH_TO_ALERTIFY ], function ( alertify ) {\n    alertify.success( 'Hi' );\n} );\n```\n. did you also include the `alertify.core.css`? you need both the core and theme styles.\n. Great\n. not a stupid question - just bad documentation which I will try to update sometime.\n\nThe `extend` method allows to generate custom log messages. The parameter `custom` can be whatever you choose.\n\nFor example:\n\n``` js\n// sets a property on `alertify` object\nalertify.[anyKeyValueYouWant] = alertify.extend( 'anyStringYouWant' );\n\n// so you can then write\nalertify.anyKeyValueYouWant( 'custom log message' );\n```\n\nIn the HTML, this will output:\n\n``` html\n<!-- notice the extra class, this is the value passed in the extend method -->\n<article class=\"alertify-log alertify-log-anyStringYouWant\">custom log message</article>\n```\n\nThen in CSS, you can then control the look of those specific messages:\n\n``` css\n.alertify-log-anyStringYouWant {\n    /* overwrite default styles */\n}\n```\n\nIn short:\n- the string argument passed in the `extend` method will be used as a class name on the log messages\n- the key value you assign to alertify lets you call it directly.\n\nSee https://github.com/fabien-d/alertify.js/wiki/0.3.*-API-Documentation#extend\n\nThis is how the `success` and `error` methods work - https://github.com/fabien-d/alertify.js/wiki/0.3.*-API-Documentation#success--error\n\nHope that's clear\n. Closing - feel free to reopen if this didn't solve your issue.\n. Ruby and Compass are needed to compile `Sass` into `CSS`. If you just cloned the project - I would suggest you checkout the `0.3` branch (https://github.com/fabien-d/alertify.js/tree/0.3) since that is latest stable release.\n\nMaster currently points to `0.4.0rc1` which will never be done. I'm skipping that release and going straight to [0.5.0](https://github.com/fabien-d/alertify.js/pull/173).\n\nIn the `0.3.*` release, there is no Sass so you will not need ruby or compass.\n. Closing - feel free to reopen if this didn't solve your issue.\n. See https://github.com/fabien-d/alertify.js/issues/185#issuecomment-27147210\n. Closing - feel free to reopen if this didn't solve your issue.\n. I just put a very basic starting point, I was hoping to get a designer to jump in and help. It will for sure looking much better for the actual `0.5.0` release.\n. Can you double check if this is not just indentation? I generally write CSS with sub styles nested. E.g.\n\n``` css\n.container {\n}\n\n    .container-child {\n    }\n```\n\nwhich can make it seem like the last line is missing a closing `}` although it is not.\n. Here's the file from that release tag: https://github.com/fabien-d/alertify.js/blob/0.3/themes/alertify.default.css. I don't see any missing `}`. \n. Closing - feel free to reopen if this didn't solve your issue.\n. I'm going to need more information.. code sample? This error only happens if the JS file hasn't been included.\n. It's a GitHub page and a temporary issue with them. \n. no worries.\n. Thanks - I'll take a closer look when I get a few mins. Could you fix the indentation, tabs, so it is consistent and matching the current `0.3` formatting.\n. There is some indentation issues - e.g.\n\n![image](https://f.cloud.github.com/assets/747616/1865256/cab81ad8-7809-11e3-98e3-23a0d51ec485.png)\n\nand\n\n![image](https://f.cloud.github.com/assets/747616/1865261/d893ab40-7809-11e3-8f4c-256c2eff6ce2.png)\n\nOtherwise it looks good.\n. If you do format the code feel free to reopen the PR. I will merge, but only if it's following the code standards, cheers\n. JavaScript is non blocking which means alertify.js does not block the execution like standard dialogs. You would have to use callbacks to handle it.\n\nSince it does not block the execution the code continues to run while the alert is shown causing the the focus to be overlooked.\n\n``` js\nif (TestCase > 1) {\n    alertify.alert(\"Please make a...\", function () {\n        // this code is only called after the button has been clicked\n        document.EditForm.percent_off_subtotal.focus();\n    });\n}\n```\n. Closing - if you need more help feel free to reopen or open a new issue.\n. There is a `.alertify-message` class that can be used to left align just the message, if I understand correctly.\n. Closing - feel free to reopen if this didn't solve your issue.\n. ``` js\n$(document).ready(function(){\n    $('.delete-page').on('click', function(event){\n        // add me, stop the default link from clicking\n        event.preventDefault();\n\n        alertify.confirm(\"Message\", function (e) {\n          if (e) {\n              // use window.location and go to a->href\n          } else {            \n            return false; \n          }        \n      });     \n    });\n});\n```\n. Closing - feel free to reopen if this didn't solve your issue.\n. What version of safari are you seeing this in? \n\nThe default behaviour is to block access to other elements, could you provide me a sample case with the issue? \n. Thanks - would it be possible to squash your commits? Then I'll merge.\n. Could you provide more information?\n. Thanks for the submission but I've deprecated `0.4`. I'm jumping straight to `0.5` which will hopefully turn into a `1.0` and a possibly the end of this project. https://github.com/fabien-d/alertify.js/pull/173\n\nAlso, `warning` is not part of the alertify core. You would have to add the `warning` to alertify for this to be merged. If you want to add it to `0.3` I'll merge.\n\n## Example\n\nhttps://github.com/fabien-d/alertify.js/blob/0.3/src/alertify.js#L612\n\n``` js\nwarning : function (message, wait) { _alertify.log(message, \"warning\", wait); return this; }\n```\n. Closing - if you want to send the patch to `0.3` I'll merge in there. Cheers\n. thanks for the PR but this isn't the look and feel direction I'm looking for. If you want to keep playing around with styles, feel free to update this PR or even just post screenshots in the issue itself (#187) so we can have some open discussion around the overall direction.\n\nI'm looking for something much simpler and not as obtrusive. Cheers,\n. the base colour is really more of a \"wireframe\" approach. I want to get a theme before I release `0.5.0` - but I would like to keep it more on the subtle side\n. The div highlighted in the screenshot below covers the alertify dialog (higher `z-index`) and also has a `tabindex` of `-1`. If you simply remove the `tabindex` attribute you will be able to edit the alertify prompt.\n\n![image](https://f.cloud.github.com/assets/747616/2491019/a2065efe-b1d6-11e3-8473-827a95357338.png)\n\nFeel free to reopen if this does not solve your issue.\n. And I should have looked at the stackoverflow link before posting that - \n. Unfortunately not at this time. It may be worth doing in the `0.5.0` [release](https://github.com/fabien-d/alertify.js/pull/173/).\n. Thanks for the PR - I do like the idea. There are a few things missing:\n- update the `log`, `success` and `error` methods in the API. (https://github.com/S-anasol/alertify.js/blob/0.3/lib/alertify.js#L622-L625)\n- update the `extend` method to ensure the functionality can also be used. (https://github.com/S-anasol/alertify.js/blob/0.3/lib/alertify.js#L396-L402)\n. could you provide more info? Version, screenshots, code sample to recreate...\n. When a dialog is open, it creates an invisible cover that will disable all mouse clicks from happening on the underlying site. This is to \"mimic\" the behaviour of native dialogs. \n\nDialogs are used to force the user to take an action before being able to continue. This is intended behaviour.\n. I think we're talking about the same thing... you're issue is attempting to click a link on the page (behind the dialog)?\n\nIf so, that is blocked by design. If that's not what you mean - may need to provide a bit more info\n. I misunderstood - log messages should NOT block interaction. If that's what is happening then there could be a bug.\n\nCould you provide a small code sample that recreates the issue? Also, which version/browser this is happening and I'll take a look \n. I'm in the process of cleaning up the repo - master is currently an old dev version of `0.4` which is deprecated. If your issue is happening in `0.3` you would have to open the PR against that branch.\n\nThe fix seems strange, I'm looking at reproducing your error - but I'm not able to. The `.alertify-logs` element is only the size of the log messages and don't interfere with any elements below.\n. I'll investigate - I'm not too familiar with `iframe` communication so if anyone as more information that would be helpful\n. Does this **only** happen in IE11? IE10- and other browsers are ok?\n. could you provide a sample recreating this issue? It would make debugging/fixing easier. Thanks\n. No problem! \n. I don't know much about .NET environments, but a few quick things to check -\n1. Could there be another script that is interfering? If you remove all other JS files, does the problem remain?\n2. Double and triple check the path\n3. Are you using AMD (e.g. requirejs)? That would prevent `alertify` from getting attached to the `window` object causing it to be `undefined`.\n. The position of dialogs are currently controlled globally, meaning all dialogs open at the same location. There is no way to open a dialog at a specific location for each trigger element.\n\nIf this doesn't answer you question - please see the [opening issues](https://github.com/fabien-d/alertify.js/wiki/Opening-Issues) page and provide more information to have this issue solved.\n. Are you able to reproduce the issue on the [example site](http://fabien-d.github.io/alertify.js/)?\n\nAnd please see https://github.com/fabien-d/alertify.js/wiki/Opening-Issues to provide enough information to be able to get issues resolved in a timely manner.\n. what version of alertify.js are you using? `Alertify` (uppercase \"A\") was part of `0.4` which is deprecated. I would suggest using `0.3` or `0.5` which uses `alertify` (lowercase \"a\").\n\nUsage and examples can be found at: https://github.com/fabien-d/alertify.js/wiki#usage-documentation\n. Could you provide more info? There is an [opening issues](https://github.com/fabien-d/alertify.js/wiki/Opening-Issues) wiki entry on providing the information needed to quickly resolve the issue. I unfortunately don't have too much free time at the moment, and the more information you provide, the easier it will be for me (or someone else) to help you out.\n\nExample template from the wiki. Cheers\n\n``` bash\n### Describe the issue you are having\n[insert description]\n\n### What version of alertify.js are you using\n[insert version]\n\n### Steps to reproduce the issue\n1. [insert steps]\n2. [insert steps]\n\n### What browser(s) is this happening in\n[insert browsers]\n\n### Link to reproduced issue\n[insert link]\n\n### Screenshots (if applicable)\n[insert screenshots]\n```\n. Any chance you could provide a code sample with the error? I'm trying to reproduce but can't - also does it happen on the [demo page](http://fabien-d.github.io/alertify.js/)?\n. I was debating this myself - in `0.3` the HTML was inserted via JS, but with `0.5` I was leaning towards having it in the DOM by default. Saves the DOM injection which (in a way) makes it slightly faster. \n\nI'm not married to the idea - I'm open to re-inserting in the JS if it makes sense. But I do like the idea of HTML being HTML. It's a transition towards it being a component.\n. I will - I've never published to NPM (someone did), only bower. I'll update as soon as I get a chance.\n. It is not possible. Alertify.js mimics the native dialogs and the `prompt` dialog is a single input.\n. I've updated the site (http://fabien-d.github.io/alertify.js/) with a link pointing back to your fork. I'm going to leave the repo as is until a fork takes off. Your roadmap does look good - \n. >  it's not my fork\n\nMy bad. I shouldn't have assumed it was.\n. All animations/effects are done through CSS transitions.\n. duplicate of https://github.com/fabien-d/alertify.js/issues/234\n. This project is no longer being maintained.\n\nThis is not a feature I would add to the core plugin. The dialogs purposely do not have a self closing method because the goal of a dialog is to get a response from the user. The project aimed to keep the alertify.js dialogs reflecting the native dialogs.\n. This is not an alertify.js issue. This is a form handling/submission issue. Without changing your code, the following would work.\r\n\r\nPass the event object from the markup:\r\n\r\n```diff\r\n- onclick='return xFunction();'\r\n+ onclick='return xFunction(event);'\r\n```\r\n\r\nAdd the event object as a parameter:\r\n\r\n```diff\r\n- xFunction = function() {\r\n+ xFunction = function(event) {\r\n```\r\n\r\nNow the `preventDefault()` will stop the form from submitting so you'll have to submit it programmatically when the dialog is confirmed.\r\n\r\n```diff\r\n- $('#conf1').click();\r\n+ $('form').submit();\r\n```\r\n\r\nyou can look at a quick \"working\" example on CodePen: https://codepen.io/fabien-d/pen/c2874e38af19af131d088afc75bdf2d2. Thanks for submitting the issue. Fixed with ^ pull request.\n. Thanks for the note, testing is high on the priority list at the moment... \n. Resolved with ^ pull request\n. Resolved with ^ pull request\n. fixed with ^ pull request\n. I currently don't have access to Ubuntu - and I'm not fully clear on the issue you're having. Could you provide a screenshot(s)?\n. I was able to recreate it - sort of ... If I click on the first pixel (top) of the button, it moves down by 1px (:active state) which most likely moves the hit state as well, so on release it's no longer on the button and the click doesn't get triggered.\n\nI'll look at it some more -\n. Closing with ^ pull request will be part of release `0.4.0`\n. Moved to `0.3.5` release\n. Currently the pull request can't be merged automatically - \n\nI haven't updated/written the documentation for code updates yet, but changes should be made in the 'src/' folder. The 'lib/' files get automatically created by grunt after the lint and tests (tests incomplete at the moment) run successfully.\n\nAs for the functionality, I'm currently on the fence with this one. I may reconsider if this becomes a common issue. But I'd rather stick with inserting JS files at the bottom of the page.\n. Maybe as an alternative, it shouldn't initialize automatically. It could expose the init method and force the user to initialize...\n\n``` js\n// setup once\nalertify.init();\n\n// and then use\nalertify.alert(\"...\");\n```\n\nThat way it's only trying to access the DOM to create the elements when required. I'm still not sure if a DOM loaded event is the way to go for this issue.\n. Thanks for the request, it did surface an issue - however I went with a different approach (https://github.com/fabien-d/alertify.js/pull/22 initialize on first use) instead of the DOM loaded event.\n. Fixed with ^^ pull request\n. Closing with ^ pull request\n. I've split the core and theme CSS into separate files. For this one, I'm leaning towards simply adding a alertify.bootstrap.css file which would style the dialogs in a bootstrap look and feel.\n. New CSS file was created to support a bootstrap look and feel. Will be part of 0.3.0 release.\n. Resolved with ^ pull request.\n. Thanks for the update, I'd prefer you kept the align as it was (values aligned), and make sure it doesn't break the grunt concat/min process. In the root of the directory, the grunt.js uses this file to generate the banner comment and some of the object keys it's looking for have been removed.\n. I like it - could you squash your commits and then I'll merge?\n. It is not standard behaviour of native alert() dialogs... but I'm still leaning towards it. I think it makes sense from a user perspective (even if it's not a modal window, which are what people tend to close with ESC)\n. I generally rebase (if the code hasn't be pushed - otherwise conflicts can occur)\n\n```\ngit rebase -i HEAD~3\n```\n\n3 is the number of commits to go back on. http://git-scm.com/book/en/Git-Tools-Rewriting-History#Changing-Multiple-Commit-Messages\n\nthen squash comits onto each other\n\n```\npick ...\nsquash ...\nsquash ...\n```\n\nhttp://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits\n. You're testing changes got pushed and added to the pull request and also it can no longer be merged automatically. If you want to clean the commits and only leave 2fc2a2f - I'll merge (w/ fixed indentation)\n. This was being discussed in pull request https://github.com/fabien-d/alertify.js/pull/10. The request was to add a DOM loaded event, which I'm still not sure is the right approach for this project since most people already have a library to do this (e.g. jQuery)...\n\nI was thinking of 2 options (code examples are just for visual purposes):\n- expose the init method in the API meaning it would have to be initiated before use\n\n``` js\n// initialize after DOM ready\nalertify.init();\n\n// use\nalertify.alert(\"...\");\n```\n- check the first time alertify is used to see if it's already been initialized. That way it doesn't change the current usage but prevents alertify from trying to create DOM elements before it's told to.\n\n``` js\n// maybe in the dialog method\nif (typeof init === \"function\") init();\n\n// and have the init method delete itself after first use\ninit = function () {\n    ...\n    delete this.init;\n}\n```\n\nI'd love to get some input on it.\n. Documentation updates are a priority this weekend - mainly around usage, code contribution guidelines ... \n. Fixed with ^ pull request\n. Should be fixed with ^ pull request\n. Fixed with ^^ pull request\n. I removed it since it made sense to bind the enter key to the buttons instead of the document (keyboard accessibility purposes).\n\nValid point for the prompt dialog though, it should behave like a form (submit from input field)... I opened a new issue for it https://github.com/fabien-d/alertify.js/issues/28.\n. Fixed with ^ pull request\n. fixed with ^ pull request\n. Hitting ENTER multiple times (after closing a dialog) triggers the href=\"#\" on the button link... resetting the focus to the trigger element will resolve this issue\n. Fixed with ^^ pull request\n. Thanks for the fix! Added a few minor spacing comments... also ~~could you update the version in the package.json to 0.2.3~~ I'll update this after merging... \n. Good catch. I'm wondering if it makes sense to keep  the same functionality and fix the browser navigation issue or move towards the native implementation of dialogs (no callbacks). There's no validation in native dialogs, it simply does its job and lets the code figure out what to do with it... \n\ne.g.\n\n``` js\nvar string = alertify.prompt(\"name?\");\n// string equals the input value... \n// continue code\n\nif (alertify.confirm(\"sure?\")) {\n// true\n} else {\n// false\n}\n```\n\nThis would make it resemble the native dialogs but would take away the benefits of callbacks and chaining.\n. Fixed with ^^ pull request\n. This looks good. Just need to apply the same \"wait\" parameter to the \"extend\" method.\n\ne.g. This should work... \n\n``` js\nalertify.custom = alertify.extend(\"custom\");\nalertify.custom( message, wait );\n```\n. I'm not sure about this. The goal is to mimic browsers native behaviour as much as possible, but still keep UX in mind. IMO an \"undefined\" value for a message doesn't seem to benefit the user in any way where as a error tells the developer what is wrong during dev.\n\nI'm open to the discussion and if I get good argument to go down this road - I'm open to implementing.\n\nAs for issue https://github.com/fabien-d/alertify.js/issues/24, it's more about a optional prompt value (the default value that shows in the input field).\n. Closing this pull request. For the time being, I'm going to leave the message as required. Thanks\n. I'm with @abrkn. The prompt dialog is intended to access a value and pass it to a callback - nothing more, nothing less. It's the callbacks job to handle validation.\n\nI'll leave issue open and hear other opinions, but at this time I'm not inclined to implement.\n. I'll leave the issue open as a discussion and if the features gets a lot of interest I will reconsider.\n. I wouldn't say that a prompt dialog is a typical use-case for a login box. Not very secure. \n\nHowever, I'm considering adding an [HTTP Authentication dialog](http://www.httpwatch.com/httpgallery/authentication/). \n\n## Screenshot\n\n![HTTPAuth](https://f.cloud.github.com/assets/747616/57245/c8d7bf02-5b40-11e2-8852-7165637a429d.png)\nScreenshot below is from above link under example 10, by clicking `Display Image` button.\n. I just don't like passwords getting passed around unencrypted.\n\nThe idea for the auth dialog would need to be flushed, but at first thought I'm seeing it tied to a form element. It wouldn't provide the login functionality, just a wrapper to point to an end point that would. That form could get be intercepted using JS to prevent post back.\n\nJust thinking out loud, if I decide to implement an auth dialog in alertify, it needs to be flexible, easily extendible without adding unnecessary bloat.\n. I'm not opposed to adding types, still not convinced on attributes (that is getting into a lot of bloat) - but it may have to wait for the `0.4`. \n\nThe way the prompt dialog API is setup already has 3 optional parameters and would have to be reworked. \n\n**From:**\n\n``` js\nprompt( text [, callback, value, classes ] );\n```\n\n**To:**\n\n``` js\nprompt( text [, callback, options ] );\n\n// where options contains (variable names for demonstration):\noptions = {\n    value: '',\n    classes: '',\n    type: ''\n};\n```\n\n**Instead of:**\n\n``` js\nprompt( text [, callback, value, classes, TYPE ] );\n```\n\nand I don't want to change the API (to break existing functionality) within a minor release. The `0.4` is based on a very similar API but since it's a release candidate I don't have an issue updating it to reflect a better approach.\n. Closing this issue - it's been sitting for a long time\n. I agree this could be a nice feature since it would mimic the native dialogs - but from a user experience, I'd rather have consistency. The goal is to mimic the native dialogs as much as possible, but also aim to improve the user experience where possible.\n\nI'll leave open for discussion - and see where this goes.\n. I'm not opposed to the `reverse` option. It could be part of the `set` method.\ne.g. `alertify.set({ buttonReverse: true });`\n\nor even more specific\n`alertify.set({ buttonOrder: 'win' });`, `alertify.set({ buttonOrder: 'mac' });`\n\nSomething along those lines. I'm opposed to adding the user agent sniffing code in alertify... \n. @stuartkeith looks good. I left a comment on 1 line... but if you want to open a PR for it, I'll merge\n. Closed with ^ pull request. Will be part of release 0.3.1.\n. I'm assuming (don't have the device to test) that it's a `position: fixed` support issue. I'll keep this on the radar and look for a valid fallback! \n. Sure - that would be great. Feel free to open a PR and we can start a discussion in there.\n. @javizarza any update on the fix? \n. You're in the right direction - the two main issues I have with this approach are:\n1. Agent detection instead of feature detection (I'd rather test against position fixed versus trying to determine all agent that don't support it)\n2. It's adding quite a bit of bloat calculating the position and adding inline styles\n\nI'm leaning towards checking what the modernizr test for position fixed is and see if that's a small enough test to add to the library. Then if the current device doesn't support position fixed, fallback to the default browser dialogs.\n\nmy 2 cents\n. It's a regression, I've resolved the labels property earlier (https://github.com/fabien-d/alertify.js/pull/45), the same will be applied to the delay property.\n\nFor now, you can specify the wait parameter individually...\n\n``` js\nalertify.success(\"message\", wait); // optional time in ms\n```\n. Fixed with ^^ pull request\n. you can call any of the alertify methods (e.g. alert, confirm, log...) on page load. \n\nIf you have a DOM ready function... e.g. jQuery\n\n``` js\n$(function() {\n    alertify.alert(\"Test\");\n});\n```\n\nor you can load the library at the end of the html page and call it from there (inline script is not ideal - just for demonstration purposes).\n\n``` html\n    <script src=\"path_to_file/alertify.min.js\"></script>\n    <script>alertify.alert(\"test\");</script>\n</body>\n```\n. it's hard to help with the information you're providing. It seems like you're looking for more help than just implementing this plugin.\n\nIf you linked the alertify.js file like option 2 from the comment above (and replace the path_to_file with the actual path to the image) it should work. \n. This hasn't had any activity in a while, closing.\n. Is this a unique instance request, where you can use multiple alerts but change/override any specific one OR a generic override for all buttons?\n\nif the latter, a CSS overwrite would do\n\n``` css\n.alertify-button-ok { ... }\n```\n\notherwise, maybe adding an optional parameter that allows a custom class for any dialog would be beneficial?\n\n### JavaScript\n\n``` js\nalertify.alert(\"Message\", callback, \"custom-class\");\n```\n\n### CSS\n\n``` css\n.alertify-dialog-custom-call { ... }\n```\n. I can see this being useful, I'll have to think about the approach/implementation that makes the most sense... I want to be careful not overdoing the optional parameters.\n\nSuggestions are welcomed.\n. will be part of the 0.3.0 release. usage:\n\n``` js\nalertify.alert(\"message\", function () {}, \"css_class\");\nalertify.confirm(\"message\", function () {}, \"css_class\");\nalertify.prompt(\"message\", function () {}, \"placeholder\", \"css_class\");\n```\n. This would be a nice feature - it's already possible to use with bower without the component.json, you just need the full git url, which I know isn't ideal.\n\n```\n$ bower install git://github.com/fabien-d/alertify.js.git\n```\n\nThe bower documentation says [there should only be at most one file per file type in the main list](https://github.com/twitter/bower#defining-a-package).\n\nI'm thinking I may create a separate shim repo similar to what the [github components](https://github.com/components) has, and serve alertify from there. That way it's separate and only serves the files needed. \n\nIt would require a bit of thinking since I'm hoping to expand the theme options to more than just the alertify.default.css.\n\nI've assigned this to the 0.3.0 milestone.\n. Closing this pull request. I've registered `alertify` as a bower package and pointed it to the shim repo https://github.com/fabien-d/alertify.js-shim.\n\nThanks for the suggestion.\n. rest looks good. I need to pay more attention to this!\n. this can no longer be merged automatically.\n\nCould you also provide some info (or link to info) on this? Just for my benefit. I get removing the gist of it, but would like to get more background!\n. The intention is to animate in/out. It's using CSS3 transitions so it requires a bit more logic to only remove the element after the transition is done.\n\nI will be implementing using the `transitionend` event. The fallback for [browsers that don't support the event](https://developer.mozilla.org/en-US/docs/CSS/Using_CSS_transitions#Browser_compatibility) will simply remove the element right away - as it currently does. \n. resolved with ^ pull request. Will be part of 0.3.1\n. I appreciate the pull request... but I'm not really for this feature at this time. I don't believe it's the job of alertify to prevent it. And while I love customization - I want to limit the options and not have alertify try to do everything!\n. I like the feature, but please read the [coding standards](https://github.com/fabien-d/alertify.js/wiki/Coding-Standards) and [Submitting a Pull Request](https://github.com/fabien-d/alertify.js/wiki/Submitting-a-Pull-Request).\n\nChanges should be made to the `src/alertify.js` file.\n. Status update? Looking to merge this in.\n. Opened new pull request ^ with same functionality.\n. alertify has a transparent cover element (which prevents clicking on elements behind the dialog) that can be styled as @RiderSx mentioned.\n\n``` css\n.alertify-cover {\n    // can use an image\n    background: url( path_to_transparent_image );\n    // or can use RGBA\n    // this won't work for IE8- and would require a fallback\n    background: rgba(255,255,255,.5);\n}\n```\n. you can apply the element.style to the `.alertify-cover` element.\n\n``` css\n.alertify-cover {\n    background-color: #777777;\n    // untested but prefix and filter must be used\n    // for IE opacity support\n    -moz-opacity: .7;\n    -ms-filter: \"alpha(opacity=70)\";\n    filter: alpha(opacity=70);\n    opacity: .7;\n}\n```\n. I'm going to close this issue. If you have other questions/comment, just reopen the issue or create a new one.\n. I already have a [shim repo for packages](https://github.com/fabien-d/alertify.js-shim). I hadn't included it to the NPM registry yet, but was in the plans. I wanted to make alertify a node module before that happened though. Currently not setup or tested to be used as one.\n\nThe reason behind the shim repo, is that it serves only the files needed. Not the unnecessary bloat that comes with the core.\n. Closing this based on [comment above](https://github.com/fabien-d/alertify.js/pull/67#issuecomment-11485922)\n. It almost sounds like a conflict... If possible, I'd say disable any other plugins or JavaScript just as a preliminary ruling out whether it's a conflict or not (since it can't be reproduce on the example site)\n\nWhen all JS is removed except for alertify, if the issue is gone, it will come down to finding out where the conflict is occurring and if it's an issue with alertify or not.\n\nIf that doesn't solve the issue would you be able to provide more info, e.g. steps to reproduce, screenshots, anything that could help.\n\nIt's hard to debug an issue when it's unreproducible.\n. If you need more info/help simply reopen or log a new issue... if it happens to be a conflict, if you could post info about it, it'd be helpful. It'd be nice to see if it's something that alertify could prevent... \n. I still can't reproduce this in any browser on my mac (don't have access to a PC ATM)\n\nA couple things:\n1. I'd add a doctype - your page may be in quirks mode `<!doctype html>`\n2. How are you calling the `gotoButtonClick` function? Maybe that's where the issue happens.\n\nIt's very strange, all the button styles are simply CSS\n. Awesome. Any chance you could squash your commits? And feel free to throw your information in the Contributors doc!\n. Alertify is more aimed at replicating the native dialog which is why the public API is limited and only exposes the absolute required methods. I'm not sure if extending fits the description of what alertify.js tries to achieve.\n\nFor custom HTML or close buttons (to reuse your examples) falls more under a modal pattern, which many great libraries already offer.\n. Could you provide more info? I tried the same code on my end and it works properly.\n1. Browser/OS it's happening?\n2. How do you call the confirmDelete method?\n3. Is there any other JS that could create a conflict?\n. Has this been resolved? Looking to close this issue.\n. Closing - If more help is required, reopen or log a new issue\n. Never considered that use case. An extra class would be a viable option. \n\nA quick workaround, until a solution for all targeted browsers is available, is to use the `:empty` CSS selector [(browser support)](https://developer.mozilla.org/en-US/docs/CSS/:empty#Browser_compatibility).\n\n``` css\n.alertify-logs:empty {\n    display: none;\n}\n```\n. Fixed with ^ pull request. Will be part of release `0.4.0`\n. Moved to `0.3.5` release\n. I'll keep this on the back burner and I'll try to take a look at it when I have access to a windows machine but it appears that Apple has (silently) stopped developing Safari for Windows. The last update (5.1.7) was in May 2012 and they've removed all direct download links on their website. With browser shares the way they are, unless it's an obvious error - I won't be spending too much time on it.\n\nI'll gladly accept a PR with a fix (if it doesn't require a safari specific hack) but otherwise, unfortunately for the time being, it's going to be low on the list of priorities.\n. Don't quote me on \"no longer supported\"... but certainly appears going in that direction\n. This issue should now be fixed. There was a CSS property that was conflicting with older versions of Safari. I've restructured a few things in ^ pull request.\n. Great! Closing issue\n. The elements get removed once the `transitionend` event is triggered. There was a [bug regarding this issue](https://bugs.webkit.org/show_bug.cgi?id=105647) reported. At a quick glance it appears that it had been resolved in the canary build, but I'll take a closer look when I have a chance.\n\nI wouldn't consider this a critical issue since the canary is an early adoption version and things may still change.\n. Definitely worth mentioning. I'll be keeping an eye on it. Cheers! \n. Appears to be resolved with stable release of chrome 26. Closing.\n. It's weird since the page shouldn't scroll, like you said it's simply a position fix. Sounds like it may not prevent the default event on the button click.\n- Does it happen with all three dialogs, or just prompt?\n- Can you recreate on the [example site](http://fabien-d.github.com/alertify.js/)?\n- Does it append a blank anchor `#` to URL after button click?\n\nIf you could provide screenshots and/or post more info (code sample to recreate) I can try to debug. \n. yeah, fair enough... What OS? And can you reproduce on any other browsers (or are other browsers good like FF)?\n. I think I was able to reproduce, I'll look into it some more shortly and hopefully get this resolved soon.\n. Tied to this https://github.com/fabien-d/alertify.js/issues/81 - I can reproduce the Safari 5.1.\\* issue where the dialogs don't show which I believe is what you mean by freezes up (dialog doesn't show, but cover does - meaning you can't click on anything)\n\nStill investigating the jump to top issue.\n. #### Jump to Top\n\nThis is a result of setting focus to the OK button or input focus before the animation is complete. Currently a `setTimeout` with a `50ms` delay is used which resolves issues with certain browsers that weren't setting focus at all. Setting a higher delay, e.g. `1000ms` resolved the jump but is really ugly. Looking for a cleaner more reliable approach. (Thinking of using the `transitionend` instead of `setTimeout` to set focus)\n\n#### Dialogs not Showing\n\nThere is a parameter of `visibility: hidden` in the `.alertify-hidden` class in the core `alertify.core.css` file. Removing this resolves the dialogs not showing but causes a failure in IE8-. Looking for a solution that will work cross browser.\n\nThanks for logging the issue - this will help solve major flaws.\n. Issues should be resolved with ^ pull request.\n. Awesome. Closing this issue. If anything comes up simply re-open or log a new one. Cheers\n. There's more to it than simply removing focus on the button (from a code's perspective). The ENTER and ESC keys are also bound to the buttons. This means you can click OK and Cancel via the ENTER and ESC respectively even if the buttons don't have focus.\n\n> I am making double sure the user wants to take the action they just indicated, \n\nAgreed, that's fair and a common use case\n\n> as I want the user to do extra work to complete the action\n\nNot sure I agree with this. Having to click twice (once for the initial action and once to confirm in the dialog) seems sufficient and standard practice. Taking away the ENTER key event, to me seems to go against best UX practices.\n\nI'd love to hear people's opinion...\n. @quasipickle \n\n> With focus on the OK button, they only need click once, then hit enter once\n\nI still think less savvy users (if primarily a mouse user) would not necessarily assume a focus state to the ENTER key and go from clicking a button with the mouse followed by an immediate ENTER key just because the button is focused.\n\nThe implementation of the native confirm dialog has OK focused by default. Maybe @dparlevliet is on to something. An extension of the confirm prompt which requires an actionable item (e.g. checkbox) before a user can confirm or deny.\n\nStill not sure it's needed, alertify is already rapidly growing in size (want to optimize and shrink it) and want to make sure that all features implemented into the core are valuable to the majority of users and not unique cases.\n\nMaybe starting an extension library would make sense and would also provide options for https://github.com/fabien-d/alertify.js/issues/39 and https://github.com/fabien-d/alertify.js/issues/70. Doesn't ship out with the core but extensions could be added as dependencies for users you want extra features/dialogs. Just a thought...\n. Feel free to open a PR, it's usually easier to have a discussion around physical code! Just follow the info on [submitting a PR](https://github.com/fabien-d/alertify.js/wiki/Submitting-a-Pull-Request)!\n. Awesome @dparlevliet. \n\nMore food for thought, maybe instead of an extension library, a custom build would be better? Ala [Modernizr](http://modernizr.com/download/).\n\nThat way you could essentially just include the exact functionality that is needed and nothing else. (e.g. just dialogs, just logs, add extras...)\n. Closing with ^ pull request\n. Functional testing is far from up to date in alertify - so I wouldn't necessarily worry about it. I'm still new to testing so I've been focusing more on unit testing than functional testing. If you can sort it out, and more functional test can be based off of it that would be fantastic.\n\nI'm assuming since PhantomJS uses WebKit, it most likely detects the `transitionend` property and focus isn't set when you attempt to grab the active element. Since in the test there is no trigger element, you get back the `body` element.\n\nIn the jsfiddle you sent, the focus element is the `trigger` element and not the OK button. I'm assuming it's the same issue, focus isn't set until the transition is done, and therefore the active element remains the trigger button.\n. Overall I like it... a couple of minor code styling. My biggest concern is the focus state when set to `none`. If we can sort that out, I'll merge this in. \n. Tying to issue https://github.com/fabien-d/alertify.js/issues/86\n. I've update to 0.3.4 to resolve another issue. Just an FYI that you'll need to merge master into your branch so it can be automatically merged.\n. The inability to tab is a browser setting which (I believe) is off (mac webkit only?) by default.\n\n## Safari Preferences\n\nPress Tab option \n![Safari](https://f.cloud.github.com/assets/747616/65043/1c2a7f9a-5e67-11e2-9aea-b9841b49c2a6.png)\n\n## Chrome Settings\n\nPressing Tab option\n![Chrome](https://f.cloud.github.com/assets/747616/65042/1bb92ffc-5e67-11e2-81f4-180a66d754d1.png)\n\nI don't have an issue tabbing through the links in the dialogs. The idea to not set the focus inside the dialog means that as a keyboard user (I rarely use the mouse) I have to tab through the entire page. I understand that the idea is to avoid (as much as possible) a user from doing something they didn't want.\n\nBut I won't sacrifice accessibility for it. I like the concept here - setting which button has focus, but still need a solution for null.\n\nAlso as an alternative, have you considered changing the labels on the button to be more descriptive? E.g. \"Disconnect Account\" and \"Cancel\" instead of a simple \"OK\", \"Cancel\" to re-enforce the action they will be taking?\n. The resetFocus element is at the end to keep the focus inside the dialog. When it receives focus, it automatically resets it to the first element so you can tab all you want and never leave the dialog\n. Option 1 works for me. Also for commit 077b28b, did you by chance remove the wrong file?\n. it seems like the 2 test files have been removed...Make sure these are still included and that you merge with master. I've made a few updates since you started this branch and it can no longer be automatically merged.\n. Actually that may be better - just link it to this one so the conversation doesn't get lost. And make sure you pull my master into your branch so it can be merged automatically.\n\nAlso, send the PR to the branch `staging`. I'm going to update documentation, that way I can do a code review, merge, pull down that branch, do the testing (without setting new remotes to pull down the PR branch) and so on... Just going to be a new process.\n. This is off the top of my head, so may want to just research and read up and confirm the syntax:\n\nSetup an upstream, a link so you can access my repo\n`git remote add upstream git://github.com/fabien-d/alertify.js.git`\n\nthen you can fetch, which will pull down the latest code from this repo\n`git fetch upstream`\n\nand then you can pull the changes from this repos master into your branch (may want to create a test branch to do this just to see what happens)\n`git pull upstream master`\n\nYou can read a bit on it here... http://gun.io/blog/how-to-github-fork-branch-and-pull-request/ under Make Your Fork Track the Original Upstream Repo\n\nThe article suggests doing a `git merge upstream/master` (from your master branch) which should make your repos master match my repos master... and then you would be able switch back to your dev branch, and do a `git pull origin master` and it should pull my changes into it.\n\nAgain, I would suggest you try it out in a test branch, so if anything goes wrong, you can just trash and move on.\n. The reason I can't accept it now is that it can't be automatically merged. The whole process of setting up an `upstream` doesn't normally get into play when submitting a quick patch, the problem here is that I've made some updates to master since you created your branch.\n\nCurrently your code base is out of date with mine, and some of your changes are conflicting with the updated master branch in my repo, so git doesn't know how to merge. Setting up an `upstream` simply allows you to pull in the latest update from my repo into yours, so that your pull request can be automatically merged.\n\nI appreciate your patience, and if you can set it up into another PR which includes the latest code from my master branch so it can be automatically merged, I'll merge, otherwise I can't... actually can't, I don't get the merge button.\n\nIt can sound like a lot, but it's really not that bad when you get a hang of git. \n. Do you mean log messages? And what exactly are you trying to do, add/pass custom HTML to a log message?\n. Close this - dup of #89. The dialog box is always the same - and can already be targeted. The log messages will be returned when issue #89 is resolved.\n. From code, no. You can click to close, plus it automatically closes after set time. Can you provide a use case for this? \n. I see your point. I'm thinking I may return the log message instead of the alertify object... This would take away chaining on log messages, but would return the newly created log message.\n\nI'll have to consider a few options, see what makes the most sense.\n. @simonwade this is a good approach. I was thinking of separating the log message and the dialog message into [separate modules](https://github.com/fabien-d/alertify.js/issues/90). I would keep the dialog module as a singleton and restructure the log module as a factory.\n\nThe idea would be to offer a custom build option for alertify to only include the parts needed.\n. The custom build would be optional - similar to [Modernizr](http://modernizr.com/download/).\n\nBower would still pull in the full core library (no extension). The custom build option would simply be available for extensions that shouldn't be in the core library, but could be useful to some.\n. This issue is resolved in `0.4.0rc1`. You can now do:\n\n``` js\nvar log = Alertify.log.info(\"Notification Message\", 0);\n\n// close\nlog.close();\n\n// after closing, you can recreate and reshow\nlog.create();\nlog.show();\n\n// you can also get the log element\n// returns DOM element\nlog.el\n```\n\nYou can try it out on the [demo site](http://fabien-d.github.com/alertify.js/0.4.0rc1/)\n. I'm still looking for the ideal build to make it easy for users to use and for developers to extend/customize. I've started modularizing it for `0.4.0`. You can check it out at http://fabien-d.github.com/alertify.js/0.4.0rc1 and the source code is the master branch.\n\nStill not perfect, but much more structured and a step in the right direction. I'm hoping by the release of 0.4.0 to have an extendable library but also one that can be added to the site in no time.\n. Merged. Issue resolved in `0.3.9`. Branch `0.3` of repo or can be downloaded for the [demo site](http://fabien-d.github.io/alertify.js/).\n\nLeaving opening because it's still an issue for `0.4`.\n. `0.4` is deprecated - closing\n. Great catch! Resolved with ^ pull request\n. @dparlevliet gave you good advice. I haven't tested the code, but it makes sense. For me, I would have asked why you wanted to do it this way? The only 2 things I can think of:\n1. You don't like writing `alertify.` everytime, or you wish to replace all existing native dialogs without changing any of the code base.\n2. You like that the native dialogs return a value  \n\n``` js\nalert(...)   // returns undefined\nconfirm(...) // returns true/false\nprompt(...)  // returns input value/null\n```\n\nBoth of which are very hard to deal with.\n\n> because the very nature of JavaScript is non-blocking\n\nThis is it. A user can't interact with a piece of UI while the script is executing, so if a user has to interact with UI before the script finishes, and the script has to finish before the user can interact with the UI... the browser would hang.\n\nThis is why alertify is using callbacks. It ensures that the script is only executed after the interaction has been made, but it doesn't block the execution of the rest of the code.\n\nI would consider changing the implementation and adding a `finally` function as a parameter. I'm not sure if it adds too much value, but could be worth exploring.\n\n``` js\nalertify.alert(\"string\", fnYes, fnFinally);\nalertify.confirm(\"string\", fnYes, fnNo, fnFinally);\nalertify.prompt(\"string\", fnYes, fnNo, fnFinally); \n```\n\nAbove is very rough, but the `fnFinally` method would be called after the `fnYes` or `fnNo` to continue with your next code block.\n. As @dparlevliet mentioned, JavaScript is non-blocking by design. The idea that `alertify.` can simply be thrown in front of native dialog and everything just works is flawed.\n\nI also get that it would be nice if it could, but it's just not possible. It's just a matter of separating the code a little bit.\n\nStep 1: Current code\n\n``` js\n// using native dialogs\nfunction init () {\n    var answer = prompt(\"question\");\n    // do something with answer\n}\n```\n\nStep 2: Separate the dialog from the rest of the code\n\n``` js\n// change to\nfunction init () {\n    var answer = prompt(\"question\");\n    handleAnswer(answer);\n}\n\nfunction handleAnswer (answer) {\n    // do something with answer\n}\n```\n\nStep 3: using alertify\n\n``` js\n// alertify 0.3.8\nfunction init () {\n    alertify.prompt(\"question\", function (e, answer) {\n        if (e) {\n            handleAnswer(answer);\n        }\n    });\n}\n\nfunction handleAnswer (answer) {\n    // do something with answer\n}\n```\n\n``` js\n// alertify 0.4.0rc1\nfunction init () {\n    Alertify.dialog.prompt(\"question\", function (answer) {\n        handleAnswer(answer);\n    });\n}\n\nfunction handleAnswer (answer) {\n    // do something with answer\n}\n```\n. Tying to https://github.com/fabien-d/alertify.js/pull/87 to keep the conversation around this PR. Two quick things (and then I'm done - I swear):\n1. Could you re-insert https://github.com/fabien-d/alertify.js/pull/87/files#L0R36 back? That was a great catch\n2. Could you update your single quotes to double quotes (for consistency)\n\nDon't worry about squashing - 2 commits is fine. Also feel free to add your info in the Contributors.md file in the root.\n\nOnce that's in - I'll merge! \n\nCheers\n. Appreciate the back and forth... I'm going to test it when I get home, and it will be part of the next minor version bump. Cheers\n. Strange... can you try pasting the following in the console on http://fabien-d.github.com/alertify.js/ and see if you can reproduce?\n\n``` js\ndata = { name: \"test\" }\nalertify.log(data.name + ' has disconnected!', 'error', 5000);\n```\n\nor using the `error` shorthand.\n\n``` js\ndata = { name: \"test\" }\nalertify.error(data.name + ' has disconnected!', 5000);\n```\n\nI've tried both in chrome on OS X and don't have an issue clicking to close, or changing the `5000` to any value.\n. If you're using chrome.. you can hit `cmd+alt+j` to pull up the console or View > Developer > JavaScript Console. You'll be able to use the console there.\n\nBut it does sound like a conflict... if you have a hard time debugging, you can post (or send me a DM) with more code, I can take a look.\n. No problem, glad you were able to sort it out.\n. What version of alertify are you using? I fixed a similar issue at `0.3.3` so it may simply be an outdated version.\n\nAlso, could you double check the behaviour on the [demo page](http://fabien-d.github.com/alertify.js/) (in IE9) to see if you can reproduce the same functionality (I wasn't able to)? I added a return false at the bottom of the function to prevent the default event from firing for browsers that don't support `event.preventDefault`. If a piece of code in your callback is causing an error, the return false would never be reached and the default event would be fired.\n\nI will look into the `returnValue` property... so instead of just testing against `event.preventDefault`... do something along the lines of `event.preventDefault ? event.preventDefault() : event.returnValue = false;` to try and prevent the default event from ever firing.\n. `0.4.0` isn't out yet, latest is `0.3.7` as of today! But glad to hear the issue is resolved. Cheers\n. I noticed this issue when building the new site yesterday - link styles from the site can conflict with the link styles in alertify.js, not just the bootstrap theme.\n\nThe direction I'm looking for is to reset all `a` styles in the `alertify.core.css` to ensure no conflict happens. That way, any styles in the site will be reset to none (e.g. `background`, `border`, `text-decoration`...) and only the styles defined in alertify.js will be shown.\n. I've updated the CSS to avoid (as much as possible) any conflicts in ^ PR. Thanks for submitting.\n. Could you provide a code sample (reproducible example)? Currently alertify dialogs are queued and shouldn't overlap. Also, the cover element should show up blocking any interaction with the page. I'm attempting to double click buttons on the example site and can't encounter the issue.\n\nIs there a JS error? There could be a conflict.\n\nAs a side note, something to consider. A user shouldn't be able to re-submit a form.\n. > it will show other alerts\n\nMy bad, I misunderstood this part. I was thinking dialogs and not log messages.\n\nFor log messages, currently there is no way to only open them once, or only if they are not currently open. The thought behind logs was always a 1:1, every time you take an action the corresponding log is shown.\n\nI feel like multiple log messages is still better than no logs at all. That way a user is aware that he's taken another action. If a user clicks a button and there's a log tied to it, then it should show a new one every time that button is clicked. If you don't want it to show more than once, the button should get disabled.\n\nA form for example, I still believe the best approach is to disable the submit button until the form action is completed.\n\nI personally feel like removing the log notification is a workaround the problem... and not really a solution to the problem.\n. Thanks for the PR but IE6 is not on my browser support list and I'd rather not include hacks (more so `expression`) in the css.\n\nI'm still planning on [having support for devices](https://github.com/fabien-d/alertify.js/issues/42) (mainly handhelds) that don't support `position: fixed` so maybe that fix will make IE6 work.\n. > How do I create an external alertify.js using tools provided in the web.\n\nNot sure what you mean?\n\nFrom what I get you should be able to just run `alertify.alert(\"You have...\");`\n. In order to redirect to a different URL, you need to use the callback function, see below:\n\n``` js\n$(document).ready(function() {\n    // alert dialog\n    alertify.alert(\"<b>You have reached the WW Network.<Br>The WW Network uses state-of-art<a href=\\\"http://www.hasoffers.com/customer-satisfaction/\\\">tracking</a> from our private domain tracker.ww.com.<br><i>We are only accepting<a href=\\\"http://network.w-wnetwork.com/signup\\\">*10* new affiliates for January, so join today!</i>\", function () {\n        window.location = \"http://google.ca\";\n    });\n});\n```\n\nnote: you have to escape `\\\"` quotes or use single quotes.\n. I pasted the exact code you need to run what you're asking for in the comment above. You just need to replace the `window.location` with `window.open(URL)`.\n\nI'd rather you not post signup links in the comments for self promotion. I'm glad to help hooking up the functionality you need - but that doesn't require you posting the actual URL.\n\nCheers,\n. Please don't open new issue when you already have one open. Closing, dup of #110\n. Currently there is no setting/config for it. I'm working on making the log messages more flexible (individually control the position of each). In the meantime you can overwrite the CSS to control the position of the logs.\n\n``` css\n.alertify-logs {\n    top: 10px;\n    right: 10px;\n}\n```\n. For now I'd like to keep the look & feel and placement of the elements to be controlled via CSS. I will not implement this functionality into alertify.js.\n\nI may create more themes - with time - that will have elements placed in different location, but these will all be through CSS.\n. Thanks for the PR, I like it.\n\nCould you update the single quotes to double quotes (code consistency) and change the PR to merge into `staging` to follow the [pull request guidelines](https://github.com/fabien-d/alertify.js/wiki/Submitting-a-Pull-Request).\n. You'll need to update your codebase so it can merge automatically. And you'll need to follow the [pull request guidelines](https://github.com/fabien-d/alertify.js/wiki/Submitting-a-Pull-Request).\n\nMainly open the PR to the `staging` branch.\n. Hmm, I like the idea of the buttons. Not sure about the `tabindex` attribute though. It would have to be dynamic because of the `buttonReverse` property. Also, the JS already handles this, sets focus on the proper button and keeps focus inside the dialog while it's open. Not sure how much value the `tabindex` add since it's a dynamically created element.\n\nSide note: you'd need to clean your commits. I would only want the actual code changes, not the merges in ideally 1 squashed commit.\n. The tests don't run because of linting errors. If you fix the quotes issue the tests should pass.\n. I released `0.4.0rc1` and I've included this as part of it. If you want to submit another PR so it's part of the `0.3.*` release, fix the escaping and submit to the `0.3` branch.\n. Mainly fixed in #154 \n. @Martinho0330 This is not the right place for that question. I opened a [new issue](https://github.com/fabien-d/alertify.js/issues/125)\n. Thanks for the note, I've been meaning to update the docs, but haven't had time to fully do them. The master branch is currently at `0.4.0rc1` and the API has changed which is why it doesn't work as expected.\n\nThe `master` branch is tagged at versions to ensure it works as expected at that point, but using `master` as in may sometimes result in unexpected behaviour.\n\nTo use the master branch, you need to follow the new [API documentation](https://github.com/fabien-d/alertify.js/wiki/0.4.*-API-Documentation) which currently isn't available (in progress), but you can checkout the [example site](http://fabien-d.github.com/alertify.js/0.4.0rc1/) to see the usage.\n. @Martinho0330: Could you be more specific? I'm not sure exactly what you mean?\n. If I understand correctly, you want to display the text as it goes down? e.g. 10... 9... 8... until the notification is closed?\n\nIf that's the case, you cannot. The new version `0.4.0rc1`, not yet stable, does offer an API to the log elements, so it's something that could be added on your end.\n\n``` js\n// using 0.4.0rc1\n// this will not work with 0.3.8\nvar log = Alertify.log.info(\"Notification Message\", 10000);\n\n// will return the log DOM element which you can manipulate\nconsole.log(log.el);\n```\n. I'll have investigate this one. I'm currently away at a conference but will take a look when I get back. \n\nAny reason why you're running compatibility mode? Just curious!\n. I got to test it and was able to recreate the issue.\n\n![Compatibility](https://f.cloud.github.com/assets/747616/205365/1e003820-81a6-11e2-820c-63a8e45edcca.png)\n\nIt's something to do with the `:focus` state. If you hit the tab key to cycle through the button, whichever one has focus doesn't show. First thing you could try is to remove the `:focus` state in the CSS. See if that works.\n\nI'll will look at it this weekend, just don't have time while at the conference to debug.\n\nCheers,\n. I just tested the 0.4.0 release candidate version - tag `0.4.0rc1` and it works. I'll sort out what the differences are between the 2 and get a fix in for the `0.3.*` stable release. 0.3.\\* will be deprecated shortly as 0.4.0 approaches.\n\n![Compatibility0 4 0rc1](https://f.cloud.github.com/assets/747616/206580/0e9483cc-81d4-11e2-8f23-3c1e3db7f250.png)\n. You can grab the source [on the tags page](https://github.com/fabien-d/alertify.js/tags).\n\nJust a word of warning, 0.4.0rc1 is a release candidate, so everything may not be stable, and also the API has changed quite a bit from 0.3.*.\n\nFeel free to look at the demo site at http://fabien-d.github.com/alertify.js/0.4.0rc1\n. Fixed with ^ PR\n. I'll be investigating this. The answer provided does makes sense (as a workaround) since `transitionend` can be a bit buggy. I will try to find a more elegant solution to include as part of alertify.\n. Closing this issue - if it's still a problem feel free to reopen or open a new issue.\n. I don't have that combination to test with. I did pull up a Android 2.3 emulator on browserstack and wasn't able to recreate the issue.\n\nI was able to create new logs while the page showed other logs. And I also couldn't recreate the page jump. Any chance you could provide steps to recreate or a demo link - can direct message a link if you don't want to post public.\n\n![MulitpleLog](https://f.cloud.github.com/assets/747616/281728/caee95b2-917e-11e2-917f-8522b160206b.png)\n\nCould you also test the demo site (http://fabien-d.github.com/alertify.js/) with the Android device see if you can reproduce? It may be a conflict between alertify.js and something in phonegap.\n. any updates on this? If it's no longer an issue I will be closing the issue.\n. You have to provide more information in order for someone to help you out. You should check the [opening issues wiki entry](https://github.com/fabien-d/alertify.js/wiki/Opening-Issues)\n\n## Short version of the wiki entry\n- Please list the exact steps required to reproduce the issue.\n- Include versions of your OS, browser, etc.\n- Include relevant sample code. The less code you include, the easier/faster the problem can be found. Try to only include the bare minimum code required to reproduce the error.\n. See [caniuse](http://caniuse.com/css-transitions) and [MDN](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_transitions?redirectlocale=en-US&redirectslug=CSS%2FTutorials%2FUsing_CSS_transitions#Browser_compatibility)\n. Good catch... agreed that I don't really like having `-show` and `-hide` at the same time. Will look for a more elegant solution.\n. Good catch - thanks.\n. There's nothing there that should create an issue outside of `Alertify` should be `alertify`.\n\nCan you reproduce it on the [example site](http://fabien-d.github.io/alertify.js/)? If so, can you provide the steps to reproduce. I've just tested it with the latest version of Chrome (Version 26.0.1410.65, Mac 10.8.3) and in Safari on my iPhone and everything worked fine.\n\nIf you can't reproduce on example site [example site](http://fabien-d.github.io/alertify.js/), could you provide sample code with the issue being reproduced?\n. I don't have an iPad first generation to test, but I'll fire up browserstack to test it and see if I can recreate/debug it. I'll update with my findings.\n. I'm looking at it now - so far I'm able to open 1 dialog (iOS 5.1, iOS 4.3.2) with weird behaviour (jumps to the top of the page) but can't open any other afterwards.\n\nI've tested the `0.4.0rc1` version, and it appears to work on both of these. Could you confirm? Test the [0.4.0rc1 demo site](http://fabien-d.github.com/alertify.js/0.4.0rc1). I'll start seeing what the differences are and see what I can do.\n. That's correct. There's an issue with the transition properties at the moment, which I've resolved, causing the cover to show, but not the dialog (\"hang\" mode).\n\nI'm close - I have resolved the issue with the dialog not showing after the first time (2nd time onward dialogs show perfectly), but the first item still causes the page to jump to the top. Need to sort that out and I'll push an update.\n. @janroesner Any chance you could take a look at the above PR and test the new source with your iPad to ensure the fix does indeed work? I was seeing the behaviour in the simulator and the changes resolved the issue, but getting confirmation on the actual device is always better.\n\nedit:\nthe 2 files to look at are [alertify.js](https://github.com/fabien-d/alertify.js/blob/9f17921af380a84ab114b237380d1f4656a78fd5/lib/alertify.js) and [core css](https://github.com/fabien-d/alertify.js/blob/9f17921af380a84ab114b237380d1f4656a78fd5/themes/alertify.core.css)\n. I had to remove the transitions - that's what was causing the issue. It supports an older syntax for CSS transitions but doesn't do so very reliability. \n\nI will look for a workaround but that will be for the 0.4 release. \n\nThanks for the help. I'll merge/release/update docs when I get a chance. \n\nSent from my iPhone\n\nOn 2013-04-20, at 4:20 PM, Jan Roesner notifications@github.com wrote:\n\n> @fabien-d It works like a charme. I tested alert, confirm and prompt. Transitions are missing, but thats IMHO fine. Everything else seems to work fine as well. Thx.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Merged. Issue resolved in `0.3.9`. Branch `0.3` of repo or can be downloaded for the [demo site](http://fabien-d.github.io/alertify.js/).\n. I'm not really sure what the issue is - any chance you could provide a working code sample of the issue? \n. [Tag was added](https://github.com/fabien-d/alertify.js/tags). Thanks\n. alertify.js 0.4 appears to be tied to -> https://github.com/fabien-d/alertify.js/pull/158\n\nSeems like the issue is also happening in `0.3`? I'm not familiar with turbolinks so hopefully someone can provide more insight. \n. Fixed with #161 \n. Fixed with ^ PR\n. I'm hoping to get a fix in for this shortly.\n\nduplicate of https://github.com/fabien-d/alertify.js/issues/137\n. as a quick workaround you can add the following line in `alertify.core.css` if you're using `0.3.*` or  in `alertify.css` if you're using `0.4.0rc1`.\n\nI'd need to test that this doesn't create issues elsewhere, but it could be a hot fix in the meantime.\n\n``` css\n:root *> .alertify-hidden {\n    display: block;\n    visibility: hidden; /* <-- add this line */\n}\n```\n. Have you had any luck with this? I haven't been able to reproduce and if it's still an issue with the latest `0.3.10`?\n. Closing this issue - if it's still a problem feel free to reopen or open a new issue.\n. duplicate of #138.\n\nSetting it to `display: none` prevents the CSS animation from running. A temporary workaround is to add `visibility: hidden;`.\n\nWill be looking for a better solution.\n. Thanks for the report/fix. Would you mind opening a PR? \n. Fixed with ^ PR\n. There is no Metro theme with the plugin, but it would just be creating a new theme in CSS. I'll accept a PR! \n\nI don't have an outloook account, I sort of understand the request, which would require quite a bit of tweaking - but could you provide a screenshot just to confirm.\n. Initializing on a specific DOM element would require some tweaking. I can mark it as a nice to have or accept a PR if anyone wants to implement.\n\nClicking through is a [known issue](https://github.com/fabien-d/alertify.js/issues/141). There is a fix in the issue details, which I will implement soon.\n. Could you try the [demo page](http://fabien-d.github.io/alertify.js/) with the same browser? Generally this issue happens when the browser supports `transitionend` but the event is not firing properly.\n\nIf the issue can be reproduced on the demo page, I'll try to debug, if it doesn't happen on the demo page, maybe you could provide a code sample from your project so I can take a look.\n. any updates on this?\n. Closing this issue - if it's still a problem feel free to reopen or open a new issue.\n. The alertify confirm method does not work the same as the native confirm. It does not return true or false. JavaScript is non-blocking meaning the `if (s == true) {` will get tested before the user clicks on ok or cancel.\n\nalertify uses callbacks to get around this problem...\n\n``` js\n$(\"#Button1\").on(\"click\", function () {\n    alertify.confirm(\"This is an alert dialog\", function (e) {\n        if (e) {\n            // user clicked ok\n        } else {\n            // user clicked cancel\n        }\n    });\n});\n```\n. sorry for the delay - any progress on this? If not, any chance you could provide more info on the issue. I'm not sure what you mean by\n\n> button click event on the server side is not being fired.\n. Closing this issue - if it's still a problem feel free to reopen or open a new issue.\n. Unfortunately JavaScript is a non-blocking language and this is not possible. You'd have to adjust the code to use the callback.\n\n``` js\nalertify.confirm( 'question', function ( e ) {\n    if ( e ) {\n        // the code to execute after a user choice\n    }\n});\n```\n. Closing - if you have more questions/comments, feel free to reopen.\n. Looks like a duplicate of #138. See if the workaround in that issue works for you. Still haven't had a chance to implement a fix.\n. Fixed with ^ PR\n. This seems like it may be an event bubbling issue. I remember having something similar with chaining alertify dialogs but has been fixed.\n\nInstead of using `event.stopPropagation()` try replacing it with `event.preventDefault()` and/or a `return false` at the bottom of the function.\n\n> Since the .live() method handles events once they have propagated to the top of the document, it is not possible to stop propagation of live events\n\n^ from the jQuery docs. And the `live()` method simply calls the `on()` method.\n\nIf that doesn't work - could you try providing a working demo?\n\nI've tried calling, on the docs page, an alert dialog after the confirm without issues (w and w/o delay)\n\n``` js\nalertify.confirm('test', function (e) {\n    if (e) {\n        setTimeout( function () { alertify.alert('blah'); }, 1000);\n    } else {\n        alertify.alert('cancel');\n    }\n});\n```\n. Could you confirm if this is only happening using the keyboard? It's the only way I have been able to reproduce...\n\nI haven't been able to reproduce in `0.4.0rc1` (keyboard or mouse), so I'll see about implementing the fix in `0.3.*`.\n. the clicking once is another issue - there is a temporary fix at issue #138.\n\nSo there is a bug in the alertify code. In the hide method, I set `isOpen` to false immediately and I believe since there is a small delay between the ajax request and the next call, the new dialog gets confused for the existing one and also closes. \n\nI'll have to dig a bit more and tweak some of the functionality around this.\n. I wasn't able to reproduce - but I haven't tested it with your example so I can say for sure it will work.\n\n0.4 is in release candidate, so it hasn't been fully tested and it's a completely new API (can't just swap 0.3 for 0.4). You can see the [demo site](http://fabien-d.github.io/alertify.js/0.4.0rc1/) and see if you want to give it a go.\n\nI'm hoping to get more time to work on alertify and get `0.3` stable and then leave it as a legacy as I bring `0.4` stable and onto a `1.0`\n. Sounds similar to #166. Should be fixed with #176 which will be in `0.3.11`\n. thanks for the fix\n. I'm going to keep alertify in front end package managers.\n. Thanks for the PR. I don't really know much about composer or Packagist - so I'm just going to do a bit of research on it before merging.\n. Do you have any arguments on why a JS plugin should be part of a PHP package manager? I'm hesitant on whether it makes sense...\n. I'm going to pass on this for now. Since you can still use it with composer without the `composer.json` file. Also, `0.4` has been deprecated. Cheers,\n. Resolved with #155 \n. The build was fix with #154 so you can pull down the latest master branch and should be able to run grunt.\n\nAlso, this functionality exists in `0.3.*`, it just hasn't been ported over to `0.4` yet, so I would like to keep it consistent with where the type gets appended.\n\nSee https://github.com/fabien-d/alertify.js/blob/0.3/src/alertify.js#L286 and screenshot:\n\n![image](https://f.cloud.github.com/assets/747616/758309/8b1e0580-e728-11e2-8de9-7d1613af3e4d.png)\n. There's conflicts in the PR. The change looks good, I would just rather have spacing around the blocks for legibility and consistency. Also, once the conflict is resolved, could you squash your commits?\n\n``` js\n// from:\nclsElShow+\" \"+\"alertify-\"+item.type \n// to:\nclsElShow + \" \" + \"alertify-\" + item.type\n```\n. committing minified source shouldn't create conflicts - but it can be a pain. I've been debatting whether to remove them from source control and I think I will. Closing since you opened a new PR\n. Could you provide more information? I'm not able to reproduce this issue as it's something I know has been implemented.\n- Which alertify.js version are you using?\n- Do you have custom code interacting with it? \n- Browser/OS?\n\nCan you reproduce on the [demo site](http://fabien-d.github.io/alertify.js/)?\n. If you're able to isolate the problem - or can replicate the bug with sample code, feel free to pass it along and I'll be glad to help out. \n\nSent from my iPhone\n\nOn 2013-07-10, at 9:49 PM, devanddesign notifications@github.com wrote:\n\n> Yeah, you're right. It works fine on the demo site so I must be doing something wrong. I'll have to do some digging since there's a lot of functionality on my page but I just figured the simple alertify.confirm should work since there's not much to it.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Closing - feel free to reopen if you need more help.\n. Thanks for the update... any chance you tested alertify.js version `0.3.*` (on branch `0.3`) with turbolinks?\n. Thanks for the fix\n. Both issues were fixed with `0.3.10`. I just forgot to update the version of alertify.js on the demo page.\n\nTied to #146. \n. Is this only happening with the `master` branch (release `0.4.*`)?\n\nThe `0.4` is only a release candidate so bugs are to be expected. I will listed as an 0.4 bug and look at it for the next RC.\n\nWhat was the unrelated issue with 0.3? \n. I'll be looking at why this is happening in `0.3.*`. I'm getting close to releasing the next [version of alertify - 0.5.0](https://github.com/fabien-d/alertify.js/tree/wip.0.5.0) and this issue has been resolved.\n\nI'll look into backporting to `0.3.*` \n. Fixed with ^. Will be part of `0.3.11`\n. Available now: \n- Source code: https://github.com/fabien-d/alertify.js/releases/tag/0.3.11 or\n- Install via bower: `bower install alertify.js` (note this was previously `alertify`)\n\nI will be updating the demo page and docs shortly.\n. Closing\n. The goal of the project is to mimic native dialogs. Adding multiple buttons would go against this.\n\nClosing this issue - if you want to have more discussion feel free to reopen or open a new issue.\n. Fixed with ^. Will be part of `0.3.11`\n. Available now: \n- Source code: https://github.com/fabien-d/alertify.js/releases/tag/0.3.11 or\n- Install via bower: `bower install alertify.js` (note this was previously `alertify`)\n\nI will be updating the demo page and docs shortly. Closing\n. Closing this issue - `0.4` is deprecated, if it's a problem in `0.3` feel free to reopen or open a new issue.\n. Closing this issue since `0.4` is deprecated \n. I don't intend on making it a full bootstrap module. If someone wants to fork it and develop/maintain it - that's great! I'll link to it. But the main repo will remain a stand alone widget. I don't want to tie it to any framework in any way. \n\nThe bootstrap CSS was to show that it could easily be made to look and fit in a bootstrap project with little effort.\n. Closing this issue - if it's still a problem feel free to reopen or open a new issue.\n. And could you confirm this is with alertify.js `0.3.*`...\n. I'm closing this since `0.4` is deprecated. If it happens with `0.3` or `0.5wip` then feel free to reopen or log a new issue\n. any chance you can provide a demo of this not working? I haven't been able to reproduce...\n. I never got any emails with attachments - \n. still nothing - send me a DM `fabiend.github [at] gmail`\n. > Any idea to make a dialog which provides certain items to select\n\nThat's more of a modal than a dialog. The intention of this library is to replace the native dialogs so at this time that would not really be possible.\n. I'm going to try to get some bug fixes for `0.3` today and if I get a chance I'll try to release a `0.5.0rc1` as well.\n. there is no way to unregister at this time, see: https://github.com/bower/bower/issues/120\n. Closing. Created - [0.5 branch](https://github.com/fabien-d/alertify.js/tree/0.5)\n. Released `0.5.0rc1`. Usage example can be found [here](https://github.com/fabien-d/alertify.js/wiki/0.5----Usage).\n\nMore documentation and an example site will be up shortly\n. > I find the new dialog is too white\n\nAgreed. I have an issue opened for it (https://github.com/fabien-d/alertify.js/issues/187) was hoping to get a designer to coming in and help out. Even if only with a visual and not code\n. > such as changing the animation style, customizing alert positioning\n\nalertify.js was built so only the core was in the JS. These two items are controlled via CSS. The original goal was to build a theme library which would cover various animations and positions but I just never had time or contributions for it -\n. @Alex-Sokolov I haven't been able to reproduce this - any chance you could put a demo together recreating (as basic as possible) the issue.\n\nI tried including a `window.open` in a `alertify.confirm` and after closing the new window and going back to the original page, the dialog was gone and the page was fully usable.\n\nIf you can't provide a demo, any chance you can provide more info? Browser/OS, does it still happen with `0.3.11` ...\n\n---\n\n@wizonesolutions, the `0.3.11` fix was for back to back dialogs using AJAX https://github.com/fabien-d/alertify.js/issues/166 - not this one.\n. @wizonesolutions: could you put a demo together that reproduces the error? \n. Can you provide more info (browser, OS, steps to reproduce, code sample)? I've tried using the following code sample and am unable to recreate it:\n\n``` js\nalertify.prompt( 'test', function (e) {\n    if (e) {\n        window.open( 'http://google.com' );\n    }\n});\n```\n. Fixed and reset the 0.3.11 tag to include this. Thanks\n. Care to elaborate...\n. Can you provide more info? A demo page, code samples... \n. the library detects if `define` is used and doesn't expose `alertify` globally. If you want to use with AMD, you need to include it as a dependency:\n\n``` js\ndefine( [ PATH_TO_ALERTIFY ], function ( alertify ) {\n    alertify.success( 'Hi' );\n} );\n```\n. did you also include the `alertify.core.css`? you need both the core and theme styles.\n. Great\n. not a stupid question - just bad documentation which I will try to update sometime.\n\nThe `extend` method allows to generate custom log messages. The parameter `custom` can be whatever you choose.\n\nFor example:\n\n``` js\n// sets a property on `alertify` object\nalertify.[anyKeyValueYouWant] = alertify.extend( 'anyStringYouWant' );\n\n// so you can then write\nalertify.anyKeyValueYouWant( 'custom log message' );\n```\n\nIn the HTML, this will output:\n\n``` html\n<!-- notice the extra class, this is the value passed in the extend method -->\n<article class=\"alertify-log alertify-log-anyStringYouWant\">custom log message</article>\n```\n\nThen in CSS, you can then control the look of those specific messages:\n\n``` css\n.alertify-log-anyStringYouWant {\n    /* overwrite default styles */\n}\n```\n\nIn short:\n- the string argument passed in the `extend` method will be used as a class name on the log messages\n- the key value you assign to alertify lets you call it directly.\n\nSee https://github.com/fabien-d/alertify.js/wiki/0.3.*-API-Documentation#extend\n\nThis is how the `success` and `error` methods work - https://github.com/fabien-d/alertify.js/wiki/0.3.*-API-Documentation#success--error\n\nHope that's clear\n. Closing - feel free to reopen if this didn't solve your issue.\n. Ruby and Compass are needed to compile `Sass` into `CSS`. If you just cloned the project - I would suggest you checkout the `0.3` branch (https://github.com/fabien-d/alertify.js/tree/0.3) since that is latest stable release.\n\nMaster currently points to `0.4.0rc1` which will never be done. I'm skipping that release and going straight to [0.5.0](https://github.com/fabien-d/alertify.js/pull/173).\n\nIn the `0.3.*` release, there is no Sass so you will not need ruby or compass.\n. Closing - feel free to reopen if this didn't solve your issue.\n. See https://github.com/fabien-d/alertify.js/issues/185#issuecomment-27147210\n. Closing - feel free to reopen if this didn't solve your issue.\n. I just put a very basic starting point, I was hoping to get a designer to jump in and help. It will for sure looking much better for the actual `0.5.0` release.\n. Can you double check if this is not just indentation? I generally write CSS with sub styles nested. E.g.\n\n``` css\n.container {\n}\n\n    .container-child {\n    }\n```\n\nwhich can make it seem like the last line is missing a closing `}` although it is not.\n. Here's the file from that release tag: https://github.com/fabien-d/alertify.js/blob/0.3/themes/alertify.default.css. I don't see any missing `}`. \n. Closing - feel free to reopen if this didn't solve your issue.\n. I'm going to need more information.. code sample? This error only happens if the JS file hasn't been included.\n. It's a GitHub page and a temporary issue with them. \n. no worries.\n. Thanks - I'll take a closer look when I get a few mins. Could you fix the indentation, tabs, so it is consistent and matching the current `0.3` formatting.\n. There is some indentation issues - e.g.\n\n![image](https://f.cloud.github.com/assets/747616/1865256/cab81ad8-7809-11e3-98e3-23a0d51ec485.png)\n\nand\n\n![image](https://f.cloud.github.com/assets/747616/1865261/d893ab40-7809-11e3-8f4c-256c2eff6ce2.png)\n\nOtherwise it looks good.\n. If you do format the code feel free to reopen the PR. I will merge, but only if it's following the code standards, cheers\n. JavaScript is non blocking which means alertify.js does not block the execution like standard dialogs. You would have to use callbacks to handle it.\n\nSince it does not block the execution the code continues to run while the alert is shown causing the the focus to be overlooked.\n\n``` js\nif (TestCase > 1) {\n    alertify.alert(\"Please make a...\", function () {\n        // this code is only called after the button has been clicked\n        document.EditForm.percent_off_subtotal.focus();\n    });\n}\n```\n. Closing - if you need more help feel free to reopen or open a new issue.\n. There is a `.alertify-message` class that can be used to left align just the message, if I understand correctly.\n. Closing - feel free to reopen if this didn't solve your issue.\n. ``` js\n$(document).ready(function(){\n    $('.delete-page').on('click', function(event){\n        // add me, stop the default link from clicking\n        event.preventDefault();\n\n        alertify.confirm(\"Message\", function (e) {\n          if (e) {\n              // use window.location and go to a->href\n          } else {            \n            return false; \n          }        \n      });     \n    });\n});\n```\n. Closing - feel free to reopen if this didn't solve your issue.\n. What version of safari are you seeing this in? \n\nThe default behaviour is to block access to other elements, could you provide me a sample case with the issue? \n. Thanks - would it be possible to squash your commits? Then I'll merge.\n. Could you provide more information?\n. Thanks for the submission but I've deprecated `0.4`. I'm jumping straight to `0.5` which will hopefully turn into a `1.0` and a possibly the end of this project. https://github.com/fabien-d/alertify.js/pull/173\n\nAlso, `warning` is not part of the alertify core. You would have to add the `warning` to alertify for this to be merged. If you want to add it to `0.3` I'll merge.\n\n## Example\n\nhttps://github.com/fabien-d/alertify.js/blob/0.3/src/alertify.js#L612\n\n``` js\nwarning : function (message, wait) { _alertify.log(message, \"warning\", wait); return this; }\n```\n. Closing - if you want to send the patch to `0.3` I'll merge in there. Cheers\n. thanks for the PR but this isn't the look and feel direction I'm looking for. If you want to keep playing around with styles, feel free to update this PR or even just post screenshots in the issue itself (#187) so we can have some open discussion around the overall direction.\n\nI'm looking for something much simpler and not as obtrusive. Cheers,\n. the base colour is really more of a \"wireframe\" approach. I want to get a theme before I release `0.5.0` - but I would like to keep it more on the subtle side\n. The div highlighted in the screenshot below covers the alertify dialog (higher `z-index`) and also has a `tabindex` of `-1`. If you simply remove the `tabindex` attribute you will be able to edit the alertify prompt.\n\n![image](https://f.cloud.github.com/assets/747616/2491019/a2065efe-b1d6-11e3-8473-827a95357338.png)\n\nFeel free to reopen if this does not solve your issue.\n. And I should have looked at the stackoverflow link before posting that - \n. Unfortunately not at this time. It may be worth doing in the `0.5.0` [release](https://github.com/fabien-d/alertify.js/pull/173/).\n. Thanks for the PR - I do like the idea. There are a few things missing:\n- update the `log`, `success` and `error` methods in the API. (https://github.com/S-anasol/alertify.js/blob/0.3/lib/alertify.js#L622-L625)\n- update the `extend` method to ensure the functionality can also be used. (https://github.com/S-anasol/alertify.js/blob/0.3/lib/alertify.js#L396-L402)\n. could you provide more info? Version, screenshots, code sample to recreate...\n. When a dialog is open, it creates an invisible cover that will disable all mouse clicks from happening on the underlying site. This is to \"mimic\" the behaviour of native dialogs. \n\nDialogs are used to force the user to take an action before being able to continue. This is intended behaviour.\n. I think we're talking about the same thing... you're issue is attempting to click a link on the page (behind the dialog)?\n\nIf so, that is blocked by design. If that's not what you mean - may need to provide a bit more info\n. I misunderstood - log messages should NOT block interaction. If that's what is happening then there could be a bug.\n\nCould you provide a small code sample that recreates the issue? Also, which version/browser this is happening and I'll take a look \n. I'm in the process of cleaning up the repo - master is currently an old dev version of `0.4` which is deprecated. If your issue is happening in `0.3` you would have to open the PR against that branch.\n\nThe fix seems strange, I'm looking at reproducing your error - but I'm not able to. The `.alertify-logs` element is only the size of the log messages and don't interfere with any elements below.\n. I'll investigate - I'm not too familiar with `iframe` communication so if anyone as more information that would be helpful\n. Does this **only** happen in IE11? IE10- and other browsers are ok?\n. could you provide a sample recreating this issue? It would make debugging/fixing easier. Thanks\n. No problem! \n. I don't know much about .NET environments, but a few quick things to check -\n1. Could there be another script that is interfering? If you remove all other JS files, does the problem remain?\n2. Double and triple check the path\n3. Are you using AMD (e.g. requirejs)? That would prevent `alertify` from getting attached to the `window` object causing it to be `undefined`.\n. The position of dialogs are currently controlled globally, meaning all dialogs open at the same location. There is no way to open a dialog at a specific location for each trigger element.\n\nIf this doesn't answer you question - please see the [opening issues](https://github.com/fabien-d/alertify.js/wiki/Opening-Issues) page and provide more information to have this issue solved.\n. Are you able to reproduce the issue on the [example site](http://fabien-d.github.io/alertify.js/)?\n\nAnd please see https://github.com/fabien-d/alertify.js/wiki/Opening-Issues to provide enough information to be able to get issues resolved in a timely manner.\n. what version of alertify.js are you using? `Alertify` (uppercase \"A\") was part of `0.4` which is deprecated. I would suggest using `0.3` or `0.5` which uses `alertify` (lowercase \"a\").\n\nUsage and examples can be found at: https://github.com/fabien-d/alertify.js/wiki#usage-documentation\n. Could you provide more info? There is an [opening issues](https://github.com/fabien-d/alertify.js/wiki/Opening-Issues) wiki entry on providing the information needed to quickly resolve the issue. I unfortunately don't have too much free time at the moment, and the more information you provide, the easier it will be for me (or someone else) to help you out.\n\nExample template from the wiki. Cheers\n\n``` bash\n### Describe the issue you are having\n[insert description]\n\n### What version of alertify.js are you using\n[insert version]\n\n### Steps to reproduce the issue\n1. [insert steps]\n2. [insert steps]\n\n### What browser(s) is this happening in\n[insert browsers]\n\n### Link to reproduced issue\n[insert link]\n\n### Screenshots (if applicable)\n[insert screenshots]\n```\n. Any chance you could provide a code sample with the error? I'm trying to reproduce but can't - also does it happen on the [demo page](http://fabien-d.github.io/alertify.js/)?\n. I was debating this myself - in `0.3` the HTML was inserted via JS, but with `0.5` I was leaning towards having it in the DOM by default. Saves the DOM injection which (in a way) makes it slightly faster. \n\nI'm not married to the idea - I'm open to re-inserting in the JS if it makes sense. But I do like the idea of HTML being HTML. It's a transition towards it being a component.\n. I will - I've never published to NPM (someone did), only bower. I'll update as soon as I get a chance.\n. It is not possible. Alertify.js mimics the native dialogs and the `prompt` dialog is a single input.\n. I've updated the site (http://fabien-d.github.io/alertify.js/) with a link pointing back to your fork. I'm going to leave the repo as is until a fork takes off. Your roadmap does look good - \n. >  it's not my fork\n\nMy bad. I shouldn't have assumed it was.\n. All animations/effects are done through CSS transitions.\n. duplicate of https://github.com/fabien-d/alertify.js/issues/234\n. This project is no longer being maintained.\n\nThis is not a feature I would add to the core plugin. The dialogs purposely do not have a self closing method because the goal of a dialog is to get a response from the user. The project aimed to keep the alertify.js dialogs reflecting the native dialogs.\n. This is not an alertify.js issue. This is a form handling/submission issue. Without changing your code, the following would work.\r\n\r\nPass the event object from the markup:\r\n\r\n```diff\r\n- onclick='return xFunction();'\r\n+ onclick='return xFunction(event);'\r\n```\r\n\r\nAdd the event object as a parameter:\r\n\r\n```diff\r\n- xFunction = function() {\r\n+ xFunction = function(event) {\r\n```\r\n\r\nNow the `preventDefault()` will stop the form from submitting so you'll have to submit it programmatically when the dialog is confirmed.\r\n\r\n```diff\r\n- $('#conf1').click();\r\n+ $('form').submit();\r\n```\r\n\r\nyou can look at a quick \"working\" example on CodePen: https://codepen.io/fabien-d/pen/c2874e38af19af131d088afc75bdf2d2. ",
    "CIAvash": "I tested this on Firefox 17, it's not working. It works fine on Chromium and IE 10.\n. #3 is fixed, but when I enter some text in the prompt's text box and press 'Enter', nothing happens. 'OK' button is working but 'Enter' key is not.\n\nIt seems that you removed 'Enter' and put focus to 'OK' button. This is good for Alert and Confirm dialogs, but 'Enter' key should work on Prompt's text box.\n. We can say the same for forms, we can validate them after submission, or we can do that with JavaScript, still, these features are added to HTML5. I just thought with this, it can be a modern prompt. Obviously it's not crucial.\n\nAt first, I wanted to open an issue for turning off the auto completion, because a prompt doesn't store values, but alertify's prompt does. Then I thought it could be part of a bigger feature. Should I open another issue for that, Since you're probably not going to implement it?\n. I tested this on Firefox 17, it's not working. It works fine on Chromium and IE 10.\n. #3 is fixed, but when I enter some text in the prompt's text box and press 'Enter', nothing happens. 'OK' button is working but 'Enter' key is not.\n\nIt seems that you removed 'Enter' and put focus to 'OK' button. This is good for Alert and Confirm dialogs, but 'Enter' key should work on Prompt's text box.\n. We can say the same for forms, we can validate them after submission, or we can do that with JavaScript, still, these features are added to HTML5. I just thought with this, it can be a modern prompt. Obviously it's not crucial.\n\nAt first, I wanted to open an issue for turning off the auto completion, because a prompt doesn't store values, but alertify's prompt does. Then I thought it could be part of a bigger feature. Should I open another issue for that, Since you're probably not going to implement it?\n. ",
    "Apathetic012": ":+1:\n. :+1:\n. ",
    "rofrankel": "Not near a Ubuntu machine either right now, but I'll try to clarify:\n\n1)  Click the topmost row of pixels of one of the buttons in a dialog.\n2)  The button gives the visual impression of having been pressed.\n3)  The modal is not dismissed.\n\nThis doesn't occur when clicking near the middle of the button, just at the edge.\n. Not near a Ubuntu machine either right now, but I'll try to clarify:\n\n1)  Click the topmost row of pixels of one of the buttons in a dialog.\n2)  The button gives the visual impression of having been pressed.\n3)  The modal is not dismissed.\n\nThis doesn't occur when clicking near the middle of the button, just at the edge.\n. ",
    "sergiotapia": "It's generally considered poor form to commit a change that encapsulates the entire file. Maybe you've changed the line ending type or your editor did it for you.\n\nEither way, it's hard for the library author to see at a glance what changes you made to the main branch.\n. It's generally considered poor form to commit a change that encapsulates the entire file. Maybe you've changed the line ending type or your editor did it for you.\n\nEither way, it's hard for the library author to see at a glance what changes you made to the main branch.\n. ",
    "rudionrails": "Agreed. I amended my commit. \n. I understand your concern.\n\nJust as an example: I want to use it with Rails. I've already set-up a wrapper rubygem to include it into the javascripts of the layout page. When this happens obviously, the document.body does not yet exist and it wont work. I thought it would be convenient to have that functionality. \n. Yes of course. I mean... currently it's as simple as:\n\n``` javascript\n// either \"manually\" after the DOM is loaded\nwindow.alertify = new Alertify();\n\n// or with jQuery\n(function($) { \n  window.alertify = new Alertify();\n}(jQuery));\n```\n\nGoing with that would be nice, too. Howevery, that would still include changing some source code to not try to load the class (I guess).\n. Agreed. I amended my commit. \n. I understand your concern.\n\nJust as an example: I want to use it with Rails. I've already set-up a wrapper rubygem to include it into the javascripts of the layout page. When this happens obviously, the document.body does not yet exist and it wont work. I thought it would be convenient to have that functionality. \n. Yes of course. I mean... currently it's as simple as:\n\n``` javascript\n// either \"manually\" after the DOM is loaded\nwindow.alertify = new Alertify();\n\n// or with jQuery\n(function($) { \n  window.alertify = new Alertify();\n}(jQuery));\n```\n\nGoing with that would be nice, too. Howevery, that would still include changing some source code to not try to load the class (I guess).\n. ",
    "stravid": "I suggest adding an dash.\n\ne.g. `alertify-OK`\n. I suggest adding an dash.\n\ne.g. `alertify-OK`\n. ",
    "abrkn": "it says unobtrusive in the description. modal is obtrusive\n. +1\n. ``` javascript\nalertify.prompt('name?', function(e, s) { throw new Error(s) })\n```\n. you cannot achieve the same functionality as the native alert. definitely continue doing it like you are now, just prevent default before calling the callback.\n. -1, bloat\n. it says unobtrusive in the description. modal is obtrusive\n. +1\n. ``` javascript\nalertify.prompt('name?', function(e, s) { throw new Error(s) })\n```\n. you cannot achieve the same functionality as the native alert. definitely continue doing it like you are now, just prevent default before calling the callback.\n. -1, bloat\n. ",
    "fkautz": "I don't see how a dialog box can be unobtrusive, it sits prominently above everything else. :)\n\nAnyways, what triggered this was alert and confirm boxes can be dismissed by an enter key but not by hitting the spacebar. Maybe it's related to the focus issue listed in issue #3.\n. I don't see how a dialog box can be unobtrusive, it sits prominently above everything else. :)\n\nAnyways, what triggered this was alert and confirm boxes can be dismissed by an enter key but not by hitting the spacebar. Maybe it's related to the focus issue listed in issue #3.\n. ",
    "chetzof": "indeed, very needed!\n. Please add the 0.3.9 tag\n. Thank you!\n. indeed, very needed!\n. Please add the 0.3.9 tag\n. Thank you!\n. ",
    "nodrog": "if you are using bootstrap with less you can use the following:\n\n``` css\n\n.rgba-background-color(@hex, @alpha: 1) {\n  background-color: @hex;\n  background-color: hsla(hue(@hex), saturation(@hex), lightness(@hex), @alpha);\n}\n.rgba-box-shadow(@dimentions, @hex, @alpha: 1) {\n   box-shadow: @dimentions hsla(hue(@hex), saturation(@hex), lightness(@hex), @alpha);\n}\n\n.rgba-border(@details, @hex, @alpha: 1) {\n  border: @details @hex;\n  border: @details hsla(hue(@hex), saturation(@hex), lightness(@hex), @alpha);\n}\n\n.alertify {\n  background: @white;\n  border-radius: 6px;\n  .rgba-border(1px solid, @black, 0.3);\n  .rgba-box-shadow(0 3px 7px, @black, 0.3);\n  -webkit-background-clip: padding; \n  -moz-background-clip: padding; \n  background-clip: padding-box;\n}\n\n.alertify-text {\n  border: 1px solid @textColor;\n  padding: 10px;\n  border-radius: 4px;\n}\n\n.alertify-button {\n  .btn;\n  &.alertify-button-cancel {\n    .btn-danger;\n  }\n  &.alertify-button-ok {\n    .btn-success;\n  }\n\n  &:hover, &:focus {\n    color:@white;\n    text-decoration:none;\n    outline: none;\n    box-shadow: none;\n  }\n\n}\n\n.alertify-log {\n  .alert;\n  &.alertify-log-error {\n     .alert-error;\n  }\n  &.alertify-log-success {\n     .alert-success;\n  }\n}\n\n```\n\nits not perfect...\n. if you are using bootstrap with less you can use the following:\n\n``` css\n\n.rgba-background-color(@hex, @alpha: 1) {\n  background-color: @hex;\n  background-color: hsla(hue(@hex), saturation(@hex), lightness(@hex), @alpha);\n}\n.rgba-box-shadow(@dimentions, @hex, @alpha: 1) {\n   box-shadow: @dimentions hsla(hue(@hex), saturation(@hex), lightness(@hex), @alpha);\n}\n\n.rgba-border(@details, @hex, @alpha: 1) {\n  border: @details @hex;\n  border: @details hsla(hue(@hex), saturation(@hex), lightness(@hex), @alpha);\n}\n\n.alertify {\n  background: @white;\n  border-radius: 6px;\n  .rgba-border(1px solid, @black, 0.3);\n  .rgba-box-shadow(0 3px 7px, @black, 0.3);\n  -webkit-background-clip: padding; \n  -moz-background-clip: padding; \n  background-clip: padding-box;\n}\n\n.alertify-text {\n  border: 1px solid @textColor;\n  padding: 10px;\n  border-radius: 4px;\n}\n\n.alertify-button {\n  .btn;\n  &.alertify-button-cancel {\n    .btn-danger;\n  }\n  &.alertify-button-ok {\n    .btn-success;\n  }\n\n  &:hover, &:focus {\n    color:@white;\n    text-decoration:none;\n    outline: none;\n    box-shadow: none;\n  }\n\n}\n\n.alertify-log {\n  .alert;\n  &.alertify-log-error {\n     .alert-error;\n  }\n  &.alertify-log-success {\n     .alert-success;\n  }\n}\n\n```\n\nits not perfect...\n. ",
    "tracker1": "@fabien-d @nodrog nice... :-)\n. @fabien-d @nodrog nice... :-)\n. ",
    "rufuscoder": "That would be cool but you can implement it already. I am making a code editor with bootstrap and I have implemented it.\n. Okay, thanks I didn't see that there. Here is the link to the npm registry alertify: https://npmjs.org/package/alertify\n. That would be cool but you can implement it already. I am making a code editor with bootstrap and I have implemented it.\n. Okay, thanks I didn't see that there. Here is the link to the npm registry alertify: https://npmjs.org/package/alertify\n. ",
    "felipebueno": "Fabien-d, how do I that (to squash my commits)? I am a git noob yet heheh\n. Fabien-d, how do I that (to squash my commits)? I am a git noob yet heheh\n. ",
    "drazion": "Just as an aside, you may want to consider making the body requirement a little more apparent in the docs. Although I was able to figure this out fairly quickly, specifically when I saw n.body is null, it was not immediately clear that alertify.js needs to be in the body.  But otherwise implementing it was a breeze.\n\nTo your point above, I like that it's not put into the DOM until I need it.  On the page where I use it, I'm already relying on the client to parse a good deal of code and determine the layout, so for me at least, this is a great feature.  \n. Just as an aside, you may want to consider making the body requirement a little more apparent in the docs. Although I was able to figure this out fairly quickly, specifically when I saw n.body is null, it was not immediately clear that alertify.js needs to be in the body.  But otherwise implementing it was a breeze.\n\nTo your point above, I like that it's not put into the DOM until I need it.  On the page where I use it, I'm already relying on the client to parse a good deal of code and determine the layout, so for me at least, this is a great feature.  \n. ",
    "lightswitch05": "Looking forward to this fix since Ruby On Rails automatically includes javascript in the `<head>`\n. Looking forward to this fix since Ruby On Rails automatically includes javascript in the `<head>`\n. ",
    "veracarr": "hi Fabien,\n\nthis fixed my problem. thank you!!\n\nvera\n. hi Fabien,\n\nthis fixed my problem. thank you!!\n\nvera\n. ",
    "dschwen": "Would be nice if there was an option to set the input to type=\"password\" rather than type=\"text\" \n. Rather than patching the source (which I did before) I tried \n `$('#alertify-text').attr('type','password');`\nright after the prompt call, but it gives me the following error.\n `Error: type property can't be changed`\nI guess I could switch the element out entirely, but given that a login box is a rather obvious use-case for the prompt I think it would not be \"bloat\" to add a corresponding option. \n. `$('#alertify-text').replaceWith('<input type=\"password\" id=\"alertify-text\" class=\"alertify-text\"/>');`\ndoes the trick\n. That is a system dialog. As far as I can see there is no way to implement this in JavaScript in a _more_ secure way than your prompt box. If you assume an attacker has the ability to inject JS into your page you are screwed in any case.\n. It happens with all three dialogs.\nYeah it happens on the example site as well. \nIt does not append a hash. \n\nI dont know what to show on the screenshot, except for a scrolled-up page ;-). \n. Ha, sorry, MacOSX 10.7.3. I'll try later at home on Linux and a brand new Chrome. For some reason in my Linux Virtualbox here popping up the dialog freezes up my browsertab.\nI also tried Safari and no dialogs show up at all (Version 5.1.5 (7534.55.3))!\nAs I said FF 17 perfroms perfectly.\n. Thanks, just tested it, works well in Chrome and Safari now ! Love your little library. Thanks a bunch again!\n. Would be nice if there was an option to set the input to type=\"password\" rather than type=\"text\" \n. Rather than patching the source (which I did before) I tried \n `$('#alertify-text').attr('type','password');`\nright after the prompt call, but it gives me the following error.\n `Error: type property can't be changed`\nI guess I could switch the element out entirely, but given that a login box is a rather obvious use-case for the prompt I think it would not be \"bloat\" to add a corresponding option. \n. `$('#alertify-text').replaceWith('<input type=\"password\" id=\"alertify-text\" class=\"alertify-text\"/>');`\ndoes the trick\n. That is a system dialog. As far as I can see there is no way to implement this in JavaScript in a _more_ secure way than your prompt box. If you assume an attacker has the ability to inject JS into your page you are screwed in any case.\n. It happens with all three dialogs.\nYeah it happens on the example site as well. \nIt does not append a hash. \n\nI dont know what to show on the screenshot, except for a scrolled-up page ;-). \n. Ha, sorry, MacOSX 10.7.3. I'll try later at home on Linux and a brand new Chrome. For some reason in my Linux Virtualbox here popping up the dialog freezes up my browsertab.\nI also tried Safari and no dialogs show up at all (Version 5.1.5 (7534.55.3))!\nAs I said FF 17 perfroms perfectly.\n. Thanks, just tested it, works well in Chrome and Safari now ! Love your little library. Thanks a bunch again!\n. ",
    "gschrader": "This would definitely be a nice to have, definitely not bloat at all.  On iPhone you can specify \"tel\" as the type and it will give you the numeric keypad instead of the full keyboard, very useful for numeric prompts.\n. Played a bit more with this.  If I hit done to hide the keyboard in the input field and then hit the alertify ok button, I get the same locked up behaviour, I don't get the weird extra callbacks though :confused: \n. Yes from master (I also tried the 0.4.0rc1 tag).\n\nThe issue in 0.3 was if you use enter to submit from the dialog (or in iOS the go button) it would still treat it as cancelled, so you could only use the OK alertify button.  This occurs on the demo page right now. This seems to be ok in 0.4.\n. This would definitely be a nice to have, definitely not bloat at all.  On iPhone you can specify \"tel\" as the type and it will give you the numeric keypad instead of the full keyboard, very useful for numeric prompts.\n. Played a bit more with this.  If I hit done to hide the keyboard in the input field and then hit the alertify ok button, I get the same locked up behaviour, I don't get the weird extra callbacks though :confused: \n. Yes from master (I also tried the 0.4.0rc1 tag).\n\nThe issue in 0.3 was if you use enter to submit from the dialog (or in iOS the go button) it would still treat it as cancelled, so you could only use the OK alertify button.  This occurs on the demo page right now. This seems to be ok in 0.4.\n. ",
    "hpshelton": "This is dependent on the OS. Mac OS X uses primary action (confirm) on the right, secondary action (cancel) on the left. Windows does the opposite. The library should presumably match the OS it's running on. \n. This is dependent on the OS. Mac OS X uses primary action (confirm) on the right, secondary action (cancel) on the left. Windows does the opposite. The library should presumably match the OS it's running on. \n. ",
    "thers": "I bet the agree or ok button always should be on the right side\nand disagree or cancel on the left side, because, as i think, right side always represents \"+\" and left side \"-\" so if we okay with somewhat we are making plus to it mentally.\n. @fabien-d i think `buttonReverse: true` would be enough.\n. You could set the color of the back ground as rgba(255, 255, 255, .5), or\nyou meant image as bg?\n\n2012/12/15 kwizfreak notifications@github.com\n\n> Hello, i need to create an Background Opacity effect with alertify,\n> but i don't have any idea.\n> \n> How we can do it ?\n> \n> Thanks\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/62.\n. Actually i add `tabindex` just for proper behavior of the Tab on keyboard :) \n\nP.S.: Don't know why your commits and merges appeared here, but i'll make a new PR a bit later with just one commit :)\n. QUnit was alerting about erros, but i think it's because of staging branch, so don't mind about it :)\n. Uh, im so sorry :( first contributing to open source, exciting %) I think at now it would be better if you change this by yourself instead of me. I apologize for disturbing.\n. I bet the agree or ok button always should be on the right side\nand disagree or cancel on the left side, because, as i think, right side always represents \"+\" and left side \"-\" so if we okay with somewhat we are making plus to it mentally.\n. @fabien-d i think `buttonReverse: true` would be enough.\n. You could set the color of the back ground as rgba(255, 255, 255, .5), or\nyou meant image as bg?\n\n2012/12/15 kwizfreak notifications@github.com\n\n> Hello, i need to create an Background Opacity effect with alertify,\n> but i don't have any idea.\n> \n> How we can do it ?\n> \n> Thanks\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/62.\n. Actually i add `tabindex` just for proper behavior of the Tab on keyboard :) \n\nP.S.: Don't know why your commits and merges appeared here, but i'll make a new PR a bit later with just one commit :)\n. QUnit was alerting about erros, but i think it's because of staging branch, so don't mind about it :)\n. Uh, im so sorry :( first contributing to open source, exciting %) I think at now it would be better if you change this by yourself instead of me. I apologize for disturbing.\n. ",
    "stuartkeith": "Perhaps it could be configurable? Keeping the existing behaviour by default, so it doesn't break anything.\n\nThen the developer can easily:\n- Not worry about it, and use the default;\n- Choose the order that they feel is appropriate for their project (they might be developing a site used mostly by Windows users and feel primary/secondary is the right choice);\n- Write code that inspects the browser's user agent and selects the appropriate order;\n- Allow the user to choose the order and save it as a preference.\n\nI don't know if putting the user agent code into Alertify itself is a good idea (sniffing the user agent is opening a can of worms), but I don't see any downsides in a simple \"reverse button order\" boolean (or however you'd go about it).\n. Yeah, I think buttonReverse is enough. It makes it clear what it does and you're not tying the behaviour to any particular OS.\n. I quickly tried it out here: https://github.com/stuartkeith/alertify.js/commit/c8bdc0f4cb1272a7e538c0975414bb0c448ccae9\n. No problem, just squashed the commits. Thanks.\n. Perhaps it could be configurable? Keeping the existing behaviour by default, so it doesn't break anything.\n\nThen the developer can easily:\n- Not worry about it, and use the default;\n- Choose the order that they feel is appropriate for their project (they might be developing a site used mostly by Windows users and feel primary/secondary is the right choice);\n- Write code that inspects the browser's user agent and selects the appropriate order;\n- Allow the user to choose the order and save it as a preference.\n\nI don't know if putting the user agent code into Alertify itself is a good idea (sniffing the user agent is opening a can of worms), but I don't see any downsides in a simple \"reverse button order\" boolean (or however you'd go about it).\n. Yeah, I think buttonReverse is enough. It makes it clear what it does and you're not tying the behaviour to any particular OS.\n. I quickly tried it out here: https://github.com/stuartkeith/alertify.js/commit/c8bdc0f4cb1272a7e538c0975414bb0c448ccae9\n. No problem, just squashed the commits. Thanks.\n. ",
    "javizarza": "It is :)\n\nI've written a quick & dirty js based fix.\n\nIf you want to check it and improve it, please let me know.\n\nOn Mon, Dec 10, 2012 at 9:29 PM, Fabien Doiron notifications@github.comwrote:\n\n> I'm assuming (don't have the device to test) that it's a position: fixedsupport issue. I'll keep this on the radar and look for a valid fallback!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/42#issuecomment-11215994.\n. Hey!\n\nI've been away from the real world this days.\n\nLet me check how can I contribute with that.\n\nOn Fri, Dec 21, 2012 at 5:10 PM, Fabien Doiron notifications@github.comwrote:\n\n> @javizarza https://github.com/javizarza any update on the fix?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/42#issuecomment-11618228.\n. I don't know how to open a PR so I let you know what I did.\n\nLine 23, I added:\n\n/\\* */\n        var browser = navigator.userAgent.toLowerCase();\n        var needfix = new Array(\"windows phone os 7\",\"android 2.1\",\"android 2.2\",\"android 2.3\",\"iphone os 3\",\"iphone os 4\");\n        Array.prototype.hasIn = function(obj) {\n            var i = this.length;\n            while (i--) {\n                if (obj.search(this[i])>-1) { return true; }\n            }\n            return false;\n        }\n\n/\\* */       \n\nJust the \"detection\"\n\nAnd then in line 163 into the timeout to focus the dialog, just after the \"else btnOK.focus();\"\n\n/\\* */\n                    if (needfix.hasIn(browser)) {\n                        var top = window.pageYOffset ? window.pageYOffset : document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop;\n                        top = top + 50;\n                        bottom = 60 - top;\n                        var x = document.styleSheets[0];\n                        if (browser.search(\"windows phone os 7\")>-1) {\n                            x.addRule('.alertify', 'position:absolute; top:'+top+'px;',x.cssRules.length);\n                            x.addRule('.alertify-logs', 'position:absolute; bottom:'+bottom+'px;',x.cssRules.length);\n                        } else {\n                            x.insertRule('.alertify {position:absolute; top:'+top+'px;}',x.cssRules.length);\n                            x.insertRule('.alertify-logs {position:absolute; bottom:'+bottom+'px;}',x.cssRules.length);\n                        }\n\n/\\* */\n\nI rewrite the css before it's applied calculating the right vertical position. The case of WP7 is because it doesn't support addRule and you have to use insertRule.\n\nI hope it can help.\n\nRegards :)\n. It is :)\n\nI've written a quick & dirty js based fix.\n\nIf you want to check it and improve it, please let me know.\n\nOn Mon, Dec 10, 2012 at 9:29 PM, Fabien Doiron notifications@github.comwrote:\n\n> I'm assuming (don't have the device to test) that it's a position: fixedsupport issue. I'll keep this on the radar and look for a valid fallback!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/42#issuecomment-11215994.\n. Hey!\n\nI've been away from the real world this days.\n\nLet me check how can I contribute with that.\n\nOn Fri, Dec 21, 2012 at 5:10 PM, Fabien Doiron notifications@github.comwrote:\n\n> @javizarza https://github.com/javizarza any update on the fix?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/42#issuecomment-11618228.\n. I don't know how to open a PR so I let you know what I did.\n\nLine 23, I added:\n\n/\\* */\n        var browser = navigator.userAgent.toLowerCase();\n        var needfix = new Array(\"windows phone os 7\",\"android 2.1\",\"android 2.2\",\"android 2.3\",\"iphone os 3\",\"iphone os 4\");\n        Array.prototype.hasIn = function(obj) {\n            var i = this.length;\n            while (i--) {\n                if (obj.search(this[i])>-1) { return true; }\n            }\n            return false;\n        }\n\n/\\* */       \n\nJust the \"detection\"\n\nAnd then in line 163 into the timeout to focus the dialog, just after the \"else btnOK.focus();\"\n\n/\\* */\n                    if (needfix.hasIn(browser)) {\n                        var top = window.pageYOffset ? window.pageYOffset : document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop;\n                        top = top + 50;\n                        bottom = 60 - top;\n                        var x = document.styleSheets[0];\n                        if (browser.search(\"windows phone os 7\")>-1) {\n                            x.addRule('.alertify', 'position:absolute; top:'+top+'px;',x.cssRules.length);\n                            x.addRule('.alertify-logs', 'position:absolute; bottom:'+bottom+'px;',x.cssRules.length);\n                        } else {\n                            x.insertRule('.alertify {position:absolute; top:'+top+'px;}',x.cssRules.length);\n                            x.insertRule('.alertify-logs {position:absolute; bottom:'+bottom+'px;}',x.cssRules.length);\n                        }\n\n/\\* */\n\nI rewrite the css before it's applied calculating the right vertical position. The case of WP7 is because it doesn't support addRule and you have to use insertRule.\n\nI hope it can help.\n\nRegards :)\n. ",
    "kaansoral": "Hi fabien-d, indeed amazing plugin :)\n\nI've been using alertify a lot lately, and enjoying it, today I tested it on my example phonegap project, using Android 2.3 because that's where all the bugs are and I can't even see any result. There are no errors etc.\n\nThere are almost no bug reports related to alertify on internet, and couldn't come up with anything adding android to the mix, only this thread. There are no exceptions, I've tried dialogs and log,success's, none of them show anything.\nAny suggestions for a solution?\n. Sorry about the last comment, turns out it was just a case of missing css files, it works great tho, the last stable version.\n. Sorry for the late reply, I was thinking how this could be reproduced, but I guess an android 2.3 device is a must if the problem is indeed what I described it is, so I will experiment a bit, also try the things you suggested and get back here.\n. No improvements, I've tested new version on Android devices, any version I tested seemed buggy, for example on Android 4.2.2, alert log shows but never hides etc, there are that kind of bugs, so I sticked to version 0.3.8\n\nMost probably the cause of the issues are animations, and android webkit's own bugs\n\nOn Android 4.2.2, instead of a click issues, the alert logs were showing twice, I managed to reduce it to 1 with these styles:\n.alertify-hide,.alertify-show,.alertify,.alertify-log,.alertify-log-success,.alertify-text{\n    -webkit-transform: translate3d(0, 0, 0);\n    -webkit-perspective:5000;\n    -webkit-backface-visibility: hidden;\n}\n\nGenerally, imo, android versions are really buggy, and to make things work, instead of improvements, one requires workarounds for known bugs, I mostly gave up on Android 2.3's issues, the above fix solved it for 4.2.2\n. alertify is discontinued, I also have similar custom modifications / overriders myself, to fix issues / add features\n. I just checked jAlert, but it doesn't replace alertify.success\n\nAlso the animations are too heavy/overwhelming\n\nI still use alertify for it's simple and lightweight alertify messages, like the .log and the .success\n. Thanks, I think many people might make the switch if the growl style alerts are a satisfying replacement for the alertify ones\n\nThe alertify ones also have severe performance issues, each frame of the animation triggers a full page reflaw/redraw, I manually fixed the issue by trial and error, yet it would be nice to find an alternative that is actively developed\n. I think 2 types would be great:\n\n1) Android Toast styles notifications, simple, lightweight, hides on click or fades away on it's own\n2) Emulate/Replicate the alertify's sliding alerts 1:1 + Solve the issues\n\nAt one point, I was experiencing browser performance issues, that's when I realized the excessive redraw problem I mentioned with alertify, the bounding box needs to be dynamic to allow multiple/stacking alertify messages, yet that flexibility ties the drawing to the entire page, causing the performance issues - they can easily be observed with Chrome/Firefox's Inspectors - Firefox can't handle it\n\nLimiting the alertify bounding box solved the issue for me, but my alertify's no longer stack, a new one hides the older one\n\nEdit: You can also gather a following more easily if you emulate the Android toasts, as I'm sure there are a lot of android developers that seek them on web (it might already exist on web, I didn't research :)\n. You can inspect it on https://geobird.com\r\n\r\nIt wasn't a perfect solution, but it was an easy fix, at the time, this was the easiest solution, I don't remember the specifics tho (It's no longer possible to stack 1+ alerts with this modification). build a function called my_alertify and check the logs yourself\n\nI had a similar function, thanks to it, it was easy for me to replace alertify with something else\n. Hi fabien-d, indeed amazing plugin :)\n\nI've been using alertify a lot lately, and enjoying it, today I tested it on my example phonegap project, using Android 2.3 because that's where all the bugs are and I can't even see any result. There are no errors etc.\n\nThere are almost no bug reports related to alertify on internet, and couldn't come up with anything adding android to the mix, only this thread. There are no exceptions, I've tried dialogs and log,success's, none of them show anything.\nAny suggestions for a solution?\n. Sorry about the last comment, turns out it was just a case of missing css files, it works great tho, the last stable version.\n. Sorry for the late reply, I was thinking how this could be reproduced, but I guess an android 2.3 device is a must if the problem is indeed what I described it is, so I will experiment a bit, also try the things you suggested and get back here.\n. No improvements, I've tested new version on Android devices, any version I tested seemed buggy, for example on Android 4.2.2, alert log shows but never hides etc, there are that kind of bugs, so I sticked to version 0.3.8\n\nMost probably the cause of the issues are animations, and android webkit's own bugs\n\nOn Android 4.2.2, instead of a click issues, the alert logs were showing twice, I managed to reduce it to 1 with these styles:\n.alertify-hide,.alertify-show,.alertify,.alertify-log,.alertify-log-success,.alertify-text{\n    -webkit-transform: translate3d(0, 0, 0);\n    -webkit-perspective:5000;\n    -webkit-backface-visibility: hidden;\n}\n\nGenerally, imo, android versions are really buggy, and to make things work, instead of improvements, one requires workarounds for known bugs, I mostly gave up on Android 2.3's issues, the above fix solved it for 4.2.2\n. alertify is discontinued, I also have similar custom modifications / overriders myself, to fix issues / add features\n. I just checked jAlert, but it doesn't replace alertify.success\n\nAlso the animations are too heavy/overwhelming\n\nI still use alertify for it's simple and lightweight alertify messages, like the .log and the .success\n. Thanks, I think many people might make the switch if the growl style alerts are a satisfying replacement for the alertify ones\n\nThe alertify ones also have severe performance issues, each frame of the animation triggers a full page reflaw/redraw, I manually fixed the issue by trial and error, yet it would be nice to find an alternative that is actively developed\n. I think 2 types would be great:\n\n1) Android Toast styles notifications, simple, lightweight, hides on click or fades away on it's own\n2) Emulate/Replicate the alertify's sliding alerts 1:1 + Solve the issues\n\nAt one point, I was experiencing browser performance issues, that's when I realized the excessive redraw problem I mentioned with alertify, the bounding box needs to be dynamic to allow multiple/stacking alertify messages, yet that flexibility ties the drawing to the entire page, causing the performance issues - they can easily be observed with Chrome/Firefox's Inspectors - Firefox can't handle it\n\nLimiting the alertify bounding box solved the issue for me, but my alertify's no longer stack, a new one hides the older one\n\nEdit: You can also gather a following more easily if you emulate the Android toasts, as I'm sure there are a lot of android developers that seek them on web (it might already exist on web, I didn't research :)\n. You can inspect it on https://geobird.com\r\n\r\nIt wasn't a perfect solution, but it was an easy fix, at the time, this was the easiest solution, I don't remember the specifics tho (It's no longer possible to stack 1+ alerts with this modification). build a function called my_alertify and check the logs yourself\n\nI had a similar function, thanks to it, it was easy for me to replace alertify with something else\n. ",
    "gregoryagu": "I am using Alertify, and it works great on the desktop, but on my Android, the Alert Shows at the top of the page, even if the top of the page is not visible.\n\nI tried the fix above, but it is not working for me.  Perhaps I don't have the code in the right place.  For the second code, I put it in the after:\n\n```\n   else if (!hasCancel || self.buttonReverse) {\n                    btnOK.focus();\n                    //Added Code Here:\n                    if(needfix.hasIn(browser))........\n```\n\nBut it isn't clear where the first code should go.\n\nIf you could incorporate this code into alertify.js or specify more exactly how to implement this fix, that would be great.\n\nGreg\n. I am using Alertify, and it works great on the desktop, but on my Android, the Alert Shows at the top of the page, even if the top of the page is not visible.\n\nI tried the fix above, but it is not working for me.  Perhaps I don't have the code in the right place.  For the second code, I put it in the after:\n\n```\n   else if (!hasCancel || self.buttonReverse) {\n                    btnOK.focus();\n                    //Added Code Here:\n                    if(needfix.hasIn(browser))........\n```\n\nBut it isn't clear where the first code should go.\n\nIf you could incorporate this code into alertify.js or specify more exactly how to implement this fix, that would be great.\n\nGreg\n. ",
    "tjoozey": "i will:\n1. push the files and folders to the cloud\n2. put this script in my head tag:\n\n$(function() { alertify.alert(\"Test\"); });\n1. that will work?\n\n---\n\nFrom: Fabien Doiron notifications@github.com\nTo: fabien-d/alertify.js alertify.js@noreply.github.com\nCc: tyler johnson tjohnson51503@att.net\nSent: Wed, December 5, 2012 3:35:29 PM\nSubject: Re: [alertify.js] auto-alert (#47)\n\nyou can call any of the alertify methods (e.g. alert, confirm, log...) on page \nload. \n\nIf you have a DOM ready function... e.g. jQuery\n$(function() { alertify.alert(\"Test\"); }); \nor you can load the library at the end of the html page and call it from there \n(inline script is not ideal - just for demonstration purposes).\n    <script src=\"path_to_file/alertify.min.js\"></script> \n<script>alertify.alert(\"test\");</script> </body> \n\n\u2014\nReply to this email directly or view it on GitHub.\n. Any1?\n\n---\n\nFrom: Tyler Johnson tjohnson51503@att.net\nTo: fabien-d/alertify.js \nreply@reply.github.com\n\nSent: Wed, December 5, 2012 3:38:55 PM\nSubject: Re: [alertify.js] auto-alert (#47)\n\ni will:\n1. push the files and folders to the cloud\n2. put this script in my head tag:\n\n$(function() { alertify.alert(\"Test\"); });\n1. that will work?\n\n---\n\nFrom: Fabien Doiron notifications@github.com\nTo: fabien-d/alertify.js alertify.js@noreply.github.com\nCc: tyler johnson tjohnson51503@att.net\nSent: Wed, December 5, 2012 3:35:29 PM\nSubject: Re: [alertify.js] auto-alert (#47)\n\nyou can call any of the alertify methods (e.g. alert, confirm, log...) on page \nload. \n\nIf you have a DOM ready function... e.g. jQuery\n$(function() { alertify.alert(\"Test\"); }); \nor you can load the library at the end of the html page and call it from there \n(inline script is not ideal - just for demonstration purposes).\n    <script src=\"path_to_file/alertify.min.js\"></script> \n<script>alertify.alert(\"test\");</script> </body> \n\n\u2014\nReply to this email directly or view it on GitHub.\n. how do i use the dom-ready function, the second piece of code is non-working at the end.\n. Hello,\n\nThis is the code im using to create a simple alert that is prompted automatically when a visitor gives a page hit.\n\n<head><meta charset=\"utf-8\">\n<link rel=\"stylesheet\" href=\"http://fabien-d.github.com/alertify.js/assets/js/lib/alertify/alertify.core.css\" />\n<link rel=\"stylesheet\" href=\"http://fabien-d.github.com/alertify.js/assets/js/lib/alertify/alertify.default.css\" />\n\n<script src=\"http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.8.3.min.js\"></script>\n\n<script src=\"http://fabien-d.github.com/alertify.js/assets/js/lib/alertify/alertify.min.js\"></script>\n\n<script> $(document).ready(function() { \n    // alert dialog\n    alertify.alert(\"<b>You have reached the WW Network.<Br>The WW Network uses state-of-art<a href=\"http://www.hasoffers.com/customer-satisfaction/\">tracking</a> from our private domain tracker.ww.com.<br><i>We are only accepting<a href=\"http://network.w-wnetwork.com/signup\">*10* new affiliates for January, so join today!</i>\");\n</script>\n\nCan you tell me how to get this dialog to work? Also, when User hits  the label \"ok\", how do I make it redirect to a URL?\n\nAwaiting your reply.\n. This {{URL}} needs to be opened in a new tab/window.\n\nDoes alertify.js have this function?\n\nRegards  \n\n## \n\nTyler Johnson\nSent with Sparrow (http://www.sparrowmailapp.com/?sig)\n\nOn Tuesday, January 29, 2013 at 11:26 AM, Fabien Doiron wrote:\n\n> In order to redirect to a different URL, you need to use the callback function, see below:\n> $(document).ready(function() { // alert dialog alertify.alert(\"<b>You have reached the WW Network.<Br>The WW Network uses state-of-art<a href=\\\"http://www.hasoffers.com/customer-satisfaction/\\\">tracking</a> from our private domain tracker.ww.com.<br><i>We are only accepting<a href=\\\"http://network.w-wnetwork.com/signup\\\">_10_ new affiliates for January, so join today!</i>\", function () { window.location = \"http://google.ca\"; }); });  \n> \n> note: you have to escape \\\" quotes or use single quotes.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/fabien-d/alertify.js/issues/110#issuecomment-12846387).  \n. i will:\n1. push the files and folders to the cloud\n2. put this script in my head tag:\n\n$(function() { alertify.alert(\"Test\"); });\n1. that will work?\n\n---\n\nFrom: Fabien Doiron notifications@github.com\nTo: fabien-d/alertify.js alertify.js@noreply.github.com\nCc: tyler johnson tjohnson51503@att.net\nSent: Wed, December 5, 2012 3:35:29 PM\nSubject: Re: [alertify.js] auto-alert (#47)\n\nyou can call any of the alertify methods (e.g. alert, confirm, log...) on page \nload. \n\nIf you have a DOM ready function... e.g. jQuery\n$(function() { alertify.alert(\"Test\"); }); \nor you can load the library at the end of the html page and call it from there \n(inline script is not ideal - just for demonstration purposes).\n    <script src=\"path_to_file/alertify.min.js\"></script> \n<script>alertify.alert(\"test\");</script> </body> \n\n\u2014\nReply to this email directly or view it on GitHub.\n. Any1?\n\n---\n\nFrom: Tyler Johnson tjohnson51503@att.net\nTo: fabien-d/alertify.js \nreply@reply.github.com\n\nSent: Wed, December 5, 2012 3:38:55 PM\nSubject: Re: [alertify.js] auto-alert (#47)\n\ni will:\n1. push the files and folders to the cloud\n2. put this script in my head tag:\n\n$(function() { alertify.alert(\"Test\"); });\n1. that will work?\n\n---\n\nFrom: Fabien Doiron notifications@github.com\nTo: fabien-d/alertify.js alertify.js@noreply.github.com\nCc: tyler johnson tjohnson51503@att.net\nSent: Wed, December 5, 2012 3:35:29 PM\nSubject: Re: [alertify.js] auto-alert (#47)\n\nyou can call any of the alertify methods (e.g. alert, confirm, log...) on page \nload. \n\nIf you have a DOM ready function... e.g. jQuery\n$(function() { alertify.alert(\"Test\"); }); \nor you can load the library at the end of the html page and call it from there \n(inline script is not ideal - just for demonstration purposes).\n    <script src=\"path_to_file/alertify.min.js\"></script> \n<script>alertify.alert(\"test\");</script> </body> \n\n\u2014\nReply to this email directly or view it on GitHub.\n. how do i use the dom-ready function, the second piece of code is non-working at the end.\n. Hello,\n\nThis is the code im using to create a simple alert that is prompted automatically when a visitor gives a page hit.\n\n<head><meta charset=\"utf-8\">\n<link rel=\"stylesheet\" href=\"http://fabien-d.github.com/alertify.js/assets/js/lib/alertify/alertify.core.css\" />\n<link rel=\"stylesheet\" href=\"http://fabien-d.github.com/alertify.js/assets/js/lib/alertify/alertify.default.css\" />\n\n<script src=\"http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.8.3.min.js\"></script>\n\n<script src=\"http://fabien-d.github.com/alertify.js/assets/js/lib/alertify/alertify.min.js\"></script>\n\n<script> $(document).ready(function() { \n    // alert dialog\n    alertify.alert(\"<b>You have reached the WW Network.<Br>The WW Network uses state-of-art<a href=\"http://www.hasoffers.com/customer-satisfaction/\">tracking</a> from our private domain tracker.ww.com.<br><i>We are only accepting<a href=\"http://network.w-wnetwork.com/signup\">*10* new affiliates for January, so join today!</i>\");\n</script>\n\nCan you tell me how to get this dialog to work? Also, when User hits  the label \"ok\", how do I make it redirect to a URL?\n\nAwaiting your reply.\n. This {{URL}} needs to be opened in a new tab/window.\n\nDoes alertify.js have this function?\n\nRegards  \n\n## \n\nTyler Johnson\nSent with Sparrow (http://www.sparrowmailapp.com/?sig)\n\nOn Tuesday, January 29, 2013 at 11:26 AM, Fabien Doiron wrote:\n\n> In order to redirect to a different URL, you need to use the callback function, see below:\n> $(document).ready(function() { // alert dialog alertify.alert(\"<b>You have reached the WW Network.<Br>The WW Network uses state-of-art<a href=\\\"http://www.hasoffers.com/customer-satisfaction/\\\">tracking</a> from our private domain tracker.ww.com.<br><i>We are only accepting<a href=\\\"http://network.w-wnetwork.com/signup\\\">_10_ new affiliates for January, so join today!</i>\", function () { window.location = \"http://google.ca\"; }); });  \n> \n> note: you have to escape \\\" quotes or use single quotes.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/fabien-d/alertify.js/issues/110#issuecomment-12846387).  \n. ",
    "toin0u": "@tjoozey You can try this otherwise... A very very simple exemple...\n\n``` html\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>Test alertifyjs</title>\n    <link rel=\"stylesheet\" href=\"http://fabien-d.github.com/alertify.js/assets/js/lib/alertify/alertify.core.css\" />\n    <link rel=\"stylesheet\" href=\"http://fabien-d.github.com/alertify.js/assets/js/lib/alertify/alertify.default.css\" />\n    <script src=\"http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.8.3.min.js\"></script>\n    <script src=\"http://fabien-d.github.com/alertify.js/assets/js/lib/alertify/alertify.min.js\"></script>\n    <script>\n        $(document).ready(function() {\n            alertify.labels = { ok: \"Jaaaa!\", cancel: \"Nej...\" };\n            alertify.prompt(\"Does this test works ?\", function (e, str) {\n                if (e) {\n                    alertify.success(alertify.labels.ok);\n                } else {\n                    alertify.error(alertify.labels.cancel);\n                }\n            });\n        });\n    </script>\n</head>\n<body>\n</body>\n</html>\n```\n. Yes it's possible to use with the full git url. But as you wrote it isn't ideal. I'm glad to know that you'll implement this for the next milestone.\n\nI think the shim repo is a great idea.\n. :+1: \n. Done :)\n. Sure I just rebased !\n\nI just removed the [UNIX executable bit](http://en.wikipedia.org/wiki/Filesystem_permissions) from grunt.js and package.json files because they are obviously not executables. It's just done by `chmod a-x` to these files.\n. +1\n. @tjoozey You can try this otherwise... A very very simple exemple...\n\n``` html\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>Test alertifyjs</title>\n    <link rel=\"stylesheet\" href=\"http://fabien-d.github.com/alertify.js/assets/js/lib/alertify/alertify.core.css\" />\n    <link rel=\"stylesheet\" href=\"http://fabien-d.github.com/alertify.js/assets/js/lib/alertify/alertify.default.css\" />\n    <script src=\"http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.8.3.min.js\"></script>\n    <script src=\"http://fabien-d.github.com/alertify.js/assets/js/lib/alertify/alertify.min.js\"></script>\n    <script>\n        $(document).ready(function() {\n            alertify.labels = { ok: \"Jaaaa!\", cancel: \"Nej...\" };\n            alertify.prompt(\"Does this test works ?\", function (e, str) {\n                if (e) {\n                    alertify.success(alertify.labels.ok);\n                } else {\n                    alertify.error(alertify.labels.cancel);\n                }\n            });\n        });\n    </script>\n</head>\n<body>\n</body>\n</html>\n```\n. Yes it's possible to use with the full git url. But as you wrote it isn't ideal. I'm glad to know that you'll implement this for the next milestone.\n\nI think the shim repo is a great idea.\n. :+1: \n. Done :)\n. Sure I just rebased !\n\nI just removed the [UNIX executable bit](http://en.wikipedia.org/wiki/Filesystem_permissions) from grunt.js and package.json files because they are obviously not executables. It's just done by `chmod a-x` to these files.\n. +1\n. ",
    "peterbe": "It would only be for specific instances. Your example looks like it would definitely work. \n. It would only be for specific instances. Your example looks like it would definitely work. \n. ",
    "khalidabuhakmeh": "I use Mustache to render the alert message and pass that in as html. I get a really nice looking alert message without modifying the source.\n. I use Mustache to render the alert message and pass that in as html. I get a really nice looking alert message without modifying the source.\n. ",
    "catch22": "+1\n. +1\n. ",
    "kwizfreak": "i want this effect ( like an fancybox ).\nFade or opacity effect i don't know, but i see the css is : \n\nelement.style {\n    background-color: #777777;\n    cursor: pointer;\n    display: block;\n    height: 1075px;\n    opacity: 0.7;\n}\n#fancybox-overlay {\n    display: none;\n    left: 0;\n    position: absolute;\n    top: 0;\n    width: 100%;\n    z-index: 1100;\n}\n\ni want apply this effect on alertify if is possible.\n\nhttp://d.pr/i/oXzS \n\n![Screenshot 2012-12-15 at 15 06 42](https://f.cloud.github.com/assets/827372/14918/d34894c8-46c0-11e2-9568-b7fda71a1bd3.png)\n\nThanks\n. Thanks you so much !\n. i want this effect ( like an fancybox ).\nFade or opacity effect i don't know, but i see the css is : \n\nelement.style {\n    background-color: #777777;\n    cursor: pointer;\n    display: block;\n    height: 1075px;\n    opacity: 0.7;\n}\n#fancybox-overlay {\n    display: none;\n    left: 0;\n    position: absolute;\n    top: 0;\n    width: 100%;\n    z-index: 1100;\n}\n\ni want apply this effect on alertify if is possible.\n\nhttp://d.pr/i/oXzS \n\n![Screenshot 2012-12-15 at 15 06 42](https://f.cloud.github.com/assets/827372/14918/d34894c8-46c0-11e2-9568-b7fda71a1bd3.png)\n\nThanks\n. Thanks you so much !\n. ",
    "stickhandle": "Fair enough -- i suspect you're right (conflict). I'm a backend guy ... new\nto JS, but I should have suspected that myself.\n\nOn Tue, Dec 18, 2012 at 8:13 PM, Fabien Doiron notifications@github.comwrote:\n\n> It almost sounds like a conflict... If possible, I'd say disable any other\n> plugins or JavaScript just as a preliminary ruling out whether it's a\n> conflict or not (since it can't be reproduce on the example site)\n> \n> When all JS is removed except for alertify, if the issue is gone, it will\n> come down to finding out where the conflict is occurring and if it's an\n> issue with alertify or not.\n> \n> If that doesn't solve the issue would you be able to provide more info,\n> e.g. steps to reproduce, screenshots, anything that could help.\n> \n> It's hard to debug an issue when it's unreproducible.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/68#issuecomment-11513391.\n. will do.\n\nOn Tue, Dec 18, 2012 at 9:41 PM, Fabien Doiron notifications@github.comwrote:\n\n> If you need more info/help simply reopen or log a new issue... if it\n> happens to be a conflict, if you could post info about it, it'd be helpful.\n> It'd be nice to see if it's something that alertify could prevent...\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/68#issuecomment-11515352.\n. Reopened. Issue persists when all other JS is removed.\nOS: WinXP, Win7\nFF: 16, 17\nIE: 8, 10\n(note: worked on Win7, Chrome)\n\n# CODE (a button on the page calls the gotoButton() function)\n\n<html>\n...\n<body>\n...\n</body>\n\n<script language=\"javascript\">\nfunction gotoButton() {\n    /* validate the mandatory fields */\n    alertify.alert(\"Please enter Phone # and SIM Serial #\", function () { \n        //after clicking OK\n    });\n}\n</script>\n\n<!-- JavaScripts -->\n\n<script src=\"./js/alertify.min.js\"></script>\n\n# </html>\n\nPics of what happened:\nFirst pic: When alert slides down, click button. Pic is on down press of mouse click.\n![click_down_button](https://f.cloud.github.com/assets/1816149/22743/398de624-4a0f-11e2-8e4c-8e74c4de9e36.jpg)\nSecond pic: Return state after mouse click up.\n![click_up](https://f.cloud.github.com/assets/1816149/22746/40bf0950-4a0f-11e2-8d1f-c80d237b26c1.jpg)\nIf click is on the hidden 'ok' revealed under the button in first pic, then the alert is dismissed. Anywhere else in the button area, and it is not dismissed.\n. Reopened.\nAll JS except disabled except as below.\nIssue presents on WinXP in FF16 and IE8, Win7 in FF17 and IE10. Does not present on Win7 in Chrome,\n\nCODE\n\n``` html\n<html>\n<body>\n...\n</body>\n<script language=\"javascript\">\n\nfunction gotoSim() {\n    /* validate the mandatory fields */\n    alertify.alert(\"Please enter Phone # and SIM Serial #\", function () { \n        //after clicking OK\n    });\n\n}\n\n</script>\n<!-- JavaScripts -->\n<script src=\"./js/alertify.min.js\"></script>\n</html>\n```\n\nResult are shown in the 2 pictures:\n\nPic1\n![click_down_button](https://f.cloud.github.com/assets/1816149/22785/5ce0455c-4a11-11e2-952a-27e37be3193d.jpg)\n\nPic2\n![click_up](https://f.cloud.github.com/assets/1816149/22787/68fdacc6-4a11-11e2-8d57-1af6f37697b0.jpg)\n\nAfter alert slides down, on mouse down-click, I see Pic1 (the button disappears leaving an off-center 'ok' text link). On mouse up-click the button returns as in Pic2. \n\nONLY when i click the button in the exact same space as the hidden 'ok' text link does the alert get dismissed. Any other area of the button does not dismiss the dialog.\n. All JS disabled (except as below). Issue still present in: \n*FF16, IE8 on WinXP \n*FF17, IE10 on Win7\nWorks in Chrome on Win7.\n\nMy Code:\n\n``` html\n<html>\n<body>\n...\n</body>\n<script language=\"javascript\">\n\nfunction gotoButtonClick() {\n    /* validate the mandatory fields */\n    alertify.alert(\"Please enter Phone # and SIM Serial #\", function () { \n        //after clicking OK\n    });\n\n}\n\n</script>\n<!-- JavaScripts -->\n<script src=\"./js/alertify.min.js\"></script>\n</html>\n```\n\nPics show what happened after alert slides in. \n*First pic shows mouse click-down on button - reveals small 'ok' text link. \n*Second pic shows mouse click-up - shows the button again, dialog is not dismissed\n*ONLY when the button is clicked why hovering EXACTLY over the hidden 'ok' text link, is the alert dialog dismissed\n\n![click_down_button](https://f.cloud.github.com/assets/1816149/22819/30fa0de4-4a14-11e2-8ea3-358b902b5f6d.jpg)\n![click_up](https://f.cloud.github.com/assets/1816149/22820/311eb37e-4a14-11e2-8c31-5cff273049b0.jpg)\n. All JS disabled (except as below). Issue still present in: \n*FF16, IE8 on WinXP \n*FF17, IE10 on Win7\nWorks in Chrome on Win7.\n\nMy Code:\n\n```\n<html>\n<body>\n...\n</body>\n<script language=\"javascript\">\n\nfunction gotoButtonClick() {\n    /* validate the mandatory fields */\n    alertify.alert(\"Please enter Phone # and SIM Serial #\", function () { \n        //after clicking OK\n    });\n\n}\n\n</script>\n<!-- JavaScripts -->\n<script src=\"./js/alertify.min.js\"></script>\n</html>\n```\n\nPics show what happened after alert slides in. \n*First pic shows mouse click-down on button - reveals small 'ok' text link. \n*Second pic shows mouse click-up - shows the button again, dialog is not dismissed\n*ONLY when the button is clicked why hovering EXACTLY over the hidden 'ok' text link, is the alert dialog dismissed\n\n![click_down_button](https://f.cloud.github.com/assets/1816149/22819/30fa0de4-4a14-11e2-8ea3-358b902b5f6d.jpg)\n![click_up](https://f.cloud.github.com/assets/1816149/22820/311eb37e-4a14-11e2-8c31-5cff273049b0.jpg)\n. All JS disabled (except as below). Issue still present in: \n- FF16, IE8 on WinXP \n- FF17, IE10 on Win7\n\nWorks in Chrome on Win7.\n\nMy Code:\nPics show what happened after alert slides in. \n- First pic shows mouse click-down on button - reveals small 'ok' text link. \n- Second pic shows mouse click-up - shows the button again, dialog is not dismissed\n- ONLY when the button is clicked why hovering EXACTLY over the hidden 'ok' text link, is the alert dialog dismissed\n\n![click_down_button](https://f.cloud.github.com/assets/1816149/22819/30fa0de4-4a14-11e2-8ea3-358b902b5f6d.jpg)\n![click_up](https://f.cloud.github.com/assets/1816149/22820/311eb37e-4a14-11e2-8c31-5cff273049b0.jpg)\n. can't seem to post something new ... so i updated my original comment\n. I inherited this code ... and I don't doubt its a local issue.\n\nTop of page:\n\n``` html\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n    <meta http-equiv=\"cache-control\" content=\"no-cache\">\n    <title>Dashboard</title>\n\n    <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\"\nhref=\"./css/screen.css\" />\n</head>\n```\n\nIn terms of the way the gotoButtonClick function is called, its on submit\nof the surrounding form:\n\n```\n<FORM name=\"simCreateRepairForm\" METHOD=\"POST\"\nACTION=\"javascript:gotoButtonClick();\" >\n```\n\nhmmm ... let me check that\n\nOn Wed, Dec 19, 2012 at 3:22 PM, Fabien Doiron notifications@github.comwrote:\n\n> I still can't reproduce this in any browser on my mac (don't have access\n> to a PC ATM)\n> \n> A couple things:\n> 1. I'd add a doctype - your page may be in quirks mode <!doctype html>\n> 2. How are you calling the gotoButtonClick function? Maybe that's where\n> the issue happens.\n> \n> It's very strange, all the button styles are simply CSS\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/68#issuecomment-11546709.\n. Fair enough -- i suspect you're right (conflict). I'm a backend guy ... new\nto JS, but I should have suspected that myself.\n\nOn Tue, Dec 18, 2012 at 8:13 PM, Fabien Doiron notifications@github.comwrote:\n\n> It almost sounds like a conflict... If possible, I'd say disable any other\n> plugins or JavaScript just as a preliminary ruling out whether it's a\n> conflict or not (since it can't be reproduce on the example site)\n> \n> When all JS is removed except for alertify, if the issue is gone, it will\n> come down to finding out where the conflict is occurring and if it's an\n> issue with alertify or not.\n> \n> If that doesn't solve the issue would you be able to provide more info,\n> e.g. steps to reproduce, screenshots, anything that could help.\n> \n> It's hard to debug an issue when it's unreproducible.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/68#issuecomment-11513391.\n. will do.\n\nOn Tue, Dec 18, 2012 at 9:41 PM, Fabien Doiron notifications@github.comwrote:\n\n> If you need more info/help simply reopen or log a new issue... if it\n> happens to be a conflict, if you could post info about it, it'd be helpful.\n> It'd be nice to see if it's something that alertify could prevent...\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/68#issuecomment-11515352.\n. Reopened. Issue persists when all other JS is removed.\nOS: WinXP, Win7\nFF: 16, 17\nIE: 8, 10\n(note: worked on Win7, Chrome)\n\n# CODE (a button on the page calls the gotoButton() function)\n\n<html>\n...\n<body>\n...\n</body>\n\n<script language=\"javascript\">\nfunction gotoButton() {\n    /* validate the mandatory fields */\n    alertify.alert(\"Please enter Phone # and SIM Serial #\", function () { \n        //after clicking OK\n    });\n}\n</script>\n\n<!-- JavaScripts -->\n\n<script src=\"./js/alertify.min.js\"></script>\n\n# </html>\n\nPics of what happened:\nFirst pic: When alert slides down, click button. Pic is on down press of mouse click.\n![click_down_button](https://f.cloud.github.com/assets/1816149/22743/398de624-4a0f-11e2-8e4c-8e74c4de9e36.jpg)\nSecond pic: Return state after mouse click up.\n![click_up](https://f.cloud.github.com/assets/1816149/22746/40bf0950-4a0f-11e2-8d1f-c80d237b26c1.jpg)\nIf click is on the hidden 'ok' revealed under the button in first pic, then the alert is dismissed. Anywhere else in the button area, and it is not dismissed.\n. Reopened.\nAll JS except disabled except as below.\nIssue presents on WinXP in FF16 and IE8, Win7 in FF17 and IE10. Does not present on Win7 in Chrome,\n\nCODE\n\n``` html\n<html>\n<body>\n...\n</body>\n<script language=\"javascript\">\n\nfunction gotoSim() {\n    /* validate the mandatory fields */\n    alertify.alert(\"Please enter Phone # and SIM Serial #\", function () { \n        //after clicking OK\n    });\n\n}\n\n</script>\n<!-- JavaScripts -->\n<script src=\"./js/alertify.min.js\"></script>\n</html>\n```\n\nResult are shown in the 2 pictures:\n\nPic1\n![click_down_button](https://f.cloud.github.com/assets/1816149/22785/5ce0455c-4a11-11e2-952a-27e37be3193d.jpg)\n\nPic2\n![click_up](https://f.cloud.github.com/assets/1816149/22787/68fdacc6-4a11-11e2-8d57-1af6f37697b0.jpg)\n\nAfter alert slides down, on mouse down-click, I see Pic1 (the button disappears leaving an off-center 'ok' text link). On mouse up-click the button returns as in Pic2. \n\nONLY when i click the button in the exact same space as the hidden 'ok' text link does the alert get dismissed. Any other area of the button does not dismiss the dialog.\n. All JS disabled (except as below). Issue still present in: \n*FF16, IE8 on WinXP \n*FF17, IE10 on Win7\nWorks in Chrome on Win7.\n\nMy Code:\n\n``` html\n<html>\n<body>\n...\n</body>\n<script language=\"javascript\">\n\nfunction gotoButtonClick() {\n    /* validate the mandatory fields */\n    alertify.alert(\"Please enter Phone # and SIM Serial #\", function () { \n        //after clicking OK\n    });\n\n}\n\n</script>\n<!-- JavaScripts -->\n<script src=\"./js/alertify.min.js\"></script>\n</html>\n```\n\nPics show what happened after alert slides in. \n*First pic shows mouse click-down on button - reveals small 'ok' text link. \n*Second pic shows mouse click-up - shows the button again, dialog is not dismissed\n*ONLY when the button is clicked why hovering EXACTLY over the hidden 'ok' text link, is the alert dialog dismissed\n\n![click_down_button](https://f.cloud.github.com/assets/1816149/22819/30fa0de4-4a14-11e2-8ea3-358b902b5f6d.jpg)\n![click_up](https://f.cloud.github.com/assets/1816149/22820/311eb37e-4a14-11e2-8c31-5cff273049b0.jpg)\n. All JS disabled (except as below). Issue still present in: \n*FF16, IE8 on WinXP \n*FF17, IE10 on Win7\nWorks in Chrome on Win7.\n\nMy Code:\n\n```\n<html>\n<body>\n...\n</body>\n<script language=\"javascript\">\n\nfunction gotoButtonClick() {\n    /* validate the mandatory fields */\n    alertify.alert(\"Please enter Phone # and SIM Serial #\", function () { \n        //after clicking OK\n    });\n\n}\n\n</script>\n<!-- JavaScripts -->\n<script src=\"./js/alertify.min.js\"></script>\n</html>\n```\n\nPics show what happened after alert slides in. \n*First pic shows mouse click-down on button - reveals small 'ok' text link. \n*Second pic shows mouse click-up - shows the button again, dialog is not dismissed\n*ONLY when the button is clicked why hovering EXACTLY over the hidden 'ok' text link, is the alert dialog dismissed\n\n![click_down_button](https://f.cloud.github.com/assets/1816149/22819/30fa0de4-4a14-11e2-8ea3-358b902b5f6d.jpg)\n![click_up](https://f.cloud.github.com/assets/1816149/22820/311eb37e-4a14-11e2-8c31-5cff273049b0.jpg)\n. All JS disabled (except as below). Issue still present in: \n- FF16, IE8 on WinXP \n- FF17, IE10 on Win7\n\nWorks in Chrome on Win7.\n\nMy Code:\nPics show what happened after alert slides in. \n- First pic shows mouse click-down on button - reveals small 'ok' text link. \n- Second pic shows mouse click-up - shows the button again, dialog is not dismissed\n- ONLY when the button is clicked why hovering EXACTLY over the hidden 'ok' text link, is the alert dialog dismissed\n\n![click_down_button](https://f.cloud.github.com/assets/1816149/22819/30fa0de4-4a14-11e2-8ea3-358b902b5f6d.jpg)\n![click_up](https://f.cloud.github.com/assets/1816149/22820/311eb37e-4a14-11e2-8c31-5cff273049b0.jpg)\n. can't seem to post something new ... so i updated my original comment\n. I inherited this code ... and I don't doubt its a local issue.\n\nTop of page:\n\n``` html\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n    <meta http-equiv=\"cache-control\" content=\"no-cache\">\n    <title>Dashboard</title>\n\n    <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\"\nhref=\"./css/screen.css\" />\n</head>\n```\n\nIn terms of the way the gotoButtonClick function is called, its on submit\nof the surrounding form:\n\n```\n<FORM name=\"simCreateRepairForm\" METHOD=\"POST\"\nACTION=\"javascript:gotoButtonClick();\" >\n```\n\nhmmm ... let me check that\n\nOn Wed, Dec 19, 2012 at 3:22 PM, Fabien Doiron notifications@github.comwrote:\n\n> I still can't reproduce this in any browser on my mac (don't have access\n> to a PC ATM)\n> \n> A couple things:\n> 1. I'd add a doctype - your page may be in quirks mode <!doctype html>\n> 2. How are you calling the gotoButtonClick function? Maybe that's where\n> the issue happens.\n> \n> It's very strange, all the button styles are simply CSS\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/68#issuecomment-11546709.\n. ",
    "GD-HS": "Wow, a super fast answer :)\nI didn't know Safari is no longer supported. I verify, Apple didn't update their browser since May 2012.\nWell, I totally agree, there is very low priority for this problem.\nThx and greets!\n. I won't and don't :D\n. Fabulous! I do confirm that it is working on Safari/Windows now. Thanks a lot!\n. Wow, a super fast answer :)\nI didn't know Safari is no longer supported. I verify, Apple didn't update their browser since May 2012.\nWell, I totally agree, there is very low priority for this problem.\nThx and greets!\n. I won't and don't :D\n. Fabulous! I do confirm that it is working on Safari/Windows now. Thanks a lot!\n. ",
    "jan-swiecki": "Thanks for answer!\n\n> I wouldn't consider this a critical issue since the canary is an early adoption version and things may still change.\n\nIndeed, but I thought it is worth mentioning here.\n. Thanks for answer!\n\n> I wouldn't consider this a critical issue since the canary is an early adoption version and things may still change.\n\nIndeed, but I thought it is worth mentioning here.\n. ",
    "fizerkhan": "It is still happens to me. How to fix this bug?\n. Thats Great. Meanwhile, i will use this settings.\n. It is still happens to me. How to fix this bug?\n. Thats Great. Meanwhile, i will use this settings.\n. ",
    "sangel10": "I am having the scrolling issue on Chrome 33 on OSX  10.7.5 on version 0.3.11, is there any way to manually fix this? \n. PetruhaXI's solution worked for me. I think it might have to do with the fact that I removed the element that called the notification so there was no longer an element to focus on after the call. \n. I am having the scrolling issue on Chrome 33 on OSX  10.7.5 on version 0.3.11, is there any way to manually fix this? \n. PetruhaXI's solution worked for me. I think it might have to do with the fact that I removed the element that called the notification so there was no longer an element to focus on after the call. \n. ",
    "PetruhaXI": "I have this issue in Chrome (Linux) too.\nI don't know a nature of this problem, so I had to comment the line 432 (elCallee.focus()) to fix it.\n. I have this issue in Chrome (Linux) too.\nI don't know a nature of this problem, so I had to comment the line 432 (elCallee.focus()) to fix it.\n. ",
    "umair-me": "PetruhaXI's solution worked for me too.\n. PetruhaXI's solution worked for me too.\n. ",
    "toyrunr": "I am having the same problem on Windows 7 in IE11. Page scrolls to top for every alert type displayed. the 432 line is no longer what it used to be. I played around with various \"focus\" lines of code, to no avail. Thanks\n. I am having the same problem on Windows 7 in IE11. Page scrolls to top for every alert type displayed. the 432 line is no longer what it used to be. I played around with various \"focus\" lines of code, to no avail. Thanks\n. ",
    "quasipickle": "@fabien-d I guess I just view \"clicking the button\" as a more intentional action than hitting enter.  For less savvy users (of which I have many), it is not completely obvious that hitting enter will confirm the action, whereas clicking the button is very clear.\n\nMy use case is:  my user wants to disconnect a client's internet account.  The user should click once on the \"Disconnect\" button, then once on the confirm dialog.  With focus on the OK button, they only need click once, then hit enter once.\n\nI realize not everyone will have this use case, which is why I suggested making this an option, not changing the default setup.\n. @fabien-d The innocuous nature of the enter key to non-savvy users is part of the issue.  My desire is to have the confirm box be a double-check for the action.  I want the user to think \"Yes, I want to take this action\".  Clicking the button ensures they've made that thought.  They might not think hitting enter means they want to do the action.\n\nIf I can get this newfangled Github thing figured out, I'll submit a pull request - I don't think this feature should contribute to bloat at all.\n. PR sent\n. I'm having trouble figuring out how to write a test for this.  \n\nI want to find out what the focused element is, but `document.activeElement` is referencing the document body, not the focused button.  If I explicitly call `document.getElementById('alertify-ok').focus();` first, then `document.activeElement`references the expected element.  \n\nI don't understand why .focus() in the library isn't having the same effect.\n\n_Update_\nI think QUnit might be buggering something up.  This code works as expected and outputs \"A\" (the focused element's tag name) to the console: http://jsfiddle.net/t4eRJ/\n\nThis test writes \"BODY\" to the console.\n\n``` javascript\ntest(\"default OK\", function(){\n    expect(1);\n\n    alertify.confirm(\"Test\");\n    this.ok     = document.getElementById(\"alertify-ok\");\n    this.cancel = document.getElementById(\"alertify-cancel\");\n\n    console.log(document.activeElement.tagName);\n\n    equal(document.activeElement,this.ok,'OK focused');\n});\n```\n. I'll merge once I've figured out how to get the /lib/ files generated.\n\nAs far as the focus goes, the whole point of setting the focus to neither button is to remove the possibility for someone to inadvertently hit the enter button.  So having no focus is kind of the point.\n\nWith that said, if the user tabs the button into focus, they're obviously making a conscious effort, so the button wouldn't be accidentally triggered in that case.  However, I'm unable to tab the button into focus, even when using the original library code (ie, the OK button gets focused by default, then I hit tab a bunch, but the OK button never regains focus).\n. Good point - duh.  I was testing in Firefox, Chrome didn't have the problem.\n\nI see there's an #alertify-resetFocus element that gets added to the end of .alertify-dialog.  Is there a reason it's at the end, or could we put it at the beginning of the dialog and focus that?\n\nI have changed the wording of the buttons.  My personal concern is not that my clients will be confused as to what will happen when the button is clicked, but that they might hit [Enter] without realizing it will execute the highlighted action (I'm not working with completely savvy clients).\n. Hmm, then ya - the only solutions I can think of are:\n\n1) As you suggested create a blank <a> at the beginning of the dialog when the option is set to \"none\"\n2) Give focus to the last focusable element on the page before the dialog.\n\n#2 would be tricky because there's no easy way to query the page for focusable elements.  One could use `document.querySelectorAll('a,input,button,select,textarea')` and focus on the last element, but that requires IE8+\n\nI just updated my commit/PR with code that does #1.  It only adds 2 more lines.\n. Crap, yes I did remove the wrong file.  Everything should be up-to-date now (except lib/*, I'll get to that when I have a lull in my work)\n. I believe I have done all that now.\n. Sorry, I tried to squash my commits, but I'm new to actually Git, so I don't think my rebase worked.  Do I have to send a new PR with my now merged master branch?\n. Again..., I'm new - by \"pull your master\", do you want me to clone your 0.4.0 branch, then merge my master into that newly cloned branch?\n. Maybe it's just that I'm really new at Git, but this seems like a lot of work just to submit a simple patch.  At this point I've spent more time figuring out (unsuccessfully) how to work with Git than writing actual code.  If you want to accept this PR, cool.  If not, I've got a copy of the source that's working for my needs and I'll just leave it at that.\n. Done.  I saw the extra /> again, but neglected to process that the / shouldn't be there.\n. I have no problem tweaking code to fit formatting preferences.  It makes perfect sense.  I was just getting frustrated with the seemingly arcane knowledge that was seemingly required to make a seemingly simple commit.  Or so it seemed.\n. @fabien-d I guess I just view \"clicking the button\" as a more intentional action than hitting enter.  For less savvy users (of which I have many), it is not completely obvious that hitting enter will confirm the action, whereas clicking the button is very clear.\n\nMy use case is:  my user wants to disconnect a client's internet account.  The user should click once on the \"Disconnect\" button, then once on the confirm dialog.  With focus on the OK button, they only need click once, then hit enter once.\n\nI realize not everyone will have this use case, which is why I suggested making this an option, not changing the default setup.\n. @fabien-d The innocuous nature of the enter key to non-savvy users is part of the issue.  My desire is to have the confirm box be a double-check for the action.  I want the user to think \"Yes, I want to take this action\".  Clicking the button ensures they've made that thought.  They might not think hitting enter means they want to do the action.\n\nIf I can get this newfangled Github thing figured out, I'll submit a pull request - I don't think this feature should contribute to bloat at all.\n. PR sent\n. I'm having trouble figuring out how to write a test for this.  \n\nI want to find out what the focused element is, but `document.activeElement` is referencing the document body, not the focused button.  If I explicitly call `document.getElementById('alertify-ok').focus();` first, then `document.activeElement`references the expected element.  \n\nI don't understand why .focus() in the library isn't having the same effect.\n\n_Update_\nI think QUnit might be buggering something up.  This code works as expected and outputs \"A\" (the focused element's tag name) to the console: http://jsfiddle.net/t4eRJ/\n\nThis test writes \"BODY\" to the console.\n\n``` javascript\ntest(\"default OK\", function(){\n    expect(1);\n\n    alertify.confirm(\"Test\");\n    this.ok     = document.getElementById(\"alertify-ok\");\n    this.cancel = document.getElementById(\"alertify-cancel\");\n\n    console.log(document.activeElement.tagName);\n\n    equal(document.activeElement,this.ok,'OK focused');\n});\n```\n. I'll merge once I've figured out how to get the /lib/ files generated.\n\nAs far as the focus goes, the whole point of setting the focus to neither button is to remove the possibility for someone to inadvertently hit the enter button.  So having no focus is kind of the point.\n\nWith that said, if the user tabs the button into focus, they're obviously making a conscious effort, so the button wouldn't be accidentally triggered in that case.  However, I'm unable to tab the button into focus, even when using the original library code (ie, the OK button gets focused by default, then I hit tab a bunch, but the OK button never regains focus).\n. Good point - duh.  I was testing in Firefox, Chrome didn't have the problem.\n\nI see there's an #alertify-resetFocus element that gets added to the end of .alertify-dialog.  Is there a reason it's at the end, or could we put it at the beginning of the dialog and focus that?\n\nI have changed the wording of the buttons.  My personal concern is not that my clients will be confused as to what will happen when the button is clicked, but that they might hit [Enter] without realizing it will execute the highlighted action (I'm not working with completely savvy clients).\n. Hmm, then ya - the only solutions I can think of are:\n\n1) As you suggested create a blank <a> at the beginning of the dialog when the option is set to \"none\"\n2) Give focus to the last focusable element on the page before the dialog.\n\n#2 would be tricky because there's no easy way to query the page for focusable elements.  One could use `document.querySelectorAll('a,input,button,select,textarea')` and focus on the last element, but that requires IE8+\n\nI just updated my commit/PR with code that does #1.  It only adds 2 more lines.\n. Crap, yes I did remove the wrong file.  Everything should be up-to-date now (except lib/*, I'll get to that when I have a lull in my work)\n. I believe I have done all that now.\n. Sorry, I tried to squash my commits, but I'm new to actually Git, so I don't think my rebase worked.  Do I have to send a new PR with my now merged master branch?\n. Again..., I'm new - by \"pull your master\", do you want me to clone your 0.4.0 branch, then merge my master into that newly cloned branch?\n. Maybe it's just that I'm really new at Git, but this seems like a lot of work just to submit a simple patch.  At this point I've spent more time figuring out (unsuccessfully) how to work with Git than writing actual code.  If you want to accept this PR, cool.  If not, I've got a copy of the source that's working for my needs and I'll just leave it at that.\n. Done.  I saw the extra /> again, but neglected to process that the / shouldn't be there.\n. I have no problem tweaking code to fit formatting preferences.  It makes perfect sense.  I was just getting frustrated with the seemingly arcane knowledge that was seemingly required to make a seemingly simple commit.  Or so it seemed.\n. ",
    "dparlevliet": "I would agree that having it optional, with defaulted to on would be useful in some situations. But I'd encourage an alternative prompt box instead. We all have this need from time-to-time to alert people of dangerous actions so maybe a keyword repeater prompt would be good to include in alertify?\n\nFor instance, in this case, you could have an alert box come up with the message, but the confirm button is disabled until the keyword \"Disconnect\" (case insensitive, of course) has been typed in.\n\nJust throwing it out there.\n. I agree about not including optional extras as part of the core so I agree a extension library would be best. If nothing is set up by the time I get to the area of my project that needs those sorts of extensions then I will submit a PR to get you started. Also, I also second the PR sent by @quasipickle. Having that option would be good.\n. Alertify doesn't rely on jQuery.\n\n_answer will always be undefined in this code. _answer will be the result of whatever is returned from your prompt function.\n\n```\nwindow.prompt = function() { ... }\n```\n\nWhich, in your case is nothing. Hence, undefined. I do not believe you can use alertify for the functionality that you are looking for in this instance because the very nature of JavaScript is non-blocking. However, Since you're using jQuery I recommend (actually I recommend other things, but this will do) using a bind which will achieve something close to it.\n\n```\n<html>\n  <head>\n    <title></title>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/js/plugins/alertify/themes/alertify.css\">\n  </head>\n  <body>\n    <script type=\"text/javascript\" src=\"/js/plugins/jquery.min.js\"></script>\n    <script type=\"text/javascript\" src=\"/js/plugins/alertify/lib/alertify.js\"></script>\n    <script type=\"text/javascript\">\n      var _oldprompt = window.prompt;\n      window.prompt = function() {\n        var _message ;\n        var _position ;\n\n        _message = arguments[0] ;\n        alertify.prompt(_message, function(e, str) {\n          $(document).trigger('prompt_callback', (e) ? str : null);\n        });\n      };\n      prompt(\"What's your favorite color ?\");\n      $(document).one('prompt_callback', function(e, answer) {\n        console.log(answer);\n        prompt(\"Really, you like \"+answer+\"?\");\n        $(document).one('prompt_callback', function(e, answer) {\n          alertify.log('OK! Werido.');\n        });\n      });\n    </script>\n  </body>\n</html>\n```\n\nNote: the use of one() and not on(), this will help ensure your binds don't overlap.\n\n###### Example for keeping yourself inside an object.\n\n```\n<script type=\"text/javascript\">\n  var _oldprompt = window.prompt;\n  window.prompt = function() {\n    var _message ;\n    var _position ;\n\n    _message = arguments[0] ;\n    alertify.prompt(_message, function(e, str) {\n      $(document).trigger('prompt_callback', (e) ? str : null);\n    });\n  };\n  object = {\n    initialize: function() {\n      prompt(\"What's your favorite color ?\");\n      $(document).one('prompt_callback', this, this.callback);\n    },\n    callback: function(e, answer) {\n      self = e.data;\n      console.log(e, self, answer);\n      prompt(\"Really, you like \"+answer+\"?\");\n      $(document).one('prompt_callback', self, self.callback2);\n    },\n    callback2: function(e, answer) {\n      alertify.log('OK! Weirdo.');\n    }\n  }\n  object.initialize();\n</script>\n```\n. It's not possible. JavaScript is non-blocking by design. Also you could extend the code above to pass a callback, which would greatly minimize the amount of code you would have to change in your project. \n\nMaybe some more investigation is necessary before passing up on it completely.\n. Just to follow up on this for anyone else that might stumble across it and want to achieve the same thing. If you're using underscore with something like Backbone and you want to be able to get back inside your object to do more events, this is an example of how you can achieve this.\n\n```\nwindow.confirm = function (message, callback) {\n  alertify.confirm(message, callback)\n}\n\nvar myobj = {\n  method: function() {\n     confirm('Are you sure?', _.bind(function(choice) {\n        if (choice)\n          this.follow_up_method();\n      }, this));\n  },\n  follow_up_method: function(e) {\n\n  }\n};\n```\n. I would agree that having it optional, with defaulted to on would be useful in some situations. But I'd encourage an alternative prompt box instead. We all have this need from time-to-time to alert people of dangerous actions so maybe a keyword repeater prompt would be good to include in alertify?\n\nFor instance, in this case, you could have an alert box come up with the message, but the confirm button is disabled until the keyword \"Disconnect\" (case insensitive, of course) has been typed in.\n\nJust throwing it out there.\n. I agree about not including optional extras as part of the core so I agree a extension library would be best. If nothing is set up by the time I get to the area of my project that needs those sorts of extensions then I will submit a PR to get you started. Also, I also second the PR sent by @quasipickle. Having that option would be good.\n. Alertify doesn't rely on jQuery.\n\n_answer will always be undefined in this code. _answer will be the result of whatever is returned from your prompt function.\n\n```\nwindow.prompt = function() { ... }\n```\n\nWhich, in your case is nothing. Hence, undefined. I do not believe you can use alertify for the functionality that you are looking for in this instance because the very nature of JavaScript is non-blocking. However, Since you're using jQuery I recommend (actually I recommend other things, but this will do) using a bind which will achieve something close to it.\n\n```\n<html>\n  <head>\n    <title></title>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/js/plugins/alertify/themes/alertify.css\">\n  </head>\n  <body>\n    <script type=\"text/javascript\" src=\"/js/plugins/jquery.min.js\"></script>\n    <script type=\"text/javascript\" src=\"/js/plugins/alertify/lib/alertify.js\"></script>\n    <script type=\"text/javascript\">\n      var _oldprompt = window.prompt;\n      window.prompt = function() {\n        var _message ;\n        var _position ;\n\n        _message = arguments[0] ;\n        alertify.prompt(_message, function(e, str) {\n          $(document).trigger('prompt_callback', (e) ? str : null);\n        });\n      };\n      prompt(\"What's your favorite color ?\");\n      $(document).one('prompt_callback', function(e, answer) {\n        console.log(answer);\n        prompt(\"Really, you like \"+answer+\"?\");\n        $(document).one('prompt_callback', function(e, answer) {\n          alertify.log('OK! Werido.');\n        });\n      });\n    </script>\n  </body>\n</html>\n```\n\nNote: the use of one() and not on(), this will help ensure your binds don't overlap.\n\n###### Example for keeping yourself inside an object.\n\n```\n<script type=\"text/javascript\">\n  var _oldprompt = window.prompt;\n  window.prompt = function() {\n    var _message ;\n    var _position ;\n\n    _message = arguments[0] ;\n    alertify.prompt(_message, function(e, str) {\n      $(document).trigger('prompt_callback', (e) ? str : null);\n    });\n  };\n  object = {\n    initialize: function() {\n      prompt(\"What's your favorite color ?\");\n      $(document).one('prompt_callback', this, this.callback);\n    },\n    callback: function(e, answer) {\n      self = e.data;\n      console.log(e, self, answer);\n      prompt(\"Really, you like \"+answer+\"?\");\n      $(document).one('prompt_callback', self, self.callback2);\n    },\n    callback2: function(e, answer) {\n      alertify.log('OK! Weirdo.');\n    }\n  }\n  object.initialize();\n</script>\n```\n. It's not possible. JavaScript is non-blocking by design. Also you could extend the code above to pass a callback, which would greatly minimize the amount of code you would have to change in your project. \n\nMaybe some more investigation is necessary before passing up on it completely.\n. Just to follow up on this for anyone else that might stumble across it and want to achieve the same thing. If you're using underscore with something like Backbone and you want to be able to get back inside your object to do more events, this is an example of how you can achieve this.\n\n```\nwindow.confirm = function (message, callback) {\n  alertify.confirm(message, callback)\n}\n\nvar myobj = {\n  method: function() {\n     confirm('Are you sure?', _.bind(function(choice) {\n        if (choice)\n          this.follow_up_method();\n      }, this));\n  },\n  follow_up_method: function(e) {\n\n  }\n};\n```\n. ",
    "aexmachina": "This is related to my [other issue](https://github.com/fabien-d/alertify.js/issues/88#issuecomment-12180024). My use case is this:\n1. User clicks a button that triggers a process that can take a number of seconds.\n2. The system shows a notification that the operation is in progress\n3. When the operation is completed the first notification is closed and another notification is displayed to indicate the outcome\n\nThere's two things I'd like to do here that I can't using the current API:\n1. Use Spin.js to display a progress indicator, but this requires a DOM element to attach itself to and I can't get this from the Alertify API\n2. Close the first notification when the operation completes\n. My suggestion would be to support chaining through the `Alertify` global, which internally uses an OO `Alertify` prototype. Then for this scenario API users could use `Aleritfy.create()` or `new Alertify()` then have access to instance-specific operations. This Alertify prototyp coule expose the DOM element through a method or a property (ie. .element(), .el, .getElement() etc.) and have a .close() method.\n\n```\nfunction() {\n  Alertify = function() {...}\n  Alertify.prototype = {\n    el: null,\n    alert: function() {\n      ...\n      return global;\n    }, \n    close: function() {...}\n  }\n  return global = {\n    alert: function() {\n      return new Alertify().alert();\n    },\n    ...\n    create: function() {\n      return new Alertify();\n    }\n  }\n}\n\nAlertify.alert('Hello world')\nvar obj = Alertify.create();\nobj.alert('Hello world')\nnew Spinner().spin(obj.el)\nobj.close();  \n```\n. I'm not against code separation, but the build process should be optional IMO. One of the things I like about Alertify was that I could bring it in using bower and it worked straight away. So I think that adding the .create() method (or whatever it's called) and, if you do decide to modularise, then include a full build including both dialogs and log messages in the repo.\n. Okay, sounds great!\n\nCheers,\n\nSimon\n\nOn 17 January 2013 02:30, Fabien Doiron notifications@github.com wrote:\n\n> The custom build would be optional - similar to Modernizrhttp://modernizr.com/download/\n> .\n> \n> Bower would still pull in the full core library (no extension). The custom\n> build option would simply be available for extensions that shouldn't be in\n> the core library, but could be useful to some.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/89#issuecomment-12323364.\n. This is related to my [other issue](https://github.com/fabien-d/alertify.js/issues/88#issuecomment-12180024). My use case is this:\n1. User clicks a button that triggers a process that can take a number of seconds.\n2. The system shows a notification that the operation is in progress\n3. When the operation is completed the first notification is closed and another notification is displayed to indicate the outcome\n\nThere's two things I'd like to do here that I can't using the current API:\n1. Use Spin.js to display a progress indicator, but this requires a DOM element to attach itself to and I can't get this from the Alertify API\n2. Close the first notification when the operation completes\n. My suggestion would be to support chaining through the `Alertify` global, which internally uses an OO `Alertify` prototype. Then for this scenario API users could use `Aleritfy.create()` or `new Alertify()` then have access to instance-specific operations. This Alertify prototyp coule expose the DOM element through a method or a property (ie. .element(), .el, .getElement() etc.) and have a .close() method.\n\n```\nfunction() {\n  Alertify = function() {...}\n  Alertify.prototype = {\n    el: null,\n    alert: function() {\n      ...\n      return global;\n    }, \n    close: function() {...}\n  }\n  return global = {\n    alert: function() {\n      return new Alertify().alert();\n    },\n    ...\n    create: function() {\n      return new Alertify();\n    }\n  }\n}\n\nAlertify.alert('Hello world')\nvar obj = Alertify.create();\nobj.alert('Hello world')\nnew Spinner().spin(obj.el)\nobj.close();  \n```\n. I'm not against code separation, but the build process should be optional IMO. One of the things I like about Alertify was that I could bring it in using bower and it worked straight away. So I think that adding the .create() method (or whatever it's called) and, if you do decide to modularise, then include a full build including both dialogs and log messages in the repo.\n. Okay, sounds great!\n\nCheers,\n\nSimon\n\nOn 17 January 2013 02:30, Fabien Doiron notifications@github.com wrote:\n\n> The custom build would be optional - similar to Modernizrhttp://modernizr.com/download/\n> .\n> \n> Bower would still pull in the full core library (no extension). The custom\n> build option would simply be available for extensions that shouldn't be in\n> the core library, but could be useful to some.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/89#issuecomment-12323364.\n. ",
    "235": "I'm facing the same issue. I have to show a permanent alert, something like `alertify.log( \"Make some action to progress!\", \"custom\",0 )`, until a user will take some actions. Then my code has to close it.\n. I'm facing the same issue. I have to show a permanent alert, something like `alertify.log( \"Make some action to progress!\", \"custom\",0 )`, until a user will take some actions. Then my code has to close it.\n. ",
    "heston": "I like proposal 2, but only if it doesn't add too much complexity to the core. In my earlier request (#70), I proposed leaving the API more open, so it would be easy to subclass. Then it's a simple matter of overloading the pieces that should be custom. Alternatively, if Alertify were more modular, new instances could be be composed out of stock and custom components, mixin style (e.g. A renderer, various callbacks, etc.). The latter is not really a custom build, since every distribution would be the same, it's just how the pieces are assembled during object construction.\n. I like proposal 2, but only if it doesn't add too much complexity to the core. In my earlier request (#70), I proposed leaving the API more open, so it would be easy to subclass. Then it's a simple matter of overloading the pieces that should be custom. Alternatively, if Alertify were more modular, new instances could be be composed out of stock and custom components, mixin style (e.g. A renderer, various callbacks, etc.). The latter is not really a custom build, since every distribution would be the same, it's just how the pieces are assembled during object construction.\n. ",
    "Obiwan-Kennedy": "OK ! If my code is not wrong, it seems to be an issue, not a jQuery version problem.\nI have temporarily replaced my jQuery file with the lastest version. Same result, also encountered with the confirm dialog.\n. Hey guys,\n\nThanks for your answers.\n\nfabien-d, you got it ! (\u00ab You don't like writing alertify. everytime, or you wish to replace all existing native dialogs without changing any of the code base \u00bb)\n\ndparlevliet, thanks for your advice. I'll try it, but first I need to understand it in details !\nSo, I'll dive into it immediately. Hope I'll be able to return to surface and breathe rapidly. ;-)\n\nObiwan\n. OK ! If my code is not wrong, it seems to be an issue, not a jQuery version problem.\nI have temporarily replaced my jQuery file with the lastest version. Same result, also encountered with the confirm dialog.\n. Hey guys,\n\nThanks for your answers.\n\nfabien-d, you got it ! (\u00ab You don't like writing alertify. everytime, or you wish to replace all existing native dialogs without changing any of the code base \u00bb)\n\ndparlevliet, thanks for your advice. I'll try it, but first I need to understand it in details !\nSo, I'll dive into it immediately. Hope I'll be able to return to surface and breathe rapidly. ;-)\n\nObiwan\n. ",
    "pavanvusirika": "It would be very helpful if the prompt dialog is blocking by default.The problem is we can't replace the basic java script dialogs. If we wanted to do we need to write extra code like above every where, which is cumbersome.We were going to replace every prompt with alertify.js but because of this problem we dropped.Any way thanks.\n. It would be very helpful if the prompt dialog is blocking by default.The problem is we can't replace the basic java script dialogs. If we wanted to do we need to write extra code like above every where, which is cumbersome.We were going to replace every prompt with alertify.js but because of this problem we dropped.Any way thanks.\n. ",
    "myusuf3": "fixed! \n. fixed! \n. ",
    "kyleknighted": "I tried using the `alertify.error(data.name + ' has disconnected!', 5000);` method, but that's not working either.\nI'm assuming there is a conflict with my other micro-libs I am using.\n\nI followed the URL you linked to, but I do not see an interactive console for me to paste anything into. But your example Log messages at the bottom work as expected.\n. Ah, that console. Sorry. I was thinking you had some type of interactive \nconsole on the website...\n\nI realized it wasn't the JavaScripts fault.\nI didn't update to the newer CSS. So, none of the transitions were firing.\n\nThanks for the help!\n\nFabien Doiron wrote:\n\n> If you're using chrome.. you can hit |cmd+alt+j| to pull up the\n> console or View > Developer > JavaScript Console. You'll be able to\n> use the console there.\n> \n> But it does sound like a conflict... if you have a hard time\n> debugging, you can post (or send me a DM) with more code, I can take a\n> look.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/fabien-d/alertify.js/issues/103#issuecomment-12329925. \n. I tried using the `alertify.error(data.name + ' has disconnected!', 5000);` method, but that's not working either.\nI'm assuming there is a conflict with my other micro-libs I am using.\n\nI followed the URL you linked to, but I do not see an interactive console for me to paste anything into. But your example Log messages at the bottom work as expected.\n. Ah, that console. Sorry. I was thinking you had some type of interactive \nconsole on the website...\n\nI realized it wasn't the JavaScripts fault.\nI didn't update to the newer CSS. So, none of the transitions were firing.\n\nThanks for the help!\n\nFabien Doiron wrote:\n\n> If you're using chrome.. you can hit |cmd+alt+j| to pull up the\n> console or View > Developer > JavaScript Console. You'll be able to\n> use the console there.\n> \n> But it does sound like a conflict... if you have a hard time\n> debugging, you can post (or send me a DM) with more code, I can take a\n> look.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/fabien-d/alertify.js/issues/103#issuecomment-12329925. \n. ",
    "polm": "Thanks for your reply; I'm not at the machine with the code right now, but I did check to make sure that it wasn't happening due to an exception. On Monday I'll confirm the version and make something reproducible. \n\nOne thing I noticed reading documentation is that in IE9 events do have a preventDefault method, but only if you have a `strict` doctype. Whether or not they have the preventDefault, they don't always respect a `return false` (see [search results](https://www.google.co.jp/search?q=ie+ignores+return+false)). \n\nI like your code, but note that `event` there is `window.event`, which is not necessarily the argument to the onClick handler. \n. I checked and I had been using `0.3.0`. Updated it to `0.4.0` and the problem went away. Sorry for the noise!\n. Thanks for your reply; I'm not at the machine with the code right now, but I did check to make sure that it wasn't happening due to an exception. On Monday I'll confirm the version and make something reproducible. \n\nOne thing I noticed reading documentation is that in IE9 events do have a preventDefault method, but only if you have a `strict` doctype. Whether or not they have the preventDefault, they don't always respect a `return false` (see [search results](https://www.google.co.jp/search?q=ie+ignores+return+false)). \n\nI like your code, but note that `event` there is `window.event`, which is not necessarily the argument to the onClick handler. \n. I checked and I had been using `0.3.0`. Updated it to `0.4.0` and the problem went away. Sorry for the noise!\n. ",
    "jduval": "I didn't express myself as I meant to. Your great plugin works very well ;) no JS error.\n\nBut if user click a lot of time on submit button, it's like it:\n![alertify](https://f.cloud.github.com/assets/1597299/93060/147495c8-660b-11e2-8a67-7a37347cf0e7.jpg)\n\nSo my question is : can I stop error's display if there is already the same one on screen?\n. yep... that was I suppose... maybe I missed something in params... but ok.\n\nthanks for your ans and your great app!\n\ncheers!\n. I didn't express myself as I meant to. Your great plugin works very well ;) no JS error.\n\nBut if user click a lot of time on submit button, it's like it:\n![alertify](https://f.cloud.github.com/assets/1597299/93060/147495c8-660b-11e2-8a67-7a37347cf0e7.jpg)\n\nSo my question is : can I stop error's display if there is already the same one on screen?\n. yep... that was I suppose... maybe I missed something in params... but ok.\n\nthanks for your ans and your great app!\n\ncheers!\n. ",
    "svrabl": "if($('.alertify-log').length > 0){\n    $('.alertify-log').css('display', 'none');\n}\nalertify.log(\"New message\");\n. if($('.alertify-log').length > 0){\n    $('.alertify-log').css('display', 'none');\n}\nalertify.log(\"New message\");\n. ",
    "trante": "That would be very beneficial. I need this too.\n. That would be very beneficial. I need this too.\n. ",
    "psk11": "Thanks a lot fabien\n. Thanks a lot fabien\n. ",
    "jphellemons": "Thank you for the CSS https://github.com/fabien-d/alertify.js/issues/112#issuecomment-12943549 saved me some time :+1: \n. Thank you for the CSS https://github.com/fabien-d/alertify.js/issues/112#issuecomment-12943549 saved me some time :+1: \n. ",
    "Martinho0330": "alertify.set({ delay: 10000 });\nGratitude for your masterpiece, but I wonder if the \"Notification\" holding 10 seconds  could be an active decounting animation?   Grateful for your reply... \n. @fabien-d  Er,,,I mean When I set up a 10s delay log message dialog, it will hide after 10 seconds passes, but during this 10 seconds, could I make the amount 10 decrease from 10 to 1 as a Timer ?\n. @fabien-d Sorry to bother you at such a early morning, I've forgotten that you were in the EST area....\n. @fabien-d I see. Thanks a lot for your kindness.\n. alertify.set({ delay: 10000 });\nGratitude for your masterpiece, but I wonder if the \"Notification\" holding 10 seconds  could be an active decounting animation?   Grateful for your reply... \n. @fabien-d  Er,,,I mean When I set up a 10s delay log message dialog, it will hide after 10 seconds passes, but during this 10 seconds, could I make the amount 10 decrease from 10 to 1 as a Timer ?\n. @fabien-d Sorry to bother you at such a early morning, I've forgotten that you were in the EST area....\n. @fabien-d I see. Thanks a lot for your kindness.\n. ",
    "vkelman": "Pretty stupid reason: we have a big \"legacy\" web site which was designed\nfor earlier versions of IE and doesn't want to work correctly in a standard\nmode of modern IE. Yes, we should update it, but we don't have enough\nresources.\n\nVladimir Kelman\nhttp://www.google.com/profiles/vkelman\n\nOn Wed, Feb 27, 2013 at 4:59 PM, Fabien Doiron notifications@github.comwrote:\n\n> I'll have investigate this one. I'm currently away at a conference but\n> will take a look when I get back.\n> \n> Any reason why you're running compatibility mode? Just curious!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/126#issuecomment-14202923\n> .\n. Fabien,\n\nThank you, I really appreciate your responsiveness. Forgive my ignorance,\nI'm not familiar enough with GitHub, but can I simply download ver. 0.4.0\nor should I somehow Clone etc. ?\n\nVladimir Kelman\nhttp://www.google.com/profiles/vkelman\n\nOn Thu, Feb 28, 2013 at 1:25 PM, Fabien Doiron notifications@github.comwrote:\n\n> I just tested the 0.4.0 release candidate version - tag 0.4.0rc1 and it\n> works. I'll sort out what the differences are between the 2 and get a fix\n> in for the 0.3.\\* stable release. 0.3.\\* will be deprecated shortly as\n> 0.4.0 approaches.\n> \n> [image: Compatibility0 4 0rc1]https://f.cloud.github.com/assets/747616/206580/0e9483cc-81d4-11e2-8f23-3c1e3db7f250.png\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/126#issuecomment-14248502\n> .\n. Pretty stupid reason: we have a big \"legacy\" web site which was designed\nfor earlier versions of IE and doesn't want to work correctly in a standard\nmode of modern IE. Yes, we should update it, but we don't have enough\nresources.\n\nVladimir Kelman\nhttp://www.google.com/profiles/vkelman\n\nOn Wed, Feb 27, 2013 at 4:59 PM, Fabien Doiron notifications@github.comwrote:\n\n> I'll have investigate this one. I'm currently away at a conference but\n> will take a look when I get back.\n> \n> Any reason why you're running compatibility mode? Just curious!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/126#issuecomment-14202923\n> .\n. Fabien,\n\nThank you, I really appreciate your responsiveness. Forgive my ignorance,\nI'm not familiar enough with GitHub, but can I simply download ver. 0.4.0\nor should I somehow Clone etc. ?\n\nVladimir Kelman\nhttp://www.google.com/profiles/vkelman\n\nOn Thu, Feb 28, 2013 at 1:25 PM, Fabien Doiron notifications@github.comwrote:\n\n> I just tested the 0.4.0 release candidate version - tag 0.4.0rc1 and it\n> works. I'll sort out what the differences are between the 2 and get a fix\n> in for the 0.3.\\* stable release. 0.3.\\* will be deprecated shortly as\n> 0.4.0 approaches.\n> \n> [image: Compatibility0 4 0rc1]https://f.cloud.github.com/assets/747616/206580/0e9483cc-81d4-11e2-8f23-3c1e3db7f250.png\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/126#issuecomment-14248502\n> .\n. ",
    "diviti": "Hi. Had a similar problem on 0.3.10. Also legacy code ... ;) Alertify bar was positioned on the left side, buttons not visible. <!doctype html> was missing before <html> tag. Including it in doc resolved problem ...\n. Hi. Had a similar problem on 0.3.10. Also legacy code ... ;) Alertify bar was positioned on the left side, buttons not visible. <!doctype html> was missing before <html> tag. Including it in doc resolved problem ...\n. ",
    "janroesner": "In my case it is `Alertify`, cause I require alertify via require.js and `Alertify` is the objects name inside my closure. But that does not cause the problem, I tested it already.\n\nThe example site hangs my Browser as well as my application does. BUT only as I mentioned above on iPad first generation. The funny thing here is, it hangs Safari mobile and Chrome mobile in latest releases, so I assume, it's related to the device itself. Unfortunately I expect a good number of users still having an iPad first generation.\n. Thank you, meanwhile I'll try to debug it using 'weinre'.\n. No result so far. The rendering engine seems to hang, real debugging is not possible using weinre. I am going out of options here. Any suggestions?\n. `0.4.0rc1` works pretty well on my iPad 1st gen. What I understood so far, is, that `0.4.0` seems to enqueue the first item cleanly. After confirming or canceling the cover is set to display: none. When the next confirm message is created, the relevant item is queued, but the item not rendered. In fact the cover is activated. That's the reason why I was not able to click anything. The browser still ran, but all click events went to the cover. I did not yet find out, what caused the problem, so I'm really interested in your finding. Love the codebase btw, great work.\n. @fabien-d It works like a charme. I tested `alert`, `confirm` and `prompt`. Transitions are missing, but thats IMHO fine. Everything else seems to work fine as well. Thx. \n. In my case it is `Alertify`, cause I require alertify via require.js and `Alertify` is the objects name inside my closure. But that does not cause the problem, I tested it already.\n\nThe example site hangs my Browser as well as my application does. BUT only as I mentioned above on iPad first generation. The funny thing here is, it hangs Safari mobile and Chrome mobile in latest releases, so I assume, it's related to the device itself. Unfortunately I expect a good number of users still having an iPad first generation.\n. Thank you, meanwhile I'll try to debug it using 'weinre'.\n. No result so far. The rendering engine seems to hang, real debugging is not possible using weinre. I am going out of options here. Any suggestions?\n. `0.4.0rc1` works pretty well on my iPad 1st gen. What I understood so far, is, that `0.4.0` seems to enqueue the first item cleanly. After confirming or canceling the cover is set to display: none. When the next confirm message is created, the relevant item is queued, but the item not rendered. In fact the cover is activated. That's the reason why I was not able to click anything. The browser still ran, but all click events went to the cover. I did not yet find out, what caused the problem, so I'm really interested in your finding. Love the codebase btw, great work.\n. @fabien-d It works like a charme. I tested `alert`, `confirm` and `prompt`. Transitions are missing, but thats IMHO fine. Everything else seems to work fine as well. Thx. \n. ",
    "georaldc": "If you're talking about the stacking messages, I believe that is its normal behavior\n. If you're talking about the stacking messages, I believe that is its normal behavior\n. ",
    "ProPheT777": "I have tried to repeat the bug on jsFiddle, impossible. And i have found the issue (on my side), some js code before this make this behaviour.\n\n@georaldc nope, when i triggered the event, that stack 4 messages box in same time. In normal case it's one event trigerred equal one message.\n\nSo it's not a bug.\n. I have tried to repeat the bug on jsFiddle, impossible. And i have found the issue (on my side), some js code before this make this behaviour.\n\n@georaldc nope, when i triggered the event, that stack 4 messages box in same time. In normal case it's one event trigerred equal one message.\n\nSo it's not a bug.\n. ",
    "froehr": "Works well.\n\nThank you.\n. Works well.\n\nThank you.\n. ",
    "eilders": "Appreciate the quick response and workaround.\n\nApologize for the duplicate.\n. Appreciate the quick response and workaround.\n\nApologize for the duplicate.\n. ",
    "jheliker": "I am a new user of Alertify. I love it! Wanted to update the above CSS, as the opacity setting is not cross-browser compatible and won't work for partial opacity. Here is the class I am using, with 65% opacity:\n\n.alertify-cover {\n  position: fixed; z-index: 99999;\n  top: 0; right: 0; bottom: 0; left: 0;\n  background-color: white;\n    /\\* IE 8 _/\n  -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=65)\";\n  /_ IE 5-7 _/\n  filter: alpha(opacity=65);\n  /_ Netscape _/\n  -moz-opacity: 0.65;\n  /_ Safari 1.x _/\n  -khtml-opacity: 0.65;\n  /_ Good browsers */\n  opacity: 0.65;\n}\n\nThanks to friends @ http://css-tricks.com/snippets/css/cross-browser-opacity/ for the browser opacity compatibility information.\n. I am a new user of Alertify. I love it! Wanted to update the above CSS, as the opacity setting is not cross-browser compatible and won't work for partial opacity. Here is the class I am using, with 65% opacity:\n\n.alertify-cover {\n  position: fixed; z-index: 99999;\n  top: 0; right: 0; bottom: 0; left: 0;\n  background-color: white;\n    /\\* IE 8 _/\n  -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=65)\";\n  /_ IE 5-7 _/\n  filter: alpha(opacity=65);\n  /_ Netscape _/\n  -moz-opacity: 0.65;\n  /_ Safari 1.x _/\n  -khtml-opacity: 0.65;\n  /_ Good browsers */\n  opacity: 0.65;\n}\n\nThanks to friends @ http://css-tricks.com/snippets/css/cross-browser-opacity/ for the browser opacity compatibility information.\n. ",
    "AboOmar": "o.k, thanks my friend\n\n![image](https://f.cloud.github.com/assets/1265037/677796/57c700fe-d924-11e2-8f49-693499f807c5.png)\n\nas you can see in this screenshot, when I clicked the button cancel, this little pop-up comes from top to down with little cool sliding animation, ask me to cancel or not.\n\nSo what do you think of initializing the plugin on specific DOM element, after that the pop-up appears on top of or bottom from the clicked element with a cool sliding animation :+1: \n\nAnother issue, I am actually didn't remember itis implemented or not with alertify confirm, is to alow me disable any interaction on my screen elements through event or something like that, because the message appears but I can still click any element on the page.\n\nThanks :)\n. o.k, thanks my friend\n\n![image](https://f.cloud.github.com/assets/1265037/677796/57c700fe-d924-11e2-8f49-693499f807c5.png)\n\nas you can see in this screenshot, when I clicked the button cancel, this little pop-up comes from top to down with little cool sliding animation, ask me to cancel or not.\n\nSo what do you think of initializing the plugin on specific DOM element, after that the pop-up appears on top of or bottom from the clicked element with a cool sliding animation :+1: \n\nAnother issue, I am actually didn't remember itis implemented or not with alertify confirm, is to alow me disable any interaction on my screen elements through event or something like that, because the message appears but I can still click any element on the page.\n\nThanks :)\n. ",
    "EmmanuelVella": "Same issue here with Chrome 34.0.1847.116. This seems to happen when notifications are created when the website tab is not visible.\n. Same issue here with Chrome 34.0.1847.116. This seems to happen when notifications are created when the website tab is not visible.\n. ",
    "gouthamsworld": "It worked thanks !!!\nBut the button click event on the server side is not being fired after clicking OK though the form is being submitted\n.\n\n  $(function () {\n\n```\n        $(\"#Button1\").on(\"click\", function () {\n            alertify.confirm(\"This is an alert dialog\", function (e) {\n\n                if (e) {\n                    $('#form1').submit();\n\n                } else {\n                    return false;\n                }\n            });\n            return false;\n        });\n\n\n\n    });\n```\n. $(function () {\n\n```\n    $(\"#Button1\").on(\"click\", function () {\n        alertify.confirm(\"This is an alert dialog\", function (e) {\n\n            if (e) {\n                $('#form1').submit();\n\n            } else {\n                return false;\n            }\n        });\n        return false;\n    });\n\n\n\n});\n```\n\non the server-side i have \n\nPublic Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click\n\n//Do something\n\nEnd Sub\n\nthis event is not being fired after i click OK on the alertify\n. It worked thanks !!!\nBut the button click event on the server side is not being fired after clicking OK though the form is being submitted\n.\n\n  $(function () {\n\n```\n        $(\"#Button1\").on(\"click\", function () {\n            alertify.confirm(\"This is an alert dialog\", function (e) {\n\n                if (e) {\n                    $('#form1').submit();\n\n                } else {\n                    return false;\n                }\n            });\n            return false;\n        });\n\n\n\n    });\n```\n. $(function () {\n\n```\n    $(\"#Button1\").on(\"click\", function () {\n        alertify.confirm(\"This is an alert dialog\", function (e) {\n\n            if (e) {\n                $('#form1').submit();\n\n            } else {\n                return false;\n            }\n        });\n        return false;\n    });\n\n\n\n});\n```\n\non the server-side i have \n\nPublic Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click\n\n//Do something\n\nEnd Sub\n\nthis event is not being fired after i click OK on the alertify\n. ",
    "virtualstyle": "Didn't see that ticket. Works like a charm. Thanks.\n. Didn't see that ticket. Works like a charm. Thanks.\n. ",
    "christatedavies": "Still can't get it to work.\n\nHere is a 'non' working example:\n\nhttp://jsfiddle.net/5HygY/3/\n\nOn 3 July 2013 13:31, Fabien Doiron notifications@github.com wrote:\n\n> This seems like it may be an event bubbling issue. I remember having\n> something similar with chaining alertify dialogs but has been fixed.\n> \n> Instead of using event.stopPropagation() try replacing it with\n> event.preventDefault() and/or a return false at the bottom of the\n> function.\n> \n> Since the .live() method handles events once they have propagated to the\n> top of the document, it is not possible to stop propagation of live events\n> \n> ^ from the jQuery docs. And the live() method simply calls the on()method.\n> \n> If that doesn't work - could you try providing a working demo?\n> \n> I've tried calling, on the docs page, an alert dialog after the confirm\n> without issues (w and w/o delay)\n> \n> alertify.confirm('test', function (e) {\n>     if (e) {\n>         setTimeout( function () { alertify.alert('blah'); }, 1000);\n>     } else {\n>         alertify.alert('cancel');\n>     }});\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/147#issuecomment-20412093\n> .\n. I can confirm it doesn't work with either the mouse or the keyboard.\n\nThe jsfiddle will show you it not working. I may have done something incorrect... The button on the jsfiddle is only clickable once, which is odd...\n. Would it be better if I upgraded to version 4? I think you said you fixed\nit in that?\n\nOn 3 July 2013 14:56, Fabien Doiron notifications@github.com wrote:\n\n> the clicking once is another issue - there is a temporary fix at issue\n> #138 https://github.com/fabien-d/alertify.js/issues/138.\n> \n> So there is a bug in the alertify code. In the hide method, I set isOpento false immediately and I believe since there is a small delay between the\n> ajax request and the next call, the new dialog gets confused for the\n> existing one and also closes.\n> \n> I'll have to dig a bit more and tweak some of the functionality around\n> this.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/147#issuecomment-20416659\n> .\n. I've just checked my non working demo and it seems to work fine now. A little bit strange as I am hosting the JS file myself and I haven't changed it.\n\nAnyway, it works, so I'm closing this issue.... Thanks for your help.\n. Still can't get it to work.\n\nHere is a 'non' working example:\n\nhttp://jsfiddle.net/5HygY/3/\n\nOn 3 July 2013 13:31, Fabien Doiron notifications@github.com wrote:\n\n> This seems like it may be an event bubbling issue. I remember having\n> something similar with chaining alertify dialogs but has been fixed.\n> \n> Instead of using event.stopPropagation() try replacing it with\n> event.preventDefault() and/or a return false at the bottom of the\n> function.\n> \n> Since the .live() method handles events once they have propagated to the\n> top of the document, it is not possible to stop propagation of live events\n> \n> ^ from the jQuery docs. And the live() method simply calls the on()method.\n> \n> If that doesn't work - could you try providing a working demo?\n> \n> I've tried calling, on the docs page, an alert dialog after the confirm\n> without issues (w and w/o delay)\n> \n> alertify.confirm('test', function (e) {\n>     if (e) {\n>         setTimeout( function () { alertify.alert('blah'); }, 1000);\n>     } else {\n>         alertify.alert('cancel');\n>     }});\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/147#issuecomment-20412093\n> .\n. I can confirm it doesn't work with either the mouse or the keyboard.\n\nThe jsfiddle will show you it not working. I may have done something incorrect... The button on the jsfiddle is only clickable once, which is odd...\n. Would it be better if I upgraded to version 4? I think you said you fixed\nit in that?\n\nOn 3 July 2013 14:56, Fabien Doiron notifications@github.com wrote:\n\n> the clicking once is another issue - there is a temporary fix at issue\n> #138 https://github.com/fabien-d/alertify.js/issues/138.\n> \n> So there is a bug in the alertify code. In the hide method, I set isOpento false immediately and I believe since there is a small delay between the\n> ajax request and the next call, the new dialog gets confused for the\n> existing one and also closes.\n> \n> I'll have to dig a bit more and tweak some of the functionality around\n> this.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/147#issuecomment-20416659\n> .\n. I've just checked my non working demo and it seems to work fine now. A little bit strange as I am hosting the JS file myself and I haven't changed it.\n\nAnyway, it works, so I'm closing this issue.... Thanks for your help.\n. ",
    "andrew-kzoo": "Composer is used for dependency management. [Composer](http://getcomposer.org/)'s `composer.json` is used in a manner similar to [bower](http://bower.io/)'s `bower.json` and [Node.js](http://nodejs.org/)'s `package.json` to define a package.\n\nIf you aren't using any of these tools there is no benefit for you. However, even so, by including any of these package definitions (`composer.json`, `bower,json`, or `package.json`) this project will get exposure to a wider audience.\n\nOthers can speak to using bower and Node.js, but I use Composer with the following `composer.json` to download dependencies (including [alertify.js](https://github.com/fabien-d/alertify.js)) for a small event scheduling application:\n\n``` json\n{\n  \"repositories\": [\n    {\n      \"type\": \"package\",\n      \"package\": {\n        \"name\": \"tinymce/tinymce\",\n        \"version\": \"4.0.1\",\n        \"dist\": {\n          \"url\": \"http://download.moxiecode.com/tinymce/tinymce_4.0.1.zip\",\n          \"type\": \"zip\"\n        }\n      }\n    },\n    {\n      \"type\": \"package\",\n      \"package\": {\n        \"name\": \"arshaw/fullcalendar\",\n        \"version\": \"1.6.1\",\n        \"dist\": {\n          \"url\": \"http://arshaw.com/fullcalendar/downloads/fullcalendar-1.6.1.zip\",\n          \"type\": \"zip\"\n        }\n      }\n    },\n    {\n      \"type\": \"package\",\n      \"package\": {\n        \"name\": \"fabien-d/alertify.js\",\n        \"version\": \"0.3.10\",\n        \"dist\": {\n          \"url\": \"https://github.com/fabien-d/alertify.js/archive/0.3.10.zip\",\n          \"type\": \"zip\"\n        }\n      }\n    }\n  ],\n  \"require\": {\n    \"components/jquery\": \"1.9.1\",\n    \"components/jqueryui\": \"1.10.3\",\n    \"tinymce/tinymce\": \"4.0.1\",\n    \"arshaw/fullcalendar\": \"1.6.1\",\n    \"fabien-d/alertify.js\": \"0.3.10\",\n    \"timrwood/moment\": \"dev-master\"\n  }\n}\n```\n\nAs can be seen it isn't necessary for a project to have a `composer.json` for it to be used with Composer. I can't give any argument which would directly benefit any non-user of Composer (or similarly, bower or Node.js) for including a package definition (`composer.json`, `bower.json`, or `package.json`).\n. Composer is used for dependency management. [Composer](http://getcomposer.org/)'s `composer.json` is used in a manner similar to [bower](http://bower.io/)'s `bower.json` and [Node.js](http://nodejs.org/)'s `package.json` to define a package.\n\nIf you aren't using any of these tools there is no benefit for you. However, even so, by including any of these package definitions (`composer.json`, `bower,json`, or `package.json`) this project will get exposure to a wider audience.\n\nOthers can speak to using bower and Node.js, but I use Composer with the following `composer.json` to download dependencies (including [alertify.js](https://github.com/fabien-d/alertify.js)) for a small event scheduling application:\n\n``` json\n{\n  \"repositories\": [\n    {\n      \"type\": \"package\",\n      \"package\": {\n        \"name\": \"tinymce/tinymce\",\n        \"version\": \"4.0.1\",\n        \"dist\": {\n          \"url\": \"http://download.moxiecode.com/tinymce/tinymce_4.0.1.zip\",\n          \"type\": \"zip\"\n        }\n      }\n    },\n    {\n      \"type\": \"package\",\n      \"package\": {\n        \"name\": \"arshaw/fullcalendar\",\n        \"version\": \"1.6.1\",\n        \"dist\": {\n          \"url\": \"http://arshaw.com/fullcalendar/downloads/fullcalendar-1.6.1.zip\",\n          \"type\": \"zip\"\n        }\n      }\n    },\n    {\n      \"type\": \"package\",\n      \"package\": {\n        \"name\": \"fabien-d/alertify.js\",\n        \"version\": \"0.3.10\",\n        \"dist\": {\n          \"url\": \"https://github.com/fabien-d/alertify.js/archive/0.3.10.zip\",\n          \"type\": \"zip\"\n        }\n      }\n    }\n  ],\n  \"require\": {\n    \"components/jquery\": \"1.9.1\",\n    \"components/jqueryui\": \"1.10.3\",\n    \"tinymce/tinymce\": \"4.0.1\",\n    \"arshaw/fullcalendar\": \"1.6.1\",\n    \"fabien-d/alertify.js\": \"0.3.10\",\n    \"timrwood/moment\": \"dev-master\"\n  }\n}\n```\n\nAs can be seen it isn't necessary for a project to have a `composer.json` for it to be used with Composer. I can't give any argument which would directly benefit any non-user of Composer (or similarly, bower or Node.js) for including a package definition (`composer.json`, `bower.json`, or `package.json`).\n. ",
    "flosell": "gave it another try: \n![image](https://f.cloud.github.com/assets/540525/759077/e5770416-e771-11e2-9c63-0d2e83d365f6.png)\n. Sorry, I committed the minified code, that obviously led to conflicts... \nCreated a new, clean pull-request: #155 \n. gave it another try: \n![image](https://f.cloud.github.com/assets/540525/759077/e5770416-e771-11e2-9c63-0d2e83d365f6.png)\n. Sorry, I committed the minified code, that obviously led to conflicts... \nCreated a new, clean pull-request: #155 \n. ",
    "devanddesign": "Yeah, you're right.  It works fine on the demo site so I must be doing something wrong.  I'll have to do some digging since there's a lot of functionality on my page but I just figured the simple alertify.confirm should work since there's not much to it.\n. Yeah, you're right.  It works fine on the demo site so I must be doing something wrong.  I'll have to do some digging since there's a lot of functionality on my page but I just figured the simple alertify.confirm should work since there's not much to it.\n. ",
    "dimorozov": "Thank you! Works great now!\n. Thank you! Works great now!\n. ",
    "lexoyo": "hello\nany news about this issue?\nthank you :)\n. great!!\nwill we be notified of the new version? on github?\n\nOn Tue, Oct 8, 2013 at 2:27 AM, Fabien Doiron notifications@github.comwrote:\n\n> Fixed with ^. Will be part of 0.3.11\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/163#issuecomment-25856646\n> .\n\n## \n\nAlex Hoyau\n+33 (0) 6 76 68 38 06\nhttp://lexoyo.me\nRecevoir les news de Silex Labs par mail\nhttp://eepurl.com/F48q5\n. Great, it works, thank you!\nI have included alertify.js in Silex\nhttps://github.com/silexlabs/Silex\n. hello\nany news about this issue?\nthank you :)\n. great!!\nwill we be notified of the new version? on github?\n\nOn Tue, Oct 8, 2013 at 2:27 AM, Fabien Doiron notifications@github.comwrote:\n\n> Fixed with ^. Will be part of 0.3.11\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/163#issuecomment-25856646\n> .\n\n## \n\nAlex Hoyau\n+33 (0) 6 76 68 38 06\nhttp://lexoyo.me\nRecevoir les news de Silex Labs par mail\nhttp://eepurl.com/F48q5\n. Great, it works, thank you!\nI have included alertify.js in Silex\nhttps://github.com/silexlabs/Silex\n. ",
    "jalperin": "Did you ever figure this out @MrWeb ? I wish to achieve the same effect: disable the spacebar on the \"ok\" button.\n. That certainly works. I actually removed that ,SPACE:32 from the keys array. Thanks!\n. Did you ever figure this out @MrWeb ? I wish to achieve the same effect: disable the spacebar on the \"ok\" button.\n. That certainly works. I actually removed that ,SPACE:32 from the keys array. Thanks!\n. ",
    "dhardtke": "You can remove the code or change the keycode to something that doesn't exist..\n\n``` javascript\nSPACE:32\n```\n\nchange this to\n\n``` javascript\nSPACE:999\n```\n\nand it should work (not tested).\n. You can remove the code or change the keycode to something that doesn't exist..\n\n``` javascript\nSPACE:32\n```\n\nchange this to\n\n``` javascript\nSPACE:999\n```\n\nand it should work (not tested).\n. ",
    "chris03": "I'm having the same issue.\n\nDoing a simple confirm followed by an alert is working: http://jsfiddle.net/QgEpN/2/\n\nBut when I do a confirm then an ajax call and then show an alert if does not work: http://jsfiddle.net/QgEpN/1/\n. I'm having the same issue.\n\nDoing a simple confirm followed by an alert is working: http://jsfiddle.net/QgEpN/2/\n\nBut when I do a confirm then an ajax call and then show an alert if does not work: http://jsfiddle.net/QgEpN/1/\n. ",
    "bammoo": "+1\n. +1\n. ",
    "chesedo": "I would also like to see a alertify.bootstrap.js rather than the css to allow inheritance. I am developing something that uses a green bootstrap theme and the default blue just looks out of place with it.\n. It seems to me that alertify is written in pure javascript, so things like extending of jquery(plugin options) won't be possible, right?\n\nAlso is everything rendered from a template(variables) or will I have to change that if I were to fork it to make it fit any framework by just editing the template?\n. I would also like to see a alertify.bootstrap.js rather than the css to allow inheritance. I am developing something that uses a green bootstrap theme and the default blue just looks out of place with it.\n. It seems to me that alertify is written in pure javascript, so things like extending of jquery(plugin options) won't be possible, right?\n\nAlso is everything rendered from a template(variables) or will I have to change that if I were to fork it to make it fit any framework by just editing the template?\n. ",
    "dionisis84": "Same problem here as mentioned above...!\n. +1!! 0.4.0rc1\n. Same problem here as mentioned above...!\n. +1!! 0.4.0rc1\n. ",
    "charleslaw": "Oo, sorry for the bad label.  I'm using 0.4.0rc1\n. Oo, sorry for the bad label.  I'm using 0.4.0rc1\n. ",
    "BenIsland": "No help ???\n. Hi Fabien,\n\nThanks for your reply. \n\nPlease find in attachment the php file I used to check if there is a session id and the related error screenshot in IE (the screenshot comes from the version 8 but is similar in other IE version). \n\n. \n\nI refer to it in all pages (HTML-PHP pages) to prevent direct access to them from unidentified visitors by including the following lines at the beginning: \n\n<?php\n\nif(!isset($_SESSION)) session_start();\n\nrequire '../codes/verification_siconnecte_code.php';\n\n ?>\n\nNote that it works fine in Chrome and FF, but occurs only in IE (in all tested versions, I mean IE 8, 9 and 10). Unfortunately I cannot omit IE because it is used in numerous client companies.\n\nMany thanks in advance for your prompt reply and help.\n\nBenoit\n\nFrom: Fabien Doiron [mailto:notifications@github.com] \nSent: 25 October 2013 16:57\nTo: fabien-d/alertify.js\nCc: BenIsland\nSubject: Re: [alertify.js] IE8,9,10 issue with 0.3.10 version, works fine in FF, Opera misc. versions (#172)\n\nany chance you can provide a demo of this not working? I haven't been able to reproduce...\n\n\u2014\nReply to this email directly or view https://github.com/fabien-d/alertify.js/issues/172#issuecomment-27089030  it on GitHub.  https://github.com/notifications/beacon/iCwCCy2HJas2HP-dXoGm0JYIQ5gKM-q1b9dqwwZXf6HQ_fQ8YZ426MC3dXzKIPnR.gif \n. Hi again Fabien,\n\nIn addition to my prior email  and in case the CSS could involve, I have attached them in this email.\n\nNote as well that it works also fine in Opera.\n\nBenoit\n\nFrom: Fabien Doiron [mailto:notifications@github.com] \nSent: 25 October 2013 16:57\nTo: fabien-d/alertify.js\nCc: BenIsland\nSubject: Re: [alertify.js] IE8,9,10 issue with 0.3.10 version, works fine in FF, Opera misc. versions (#172)\n\nany chance you can provide a demo of this not working? I haven't been able to reproduce...\n\n\u2014\nReply to this email directly or view https://github.com/fabien-d/alertify.js/issues/172#issuecomment-27089030  it on GitHub.  https://github.com/notifications/beacon/iCwCCy2HJas2HP-dXoGm0JYIQ5gKM-q1b9dqwwZXf6HQ_fQ8YZ426MC3dXzKIPnR.gif \n. Hi Fabien,\n\nAny news from your side ? Did you receive my 2 emails with files ?\n\nThanks for  your help\n. Hi Fabien,\n\nI have just sent you both emails, tell me if you do not receive them again. Otherwise, send me another email address because I used the reply mode to send you the needed files.\n\nThanks for your help,\n\nBenoit\n\nFrom: Fabien Doiron [mailto:notifications@github.com] \nSent: 08 November 2013 17:44\nTo: fabien-d/alertify.js\nCc: BenIsland\nSubject: Re: [alertify.js] IE8,9,10 issue with 0.3.10 version, works fine in FF, Opera misc. versions (#172)\n\nI never got any emails with attachments - \n\n\u2014\nReply to this email directly or view https://github.com/fabien-d/alertify.js/issues/172#issuecomment-28063179  it on GitHub.  https://github.com/notifications/beacon/iCwCCy2HJas2HP-dXoGm0JYIQ5gKM-q1b9dqwwZXf6HQ_fQ8YZ426MC3dXzKIPnR.gif \n. Resent\n\nBenoit\n\nFrom: Benoit DUVIVIER [mailto:duvivierb@intnet.mu] \nSent: 30 October 2013 12:21\nTo: 'fabien-d/alertify.js'\nSubject: RE: [alertify.js] IE8,9,10 issue with 0.3.10 version, works fine in FF, Opera misc. versions (#172)\nImportance: High\n\nHi Fabien,\n\nThanks for your reply. \n\nPlease find in attachment the php file I used to check if there is a session id and the related error screenshot in IE (the screenshot comes from the version 8 but is similar in other IE version). \n\n. \n\nI refer to it in all pages (HTML-PHP pages) to prevent direct access to them from unidentified visitors by including the following lines at the beginning: \n\n<?php\n\nif(!isset($_SESSION)) session_start();\n\nrequire '../codes/verification_siconnecte_code.php';\n\n ?>\n\nNote that it works fine in Chrome and FF, but occurs only in IE (in all tested versions, I mean IE 8, 9 and 10). Unfortunately I cannot omit IE because it is used in numerous client companies.\n\nMany thanks in advance for your prompt reply and help.\n\nBenoit\n\nFrom: Fabien Doiron [mailto:notifications@github.com] \nSent: 25 October 2013 16:57\nTo: fabien-d/alertify.js\nCc: BenIsland\nSubject: Re: [alertify.js] IE8,9,10 issue with 0.3.10 version, works fine in FF, Opera misc. versions (#172)\n\nany chance you can provide a demo of this not working? I haven't been able to reproduce...\n\n\u2014\nReply to this email directly or view https://github.com/fabien-d/alertify.js/issues/172#issuecomment-27089030  it on GitHub.  https://github.com/notifications/beacon/iCwCCy2HJas2HP-dXoGm0JYIQ5gKM-q1b9dqwwZXf6HQ_fQ8YZ426MC3dXzKIPnR.gif \n. Resent\n\nBenoit\n\nFrom: Benoit DUVIVIER [mailto:duvivierb@intnet.mu] \nSent: 30 October 2013 12:28\nTo: 'fabien-d/alertify.js'\nSubject: RE: [alertify.js] IE8,9,10 issue with 0.3.10 version, works fine in FF, Opera misc. versions (#172)\n\nHi again Fabien,\n\nIn addition to my prior email  and in case the CSS could involve, I have attached them in this email.\n\nNote as well that it works also fine in Opera.\n\nBenoit\n\nFrom: Fabien Doiron [mailto:notifications@github.com] \nSent: 25 October 2013 16:57\nTo: fabien-d/alertify.js\nCc: BenIsland\nSubject: Re: [alertify.js] IE8,9,10 issue with 0.3.10 version, works fine in FF, Opera misc. versions (#172)\n\nany chance you can provide a demo of this not working? I haven't been able to reproduce...\n\n\u2014\nReply to this email directly or view https://github.com/fabien-d/alertify.js/issues/172#issuecomment-27089030  it on GitHub.  https://github.com/notifications/beacon/iCwCCy2HJas2HP-dXoGm0JYIQ5gKM-q1b9dqwwZXf6HQ_fQ8YZ426MC3dXzKIPnR.gif \n. No help ???\n. Hi Fabien,\n\nThanks for your reply. \n\nPlease find in attachment the php file I used to check if there is a session id and the related error screenshot in IE (the screenshot comes from the version 8 but is similar in other IE version). \n\n. \n\nI refer to it in all pages (HTML-PHP pages) to prevent direct access to them from unidentified visitors by including the following lines at the beginning: \n\n<?php\n\nif(!isset($_SESSION)) session_start();\n\nrequire '../codes/verification_siconnecte_code.php';\n\n ?>\n\nNote that it works fine in Chrome and FF, but occurs only in IE (in all tested versions, I mean IE 8, 9 and 10). Unfortunately I cannot omit IE because it is used in numerous client companies.\n\nMany thanks in advance for your prompt reply and help.\n\nBenoit\n\nFrom: Fabien Doiron [mailto:notifications@github.com] \nSent: 25 October 2013 16:57\nTo: fabien-d/alertify.js\nCc: BenIsland\nSubject: Re: [alertify.js] IE8,9,10 issue with 0.3.10 version, works fine in FF, Opera misc. versions (#172)\n\nany chance you can provide a demo of this not working? I haven't been able to reproduce...\n\n\u2014\nReply to this email directly or view https://github.com/fabien-d/alertify.js/issues/172#issuecomment-27089030  it on GitHub.  https://github.com/notifications/beacon/iCwCCy2HJas2HP-dXoGm0JYIQ5gKM-q1b9dqwwZXf6HQ_fQ8YZ426MC3dXzKIPnR.gif \n. Hi again Fabien,\n\nIn addition to my prior email  and in case the CSS could involve, I have attached them in this email.\n\nNote as well that it works also fine in Opera.\n\nBenoit\n\nFrom: Fabien Doiron [mailto:notifications@github.com] \nSent: 25 October 2013 16:57\nTo: fabien-d/alertify.js\nCc: BenIsland\nSubject: Re: [alertify.js] IE8,9,10 issue with 0.3.10 version, works fine in FF, Opera misc. versions (#172)\n\nany chance you can provide a demo of this not working? I haven't been able to reproduce...\n\n\u2014\nReply to this email directly or view https://github.com/fabien-d/alertify.js/issues/172#issuecomment-27089030  it on GitHub.  https://github.com/notifications/beacon/iCwCCy2HJas2HP-dXoGm0JYIQ5gKM-q1b9dqwwZXf6HQ_fQ8YZ426MC3dXzKIPnR.gif \n. Hi Fabien,\n\nAny news from your side ? Did you receive my 2 emails with files ?\n\nThanks for  your help\n. Hi Fabien,\n\nI have just sent you both emails, tell me if you do not receive them again. Otherwise, send me another email address because I used the reply mode to send you the needed files.\n\nThanks for your help,\n\nBenoit\n\nFrom: Fabien Doiron [mailto:notifications@github.com] \nSent: 08 November 2013 17:44\nTo: fabien-d/alertify.js\nCc: BenIsland\nSubject: Re: [alertify.js] IE8,9,10 issue with 0.3.10 version, works fine in FF, Opera misc. versions (#172)\n\nI never got any emails with attachments - \n\n\u2014\nReply to this email directly or view https://github.com/fabien-d/alertify.js/issues/172#issuecomment-28063179  it on GitHub.  https://github.com/notifications/beacon/iCwCCy2HJas2HP-dXoGm0JYIQ5gKM-q1b9dqwwZXf6HQ_fQ8YZ426MC3dXzKIPnR.gif \n. Resent\n\nBenoit\n\nFrom: Benoit DUVIVIER [mailto:duvivierb@intnet.mu] \nSent: 30 October 2013 12:21\nTo: 'fabien-d/alertify.js'\nSubject: RE: [alertify.js] IE8,9,10 issue with 0.3.10 version, works fine in FF, Opera misc. versions (#172)\nImportance: High\n\nHi Fabien,\n\nThanks for your reply. \n\nPlease find in attachment the php file I used to check if there is a session id and the related error screenshot in IE (the screenshot comes from the version 8 but is similar in other IE version). \n\n. \n\nI refer to it in all pages (HTML-PHP pages) to prevent direct access to them from unidentified visitors by including the following lines at the beginning: \n\n<?php\n\nif(!isset($_SESSION)) session_start();\n\nrequire '../codes/verification_siconnecte_code.php';\n\n ?>\n\nNote that it works fine in Chrome and FF, but occurs only in IE (in all tested versions, I mean IE 8, 9 and 10). Unfortunately I cannot omit IE because it is used in numerous client companies.\n\nMany thanks in advance for your prompt reply and help.\n\nBenoit\n\nFrom: Fabien Doiron [mailto:notifications@github.com] \nSent: 25 October 2013 16:57\nTo: fabien-d/alertify.js\nCc: BenIsland\nSubject: Re: [alertify.js] IE8,9,10 issue with 0.3.10 version, works fine in FF, Opera misc. versions (#172)\n\nany chance you can provide a demo of this not working? I haven't been able to reproduce...\n\n\u2014\nReply to this email directly or view https://github.com/fabien-d/alertify.js/issues/172#issuecomment-27089030  it on GitHub.  https://github.com/notifications/beacon/iCwCCy2HJas2HP-dXoGm0JYIQ5gKM-q1b9dqwwZXf6HQ_fQ8YZ426MC3dXzKIPnR.gif \n. Resent\n\nBenoit\n\nFrom: Benoit DUVIVIER [mailto:duvivierb@intnet.mu] \nSent: 30 October 2013 12:28\nTo: 'fabien-d/alertify.js'\nSubject: RE: [alertify.js] IE8,9,10 issue with 0.3.10 version, works fine in FF, Opera misc. versions (#172)\n\nHi again Fabien,\n\nIn addition to my prior email  and in case the CSS could involve, I have attached them in this email.\n\nNote as well that it works also fine in Opera.\n\nBenoit\n\nFrom: Fabien Doiron [mailto:notifications@github.com] \nSent: 25 October 2013 16:57\nTo: fabien-d/alertify.js\nCc: BenIsland\nSubject: Re: [alertify.js] IE8,9,10 issue with 0.3.10 version, works fine in FF, Opera misc. versions (#172)\n\nany chance you can provide a demo of this not working? I haven't been able to reproduce...\n\n\u2014\nReply to this email directly or view https://github.com/fabien-d/alertify.js/issues/172#issuecomment-27089030  it on GitHub.  https://github.com/notifications/beacon/iCwCCy2HJas2HP-dXoGm0JYIQ5gKM-q1b9dqwwZXf6HQ_fQ8YZ426MC3dXzKIPnR.gif \n. ",
    "fritx": "Any idea to make a dialog which provides certain items to select? :smile: \n. @fabien-d thanks it's pretty kind of your stuff to be responsive on a mobile phone :laughing: \n. Yes, when can I just install it thro bower?\n. Sorry to have registered an entry `alertify-v0.5` in bower...\nI don't know how to undo it.\n. Yeah I posted my will.\nI registered the 0.5 branch as https://github.com/weixinjs/alertify.js to Bower.\n. Fine. :+1: \nBy the way, I find the new dialog is too white, to fit some white background,\na bit eye-harming, any way to solve that?\n. > The original goal was to build a theme library which would cover various animations and positions\n\nagreed. :+1: \n. It's cool, but the base color is a bit weird ;)\n. Any idea to make a dialog which provides certain items to select? :smile: \n. @fabien-d thanks it's pretty kind of your stuff to be responsive on a mobile phone :laughing: \n. Yes, when can I just install it thro bower?\n. Sorry to have registered an entry `alertify-v0.5` in bower...\nI don't know how to undo it.\n. Yeah I posted my will.\nI registered the 0.5 branch as https://github.com/weixinjs/alertify.js to Bower.\n. Fine. :+1: \nBy the way, I find the new dialog is too white, to fit some white background,\na bit eye-harming, any way to solve that?\n. > The original goal was to build a theme library which would cover various animations and positions\n\nagreed. :+1: \n. It's cool, but the base color is a bit weird ;)\n. ",
    "ValsiS": "when do you think you will make first relase of this version ? because i want to use it in a project ...\n. when do you think you will make first relase of this version ? because i want to use it in a project ...\n. ",
    "yuvii": "Is there any intent to expand the API? I'm currently using 0.3.11. While the library is fantastic, the API is kinda limited and I find myself messing with the source code attempting to customize certain features (such as changing the animation style, customizing alert positioning, etc.)\n. Is there any intent to expand the API? I'm currently using 0.3.11. While the library is fantastic, the API is kinda limited and I find myself messing with the source code attempting to customize certain features (such as changing the animation style, customizing alert positioning, etc.)\n. ",
    "mako0403": "0.5 When officially released\uff1f\n. 0.5 When officially released\uff1f\n. ",
    "mim-Armand": "what about leaving the decision to users (developers)? in some projects you may actually want to queue as well,\n;)\n. what about leaving the decision to users (developers)? in some projects you may actually want to queue as well,\n;)\n. ",
    "wizonesolutions": "@fabien-d  Is this fixed in `0.3.11`? The `visibility: hidden` tweak, etc.\n. This wasn't fixed for me in `0.3.11`, for what it's worth. I used the suggested CSS fix in my own styles, which did work (and it isn't hacking the script, so I will probably just forget about it and leave it :))\n. Probably not easily \u2014\u00a0I didn't delve that deep, just found a CSS fix here and applied it. The app that was showing it has it fixed now. So I am OK with this just staying closed or being addressed when somebody can provide a more concrete example.\n. @fabien-d  Is this fixed in `0.3.11`? The `visibility: hidden` tweak, etc.\n. This wasn't fixed for me in `0.3.11`, for what it's worth. I used the suggested CSS fix in my own styles, which did work (and it isn't hacking the script, so I will probably just forget about it and leave it :))\n. Probably not easily \u2014\u00a0I didn't delve that deep, just found a CSS fix here and applied it. The app that was showing it has it fixed now. So I am OK with this just staying closed or being addressed when somebody can provide a more concrete example.\n. ",
    "Alex-Sokolov": "Hmm... seems that all work with 0.3.11!\n. Windows 8, Google Chrome 30.0.1599.69\nUser click on link.\nLink to file will open in new tab, where when server generate file downloaded by browser and tab close.\nIf all filled correctly opening new tab to file and it download without prompt.\nWhen not all filled user asks to download file anyway.\nWhen he click \"Download\" link opened in new browser tab, browser receive file and tab closing.\nWe see page where click link but prompt already here too.\nMarkup:\n\n``` html\n<table id=\"ref_table\">\n    <tr>\n        <td>\n            <h4>Download in</h4>\n        </td>\n        <td>\n            <a class=\"link-class\" id=\"ref_doc\" href=\"/Document/Word\">\n                <img src=\"/Images/doc.png\" alt=\"MS Word\" />\n            </a>\n        </td>\n        <td>\n            <a class=\"link-class\" id=\"ref_pdf\" href=\"/Document/PDF\">\n                <img src=\"/Images/pdf.png\" alt=\"PDF\" />\n            </a>\n        </td>\n    </tr>\n</table>\n```\n\nJS\n\n``` js\nfunction downloadFile(event) {\n    event.preventDefault();\n    window.open($(this).attr('href'));\n}\n\n$('#ref_table').on('click', '.link-class', downloadFile);\n\n// URL that check params, return true or false, in that case it is false        \n$.getJSON('/check/', function (data) {\n    if (data !== true) {\n        $('#ref_table').off('click', '.link-class', downloadFile);\n\n        $('#ref_table').on('click', '.link-class', function (event) {\n            event.preventDefault();\n            var $this = $(this);\n\n            alertify.set({\n                buttonReverse: true,\n                buttonFocus: \"cancel\",\n                labels: {\n                    ok: \"Download\",\n                    cancel: \"Return\"\n                }\n            });\n\n            alertify.confirm(\"Not all filled correctly, download anyway?\", function(e) {\n                if (e) {\n                    alertify.log('Start download');\n                    $('#ref_table').on('click', '.link-class', downloadFile);\n                    $this.trigger('click');\n                }\n            });\n\n        });\n    }\n});\n```\n. Hmm... seems that all work with 0.3.11!\n. Windows 8, Google Chrome 30.0.1599.69\nUser click on link.\nLink to file will open in new tab, where when server generate file downloaded by browser and tab close.\nIf all filled correctly opening new tab to file and it download without prompt.\nWhen not all filled user asks to download file anyway.\nWhen he click \"Download\" link opened in new browser tab, browser receive file and tab closing.\nWe see page where click link but prompt already here too.\nMarkup:\n\n``` html\n<table id=\"ref_table\">\n    <tr>\n        <td>\n            <h4>Download in</h4>\n        </td>\n        <td>\n            <a class=\"link-class\" id=\"ref_doc\" href=\"/Document/Word\">\n                <img src=\"/Images/doc.png\" alt=\"MS Word\" />\n            </a>\n        </td>\n        <td>\n            <a class=\"link-class\" id=\"ref_pdf\" href=\"/Document/PDF\">\n                <img src=\"/Images/pdf.png\" alt=\"PDF\" />\n            </a>\n        </td>\n    </tr>\n</table>\n```\n\nJS\n\n``` js\nfunction downloadFile(event) {\n    event.preventDefault();\n    window.open($(this).attr('href'));\n}\n\n$('#ref_table').on('click', '.link-class', downloadFile);\n\n// URL that check params, return true or false, in that case it is false        \n$.getJSON('/check/', function (data) {\n    if (data !== true) {\n        $('#ref_table').off('click', '.link-class', downloadFile);\n\n        $('#ref_table').on('click', '.link-class', function (event) {\n            event.preventDefault();\n            var $this = $(this);\n\n            alertify.set({\n                buttonReverse: true,\n                buttonFocus: \"cancel\",\n                labels: {\n                    ok: \"Download\",\n                    cancel: \"Return\"\n                }\n            });\n\n            alertify.confirm(\"Not all filled correctly, download anyway?\", function(e) {\n                if (e) {\n                    alertify.log('Start download');\n                    $('#ref_table').on('click', '.link-class', downloadFile);\n                    $this.trigger('click');\n                }\n            });\n\n        });\n    }\n});\n```\n. ",
    "mstafkmx": "I am using backbone and RequireJS.\ncolectores.js:\ndefine([], function () {\n    jQuery.support.cors = true;\n    $(document).ready(function () {\n        console.log(\"colectores.js loaded\");\n        alertify.success(\"Hi\");\n    });\n});\nI have tried to use alerify en others files, but it not works.I load alertify using requireJS\n. Thanks Fabian.\nTengo otro error. la notificaci\u00f3n sale en el fondo de la p\u00e1gina pero no desparece.\nI'm using css for bootstrap.\n![alertify1](https://f.cloud.github.com/assets/2950990/1358882/a6e4e056-37d0-11e3-8cf9-dd0e99ff0bf3.png)\n. Thanks for your time. It works.\n. I am using backbone and RequireJS.\ncolectores.js:\ndefine([], function () {\n    jQuery.support.cors = true;\n    $(document).ready(function () {\n        console.log(\"colectores.js loaded\");\n        alertify.success(\"Hi\");\n    });\n});\nI have tried to use alerify en others files, but it not works.I load alertify using requireJS\n. Thanks Fabian.\nTengo otro error. la notificaci\u00f3n sale en el fondo de la p\u00e1gina pero no desparece.\nI'm using css for bootstrap.\n![alertify1](https://f.cloud.github.com/assets/2950990/1358882/a6e4e056-37d0-11e3-8cf9-dd0e99ff0bf3.png)\n. Thanks for your time. It works.\n. ",
    "persalena": "Thank you for explanation! It is very helpful\n. Thank you for explanation! It is very helpful\n. ",
    "akarelas": "thanks\n. thanks\n. ",
    "sahat": "Please add some light shadows to alerts. In 0.5rc1, I cannot see where alert container begin and where it ends on a white background. Or add semi-transparent dark overlay instead. Just a suggestion.\n. Please add some light shadows to alerts. In 0.5rc1, I cannot see where alert container begin and where it ends on a white background. Or add semi-transparent dark overlay instead. Just a suggestion.\n. ",
    "cavico": "What about the new Google Design Guidelines? http://www.google.com/design/spec/components/dialogs.html\n\nIf you like it, I already started a theme... in SASS\n. What about the new Google Design Guidelines? http://www.google.com/design/spec/components/dialogs.html\n\nIf you like it, I already started a theme... in SASS\n. ",
    "oste": "ya, I am sure. I am actually importing the file into a less document with\n@import (less) \"default.css\" and less has a compile error. Double checking\nthe file and it has a bunch of null values at the end with no ending }\n\nOn Wed, Oct 30, 2013 at 8:51 AM, Fabien Doiron notifications@github.comwrote:\n\n> Can you double check if this is not just indentation? I generally write\n> CSS with sub styles nested. E.g.\n> \n> .container {}\n> \n> ```\n> .container-child {\n> }\n> ```\n> \n> which can make it seem like the last line is missing a closing } although\n> it is not.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/188#issuecomment-27386025\n> .\n\n## \n\nRegards,\nMike\n. ya, I am sure. I am actually importing the file into a less document with\n@import (less) \"default.css\" and less has a compile error. Double checking\nthe file and it has a bunch of null values at the end with no ending }\n\nOn Wed, Oct 30, 2013 at 8:51 AM, Fabien Doiron notifications@github.comwrote:\n\n> Can you double check if this is not just indentation? I generally write\n> CSS with sub styles nested. E.g.\n> \n> .container {}\n> \n> ```\n> .container-child {\n> }\n> ```\n> \n> which can make it seem like the last line is missing a closing } although\n> it is not.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/188#issuecomment-27386025\n> .\n\n## \n\nRegards,\nMike\n. ",
    "johnny9028": "i managed to get it running by adding window.onload before. however, is not the prettiest solutin but it seems to work :)\n. i managed to get it running by adding window.onload before. however, is not the prettiest solutin but it seems to work :)\n. ",
    "taitems": "Yep, seeing this everywhere now. My bad.\n. Yep, seeing this everywhere now. My bad.\n. ",
    "dbtek": "Actually, there is the indentation like the older Bootstrap theme.\n. Actually, there is the indentation like the older Bootstrap theme.\n. ",
    "MinnesotaDeveloper": "Nevermind. I see that I need to put the function within the alertify.confirm fuction call.\n. Nevermind. I see that I need to put the function within the alertify.confirm fuction call.\n. ",
    "JohnPennington": "Thanks.  Makes perfect sense.  Since alerts are used a lot in form \nvalidation, this might be a good thing to add to your examples.\n\nJohn\n\nOn 12/23/2013 9:16 AM, Fabien Doiron wrote:\n\n> JavaScript is non blocking which means alertify.js does not block the \n> execution like standard dialogs. You would have to use callbacks to \n> handle it.\n> \n> Since it does not block the execution the code continues to run while \n> the alert is shown causing the the focus to be overlooked.\n> \n> if  (TestCase  >  1)  {\n>      alertify.alert(\"Please make a...\",  function  ()  {\n>          // this code is only called after the button has been clicked\n>          document.EditForm.percent_off_subtotal.focus();\n>      });\n> }\n> \n> \u2014\n> Reply to this email directly or view it on GitHub \n> https://github.com/fabien-d/alertify.js/issues/195#issuecomment-31121048.\n. Thanks.  Makes perfect sense.  Since alerts are used a lot in form \nvalidation, this might be a good thing to add to your examples.\n\nJohn\n\nOn 12/23/2013 9:16 AM, Fabien Doiron wrote:\n\n> JavaScript is non blocking which means alertify.js does not block the \n> execution like standard dialogs. You would have to use callbacks to \n> handle it.\n> \n> Since it does not block the execution the code continues to run while \n> the alert is shown causing the the focus to be overlooked.\n> \n> if  (TestCase  >  1)  {\n>      alertify.alert(\"Please make a...\",  function  ()  {\n>          // this code is only called after the button has been clicked\n>          document.EditForm.percent_off_subtotal.focus();\n>      });\n> }\n> \n> \u2014\n> Reply to this email directly or view it on GitHub \n> https://github.com/fabien-d/alertify.js/issues/195#issuecomment-31121048.\n. ",
    "todomsg": "Hello Fabien,\nthansk for reply.\nI am using Safari 5.1.7 in window. Problem is safari unable to set focus to ok button as default. when i was put code \"this.setFocus();\" on setup function at last. it was working good. problem is in setup function for safari.\n. Hello Fabien,\nthansk for reply.\nI am using Safari 5.1.7 in window. Problem is safari unable to set focus to ok button as default. when i was put code \"this.setFocus();\" on setup function at last. it was working good. problem is in setup function for safari.\n. ",
    "alexcp": "Alright, I'll clean this up and send the patch.\nThank you\n. Alright, I'll clean this up and send the patch.\nThank you\n. ",
    "orlleite": "Fabien, thanks for your time. I could posted the info here too but I didn't.\n. Fabien, thanks for your time. I could posted the info here too but I didn't.\n. ",
    "seifsallam": "it would be really awesome. Thanks\n. it would be really awesome. Thanks\n. ",
    "jackrehaag": "To overcome this I add the following code before calling the alert:\n\n$(\".alertify-log\").hide();\n. To overcome this I add the following code before calling the alert:\n\n$(\".alertify-log\").hide();\n. ",
    "aceofspades": "I'm not referring to the alert window itself, but rather the transparent container which runs the entire vertical height of the window. Clicking on the alert itself closes it, but clicking anywhere below it absorbs the event, rather than passing it to the element below it.\n. I'm not intending to create a modal dialog to force the user to respond, but rather passive alerts, i.e. \"you have been signed in\" like a growl notification. I don't want them to prevent the site from being used. Did I miss somehow that the intention is that all log messages are supposed to be modal?\n\nIncidentally, this overlay is only as wide as the alert, but the full height of the screen, so it's not blocking all events, just a portion of the screen.\n\nBy the way, thanks for providing this library.\n. Ok, thanks for confirming expected behavior. I'm using Chrome by the way.\n\nI did some more digging, and found that this can be fixed with [CSS](https://github.com/fabien-d/alertify.js/blob/master/example/assets/js/lib/alertify/alertify.core.css#L54). Eliminating he `bottom` declaration resolves the issue and `.alertify-logs` shrink-wraps the contents. \n\nI've made the change in #209.\n\nAny side effects that you can think of?\n. I'm not referring to the alert window itself, but rather the transparent container which runs the entire vertical height of the window. Clicking on the alert itself closes it, but clicking anywhere below it absorbs the event, rather than passing it to the element below it.\n. I'm not intending to create a modal dialog to force the user to respond, but rather passive alerts, i.e. \"you have been signed in\" like a growl notification. I don't want them to prevent the site from being used. Did I miss somehow that the intention is that all log messages are supposed to be modal?\n\nIncidentally, this overlay is only as wide as the alert, but the full height of the screen, so it's not blocking all events, just a portion of the screen.\n\nBy the way, thanks for providing this library.\n. Ok, thanks for confirming expected behavior. I'm using Chrome by the way.\n\nI did some more digging, and found that this can be fixed with [CSS](https://github.com/fabien-d/alertify.js/blob/master/example/assets/js/lib/alertify/alertify.core.css#L54). Eliminating he `bottom` declaration resolves the issue and `.alertify-logs` shrink-wraps the contents. \n\nI've made the change in #209.\n\nAny side effects that you can think of?\n. ",
    "thomstark": "Thanks for looking into it. All I know about iframe-to-parent communication is they need to be on the same domain for the iframe to be able to affect the parent. That's the extent of my knowledge, really. I am using your Alertify plugin in my File Away plugin (available at WordPress.org), when Directories and Manager Mode are enabled, for success alerts and delete confirms in bulk editing. \n. Thanks for looking into it. All I know about iframe-to-parent communication is they need to be on the same domain for the iframe to be able to affect the parent. That's the extent of my knowledge, really. I am using your Alertify plugin in my File Away plugin (available at WordPress.org), when Directories and Manager Mode are enabled, for success alerts and delete confirms in bulk editing. \n. ",
    "cslinmiso": "hey man, I am so sorry after looking the problem once more, \nI've noticed it was my mistake that I modified your code caused this glitch. I created a new function to allows alert to close after the time I set and hide the button. That's what happened.\n\nSorry again.\n. hey man, I am so sorry after looking the problem once more, \nI've noticed it was my mistake that I modified your code caused this glitch. I created a new function to allows alert to close after the time I set and hide the button. That's what happened.\n\nSorry again.\n. ",
    "jcoz1968": "I use it in aspnet all the time.  Try using the browser's developer tools JavaScript console you see if you see an exception.  \n\n-----Original Message-----\nFrom: \"babaxx\" notifications@github.com\nSent: \u200e3/\u200e21/\u200e2014 11:54 AM\nTo: \"fabien-d/alertify.js\" alertify.js@noreply.github.com\nSubject: [alertify.js] alertify not defined (#213)\n\nHello,\nI develop a website in asp.net and I wanted to add alertify on it.\nThe problem is that I insert alertify.min.js (and the css core and default) and when I want to call alertify, I have an error saying \"alertify is not defined\".\nIt considers that alertify does not exist as if I had not inserted it in the page.\nI guess there is something making a conflict but I don't know what...\nFor information, I use a scriptManager (it activates AJAX for ASP.NET) and I use many jQuery scripts.\nCould it be the source of this problem?\nI spent a lot of time on it, but I didn't find anything conclusive...\nCan you help me please?\n\u2014\nReply to this email directly or view it on GitHub.\n. Maybe call page.header.databind in master page load event\n\nbabaxx notifications@github.com wrote:\n\n> The error in the console is \"alertify not defined\".\n> It's like I don't put the script into the page... But when I look at the source code, it's there.\n> \n> For example I made a simple html page with an alertify call at the loading. It works.\n> I copy-paste the exact same thing in my MasterPage, I have this message in the console\u2026\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\ufffc\n. Also make sure your path is right if your child view is in a different folder.  For example use tilde instead of ../\n\nbabaxx notifications@github.com wrote:\n\n> The error in the console is \"alertify not defined\".\n> It's like I don't put the script into the page... But when I look at the source code, it's there.\n> \n> For example I made a simple html page with an alertify call at the loading. It works.\n> I copy-paste the exact same thing in my MasterPage, I have this message in the console\u2026\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\ufffc\n. Good to hear you found it.\n\nFrom: babaxx [mailto:notifications@github.com] \nSent: Monday, March 24, 2014 8:24 AM\nTo: fabien-d/alertify.js\nCc: jcoz1968\nSubject: Re: [alertify.js] alertify not defined (#213)\n\nI found what was the source of the problem, but I don't really know why...\n\nIn my page I had jquery.mobile.customized.min.js.\nAs soon as I commented it, alertify worked...\n\n\u2014\nReply to this email directly or view it on GitHub https://github.com/fabien-d/alertify.js/issues/213#issuecomment-38443055 .  https://github.com/notifications/beacon/1767949__eyJzY29wZSI6Ik5ld3NpZXM6QmVhY29uIiwiZXhwaXJlcyI6MTcxMTI4NjYzMCwiZGF0YSI6eyJpZCI6MjgyNDAxNTN9fQ==--fe33530242d3f4da6e628a68dbf402d20c94f71e.gif \n. I use it in aspnet all the time.  Try using the browser's developer tools JavaScript console you see if you see an exception.  \n\n-----Original Message-----\nFrom: \"babaxx\" notifications@github.com\nSent: \u200e3/\u200e21/\u200e2014 11:54 AM\nTo: \"fabien-d/alertify.js\" alertify.js@noreply.github.com\nSubject: [alertify.js] alertify not defined (#213)\n\nHello,\nI develop a website in asp.net and I wanted to add alertify on it.\nThe problem is that I insert alertify.min.js (and the css core and default) and when I want to call alertify, I have an error saying \"alertify is not defined\".\nIt considers that alertify does not exist as if I had not inserted it in the page.\nI guess there is something making a conflict but I don't know what...\nFor information, I use a scriptManager (it activates AJAX for ASP.NET) and I use many jQuery scripts.\nCould it be the source of this problem?\nI spent a lot of time on it, but I didn't find anything conclusive...\nCan you help me please?\n\u2014\nReply to this email directly or view it on GitHub.\n. Maybe call page.header.databind in master page load event\n\nbabaxx notifications@github.com wrote:\n\n> The error in the console is \"alertify not defined\".\n> It's like I don't put the script into the page... But when I look at the source code, it's there.\n> \n> For example I made a simple html page with an alertify call at the loading. It works.\n> I copy-paste the exact same thing in my MasterPage, I have this message in the console\u2026\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\ufffc\n. Also make sure your path is right if your child view is in a different folder.  For example use tilde instead of ../\n\nbabaxx notifications@github.com wrote:\n\n> The error in the console is \"alertify not defined\".\n> It's like I don't put the script into the page... But when I look at the source code, it's there.\n> \n> For example I made a simple html page with an alertify call at the loading. It works.\n> I copy-paste the exact same thing in my MasterPage, I have this message in the console\u2026\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\ufffc\n. Good to hear you found it.\n\nFrom: babaxx [mailto:notifications@github.com] \nSent: Monday, March 24, 2014 8:24 AM\nTo: fabien-d/alertify.js\nCc: jcoz1968\nSubject: Re: [alertify.js] alertify not defined (#213)\n\nI found what was the source of the problem, but I don't really know why...\n\nIn my page I had jquery.mobile.customized.min.js.\nAs soon as I commented it, alertify worked...\n\n\u2014\nReply to this email directly or view it on GitHub https://github.com/fabien-d/alertify.js/issues/213#issuecomment-38443055 .  https://github.com/notifications/beacon/1767949__eyJzY29wZSI6Ik5ld3NpZXM6QmVhY29uIiwiZXhwaXJlcyI6MTcxMTI4NjYzMCwiZGF0YSI6eyJpZCI6MjgyNDAxNTN9fQ==--fe33530242d3f4da6e628a68dbf402d20c94f71e.gif \n. ",
    "babaxx": "The error in the console is \"alertify not defined\".\nIt's like I don't put the script into the page... But when I look at the source code, it's there.\n\nFor example I made a simple html page with an alertify call at the loading. It works.\nI copy-paste the exact same thing in my MasterPage, I have this message in the console\u2026\n. Thank you for your answers.\n\nThe point is that I'm sure of the path given though when I looked at the source code I clicked on the link to be sure.\nI even tried to put the alertify source code directly in the page between script tags and\u2026 no changes\u2026\n. I found what was the source of the problem, but I don't really know why...\n\nIn my page I had jquery.mobile.customized.min.js.\nAs soon as I commented it, alertify worked...\n. The error in the console is \"alertify not defined\".\nIt's like I don't put the script into the page... But when I look at the source code, it's there.\n\nFor example I made a simple html page with an alertify call at the loading. It works.\nI copy-paste the exact same thing in my MasterPage, I have this message in the console\u2026\n. Thank you for your answers.\n\nThe point is that I'm sure of the path given though when I looked at the source code I clicked on the link to be sure.\nI even tried to put the alertify source code directly in the page between script tags and\u2026 no changes\u2026\n. I found what was the source of the problem, but I don't really know why...\n\nIn my page I had jquery.mobile.customized.min.js.\nAs soon as I commented it, alertify worked...\n. ",
    "rhuynh": "There is a specific case where this bug exists in ie11.  In my application, if you trigger the alertify dialog as a result of a button and you remove that button from the dom, when you click on the dialog ok button, you will get the exception as elCallee === null.  This is due to document.activeElement will sometime be null.\n. There is a specific case where this bug exists in ie11.  In my application, if you trigger the alertify dialog as a result of a button and you remove that button from the dom, when you click on the dialog ok button, you will get the exception as elCallee === null.  This is due to document.activeElement will sometime be null.\n. ",
    "tantion": "usage like:\n\n``` javascript\nlogInstance = alertify.log('loading', '', 0);\n\ndosomething.done(function () {\n    logInstance.close();\n});\n```\n. usage like:\n\n``` javascript\nlogInstance = alertify.log('loading', '', 0);\n\ndosomething.done(function () {\n    logInstance.close();\n});\n```\n. ",
    "macool": ":+1: \n. :+1: \n. ",
    "ChristoZyl": "Thanks for your prompt reply. It was 0.4.  I tried 0.3 and it is working\nperfectly.  Sorry if I created a fuss unnecessarily. Thanks for a great\nproduct.\n\nOn Wed, May 7, 2014 at 6:33 PM, Fabien Doiron notifications@github.comwrote:\n\n> what version of alertify.js are you using? Alertify (uppercase \"A\") was\n> part of 0.4 which is deprecated. I would suggest using 0.3 or 0.5 which\n> uses alertify (lowercase \"a\").\n> \n> Usage and examples can be found at:\n> https://github.com/fabien-d/alertify.js/wiki#usage-documentation\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/221#issuecomment-42450345\n> .\n. Thanks for your prompt reply. It was 0.4.  I tried 0.3 and it is working\nperfectly.  Sorry if I created a fuss unnecessarily. Thanks for a great\nproduct.\n\nOn Wed, May 7, 2014 at 6:33 PM, Fabien Doiron notifications@github.comwrote:\n\n> what version of alertify.js are you using? Alertify (uppercase \"A\") was\n> part of 0.4 which is deprecated. I would suggest using 0.3 or 0.5 which\n> uses alertify (lowercase \"a\").\n> \n> Usage and examples can be found at:\n> https://github.com/fabien-d/alertify.js/wiki#usage-documentation\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/221#issuecomment-42450345\n> .\n. ",
    "mroter": "### Describe the issue you are having\n\nThe browser hang the 2nd time I call alertify.alert(\"message\") from\nwithin a modal dialog. After reloading the page it will work (OK\nbutton will close the alert dialog)once.\n\n### What version of alertify.js are you using\n\nUsing version 0.3.11\n\n### Steps to reproduce the issue\n1. Open an edit modal dialog and make an input error (e.g. don't\n   select a required value)\n2. My validation call alertify.alert(\"missing/invalid data\")\n3. The use click OK button and the alert dialog is closed.\n4. The user submit the same input again (with the error)\n5. Now I call alertify.alert(\"missing/invalid data\")for the 2nd time\n6. The alert dialog is displayed but clicking on the OK button does\n   nothing, the browser hung.\n7. I use reload or back to recover...\n\n(default alert is working as expected)\n\n### What browser(s) is this happening in\n\nBoth Chrome and IE 10 on windows 8\n\nThank you\n\nMatty\n\nOn Sun, May 11, 2014 at 5:30 PM, Fabien Doiron notifications@github.comwrote:\n\n> Could you provide more info? There is an opening issueshttps://github.com/fabien-d/alertify.js/wiki/Opening-Issueswiki entry on providing the information needed to quickly resolve the\n> issue. I unfortunately don't have too much free time at the moment, and the\n> more information you provide, the easier it will be for me (or someone\n> else) to help you out.\n> \n> Example template from the wiki. Cheers\n> \n> ### Describe the issue you are having[insert description]\n> \n> ### What version of alertify.js are you using[insert version]\n> \n> ### Steps to reproduce the issue\n> 1. [insert steps]\n> 2. [insert steps]\n>    ### What browser(s) is this happening in[insert browsers]\n>    ### Link to reproduced issue[insert link]\n>    ### Screenshots (if applicable)[insert screenshots]\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/223#issuecomment-42771938\n> .\n\n## \n\nMatty\n. It seems to work great (few invocations) with confirm dialog but not with alert.\nAnything I'm doing wrong? \nAny chance you'll be looking on it in the next few days?\nThanks\n. Hi,\n\nNo - could not replicate on the demo page.\nI will soon send something.\n\nMany Tanks\nMatty\n\nOn Tue, May 20, 2014 at 4:15 PM, Fabien Doiron notifications@github.comwrote:\n\n> Any chance you could provide a code sample with the error? I'm trying to\n> reproduce but can't - also does it happen on the demo pagehttp://fabien-d.github.io/alertify.js/\n> ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/223#issuecomment-43623377\n> .\n\n## \n\nMatty\n. Hi,\n\nTo start I include part of the \"production code\" and 2 sample run video\nrecordings of running the code (with/without alertify).\n\nLook on the target_dialog and getTarget().\nIf getTarget() return null alertify hung on the 2nd call.\n\nIf needed I will build a small repro page.\n\nThanks\nMatty\n\nOn Tue, May 20, 2014 at 4:24 PM, Matty Roter matty.roter@gmail.com wrote:\n\n> Hi,\n> \n> No - could not replicate on the demo page.\n> I will soon send something.\n> \n> Many Tanks\n> Matty\n> \n> On Tue, May 20, 2014 at 4:15 PM, Fabien Doiron notifications@github.comwrote:\n> \n> > Any chance you could provide a code sample with the error? I'm trying to\n> > reproduce but can't - also does it happen on the demo pagehttp://fabien-d.github.io/alertify.js/\n> > ?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/223#issuecomment-43623377\n> > .\n> \n> ## \n> \n> Matty\n\n## \n\nMatty\n. Hi,\n\nPlease note that I get the following errors:\nUncaught TypeError: Cannot read property 'focus' of undefined alertify.min.js:2\nq.setFocus alertify.min.js:2\nd alertify.min.js:2\n. Hi,\n\nAny ETA?\n\nThanks\nMatty\n\nOn Tue, May 20, 2014 at 5:27 PM, Matty Roter matty.roter@gmail.com wrote:\n\n> Hi,\n> \n> To start I include part of the \"production code\" and 2 sample run video\n> recordings of running the code (with/without alertify).\n> \n> Look on the target_dialog and getTarget().\n> If getTarget() return null alertify hung on the 2nd call.\n> \n> If needed I will build a small repro page.\n> \n> Thanks\n> Matty\n> \n> On Tue, May 20, 2014 at 4:24 PM, Matty Roter matty.roter@gmail.com\n> wrote:\n> \n> > Hi,\n> > \n> > No - could not replicate on the demo page.\n> > I will soon send something.\n> > \n> > Many Tanks\n> > Matty\n> > \n> > On Tue, May 20, 2014 at 4:15 PM, Fabien Doiron notifications@github.com\n> > wrote:\n> > \n> > > Any chance you could provide a code sample with the error? I'm trying to\n> > > reproduce but can't - also does it happen on the demo page\n> > > http://fabien-d.github.io/alertify.js/?\n> > > \n> > > \u2014\n> > > Reply to this email directly or view it on GitHub\n> > > https://github.com/fabien-d/alertify.js/issues/223#issuecomment-43623377\n> > > .\n> > \n> > ## \n> > \n> > Matty\n> \n> ## \n> \n> Matty\n\n## \n\nMatty\n. Hi,\n\nThe only alertify calls I have in jquery initialization are:\n alertify.set({ labels: {\n    ok     : \"\u05d0\u05e9\u05e8\",\n    cancel : \"\u05d1\u05d8\u05dc\"\n},\nbuttonReverse : true,\nbuttonFocus   : \"cancel\"\n});\n\nCan this cause the problem?\nWhere is the correct place to place it to avoid the problem?\n\nThanks\nMatty\n\nOn Sun, May 10, 2015 at 3:32 AM, theinzer notifications@github.com wrote:\n\n> I noticed this issue when the alertify call is placed in the following\n> jquery initialization call:\n> \n> $(function () {..}\n> \n> Alertify calls that are made in normal code body do not experience this\n> issue. Don't know if this helps.\n> \n> Tom\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/fabien-d/alertify.js/issues/223#issuecomment-100566811\n> .\n\n## \n\nMatty\n. ### Describe the issue you are having\n\nThe browser hang the 2nd time I call alertify.alert(\"message\") from\nwithin a modal dialog. After reloading the page it will work (OK\nbutton will close the alert dialog)once.\n\n### What version of alertify.js are you using\n\nUsing version 0.3.11\n\n### Steps to reproduce the issue\n1. Open an edit modal dialog and make an input error (e.g. don't\n   select a required value)\n2. My validation call alertify.alert(\"missing/invalid data\")\n3. The use click OK button and the alert dialog is closed.\n4. The user submit the same input again (with the error)\n5. Now I call alertify.alert(\"missing/invalid data\")for the 2nd time\n6. The alert dialog is displayed but clicking on the OK button does\n   nothing, the browser hung.\n7. I use reload or back to recover...\n\n(default alert is working as expected)\n\n### What browser(s) is this happening in\n\nBoth Chrome and IE 10 on windows 8\n\nThank you\n\nMatty\n\nOn Sun, May 11, 2014 at 5:30 PM, Fabien Doiron notifications@github.comwrote:\n\n> Could you provide more info? There is an opening issueshttps://github.com/fabien-d/alertify.js/wiki/Opening-Issueswiki entry on providing the information needed to quickly resolve the\n> issue. I unfortunately don't have too much free time at the moment, and the\n> more information you provide, the easier it will be for me (or someone\n> else) to help you out.\n> \n> Example template from the wiki. Cheers\n> \n> ### Describe the issue you are having[insert description]\n> \n> ### What version of alertify.js are you using[insert version]\n> \n> ### Steps to reproduce the issue\n> 1. [insert steps]\n> 2. [insert steps]\n>    ### What browser(s) is this happening in[insert browsers]\n>    ### Link to reproduced issue[insert link]\n>    ### Screenshots (if applicable)[insert screenshots]\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/223#issuecomment-42771938\n> .\n\n## \n\nMatty\n. It seems to work great (few invocations) with confirm dialog but not with alert.\nAnything I'm doing wrong? \nAny chance you'll be looking on it in the next few days?\nThanks\n. Hi,\n\nNo - could not replicate on the demo page.\nI will soon send something.\n\nMany Tanks\nMatty\n\nOn Tue, May 20, 2014 at 4:15 PM, Fabien Doiron notifications@github.comwrote:\n\n> Any chance you could provide a code sample with the error? I'm trying to\n> reproduce but can't - also does it happen on the demo pagehttp://fabien-d.github.io/alertify.js/\n> ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/223#issuecomment-43623377\n> .\n\n## \n\nMatty\n. Hi,\n\nTo start I include part of the \"production code\" and 2 sample run video\nrecordings of running the code (with/without alertify).\n\nLook on the target_dialog and getTarget().\nIf getTarget() return null alertify hung on the 2nd call.\n\nIf needed I will build a small repro page.\n\nThanks\nMatty\n\nOn Tue, May 20, 2014 at 4:24 PM, Matty Roter matty.roter@gmail.com wrote:\n\n> Hi,\n> \n> No - could not replicate on the demo page.\n> I will soon send something.\n> \n> Many Tanks\n> Matty\n> \n> On Tue, May 20, 2014 at 4:15 PM, Fabien Doiron notifications@github.comwrote:\n> \n> > Any chance you could provide a code sample with the error? I'm trying to\n> > reproduce but can't - also does it happen on the demo pagehttp://fabien-d.github.io/alertify.js/\n> > ?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHubhttps://github.com/fabien-d/alertify.js/issues/223#issuecomment-43623377\n> > .\n> \n> ## \n> \n> Matty\n\n## \n\nMatty\n. Hi,\n\nPlease note that I get the following errors:\nUncaught TypeError: Cannot read property 'focus' of undefined alertify.min.js:2\nq.setFocus alertify.min.js:2\nd alertify.min.js:2\n. Hi,\n\nAny ETA?\n\nThanks\nMatty\n\nOn Tue, May 20, 2014 at 5:27 PM, Matty Roter matty.roter@gmail.com wrote:\n\n> Hi,\n> \n> To start I include part of the \"production code\" and 2 sample run video\n> recordings of running the code (with/without alertify).\n> \n> Look on the target_dialog and getTarget().\n> If getTarget() return null alertify hung on the 2nd call.\n> \n> If needed I will build a small repro page.\n> \n> Thanks\n> Matty\n> \n> On Tue, May 20, 2014 at 4:24 PM, Matty Roter matty.roter@gmail.com\n> wrote:\n> \n> > Hi,\n> > \n> > No - could not replicate on the demo page.\n> > I will soon send something.\n> > \n> > Many Tanks\n> > Matty\n> > \n> > On Tue, May 20, 2014 at 4:15 PM, Fabien Doiron notifications@github.com\n> > wrote:\n> > \n> > > Any chance you could provide a code sample with the error? I'm trying to\n> > > reproduce but can't - also does it happen on the demo page\n> > > http://fabien-d.github.io/alertify.js/?\n> > > \n> > > \u2014\n> > > Reply to this email directly or view it on GitHub\n> > > https://github.com/fabien-d/alertify.js/issues/223#issuecomment-43623377\n> > > .\n> > \n> > ## \n> > \n> > Matty\n> \n> ## \n> \n> Matty\n\n## \n\nMatty\n. Hi,\n\nThe only alertify calls I have in jquery initialization are:\n alertify.set({ labels: {\n    ok     : \"\u05d0\u05e9\u05e8\",\n    cancel : \"\u05d1\u05d8\u05dc\"\n},\nbuttonReverse : true,\nbuttonFocus   : \"cancel\"\n});\n\nCan this cause the problem?\nWhere is the correct place to place it to avoid the problem?\n\nThanks\nMatty\n\nOn Sun, May 10, 2015 at 3:32 AM, theinzer notifications@github.com wrote:\n\n> I noticed this issue when the alertify call is placed in the following\n> jquery initialization call:\n> \n> $(function () {..}\n> \n> Alertify calls that are made in normal code body do not experience this\n> issue. Don't know if this helps.\n> \n> Tom\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/fabien-d/alertify.js/issues/223#issuecomment-100566811\n> .\n\n## \n\nMatty\n. ",
    "theinzer": "I noticed this issue when the alertify call is placed in the following jquery initialization call:\n\n$(function () {..}   \n\nAlertify calls that are made in normal code body do not experience this issue.  Don't know if this helps.\n\nTom\n. Hi Matty...\n\u00a0\nI did find a work-around in an obscure post that fixes the problem.\u00a0 If you put the line\n\u00a0\n\n$('[id^=alertify]').remove(); \n\u00a0\n\ndirectly BEFORE the alertify.alert()\u00a0call, it works.\u00a0 It must clear something out.\u00a0 Give it a shot.\n\u00a0\n\nTom\n\u00a0\n\nTom Heinzer\nSolution Architect, Chemical Engineer\n\n\u00a0\nMichael Thomas Group, Inc.\n541 45th St.\nSacramento, CA 95819\n916.995.1156\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n-------- Original Message --------Subject: Re: [alertify.js] alert hung on second invocation (#223)From: Matty Roter notifications@github.comDate: Sun, May 10, 2015 2:24 amTo: \"fabien-d/alertify.js\" alertify.js@noreply.github.comCc: theinzer tom@michaelthomasgis.comHi,The only alertify calls I have in jquery initialization are:alertify.set({ labels: {ok : \"\u05d0\u05e9\u05e8\",cancel : \"\u05d1\u05d8\u05dc\"},buttonReverse : true,buttonFocus : \"cancel\"});Can this cause the problem?Where is the correct place to place it to avoid the problem?ThanksMattyOn Sun, May 10, 2015 at 3:32 AM, theinzer notifications@github.com wrote:> I noticed this issue when the alertify call is placed in the following> jquery initialization call:>> $(function () {..}>> Alertify calls that are made in normal code body do not experience this> issue. Don't know if this helps.>> Tom>> \u2014> Reply to this email directly or view it on GitHub> https://github.com/fabien-d/alertify.js/issues/223#issuecomment-100566811&gt; .>-- Matty\n\u2014Reply to this email directly or view it on GitHub.\n. I noticed this issue when the alertify call is placed in the following jquery initialization call:\n\n$(function () {..}   \n\nAlertify calls that are made in normal code body do not experience this issue.  Don't know if this helps.\n\nTom\n. Hi Matty...\n\u00a0\nI did find a work-around in an obscure post that fixes the problem.\u00a0 If you put the line\n\u00a0\n\n$('[id^=alertify]').remove(); \n\u00a0\n\ndirectly BEFORE the alertify.alert()\u00a0call, it works.\u00a0 It must clear something out.\u00a0 Give it a shot.\n\u00a0\n\nTom\n\u00a0\n\nTom Heinzer\nSolution Architect, Chemical Engineer\n\n\u00a0\nMichael Thomas Group, Inc.\n541 45th St.\nSacramento, CA 95819\n916.995.1156\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n-------- Original Message --------Subject: Re: [alertify.js] alert hung on second invocation (#223)From: Matty Roter notifications@github.comDate: Sun, May 10, 2015 2:24 amTo: \"fabien-d/alertify.js\" alertify.js@noreply.github.comCc: theinzer tom@michaelthomasgis.comHi,The only alertify calls I have in jquery initialization are:alertify.set({ labels: {ok : \"\u05d0\u05e9\u05e8\",cancel : \"\u05d1\u05d8\u05dc\"},buttonReverse : true,buttonFocus : \"cancel\"});Can this cause the problem?Where is the correct place to place it to avoid the problem?ThanksMattyOn Sun, May 10, 2015 at 3:32 AM, theinzer notifications@github.com wrote:> I noticed this issue when the alertify call is placed in the following> jquery initialization call:>> $(function () {..}>> Alertify calls that are made in normal code body do not experience this> issue. Don't know if this helps.>> Tom>> \u2014> Reply to this email directly or view it on GitHub> https://github.com/fabien-d/alertify.js/issues/223#issuecomment-100566811&gt; .>-- Matty\n\u2014Reply to this email directly or view it on GitHub.\n. ",
    "abishekrsrikaanth": "To be frank, I prefer components that are a no brainer when it comes to setting it up. Personally I prefer to do this when I create my components as well for the following reasons.\n1. Helps have complete control within the `css` and `js` that is part of the component.\n2. Everybody wants to customize a component to have look and feel based on their app. Having the HTML to be setup separately gives the end developer to make changes to the HTML, which can sometimes make the component to not work because of the changes. And developers will just create issues on github that it is not working because of the customization that they did. It is very difficult for the owner to just figure out why some developer is facing an issue when it is not an issue at all.\n\nThis is my opinion. But I am open to other developers views as well.\n. To be frank, I prefer components that are a no brainer when it comes to setting it up. Personally I prefer to do this when I create my components as well for the following reasons.\n1. Helps have complete control within the `css` and `js` that is part of the component.\n2. Everybody wants to customize a component to have look and feel based on their app. Having the HTML to be setup separately gives the end developer to make changes to the HTML, which can sometimes make the component to not work because of the changes. And developers will just create issues on github that it is not working because of the customization that they did. It is very difficult for the owner to just figure out why some developer is facing an issue when it is not an issue at all.\n\nThis is my opinion. But I am open to other developers views as well.\n. ",
    "andyhot": "Perhaps js can look for #alertifyDialog and if node isn't found, inject it via js\n. Perhaps js can look for #alertifyDialog and if node isn't found, inject it via js\n. ",
    "yanneves": "awesome, cheers\n\nreason for asking is your library is up on [cdnjs](https://github.com/cdnjs/cdnjs), and we're rolling out auto-updates via npm to reduce maintenance overhead\n. awesome, cheers\n\nreason for asking is your library is up on [cdnjs](https://github.com/cdnjs/cdnjs), and we're rolling out auto-updates via npm to reduce maintenance overhead\n. ",
    "voithos": "I am also seeing this issue in Chrome 35 running on Linux Mint 14 (based on Ubuntu 12.10).\n. I am also seeing this issue in Chrome 35 running on Linux Mint 14 (based on Ubuntu 12.10).\n. ",
    "napping": "Hey I'm having the same issue.  I am running Chrome on Ubuntu 12.04.\n\nWorks beautifully on Firefox, though.\n. Hey I'm having the same issue.  I am running Chrome on Ubuntu 12.04.\n\nWorks beautifully on Firefox, though.\n. ",
    "SamRockwellBentley": "Looks like GitHub's XSS prevention delimited my HTML. For the following pastes, the HTML symbol for less than should be used. This symbol is expressed as ampersand lower-case L lower-case T semicolon.\n\nto reproduce this is to try entering the following into the console of an environment properly set up with alertify.js:\n\nalertify.success('<')\n\nThe above code will produce the following:\n\n<\n. Looks like GitHub's XSS prevention delimited my HTML. For the following pastes, the HTML symbol for less than should be used. This symbol is expressed as ampersand lower-case L lower-case T semicolon.\n\nto reproduce this is to try entering the following into the console of an environment properly set up with alertify.js:\n\nalertify.success('<')\n\nThe above code will produce the following:\n\n<\n. ",
    "QWp6t": "Have you tried asking on MozillaZine? I think they'd be more helpful than Github.\n. Have you tried asking on MozillaZine? I think they'd be more helpful than Github.\n. ",
    "VinceVDB": "Not yet... I'm still trying to figure it out myself :)\nI'll ask over there if I really can't find it.\n. Not yet... I'm still trying to figure it out myself :)\nI'll ask over there if I really can't find it.\n. ",
    "Guiming": "I also came up this question..... Did you get feedback or figure out a work around?\n. I also came up this question..... Did you get feedback or figure out a work around?\n. ",
    "reduxionist": "That's a sensible course of action, thanks for responding. Just to\nreiterate for the record though, it's not my fork, I've no connection\nto the author(s) in any way; it's just the one I found most worthwhile\nout of the available forks of significance. (re-) Closes #235.\n. That's a sensible course of action, thanks for responding. Just to\nreiterate for the record though, it's not my fork, I've no connection\nto the author(s) in any way; it's just the one I found most worthwhile\nout of the available forks of significance. (re-) Closes #235.\n. ",
    "jmcgdz": "@fabien-d Great thanks. Not really sure how I missed that lol. Must have had some filter on my search for 'transition'.\n. @fabien-d Great thanks. Not really sure how I missed that lol. Must have had some filter on my search for 'transition'.\n. ",
    "Kambaa": "Not working with your given explanation. However it works like this..\r\n```\r\nvar testAlertifyVar = alertify.log(\"Will stay until clicked\", \"\", 0);\r\n\t\t$('#closeFromApiTest').on('click',function(){\r\n\t\t\ttestAlertifyVar.closeNow(\"show\");\r\n\t\t})\r\n```\r\nshow parameter is the last part of the classname of an opened notification. (alertify-log-show's show part) This way all of the opened notification closes(Haah, so much more features needed in this project... Owner, where are you??? please come back... :)   ). Unique id visibility problem occured. Cancelled this request. Will Edit later.... Not working with your given explanation. However it works like this..\r\n```\r\nvar testAlertifyVar = alertify.log(\"Will stay until clicked\", \"\", 0);\r\n\t\t$('#closeFromApiTest').on('click',function(){\r\n\t\t\ttestAlertifyVar.closeNow(\"show\");\r\n\t\t})\r\n```\r\nshow parameter is the last part of the classname of an opened notification. (alertify-log-show's show part) This way all of the opened notification closes(Haah, so much more features needed in this project... Owner, where are you??? please come back... :)   ). Unique id visibility problem occured. Cancelled this request. Will Edit later.... ",
    "jimaek": "We can setup auto-updates which will fix this issue https://github.com/jsdelivr/jsdelivr#auto-updating\nYou can do it yourself too\n. The new backend is live. It pulls files directly from npm and github https://github.com/jsdelivr/jsdelivr#usage\r\n\r\nExample https://cdn.jsdelivr.net/npm/jquery@3.1.1\r\nExample directory listing https://cdn.jsdelivr.net/npm/jquery@3.1.1/. We can setup auto-updates which will fix this issue https://github.com/jsdelivr/jsdelivr#auto-updating\nYou can do it yourself too\n. The new backend is live. It pulls files directly from npm and github https://github.com/jsdelivr/jsdelivr#usage\r\n\r\nExample https://cdn.jsdelivr.net/npm/jquery@3.1.1\r\nExample directory listing https://cdn.jsdelivr.net/npm/jquery@3.1.1/. ",
    "facundofarias": "I've done it here: https://github.com/jsdelivr/jsdelivr/pull/1375, thanks @jimaek \nHowever, I don't know why some kind of robot said the structure is not correct?\n. I've done it here: https://github.com/jsdelivr/jsdelivr/pull/1375, thanks @jimaek \nHowever, I don't know why some kind of robot said the structure is not correct?\n. ",
    "christrain91": "Use `event.preventDefault()`\n. Use `event.preventDefault()`\n. ",
    "luissalamank": "I have the same problem, I tried `event.preventDefault();` but doesn't work for me.\n. I have the same problem, I tried `event.preventDefault();` but doesn't work for me.\n. ",
    "DeWetdeJager": "Try this\n\n$(\"#confirm\").on( 'click', function (e) {\n        if(e.preventDefault){e.preventDefault();}\n        reset();\n        alertify.confirm(\"This is a confirm dialog\", function (e) {\n            if (e) {\n                alertify.success(\"You've clicked OK\");\n            } else {\n                alertify.error(\"You've clicked Cancel\");\n            }\n        });\n    });\n. Have you tried the following:\n\nChange the button's type to \"button\". Then in your code:\n\nif (e) {\n            $(\"#category-form\").submit();\n            alertify.success(\"Category was saved.\")\n_form.submit();_\n        } else {\n\n```\n    }\n```\n. Try this\n\n$(\"#confirm\").on( 'click', function (e) {\n        if(e.preventDefault){e.preventDefault();}\n        reset();\n        alertify.confirm(\"This is a confirm dialog\", function (e) {\n            if (e) {\n                alertify.success(\"You've clicked OK\");\n            } else {\n                alertify.error(\"You've clicked Cancel\");\n            }\n        });\n    });\n. Have you tried the following:\n\nChange the button's type to \"button\". Then in your code:\n\nif (e) {\n            $(\"#category-form\").submit();\n            alertify.success(\"Category was saved.\")\n_form.submit();_\n        } else {\n\n```\n    }\n```\n. ",
    "akupiec": ":+1: \n. :+1: \n. ",
    "HTMLGuyLLC": "I'll be adding growl style alerts in the future.\n\nYou can use any animation you want including a simple fade. Animate.css is used.\n\nI used to use Alertify for growl style alerts and want to add this to jAlert soon!\n. Just updated the default to fadeInUp and fadeOutDown because I agree, they were a bit much.\n. I'll post here again once it's been added. Do you have any specific requests on how they should work? I'll take your suggestions into consideration.\n. Awesome, thanks for the input!\n. I'll be adding growl style alerts in the future.\n\nYou can use any animation you want including a simple fade. Animate.css is used.\n\nI used to use Alertify for growl style alerts and want to add this to jAlert soon!\n. Just updated the default to fadeInUp and fadeOutDown because I agree, they were a bit much.\n. I'll post here again once it's been added. Do you have any specific requests on how they should work? I'll take your suggestions into consideration.\n. Awesome, thanks for the input!\n. ",
    "jehrenzweig": "@kaansoral I'm curious about how you fixed the full-page reflaw/redraw issue on your end.  Any chance you could share a code snippet?. @kaansoral I'm curious about how you fixed the full-page reflaw/redraw issue on your end.  Any chance you could share a code snippet?. ",
    "bradberger": "Sorry, wrong place. Made a mistake, should have not been in this repo.\n. Sorry, wrong repo again :tired_face: \n. Sorry, wrong place. Made a mistake, should have not been in this repo.\n. Sorry, wrong repo again :tired_face: \n. ",
    "usopan": "@Maopy Is there any obvious answer to this?\n. @Maopy Is there any obvious answer to this?\n. ",
    "rexgama": "closed but no answer at all?\n. closed but no answer at all?\n. ",
    "Kondax": "@kaansoral Yeah, will do that. \n\nWill update this soon.\n. @kaansoral Yeah, will do that. \n\nWill update this soon.\n. ",
    "laterbreh": "I also noticed in the issues #248 mentioned this.\n. I also noticed in the issues #248 mentioned this.\n. ",
    "thelfensdrfer": "https://github.com/fabien-d/alertify.js/blob/master/README.md#where-is-it-being-tested. https://github.com/fabien-d/alertify.js/blob/master/README.md#where-is-it-being-tested. ",
    "TeeeeJay": "Thank you so much for your reply yes its working i guess, but  i have something wrong in my php as when i submit the form i cant get the POST to query the DB, maybe i will just use the browser alert with return true and return false better for my time.\r\nThank you so much again.. Fabien it worked Perfectlyyy Thank you so muchhh it was my mistake first the things you corrected for me then in submitting the forms, i had so many forms on a single page it was a mess \r\nThank you so much again you are the best. Thank you so much for your reply yes its working i guess, but  i have something wrong in my php as when i submit the form i cant get the POST to query the DB, maybe i will just use the browser alert with return true and return false better for my time.\r\nThank you so much again.. Fabien it worked Perfectlyyy Thank you so muchhh it was my mistake first the things you corrected for me then in submitting the forms, i had so many forms on a single page it was a mess \r\nThank you so much again you are the best. "
}