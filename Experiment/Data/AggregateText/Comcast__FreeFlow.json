{
    "rratmansky": "starting on this\n. starting\n. Working on this...\n. We decided to let the layouts handle this.  In testing it with the app, it appears to work just fine.  One thing to consider, should we animate anything that is in the buffer zone (ie. off screen that will not be moving on screen)\n. Potentially.  The concern I have at the moment is not the memory footprint (which is still relatively small), but the performance.  Since this performs slower (binary search instead of direct lookup, array adds/removes, etc...) I would think the marginal memory benefits are minimal in comparison to the performance setbacks.  Have we done a MAT analysis of the memory to see if that is a problem yet?\n. Hi kbala,\n\nThe preferred way to handle clicks on views would be to implement an AbsLayoutContainer.OnItemClickListener.  The click listener will call receive a call back when an item is clicked providing both the parent FreeFlowContainer and the FreeFlowItem proxy for the view that was clicked.  Inside the proxy should be all of the information you would need for building your intent (the data object and a reference to the view).\n\nYou could also set the click listener in your sectioned adapter.  Just be sure to reset it on the recycled views.  Be aware, there are more pitfalls this way.\n\nLet me know if you need more information than this.\n\nRick\n. starting on this\n. starting\n. Working on this...\n. We decided to let the layouts handle this.  In testing it with the app, it appears to work just fine.  One thing to consider, should we animate anything that is in the buffer zone (ie. off screen that will not be moving on screen)\n. Potentially.  The concern I have at the moment is not the memory footprint (which is still relatively small), but the performance.  Since this performs slower (binary search instead of direct lookup, array adds/removes, etc...) I would think the marginal memory benefits are minimal in comparison to the performance setbacks.  Have we done a MAT analysis of the memory to see if that is a problem yet?\n. Hi kbala,\n\nThe preferred way to handle clicks on views would be to implement an AbsLayoutContainer.OnItemClickListener.  The click listener will call receive a call back when an item is clicked providing both the parent FreeFlowContainer and the FreeFlowItem proxy for the view that was clicked.  Inside the proxy should be all of the information you would need for building your intent (the data object and a reference to the view).\n\nYou could also set the click listener in your sectioned adapter.  Just be sure to reset it on the recycled views.  Be aware, there are more pitfalls this way.\n\nLet me know if you need more information than this.\n\nRick\n. ",
    "arpit": "Duplicate\n. Fixed by @rratmansky in f82391f4568177c505e71c2d6f834c45ac4c8edd\n. Working on this.\n. Fixed in 4f879fc9b28906ad694020d96c8de01caa5705ae\n. Can you review the [comment I made](https://github.com/Comcast/FreeFlow/commit/c111f4d9e39341ba79646753865cc75fc1327fed#commitcomment-4763089) against the commit? We shouldn't just arbitrarily add a view's worth of cache.\n. Fixed\n. @Kusand can you check if this still happens with the latest build? I think I may have fixed the issue here.\n. I think this is fixed now. Let me know if it happens again\n. @JakeWharton @MichaelEvans I am ridiculously n00b-y about Gradle and build systems in general. Hoping people more versed in that can lead those efforts :)\n. @dbachelder I am waiting on a Comcast/Apache contributor document that is being finalized that will allow me to pull @JakeWharton's changes. Meanwhile @nt4cats has started looking into it. Hopefully we'll be able to merge the changes by the end of this week (sorry for the delay)\n. So I didn't merge this as is since that would have resulted in a lot of files moved around to conform to Android Studio but would break Eclipse based projects. I have committed a version that works with both Eclipse and Android Studio. See f014584c9fb981b9fa4d78538dfeb32d2abe4ead. I am still new to Gradle and Android Studio so let me know if there is a better way to do this.\n. @yelinaung whoops, thanks for the heads up. I did use a settings.gradle file like you mention but an overaggressive gitignore file prevented that from being checked in. I have checked it in now but I don't have the gradlew, gradle.bat or gradle.properties file in there. A PR around that would help.\n. @yelinaung if you do send a PR, you need to sign the contribution doc thats in the repo. Check out my comment [here](https://plus.google.com/+ArpitMathur/posts/jAu5F1PqSjA)\n. @yelinaung its a handwritten sign :) ( going to have it all electronic soon but right now its a little analog). I have used PDFPen connected to Google Drive to just sign such docs on my computer.\n. @andrewgiang yeah, it is. We are working on it, and from what I understand we may be pretty close to deploying it. This project is just a little ahead of that process.\n. Hi Ye, just send it to me ( arpit_mathur@cable.comcast.com )\n:)\n\nOn Wed, Apr 16, 2014 at 3:46 PM, Ye Lin Aung notifications@github.comwrote:\n\n> @arpit https://github.com/arpit Hello, Arpit, I've prepared the form.\n> To whom, do I have to submit ? In the mean time, I will submit the PR.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/Comcast/FreeFlow/pull/26#issuecomment-40643368\n> .\n. Seems done. Let me know if there are any references hanging around.\n. @jerrellmardis  <code>shouldRecalculateScrollWhenComputingLayout</code> only effects if scrollpositions need to change when data is invalidated, which is usually not the case (in say an endless scroll implementation, you should be able to invalidate data to load more if the user is reaching the end of the collection, but don't want to change the viewport).\n\nThere may be a bug when say you set a new layout and then immediately invalidate the data which then doesn't compute the right viewport. I can look at that. Meanwhile can you share your code if thats possible?\n. @jerrellmardis I just added HLayout to the Artbook project, seems to work at least there. Can you share some code where it does seem to be broken?\n. Just to test it, I copied the QuiltLayout class to my artbook project and that seems to work, including scrolling. So your loadData() does some async thing. So where are you calling invalidateData() ?\n. Is the container the entire width and height of the activity?\n. I am not exactly sure what your layout is doing, kinda fuzzy on what canvas.clippath does. If you replace clippath line with canvas.draw(path, paint), you'll see that the rectangles are being correctly drawn.\nMy sample project uses a slight variation of your cell class that just draws based on the rects\nhttps://dl.dropboxusercontent.com/u/442650/FreeFlowTest2.zip. \n\nSeems to work.\n. Btw, yeah looks like setting margins and padding will clip your content. I thought margin and padding values were left to the View/ViewGroups to interpret, but looks like its it determines the canvas that a view or a viewgroup is given. So if you draw without keeping the the padding/margin values in mind, you'll get clipped rectangles.\n. I am not seeing any clipping in my version\nOn Mar 1, 2014 1:32 AM, \"Jerrell Mardis\" notifications@github.com wrote:\n\n> Are you seeing clipped content even with your RoundedRelativeLayout\n> variation? So changing the layout to account for the margins would solve\n> the issue?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/Comcast/FreeFlow/issues/33#issuecomment-36417836\n> .\n. Yes. The zip of my entire project with your layout is linked in my previous\ncomment\nOn Mar 1, 2014 1:44 AM, \"Jerrell Mardis\" notifications@github.com wrote:\n\n> Even with using the layout above?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/Comcast/FreeFlow/issues/33#issuecomment-36418014\n> .\n. @mingfai this looks great. To get your contributions in, I need you to sign a Contributors License Agreement (its pretty standard stuff, based on the [Apache Contributor License Agreement](https://www.apache.org/licenses/icla.txt). \n\nIf you can sign, scan and email me the CLA at this [link](https://github.com/Comcast/FreeFlow/blob/master/Comcast%20Contributor%20License%20Agreement%20%2803-07-14%29.pdf) I can go ahead and pull in your changes.\n\nThanks\n. @mingfai I can, though it would be ideal if I pulled your request. Personally would love to see more community commits to the repo and its a useful patch that you should be credited for. I know it could be a pain to print/scan a document with legalese on it, but would be awesome if you did.\n\nIf you'd still rather not, let me know. \n. I'll need some more info here, like the layouts etc. Please upload a compiling android project with this bug and I can take a look.\n. fixed. dataInvalidated now uses a \"shouldrecomputescroll\" flag\n. Fixed with af93de2eea323358ae9c7002\n. Fixed with af93de2eea323358ae9c7002\n. @jerrellmardis for the sake of API cleanliness, instead of the TouchModeListener, can we call that interface OnTouchModeChangedListener similar to [interface on ViewTreeObserver](http://developer.android.com/reference/android/view/ViewTreeObserver.OnTouchModeChangeListener.html) ? Seems a lot more explicit.\n. Done! Thanks @yelinaung and @JakeWharton :)\n. Just started on this. Hopefully will have it done soon (following [Chris Bane's instructions](https://github.com/chrisbanes/gradle-mvn-push) cause I dont really know much deploying to Maven Central)\n. So I tried it but got nowhere 2 days later. I am meeting a guy who is more\naware of the process this week. Stay tuned.\n\n-a\n\nOn Wed, Jul 9, 2014 at 4:41 AM, Dustin notifications@github.com wrote:\n\n> Any update on this one? I saw some commits to prep for maven but couldn't\n> find anything on maven yet.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/Comcast/FreeFlow/issues/52#issuecomment-48443913.\n. @dustin, thanks. I was following that tutorial, but it didnt seem to work,\nmaybe cause Comcast already has repositories there. Hopefully I can get\nthis sorted this week\n\nOn Wed, Jul 9, 2014 at 12:15 PM, Dustin notifications@github.com wrote:\n\n> @arpit https://github.com/arpit if you follow the instructions on\n> https://github.com/chrisbanes/gradle-mvn-push it should work quite\n> easily. did push some internal projects to a local maven repo already.\n> unfortunately currently don't have the time to do it for FreeFlow myself\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/Comcast/FreeFlow/issues/52#issuecomment-48497108.\n. FreeFlow layouts do not support dynamic heights out of the box. You'll probably have to calculate ahead of time how much height the text is going to take and create the \"rects\" that are created during prepareLayout() of your layout with the appropriate heights.\n\nYou can use [Paint.getTextBounds()](http://developer.android.com/reference/android/graphics/Paint.html#getTextBounds%28char%5B%5D,%20int,%20int,%20android.graphics.Rect%29) method with the Paint set to a TextPaint with the right font.\n.  kbala, I created a quick project with a custom layout that shows you how you can do it. This layout only has texts but you can use the same idea for images + text.\n\nTake a look [here](https://github.com/arpit/MultiHeightFreeFlowList/)\n\ngetHeaderViewForItem wont work because these aren't really headers. You only get one header per section. \n. @kbala , since this is not really a framework \"issue\", please have these conversations on the [Google+ community](https://plus.google.com/communities/109232474194967955567). There may also be others that can help you there.\n. @kbala looks like this was indeed a bug. I think I have fixed it in the latest commit of FF. Can you check out the master branch and see if that fixes your issue.\n. @kbala attached screenshot from my [MultiheightFreeFlowList project](https://github.com/arpit/MultiHeightFreeFlowList)  shows that it seems to work ![here](https://photos-1.dropbox.com/t/0/AACbfyRJSbOpZnxtPbkkn4ibd43G_jzrHAKmSwBgZElI_g/12/442650/png/2048x1536/3/1402898400/0/2/Screen%20Shot%202014-06-16%20at%2012.42.57%20AM.png/xgimN92xbMfL_-ga9ZG2wXjWhUed1B7uN-cH5WjceCo). \n\nAre you sure you pulled the master branch of the repo with the fix? Can you verify that the MultilineFreeFlowList project works with your version of the repo?\n. @kbala yeah the longpress / contextmenu part of the code may not have been very thoroughly tested cause we don't have any apps that use that. A crash is still worrisome. Thanks for the feedback, I'll look into it and see what could be causing it.\n. @kbala can you open a new issue on this problem here? Include expected behaviour and observed behavior so that I can assign it to a developer? Anything else you can do to help will be appreciated (maybe if you add your code for context menu on a fork of the MultiLineFreeFlowList project?)\n. Sorry, I'll post this fix this weekend\n. @kbala @kiezkicker Can you please check if this commit fixes it on the latest version of FreeFlow?\n. @simon-heinen can you please sign and scan/send the [Contributor License Agreement](https://github.com/Comcast/FreeFlow/blob/master/Comcast%20Contributor%20License%20Agreement%20%2803-07-14%29.pdf) so I can merge this? My email is arpit_mathur@cable.comcast.com.\n\nThanks\n. Ah, I see it. Good catch.\n\nAs mentioned in the Readme, can you please download and sign the [Contributor License agreement](https://github.com/Comcast/FreeFlow/blob/master/Comcast%20Contributor%20License%20Agreement%20%2803-07-14%29.pdf). Once I have that I can apply this fix.\n\nPlease scan and email to arpit_mathur@cable.comcast.com (there are a bunch of free scanner apps on the play store if you dont have a scanner)\n\nThanks\n. Look forward to your reply :)\nI didn't even know about clahub. Thats neat. I'll forward it to the internal open source team and see what they think. I'd like to move to that in the future, but lets do this one the old fashioned way ;)\n. @ypresto any luck with that document :). Sorry for being a pain, i really want to pull your fix in\n. :+1: Merged. Thanks.\n. Duplicate\n. Fixed by @rratmansky in f82391f4568177c505e71c2d6f834c45ac4c8edd\n. Working on this.\n. Fixed in 4f879fc9b28906ad694020d96c8de01caa5705ae\n. Can you review the [comment I made](https://github.com/Comcast/FreeFlow/commit/c111f4d9e39341ba79646753865cc75fc1327fed#commitcomment-4763089) against the commit? We shouldn't just arbitrarily add a view's worth of cache.\n. Fixed\n. @Kusand can you check if this still happens with the latest build? I think I may have fixed the issue here.\n. I think this is fixed now. Let me know if it happens again\n. @JakeWharton @MichaelEvans I am ridiculously n00b-y about Gradle and build systems in general. Hoping people more versed in that can lead those efforts :)\n. @dbachelder I am waiting on a Comcast/Apache contributor document that is being finalized that will allow me to pull @JakeWharton's changes. Meanwhile @nt4cats has started looking into it. Hopefully we'll be able to merge the changes by the end of this week (sorry for the delay)\n. So I didn't merge this as is since that would have resulted in a lot of files moved around to conform to Android Studio but would break Eclipse based projects. I have committed a version that works with both Eclipse and Android Studio. See f014584c9fb981b9fa4d78538dfeb32d2abe4ead. I am still new to Gradle and Android Studio so let me know if there is a better way to do this.\n. @yelinaung whoops, thanks for the heads up. I did use a settings.gradle file like you mention but an overaggressive gitignore file prevented that from being checked in. I have checked it in now but I don't have the gradlew, gradle.bat or gradle.properties file in there. A PR around that would help.\n. @yelinaung if you do send a PR, you need to sign the contribution doc thats in the repo. Check out my comment [here](https://plus.google.com/+ArpitMathur/posts/jAu5F1PqSjA)\n. @yelinaung its a handwritten sign :) ( going to have it all electronic soon but right now its a little analog). I have used PDFPen connected to Google Drive to just sign such docs on my computer.\n. @andrewgiang yeah, it is. We are working on it, and from what I understand we may be pretty close to deploying it. This project is just a little ahead of that process.\n. Hi Ye, just send it to me ( arpit_mathur@cable.comcast.com )\n:)\n\nOn Wed, Apr 16, 2014 at 3:46 PM, Ye Lin Aung notifications@github.comwrote:\n\n> @arpit https://github.com/arpit Hello, Arpit, I've prepared the form.\n> To whom, do I have to submit ? In the mean time, I will submit the PR.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/Comcast/FreeFlow/pull/26#issuecomment-40643368\n> .\n. Seems done. Let me know if there are any references hanging around.\n. @jerrellmardis  <code>shouldRecalculateScrollWhenComputingLayout</code> only effects if scrollpositions need to change when data is invalidated, which is usually not the case (in say an endless scroll implementation, you should be able to invalidate data to load more if the user is reaching the end of the collection, but don't want to change the viewport).\n\nThere may be a bug when say you set a new layout and then immediately invalidate the data which then doesn't compute the right viewport. I can look at that. Meanwhile can you share your code if thats possible?\n. @jerrellmardis I just added HLayout to the Artbook project, seems to work at least there. Can you share some code where it does seem to be broken?\n. Just to test it, I copied the QuiltLayout class to my artbook project and that seems to work, including scrolling. So your loadData() does some async thing. So where are you calling invalidateData() ?\n. Is the container the entire width and height of the activity?\n. I am not exactly sure what your layout is doing, kinda fuzzy on what canvas.clippath does. If you replace clippath line with canvas.draw(path, paint), you'll see that the rectangles are being correctly drawn.\nMy sample project uses a slight variation of your cell class that just draws based on the rects\nhttps://dl.dropboxusercontent.com/u/442650/FreeFlowTest2.zip. \n\nSeems to work.\n. Btw, yeah looks like setting margins and padding will clip your content. I thought margin and padding values were left to the View/ViewGroups to interpret, but looks like its it determines the canvas that a view or a viewgroup is given. So if you draw without keeping the the padding/margin values in mind, you'll get clipped rectangles.\n. I am not seeing any clipping in my version\nOn Mar 1, 2014 1:32 AM, \"Jerrell Mardis\" notifications@github.com wrote:\n\n> Are you seeing clipped content even with your RoundedRelativeLayout\n> variation? So changing the layout to account for the margins would solve\n> the issue?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/Comcast/FreeFlow/issues/33#issuecomment-36417836\n> .\n. Yes. The zip of my entire project with your layout is linked in my previous\ncomment\nOn Mar 1, 2014 1:44 AM, \"Jerrell Mardis\" notifications@github.com wrote:\n\n> Even with using the layout above?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/Comcast/FreeFlow/issues/33#issuecomment-36418014\n> .\n. @mingfai this looks great. To get your contributions in, I need you to sign a Contributors License Agreement (its pretty standard stuff, based on the [Apache Contributor License Agreement](https://www.apache.org/licenses/icla.txt). \n\nIf you can sign, scan and email me the CLA at this [link](https://github.com/Comcast/FreeFlow/blob/master/Comcast%20Contributor%20License%20Agreement%20%2803-07-14%29.pdf) I can go ahead and pull in your changes.\n\nThanks\n. @mingfai I can, though it would be ideal if I pulled your request. Personally would love to see more community commits to the repo and its a useful patch that you should be credited for. I know it could be a pain to print/scan a document with legalese on it, but would be awesome if you did.\n\nIf you'd still rather not, let me know. \n. I'll need some more info here, like the layouts etc. Please upload a compiling android project with this bug and I can take a look.\n. fixed. dataInvalidated now uses a \"shouldrecomputescroll\" flag\n. Fixed with af93de2eea323358ae9c7002\n. Fixed with af93de2eea323358ae9c7002\n. @jerrellmardis for the sake of API cleanliness, instead of the TouchModeListener, can we call that interface OnTouchModeChangedListener similar to [interface on ViewTreeObserver](http://developer.android.com/reference/android/view/ViewTreeObserver.OnTouchModeChangeListener.html) ? Seems a lot more explicit.\n. Done! Thanks @yelinaung and @JakeWharton :)\n. Just started on this. Hopefully will have it done soon (following [Chris Bane's instructions](https://github.com/chrisbanes/gradle-mvn-push) cause I dont really know much deploying to Maven Central)\n. So I tried it but got nowhere 2 days later. I am meeting a guy who is more\naware of the process this week. Stay tuned.\n\n-a\n\nOn Wed, Jul 9, 2014 at 4:41 AM, Dustin notifications@github.com wrote:\n\n> Any update on this one? I saw some commits to prep for maven but couldn't\n> find anything on maven yet.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/Comcast/FreeFlow/issues/52#issuecomment-48443913.\n. @dustin, thanks. I was following that tutorial, but it didnt seem to work,\nmaybe cause Comcast already has repositories there. Hopefully I can get\nthis sorted this week\n\nOn Wed, Jul 9, 2014 at 12:15 PM, Dustin notifications@github.com wrote:\n\n> @arpit https://github.com/arpit if you follow the instructions on\n> https://github.com/chrisbanes/gradle-mvn-push it should work quite\n> easily. did push some internal projects to a local maven repo already.\n> unfortunately currently don't have the time to do it for FreeFlow myself\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/Comcast/FreeFlow/issues/52#issuecomment-48497108.\n. FreeFlow layouts do not support dynamic heights out of the box. You'll probably have to calculate ahead of time how much height the text is going to take and create the \"rects\" that are created during prepareLayout() of your layout with the appropriate heights.\n\nYou can use [Paint.getTextBounds()](http://developer.android.com/reference/android/graphics/Paint.html#getTextBounds%28char%5B%5D,%20int,%20int,%20android.graphics.Rect%29) method with the Paint set to a TextPaint with the right font.\n.  kbala, I created a quick project with a custom layout that shows you how you can do it. This layout only has texts but you can use the same idea for images + text.\n\nTake a look [here](https://github.com/arpit/MultiHeightFreeFlowList/)\n\ngetHeaderViewForItem wont work because these aren't really headers. You only get one header per section. \n. @kbala , since this is not really a framework \"issue\", please have these conversations on the [Google+ community](https://plus.google.com/communities/109232474194967955567). There may also be others that can help you there.\n. @kbala looks like this was indeed a bug. I think I have fixed it in the latest commit of FF. Can you check out the master branch and see if that fixes your issue.\n. @kbala attached screenshot from my [MultiheightFreeFlowList project](https://github.com/arpit/MultiHeightFreeFlowList)  shows that it seems to work ![here](https://photos-1.dropbox.com/t/0/AACbfyRJSbOpZnxtPbkkn4ibd43G_jzrHAKmSwBgZElI_g/12/442650/png/2048x1536/3/1402898400/0/2/Screen%20Shot%202014-06-16%20at%2012.42.57%20AM.png/xgimN92xbMfL_-ga9ZG2wXjWhUed1B7uN-cH5WjceCo). \n\nAre you sure you pulled the master branch of the repo with the fix? Can you verify that the MultilineFreeFlowList project works with your version of the repo?\n. @kbala yeah the longpress / contextmenu part of the code may not have been very thoroughly tested cause we don't have any apps that use that. A crash is still worrisome. Thanks for the feedback, I'll look into it and see what could be causing it.\n. @kbala can you open a new issue on this problem here? Include expected behaviour and observed behavior so that I can assign it to a developer? Anything else you can do to help will be appreciated (maybe if you add your code for context menu on a fork of the MultiLineFreeFlowList project?)\n. Sorry, I'll post this fix this weekend\n. @kbala @kiezkicker Can you please check if this commit fixes it on the latest version of FreeFlow?\n. @simon-heinen can you please sign and scan/send the [Contributor License Agreement](https://github.com/Comcast/FreeFlow/blob/master/Comcast%20Contributor%20License%20Agreement%20%2803-07-14%29.pdf) so I can merge this? My email is arpit_mathur@cable.comcast.com.\n\nThanks\n. Ah, I see it. Good catch.\n\nAs mentioned in the Readme, can you please download and sign the [Contributor License agreement](https://github.com/Comcast/FreeFlow/blob/master/Comcast%20Contributor%20License%20Agreement%20%2803-07-14%29.pdf). Once I have that I can apply this fix.\n\nPlease scan and email to arpit_mathur@cable.comcast.com (there are a bunch of free scanner apps on the play store if you dont have a scanner)\n\nThanks\n. Look forward to your reply :)\nI didn't even know about clahub. Thats neat. I'll forward it to the internal open source team and see what they think. I'd like to move to that in the future, but lets do this one the old fashioned way ;)\n. @ypresto any luck with that document :). Sorry for being a pain, i really want to pull your fix in\n. :+1: Merged. Thanks.\n. ",
    "Kusand": "This actually seems like it might've been a setItems? You're just extracting items out of the adapter here...\n. This actually seems like it might've been a setItems? You're just extracting items out of the adapter here...\n. ",
    "JakeWharton": "Gradle support and artifacts in Maven central are orthogonal. The build system for the library is irrelevant so long as artifacts make it to Maven central. We should press the latter.\n. I'm not saying we shouldn't push to build with Gradle! I threw up in my mouth a bit when I had to invoke `ant`.\n. I threw up in my mouth having to run `ant` for the first time in years :)\n. Trumps #24. Refs #23.\n. Also trumps #25.\n. I should note that this includes a change to the tests which decouple them from an activity. This can be contributed separately if you prefer atomic changes that only do a single thing.\n\nThis also goes, full-on Gradle meaning you can only use Android Studio or IntelliJ IDEA as an IDE. This also means the Ant-based build system and Eclipse can no longer consume the generated artifact. If that is unacceptable we can find a happy ground in between the two.\n. I do the very same (except with Sublime)\n. You are missing the `gradle/wrapper/gradle-wrapper.jar` and `gradle/wrapper/gradle-wrapper.properties` files.\n. Oh, sweet.\n. Gradle support and artifacts in Maven central are orthogonal. The build system for the library is irrelevant so long as artifacts make it to Maven central. We should press the latter.\n. I'm not saying we shouldn't push to build with Gradle! I threw up in my mouth a bit when I had to invoke `ant`.\n. I threw up in my mouth having to run `ant` for the first time in years :)\n. Trumps #24. Refs #23.\n. Also trumps #25.\n. I should note that this includes a change to the tests which decouple them from an activity. This can be contributed separately if you prefer atomic changes that only do a single thing.\n\nThis also goes, full-on Gradle meaning you can only use Android Studio or IntelliJ IDEA as an IDE. This also means the Ant-based build system and Eclipse can no longer consume the generated artifact. If that is unacceptable we can find a happy ground in between the two.\n. I do the very same (except with Sublime)\n. You are missing the `gradle/wrapper/gradle-wrapper.jar` and `gradle/wrapper/gradle-wrapper.properties` files.\n. Oh, sweet.\n. ",
    "MichaelEvans": "@JakeWharton I know, but I was curious about both (I probably should have just made two issues). \n. @JakeWharton I know, but I was curious about both (I probably should have just made two issues). \n. ",
    "dbachelder": "@arpit have you tried the PR from Jake?\n. No worries, thanks for the update!\n. :+1: \n. @arpit have you tried the PR from Jake?\n. No worries, thanks for the update!\n. :+1: \n. ",
    "tagrudev": ":+1:  thanks a lot\n. Is this going to be merged ? \n. :+1: \n. This seems to happen even when I am trying to switch from one layout to another hmm any ideas ?\n. :+1:  thanks a lot\n. Is this going to be merged ? \n. :+1: \n. This seems to happen even when I am trying to switch from one layout to another hmm any ideas ?\n. ",
    "yelinaung": "I was looking for this :thumbsup: \n. Is there any particular reason for not using gradle wrapper ?\n\nFor now, I see FreeFlow, examples/Artbook and examples/PhotoGrid are the gradle modules.\nFor Android Studio to detect the modules, I think we need a `settings.gradle` like\n\n``` groovy\ninclude ':FreeFlow'\ninclude ':examples:Artbook'\ninclude ':examples:PhotoGrid'\n```\n\nAnd few other standard `gradlew`, `gradle.bat` and `gradle.properties`\n\nI've tried that on my fork ( yelinaung/freeflow@8ab828bb49bd7136f031a0cbb858b3df7327b754 ) . It works perfectly with both Eclipse and Android Studio. If you like a PR, I will send. :smile: \n. @arpit  I would love to send the PR but I like to know something about signing the CLA. What do I have to fill at \u201cSigned\u201d filed at the PDF doc. Do I have to type \"I Agree\" or hand-written sign ?\n. @arpit Hello, Arpit, I've prepared the form. To whom, do I have to submit ? In the mean time, I will submit the PR. \n. @JakeWharton It's already on the master if I am not wrong. https://github.com/Comcast/FreeFlow/blob/master/gradle/wrapper/gradle-wrapper.jar\nhttps://github.com/Comcast/FreeFlow/blob/master/gradle/wrapper/gradle-wrapper.properties\n. I was looking for this :thumbsup: \n. Is there any particular reason for not using gradle wrapper ?\n\nFor now, I see FreeFlow, examples/Artbook and examples/PhotoGrid are the gradle modules.\nFor Android Studio to detect the modules, I think we need a `settings.gradle` like\n\n``` groovy\ninclude ':FreeFlow'\ninclude ':examples:Artbook'\ninclude ':examples:PhotoGrid'\n```\n\nAnd few other standard `gradlew`, `gradle.bat` and `gradle.properties`\n\nI've tried that on my fork ( yelinaung/freeflow@8ab828bb49bd7136f031a0cbb858b3df7327b754 ) . It works perfectly with both Eclipse and Android Studio. If you like a PR, I will send. :smile: \n. @arpit  I would love to send the PR but I like to know something about signing the CLA. What do I have to fill at \u201cSigned\u201d filed at the PDF doc. Do I have to type \"I Agree\" or hand-written sign ?\n. @arpit Hello, Arpit, I've prepared the form. To whom, do I have to submit ? In the mean time, I will submit the PR. \n. @JakeWharton It's already on the master if I am not wrong. https://github.com/Comcast/FreeFlow/blob/master/gradle/wrapper/gradle-wrapper.jar\nhttps://github.com/Comcast/FreeFlow/blob/master/gradle/wrapper/gradle-wrapper.properties\n. ",
    "andrewgiang": " @tagrudev @arpit already responded on issue #23 \n\n> @dbachelder I am waiting on a Comcast/Apache contributor document that is being finalized that will allow me to pull @JakeWharton's changes. Meanwhile @nt4cats has started looking into it. Hopefully we'll be able to merge the changes by the end of this week (sorry for the delay)\n. @arpit Not sure if this is viable for Comcast but, I would consider using a electronic form for the contribution doc [(sample)](https://spreadsheets.google.com/spreadsheet/viewform?formkey=dDViT2xzUHAwRkI3X3k5Z0lQM091OGc6MQ&ndplr=1).\n\nIt would make it a lot easier for developers to \"sign\" and contribute.\n. The blog link on that repo is invalid, you can find it here:\nhttp://chris.banes.me/2013/08/27/pushing-aars-to-maven-central/\n.  @tagrudev @arpit already responded on issue #23 \n\n> @dbachelder I am waiting on a Comcast/Apache contributor document that is being finalized that will allow me to pull @JakeWharton's changes. Meanwhile @nt4cats has started looking into it. Hopefully we'll be able to merge the changes by the end of this week (sorry for the delay)\n. @arpit Not sure if this is viable for Comcast but, I would consider using a electronic form for the contribution doc [(sample)](https://spreadsheets.google.com/spreadsheet/viewform?formkey=dDViT2xzUHAwRkI3X3k5Z0lQM091OGc6MQ&ndplr=1).\n\nIt would make it a lot easier for developers to \"sign\" and contribute.\n. The blog link on that repo is invalid, you can find it here:\nhttp://chris.banes.me/2013/08/27/pushing-aars-to-maven-central/\n. ",
    "glung": ":+1:\n. Since Android Studio 0.5.0 (released in march) Android Gradle 0.8 is not supported anymore. \nhttp://tools.android.com/recent/androidstudio050released\n\nIt may be better to move to 0.9+ before merging. \n\n```\n--- a/FreeFlow/build.gradle\n+++ b/FreeFlow/build.gradle\n@@ -1,6 +1,6 @@\n buildscript {\n   dependencies {\n-    classpath 'com.android.tools.build:gradle:0.8.+'\n+    classpath 'com.android.tools.build:gradle:0.9.+'\n   }\n }\n\ndiff --git a/examples/Artbook/build.gradle b/examples/Artbook/build.gradle\nindex dd1c5fe..02a62b1 100644\n--- a/examples/Artbook/build.gradle\n+++ b/examples/Artbook/build.gradle\n@@ -1,6 +1,6 @@\n buildscript {\n   dependencies {\n-    classpath 'com.android.tools.build:gradle:0.8.+'\n+    classpath 'com.android.tools.build:gradle:0.9.+'\n   }\n }\n\ndiff --git a/examples/PhotoGrid/build.gradle b/examples/PhotoGrid/build.gradle\nindex e51d098..1c7b676 100644\n--- a/examples/PhotoGrid/build.gradle\n+++ b/examples/PhotoGrid/build.gradle\n@@ -1,6 +1,6 @@\n buildscript {\n   dependencies {\n-    classpath 'com.android.tools.build:gradle:0.8.+'\n+    classpath 'com.android.tools.build:gradle:0.9.+'\n   }\n }\n```\n. :+1:\n. Since Android Studio 0.5.0 (released in march) Android Gradle 0.8 is not supported anymore. \nhttp://tools.android.com/recent/androidstudio050released\n\nIt may be better to move to 0.9+ before merging. \n\n```\n--- a/FreeFlow/build.gradle\n+++ b/FreeFlow/build.gradle\n@@ -1,6 +1,6 @@\n buildscript {\n   dependencies {\n-    classpath 'com.android.tools.build:gradle:0.8.+'\n+    classpath 'com.android.tools.build:gradle:0.9.+'\n   }\n }\n\ndiff --git a/examples/Artbook/build.gradle b/examples/Artbook/build.gradle\nindex dd1c5fe..02a62b1 100644\n--- a/examples/Artbook/build.gradle\n+++ b/examples/Artbook/build.gradle\n@@ -1,6 +1,6 @@\n buildscript {\n   dependencies {\n-    classpath 'com.android.tools.build:gradle:0.8.+'\n+    classpath 'com.android.tools.build:gradle:0.9.+'\n   }\n }\n\ndiff --git a/examples/PhotoGrid/build.gradle b/examples/PhotoGrid/build.gradle\nindex e51d098..1c7b676 100644\n--- a/examples/PhotoGrid/build.gradle\n+++ b/examples/PhotoGrid/build.gradle\n@@ -1,6 +1,6 @@\n buildscript {\n   dependencies {\n-    classpath 'com.android.tools.build:gradle:0.8.+'\n+    classpath 'com.android.tools.build:gradle:0.9.+'\n   }\n }\n```\n. ",
    "jerrellmardis": "Sure\n\nHere's the code where I setup the container/layout.\n\n``` @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        if (container == null) {\n            return null;\n        }\n\n        final View view = inflater.inflate(R.layout.fragment_feed, container, false);\n\n        ButterKnife.inject(this, view);\n\n        mFeedAdapter = new FeedAdapter(getActivity(), new ArrayList<QuiltPatch>(), mFeedType);\n        mFeedAdapter.setOnItemClickListener(FeedFragment.this);\n        custom = new QuiltLayout(getActivity());\n        mFreeFlowContainer.setLayout(custom);\n        mFreeFlowContainer.setAdapter(mFeedAdapter);\n\n        loadData();\n\n        return view;\n    }\n```\n\nHere's the QuiltLayout code\n\n```\npublic class QuiltLayout extends FreeFlowLayoutBase implements FreeFlowLayout {\n\n    private static final String TAG = \"QuiltLayout\";\n\n    private static final float REGULAR_HEIGHT_H_RATIO = .4f;\n    private static final float LARGE_HEIGHT_H_RATIO = .6f;\n\n    private Context mContext;\n    private HashMap<Object, FreeFlowItem> proxies = new HashMap<Object, FreeFlowItem>();\n    private Section s;\n    private int largeItemSide;\n    private int regularItemSide;\n\n    public QuiltLayout(Context context) {\n        mContext = context;\n    }\n\n    @Override\n    public void setDimensions(int measuredWidth, int measuredHeight) {\n        super.setDimensions(measuredWidth, measuredHeight);\n        regularItemSide = mContext.getResources().getDimensionPixelSize(R.dimen.patch_width_1);\n        largeItemSide = mContext.getResources().getDimensionPixelSize(R.dimen.patch_width_2);\n    }\n\n    @Override\n    public void prepareLayout() {\n        proxies.clear();\n\n        s = itemsAdapter.getSection(0);\n\n        for (int i = 0; i < s.getDataCount(); i++) {\n            FreeFlowItem freeFlowItem = new FreeFlowItem();\n            freeFlowItem.isHeader = false;\n            freeFlowItem.itemIndex = i;\n            freeFlowItem.itemSection = 0;\n            freeFlowItem.data = s.getDataAtIndex(i);\n\n            Rect r = new Rect();\n\n            switch (i) {\n                case 0:\n                    r.left = 0;\n                    r.top = 0;\n                    r.right = largeItemSide;\n                    r.bottom = height;\n                    break;\n                case 1:\n                    r.left = 2 * regularItemSide;\n                    r.top = 0;\n                    r.right = r.left + regularItemSide;\n                    r.bottom = Math.round(height * REGULAR_HEIGHT_H_RATIO);\n                    break;\n                case 2:\n                    r.left = 2 * regularItemSide;\n                    r.top = Math.round(height * REGULAR_HEIGHT_H_RATIO);\n                    r.right = r.left + regularItemSide;\n                    r.bottom = height;\n                    break;\n                case 3:\n                    r.left = 3 * regularItemSide;\n                    r.top = 0;\n                    r.right = r.left + regularItemSide;\n                    r.bottom = Math.round(height * LARGE_HEIGHT_H_RATIO);\n                    break;\n                case 4:\n                    r.left = 3 * regularItemSide;\n                    r.top = Math.round(height * LARGE_HEIGHT_H_RATIO);\n                    r.right = r.left + regularItemSide;\n                    r.bottom = height;\n                    break;\n                case 5:\n                    r.left = 2 * largeItemSide;\n                    r.top = Math.round(height * LARGE_HEIGHT_H_RATIO);\n                    r.right = r.left + regularItemSide;\n                    r.bottom = height;\n                    break;\n                default:\n                    r.left = i * largeItemSide;\n                    r.top = 0;\n                    r.right = r.left + regularItemSide;\n                    r.bottom = height;\n                    break;\n            }\n\n            freeFlowItem.frame = r;\n            proxies.put(s.getDataAtIndex(i), freeFlowItem);\n        }\n    }\n\n    @Override\n    public HashMap<Object, FreeFlowItem> getItemProxies(int viewPortLeft, int viewPortTop) {\n        Rect viewport = new Rect(viewPortLeft, viewPortTop, viewPortLeft + width, viewPortTop + height);\n        HashMap<Object, FreeFlowItem> ret = new HashMap<Object, FreeFlowItem>();\n\n        for (Map.Entry<Object, FreeFlowItem> entry : proxies.entrySet()) {\n            FreeFlowItem p = entry.getValue();\n            if (Rect.intersects(p.frame, viewport)) {\n                ret.put(entry.getKey(), p);\n            }\n        }\n\n        return ret;\n\n    }\n\n    @Override\n    public FreeFlowItem getFreeFlowItemForItem(Object item) {\n        return proxies.get(item);\n    }\n\n    @Override\n    public int getContentWidth() {\n        if (itemsAdapter == null)\n            return 0;\n\n        int sectionIndex = itemsAdapter.getNumberOfSections() - 1;\n        Section s = itemsAdapter.getSection(sectionIndex);\n\n        if (s.getDataCount() == 0)\n            return 0;\n\n        Object lastFrameData = s.getDataAtIndex(s.getDataCount() - 1);\n        FreeFlowItem fd = proxies.get(lastFrameData);\n\n        return fd.frame.left + fd.frame.width();\n    }\n\n    @Override\n    public int getContentHeight() {\n        return height;\n    }\n\n    @Override\n    public FreeFlowItem getItemAt(float x, float y) {\n        return ViewUtils.getItemAt(proxies, (int) x, (int) y);\n    }\n\n    @Override\n    public boolean verticalScrollEnabled() {\n        return false;\n    }\n\n    @Override\n    public boolean horizontalScrollEnabled() {\n        return true;\n    }\n\n    @Override\n    public void setLayoutParams(FreeFlowLayoutParams params){ }\n}\n```\n. I call invalidateData() at the end of the async load method, after i add the items to the adapter.\n. I too just added the QuiltLayout to the sample and it worked. Something must be amiss with the adapter logic. I am using a custom layout to house the contents of each tile. It's a RelativeLayout that 's been extended to support rounded corners.\n. I figured it out. I had an ItemClickListener registered with each view in the adapter that was stealing the touch events away from the container. Once I removed that scrolling started working.\n. Also I removed the bottom margin in the grid and still experienced the same issue described above.\n. Yes, here's the layout that houses the container. I even tried without the margins.\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout android:id=\"@+id/featured_feed_layout\"\n                xmlns:android=\"http://schemas.android.com/apk/res/android\"\n                android:background=\"@android:color/holo_blue_light\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\">\n\n    <com.comcast.freeflow.core.FreeFlowContainer\n        android:id=\"@+id/quilt_view\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_marginBottom=\"@dimen/grid_bottom_margin\"\n        android:layout_marginTop=\"@dimen/grid_top_margin\" />\n\n    <ProgressBar android:id=\"@+id/splash_progress_bar\"\n                 android:layout_width=\"wrap_content\"\n                 android:layout_height=\"wrap_content\"\n                 android:layout_centerInParent=\"true\"\n                 android:indeterminateDrawable=\"@drawable/progress_bar\"/>\n\n</RelativeLayout>\n```\n. Are you seeing clipped content even with your RoundedRelativeLayout variation? So changing the layout to account for the margins would solve the issue?\n. Even with using the layout above?\n. Ah ok. Yea, using drawRoundRect vs clipPath produces the desired behavior but I can't for the life of me figure out how to make the RelativeLayout corner's round without the paint color mask.\n. Thanks for the help @arpit. Although the edges aren't anti-aliased, it does the trick: https://gist.github.com/jerrellmardis/9240278\n\nClosing.\n. Here's a video of the issue I described above. The video is not as smooth as I would like but you can definitely see the issue at roughly the 16 and 27 second marks. \n\nVideo: https://dl.dropboxusercontent.com/u/93908706/free_flow_scrolling.mp4\n. Sure\n\nHere's the code where I setup the container/layout.\n\n``` @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        if (container == null) {\n            return null;\n        }\n\n        final View view = inflater.inflate(R.layout.fragment_feed, container, false);\n\n        ButterKnife.inject(this, view);\n\n        mFeedAdapter = new FeedAdapter(getActivity(), new ArrayList<QuiltPatch>(), mFeedType);\n        mFeedAdapter.setOnItemClickListener(FeedFragment.this);\n        custom = new QuiltLayout(getActivity());\n        mFreeFlowContainer.setLayout(custom);\n        mFreeFlowContainer.setAdapter(mFeedAdapter);\n\n        loadData();\n\n        return view;\n    }\n```\n\nHere's the QuiltLayout code\n\n```\npublic class QuiltLayout extends FreeFlowLayoutBase implements FreeFlowLayout {\n\n    private static final String TAG = \"QuiltLayout\";\n\n    private static final float REGULAR_HEIGHT_H_RATIO = .4f;\n    private static final float LARGE_HEIGHT_H_RATIO = .6f;\n\n    private Context mContext;\n    private HashMap<Object, FreeFlowItem> proxies = new HashMap<Object, FreeFlowItem>();\n    private Section s;\n    private int largeItemSide;\n    private int regularItemSide;\n\n    public QuiltLayout(Context context) {\n        mContext = context;\n    }\n\n    @Override\n    public void setDimensions(int measuredWidth, int measuredHeight) {\n        super.setDimensions(measuredWidth, measuredHeight);\n        regularItemSide = mContext.getResources().getDimensionPixelSize(R.dimen.patch_width_1);\n        largeItemSide = mContext.getResources().getDimensionPixelSize(R.dimen.patch_width_2);\n    }\n\n    @Override\n    public void prepareLayout() {\n        proxies.clear();\n\n        s = itemsAdapter.getSection(0);\n\n        for (int i = 0; i < s.getDataCount(); i++) {\n            FreeFlowItem freeFlowItem = new FreeFlowItem();\n            freeFlowItem.isHeader = false;\n            freeFlowItem.itemIndex = i;\n            freeFlowItem.itemSection = 0;\n            freeFlowItem.data = s.getDataAtIndex(i);\n\n            Rect r = new Rect();\n\n            switch (i) {\n                case 0:\n                    r.left = 0;\n                    r.top = 0;\n                    r.right = largeItemSide;\n                    r.bottom = height;\n                    break;\n                case 1:\n                    r.left = 2 * regularItemSide;\n                    r.top = 0;\n                    r.right = r.left + regularItemSide;\n                    r.bottom = Math.round(height * REGULAR_HEIGHT_H_RATIO);\n                    break;\n                case 2:\n                    r.left = 2 * regularItemSide;\n                    r.top = Math.round(height * REGULAR_HEIGHT_H_RATIO);\n                    r.right = r.left + regularItemSide;\n                    r.bottom = height;\n                    break;\n                case 3:\n                    r.left = 3 * regularItemSide;\n                    r.top = 0;\n                    r.right = r.left + regularItemSide;\n                    r.bottom = Math.round(height * LARGE_HEIGHT_H_RATIO);\n                    break;\n                case 4:\n                    r.left = 3 * regularItemSide;\n                    r.top = Math.round(height * LARGE_HEIGHT_H_RATIO);\n                    r.right = r.left + regularItemSide;\n                    r.bottom = height;\n                    break;\n                case 5:\n                    r.left = 2 * largeItemSide;\n                    r.top = Math.round(height * LARGE_HEIGHT_H_RATIO);\n                    r.right = r.left + regularItemSide;\n                    r.bottom = height;\n                    break;\n                default:\n                    r.left = i * largeItemSide;\n                    r.top = 0;\n                    r.right = r.left + regularItemSide;\n                    r.bottom = height;\n                    break;\n            }\n\n            freeFlowItem.frame = r;\n            proxies.put(s.getDataAtIndex(i), freeFlowItem);\n        }\n    }\n\n    @Override\n    public HashMap<Object, FreeFlowItem> getItemProxies(int viewPortLeft, int viewPortTop) {\n        Rect viewport = new Rect(viewPortLeft, viewPortTop, viewPortLeft + width, viewPortTop + height);\n        HashMap<Object, FreeFlowItem> ret = new HashMap<Object, FreeFlowItem>();\n\n        for (Map.Entry<Object, FreeFlowItem> entry : proxies.entrySet()) {\n            FreeFlowItem p = entry.getValue();\n            if (Rect.intersects(p.frame, viewport)) {\n                ret.put(entry.getKey(), p);\n            }\n        }\n\n        return ret;\n\n    }\n\n    @Override\n    public FreeFlowItem getFreeFlowItemForItem(Object item) {\n        return proxies.get(item);\n    }\n\n    @Override\n    public int getContentWidth() {\n        if (itemsAdapter == null)\n            return 0;\n\n        int sectionIndex = itemsAdapter.getNumberOfSections() - 1;\n        Section s = itemsAdapter.getSection(sectionIndex);\n\n        if (s.getDataCount() == 0)\n            return 0;\n\n        Object lastFrameData = s.getDataAtIndex(s.getDataCount() - 1);\n        FreeFlowItem fd = proxies.get(lastFrameData);\n\n        return fd.frame.left + fd.frame.width();\n    }\n\n    @Override\n    public int getContentHeight() {\n        return height;\n    }\n\n    @Override\n    public FreeFlowItem getItemAt(float x, float y) {\n        return ViewUtils.getItemAt(proxies, (int) x, (int) y);\n    }\n\n    @Override\n    public boolean verticalScrollEnabled() {\n        return false;\n    }\n\n    @Override\n    public boolean horizontalScrollEnabled() {\n        return true;\n    }\n\n    @Override\n    public void setLayoutParams(FreeFlowLayoutParams params){ }\n}\n```\n. I call invalidateData() at the end of the async load method, after i add the items to the adapter.\n. I too just added the QuiltLayout to the sample and it worked. Something must be amiss with the adapter logic. I am using a custom layout to house the contents of each tile. It's a RelativeLayout that 's been extended to support rounded corners.\n. I figured it out. I had an ItemClickListener registered with each view in the adapter that was stealing the touch events away from the container. Once I removed that scrolling started working.\n. Also I removed the bottom margin in the grid and still experienced the same issue described above.\n. Yes, here's the layout that houses the container. I even tried without the margins.\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout android:id=\"@+id/featured_feed_layout\"\n                xmlns:android=\"http://schemas.android.com/apk/res/android\"\n                android:background=\"@android:color/holo_blue_light\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\">\n\n    <com.comcast.freeflow.core.FreeFlowContainer\n        android:id=\"@+id/quilt_view\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_marginBottom=\"@dimen/grid_bottom_margin\"\n        android:layout_marginTop=\"@dimen/grid_top_margin\" />\n\n    <ProgressBar android:id=\"@+id/splash_progress_bar\"\n                 android:layout_width=\"wrap_content\"\n                 android:layout_height=\"wrap_content\"\n                 android:layout_centerInParent=\"true\"\n                 android:indeterminateDrawable=\"@drawable/progress_bar\"/>\n\n</RelativeLayout>\n```\n. Are you seeing clipped content even with your RoundedRelativeLayout variation? So changing the layout to account for the margins would solve the issue?\n. Even with using the layout above?\n. Ah ok. Yea, using drawRoundRect vs clipPath produces the desired behavior but I can't for the life of me figure out how to make the RelativeLayout corner's round without the paint color mask.\n. Thanks for the help @arpit. Although the edges aren't anti-aliased, it does the trick: https://gist.github.com/jerrellmardis/9240278\n\nClosing.\n. Here's a video of the issue I described above. The video is not as smooth as I would like but you can definitely see the issue at roughly the 16 and 27 second marks. \n\nVideo: https://dl.dropboxusercontent.com/u/93908706/free_flow_scrolling.mp4\n. ",
    "mingfai": "my change is actually just one line of code change as follows:\n\n```\nViewCompat.postInvalidateOnAnimation(this);\n```\n\nit's too trivial. would you mind just copy-and-paste the code (or take this idea and implement it yourself :-) ) I'll sign the agreement next time if I got real contribution.\n. I think my PR is too trivial that doesn't deserve any credit. If I contribute anything more meaningful, I'll definitely submit the doc. You may just copy that one line change and close this issue. Thank you. \n. my change is actually just one line of code change as follows:\n\n```\nViewCompat.postInvalidateOnAnimation(this);\n```\n\nit's too trivial. would you mind just copy-and-paste the code (or take this idea and implement it yourself :-) ) I'll sign the agreement next time if I got real contribution.\n. I think my PR is too trivial that doesn't deserve any credit. If I contribute anything more meaningful, I'll definitely submit the doc. You may just copy that one line change and close this issue. Thank you. \n. ",
    "xuelvming": "I think I find the same issue on my samsung mobile too. This problem happens both in the two demos, Artbook and FreeflowPhotoGrid .Though I can't find the reason yet. Hope you guys who are good at this wonderful UI layout  ,can fix this problem .Thanks .\n. I find that,this is scrolling issue will occur when we change the layout for the freeflow .It is initial ok when we first launch the demo .\n. I think I find the same issue on my samsung mobile too. This problem happens both in the two demos, Artbook and FreeflowPhotoGrid .Though I can't find the reason yet. Hope you guys who are good at this wonderful UI layout  ,can fix this problem .Thanks .\n. I find that,this is scrolling issue will occur when we change the layout for the freeflow .It is initial ok when we first launch the demo .\n. ",
    "mongle": "Same issue on my Nexus 5 and very rarely scrolling doesn't work at all and misses my touch gesture completely. \n. Same issue on my Nexus 5 and very rarely scrolling doesn't work at all and misses my touch gesture completely. \n. ",
    "jjhesk": "+1\n. I will suggest to start looking at the code in the freeflowcontainer.java @jerrellmardis @zhumingu, @mongle\n\n``` java\n/**\n     * Computes the Rectangle that defines the ViewPort. The Container tries to\n     * keep the view at the top left of the old layout visible in the new\n     * layout.\n     *\n     * @see getViewportTop\n     * @see getViewportLeft\n     */\n    protected void computeViewPort(FreeFlowLayout newLayout) {\n```\n\n@Arpit Mathur can you take a look?\n. I am getting the measuredHeight as 0 #78 \n. i think it doesnt work with swipe refresh layout because it has intercept the touch event but you can add a piece of code from the callback function to stop the touch event. normally just using it as like a scroll view. \n. I have also found this error too. I posted in #78  \n. Finally I found out that component <com.comcast.freeflow.core.FreeFlowContainer> cannot put under \n`RelativeLayout, ScrollView, LinearLayout` but only can be run under `FrameLayout`. I think the system should remind the developer to put the <com.comcast.freeflow.core.FreeFlowContainer/> into the right layout. \n. +1\n. I will suggest to start looking at the code in the freeflowcontainer.java @jerrellmardis @zhumingu, @mongle\n\n``` java\n/**\n     * Computes the Rectangle that defines the ViewPort. The Container tries to\n     * keep the view at the top left of the old layout visible in the new\n     * layout.\n     *\n     * @see getViewportTop\n     * @see getViewportLeft\n     */\n    protected void computeViewPort(FreeFlowLayout newLayout) {\n```\n\n@Arpit Mathur can you take a look?\n. I am getting the measuredHeight as 0 #78 \n. i think it doesnt work with swipe refresh layout because it has intercept the touch event but you can add a piece of code from the callback function to stop the touch event. normally just using it as like a scroll view. \n. I have also found this error too. I posted in #78  \n. Finally I found out that component <com.comcast.freeflow.core.FreeFlowContainer> cannot put under \n`RelativeLayout, ScrollView, LinearLayout` but only can be run under `FrameLayout`. I think the system should remind the developer to put the <com.comcast.freeflow.core.FreeFlowContainer/> into the right layout. \n. ",
    "zhumingu": "+1\n. +1\n. ",
    "yorkwang": "Meet the same issue, any update?\n. Meet the same issue, any update?\n. ",
    "FrancoisBlavoet": "Awesome !\nJust in case, the result of this blog entry is also available (& maintained) here : https://github.com/chrisbanes/gradle-mvn-push\n. Awesome !\nJust in case, the result of this blog entry is also available (& maintained) here : https://github.com/chrisbanes/gradle-mvn-push\n. ",
    "alopix": "Any update on this one? I saw some commits to prep for maven but couldn't find anything on maven yet.\n. @arpit if you follow the instructions on https://github.com/chrisbanes/gradle-mvn-push it should work quite easily. did push some internal projects to a local maven repo already.\nunfortunately currently don't have the time to do it for FreeFlow myself\n. Any update on this one? I saw some commits to prep for maven but couldn't find anything on maven yet.\n. @arpit if you follow the instructions on https://github.com/chrisbanes/gradle-mvn-push it should work quite easily. did push some internal projects to a local maven repo already.\nunfortunately currently don't have the time to do it for FreeFlow myself\n. ",
    "jitpack-io": "Btw, you can currently use it as a Gradle/Maven dependency from:  https://jitpack.io/#Comcast/FreeFlow/d4bdd5edca\n. Btw, you can currently use it as a Gradle/Maven dependency from:  https://jitpack.io/#Comcast/FreeFlow/d4bdd5edca\n. ",
    "DVassilev": "@jitpack-io Thank you very much, that is one of the most useful websites I have seen in a while.\n. @jitpack-io Thank you very much, that is one of the most useful websites I have seen in a while.\n. ",
    "kbala": "Thanks for the suggestion, I tried that, but i have other issues in scrolling when I change the itemHeight.\n\nWhat do you think if I implement this\npublic View getHeaderViewForItem(int section, int position, View convertView, ViewGroup parent);\n\nplease suggest\n\nThanks\n. wow! Thanks a lot, seems it works\n. @rratmansky AbsLayoutContainer.OnItemClickListener works well, but its NOT working when you have only one item in the container. please suggest\n. I checked that, seems the issue still exists. \"Click not working when you one item in the container\"\n. I get the latest, and it works now, Thanks. :)\n. Hey, how to implement long press item click?\n. The problem is... I have set OnItemClickListener for the container, so when i drag down the first item it triggers the click, and when i drag up the last item it triggers the click\n\nplease help\n. Just tested the OnItemLongClickLister, but the app get crashed.\n\n06-17 16:04:25.409: E/AndroidRuntime(25064): java.lang.NullPointerException\n06-17 16:04:25.409: E/AndroidRuntime(25064):    at com.comcast.freeflow.core.FreeFlowContainer$CheckForLongPress.run(FreeFlowContainer.java:1476)\n. Fixed my issue, have to set choice mode\nfreeFlowContainer.setChoiceMode(FreeFlowContainer.CHOICE_MODE_SINGLE);\n. I see, ok. but good if you implement the click perfectly. I have implemented the longpress, but still when i slowly drag the last item upward, long press triggered.\n\nFor me too we dont need long click, click is enough, but it has issue on first and last items.\n. Sure, let me create as new issue. I do click for open the image to zoom, will try to some code with that(i am pretty new to git! )\n. Yep, it works!, Thanks a lot\n. Thanks for the suggestion, I tried that, but i have other issues in scrolling when I change the itemHeight.\n\nWhat do you think if I implement this\npublic View getHeaderViewForItem(int section, int position, View convertView, ViewGroup parent);\n\nplease suggest\n\nThanks\n. wow! Thanks a lot, seems it works\n. @rratmansky AbsLayoutContainer.OnItemClickListener works well, but its NOT working when you have only one item in the container. please suggest\n. I checked that, seems the issue still exists. \"Click not working when you one item in the container\"\n. I get the latest, and it works now, Thanks. :)\n. Hey, how to implement long press item click?\n. The problem is... I have set OnItemClickListener for the container, so when i drag down the first item it triggers the click, and when i drag up the last item it triggers the click\n\nplease help\n. Just tested the OnItemLongClickLister, but the app get crashed.\n\n06-17 16:04:25.409: E/AndroidRuntime(25064): java.lang.NullPointerException\n06-17 16:04:25.409: E/AndroidRuntime(25064):    at com.comcast.freeflow.core.FreeFlowContainer$CheckForLongPress.run(FreeFlowContainer.java:1476)\n. Fixed my issue, have to set choice mode\nfreeFlowContainer.setChoiceMode(FreeFlowContainer.CHOICE_MODE_SINGLE);\n. I see, ok. but good if you implement the click perfectly. I have implemented the longpress, but still when i slowly drag the last item upward, long press triggered.\n\nFor me too we dont need long click, click is enough, but it has issue on first and last items.\n. Sure, let me create as new issue. I do click for open the image to zoom, will try to some code with that(i am pretty new to git! )\n. Yep, it works!, Thanks a lot\n. ",
    "kiezkicker": "I have the same issue. Is there a solution or workaround for it?\n. @kbala works great! Thanks a lot for the fix and your work at this project.\n. I have the same issue. Is there a solution or workaround for it?\n. @kbala works great! Thanks a lot for the fix and your work at this project.\n. ",
    "neil477": "the project does use gradle as a build system\n. the project does use gradle as a build system\n. ",
    "stormzhang": "I know, I think you can make a aar library, so we can use as a gradle dependencies easily.\n. Yeah, thanks! Maybe my statement is not clear, I mean you can upload this library to the Maven central.\n. Ok, thanks a lot.  Looking forward to your great work!\n. I know, I think you can make a aar library, so we can use as a gradle dependencies easily.\n. Yeah, thanks! Maybe my statement is not clear, I mean you can upload this library to the Maven central.\n. Ok, thanks a lot.  Looking forward to your great work!\n. ",
    "jtietema": "Running `./gradlew assemble` should do that. You will find the AAR file somewhere in the build directory.\n. Yes I would love to see that as well. Somebody already requested that in #52 \n. Running `./gradlew assemble` should do that. You will find the AAR file somewhere in the build directory.\n. Yes I would love to see that as well. Somebody already requested that in #52 \n. ",
    "ErikKarlsson": "I did a quick and dirty fix to get the preview working again.\n\nIn the init function of the FreeFlowContainer add this:\nif(isInEditMode())\n   setVisibility(GONE);\n. I did a quick and dirty fix to get the preview working again.\n\nIn the init function of the FreeFlowContainer add this:\nif(isInEditMode())\n   setVisibility(GONE);\n. ",
    "bartbergmans": "Any updates on this?\n. Any updates on this?\n. ",
    "alexiscanny": "I've got the same issue...do you have any idea of how u fixed it?\n. I've got the same issue...do you have any idea of how u fixed it?\n. ",
    "ypresto": "Seems to be caused by this commit https://github.com/Comcast/FreeFlow/commit/c5a6b2a54a74aeb35bf5e836be4c505d6c863dce#diff-c38b0300174165db5f03f319b3a71847L226\nThis removed super.onMeasure() call before return.\n. I'll confirm to my employer to make it sure. (I'll begin the trip tomorrow, reply would be after 5/9).\n\nFYI: how about using https://www.clahub.com/ ? :)\n. OK, I'll sign it. Thank you for considering!\n. Sorry, just sent signed CLA to your email :)\n. Calling moveViewPort() before onMeasure() causes crash.\n\nSo flingRunnable is also affected.\n. For workaround extend FreeFlowContainer and call onMeasure() when `moveViewport(boolean)` is called.\n\n```\n    @SuppressLint(\"WrongCall\") // for call onMeasure() directly instead of measure()\n    @Override\n    protected void moveViewport(boolean isInFlingMode) {\n        if (dataSetChanged) {\n            // XXX: Workaround for onTouchEvent() could be called between notifyDataSetChanged() and layout update in onMeasure()\n            // and passing invalid index to adapter. This enforces layout update before applying scroll.\n            // Refer: https://github.com/Comcast/FreeFlow/issues/85\n            onMeasure(getWidth() | MeasureSpec.EXACTLY, getHeight() | MeasureSpec.EXACTLY);\n        }\n        super.moveViewport(isInFlingMode);\n    }\n```\n. Seems to be caused by this commit https://github.com/Comcast/FreeFlow/commit/c5a6b2a54a74aeb35bf5e836be4c505d6c863dce#diff-c38b0300174165db5f03f319b3a71847L226\nThis removed super.onMeasure() call before return.\n. I'll confirm to my employer to make it sure. (I'll begin the trip tomorrow, reply would be after 5/9).\n\nFYI: how about using https://www.clahub.com/ ? :)\n. OK, I'll sign it. Thank you for considering!\n. Sorry, just sent signed CLA to your email :)\n. Calling moveViewPort() before onMeasure() causes crash.\n\nSo flingRunnable is also affected.\n. For workaround extend FreeFlowContainer and call onMeasure() when `moveViewport(boolean)` is called.\n\n```\n    @SuppressLint(\"WrongCall\") // for call onMeasure() directly instead of measure()\n    @Override\n    protected void moveViewport(boolean isInFlingMode) {\n        if (dataSetChanged) {\n            // XXX: Workaround for onTouchEvent() could be called between notifyDataSetChanged() and layout update in onMeasure()\n            // and passing invalid index to adapter. This enforces layout update before applying scroll.\n            // Refer: https://github.com/Comcast/FreeFlow/issues/85\n            onMeasure(getWidth() | MeasureSpec.EXACTLY, getHeight() | MeasureSpec.EXACTLY);\n        }\n        super.moveViewport(isInFlingMode);\n    }\n```\n. ",
    "meness": "Please help me!\n. Please help me!\n. "
}